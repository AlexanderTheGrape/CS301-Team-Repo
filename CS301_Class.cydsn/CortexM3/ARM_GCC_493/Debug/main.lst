ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	prevVoltage,2,2
 262              		.comm	prevVoltage2,2,2
 263              		.global	displaystring
 264 0009 000000   		.align	2
 265              		.type	displaystring, %object
 266              		.size	displaystring, 64
 267              	displaystring:
 268 000c 43533330 		.ascii	"CS301 2016\012\000"
 268      31203230 
 268      31360A00 
 269 0018 00000000 		.space	52
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.comm	line,64,4
 271              		.comm	entry,64,4
 272              		.comm	usbBuffer,64,4
 273              		.comm	buffer_state,32,4
 274              		.comm	system_state,32,4
 275              		.global	prev_movement_state
 276              		.type	prev_movement_state, %object
 277              		.size	prev_movement_state, 1
 278              	prev_movement_state:
 279 004c 03       		.byte	3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 6


 280              		.global	movement_state
 281              		.type	movement_state, %object
 282              		.size	movement_state, 1
 283              	movement_state:
 284 004d 03       		.byte	3
 285              		.global	track_mode
 286              		.bss
 287              		.type	track_mode, %object
 288              		.size	track_mode, 1
 289              	track_mode:
 290 003c 00       		.space	1
 291              		.global	byteCount
 292              		.type	byteCount, %object
 293              		.size	byteCount, 1
 294              	byteCount:
 295 003d 00       		.space	1
 296              		.comm	packet,2,4
 297              		.global	speed
 298              		.data
 299 004e 0000     		.align	3
 300              		.type	speed, %object
 301              		.size	speed, 8
 302              	speed:
 303 0050 00000000 		.word	0
 304 0054 00002E40 		.word	1076756480
 305              		.comm	tracked_direction,4,4
 306              		.global	instructions
 307              		.bss
 308 003e 0000     		.align	2
 309              		.type	instructions, %object
 310              		.size	instructions, 800
 311              	instructions:
 312 0040 00000000 		.space	800
 312      00000000 
 312      00000000 
 312      00000000 
 312      00000000 
 313              		.global	instructionCount
 314              		.align	1
 315              		.type	instructionCount, %object
 316              		.size	instructionCount, 2
 317              	instructionCount:
 318 0360 0000     		.space	2
 319              		.global	instructionLength
 320              		.align	1
 321              		.type	instructionLength, %object
 322              		.size	instructionLength, 2
 323              	instructionLength:
 324 0362 0000     		.space	2
 325              		.global	sensorsDisabled
 326              		.align	2
 327              		.type	sensorsDisabled, %object
 328              		.size	sensorsDisabled, 4
 329              	sensorsDisabled:
 330 0364 00000000 		.space	4
 331              		.global	robot_direction
 332              		.data
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 7


 333              		.align	2
 334              		.type	robot_direction, %object
 335              		.size	robot_direction, 4
 336              	robot_direction:
 337 0058 02000000 		.word	2
 338              		.global	path
 339              		.bss
 340              		.align	2
 341              		.type	path, %object
 342              		.size	path, 9600
 343              	path:
 344 0368 00000000 		.space	9600
 344      00000000 
 344      00000000 
 344      00000000 
 344      00000000 
 345              		.global	start
 346              		.data
 347              		.align	2
 348              		.type	start, %object
 349              		.size	start, 8
 350              	start:
 351 005c 01000000 		.word	1
 352 0060 01000000 		.word	1
 353              		.global	destination
 354              		.align	2
 355              		.type	destination, %object
 356              		.size	destination, 8
 357              	destination:
 358 0064 0D000000 		.word	13
 359 0068 0B000000 		.word	11
 360              		.global	map
 361              		.align	2
 362              		.type	map, %object
 363              		.size	map, 1140
 364              	map:
 365 006c 01000000 		.word	1
 366 0070 01000000 		.word	1
 367 0074 01000000 		.word	1
 368 0078 01000000 		.word	1
 369 007c 01000000 		.word	1
 370 0080 01000000 		.word	1
 371 0084 01000000 		.word	1
 372 0088 01000000 		.word	1
 373 008c 01000000 		.word	1
 374 0090 01000000 		.word	1
 375 0094 01000000 		.word	1
 376 0098 01000000 		.word	1
 377 009c 01000000 		.word	1
 378 00a0 01000000 		.word	1
 379 00a4 01000000 		.word	1
 380 00a8 01000000 		.word	1
 381 00ac 01000000 		.word	1
 382 00b0 01000000 		.word	1
 383 00b4 01000000 		.word	1
 384 00b8 01000000 		.word	1
 385 00bc 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 8


 386 00c0 00000000 		.word	0
 387 00c4 00000000 		.word	0
 388 00c8 00000000 		.word	0
 389 00cc 00000000 		.word	0
 390 00d0 01000000 		.word	1
 391 00d4 00000000 		.word	0
 392 00d8 01000000 		.word	1
 393 00dc 00000000 		.word	0
 394 00e0 00000000 		.word	0
 395 00e4 00000000 		.word	0
 396 00e8 00000000 		.word	0
 397 00ec 00000000 		.word	0
 398 00f0 00000000 		.word	0
 399 00f4 00000000 		.word	0
 400 00f8 00000000 		.word	0
 401 00fc 00000000 		.word	0
 402 0100 01000000 		.word	1
 403 0104 01000000 		.word	1
 404 0108 01000000 		.word	1
 405 010c 01000000 		.word	1
 406 0110 01000000 		.word	1
 407 0114 01000000 		.word	1
 408 0118 00000000 		.word	0
 409 011c 01000000 		.word	1
 410 0120 00000000 		.word	0
 411 0124 01000000 		.word	1
 412 0128 00000000 		.word	0
 413 012c 01000000 		.word	1
 414 0130 00000000 		.word	0
 415 0134 01000000 		.word	1
 416 0138 01000000 		.word	1
 417 013c 01000000 		.word	1
 418 0140 01000000 		.word	1
 419 0144 01000000 		.word	1
 420 0148 00000000 		.word	0
 421 014c 01000000 		.word	1
 422 0150 01000000 		.word	1
 423 0154 00000000 		.word	0
 424 0158 00000000 		.word	0
 425 015c 00000000 		.word	0
 426 0160 01000000 		.word	1
 427 0164 00000000 		.word	0
 428 0168 01000000 		.word	1
 429 016c 00000000 		.word	0
 430 0170 00000000 		.word	0
 431 0174 00000000 		.word	0
 432 0178 01000000 		.word	1
 433 017c 00000000 		.word	0
 434 0180 00000000 		.word	0
 435 0184 00000000 		.word	0
 436 0188 00000000 		.word	0
 437 018c 00000000 		.word	0
 438 0190 01000000 		.word	1
 439 0194 00000000 		.word	0
 440 0198 01000000 		.word	1
 441 019c 01000000 		.word	1
 442 01a0 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 9


 443 01a4 01000000 		.word	1
 444 01a8 00000000 		.word	0
 445 01ac 01000000 		.word	1
 446 01b0 00000000 		.word	0
 447 01b4 01000000 		.word	1
 448 01b8 00000000 		.word	0
 449 01bc 01000000 		.word	1
 450 01c0 01000000 		.word	1
 451 01c4 01000000 		.word	1
 452 01c8 01000000 		.word	1
 453 01cc 01000000 		.word	1
 454 01d0 01000000 		.word	1
 455 01d4 01000000 		.word	1
 456 01d8 00000000 		.word	0
 457 01dc 01000000 		.word	1
 458 01e0 00000000 		.word	0
 459 01e4 01000000 		.word	1
 460 01e8 01000000 		.word	1
 461 01ec 00000000 		.word	0
 462 01f0 01000000 		.word	1
 463 01f4 00000000 		.word	0
 464 01f8 00000000 		.word	0
 465 01fc 00000000 		.word	0
 466 0200 00000000 		.word	0
 467 0204 00000000 		.word	0
 468 0208 00000000 		.word	0
 469 020c 00000000 		.word	0
 470 0210 00000000 		.word	0
 471 0214 00000000 		.word	0
 472 0218 00000000 		.word	0
 473 021c 00000000 		.word	0
 474 0220 01000000 		.word	1
 475 0224 00000000 		.word	0
 476 0228 01000000 		.word	1
 477 022c 00000000 		.word	0
 478 0230 01000000 		.word	1
 479 0234 01000000 		.word	1
 480 0238 00000000 		.word	0
 481 023c 01000000 		.word	1
 482 0240 01000000 		.word	1
 483 0244 01000000 		.word	1
 484 0248 01000000 		.word	1
 485 024c 01000000 		.word	1
 486 0250 01000000 		.word	1
 487 0254 01000000 		.word	1
 488 0258 01000000 		.word	1
 489 025c 01000000 		.word	1
 490 0260 00000000 		.word	0
 491 0264 01000000 		.word	1
 492 0268 00000000 		.word	0
 493 026c 01000000 		.word	1
 494 0270 00000000 		.word	0
 495 0274 01000000 		.word	1
 496 0278 01000000 		.word	1
 497 027c 01000000 		.word	1
 498 0280 01000000 		.word	1
 499 0284 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 10


 500 0288 00000000 		.word	0
 501 028c 00000000 		.word	0
 502 0290 00000000 		.word	0
 503 0294 00000000 		.word	0
 504 0298 00000000 		.word	0
 505 029c 00000000 		.word	0
 506 02a0 00000000 		.word	0
 507 02a4 00000000 		.word	0
 508 02a8 00000000 		.word	0
 509 02ac 00000000 		.word	0
 510 02b0 01000000 		.word	1
 511 02b4 00000000 		.word	0
 512 02b8 01000000 		.word	1
 513 02bc 00000000 		.word	0
 514 02c0 00000000 		.word	0
 515 02c4 00000000 		.word	0
 516 02c8 01000000 		.word	1
 517 02cc 01000000 		.word	1
 518 02d0 01000000 		.word	1
 519 02d4 01000000 		.word	1
 520 02d8 01000000 		.word	1
 521 02dc 01000000 		.word	1
 522 02e0 01000000 		.word	1
 523 02e4 01000000 		.word	1
 524 02e8 00000000 		.word	0
 525 02ec 01000000 		.word	1
 526 02f0 01000000 		.word	1
 527 02f4 01000000 		.word	1
 528 02f8 01000000 		.word	1
 529 02fc 01000000 		.word	1
 530 0300 00000000 		.word	0
 531 0304 01000000 		.word	1
 532 0308 01000000 		.word	1
 533 030c 01000000 		.word	1
 534 0310 00000000 		.word	0
 535 0314 01000000 		.word	1
 536 0318 01000000 		.word	1
 537 031c 00000000 		.word	0
 538 0320 00000000 		.word	0
 539 0324 00000000 		.word	0
 540 0328 00000000 		.word	0
 541 032c 00000000 		.word	0
 542 0330 00000000 		.word	0
 543 0334 00000000 		.word	0
 544 0338 00000000 		.word	0
 545 033c 00000000 		.word	0
 546 0340 00000000 		.word	0
 547 0344 00000000 		.word	0
 548 0348 01000000 		.word	1
 549 034c 00000000 		.word	0
 550 0350 00000000 		.word	0
 551 0354 00000000 		.word	0
 552 0358 01000000 		.word	1
 553 035c 00000000 		.word	0
 554 0360 01000000 		.word	1
 555 0364 01000000 		.word	1
 556 0368 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 11


 557 036c 01000000 		.word	1
 558 0370 01000000 		.word	1
 559 0374 01000000 		.word	1
 560 0378 01000000 		.word	1
 561 037c 01000000 		.word	1
 562 0380 00000000 		.word	0
 563 0384 01000000 		.word	1
 564 0388 01000000 		.word	1
 565 038c 01000000 		.word	1
 566 0390 00000000 		.word	0
 567 0394 01000000 		.word	1
 568 0398 00000000 		.word	0
 569 039c 01000000 		.word	1
 570 03a0 00000000 		.word	0
 571 03a4 01000000 		.word	1
 572 03a8 00000000 		.word	0
 573 03ac 01000000 		.word	1
 574 03b0 01000000 		.word	1
 575 03b4 00000000 		.word	0
 576 03b8 00000000 		.word	0
 577 03bc 00000000 		.word	0
 578 03c0 00000000 		.word	0
 579 03c4 00000000 		.word	0
 580 03c8 01000000 		.word	1
 581 03cc 00000000 		.word	0
 582 03d0 00000000 		.word	0
 583 03d4 00000000 		.word	0
 584 03d8 01000000 		.word	1
 585 03dc 00000000 		.word	0
 586 03e0 00000000 		.word	0
 587 03e4 00000000 		.word	0
 588 03e8 01000000 		.word	1
 589 03ec 00000000 		.word	0
 590 03f0 00000000 		.word	0
 591 03f4 00000000 		.word	0
 592 03f8 01000000 		.word	1
 593 03fc 01000000 		.word	1
 594 0400 00000000 		.word	0
 595 0404 01000000 		.word	1
 596 0408 01000000 		.word	1
 597 040c 01000000 		.word	1
 598 0410 00000000 		.word	0
 599 0414 01000000 		.word	1
 600 0418 01000000 		.word	1
 601 041c 01000000 		.word	1
 602 0420 00000000 		.word	0
 603 0424 01000000 		.word	1
 604 0428 01000000 		.word	1
 605 042c 01000000 		.word	1
 606 0430 00000000 		.word	0
 607 0434 01000000 		.word	1
 608 0438 01000000 		.word	1
 609 043c 01000000 		.word	1
 610 0440 00000000 		.word	0
 611 0444 01000000 		.word	1
 612 0448 01000000 		.word	1
 613 044c 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 12


 614 0450 00000000 		.word	0
 615 0454 00000000 		.word	0
 616 0458 01000000 		.word	1
 617 045c 00000000 		.word	0
 618 0460 00000000 		.word	0
 619 0464 00000000 		.word	0
 620 0468 00000000 		.word	0
 621 046c 00000000 		.word	0
 622 0470 00000000 		.word	0
 623 0474 00000000 		.word	0
 624 0478 01000000 		.word	1
 625 047c 00000000 		.word	0
 626 0480 00000000 		.word	0
 627 0484 00000000 		.word	0
 628 0488 00000000 		.word	0
 629 048c 00000000 		.word	0
 630 0490 01000000 		.word	1
 631 0494 01000000 		.word	1
 632 0498 01000000 		.word	1
 633 049c 01000000 		.word	1
 634 04a0 01000000 		.word	1
 635 04a4 01000000 		.word	1
 636 04a8 01000000 		.word	1
 637 04ac 01000000 		.word	1
 638 04b0 01000000 		.word	1
 639 04b4 01000000 		.word	1
 640 04b8 01000000 		.word	1
 641 04bc 01000000 		.word	1
 642 04c0 01000000 		.word	1
 643 04c4 01000000 		.word	1
 644 04c8 01000000 		.word	1
 645 04cc 01000000 		.word	1
 646 04d0 01000000 		.word	1
 647 04d4 01000000 		.word	1
 648 04d8 01000000 		.word	1
 649 04dc 01000000 		.word	1
 650              		.global	food_list
 651              		.align	2
 652              		.type	food_list, %object
 653              		.size	food_list, 48
 654              	food_list:
 655 04e0 05000000 		.word	5
 656 04e4 0A000000 		.word	10
 657 04e8 05000000 		.word	5
 658 04ec 03000000 		.word	3
 659 04f0 0D000000 		.word	13
 660 04f4 02000000 		.word	2
 661 04f8 00000000 		.space	24
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.global	food_length
 663              		.align	2
 664              		.type	food_length, %object
 665              		.size	food_length, 4
 666              	food_length:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 13


 667 0510 03000000 		.word	3
 668 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 669              		.align	2
 670              		.global	BT_txInt
 671              		.thumb
 672              		.thumb_func
 673              		.type	BT_txInt, %function
 674              	BT_txInt:
 675              	.LFB63:
 676              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 75
  29:.\main.c      **** 
  30:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  31:.\main.c      **** uint16 instructionCount = 0;
  32:.\main.c      **** uint16 instructionLength = 0;
  33:.\main.c      **** uint32_t sensorsDisabled = 0;
  34:.\main.c      **** 
  35:.\main.c      **** uint32_t robot_direction = 2;
  36:.\main.c      **** 
  37:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  38:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  39:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  42:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  43:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  44:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  45:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  46:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  47:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 14


  48:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  49:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  50:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  51:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  52:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  53:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  54:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  56:.\main.c      **** 
  57:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  58:.\main.c      **** //first number is the y coord, second is x
  59:.\main.c      **** //first number is row, second column
  60:.\main.c      **** 
  61:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  62:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  63:.\main.c      **** //uint8 food_list[6][2]= {{10,1},{1,13},{9,7},{16,13},{17,1}};
  64:.\main.c      **** uint32_t food_length = 3;
  65:.\main.c      **** 
  66:.\main.c      **** void changeToRF();
  67:.\main.c      **** void changeToBT();
  68:.\main.c      **** void brakeMotor();
  69:.\main.c      **** void driveForwards();
  70:.\main.c      **** void initTurnLeft();
  71:.\main.c      **** void initTurnRight();
  72:.\main.c      **** void inittrackLineZ();
  73:.\main.c      **** void trackLineU();
  74:.\main.c      **** void trackLine();
  75:.\main.c      **** void trackLineZ();
  76:.\main.c      **** void initTrackU();
  77:.\main.c      **** void turnLeft();
  78:.\main.c      **** void turnRight();
  79:.\main.c      **** void initForward();
  80:.\main.c      **** void initTurnU();
  81:.\main.c      **** void turnU();
  82:.\main.c      **** void initBrake();
  83:.\main.c      **** void print_ADC();
  84:.\main.c      **** void Quad_Dec_response();
  85:.\main.c      **** void handle_rx_binary();
  86:.\main.c      **** void readFrontSensors();
  87:.\main.c      **** void print_RF();
  88:.\main.c      **** 
  89:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  90:.\main.c      **** //BT
  91:.\main.c      **** CY_ISR(BT_txInt)
  92:.\main.c      **** {
 677              		.loc 1 92 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 7, -4
 685 0002 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
  93:.\main.c      ****     
  94:.\main.c      **** }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 15


 687              		.loc 1 94 0
 688 0004 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0006 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 000a 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE63:
 697              		.size	BT_txInt, .-BT_txInt
 698              		.section	.text.adc_isr,"ax",%progbits
 699              		.align	2
 700              		.global	adc_isr
 701              		.thumb
 702              		.thumb_func
 703              		.type	adc_isr, %function
 704              	adc_isr:
 705              	.LFB64:
  95:.\main.c      **** 
  96:.\main.c      **** //ADC:
  97:.\main.c      **** CY_ISR (adc_isr)
  98:.\main.c      **** {
 706              		.loc 1 98 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
  99:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 100:.\main.c      ****     adc_result = ADC_GetResult16();
 716              		.loc 1 100 0
 717 0004 FFF7FEFF 		bl	ADC_GetResult16
 718 0008 0346     		mov	r3, r0
 719 000a 1A46     		mov	r2, r3
 720 000c 044B     		ldr	r3, .L3
 721 000e 1A80     		strh	r2, [r3]	@ movhi
 101:.\main.c      ****     flag_receive_ADC = 1;
 722              		.loc 1 101 0
 723 0010 044B     		ldr	r3, .L3+4
 724 0012 0122     		movs	r2, #1
 725 0014 1A70     		strb	r2, [r3]
 102:.\main.c      ****     flag_print_rf = 1;
 726              		.loc 1 102 0
 727 0016 044B     		ldr	r3, .L3+8
 728 0018 0122     		movs	r2, #1
 729 001a 1A70     		strb	r2, [r3]
 103:.\main.c      ****     //LED_Write(~LED_Read());
 104:.\main.c      **** }
 730              		.loc 1 104 0
 731 001c 80BD     		pop	{r7, pc}
 732              	.L4:
 733 001e 00BF     		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 16


 734              	.L3:
 735 0020 00000000 		.word	adc_result
 736 0024 00000000 		.word	flag_receive_ADC
 737 0028 00000000 		.word	flag_print_rf
 738              		.cfi_endproc
 739              	.LFE64:
 740              		.size	adc_isr, .-adc_isr
 741              		.global	__aeabi_i2d
 742              		.global	__aeabi_dmul
 743              		.global	__aeabi_dcmpge
 744              		.section	.text.isr_quad1,"ax",%progbits
 745              		.align	2
 746              		.global	isr_quad1
 747              		.thumb
 748              		.thumb_func
 749              		.type	isr_quad1, %function
 750              	isr_quad1:
 751              	.LFB65:
 105:.\main.c      **** 
 106:.\main.c      **** CY_ISR (isr_quad1)
 107:.\main.c      **** {
 752              		.loc 1 107 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756 0000 B0B5     		push	{r4, r5, r7, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 4, -16
 759              		.cfi_offset 5, -12
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 108:.\main.c      ****     //LED_Write(~LED_Read());
 109:.\main.c      ****     last_quad_count1 = quad_count1;
 764              		.loc 1 109 0
 765 0004 5A4B     		ldr	r3, .L13+16
 766 0006 1A88     		ldrh	r2, [r3]
 767 0008 5A4B     		ldr	r3, .L13+20
 768 000a 1A80     		strh	r2, [r3]	@ movhi
 110:.\main.c      ****     last_quad_count2 = quad_count2;
 769              		.loc 1 110 0
 770 000c 5A4B     		ldr	r3, .L13+24
 771 000e 1A88     		ldrh	r2, [r3]
 772 0010 5A4B     		ldr	r3, .L13+28
 773 0012 1A80     		strh	r2, [r3]	@ movhi
 111:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 774              		.loc 1 111 0
 775 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 776 0018 0346     		mov	r3, r0
 777 001a 1A46     		mov	r2, r3
 778 001c 544B     		ldr	r3, .L13+16
 779 001e 1A80     		strh	r2, [r3]	@ movhi
 112:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 780              		.loc 1 112 0
 781 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 782 0024 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 17


 783 0026 1A46     		mov	r2, r3
 784 0028 534B     		ldr	r3, .L13+24
 785 002a 1A80     		strh	r2, [r3]	@ movhi
 113:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 786              		.loc 1 113 0
 787 002c 504B     		ldr	r3, .L13+16
 788 002e 1B88     		ldrh	r3, [r3]
 789 0030 9AB2     		uxth	r2, r3
 790 0032 504B     		ldr	r3, .L13+20
 791 0034 1B88     		ldrh	r3, [r3]
 792 0036 9BB2     		uxth	r3, r3
 793 0038 D31A     		subs	r3, r2, r3
 794 003a 9BB2     		uxth	r3, r3
 795 003c 9AB2     		uxth	r2, r3
 796 003e 504B     		ldr	r3, .L13+32
 797 0040 1A80     		strh	r2, [r3]	@ movhi
 114:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 798              		.loc 1 114 0
 799 0042 4D4B     		ldr	r3, .L13+24
 800 0044 1B88     		ldrh	r3, [r3]
 801 0046 9AB2     		uxth	r2, r3
 802 0048 4C4B     		ldr	r3, .L13+28
 803 004a 1B88     		ldrh	r3, [r3]
 804 004c 9BB2     		uxth	r3, r3
 805 004e D31A     		subs	r3, r2, r3
 806 0050 9BB2     		uxth	r3, r3
 807 0052 9AB2     		uxth	r2, r3
 808 0054 4B4B     		ldr	r3, .L13+36
 809 0056 1A80     		strh	r2, [r3]	@ movhi
 115:.\main.c      ****     
 116:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 810              		.loc 1 116 0
 811 0058 454B     		ldr	r3, .L13+16
 812 005a 1B88     		ldrh	r3, [r3]
 813 005c 1BB2     		sxth	r3, r3
 814 005e 002B     		cmp	r3, #0
 815 0060 B8BF     		it	lt
 816 0062 5B42     		rsblt	r3, r3, #0
 817 0064 40F6B832 		movw	r2, #3000
 818 0068 9342     		cmp	r3, r2
 819 006a 17DD     		ble	.L6
 820              		.loc 1 116 0 is_stmt 0 discriminator 1
 821 006c 464B     		ldr	r3, .L13+40
 822 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 823 0070 012B     		cmp	r3, #1
 824 0072 13D0     		beq	.L6
 825              		.loc 1 116 0 discriminator 2
 826 0074 444B     		ldr	r3, .L13+40
 827 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0078 022B     		cmp	r3, #2
 829 007a 0FD0     		beq	.L6
 830              		.loc 1 116 0 discriminator 3
 831 007c 424B     		ldr	r3, .L13+40
 832 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 0080 072B     		cmp	r3, #7
 834 0082 0BD0     		beq	.L6
 117:.\main.c      ****     {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 18


 118:.\main.c      ****         QuadDec_M1_SetCounter(0);
 835              		.loc 1 118 0 is_stmt 1
 836 0084 0020     		movs	r0, #0
 837 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 119:.\main.c      ****         QuadDec_M2_SetCounter(0);
 838              		.loc 1 119 0
 839 008a 0020     		movs	r0, #0
 840 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 120:.\main.c      ****         quad_count1 = 0;
 841              		.loc 1 120 0
 842 0090 374B     		ldr	r3, .L13+16
 843 0092 0022     		movs	r2, #0
 844 0094 1A80     		strh	r2, [r3]	@ movhi
 121:.\main.c      ****         quad_count2 = 0;
 845              		.loc 1 121 0
 846 0096 384B     		ldr	r3, .L13+24
 847 0098 0022     		movs	r2, #0
 848 009a 1A80     		strh	r2, [r3]	@ movhi
 849              	.L6:
 122:.\main.c      ****     }
 123:.\main.c      **** 
 124:.\main.c      ****     flag_calc_wheelspeed = 1;
 850              		.loc 1 124 0
 851 009c 3B4B     		ldr	r3, .L13+44
 852 009e 0122     		movs	r2, #1
 853 00a0 1A70     		strb	r2, [r3]
 125:.\main.c      ****     
 126:.\main.c      ****     if(track_mode == DEST_TEST)
 854              		.loc 1 126 0
 855 00a2 3B4B     		ldr	r3, .L13+48
 856 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 00a6 062B     		cmp	r3, #6
 858 00a8 56D1     		bne	.L5
 127:.\main.c      ****     {
 128:.\main.c      ****         //track the distance
 129:.\main.c      ****         accum_dist += quad_diff1;
 859              		.loc 1 129 0
 860 00aa 3A4B     		ldr	r3, .L13+52
 861 00ac 1B88     		ldrh	r3, [r3]
 862 00ae 9AB2     		uxth	r2, r3
 863 00b0 334B     		ldr	r3, .L13+32
 864 00b2 1B88     		ldrh	r3, [r3]
 865 00b4 9BB2     		uxth	r3, r3
 866 00b6 1344     		add	r3, r3, r2
 867 00b8 9BB2     		uxth	r3, r3
 868 00ba 9AB2     		uxth	r2, r3
 869 00bc 354B     		ldr	r3, .L13+52
 870 00be 1A80     		strh	r2, [r3]	@ movhi
 130:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 0.8)
 871              		.loc 1 130 0
 872 00c0 344B     		ldr	r3, .L13+52
 873 00c2 1B88     		ldrh	r3, [r3]
 874 00c4 1BB2     		sxth	r3, r3
 875 00c6 002B     		cmp	r3, #0
 876 00c8 B8BF     		it	lt
 877 00ca 5B42     		rsblt	r3, r3, #0
 878 00cc 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 19


 879 00ce FFF7FEFF 		bl	__aeabi_i2d
 880 00d2 0446     		mov	r4, r0
 881 00d4 0D46     		mov	r5, r1
 882 00d6 304B     		ldr	r3, .L13+56
 883 00d8 1B88     		ldrh	r3, [r3]
 884 00da 1BB2     		sxth	r3, r3
 885 00dc 1846     		mov	r0, r3
 886 00de FFF7FEFF 		bl	__aeabi_i2d
 887 00e2 0246     		mov	r2, r0
 888 00e4 0B46     		mov	r3, r1
 889 00e6 1046     		mov	r0, r2
 890 00e8 1946     		mov	r1, r3
 891 00ea 1DA3     		adr	r3, .L13
 892 00ec D3E90023 		ldrd	r2, [r3]
 893 00f0 FFF7FEFF 		bl	__aeabi_dmul
 894 00f4 0246     		mov	r2, r0
 895 00f6 0B46     		mov	r3, r1
 896 00f8 2046     		mov	r0, r4
 897 00fa 2946     		mov	r1, r5
 898 00fc FFF7FEFF 		bl	__aeabi_dcmpge
 899 0100 0346     		mov	r3, r0
 900 0102 002B     		cmp	r3, #0
 901 0104 02D0     		beq	.L8
 131:.\main.c      ****         {
 132:.\main.c      ****             reached_target = 1;
 902              		.loc 1 132 0
 903 0106 254B     		ldr	r3, .L13+60
 904 0108 0122     		movs	r2, #1
 905 010a 1A70     		strb	r2, [r3]
 906              	.L8:
 133:.\main.c      ****         }
 134:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 1.1)
 907              		.loc 1 134 0
 908 010c 214B     		ldr	r3, .L13+52
 909 010e 1B88     		ldrh	r3, [r3]
 910 0110 1BB2     		sxth	r3, r3
 911 0112 002B     		cmp	r3, #0
 912 0114 B8BF     		it	lt
 913 0116 5B42     		rsblt	r3, r3, #0
 914 0118 1846     		mov	r0, r3
 915 011a FFF7FEFF 		bl	__aeabi_i2d
 916 011e 0446     		mov	r4, r0
 917 0120 0D46     		mov	r5, r1
 918 0122 1D4B     		ldr	r3, .L13+56
 919 0124 1B88     		ldrh	r3, [r3]
 920 0126 1BB2     		sxth	r3, r3
 921 0128 1846     		mov	r0, r3
 922 012a FFF7FEFF 		bl	__aeabi_i2d
 923 012e 0246     		mov	r2, r0
 924 0130 0B46     		mov	r3, r1
 925 0132 1046     		mov	r0, r2
 926 0134 1946     		mov	r1, r3
 927 0136 0CA3     		adr	r3, .L13+8
 928 0138 D3E90023 		ldrd	r2, [r3]
 929 013c FFF7FEFF 		bl	__aeabi_dmul
 930 0140 0246     		mov	r2, r0
 931 0142 0B46     		mov	r3, r1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 20


 932 0144 2046     		mov	r0, r4
 933 0146 2946     		mov	r1, r5
 934 0148 FFF7FEFF 		bl	__aeabi_dcmpge
 935 014c 0346     		mov	r3, r0
 936 014e 002B     		cmp	r3, #0
 937 0150 02D0     		beq	.L5
 135:.\main.c      ****         {
 136:.\main.c      ****             overshot_target = 1;
 938              		.loc 1 136 0
 939 0152 134B     		ldr	r3, .L13+64
 940 0154 0122     		movs	r2, #1
 941 0156 1A70     		strb	r2, [r3]
 942              	.L5:
 137:.\main.c      ****         }
 138:.\main.c      ****     }
 139:.\main.c      **** //    if (track_mode == QUAD_STOP)
 140:.\main.c      **** //    {
 141:.\main.c      **** //        accum_dist += quad_diff1;
 142:.\main.c      **** //        char mes[16];
 143:.\main.c      **** //        sprintf(mes, "dist: %d\r\n", accum_dist);
 144:.\main.c      **** //        UART_PutString(mes);
 145:.\main.c      **** //        if(abs(accum_dist) >= target_distance_quad)
 146:.\main.c      **** //        {
 147:.\main.c      **** //            initBrake();
 148:.\main.c      **** //            track_mode = NO_TRACK;
 149:.\main.c      **** //        }
 150:.\main.c      **** //    } else if (track_mode == RF_STOP)
 151:.\main.c      **** //    { 
 152:.\main.c      **** //        // Do pythag
 153:.\main.c      **** //        double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_sta
 154:.\main.c      **** //        if (dist >= target_distance_cm)
 155:.\main.c      **** //        {
 156:.\main.c      **** //            initBrake();
 157:.\main.c      **** //            track_mode = NO_TRACK;
 158:.\main.c      **** //        }
 159:.\main.c      **** //    }
 160:.\main.c      **** }
 943              		.loc 1 160 0
 944 0158 B0BD     		pop	{r4, r5, r7, pc}
 945              	.L14:
 946 015a 00BFAFF3 		.align	3
 946      0080
 947              	.L13:
 948 0160 9A999999 		.word	-1717986918
 949 0164 9999E93F 		.word	1072273817
 950 0168 9A999999 		.word	-1717986918
 951 016c 9999F13F 		.word	1072798105
 952 0170 00000000 		.word	quad_count1
 953 0174 00000000 		.word	last_quad_count1
 954 0178 00000000 		.word	quad_count2
 955 017c 00000000 		.word	last_quad_count2
 956 0180 00000000 		.word	quad_diff1
 957 0184 00000000 		.word	quad_diff2
 958 0188 00000000 		.word	movement_state
 959 018c 00000000 		.word	flag_calc_wheelspeed
 960 0190 00000000 		.word	track_mode
 961 0194 00000000 		.word	accum_dist
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 21


 962 0198 00000000 		.word	target_distance_quad
 963 019c 00000000 		.word	reached_target
 964 01a0 00000000 		.word	overshot_target
 965              		.cfi_endproc
 966              	.LFE65:
 967              		.size	isr_quad1, .-isr_quad1
 968 01a4 AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 969              		.align	2
 970              		.global	isr_turn_timer
 971              		.thumb
 972              		.thumb_func
 973              		.type	isr_turn_timer, %function
 974              	isr_turn_timer:
 975              	.LFB66:
 161:.\main.c      **** 
 162:.\main.c      **** CY_ISR(isr_turn_timer)
 163:.\main.c      **** {
 976              		.loc 1 163 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 00AF     		add	r7, sp, #0
 985              		.cfi_def_cfa_register 7
 164:.\main.c      ****     if(movement_state == LTURN)
 986              		.loc 1 164 0
 987 0004 264B     		ldr	r3, .L21
 988 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0008 012B     		cmp	r3, #1
 990 000a 15D1     		bne	.L16
 165:.\main.c      ****     {
 166:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 991              		.loc 1 166 0
 992 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 993 0010 0346     		mov	r3, r0
 994 0012 1A46     		mov	r2, r3
 995 0014 234B     		ldr	r3, .L21+4
 996 0016 1B88     		ldrh	r3, [r3]
 997 0018 1BB2     		sxth	r3, r3
 998 001a D31A     		subs	r3, r2, r3
 999 001c 002B     		cmp	r3, #0
 1000 001e B8BF     		it	lt
 1001 0020 5B42     		rsblt	r3, r3, #0
 1002 0022 CF2B     		cmp	r3, #207
 1003 0024 3BDD     		ble	.L15
 167:.\main.c      ****         {
 168:.\main.c      ****             //movement_state = STOPPED;
 169:.\main.c      ****             brakeMotor();
 1004              		.loc 1 169 0
 1005 0026 FFF7FEFF 		bl	brakeMotor
 170:.\main.c      ****             movement_state = prev_movement_state;
 1006              		.loc 1 170 0
 1007 002a 1F4B     		ldr	r3, .L21+8
 1008 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 22


 1009 002e 1C4B     		ldr	r3, .L21
 1010 0030 1A70     		strb	r2, [r3]
 171:.\main.c      ****             Timer_2_Stop();
 1011              		.loc 1 171 0
 1012 0032 FFF7FEFF 		bl	Timer_2_Stop
 1013 0036 32E0     		b	.L15
 1014              	.L16:
 172:.\main.c      ****         }
 173:.\main.c      ****     }
 174:.\main.c      ****     else if (movement_state == RTURN)
 1015              		.loc 1 174 0
 1016 0038 194B     		ldr	r3, .L21
 1017 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 003c 022B     		cmp	r3, #2
 1019 003e 15D1     		bne	.L19
 175:.\main.c      ****     {
 176:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1020              		.loc 1 176 0
 1021 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1022 0044 0346     		mov	r3, r0
 1023 0046 1A46     		mov	r2, r3
 1024 0048 164B     		ldr	r3, .L21+4
 1025 004a 1B88     		ldrh	r3, [r3]
 1026 004c 1BB2     		sxth	r3, r3
 1027 004e D31A     		subs	r3, r2, r3
 1028 0050 002B     		cmp	r3, #0
 1029 0052 B8BF     		it	lt
 1030 0054 5B42     		rsblt	r3, r3, #0
 1031 0056 CF2B     		cmp	r3, #207
 1032 0058 21DD     		ble	.L15
 177:.\main.c      ****         {
 178:.\main.c      ****             //movement_state = STOPPED;
 179:.\main.c      ****             brakeMotor();
 1033              		.loc 1 179 0
 1034 005a FFF7FEFF 		bl	brakeMotor
 180:.\main.c      ****             movement_state = prev_movement_state;
 1035              		.loc 1 180 0
 1036 005e 124B     		ldr	r3, .L21+8
 1037 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0062 0F4B     		ldr	r3, .L21
 1039 0064 1A70     		strb	r2, [r3]
 181:.\main.c      ****             Timer_2_Stop();
 1040              		.loc 1 181 0
 1041 0066 FFF7FEFF 		bl	Timer_2_Stop
 1042 006a 18E0     		b	.L15
 1043              	.L19:
 182:.\main.c      ****         }
 183:.\main.c      ****     }
 184:.\main.c      ****     else if (movement_state == UTURN)
 1044              		.loc 1 184 0
 1045 006c 0C4B     		ldr	r3, .L21
 1046 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0070 072B     		cmp	r3, #7
 1048 0072 14D1     		bne	.L15
 185:.\main.c      ****     {
 186:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1049              		.loc 1 186 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 23


 1050 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1051 0078 0346     		mov	r3, r0
 1052 007a 1A46     		mov	r2, r3
 1053 007c 094B     		ldr	r3, .L21+4
 1054 007e 1B88     		ldrh	r3, [r3]
 1055 0080 1BB2     		sxth	r3, r3
 1056 0082 D31A     		subs	r3, r2, r3
 1057 0084 002B     		cmp	r3, #0
 1058 0086 B8BF     		it	lt
 1059 0088 5B42     		rsblt	r3, r3, #0
 1060 008a CF2B     		cmp	r3, #207
 1061 008c 07DD     		ble	.L15
 187:.\main.c      ****         {
 188:.\main.c      ****             //movement_state = STOPPED;
 189:.\main.c      ****             brakeMotor();
 1062              		.loc 1 189 0
 1063 008e FFF7FEFF 		bl	brakeMotor
 190:.\main.c      ****             movement_state = prev_movement_state;
 1064              		.loc 1 190 0
 1065 0092 054B     		ldr	r3, .L21+8
 1066 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1067 0096 024B     		ldr	r3, .L21
 1068 0098 1A70     		strb	r2, [r3]
 191:.\main.c      ****             Timer_2_Stop();
 1069              		.loc 1 191 0
 1070 009a FFF7FEFF 		bl	Timer_2_Stop
 1071              	.L15:
 192:.\main.c      ****         }
 193:.\main.c      ****     }
 194:.\main.c      **** }
 1072              		.loc 1 194 0
 1073 009e 80BD     		pop	{r7, pc}
 1074              	.L22:
 1075              		.align	2
 1076              	.L21:
 1077 00a0 00000000 		.word	movement_state
 1078 00a4 00000000 		.word	start_turn_count
 1079 00a8 00000000 		.word	prev_movement_state
 1080              		.cfi_endproc
 1081              	.LFE66:
 1082              		.size	isr_turn_timer, .-isr_turn_timer
 1083              		.section	.text.Stop_on_line,"ax",%progbits
 1084              		.align	2
 1085              		.global	Stop_on_line
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	Stop_on_line, %function
 1089              	Stop_on_line:
 1090              	.LFB67:
 195:.\main.c      **** 
 196:.\main.c      **** 
 197:.\main.c      **** CY_ISR (Stop_on_line)
 198:.\main.c      **** {
 1091              		.loc 1 198 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 24


 1095              		@ link register save eliminated.
 1096 0000 80B4     		push	{r7}
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 199:.\main.c      ****     movement_state = STOPPED;
 1101              		.loc 1 199 0
 1102 0004 054B     		ldr	r3, .L25
 1103 0006 0322     		movs	r2, #3
 1104 0008 1A70     		strb	r2, [r3]
 200:.\main.c      ****     if(movement_state != DRIVE) return;
 1105              		.loc 1 200 0
 1106 000a 044B     		ldr	r3, .L25
 1107 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 000e 002B     		cmp	r3, #0
 1109 0010 00D0     		beq	.L23
 1110 0012 00BF     		nop
 1111              	.L23:
 201:.\main.c      ****     //initTurnLeft();
 202:.\main.c      **** }
 1112              		.loc 1 202 0
 1113 0014 BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0016 5DF8047B 		ldr	r7, [sp], #4
 1117              		.cfi_restore 7
 1118              		.cfi_def_cfa_offset 0
 1119 001a 7047     		bx	lr
 1120              	.L26:
 1121              		.align	2
 1122              	.L25:
 1123 001c 00000000 		.word	movement_state
 1124              		.cfi_endproc
 1125              	.LFE67:
 1126              		.size	Stop_on_line, .-Stop_on_line
 1127              		.section	.rodata
 1128              		.align	2
 1129              	.LC0:
 1130 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1130      74696E67 
 1130      20726F62 
 1130      6F74210D 
 1130      0A00
 1131              		.section	.text.button,"ax",%progbits
 1132              		.align	2
 1133              		.global	button
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	button, %function
 1137              	button:
 1138              	.LFB68:
 203:.\main.c      **** 
 204:.\main.c      **** CY_ISR (button)
 205:.\main.c      **** {
 1139              		.loc 1 205 0
 1140              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 25


 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 80B5     		push	{r7, lr}
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 206:.\main.c      ****     if(BT_ENABLED)
 1149              		.loc 1 206 0
 1150 0004 054B     		ldr	r3, .L29
 1151 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0008 002B     		cmp	r3, #0
 1153 000a 02D0     		beq	.L28
 207:.\main.c      ****     {
 208:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1154              		.loc 1 208 0
 1155 000c 0448     		ldr	r0, .L29+4
 1156 000e FFF7FEFF 		bl	UART_PutString
 1157              	.L28:
 209:.\main.c      ****     }
 210:.\main.c      ****     movement_state = DRIVE;
 1158              		.loc 1 210 0
 1159 0012 044B     		ldr	r3, .L29+8
 1160 0014 0022     		movs	r2, #0
 1161 0016 1A70     		strb	r2, [r3]
 211:.\main.c      **** }
 1162              		.loc 1 211 0
 1163 0018 80BD     		pop	{r7, pc}
 1164              	.L30:
 1165 001a 00BF     		.align	2
 1166              	.L29:
 1167 001c 00000000 		.word	BT_ENABLED
 1168 0020 00000000 		.word	.LC0
 1169 0024 00000000 		.word	movement_state
 1170              		.cfi_endproc
 1171              	.LFE68:
 1172              		.size	button, .-button
 1173              		.section	.text.isr_adcTimer,"ax",%progbits
 1174              		.align	2
 1175              		.global	isr_adcTimer
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	isr_adcTimer, %function
 1179              	isr_adcTimer:
 1180              	.LFB69:
 212:.\main.c      **** 
 213:.\main.c      **** CY_ISR(isr_adcTimer)
 214:.\main.c      **** {
 1181              		.loc 1 214 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 26


 1189 0002 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 215:.\main.c      ****     ADC_StartConvert();
 1191              		.loc 1 215 0
 1192 0004 FFF7FEFF 		bl	ADC_StartConvert
 216:.\main.c      **** }
 1193              		.loc 1 216 0
 1194 0008 80BD     		pop	{r7, pc}
 1195              		.cfi_endproc
 1196              	.LFE69:
 1197              		.size	isr_adcTimer, .-isr_adcTimer
 1198 000a 00BF     		.section	.rodata
 1199 0012 0000     		.align	2
 1200              	.LC1:
 1201 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1201      7A6F6E65 
 1201      206C6566 
 1201      740D0A00 
 1202              		.section	.text.isr_deadzone,"ax",%progbits
 1203              		.align	2
 1204              		.global	isr_deadzone
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	isr_deadzone, %function
 1208              	isr_deadzone:
 1209              	.LFB70:
 217:.\main.c      **** 
 218:.\main.c      **** CY_ISR(isr_deadzone)
 219:.\main.c      **** {
 1210              		.loc 1 219 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 7, -8
 1217              		.cfi_offset 14, -4
 1218 0002 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 220:.\main.c      ****     sensorsDisabled = 0;
 1220              		.loc 1 220 0
 1221 0004 054B     		ldr	r3, .L33
 1222 0006 0022     		movs	r2, #0
 1223 0008 1A60     		str	r2, [r3]
 221:.\main.c      ****     deadzone = 0;
 1224              		.loc 1 221 0
 1225 000a 054B     		ldr	r3, .L33+4
 1226 000c 0022     		movs	r2, #0
 1227 000e 1A70     		strb	r2, [r3]
 222:.\main.c      ****     Timer_Deadzone_Stop();
 1228              		.loc 1 222 0
 1229 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 223:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1230              		.loc 1 223 0
 1231 0014 0348     		ldr	r0, .L33+8
 1232 0016 FFF7FEFF 		bl	UART_PutString
 224:.\main.c      **** }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 27


 1233              		.loc 1 224 0
 1234 001a 80BD     		pop	{r7, pc}
 1235              	.L34:
 1236              		.align	2
 1237              	.L33:
 1238 001c 00000000 		.word	sensorsDisabled
 1239 0020 00000000 		.word	deadzone
 1240 0024 14000000 		.word	.LC1
 1241              		.cfi_endproc
 1242              	.LFE70:
 1243              		.size	isr_deadzone, .-isr_deadzone
 1244              		.section	.rodata
 1245              		.align	2
 1246              	.LC2:
 1247 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1247      20747261 
 1247      76656C3A 
 1247      2025640D 
 1247      0A00
 1248 0036 0000     		.align	2
 1249              	.LC3:
 1250 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1250      67657265 
 1250      64206174 
 1250      20696E74 
 1250      65727365 
 1251 0055 000000   		.align	2
 1252              	.LC4:
 1253 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1253      7A6F6E65 
 1253      20656E74 
 1253      65726564 
 1253      210D0A00 
 1254              		.align	2
 1255              	.LC5:
 1256 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1256      65742064 
 1256      6973743A 
 1256      2025640D 
 1256      0A00
 1257 007e 0000     		.align	2
 1258              	.LC6:
 1259 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1259      67657265 
 1259      64206174 
 1259      20776869 
 1259      7465206C 
 1260              		.align	2
 1261              	.LC7:
 1262 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1262      67657265 
 1262      64206174 
 1262      20717561 
 1262      6420636F 
 1263              		.section	.text.main,"ax",%progbits
 1264              		.align	2
 1265              		.global	main
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 28


 1266              		.thumb
 1267              		.thumb_func
 1268              		.type	main, %function
 1269              	main:
 1270              	.LFB71:
 225:.\main.c      **** 
 226:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 227:.\main.c      **** 
 228:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 229:.\main.c      **** int main()
 230:.\main.c      **** {  
 1271              		.loc 1 230 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 64
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 90B0     		sub	sp, sp, #64
 1280              		.cfi_def_cfa_offset 72
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 231:.\main.c      **** 
 232:.\main.c      **** // ----- INITIALIZATIONS ----------
 233:.\main.c      ****     CYGlobalIntEnable;
 1283              		.loc 1 233 0
 1284              	@ 233 ".\main.c" 1
 1285 0006 62B6     		CPSIE   i
 1286              	@ 0 "" 2
 234:.\main.c      ****     if(ENABLE_PWM)
 235:.\main.c      ****     {
 236:.\main.c      ****         PWM_1_Start();// starting the pwm
 1287              		.loc 1 236 0
 1288              		.thumb
 1289 0008 FFF7FEFF 		bl	PWM_1_Start
 237:.\main.c      ****         PWM_2_Start();// starting the pwm
 1290              		.loc 1 237 0
 1291 000c FFF7FEFF 		bl	PWM_2_Start
 238:.\main.c      ****     }
 239:.\main.c      ****     
 240:.\main.c      ****     if(ENABLE_ADC)
 241:.\main.c      ****     {
 242:.\main.c      ****         ADC_Start();
 243:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 244:.\main.c      ****         //ADC_StartConvert();
 245:.\main.c      ****         
 246:.\main.c      ****         //start the ADC timer for software trigger mode
 247:.\main.c      ****         Timer_TS_Start();
 248:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 249:.\main.c      ****     }
 250:.\main.c      ****     
 251:.\main.c      ****     if (ENABLE_QUAD)
 252:.\main.c      ****     {
 253:.\main.c      ****         QuadDec_M1_Start();
 1292              		.loc 1 253 0
 1293 0010 FFF7FEFF 		bl	QuadDec_M1_Start
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 29


 254:.\main.c      ****         QuadDec_M2_Start();
 1294              		.loc 1 254 0
 1295 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 255:.\main.c      ****         
 256:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1296              		.loc 1 256 0
 1297 0018 B648     		ldr	r0, .L97
 1298 001a FFF7FEFF 		bl	isr_quad1_StartEx
 257:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1299              		.loc 1 257 0
 1300 001e B648     		ldr	r0, .L97+4
 1301 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 258:.\main.c      ****         
 259:.\main.c      ****         Timer_1_Start();
 1302              		.loc 1 259 0
 1303 0024 FFF7FEFF 		bl	Timer_1_Start
 260:.\main.c      ****     }
 261:.\main.c      ****     
 262:.\main.c      ****     if(ENABLE_STOP){
 263:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 264:.\main.c      ****         
 265:.\main.c      ****     }
 266:.\main.c      ****     isr_button_StartEx(button);
 1304              		.loc 1 266 0
 1305 0028 B448     		ldr	r0, .L97+8
 1306 002a FFF7FEFF 		bl	isr_button_StartEx
 267:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1307              		.loc 1 267 0
 1308 002e B448     		ldr	r0, .L97+12
 1309 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 268:.\main.c      **** 
 269:.\main.c      ****     // ------USB SETUP ----------------    
 270:.\main.c      ****     if (USE_USB){    
 271:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1310              		.loc 1 271 0
 1311 0034 0020     		movs	r0, #0
 1312 0036 0121     		movs	r1, #1
 1313 0038 FFF7FEFF 		bl	USBUART_Start
 272:.\main.c      ****         if (USBUART_GetConfiguration())
 1314              		.loc 1 272 0
 1315 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1316 0040 0346     		mov	r3, r0
 1317 0042 002B     		cmp	r3, #0
 1318 0044 01D0     		beq	.L36
 273:.\main.c      ****             {
 274:.\main.c      ****                  USBUART_CDC_Init();
 1319              		.loc 1 274 0
 1320 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1321              	.L36:
 275:.\main.c      ****             }
 276:.\main.c      ****     }
 277:.\main.c      ****     
 278:.\main.c      ****     if(BIN_ENABLED){
 1322              		.loc 1 278 0
 1323 004a AE4B     		ldr	r3, .L97+16
 1324 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 004e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 30


 1326 0050 01D0     		beq	.L37
 279:.\main.c      ****         changeToRF();
 1327              		.loc 1 279 0
 1328 0052 FFF7FEFF 		bl	changeToRF
 1329              	.L37:
 280:.\main.c      ****     }
 281:.\main.c      ****     
 282:.\main.c      ****     if(BT_ENABLED){
 1330              		.loc 1 282 0
 1331 0056 AC4B     		ldr	r3, .L97+20
 1332 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 005a 002B     		cmp	r3, #0
 1334 005c 01D0     		beq	.L38
 283:.\main.c      ****         changeToBT();
 1335              		.loc 1 283 0
 1336 005e FFF7FEFF 		bl	changeToBT
 1337              	.L38:
 284:.\main.c      ****     }
 285:.\main.c      ****     
 286:.\main.c      ****     uint16 actionDebounce = 0;
 1338              		.loc 1 286 0
 1339 0062 0023     		movs	r3, #0
 1340 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1341              	.L93:
 1342              	.LBB2:
 287:.\main.c      ****     
 288:.\main.c      ****     //usbPutString("Started");
 289:.\main.c      ****     for(;;)
 290:.\main.c      ****     {
 291:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 292:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1343              		.loc 1 292 0
 1344 0066 FFF7FEFF 		bl	Quad_Dec_response
 293:.\main.c      ****         if(BIN_ENABLED == 1)
 1345              		.loc 1 293 0
 1346 006a A64B     		ldr	r3, .L97+16
 1347 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 006e 012B     		cmp	r3, #1
 1349 0070 03D1     		bne	.L39
 294:.\main.c      ****         {
 295:.\main.c      ****             handle_rx_binary();
 1350              		.loc 1 295 0
 1351 0072 FFF7FEFF 		bl	handle_rx_binary
 296:.\main.c      ****             print_RF();
 1352              		.loc 1 296 0
 1353 0076 FFF7FEFF 		bl	print_RF
 1354              	.L39:
 297:.\main.c      ****         }
 298:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 299:.\main.c      ****         
 300:.\main.c      ****         uint8 frontSensors[5];
 301:.\main.c      ****         readFrontSensors(frontSensors);
 1355              		.loc 1 301 0
 1356 007a 07F13403 		add	r3, r7, #52
 1357 007e 1846     		mov	r0, r3
 1358 0080 FFF7FEFF 		bl	readFrontSensors
 302:.\main.c      ****         
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 31


 303:.\main.c      ****         switch(track_mode)
 1359              		.loc 1 303 0
 1360 0084 A14B     		ldr	r3, .L97+24
 1361 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 0088 072B     		cmp	r3, #7
 1363 008a 00F29382 		bhi	.L40
 1364 008e 01A2     		adr	r2, .L42
 1365 0090 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1366              		.p2align 2
 1367              	.L42:
 1368 0094 B5050000 		.word	.L40+1
 1369 0098 B5050000 		.word	.L40+1
 1370 009c B5050000 		.word	.L40+1
 1371 00a0 B5000000 		.word	.L45+1
 1372 00a4 B5050000 		.word	.L40+1
 1373 00a8 F9000000 		.word	.L47+1
 1374 00ac 1F010000 		.word	.L48+1
 1375 00b0 1F010000 		.word	.L48+1
 1376              		.p2align 1
 1377              	.L45:
 304:.\main.c      ****         {
 305:.\main.c      ****             case SQUARE_TRACK:
 306:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1378              		.loc 1 306 0
 1379 00b4 964B     		ldr	r3, .L97+28
 1380 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 00b8 012B     		cmp	r3, #1
 1382 00ba 1CD0     		beq	.L49
 1383              		.loc 1 306 0 is_stmt 0 discriminator 1
 1384 00bc 944B     		ldr	r3, .L97+28
 1385 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 00c0 022B     		cmp	r3, #2
 1387 00c2 18D0     		beq	.L49
 307:.\main.c      ****                 {
 308:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1388              		.loc 1 308 0 is_stmt 1
 1389 00c4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1390 00c8 012B     		cmp	r3, #1
 1391 00ca 06D1     		bne	.L50
 1392              		.loc 1 308 0 is_stmt 0 discriminator 1
 1393 00cc 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1394 00d0 012B     		cmp	r3, #1
 1395 00d2 02D1     		bne	.L50
 309:.\main.c      ****                         initTurnLeft();
 1396              		.loc 1 309 0 is_stmt 1
 1397 00d4 FFF7FEFF 		bl	initTurnLeft
 1398 00d8 0DE0     		b	.L49
 1399              	.L50:
 310:.\main.c      ****                     }
 311:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1400              		.loc 1 311 0
 1401 00da 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1402 00de 012B     		cmp	r3, #1
 1403 00e0 06D1     		bne	.L51
 1404              		.loc 1 311 0 is_stmt 0 discriminator 1
 1405 00e2 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1406 00e6 012B     		cmp	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 32


 1407 00e8 02D1     		bne	.L51
 312:.\main.c      ****                     {
 313:.\main.c      ****                         initTurnRight();
 1408              		.loc 1 313 0 is_stmt 1
 1409 00ea FFF7FEFF 		bl	initTurnRight
 1410 00ee 02E0     		b	.L49
 1411              	.L51:
 314:.\main.c      ****                     }
 315:.\main.c      ****                     else inittrackLineZ();
 1412              		.loc 1 315 0
 1413 00f0 FFF7FEFF 		bl	inittrackLineZ
 316:.\main.c      ****                 }
 317:.\main.c      ****             break;
 1414              		.loc 1 317 0
 1415 00f4 5EE2     		b	.L40
 1416              	.L49:
 1417 00f6 5DE2     		b	.L40
 1418              	.L47:
 318:.\main.c      ****             case NO_TRACK:
 319:.\main.c      ****             break;
 320:.\main.c      ****             case CURVE_TRACK:
 321:.\main.c      ****             break;
 322:.\main.c      ****             case U_TRACK:
 323:.\main.c      ****             break;
 324:.\main.c      ****             case QUAD_STOP:
 325:.\main.c      ****             break;
 326:.\main.c      ****             case RF_STOP:
 327:.\main.c      ****                 if(initial_pos_valid == 1)
 1419              		.loc 1 327 0
 1420 00f8 864B     		ldr	r3, .L97+32
 1421 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 00fc 012B     		cmp	r3, #1
 1423 00fe 0DD1     		bne	.L52
 328:.\main.c      ****                 {
 329:.\main.c      ****                     //changeToBT();
 330:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 331:.\main.c      ****                     //changeToRF();
 332:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1424              		.loc 1 332 0
 1425 0100 854B     		ldr	r3, .L97+36
 1426 0102 5A88     		ldrh	r2, [r3, #2]
 1427 0104 854B     		ldr	r3, .L97+40
 1428 0106 1A80     		strh	r2, [r3]	@ movhi
 333:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1429              		.loc 1 333 0
 1430 0108 834B     		ldr	r3, .L97+36
 1431 010a 9A88     		ldrh	r2, [r3, #4]
 1432 010c 844B     		ldr	r3, .L97+44
 1433 010e 1A80     		strh	r2, [r3]	@ movhi
 334:.\main.c      ****                     initial_pos_valid = 2;
 1434              		.loc 1 334 0
 1435 0110 804B     		ldr	r3, .L97+32
 1436 0112 0222     		movs	r2, #2
 1437 0114 1A70     		strb	r2, [r3]
 335:.\main.c      ****                     initForward();
 1438              		.loc 1 335 0
 1439 0116 FFF7FEFF 		bl	initForward
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 33


 336:.\main.c      ****                 }
 337:.\main.c      ****             break;
 1440              		.loc 1 337 0
 1441 011a 4BE2     		b	.L40
 1442              	.L52:
 1443 011c 4AE2     		b	.L40
 1444              	.L48:
 338:.\main.c      ****             case MAP_TRAVERSE:
 339:.\main.c      ****             case DEST_TEST:
 340:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1445              		.loc 1 340 0
 1446 011e 7C4B     		ldr	r3, .L97+28
 1447 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0122 012B     		cmp	r3, #1
 1449 0124 00F04582 		beq	.L53
 1450              		.loc 1 340 0 is_stmt 0 discriminator 1
 1451 0128 794B     		ldr	r3, .L97+28
 1452 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 012c 022B     		cmp	r3, #2
 1454 012e 00F04082 		beq	.L53
 1455              		.loc 1 340 0 discriminator 2
 1456 0132 774B     		ldr	r3, .L97+28
 1457 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 0136 072B     		cmp	r3, #7
 1459 0138 00F03B82 		beq	.L53
 1460              	.LBB3:
 341:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 342:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1461              		.loc 1 342 0 is_stmt 1
 1462 013c 794B     		ldr	r3, .L97+48
 1463 013e 1B88     		ldrh	r3, [r3]
 1464 0140 1A46     		mov	r2, r3
 1465 0142 794B     		ldr	r3, .L97+52
 1466 0144 9B5C     		ldrb	r3, [r3, r2]
 1467 0146 87F83D30 		strb	r3, [r7, #61]
 343:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1468              		.loc 1 343 0
 1469 014a 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1470 014e 012B     		cmp	r3, #1
 1471 0150 03D1     		bne	.L54
 1472              		.loc 1 343 0 is_stmt 0 discriminator 1
 1473 0152 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1474 0156 012B     		cmp	r3, #1
 1475 0158 09D0     		beq	.L55
 1476              	.L54:
 1477              		.loc 1 343 0 discriminator 3
 1478 015a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1479 015e 012B     		cmp	r3, #1
 1480 0160 40F0FC80 		bne	.L56
 1481              		.loc 1 343 0 discriminator 4
 1482 0164 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1483 0168 012B     		cmp	r3, #1
 1484 016a 40F0F780 		bne	.L56
 1485              	.L55:
 344:.\main.c      ****                         if(sensorsDisabled == 0)
 1486              		.loc 1 344 0 is_stmt 1
 1487 016e 6F4B     		ldr	r3, .L97+56
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 34


 1488 0170 1B68     		ldr	r3, [r3]
 1489 0172 002B     		cmp	r3, #0
 1490 0174 40F0BD80 		bne	.L57
 345:.\main.c      ****                         {
 346:.\main.c      ****                             actionDebounce++;
 1491              		.loc 1 346 0
 1492 0178 FB8F     		ldrh	r3, [r7, #62]
 1493 017a 0133     		adds	r3, r3, #1
 1494 017c FB87     		strh	r3, [r7, #62]	@ movhi
 347:.\main.c      ****                             if(actionDebounce >= 800)
 1495              		.loc 1 347 0
 1496 017e FB8F     		ldrh	r3, [r7, #62]
 1497 0180 B3F5487F 		cmp	r3, #800
 1498 0184 C0F0B580 		bcc	.L57
 1499              	.LBB4:
 348:.\main.c      ****                             {
 349:.\main.c      ****                                 char mes[16];
 350:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1500              		.loc 1 350 0
 1501 0188 694B     		ldr	r3, .L97+60
 1502 018a 1B88     		ldrh	r3, [r3]
 1503 018c 1BB2     		sxth	r3, r3
 1504 018e 07F12402 		add	r2, r7, #36
 1505 0192 1046     		mov	r0, r2
 1506 0194 6749     		ldr	r1, .L97+64
 1507 0196 1A46     		mov	r2, r3
 1508 0198 FFF7FEFF 		bl	sprintf
 351:.\main.c      ****                                  UART_PutString(mes);
 1509              		.loc 1 351 0
 1510 019c 07F12403 		add	r3, r7, #36
 1511 01a0 1846     		mov	r0, r3
 1512 01a2 FFF7FEFF 		bl	UART_PutString
 352:.\main.c      ****                             if(reached_target == 1)
 1513              		.loc 1 352 0
 1514 01a6 644B     		ldr	r3, .L97+68
 1515 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 01aa 012B     		cmp	r3, #1
 1517 01ac 40F0A180 		bne	.L57
 1518              	.LBB5:
 353:.\main.c      ****                             {
 354:.\main.c      ****                                 if(nextStep == 'D')
 1519              		.loc 1 354 0
 1520 01b0 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1521 01b4 442B     		cmp	r3, #68
 1522 01b6 0CD1     		bne	.L59
 355:.\main.c      ****                                 {
 356:.\main.c      ****                                     instructionCount += 2;
 1523              		.loc 1 356 0
 1524 01b8 5A4B     		ldr	r3, .L97+48
 1525 01ba 1B88     		ldrh	r3, [r3]
 1526 01bc 0233     		adds	r3, r3, #2
 1527 01be 9AB2     		uxth	r2, r3
 1528 01c0 584B     		ldr	r3, .L97+48
 1529 01c2 1A80     		strh	r2, [r3]	@ movhi
 357:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1530              		.loc 1 357 0
 1531 01c4 574B     		ldr	r3, .L97+48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 35


 1532 01c6 1B88     		ldrh	r3, [r3]
 1533 01c8 1A46     		mov	r2, r3
 1534 01ca 574B     		ldr	r3, .L97+52
 1535 01cc 9B5C     		ldrb	r3, [r3, r2]
 1536 01ce 87F83D30 		strb	r3, [r7, #61]
 1537              	.L59:
 358:.\main.c      ****                                 }
 359:.\main.c      ****                                 
 360:.\main.c      ****                                 sensorsDisabled = 1;
 1538              		.loc 1 360 0
 1539 01d2 564B     		ldr	r3, .L97+56
 1540 01d4 0122     		movs	r2, #1
 1541 01d6 1A60     		str	r2, [r3]
 361:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1542              		.loc 1 361 0
 1543 01d8 5848     		ldr	r0, .L97+72
 1544 01da FFF7FEFF 		bl	UART_PutString
 362:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1545              		.loc 1 362 0
 1546 01de 5848     		ldr	r0, .L97+76
 1547 01e0 FFF7FEFF 		bl	UART_PutString
 363:.\main.c      ****                                 deadzone = 1;
 1548              		.loc 1 363 0
 1549 01e4 574B     		ldr	r3, .L97+80
 1550 01e6 0122     		movs	r2, #1
 1551 01e8 1A70     		strb	r2, [r3]
 364:.\main.c      ****                                 Timer_Deadzone_WriteCounter(100000);
 1552              		.loc 1 364 0
 1553 01ea 5748     		ldr	r0, .L97+84
 1554 01ec FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 365:.\main.c      ****                                 accum_dist = 0;
 1555              		.loc 1 365 0
 1556 01f0 4F4B     		ldr	r3, .L97+60
 1557 01f2 0022     		movs	r2, #0
 1558 01f4 1A80     		strh	r2, [r3]	@ movhi
 366:.\main.c      ****                                 uint8 nextStepDist;
 367:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1559              		.loc 1 367 0
 1560 01f6 4B4B     		ldr	r3, .L97+48
 1561 01f8 1B88     		ldrh	r3, [r3]
 1562 01fa 1A46     		mov	r2, r3
 1563 01fc 534B     		ldr	r3, .L97+88
 1564 01fe 1B88     		ldrh	r3, [r3]
 1565 0200 053B     		subs	r3, r3, #5
 1566 0202 9A42     		cmp	r2, r3
 1567 0204 07DC     		bgt	.L60
 1568              		.loc 1 367 0 is_stmt 0 discriminator 1
 1569 0206 474B     		ldr	r3, .L97+48
 1570 0208 1B88     		ldrh	r3, [r3]
 1571 020a 0333     		adds	r3, r3, #3
 1572 020c 464A     		ldr	r2, .L97+52
 1573 020e D35C     		ldrb	r3, [r2, r3]
 1574 0210 87F83C30 		strb	r3, [r7, #60]
 1575 0214 02E0     		b	.L61
 1576              	.L60:
 368:.\main.c      ****                                 else nextStepDist = 0;
 1577              		.loc 1 368 0 is_stmt 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 36


 1578 0216 0023     		movs	r3, #0
 1579 0218 87F83C30 		strb	r3, [r7, #60]
 1580              	.L61:
 369:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1581              		.loc 1 369 0
 1582 021c 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1583 0220 013B     		subs	r3, r3, #1
 1584 0222 9BB2     		uxth	r3, r3
 1585 0224 1A46     		mov	r2, r3	@ movhi
 1586 0226 9200     		lsls	r2, r2, #2
 1587 0228 1344     		add	r3, r3, r2
 1588 022a 1A46     		mov	r2, r3	@ movhi
 1589 022c D200     		lsls	r2, r2, #3
 1590 022e D31A     		subs	r3, r2, r3
 1591 0230 9B00     		lsls	r3, r3, #2
 1592 0232 9BB2     		uxth	r3, r3
 1593 0234 9AB2     		uxth	r2, r3
 1594 0236 464B     		ldr	r3, .L97+92
 1595 0238 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****                                 
 371:.\main.c      ****                                 
 372:.\main.c      ****                                 
 373:.\main.c      ****                                 switch(nextStep)
 1596              		.loc 1 373 0
 1597 023a 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1598 023e 4C3B     		subs	r3, r3, #76
 1599 0240 092B     		cmp	r3, #9
 1600 0242 37D8     		bhi	.L94
 1601 0244 01A2     		adr	r2, .L64
 1602 0246 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1603 024a 00BF     		.p2align 2
 1604              	.L64:
 1605 024c 83020000 		.word	.L63+1
 1606 0250 B5020000 		.word	.L94+1
 1607 0254 B5020000 		.word	.L94+1
 1608 0258 B5020000 		.word	.L94+1
 1609 025c B5020000 		.word	.L94+1
 1610 0260 B5020000 		.word	.L94+1
 1611 0264 99020000 		.word	.L65+1
 1612 0268 75020000 		.word	.L66+1
 1613 026c B5020000 		.word	.L94+1
 1614 0270 AF020000 		.word	.L67+1
 1615              		.p2align 1
 1616              	.L66:
 374:.\main.c      ****                                 {
 375:.\main.c      ****                                     case 'S':
 376:.\main.c      ****                                         initTrackU();
 1617              		.loc 1 376 0
 1618 0274 FFF7FEFF 		bl	initTrackU
 377:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1619              		.loc 1 377 0
 1620 0278 42F21070 		movw	r0, #10000
 1621 027c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 378:.\main.c      ****                                         //do nothing
 379:.\main.c      ****                                     break;
 1622              		.loc 1 379 0
 1623 0280 19E0     		b	.L68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 37


 1624              	.L63:
 380:.\main.c      ****                                     case 'L':
 381:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 382:.\main.c      ****                                         initTurnLeft();
 1625              		.loc 1 382 0
 1626 0282 FFF7FEFF 		bl	initTurnLeft
 383:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1627              		.loc 1 383 0
 1628 0286 324B     		ldr	r3, .L97+92
 1629 0288 1B88     		ldrh	r3, [r3]
 1630 028a 9BB2     		uxth	r3, r3
 1631 028c 4B3B     		subs	r3, r3, #75
 1632 028e 9BB2     		uxth	r3, r3
 1633 0290 9AB2     		uxth	r2, r3
 1634 0292 2F4B     		ldr	r3, .L97+92
 1635 0294 1A80     		strh	r2, [r3]	@ movhi
 384:.\main.c      ****                                     break;
 1636              		.loc 1 384 0
 1637 0296 0EE0     		b	.L68
 1638              	.L65:
 385:.\main.c      ****                                     case 'R':
 386:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 387:.\main.c      ****                                         initTurnRight();
 1639              		.loc 1 387 0
 1640 0298 FFF7FEFF 		bl	initTurnRight
 388:.\main.c      ****                                         target_distance_quad += (208 - TURN_OFFSET);
 1641              		.loc 1 388 0
 1642 029c 2C4B     		ldr	r3, .L97+92
 1643 029e 1B88     		ldrh	r3, [r3]
 1644 02a0 9BB2     		uxth	r3, r3
 1645 02a2 8533     		adds	r3, r3, #133
 1646 02a4 9BB2     		uxth	r3, r3
 1647 02a6 9AB2     		uxth	r2, r3
 1648 02a8 294B     		ldr	r3, .L97+92
 1649 02aa 1A80     		strh	r2, [r3]	@ movhi
 389:.\main.c      ****                                         
 390:.\main.c      ****                                     break;
 1650              		.loc 1 390 0
 1651 02ac 03E0     		b	.L68
 1652              	.L67:
 391:.\main.c      ****                                     case 'U':
 392:.\main.c      ****                                         // Direction not tracked any more
 393:.\main.c      ****                                         initTurnU();
 1653              		.loc 1 393 0
 1654 02ae FFF7FEFF 		bl	initTurnU
 394:.\main.c      ****                                        // target_distance_quad += 208;
 395:.\main.c      ****                                     break;
 1655              		.loc 1 395 0
 1656 02b2 00E0     		b	.L68
 1657              	.L94:
 396:.\main.c      ****                                     
 397:.\main.c      ****                                     default:
 398:.\main.c      ****                                         //do nothing
 399:.\main.c      ****                                         break;
 1658              		.loc 1 399 0
 1659 02b4 00BF     		nop
 1660              	.L68:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 38


 400:.\main.c      ****                                 }
 401:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1661              		.loc 1 401 0
 1662 02b6 264B     		ldr	r3, .L97+92
 1663 02b8 1B88     		ldrh	r3, [r3]
 1664 02ba 1BB2     		sxth	r3, r3
 1665 02bc 07F12402 		add	r2, r7, #36
 1666 02c0 1046     		mov	r0, r2
 1667 02c2 2449     		ldr	r1, .L97+96
 1668 02c4 1A46     		mov	r2, r3
 1669 02c6 FFF7FEFF 		bl	sprintf
 402:.\main.c      ****                                  UART_PutString(mes);
 1670              		.loc 1 402 0
 1671 02ca 07F12403 		add	r3, r7, #36
 1672 02ce 1846     		mov	r0, r3
 1673 02d0 FFF7FEFF 		bl	UART_PutString
 403:.\main.c      ****                                 
 404:.\main.c      ****                                 Timer_Deadzone_Start();
 1674              		.loc 1 404 0
 1675 02d4 FFF7FEFF 		bl	Timer_Deadzone_Start
 405:.\main.c      ****                                 reached_target = 0;
 1676              		.loc 1 405 0
 1677 02d8 174B     		ldr	r3, .L97+68
 1678 02da 0022     		movs	r2, #0
 1679 02dc 1A70     		strb	r2, [r3]
 406:.\main.c      ****                                 overshot_target = 0;
 1680              		.loc 1 406 0
 1681 02de 1E4B     		ldr	r3, .L97+100
 1682 02e0 0022     		movs	r2, #0
 1683 02e2 1A70     		strb	r2, [r3]
 407:.\main.c      ****                                 instructionCount += 2;
 1684              		.loc 1 407 0
 1685 02e4 0F4B     		ldr	r3, .L97+48
 1686 02e6 1B88     		ldrh	r3, [r3]
 1687 02e8 0233     		adds	r3, r3, #2
 1688 02ea 9AB2     		uxth	r2, r3
 1689 02ec 0D4B     		ldr	r3, .L97+48
 1690 02ee 1A80     		strh	r2, [r3]	@ movhi
 1691              	.LBE5:
 1692              	.LBE4:
 344:.\main.c      ****                         {
 1693              		.loc 1 344 0
 1694 02f0 5FE1     		b	.L53
 1695              	.L57:
 344:.\main.c      ****                         {
 1696              		.loc 1 344 0 is_stmt 0 discriminator 1
 1697 02f2 5EE1     		b	.L53
 1698              	.L98:
 1699              		.align	2
 1700              	.L97:
 1701 02f4 00000000 		.word	isr_quad1
 1702 02f8 00000000 		.word	isr_turn_timer
 1703 02fc 00000000 		.word	button
 1704 0300 00000000 		.word	isr_deadzone
 1705 0304 00000000 		.word	BIN_ENABLED
 1706 0308 00000000 		.word	BT_ENABLED
 1707 030c 00000000 		.word	track_mode
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 39


 1708 0310 00000000 		.word	movement_state
 1709 0314 00000000 		.word	initial_pos_valid
 1710 0318 00000000 		.word	system_state
 1711 031c 00000000 		.word	initial_x_pos
 1712 0320 00000000 		.word	initial_y_pos
 1713 0324 00000000 		.word	instructionCount
 1714 0328 00000000 		.word	instructions
 1715 032c 00000000 		.word	sensorsDisabled
 1716 0330 00000000 		.word	accum_dist
 1717 0334 24000000 		.word	.LC2
 1718 0338 00000000 		.word	reached_target
 1719 033c 38000000 		.word	.LC3
 1720 0340 58000000 		.word	.LC4
 1721 0344 00000000 		.word	deadzone
 1722 0348 A0860100 		.word	100000
 1723 034c 00000000 		.word	instructionLength
 1724 0350 00000000 		.word	target_distance_quad
 1725 0354 6C000000 		.word	.LC5
 1726 0358 00000000 		.word	overshot_target
 1727              	.L56:
 408:.\main.c      ****                             }
 409:.\main.c      ****                             }
 410:.\main.c      ****                         }
 411:.\main.c      ****                     }
 412:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1728              		.loc 1 412 0 is_stmt 1
 1729 035c 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1730 0360 002B     		cmp	r3, #0
 1731 0362 7AD1     		bne	.L69
 1732              		.loc 1 412 0 is_stmt 0 discriminator 1
 1733 0364 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1734 0368 002B     		cmp	r3, #0
 1735 036a 76D1     		bne	.L69
 1736              		.loc 1 412 0 discriminator 2
 1737 036c 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1738 0370 002B     		cmp	r3, #0
 1739 0372 72D1     		bne	.L69
 1740              		.loc 1 412 0 discriminator 3
 1741 0374 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1742 0378 002B     		cmp	r3, #0
 1743 037a 6ED1     		bne	.L69
 1744              		.loc 1 412 0 discriminator 4
 1745 037c 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1746 0380 002B     		cmp	r3, #0
 1747 0382 6AD1     		bne	.L69
 1748              		.loc 1 412 0 discriminator 5
 1749 0384 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1750 0388 552B     		cmp	r3, #85
 1751 038a 66D1     		bne	.L69
 413:.\main.c      ****                     {
 414:.\main.c      ****                         if(sensorsDisabled == 0)
 1752              		.loc 1 414 0 is_stmt 1
 1753 038c A14B     		ldr	r3, .L99
 1754 038e 1B68     		ldr	r3, [r3]
 1755 0390 002B     		cmp	r3, #0
 1756 0392 61D1     		bne	.L70
 415:.\main.c      ****                         {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 40


 416:.\main.c      ****                                 
 417:.\main.c      ****                                 actionDebounce++;
 1757              		.loc 1 417 0
 1758 0394 FB8F     		ldrh	r3, [r7, #62]
 1759 0396 0133     		adds	r3, r3, #1
 1760 0398 FB87     		strh	r3, [r7, #62]	@ movhi
 418:.\main.c      ****                                 if(actionDebounce >= 3000)
 1761              		.loc 1 418 0
 1762 039a FB8F     		ldrh	r3, [r7, #62]
 1763 039c 40F6B732 		movw	r2, #2999
 1764 03a0 9342     		cmp	r3, r2
 1765 03a2 59D9     		bls	.L70
 419:.\main.c      ****                                 {
 420:.\main.c      ****                                     if(reached_target == 1)
 1766              		.loc 1 420 0
 1767 03a4 9C4B     		ldr	r3, .L99+4
 1768 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 03a8 012B     		cmp	r3, #1
 1770 03aa 55D1     		bne	.L70
 1771              	.LBB6:
 421:.\main.c      ****                                     {
 422:.\main.c      ****                                 char mes[16];
 423:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1772              		.loc 1 423 0
 1773 03ac 9B4B     		ldr	r3, .L99+8
 1774 03ae 1B88     		ldrh	r3, [r3]
 1775 03b0 1BB2     		sxth	r3, r3
 1776 03b2 07F11402 		add	r2, r7, #20
 1777 03b6 1046     		mov	r0, r2
 1778 03b8 9949     		ldr	r1, .L99+12
 1779 03ba 1A46     		mov	r2, r3
 1780 03bc FFF7FEFF 		bl	sprintf
 424:.\main.c      ****                                  UART_PutString(mes);
 1781              		.loc 1 424 0
 1782 03c0 07F11403 		add	r3, r7, #20
 1783 03c4 1846     		mov	r0, r3
 1784 03c6 FFF7FEFF 		bl	UART_PutString
 425:.\main.c      ****                                      accum_dist = 0;
 1785              		.loc 1 425 0
 1786 03ca 944B     		ldr	r3, .L99+8
 1787 03cc 0022     		movs	r2, #0
 1788 03ce 1A80     		strh	r2, [r3]	@ movhi
 426:.\main.c      ****                                 uint8 nextStepDist;
 427:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1789              		.loc 1 427 0
 1790 03d0 944B     		ldr	r3, .L99+16
 1791 03d2 1B88     		ldrh	r3, [r3]
 1792 03d4 1A46     		mov	r2, r3
 1793 03d6 944B     		ldr	r3, .L99+20
 1794 03d8 1B88     		ldrh	r3, [r3]
 1795 03da 053B     		subs	r3, r3, #5
 1796 03dc 9A42     		cmp	r2, r3
 1797 03de 07DC     		bgt	.L71
 1798              		.loc 1 427 0 is_stmt 0 discriminator 1
 1799 03e0 904B     		ldr	r3, .L99+16
 1800 03e2 1B88     		ldrh	r3, [r3]
 1801 03e4 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 41


 1802 03e6 914A     		ldr	r2, .L99+24
 1803 03e8 D35C     		ldrb	r3, [r2, r3]
 1804 03ea 87F83B30 		strb	r3, [r7, #59]
 1805 03ee 02E0     		b	.L72
 1806              	.L71:
 428:.\main.c      ****                                 else nextStepDist = 0;
 1807              		.loc 1 428 0 is_stmt 1
 1808 03f0 0023     		movs	r3, #0
 1809 03f2 87F83B30 		strb	r3, [r7, #59]
 1810              	.L72:
 429:.\main.c      ****                                 
 430:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1811              		.loc 1 430 0
 1812 03f6 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1813 03fa 013B     		subs	r3, r3, #1
 1814 03fc 9BB2     		uxth	r3, r3
 1815 03fe 1A46     		mov	r2, r3	@ movhi
 1816 0400 9200     		lsls	r2, r2, #2
 1817 0402 1344     		add	r3, r3, r2
 1818 0404 1A46     		mov	r2, r3	@ movhi
 1819 0406 D200     		lsls	r2, r2, #3
 1820 0408 D31A     		subs	r3, r2, r3
 1821 040a 9B00     		lsls	r3, r3, #2
 1822 040c 9BB2     		uxth	r3, r3
 1823 040e 9AB2     		uxth	r2, r3
 1824 0410 874B     		ldr	r3, .L99+28
 1825 0412 1A80     		strh	r2, [r3]	@ movhi
 431:.\main.c      ****                                 
 432:.\main.c      ****                                     UART_PutString("Triggered at white light \r\n");
 1826              		.loc 1 432 0
 1827 0414 8748     		ldr	r0, .L99+32
 1828 0416 FFF7FEFF 		bl	UART_PutString
 433:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1829              		.loc 1 433 0
 1830 041a 8748     		ldr	r0, .L99+36
 1831 041c FFF7FEFF 		bl	UART_PutString
 434:.\main.c      ****                                     deadzone = 1;
 1832              		.loc 1 434 0
 1833 0420 864B     		ldr	r3, .L99+40
 1834 0422 0122     		movs	r2, #1
 1835 0424 1A70     		strb	r2, [r3]
 435:.\main.c      ****                                     Timer_Deadzone_WriteCounter(100000);
 1836              		.loc 1 435 0
 1837 0426 8648     		ldr	r0, .L99+44
 1838 0428 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 436:.\main.c      ****                                     Timer_Deadzone_Start();
 1839              		.loc 1 436 0
 1840 042c FFF7FEFF 		bl	Timer_Deadzone_Start
 437:.\main.c      ****                                     actionDebounce = 0;
 1841              		.loc 1 437 0
 1842 0430 0023     		movs	r3, #0
 1843 0432 FB87     		strh	r3, [r7, #62]	@ movhi
 438:.\main.c      ****                                     sensorsDisabled = 1;
 1844              		.loc 1 438 0
 1845 0434 774B     		ldr	r3, .L99
 1846 0436 0122     		movs	r2, #1
 1847 0438 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 42


 439:.\main.c      ****                                     initTurnU();
 1848              		.loc 1 439 0
 1849 043a FFF7FEFF 		bl	initTurnU
 440:.\main.c      ****                                     reached_target = 0;
 1850              		.loc 1 440 0
 1851 043e 764B     		ldr	r3, .L99+4
 1852 0440 0022     		movs	r2, #0
 1853 0442 1A70     		strb	r2, [r3]
 441:.\main.c      ****                                     overshot_target = 0;
 1854              		.loc 1 441 0
 1855 0444 7F4B     		ldr	r3, .L99+48
 1856 0446 0022     		movs	r2, #0
 1857 0448 1A70     		strb	r2, [r3]
 442:.\main.c      ****                                     instructionCount += 2;
 1858              		.loc 1 442 0
 1859 044a 764B     		ldr	r3, .L99+16
 1860 044c 1B88     		ldrh	r3, [r3]
 1861 044e 0233     		adds	r3, r3, #2
 1862 0450 9AB2     		uxth	r2, r3
 1863 0452 744B     		ldr	r3, .L99+16
 1864 0454 1A80     		strh	r2, [r3]	@ movhi
 1865              	.LBE6:
 414:.\main.c      ****                         {
 1866              		.loc 1 414 0
 1867 0456 ACE0     		b	.L53
 1868              	.L70:
 414:.\main.c      ****                         {
 1869              		.loc 1 414 0 is_stmt 0 discriminator 3
 1870 0458 ABE0     		b	.L53
 1871              	.L69:
 443:.\main.c      ****                                 }
 444:.\main.c      ****                             }
 445:.\main.c      ****                         }
 446:.\main.c      ****                     }
 447:.\main.c      ****                     else if (overshot_target == 1 && nextStep == 'D')
 1872              		.loc 1 447 0 is_stmt 1
 1873 045a 7A4B     		ldr	r3, .L99+48
 1874 045c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1875 045e 012B     		cmp	r3, #1
 1876 0460 40F0A280 		bne	.L73
 1877              		.loc 1 447 0 is_stmt 0 discriminator 1
 1878 0464 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1879 0468 442B     		cmp	r3, #68
 1880 046a 40F09D80 		bne	.L73
 1881              	.LBB7:
 448:.\main.c      ****                     {
 449:.\main.c      ****                         
 450:.\main.c      ****                                 instructionCount += 2;
 1882              		.loc 1 450 0 is_stmt 1
 1883 046e 6D4B     		ldr	r3, .L99+16
 1884 0470 1B88     		ldrh	r3, [r3]
 1885 0472 0233     		adds	r3, r3, #2
 1886 0474 9AB2     		uxth	r2, r3
 1887 0476 6B4B     		ldr	r3, .L99+16
 1888 0478 1A80     		strh	r2, [r3]	@ movhi
 451:.\main.c      ****                                 nextStep = instructions[instructionCount]; 
 1889              		.loc 1 451 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 43


 1890 047a 6A4B     		ldr	r3, .L99+16
 1891 047c 1B88     		ldrh	r3, [r3]
 1892 047e 1A46     		mov	r2, r3
 1893 0480 6A4B     		ldr	r3, .L99+24
 1894 0482 9B5C     		ldrb	r3, [r3, r2]
 1895 0484 87F83D30 		strb	r3, [r7, #61]
 452:.\main.c      ****                                 char mes[16];
 453:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1896              		.loc 1 453 0
 1897 0488 644B     		ldr	r3, .L99+8
 1898 048a 1B88     		ldrh	r3, [r3]
 1899 048c 1BB2     		sxth	r3, r3
 1900 048e 3A1D     		adds	r2, r7, #4
 1901 0490 1046     		mov	r0, r2
 1902 0492 6349     		ldr	r1, .L99+12
 1903 0494 1A46     		mov	r2, r3
 1904 0496 FFF7FEFF 		bl	sprintf
 454:.\main.c      ****                                  UART_PutString(mes);
 1905              		.loc 1 454 0
 1906 049a 3B1D     		adds	r3, r7, #4
 1907 049c 1846     		mov	r0, r3
 1908 049e FFF7FEFF 		bl	UART_PutString
 455:.\main.c      ****                                  accum_dist = 0;
 1909              		.loc 1 455 0
 1910 04a2 5E4B     		ldr	r3, .L99+8
 1911 04a4 0022     		movs	r2, #0
 1912 04a6 1A80     		strh	r2, [r3]	@ movhi
 456:.\main.c      ****                                 uint8 nextStepDist;
 457:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1913              		.loc 1 457 0
 1914 04a8 5E4B     		ldr	r3, .L99+16
 1915 04aa 1B88     		ldrh	r3, [r3]
 1916 04ac 1A46     		mov	r2, r3
 1917 04ae 5E4B     		ldr	r3, .L99+20
 1918 04b0 1B88     		ldrh	r3, [r3]
 1919 04b2 053B     		subs	r3, r3, #5
 1920 04b4 9A42     		cmp	r2, r3
 1921 04b6 07DC     		bgt	.L74
 1922              		.loc 1 457 0 is_stmt 0 discriminator 1
 1923 04b8 5A4B     		ldr	r3, .L99+16
 1924 04ba 1B88     		ldrh	r3, [r3]
 1925 04bc 0333     		adds	r3, r3, #3
 1926 04be 5B4A     		ldr	r2, .L99+24
 1927 04c0 D35C     		ldrb	r3, [r2, r3]
 1928 04c2 87F83A30 		strb	r3, [r7, #58]
 1929 04c6 02E0     		b	.L75
 1930              	.L74:
 458:.\main.c      ****                                 else nextStepDist = 0;
 1931              		.loc 1 458 0 is_stmt 1
 1932 04c8 0023     		movs	r3, #0
 1933 04ca 87F83A30 		strb	r3, [r7, #58]
 1934              	.L75:
 459:.\main.c      ****                                 
 460:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1935              		.loc 1 460 0
 1936 04ce 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 1937 04d2 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 44


 1938 04d4 9BB2     		uxth	r3, r3
 1939 04d6 1A46     		mov	r2, r3	@ movhi
 1940 04d8 9200     		lsls	r2, r2, #2
 1941 04da 1344     		add	r3, r3, r2
 1942 04dc 1A46     		mov	r2, r3	@ movhi
 1943 04de D200     		lsls	r2, r2, #3
 1944 04e0 D31A     		subs	r3, r2, r3
 1945 04e2 9B00     		lsls	r3, r3, #2
 1946 04e4 9BB2     		uxth	r3, r3
 1947 04e6 9AB2     		uxth	r2, r3
 1948 04e8 514B     		ldr	r3, .L99+28
 1949 04ea 1A80     		strh	r2, [r3]	@ movhi
 461:.\main.c      ****                                 
 462:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 1950              		.loc 1 462 0
 1951 04ec 5648     		ldr	r0, .L99+52
 1952 04ee FFF7FEFF 		bl	UART_PutString
 463:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1953              		.loc 1 463 0
 1954 04f2 5148     		ldr	r0, .L99+36
 1955 04f4 FFF7FEFF 		bl	UART_PutString
 464:.\main.c      ****                                     deadzone = 1;
 1956              		.loc 1 464 0
 1957 04f8 504B     		ldr	r3, .L99+40
 1958 04fa 0122     		movs	r2, #1
 1959 04fc 1A70     		strb	r2, [r3]
 465:.\main.c      ****                                     Timer_Deadzone_WriteCounter(100000);
 1960              		.loc 1 465 0
 1961 04fe 5048     		ldr	r0, .L99+44
 1962 0500 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 466:.\main.c      ****                                     Timer_Deadzone_Start();
 1963              		.loc 1 466 0
 1964 0504 FFF7FEFF 		bl	Timer_Deadzone_Start
 467:.\main.c      ****                                     actionDebounce = 0;
 1965              		.loc 1 467 0
 1966 0508 0023     		movs	r3, #0
 1967 050a FB87     		strh	r3, [r7, #62]	@ movhi
 468:.\main.c      ****                                     sensorsDisabled = 1;
 1968              		.loc 1 468 0
 1969 050c 414B     		ldr	r3, .L99
 1970 050e 0122     		movs	r2, #1
 1971 0510 1A60     		str	r2, [r3]
 469:.\main.c      ****                                     
 470:.\main.c      ****                                      switch(nextStep)
 1972              		.loc 1 470 0
 1973 0512 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1974 0516 4C3B     		subs	r3, r3, #76
 1975 0518 092B     		cmp	r3, #9
 1976 051a 37D8     		bhi	.L95
 1977 051c 01A2     		adr	r2, .L78
 1978 051e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1979 0522 00BF     		.p2align 2
 1980              	.L78:
 1981 0524 5B050000 		.word	.L77+1
 1982 0528 8D050000 		.word	.L95+1
 1983 052c 8D050000 		.word	.L95+1
 1984 0530 8D050000 		.word	.L95+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 45


 1985 0534 8D050000 		.word	.L95+1
 1986 0538 8D050000 		.word	.L95+1
 1987 053c 71050000 		.word	.L79+1
 1988 0540 4D050000 		.word	.L80+1
 1989 0544 8D050000 		.word	.L95+1
 1990 0548 87050000 		.word	.L81+1
 1991              		.p2align 1
 1992              	.L80:
 471:.\main.c      ****                                 {
 472:.\main.c      ****                                     case 'S':
 473:.\main.c      ****                                         initTrackU();
 1993              		.loc 1 473 0
 1994 054c FFF7FEFF 		bl	initTrackU
 474:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1995              		.loc 1 474 0
 1996 0550 42F21070 		movw	r0, #10000
 1997 0554 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 475:.\main.c      ****                                         //do nothing
 476:.\main.c      ****                                     break;
 1998              		.loc 1 476 0
 1999 0558 19E0     		b	.L82
 2000              	.L77:
 477:.\main.c      ****                                     case 'L':
 478:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 479:.\main.c      ****                                         initTurnLeft();
 2001              		.loc 1 479 0
 2002 055a FFF7FEFF 		bl	initTurnLeft
 480:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2003              		.loc 1 480 0
 2004 055e 344B     		ldr	r3, .L99+28
 2005 0560 1B88     		ldrh	r3, [r3]
 2006 0562 9BB2     		uxth	r3, r3
 2007 0564 4B3B     		subs	r3, r3, #75
 2008 0566 9BB2     		uxth	r3, r3
 2009 0568 9AB2     		uxth	r2, r3
 2010 056a 314B     		ldr	r3, .L99+28
 2011 056c 1A80     		strh	r2, [r3]	@ movhi
 481:.\main.c      ****                                     break;
 2012              		.loc 1 481 0
 2013 056e 0EE0     		b	.L82
 2014              	.L79:
 482:.\main.c      ****                                     case 'R':
 483:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 484:.\main.c      ****                                         initTurnRight();
 2015              		.loc 1 484 0
 2016 0570 FFF7FEFF 		bl	initTurnRight
 485:.\main.c      ****                                         target_distance_quad += 208 - TURN_OFFSET;
 2017              		.loc 1 485 0
 2018 0574 2E4B     		ldr	r3, .L99+28
 2019 0576 1B88     		ldrh	r3, [r3]
 2020 0578 9BB2     		uxth	r3, r3
 2021 057a 8533     		adds	r3, r3, #133
 2022 057c 9BB2     		uxth	r3, r3
 2023 057e 9AB2     		uxth	r2, r3
 2024 0580 2B4B     		ldr	r3, .L99+28
 2025 0582 1A80     		strh	r2, [r3]	@ movhi
 486:.\main.c      ****                                         
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 46


 487:.\main.c      ****                                     break;
 2026              		.loc 1 487 0
 2027 0584 03E0     		b	.L82
 2028              	.L81:
 488:.\main.c      ****                                     case 'U':
 489:.\main.c      ****                                         // Direction not tracked any more
 490:.\main.c      ****                                         initTurnU();
 2029              		.loc 1 490 0
 2030 0586 FFF7FEFF 		bl	initTurnU
 491:.\main.c      ****                                     break;
 2031              		.loc 1 491 0
 2032 058a 00E0     		b	.L82
 2033              	.L95:
 492:.\main.c      ****                                     default:
 493:.\main.c      ****                                         //do nothing
 494:.\main.c      ****                                         break;
 2034              		.loc 1 494 0
 2035 058c 00BF     		nop
 2036              	.L82:
 495:.\main.c      ****                                 }
 496:.\main.c      ****                                     
 497:.\main.c      ****                                     
 498:.\main.c      ****                                     reached_target = 0;
 2037              		.loc 1 498 0 discriminator 5
 2038 058e 224B     		ldr	r3, .L99+4
 2039 0590 0022     		movs	r2, #0
 2040 0592 1A70     		strb	r2, [r3]
 499:.\main.c      ****                                     overshot_target = 0;
 2041              		.loc 1 499 0 discriminator 5
 2042 0594 2B4B     		ldr	r3, .L99+48
 2043 0596 0022     		movs	r2, #0
 2044 0598 1A70     		strb	r2, [r3]
 500:.\main.c      ****                                     instructionCount += 2;
 2045              		.loc 1 500 0 discriminator 5
 2046 059a 224B     		ldr	r3, .L99+16
 2047 059c 1B88     		ldrh	r3, [r3]
 2048 059e 0233     		adds	r3, r3, #2
 2049 05a0 9AB2     		uxth	r2, r3
 2050 05a2 204B     		ldr	r3, .L99+16
 2051 05a4 1A80     		strh	r2, [r3]	@ movhi
 2052              	.LBE7:
 448:.\main.c      ****                         
 2053              		.loc 1 448 0 discriminator 5
 2054 05a6 04E0     		b	.L53
 2055              	.L73:
 501:.\main.c      ****                     }
 502:.\main.c      ****                     else
 503:.\main.c      ****                     {
 504:.\main.c      ****                         inittrackLineZ();
 2056              		.loc 1 504 0
 2057 05a8 FFF7FEFF 		bl	inittrackLineZ
 505:.\main.c      ****                         actionDebounce = 0;
 2058              		.loc 1 505 0
 2059 05ac 0023     		movs	r3, #0
 2060 05ae FB87     		strh	r3, [r7, #62]	@ movhi
 2061              	.LBE3:
 506:.\main.c      ****                     }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 47


 507:.\main.c      ****                 }
 508:.\main.c      ****                 break;
 2062              		.loc 1 508 0
 2063 05b0 FFE7     		b	.L96
 2064              	.L53:
 2065              	.L96:
 2066 05b2 00BF     		nop
 2067              	.L40:
 509:.\main.c      ****         }
 510:.\main.c      ****         
 511:.\main.c      ****         switch(movement_state)
 2068              		.loc 1 511 0
 2069 05b4 254B     		ldr	r3, .L99+56
 2070 05b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2071 05b8 072B     		cmp	r3, #7
 2072 05ba 3FF654AD 		bhi	.L93
 2073 05be 01A2     		adr	r2, .L85
 2074 05c0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2075              		.p2align 2
 2076              	.L85:
 2077 05c4 E5050000 		.word	.L84+1
 2078 05c8 EB050000 		.word	.L86+1
 2079 05cc F1050000 		.word	.L87+1
 2080 05d0 FD050000 		.word	.L88+1
 2081 05d4 03060000 		.word	.L89+1
 2082 05d8 09060000 		.word	.L90+1
 2083 05dc 0F060000 		.word	.L91+1
 2084 05e0 F7050000 		.word	.L92+1
 2085              		.p2align 1
 2086              	.L84:
 512:.\main.c      ****         {
 513:.\main.c      ****             case DRIVE:
 514:.\main.c      ****                 driveForwards();
 2087              		.loc 1 514 0
 2088 05e4 FFF7FEFF 		bl	driveForwards
 515:.\main.c      ****             break;
 2089              		.loc 1 515 0
 2090 05e8 13E0     		b	.L83
 2091              	.L86:
 516:.\main.c      ****             case LTURN:
 517:.\main.c      ****                 turnLeft();
 2092              		.loc 1 517 0
 2093 05ea FFF7FEFF 		bl	turnLeft
 518:.\main.c      ****             break;
 2094              		.loc 1 518 0
 2095 05ee 10E0     		b	.L83
 2096              	.L87:
 519:.\main.c      ****             case RTURN:
 520:.\main.c      ****                 turnRight();
 2097              		.loc 1 520 0
 2098 05f0 FFF7FEFF 		bl	turnRight
 521:.\main.c      ****             break;
 2099              		.loc 1 521 0
 2100 05f4 0DE0     		b	.L83
 2101              	.L92:
 522:.\main.c      ****             case UTURN:
 523:.\main.c      ****                 turnU();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 48


 2102              		.loc 1 523 0
 2103 05f6 FFF7FEFF 		bl	turnU
 524:.\main.c      ****             break;
 2104              		.loc 1 524 0
 2105 05fa 0AE0     		b	.L83
 2106              	.L88:
 525:.\main.c      ****             case STOPPED:
 526:.\main.c      ****                 brakeMotor();
 2107              		.loc 1 526 0
 2108 05fc FFF7FEFF 		bl	brakeMotor
 527:.\main.c      ****             break;
 2109              		.loc 1 527 0
 2110 0600 07E0     		b	.L83
 2111              	.L89:
 528:.\main.c      ****             case TRACKING:
 529:.\main.c      ****                 trackLine();
 2112              		.loc 1 529 0
 2113 0602 FFF7FEFF 		bl	trackLine
 530:.\main.c      ****             break;
 2114              		.loc 1 530 0
 2115 0606 04E0     		b	.L83
 2116              	.L90:
 531:.\main.c      ****             case TRACKING_U:
 532:.\main.c      ****                 trackLineU();
 2117              		.loc 1 532 0
 2118 0608 FFF7FEFF 		bl	trackLineU
 533:.\main.c      ****             break;
 2119              		.loc 1 533 0
 2120 060c 01E0     		b	.L83
 2121              	.L91:
 534:.\main.c      ****             case TRACKING_SOFT:
 535:.\main.c      ****                 trackLineZ();
 2122              		.loc 1 535 0
 2123 060e FFF7FEFF 		bl	trackLineZ
 2124              	.L83:
 2125              	.LBE2:
 536:.\main.c      ****         }      
 537:.\main.c      ****     }   
 2126              		.loc 1 537 0
 2127 0612 28E5     		b	.L93
 2128              	.L100:
 2129              		.align	2
 2130              	.L99:
 2131 0614 00000000 		.word	sensorsDisabled
 2132 0618 00000000 		.word	reached_target
 2133 061c 00000000 		.word	accum_dist
 2134 0620 24000000 		.word	.LC2
 2135 0624 00000000 		.word	instructionCount
 2136 0628 00000000 		.word	instructionLength
 2137 062c 00000000 		.word	instructions
 2138 0630 00000000 		.word	target_distance_quad
 2139 0634 80000000 		.word	.LC6
 2140 0638 58000000 		.word	.LC4
 2141 063c 00000000 		.word	deadzone
 2142 0640 A0860100 		.word	100000
 2143 0644 00000000 		.word	overshot_target
 2144 0648 9C000000 		.word	.LC7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 49


 2145 064c 00000000 		.word	movement_state
 2146              		.cfi_endproc
 2147              	.LFE71:
 2148              		.size	main, .-main
 2149              		.section	.text.handle_rx_binary,"ax",%progbits
 2150              		.align	2
 2151              		.global	handle_rx_binary
 2152              		.thumb
 2153              		.thumb_func
 2154              		.type	handle_rx_binary, %function
 2155              	handle_rx_binary:
 2156              	.LFB72:
 538:.\main.c      **** }
 539:.\main.c      **** 
 540:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 541:.\main.c      **** 
 542:.\main.c      **** void handle_rx_binary()
 543:.\main.c      **** {
 2157              		.loc 1 543 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 32
 2160              		@ frame_needed = 1, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
 2162 0000 80B4     		push	{r7}
 2163              		.cfi_def_cfa_offset 4
 2164              		.cfi_offset 7, -4
 2165 0002 89B0     		sub	sp, sp, #36
 2166              		.cfi_def_cfa_offset 40
 2167 0004 00AF     		add	r7, sp, #0
 2168              		.cfi_def_cfa_register 7
 544:.\main.c      ****     if(flag_rx == 1)
 2169              		.loc 1 544 0
 2170 0006 524B     		ldr	r3, .L121
 2171 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2172 000a 012B     		cmp	r3, #1
 2173 000c 40F09A80 		bne	.L101
 2174              	.LBB8:
 545:.\main.c      ****     {    
 546:.\main.c      ****         flag_rx = 0;
 2175              		.loc 1 546 0
 2176 0010 4F4B     		ldr	r3, .L121
 2177 0012 0022     		movs	r2, #0
 2178 0014 1A70     		strb	r2, [r3]
 547:.\main.c      ****         
 548:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2179              		.loc 1 548 0
 2180 0016 4F4B     		ldr	r3, .L121+4
 2181 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2182 001a 1B02     		lsls	r3, r3, #8
 2183 001c 9AB2     		uxth	r2, r3
 2184 001e 4D4B     		ldr	r3, .L121+4
 2185 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2186 0022 9BB2     		uxth	r3, r3
 2187 0024 1343     		orrs	r3, r3, r2
 2188 0026 9BB2     		uxth	r3, r3
 2189 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 549:.\main.c      ****         char byte_packet[12];
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 50


 550:.\main.c      ****         char string_packet[12];
 551:.\main.c      ****         
 552:.\main.c      ****         switch(byteCount)
 2190              		.loc 1 552 0
 2191 002a 4B4B     		ldr	r3, .L121+8
 2192 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2193 002e 043B     		subs	r3, r3, #4
 2194 0030 1E2B     		cmp	r3, #30
 2195 0032 00F28780 		bhi	.L101
 2196 0036 01A2     		adr	r2, .L105
 2197 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2198              		.p2align 2
 2199              	.L105:
 2200 003c B9000000 		.word	.L104+1
 2201 0040 45010000 		.word	.L101+1
 2202 0044 CD000000 		.word	.L106+1
 2203 0048 45010000 		.word	.L101+1
 2204 004c D5000000 		.word	.L107+1
 2205 0050 45010000 		.word	.L101+1
 2206 0054 DD000000 		.word	.L108+1
 2207 0058 45010000 		.word	.L101+1
 2208 005c E5000000 		.word	.L109+1
 2209 0060 45010000 		.word	.L101+1
 2210 0064 ED000000 		.word	.L110+1
 2211 0068 45010000 		.word	.L101+1
 2212 006c F5000000 		.word	.L111+1
 2213 0070 45010000 		.word	.L101+1
 2214 0074 FD000000 		.word	.L112+1
 2215 0078 45010000 		.word	.L101+1
 2216 007c 05010000 		.word	.L113+1
 2217 0080 45010000 		.word	.L101+1
 2218 0084 0D010000 		.word	.L114+1
 2219 0088 45010000 		.word	.L101+1
 2220 008c 15010000 		.word	.L115+1
 2221 0090 45010000 		.word	.L101+1
 2222 0094 1D010000 		.word	.L116+1
 2223 0098 45010000 		.word	.L101+1
 2224 009c 25010000 		.word	.L117+1
 2225 00a0 45010000 		.word	.L101+1
 2226 00a4 2D010000 		.word	.L118+1
 2227 00a8 45010000 		.word	.L101+1
 2228 00ac 35010000 		.word	.L119+1
 2229 00b0 45010000 		.word	.L101+1
 2230 00b4 3D010000 		.word	.L120+1
 2231              		.p2align 1
 2232              	.L104:
 553:.\main.c      ****         {
 554:.\main.c      ****             case 4:
 555:.\main.c      ****                 buffer_state.rssi = packet[0];
 2233              		.loc 1 555 0
 2234 00b8 264B     		ldr	r3, .L121+4
 2235 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2236 00bc DAB2     		uxtb	r2, r3
 2237 00be 274B     		ldr	r3, .L121+12
 2238 00c0 1A70     		strb	r2, [r3]
 556:.\main.c      ****                 buffer_state.index = packet[1];
 2239              		.loc 1 556 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 51


 2240 00c2 244B     		ldr	r3, .L121+4
 2241 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2242 00c6 254B     		ldr	r3, .L121+12
 2243 00c8 5A70     		strb	r2, [r3, #1]
 557:.\main.c      ****             break;
 2244              		.loc 1 557 0
 2245 00ca 3BE0     		b	.L101
 2246              	.L106:
 558:.\main.c      ****             case 6:
 559:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2247              		.loc 1 559 0
 2248 00cc FA8B     		ldrh	r2, [r7, #30]
 2249 00ce 234B     		ldr	r3, .L121+12
 2250 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 560:.\main.c      ****             break;
 2251              		.loc 1 560 0
 2252 00d2 37E0     		b	.L101
 2253              	.L107:
 561:.\main.c      ****             case 8:
 562:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2254              		.loc 1 562 0
 2255 00d4 FA8B     		ldrh	r2, [r7, #30]
 2256 00d6 214B     		ldr	r3, .L121+12
 2257 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 563:.\main.c      ****             break;
 2258              		.loc 1 563 0
 2259 00da 33E0     		b	.L101
 2260              	.L108:
 564:.\main.c      ****             case 10:
 565:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2261              		.loc 1 565 0
 2262 00dc FA8B     		ldrh	r2, [r7, #30]
 2263 00de 1F4B     		ldr	r3, .L121+12
 2264 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 566:.\main.c      ****             break;
 2265              		.loc 1 566 0
 2266 00e2 2FE0     		b	.L101
 2267              	.L109:
 567:.\main.c      ****             case 12:
 568:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2268              		.loc 1 568 0
 2269 00e4 FA8B     		ldrh	r2, [r7, #30]
 2270 00e6 1D4B     		ldr	r3, .L121+12
 2271 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 569:.\main.c      ****             break;
 2272              		.loc 1 569 0
 2273 00ea 2BE0     		b	.L101
 2274              	.L110:
 570:.\main.c      ****             case 14:
 571:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2275              		.loc 1 571 0
 2276 00ec FA8B     		ldrh	r2, [r7, #30]
 2277 00ee 1B4B     		ldr	r3, .L121+12
 2278 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 572:.\main.c      ****             break;
 2279              		.loc 1 572 0
 2280 00f2 27E0     		b	.L101
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 52


 2281              	.L111:
 573:.\main.c      ****             case 16:
 574:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2282              		.loc 1 574 0
 2283 00f4 FA8B     		ldrh	r2, [r7, #30]
 2284 00f6 194B     		ldr	r3, .L121+12
 2285 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 575:.\main.c      ****             break;
 2286              		.loc 1 575 0
 2287 00fa 23E0     		b	.L101
 2288              	.L112:
 576:.\main.c      ****             case 18:
 577:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2289              		.loc 1 577 0
 2290 00fc FA8B     		ldrh	r2, [r7, #30]
 2291 00fe 174B     		ldr	r3, .L121+12
 2292 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 578:.\main.c      ****             break;
 2293              		.loc 1 578 0
 2294 0102 1FE0     		b	.L101
 2295              	.L113:
 579:.\main.c      ****             case 20:
 580:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2296              		.loc 1 580 0
 2297 0104 FA8B     		ldrh	r2, [r7, #30]
 2298 0106 154B     		ldr	r3, .L121+12
 2299 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 581:.\main.c      ****             break;
 2300              		.loc 1 581 0
 2301 010a 1BE0     		b	.L101
 2302              	.L114:
 582:.\main.c      ****             case 22:
 583:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2303              		.loc 1 583 0
 2304 010c FA8B     		ldrh	r2, [r7, #30]
 2305 010e 134B     		ldr	r3, .L121+12
 2306 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 584:.\main.c      ****             break;
 2307              		.loc 1 584 0
 2308 0112 17E0     		b	.L101
 2309              	.L115:
 585:.\main.c      ****             case 24:
 586:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2310              		.loc 1 586 0
 2311 0114 FA8B     		ldrh	r2, [r7, #30]
 2312 0116 114B     		ldr	r3, .L121+12
 2313 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 587:.\main.c      ****             break;
 2314              		.loc 1 587 0
 2315 011a 13E0     		b	.L101
 2316              	.L116:
 588:.\main.c      ****             case 26:
 589:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2317              		.loc 1 589 0
 2318 011c FA8B     		ldrh	r2, [r7, #30]
 2319 011e 0F4B     		ldr	r3, .L121+12
 2320 0120 DA82     		strh	r2, [r3, #22]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 53


 590:.\main.c      ****             break;
 2321              		.loc 1 590 0
 2322 0122 0FE0     		b	.L101
 2323              	.L117:
 591:.\main.c      ****             case 28:
 592:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2324              		.loc 1 592 0
 2325 0124 FA8B     		ldrh	r2, [r7, #30]
 2326 0126 0D4B     		ldr	r3, .L121+12
 2327 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 593:.\main.c      ****             break;
 2328              		.loc 1 593 0
 2329 012a 0BE0     		b	.L101
 2330              	.L118:
 594:.\main.c      ****             case 30:
 595:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2331              		.loc 1 595 0
 2332 012c FA8B     		ldrh	r2, [r7, #30]
 2333 012e 0B4B     		ldr	r3, .L121+12
 2334 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 596:.\main.c      ****             break;
 2335              		.loc 1 596 0
 2336 0132 07E0     		b	.L101
 2337              	.L119:
 597:.\main.c      ****             case 32:
 598:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2338              		.loc 1 598 0
 2339 0134 FA8B     		ldrh	r2, [r7, #30]
 2340 0136 094B     		ldr	r3, .L121+12
 2341 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 599:.\main.c      ****             break;
 2342              		.loc 1 599 0
 2343 013a 03E0     		b	.L101
 2344              	.L120:
 600:.\main.c      ****             case 34:
 601:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2345              		.loc 1 601 0
 2346 013c FA8B     		ldrh	r2, [r7, #30]
 2347 013e 074B     		ldr	r3, .L121+12
 2348 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 602:.\main.c      ****             break;
 2349              		.loc 1 602 0
 2350 0142 00BF     		nop
 2351              	.L101:
 2352              	.LBE8:
 603:.\main.c      ****         }
 604:.\main.c      ****     }
 605:.\main.c      **** }
 2353              		.loc 1 605 0
 2354 0144 2437     		adds	r7, r7, #36
 2355              		.cfi_def_cfa_offset 4
 2356 0146 BD46     		mov	sp, r7
 2357              		.cfi_def_cfa_register 13
 2358              		@ sp needed
 2359 0148 5DF8047B 		ldr	r7, [sp], #4
 2360              		.cfi_restore 7
 2361              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 54


 2362 014c 7047     		bx	lr
 2363              	.L122:
 2364 014e 00BF     		.align	2
 2365              	.L121:
 2366 0150 00000000 		.word	flag_rx
 2367 0154 00000000 		.word	packet
 2368 0158 00000000 		.word	byteCount
 2369 015c 00000000 		.word	buffer_state
 2370              		.cfi_endproc
 2371              	.LFE72:
 2372              		.size	handle_rx_binary, .-handle_rx_binary
 2373              		.section	.text.setLeftDir,"ax",%progbits
 2374              		.align	2
 2375              		.global	setLeftDir
 2376              		.thumb
 2377              		.thumb_func
 2378              		.type	setLeftDir, %function
 2379              	setLeftDir:
 2380              	.LFB73:
 606:.\main.c      **** 
 607:.\main.c      **** void setLeftDir(uint8 dir)
 608:.\main.c      **** {
 2381              		.loc 1 608 0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 8
 2384              		@ frame_needed = 1, uses_anonymous_args = 0
 2385 0000 80B5     		push	{r7, lr}
 2386              		.cfi_def_cfa_offset 8
 2387              		.cfi_offset 7, -8
 2388              		.cfi_offset 14, -4
 2389 0002 82B0     		sub	sp, sp, #8
 2390              		.cfi_def_cfa_offset 16
 2391 0004 00AF     		add	r7, sp, #0
 2392              		.cfi_def_cfa_register 7
 2393 0006 0346     		mov	r3, r0
 2394 0008 FB71     		strb	r3, [r7, #7]
 609:.\main.c      ****     M2_IN2_Write(dir);
 2395              		.loc 1 609 0
 2396 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2397 000c 1846     		mov	r0, r3
 2398 000e FFF7FEFF 		bl	M2_IN2_Write
 610:.\main.c      **** }
 2399              		.loc 1 610 0
 2400 0012 0837     		adds	r7, r7, #8
 2401              		.cfi_def_cfa_offset 8
 2402 0014 BD46     		mov	sp, r7
 2403              		.cfi_def_cfa_register 13
 2404              		@ sp needed
 2405 0016 80BD     		pop	{r7, pc}
 2406              		.cfi_endproc
 2407              	.LFE73:
 2408              		.size	setLeftDir, .-setLeftDir
 2409              		.section	.text.setRightDir,"ax",%progbits
 2410              		.align	2
 2411              		.global	setRightDir
 2412              		.thumb
 2413              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 55


 2414              		.type	setRightDir, %function
 2415              	setRightDir:
 2416              	.LFB74:
 611:.\main.c      **** 
 612:.\main.c      **** void setRightDir(uint8 dir)
 613:.\main.c      **** {
 2417              		.loc 1 613 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 8
 2420              		@ frame_needed = 1, uses_anonymous_args = 0
 2421 0000 80B5     		push	{r7, lr}
 2422              		.cfi_def_cfa_offset 8
 2423              		.cfi_offset 7, -8
 2424              		.cfi_offset 14, -4
 2425 0002 82B0     		sub	sp, sp, #8
 2426              		.cfi_def_cfa_offset 16
 2427 0004 00AF     		add	r7, sp, #0
 2428              		.cfi_def_cfa_register 7
 2429 0006 0346     		mov	r3, r0
 2430 0008 FB71     		strb	r3, [r7, #7]
 614:.\main.c      ****     M1_IN2_Write(dir);
 2431              		.loc 1 614 0
 2432 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2433 000c 1846     		mov	r0, r3
 2434 000e FFF7FEFF 		bl	M1_IN2_Write
 615:.\main.c      **** }
 2435              		.loc 1 615 0
 2436 0012 0837     		adds	r7, r7, #8
 2437              		.cfi_def_cfa_offset 8
 2438 0014 BD46     		mov	sp, r7
 2439              		.cfi_def_cfa_register 13
 2440              		@ sp needed
 2441 0016 80BD     		pop	{r7, pc}
 2442              		.cfi_endproc
 2443              	.LFE74:
 2444              		.size	setRightDir, .-setRightDir
 2445              		.section	.rodata
 2446 00b7 00       		.align	2
 2447              	.LC8:
 2448 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2448      2025640D 
 2448      0A00
 2449              		.section	.text.reverseDirection,"ax",%progbits
 2450              		.align	2
 2451              		.global	reverseDirection
 2452              		.thumb
 2453              		.thumb_func
 2454              		.type	reverseDirection, %function
 2455              	reverseDirection:
 2456              	.LFB75:
 616:.\main.c      **** 
 617:.\main.c      **** void reverseDirection()
 618:.\main.c      **** {
 2457              		.loc 1 618 0
 2458              		.cfi_startproc
 2459              		@ args = 0, pretend = 0, frame = 16
 2460              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 56


 2461 0000 80B5     		push	{r7, lr}
 2462              		.cfi_def_cfa_offset 8
 2463              		.cfi_offset 7, -8
 2464              		.cfi_offset 14, -4
 2465 0002 84B0     		sub	sp, sp, #16
 2466              		.cfi_def_cfa_offset 24
 2467 0004 00AF     		add	r7, sp, #0
 2468              		.cfi_def_cfa_register 7
 619:.\main.c      ****     direction = !direction;
 2469              		.loc 1 619 0
 2470 0006 114B     		ldr	r3, .L126
 2471 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2472 000a 002B     		cmp	r3, #0
 2473 000c 0CBF     		ite	eq
 2474 000e 0123     		moveq	r3, #1
 2475 0010 0023     		movne	r3, #0
 2476 0012 DBB2     		uxtb	r3, r3
 2477 0014 1A46     		mov	r2, r3
 2478 0016 0D4B     		ldr	r3, .L126
 2479 0018 1A70     		strb	r2, [r3]
 620:.\main.c      ****     setLeftDir(direction);
 2480              		.loc 1 620 0
 2481 001a 0C4B     		ldr	r3, .L126
 2482 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2483 001e 1846     		mov	r0, r3
 2484 0020 FFF7FEFF 		bl	setLeftDir
 621:.\main.c      ****     setRightDir(direction);
 2485              		.loc 1 621 0
 2486 0024 094B     		ldr	r3, .L126
 2487 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 0028 1846     		mov	r0, r3
 2489 002a FFF7FEFF 		bl	setRightDir
 622:.\main.c      ****     char mes[16];
 623:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2490              		.loc 1 623 0
 2491 002e 074B     		ldr	r3, .L126
 2492 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2493 0032 1A46     		mov	r2, r3
 2494 0034 3B46     		mov	r3, r7
 2495 0036 1846     		mov	r0, r3
 2496 0038 0549     		ldr	r1, .L126+4
 2497 003a FFF7FEFF 		bl	sprintf
 624:.\main.c      ****     UART_PutString(mes);
 2498              		.loc 1 624 0
 2499 003e 3B46     		mov	r3, r7
 2500 0040 1846     		mov	r0, r3
 2501 0042 FFF7FEFF 		bl	UART_PutString
 625:.\main.c      **** }
 2502              		.loc 1 625 0
 2503 0046 1037     		adds	r7, r7, #16
 2504              		.cfi_def_cfa_offset 8
 2505 0048 BD46     		mov	sp, r7
 2506              		.cfi_def_cfa_register 13
 2507              		@ sp needed
 2508 004a 80BD     		pop	{r7, pc}
 2509              	.L127:
 2510              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 57


 2511              	.L126:
 2512 004c 00000000 		.word	direction
 2513 0050 B8000000 		.word	.LC8
 2514              		.cfi_endproc
 2515              	.LFE75:
 2516              		.size	reverseDirection, .-reverseDirection
 2517              		.global	__aeabi_dcmplt
 2518              		.global	__aeabi_ddiv
 2519              		.global	__aeabi_d2iz
 2520              		.section	.text.setSpeed,"ax",%progbits
 2521              		.align	2
 2522              		.global	setSpeed
 2523              		.thumb
 2524              		.thumb_func
 2525              		.type	setSpeed, %function
 2526              	setSpeed:
 2527              	.LFB76:
 626:.\main.c      **** 
 627:.\main.c      **** void setSpeed(double left, double right){
 2528              		.loc 1 627 0
 2529              		.cfi_startproc
 2530              		@ args = 0, pretend = 0, frame = 24
 2531              		@ frame_needed = 1, uses_anonymous_args = 0
 2532 0000 80B5     		push	{r7, lr}
 2533              		.cfi_def_cfa_offset 8
 2534              		.cfi_offset 7, -8
 2535              		.cfi_offset 14, -4
 2536 0002 86B0     		sub	sp, sp, #24
 2537              		.cfi_def_cfa_offset 32
 2538 0004 00AF     		add	r7, sp, #0
 2539              		.cfi_def_cfa_register 7
 2540 0006 C7E90201 		strd	r0, [r7, #8]
 2541 000a C7E90023 		strd	r2, [r7]
 628:.\main.c      ****     if(right < 0.0)
 2542              		.loc 1 628 0
 2543 000e D7E90001 		ldrd	r0, [r7]
 2544 0012 4FF00002 		mov	r2, #0
 2545 0016 4FF00003 		mov	r3, #0
 2546 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2547 001e 0346     		mov	r3, r0
 2548 0020 002B     		cmp	r3, #0
 2549 0022 10D0     		beq	.L137
 629:.\main.c      ****     {
 630:.\main.c      ****         //char mes[16];
 631:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 632:.\main.c      ****        // UART_PutString(mes);
 633:.\main.c      ****         setRightDir(!direction);
 2550              		.loc 1 633 0
 2551 0024 304B     		ldr	r3, .L139+8
 2552 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2553 0028 002B     		cmp	r3, #0
 2554 002a 0CBF     		ite	eq
 2555 002c 0123     		moveq	r3, #1
 2556 002e 0023     		movne	r3, #0
 2557 0030 DBB2     		uxtb	r3, r3
 2558 0032 1846     		mov	r0, r3
 2559 0034 FFF7FEFF 		bl	setRightDir
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 58


 634:.\main.c      ****         right = -right;
 2560              		.loc 1 634 0
 2561 0038 3B68     		ldr	r3, [r7]
 2562 003a 3B60     		str	r3, [r7]
 2563 003c 7B68     		ldr	r3, [r7, #4]
 2564 003e 83F00043 		eor	r3, r3, #-2147483648
 2565 0042 7B60     		str	r3, [r7, #4]
 2566 0044 04E0     		b	.L131
 2567              	.L137:
 635:.\main.c      ****     }
 636:.\main.c      ****     else setRightDir(direction);
 2568              		.loc 1 636 0
 2569 0046 284B     		ldr	r3, .L139+8
 2570 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2571 004a 1846     		mov	r0, r3
 2572 004c FFF7FEFF 		bl	setRightDir
 2573              	.L131:
 637:.\main.c      ****     
 638:.\main.c      ****     if(left < 0.0)
 2574              		.loc 1 638 0
 2575 0050 D7E90201 		ldrd	r0, [r7, #8]
 2576 0054 4FF00002 		mov	r2, #0
 2577 0058 4FF00003 		mov	r3, #0
 2578 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2579 0060 0346     		mov	r3, r0
 2580 0062 002B     		cmp	r3, #0
 2581 0064 10D0     		beq	.L138
 639:.\main.c      ****     {
 640:.\main.c      ****        // char mes[16];
 641:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 642:.\main.c      ****         //UART_PutString(mes);
 643:.\main.c      ****         setLeftDir(!direction);
 2582              		.loc 1 643 0
 2583 0066 204B     		ldr	r3, .L139+8
 2584 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2585 006a 002B     		cmp	r3, #0
 2586 006c 0CBF     		ite	eq
 2587 006e 0123     		moveq	r3, #1
 2588 0070 0023     		movne	r3, #0
 2589 0072 DBB2     		uxtb	r3, r3
 2590 0074 1846     		mov	r0, r3
 2591 0076 FFF7FEFF 		bl	setLeftDir
 644:.\main.c      ****         left = -left;
 2592              		.loc 1 644 0
 2593 007a BB68     		ldr	r3, [r7, #8]
 2594 007c BB60     		str	r3, [r7, #8]
 2595 007e FB68     		ldr	r3, [r7, #12]
 2596 0080 83F00043 		eor	r3, r3, #-2147483648
 2597 0084 FB60     		str	r3, [r7, #12]
 2598 0086 04E0     		b	.L134
 2599              	.L138:
 645:.\main.c      ****     }
 646:.\main.c      ****     else setLeftDir(direction);
 2600              		.loc 1 646 0
 2601 0088 174B     		ldr	r3, .L139+8
 2602 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2603 008c 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 59


 2604 008e FFF7FEFF 		bl	setLeftDir
 2605              	.L134:
 647:.\main.c      ****     
 648:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2606              		.loc 1 648 0
 2607 0092 D7E90201 		ldrd	r0, [r7, #8]
 2608 0096 12A3     		adr	r3, .L139
 2609 0098 D3E90023 		ldrd	r2, [r3]
 2610 009c FFF7FEFF 		bl	__aeabi_ddiv
 2611 00a0 0246     		mov	r2, r0
 2612 00a2 0B46     		mov	r3, r1
 2613 00a4 1046     		mov	r0, r2
 2614 00a6 1946     		mov	r1, r3
 2615 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2616 00ac 0346     		mov	r3, r0
 2617 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 649:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2618              		.loc 1 649 0
 2619 00b0 D7E90001 		ldrd	r0, [r7]
 2620 00b4 0AA3     		adr	r3, .L139
 2621 00b6 D3E90023 		ldrd	r2, [r3]
 2622 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2623 00be 0246     		mov	r2, r0
 2624 00c0 0B46     		mov	r3, r1
 2625 00c2 1046     		mov	r0, r2
 2626 00c4 1946     		mov	r1, r3
 2627 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2628 00ca 0346     		mov	r3, r0
 2629 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 650:.\main.c      ****     
 651:.\main.c      ****     leftSpeedLimit = countsRight;
 2630              		.loc 1 651 0
 2631 00ce 074A     		ldr	r2, .L139+12
 2632 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2633 00d2 1380     		strh	r3, [r2]	@ movhi
 652:.\main.c      ****     rightSpeedLimit = countsLeft;
 2634              		.loc 1 652 0
 2635 00d4 064A     		ldr	r2, .L139+16
 2636 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2637 00d8 1380     		strh	r3, [r2]	@ movhi
 653:.\main.c      **** }
 2638              		.loc 1 653 0
 2639 00da 1837     		adds	r7, r7, #24
 2640              		.cfi_def_cfa_offset 8
 2641 00dc BD46     		mov	sp, r7
 2642              		.cfi_def_cfa_register 13
 2643              		@ sp needed
 2644 00de 80BD     		pop	{r7, pc}
 2645              	.L140:
 2646              		.align	3
 2647              	.L139:
 2648 00e0 969526A5 		.word	-1524197994
 2649 00e4 A0DBEF3F 		.word	1072683936
 2650 00e8 00000000 		.word	direction
 2651 00ec 00000000 		.word	leftSpeedLimit
 2652 00f0 00000000 		.word	rightSpeedLimit
 2653              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 60


 2654              	.LFE76:
 2655              		.size	setSpeed, .-setSpeed
 2656 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2657              		.align	2
 2658              		.global	brakeLeft
 2659              		.thumb
 2660              		.thumb_func
 2661              		.type	brakeLeft, %function
 2662              	brakeLeft:
 2663              	.LFB77:
 654:.\main.c      **** 
 655:.\main.c      **** void brakeLeft()
 656:.\main.c      **** {
 2664              		.loc 1 656 0
 2665              		.cfi_startproc
 2666              		@ args = 0, pretend = 0, frame = 0
 2667              		@ frame_needed = 1, uses_anonymous_args = 0
 2668 0000 80B5     		push	{r7, lr}
 2669              		.cfi_def_cfa_offset 8
 2670              		.cfi_offset 7, -8
 2671              		.cfi_offset 14, -4
 2672 0002 00AF     		add	r7, sp, #0
 2673              		.cfi_def_cfa_register 7
 657:.\main.c      ****     PWM_1_WriteCompare(0);
 2674              		.loc 1 657 0
 2675 0004 0020     		movs	r0, #0
 2676 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 658:.\main.c      ****     left_duty_cycle = 0;
 2677              		.loc 1 658 0
 2678 000a 024B     		ldr	r3, .L142
 2679 000c 0022     		movs	r2, #0
 2680 000e 1A80     		strh	r2, [r3]	@ movhi
 659:.\main.c      **** }
 2681              		.loc 1 659 0
 2682 0010 80BD     		pop	{r7, pc}
 2683              	.L143:
 2684 0012 00BF     		.align	2
 2685              	.L142:
 2686 0014 00000000 		.word	left_duty_cycle
 2687              		.cfi_endproc
 2688              	.LFE77:
 2689              		.size	brakeLeft, .-brakeLeft
 2690              		.section	.text.brakeRight,"ax",%progbits
 2691              		.align	2
 2692              		.global	brakeRight
 2693              		.thumb
 2694              		.thumb_func
 2695              		.type	brakeRight, %function
 2696              	brakeRight:
 2697              	.LFB78:
 660:.\main.c      **** 
 661:.\main.c      **** void brakeRight()
 662:.\main.c      **** {
 2698              		.loc 1 662 0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 0
 2701              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 61


 2702 0000 80B5     		push	{r7, lr}
 2703              		.cfi_def_cfa_offset 8
 2704              		.cfi_offset 7, -8
 2705              		.cfi_offset 14, -4
 2706 0002 00AF     		add	r7, sp, #0
 2707              		.cfi_def_cfa_register 7
 663:.\main.c      ****      PWM_2_WriteCompare(0);
 2708              		.loc 1 663 0
 2709 0004 0020     		movs	r0, #0
 2710 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 664:.\main.c      ****      right_duty_cycle = 0;
 2711              		.loc 1 664 0
 2712 000a 024B     		ldr	r3, .L145
 2713 000c 0022     		movs	r2, #0
 2714 000e 1A80     		strh	r2, [r3]	@ movhi
 665:.\main.c      **** }
 2715              		.loc 1 665 0
 2716 0010 80BD     		pop	{r7, pc}
 2717              	.L146:
 2718 0012 00BF     		.align	2
 2719              	.L145:
 2720 0014 00000000 		.word	right_duty_cycle
 2721              		.cfi_endproc
 2722              	.LFE78:
 2723              		.size	brakeRight, .-brakeRight
 2724              		.section	.text.brakeMotor,"ax",%progbits
 2725              		.align	2
 2726              		.global	brakeMotor
 2727              		.thumb
 2728              		.thumb_func
 2729              		.type	brakeMotor, %function
 2730              	brakeMotor:
 2731              	.LFB79:
 666:.\main.c      **** 
 667:.\main.c      **** void brakeMotor(){
 2732              		.loc 1 667 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 0
 2735              		@ frame_needed = 1, uses_anonymous_args = 0
 2736 0000 80B5     		push	{r7, lr}
 2737              		.cfi_def_cfa_offset 8
 2738              		.cfi_offset 7, -8
 2739              		.cfi_offset 14, -4
 2740 0002 00AF     		add	r7, sp, #0
 2741              		.cfi_def_cfa_register 7
 668:.\main.c      ****     setSpeed(0, 0);
 2742              		.loc 1 668 0
 2743 0004 4FF00000 		mov	r0, #0
 2744 0008 4FF00001 		mov	r1, #0
 2745 000c 4FF00002 		mov	r2, #0
 2746 0010 4FF00003 		mov	r3, #0
 2747 0014 FFF7FEFF 		bl	setSpeed
 669:.\main.c      ****     brakeLeft();
 2748              		.loc 1 669 0
 2749 0018 FFF7FEFF 		bl	brakeLeft
 670:.\main.c      ****     brakeRight();
 2750              		.loc 1 670 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 62


 2751 001c FFF7FEFF 		bl	brakeRight
 671:.\main.c      **** }
 2752              		.loc 1 671 0
 2753 0020 80BD     		pop	{r7, pc}
 2754              		.cfi_endproc
 2755              	.LFE79:
 2756              		.size	brakeMotor, .-brakeMotor
 2757 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2758              		.align	2
 2759              		.global	driveForwards
 2760              		.thumb
 2761              		.thumb_func
 2762              		.type	driveForwards, %function
 2763              	driveForwards:
 2764              	.LFB80:
 672:.\main.c      **** 
 673:.\main.c      **** void driveForwards()
 674:.\main.c      **** {
 2765              		.loc 1 674 0
 2766              		.cfi_startproc
 2767              		@ args = 0, pretend = 0, frame = 0
 2768              		@ frame_needed = 1, uses_anonymous_args = 0
 2769 0000 80B5     		push	{r7, lr}
 2770              		.cfi_def_cfa_offset 8
 2771              		.cfi_offset 7, -8
 2772              		.cfi_offset 14, -4
 2773 0002 00AF     		add	r7, sp, #0
 2774              		.cfi_def_cfa_register 7
 675:.\main.c      ****     setSpeed(speed, speed);
 2775              		.loc 1 675 0
 2776 0004 044B     		ldr	r3, .L149
 2777 0006 D3E90001 		ldrd	r0, [r3]
 2778 000a 034B     		ldr	r3, .L149
 2779 000c D3E90023 		ldrd	r2, [r3]
 2780 0010 FFF7FEFF 		bl	setSpeed
 676:.\main.c      **** }
 2781              		.loc 1 676 0
 2782 0014 80BD     		pop	{r7, pc}
 2783              	.L150:
 2784 0016 00BF     		.align	2
 2785              	.L149:
 2786 0018 00000000 		.word	speed
 2787              		.cfi_endproc
 2788              	.LFE80:
 2789              		.size	driveForwards, .-driveForwards
 2790              		.global	__aeabi_dadd
 2791              		.section	.text.turnRight,"ax",%progbits
 2792              		.align	2
 2793              		.global	turnRight
 2794              		.thumb
 2795              		.thumb_func
 2796              		.type	turnRight, %function
 2797              	turnRight:
 2798              	.LFB81:
 677:.\main.c      **** 
 678:.\main.c      **** void turnRight()
 679:.\main.c      **** {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 63


 2799              		.loc 1 679 0
 2800              		.cfi_startproc
 2801              		@ args = 0, pretend = 0, frame = 0
 2802              		@ frame_needed = 1, uses_anonymous_args = 0
 2803 0000 80B5     		push	{r7, lr}
 2804              		.cfi_def_cfa_offset 8
 2805              		.cfi_offset 7, -8
 2806              		.cfi_offset 14, -4
 2807 0002 00AF     		add	r7, sp, #0
 2808              		.cfi_def_cfa_register 7
 680:.\main.c      ****     setSpeed(0,speed*2.0);
 2809              		.loc 1 680 0
 2810 0004 074B     		ldr	r3, .L152
 2811 0006 D3E90023 		ldrd	r2, [r3]
 2812 000a 1046     		mov	r0, r2
 2813 000c 1946     		mov	r1, r3
 2814 000e FFF7FEFF 		bl	__aeabi_dadd
 2815 0012 0246     		mov	r2, r0
 2816 0014 0B46     		mov	r3, r1
 2817 0016 4FF00000 		mov	r0, #0
 2818 001a 4FF00001 		mov	r1, #0
 2819 001e FFF7FEFF 		bl	setSpeed
 681:.\main.c      **** }
 2820              		.loc 1 681 0
 2821 0022 80BD     		pop	{r7, pc}
 2822              	.L153:
 2823              		.align	2
 2824              	.L152:
 2825 0024 00000000 		.word	speed
 2826              		.cfi_endproc
 2827              	.LFE81:
 2828              		.size	turnRight, .-turnRight
 2829              		.section	.text.turnLeft,"ax",%progbits
 2830              		.align	2
 2831              		.global	turnLeft
 2832              		.thumb
 2833              		.thumb_func
 2834              		.type	turnLeft, %function
 2835              	turnLeft:
 2836              	.LFB82:
 682:.\main.c      **** 
 683:.\main.c      **** void turnLeft()
 684:.\main.c      **** {
 2837              		.loc 1 684 0
 2838              		.cfi_startproc
 2839              		@ args = 0, pretend = 0, frame = 0
 2840              		@ frame_needed = 1, uses_anonymous_args = 0
 2841 0000 80B5     		push	{r7, lr}
 2842              		.cfi_def_cfa_offset 8
 2843              		.cfi_offset 7, -8
 2844              		.cfi_offset 14, -4
 2845 0002 00AF     		add	r7, sp, #0
 2846              		.cfi_def_cfa_register 7
 685:.\main.c      ****     setSpeed(speed*2.0,0);
 2847              		.loc 1 685 0
 2848 0004 084B     		ldr	r3, .L155
 2849 0006 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 64


 2850 000a 1046     		mov	r0, r2
 2851 000c 1946     		mov	r1, r3
 2852 000e FFF7FEFF 		bl	__aeabi_dadd
 2853 0012 0246     		mov	r2, r0
 2854 0014 0B46     		mov	r3, r1
 2855 0016 1046     		mov	r0, r2
 2856 0018 1946     		mov	r1, r3
 2857 001a 4FF00002 		mov	r2, #0
 2858 001e 4FF00003 		mov	r3, #0
 2859 0022 FFF7FEFF 		bl	setSpeed
 686:.\main.c      **** }
 2860              		.loc 1 686 0
 2861 0026 80BD     		pop	{r7, pc}
 2862              	.L156:
 2863              		.align	2
 2864              	.L155:
 2865 0028 00000000 		.word	speed
 2866              		.cfi_endproc
 2867              	.LFE82:
 2868              		.size	turnLeft, .-turnLeft
 2869              		.section	.text.turnU,"ax",%progbits
 2870              		.align	2
 2871              		.global	turnU
 2872              		.thumb
 2873              		.thumb_func
 2874              		.type	turnU, %function
 2875              	turnU:
 2876              	.LFB83:
 687:.\main.c      **** 
 688:.\main.c      **** void turnU()
 689:.\main.c      **** {
 2877              		.loc 1 689 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 0
 2880              		@ frame_needed = 1, uses_anonymous_args = 0
 2881 0000 B0B5     		push	{r4, r5, r7, lr}
 2882              		.cfi_def_cfa_offset 16
 2883              		.cfi_offset 4, -16
 2884              		.cfi_offset 5, -12
 2885              		.cfi_offset 7, -8
 2886              		.cfi_offset 14, -4
 2887 0002 00AF     		add	r7, sp, #0
 2888              		.cfi_def_cfa_register 7
 690:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 2889              		.loc 1 690 0
 2890 0004 0E4B     		ldr	r3, .L158
 2891 0006 D3E90023 		ldrd	r2, [r3]
 2892 000a 1446     		mov	r4, r2
 2893 000c 83F00045 		eor	r5, r3, #-2147483648
 2894 0010 2046     		mov	r0, r4
 2895 0012 2946     		mov	r1, r5
 2896 0014 2246     		mov	r2, r4
 2897 0016 2B46     		mov	r3, r5
 2898 0018 FFF7FEFF 		bl	__aeabi_dadd
 2899 001c 0246     		mov	r2, r0
 2900 001e 0B46     		mov	r3, r1
 2901 0020 1446     		mov	r4, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 65


 2902 0022 1D46     		mov	r5, r3
 2903 0024 064B     		ldr	r3, .L158
 2904 0026 D3E90023 		ldrd	r2, [r3]
 2905 002a 1046     		mov	r0, r2
 2906 002c 1946     		mov	r1, r3
 2907 002e FFF7FEFF 		bl	__aeabi_dadd
 2908 0032 0246     		mov	r2, r0
 2909 0034 0B46     		mov	r3, r1
 2910 0036 2046     		mov	r0, r4
 2911 0038 2946     		mov	r1, r5
 2912 003a FFF7FEFF 		bl	setSpeed
 691:.\main.c      **** }
 2913              		.loc 1 691 0
 2914 003e B0BD     		pop	{r4, r5, r7, pc}
 2915              	.L159:
 2916              		.align	2
 2917              	.L158:
 2918 0040 00000000 		.word	speed
 2919              		.cfi_endproc
 2920              	.LFE83:
 2921              		.size	turnU, .-turnU
 2922              		.section	.text.initTurnLeft,"ax",%progbits
 2923              		.align	2
 2924              		.global	initTurnLeft
 2925              		.thumb
 2926              		.thumb_func
 2927              		.type	initTurnLeft, %function
 2928              	initTurnLeft:
 2929              	.LFB84:
 692:.\main.c      **** 
 693:.\main.c      **** void initTurnLeft(){
 2930              		.loc 1 693 0
 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 0
 2933              		@ frame_needed = 1, uses_anonymous_args = 0
 2934 0000 80B5     		push	{r7, lr}
 2935              		.cfi_def_cfa_offset 8
 2936              		.cfi_offset 7, -8
 2937              		.cfi_offset 14, -4
 2938 0002 00AF     		add	r7, sp, #0
 2939              		.cfi_def_cfa_register 7
 694:.\main.c      ****     Timer_2_Stop();
 2940              		.loc 1 694 0
 2941 0004 FFF7FEFF 		bl	Timer_2_Stop
 695:.\main.c      ****     prev_movement_state = movement_state;
 2942              		.loc 1 695 0
 2943 0008 084B     		ldr	r3, .L161
 2944 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2945 000c 084B     		ldr	r3, .L161+4
 2946 000e 1A70     		strb	r2, [r3]
 696:.\main.c      ****     movement_state = LTURN;
 2947              		.loc 1 696 0
 2948 0010 064B     		ldr	r3, .L161
 2949 0012 0122     		movs	r2, #1
 2950 0014 1A70     		strb	r2, [r3]
 697:.\main.c      ****     brakeLeft();
 2951              		.loc 1 697 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 66


 2952 0016 FFF7FEFF 		bl	brakeLeft
 698:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 2953              		.loc 1 698 0
 2954 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2955 001e 0346     		mov	r3, r0
 2956 0020 1A46     		mov	r2, r3
 2957 0022 044B     		ldr	r3, .L161+8
 2958 0024 1A80     		strh	r2, [r3]	@ movhi
 699:.\main.c      ****     Timer_2_Start();
 2959              		.loc 1 699 0
 2960 0026 FFF7FEFF 		bl	Timer_2_Start
 700:.\main.c      **** }
 2961              		.loc 1 700 0
 2962 002a 80BD     		pop	{r7, pc}
 2963              	.L162:
 2964              		.align	2
 2965              	.L161:
 2966 002c 00000000 		.word	movement_state
 2967 0030 00000000 		.word	prev_movement_state
 2968 0034 00000000 		.word	start_turn_count
 2969              		.cfi_endproc
 2970              	.LFE84:
 2971              		.size	initTurnLeft, .-initTurnLeft
 2972              		.section	.text.initTurnRight,"ax",%progbits
 2973              		.align	2
 2974              		.global	initTurnRight
 2975              		.thumb
 2976              		.thumb_func
 2977              		.type	initTurnRight, %function
 2978              	initTurnRight:
 2979              	.LFB85:
 701:.\main.c      **** 
 702:.\main.c      **** void initTurnRight(){
 2980              		.loc 1 702 0
 2981              		.cfi_startproc
 2982              		@ args = 0, pretend = 0, frame = 0
 2983              		@ frame_needed = 1, uses_anonymous_args = 0
 2984 0000 80B5     		push	{r7, lr}
 2985              		.cfi_def_cfa_offset 8
 2986              		.cfi_offset 7, -8
 2987              		.cfi_offset 14, -4
 2988 0002 00AF     		add	r7, sp, #0
 2989              		.cfi_def_cfa_register 7
 703:.\main.c      ****     Timer_2_Stop();
 2990              		.loc 1 703 0
 2991 0004 FFF7FEFF 		bl	Timer_2_Stop
 704:.\main.c      ****     prev_movement_state = movement_state;
 2992              		.loc 1 704 0
 2993 0008 084B     		ldr	r3, .L164
 2994 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2995 000c 084B     		ldr	r3, .L164+4
 2996 000e 1A70     		strb	r2, [r3]
 705:.\main.c      ****     movement_state = RTURN;
 2997              		.loc 1 705 0
 2998 0010 064B     		ldr	r3, .L164
 2999 0012 0222     		movs	r2, #2
 3000 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 67


 706:.\main.c      ****     brakeRight();
 3001              		.loc 1 706 0
 3002 0016 FFF7FEFF 		bl	brakeRight
 707:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3003              		.loc 1 707 0
 3004 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3005 001e 0346     		mov	r3, r0
 3006 0020 1A46     		mov	r2, r3
 3007 0022 044B     		ldr	r3, .L164+8
 3008 0024 1A80     		strh	r2, [r3]	@ movhi
 708:.\main.c      ****     Timer_2_Start();
 3009              		.loc 1 708 0
 3010 0026 FFF7FEFF 		bl	Timer_2_Start
 709:.\main.c      **** }
 3011              		.loc 1 709 0
 3012 002a 80BD     		pop	{r7, pc}
 3013              	.L165:
 3014              		.align	2
 3015              	.L164:
 3016 002c 00000000 		.word	movement_state
 3017 0030 00000000 		.word	prev_movement_state
 3018 0034 00000000 		.word	start_turn_count
 3019              		.cfi_endproc
 3020              	.LFE85:
 3021              		.size	initTurnRight, .-initTurnRight
 3022              		.section	.text.initTurnU,"ax",%progbits
 3023              		.align	2
 3024              		.global	initTurnU
 3025              		.thumb
 3026              		.thumb_func
 3027              		.type	initTurnU, %function
 3028              	initTurnU:
 3029              	.LFB86:
 710:.\main.c      **** 
 711:.\main.c      **** void initTurnU(){
 3030              		.loc 1 711 0
 3031              		.cfi_startproc
 3032              		@ args = 0, pretend = 0, frame = 0
 3033              		@ frame_needed = 1, uses_anonymous_args = 0
 3034 0000 80B5     		push	{r7, lr}
 3035              		.cfi_def_cfa_offset 8
 3036              		.cfi_offset 7, -8
 3037              		.cfi_offset 14, -4
 3038 0002 00AF     		add	r7, sp, #0
 3039              		.cfi_def_cfa_register 7
 712:.\main.c      ****     Timer_2_Stop();
 3040              		.loc 1 712 0
 3041 0004 FFF7FEFF 		bl	Timer_2_Stop
 713:.\main.c      ****     prev_movement_state = movement_state;
 3042              		.loc 1 713 0
 3043 0008 084B     		ldr	r3, .L167
 3044 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3045 000c 084B     		ldr	r3, .L167+4
 3046 000e 1A70     		strb	r2, [r3]
 714:.\main.c      ****     movement_state = UTURN;
 3047              		.loc 1 714 0
 3048 0010 064B     		ldr	r3, .L167
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 68


 3049 0012 0722     		movs	r2, #7
 3050 0014 1A70     		strb	r2, [r3]
 715:.\main.c      ****     brakeMotor();
 3051              		.loc 1 715 0
 3052 0016 FFF7FEFF 		bl	brakeMotor
 716:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3053              		.loc 1 716 0
 3054 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3055 001e 0346     		mov	r3, r0
 3056 0020 1A46     		mov	r2, r3
 3057 0022 044B     		ldr	r3, .L167+8
 3058 0024 1A80     		strh	r2, [r3]	@ movhi
 717:.\main.c      ****     Timer_2_Start();
 3059              		.loc 1 717 0
 3060 0026 FFF7FEFF 		bl	Timer_2_Start
 718:.\main.c      **** }
 3061              		.loc 1 718 0
 3062 002a 80BD     		pop	{r7, pc}
 3063              	.L168:
 3064              		.align	2
 3065              	.L167:
 3066 002c 00000000 		.word	movement_state
 3067 0030 00000000 		.word	prev_movement_state
 3068 0034 00000000 		.word	start_turn_count
 3069              		.cfi_endproc
 3070              	.LFE86:
 3071              		.size	initTurnU, .-initTurnU
 3072              		.section	.text.initForward,"ax",%progbits
 3073              		.align	2
 3074              		.global	initForward
 3075              		.thumb
 3076              		.thumb_func
 3077              		.type	initForward, %function
 3078              	initForward:
 3079              	.LFB87:
 719:.\main.c      **** 
 720:.\main.c      **** void initForward(){
 3080              		.loc 1 720 0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 0
 3083              		@ frame_needed = 1, uses_anonymous_args = 0
 3084 0000 80B5     		push	{r7, lr}
 3085              		.cfi_def_cfa_offset 8
 3086              		.cfi_offset 7, -8
 3087              		.cfi_offset 14, -4
 3088 0002 00AF     		add	r7, sp, #0
 3089              		.cfi_def_cfa_register 7
 721:.\main.c      ****     brakeMotor();
 3090              		.loc 1 721 0
 3091 0004 FFF7FEFF 		bl	brakeMotor
 722:.\main.c      ****     movement_state = DRIVE;
 3092              		.loc 1 722 0
 3093 0008 014B     		ldr	r3, .L170
 3094 000a 0022     		movs	r2, #0
 3095 000c 1A70     		strb	r2, [r3]
 723:.\main.c      **** }
 3096              		.loc 1 723 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 69


 3097 000e 80BD     		pop	{r7, pc}
 3098              	.L171:
 3099              		.align	2
 3100              	.L170:
 3101 0010 00000000 		.word	movement_state
 3102              		.cfi_endproc
 3103              	.LFE87:
 3104              		.size	initForward, .-initForward
 3105              		.section	.text.initBrake,"ax",%progbits
 3106              		.align	2
 3107              		.global	initBrake
 3108              		.thumb
 3109              		.thumb_func
 3110              		.type	initBrake, %function
 3111              	initBrake:
 3112              	.LFB88:
 724:.\main.c      **** 
 725:.\main.c      **** void initBrake(){
 3113              		.loc 1 725 0
 3114              		.cfi_startproc
 3115              		@ args = 0, pretend = 0, frame = 0
 3116              		@ frame_needed = 1, uses_anonymous_args = 0
 3117              		@ link register save eliminated.
 3118 0000 80B4     		push	{r7}
 3119              		.cfi_def_cfa_offset 4
 3120              		.cfi_offset 7, -4
 3121 0002 00AF     		add	r7, sp, #0
 3122              		.cfi_def_cfa_register 7
 726:.\main.c      ****     movement_state = STOPPED;
 3123              		.loc 1 726 0
 3124 0004 034B     		ldr	r3, .L173
 3125 0006 0322     		movs	r2, #3
 3126 0008 1A70     		strb	r2, [r3]
 727:.\main.c      **** }
 3127              		.loc 1 727 0
 3128 000a BD46     		mov	sp, r7
 3129              		.cfi_def_cfa_register 13
 3130              		@ sp needed
 3131 000c 5DF8047B 		ldr	r7, [sp], #4
 3132              		.cfi_restore 7
 3133              		.cfi_def_cfa_offset 0
 3134 0010 7047     		bx	lr
 3135              	.L174:
 3136 0012 00BF     		.align	2
 3137              	.L173:
 3138 0014 00000000 		.word	movement_state
 3139              		.cfi_endproc
 3140              	.LFE88:
 3141              		.size	initBrake, .-initBrake
 3142              		.section	.text.initTrack,"ax",%progbits
 3143              		.align	2
 3144              		.global	initTrack
 3145              		.thumb
 3146              		.thumb_func
 3147              		.type	initTrack, %function
 3148              	initTrack:
 3149              	.LFB89:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 70


 728:.\main.c      **** 
 729:.\main.c      **** void initTrack()
 730:.\main.c      **** {
 3150              		.loc 1 730 0
 3151              		.cfi_startproc
 3152              		@ args = 0, pretend = 0, frame = 0
 3153              		@ frame_needed = 1, uses_anonymous_args = 0
 3154              		@ link register save eliminated.
 3155 0000 80B4     		push	{r7}
 3156              		.cfi_def_cfa_offset 4
 3157              		.cfi_offset 7, -4
 3158 0002 00AF     		add	r7, sp, #0
 3159              		.cfi_def_cfa_register 7
 731:.\main.c      ****     movement_state = TRACKING;
 3160              		.loc 1 731 0
 3161 0004 034B     		ldr	r3, .L176
 3162 0006 0422     		movs	r2, #4
 3163 0008 1A70     		strb	r2, [r3]
 732:.\main.c      **** }
 3164              		.loc 1 732 0
 3165 000a BD46     		mov	sp, r7
 3166              		.cfi_def_cfa_register 13
 3167              		@ sp needed
 3168 000c 5DF8047B 		ldr	r7, [sp], #4
 3169              		.cfi_restore 7
 3170              		.cfi_def_cfa_offset 0
 3171 0010 7047     		bx	lr
 3172              	.L177:
 3173 0012 00BF     		.align	2
 3174              	.L176:
 3175 0014 00000000 		.word	movement_state
 3176              		.cfi_endproc
 3177              	.LFE89:
 3178              		.size	initTrack, .-initTrack
 3179              		.section	.text.initTrackU,"ax",%progbits
 3180              		.align	2
 3181              		.global	initTrackU
 3182              		.thumb
 3183              		.thumb_func
 3184              		.type	initTrackU, %function
 3185              	initTrackU:
 3186              	.LFB90:
 733:.\main.c      **** 
 734:.\main.c      **** void initTrackU(){
 3187              		.loc 1 734 0
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 0
 3190              		@ frame_needed = 1, uses_anonymous_args = 0
 3191              		@ link register save eliminated.
 3192 0000 80B4     		push	{r7}
 3193              		.cfi_def_cfa_offset 4
 3194              		.cfi_offset 7, -4
 3195 0002 00AF     		add	r7, sp, #0
 3196              		.cfi_def_cfa_register 7
 735:.\main.c      ****     movement_state = TRACKING_U;
 3197              		.loc 1 735 0
 3198 0004 034B     		ldr	r3, .L179
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 71


 3199 0006 0522     		movs	r2, #5
 3200 0008 1A70     		strb	r2, [r3]
 736:.\main.c      **** }
 3201              		.loc 1 736 0
 3202 000a BD46     		mov	sp, r7
 3203              		.cfi_def_cfa_register 13
 3204              		@ sp needed
 3205 000c 5DF8047B 		ldr	r7, [sp], #4
 3206              		.cfi_restore 7
 3207              		.cfi_def_cfa_offset 0
 3208 0010 7047     		bx	lr
 3209              	.L180:
 3210 0012 00BF     		.align	2
 3211              	.L179:
 3212 0014 00000000 		.word	movement_state
 3213              		.cfi_endproc
 3214              	.LFE90:
 3215              		.size	initTrackU, .-initTrackU
 3216              		.section	.text.inittrackLineZ,"ax",%progbits
 3217              		.align	2
 3218              		.global	inittrackLineZ
 3219              		.thumb
 3220              		.thumb_func
 3221              		.type	inittrackLineZ, %function
 3222              	inittrackLineZ:
 3223              	.LFB91:
 737:.\main.c      **** 
 738:.\main.c      **** void inittrackLineZ(){
 3224              		.loc 1 738 0
 3225              		.cfi_startproc
 3226              		@ args = 0, pretend = 0, frame = 0
 3227              		@ frame_needed = 1, uses_anonymous_args = 0
 3228              		@ link register save eliminated.
 3229 0000 80B4     		push	{r7}
 3230              		.cfi_def_cfa_offset 4
 3231              		.cfi_offset 7, -4
 3232 0002 00AF     		add	r7, sp, #0
 3233              		.cfi_def_cfa_register 7
 739:.\main.c      ****     movement_state = TRACKING_SOFT;
 3234              		.loc 1 739 0
 3235 0004 034B     		ldr	r3, .L182
 3236 0006 0622     		movs	r2, #6
 3237 0008 1A70     		strb	r2, [r3]
 740:.\main.c      **** }
 3238              		.loc 1 740 0
 3239 000a BD46     		mov	sp, r7
 3240              		.cfi_def_cfa_register 13
 3241              		@ sp needed
 3242 000c 5DF8047B 		ldr	r7, [sp], #4
 3243              		.cfi_restore 7
 3244              		.cfi_def_cfa_offset 0
 3245 0010 7047     		bx	lr
 3246              	.L183:
 3247 0012 00BF     		.align	2
 3248              	.L182:
 3249 0014 00000000 		.word	movement_state
 3250              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 72


 3251              	.LFE91:
 3252              		.size	inittrackLineZ, .-inittrackLineZ
 3253              		.section	.text.rxInt,"ax",%progbits
 3254              		.align	2
 3255              		.global	rxInt
 3256              		.thumb
 3257              		.thumb_func
 3258              		.type	rxInt, %function
 3259              	rxInt:
 3260              	.LFB92:
 741:.\main.c      **** 
 742:.\main.c      **** 
 743:.\main.c      **** 
 744:.\main.c      **** //Binary RF Data
 745:.\main.c      **** CY_ISR(rxInt){
 3261              		.loc 1 745 0
 3262              		.cfi_startproc
 3263              		@ args = 0, pretend = 0, frame = 8
 3264              		@ frame_needed = 1, uses_anonymous_args = 0
 3265 0000 B0B5     		push	{r4, r5, r7, lr}
 3266              		.cfi_def_cfa_offset 16
 3267              		.cfi_offset 4, -16
 3268              		.cfi_offset 5, -12
 3269              		.cfi_offset 7, -8
 3270              		.cfi_offset 14, -4
 3271 0002 82B0     		sub	sp, sp, #8
 3272              		.cfi_def_cfa_offset 24
 3273 0004 00AF     		add	r7, sp, #0
 3274              		.cfi_def_cfa_register 7
 746:.\main.c      ****     char rf_char = UART_GetChar();
 3275              		.loc 1 746 0
 3276 0006 FFF7FEFF 		bl	UART_GetChar
 3277 000a 0346     		mov	r3, r0
 3278 000c FB71     		strb	r3, [r7, #7]
 747:.\main.c      ****     if(rf_char == SOP){
 3279              		.loc 1 747 0
 3280 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3281 0010 AA2B     		cmp	r3, #170
 3282 0012 2BD1     		bne	.L185
 748:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 749:.\main.c      ****             if(byteCount == 34)
 3283              		.loc 1 749 0
 3284 0014 224B     		ldr	r3, .L189
 3285 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3286 0018 222B     		cmp	r3, #34
 3287 001a 20D1     		bne	.L186
 750:.\main.c      ****             {
 751:.\main.c      ****                 system_state = buffer_state;
 3288              		.loc 1 751 0
 3289 001c 214B     		ldr	r3, .L189+4
 3290 001e 224A     		ldr	r2, .L189+8
 3291 0020 1568     		ldr	r5, [r2]	@ unaligned
 3292 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3293 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3294 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3295 0028 1D60     		str	r5, [r3]	@ unaligned
 3296 002a 5C60     		str	r4, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 73


 3297 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3298 002e D960     		str	r1, [r3, #12]	@ unaligned
 3299 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3300 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3301 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3302 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3303 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3304 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3305 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3306 003e D961     		str	r1, [r3, #28]	@ unaligned
 752:.\main.c      ****                 if(initial_pos_valid == 0)
 3307              		.loc 1 752 0
 3308 0040 1A4B     		ldr	r3, .L189+12
 3309 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3310 0044 002B     		cmp	r3, #0
 3311 0046 0AD1     		bne	.L186
 753:.\main.c      ****                 {
 754:.\main.c      ****                     LED_Write(~LED_Read());
 3312              		.loc 1 754 0
 3313 0048 FFF7FEFF 		bl	LED_Read
 3314 004c 0346     		mov	r3, r0
 3315 004e DB43     		mvns	r3, r3
 3316 0050 DBB2     		uxtb	r3, r3
 3317 0052 1846     		mov	r0, r3
 3318 0054 FFF7FEFF 		bl	LED_Write
 755:.\main.c      ****                     initial_pos_valid = 1;
 3319              		.loc 1 755 0
 3320 0058 144B     		ldr	r3, .L189+12
 3321 005a 0122     		movs	r2, #1
 3322 005c 1A70     		strb	r2, [r3]
 3323              	.L186:
 756:.\main.c      ****                 }
 757:.\main.c      ****             }
 758:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3324              		.loc 1 758 0
 3325 005e 104B     		ldr	r3, .L189
 3326 0060 0222     		movs	r2, #2
 3327 0062 1A70     		strb	r2, [r3]
 759:.\main.c      ****             flag_rx = 0;
 3328              		.loc 1 759 0
 3329 0064 124B     		ldr	r3, .L189+16
 3330 0066 0022     		movs	r2, #0
 3331 0068 1A70     		strb	r2, [r3]
 3332 006a 16E0     		b	.L184
 3333              	.L185:
 760:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 761:.\main.c      ****         }
 762:.\main.c      ****         else
 763:.\main.c      ****         {
 764:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3334              		.loc 1 764 0
 3335 006c 0C4B     		ldr	r3, .L189
 3336 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3337 0070 03F00103 		and	r3, r3, #1
 3338 0074 0F49     		ldr	r1, .L189+20
 3339 0076 FA79     		ldrb	r2, [r7, #7]
 3340 0078 CA54     		strb	r2, [r1, r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 74


 765:.\main.c      ****            
 766:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3341              		.loc 1 766 0
 3342 007a 094B     		ldr	r3, .L189
 3343 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3344 007e 03F00103 		and	r3, r3, #1
 3345 0082 DBB2     		uxtb	r3, r3
 3346 0084 002B     		cmp	r3, #0
 3347 0086 02D0     		beq	.L188
 767:.\main.c      ****             {
 768:.\main.c      ****                 flag_rx = 1;
 3348              		.loc 1 768 0
 3349 0088 094B     		ldr	r3, .L189+16
 3350 008a 0122     		movs	r2, #1
 3351 008c 1A70     		strb	r2, [r3]
 3352              	.L188:
 769:.\main.c      ****             }
 770:.\main.c      ****             byteCount = (byteCount + 1);
 3353              		.loc 1 770 0
 3354 008e 044B     		ldr	r3, .L189
 3355 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3356 0092 0133     		adds	r3, r3, #1
 3357 0094 DAB2     		uxtb	r2, r3
 3358 0096 024B     		ldr	r3, .L189
 3359 0098 1A70     		strb	r2, [r3]
 3360              	.L184:
 771:.\main.c      ****         }
 772:.\main.c      **** }
 3361              		.loc 1 772 0
 3362 009a 0837     		adds	r7, r7, #8
 3363              		.cfi_def_cfa_offset 16
 3364 009c BD46     		mov	sp, r7
 3365              		.cfi_def_cfa_register 13
 3366              		@ sp needed
 3367 009e B0BD     		pop	{r4, r5, r7, pc}
 3368              	.L190:
 3369              		.align	2
 3370              	.L189:
 3371 00a0 00000000 		.word	byteCount
 3372 00a4 00000000 		.word	system_state
 3373 00a8 00000000 		.word	buffer_state
 3374 00ac 00000000 		.word	initial_pos_valid
 3375 00b0 00000000 		.word	flag_rx
 3376 00b4 00000000 		.word	packet
 3377              		.cfi_endproc
 3378              	.LFE92:
 3379              		.size	rxInt, .-rxInt
 3380              		.global	__aeabi_i2f
 3381              		.global	__aeabi_fmul
 3382              		.global	__aeabi_f2iz
 3383              		.section	.rodata
 3384 00c2 0000     		.align	2
 3385              	.LC9:
 3386 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3386      65742071 
 3386      7561643A 
 3386      2025640D 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 75


 3386      0A00
 3387 00d6 0000     		.align	2
 3388              	.LC10:
 3389 00d8 0D0A00   		.ascii	"\015\012\000"
 3390              		.section	.text.BT_rxInt,"ax",%progbits
 3391              		.align	2
 3392              		.global	BT_rxInt
 3393              		.thumb
 3394              		.thumb_func
 3395              		.type	BT_rxInt, %function
 3396              	BT_rxInt:
 3397              	.LFB93:
 773:.\main.c      **** 
 774:.\main.c      **** CY_ISR(BT_rxInt)
 775:.\main.c      **** {
 3398              		.loc 1 775 0
 3399              		.cfi_startproc
 3400              		@ args = 0, pretend = 0, frame = 32
 3401              		@ frame_needed = 1, uses_anonymous_args = 0
 3402 0000 80B5     		push	{r7, lr}
 3403              		.cfi_def_cfa_offset 8
 3404              		.cfi_offset 7, -8
 3405              		.cfi_offset 14, -4
 3406 0002 88B0     		sub	sp, sp, #32
 3407              		.cfi_def_cfa_offset 40
 3408 0004 00AF     		add	r7, sp, #0
 3409              		.cfi_def_cfa_register 7
 776:.\main.c      ****     char rf_char = UART_GetChar();
 3410              		.loc 1 776 0
 3411 0006 FFF7FEFF 		bl	UART_GetChar
 3412 000a 0346     		mov	r3, r0
 3413 000c FB75     		strb	r3, [r7, #23]
 777:.\main.c      ****     switch(rf_char){
 3414              		.loc 1 777 0
 3415 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3416 0010 313B     		subs	r3, r3, #49
 3417 0012 492B     		cmp	r3, #73
 3418 0014 00F27181 		bhi	.L191
 3419 0018 01A2     		adr	r2, .L194
 3420 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3421 001e 00BF     		.p2align 2
 3422              	.L194:
 3423 0020 83020000 		.word	.L193+1
 3424 0024 15020000 		.word	.L195+1
 3425 0028 FB020000 		.word	.L191+1
 3426 002c FB020000 		.word	.L191+1
 3427 0030 FB020000 		.word	.L191+1
 3428 0034 FB020000 		.word	.L191+1
 3429 0038 FB020000 		.word	.L191+1
 3430 003c FB020000 		.word	.L191+1
 3431 0040 FB020000 		.word	.L191+1
 3432 0044 FB020000 		.word	.L191+1
 3433 0048 FB020000 		.word	.L191+1
 3434 004c FB020000 		.word	.L191+1
 3435 0050 FB020000 		.word	.L191+1
 3436 0054 FB020000 		.word	.L191+1
 3437 0058 FB020000 		.word	.L191+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 76


 3438 005c FB020000 		.word	.L191+1
 3439 0060 FB020000 		.word	.L191+1
 3440 0064 FB020000 		.word	.L191+1
 3441 0068 FB020000 		.word	.L191+1
 3442 006c FB020000 		.word	.L191+1
 3443 0070 FB020000 		.word	.L191+1
 3444 0074 FB020000 		.word	.L191+1
 3445 0078 FB020000 		.word	.L191+1
 3446 007c FB020000 		.word	.L191+1
 3447 0080 FB020000 		.word	.L191+1
 3448 0084 FB020000 		.word	.L191+1
 3449 0088 FB020000 		.word	.L191+1
 3450 008c FB020000 		.word	.L191+1
 3451 0090 FB020000 		.word	.L191+1
 3452 0094 FB020000 		.word	.L191+1
 3453 0098 FB020000 		.word	.L191+1
 3454 009c FB020000 		.word	.L191+1
 3455 00a0 FB020000 		.word	.L191+1
 3456 00a4 FB020000 		.word	.L191+1
 3457 00a8 FB020000 		.word	.L191+1
 3458 00ac FB020000 		.word	.L191+1
 3459 00b0 FB020000 		.word	.L191+1
 3460 00b4 FB020000 		.word	.L191+1
 3461 00b8 FB020000 		.word	.L191+1
 3462 00bc FB020000 		.word	.L191+1
 3463 00c0 FB020000 		.word	.L191+1
 3464 00c4 FB020000 		.word	.L191+1
 3465 00c8 FB020000 		.word	.L191+1
 3466 00cc FB020000 		.word	.L191+1
 3467 00d0 FB020000 		.word	.L191+1
 3468 00d4 FB020000 		.word	.L191+1
 3469 00d8 FB020000 		.word	.L191+1
 3470 00dc FB020000 		.word	.L191+1
 3471 00e0 49010000 		.word	.L196+1
 3472 00e4 FB020000 		.word	.L191+1
 3473 00e8 FB020000 		.word	.L191+1
 3474 00ec 6D010000 		.word	.L197+1
 3475 00f0 FB020000 		.word	.L191+1
 3476 00f4 79010000 		.word	.L198+1
 3477 00f8 FB020000 		.word	.L191+1
 3478 00fc FB020000 		.word	.L191+1
 3479 0100 FB020000 		.word	.L191+1
 3480 0104 FB020000 		.word	.L191+1
 3481 0108 FB020000 		.word	.L191+1
 3482 010c FB020000 		.word	.L191+1
 3483 0110 FB020000 		.word	.L191+1
 3484 0114 FB020000 		.word	.L191+1
 3485 0118 FB020000 		.word	.L191+1
 3486 011c FB020000 		.word	.L191+1
 3487 0120 A9010000 		.word	.L199+1
 3488 0124 FF010000 		.word	.L200+1
 3489 0128 61010000 		.word	.L201+1
 3490 012c 85010000 		.word	.L202+1
 3491 0130 91010000 		.word	.L203+1
 3492 0134 FB020000 		.word	.L191+1
 3493 0138 55010000 		.word	.L204+1
 3494 013c FB020000 		.word	.L191+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 77


 3495 0140 FB020000 		.word	.L191+1
 3496 0144 9D010000 		.word	.L205+1
 3497              		.p2align 1
 3498              	.L196:
 3499              	.LBB9:
 778:.\main.c      ****     case 'a':
 779:.\main.c      ****         initTurnLeft();
 3500              		.loc 1 779 0
 3501 0148 FFF7FEFF 		bl	initTurnLeft
 780:.\main.c      ****         track_mode = NO_TRACK;
 3502              		.loc 1 780 0
 3503 014c 6C4B     		ldr	r3, .L215
 3504 014e 0022     		movs	r2, #0
 3505 0150 1A70     		strb	r2, [r3]
 781:.\main.c      ****         break;
 3506              		.loc 1 781 0
 3507 0152 D2E0     		b	.L191
 3508              	.L204:
 782:.\main.c      ****     case 'w':
 783:.\main.c      ****         initForward();
 3509              		.loc 1 783 0
 3510 0154 FFF7FEFF 		bl	initForward
 784:.\main.c      ****         track_mode = NO_TRACK;
 3511              		.loc 1 784 0
 3512 0158 694B     		ldr	r3, .L215
 3513 015a 0022     		movs	r2, #0
 3514 015c 1A70     		strb	r2, [r3]
 785:.\main.c      ****         break;
 3515              		.loc 1 785 0
 3516 015e CCE0     		b	.L191
 3517              	.L201:
 786:.\main.c      ****     case 's': 
 787:.\main.c      ****         reverseDirection();
 3518              		.loc 1 787 0
 3519 0160 FFF7FEFF 		bl	reverseDirection
 788:.\main.c      ****         track_mode = NO_TRACK;
 3520              		.loc 1 788 0
 3521 0164 664B     		ldr	r3, .L215
 3522 0166 0022     		movs	r2, #0
 3523 0168 1A70     		strb	r2, [r3]
 789:.\main.c      ****         break;
 3524              		.loc 1 789 0
 3525 016a C6E0     		b	.L191
 3526              	.L197:
 790:.\main.c      ****     case 'd':
 791:.\main.c      ****         initTurnRight();
 3527              		.loc 1 791 0
 3528 016c FFF7FEFF 		bl	initTurnRight
 792:.\main.c      ****         track_mode = NO_TRACK;
 3529              		.loc 1 792 0
 3530 0170 634B     		ldr	r3, .L215
 3531 0172 0022     		movs	r2, #0
 3532 0174 1A70     		strb	r2, [r3]
 793:.\main.c      ****         break;
 3533              		.loc 1 793 0
 3534 0176 C0E0     		b	.L191
 3535              	.L198:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 78


 794:.\main.c      ****     case 'f':
 795:.\main.c      ****         initBrake();
 3536              		.loc 1 795 0
 3537 0178 FFF7FEFF 		bl	initBrake
 796:.\main.c      ****         track_mode = NO_TRACK;
 3538              		.loc 1 796 0
 3539 017c 604B     		ldr	r3, .L215
 3540 017e 0022     		movs	r2, #0
 3541 0180 1A70     		strb	r2, [r3]
 797:.\main.c      ****         break;
 3542              		.loc 1 797 0
 3543 0182 BAE0     		b	.L191
 3544              	.L202:
 798:.\main.c      ****     case('t'):
 799:.\main.c      ****         track_mode = CURVE_TRACK;
 3545              		.loc 1 799 0
 3546 0184 5E4B     		ldr	r3, .L215
 3547 0186 0122     		movs	r2, #1
 3548 0188 1A70     		strb	r2, [r3]
 800:.\main.c      ****         initTrack();
 3549              		.loc 1 800 0
 3550 018a FFF7FEFF 		bl	initTrack
 801:.\main.c      ****         break;
 3551              		.loc 1 801 0
 3552 018e B4E0     		b	.L191
 3553              	.L203:
 802:.\main.c      ****     case('u'):
 803:.\main.c      ****         initTrackU();
 3554              		.loc 1 803 0
 3555 0190 FFF7FEFF 		bl	initTrackU
 804:.\main.c      ****         track_mode = U_TRACK;
 3556              		.loc 1 804 0
 3557 0194 5A4B     		ldr	r3, .L215
 3558 0196 0222     		movs	r2, #2
 3559 0198 1A70     		strb	r2, [r3]
 805:.\main.c      ****         break;
 3560              		.loc 1 805 0
 3561 019a AEE0     		b	.L191
 3562              	.L205:
 806:.\main.c      ****     case('z'):
 807:.\main.c      ****         track_mode = SQUARE_TRACK;
 3563              		.loc 1 807 0
 3564 019c 584B     		ldr	r3, .L215
 3565 019e 0322     		movs	r2, #3
 3566 01a0 1A70     		strb	r2, [r3]
 808:.\main.c      ****         inittrackLineZ();
 3567              		.loc 1 808 0
 3568 01a2 FFF7FEFF 		bl	inittrackLineZ
 809:.\main.c      ****         break;
 3569              		.loc 1 809 0
 3570 01a6 A8E0     		b	.L191
 3571              	.L199:
 810:.\main.c      ****     case('q'):
 811:.\main.c      ****         track_mode = QUAD_STOP;
 3572              		.loc 1 811 0
 3573 01a8 554B     		ldr	r3, .L215
 3574 01aa 0422     		movs	r2, #4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 79


 3575 01ac 1A70     		strb	r2, [r3]
 812:.\main.c      ****         accum_dist = 0;
 3576              		.loc 1 812 0
 3577 01ae 554B     		ldr	r3, .L215+4
 3578 01b0 0022     		movs	r2, #0
 3579 01b2 1A80     		strh	r2, [r3]	@ movhi
 813:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3580              		.loc 1 813 0
 3581 01b4 544B     		ldr	r3, .L215+8
 3582 01b6 1B88     		ldrh	r3, [r3]
 3583 01b8 1BB2     		sxth	r3, r3
 3584 01ba 1846     		mov	r0, r3
 3585 01bc FFF7FEFF 		bl	__aeabi_i2f
 3586 01c0 0246     		mov	r2, r0
 3587 01c2 524B     		ldr	r3, .L215+12
 3588 01c4 1B68     		ldr	r3, [r3]	@ float
 3589 01c6 1046     		mov	r0, r2
 3590 01c8 1946     		mov	r1, r3
 3591 01ca FFF7FEFF 		bl	__aeabi_fmul
 3592 01ce 0346     		mov	r3, r0
 3593 01d0 1846     		mov	r0, r3
 3594 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3595 01d6 0346     		mov	r3, r0
 3596 01d8 9AB2     		uxth	r2, r3
 3597 01da 4D4B     		ldr	r3, .L215+16
 3598 01dc 1A80     		strh	r2, [r3]	@ movhi
 814:.\main.c      ****         char mes[16];
 815:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3599              		.loc 1 815 0
 3600 01de 4C4B     		ldr	r3, .L215+16
 3601 01e0 1B88     		ldrh	r3, [r3]
 3602 01e2 1BB2     		sxth	r3, r3
 3603 01e4 3A1D     		adds	r2, r7, #4
 3604 01e6 1046     		mov	r0, r2
 3605 01e8 4A49     		ldr	r1, .L215+20
 3606 01ea 1A46     		mov	r2, r3
 3607 01ec FFF7FEFF 		bl	sprintf
 816:.\main.c      ****         UART_PutString(mes);
 3608              		.loc 1 816 0
 3609 01f0 3B1D     		adds	r3, r7, #4
 3610 01f2 1846     		mov	r0, r3
 3611 01f4 FFF7FEFF 		bl	UART_PutString
 817:.\main.c      ****         initForward();
 3612              		.loc 1 817 0
 3613 01f8 FFF7FEFF 		bl	initForward
 818:.\main.c      ****         break;
 3614              		.loc 1 818 0
 3615 01fc 7DE0     		b	.L191
 3616              	.L200:
 819:.\main.c      ****     case ('r'):
 820:.\main.c      ****         track_mode = RF_STOP;
 3617              		.loc 1 820 0
 3618 01fe 404B     		ldr	r3, .L215
 3619 0200 0522     		movs	r2, #5
 3620 0202 1A70     		strb	r2, [r3]
 821:.\main.c      ****         changeToRF();
 3621              		.loc 1 821 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 80


 3622 0204 FFF7FEFF 		bl	changeToRF
 822:.\main.c      ****         // Make initial position
 823:.\main.c      ****         initial_pos_valid = 0;
 3623              		.loc 1 823 0
 3624 0208 434B     		ldr	r3, .L215+24
 3625 020a 0022     		movs	r2, #0
 3626 020c 1A70     		strb	r2, [r3]
 824:.\main.c      ****         initBrake();
 3627              		.loc 1 824 0
 3628 020e FFF7FEFF 		bl	initBrake
 825:.\main.c      ****         break;
 3629              		.loc 1 825 0
 3630 0212 72E0     		b	.L191
 3631              	.L195:
 826:.\main.c      ****     case ('2'):
 827:.\main.c      ****         track_mode = DEST_TEST;
 3632              		.loc 1 827 0
 3633 0214 3A4B     		ldr	r3, .L215
 3634 0216 0622     		movs	r2, #6
 3635 0218 1A70     		strb	r2, [r3]
 828:.\main.c      ****         tracked_direction = robot_direction;
 3636              		.loc 1 828 0
 3637 021a 404B     		ldr	r3, .L215+28
 3638 021c 1B68     		ldr	r3, [r3]
 3639 021e 404A     		ldr	r2, .L215+32
 3640 0220 1360     		str	r3, [r2]
 829:.\main.c      ****         instructionLength = generateDirections();
 3641              		.loc 1 829 0
 3642 0222 FFF7FEFF 		bl	generateDirections
 3643 0226 0346     		mov	r3, r0
 3644 0228 9AB2     		uxth	r2, r3
 3645 022a 3E4B     		ldr	r3, .L215+36
 3646 022c 1A80     		strh	r2, [r3]	@ movhi
 830:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 831:.\main.c      ****         //char message[128];
 832:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 833:.\main.c      ****         int i = 0;
 3647              		.loc 1 833 0
 3648 022e 0023     		movs	r3, #0
 3649 0230 FB61     		str	r3, [r7, #28]
 834:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3650              		.loc 1 834 0
 3651 0232 0023     		movs	r3, #0
 3652 0234 FB61     		str	r3, [r7, #28]
 3653 0236 18E0     		b	.L207
 3654              	.L210:
 835:.\main.c      ****         {
 836:.\main.c      ****             if(i%2 == 0)
 3655              		.loc 1 836 0
 3656 0238 FB69     		ldr	r3, [r7, #28]
 3657 023a 03F00103 		and	r3, r3, #1
 3658 023e 002B     		cmp	r3, #0
 3659 0240 07D1     		bne	.L208
 837:.\main.c      ****             {
 838:.\main.c      ****                 UART_PutChar(instructions[i]);
 3660              		.loc 1 838 0
 3661 0242 394A     		ldr	r2, .L215+40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 81


 3662 0244 FB69     		ldr	r3, [r7, #28]
 3663 0246 1344     		add	r3, r3, r2
 3664 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3665 024a 1846     		mov	r0, r3
 3666 024c FFF7FEFF 		bl	UART_PutChar
 3667 0250 08E0     		b	.L209
 3668              	.L208:
 839:.\main.c      ****             }
 840:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3669              		.loc 1 840 0
 3670 0252 354A     		ldr	r2, .L215+40
 3671 0254 FB69     		ldr	r3, [r7, #28]
 3672 0256 1344     		add	r3, r3, r2
 3673 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3674 025a 3033     		adds	r3, r3, #48
 3675 025c DBB2     		uxtb	r3, r3
 3676 025e 1846     		mov	r0, r3
 3677 0260 FFF7FEFF 		bl	UART_PutChar
 3678              	.L209:
 834:.\main.c      ****         {
 3679              		.loc 1 834 0 discriminator 2
 3680 0264 FB69     		ldr	r3, [r7, #28]
 3681 0266 0133     		adds	r3, r3, #1
 3682 0268 FB61     		str	r3, [r7, #28]
 3683              	.L207:
 834:.\main.c      ****         {
 3684              		.loc 1 834 0 is_stmt 0 discriminator 1
 3685 026a 2E4B     		ldr	r3, .L215+36
 3686 026c 1B88     		ldrh	r3, [r3]
 3687 026e 1A46     		mov	r2, r3
 3688 0270 FB69     		ldr	r3, [r7, #28]
 3689 0272 9A42     		cmp	r2, r3
 3690 0274 E0DC     		bgt	.L210
 841:.\main.c      **** 
 842:.\main.c      ****         }
 843:.\main.c      ****         
 844:.\main.c      ****         UART_PutString("\r\n");
 3691              		.loc 1 844 0 is_stmt 1
 3692 0276 2D48     		ldr	r0, .L215+44
 3693 0278 FFF7FEFF 		bl	UART_PutString
 845:.\main.c      **** 
 846:.\main.c      ****         inittrackLineZ();
 3694              		.loc 1 846 0
 3695 027c FFF7FEFF 		bl	inittrackLineZ
 847:.\main.c      ****         break;
 3696              		.loc 1 847 0
 3697 0280 3BE0     		b	.L191
 3698              	.L193:
 848:.\main.c      ****         case ('1'):
 849:.\main.c      ****         track_mode = DEST_TEST;
 3699              		.loc 1 849 0
 3700 0282 1F4B     		ldr	r3, .L215
 3701 0284 0622     		movs	r2, #6
 3702 0286 1A70     		strb	r2, [r3]
 850:.\main.c      ****         tracked_direction = robot_direction;
 3703              		.loc 1 850 0
 3704 0288 244B     		ldr	r3, .L215+28
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 82


 3705 028a 1B68     		ldr	r3, [r3]
 3706 028c 244A     		ldr	r2, .L215+32
 3707 028e 1360     		str	r3, [r2]
 851:.\main.c      ****         //instructionLength = generateDirections();
 852:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3708              		.loc 1 852 0
 3709 0290 FFF7FEFF 		bl	generateEntireMapDirections
 3710 0294 0346     		mov	r3, r0
 3711 0296 9AB2     		uxth	r2, r3
 3712 0298 224B     		ldr	r3, .L215+36
 3713 029a 1A80     		strh	r2, [r3]	@ movhi
 853:.\main.c      ****         //char message[128];
 854:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 855:.\main.c      ****         instructionCount = instructionLength - 18;
 3714              		.loc 1 855 0
 3715 029c 214B     		ldr	r3, .L215+36
 3716 029e 1B88     		ldrh	r3, [r3]
 3717 02a0 123B     		subs	r3, r3, #18
 3718 02a2 9AB2     		uxth	r2, r3
 3719 02a4 224B     		ldr	r3, .L215+48
 3720 02a6 1A80     		strh	r2, [r3]	@ movhi
 856:.\main.c      ****         int x;
 857:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 3721              		.loc 1 857 0
 3722 02a8 214B     		ldr	r3, .L215+48
 3723 02aa 1B88     		ldrh	r3, [r3]
 3724 02ac BB61     		str	r3, [r7, #24]
 3725 02ae 18E0     		b	.L211
 3726              	.L214:
 858:.\main.c      ****         {
 859:.\main.c      ****             if(x%2 == 0)
 3727              		.loc 1 859 0
 3728 02b0 BB69     		ldr	r3, [r7, #24]
 3729 02b2 03F00103 		and	r3, r3, #1
 3730 02b6 002B     		cmp	r3, #0
 3731 02b8 07D1     		bne	.L212
 860:.\main.c      ****             {
 861:.\main.c      ****                 UART_PutChar(instructions[x]);
 3732              		.loc 1 861 0
 3733 02ba 1B4A     		ldr	r2, .L215+40
 3734 02bc BB69     		ldr	r3, [r7, #24]
 3735 02be 1344     		add	r3, r3, r2
 3736 02c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3737 02c2 1846     		mov	r0, r3
 3738 02c4 FFF7FEFF 		bl	UART_PutChar
 3739 02c8 08E0     		b	.L213
 3740              	.L212:
 862:.\main.c      ****             }
 863:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 3741              		.loc 1 863 0
 3742 02ca 174A     		ldr	r2, .L215+40
 3743 02cc BB69     		ldr	r3, [r7, #24]
 3744 02ce 1344     		add	r3, r3, r2
 3745 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3746 02d2 3033     		adds	r3, r3, #48
 3747 02d4 DBB2     		uxtb	r3, r3
 3748 02d6 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 83


 3749 02d8 FFF7FEFF 		bl	UART_PutChar
 3750              	.L213:
 857:.\main.c      ****         {
 3751              		.loc 1 857 0 discriminator 2
 3752 02dc BB69     		ldr	r3, [r7, #24]
 3753 02de 0133     		adds	r3, r3, #1
 3754 02e0 BB61     		str	r3, [r7, #24]
 3755              	.L211:
 857:.\main.c      ****         {
 3756              		.loc 1 857 0 is_stmt 0 discriminator 1
 3757 02e2 104B     		ldr	r3, .L215+36
 3758 02e4 1B88     		ldrh	r3, [r3]
 3759 02e6 1A46     		mov	r2, r3
 3760 02e8 BB69     		ldr	r3, [r7, #24]
 3761 02ea 9A42     		cmp	r2, r3
 3762 02ec E0DC     		bgt	.L214
 864:.\main.c      **** 
 865:.\main.c      ****         }
 866:.\main.c      ****         
 867:.\main.c      ****         UART_PutString("\r\n");
 3763              		.loc 1 867 0 is_stmt 1
 3764 02ee 0F48     		ldr	r0, .L215+44
 3765 02f0 FFF7FEFF 		bl	UART_PutString
 868:.\main.c      **** 
 869:.\main.c      ****         inittrackLineZ();
 3766              		.loc 1 869 0
 3767 02f4 FFF7FEFF 		bl	inittrackLineZ
 870:.\main.c      ****         break;
 3768              		.loc 1 870 0
 3769 02f8 00BF     		nop
 3770              	.L191:
 3771              	.LBE9:
 871:.\main.c      ****     }
 872:.\main.c      **** }
 3772              		.loc 1 872 0
 3773 02fa 2037     		adds	r7, r7, #32
 3774              		.cfi_def_cfa_offset 8
 3775 02fc BD46     		mov	sp, r7
 3776              		.cfi_def_cfa_register 13
 3777              		@ sp needed
 3778 02fe 80BD     		pop	{r7, pc}
 3779              	.L216:
 3780              		.align	2
 3781              	.L215:
 3782 0300 00000000 		.word	track_mode
 3783 0304 00000000 		.word	accum_dist
 3784 0308 00000000 		.word	target_distance_cm
 3785 030c 00000000 		.word	quad_per_cm
 3786 0310 00000000 		.word	target_distance_quad
 3787 0314 C4000000 		.word	.LC9
 3788 0318 00000000 		.word	initial_pos_valid
 3789 031c 00000000 		.word	robot_direction
 3790 0320 00000000 		.word	tracked_direction
 3791 0324 00000000 		.word	instructionLength
 3792 0328 00000000 		.word	instructions
 3793 032c D8000000 		.word	.LC10
 3794 0330 00000000 		.word	instructionCount
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 84


 3795              		.cfi_endproc
 3796              	.LFE93:
 3797              		.size	BT_rxInt, .-BT_rxInt
 3798              		.section	.text.changeToRF,"ax",%progbits
 3799              		.align	2
 3800              		.global	changeToRF
 3801              		.thumb
 3802              		.thumb_func
 3803              		.type	changeToRF, %function
 3804              	changeToRF:
 3805              	.LFB94:
 873:.\main.c      **** 
 874:.\main.c      **** 
 875:.\main.c      **** void changeToRF()
 876:.\main.c      **** {
 3806              		.loc 1 876 0
 3807              		.cfi_startproc
 3808              		@ args = 0, pretend = 0, frame = 0
 3809              		@ frame_needed = 1, uses_anonymous_args = 0
 3810 0000 80B5     		push	{r7, lr}
 3811              		.cfi_def_cfa_offset 8
 3812              		.cfi_offset 7, -8
 3813              		.cfi_offset 14, -4
 3814 0002 00AF     		add	r7, sp, #0
 3815              		.cfi_def_cfa_register 7
 877:.\main.c      ****         //disable BT
 878:.\main.c      ****         BT_ENABLED = 0;
 3816              		.loc 1 878 0
 3817 0004 0B4B     		ldr	r3, .L218
 3818 0006 0022     		movs	r2, #0
 3819 0008 1A70     		strb	r2, [r3]
 879:.\main.c      ****         isrRF_RX_Stop();
 3820              		.loc 1 879 0
 3821 000a FFF7FEFF 		bl	isrRF_RX_Stop
 880:.\main.c      ****         UART_Stop();
 3822              		.loc 1 880 0
 3823 000e FFF7FEFF 		bl	UART_Stop
 881:.\main.c      ****         
 882:.\main.c      ****         //enable RF
 883:.\main.c      ****         BIN_ENABLED = 1;
 3824              		.loc 1 883 0
 3825 0012 094B     		ldr	r3, .L218+4
 3826 0014 0122     		movs	r2, #1
 3827 0016 1A70     		strb	r2, [r3]
 884:.\main.c      ****         UART_clk_SetDividerValue(130);
 3828              		.loc 1 884 0
 3829 0018 8120     		movs	r0, #129
 3830 001a 0121     		movs	r1, #1
 3831 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 885:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 3832              		.loc 1 885 0
 3833 0020 0648     		ldr	r0, .L218+8
 3834 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 886:.\main.c      ****         UART_Start();
 3835              		.loc 1 886 0
 3836 0026 FFF7FEFF 		bl	UART_Start
 887:.\main.c      ****         RF_BT_SELECT_Write(0);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 85


 3837              		.loc 1 887 0
 3838 002a 0020     		movs	r0, #0
 3839 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 888:.\main.c      **** }
 3840              		.loc 1 888 0
 3841 0030 80BD     		pop	{r7, pc}
 3842              	.L219:
 3843 0032 00BF     		.align	2
 3844              	.L218:
 3845 0034 00000000 		.word	BT_ENABLED
 3846 0038 00000000 		.word	BIN_ENABLED
 3847 003c 00000000 		.word	rxInt
 3848              		.cfi_endproc
 3849              	.LFE94:
 3850              		.size	changeToRF, .-changeToRF
 3851              		.section	.text.changeToBT,"ax",%progbits
 3852              		.align	2
 3853              		.global	changeToBT
 3854              		.thumb
 3855              		.thumb_func
 3856              		.type	changeToBT, %function
 3857              	changeToBT:
 3858              	.LFB95:
 889:.\main.c      **** 
 890:.\main.c      **** void changeToBT()
 891:.\main.c      **** {
 3859              		.loc 1 891 0
 3860              		.cfi_startproc
 3861              		@ args = 0, pretend = 0, frame = 0
 3862              		@ frame_needed = 1, uses_anonymous_args = 0
 3863 0000 80B5     		push	{r7, lr}
 3864              		.cfi_def_cfa_offset 8
 3865              		.cfi_offset 7, -8
 3866              		.cfi_offset 14, -4
 3867 0002 00AF     		add	r7, sp, #0
 3868              		.cfi_def_cfa_register 7
 892:.\main.c      ****         //disable RF
 893:.\main.c      ****         BIN_ENABLED = 0;
 3869              		.loc 1 893 0
 3870 0004 0B4B     		ldr	r3, .L221
 3871 0006 0022     		movs	r2, #0
 3872 0008 1A70     		strb	r2, [r3]
 894:.\main.c      ****         isrRF_RX_Stop();
 3873              		.loc 1 894 0
 3874 000a FFF7FEFF 		bl	isrRF_RX_Stop
 895:.\main.c      ****         UART_Stop();
 3875              		.loc 1 895 0
 3876 000e FFF7FEFF 		bl	UART_Stop
 896:.\main.c      ****         
 897:.\main.c      ****         //enable BT
 898:.\main.c      ****         BT_ENABLED = 1;
 3877              		.loc 1 898 0
 3878 0012 094B     		ldr	r3, .L221+4
 3879 0014 0122     		movs	r2, #1
 3880 0016 1A70     		strb	r2, [r3]
 899:.\main.c      ****         UART_clk_SetDividerValue(781);
 3881              		.loc 1 899 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 86


 3882 0018 4FF44370 		mov	r0, #780
 3883 001c 0121     		movs	r1, #1
 3884 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 900:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3885              		.loc 1 900 0
 3886 0022 0648     		ldr	r0, .L221+8
 3887 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 901:.\main.c      ****         UART_Start();
 3888              		.loc 1 901 0
 3889 0028 FFF7FEFF 		bl	UART_Start
 902:.\main.c      ****         RF_BT_SELECT_Write(1);
 3890              		.loc 1 902 0
 3891 002c 0120     		movs	r0, #1
 3892 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 903:.\main.c      **** }
 3893              		.loc 1 903 0
 3894 0032 80BD     		pop	{r7, pc}
 3895              	.L222:
 3896              		.align	2
 3897              	.L221:
 3898 0034 00000000 		.word	BIN_ENABLED
 3899 0038 00000000 		.word	BT_ENABLED
 3900 003c 00000000 		.word	BT_rxInt
 3901              		.cfi_endproc
 3902              	.LFE95:
 3903              		.size	changeToBT, .-changeToBT
 3904              		.section	.text.Quad_Dec_response,"ax",%progbits
 3905              		.align	2
 3906              		.global	Quad_Dec_response
 3907              		.thumb
 3908              		.thumb_func
 3909              		.type	Quad_Dec_response, %function
 3910              	Quad_Dec_response:
 3911              	.LFB96:
 904:.\main.c      **** 
 905:.\main.c      **** 
 906:.\main.c      **** void Quad_Dec_response()
 907:.\main.c      **** {
 3912              		.loc 1 907 0
 3913              		.cfi_startproc
 3914              		@ args = 0, pretend = 0, frame = 32
 3915              		@ frame_needed = 1, uses_anonymous_args = 0
 3916 0000 B0B5     		push	{r4, r5, r7, lr}
 3917              		.cfi_def_cfa_offset 16
 3918              		.cfi_offset 4, -16
 3919              		.cfi_offset 5, -12
 3920              		.cfi_offset 7, -8
 3921              		.cfi_offset 14, -4
 3922 0002 88B0     		sub	sp, sp, #32
 3923              		.cfi_def_cfa_offset 48
 3924 0004 00AF     		add	r7, sp, #0
 3925              		.cfi_def_cfa_register 7
 908:.\main.c      ****     //Check if the flag has been set
 909:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 3926              		.loc 1 909 0
 3927 0006 824B     		ldr	r3, .L231
 3928 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 87


 3929 000a 002B     		cmp	r3, #0
 3930 000c 00D1     		bne	.L224
 3931 000e FCE0     		b	.L223
 3932              	.L224:
 910:.\main.c      ****     flag_calc_wheelspeed = 0;
 3933              		.loc 1 910 0
 3934 0010 7F4B     		ldr	r3, .L231
 3935 0012 0022     		movs	r2, #0
 3936 0014 1A70     		strb	r2, [r3]
 911:.\main.c      ****     
 912:.\main.c      ****     //char wheel_1_str [64];
 913:.\main.c      ****     //char wheel_2_str [64];
 914:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 915:.\main.c      ****     //usbPutString(wheel_1_str);
 916:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 917:.\main.c      ****     
 918:.\main.c      ****     //usbPutString(wheel_2_str);
 919:.\main.c      ****     
 920:.\main.c      ****     int16 leftSpeed = quad_diff1;
 3937              		.loc 1 920 0
 3938 0016 7F4B     		ldr	r3, .L231+4
 3939 0018 1B88     		ldrh	r3, [r3]	@ movhi
 3940 001a FB81     		strh	r3, [r7, #14]	@ movhi
 921:.\main.c      ****     int16 rightSpeed = quad_diff2;
 3941              		.loc 1 921 0
 3942 001c 7E4B     		ldr	r3, .L231+8
 3943 001e 1B88     		ldrh	r3, [r3]	@ movhi
 3944 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 922:.\main.c      ****     double scalingLeft = 1;
 3945              		.loc 1 922 0
 3946 0022 4FF00002 		mov	r2, #0
 3947 0026 7D4B     		ldr	r3, .L231+12
 3948 0028 C7E90623 		strd	r2, [r7, #24]
 923:.\main.c      ****     double scalingRight = 1;
 3949              		.loc 1 923 0
 3950 002c 4FF00002 		mov	r2, #0
 3951 0030 7A4B     		ldr	r3, .L231+12
 3952 0032 C7E90423 		strd	r2, [r7, #16]
 924:.\main.c      ****     
 925:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 926:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 3953              		.loc 1 926 0
 3954 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 3955 003a 002B     		cmp	r3, #0
 3956 003c 0FD1     		bne	.L226
 3957              		.loc 1 926 0 is_stmt 0 discriminator 1
 3958 003e B7F90C30 		ldrsh	r3, [r7, #12]
 3959 0042 002B     		cmp	r3, #0
 3960 0044 0BD1     		bne	.L226
 927:.\main.c      ****        //leftSpeed = 3;
 928:.\main.c      ****         scalingLeft = 2;
 3961              		.loc 1 928 0 is_stmt 1
 3962 0046 4FF00002 		mov	r2, #0
 3963 004a 4FF08043 		mov	r3, #1073741824
 3964 004e C7E90623 		strd	r2, [r7, #24]
 929:.\main.c      ****         scalingRight = 2;
 3965              		.loc 1 929 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 88


 3966 0052 4FF00002 		mov	r2, #0
 3967 0056 4FF08043 		mov	r3, #1073741824
 3968 005a C7E90423 		strd	r2, [r7, #16]
 3969              	.L226:
 930:.\main.c      ****     }
 931:.\main.c      **** 
 932:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 3970              		.loc 1 932 0
 3971 005e 704B     		ldr	r3, .L231+16
 3972 0060 1B88     		ldrh	r3, [r3]
 3973 0062 1AB2     		sxth	r2, r3
 3974 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 3975 0068 002B     		cmp	r3, #0
 3976 006a B8BF     		it	lt
 3977 006c 5B42     		rsblt	r3, r3, #0
 3978 006e D31A     		subs	r3, r2, r3
 3979 0070 BB60     		str	r3, [r7, #8]
 933:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 3980              		.loc 1 933 0
 3981 0072 BB68     		ldr	r3, [r7, #8]
 3982 0074 83EAE372 		eor	r2, r3, r3, asr #31
 3983 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 3984 007c BB68     		ldr	r3, [r7, #8]
 3985 007e 92FBF3F3 		sdiv	r3, r2, r3
 3986 0082 1846     		mov	r0, r3
 3987 0084 FFF7FEFF 		bl	__aeabi_i2d
 3988 0088 0446     		mov	r4, r0
 3989 008a 0D46     		mov	r5, r1
 3990 008c BB68     		ldr	r3, [r7, #8]
 3991 008e 002B     		cmp	r3, #0
 3992 0090 B8BF     		it	lt
 3993 0092 5B42     		rsblt	r3, r3, #0
 3994 0094 1846     		mov	r0, r3
 3995 0096 FFF7FEFF 		bl	__aeabi_i2d
 3996 009a 0246     		mov	r2, r0
 3997 009c 0B46     		mov	r3, r1
 3998 009e 1046     		mov	r0, r2
 3999 00a0 1946     		mov	r1, r3
 4000 00a2 FFF7FEFF 		bl	sqrt
 4001 00a6 0246     		mov	r2, r0
 4002 00a8 0B46     		mov	r3, r1
 4003 00aa 2046     		mov	r0, r4
 4004 00ac 2946     		mov	r1, r5
 4005 00ae FFF7FEFF 		bl	__aeabi_dmul
 4006 00b2 0246     		mov	r2, r0
 4007 00b4 0B46     		mov	r3, r1
 4008 00b6 1046     		mov	r0, r2
 4009 00b8 1946     		mov	r1, r3
 4010 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4011 00be 0346     		mov	r3, r0
 4012 00c0 7B60     		str	r3, [r7, #4]
 934:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4013              		.loc 1 934 0
 4014 00c2 584B     		ldr	r3, .L231+20
 4015 00c4 1B88     		ldrh	r3, [r3]
 4016 00c6 1BB2     		sxth	r3, r3
 4017 00c8 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 89


 4018 00ca FFF7FEFF 		bl	__aeabi_i2d
 4019 00ce 0446     		mov	r4, r0
 4020 00d0 0D46     		mov	r5, r1
 4021 00d2 7868     		ldr	r0, [r7, #4]
 4022 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4023 00d8 0246     		mov	r2, r0
 4024 00da 0B46     		mov	r3, r1
 4025 00dc 1046     		mov	r0, r2
 4026 00de 1946     		mov	r1, r3
 4027 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4028 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4029 00e8 0246     		mov	r2, r0
 4030 00ea 0B46     		mov	r3, r1
 4031 00ec 2046     		mov	r0, r4
 4032 00ee 2946     		mov	r1, r5
 4033 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4034 00f4 0246     		mov	r2, r0
 4035 00f6 0B46     		mov	r3, r1
 4036 00f8 1046     		mov	r0, r2
 4037 00fa 1946     		mov	r1, r3
 4038 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4039 0100 0346     		mov	r3, r0
 4040 0102 9AB2     		uxth	r2, r3
 4041 0104 474B     		ldr	r3, .L231+20
 4042 0106 1A80     		strh	r2, [r3]	@ movhi
 935:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4043              		.loc 1 935 0
 4044 0108 474B     		ldr	r3, .L231+24
 4045 010a 1B88     		ldrh	r3, [r3]
 4046 010c 1AB2     		sxth	r2, r3
 4047 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4048 0112 002B     		cmp	r3, #0
 4049 0114 B8BF     		it	lt
 4050 0116 5B42     		rsblt	r3, r3, #0
 4051 0118 D31A     		subs	r3, r2, r3
 4052 011a BB60     		str	r3, [r7, #8]
 936:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4053              		.loc 1 936 0
 4054 011c BB68     		ldr	r3, [r7, #8]
 4055 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4056 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4057 0126 BB68     		ldr	r3, [r7, #8]
 4058 0128 92FBF3F3 		sdiv	r3, r2, r3
 4059 012c 1846     		mov	r0, r3
 4060 012e FFF7FEFF 		bl	__aeabi_i2d
 4061 0132 0446     		mov	r4, r0
 4062 0134 0D46     		mov	r5, r1
 4063 0136 BB68     		ldr	r3, [r7, #8]
 4064 0138 002B     		cmp	r3, #0
 4065 013a B8BF     		it	lt
 4066 013c 5B42     		rsblt	r3, r3, #0
 4067 013e 1846     		mov	r0, r3
 4068 0140 FFF7FEFF 		bl	__aeabi_i2d
 4069 0144 0246     		mov	r2, r0
 4070 0146 0B46     		mov	r3, r1
 4071 0148 1046     		mov	r0, r2
 4072 014a 1946     		mov	r1, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 90


 4073 014c FFF7FEFF 		bl	sqrt
 4074 0150 0246     		mov	r2, r0
 4075 0152 0B46     		mov	r3, r1
 4076 0154 2046     		mov	r0, r4
 4077 0156 2946     		mov	r1, r5
 4078 0158 FFF7FEFF 		bl	__aeabi_dmul
 4079 015c 0246     		mov	r2, r0
 4080 015e 0B46     		mov	r3, r1
 4081 0160 1046     		mov	r0, r2
 4082 0162 1946     		mov	r1, r3
 4083 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4084 0168 0346     		mov	r3, r0
 4085 016a 7B60     		str	r3, [r7, #4]
 937:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4086              		.loc 1 937 0
 4087 016c 2F4B     		ldr	r3, .L231+28
 4088 016e 1B88     		ldrh	r3, [r3]
 4089 0170 1BB2     		sxth	r3, r3
 4090 0172 1846     		mov	r0, r3
 4091 0174 FFF7FEFF 		bl	__aeabi_i2d
 4092 0178 0446     		mov	r4, r0
 4093 017a 0D46     		mov	r5, r1
 4094 017c 7868     		ldr	r0, [r7, #4]
 4095 017e FFF7FEFF 		bl	__aeabi_i2d
 4096 0182 0246     		mov	r2, r0
 4097 0184 0B46     		mov	r3, r1
 4098 0186 1046     		mov	r0, r2
 4099 0188 1946     		mov	r1, r3
 4100 018a D7E90423 		ldrd	r2, [r7, #16]
 4101 018e FFF7FEFF 		bl	__aeabi_dmul
 4102 0192 0246     		mov	r2, r0
 4103 0194 0B46     		mov	r3, r1
 4104 0196 2046     		mov	r0, r4
 4105 0198 2946     		mov	r1, r5
 4106 019a FFF7FEFF 		bl	__aeabi_dadd
 4107 019e 0246     		mov	r2, r0
 4108 01a0 0B46     		mov	r3, r1
 4109 01a2 1046     		mov	r0, r2
 4110 01a4 1946     		mov	r1, r3
 4111 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4112 01aa 0346     		mov	r3, r0
 4113 01ac 9AB2     		uxth	r2, r3
 4114 01ae 1F4B     		ldr	r3, .L231+28
 4115 01b0 1A80     		strh	r2, [r3]	@ movhi
 938:.\main.c      ****     
 939:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4116              		.loc 1 939 0
 4117 01b2 1E4B     		ldr	r3, .L231+28
 4118 01b4 1B88     		ldrh	r3, [r3]
 4119 01b6 1BB2     		sxth	r3, r3
 4120 01b8 002B     		cmp	r3, #0
 4121 01ba 02DA     		bge	.L227
 4122              		.loc 1 939 0 is_stmt 0 discriminator 1
 4123 01bc 1B4B     		ldr	r3, .L231+28
 4124 01be 0022     		movs	r2, #0
 4125 01c0 1A80     		strh	r2, [r3]	@ movhi
 4126              	.L227:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 91


 940:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4127              		.loc 1 940 0 is_stmt 1
 4128 01c2 184B     		ldr	r3, .L231+20
 4129 01c4 1B88     		ldrh	r3, [r3]
 4130 01c6 1BB2     		sxth	r3, r3
 4131 01c8 002B     		cmp	r3, #0
 4132 01ca 02DA     		bge	.L228
 4133              		.loc 1 940 0 is_stmt 0 discriminator 1
 4134 01cc 154B     		ldr	r3, .L231+20
 4135 01ce 0022     		movs	r2, #0
 4136 01d0 1A80     		strh	r2, [r3]	@ movhi
 4137              	.L228:
 941:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4138              		.loc 1 941 0 is_stmt 1
 4139 01d2 164B     		ldr	r3, .L231+28
 4140 01d4 1B88     		ldrh	r3, [r3]
 4141 01d6 1BB2     		sxth	r3, r3
 4142 01d8 642B     		cmp	r3, #100
 4143 01da 02DD     		ble	.L229
 4144              		.loc 1 941 0 is_stmt 0 discriminator 1
 4145 01dc 134B     		ldr	r3, .L231+28
 4146 01de 6422     		movs	r2, #100
 4147 01e0 1A80     		strh	r2, [r3]	@ movhi
 4148              	.L229:
 942:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4149              		.loc 1 942 0 is_stmt 1
 4150 01e2 104B     		ldr	r3, .L231+20
 4151 01e4 1B88     		ldrh	r3, [r3]
 4152 01e6 1BB2     		sxth	r3, r3
 4153 01e8 642B     		cmp	r3, #100
 4154 01ea 02DD     		ble	.L230
 4155              		.loc 1 942 0 is_stmt 0 discriminator 1
 4156 01ec 0D4B     		ldr	r3, .L231+20
 4157 01ee 6422     		movs	r2, #100
 4158 01f0 1A80     		strh	r2, [r3]	@ movhi
 4159              	.L230:
 943:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4160              		.loc 1 943 0 is_stmt 1
 4161 01f2 0C4B     		ldr	r3, .L231+20
 4162 01f4 1B88     		ldrh	r3, [r3]
 4163 01f6 DBB2     		uxtb	r3, r3
 4164 01f8 1846     		mov	r0, r3
 4165 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 944:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4166              		.loc 1 944 0
 4167 01fe 0B4B     		ldr	r3, .L231+28
 4168 0200 1B88     		ldrh	r3, [r3]
 4169 0202 DBB2     		uxtb	r3, r3
 4170 0204 1846     		mov	r0, r3
 4171 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4172              	.L223:
 945:.\main.c      **** }
 4173              		.loc 1 945 0
 4174 020a 2037     		adds	r7, r7, #32
 4175              		.cfi_def_cfa_offset 16
 4176 020c BD46     		mov	sp, r7
 4177              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 92


 4178              		@ sp needed
 4179 020e B0BD     		pop	{r4, r5, r7, pc}
 4180              	.L232:
 4181              		.align	2
 4182              	.L231:
 4183 0210 00000000 		.word	flag_calc_wheelspeed
 4184 0214 00000000 		.word	quad_diff1
 4185 0218 00000000 		.word	quad_diff2
 4186 021c 0000F03F 		.word	1072693248
 4187 0220 00000000 		.word	leftSpeedLimit
 4188 0224 00000000 		.word	left_duty_cycle
 4189 0228 00000000 		.word	rightSpeedLimit
 4190 022c 00000000 		.word	right_duty_cycle
 4191              		.cfi_endproc
 4192              	.LFE96:
 4193              		.size	Quad_Dec_response, .-Quad_Dec_response
 4194              		.section	.text.trackLine,"ax",%progbits
 4195              		.align	2
 4196              		.global	trackLine
 4197              		.thumb
 4198              		.thumb_func
 4199              		.type	trackLine, %function
 4200              	trackLine:
 4201              	.LFB97:
 946:.\main.c      **** 
 947:.\main.c      **** void trackLine()
 948:.\main.c      **** {
 4202              		.loc 1 948 0
 4203              		.cfi_startproc
 4204              		@ args = 0, pretend = 0, frame = 0
 4205              		@ frame_needed = 1, uses_anonymous_args = 0
 4206              		@ link register save eliminated.
 4207 0000 80B4     		push	{r7}
 4208              		.cfi_def_cfa_offset 4
 4209              		.cfi_offset 7, -4
 4210 0002 00AF     		add	r7, sp, #0
 4211              		.cfi_def_cfa_register 7
 949:.\main.c      ****  //removed from implementation
 950:.\main.c      **** }
 4212              		.loc 1 950 0
 4213 0004 BD46     		mov	sp, r7
 4214              		.cfi_def_cfa_register 13
 4215              		@ sp needed
 4216 0006 5DF8047B 		ldr	r7, [sp], #4
 4217              		.cfi_restore 7
 4218              		.cfi_def_cfa_offset 0
 4219 000a 7047     		bx	lr
 4220              		.cfi_endproc
 4221              	.LFE97:
 4222              		.size	trackLine, .-trackLine
 4223              		.global	leftTurnCount
 4224              		.bss
 4225              		.align	1
 4226              		.type	leftTurnCount, %object
 4227              		.size	leftTurnCount, 2
 4228              	leftTurnCount:
 4229 28e8 0000     		.space	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 93


 4230              		.global	rightTurnCount
 4231              		.align	1
 4232              		.type	rightTurnCount, %object
 4233              		.size	rightTurnCount, 2
 4234              	rightTurnCount:
 4235 28ea 0000     		.space	2
 4236              		.section	.text.trackLineZ,"ax",%progbits
 4237              		.align	2
 4238              		.global	trackLineZ
 4239              		.thumb
 4240              		.thumb_func
 4241              		.type	trackLineZ, %function
 4242              	trackLineZ:
 4243              	.LFB98:
 951:.\main.c      **** uint16 leftTurnCount = 0;
 952:.\main.c      **** uint16 rightTurnCount = 0;
 953:.\main.c      **** void trackLineZ()
 954:.\main.c      **** {
 4244              		.loc 1 954 0
 4245              		.cfi_startproc
 4246              		@ args = 0, pretend = 0, frame = 8
 4247              		@ frame_needed = 1, uses_anonymous_args = 0
 4248 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4249              		.cfi_def_cfa_offset 24
 4250              		.cfi_offset 4, -24
 4251              		.cfi_offset 5, -20
 4252              		.cfi_offset 7, -16
 4253              		.cfi_offset 8, -12
 4254              		.cfi_offset 9, -8
 4255              		.cfi_offset 14, -4
 4256 0004 82B0     		sub	sp, sp, #8
 4257              		.cfi_def_cfa_offset 32
 4258 0006 00AF     		add	r7, sp, #0
 4259              		.cfi_def_cfa_register 7
 955:.\main.c      ****     //read the value of the three central-front sensors
 956:.\main.c      ****     
 957:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4260              		.loc 1 957 0
 4261 0008 FFF7FEFF 		bl	NLSens_out_Read
 4262 000c 0346     		mov	r3, r0
 4263 000e FB71     		strb	r3, [r7, #7]
 958:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4264              		.loc 1 958 0
 4265 0010 FFF7FEFF 		bl	NRSens_out_Read
 4266 0014 0346     		mov	r3, r0
 4267 0016 BB71     		strb	r3, [r7, #6]
 959:.\main.c      ****     uint8 mid = MSens_out_Read();
 4268              		.loc 1 959 0
 4269 0018 FFF7FEFF 		bl	MSens_out_Read
 4270 001c 0346     		mov	r3, r0
 4271 001e 7B71     		strb	r3, [r7, #5]
 960:.\main.c      ****     
 961:.\main.c      ****         //if only the left one, hard left
 962:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4272              		.loc 1 962 0
 4273 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4274 0022 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 94


 4275 0024 27D0     		beq	.L235
 4276              		.loc 1 962 0 is_stmt 0 discriminator 1
 4277 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4278 0028 002B     		cmp	r3, #0
 4279 002a 24D1     		bne	.L235
 4280              		.loc 1 962 0 discriminator 2
 4281 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4282 002e 002B     		cmp	r3, #0
 4283 0030 21D1     		bne	.L235
 963:.\main.c      ****     {
 964:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4284              		.loc 1 964 0 is_stmt 1
 4285 0032 454B     		ldr	r3, .L240+8
 4286 0034 D3E90023 		ldrd	r2, [r3]
 4287 0038 1046     		mov	r0, r2
 4288 003a 1946     		mov	r1, r3
 4289 003c 40A3     		adr	r3, .L240
 4290 003e D3E90023 		ldrd	r2, [r3]
 4291 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4292 0046 0246     		mov	r2, r0
 4293 0048 0B46     		mov	r3, r1
 4294 004a 1446     		mov	r4, r2
 4295 004c 1D46     		mov	r5, r3
 4296 004e 3E4B     		ldr	r3, .L240+8
 4297 0050 D3E90023 		ldrd	r2, [r3]
 4298 0054 9046     		mov	r8, r2
 4299 0056 83F00049 		eor	r9, r3, #-2147483648
 4300 005a 4046     		mov	r0, r8
 4301 005c 4946     		mov	r1, r9
 4302 005e 38A3     		adr	r3, .L240
 4303 0060 D3E90023 		ldrd	r2, [r3]
 4304 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4305 0068 0246     		mov	r2, r0
 4306 006a 0B46     		mov	r3, r1
 4307 006c 2046     		mov	r0, r4
 4308 006e 2946     		mov	r1, r5
 4309 0070 FFF7FEFF 		bl	setSpeed
 4310 0074 5FE0     		b	.L234
 4311              	.L235:
 965:.\main.c      ****     }
 966:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4312              		.loc 1 966 0
 4313 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4314 0078 002B     		cmp	r3, #0
 4315 007a 0ED0     		beq	.L237
 4316              		.loc 1 966 0 is_stmt 0 discriminator 1
 4317 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4318 007e 002B     		cmp	r3, #0
 4319 0080 0BD0     		beq	.L237
 4320              		.loc 1 966 0 discriminator 2
 4321 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4322 0084 002B     		cmp	r3, #0
 4323 0086 08D1     		bne	.L237
 967:.\main.c      ****     {
 968:.\main.c      ****         setSpeed(speed,speed);
 4324              		.loc 1 968 0 is_stmt 1
 4325 0088 2F4B     		ldr	r3, .L240+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 95


 4326 008a D3E90001 		ldrd	r0, [r3]
 4327 008e 2E4B     		ldr	r3, .L240+8
 4328 0090 D3E90023 		ldrd	r2, [r3]
 4329 0094 FFF7FEFF 		bl	setSpeed
 4330 0098 4DE0     		b	.L234
 4331              	.L237:
 969:.\main.c      ****     }
 970:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4332              		.loc 1 970 0
 4333 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4334 009c 002B     		cmp	r3, #0
 4335 009e 0ED0     		beq	.L238
 4336              		.loc 1 970 0 is_stmt 0 discriminator 1
 4337 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4338 00a2 002B     		cmp	r3, #0
 4339 00a4 0BD0     		beq	.L238
 4340              		.loc 1 970 0 discriminator 2
 4341 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4342 00a8 002B     		cmp	r3, #0
 4343 00aa 08D1     		bne	.L238
 971:.\main.c      ****     {
 972:.\main.c      ****         setSpeed(speed ,speed);
 4344              		.loc 1 972 0 is_stmt 1
 4345 00ac 264B     		ldr	r3, .L240+8
 4346 00ae D3E90001 		ldrd	r0, [r3]
 4347 00b2 254B     		ldr	r3, .L240+8
 4348 00b4 D3E90023 		ldrd	r2, [r3]
 4349 00b8 FFF7FEFF 		bl	setSpeed
 4350 00bc 3BE0     		b	.L234
 4351              	.L238:
 973:.\main.c      ****     }
 974:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4352              		.loc 1 974 0
 4353 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4354 00c0 002B     		cmp	r3, #0
 4355 00c2 27D0     		beq	.L239
 4356              		.loc 1 974 0 is_stmt 0 discriminator 1
 4357 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4358 00c6 002B     		cmp	r3, #0
 4359 00c8 24D1     		bne	.L239
 4360              		.loc 1 974 0 discriminator 2
 4361 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4362 00cc 002B     		cmp	r3, #0
 4363 00ce 21D1     		bne	.L239
 975:.\main.c      ****     {
 976:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4364              		.loc 1 976 0 is_stmt 1
 4365 00d0 1D4B     		ldr	r3, .L240+8
 4366 00d2 D3E90023 		ldrd	r2, [r3]
 4367 00d6 1446     		mov	r4, r2
 4368 00d8 83F00045 		eor	r5, r3, #-2147483648
 4369 00dc 2046     		mov	r0, r4
 4370 00de 2946     		mov	r1, r5
 4371 00e0 17A3     		adr	r3, .L240
 4372 00e2 D3E90023 		ldrd	r2, [r3]
 4373 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4374 00ea 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 96


 4375 00ec 0B46     		mov	r3, r1
 4376 00ee 1446     		mov	r4, r2
 4377 00f0 1D46     		mov	r5, r3
 4378 00f2 154B     		ldr	r3, .L240+8
 4379 00f4 D3E90023 		ldrd	r2, [r3]
 4380 00f8 1046     		mov	r0, r2
 4381 00fa 1946     		mov	r1, r3
 4382 00fc 10A3     		adr	r3, .L240
 4383 00fe D3E90023 		ldrd	r2, [r3]
 4384 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4385 0106 0246     		mov	r2, r0
 4386 0108 0B46     		mov	r3, r1
 4387 010a 2046     		mov	r0, r4
 4388 010c 2946     		mov	r1, r5
 4389 010e FFF7FEFF 		bl	setSpeed
 4390 0112 10E0     		b	.L234
 4391              	.L239:
 977:.\main.c      ****     }
 978:.\main.c      ****     else if (mid && !nr && !nl)
 4392              		.loc 1 978 0
 4393 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4394 0116 002B     		cmp	r3, #0
 4395 0118 0DD0     		beq	.L234
 4396              		.loc 1 978 0 is_stmt 0 discriminator 1
 4397 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4398 011c 002B     		cmp	r3, #0
 4399 011e 0AD1     		bne	.L234
 4400              		.loc 1 978 0 discriminator 2
 4401 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4402 0122 002B     		cmp	r3, #0
 4403 0124 07D1     		bne	.L234
 979:.\main.c      ****     {
 980:.\main.c      ****         setSpeed(speed,speed);
 4404              		.loc 1 980 0 is_stmt 1
 4405 0126 084B     		ldr	r3, .L240+8
 4406 0128 D3E90001 		ldrd	r0, [r3]
 4407 012c 064B     		ldr	r3, .L240+8
 4408 012e D3E90023 		ldrd	r2, [r3]
 4409 0132 FFF7FEFF 		bl	setSpeed
 4410              	.L234:
 981:.\main.c      ****     }
 982:.\main.c      **** }
 4411              		.loc 1 982 0
 4412 0136 0837     		adds	r7, r7, #8
 4413              		.cfi_def_cfa_offset 24
 4414 0138 BD46     		mov	sp, r7
 4415              		.cfi_def_cfa_register 13
 4416              		@ sp needed
 4417 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4418              	.L241:
 4419 013e 00BF     		.align	3
 4420              	.L240:
 4421 0140 9A999999 		.word	-1717986918
 4422 0144 9999F93F 		.word	1073322393
 4423 0148 00000000 		.word	speed
 4424              		.cfi_endproc
 4425              	.LFE98:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 97


 4426              		.size	trackLineZ, .-trackLineZ
 4427 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4428              		.align	2
 4429              		.global	trackLineU
 4430              		.thumb
 4431              		.thumb_func
 4432              		.type	trackLineU, %function
 4433              	trackLineU:
 4434              	.LFB99:
 983:.\main.c      **** 
 984:.\main.c      **** 
 985:.\main.c      **** void trackLineU()
 986:.\main.c      **** { 
 4435              		.loc 1 986 0
 4436              		.cfi_startproc
 4437              		@ args = 0, pretend = 0, frame = 0
 4438              		@ frame_needed = 1, uses_anonymous_args = 0
 4439              		@ link register save eliminated.
 4440 0000 80B4     		push	{r7}
 4441              		.cfi_def_cfa_offset 4
 4442              		.cfi_offset 7, -4
 4443 0002 00AF     		add	r7, sp, #0
 4444              		.cfi_def_cfa_register 7
 987:.\main.c      **** //removed from final implementation
 988:.\main.c      **** }
 4445              		.loc 1 988 0
 4446 0004 BD46     		mov	sp, r7
 4447              		.cfi_def_cfa_register 13
 4448              		@ sp needed
 4449 0006 5DF8047B 		ldr	r7, [sp], #4
 4450              		.cfi_restore 7
 4451              		.cfi_def_cfa_offset 0
 4452 000a 7047     		bx	lr
 4453              		.cfi_endproc
 4454              	.LFE99:
 4455              		.size	trackLineU, .-trackLineU
 4456              		.global	__aeabi_fadd
 4457              		.section	.rodata
 4458 00db 00       		.align	2
 4459              	.LC11:
 4460 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4460      65727920 
 4460      566F6C74 
 4460      6167653A 
 4460      2025646D 
 4461              		.section	.text.print_ADC,"ax",%progbits
 4462              		.align	2
 4463              		.global	print_ADC
 4464              		.thumb
 4465              		.thumb_func
 4466              		.type	print_ADC, %function
 4467              	print_ADC:
 4468              	.LFB100:
 989:.\main.c      **** 
 990:.\main.c      **** void print_ADC()
 991:.\main.c      **** {
 4469              		.loc 1 991 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 98


 4470              		.cfi_startproc
 4471              		@ args = 0, pretend = 0, frame = 24
 4472              		@ frame_needed = 1, uses_anonymous_args = 0
 4473 0000 80B5     		push	{r7, lr}
 4474              		.cfi_def_cfa_offset 8
 4475              		.cfi_offset 7, -8
 4476              		.cfi_offset 14, -4
 4477 0002 86B0     		sub	sp, sp, #24
 4478              		.cfi_def_cfa_offset 32
 4479 0004 00AF     		add	r7, sp, #0
 4480              		.cfi_def_cfa_register 7
 992:.\main.c      ****    //usbPutString("HII\n");
 993:.\main.c      ****     if(flag_receive_ADC == 1)
 4481              		.loc 1 993 0
 4482 0006 274B     		ldr	r3, .L246
 4483 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4484 000a 012B     		cmp	r3, #1
 4485 000c 46D1     		bne	.L243
 4486              	.LBB10:
 994:.\main.c      ****     {
 995:.\main.c      ****         //usbPutString("AAA\r\n");
 996:.\main.c      ****         flag_receive_ADC = 0;
 4487              		.loc 1 996 0
 4488 000e 254B     		ldr	r3, .L246
 4489 0010 0022     		movs	r2, #0
 4490 0012 1A70     		strb	r2, [r3]
 997:.\main.c      ****         
 998:.\main.c      ****        // int8 channel = ADC_
 999:.\main.c      ****         float scalingFactor = 0.972;
 4491              		.loc 1 999 0
 4492 0014 244B     		ldr	r3, .L246+4
 4493 0016 7B61     		str	r3, [r7, #20]	@ float
1000:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4494              		.loc 1 1000 0
 4495 0018 244B     		ldr	r3, .L246+8
 4496 001a 1B88     		ldrh	r3, [r3]
 4497 001c 1BB2     		sxth	r3, r3
 4498 001e 41F28832 		movw	r2, #5000
 4499 0022 02FB03F3 		mul	r3, r2, r3
 4500 0026 002B     		cmp	r3, #0
 4501 0028 01DA     		bge	.L245
 4502 002a 03F6FF73 		addw	r3, r3, #4095
 4503              	.L245:
 4504 002e 1B13     		asrs	r3, r3, #12
 4505 0030 1846     		mov	r0, r3
 4506 0032 FFF7FEFF 		bl	__aeabi_i2f
 4507 0036 0346     		mov	r3, r0
 4508 0038 1846     		mov	r0, r3
 4509 003a 7969     		ldr	r1, [r7, #20]	@ float
 4510 003c FFF7FEFF 		bl	__aeabi_fmul
 4511 0040 0346     		mov	r3, r0
 4512 0042 1846     		mov	r0, r3
 4513 0044 1946     		mov	r1, r3
 4514 0046 FFF7FEFF 		bl	__aeabi_fadd
 4515 004a 0346     		mov	r3, r0
 4516 004c 1846     		mov	r0, r3
 4517 004e FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 99


 4518 0052 0346     		mov	r3, r0
 4519 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1001:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4520              		.loc 1 1001 0
 4521 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4522 005a 154B     		ldr	r3, .L246+12
 4523 005c 1B88     		ldrh	r3, [r3]
 4524 005e 1BB2     		sxth	r3, r3
 4525 0060 1A44     		add	r2, r2, r3
 4526 0062 144B     		ldr	r3, .L246+16
 4527 0064 1B88     		ldrh	r3, [r3]
 4528 0066 1BB2     		sxth	r3, r3
 4529 0068 1344     		add	r3, r3, r2
 4530 006a 134A     		ldr	r2, .L246+20
 4531 006c 82FB0312 		smull	r1, r2, r2, r3
 4532 0070 DB17     		asrs	r3, r3, #31
 4533 0072 D31A     		subs	r3, r2, r3
 4534 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1002:.\main.c      ****         prevVoltage2 = prevVoltage;
 4535              		.loc 1 1002 0
 4536 0076 0E4B     		ldr	r3, .L246+12
 4537 0078 1A88     		ldrh	r2, [r3]
 4538 007a 0E4B     		ldr	r3, .L246+16
 4539 007c 1A80     		strh	r2, [r3]	@ movhi
1003:.\main.c      ****         prevVoltage = converted_val;
 4540              		.loc 1 1003 0
 4541 007e 0C4A     		ldr	r2, .L246+12
 4542 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4543 0082 1380     		strh	r3, [r2]	@ movhi
1004:.\main.c      ****         
1005:.\main.c      ****         char result_str[16];
1006:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4544              		.loc 1 1006 0
 4545 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4546 0088 3A46     		mov	r2, r7
 4547 008a 1046     		mov	r0, r2
 4548 008c 0B49     		ldr	r1, .L246+24
 4549 008e 1A46     		mov	r2, r3
 4550 0090 FFF7FEFF 		bl	sprintf
1007:.\main.c      ****         
1008:.\main.c      ****         usbPutString(result_str);
 4551              		.loc 1 1008 0
 4552 0094 3B46     		mov	r3, r7
 4553 0096 1846     		mov	r0, r3
 4554 0098 FFF7FEFF 		bl	usbPutString
 4555              	.L243:
 4556              	.LBE10:
1009:.\main.c      ****     }
1010:.\main.c      **** }
 4557              		.loc 1 1010 0
 4558 009c 1837     		adds	r7, r7, #24
 4559              		.cfi_def_cfa_offset 8
 4560 009e BD46     		mov	sp, r7
 4561              		.cfi_def_cfa_register 13
 4562              		@ sp needed
 4563 00a0 80BD     		pop	{r7, pc}
 4564              	.L247:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 100


 4565 00a2 00BF     		.align	2
 4566              	.L246:
 4567 00a4 00000000 		.word	flag_receive_ADC
 4568 00a8 FED4783F 		.word	1064883454
 4569 00ac 00000000 		.word	adc_result
 4570 00b0 00000000 		.word	prevVoltage
 4571 00b4 00000000 		.word	prevVoltage2
 4572 00b8 56555555 		.word	1431655766
 4573 00bc DC000000 		.word	.LC11
 4574              		.cfi_endproc
 4575              	.LFE100:
 4576              		.size	print_ADC, .-print_ADC
 4577              		.section	.rodata
 4578              		.align	2
 4579              	.LC12:
 4580 00f4 52535349 		.ascii	"RSSI:\000"
 4580      3A00
 4581 00fa 0000     		.align	2
 4582              	.LC13:
 4583 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4583      00
 4584 0101 000000   		.align	2
 4585              	.LC14:
 4586 0104 726F626F 		.ascii	"robot_x:\000"
 4586      745F783A 
 4586      00
 4587 010d 000000   		.align	2
 4588              	.LC15:
 4589 0110 726F626F 		.ascii	"robot_y:\000"
 4589      745F793A 
 4589      00
 4590 0119 000000   		.align	2
 4591              	.LC16:
 4592 011c 726F626F 		.ascii	"robot_dir:\000"
 4592      745F6469 
 4592      723A00
 4593 0127 00       		.section	.text.print_RF,"ax",%progbits
 4594              		.align	2
 4595              		.global	print_RF
 4596              		.thumb
 4597              		.thumb_func
 4598              		.type	print_RF, %function
 4599              	print_RF:
 4600              	.LFB101:
1011:.\main.c      **** 
1012:.\main.c      **** void print_RF()
1013:.\main.c      **** {
 4601              		.loc 1 1013 0
 4602              		.cfi_startproc
 4603              		@ args = 0, pretend = 0, frame = 16
 4604              		@ frame_needed = 1, uses_anonymous_args = 0
 4605 0000 80B5     		push	{r7, lr}
 4606              		.cfi_def_cfa_offset 8
 4607              		.cfi_offset 7, -8
 4608              		.cfi_offset 14, -4
 4609 0002 84B0     		sub	sp, sp, #16
 4610              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 101


 4611 0004 00AF     		add	r7, sp, #0
 4612              		.cfi_def_cfa_register 7
1014:.\main.c      ****     if(flag_print_rf == 1)
 4613              		.loc 1 1014 0
 4614 0006 254B     		ldr	r3, .L250
 4615 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4616 000a 012B     		cmp	r3, #1
 4617 000c 42D1     		bne	.L248
 4618              	.LBB11:
1015:.\main.c      ****     {
1016:.\main.c      ****         char printString[16];
1017:.\main.c      ****         flag_print_rf = 0;
 4619              		.loc 1 1017 0
 4620 000e 234B     		ldr	r3, .L250
 4621 0010 0022     		movs	r2, #0
 4622 0012 1A70     		strb	r2, [r3]
1018:.\main.c      ****         usbPutString("RSSI:");
 4623              		.loc 1 1018 0
 4624 0014 2248     		ldr	r0, .L250+4
 4625 0016 FFF7FEFF 		bl	usbPutString
1019:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4626              		.loc 1 1019 0
 4627 001a 224B     		ldr	r3, .L250+8
 4628 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4629 001e 5BB2     		sxtb	r3, r3
 4630 0020 3A46     		mov	r2, r7
 4631 0022 1046     		mov	r0, r2
 4632 0024 2049     		ldr	r1, .L250+12
 4633 0026 1A46     		mov	r2, r3
 4634 0028 FFF7FEFF 		bl	sprintf
1020:.\main.c      ****         usbPutString(printString);
 4635              		.loc 1 1020 0
 4636 002c 3B46     		mov	r3, r7
 4637 002e 1846     		mov	r0, r3
 4638 0030 FFF7FEFF 		bl	usbPutString
1021:.\main.c      ****         usbPutString("robot_x:");
 4639              		.loc 1 1021 0
 4640 0034 1D48     		ldr	r0, .L250+16
 4641 0036 FFF7FEFF 		bl	usbPutString
1022:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4642              		.loc 1 1022 0
 4643 003a 1A4B     		ldr	r3, .L250+8
 4644 003c 5B88     		ldrh	r3, [r3, #2]
 4645 003e 1BB2     		sxth	r3, r3
 4646 0040 3A46     		mov	r2, r7
 4647 0042 1046     		mov	r0, r2
 4648 0044 1849     		ldr	r1, .L250+12
 4649 0046 1A46     		mov	r2, r3
 4650 0048 FFF7FEFF 		bl	sprintf
1023:.\main.c      ****         usbPutString(printString);
 4651              		.loc 1 1023 0
 4652 004c 3B46     		mov	r3, r7
 4653 004e 1846     		mov	r0, r3
 4654 0050 FFF7FEFF 		bl	usbPutString
1024:.\main.c      ****         usbPutString("robot_y:");
 4655              		.loc 1 1024 0
 4656 0054 1648     		ldr	r0, .L250+20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 102


 4657 0056 FFF7FEFF 		bl	usbPutString
1025:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4658              		.loc 1 1025 0
 4659 005a 124B     		ldr	r3, .L250+8
 4660 005c 9B88     		ldrh	r3, [r3, #4]
 4661 005e 1BB2     		sxth	r3, r3
 4662 0060 3A46     		mov	r2, r7
 4663 0062 1046     		mov	r0, r2
 4664 0064 1049     		ldr	r1, .L250+12
 4665 0066 1A46     		mov	r2, r3
 4666 0068 FFF7FEFF 		bl	sprintf
1026:.\main.c      ****         usbPutString(printString);
 4667              		.loc 1 1026 0
 4668 006c 3B46     		mov	r3, r7
 4669 006e 1846     		mov	r0, r3
 4670 0070 FFF7FEFF 		bl	usbPutString
1027:.\main.c      ****         usbPutString("robot_dir:");
 4671              		.loc 1 1027 0
 4672 0074 0F48     		ldr	r0, .L250+24
 4673 0076 FFF7FEFF 		bl	usbPutString
1028:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4674              		.loc 1 1028 0
 4675 007a 0A4B     		ldr	r3, .L250+8
 4676 007c DB88     		ldrh	r3, [r3, #6]
 4677 007e 1BB2     		sxth	r3, r3
 4678 0080 3A46     		mov	r2, r7
 4679 0082 1046     		mov	r0, r2
 4680 0084 0849     		ldr	r1, .L250+12
 4681 0086 1A46     		mov	r2, r3
 4682 0088 FFF7FEFF 		bl	sprintf
1029:.\main.c      ****         usbPutString(printString);
 4683              		.loc 1 1029 0
 4684 008c 3B46     		mov	r3, r7
 4685 008e 1846     		mov	r0, r3
 4686 0090 FFF7FEFF 		bl	usbPutString
 4687              	.L248:
 4688              	.LBE11:
1030:.\main.c      ****     }
1031:.\main.c      **** }
 4689              		.loc 1 1031 0
 4690 0094 1037     		adds	r7, r7, #16
 4691              		.cfi_def_cfa_offset 8
 4692 0096 BD46     		mov	sp, r7
 4693              		.cfi_def_cfa_register 13
 4694              		@ sp needed
 4695 0098 80BD     		pop	{r7, pc}
 4696              	.L251:
 4697 009a 00BF     		.align	2
 4698              	.L250:
 4699 009c 00000000 		.word	flag_print_rf
 4700 00a0 F4000000 		.word	.LC12
 4701 00a4 00000000 		.word	system_state
 4702 00a8 FC000000 		.word	.LC13
 4703 00ac 04010000 		.word	.LC14
 4704 00b0 10010000 		.word	.LC15
 4705 00b4 1C010000 		.word	.LC16
 4706              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 103


 4707              	.LFE101:
 4708              		.size	print_RF, .-print_RF
 4709              		.section	.text.readFrontSensors,"ax",%progbits
 4710              		.align	2
 4711              		.global	readFrontSensors
 4712              		.thumb
 4713              		.thumb_func
 4714              		.type	readFrontSensors, %function
 4715              	readFrontSensors:
 4716              	.LFB102:
1032:.\main.c      **** 
1033:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1034:.\main.c      **** {
 4717              		.loc 1 1034 0
 4718              		.cfi_startproc
 4719              		@ args = 0, pretend = 0, frame = 8
 4720              		@ frame_needed = 1, uses_anonymous_args = 0
 4721 0000 90B5     		push	{r4, r7, lr}
 4722              		.cfi_def_cfa_offset 12
 4723              		.cfi_offset 4, -12
 4724              		.cfi_offset 7, -8
 4725              		.cfi_offset 14, -4
 4726 0002 83B0     		sub	sp, sp, #12
 4727              		.cfi_def_cfa_offset 24
 4728 0004 00AF     		add	r7, sp, #0
 4729              		.cfi_def_cfa_register 7
 4730 0006 7860     		str	r0, [r7, #4]
1035:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4731              		.loc 1 1035 0
 4732 0008 FFF7FEFF 		bl	FLSens_out_Read
 4733 000c 0346     		mov	r3, r0
 4734 000e 1A46     		mov	r2, r3
 4735 0010 7B68     		ldr	r3, [r7, #4]
 4736 0012 1A70     		strb	r2, [r3]
1036:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4737              		.loc 1 1036 0
 4738 0014 7B68     		ldr	r3, [r7, #4]
 4739 0016 5C1C     		adds	r4, r3, #1
 4740 0018 FFF7FEFF 		bl	NLSens_out_Read
 4741 001c 0346     		mov	r3, r0
 4742 001e 2370     		strb	r3, [r4]
1037:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4743              		.loc 1 1037 0
 4744 0020 7B68     		ldr	r3, [r7, #4]
 4745 0022 9C1C     		adds	r4, r3, #2
 4746 0024 FFF7FEFF 		bl	MSens_out_Read
 4747 0028 0346     		mov	r3, r0
 4748 002a 2370     		strb	r3, [r4]
1038:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4749              		.loc 1 1038 0
 4750 002c 7B68     		ldr	r3, [r7, #4]
 4751 002e DC1C     		adds	r4, r3, #3
 4752 0030 FFF7FEFF 		bl	NRSens_out_Read
 4753 0034 0346     		mov	r3, r0
 4754 0036 2370     		strb	r3, [r4]
1039:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4755              		.loc 1 1039 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 104


 4756 0038 7B68     		ldr	r3, [r7, #4]
 4757 003a 1C1D     		adds	r4, r3, #4
 4758 003c FFF7FEFF 		bl	FRSens_out_Read
 4759 0040 0346     		mov	r3, r0
 4760 0042 2370     		strb	r3, [r4]
1040:.\main.c      **** }
 4761              		.loc 1 1040 0
 4762 0044 0C37     		adds	r7, r7, #12
 4763              		.cfi_def_cfa_offset 12
 4764 0046 BD46     		mov	sp, r7
 4765              		.cfi_def_cfa_register 13
 4766              		@ sp needed
 4767 0048 90BD     		pop	{r4, r7, pc}
 4768              		.cfi_endproc
 4769              	.LFE102:
 4770              		.size	readFrontSensors, .-readFrontSensors
 4771 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4772              		.align	2
 4773              		.global	usbPutString
 4774              		.thumb
 4775              		.thumb_func
 4776              		.type	usbPutString, %function
 4777              	usbPutString:
 4778              	.LFB103:
1041:.\main.c      **** 
1042:.\main.c      **** 
1043:.\main.c      **** //* ========================================
1044:.\main.c      **** void usbPutString(char *s)
1045:.\main.c      **** {
 4779              		.loc 1 1045 0
 4780              		.cfi_startproc
 4781              		@ args = 0, pretend = 0, frame = 16
 4782              		@ frame_needed = 1, uses_anonymous_args = 0
 4783 0000 80B5     		push	{r7, lr}
 4784              		.cfi_def_cfa_offset 8
 4785              		.cfi_offset 7, -8
 4786              		.cfi_offset 14, -4
 4787 0002 84B0     		sub	sp, sp, #16
 4788              		.cfi_def_cfa_offset 24
 4789 0004 00AF     		add	r7, sp, #0
 4790              		.cfi_def_cfa_register 7
 4791 0006 7860     		str	r0, [r7, #4]
1046:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1047:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1048:.\main.c      **** //  length to 62 char (63rd char is a '!')
1049:.\main.c      ****     if (USE_USB && portOpen)
 4792              		.loc 1 1049 0
 4793 0008 154B     		ldr	r3, .L257
 4794 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4795 000c 002B     		cmp	r3, #0
 4796 000e 23D0     		beq	.L253
 4797              	.LBB12:
1050:.\main.c      ****     {
1051:.\main.c      ****             uint32 cnt = 0;
 4798              		.loc 1 1051 0
 4799 0010 0023     		movs	r3, #0
 4800 0012 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 105


1052:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4801              		.loc 1 1052 0
 4802 0014 0AE0     		b	.L255
 4803              	.L256:
1053:.\main.c      ****             {
1054:.\main.c      ****                 cnt++;
 4804              		.loc 1 1054 0
 4805 0016 FB68     		ldr	r3, [r7, #12]
 4806 0018 0133     		adds	r3, r3, #1
 4807 001a FB60     		str	r3, [r7, #12]
1055:.\main.c      ****                 if(cnt == 3000000){
 4808              		.loc 1 1055 0
 4809 001c FB68     		ldr	r3, [r7, #12]
 4810 001e 114A     		ldr	r2, .L257+4
 4811 0020 9342     		cmp	r3, r2
 4812 0022 03D1     		bne	.L255
1056:.\main.c      ****                     portOpen = 0;
 4813              		.loc 1 1056 0
 4814 0024 0E4B     		ldr	r3, .L257
 4815 0026 0022     		movs	r2, #0
 4816 0028 1A70     		strb	r2, [r3]
1057:.\main.c      ****                     return;
 4817              		.loc 1 1057 0
 4818 002a 15E0     		b	.L253
 4819              	.L255:
1052:.\main.c      ****             {
 4820              		.loc 1 1052 0
 4821 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4822 0030 0346     		mov	r3, r0
 4823 0032 002B     		cmp	r3, #0
 4824 0034 EFD0     		beq	.L256
1058:.\main.c      ****                 }
1059:.\main.c      ****             }
1060:.\main.c      ****             s[63]='\0';
 4825              		.loc 1 1060 0
 4826 0036 7B68     		ldr	r3, [r7, #4]
 4827 0038 3F33     		adds	r3, r3, #63
 4828 003a 0022     		movs	r2, #0
 4829 003c 1A70     		strb	r2, [r3]
1061:.\main.c      ****             s[62]='!';
 4830              		.loc 1 1061 0
 4831 003e 7B68     		ldr	r3, [r7, #4]
 4832 0040 3E33     		adds	r3, r3, #62
 4833 0042 2122     		movs	r2, #33
 4834 0044 1A70     		strb	r2, [r3]
1062:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4835              		.loc 1 1062 0
 4836 0046 7868     		ldr	r0, [r7, #4]
 4837 0048 FFF7FEFF 		bl	strlen
 4838 004c 0346     		mov	r3, r0
 4839 004e 9BB2     		uxth	r3, r3
 4840 0050 7868     		ldr	r0, [r7, #4]
 4841 0052 1946     		mov	r1, r3
 4842 0054 FFF7FEFF 		bl	USBUART_PutData
 4843              	.L253:
 4844              	.LBE12:
1063:.\main.c      ****     }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 106


1064:.\main.c      **** }
 4845              		.loc 1 1064 0
 4846 0058 1037     		adds	r7, r7, #16
 4847              		.cfi_def_cfa_offset 8
 4848 005a BD46     		mov	sp, r7
 4849              		.cfi_def_cfa_register 13
 4850              		@ sp needed
 4851 005c 80BD     		pop	{r7, pc}
 4852              	.L258:
 4853 005e 00BF     		.align	2
 4854              	.L257:
 4855 0060 00000000 		.word	portOpen
 4856 0064 C0C62D00 		.word	3000000
 4857              		.cfi_endproc
 4858              	.LFE103:
 4859              		.size	usbPutString, .-usbPutString
 4860              		.section	.text.usbPutChar,"ax",%progbits
 4861              		.align	2
 4862              		.global	usbPutChar
 4863              		.thumb
 4864              		.thumb_func
 4865              		.type	usbPutChar, %function
 4866              	usbPutChar:
 4867              	.LFB104:
1065:.\main.c      **** //* ========================================
1066:.\main.c      **** void usbPutChar(char c)
1067:.\main.c      **** {
 4868              		.loc 1 1067 0
 4869              		.cfi_startproc
 4870              		@ args = 0, pretend = 0, frame = 16
 4871              		@ frame_needed = 1, uses_anonymous_args = 0
 4872 0000 80B5     		push	{r7, lr}
 4873              		.cfi_def_cfa_offset 8
 4874              		.cfi_offset 7, -8
 4875              		.cfi_offset 14, -4
 4876 0002 84B0     		sub	sp, sp, #16
 4877              		.cfi_def_cfa_offset 24
 4878 0004 00AF     		add	r7, sp, #0
 4879              		.cfi_def_cfa_register 7
 4880 0006 0346     		mov	r3, r0
 4881 0008 FB71     		strb	r3, [r7, #7]
1068:.\main.c      ****     if (USE_USB && portOpen)    
 4882              		.loc 1 1068 0
 4883 000a 0F4B     		ldr	r3, .L263
 4884 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4885 000e 002B     		cmp	r3, #0
 4886 0010 16D0     		beq	.L259
 4887              	.LBB13:
1069:.\main.c      ****     {    
1070:.\main.c      ****         uint32 cnt = 0;
 4888              		.loc 1 1070 0
 4889 0012 0023     		movs	r3, #0
 4890 0014 FB60     		str	r3, [r7, #12]
1071:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4891              		.loc 1 1071 0
 4892 0016 0AE0     		b	.L261
 4893              	.L262:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 107


1072:.\main.c      ****             cnt++;
 4894              		.loc 1 1072 0
 4895 0018 FB68     		ldr	r3, [r7, #12]
 4896 001a 0133     		adds	r3, r3, #1
 4897 001c FB60     		str	r3, [r7, #12]
1073:.\main.c      ****             if(cnt == 3000000){
 4898              		.loc 1 1073 0
 4899 001e FB68     		ldr	r3, [r7, #12]
 4900 0020 0A4A     		ldr	r2, .L263+4
 4901 0022 9342     		cmp	r3, r2
 4902 0024 03D1     		bne	.L261
1074:.\main.c      ****                 portOpen = 0;
 4903              		.loc 1 1074 0
 4904 0026 084B     		ldr	r3, .L263
 4905 0028 0022     		movs	r2, #0
 4906 002a 1A70     		strb	r2, [r3]
1075:.\main.c      ****                 return;
 4907              		.loc 1 1075 0
 4908 002c 08E0     		b	.L259
 4909              	.L261:
1071:.\main.c      ****             cnt++;
 4910              		.loc 1 1071 0
 4911 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4912 0032 0346     		mov	r3, r0
 4913 0034 002B     		cmp	r3, #0
 4914 0036 EFD0     		beq	.L262
1076:.\main.c      ****             }
1077:.\main.c      ****         }
1078:.\main.c      ****         USBUART_PutChar(c);
 4915              		.loc 1 1078 0
 4916 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4917 003a 1846     		mov	r0, r3
 4918 003c FFF7FEFF 		bl	USBUART_PutChar
 4919              	.L259:
 4920              	.LBE13:
1079:.\main.c      ****     }    
1080:.\main.c      **** }
 4921              		.loc 1 1080 0
 4922 0040 1037     		adds	r7, r7, #16
 4923              		.cfi_def_cfa_offset 8
 4924 0042 BD46     		mov	sp, r7
 4925              		.cfi_def_cfa_register 13
 4926              		@ sp needed
 4927 0044 80BD     		pop	{r7, pc}
 4928              	.L264:
 4929 0046 00BF     		.align	2
 4930              	.L263:
 4931 0048 00000000 		.word	portOpen
 4932 004c C0C62D00 		.word	3000000
 4933              		.cfi_endproc
 4934              	.LFE104:
 4935              		.size	usbPutChar, .-usbPutChar
 4936              		.section	.text.uart_set_PWM,"ax",%progbits
 4937              		.align	2
 4938              		.global	uart_set_PWM
 4939              		.thumb
 4940              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 108


 4941              		.type	uart_set_PWM, %function
 4942              	uart_set_PWM:
 4943              	.LFB105:
1081:.\main.c      **** //* ========================================
1082:.\main.c      **** 
1083:.\main.c      **** void uart_set_PWM()
1084:.\main.c      **** {
 4944              		.loc 1 1084 0
 4945              		.cfi_startproc
 4946              		@ args = 0, pretend = 0, frame = 0
 4947              		@ frame_needed = 1, uses_anonymous_args = 0
 4948              		@ link register save eliminated.
 4949 0000 80B4     		push	{r7}
 4950              		.cfi_def_cfa_offset 4
 4951              		.cfi_offset 7, -4
 4952 0002 00AF     		add	r7, sp, #0
 4953              		.cfi_def_cfa_register 7
1085:.\main.c      ****     //removed from final implementation
1086:.\main.c      **** }
 4954              		.loc 1 1086 0
 4955 0004 BD46     		mov	sp, r7
 4956              		.cfi_def_cfa_register 13
 4957              		@ sp needed
 4958 0006 5DF8047B 		ldr	r7, [sp], #4
 4959              		.cfi_restore 7
 4960              		.cfi_def_cfa_offset 0
 4961 000a 7047     		bx	lr
 4962              		.cfi_endproc
 4963              	.LFE105:
 4964              		.size	uart_set_PWM, .-uart_set_PWM
 4965              		.text
 4966              	.Letext0:
 4967              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4968              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4969              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4970              		.file 5 ".\\vars.h"
 4971              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4972              		.file 7 ".\\pathfinder.h"
 4973              		.section	.debug_info,"",%progbits
 4974              	.Ldebug_info0:
 4975 0000 290E0000 		.4byte	0xe29
 4976 0004 0400     		.2byte	0x4
 4977 0006 00000000 		.4byte	.Ldebug_abbrev0
 4978 000a 04       		.byte	0x4
 4979 000b 01       		.uleb128 0x1
 4980 000c 9B040000 		.4byte	.LASF195
 4981 0010 01       		.byte	0x1
 4982 0011 79090000 		.4byte	.LASF196
 4983 0015 1C000000 		.4byte	.LASF197
 4984 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4985 001d 00000000 		.4byte	0
 4986 0021 00000000 		.4byte	.Ldebug_line0
 4987 0025 02       		.uleb128 0x2
 4988 0026 01       		.byte	0x1
 4989 0027 06       		.byte	0x6
 4990 0028 B3080000 		.4byte	.LASF0
 4991 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 109


 4992 002d 01       		.byte	0x1
 4993 002e 08       		.byte	0x8
 4994 002f F0070000 		.4byte	.LASF1
 4995 0033 02       		.uleb128 0x2
 4996 0034 02       		.byte	0x2
 4997 0035 05       		.byte	0x5
 4998 0036 51060000 		.4byte	.LASF2
 4999 003a 02       		.uleb128 0x2
 5000 003b 02       		.byte	0x2
 5001 003c 07       		.byte	0x7
 5002 003d BF080000 		.4byte	.LASF3
 5003 0041 03       		.uleb128 0x3
 5004 0042 D7000000 		.4byte	.LASF5
 5005 0046 02       		.byte	0x2
 5006 0047 3F       		.byte	0x3f
 5007 0048 4C000000 		.4byte	0x4c
 5008 004c 02       		.uleb128 0x2
 5009 004d 04       		.byte	0x4
 5010 004e 05       		.byte	0x5
 5011 004f 85060000 		.4byte	.LASF4
 5012 0053 03       		.uleb128 0x3
 5013 0054 FE070000 		.4byte	.LASF6
 5014 0058 02       		.byte	0x2
 5015 0059 41       		.byte	0x41
 5016 005a 5E000000 		.4byte	0x5e
 5017 005e 02       		.uleb128 0x2
 5018 005f 04       		.byte	0x4
 5019 0060 07       		.byte	0x7
 5020 0061 89070000 		.4byte	.LASF7
 5021 0065 02       		.uleb128 0x2
 5022 0066 08       		.byte	0x8
 5023 0067 05       		.byte	0x5
 5024 0068 65040000 		.4byte	.LASF8
 5025 006c 02       		.uleb128 0x2
 5026 006d 08       		.byte	0x8
 5027 006e 07       		.byte	0x7
 5028 006f 7E020000 		.4byte	.LASF9
 5029 0073 04       		.uleb128 0x4
 5030 0074 04       		.byte	0x4
 5031 0075 05       		.byte	0x5
 5032 0076 696E7400 		.ascii	"int\000"
 5033 007a 02       		.uleb128 0x2
 5034 007b 04       		.byte	0x4
 5035 007c 07       		.byte	0x7
 5036 007d BF000000 		.4byte	.LASF10
 5037 0081 02       		.uleb128 0x2
 5038 0082 04       		.byte	0x4
 5039 0083 07       		.byte	0x7
 5040 0084 80070000 		.4byte	.LASF11
 5041 0088 05       		.uleb128 0x5
 5042 0089 04       		.byte	0x4
 5043 008a 8E000000 		.4byte	0x8e
 5044 008e 02       		.uleb128 0x2
 5045 008f 01       		.byte	0x1
 5046 0090 08       		.byte	0x8
 5047 0091 AD030000 		.4byte	.LASF12
 5048 0095 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 110


 5049 0096 A7070000 		.4byte	.LASF13
 5050 009a 03       		.byte	0x3
 5051 009b 2C       		.byte	0x2c
 5052 009c 41000000 		.4byte	0x41
 5053 00a0 03       		.uleb128 0x3
 5054 00a1 FE010000 		.4byte	.LASF14
 5055 00a5 03       		.byte	0x3
 5056 00a6 2D       		.byte	0x2d
 5057 00a7 53000000 		.4byte	0x53
 5058 00ab 06       		.uleb128 0x6
 5059 00ac 06090000 		.4byte	.LASF15
 5060 00b0 04       		.byte	0x4
 5061 00b1 9201     		.2byte	0x192
 5062 00b3 2C000000 		.4byte	0x2c
 5063 00b7 06       		.uleb128 0x6
 5064 00b8 F5030000 		.4byte	.LASF16
 5065 00bc 04       		.byte	0x4
 5066 00bd 9301     		.2byte	0x193
 5067 00bf 3A000000 		.4byte	0x3a
 5068 00c3 06       		.uleb128 0x6
 5069 00c4 6C050000 		.4byte	.LASF17
 5070 00c8 04       		.byte	0x4
 5071 00c9 9401     		.2byte	0x194
 5072 00cb 5E000000 		.4byte	0x5e
 5073 00cf 06       		.uleb128 0x6
 5074 00d0 FC030000 		.4byte	.LASF18
 5075 00d4 04       		.byte	0x4
 5076 00d5 9501     		.2byte	0x195
 5077 00d7 25000000 		.4byte	0x25
 5078 00db 06       		.uleb128 0x6
 5079 00dc E1000000 		.4byte	.LASF19
 5080 00e0 04       		.byte	0x4
 5081 00e1 9601     		.2byte	0x196
 5082 00e3 33000000 		.4byte	0x33
 5083 00e7 02       		.uleb128 0x2
 5084 00e8 04       		.byte	0x4
 5085 00e9 04       		.byte	0x4
 5086 00ea 1E020000 		.4byte	.LASF20
 5087 00ee 02       		.uleb128 0x2
 5088 00ef 08       		.byte	0x8
 5089 00f0 04       		.byte	0x4
 5090 00f1 0C090000 		.4byte	.LASF21
 5091 00f5 07       		.uleb128 0x7
 5092 00f6 A0000000 		.4byte	0xa0
 5093 00fa 05010000 		.4byte	0x105
 5094 00fe 08       		.uleb128 0x8
 5095 00ff 81000000 		.4byte	0x81
 5096 0103 01       		.byte	0x1
 5097 0104 00       		.byte	0
 5098 0105 02       		.uleb128 0x2
 5099 0106 08       		.byte	0x8
 5100 0107 04       		.byte	0x4
 5101 0108 E8050000 		.4byte	.LASF22
 5102 010c 09       		.uleb128 0x9
 5103 010d 4B080000 		.4byte	.LASF31
 5104 0111 01       		.byte	0x1
 5105 0112 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 111


 5106 0113 5D       		.byte	0x5d
 5107 0114 49010000 		.4byte	0x149
 5108 0118 0A       		.uleb128 0xa
 5109 0119 3D020000 		.4byte	.LASF23
 5110 011d 00       		.sleb128 0
 5111 011e 0A       		.uleb128 0xa
 5112 011f F4000000 		.4byte	.LASF24
 5113 0123 01       		.sleb128 1
 5114 0124 0A       		.uleb128 0xa
 5115 0125 5B000000 		.4byte	.LASF25
 5116 0129 02       		.sleb128 2
 5117 012a 0A       		.uleb128 0xa
 5118 012b D7050000 		.4byte	.LASF26
 5119 012f 03       		.sleb128 3
 5120 0130 0A       		.uleb128 0xa
 5121 0131 0F010000 		.4byte	.LASF27
 5122 0135 04       		.sleb128 4
 5123 0136 0A       		.uleb128 0xa
 5124 0137 E7010000 		.4byte	.LASF28
 5125 013b 05       		.sleb128 5
 5126 013c 0A       		.uleb128 0xa
 5127 013d FB060000 		.4byte	.LASF29
 5128 0141 06       		.sleb128 6
 5129 0142 0A       		.uleb128 0xa
 5130 0143 46090000 		.4byte	.LASF30
 5131 0147 07       		.sleb128 7
 5132 0148 00       		.byte	0
 5133 0149 09       		.uleb128 0x9
 5134 014a 4A010000 		.4byte	.LASF32
 5135 014e 01       		.byte	0x1
 5136 014f 05       		.byte	0x5
 5137 0150 5E       		.byte	0x5e
 5138 0151 86010000 		.4byte	0x186
 5139 0155 0A       		.uleb128 0xa
 5140 0156 CD060000 		.4byte	.LASF33
 5141 015a 00       		.sleb128 0
 5142 015b 0A       		.uleb128 0xa
 5143 015c 2C040000 		.4byte	.LASF34
 5144 0160 01       		.sleb128 1
 5145 0161 0A       		.uleb128 0xa
 5146 0162 9C060000 		.4byte	.LASF35
 5147 0166 02       		.sleb128 2
 5148 0167 0A       		.uleb128 0xa
 5149 0168 A1010000 		.4byte	.LASF36
 5150 016c 03       		.sleb128 3
 5151 016d 0A       		.uleb128 0xa
 5152 016e E4080000 		.4byte	.LASF37
 5153 0172 04       		.sleb128 4
 5154 0173 0A       		.uleb128 0xa
 5155 0174 24090000 		.4byte	.LASF38
 5156 0178 05       		.sleb128 5
 5157 0179 0A       		.uleb128 0xa
 5158 017a 70000000 		.4byte	.LASF39
 5159 017e 06       		.sleb128 6
 5160 017f 0A       		.uleb128 0xa
 5161 0180 EE060000 		.4byte	.LASF40
 5162 0184 07       		.sleb128 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 112


 5163 0185 00       		.byte	0
 5164 0186 0B       		.uleb128 0xb
 5165 0187 8C050000 		.4byte	.LASF198
 5166 018b 20       		.byte	0x20
 5167 018c 05       		.byte	0x5
 5168 018d 64       		.byte	0x64
 5169 018e 5F020000 		.4byte	0x25f
 5170 0192 0C       		.uleb128 0xc
 5171 0193 AA050000 		.4byte	.LASF41
 5172 0197 05       		.byte	0x5
 5173 0198 65       		.byte	0x65
 5174 0199 CF000000 		.4byte	0xcf
 5175 019d 00       		.byte	0
 5176 019e 0C       		.uleb128 0xc
 5177 019f 37020000 		.4byte	.LASF42
 5178 01a3 05       		.byte	0x5
 5179 01a4 66       		.byte	0x66
 5180 01a5 AB000000 		.4byte	0xab
 5181 01a9 01       		.byte	0x1
 5182 01aa 0C       		.uleb128 0xc
 5183 01ab C8070000 		.4byte	.LASF43
 5184 01af 05       		.byte	0x5
 5185 01b0 67       		.byte	0x67
 5186 01b1 DB000000 		.4byte	0xdb
 5187 01b5 02       		.byte	0x2
 5188 01b6 0C       		.uleb128 0xc
 5189 01b7 81030000 		.4byte	.LASF44
 5190 01bb 05       		.byte	0x5
 5191 01bc 68       		.byte	0x68
 5192 01bd DB000000 		.4byte	0xdb
 5193 01c1 04       		.byte	0x4
 5194 01c2 0C       		.uleb128 0xc
 5195 01c3 D2080000 		.4byte	.LASF45
 5196 01c7 05       		.byte	0x5
 5197 01c8 69       		.byte	0x69
 5198 01c9 DB000000 		.4byte	0xdb
 5199 01cd 06       		.byte	0x6
 5200 01ce 0C       		.uleb128 0xc
 5201 01cf 4C090000 		.4byte	.LASF46
 5202 01d3 05       		.byte	0x5
 5203 01d4 6A       		.byte	0x6a
 5204 01d5 DB000000 		.4byte	0xdb
 5205 01d9 08       		.byte	0x8
 5206 01da 0C       		.uleb128 0xc
 5207 01db 32050000 		.4byte	.LASF47
 5208 01df 05       		.byte	0x5
 5209 01e0 6B       		.byte	0x6b
 5210 01e1 DB000000 		.4byte	0xdb
 5211 01e5 0A       		.byte	0xa
 5212 01e6 0C       		.uleb128 0xc
 5213 01e7 B2030000 		.4byte	.LASF48
 5214 01eb 05       		.byte	0x5
 5215 01ec 6C       		.byte	0x6c
 5216 01ed DB000000 		.4byte	0xdb
 5217 01f1 0C       		.byte	0xc
 5218 01f2 0C       		.uleb128 0xc
 5219 01f3 B9050000 		.4byte	.LASF49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 113


 5220 01f7 05       		.byte	0x5
 5221 01f8 6D       		.byte	0x6d
 5222 01f9 DB000000 		.4byte	0xdb
 5223 01fd 0E       		.byte	0xe
 5224 01fe 0C       		.uleb128 0xc
 5225 01ff 80040000 		.4byte	.LASF50
 5226 0203 05       		.byte	0x5
 5227 0204 6E       		.byte	0x6e
 5228 0205 DB000000 		.4byte	0xdb
 5229 0209 10       		.byte	0x10
 5230 020a 0C       		.uleb128 0xc
 5231 020b 40070000 		.4byte	.LASF51
 5232 020f 05       		.byte	0x5
 5233 0210 6F       		.byte	0x6f
 5234 0211 DB000000 		.4byte	0xdb
 5235 0215 12       		.byte	0x12
 5236 0216 0C       		.uleb128 0xc
 5237 0217 70090000 		.4byte	.LASF52
 5238 021b 05       		.byte	0x5
 5239 021c 70       		.byte	0x70
 5240 021d DB000000 		.4byte	0xdb
 5241 0221 14       		.byte	0x14
 5242 0222 0C       		.uleb128 0xc
 5243 0223 0E040000 		.4byte	.LASF53
 5244 0227 05       		.byte	0x5
 5245 0228 71       		.byte	0x71
 5246 0229 DB000000 		.4byte	0xdb
 5247 022d 16       		.byte	0x16
 5248 022e 0C       		.uleb128 0xc
 5249 022f 42010000 		.4byte	.LASF54
 5250 0233 05       		.byte	0x5
 5251 0234 72       		.byte	0x72
 5252 0235 DB000000 		.4byte	0xdb
 5253 0239 18       		.byte	0x18
 5254 023a 0C       		.uleb128 0xc
 5255 023b ED030000 		.4byte	.LASF55
 5256 023f 05       		.byte	0x5
 5257 0240 73       		.byte	0x73
 5258 0241 DB000000 		.4byte	0xdb
 5259 0245 1A       		.byte	0x1a
 5260 0246 0C       		.uleb128 0xc
 5261 0247 29050000 		.4byte	.LASF56
 5262 024b 05       		.byte	0x5
 5263 024c 74       		.byte	0x74
 5264 024d DB000000 		.4byte	0xdb
 5265 0251 1C       		.byte	0x1c
 5266 0252 0C       		.uleb128 0xc
 5267 0253 07020000 		.4byte	.LASF57
 5268 0257 05       		.byte	0x5
 5269 0258 75       		.byte	0x75
 5270 0259 DB000000 		.4byte	0xdb
 5271 025d 1E       		.byte	0x1e
 5272 025e 00       		.byte	0
 5273 025f 0D       		.uleb128 0xd
 5274 0260 F3080000 		.4byte	.LASF58
 5275 0264 01       		.byte	0x1
 5276 0265 5B       		.byte	0x5b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 114


 5277 0266 00000000 		.4byte	.LFB63
 5278 026a 0C000000 		.4byte	.LFE63-.LFB63
 5279 026e 01       		.uleb128 0x1
 5280 026f 9C       		.byte	0x9c
 5281 0270 0E       		.uleb128 0xe
 5282 0271 48070000 		.4byte	.LASF59
 5283 0275 01       		.byte	0x1
 5284 0276 61       		.byte	0x61
 5285 0277 00000000 		.4byte	.LFB64
 5286 027b 2C000000 		.4byte	.LFE64-.LFB64
 5287 027f 01       		.uleb128 0x1
 5288 0280 9C       		.byte	0x9c
 5289 0281 0E       		.uleb128 0xe
 5290 0282 14020000 		.4byte	.LASF60
 5291 0286 01       		.byte	0x1
 5292 0287 6A       		.byte	0x6a
 5293 0288 00000000 		.4byte	.LFB65
 5294 028c A4010000 		.4byte	.LFE65-.LFB65
 5295 0290 01       		.uleb128 0x1
 5296 0291 9C       		.byte	0x9c
 5297 0292 0E       		.uleb128 0xe
 5298 0293 AE020000 		.4byte	.LASF61
 5299 0297 01       		.byte	0x1
 5300 0298 A2       		.byte	0xa2
 5301 0299 00000000 		.4byte	.LFB66
 5302 029d AC000000 		.4byte	.LFE66-.LFB66
 5303 02a1 01       		.uleb128 0x1
 5304 02a2 9C       		.byte	0x9c
 5305 02a3 0D       		.uleb128 0xd
 5306 02a4 1D080000 		.4byte	.LASF62
 5307 02a8 01       		.byte	0x1
 5308 02a9 C5       		.byte	0xc5
 5309 02aa 00000000 		.4byte	.LFB67
 5310 02ae 20000000 		.4byte	.LFE67-.LFB67
 5311 02b2 01       		.uleb128 0x1
 5312 02b3 9C       		.byte	0x9c
 5313 02b4 0E       		.uleb128 0xe
 5314 02b5 34030000 		.4byte	.LASF63
 5315 02b9 01       		.byte	0x1
 5316 02ba CC       		.byte	0xcc
 5317 02bb 00000000 		.4byte	.LFB68
 5318 02bf 28000000 		.4byte	.LFE68-.LFB68
 5319 02c3 01       		.uleb128 0x1
 5320 02c4 9C       		.byte	0x9c
 5321 02c5 0E       		.uleb128 0xe
 5322 02c6 F4050000 		.4byte	.LASF64
 5323 02ca 01       		.byte	0x1
 5324 02cb D5       		.byte	0xd5
 5325 02cc 00000000 		.4byte	.LFB69
 5326 02d0 0A000000 		.4byte	.LFE69-.LFB69
 5327 02d4 01       		.uleb128 0x1
 5328 02d5 9C       		.byte	0x9c
 5329 02d6 0E       		.uleb128 0xe
 5330 02d7 11060000 		.4byte	.LASF65
 5331 02db 01       		.byte	0x1
 5332 02dc DA       		.byte	0xda
 5333 02dd 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 115


 5334 02e1 28000000 		.4byte	.LFE70-.LFB70
 5335 02e5 01       		.uleb128 0x1
 5336 02e6 9C       		.byte	0x9c
 5337 02e7 0F       		.uleb128 0xf
 5338 02e8 EE080000 		.4byte	.LASF73
 5339 02ec 01       		.byte	0x1
 5340 02ed E5       		.byte	0xe5
 5341 02ee 73000000 		.4byte	0x73
 5342 02f2 00000000 		.4byte	.LFB71
 5343 02f6 50060000 		.4byte	.LFE71-.LFB71
 5344 02fa 01       		.uleb128 0x1
 5345 02fb 9C       		.byte	0x9c
 5346 02fc CD030000 		.4byte	0x3cd
 5347 0300 10       		.uleb128 0x10
 5348 0301 25030000 		.4byte	.LASF66
 5349 0305 01       		.byte	0x1
 5350 0306 1E01     		.2byte	0x11e
 5351 0308 B7000000 		.4byte	0xb7
 5352 030c 02       		.uleb128 0x2
 5353 030d 91       		.byte	0x91
 5354 030e 76       		.sleb128 -10
 5355 030f 11       		.uleb128 0x11
 5356 0310 66000000 		.4byte	.LBB2
 5357 0314 AC050000 		.4byte	.LBE2-.LBB2
 5358 0318 10       		.uleb128 0x10
 5359 0319 A1020000 		.4byte	.LASF67
 5360 031d 01       		.byte	0x1
 5361 031e 2C01     		.2byte	0x12c
 5362 0320 CD030000 		.4byte	0x3cd
 5363 0324 02       		.uleb128 0x2
 5364 0325 91       		.byte	0x91
 5365 0326 6C       		.sleb128 -20
 5366 0327 11       		.uleb128 0x11
 5367 0328 3C010000 		.4byte	.LBB3
 5368 032c 74040000 		.4byte	.LBE3-.LBB3
 5369 0330 10       		.uleb128 0x10
 5370 0331 92040000 		.4byte	.LASF68
 5371 0335 01       		.byte	0x1
 5372 0336 5601     		.2byte	0x156
 5373 0338 8E000000 		.4byte	0x8e
 5374 033c 02       		.uleb128 0x2
 5375 033d 91       		.byte	0x91
 5376 033e 75       		.sleb128 -11
 5377 033f 12       		.uleb128 0x12
 5378 0340 88010000 		.4byte	.LBB4
 5379 0344 68010000 		.4byte	.LBE4-.LBB4
 5380 0348 75030000 		.4byte	0x375
 5381 034c 13       		.uleb128 0x13
 5382 034d 6D657300 		.ascii	"mes\000"
 5383 0351 01       		.byte	0x1
 5384 0352 5D01     		.2byte	0x15d
 5385 0354 DD030000 		.4byte	0x3dd
 5386 0358 02       		.uleb128 0x2
 5387 0359 91       		.byte	0x91
 5388 035a 5C       		.sleb128 -36
 5389 035b 11       		.uleb128 0x11
 5390 035c B0010000 		.4byte	.LBB5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 116


 5391 0360 40010000 		.4byte	.LBE5-.LBB5
 5392 0364 10       		.uleb128 0x10
 5393 0365 01040000 		.4byte	.LASF69
 5394 0369 01       		.byte	0x1
 5395 036a 6E01     		.2byte	0x16e
 5396 036c AB000000 		.4byte	0xab
 5397 0370 02       		.uleb128 0x2
 5398 0371 91       		.byte	0x91
 5399 0372 74       		.sleb128 -12
 5400 0373 00       		.byte	0
 5401 0374 00       		.byte	0
 5402 0375 12       		.uleb128 0x12
 5403 0376 AC030000 		.4byte	.LBB6
 5404 037a AA000000 		.4byte	.LBE6-.LBB6
 5405 037e A1030000 		.4byte	0x3a1
 5406 0382 13       		.uleb128 0x13
 5407 0383 6D657300 		.ascii	"mes\000"
 5408 0387 01       		.byte	0x1
 5409 0388 A601     		.2byte	0x1a6
 5410 038a DD030000 		.4byte	0x3dd
 5411 038e 02       		.uleb128 0x2
 5412 038f 91       		.byte	0x91
 5413 0390 4C       		.sleb128 -52
 5414 0391 10       		.uleb128 0x10
 5415 0392 01040000 		.4byte	.LASF69
 5416 0396 01       		.byte	0x1
 5417 0397 AA01     		.2byte	0x1aa
 5418 0399 AB000000 		.4byte	0xab
 5419 039d 02       		.uleb128 0x2
 5420 039e 91       		.byte	0x91
 5421 039f 73       		.sleb128 -13
 5422 03a0 00       		.byte	0
 5423 03a1 11       		.uleb128 0x11
 5424 03a2 6E040000 		.4byte	.LBB7
 5425 03a6 38010000 		.4byte	.LBE7-.LBB7
 5426 03aa 13       		.uleb128 0x13
 5427 03ab 6D657300 		.ascii	"mes\000"
 5428 03af 01       		.byte	0x1
 5429 03b0 C401     		.2byte	0x1c4
 5430 03b2 DD030000 		.4byte	0x3dd
 5431 03b6 03       		.uleb128 0x3
 5432 03b7 91       		.byte	0x91
 5433 03b8 BC7F     		.sleb128 -68
 5434 03ba 10       		.uleb128 0x10
 5435 03bb 01040000 		.4byte	.LASF69
 5436 03bf 01       		.byte	0x1
 5437 03c0 C801     		.2byte	0x1c8
 5438 03c2 AB000000 		.4byte	0xab
 5439 03c6 02       		.uleb128 0x2
 5440 03c7 91       		.byte	0x91
 5441 03c8 72       		.sleb128 -14
 5442 03c9 00       		.byte	0
 5443 03ca 00       		.byte	0
 5444 03cb 00       		.byte	0
 5445 03cc 00       		.byte	0
 5446 03cd 07       		.uleb128 0x7
 5447 03ce AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 117


 5448 03d2 DD030000 		.4byte	0x3dd
 5449 03d6 08       		.uleb128 0x8
 5450 03d7 81000000 		.4byte	0x81
 5451 03db 04       		.byte	0x4
 5452 03dc 00       		.byte	0
 5453 03dd 07       		.uleb128 0x7
 5454 03de 8E000000 		.4byte	0x8e
 5455 03e2 ED030000 		.4byte	0x3ed
 5456 03e6 08       		.uleb128 0x8
 5457 03e7 81000000 		.4byte	0x81
 5458 03eb 0F       		.byte	0xf
 5459 03ec 00       		.byte	0
 5460 03ed 14       		.uleb128 0x14
 5461 03ee 2C090000 		.4byte	.LASF76
 5462 03f2 01       		.byte	0x1
 5463 03f3 1E02     		.2byte	0x21e
 5464 03f5 00000000 		.4byte	.LFB72
 5465 03f9 60010000 		.4byte	.LFE72-.LFB72
 5466 03fd 01       		.uleb128 0x1
 5467 03fe 9C       		.byte	0x9c
 5468 03ff 3B040000 		.4byte	0x43b
 5469 0403 11       		.uleb128 0x11
 5470 0404 10000000 		.4byte	.LBB8
 5471 0408 34010000 		.4byte	.LBE8-.LBB8
 5472 040c 10       		.uleb128 0x10
 5473 040d 35010000 		.4byte	.LASF70
 5474 0411 01       		.byte	0x1
 5475 0412 2402     		.2byte	0x224
 5476 0414 B7000000 		.4byte	0xb7
 5477 0418 02       		.uleb128 0x2
 5478 0419 91       		.byte	0x91
 5479 041a 76       		.sleb128 -10
 5480 041b 10       		.uleb128 0x10
 5481 041c 9B070000 		.4byte	.LASF71
 5482 0420 01       		.byte	0x1
 5483 0421 2502     		.2byte	0x225
 5484 0423 3B040000 		.4byte	0x43b
 5485 0427 02       		.uleb128 0x2
 5486 0428 91       		.byte	0x91
 5487 0429 68       		.sleb128 -24
 5488 042a 10       		.uleb128 0x10
 5489 042b 43020000 		.4byte	.LASF72
 5490 042f 01       		.byte	0x1
 5491 0430 2602     		.2byte	0x226
 5492 0432 3B040000 		.4byte	0x43b
 5493 0436 02       		.uleb128 0x2
 5494 0437 91       		.byte	0x91
 5495 0438 5C       		.sleb128 -36
 5496 0439 00       		.byte	0
 5497 043a 00       		.byte	0
 5498 043b 07       		.uleb128 0x7
 5499 043c 8E000000 		.4byte	0x8e
 5500 0440 4B040000 		.4byte	0x44b
 5501 0444 08       		.uleb128 0x8
 5502 0445 81000000 		.4byte	0x81
 5503 0449 0B       		.byte	0xb
 5504 044a 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 118


 5505 044b 15       		.uleb128 0x15
 5506 044c CB030000 		.4byte	.LASF74
 5507 0450 01       		.byte	0x1
 5508 0451 5F02     		.2byte	0x25f
 5509 0453 00000000 		.4byte	.LFB73
 5510 0457 18000000 		.4byte	.LFE73-.LFB73
 5511 045b 01       		.uleb128 0x1
 5512 045c 9C       		.byte	0x9c
 5513 045d 71040000 		.4byte	0x471
 5514 0461 16       		.uleb128 0x16
 5515 0462 64697200 		.ascii	"dir\000"
 5516 0466 01       		.byte	0x1
 5517 0467 5F02     		.2byte	0x25f
 5518 0469 AB000000 		.4byte	0xab
 5519 046d 02       		.uleb128 0x2
 5520 046e 91       		.byte	0x91
 5521 046f 77       		.sleb128 -9
 5522 0470 00       		.byte	0
 5523 0471 15       		.uleb128 0x15
 5524 0472 20040000 		.4byte	.LASF75
 5525 0476 01       		.byte	0x1
 5526 0477 6402     		.2byte	0x264
 5527 0479 00000000 		.4byte	.LFB74
 5528 047d 18000000 		.4byte	.LFE74-.LFB74
 5529 0481 01       		.uleb128 0x1
 5530 0482 9C       		.byte	0x9c
 5531 0483 97040000 		.4byte	0x497
 5532 0487 16       		.uleb128 0x16
 5533 0488 64697200 		.ascii	"dir\000"
 5534 048c 01       		.byte	0x1
 5535 048d 6402     		.2byte	0x264
 5536 048f AB000000 		.4byte	0xab
 5537 0493 02       		.uleb128 0x2
 5538 0494 91       		.byte	0x91
 5539 0495 77       		.sleb128 -9
 5540 0496 00       		.byte	0
 5541 0497 17       		.uleb128 0x17
 5542 0498 51080000 		.4byte	.LASF77
 5543 049c 01       		.byte	0x1
 5544 049d 6902     		.2byte	0x269
 5545 049f 00000000 		.4byte	.LFB75
 5546 04a3 54000000 		.4byte	.LFE75-.LFB75
 5547 04a7 01       		.uleb128 0x1
 5548 04a8 9C       		.byte	0x9c
 5549 04a9 BD040000 		.4byte	0x4bd
 5550 04ad 13       		.uleb128 0x13
 5551 04ae 6D657300 		.ascii	"mes\000"
 5552 04b2 01       		.byte	0x1
 5553 04b3 6E02     		.2byte	0x26e
 5554 04b5 DD030000 		.4byte	0x3dd
 5555 04b9 02       		.uleb128 0x2
 5556 04ba 91       		.byte	0x91
 5557 04bb 68       		.sleb128 -24
 5558 04bc 00       		.byte	0
 5559 04bd 15       		.uleb128 0x15
 5560 04be 24020000 		.4byte	.LASF78
 5561 04c2 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 119


 5562 04c3 7302     		.2byte	0x273
 5563 04c5 00000000 		.4byte	.LFB76
 5564 04c9 F4000000 		.4byte	.LFE76-.LFB76
 5565 04cd 01       		.uleb128 0x1
 5566 04ce 9C       		.byte	0x9c
 5567 04cf 10050000 		.4byte	0x510
 5568 04d3 18       		.uleb128 0x18
 5569 04d4 19070000 		.4byte	.LASF79
 5570 04d8 01       		.byte	0x1
 5571 04d9 7302     		.2byte	0x273
 5572 04db EE000000 		.4byte	0xee
 5573 04df 02       		.uleb128 0x2
 5574 04e0 91       		.byte	0x91
 5575 04e1 68       		.sleb128 -24
 5576 04e2 18       		.uleb128 0x18
 5577 04e3 4D040000 		.4byte	.LASF80
 5578 04e7 01       		.byte	0x1
 5579 04e8 7302     		.2byte	0x273
 5580 04ea EE000000 		.4byte	0xee
 5581 04ee 02       		.uleb128 0x2
 5582 04ef 91       		.byte	0x91
 5583 04f0 60       		.sleb128 -32
 5584 04f1 10       		.uleb128 0x10
 5585 04f2 5C020000 		.4byte	.LASF81
 5586 04f6 01       		.byte	0x1
 5587 04f7 8802     		.2byte	0x288
 5588 04f9 DB000000 		.4byte	0xdb
 5589 04fd 02       		.uleb128 0x2
 5590 04fe 91       		.byte	0x91
 5591 04ff 76       		.sleb128 -10
 5592 0500 10       		.uleb128 0x10
 5593 0501 80050000 		.4byte	.LASF82
 5594 0505 01       		.byte	0x1
 5595 0506 8902     		.2byte	0x289
 5596 0508 DB000000 		.4byte	0xdb
 5597 050c 02       		.uleb128 0x2
 5598 050d 91       		.byte	0x91
 5599 050e 74       		.sleb128 -12
 5600 050f 00       		.byte	0
 5601 0510 19       		.uleb128 0x19
 5602 0511 62080000 		.4byte	.LASF83
 5603 0515 01       		.byte	0x1
 5604 0516 8F02     		.2byte	0x28f
 5605 0518 00000000 		.4byte	.LFB77
 5606 051c 18000000 		.4byte	.LFE77-.LFB77
 5607 0520 01       		.uleb128 0x1
 5608 0521 9C       		.byte	0x9c
 5609 0522 19       		.uleb128 0x19
 5610 0523 90090000 		.4byte	.LASF84
 5611 0527 01       		.byte	0x1
 5612 0528 9502     		.2byte	0x295
 5613 052a 00000000 		.4byte	.LFB78
 5614 052e 18000000 		.4byte	.LFE78-.LFB78
 5615 0532 01       		.uleb128 0x1
 5616 0533 9C       		.byte	0x9c
 5617 0534 19       		.uleb128 0x19
 5618 0535 D3070000 		.4byte	.LASF85
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 120


 5619 0539 01       		.byte	0x1
 5620 053a 9B02     		.2byte	0x29b
 5621 053c 00000000 		.4byte	.LFB79
 5622 0540 22000000 		.4byte	.LFE79-.LFB79
 5623 0544 01       		.uleb128 0x1
 5624 0545 9C       		.byte	0x9c
 5625 0546 19       		.uleb128 0x19
 5626 0547 67020000 		.4byte	.LASF86
 5627 054b 01       		.byte	0x1
 5628 054c A102     		.2byte	0x2a1
 5629 054e 00000000 		.4byte	.LFB80
 5630 0552 1C000000 		.4byte	.LFE80-.LFB80
 5631 0556 01       		.uleb128 0x1
 5632 0557 9C       		.byte	0x9c
 5633 0558 19       		.uleb128 0x19
 5634 0559 36070000 		.4byte	.LASF87
 5635 055d 01       		.byte	0x1
 5636 055e A602     		.2byte	0x2a6
 5637 0560 00000000 		.4byte	.LFB81
 5638 0564 28000000 		.4byte	.LFE81-.LFB81
 5639 0568 01       		.uleb128 0x1
 5640 0569 9C       		.byte	0x9c
 5641 056a 19       		.uleb128 0x19
 5642 056b 75020000 		.4byte	.LASF88
 5643 056f 01       		.byte	0x1
 5644 0570 AB02     		.2byte	0x2ab
 5645 0572 00000000 		.4byte	.LFB82
 5646 0576 2C000000 		.4byte	.LFE82-.LFB82
 5647 057a 01       		.uleb128 0x1
 5648 057b 9C       		.byte	0x9c
 5649 057c 19       		.uleb128 0x19
 5650 057d E7030000 		.4byte	.LASF89
 5651 0581 01       		.byte	0x1
 5652 0582 B002     		.2byte	0x2b0
 5653 0584 00000000 		.4byte	.LFB83
 5654 0588 44000000 		.4byte	.LFE83-.LFB83
 5655 058c 01       		.uleb128 0x1
 5656 058d 9C       		.byte	0x9c
 5657 058e 19       		.uleb128 0x19
 5658 058f C8020000 		.4byte	.LASF90
 5659 0593 01       		.byte	0x1
 5660 0594 B502     		.2byte	0x2b5
 5661 0596 00000000 		.4byte	.LFB84
 5662 059a 38000000 		.4byte	.LFE84-.LFB84
 5663 059e 01       		.uleb128 0x1
 5664 059f 9C       		.byte	0x9c
 5665 05a0 19       		.uleb128 0x19
 5666 05a1 8E060000 		.4byte	.LASF91
 5667 05a5 01       		.byte	0x1
 5668 05a6 BE02     		.2byte	0x2be
 5669 05a8 00000000 		.4byte	.LFB85
 5670 05ac 38000000 		.4byte	.LFE85-.LFB85
 5671 05b0 01       		.uleb128 0x1
 5672 05b1 9C       		.byte	0x9c
 5673 05b2 19       		.uleb128 0x19
 5674 05b3 66060000 		.4byte	.LASF92
 5675 05b7 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 121


 5676 05b8 C702     		.2byte	0x2c7
 5677 05ba 00000000 		.4byte	.LFB86
 5678 05be 38000000 		.4byte	.LFE86-.LFB86
 5679 05c2 01       		.uleb128 0x1
 5680 05c3 9C       		.byte	0x9c
 5681 05c4 19       		.uleb128 0x19
 5682 05c5 F2010000 		.4byte	.LASF93
 5683 05c9 01       		.byte	0x1
 5684 05ca D002     		.2byte	0x2d0
 5685 05cc 00000000 		.4byte	.LFB87
 5686 05d0 14000000 		.4byte	.LFE87-.LFB87
 5687 05d4 01       		.uleb128 0x1
 5688 05d5 9C       		.byte	0x9c
 5689 05d6 1A       		.uleb128 0x1a
 5690 05d7 DE020000 		.4byte	.LASF94
 5691 05db 01       		.byte	0x1
 5692 05dc D502     		.2byte	0x2d5
 5693 05de 00000000 		.4byte	.LFB88
 5694 05e2 18000000 		.4byte	.LFE88-.LFB88
 5695 05e6 01       		.uleb128 0x1
 5696 05e7 9C       		.byte	0x9c
 5697 05e8 1A       		.uleb128 0x1a
 5698 05e9 88040000 		.4byte	.LASF95
 5699 05ed 01       		.byte	0x1
 5700 05ee D902     		.2byte	0x2d9
 5701 05f0 00000000 		.4byte	.LFB89
 5702 05f4 18000000 		.4byte	.LFE89-.LFB89
 5703 05f8 01       		.uleb128 0x1
 5704 05f9 9C       		.byte	0x9c
 5705 05fa 1A       		.uleb128 0x1a
 5706 05fb 9B090000 		.4byte	.LASF96
 5707 05ff 01       		.byte	0x1
 5708 0600 DE02     		.2byte	0x2de
 5709 0602 00000000 		.4byte	.LFB90
 5710 0606 18000000 		.4byte	.LFE90-.LFB90
 5711 060a 01       		.uleb128 0x1
 5712 060b 9C       		.byte	0x9c
 5713 060c 1A       		.uleb128 0x1a
 5714 060d 72030000 		.4byte	.LASF97
 5715 0611 01       		.byte	0x1
 5716 0612 E202     		.2byte	0x2e2
 5717 0614 00000000 		.4byte	.LFB91
 5718 0618 18000000 		.4byte	.LFE91-.LFB91
 5719 061c 01       		.uleb128 0x1
 5720 061d 9C       		.byte	0x9c
 5721 061e 15       		.uleb128 0x15
 5722 061f BD060000 		.4byte	.LASF98
 5723 0623 01       		.byte	0x1
 5724 0624 E902     		.2byte	0x2e9
 5725 0626 00000000 		.4byte	.LFB92
 5726 062a B8000000 		.4byte	.LFE92-.LFB92
 5727 062e 01       		.uleb128 0x1
 5728 062f 9C       		.byte	0x9c
 5729 0630 44060000 		.4byte	0x644
 5730 0634 10       		.uleb128 0x10
 5731 0635 3A050000 		.4byte	.LASF99
 5732 0639 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 122


 5733 063a EA02     		.2byte	0x2ea
 5734 063c 8E000000 		.4byte	0x8e
 5735 0640 02       		.uleb128 0x2
 5736 0641 91       		.byte	0x91
 5737 0642 6F       		.sleb128 -17
 5738 0643 00       		.byte	0
 5739 0644 15       		.uleb128 0x15
 5740 0645 DF050000 		.4byte	.LASF100
 5741 0649 01       		.byte	0x1
 5742 064a 0603     		.2byte	0x306
 5743 064c 00000000 		.4byte	.LFB93
 5744 0650 34030000 		.4byte	.LFE93-.LFB93
 5745 0654 01       		.uleb128 0x1
 5746 0655 9C       		.byte	0x9c
 5747 0656 9D060000 		.4byte	0x69d
 5748 065a 10       		.uleb128 0x10
 5749 065b 3A050000 		.4byte	.LASF99
 5750 065f 01       		.byte	0x1
 5751 0660 0803     		.2byte	0x308
 5752 0662 8E000000 		.4byte	0x8e
 5753 0666 02       		.uleb128 0x2
 5754 0667 91       		.byte	0x91
 5755 0668 6F       		.sleb128 -17
 5756 0669 11       		.uleb128 0x11
 5757 066a 48010000 		.4byte	.LBB9
 5758 066e B2010000 		.4byte	.LBE9-.LBB9
 5759 0672 13       		.uleb128 0x13
 5760 0673 6D657300 		.ascii	"mes\000"
 5761 0677 01       		.byte	0x1
 5762 0678 2E03     		.2byte	0x32e
 5763 067a DD030000 		.4byte	0x3dd
 5764 067e 02       		.uleb128 0x2
 5765 067f 91       		.byte	0x91
 5766 0680 5C       		.sleb128 -36
 5767 0681 13       		.uleb128 0x13
 5768 0682 6900     		.ascii	"i\000"
 5769 0684 01       		.byte	0x1
 5770 0685 4103     		.2byte	0x341
 5771 0687 73000000 		.4byte	0x73
 5772 068b 02       		.uleb128 0x2
 5773 068c 91       		.byte	0x91
 5774 068d 74       		.sleb128 -12
 5775 068e 13       		.uleb128 0x13
 5776 068f 7800     		.ascii	"x\000"
 5777 0691 01       		.byte	0x1
 5778 0692 5803     		.2byte	0x358
 5779 0694 73000000 		.4byte	0x73
 5780 0698 02       		.uleb128 0x2
 5781 0699 91       		.byte	0x91
 5782 069a 70       		.sleb128 -16
 5783 069b 00       		.byte	0
 5784 069c 00       		.byte	0
 5785 069d 19       		.uleb128 0x19
 5786 069e BD020000 		.4byte	.LASF101
 5787 06a2 01       		.byte	0x1
 5788 06a3 6B03     		.2byte	0x36b
 5789 06a5 00000000 		.4byte	.LFB94
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 123


 5790 06a9 40000000 		.4byte	.LFE94-.LFB94
 5791 06ad 01       		.uleb128 0x1
 5792 06ae 9C       		.byte	0x9c
 5793 06af 19       		.uleb128 0x19
 5794 06b0 51020000 		.4byte	.LASF102
 5795 06b4 01       		.byte	0x1
 5796 06b5 7A03     		.2byte	0x37a
 5797 06b7 00000000 		.4byte	.LFB95
 5798 06bb 40000000 		.4byte	.LFE95-.LFB95
 5799 06bf 01       		.uleb128 0x1
 5800 06c0 9C       		.byte	0x9c
 5801 06c1 17       		.uleb128 0x17
 5802 06c2 90000000 		.4byte	.LASF103
 5803 06c6 01       		.byte	0x1
 5804 06c7 8A03     		.2byte	0x38a
 5805 06c9 00000000 		.4byte	.LFB96
 5806 06cd 30020000 		.4byte	.LFE96-.LFB96
 5807 06d1 01       		.uleb128 0x1
 5808 06d2 9C       		.byte	0x9c
 5809 06d3 32070000 		.4byte	0x732
 5810 06d7 10       		.uleb128 0x10
 5811 06d8 05030000 		.4byte	.LASF104
 5812 06dc 01       		.byte	0x1
 5813 06dd 9803     		.2byte	0x398
 5814 06df DB000000 		.4byte	0xdb
 5815 06e3 02       		.uleb128 0x2
 5816 06e4 91       		.byte	0x91
 5817 06e5 5E       		.sleb128 -34
 5818 06e6 10       		.uleb128 0x10
 5819 06e7 58050000 		.4byte	.LASF105
 5820 06eb 01       		.byte	0x1
 5821 06ec 9903     		.2byte	0x399
 5822 06ee DB000000 		.4byte	0xdb
 5823 06f2 02       		.uleb128 0x2
 5824 06f3 91       		.byte	0x91
 5825 06f4 5C       		.sleb128 -36
 5826 06f5 10       		.uleb128 0x10
 5827 06f6 A1030000 		.4byte	.LASF106
 5828 06fa 01       		.byte	0x1
 5829 06fb 9A03     		.2byte	0x39a
 5830 06fd EE000000 		.4byte	0xee
 5831 0701 02       		.uleb128 0x2
 5832 0702 91       		.byte	0x91
 5833 0703 68       		.sleb128 -24
 5834 0704 10       		.uleb128 0x10
 5835 0705 54090000 		.4byte	.LASF107
 5836 0709 01       		.byte	0x1
 5837 070a 9B03     		.2byte	0x39b
 5838 070c EE000000 		.4byte	0xee
 5839 0710 02       		.uleb128 0x2
 5840 0711 91       		.byte	0x91
 5841 0712 60       		.sleb128 -32
 5842 0713 10       		.uleb128 0x10
 5843 0714 38040000 		.4byte	.LASF108
 5844 0718 01       		.byte	0x1
 5845 0719 A403     		.2byte	0x3a4
 5846 071b 73000000 		.4byte	0x73
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 124


 5847 071f 02       		.uleb128 0x2
 5848 0720 91       		.byte	0x91
 5849 0721 58       		.sleb128 -40
 5850 0722 10       		.uleb128 0x10
 5851 0723 FC080000 		.4byte	.LASF109
 5852 0727 01       		.byte	0x1
 5853 0728 A503     		.2byte	0x3a5
 5854 072a 73000000 		.4byte	0x73
 5855 072e 02       		.uleb128 0x2
 5856 072f 91       		.byte	0x91
 5857 0730 54       		.sleb128 -44
 5858 0731 00       		.byte	0
 5859 0732 1A       		.uleb128 0x1a
 5860 0733 AF050000 		.4byte	.LASF110
 5861 0737 01       		.byte	0x1
 5862 0738 B303     		.2byte	0x3b3
 5863 073a 00000000 		.4byte	.LFB97
 5864 073e 0C000000 		.4byte	.LFE97-.LFB97
 5865 0742 01       		.uleb128 0x1
 5866 0743 9C       		.byte	0x9c
 5867 0744 17       		.uleb128 0x17
 5868 0745 82010000 		.4byte	.LASF111
 5869 0749 01       		.byte	0x1
 5870 074a B903     		.2byte	0x3b9
 5871 074c 00000000 		.4byte	.LFB98
 5872 0750 4C010000 		.4byte	.LFE98-.LFB98
 5873 0754 01       		.uleb128 0x1
 5874 0755 9C       		.byte	0x9c
 5875 0756 86070000 		.4byte	0x786
 5876 075a 13       		.uleb128 0x13
 5877 075b 6E6C00   		.ascii	"nl\000"
 5878 075e 01       		.byte	0x1
 5879 075f BD03     		.2byte	0x3bd
 5880 0761 AB000000 		.4byte	0xab
 5881 0765 02       		.uleb128 0x2
 5882 0766 91       		.byte	0x91
 5883 0767 67       		.sleb128 -25
 5884 0768 13       		.uleb128 0x13
 5885 0769 6E7200   		.ascii	"nr\000"
 5886 076c 01       		.byte	0x1
 5887 076d BE03     		.2byte	0x3be
 5888 076f AB000000 		.4byte	0xab
 5889 0773 02       		.uleb128 0x2
 5890 0774 91       		.byte	0x91
 5891 0775 66       		.sleb128 -26
 5892 0776 13       		.uleb128 0x13
 5893 0777 6D696400 		.ascii	"mid\000"
 5894 077b 01       		.byte	0x1
 5895 077c BF03     		.2byte	0x3bf
 5896 077e AB000000 		.4byte	0xab
 5897 0782 02       		.uleb128 0x2
 5898 0783 91       		.byte	0x91
 5899 0784 65       		.sleb128 -27
 5900 0785 00       		.byte	0
 5901 0786 1A       		.uleb128 0x1a
 5902 0787 67010000 		.4byte	.LASF112
 5903 078b 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 125


 5904 078c D903     		.2byte	0x3d9
 5905 078e 00000000 		.4byte	.LFB99
 5906 0792 0C000000 		.4byte	.LFE99-.LFB99
 5907 0796 01       		.uleb128 0x1
 5908 0797 9C       		.byte	0x9c
 5909 0798 17       		.uleb128 0x17
 5910 0799 97030000 		.4byte	.LASF113
 5911 079d 01       		.byte	0x1
 5912 079e DE03     		.2byte	0x3de
 5913 07a0 00000000 		.4byte	.LFB100
 5914 07a4 C0000000 		.4byte	.LFE100-.LFB100
 5915 07a8 01       		.uleb128 0x1
 5916 07a9 9C       		.byte	0x9c
 5917 07aa E6070000 		.4byte	0x7e6
 5918 07ae 11       		.uleb128 0x11
 5919 07af 0E000000 		.4byte	.LBB10
 5920 07b3 8E000000 		.4byte	.LBE10-.LBB10
 5921 07b7 10       		.uleb128 0x10
 5922 07b8 F7020000 		.4byte	.LASF114
 5923 07bc 01       		.byte	0x1
 5924 07bd E703     		.2byte	0x3e7
 5925 07bf E7000000 		.4byte	0xe7
 5926 07c3 02       		.uleb128 0x2
 5927 07c4 91       		.byte	0x91
 5928 07c5 74       		.sleb128 -12
 5929 07c6 10       		.uleb128 0x10
 5930 07c7 96050000 		.4byte	.LASF115
 5931 07cb 01       		.byte	0x1
 5932 07cc E803     		.2byte	0x3e8
 5933 07ce DB000000 		.4byte	0xdb
 5934 07d2 02       		.uleb128 0x2
 5935 07d3 91       		.byte	0x91
 5936 07d4 72       		.sleb128 -14
 5937 07d5 10       		.uleb128 0x10
 5938 07d6 5A030000 		.4byte	.LASF116
 5939 07da 01       		.byte	0x1
 5940 07db ED03     		.2byte	0x3ed
 5941 07dd DD030000 		.4byte	0x3dd
 5942 07e1 02       		.uleb128 0x2
 5943 07e2 91       		.byte	0x91
 5944 07e3 60       		.sleb128 -32
 5945 07e4 00       		.byte	0
 5946 07e5 00       		.byte	0
 5947 07e6 17       		.uleb128 0x17
 5948 07e7 3D090000 		.4byte	.LASF117
 5949 07eb 01       		.byte	0x1
 5950 07ec F403     		.2byte	0x3f4
 5951 07ee 00000000 		.4byte	.LFB101
 5952 07f2 B8000000 		.4byte	.LFE101-.LFB101
 5953 07f6 01       		.uleb128 0x1
 5954 07f7 9C       		.byte	0x9c
 5955 07f8 16080000 		.4byte	0x816
 5956 07fc 11       		.uleb128 0x11
 5957 07fd 0E000000 		.4byte	.LBB11
 5958 0801 86000000 		.4byte	.LBE11-.LBB11
 5959 0805 10       		.uleb128 0x10
 5960 0806 B1060000 		.4byte	.LASF118
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 126


 5961 080a 01       		.byte	0x1
 5962 080b F803     		.2byte	0x3f8
 5963 080d DD030000 		.4byte	0x3dd
 5964 0811 02       		.uleb128 0x2
 5965 0812 91       		.byte	0x91
 5966 0813 68       		.sleb128 -24
 5967 0814 00       		.byte	0
 5968 0815 00       		.byte	0
 5969 0816 15       		.uleb128 0x15
 5970 0817 50070000 		.4byte	.LASF119
 5971 081b 01       		.byte	0x1
 5972 081c 0904     		.2byte	0x409
 5973 081e 00000000 		.4byte	.LFB102
 5974 0822 4A000000 		.4byte	.LFE102-.LFB102
 5975 0826 01       		.uleb128 0x1
 5976 0827 9C       		.byte	0x9c
 5977 0828 3C080000 		.4byte	0x83c
 5978 082c 18       		.uleb128 0x18
 5979 082d 4F030000 		.4byte	.LASF120
 5980 0831 01       		.byte	0x1
 5981 0832 0904     		.2byte	0x409
 5982 0834 3C080000 		.4byte	0x83c
 5983 0838 02       		.uleb128 0x2
 5984 0839 91       		.byte	0x91
 5985 083a 6C       		.sleb128 -20
 5986 083b 00       		.byte	0
 5987 083c 05       		.uleb128 0x5
 5988 083d 04       		.byte	0x4
 5989 083e AB000000 		.4byte	0xab
 5990 0842 15       		.uleb128 0x15
 5991 0843 29070000 		.4byte	.LASF121
 5992 0847 01       		.byte	0x1
 5993 0848 1404     		.2byte	0x414
 5994 084a 00000000 		.4byte	.LFB103
 5995 084e 68000000 		.4byte	.LFE103-.LFB103
 5996 0852 01       		.uleb128 0x1
 5997 0853 9C       		.byte	0x9c
 5998 0854 7F080000 		.4byte	0x87f
 5999 0858 16       		.uleb128 0x16
 6000 0859 7300     		.ascii	"s\000"
 6001 085b 01       		.byte	0x1
 6002 085c 1404     		.2byte	0x414
 6003 085e 88000000 		.4byte	0x88
 6004 0862 02       		.uleb128 0x2
 6005 0863 91       		.byte	0x91
 6006 0864 6C       		.sleb128 -20
 6007 0865 11       		.uleb128 0x11
 6008 0866 10000000 		.4byte	.LBB12
 6009 086a 48000000 		.4byte	.LBE12-.LBB12
 6010 086e 13       		.uleb128 0x13
 6011 086f 636E7400 		.ascii	"cnt\000"
 6012 0873 01       		.byte	0x1
 6013 0874 1B04     		.2byte	0x41b
 6014 0876 C3000000 		.4byte	0xc3
 6015 087a 02       		.uleb128 0x2
 6016 087b 91       		.byte	0x91
 6017 087c 74       		.sleb128 -12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 127


 6018 087d 00       		.byte	0
 6019 087e 00       		.byte	0
 6020 087f 15       		.uleb128 0x15
 6021 0880 A8080000 		.4byte	.LASF122
 6022 0884 01       		.byte	0x1
 6023 0885 2A04     		.2byte	0x42a
 6024 0887 00000000 		.4byte	.LFB104
 6025 088b 50000000 		.4byte	.LFE104-.LFB104
 6026 088f 01       		.uleb128 0x1
 6027 0890 9C       		.byte	0x9c
 6028 0891 BC080000 		.4byte	0x8bc
 6029 0895 16       		.uleb128 0x16
 6030 0896 6300     		.ascii	"c\000"
 6031 0898 01       		.byte	0x1
 6032 0899 2A04     		.2byte	0x42a
 6033 089b 8E000000 		.4byte	0x8e
 6034 089f 02       		.uleb128 0x2
 6035 08a0 91       		.byte	0x91
 6036 08a1 6F       		.sleb128 -17
 6037 08a2 11       		.uleb128 0x11
 6038 08a3 12000000 		.4byte	.LBB13
 6039 08a7 2E000000 		.4byte	.LBE13-.LBB13
 6040 08ab 13       		.uleb128 0x13
 6041 08ac 636E7400 		.ascii	"cnt\000"
 6042 08b0 01       		.byte	0x1
 6043 08b1 2E04     		.2byte	0x42e
 6044 08b3 C3000000 		.4byte	0xc3
 6045 08b7 02       		.uleb128 0x2
 6046 08b8 91       		.byte	0x91
 6047 08b9 74       		.sleb128 -12
 6048 08ba 00       		.byte	0
 6049 08bb 00       		.byte	0
 6050 08bc 1A       		.uleb128 0x1a
 6051 08bd 65030000 		.4byte	.LASF123
 6052 08c1 01       		.byte	0x1
 6053 08c2 3B04     		.2byte	0x43b
 6054 08c4 00000000 		.4byte	.LFB105
 6055 08c8 0C000000 		.4byte	.LFE105-.LFB105
 6056 08cc 01       		.uleb128 0x1
 6057 08cd 9C       		.byte	0x9c
 6058 08ce 1B       		.uleb128 0x1b
 6059 08cf A4060000 		.4byte	.LASF124
 6060 08d3 06       		.byte	0x6
 6061 08d4 9606     		.2byte	0x696
 6062 08d6 DA080000 		.4byte	0x8da
 6063 08da 1C       		.uleb128 0x1c
 6064 08db 95000000 		.4byte	0x95
 6065 08df 1D       		.uleb128 0x1d
 6066 08e0 747300   		.ascii	"ts\000"
 6067 08e3 05       		.byte	0x5
 6068 08e4 10       		.byte	0x10
 6069 08e5 AB000000 		.4byte	0xab
 6070 08e9 05       		.uleb128 0x5
 6071 08ea 03       		.byte	0x3
 6072 08eb 00000000 		.4byte	ts
 6073 08ef 1E       		.uleb128 0x1e
 6074 08f0 2A080000 		.4byte	.LASF125
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 128


 6075 08f4 05       		.byte	0x5
 6076 08f5 11       		.byte	0x11
 6077 08f6 B7000000 		.4byte	0xb7
 6078 08fa 05       		.uleb128 0x5
 6079 08fb 03       		.byte	0x3
 6080 08fc 00000000 		.4byte	ts_enc
 6081 0900 1E       		.uleb128 0x1e
 6082 0901 C3060000 		.4byte	.LASF126
 6083 0905 05       		.byte	0x5
 6084 0906 12       		.byte	0x12
 6085 0907 B7000000 		.4byte	0xb7
 6086 090b 05       		.uleb128 0x5
 6087 090c 03       		.byte	0x3
 6088 090d 00000000 		.4byte	ts_update
 6089 0911 1E       		.uleb128 0x1e
 6090 0912 63050000 		.4byte	.LASF127
 6091 0916 05       		.byte	0x5
 6092 0917 13       		.byte	0x13
 6093 0918 B7000000 		.4byte	0xb7
 6094 091c 05       		.uleb128 0x5
 6095 091d 03       		.byte	0x3
 6096 091e 00000000 		.4byte	ts_speed
 6097 0922 1E       		.uleb128 0x1e
 6098 0923 8C030000 		.4byte	.LASF128
 6099 0927 05       		.byte	0x5
 6100 0928 14       		.byte	0x14
 6101 0929 B7000000 		.4byte	0xb7
 6102 092d 05       		.uleb128 0x5
 6103 092e 03       		.byte	0x3
 6104 092f 00000000 		.4byte	ts_display
 6105 0933 1E       		.uleb128 0x1e
 6106 0934 0F030000 		.4byte	.LASF129
 6107 0938 05       		.byte	0x5
 6108 0939 16       		.byte	0x16
 6109 093a AB000000 		.4byte	0xab
 6110 093e 05       		.uleb128 0x5
 6111 093f 03       		.byte	0x3
 6112 0940 00000000 		.4byte	flag_ts_enc
 6113 0944 1E       		.uleb128 0x1e
 6114 0945 E8020000 		.4byte	.LASF130
 6115 0949 05       		.byte	0x5
 6116 094a 17       		.byte	0x17
 6117 094b AB000000 		.4byte	0xab
 6118 094f 05       		.uleb128 0x5
 6119 0950 03       		.byte	0x3
 6120 0951 00000000 		.4byte	flag_ts_update
 6121 0955 1E       		.uleb128 0x1e
 6122 0956 1E060000 		.4byte	.LASF131
 6123 095a 05       		.byte	0x5
 6124 095b 18       		.byte	0x18
 6125 095c AB000000 		.4byte	0xab
 6126 0960 05       		.uleb128 0x5
 6127 0961 03       		.byte	0x3
 6128 0962 00000000 		.4byte	flag_ts_speed
 6129 0966 1E       		.uleb128 0x1e
 6130 0967 3B080000 		.4byte	.LASF132
 6131 096b 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 129


 6132 096c 19       		.byte	0x19
 6133 096d AB000000 		.4byte	0xab
 6134 0971 05       		.uleb128 0x5
 6135 0972 03       		.byte	0x3
 6136 0973 00000000 		.4byte	flag_ts_display
 6137 0977 1E       		.uleb128 0x1e
 6138 0978 49060000 		.4byte	.LASF133
 6139 097c 05       		.byte	0x5
 6140 097d 1C       		.byte	0x1c
 6141 097e AB000000 		.4byte	0xab
 6142 0982 05       		.uleb128 0x5
 6143 0983 03       		.byte	0x3
 6144 0984 00000000 		.4byte	flag_rx
 6145 0988 1E       		.uleb128 0x1e
 6146 0989 95020000 		.4byte	.LASF134
 6147 098d 05       		.byte	0x5
 6148 098e 1D       		.byte	0x1d
 6149 098f AB000000 		.4byte	0xab
 6150 0993 05       		.uleb128 0x5
 6151 0994 03       		.byte	0x3
 6152 0995 00000000 		.4byte	flag_packet
 6153 0999 1E       		.uleb128 0x1e
 6154 099a 61090000 		.4byte	.LASF135
 6155 099e 05       		.byte	0x5
 6156 099f 1E       		.byte	0x1e
 6157 09a0 AB000000 		.4byte	0xab
 6158 09a4 05       		.uleb128 0x5
 6159 09a5 03       		.byte	0x3
 6160 09a6 00000000 		.4byte	flag_KB_string
 6161 09aa 1E       		.uleb128 0x1e
 6162 09ab 2C060000 		.4byte	.LASF136
 6163 09af 05       		.byte	0x5
 6164 09b0 20       		.byte	0x20
 6165 09b1 AB000000 		.4byte	0xab
 6166 09b5 05       		.uleb128 0x5
 6167 09b6 03       		.byte	0x3
 6168 09b7 00000000 		.4byte	dataready_flag
 6169 09bb 1E       		.uleb128 0x1e
 6170 09bc AE010000 		.4byte	.LASF137
 6171 09c0 05       		.byte	0x5
 6172 09c1 22       		.byte	0x22
 6173 09c2 AB000000 		.4byte	0xab
 6174 09c6 05       		.uleb128 0x5
 6175 09c7 03       		.byte	0x3
 6176 09c8 00000000 		.4byte	flag_rf_transmission_active
 6177 09cc 1E       		.uleb128 0x1e
 6178 09cd CA010000 		.4byte	.LASF138
 6179 09d1 05       		.byte	0x5
 6180 09d2 23       		.byte	0x23
 6181 09d3 AB000000 		.4byte	0xab
 6182 09d7 05       		.uleb128 0x5
 6183 09d8 03       		.byte	0x3
 6184 09d9 00000000 		.4byte	flag_print_rf
 6185 09dd 1E       		.uleb128 0x1e
 6186 09de C6050000 		.4byte	.LASF139
 6187 09e2 05       		.byte	0x5
 6188 09e3 25       		.byte	0x25
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 130


 6189 09e4 AB000000 		.4byte	0xab
 6190 09e8 05       		.uleb128 0x5
 6191 09e9 03       		.byte	0x3
 6192 09ea 00000000 		.4byte	flag_receive_ADC
 6193 09ee 1E       		.uleb128 0x1e
 6194 09ef 5B060000 		.4byte	.LASF140
 6195 09f3 05       		.byte	0x5
 6196 09f4 26       		.byte	0x26
 6197 09f5 DB000000 		.4byte	0xdb
 6198 09f9 05       		.uleb128 0x5
 6199 09fa 03       		.byte	0x3
 6200 09fb 00000000 		.4byte	adc_result
 6201 09ff 1E       		.uleb128 0x1e
 6202 0a00 00000000 		.4byte	.LASF141
 6203 0a04 05       		.byte	0x5
 6204 0a05 28       		.byte	0x28
 6205 0a06 AB000000 		.4byte	0xab
 6206 0a0a 05       		.uleb128 0x5
 6207 0a0b 03       		.byte	0x3
 6208 0a0c 00000000 		.4byte	direction
 6209 0a10 1E       		.uleb128 0x1e
 6210 0a11 4C050000 		.4byte	.LASF142
 6211 0a15 05       		.byte	0x5
 6212 0a16 2B       		.byte	0x2b
 6213 0a17 AB000000 		.4byte	0xab
 6214 0a1b 05       		.uleb128 0x5
 6215 0a1c 03       		.byte	0x3
 6216 0a1d 00000000 		.4byte	BIN_ENABLED
 6217 0a21 1E       		.uleb128 0x1e
 6218 0a22 42040000 		.4byte	.LASF143
 6219 0a26 05       		.byte	0x5
 6220 0a27 2D       		.byte	0x2d
 6221 0a28 AB000000 		.4byte	0xab
 6222 0a2c 05       		.uleb128 0x5
 6223 0a2d 03       		.byte	0x3
 6224 0a2e 00000000 		.4byte	BT_ENABLED
 6225 0a32 1E       		.uleb128 0x1e
 6226 0a33 70060000 		.4byte	.LASF144
 6227 0a37 05       		.byte	0x5
 6228 0a38 32       		.byte	0x32
 6229 0a39 AB000000 		.4byte	0xab
 6230 0a3d 05       		.uleb128 0x5
 6231 0a3e 03       		.byte	0x3
 6232 0a3f 00000000 		.4byte	flag_calc_wheelspeed
 6233 0a43 1E       		.uleb128 0x1e
 6234 0a44 4F010000 		.4byte	.LASF145
 6235 0a48 05       		.byte	0x5
 6236 0a49 33       		.byte	0x33
 6237 0a4a DB000000 		.4byte	0xdb
 6238 0a4e 05       		.uleb128 0x5
 6239 0a4f 03       		.byte	0x3
 6240 0a50 00000000 		.4byte	quad_count1
 6241 0a54 1E       		.uleb128 0x1e
 6242 0a55 5B010000 		.4byte	.LASF146
 6243 0a59 05       		.byte	0x5
 6244 0a5a 34       		.byte	0x34
 6245 0a5b DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 131


 6246 0a5f 05       		.uleb128 0x5
 6247 0a60 03       		.byte	0x3
 6248 0a61 00000000 		.4byte	quad_count2
 6249 0a65 1E       		.uleb128 0x1e
 6250 0a66 7A080000 		.4byte	.LASF147
 6251 0a6a 05       		.byte	0x5
 6252 0a6b 35       		.byte	0x35
 6253 0a6c DB000000 		.4byte	0xdb
 6254 0a70 05       		.uleb128 0x5
 6255 0a71 03       		.byte	0x3
 6256 0a72 00000000 		.4byte	last_quad_count1
 6257 0a76 1E       		.uleb128 0x1e
 6258 0a77 8B080000 		.4byte	.LASF148
 6259 0a7b 05       		.byte	0x5
 6260 0a7c 36       		.byte	0x36
 6261 0a7d DB000000 		.4byte	0xdb
 6262 0a81 05       		.uleb128 0x5
 6263 0a82 03       		.byte	0x3
 6264 0a83 00000000 		.4byte	last_quad_count2
 6265 0a87 1E       		.uleb128 0x1e
 6266 0a88 7A000000 		.4byte	.LASF149
 6267 0a8c 05       		.byte	0x5
 6268 0a8d 37       		.byte	0x37
 6269 0a8e DB000000 		.4byte	0xdb
 6270 0a92 05       		.uleb128 0x5
 6271 0a93 03       		.byte	0x3
 6272 0a94 00000000 		.4byte	quad_diff1
 6273 0a98 1E       		.uleb128 0x1e
 6274 0a99 85000000 		.4byte	.LASF150
 6275 0a9d 05       		.byte	0x5
 6276 0a9e 38       		.byte	0x38
 6277 0a9f DB000000 		.4byte	0xdb
 6278 0aa3 05       		.uleb128 0x5
 6279 0aa4 03       		.byte	0x3
 6280 0aa5 00000000 		.4byte	quad_diff2
 6281 0aa9 1E       		.uleb128 0x1e
 6282 0aaa D6060000 		.4byte	.LASF151
 6283 0aae 05       		.byte	0x5
 6284 0aaf 39       		.byte	0x39
 6285 0ab0 AB000000 		.4byte	0xab
 6286 0ab4 05       		.uleb128 0x5
 6287 0ab5 03       		.byte	0x3
 6288 0ab6 00000000 		.4byte	deadzone
 6289 0aba 1E       		.uleb128 0x1e
 6290 0abb AE000000 		.4byte	.LASF152
 6291 0abf 05       		.byte	0x5
 6292 0ac0 3C       		.byte	0x3c
 6293 0ac1 DB000000 		.4byte	0xdb
 6294 0ac5 05       		.uleb128 0x5
 6295 0ac6 03       		.byte	0x3
 6296 0ac7 00000000 		.4byte	start_turn_count
 6297 0acb 1E       		.uleb128 0x1e
 6298 0acc 01060000 		.4byte	.LASF153
 6299 0ad0 05       		.byte	0x5
 6300 0ad1 3F       		.byte	0x3f
 6301 0ad2 DB000000 		.4byte	0xdb
 6302 0ad6 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 132


 6303 0ad7 03       		.byte	0x3
 6304 0ad8 00000000 		.4byte	left_duty_cycle
 6305 0adc 1E       		.uleb128 0x1e
 6306 0add 13090000 		.4byte	.LASF154
 6307 0ae1 05       		.byte	0x5
 6308 0ae2 40       		.byte	0x40
 6309 0ae3 DB000000 		.4byte	0xdb
 6310 0ae7 05       		.uleb128 0x5
 6311 0ae8 03       		.byte	0x3
 6312 0ae9 00000000 		.4byte	right_duty_cycle
 6313 0aed 1E       		.uleb128 0x1e
 6314 0aee DF060000 		.4byte	.LASF155
 6315 0af2 05       		.byte	0x5
 6316 0af3 43       		.byte	0x43
 6317 0af4 DB000000 		.4byte	0xdb
 6318 0af8 05       		.uleb128 0x5
 6319 0af9 03       		.byte	0x3
 6320 0afa 00000000 		.4byte	leftSpeedLimit
 6321 0afe 1E       		.uleb128 0x1e
 6322 0aff BB030000 		.4byte	.LASF156
 6323 0b03 05       		.byte	0x5
 6324 0b04 44       		.byte	0x44
 6325 0b05 DB000000 		.4byte	0xdb
 6326 0b09 05       		.uleb128 0x5
 6327 0b0a 03       		.byte	0x3
 6328 0b0b 00000000 		.4byte	rightSpeedLimit
 6329 0b0f 1E       		.uleb128 0x1e
 6330 0b10 6D070000 		.4byte	.LASF157
 6331 0b14 05       		.byte	0x5
 6332 0b15 47       		.byte	0x47
 6333 0b16 DB000000 		.4byte	0xdb
 6334 0b1a 05       		.uleb128 0x5
 6335 0b1b 03       		.byte	0x3
 6336 0b1c 00000000 		.4byte	target_distance_cm
 6337 0b20 1E       		.uleb128 0x1e
 6338 0b21 1E070000 		.4byte	.LASF158
 6339 0b25 05       		.byte	0x5
 6340 0b26 49       		.byte	0x49
 6341 0b27 DB000000 		.4byte	0xdb
 6342 0b2b 05       		.uleb128 0x5
 6343 0b2c 03       		.byte	0x3
 6344 0b2d 00000000 		.4byte	accum_dist
 6345 0b31 1E       		.uleb128 0x1e
 6346 0b32 FA000000 		.4byte	.LASF159
 6347 0b36 05       		.byte	0x5
 6348 0b37 4A       		.byte	0x4a
 6349 0b38 DB000000 		.4byte	0xdb
 6350 0b3c 05       		.uleb128 0x5
 6351 0b3d 03       		.byte	0x3
 6352 0b3e 00000000 		.4byte	target_distance_quad
 6353 0b42 1E       		.uleb128 0x1e
 6354 0b43 0E080000 		.4byte	.LASF160
 6355 0b47 05       		.byte	0x5
 6356 0b48 4B       		.byte	0x4b
 6357 0b49 AB000000 		.4byte	0xab
 6358 0b4d 05       		.uleb128 0x5
 6359 0b4e 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 133


 6360 0b4f 00000000 		.4byte	reached_target
 6361 0b53 1E       		.uleb128 0x1e
 6362 0b54 09070000 		.4byte	.LASF161
 6363 0b58 05       		.byte	0x5
 6364 0b59 4C       		.byte	0x4c
 6365 0b5a AB000000 		.4byte	0xab
 6366 0b5e 05       		.uleb128 0x5
 6367 0b5f 03       		.byte	0x3
 6368 0b60 00000000 		.4byte	overshot_target
 6369 0b64 1E       		.uleb128 0x1e
 6370 0b65 61070000 		.4byte	.LASF162
 6371 0b69 05       		.byte	0x5
 6372 0b6a 4D       		.byte	0x4d
 6373 0b6b E7000000 		.4byte	0xe7
 6374 0b6f 05       		.uleb128 0x5
 6375 0b70 03       		.byte	0x3
 6376 0b71 00000000 		.4byte	quad_per_cm
 6377 0b75 1E       		.uleb128 0x1e
 6378 0b76 53040000 		.4byte	.LASF163
 6379 0b7a 05       		.byte	0x5
 6380 0b7b 50       		.byte	0x50
 6381 0b7c AB000000 		.4byte	0xab
 6382 0b80 05       		.uleb128 0x5
 6383 0b81 03       		.byte	0x3
 6384 0b82 00000000 		.4byte	initial_pos_valid
 6385 0b86 1E       		.uleb128 0x1e
 6386 0b87 82090000 		.4byte	.LASF164
 6387 0b8b 05       		.byte	0x5
 6388 0b8c 51       		.byte	0x51
 6389 0b8d DB000000 		.4byte	0xdb
 6390 0b91 05       		.uleb128 0x5
 6391 0b92 03       		.byte	0x3
 6392 0b93 00000000 		.4byte	initial_x_pos
 6393 0b97 1E       		.uleb128 0x1e
 6394 0b98 3B060000 		.4byte	.LASF165
 6395 0b9c 05       		.byte	0x5
 6396 0b9d 52       		.byte	0x52
 6397 0b9e DB000000 		.4byte	0xdb
 6398 0ba2 05       		.uleb128 0x5
 6399 0ba3 03       		.byte	0x3
 6400 0ba4 00000000 		.4byte	initial_y_pos
 6401 0ba8 1E       		.uleb128 0x1e
 6402 0ba9 31080000 		.4byte	.LASF166
 6403 0bad 05       		.byte	0x5
 6404 0bae 55       		.byte	0x55
 6405 0baf AB000000 		.4byte	0xab
 6406 0bb3 05       		.uleb128 0x5
 6407 0bb4 03       		.byte	0x3
 6408 0bb5 00000000 		.4byte	brakeFlag
 6409 0bb9 1E       		.uleb128 0x1e
 6410 0bba D5020000 		.4byte	.LASF167
 6411 0bbe 05       		.byte	0x5
 6412 0bbf 56       		.byte	0x56
 6413 0bc0 AB000000 		.4byte	0xab
 6414 0bc4 05       		.uleb128 0x5
 6415 0bc5 03       		.byte	0x3
 6416 0bc6 00000000 		.4byte	portOpen
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 134


 6417 0bca 1E       		.uleb128 0x1e
 6418 0bcb A2000000 		.4byte	.LASF168
 6419 0bcf 05       		.byte	0x5
 6420 0bd0 59       		.byte	0x59
 6421 0bd1 DB000000 		.4byte	0xdb
 6422 0bd5 05       		.uleb128 0x5
 6423 0bd6 03       		.byte	0x3
 6424 0bd7 00000000 		.4byte	prevVoltage
 6425 0bdb 1E       		.uleb128 0x1e
 6426 0bdc 18010000 		.4byte	.LASF169
 6427 0be0 05       		.byte	0x5
 6428 0be1 5A       		.byte	0x5a
 6429 0be2 DB000000 		.4byte	0xdb
 6430 0be6 05       		.uleb128 0x5
 6431 0be7 03       		.byte	0x3
 6432 0be8 00000000 		.4byte	prevVoltage2
 6433 0bec 07       		.uleb128 0x7
 6434 0bed 8E000000 		.4byte	0x8e
 6435 0bf1 FC0B0000 		.4byte	0xbfc
 6436 0bf5 08       		.uleb128 0x8
 6437 0bf6 81000000 		.4byte	0x81
 6438 0bfa 3F       		.byte	0x3f
 6439 0bfb 00       		.byte	0
 6440 0bfc 1E       		.uleb128 0x1e
 6441 0bfd 6C080000 		.4byte	.LASF170
 6442 0c01 05       		.byte	0x5
 6443 0c02 60       		.byte	0x60
 6444 0c03 EC0B0000 		.4byte	0xbec
 6445 0c07 05       		.uleb128 0x5
 6446 0c08 03       		.byte	0x3
 6447 0c09 00000000 		.4byte	displaystring
 6448 0c0d 1E       		.uleb128 0x1e
 6449 0c0e 09080000 		.4byte	.LASF171
 6450 0c12 05       		.byte	0x5
 6451 0c13 61       		.byte	0x61
 6452 0c14 EC0B0000 		.4byte	0xbec
 6453 0c18 05       		.uleb128 0x5
 6454 0c19 03       		.byte	0x3
 6455 0c1a 00000000 		.4byte	line
 6456 0c1e 1E       		.uleb128 0x1e
 6457 0c1f EA070000 		.4byte	.LASF172
 6458 0c23 05       		.byte	0x5
 6459 0c24 61       		.byte	0x61
 6460 0c25 EC0B0000 		.4byte	0xbec
 6461 0c29 05       		.uleb128 0x5
 6462 0c2a 03       		.byte	0x3
 6463 0c2b 00000000 		.4byte	entry
 6464 0c2f 07       		.uleb128 0x7
 6465 0c30 AB000000 		.4byte	0xab
 6466 0c34 3F0C0000 		.4byte	0xc3f
 6467 0c38 08       		.uleb128 0x8
 6468 0c39 81000000 		.4byte	0x81
 6469 0c3d 3F       		.byte	0x3f
 6470 0c3e 00       		.byte	0
 6471 0c3f 1E       		.uleb128 0x1e
 6472 0c40 2D020000 		.4byte	.LASF173
 6473 0c44 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 135


 6474 0c45 62       		.byte	0x62
 6475 0c46 2F0C0000 		.4byte	0xc2f
 6476 0c4a 05       		.uleb128 0x5
 6477 0c4b 03       		.byte	0x3
 6478 0c4c 00000000 		.4byte	usbBuffer
 6479 0c50 1E       		.uleb128 0x1e
 6480 0c51 73040000 		.4byte	.LASF174
 6481 0c55 05       		.byte	0x5
 6482 0c56 77       		.byte	0x77
 6483 0c57 86010000 		.4byte	0x186
 6484 0c5b 05       		.uleb128 0x5
 6485 0c5c 03       		.byte	0x3
 6486 0c5d 00000000 		.4byte	buffer_state
 6487 0c61 1E       		.uleb128 0x1e
 6488 0c62 E7000000 		.4byte	.LASF175
 6489 0c66 05       		.byte	0x5
 6490 0c67 78       		.byte	0x78
 6491 0c68 86010000 		.4byte	0x186
 6492 0c6c 05       		.uleb128 0x5
 6493 0c6d 03       		.byte	0x3
 6494 0c6e 00000000 		.4byte	system_state
 6495 0c72 1E       		.uleb128 0x1e
 6496 0c73 3B030000 		.4byte	.LASF176
 6497 0c77 05       		.byte	0x5
 6498 0c78 7A       		.byte	0x7a
 6499 0c79 0C010000 		.4byte	0x10c
 6500 0c7d 05       		.uleb128 0x5
 6501 0c7e 03       		.byte	0x3
 6502 0c7f 00000000 		.4byte	prev_movement_state
 6503 0c83 1E       		.uleb128 0x1e
 6504 0c84 D8010000 		.4byte	.LASF177
 6505 0c88 05       		.byte	0x5
 6506 0c89 7B       		.byte	0x7b
 6507 0c8a 0C010000 		.4byte	0x10c
 6508 0c8e 05       		.uleb128 0x5
 6509 0c8f 03       		.byte	0x3
 6510 0c90 00000000 		.4byte	movement_state
 6511 0c94 1E       		.uleb128 0x1e
 6512 0c95 CC000000 		.4byte	.LASF178
 6513 0c99 05       		.byte	0x5
 6514 0c9a 7C       		.byte	0x7c
 6515 0c9b 49010000 		.4byte	0x149
 6516 0c9f 05       		.uleb128 0x5
 6517 0ca0 03       		.byte	0x3
 6518 0ca1 00000000 		.4byte	track_mode
 6519 0ca5 1E       		.uleb128 0x1e
 6520 0ca6 1B030000 		.4byte	.LASF179
 6521 0caa 05       		.byte	0x5
 6522 0cab 7E       		.byte	0x7e
 6523 0cac AB000000 		.4byte	0xab
 6524 0cb0 05       		.uleb128 0x5
 6525 0cb1 03       		.byte	0x3
 6526 0cb2 00000000 		.4byte	byteCount
 6527 0cb6 07       		.uleb128 0x7
 6528 0cb7 8E000000 		.4byte	0x8e
 6529 0cbb C60C0000 		.4byte	0xcc6
 6530 0cbf 08       		.uleb128 0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 136


 6531 0cc0 81000000 		.4byte	0x81
 6532 0cc4 01       		.byte	0x1
 6533 0cc5 00       		.byte	0
 6534 0cc6 1E       		.uleb128 0x1e
 6535 0cc7 AF070000 		.4byte	.LASF180
 6536 0ccb 05       		.byte	0x5
 6537 0ccc 7F       		.byte	0x7f
 6538 0ccd B60C0000 		.4byte	0xcb6
 6539 0cd1 05       		.uleb128 0x5
 6540 0cd2 03       		.byte	0x3
 6541 0cd3 00000000 		.4byte	packet
 6542 0cd7 1E       		.uleb128 0x1e
 6543 0cd8 9B010000 		.4byte	.LASF181
 6544 0cdc 05       		.byte	0x5
 6545 0cdd 83       		.byte	0x83
 6546 0cde EE000000 		.4byte	0xee
 6547 0ce2 05       		.uleb128 0x5
 6548 0ce3 03       		.byte	0x3
 6549 0ce4 00000000 		.4byte	speed
 6550 0ce8 1E       		.uleb128 0x1e
 6551 0ce9 D6030000 		.4byte	.LASF182
 6552 0ced 01       		.byte	0x1
 6553 0cee 1F       		.byte	0x1f
 6554 0cef B7000000 		.4byte	0xb7
 6555 0cf3 05       		.uleb128 0x5
 6556 0cf4 03       		.byte	0x3
 6557 0cf5 00000000 		.4byte	instructionCount
 6558 0cf9 1E       		.uleb128 0x1e
 6559 0cfa 25010000 		.4byte	.LASF183
 6560 0cfe 01       		.byte	0x1
 6561 0cff 21       		.byte	0x21
 6562 0d00 A0000000 		.4byte	0xa0
 6563 0d04 05       		.uleb128 0x5
 6564 0d05 03       		.byte	0x3
 6565 0d06 00000000 		.4byte	sensorsDisabled
 6566 0d0a 07       		.uleb128 0x7
 6567 0d0b A0000000 		.4byte	0xa0
 6568 0d0f 200D0000 		.4byte	0xd20
 6569 0d13 08       		.uleb128 0x8
 6570 0d14 81000000 		.4byte	0x81
 6571 0d18 0E       		.byte	0xe
 6572 0d19 08       		.uleb128 0x8
 6573 0d1a 81000000 		.4byte	0x81
 6574 0d1e 12       		.byte	0x12
 6575 0d1f 00       		.byte	0
 6576 0d20 1D       		.uleb128 0x1d
 6577 0d21 6D617000 		.ascii	"map\000"
 6578 0d25 01       		.byte	0x1
 6579 0d26 29       		.byte	0x29
 6580 0d27 0A0D0000 		.4byte	0xd0a
 6581 0d2b 05       		.uleb128 0x5
 6582 0d2c 03       		.byte	0x3
 6583 0d2d 00000000 		.4byte	map
 6584 0d31 07       		.uleb128 0x7
 6585 0d32 A0000000 		.4byte	0xa0
 6586 0d36 470D0000 		.4byte	0xd47
 6587 0d3a 08       		.uleb128 0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 137


 6588 0d3b 81000000 		.4byte	0x81
 6589 0d3f 05       		.byte	0x5
 6590 0d40 08       		.uleb128 0x8
 6591 0d41 81000000 		.4byte	0x81
 6592 0d45 01       		.byte	0x1
 6593 0d46 00       		.byte	0
 6594 0d47 1E       		.uleb128 0x1e
 6595 0d48 42050000 		.4byte	.LASF184
 6596 0d4c 01       		.byte	0x1
 6597 0d4d 3E       		.byte	0x3e
 6598 0d4e 310D0000 		.4byte	0xd31
 6599 0d52 05       		.uleb128 0x5
 6600 0d53 03       		.byte	0x3
 6601 0d54 00000000 		.4byte	food_list
 6602 0d58 07       		.uleb128 0x7
 6603 0d59 A0000000 		.4byte	0xa0
 6604 0d5d 6F0D0000 		.4byte	0xd6f
 6605 0d61 1F       		.uleb128 0x1f
 6606 0d62 81000000 		.4byte	0x81
 6607 0d66 1F03     		.2byte	0x31f
 6608 0d68 08       		.uleb128 0x8
 6609 0d69 81000000 		.4byte	0x81
 6610 0d6d 02       		.byte	0x2
 6611 0d6e 00       		.byte	0
 6612 0d6f 1E       		.uleb128 0x1e
 6613 0d70 1B040000 		.4byte	.LASF185
 6614 0d74 01       		.byte	0x1
 6615 0d75 25       		.byte	0x25
 6616 0d76 580D0000 		.4byte	0xd58
 6617 0d7a 05       		.uleb128 0x5
 6618 0d7b 03       		.byte	0x3
 6619 0d7c 00000000 		.4byte	path
 6620 0d80 1E       		.uleb128 0x1e
 6621 0d81 A4050000 		.4byte	.LASF186
 6622 0d85 01       		.byte	0x1
 6623 0d86 26       		.byte	0x26
 6624 0d87 F5000000 		.4byte	0xf5
 6625 0d8b 05       		.uleb128 0x5
 6626 0d8c 03       		.byte	0x3
 6627 0d8d 00000000 		.4byte	start
 6628 0d91 1E       		.uleb128 0x1e
 6629 0d92 9C080000 		.4byte	.LASF187
 6630 0d96 01       		.byte	0x1
 6631 0d97 27       		.byte	0x27
 6632 0d98 F5000000 		.4byte	0xf5
 6633 0d9c 05       		.uleb128 0x5
 6634 0d9d 03       		.byte	0x3
 6635 0d9e 00000000 		.4byte	destination
 6636 0da2 1E       		.uleb128 0x1e
 6637 0da3 72010000 		.4byte	.LASF188
 6638 0da7 01       		.byte	0x1
 6639 0da8 23       		.byte	0x23
 6640 0da9 A0000000 		.4byte	0xa0
 6641 0dad 05       		.uleb128 0x5
 6642 0dae 03       		.byte	0x3
 6643 0daf 00000000 		.4byte	robot_direction
 6644 0db3 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 138


 6645 0db4 0A000000 		.4byte	.LASF189
 6646 0db8 07       		.byte	0x7
 6647 0db9 22       		.byte	0x22
 6648 0dba A0000000 		.4byte	0xa0
 6649 0dbe 05       		.uleb128 0x5
 6650 0dbf 03       		.byte	0x3
 6651 0dc0 00000000 		.4byte	tracked_direction
 6652 0dc4 1E       		.uleb128 0x1e
 6653 0dc5 DE070000 		.4byte	.LASF190
 6654 0dc9 01       		.byte	0x1
 6655 0dca 40       		.byte	0x40
 6656 0dcb A0000000 		.4byte	0xa0
 6657 0dcf 05       		.uleb128 0x5
 6658 0dd0 03       		.byte	0x3
 6659 0dd1 00000000 		.4byte	food_length
 6660 0dd5 07       		.uleb128 0x7
 6661 0dd6 8E000000 		.4byte	0x8e
 6662 0dda E60D0000 		.4byte	0xde6
 6663 0dde 1F       		.uleb128 0x1f
 6664 0ddf 81000000 		.4byte	0x81
 6665 0de3 1F03     		.2byte	0x31f
 6666 0de5 00       		.byte	0
 6667 0de6 1E       		.uleb128 0x1e
 6668 0de7 73050000 		.4byte	.LASF191
 6669 0deb 01       		.byte	0x1
 6670 0dec 1E       		.byte	0x1e
 6671 0ded D50D0000 		.4byte	0xdd5
 6672 0df1 05       		.uleb128 0x5
 6673 0df2 03       		.byte	0x3
 6674 0df3 00000000 		.4byte	instructions
 6675 0df7 1E       		.uleb128 0x1e
 6676 0df8 B6070000 		.4byte	.LASF192
 6677 0dfc 01       		.byte	0x1
 6678 0dfd 20       		.byte	0x20
 6679 0dfe B7000000 		.4byte	0xb7
 6680 0e02 05       		.uleb128 0x5
 6681 0e03 03       		.byte	0x3
 6682 0e04 00000000 		.4byte	instructionLength
 6683 0e08 20       		.uleb128 0x20
 6684 0e09 8D010000 		.4byte	.LASF193
 6685 0e0d 01       		.byte	0x1
 6686 0e0e B703     		.2byte	0x3b7
 6687 0e10 B7000000 		.4byte	0xb7
 6688 0e14 05       		.uleb128 0x5
 6689 0e15 03       		.byte	0x3
 6690 0e16 00000000 		.4byte	leftTurnCount
 6691 0e1a 20       		.uleb128 0x20
 6692 0e1b 61000000 		.4byte	.LASF194
 6693 0e1f 01       		.byte	0x1
 6694 0e20 B803     		.2byte	0x3b8
 6695 0e22 B7000000 		.4byte	0xb7
 6696 0e26 05       		.uleb128 0x5
 6697 0e27 03       		.byte	0x3
 6698 0e28 00000000 		.4byte	rightTurnCount
 6699 0e2c 00       		.byte	0
 6700              		.section	.debug_abbrev,"",%progbits
 6701              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 139


 6702 0000 01       		.uleb128 0x1
 6703 0001 11       		.uleb128 0x11
 6704 0002 01       		.byte	0x1
 6705 0003 25       		.uleb128 0x25
 6706 0004 0E       		.uleb128 0xe
 6707 0005 13       		.uleb128 0x13
 6708 0006 0B       		.uleb128 0xb
 6709 0007 03       		.uleb128 0x3
 6710 0008 0E       		.uleb128 0xe
 6711 0009 1B       		.uleb128 0x1b
 6712 000a 0E       		.uleb128 0xe
 6713 000b 55       		.uleb128 0x55
 6714 000c 17       		.uleb128 0x17
 6715 000d 11       		.uleb128 0x11
 6716 000e 01       		.uleb128 0x1
 6717 000f 10       		.uleb128 0x10
 6718 0010 17       		.uleb128 0x17
 6719 0011 00       		.byte	0
 6720 0012 00       		.byte	0
 6721 0013 02       		.uleb128 0x2
 6722 0014 24       		.uleb128 0x24
 6723 0015 00       		.byte	0
 6724 0016 0B       		.uleb128 0xb
 6725 0017 0B       		.uleb128 0xb
 6726 0018 3E       		.uleb128 0x3e
 6727 0019 0B       		.uleb128 0xb
 6728 001a 03       		.uleb128 0x3
 6729 001b 0E       		.uleb128 0xe
 6730 001c 00       		.byte	0
 6731 001d 00       		.byte	0
 6732 001e 03       		.uleb128 0x3
 6733 001f 16       		.uleb128 0x16
 6734 0020 00       		.byte	0
 6735 0021 03       		.uleb128 0x3
 6736 0022 0E       		.uleb128 0xe
 6737 0023 3A       		.uleb128 0x3a
 6738 0024 0B       		.uleb128 0xb
 6739 0025 3B       		.uleb128 0x3b
 6740 0026 0B       		.uleb128 0xb
 6741 0027 49       		.uleb128 0x49
 6742 0028 13       		.uleb128 0x13
 6743 0029 00       		.byte	0
 6744 002a 00       		.byte	0
 6745 002b 04       		.uleb128 0x4
 6746 002c 24       		.uleb128 0x24
 6747 002d 00       		.byte	0
 6748 002e 0B       		.uleb128 0xb
 6749 002f 0B       		.uleb128 0xb
 6750 0030 3E       		.uleb128 0x3e
 6751 0031 0B       		.uleb128 0xb
 6752 0032 03       		.uleb128 0x3
 6753 0033 08       		.uleb128 0x8
 6754 0034 00       		.byte	0
 6755 0035 00       		.byte	0
 6756 0036 05       		.uleb128 0x5
 6757 0037 0F       		.uleb128 0xf
 6758 0038 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 140


 6759 0039 0B       		.uleb128 0xb
 6760 003a 0B       		.uleb128 0xb
 6761 003b 49       		.uleb128 0x49
 6762 003c 13       		.uleb128 0x13
 6763 003d 00       		.byte	0
 6764 003e 00       		.byte	0
 6765 003f 06       		.uleb128 0x6
 6766 0040 16       		.uleb128 0x16
 6767 0041 00       		.byte	0
 6768 0042 03       		.uleb128 0x3
 6769 0043 0E       		.uleb128 0xe
 6770 0044 3A       		.uleb128 0x3a
 6771 0045 0B       		.uleb128 0xb
 6772 0046 3B       		.uleb128 0x3b
 6773 0047 05       		.uleb128 0x5
 6774 0048 49       		.uleb128 0x49
 6775 0049 13       		.uleb128 0x13
 6776 004a 00       		.byte	0
 6777 004b 00       		.byte	0
 6778 004c 07       		.uleb128 0x7
 6779 004d 01       		.uleb128 0x1
 6780 004e 01       		.byte	0x1
 6781 004f 49       		.uleb128 0x49
 6782 0050 13       		.uleb128 0x13
 6783 0051 01       		.uleb128 0x1
 6784 0052 13       		.uleb128 0x13
 6785 0053 00       		.byte	0
 6786 0054 00       		.byte	0
 6787 0055 08       		.uleb128 0x8
 6788 0056 21       		.uleb128 0x21
 6789 0057 00       		.byte	0
 6790 0058 49       		.uleb128 0x49
 6791 0059 13       		.uleb128 0x13
 6792 005a 2F       		.uleb128 0x2f
 6793 005b 0B       		.uleb128 0xb
 6794 005c 00       		.byte	0
 6795 005d 00       		.byte	0
 6796 005e 09       		.uleb128 0x9
 6797 005f 04       		.uleb128 0x4
 6798 0060 01       		.byte	0x1
 6799 0061 03       		.uleb128 0x3
 6800 0062 0E       		.uleb128 0xe
 6801 0063 0B       		.uleb128 0xb
 6802 0064 0B       		.uleb128 0xb
 6803 0065 3A       		.uleb128 0x3a
 6804 0066 0B       		.uleb128 0xb
 6805 0067 3B       		.uleb128 0x3b
 6806 0068 0B       		.uleb128 0xb
 6807 0069 01       		.uleb128 0x1
 6808 006a 13       		.uleb128 0x13
 6809 006b 00       		.byte	0
 6810 006c 00       		.byte	0
 6811 006d 0A       		.uleb128 0xa
 6812 006e 28       		.uleb128 0x28
 6813 006f 00       		.byte	0
 6814 0070 03       		.uleb128 0x3
 6815 0071 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 141


 6816 0072 1C       		.uleb128 0x1c
 6817 0073 0D       		.uleb128 0xd
 6818 0074 00       		.byte	0
 6819 0075 00       		.byte	0
 6820 0076 0B       		.uleb128 0xb
 6821 0077 13       		.uleb128 0x13
 6822 0078 01       		.byte	0x1
 6823 0079 03       		.uleb128 0x3
 6824 007a 0E       		.uleb128 0xe
 6825 007b 0B       		.uleb128 0xb
 6826 007c 0B       		.uleb128 0xb
 6827 007d 3A       		.uleb128 0x3a
 6828 007e 0B       		.uleb128 0xb
 6829 007f 3B       		.uleb128 0x3b
 6830 0080 0B       		.uleb128 0xb
 6831 0081 01       		.uleb128 0x1
 6832 0082 13       		.uleb128 0x13
 6833 0083 00       		.byte	0
 6834 0084 00       		.byte	0
 6835 0085 0C       		.uleb128 0xc
 6836 0086 0D       		.uleb128 0xd
 6837 0087 00       		.byte	0
 6838 0088 03       		.uleb128 0x3
 6839 0089 0E       		.uleb128 0xe
 6840 008a 3A       		.uleb128 0x3a
 6841 008b 0B       		.uleb128 0xb
 6842 008c 3B       		.uleb128 0x3b
 6843 008d 0B       		.uleb128 0xb
 6844 008e 49       		.uleb128 0x49
 6845 008f 13       		.uleb128 0x13
 6846 0090 38       		.uleb128 0x38
 6847 0091 0B       		.uleb128 0xb
 6848 0092 00       		.byte	0
 6849 0093 00       		.byte	0
 6850 0094 0D       		.uleb128 0xd
 6851 0095 2E       		.uleb128 0x2e
 6852 0096 00       		.byte	0
 6853 0097 3F       		.uleb128 0x3f
 6854 0098 19       		.uleb128 0x19
 6855 0099 03       		.uleb128 0x3
 6856 009a 0E       		.uleb128 0xe
 6857 009b 3A       		.uleb128 0x3a
 6858 009c 0B       		.uleb128 0xb
 6859 009d 3B       		.uleb128 0x3b
 6860 009e 0B       		.uleb128 0xb
 6861 009f 27       		.uleb128 0x27
 6862 00a0 19       		.uleb128 0x19
 6863 00a1 11       		.uleb128 0x11
 6864 00a2 01       		.uleb128 0x1
 6865 00a3 12       		.uleb128 0x12
 6866 00a4 06       		.uleb128 0x6
 6867 00a5 40       		.uleb128 0x40
 6868 00a6 18       		.uleb128 0x18
 6869 00a7 9742     		.uleb128 0x2117
 6870 00a9 19       		.uleb128 0x19
 6871 00aa 00       		.byte	0
 6872 00ab 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 142


 6873 00ac 0E       		.uleb128 0xe
 6874 00ad 2E       		.uleb128 0x2e
 6875 00ae 00       		.byte	0
 6876 00af 3F       		.uleb128 0x3f
 6877 00b0 19       		.uleb128 0x19
 6878 00b1 03       		.uleb128 0x3
 6879 00b2 0E       		.uleb128 0xe
 6880 00b3 3A       		.uleb128 0x3a
 6881 00b4 0B       		.uleb128 0xb
 6882 00b5 3B       		.uleb128 0x3b
 6883 00b6 0B       		.uleb128 0xb
 6884 00b7 27       		.uleb128 0x27
 6885 00b8 19       		.uleb128 0x19
 6886 00b9 11       		.uleb128 0x11
 6887 00ba 01       		.uleb128 0x1
 6888 00bb 12       		.uleb128 0x12
 6889 00bc 06       		.uleb128 0x6
 6890 00bd 40       		.uleb128 0x40
 6891 00be 18       		.uleb128 0x18
 6892 00bf 9642     		.uleb128 0x2116
 6893 00c1 19       		.uleb128 0x19
 6894 00c2 00       		.byte	0
 6895 00c3 00       		.byte	0
 6896 00c4 0F       		.uleb128 0xf
 6897 00c5 2E       		.uleb128 0x2e
 6898 00c6 01       		.byte	0x1
 6899 00c7 3F       		.uleb128 0x3f
 6900 00c8 19       		.uleb128 0x19
 6901 00c9 03       		.uleb128 0x3
 6902 00ca 0E       		.uleb128 0xe
 6903 00cb 3A       		.uleb128 0x3a
 6904 00cc 0B       		.uleb128 0xb
 6905 00cd 3B       		.uleb128 0x3b
 6906 00ce 0B       		.uleb128 0xb
 6907 00cf 49       		.uleb128 0x49
 6908 00d0 13       		.uleb128 0x13
 6909 00d1 11       		.uleb128 0x11
 6910 00d2 01       		.uleb128 0x1
 6911 00d3 12       		.uleb128 0x12
 6912 00d4 06       		.uleb128 0x6
 6913 00d5 40       		.uleb128 0x40
 6914 00d6 18       		.uleb128 0x18
 6915 00d7 9642     		.uleb128 0x2116
 6916 00d9 19       		.uleb128 0x19
 6917 00da 01       		.uleb128 0x1
 6918 00db 13       		.uleb128 0x13
 6919 00dc 00       		.byte	0
 6920 00dd 00       		.byte	0
 6921 00de 10       		.uleb128 0x10
 6922 00df 34       		.uleb128 0x34
 6923 00e0 00       		.byte	0
 6924 00e1 03       		.uleb128 0x3
 6925 00e2 0E       		.uleb128 0xe
 6926 00e3 3A       		.uleb128 0x3a
 6927 00e4 0B       		.uleb128 0xb
 6928 00e5 3B       		.uleb128 0x3b
 6929 00e6 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 143


 6930 00e7 49       		.uleb128 0x49
 6931 00e8 13       		.uleb128 0x13
 6932 00e9 02       		.uleb128 0x2
 6933 00ea 18       		.uleb128 0x18
 6934 00eb 00       		.byte	0
 6935 00ec 00       		.byte	0
 6936 00ed 11       		.uleb128 0x11
 6937 00ee 0B       		.uleb128 0xb
 6938 00ef 01       		.byte	0x1
 6939 00f0 11       		.uleb128 0x11
 6940 00f1 01       		.uleb128 0x1
 6941 00f2 12       		.uleb128 0x12
 6942 00f3 06       		.uleb128 0x6
 6943 00f4 00       		.byte	0
 6944 00f5 00       		.byte	0
 6945 00f6 12       		.uleb128 0x12
 6946 00f7 0B       		.uleb128 0xb
 6947 00f8 01       		.byte	0x1
 6948 00f9 11       		.uleb128 0x11
 6949 00fa 01       		.uleb128 0x1
 6950 00fb 12       		.uleb128 0x12
 6951 00fc 06       		.uleb128 0x6
 6952 00fd 01       		.uleb128 0x1
 6953 00fe 13       		.uleb128 0x13
 6954 00ff 00       		.byte	0
 6955 0100 00       		.byte	0
 6956 0101 13       		.uleb128 0x13
 6957 0102 34       		.uleb128 0x34
 6958 0103 00       		.byte	0
 6959 0104 03       		.uleb128 0x3
 6960 0105 08       		.uleb128 0x8
 6961 0106 3A       		.uleb128 0x3a
 6962 0107 0B       		.uleb128 0xb
 6963 0108 3B       		.uleb128 0x3b
 6964 0109 05       		.uleb128 0x5
 6965 010a 49       		.uleb128 0x49
 6966 010b 13       		.uleb128 0x13
 6967 010c 02       		.uleb128 0x2
 6968 010d 18       		.uleb128 0x18
 6969 010e 00       		.byte	0
 6970 010f 00       		.byte	0
 6971 0110 14       		.uleb128 0x14
 6972 0111 2E       		.uleb128 0x2e
 6973 0112 01       		.byte	0x1
 6974 0113 3F       		.uleb128 0x3f
 6975 0114 19       		.uleb128 0x19
 6976 0115 03       		.uleb128 0x3
 6977 0116 0E       		.uleb128 0xe
 6978 0117 3A       		.uleb128 0x3a
 6979 0118 0B       		.uleb128 0xb
 6980 0119 3B       		.uleb128 0x3b
 6981 011a 05       		.uleb128 0x5
 6982 011b 11       		.uleb128 0x11
 6983 011c 01       		.uleb128 0x1
 6984 011d 12       		.uleb128 0x12
 6985 011e 06       		.uleb128 0x6
 6986 011f 40       		.uleb128 0x40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 144


 6987 0120 18       		.uleb128 0x18
 6988 0121 9742     		.uleb128 0x2117
 6989 0123 19       		.uleb128 0x19
 6990 0124 01       		.uleb128 0x1
 6991 0125 13       		.uleb128 0x13
 6992 0126 00       		.byte	0
 6993 0127 00       		.byte	0
 6994 0128 15       		.uleb128 0x15
 6995 0129 2E       		.uleb128 0x2e
 6996 012a 01       		.byte	0x1
 6997 012b 3F       		.uleb128 0x3f
 6998 012c 19       		.uleb128 0x19
 6999 012d 03       		.uleb128 0x3
 7000 012e 0E       		.uleb128 0xe
 7001 012f 3A       		.uleb128 0x3a
 7002 0130 0B       		.uleb128 0xb
 7003 0131 3B       		.uleb128 0x3b
 7004 0132 05       		.uleb128 0x5
 7005 0133 27       		.uleb128 0x27
 7006 0134 19       		.uleb128 0x19
 7007 0135 11       		.uleb128 0x11
 7008 0136 01       		.uleb128 0x1
 7009 0137 12       		.uleb128 0x12
 7010 0138 06       		.uleb128 0x6
 7011 0139 40       		.uleb128 0x40
 7012 013a 18       		.uleb128 0x18
 7013 013b 9642     		.uleb128 0x2116
 7014 013d 19       		.uleb128 0x19
 7015 013e 01       		.uleb128 0x1
 7016 013f 13       		.uleb128 0x13
 7017 0140 00       		.byte	0
 7018 0141 00       		.byte	0
 7019 0142 16       		.uleb128 0x16
 7020 0143 05       		.uleb128 0x5
 7021 0144 00       		.byte	0
 7022 0145 03       		.uleb128 0x3
 7023 0146 08       		.uleb128 0x8
 7024 0147 3A       		.uleb128 0x3a
 7025 0148 0B       		.uleb128 0xb
 7026 0149 3B       		.uleb128 0x3b
 7027 014a 05       		.uleb128 0x5
 7028 014b 49       		.uleb128 0x49
 7029 014c 13       		.uleb128 0x13
 7030 014d 02       		.uleb128 0x2
 7031 014e 18       		.uleb128 0x18
 7032 014f 00       		.byte	0
 7033 0150 00       		.byte	0
 7034 0151 17       		.uleb128 0x17
 7035 0152 2E       		.uleb128 0x2e
 7036 0153 01       		.byte	0x1
 7037 0154 3F       		.uleb128 0x3f
 7038 0155 19       		.uleb128 0x19
 7039 0156 03       		.uleb128 0x3
 7040 0157 0E       		.uleb128 0xe
 7041 0158 3A       		.uleb128 0x3a
 7042 0159 0B       		.uleb128 0xb
 7043 015a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 145


 7044 015b 05       		.uleb128 0x5
 7045 015c 11       		.uleb128 0x11
 7046 015d 01       		.uleb128 0x1
 7047 015e 12       		.uleb128 0x12
 7048 015f 06       		.uleb128 0x6
 7049 0160 40       		.uleb128 0x40
 7050 0161 18       		.uleb128 0x18
 7051 0162 9642     		.uleb128 0x2116
 7052 0164 19       		.uleb128 0x19
 7053 0165 01       		.uleb128 0x1
 7054 0166 13       		.uleb128 0x13
 7055 0167 00       		.byte	0
 7056 0168 00       		.byte	0
 7057 0169 18       		.uleb128 0x18
 7058 016a 05       		.uleb128 0x5
 7059 016b 00       		.byte	0
 7060 016c 03       		.uleb128 0x3
 7061 016d 0E       		.uleb128 0xe
 7062 016e 3A       		.uleb128 0x3a
 7063 016f 0B       		.uleb128 0xb
 7064 0170 3B       		.uleb128 0x3b
 7065 0171 05       		.uleb128 0x5
 7066 0172 49       		.uleb128 0x49
 7067 0173 13       		.uleb128 0x13
 7068 0174 02       		.uleb128 0x2
 7069 0175 18       		.uleb128 0x18
 7070 0176 00       		.byte	0
 7071 0177 00       		.byte	0
 7072 0178 19       		.uleb128 0x19
 7073 0179 2E       		.uleb128 0x2e
 7074 017a 00       		.byte	0
 7075 017b 3F       		.uleb128 0x3f
 7076 017c 19       		.uleb128 0x19
 7077 017d 03       		.uleb128 0x3
 7078 017e 0E       		.uleb128 0xe
 7079 017f 3A       		.uleb128 0x3a
 7080 0180 0B       		.uleb128 0xb
 7081 0181 3B       		.uleb128 0x3b
 7082 0182 05       		.uleb128 0x5
 7083 0183 11       		.uleb128 0x11
 7084 0184 01       		.uleb128 0x1
 7085 0185 12       		.uleb128 0x12
 7086 0186 06       		.uleb128 0x6
 7087 0187 40       		.uleb128 0x40
 7088 0188 18       		.uleb128 0x18
 7089 0189 9642     		.uleb128 0x2116
 7090 018b 19       		.uleb128 0x19
 7091 018c 00       		.byte	0
 7092 018d 00       		.byte	0
 7093 018e 1A       		.uleb128 0x1a
 7094 018f 2E       		.uleb128 0x2e
 7095 0190 00       		.byte	0
 7096 0191 3F       		.uleb128 0x3f
 7097 0192 19       		.uleb128 0x19
 7098 0193 03       		.uleb128 0x3
 7099 0194 0E       		.uleb128 0xe
 7100 0195 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 146


 7101 0196 0B       		.uleb128 0xb
 7102 0197 3B       		.uleb128 0x3b
 7103 0198 05       		.uleb128 0x5
 7104 0199 11       		.uleb128 0x11
 7105 019a 01       		.uleb128 0x1
 7106 019b 12       		.uleb128 0x12
 7107 019c 06       		.uleb128 0x6
 7108 019d 40       		.uleb128 0x40
 7109 019e 18       		.uleb128 0x18
 7110 019f 9742     		.uleb128 0x2117
 7111 01a1 19       		.uleb128 0x19
 7112 01a2 00       		.byte	0
 7113 01a3 00       		.byte	0
 7114 01a4 1B       		.uleb128 0x1b
 7115 01a5 34       		.uleb128 0x34
 7116 01a6 00       		.byte	0
 7117 01a7 03       		.uleb128 0x3
 7118 01a8 0E       		.uleb128 0xe
 7119 01a9 3A       		.uleb128 0x3a
 7120 01aa 0B       		.uleb128 0xb
 7121 01ab 3B       		.uleb128 0x3b
 7122 01ac 05       		.uleb128 0x5
 7123 01ad 49       		.uleb128 0x49
 7124 01ae 13       		.uleb128 0x13
 7125 01af 3F       		.uleb128 0x3f
 7126 01b0 19       		.uleb128 0x19
 7127 01b1 3C       		.uleb128 0x3c
 7128 01b2 19       		.uleb128 0x19
 7129 01b3 00       		.byte	0
 7130 01b4 00       		.byte	0
 7131 01b5 1C       		.uleb128 0x1c
 7132 01b6 35       		.uleb128 0x35
 7133 01b7 00       		.byte	0
 7134 01b8 49       		.uleb128 0x49
 7135 01b9 13       		.uleb128 0x13
 7136 01ba 00       		.byte	0
 7137 01bb 00       		.byte	0
 7138 01bc 1D       		.uleb128 0x1d
 7139 01bd 34       		.uleb128 0x34
 7140 01be 00       		.byte	0
 7141 01bf 03       		.uleb128 0x3
 7142 01c0 08       		.uleb128 0x8
 7143 01c1 3A       		.uleb128 0x3a
 7144 01c2 0B       		.uleb128 0xb
 7145 01c3 3B       		.uleb128 0x3b
 7146 01c4 0B       		.uleb128 0xb
 7147 01c5 49       		.uleb128 0x49
 7148 01c6 13       		.uleb128 0x13
 7149 01c7 3F       		.uleb128 0x3f
 7150 01c8 19       		.uleb128 0x19
 7151 01c9 02       		.uleb128 0x2
 7152 01ca 18       		.uleb128 0x18
 7153 01cb 00       		.byte	0
 7154 01cc 00       		.byte	0
 7155 01cd 1E       		.uleb128 0x1e
 7156 01ce 34       		.uleb128 0x34
 7157 01cf 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 147


 7158 01d0 03       		.uleb128 0x3
 7159 01d1 0E       		.uleb128 0xe
 7160 01d2 3A       		.uleb128 0x3a
 7161 01d3 0B       		.uleb128 0xb
 7162 01d4 3B       		.uleb128 0x3b
 7163 01d5 0B       		.uleb128 0xb
 7164 01d6 49       		.uleb128 0x49
 7165 01d7 13       		.uleb128 0x13
 7166 01d8 3F       		.uleb128 0x3f
 7167 01d9 19       		.uleb128 0x19
 7168 01da 02       		.uleb128 0x2
 7169 01db 18       		.uleb128 0x18
 7170 01dc 00       		.byte	0
 7171 01dd 00       		.byte	0
 7172 01de 1F       		.uleb128 0x1f
 7173 01df 21       		.uleb128 0x21
 7174 01e0 00       		.byte	0
 7175 01e1 49       		.uleb128 0x49
 7176 01e2 13       		.uleb128 0x13
 7177 01e3 2F       		.uleb128 0x2f
 7178 01e4 05       		.uleb128 0x5
 7179 01e5 00       		.byte	0
 7180 01e6 00       		.byte	0
 7181 01e7 20       		.uleb128 0x20
 7182 01e8 34       		.uleb128 0x34
 7183 01e9 00       		.byte	0
 7184 01ea 03       		.uleb128 0x3
 7185 01eb 0E       		.uleb128 0xe
 7186 01ec 3A       		.uleb128 0x3a
 7187 01ed 0B       		.uleb128 0xb
 7188 01ee 3B       		.uleb128 0x3b
 7189 01ef 05       		.uleb128 0x5
 7190 01f0 49       		.uleb128 0x49
 7191 01f1 13       		.uleb128 0x13
 7192 01f2 3F       		.uleb128 0x3f
 7193 01f3 19       		.uleb128 0x19
 7194 01f4 02       		.uleb128 0x2
 7195 01f5 18       		.uleb128 0x18
 7196 01f6 00       		.byte	0
 7197 01f7 00       		.byte	0
 7198 01f8 00       		.byte	0
 7199              		.section	.debug_aranges,"",%progbits
 7200 0000 6C010000 		.4byte	0x16c
 7201 0004 0200     		.2byte	0x2
 7202 0006 00000000 		.4byte	.Ldebug_info0
 7203 000a 04       		.byte	0x4
 7204 000b 00       		.byte	0
 7205 000c 0000     		.2byte	0
 7206 000e 0000     		.2byte	0
 7207 0010 00000000 		.4byte	.LFB63
 7208 0014 0C000000 		.4byte	.LFE63-.LFB63
 7209 0018 00000000 		.4byte	.LFB64
 7210 001c 2C000000 		.4byte	.LFE64-.LFB64
 7211 0020 00000000 		.4byte	.LFB65
 7212 0024 A4010000 		.4byte	.LFE65-.LFB65
 7213 0028 00000000 		.4byte	.LFB66
 7214 002c AC000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 148


 7215 0030 00000000 		.4byte	.LFB67
 7216 0034 20000000 		.4byte	.LFE67-.LFB67
 7217 0038 00000000 		.4byte	.LFB68
 7218 003c 28000000 		.4byte	.LFE68-.LFB68
 7219 0040 00000000 		.4byte	.LFB69
 7220 0044 0A000000 		.4byte	.LFE69-.LFB69
 7221 0048 00000000 		.4byte	.LFB70
 7222 004c 28000000 		.4byte	.LFE70-.LFB70
 7223 0050 00000000 		.4byte	.LFB71
 7224 0054 50060000 		.4byte	.LFE71-.LFB71
 7225 0058 00000000 		.4byte	.LFB72
 7226 005c 60010000 		.4byte	.LFE72-.LFB72
 7227 0060 00000000 		.4byte	.LFB73
 7228 0064 18000000 		.4byte	.LFE73-.LFB73
 7229 0068 00000000 		.4byte	.LFB74
 7230 006c 18000000 		.4byte	.LFE74-.LFB74
 7231 0070 00000000 		.4byte	.LFB75
 7232 0074 54000000 		.4byte	.LFE75-.LFB75
 7233 0078 00000000 		.4byte	.LFB76
 7234 007c F4000000 		.4byte	.LFE76-.LFB76
 7235 0080 00000000 		.4byte	.LFB77
 7236 0084 18000000 		.4byte	.LFE77-.LFB77
 7237 0088 00000000 		.4byte	.LFB78
 7238 008c 18000000 		.4byte	.LFE78-.LFB78
 7239 0090 00000000 		.4byte	.LFB79
 7240 0094 22000000 		.4byte	.LFE79-.LFB79
 7241 0098 00000000 		.4byte	.LFB80
 7242 009c 1C000000 		.4byte	.LFE80-.LFB80
 7243 00a0 00000000 		.4byte	.LFB81
 7244 00a4 28000000 		.4byte	.LFE81-.LFB81
 7245 00a8 00000000 		.4byte	.LFB82
 7246 00ac 2C000000 		.4byte	.LFE82-.LFB82
 7247 00b0 00000000 		.4byte	.LFB83
 7248 00b4 44000000 		.4byte	.LFE83-.LFB83
 7249 00b8 00000000 		.4byte	.LFB84
 7250 00bc 38000000 		.4byte	.LFE84-.LFB84
 7251 00c0 00000000 		.4byte	.LFB85
 7252 00c4 38000000 		.4byte	.LFE85-.LFB85
 7253 00c8 00000000 		.4byte	.LFB86
 7254 00cc 38000000 		.4byte	.LFE86-.LFB86
 7255 00d0 00000000 		.4byte	.LFB87
 7256 00d4 14000000 		.4byte	.LFE87-.LFB87
 7257 00d8 00000000 		.4byte	.LFB88
 7258 00dc 18000000 		.4byte	.LFE88-.LFB88
 7259 00e0 00000000 		.4byte	.LFB89
 7260 00e4 18000000 		.4byte	.LFE89-.LFB89
 7261 00e8 00000000 		.4byte	.LFB90
 7262 00ec 18000000 		.4byte	.LFE90-.LFB90
 7263 00f0 00000000 		.4byte	.LFB91
 7264 00f4 18000000 		.4byte	.LFE91-.LFB91
 7265 00f8 00000000 		.4byte	.LFB92
 7266 00fc B8000000 		.4byte	.LFE92-.LFB92
 7267 0100 00000000 		.4byte	.LFB93
 7268 0104 34030000 		.4byte	.LFE93-.LFB93
 7269 0108 00000000 		.4byte	.LFB94
 7270 010c 40000000 		.4byte	.LFE94-.LFB94
 7271 0110 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 149


 7272 0114 40000000 		.4byte	.LFE95-.LFB95
 7273 0118 00000000 		.4byte	.LFB96
 7274 011c 30020000 		.4byte	.LFE96-.LFB96
 7275 0120 00000000 		.4byte	.LFB97
 7276 0124 0C000000 		.4byte	.LFE97-.LFB97
 7277 0128 00000000 		.4byte	.LFB98
 7278 012c 4C010000 		.4byte	.LFE98-.LFB98
 7279 0130 00000000 		.4byte	.LFB99
 7280 0134 0C000000 		.4byte	.LFE99-.LFB99
 7281 0138 00000000 		.4byte	.LFB100
 7282 013c C0000000 		.4byte	.LFE100-.LFB100
 7283 0140 00000000 		.4byte	.LFB101
 7284 0144 B8000000 		.4byte	.LFE101-.LFB101
 7285 0148 00000000 		.4byte	.LFB102
 7286 014c 4A000000 		.4byte	.LFE102-.LFB102
 7287 0150 00000000 		.4byte	.LFB103
 7288 0154 68000000 		.4byte	.LFE103-.LFB103
 7289 0158 00000000 		.4byte	.LFB104
 7290 015c 50000000 		.4byte	.LFE104-.LFB104
 7291 0160 00000000 		.4byte	.LFB105
 7292 0164 0C000000 		.4byte	.LFE105-.LFB105
 7293 0168 00000000 		.4byte	0
 7294 016c 00000000 		.4byte	0
 7295              		.section	.debug_ranges,"",%progbits
 7296              	.Ldebug_ranges0:
 7297 0000 00000000 		.4byte	.LFB63
 7298 0004 0C000000 		.4byte	.LFE63
 7299 0008 00000000 		.4byte	.LFB64
 7300 000c 2C000000 		.4byte	.LFE64
 7301 0010 00000000 		.4byte	.LFB65
 7302 0014 A4010000 		.4byte	.LFE65
 7303 0018 00000000 		.4byte	.LFB66
 7304 001c AC000000 		.4byte	.LFE66
 7305 0020 00000000 		.4byte	.LFB67
 7306 0024 20000000 		.4byte	.LFE67
 7307 0028 00000000 		.4byte	.LFB68
 7308 002c 28000000 		.4byte	.LFE68
 7309 0030 00000000 		.4byte	.LFB69
 7310 0034 0A000000 		.4byte	.LFE69
 7311 0038 00000000 		.4byte	.LFB70
 7312 003c 28000000 		.4byte	.LFE70
 7313 0040 00000000 		.4byte	.LFB71
 7314 0044 50060000 		.4byte	.LFE71
 7315 0048 00000000 		.4byte	.LFB72
 7316 004c 60010000 		.4byte	.LFE72
 7317 0050 00000000 		.4byte	.LFB73
 7318 0054 18000000 		.4byte	.LFE73
 7319 0058 00000000 		.4byte	.LFB74
 7320 005c 18000000 		.4byte	.LFE74
 7321 0060 00000000 		.4byte	.LFB75
 7322 0064 54000000 		.4byte	.LFE75
 7323 0068 00000000 		.4byte	.LFB76
 7324 006c F4000000 		.4byte	.LFE76
 7325 0070 00000000 		.4byte	.LFB77
 7326 0074 18000000 		.4byte	.LFE77
 7327 0078 00000000 		.4byte	.LFB78
 7328 007c 18000000 		.4byte	.LFE78
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 150


 7329 0080 00000000 		.4byte	.LFB79
 7330 0084 22000000 		.4byte	.LFE79
 7331 0088 00000000 		.4byte	.LFB80
 7332 008c 1C000000 		.4byte	.LFE80
 7333 0090 00000000 		.4byte	.LFB81
 7334 0094 28000000 		.4byte	.LFE81
 7335 0098 00000000 		.4byte	.LFB82
 7336 009c 2C000000 		.4byte	.LFE82
 7337 00a0 00000000 		.4byte	.LFB83
 7338 00a4 44000000 		.4byte	.LFE83
 7339 00a8 00000000 		.4byte	.LFB84
 7340 00ac 38000000 		.4byte	.LFE84
 7341 00b0 00000000 		.4byte	.LFB85
 7342 00b4 38000000 		.4byte	.LFE85
 7343 00b8 00000000 		.4byte	.LFB86
 7344 00bc 38000000 		.4byte	.LFE86
 7345 00c0 00000000 		.4byte	.LFB87
 7346 00c4 14000000 		.4byte	.LFE87
 7347 00c8 00000000 		.4byte	.LFB88
 7348 00cc 18000000 		.4byte	.LFE88
 7349 00d0 00000000 		.4byte	.LFB89
 7350 00d4 18000000 		.4byte	.LFE89
 7351 00d8 00000000 		.4byte	.LFB90
 7352 00dc 18000000 		.4byte	.LFE90
 7353 00e0 00000000 		.4byte	.LFB91
 7354 00e4 18000000 		.4byte	.LFE91
 7355 00e8 00000000 		.4byte	.LFB92
 7356 00ec B8000000 		.4byte	.LFE92
 7357 00f0 00000000 		.4byte	.LFB93
 7358 00f4 34030000 		.4byte	.LFE93
 7359 00f8 00000000 		.4byte	.LFB94
 7360 00fc 40000000 		.4byte	.LFE94
 7361 0100 00000000 		.4byte	.LFB95
 7362 0104 40000000 		.4byte	.LFE95
 7363 0108 00000000 		.4byte	.LFB96
 7364 010c 30020000 		.4byte	.LFE96
 7365 0110 00000000 		.4byte	.LFB97
 7366 0114 0C000000 		.4byte	.LFE97
 7367 0118 00000000 		.4byte	.LFB98
 7368 011c 4C010000 		.4byte	.LFE98
 7369 0120 00000000 		.4byte	.LFB99
 7370 0124 0C000000 		.4byte	.LFE99
 7371 0128 00000000 		.4byte	.LFB100
 7372 012c C0000000 		.4byte	.LFE100
 7373 0130 00000000 		.4byte	.LFB101
 7374 0134 B8000000 		.4byte	.LFE101
 7375 0138 00000000 		.4byte	.LFB102
 7376 013c 4A000000 		.4byte	.LFE102
 7377 0140 00000000 		.4byte	.LFB103
 7378 0144 68000000 		.4byte	.LFE103
 7379 0148 00000000 		.4byte	.LFB104
 7380 014c 50000000 		.4byte	.LFE104
 7381 0150 00000000 		.4byte	.LFB105
 7382 0154 0C000000 		.4byte	.LFE105
 7383 0158 00000000 		.4byte	0
 7384 015c 00000000 		.4byte	0
 7385              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 151


 7386              	.Ldebug_line0:
 7387 0000 61070000 		.section	.debug_str,"MS",%progbits,1
 7387      02006701 
 7387      00000201 
 7387      FB0E0D00 
 7387      01010101 
 7388              	.LASF141:
 7389 0000 64697265 		.ascii	"direction\000"
 7389      6374696F 
 7389      6E00
 7390              	.LASF189:
 7391 000a 74726163 		.ascii	"tracked_direction\000"
 7391      6B65645F 
 7391      64697265 
 7391      6374696F 
 7391      6E00
 7392              	.LASF197:
 7393 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7393      73657273 
 7393      5C4C6F67 
 7393      616E5C44 
 7393      65736B74 
 7394 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7394      315F436C 
 7394      6173732E 
 7394      63796473 
 7394      6E00
 7395              	.LASF25:
 7396 005b 52545552 		.ascii	"RTURN\000"
 7396      4E00
 7397              	.LASF194:
 7398 0061 72696768 		.ascii	"rightTurnCount\000"
 7398      74547572 
 7398      6E436F75 
 7398      6E7400
 7399              	.LASF39:
 7400 0070 44455354 		.ascii	"DEST_TEST\000"
 7400      5F544553 
 7400      5400
 7401              	.LASF149:
 7402 007a 71756164 		.ascii	"quad_diff1\000"
 7402      5F646966 
 7402      663100
 7403              	.LASF150:
 7404 0085 71756164 		.ascii	"quad_diff2\000"
 7404      5F646966 
 7404      663200
 7405              	.LASF103:
 7406 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7406      5F446563 
 7406      5F726573 
 7406      706F6E73 
 7406      6500
 7407              	.LASF168:
 7408 00a2 70726576 		.ascii	"prevVoltage\000"
 7408      566F6C74 
 7408      61676500 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 152


 7409              	.LASF152:
 7410 00ae 73746172 		.ascii	"start_turn_count\000"
 7410      745F7475 
 7410      726E5F63 
 7410      6F756E74 
 7410      00
 7411              	.LASF10:
 7412 00bf 756E7369 		.ascii	"unsigned int\000"
 7412      676E6564 
 7412      20696E74 
 7412      00
 7413              	.LASF178:
 7414 00cc 74726163 		.ascii	"track_mode\000"
 7414      6B5F6D6F 
 7414      646500
 7415              	.LASF5:
 7416 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7416      7433325F 
 7416      7400
 7417              	.LASF19:
 7418 00e1 696E7431 		.ascii	"int16\000"
 7418      3600
 7419              	.LASF175:
 7420 00e7 73797374 		.ascii	"system_state\000"
 7420      656D5F73 
 7420      74617465 
 7420      00
 7421              	.LASF24:
 7422 00f4 4C545552 		.ascii	"LTURN\000"
 7422      4E00
 7423              	.LASF159:
 7424 00fa 74617267 		.ascii	"target_distance_quad\000"
 7424      65745F64 
 7424      69737461 
 7424      6E63655F 
 7424      71756164 
 7425              	.LASF27:
 7426 010f 54524143 		.ascii	"TRACKING\000"
 7426      4B494E47 
 7426      00
 7427              	.LASF169:
 7428 0118 70726576 		.ascii	"prevVoltage2\000"
 7428      566F6C74 
 7428      61676532 
 7428      00
 7429              	.LASF183:
 7430 0125 73656E73 		.ascii	"sensorsDisabled\000"
 7430      6F727344 
 7430      69736162 
 7430      6C656400 
 7431              	.LASF70:
 7432 0135 7061636B 		.ascii	"packet_bytes\000"
 7432      65745F62 
 7432      79746573 
 7432      00
 7433              	.LASF54:
 7434 0142 67325F78 		.ascii	"g2_xpos\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 153


 7434      706F7300 
 7435              	.LASF32:
 7436 014a 6D6F6465 		.ascii	"mode\000"
 7436      00
 7437              	.LASF145:
 7438 014f 71756164 		.ascii	"quad_count1\000"
 7438      5F636F75 
 7438      6E743100 
 7439              	.LASF146:
 7440 015b 71756164 		.ascii	"quad_count2\000"
 7440      5F636F75 
 7440      6E743200 
 7441              	.LASF112:
 7442 0167 74726163 		.ascii	"trackLineU\000"
 7442      6B4C696E 
 7442      655500
 7443              	.LASF188:
 7444 0172 726F626F 		.ascii	"robot_direction\000"
 7444      745F6469 
 7444      72656374 
 7444      696F6E00 
 7445              	.LASF111:
 7446 0182 74726163 		.ascii	"trackLineZ\000"
 7446      6B4C696E 
 7446      655A00
 7447              	.LASF193:
 7448 018d 6C656674 		.ascii	"leftTurnCount\000"
 7448      5475726E 
 7448      436F756E 
 7448      7400
 7449              	.LASF181:
 7450 019b 73706565 		.ascii	"speed\000"
 7450      6400
 7451              	.LASF36:
 7452 01a1 53515541 		.ascii	"SQUARE_TRACK\000"
 7452      52455F54 
 7452      5241434B 
 7452      00
 7453              	.LASF137:
 7454 01ae 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7454      5F72665F 
 7454      7472616E 
 7454      736D6973 
 7454      73696F6E 
 7455              	.LASF138:
 7456 01ca 666C6167 		.ascii	"flag_print_rf\000"
 7456      5F707269 
 7456      6E745F72 
 7456      6600
 7457              	.LASF177:
 7458 01d8 6D6F7665 		.ascii	"movement_state\000"
 7458      6D656E74 
 7458      5F737461 
 7458      746500
 7459              	.LASF28:
 7460 01e7 54524143 		.ascii	"TRACKING_U\000"
 7460      4B494E47 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 154


 7460      5F5500
 7461              	.LASF93:
 7462 01f2 696E6974 		.ascii	"initForward\000"
 7462      466F7277 
 7462      61726400 
 7463              	.LASF14:
 7464 01fe 75696E74 		.ascii	"uint32_t\000"
 7464      33325F74 
 7464      00
 7465              	.LASF57:
 7466 0207 67325F64 		.ascii	"g2_direction\000"
 7466      69726563 
 7466      74696F6E 
 7466      00
 7467              	.LASF60:
 7468 0214 6973725F 		.ascii	"isr_quad1\000"
 7468      71756164 
 7468      3100
 7469              	.LASF20:
 7470 021e 666C6F61 		.ascii	"float\000"
 7470      7400
 7471              	.LASF78:
 7472 0224 73657453 		.ascii	"setSpeed\000"
 7472      70656564 
 7472      00
 7473              	.LASF173:
 7474 022d 75736242 		.ascii	"usbBuffer\000"
 7474      75666665 
 7474      7200
 7475              	.LASF42:
 7476 0237 696E6465 		.ascii	"index\000"
 7476      7800
 7477              	.LASF23:
 7478 023d 44524956 		.ascii	"DRIVE\000"
 7478      4500
 7479              	.LASF72:
 7480 0243 73747269 		.ascii	"string_packet\000"
 7480      6E675F70 
 7480      61636B65 
 7480      7400
 7481              	.LASF102:
 7482 0251 6368616E 		.ascii	"changeToBT\000"
 7482      6765546F 
 7482      425400
 7483              	.LASF81:
 7484 025c 636F756E 		.ascii	"countsLeft\000"
 7484      74734C65 
 7484      667400
 7485              	.LASF86:
 7486 0267 64726976 		.ascii	"driveForwards\000"
 7486      65466F72 
 7486      77617264 
 7486      7300
 7487              	.LASF88:
 7488 0275 7475726E 		.ascii	"turnLeft\000"
 7488      4C656674 
 7488      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 155


 7489              	.LASF9:
 7490 027e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7490      206C6F6E 
 7490      6720756E 
 7490      7369676E 
 7490      65642069 
 7491              	.LASF134:
 7492 0295 666C6167 		.ascii	"flag_packet\000"
 7492      5F706163 
 7492      6B657400 
 7493              	.LASF67:
 7494 02a1 66726F6E 		.ascii	"frontSensors\000"
 7494      7453656E 
 7494      736F7273 
 7494      00
 7495              	.LASF61:
 7496 02ae 6973725F 		.ascii	"isr_turn_timer\000"
 7496      7475726E 
 7496      5F74696D 
 7496      657200
 7497              	.LASF101:
 7498 02bd 6368616E 		.ascii	"changeToRF\000"
 7498      6765546F 
 7498      524600
 7499              	.LASF90:
 7500 02c8 696E6974 		.ascii	"initTurnLeft\000"
 7500      5475726E 
 7500      4C656674 
 7500      00
 7501              	.LASF167:
 7502 02d5 706F7274 		.ascii	"portOpen\000"
 7502      4F70656E 
 7502      00
 7503              	.LASF94:
 7504 02de 696E6974 		.ascii	"initBrake\000"
 7504      4272616B 
 7504      6500
 7505              	.LASF130:
 7506 02e8 666C6167 		.ascii	"flag_ts_update\000"
 7506      5F74735F 
 7506      75706461 
 7506      746500
 7507              	.LASF114:
 7508 02f7 7363616C 		.ascii	"scalingFactor\000"
 7508      696E6746 
 7508      6163746F 
 7508      7200
 7509              	.LASF104:
 7510 0305 6C656674 		.ascii	"leftSpeed\000"
 7510      53706565 
 7510      6400
 7511              	.LASF129:
 7512 030f 666C6167 		.ascii	"flag_ts_enc\000"
 7512      5F74735F 
 7512      656E6300 
 7513              	.LASF179:
 7514 031b 62797465 		.ascii	"byteCount\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 156


 7514      436F756E 
 7514      7400
 7515              	.LASF66:
 7516 0325 61637469 		.ascii	"actionDebounce\000"
 7516      6F6E4465 
 7516      626F756E 
 7516      636500
 7517              	.LASF63:
 7518 0334 62757474 		.ascii	"button\000"
 7518      6F6E00
 7519              	.LASF176:
 7520 033b 70726576 		.ascii	"prev_movement_state\000"
 7520      5F6D6F76 
 7520      656D656E 
 7520      745F7374 
 7520      61746500 
 7521              	.LASF120:
 7522 034f 73656E73 		.ascii	"sensorVals\000"
 7522      6F725661 
 7522      6C7300
 7523              	.LASF116:
 7524 035a 72657375 		.ascii	"result_str\000"
 7524      6C745F73 
 7524      747200
 7525              	.LASF123:
 7526 0365 75617274 		.ascii	"uart_set_PWM\000"
 7526      5F736574 
 7526      5F50574D 
 7526      00
 7527              	.LASF97:
 7528 0372 696E6974 		.ascii	"inittrackLineZ\000"
 7528      74726163 
 7528      6B4C696E 
 7528      655A00
 7529              	.LASF44:
 7530 0381 726F626F 		.ascii	"robot_ypos\000"
 7530      745F7970 
 7530      6F7300
 7531              	.LASF128:
 7532 038c 74735F64 		.ascii	"ts_display\000"
 7532      6973706C 
 7532      617900
 7533              	.LASF113:
 7534 0397 7072696E 		.ascii	"print_ADC\000"
 7534      745F4144 
 7534      4300
 7535              	.LASF106:
 7536 03a1 7363616C 		.ascii	"scalingLeft\000"
 7536      696E674C 
 7536      65667400 
 7537              	.LASF12:
 7538 03ad 63686172 		.ascii	"char\000"
 7538      00
 7539              	.LASF48:
 7540 03b2 67305F73 		.ascii	"g0_speed\000"
 7540      70656564 
 7540      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 157


 7541              	.LASF156:
 7542 03bb 72696768 		.ascii	"rightSpeedLimit\000"
 7542      74537065 
 7542      65644C69 
 7542      6D697400 
 7543              	.LASF74:
 7544 03cb 7365744C 		.ascii	"setLeftDir\000"
 7544      65667444 
 7544      697200
 7545              	.LASF182:
 7546 03d6 696E7374 		.ascii	"instructionCount\000"
 7546      72756374 
 7546      696F6E43 
 7546      6F756E74 
 7546      00
 7547              	.LASF89:
 7548 03e7 7475726E 		.ascii	"turnU\000"
 7548      5500
 7549              	.LASF55:
 7550 03ed 67325F79 		.ascii	"g2_ypos\000"
 7550      706F7300 
 7551              	.LASF16:
 7552 03f5 75696E74 		.ascii	"uint16\000"
 7552      313600
 7553              	.LASF18:
 7554 03fc 696E7438 		.ascii	"int8\000"
 7554      00
 7555              	.LASF69:
 7556 0401 6E657874 		.ascii	"nextStepDist\000"
 7556      53746570 
 7556      44697374 
 7556      00
 7557              	.LASF53:
 7558 040e 67315F64 		.ascii	"g1_direction\000"
 7558      69726563 
 7558      74696F6E 
 7558      00
 7559              	.LASF185:
 7560 041b 70617468 		.ascii	"path\000"
 7560      00
 7561              	.LASF75:
 7562 0420 73657452 		.ascii	"setRightDir\000"
 7562      69676874 
 7562      44697200 
 7563              	.LASF34:
 7564 042c 43555256 		.ascii	"CURVE_TRACK\000"
 7564      455F5452 
 7564      41434B00 
 7565              	.LASF108:
 7566 0438 696E7465 		.ascii	"interCalc\000"
 7566      7243616C 
 7566      6300
 7567              	.LASF143:
 7568 0442 42545F45 		.ascii	"BT_ENABLED\000"
 7568      4E41424C 
 7568      454400
 7569              	.LASF80:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 158


 7570 044d 72696768 		.ascii	"right\000"
 7570      7400
 7571              	.LASF163:
 7572 0453 696E6974 		.ascii	"initial_pos_valid\000"
 7572      69616C5F 
 7572      706F735F 
 7572      76616C69 
 7572      6400
 7573              	.LASF8:
 7574 0465 6C6F6E67 		.ascii	"long long int\000"
 7574      206C6F6E 
 7574      6720696E 
 7574      7400
 7575              	.LASF174:
 7576 0473 62756666 		.ascii	"buffer_state\000"
 7576      65725F73 
 7576      74617465 
 7576      00
 7577              	.LASF50:
 7578 0480 67315F78 		.ascii	"g1_xpos\000"
 7578      706F7300 
 7579              	.LASF95:
 7580 0488 696E6974 		.ascii	"initTrack\000"
 7580      54726163 
 7580      6B00
 7581              	.LASF68:
 7582 0492 6E657874 		.ascii	"nextStep\000"
 7582      53746570 
 7582      00
 7583              	.LASF195:
 7584 049b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7584      4320342E 
 7584      392E3320 
 7584      32303135 
 7584      30333033 
 7585 04ce 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7585      20726576 
 7585      6973696F 
 7585      6E203232 
 7585      31323230 
 7586 0501 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7586      66756E63 
 7586      74696F6E 
 7586      2D736563 
 7586      74696F6E 
 7587              	.LASF56:
 7588 0529 67325F73 		.ascii	"g2_speed\000"
 7588      70656564 
 7588      00
 7589              	.LASF47:
 7590 0532 67305F79 		.ascii	"g0_ypos\000"
 7590      706F7300 
 7591              	.LASF99:
 7592 053a 72665F63 		.ascii	"rf_char\000"
 7592      68617200 
 7593              	.LASF184:
 7594 0542 666F6F64 		.ascii	"food_list\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 159


 7594      5F6C6973 
 7594      7400
 7595              	.LASF142:
 7596 054c 42494E5F 		.ascii	"BIN_ENABLED\000"
 7596      454E4142 
 7596      4C454400 
 7597              	.LASF105:
 7598 0558 72696768 		.ascii	"rightSpeed\000"
 7598      74537065 
 7598      656400
 7599              	.LASF127:
 7600 0563 74735F73 		.ascii	"ts_speed\000"
 7600      70656564 
 7600      00
 7601              	.LASF17:
 7602 056c 75696E74 		.ascii	"uint32\000"
 7602      333200
 7603              	.LASF191:
 7604 0573 696E7374 		.ascii	"instructions\000"
 7604      72756374 
 7604      696F6E73 
 7604      00
 7605              	.LASF82:
 7606 0580 636F756E 		.ascii	"countsRight\000"
 7606      74735269 
 7606      67687400 
 7607              	.LASF198:
 7608 058c 64617461 		.ascii	"data_main\000"
 7608      5F6D6169 
 7608      6E00
 7609              	.LASF115:
 7610 0596 636F6E76 		.ascii	"converted_val\000"
 7610      65727465 
 7610      645F7661 
 7610      6C00
 7611              	.LASF186:
 7612 05a4 73746172 		.ascii	"start\000"
 7612      7400
 7613              	.LASF41:
 7614 05aa 72737369 		.ascii	"rssi\000"
 7614      00
 7615              	.LASF110:
 7616 05af 74726163 		.ascii	"trackLine\000"
 7616      6B4C696E 
 7616      6500
 7617              	.LASF49:
 7618 05b9 67305F64 		.ascii	"g0_direction\000"
 7618      69726563 
 7618      74696F6E 
 7618      00
 7619              	.LASF139:
 7620 05c6 666C6167 		.ascii	"flag_receive_ADC\000"
 7620      5F726563 
 7620      65697665 
 7620      5F414443 
 7620      00
 7621              	.LASF26:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 160


 7622 05d7 53544F50 		.ascii	"STOPPED\000"
 7622      50454400 
 7623              	.LASF100:
 7624 05df 42545F72 		.ascii	"BT_rxInt\000"
 7624      78496E74 
 7624      00
 7625              	.LASF22:
 7626 05e8 6C6F6E67 		.ascii	"long double\000"
 7626      20646F75 
 7626      626C6500 
 7627              	.LASF64:
 7628 05f4 6973725F 		.ascii	"isr_adcTimer\000"
 7628      61646354 
 7628      696D6572 
 7628      00
 7629              	.LASF153:
 7630 0601 6C656674 		.ascii	"left_duty_cycle\000"
 7630      5F647574 
 7630      795F6379 
 7630      636C6500 
 7631              	.LASF65:
 7632 0611 6973725F 		.ascii	"isr_deadzone\000"
 7632      64656164 
 7632      7A6F6E65 
 7632      00
 7633              	.LASF131:
 7634 061e 666C6167 		.ascii	"flag_ts_speed\000"
 7634      5F74735F 
 7634      73706565 
 7634      6400
 7635              	.LASF136:
 7636 062c 64617461 		.ascii	"dataready_flag\000"
 7636      72656164 
 7636      795F666C 
 7636      616700
 7637              	.LASF165:
 7638 063b 696E6974 		.ascii	"initial_y_pos\000"
 7638      69616C5F 
 7638      795F706F 
 7638      7300
 7639              	.LASF133:
 7640 0649 666C6167 		.ascii	"flag_rx\000"
 7640      5F727800 
 7641              	.LASF2:
 7642 0651 73686F72 		.ascii	"short int\000"
 7642      7420696E 
 7642      7400
 7643              	.LASF140:
 7644 065b 6164635F 		.ascii	"adc_result\000"
 7644      72657375 
 7644      6C7400
 7645              	.LASF92:
 7646 0666 696E6974 		.ascii	"initTurnU\000"
 7646      5475726E 
 7646      5500
 7647              	.LASF144:
 7648 0670 666C6167 		.ascii	"flag_calc_wheelspeed\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 161


 7648      5F63616C 
 7648      635F7768 
 7648      65656C73 
 7648      70656564 
 7649              	.LASF4:
 7650 0685 6C6F6E67 		.ascii	"long int\000"
 7650      20696E74 
 7650      00
 7651              	.LASF91:
 7652 068e 696E6974 		.ascii	"initTurnRight\000"
 7652      5475726E 
 7652      52696768 
 7652      7400
 7653              	.LASF35:
 7654 069c 555F5452 		.ascii	"U_TRACK\000"
 7654      41434B00 
 7655              	.LASF124:
 7656 06a4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7656      52784275 
 7656      66666572 
 7656      00
 7657              	.LASF118:
 7658 06b1 7072696E 		.ascii	"printString\000"
 7658      74537472 
 7658      696E6700 
 7659              	.LASF98:
 7660 06bd 7278496E 		.ascii	"rxInt\000"
 7660      7400
 7661              	.LASF126:
 7662 06c3 74735F75 		.ascii	"ts_update\000"
 7662      70646174 
 7662      6500
 7663              	.LASF33:
 7664 06cd 4E4F5F54 		.ascii	"NO_TRACK\000"
 7664      5241434B 
 7664      00
 7665              	.LASF151:
 7666 06d6 64656164 		.ascii	"deadzone\000"
 7666      7A6F6E65 
 7666      00
 7667              	.LASF155:
 7668 06df 6C656674 		.ascii	"leftSpeedLimit\000"
 7668      53706565 
 7668      644C696D 
 7668      697400
 7669              	.LASF40:
 7670 06ee 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7670      54524156 
 7670      45525345 
 7670      00
 7671              	.LASF29:
 7672 06fb 54524143 		.ascii	"TRACKING_SOFT\000"
 7672      4B494E47 
 7672      5F534F46 
 7672      5400
 7673              	.LASF161:
 7674 0709 6F766572 		.ascii	"overshot_target\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 162


 7674      73686F74 
 7674      5F746172 
 7674      67657400 
 7675              	.LASF79:
 7676 0719 6C656674 		.ascii	"left\000"
 7676      00
 7677              	.LASF158:
 7678 071e 61636375 		.ascii	"accum_dist\000"
 7678      6D5F6469 
 7678      737400
 7679              	.LASF121:
 7680 0729 75736250 		.ascii	"usbPutString\000"
 7680      75745374 
 7680      72696E67 
 7680      00
 7681              	.LASF87:
 7682 0736 7475726E 		.ascii	"turnRight\000"
 7682      52696768 
 7682      7400
 7683              	.LASF51:
 7684 0740 67315F79 		.ascii	"g1_ypos\000"
 7684      706F7300 
 7685              	.LASF59:
 7686 0748 6164635F 		.ascii	"adc_isr\000"
 7686      69737200 
 7687              	.LASF119:
 7688 0750 72656164 		.ascii	"readFrontSensors\000"
 7688      46726F6E 
 7688      7453656E 
 7688      736F7273 
 7688      00
 7689              	.LASF162:
 7690 0761 71756164 		.ascii	"quad_per_cm\000"
 7690      5F706572 
 7690      5F636D00 
 7691              	.LASF157:
 7692 076d 74617267 		.ascii	"target_distance_cm\000"
 7692      65745F64 
 7692      69737461 
 7692      6E63655F 
 7692      636D00
 7693              	.LASF11:
 7694 0780 73697A65 		.ascii	"sizetype\000"
 7694      74797065 
 7694      00
 7695              	.LASF7:
 7696 0789 6C6F6E67 		.ascii	"long unsigned int\000"
 7696      20756E73 
 7696      69676E65 
 7696      6420696E 
 7696      7400
 7697              	.LASF71:
 7698 079b 62797465 		.ascii	"byte_packet\000"
 7698      5F706163 
 7698      6B657400 
 7699              	.LASF13:
 7700 07a7 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 163


 7700      325F7400 
 7701              	.LASF180:
 7702 07af 7061636B 		.ascii	"packet\000"
 7702      657400
 7703              	.LASF192:
 7704 07b6 696E7374 		.ascii	"instructionLength\000"
 7704      72756374 
 7704      696F6E4C 
 7704      656E6774 
 7704      6800
 7705              	.LASF43:
 7706 07c8 726F626F 		.ascii	"robot_xpos\000"
 7706      745F7870 
 7706      6F7300
 7707              	.LASF85:
 7708 07d3 6272616B 		.ascii	"brakeMotor\000"
 7708      654D6F74 
 7708      6F7200
 7709              	.LASF190:
 7710 07de 666F6F64 		.ascii	"food_length\000"
 7710      5F6C656E 
 7710      67746800 
 7711              	.LASF172:
 7712 07ea 656E7472 		.ascii	"entry\000"
 7712      7900
 7713              	.LASF1:
 7714 07f0 756E7369 		.ascii	"unsigned char\000"
 7714      676E6564 
 7714      20636861 
 7714      7200
 7715              	.LASF6:
 7716 07fe 5F5F7569 		.ascii	"__uint32_t\000"
 7716      6E743332 
 7716      5F7400
 7717              	.LASF171:
 7718 0809 6C696E65 		.ascii	"line\000"
 7718      00
 7719              	.LASF160:
 7720 080e 72656163 		.ascii	"reached_target\000"
 7720      6865645F 
 7720      74617267 
 7720      657400
 7721              	.LASF62:
 7722 081d 53746F70 		.ascii	"Stop_on_line\000"
 7722      5F6F6E5F 
 7722      6C696E65 
 7722      00
 7723              	.LASF125:
 7724 082a 74735F65 		.ascii	"ts_enc\000"
 7724      6E6300
 7725              	.LASF166:
 7726 0831 6272616B 		.ascii	"brakeFlag\000"
 7726      65466C61 
 7726      6700
 7727              	.LASF132:
 7728 083b 666C6167 		.ascii	"flag_ts_display\000"
 7728      5F74735F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 164


 7728      64697370 
 7728      6C617900 
 7729              	.LASF31:
 7730 084b 73746174 		.ascii	"state\000"
 7730      6500
 7731              	.LASF77:
 7732 0851 72657665 		.ascii	"reverseDirection\000"
 7732      72736544 
 7732      69726563 
 7732      74696F6E 
 7732      00
 7733              	.LASF83:
 7734 0862 6272616B 		.ascii	"brakeLeft\000"
 7734      654C6566 
 7734      7400
 7735              	.LASF170:
 7736 086c 64697370 		.ascii	"displaystring\000"
 7736      6C617973 
 7736      7472696E 
 7736      6700
 7737              	.LASF147:
 7738 087a 6C617374 		.ascii	"last_quad_count1\000"
 7738      5F717561 
 7738      645F636F 
 7738      756E7431 
 7738      00
 7739              	.LASF148:
 7740 088b 6C617374 		.ascii	"last_quad_count2\000"
 7740      5F717561 
 7740      645F636F 
 7740      756E7432 
 7740      00
 7741              	.LASF187:
 7742 089c 64657374 		.ascii	"destination\000"
 7742      696E6174 
 7742      696F6E00 
 7743              	.LASF122:
 7744 08a8 75736250 		.ascii	"usbPutChar\000"
 7744      75744368 
 7744      617200
 7745              	.LASF0:
 7746 08b3 7369676E 		.ascii	"signed char\000"
 7746      65642063 
 7746      68617200 
 7747              	.LASF3:
 7748 08bf 73686F72 		.ascii	"short unsigned int\000"
 7748      7420756E 
 7748      7369676E 
 7748      65642069 
 7748      6E7400
 7749              	.LASF45:
 7750 08d2 726F626F 		.ascii	"robot_orientation\000"
 7750      745F6F72 
 7750      69656E74 
 7750      6174696F 
 7750      6E00
 7751              	.LASF37:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 165


 7752 08e4 51554144 		.ascii	"QUAD_STOP\000"
 7752      5F53544F 
 7752      5000
 7753              	.LASF73:
 7754 08ee 6D61696E 		.ascii	"main\000"
 7754      00
 7755              	.LASF58:
 7756 08f3 42545F74 		.ascii	"BT_txInt\000"
 7756      78496E74 
 7756      00
 7757              	.LASF109:
 7758 08fc 6E657874 		.ascii	"nextSpeed\000"
 7758      53706565 
 7758      6400
 7759              	.LASF15:
 7760 0906 75696E74 		.ascii	"uint8\000"
 7760      3800
 7761              	.LASF21:
 7762 090c 646F7562 		.ascii	"double\000"
 7762      6C6500
 7763              	.LASF154:
 7764 0913 72696768 		.ascii	"right_duty_cycle\000"
 7764      745F6475 
 7764      74795F63 
 7764      79636C65 
 7764      00
 7765              	.LASF38:
 7766 0924 52465F53 		.ascii	"RF_STOP\000"
 7766      544F5000 
 7767              	.LASF76:
 7768 092c 68616E64 		.ascii	"handle_rx_binary\000"
 7768      6C655F72 
 7768      785F6269 
 7768      6E617279 
 7768      00
 7769              	.LASF117:
 7770 093d 7072696E 		.ascii	"print_RF\000"
 7770      745F5246 
 7770      00
 7771              	.LASF30:
 7772 0946 55545552 		.ascii	"UTURN\000"
 7772      4E00
 7773              	.LASF46:
 7774 094c 67305F78 		.ascii	"g0_xpos\000"
 7774      706F7300 
 7775              	.LASF107:
 7776 0954 7363616C 		.ascii	"scalingRight\000"
 7776      696E6752 
 7776      69676874 
 7776      00
 7777              	.LASF135:
 7778 0961 666C6167 		.ascii	"flag_KB_string\000"
 7778      5F4B425F 
 7778      73747269 
 7778      6E6700
 7779              	.LASF52:
 7780 0970 67315F73 		.ascii	"g1_speed\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc0qYiik.s 			page 166


 7780      70656564 
 7780      00
 7781              	.LASF196:
 7782 0979 2E5C6D61 		.ascii	".\\main.c\000"
 7782      696E2E63 
 7782      00
 7783              	.LASF164:
 7784 0982 696E6974 		.ascii	"initial_x_pos\000"
 7784      69616C5F 
 7784      785F706F 
 7784      7300
 7785              	.LASF84:
 7786 0990 6272616B 		.ascii	"brakeRight\000"
 7786      65526967 
 7786      687400
 7787              	.LASF96:
 7788 099b 696E6974 		.ascii	"initTrackU\000"
 7788      54726163 
 7788      6B5500
 7789              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
