ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	leftOn,1,1
 263              		.comm	rightOn,1,1
 264              		.comm	prevVoltage,2,2
 265              		.comm	prevVoltage2,2,2
 266              		.global	displaystring
 267 0009 000000   		.align	2
 268              		.type	displaystring, %object
 269              		.size	displaystring, 64
 270              	displaystring:
 271 000c 43533330 		.ascii	"CS301 2016\012\000"
 271      31203230 
 271      31360A00 
 272 0018 00000000 		.space	52
 272      00000000 
 272      00000000 
 272      00000000 
 272      00000000 
 273              		.comm	line,64,4
 274              		.comm	entry,64,4
 275              		.comm	usbBuffer,64,4
 276              		.comm	buffer_state,32,4
 277              		.comm	system_state,32,4
 278              		.global	prev_movement_state
 279              		.type	prev_movement_state, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 6


 280              		.size	prev_movement_state, 1
 281              	prev_movement_state:
 282 004c 03       		.byte	3
 283              		.global	movement_state
 284              		.type	movement_state, %object
 285              		.size	movement_state, 1
 286              	movement_state:
 287 004d 03       		.byte	3
 288              		.global	track_mode
 289              		.bss
 290              		.type	track_mode, %object
 291              		.size	track_mode, 1
 292              	track_mode:
 293 003c 00       		.space	1
 294              		.global	byteCount
 295              		.type	byteCount, %object
 296              		.size	byteCount, 1
 297              	byteCount:
 298 003d 00       		.space	1
 299              		.comm	packet,2,4
 300              		.global	speed
 301              		.data
 302 004e 0000     		.align	3
 303              		.type	speed, %object
 304              		.size	speed, 8
 305              	speed:
 306 0050 00000000 		.word	0
 307 0054 00002E40 		.word	1076756480
 308              		.comm	tracked_direction,4,4
 309              		.global	instructions
 310              		.bss
 311 003e 0000     		.align	2
 312              		.type	instructions, %object
 313              		.size	instructions, 800
 314              	instructions:
 315 0040 00000000 		.space	800
 315      00000000 
 315      00000000 
 315      00000000 
 315      00000000 
 316              		.global	instructionCount
 317              		.align	1
 318              		.type	instructionCount, %object
 319              		.size	instructionCount, 2
 320              	instructionCount:
 321 0360 0000     		.space	2
 322              		.global	instructionLength
 323              		.align	1
 324              		.type	instructionLength, %object
 325              		.size	instructionLength, 2
 326              	instructionLength:
 327 0362 0000     		.space	2
 328              		.global	sensorsDisabled
 329              		.align	2
 330              		.type	sensorsDisabled, %object
 331              		.size	sensorsDisabled, 4
 332              	sensorsDisabled:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 7


 333 0364 00000000 		.space	4
 334              		.global	robot_direction
 335              		.data
 336              		.align	2
 337              		.type	robot_direction, %object
 338              		.size	robot_direction, 4
 339              	robot_direction:
 340 0058 02000000 		.word	2
 341              		.global	path
 342              		.bss
 343              		.align	2
 344              		.type	path, %object
 345              		.size	path, 9600
 346              	path:
 347 0368 00000000 		.space	9600
 347      00000000 
 347      00000000 
 347      00000000 
 347      00000000 
 348              		.global	start
 349              		.data
 350              		.align	2
 351              		.type	start, %object
 352              		.size	start, 8
 353              	start:
 354 005c 01000000 		.word	1
 355 0060 01000000 		.word	1
 356              		.global	destination
 357              		.align	2
 358              		.type	destination, %object
 359              		.size	destination, 8
 360              	destination:
 361 0064 0E000000 		.word	14
 362 0068 12000000 		.word	18
 363              		.global	map
 364              		.align	2
 365              		.type	map, %object
 366              		.size	map, 1140
 367              	map:
 368 006c 01000000 		.word	1
 369 0070 01000000 		.word	1
 370 0074 01000000 		.word	1
 371 0078 01000000 		.word	1
 372 007c 01000000 		.word	1
 373 0080 01000000 		.word	1
 374 0084 01000000 		.word	1
 375 0088 01000000 		.word	1
 376 008c 01000000 		.word	1
 377 0090 01000000 		.word	1
 378 0094 01000000 		.word	1
 379 0098 01000000 		.word	1
 380 009c 01000000 		.word	1
 381 00a0 01000000 		.word	1
 382 00a4 01000000 		.word	1
 383 00a8 01000000 		.word	1
 384 00ac 01000000 		.word	1
 385 00b0 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 8


 386 00b4 01000000 		.word	1
 387 00b8 01000000 		.word	1
 388 00bc 00000000 		.word	0
 389 00c0 00000000 		.word	0
 390 00c4 00000000 		.word	0
 391 00c8 00000000 		.word	0
 392 00cc 00000000 		.word	0
 393 00d0 00000000 		.word	0
 394 00d4 00000000 		.word	0
 395 00d8 00000000 		.word	0
 396 00dc 00000000 		.word	0
 397 00e0 00000000 		.word	0
 398 00e4 00000000 		.word	0
 399 00e8 00000000 		.word	0
 400 00ec 00000000 		.word	0
 401 00f0 00000000 		.word	0
 402 00f4 00000000 		.word	0
 403 00f8 00000000 		.word	0
 404 00fc 00000000 		.word	0
 405 0100 01000000 		.word	1
 406 0104 01000000 		.word	1
 407 0108 01000000 		.word	1
 408 010c 00000000 		.word	0
 409 0110 01000000 		.word	1
 410 0114 01000000 		.word	1
 411 0118 01000000 		.word	1
 412 011c 01000000 		.word	1
 413 0120 01000000 		.word	1
 414 0124 01000000 		.word	1
 415 0128 01000000 		.word	1
 416 012c 01000000 		.word	1
 417 0130 01000000 		.word	1
 418 0134 01000000 		.word	1
 419 0138 00000000 		.word	0
 420 013c 01000000 		.word	1
 421 0140 01000000 		.word	1
 422 0144 00000000 		.word	0
 423 0148 01000000 		.word	1
 424 014c 01000000 		.word	1
 425 0150 01000000 		.word	1
 426 0154 01000000 		.word	1
 427 0158 00000000 		.word	0
 428 015c 01000000 		.word	1
 429 0160 00000000 		.word	0
 430 0164 00000000 		.word	0
 431 0168 00000000 		.word	0
 432 016c 00000000 		.word	0
 433 0170 01000000 		.word	1
 434 0174 01000000 		.word	1
 435 0178 00000000 		.word	0
 436 017c 00000000 		.word	0
 437 0180 00000000 		.word	0
 438 0184 00000000 		.word	0
 439 0188 01000000 		.word	1
 440 018c 01000000 		.word	1
 441 0190 00000000 		.word	0
 442 0194 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 9


 443 0198 01000000 		.word	1
 444 019c 01000000 		.word	1
 445 01a0 01000000 		.word	1
 446 01a4 00000000 		.word	0
 447 01a8 01000000 		.word	1
 448 01ac 00000000 		.word	0
 449 01b0 01000000 		.word	1
 450 01b4 01000000 		.word	1
 451 01b8 00000000 		.word	0
 452 01bc 01000000 		.word	1
 453 01c0 01000000 		.word	1
 454 01c4 01000000 		.word	1
 455 01c8 01000000 		.word	1
 456 01cc 01000000 		.word	1
 457 01d0 00000000 		.word	0
 458 01d4 01000000 		.word	1
 459 01d8 01000000 		.word	1
 460 01dc 00000000 		.word	0
 461 01e0 01000000 		.word	1
 462 01e4 01000000 		.word	1
 463 01e8 01000000 		.word	1
 464 01ec 01000000 		.word	1
 465 01f0 00000000 		.word	0
 466 01f4 01000000 		.word	1
 467 01f8 00000000 		.word	0
 468 01fc 01000000 		.word	1
 469 0200 01000000 		.word	1
 470 0204 00000000 		.word	0
 471 0208 00000000 		.word	0
 472 020c 00000000 		.word	0
 473 0210 00000000 		.word	0
 474 0214 00000000 		.word	0
 475 0218 00000000 		.word	0
 476 021c 00000000 		.word	0
 477 0220 01000000 		.word	1
 478 0224 01000000 		.word	1
 479 0228 00000000 		.word	0
 480 022c 01000000 		.word	1
 481 0230 01000000 		.word	1
 482 0234 01000000 		.word	1
 483 0238 01000000 		.word	1
 484 023c 00000000 		.word	0
 485 0240 00000000 		.word	0
 486 0244 00000000 		.word	0
 487 0248 00000000 		.word	0
 488 024c 00000000 		.word	0
 489 0250 00000000 		.word	0
 490 0254 01000000 		.word	1
 491 0258 01000000 		.word	1
 492 025c 01000000 		.word	1
 493 0260 01000000 		.word	1
 494 0264 01000000 		.word	1
 495 0268 00000000 		.word	0
 496 026c 01000000 		.word	1
 497 0270 01000000 		.word	1
 498 0274 00000000 		.word	0
 499 0278 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 10


 500 027c 01000000 		.word	1
 501 0280 01000000 		.word	1
 502 0284 01000000 		.word	1
 503 0288 01000000 		.word	1
 504 028c 01000000 		.word	1
 505 0290 01000000 		.word	1
 506 0294 01000000 		.word	1
 507 0298 01000000 		.word	1
 508 029c 00000000 		.word	0
 509 02a0 01000000 		.word	1
 510 02a4 01000000 		.word	1
 511 02a8 01000000 		.word	1
 512 02ac 00000000 		.word	0
 513 02b0 00000000 		.word	0
 514 02b4 00000000 		.word	0
 515 02b8 01000000 		.word	1
 516 02bc 01000000 		.word	1
 517 02c0 00000000 		.word	0
 518 02c4 01000000 		.word	1
 519 02c8 01000000 		.word	1
 520 02cc 01000000 		.word	1
 521 02d0 01000000 		.word	1
 522 02d4 00000000 		.word	0
 523 02d8 00000000 		.word	0
 524 02dc 00000000 		.word	0
 525 02e0 00000000 		.word	0
 526 02e4 00000000 		.word	0
 527 02e8 00000000 		.word	0
 528 02ec 01000000 		.word	1
 529 02f0 01000000 		.word	1
 530 02f4 01000000 		.word	1
 531 02f8 00000000 		.word	0
 532 02fc 01000000 		.word	1
 533 0300 00000000 		.word	0
 534 0304 01000000 		.word	1
 535 0308 01000000 		.word	1
 536 030c 00000000 		.word	0
 537 0310 01000000 		.word	1
 538 0314 01000000 		.word	1
 539 0318 01000000 		.word	1
 540 031c 01000000 		.word	1
 541 0320 00000000 		.word	0
 542 0324 01000000 		.word	1
 543 0328 00000000 		.word	0
 544 032c 01000000 		.word	1
 545 0330 01000000 		.word	1
 546 0334 00000000 		.word	0
 547 0338 01000000 		.word	1
 548 033c 01000000 		.word	1
 549 0340 01000000 		.word	1
 550 0344 00000000 		.word	0
 551 0348 01000000 		.word	1
 552 034c 00000000 		.word	0
 553 0350 01000000 		.word	1
 554 0354 01000000 		.word	1
 555 0358 00000000 		.word	0
 556 035c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 11


 557 0360 01000000 		.word	1
 558 0364 01000000 		.word	1
 559 0368 01000000 		.word	1
 560 036c 00000000 		.word	0
 561 0370 01000000 		.word	1
 562 0374 00000000 		.word	0
 563 0378 01000000 		.word	1
 564 037c 01000000 		.word	1
 565 0380 00000000 		.word	0
 566 0384 01000000 		.word	1
 567 0388 01000000 		.word	1
 568 038c 01000000 		.word	1
 569 0390 00000000 		.word	0
 570 0394 01000000 		.word	1
 571 0398 00000000 		.word	0
 572 039c 01000000 		.word	1
 573 03a0 01000000 		.word	1
 574 03a4 00000000 		.word	0
 575 03a8 01000000 		.word	1
 576 03ac 01000000 		.word	1
 577 03b0 01000000 		.word	1
 578 03b4 01000000 		.word	1
 579 03b8 00000000 		.word	0
 580 03bc 01000000 		.word	1
 581 03c0 00000000 		.word	0
 582 03c4 00000000 		.word	0
 583 03c8 00000000 		.word	0
 584 03cc 00000000 		.word	0
 585 03d0 00000000 		.word	0
 586 03d4 00000000 		.word	0
 587 03d8 00000000 		.word	0
 588 03dc 00000000 		.word	0
 589 03e0 01000000 		.word	1
 590 03e4 00000000 		.word	0
 591 03e8 00000000 		.word	0
 592 03ec 00000000 		.word	0
 593 03f0 00000000 		.word	0
 594 03f4 01000000 		.word	1
 595 03f8 01000000 		.word	1
 596 03fc 01000000 		.word	1
 597 0400 01000000 		.word	1
 598 0404 00000000 		.word	0
 599 0408 01000000 		.word	1
 600 040c 01000000 		.word	1
 601 0410 01000000 		.word	1
 602 0414 01000000 		.word	1
 603 0418 01000000 		.word	1
 604 041c 01000000 		.word	1
 605 0420 01000000 		.word	1
 606 0424 01000000 		.word	1
 607 0428 01000000 		.word	1
 608 042c 01000000 		.word	1
 609 0430 00000000 		.word	0
 610 0434 01000000 		.word	1
 611 0438 01000000 		.word	1
 612 043c 00000000 		.word	0
 613 0440 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 12


 614 0444 01000000 		.word	1
 615 0448 01000000 		.word	1
 616 044c 00000000 		.word	0
 617 0450 00000000 		.word	0
 618 0454 00000000 		.word	0
 619 0458 00000000 		.word	0
 620 045c 00000000 		.word	0
 621 0460 00000000 		.word	0
 622 0464 00000000 		.word	0
 623 0468 00000000 		.word	0
 624 046c 00000000 		.word	0
 625 0470 00000000 		.word	0
 626 0474 00000000 		.word	0
 627 0478 00000000 		.word	0
 628 047c 00000000 		.word	0
 629 0480 00000000 		.word	0
 630 0484 00000000 		.word	0
 631 0488 00000000 		.word	0
 632 048c 00000000 		.word	0
 633 0490 01000000 		.word	1
 634 0494 01000000 		.word	1
 635 0498 01000000 		.word	1
 636 049c 01000000 		.word	1
 637 04a0 01000000 		.word	1
 638 04a4 01000000 		.word	1
 639 04a8 01000000 		.word	1
 640 04ac 01000000 		.word	1
 641 04b0 01000000 		.word	1
 642 04b4 01000000 		.word	1
 643 04b8 01000000 		.word	1
 644 04bc 01000000 		.word	1
 645 04c0 01000000 		.word	1
 646 04c4 01000000 		.word	1
 647 04c8 01000000 		.word	1
 648 04cc 01000000 		.word	1
 649 04d0 01000000 		.word	1
 650 04d4 01000000 		.word	1
 651 04d8 01000000 		.word	1
 652 04dc 01000000 		.word	1
 653              		.global	food_list
 654              		.align	2
 655              		.type	food_list, %object
 656              		.size	food_list, 48
 657              	food_list:
 658 04e0 03000000 		.word	3
 659 04e4 06000000 		.word	6
 660 04e8 05000000 		.word	5
 661 04ec 0A000000 		.word	10
 662 04f0 0D000000 		.word	13
 663 04f4 09000000 		.word	9
 664 04f8 0D000000 		.word	13
 665 04fc 10000000 		.word	16
 666 0500 01000000 		.word	1
 667 0504 11000000 		.word	17
 668 0508 00000000 		.space	8
 668      00000000 
 669              		.global	food_length
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 13


 670              		.align	2
 671              		.type	food_length, %object
 672              		.size	food_length, 4
 673              	food_length:
 674 0510 05000000 		.word	5
 675 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 676              		.align	2
 677              		.global	BT_txInt
 678              		.thumb
 679              		.thumb_func
 680              		.type	BT_txInt, %function
 681              	BT_txInt:
 682              	.LFB63:
 683              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 138
  29:.\main.c      **** #define U_OFFSET 120
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 144
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t robot_direction = 2;
  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 14


  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {14, 18};//(y, x) DON'T HARDCODE THIS
  46:.\main.c      **** 
  47:.\main.c      **** // map default
  48:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      **** //                    {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      **** //                    {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      **** //                    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      **** //                    {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      **** //                    {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      **** //                    {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      **** //                    {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      **** //                    {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      **** //                    {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      **** //                    {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      **** //                    {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      **** //                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //practice map 1
  65:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  66:.\main.c      **** ////practice map 2
  67:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  68:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  69:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  70:.\main.c      ****                         {1,1,0,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1},
  71:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1},
  72:.\main.c      ****                         {1,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1},
  73:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1},
  74:.\main.c      ****                         {1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,0,1,1},
  75:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1},
  76:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  77:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  78:.\main.c      ****                         {1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1},
  79:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  80:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  81:.\main.c      ****                         {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  82:.\main.c      **** 
  83:.\main.c      **** //practice map 3
  84:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  85:.\main.c      **** 
  86:.\main.c      **** //first number is the y coord, second is x
  87:.\main.c      **** //first number is row, second column
  88:.\main.c      **** 
  89:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};//???
  90:.\main.c      **** //uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}}; //???
  91:.\main.c      **** //uint32_t food_list[6][2] ={ //default
  92:.\main.c      **** //{5, 7},
  93:.\main.c      **** //{5, 17},
  94:.\main.c      **** //{12, 13},
  95:.\main.c      **** //{5, 17},
  96:.\main.c      **** //{9, 3}
  97:.\main.c      **** //};
  98:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}}; //practice map 1
  99:.\main.c      **** //practice map 2
 100:.\main.c      **** uint32_t food_list[6][2]= {{3,6},{5,10},{13,9},{13,16},{1,17}};
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 15


 101:.\main.c      **** 
 102:.\main.c      **** //practice map 3
 103:.\main.c      **** //uint32_t food_list[6][2]= {{16,11},{3,12},{3,5},{9,7},{5,9}};
 104:.\main.c      **** 
 105:.\main.c      **** uint32_t food_length = 5;
 106:.\main.c      **** 
 107:.\main.c      **** void changeToRF();
 108:.\main.c      **** void changeToBT();
 109:.\main.c      **** void brakeMotor();
 110:.\main.c      **** void driveForwards();
 111:.\main.c      **** void initTurnLeft();
 112:.\main.c      **** void initTurnRight();
 113:.\main.c      **** void inittrackLineZ();
 114:.\main.c      **** void trackLineU();
 115:.\main.c      **** void trackLine();
 116:.\main.c      **** void trackLineZ();
 117:.\main.c      **** void initTrackU();
 118:.\main.c      **** void turnLeft();
 119:.\main.c      **** void turnRight();
 120:.\main.c      **** void initForward();
 121:.\main.c      **** void initTurnU();
 122:.\main.c      **** void turnU();
 123:.\main.c      **** void initBrake();
 124:.\main.c      **** void print_ADC();
 125:.\main.c      **** void Quad_Dec_response();
 126:.\main.c      **** void handle_rx_binary();
 127:.\main.c      **** void readFrontSensors();
 128:.\main.c      **** void print_RF();
 129:.\main.c      **** 
 130:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
 131:.\main.c      **** //BT
 132:.\main.c      **** CY_ISR(BT_txInt)
 133:.\main.c      **** {
 684              		.loc 1 133 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689 0000 80B4     		push	{r7}
 690              		.cfi_def_cfa_offset 4
 691              		.cfi_offset 7, -4
 692 0002 00AF     		add	r7, sp, #0
 693              		.cfi_def_cfa_register 7
 134:.\main.c      ****     
 135:.\main.c      **** }
 694              		.loc 1 135 0
 695 0004 BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 0006 5DF8047B 		ldr	r7, [sp], #4
 699              		.cfi_restore 7
 700              		.cfi_def_cfa_offset 0
 701 000a 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE63:
 704              		.size	BT_txInt, .-BT_txInt
 705              		.section	.text.adc_isr,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 16


 706              		.align	2
 707              		.global	adc_isr
 708              		.thumb
 709              		.thumb_func
 710              		.type	adc_isr, %function
 711              	adc_isr:
 712              	.LFB64:
 136:.\main.c      **** 
 137:.\main.c      **** //ADC:
 138:.\main.c      **** CY_ISR (adc_isr)
 139:.\main.c      **** {
 713              		.loc 1 139 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 140:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 141:.\main.c      ****     adc_result = ADC_GetResult16();
 723              		.loc 1 141 0
 724 0004 FFF7FEFF 		bl	ADC_GetResult16
 725 0008 0346     		mov	r3, r0
 726 000a 1A46     		mov	r2, r3
 727 000c 044B     		ldr	r3, .L3
 728 000e 1A80     		strh	r2, [r3]	@ movhi
 142:.\main.c      ****     flag_receive_ADC = 1;
 729              		.loc 1 142 0
 730 0010 044B     		ldr	r3, .L3+4
 731 0012 0122     		movs	r2, #1
 732 0014 1A70     		strb	r2, [r3]
 143:.\main.c      ****     flag_print_rf = 1;
 733              		.loc 1 143 0
 734 0016 044B     		ldr	r3, .L3+8
 735 0018 0122     		movs	r2, #1
 736 001a 1A70     		strb	r2, [r3]
 144:.\main.c      ****     //LED_Write(~LED_Read());
 145:.\main.c      **** }
 737              		.loc 1 145 0
 738 001c 80BD     		pop	{r7, pc}
 739              	.L4:
 740 001e 00BF     		.align	2
 741              	.L3:
 742 0020 00000000 		.word	adc_result
 743 0024 00000000 		.word	flag_receive_ADC
 744 0028 00000000 		.word	flag_print_rf
 745              		.cfi_endproc
 746              	.LFE64:
 747              		.size	adc_isr, .-adc_isr
 748              		.global	__aeabi_i2d
 749              		.global	__aeabi_dsub
 750              		.global	__aeabi_dcmpge
 751              		.global	__aeabi_dadd
 752              		.section	.text.isr_quad1,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 17


 753              		.align	2
 754              		.global	isr_quad1
 755              		.thumb
 756              		.thumb_func
 757              		.type	isr_quad1, %function
 758              	isr_quad1:
 759              	.LFB65:
 146:.\main.c      **** 
 147:.\main.c      **** CY_ISR (isr_quad1)
 148:.\main.c      **** {
 760              		.loc 1 148 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 B0B5     		push	{r4, r5, r7, lr}
 765              		.cfi_def_cfa_offset 16
 766              		.cfi_offset 4, -16
 767              		.cfi_offset 5, -12
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 149:.\main.c      ****     
 150:.\main.c      ****     //LED_Write(~LED_Read());
 151:.\main.c      ****     last_quad_count1 = quad_count1;
 772              		.loc 1 151 0
 773 0004 564B     		ldr	r3, .L12
 774 0006 1A88     		ldrh	r2, [r3]
 775 0008 564B     		ldr	r3, .L12+4
 776 000a 1A80     		strh	r2, [r3]	@ movhi
 152:.\main.c      ****     last_quad_count2 = quad_count2;
 777              		.loc 1 152 0
 778 000c 564B     		ldr	r3, .L12+8
 779 000e 1A88     		ldrh	r2, [r3]
 780 0010 564B     		ldr	r3, .L12+12
 781 0012 1A80     		strh	r2, [r3]	@ movhi
 153:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 782              		.loc 1 153 0
 783 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 784 0018 0346     		mov	r3, r0
 785 001a 1A46     		mov	r2, r3
 786 001c 504B     		ldr	r3, .L12
 787 001e 1A80     		strh	r2, [r3]	@ movhi
 154:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 788              		.loc 1 154 0
 789 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 790 0024 0346     		mov	r3, r0
 791 0026 1A46     		mov	r2, r3
 792 0028 4F4B     		ldr	r3, .L12+8
 793 002a 1A80     		strh	r2, [r3]	@ movhi
 155:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 794              		.loc 1 155 0
 795 002c 4C4B     		ldr	r3, .L12
 796 002e 1B88     		ldrh	r3, [r3]
 797 0030 9AB2     		uxth	r2, r3
 798 0032 4C4B     		ldr	r3, .L12+4
 799 0034 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 18


 800 0036 9BB2     		uxth	r3, r3
 801 0038 D31A     		subs	r3, r2, r3
 802 003a 9BB2     		uxth	r3, r3
 803 003c 9AB2     		uxth	r2, r3
 804 003e 4C4B     		ldr	r3, .L12+16
 805 0040 1A80     		strh	r2, [r3]	@ movhi
 156:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 806              		.loc 1 156 0
 807 0042 494B     		ldr	r3, .L12+8
 808 0044 1B88     		ldrh	r3, [r3]
 809 0046 9AB2     		uxth	r2, r3
 810 0048 484B     		ldr	r3, .L12+12
 811 004a 1B88     		ldrh	r3, [r3]
 812 004c 9BB2     		uxth	r3, r3
 813 004e D31A     		subs	r3, r2, r3
 814 0050 9BB2     		uxth	r3, r3
 815 0052 9AB2     		uxth	r2, r3
 816 0054 474B     		ldr	r3, .L12+20
 817 0056 1A80     		strh	r2, [r3]	@ movhi
 157:.\main.c      ****     
 158:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 818              		.loc 1 158 0
 819 0058 414B     		ldr	r3, .L12
 820 005a 1B88     		ldrh	r3, [r3]
 821 005c 1BB2     		sxth	r3, r3
 822 005e 002B     		cmp	r3, #0
 823 0060 B8BF     		it	lt
 824 0062 5B42     		rsblt	r3, r3, #0
 825 0064 40F6B832 		movw	r2, #3000
 826 0068 9342     		cmp	r3, r2
 827 006a 17DD     		ble	.L6
 828              		.loc 1 158 0 is_stmt 0 discriminator 1
 829 006c 424B     		ldr	r3, .L12+24
 830 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 0070 012B     		cmp	r3, #1
 832 0072 13D0     		beq	.L6
 833              		.loc 1 158 0 discriminator 2
 834 0074 404B     		ldr	r3, .L12+24
 835 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 836 0078 022B     		cmp	r3, #2
 837 007a 0FD0     		beq	.L6
 838              		.loc 1 158 0 discriminator 3
 839 007c 3E4B     		ldr	r3, .L12+24
 840 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 841 0080 072B     		cmp	r3, #7
 842 0082 0BD0     		beq	.L6
 159:.\main.c      ****     {
 160:.\main.c      ****         QuadDec_M1_SetCounter(0);
 843              		.loc 1 160 0 is_stmt 1
 844 0084 0020     		movs	r0, #0
 845 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 161:.\main.c      ****         QuadDec_M2_SetCounter(0);
 846              		.loc 1 161 0
 847 008a 0020     		movs	r0, #0
 848 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 162:.\main.c      ****         quad_count1 = 0;
 849              		.loc 1 162 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 19


 850 0090 334B     		ldr	r3, .L12
 851 0092 0022     		movs	r2, #0
 852 0094 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****         quad_count2 = 0;
 853              		.loc 1 163 0
 854 0096 344B     		ldr	r3, .L12+8
 855 0098 0022     		movs	r2, #0
 856 009a 1A80     		strh	r2, [r3]	@ movhi
 857              	.L6:
 164:.\main.c      ****     }
 165:.\main.c      **** 
 166:.\main.c      ****     flag_calc_wheelspeed = 1;
 858              		.loc 1 166 0
 859 009c 374B     		ldr	r3, .L12+28
 860 009e 0122     		movs	r2, #1
 861 00a0 1A70     		strb	r2, [r3]
 167:.\main.c      ****     
 168:.\main.c      ****     
 169:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 862              		.loc 1 169 0
 863 00a2 374B     		ldr	r3, .L12+32
 864 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 00a6 062B     		cmp	r3, #6
 866 00a8 58D1     		bne	.L5
 867              		.loc 1 169 0 is_stmt 0 discriminator 1
 868 00aa 334B     		ldr	r3, .L12+24
 869 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 870 00ae 062B     		cmp	r3, #6
 871 00b0 54D1     		bne	.L5
 170:.\main.c      ****     {
 171:.\main.c      ****         //track the distance
 172:.\main.c      ****         accum_dist -= quad_diff1;
 872              		.loc 1 172 0 is_stmt 1
 873 00b2 344B     		ldr	r3, .L12+36
 874 00b4 1B88     		ldrh	r3, [r3]
 875 00b6 9AB2     		uxth	r2, r3
 876 00b8 2D4B     		ldr	r3, .L12+16
 877 00ba 1B88     		ldrh	r3, [r3]
 878 00bc 9BB2     		uxth	r3, r3
 879 00be D31A     		subs	r3, r2, r3
 880 00c0 9BB2     		uxth	r3, r3
 881 00c2 9AB2     		uxth	r2, r3
 882 00c4 2F4B     		ldr	r3, .L12+36
 883 00c6 1A80     		strh	r2, [r3]	@ movhi
 173:.\main.c      ****         if(accum_dist >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 884              		.loc 1 173 0
 885 00c8 2E4B     		ldr	r3, .L12+36
 886 00ca 1B88     		ldrh	r3, [r3]
 887 00cc 1BB2     		sxth	r3, r3
 888 00ce 1846     		mov	r0, r3
 889 00d0 FFF7FEFF 		bl	__aeabi_i2d
 890 00d4 0446     		mov	r4, r0
 891 00d6 0D46     		mov	r5, r1
 892 00d8 2B4B     		ldr	r3, .L12+40
 893 00da 1B88     		ldrh	r3, [r3]
 894 00dc 1BB2     		sxth	r3, r3
 895 00de 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 20


 896 00e0 FFF7FEFF 		bl	__aeabi_i2d
 897 00e4 0246     		mov	r2, r0
 898 00e6 0B46     		mov	r3, r1
 899 00e8 1046     		mov	r0, r2
 900 00ea 1946     		mov	r1, r3
 901 00ec 4FF00002 		mov	r2, #0
 902 00f0 264B     		ldr	r3, .L12+44
 903 00f2 FFF7FEFF 		bl	__aeabi_dsub
 904 00f6 0246     		mov	r2, r0
 905 00f8 0B46     		mov	r3, r1
 906 00fa 2046     		mov	r0, r4
 907 00fc 2946     		mov	r1, r5
 908 00fe FFF7FEFF 		bl	__aeabi_dcmpge
 909 0102 0346     		mov	r3, r0
 910 0104 002B     		cmp	r3, #0
 911 0106 02D0     		beq	.L8
 174:.\main.c      ****         {
 175:.\main.c      ****             reached_target = 1;
 912              		.loc 1 175 0
 913 0108 214B     		ldr	r3, .L12+48
 914 010a 0122     		movs	r2, #1
 915 010c 1A70     		strb	r2, [r3]
 916              	.L8:
 176:.\main.c      ****         }
 177:.\main.c      ****         if((accum_dist >= (target_distance_quad + QUAD_PER_UNIT * 0.5)) || target_distance_quad == 
 917              		.loc 1 177 0
 918 010e 1D4B     		ldr	r3, .L12+36
 919 0110 1B88     		ldrh	r3, [r3]
 920 0112 1BB2     		sxth	r3, r3
 921 0114 1846     		mov	r0, r3
 922 0116 FFF7FEFF 		bl	__aeabi_i2d
 923 011a 0446     		mov	r4, r0
 924 011c 0D46     		mov	r5, r1
 925 011e 1A4B     		ldr	r3, .L12+40
 926 0120 1B88     		ldrh	r3, [r3]
 927 0122 1BB2     		sxth	r3, r3
 928 0124 1846     		mov	r0, r3
 929 0126 FFF7FEFF 		bl	__aeabi_i2d
 930 012a 0246     		mov	r2, r0
 931 012c 0B46     		mov	r3, r1
 932 012e 1046     		mov	r0, r2
 933 0130 1946     		mov	r1, r3
 934 0132 4FF00002 		mov	r2, #0
 935 0136 154B     		ldr	r3, .L12+44
 936 0138 FFF7FEFF 		bl	__aeabi_dadd
 937 013c 0246     		mov	r2, r0
 938 013e 0B46     		mov	r3, r1
 939 0140 2046     		mov	r0, r4
 940 0142 2946     		mov	r1, r5
 941 0144 FFF7FEFF 		bl	__aeabi_dcmpge
 942 0148 0346     		mov	r3, r0
 943 014a 002B     		cmp	r3, #0
 944 014c 03D1     		bne	.L10
 945              		.loc 1 177 0 is_stmt 0 discriminator 1
 946 014e 0E4B     		ldr	r3, .L12+40
 947 0150 1B88     		ldrh	r3, [r3]
 948 0152 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 21


 949 0154 02D1     		bne	.L5
 950              	.L10:
 178:.\main.c      ****         {
 179:.\main.c      ****             overshot_target = 1;
 951              		.loc 1 179 0 is_stmt 1
 952 0156 0F4B     		ldr	r3, .L12+52
 953 0158 0122     		movs	r2, #1
 954 015a 1A70     		strb	r2, [r3]
 955              	.L5:
 180:.\main.c      ****         }
 181:.\main.c      ****     }
 182:.\main.c      **** }
 956              		.loc 1 182 0
 957 015c B0BD     		pop	{r4, r5, r7, pc}
 958              	.L13:
 959 015e 00BF     		.align	2
 960              	.L12:
 961 0160 00000000 		.word	quad_count1
 962 0164 00000000 		.word	last_quad_count1
 963 0168 00000000 		.word	quad_count2
 964 016c 00000000 		.word	last_quad_count2
 965 0170 00000000 		.word	quad_diff1
 966 0174 00000000 		.word	quad_diff2
 967 0178 00000000 		.word	movement_state
 968 017c 00000000 		.word	flag_calc_wheelspeed
 969 0180 00000000 		.word	track_mode
 970 0184 00000000 		.word	accum_dist
 971 0188 00000000 		.word	target_distance_quad
 972 018c 00005240 		.word	1079115776
 973 0190 00000000 		.word	reached_target
 974 0194 00000000 		.word	overshot_target
 975              		.cfi_endproc
 976              	.LFE65:
 977              		.size	isr_quad1, .-isr_quad1
 978              		.section	.text.isr_turn_timer,"ax",%progbits
 979              		.align	2
 980              		.global	isr_turn_timer
 981              		.thumb
 982              		.thumb_func
 983              		.type	isr_turn_timer, %function
 984              	isr_turn_timer:
 985              	.LFB66:
 183:.\main.c      **** 
 184:.\main.c      **** CY_ISR(isr_turn_timer)
 185:.\main.c      **** {
 986              		.loc 1 185 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 8
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990 0000 80B5     		push	{r7, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 7, -8
 993              		.cfi_offset 14, -4
 994 0002 82B0     		sub	sp, sp, #8
 995              		.cfi_def_cfa_offset 16
 996 0004 00AF     		add	r7, sp, #0
 997              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 22


 186:.\main.c      ****     if(movement_state == LTURN)
 998              		.loc 1 186 0
 999 0006 464B     		ldr	r3, .L22
 1000 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1001 000a 012B     		cmp	r3, #1
 1002 000c 33D1     		bne	.L15
 1003              	.LBB2:
 187:.\main.c      ****     {
 188:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 1004              		.loc 1 188 0
 1005 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1006 0012 0346     		mov	r3, r0
 1007 0014 1A46     		mov	r2, r3
 1008 0016 434B     		ldr	r3, .L22+4
 1009 0018 1B88     		ldrh	r3, [r3]
 1010 001a 1BB2     		sxth	r3, r3
 1011 001c D31A     		subs	r3, r2, r3
 1012 001e 002B     		cmp	r3, #0
 1013 0020 B8BF     		it	lt
 1014 0022 5B42     		rsblt	r3, r3, #0
 1015 0024 404A     		ldr	r2, .L22+8
 1016 0026 82FB0312 		smull	r1, r2, r2, r3
 1017 002a 1112     		asrs	r1, r2, #8
 1018 002c DA17     		asrs	r2, r3, #31
 1019 002e 8A1A     		subs	r2, r1, r2
 1020 0030 4FF45071 		mov	r1, #832
 1021 0034 01FB02F2 		mul	r2, r1, r2
 1022 0038 9A1A     		subs	r2, r3, r2
 1023 003a 1346     		mov	r3, r2	@ movhi
 1024 003c FB80     		strh	r3, [r7, #6]	@ movhi
 189:.\main.c      ****   
 190:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1025              		.loc 1 190 0
 1026 003e FB88     		ldrh	r3, [r7, #6]
 1027 0040 B82B     		cmp	r3, #184
 1028 0042 17D9     		bls	.L16
 1029              		.loc 1 190 0 is_stmt 0 discriminator 1
 1030 0044 FB88     		ldrh	r3, [r7, #6]
 1031 0046 E02B     		cmp	r3, #224
 1032 0048 14D8     		bhi	.L16
 1033              		.loc 1 190 0 discriminator 2
 1034 004a 384B     		ldr	r3, .L22+12
 1035 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1036 004e 012B     		cmp	r3, #1
 1037 0050 07D0     		beq	.L17
 1038              		.loc 1 190 0 discriminator 3
 1039 0052 364B     		ldr	r3, .L22+12
 1040 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1041 0056 012B     		cmp	r3, #1
 1042 0058 03D0     		beq	.L17
 1043              		.loc 1 190 0 discriminator 4
 1044 005a 344B     		ldr	r3, .L22+12
 1045 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1046 005e 012B     		cmp	r3, #1
 1047 0060 08D1     		bne	.L16
 1048              	.L17:
 191:.\main.c      ****         {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 23


 192:.\main.c      ****             //movement_state = STOPPED;
 193:.\main.c      ****             brakeMotor();
 1049              		.loc 1 193 0 is_stmt 1
 1050 0062 FFF7FEFF 		bl	brakeMotor
 194:.\main.c      ****             movement_state = prev_movement_state;
 1051              		.loc 1 194 0
 1052 0066 324B     		ldr	r3, .L22+16
 1053 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1054 006a 2D4B     		ldr	r3, .L22
 1055 006c 1A70     		strb	r2, [r3]
 195:.\main.c      ****             Timer_2_Stop();
 1056              		.loc 1 195 0
 1057 006e FFF7FEFF 		bl	Timer_2_Stop
 1058              	.LBE2:
 1059 0072 51E0     		b	.L14
 1060              	.L16:
 1061 0074 50E0     		b	.L14
 1062              	.L15:
 196:.\main.c      ****         }
 197:.\main.c      ****     }
 198:.\main.c      ****     else if (movement_state == RTURN)
 1063              		.loc 1 198 0
 1064 0076 2A4B     		ldr	r3, .L22
 1065 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 007a 022B     		cmp	r3, #2
 1067 007c 33D1     		bne	.L19
 1068              	.LBB3:
 199:.\main.c      ****     {
 200:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1069              		.loc 1 200 0
 1070 007e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1071 0082 0346     		mov	r3, r0
 1072 0084 1A46     		mov	r2, r3
 1073 0086 274B     		ldr	r3, .L22+4
 1074 0088 1B88     		ldrh	r3, [r3]
 1075 008a 1BB2     		sxth	r3, r3
 1076 008c D31A     		subs	r3, r2, r3
 1077 008e 002B     		cmp	r3, #0
 1078 0090 B8BF     		it	lt
 1079 0092 5B42     		rsblt	r3, r3, #0
 1080 0094 244A     		ldr	r2, .L22+8
 1081 0096 82FB0312 		smull	r1, r2, r2, r3
 1082 009a 1112     		asrs	r1, r2, #8
 1083 009c DA17     		asrs	r2, r3, #31
 1084 009e 8A1A     		subs	r2, r1, r2
 1085 00a0 4FF45071 		mov	r1, #832
 1086 00a4 01FB02F2 		mul	r2, r1, r2
 1087 00a8 9A1A     		subs	r2, r3, r2
 1088 00aa 1346     		mov	r3, r2	@ movhi
 1089 00ac BB80     		strh	r3, [r7, #4]	@ movhi
 201:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1090              		.loc 1 201 0
 1091 00ae BB88     		ldrh	r3, [r7, #4]
 1092 00b0 B82B     		cmp	r3, #184
 1093 00b2 17D9     		bls	.L20
 1094              		.loc 1 201 0 is_stmt 0 discriminator 1
 1095 00b4 BB88     		ldrh	r3, [r7, #4]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 24


 1096 00b6 E02B     		cmp	r3, #224
 1097 00b8 14D8     		bhi	.L20
 1098              		.loc 1 201 0 discriminator 2
 1099 00ba 1C4B     		ldr	r3, .L22+12
 1100 00bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1101 00be 012B     		cmp	r3, #1
 1102 00c0 07D0     		beq	.L21
 1103              		.loc 1 201 0 discriminator 3
 1104 00c2 1A4B     		ldr	r3, .L22+12
 1105 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1106 00c6 012B     		cmp	r3, #1
 1107 00c8 03D0     		beq	.L21
 1108              		.loc 1 201 0 discriminator 4
 1109 00ca 184B     		ldr	r3, .L22+12
 1110 00cc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1111 00ce 012B     		cmp	r3, #1
 1112 00d0 08D1     		bne	.L20
 1113              	.L21:
 202:.\main.c      ****         {
 203:.\main.c      ****             //movement_state = STOPPED;
 204:.\main.c      ****             brakeMotor();
 1114              		.loc 1 204 0 is_stmt 1
 1115 00d2 FFF7FEFF 		bl	brakeMotor
 205:.\main.c      ****             movement_state = prev_movement_state;
 1116              		.loc 1 205 0
 1117 00d6 164B     		ldr	r3, .L22+16
 1118 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1119 00da 114B     		ldr	r3, .L22
 1120 00dc 1A70     		strb	r2, [r3]
 206:.\main.c      ****             Timer_2_Stop();
 1121              		.loc 1 206 0
 1122 00de FFF7FEFF 		bl	Timer_2_Stop
 1123              	.LBE3:
 1124 00e2 19E0     		b	.L14
 1125              	.L20:
 1126 00e4 18E0     		b	.L14
 1127              	.L19:
 207:.\main.c      ****         }
 208:.\main.c      ****     }
 209:.\main.c      ****     else if (movement_state == UTURN)
 1128              		.loc 1 209 0
 1129 00e6 0E4B     		ldr	r3, .L22
 1130 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1131 00ea 072B     		cmp	r3, #7
 1132 00ec 14D1     		bne	.L14
 210:.\main.c      ****     {
 211:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1133              		.loc 1 211 0
 1134 00ee FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1135 00f2 0346     		mov	r3, r0
 1136 00f4 1A46     		mov	r2, r3
 1137 00f6 0B4B     		ldr	r3, .L22+4
 1138 00f8 1B88     		ldrh	r3, [r3]
 1139 00fa 1BB2     		sxth	r3, r3
 1140 00fc D31A     		subs	r3, r2, r3
 1141 00fe 002B     		cmp	r3, #0
 1142 0100 B8BF     		it	lt
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 25


 1143 0102 5B42     		rsblt	r3, r3, #0
 1144 0104 CF2B     		cmp	r3, #207
 1145 0106 07DD     		ble	.L14
 212:.\main.c      ****         {
 213:.\main.c      ****             //movement_state = STOPPED;
 214:.\main.c      ****             brakeMotor();
 1146              		.loc 1 214 0
 1147 0108 FFF7FEFF 		bl	brakeMotor
 215:.\main.c      ****             movement_state = prev_movement_state;
 1148              		.loc 1 215 0
 1149 010c 084B     		ldr	r3, .L22+16
 1150 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1151 0110 034B     		ldr	r3, .L22
 1152 0112 1A70     		strb	r2, [r3]
 216:.\main.c      ****             Timer_2_Stop();
 1153              		.loc 1 216 0
 1154 0114 FFF7FEFF 		bl	Timer_2_Stop
 1155              	.L14:
 217:.\main.c      ****         }
 218:.\main.c      ****     }
 219:.\main.c      **** }
 1156              		.loc 1 219 0
 1157 0118 0837     		adds	r7, r7, #8
 1158              		.cfi_def_cfa_offset 8
 1159 011a BD46     		mov	sp, r7
 1160              		.cfi_def_cfa_register 13
 1161              		@ sp needed
 1162 011c 80BD     		pop	{r7, pc}
 1163              	.L23:
 1164 011e 00BF     		.align	2
 1165              	.L22:
 1166 0120 00000000 		.word	movement_state
 1167 0124 00000000 		.word	start_turn_count
 1168 0128 4FECC44E 		.word	1321528399
 1169 012c 00000000 		.word	frontSensors
 1170 0130 00000000 		.word	prev_movement_state
 1171              		.cfi_endproc
 1172              	.LFE66:
 1173              		.size	isr_turn_timer, .-isr_turn_timer
 1174              		.section	.text.Stop_on_line,"ax",%progbits
 1175              		.align	2
 1176              		.global	Stop_on_line
 1177              		.thumb
 1178              		.thumb_func
 1179              		.type	Stop_on_line, %function
 1180              	Stop_on_line:
 1181              	.LFB67:
 220:.\main.c      **** 
 221:.\main.c      **** 
 222:.\main.c      **** CY_ISR (Stop_on_line)
 223:.\main.c      **** {
 1182              		.loc 1 223 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 1, uses_anonymous_args = 0
 1186              		@ link register save eliminated.
 1187 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 26


 1188              		.cfi_def_cfa_offset 4
 1189              		.cfi_offset 7, -4
 1190 0002 00AF     		add	r7, sp, #0
 1191              		.cfi_def_cfa_register 7
 224:.\main.c      ****     movement_state = STOPPED;
 1192              		.loc 1 224 0
 1193 0004 054B     		ldr	r3, .L26
 1194 0006 0322     		movs	r2, #3
 1195 0008 1A70     		strb	r2, [r3]
 225:.\main.c      ****     if(movement_state != DRIVE) return;
 1196              		.loc 1 225 0
 1197 000a 044B     		ldr	r3, .L26
 1198 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1199 000e 002B     		cmp	r3, #0
 1200 0010 00D0     		beq	.L24
 1201 0012 00BF     		nop
 1202              	.L24:
 226:.\main.c      ****     //initTurnLeft();
 227:.\main.c      **** }
 1203              		.loc 1 227 0
 1204 0014 BD46     		mov	sp, r7
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 0016 5DF8047B 		ldr	r7, [sp], #4
 1208              		.cfi_restore 7
 1209              		.cfi_def_cfa_offset 0
 1210 001a 7047     		bx	lr
 1211              	.L27:
 1212              		.align	2
 1213              	.L26:
 1214 001c 00000000 		.word	movement_state
 1215              		.cfi_endproc
 1216              	.LFE67:
 1217              		.size	Stop_on_line, .-Stop_on_line
 1218              		.section	.rodata
 1219              		.align	2
 1220              	.LC0:
 1221 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1221      74696E67 
 1221      20726F62 
 1221      6F74210D 
 1221      0A00
 1222              		.section	.text.button,"ax",%progbits
 1223              		.align	2
 1224              		.global	button
 1225              		.thumb
 1226              		.thumb_func
 1227              		.type	button, %function
 1228              	button:
 1229              	.LFB68:
 228:.\main.c      **** 
 229:.\main.c      **** CY_ISR (button)
 230:.\main.c      **** {
 1230              		.loc 1 230 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 27


 1234 0000 80B5     		push	{r7, lr}
 1235              		.cfi_def_cfa_offset 8
 1236              		.cfi_offset 7, -8
 1237              		.cfi_offset 14, -4
 1238 0002 00AF     		add	r7, sp, #0
 1239              		.cfi_def_cfa_register 7
 231:.\main.c      ****     if(BT_ENABLED)
 1240              		.loc 1 231 0
 1241 0004 054B     		ldr	r3, .L30
 1242 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0008 002B     		cmp	r3, #0
 1244 000a 02D0     		beq	.L29
 232:.\main.c      ****     {
 233:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1245              		.loc 1 233 0
 1246 000c 0448     		ldr	r0, .L30+4
 1247 000e FFF7FEFF 		bl	UART_PutString
 1248              	.L29:
 234:.\main.c      ****     }
 235:.\main.c      ****     movement_state = DRIVE;
 1249              		.loc 1 235 0
 1250 0012 044B     		ldr	r3, .L30+8
 1251 0014 0022     		movs	r2, #0
 1252 0016 1A70     		strb	r2, [r3]
 236:.\main.c      **** }
 1253              		.loc 1 236 0
 1254 0018 80BD     		pop	{r7, pc}
 1255              	.L31:
 1256 001a 00BF     		.align	2
 1257              	.L30:
 1258 001c 00000000 		.word	BT_ENABLED
 1259 0020 00000000 		.word	.LC0
 1260 0024 00000000 		.word	movement_state
 1261              		.cfi_endproc
 1262              	.LFE68:
 1263              		.size	button, .-button
 1264              		.section	.text.isr_adcTimer,"ax",%progbits
 1265              		.align	2
 1266              		.global	isr_adcTimer
 1267              		.thumb
 1268              		.thumb_func
 1269              		.type	isr_adcTimer, %function
 1270              	isr_adcTimer:
 1271              	.LFB69:
 237:.\main.c      **** 
 238:.\main.c      **** CY_ISR(isr_adcTimer)
 239:.\main.c      **** {
 1272              		.loc 1 239 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 1, uses_anonymous_args = 0
 1276 0000 80B5     		push	{r7, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 28


 240:.\main.c      ****     ADC_StartConvert();
 1282              		.loc 1 240 0
 1283 0004 FFF7FEFF 		bl	ADC_StartConvert
 241:.\main.c      **** }
 1284              		.loc 1 241 0
 1285 0008 80BD     		pop	{r7, pc}
 1286              		.cfi_endproc
 1287              	.LFE69:
 1288              		.size	isr_adcTimer, .-isr_adcTimer
 1289 000a 00BF     		.section	.rodata
 1290 0012 0000     		.align	2
 1291              	.LC1:
 1292 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1292      7A6F6E65 
 1292      206C6566 
 1292      740D0A00 
 1293              		.section	.text.isr_deadzone,"ax",%progbits
 1294              		.align	2
 1295              		.global	isr_deadzone
 1296              		.thumb
 1297              		.thumb_func
 1298              		.type	isr_deadzone, %function
 1299              	isr_deadzone:
 1300              	.LFB70:
 242:.\main.c      **** 
 243:.\main.c      **** CY_ISR(isr_deadzone)
 244:.\main.c      **** {
 1301              		.loc 1 244 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 1, uses_anonymous_args = 0
 1305 0000 80B5     		push	{r7, lr}
 1306              		.cfi_def_cfa_offset 8
 1307              		.cfi_offset 7, -8
 1308              		.cfi_offset 14, -4
 1309 0002 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 245:.\main.c      ****     sensorsDisabled = 0;
 1311              		.loc 1 245 0
 1312 0004 054B     		ldr	r3, .L34
 1313 0006 0022     		movs	r2, #0
 1314 0008 1A60     		str	r2, [r3]
 246:.\main.c      ****     deadzone = 0;
 1315              		.loc 1 246 0
 1316 000a 054B     		ldr	r3, .L34+4
 1317 000c 0022     		movs	r2, #0
 1318 000e 1A70     		strb	r2, [r3]
 247:.\main.c      ****     Timer_Deadzone_Stop();
 1319              		.loc 1 247 0
 1320 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 248:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1321              		.loc 1 248 0
 1322 0014 0348     		ldr	r0, .L34+8
 1323 0016 FFF7FEFF 		bl	UART_PutString
 249:.\main.c      **** }
 1324              		.loc 1 249 0
 1325 001a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 29


 1326              	.L35:
 1327              		.align	2
 1328              	.L34:
 1329 001c 00000000 		.word	sensorsDisabled
 1330 0020 00000000 		.word	deadzone
 1331 0024 14000000 		.word	.LC1
 1332              		.cfi_endproc
 1333              	.LFE70:
 1334              		.size	isr_deadzone, .-isr_deadzone
 1335              		.section	.rodata
 1336              		.align	2
 1337              	.LC2:
 1338 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1338      20747261 
 1338      76656C3A 
 1338      2025640D 
 1338      0A00
 1339 0036 0000     		.align	2
 1340              	.LC3:
 1341 0038 54726967 		.ascii	"Trigger quad\015\012\000"
 1341      67657220 
 1341      71756164 
 1341      0D0A00
 1342              		.global	__aeabi_d2iz
 1343 0047 00       		.align	2
 1344              	.LC4:
 1345 0048 54617267 		.ascii	"Target dist: %d\015\012\000"
 1345      65742064 
 1345      6973743A 
 1345      2025640D 
 1345      0A00
 1346 005a 0000     		.align	2
 1347              	.LC5:
 1348 005c 696E7374 		.ascii	"instr count:%d\015\012\000"
 1348      7220636F 
 1348      756E743A 
 1348      25640D0A 
 1348      00
 1349 006d 000000   		.align	2
 1350              	.LC6:
 1351 0070 54726967 		.ascii	"Trigger intersection\015\012\000"
 1351      67657220 
 1351      696E7465 
 1351      72736563 
 1351      74696F6E 
 1352 0087 00       		.align	2
 1353              	.LC7:
 1354 0088 44656164 		.ascii	"Deadzone enter\015\012\000"
 1354      7A6F6E65 
 1354      20656E74 
 1354      65720D0A 
 1354      00
 1355              		.section	.text.main,"ax",%progbits
 1356              		.align	2
 1357              		.global	main
 1358              		.thumb
 1359              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 30


 1360              		.type	main, %function
 1361              	main:
 1362              	.LFB71:
 250:.\main.c      **** 
 251:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 252:.\main.c      **** 
 253:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 254:.\main.c      **** int main()
 255:.\main.c      **** {  
 1363              		.loc 1 255 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 40
 1366              		@ frame_needed = 1, uses_anonymous_args = 0
 1367 0000 80B5     		push	{r7, lr}
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 7, -8
 1370              		.cfi_offset 14, -4
 1371 0002 8AB0     		sub	sp, sp, #40
 1372              		.cfi_def_cfa_offset 48
 1373 0004 00AF     		add	r7, sp, #0
 1374              		.cfi_def_cfa_register 7
 256:.\main.c      **** 
 257:.\main.c      **** // ----- INITIALIZATIONS ----------
 258:.\main.c      ****     CYGlobalIntEnable;
 1375              		.loc 1 258 0
 1376              	@ 258 ".\main.c" 1
 1377 0006 62B6     		CPSIE   i
 1378              	@ 0 "" 2
 259:.\main.c      ****     if(ENABLE_PWM)
 260:.\main.c      ****     {
 261:.\main.c      ****         PWM_1_Start();// starting the pwm
 1379              		.loc 1 261 0
 1380              		.thumb
 1381 0008 FFF7FEFF 		bl	PWM_1_Start
 262:.\main.c      ****         PWM_2_Start();// starting the pwm
 1382              		.loc 1 262 0
 1383 000c FFF7FEFF 		bl	PWM_2_Start
 263:.\main.c      ****     }
 264:.\main.c      ****     
 265:.\main.c      ****     if(ENABLE_ADC)
 266:.\main.c      ****     {
 267:.\main.c      ****         ADC_Start();
 268:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 269:.\main.c      ****         //ADC_StartConvert();
 270:.\main.c      ****         
 271:.\main.c      ****         //start the ADC timer for software trigger mode
 272:.\main.c      ****         Timer_TS_Start();
 273:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 274:.\main.c      ****     }
 275:.\main.c      ****     
 276:.\main.c      ****     if (ENABLE_QUAD)
 277:.\main.c      ****     {
 278:.\main.c      ****         QuadDec_M1_Start();
 1384              		.loc 1 278 0
 1385 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 279:.\main.c      ****         QuadDec_M2_Start();
 1386              		.loc 1 279 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 31


 1387 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 280:.\main.c      ****         
 281:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1388              		.loc 1 281 0
 1389 0018 AA48     		ldr	r0, .L98
 1390 001a FFF7FEFF 		bl	isr_quad1_StartEx
 282:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1391              		.loc 1 282 0
 1392 001e AA48     		ldr	r0, .L98+4
 1393 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 283:.\main.c      ****         
 284:.\main.c      ****         Timer_1_Start();
 1394              		.loc 1 284 0
 1395 0024 FFF7FEFF 		bl	Timer_1_Start
 285:.\main.c      ****     }
 286:.\main.c      ****     
 287:.\main.c      ****     if(ENABLE_STOP){
 288:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 289:.\main.c      ****         
 290:.\main.c      ****     }
 291:.\main.c      ****     isr_button_StartEx(button);
 1396              		.loc 1 291 0
 1397 0028 A848     		ldr	r0, .L98+8
 1398 002a FFF7FEFF 		bl	isr_button_StartEx
 292:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1399              		.loc 1 292 0
 1400 002e A848     		ldr	r0, .L98+12
 1401 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 293:.\main.c      **** 
 294:.\main.c      ****     // ------USB SETUP ----------------    
 295:.\main.c      ****     if (USE_USB){    
 296:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1402              		.loc 1 296 0
 1403 0034 0020     		movs	r0, #0
 1404 0036 0121     		movs	r1, #1
 1405 0038 FFF7FEFF 		bl	USBUART_Start
 297:.\main.c      ****         if (USBUART_GetConfiguration())
 1406              		.loc 1 297 0
 1407 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1408 0040 0346     		mov	r3, r0
 1409 0042 002B     		cmp	r3, #0
 1410 0044 01D0     		beq	.L37
 298:.\main.c      ****             {
 299:.\main.c      ****                  USBUART_CDC_Init();
 1411              		.loc 1 299 0
 1412 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1413              	.L37:
 300:.\main.c      ****             }
 301:.\main.c      ****     }
 302:.\main.c      ****     
 303:.\main.c      ****     if(BIN_ENABLED){
 1414              		.loc 1 303 0
 1415 004a A24B     		ldr	r3, .L98+16
 1416 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417 004e 002B     		cmp	r3, #0
 1418 0050 01D0     		beq	.L38
 304:.\main.c      ****         changeToRF();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 32


 1419              		.loc 1 304 0
 1420 0052 FFF7FEFF 		bl	changeToRF
 1421              	.L38:
 305:.\main.c      ****     }
 306:.\main.c      ****     
 307:.\main.c      ****     if(BT_ENABLED){
 1422              		.loc 1 307 0
 1423 0056 A04B     		ldr	r3, .L98+20
 1424 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 005a 002B     		cmp	r3, #0
 1426 005c 01D0     		beq	.L39
 308:.\main.c      ****         changeToBT();
 1427              		.loc 1 308 0
 1428 005e FFF7FEFF 		bl	changeToBT
 1429              	.L39:
 309:.\main.c      ****     }
 310:.\main.c      ****     
 311:.\main.c      ****     uint16 actionDebounce = 0;
 1430              		.loc 1 311 0
 1431 0062 0023     		movs	r3, #0
 1432 0064 FB84     		strh	r3, [r7, #38]	@ movhi
 1433              	.L95:
 312:.\main.c      ****     
 313:.\main.c      ****     //usbPutString("Started");
 314:.\main.c      ****     for(;;)
 315:.\main.c      ****     {
 316:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 317:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1434              		.loc 1 317 0
 1435 0066 FFF7FEFF 		bl	Quad_Dec_response
 318:.\main.c      ****         if(BIN_ENABLED == 1)
 1436              		.loc 1 318 0
 1437 006a 9A4B     		ldr	r3, .L98+16
 1438 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 006e 012B     		cmp	r3, #1
 1440 0070 03D1     		bne	.L40
 319:.\main.c      ****         {
 320:.\main.c      ****             handle_rx_binary();
 1441              		.loc 1 320 0
 1442 0072 FFF7FEFF 		bl	handle_rx_binary
 321:.\main.c      ****             print_RF();
 1443              		.loc 1 321 0
 1444 0076 FFF7FEFF 		bl	print_RF
 1445              	.L40:
 322:.\main.c      ****         }
 323:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 324:.\main.c      ****        
 325:.\main.c      ****         readFrontSensors(frontSensors);
 1446              		.loc 1 325 0
 1447 007a 9848     		ldr	r0, .L98+24
 1448 007c FFF7FEFF 		bl	readFrontSensors
 326:.\main.c      ****         
 327:.\main.c      ****         switch(track_mode)
 1449              		.loc 1 327 0
 1450 0080 974B     		ldr	r3, .L98+28
 1451 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1452 0084 072B     		cmp	r3, #7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 33


 1453 0086 00F2E082 		bhi	.L41
 1454 008a 01A2     		adr	r2, .L43
 1455 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1456              		.p2align 2
 1457              	.L43:
 1458 0090 4B060000 		.word	.L41+1
 1459 0094 4B060000 		.word	.L41+1
 1460 0098 4B060000 		.word	.L41+1
 1461 009c B1000000 		.word	.L46+1
 1462 00a0 4B060000 		.word	.L41+1
 1463 00a4 F5000000 		.word	.L48+1
 1464 00a8 1B010000 		.word	.L49+1
 1465 00ac 1B010000 		.word	.L49+1
 1466              		.p2align 1
 1467              	.L46:
 328:.\main.c      ****         {
 329:.\main.c      ****             case SQUARE_TRACK:
 330:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1468              		.loc 1 330 0
 1469 00b0 8C4B     		ldr	r3, .L98+32
 1470 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1471 00b4 012B     		cmp	r3, #1
 1472 00b6 1CD0     		beq	.L50
 1473              		.loc 1 330 0 is_stmt 0 discriminator 1
 1474 00b8 8A4B     		ldr	r3, .L98+32
 1475 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1476 00bc 022B     		cmp	r3, #2
 1477 00be 18D0     		beq	.L50
 331:.\main.c      ****                 {
 332:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1478              		.loc 1 332 0 is_stmt 1
 1479 00c0 864B     		ldr	r3, .L98+24
 1480 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1481 00c4 012B     		cmp	r3, #1
 1482 00c6 06D1     		bne	.L51
 1483              		.loc 1 332 0 is_stmt 0 discriminator 1
 1484 00c8 844B     		ldr	r3, .L98+24
 1485 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1486 00cc 012B     		cmp	r3, #1
 1487 00ce 02D1     		bne	.L51
 333:.\main.c      ****                         initTurnLeft();
 1488              		.loc 1 333 0 is_stmt 1
 1489 00d0 FFF7FEFF 		bl	initTurnLeft
 1490 00d4 0DE0     		b	.L50
 1491              	.L51:
 334:.\main.c      ****                     }
 335:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1492              		.loc 1 335 0
 1493 00d6 814B     		ldr	r3, .L98+24
 1494 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1495 00da 012B     		cmp	r3, #1
 1496 00dc 06D1     		bne	.L52
 1497              		.loc 1 335 0 is_stmt 0 discriminator 1
 1498 00de 7F4B     		ldr	r3, .L98+24
 1499 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1500 00e2 012B     		cmp	r3, #1
 1501 00e4 02D1     		bne	.L52
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 34


 336:.\main.c      ****                     {
 337:.\main.c      ****                         initTurnRight();
 1502              		.loc 1 337 0 is_stmt 1
 1503 00e6 FFF7FEFF 		bl	initTurnRight
 1504 00ea 02E0     		b	.L50
 1505              	.L52:
 338:.\main.c      ****                     }
 339:.\main.c      ****                     else inittrackLineZ();
 1506              		.loc 1 339 0
 1507 00ec FFF7FEFF 		bl	inittrackLineZ
 340:.\main.c      ****                 }
 341:.\main.c      ****             break;
 1508              		.loc 1 341 0
 1509 00f0 ABE2     		b	.L41
 1510              	.L50:
 1511 00f2 AAE2     		b	.L41
 1512              	.L48:
 342:.\main.c      ****             case NO_TRACK:
 343:.\main.c      ****             break;
 344:.\main.c      ****             case CURVE_TRACK:
 345:.\main.c      ****             break;
 346:.\main.c      ****             case U_TRACK:
 347:.\main.c      ****             break;
 348:.\main.c      ****             case QUAD_STOP:
 349:.\main.c      ****             break;
 350:.\main.c      ****             case RF_STOP:
 351:.\main.c      ****                 if(initial_pos_valid == 1)
 1513              		.loc 1 351 0
 1514 00f4 7C4B     		ldr	r3, .L98+36
 1515 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 00f8 012B     		cmp	r3, #1
 1517 00fa 0DD1     		bne	.L53
 352:.\main.c      ****                 {
 353:.\main.c      ****                     //changeToBT();
 354:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 355:.\main.c      ****                     //changeToRF();
 356:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1518              		.loc 1 356 0
 1519 00fc 7B4B     		ldr	r3, .L98+40
 1520 00fe 5A88     		ldrh	r2, [r3, #2]
 1521 0100 7B4B     		ldr	r3, .L98+44
 1522 0102 1A80     		strh	r2, [r3]	@ movhi
 357:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1523              		.loc 1 357 0
 1524 0104 794B     		ldr	r3, .L98+40
 1525 0106 9A88     		ldrh	r2, [r3, #4]
 1526 0108 7A4B     		ldr	r3, .L98+48
 1527 010a 1A80     		strh	r2, [r3]	@ movhi
 358:.\main.c      ****                     initial_pos_valid = 2;
 1528              		.loc 1 358 0
 1529 010c 764B     		ldr	r3, .L98+36
 1530 010e 0222     		movs	r2, #2
 1531 0110 1A70     		strb	r2, [r3]
 359:.\main.c      ****                     initForward();
 1532              		.loc 1 359 0
 1533 0112 FFF7FEFF 		bl	initForward
 360:.\main.c      ****                 }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 35


 361:.\main.c      ****             break;
 1534              		.loc 1 361 0
 1535 0116 98E2     		b	.L41
 1536              	.L53:
 1537 0118 97E2     		b	.L41
 1538              	.L49:
 362:.\main.c      ****             case MAP_TRAVERSE:
 363:.\main.c      ****             case DEST_TEST:
 364:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1539              		.loc 1 364 0
 1540 011a 724B     		ldr	r3, .L98+32
 1541 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1542 011e 012B     		cmp	r3, #1
 1543 0120 00F09282 		beq	.L54
 1544              		.loc 1 364 0 is_stmt 0 discriminator 1
 1545 0124 6F4B     		ldr	r3, .L98+32
 1546 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1547 0128 022B     		cmp	r3, #2
 1548 012a 00F08D82 		beq	.L54
 1549              		.loc 1 364 0 discriminator 2
 1550 012e 6D4B     		ldr	r3, .L98+32
 1551 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 0132 072B     		cmp	r3, #7
 1553 0134 00F08882 		beq	.L54
 1554              	.LBB4:
 365:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 366:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1555              		.loc 1 366 0 is_stmt 1
 1556 0138 6F4B     		ldr	r3, .L98+52
 1557 013a 1B88     		ldrh	r3, [r3]
 1558 013c 1A46     		mov	r2, r3
 1559 013e 6F4B     		ldr	r3, .L98+56
 1560 0140 9B5C     		ldrb	r3, [r3, r2]
 1561 0142 87F82330 		strb	r3, [r7, #35]
 367:.\main.c      ****                     leftOn = frontSensors[0] && frontSensors[2];
 1562              		.loc 1 367 0
 1563 0146 654B     		ldr	r3, .L98+24
 1564 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 014a 002B     		cmp	r3, #0
 1566 014c 05D0     		beq	.L55
 1567              		.loc 1 367 0 is_stmt 0 discriminator 1
 1568 014e 634B     		ldr	r3, .L98+24
 1569 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1570 0152 002B     		cmp	r3, #0
 1571 0154 01D0     		beq	.L55
 1572              		.loc 1 367 0 discriminator 3
 1573 0156 0123     		movs	r3, #1
 1574 0158 00E0     		b	.L56
 1575              	.L55:
 1576              		.loc 1 367 0 discriminator 4
 1577 015a 0023     		movs	r3, #0
 1578              	.L56:
 1579              		.loc 1 367 0 discriminator 6
 1580 015c DAB2     		uxtb	r2, r3
 1581 015e 684B     		ldr	r3, .L98+60
 1582 0160 1A70     		strb	r2, [r3]
 368:.\main.c      ****                     rightOn = frontSensors[4] && frontSensors[2];
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 36


 1583              		.loc 1 368 0 is_stmt 1 discriminator 6
 1584 0162 5E4B     		ldr	r3, .L98+24
 1585 0164 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1586 0166 002B     		cmp	r3, #0
 1587 0168 05D0     		beq	.L57
 1588              		.loc 1 368 0 is_stmt 0 discriminator 1
 1589 016a 5C4B     		ldr	r3, .L98+24
 1590 016c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1591 016e 002B     		cmp	r3, #0
 1592 0170 01D0     		beq	.L57
 1593              		.loc 1 368 0 discriminator 3
 1594 0172 0123     		movs	r3, #1
 1595 0174 00E0     		b	.L58
 1596              	.L57:
 1597              		.loc 1 368 0 discriminator 4
 1598 0176 0023     		movs	r3, #0
 1599              	.L58:
 1600              		.loc 1 368 0 discriminator 6
 1601 0178 DAB2     		uxtb	r2, r3
 1602 017a 624B     		ldr	r3, .L98+64
 1603 017c 1A70     		strb	r2, [r3]
 369:.\main.c      **** //                    if(nextStep == 'D' && instructions[instructionCount+1] == 0)
 370:.\main.c      **** //                    {
 371:.\main.c      **** //                        instructionCount += 2;
 372:.\main.c      **** //                        nextStep = instructions[instructionCount];
 373:.\main.c      **** //                    }
 374:.\main.c      ****                     
 375:.\main.c      ****                     
 376:.\main.c      **** //                    else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0
 377:.\main.c      **** //                    {
 378:.\main.c      **** //                        if(sensorsDisabled == 0)
 379:.\main.c      **** //                        {
 380:.\main.c      **** //                                if(0)
 381:.\main.c      **** //                                {
 382:.\main.c      **** //                                    char nextInstruction = instructions[instructionCount+2];
 383:.\main.c      **** //                                    if(nextInstruction == 'U')
 384:.\main.c      **** //                                    {
 385:.\main.c      **** //                                        instructionCount += 2;
 386:.\main.c      **** //                                        nextStep = instructions[instructionCount];
 387:.\main.c      **** //                                    }
 388:.\main.c      **** //                                }
 389:.\main.c      **** //                                
 390:.\main.c      **** //                                if(nextStep == 'U')
 391:.\main.c      **** //                                {
 392:.\main.c      **** //                                    actionDebounce++;
 393:.\main.c      **** //                                    if(actionDebounce >= 2400)
 394:.\main.c      **** //                                    {
 395:.\main.c      **** //                                        if(reached_target == 1)
 396:.\main.c      **** //                                        {
 397:.\main.c      **** //                                    char mes[16];
 398:.\main.c      **** //                                    sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 399:.\main.c      **** //                                     UART_PutString(mes);
 400:.\main.c      **** //                                         accum_dist = 0;
 401:.\main.c      **** //                                    uint8 nextStepDist;
 402:.\main.c      **** //                                    if(instructionCount <= instructionLength - 5) nextStepDist = 
 403:.\main.c      **** //                                    else nextStepDist = 0;
 404:.\main.c      **** //                                    
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 37


 405:.\main.c      **** //                                    target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 406:.\main.c      **** //                                    target_distance_quad -= U_OFFSET;
 407:.\main.c      **** //                                    //target_distance_quad += 208;
 408:.\main.c      **** //                                    
 409:.\main.c      **** //                                        UART_PutString("Trigger white light\r\n");
 410:.\main.c      **** //                                        UART_PutString("Deadzone enter\r\n");
 411:.\main.c      **** //                                        
 412:.\main.c      **** //                                        deadzone = 1;
 413:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(U_DEADZONE);
 414:.\main.c      **** //                                        if(target_distance_quad < 0) target_distance_quad = 0;
 415:.\main.c      **** //                                        Timer_Deadzone_Start();
 416:.\main.c      **** //                                        actionDebounce = 0;
 417:.\main.c      **** //                                        sensorsDisabled = 1;
 418:.\main.c      **** //                                        initTurnU();
 419:.\main.c      **** //                                        reached_target = 0;
 420:.\main.c      **** //                                        overshot_target = 0;
 421:.\main.c      **** //                                        instructionCount += 2;
 422:.\main.c      **** //                                        
 423:.\main.c      **** //                                        sprintf(mes, "Target dist: %d\r\n", target_distance_quad)
 424:.\main.c      **** //                                        UART_PutString(mes);
 425:.\main.c      **** //                                        sprintf(mes, "instr count:%d\r\n", instructionCount);
 426:.\main.c      **** //                                        UART_PutString(mes);
 427:.\main.c      **** //                                }
 428:.\main.c      **** //                                }
 429:.\main.c      **** //                            }
 430:.\main.c      **** //                        }
 431:.\main.c      **** //                    }
 432:.\main.c      ****                     //else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U' || nextS
 433:.\main.c      ****                     if (overshot_target == 1)
 1604              		.loc 1 433 0 is_stmt 1 discriminator 6
 1605 017e 624B     		ldr	r3, .L98+68
 1606 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1607 0182 012B     		cmp	r3, #1
 1608 0184 40F05581 		bne	.L59
 1609              	.LBB5:
 434:.\main.c      ****                     {
 435:.\main.c      ****                         
 436:.\main.c      ****                                 //instructionCount += 2;
 437:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 438:.\main.c      ****                                 char mes[16];
 439:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1610              		.loc 1 439 0
 1611 0188 604B     		ldr	r3, .L98+72
 1612 018a 1B88     		ldrh	r3, [r3]
 1613 018c 1BB2     		sxth	r3, r3
 1614 018e 07F11002 		add	r2, r7, #16
 1615 0192 1046     		mov	r0, r2
 1616 0194 5E49     		ldr	r1, .L98+76
 1617 0196 1A46     		mov	r2, r3
 1618 0198 FFF7FEFF 		bl	sprintf
 440:.\main.c      ****                                  UART_PutString(mes);
 1619              		.loc 1 440 0
 1620 019c 07F11003 		add	r3, r7, #16
 1621 01a0 1846     		mov	r0, r3
 1622 01a2 FFF7FEFF 		bl	UART_PutString
 441:.\main.c      ****                                  accum_dist = 0;
 1623              		.loc 1 441 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 38


 1624 01a6 594B     		ldr	r3, .L98+72
 1625 01a8 0022     		movs	r2, #0
 1626 01aa 1A80     		strh	r2, [r3]	@ movhi
 442:.\main.c      ****                                 uint8 nextStepDist;
 443:.\main.c      ****                                 if(instructionCount <= instructionLength - 3) nextStepDist = instru
 1627              		.loc 1 443 0
 1628 01ac 524B     		ldr	r3, .L98+52
 1629 01ae 1B88     		ldrh	r3, [r3]
 1630 01b0 1A46     		mov	r2, r3
 1631 01b2 584B     		ldr	r3, .L98+80
 1632 01b4 1B88     		ldrh	r3, [r3]
 1633 01b6 033B     		subs	r3, r3, #3
 1634 01b8 9A42     		cmp	r2, r3
 1635 01ba 07DC     		bgt	.L60
 1636              		.loc 1 443 0 is_stmt 0 discriminator 1
 1637 01bc 4E4B     		ldr	r3, .L98+52
 1638 01be 1B88     		ldrh	r3, [r3]
 1639 01c0 0333     		adds	r3, r3, #3
 1640 01c2 4E4A     		ldr	r2, .L98+56
 1641 01c4 D35C     		ldrb	r3, [r2, r3]
 1642 01c6 87F82530 		strb	r3, [r7, #37]
 1643 01ca 02E0     		b	.L61
 1644              	.L60:
 444:.\main.c      ****                                 else nextStepDist = 0;
 1645              		.loc 1 444 0 is_stmt 1
 1646 01cc 0023     		movs	r3, #0
 1647 01ce 87F82530 		strb	r3, [r7, #37]
 1648              	.L61:
 445:.\main.c      ****                                 
 446:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1649              		.loc 1 446 0
 1650 01d2 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 1651 01d6 9BB2     		uxth	r3, r3
 1652 01d8 1A46     		mov	r2, r3	@ movhi
 1653 01da D200     		lsls	r2, r2, #3
 1654 01dc 1344     		add	r3, r3, r2
 1655 01de 1B01     		lsls	r3, r3, #4
 1656 01e0 9BB2     		uxth	r3, r3
 1657 01e2 9AB2     		uxth	r2, r3
 1658 01e4 4C4B     		ldr	r3, .L98+84
 1659 01e6 1A80     		strh	r2, [r3]	@ movhi
 447:.\main.c      ****                                 
 448:.\main.c      ****                                 
 449:.\main.c      ****                                     UART_PutString("Trigger quad\r\n");
 1660              		.loc 1 449 0
 1661 01e8 4C48     		ldr	r0, .L98+88
 1662 01ea FFF7FEFF 		bl	UART_PutString
 450:.\main.c      ****                                     switch(nextStep)
 1663              		.loc 1 450 0
 1664 01ee 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1665 01f2 443B     		subs	r3, r3, #68
 1666 01f4 112B     		cmp	r3, #17
 1667 01f6 00F2E880 		bhi	.L62
 1668 01fa 01A2     		adr	r2, .L64
 1669 01fc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1670              		.p2align 2
 1671              	.L64:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 39


 1672 0200 91020000 		.word	.L63+1
 1673 0204 CB030000 		.word	.L62+1
 1674 0208 CB030000 		.word	.L62+1
 1675 020c CB030000 		.word	.L62+1
 1676 0210 CB030000 		.word	.L62+1
 1677 0214 CB030000 		.word	.L62+1
 1678 0218 CB030000 		.word	.L62+1
 1679 021c CB030000 		.word	.L62+1
 1680 0220 7B030000 		.word	.L65+1
 1681 0224 CB030000 		.word	.L62+1
 1682 0228 CB030000 		.word	.L62+1
 1683 022c CB030000 		.word	.L62+1
 1684 0230 CB030000 		.word	.L62+1
 1685 0234 CB030000 		.word	.L62+1
 1686 0238 A3030000 		.word	.L66+1
 1687 023c 31030000 		.word	.L67+1
 1688 0240 CB030000 		.word	.L62+1
 1689 0244 49020000 		.word	.L68+1
 1690              		.p2align 1
 1691              	.L68:
 451:.\main.c      ****                                     {
 452:.\main.c      ****                                         case 'U':
 453:.\main.c      ****                                              Timer_Deadzone_WriteCounter(U_DEADZONE);
 1692              		.loc 1 453 0
 1693 0248 3548     		ldr	r0, .L98+92
 1694 024a FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 454:.\main.c      ****                                             initTurnU();
 1695              		.loc 1 454 0
 1696 024e FFF7FEFF 		bl	initTurnU
 455:.\main.c      ****                                             //target_distance_quad += 208;
 456:.\main.c      ****                                             target_distance_quad -= (U_OFFSET - QUAD_PER_UNIT * 0.5
 1697              		.loc 1 456 0
 1698 0252 314B     		ldr	r3, .L98+84
 1699 0254 1B88     		ldrh	r3, [r3]
 1700 0256 1BB2     		sxth	r3, r3
 1701 0258 1846     		mov	r0, r3
 1702 025a FFF7FEFF 		bl	__aeabi_i2d
 1703 025e 0246     		mov	r2, r0
 1704 0260 0B46     		mov	r3, r1
 1705 0262 1046     		mov	r0, r2
 1706 0264 1946     		mov	r1, r3
 1707 0266 4FF00002 		mov	r2, #0
 1708 026a 2E4B     		ldr	r3, .L98+96
 1709 026c FFF7FEFF 		bl	__aeabi_dsub
 1710 0270 0246     		mov	r2, r0
 1711 0272 0B46     		mov	r3, r1
 1712 0274 1046     		mov	r0, r2
 1713 0276 1946     		mov	r1, r3
 1714 0278 FFF7FEFF 		bl	__aeabi_d2iz
 1715 027c 0346     		mov	r3, r0
 1716 027e 9AB2     		uxth	r2, r3
 1717 0280 254B     		ldr	r3, .L98+84
 1718 0282 1A80     		strh	r2, [r3]	@ movhi
 457:.\main.c      ****                                             Timer_Deadzone_Start();
 1719              		.loc 1 457 0
 1720 0284 FFF7FEFF 		bl	Timer_Deadzone_Start
 458:.\main.c      ****                                              deadzone = 1;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 40


 1721              		.loc 1 458 0
 1722 0288 274B     		ldr	r3, .L98+100
 1723 028a 0122     		movs	r2, #1
 1724 028c 1A70     		strb	r2, [r3]
 459:.\main.c      ****                                         break;
 1725              		.loc 1 459 0
 1726 028e 9CE0     		b	.L62
 1727              	.L63:
 460:.\main.c      ****                                         case 'D':
 461:.\main.c      ****                                             target_distance_quad -= QUAD_PER_UNIT * 0.5;
 1728              		.loc 1 461 0
 1729 0290 214B     		ldr	r3, .L98+84
 1730 0292 1B88     		ldrh	r3, [r3]
 1731 0294 1BB2     		sxth	r3, r3
 1732 0296 1846     		mov	r0, r3
 1733 0298 FFF7FEFF 		bl	__aeabi_i2d
 1734 029c 0246     		mov	r2, r0
 1735 029e 0B46     		mov	r3, r1
 1736 02a0 1046     		mov	r0, r2
 1737 02a2 1946     		mov	r1, r3
 1738 02a4 4FF00002 		mov	r2, #0
 1739 02a8 204B     		ldr	r3, .L98+104
 1740 02aa FFF7FEFF 		bl	__aeabi_dsub
 1741 02ae 0246     		mov	r2, r0
 1742 02b0 0B46     		mov	r3, r1
 1743 02b2 1046     		mov	r0, r2
 1744 02b4 1946     		mov	r1, r3
 1745 02b6 FFF7FEFF 		bl	__aeabi_d2iz
 1746 02ba 0346     		mov	r3, r0
 1747 02bc 9AB2     		uxth	r2, r3
 1748 02be 164B     		ldr	r3, .L98+84
 1749 02c0 1A80     		strh	r2, [r3]	@ movhi
 462:.\main.c      ****                                             //do nothing
 463:.\main.c      ****                                         break;
 1750              		.loc 1 463 0
 1751 02c2 82E0     		b	.L62
 1752              	.L99:
 1753              		.align	2
 1754              	.L98:
 1755 02c4 00000000 		.word	isr_quad1
 1756 02c8 00000000 		.word	isr_turn_timer
 1757 02cc 00000000 		.word	button
 1758 02d0 00000000 		.word	isr_deadzone
 1759 02d4 00000000 		.word	BIN_ENABLED
 1760 02d8 00000000 		.word	BT_ENABLED
 1761 02dc 00000000 		.word	frontSensors
 1762 02e0 00000000 		.word	track_mode
 1763 02e4 00000000 		.word	movement_state
 1764 02e8 00000000 		.word	initial_pos_valid
 1765 02ec 00000000 		.word	system_state
 1766 02f0 00000000 		.word	initial_x_pos
 1767 02f4 00000000 		.word	initial_y_pos
 1768 02f8 00000000 		.word	instructionCount
 1769 02fc 00000000 		.word	instructions
 1770 0300 00000000 		.word	leftOn
 1771 0304 00000000 		.word	rightOn
 1772 0308 00000000 		.word	overshot_target
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 41


 1773 030c 00000000 		.word	accum_dist
 1774 0310 24000000 		.word	.LC2
 1775 0314 00000000 		.word	instructionLength
 1776 0318 00000000 		.word	target_distance_quad
 1777 031c 38000000 		.word	.LC3
 1778 0320 905F0100 		.word	90000
 1779 0324 00004840 		.word	1078460416
 1780 0328 00000000 		.word	deadzone
 1781 032c 00005240 		.word	1079115776
 1782              	.L67:
 464:.\main.c      ****                                         case 'S':
 465:.\main.c      ****                                             inittrackLineZ();
 1783              		.loc 1 465 0
 1784 0330 FFF7FEFF 		bl	inittrackLineZ
 466:.\main.c      ****                                             Timer_Deadzone_WriteCounter(S_DEADZONE);
 1785              		.loc 1 466 0
 1786 0334 42F21070 		movw	r0, #10000
 1787 0338 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 467:.\main.c      ****                                              target_distance_quad -= (QUAD_PER_UNIT * 0.5);
 1788              		.loc 1 467 0
 1789 033c B04B     		ldr	r3, .L100
 1790 033e 1B88     		ldrh	r3, [r3]
 1791 0340 1BB2     		sxth	r3, r3
 1792 0342 1846     		mov	r0, r3
 1793 0344 FFF7FEFF 		bl	__aeabi_i2d
 1794 0348 0246     		mov	r2, r0
 1795 034a 0B46     		mov	r3, r1
 1796 034c 1046     		mov	r0, r2
 1797 034e 1946     		mov	r1, r3
 1798 0350 4FF00002 		mov	r2, #0
 1799 0354 AB4B     		ldr	r3, .L100+4
 1800 0356 FFF7FEFF 		bl	__aeabi_dsub
 1801 035a 0246     		mov	r2, r0
 1802 035c 0B46     		mov	r3, r1
 1803 035e 1046     		mov	r0, r2
 1804 0360 1946     		mov	r1, r3
 1805 0362 FFF7FEFF 		bl	__aeabi_d2iz
 1806 0366 0346     		mov	r3, r0
 1807 0368 9AB2     		uxth	r2, r3
 1808 036a A54B     		ldr	r3, .L100
 1809 036c 1A80     		strh	r2, [r3]	@ movhi
 468:.\main.c      ****                                             Timer_Deadzone_Start();
 1810              		.loc 1 468 0
 1811 036e FFF7FEFF 		bl	Timer_Deadzone_Start
 469:.\main.c      ****                                             deadzone = 1;
 1812              		.loc 1 469 0
 1813 0372 A54B     		ldr	r3, .L100+8
 1814 0374 0122     		movs	r2, #1
 1815 0376 1A70     		strb	r2, [r3]
 470:.\main.c      ****                                         break;
 1816              		.loc 1 470 0
 1817 0378 27E0     		b	.L62
 1818              	.L65:
 471:.\main.c      ****                                         case 'L':
 472:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 473:.\main.c      ****                                         initTurnLeft();
 1819              		.loc 1 473 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 42


 1820 037a FFF7FEFF 		bl	initTurnLeft
 474:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1821              		.loc 1 474 0
 1822 037e 4CF25030 		movw	r0, #50000
 1823 0382 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 475:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1824              		.loc 1 475 0
 1825 0386 9E4B     		ldr	r3, .L100
 1826 0388 1B88     		ldrh	r3, [r3]
 1827 038a 9BB2     		uxth	r3, r3
 1828 038c 8A3B     		subs	r3, r3, #138
 1829 038e 9BB2     		uxth	r3, r3
 1830 0390 9AB2     		uxth	r2, r3
 1831 0392 9B4B     		ldr	r3, .L100
 1832 0394 1A80     		strh	r2, [r3]	@ movhi
 476:.\main.c      ****                                         Timer_Deadzone_Start();
 1833              		.loc 1 476 0
 1834 0396 FFF7FEFF 		bl	Timer_Deadzone_Start
 477:.\main.c      ****                                             deadzone = 1;
 1835              		.loc 1 477 0
 1836 039a 9B4B     		ldr	r3, .L100+8
 1837 039c 0122     		movs	r2, #1
 1838 039e 1A70     		strb	r2, [r3]
 478:.\main.c      ****                                         break;
 1839              		.loc 1 478 0
 1840 03a0 13E0     		b	.L62
 1841              	.L66:
 479:.\main.c      ****                                         case 'R':
 480:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 481:.\main.c      ****                                         initTurnRight();
 1842              		.loc 1 481 0
 1843 03a2 FFF7FEFF 		bl	initTurnRight
 482:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1844              		.loc 1 482 0
 1845 03a6 964B     		ldr	r3, .L100
 1846 03a8 1B88     		ldrh	r3, [r3]
 1847 03aa 9BB2     		uxth	r3, r3
 1848 03ac 8A3B     		subs	r3, r3, #138
 1849 03ae 9BB2     		uxth	r3, r3
 1850 03b0 9AB2     		uxth	r2, r3
 1851 03b2 934B     		ldr	r3, .L100
 1852 03b4 1A80     		strh	r2, [r3]	@ movhi
 483:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 484:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1853              		.loc 1 484 0
 1854 03b6 4CF25030 		movw	r0, #50000
 1855 03ba FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 485:.\main.c      ****                                         Timer_Deadzone_Start();
 1856              		.loc 1 485 0
 1857 03be FFF7FEFF 		bl	Timer_Deadzone_Start
 486:.\main.c      ****                                             deadzone = 1;
 1858              		.loc 1 486 0
 1859 03c2 914B     		ldr	r3, .L100+8
 1860 03c4 0122     		movs	r2, #1
 1861 03c6 1A70     		strb	r2, [r3]
 487:.\main.c      ****                                         break;
 1862              		.loc 1 487 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 43


 1863 03c8 00BF     		nop
 1864              	.L62:
 488:.\main.c      ****                                     }                                   
 489:.\main.c      ****                                     reached_target = 0;
 1865              		.loc 1 489 0
 1866 03ca 904B     		ldr	r3, .L100+12
 1867 03cc 0022     		movs	r2, #0
 1868 03ce 1A70     		strb	r2, [r3]
 490:.\main.c      ****                                     overshot_target = 0;
 1869              		.loc 1 490 0
 1870 03d0 8F4B     		ldr	r3, .L100+16
 1871 03d2 0022     		movs	r2, #0
 1872 03d4 1A70     		strb	r2, [r3]
 491:.\main.c      ****                                     actionDebounce = 0;
 1873              		.loc 1 491 0
 1874 03d6 0023     		movs	r3, #0
 1875 03d8 FB84     		strh	r3, [r7, #38]	@ movhi
 492:.\main.c      ****                                     instructionCount += 2;
 1876              		.loc 1 492 0
 1877 03da 8E4B     		ldr	r3, .L100+20
 1878 03dc 1B88     		ldrh	r3, [r3]
 1879 03de 0233     		adds	r3, r3, #2
 1880 03e0 9AB2     		uxth	r2, r3
 1881 03e2 8C4B     		ldr	r3, .L100+20
 1882 03e4 1A80     		strh	r2, [r3]	@ movhi
 493:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 1883              		.loc 1 493 0
 1884 03e6 864B     		ldr	r3, .L100
 1885 03e8 1B88     		ldrh	r3, [r3]
 1886 03ea 1BB2     		sxth	r3, r3
 1887 03ec 002B     		cmp	r3, #0
 1888 03ee 02DA     		bge	.L69
 1889              		.loc 1 493 0 is_stmt 0 discriminator 1
 1890 03f0 834B     		ldr	r3, .L100
 1891 03f2 0022     		movs	r2, #0
 1892 03f4 1A80     		strh	r2, [r3]	@ movhi
 1893              	.L69:
 494:.\main.c      ****                                     //Timer_Deadzone_Start();
 495:.\main.c      ****                                     //deadzone = 1;
 496:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1894              		.loc 1 496 0 is_stmt 1
 1895 03f6 824B     		ldr	r3, .L100
 1896 03f8 1B88     		ldrh	r3, [r3]
 1897 03fa 1BB2     		sxth	r3, r3
 1898 03fc 07F11002 		add	r2, r7, #16
 1899 0400 1046     		mov	r0, r2
 1900 0402 8549     		ldr	r1, .L100+24
 1901 0404 1A46     		mov	r2, r3
 1902 0406 FFF7FEFF 		bl	sprintf
 497:.\main.c      ****                                     UART_PutString(mes);
 1903              		.loc 1 497 0
 1904 040a 07F11003 		add	r3, r7, #16
 1905 040e 1846     		mov	r0, r3
 1906 0410 FFF7FEFF 		bl	UART_PutString
 498:.\main.c      ****                                     sprintf(mes, "instr count:%d\r\n", instructionCount);
 1907              		.loc 1 498 0
 1908 0414 7F4B     		ldr	r3, .L100+20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 44


 1909 0416 1B88     		ldrh	r3, [r3]
 1910 0418 1A46     		mov	r2, r3
 1911 041a 07F11003 		add	r3, r7, #16
 1912 041e 1846     		mov	r0, r3
 1913 0420 7E49     		ldr	r1, .L100+28
 1914 0422 FFF7FEFF 		bl	sprintf
 499:.\main.c      ****                                     UART_PutString(mes);
 1915              		.loc 1 499 0
 1916 0426 07F11003 		add	r3, r7, #16
 1917 042a 1846     		mov	r0, r3
 1918 042c FFF7FEFF 		bl	UART_PutString
 1919              	.LBE5:
 1920 0430 0AE1     		b	.L54
 1921              	.L59:
 500:.\main.c      ****                     }
 501:.\main.c      ****                     else if((leftOn && (nextStep != 'R')) || (rightOn && (nextStep != 'L'))){ //int
 1922              		.loc 1 501 0
 1923 0432 7B4B     		ldr	r3, .L100+32
 1924 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1925 0436 002B     		cmp	r3, #0
 1926 0438 03D0     		beq	.L70
 1927              		.loc 1 501 0 is_stmt 0 discriminator 1
 1928 043a 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1929 043e 522B     		cmp	r3, #82
 1930 0440 09D1     		bne	.L71
 1931              	.L70:
 1932              		.loc 1 501 0 discriminator 3
 1933 0442 784B     		ldr	r3, .L100+36
 1934 0444 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1935 0446 002B     		cmp	r3, #0
 1936 0448 00F0D580 		beq	.L72
 1937              		.loc 1 501 0 discriminator 4
 1938 044c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1939 0450 4C2B     		cmp	r3, #76
 1940 0452 00F0D080 		beq	.L72
 1941              	.L71:
 502:.\main.c      ****                         if(sensorsDisabled == 0)
 1942              		.loc 1 502 0 is_stmt 1
 1943 0456 744B     		ldr	r3, .L100+40
 1944 0458 1B68     		ldr	r3, [r3]
 1945 045a 002B     		cmp	r3, #0
 1946 045c 40F0CA80 		bne	.L73
 503:.\main.c      ****                         {
 504:.\main.c      ****                             actionDebounce++;
 1947              		.loc 1 504 0
 1948 0460 FB8C     		ldrh	r3, [r7, #38]
 1949 0462 0133     		adds	r3, r3, #1
 1950 0464 FB84     		strh	r3, [r7, #38]	@ movhi
 505:.\main.c      ****                             if(actionDebounce >= 400)
 1951              		.loc 1 505 0
 1952 0466 FB8C     		ldrh	r3, [r7, #38]
 1953 0468 B3F5C87F 		cmp	r3, #400
 1954 046c C0F0C280 		bcc	.L73
 1955              	.LBB6:
 506:.\main.c      ****                             {
 507:.\main.c      ****                                 char mes[16];
 508:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 45


 1956              		.loc 1 508 0
 1957 0470 6E4B     		ldr	r3, .L100+44
 1958 0472 1B88     		ldrh	r3, [r3]
 1959 0474 1BB2     		sxth	r3, r3
 1960 0476 3A46     		mov	r2, r7
 1961 0478 1046     		mov	r0, r2
 1962 047a 6D49     		ldr	r1, .L100+48
 1963 047c 1A46     		mov	r2, r3
 1964 047e FFF7FEFF 		bl	sprintf
 509:.\main.c      ****                                  UART_PutString(mes);
 1965              		.loc 1 509 0
 1966 0482 3B46     		mov	r3, r7
 1967 0484 1846     		mov	r0, r3
 1968 0486 FFF7FEFF 		bl	UART_PutString
 510:.\main.c      ****                             if(reached_target == 1)
 1969              		.loc 1 510 0
 1970 048a 604B     		ldr	r3, .L100+12
 1971 048c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1972 048e 012B     		cmp	r3, #1
 1973 0490 40F0B080 		bne	.L73
 1974              	.LBB7:
 511:.\main.c      ****                             {
 512:.\main.c      **** //                                if(nextStep == 'D')
 513:.\main.c      **** //                                {
 514:.\main.c      **** //                                    instructionCount += 2;
 515:.\main.c      **** //                                    nextStep = instructions[instructionCount]; 
 516:.\main.c      **** //                                }
 517:.\main.c      ****                                 
 518:.\main.c      ****                                 sensorsDisabled = 1;
 1975              		.loc 1 518 0
 1976 0494 644B     		ldr	r3, .L100+40
 1977 0496 0122     		movs	r2, #1
 1978 0498 1A60     		str	r2, [r3]
 519:.\main.c      ****                                 UART_PutString("Trigger intersection\r\n");
 1979              		.loc 1 519 0
 1980 049a 6648     		ldr	r0, .L100+52
 1981 049c FFF7FEFF 		bl	UART_PutString
 520:.\main.c      ****                                 UART_PutString("Deadzone enter\r\n");
 1982              		.loc 1 520 0
 1983 04a0 6548     		ldr	r0, .L100+56
 1984 04a2 FFF7FEFF 		bl	UART_PutString
 521:.\main.c      ****                                 deadzone = 1;
 1985              		.loc 1 521 0
 1986 04a6 584B     		ldr	r3, .L100+8
 1987 04a8 0122     		movs	r2, #1
 1988 04aa 1A70     		strb	r2, [r3]
 522:.\main.c      ****                                 
 523:.\main.c      ****                                 accum_dist = 0;
 1989              		.loc 1 523 0
 1990 04ac 5F4B     		ldr	r3, .L100+44
 1991 04ae 0022     		movs	r2, #0
 1992 04b0 1A80     		strh	r2, [r3]	@ movhi
 524:.\main.c      ****                                 uint8 nextStepDist;
 525:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1993              		.loc 1 525 0
 1994 04b2 584B     		ldr	r3, .L100+20
 1995 04b4 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 46


 1996 04b6 1A46     		mov	r2, r3
 1997 04b8 604B     		ldr	r3, .L100+60
 1998 04ba 1B88     		ldrh	r3, [r3]
 1999 04bc 053B     		subs	r3, r3, #5
 2000 04be 9A42     		cmp	r2, r3
 2001 04c0 07DC     		bgt	.L75
 2002              		.loc 1 525 0 is_stmt 0 discriminator 1
 2003 04c2 544B     		ldr	r3, .L100+20
 2004 04c4 1B88     		ldrh	r3, [r3]
 2005 04c6 0333     		adds	r3, r3, #3
 2006 04c8 5D4A     		ldr	r2, .L100+64
 2007 04ca D35C     		ldrb	r3, [r2, r3]
 2008 04cc 87F82430 		strb	r3, [r7, #36]
 2009 04d0 02E0     		b	.L76
 2010              	.L75:
 526:.\main.c      ****                                 else nextStepDist = 0;
 2011              		.loc 1 526 0 is_stmt 1
 2012 04d2 0023     		movs	r3, #0
 2013 04d4 87F82430 		strb	r3, [r7, #36]
 2014              	.L76:
 527:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2015              		.loc 1 527 0
 2016 04d8 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 2017 04dc 9BB2     		uxth	r3, r3
 2018 04de 1A46     		mov	r2, r3	@ movhi
 2019 04e0 D200     		lsls	r2, r2, #3
 2020 04e2 1344     		add	r3, r3, r2
 2021 04e4 1B01     		lsls	r3, r3, #4
 2022 04e6 9BB2     		uxth	r3, r3
 2023 04e8 9AB2     		uxth	r2, r3
 2024 04ea 454B     		ldr	r3, .L100
 2025 04ec 1A80     		strh	r2, [r3]	@ movhi
 528:.\main.c      ****                                 
 529:.\main.c      ****                                 
 530:.\main.c      ****                                 
 531:.\main.c      ****                                 switch(nextStep)
 2026              		.loc 1 531 0
 2027 04ee 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2028 04f2 4C3B     		subs	r3, r3, #76
 2029 04f4 092B     		cmp	r3, #9
 2030 04f6 4AD8     		bhi	.L96
 2031 04f8 01A2     		adr	r2, .L79
 2032 04fa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2033 04fe 00BF     		.p2align 2
 2034              	.L79:
 2035 0500 37050000 		.word	.L78+1
 2036 0504 8F050000 		.word	.L96+1
 2037 0508 8F050000 		.word	.L96+1
 2038 050c 8F050000 		.word	.L96+1
 2039 0510 8F050000 		.word	.L96+1
 2040 0514 8F050000 		.word	.L96+1
 2041 0518 55050000 		.word	.L80+1
 2042 051c 29050000 		.word	.L81+1
 2043 0520 8F050000 		.word	.L96+1
 2044 0524 73050000 		.word	.L82+1
 2045              		.p2align 1
 2046              	.L81:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 47


 532:.\main.c      ****                                 {
 533:.\main.c      ****                                     case 'S':
 534:.\main.c      ****                                         inittrackLineZ();
 2047              		.loc 1 534 0
 2048 0528 FFF7FEFF 		bl	inittrackLineZ
 535:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 2049              		.loc 1 535 0
 2050 052c 42F21070 		movw	r0, #10000
 2051 0530 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 536:.\main.c      ****                                         //do nothing
 537:.\main.c      ****                                     break;
 2052              		.loc 1 537 0
 2053 0534 2CE0     		b	.L83
 2054              	.L78:
 538:.\main.c      ****                                     case 'L':
 539:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 540:.\main.c      ****                                         initTurnLeft();
 2055              		.loc 1 540 0
 2056 0536 FFF7FEFF 		bl	initTurnLeft
 541:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2057              		.loc 1 541 0
 2058 053a 4CF25030 		movw	r0, #50000
 2059 053e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 542:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2060              		.loc 1 542 0
 2061 0542 2F4B     		ldr	r3, .L100
 2062 0544 1B88     		ldrh	r3, [r3]
 2063 0546 9BB2     		uxth	r3, r3
 2064 0548 8A3B     		subs	r3, r3, #138
 2065 054a 9BB2     		uxth	r3, r3
 2066 054c 9AB2     		uxth	r2, r3
 2067 054e 2C4B     		ldr	r3, .L100
 2068 0550 1A80     		strh	r2, [r3]	@ movhi
 543:.\main.c      ****                                     break;
 2069              		.loc 1 543 0
 2070 0552 1DE0     		b	.L83
 2071              	.L80:
 544:.\main.c      ****                                     case 'R':
 545:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 546:.\main.c      ****                                         initTurnRight();
 2072              		.loc 1 546 0
 2073 0554 FFF7FEFF 		bl	initTurnRight
 547:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2074              		.loc 1 547 0
 2075 0558 294B     		ldr	r3, .L100
 2076 055a 1B88     		ldrh	r3, [r3]
 2077 055c 9BB2     		uxth	r3, r3
 2078 055e 8A3B     		subs	r3, r3, #138
 2079 0560 9BB2     		uxth	r3, r3
 2080 0562 9AB2     		uxth	r2, r3
 2081 0564 264B     		ldr	r3, .L100
 2082 0566 1A80     		strh	r2, [r3]	@ movhi
 548:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 549:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2083              		.loc 1 549 0
 2084 0568 4CF25030 		movw	r0, #50000
 2085 056c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 48


 550:.\main.c      ****                                     break;
 2086              		.loc 1 550 0
 2087 0570 0EE0     		b	.L83
 2088              	.L82:
 551:.\main.c      ****                                     case 'U':
 552:.\main.c      ****                                         // Direction not tracked any more
 553:.\main.c      ****                                         initTurnU();
 2089              		.loc 1 553 0
 2090 0572 FFF7FEFF 		bl	initTurnU
 554:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2091              		.loc 1 554 0
 2092 0576 3348     		ldr	r0, .L100+68
 2093 0578 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 555:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 2094              		.loc 1 555 0
 2095 057c 204B     		ldr	r3, .L100
 2096 057e 1B88     		ldrh	r3, [r3]
 2097 0580 9BB2     		uxth	r3, r3
 2098 0582 783B     		subs	r3, r3, #120
 2099 0584 9BB2     		uxth	r3, r3
 2100 0586 9AB2     		uxth	r2, r3
 2101 0588 1D4B     		ldr	r3, .L100
 2102 058a 1A80     		strh	r2, [r3]	@ movhi
 556:.\main.c      ****                                         //target_distance_quad += 208;
 557:.\main.c      ****                                     break;
 2103              		.loc 1 557 0
 2104 058c 00E0     		b	.L83
 2105              	.L96:
 558:.\main.c      ****                                     
 559:.\main.c      ****                                     default:
 560:.\main.c      ****                                         //do nothing
 561:.\main.c      ****                                         break;
 2106              		.loc 1 561 0
 2107 058e 00BF     		nop
 2108              	.L83:
 562:.\main.c      ****                                 }
 563:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 2109              		.loc 1 563 0
 2110 0590 1B4B     		ldr	r3, .L100
 2111 0592 1B88     		ldrh	r3, [r3]
 2112 0594 1BB2     		sxth	r3, r3
 2113 0596 002B     		cmp	r3, #0
 2114 0598 02DA     		bge	.L84
 2115              		.loc 1 563 0 is_stmt 0 discriminator 1
 2116 059a 194B     		ldr	r3, .L100
 2117 059c 0022     		movs	r2, #0
 2118 059e 1A80     		strh	r2, [r3]	@ movhi
 2119              	.L84:
 564:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2120              		.loc 1 564 0 is_stmt 1
 2121 05a0 174B     		ldr	r3, .L100
 2122 05a2 1B88     		ldrh	r3, [r3]
 2123 05a4 1BB2     		sxth	r3, r3
 2124 05a6 3A46     		mov	r2, r7
 2125 05a8 1046     		mov	r0, r2
 2126 05aa 1B49     		ldr	r1, .L100+24
 2127 05ac 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 49


 2128 05ae FFF7FEFF 		bl	sprintf
 565:.\main.c      ****                                  UART_PutString(mes);
 2129              		.loc 1 565 0
 2130 05b2 3B46     		mov	r3, r7
 2131 05b4 1846     		mov	r0, r3
 2132 05b6 FFF7FEFF 		bl	UART_PutString
 566:.\main.c      ****                                 
 567:.\main.c      ****                                 Timer_Deadzone_Start();
 2133              		.loc 1 567 0
 2134 05ba FFF7FEFF 		bl	Timer_Deadzone_Start
 568:.\main.c      ****                                 reached_target = 0;
 2135              		.loc 1 568 0
 2136 05be 134B     		ldr	r3, .L100+12
 2137 05c0 0022     		movs	r2, #0
 2138 05c2 1A70     		strb	r2, [r3]
 569:.\main.c      ****                                 actionDebounce = 0;
 2139              		.loc 1 569 0
 2140 05c4 0023     		movs	r3, #0
 2141 05c6 FB84     		strh	r3, [r7, #38]	@ movhi
 570:.\main.c      ****                                 overshot_target = 0;
 2142              		.loc 1 570 0
 2143 05c8 114B     		ldr	r3, .L100+16
 2144 05ca 0022     		movs	r2, #0
 2145 05cc 1A70     		strb	r2, [r3]
 571:.\main.c      ****                                 instructionCount += 2;
 2146              		.loc 1 571 0
 2147 05ce 114B     		ldr	r3, .L100+20
 2148 05d0 1B88     		ldrh	r3, [r3]
 2149 05d2 0233     		adds	r3, r3, #2
 2150 05d4 9AB2     		uxth	r2, r3
 2151 05d6 0F4B     		ldr	r3, .L100+20
 2152 05d8 1A80     		strh	r2, [r3]	@ movhi
 572:.\main.c      ****                                 sprintf(mes, "instr count:%d\r\n", instructionCount);
 2153              		.loc 1 572 0
 2154 05da 0E4B     		ldr	r3, .L100+20
 2155 05dc 1B88     		ldrh	r3, [r3]
 2156 05de 1A46     		mov	r2, r3
 2157 05e0 3B46     		mov	r3, r7
 2158 05e2 1846     		mov	r0, r3
 2159 05e4 0D49     		ldr	r1, .L100+28
 2160 05e6 FFF7FEFF 		bl	sprintf
 573:.\main.c      ****                                 UART_PutString(mes);
 2161              		.loc 1 573 0
 2162 05ea 3B46     		mov	r3, r7
 2163 05ec 1846     		mov	r0, r3
 2164 05ee FFF7FEFF 		bl	UART_PutString
 2165              	.LBE7:
 2166              	.LBE6:
 502:.\main.c      ****                         {
 2167              		.loc 1 502 0
 2168 05f2 29E0     		b	.L54
 2169              	.L73:
 502:.\main.c      ****                         {
 2170              		.loc 1 502 0 is_stmt 0 discriminator 2
 2171 05f4 28E0     		b	.L54
 2172              	.L72:
 574:.\main.c      ****                                 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 50


 575:.\main.c      ****                             }
 576:.\main.c      ****                             }
 577:.\main.c      ****                         }
 578:.\main.c      ****                     }
 579:.\main.c      **** //                    else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0
 580:.\main.c      **** //                    {
 581:.\main.c      **** //                        if(sensorsDisabled == 0)
 582:.\main.c      **** //                        {
 583:.\main.c      **** //                                if(0)
 584:.\main.c      **** //                                {
 585:.\main.c      **** //                                    char nextInstruction = instructions[instructionCount+2];
 586:.\main.c      **** //                                    if(nextInstruction == 'U')
 587:.\main.c      **** //                                    {
 588:.\main.c      **** //                                        instructionCount += 2;
 589:.\main.c      **** //                                        nextStep = instructions[instructionCount];
 590:.\main.c      **** //                                    }
 591:.\main.c      **** //                                }
 592:.\main.c      **** //                                
 593:.\main.c      **** //                                if(nextStep == 'U')
 594:.\main.c      **** //                                {
 595:.\main.c      **** //                                    actionDebounce++;
 596:.\main.c      **** //                                    if(actionDebounce >= 2600)
 597:.\main.c      **** //                                    {
 598:.\main.c      **** //                                        if(reached_target == 1)
 599:.\main.c      **** //                                        {
 600:.\main.c      **** //                                    char mes[16];
 601:.\main.c      **** //                                    sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 602:.\main.c      **** //                                     UART_PutString(mes);
 603:.\main.c      **** //                                         accum_dist = 0;
 604:.\main.c      **** //                                    uint8 nextStepDist;
 605:.\main.c      **** //                                    if(instructionCount <= instructionLength - 5) nextStepDist = 
 606:.\main.c      **** //                                    else nextStepDist = 0;
 607:.\main.c      **** //                                    
 608:.\main.c      **** //                                    target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 609:.\main.c      **** //                                    target_distance_quad -= U_OFFSET;
 610:.\main.c      **** //                                    //target_distance_quad += 208;
 611:.\main.c      **** //                                    
 612:.\main.c      **** //                                        UART_PutString("Trigger white light\r\n");
 613:.\main.c      **** //                                        UART_PutString("Deadzone enter\r\n");
 614:.\main.c      **** //                                        
 615:.\main.c      **** //                                        deadzone = 1;
 616:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(U_DEADZONE);
 617:.\main.c      **** //                                        if(target_distance_quad < 0) target_distance_quad = 0;
 618:.\main.c      **** //                                        Timer_Deadzone_Start();
 619:.\main.c      **** //                                        actionDebounce = 0;
 620:.\main.c      **** //                                        sensorsDisabled = 1;
 621:.\main.c      **** //                                        initTurnU();
 622:.\main.c      **** //                                        reached_target = 0;
 623:.\main.c      **** //                                        overshot_target = 0;
 624:.\main.c      **** //                                        instructionCount += 2;
 625:.\main.c      **** //                                        
 626:.\main.c      **** //                                        sprintf(mes, "Target dist: %d\r\n", target_distance_quad)
 627:.\main.c      **** //                                        UART_PutString(mes);
 628:.\main.c      **** //                                        sprintf(mes, "instr count:%d\r\n", instructionCount);
 629:.\main.c      **** //                                        UART_PutString(mes);
 630:.\main.c      **** //                                }
 631:.\main.c      **** //                                }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 51


 632:.\main.c      **** //                            }
 633:.\main.c      **** //                        }
 634:.\main.c      **** //                    }
 635:.\main.c      ****                     else
 636:.\main.c      ****                     {
 637:.\main.c      ****                         inittrackLineZ();
 2173              		.loc 1 637 0 is_stmt 1
 2174 05f6 FFF7FEFF 		bl	inittrackLineZ
 638:.\main.c      ****                         actionDebounce = 0;
 2175              		.loc 1 638 0
 2176 05fa 0023     		movs	r3, #0
 2177 05fc FB84     		strh	r3, [r7, #38]	@ movhi
 2178              	.LBE4:
 639:.\main.c      ****                     }
 640:.\main.c      ****                 }
 641:.\main.c      ****                 break;
 2179              		.loc 1 641 0
 2180 05fe 23E0     		b	.L97
 2181              	.L101:
 2182              		.align	2
 2183              	.L100:
 2184 0600 00000000 		.word	target_distance_quad
 2185 0604 00005240 		.word	1079115776
 2186 0608 00000000 		.word	deadzone
 2187 060c 00000000 		.word	reached_target
 2188 0610 00000000 		.word	overshot_target
 2189 0614 00000000 		.word	instructionCount
 2190 0618 48000000 		.word	.LC4
 2191 061c 5C000000 		.word	.LC5
 2192 0620 00000000 		.word	leftOn
 2193 0624 00000000 		.word	rightOn
 2194 0628 00000000 		.word	sensorsDisabled
 2195 062c 00000000 		.word	accum_dist
 2196 0630 24000000 		.word	.LC2
 2197 0634 70000000 		.word	.LC6
 2198 0638 88000000 		.word	.LC7
 2199 063c 00000000 		.word	instructionLength
 2200 0640 00000000 		.word	instructions
 2201 0644 905F0100 		.word	90000
 2202              	.L54:
 2203              	.L97:
 2204 0648 00BF     		nop
 2205              	.L41:
 642:.\main.c      ****         }
 643:.\main.c      ****         
 644:.\main.c      ****         switch(movement_state)
 2206              		.loc 1 644 0
 2207 064a 184B     		ldr	r3, .L102
 2208 064c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 064e 072B     		cmp	r3, #7
 2210 0650 3FF609AD 		bhi	.L95
 2211 0654 01A2     		adr	r2, .L87
 2212 0656 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2213 065a 00BF     		.p2align 2
 2214              	.L87:
 2215 065c 7D060000 		.word	.L86+1
 2216 0660 83060000 		.word	.L88+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 52


 2217 0664 89060000 		.word	.L89+1
 2218 0668 95060000 		.word	.L90+1
 2219 066c 9B060000 		.word	.L91+1
 2220 0670 A1060000 		.word	.L92+1
 2221 0674 A7060000 		.word	.L93+1
 2222 0678 8F060000 		.word	.L94+1
 2223              		.p2align 1
 2224              	.L86:
 645:.\main.c      ****         {
 646:.\main.c      ****             case DRIVE:
 647:.\main.c      ****                 driveForwards();
 2225              		.loc 1 647 0
 2226 067c FFF7FEFF 		bl	driveForwards
 648:.\main.c      ****             break;
 2227              		.loc 1 648 0
 2228 0680 13E0     		b	.L85
 2229              	.L88:
 649:.\main.c      ****             case LTURN:
 650:.\main.c      ****                 turnLeft();
 2230              		.loc 1 650 0
 2231 0682 FFF7FEFF 		bl	turnLeft
 651:.\main.c      ****             break;
 2232              		.loc 1 651 0
 2233 0686 10E0     		b	.L85
 2234              	.L89:
 652:.\main.c      ****             case RTURN:
 653:.\main.c      ****                 turnRight();
 2235              		.loc 1 653 0
 2236 0688 FFF7FEFF 		bl	turnRight
 654:.\main.c      ****             break;
 2237              		.loc 1 654 0
 2238 068c 0DE0     		b	.L85
 2239              	.L94:
 655:.\main.c      ****             case UTURN:
 656:.\main.c      ****                 turnU();
 2240              		.loc 1 656 0
 2241 068e FFF7FEFF 		bl	turnU
 657:.\main.c      ****             break;
 2242              		.loc 1 657 0
 2243 0692 0AE0     		b	.L85
 2244              	.L90:
 658:.\main.c      ****             case STOPPED:
 659:.\main.c      ****                 brakeMotor();
 2245              		.loc 1 659 0
 2246 0694 FFF7FEFF 		bl	brakeMotor
 660:.\main.c      ****             break;
 2247              		.loc 1 660 0
 2248 0698 07E0     		b	.L85
 2249              	.L91:
 661:.\main.c      ****             case TRACKING:
 662:.\main.c      ****                 trackLine();
 2250              		.loc 1 662 0
 2251 069a FFF7FEFF 		bl	trackLine
 663:.\main.c      ****             break;
 2252              		.loc 1 663 0
 2253 069e 04E0     		b	.L85
 2254              	.L92:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 53


 664:.\main.c      ****             case TRACKING_U:
 665:.\main.c      ****                 trackLineU();
 2255              		.loc 1 665 0
 2256 06a0 FFF7FEFF 		bl	trackLineU
 666:.\main.c      ****             break;
 2257              		.loc 1 666 0
 2258 06a4 01E0     		b	.L85
 2259              	.L93:
 667:.\main.c      ****             case TRACKING_SOFT:
 668:.\main.c      ****                 trackLineZ();
 2260              		.loc 1 668 0
 2261 06a6 FFF7FEFF 		bl	trackLineZ
 2262              	.L85:
 669:.\main.c      ****         }      
 670:.\main.c      ****     }   
 2263              		.loc 1 670 0
 2264 06aa DCE4     		b	.L95
 2265              	.L103:
 2266              		.align	2
 2267              	.L102:
 2268 06ac 00000000 		.word	movement_state
 2269              		.cfi_endproc
 2270              	.LFE71:
 2271              		.size	main, .-main
 2272              		.section	.text.handle_rx_binary,"ax",%progbits
 2273              		.align	2
 2274              		.global	handle_rx_binary
 2275              		.thumb
 2276              		.thumb_func
 2277              		.type	handle_rx_binary, %function
 2278              	handle_rx_binary:
 2279              	.LFB72:
 671:.\main.c      **** }
 672:.\main.c      **** 
 673:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 674:.\main.c      **** 
 675:.\main.c      **** void handle_rx_binary()
 676:.\main.c      **** {
 2280              		.loc 1 676 0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 32
 2283              		@ frame_needed = 1, uses_anonymous_args = 0
 2284              		@ link register save eliminated.
 2285 0000 80B4     		push	{r7}
 2286              		.cfi_def_cfa_offset 4
 2287              		.cfi_offset 7, -4
 2288 0002 89B0     		sub	sp, sp, #36
 2289              		.cfi_def_cfa_offset 40
 2290 0004 00AF     		add	r7, sp, #0
 2291              		.cfi_def_cfa_register 7
 677:.\main.c      ****     if(flag_rx == 1)
 2292              		.loc 1 677 0
 2293 0006 524B     		ldr	r3, .L124
 2294 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2295 000a 012B     		cmp	r3, #1
 2296 000c 40F09A80 		bne	.L104
 2297              	.LBB8:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 54


 678:.\main.c      ****     {    
 679:.\main.c      ****         flag_rx = 0;
 2298              		.loc 1 679 0
 2299 0010 4F4B     		ldr	r3, .L124
 2300 0012 0022     		movs	r2, #0
 2301 0014 1A70     		strb	r2, [r3]
 680:.\main.c      ****         
 681:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2302              		.loc 1 681 0
 2303 0016 4F4B     		ldr	r3, .L124+4
 2304 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2305 001a 1B02     		lsls	r3, r3, #8
 2306 001c 9AB2     		uxth	r2, r3
 2307 001e 4D4B     		ldr	r3, .L124+4
 2308 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2309 0022 9BB2     		uxth	r3, r3
 2310 0024 1343     		orrs	r3, r3, r2
 2311 0026 9BB2     		uxth	r3, r3
 2312 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 682:.\main.c      ****         char byte_packet[12];
 683:.\main.c      ****         char string_packet[12];
 684:.\main.c      ****         
 685:.\main.c      ****         switch(byteCount)
 2313              		.loc 1 685 0
 2314 002a 4B4B     		ldr	r3, .L124+8
 2315 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2316 002e 043B     		subs	r3, r3, #4
 2317 0030 1E2B     		cmp	r3, #30
 2318 0032 00F28780 		bhi	.L104
 2319 0036 01A2     		adr	r2, .L108
 2320 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2321              		.p2align 2
 2322              	.L108:
 2323 003c B9000000 		.word	.L107+1
 2324 0040 45010000 		.word	.L104+1
 2325 0044 CD000000 		.word	.L109+1
 2326 0048 45010000 		.word	.L104+1
 2327 004c D5000000 		.word	.L110+1
 2328 0050 45010000 		.word	.L104+1
 2329 0054 DD000000 		.word	.L111+1
 2330 0058 45010000 		.word	.L104+1
 2331 005c E5000000 		.word	.L112+1
 2332 0060 45010000 		.word	.L104+1
 2333 0064 ED000000 		.word	.L113+1
 2334 0068 45010000 		.word	.L104+1
 2335 006c F5000000 		.word	.L114+1
 2336 0070 45010000 		.word	.L104+1
 2337 0074 FD000000 		.word	.L115+1
 2338 0078 45010000 		.word	.L104+1
 2339 007c 05010000 		.word	.L116+1
 2340 0080 45010000 		.word	.L104+1
 2341 0084 0D010000 		.word	.L117+1
 2342 0088 45010000 		.word	.L104+1
 2343 008c 15010000 		.word	.L118+1
 2344 0090 45010000 		.word	.L104+1
 2345 0094 1D010000 		.word	.L119+1
 2346 0098 45010000 		.word	.L104+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 55


 2347 009c 25010000 		.word	.L120+1
 2348 00a0 45010000 		.word	.L104+1
 2349 00a4 2D010000 		.word	.L121+1
 2350 00a8 45010000 		.word	.L104+1
 2351 00ac 35010000 		.word	.L122+1
 2352 00b0 45010000 		.word	.L104+1
 2353 00b4 3D010000 		.word	.L123+1
 2354              		.p2align 1
 2355              	.L107:
 686:.\main.c      ****         {
 687:.\main.c      ****             case 4:
 688:.\main.c      ****                 buffer_state.rssi = packet[0];
 2356              		.loc 1 688 0
 2357 00b8 264B     		ldr	r3, .L124+4
 2358 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 00bc DAB2     		uxtb	r2, r3
 2360 00be 274B     		ldr	r3, .L124+12
 2361 00c0 1A70     		strb	r2, [r3]
 689:.\main.c      ****                 buffer_state.index = packet[1];
 2362              		.loc 1 689 0
 2363 00c2 244B     		ldr	r3, .L124+4
 2364 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2365 00c6 254B     		ldr	r3, .L124+12
 2366 00c8 5A70     		strb	r2, [r3, #1]
 690:.\main.c      ****             break;
 2367              		.loc 1 690 0
 2368 00ca 3BE0     		b	.L104
 2369              	.L109:
 691:.\main.c      ****             case 6:
 692:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2370              		.loc 1 692 0
 2371 00cc FA8B     		ldrh	r2, [r7, #30]
 2372 00ce 234B     		ldr	r3, .L124+12
 2373 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 693:.\main.c      ****             break;
 2374              		.loc 1 693 0
 2375 00d2 37E0     		b	.L104
 2376              	.L110:
 694:.\main.c      ****             case 8:
 695:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2377              		.loc 1 695 0
 2378 00d4 FA8B     		ldrh	r2, [r7, #30]
 2379 00d6 214B     		ldr	r3, .L124+12
 2380 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 696:.\main.c      ****             break;
 2381              		.loc 1 696 0
 2382 00da 33E0     		b	.L104
 2383              	.L111:
 697:.\main.c      ****             case 10:
 698:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2384              		.loc 1 698 0
 2385 00dc FA8B     		ldrh	r2, [r7, #30]
 2386 00de 1F4B     		ldr	r3, .L124+12
 2387 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 699:.\main.c      ****             break;
 2388              		.loc 1 699 0
 2389 00e2 2FE0     		b	.L104
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 56


 2390              	.L112:
 700:.\main.c      ****             case 12:
 701:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2391              		.loc 1 701 0
 2392 00e4 FA8B     		ldrh	r2, [r7, #30]
 2393 00e6 1D4B     		ldr	r3, .L124+12
 2394 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 702:.\main.c      ****             break;
 2395              		.loc 1 702 0
 2396 00ea 2BE0     		b	.L104
 2397              	.L113:
 703:.\main.c      ****             case 14:
 704:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2398              		.loc 1 704 0
 2399 00ec FA8B     		ldrh	r2, [r7, #30]
 2400 00ee 1B4B     		ldr	r3, .L124+12
 2401 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 705:.\main.c      ****             break;
 2402              		.loc 1 705 0
 2403 00f2 27E0     		b	.L104
 2404              	.L114:
 706:.\main.c      ****             case 16:
 707:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2405              		.loc 1 707 0
 2406 00f4 FA8B     		ldrh	r2, [r7, #30]
 2407 00f6 194B     		ldr	r3, .L124+12
 2408 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 708:.\main.c      ****             break;
 2409              		.loc 1 708 0
 2410 00fa 23E0     		b	.L104
 2411              	.L115:
 709:.\main.c      ****             case 18:
 710:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2412              		.loc 1 710 0
 2413 00fc FA8B     		ldrh	r2, [r7, #30]
 2414 00fe 174B     		ldr	r3, .L124+12
 2415 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 711:.\main.c      ****             break;
 2416              		.loc 1 711 0
 2417 0102 1FE0     		b	.L104
 2418              	.L116:
 712:.\main.c      ****             case 20:
 713:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2419              		.loc 1 713 0
 2420 0104 FA8B     		ldrh	r2, [r7, #30]
 2421 0106 154B     		ldr	r3, .L124+12
 2422 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 714:.\main.c      ****             break;
 2423              		.loc 1 714 0
 2424 010a 1BE0     		b	.L104
 2425              	.L117:
 715:.\main.c      ****             case 22:
 716:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2426              		.loc 1 716 0
 2427 010c FA8B     		ldrh	r2, [r7, #30]
 2428 010e 134B     		ldr	r3, .L124+12
 2429 0110 5A82     		strh	r2, [r3, #18]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 57


 717:.\main.c      ****             break;
 2430              		.loc 1 717 0
 2431 0112 17E0     		b	.L104
 2432              	.L118:
 718:.\main.c      ****             case 24:
 719:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2433              		.loc 1 719 0
 2434 0114 FA8B     		ldrh	r2, [r7, #30]
 2435 0116 114B     		ldr	r3, .L124+12
 2436 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 720:.\main.c      ****             break;
 2437              		.loc 1 720 0
 2438 011a 13E0     		b	.L104
 2439              	.L119:
 721:.\main.c      ****             case 26:
 722:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2440              		.loc 1 722 0
 2441 011c FA8B     		ldrh	r2, [r7, #30]
 2442 011e 0F4B     		ldr	r3, .L124+12
 2443 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 723:.\main.c      ****             break;
 2444              		.loc 1 723 0
 2445 0122 0FE0     		b	.L104
 2446              	.L120:
 724:.\main.c      ****             case 28:
 725:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2447              		.loc 1 725 0
 2448 0124 FA8B     		ldrh	r2, [r7, #30]
 2449 0126 0D4B     		ldr	r3, .L124+12
 2450 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 726:.\main.c      ****             break;
 2451              		.loc 1 726 0
 2452 012a 0BE0     		b	.L104
 2453              	.L121:
 727:.\main.c      ****             case 30:
 728:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2454              		.loc 1 728 0
 2455 012c FA8B     		ldrh	r2, [r7, #30]
 2456 012e 0B4B     		ldr	r3, .L124+12
 2457 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 729:.\main.c      ****             break;
 2458              		.loc 1 729 0
 2459 0132 07E0     		b	.L104
 2460              	.L122:
 730:.\main.c      ****             case 32:
 731:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2461              		.loc 1 731 0
 2462 0134 FA8B     		ldrh	r2, [r7, #30]
 2463 0136 094B     		ldr	r3, .L124+12
 2464 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 732:.\main.c      ****             break;
 2465              		.loc 1 732 0
 2466 013a 03E0     		b	.L104
 2467              	.L123:
 733:.\main.c      ****             case 34:
 734:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2468              		.loc 1 734 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 58


 2469 013c FA8B     		ldrh	r2, [r7, #30]
 2470 013e 074B     		ldr	r3, .L124+12
 2471 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 735:.\main.c      ****             break;
 2472              		.loc 1 735 0
 2473 0142 00BF     		nop
 2474              	.L104:
 2475              	.LBE8:
 736:.\main.c      ****         }
 737:.\main.c      ****     }
 738:.\main.c      **** }
 2476              		.loc 1 738 0
 2477 0144 2437     		adds	r7, r7, #36
 2478              		.cfi_def_cfa_offset 4
 2479 0146 BD46     		mov	sp, r7
 2480              		.cfi_def_cfa_register 13
 2481              		@ sp needed
 2482 0148 5DF8047B 		ldr	r7, [sp], #4
 2483              		.cfi_restore 7
 2484              		.cfi_def_cfa_offset 0
 2485 014c 7047     		bx	lr
 2486              	.L125:
 2487 014e 00BF     		.align	2
 2488              	.L124:
 2489 0150 00000000 		.word	flag_rx
 2490 0154 00000000 		.word	packet
 2491 0158 00000000 		.word	byteCount
 2492 015c 00000000 		.word	buffer_state
 2493              		.cfi_endproc
 2494              	.LFE72:
 2495              		.size	handle_rx_binary, .-handle_rx_binary
 2496              		.section	.text.setLeftDir,"ax",%progbits
 2497              		.align	2
 2498              		.global	setLeftDir
 2499              		.thumb
 2500              		.thumb_func
 2501              		.type	setLeftDir, %function
 2502              	setLeftDir:
 2503              	.LFB73:
 739:.\main.c      **** 
 740:.\main.c      **** void setLeftDir(uint8 dir)
 741:.\main.c      **** {
 2504              		.loc 1 741 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 8
 2507              		@ frame_needed = 1, uses_anonymous_args = 0
 2508 0000 80B5     		push	{r7, lr}
 2509              		.cfi_def_cfa_offset 8
 2510              		.cfi_offset 7, -8
 2511              		.cfi_offset 14, -4
 2512 0002 82B0     		sub	sp, sp, #8
 2513              		.cfi_def_cfa_offset 16
 2514 0004 00AF     		add	r7, sp, #0
 2515              		.cfi_def_cfa_register 7
 2516 0006 0346     		mov	r3, r0
 2517 0008 FB71     		strb	r3, [r7, #7]
 742:.\main.c      ****     M2_IN2_Write(dir);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 59


 2518              		.loc 1 742 0
 2519 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2520 000c 1846     		mov	r0, r3
 2521 000e FFF7FEFF 		bl	M2_IN2_Write
 743:.\main.c      **** }
 2522              		.loc 1 743 0
 2523 0012 0837     		adds	r7, r7, #8
 2524              		.cfi_def_cfa_offset 8
 2525 0014 BD46     		mov	sp, r7
 2526              		.cfi_def_cfa_register 13
 2527              		@ sp needed
 2528 0016 80BD     		pop	{r7, pc}
 2529              		.cfi_endproc
 2530              	.LFE73:
 2531              		.size	setLeftDir, .-setLeftDir
 2532              		.section	.text.setRightDir,"ax",%progbits
 2533              		.align	2
 2534              		.global	setRightDir
 2535              		.thumb
 2536              		.thumb_func
 2537              		.type	setRightDir, %function
 2538              	setRightDir:
 2539              	.LFB74:
 744:.\main.c      **** 
 745:.\main.c      **** void setRightDir(uint8 dir)
 746:.\main.c      **** {
 2540              		.loc 1 746 0
 2541              		.cfi_startproc
 2542              		@ args = 0, pretend = 0, frame = 8
 2543              		@ frame_needed = 1, uses_anonymous_args = 0
 2544 0000 80B5     		push	{r7, lr}
 2545              		.cfi_def_cfa_offset 8
 2546              		.cfi_offset 7, -8
 2547              		.cfi_offset 14, -4
 2548 0002 82B0     		sub	sp, sp, #8
 2549              		.cfi_def_cfa_offset 16
 2550 0004 00AF     		add	r7, sp, #0
 2551              		.cfi_def_cfa_register 7
 2552 0006 0346     		mov	r3, r0
 2553 0008 FB71     		strb	r3, [r7, #7]
 747:.\main.c      ****     M1_IN2_Write(dir);
 2554              		.loc 1 747 0
 2555 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2556 000c 1846     		mov	r0, r3
 2557 000e FFF7FEFF 		bl	M1_IN2_Write
 748:.\main.c      **** }
 2558              		.loc 1 748 0
 2559 0012 0837     		adds	r7, r7, #8
 2560              		.cfi_def_cfa_offset 8
 2561 0014 BD46     		mov	sp, r7
 2562              		.cfi_def_cfa_register 13
 2563              		@ sp needed
 2564 0016 80BD     		pop	{r7, pc}
 2565              		.cfi_endproc
 2566              	.LFE74:
 2567              		.size	setRightDir, .-setRightDir
 2568              		.section	.rodata
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 60


 2569 0099 000000   		.align	2
 2570              	.LC8:
 2571 009c 6469723A 		.ascii	"dir: %d\015\012\000"
 2571      2025640D 
 2571      0A00
 2572              		.section	.text.reverseDirection,"ax",%progbits
 2573              		.align	2
 2574              		.global	reverseDirection
 2575              		.thumb
 2576              		.thumb_func
 2577              		.type	reverseDirection, %function
 2578              	reverseDirection:
 2579              	.LFB75:
 749:.\main.c      **** 
 750:.\main.c      **** void reverseDirection()
 751:.\main.c      **** {
 2580              		.loc 1 751 0
 2581              		.cfi_startproc
 2582              		@ args = 0, pretend = 0, frame = 16
 2583              		@ frame_needed = 1, uses_anonymous_args = 0
 2584 0000 80B5     		push	{r7, lr}
 2585              		.cfi_def_cfa_offset 8
 2586              		.cfi_offset 7, -8
 2587              		.cfi_offset 14, -4
 2588 0002 84B0     		sub	sp, sp, #16
 2589              		.cfi_def_cfa_offset 24
 2590 0004 00AF     		add	r7, sp, #0
 2591              		.cfi_def_cfa_register 7
 752:.\main.c      ****     direction = !direction;
 2592              		.loc 1 752 0
 2593 0006 114B     		ldr	r3, .L129
 2594 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2595 000a 002B     		cmp	r3, #0
 2596 000c 0CBF     		ite	eq
 2597 000e 0123     		moveq	r3, #1
 2598 0010 0023     		movne	r3, #0
 2599 0012 DBB2     		uxtb	r3, r3
 2600 0014 1A46     		mov	r2, r3
 2601 0016 0D4B     		ldr	r3, .L129
 2602 0018 1A70     		strb	r2, [r3]
 753:.\main.c      ****     setLeftDir(direction);
 2603              		.loc 1 753 0
 2604 001a 0C4B     		ldr	r3, .L129
 2605 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2606 001e 1846     		mov	r0, r3
 2607 0020 FFF7FEFF 		bl	setLeftDir
 754:.\main.c      ****     setRightDir(direction);
 2608              		.loc 1 754 0
 2609 0024 094B     		ldr	r3, .L129
 2610 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2611 0028 1846     		mov	r0, r3
 2612 002a FFF7FEFF 		bl	setRightDir
 755:.\main.c      ****     char mes[16];
 756:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2613              		.loc 1 756 0
 2614 002e 074B     		ldr	r3, .L129
 2615 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 61


 2616 0032 1A46     		mov	r2, r3
 2617 0034 3B46     		mov	r3, r7
 2618 0036 1846     		mov	r0, r3
 2619 0038 0549     		ldr	r1, .L129+4
 2620 003a FFF7FEFF 		bl	sprintf
 757:.\main.c      ****     UART_PutString(mes);
 2621              		.loc 1 757 0
 2622 003e 3B46     		mov	r3, r7
 2623 0040 1846     		mov	r0, r3
 2624 0042 FFF7FEFF 		bl	UART_PutString
 758:.\main.c      **** }
 2625              		.loc 1 758 0
 2626 0046 1037     		adds	r7, r7, #16
 2627              		.cfi_def_cfa_offset 8
 2628 0048 BD46     		mov	sp, r7
 2629              		.cfi_def_cfa_register 13
 2630              		@ sp needed
 2631 004a 80BD     		pop	{r7, pc}
 2632              	.L130:
 2633              		.align	2
 2634              	.L129:
 2635 004c 00000000 		.word	direction
 2636 0050 9C000000 		.word	.LC8
 2637              		.cfi_endproc
 2638              	.LFE75:
 2639              		.size	reverseDirection, .-reverseDirection
 2640              		.global	__aeabi_dcmplt
 2641              		.global	__aeabi_ddiv
 2642              		.section	.text.setSpeed,"ax",%progbits
 2643              		.align	2
 2644              		.global	setSpeed
 2645              		.thumb
 2646              		.thumb_func
 2647              		.type	setSpeed, %function
 2648              	setSpeed:
 2649              	.LFB76:
 759:.\main.c      **** 
 760:.\main.c      **** void setSpeed(double left, double right){
 2650              		.loc 1 760 0
 2651              		.cfi_startproc
 2652              		@ args = 0, pretend = 0, frame = 24
 2653              		@ frame_needed = 1, uses_anonymous_args = 0
 2654 0000 80B5     		push	{r7, lr}
 2655              		.cfi_def_cfa_offset 8
 2656              		.cfi_offset 7, -8
 2657              		.cfi_offset 14, -4
 2658 0002 86B0     		sub	sp, sp, #24
 2659              		.cfi_def_cfa_offset 32
 2660 0004 00AF     		add	r7, sp, #0
 2661              		.cfi_def_cfa_register 7
 2662 0006 C7E90201 		strd	r0, [r7, #8]
 2663 000a C7E90023 		strd	r2, [r7]
 761:.\main.c      ****     if(right < 0.0)
 2664              		.loc 1 761 0
 2665 000e D7E90001 		ldrd	r0, [r7]
 2666 0012 4FF00002 		mov	r2, #0
 2667 0016 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 62


 2668 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2669 001e 0346     		mov	r3, r0
 2670 0020 002B     		cmp	r3, #0
 2671 0022 10D0     		beq	.L140
 762:.\main.c      ****     {
 763:.\main.c      ****         //char mes[16];
 764:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 765:.\main.c      ****        // UART_PutString(mes);
 766:.\main.c      ****         setRightDir(!direction);
 2672              		.loc 1 766 0
 2673 0024 304B     		ldr	r3, .L142+8
 2674 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2675 0028 002B     		cmp	r3, #0
 2676 002a 0CBF     		ite	eq
 2677 002c 0123     		moveq	r3, #1
 2678 002e 0023     		movne	r3, #0
 2679 0030 DBB2     		uxtb	r3, r3
 2680 0032 1846     		mov	r0, r3
 2681 0034 FFF7FEFF 		bl	setRightDir
 767:.\main.c      ****         right = -right;
 2682              		.loc 1 767 0
 2683 0038 3B68     		ldr	r3, [r7]
 2684 003a 3B60     		str	r3, [r7]
 2685 003c 7B68     		ldr	r3, [r7, #4]
 2686 003e 83F00043 		eor	r3, r3, #-2147483648
 2687 0042 7B60     		str	r3, [r7, #4]
 2688 0044 04E0     		b	.L134
 2689              	.L140:
 768:.\main.c      ****     }
 769:.\main.c      ****     else setRightDir(direction);
 2690              		.loc 1 769 0
 2691 0046 284B     		ldr	r3, .L142+8
 2692 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 004a 1846     		mov	r0, r3
 2694 004c FFF7FEFF 		bl	setRightDir
 2695              	.L134:
 770:.\main.c      ****     
 771:.\main.c      ****     if(left < 0.0)
 2696              		.loc 1 771 0
 2697 0050 D7E90201 		ldrd	r0, [r7, #8]
 2698 0054 4FF00002 		mov	r2, #0
 2699 0058 4FF00003 		mov	r3, #0
 2700 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2701 0060 0346     		mov	r3, r0
 2702 0062 002B     		cmp	r3, #0
 2703 0064 10D0     		beq	.L141
 772:.\main.c      ****     {
 773:.\main.c      ****        // char mes[16];
 774:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 775:.\main.c      ****         //UART_PutString(mes);
 776:.\main.c      ****         setLeftDir(!direction);
 2704              		.loc 1 776 0
 2705 0066 204B     		ldr	r3, .L142+8
 2706 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2707 006a 002B     		cmp	r3, #0
 2708 006c 0CBF     		ite	eq
 2709 006e 0123     		moveq	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 63


 2710 0070 0023     		movne	r3, #0
 2711 0072 DBB2     		uxtb	r3, r3
 2712 0074 1846     		mov	r0, r3
 2713 0076 FFF7FEFF 		bl	setLeftDir
 777:.\main.c      ****         left = -left;
 2714              		.loc 1 777 0
 2715 007a BB68     		ldr	r3, [r7, #8]
 2716 007c BB60     		str	r3, [r7, #8]
 2717 007e FB68     		ldr	r3, [r7, #12]
 2718 0080 83F00043 		eor	r3, r3, #-2147483648
 2719 0084 FB60     		str	r3, [r7, #12]
 2720 0086 04E0     		b	.L137
 2721              	.L141:
 778:.\main.c      ****     }
 779:.\main.c      ****     else setLeftDir(direction);
 2722              		.loc 1 779 0
 2723 0088 174B     		ldr	r3, .L142+8
 2724 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2725 008c 1846     		mov	r0, r3
 2726 008e FFF7FEFF 		bl	setLeftDir
 2727              	.L137:
 780:.\main.c      ****     
 781:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2728              		.loc 1 781 0
 2729 0092 D7E90201 		ldrd	r0, [r7, #8]
 2730 0096 12A3     		adr	r3, .L142
 2731 0098 D3E90023 		ldrd	r2, [r3]
 2732 009c FFF7FEFF 		bl	__aeabi_ddiv
 2733 00a0 0246     		mov	r2, r0
 2734 00a2 0B46     		mov	r3, r1
 2735 00a4 1046     		mov	r0, r2
 2736 00a6 1946     		mov	r1, r3
 2737 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2738 00ac 0346     		mov	r3, r0
 2739 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 782:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2740              		.loc 1 782 0
 2741 00b0 D7E90001 		ldrd	r0, [r7]
 2742 00b4 0AA3     		adr	r3, .L142
 2743 00b6 D3E90023 		ldrd	r2, [r3]
 2744 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2745 00be 0246     		mov	r2, r0
 2746 00c0 0B46     		mov	r3, r1
 2747 00c2 1046     		mov	r0, r2
 2748 00c4 1946     		mov	r1, r3
 2749 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2750 00ca 0346     		mov	r3, r0
 2751 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 783:.\main.c      ****     
 784:.\main.c      ****     leftSpeedLimit = countsRight;
 2752              		.loc 1 784 0
 2753 00ce 074A     		ldr	r2, .L142+12
 2754 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2755 00d2 1380     		strh	r3, [r2]	@ movhi
 785:.\main.c      ****     rightSpeedLimit = countsLeft;
 2756              		.loc 1 785 0
 2757 00d4 064A     		ldr	r2, .L142+16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 64


 2758 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2759 00d8 1380     		strh	r3, [r2]	@ movhi
 786:.\main.c      **** }
 2760              		.loc 1 786 0
 2761 00da 1837     		adds	r7, r7, #24
 2762              		.cfi_def_cfa_offset 8
 2763 00dc BD46     		mov	sp, r7
 2764              		.cfi_def_cfa_register 13
 2765              		@ sp needed
 2766 00de 80BD     		pop	{r7, pc}
 2767              	.L143:
 2768              		.align	3
 2769              	.L142:
 2770 00e0 969526A5 		.word	-1524197994
 2771 00e4 A0DBEF3F 		.word	1072683936
 2772 00e8 00000000 		.word	direction
 2773 00ec 00000000 		.word	leftSpeedLimit
 2774 00f0 00000000 		.word	rightSpeedLimit
 2775              		.cfi_endproc
 2776              	.LFE76:
 2777              		.size	setSpeed, .-setSpeed
 2778 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2779              		.align	2
 2780              		.global	brakeLeft
 2781              		.thumb
 2782              		.thumb_func
 2783              		.type	brakeLeft, %function
 2784              	brakeLeft:
 2785              	.LFB77:
 787:.\main.c      **** 
 788:.\main.c      **** void brakeLeft()
 789:.\main.c      **** {
 2786              		.loc 1 789 0
 2787              		.cfi_startproc
 2788              		@ args = 0, pretend = 0, frame = 0
 2789              		@ frame_needed = 1, uses_anonymous_args = 0
 2790 0000 80B5     		push	{r7, lr}
 2791              		.cfi_def_cfa_offset 8
 2792              		.cfi_offset 7, -8
 2793              		.cfi_offset 14, -4
 2794 0002 00AF     		add	r7, sp, #0
 2795              		.cfi_def_cfa_register 7
 790:.\main.c      ****     PWM_1_WriteCompare(0);
 2796              		.loc 1 790 0
 2797 0004 0020     		movs	r0, #0
 2798 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 791:.\main.c      ****     left_duty_cycle = 0;
 2799              		.loc 1 791 0
 2800 000a 024B     		ldr	r3, .L145
 2801 000c 0022     		movs	r2, #0
 2802 000e 1A80     		strh	r2, [r3]	@ movhi
 792:.\main.c      **** }
 2803              		.loc 1 792 0
 2804 0010 80BD     		pop	{r7, pc}
 2805              	.L146:
 2806 0012 00BF     		.align	2
 2807              	.L145:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 65


 2808 0014 00000000 		.word	left_duty_cycle
 2809              		.cfi_endproc
 2810              	.LFE77:
 2811              		.size	brakeLeft, .-brakeLeft
 2812              		.section	.text.brakeRight,"ax",%progbits
 2813              		.align	2
 2814              		.global	brakeRight
 2815              		.thumb
 2816              		.thumb_func
 2817              		.type	brakeRight, %function
 2818              	brakeRight:
 2819              	.LFB78:
 793:.\main.c      **** 
 794:.\main.c      **** void brakeRight()
 795:.\main.c      **** {
 2820              		.loc 1 795 0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 0
 2823              		@ frame_needed = 1, uses_anonymous_args = 0
 2824 0000 80B5     		push	{r7, lr}
 2825              		.cfi_def_cfa_offset 8
 2826              		.cfi_offset 7, -8
 2827              		.cfi_offset 14, -4
 2828 0002 00AF     		add	r7, sp, #0
 2829              		.cfi_def_cfa_register 7
 796:.\main.c      ****      PWM_2_WriteCompare(0);
 2830              		.loc 1 796 0
 2831 0004 0020     		movs	r0, #0
 2832 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 797:.\main.c      ****      right_duty_cycle = 0;
 2833              		.loc 1 797 0
 2834 000a 024B     		ldr	r3, .L148
 2835 000c 0022     		movs	r2, #0
 2836 000e 1A80     		strh	r2, [r3]	@ movhi
 798:.\main.c      **** }
 2837              		.loc 1 798 0
 2838 0010 80BD     		pop	{r7, pc}
 2839              	.L149:
 2840 0012 00BF     		.align	2
 2841              	.L148:
 2842 0014 00000000 		.word	right_duty_cycle
 2843              		.cfi_endproc
 2844              	.LFE78:
 2845              		.size	brakeRight, .-brakeRight
 2846              		.section	.text.brakeMotor,"ax",%progbits
 2847              		.align	2
 2848              		.global	brakeMotor
 2849              		.thumb
 2850              		.thumb_func
 2851              		.type	brakeMotor, %function
 2852              	brakeMotor:
 2853              	.LFB79:
 799:.\main.c      **** 
 800:.\main.c      **** void brakeMotor(){
 2854              		.loc 1 800 0
 2855              		.cfi_startproc
 2856              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 66


 2857              		@ frame_needed = 1, uses_anonymous_args = 0
 2858 0000 80B5     		push	{r7, lr}
 2859              		.cfi_def_cfa_offset 8
 2860              		.cfi_offset 7, -8
 2861              		.cfi_offset 14, -4
 2862 0002 00AF     		add	r7, sp, #0
 2863              		.cfi_def_cfa_register 7
 801:.\main.c      ****     setSpeed(0, 0);
 2864              		.loc 1 801 0
 2865 0004 4FF00000 		mov	r0, #0
 2866 0008 4FF00001 		mov	r1, #0
 2867 000c 4FF00002 		mov	r2, #0
 2868 0010 4FF00003 		mov	r3, #0
 2869 0014 FFF7FEFF 		bl	setSpeed
 802:.\main.c      ****     brakeLeft();
 2870              		.loc 1 802 0
 2871 0018 FFF7FEFF 		bl	brakeLeft
 803:.\main.c      ****     brakeRight();
 2872              		.loc 1 803 0
 2873 001c FFF7FEFF 		bl	brakeRight
 804:.\main.c      **** }
 2874              		.loc 1 804 0
 2875 0020 80BD     		pop	{r7, pc}
 2876              		.cfi_endproc
 2877              	.LFE79:
 2878              		.size	brakeMotor, .-brakeMotor
 2879 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2880              		.align	2
 2881              		.global	driveForwards
 2882              		.thumb
 2883              		.thumb_func
 2884              		.type	driveForwards, %function
 2885              	driveForwards:
 2886              	.LFB80:
 805:.\main.c      **** 
 806:.\main.c      **** void driveForwards()
 807:.\main.c      **** {
 2887              		.loc 1 807 0
 2888              		.cfi_startproc
 2889              		@ args = 0, pretend = 0, frame = 0
 2890              		@ frame_needed = 1, uses_anonymous_args = 0
 2891 0000 80B5     		push	{r7, lr}
 2892              		.cfi_def_cfa_offset 8
 2893              		.cfi_offset 7, -8
 2894              		.cfi_offset 14, -4
 2895 0002 00AF     		add	r7, sp, #0
 2896              		.cfi_def_cfa_register 7
 808:.\main.c      ****     setSpeed(speed, speed);
 2897              		.loc 1 808 0
 2898 0004 044B     		ldr	r3, .L152
 2899 0006 D3E90001 		ldrd	r0, [r3]
 2900 000a 034B     		ldr	r3, .L152
 2901 000c D3E90023 		ldrd	r2, [r3]
 2902 0010 FFF7FEFF 		bl	setSpeed
 809:.\main.c      **** }
 2903              		.loc 1 809 0
 2904 0014 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 67


 2905              	.L153:
 2906 0016 00BF     		.align	2
 2907              	.L152:
 2908 0018 00000000 		.word	speed
 2909              		.cfi_endproc
 2910              	.LFE80:
 2911              		.size	driveForwards, .-driveForwards
 2912              		.global	__aeabi_dmul
 2913              		.section	.text.turnRight,"ax",%progbits
 2914              		.align	2
 2915              		.global	turnRight
 2916              		.thumb
 2917              		.thumb_func
 2918              		.type	turnRight, %function
 2919              	turnRight:
 2920              	.LFB81:
 810:.\main.c      **** 
 811:.\main.c      **** void turnRight()
 812:.\main.c      **** {
 2921              		.loc 1 812 0
 2922              		.cfi_startproc
 2923              		@ args = 0, pretend = 0, frame = 0
 2924              		@ frame_needed = 1, uses_anonymous_args = 0
 2925 0000 80B5     		push	{r7, lr}
 2926              		.cfi_def_cfa_offset 8
 2927              		.cfi_offset 7, -8
 2928              		.cfi_offset 14, -4
 2929 0002 00AF     		add	r7, sp, #0
 2930              		.cfi_def_cfa_register 7
 813:.\main.c      ****     setSpeed(0,speed * 1.5);
 2931              		.loc 1 813 0
 2932 0004 094B     		ldr	r3, .L155
 2933 0006 D3E90023 		ldrd	r2, [r3]
 2934 000a 1046     		mov	r0, r2
 2935 000c 1946     		mov	r1, r3
 2936 000e 4FF00002 		mov	r2, #0
 2937 0012 074B     		ldr	r3, .L155+4
 2938 0014 FFF7FEFF 		bl	__aeabi_dmul
 2939 0018 0246     		mov	r2, r0
 2940 001a 0B46     		mov	r3, r1
 2941 001c 4FF00000 		mov	r0, #0
 2942 0020 4FF00001 		mov	r1, #0
 2943 0024 FFF7FEFF 		bl	setSpeed
 814:.\main.c      **** }
 2944              		.loc 1 814 0
 2945 0028 80BD     		pop	{r7, pc}
 2946              	.L156:
 2947 002a 00BF     		.align	2
 2948              	.L155:
 2949 002c 00000000 		.word	speed
 2950 0030 0000F83F 		.word	1073217536
 2951              		.cfi_endproc
 2952              	.LFE81:
 2953              		.size	turnRight, .-turnRight
 2954              		.section	.text.turnLeft,"ax",%progbits
 2955              		.align	2
 2956              		.global	turnLeft
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 68


 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	turnLeft, %function
 2960              	turnLeft:
 2961              	.LFB82:
 815:.\main.c      **** 
 816:.\main.c      **** void turnLeft()
 817:.\main.c      **** {
 2962              		.loc 1 817 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 1, uses_anonymous_args = 0
 2966 0000 80B5     		push	{r7, lr}
 2967              		.cfi_def_cfa_offset 8
 2968              		.cfi_offset 7, -8
 2969              		.cfi_offset 14, -4
 2970 0002 00AF     		add	r7, sp, #0
 2971              		.cfi_def_cfa_register 7
 818:.\main.c      ****     setSpeed(speed * 1.5,0);
 2972              		.loc 1 818 0
 2973 0004 0A4B     		ldr	r3, .L158
 2974 0006 D3E90023 		ldrd	r2, [r3]
 2975 000a 1046     		mov	r0, r2
 2976 000c 1946     		mov	r1, r3
 2977 000e 4FF00002 		mov	r2, #0
 2978 0012 084B     		ldr	r3, .L158+4
 2979 0014 FFF7FEFF 		bl	__aeabi_dmul
 2980 0018 0246     		mov	r2, r0
 2981 001a 0B46     		mov	r3, r1
 2982 001c 1046     		mov	r0, r2
 2983 001e 1946     		mov	r1, r3
 2984 0020 4FF00002 		mov	r2, #0
 2985 0024 4FF00003 		mov	r3, #0
 2986 0028 FFF7FEFF 		bl	setSpeed
 819:.\main.c      **** }
 2987              		.loc 1 819 0
 2988 002c 80BD     		pop	{r7, pc}
 2989              	.L159:
 2990 002e 00BF     		.align	2
 2991              	.L158:
 2992 0030 00000000 		.word	speed
 2993 0034 0000F83F 		.word	1073217536
 2994              		.cfi_endproc
 2995              	.LFE82:
 2996              		.size	turnLeft, .-turnLeft
 2997              		.section	.text.turnU,"ax",%progbits
 2998              		.align	2
 2999              		.global	turnU
 3000              		.thumb
 3001              		.thumb_func
 3002              		.type	turnU, %function
 3003              	turnU:
 3004              	.LFB83:
 820:.\main.c      **** 
 821:.\main.c      **** void turnU()
 822:.\main.c      **** {
 3005              		.loc 1 822 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 69


 3006              		.cfi_startproc
 3007              		@ args = 0, pretend = 0, frame = 0
 3008              		@ frame_needed = 1, uses_anonymous_args = 0
 3009 0000 B0B5     		push	{r4, r5, r7, lr}
 3010              		.cfi_def_cfa_offset 16
 3011              		.cfi_offset 4, -16
 3012              		.cfi_offset 5, -12
 3013              		.cfi_offset 7, -8
 3014              		.cfi_offset 14, -4
 3015 0002 00AF     		add	r7, sp, #0
 3016              		.cfi_def_cfa_register 7
 823:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3017              		.loc 1 823 0
 3018 0004 0F4B     		ldr	r3, .L161
 3019 0006 D3E90023 		ldrd	r2, [r3]
 3020 000a 1046     		mov	r0, r2
 3021 000c 83F00041 		eor	r1, r3, #-2147483648
 3022 0010 4FF00002 		mov	r2, #0
 3023 0014 0C4B     		ldr	r3, .L161+4
 3024 0016 FFF7FEFF 		bl	__aeabi_dmul
 3025 001a 0246     		mov	r2, r0
 3026 001c 0B46     		mov	r3, r1
 3027 001e 1446     		mov	r4, r2
 3028 0020 1D46     		mov	r5, r3
 3029 0022 084B     		ldr	r3, .L161
 3030 0024 D3E90023 		ldrd	r2, [r3]
 3031 0028 1046     		mov	r0, r2
 3032 002a 1946     		mov	r1, r3
 3033 002c 4FF00002 		mov	r2, #0
 3034 0030 054B     		ldr	r3, .L161+4
 3035 0032 FFF7FEFF 		bl	__aeabi_dmul
 3036 0036 0246     		mov	r2, r0
 3037 0038 0B46     		mov	r3, r1
 3038 003a 2046     		mov	r0, r4
 3039 003c 2946     		mov	r1, r5
 3040 003e FFF7FEFF 		bl	setSpeed
 824:.\main.c      **** }
 3041              		.loc 1 824 0
 3042 0042 B0BD     		pop	{r4, r5, r7, pc}
 3043              	.L162:
 3044              		.align	2
 3045              	.L161:
 3046 0044 00000000 		.word	speed
 3047 0048 0000F83F 		.word	1073217536
 3048              		.cfi_endproc
 3049              	.LFE83:
 3050              		.size	turnU, .-turnU
 3051              		.section	.text.initTurnLeft,"ax",%progbits
 3052              		.align	2
 3053              		.global	initTurnLeft
 3054              		.thumb
 3055              		.thumb_func
 3056              		.type	initTurnLeft, %function
 3057              	initTurnLeft:
 3058              	.LFB84:
 825:.\main.c      **** 
 826:.\main.c      **** void initTurnLeft(){
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 70


 3059              		.loc 1 826 0
 3060              		.cfi_startproc
 3061              		@ args = 0, pretend = 0, frame = 0
 3062              		@ frame_needed = 1, uses_anonymous_args = 0
 3063 0000 80B5     		push	{r7, lr}
 3064              		.cfi_def_cfa_offset 8
 3065              		.cfi_offset 7, -8
 3066              		.cfi_offset 14, -4
 3067 0002 00AF     		add	r7, sp, #0
 3068              		.cfi_def_cfa_register 7
 827:.\main.c      ****     Timer_2_Stop();
 3069              		.loc 1 827 0
 3070 0004 FFF7FEFF 		bl	Timer_2_Stop
 828:.\main.c      ****     prev_movement_state = movement_state;
 3071              		.loc 1 828 0
 3072 0008 084B     		ldr	r3, .L164
 3073 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3074 000c 084B     		ldr	r3, .L164+4
 3075 000e 1A70     		strb	r2, [r3]
 829:.\main.c      ****     movement_state = LTURN;
 3076              		.loc 1 829 0
 3077 0010 064B     		ldr	r3, .L164
 3078 0012 0122     		movs	r2, #1
 3079 0014 1A70     		strb	r2, [r3]
 830:.\main.c      ****     brakeLeft();
 3080              		.loc 1 830 0
 3081 0016 FFF7FEFF 		bl	brakeLeft
 831:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3082              		.loc 1 831 0
 3083 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3084 001e 0346     		mov	r3, r0
 3085 0020 1A46     		mov	r2, r3
 3086 0022 044B     		ldr	r3, .L164+8
 3087 0024 1A80     		strh	r2, [r3]	@ movhi
 832:.\main.c      ****     Timer_2_Start();
 3088              		.loc 1 832 0
 3089 0026 FFF7FEFF 		bl	Timer_2_Start
 833:.\main.c      **** }
 3090              		.loc 1 833 0
 3091 002a 80BD     		pop	{r7, pc}
 3092              	.L165:
 3093              		.align	2
 3094              	.L164:
 3095 002c 00000000 		.word	movement_state
 3096 0030 00000000 		.word	prev_movement_state
 3097 0034 00000000 		.word	start_turn_count
 3098              		.cfi_endproc
 3099              	.LFE84:
 3100              		.size	initTurnLeft, .-initTurnLeft
 3101              		.section	.text.initTurnRight,"ax",%progbits
 3102              		.align	2
 3103              		.global	initTurnRight
 3104              		.thumb
 3105              		.thumb_func
 3106              		.type	initTurnRight, %function
 3107              	initTurnRight:
 3108              	.LFB85:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 71


 834:.\main.c      **** 
 835:.\main.c      **** void initTurnRight(){
 3109              		.loc 1 835 0
 3110              		.cfi_startproc
 3111              		@ args = 0, pretend = 0, frame = 0
 3112              		@ frame_needed = 1, uses_anonymous_args = 0
 3113 0000 80B5     		push	{r7, lr}
 3114              		.cfi_def_cfa_offset 8
 3115              		.cfi_offset 7, -8
 3116              		.cfi_offset 14, -4
 3117 0002 00AF     		add	r7, sp, #0
 3118              		.cfi_def_cfa_register 7
 836:.\main.c      ****     Timer_2_Stop();
 3119              		.loc 1 836 0
 3120 0004 FFF7FEFF 		bl	Timer_2_Stop
 837:.\main.c      ****     prev_movement_state = movement_state;
 3121              		.loc 1 837 0
 3122 0008 084B     		ldr	r3, .L167
 3123 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3124 000c 084B     		ldr	r3, .L167+4
 3125 000e 1A70     		strb	r2, [r3]
 838:.\main.c      ****     movement_state = RTURN;
 3126              		.loc 1 838 0
 3127 0010 064B     		ldr	r3, .L167
 3128 0012 0222     		movs	r2, #2
 3129 0014 1A70     		strb	r2, [r3]
 839:.\main.c      ****     brakeRight();
 3130              		.loc 1 839 0
 3131 0016 FFF7FEFF 		bl	brakeRight
 840:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3132              		.loc 1 840 0
 3133 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3134 001e 0346     		mov	r3, r0
 3135 0020 1A46     		mov	r2, r3
 3136 0022 044B     		ldr	r3, .L167+8
 3137 0024 1A80     		strh	r2, [r3]	@ movhi
 841:.\main.c      ****     Timer_2_Start();
 3138              		.loc 1 841 0
 3139 0026 FFF7FEFF 		bl	Timer_2_Start
 842:.\main.c      **** }
 3140              		.loc 1 842 0
 3141 002a 80BD     		pop	{r7, pc}
 3142              	.L168:
 3143              		.align	2
 3144              	.L167:
 3145 002c 00000000 		.word	movement_state
 3146 0030 00000000 		.word	prev_movement_state
 3147 0034 00000000 		.word	start_turn_count
 3148              		.cfi_endproc
 3149              	.LFE85:
 3150              		.size	initTurnRight, .-initTurnRight
 3151              		.section	.text.initTurnU,"ax",%progbits
 3152              		.align	2
 3153              		.global	initTurnU
 3154              		.thumb
 3155              		.thumb_func
 3156              		.type	initTurnU, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 72


 3157              	initTurnU:
 3158              	.LFB86:
 843:.\main.c      **** 
 844:.\main.c      **** void initTurnU(){
 3159              		.loc 1 844 0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 0
 3162              		@ frame_needed = 1, uses_anonymous_args = 0
 3163 0000 80B5     		push	{r7, lr}
 3164              		.cfi_def_cfa_offset 8
 3165              		.cfi_offset 7, -8
 3166              		.cfi_offset 14, -4
 3167 0002 00AF     		add	r7, sp, #0
 3168              		.cfi_def_cfa_register 7
 845:.\main.c      ****     Timer_2_Stop();
 3169              		.loc 1 845 0
 3170 0004 FFF7FEFF 		bl	Timer_2_Stop
 846:.\main.c      ****     prev_movement_state = movement_state;
 3171              		.loc 1 846 0
 3172 0008 084B     		ldr	r3, .L170
 3173 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3174 000c 084B     		ldr	r3, .L170+4
 3175 000e 1A70     		strb	r2, [r3]
 847:.\main.c      ****     movement_state = UTURN;
 3176              		.loc 1 847 0
 3177 0010 064B     		ldr	r3, .L170
 3178 0012 0722     		movs	r2, #7
 3179 0014 1A70     		strb	r2, [r3]
 848:.\main.c      ****     brakeMotor();
 3180              		.loc 1 848 0
 3181 0016 FFF7FEFF 		bl	brakeMotor
 849:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3182              		.loc 1 849 0
 3183 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3184 001e 0346     		mov	r3, r0
 3185 0020 1A46     		mov	r2, r3
 3186 0022 044B     		ldr	r3, .L170+8
 3187 0024 1A80     		strh	r2, [r3]	@ movhi
 850:.\main.c      ****     Timer_2_Start();
 3188              		.loc 1 850 0
 3189 0026 FFF7FEFF 		bl	Timer_2_Start
 851:.\main.c      **** }
 3190              		.loc 1 851 0
 3191 002a 80BD     		pop	{r7, pc}
 3192              	.L171:
 3193              		.align	2
 3194              	.L170:
 3195 002c 00000000 		.word	movement_state
 3196 0030 00000000 		.word	prev_movement_state
 3197 0034 00000000 		.word	start_turn_count
 3198              		.cfi_endproc
 3199              	.LFE86:
 3200              		.size	initTurnU, .-initTurnU
 3201              		.section	.text.initForward,"ax",%progbits
 3202              		.align	2
 3203              		.global	initForward
 3204              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 73


 3205              		.thumb_func
 3206              		.type	initForward, %function
 3207              	initForward:
 3208              	.LFB87:
 852:.\main.c      **** 
 853:.\main.c      **** void initForward(){
 3209              		.loc 1 853 0
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 0
 3212              		@ frame_needed = 1, uses_anonymous_args = 0
 3213 0000 80B5     		push	{r7, lr}
 3214              		.cfi_def_cfa_offset 8
 3215              		.cfi_offset 7, -8
 3216              		.cfi_offset 14, -4
 3217 0002 00AF     		add	r7, sp, #0
 3218              		.cfi_def_cfa_register 7
 854:.\main.c      ****     brakeMotor();
 3219              		.loc 1 854 0
 3220 0004 FFF7FEFF 		bl	brakeMotor
 855:.\main.c      ****     movement_state = DRIVE;
 3221              		.loc 1 855 0
 3222 0008 014B     		ldr	r3, .L173
 3223 000a 0022     		movs	r2, #0
 3224 000c 1A70     		strb	r2, [r3]
 856:.\main.c      **** }
 3225              		.loc 1 856 0
 3226 000e 80BD     		pop	{r7, pc}
 3227              	.L174:
 3228              		.align	2
 3229              	.L173:
 3230 0010 00000000 		.word	movement_state
 3231              		.cfi_endproc
 3232              	.LFE87:
 3233              		.size	initForward, .-initForward
 3234              		.section	.text.initBrake,"ax",%progbits
 3235              		.align	2
 3236              		.global	initBrake
 3237              		.thumb
 3238              		.thumb_func
 3239              		.type	initBrake, %function
 3240              	initBrake:
 3241              	.LFB88:
 857:.\main.c      **** 
 858:.\main.c      **** void initBrake(){
 3242              		.loc 1 858 0
 3243              		.cfi_startproc
 3244              		@ args = 0, pretend = 0, frame = 0
 3245              		@ frame_needed = 1, uses_anonymous_args = 0
 3246              		@ link register save eliminated.
 3247 0000 80B4     		push	{r7}
 3248              		.cfi_def_cfa_offset 4
 3249              		.cfi_offset 7, -4
 3250 0002 00AF     		add	r7, sp, #0
 3251              		.cfi_def_cfa_register 7
 859:.\main.c      ****     movement_state = STOPPED;
 3252              		.loc 1 859 0
 3253 0004 034B     		ldr	r3, .L176
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 74


 3254 0006 0322     		movs	r2, #3
 3255 0008 1A70     		strb	r2, [r3]
 860:.\main.c      **** }
 3256              		.loc 1 860 0
 3257 000a BD46     		mov	sp, r7
 3258              		.cfi_def_cfa_register 13
 3259              		@ sp needed
 3260 000c 5DF8047B 		ldr	r7, [sp], #4
 3261              		.cfi_restore 7
 3262              		.cfi_def_cfa_offset 0
 3263 0010 7047     		bx	lr
 3264              	.L177:
 3265 0012 00BF     		.align	2
 3266              	.L176:
 3267 0014 00000000 		.word	movement_state
 3268              		.cfi_endproc
 3269              	.LFE88:
 3270              		.size	initBrake, .-initBrake
 3271              		.section	.text.initTrack,"ax",%progbits
 3272              		.align	2
 3273              		.global	initTrack
 3274              		.thumb
 3275              		.thumb_func
 3276              		.type	initTrack, %function
 3277              	initTrack:
 3278              	.LFB89:
 861:.\main.c      **** 
 862:.\main.c      **** void initTrack()
 863:.\main.c      **** {
 3279              		.loc 1 863 0
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 0
 3282              		@ frame_needed = 1, uses_anonymous_args = 0
 3283              		@ link register save eliminated.
 3284 0000 80B4     		push	{r7}
 3285              		.cfi_def_cfa_offset 4
 3286              		.cfi_offset 7, -4
 3287 0002 00AF     		add	r7, sp, #0
 3288              		.cfi_def_cfa_register 7
 864:.\main.c      ****     movement_state = TRACKING;
 3289              		.loc 1 864 0
 3290 0004 034B     		ldr	r3, .L179
 3291 0006 0422     		movs	r2, #4
 3292 0008 1A70     		strb	r2, [r3]
 865:.\main.c      **** }
 3293              		.loc 1 865 0
 3294 000a BD46     		mov	sp, r7
 3295              		.cfi_def_cfa_register 13
 3296              		@ sp needed
 3297 000c 5DF8047B 		ldr	r7, [sp], #4
 3298              		.cfi_restore 7
 3299              		.cfi_def_cfa_offset 0
 3300 0010 7047     		bx	lr
 3301              	.L180:
 3302 0012 00BF     		.align	2
 3303              	.L179:
 3304 0014 00000000 		.word	movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 75


 3305              		.cfi_endproc
 3306              	.LFE89:
 3307              		.size	initTrack, .-initTrack
 3308              		.section	.text.initTrackU,"ax",%progbits
 3309              		.align	2
 3310              		.global	initTrackU
 3311              		.thumb
 3312              		.thumb_func
 3313              		.type	initTrackU, %function
 3314              	initTrackU:
 3315              	.LFB90:
 866:.\main.c      **** 
 867:.\main.c      **** void initTrackU(){
 3316              		.loc 1 867 0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 0
 3319              		@ frame_needed = 1, uses_anonymous_args = 0
 3320              		@ link register save eliminated.
 3321 0000 80B4     		push	{r7}
 3322              		.cfi_def_cfa_offset 4
 3323              		.cfi_offset 7, -4
 3324 0002 00AF     		add	r7, sp, #0
 3325              		.cfi_def_cfa_register 7
 868:.\main.c      ****     movement_state = TRACKING_U;
 3326              		.loc 1 868 0
 3327 0004 034B     		ldr	r3, .L182
 3328 0006 0522     		movs	r2, #5
 3329 0008 1A70     		strb	r2, [r3]
 869:.\main.c      **** }
 3330              		.loc 1 869 0
 3331 000a BD46     		mov	sp, r7
 3332              		.cfi_def_cfa_register 13
 3333              		@ sp needed
 3334 000c 5DF8047B 		ldr	r7, [sp], #4
 3335              		.cfi_restore 7
 3336              		.cfi_def_cfa_offset 0
 3337 0010 7047     		bx	lr
 3338              	.L183:
 3339 0012 00BF     		.align	2
 3340              	.L182:
 3341 0014 00000000 		.word	movement_state
 3342              		.cfi_endproc
 3343              	.LFE90:
 3344              		.size	initTrackU, .-initTrackU
 3345              		.section	.text.inittrackLineZ,"ax",%progbits
 3346              		.align	2
 3347              		.global	inittrackLineZ
 3348              		.thumb
 3349              		.thumb_func
 3350              		.type	inittrackLineZ, %function
 3351              	inittrackLineZ:
 3352              	.LFB91:
 870:.\main.c      **** 
 871:.\main.c      **** void inittrackLineZ(){
 3353              		.loc 1 871 0
 3354              		.cfi_startproc
 3355              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 76


 3356              		@ frame_needed = 1, uses_anonymous_args = 0
 3357              		@ link register save eliminated.
 3358 0000 80B4     		push	{r7}
 3359              		.cfi_def_cfa_offset 4
 3360              		.cfi_offset 7, -4
 3361 0002 00AF     		add	r7, sp, #0
 3362              		.cfi_def_cfa_register 7
 872:.\main.c      ****     movement_state = TRACKING_SOFT;
 3363              		.loc 1 872 0
 3364 0004 034B     		ldr	r3, .L185
 3365 0006 0622     		movs	r2, #6
 3366 0008 1A70     		strb	r2, [r3]
 873:.\main.c      **** }
 3367              		.loc 1 873 0
 3368 000a BD46     		mov	sp, r7
 3369              		.cfi_def_cfa_register 13
 3370              		@ sp needed
 3371 000c 5DF8047B 		ldr	r7, [sp], #4
 3372              		.cfi_restore 7
 3373              		.cfi_def_cfa_offset 0
 3374 0010 7047     		bx	lr
 3375              	.L186:
 3376 0012 00BF     		.align	2
 3377              	.L185:
 3378 0014 00000000 		.word	movement_state
 3379              		.cfi_endproc
 3380              	.LFE91:
 3381              		.size	inittrackLineZ, .-inittrackLineZ
 3382              		.section	.text.rxInt,"ax",%progbits
 3383              		.align	2
 3384              		.global	rxInt
 3385              		.thumb
 3386              		.thumb_func
 3387              		.type	rxInt, %function
 3388              	rxInt:
 3389              	.LFB92:
 874:.\main.c      **** 
 875:.\main.c      **** 
 876:.\main.c      **** 
 877:.\main.c      **** //Binary RF Data
 878:.\main.c      **** CY_ISR(rxInt){
 3390              		.loc 1 878 0
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 8
 3393              		@ frame_needed = 1, uses_anonymous_args = 0
 3394 0000 B0B5     		push	{r4, r5, r7, lr}
 3395              		.cfi_def_cfa_offset 16
 3396              		.cfi_offset 4, -16
 3397              		.cfi_offset 5, -12
 3398              		.cfi_offset 7, -8
 3399              		.cfi_offset 14, -4
 3400 0002 82B0     		sub	sp, sp, #8
 3401              		.cfi_def_cfa_offset 24
 3402 0004 00AF     		add	r7, sp, #0
 3403              		.cfi_def_cfa_register 7
 879:.\main.c      ****     char rf_char = UART_GetChar();
 3404              		.loc 1 879 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 77


 3405 0006 FFF7FEFF 		bl	UART_GetChar
 3406 000a 0346     		mov	r3, r0
 3407 000c FB71     		strb	r3, [r7, #7]
 880:.\main.c      ****     if(rf_char == SOP){
 3408              		.loc 1 880 0
 3409 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3410 0010 AA2B     		cmp	r3, #170
 3411 0012 2BD1     		bne	.L188
 881:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 882:.\main.c      ****             if(byteCount == 34)
 3412              		.loc 1 882 0
 3413 0014 224B     		ldr	r3, .L192
 3414 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3415 0018 222B     		cmp	r3, #34
 3416 001a 20D1     		bne	.L189
 883:.\main.c      ****             {
 884:.\main.c      ****                 system_state = buffer_state;
 3417              		.loc 1 884 0
 3418 001c 214B     		ldr	r3, .L192+4
 3419 001e 224A     		ldr	r2, .L192+8
 3420 0020 1568     		ldr	r5, [r2]	@ unaligned
 3421 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3422 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3423 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3424 0028 1D60     		str	r5, [r3]	@ unaligned
 3425 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3426 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3427 002e D960     		str	r1, [r3, #12]	@ unaligned
 3428 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3429 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3430 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3431 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3432 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3433 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3434 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3435 003e D961     		str	r1, [r3, #28]	@ unaligned
 885:.\main.c      ****                 if(initial_pos_valid == 0)
 3436              		.loc 1 885 0
 3437 0040 1A4B     		ldr	r3, .L192+12
 3438 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3439 0044 002B     		cmp	r3, #0
 3440 0046 0AD1     		bne	.L189
 886:.\main.c      ****                 {
 887:.\main.c      ****                     LED_Write(~LED_Read());
 3441              		.loc 1 887 0
 3442 0048 FFF7FEFF 		bl	LED_Read
 3443 004c 0346     		mov	r3, r0
 3444 004e DB43     		mvns	r3, r3
 3445 0050 DBB2     		uxtb	r3, r3
 3446 0052 1846     		mov	r0, r3
 3447 0054 FFF7FEFF 		bl	LED_Write
 888:.\main.c      ****                     initial_pos_valid = 1;
 3448              		.loc 1 888 0
 3449 0058 144B     		ldr	r3, .L192+12
 3450 005a 0122     		movs	r2, #1
 3451 005c 1A70     		strb	r2, [r3]
 3452              	.L189:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 78


 889:.\main.c      ****                 }
 890:.\main.c      ****             }
 891:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3453              		.loc 1 891 0
 3454 005e 104B     		ldr	r3, .L192
 3455 0060 0222     		movs	r2, #2
 3456 0062 1A70     		strb	r2, [r3]
 892:.\main.c      ****             flag_rx = 0;
 3457              		.loc 1 892 0
 3458 0064 124B     		ldr	r3, .L192+16
 3459 0066 0022     		movs	r2, #0
 3460 0068 1A70     		strb	r2, [r3]
 3461 006a 16E0     		b	.L187
 3462              	.L188:
 893:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 894:.\main.c      ****         }
 895:.\main.c      ****         else
 896:.\main.c      ****         {
 897:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3463              		.loc 1 897 0
 3464 006c 0C4B     		ldr	r3, .L192
 3465 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3466 0070 03F00103 		and	r3, r3, #1
 3467 0074 0F49     		ldr	r1, .L192+20
 3468 0076 FA79     		ldrb	r2, [r7, #7]
 3469 0078 CA54     		strb	r2, [r1, r3]
 898:.\main.c      ****            
 899:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3470              		.loc 1 899 0
 3471 007a 094B     		ldr	r3, .L192
 3472 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3473 007e 03F00103 		and	r3, r3, #1
 3474 0082 DBB2     		uxtb	r3, r3
 3475 0084 002B     		cmp	r3, #0
 3476 0086 02D0     		beq	.L191
 900:.\main.c      ****             {
 901:.\main.c      ****                 flag_rx = 1;
 3477              		.loc 1 901 0
 3478 0088 094B     		ldr	r3, .L192+16
 3479 008a 0122     		movs	r2, #1
 3480 008c 1A70     		strb	r2, [r3]
 3481              	.L191:
 902:.\main.c      ****             }
 903:.\main.c      ****             byteCount = (byteCount + 1);
 3482              		.loc 1 903 0
 3483 008e 044B     		ldr	r3, .L192
 3484 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3485 0092 0133     		adds	r3, r3, #1
 3486 0094 DAB2     		uxtb	r2, r3
 3487 0096 024B     		ldr	r3, .L192
 3488 0098 1A70     		strb	r2, [r3]
 3489              	.L187:
 904:.\main.c      ****         }
 905:.\main.c      **** }
 3490              		.loc 1 905 0
 3491 009a 0837     		adds	r7, r7, #8
 3492              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 79


 3493 009c BD46     		mov	sp, r7
 3494              		.cfi_def_cfa_register 13
 3495              		@ sp needed
 3496 009e B0BD     		pop	{r4, r5, r7, pc}
 3497              	.L193:
 3498              		.align	2
 3499              	.L192:
 3500 00a0 00000000 		.word	byteCount
 3501 00a4 00000000 		.word	system_state
 3502 00a8 00000000 		.word	buffer_state
 3503 00ac 00000000 		.word	initial_pos_valid
 3504 00b0 00000000 		.word	flag_rx
 3505 00b4 00000000 		.word	packet
 3506              		.cfi_endproc
 3507              	.LFE92:
 3508              		.size	rxInt, .-rxInt
 3509              		.global	__aeabi_i2f
 3510              		.global	__aeabi_fmul
 3511              		.global	__aeabi_f2iz
 3512              		.section	.rodata
 3513 00a6 0000     		.align	2
 3514              	.LC9:
 3515 00a8 74617267 		.ascii	"target quad: %d\015\012\000"
 3515      65742071 
 3515      7561643A 
 3515      2025640D 
 3515      0A00
 3516 00ba 0000     		.align	2
 3517              	.LC10:
 3518 00bc 72656365 		.ascii	"received: \000"
 3518      69766564 
 3518      3A2000
 3519 00c7 00       		.align	2
 3520              	.LC11:
 3521 00c8 0D0A00   		.ascii	"\015\012\000"
 3522 00cb 00       		.align	2
 3523              	.LC12:
 3524 00cc 73746172 		.ascii	"starting from instruction %d\015\012\000"
 3524      74696E67 
 3524      2066726F 
 3524      6D20696E 
 3524      73747275 
 3525 00eb 00       		.align	2
 3526              	.LC13:
 3527 00ec 6E756D20 		.ascii	"num instruct:%d\015\012\000"
 3527      696E7374 
 3527      72756374 
 3527      3A25640D 
 3527      0A00
 3528              		.section	.text.BT_rxInt,"ax",%progbits
 3529              		.align	2
 3530              		.global	BT_rxInt
 3531              		.thumb
 3532              		.thumb_func
 3533              		.type	BT_rxInt, %function
 3534              	BT_rxInt:
 3535              	.LFB93:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 80


 906:.\main.c      **** 
 907:.\main.c      **** CY_ISR(BT_rxInt)
 908:.\main.c      **** {
 3536              		.loc 1 908 0
 3537              		.cfi_startproc
 3538              		@ args = 0, pretend = 0, frame = 32
 3539              		@ frame_needed = 1, uses_anonymous_args = 0
 3540 0000 80B5     		push	{r7, lr}
 3541              		.cfi_def_cfa_offset 8
 3542              		.cfi_offset 7, -8
 3543              		.cfi_offset 14, -4
 3544 0002 88B0     		sub	sp, sp, #32
 3545              		.cfi_def_cfa_offset 40
 3546 0004 00AF     		add	r7, sp, #0
 3547              		.cfi_def_cfa_register 7
 909:.\main.c      ****     char rf_char = UART_GetChar();
 3548              		.loc 1 909 0
 3549 0006 FFF7FEFF 		bl	UART_GetChar
 3550 000a 0346     		mov	r3, r0
 3551 000c FB77     		strb	r3, [r7, #31]
 910:.\main.c      ****     switch(rf_char){
 3552              		.loc 1 910 0
 3553 000e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3554 0010 313B     		subs	r3, r3, #49
 3555 0012 492B     		cmp	r3, #73
 3556 0014 00F28D82 		bhi	.L194
 3557 0018 01A2     		adr	r2, .L197
 3558 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3559 001e 00BF     		.p2align 2
 3560              	.L197:
 3561 0020 71030000 		.word	.L196+1
 3562 0024 15020000 		.word	.L198+1
 3563 0028 33050000 		.word	.L194+1
 3564 002c 33050000 		.word	.L194+1
 3565 0030 33050000 		.word	.L194+1
 3566 0034 33050000 		.word	.L194+1
 3567 0038 33050000 		.word	.L194+1
 3568 003c 33050000 		.word	.L194+1
 3569 0040 33050000 		.word	.L194+1
 3570 0044 33050000 		.word	.L194+1
 3571 0048 33050000 		.word	.L194+1
 3572 004c 33050000 		.word	.L194+1
 3573 0050 33050000 		.word	.L194+1
 3574 0054 33050000 		.word	.L194+1
 3575 0058 33050000 		.word	.L194+1
 3576 005c 33050000 		.word	.L194+1
 3577 0060 33050000 		.word	.L194+1
 3578 0064 33050000 		.word	.L194+1
 3579 0068 33050000 		.word	.L194+1
 3580 006c 33050000 		.word	.L194+1
 3581 0070 33050000 		.word	.L194+1
 3582 0074 33050000 		.word	.L194+1
 3583 0078 33050000 		.word	.L194+1
 3584 007c 33050000 		.word	.L194+1
 3585 0080 33050000 		.word	.L194+1
 3586 0084 33050000 		.word	.L194+1
 3587 0088 33050000 		.word	.L194+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 81


 3588 008c 33050000 		.word	.L194+1
 3589 0090 33050000 		.word	.L194+1
 3590 0094 33050000 		.word	.L194+1
 3591 0098 33050000 		.word	.L194+1
 3592 009c 33050000 		.word	.L194+1
 3593 00a0 33050000 		.word	.L194+1
 3594 00a4 33050000 		.word	.L194+1
 3595 00a8 33050000 		.word	.L194+1
 3596 00ac 33050000 		.word	.L194+1
 3597 00b0 33050000 		.word	.L194+1
 3598 00b4 33050000 		.word	.L194+1
 3599 00b8 33050000 		.word	.L194+1
 3600 00bc 33050000 		.word	.L194+1
 3601 00c0 33050000 		.word	.L194+1
 3602 00c4 33050000 		.word	.L194+1
 3603 00c8 33050000 		.word	.L194+1
 3604 00cc 33050000 		.word	.L194+1
 3605 00d0 33050000 		.word	.L194+1
 3606 00d4 33050000 		.word	.L194+1
 3607 00d8 33050000 		.word	.L194+1
 3608 00dc 33050000 		.word	.L194+1
 3609 00e0 49010000 		.word	.L199+1
 3610 00e4 33050000 		.word	.L194+1
 3611 00e8 33050000 		.word	.L194+1
 3612 00ec 6D010000 		.word	.L200+1
 3613 00f0 33050000 		.word	.L194+1
 3614 00f4 79010000 		.word	.L201+1
 3615 00f8 33050000 		.word	.L194+1
 3616 00fc 33050000 		.word	.L194+1
 3617 0100 33050000 		.word	.L194+1
 3618 0104 33050000 		.word	.L194+1
 3619 0108 33050000 		.word	.L194+1
 3620 010c 33050000 		.word	.L194+1
 3621 0110 33050000 		.word	.L194+1
 3622 0114 33050000 		.word	.L194+1
 3623 0118 33050000 		.word	.L194+1
 3624 011c 33050000 		.word	.L194+1
 3625 0120 A9010000 		.word	.L202+1
 3626 0124 FF010000 		.word	.L203+1
 3627 0128 61010000 		.word	.L204+1
 3628 012c 85010000 		.word	.L205+1
 3629 0130 91010000 		.word	.L206+1
 3630 0134 33050000 		.word	.L194+1
 3631 0138 55010000 		.word	.L207+1
 3632 013c 33050000 		.word	.L194+1
 3633 0140 33050000 		.word	.L194+1
 3634 0144 9D010000 		.word	.L208+1
 3635              		.p2align 1
 3636              	.L199:
 3637              	.LBB9:
 911:.\main.c      ****     case 'a':
 912:.\main.c      ****         initTurnLeft();
 3638              		.loc 1 912 0
 3639 0148 FFF7FEFF 		bl	initTurnLeft
 913:.\main.c      ****         track_mode = NO_TRACK;
 3640              		.loc 1 913 0
 3641 014c 9C4B     		ldr	r3, .L228
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 82


 3642 014e 0022     		movs	r2, #0
 3643 0150 1A70     		strb	r2, [r3]
 914:.\main.c      ****         break;
 3644              		.loc 1 914 0
 3645 0152 EEE1     		b	.L194
 3646              	.L207:
 915:.\main.c      ****     case 'w':
 916:.\main.c      ****         initForward();
 3647              		.loc 1 916 0
 3648 0154 FFF7FEFF 		bl	initForward
 917:.\main.c      ****         track_mode = NO_TRACK;
 3649              		.loc 1 917 0
 3650 0158 994B     		ldr	r3, .L228
 3651 015a 0022     		movs	r2, #0
 3652 015c 1A70     		strb	r2, [r3]
 918:.\main.c      ****         break;
 3653              		.loc 1 918 0
 3654 015e E8E1     		b	.L194
 3655              	.L204:
 919:.\main.c      ****     case 's': 
 920:.\main.c      ****         reverseDirection();
 3656              		.loc 1 920 0
 3657 0160 FFF7FEFF 		bl	reverseDirection
 921:.\main.c      ****         track_mode = NO_TRACK;
 3658              		.loc 1 921 0
 3659 0164 964B     		ldr	r3, .L228
 3660 0166 0022     		movs	r2, #0
 3661 0168 1A70     		strb	r2, [r3]
 922:.\main.c      ****         break;
 3662              		.loc 1 922 0
 3663 016a E2E1     		b	.L194
 3664              	.L200:
 923:.\main.c      ****     case 'd':
 924:.\main.c      ****         initTurnRight();
 3665              		.loc 1 924 0
 3666 016c FFF7FEFF 		bl	initTurnRight
 925:.\main.c      ****         track_mode = NO_TRACK;
 3667              		.loc 1 925 0
 3668 0170 934B     		ldr	r3, .L228
 3669 0172 0022     		movs	r2, #0
 3670 0174 1A70     		strb	r2, [r3]
 926:.\main.c      ****         break;
 3671              		.loc 1 926 0
 3672 0176 DCE1     		b	.L194
 3673              	.L201:
 927:.\main.c      ****     case 'f':
 928:.\main.c      ****         initBrake();
 3674              		.loc 1 928 0
 3675 0178 FFF7FEFF 		bl	initBrake
 929:.\main.c      ****         track_mode = NO_TRACK;
 3676              		.loc 1 929 0
 3677 017c 904B     		ldr	r3, .L228
 3678 017e 0022     		movs	r2, #0
 3679 0180 1A70     		strb	r2, [r3]
 930:.\main.c      ****         break;
 3680              		.loc 1 930 0
 3681 0182 D6E1     		b	.L194
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 83


 3682              	.L205:
 931:.\main.c      ****     case('t'):
 932:.\main.c      ****         track_mode = CURVE_TRACK;
 3683              		.loc 1 932 0
 3684 0184 8E4B     		ldr	r3, .L228
 3685 0186 0122     		movs	r2, #1
 3686 0188 1A70     		strb	r2, [r3]
 933:.\main.c      ****         initTrack();
 3687              		.loc 1 933 0
 3688 018a FFF7FEFF 		bl	initTrack
 934:.\main.c      ****         break;
 3689              		.loc 1 934 0
 3690 018e D0E1     		b	.L194
 3691              	.L206:
 935:.\main.c      ****     case('u'):
 936:.\main.c      ****         initTrackU();
 3692              		.loc 1 936 0
 3693 0190 FFF7FEFF 		bl	initTrackU
 937:.\main.c      ****         track_mode = U_TRACK;
 3694              		.loc 1 937 0
 3695 0194 8A4B     		ldr	r3, .L228
 3696 0196 0222     		movs	r2, #2
 3697 0198 1A70     		strb	r2, [r3]
 938:.\main.c      ****         break;
 3698              		.loc 1 938 0
 3699 019a CAE1     		b	.L194
 3700              	.L208:
 939:.\main.c      ****     case('z'):
 940:.\main.c      ****         track_mode = SQUARE_TRACK;
 3701              		.loc 1 940 0
 3702 019c 884B     		ldr	r3, .L228
 3703 019e 0322     		movs	r2, #3
 3704 01a0 1A70     		strb	r2, [r3]
 941:.\main.c      ****         inittrackLineZ();
 3705              		.loc 1 941 0
 3706 01a2 FFF7FEFF 		bl	inittrackLineZ
 942:.\main.c      ****         break;
 3707              		.loc 1 942 0
 3708 01a6 C4E1     		b	.L194
 3709              	.L202:
 943:.\main.c      ****     case('q'):
 944:.\main.c      ****         track_mode = QUAD_STOP;
 3710              		.loc 1 944 0
 3711 01a8 854B     		ldr	r3, .L228
 3712 01aa 0422     		movs	r2, #4
 3713 01ac 1A70     		strb	r2, [r3]
 945:.\main.c      ****         accum_dist = 0;
 3714              		.loc 1 945 0
 3715 01ae 854B     		ldr	r3, .L228+4
 3716 01b0 0022     		movs	r2, #0
 3717 01b2 1A80     		strh	r2, [r3]	@ movhi
 946:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3718              		.loc 1 946 0
 3719 01b4 844B     		ldr	r3, .L228+8
 3720 01b6 1B88     		ldrh	r3, [r3]
 3721 01b8 1BB2     		sxth	r3, r3
 3722 01ba 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 84


 3723 01bc FFF7FEFF 		bl	__aeabi_i2f
 3724 01c0 0246     		mov	r2, r0
 3725 01c2 824B     		ldr	r3, .L228+12
 3726 01c4 1B68     		ldr	r3, [r3]	@ float
 3727 01c6 1046     		mov	r0, r2
 3728 01c8 1946     		mov	r1, r3
 3729 01ca FFF7FEFF 		bl	__aeabi_fmul
 3730 01ce 0346     		mov	r3, r0
 3731 01d0 1846     		mov	r0, r3
 3732 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3733 01d6 0346     		mov	r3, r0
 3734 01d8 9AB2     		uxth	r2, r3
 3735 01da 7D4B     		ldr	r3, .L228+16
 3736 01dc 1A80     		strh	r2, [r3]	@ movhi
 947:.\main.c      ****         char mes[16];
 948:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3737              		.loc 1 948 0
 3738 01de 7C4B     		ldr	r3, .L228+16
 3739 01e0 1B88     		ldrh	r3, [r3]
 3740 01e2 1BB2     		sxth	r3, r3
 3741 01e4 3A46     		mov	r2, r7
 3742 01e6 1046     		mov	r0, r2
 3743 01e8 7A49     		ldr	r1, .L228+20
 3744 01ea 1A46     		mov	r2, r3
 3745 01ec FFF7FEFF 		bl	sprintf
 949:.\main.c      ****         UART_PutString(mes);
 3746              		.loc 1 949 0
 3747 01f0 3B46     		mov	r3, r7
 3748 01f2 1846     		mov	r0, r3
 3749 01f4 FFF7FEFF 		bl	UART_PutString
 950:.\main.c      ****         initForward();
 3750              		.loc 1 950 0
 3751 01f8 FFF7FEFF 		bl	initForward
 951:.\main.c      ****         break;
 3752              		.loc 1 951 0
 3753 01fc 99E1     		b	.L194
 3754              	.L203:
 952:.\main.c      ****     case ('r'):
 953:.\main.c      ****         track_mode = RF_STOP;
 3755              		.loc 1 953 0
 3756 01fe 704B     		ldr	r3, .L228
 3757 0200 0522     		movs	r2, #5
 3758 0202 1A70     		strb	r2, [r3]
 954:.\main.c      ****         changeToRF();
 3759              		.loc 1 954 0
 3760 0204 FFF7FEFF 		bl	changeToRF
 955:.\main.c      ****         // Make initial position
 956:.\main.c      ****         initial_pos_valid = 0;
 3761              		.loc 1 956 0
 3762 0208 734B     		ldr	r3, .L228+24
 3763 020a 0022     		movs	r2, #0
 3764 020c 1A70     		strb	r2, [r3]
 957:.\main.c      ****         initBrake();
 3765              		.loc 1 957 0
 3766 020e FFF7FEFF 		bl	initBrake
 958:.\main.c      ****         break;
 3767              		.loc 1 958 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 85


 3768 0212 8EE1     		b	.L194
 3769              	.L198:
 959:.\main.c      ****     case ('2'):
 960:.\main.c      ****         track_mode = DEST_TEST;
 3770              		.loc 1 960 0
 3771 0214 6A4B     		ldr	r3, .L228
 3772 0216 0622     		movs	r2, #6
 3773 0218 1A70     		strb	r2, [r3]
 961:.\main.c      ****         tracked_direction = robot_direction;
 3774              		.loc 1 961 0
 3775 021a 704B     		ldr	r3, .L228+28
 3776 021c 1B68     		ldr	r3, [r3]
 3777 021e 704A     		ldr	r2, .L228+32
 3778 0220 1360     		str	r3, [r2]
 962:.\main.c      ****         instructionLength = generateDirections();
 3779              		.loc 1 962 0
 3780 0222 FFF7FEFF 		bl	generateDirections
 3781 0226 0346     		mov	r3, r0
 3782 0228 9AB2     		uxth	r2, r3
 3783 022a 6E4B     		ldr	r3, .L228+36
 3784 022c 1A80     		strh	r2, [r3]	@ movhi
 963:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 964:.\main.c      ****         //char message[128];
 965:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 966:.\main.c      ****         
 967:.\main.c      ****         last_quad_count1 = 0;
 3785              		.loc 1 967 0
 3786 022e 6E4B     		ldr	r3, .L228+40
 3787 0230 0022     		movs	r2, #0
 3788 0232 1A80     		strh	r2, [r3]	@ movhi
 968:.\main.c      ****         last_quad_count2 = 0;
 3789              		.loc 1 968 0
 3790 0234 6D4B     		ldr	r3, .L228+44
 3791 0236 0022     		movs	r2, #0
 3792 0238 1A80     		strh	r2, [r3]	@ movhi
 969:.\main.c      ****         QuadDec_M1_SetCounter(0);
 3793              		.loc 1 969 0
 3794 023a 0020     		movs	r0, #0
 3795 023c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 970:.\main.c      ****         QuadDec_M2_SetCounter(0);
 3796              		.loc 1 970 0
 3797 0240 0020     		movs	r0, #0
 3798 0242 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 971:.\main.c      ****         instructionCount = 0;
 3799              		.loc 1 971 0
 3800 0246 6A4B     		ldr	r3, .L228+48
 3801 0248 0022     		movs	r2, #0
 3802 024a 1A80     		strh	r2, [r3]	@ movhi
 972:.\main.c      ****         isrRF_RX_Disable();
 3803              		.loc 1 972 0
 3804 024c FFF7FEFF 		bl	isrRF_RX_Disable
 973:.\main.c      ****         while(rf_char != 'F')
 3805              		.loc 1 973 0
 3806 0250 26E0     		b	.L210
 3807              	.L213:
 974:.\main.c      ****         {
 975:.\main.c      ****             rf_char = UART_GetChar();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 86


 3808              		.loc 1 975 0
 3809 0252 FFF7FEFF 		bl	UART_GetChar
 3810 0256 0346     		mov	r3, r0
 3811 0258 FB77     		strb	r3, [r7, #31]
 976:.\main.c      ****             if(rf_char == 'F') break;
 3812              		.loc 1 976 0
 3813 025a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3814 025c 462B     		cmp	r3, #70
 3815 025e 00D1     		bne	.L211
 3816 0260 21E0     		b	.L212
 3817              	.L211:
 977:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 3818              		.loc 1 977 0
 3819 0262 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3820 0264 2F2B     		cmp	r3, #47
 3821 0266 1BD9     		bls	.L210
 3822              		.loc 1 977 0 is_stmt 0 discriminator 1
 3823 0268 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3824 026a 392B     		cmp	r3, #57
 3825 026c 18D8     		bhi	.L210
 978:.\main.c      ****             {
 979:.\main.c      ****                 UART_PutString("received: ");
 3826              		.loc 1 979 0 is_stmt 1
 3827 026e 6148     		ldr	r0, .L228+52
 3828 0270 FFF7FEFF 		bl	UART_PutString
 980:.\main.c      ****                 UART_PutChar(rf_char);
 3829              		.loc 1 980 0
 3830 0274 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3831 0276 1846     		mov	r0, r3
 3832 0278 FFF7FEFF 		bl	UART_PutChar
 981:.\main.c      ****                 UART_PutString("\r\n");
 3833              		.loc 1 981 0
 3834 027c 5E48     		ldr	r0, .L228+56
 3835 027e FFF7FEFF 		bl	UART_PutString
 982:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 3836              		.loc 1 982 0
 3837 0282 5B4B     		ldr	r3, .L228+48
 3838 0284 1B88     		ldrh	r3, [r3]
 3839 0286 1A46     		mov	r2, r3	@ movhi
 3840 0288 9200     		lsls	r2, r2, #2
 3841 028a 1344     		add	r3, r3, r2
 3842 028c 5B00     		lsls	r3, r3, #1
 3843 028e 9AB2     		uxth	r2, r3
 3844 0290 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3845 0292 9BB2     		uxth	r3, r3
 3846 0294 1344     		add	r3, r3, r2
 3847 0296 9BB2     		uxth	r3, r3
 3848 0298 303B     		subs	r3, r3, #48
 3849 029a 9AB2     		uxth	r2, r3
 3850 029c 544B     		ldr	r3, .L228+48
 3851 029e 1A80     		strh	r2, [r3]	@ movhi
 3852              	.L210:
 973:.\main.c      ****         {
 3853              		.loc 1 973 0
 3854 02a0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3855 02a2 462B     		cmp	r3, #70
 3856 02a4 D5D1     		bne	.L213
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 87


 3857              	.L212:
 983:.\main.c      ****             }
 984:.\main.c      ****             
 985:.\main.c      ****         }
 986:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3858              		.loc 1 986 0
 3859 02a6 5548     		ldr	r0, .L228+60
 3860 02a8 FFF7FEFF 		bl	isrRF_RX_StartEx
 987:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 3861              		.loc 1 987 0
 3862 02ac 504B     		ldr	r3, .L228+48
 3863 02ae 1B88     		ldrh	r3, [r3]
 3864 02b0 1A46     		mov	r2, r3
 3865 02b2 3B46     		mov	r3, r7
 3866 02b4 1846     		mov	r0, r3
 3867 02b6 5249     		ldr	r1, .L228+64
 3868 02b8 FFF7FEFF 		bl	sprintf
 988:.\main.c      ****         UART_PutString(mes);
 3869              		.loc 1 988 0
 3870 02bc 3B46     		mov	r3, r7
 3871 02be 1846     		mov	r0, r3
 3872 02c0 FFF7FEFF 		bl	UART_PutString
 989:.\main.c      ****         
 990:.\main.c      ****         int i;
 991:.\main.c      ****         for(i = instructionCount;i < instructionLength; i++)
 3873              		.loc 1 991 0
 3874 02c4 4A4B     		ldr	r3, .L228+48
 3875 02c6 1B88     		ldrh	r3, [r3]
 3876 02c8 BB61     		str	r3, [r7, #24]
 3877 02ca 18E0     		b	.L214
 3878              	.L217:
 992:.\main.c      ****         {
 993:.\main.c      ****             if(i%2 == 0)
 3879              		.loc 1 993 0
 3880 02cc BB69     		ldr	r3, [r7, #24]
 3881 02ce 03F00103 		and	r3, r3, #1
 3882 02d2 002B     		cmp	r3, #0
 3883 02d4 07D1     		bne	.L215
 994:.\main.c      ****             {
 995:.\main.c      ****                 UART_PutChar(instructions[i]);
 3884              		.loc 1 995 0
 3885 02d6 4B4A     		ldr	r2, .L228+68
 3886 02d8 BB69     		ldr	r3, [r7, #24]
 3887 02da 1344     		add	r3, r3, r2
 3888 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3889 02de 1846     		mov	r0, r3
 3890 02e0 FFF7FEFF 		bl	UART_PutChar
 3891 02e4 08E0     		b	.L216
 3892              	.L215:
 996:.\main.c      ****             }
 997:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3893              		.loc 1 997 0
 3894 02e6 474A     		ldr	r2, .L228+68
 3895 02e8 BB69     		ldr	r3, [r7, #24]
 3896 02ea 1344     		add	r3, r3, r2
 3897 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3898 02ee 3033     		adds	r3, r3, #48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 88


 3899 02f0 DBB2     		uxtb	r3, r3
 3900 02f2 1846     		mov	r0, r3
 3901 02f4 FFF7FEFF 		bl	UART_PutChar
 3902              	.L216:
 991:.\main.c      ****         {
 3903              		.loc 1 991 0 discriminator 2
 3904 02f8 BB69     		ldr	r3, [r7, #24]
 3905 02fa 0133     		adds	r3, r3, #1
 3906 02fc BB61     		str	r3, [r7, #24]
 3907              	.L214:
 991:.\main.c      ****         {
 3908              		.loc 1 991 0 is_stmt 0 discriminator 1
 3909 02fe 394B     		ldr	r3, .L228+36
 3910 0300 1B88     		ldrh	r3, [r3]
 3911 0302 1A46     		mov	r2, r3
 3912 0304 BB69     		ldr	r3, [r7, #24]
 3913 0306 9A42     		cmp	r2, r3
 3914 0308 E0DC     		bgt	.L217
 998:.\main.c      **** 
 999:.\main.c      ****         }
1000:.\main.c      ****         
1001:.\main.c      ****         UART_PutString("\r\n");
 3915              		.loc 1 1001 0 is_stmt 1
 3916 030a 3B48     		ldr	r0, .L228+56
 3917 030c FFF7FEFF 		bl	UART_PutString
1002:.\main.c      ****         
1003:.\main.c      ****         char nextStep = instructions[instructionCount];
 3918              		.loc 1 1003 0
 3919 0310 374B     		ldr	r3, .L228+48
 3920 0312 1B88     		ldrh	r3, [r3]
 3921 0314 1A46     		mov	r2, r3
 3922 0316 3B4B     		ldr	r3, .L228+68
 3923 0318 9B5C     		ldrb	r3, [r3, r2]
 3924 031a FB74     		strb	r3, [r7, #19]
1004:.\main.c      ****         
1005:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];
 3925              		.loc 1 1005 0
 3926 031c 344B     		ldr	r3, .L228+48
 3927 031e 1B88     		ldrh	r3, [r3]
 3928 0320 0133     		adds	r3, r3, #1
 3929 0322 384A     		ldr	r2, .L228+68
 3930 0324 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3931 0326 9BB2     		uxth	r3, r3
 3932 0328 1A46     		mov	r2, r3	@ movhi
 3933 032a D200     		lsls	r2, r2, #3
 3934 032c 1344     		add	r3, r3, r2
 3935 032e 1B01     		lsls	r3, r3, #4
 3936 0330 9BB2     		uxth	r3, r3
 3937 0332 9AB2     		uxth	r2, r3
 3938 0334 264B     		ldr	r3, .L228+16
 3939 0336 1A80     		strh	r2, [r3]	@ movhi
1006:.\main.c      ****         if(instructionCount == 0) target_distance_quad -= QUAD_PER_UNIT; 
 3940              		.loc 1 1006 0
 3941 0338 2D4B     		ldr	r3, .L228+48
 3942 033a 1B88     		ldrh	r3, [r3]
 3943 033c 002B     		cmp	r3, #0
 3944 033e 07D1     		bne	.L218
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 89


 3945              		.loc 1 1006 0 is_stmt 0 discriminator 1
 3946 0340 234B     		ldr	r3, .L228+16
 3947 0342 1B88     		ldrh	r3, [r3]
 3948 0344 9BB2     		uxth	r3, r3
 3949 0346 903B     		subs	r3, r3, #144
 3950 0348 9BB2     		uxth	r3, r3
 3951 034a 9AB2     		uxth	r2, r3
 3952 034c 204B     		ldr	r3, .L228+16
 3953 034e 1A80     		strh	r2, [r3]	@ movhi
 3954              	.L218:
1007:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 3955              		.loc 1 1007 0 is_stmt 1
 3956 0350 1F4B     		ldr	r3, .L228+16
 3957 0352 1B88     		ldrh	r3, [r3]
 3958 0354 1BB2     		sxth	r3, r3
 3959 0356 3A46     		mov	r2, r7
 3960 0358 1046     		mov	r0, r2
 3961 035a 2B49     		ldr	r1, .L228+72
 3962 035c 1A46     		mov	r2, r3
 3963 035e FFF7FEFF 		bl	sprintf
1008:.\main.c      ****         UART_PutString(mes);
 3964              		.loc 1 1008 0
 3965 0362 3B46     		mov	r3, r7
 3966 0364 1846     		mov	r0, r3
 3967 0366 FFF7FEFF 		bl	UART_PutString
1009:.\main.c      ****         inittrackLineZ();
 3968              		.loc 1 1009 0
 3969 036a FFF7FEFF 		bl	inittrackLineZ
1010:.\main.c      ****         break;
 3970              		.loc 1 1010 0
 3971 036e E0E0     		b	.L194
 3972              	.L196:
1011:.\main.c      ****     case ('1'):
1012:.\main.c      ****         track_mode = DEST_TEST;
 3973              		.loc 1 1012 0
 3974 0370 134B     		ldr	r3, .L228
 3975 0372 0622     		movs	r2, #6
 3976 0374 1A70     		strb	r2, [r3]
1013:.\main.c      ****         tracked_direction = robot_direction;
 3977              		.loc 1 1013 0
 3978 0376 194B     		ldr	r3, .L228+28
 3979 0378 1B68     		ldr	r3, [r3]
 3980 037a 194A     		ldr	r2, .L228+32
 3981 037c 1360     		str	r3, [r2]
1014:.\main.c      ****         //instructionLength = generateDirections();
1015:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3982              		.loc 1 1015 0
 3983 037e FFF7FEFF 		bl	generateEntireMapDirections
 3984 0382 0346     		mov	r3, r0
 3985 0384 9AB2     		uxth	r2, r3
 3986 0386 174B     		ldr	r3, .L228+36
 3987 0388 1A80     		strh	r2, [r3]	@ movhi
1016:.\main.c      ****         //char message[128];
1017:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
1018:.\main.c      ****         instructionCount = 0;
 3988              		.loc 1 1018 0
 3989 038a 194B     		ldr	r3, .L228+48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 90


 3990 038c 0022     		movs	r2, #0
 3991 038e 1A80     		strh	r2, [r3]	@ movhi
1019:.\main.c      ****         QuadDec_M1_SetCounter(0);
 3992              		.loc 1 1019 0
 3993 0390 0020     		movs	r0, #0
 3994 0392 FFF7FEFF 		bl	QuadDec_M1_SetCounter
1020:.\main.c      ****         QuadDec_M2_SetCounter(0);
 3995              		.loc 1 1020 0
 3996 0396 0020     		movs	r0, #0
 3997 0398 FFF7FEFF 		bl	QuadDec_M2_SetCounter
1021:.\main.c      ****         last_quad_count1 = 0;
 3998              		.loc 1 1021 0
 3999 039c 124B     		ldr	r3, .L228+40
 4000 039e 0022     		movs	r2, #0
 4001 03a0 1A80     		strh	r2, [r3]	@ movhi
1022:.\main.c      ****         last_quad_count2 = 0;
 4002              		.loc 1 1022 0
 4003 03a2 124B     		ldr	r3, .L228+44
 4004 03a4 0022     		movs	r2, #0
 4005 03a6 1A80     		strh	r2, [r3]	@ movhi
1023:.\main.c      ****         isrRF_RX_Disable();
 4006              		.loc 1 1023 0
 4007 03a8 FFF7FEFF 		bl	isrRF_RX_Disable
1024:.\main.c      ****         while(rf_char != 'F')
 4008              		.loc 1 1024 0
 4009 03ac 4DE0     		b	.L219
 4010              	.L222:
1025:.\main.c      ****         {
1026:.\main.c      ****             rf_char = UART_GetChar();
 4011              		.loc 1 1026 0
 4012 03ae FFF7FEFF 		bl	UART_GetChar
 4013 03b2 0346     		mov	r3, r0
 4014 03b4 FB77     		strb	r3, [r7, #31]
1027:.\main.c      ****             if(rf_char == 'F') break;
 4015              		.loc 1 1027 0
 4016 03b6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4017 03b8 462B     		cmp	r3, #70
 4018 03ba 27D1     		bne	.L220
 4019 03bc 48E0     		b	.L221
 4020              	.L229:
 4021 03be 00BF     		.align	2
 4022              	.L228:
 4023 03c0 00000000 		.word	track_mode
 4024 03c4 00000000 		.word	accum_dist
 4025 03c8 00000000 		.word	target_distance_cm
 4026 03cc 00000000 		.word	quad_per_cm
 4027 03d0 00000000 		.word	target_distance_quad
 4028 03d4 A8000000 		.word	.LC9
 4029 03d8 00000000 		.word	initial_pos_valid
 4030 03dc 00000000 		.word	robot_direction
 4031 03e0 00000000 		.word	tracked_direction
 4032 03e4 00000000 		.word	instructionLength
 4033 03e8 00000000 		.word	last_quad_count1
 4034 03ec 00000000 		.word	last_quad_count2
 4035 03f0 00000000 		.word	instructionCount
 4036 03f4 BC000000 		.word	.LC10
 4037 03f8 C8000000 		.word	.LC11
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 91


 4038 03fc 00000000 		.word	BT_rxInt
 4039 0400 CC000000 		.word	.LC12
 4040 0404 00000000 		.word	instructions
 4041 0408 48000000 		.word	.LC4
 4042              	.L220:
1028:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 4043              		.loc 1 1028 0
 4044 040c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4045 040e 2F2B     		cmp	r3, #47
 4046 0410 1BD9     		bls	.L219
 4047              		.loc 1 1028 0 is_stmt 0 discriminator 1
 4048 0412 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4049 0414 392B     		cmp	r3, #57
 4050 0416 18D8     		bhi	.L219
1029:.\main.c      ****             {
1030:.\main.c      ****                 UART_PutString("received: ");
 4051              		.loc 1 1030 0 is_stmt 1
 4052 0418 4748     		ldr	r0, .L230
 4053 041a FFF7FEFF 		bl	UART_PutString
1031:.\main.c      ****                 UART_PutChar(rf_char);
 4054              		.loc 1 1031 0
 4055 041e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4056 0420 1846     		mov	r0, r3
 4057 0422 FFF7FEFF 		bl	UART_PutChar
1032:.\main.c      ****                 UART_PutString("\r\n");
 4058              		.loc 1 1032 0
 4059 0426 4548     		ldr	r0, .L230+4
 4060 0428 FFF7FEFF 		bl	UART_PutString
1033:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4061              		.loc 1 1033 0
 4062 042c 444B     		ldr	r3, .L230+8
 4063 042e 1B88     		ldrh	r3, [r3]
 4064 0430 1A46     		mov	r2, r3	@ movhi
 4065 0432 9200     		lsls	r2, r2, #2
 4066 0434 1344     		add	r3, r3, r2
 4067 0436 5B00     		lsls	r3, r3, #1
 4068 0438 9AB2     		uxth	r2, r3
 4069 043a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4070 043c 9BB2     		uxth	r3, r3
 4071 043e 1344     		add	r3, r3, r2
 4072 0440 9BB2     		uxth	r3, r3
 4073 0442 303B     		subs	r3, r3, #48
 4074 0444 9AB2     		uxth	r2, r3
 4075 0446 3E4B     		ldr	r3, .L230+8
 4076 0448 1A80     		strh	r2, [r3]	@ movhi
 4077              	.L219:
1024:.\main.c      ****         {
 4078              		.loc 1 1024 0
 4079 044a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4080 044c 462B     		cmp	r3, #70
 4081 044e AED1     		bne	.L222
 4082              	.L221:
1034:.\main.c      ****             }
1035:.\main.c      ****             
1036:.\main.c      ****         }
1037:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4083              		.loc 1 1037 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 92


 4084 0450 3C48     		ldr	r0, .L230+12
 4085 0452 FFF7FEFF 		bl	isrRF_RX_StartEx
1038:.\main.c      ****         sprintf(mes, "num instruct:%d\r\n", instructionLength);
 4086              		.loc 1 1038 0
 4087 0456 3C4B     		ldr	r3, .L230+16
 4088 0458 1B88     		ldrh	r3, [r3]
 4089 045a 1A46     		mov	r2, r3
 4090 045c 3B46     		mov	r3, r7
 4091 045e 1846     		mov	r0, r3
 4092 0460 3A49     		ldr	r1, .L230+20
 4093 0462 FFF7FEFF 		bl	sprintf
1039:.\main.c      ****         UART_PutString(mes);
 4094              		.loc 1 1039 0
 4095 0466 3B46     		mov	r3, r7
 4096 0468 1846     		mov	r0, r3
 4097 046a FFF7FEFF 		bl	UART_PutString
1040:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4098              		.loc 1 1040 0
 4099 046e 344B     		ldr	r3, .L230+8
 4100 0470 1B88     		ldrh	r3, [r3]
 4101 0472 1A46     		mov	r2, r3
 4102 0474 3B46     		mov	r3, r7
 4103 0476 1846     		mov	r0, r3
 4104 0478 3549     		ldr	r1, .L230+24
 4105 047a FFF7FEFF 		bl	sprintf
1041:.\main.c      ****         UART_PutString(mes);
 4106              		.loc 1 1041 0
 4107 047e 3B46     		mov	r3, r7
 4108 0480 1846     		mov	r0, r3
 4109 0482 FFF7FEFF 		bl	UART_PutString
1042:.\main.c      ****         //instructionCount = instructionLength - 22;
1043:.\main.c      ****         int x;
1044:.\main.c      ****         
1045:.\main.c      **** //        for(x  = instructionCount; x < instructionLength; x+=2)
1046:.\main.c      **** //        {
1047:.\main.c      **** //            char step = instructions[x];
1048:.\main.c      **** //            uint8_t dist = instructions[x+1];
1049:.\main.c      **** //            
1050:.\main.c      **** //            if(step == 'D' && dist == 0)
1051:.\main.c      **** //            {
1052:.\main.c      **** //            }
1053:.\main.c      **** //            else
1054:.\main.c      **** //            {
1055:.\main.c      **** //                
1056:.\main.c      **** //            }
1057:.\main.c      **** //        }
1058:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 4110              		.loc 1 1058 0
 4111 0486 2E4B     		ldr	r3, .L230+8
 4112 0488 1B88     		ldrh	r3, [r3]
 4113 048a 7B61     		str	r3, [r7, #20]
 4114 048c 18E0     		b	.L223
 4115              	.L226:
1059:.\main.c      ****         {
1060:.\main.c      ****             
1061:.\main.c      ****             if(x%2 == 0)
 4116              		.loc 1 1061 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 93


 4117 048e 7B69     		ldr	r3, [r7, #20]
 4118 0490 03F00103 		and	r3, r3, #1
 4119 0494 002B     		cmp	r3, #0
 4120 0496 07D1     		bne	.L224
1062:.\main.c      ****             {
1063:.\main.c      ****                 UART_PutChar(instructions[x]);
 4121              		.loc 1 1063 0
 4122 0498 2E4A     		ldr	r2, .L230+28
 4123 049a 7B69     		ldr	r3, [r7, #20]
 4124 049c 1344     		add	r3, r3, r2
 4125 049e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 04a0 1846     		mov	r0, r3
 4127 04a2 FFF7FEFF 		bl	UART_PutChar
 4128 04a6 08E0     		b	.L225
 4129              	.L224:
1064:.\main.c      ****             }
1065:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 4130              		.loc 1 1065 0
 4131 04a8 2A4A     		ldr	r2, .L230+28
 4132 04aa 7B69     		ldr	r3, [r7, #20]
 4133 04ac 1344     		add	r3, r3, r2
 4134 04ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4135 04b0 3033     		adds	r3, r3, #48
 4136 04b2 DBB2     		uxtb	r3, r3
 4137 04b4 1846     		mov	r0, r3
 4138 04b6 FFF7FEFF 		bl	UART_PutChar
 4139              	.L225:
1058:.\main.c      ****         {
 4140              		.loc 1 1058 0 discriminator 2
 4141 04ba 7B69     		ldr	r3, [r7, #20]
 4142 04bc 0133     		adds	r3, r3, #1
 4143 04be 7B61     		str	r3, [r7, #20]
 4144              	.L223:
1058:.\main.c      ****         {
 4145              		.loc 1 1058 0 is_stmt 0 discriminator 1
 4146 04c0 214B     		ldr	r3, .L230+16
 4147 04c2 1B88     		ldrh	r3, [r3]
 4148 04c4 1A46     		mov	r2, r3
 4149 04c6 7B69     		ldr	r3, [r7, #20]
 4150 04c8 9A42     		cmp	r2, r3
 4151 04ca E0DC     		bgt	.L226
1066:.\main.c      **** 
1067:.\main.c      ****         }
1068:.\main.c      ****         
1069:.\main.c      ****         UART_PutString("\r\n");
 4152              		.loc 1 1069 0 is_stmt 1
 4153 04cc 1B48     		ldr	r0, .L230+4
 4154 04ce FFF7FEFF 		bl	UART_PutString
1070:.\main.c      **** 
1071:.\main.c      ****         nextStep = instructions[instructionCount];
 4155              		.loc 1 1071 0
 4156 04d2 1B4B     		ldr	r3, .L230+8
 4157 04d4 1B88     		ldrh	r3, [r3]
 4158 04d6 1A46     		mov	r2, r3
 4159 04d8 1E4B     		ldr	r3, .L230+28
 4160 04da 9B5C     		ldrb	r3, [r3, r2]
 4161 04dc FB74     		strb	r3, [r7, #19]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 94


1072:.\main.c      ****         
1073:.\main.c      ****         
1074:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1]; 
 4162              		.loc 1 1074 0
 4163 04de 184B     		ldr	r3, .L230+8
 4164 04e0 1B88     		ldrh	r3, [r3]
 4165 04e2 0133     		adds	r3, r3, #1
 4166 04e4 1B4A     		ldr	r2, .L230+28
 4167 04e6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4168 04e8 9BB2     		uxth	r3, r3
 4169 04ea 1A46     		mov	r2, r3	@ movhi
 4170 04ec D200     		lsls	r2, r2, #3
 4171 04ee 1344     		add	r3, r3, r2
 4172 04f0 1B01     		lsls	r3, r3, #4
 4173 04f2 9BB2     		uxth	r3, r3
 4174 04f4 9AB2     		uxth	r2, r3
 4175 04f6 184B     		ldr	r3, .L230+32
 4176 04f8 1A80     		strh	r2, [r3]	@ movhi
1075:.\main.c      ****         if(instructionCount == 0) target_distance_quad += QUAD_PER_UNIT; 
 4177              		.loc 1 1075 0
 4178 04fa 114B     		ldr	r3, .L230+8
 4179 04fc 1B88     		ldrh	r3, [r3]
 4180 04fe 002B     		cmp	r3, #0
 4181 0500 07D1     		bne	.L227
 4182              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4183 0502 154B     		ldr	r3, .L230+32
 4184 0504 1B88     		ldrh	r3, [r3]
 4185 0506 9BB2     		uxth	r3, r3
 4186 0508 9033     		adds	r3, r3, #144
 4187 050a 9BB2     		uxth	r3, r3
 4188 050c 9AB2     		uxth	r2, r3
 4189 050e 124B     		ldr	r3, .L230+32
 4190 0510 1A80     		strh	r2, [r3]	@ movhi
 4191              	.L227:
1076:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4192              		.loc 1 1076 0 is_stmt 1
 4193 0512 114B     		ldr	r3, .L230+32
 4194 0514 1B88     		ldrh	r3, [r3]
 4195 0516 1BB2     		sxth	r3, r3
 4196 0518 3A46     		mov	r2, r7
 4197 051a 1046     		mov	r0, r2
 4198 051c 0F49     		ldr	r1, .L230+36
 4199 051e 1A46     		mov	r2, r3
 4200 0520 FFF7FEFF 		bl	sprintf
1077:.\main.c      ****         UART_PutString(mes);
 4201              		.loc 1 1077 0
 4202 0524 3B46     		mov	r3, r7
 4203 0526 1846     		mov	r0, r3
 4204 0528 FFF7FEFF 		bl	UART_PutString
1078:.\main.c      ****         inittrackLineZ();
 4205              		.loc 1 1078 0
 4206 052c FFF7FEFF 		bl	inittrackLineZ
1079:.\main.c      ****         break;
 4207              		.loc 1 1079 0
 4208 0530 00BF     		nop
 4209              	.L194:
 4210              	.LBE9:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 95


1080:.\main.c      ****     }
1081:.\main.c      **** }
 4211              		.loc 1 1081 0
 4212 0532 2037     		adds	r7, r7, #32
 4213              		.cfi_def_cfa_offset 8
 4214 0534 BD46     		mov	sp, r7
 4215              		.cfi_def_cfa_register 13
 4216              		@ sp needed
 4217 0536 80BD     		pop	{r7, pc}
 4218              	.L231:
 4219              		.align	2
 4220              	.L230:
 4221 0538 BC000000 		.word	.LC10
 4222 053c C8000000 		.word	.LC11
 4223 0540 00000000 		.word	instructionCount
 4224 0544 00000000 		.word	BT_rxInt
 4225 0548 00000000 		.word	instructionLength
 4226 054c EC000000 		.word	.LC13
 4227 0550 CC000000 		.word	.LC12
 4228 0554 00000000 		.word	instructions
 4229 0558 00000000 		.word	target_distance_quad
 4230 055c 48000000 		.word	.LC4
 4231              		.cfi_endproc
 4232              	.LFE93:
 4233              		.size	BT_rxInt, .-BT_rxInt
 4234              		.section	.text.changeToRF,"ax",%progbits
 4235              		.align	2
 4236              		.global	changeToRF
 4237              		.thumb
 4238              		.thumb_func
 4239              		.type	changeToRF, %function
 4240              	changeToRF:
 4241              	.LFB94:
1082:.\main.c      **** 
1083:.\main.c      **** 
1084:.\main.c      **** void changeToRF()
1085:.\main.c      **** {
 4242              		.loc 1 1085 0
 4243              		.cfi_startproc
 4244              		@ args = 0, pretend = 0, frame = 0
 4245              		@ frame_needed = 1, uses_anonymous_args = 0
 4246 0000 80B5     		push	{r7, lr}
 4247              		.cfi_def_cfa_offset 8
 4248              		.cfi_offset 7, -8
 4249              		.cfi_offset 14, -4
 4250 0002 00AF     		add	r7, sp, #0
 4251              		.cfi_def_cfa_register 7
1086:.\main.c      ****         //disable BT
1087:.\main.c      ****         BT_ENABLED = 0;
 4252              		.loc 1 1087 0
 4253 0004 0B4B     		ldr	r3, .L233
 4254 0006 0022     		movs	r2, #0
 4255 0008 1A70     		strb	r2, [r3]
1088:.\main.c      ****         isrRF_RX_Stop();
 4256              		.loc 1 1088 0
 4257 000a FFF7FEFF 		bl	isrRF_RX_Stop
1089:.\main.c      ****         UART_Stop();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 96


 4258              		.loc 1 1089 0
 4259 000e FFF7FEFF 		bl	UART_Stop
1090:.\main.c      ****         
1091:.\main.c      ****         //enable RF
1092:.\main.c      ****         BIN_ENABLED = 1;
 4260              		.loc 1 1092 0
 4261 0012 094B     		ldr	r3, .L233+4
 4262 0014 0122     		movs	r2, #1
 4263 0016 1A70     		strb	r2, [r3]
1093:.\main.c      ****         UART_clk_SetDividerValue(130);
 4264              		.loc 1 1093 0
 4265 0018 8120     		movs	r0, #129
 4266 001a 0121     		movs	r1, #1
 4267 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
1094:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4268              		.loc 1 1094 0
 4269 0020 0648     		ldr	r0, .L233+8
 4270 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
1095:.\main.c      ****         UART_Start();
 4271              		.loc 1 1095 0
 4272 0026 FFF7FEFF 		bl	UART_Start
1096:.\main.c      ****         RF_BT_SELECT_Write(0);
 4273              		.loc 1 1096 0
 4274 002a 0020     		movs	r0, #0
 4275 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
1097:.\main.c      **** }
 4276              		.loc 1 1097 0
 4277 0030 80BD     		pop	{r7, pc}
 4278              	.L234:
 4279 0032 00BF     		.align	2
 4280              	.L233:
 4281 0034 00000000 		.word	BT_ENABLED
 4282 0038 00000000 		.word	BIN_ENABLED
 4283 003c 00000000 		.word	rxInt
 4284              		.cfi_endproc
 4285              	.LFE94:
 4286              		.size	changeToRF, .-changeToRF
 4287              		.section	.text.changeToBT,"ax",%progbits
 4288              		.align	2
 4289              		.global	changeToBT
 4290              		.thumb
 4291              		.thumb_func
 4292              		.type	changeToBT, %function
 4293              	changeToBT:
 4294              	.LFB95:
1098:.\main.c      **** 
1099:.\main.c      **** void changeToBT()
1100:.\main.c      **** {
 4295              		.loc 1 1100 0
 4296              		.cfi_startproc
 4297              		@ args = 0, pretend = 0, frame = 0
 4298              		@ frame_needed = 1, uses_anonymous_args = 0
 4299 0000 80B5     		push	{r7, lr}
 4300              		.cfi_def_cfa_offset 8
 4301              		.cfi_offset 7, -8
 4302              		.cfi_offset 14, -4
 4303 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 97


 4304              		.cfi_def_cfa_register 7
1101:.\main.c      ****         //disable RF
1102:.\main.c      ****         BIN_ENABLED = 0;
 4305              		.loc 1 1102 0
 4306 0004 0B4B     		ldr	r3, .L236
 4307 0006 0022     		movs	r2, #0
 4308 0008 1A70     		strb	r2, [r3]
1103:.\main.c      ****         isrRF_RX_Stop();
 4309              		.loc 1 1103 0
 4310 000a FFF7FEFF 		bl	isrRF_RX_Stop
1104:.\main.c      ****         UART_Stop();
 4311              		.loc 1 1104 0
 4312 000e FFF7FEFF 		bl	UART_Stop
1105:.\main.c      ****         
1106:.\main.c      ****         //enable BT
1107:.\main.c      ****         BT_ENABLED = 1;
 4313              		.loc 1 1107 0
 4314 0012 094B     		ldr	r3, .L236+4
 4315 0014 0122     		movs	r2, #1
 4316 0016 1A70     		strb	r2, [r3]
1108:.\main.c      ****         UART_clk_SetDividerValue(781);
 4317              		.loc 1 1108 0
 4318 0018 4FF44370 		mov	r0, #780
 4319 001c 0121     		movs	r1, #1
 4320 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
1109:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4321              		.loc 1 1109 0
 4322 0022 0648     		ldr	r0, .L236+8
 4323 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
1110:.\main.c      ****         UART_Start();
 4324              		.loc 1 1110 0
 4325 0028 FFF7FEFF 		bl	UART_Start
1111:.\main.c      ****         RF_BT_SELECT_Write(1);
 4326              		.loc 1 1111 0
 4327 002c 0120     		movs	r0, #1
 4328 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
1112:.\main.c      **** }
 4329              		.loc 1 1112 0
 4330 0032 80BD     		pop	{r7, pc}
 4331              	.L237:
 4332              		.align	2
 4333              	.L236:
 4334 0034 00000000 		.word	BIN_ENABLED
 4335 0038 00000000 		.word	BT_ENABLED
 4336 003c 00000000 		.word	BT_rxInt
 4337              		.cfi_endproc
 4338              	.LFE95:
 4339              		.size	changeToBT, .-changeToBT
 4340              		.section	.text.Quad_Dec_response,"ax",%progbits
 4341              		.align	2
 4342              		.global	Quad_Dec_response
 4343              		.thumb
 4344              		.thumb_func
 4345              		.type	Quad_Dec_response, %function
 4346              	Quad_Dec_response:
 4347              	.LFB96:
1113:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 98


1114:.\main.c      **** 
1115:.\main.c      **** void Quad_Dec_response()
1116:.\main.c      **** {
 4348              		.loc 1 1116 0
 4349              		.cfi_startproc
 4350              		@ args = 0, pretend = 0, frame = 32
 4351              		@ frame_needed = 1, uses_anonymous_args = 0
 4352 0000 B0B5     		push	{r4, r5, r7, lr}
 4353              		.cfi_def_cfa_offset 16
 4354              		.cfi_offset 4, -16
 4355              		.cfi_offset 5, -12
 4356              		.cfi_offset 7, -8
 4357              		.cfi_offset 14, -4
 4358 0002 88B0     		sub	sp, sp, #32
 4359              		.cfi_def_cfa_offset 48
 4360 0004 00AF     		add	r7, sp, #0
 4361              		.cfi_def_cfa_register 7
1117:.\main.c      ****     //Check if the flag has been set
1118:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4362              		.loc 1 1118 0
 4363 0006 824B     		ldr	r3, .L246
 4364 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4365 000a 002B     		cmp	r3, #0
 4366 000c 00D1     		bne	.L239
 4367 000e FCE0     		b	.L238
 4368              	.L239:
1119:.\main.c      ****     flag_calc_wheelspeed = 0;
 4369              		.loc 1 1119 0
 4370 0010 7F4B     		ldr	r3, .L246
 4371 0012 0022     		movs	r2, #0
 4372 0014 1A70     		strb	r2, [r3]
1120:.\main.c      ****     
1121:.\main.c      ****     //char wheel_1_str [64];
1122:.\main.c      ****     //char wheel_2_str [64];
1123:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
1124:.\main.c      ****     //usbPutString(wheel_1_str);
1125:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
1126:.\main.c      ****     
1127:.\main.c      ****     //usbPutString(wheel_2_str);
1128:.\main.c      ****     
1129:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4373              		.loc 1 1129 0
 4374 0016 7F4B     		ldr	r3, .L246+4
 4375 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4376 001a FB81     		strh	r3, [r7, #14]	@ movhi
1130:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4377              		.loc 1 1130 0
 4378 001c 7E4B     		ldr	r3, .L246+8
 4379 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4380 0020 BB81     		strh	r3, [r7, #12]	@ movhi
1131:.\main.c      ****     double scalingLeft = 1;
 4381              		.loc 1 1131 0
 4382 0022 4FF00002 		mov	r2, #0
 4383 0026 7D4B     		ldr	r3, .L246+12
 4384 0028 C7E90623 		strd	r2, [r7, #24]
1132:.\main.c      ****     double scalingRight = 1;
 4385              		.loc 1 1132 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 99


 4386 002c 4FF00002 		mov	r2, #0
 4387 0030 7A4B     		ldr	r3, .L246+12
 4388 0032 C7E90423 		strd	r2, [r7, #16]
1133:.\main.c      ****     
1134:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
1135:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4389              		.loc 1 1135 0
 4390 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4391 003a 002B     		cmp	r3, #0
 4392 003c 0FD1     		bne	.L241
 4393              		.loc 1 1135 0 is_stmt 0 discriminator 1
 4394 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4395 0042 002B     		cmp	r3, #0
 4396 0044 0BD1     		bne	.L241
1136:.\main.c      ****        //leftSpeed = 3;
1137:.\main.c      ****         scalingLeft = 2;
 4397              		.loc 1 1137 0 is_stmt 1
 4398 0046 4FF00002 		mov	r2, #0
 4399 004a 4FF08043 		mov	r3, #1073741824
 4400 004e C7E90623 		strd	r2, [r7, #24]
1138:.\main.c      ****         scalingRight = 2;
 4401              		.loc 1 1138 0
 4402 0052 4FF00002 		mov	r2, #0
 4403 0056 4FF08043 		mov	r3, #1073741824
 4404 005a C7E90423 		strd	r2, [r7, #16]
 4405              	.L241:
1139:.\main.c      ****     }
1140:.\main.c      **** 
1141:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4406              		.loc 1 1141 0
 4407 005e 704B     		ldr	r3, .L246+16
 4408 0060 1B88     		ldrh	r3, [r3]
 4409 0062 1AB2     		sxth	r2, r3
 4410 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4411 0068 002B     		cmp	r3, #0
 4412 006a B8BF     		it	lt
 4413 006c 5B42     		rsblt	r3, r3, #0
 4414 006e D31A     		subs	r3, r2, r3
 4415 0070 BB60     		str	r3, [r7, #8]
1142:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4416              		.loc 1 1142 0
 4417 0072 BB68     		ldr	r3, [r7, #8]
 4418 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4419 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4420 007c BB68     		ldr	r3, [r7, #8]
 4421 007e 92FBF3F3 		sdiv	r3, r2, r3
 4422 0082 1846     		mov	r0, r3
 4423 0084 FFF7FEFF 		bl	__aeabi_i2d
 4424 0088 0446     		mov	r4, r0
 4425 008a 0D46     		mov	r5, r1
 4426 008c BB68     		ldr	r3, [r7, #8]
 4427 008e 002B     		cmp	r3, #0
 4428 0090 B8BF     		it	lt
 4429 0092 5B42     		rsblt	r3, r3, #0
 4430 0094 1846     		mov	r0, r3
 4431 0096 FFF7FEFF 		bl	__aeabi_i2d
 4432 009a 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 100


 4433 009c 0B46     		mov	r3, r1
 4434 009e 1046     		mov	r0, r2
 4435 00a0 1946     		mov	r1, r3
 4436 00a2 FFF7FEFF 		bl	sqrt
 4437 00a6 0246     		mov	r2, r0
 4438 00a8 0B46     		mov	r3, r1
 4439 00aa 2046     		mov	r0, r4
 4440 00ac 2946     		mov	r1, r5
 4441 00ae FFF7FEFF 		bl	__aeabi_dmul
 4442 00b2 0246     		mov	r2, r0
 4443 00b4 0B46     		mov	r3, r1
 4444 00b6 1046     		mov	r0, r2
 4445 00b8 1946     		mov	r1, r3
 4446 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4447 00be 0346     		mov	r3, r0
 4448 00c0 7B60     		str	r3, [r7, #4]
1143:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4449              		.loc 1 1143 0
 4450 00c2 584B     		ldr	r3, .L246+20
 4451 00c4 1B88     		ldrh	r3, [r3]
 4452 00c6 1BB2     		sxth	r3, r3
 4453 00c8 1846     		mov	r0, r3
 4454 00ca FFF7FEFF 		bl	__aeabi_i2d
 4455 00ce 0446     		mov	r4, r0
 4456 00d0 0D46     		mov	r5, r1
 4457 00d2 7868     		ldr	r0, [r7, #4]
 4458 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4459 00d8 0246     		mov	r2, r0
 4460 00da 0B46     		mov	r3, r1
 4461 00dc 1046     		mov	r0, r2
 4462 00de 1946     		mov	r1, r3
 4463 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4464 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4465 00e8 0246     		mov	r2, r0
 4466 00ea 0B46     		mov	r3, r1
 4467 00ec 2046     		mov	r0, r4
 4468 00ee 2946     		mov	r1, r5
 4469 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4470 00f4 0246     		mov	r2, r0
 4471 00f6 0B46     		mov	r3, r1
 4472 00f8 1046     		mov	r0, r2
 4473 00fa 1946     		mov	r1, r3
 4474 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4475 0100 0346     		mov	r3, r0
 4476 0102 9AB2     		uxth	r2, r3
 4477 0104 474B     		ldr	r3, .L246+20
 4478 0106 1A80     		strh	r2, [r3]	@ movhi
1144:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4479              		.loc 1 1144 0
 4480 0108 474B     		ldr	r3, .L246+24
 4481 010a 1B88     		ldrh	r3, [r3]
 4482 010c 1AB2     		sxth	r2, r3
 4483 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4484 0112 002B     		cmp	r3, #0
 4485 0114 B8BF     		it	lt
 4486 0116 5B42     		rsblt	r3, r3, #0
 4487 0118 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 101


 4488 011a BB60     		str	r3, [r7, #8]
1145:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4489              		.loc 1 1145 0
 4490 011c BB68     		ldr	r3, [r7, #8]
 4491 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4492 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4493 0126 BB68     		ldr	r3, [r7, #8]
 4494 0128 92FBF3F3 		sdiv	r3, r2, r3
 4495 012c 1846     		mov	r0, r3
 4496 012e FFF7FEFF 		bl	__aeabi_i2d
 4497 0132 0446     		mov	r4, r0
 4498 0134 0D46     		mov	r5, r1
 4499 0136 BB68     		ldr	r3, [r7, #8]
 4500 0138 002B     		cmp	r3, #0
 4501 013a B8BF     		it	lt
 4502 013c 5B42     		rsblt	r3, r3, #0
 4503 013e 1846     		mov	r0, r3
 4504 0140 FFF7FEFF 		bl	__aeabi_i2d
 4505 0144 0246     		mov	r2, r0
 4506 0146 0B46     		mov	r3, r1
 4507 0148 1046     		mov	r0, r2
 4508 014a 1946     		mov	r1, r3
 4509 014c FFF7FEFF 		bl	sqrt
 4510 0150 0246     		mov	r2, r0
 4511 0152 0B46     		mov	r3, r1
 4512 0154 2046     		mov	r0, r4
 4513 0156 2946     		mov	r1, r5
 4514 0158 FFF7FEFF 		bl	__aeabi_dmul
 4515 015c 0246     		mov	r2, r0
 4516 015e 0B46     		mov	r3, r1
 4517 0160 1046     		mov	r0, r2
 4518 0162 1946     		mov	r1, r3
 4519 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4520 0168 0346     		mov	r3, r0
 4521 016a 7B60     		str	r3, [r7, #4]
1146:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4522              		.loc 1 1146 0
 4523 016c 2F4B     		ldr	r3, .L246+28
 4524 016e 1B88     		ldrh	r3, [r3]
 4525 0170 1BB2     		sxth	r3, r3
 4526 0172 1846     		mov	r0, r3
 4527 0174 FFF7FEFF 		bl	__aeabi_i2d
 4528 0178 0446     		mov	r4, r0
 4529 017a 0D46     		mov	r5, r1
 4530 017c 7868     		ldr	r0, [r7, #4]
 4531 017e FFF7FEFF 		bl	__aeabi_i2d
 4532 0182 0246     		mov	r2, r0
 4533 0184 0B46     		mov	r3, r1
 4534 0186 1046     		mov	r0, r2
 4535 0188 1946     		mov	r1, r3
 4536 018a D7E90423 		ldrd	r2, [r7, #16]
 4537 018e FFF7FEFF 		bl	__aeabi_dmul
 4538 0192 0246     		mov	r2, r0
 4539 0194 0B46     		mov	r3, r1
 4540 0196 2046     		mov	r0, r4
 4541 0198 2946     		mov	r1, r5
 4542 019a FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 102


 4543 019e 0246     		mov	r2, r0
 4544 01a0 0B46     		mov	r3, r1
 4545 01a2 1046     		mov	r0, r2
 4546 01a4 1946     		mov	r1, r3
 4547 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4548 01aa 0346     		mov	r3, r0
 4549 01ac 9AB2     		uxth	r2, r3
 4550 01ae 1F4B     		ldr	r3, .L246+28
 4551 01b0 1A80     		strh	r2, [r3]	@ movhi
1147:.\main.c      ****     
1148:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4552              		.loc 1 1148 0
 4553 01b2 1E4B     		ldr	r3, .L246+28
 4554 01b4 1B88     		ldrh	r3, [r3]
 4555 01b6 1BB2     		sxth	r3, r3
 4556 01b8 002B     		cmp	r3, #0
 4557 01ba 02DA     		bge	.L242
 4558              		.loc 1 1148 0 is_stmt 0 discriminator 1
 4559 01bc 1B4B     		ldr	r3, .L246+28
 4560 01be 0022     		movs	r2, #0
 4561 01c0 1A80     		strh	r2, [r3]	@ movhi
 4562              	.L242:
1149:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4563              		.loc 1 1149 0 is_stmt 1
 4564 01c2 184B     		ldr	r3, .L246+20
 4565 01c4 1B88     		ldrh	r3, [r3]
 4566 01c6 1BB2     		sxth	r3, r3
 4567 01c8 002B     		cmp	r3, #0
 4568 01ca 02DA     		bge	.L243
 4569              		.loc 1 1149 0 is_stmt 0 discriminator 1
 4570 01cc 154B     		ldr	r3, .L246+20
 4571 01ce 0022     		movs	r2, #0
 4572 01d0 1A80     		strh	r2, [r3]	@ movhi
 4573              	.L243:
1150:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4574              		.loc 1 1150 0 is_stmt 1
 4575 01d2 164B     		ldr	r3, .L246+28
 4576 01d4 1B88     		ldrh	r3, [r3]
 4577 01d6 1BB2     		sxth	r3, r3
 4578 01d8 642B     		cmp	r3, #100
 4579 01da 02DD     		ble	.L244
 4580              		.loc 1 1150 0 is_stmt 0 discriminator 1
 4581 01dc 134B     		ldr	r3, .L246+28
 4582 01de 6422     		movs	r2, #100
 4583 01e0 1A80     		strh	r2, [r3]	@ movhi
 4584              	.L244:
1151:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4585              		.loc 1 1151 0 is_stmt 1
 4586 01e2 104B     		ldr	r3, .L246+20
 4587 01e4 1B88     		ldrh	r3, [r3]
 4588 01e6 1BB2     		sxth	r3, r3
 4589 01e8 642B     		cmp	r3, #100
 4590 01ea 02DD     		ble	.L245
 4591              		.loc 1 1151 0 is_stmt 0 discriminator 1
 4592 01ec 0D4B     		ldr	r3, .L246+20
 4593 01ee 6422     		movs	r2, #100
 4594 01f0 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 103


 4595              	.L245:
1152:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4596              		.loc 1 1152 0 is_stmt 1
 4597 01f2 0C4B     		ldr	r3, .L246+20
 4598 01f4 1B88     		ldrh	r3, [r3]
 4599 01f6 DBB2     		uxtb	r3, r3
 4600 01f8 1846     		mov	r0, r3
 4601 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
1153:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4602              		.loc 1 1153 0
 4603 01fe 0B4B     		ldr	r3, .L246+28
 4604 0200 1B88     		ldrh	r3, [r3]
 4605 0202 DBB2     		uxtb	r3, r3
 4606 0204 1846     		mov	r0, r3
 4607 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4608              	.L238:
1154:.\main.c      **** }
 4609              		.loc 1 1154 0
 4610 020a 2037     		adds	r7, r7, #32
 4611              		.cfi_def_cfa_offset 16
 4612 020c BD46     		mov	sp, r7
 4613              		.cfi_def_cfa_register 13
 4614              		@ sp needed
 4615 020e B0BD     		pop	{r4, r5, r7, pc}
 4616              	.L247:
 4617              		.align	2
 4618              	.L246:
 4619 0210 00000000 		.word	flag_calc_wheelspeed
 4620 0214 00000000 		.word	quad_diff1
 4621 0218 00000000 		.word	quad_diff2
 4622 021c 0000F03F 		.word	1072693248
 4623 0220 00000000 		.word	leftSpeedLimit
 4624 0224 00000000 		.word	left_duty_cycle
 4625 0228 00000000 		.word	rightSpeedLimit
 4626 022c 00000000 		.word	right_duty_cycle
 4627              		.cfi_endproc
 4628              	.LFE96:
 4629              		.size	Quad_Dec_response, .-Quad_Dec_response
 4630              		.section	.text.trackLine,"ax",%progbits
 4631              		.align	2
 4632              		.global	trackLine
 4633              		.thumb
 4634              		.thumb_func
 4635              		.type	trackLine, %function
 4636              	trackLine:
 4637              	.LFB97:
1155:.\main.c      **** 
1156:.\main.c      **** void trackLine()
1157:.\main.c      **** {
 4638              		.loc 1 1157 0
 4639              		.cfi_startproc
 4640              		@ args = 0, pretend = 0, frame = 0
 4641              		@ frame_needed = 1, uses_anonymous_args = 0
 4642              		@ link register save eliminated.
 4643 0000 80B4     		push	{r7}
 4644              		.cfi_def_cfa_offset 4
 4645              		.cfi_offset 7, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 104


 4646 0002 00AF     		add	r7, sp, #0
 4647              		.cfi_def_cfa_register 7
1158:.\main.c      ****  //removed from implementation
1159:.\main.c      **** }
 4648              		.loc 1 1159 0
 4649 0004 BD46     		mov	sp, r7
 4650              		.cfi_def_cfa_register 13
 4651              		@ sp needed
 4652 0006 5DF8047B 		ldr	r7, [sp], #4
 4653              		.cfi_restore 7
 4654              		.cfi_def_cfa_offset 0
 4655 000a 7047     		bx	lr
 4656              		.cfi_endproc
 4657              	.LFE97:
 4658              		.size	trackLine, .-trackLine
 4659              		.global	leftTurnCount
 4660              		.bss
 4661              		.align	1
 4662              		.type	leftTurnCount, %object
 4663              		.size	leftTurnCount, 2
 4664              	leftTurnCount:
 4665 28e8 0000     		.space	2
 4666              		.global	rightTurnCount
 4667              		.align	1
 4668              		.type	rightTurnCount, %object
 4669              		.size	rightTurnCount, 2
 4670              	rightTurnCount:
 4671 28ea 0000     		.space	2
 4672              		.section	.text.trackLineZ,"ax",%progbits
 4673              		.align	2
 4674              		.global	trackLineZ
 4675              		.thumb
 4676              		.thumb_func
 4677              		.type	trackLineZ, %function
 4678              	trackLineZ:
 4679              	.LFB98:
1160:.\main.c      **** uint16 leftTurnCount = 0;
1161:.\main.c      **** uint16 rightTurnCount = 0;
1162:.\main.c      **** void trackLineZ()
1163:.\main.c      **** {
 4680              		.loc 1 1163 0
 4681              		.cfi_startproc
 4682              		@ args = 0, pretend = 0, frame = 8
 4683              		@ frame_needed = 1, uses_anonymous_args = 0
 4684 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4685              		.cfi_def_cfa_offset 24
 4686              		.cfi_offset 4, -24
 4687              		.cfi_offset 5, -20
 4688              		.cfi_offset 7, -16
 4689              		.cfi_offset 8, -12
 4690              		.cfi_offset 9, -8
 4691              		.cfi_offset 14, -4
 4692 0004 82B0     		sub	sp, sp, #8
 4693              		.cfi_def_cfa_offset 32
 4694 0006 00AF     		add	r7, sp, #0
 4695              		.cfi_def_cfa_register 7
1164:.\main.c      ****     //read the value of the three central-front sensors
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 105


1165:.\main.c      ****     
1166:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4696              		.loc 1 1166 0
 4697 0008 FFF7FEFF 		bl	NLSens_out_Read
 4698 000c 0346     		mov	r3, r0
 4699 000e FB71     		strb	r3, [r7, #7]
1167:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4700              		.loc 1 1167 0
 4701 0010 FFF7FEFF 		bl	NRSens_out_Read
 4702 0014 0346     		mov	r3, r0
 4703 0016 BB71     		strb	r3, [r7, #6]
1168:.\main.c      ****     uint8 mid = MSens_out_Read();
 4704              		.loc 1 1168 0
 4705 0018 FFF7FEFF 		bl	MSens_out_Read
 4706 001c 0346     		mov	r3, r0
 4707 001e 7B71     		strb	r3, [r7, #5]
1169:.\main.c      ****     
1170:.\main.c      ****         //if only the left one, hard left
1171:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4708              		.loc 1 1171 0
 4709 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4710 0022 002B     		cmp	r3, #0
 4711 0024 27D0     		beq	.L250
 4712              		.loc 1 1171 0 is_stmt 0 discriminator 1
 4713 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4714 0028 002B     		cmp	r3, #0
 4715 002a 24D1     		bne	.L250
 4716              		.loc 1 1171 0 discriminator 2
 4717 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4718 002e 002B     		cmp	r3, #0
 4719 0030 21D1     		bne	.L250
1172:.\main.c      ****     {
1173:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4720              		.loc 1 1173 0 is_stmt 1
 4721 0032 454B     		ldr	r3, .L255+8
 4722 0034 D3E90023 		ldrd	r2, [r3]
 4723 0038 1046     		mov	r0, r2
 4724 003a 1946     		mov	r1, r3
 4725 003c 40A3     		adr	r3, .L255
 4726 003e D3E90023 		ldrd	r2, [r3]
 4727 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4728 0046 0246     		mov	r2, r0
 4729 0048 0B46     		mov	r3, r1
 4730 004a 1446     		mov	r4, r2
 4731 004c 1D46     		mov	r5, r3
 4732 004e 3E4B     		ldr	r3, .L255+8
 4733 0050 D3E90023 		ldrd	r2, [r3]
 4734 0054 9046     		mov	r8, r2
 4735 0056 83F00049 		eor	r9, r3, #-2147483648
 4736 005a 4046     		mov	r0, r8
 4737 005c 4946     		mov	r1, r9
 4738 005e 38A3     		adr	r3, .L255
 4739 0060 D3E90023 		ldrd	r2, [r3]
 4740 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4741 0068 0246     		mov	r2, r0
 4742 006a 0B46     		mov	r3, r1
 4743 006c 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 106


 4744 006e 2946     		mov	r1, r5
 4745 0070 FFF7FEFF 		bl	setSpeed
 4746 0074 5FE0     		b	.L249
 4747              	.L250:
1174:.\main.c      ****     }
1175:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4748              		.loc 1 1175 0
 4749 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4750 0078 002B     		cmp	r3, #0
 4751 007a 0ED0     		beq	.L252
 4752              		.loc 1 1175 0 is_stmt 0 discriminator 1
 4753 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4754 007e 002B     		cmp	r3, #0
 4755 0080 0BD0     		beq	.L252
 4756              		.loc 1 1175 0 discriminator 2
 4757 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4758 0084 002B     		cmp	r3, #0
 4759 0086 08D1     		bne	.L252
1176:.\main.c      ****     {
1177:.\main.c      ****         setSpeed(speed,speed);
 4760              		.loc 1 1177 0 is_stmt 1
 4761 0088 2F4B     		ldr	r3, .L255+8
 4762 008a D3E90001 		ldrd	r0, [r3]
 4763 008e 2E4B     		ldr	r3, .L255+8
 4764 0090 D3E90023 		ldrd	r2, [r3]
 4765 0094 FFF7FEFF 		bl	setSpeed
 4766 0098 4DE0     		b	.L249
 4767              	.L252:
1178:.\main.c      ****     }
1179:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4768              		.loc 1 1179 0
 4769 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4770 009c 002B     		cmp	r3, #0
 4771 009e 0ED0     		beq	.L253
 4772              		.loc 1 1179 0 is_stmt 0 discriminator 1
 4773 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4774 00a2 002B     		cmp	r3, #0
 4775 00a4 0BD0     		beq	.L253
 4776              		.loc 1 1179 0 discriminator 2
 4777 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4778 00a8 002B     		cmp	r3, #0
 4779 00aa 08D1     		bne	.L253
1180:.\main.c      ****     {
1181:.\main.c      ****         setSpeed(speed ,speed);
 4780              		.loc 1 1181 0 is_stmt 1
 4781 00ac 264B     		ldr	r3, .L255+8
 4782 00ae D3E90001 		ldrd	r0, [r3]
 4783 00b2 254B     		ldr	r3, .L255+8
 4784 00b4 D3E90023 		ldrd	r2, [r3]
 4785 00b8 FFF7FEFF 		bl	setSpeed
 4786 00bc 3BE0     		b	.L249
 4787              	.L253:
1182:.\main.c      ****     }
1183:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4788              		.loc 1 1183 0
 4789 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4790 00c0 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 107


 4791 00c2 27D0     		beq	.L254
 4792              		.loc 1 1183 0 is_stmt 0 discriminator 1
 4793 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4794 00c6 002B     		cmp	r3, #0
 4795 00c8 24D1     		bne	.L254
 4796              		.loc 1 1183 0 discriminator 2
 4797 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4798 00cc 002B     		cmp	r3, #0
 4799 00ce 21D1     		bne	.L254
1184:.\main.c      ****     {
1185:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4800              		.loc 1 1185 0 is_stmt 1
 4801 00d0 1D4B     		ldr	r3, .L255+8
 4802 00d2 D3E90023 		ldrd	r2, [r3]
 4803 00d6 1446     		mov	r4, r2
 4804 00d8 83F00045 		eor	r5, r3, #-2147483648
 4805 00dc 2046     		mov	r0, r4
 4806 00de 2946     		mov	r1, r5
 4807 00e0 17A3     		adr	r3, .L255
 4808 00e2 D3E90023 		ldrd	r2, [r3]
 4809 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4810 00ea 0246     		mov	r2, r0
 4811 00ec 0B46     		mov	r3, r1
 4812 00ee 1446     		mov	r4, r2
 4813 00f0 1D46     		mov	r5, r3
 4814 00f2 154B     		ldr	r3, .L255+8
 4815 00f4 D3E90023 		ldrd	r2, [r3]
 4816 00f8 1046     		mov	r0, r2
 4817 00fa 1946     		mov	r1, r3
 4818 00fc 10A3     		adr	r3, .L255
 4819 00fe D3E90023 		ldrd	r2, [r3]
 4820 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4821 0106 0246     		mov	r2, r0
 4822 0108 0B46     		mov	r3, r1
 4823 010a 2046     		mov	r0, r4
 4824 010c 2946     		mov	r1, r5
 4825 010e FFF7FEFF 		bl	setSpeed
 4826 0112 10E0     		b	.L249
 4827              	.L254:
1186:.\main.c      ****     }
1187:.\main.c      ****     else if (mid && !nr && !nl)
 4828              		.loc 1 1187 0
 4829 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4830 0116 002B     		cmp	r3, #0
 4831 0118 0DD0     		beq	.L249
 4832              		.loc 1 1187 0 is_stmt 0 discriminator 1
 4833 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4834 011c 002B     		cmp	r3, #0
 4835 011e 0AD1     		bne	.L249
 4836              		.loc 1 1187 0 discriminator 2
 4837 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4838 0122 002B     		cmp	r3, #0
 4839 0124 07D1     		bne	.L249
1188:.\main.c      ****     {
1189:.\main.c      ****         setSpeed(speed,speed);
 4840              		.loc 1 1189 0 is_stmt 1
 4841 0126 084B     		ldr	r3, .L255+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 108


 4842 0128 D3E90001 		ldrd	r0, [r3]
 4843 012c 064B     		ldr	r3, .L255+8
 4844 012e D3E90023 		ldrd	r2, [r3]
 4845 0132 FFF7FEFF 		bl	setSpeed
 4846              	.L249:
1190:.\main.c      ****     }
1191:.\main.c      **** }
 4847              		.loc 1 1191 0
 4848 0136 0837     		adds	r7, r7, #8
 4849              		.cfi_def_cfa_offset 24
 4850 0138 BD46     		mov	sp, r7
 4851              		.cfi_def_cfa_register 13
 4852              		@ sp needed
 4853 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4854              	.L256:
 4855 013e 00BF     		.align	3
 4856              	.L255:
 4857 0140 9A999999 		.word	-1717986918
 4858 0144 9999F93F 		.word	1073322393
 4859 0148 00000000 		.word	speed
 4860              		.cfi_endproc
 4861              	.LFE98:
 4862              		.size	trackLineZ, .-trackLineZ
 4863 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4864              		.align	2
 4865              		.global	trackLineU
 4866              		.thumb
 4867              		.thumb_func
 4868              		.type	trackLineU, %function
 4869              	trackLineU:
 4870              	.LFB99:
1192:.\main.c      **** 
1193:.\main.c      **** 
1194:.\main.c      **** void trackLineU()
1195:.\main.c      **** { 
 4871              		.loc 1 1195 0
 4872              		.cfi_startproc
 4873              		@ args = 0, pretend = 0, frame = 0
 4874              		@ frame_needed = 1, uses_anonymous_args = 0
 4875              		@ link register save eliminated.
 4876 0000 80B4     		push	{r7}
 4877              		.cfi_def_cfa_offset 4
 4878              		.cfi_offset 7, -4
 4879 0002 00AF     		add	r7, sp, #0
 4880              		.cfi_def_cfa_register 7
1196:.\main.c      **** //removed from final implementation
1197:.\main.c      **** }
 4881              		.loc 1 1197 0
 4882 0004 BD46     		mov	sp, r7
 4883              		.cfi_def_cfa_register 13
 4884              		@ sp needed
 4885 0006 5DF8047B 		ldr	r7, [sp], #4
 4886              		.cfi_restore 7
 4887              		.cfi_def_cfa_offset 0
 4888 000a 7047     		bx	lr
 4889              		.cfi_endproc
 4890              	.LFE99:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 109


 4891              		.size	trackLineU, .-trackLineU
 4892              		.global	__aeabi_fadd
 4893              		.section	.rodata
 4894 00fe 0000     		.align	2
 4895              	.LC14:
 4896 0100 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4896      65727920 
 4896      566F6C74 
 4896      6167653A 
 4896      2025646D 
 4897              		.section	.text.print_ADC,"ax",%progbits
 4898              		.align	2
 4899              		.global	print_ADC
 4900              		.thumb
 4901              		.thumb_func
 4902              		.type	print_ADC, %function
 4903              	print_ADC:
 4904              	.LFB100:
1198:.\main.c      **** 
1199:.\main.c      **** void print_ADC()
1200:.\main.c      **** {
 4905              		.loc 1 1200 0
 4906              		.cfi_startproc
 4907              		@ args = 0, pretend = 0, frame = 24
 4908              		@ frame_needed = 1, uses_anonymous_args = 0
 4909 0000 80B5     		push	{r7, lr}
 4910              		.cfi_def_cfa_offset 8
 4911              		.cfi_offset 7, -8
 4912              		.cfi_offset 14, -4
 4913 0002 86B0     		sub	sp, sp, #24
 4914              		.cfi_def_cfa_offset 32
 4915 0004 00AF     		add	r7, sp, #0
 4916              		.cfi_def_cfa_register 7
1201:.\main.c      ****    //usbPutString("HII\n");
1202:.\main.c      ****     if(flag_receive_ADC == 1)
 4917              		.loc 1 1202 0
 4918 0006 274B     		ldr	r3, .L261
 4919 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4920 000a 012B     		cmp	r3, #1
 4921 000c 46D1     		bne	.L258
 4922              	.LBB10:
1203:.\main.c      ****     {
1204:.\main.c      ****         //usbPutString("AAA\r\n");
1205:.\main.c      ****         flag_receive_ADC = 0;
 4923              		.loc 1 1205 0
 4924 000e 254B     		ldr	r3, .L261
 4925 0010 0022     		movs	r2, #0
 4926 0012 1A70     		strb	r2, [r3]
1206:.\main.c      ****         
1207:.\main.c      ****        // int8 channel = ADC_
1208:.\main.c      ****         float scalingFactor = 0.972;
 4927              		.loc 1 1208 0
 4928 0014 244B     		ldr	r3, .L261+4
 4929 0016 7B61     		str	r3, [r7, #20]	@ float
1209:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4930              		.loc 1 1209 0
 4931 0018 244B     		ldr	r3, .L261+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 110


 4932 001a 1B88     		ldrh	r3, [r3]
 4933 001c 1BB2     		sxth	r3, r3
 4934 001e 41F28832 		movw	r2, #5000
 4935 0022 02FB03F3 		mul	r3, r2, r3
 4936 0026 002B     		cmp	r3, #0
 4937 0028 01DA     		bge	.L260
 4938 002a 03F6FF73 		addw	r3, r3, #4095
 4939              	.L260:
 4940 002e 1B13     		asrs	r3, r3, #12
 4941 0030 1846     		mov	r0, r3
 4942 0032 FFF7FEFF 		bl	__aeabi_i2f
 4943 0036 0346     		mov	r3, r0
 4944 0038 1846     		mov	r0, r3
 4945 003a 7969     		ldr	r1, [r7, #20]	@ float
 4946 003c FFF7FEFF 		bl	__aeabi_fmul
 4947 0040 0346     		mov	r3, r0
 4948 0042 1846     		mov	r0, r3
 4949 0044 1946     		mov	r1, r3
 4950 0046 FFF7FEFF 		bl	__aeabi_fadd
 4951 004a 0346     		mov	r3, r0
 4952 004c 1846     		mov	r0, r3
 4953 004e FFF7FEFF 		bl	__aeabi_f2iz
 4954 0052 0346     		mov	r3, r0
 4955 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1210:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4956              		.loc 1 1210 0
 4957 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4958 005a 154B     		ldr	r3, .L261+12
 4959 005c 1B88     		ldrh	r3, [r3]
 4960 005e 1BB2     		sxth	r3, r3
 4961 0060 1A44     		add	r2, r2, r3
 4962 0062 144B     		ldr	r3, .L261+16
 4963 0064 1B88     		ldrh	r3, [r3]
 4964 0066 1BB2     		sxth	r3, r3
 4965 0068 1344     		add	r3, r3, r2
 4966 006a 134A     		ldr	r2, .L261+20
 4967 006c 82FB0312 		smull	r1, r2, r2, r3
 4968 0070 DB17     		asrs	r3, r3, #31
 4969 0072 D31A     		subs	r3, r2, r3
 4970 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1211:.\main.c      ****         prevVoltage2 = prevVoltage;
 4971              		.loc 1 1211 0
 4972 0076 0E4B     		ldr	r3, .L261+12
 4973 0078 1A88     		ldrh	r2, [r3]
 4974 007a 0E4B     		ldr	r3, .L261+16
 4975 007c 1A80     		strh	r2, [r3]	@ movhi
1212:.\main.c      ****         prevVoltage = converted_val;
 4976              		.loc 1 1212 0
 4977 007e 0C4A     		ldr	r2, .L261+12
 4978 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4979 0082 1380     		strh	r3, [r2]	@ movhi
1213:.\main.c      ****         
1214:.\main.c      ****         char result_str[16];
1215:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4980              		.loc 1 1215 0
 4981 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4982 0088 3A46     		mov	r2, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 111


 4983 008a 1046     		mov	r0, r2
 4984 008c 0B49     		ldr	r1, .L261+24
 4985 008e 1A46     		mov	r2, r3
 4986 0090 FFF7FEFF 		bl	sprintf
1216:.\main.c      ****         
1217:.\main.c      ****         usbPutString(result_str);
 4987              		.loc 1 1217 0
 4988 0094 3B46     		mov	r3, r7
 4989 0096 1846     		mov	r0, r3
 4990 0098 FFF7FEFF 		bl	usbPutString
 4991              	.L258:
 4992              	.LBE10:
1218:.\main.c      ****     }
1219:.\main.c      **** }
 4993              		.loc 1 1219 0
 4994 009c 1837     		adds	r7, r7, #24
 4995              		.cfi_def_cfa_offset 8
 4996 009e BD46     		mov	sp, r7
 4997              		.cfi_def_cfa_register 13
 4998              		@ sp needed
 4999 00a0 80BD     		pop	{r7, pc}
 5000              	.L262:
 5001 00a2 00BF     		.align	2
 5002              	.L261:
 5003 00a4 00000000 		.word	flag_receive_ADC
 5004 00a8 FED4783F 		.word	1064883454
 5005 00ac 00000000 		.word	adc_result
 5006 00b0 00000000 		.word	prevVoltage
 5007 00b4 00000000 		.word	prevVoltage2
 5008 00b8 56555555 		.word	1431655766
 5009 00bc 00010000 		.word	.LC14
 5010              		.cfi_endproc
 5011              	.LFE100:
 5012              		.size	print_ADC, .-print_ADC
 5013              		.section	.rodata
 5014              		.align	2
 5015              	.LC15:
 5016 0118 52535349 		.ascii	"RSSI:\000"
 5016      3A00
 5017 011e 0000     		.align	2
 5018              	.LC16:
 5019 0120 25640D0A 		.ascii	"%d\015\012\000"
 5019      00
 5020 0125 000000   		.align	2
 5021              	.LC17:
 5022 0128 726F626F 		.ascii	"robot_x:\000"
 5022      745F783A 
 5022      00
 5023 0131 000000   		.align	2
 5024              	.LC18:
 5025 0134 726F626F 		.ascii	"robot_y:\000"
 5025      745F793A 
 5025      00
 5026 013d 000000   		.align	2
 5027              	.LC19:
 5028 0140 726F626F 		.ascii	"robot_dir:\000"
 5028      745F6469 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 112


 5028      723A00
 5029 014b 00       		.section	.text.print_RF,"ax",%progbits
 5030              		.align	2
 5031              		.global	print_RF
 5032              		.thumb
 5033              		.thumb_func
 5034              		.type	print_RF, %function
 5035              	print_RF:
 5036              	.LFB101:
1220:.\main.c      **** 
1221:.\main.c      **** void print_RF()
1222:.\main.c      **** {
 5037              		.loc 1 1222 0
 5038              		.cfi_startproc
 5039              		@ args = 0, pretend = 0, frame = 16
 5040              		@ frame_needed = 1, uses_anonymous_args = 0
 5041 0000 80B5     		push	{r7, lr}
 5042              		.cfi_def_cfa_offset 8
 5043              		.cfi_offset 7, -8
 5044              		.cfi_offset 14, -4
 5045 0002 84B0     		sub	sp, sp, #16
 5046              		.cfi_def_cfa_offset 24
 5047 0004 00AF     		add	r7, sp, #0
 5048              		.cfi_def_cfa_register 7
1223:.\main.c      ****     if(flag_print_rf == 1)
 5049              		.loc 1 1223 0
 5050 0006 254B     		ldr	r3, .L265
 5051 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5052 000a 012B     		cmp	r3, #1
 5053 000c 42D1     		bne	.L263
 5054              	.LBB11:
1224:.\main.c      ****     {
1225:.\main.c      ****         char printString[16];
1226:.\main.c      ****         flag_print_rf = 0;
 5055              		.loc 1 1226 0
 5056 000e 234B     		ldr	r3, .L265
 5057 0010 0022     		movs	r2, #0
 5058 0012 1A70     		strb	r2, [r3]
1227:.\main.c      ****         usbPutString("RSSI:");
 5059              		.loc 1 1227 0
 5060 0014 2248     		ldr	r0, .L265+4
 5061 0016 FFF7FEFF 		bl	usbPutString
1228:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 5062              		.loc 1 1228 0
 5063 001a 224B     		ldr	r3, .L265+8
 5064 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5065 001e 5BB2     		sxtb	r3, r3
 5066 0020 3A46     		mov	r2, r7
 5067 0022 1046     		mov	r0, r2
 5068 0024 2049     		ldr	r1, .L265+12
 5069 0026 1A46     		mov	r2, r3
 5070 0028 FFF7FEFF 		bl	sprintf
1229:.\main.c      ****         usbPutString(printString);
 5071              		.loc 1 1229 0
 5072 002c 3B46     		mov	r3, r7
 5073 002e 1846     		mov	r0, r3
 5074 0030 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 113


1230:.\main.c      ****         usbPutString("robot_x:");
 5075              		.loc 1 1230 0
 5076 0034 1D48     		ldr	r0, .L265+16
 5077 0036 FFF7FEFF 		bl	usbPutString
1231:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 5078              		.loc 1 1231 0
 5079 003a 1A4B     		ldr	r3, .L265+8
 5080 003c 5B88     		ldrh	r3, [r3, #2]
 5081 003e 1BB2     		sxth	r3, r3
 5082 0040 3A46     		mov	r2, r7
 5083 0042 1046     		mov	r0, r2
 5084 0044 1849     		ldr	r1, .L265+12
 5085 0046 1A46     		mov	r2, r3
 5086 0048 FFF7FEFF 		bl	sprintf
1232:.\main.c      ****         usbPutString(printString);
 5087              		.loc 1 1232 0
 5088 004c 3B46     		mov	r3, r7
 5089 004e 1846     		mov	r0, r3
 5090 0050 FFF7FEFF 		bl	usbPutString
1233:.\main.c      ****         usbPutString("robot_y:");
 5091              		.loc 1 1233 0
 5092 0054 1648     		ldr	r0, .L265+20
 5093 0056 FFF7FEFF 		bl	usbPutString
1234:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 5094              		.loc 1 1234 0
 5095 005a 124B     		ldr	r3, .L265+8
 5096 005c 9B88     		ldrh	r3, [r3, #4]
 5097 005e 1BB2     		sxth	r3, r3
 5098 0060 3A46     		mov	r2, r7
 5099 0062 1046     		mov	r0, r2
 5100 0064 1049     		ldr	r1, .L265+12
 5101 0066 1A46     		mov	r2, r3
 5102 0068 FFF7FEFF 		bl	sprintf
1235:.\main.c      ****         usbPutString(printString);
 5103              		.loc 1 1235 0
 5104 006c 3B46     		mov	r3, r7
 5105 006e 1846     		mov	r0, r3
 5106 0070 FFF7FEFF 		bl	usbPutString
1236:.\main.c      ****         usbPutString("robot_dir:");
 5107              		.loc 1 1236 0
 5108 0074 0F48     		ldr	r0, .L265+24
 5109 0076 FFF7FEFF 		bl	usbPutString
1237:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 5110              		.loc 1 1237 0
 5111 007a 0A4B     		ldr	r3, .L265+8
 5112 007c DB88     		ldrh	r3, [r3, #6]
 5113 007e 1BB2     		sxth	r3, r3
 5114 0080 3A46     		mov	r2, r7
 5115 0082 1046     		mov	r0, r2
 5116 0084 0849     		ldr	r1, .L265+12
 5117 0086 1A46     		mov	r2, r3
 5118 0088 FFF7FEFF 		bl	sprintf
1238:.\main.c      ****         usbPutString(printString);
 5119              		.loc 1 1238 0
 5120 008c 3B46     		mov	r3, r7
 5121 008e 1846     		mov	r0, r3
 5122 0090 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 114


 5123              	.L263:
 5124              	.LBE11:
1239:.\main.c      ****     }
1240:.\main.c      **** }
 5125              		.loc 1 1240 0
 5126 0094 1037     		adds	r7, r7, #16
 5127              		.cfi_def_cfa_offset 8
 5128 0096 BD46     		mov	sp, r7
 5129              		.cfi_def_cfa_register 13
 5130              		@ sp needed
 5131 0098 80BD     		pop	{r7, pc}
 5132              	.L266:
 5133 009a 00BF     		.align	2
 5134              	.L265:
 5135 009c 00000000 		.word	flag_print_rf
 5136 00a0 18010000 		.word	.LC15
 5137 00a4 00000000 		.word	system_state
 5138 00a8 20010000 		.word	.LC16
 5139 00ac 28010000 		.word	.LC17
 5140 00b0 34010000 		.word	.LC18
 5141 00b4 40010000 		.word	.LC19
 5142              		.cfi_endproc
 5143              	.LFE101:
 5144              		.size	print_RF, .-print_RF
 5145              		.section	.text.readFrontSensors,"ax",%progbits
 5146              		.align	2
 5147              		.global	readFrontSensors
 5148              		.thumb
 5149              		.thumb_func
 5150              		.type	readFrontSensors, %function
 5151              	readFrontSensors:
 5152              	.LFB102:
1241:.\main.c      **** 
1242:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1243:.\main.c      **** {
 5153              		.loc 1 1243 0
 5154              		.cfi_startproc
 5155              		@ args = 0, pretend = 0, frame = 8
 5156              		@ frame_needed = 1, uses_anonymous_args = 0
 5157 0000 90B5     		push	{r4, r7, lr}
 5158              		.cfi_def_cfa_offset 12
 5159              		.cfi_offset 4, -12
 5160              		.cfi_offset 7, -8
 5161              		.cfi_offset 14, -4
 5162 0002 83B0     		sub	sp, sp, #12
 5163              		.cfi_def_cfa_offset 24
 5164 0004 00AF     		add	r7, sp, #0
 5165              		.cfi_def_cfa_register 7
 5166 0006 7860     		str	r0, [r7, #4]
1244:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 5167              		.loc 1 1244 0
 5168 0008 FFF7FEFF 		bl	FLSens_out_Read
 5169 000c 0346     		mov	r3, r0
 5170 000e 1A46     		mov	r2, r3
 5171 0010 7B68     		ldr	r3, [r7, #4]
 5172 0012 1A70     		strb	r2, [r3]
1245:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 115


 5173              		.loc 1 1245 0
 5174 0014 7B68     		ldr	r3, [r7, #4]
 5175 0016 5C1C     		adds	r4, r3, #1
 5176 0018 FFF7FEFF 		bl	NLSens_out_Read
 5177 001c 0346     		mov	r3, r0
 5178 001e 2370     		strb	r3, [r4]
1246:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 5179              		.loc 1 1246 0
 5180 0020 7B68     		ldr	r3, [r7, #4]
 5181 0022 9C1C     		adds	r4, r3, #2
 5182 0024 FFF7FEFF 		bl	MSens_out_Read
 5183 0028 0346     		mov	r3, r0
 5184 002a 2370     		strb	r3, [r4]
1247:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 5185              		.loc 1 1247 0
 5186 002c 7B68     		ldr	r3, [r7, #4]
 5187 002e DC1C     		adds	r4, r3, #3
 5188 0030 FFF7FEFF 		bl	NRSens_out_Read
 5189 0034 0346     		mov	r3, r0
 5190 0036 2370     		strb	r3, [r4]
1248:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5191              		.loc 1 1248 0
 5192 0038 7B68     		ldr	r3, [r7, #4]
 5193 003a 1C1D     		adds	r4, r3, #4
 5194 003c FFF7FEFF 		bl	FRSens_out_Read
 5195 0040 0346     		mov	r3, r0
 5196 0042 2370     		strb	r3, [r4]
1249:.\main.c      **** }
 5197              		.loc 1 1249 0
 5198 0044 0C37     		adds	r7, r7, #12
 5199              		.cfi_def_cfa_offset 12
 5200 0046 BD46     		mov	sp, r7
 5201              		.cfi_def_cfa_register 13
 5202              		@ sp needed
 5203 0048 90BD     		pop	{r4, r7, pc}
 5204              		.cfi_endproc
 5205              	.LFE102:
 5206              		.size	readFrontSensors, .-readFrontSensors
 5207 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5208              		.align	2
 5209              		.global	usbPutString
 5210              		.thumb
 5211              		.thumb_func
 5212              		.type	usbPutString, %function
 5213              	usbPutString:
 5214              	.LFB103:
1250:.\main.c      **** 
1251:.\main.c      **** 
1252:.\main.c      **** //* ========================================
1253:.\main.c      **** void usbPutString(char *s)
1254:.\main.c      **** {
 5215              		.loc 1 1254 0
 5216              		.cfi_startproc
 5217              		@ args = 0, pretend = 0, frame = 16
 5218              		@ frame_needed = 1, uses_anonymous_args = 0
 5219 0000 80B5     		push	{r7, lr}
 5220              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 116


 5221              		.cfi_offset 7, -8
 5222              		.cfi_offset 14, -4
 5223 0002 84B0     		sub	sp, sp, #16
 5224              		.cfi_def_cfa_offset 24
 5225 0004 00AF     		add	r7, sp, #0
 5226              		.cfi_def_cfa_register 7
 5227 0006 7860     		str	r0, [r7, #4]
1255:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1256:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1257:.\main.c      **** //  length to 62 char (63rd char is a '!')
1258:.\main.c      ****     if (USE_USB && portOpen)
 5228              		.loc 1 1258 0
 5229 0008 154B     		ldr	r3, .L272
 5230 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5231 000c 002B     		cmp	r3, #0
 5232 000e 23D0     		beq	.L268
 5233              	.LBB12:
1259:.\main.c      ****     {
1260:.\main.c      ****             uint32 cnt = 0;
 5234              		.loc 1 1260 0
 5235 0010 0023     		movs	r3, #0
 5236 0012 FB60     		str	r3, [r7, #12]
1261:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5237              		.loc 1 1261 0
 5238 0014 0AE0     		b	.L270
 5239              	.L271:
1262:.\main.c      ****             {
1263:.\main.c      ****                 cnt++;
 5240              		.loc 1 1263 0
 5241 0016 FB68     		ldr	r3, [r7, #12]
 5242 0018 0133     		adds	r3, r3, #1
 5243 001a FB60     		str	r3, [r7, #12]
1264:.\main.c      ****                 if(cnt == 3000000){
 5244              		.loc 1 1264 0
 5245 001c FB68     		ldr	r3, [r7, #12]
 5246 001e 114A     		ldr	r2, .L272+4
 5247 0020 9342     		cmp	r3, r2
 5248 0022 03D1     		bne	.L270
1265:.\main.c      ****                     portOpen = 0;
 5249              		.loc 1 1265 0
 5250 0024 0E4B     		ldr	r3, .L272
 5251 0026 0022     		movs	r2, #0
 5252 0028 1A70     		strb	r2, [r3]
1266:.\main.c      ****                     return;
 5253              		.loc 1 1266 0
 5254 002a 15E0     		b	.L268
 5255              	.L270:
1261:.\main.c      ****             {
 5256              		.loc 1 1261 0
 5257 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5258 0030 0346     		mov	r3, r0
 5259 0032 002B     		cmp	r3, #0
 5260 0034 EFD0     		beq	.L271
1267:.\main.c      ****                 }
1268:.\main.c      ****             }
1269:.\main.c      ****             s[63]='\0';
 5261              		.loc 1 1269 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 117


 5262 0036 7B68     		ldr	r3, [r7, #4]
 5263 0038 3F33     		adds	r3, r3, #63
 5264 003a 0022     		movs	r2, #0
 5265 003c 1A70     		strb	r2, [r3]
1270:.\main.c      ****             s[62]='!';
 5266              		.loc 1 1270 0
 5267 003e 7B68     		ldr	r3, [r7, #4]
 5268 0040 3E33     		adds	r3, r3, #62
 5269 0042 2122     		movs	r2, #33
 5270 0044 1A70     		strb	r2, [r3]
1271:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5271              		.loc 1 1271 0
 5272 0046 7868     		ldr	r0, [r7, #4]
 5273 0048 FFF7FEFF 		bl	strlen
 5274 004c 0346     		mov	r3, r0
 5275 004e 9BB2     		uxth	r3, r3
 5276 0050 7868     		ldr	r0, [r7, #4]
 5277 0052 1946     		mov	r1, r3
 5278 0054 FFF7FEFF 		bl	USBUART_PutData
 5279              	.L268:
 5280              	.LBE12:
1272:.\main.c      ****     }
1273:.\main.c      **** }
 5281              		.loc 1 1273 0
 5282 0058 1037     		adds	r7, r7, #16
 5283              		.cfi_def_cfa_offset 8
 5284 005a BD46     		mov	sp, r7
 5285              		.cfi_def_cfa_register 13
 5286              		@ sp needed
 5287 005c 80BD     		pop	{r7, pc}
 5288              	.L273:
 5289 005e 00BF     		.align	2
 5290              	.L272:
 5291 0060 00000000 		.word	portOpen
 5292 0064 C0C62D00 		.word	3000000
 5293              		.cfi_endproc
 5294              	.LFE103:
 5295              		.size	usbPutString, .-usbPutString
 5296              		.section	.text.usbPutChar,"ax",%progbits
 5297              		.align	2
 5298              		.global	usbPutChar
 5299              		.thumb
 5300              		.thumb_func
 5301              		.type	usbPutChar, %function
 5302              	usbPutChar:
 5303              	.LFB104:
1274:.\main.c      **** //* ========================================
1275:.\main.c      **** void usbPutChar(char c)
1276:.\main.c      **** {
 5304              		.loc 1 1276 0
 5305              		.cfi_startproc
 5306              		@ args = 0, pretend = 0, frame = 16
 5307              		@ frame_needed = 1, uses_anonymous_args = 0
 5308 0000 80B5     		push	{r7, lr}
 5309              		.cfi_def_cfa_offset 8
 5310              		.cfi_offset 7, -8
 5311              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 118


 5312 0002 84B0     		sub	sp, sp, #16
 5313              		.cfi_def_cfa_offset 24
 5314 0004 00AF     		add	r7, sp, #0
 5315              		.cfi_def_cfa_register 7
 5316 0006 0346     		mov	r3, r0
 5317 0008 FB71     		strb	r3, [r7, #7]
1277:.\main.c      ****     if (USE_USB && portOpen)    
 5318              		.loc 1 1277 0
 5319 000a 0F4B     		ldr	r3, .L278
 5320 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5321 000e 002B     		cmp	r3, #0
 5322 0010 16D0     		beq	.L274
 5323              	.LBB13:
1278:.\main.c      ****     {    
1279:.\main.c      ****         uint32 cnt = 0;
 5324              		.loc 1 1279 0
 5325 0012 0023     		movs	r3, #0
 5326 0014 FB60     		str	r3, [r7, #12]
1280:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5327              		.loc 1 1280 0
 5328 0016 0AE0     		b	.L276
 5329              	.L277:
1281:.\main.c      ****             cnt++;
 5330              		.loc 1 1281 0
 5331 0018 FB68     		ldr	r3, [r7, #12]
 5332 001a 0133     		adds	r3, r3, #1
 5333 001c FB60     		str	r3, [r7, #12]
1282:.\main.c      ****             if(cnt == 3000000){
 5334              		.loc 1 1282 0
 5335 001e FB68     		ldr	r3, [r7, #12]
 5336 0020 0A4A     		ldr	r2, .L278+4
 5337 0022 9342     		cmp	r3, r2
 5338 0024 03D1     		bne	.L276
1283:.\main.c      ****                 portOpen = 0;
 5339              		.loc 1 1283 0
 5340 0026 084B     		ldr	r3, .L278
 5341 0028 0022     		movs	r2, #0
 5342 002a 1A70     		strb	r2, [r3]
1284:.\main.c      ****                 return;
 5343              		.loc 1 1284 0
 5344 002c 08E0     		b	.L274
 5345              	.L276:
1280:.\main.c      ****             cnt++;
 5346              		.loc 1 1280 0
 5347 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5348 0032 0346     		mov	r3, r0
 5349 0034 002B     		cmp	r3, #0
 5350 0036 EFD0     		beq	.L277
1285:.\main.c      ****             }
1286:.\main.c      ****         }
1287:.\main.c      ****         USBUART_PutChar(c);
 5351              		.loc 1 1287 0
 5352 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5353 003a 1846     		mov	r0, r3
 5354 003c FFF7FEFF 		bl	USBUART_PutChar
 5355              	.L274:
 5356              	.LBE13:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 119


1288:.\main.c      ****     }    
1289:.\main.c      **** }
 5357              		.loc 1 1289 0
 5358 0040 1037     		adds	r7, r7, #16
 5359              		.cfi_def_cfa_offset 8
 5360 0042 BD46     		mov	sp, r7
 5361              		.cfi_def_cfa_register 13
 5362              		@ sp needed
 5363 0044 80BD     		pop	{r7, pc}
 5364              	.L279:
 5365 0046 00BF     		.align	2
 5366              	.L278:
 5367 0048 00000000 		.word	portOpen
 5368 004c C0C62D00 		.word	3000000
 5369              		.cfi_endproc
 5370              	.LFE104:
 5371              		.size	usbPutChar, .-usbPutChar
 5372              		.section	.text.uart_set_PWM,"ax",%progbits
 5373              		.align	2
 5374              		.global	uart_set_PWM
 5375              		.thumb
 5376              		.thumb_func
 5377              		.type	uart_set_PWM, %function
 5378              	uart_set_PWM:
 5379              	.LFB105:
1290:.\main.c      **** //* ========================================
1291:.\main.c      **** 
1292:.\main.c      **** void uart_set_PWM()
1293:.\main.c      **** {
 5380              		.loc 1 1293 0
 5381              		.cfi_startproc
 5382              		@ args = 0, pretend = 0, frame = 0
 5383              		@ frame_needed = 1, uses_anonymous_args = 0
 5384              		@ link register save eliminated.
 5385 0000 80B4     		push	{r7}
 5386              		.cfi_def_cfa_offset 4
 5387              		.cfi_offset 7, -4
 5388 0002 00AF     		add	r7, sp, #0
 5389              		.cfi_def_cfa_register 7
1294:.\main.c      ****     //removed from final implementation
1295:.\main.c      **** }
 5390              		.loc 1 1295 0
 5391 0004 BD46     		mov	sp, r7
 5392              		.cfi_def_cfa_register 13
 5393              		@ sp needed
 5394 0006 5DF8047B 		ldr	r7, [sp], #4
 5395              		.cfi_restore 7
 5396              		.cfi_def_cfa_offset 0
 5397 000a 7047     		bx	lr
 5398              		.cfi_endproc
 5399              	.LFE105:
 5400              		.size	uart_set_PWM, .-uart_set_PWM
 5401              		.text
 5402              	.Letext0:
 5403              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5404              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5405              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 120


 5406              		.file 5 ".\\vars.h"
 5407              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5408              		.file 7 ".\\pathfinder.h"
 5409              		.section	.debug_info,"",%progbits
 5410              	.Ldebug_info0:
 5411 0000 5E0E0000 		.4byte	0xe5e
 5412 0004 0400     		.2byte	0x4
 5413 0006 00000000 		.4byte	.Ldebug_abbrev0
 5414 000a 04       		.byte	0x4
 5415 000b 01       		.uleb128 0x1
 5416 000c AE040000 		.4byte	.LASF198
 5417 0010 01       		.byte	0x1
 5418 0011 93090000 		.4byte	.LASF199
 5419 0015 1C000000 		.4byte	.LASF200
 5420 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5421 001d 00000000 		.4byte	0
 5422 0021 00000000 		.4byte	.Ldebug_line0
 5423 0025 02       		.uleb128 0x2
 5424 0026 01       		.byte	0x1
 5425 0027 06       		.byte	0x6
 5426 0028 CD080000 		.4byte	.LASF0
 5427 002c 02       		.uleb128 0x2
 5428 002d 01       		.byte	0x1
 5429 002e 08       		.byte	0x8
 5430 002f 0A080000 		.4byte	.LASF1
 5431 0033 02       		.uleb128 0x2
 5432 0034 02       		.byte	0x2
 5433 0035 05       		.byte	0x5
 5434 0036 64060000 		.4byte	.LASF2
 5435 003a 02       		.uleb128 0x2
 5436 003b 02       		.byte	0x2
 5437 003c 07       		.byte	0x7
 5438 003d D9080000 		.4byte	.LASF3
 5439 0041 03       		.uleb128 0x3
 5440 0042 DF000000 		.4byte	.LASF5
 5441 0046 02       		.byte	0x2
 5442 0047 3F       		.byte	0x3f
 5443 0048 4C000000 		.4byte	0x4c
 5444 004c 02       		.uleb128 0x2
 5445 004d 04       		.byte	0x4
 5446 004e 05       		.byte	0x5
 5447 004f 98060000 		.4byte	.LASF4
 5448 0053 03       		.uleb128 0x3
 5449 0054 18080000 		.4byte	.LASF6
 5450 0058 02       		.byte	0x2
 5451 0059 41       		.byte	0x41
 5452 005a 5E000000 		.4byte	0x5e
 5453 005e 02       		.uleb128 0x2
 5454 005f 04       		.byte	0x4
 5455 0060 07       		.byte	0x7
 5456 0061 9C070000 		.4byte	.LASF7
 5457 0065 02       		.uleb128 0x2
 5458 0066 08       		.byte	0x8
 5459 0067 05       		.byte	0x5
 5460 0068 78040000 		.4byte	.LASF8
 5461 006c 02       		.uleb128 0x2
 5462 006d 08       		.byte	0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 121


 5463 006e 07       		.byte	0x7
 5464 006f 86020000 		.4byte	.LASF9
 5465 0073 04       		.uleb128 0x4
 5466 0074 04       		.byte	0x4
 5467 0075 05       		.byte	0x5
 5468 0076 696E7400 		.ascii	"int\000"
 5469 007a 02       		.uleb128 0x2
 5470 007b 04       		.byte	0x4
 5471 007c 07       		.byte	0x7
 5472 007d C7000000 		.4byte	.LASF10
 5473 0081 02       		.uleb128 0x2
 5474 0082 04       		.byte	0x4
 5475 0083 07       		.byte	0x7
 5476 0084 93070000 		.4byte	.LASF11
 5477 0088 05       		.uleb128 0x5
 5478 0089 04       		.byte	0x4
 5479 008a 8E000000 		.4byte	0x8e
 5480 008e 02       		.uleb128 0x2
 5481 008f 01       		.byte	0x1
 5482 0090 08       		.byte	0x8
 5483 0091 B5030000 		.4byte	.LASF12
 5484 0095 03       		.uleb128 0x3
 5485 0096 BA070000 		.4byte	.LASF13
 5486 009a 03       		.byte	0x3
 5487 009b 2C       		.byte	0x2c
 5488 009c 41000000 		.4byte	0x41
 5489 00a0 03       		.uleb128 0x3
 5490 00a1 06020000 		.4byte	.LASF14
 5491 00a5 03       		.byte	0x3
 5492 00a6 2D       		.byte	0x2d
 5493 00a7 53000000 		.4byte	0x53
 5494 00ab 06       		.uleb128 0x6
 5495 00ac 20090000 		.4byte	.LASF15
 5496 00b0 04       		.byte	0x4
 5497 00b1 9201     		.2byte	0x192
 5498 00b3 2C000000 		.4byte	0x2c
 5499 00b7 06       		.uleb128 0x6
 5500 00b8 08040000 		.4byte	.LASF16
 5501 00bc 04       		.byte	0x4
 5502 00bd 9301     		.2byte	0x193
 5503 00bf 3A000000 		.4byte	0x3a
 5504 00c3 06       		.uleb128 0x6
 5505 00c4 7F050000 		.4byte	.LASF17
 5506 00c8 04       		.byte	0x4
 5507 00c9 9401     		.2byte	0x194
 5508 00cb 5E000000 		.4byte	0x5e
 5509 00cf 06       		.uleb128 0x6
 5510 00d0 0F040000 		.4byte	.LASF18
 5511 00d4 04       		.byte	0x4
 5512 00d5 9501     		.2byte	0x195
 5513 00d7 25000000 		.4byte	0x25
 5514 00db 06       		.uleb128 0x6
 5515 00dc E9000000 		.4byte	.LASF19
 5516 00e0 04       		.byte	0x4
 5517 00e1 9601     		.2byte	0x196
 5518 00e3 33000000 		.4byte	0x33
 5519 00e7 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 122


 5520 00e8 04       		.byte	0x4
 5521 00e9 04       		.byte	0x4
 5522 00ea 26020000 		.4byte	.LASF20
 5523 00ee 02       		.uleb128 0x2
 5524 00ef 08       		.byte	0x8
 5525 00f0 04       		.byte	0x4
 5526 00f1 26090000 		.4byte	.LASF21
 5527 00f5 07       		.uleb128 0x7
 5528 00f6 A0000000 		.4byte	0xa0
 5529 00fa 05010000 		.4byte	0x105
 5530 00fe 08       		.uleb128 0x8
 5531 00ff 81000000 		.4byte	0x81
 5532 0103 01       		.byte	0x1
 5533 0104 00       		.byte	0
 5534 0105 02       		.uleb128 0x2
 5535 0106 08       		.byte	0x8
 5536 0107 04       		.byte	0x4
 5537 0108 FB050000 		.4byte	.LASF22
 5538 010c 09       		.uleb128 0x9
 5539 010d 65080000 		.4byte	.LASF31
 5540 0111 01       		.byte	0x1
 5541 0112 05       		.byte	0x5
 5542 0113 63       		.byte	0x63
 5543 0114 49010000 		.4byte	0x149
 5544 0118 0A       		.uleb128 0xa
 5545 0119 45020000 		.4byte	.LASF23
 5546 011d 00       		.sleb128 0
 5547 011e 0A       		.uleb128 0xa
 5548 011f FC000000 		.4byte	.LASF24
 5549 0123 01       		.sleb128 1
 5550 0124 0A       		.uleb128 0xa
 5551 0125 5B000000 		.4byte	.LASF25
 5552 0129 02       		.sleb128 2
 5553 012a 0A       		.uleb128 0xa
 5554 012b EA050000 		.4byte	.LASF26
 5555 012f 03       		.sleb128 3
 5556 0130 0A       		.uleb128 0xa
 5557 0131 17010000 		.4byte	.LASF27
 5558 0135 04       		.sleb128 4
 5559 0136 0A       		.uleb128 0xa
 5560 0137 EF010000 		.4byte	.LASF28
 5561 013b 05       		.sleb128 5
 5562 013c 0A       		.uleb128 0xa
 5563 013d 0E070000 		.4byte	.LASF29
 5564 0141 06       		.sleb128 6
 5565 0142 0A       		.uleb128 0xa
 5566 0143 60090000 		.4byte	.LASF30
 5567 0147 07       		.sleb128 7
 5568 0148 00       		.byte	0
 5569 0149 09       		.uleb128 0x9
 5570 014a 52010000 		.4byte	.LASF32
 5571 014e 01       		.byte	0x1
 5572 014f 05       		.byte	0x5
 5573 0150 64       		.byte	0x64
 5574 0151 86010000 		.4byte	0x186
 5575 0155 0A       		.uleb128 0xa
 5576 0156 E0060000 		.4byte	.LASF33
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 123


 5577 015a 00       		.sleb128 0
 5578 015b 0A       		.uleb128 0xa
 5579 015c 3F040000 		.4byte	.LASF34
 5580 0160 01       		.sleb128 1
 5581 0161 0A       		.uleb128 0xa
 5582 0162 AF060000 		.4byte	.LASF35
 5583 0166 02       		.sleb128 2
 5584 0167 0A       		.uleb128 0xa
 5585 0168 A9010000 		.4byte	.LASF36
 5586 016c 03       		.sleb128 3
 5587 016d 0A       		.uleb128 0xa
 5588 016e FE080000 		.4byte	.LASF37
 5589 0172 04       		.sleb128 4
 5590 0173 0A       		.uleb128 0xa
 5591 0174 3E090000 		.4byte	.LASF38
 5592 0178 05       		.sleb128 5
 5593 0179 0A       		.uleb128 0xa
 5594 017a 78000000 		.4byte	.LASF39
 5595 017e 06       		.sleb128 6
 5596 017f 0A       		.uleb128 0xa
 5597 0180 01070000 		.4byte	.LASF40
 5598 0184 07       		.sleb128 7
 5599 0185 00       		.byte	0
 5600 0186 0B       		.uleb128 0xb
 5601 0187 9F050000 		.4byte	.LASF201
 5602 018b 20       		.byte	0x20
 5603 018c 05       		.byte	0x5
 5604 018d 6A       		.byte	0x6a
 5605 018e 5F020000 		.4byte	0x25f
 5606 0192 0C       		.uleb128 0xc
 5607 0193 BD050000 		.4byte	.LASF41
 5608 0197 05       		.byte	0x5
 5609 0198 6B       		.byte	0x6b
 5610 0199 CF000000 		.4byte	0xcf
 5611 019d 00       		.byte	0
 5612 019e 0C       		.uleb128 0xc
 5613 019f 3F020000 		.4byte	.LASF42
 5614 01a3 05       		.byte	0x5
 5615 01a4 6C       		.byte	0x6c
 5616 01a5 AB000000 		.4byte	0xab
 5617 01a9 01       		.byte	0x1
 5618 01aa 0C       		.uleb128 0xc
 5619 01ab E2070000 		.4byte	.LASF43
 5620 01af 05       		.byte	0x5
 5621 01b0 6D       		.byte	0x6d
 5622 01b1 DB000000 		.4byte	0xdb
 5623 01b5 02       		.byte	0x2
 5624 01b6 0C       		.uleb128 0xc
 5625 01b7 89030000 		.4byte	.LASF44
 5626 01bb 05       		.byte	0x5
 5627 01bc 6E       		.byte	0x6e
 5628 01bd DB000000 		.4byte	0xdb
 5629 01c1 04       		.byte	0x4
 5630 01c2 0C       		.uleb128 0xc
 5631 01c3 EC080000 		.4byte	.LASF45
 5632 01c7 05       		.byte	0x5
 5633 01c8 6F       		.byte	0x6f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 124


 5634 01c9 DB000000 		.4byte	0xdb
 5635 01cd 06       		.byte	0x6
 5636 01ce 0C       		.uleb128 0xc
 5637 01cf 66090000 		.4byte	.LASF46
 5638 01d3 05       		.byte	0x5
 5639 01d4 70       		.byte	0x70
 5640 01d5 DB000000 		.4byte	0xdb
 5641 01d9 08       		.byte	0x8
 5642 01da 0C       		.uleb128 0xc
 5643 01db 45050000 		.4byte	.LASF47
 5644 01df 05       		.byte	0x5
 5645 01e0 71       		.byte	0x71
 5646 01e1 DB000000 		.4byte	0xdb
 5647 01e5 0A       		.byte	0xa
 5648 01e6 0C       		.uleb128 0xc
 5649 01e7 BA030000 		.4byte	.LASF48
 5650 01eb 05       		.byte	0x5
 5651 01ec 72       		.byte	0x72
 5652 01ed DB000000 		.4byte	0xdb
 5653 01f1 0C       		.byte	0xc
 5654 01f2 0C       		.uleb128 0xc
 5655 01f3 CC050000 		.4byte	.LASF49
 5656 01f7 05       		.byte	0x5
 5657 01f8 73       		.byte	0x73
 5658 01f9 DB000000 		.4byte	0xdb
 5659 01fd 0E       		.byte	0xe
 5660 01fe 0C       		.uleb128 0xc
 5661 01ff 93040000 		.4byte	.LASF50
 5662 0203 05       		.byte	0x5
 5663 0204 74       		.byte	0x74
 5664 0205 DB000000 		.4byte	0xdb
 5665 0209 10       		.byte	0x10
 5666 020a 0C       		.uleb128 0xc
 5667 020b 53070000 		.4byte	.LASF51
 5668 020f 05       		.byte	0x5
 5669 0210 75       		.byte	0x75
 5670 0211 DB000000 		.4byte	0xdb
 5671 0215 12       		.byte	0x12
 5672 0216 0C       		.uleb128 0xc
 5673 0217 8A090000 		.4byte	.LASF52
 5674 021b 05       		.byte	0x5
 5675 021c 76       		.byte	0x76
 5676 021d DB000000 		.4byte	0xdb
 5677 0221 14       		.byte	0x14
 5678 0222 0C       		.uleb128 0xc
 5679 0223 21040000 		.4byte	.LASF53
 5680 0227 05       		.byte	0x5
 5681 0228 77       		.byte	0x77
 5682 0229 DB000000 		.4byte	0xdb
 5683 022d 16       		.byte	0x16
 5684 022e 0C       		.uleb128 0xc
 5685 022f 4A010000 		.4byte	.LASF54
 5686 0233 05       		.byte	0x5
 5687 0234 78       		.byte	0x78
 5688 0235 DB000000 		.4byte	0xdb
 5689 0239 18       		.byte	0x18
 5690 023a 0C       		.uleb128 0xc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 125


 5691 023b F5030000 		.4byte	.LASF55
 5692 023f 05       		.byte	0x5
 5693 0240 79       		.byte	0x79
 5694 0241 DB000000 		.4byte	0xdb
 5695 0245 1A       		.byte	0x1a
 5696 0246 0C       		.uleb128 0xc
 5697 0247 3C050000 		.4byte	.LASF56
 5698 024b 05       		.byte	0x5
 5699 024c 7A       		.byte	0x7a
 5700 024d DB000000 		.4byte	0xdb
 5701 0251 1C       		.byte	0x1c
 5702 0252 0C       		.uleb128 0xc
 5703 0253 0F020000 		.4byte	.LASF57
 5704 0257 05       		.byte	0x5
 5705 0258 7B       		.byte	0x7b
 5706 0259 DB000000 		.4byte	0xdb
 5707 025d 1E       		.byte	0x1e
 5708 025e 00       		.byte	0
 5709 025f 0D       		.uleb128 0xd
 5710 0260 0D090000 		.4byte	.LASF58
 5711 0264 01       		.byte	0x1
 5712 0265 84       		.byte	0x84
 5713 0266 00000000 		.4byte	.LFB63
 5714 026a 0C000000 		.4byte	.LFE63-.LFB63
 5715 026e 01       		.uleb128 0x1
 5716 026f 9C       		.byte	0x9c
 5717 0270 0E       		.uleb128 0xe
 5718 0271 5B070000 		.4byte	.LASF59
 5719 0275 01       		.byte	0x1
 5720 0276 8A       		.byte	0x8a
 5721 0277 00000000 		.4byte	.LFB64
 5722 027b 2C000000 		.4byte	.LFE64-.LFB64
 5723 027f 01       		.uleb128 0x1
 5724 0280 9C       		.byte	0x9c
 5725 0281 0E       		.uleb128 0xe
 5726 0282 1C020000 		.4byte	.LASF60
 5727 0286 01       		.byte	0x1
 5728 0287 93       		.byte	0x93
 5729 0288 00000000 		.4byte	.LFB65
 5730 028c 98010000 		.4byte	.LFE65-.LFB65
 5731 0290 01       		.uleb128 0x1
 5732 0291 9C       		.byte	0x9c
 5733 0292 0F       		.uleb128 0xf
 5734 0293 B6020000 		.4byte	.LASF66
 5735 0297 01       		.byte	0x1
 5736 0298 B8       		.byte	0xb8
 5737 0299 00000000 		.4byte	.LFB66
 5738 029d 34010000 		.4byte	.LFE66-.LFB66
 5739 02a1 01       		.uleb128 0x1
 5740 02a2 9C       		.byte	0x9c
 5741 02a3 DC020000 		.4byte	0x2dc
 5742 02a7 10       		.uleb128 0x10
 5743 02a8 0E000000 		.4byte	.LBB2
 5744 02ac 64000000 		.4byte	.LBE2-.LBB2
 5745 02b0 C3020000 		.4byte	0x2c3
 5746 02b4 11       		.uleb128 0x11
 5747 02b5 FD030000 		.4byte	.LASF61
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 126


 5748 02b9 01       		.byte	0x1
 5749 02ba BC       		.byte	0xbc
 5750 02bb B7000000 		.4byte	0xb7
 5751 02bf 02       		.uleb128 0x2
 5752 02c0 91       		.byte	0x91
 5753 02c1 76       		.sleb128 -10
 5754 02c2 00       		.byte	0
 5755 02c3 12       		.uleb128 0x12
 5756 02c4 7E000000 		.4byte	.LBB3
 5757 02c8 64000000 		.4byte	.LBE3-.LBB3
 5758 02cc 11       		.uleb128 0x11
 5759 02cd FD030000 		.4byte	.LASF61
 5760 02d1 01       		.byte	0x1
 5761 02d2 C8       		.byte	0xc8
 5762 02d3 B7000000 		.4byte	0xb7
 5763 02d7 02       		.uleb128 0x2
 5764 02d8 91       		.byte	0x91
 5765 02d9 74       		.sleb128 -12
 5766 02da 00       		.byte	0
 5767 02db 00       		.byte	0
 5768 02dc 0D       		.uleb128 0xd
 5769 02dd 37080000 		.4byte	.LASF62
 5770 02e1 01       		.byte	0x1
 5771 02e2 DE       		.byte	0xde
 5772 02e3 00000000 		.4byte	.LFB67
 5773 02e7 20000000 		.4byte	.LFE67-.LFB67
 5774 02eb 01       		.uleb128 0x1
 5775 02ec 9C       		.byte	0x9c
 5776 02ed 0E       		.uleb128 0xe
 5777 02ee 3C030000 		.4byte	.LASF63
 5778 02f2 01       		.byte	0x1
 5779 02f3 E5       		.byte	0xe5
 5780 02f4 00000000 		.4byte	.LFB68
 5781 02f8 28000000 		.4byte	.LFE68-.LFB68
 5782 02fc 01       		.uleb128 0x1
 5783 02fd 9C       		.byte	0x9c
 5784 02fe 0E       		.uleb128 0xe
 5785 02ff 07060000 		.4byte	.LASF64
 5786 0303 01       		.byte	0x1
 5787 0304 EE       		.byte	0xee
 5788 0305 00000000 		.4byte	.LFB69
 5789 0309 0A000000 		.4byte	.LFE69-.LFB69
 5790 030d 01       		.uleb128 0x1
 5791 030e 9C       		.byte	0x9c
 5792 030f 0E       		.uleb128 0xe
 5793 0310 24060000 		.4byte	.LASF65
 5794 0314 01       		.byte	0x1
 5795 0315 F3       		.byte	0xf3
 5796 0316 00000000 		.4byte	.LFB70
 5797 031a 28000000 		.4byte	.LFE70-.LFB70
 5798 031e 01       		.uleb128 0x1
 5799 031f 9C       		.byte	0x9c
 5800 0320 13       		.uleb128 0x13
 5801 0321 08090000 		.4byte	.LASF67
 5802 0325 01       		.byte	0x1
 5803 0326 FE       		.byte	0xfe
 5804 0327 73000000 		.4byte	0x73
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 127


 5805 032b 00000000 		.4byte	.LFB71
 5806 032f B0060000 		.4byte	.LFE71-.LFB71
 5807 0333 01       		.uleb128 0x1
 5808 0334 9C       		.byte	0x9c
 5809 0335 C0030000 		.4byte	0x3c0
 5810 0339 14       		.uleb128 0x14
 5811 033a 2D030000 		.4byte	.LASF68
 5812 033e 01       		.byte	0x1
 5813 033f 3701     		.2byte	0x137
 5814 0341 B7000000 		.4byte	0xb7
 5815 0345 02       		.uleb128 0x2
 5816 0346 91       		.byte	0x91
 5817 0347 76       		.sleb128 -10
 5818 0348 12       		.uleb128 0x12
 5819 0349 38010000 		.4byte	.LBB4
 5820 034d C6040000 		.4byte	.LBE4-.LBB4
 5821 0351 14       		.uleb128 0x14
 5822 0352 A5040000 		.4byte	.LASF69
 5823 0356 01       		.byte	0x1
 5824 0357 6E01     		.2byte	0x16e
 5825 0359 8E000000 		.4byte	0x8e
 5826 035d 02       		.uleb128 0x2
 5827 035e 91       		.byte	0x91
 5828 035f 73       		.sleb128 -13
 5829 0360 10       		.uleb128 0x10
 5830 0361 88010000 		.4byte	.LBB5
 5831 0365 A8020000 		.4byte	.LBE5-.LBB5
 5832 0369 8C030000 		.4byte	0x38c
 5833 036d 15       		.uleb128 0x15
 5834 036e 6D657300 		.ascii	"mes\000"
 5835 0372 01       		.byte	0x1
 5836 0373 B601     		.2byte	0x1b6
 5837 0375 C0030000 		.4byte	0x3c0
 5838 0379 02       		.uleb128 0x2
 5839 037a 91       		.byte	0x91
 5840 037b 60       		.sleb128 -32
 5841 037c 14       		.uleb128 0x14
 5842 037d 14040000 		.4byte	.LASF70
 5843 0381 01       		.byte	0x1
 5844 0382 BA01     		.2byte	0x1ba
 5845 0384 AB000000 		.4byte	0xab
 5846 0388 02       		.uleb128 0x2
 5847 0389 91       		.byte	0x91
 5848 038a 75       		.sleb128 -11
 5849 038b 00       		.byte	0
 5850 038c 12       		.uleb128 0x12
 5851 038d 70040000 		.4byte	.LBB6
 5852 0391 82010000 		.4byte	.LBE6-.LBB6
 5853 0395 15       		.uleb128 0x15
 5854 0396 6D657300 		.ascii	"mes\000"
 5855 039a 01       		.byte	0x1
 5856 039b FB01     		.2byte	0x1fb
 5857 039d C0030000 		.4byte	0x3c0
 5858 03a1 02       		.uleb128 0x2
 5859 03a2 91       		.byte	0x91
 5860 03a3 50       		.sleb128 -48
 5861 03a4 12       		.uleb128 0x12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 128


 5862 03a5 94040000 		.4byte	.LBB7
 5863 03a9 5E010000 		.4byte	.LBE7-.LBB7
 5864 03ad 14       		.uleb128 0x14
 5865 03ae 14040000 		.4byte	.LASF70
 5866 03b2 01       		.byte	0x1
 5867 03b3 0C02     		.2byte	0x20c
 5868 03b5 AB000000 		.4byte	0xab
 5869 03b9 02       		.uleb128 0x2
 5870 03ba 91       		.byte	0x91
 5871 03bb 74       		.sleb128 -12
 5872 03bc 00       		.byte	0
 5873 03bd 00       		.byte	0
 5874 03be 00       		.byte	0
 5875 03bf 00       		.byte	0
 5876 03c0 07       		.uleb128 0x7
 5877 03c1 8E000000 		.4byte	0x8e
 5878 03c5 D0030000 		.4byte	0x3d0
 5879 03c9 08       		.uleb128 0x8
 5880 03ca 81000000 		.4byte	0x81
 5881 03ce 0F       		.byte	0xf
 5882 03cf 00       		.byte	0
 5883 03d0 16       		.uleb128 0x16
 5884 03d1 46090000 		.4byte	.LASF76
 5885 03d5 01       		.byte	0x1
 5886 03d6 A302     		.2byte	0x2a3
 5887 03d8 00000000 		.4byte	.LFB72
 5888 03dc 60010000 		.4byte	.LFE72-.LFB72
 5889 03e0 01       		.uleb128 0x1
 5890 03e1 9C       		.byte	0x9c
 5891 03e2 1E040000 		.4byte	0x41e
 5892 03e6 12       		.uleb128 0x12
 5893 03e7 10000000 		.4byte	.LBB8
 5894 03eb 34010000 		.4byte	.LBE8-.LBB8
 5895 03ef 14       		.uleb128 0x14
 5896 03f0 3D010000 		.4byte	.LASF71
 5897 03f4 01       		.byte	0x1
 5898 03f5 A902     		.2byte	0x2a9
 5899 03f7 B7000000 		.4byte	0xb7
 5900 03fb 02       		.uleb128 0x2
 5901 03fc 91       		.byte	0x91
 5902 03fd 76       		.sleb128 -10
 5903 03fe 14       		.uleb128 0x14
 5904 03ff AE070000 		.4byte	.LASF72
 5905 0403 01       		.byte	0x1
 5906 0404 AA02     		.2byte	0x2aa
 5907 0406 1E040000 		.4byte	0x41e
 5908 040a 02       		.uleb128 0x2
 5909 040b 91       		.byte	0x91
 5910 040c 68       		.sleb128 -24
 5911 040d 14       		.uleb128 0x14
 5912 040e 4B020000 		.4byte	.LASF73
 5913 0412 01       		.byte	0x1
 5914 0413 AB02     		.2byte	0x2ab
 5915 0415 1E040000 		.4byte	0x41e
 5916 0419 02       		.uleb128 0x2
 5917 041a 91       		.byte	0x91
 5918 041b 5C       		.sleb128 -36
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 129


 5919 041c 00       		.byte	0
 5920 041d 00       		.byte	0
 5921 041e 07       		.uleb128 0x7
 5922 041f 8E000000 		.4byte	0x8e
 5923 0423 2E040000 		.4byte	0x42e
 5924 0427 08       		.uleb128 0x8
 5925 0428 81000000 		.4byte	0x81
 5926 042c 0B       		.byte	0xb
 5927 042d 00       		.byte	0
 5928 042e 17       		.uleb128 0x17
 5929 042f D3030000 		.4byte	.LASF74
 5930 0433 01       		.byte	0x1
 5931 0434 E402     		.2byte	0x2e4
 5932 0436 00000000 		.4byte	.LFB73
 5933 043a 18000000 		.4byte	.LFE73-.LFB73
 5934 043e 01       		.uleb128 0x1
 5935 043f 9C       		.byte	0x9c
 5936 0440 54040000 		.4byte	0x454
 5937 0444 18       		.uleb128 0x18
 5938 0445 64697200 		.ascii	"dir\000"
 5939 0449 01       		.byte	0x1
 5940 044a E402     		.2byte	0x2e4
 5941 044c AB000000 		.4byte	0xab
 5942 0450 02       		.uleb128 0x2
 5943 0451 91       		.byte	0x91
 5944 0452 77       		.sleb128 -9
 5945 0453 00       		.byte	0
 5946 0454 17       		.uleb128 0x17
 5947 0455 33040000 		.4byte	.LASF75
 5948 0459 01       		.byte	0x1
 5949 045a E902     		.2byte	0x2e9
 5950 045c 00000000 		.4byte	.LFB74
 5951 0460 18000000 		.4byte	.LFE74-.LFB74
 5952 0464 01       		.uleb128 0x1
 5953 0465 9C       		.byte	0x9c
 5954 0466 7A040000 		.4byte	0x47a
 5955 046a 18       		.uleb128 0x18
 5956 046b 64697200 		.ascii	"dir\000"
 5957 046f 01       		.byte	0x1
 5958 0470 E902     		.2byte	0x2e9
 5959 0472 AB000000 		.4byte	0xab
 5960 0476 02       		.uleb128 0x2
 5961 0477 91       		.byte	0x91
 5962 0478 77       		.sleb128 -9
 5963 0479 00       		.byte	0
 5964 047a 19       		.uleb128 0x19
 5965 047b 6B080000 		.4byte	.LASF77
 5966 047f 01       		.byte	0x1
 5967 0480 EE02     		.2byte	0x2ee
 5968 0482 00000000 		.4byte	.LFB75
 5969 0486 54000000 		.4byte	.LFE75-.LFB75
 5970 048a 01       		.uleb128 0x1
 5971 048b 9C       		.byte	0x9c
 5972 048c A0040000 		.4byte	0x4a0
 5973 0490 15       		.uleb128 0x15
 5974 0491 6D657300 		.ascii	"mes\000"
 5975 0495 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 130


 5976 0496 F302     		.2byte	0x2f3
 5977 0498 C0030000 		.4byte	0x3c0
 5978 049c 02       		.uleb128 0x2
 5979 049d 91       		.byte	0x91
 5980 049e 68       		.sleb128 -24
 5981 049f 00       		.byte	0
 5982 04a0 17       		.uleb128 0x17
 5983 04a1 2C020000 		.4byte	.LASF78
 5984 04a5 01       		.byte	0x1
 5985 04a6 F802     		.2byte	0x2f8
 5986 04a8 00000000 		.4byte	.LFB76
 5987 04ac F4000000 		.4byte	.LFE76-.LFB76
 5988 04b0 01       		.uleb128 0x1
 5989 04b1 9C       		.byte	0x9c
 5990 04b2 F3040000 		.4byte	0x4f3
 5991 04b6 1A       		.uleb128 0x1a
 5992 04b7 2C070000 		.4byte	.LASF79
 5993 04bb 01       		.byte	0x1
 5994 04bc F802     		.2byte	0x2f8
 5995 04be EE000000 		.4byte	0xee
 5996 04c2 02       		.uleb128 0x2
 5997 04c3 91       		.byte	0x91
 5998 04c4 68       		.sleb128 -24
 5999 04c5 1A       		.uleb128 0x1a
 6000 04c6 60040000 		.4byte	.LASF80
 6001 04ca 01       		.byte	0x1
 6002 04cb F802     		.2byte	0x2f8
 6003 04cd EE000000 		.4byte	0xee
 6004 04d1 02       		.uleb128 0x2
 6005 04d2 91       		.byte	0x91
 6006 04d3 60       		.sleb128 -32
 6007 04d4 14       		.uleb128 0x14
 6008 04d5 64020000 		.4byte	.LASF81
 6009 04d9 01       		.byte	0x1
 6010 04da 0D03     		.2byte	0x30d
 6011 04dc DB000000 		.4byte	0xdb
 6012 04e0 02       		.uleb128 0x2
 6013 04e1 91       		.byte	0x91
 6014 04e2 76       		.sleb128 -10
 6015 04e3 14       		.uleb128 0x14
 6016 04e4 93050000 		.4byte	.LASF82
 6017 04e8 01       		.byte	0x1
 6018 04e9 0E03     		.2byte	0x30e
 6019 04eb DB000000 		.4byte	0xdb
 6020 04ef 02       		.uleb128 0x2
 6021 04f0 91       		.byte	0x91
 6022 04f1 74       		.sleb128 -12
 6023 04f2 00       		.byte	0
 6024 04f3 1B       		.uleb128 0x1b
 6025 04f4 7C080000 		.4byte	.LASF83
 6026 04f8 01       		.byte	0x1
 6027 04f9 1403     		.2byte	0x314
 6028 04fb 00000000 		.4byte	.LFB77
 6029 04ff 18000000 		.4byte	.LFE77-.LFB77
 6030 0503 01       		.uleb128 0x1
 6031 0504 9C       		.byte	0x9c
 6032 0505 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 131


 6033 0506 AA090000 		.4byte	.LASF84
 6034 050a 01       		.byte	0x1
 6035 050b 1A03     		.2byte	0x31a
 6036 050d 00000000 		.4byte	.LFB78
 6037 0511 18000000 		.4byte	.LFE78-.LFB78
 6038 0515 01       		.uleb128 0x1
 6039 0516 9C       		.byte	0x9c
 6040 0517 1B       		.uleb128 0x1b
 6041 0518 ED070000 		.4byte	.LASF85
 6042 051c 01       		.byte	0x1
 6043 051d 2003     		.2byte	0x320
 6044 051f 00000000 		.4byte	.LFB79
 6045 0523 22000000 		.4byte	.LFE79-.LFB79
 6046 0527 01       		.uleb128 0x1
 6047 0528 9C       		.byte	0x9c
 6048 0529 1B       		.uleb128 0x1b
 6049 052a 6F020000 		.4byte	.LASF86
 6050 052e 01       		.byte	0x1
 6051 052f 2603     		.2byte	0x326
 6052 0531 00000000 		.4byte	.LFB80
 6053 0535 1C000000 		.4byte	.LFE80-.LFB80
 6054 0539 01       		.uleb128 0x1
 6055 053a 9C       		.byte	0x9c
 6056 053b 1B       		.uleb128 0x1b
 6057 053c 49070000 		.4byte	.LASF87
 6058 0540 01       		.byte	0x1
 6059 0541 2B03     		.2byte	0x32b
 6060 0543 00000000 		.4byte	.LFB81
 6061 0547 34000000 		.4byte	.LFE81-.LFB81
 6062 054b 01       		.uleb128 0x1
 6063 054c 9C       		.byte	0x9c
 6064 054d 1B       		.uleb128 0x1b
 6065 054e 7D020000 		.4byte	.LASF88
 6066 0552 01       		.byte	0x1
 6067 0553 3003     		.2byte	0x330
 6068 0555 00000000 		.4byte	.LFB82
 6069 0559 38000000 		.4byte	.LFE82-.LFB82
 6070 055d 01       		.uleb128 0x1
 6071 055e 9C       		.byte	0x9c
 6072 055f 1B       		.uleb128 0x1b
 6073 0560 EF030000 		.4byte	.LASF89
 6074 0564 01       		.byte	0x1
 6075 0565 3503     		.2byte	0x335
 6076 0567 00000000 		.4byte	.LFB83
 6077 056b 4C000000 		.4byte	.LFE83-.LFB83
 6078 056f 01       		.uleb128 0x1
 6079 0570 9C       		.byte	0x9c
 6080 0571 1B       		.uleb128 0x1b
 6081 0572 D0020000 		.4byte	.LASF90
 6082 0576 01       		.byte	0x1
 6083 0577 3A03     		.2byte	0x33a
 6084 0579 00000000 		.4byte	.LFB84
 6085 057d 38000000 		.4byte	.LFE84-.LFB84
 6086 0581 01       		.uleb128 0x1
 6087 0582 9C       		.byte	0x9c
 6088 0583 1B       		.uleb128 0x1b
 6089 0584 A1060000 		.4byte	.LASF91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 132


 6090 0588 01       		.byte	0x1
 6091 0589 4303     		.2byte	0x343
 6092 058b 00000000 		.4byte	.LFB85
 6093 058f 38000000 		.4byte	.LFE85-.LFB85
 6094 0593 01       		.uleb128 0x1
 6095 0594 9C       		.byte	0x9c
 6096 0595 1B       		.uleb128 0x1b
 6097 0596 79060000 		.4byte	.LASF92
 6098 059a 01       		.byte	0x1
 6099 059b 4C03     		.2byte	0x34c
 6100 059d 00000000 		.4byte	.LFB86
 6101 05a1 38000000 		.4byte	.LFE86-.LFB86
 6102 05a5 01       		.uleb128 0x1
 6103 05a6 9C       		.byte	0x9c
 6104 05a7 1B       		.uleb128 0x1b
 6105 05a8 FA010000 		.4byte	.LASF93
 6106 05ac 01       		.byte	0x1
 6107 05ad 5503     		.2byte	0x355
 6108 05af 00000000 		.4byte	.LFB87
 6109 05b3 14000000 		.4byte	.LFE87-.LFB87
 6110 05b7 01       		.uleb128 0x1
 6111 05b8 9C       		.byte	0x9c
 6112 05b9 1C       		.uleb128 0x1c
 6113 05ba E6020000 		.4byte	.LASF94
 6114 05be 01       		.byte	0x1
 6115 05bf 5A03     		.2byte	0x35a
 6116 05c1 00000000 		.4byte	.LFB88
 6117 05c5 18000000 		.4byte	.LFE88-.LFB88
 6118 05c9 01       		.uleb128 0x1
 6119 05ca 9C       		.byte	0x9c
 6120 05cb 1C       		.uleb128 0x1c
 6121 05cc 9B040000 		.4byte	.LASF95
 6122 05d0 01       		.byte	0x1
 6123 05d1 5E03     		.2byte	0x35e
 6124 05d3 00000000 		.4byte	.LFB89
 6125 05d7 18000000 		.4byte	.LFE89-.LFB89
 6126 05db 01       		.uleb128 0x1
 6127 05dc 9C       		.byte	0x9c
 6128 05dd 1C       		.uleb128 0x1c
 6129 05de B5090000 		.4byte	.LASF96
 6130 05e2 01       		.byte	0x1
 6131 05e3 6303     		.2byte	0x363
 6132 05e5 00000000 		.4byte	.LFB90
 6133 05e9 18000000 		.4byte	.LFE90-.LFB90
 6134 05ed 01       		.uleb128 0x1
 6135 05ee 9C       		.byte	0x9c
 6136 05ef 1C       		.uleb128 0x1c
 6137 05f0 7A030000 		.4byte	.LASF97
 6138 05f4 01       		.byte	0x1
 6139 05f5 6703     		.2byte	0x367
 6140 05f7 00000000 		.4byte	.LFB91
 6141 05fb 18000000 		.4byte	.LFE91-.LFB91
 6142 05ff 01       		.uleb128 0x1
 6143 0600 9C       		.byte	0x9c
 6144 0601 17       		.uleb128 0x17
 6145 0602 D0060000 		.4byte	.LASF98
 6146 0606 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 133


 6147 0607 6E03     		.2byte	0x36e
 6148 0609 00000000 		.4byte	.LFB92
 6149 060d B8000000 		.4byte	.LFE92-.LFB92
 6150 0611 01       		.uleb128 0x1
 6151 0612 9C       		.byte	0x9c
 6152 0613 27060000 		.4byte	0x627
 6153 0617 14       		.uleb128 0x14
 6154 0618 4D050000 		.4byte	.LASF99
 6155 061c 01       		.byte	0x1
 6156 061d 6F03     		.2byte	0x36f
 6157 061f 8E000000 		.4byte	0x8e
 6158 0623 02       		.uleb128 0x2
 6159 0624 91       		.byte	0x91
 6160 0625 6F       		.sleb128 -17
 6161 0626 00       		.byte	0
 6162 0627 17       		.uleb128 0x17
 6163 0628 F2050000 		.4byte	.LASF100
 6164 062c 01       		.byte	0x1
 6165 062d 8B03     		.2byte	0x38b
 6166 062f 00000000 		.4byte	.LFB93
 6167 0633 60050000 		.4byte	.LFE93-.LFB93
 6168 0637 01       		.uleb128 0x1
 6169 0638 9C       		.byte	0x9c
 6170 0639 8F060000 		.4byte	0x68f
 6171 063d 14       		.uleb128 0x14
 6172 063e 4D050000 		.4byte	.LASF99
 6173 0642 01       		.byte	0x1
 6174 0643 8D03     		.2byte	0x38d
 6175 0645 8E000000 		.4byte	0x8e
 6176 0649 02       		.uleb128 0x2
 6177 064a 91       		.byte	0x91
 6178 064b 77       		.sleb128 -9
 6179 064c 12       		.uleb128 0x12
 6180 064d 48010000 		.4byte	.LBB9
 6181 0651 EA030000 		.4byte	.LBE9-.LBB9
 6182 0655 15       		.uleb128 0x15
 6183 0656 6D657300 		.ascii	"mes\000"
 6184 065a 01       		.byte	0x1
 6185 065b B303     		.2byte	0x3b3
 6186 065d C0030000 		.4byte	0x3c0
 6187 0661 02       		.uleb128 0x2
 6188 0662 91       		.byte	0x91
 6189 0663 58       		.sleb128 -40
 6190 0664 15       		.uleb128 0x15
 6191 0665 6900     		.ascii	"i\000"
 6192 0667 01       		.byte	0x1
 6193 0668 DE03     		.2byte	0x3de
 6194 066a 73000000 		.4byte	0x73
 6195 066e 02       		.uleb128 0x2
 6196 066f 91       		.byte	0x91
 6197 0670 70       		.sleb128 -16
 6198 0671 14       		.uleb128 0x14
 6199 0672 A5040000 		.4byte	.LASF69
 6200 0676 01       		.byte	0x1
 6201 0677 EB03     		.2byte	0x3eb
 6202 0679 8E000000 		.4byte	0x8e
 6203 067d 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 134


 6204 067e 91       		.byte	0x91
 6205 067f 6B       		.sleb128 -21
 6206 0680 15       		.uleb128 0x15
 6207 0681 7800     		.ascii	"x\000"
 6208 0683 01       		.byte	0x1
 6209 0684 1304     		.2byte	0x413
 6210 0686 73000000 		.4byte	0x73
 6211 068a 02       		.uleb128 0x2
 6212 068b 91       		.byte	0x91
 6213 068c 6C       		.sleb128 -20
 6214 068d 00       		.byte	0
 6215 068e 00       		.byte	0
 6216 068f 1B       		.uleb128 0x1b
 6217 0690 C5020000 		.4byte	.LASF101
 6218 0694 01       		.byte	0x1
 6219 0695 3C04     		.2byte	0x43c
 6220 0697 00000000 		.4byte	.LFB94
 6221 069b 40000000 		.4byte	.LFE94-.LFB94
 6222 069f 01       		.uleb128 0x1
 6223 06a0 9C       		.byte	0x9c
 6224 06a1 1B       		.uleb128 0x1b
 6225 06a2 59020000 		.4byte	.LASF102
 6226 06a6 01       		.byte	0x1
 6227 06a7 4B04     		.2byte	0x44b
 6228 06a9 00000000 		.4byte	.LFB95
 6229 06ad 40000000 		.4byte	.LFE95-.LFB95
 6230 06b1 01       		.uleb128 0x1
 6231 06b2 9C       		.byte	0x9c
 6232 06b3 19       		.uleb128 0x19
 6233 06b4 98000000 		.4byte	.LASF103
 6234 06b8 01       		.byte	0x1
 6235 06b9 5B04     		.2byte	0x45b
 6236 06bb 00000000 		.4byte	.LFB96
 6237 06bf 30020000 		.4byte	.LFE96-.LFB96
 6238 06c3 01       		.uleb128 0x1
 6239 06c4 9C       		.byte	0x9c
 6240 06c5 24070000 		.4byte	0x724
 6241 06c9 14       		.uleb128 0x14
 6242 06ca 0D030000 		.4byte	.LASF104
 6243 06ce 01       		.byte	0x1
 6244 06cf 6904     		.2byte	0x469
 6245 06d1 DB000000 		.4byte	0xdb
 6246 06d5 02       		.uleb128 0x2
 6247 06d6 91       		.byte	0x91
 6248 06d7 5E       		.sleb128 -34
 6249 06d8 14       		.uleb128 0x14
 6250 06d9 6B050000 		.4byte	.LASF105
 6251 06dd 01       		.byte	0x1
 6252 06de 6A04     		.2byte	0x46a
 6253 06e0 DB000000 		.4byte	0xdb
 6254 06e4 02       		.uleb128 0x2
 6255 06e5 91       		.byte	0x91
 6256 06e6 5C       		.sleb128 -36
 6257 06e7 14       		.uleb128 0x14
 6258 06e8 A9030000 		.4byte	.LASF106
 6259 06ec 01       		.byte	0x1
 6260 06ed 6B04     		.2byte	0x46b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 135


 6261 06ef EE000000 		.4byte	0xee
 6262 06f3 02       		.uleb128 0x2
 6263 06f4 91       		.byte	0x91
 6264 06f5 68       		.sleb128 -24
 6265 06f6 14       		.uleb128 0x14
 6266 06f7 6E090000 		.4byte	.LASF107
 6267 06fb 01       		.byte	0x1
 6268 06fc 6C04     		.2byte	0x46c
 6269 06fe EE000000 		.4byte	0xee
 6270 0702 02       		.uleb128 0x2
 6271 0703 91       		.byte	0x91
 6272 0704 60       		.sleb128 -32
 6273 0705 14       		.uleb128 0x14
 6274 0706 4B040000 		.4byte	.LASF108
 6275 070a 01       		.byte	0x1
 6276 070b 7504     		.2byte	0x475
 6277 070d 73000000 		.4byte	0x73
 6278 0711 02       		.uleb128 0x2
 6279 0712 91       		.byte	0x91
 6280 0713 58       		.sleb128 -40
 6281 0714 14       		.uleb128 0x14
 6282 0715 16090000 		.4byte	.LASF109
 6283 0719 01       		.byte	0x1
 6284 071a 7604     		.2byte	0x476
 6285 071c 73000000 		.4byte	0x73
 6286 0720 02       		.uleb128 0x2
 6287 0721 91       		.byte	0x91
 6288 0722 54       		.sleb128 -44
 6289 0723 00       		.byte	0
 6290 0724 1C       		.uleb128 0x1c
 6291 0725 C2050000 		.4byte	.LASF110
 6292 0729 01       		.byte	0x1
 6293 072a 8404     		.2byte	0x484
 6294 072c 00000000 		.4byte	.LFB97
 6295 0730 0C000000 		.4byte	.LFE97-.LFB97
 6296 0734 01       		.uleb128 0x1
 6297 0735 9C       		.byte	0x9c
 6298 0736 19       		.uleb128 0x19
 6299 0737 8A010000 		.4byte	.LASF111
 6300 073b 01       		.byte	0x1
 6301 073c 8A04     		.2byte	0x48a
 6302 073e 00000000 		.4byte	.LFB98
 6303 0742 4C010000 		.4byte	.LFE98-.LFB98
 6304 0746 01       		.uleb128 0x1
 6305 0747 9C       		.byte	0x9c
 6306 0748 78070000 		.4byte	0x778
 6307 074c 15       		.uleb128 0x15
 6308 074d 6E6C00   		.ascii	"nl\000"
 6309 0750 01       		.byte	0x1
 6310 0751 8E04     		.2byte	0x48e
 6311 0753 AB000000 		.4byte	0xab
 6312 0757 02       		.uleb128 0x2
 6313 0758 91       		.byte	0x91
 6314 0759 67       		.sleb128 -25
 6315 075a 15       		.uleb128 0x15
 6316 075b 6E7200   		.ascii	"nr\000"
 6317 075e 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 136


 6318 075f 8F04     		.2byte	0x48f
 6319 0761 AB000000 		.4byte	0xab
 6320 0765 02       		.uleb128 0x2
 6321 0766 91       		.byte	0x91
 6322 0767 66       		.sleb128 -26
 6323 0768 15       		.uleb128 0x15
 6324 0769 6D696400 		.ascii	"mid\000"
 6325 076d 01       		.byte	0x1
 6326 076e 9004     		.2byte	0x490
 6327 0770 AB000000 		.4byte	0xab
 6328 0774 02       		.uleb128 0x2
 6329 0775 91       		.byte	0x91
 6330 0776 65       		.sleb128 -27
 6331 0777 00       		.byte	0
 6332 0778 1C       		.uleb128 0x1c
 6333 0779 6F010000 		.4byte	.LASF112
 6334 077d 01       		.byte	0x1
 6335 077e AA04     		.2byte	0x4aa
 6336 0780 00000000 		.4byte	.LFB99
 6337 0784 0C000000 		.4byte	.LFE99-.LFB99
 6338 0788 01       		.uleb128 0x1
 6339 0789 9C       		.byte	0x9c
 6340 078a 19       		.uleb128 0x19
 6341 078b 9F030000 		.4byte	.LASF113
 6342 078f 01       		.byte	0x1
 6343 0790 AF04     		.2byte	0x4af
 6344 0792 00000000 		.4byte	.LFB100
 6345 0796 C0000000 		.4byte	.LFE100-.LFB100
 6346 079a 01       		.uleb128 0x1
 6347 079b 9C       		.byte	0x9c
 6348 079c D8070000 		.4byte	0x7d8
 6349 07a0 12       		.uleb128 0x12
 6350 07a1 0E000000 		.4byte	.LBB10
 6351 07a5 8E000000 		.4byte	.LBE10-.LBB10
 6352 07a9 14       		.uleb128 0x14
 6353 07aa FF020000 		.4byte	.LASF114
 6354 07ae 01       		.byte	0x1
 6355 07af B804     		.2byte	0x4b8
 6356 07b1 E7000000 		.4byte	0xe7
 6357 07b5 02       		.uleb128 0x2
 6358 07b6 91       		.byte	0x91
 6359 07b7 74       		.sleb128 -12
 6360 07b8 14       		.uleb128 0x14
 6361 07b9 A9050000 		.4byte	.LASF115
 6362 07bd 01       		.byte	0x1
 6363 07be B904     		.2byte	0x4b9
 6364 07c0 DB000000 		.4byte	0xdb
 6365 07c4 02       		.uleb128 0x2
 6366 07c5 91       		.byte	0x91
 6367 07c6 72       		.sleb128 -14
 6368 07c7 14       		.uleb128 0x14
 6369 07c8 62030000 		.4byte	.LASF116
 6370 07cc 01       		.byte	0x1
 6371 07cd BE04     		.2byte	0x4be
 6372 07cf C0030000 		.4byte	0x3c0
 6373 07d3 02       		.uleb128 0x2
 6374 07d4 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 137


 6375 07d5 60       		.sleb128 -32
 6376 07d6 00       		.byte	0
 6377 07d7 00       		.byte	0
 6378 07d8 19       		.uleb128 0x19
 6379 07d9 57090000 		.4byte	.LASF117
 6380 07dd 01       		.byte	0x1
 6381 07de C504     		.2byte	0x4c5
 6382 07e0 00000000 		.4byte	.LFB101
 6383 07e4 B8000000 		.4byte	.LFE101-.LFB101
 6384 07e8 01       		.uleb128 0x1
 6385 07e9 9C       		.byte	0x9c
 6386 07ea 08080000 		.4byte	0x808
 6387 07ee 12       		.uleb128 0x12
 6388 07ef 0E000000 		.4byte	.LBB11
 6389 07f3 86000000 		.4byte	.LBE11-.LBB11
 6390 07f7 14       		.uleb128 0x14
 6391 07f8 C4060000 		.4byte	.LASF118
 6392 07fc 01       		.byte	0x1
 6393 07fd C904     		.2byte	0x4c9
 6394 07ff C0030000 		.4byte	0x3c0
 6395 0803 02       		.uleb128 0x2
 6396 0804 91       		.byte	0x91
 6397 0805 68       		.sleb128 -24
 6398 0806 00       		.byte	0
 6399 0807 00       		.byte	0
 6400 0808 17       		.uleb128 0x17
 6401 0809 63070000 		.4byte	.LASF119
 6402 080d 01       		.byte	0x1
 6403 080e DA04     		.2byte	0x4da
 6404 0810 00000000 		.4byte	.LFB102
 6405 0814 4A000000 		.4byte	.LFE102-.LFB102
 6406 0818 01       		.uleb128 0x1
 6407 0819 9C       		.byte	0x9c
 6408 081a 2E080000 		.4byte	0x82e
 6409 081e 1A       		.uleb128 0x1a
 6410 081f 57030000 		.4byte	.LASF120
 6411 0823 01       		.byte	0x1
 6412 0824 DA04     		.2byte	0x4da
 6413 0826 2E080000 		.4byte	0x82e
 6414 082a 02       		.uleb128 0x2
 6415 082b 91       		.byte	0x91
 6416 082c 6C       		.sleb128 -20
 6417 082d 00       		.byte	0
 6418 082e 05       		.uleb128 0x5
 6419 082f 04       		.byte	0x4
 6420 0830 AB000000 		.4byte	0xab
 6421 0834 17       		.uleb128 0x17
 6422 0835 3C070000 		.4byte	.LASF121
 6423 0839 01       		.byte	0x1
 6424 083a E504     		.2byte	0x4e5
 6425 083c 00000000 		.4byte	.LFB103
 6426 0840 68000000 		.4byte	.LFE103-.LFB103
 6427 0844 01       		.uleb128 0x1
 6428 0845 9C       		.byte	0x9c
 6429 0846 71080000 		.4byte	0x871
 6430 084a 18       		.uleb128 0x18
 6431 084b 7300     		.ascii	"s\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 138


 6432 084d 01       		.byte	0x1
 6433 084e E504     		.2byte	0x4e5
 6434 0850 88000000 		.4byte	0x88
 6435 0854 02       		.uleb128 0x2
 6436 0855 91       		.byte	0x91
 6437 0856 6C       		.sleb128 -20
 6438 0857 12       		.uleb128 0x12
 6439 0858 10000000 		.4byte	.LBB12
 6440 085c 48000000 		.4byte	.LBE12-.LBB12
 6441 0860 15       		.uleb128 0x15
 6442 0861 636E7400 		.ascii	"cnt\000"
 6443 0865 01       		.byte	0x1
 6444 0866 EC04     		.2byte	0x4ec
 6445 0868 C3000000 		.4byte	0xc3
 6446 086c 02       		.uleb128 0x2
 6447 086d 91       		.byte	0x91
 6448 086e 74       		.sleb128 -12
 6449 086f 00       		.byte	0
 6450 0870 00       		.byte	0
 6451 0871 17       		.uleb128 0x17
 6452 0872 C2080000 		.4byte	.LASF122
 6453 0876 01       		.byte	0x1
 6454 0877 FB04     		.2byte	0x4fb
 6455 0879 00000000 		.4byte	.LFB104
 6456 087d 50000000 		.4byte	.LFE104-.LFB104
 6457 0881 01       		.uleb128 0x1
 6458 0882 9C       		.byte	0x9c
 6459 0883 AE080000 		.4byte	0x8ae
 6460 0887 18       		.uleb128 0x18
 6461 0888 6300     		.ascii	"c\000"
 6462 088a 01       		.byte	0x1
 6463 088b FB04     		.2byte	0x4fb
 6464 088d 8E000000 		.4byte	0x8e
 6465 0891 02       		.uleb128 0x2
 6466 0892 91       		.byte	0x91
 6467 0893 6F       		.sleb128 -17
 6468 0894 12       		.uleb128 0x12
 6469 0895 12000000 		.4byte	.LBB13
 6470 0899 2E000000 		.4byte	.LBE13-.LBB13
 6471 089d 15       		.uleb128 0x15
 6472 089e 636E7400 		.ascii	"cnt\000"
 6473 08a2 01       		.byte	0x1
 6474 08a3 FF04     		.2byte	0x4ff
 6475 08a5 C3000000 		.4byte	0xc3
 6476 08a9 02       		.uleb128 0x2
 6477 08aa 91       		.byte	0x91
 6478 08ab 74       		.sleb128 -12
 6479 08ac 00       		.byte	0
 6480 08ad 00       		.byte	0
 6481 08ae 1C       		.uleb128 0x1c
 6482 08af 6D030000 		.4byte	.LASF123
 6483 08b3 01       		.byte	0x1
 6484 08b4 0C05     		.2byte	0x50c
 6485 08b6 00000000 		.4byte	.LFB105
 6486 08ba 0C000000 		.4byte	.LFE105-.LFB105
 6487 08be 01       		.uleb128 0x1
 6488 08bf 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 139


 6489 08c0 1D       		.uleb128 0x1d
 6490 08c1 B7060000 		.4byte	.LASF124
 6491 08c5 06       		.byte	0x6
 6492 08c6 9606     		.2byte	0x696
 6493 08c8 CC080000 		.4byte	0x8cc
 6494 08cc 1E       		.uleb128 0x1e
 6495 08cd 95000000 		.4byte	0x95
 6496 08d1 1F       		.uleb128 0x1f
 6497 08d2 747300   		.ascii	"ts\000"
 6498 08d5 05       		.byte	0x5
 6499 08d6 10       		.byte	0x10
 6500 08d7 AB000000 		.4byte	0xab
 6501 08db 05       		.uleb128 0x5
 6502 08dc 03       		.byte	0x3
 6503 08dd 00000000 		.4byte	ts
 6504 08e1 20       		.uleb128 0x20
 6505 08e2 44080000 		.4byte	.LASF125
 6506 08e6 05       		.byte	0x5
 6507 08e7 11       		.byte	0x11
 6508 08e8 B7000000 		.4byte	0xb7
 6509 08ec 05       		.uleb128 0x5
 6510 08ed 03       		.byte	0x3
 6511 08ee 00000000 		.4byte	ts_enc
 6512 08f2 20       		.uleb128 0x20
 6513 08f3 D6060000 		.4byte	.LASF126
 6514 08f7 05       		.byte	0x5
 6515 08f8 12       		.byte	0x12
 6516 08f9 B7000000 		.4byte	0xb7
 6517 08fd 05       		.uleb128 0x5
 6518 08fe 03       		.byte	0x3
 6519 08ff 00000000 		.4byte	ts_update
 6520 0903 20       		.uleb128 0x20
 6521 0904 76050000 		.4byte	.LASF127
 6522 0908 05       		.byte	0x5
 6523 0909 13       		.byte	0x13
 6524 090a B7000000 		.4byte	0xb7
 6525 090e 05       		.uleb128 0x5
 6526 090f 03       		.byte	0x3
 6527 0910 00000000 		.4byte	ts_speed
 6528 0914 20       		.uleb128 0x20
 6529 0915 94030000 		.4byte	.LASF128
 6530 0919 05       		.byte	0x5
 6531 091a 14       		.byte	0x14
 6532 091b B7000000 		.4byte	0xb7
 6533 091f 05       		.uleb128 0x5
 6534 0920 03       		.byte	0x3
 6535 0921 00000000 		.4byte	ts_display
 6536 0925 20       		.uleb128 0x20
 6537 0926 17030000 		.4byte	.LASF129
 6538 092a 05       		.byte	0x5
 6539 092b 16       		.byte	0x16
 6540 092c AB000000 		.4byte	0xab
 6541 0930 05       		.uleb128 0x5
 6542 0931 03       		.byte	0x3
 6543 0932 00000000 		.4byte	flag_ts_enc
 6544 0936 20       		.uleb128 0x20
 6545 0937 F0020000 		.4byte	.LASF130
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 140


 6546 093b 05       		.byte	0x5
 6547 093c 17       		.byte	0x17
 6548 093d AB000000 		.4byte	0xab
 6549 0941 05       		.uleb128 0x5
 6550 0942 03       		.byte	0x3
 6551 0943 00000000 		.4byte	flag_ts_update
 6552 0947 20       		.uleb128 0x20
 6553 0948 31060000 		.4byte	.LASF131
 6554 094c 05       		.byte	0x5
 6555 094d 18       		.byte	0x18
 6556 094e AB000000 		.4byte	0xab
 6557 0952 05       		.uleb128 0x5
 6558 0953 03       		.byte	0x3
 6559 0954 00000000 		.4byte	flag_ts_speed
 6560 0958 20       		.uleb128 0x20
 6561 0959 55080000 		.4byte	.LASF132
 6562 095d 05       		.byte	0x5
 6563 095e 19       		.byte	0x19
 6564 095f AB000000 		.4byte	0xab
 6565 0963 05       		.uleb128 0x5
 6566 0964 03       		.byte	0x3
 6567 0965 00000000 		.4byte	flag_ts_display
 6568 0969 20       		.uleb128 0x20
 6569 096a 5C060000 		.4byte	.LASF133
 6570 096e 05       		.byte	0x5
 6571 096f 1C       		.byte	0x1c
 6572 0970 AB000000 		.4byte	0xab
 6573 0974 05       		.uleb128 0x5
 6574 0975 03       		.byte	0x3
 6575 0976 00000000 		.4byte	flag_rx
 6576 097a 20       		.uleb128 0x20
 6577 097b 9D020000 		.4byte	.LASF134
 6578 097f 05       		.byte	0x5
 6579 0980 1D       		.byte	0x1d
 6580 0981 AB000000 		.4byte	0xab
 6581 0985 05       		.uleb128 0x5
 6582 0986 03       		.byte	0x3
 6583 0987 00000000 		.4byte	flag_packet
 6584 098b 20       		.uleb128 0x20
 6585 098c 7B090000 		.4byte	.LASF135
 6586 0990 05       		.byte	0x5
 6587 0991 1E       		.byte	0x1e
 6588 0992 AB000000 		.4byte	0xab
 6589 0996 05       		.uleb128 0x5
 6590 0997 03       		.byte	0x3
 6591 0998 00000000 		.4byte	flag_KB_string
 6592 099c 20       		.uleb128 0x20
 6593 099d 3F060000 		.4byte	.LASF136
 6594 09a1 05       		.byte	0x5
 6595 09a2 20       		.byte	0x20
 6596 09a3 AB000000 		.4byte	0xab
 6597 09a7 05       		.uleb128 0x5
 6598 09a8 03       		.byte	0x3
 6599 09a9 00000000 		.4byte	dataready_flag
 6600 09ad 20       		.uleb128 0x20
 6601 09ae B6010000 		.4byte	.LASF137
 6602 09b2 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 141


 6603 09b3 22       		.byte	0x22
 6604 09b4 AB000000 		.4byte	0xab
 6605 09b8 05       		.uleb128 0x5
 6606 09b9 03       		.byte	0x3
 6607 09ba 00000000 		.4byte	flag_rf_transmission_active
 6608 09be 20       		.uleb128 0x20
 6609 09bf D2010000 		.4byte	.LASF138
 6610 09c3 05       		.byte	0x5
 6611 09c4 23       		.byte	0x23
 6612 09c5 AB000000 		.4byte	0xab
 6613 09c9 05       		.uleb128 0x5
 6614 09ca 03       		.byte	0x3
 6615 09cb 00000000 		.4byte	flag_print_rf
 6616 09cf 20       		.uleb128 0x20
 6617 09d0 D9050000 		.4byte	.LASF139
 6618 09d4 05       		.byte	0x5
 6619 09d5 25       		.byte	0x25
 6620 09d6 AB000000 		.4byte	0xab
 6621 09da 05       		.uleb128 0x5
 6622 09db 03       		.byte	0x3
 6623 09dc 00000000 		.4byte	flag_receive_ADC
 6624 09e0 20       		.uleb128 0x20
 6625 09e1 6E060000 		.4byte	.LASF140
 6626 09e5 05       		.byte	0x5
 6627 09e6 26       		.byte	0x26
 6628 09e7 DB000000 		.4byte	0xdb
 6629 09eb 05       		.uleb128 0x5
 6630 09ec 03       		.byte	0x3
 6631 09ed 00000000 		.4byte	adc_result
 6632 09f1 20       		.uleb128 0x20
 6633 09f2 00000000 		.4byte	.LASF141
 6634 09f6 05       		.byte	0x5
 6635 09f7 28       		.byte	0x28
 6636 09f8 AB000000 		.4byte	0xab
 6637 09fc 05       		.uleb128 0x5
 6638 09fd 03       		.byte	0x3
 6639 09fe 00000000 		.4byte	direction
 6640 0a02 20       		.uleb128 0x20
 6641 0a03 5F050000 		.4byte	.LASF142
 6642 0a07 05       		.byte	0x5
 6643 0a08 2B       		.byte	0x2b
 6644 0a09 AB000000 		.4byte	0xab
 6645 0a0d 05       		.uleb128 0x5
 6646 0a0e 03       		.byte	0x3
 6647 0a0f 00000000 		.4byte	BIN_ENABLED
 6648 0a13 20       		.uleb128 0x20
 6649 0a14 55040000 		.4byte	.LASF143
 6650 0a18 05       		.byte	0x5
 6651 0a19 2D       		.byte	0x2d
 6652 0a1a AB000000 		.4byte	0xab
 6653 0a1e 05       		.uleb128 0x5
 6654 0a1f 03       		.byte	0x3
 6655 0a20 00000000 		.4byte	BT_ENABLED
 6656 0a24 20       		.uleb128 0x20
 6657 0a25 83060000 		.4byte	.LASF144
 6658 0a29 05       		.byte	0x5
 6659 0a2a 32       		.byte	0x32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 142


 6660 0a2b AB000000 		.4byte	0xab
 6661 0a2f 05       		.uleb128 0x5
 6662 0a30 03       		.byte	0x3
 6663 0a31 00000000 		.4byte	flag_calc_wheelspeed
 6664 0a35 20       		.uleb128 0x20
 6665 0a36 57010000 		.4byte	.LASF145
 6666 0a3a 05       		.byte	0x5
 6667 0a3b 33       		.byte	0x33
 6668 0a3c DB000000 		.4byte	0xdb
 6669 0a40 05       		.uleb128 0x5
 6670 0a41 03       		.byte	0x3
 6671 0a42 00000000 		.4byte	quad_count1
 6672 0a46 20       		.uleb128 0x20
 6673 0a47 63010000 		.4byte	.LASF146
 6674 0a4b 05       		.byte	0x5
 6675 0a4c 34       		.byte	0x34
 6676 0a4d DB000000 		.4byte	0xdb
 6677 0a51 05       		.uleb128 0x5
 6678 0a52 03       		.byte	0x3
 6679 0a53 00000000 		.4byte	quad_count2
 6680 0a57 20       		.uleb128 0x20
 6681 0a58 94080000 		.4byte	.LASF147
 6682 0a5c 05       		.byte	0x5
 6683 0a5d 35       		.byte	0x35
 6684 0a5e DB000000 		.4byte	0xdb
 6685 0a62 05       		.uleb128 0x5
 6686 0a63 03       		.byte	0x3
 6687 0a64 00000000 		.4byte	last_quad_count1
 6688 0a68 20       		.uleb128 0x20
 6689 0a69 A5080000 		.4byte	.LASF148
 6690 0a6d 05       		.byte	0x5
 6691 0a6e 36       		.byte	0x36
 6692 0a6f DB000000 		.4byte	0xdb
 6693 0a73 05       		.uleb128 0x5
 6694 0a74 03       		.byte	0x3
 6695 0a75 00000000 		.4byte	last_quad_count2
 6696 0a79 20       		.uleb128 0x20
 6697 0a7a 82000000 		.4byte	.LASF149
 6698 0a7e 05       		.byte	0x5
 6699 0a7f 37       		.byte	0x37
 6700 0a80 DB000000 		.4byte	0xdb
 6701 0a84 05       		.uleb128 0x5
 6702 0a85 03       		.byte	0x3
 6703 0a86 00000000 		.4byte	quad_diff1
 6704 0a8a 20       		.uleb128 0x20
 6705 0a8b 8D000000 		.4byte	.LASF150
 6706 0a8f 05       		.byte	0x5
 6707 0a90 38       		.byte	0x38
 6708 0a91 DB000000 		.4byte	0xdb
 6709 0a95 05       		.uleb128 0x5
 6710 0a96 03       		.byte	0x3
 6711 0a97 00000000 		.4byte	quad_diff2
 6712 0a9b 20       		.uleb128 0x20
 6713 0a9c E9060000 		.4byte	.LASF151
 6714 0aa0 05       		.byte	0x5
 6715 0aa1 39       		.byte	0x39
 6716 0aa2 AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 143


 6717 0aa6 05       		.uleb128 0x5
 6718 0aa7 03       		.byte	0x3
 6719 0aa8 00000000 		.4byte	deadzone
 6720 0aac 20       		.uleb128 0x20
 6721 0aad B6000000 		.4byte	.LASF152
 6722 0ab1 05       		.byte	0x5
 6723 0ab2 3C       		.byte	0x3c
 6724 0ab3 DB000000 		.4byte	0xdb
 6725 0ab7 05       		.uleb128 0x5
 6726 0ab8 03       		.byte	0x3
 6727 0ab9 00000000 		.4byte	start_turn_count
 6728 0abd 20       		.uleb128 0x20
 6729 0abe 14060000 		.4byte	.LASF153
 6730 0ac2 05       		.byte	0x5
 6731 0ac3 3F       		.byte	0x3f
 6732 0ac4 DB000000 		.4byte	0xdb
 6733 0ac8 05       		.uleb128 0x5
 6734 0ac9 03       		.byte	0x3
 6735 0aca 00000000 		.4byte	left_duty_cycle
 6736 0ace 20       		.uleb128 0x20
 6737 0acf 2D090000 		.4byte	.LASF154
 6738 0ad3 05       		.byte	0x5
 6739 0ad4 40       		.byte	0x40
 6740 0ad5 DB000000 		.4byte	0xdb
 6741 0ad9 05       		.uleb128 0x5
 6742 0ada 03       		.byte	0x3
 6743 0adb 00000000 		.4byte	right_duty_cycle
 6744 0adf 20       		.uleb128 0x20
 6745 0ae0 F2060000 		.4byte	.LASF155
 6746 0ae4 05       		.byte	0x5
 6747 0ae5 43       		.byte	0x43
 6748 0ae6 DB000000 		.4byte	0xdb
 6749 0aea 05       		.uleb128 0x5
 6750 0aeb 03       		.byte	0x3
 6751 0aec 00000000 		.4byte	leftSpeedLimit
 6752 0af0 20       		.uleb128 0x20
 6753 0af1 C3030000 		.4byte	.LASF156
 6754 0af5 05       		.byte	0x5
 6755 0af6 44       		.byte	0x44
 6756 0af7 DB000000 		.4byte	0xdb
 6757 0afb 05       		.uleb128 0x5
 6758 0afc 03       		.byte	0x3
 6759 0afd 00000000 		.4byte	rightSpeedLimit
 6760 0b01 20       		.uleb128 0x20
 6761 0b02 80070000 		.4byte	.LASF157
 6762 0b06 05       		.byte	0x5
 6763 0b07 47       		.byte	0x47
 6764 0b08 DB000000 		.4byte	0xdb
 6765 0b0c 05       		.uleb128 0x5
 6766 0b0d 03       		.byte	0x3
 6767 0b0e 00000000 		.4byte	target_distance_cm
 6768 0b12 20       		.uleb128 0x20
 6769 0b13 31070000 		.4byte	.LASF158
 6770 0b17 05       		.byte	0x5
 6771 0b18 49       		.byte	0x49
 6772 0b19 DB000000 		.4byte	0xdb
 6773 0b1d 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 144


 6774 0b1e 03       		.byte	0x3
 6775 0b1f 00000000 		.4byte	accum_dist
 6776 0b23 20       		.uleb128 0x20
 6777 0b24 02010000 		.4byte	.LASF159
 6778 0b28 05       		.byte	0x5
 6779 0b29 4A       		.byte	0x4a
 6780 0b2a DB000000 		.4byte	0xdb
 6781 0b2e 05       		.uleb128 0x5
 6782 0b2f 03       		.byte	0x3
 6783 0b30 00000000 		.4byte	target_distance_quad
 6784 0b34 20       		.uleb128 0x20
 6785 0b35 28080000 		.4byte	.LASF160
 6786 0b39 05       		.byte	0x5
 6787 0b3a 4B       		.byte	0x4b
 6788 0b3b AB000000 		.4byte	0xab
 6789 0b3f 05       		.uleb128 0x5
 6790 0b40 03       		.byte	0x3
 6791 0b41 00000000 		.4byte	reached_target
 6792 0b45 20       		.uleb128 0x20
 6793 0b46 1C070000 		.4byte	.LASF161
 6794 0b4a 05       		.byte	0x5
 6795 0b4b 4C       		.byte	0x4c
 6796 0b4c AB000000 		.4byte	0xab
 6797 0b50 05       		.uleb128 0x5
 6798 0b51 03       		.byte	0x3
 6799 0b52 00000000 		.4byte	overshot_target
 6800 0b56 20       		.uleb128 0x20
 6801 0b57 74070000 		.4byte	.LASF162
 6802 0b5b 05       		.byte	0x5
 6803 0b5c 4D       		.byte	0x4d
 6804 0b5d E7000000 		.4byte	0xe7
 6805 0b61 05       		.uleb128 0x5
 6806 0b62 03       		.byte	0x3
 6807 0b63 00000000 		.4byte	quad_per_cm
 6808 0b67 20       		.uleb128 0x20
 6809 0b68 66040000 		.4byte	.LASF163
 6810 0b6c 05       		.byte	0x5
 6811 0b6d 50       		.byte	0x50
 6812 0b6e AB000000 		.4byte	0xab
 6813 0b72 05       		.uleb128 0x5
 6814 0b73 03       		.byte	0x3
 6815 0b74 00000000 		.4byte	initial_pos_valid
 6816 0b78 20       		.uleb128 0x20
 6817 0b79 9C090000 		.4byte	.LASF164
 6818 0b7d 05       		.byte	0x5
 6819 0b7e 51       		.byte	0x51
 6820 0b7f DB000000 		.4byte	0xdb
 6821 0b83 05       		.uleb128 0x5
 6822 0b84 03       		.byte	0x3
 6823 0b85 00000000 		.4byte	initial_x_pos
 6824 0b89 20       		.uleb128 0x20
 6825 0b8a 4E060000 		.4byte	.LASF165
 6826 0b8e 05       		.byte	0x5
 6827 0b8f 52       		.byte	0x52
 6828 0b90 DB000000 		.4byte	0xdb
 6829 0b94 05       		.uleb128 0x5
 6830 0b95 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 145


 6831 0b96 00000000 		.4byte	initial_y_pos
 6832 0b9a 20       		.uleb128 0x20
 6833 0b9b 4B080000 		.4byte	.LASF166
 6834 0b9f 05       		.byte	0x5
 6835 0ba0 55       		.byte	0x55
 6836 0ba1 AB000000 		.4byte	0xab
 6837 0ba5 05       		.uleb128 0x5
 6838 0ba6 03       		.byte	0x3
 6839 0ba7 00000000 		.4byte	brakeFlag
 6840 0bab 20       		.uleb128 0x20
 6841 0bac DD020000 		.4byte	.LASF167
 6842 0bb0 05       		.byte	0x5
 6843 0bb1 56       		.byte	0x56
 6844 0bb2 AB000000 		.4byte	0xab
 6845 0bb6 05       		.uleb128 0x5
 6846 0bb7 03       		.byte	0x3
 6847 0bb8 00000000 		.4byte	portOpen
 6848 0bbc 07       		.uleb128 0x7
 6849 0bbd AB000000 		.4byte	0xab
 6850 0bc1 CC0B0000 		.4byte	0xbcc
 6851 0bc5 08       		.uleb128 0x8
 6852 0bc6 81000000 		.4byte	0x81
 6853 0bca 04       		.byte	0x4
 6854 0bcb 00       		.byte	0
 6855 0bcc 20       		.uleb128 0x20
 6856 0bcd A9020000 		.4byte	.LASF168
 6857 0bd1 05       		.byte	0x5
 6858 0bd2 59       		.byte	0x59
 6859 0bd3 BC0B0000 		.4byte	0xbbc
 6860 0bd7 05       		.uleb128 0x5
 6861 0bd8 03       		.byte	0x3
 6862 0bd9 00000000 		.4byte	frontSensors
 6863 0bdd 20       		.uleb128 0x20
 6864 0bde DB070000 		.4byte	.LASF169
 6865 0be2 05       		.byte	0x5
 6866 0be3 5A       		.byte	0x5a
 6867 0be4 AB000000 		.4byte	0xab
 6868 0be8 05       		.uleb128 0x5
 6869 0be9 03       		.byte	0x3
 6870 0bea 00000000 		.4byte	leftOn
 6871 0bee 20       		.uleb128 0x20
 6872 0bef 70000000 		.4byte	.LASF170
 6873 0bf3 05       		.byte	0x5
 6874 0bf4 5B       		.byte	0x5b
 6875 0bf5 AB000000 		.4byte	0xab
 6876 0bf9 05       		.uleb128 0x5
 6877 0bfa 03       		.byte	0x3
 6878 0bfb 00000000 		.4byte	rightOn
 6879 0bff 20       		.uleb128 0x20
 6880 0c00 AA000000 		.4byte	.LASF171
 6881 0c04 05       		.byte	0x5
 6882 0c05 5F       		.byte	0x5f
 6883 0c06 DB000000 		.4byte	0xdb
 6884 0c0a 05       		.uleb128 0x5
 6885 0c0b 03       		.byte	0x3
 6886 0c0c 00000000 		.4byte	prevVoltage
 6887 0c10 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 146


 6888 0c11 20010000 		.4byte	.LASF172
 6889 0c15 05       		.byte	0x5
 6890 0c16 60       		.byte	0x60
 6891 0c17 DB000000 		.4byte	0xdb
 6892 0c1b 05       		.uleb128 0x5
 6893 0c1c 03       		.byte	0x3
 6894 0c1d 00000000 		.4byte	prevVoltage2
 6895 0c21 07       		.uleb128 0x7
 6896 0c22 8E000000 		.4byte	0x8e
 6897 0c26 310C0000 		.4byte	0xc31
 6898 0c2a 08       		.uleb128 0x8
 6899 0c2b 81000000 		.4byte	0x81
 6900 0c2f 3F       		.byte	0x3f
 6901 0c30 00       		.byte	0
 6902 0c31 20       		.uleb128 0x20
 6903 0c32 86080000 		.4byte	.LASF173
 6904 0c36 05       		.byte	0x5
 6905 0c37 66       		.byte	0x66
 6906 0c38 210C0000 		.4byte	0xc21
 6907 0c3c 05       		.uleb128 0x5
 6908 0c3d 03       		.byte	0x3
 6909 0c3e 00000000 		.4byte	displaystring
 6910 0c42 20       		.uleb128 0x20
 6911 0c43 23080000 		.4byte	.LASF174
 6912 0c47 05       		.byte	0x5
 6913 0c48 67       		.byte	0x67
 6914 0c49 210C0000 		.4byte	0xc21
 6915 0c4d 05       		.uleb128 0x5
 6916 0c4e 03       		.byte	0x3
 6917 0c4f 00000000 		.4byte	line
 6918 0c53 20       		.uleb128 0x20
 6919 0c54 04080000 		.4byte	.LASF175
 6920 0c58 05       		.byte	0x5
 6921 0c59 67       		.byte	0x67
 6922 0c5a 210C0000 		.4byte	0xc21
 6923 0c5e 05       		.uleb128 0x5
 6924 0c5f 03       		.byte	0x3
 6925 0c60 00000000 		.4byte	entry
 6926 0c64 07       		.uleb128 0x7
 6927 0c65 AB000000 		.4byte	0xab
 6928 0c69 740C0000 		.4byte	0xc74
 6929 0c6d 08       		.uleb128 0x8
 6930 0c6e 81000000 		.4byte	0x81
 6931 0c72 3F       		.byte	0x3f
 6932 0c73 00       		.byte	0
 6933 0c74 20       		.uleb128 0x20
 6934 0c75 35020000 		.4byte	.LASF176
 6935 0c79 05       		.byte	0x5
 6936 0c7a 68       		.byte	0x68
 6937 0c7b 640C0000 		.4byte	0xc64
 6938 0c7f 05       		.uleb128 0x5
 6939 0c80 03       		.byte	0x3
 6940 0c81 00000000 		.4byte	usbBuffer
 6941 0c85 20       		.uleb128 0x20
 6942 0c86 86040000 		.4byte	.LASF177
 6943 0c8a 05       		.byte	0x5
 6944 0c8b 7D       		.byte	0x7d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 147


 6945 0c8c 86010000 		.4byte	0x186
 6946 0c90 05       		.uleb128 0x5
 6947 0c91 03       		.byte	0x3
 6948 0c92 00000000 		.4byte	buffer_state
 6949 0c96 20       		.uleb128 0x20
 6950 0c97 EF000000 		.4byte	.LASF178
 6951 0c9b 05       		.byte	0x5
 6952 0c9c 7E       		.byte	0x7e
 6953 0c9d 86010000 		.4byte	0x186
 6954 0ca1 05       		.uleb128 0x5
 6955 0ca2 03       		.byte	0x3
 6956 0ca3 00000000 		.4byte	system_state
 6957 0ca7 20       		.uleb128 0x20
 6958 0ca8 43030000 		.4byte	.LASF179
 6959 0cac 05       		.byte	0x5
 6960 0cad 80       		.byte	0x80
 6961 0cae 0C010000 		.4byte	0x10c
 6962 0cb2 05       		.uleb128 0x5
 6963 0cb3 03       		.byte	0x3
 6964 0cb4 00000000 		.4byte	prev_movement_state
 6965 0cb8 20       		.uleb128 0x20
 6966 0cb9 E0010000 		.4byte	.LASF180
 6967 0cbd 05       		.byte	0x5
 6968 0cbe 81       		.byte	0x81
 6969 0cbf 0C010000 		.4byte	0x10c
 6970 0cc3 05       		.uleb128 0x5
 6971 0cc4 03       		.byte	0x3
 6972 0cc5 00000000 		.4byte	movement_state
 6973 0cc9 20       		.uleb128 0x20
 6974 0cca D4000000 		.4byte	.LASF181
 6975 0cce 05       		.byte	0x5
 6976 0ccf 82       		.byte	0x82
 6977 0cd0 49010000 		.4byte	0x149
 6978 0cd4 05       		.uleb128 0x5
 6979 0cd5 03       		.byte	0x3
 6980 0cd6 00000000 		.4byte	track_mode
 6981 0cda 20       		.uleb128 0x20
 6982 0cdb 23030000 		.4byte	.LASF182
 6983 0cdf 05       		.byte	0x5
 6984 0ce0 84       		.byte	0x84
 6985 0ce1 AB000000 		.4byte	0xab
 6986 0ce5 05       		.uleb128 0x5
 6987 0ce6 03       		.byte	0x3
 6988 0ce7 00000000 		.4byte	byteCount
 6989 0ceb 07       		.uleb128 0x7
 6990 0cec 8E000000 		.4byte	0x8e
 6991 0cf0 FB0C0000 		.4byte	0xcfb
 6992 0cf4 08       		.uleb128 0x8
 6993 0cf5 81000000 		.4byte	0x81
 6994 0cf9 01       		.byte	0x1
 6995 0cfa 00       		.byte	0
 6996 0cfb 20       		.uleb128 0x20
 6997 0cfc C2070000 		.4byte	.LASF183
 6998 0d00 05       		.byte	0x5
 6999 0d01 85       		.byte	0x85
 7000 0d02 EB0C0000 		.4byte	0xceb
 7001 0d06 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 148


 7002 0d07 03       		.byte	0x3
 7003 0d08 00000000 		.4byte	packet
 7004 0d0c 20       		.uleb128 0x20
 7005 0d0d A3010000 		.4byte	.LASF184
 7006 0d11 05       		.byte	0x5
 7007 0d12 89       		.byte	0x89
 7008 0d13 EE000000 		.4byte	0xee
 7009 0d17 05       		.uleb128 0x5
 7010 0d18 03       		.byte	0x3
 7011 0d19 00000000 		.4byte	speed
 7012 0d1d 20       		.uleb128 0x20
 7013 0d1e DE030000 		.4byte	.LASF185
 7014 0d22 01       		.byte	0x1
 7015 0d23 25       		.byte	0x25
 7016 0d24 B7000000 		.4byte	0xb7
 7017 0d28 05       		.uleb128 0x5
 7018 0d29 03       		.byte	0x3
 7019 0d2a 00000000 		.4byte	instructionCount
 7020 0d2e 20       		.uleb128 0x20
 7021 0d2f 2D010000 		.4byte	.LASF186
 7022 0d33 01       		.byte	0x1
 7023 0d34 27       		.byte	0x27
 7024 0d35 A0000000 		.4byte	0xa0
 7025 0d39 05       		.uleb128 0x5
 7026 0d3a 03       		.byte	0x3
 7027 0d3b 00000000 		.4byte	sensorsDisabled
 7028 0d3f 07       		.uleb128 0x7
 7029 0d40 A0000000 		.4byte	0xa0
 7030 0d44 550D0000 		.4byte	0xd55
 7031 0d48 08       		.uleb128 0x8
 7032 0d49 81000000 		.4byte	0x81
 7033 0d4d 0E       		.byte	0xe
 7034 0d4e 08       		.uleb128 0x8
 7035 0d4f 81000000 		.4byte	0x81
 7036 0d53 12       		.byte	0x12
 7037 0d54 00       		.byte	0
 7038 0d55 1F       		.uleb128 0x1f
 7039 0d56 6D617000 		.ascii	"map\000"
 7040 0d5a 01       		.byte	0x1
 7041 0d5b 43       		.byte	0x43
 7042 0d5c 3F0D0000 		.4byte	0xd3f
 7043 0d60 05       		.uleb128 0x5
 7044 0d61 03       		.byte	0x3
 7045 0d62 00000000 		.4byte	map
 7046 0d66 07       		.uleb128 0x7
 7047 0d67 A0000000 		.4byte	0xa0
 7048 0d6b 7C0D0000 		.4byte	0xd7c
 7049 0d6f 08       		.uleb128 0x8
 7050 0d70 81000000 		.4byte	0x81
 7051 0d74 05       		.byte	0x5
 7052 0d75 08       		.uleb128 0x8
 7053 0d76 81000000 		.4byte	0x81
 7054 0d7a 01       		.byte	0x1
 7055 0d7b 00       		.byte	0
 7056 0d7c 20       		.uleb128 0x20
 7057 0d7d 55050000 		.4byte	.LASF187
 7058 0d81 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 149


 7059 0d82 64       		.byte	0x64
 7060 0d83 660D0000 		.4byte	0xd66
 7061 0d87 05       		.uleb128 0x5
 7062 0d88 03       		.byte	0x3
 7063 0d89 00000000 		.4byte	food_list
 7064 0d8d 07       		.uleb128 0x7
 7065 0d8e A0000000 		.4byte	0xa0
 7066 0d92 A40D0000 		.4byte	0xda4
 7067 0d96 21       		.uleb128 0x21
 7068 0d97 81000000 		.4byte	0x81
 7069 0d9b 1F03     		.2byte	0x31f
 7070 0d9d 08       		.uleb128 0x8
 7071 0d9e 81000000 		.4byte	0x81
 7072 0da2 02       		.byte	0x2
 7073 0da3 00       		.byte	0
 7074 0da4 20       		.uleb128 0x20
 7075 0da5 2E040000 		.4byte	.LASF188
 7076 0da9 01       		.byte	0x1
 7077 0daa 2B       		.byte	0x2b
 7078 0dab 8D0D0000 		.4byte	0xd8d
 7079 0daf 05       		.uleb128 0x5
 7080 0db0 03       		.byte	0x3
 7081 0db1 00000000 		.4byte	path
 7082 0db5 20       		.uleb128 0x20
 7083 0db6 B7050000 		.4byte	.LASF189
 7084 0dba 01       		.byte	0x1
 7085 0dbb 2C       		.byte	0x2c
 7086 0dbc F5000000 		.4byte	0xf5
 7087 0dc0 05       		.uleb128 0x5
 7088 0dc1 03       		.byte	0x3
 7089 0dc2 00000000 		.4byte	start
 7090 0dc6 20       		.uleb128 0x20
 7091 0dc7 B6080000 		.4byte	.LASF190
 7092 0dcb 01       		.byte	0x1
 7093 0dcc 2D       		.byte	0x2d
 7094 0dcd F5000000 		.4byte	0xf5
 7095 0dd1 05       		.uleb128 0x5
 7096 0dd2 03       		.byte	0x3
 7097 0dd3 00000000 		.4byte	destination
 7098 0dd7 20       		.uleb128 0x20
 7099 0dd8 7A010000 		.4byte	.LASF191
 7100 0ddc 01       		.byte	0x1
 7101 0ddd 29       		.byte	0x29
 7102 0dde A0000000 		.4byte	0xa0
 7103 0de2 05       		.uleb128 0x5
 7104 0de3 03       		.byte	0x3
 7105 0de4 00000000 		.4byte	robot_direction
 7106 0de8 20       		.uleb128 0x20
 7107 0de9 0A000000 		.4byte	.LASF192
 7108 0ded 07       		.byte	0x7
 7109 0dee 22       		.byte	0x22
 7110 0def A0000000 		.4byte	0xa0
 7111 0df3 05       		.uleb128 0x5
 7112 0df4 03       		.byte	0x3
 7113 0df5 00000000 		.4byte	tracked_direction
 7114 0df9 20       		.uleb128 0x20
 7115 0dfa F8070000 		.4byte	.LASF193
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 150


 7116 0dfe 01       		.byte	0x1
 7117 0dff 69       		.byte	0x69
 7118 0e00 A0000000 		.4byte	0xa0
 7119 0e04 05       		.uleb128 0x5
 7120 0e05 03       		.byte	0x3
 7121 0e06 00000000 		.4byte	food_length
 7122 0e0a 07       		.uleb128 0x7
 7123 0e0b 8E000000 		.4byte	0x8e
 7124 0e0f 1B0E0000 		.4byte	0xe1b
 7125 0e13 21       		.uleb128 0x21
 7126 0e14 81000000 		.4byte	0x81
 7127 0e18 1F03     		.2byte	0x31f
 7128 0e1a 00       		.byte	0
 7129 0e1b 20       		.uleb128 0x20
 7130 0e1c 86050000 		.4byte	.LASF194
 7131 0e20 01       		.byte	0x1
 7132 0e21 24       		.byte	0x24
 7133 0e22 0A0E0000 		.4byte	0xe0a
 7134 0e26 05       		.uleb128 0x5
 7135 0e27 03       		.byte	0x3
 7136 0e28 00000000 		.4byte	instructions
 7137 0e2c 20       		.uleb128 0x20
 7138 0e2d C9070000 		.4byte	.LASF195
 7139 0e31 01       		.byte	0x1
 7140 0e32 26       		.byte	0x26
 7141 0e33 B7000000 		.4byte	0xb7
 7142 0e37 05       		.uleb128 0x5
 7143 0e38 03       		.byte	0x3
 7144 0e39 00000000 		.4byte	instructionLength
 7145 0e3d 22       		.uleb128 0x22
 7146 0e3e 95010000 		.4byte	.LASF196
 7147 0e42 01       		.byte	0x1
 7148 0e43 8804     		.2byte	0x488
 7149 0e45 B7000000 		.4byte	0xb7
 7150 0e49 05       		.uleb128 0x5
 7151 0e4a 03       		.byte	0x3
 7152 0e4b 00000000 		.4byte	leftTurnCount
 7153 0e4f 22       		.uleb128 0x22
 7154 0e50 61000000 		.4byte	.LASF197
 7155 0e54 01       		.byte	0x1
 7156 0e55 8904     		.2byte	0x489
 7157 0e57 B7000000 		.4byte	0xb7
 7158 0e5b 05       		.uleb128 0x5
 7159 0e5c 03       		.byte	0x3
 7160 0e5d 00000000 		.4byte	rightTurnCount
 7161 0e61 00       		.byte	0
 7162              		.section	.debug_abbrev,"",%progbits
 7163              	.Ldebug_abbrev0:
 7164 0000 01       		.uleb128 0x1
 7165 0001 11       		.uleb128 0x11
 7166 0002 01       		.byte	0x1
 7167 0003 25       		.uleb128 0x25
 7168 0004 0E       		.uleb128 0xe
 7169 0005 13       		.uleb128 0x13
 7170 0006 0B       		.uleb128 0xb
 7171 0007 03       		.uleb128 0x3
 7172 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 151


 7173 0009 1B       		.uleb128 0x1b
 7174 000a 0E       		.uleb128 0xe
 7175 000b 55       		.uleb128 0x55
 7176 000c 17       		.uleb128 0x17
 7177 000d 11       		.uleb128 0x11
 7178 000e 01       		.uleb128 0x1
 7179 000f 10       		.uleb128 0x10
 7180 0010 17       		.uleb128 0x17
 7181 0011 00       		.byte	0
 7182 0012 00       		.byte	0
 7183 0013 02       		.uleb128 0x2
 7184 0014 24       		.uleb128 0x24
 7185 0015 00       		.byte	0
 7186 0016 0B       		.uleb128 0xb
 7187 0017 0B       		.uleb128 0xb
 7188 0018 3E       		.uleb128 0x3e
 7189 0019 0B       		.uleb128 0xb
 7190 001a 03       		.uleb128 0x3
 7191 001b 0E       		.uleb128 0xe
 7192 001c 00       		.byte	0
 7193 001d 00       		.byte	0
 7194 001e 03       		.uleb128 0x3
 7195 001f 16       		.uleb128 0x16
 7196 0020 00       		.byte	0
 7197 0021 03       		.uleb128 0x3
 7198 0022 0E       		.uleb128 0xe
 7199 0023 3A       		.uleb128 0x3a
 7200 0024 0B       		.uleb128 0xb
 7201 0025 3B       		.uleb128 0x3b
 7202 0026 0B       		.uleb128 0xb
 7203 0027 49       		.uleb128 0x49
 7204 0028 13       		.uleb128 0x13
 7205 0029 00       		.byte	0
 7206 002a 00       		.byte	0
 7207 002b 04       		.uleb128 0x4
 7208 002c 24       		.uleb128 0x24
 7209 002d 00       		.byte	0
 7210 002e 0B       		.uleb128 0xb
 7211 002f 0B       		.uleb128 0xb
 7212 0030 3E       		.uleb128 0x3e
 7213 0031 0B       		.uleb128 0xb
 7214 0032 03       		.uleb128 0x3
 7215 0033 08       		.uleb128 0x8
 7216 0034 00       		.byte	0
 7217 0035 00       		.byte	0
 7218 0036 05       		.uleb128 0x5
 7219 0037 0F       		.uleb128 0xf
 7220 0038 00       		.byte	0
 7221 0039 0B       		.uleb128 0xb
 7222 003a 0B       		.uleb128 0xb
 7223 003b 49       		.uleb128 0x49
 7224 003c 13       		.uleb128 0x13
 7225 003d 00       		.byte	0
 7226 003e 00       		.byte	0
 7227 003f 06       		.uleb128 0x6
 7228 0040 16       		.uleb128 0x16
 7229 0041 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 152


 7230 0042 03       		.uleb128 0x3
 7231 0043 0E       		.uleb128 0xe
 7232 0044 3A       		.uleb128 0x3a
 7233 0045 0B       		.uleb128 0xb
 7234 0046 3B       		.uleb128 0x3b
 7235 0047 05       		.uleb128 0x5
 7236 0048 49       		.uleb128 0x49
 7237 0049 13       		.uleb128 0x13
 7238 004a 00       		.byte	0
 7239 004b 00       		.byte	0
 7240 004c 07       		.uleb128 0x7
 7241 004d 01       		.uleb128 0x1
 7242 004e 01       		.byte	0x1
 7243 004f 49       		.uleb128 0x49
 7244 0050 13       		.uleb128 0x13
 7245 0051 01       		.uleb128 0x1
 7246 0052 13       		.uleb128 0x13
 7247 0053 00       		.byte	0
 7248 0054 00       		.byte	0
 7249 0055 08       		.uleb128 0x8
 7250 0056 21       		.uleb128 0x21
 7251 0057 00       		.byte	0
 7252 0058 49       		.uleb128 0x49
 7253 0059 13       		.uleb128 0x13
 7254 005a 2F       		.uleb128 0x2f
 7255 005b 0B       		.uleb128 0xb
 7256 005c 00       		.byte	0
 7257 005d 00       		.byte	0
 7258 005e 09       		.uleb128 0x9
 7259 005f 04       		.uleb128 0x4
 7260 0060 01       		.byte	0x1
 7261 0061 03       		.uleb128 0x3
 7262 0062 0E       		.uleb128 0xe
 7263 0063 0B       		.uleb128 0xb
 7264 0064 0B       		.uleb128 0xb
 7265 0065 3A       		.uleb128 0x3a
 7266 0066 0B       		.uleb128 0xb
 7267 0067 3B       		.uleb128 0x3b
 7268 0068 0B       		.uleb128 0xb
 7269 0069 01       		.uleb128 0x1
 7270 006a 13       		.uleb128 0x13
 7271 006b 00       		.byte	0
 7272 006c 00       		.byte	0
 7273 006d 0A       		.uleb128 0xa
 7274 006e 28       		.uleb128 0x28
 7275 006f 00       		.byte	0
 7276 0070 03       		.uleb128 0x3
 7277 0071 0E       		.uleb128 0xe
 7278 0072 1C       		.uleb128 0x1c
 7279 0073 0D       		.uleb128 0xd
 7280 0074 00       		.byte	0
 7281 0075 00       		.byte	0
 7282 0076 0B       		.uleb128 0xb
 7283 0077 13       		.uleb128 0x13
 7284 0078 01       		.byte	0x1
 7285 0079 03       		.uleb128 0x3
 7286 007a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 153


 7287 007b 0B       		.uleb128 0xb
 7288 007c 0B       		.uleb128 0xb
 7289 007d 3A       		.uleb128 0x3a
 7290 007e 0B       		.uleb128 0xb
 7291 007f 3B       		.uleb128 0x3b
 7292 0080 0B       		.uleb128 0xb
 7293 0081 01       		.uleb128 0x1
 7294 0082 13       		.uleb128 0x13
 7295 0083 00       		.byte	0
 7296 0084 00       		.byte	0
 7297 0085 0C       		.uleb128 0xc
 7298 0086 0D       		.uleb128 0xd
 7299 0087 00       		.byte	0
 7300 0088 03       		.uleb128 0x3
 7301 0089 0E       		.uleb128 0xe
 7302 008a 3A       		.uleb128 0x3a
 7303 008b 0B       		.uleb128 0xb
 7304 008c 3B       		.uleb128 0x3b
 7305 008d 0B       		.uleb128 0xb
 7306 008e 49       		.uleb128 0x49
 7307 008f 13       		.uleb128 0x13
 7308 0090 38       		.uleb128 0x38
 7309 0091 0B       		.uleb128 0xb
 7310 0092 00       		.byte	0
 7311 0093 00       		.byte	0
 7312 0094 0D       		.uleb128 0xd
 7313 0095 2E       		.uleb128 0x2e
 7314 0096 00       		.byte	0
 7315 0097 3F       		.uleb128 0x3f
 7316 0098 19       		.uleb128 0x19
 7317 0099 03       		.uleb128 0x3
 7318 009a 0E       		.uleb128 0xe
 7319 009b 3A       		.uleb128 0x3a
 7320 009c 0B       		.uleb128 0xb
 7321 009d 3B       		.uleb128 0x3b
 7322 009e 0B       		.uleb128 0xb
 7323 009f 27       		.uleb128 0x27
 7324 00a0 19       		.uleb128 0x19
 7325 00a1 11       		.uleb128 0x11
 7326 00a2 01       		.uleb128 0x1
 7327 00a3 12       		.uleb128 0x12
 7328 00a4 06       		.uleb128 0x6
 7329 00a5 40       		.uleb128 0x40
 7330 00a6 18       		.uleb128 0x18
 7331 00a7 9742     		.uleb128 0x2117
 7332 00a9 19       		.uleb128 0x19
 7333 00aa 00       		.byte	0
 7334 00ab 00       		.byte	0
 7335 00ac 0E       		.uleb128 0xe
 7336 00ad 2E       		.uleb128 0x2e
 7337 00ae 00       		.byte	0
 7338 00af 3F       		.uleb128 0x3f
 7339 00b0 19       		.uleb128 0x19
 7340 00b1 03       		.uleb128 0x3
 7341 00b2 0E       		.uleb128 0xe
 7342 00b3 3A       		.uleb128 0x3a
 7343 00b4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 154


 7344 00b5 3B       		.uleb128 0x3b
 7345 00b6 0B       		.uleb128 0xb
 7346 00b7 27       		.uleb128 0x27
 7347 00b8 19       		.uleb128 0x19
 7348 00b9 11       		.uleb128 0x11
 7349 00ba 01       		.uleb128 0x1
 7350 00bb 12       		.uleb128 0x12
 7351 00bc 06       		.uleb128 0x6
 7352 00bd 40       		.uleb128 0x40
 7353 00be 18       		.uleb128 0x18
 7354 00bf 9642     		.uleb128 0x2116
 7355 00c1 19       		.uleb128 0x19
 7356 00c2 00       		.byte	0
 7357 00c3 00       		.byte	0
 7358 00c4 0F       		.uleb128 0xf
 7359 00c5 2E       		.uleb128 0x2e
 7360 00c6 01       		.byte	0x1
 7361 00c7 3F       		.uleb128 0x3f
 7362 00c8 19       		.uleb128 0x19
 7363 00c9 03       		.uleb128 0x3
 7364 00ca 0E       		.uleb128 0xe
 7365 00cb 3A       		.uleb128 0x3a
 7366 00cc 0B       		.uleb128 0xb
 7367 00cd 3B       		.uleb128 0x3b
 7368 00ce 0B       		.uleb128 0xb
 7369 00cf 27       		.uleb128 0x27
 7370 00d0 19       		.uleb128 0x19
 7371 00d1 11       		.uleb128 0x11
 7372 00d2 01       		.uleb128 0x1
 7373 00d3 12       		.uleb128 0x12
 7374 00d4 06       		.uleb128 0x6
 7375 00d5 40       		.uleb128 0x40
 7376 00d6 18       		.uleb128 0x18
 7377 00d7 9642     		.uleb128 0x2116
 7378 00d9 19       		.uleb128 0x19
 7379 00da 01       		.uleb128 0x1
 7380 00db 13       		.uleb128 0x13
 7381 00dc 00       		.byte	0
 7382 00dd 00       		.byte	0
 7383 00de 10       		.uleb128 0x10
 7384 00df 0B       		.uleb128 0xb
 7385 00e0 01       		.byte	0x1
 7386 00e1 11       		.uleb128 0x11
 7387 00e2 01       		.uleb128 0x1
 7388 00e3 12       		.uleb128 0x12
 7389 00e4 06       		.uleb128 0x6
 7390 00e5 01       		.uleb128 0x1
 7391 00e6 13       		.uleb128 0x13
 7392 00e7 00       		.byte	0
 7393 00e8 00       		.byte	0
 7394 00e9 11       		.uleb128 0x11
 7395 00ea 34       		.uleb128 0x34
 7396 00eb 00       		.byte	0
 7397 00ec 03       		.uleb128 0x3
 7398 00ed 0E       		.uleb128 0xe
 7399 00ee 3A       		.uleb128 0x3a
 7400 00ef 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 155


 7401 00f0 3B       		.uleb128 0x3b
 7402 00f1 0B       		.uleb128 0xb
 7403 00f2 49       		.uleb128 0x49
 7404 00f3 13       		.uleb128 0x13
 7405 00f4 02       		.uleb128 0x2
 7406 00f5 18       		.uleb128 0x18
 7407 00f6 00       		.byte	0
 7408 00f7 00       		.byte	0
 7409 00f8 12       		.uleb128 0x12
 7410 00f9 0B       		.uleb128 0xb
 7411 00fa 01       		.byte	0x1
 7412 00fb 11       		.uleb128 0x11
 7413 00fc 01       		.uleb128 0x1
 7414 00fd 12       		.uleb128 0x12
 7415 00fe 06       		.uleb128 0x6
 7416 00ff 00       		.byte	0
 7417 0100 00       		.byte	0
 7418 0101 13       		.uleb128 0x13
 7419 0102 2E       		.uleb128 0x2e
 7420 0103 01       		.byte	0x1
 7421 0104 3F       		.uleb128 0x3f
 7422 0105 19       		.uleb128 0x19
 7423 0106 03       		.uleb128 0x3
 7424 0107 0E       		.uleb128 0xe
 7425 0108 3A       		.uleb128 0x3a
 7426 0109 0B       		.uleb128 0xb
 7427 010a 3B       		.uleb128 0x3b
 7428 010b 0B       		.uleb128 0xb
 7429 010c 49       		.uleb128 0x49
 7430 010d 13       		.uleb128 0x13
 7431 010e 11       		.uleb128 0x11
 7432 010f 01       		.uleb128 0x1
 7433 0110 12       		.uleb128 0x12
 7434 0111 06       		.uleb128 0x6
 7435 0112 40       		.uleb128 0x40
 7436 0113 18       		.uleb128 0x18
 7437 0114 9642     		.uleb128 0x2116
 7438 0116 19       		.uleb128 0x19
 7439 0117 01       		.uleb128 0x1
 7440 0118 13       		.uleb128 0x13
 7441 0119 00       		.byte	0
 7442 011a 00       		.byte	0
 7443 011b 14       		.uleb128 0x14
 7444 011c 34       		.uleb128 0x34
 7445 011d 00       		.byte	0
 7446 011e 03       		.uleb128 0x3
 7447 011f 0E       		.uleb128 0xe
 7448 0120 3A       		.uleb128 0x3a
 7449 0121 0B       		.uleb128 0xb
 7450 0122 3B       		.uleb128 0x3b
 7451 0123 05       		.uleb128 0x5
 7452 0124 49       		.uleb128 0x49
 7453 0125 13       		.uleb128 0x13
 7454 0126 02       		.uleb128 0x2
 7455 0127 18       		.uleb128 0x18
 7456 0128 00       		.byte	0
 7457 0129 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 156


 7458 012a 15       		.uleb128 0x15
 7459 012b 34       		.uleb128 0x34
 7460 012c 00       		.byte	0
 7461 012d 03       		.uleb128 0x3
 7462 012e 08       		.uleb128 0x8
 7463 012f 3A       		.uleb128 0x3a
 7464 0130 0B       		.uleb128 0xb
 7465 0131 3B       		.uleb128 0x3b
 7466 0132 05       		.uleb128 0x5
 7467 0133 49       		.uleb128 0x49
 7468 0134 13       		.uleb128 0x13
 7469 0135 02       		.uleb128 0x2
 7470 0136 18       		.uleb128 0x18
 7471 0137 00       		.byte	0
 7472 0138 00       		.byte	0
 7473 0139 16       		.uleb128 0x16
 7474 013a 2E       		.uleb128 0x2e
 7475 013b 01       		.byte	0x1
 7476 013c 3F       		.uleb128 0x3f
 7477 013d 19       		.uleb128 0x19
 7478 013e 03       		.uleb128 0x3
 7479 013f 0E       		.uleb128 0xe
 7480 0140 3A       		.uleb128 0x3a
 7481 0141 0B       		.uleb128 0xb
 7482 0142 3B       		.uleb128 0x3b
 7483 0143 05       		.uleb128 0x5
 7484 0144 11       		.uleb128 0x11
 7485 0145 01       		.uleb128 0x1
 7486 0146 12       		.uleb128 0x12
 7487 0147 06       		.uleb128 0x6
 7488 0148 40       		.uleb128 0x40
 7489 0149 18       		.uleb128 0x18
 7490 014a 9742     		.uleb128 0x2117
 7491 014c 19       		.uleb128 0x19
 7492 014d 01       		.uleb128 0x1
 7493 014e 13       		.uleb128 0x13
 7494 014f 00       		.byte	0
 7495 0150 00       		.byte	0
 7496 0151 17       		.uleb128 0x17
 7497 0152 2E       		.uleb128 0x2e
 7498 0153 01       		.byte	0x1
 7499 0154 3F       		.uleb128 0x3f
 7500 0155 19       		.uleb128 0x19
 7501 0156 03       		.uleb128 0x3
 7502 0157 0E       		.uleb128 0xe
 7503 0158 3A       		.uleb128 0x3a
 7504 0159 0B       		.uleb128 0xb
 7505 015a 3B       		.uleb128 0x3b
 7506 015b 05       		.uleb128 0x5
 7507 015c 27       		.uleb128 0x27
 7508 015d 19       		.uleb128 0x19
 7509 015e 11       		.uleb128 0x11
 7510 015f 01       		.uleb128 0x1
 7511 0160 12       		.uleb128 0x12
 7512 0161 06       		.uleb128 0x6
 7513 0162 40       		.uleb128 0x40
 7514 0163 18       		.uleb128 0x18
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 157


 7515 0164 9642     		.uleb128 0x2116
 7516 0166 19       		.uleb128 0x19
 7517 0167 01       		.uleb128 0x1
 7518 0168 13       		.uleb128 0x13
 7519 0169 00       		.byte	0
 7520 016a 00       		.byte	0
 7521 016b 18       		.uleb128 0x18
 7522 016c 05       		.uleb128 0x5
 7523 016d 00       		.byte	0
 7524 016e 03       		.uleb128 0x3
 7525 016f 08       		.uleb128 0x8
 7526 0170 3A       		.uleb128 0x3a
 7527 0171 0B       		.uleb128 0xb
 7528 0172 3B       		.uleb128 0x3b
 7529 0173 05       		.uleb128 0x5
 7530 0174 49       		.uleb128 0x49
 7531 0175 13       		.uleb128 0x13
 7532 0176 02       		.uleb128 0x2
 7533 0177 18       		.uleb128 0x18
 7534 0178 00       		.byte	0
 7535 0179 00       		.byte	0
 7536 017a 19       		.uleb128 0x19
 7537 017b 2E       		.uleb128 0x2e
 7538 017c 01       		.byte	0x1
 7539 017d 3F       		.uleb128 0x3f
 7540 017e 19       		.uleb128 0x19
 7541 017f 03       		.uleb128 0x3
 7542 0180 0E       		.uleb128 0xe
 7543 0181 3A       		.uleb128 0x3a
 7544 0182 0B       		.uleb128 0xb
 7545 0183 3B       		.uleb128 0x3b
 7546 0184 05       		.uleb128 0x5
 7547 0185 11       		.uleb128 0x11
 7548 0186 01       		.uleb128 0x1
 7549 0187 12       		.uleb128 0x12
 7550 0188 06       		.uleb128 0x6
 7551 0189 40       		.uleb128 0x40
 7552 018a 18       		.uleb128 0x18
 7553 018b 9642     		.uleb128 0x2116
 7554 018d 19       		.uleb128 0x19
 7555 018e 01       		.uleb128 0x1
 7556 018f 13       		.uleb128 0x13
 7557 0190 00       		.byte	0
 7558 0191 00       		.byte	0
 7559 0192 1A       		.uleb128 0x1a
 7560 0193 05       		.uleb128 0x5
 7561 0194 00       		.byte	0
 7562 0195 03       		.uleb128 0x3
 7563 0196 0E       		.uleb128 0xe
 7564 0197 3A       		.uleb128 0x3a
 7565 0198 0B       		.uleb128 0xb
 7566 0199 3B       		.uleb128 0x3b
 7567 019a 05       		.uleb128 0x5
 7568 019b 49       		.uleb128 0x49
 7569 019c 13       		.uleb128 0x13
 7570 019d 02       		.uleb128 0x2
 7571 019e 18       		.uleb128 0x18
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 158


 7572 019f 00       		.byte	0
 7573 01a0 00       		.byte	0
 7574 01a1 1B       		.uleb128 0x1b
 7575 01a2 2E       		.uleb128 0x2e
 7576 01a3 00       		.byte	0
 7577 01a4 3F       		.uleb128 0x3f
 7578 01a5 19       		.uleb128 0x19
 7579 01a6 03       		.uleb128 0x3
 7580 01a7 0E       		.uleb128 0xe
 7581 01a8 3A       		.uleb128 0x3a
 7582 01a9 0B       		.uleb128 0xb
 7583 01aa 3B       		.uleb128 0x3b
 7584 01ab 05       		.uleb128 0x5
 7585 01ac 11       		.uleb128 0x11
 7586 01ad 01       		.uleb128 0x1
 7587 01ae 12       		.uleb128 0x12
 7588 01af 06       		.uleb128 0x6
 7589 01b0 40       		.uleb128 0x40
 7590 01b1 18       		.uleb128 0x18
 7591 01b2 9642     		.uleb128 0x2116
 7592 01b4 19       		.uleb128 0x19
 7593 01b5 00       		.byte	0
 7594 01b6 00       		.byte	0
 7595 01b7 1C       		.uleb128 0x1c
 7596 01b8 2E       		.uleb128 0x2e
 7597 01b9 00       		.byte	0
 7598 01ba 3F       		.uleb128 0x3f
 7599 01bb 19       		.uleb128 0x19
 7600 01bc 03       		.uleb128 0x3
 7601 01bd 0E       		.uleb128 0xe
 7602 01be 3A       		.uleb128 0x3a
 7603 01bf 0B       		.uleb128 0xb
 7604 01c0 3B       		.uleb128 0x3b
 7605 01c1 05       		.uleb128 0x5
 7606 01c2 11       		.uleb128 0x11
 7607 01c3 01       		.uleb128 0x1
 7608 01c4 12       		.uleb128 0x12
 7609 01c5 06       		.uleb128 0x6
 7610 01c6 40       		.uleb128 0x40
 7611 01c7 18       		.uleb128 0x18
 7612 01c8 9742     		.uleb128 0x2117
 7613 01ca 19       		.uleb128 0x19
 7614 01cb 00       		.byte	0
 7615 01cc 00       		.byte	0
 7616 01cd 1D       		.uleb128 0x1d
 7617 01ce 34       		.uleb128 0x34
 7618 01cf 00       		.byte	0
 7619 01d0 03       		.uleb128 0x3
 7620 01d1 0E       		.uleb128 0xe
 7621 01d2 3A       		.uleb128 0x3a
 7622 01d3 0B       		.uleb128 0xb
 7623 01d4 3B       		.uleb128 0x3b
 7624 01d5 05       		.uleb128 0x5
 7625 01d6 49       		.uleb128 0x49
 7626 01d7 13       		.uleb128 0x13
 7627 01d8 3F       		.uleb128 0x3f
 7628 01d9 19       		.uleb128 0x19
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 159


 7629 01da 3C       		.uleb128 0x3c
 7630 01db 19       		.uleb128 0x19
 7631 01dc 00       		.byte	0
 7632 01dd 00       		.byte	0
 7633 01de 1E       		.uleb128 0x1e
 7634 01df 35       		.uleb128 0x35
 7635 01e0 00       		.byte	0
 7636 01e1 49       		.uleb128 0x49
 7637 01e2 13       		.uleb128 0x13
 7638 01e3 00       		.byte	0
 7639 01e4 00       		.byte	0
 7640 01e5 1F       		.uleb128 0x1f
 7641 01e6 34       		.uleb128 0x34
 7642 01e7 00       		.byte	0
 7643 01e8 03       		.uleb128 0x3
 7644 01e9 08       		.uleb128 0x8
 7645 01ea 3A       		.uleb128 0x3a
 7646 01eb 0B       		.uleb128 0xb
 7647 01ec 3B       		.uleb128 0x3b
 7648 01ed 0B       		.uleb128 0xb
 7649 01ee 49       		.uleb128 0x49
 7650 01ef 13       		.uleb128 0x13
 7651 01f0 3F       		.uleb128 0x3f
 7652 01f1 19       		.uleb128 0x19
 7653 01f2 02       		.uleb128 0x2
 7654 01f3 18       		.uleb128 0x18
 7655 01f4 00       		.byte	0
 7656 01f5 00       		.byte	0
 7657 01f6 20       		.uleb128 0x20
 7658 01f7 34       		.uleb128 0x34
 7659 01f8 00       		.byte	0
 7660 01f9 03       		.uleb128 0x3
 7661 01fa 0E       		.uleb128 0xe
 7662 01fb 3A       		.uleb128 0x3a
 7663 01fc 0B       		.uleb128 0xb
 7664 01fd 3B       		.uleb128 0x3b
 7665 01fe 0B       		.uleb128 0xb
 7666 01ff 49       		.uleb128 0x49
 7667 0200 13       		.uleb128 0x13
 7668 0201 3F       		.uleb128 0x3f
 7669 0202 19       		.uleb128 0x19
 7670 0203 02       		.uleb128 0x2
 7671 0204 18       		.uleb128 0x18
 7672 0205 00       		.byte	0
 7673 0206 00       		.byte	0
 7674 0207 21       		.uleb128 0x21
 7675 0208 21       		.uleb128 0x21
 7676 0209 00       		.byte	0
 7677 020a 49       		.uleb128 0x49
 7678 020b 13       		.uleb128 0x13
 7679 020c 2F       		.uleb128 0x2f
 7680 020d 05       		.uleb128 0x5
 7681 020e 00       		.byte	0
 7682 020f 00       		.byte	0
 7683 0210 22       		.uleb128 0x22
 7684 0211 34       		.uleb128 0x34
 7685 0212 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 160


 7686 0213 03       		.uleb128 0x3
 7687 0214 0E       		.uleb128 0xe
 7688 0215 3A       		.uleb128 0x3a
 7689 0216 0B       		.uleb128 0xb
 7690 0217 3B       		.uleb128 0x3b
 7691 0218 05       		.uleb128 0x5
 7692 0219 49       		.uleb128 0x49
 7693 021a 13       		.uleb128 0x13
 7694 021b 3F       		.uleb128 0x3f
 7695 021c 19       		.uleb128 0x19
 7696 021d 02       		.uleb128 0x2
 7697 021e 18       		.uleb128 0x18
 7698 021f 00       		.byte	0
 7699 0220 00       		.byte	0
 7700 0221 00       		.byte	0
 7701              		.section	.debug_aranges,"",%progbits
 7702 0000 6C010000 		.4byte	0x16c
 7703 0004 0200     		.2byte	0x2
 7704 0006 00000000 		.4byte	.Ldebug_info0
 7705 000a 04       		.byte	0x4
 7706 000b 00       		.byte	0
 7707 000c 0000     		.2byte	0
 7708 000e 0000     		.2byte	0
 7709 0010 00000000 		.4byte	.LFB63
 7710 0014 0C000000 		.4byte	.LFE63-.LFB63
 7711 0018 00000000 		.4byte	.LFB64
 7712 001c 2C000000 		.4byte	.LFE64-.LFB64
 7713 0020 00000000 		.4byte	.LFB65
 7714 0024 98010000 		.4byte	.LFE65-.LFB65
 7715 0028 00000000 		.4byte	.LFB66
 7716 002c 34010000 		.4byte	.LFE66-.LFB66
 7717 0030 00000000 		.4byte	.LFB67
 7718 0034 20000000 		.4byte	.LFE67-.LFB67
 7719 0038 00000000 		.4byte	.LFB68
 7720 003c 28000000 		.4byte	.LFE68-.LFB68
 7721 0040 00000000 		.4byte	.LFB69
 7722 0044 0A000000 		.4byte	.LFE69-.LFB69
 7723 0048 00000000 		.4byte	.LFB70
 7724 004c 28000000 		.4byte	.LFE70-.LFB70
 7725 0050 00000000 		.4byte	.LFB71
 7726 0054 B0060000 		.4byte	.LFE71-.LFB71
 7727 0058 00000000 		.4byte	.LFB72
 7728 005c 60010000 		.4byte	.LFE72-.LFB72
 7729 0060 00000000 		.4byte	.LFB73
 7730 0064 18000000 		.4byte	.LFE73-.LFB73
 7731 0068 00000000 		.4byte	.LFB74
 7732 006c 18000000 		.4byte	.LFE74-.LFB74
 7733 0070 00000000 		.4byte	.LFB75
 7734 0074 54000000 		.4byte	.LFE75-.LFB75
 7735 0078 00000000 		.4byte	.LFB76
 7736 007c F4000000 		.4byte	.LFE76-.LFB76
 7737 0080 00000000 		.4byte	.LFB77
 7738 0084 18000000 		.4byte	.LFE77-.LFB77
 7739 0088 00000000 		.4byte	.LFB78
 7740 008c 18000000 		.4byte	.LFE78-.LFB78
 7741 0090 00000000 		.4byte	.LFB79
 7742 0094 22000000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 161


 7743 0098 00000000 		.4byte	.LFB80
 7744 009c 1C000000 		.4byte	.LFE80-.LFB80
 7745 00a0 00000000 		.4byte	.LFB81
 7746 00a4 34000000 		.4byte	.LFE81-.LFB81
 7747 00a8 00000000 		.4byte	.LFB82
 7748 00ac 38000000 		.4byte	.LFE82-.LFB82
 7749 00b0 00000000 		.4byte	.LFB83
 7750 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7751 00b8 00000000 		.4byte	.LFB84
 7752 00bc 38000000 		.4byte	.LFE84-.LFB84
 7753 00c0 00000000 		.4byte	.LFB85
 7754 00c4 38000000 		.4byte	.LFE85-.LFB85
 7755 00c8 00000000 		.4byte	.LFB86
 7756 00cc 38000000 		.4byte	.LFE86-.LFB86
 7757 00d0 00000000 		.4byte	.LFB87
 7758 00d4 14000000 		.4byte	.LFE87-.LFB87
 7759 00d8 00000000 		.4byte	.LFB88
 7760 00dc 18000000 		.4byte	.LFE88-.LFB88
 7761 00e0 00000000 		.4byte	.LFB89
 7762 00e4 18000000 		.4byte	.LFE89-.LFB89
 7763 00e8 00000000 		.4byte	.LFB90
 7764 00ec 18000000 		.4byte	.LFE90-.LFB90
 7765 00f0 00000000 		.4byte	.LFB91
 7766 00f4 18000000 		.4byte	.LFE91-.LFB91
 7767 00f8 00000000 		.4byte	.LFB92
 7768 00fc B8000000 		.4byte	.LFE92-.LFB92
 7769 0100 00000000 		.4byte	.LFB93
 7770 0104 60050000 		.4byte	.LFE93-.LFB93
 7771 0108 00000000 		.4byte	.LFB94
 7772 010c 40000000 		.4byte	.LFE94-.LFB94
 7773 0110 00000000 		.4byte	.LFB95
 7774 0114 40000000 		.4byte	.LFE95-.LFB95
 7775 0118 00000000 		.4byte	.LFB96
 7776 011c 30020000 		.4byte	.LFE96-.LFB96
 7777 0120 00000000 		.4byte	.LFB97
 7778 0124 0C000000 		.4byte	.LFE97-.LFB97
 7779 0128 00000000 		.4byte	.LFB98
 7780 012c 4C010000 		.4byte	.LFE98-.LFB98
 7781 0130 00000000 		.4byte	.LFB99
 7782 0134 0C000000 		.4byte	.LFE99-.LFB99
 7783 0138 00000000 		.4byte	.LFB100
 7784 013c C0000000 		.4byte	.LFE100-.LFB100
 7785 0140 00000000 		.4byte	.LFB101
 7786 0144 B8000000 		.4byte	.LFE101-.LFB101
 7787 0148 00000000 		.4byte	.LFB102
 7788 014c 4A000000 		.4byte	.LFE102-.LFB102
 7789 0150 00000000 		.4byte	.LFB103
 7790 0154 68000000 		.4byte	.LFE103-.LFB103
 7791 0158 00000000 		.4byte	.LFB104
 7792 015c 50000000 		.4byte	.LFE104-.LFB104
 7793 0160 00000000 		.4byte	.LFB105
 7794 0164 0C000000 		.4byte	.LFE105-.LFB105
 7795 0168 00000000 		.4byte	0
 7796 016c 00000000 		.4byte	0
 7797              		.section	.debug_ranges,"",%progbits
 7798              	.Ldebug_ranges0:
 7799 0000 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 162


 7800 0004 0C000000 		.4byte	.LFE63
 7801 0008 00000000 		.4byte	.LFB64
 7802 000c 2C000000 		.4byte	.LFE64
 7803 0010 00000000 		.4byte	.LFB65
 7804 0014 98010000 		.4byte	.LFE65
 7805 0018 00000000 		.4byte	.LFB66
 7806 001c 34010000 		.4byte	.LFE66
 7807 0020 00000000 		.4byte	.LFB67
 7808 0024 20000000 		.4byte	.LFE67
 7809 0028 00000000 		.4byte	.LFB68
 7810 002c 28000000 		.4byte	.LFE68
 7811 0030 00000000 		.4byte	.LFB69
 7812 0034 0A000000 		.4byte	.LFE69
 7813 0038 00000000 		.4byte	.LFB70
 7814 003c 28000000 		.4byte	.LFE70
 7815 0040 00000000 		.4byte	.LFB71
 7816 0044 B0060000 		.4byte	.LFE71
 7817 0048 00000000 		.4byte	.LFB72
 7818 004c 60010000 		.4byte	.LFE72
 7819 0050 00000000 		.4byte	.LFB73
 7820 0054 18000000 		.4byte	.LFE73
 7821 0058 00000000 		.4byte	.LFB74
 7822 005c 18000000 		.4byte	.LFE74
 7823 0060 00000000 		.4byte	.LFB75
 7824 0064 54000000 		.4byte	.LFE75
 7825 0068 00000000 		.4byte	.LFB76
 7826 006c F4000000 		.4byte	.LFE76
 7827 0070 00000000 		.4byte	.LFB77
 7828 0074 18000000 		.4byte	.LFE77
 7829 0078 00000000 		.4byte	.LFB78
 7830 007c 18000000 		.4byte	.LFE78
 7831 0080 00000000 		.4byte	.LFB79
 7832 0084 22000000 		.4byte	.LFE79
 7833 0088 00000000 		.4byte	.LFB80
 7834 008c 1C000000 		.4byte	.LFE80
 7835 0090 00000000 		.4byte	.LFB81
 7836 0094 34000000 		.4byte	.LFE81
 7837 0098 00000000 		.4byte	.LFB82
 7838 009c 38000000 		.4byte	.LFE82
 7839 00a0 00000000 		.4byte	.LFB83
 7840 00a4 4C000000 		.4byte	.LFE83
 7841 00a8 00000000 		.4byte	.LFB84
 7842 00ac 38000000 		.4byte	.LFE84
 7843 00b0 00000000 		.4byte	.LFB85
 7844 00b4 38000000 		.4byte	.LFE85
 7845 00b8 00000000 		.4byte	.LFB86
 7846 00bc 38000000 		.4byte	.LFE86
 7847 00c0 00000000 		.4byte	.LFB87
 7848 00c4 14000000 		.4byte	.LFE87
 7849 00c8 00000000 		.4byte	.LFB88
 7850 00cc 18000000 		.4byte	.LFE88
 7851 00d0 00000000 		.4byte	.LFB89
 7852 00d4 18000000 		.4byte	.LFE89
 7853 00d8 00000000 		.4byte	.LFB90
 7854 00dc 18000000 		.4byte	.LFE90
 7855 00e0 00000000 		.4byte	.LFB91
 7856 00e4 18000000 		.4byte	.LFE91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 163


 7857 00e8 00000000 		.4byte	.LFB92
 7858 00ec B8000000 		.4byte	.LFE92
 7859 00f0 00000000 		.4byte	.LFB93
 7860 00f4 60050000 		.4byte	.LFE93
 7861 00f8 00000000 		.4byte	.LFB94
 7862 00fc 40000000 		.4byte	.LFE94
 7863 0100 00000000 		.4byte	.LFB95
 7864 0104 40000000 		.4byte	.LFE95
 7865 0108 00000000 		.4byte	.LFB96
 7866 010c 30020000 		.4byte	.LFE96
 7867 0110 00000000 		.4byte	.LFB97
 7868 0114 0C000000 		.4byte	.LFE97
 7869 0118 00000000 		.4byte	.LFB98
 7870 011c 4C010000 		.4byte	.LFE98
 7871 0120 00000000 		.4byte	.LFB99
 7872 0124 0C000000 		.4byte	.LFE99
 7873 0128 00000000 		.4byte	.LFB100
 7874 012c C0000000 		.4byte	.LFE100
 7875 0130 00000000 		.4byte	.LFB101
 7876 0134 B8000000 		.4byte	.LFE101
 7877 0138 00000000 		.4byte	.LFB102
 7878 013c 4A000000 		.4byte	.LFE102
 7879 0140 00000000 		.4byte	.LFB103
 7880 0144 68000000 		.4byte	.LFE103
 7881 0148 00000000 		.4byte	.LFB104
 7882 014c 50000000 		.4byte	.LFE104
 7883 0150 00000000 		.4byte	.LFB105
 7884 0154 0C000000 		.4byte	.LFE105
 7885 0158 00000000 		.4byte	0
 7886 015c 00000000 		.4byte	0
 7887              		.section	.debug_line,"",%progbits
 7888              	.Ldebug_line0:
 7889 0000 F0070000 		.section	.debug_str,"MS",%progbits,1
 7889      02006701 
 7889      00000201 
 7889      FB0E0D00 
 7889      01010101 
 7890              	.LASF141:
 7891 0000 64697265 		.ascii	"direction\000"
 7891      6374696F 
 7891      6E00
 7892              	.LASF192:
 7893 000a 74726163 		.ascii	"tracked_direction\000"
 7893      6B65645F 
 7893      64697265 
 7893      6374696F 
 7893      6E00
 7894              	.LASF200:
 7895 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7895      73657273 
 7895      5C4C6F67 
 7895      616E5C44 
 7895      65736B74 
 7896 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7896      315F436C 
 7896      6173732E 
 7896      63796473 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 164


 7896      6E00
 7897              	.LASF25:
 7898 005b 52545552 		.ascii	"RTURN\000"
 7898      4E00
 7899              	.LASF197:
 7900 0061 72696768 		.ascii	"rightTurnCount\000"
 7900      74547572 
 7900      6E436F75 
 7900      6E7400
 7901              	.LASF170:
 7902 0070 72696768 		.ascii	"rightOn\000"
 7902      744F6E00 
 7903              	.LASF39:
 7904 0078 44455354 		.ascii	"DEST_TEST\000"
 7904      5F544553 
 7904      5400
 7905              	.LASF149:
 7906 0082 71756164 		.ascii	"quad_diff1\000"
 7906      5F646966 
 7906      663100
 7907              	.LASF150:
 7908 008d 71756164 		.ascii	"quad_diff2\000"
 7908      5F646966 
 7908      663200
 7909              	.LASF103:
 7910 0098 51756164 		.ascii	"Quad_Dec_response\000"
 7910      5F446563 
 7910      5F726573 
 7910      706F6E73 
 7910      6500
 7911              	.LASF171:
 7912 00aa 70726576 		.ascii	"prevVoltage\000"
 7912      566F6C74 
 7912      61676500 
 7913              	.LASF152:
 7914 00b6 73746172 		.ascii	"start_turn_count\000"
 7914      745F7475 
 7914      726E5F63 
 7914      6F756E74 
 7914      00
 7915              	.LASF10:
 7916 00c7 756E7369 		.ascii	"unsigned int\000"
 7916      676E6564 
 7916      20696E74 
 7916      00
 7917              	.LASF181:
 7918 00d4 74726163 		.ascii	"track_mode\000"
 7918      6B5F6D6F 
 7918      646500
 7919              	.LASF5:
 7920 00df 5F5F696E 		.ascii	"__int32_t\000"
 7920      7433325F 
 7920      7400
 7921              	.LASF19:
 7922 00e9 696E7431 		.ascii	"int16\000"
 7922      3600
 7923              	.LASF178:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 165


 7924 00ef 73797374 		.ascii	"system_state\000"
 7924      656D5F73 
 7924      74617465 
 7924      00
 7925              	.LASF24:
 7926 00fc 4C545552 		.ascii	"LTURN\000"
 7926      4E00
 7927              	.LASF159:
 7928 0102 74617267 		.ascii	"target_distance_quad\000"
 7928      65745F64 
 7928      69737461 
 7928      6E63655F 
 7928      71756164 
 7929              	.LASF27:
 7930 0117 54524143 		.ascii	"TRACKING\000"
 7930      4B494E47 
 7930      00
 7931              	.LASF172:
 7932 0120 70726576 		.ascii	"prevVoltage2\000"
 7932      566F6C74 
 7932      61676532 
 7932      00
 7933              	.LASF186:
 7934 012d 73656E73 		.ascii	"sensorsDisabled\000"
 7934      6F727344 
 7934      69736162 
 7934      6C656400 
 7935              	.LASF71:
 7936 013d 7061636B 		.ascii	"packet_bytes\000"
 7936      65745F62 
 7936      79746573 
 7936      00
 7937              	.LASF54:
 7938 014a 67325F78 		.ascii	"g2_xpos\000"
 7938      706F7300 
 7939              	.LASF32:
 7940 0152 6D6F6465 		.ascii	"mode\000"
 7940      00
 7941              	.LASF145:
 7942 0157 71756164 		.ascii	"quad_count1\000"
 7942      5F636F75 
 7942      6E743100 
 7943              	.LASF146:
 7944 0163 71756164 		.ascii	"quad_count2\000"
 7944      5F636F75 
 7944      6E743200 
 7945              	.LASF112:
 7946 016f 74726163 		.ascii	"trackLineU\000"
 7946      6B4C696E 
 7946      655500
 7947              	.LASF191:
 7948 017a 726F626F 		.ascii	"robot_direction\000"
 7948      745F6469 
 7948      72656374 
 7948      696F6E00 
 7949              	.LASF111:
 7950 018a 74726163 		.ascii	"trackLineZ\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 166


 7950      6B4C696E 
 7950      655A00
 7951              	.LASF196:
 7952 0195 6C656674 		.ascii	"leftTurnCount\000"
 7952      5475726E 
 7952      436F756E 
 7952      7400
 7953              	.LASF184:
 7954 01a3 73706565 		.ascii	"speed\000"
 7954      6400
 7955              	.LASF36:
 7956 01a9 53515541 		.ascii	"SQUARE_TRACK\000"
 7956      52455F54 
 7956      5241434B 
 7956      00
 7957              	.LASF137:
 7958 01b6 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7958      5F72665F 
 7958      7472616E 
 7958      736D6973 
 7958      73696F6E 
 7959              	.LASF138:
 7960 01d2 666C6167 		.ascii	"flag_print_rf\000"
 7960      5F707269 
 7960      6E745F72 
 7960      6600
 7961              	.LASF180:
 7962 01e0 6D6F7665 		.ascii	"movement_state\000"
 7962      6D656E74 
 7962      5F737461 
 7962      746500
 7963              	.LASF28:
 7964 01ef 54524143 		.ascii	"TRACKING_U\000"
 7964      4B494E47 
 7964      5F5500
 7965              	.LASF93:
 7966 01fa 696E6974 		.ascii	"initForward\000"
 7966      466F7277 
 7966      61726400 
 7967              	.LASF14:
 7968 0206 75696E74 		.ascii	"uint32_t\000"
 7968      33325F74 
 7968      00
 7969              	.LASF57:
 7970 020f 67325F64 		.ascii	"g2_direction\000"
 7970      69726563 
 7970      74696F6E 
 7970      00
 7971              	.LASF60:
 7972 021c 6973725F 		.ascii	"isr_quad1\000"
 7972      71756164 
 7972      3100
 7973              	.LASF20:
 7974 0226 666C6F61 		.ascii	"float\000"
 7974      7400
 7975              	.LASF78:
 7976 022c 73657453 		.ascii	"setSpeed\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 167


 7976      70656564 
 7976      00
 7977              	.LASF176:
 7978 0235 75736242 		.ascii	"usbBuffer\000"
 7978      75666665 
 7978      7200
 7979              	.LASF42:
 7980 023f 696E6465 		.ascii	"index\000"
 7980      7800
 7981              	.LASF23:
 7982 0245 44524956 		.ascii	"DRIVE\000"
 7982      4500
 7983              	.LASF73:
 7984 024b 73747269 		.ascii	"string_packet\000"
 7984      6E675F70 
 7984      61636B65 
 7984      7400
 7985              	.LASF102:
 7986 0259 6368616E 		.ascii	"changeToBT\000"
 7986      6765546F 
 7986      425400
 7987              	.LASF81:
 7988 0264 636F756E 		.ascii	"countsLeft\000"
 7988      74734C65 
 7988      667400
 7989              	.LASF86:
 7990 026f 64726976 		.ascii	"driveForwards\000"
 7990      65466F72 
 7990      77617264 
 7990      7300
 7991              	.LASF88:
 7992 027d 7475726E 		.ascii	"turnLeft\000"
 7992      4C656674 
 7992      00
 7993              	.LASF9:
 7994 0286 6C6F6E67 		.ascii	"long long unsigned int\000"
 7994      206C6F6E 
 7994      6720756E 
 7994      7369676E 
 7994      65642069 
 7995              	.LASF134:
 7996 029d 666C6167 		.ascii	"flag_packet\000"
 7996      5F706163 
 7996      6B657400 
 7997              	.LASF168:
 7998 02a9 66726F6E 		.ascii	"frontSensors\000"
 7998      7453656E 
 7998      736F7273 
 7998      00
 7999              	.LASF66:
 8000 02b6 6973725F 		.ascii	"isr_turn_timer\000"
 8000      7475726E 
 8000      5F74696D 
 8000      657200
 8001              	.LASF101:
 8002 02c5 6368616E 		.ascii	"changeToRF\000"
 8002      6765546F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 168


 8002      524600
 8003              	.LASF90:
 8004 02d0 696E6974 		.ascii	"initTurnLeft\000"
 8004      5475726E 
 8004      4C656674 
 8004      00
 8005              	.LASF167:
 8006 02dd 706F7274 		.ascii	"portOpen\000"
 8006      4F70656E 
 8006      00
 8007              	.LASF94:
 8008 02e6 696E6974 		.ascii	"initBrake\000"
 8008      4272616B 
 8008      6500
 8009              	.LASF130:
 8010 02f0 666C6167 		.ascii	"flag_ts_update\000"
 8010      5F74735F 
 8010      75706461 
 8010      746500
 8011              	.LASF114:
 8012 02ff 7363616C 		.ascii	"scalingFactor\000"
 8012      696E6746 
 8012      6163746F 
 8012      7200
 8013              	.LASF104:
 8014 030d 6C656674 		.ascii	"leftSpeed\000"
 8014      53706565 
 8014      6400
 8015              	.LASF129:
 8016 0317 666C6167 		.ascii	"flag_ts_enc\000"
 8016      5F74735F 
 8016      656E6300 
 8017              	.LASF182:
 8018 0323 62797465 		.ascii	"byteCount\000"
 8018      436F756E 
 8018      7400
 8019              	.LASF68:
 8020 032d 61637469 		.ascii	"actionDebounce\000"
 8020      6F6E4465 
 8020      626F756E 
 8020      636500
 8021              	.LASF63:
 8022 033c 62757474 		.ascii	"button\000"
 8022      6F6E00
 8023              	.LASF179:
 8024 0343 70726576 		.ascii	"prev_movement_state\000"
 8024      5F6D6F76 
 8024      656D656E 
 8024      745F7374 
 8024      61746500 
 8025              	.LASF120:
 8026 0357 73656E73 		.ascii	"sensorVals\000"
 8026      6F725661 
 8026      6C7300
 8027              	.LASF116:
 8028 0362 72657375 		.ascii	"result_str\000"
 8028      6C745F73 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 169


 8028      747200
 8029              	.LASF123:
 8030 036d 75617274 		.ascii	"uart_set_PWM\000"
 8030      5F736574 
 8030      5F50574D 
 8030      00
 8031              	.LASF97:
 8032 037a 696E6974 		.ascii	"inittrackLineZ\000"
 8032      74726163 
 8032      6B4C696E 
 8032      655A00
 8033              	.LASF44:
 8034 0389 726F626F 		.ascii	"robot_ypos\000"
 8034      745F7970 
 8034      6F7300
 8035              	.LASF128:
 8036 0394 74735F64 		.ascii	"ts_display\000"
 8036      6973706C 
 8036      617900
 8037              	.LASF113:
 8038 039f 7072696E 		.ascii	"print_ADC\000"
 8038      745F4144 
 8038      4300
 8039              	.LASF106:
 8040 03a9 7363616C 		.ascii	"scalingLeft\000"
 8040      696E674C 
 8040      65667400 
 8041              	.LASF12:
 8042 03b5 63686172 		.ascii	"char\000"
 8042      00
 8043              	.LASF48:
 8044 03ba 67305F73 		.ascii	"g0_speed\000"
 8044      70656564 
 8044      00
 8045              	.LASF156:
 8046 03c3 72696768 		.ascii	"rightSpeedLimit\000"
 8046      74537065 
 8046      65644C69 
 8046      6D697400 
 8047              	.LASF74:
 8048 03d3 7365744C 		.ascii	"setLeftDir\000"
 8048      65667444 
 8048      697200
 8049              	.LASF185:
 8050 03de 696E7374 		.ascii	"instructionCount\000"
 8050      72756374 
 8050      696F6E43 
 8050      6F756E74 
 8050      00
 8051              	.LASF89:
 8052 03ef 7475726E 		.ascii	"turnU\000"
 8052      5500
 8053              	.LASF55:
 8054 03f5 67325F79 		.ascii	"g2_ypos\000"
 8054      706F7300 
 8055              	.LASF61:
 8056 03fd 64697374 		.ascii	"distTurned\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 170


 8056      5475726E 
 8056      656400
 8057              	.LASF16:
 8058 0408 75696E74 		.ascii	"uint16\000"
 8058      313600
 8059              	.LASF18:
 8060 040f 696E7438 		.ascii	"int8\000"
 8060      00
 8061              	.LASF70:
 8062 0414 6E657874 		.ascii	"nextStepDist\000"
 8062      53746570 
 8062      44697374 
 8062      00
 8063              	.LASF53:
 8064 0421 67315F64 		.ascii	"g1_direction\000"
 8064      69726563 
 8064      74696F6E 
 8064      00
 8065              	.LASF188:
 8066 042e 70617468 		.ascii	"path\000"
 8066      00
 8067              	.LASF75:
 8068 0433 73657452 		.ascii	"setRightDir\000"
 8068      69676874 
 8068      44697200 
 8069              	.LASF34:
 8070 043f 43555256 		.ascii	"CURVE_TRACK\000"
 8070      455F5452 
 8070      41434B00 
 8071              	.LASF108:
 8072 044b 696E7465 		.ascii	"interCalc\000"
 8072      7243616C 
 8072      6300
 8073              	.LASF143:
 8074 0455 42545F45 		.ascii	"BT_ENABLED\000"
 8074      4E41424C 
 8074      454400
 8075              	.LASF80:
 8076 0460 72696768 		.ascii	"right\000"
 8076      7400
 8077              	.LASF163:
 8078 0466 696E6974 		.ascii	"initial_pos_valid\000"
 8078      69616C5F 
 8078      706F735F 
 8078      76616C69 
 8078      6400
 8079              	.LASF8:
 8080 0478 6C6F6E67 		.ascii	"long long int\000"
 8080      206C6F6E 
 8080      6720696E 
 8080      7400
 8081              	.LASF177:
 8082 0486 62756666 		.ascii	"buffer_state\000"
 8082      65725F73 
 8082      74617465 
 8082      00
 8083              	.LASF50:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 171


 8084 0493 67315F78 		.ascii	"g1_xpos\000"
 8084      706F7300 
 8085              	.LASF95:
 8086 049b 696E6974 		.ascii	"initTrack\000"
 8086      54726163 
 8086      6B00
 8087              	.LASF69:
 8088 04a5 6E657874 		.ascii	"nextStep\000"
 8088      53746570 
 8088      00
 8089              	.LASF198:
 8090 04ae 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8090      4320342E 
 8090      392E3320 
 8090      32303135 
 8090      30333033 
 8091 04e1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8091      20726576 
 8091      6973696F 
 8091      6E203232 
 8091      31323230 
 8092 0514 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8092      66756E63 
 8092      74696F6E 
 8092      2D736563 
 8092      74696F6E 
 8093              	.LASF56:
 8094 053c 67325F73 		.ascii	"g2_speed\000"
 8094      70656564 
 8094      00
 8095              	.LASF47:
 8096 0545 67305F79 		.ascii	"g0_ypos\000"
 8096      706F7300 
 8097              	.LASF99:
 8098 054d 72665F63 		.ascii	"rf_char\000"
 8098      68617200 
 8099              	.LASF187:
 8100 0555 666F6F64 		.ascii	"food_list\000"
 8100      5F6C6973 
 8100      7400
 8101              	.LASF142:
 8102 055f 42494E5F 		.ascii	"BIN_ENABLED\000"
 8102      454E4142 
 8102      4C454400 
 8103              	.LASF105:
 8104 056b 72696768 		.ascii	"rightSpeed\000"
 8104      74537065 
 8104      656400
 8105              	.LASF127:
 8106 0576 74735F73 		.ascii	"ts_speed\000"
 8106      70656564 
 8106      00
 8107              	.LASF17:
 8108 057f 75696E74 		.ascii	"uint32\000"
 8108      333200
 8109              	.LASF194:
 8110 0586 696E7374 		.ascii	"instructions\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 172


 8110      72756374 
 8110      696F6E73 
 8110      00
 8111              	.LASF82:
 8112 0593 636F756E 		.ascii	"countsRight\000"
 8112      74735269 
 8112      67687400 
 8113              	.LASF201:
 8114 059f 64617461 		.ascii	"data_main\000"
 8114      5F6D6169 
 8114      6E00
 8115              	.LASF115:
 8116 05a9 636F6E76 		.ascii	"converted_val\000"
 8116      65727465 
 8116      645F7661 
 8116      6C00
 8117              	.LASF189:
 8118 05b7 73746172 		.ascii	"start\000"
 8118      7400
 8119              	.LASF41:
 8120 05bd 72737369 		.ascii	"rssi\000"
 8120      00
 8121              	.LASF110:
 8122 05c2 74726163 		.ascii	"trackLine\000"
 8122      6B4C696E 
 8122      6500
 8123              	.LASF49:
 8124 05cc 67305F64 		.ascii	"g0_direction\000"
 8124      69726563 
 8124      74696F6E 
 8124      00
 8125              	.LASF139:
 8126 05d9 666C6167 		.ascii	"flag_receive_ADC\000"
 8126      5F726563 
 8126      65697665 
 8126      5F414443 
 8126      00
 8127              	.LASF26:
 8128 05ea 53544F50 		.ascii	"STOPPED\000"
 8128      50454400 
 8129              	.LASF100:
 8130 05f2 42545F72 		.ascii	"BT_rxInt\000"
 8130      78496E74 
 8130      00
 8131              	.LASF22:
 8132 05fb 6C6F6E67 		.ascii	"long double\000"
 8132      20646F75 
 8132      626C6500 
 8133              	.LASF64:
 8134 0607 6973725F 		.ascii	"isr_adcTimer\000"
 8134      61646354 
 8134      696D6572 
 8134      00
 8135              	.LASF153:
 8136 0614 6C656674 		.ascii	"left_duty_cycle\000"
 8136      5F647574 
 8136      795F6379 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 173


 8136      636C6500 
 8137              	.LASF65:
 8138 0624 6973725F 		.ascii	"isr_deadzone\000"
 8138      64656164 
 8138      7A6F6E65 
 8138      00
 8139              	.LASF131:
 8140 0631 666C6167 		.ascii	"flag_ts_speed\000"
 8140      5F74735F 
 8140      73706565 
 8140      6400
 8141              	.LASF136:
 8142 063f 64617461 		.ascii	"dataready_flag\000"
 8142      72656164 
 8142      795F666C 
 8142      616700
 8143              	.LASF165:
 8144 064e 696E6974 		.ascii	"initial_y_pos\000"
 8144      69616C5F 
 8144      795F706F 
 8144      7300
 8145              	.LASF133:
 8146 065c 666C6167 		.ascii	"flag_rx\000"
 8146      5F727800 
 8147              	.LASF2:
 8148 0664 73686F72 		.ascii	"short int\000"
 8148      7420696E 
 8148      7400
 8149              	.LASF140:
 8150 066e 6164635F 		.ascii	"adc_result\000"
 8150      72657375 
 8150      6C7400
 8151              	.LASF92:
 8152 0679 696E6974 		.ascii	"initTurnU\000"
 8152      5475726E 
 8152      5500
 8153              	.LASF144:
 8154 0683 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 8154      5F63616C 
 8154      635F7768 
 8154      65656C73 
 8154      70656564 
 8155              	.LASF4:
 8156 0698 6C6F6E67 		.ascii	"long int\000"
 8156      20696E74 
 8156      00
 8157              	.LASF91:
 8158 06a1 696E6974 		.ascii	"initTurnRight\000"
 8158      5475726E 
 8158      52696768 
 8158      7400
 8159              	.LASF35:
 8160 06af 555F5452 		.ascii	"U_TRACK\000"
 8160      41434B00 
 8161              	.LASF124:
 8162 06b7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8162      52784275 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 174


 8162      66666572 
 8162      00
 8163              	.LASF118:
 8164 06c4 7072696E 		.ascii	"printString\000"
 8164      74537472 
 8164      696E6700 
 8165              	.LASF98:
 8166 06d0 7278496E 		.ascii	"rxInt\000"
 8166      7400
 8167              	.LASF126:
 8168 06d6 74735F75 		.ascii	"ts_update\000"
 8168      70646174 
 8168      6500
 8169              	.LASF33:
 8170 06e0 4E4F5F54 		.ascii	"NO_TRACK\000"
 8170      5241434B 
 8170      00
 8171              	.LASF151:
 8172 06e9 64656164 		.ascii	"deadzone\000"
 8172      7A6F6E65 
 8172      00
 8173              	.LASF155:
 8174 06f2 6C656674 		.ascii	"leftSpeedLimit\000"
 8174      53706565 
 8174      644C696D 
 8174      697400
 8175              	.LASF40:
 8176 0701 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8176      54524156 
 8176      45525345 
 8176      00
 8177              	.LASF29:
 8178 070e 54524143 		.ascii	"TRACKING_SOFT\000"
 8178      4B494E47 
 8178      5F534F46 
 8178      5400
 8179              	.LASF161:
 8180 071c 6F766572 		.ascii	"overshot_target\000"
 8180      73686F74 
 8180      5F746172 
 8180      67657400 
 8181              	.LASF79:
 8182 072c 6C656674 		.ascii	"left\000"
 8182      00
 8183              	.LASF158:
 8184 0731 61636375 		.ascii	"accum_dist\000"
 8184      6D5F6469 
 8184      737400
 8185              	.LASF121:
 8186 073c 75736250 		.ascii	"usbPutString\000"
 8186      75745374 
 8186      72696E67 
 8186      00
 8187              	.LASF87:
 8188 0749 7475726E 		.ascii	"turnRight\000"
 8188      52696768 
 8188      7400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 175


 8189              	.LASF51:
 8190 0753 67315F79 		.ascii	"g1_ypos\000"
 8190      706F7300 
 8191              	.LASF59:
 8192 075b 6164635F 		.ascii	"adc_isr\000"
 8192      69737200 
 8193              	.LASF119:
 8194 0763 72656164 		.ascii	"readFrontSensors\000"
 8194      46726F6E 
 8194      7453656E 
 8194      736F7273 
 8194      00
 8195              	.LASF162:
 8196 0774 71756164 		.ascii	"quad_per_cm\000"
 8196      5F706572 
 8196      5F636D00 
 8197              	.LASF157:
 8198 0780 74617267 		.ascii	"target_distance_cm\000"
 8198      65745F64 
 8198      69737461 
 8198      6E63655F 
 8198      636D00
 8199              	.LASF11:
 8200 0793 73697A65 		.ascii	"sizetype\000"
 8200      74797065 
 8200      00
 8201              	.LASF7:
 8202 079c 6C6F6E67 		.ascii	"long unsigned int\000"
 8202      20756E73 
 8202      69676E65 
 8202      6420696E 
 8202      7400
 8203              	.LASF72:
 8204 07ae 62797465 		.ascii	"byte_packet\000"
 8204      5F706163 
 8204      6B657400 
 8205              	.LASF13:
 8206 07ba 696E7433 		.ascii	"int32_t\000"
 8206      325F7400 
 8207              	.LASF183:
 8208 07c2 7061636B 		.ascii	"packet\000"
 8208      657400
 8209              	.LASF195:
 8210 07c9 696E7374 		.ascii	"instructionLength\000"
 8210      72756374 
 8210      696F6E4C 
 8210      656E6774 
 8210      6800
 8211              	.LASF169:
 8212 07db 6C656674 		.ascii	"leftOn\000"
 8212      4F6E00
 8213              	.LASF43:
 8214 07e2 726F626F 		.ascii	"robot_xpos\000"
 8214      745F7870 
 8214      6F7300
 8215              	.LASF85:
 8216 07ed 6272616B 		.ascii	"brakeMotor\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 176


 8216      654D6F74 
 8216      6F7200
 8217              	.LASF193:
 8218 07f8 666F6F64 		.ascii	"food_length\000"
 8218      5F6C656E 
 8218      67746800 
 8219              	.LASF175:
 8220 0804 656E7472 		.ascii	"entry\000"
 8220      7900
 8221              	.LASF1:
 8222 080a 756E7369 		.ascii	"unsigned char\000"
 8222      676E6564 
 8222      20636861 
 8222      7200
 8223              	.LASF6:
 8224 0818 5F5F7569 		.ascii	"__uint32_t\000"
 8224      6E743332 
 8224      5F7400
 8225              	.LASF174:
 8226 0823 6C696E65 		.ascii	"line\000"
 8226      00
 8227              	.LASF160:
 8228 0828 72656163 		.ascii	"reached_target\000"
 8228      6865645F 
 8228      74617267 
 8228      657400
 8229              	.LASF62:
 8230 0837 53746F70 		.ascii	"Stop_on_line\000"
 8230      5F6F6E5F 
 8230      6C696E65 
 8230      00
 8231              	.LASF125:
 8232 0844 74735F65 		.ascii	"ts_enc\000"
 8232      6E6300
 8233              	.LASF166:
 8234 084b 6272616B 		.ascii	"brakeFlag\000"
 8234      65466C61 
 8234      6700
 8235              	.LASF132:
 8236 0855 666C6167 		.ascii	"flag_ts_display\000"
 8236      5F74735F 
 8236      64697370 
 8236      6C617900 
 8237              	.LASF31:
 8238 0865 73746174 		.ascii	"state\000"
 8238      6500
 8239              	.LASF77:
 8240 086b 72657665 		.ascii	"reverseDirection\000"
 8240      72736544 
 8240      69726563 
 8240      74696F6E 
 8240      00
 8241              	.LASF83:
 8242 087c 6272616B 		.ascii	"brakeLeft\000"
 8242      654C6566 
 8242      7400
 8243              	.LASF173:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 177


 8244 0886 64697370 		.ascii	"displaystring\000"
 8244      6C617973 
 8244      7472696E 
 8244      6700
 8245              	.LASF147:
 8246 0894 6C617374 		.ascii	"last_quad_count1\000"
 8246      5F717561 
 8246      645F636F 
 8246      756E7431 
 8246      00
 8247              	.LASF148:
 8248 08a5 6C617374 		.ascii	"last_quad_count2\000"
 8248      5F717561 
 8248      645F636F 
 8248      756E7432 
 8248      00
 8249              	.LASF190:
 8250 08b6 64657374 		.ascii	"destination\000"
 8250      696E6174 
 8250      696F6E00 
 8251              	.LASF122:
 8252 08c2 75736250 		.ascii	"usbPutChar\000"
 8252      75744368 
 8252      617200
 8253              	.LASF0:
 8254 08cd 7369676E 		.ascii	"signed char\000"
 8254      65642063 
 8254      68617200 
 8255              	.LASF3:
 8256 08d9 73686F72 		.ascii	"short unsigned int\000"
 8256      7420756E 
 8256      7369676E 
 8256      65642069 
 8256      6E7400
 8257              	.LASF45:
 8258 08ec 726F626F 		.ascii	"robot_orientation\000"
 8258      745F6F72 
 8258      69656E74 
 8258      6174696F 
 8258      6E00
 8259              	.LASF37:
 8260 08fe 51554144 		.ascii	"QUAD_STOP\000"
 8260      5F53544F 
 8260      5000
 8261              	.LASF67:
 8262 0908 6D61696E 		.ascii	"main\000"
 8262      00
 8263              	.LASF58:
 8264 090d 42545F74 		.ascii	"BT_txInt\000"
 8264      78496E74 
 8264      00
 8265              	.LASF109:
 8266 0916 6E657874 		.ascii	"nextSpeed\000"
 8266      53706565 
 8266      6400
 8267              	.LASF15:
 8268 0920 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 178


 8268      3800
 8269              	.LASF21:
 8270 0926 646F7562 		.ascii	"double\000"
 8270      6C6500
 8271              	.LASF154:
 8272 092d 72696768 		.ascii	"right_duty_cycle\000"
 8272      745F6475 
 8272      74795F63 
 8272      79636C65 
 8272      00
 8273              	.LASF38:
 8274 093e 52465F53 		.ascii	"RF_STOP\000"
 8274      544F5000 
 8275              	.LASF76:
 8276 0946 68616E64 		.ascii	"handle_rx_binary\000"
 8276      6C655F72 
 8276      785F6269 
 8276      6E617279 
 8276      00
 8277              	.LASF117:
 8278 0957 7072696E 		.ascii	"print_RF\000"
 8278      745F5246 
 8278      00
 8279              	.LASF30:
 8280 0960 55545552 		.ascii	"UTURN\000"
 8280      4E00
 8281              	.LASF46:
 8282 0966 67305F78 		.ascii	"g0_xpos\000"
 8282      706F7300 
 8283              	.LASF107:
 8284 096e 7363616C 		.ascii	"scalingRight\000"
 8284      696E6752 
 8284      69676874 
 8284      00
 8285              	.LASF135:
 8286 097b 666C6167 		.ascii	"flag_KB_string\000"
 8286      5F4B425F 
 8286      73747269 
 8286      6E6700
 8287              	.LASF52:
 8288 098a 67315F73 		.ascii	"g1_speed\000"
 8288      70656564 
 8288      00
 8289              	.LASF199:
 8290 0993 2E5C6D61 		.ascii	".\\main.c\000"
 8290      696E2E63 
 8290      00
 8291              	.LASF164:
 8292 099c 696E6974 		.ascii	"initial_x_pos\000"
 8292      69616C5F 
 8292      785F706F 
 8292      7300
 8293              	.LASF84:
 8294 09aa 6272616B 		.ascii	"brakeRight\000"
 8294      65526967 
 8294      687400
 8295              	.LASF96:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccPFyOJb.s 			page 179


 8296 09b5 696E6974 		.ascii	"initTrackU\000"
 8296      54726163 
 8296      6B5500
 8297              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
