ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	quad_per_cm
 220              		.data
 221              		.align	2
 222              		.type	quad_per_cm, %object
 223              		.size	quad_per_cm, 4
 224              	quad_per_cm:
 225 0004 F0A73241 		.word	1093838832
 226              		.global	initial_pos_valid
 227              		.bss
 228              		.type	initial_pos_valid, %object
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 5


 229              		.size	initial_pos_valid, 1
 230              	initial_pos_valid:
 231 0034 00       		.space	1
 232              		.global	initial_x_pos
 233 0035 00       		.align	1
 234              		.type	initial_x_pos, %object
 235              		.size	initial_x_pos, 2
 236              	initial_x_pos:
 237 0036 0000     		.space	2
 238              		.global	initial_y_pos
 239              		.align	1
 240              		.type	initial_y_pos, %object
 241              		.size	initial_y_pos, 2
 242              	initial_y_pos:
 243 0038 0000     		.space	2
 244              		.comm	brakeFlag,1,1
 245              		.global	portOpen
 246              		.data
 247              		.type	portOpen, %object
 248              		.size	portOpen, 1
 249              	portOpen:
 250 0008 01       		.byte	1
 251              		.comm	prevVoltage,2,2
 252              		.comm	prevVoltage2,2,2
 253              		.global	displaystring
 254 0009 000000   		.align	2
 255              		.type	displaystring, %object
 256              		.size	displaystring, 64
 257              	displaystring:
 258 000c 43533330 		.ascii	"CS301 2016\012\000"
 258      31203230 
 258      31360A00 
 259 0018 00000000 		.space	52
 259      00000000 
 259      00000000 
 259      00000000 
 259      00000000 
 260              		.comm	line,64,4
 261              		.comm	entry,64,4
 262              		.comm	usbBuffer,64,4
 263              		.comm	buffer_state,32,4
 264              		.comm	system_state,32,4
 265              		.global	prev_movement_state
 266              		.type	prev_movement_state, %object
 267              		.size	prev_movement_state, 1
 268              	prev_movement_state:
 269 004c 03       		.byte	3
 270              		.global	movement_state
 271              		.type	movement_state, %object
 272              		.size	movement_state, 1
 273              	movement_state:
 274 004d 03       		.byte	3
 275              		.global	track_mode
 276              		.bss
 277              		.type	track_mode, %object
 278              		.size	track_mode, 1
 279              	track_mode:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 6


 280 003a 00       		.space	1
 281              		.global	byteCount
 282              		.type	byteCount, %object
 283              		.size	byteCount, 1
 284              	byteCount:
 285 003b 00       		.space	1
 286              		.comm	packet,2,4
 287              		.global	speed
 288              		.data
 289 004e 0000     		.align	3
 290              		.type	speed, %object
 291              		.size	speed, 8
 292              	speed:
 293 0050 00000000 		.word	0
 294 0054 00003040 		.word	1076887552
 295              		.comm	tracked_direction,1,1
 296              		.global	instructions
 297              		.bss
 298              		.align	2
 299              		.type	instructions, %object
 300              		.size	instructions, 800
 301              	instructions:
 302 003c 00000000 		.space	800
 302      00000000 
 302      00000000 
 302      00000000 
 302      00000000 
 303              		.global	instructionCount
 304              		.align	1
 305              		.type	instructionCount, %object
 306              		.size	instructionCount, 2
 307              	instructionCount:
 308 035c 0000     		.space	2
 309              		.global	sensorsDisabled
 310              		.type	sensorsDisabled, %object
 311              		.size	sensorsDisabled, 1
 312              	sensorsDisabled:
 313 035e 00       		.space	1
 314              		.global	robot_direction
 315              		.data
 316              		.type	robot_direction, %object
 317              		.size	robot_direction, 1
 318              	robot_direction:
 319 0058 04       		.byte	4
 320              		.global	path
 321              		.bss
 322 035f 00       		.align	2
 323              		.type	path, %object
 324              		.size	path, 2400
 325              	path:
 326 0360 00000000 		.space	2400
 326      00000000 
 326      00000000 
 326      00000000 
 326      00000000 
 327              		.global	start
 328              		.data
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 7


 329 0059 000000   		.align	2
 330              		.type	start, %object
 331              		.size	start, 2
 332              	start:
 333 005c 01       		.byte	1
 334 005d 01       		.byte	1
 335              		.global	destination
 336 005e 0000     		.align	2
 337              		.type	destination, %object
 338              		.size	destination, 2
 339              	destination:
 340 0060 0D       		.byte	13
 341 0061 11       		.byte	17
 342              		.global	map
 343 0062 0000     		.align	2
 344              		.type	map, %object
 345              		.size	map, 285
 346              	map:
 347 0064 01       		.byte	1
 348 0065 01       		.byte	1
 349 0066 01       		.byte	1
 350 0067 01       		.byte	1
 351 0068 01       		.byte	1
 352 0069 01       		.byte	1
 353 006a 01       		.byte	1
 354 006b 01       		.byte	1
 355 006c 01       		.byte	1
 356 006d 01       		.byte	1
 357 006e 01       		.byte	1
 358 006f 01       		.byte	1
 359 0070 01       		.byte	1
 360 0071 01       		.byte	1
 361 0072 01       		.byte	1
 362 0073 01       		.byte	1
 363 0074 01       		.byte	1
 364 0075 01       		.byte	1
 365 0076 01       		.byte	1
 366 0077 01       		.byte	1
 367 0078 00       		.byte	0
 368 0079 00       		.byte	0
 369 007a 00       		.byte	0
 370 007b 00       		.byte	0
 371 007c 00       		.byte	0
 372 007d 01       		.byte	1
 373 007e 00       		.byte	0
 374 007f 01       		.byte	1
 375 0080 00       		.byte	0
 376 0081 00       		.byte	0
 377 0082 00       		.byte	0
 378 0083 00       		.byte	0
 379 0084 00       		.byte	0
 380 0085 00       		.byte	0
 381 0086 00       		.byte	0
 382 0087 00       		.byte	0
 383 0088 00       		.byte	0
 384 0089 01       		.byte	1
 385 008a 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 8


 386 008b 01       		.byte	1
 387 008c 01       		.byte	1
 388 008d 01       		.byte	1
 389 008e 01       		.byte	1
 390 008f 00       		.byte	0
 391 0090 01       		.byte	1
 392 0091 00       		.byte	0
 393 0092 01       		.byte	1
 394 0093 00       		.byte	0
 395 0094 01       		.byte	1
 396 0095 00       		.byte	0
 397 0096 01       		.byte	1
 398 0097 01       		.byte	1
 399 0098 01       		.byte	1
 400 0099 01       		.byte	1
 401 009a 01       		.byte	1
 402 009b 00       		.byte	0
 403 009c 01       		.byte	1
 404 009d 01       		.byte	1
 405 009e 00       		.byte	0
 406 009f 00       		.byte	0
 407 00a0 00       		.byte	0
 408 00a1 01       		.byte	1
 409 00a2 00       		.byte	0
 410 00a3 01       		.byte	1
 411 00a4 00       		.byte	0
 412 00a5 00       		.byte	0
 413 00a6 00       		.byte	0
 414 00a7 01       		.byte	1
 415 00a8 00       		.byte	0
 416 00a9 00       		.byte	0
 417 00aa 00       		.byte	0
 418 00ab 00       		.byte	0
 419 00ac 00       		.byte	0
 420 00ad 01       		.byte	1
 421 00ae 00       		.byte	0
 422 00af 01       		.byte	1
 423 00b0 01       		.byte	1
 424 00b1 00       		.byte	0
 425 00b2 01       		.byte	1
 426 00b3 00       		.byte	0
 427 00b4 01       		.byte	1
 428 00b5 00       		.byte	0
 429 00b6 01       		.byte	1
 430 00b7 00       		.byte	0
 431 00b8 01       		.byte	1
 432 00b9 01       		.byte	1
 433 00ba 01       		.byte	1
 434 00bb 01       		.byte	1
 435 00bc 01       		.byte	1
 436 00bd 01       		.byte	1
 437 00be 01       		.byte	1
 438 00bf 00       		.byte	0
 439 00c0 01       		.byte	1
 440 00c1 00       		.byte	0
 441 00c2 01       		.byte	1
 442 00c3 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 9


 443 00c4 00       		.byte	0
 444 00c5 01       		.byte	1
 445 00c6 00       		.byte	0
 446 00c7 00       		.byte	0
 447 00c8 00       		.byte	0
 448 00c9 00       		.byte	0
 449 00ca 00       		.byte	0
 450 00cb 00       		.byte	0
 451 00cc 00       		.byte	0
 452 00cd 00       		.byte	0
 453 00ce 00       		.byte	0
 454 00cf 00       		.byte	0
 455 00d0 00       		.byte	0
 456 00d1 01       		.byte	1
 457 00d2 00       		.byte	0
 458 00d3 01       		.byte	1
 459 00d4 00       		.byte	0
 460 00d5 01       		.byte	1
 461 00d6 01       		.byte	1
 462 00d7 00       		.byte	0
 463 00d8 01       		.byte	1
 464 00d9 01       		.byte	1
 465 00da 01       		.byte	1
 466 00db 01       		.byte	1
 467 00dc 01       		.byte	1
 468 00dd 01       		.byte	1
 469 00de 01       		.byte	1
 470 00df 01       		.byte	1
 471 00e0 01       		.byte	1
 472 00e1 00       		.byte	0
 473 00e2 01       		.byte	1
 474 00e3 00       		.byte	0
 475 00e4 01       		.byte	1
 476 00e5 00       		.byte	0
 477 00e6 01       		.byte	1
 478 00e7 01       		.byte	1
 479 00e8 01       		.byte	1
 480 00e9 01       		.byte	1
 481 00ea 00       		.byte	0
 482 00eb 00       		.byte	0
 483 00ec 00       		.byte	0
 484 00ed 00       		.byte	0
 485 00ee 00       		.byte	0
 486 00ef 00       		.byte	0
 487 00f0 00       		.byte	0
 488 00f1 00       		.byte	0
 489 00f2 00       		.byte	0
 490 00f3 00       		.byte	0
 491 00f4 00       		.byte	0
 492 00f5 01       		.byte	1
 493 00f6 00       		.byte	0
 494 00f7 01       		.byte	1
 495 00f8 00       		.byte	0
 496 00f9 00       		.byte	0
 497 00fa 00       		.byte	0
 498 00fb 01       		.byte	1
 499 00fc 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 10


 500 00fd 01       		.byte	1
 501 00fe 01       		.byte	1
 502 00ff 01       		.byte	1
 503 0100 01       		.byte	1
 504 0101 01       		.byte	1
 505 0102 01       		.byte	1
 506 0103 00       		.byte	0
 507 0104 01       		.byte	1
 508 0105 01       		.byte	1
 509 0106 01       		.byte	1
 510 0107 01       		.byte	1
 511 0108 01       		.byte	1
 512 0109 00       		.byte	0
 513 010a 01       		.byte	1
 514 010b 01       		.byte	1
 515 010c 01       		.byte	1
 516 010d 00       		.byte	0
 517 010e 01       		.byte	1
 518 010f 01       		.byte	1
 519 0110 00       		.byte	0
 520 0111 00       		.byte	0
 521 0112 00       		.byte	0
 522 0113 00       		.byte	0
 523 0114 00       		.byte	0
 524 0115 00       		.byte	0
 525 0116 00       		.byte	0
 526 0117 00       		.byte	0
 527 0118 00       		.byte	0
 528 0119 00       		.byte	0
 529 011a 00       		.byte	0
 530 011b 01       		.byte	1
 531 011c 00       		.byte	0
 532 011d 00       		.byte	0
 533 011e 00       		.byte	0
 534 011f 01       		.byte	1
 535 0120 00       		.byte	0
 536 0121 01       		.byte	1
 537 0122 01       		.byte	1
 538 0123 00       		.byte	0
 539 0124 01       		.byte	1
 540 0125 01       		.byte	1
 541 0126 01       		.byte	1
 542 0127 01       		.byte	1
 543 0128 01       		.byte	1
 544 0129 00       		.byte	0
 545 012a 01       		.byte	1
 546 012b 01       		.byte	1
 547 012c 01       		.byte	1
 548 012d 00       		.byte	0
 549 012e 01       		.byte	1
 550 012f 00       		.byte	0
 551 0130 01       		.byte	1
 552 0131 00       		.byte	0
 553 0132 01       		.byte	1
 554 0133 00       		.byte	0
 555 0134 01       		.byte	1
 556 0135 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 11


 557 0136 00       		.byte	0
 558 0137 00       		.byte	0
 559 0138 00       		.byte	0
 560 0139 00       		.byte	0
 561 013a 00       		.byte	0
 562 013b 01       		.byte	1
 563 013c 00       		.byte	0
 564 013d 00       		.byte	0
 565 013e 00       		.byte	0
 566 013f 01       		.byte	1
 567 0140 00       		.byte	0
 568 0141 00       		.byte	0
 569 0142 00       		.byte	0
 570 0143 01       		.byte	1
 571 0144 00       		.byte	0
 572 0145 00       		.byte	0
 573 0146 00       		.byte	0
 574 0147 01       		.byte	1
 575 0148 01       		.byte	1
 576 0149 00       		.byte	0
 577 014a 01       		.byte	1
 578 014b 01       		.byte	1
 579 014c 01       		.byte	1
 580 014d 00       		.byte	0
 581 014e 01       		.byte	1
 582 014f 01       		.byte	1
 583 0150 01       		.byte	1
 584 0151 00       		.byte	0
 585 0152 01       		.byte	1
 586 0153 01       		.byte	1
 587 0154 01       		.byte	1
 588 0155 00       		.byte	0
 589 0156 01       		.byte	1
 590 0157 01       		.byte	1
 591 0158 01       		.byte	1
 592 0159 00       		.byte	0
 593 015a 01       		.byte	1
 594 015b 01       		.byte	1
 595 015c 00       		.byte	0
 596 015d 00       		.byte	0
 597 015e 00       		.byte	0
 598 015f 01       		.byte	1
 599 0160 00       		.byte	0
 600 0161 00       		.byte	0
 601 0162 00       		.byte	0
 602 0163 00       		.byte	0
 603 0164 00       		.byte	0
 604 0165 00       		.byte	0
 605 0166 00       		.byte	0
 606 0167 01       		.byte	1
 607 0168 00       		.byte	0
 608 0169 00       		.byte	0
 609 016a 00       		.byte	0
 610 016b 00       		.byte	0
 611 016c 00       		.byte	0
 612 016d 01       		.byte	1
 613 016e 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 12


 614 016f 01       		.byte	1
 615 0170 01       		.byte	1
 616 0171 01       		.byte	1
 617 0172 01       		.byte	1
 618 0173 01       		.byte	1
 619 0174 01       		.byte	1
 620 0175 01       		.byte	1
 621 0176 01       		.byte	1
 622 0177 01       		.byte	1
 623 0178 01       		.byte	1
 624 0179 01       		.byte	1
 625 017a 01       		.byte	1
 626 017b 01       		.byte	1
 627 017c 01       		.byte	1
 628 017d 01       		.byte	1
 629 017e 01       		.byte	1
 630 017f 01       		.byte	1
 631 0180 01       		.byte	1
 632              		.global	food_list
 633 0181 000000   		.align	2
 634              		.type	food_list, %object
 635              		.size	food_list, 12
 636              	food_list:
 637 0184 05       		.byte	5
 638 0185 0B       		.byte	11
 639 0186 01       		.byte	1
 640 0187 11       		.byte	17
 641 0188 0D       		.byte	13
 642 0189 01       		.byte	1
 643 018a 00000000 		.space	6
 643      0000
 644              		.global	food_length
 645              		.type	food_length, %object
 646              		.size	food_length, 1
 647              	food_length:
 648 0190 03       		.byte	3
 649 0191 00000000 		.section	.text.handle_rx_binary,"ax",%progbits
 649      000000
 650              		.align	2
 651              		.global	handle_rx_binary
 652              		.thumb
 653              		.thumb_func
 654              		.type	handle_rx_binary, %function
 655              	handle_rx_binary:
 656              	.LFB63:
 657              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 13


  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** #include "pathfinder.h"
  34:.\main.c      **** //* ========================================
  35:.\main.c      **** void usbPutString(char *s);
  36:.\main.c      **** void usbPutChar(char c);
  37:.\main.c      **** //void handle_usb();
  38:.\main.c      **** //* ========================================
  39:.\main.c      **** 
  40:.\main.c      **** #define QUAD_RATIO 0.99556
  41:.\main.c      **** 
  42:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  43:.\main.c      **** uint16 instructionCount = 0;
  44:.\main.c      **** uint8 sensorsDisabled = 0;
  45:.\main.c      **** 
  46:.\main.c      **** uint8 robot_direction = 4;
  47:.\main.c      **** 
  48:.\main.c      **** uint8 path[DEFAULT_ARRAY_SIZE][3] = {0};
  49:.\main.c      **** uint8 start[2] = {1, 1};//(y, x) array starts at 0
  50:.\main.c      **** uint8 destination[2] = {13, 17};//(y, x) DON'T HARDCODE THIS
  51:.\main.c      **** 
  52:.\main.c      **** 
  53:.\main.c      **** uint8 map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  54:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  56:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  57:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  58:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  59:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  60:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  61:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  62:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  63:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  64:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  65:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  66:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  67:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  68:.\main.c      **** //first number is the y coord, second is x
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 14


  69:.\main.c      **** //first number is row, second column
  70:.\main.c      **** 
  71:.\main.c      **** //uint8 food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  72:.\main.c      **** uint8 food_list[6][2]= {{5,11}, {1, 17}, {13, 1}};
  73:.\main.c      **** uint8 food_length = 3;
  74:.\main.c      **** 
  75:.\main.c      **** void changeToRF();
  76:.\main.c      **** void changeToBT();
  77:.\main.c      **** 
  78:.\main.c      **** void handle_rx_binary()
  79:.\main.c      **** {
 658              		.loc 1 79 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 32
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 89B0     		sub	sp, sp, #36
 667              		.cfi_def_cfa_offset 40
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
  80:.\main.c      ****     if(flag_rx == 1)
 670              		.loc 1 80 0
 671 0006 524B     		ldr	r3, .L21
 672 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 673 000a 012B     		cmp	r3, #1
 674 000c 40F09A80 		bne	.L1
 675              	.LBB2:
  81:.\main.c      ****     {    
  82:.\main.c      ****         flag_rx = 0;
 676              		.loc 1 82 0
 677 0010 4F4B     		ldr	r3, .L21
 678 0012 0022     		movs	r2, #0
 679 0014 1A70     		strb	r2, [r3]
  83:.\main.c      ****         
  84:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 680              		.loc 1 84 0
 681 0016 4F4B     		ldr	r3, .L21+4
 682 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 683 001a 1B02     		lsls	r3, r3, #8
 684 001c 9AB2     		uxth	r2, r3
 685 001e 4D4B     		ldr	r3, .L21+4
 686 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 687 0022 9BB2     		uxth	r3, r3
 688 0024 1343     		orrs	r3, r3, r2
 689 0026 9BB2     		uxth	r3, r3
 690 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  85:.\main.c      ****         char byte_packet[12];
  86:.\main.c      ****         char string_packet[12];
  87:.\main.c      ****         
  88:.\main.c      ****         switch(byteCount)
 691              		.loc 1 88 0
 692 002a 4B4B     		ldr	r3, .L21+8
 693 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 694 002e 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 15


 695 0030 1E2B     		cmp	r3, #30
 696 0032 00F28780 		bhi	.L1
 697 0036 01A2     		adr	r2, .L5
 698 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 699              		.p2align 2
 700              	.L5:
 701 003c B9000000 		.word	.L4+1
 702 0040 45010000 		.word	.L1+1
 703 0044 CD000000 		.word	.L6+1
 704 0048 45010000 		.word	.L1+1
 705 004c D5000000 		.word	.L7+1
 706 0050 45010000 		.word	.L1+1
 707 0054 DD000000 		.word	.L8+1
 708 0058 45010000 		.word	.L1+1
 709 005c E5000000 		.word	.L9+1
 710 0060 45010000 		.word	.L1+1
 711 0064 ED000000 		.word	.L10+1
 712 0068 45010000 		.word	.L1+1
 713 006c F5000000 		.word	.L11+1
 714 0070 45010000 		.word	.L1+1
 715 0074 FD000000 		.word	.L12+1
 716 0078 45010000 		.word	.L1+1
 717 007c 05010000 		.word	.L13+1
 718 0080 45010000 		.word	.L1+1
 719 0084 0D010000 		.word	.L14+1
 720 0088 45010000 		.word	.L1+1
 721 008c 15010000 		.word	.L15+1
 722 0090 45010000 		.word	.L1+1
 723 0094 1D010000 		.word	.L16+1
 724 0098 45010000 		.word	.L1+1
 725 009c 25010000 		.word	.L17+1
 726 00a0 45010000 		.word	.L1+1
 727 00a4 2D010000 		.word	.L18+1
 728 00a8 45010000 		.word	.L1+1
 729 00ac 35010000 		.word	.L19+1
 730 00b0 45010000 		.word	.L1+1
 731 00b4 3D010000 		.word	.L20+1
 732              		.p2align 1
 733              	.L4:
  89:.\main.c      ****         {
  90:.\main.c      ****             case 4:
  91:.\main.c      ****                 buffer_state.rssi = packet[0];
 734              		.loc 1 91 0
 735 00b8 264B     		ldr	r3, .L21+4
 736 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 00bc DAB2     		uxtb	r2, r3
 738 00be 274B     		ldr	r3, .L21+12
 739 00c0 1A70     		strb	r2, [r3]
  92:.\main.c      ****                 buffer_state.index = packet[1];
 740              		.loc 1 92 0
 741 00c2 244B     		ldr	r3, .L21+4
 742 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 743 00c6 254B     		ldr	r3, .L21+12
 744 00c8 5A70     		strb	r2, [r3, #1]
  93:.\main.c      ****             break;
 745              		.loc 1 93 0
 746 00ca 3BE0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 16


 747              	.L6:
  94:.\main.c      ****             case 6:
  95:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 748              		.loc 1 95 0
 749 00cc FA8B     		ldrh	r2, [r7, #30]
 750 00ce 234B     		ldr	r3, .L21+12
 751 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  96:.\main.c      ****             break;
 752              		.loc 1 96 0
 753 00d2 37E0     		b	.L1
 754              	.L7:
  97:.\main.c      ****             case 8:
  98:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 755              		.loc 1 98 0
 756 00d4 FA8B     		ldrh	r2, [r7, #30]
 757 00d6 214B     		ldr	r3, .L21+12
 758 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  99:.\main.c      ****             break;
 759              		.loc 1 99 0
 760 00da 33E0     		b	.L1
 761              	.L8:
 100:.\main.c      ****             case 10:
 101:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 762              		.loc 1 101 0
 763 00dc FA8B     		ldrh	r2, [r7, #30]
 764 00de 1F4B     		ldr	r3, .L21+12
 765 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 102:.\main.c      ****             break;
 766              		.loc 1 102 0
 767 00e2 2FE0     		b	.L1
 768              	.L9:
 103:.\main.c      ****             case 12:
 104:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 769              		.loc 1 104 0
 770 00e4 FA8B     		ldrh	r2, [r7, #30]
 771 00e6 1D4B     		ldr	r3, .L21+12
 772 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 105:.\main.c      ****             break;
 773              		.loc 1 105 0
 774 00ea 2BE0     		b	.L1
 775              	.L10:
 106:.\main.c      ****             case 14:
 107:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 776              		.loc 1 107 0
 777 00ec FA8B     		ldrh	r2, [r7, #30]
 778 00ee 1B4B     		ldr	r3, .L21+12
 779 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 108:.\main.c      ****             break;
 780              		.loc 1 108 0
 781 00f2 27E0     		b	.L1
 782              	.L11:
 109:.\main.c      ****             case 16:
 110:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 783              		.loc 1 110 0
 784 00f4 FA8B     		ldrh	r2, [r7, #30]
 785 00f6 194B     		ldr	r3, .L21+12
 786 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 17


 111:.\main.c      ****             break;
 787              		.loc 1 111 0
 788 00fa 23E0     		b	.L1
 789              	.L12:
 112:.\main.c      ****             case 18:
 113:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 790              		.loc 1 113 0
 791 00fc FA8B     		ldrh	r2, [r7, #30]
 792 00fe 174B     		ldr	r3, .L21+12
 793 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 114:.\main.c      ****             break;
 794              		.loc 1 114 0
 795 0102 1FE0     		b	.L1
 796              	.L13:
 115:.\main.c      ****             case 20:
 116:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 797              		.loc 1 116 0
 798 0104 FA8B     		ldrh	r2, [r7, #30]
 799 0106 154B     		ldr	r3, .L21+12
 800 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 117:.\main.c      ****             break;
 801              		.loc 1 117 0
 802 010a 1BE0     		b	.L1
 803              	.L14:
 118:.\main.c      ****             case 22:
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 804              		.loc 1 119 0
 805 010c FA8B     		ldrh	r2, [r7, #30]
 806 010e 134B     		ldr	r3, .L21+12
 807 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 808              		.loc 1 120 0
 809 0112 17E0     		b	.L1
 810              	.L15:
 121:.\main.c      ****             case 24:
 122:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 811              		.loc 1 122 0
 812 0114 FA8B     		ldrh	r2, [r7, #30]
 813 0116 114B     		ldr	r3, .L21+12
 814 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 123:.\main.c      ****             break;
 815              		.loc 1 123 0
 816 011a 13E0     		b	.L1
 817              	.L16:
 124:.\main.c      ****             case 26:
 125:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 818              		.loc 1 125 0
 819 011c FA8B     		ldrh	r2, [r7, #30]
 820 011e 0F4B     		ldr	r3, .L21+12
 821 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 126:.\main.c      ****             break;
 822              		.loc 1 126 0
 823 0122 0FE0     		b	.L1
 824              	.L17:
 127:.\main.c      ****             case 28:
 128:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 825              		.loc 1 128 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 18


 826 0124 FA8B     		ldrh	r2, [r7, #30]
 827 0126 0D4B     		ldr	r3, .L21+12
 828 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 129:.\main.c      ****             break;
 829              		.loc 1 129 0
 830 012a 0BE0     		b	.L1
 831              	.L18:
 130:.\main.c      ****             case 30:
 131:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 832              		.loc 1 131 0
 833 012c FA8B     		ldrh	r2, [r7, #30]
 834 012e 0B4B     		ldr	r3, .L21+12
 835 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 132:.\main.c      ****             break;
 836              		.loc 1 132 0
 837 0132 07E0     		b	.L1
 838              	.L19:
 133:.\main.c      ****             case 32:
 134:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 839              		.loc 1 134 0
 840 0134 FA8B     		ldrh	r2, [r7, #30]
 841 0136 094B     		ldr	r3, .L21+12
 842 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 135:.\main.c      ****             break;
 843              		.loc 1 135 0
 844 013a 03E0     		b	.L1
 845              	.L20:
 136:.\main.c      ****             case 34:
 137:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 846              		.loc 1 137 0
 847 013c FA8B     		ldrh	r2, [r7, #30]
 848 013e 074B     		ldr	r3, .L21+12
 849 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 138:.\main.c      ****             break;
 850              		.loc 1 138 0
 851 0142 00BF     		nop
 852              	.L1:
 853              	.LBE2:
 139:.\main.c      ****         }
 140:.\main.c      ****     }
 141:.\main.c      **** }
 854              		.loc 1 141 0
 855 0144 2437     		adds	r7, r7, #36
 856              		.cfi_def_cfa_offset 4
 857 0146 BD46     		mov	sp, r7
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 0148 5DF8047B 		ldr	r7, [sp], #4
 861              		.cfi_restore 7
 862              		.cfi_def_cfa_offset 0
 863 014c 7047     		bx	lr
 864              	.L22:
 865 014e 00BF     		.align	2
 866              	.L21:
 867 0150 00000000 		.word	flag_rx
 868 0154 00000000 		.word	packet
 869 0158 00000000 		.word	byteCount
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 19


 870 015c 00000000 		.word	buffer_state
 871              		.cfi_endproc
 872              	.LFE63:
 873              		.size	handle_rx_binary, .-handle_rx_binary
 874              		.section	.text.setLeftDir,"ax",%progbits
 875              		.align	2
 876              		.global	setLeftDir
 877              		.thumb
 878              		.thumb_func
 879              		.type	setLeftDir, %function
 880              	setLeftDir:
 881              	.LFB64:
 142:.\main.c      **** 
 143:.\main.c      **** void setLeftDir(uint8 dir)
 144:.\main.c      **** {
 882              		.loc 1 144 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 82B0     		sub	sp, sp, #8
 891              		.cfi_def_cfa_offset 16
 892 0004 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 894 0006 0346     		mov	r3, r0
 895 0008 FB71     		strb	r3, [r7, #7]
 145:.\main.c      ****     M2_IN2_Write(dir);
 896              		.loc 1 145 0
 897 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 898 000c 1846     		mov	r0, r3
 899 000e FFF7FEFF 		bl	M2_IN2_Write
 146:.\main.c      **** }
 900              		.loc 1 146 0
 901 0012 0837     		adds	r7, r7, #8
 902              		.cfi_def_cfa_offset 8
 903 0014 BD46     		mov	sp, r7
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 0016 80BD     		pop	{r7, pc}
 907              		.cfi_endproc
 908              	.LFE64:
 909              		.size	setLeftDir, .-setLeftDir
 910              		.section	.text.setRightDir,"ax",%progbits
 911              		.align	2
 912              		.global	setRightDir
 913              		.thumb
 914              		.thumb_func
 915              		.type	setRightDir, %function
 916              	setRightDir:
 917              	.LFB65:
 147:.\main.c      **** 
 148:.\main.c      **** void setRightDir(uint8 dir)
 149:.\main.c      **** {
 918              		.loc 1 149 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 20


 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 8
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 82B0     		sub	sp, sp, #8
 927              		.cfi_def_cfa_offset 16
 928 0004 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 930 0006 0346     		mov	r3, r0
 931 0008 FB71     		strb	r3, [r7, #7]
 150:.\main.c      ****     M1_IN2_Write(dir);
 932              		.loc 1 150 0
 933 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 000c 1846     		mov	r0, r3
 935 000e FFF7FEFF 		bl	M1_IN2_Write
 151:.\main.c      **** }
 936              		.loc 1 151 0
 937 0012 0837     		adds	r7, r7, #8
 938              		.cfi_def_cfa_offset 8
 939 0014 BD46     		mov	sp, r7
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 0016 80BD     		pop	{r7, pc}
 943              		.cfi_endproc
 944              	.LFE65:
 945              		.size	setRightDir, .-setRightDir
 946              		.section	.rodata
 947              		.align	2
 948              	.LC0:
 949 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 949      2025640D 
 949      0A00
 950              		.section	.text.reverseDirection,"ax",%progbits
 951              		.align	2
 952              		.global	reverseDirection
 953              		.thumb
 954              		.thumb_func
 955              		.type	reverseDirection, %function
 956              	reverseDirection:
 957              	.LFB66:
 152:.\main.c      **** 
 153:.\main.c      **** void reverseDirection()
 154:.\main.c      **** {
 958              		.loc 1 154 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 16
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962 0000 80B5     		push	{r7, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 84B0     		sub	sp, sp, #16
 967              		.cfi_def_cfa_offset 24
 968 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 21


 969              		.cfi_def_cfa_register 7
 155:.\main.c      ****     direction = !direction;
 970              		.loc 1 155 0
 971 0006 114B     		ldr	r3, .L26
 972 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 000a 002B     		cmp	r3, #0
 974 000c 0CBF     		ite	eq
 975 000e 0123     		moveq	r3, #1
 976 0010 0023     		movne	r3, #0
 977 0012 DBB2     		uxtb	r3, r3
 978 0014 1A46     		mov	r2, r3
 979 0016 0D4B     		ldr	r3, .L26
 980 0018 1A70     		strb	r2, [r3]
 156:.\main.c      ****     setLeftDir(direction);
 981              		.loc 1 156 0
 982 001a 0C4B     		ldr	r3, .L26
 983 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 001e 1846     		mov	r0, r3
 985 0020 FFF7FEFF 		bl	setLeftDir
 157:.\main.c      ****     setRightDir(direction);
 986              		.loc 1 157 0
 987 0024 094B     		ldr	r3, .L26
 988 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0028 1846     		mov	r0, r3
 990 002a FFF7FEFF 		bl	setRightDir
 158:.\main.c      ****     char mes[16];
 159:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 991              		.loc 1 159 0
 992 002e 074B     		ldr	r3, .L26
 993 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 994 0032 1A46     		mov	r2, r3
 995 0034 3B46     		mov	r3, r7
 996 0036 1846     		mov	r0, r3
 997 0038 0549     		ldr	r1, .L26+4
 998 003a FFF7FEFF 		bl	sprintf
 160:.\main.c      ****     UART_PutString(mes);
 999              		.loc 1 160 0
 1000 003e 3B46     		mov	r3, r7
 1001 0040 1846     		mov	r0, r3
 1002 0042 FFF7FEFF 		bl	UART_PutString
 161:.\main.c      **** }
 1003              		.loc 1 161 0
 1004 0046 1037     		adds	r7, r7, #16
 1005              		.cfi_def_cfa_offset 8
 1006 0048 BD46     		mov	sp, r7
 1007              		.cfi_def_cfa_register 13
 1008              		@ sp needed
 1009 004a 80BD     		pop	{r7, pc}
 1010              	.L27:
 1011              		.align	2
 1012              	.L26:
 1013 004c 00000000 		.word	direction
 1014 0050 00000000 		.word	.LC0
 1015              		.cfi_endproc
 1016              	.LFE66:
 1017              		.size	reverseDirection, .-reverseDirection
 1018              		.global	__aeabi_dcmplt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 22


 1019              		.global	__aeabi_ddiv
 1020              		.global	__aeabi_d2iz
 1021              		.section	.text.setSpeed,"ax",%progbits
 1022              		.align	2
 1023              		.global	setSpeed
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	setSpeed, %function
 1027              	setSpeed:
 1028              	.LFB67:
 162:.\main.c      **** 
 163:.\main.c      **** void setSpeed(double left, double right){
 1029              		.loc 1 163 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 24
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 86B0     		sub	sp, sp, #24
 1038              		.cfi_def_cfa_offset 32
 1039 0004 00AF     		add	r7, sp, #0
 1040              		.cfi_def_cfa_register 7
 1041 0006 C7E90201 		strd	r0, [r7, #8]
 1042 000a C7E90023 		strd	r2, [r7]
 164:.\main.c      ****     if(right < 0.0)
 1043              		.loc 1 164 0
 1044 000e D7E90001 		ldrd	r0, [r7]
 1045 0012 4FF00002 		mov	r2, #0
 1046 0016 4FF00003 		mov	r3, #0
 1047 001a FFF7FEFF 		bl	__aeabi_dcmplt
 1048 001e 0346     		mov	r3, r0
 1049 0020 002B     		cmp	r3, #0
 1050 0022 10D0     		beq	.L37
 165:.\main.c      ****     {
 166:.\main.c      ****         //char mes[16];
 167:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 168:.\main.c      ****        // UART_PutString(mes);
 169:.\main.c      ****         setRightDir(!direction);
 1051              		.loc 1 169 0
 1052 0024 304B     		ldr	r3, .L39+8
 1053 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 0028 002B     		cmp	r3, #0
 1055 002a 0CBF     		ite	eq
 1056 002c 0123     		moveq	r3, #1
 1057 002e 0023     		movne	r3, #0
 1058 0030 DBB2     		uxtb	r3, r3
 1059 0032 1846     		mov	r0, r3
 1060 0034 FFF7FEFF 		bl	setRightDir
 170:.\main.c      ****         right = -right;
 1061              		.loc 1 170 0
 1062 0038 3B68     		ldr	r3, [r7]
 1063 003a 3B60     		str	r3, [r7]
 1064 003c 7B68     		ldr	r3, [r7, #4]
 1065 003e 83F00043 		eor	r3, r3, #-2147483648
 1066 0042 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 23


 1067 0044 04E0     		b	.L31
 1068              	.L37:
 171:.\main.c      ****     }
 172:.\main.c      ****     else setRightDir(direction);
 1069              		.loc 1 172 0
 1070 0046 284B     		ldr	r3, .L39+8
 1071 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 004a 1846     		mov	r0, r3
 1073 004c FFF7FEFF 		bl	setRightDir
 1074              	.L31:
 173:.\main.c      ****     
 174:.\main.c      ****     if(left < 0.0)
 1075              		.loc 1 174 0
 1076 0050 D7E90201 		ldrd	r0, [r7, #8]
 1077 0054 4FF00002 		mov	r2, #0
 1078 0058 4FF00003 		mov	r3, #0
 1079 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1080 0060 0346     		mov	r3, r0
 1081 0062 002B     		cmp	r3, #0
 1082 0064 10D0     		beq	.L38
 175:.\main.c      ****     {
 176:.\main.c      ****        // char mes[16];
 177:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 178:.\main.c      ****         //UART_PutString(mes);
 179:.\main.c      ****         setLeftDir(!direction);
 1083              		.loc 1 179 0
 1084 0066 204B     		ldr	r3, .L39+8
 1085 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 006a 002B     		cmp	r3, #0
 1087 006c 0CBF     		ite	eq
 1088 006e 0123     		moveq	r3, #1
 1089 0070 0023     		movne	r3, #0
 1090 0072 DBB2     		uxtb	r3, r3
 1091 0074 1846     		mov	r0, r3
 1092 0076 FFF7FEFF 		bl	setLeftDir
 180:.\main.c      ****         left = -left;
 1093              		.loc 1 180 0
 1094 007a BB68     		ldr	r3, [r7, #8]
 1095 007c BB60     		str	r3, [r7, #8]
 1096 007e FB68     		ldr	r3, [r7, #12]
 1097 0080 83F00043 		eor	r3, r3, #-2147483648
 1098 0084 FB60     		str	r3, [r7, #12]
 1099 0086 04E0     		b	.L34
 1100              	.L38:
 181:.\main.c      ****     }
 182:.\main.c      ****     else setLeftDir(direction);
 1101              		.loc 1 182 0
 1102 0088 174B     		ldr	r3, .L39+8
 1103 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 008c 1846     		mov	r0, r3
 1105 008e FFF7FEFF 		bl	setLeftDir
 1106              	.L34:
 183:.\main.c      ****     
 184:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 1107              		.loc 1 184 0
 1108 0092 D7E90201 		ldrd	r0, [r7, #8]
 1109 0096 12A3     		adr	r3, .L39
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 24


 1110 0098 D3E90023 		ldrd	r2, [r3]
 1111 009c FFF7FEFF 		bl	__aeabi_ddiv
 1112 00a0 0246     		mov	r2, r0
 1113 00a2 0B46     		mov	r3, r1
 1114 00a4 1046     		mov	r0, r2
 1115 00a6 1946     		mov	r1, r3
 1116 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 1117 00ac 0346     		mov	r3, r0
 1118 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 185:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 1119              		.loc 1 185 0
 1120 00b0 D7E90001 		ldrd	r0, [r7]
 1121 00b4 0AA3     		adr	r3, .L39
 1122 00b6 D3E90023 		ldrd	r2, [r3]
 1123 00ba FFF7FEFF 		bl	__aeabi_ddiv
 1124 00be 0246     		mov	r2, r0
 1125 00c0 0B46     		mov	r3, r1
 1126 00c2 1046     		mov	r0, r2
 1127 00c4 1946     		mov	r1, r3
 1128 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 1129 00ca 0346     		mov	r3, r0
 1130 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 186:.\main.c      ****     
 187:.\main.c      ****     leftSpeedLimit = countsRight;
 1131              		.loc 1 187 0
 1132 00ce 074A     		ldr	r2, .L39+12
 1133 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1134 00d2 1380     		strh	r3, [r2]	@ movhi
 188:.\main.c      ****     rightSpeedLimit = countsLeft;
 1135              		.loc 1 188 0
 1136 00d4 064A     		ldr	r2, .L39+16
 1137 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1138 00d8 1380     		strh	r3, [r2]	@ movhi
 189:.\main.c      **** }
 1139              		.loc 1 189 0
 1140 00da 1837     		adds	r7, r7, #24
 1141              		.cfi_def_cfa_offset 8
 1142 00dc BD46     		mov	sp, r7
 1143              		.cfi_def_cfa_register 13
 1144              		@ sp needed
 1145 00de 80BD     		pop	{r7, pc}
 1146              	.L40:
 1147              		.align	3
 1148              	.L39:
 1149 00e0 969526A5 		.word	-1524197994
 1150 00e4 A0DBEF3F 		.word	1072683936
 1151 00e8 00000000 		.word	direction
 1152 00ec 00000000 		.word	leftSpeedLimit
 1153 00f0 00000000 		.word	rightSpeedLimit
 1154              		.cfi_endproc
 1155              	.LFE67:
 1156              		.size	setSpeed, .-setSpeed
 1157 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 1158              		.align	2
 1159              		.global	brakeLeft
 1160              		.thumb
 1161              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 25


 1162              		.type	brakeLeft, %function
 1163              	brakeLeft:
 1164              	.LFB68:
 190:.\main.c      **** 
 191:.\main.c      **** void brakeLeft()
 192:.\main.c      **** {
 1165              		.loc 1 192 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169 0000 80B5     		push	{r7, lr}
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 00AF     		add	r7, sp, #0
 1174              		.cfi_def_cfa_register 7
 193:.\main.c      ****     PWM_1_WriteCompare(0);
 1175              		.loc 1 193 0
 1176 0004 0020     		movs	r0, #0
 1177 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 194:.\main.c      ****     left_duty_cycle = 0;
 1178              		.loc 1 194 0
 1179 000a 024B     		ldr	r3, .L42
 1180 000c 0022     		movs	r2, #0
 1181 000e 1A80     		strh	r2, [r3]	@ movhi
 195:.\main.c      **** }
 1182              		.loc 1 195 0
 1183 0010 80BD     		pop	{r7, pc}
 1184              	.L43:
 1185 0012 00BF     		.align	2
 1186              	.L42:
 1187 0014 00000000 		.word	left_duty_cycle
 1188              		.cfi_endproc
 1189              	.LFE68:
 1190              		.size	brakeLeft, .-brakeLeft
 1191              		.section	.text.brakeRight,"ax",%progbits
 1192              		.align	2
 1193              		.global	brakeRight
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	brakeRight, %function
 1197              	brakeRight:
 1198              	.LFB69:
 196:.\main.c      **** 
 197:.\main.c      **** void brakeRight()
 198:.\main.c      **** {
 1199              		.loc 1 198 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 199:.\main.c      ****      PWM_2_WriteCompare(0);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 26


 1209              		.loc 1 199 0
 1210 0004 0020     		movs	r0, #0
 1211 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 200:.\main.c      ****      right_duty_cycle = 0;
 1212              		.loc 1 200 0
 1213 000a 024B     		ldr	r3, .L45
 1214 000c 0022     		movs	r2, #0
 1215 000e 1A80     		strh	r2, [r3]	@ movhi
 201:.\main.c      **** }
 1216              		.loc 1 201 0
 1217 0010 80BD     		pop	{r7, pc}
 1218              	.L46:
 1219 0012 00BF     		.align	2
 1220              	.L45:
 1221 0014 00000000 		.word	right_duty_cycle
 1222              		.cfi_endproc
 1223              	.LFE69:
 1224              		.size	brakeRight, .-brakeRight
 1225              		.section	.text.brakeMotor,"ax",%progbits
 1226              		.align	2
 1227              		.global	brakeMotor
 1228              		.thumb
 1229              		.thumb_func
 1230              		.type	brakeMotor, %function
 1231              	brakeMotor:
 1232              	.LFB70:
 202:.\main.c      **** 
 203:.\main.c      **** void brakeMotor(){
 1233              		.loc 1 203 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 1, uses_anonymous_args = 0
 1237 0000 80B5     		push	{r7, lr}
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
 1241 0002 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 204:.\main.c      ****     setSpeed(0, 0);
 1243              		.loc 1 204 0
 1244 0004 4FF00000 		mov	r0, #0
 1245 0008 4FF00001 		mov	r1, #0
 1246 000c 4FF00002 		mov	r2, #0
 1247 0010 4FF00003 		mov	r3, #0
 1248 0014 FFF7FEFF 		bl	setSpeed
 205:.\main.c      ****     brakeLeft();
 1249              		.loc 1 205 0
 1250 0018 FFF7FEFF 		bl	brakeLeft
 206:.\main.c      ****     brakeRight();
 1251              		.loc 1 206 0
 1252 001c FFF7FEFF 		bl	brakeRight
 207:.\main.c      **** }
 1253              		.loc 1 207 0
 1254 0020 80BD     		pop	{r7, pc}
 1255              		.cfi_endproc
 1256              	.LFE70:
 1257              		.size	brakeMotor, .-brakeMotor
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 27


 1258 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 1259              		.align	2
 1260              		.global	driveForwards
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	driveForwards, %function
 1264              	driveForwards:
 1265              	.LFB71:
 208:.\main.c      **** 
 209:.\main.c      **** void driveForwards()
 210:.\main.c      **** {
 1266              		.loc 1 210 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 211:.\main.c      ****     setSpeed(speed, speed);
 1276              		.loc 1 211 0
 1277 0004 044B     		ldr	r3, .L49
 1278 0006 D3E90001 		ldrd	r0, [r3]
 1279 000a 034B     		ldr	r3, .L49
 1280 000c D3E90023 		ldrd	r2, [r3]
 1281 0010 FFF7FEFF 		bl	setSpeed
 212:.\main.c      **** }
 1282              		.loc 1 212 0
 1283 0014 80BD     		pop	{r7, pc}
 1284              	.L50:
 1285 0016 00BF     		.align	2
 1286              	.L49:
 1287 0018 00000000 		.word	speed
 1288              		.cfi_endproc
 1289              	.LFE71:
 1290              		.size	driveForwards, .-driveForwards
 1291              		.global	__aeabi_dadd
 1292              		.section	.text.turnRight,"ax",%progbits
 1293              		.align	2
 1294              		.global	turnRight
 1295              		.thumb
 1296              		.thumb_func
 1297              		.type	turnRight, %function
 1298              	turnRight:
 1299              	.LFB72:
 213:.\main.c      **** 
 214:.\main.c      **** void turnRight()
 215:.\main.c      **** {
 1300              		.loc 1 215 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 80B5     		push	{r7, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 28


 1307              		.cfi_offset 14, -4
 1308 0002 00AF     		add	r7, sp, #0
 1309              		.cfi_def_cfa_register 7
 216:.\main.c      ****     setSpeed(0,speed*2.0);
 1310              		.loc 1 216 0
 1311 0004 074B     		ldr	r3, .L52
 1312 0006 D3E90023 		ldrd	r2, [r3]
 1313 000a 1046     		mov	r0, r2
 1314 000c 1946     		mov	r1, r3
 1315 000e FFF7FEFF 		bl	__aeabi_dadd
 1316 0012 0246     		mov	r2, r0
 1317 0014 0B46     		mov	r3, r1
 1318 0016 4FF00000 		mov	r0, #0
 1319 001a 4FF00001 		mov	r1, #0
 1320 001e FFF7FEFF 		bl	setSpeed
 217:.\main.c      **** }
 1321              		.loc 1 217 0
 1322 0022 80BD     		pop	{r7, pc}
 1323              	.L53:
 1324              		.align	2
 1325              	.L52:
 1326 0024 00000000 		.word	speed
 1327              		.cfi_endproc
 1328              	.LFE72:
 1329              		.size	turnRight, .-turnRight
 1330              		.section	.text.turnLeft,"ax",%progbits
 1331              		.align	2
 1332              		.global	turnLeft
 1333              		.thumb
 1334              		.thumb_func
 1335              		.type	turnLeft, %function
 1336              	turnLeft:
 1337              	.LFB73:
 218:.\main.c      **** 
 219:.\main.c      **** void turnLeft()
 220:.\main.c      **** {
 1338              		.loc 1 220 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
 1342 0000 80B5     		push	{r7, lr}
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
 1346 0002 00AF     		add	r7, sp, #0
 1347              		.cfi_def_cfa_register 7
 221:.\main.c      ****     setSpeed(speed*2.0,0);
 1348              		.loc 1 221 0
 1349 0004 084B     		ldr	r3, .L55
 1350 0006 D3E90023 		ldrd	r2, [r3]
 1351 000a 1046     		mov	r0, r2
 1352 000c 1946     		mov	r1, r3
 1353 000e FFF7FEFF 		bl	__aeabi_dadd
 1354 0012 0246     		mov	r2, r0
 1355 0014 0B46     		mov	r3, r1
 1356 0016 1046     		mov	r0, r2
 1357 0018 1946     		mov	r1, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 29


 1358 001a 4FF00002 		mov	r2, #0
 1359 001e 4FF00003 		mov	r3, #0
 1360 0022 FFF7FEFF 		bl	setSpeed
 222:.\main.c      **** }
 1361              		.loc 1 222 0
 1362 0026 80BD     		pop	{r7, pc}
 1363              	.L56:
 1364              		.align	2
 1365              	.L55:
 1366 0028 00000000 		.word	speed
 1367              		.cfi_endproc
 1368              	.LFE73:
 1369              		.size	turnLeft, .-turnLeft
 1370              		.section	.text.turnU,"ax",%progbits
 1371              		.align	2
 1372              		.global	turnU
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	turnU, %function
 1376              	turnU:
 1377              	.LFB74:
 223:.\main.c      **** 
 224:.\main.c      **** void turnU()
 225:.\main.c      **** {
 1378              		.loc 1 225 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 0000 B0B5     		push	{r4, r5, r7, lr}
 1383              		.cfi_def_cfa_offset 16
 1384              		.cfi_offset 4, -16
 1385              		.cfi_offset 5, -12
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 226:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 1390              		.loc 1 226 0
 1391 0004 0E4B     		ldr	r3, .L58
 1392 0006 D3E90023 		ldrd	r2, [r3]
 1393 000a 1446     		mov	r4, r2
 1394 000c 83F00045 		eor	r5, r3, #-2147483648
 1395 0010 2046     		mov	r0, r4
 1396 0012 2946     		mov	r1, r5
 1397 0014 2246     		mov	r2, r4
 1398 0016 2B46     		mov	r3, r5
 1399 0018 FFF7FEFF 		bl	__aeabi_dadd
 1400 001c 0246     		mov	r2, r0
 1401 001e 0B46     		mov	r3, r1
 1402 0020 1446     		mov	r4, r2
 1403 0022 1D46     		mov	r5, r3
 1404 0024 064B     		ldr	r3, .L58
 1405 0026 D3E90023 		ldrd	r2, [r3]
 1406 002a 1046     		mov	r0, r2
 1407 002c 1946     		mov	r1, r3
 1408 002e FFF7FEFF 		bl	__aeabi_dadd
 1409 0032 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 30


 1410 0034 0B46     		mov	r3, r1
 1411 0036 2046     		mov	r0, r4
 1412 0038 2946     		mov	r1, r5
 1413 003a FFF7FEFF 		bl	setSpeed
 227:.\main.c      **** }
 1414              		.loc 1 227 0
 1415 003e B0BD     		pop	{r4, r5, r7, pc}
 1416              	.L59:
 1417              		.align	2
 1418              	.L58:
 1419 0040 00000000 		.word	speed
 1420              		.cfi_endproc
 1421              	.LFE74:
 1422              		.size	turnU, .-turnU
 1423              		.section	.text.initTurnLeft,"ax",%progbits
 1424              		.align	2
 1425              		.global	initTurnLeft
 1426              		.thumb
 1427              		.thumb_func
 1428              		.type	initTurnLeft, %function
 1429              	initTurnLeft:
 1430              	.LFB75:
 228:.\main.c      **** 
 229:.\main.c      **** void initTurnLeft(){
 1431              		.loc 1 229 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0002 00AF     		add	r7, sp, #0
 1440              		.cfi_def_cfa_register 7
 230:.\main.c      ****     Timer_2_Stop();
 1441              		.loc 1 230 0
 1442 0004 FFF7FEFF 		bl	Timer_2_Stop
 231:.\main.c      ****     prev_movement_state = movement_state;
 1443              		.loc 1 231 0
 1444 0008 084B     		ldr	r3, .L61
 1445 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1446 000c 084B     		ldr	r3, .L61+4
 1447 000e 1A70     		strb	r2, [r3]
 232:.\main.c      ****     movement_state = LTURN;
 1448              		.loc 1 232 0
 1449 0010 064B     		ldr	r3, .L61
 1450 0012 0122     		movs	r2, #1
 1451 0014 1A70     		strb	r2, [r3]
 233:.\main.c      ****     brakeLeft();
 1452              		.loc 1 233 0
 1453 0016 FFF7FEFF 		bl	brakeLeft
 234:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1454              		.loc 1 234 0
 1455 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1456 001e 0346     		mov	r3, r0
 1457 0020 1A46     		mov	r2, r3
 1458 0022 044B     		ldr	r3, .L61+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 31


 1459 0024 1A80     		strh	r2, [r3]	@ movhi
 235:.\main.c      ****     Timer_2_Start();
 1460              		.loc 1 235 0
 1461 0026 FFF7FEFF 		bl	Timer_2_Start
 236:.\main.c      **** }
 1462              		.loc 1 236 0
 1463 002a 80BD     		pop	{r7, pc}
 1464              	.L62:
 1465              		.align	2
 1466              	.L61:
 1467 002c 00000000 		.word	movement_state
 1468 0030 00000000 		.word	prev_movement_state
 1469 0034 00000000 		.word	start_turn_count
 1470              		.cfi_endproc
 1471              	.LFE75:
 1472              		.size	initTurnLeft, .-initTurnLeft
 1473              		.section	.text.initTurnRight,"ax",%progbits
 1474              		.align	2
 1475              		.global	initTurnRight
 1476              		.thumb
 1477              		.thumb_func
 1478              		.type	initTurnRight, %function
 1479              	initTurnRight:
 1480              	.LFB76:
 237:.\main.c      **** 
 238:.\main.c      **** void initTurnRight(){
 1481              		.loc 1 238 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485 0000 80B5     		push	{r7, lr}
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 7, -8
 1488              		.cfi_offset 14, -4
 1489 0002 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 239:.\main.c      ****     Timer_2_Stop();
 1491              		.loc 1 239 0
 1492 0004 FFF7FEFF 		bl	Timer_2_Stop
 240:.\main.c      ****     prev_movement_state = movement_state;
 1493              		.loc 1 240 0
 1494 0008 084B     		ldr	r3, .L64
 1495 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1496 000c 084B     		ldr	r3, .L64+4
 1497 000e 1A70     		strb	r2, [r3]
 241:.\main.c      ****     movement_state = RTURN;
 1498              		.loc 1 241 0
 1499 0010 064B     		ldr	r3, .L64
 1500 0012 0222     		movs	r2, #2
 1501 0014 1A70     		strb	r2, [r3]
 242:.\main.c      ****     brakeRight();
 1502              		.loc 1 242 0
 1503 0016 FFF7FEFF 		bl	brakeRight
 243:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1504              		.loc 1 243 0
 1505 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1506 001e 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 32


 1507 0020 1A46     		mov	r2, r3
 1508 0022 044B     		ldr	r3, .L64+8
 1509 0024 1A80     		strh	r2, [r3]	@ movhi
 244:.\main.c      ****     Timer_2_Start();
 1510              		.loc 1 244 0
 1511 0026 FFF7FEFF 		bl	Timer_2_Start
 245:.\main.c      **** }
 1512              		.loc 1 245 0
 1513 002a 80BD     		pop	{r7, pc}
 1514              	.L65:
 1515              		.align	2
 1516              	.L64:
 1517 002c 00000000 		.word	movement_state
 1518 0030 00000000 		.word	prev_movement_state
 1519 0034 00000000 		.word	start_turn_count
 1520              		.cfi_endproc
 1521              	.LFE76:
 1522              		.size	initTurnRight, .-initTurnRight
 1523              		.section	.text.initTurnU,"ax",%progbits
 1524              		.align	2
 1525              		.global	initTurnU
 1526              		.thumb
 1527              		.thumb_func
 1528              		.type	initTurnU, %function
 1529              	initTurnU:
 1530              	.LFB77:
 246:.\main.c      **** 
 247:.\main.c      **** void initTurnU(){
 1531              		.loc 1 247 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 80B5     		push	{r7, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 00AF     		add	r7, sp, #0
 1540              		.cfi_def_cfa_register 7
 248:.\main.c      ****     Timer_2_Stop();
 1541              		.loc 1 248 0
 1542 0004 FFF7FEFF 		bl	Timer_2_Stop
 249:.\main.c      ****     prev_movement_state = movement_state;
 1543              		.loc 1 249 0
 1544 0008 084B     		ldr	r3, .L67
 1545 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1546 000c 084B     		ldr	r3, .L67+4
 1547 000e 1A70     		strb	r2, [r3]
 250:.\main.c      ****     movement_state = UTURN;
 1548              		.loc 1 250 0
 1549 0010 064B     		ldr	r3, .L67
 1550 0012 0722     		movs	r2, #7
 1551 0014 1A70     		strb	r2, [r3]
 251:.\main.c      ****     brakeMotor();
 1552              		.loc 1 251 0
 1553 0016 FFF7FEFF 		bl	brakeMotor
 252:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1554              		.loc 1 252 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 33


 1555 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1556 001e 0346     		mov	r3, r0
 1557 0020 1A46     		mov	r2, r3
 1558 0022 044B     		ldr	r3, .L67+8
 1559 0024 1A80     		strh	r2, [r3]	@ movhi
 253:.\main.c      ****     Timer_2_Start();
 1560              		.loc 1 253 0
 1561 0026 FFF7FEFF 		bl	Timer_2_Start
 254:.\main.c      **** }
 1562              		.loc 1 254 0
 1563 002a 80BD     		pop	{r7, pc}
 1564              	.L68:
 1565              		.align	2
 1566              	.L67:
 1567 002c 00000000 		.word	movement_state
 1568 0030 00000000 		.word	prev_movement_state
 1569 0034 00000000 		.word	start_turn_count
 1570              		.cfi_endproc
 1571              	.LFE77:
 1572              		.size	initTurnU, .-initTurnU
 1573              		.section	.text.initForward,"ax",%progbits
 1574              		.align	2
 1575              		.global	initForward
 1576              		.thumb
 1577              		.thumb_func
 1578              		.type	initForward, %function
 1579              	initForward:
 1580              	.LFB78:
 255:.\main.c      **** 
 256:.\main.c      **** void initForward(){
 1581              		.loc 1 256 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 1, uses_anonymous_args = 0
 1585 0000 80B5     		push	{r7, lr}
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 7, -8
 1588              		.cfi_offset 14, -4
 1589 0002 00AF     		add	r7, sp, #0
 1590              		.cfi_def_cfa_register 7
 257:.\main.c      ****     brakeMotor();
 1591              		.loc 1 257 0
 1592 0004 FFF7FEFF 		bl	brakeMotor
 258:.\main.c      ****     movement_state = DRIVE;
 1593              		.loc 1 258 0
 1594 0008 014B     		ldr	r3, .L70
 1595 000a 0022     		movs	r2, #0
 1596 000c 1A70     		strb	r2, [r3]
 259:.\main.c      **** }
 1597              		.loc 1 259 0
 1598 000e 80BD     		pop	{r7, pc}
 1599              	.L71:
 1600              		.align	2
 1601              	.L70:
 1602 0010 00000000 		.word	movement_state
 1603              		.cfi_endproc
 1604              	.LFE78:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 34


 1605              		.size	initForward, .-initForward
 1606              		.section	.text.initBrake,"ax",%progbits
 1607              		.align	2
 1608              		.global	initBrake
 1609              		.thumb
 1610              		.thumb_func
 1611              		.type	initBrake, %function
 1612              	initBrake:
 1613              	.LFB79:
 260:.\main.c      **** 
 261:.\main.c      **** void initBrake(){
 1614              		.loc 1 261 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 1, uses_anonymous_args = 0
 1618              		@ link register save eliminated.
 1619 0000 80B4     		push	{r7}
 1620              		.cfi_def_cfa_offset 4
 1621              		.cfi_offset 7, -4
 1622 0002 00AF     		add	r7, sp, #0
 1623              		.cfi_def_cfa_register 7
 262:.\main.c      ****     movement_state = STOPPED;
 1624              		.loc 1 262 0
 1625 0004 034B     		ldr	r3, .L73
 1626 0006 0322     		movs	r2, #3
 1627 0008 1A70     		strb	r2, [r3]
 263:.\main.c      **** }
 1628              		.loc 1 263 0
 1629 000a BD46     		mov	sp, r7
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 000c 5DF8047B 		ldr	r7, [sp], #4
 1633              		.cfi_restore 7
 1634              		.cfi_def_cfa_offset 0
 1635 0010 7047     		bx	lr
 1636              	.L74:
 1637 0012 00BF     		.align	2
 1638              	.L73:
 1639 0014 00000000 		.word	movement_state
 1640              		.cfi_endproc
 1641              	.LFE79:
 1642              		.size	initBrake, .-initBrake
 1643              		.section	.text.initTrack,"ax",%progbits
 1644              		.align	2
 1645              		.global	initTrack
 1646              		.thumb
 1647              		.thumb_func
 1648              		.type	initTrack, %function
 1649              	initTrack:
 1650              	.LFB80:
 264:.\main.c      **** 
 265:.\main.c      **** void initTrack()
 266:.\main.c      **** {
 1651              		.loc 1 266 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 35


 1655              		@ link register save eliminated.
 1656 0000 80B4     		push	{r7}
 1657              		.cfi_def_cfa_offset 4
 1658              		.cfi_offset 7, -4
 1659 0002 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
 267:.\main.c      ****     movement_state = TRACKING;
 1661              		.loc 1 267 0
 1662 0004 034B     		ldr	r3, .L76
 1663 0006 0422     		movs	r2, #4
 1664 0008 1A70     		strb	r2, [r3]
 268:.\main.c      **** }
 1665              		.loc 1 268 0
 1666 000a BD46     		mov	sp, r7
 1667              		.cfi_def_cfa_register 13
 1668              		@ sp needed
 1669 000c 5DF8047B 		ldr	r7, [sp], #4
 1670              		.cfi_restore 7
 1671              		.cfi_def_cfa_offset 0
 1672 0010 7047     		bx	lr
 1673              	.L77:
 1674 0012 00BF     		.align	2
 1675              	.L76:
 1676 0014 00000000 		.word	movement_state
 1677              		.cfi_endproc
 1678              	.LFE80:
 1679              		.size	initTrack, .-initTrack
 1680              		.section	.text.initTrackU,"ax",%progbits
 1681              		.align	2
 1682              		.global	initTrackU
 1683              		.thumb
 1684              		.thumb_func
 1685              		.type	initTrackU, %function
 1686              	initTrackU:
 1687              	.LFB81:
 269:.\main.c      **** 
 270:.\main.c      **** void initTrackU(){
 1688              		.loc 1 270 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 1693 0000 80B4     		push	{r7}
 1694              		.cfi_def_cfa_offset 4
 1695              		.cfi_offset 7, -4
 1696 0002 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
 271:.\main.c      ****     movement_state = TRACKING_U;
 1698              		.loc 1 271 0
 1699 0004 034B     		ldr	r3, .L79
 1700 0006 0522     		movs	r2, #5
 1701 0008 1A70     		strb	r2, [r3]
 272:.\main.c      **** }
 1702              		.loc 1 272 0
 1703 000a BD46     		mov	sp, r7
 1704              		.cfi_def_cfa_register 13
 1705              		@ sp needed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 36


 1706 000c 5DF8047B 		ldr	r7, [sp], #4
 1707              		.cfi_restore 7
 1708              		.cfi_def_cfa_offset 0
 1709 0010 7047     		bx	lr
 1710              	.L80:
 1711 0012 00BF     		.align	2
 1712              	.L79:
 1713 0014 00000000 		.word	movement_state
 1714              		.cfi_endproc
 1715              	.LFE81:
 1716              		.size	initTrackU, .-initTrackU
 1717              		.section	.text.inittrackLineZ,"ax",%progbits
 1718              		.align	2
 1719              		.global	inittrackLineZ
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	inittrackLineZ, %function
 1723              	inittrackLineZ:
 1724              	.LFB82:
 273:.\main.c      **** 
 274:.\main.c      **** void inittrackLineZ(){
 1725              		.loc 1 274 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729              		@ link register save eliminated.
 1730 0000 80B4     		push	{r7}
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0002 00AF     		add	r7, sp, #0
 1734              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING_SOFT;
 1735              		.loc 1 275 0
 1736 0004 034B     		ldr	r3, .L82
 1737 0006 0622     		movs	r2, #6
 1738 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1739              		.loc 1 276 0
 1740 000a BD46     		mov	sp, r7
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 000c 5DF8047B 		ldr	r7, [sp], #4
 1744              		.cfi_restore 7
 1745              		.cfi_def_cfa_offset 0
 1746 0010 7047     		bx	lr
 1747              	.L83:
 1748 0012 00BF     		.align	2
 1749              	.L82:
 1750 0014 00000000 		.word	movement_state
 1751              		.cfi_endproc
 1752              	.LFE82:
 1753              		.size	inittrackLineZ, .-inittrackLineZ
 1754              		.section	.text.rxInt,"ax",%progbits
 1755              		.align	2
 1756              		.global	rxInt
 1757              		.thumb
 1758              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 37


 1759              		.type	rxInt, %function
 1760              	rxInt:
 1761              	.LFB83:
 277:.\main.c      **** 
 278:.\main.c      **** 
 279:.\main.c      **** 
 280:.\main.c      **** //Binary RF Data
 281:.\main.c      **** CY_ISR(rxInt){
 1762              		.loc 1 281 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 8
 1765              		@ frame_needed = 1, uses_anonymous_args = 0
 1766 0000 B0B5     		push	{r4, r5, r7, lr}
 1767              		.cfi_def_cfa_offset 16
 1768              		.cfi_offset 4, -16
 1769              		.cfi_offset 5, -12
 1770              		.cfi_offset 7, -8
 1771              		.cfi_offset 14, -4
 1772 0002 82B0     		sub	sp, sp, #8
 1773              		.cfi_def_cfa_offset 24
 1774 0004 00AF     		add	r7, sp, #0
 1775              		.cfi_def_cfa_register 7
 282:.\main.c      ****     char rf_char = UART_GetChar();
 1776              		.loc 1 282 0
 1777 0006 FFF7FEFF 		bl	UART_GetChar
 1778 000a 0346     		mov	r3, r0
 1779 000c FB71     		strb	r3, [r7, #7]
 283:.\main.c      ****     if(rf_char == SOP){
 1780              		.loc 1 283 0
 1781 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1782 0010 AA2B     		cmp	r3, #170
 1783 0012 2BD1     		bne	.L85
 284:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 285:.\main.c      ****             if(byteCount == 34)
 1784              		.loc 1 285 0
 1785 0014 224B     		ldr	r3, .L89
 1786 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1787 0018 222B     		cmp	r3, #34
 1788 001a 20D1     		bne	.L86
 286:.\main.c      ****             {
 287:.\main.c      ****                 system_state = buffer_state;
 1789              		.loc 1 287 0
 1790 001c 214B     		ldr	r3, .L89+4
 1791 001e 224A     		ldr	r2, .L89+8
 1792 0020 1568     		ldr	r5, [r2]	@ unaligned
 1793 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1794 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1795 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1796 0028 1D60     		str	r5, [r3]	@ unaligned
 1797 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1798 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1799 002e D960     		str	r1, [r3, #12]	@ unaligned
 1800 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1801 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1802 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1803 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1804 0038 1D61     		str	r5, [r3, #16]	@ unaligned
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 38


 1805 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1806 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1807 003e D961     		str	r1, [r3, #28]	@ unaligned
 288:.\main.c      ****                 if(initial_pos_valid == 0)
 1808              		.loc 1 288 0
 1809 0040 1A4B     		ldr	r3, .L89+12
 1810 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 0044 002B     		cmp	r3, #0
 1812 0046 0AD1     		bne	.L86
 289:.\main.c      ****                 {
 290:.\main.c      ****                     LED_Write(~LED_Read());
 1813              		.loc 1 290 0
 1814 0048 FFF7FEFF 		bl	LED_Read
 1815 004c 0346     		mov	r3, r0
 1816 004e DB43     		mvns	r3, r3
 1817 0050 DBB2     		uxtb	r3, r3
 1818 0052 1846     		mov	r0, r3
 1819 0054 FFF7FEFF 		bl	LED_Write
 291:.\main.c      ****                     initial_pos_valid = 1;
 1820              		.loc 1 291 0
 1821 0058 144B     		ldr	r3, .L89+12
 1822 005a 0122     		movs	r2, #1
 1823 005c 1A70     		strb	r2, [r3]
 1824              	.L86:
 292:.\main.c      ****                 }
 293:.\main.c      ****             }
 294:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1825              		.loc 1 294 0
 1826 005e 104B     		ldr	r3, .L89
 1827 0060 0222     		movs	r2, #2
 1828 0062 1A70     		strb	r2, [r3]
 295:.\main.c      ****             flag_rx = 0;
 1829              		.loc 1 295 0
 1830 0064 124B     		ldr	r3, .L89+16
 1831 0066 0022     		movs	r2, #0
 1832 0068 1A70     		strb	r2, [r3]
 1833 006a 16E0     		b	.L84
 1834              	.L85:
 296:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 297:.\main.c      ****         }
 298:.\main.c      ****         else
 299:.\main.c      ****         {
 300:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1835              		.loc 1 300 0
 1836 006c 0C4B     		ldr	r3, .L89
 1837 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1838 0070 03F00103 		and	r3, r3, #1
 1839 0074 0F49     		ldr	r1, .L89+20
 1840 0076 FA79     		ldrb	r2, [r7, #7]
 1841 0078 CA54     		strb	r2, [r1, r3]
 301:.\main.c      ****            
 302:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1842              		.loc 1 302 0
 1843 007a 094B     		ldr	r3, .L89
 1844 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 007e 03F00103 		and	r3, r3, #1
 1846 0082 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 39


 1847 0084 002B     		cmp	r3, #0
 1848 0086 02D0     		beq	.L88
 303:.\main.c      ****             {
 304:.\main.c      ****                 flag_rx = 1;
 1849              		.loc 1 304 0
 1850 0088 094B     		ldr	r3, .L89+16
 1851 008a 0122     		movs	r2, #1
 1852 008c 1A70     		strb	r2, [r3]
 1853              	.L88:
 305:.\main.c      ****             }
 306:.\main.c      ****             byteCount = (byteCount + 1);
 1854              		.loc 1 306 0
 1855 008e 044B     		ldr	r3, .L89
 1856 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 0092 0133     		adds	r3, r3, #1
 1858 0094 DAB2     		uxtb	r2, r3
 1859 0096 024B     		ldr	r3, .L89
 1860 0098 1A70     		strb	r2, [r3]
 1861              	.L84:
 307:.\main.c      ****         }
 308:.\main.c      **** }
 1862              		.loc 1 308 0
 1863 009a 0837     		adds	r7, r7, #8
 1864              		.cfi_def_cfa_offset 16
 1865 009c BD46     		mov	sp, r7
 1866              		.cfi_def_cfa_register 13
 1867              		@ sp needed
 1868 009e B0BD     		pop	{r4, r5, r7, pc}
 1869              	.L90:
 1870              		.align	2
 1871              	.L89:
 1872 00a0 00000000 		.word	byteCount
 1873 00a4 00000000 		.word	system_state
 1874 00a8 00000000 		.word	buffer_state
 1875 00ac 00000000 		.word	initial_pos_valid
 1876 00b0 00000000 		.word	flag_rx
 1877 00b4 00000000 		.word	packet
 1878              		.cfi_endproc
 1879              	.LFE83:
 1880              		.size	rxInt, .-rxInt
 1881              		.global	__aeabi_i2f
 1882              		.global	__aeabi_fmul
 1883              		.global	__aeabi_f2iz
 1884              		.section	.rodata
 1885 000a 0000     		.align	2
 1886              	.LC1:
 1887 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1887      65742071 
 1887      7561643A 
 1887      2025640D 
 1887      0A00
 1888 001e 0000     		.align	2
 1889              	.LC2:
 1890 0020 703A2573 		.ascii	"p:%s\015\012\000"
 1890      0D0A00
 1891              		.section	.text.BT_rxInt,"ax",%progbits
 1892              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 40


 1893              		.global	BT_rxInt
 1894              		.thumb
 1895              		.thumb_func
 1896              		.type	BT_rxInt, %function
 1897              	BT_rxInt:
 1898              	.LFB84:
 309:.\main.c      **** 
 310:.\main.c      **** CY_ISR(BT_rxInt)
 311:.\main.c      **** {
 1899              		.loc 1 311 0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 152
 1902              		@ frame_needed = 1, uses_anonymous_args = 0
 1903 0000 80B5     		push	{r7, lr}
 1904              		.cfi_def_cfa_offset 8
 1905              		.cfi_offset 7, -8
 1906              		.cfi_offset 14, -4
 1907 0002 A6B0     		sub	sp, sp, #152
 1908              		.cfi_def_cfa_offset 160
 1909 0004 00AF     		add	r7, sp, #0
 1910              		.cfi_def_cfa_register 7
 312:.\main.c      ****     char rf_char = UART_GetChar();
 1911              		.loc 1 312 0
 1912 0006 FFF7FEFF 		bl	UART_GetChar
 1913 000a 0346     		mov	r3, r0
 1914 000c 87F89730 		strb	r3, [r7, #151]
 313:.\main.c      ****     switch(rf_char){
 1915              		.loc 1 313 0
 1916 0010 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 1917 0014 613B     		subs	r3, r3, #97
 1918 0016 192B     		cmp	r3, #25
 1919 0018 00F2B680 		bhi	.L91
 1920 001c 01A2     		adr	r2, .L94
 1921 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1922 0022 00BF     		.p2align 2
 1923              	.L94:
 1924 0024 8D000000 		.word	.L93+1
 1925 0028 89010000 		.word	.L91+1
 1926 002c 89010000 		.word	.L91+1
 1927 0030 B1000000 		.word	.L95+1
 1928 0034 89010000 		.word	.L91+1
 1929 0038 BD000000 		.word	.L96+1
 1930 003c 89010000 		.word	.L91+1
 1931 0040 89010000 		.word	.L91+1
 1932 0044 89010000 		.word	.L91+1
 1933 0048 89010000 		.word	.L91+1
 1934 004c 89010000 		.word	.L91+1
 1935 0050 89010000 		.word	.L91+1
 1936 0054 89010000 		.word	.L91+1
 1937 0058 89010000 		.word	.L91+1
 1938 005c 89010000 		.word	.L91+1
 1939 0060 89010000 		.word	.L91+1
 1940 0064 ED000000 		.word	.L97+1
 1941 0068 47010000 		.word	.L98+1
 1942 006c A5000000 		.word	.L99+1
 1943 0070 C9000000 		.word	.L100+1
 1944 0074 D5000000 		.word	.L101+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 41


 1945 0078 89010000 		.word	.L91+1
 1946 007c 99000000 		.word	.L102+1
 1947 0080 5D010000 		.word	.L103+1
 1948 0084 89010000 		.word	.L91+1
 1949 0088 E1000000 		.word	.L104+1
 1950              		.p2align 1
 1951              	.L93:
 1952              	.LBB3:
 314:.\main.c      ****     case 'a':
 315:.\main.c      ****         initTurnLeft();
 1953              		.loc 1 315 0
 1954 008c FFF7FEFF 		bl	initTurnLeft
 316:.\main.c      ****         track_mode = NO_TRACK;
 1955              		.loc 1 316 0
 1956 0090 3F4B     		ldr	r3, .L106
 1957 0092 0022     		movs	r2, #0
 1958 0094 1A70     		strb	r2, [r3]
 317:.\main.c      ****         break;
 1959              		.loc 1 317 0
 1960 0096 77E0     		b	.L91
 1961              	.L102:
 318:.\main.c      ****     case 'w':
 319:.\main.c      ****         initForward();
 1962              		.loc 1 319 0
 1963 0098 FFF7FEFF 		bl	initForward
 320:.\main.c      ****         track_mode = NO_TRACK;
 1964              		.loc 1 320 0
 1965 009c 3C4B     		ldr	r3, .L106
 1966 009e 0022     		movs	r2, #0
 1967 00a0 1A70     		strb	r2, [r3]
 321:.\main.c      ****         break;
 1968              		.loc 1 321 0
 1969 00a2 71E0     		b	.L91
 1970              	.L99:
 322:.\main.c      ****     case 's': 
 323:.\main.c      ****         reverseDirection();
 1971              		.loc 1 323 0
 1972 00a4 FFF7FEFF 		bl	reverseDirection
 324:.\main.c      ****         track_mode = NO_TRACK;
 1973              		.loc 1 324 0
 1974 00a8 394B     		ldr	r3, .L106
 1975 00aa 0022     		movs	r2, #0
 1976 00ac 1A70     		strb	r2, [r3]
 325:.\main.c      ****         break;
 1977              		.loc 1 325 0
 1978 00ae 6BE0     		b	.L91
 1979              	.L95:
 326:.\main.c      ****     case 'd':
 327:.\main.c      ****         initTurnRight();
 1980              		.loc 1 327 0
 1981 00b0 FFF7FEFF 		bl	initTurnRight
 328:.\main.c      ****         track_mode = NO_TRACK;
 1982              		.loc 1 328 0
 1983 00b4 364B     		ldr	r3, .L106
 1984 00b6 0022     		movs	r2, #0
 1985 00b8 1A70     		strb	r2, [r3]
 329:.\main.c      ****         break;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 42


 1986              		.loc 1 329 0
 1987 00ba 65E0     		b	.L91
 1988              	.L96:
 330:.\main.c      ****     case 'f':
 331:.\main.c      ****         initBrake();
 1989              		.loc 1 331 0
 1990 00bc FFF7FEFF 		bl	initBrake
 332:.\main.c      ****         track_mode = NO_TRACK;
 1991              		.loc 1 332 0
 1992 00c0 334B     		ldr	r3, .L106
 1993 00c2 0022     		movs	r2, #0
 1994 00c4 1A70     		strb	r2, [r3]
 333:.\main.c      ****         break;
 1995              		.loc 1 333 0
 1996 00c6 5FE0     		b	.L91
 1997              	.L100:
 334:.\main.c      ****     case('t'):
 335:.\main.c      ****         track_mode = CURVE_TRACK;
 1998              		.loc 1 335 0
 1999 00c8 314B     		ldr	r3, .L106
 2000 00ca 0122     		movs	r2, #1
 2001 00cc 1A70     		strb	r2, [r3]
 336:.\main.c      ****         initTrack();
 2002              		.loc 1 336 0
 2003 00ce FFF7FEFF 		bl	initTrack
 337:.\main.c      ****         break;
 2004              		.loc 1 337 0
 2005 00d2 59E0     		b	.L91
 2006              	.L101:
 338:.\main.c      ****     case('u'):
 339:.\main.c      ****         initTrackU();
 2007              		.loc 1 339 0
 2008 00d4 FFF7FEFF 		bl	initTrackU
 340:.\main.c      ****         track_mode = U_TRACK;
 2009              		.loc 1 340 0
 2010 00d8 2D4B     		ldr	r3, .L106
 2011 00da 0222     		movs	r2, #2
 2012 00dc 1A70     		strb	r2, [r3]
 341:.\main.c      ****         break;
 2013              		.loc 1 341 0
 2014 00de 53E0     		b	.L91
 2015              	.L104:
 342:.\main.c      ****     case('z'):
 343:.\main.c      ****         track_mode = SQUARE_TRACK;
 2016              		.loc 1 343 0
 2017 00e0 2B4B     		ldr	r3, .L106
 2018 00e2 0322     		movs	r2, #3
 2019 00e4 1A70     		strb	r2, [r3]
 344:.\main.c      ****         inittrackLineZ();
 2020              		.loc 1 344 0
 2021 00e6 FFF7FEFF 		bl	inittrackLineZ
 345:.\main.c      ****         break;
 2022              		.loc 1 345 0
 2023 00ea 4DE0     		b	.L91
 2024              	.L97:
 346:.\main.c      ****     case('q'):
 347:.\main.c      ****         track_mode = QUAD_STOP;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 43


 2025              		.loc 1 347 0
 2026 00ec 284B     		ldr	r3, .L106
 2027 00ee 0422     		movs	r2, #4
 2028 00f0 1A70     		strb	r2, [r3]
 348:.\main.c      ****         accum_dist = 0;
 2029              		.loc 1 348 0
 2030 00f2 284B     		ldr	r3, .L106+4
 2031 00f4 0022     		movs	r2, #0
 2032 00f6 1A80     		strh	r2, [r3]	@ movhi
 349:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 2033              		.loc 1 349 0
 2034 00f8 274B     		ldr	r3, .L106+8
 2035 00fa 1B88     		ldrh	r3, [r3]
 2036 00fc 1BB2     		sxth	r3, r3
 2037 00fe 1846     		mov	r0, r3
 2038 0100 FFF7FEFF 		bl	__aeabi_i2f
 2039 0104 0246     		mov	r2, r0
 2040 0106 254B     		ldr	r3, .L106+12
 2041 0108 1B68     		ldr	r3, [r3]	@ float
 2042 010a 1046     		mov	r0, r2
 2043 010c 1946     		mov	r1, r3
 2044 010e FFF7FEFF 		bl	__aeabi_fmul
 2045 0112 0346     		mov	r3, r0
 2046 0114 1846     		mov	r0, r3
 2047 0116 FFF7FEFF 		bl	__aeabi_f2iz
 2048 011a 0346     		mov	r3, r0
 2049 011c 9AB2     		uxth	r2, r3
 2050 011e 204B     		ldr	r3, .L106+16
 2051 0120 1A80     		strh	r2, [r3]	@ movhi
 350:.\main.c      ****         char mes[16];
 351:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 2052              		.loc 1 351 0
 2053 0122 1F4B     		ldr	r3, .L106+16
 2054 0124 1B88     		ldrh	r3, [r3]
 2055 0126 1BB2     		sxth	r3, r3
 2056 0128 07F18402 		add	r2, r7, #132
 2057 012c 1046     		mov	r0, r2
 2058 012e 1D49     		ldr	r1, .L106+20
 2059 0130 1A46     		mov	r2, r3
 2060 0132 FFF7FEFF 		bl	sprintf
 352:.\main.c      ****         UART_PutString(mes);
 2061              		.loc 1 352 0
 2062 0136 07F18403 		add	r3, r7, #132
 2063 013a 1846     		mov	r0, r3
 2064 013c FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****         initForward();
 2065              		.loc 1 353 0
 2066 0140 FFF7FEFF 		bl	initForward
 354:.\main.c      ****         break;
 2067              		.loc 1 354 0
 2068 0144 20E0     		b	.L91
 2069              	.L98:
 355:.\main.c      ****     case ('r'):
 356:.\main.c      ****         track_mode = RF_STOP;
 2070              		.loc 1 356 0
 2071 0146 124B     		ldr	r3, .L106
 2072 0148 0522     		movs	r2, #5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 44


 2073 014a 1A70     		strb	r2, [r3]
 357:.\main.c      ****         changeToRF();
 2074              		.loc 1 357 0
 2075 014c FFF7FEFF 		bl	changeToRF
 358:.\main.c      ****         // Make initial position
 359:.\main.c      ****         initial_pos_valid = 0;
 2076              		.loc 1 359 0
 2077 0150 154B     		ldr	r3, .L106+24
 2078 0152 0022     		movs	r2, #0
 2079 0154 1A70     		strb	r2, [r3]
 360:.\main.c      ****         initBrake();
 2080              		.loc 1 360 0
 2081 0156 FFF7FEFF 		bl	initBrake
 361:.\main.c      ****         break;
 2082              		.loc 1 361 0
 2083 015a 15E0     		b	.L91
 2084              	.L103:
 362:.\main.c      ****     case ('x'):
 363:.\main.c      ****         track_mode = DEST_TEST;
 2085              		.loc 1 363 0
 2086 015c 0C4B     		ldr	r3, .L106
 2087 015e 0622     		movs	r2, #6
 2088 0160 1A70     		strb	r2, [r3]
 364:.\main.c      ****         tracked_direction = robot_direction;
 2089              		.loc 1 364 0
 2090 0162 124B     		ldr	r3, .L106+28
 2091 0164 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2092 0166 124B     		ldr	r3, .L106+32
 2093 0168 1A70     		strb	r2, [r3]
 365:.\main.c      ****         generateDirections();
 2094              		.loc 1 365 0
 2095 016a FFF7FEFF 		bl	generateDirections
 366:.\main.c      ****         char message[128];
 367:.\main.c      ****         sprintf(message, "p:%s\r\n", instructions);
 2096              		.loc 1 367 0
 2097 016e 3B1D     		adds	r3, r7, #4
 2098 0170 1846     		mov	r0, r3
 2099 0172 1049     		ldr	r1, .L106+36
 2100 0174 104A     		ldr	r2, .L106+40
 2101 0176 FFF7FEFF 		bl	sprintf
 368:.\main.c      ****         UART_PutString(message);
 2102              		.loc 1 368 0
 2103 017a 3B1D     		adds	r3, r7, #4
 2104 017c 1846     		mov	r0, r3
 2105 017e FFF7FEFF 		bl	UART_PutString
 369:.\main.c      ****         inittrackLineZ();
 2106              		.loc 1 369 0
 2107 0182 FFF7FEFF 		bl	inittrackLineZ
 370:.\main.c      ****         break;
 2108              		.loc 1 370 0
 2109 0186 00BF     		nop
 2110              	.L91:
 2111              	.LBE3:
 371:.\main.c      ****     }
 372:.\main.c      **** }
 2112              		.loc 1 372 0
 2113 0188 9837     		adds	r7, r7, #152
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 45


 2114              		.cfi_def_cfa_offset 8
 2115 018a BD46     		mov	sp, r7
 2116              		.cfi_def_cfa_register 13
 2117              		@ sp needed
 2118 018c 80BD     		pop	{r7, pc}
 2119              	.L107:
 2120 018e 00BF     		.align	2
 2121              	.L106:
 2122 0190 00000000 		.word	track_mode
 2123 0194 00000000 		.word	accum_dist
 2124 0198 00000000 		.word	target_distance_cm
 2125 019c 00000000 		.word	quad_per_cm
 2126 01a0 00000000 		.word	target_distance_quad
 2127 01a4 0C000000 		.word	.LC1
 2128 01a8 00000000 		.word	initial_pos_valid
 2129 01ac 00000000 		.word	robot_direction
 2130 01b0 00000000 		.word	tracked_direction
 2131 01b4 20000000 		.word	.LC2
 2132 01b8 00000000 		.word	instructions
 2133              		.cfi_endproc
 2134              	.LFE84:
 2135              		.size	BT_rxInt, .-BT_rxInt
 2136              		.section	.text.BT_txInt,"ax",%progbits
 2137              		.align	2
 2138              		.global	BT_txInt
 2139              		.thumb
 2140              		.thumb_func
 2141              		.type	BT_txInt, %function
 2142              	BT_txInt:
 2143              	.LFB85:
 373:.\main.c      **** 
 374:.\main.c      **** //BT
 375:.\main.c      **** CY_ISR(BT_txInt)
 376:.\main.c      **** {
 2144              		.loc 1 376 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 1, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 2149 0000 80B4     		push	{r7}
 2150              		.cfi_def_cfa_offset 4
 2151              		.cfi_offset 7, -4
 2152 0002 00AF     		add	r7, sp, #0
 2153              		.cfi_def_cfa_register 7
 377:.\main.c      ****     
 378:.\main.c      **** }
 2154              		.loc 1 378 0
 2155 0004 BD46     		mov	sp, r7
 2156              		.cfi_def_cfa_register 13
 2157              		@ sp needed
 2158 0006 5DF8047B 		ldr	r7, [sp], #4
 2159              		.cfi_restore 7
 2160              		.cfi_def_cfa_offset 0
 2161 000a 7047     		bx	lr
 2162              		.cfi_endproc
 2163              	.LFE85:
 2164              		.size	BT_txInt, .-BT_txInt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 46


 2165              		.section	.text.adc_isr,"ax",%progbits
 2166              		.align	2
 2167              		.global	adc_isr
 2168              		.thumb
 2169              		.thumb_func
 2170              		.type	adc_isr, %function
 2171              	adc_isr:
 2172              	.LFB86:
 379:.\main.c      **** 
 380:.\main.c      **** //ADC:
 381:.\main.c      **** CY_ISR (adc_isr)
 382:.\main.c      **** {
 2173              		.loc 1 382 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177 0000 80B5     		push	{r7, lr}
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 7, -8
 2180              		.cfi_offset 14, -4
 2181 0002 00AF     		add	r7, sp, #0
 2182              		.cfi_def_cfa_register 7
 383:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 384:.\main.c      ****     adc_result = ADC_GetResult16();
 2183              		.loc 1 384 0
 2184 0004 FFF7FEFF 		bl	ADC_GetResult16
 2185 0008 0346     		mov	r3, r0
 2186 000a 1A46     		mov	r2, r3
 2187 000c 044B     		ldr	r3, .L110
 2188 000e 1A80     		strh	r2, [r3]	@ movhi
 385:.\main.c      ****     flag_receive_ADC = 1;
 2189              		.loc 1 385 0
 2190 0010 044B     		ldr	r3, .L110+4
 2191 0012 0122     		movs	r2, #1
 2192 0014 1A70     		strb	r2, [r3]
 386:.\main.c      ****     flag_print_rf = 1;
 2193              		.loc 1 386 0
 2194 0016 044B     		ldr	r3, .L110+8
 2195 0018 0122     		movs	r2, #1
 2196 001a 1A70     		strb	r2, [r3]
 387:.\main.c      ****     //LED_Write(~LED_Read());
 388:.\main.c      **** }
 2197              		.loc 1 388 0
 2198 001c 80BD     		pop	{r7, pc}
 2199              	.L111:
 2200 001e 00BF     		.align	2
 2201              	.L110:
 2202 0020 00000000 		.word	adc_result
 2203 0024 00000000 		.word	flag_receive_ADC
 2204 0028 00000000 		.word	flag_print_rf
 2205              		.cfi_endproc
 2206              	.LFE86:
 2207              		.size	adc_isr, .-adc_isr
 2208              		.section	.rodata
 2209 0027 00       		.align	2
 2210              	.LC3:
 2211 0028 64697374 		.ascii	"dist: %d\015\012\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 47


 2211      3A202564 
 2211      0D0A00
 2212              		.global	__aeabi_i2d
 2213              		.global	__aeabi_dcmple
 2214              		.section	.text.isr_quad1,"ax",%progbits
 2215              		.align	2
 2216              		.global	isr_quad1
 2217              		.thumb
 2218              		.thumb_func
 2219              		.type	isr_quad1, %function
 2220              	isr_quad1:
 2221              	.LFB87:
 389:.\main.c      **** 
 390:.\main.c      **** CY_ISR (isr_quad1)
 391:.\main.c      **** {
 2222              		.loc 1 391 0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 24
 2225              		@ frame_needed = 1, uses_anonymous_args = 0
 2226 0000 B0B5     		push	{r4, r5, r7, lr}
 2227              		.cfi_def_cfa_offset 16
 2228              		.cfi_offset 4, -16
 2229              		.cfi_offset 5, -12
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 86B0     		sub	sp, sp, #24
 2233              		.cfi_def_cfa_offset 40
 2234 0004 00AF     		add	r7, sp, #0
 2235              		.cfi_def_cfa_register 7
 392:.\main.c      ****     //LED_Write(~LED_Read());
 393:.\main.c      ****     last_quad_count1 = quad_count1;
 2236              		.loc 1 393 0
 2237 0006 684B     		ldr	r3, .L119
 2238 0008 1A88     		ldrh	r2, [r3]
 2239 000a 684B     		ldr	r3, .L119+4
 2240 000c 1A80     		strh	r2, [r3]	@ movhi
 394:.\main.c      ****     last_quad_count2 = quad_count2;
 2241              		.loc 1 394 0
 2242 000e 684B     		ldr	r3, .L119+8
 2243 0010 1A88     		ldrh	r2, [r3]
 2244 0012 684B     		ldr	r3, .L119+12
 2245 0014 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 2246              		.loc 1 395 0
 2247 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2248 001a 0346     		mov	r3, r0
 2249 001c 1A46     		mov	r2, r3
 2250 001e 624B     		ldr	r3, .L119
 2251 0020 1A80     		strh	r2, [r3]	@ movhi
 396:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 2252              		.loc 1 396 0
 2253 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2254 0026 0346     		mov	r3, r0
 2255 0028 1A46     		mov	r2, r3
 2256 002a 614B     		ldr	r3, .L119+8
 2257 002c 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 48


 2258              		.loc 1 397 0
 2259 002e 5E4B     		ldr	r3, .L119
 2260 0030 1B88     		ldrh	r3, [r3]
 2261 0032 9AB2     		uxth	r2, r3
 2262 0034 5D4B     		ldr	r3, .L119+4
 2263 0036 1B88     		ldrh	r3, [r3]
 2264 0038 9BB2     		uxth	r3, r3
 2265 003a D31A     		subs	r3, r2, r3
 2266 003c 9BB2     		uxth	r3, r3
 2267 003e 9AB2     		uxth	r2, r3
 2268 0040 5D4B     		ldr	r3, .L119+16
 2269 0042 1A80     		strh	r2, [r3]	@ movhi
 398:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 2270              		.loc 1 398 0
 2271 0044 5A4B     		ldr	r3, .L119+8
 2272 0046 1B88     		ldrh	r3, [r3]
 2273 0048 9AB2     		uxth	r2, r3
 2274 004a 5A4B     		ldr	r3, .L119+12
 2275 004c 1B88     		ldrh	r3, [r3]
 2276 004e 9BB2     		uxth	r3, r3
 2277 0050 D31A     		subs	r3, r2, r3
 2278 0052 9BB2     		uxth	r3, r3
 2279 0054 9AB2     		uxth	r2, r3
 2280 0056 594B     		ldr	r3, .L119+20
 2281 0058 1A80     		strh	r2, [r3]	@ movhi
 399:.\main.c      ****     
 400:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && track_mode 
 2282              		.loc 1 400 0
 2283 005a 534B     		ldr	r3, .L119
 2284 005c 1B88     		ldrh	r3, [r3]
 2285 005e 1BB2     		sxth	r3, r3
 2286 0060 002B     		cmp	r3, #0
 2287 0062 B8BF     		it	lt
 2288 0064 5B42     		rsblt	r3, r3, #0
 2289 0066 40F6B832 		movw	r2, #3000
 2290 006a 9342     		cmp	r3, r2
 2291 006c 1BDD     		ble	.L113
 2292              		.loc 1 400 0 is_stmt 0 discriminator 1
 2293 006e 544B     		ldr	r3, .L119+24
 2294 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2295 0072 012B     		cmp	r3, #1
 2296 0074 17D0     		beq	.L113
 2297              		.loc 1 400 0 discriminator 2
 2298 0076 524B     		ldr	r3, .L119+24
 2299 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2300 007a 022B     		cmp	r3, #2
 2301 007c 13D0     		beq	.L113
 2302              		.loc 1 400 0 discriminator 3
 2303 007e 514B     		ldr	r3, .L119+28
 2304 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0082 042B     		cmp	r3, #4
 2306 0084 0FD0     		beq	.L113
 2307              		.loc 1 400 0 discriminator 4
 2308 0086 4E4B     		ldr	r3, .L119+24
 2309 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 008a 072B     		cmp	r3, #7
 2311 008c 0BD0     		beq	.L113
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 49


 401:.\main.c      ****     {
 402:.\main.c      ****         QuadDec_M1_SetCounter(0);
 2312              		.loc 1 402 0 is_stmt 1
 2313 008e 0020     		movs	r0, #0
 2314 0090 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 403:.\main.c      ****         QuadDec_M2_SetCounter(0);
 2315              		.loc 1 403 0
 2316 0094 0020     		movs	r0, #0
 2317 0096 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 404:.\main.c      ****         quad_count1 = 0;
 2318              		.loc 1 404 0
 2319 009a 434B     		ldr	r3, .L119
 2320 009c 0022     		movs	r2, #0
 2321 009e 1A80     		strh	r2, [r3]	@ movhi
 405:.\main.c      ****         quad_count2 = 0;
 2322              		.loc 1 405 0
 2323 00a0 434B     		ldr	r3, .L119+8
 2324 00a2 0022     		movs	r2, #0
 2325 00a4 1A80     		strh	r2, [r3]	@ movhi
 2326              	.L113:
 406:.\main.c      ****     }
 407:.\main.c      **** 
 408:.\main.c      ****     flag_calc_wheelspeed = 1;
 2327              		.loc 1 408 0
 2328 00a6 484B     		ldr	r3, .L119+32
 2329 00a8 0122     		movs	r2, #1
 2330 00aa 1A70     		strb	r2, [r3]
 409:.\main.c      ****     
 410:.\main.c      ****     if (track_mode == QUAD_STOP)
 2331              		.loc 1 410 0
 2332 00ac 454B     		ldr	r3, .L119+28
 2333 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2334 00b0 042B     		cmp	r3, #4
 2335 00b2 2AD1     		bne	.L114
 2336              	.LBB4:
 411:.\main.c      ****     {
 412:.\main.c      ****         accum_dist += quad_diff1;
 2337              		.loc 1 412 0
 2338 00b4 454B     		ldr	r3, .L119+36
 2339 00b6 1B88     		ldrh	r3, [r3]
 2340 00b8 9AB2     		uxth	r2, r3
 2341 00ba 3F4B     		ldr	r3, .L119+16
 2342 00bc 1B88     		ldrh	r3, [r3]
 2343 00be 9BB2     		uxth	r3, r3
 2344 00c0 1344     		add	r3, r3, r2
 2345 00c2 9BB2     		uxth	r3, r3
 2346 00c4 9AB2     		uxth	r2, r3
 2347 00c6 414B     		ldr	r3, .L119+36
 2348 00c8 1A80     		strh	r2, [r3]	@ movhi
 413:.\main.c      ****         char mes[16];
 414:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 2349              		.loc 1 414 0
 2350 00ca 404B     		ldr	r3, .L119+36
 2351 00cc 1B88     		ldrh	r3, [r3]
 2352 00ce 1BB2     		sxth	r3, r3
 2353 00d0 3A46     		mov	r2, r7
 2354 00d2 1046     		mov	r0, r2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 50


 2355 00d4 3E49     		ldr	r1, .L119+40
 2356 00d6 1A46     		mov	r2, r3
 2357 00d8 FFF7FEFF 		bl	sprintf
 415:.\main.c      ****         UART_PutString(mes);
 2358              		.loc 1 415 0
 2359 00dc 3B46     		mov	r3, r7
 2360 00de 1846     		mov	r0, r3
 2361 00e0 FFF7FEFF 		bl	UART_PutString
 416:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 2362              		.loc 1 416 0
 2363 00e4 394B     		ldr	r3, .L119+36
 2364 00e6 1B88     		ldrh	r3, [r3]
 2365 00e8 1BB2     		sxth	r3, r3
 2366 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 2367 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 2368 00f2 384B     		ldr	r3, .L119+44
 2369 00f4 1B88     		ldrh	r3, [r3]
 2370 00f6 1BB2     		sxth	r3, r3
 2371 00f8 9A42     		cmp	r2, r3
 2372 00fa 05DB     		blt	.L115
 417:.\main.c      ****         {
 418:.\main.c      ****             initBrake();
 2373              		.loc 1 418 0
 2374 00fc FFF7FEFF 		bl	initBrake
 419:.\main.c      ****             track_mode = NO_TRACK;
 2375              		.loc 1 419 0
 2376 0100 304B     		ldr	r3, .L119+28
 2377 0102 0022     		movs	r2, #0
 2378 0104 1A70     		strb	r2, [r3]
 2379              	.LBE4:
 2380 0106 4CE0     		b	.L112
 2381              	.L115:
 2382 0108 4BE0     		b	.L112
 2383              	.L114:
 420:.\main.c      ****         }
 421:.\main.c      ****     } else if (track_mode == RF_STOP)
 2384              		.loc 1 421 0
 2385 010a 2E4B     		ldr	r3, .L119+28
 2386 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2387 010e 052B     		cmp	r3, #5
 2388 0110 47D1     		bne	.L112
 2389              	.LBB5:
 422:.\main.c      ****     { 
 423:.\main.c      ****         // Do pythag
 424:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 2390              		.loc 1 424 0
 2391 0112 314B     		ldr	r3, .L119+48
 2392 0114 5B88     		ldrh	r3, [r3, #2]
 2393 0116 1AB2     		sxth	r2, r3
 2394 0118 304B     		ldr	r3, .L119+52
 2395 011a 1B88     		ldrh	r3, [r3]
 2396 011c 1BB2     		sxth	r3, r3
 2397 011e D31A     		subs	r3, r2, r3
 2398 0120 1846     		mov	r0, r3
 2399 0122 FFF7FEFF 		bl	__aeabi_i2d
 2400 0126 0246     		mov	r2, r0
 2401 0128 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 51


 2402 012a 1046     		mov	r0, r2
 2403 012c 1946     		mov	r1, r3
 2404 012e 4FF00002 		mov	r2, #0
 2405 0132 2B4B     		ldr	r3, .L119+56
 2406 0134 FFF7FEFF 		bl	__aeabi_ddiv
 2407 0138 0246     		mov	r2, r0
 2408 013a 0B46     		mov	r3, r1
 2409 013c 1446     		mov	r4, r2
 2410 013e 1D46     		mov	r5, r3
 2411 0140 254B     		ldr	r3, .L119+48
 2412 0142 9B88     		ldrh	r3, [r3, #4]
 2413 0144 1AB2     		sxth	r2, r3
 2414 0146 274B     		ldr	r3, .L119+60
 2415 0148 1B88     		ldrh	r3, [r3]
 2416 014a 1BB2     		sxth	r3, r3
 2417 014c D31A     		subs	r3, r2, r3
 2418 014e 1846     		mov	r0, r3
 2419 0150 FFF7FEFF 		bl	__aeabi_i2d
 2420 0154 0246     		mov	r2, r0
 2421 0156 0B46     		mov	r3, r1
 2422 0158 1046     		mov	r0, r2
 2423 015a 1946     		mov	r1, r3
 2424 015c 4FF00002 		mov	r2, #0
 2425 0160 1F4B     		ldr	r3, .L119+56
 2426 0162 FFF7FEFF 		bl	__aeabi_ddiv
 2427 0166 0246     		mov	r2, r0
 2428 0168 0B46     		mov	r3, r1
 2429 016a 2046     		mov	r0, r4
 2430 016c 2946     		mov	r1, r5
 2431 016e FFF7FEFF 		bl	hypot
 2432 0172 C7E90401 		strd	r0, [r7, #16]
 425:.\main.c      ****         if (dist >= target_distance_cm)
 2433              		.loc 1 425 0
 2434 0176 1C4B     		ldr	r3, .L119+64
 2435 0178 1B88     		ldrh	r3, [r3]
 2436 017a 1BB2     		sxth	r3, r3
 2437 017c 1846     		mov	r0, r3
 2438 017e FFF7FEFF 		bl	__aeabi_i2d
 2439 0182 0246     		mov	r2, r0
 2440 0184 0B46     		mov	r3, r1
 2441 0186 1046     		mov	r0, r2
 2442 0188 1946     		mov	r1, r3
 2443 018a D7E90423 		ldrd	r2, [r7, #16]
 2444 018e FFF7FEFF 		bl	__aeabi_dcmple
 2445 0192 0346     		mov	r3, r0
 2446 0194 002B     		cmp	r3, #0
 2447 0196 04D0     		beq	.L112
 426:.\main.c      ****         {
 427:.\main.c      ****             initBrake();
 2448              		.loc 1 427 0
 2449 0198 FFF7FEFF 		bl	initBrake
 428:.\main.c      ****             track_mode = NO_TRACK;
 2450              		.loc 1 428 0
 2451 019c 094B     		ldr	r3, .L119+28
 2452 019e 0022     		movs	r2, #0
 2453 01a0 1A70     		strb	r2, [r3]
 2454              	.L112:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 52


 2455              	.LBE5:
 429:.\main.c      ****         }
 430:.\main.c      ****     }
 431:.\main.c      ****     
 432:.\main.c      **** }
 2456              		.loc 1 432 0
 2457 01a2 1837     		adds	r7, r7, #24
 2458              		.cfi_def_cfa_offset 16
 2459 01a4 BD46     		mov	sp, r7
 2460              		.cfi_def_cfa_register 13
 2461              		@ sp needed
 2462 01a6 B0BD     		pop	{r4, r5, r7, pc}
 2463              	.L120:
 2464              		.align	2
 2465              	.L119:
 2466 01a8 00000000 		.word	quad_count1
 2467 01ac 00000000 		.word	last_quad_count1
 2468 01b0 00000000 		.word	quad_count2
 2469 01b4 00000000 		.word	last_quad_count2
 2470 01b8 00000000 		.word	quad_diff1
 2471 01bc 00000000 		.word	quad_diff2
 2472 01c0 00000000 		.word	movement_state
 2473 01c4 00000000 		.word	track_mode
 2474 01c8 00000000 		.word	flag_calc_wheelspeed
 2475 01cc 00000000 		.word	accum_dist
 2476 01d0 28000000 		.word	.LC3
 2477 01d4 00000000 		.word	target_distance_quad
 2478 01d8 00000000 		.word	system_state
 2479 01dc 00000000 		.word	initial_x_pos
 2480 01e0 00001040 		.word	1074790400
 2481 01e4 00000000 		.word	initial_y_pos
 2482 01e8 00000000 		.word	target_distance_cm
 2483              		.cfi_endproc
 2484              	.LFE87:
 2485              		.size	isr_quad1, .-isr_quad1
 2486              		.section	.text.isr_turn_timer,"ax",%progbits
 2487              		.align	2
 2488              		.global	isr_turn_timer
 2489              		.thumb
 2490              		.thumb_func
 2491              		.type	isr_turn_timer, %function
 2492              	isr_turn_timer:
 2493              	.LFB88:
 433:.\main.c      **** 
 434:.\main.c      **** CY_ISR(isr_turn_timer)
 435:.\main.c      **** {
 2494              		.loc 1 435 0
 2495              		.cfi_startproc
 2496              		@ args = 0, pretend = 0, frame = 0
 2497              		@ frame_needed = 1, uses_anonymous_args = 0
 2498 0000 80B5     		push	{r7, lr}
 2499              		.cfi_def_cfa_offset 8
 2500              		.cfi_offset 7, -8
 2501              		.cfi_offset 14, -4
 2502 0002 00AF     		add	r7, sp, #0
 2503              		.cfi_def_cfa_register 7
 436:.\main.c      ****     if(movement_state == LTURN)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 53


 2504              		.loc 1 436 0
 2505 0004 264B     		ldr	r3, .L127
 2506 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 0008 012B     		cmp	r3, #1
 2508 000a 15D1     		bne	.L122
 437:.\main.c      ****     {
 438:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 2509              		.loc 1 438 0
 2510 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2511 0010 0346     		mov	r3, r0
 2512 0012 1A46     		mov	r2, r3
 2513 0014 234B     		ldr	r3, .L127+4
 2514 0016 1B88     		ldrh	r3, [r3]
 2515 0018 1BB2     		sxth	r3, r3
 2516 001a D31A     		subs	r3, r2, r3
 2517 001c 002B     		cmp	r3, #0
 2518 001e B8BF     		it	lt
 2519 0020 5B42     		rsblt	r3, r3, #0
 2520 0022 CF2B     		cmp	r3, #207
 2521 0024 3BDD     		ble	.L121
 439:.\main.c      ****         {
 440:.\main.c      ****             //movement_state = STOPPED;
 441:.\main.c      ****             brakeMotor();
 2522              		.loc 1 441 0
 2523 0026 FFF7FEFF 		bl	brakeMotor
 442:.\main.c      ****             movement_state = prev_movement_state;
 2524              		.loc 1 442 0
 2525 002a 1F4B     		ldr	r3, .L127+8
 2526 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2527 002e 1C4B     		ldr	r3, .L127
 2528 0030 1A70     		strb	r2, [r3]
 443:.\main.c      ****             Timer_2_Stop();
 2529              		.loc 1 443 0
 2530 0032 FFF7FEFF 		bl	Timer_2_Stop
 2531 0036 32E0     		b	.L121
 2532              	.L122:
 444:.\main.c      ****         }
 445:.\main.c      ****     }
 446:.\main.c      ****     else if (movement_state == RTURN)
 2533              		.loc 1 446 0
 2534 0038 194B     		ldr	r3, .L127
 2535 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2536 003c 022B     		cmp	r3, #2
 2537 003e 15D1     		bne	.L125
 447:.\main.c      ****     {
 448:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2538              		.loc 1 448 0
 2539 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2540 0044 0346     		mov	r3, r0
 2541 0046 1A46     		mov	r2, r3
 2542 0048 164B     		ldr	r3, .L127+4
 2543 004a 1B88     		ldrh	r3, [r3]
 2544 004c 1BB2     		sxth	r3, r3
 2545 004e D31A     		subs	r3, r2, r3
 2546 0050 002B     		cmp	r3, #0
 2547 0052 B8BF     		it	lt
 2548 0054 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 54


 2549 0056 CF2B     		cmp	r3, #207
 2550 0058 21DD     		ble	.L121
 449:.\main.c      ****         {
 450:.\main.c      ****             //movement_state = STOPPED;
 451:.\main.c      ****             brakeMotor();
 2551              		.loc 1 451 0
 2552 005a FFF7FEFF 		bl	brakeMotor
 452:.\main.c      ****             movement_state = prev_movement_state;
 2553              		.loc 1 452 0
 2554 005e 124B     		ldr	r3, .L127+8
 2555 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2556 0062 0F4B     		ldr	r3, .L127
 2557 0064 1A70     		strb	r2, [r3]
 453:.\main.c      ****             Timer_2_Stop();
 2558              		.loc 1 453 0
 2559 0066 FFF7FEFF 		bl	Timer_2_Stop
 2560 006a 18E0     		b	.L121
 2561              	.L125:
 454:.\main.c      ****         }
 455:.\main.c      ****     }
 456:.\main.c      ****     else if (movement_state == UTURN)
 2562              		.loc 1 456 0
 2563 006c 0C4B     		ldr	r3, .L127
 2564 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2565 0070 072B     		cmp	r3, #7
 2566 0072 14D1     		bne	.L121
 457:.\main.c      ****     {
 458:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2567              		.loc 1 458 0
 2568 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2569 0078 0346     		mov	r3, r0
 2570 007a 1A46     		mov	r2, r3
 2571 007c 094B     		ldr	r3, .L127+4
 2572 007e 1B88     		ldrh	r3, [r3]
 2573 0080 1BB2     		sxth	r3, r3
 2574 0082 D31A     		subs	r3, r2, r3
 2575 0084 002B     		cmp	r3, #0
 2576 0086 B8BF     		it	lt
 2577 0088 5B42     		rsblt	r3, r3, #0
 2578 008a CF2B     		cmp	r3, #207
 2579 008c 07DD     		ble	.L121
 459:.\main.c      ****         {
 460:.\main.c      ****             //movement_state = STOPPED;
 461:.\main.c      ****             brakeMotor();
 2580              		.loc 1 461 0
 2581 008e FFF7FEFF 		bl	brakeMotor
 462:.\main.c      ****             movement_state = prev_movement_state;
 2582              		.loc 1 462 0
 2583 0092 054B     		ldr	r3, .L127+8
 2584 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2585 0096 024B     		ldr	r3, .L127
 2586 0098 1A70     		strb	r2, [r3]
 463:.\main.c      ****             Timer_2_Stop();
 2587              		.loc 1 463 0
 2588 009a FFF7FEFF 		bl	Timer_2_Stop
 2589              	.L121:
 464:.\main.c      ****         }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 55


 465:.\main.c      ****     }
 466:.\main.c      **** }
 2590              		.loc 1 466 0
 2591 009e 80BD     		pop	{r7, pc}
 2592              	.L128:
 2593              		.align	2
 2594              	.L127:
 2595 00a0 00000000 		.word	movement_state
 2596 00a4 00000000 		.word	start_turn_count
 2597 00a8 00000000 		.word	prev_movement_state
 2598              		.cfi_endproc
 2599              	.LFE88:
 2600              		.size	isr_turn_timer, .-isr_turn_timer
 2601              		.section	.text.Stop_on_line,"ax",%progbits
 2602              		.align	2
 2603              		.global	Stop_on_line
 2604              		.thumb
 2605              		.thumb_func
 2606              		.type	Stop_on_line, %function
 2607              	Stop_on_line:
 2608              	.LFB89:
 467:.\main.c      **** 
 468:.\main.c      **** 
 469:.\main.c      **** CY_ISR (Stop_on_line)
 470:.\main.c      **** {
 2609              		.loc 1 470 0
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 0
 2612              		@ frame_needed = 1, uses_anonymous_args = 0
 2613              		@ link register save eliminated.
 2614 0000 80B4     		push	{r7}
 2615              		.cfi_def_cfa_offset 4
 2616              		.cfi_offset 7, -4
 2617 0002 00AF     		add	r7, sp, #0
 2618              		.cfi_def_cfa_register 7
 471:.\main.c      ****     movement_state = STOPPED;
 2619              		.loc 1 471 0
 2620 0004 054B     		ldr	r3, .L131
 2621 0006 0322     		movs	r2, #3
 2622 0008 1A70     		strb	r2, [r3]
 472:.\main.c      ****     if(movement_state != DRIVE) return;
 2623              		.loc 1 472 0
 2624 000a 044B     		ldr	r3, .L131
 2625 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2626 000e 002B     		cmp	r3, #0
 2627 0010 00D0     		beq	.L129
 2628 0012 00BF     		nop
 2629              	.L129:
 473:.\main.c      ****     //initTurnLeft();
 474:.\main.c      **** }
 2630              		.loc 1 474 0
 2631 0014 BD46     		mov	sp, r7
 2632              		.cfi_def_cfa_register 13
 2633              		@ sp needed
 2634 0016 5DF8047B 		ldr	r7, [sp], #4
 2635              		.cfi_restore 7
 2636              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 56


 2637 001a 7047     		bx	lr
 2638              	.L132:
 2639              		.align	2
 2640              	.L131:
 2641 001c 00000000 		.word	movement_state
 2642              		.cfi_endproc
 2643              	.LFE89:
 2644              		.size	Stop_on_line, .-Stop_on_line
 2645              		.section	.rodata
 2646 0033 00       		.align	2
 2647              	.LC4:
 2648 0034 53746172 		.ascii	"Starting robot!\015\012\000"
 2648      74696E67 
 2648      20726F62 
 2648      6F74210D 
 2648      0A00
 2649              		.section	.text.button,"ax",%progbits
 2650              		.align	2
 2651              		.global	button
 2652              		.thumb
 2653              		.thumb_func
 2654              		.type	button, %function
 2655              	button:
 2656              	.LFB90:
 475:.\main.c      **** 
 476:.\main.c      **** CY_ISR (button)
 477:.\main.c      **** {
 2657              		.loc 1 477 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 1, uses_anonymous_args = 0
 2661 0000 80B5     		push	{r7, lr}
 2662              		.cfi_def_cfa_offset 8
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 00AF     		add	r7, sp, #0
 2666              		.cfi_def_cfa_register 7
 478:.\main.c      ****     if(BT_ENABLED)
 2667              		.loc 1 478 0
 2668 0004 054B     		ldr	r3, .L135
 2669 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2670 0008 002B     		cmp	r3, #0
 2671 000a 02D0     		beq	.L134
 479:.\main.c      ****     {
 480:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2672              		.loc 1 480 0
 2673 000c 0448     		ldr	r0, .L135+4
 2674 000e FFF7FEFF 		bl	UART_PutString
 2675              	.L134:
 481:.\main.c      ****     }
 482:.\main.c      ****     movement_state = DRIVE;
 2676              		.loc 1 482 0
 2677 0012 044B     		ldr	r3, .L135+8
 2678 0014 0022     		movs	r2, #0
 2679 0016 1A70     		strb	r2, [r3]
 483:.\main.c      **** }
 2680              		.loc 1 483 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 57


 2681 0018 80BD     		pop	{r7, pc}
 2682              	.L136:
 2683 001a 00BF     		.align	2
 2684              	.L135:
 2685 001c 00000000 		.word	BT_ENABLED
 2686 0020 34000000 		.word	.LC4
 2687 0024 00000000 		.word	movement_state
 2688              		.cfi_endproc
 2689              	.LFE90:
 2690              		.size	button, .-button
 2691              		.section	.text.isr_adcTimer,"ax",%progbits
 2692              		.align	2
 2693              		.global	isr_adcTimer
 2694              		.thumb
 2695              		.thumb_func
 2696              		.type	isr_adcTimer, %function
 2697              	isr_adcTimer:
 2698              	.LFB91:
 484:.\main.c      **** 
 485:.\main.c      **** CY_ISR(isr_adcTimer)
 486:.\main.c      **** {
 2699              		.loc 1 486 0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 1, uses_anonymous_args = 0
 2703 0000 80B5     		push	{r7, lr}
 2704              		.cfi_def_cfa_offset 8
 2705              		.cfi_offset 7, -8
 2706              		.cfi_offset 14, -4
 2707 0002 00AF     		add	r7, sp, #0
 2708              		.cfi_def_cfa_register 7
 487:.\main.c      ****     ADC_StartConvert();
 2709              		.loc 1 487 0
 2710 0004 FFF7FEFF 		bl	ADC_StartConvert
 488:.\main.c      **** }
 2711              		.loc 1 488 0
 2712 0008 80BD     		pop	{r7, pc}
 2713              		.cfi_endproc
 2714              	.LFE91:
 2715              		.size	isr_adcTimer, .-isr_adcTimer
 2716 000a 00BF     		.section	.rodata
 2717 0046 0000     		.align	2
 2718              	.LC5:
 2719 0048 44656164 		.ascii	"Deadzone left\015\012\000"
 2719      7A6F6E65 
 2719      206C6566 
 2719      740D0A00 
 2720              		.section	.text.isr_deadzone,"ax",%progbits
 2721              		.align	2
 2722              		.global	isr_deadzone
 2723              		.thumb
 2724              		.thumb_func
 2725              		.type	isr_deadzone, %function
 2726              	isr_deadzone:
 2727              	.LFB92:
 489:.\main.c      **** 
 490:.\main.c      **** CY_ISR(isr_deadzone)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 58


 491:.\main.c      **** {
 2728              		.loc 1 491 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 00AF     		add	r7, sp, #0
 2737              		.cfi_def_cfa_register 7
 492:.\main.c      ****     sensorsDisabled = 0;
 2738              		.loc 1 492 0
 2739 0004 054B     		ldr	r3, .L139
 2740 0006 0022     		movs	r2, #0
 2741 0008 1A70     		strb	r2, [r3]
 493:.\main.c      ****     deadzone = 0;
 2742              		.loc 1 493 0
 2743 000a 054B     		ldr	r3, .L139+4
 2744 000c 0022     		movs	r2, #0
 2745 000e 1A70     		strb	r2, [r3]
 494:.\main.c      ****     Timer_Deadzone_Stop();
 2746              		.loc 1 494 0
 2747 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 495:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 2748              		.loc 1 495 0
 2749 0014 0348     		ldr	r0, .L139+8
 2750 0016 FFF7FEFF 		bl	UART_PutString
 496:.\main.c      **** }
 2751              		.loc 1 496 0
 2752 001a 80BD     		pop	{r7, pc}
 2753              	.L140:
 2754              		.align	2
 2755              	.L139:
 2756 001c 00000000 		.word	sensorsDisabled
 2757 0020 00000000 		.word	deadzone
 2758 0024 48000000 		.word	.LC5
 2759              		.cfi_endproc
 2760              	.LFE92:
 2761              		.size	isr_deadzone, .-isr_deadzone
 2762              		.section	.text.changeToRF,"ax",%progbits
 2763              		.align	2
 2764              		.global	changeToRF
 2765              		.thumb
 2766              		.thumb_func
 2767              		.type	changeToRF, %function
 2768              	changeToRF:
 2769              	.LFB93:
 497:.\main.c      **** 
 498:.\main.c      **** 
 499:.\main.c      **** 
 500:.\main.c      **** void changeToRF()
 501:.\main.c      **** {
 2770              		.loc 1 501 0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 59


 2774 0000 80B5     		push	{r7, lr}
 2775              		.cfi_def_cfa_offset 8
 2776              		.cfi_offset 7, -8
 2777              		.cfi_offset 14, -4
 2778 0002 00AF     		add	r7, sp, #0
 2779              		.cfi_def_cfa_register 7
 502:.\main.c      ****         //disable BT
 503:.\main.c      ****         BT_ENABLED = 0;
 2780              		.loc 1 503 0
 2781 0004 0B4B     		ldr	r3, .L142
 2782 0006 0022     		movs	r2, #0
 2783 0008 1A70     		strb	r2, [r3]
 504:.\main.c      ****         isrRF_RX_Stop();
 2784              		.loc 1 504 0
 2785 000a FFF7FEFF 		bl	isrRF_RX_Stop
 505:.\main.c      ****         UART_Stop();
 2786              		.loc 1 505 0
 2787 000e FFF7FEFF 		bl	UART_Stop
 506:.\main.c      ****         
 507:.\main.c      ****         //enable RF
 508:.\main.c      ****         BIN_ENABLED = 1;
 2788              		.loc 1 508 0
 2789 0012 094B     		ldr	r3, .L142+4
 2790 0014 0122     		movs	r2, #1
 2791 0016 1A70     		strb	r2, [r3]
 509:.\main.c      ****         UART_clk_SetDividerValue(130);
 2792              		.loc 1 509 0
 2793 0018 8120     		movs	r0, #129
 2794 001a 0121     		movs	r1, #1
 2795 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 510:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 2796              		.loc 1 510 0
 2797 0020 0648     		ldr	r0, .L142+8
 2798 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 511:.\main.c      ****         UART_Start();
 2799              		.loc 1 511 0
 2800 0026 FFF7FEFF 		bl	UART_Start
 512:.\main.c      ****         RF_BT_SELECT_Write(0);
 2801              		.loc 1 512 0
 2802 002a 0020     		movs	r0, #0
 2803 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 513:.\main.c      **** }
 2804              		.loc 1 513 0
 2805 0030 80BD     		pop	{r7, pc}
 2806              	.L143:
 2807 0032 00BF     		.align	2
 2808              	.L142:
 2809 0034 00000000 		.word	BT_ENABLED
 2810 0038 00000000 		.word	BIN_ENABLED
 2811 003c 00000000 		.word	rxInt
 2812              		.cfi_endproc
 2813              	.LFE93:
 2814              		.size	changeToRF, .-changeToRF
 2815              		.section	.text.changeToBT,"ax",%progbits
 2816              		.align	2
 2817              		.global	changeToBT
 2818              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 60


 2819              		.thumb_func
 2820              		.type	changeToBT, %function
 2821              	changeToBT:
 2822              	.LFB94:
 514:.\main.c      **** 
 515:.\main.c      **** void changeToBT()
 516:.\main.c      **** {
 2823              		.loc 1 516 0
 2824              		.cfi_startproc
 2825              		@ args = 0, pretend = 0, frame = 0
 2826              		@ frame_needed = 1, uses_anonymous_args = 0
 2827 0000 80B5     		push	{r7, lr}
 2828              		.cfi_def_cfa_offset 8
 2829              		.cfi_offset 7, -8
 2830              		.cfi_offset 14, -4
 2831 0002 00AF     		add	r7, sp, #0
 2832              		.cfi_def_cfa_register 7
 517:.\main.c      ****         //disable RF
 518:.\main.c      ****         BIN_ENABLED = 0;
 2833              		.loc 1 518 0
 2834 0004 0B4B     		ldr	r3, .L145
 2835 0006 0022     		movs	r2, #0
 2836 0008 1A70     		strb	r2, [r3]
 519:.\main.c      ****         isrRF_RX_Stop();
 2837              		.loc 1 519 0
 2838 000a FFF7FEFF 		bl	isrRF_RX_Stop
 520:.\main.c      ****         UART_Stop();
 2839              		.loc 1 520 0
 2840 000e FFF7FEFF 		bl	UART_Stop
 521:.\main.c      ****         
 522:.\main.c      ****         //enable BT
 523:.\main.c      ****         BT_ENABLED = 1;
 2841              		.loc 1 523 0
 2842 0012 094B     		ldr	r3, .L145+4
 2843 0014 0122     		movs	r2, #1
 2844 0016 1A70     		strb	r2, [r3]
 524:.\main.c      ****         UART_clk_SetDividerValue(781);
 2845              		.loc 1 524 0
 2846 0018 4FF44370 		mov	r0, #780
 2847 001c 0121     		movs	r1, #1
 2848 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 525:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2849              		.loc 1 525 0
 2850 0022 0648     		ldr	r0, .L145+8
 2851 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 526:.\main.c      ****         UART_Start();
 2852              		.loc 1 526 0
 2853 0028 FFF7FEFF 		bl	UART_Start
 527:.\main.c      ****         RF_BT_SELECT_Write(1);
 2854              		.loc 1 527 0
 2855 002c 0120     		movs	r0, #1
 2856 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 528:.\main.c      **** }
 2857              		.loc 1 528 0
 2858 0032 80BD     		pop	{r7, pc}
 2859              	.L146:
 2860              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 61


 2861              	.L145:
 2862 0034 00000000 		.word	BIN_ENABLED
 2863 0038 00000000 		.word	BT_ENABLED
 2864 003c 00000000 		.word	BT_rxInt
 2865              		.cfi_endproc
 2866              	.LFE94:
 2867              		.size	changeToBT, .-changeToBT
 2868              		.global	__aeabi_dmul
 2869              		.section	.text.Quad_Dec_response,"ax",%progbits
 2870              		.align	2
 2871              		.global	Quad_Dec_response
 2872              		.thumb
 2873              		.thumb_func
 2874              		.type	Quad_Dec_response, %function
 2875              	Quad_Dec_response:
 2876              	.LFB95:
 529:.\main.c      **** 
 530:.\main.c      **** 
 531:.\main.c      **** void Quad_Dec_response()
 532:.\main.c      **** {
 2877              		.loc 1 532 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 32
 2880              		@ frame_needed = 1, uses_anonymous_args = 0
 2881 0000 B0B5     		push	{r4, r5, r7, lr}
 2882              		.cfi_def_cfa_offset 16
 2883              		.cfi_offset 4, -16
 2884              		.cfi_offset 5, -12
 2885              		.cfi_offset 7, -8
 2886              		.cfi_offset 14, -4
 2887 0002 88B0     		sub	sp, sp, #32
 2888              		.cfi_def_cfa_offset 48
 2889 0004 00AF     		add	r7, sp, #0
 2890              		.cfi_def_cfa_register 7
 533:.\main.c      ****     //Check if the flag has been set
 534:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2891              		.loc 1 534 0
 2892 0006 814B     		ldr	r3, .L155
 2893 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2894 000a 002B     		cmp	r3, #0
 2895 000c 00D1     		bne	.L148
 2896 000e FAE0     		b	.L147
 2897              	.L148:
 535:.\main.c      ****     flag_calc_wheelspeed = 0;
 2898              		.loc 1 535 0
 2899 0010 7E4B     		ldr	r3, .L155
 2900 0012 0022     		movs	r2, #0
 2901 0014 1A70     		strb	r2, [r3]
 536:.\main.c      ****     
 537:.\main.c      ****     //char wheel_1_str [64];
 538:.\main.c      ****     //char wheel_2_str [64];
 539:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 540:.\main.c      ****     //usbPutString(wheel_1_str);
 541:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 542:.\main.c      ****     
 543:.\main.c      ****     //usbPutString(wheel_2_str);
 544:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 62


 545:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2902              		.loc 1 545 0
 2903 0016 7E4B     		ldr	r3, .L155+4
 2904 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2905 001a FB81     		strh	r3, [r7, #14]	@ movhi
 546:.\main.c      ****     int16 rightSpeed = quad_diff2;
 2906              		.loc 1 546 0
 2907 001c 7D4B     		ldr	r3, .L155+8
 2908 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2909 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 547:.\main.c      ****     double scalingLeft = 1;
 2910              		.loc 1 547 0
 2911 0022 4FF00002 		mov	r2, #0
 2912 0026 7C4B     		ldr	r3, .L155+12
 2913 0028 C7E90623 		strd	r2, [r7, #24]
 548:.\main.c      ****     double scalingRight = 1;
 2914              		.loc 1 548 0
 2915 002c 4FF00002 		mov	r2, #0
 2916 0030 794B     		ldr	r3, .L155+12
 2917 0032 C7E90423 		strd	r2, [r7, #16]
 549:.\main.c      ****     
 550:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 551:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2918              		.loc 1 551 0
 2919 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2920 003a 002B     		cmp	r3, #0
 2921 003c 0DD1     		bne	.L150
 2922              		.loc 1 551 0 is_stmt 0 discriminator 1
 2923 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2924 0042 002B     		cmp	r3, #0
 2925 0044 09D1     		bne	.L150
 552:.\main.c      ****        //leftSpeed = 3;
 553:.\main.c      ****         scalingLeft = 8;
 2926              		.loc 1 553 0 is_stmt 1
 2927 0046 4FF00002 		mov	r2, #0
 2928 004a 744B     		ldr	r3, .L155+16
 2929 004c C7E90623 		strd	r2, [r7, #24]
 554:.\main.c      ****         scalingRight = 8;
 2930              		.loc 1 554 0
 2931 0050 4FF00002 		mov	r2, #0
 2932 0054 714B     		ldr	r3, .L155+16
 2933 0056 C7E90423 		strd	r2, [r7, #16]
 2934              	.L150:
 555:.\main.c      ****     }
 556:.\main.c      **** 
 557:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2935              		.loc 1 557 0
 2936 005a 714B     		ldr	r3, .L155+20
 2937 005c 1B88     		ldrh	r3, [r3]
 2938 005e 1AB2     		sxth	r2, r3
 2939 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2940 0064 002B     		cmp	r3, #0
 2941 0066 B8BF     		it	lt
 2942 0068 5B42     		rsblt	r3, r3, #0
 2943 006a D31A     		subs	r3, r2, r3
 2944 006c BB60     		str	r3, [r7, #8]
 558:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 63


 2945              		.loc 1 558 0
 2946 006e BB68     		ldr	r3, [r7, #8]
 2947 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2948 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2949 0078 BB68     		ldr	r3, [r7, #8]
 2950 007a 92FBF3F3 		sdiv	r3, r2, r3
 2951 007e 1846     		mov	r0, r3
 2952 0080 FFF7FEFF 		bl	__aeabi_i2d
 2953 0084 0446     		mov	r4, r0
 2954 0086 0D46     		mov	r5, r1
 2955 0088 BB68     		ldr	r3, [r7, #8]
 2956 008a 002B     		cmp	r3, #0
 2957 008c B8BF     		it	lt
 2958 008e 5B42     		rsblt	r3, r3, #0
 2959 0090 1846     		mov	r0, r3
 2960 0092 FFF7FEFF 		bl	__aeabi_i2d
 2961 0096 0246     		mov	r2, r0
 2962 0098 0B46     		mov	r3, r1
 2963 009a 1046     		mov	r0, r2
 2964 009c 1946     		mov	r1, r3
 2965 009e FFF7FEFF 		bl	sqrt
 2966 00a2 0246     		mov	r2, r0
 2967 00a4 0B46     		mov	r3, r1
 2968 00a6 2046     		mov	r0, r4
 2969 00a8 2946     		mov	r1, r5
 2970 00aa FFF7FEFF 		bl	__aeabi_dmul
 2971 00ae 0246     		mov	r2, r0
 2972 00b0 0B46     		mov	r3, r1
 2973 00b2 1046     		mov	r0, r2
 2974 00b4 1946     		mov	r1, r3
 2975 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2976 00ba 0346     		mov	r3, r0
 2977 00bc 7B60     		str	r3, [r7, #4]
 559:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2978              		.loc 1 559 0
 2979 00be 594B     		ldr	r3, .L155+24
 2980 00c0 1B88     		ldrh	r3, [r3]
 2981 00c2 1BB2     		sxth	r3, r3
 2982 00c4 1846     		mov	r0, r3
 2983 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2984 00ca 0446     		mov	r4, r0
 2985 00cc 0D46     		mov	r5, r1
 2986 00ce 7868     		ldr	r0, [r7, #4]
 2987 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2988 00d4 0246     		mov	r2, r0
 2989 00d6 0B46     		mov	r3, r1
 2990 00d8 1046     		mov	r0, r2
 2991 00da 1946     		mov	r1, r3
 2992 00dc D7E90623 		ldrd	r2, [r7, #24]
 2993 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2994 00e4 0246     		mov	r2, r0
 2995 00e6 0B46     		mov	r3, r1
 2996 00e8 2046     		mov	r0, r4
 2997 00ea 2946     		mov	r1, r5
 2998 00ec FFF7FEFF 		bl	__aeabi_dadd
 2999 00f0 0246     		mov	r2, r0
 3000 00f2 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 64


 3001 00f4 1046     		mov	r0, r2
 3002 00f6 1946     		mov	r1, r3
 3003 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 3004 00fc 0346     		mov	r3, r0
 3005 00fe 9AB2     		uxth	r2, r3
 3006 0100 484B     		ldr	r3, .L155+24
 3007 0102 1A80     		strh	r2, [r3]	@ movhi
 560:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 3008              		.loc 1 560 0
 3009 0104 484B     		ldr	r3, .L155+28
 3010 0106 1B88     		ldrh	r3, [r3]
 3011 0108 1AB2     		sxth	r2, r3
 3012 010a B7F90C30 		ldrsh	r3, [r7, #12]
 3013 010e 002B     		cmp	r3, #0
 3014 0110 B8BF     		it	lt
 3015 0112 5B42     		rsblt	r3, r3, #0
 3016 0114 D31A     		subs	r3, r2, r3
 3017 0116 BB60     		str	r3, [r7, #8]
 561:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 3018              		.loc 1 561 0
 3019 0118 BB68     		ldr	r3, [r7, #8]
 3020 011a 83EAE372 		eor	r2, r3, r3, asr #31
 3021 011e A2EBE372 		sub	r2, r2, r3, asr #31
 3022 0122 BB68     		ldr	r3, [r7, #8]
 3023 0124 92FBF3F3 		sdiv	r3, r2, r3
 3024 0128 1846     		mov	r0, r3
 3025 012a FFF7FEFF 		bl	__aeabi_i2d
 3026 012e 0446     		mov	r4, r0
 3027 0130 0D46     		mov	r5, r1
 3028 0132 BB68     		ldr	r3, [r7, #8]
 3029 0134 002B     		cmp	r3, #0
 3030 0136 B8BF     		it	lt
 3031 0138 5B42     		rsblt	r3, r3, #0
 3032 013a 1846     		mov	r0, r3
 3033 013c FFF7FEFF 		bl	__aeabi_i2d
 3034 0140 0246     		mov	r2, r0
 3035 0142 0B46     		mov	r3, r1
 3036 0144 1046     		mov	r0, r2
 3037 0146 1946     		mov	r1, r3
 3038 0148 FFF7FEFF 		bl	sqrt
 3039 014c 0246     		mov	r2, r0
 3040 014e 0B46     		mov	r3, r1
 3041 0150 2046     		mov	r0, r4
 3042 0152 2946     		mov	r1, r5
 3043 0154 FFF7FEFF 		bl	__aeabi_dmul
 3044 0158 0246     		mov	r2, r0
 3045 015a 0B46     		mov	r3, r1
 3046 015c 1046     		mov	r0, r2
 3047 015e 1946     		mov	r1, r3
 3048 0160 FFF7FEFF 		bl	__aeabi_d2iz
 3049 0164 0346     		mov	r3, r0
 3050 0166 7B60     		str	r3, [r7, #4]
 562:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 3051              		.loc 1 562 0
 3052 0168 304B     		ldr	r3, .L155+32
 3053 016a 1B88     		ldrh	r3, [r3]
 3054 016c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 65


 3055 016e 1846     		mov	r0, r3
 3056 0170 FFF7FEFF 		bl	__aeabi_i2d
 3057 0174 0446     		mov	r4, r0
 3058 0176 0D46     		mov	r5, r1
 3059 0178 7868     		ldr	r0, [r7, #4]
 3060 017a FFF7FEFF 		bl	__aeabi_i2d
 3061 017e 0246     		mov	r2, r0
 3062 0180 0B46     		mov	r3, r1
 3063 0182 1046     		mov	r0, r2
 3064 0184 1946     		mov	r1, r3
 3065 0186 D7E90423 		ldrd	r2, [r7, #16]
 3066 018a FFF7FEFF 		bl	__aeabi_dmul
 3067 018e 0246     		mov	r2, r0
 3068 0190 0B46     		mov	r3, r1
 3069 0192 2046     		mov	r0, r4
 3070 0194 2946     		mov	r1, r5
 3071 0196 FFF7FEFF 		bl	__aeabi_dadd
 3072 019a 0246     		mov	r2, r0
 3073 019c 0B46     		mov	r3, r1
 3074 019e 1046     		mov	r0, r2
 3075 01a0 1946     		mov	r1, r3
 3076 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 3077 01a6 0346     		mov	r3, r0
 3078 01a8 9AB2     		uxth	r2, r3
 3079 01aa 204B     		ldr	r3, .L155+32
 3080 01ac 1A80     		strh	r2, [r3]	@ movhi
 563:.\main.c      ****     
 564:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 3081              		.loc 1 564 0
 3082 01ae 1F4B     		ldr	r3, .L155+32
 3083 01b0 1B88     		ldrh	r3, [r3]
 3084 01b2 1BB2     		sxth	r3, r3
 3085 01b4 002B     		cmp	r3, #0
 3086 01b6 02DA     		bge	.L151
 3087              		.loc 1 564 0 is_stmt 0 discriminator 1
 3088 01b8 1C4B     		ldr	r3, .L155+32
 3089 01ba 0022     		movs	r2, #0
 3090 01bc 1A80     		strh	r2, [r3]	@ movhi
 3091              	.L151:
 565:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 3092              		.loc 1 565 0 is_stmt 1
 3093 01be 194B     		ldr	r3, .L155+24
 3094 01c0 1B88     		ldrh	r3, [r3]
 3095 01c2 1BB2     		sxth	r3, r3
 3096 01c4 002B     		cmp	r3, #0
 3097 01c6 02DA     		bge	.L152
 3098              		.loc 1 565 0 is_stmt 0 discriminator 1
 3099 01c8 164B     		ldr	r3, .L155+24
 3100 01ca 0022     		movs	r2, #0
 3101 01cc 1A80     		strh	r2, [r3]	@ movhi
 3102              	.L152:
 566:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 3103              		.loc 1 566 0 is_stmt 1
 3104 01ce 174B     		ldr	r3, .L155+32
 3105 01d0 1B88     		ldrh	r3, [r3]
 3106 01d2 1BB2     		sxth	r3, r3
 3107 01d4 642B     		cmp	r3, #100
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 66


 3108 01d6 02DD     		ble	.L153
 3109              		.loc 1 566 0 is_stmt 0 discriminator 1
 3110 01d8 144B     		ldr	r3, .L155+32
 3111 01da 6422     		movs	r2, #100
 3112 01dc 1A80     		strh	r2, [r3]	@ movhi
 3113              	.L153:
 567:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 3114              		.loc 1 567 0 is_stmt 1
 3115 01de 114B     		ldr	r3, .L155+24
 3116 01e0 1B88     		ldrh	r3, [r3]
 3117 01e2 1BB2     		sxth	r3, r3
 3118 01e4 642B     		cmp	r3, #100
 3119 01e6 02DD     		ble	.L154
 3120              		.loc 1 567 0 is_stmt 0 discriminator 1
 3121 01e8 0E4B     		ldr	r3, .L155+24
 3122 01ea 6422     		movs	r2, #100
 3123 01ec 1A80     		strh	r2, [r3]	@ movhi
 3124              	.L154:
 568:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 3125              		.loc 1 568 0 is_stmt 1
 3126 01ee 0D4B     		ldr	r3, .L155+24
 3127 01f0 1B88     		ldrh	r3, [r3]
 3128 01f2 DBB2     		uxtb	r3, r3
 3129 01f4 1846     		mov	r0, r3
 3130 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 569:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 3131              		.loc 1 569 0
 3132 01fa 0C4B     		ldr	r3, .L155+32
 3133 01fc 1B88     		ldrh	r3, [r3]
 3134 01fe DBB2     		uxtb	r3, r3
 3135 0200 1846     		mov	r0, r3
 3136 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 3137              	.L147:
 570:.\main.c      **** }
 3138              		.loc 1 570 0
 3139 0206 2037     		adds	r7, r7, #32
 3140              		.cfi_def_cfa_offset 16
 3141 0208 BD46     		mov	sp, r7
 3142              		.cfi_def_cfa_register 13
 3143              		@ sp needed
 3144 020a B0BD     		pop	{r4, r5, r7, pc}
 3145              	.L156:
 3146              		.align	2
 3147              	.L155:
 3148 020c 00000000 		.word	flag_calc_wheelspeed
 3149 0210 00000000 		.word	quad_diff1
 3150 0214 00000000 		.word	quad_diff2
 3151 0218 0000F03F 		.word	1072693248
 3152 021c 00002040 		.word	1075838976
 3153 0220 00000000 		.word	leftSpeedLimit
 3154 0224 00000000 		.word	left_duty_cycle
 3155 0228 00000000 		.word	rightSpeedLimit
 3156 022c 00000000 		.word	right_duty_cycle
 3157              		.cfi_endproc
 3158              	.LFE95:
 3159              		.size	Quad_Dec_response, .-Quad_Dec_response
 3160              		.section	.text.trackLine,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 67


 3161              		.align	2
 3162              		.global	trackLine
 3163              		.thumb
 3164              		.thumb_func
 3165              		.type	trackLine, %function
 3166              	trackLine:
 3167              	.LFB96:
 571:.\main.c      **** 
 572:.\main.c      **** void trackLine()
 573:.\main.c      **** {
 3168              		.loc 1 573 0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 8
 3171              		@ frame_needed = 1, uses_anonymous_args = 0
 3172 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3173              		.cfi_def_cfa_offset 24
 3174              		.cfi_offset 4, -24
 3175              		.cfi_offset 5, -20
 3176              		.cfi_offset 7, -16
 3177              		.cfi_offset 8, -12
 3178              		.cfi_offset 9, -8
 3179              		.cfi_offset 14, -4
 3180 0004 82B0     		sub	sp, sp, #8
 3181              		.cfi_def_cfa_offset 32
 3182 0006 00AF     		add	r7, sp, #0
 3183              		.cfi_def_cfa_register 7
 574:.\main.c      ****     //read the value of the three central-front sensors
 575:.\main.c      ****     
 576:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3184              		.loc 1 576 0
 3185 0008 FFF7FEFF 		bl	NLSens_out_Read
 3186 000c 0346     		mov	r3, r0
 3187 000e FB71     		strb	r3, [r7, #7]
 577:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3188              		.loc 1 577 0
 3189 0010 FFF7FEFF 		bl	NRSens_out_Read
 3190 0014 0346     		mov	r3, r0
 3191 0016 BB71     		strb	r3, [r7, #6]
 578:.\main.c      ****     uint8 mid = MSens_out_Read();
 3192              		.loc 1 578 0
 3193 0018 FFF7FEFF 		bl	MSens_out_Read
 3194 001c 0346     		mov	r3, r0
 3195 001e 7B71     		strb	r3, [r7, #5]
 579:.\main.c      ****     //if only the left one, hard left
 580:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 3196              		.loc 1 580 0
 3197 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3198 0022 002B     		cmp	r3, #0
 3199 0024 27D0     		beq	.L158
 3200              		.loc 1 580 0 is_stmt 0 discriminator 1
 3201 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3202 0028 002B     		cmp	r3, #0
 3203 002a 24D1     		bne	.L158
 3204              		.loc 1 580 0 discriminator 2
 3205 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3206 002e 002B     		cmp	r3, #0
 3207 0030 21D1     		bne	.L158
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 68


 581:.\main.c      ****     {
 582:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 3208              		.loc 1 582 0 is_stmt 1
 3209 0032 454B     		ldr	r3, .L163
 3210 0034 D3E90023 		ldrd	r2, [r3]
 3211 0038 1046     		mov	r0, r2
 3212 003a 1946     		mov	r1, r3
 3213 003c 4FF00002 		mov	r2, #0
 3214 0040 424B     		ldr	r3, .L163+4
 3215 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3216 0046 0246     		mov	r2, r0
 3217 0048 0B46     		mov	r3, r1
 3218 004a 1446     		mov	r4, r2
 3219 004c 1D46     		mov	r5, r3
 3220 004e 3E4B     		ldr	r3, .L163
 3221 0050 D3E90023 		ldrd	r2, [r3]
 3222 0054 9046     		mov	r8, r2
 3223 0056 83F00049 		eor	r9, r3, #-2147483648
 3224 005a 4046     		mov	r0, r8
 3225 005c 4946     		mov	r1, r9
 3226 005e 4FF00002 		mov	r2, #0
 3227 0062 3A4B     		ldr	r3, .L163+4
 3228 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3229 0068 0246     		mov	r2, r0
 3230 006a 0B46     		mov	r3, r1
 3231 006c 2046     		mov	r0, r4
 3232 006e 2946     		mov	r1, r5
 3233 0070 FFF7FEFF 		bl	setSpeed
 3234 0074 63E0     		b	.L157
 3235              	.L158:
 583:.\main.c      ****     }
 584:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3236              		.loc 1 584 0
 3237 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3238 0078 002B     		cmp	r3, #0
 3239 007a 11D0     		beq	.L160
 3240              		.loc 1 584 0 is_stmt 0 discriminator 1
 3241 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3242 007e 002B     		cmp	r3, #0
 3243 0080 0ED0     		beq	.L160
 3244              		.loc 1 584 0 discriminator 2
 3245 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3246 0084 002B     		cmp	r3, #0
 3247 0086 0BD1     		bne	.L160
 585:.\main.c      ****     {
 586:.\main.c      ****         setSpeed(speed, 0);
 3248              		.loc 1 586 0 is_stmt 1
 3249 0088 2F4B     		ldr	r3, .L163
 3250 008a D3E90023 		ldrd	r2, [r3]
 3251 008e 1046     		mov	r0, r2
 3252 0090 1946     		mov	r1, r3
 3253 0092 4FF00002 		mov	r2, #0
 3254 0096 4FF00003 		mov	r3, #0
 3255 009a FFF7FEFF 		bl	setSpeed
 3256 009e 4EE0     		b	.L157
 3257              	.L160:
 587:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 69


 588:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3258              		.loc 1 588 0
 3259 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3260 00a2 002B     		cmp	r3, #0
 3261 00a4 0FD0     		beq	.L161
 3262              		.loc 1 588 0 is_stmt 0 discriminator 1
 3263 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3264 00a8 002B     		cmp	r3, #0
 3265 00aa 0CD0     		beq	.L161
 3266              		.loc 1 588 0 discriminator 2
 3267 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3268 00ae 002B     		cmp	r3, #0
 3269 00b0 09D1     		bne	.L161
 589:.\main.c      ****     {
 590:.\main.c      ****         setSpeed(0, speed);
 3270              		.loc 1 590 0 is_stmt 1
 3271 00b2 254B     		ldr	r3, .L163
 3272 00b4 D3E90023 		ldrd	r2, [r3]
 3273 00b8 4FF00000 		mov	r0, #0
 3274 00bc 4FF00001 		mov	r1, #0
 3275 00c0 FFF7FEFF 		bl	setSpeed
 3276 00c4 3BE0     		b	.L157
 3277              	.L161:
 591:.\main.c      ****     }
 592:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3278              		.loc 1 592 0
 3279 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3280 00c8 002B     		cmp	r3, #0
 3281 00ca 27D0     		beq	.L162
 3282              		.loc 1 592 0 is_stmt 0 discriminator 1
 3283 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3284 00ce 002B     		cmp	r3, #0
 3285 00d0 24D1     		bne	.L162
 3286              		.loc 1 592 0 discriminator 2
 3287 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3288 00d4 002B     		cmp	r3, #0
 3289 00d6 21D1     		bne	.L162
 593:.\main.c      ****     {
 594:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 3290              		.loc 1 594 0 is_stmt 1
 3291 00d8 1B4B     		ldr	r3, .L163
 3292 00da D3E90023 		ldrd	r2, [r3]
 3293 00de 1446     		mov	r4, r2
 3294 00e0 83F00045 		eor	r5, r3, #-2147483648
 3295 00e4 2046     		mov	r0, r4
 3296 00e6 2946     		mov	r1, r5
 3297 00e8 4FF00002 		mov	r2, #0
 3298 00ec 174B     		ldr	r3, .L163+4
 3299 00ee FFF7FEFF 		bl	__aeabi_ddiv
 3300 00f2 0246     		mov	r2, r0
 3301 00f4 0B46     		mov	r3, r1
 3302 00f6 1446     		mov	r4, r2
 3303 00f8 1D46     		mov	r5, r3
 3304 00fa 134B     		ldr	r3, .L163
 3305 00fc D3E90023 		ldrd	r2, [r3]
 3306 0100 1046     		mov	r0, r2
 3307 0102 1946     		mov	r1, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 70


 3308 0104 4FF00002 		mov	r2, #0
 3309 0108 104B     		ldr	r3, .L163+4
 3310 010a FFF7FEFF 		bl	__aeabi_ddiv
 3311 010e 0246     		mov	r2, r0
 3312 0110 0B46     		mov	r3, r1
 3313 0112 2046     		mov	r0, r4
 3314 0114 2946     		mov	r1, r5
 3315 0116 FFF7FEFF 		bl	setSpeed
 3316 011a 10E0     		b	.L157
 3317              	.L162:
 595:.\main.c      ****     }
 596:.\main.c      ****     else if (mid && !nr && !nl)
 3318              		.loc 1 596 0
 3319 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3320 011e 002B     		cmp	r3, #0
 3321 0120 0DD0     		beq	.L157
 3322              		.loc 1 596 0 is_stmt 0 discriminator 1
 3323 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3324 0124 002B     		cmp	r3, #0
 3325 0126 0AD1     		bne	.L157
 3326              		.loc 1 596 0 discriminator 2
 3327 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3328 012a 002B     		cmp	r3, #0
 3329 012c 07D1     		bne	.L157
 597:.\main.c      ****     {
 598:.\main.c      ****         setSpeed(speed,speed);
 3330              		.loc 1 598 0 is_stmt 1
 3331 012e 064B     		ldr	r3, .L163
 3332 0130 D3E90001 		ldrd	r0, [r3]
 3333 0134 044B     		ldr	r3, .L163
 3334 0136 D3E90023 		ldrd	r2, [r3]
 3335 013a FFF7FEFF 		bl	setSpeed
 3336              	.L157:
 599:.\main.c      ****     }
 600:.\main.c      ****    // else if (!mid && !nr && !nl)
 601:.\main.c      ****     //{
 602:.\main.c      ****         //setSpeed(0,0);
 603:.\main.c      ****     //}
 604:.\main.c      **** }
 3337              		.loc 1 604 0
 3338 013e 0837     		adds	r7, r7, #8
 3339              		.cfi_def_cfa_offset 24
 3340 0140 BD46     		mov	sp, r7
 3341              		.cfi_def_cfa_register 13
 3342              		@ sp needed
 3343 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3344              	.L164:
 3345 0146 00BF     		.align	2
 3346              	.L163:
 3347 0148 00000000 		.word	speed
 3348 014c 0000F83F 		.word	1073217536
 3349              		.cfi_endproc
 3350              	.LFE96:
 3351              		.size	trackLine, .-trackLine
 3352              		.global	leftTurnCount
 3353              		.bss
 3354              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 71


 3355              		.type	leftTurnCount, %object
 3356              		.size	leftTurnCount, 2
 3357              	leftTurnCount:
 3358 0cc0 0000     		.space	2
 3359              		.global	rightTurnCount
 3360              		.align	1
 3361              		.type	rightTurnCount, %object
 3362              		.size	rightTurnCount, 2
 3363              	rightTurnCount:
 3364 0cc2 0000     		.space	2
 3365              		.section	.text.trackLineZ,"ax",%progbits
 3366              		.align	2
 3367              		.global	trackLineZ
 3368              		.thumb
 3369              		.thumb_func
 3370              		.type	trackLineZ, %function
 3371              	trackLineZ:
 3372              	.LFB97:
 605:.\main.c      **** uint16 leftTurnCount = 0;
 606:.\main.c      **** uint16 rightTurnCount = 0;
 607:.\main.c      **** void trackLineZ()
 608:.\main.c      **** {
 3373              		.loc 1 608 0
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 8
 3376              		@ frame_needed = 1, uses_anonymous_args = 0
 3377 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3378              		.cfi_def_cfa_offset 24
 3379              		.cfi_offset 4, -24
 3380              		.cfi_offset 5, -20
 3381              		.cfi_offset 7, -16
 3382              		.cfi_offset 8, -12
 3383              		.cfi_offset 9, -8
 3384              		.cfi_offset 14, -4
 3385 0004 82B0     		sub	sp, sp, #8
 3386              		.cfi_def_cfa_offset 32
 3387 0006 00AF     		add	r7, sp, #0
 3388              		.cfi_def_cfa_register 7
 609:.\main.c      ****     //read the value of the three central-front sensors
 610:.\main.c      ****     
 611:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3389              		.loc 1 611 0
 3390 0008 FFF7FEFF 		bl	NLSens_out_Read
 3391 000c 0346     		mov	r3, r0
 3392 000e FB71     		strb	r3, [r7, #7]
 612:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3393              		.loc 1 612 0
 3394 0010 FFF7FEFF 		bl	NRSens_out_Read
 3395 0014 0346     		mov	r3, r0
 3396 0016 BB71     		strb	r3, [r7, #6]
 613:.\main.c      ****     uint8 mid = MSens_out_Read();
 3397              		.loc 1 613 0
 3398 0018 FFF7FEFF 		bl	MSens_out_Read
 3399 001c 0346     		mov	r3, r0
 3400 001e 7B71     		strb	r3, [r7, #5]
 614:.\main.c      ****     
 615:.\main.c      ****         //if only the left one, hard left
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 72


 616:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 3401              		.loc 1 616 0
 3402 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3403 0022 002B     		cmp	r3, #0
 3404 0024 27D0     		beq	.L166
 3405              		.loc 1 616 0 is_stmt 0 discriminator 1
 3406 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3407 0028 002B     		cmp	r3, #0
 3408 002a 24D1     		bne	.L166
 3409              		.loc 1 616 0 discriminator 2
 3410 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3411 002e 002B     		cmp	r3, #0
 3412 0030 21D1     		bne	.L166
 617:.\main.c      ****     {
 618:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 3413              		.loc 1 618 0 is_stmt 1
 3414 0032 514B     		ldr	r3, .L171+8
 3415 0034 D3E90023 		ldrd	r2, [r3]
 3416 0038 1046     		mov	r0, r2
 3417 003a 1946     		mov	r1, r3
 3418 003c 4CA3     		adr	r3, .L171
 3419 003e D3E90023 		ldrd	r2, [r3]
 3420 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3421 0046 0246     		mov	r2, r0
 3422 0048 0B46     		mov	r3, r1
 3423 004a 1446     		mov	r4, r2
 3424 004c 1D46     		mov	r5, r3
 3425 004e 4A4B     		ldr	r3, .L171+8
 3426 0050 D3E90023 		ldrd	r2, [r3]
 3427 0054 9046     		mov	r8, r2
 3428 0056 83F00049 		eor	r9, r3, #-2147483648
 3429 005a 4046     		mov	r0, r8
 3430 005c 4946     		mov	r1, r9
 3431 005e 44A3     		adr	r3, .L171
 3432 0060 D3E90023 		ldrd	r2, [r3]
 3433 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3434 0068 0246     		mov	r2, r0
 3435 006a 0B46     		mov	r3, r1
 3436 006c 2046     		mov	r0, r4
 3437 006e 2946     		mov	r1, r5
 3438 0070 FFF7FEFF 		bl	setSpeed
 3439 0074 75E0     		b	.L165
 3440              	.L166:
 619:.\main.c      ****     }
 620:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3441              		.loc 1 620 0
 3442 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3443 0078 002B     		cmp	r3, #0
 3444 007a 19D0     		beq	.L168
 3445              		.loc 1 620 0 is_stmt 0 discriminator 1
 3446 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3447 007e 002B     		cmp	r3, #0
 3448 0080 16D0     		beq	.L168
 3449              		.loc 1 620 0 discriminator 2
 3450 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3451 0084 002B     		cmp	r3, #0
 3452 0086 13D1     		bne	.L168
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 73


 621:.\main.c      ****     {
 622:.\main.c      ****         setSpeed(speed,speed / 1.5);
 3453              		.loc 1 622 0 is_stmt 1
 3454 0088 3B4B     		ldr	r3, .L171+8
 3455 008a D3E90045 		ldrd	r4, [r3]
 3456 008e 3A4B     		ldr	r3, .L171+8
 3457 0090 D3E90023 		ldrd	r2, [r3]
 3458 0094 1046     		mov	r0, r2
 3459 0096 1946     		mov	r1, r3
 3460 0098 4FF00002 		mov	r2, #0
 3461 009c 374B     		ldr	r3, .L171+12
 3462 009e FFF7FEFF 		bl	__aeabi_ddiv
 3463 00a2 0246     		mov	r2, r0
 3464 00a4 0B46     		mov	r3, r1
 3465 00a6 2046     		mov	r0, r4
 3466 00a8 2946     		mov	r1, r5
 3467 00aa FFF7FEFF 		bl	setSpeed
 3468 00ae 58E0     		b	.L165
 3469              	.L168:
 623:.\main.c      ****     }
 624:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3470              		.loc 1 624 0
 3471 00b0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3472 00b2 002B     		cmp	r3, #0
 3473 00b4 19D0     		beq	.L169
 3474              		.loc 1 624 0 is_stmt 0 discriminator 1
 3475 00b6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3476 00b8 002B     		cmp	r3, #0
 3477 00ba 16D0     		beq	.L169
 3478              		.loc 1 624 0 discriminator 2
 3479 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3480 00be 002B     		cmp	r3, #0
 3481 00c0 13D1     		bne	.L169
 625:.\main.c      ****     {
 626:.\main.c      ****         setSpeed(speed / 1.5,speed);
 3482              		.loc 1 626 0 is_stmt 1
 3483 00c2 2D4B     		ldr	r3, .L171+8
 3484 00c4 D3E90023 		ldrd	r2, [r3]
 3485 00c8 1046     		mov	r0, r2
 3486 00ca 1946     		mov	r1, r3
 3487 00cc 4FF00002 		mov	r2, #0
 3488 00d0 2A4B     		ldr	r3, .L171+12
 3489 00d2 FFF7FEFF 		bl	__aeabi_ddiv
 3490 00d6 0246     		mov	r2, r0
 3491 00d8 0B46     		mov	r3, r1
 3492 00da 1046     		mov	r0, r2
 3493 00dc 1946     		mov	r1, r3
 3494 00de 264B     		ldr	r3, .L171+8
 3495 00e0 D3E90023 		ldrd	r2, [r3]
 3496 00e4 FFF7FEFF 		bl	setSpeed
 3497 00e8 3BE0     		b	.L165
 3498              	.L169:
 627:.\main.c      ****     }
 628:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3499              		.loc 1 628 0
 3500 00ea BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3501 00ec 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 74


 3502 00ee 27D0     		beq	.L170
 3503              		.loc 1 628 0 is_stmt 0 discriminator 1
 3504 00f0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3505 00f2 002B     		cmp	r3, #0
 3506 00f4 24D1     		bne	.L170
 3507              		.loc 1 628 0 discriminator 2
 3508 00f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3509 00f8 002B     		cmp	r3, #0
 3510 00fa 21D1     		bne	.L170
 629:.\main.c      ****     {
 630:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 3511              		.loc 1 630 0 is_stmt 1
 3512 00fc 1E4B     		ldr	r3, .L171+8
 3513 00fe D3E90023 		ldrd	r2, [r3]
 3514 0102 1446     		mov	r4, r2
 3515 0104 83F00045 		eor	r5, r3, #-2147483648
 3516 0108 2046     		mov	r0, r4
 3517 010a 2946     		mov	r1, r5
 3518 010c 18A3     		adr	r3, .L171
 3519 010e D3E90023 		ldrd	r2, [r3]
 3520 0112 FFF7FEFF 		bl	__aeabi_ddiv
 3521 0116 0246     		mov	r2, r0
 3522 0118 0B46     		mov	r3, r1
 3523 011a 1446     		mov	r4, r2
 3524 011c 1D46     		mov	r5, r3
 3525 011e 164B     		ldr	r3, .L171+8
 3526 0120 D3E90023 		ldrd	r2, [r3]
 3527 0124 1046     		mov	r0, r2
 3528 0126 1946     		mov	r1, r3
 3529 0128 11A3     		adr	r3, .L171
 3530 012a D3E90023 		ldrd	r2, [r3]
 3531 012e FFF7FEFF 		bl	__aeabi_ddiv
 3532 0132 0246     		mov	r2, r0
 3533 0134 0B46     		mov	r3, r1
 3534 0136 2046     		mov	r0, r4
 3535 0138 2946     		mov	r1, r5
 3536 013a FFF7FEFF 		bl	setSpeed
 3537 013e 10E0     		b	.L165
 3538              	.L170:
 631:.\main.c      ****     }
 632:.\main.c      ****     else if (mid && !nr && !nl)
 3539              		.loc 1 632 0
 3540 0140 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3541 0142 002B     		cmp	r3, #0
 3542 0144 0DD0     		beq	.L165
 3543              		.loc 1 632 0 is_stmt 0 discriminator 1
 3544 0146 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3545 0148 002B     		cmp	r3, #0
 3546 014a 0AD1     		bne	.L165
 3547              		.loc 1 632 0 discriminator 2
 3548 014c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3549 014e 002B     		cmp	r3, #0
 3550 0150 07D1     		bne	.L165
 633:.\main.c      ****     {
 634:.\main.c      ****         setSpeed(speed,speed);
 3551              		.loc 1 634 0 is_stmt 1
 3552 0152 094B     		ldr	r3, .L171+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 75


 3553 0154 D3E90001 		ldrd	r0, [r3]
 3554 0158 074B     		ldr	r3, .L171+8
 3555 015a D3E90023 		ldrd	r2, [r3]
 3556 015e FFF7FEFF 		bl	setSpeed
 3557              	.L165:
 635:.\main.c      ****     }
 636:.\main.c      ****     //else setSpeed(speed, speed);
 637:.\main.c      ****   
 638:.\main.c      ****    // else if (!mid && !nr && !nl)
 639:.\main.c      ****     //{
 640:.\main.c      ****         //setSpeed(0,0);
 641:.\main.c      ****     //}
 642:.\main.c      ****     
 643:.\main.c      ****     
 644:.\main.c      **** //    //if only the left one, hard left
 645:.\main.c      **** //    if(nl && !nr && !mid)// && trackTurnCount > 0)
 646:.\main.c      **** //    {
 647:.\main.c      **** //         if(leftTurnCount < 500)
 648:.\main.c      **** //         {   
 649:.\main.c      **** //            setSpeed(speed / 1.5,-speed / 1.5);
 650:.\main.c      **** //            leftTurnCount++;
 651:.\main.c      **** //         }
 652:.\main.c      **** //        else setSpeed(speed, speed*0.7);
 653:.\main.c      **** //    }
 654:.\main.c      **** //    else if(nl && mid && !nr)   //if centre/middle, soft left
 655:.\main.c      **** //    {
 656:.\main.c      **** //         leftTurnCount = 0;
 657:.\main.c      **** //         rightTurnCount = 0;
 658:.\main.c      **** //        //setSpeed(speed,speed / 1.5);
 659:.\main.c      **** //        setSpeed(speed, speed*0.7);
 660:.\main.c      **** //    }
 661:.\main.c      **** //    else if (nr && mid && !nl)//if centre/right, soft right
 662:.\main.c      **** //    {
 663:.\main.c      **** //         leftTurnCount = 0;
 664:.\main.c      **** //         rightTurnCount = 0;
 665:.\main.c      **** //       // setSpeed(speed / 1.5,speed);
 666:.\main.c      **** //        setSpeed(speed*0.7,speed);
 667:.\main.c      **** //    }
 668:.\main.c      **** //   else if (nr && !mid && !nl)    //if only right, hard right
 669:.\main.c      **** //    {
 670:.\main.c      **** //        if(rightTurnCount < 500)
 671:.\main.c      **** //        {  
 672:.\main.c      **** //            setSpeed(-speed / 1.5,speed / 1.5);
 673:.\main.c      **** //            rightTurnCount++;
 674:.\main.c      **** //        }
 675:.\main.c      **** //        else setSpeed(speed*0.7,speed);
 676:.\main.c      **** //    }
 677:.\main.c      **** //    else if (mid && !nr && !nl)
 678:.\main.c      **** //    {
 679:.\main.c      **** //        leftTurnCount = 0;
 680:.\main.c      **** //        rightTurnCount = 0;
 681:.\main.c      **** //        setSpeed(speed,speed);
 682:.\main.c      **** //    }
 683:.\main.c      **** //    //else setSpeed(speed, speed);
 684:.\main.c      **** //  
 685:.\main.c      **** //   // else if (!mid && !nr && !nl)
 686:.\main.c      **** //    //{
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 76


 687:.\main.c      **** //        //setSpeed(0,0);
 688:.\main.c      **** //    //}
 689:.\main.c      **** }
 3558              		.loc 1 689 0
 3559 0162 0837     		adds	r7, r7, #8
 3560              		.cfi_def_cfa_offset 24
 3561 0164 BD46     		mov	sp, r7
 3562              		.cfi_def_cfa_register 13
 3563              		@ sp needed
 3564 0166 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3565              	.L172:
 3566 016a 00BFAFF3 		.align	3
 3566      0080
 3567              	.L171:
 3568 0170 9A999999 		.word	-1717986918
 3569 0174 9999F93F 		.word	1073322393
 3570 0178 00000000 		.word	speed
 3571 017c 0000F83F 		.word	1073217536
 3572              		.cfi_endproc
 3573              	.LFE97:
 3574              		.size	trackLineZ, .-trackLineZ
 3575              		.section	.text.trackLineU,"ax",%progbits
 3576              		.align	2
 3577              		.global	trackLineU
 3578              		.thumb
 3579              		.thumb_func
 3580              		.type	trackLineU, %function
 3581              	trackLineU:
 3582              	.LFB98:
 690:.\main.c      **** 
 691:.\main.c      **** 
 692:.\main.c      **** void trackLineU()
 693:.\main.c      **** {
 3583              		.loc 1 693 0
 3584              		.cfi_startproc
 3585              		@ args = 0, pretend = 0, frame = 0
 3586              		@ frame_needed = 1, uses_anonymous_args = 0
 3587              		@ link register save eliminated.
 3588 0000 80B4     		push	{r7}
 3589              		.cfi_def_cfa_offset 4
 3590              		.cfi_offset 7, -4
 3591 0002 00AF     		add	r7, sp, #0
 3592              		.cfi_def_cfa_register 7
 694:.\main.c      **** //    //read the value of the three central-front sensors
 695:.\main.c      **** //    
 696:.\main.c      **** //    uint8 nl = NLSens_out_Read();
 697:.\main.c      **** //    uint8 fl = FLSens_out_Read();
 698:.\main.c      **** //    uint8 nr = NRSens_out_Read();
 699:.\main.c      **** //    uint8 fr = FRSens_out_Read();
 700:.\main.c      **** //    uint8 mid = MSens_out_Read();
 701:.\main.c      **** //    if (fl && mid && fr) // T intersection
 702:.\main.c      **** //    {
 703:.\main.c      **** //        // not implemented
 704:.\main.c      **** //    }
 705:.\main.c      **** //    else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 706:.\main.c      **** //    {
 707:.\main.c      **** //        setSpeed(speed, speed);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 77


 708:.\main.c      **** //    }
 709:.\main.c      **** //    else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 710:.\main.c      **** //    {
 711:.\main.c      **** //        setSpeed(speed, speed);
 712:.\main.c      **** //    }
 713:.\main.c      **** //    else if(nl && !nr && !mid) //if only the left one, hard left
 714:.\main.c      **** //    {
 715:.\main.c      **** //         if(hardTurnCount < 50)
 716:.\main.c      **** //         {   
 717:.\main.c      **** //            setSpeed(speed / 1.5,-speed / 1.5);
 718:.\main.c      **** //            hardTurnCount++;
 719:.\main.c      **** //         }
 720:.\main.c      **** //        else setSpeed(speed, speed);
 721:.\main.c      **** //    }
 722:.\main.c      **** //    else if(nl && mid && !nr)   //if centre/middle, soft left
 723:.\main.c      **** //    {
 724:.\main.c      **** //        setSpeed(speed, 0);
 725:.\main.c      **** //        hardTurnCount = 0;
 726:.\main.c      **** //    }
 727:.\main.c      **** //    else if (nr && mid && !nl)//if centre/right, soft right
 728:.\main.c      **** //    {
 729:.\main.c      **** //        setSpeed(0, speed);
 730:.\main.c      **** //        hardTurnCount = 0;
 731:.\main.c      **** //    }
 732:.\main.c      **** //   else if (nr && !mid && !nl)    //if only right, hard right
 733:.\main.c      **** //    {
 734:.\main.c      **** //        if(hardTurnCount < 50)
 735:.\main.c      **** //        {  
 736:.\main.c      **** //            setSpeed(-speed / 1.5,speed / 1.5);
 737:.\main.c      **** //            hardTurnCount++;
 738:.\main.c      **** //        }
 739:.\main.c      **** //        else setSpeed(speed, speed);
 740:.\main.c      **** //    }
 741:.\main.c      **** //    else if (mid && !nr && !nl)
 742:.\main.c      **** //    {
 743:.\main.c      **** //        hardTurnCount = 0;
 744:.\main.c      **** //        setSpeed(speed,speed);
 745:.\main.c      **** //    }
 746:.\main.c      **** //   // else if (!mid && !nr && !nl)
 747:.\main.c      **** //    //{
 748:.\main.c      **** //        //setSpeed(0,0);
 749:.\main.c      **** //    //}
 750:.\main.c      **** //   
 751:.\main.c      **** 
 752:.\main.c      **** }
 3593              		.loc 1 752 0
 3594 0004 BD46     		mov	sp, r7
 3595              		.cfi_def_cfa_register 13
 3596              		@ sp needed
 3597 0006 5DF8047B 		ldr	r7, [sp], #4
 3598              		.cfi_restore 7
 3599              		.cfi_def_cfa_offset 0
 3600 000a 7047     		bx	lr
 3601              		.cfi_endproc
 3602              	.LFE98:
 3603              		.size	trackLineU, .-trackLineU
 3604              		.global	__aeabi_fadd
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 78


 3605              		.section	.rodata
 3606              		.align	2
 3607              	.LC6:
 3608 0058 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3608      65727920 
 3608      566F6C74 
 3608      6167653A 
 3608      2025646D 
 3609              		.section	.text.print_ADC,"ax",%progbits
 3610              		.align	2
 3611              		.global	print_ADC
 3612              		.thumb
 3613              		.thumb_func
 3614              		.type	print_ADC, %function
 3615              	print_ADC:
 3616              	.LFB99:
 753:.\main.c      **** 
 754:.\main.c      **** void print_ADC()
 755:.\main.c      **** {
 3617              		.loc 1 755 0
 3618              		.cfi_startproc
 3619              		@ args = 0, pretend = 0, frame = 24
 3620              		@ frame_needed = 1, uses_anonymous_args = 0
 3621 0000 80B5     		push	{r7, lr}
 3622              		.cfi_def_cfa_offset 8
 3623              		.cfi_offset 7, -8
 3624              		.cfi_offset 14, -4
 3625 0002 86B0     		sub	sp, sp, #24
 3626              		.cfi_def_cfa_offset 32
 3627 0004 00AF     		add	r7, sp, #0
 3628              		.cfi_def_cfa_register 7
 756:.\main.c      ****    //usbPutString("HII\n");
 757:.\main.c      ****     if(flag_receive_ADC == 1)
 3629              		.loc 1 757 0
 3630 0006 274B     		ldr	r3, .L177
 3631 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3632 000a 012B     		cmp	r3, #1
 3633 000c 46D1     		bne	.L174
 3634              	.LBB6:
 758:.\main.c      ****     {
 759:.\main.c      ****         //usbPutString("AAA\r\n");
 760:.\main.c      ****         flag_receive_ADC = 0;
 3635              		.loc 1 760 0
 3636 000e 254B     		ldr	r3, .L177
 3637 0010 0022     		movs	r2, #0
 3638 0012 1A70     		strb	r2, [r3]
 761:.\main.c      ****         
 762:.\main.c      ****        // int8 channel = ADC_
 763:.\main.c      ****         float scalingFactor = 0.972;
 3639              		.loc 1 763 0
 3640 0014 244B     		ldr	r3, .L177+4
 3641 0016 7B61     		str	r3, [r7, #20]	@ float
 764:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3642              		.loc 1 764 0
 3643 0018 244B     		ldr	r3, .L177+8
 3644 001a 1B88     		ldrh	r3, [r3]
 3645 001c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 79


 3646 001e 41F28832 		movw	r2, #5000
 3647 0022 02FB03F3 		mul	r3, r2, r3
 3648 0026 002B     		cmp	r3, #0
 3649 0028 01DA     		bge	.L176
 3650 002a 03F6FF73 		addw	r3, r3, #4095
 3651              	.L176:
 3652 002e 1B13     		asrs	r3, r3, #12
 3653 0030 1846     		mov	r0, r3
 3654 0032 FFF7FEFF 		bl	__aeabi_i2f
 3655 0036 0346     		mov	r3, r0
 3656 0038 1846     		mov	r0, r3
 3657 003a 7969     		ldr	r1, [r7, #20]	@ float
 3658 003c FFF7FEFF 		bl	__aeabi_fmul
 3659 0040 0346     		mov	r3, r0
 3660 0042 1846     		mov	r0, r3
 3661 0044 1946     		mov	r1, r3
 3662 0046 FFF7FEFF 		bl	__aeabi_fadd
 3663 004a 0346     		mov	r3, r0
 3664 004c 1846     		mov	r0, r3
 3665 004e FFF7FEFF 		bl	__aeabi_f2iz
 3666 0052 0346     		mov	r3, r0
 3667 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 765:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3668              		.loc 1 765 0
 3669 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3670 005a 154B     		ldr	r3, .L177+12
 3671 005c 1B88     		ldrh	r3, [r3]
 3672 005e 1BB2     		sxth	r3, r3
 3673 0060 1A44     		add	r2, r2, r3
 3674 0062 144B     		ldr	r3, .L177+16
 3675 0064 1B88     		ldrh	r3, [r3]
 3676 0066 1BB2     		sxth	r3, r3
 3677 0068 1344     		add	r3, r3, r2
 3678 006a 134A     		ldr	r2, .L177+20
 3679 006c 82FB0312 		smull	r1, r2, r2, r3
 3680 0070 DB17     		asrs	r3, r3, #31
 3681 0072 D31A     		subs	r3, r2, r3
 3682 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 766:.\main.c      ****         prevVoltage2 = prevVoltage;
 3683              		.loc 1 766 0
 3684 0076 0E4B     		ldr	r3, .L177+12
 3685 0078 1A88     		ldrh	r2, [r3]
 3686 007a 0E4B     		ldr	r3, .L177+16
 3687 007c 1A80     		strh	r2, [r3]	@ movhi
 767:.\main.c      ****         prevVoltage = converted_val;
 3688              		.loc 1 767 0
 3689 007e 0C4A     		ldr	r2, .L177+12
 3690 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3691 0082 1380     		strh	r3, [r2]	@ movhi
 768:.\main.c      ****         
 769:.\main.c      ****         char result_str[16];
 770:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3692              		.loc 1 770 0
 3693 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3694 0088 3A46     		mov	r2, r7
 3695 008a 1046     		mov	r0, r2
 3696 008c 0B49     		ldr	r1, .L177+24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 80


 3697 008e 1A46     		mov	r2, r3
 3698 0090 FFF7FEFF 		bl	sprintf
 771:.\main.c      ****         
 772:.\main.c      ****         usbPutString(result_str);
 3699              		.loc 1 772 0
 3700 0094 3B46     		mov	r3, r7
 3701 0096 1846     		mov	r0, r3
 3702 0098 FFF7FEFF 		bl	usbPutString
 3703              	.L174:
 3704              	.LBE6:
 773:.\main.c      ****     }
 774:.\main.c      **** }
 3705              		.loc 1 774 0
 3706 009c 1837     		adds	r7, r7, #24
 3707              		.cfi_def_cfa_offset 8
 3708 009e BD46     		mov	sp, r7
 3709              		.cfi_def_cfa_register 13
 3710              		@ sp needed
 3711 00a0 80BD     		pop	{r7, pc}
 3712              	.L178:
 3713 00a2 00BF     		.align	2
 3714              	.L177:
 3715 00a4 00000000 		.word	flag_receive_ADC
 3716 00a8 FED4783F 		.word	1064883454
 3717 00ac 00000000 		.word	adc_result
 3718 00b0 00000000 		.word	prevVoltage
 3719 00b4 00000000 		.word	prevVoltage2
 3720 00b8 56555555 		.word	1431655766
 3721 00bc 58000000 		.word	.LC6
 3722              		.cfi_endproc
 3723              	.LFE99:
 3724              		.size	print_ADC, .-print_ADC
 3725              		.section	.rodata
 3726              		.align	2
 3727              	.LC7:
 3728 0070 52535349 		.ascii	"RSSI:\000"
 3728      3A00
 3729 0076 0000     		.align	2
 3730              	.LC8:
 3731 0078 25640D0A 		.ascii	"%d\015\012\000"
 3731      00
 3732 007d 000000   		.align	2
 3733              	.LC9:
 3734 0080 726F626F 		.ascii	"robot_x:\000"
 3734      745F783A 
 3734      00
 3735 0089 000000   		.align	2
 3736              	.LC10:
 3737 008c 726F626F 		.ascii	"robot_y:\000"
 3737      745F793A 
 3737      00
 3738 0095 000000   		.align	2
 3739              	.LC11:
 3740 0098 726F626F 		.ascii	"robot_dir:\000"
 3740      745F6469 
 3740      723A00
 3741              		.section	.text.print_RF,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 81


 3742              		.align	2
 3743              		.global	print_RF
 3744              		.thumb
 3745              		.thumb_func
 3746              		.type	print_RF, %function
 3747              	print_RF:
 3748              	.LFB100:
 775:.\main.c      **** 
 776:.\main.c      **** void print_RF()
 777:.\main.c      **** {
 3749              		.loc 1 777 0
 3750              		.cfi_startproc
 3751              		@ args = 0, pretend = 0, frame = 16
 3752              		@ frame_needed = 1, uses_anonymous_args = 0
 3753 0000 80B5     		push	{r7, lr}
 3754              		.cfi_def_cfa_offset 8
 3755              		.cfi_offset 7, -8
 3756              		.cfi_offset 14, -4
 3757 0002 84B0     		sub	sp, sp, #16
 3758              		.cfi_def_cfa_offset 24
 3759 0004 00AF     		add	r7, sp, #0
 3760              		.cfi_def_cfa_register 7
 778:.\main.c      ****     if(flag_print_rf == 1)
 3761              		.loc 1 778 0
 3762 0006 254B     		ldr	r3, .L181
 3763 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3764 000a 012B     		cmp	r3, #1
 3765 000c 42D1     		bne	.L179
 3766              	.LBB7:
 779:.\main.c      ****     {
 780:.\main.c      ****         char printString[16];
 781:.\main.c      ****         flag_print_rf = 0;
 3767              		.loc 1 781 0
 3768 000e 234B     		ldr	r3, .L181
 3769 0010 0022     		movs	r2, #0
 3770 0012 1A70     		strb	r2, [r3]
 782:.\main.c      ****         usbPutString("RSSI:");
 3771              		.loc 1 782 0
 3772 0014 2248     		ldr	r0, .L181+4
 3773 0016 FFF7FEFF 		bl	usbPutString
 783:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 3774              		.loc 1 783 0
 3775 001a 224B     		ldr	r3, .L181+8
 3776 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3777 001e 5BB2     		sxtb	r3, r3
 3778 0020 3A46     		mov	r2, r7
 3779 0022 1046     		mov	r0, r2
 3780 0024 2049     		ldr	r1, .L181+12
 3781 0026 1A46     		mov	r2, r3
 3782 0028 FFF7FEFF 		bl	sprintf
 784:.\main.c      ****         usbPutString(printString);
 3783              		.loc 1 784 0
 3784 002c 3B46     		mov	r3, r7
 3785 002e 1846     		mov	r0, r3
 3786 0030 FFF7FEFF 		bl	usbPutString
 785:.\main.c      ****         usbPutString("robot_x:");
 3787              		.loc 1 785 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 82


 3788 0034 1D48     		ldr	r0, .L181+16
 3789 0036 FFF7FEFF 		bl	usbPutString
 786:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 3790              		.loc 1 786 0
 3791 003a 1A4B     		ldr	r3, .L181+8
 3792 003c 5B88     		ldrh	r3, [r3, #2]
 3793 003e 1BB2     		sxth	r3, r3
 3794 0040 3A46     		mov	r2, r7
 3795 0042 1046     		mov	r0, r2
 3796 0044 1849     		ldr	r1, .L181+12
 3797 0046 1A46     		mov	r2, r3
 3798 0048 FFF7FEFF 		bl	sprintf
 787:.\main.c      ****         usbPutString(printString);
 3799              		.loc 1 787 0
 3800 004c 3B46     		mov	r3, r7
 3801 004e 1846     		mov	r0, r3
 3802 0050 FFF7FEFF 		bl	usbPutString
 788:.\main.c      ****         usbPutString("robot_y:");
 3803              		.loc 1 788 0
 3804 0054 1648     		ldr	r0, .L181+20
 3805 0056 FFF7FEFF 		bl	usbPutString
 789:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3806              		.loc 1 789 0
 3807 005a 124B     		ldr	r3, .L181+8
 3808 005c 9B88     		ldrh	r3, [r3, #4]
 3809 005e 1BB2     		sxth	r3, r3
 3810 0060 3A46     		mov	r2, r7
 3811 0062 1046     		mov	r0, r2
 3812 0064 1049     		ldr	r1, .L181+12
 3813 0066 1A46     		mov	r2, r3
 3814 0068 FFF7FEFF 		bl	sprintf
 790:.\main.c      ****         usbPutString(printString);
 3815              		.loc 1 790 0
 3816 006c 3B46     		mov	r3, r7
 3817 006e 1846     		mov	r0, r3
 3818 0070 FFF7FEFF 		bl	usbPutString
 791:.\main.c      ****         usbPutString("robot_dir:");
 3819              		.loc 1 791 0
 3820 0074 0F48     		ldr	r0, .L181+24
 3821 0076 FFF7FEFF 		bl	usbPutString
 792:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3822              		.loc 1 792 0
 3823 007a 0A4B     		ldr	r3, .L181+8
 3824 007c DB88     		ldrh	r3, [r3, #6]
 3825 007e 1BB2     		sxth	r3, r3
 3826 0080 3A46     		mov	r2, r7
 3827 0082 1046     		mov	r0, r2
 3828 0084 0849     		ldr	r1, .L181+12
 3829 0086 1A46     		mov	r2, r3
 3830 0088 FFF7FEFF 		bl	sprintf
 793:.\main.c      ****         usbPutString(printString);
 3831              		.loc 1 793 0
 3832 008c 3B46     		mov	r3, r7
 3833 008e 1846     		mov	r0, r3
 3834 0090 FFF7FEFF 		bl	usbPutString
 3835              	.L179:
 3836              	.LBE7:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 83


 794:.\main.c      ****     }
 795:.\main.c      **** }
 3837              		.loc 1 795 0
 3838 0094 1037     		adds	r7, r7, #16
 3839              		.cfi_def_cfa_offset 8
 3840 0096 BD46     		mov	sp, r7
 3841              		.cfi_def_cfa_register 13
 3842              		@ sp needed
 3843 0098 80BD     		pop	{r7, pc}
 3844              	.L182:
 3845 009a 00BF     		.align	2
 3846              	.L181:
 3847 009c 00000000 		.word	flag_print_rf
 3848 00a0 70000000 		.word	.LC7
 3849 00a4 00000000 		.word	system_state
 3850 00a8 78000000 		.word	.LC8
 3851 00ac 80000000 		.word	.LC9
 3852 00b0 8C000000 		.word	.LC10
 3853 00b4 98000000 		.word	.LC11
 3854              		.cfi_endproc
 3855              	.LFE100:
 3856              		.size	print_RF, .-print_RF
 3857              		.section	.text.readFrontSensors,"ax",%progbits
 3858              		.align	2
 3859              		.global	readFrontSensors
 3860              		.thumb
 3861              		.thumb_func
 3862              		.type	readFrontSensors, %function
 3863              	readFrontSensors:
 3864              	.LFB101:
 796:.\main.c      **** 
 797:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 798:.\main.c      **** {
 3865              		.loc 1 798 0
 3866              		.cfi_startproc
 3867              		@ args = 0, pretend = 0, frame = 8
 3868              		@ frame_needed = 1, uses_anonymous_args = 0
 3869 0000 90B5     		push	{r4, r7, lr}
 3870              		.cfi_def_cfa_offset 12
 3871              		.cfi_offset 4, -12
 3872              		.cfi_offset 7, -8
 3873              		.cfi_offset 14, -4
 3874 0002 83B0     		sub	sp, sp, #12
 3875              		.cfi_def_cfa_offset 24
 3876 0004 00AF     		add	r7, sp, #0
 3877              		.cfi_def_cfa_register 7
 3878 0006 7860     		str	r0, [r7, #4]
 799:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3879              		.loc 1 799 0
 3880 0008 FFF7FEFF 		bl	FLSens_out_Read
 3881 000c 0346     		mov	r3, r0
 3882 000e 1A46     		mov	r2, r3
 3883 0010 7B68     		ldr	r3, [r7, #4]
 3884 0012 1A70     		strb	r2, [r3]
 800:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3885              		.loc 1 800 0
 3886 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 84


 3887 0016 5C1C     		adds	r4, r3, #1
 3888 0018 FFF7FEFF 		bl	NLSens_out_Read
 3889 001c 0346     		mov	r3, r0
 3890 001e 2370     		strb	r3, [r4]
 801:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3891              		.loc 1 801 0
 3892 0020 7B68     		ldr	r3, [r7, #4]
 3893 0022 9C1C     		adds	r4, r3, #2
 3894 0024 FFF7FEFF 		bl	MSens_out_Read
 3895 0028 0346     		mov	r3, r0
 3896 002a 2370     		strb	r3, [r4]
 802:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3897              		.loc 1 802 0
 3898 002c 7B68     		ldr	r3, [r7, #4]
 3899 002e DC1C     		adds	r4, r3, #3
 3900 0030 FFF7FEFF 		bl	NRSens_out_Read
 3901 0034 0346     		mov	r3, r0
 3902 0036 2370     		strb	r3, [r4]
 803:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3903              		.loc 1 803 0
 3904 0038 7B68     		ldr	r3, [r7, #4]
 3905 003a 1C1D     		adds	r4, r3, #4
 3906 003c FFF7FEFF 		bl	FRSens_out_Read
 3907 0040 0346     		mov	r3, r0
 3908 0042 2370     		strb	r3, [r4]
 804:.\main.c      **** }
 3909              		.loc 1 804 0
 3910 0044 0C37     		adds	r7, r7, #12
 3911              		.cfi_def_cfa_offset 12
 3912 0046 BD46     		mov	sp, r7
 3913              		.cfi_def_cfa_register 13
 3914              		@ sp needed
 3915 0048 90BD     		pop	{r4, r7, pc}
 3916              		.cfi_endproc
 3917              	.LFE101:
 3918              		.size	readFrontSensors, .-readFrontSensors
 3919 004a 00BF     		.section	.rodata
 3920 00a3 00       		.align	2
 3921              	.LC12:
 3922 00a4 44656164 		.ascii	"Deadzone entered!\015\012\000"
 3922      7A6F6E65 
 3922      20656E74 
 3922      65726564 
 3922      210D0A00 
 3923              		.section	.text.main,"ax",%progbits
 3924              		.align	2
 3925              		.global	main
 3926              		.thumb
 3927              		.thumb_func
 3928              		.type	main, %function
 3929              	main:
 3930              	.LFB102:
 805:.\main.c      **** 
 806:.\main.c      **** int main()
 807:.\main.c      **** {  
 3931              		.loc 1 807 0
 3932              		.cfi_startproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 85


 3933              		@ args = 0, pretend = 0, frame = 8
 3934              		@ frame_needed = 1, uses_anonymous_args = 0
 3935 0000 80B5     		push	{r7, lr}
 3936              		.cfi_def_cfa_offset 8
 3937              		.cfi_offset 7, -8
 3938              		.cfi_offset 14, -4
 3939 0002 82B0     		sub	sp, sp, #8
 3940              		.cfi_def_cfa_offset 16
 3941 0004 00AF     		add	r7, sp, #0
 3942              		.cfi_def_cfa_register 7
 808:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 809:.\main.c      **** // ----- INITIALIZATIONS ----------
 810:.\main.c      ****     CYGlobalIntEnable;
 3943              		.loc 1 810 0
 3944              	@ 810 ".\main.c" 1
 3945 0006 62B6     		CPSIE   i
 3946              	@ 0 "" 2
 811:.\main.c      ****     if(ENABLE_PWM)
 812:.\main.c      ****     {
 813:.\main.c      ****         PWM_1_Start();// starting the pwm
 3947              		.loc 1 813 0
 3948              		.thumb
 3949 0008 FFF7FEFF 		bl	PWM_1_Start
 814:.\main.c      ****         PWM_2_Start();// starting the pwm
 3950              		.loc 1 814 0
 3951 000c FFF7FEFF 		bl	PWM_2_Start
 815:.\main.c      ****     }
 816:.\main.c      ****     
 817:.\main.c      ****     if(ENABLE_ADC)
 818:.\main.c      ****     {
 819:.\main.c      ****         ADC_Start();
 820:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 821:.\main.c      ****         //ADC_StartConvert();
 822:.\main.c      ****         
 823:.\main.c      ****         //start the ADC timer for software trigger mode
 824:.\main.c      ****         Timer_TS_Start();
 825:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 826:.\main.c      ****     }
 827:.\main.c      ****     
 828:.\main.c      ****     if (ENABLE_QUAD)
 829:.\main.c      ****     {
 830:.\main.c      ****         QuadDec_M1_Start();
 3952              		.loc 1 830 0
 3953 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 831:.\main.c      ****         QuadDec_M2_Start();
 3954              		.loc 1 831 0
 3955 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 832:.\main.c      ****         
 833:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3956              		.loc 1 833 0
 3957 0018 A748     		ldr	r0, .L229
 3958 001a FFF7FEFF 		bl	isr_quad1_StartEx
 834:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3959              		.loc 1 834 0
 3960 001e A748     		ldr	r0, .L229+4
 3961 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 835:.\main.c      ****         
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 86


 836:.\main.c      ****         Timer_1_Start();
 3962              		.loc 1 836 0
 3963 0024 FFF7FEFF 		bl	Timer_1_Start
 837:.\main.c      ****     }
 838:.\main.c      ****     
 839:.\main.c      ****     if(ENABLE_STOP){
 840:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 841:.\main.c      ****         
 842:.\main.c      ****     }
 843:.\main.c      ****     isr_button_StartEx(button);
 3964              		.loc 1 843 0
 3965 0028 A548     		ldr	r0, .L229+8
 3966 002a FFF7FEFF 		bl	isr_button_StartEx
 844:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 3967              		.loc 1 844 0
 3968 002e A548     		ldr	r0, .L229+12
 3969 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 845:.\main.c      **** 
 846:.\main.c      ****     // ------USB SETUP ----------------    
 847:.\main.c      ****     if (USE_USB){    
 848:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3970              		.loc 1 848 0
 3971 0034 0020     		movs	r0, #0
 3972 0036 0121     		movs	r1, #1
 3973 0038 FFF7FEFF 		bl	USBUART_Start
 849:.\main.c      ****         if (USBUART_GetConfiguration())
 3974              		.loc 1 849 0
 3975 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 3976 0040 0346     		mov	r3, r0
 3977 0042 002B     		cmp	r3, #0
 3978 0044 01D0     		beq	.L185
 850:.\main.c      ****             {
 851:.\main.c      ****                  USBUART_CDC_Init();
 3979              		.loc 1 851 0
 3980 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 3981              	.L185:
 852:.\main.c      ****             }
 853:.\main.c      ****     }
 854:.\main.c      ****     
 855:.\main.c      ****     if(BIN_ENABLED){
 3982              		.loc 1 855 0
 3983 004a 9F4B     		ldr	r3, .L229+16
 3984 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3985 004e 002B     		cmp	r3, #0
 3986 0050 01D0     		beq	.L186
 856:.\main.c      ****         changeToRF();
 3987              		.loc 1 856 0
 3988 0052 FFF7FEFF 		bl	changeToRF
 3989              	.L186:
 857:.\main.c      ****     }
 858:.\main.c      ****     
 859:.\main.c      ****     if(BT_ENABLED){
 3990              		.loc 1 859 0
 3991 0056 9D4B     		ldr	r3, .L229+20
 3992 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3993 005a 002B     		cmp	r3, #0
 3994 005c 01D0     		beq	.L187
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 87


 860:.\main.c      ****         changeToBT();
 3995              		.loc 1 860 0
 3996 005e FFF7FEFF 		bl	changeToBT
 3997              	.L187:
 861:.\main.c      ****     }
 862:.\main.c      ****     
 863:.\main.c      ****     uint16 actionDebounce = 0;
 3998              		.loc 1 863 0
 3999 0062 0023     		movs	r3, #0
 4000 0064 FB80     		strh	r3, [r7, #6]	@ movhi
 4001              	.L226:
 4002              	.LBB8:
 864:.\main.c      ****     
 865:.\main.c      ****     //usbPutString("Started");
 866:.\main.c      ****     for(;;)
 867:.\main.c      ****     {
 868:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 869:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 4003              		.loc 1 869 0
 4004 0066 FFF7FEFF 		bl	Quad_Dec_response
 870:.\main.c      ****         if(BIN_ENABLED == 1)
 4005              		.loc 1 870 0
 4006 006a 974B     		ldr	r3, .L229+16
 4007 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4008 006e 012B     		cmp	r3, #1
 4009 0070 03D1     		bne	.L188
 871:.\main.c      ****         {
 872:.\main.c      ****             handle_rx_binary();
 4010              		.loc 1 872 0
 4011 0072 FFF7FEFF 		bl	handle_rx_binary
 873:.\main.c      ****             print_RF();
 4012              		.loc 1 873 0
 4013 0076 FFF7FEFF 		bl	print_RF
 4014              	.L188:
 874:.\main.c      ****         }
 875:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 876:.\main.c      ****         
 877:.\main.c      ****         uint8 frontSensors[5];
 878:.\main.c      ****         readFrontSensors(frontSensors);
 4015              		.loc 1 878 0
 4016 007a 3B46     		mov	r3, r7
 4017 007c 1846     		mov	r0, r3
 4018 007e FFF7FEFF 		bl	readFrontSensors
 879:.\main.c      ****         
 880:.\main.c      ****         switch(track_mode)
 4019              		.loc 1 880 0
 4020 0082 934B     		ldr	r3, .L229+24
 4021 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4022 0086 072B     		cmp	r3, #7
 4023 0088 00F2E680 		bhi	.L189
 4024 008c 01A2     		adr	r2, .L191
 4025 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4026 0092 00BF     		.p2align 2
 4027              	.L191:
 4028 0094 59020000 		.word	.L189+1
 4029 0098 59020000 		.word	.L189+1
 4030 009c 59020000 		.word	.L189+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 88


 4031 00a0 B5000000 		.word	.L194+1
 4032 00a4 59020000 		.word	.L189+1
 4033 00a8 F1000000 		.word	.L196+1
 4034 00ac 17010000 		.word	.L197+1
 4035 00b0 17010000 		.word	.L197+1
 4036              		.p2align 1
 4037              	.L194:
 881:.\main.c      ****         {
 882:.\main.c      ****             case SQUARE_TRACK:
 883:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 4038              		.loc 1 883 0
 4039 00b4 874B     		ldr	r3, .L229+28
 4040 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4041 00b8 012B     		cmp	r3, #1
 4042 00ba 18D0     		beq	.L198
 4043              		.loc 1 883 0 is_stmt 0 discriminator 1
 4044 00bc 854B     		ldr	r3, .L229+28
 4045 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4046 00c0 022B     		cmp	r3, #2
 4047 00c2 14D0     		beq	.L198
 884:.\main.c      ****                 {
 885:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 4048              		.loc 1 885 0 is_stmt 1
 4049 00c4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4050 00c6 012B     		cmp	r3, #1
 4051 00c8 05D1     		bne	.L199
 4052              		.loc 1 885 0 is_stmt 0 discriminator 1
 4053 00ca BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4054 00cc 012B     		cmp	r3, #1
 4055 00ce 02D1     		bne	.L199
 886:.\main.c      ****                         initTurnLeft();
 4056              		.loc 1 886 0 is_stmt 1
 4057 00d0 FFF7FEFF 		bl	initTurnLeft
 4058 00d4 0BE0     		b	.L198
 4059              	.L199:
 887:.\main.c      ****                     }
 888:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 4060              		.loc 1 888 0
 4061 00d6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4062 00d8 012B     		cmp	r3, #1
 4063 00da 05D1     		bne	.L200
 4064              		.loc 1 888 0 is_stmt 0 discriminator 1
 4065 00dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4066 00de 012B     		cmp	r3, #1
 4067 00e0 02D1     		bne	.L200
 889:.\main.c      ****                     {
 890:.\main.c      ****                         initTurnRight();
 4068              		.loc 1 890 0 is_stmt 1
 4069 00e2 FFF7FEFF 		bl	initTurnRight
 4070 00e6 02E0     		b	.L198
 4071              	.L200:
 891:.\main.c      ****                     }
 892:.\main.c      ****                     else inittrackLineZ();
 4072              		.loc 1 892 0
 4073 00e8 FFF7FEFF 		bl	inittrackLineZ
 893:.\main.c      ****                 }
 894:.\main.c      ****             break;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 89


 4074              		.loc 1 894 0
 4075 00ec B4E0     		b	.L189
 4076              	.L198:
 4077 00ee B3E0     		b	.L189
 4078              	.L196:
 895:.\main.c      ****             case NO_TRACK:
 896:.\main.c      ****             break;
 897:.\main.c      ****             case CURVE_TRACK:
 898:.\main.c      ****             break;
 899:.\main.c      ****             case U_TRACK:
 900:.\main.c      ****             break;
 901:.\main.c      ****             case QUAD_STOP:
 902:.\main.c      ****             break;
 903:.\main.c      ****             case RF_STOP:
 904:.\main.c      ****                 if(initial_pos_valid == 1)
 4079              		.loc 1 904 0
 4080 00f0 794B     		ldr	r3, .L229+32
 4081 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4082 00f4 012B     		cmp	r3, #1
 4083 00f6 0DD1     		bne	.L201
 905:.\main.c      ****                 {
 906:.\main.c      ****                     //changeToBT();
 907:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 908:.\main.c      ****                     //changeToRF();
 909:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 4084              		.loc 1 909 0
 4085 00f8 784B     		ldr	r3, .L229+36
 4086 00fa 5A88     		ldrh	r2, [r3, #2]
 4087 00fc 784B     		ldr	r3, .L229+40
 4088 00fe 1A80     		strh	r2, [r3]	@ movhi
 910:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 4089              		.loc 1 910 0
 4090 0100 764B     		ldr	r3, .L229+36
 4091 0102 9A88     		ldrh	r2, [r3, #4]
 4092 0104 774B     		ldr	r3, .L229+44
 4093 0106 1A80     		strh	r2, [r3]	@ movhi
 911:.\main.c      ****                     initial_pos_valid = 2;
 4094              		.loc 1 911 0
 4095 0108 734B     		ldr	r3, .L229+32
 4096 010a 0222     		movs	r2, #2
 4097 010c 1A70     		strb	r2, [r3]
 912:.\main.c      ****                     initForward();
 4098              		.loc 1 912 0
 4099 010e FFF7FEFF 		bl	initForward
 913:.\main.c      ****                 }
 914:.\main.c      ****             break;
 4100              		.loc 1 914 0
 4101 0112 A1E0     		b	.L189
 4102              	.L201:
 4103 0114 A0E0     		b	.L189
 4104              	.L197:
 915:.\main.c      ****             case MAP_TRAVERSE:
 916:.\main.c      ****             case DEST_TEST:
 917:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 4105              		.loc 1 917 0
 4106 0116 6F4B     		ldr	r3, .L229+28
 4107 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 90


 4108 011a 012B     		cmp	r3, #1
 4109 011c 00F09B80 		beq	.L202
 4110              		.loc 1 917 0 is_stmt 0 discriminator 1
 4111 0120 6C4B     		ldr	r3, .L229+28
 4112 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4113 0124 022B     		cmp	r3, #2
 4114 0126 00F09680 		beq	.L202
 4115              		.loc 1 917 0 discriminator 2
 4116 012a 6A4B     		ldr	r3, .L229+28
 4117 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4118 012e 072B     		cmp	r3, #7
 4119 0130 00F09180 		beq	.L202
 4120              	.LBB9:
 918:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 919:.\main.c      ****                     char nextStep = instructions[instructionCount];
 4121              		.loc 1 919 0 is_stmt 1
 4122 0134 6C4B     		ldr	r3, .L229+48
 4123 0136 1B88     		ldrh	r3, [r3]
 4124 0138 1A46     		mov	r2, r3
 4125 013a 6C4B     		ldr	r3, .L229+52
 4126 013c 9B5C     		ldrb	r3, [r3, r2]
 4127 013e 7B71     		strb	r3, [r7, #5]
 920:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 4128              		.loc 1 920 0
 4129 0140 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4130 0142 012B     		cmp	r3, #1
 4131 0144 02D1     		bne	.L203
 4132              		.loc 1 920 0 is_stmt 0 discriminator 1
 4133 0146 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4134 0148 012B     		cmp	r3, #1
 4135 014a 05D0     		beq	.L204
 4136              	.L203:
 4137              		.loc 1 920 0 discriminator 3
 4138 014c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4139 014e 012B     		cmp	r3, #1
 4140 0150 47D1     		bne	.L205
 4141              		.loc 1 920 0 discriminator 4
 4142 0152 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4143 0154 012B     		cmp	r3, #1
 4144 0156 44D1     		bne	.L205
 4145              	.L204:
 921:.\main.c      ****                         if(sensorsDisabled == 0)
 4146              		.loc 1 921 0 is_stmt 1
 4147 0158 654B     		ldr	r3, .L229+56
 4148 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4149 015c 002B     		cmp	r3, #0
 4150 015e 3FD1     		bne	.L206
 922:.\main.c      ****                         {
 923:.\main.c      ****                             actionDebounce++;
 4151              		.loc 1 923 0
 4152 0160 FB88     		ldrh	r3, [r7, #6]
 4153 0162 0133     		adds	r3, r3, #1
 4154 0164 FB80     		strh	r3, [r7, #6]	@ movhi
 924:.\main.c      ****                             if(actionDebounce >= 255)
 4155              		.loc 1 924 0
 4156 0166 FB88     		ldrh	r3, [r7, #6]
 4157 0168 FE2B     		cmp	r3, #254
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 91


 4158 016a 39D9     		bls	.L206
 925:.\main.c      ****                             {
 926:.\main.c      ****                                 sensorsDisabled = 1;
 4159              		.loc 1 926 0
 4160 016c 604B     		ldr	r3, .L229+56
 4161 016e 0122     		movs	r2, #1
 4162 0170 1A70     		strb	r2, [r3]
 927:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 4163              		.loc 1 927 0
 4164 0172 6048     		ldr	r0, .L229+60
 4165 0174 FFF7FEFF 		bl	UART_PutString
 928:.\main.c      ****                                 deadzone = 1;
 4166              		.loc 1 928 0
 4167 0178 5F4B     		ldr	r3, .L229+64
 4168 017a 0122     		movs	r2, #1
 4169 017c 1A70     		strb	r2, [r3]
 929:.\main.c      ****                                 Timer_Deadzone_Start();
 4170              		.loc 1 929 0
 4171 017e FFF7FEFF 		bl	Timer_Deadzone_Start
 930:.\main.c      ****                                 switch(nextStep)
 4172              		.loc 1 930 0
 4173 0182 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4174 0184 4C3B     		subs	r3, r3, #76
 4175 0186 092B     		cmp	r3, #9
 4176 0188 22D8     		bhi	.L227
 4177 018a 01A2     		adr	r2, .L209
 4178 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4179              		.p2align 2
 4180              	.L209:
 4181 0190 BF010000 		.word	.L208+1
 4182 0194 D1010000 		.word	.L227+1
 4183 0198 D1010000 		.word	.L227+1
 4184 019c D1010000 		.word	.L227+1
 4185 01a0 D1010000 		.word	.L227+1
 4186 01a4 D1010000 		.word	.L227+1
 4187 01a8 C5010000 		.word	.L210+1
 4188 01ac B9010000 		.word	.L211+1
 4189 01b0 D1010000 		.word	.L227+1
 4190 01b4 CB010000 		.word	.L212+1
 4191              		.p2align 1
 4192              	.L211:
 931:.\main.c      ****                                 {
 932:.\main.c      ****                                     case 'S':
 933:.\main.c      ****                                         initTrackU();
 4193              		.loc 1 933 0
 4194 01b8 FFF7FEFF 		bl	initTrackU
 934:.\main.c      ****                                         //do nothing
 935:.\main.c      ****                                     break;
 4195              		.loc 1 935 0
 4196 01bc 09E0     		b	.L213
 4197              	.L208:
 936:.\main.c      ****                                     case 'L':
 937:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 938:.\main.c      ****                                         initTurnLeft();
 4198              		.loc 1 938 0
 4199 01be FFF7FEFF 		bl	initTurnLeft
 939:.\main.c      ****                                     break;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 92


 4200              		.loc 1 939 0
 4201 01c2 06E0     		b	.L213
 4202              	.L210:
 940:.\main.c      ****                                     case 'R':
 941:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 942:.\main.c      ****                                         initTurnRight();
 4203              		.loc 1 942 0
 4204 01c4 FFF7FEFF 		bl	initTurnRight
 943:.\main.c      ****                                         
 944:.\main.c      ****                                     break;
 4205              		.loc 1 944 0
 4206 01c8 03E0     		b	.L213
 4207              	.L212:
 945:.\main.c      ****                                     case 'U':
 946:.\main.c      ****                                         // Direction not tracked any more
 947:.\main.c      ****                                         initTurnU();
 4208              		.loc 1 947 0
 4209 01ca FFF7FEFF 		bl	initTurnU
 948:.\main.c      ****                                     break;
 4210              		.loc 1 948 0
 4211 01ce 00E0     		b	.L213
 4212              	.L227:
 949:.\main.c      ****                                     default:
 950:.\main.c      ****                                         //do nothing
 951:.\main.c      ****                                         break;
 4213              		.loc 1 951 0
 4214 01d0 00BF     		nop
 4215              	.L213:
 952:.\main.c      ****                                 }
 953:.\main.c      ****                                 instructionCount++;
 4216              		.loc 1 953 0
 4217 01d2 454B     		ldr	r3, .L229+48
 4218 01d4 1B88     		ldrh	r3, [r3]
 4219 01d6 0133     		adds	r3, r3, #1
 4220 01d8 9AB2     		uxth	r2, r3
 4221 01da 434B     		ldr	r3, .L229+48
 4222 01dc 1A80     		strh	r2, [r3]	@ movhi
 921:.\main.c      ****                         {
 4223              		.loc 1 921 0
 4224 01de 3AE0     		b	.L202
 4225              	.L206:
 4226 01e0 39E0     		b	.L202
 4227              	.L205:
 954:.\main.c      ****                             }
 955:.\main.c      ****                         }
 956:.\main.c      ****                     }
 957:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 4228              		.loc 1 957 0
 4229 01e2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4230 01e4 002B     		cmp	r3, #0
 4231 01e6 31D1     		bne	.L214
 4232              		.loc 1 957 0 is_stmt 0 discriminator 1
 4233 01e8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4234 01ea 002B     		cmp	r3, #0
 4235 01ec 2ED1     		bne	.L214
 4236              		.loc 1 957 0 discriminator 2
 4237 01ee BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 93


 4238 01f0 002B     		cmp	r3, #0
 4239 01f2 2BD1     		bne	.L214
 4240              		.loc 1 957 0 discriminator 3
 4241 01f4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4242 01f6 002B     		cmp	r3, #0
 4243 01f8 28D1     		bne	.L214
 4244              		.loc 1 957 0 discriminator 4
 4245 01fa 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4246 01fc 002B     		cmp	r3, #0
 4247 01fe 25D1     		bne	.L214
 4248              		.loc 1 957 0 discriminator 5
 4249 0200 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4250 0202 552B     		cmp	r3, #85
 4251 0204 22D1     		bne	.L214
 958:.\main.c      ****                     {
 959:.\main.c      ****                         if(sensorsDisabled == 0)
 4252              		.loc 1 959 0 is_stmt 1
 4253 0206 3A4B     		ldr	r3, .L229+56
 4254 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4255 020a 002B     		cmp	r3, #0
 4256 020c 1DD1     		bne	.L215
 960:.\main.c      ****                         {
 961:.\main.c      ****                             actionDebounce++;
 4257              		.loc 1 961 0
 4258 020e FB88     		ldrh	r3, [r7, #6]
 4259 0210 0133     		adds	r3, r3, #1
 4260 0212 FB80     		strh	r3, [r7, #6]	@ movhi
 962:.\main.c      ****                             if(actionDebounce >= 3000)
 4261              		.loc 1 962 0
 4262 0214 FB88     		ldrh	r3, [r7, #6]
 4263 0216 40F6B732 		movw	r2, #2999
 4264 021a 9342     		cmp	r3, r2
 4265 021c 15D9     		bls	.L215
 963:.\main.c      ****                             {
 964:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 4266              		.loc 1 964 0
 4267 021e 3548     		ldr	r0, .L229+60
 4268 0220 FFF7FEFF 		bl	UART_PutString
 965:.\main.c      ****                                 deadzone = 1;
 4269              		.loc 1 965 0
 4270 0224 344B     		ldr	r3, .L229+64
 4271 0226 0122     		movs	r2, #1
 4272 0228 1A70     		strb	r2, [r3]
 966:.\main.c      ****                                 Timer_Deadzone_Start();
 4273              		.loc 1 966 0
 4274 022a FFF7FEFF 		bl	Timer_Deadzone_Start
 967:.\main.c      ****                                 actionDebounce = 0;
 4275              		.loc 1 967 0
 4276 022e 0023     		movs	r3, #0
 4277 0230 FB80     		strh	r3, [r7, #6]	@ movhi
 968:.\main.c      ****                                 sensorsDisabled = 1;
 4278              		.loc 1 968 0
 4279 0232 2F4B     		ldr	r3, .L229+56
 4280 0234 0122     		movs	r2, #1
 4281 0236 1A70     		strb	r2, [r3]
 969:.\main.c      ****                                 initTurnU();
 4282              		.loc 1 969 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 94


 4283 0238 FFF7FEFF 		bl	initTurnU
 970:.\main.c      ****                                 instructionCount++;
 4284              		.loc 1 970 0
 4285 023c 2A4B     		ldr	r3, .L229+48
 4286 023e 1B88     		ldrh	r3, [r3]
 4287 0240 0133     		adds	r3, r3, #1
 4288 0242 9AB2     		uxth	r2, r3
 4289 0244 284B     		ldr	r3, .L229+48
 4290 0246 1A80     		strh	r2, [r3]	@ movhi
 959:.\main.c      ****                         {
 4291              		.loc 1 959 0
 4292 0248 05E0     		b	.L202
 4293              	.L215:
 959:.\main.c      ****                         {
 4294              		.loc 1 959 0 is_stmt 0 discriminator 2
 4295 024a 04E0     		b	.L202
 4296              	.L214:
 971:.\main.c      ****                             }
 972:.\main.c      ****                         }
 973:.\main.c      ****                     }
 974:.\main.c      ****                     else
 975:.\main.c      ****                     {
 976:.\main.c      ****                         inittrackLineZ();
 4297              		.loc 1 976 0 is_stmt 1
 4298 024c FFF7FEFF 		bl	inittrackLineZ
 977:.\main.c      ****                         actionDebounce = 0;
 4299              		.loc 1 977 0
 4300 0250 0023     		movs	r3, #0
 4301 0252 FB80     		strh	r3, [r7, #6]	@ movhi
 4302              	.LBE9:
 978:.\main.c      ****                     }
 979:.\main.c      ****                 }
 980:.\main.c      ****                 break;
 4303              		.loc 1 980 0
 4304 0254 FFE7     		b	.L228
 4305              	.L202:
 4306              	.L228:
 4307 0256 00BF     		nop
 4308              	.L189:
 981:.\main.c      ****         }
 982:.\main.c      ****         
 983:.\main.c      ****         switch(movement_state)
 4309              		.loc 1 983 0
 4310 0258 1E4B     		ldr	r3, .L229+28
 4311 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4312 025c 072B     		cmp	r3, #7
 4313 025e 3FF602AF 		bhi	.L226
 4314 0262 01A2     		adr	r2, .L218
 4315 0264 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4316              		.p2align 2
 4317              	.L218:
 4318 0268 89020000 		.word	.L217+1
 4319 026c 8F020000 		.word	.L219+1
 4320 0270 95020000 		.word	.L220+1
 4321 0274 A1020000 		.word	.L221+1
 4322 0278 A7020000 		.word	.L222+1
 4323 027c AD020000 		.word	.L223+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 95


 4324 0280 B3020000 		.word	.L224+1
 4325 0284 9B020000 		.word	.L225+1
 4326              		.p2align 1
 4327              	.L217:
 984:.\main.c      ****         {
 985:.\main.c      ****             case DRIVE:
 986:.\main.c      ****                 driveForwards();
 4328              		.loc 1 986 0
 4329 0288 FFF7FEFF 		bl	driveForwards
 987:.\main.c      ****             break;
 4330              		.loc 1 987 0
 4331 028c 13E0     		b	.L216
 4332              	.L219:
 988:.\main.c      ****             case LTURN:
 989:.\main.c      ****                 turnLeft();
 4333              		.loc 1 989 0
 4334 028e FFF7FEFF 		bl	turnLeft
 990:.\main.c      ****             break;
 4335              		.loc 1 990 0
 4336 0292 10E0     		b	.L216
 4337              	.L220:
 991:.\main.c      ****             case RTURN:
 992:.\main.c      ****                 turnRight();
 4338              		.loc 1 992 0
 4339 0294 FFF7FEFF 		bl	turnRight
 993:.\main.c      ****             break;
 4340              		.loc 1 993 0
 4341 0298 0DE0     		b	.L216
 4342              	.L225:
 994:.\main.c      ****             case UTURN:
 995:.\main.c      ****                 turnU();
 4343              		.loc 1 995 0
 4344 029a FFF7FEFF 		bl	turnU
 996:.\main.c      ****             break;
 4345              		.loc 1 996 0
 4346 029e 0AE0     		b	.L216
 4347              	.L221:
 997:.\main.c      ****             case STOPPED:
 998:.\main.c      ****                 brakeMotor();
 4348              		.loc 1 998 0
 4349 02a0 FFF7FEFF 		bl	brakeMotor
 999:.\main.c      ****             break;
 4350              		.loc 1 999 0
 4351 02a4 07E0     		b	.L216
 4352              	.L222:
1000:.\main.c      ****             case TRACKING:
1001:.\main.c      ****                 trackLine();
 4353              		.loc 1 1001 0
 4354 02a6 FFF7FEFF 		bl	trackLine
1002:.\main.c      ****             break;
 4355              		.loc 1 1002 0
 4356 02aa 04E0     		b	.L216
 4357              	.L223:
1003:.\main.c      ****             case TRACKING_U:
1004:.\main.c      ****                 trackLineU();
 4358              		.loc 1 1004 0
 4359 02ac FFF7FEFF 		bl	trackLineU
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 96


1005:.\main.c      ****             break;
 4360              		.loc 1 1005 0
 4361 02b0 01E0     		b	.L216
 4362              	.L224:
1006:.\main.c      ****             case TRACKING_SOFT:
1007:.\main.c      ****                 trackLineZ();
 4363              		.loc 1 1007 0
 4364 02b2 FFF7FEFF 		bl	trackLineZ
 4365              	.L216:
 4366              	.LBE8:
1008:.\main.c      ****         }
1009:.\main.c      ****         //handle_usb();        
1010:.\main.c      ****     }   
 4367              		.loc 1 1010 0
 4368 02b6 D6E6     		b	.L226
 4369              	.L230:
 4370              		.align	2
 4371              	.L229:
 4372 02b8 00000000 		.word	isr_quad1
 4373 02bc 00000000 		.word	isr_turn_timer
 4374 02c0 00000000 		.word	button
 4375 02c4 00000000 		.word	isr_deadzone
 4376 02c8 00000000 		.word	BIN_ENABLED
 4377 02cc 00000000 		.word	BT_ENABLED
 4378 02d0 00000000 		.word	track_mode
 4379 02d4 00000000 		.word	movement_state
 4380 02d8 00000000 		.word	initial_pos_valid
 4381 02dc 00000000 		.word	system_state
 4382 02e0 00000000 		.word	initial_x_pos
 4383 02e4 00000000 		.word	initial_y_pos
 4384 02e8 00000000 		.word	instructionCount
 4385 02ec 00000000 		.word	instructions
 4386 02f0 00000000 		.word	sensorsDisabled
 4387 02f4 A4000000 		.word	.LC12
 4388 02f8 00000000 		.word	deadzone
 4389              		.cfi_endproc
 4390              	.LFE102:
 4391              		.size	main, .-main
 4392              		.section	.text.usbPutString,"ax",%progbits
 4393              		.align	2
 4394              		.global	usbPutString
 4395              		.thumb
 4396              		.thumb_func
 4397              		.type	usbPutString, %function
 4398              	usbPutString:
 4399              	.LFB103:
1011:.\main.c      **** }
1012:.\main.c      **** //* ========================================
1013:.\main.c      **** void usbPutString(char *s)
1014:.\main.c      **** {
 4400              		.loc 1 1014 0
 4401              		.cfi_startproc
 4402              		@ args = 0, pretend = 0, frame = 16
 4403              		@ frame_needed = 1, uses_anonymous_args = 0
 4404 0000 80B5     		push	{r7, lr}
 4405              		.cfi_def_cfa_offset 8
 4406              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 97


 4407              		.cfi_offset 14, -4
 4408 0002 84B0     		sub	sp, sp, #16
 4409              		.cfi_def_cfa_offset 24
 4410 0004 00AF     		add	r7, sp, #0
 4411              		.cfi_def_cfa_register 7
 4412 0006 7860     		str	r0, [r7, #4]
1015:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1016:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1017:.\main.c      **** //  length to 62 char (63rd char is a '!')
1018:.\main.c      ****     if (USE_USB && portOpen)    
 4413              		.loc 1 1018 0
 4414 0008 154B     		ldr	r3, .L235
 4415 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4416 000c 002B     		cmp	r3, #0
 4417 000e 23D0     		beq	.L231
 4418              	.LBB10:
1019:.\main.c      ****     {
1020:.\main.c      ****             uint32 cnt = 0;
 4419              		.loc 1 1020 0
 4420 0010 0023     		movs	r3, #0
 4421 0012 FB60     		str	r3, [r7, #12]
1021:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4422              		.loc 1 1021 0
 4423 0014 0AE0     		b	.L233
 4424              	.L234:
1022:.\main.c      ****             {
1023:.\main.c      ****                 cnt++;
 4425              		.loc 1 1023 0
 4426 0016 FB68     		ldr	r3, [r7, #12]
 4427 0018 0133     		adds	r3, r3, #1
 4428 001a FB60     		str	r3, [r7, #12]
1024:.\main.c      ****                 if(cnt == 3000000){
 4429              		.loc 1 1024 0
 4430 001c FB68     		ldr	r3, [r7, #12]
 4431 001e 114A     		ldr	r2, .L235+4
 4432 0020 9342     		cmp	r3, r2
 4433 0022 03D1     		bne	.L233
1025:.\main.c      ****                     portOpen = 0;
 4434              		.loc 1 1025 0
 4435 0024 0E4B     		ldr	r3, .L235
 4436 0026 0022     		movs	r2, #0
 4437 0028 1A70     		strb	r2, [r3]
1026:.\main.c      ****                     return;
 4438              		.loc 1 1026 0
 4439 002a 15E0     		b	.L231
 4440              	.L233:
1021:.\main.c      ****             {
 4441              		.loc 1 1021 0
 4442 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4443 0030 0346     		mov	r3, r0
 4444 0032 002B     		cmp	r3, #0
 4445 0034 EFD0     		beq	.L234
1027:.\main.c      ****                 }
1028:.\main.c      ****             }
1029:.\main.c      ****             s[63]='\0';
 4446              		.loc 1 1029 0
 4447 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 98


 4448 0038 3F33     		adds	r3, r3, #63
 4449 003a 0022     		movs	r2, #0
 4450 003c 1A70     		strb	r2, [r3]
1030:.\main.c      ****             s[62]='!';
 4451              		.loc 1 1030 0
 4452 003e 7B68     		ldr	r3, [r7, #4]
 4453 0040 3E33     		adds	r3, r3, #62
 4454 0042 2122     		movs	r2, #33
 4455 0044 1A70     		strb	r2, [r3]
1031:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4456              		.loc 1 1031 0
 4457 0046 7868     		ldr	r0, [r7, #4]
 4458 0048 FFF7FEFF 		bl	strlen
 4459 004c 0346     		mov	r3, r0
 4460 004e 9BB2     		uxth	r3, r3
 4461 0050 7868     		ldr	r0, [r7, #4]
 4462 0052 1946     		mov	r1, r3
 4463 0054 FFF7FEFF 		bl	USBUART_PutData
 4464              	.L231:
 4465              	.LBE10:
1032:.\main.c      ****     }
1033:.\main.c      **** }
 4466              		.loc 1 1033 0
 4467 0058 1037     		adds	r7, r7, #16
 4468              		.cfi_def_cfa_offset 8
 4469 005a BD46     		mov	sp, r7
 4470              		.cfi_def_cfa_register 13
 4471              		@ sp needed
 4472 005c 80BD     		pop	{r7, pc}
 4473              	.L236:
 4474 005e 00BF     		.align	2
 4475              	.L235:
 4476 0060 00000000 		.word	portOpen
 4477 0064 C0C62D00 		.word	3000000
 4478              		.cfi_endproc
 4479              	.LFE103:
 4480              		.size	usbPutString, .-usbPutString
 4481              		.section	.text.usbPutChar,"ax",%progbits
 4482              		.align	2
 4483              		.global	usbPutChar
 4484              		.thumb
 4485              		.thumb_func
 4486              		.type	usbPutChar, %function
 4487              	usbPutChar:
 4488              	.LFB104:
1034:.\main.c      **** //* ========================================
1035:.\main.c      **** void usbPutChar(char c)
1036:.\main.c      **** {
 4489              		.loc 1 1036 0
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 16
 4492              		@ frame_needed = 1, uses_anonymous_args = 0
 4493 0000 80B5     		push	{r7, lr}
 4494              		.cfi_def_cfa_offset 8
 4495              		.cfi_offset 7, -8
 4496              		.cfi_offset 14, -4
 4497 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 99


 4498              		.cfi_def_cfa_offset 24
 4499 0004 00AF     		add	r7, sp, #0
 4500              		.cfi_def_cfa_register 7
 4501 0006 0346     		mov	r3, r0
 4502 0008 FB71     		strb	r3, [r7, #7]
1037:.\main.c      ****     if (USE_USB && portOpen)    
 4503              		.loc 1 1037 0
 4504 000a 0F4B     		ldr	r3, .L241
 4505 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4506 000e 002B     		cmp	r3, #0
 4507 0010 16D0     		beq	.L237
 4508              	.LBB11:
1038:.\main.c      ****     {    
1039:.\main.c      ****         uint32 cnt = 0;
 4509              		.loc 1 1039 0
 4510 0012 0023     		movs	r3, #0
 4511 0014 FB60     		str	r3, [r7, #12]
1040:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4512              		.loc 1 1040 0
 4513 0016 0AE0     		b	.L239
 4514              	.L240:
1041:.\main.c      ****             cnt++;
 4515              		.loc 1 1041 0
 4516 0018 FB68     		ldr	r3, [r7, #12]
 4517 001a 0133     		adds	r3, r3, #1
 4518 001c FB60     		str	r3, [r7, #12]
1042:.\main.c      ****             if(cnt == 3000000){
 4519              		.loc 1 1042 0
 4520 001e FB68     		ldr	r3, [r7, #12]
 4521 0020 0A4A     		ldr	r2, .L241+4
 4522 0022 9342     		cmp	r3, r2
 4523 0024 03D1     		bne	.L239
1043:.\main.c      ****                 portOpen = 0;
 4524              		.loc 1 1043 0
 4525 0026 084B     		ldr	r3, .L241
 4526 0028 0022     		movs	r2, #0
 4527 002a 1A70     		strb	r2, [r3]
1044:.\main.c      ****                 return;
 4528              		.loc 1 1044 0
 4529 002c 08E0     		b	.L237
 4530              	.L239:
1040:.\main.c      ****             cnt++;
 4531              		.loc 1 1040 0
 4532 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4533 0032 0346     		mov	r3, r0
 4534 0034 002B     		cmp	r3, #0
 4535 0036 EFD0     		beq	.L240
1045:.\main.c      ****             }
1046:.\main.c      ****         }
1047:.\main.c      ****         USBUART_PutChar(c);
 4536              		.loc 1 1047 0
 4537 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4538 003a 1846     		mov	r0, r3
 4539 003c FFF7FEFF 		bl	USBUART_PutChar
 4540              	.L237:
 4541              	.LBE11:
1048:.\main.c      ****     }    
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 100


1049:.\main.c      **** }
 4542              		.loc 1 1049 0
 4543 0040 1037     		adds	r7, r7, #16
 4544              		.cfi_def_cfa_offset 8
 4545 0042 BD46     		mov	sp, r7
 4546              		.cfi_def_cfa_register 13
 4547              		@ sp needed
 4548 0044 80BD     		pop	{r7, pc}
 4549              	.L242:
 4550 0046 00BF     		.align	2
 4551              	.L241:
 4552 0048 00000000 		.word	portOpen
 4553 004c C0C62D00 		.word	3000000
 4554              		.cfi_endproc
 4555              	.LFE104:
 4556              		.size	usbPutChar, .-usbPutChar
 4557              		.section	.text.uart_set_PWM,"ax",%progbits
 4558              		.align	2
 4559              		.global	uart_set_PWM
 4560              		.thumb
 4561              		.thumb_func
 4562              		.type	uart_set_PWM, %function
 4563              	uart_set_PWM:
 4564              	.LFB105:
1050:.\main.c      **** //* ========================================
1051:.\main.c      **** 
1052:.\main.c      **** void uart_set_PWM()
1053:.\main.c      **** {
 4565              		.loc 1 1053 0
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 8
 4568              		@ frame_needed = 1, uses_anonymous_args = 0
 4569 0000 80B5     		push	{r7, lr}
 4570              		.cfi_def_cfa_offset 8
 4571              		.cfi_offset 7, -8
 4572              		.cfi_offset 14, -4
 4573 0002 82B0     		sub	sp, sp, #8
 4574              		.cfi_def_cfa_offset 16
 4575 0004 00AF     		add	r7, sp, #0
 4576              		.cfi_def_cfa_register 7
1054:.\main.c      ****     uint8 c;
1055:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 4577              		.loc 1 1055 0
 4578 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 4579 000a 0346     		mov	r3, r0
 4580 000c 002B     		cmp	r3, #0
 4581 000e 11D0     		beq	.L243
1056:.\main.c      ****        {  
1057:.\main.c      ****             c = USBUART_GetChar();
 4582              		.loc 1 1057 0
 4583 0010 FFF7FEFF 		bl	USBUART_GetChar
 4584 0014 0346     		mov	r3, r0
 4585 0016 FB71     		strb	r3, [r7, #7]
1058:.\main.c      ****             
1059:.\main.c      ****             if(c <= 100 && c > 0){
 4586              		.loc 1 1059 0
 4587 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 101


 4588 001a 642B     		cmp	r3, #100
 4589 001c 0AD8     		bhi	.L243
 4590              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4591 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4592 0020 002B     		cmp	r3, #0
 4593 0022 07D0     		beq	.L243
1060:.\main.c      ****                 PWM_1_WriteCompare(c);
 4594              		.loc 1 1060 0 is_stmt 1
 4595 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4596 0026 1846     		mov	r0, r3
 4597 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
1061:.\main.c      ****                 usbPutString(c);
 4598              		.loc 1 1061 0
 4599 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4600 002e 1846     		mov	r0, r3
 4601 0030 FFF7FEFF 		bl	usbPutString
 4602              	.L243:
1062:.\main.c      ****             }
1063:.\main.c      ****        }
1064:.\main.c      **** }
 4603              		.loc 1 1064 0
 4604 0034 0837     		adds	r7, r7, #8
 4605              		.cfi_def_cfa_offset 8
 4606 0036 BD46     		mov	sp, r7
 4607              		.cfi_def_cfa_register 13
 4608              		@ sp needed
 4609 0038 80BD     		pop	{r7, pc}
 4610              		.cfi_endproc
 4611              	.LFE105:
 4612              		.size	uart_set_PWM, .-uart_set_PWM
 4613 003a 00BF     		.text
 4614              	.Letext0:
 4615              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4616              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4617              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4618              		.file 5 ".\\vars.h"
 4619              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4620              		.file 7 ".\\pathfinder.h"
 4621              		.section	.debug_info,"",%progbits
 4622              	.Ldebug_info0:
 4623 0000 C80D0000 		.4byte	0xdc8
 4624 0004 0400     		.2byte	0x4
 4625 0006 00000000 		.4byte	.Ldebug_abbrev0
 4626 000a 04       		.byte	0x4
 4627 000b 01       		.uleb128 0x1
 4628 000c 80040000 		.4byte	.LASF191
 4629 0010 01       		.byte	0x1
 4630 0011 1A090000 		.4byte	.LASF192
 4631 0015 7B020000 		.4byte	.LASF193
 4632 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4633 001d 00000000 		.4byte	0
 4634 0021 00000000 		.4byte	.Ldebug_line0
 4635 0025 02       		.uleb128 0x2
 4636 0026 01       		.byte	0x1
 4637 0027 06       		.byte	0x6
 4638 0028 4F080000 		.4byte	.LASF0
 4639 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 102


 4640 002d 01       		.byte	0x1
 4641 002e 08       		.byte	0x8
 4642 002f A6070000 		.4byte	.LASF1
 4643 0033 02       		.uleb128 0x2
 4644 0034 02       		.byte	0x2
 4645 0035 05       		.byte	0x5
 4646 0036 2F060000 		.4byte	.LASF2
 4647 003a 02       		.uleb128 0x2
 4648 003b 02       		.byte	0x2
 4649 003c 07       		.byte	0x7
 4650 003d 5B080000 		.4byte	.LASF3
 4651 0041 03       		.uleb128 0x3
 4652 0042 A0000000 		.4byte	.LASF11
 4653 0046 02       		.byte	0x2
 4654 0047 3F       		.byte	0x3f
 4655 0048 4C000000 		.4byte	0x4c
 4656 004c 02       		.uleb128 0x2
 4657 004d 04       		.byte	0x4
 4658 004e 05       		.byte	0x5
 4659 004f 63060000 		.4byte	.LASF4
 4660 0053 02       		.uleb128 0x2
 4661 0054 04       		.byte	0x4
 4662 0055 07       		.byte	0x7
 4663 0056 51070000 		.4byte	.LASF5
 4664 005a 02       		.uleb128 0x2
 4665 005b 08       		.byte	0x8
 4666 005c 05       		.byte	0x5
 4667 005d 4A040000 		.4byte	.LASF6
 4668 0061 02       		.uleb128 0x2
 4669 0062 08       		.byte	0x8
 4670 0063 07       		.byte	0x7
 4671 0064 4B020000 		.4byte	.LASF7
 4672 0068 04       		.uleb128 0x4
 4673 0069 04       		.byte	0x4
 4674 006a 05       		.byte	0x5
 4675 006b 696E7400 		.ascii	"int\000"
 4676 006f 02       		.uleb128 0x2
 4677 0070 04       		.byte	0x4
 4678 0071 07       		.byte	0x7
 4679 0072 88000000 		.4byte	.LASF8
 4680 0076 02       		.uleb128 0x2
 4681 0077 04       		.byte	0x4
 4682 0078 07       		.byte	0x7
 4683 0079 48070000 		.4byte	.LASF9
 4684 007d 05       		.uleb128 0x5
 4685 007e 04       		.byte	0x4
 4686 007f 83000000 		.4byte	0x83
 4687 0083 02       		.uleb128 0x2
 4688 0084 01       		.byte	0x1
 4689 0085 08       		.byte	0x8
 4690 0086 9F030000 		.4byte	.LASF10
 4691 008a 03       		.uleb128 0x3
 4692 008b 6F070000 		.4byte	.LASF12
 4693 008f 03       		.byte	0x3
 4694 0090 2C       		.byte	0x2c
 4695 0091 41000000 		.4byte	0x41
 4696 0095 06       		.uleb128 0x6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 103


 4697 0096 A7080000 		.4byte	.LASF13
 4698 009a 04       		.byte	0x4
 4699 009b 9201     		.2byte	0x192
 4700 009d 2C000000 		.4byte	0x2c
 4701 00a1 06       		.uleb128 0x6
 4702 00a2 E7030000 		.4byte	.LASF14
 4703 00a6 04       		.byte	0x4
 4704 00a7 9301     		.2byte	0x193
 4705 00a9 3A000000 		.4byte	0x3a
 4706 00ad 06       		.uleb128 0x6
 4707 00ae 51050000 		.4byte	.LASF15
 4708 00b2 04       		.byte	0x4
 4709 00b3 9401     		.2byte	0x194
 4710 00b5 53000000 		.4byte	0x53
 4711 00b9 06       		.uleb128 0x6
 4712 00ba EE030000 		.4byte	.LASF16
 4713 00be 04       		.byte	0x4
 4714 00bf 9501     		.2byte	0x195
 4715 00c1 25000000 		.4byte	0x25
 4716 00c5 06       		.uleb128 0x6
 4717 00c6 AA000000 		.4byte	.LASF17
 4718 00ca 04       		.byte	0x4
 4719 00cb 9601     		.2byte	0x196
 4720 00cd 33000000 		.4byte	0x33
 4721 00d1 02       		.uleb128 0x2
 4722 00d2 04       		.byte	0x4
 4723 00d3 04       		.byte	0x4
 4724 00d4 EB010000 		.4byte	.LASF18
 4725 00d8 02       		.uleb128 0x2
 4726 00d9 08       		.byte	0x8
 4727 00da 04       		.byte	0x4
 4728 00db AD080000 		.4byte	.LASF19
 4729 00df 02       		.uleb128 0x2
 4730 00e0 08       		.byte	0x8
 4731 00e1 04       		.byte	0x4
 4732 00e2 CD050000 		.4byte	.LASF20
 4733 00e6 07       		.uleb128 0x7
 4734 00e7 E7070000 		.4byte	.LASF29
 4735 00eb 01       		.byte	0x1
 4736 00ec 05       		.byte	0x5
 4737 00ed 5B       		.byte	0x5b
 4738 00ee 23010000 		.4byte	0x123
 4739 00f2 08       		.uleb128 0x8
 4740 00f3 0A020000 		.4byte	.LASF21
 4741 00f7 00       		.sleb128 0
 4742 00f8 08       		.uleb128 0x8
 4743 00f9 BD000000 		.4byte	.LASF22
 4744 00fd 01       		.sleb128 1
 4745 00fe 08       		.uleb128 0x8
 4746 00ff 1C000000 		.4byte	.LASF23
 4747 0103 02       		.sleb128 2
 4748 0104 08       		.uleb128 0x8
 4749 0105 BC050000 		.4byte	.LASF24
 4750 0109 03       		.sleb128 3
 4751 010a 08       		.uleb128 0x8
 4752 010b E5000000 		.4byte	.LASF25
 4753 010f 04       		.sleb128 4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 104


 4754 0110 08       		.uleb128 0x8
 4755 0111 BD010000 		.4byte	.LASF26
 4756 0115 05       		.sleb128 5
 4757 0116 08       		.uleb128 0x8
 4758 0117 D3060000 		.4byte	.LASF27
 4759 011b 06       		.sleb128 6
 4760 011c 08       		.uleb128 0x8
 4761 011d E7080000 		.4byte	.LASF28
 4762 0121 07       		.sleb128 7
 4763 0122 00       		.byte	0
 4764 0123 07       		.uleb128 0x7
 4765 0124 20010000 		.4byte	.LASF30
 4766 0128 01       		.byte	0x1
 4767 0129 05       		.byte	0x5
 4768 012a 5C       		.byte	0x5c
 4769 012b 60010000 		.4byte	0x160
 4770 012f 08       		.uleb128 0x8
 4771 0130 A5060000 		.4byte	.LASF31
 4772 0134 00       		.sleb128 0
 4773 0135 08       		.uleb128 0x8
 4774 0136 11040000 		.4byte	.LASF32
 4775 013a 01       		.sleb128 1
 4776 013b 08       		.uleb128 0x8
 4777 013c 7A060000 		.4byte	.LASF33
 4778 0140 02       		.sleb128 2
 4779 0141 08       		.uleb128 0x8
 4780 0142 77010000 		.4byte	.LASF34
 4781 0146 03       		.sleb128 3
 4782 0147 08       		.uleb128 0x8
 4783 0148 80080000 		.4byte	.LASF35
 4784 014c 04       		.sleb128 4
 4785 014d 08       		.uleb128 0x8
 4786 014e C5080000 		.4byte	.LASF36
 4787 0152 05       		.sleb128 5
 4788 0153 08       		.uleb128 0x8
 4789 0154 31000000 		.4byte	.LASF37
 4790 0158 06       		.sleb128 6
 4791 0159 08       		.uleb128 0x8
 4792 015a C6060000 		.4byte	.LASF38
 4793 015e 07       		.sleb128 7
 4794 015f 00       		.byte	0
 4795 0160 09       		.uleb128 0x9
 4796 0161 71050000 		.4byte	.LASF194
 4797 0165 20       		.byte	0x20
 4798 0166 05       		.byte	0x5
 4799 0167 62       		.byte	0x62
 4800 0168 39020000 		.4byte	0x239
 4801 016c 0A       		.uleb128 0xa
 4802 016d 8F050000 		.4byte	.LASF39
 4803 0171 05       		.byte	0x5
 4804 0172 63       		.byte	0x63
 4805 0173 B9000000 		.4byte	0xb9
 4806 0177 00       		.byte	0
 4807 0178 0A       		.uleb128 0xa
 4808 0179 04020000 		.4byte	.LASF40
 4809 017d 05       		.byte	0x5
 4810 017e 64       		.byte	0x64
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 105


 4811 017f 95000000 		.4byte	0x95
 4812 0183 01       		.byte	0x1
 4813 0184 0A       		.uleb128 0xa
 4814 0185 7E070000 		.4byte	.LASF41
 4815 0189 05       		.byte	0x5
 4816 018a 65       		.byte	0x65
 4817 018b C5000000 		.4byte	0xc5
 4818 018f 02       		.byte	0x2
 4819 0190 0A       		.uleb128 0xa
 4820 0191 73030000 		.4byte	.LASF42
 4821 0195 05       		.byte	0x5
 4822 0196 66       		.byte	0x66
 4823 0197 C5000000 		.4byte	0xc5
 4824 019b 04       		.byte	0x4
 4825 019c 0A       		.uleb128 0xa
 4826 019d 6E080000 		.4byte	.LASF43
 4827 01a1 05       		.byte	0x5
 4828 01a2 67       		.byte	0x67
 4829 01a3 C5000000 		.4byte	0xc5
 4830 01a7 06       		.byte	0x6
 4831 01a8 0A       		.uleb128 0xa
 4832 01a9 ED080000 		.4byte	.LASF44
 4833 01ad 05       		.byte	0x5
 4834 01ae 68       		.byte	0x68
 4835 01af C5000000 		.4byte	0xc5
 4836 01b3 08       		.byte	0x8
 4837 01b4 0A       		.uleb128 0xa
 4838 01b5 17050000 		.4byte	.LASF45
 4839 01b9 05       		.byte	0x5
 4840 01ba 69       		.byte	0x69
 4841 01bb C5000000 		.4byte	0xc5
 4842 01bf 0A       		.byte	0xa
 4843 01c0 0A       		.uleb128 0xa
 4844 01c1 A4030000 		.4byte	.LASF46
 4845 01c5 05       		.byte	0x5
 4846 01c6 6A       		.byte	0x6a
 4847 01c7 C5000000 		.4byte	0xc5
 4848 01cb 0C       		.byte	0xc
 4849 01cc 0A       		.uleb128 0xa
 4850 01cd 9E050000 		.4byte	.LASF47
 4851 01d1 05       		.byte	0x5
 4852 01d2 6B       		.byte	0x6b
 4853 01d3 C5000000 		.4byte	0xc5
 4854 01d7 0E       		.byte	0xe
 4855 01d8 0A       		.uleb128 0xa
 4856 01d9 65040000 		.4byte	.LASF48
 4857 01dd 05       		.byte	0x5
 4858 01de 6C       		.byte	0x6c
 4859 01df C5000000 		.4byte	0xc5
 4860 01e3 10       		.byte	0x10
 4861 01e4 0A       		.uleb128 0xa
 4862 01e5 08070000 		.4byte	.LASF49
 4863 01e9 05       		.byte	0x5
 4864 01ea 6D       		.byte	0x6d
 4865 01eb C5000000 		.4byte	0xc5
 4866 01ef 12       		.byte	0x12
 4867 01f0 0A       		.uleb128 0xa
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 106


 4868 01f1 11090000 		.4byte	.LASF50
 4869 01f5 05       		.byte	0x5
 4870 01f6 6E       		.byte	0x6e
 4871 01f7 C5000000 		.4byte	0xc5
 4872 01fb 14       		.byte	0x14
 4873 01fc 0A       		.uleb128 0xa
 4874 01fd F3030000 		.4byte	.LASF51
 4875 0201 05       		.byte	0x5
 4876 0202 6F       		.byte	0x6f
 4877 0203 C5000000 		.4byte	0xc5
 4878 0207 16       		.byte	0x16
 4879 0208 0A       		.uleb128 0xa
 4880 0209 18010000 		.4byte	.LASF52
 4881 020d 05       		.byte	0x5
 4882 020e 70       		.byte	0x70
 4883 020f C5000000 		.4byte	0xc5
 4884 0213 18       		.byte	0x18
 4885 0214 0A       		.uleb128 0xa
 4886 0215 DF030000 		.4byte	.LASF53
 4887 0219 05       		.byte	0x5
 4888 021a 71       		.byte	0x71
 4889 021b C5000000 		.4byte	0xc5
 4890 021f 1A       		.byte	0x1a
 4891 0220 0A       		.uleb128 0xa
 4892 0221 0E050000 		.4byte	.LASF54
 4893 0225 05       		.byte	0x5
 4894 0226 72       		.byte	0x72
 4895 0227 C5000000 		.4byte	0xc5
 4896 022b 1C       		.byte	0x1c
 4897 022c 0A       		.uleb128 0xa
 4898 022d D4010000 		.4byte	.LASF55
 4899 0231 05       		.byte	0x5
 4900 0232 73       		.byte	0x73
 4901 0233 C5000000 		.4byte	0xc5
 4902 0237 1E       		.byte	0x1e
 4903 0238 00       		.byte	0
 4904 0239 0B       		.uleb128 0xb
 4905 023a CD080000 		.4byte	.LASF61
 4906 023e 01       		.byte	0x1
 4907 023f 4E       		.byte	0x4e
 4908 0240 00000000 		.4byte	.LFB63
 4909 0244 60010000 		.4byte	.LFE63-.LFB63
 4910 0248 01       		.uleb128 0x1
 4911 0249 9C       		.byte	0x9c
 4912 024a 83020000 		.4byte	0x283
 4913 024e 0C       		.uleb128 0xc
 4914 024f 10000000 		.4byte	.LBB2
 4915 0253 34010000 		.4byte	.LBE2-.LBB2
 4916 0257 0D       		.uleb128 0xd
 4917 0258 0B010000 		.4byte	.LASF56
 4918 025c 01       		.byte	0x1
 4919 025d 54       		.byte	0x54
 4920 025e A1000000 		.4byte	0xa1
 4921 0262 02       		.uleb128 0x2
 4922 0263 91       		.byte	0x91
 4923 0264 76       		.sleb128 -10
 4924 0265 0D       		.uleb128 0xd
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 107


 4925 0266 63070000 		.4byte	.LASF57
 4926 026a 01       		.byte	0x1
 4927 026b 55       		.byte	0x55
 4928 026c 83020000 		.4byte	0x283
 4929 0270 02       		.uleb128 0x2
 4930 0271 91       		.byte	0x91
 4931 0272 68       		.sleb128 -24
 4932 0273 0D       		.uleb128 0xd
 4933 0274 10020000 		.4byte	.LASF58
 4934 0278 01       		.byte	0x1
 4935 0279 56       		.byte	0x56
 4936 027a 83020000 		.4byte	0x283
 4937 027e 02       		.uleb128 0x2
 4938 027f 91       		.byte	0x91
 4939 0280 5C       		.sleb128 -36
 4940 0281 00       		.byte	0
 4941 0282 00       		.byte	0
 4942 0283 0E       		.uleb128 0xe
 4943 0284 83000000 		.4byte	0x83
 4944 0288 93020000 		.4byte	0x293
 4945 028c 0F       		.uleb128 0xf
 4946 028d 76000000 		.4byte	0x76
 4947 0291 0B       		.byte	0xb
 4948 0292 00       		.byte	0
 4949 0293 10       		.uleb128 0x10
 4950 0294 BD030000 		.4byte	.LASF59
 4951 0298 01       		.byte	0x1
 4952 0299 8F       		.byte	0x8f
 4953 029a 00000000 		.4byte	.LFB64
 4954 029e 18000000 		.4byte	.LFE64-.LFB64
 4955 02a2 01       		.uleb128 0x1
 4956 02a3 9C       		.byte	0x9c
 4957 02a4 B7020000 		.4byte	0x2b7
 4958 02a8 11       		.uleb128 0x11
 4959 02a9 64697200 		.ascii	"dir\000"
 4960 02ad 01       		.byte	0x1
 4961 02ae 8F       		.byte	0x8f
 4962 02af 95000000 		.4byte	0x95
 4963 02b3 02       		.uleb128 0x2
 4964 02b4 91       		.byte	0x91
 4965 02b5 77       		.sleb128 -9
 4966 02b6 00       		.byte	0
 4967 02b7 10       		.uleb128 0x10
 4968 02b8 05040000 		.4byte	.LASF60
 4969 02bc 01       		.byte	0x1
 4970 02bd 94       		.byte	0x94
 4971 02be 00000000 		.4byte	.LFB65
 4972 02c2 18000000 		.4byte	.LFE65-.LFB65
 4973 02c6 01       		.uleb128 0x1
 4974 02c7 9C       		.byte	0x9c
 4975 02c8 DB020000 		.4byte	0x2db
 4976 02cc 11       		.uleb128 0x11
 4977 02cd 64697200 		.ascii	"dir\000"
 4978 02d1 01       		.byte	0x1
 4979 02d2 94       		.byte	0x94
 4980 02d3 95000000 		.4byte	0x95
 4981 02d7 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 108


 4982 02d8 91       		.byte	0x91
 4983 02d9 77       		.sleb128 -9
 4984 02da 00       		.byte	0
 4985 02db 12       		.uleb128 0x12
 4986 02dc ED070000 		.4byte	.LASF62
 4987 02e0 01       		.byte	0x1
 4988 02e1 99       		.byte	0x99
 4989 02e2 00000000 		.4byte	.LFB66
 4990 02e6 54000000 		.4byte	.LFE66-.LFB66
 4991 02ea 01       		.uleb128 0x1
 4992 02eb 9C       		.byte	0x9c
 4993 02ec FF020000 		.4byte	0x2ff
 4994 02f0 13       		.uleb128 0x13
 4995 02f1 6D657300 		.ascii	"mes\000"
 4996 02f5 01       		.byte	0x1
 4997 02f6 9E       		.byte	0x9e
 4998 02f7 FF020000 		.4byte	0x2ff
 4999 02fb 02       		.uleb128 0x2
 5000 02fc 91       		.byte	0x91
 5001 02fd 68       		.sleb128 -24
 5002 02fe 00       		.byte	0
 5003 02ff 0E       		.uleb128 0xe
 5004 0300 83000000 		.4byte	0x83
 5005 0304 0F030000 		.4byte	0x30f
 5006 0308 0F       		.uleb128 0xf
 5007 0309 76000000 		.4byte	0x76
 5008 030d 0F       		.byte	0xf
 5009 030e 00       		.byte	0
 5010 030f 10       		.uleb128 0x10
 5011 0310 F1010000 		.4byte	.LASF63
 5012 0314 01       		.byte	0x1
 5013 0315 A3       		.byte	0xa3
 5014 0316 00000000 		.4byte	.LFB67
 5015 031a F4000000 		.4byte	.LFE67-.LFB67
 5016 031e 01       		.uleb128 0x1
 5017 031f 9C       		.byte	0x9c
 5018 0320 5D030000 		.4byte	0x35d
 5019 0324 14       		.uleb128 0x14
 5020 0325 E1060000 		.4byte	.LASF64
 5021 0329 01       		.byte	0x1
 5022 032a A3       		.byte	0xa3
 5023 032b D8000000 		.4byte	0xd8
 5024 032f 02       		.uleb128 0x2
 5025 0330 91       		.byte	0x91
 5026 0331 68       		.sleb128 -24
 5027 0332 14       		.uleb128 0x14
 5028 0333 32040000 		.4byte	.LASF65
 5029 0337 01       		.byte	0x1
 5030 0338 A3       		.byte	0xa3
 5031 0339 D8000000 		.4byte	0xd8
 5032 033d 02       		.uleb128 0x2
 5033 033e 91       		.byte	0x91
 5034 033f 60       		.sleb128 -32
 5035 0340 0D       		.uleb128 0xd
 5036 0341 29020000 		.4byte	.LASF66
 5037 0345 01       		.byte	0x1
 5038 0346 B8       		.byte	0xb8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 109


 5039 0347 C5000000 		.4byte	0xc5
 5040 034b 02       		.uleb128 0x2
 5041 034c 91       		.byte	0x91
 5042 034d 76       		.sleb128 -10
 5043 034e 0D       		.uleb128 0xd
 5044 034f 65050000 		.4byte	.LASF67
 5045 0353 01       		.byte	0x1
 5046 0354 B9       		.byte	0xb9
 5047 0355 C5000000 		.4byte	0xc5
 5048 0359 02       		.uleb128 0x2
 5049 035a 91       		.byte	0x91
 5050 035b 74       		.sleb128 -12
 5051 035c 00       		.byte	0
 5052 035d 15       		.uleb128 0x15
 5053 035e FE070000 		.4byte	.LASF68
 5054 0362 01       		.byte	0x1
 5055 0363 BF       		.byte	0xbf
 5056 0364 00000000 		.4byte	.LFB68
 5057 0368 18000000 		.4byte	.LFE68-.LFB68
 5058 036c 01       		.uleb128 0x1
 5059 036d 9C       		.byte	0x9c
 5060 036e 15       		.uleb128 0x15
 5061 036f 31090000 		.4byte	.LASF69
 5062 0373 01       		.byte	0x1
 5063 0374 C5       		.byte	0xc5
 5064 0375 00000000 		.4byte	.LFB69
 5065 0379 18000000 		.4byte	.LFE69-.LFB69
 5066 037d 01       		.uleb128 0x1
 5067 037e 9C       		.byte	0x9c
 5068 037f 15       		.uleb128 0x15
 5069 0380 89070000 		.4byte	.LASF70
 5070 0384 01       		.byte	0x1
 5071 0385 CB       		.byte	0xcb
 5072 0386 00000000 		.4byte	.LFB70
 5073 038a 22000000 		.4byte	.LFE70-.LFB70
 5074 038e 01       		.uleb128 0x1
 5075 038f 9C       		.byte	0x9c
 5076 0390 15       		.uleb128 0x15
 5077 0391 34020000 		.4byte	.LASF71
 5078 0395 01       		.byte	0x1
 5079 0396 D1       		.byte	0xd1
 5080 0397 00000000 		.4byte	.LFB71
 5081 039b 1C000000 		.4byte	.LFE71-.LFB71
 5082 039f 01       		.uleb128 0x1
 5083 03a0 9C       		.byte	0x9c
 5084 03a1 15       		.uleb128 0x15
 5085 03a2 FE060000 		.4byte	.LASF72
 5086 03a6 01       		.byte	0x1
 5087 03a7 D6       		.byte	0xd6
 5088 03a8 00000000 		.4byte	.LFB72
 5089 03ac 28000000 		.4byte	.LFE72-.LFB72
 5090 03b0 01       		.uleb128 0x1
 5091 03b1 9C       		.byte	0x9c
 5092 03b2 15       		.uleb128 0x15
 5093 03b3 42020000 		.4byte	.LASF73
 5094 03b7 01       		.byte	0x1
 5095 03b8 DB       		.byte	0xdb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 110


 5096 03b9 00000000 		.4byte	.LFB73
 5097 03bd 2C000000 		.4byte	.LFE73-.LFB73
 5098 03c1 01       		.uleb128 0x1
 5099 03c2 9C       		.byte	0x9c
 5100 03c3 15       		.uleb128 0x15
 5101 03c4 D9030000 		.4byte	.LASF74
 5102 03c8 01       		.byte	0x1
 5103 03c9 E0       		.byte	0xe0
 5104 03ca 00000000 		.4byte	.LFB74
 5105 03ce 44000000 		.4byte	.LFE74-.LFB74
 5106 03d2 01       		.uleb128 0x1
 5107 03d3 9C       		.byte	0x9c
 5108 03d4 15       		.uleb128 0x15
 5109 03d5 BA020000 		.4byte	.LASF75
 5110 03d9 01       		.byte	0x1
 5111 03da E5       		.byte	0xe5
 5112 03db 00000000 		.4byte	.LFB75
 5113 03df 38000000 		.4byte	.LFE75-.LFB75
 5114 03e3 01       		.uleb128 0x1
 5115 03e4 9C       		.byte	0x9c
 5116 03e5 15       		.uleb128 0x15
 5117 03e6 6C060000 		.4byte	.LASF76
 5118 03ea 01       		.byte	0x1
 5119 03eb EE       		.byte	0xee
 5120 03ec 00000000 		.4byte	.LFB76
 5121 03f0 38000000 		.4byte	.LFE76-.LFB76
 5122 03f4 01       		.uleb128 0x1
 5123 03f5 9C       		.byte	0x9c
 5124 03f6 15       		.uleb128 0x15
 5125 03f7 44060000 		.4byte	.LASF77
 5126 03fb 01       		.byte	0x1
 5127 03fc F7       		.byte	0xf7
 5128 03fd 00000000 		.4byte	.LFB77
 5129 0401 38000000 		.4byte	.LFE77-.LFB77
 5130 0405 01       		.uleb128 0x1
 5131 0406 9C       		.byte	0x9c
 5132 0407 16       		.uleb128 0x16
 5133 0408 C8010000 		.4byte	.LASF78
 5134 040c 01       		.byte	0x1
 5135 040d 0001     		.2byte	0x100
 5136 040f 00000000 		.4byte	.LFB78
 5137 0413 14000000 		.4byte	.LFE78-.LFB78
 5138 0417 01       		.uleb128 0x1
 5139 0418 9C       		.byte	0x9c
 5140 0419 17       		.uleb128 0x17
 5141 041a D0020000 		.4byte	.LASF79
 5142 041e 01       		.byte	0x1
 5143 041f 0501     		.2byte	0x105
 5144 0421 00000000 		.4byte	.LFB79
 5145 0425 18000000 		.4byte	.LFE79-.LFB79
 5146 0429 01       		.uleb128 0x1
 5147 042a 9C       		.byte	0x9c
 5148 042b 17       		.uleb128 0x17
 5149 042c 6D040000 		.4byte	.LASF80
 5150 0430 01       		.byte	0x1
 5151 0431 0901     		.2byte	0x109
 5152 0433 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 111


 5153 0437 18000000 		.4byte	.LFE80-.LFB80
 5154 043b 01       		.uleb128 0x1
 5155 043c 9C       		.byte	0x9c
 5156 043d 17       		.uleb128 0x17
 5157 043e 3C090000 		.4byte	.LASF81
 5158 0442 01       		.byte	0x1
 5159 0443 0E01     		.2byte	0x10e
 5160 0445 00000000 		.4byte	.LFB81
 5161 0449 18000000 		.4byte	.LFE81-.LFB81
 5162 044d 01       		.uleb128 0x1
 5163 044e 9C       		.byte	0x9c
 5164 044f 17       		.uleb128 0x17
 5165 0450 64030000 		.4byte	.LASF82
 5166 0454 01       		.byte	0x1
 5167 0455 1201     		.2byte	0x112
 5168 0457 00000000 		.4byte	.LFB82
 5169 045b 18000000 		.4byte	.LFE82-.LFB82
 5170 045f 01       		.uleb128 0x1
 5171 0460 9C       		.byte	0x9c
 5172 0461 18       		.uleb128 0x18
 5173 0462 D9050000 		.4byte	.LASF83
 5174 0466 01       		.byte	0x1
 5175 0467 1901     		.2byte	0x119
 5176 0469 00000000 		.4byte	.LFB83
 5177 046d B8000000 		.4byte	.LFE83-.LFB83
 5178 0471 01       		.uleb128 0x1
 5179 0472 9C       		.byte	0x9c
 5180 0473 87040000 		.4byte	0x487
 5181 0477 19       		.uleb128 0x19
 5182 0478 1F050000 		.4byte	.LASF84
 5183 047c 01       		.byte	0x1
 5184 047d 1A01     		.2byte	0x11a
 5185 047f 83000000 		.4byte	0x83
 5186 0483 02       		.uleb128 0x2
 5187 0484 91       		.byte	0x91
 5188 0485 6F       		.sleb128 -17
 5189 0486 00       		.byte	0
 5190 0487 18       		.uleb128 0x18
 5191 0488 C4050000 		.4byte	.LASF85
 5192 048c 01       		.byte	0x1
 5193 048d 3601     		.2byte	0x136
 5194 048f 00000000 		.4byte	.LFB84
 5195 0493 BC010000 		.4byte	.LFE84-.LFB84
 5196 0497 01       		.uleb128 0x1
 5197 0498 9C       		.byte	0x9c
 5198 0499 D6040000 		.4byte	0x4d6
 5199 049d 19       		.uleb128 0x19
 5200 049e 1F050000 		.4byte	.LASF84
 5201 04a2 01       		.byte	0x1
 5202 04a3 3801     		.2byte	0x138
 5203 04a5 83000000 		.4byte	0x83
 5204 04a9 02       		.uleb128 0x2
 5205 04aa 91       		.byte	0x91
 5206 04ab 77       		.sleb128 -9
 5207 04ac 0C       		.uleb128 0xc
 5208 04ad 8C000000 		.4byte	.LBB3
 5209 04b1 FC000000 		.4byte	.LBE3-.LBB3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 112


 5210 04b5 1A       		.uleb128 0x1a
 5211 04b6 6D657300 		.ascii	"mes\000"
 5212 04ba 01       		.byte	0x1
 5213 04bb 5E01     		.2byte	0x15e
 5214 04bd FF020000 		.4byte	0x2ff
 5215 04c1 02       		.uleb128 0x2
 5216 04c2 91       		.byte	0x91
 5217 04c3 64       		.sleb128 -28
 5218 04c4 19       		.uleb128 0x19
 5219 04c5 51000000 		.4byte	.LASF86
 5220 04c9 01       		.byte	0x1
 5221 04ca 6E01     		.2byte	0x16e
 5222 04cc D6040000 		.4byte	0x4d6
 5223 04d0 03       		.uleb128 0x3
 5224 04d1 91       		.byte	0x91
 5225 04d2 E47E     		.sleb128 -156
 5226 04d4 00       		.byte	0
 5227 04d5 00       		.byte	0
 5228 04d6 0E       		.uleb128 0xe
 5229 04d7 83000000 		.4byte	0x83
 5230 04db E6040000 		.4byte	0x4e6
 5231 04df 0F       		.uleb128 0xf
 5232 04e0 76000000 		.4byte	0x76
 5233 04e4 7F       		.byte	0x7f
 5234 04e5 00       		.byte	0
 5235 04e6 1B       		.uleb128 0x1b
 5236 04e7 8F080000 		.4byte	.LASF87
 5237 04eb 01       		.byte	0x1
 5238 04ec 7701     		.2byte	0x177
 5239 04ee 00000000 		.4byte	.LFB85
 5240 04f2 0C000000 		.4byte	.LFE85-.LFB85
 5241 04f6 01       		.uleb128 0x1
 5242 04f7 9C       		.byte	0x9c
 5243 04f8 1C       		.uleb128 0x1c
 5244 04f9 10070000 		.4byte	.LASF88
 5245 04fd 01       		.byte	0x1
 5246 04fe 7D01     		.2byte	0x17d
 5247 0500 00000000 		.4byte	.LFB86
 5248 0504 2C000000 		.4byte	.LFE86-.LFB86
 5249 0508 01       		.uleb128 0x1
 5250 0509 9C       		.byte	0x9c
 5251 050a 18       		.uleb128 0x18
 5252 050b E1010000 		.4byte	.LASF89
 5253 050f 01       		.byte	0x1
 5254 0510 8601     		.2byte	0x186
 5255 0512 00000000 		.4byte	.LFB87
 5256 0516 EC010000 		.4byte	.LFE87-.LFB87
 5257 051a 01       		.uleb128 0x1
 5258 051b 9C       		.byte	0x9c
 5259 051c 57050000 		.4byte	0x557
 5260 0520 1D       		.uleb128 0x1d
 5261 0521 B4000000 		.4byte	.LBB4
 5262 0525 52000000 		.4byte	.LBE4-.LBB4
 5263 0529 3D050000 		.4byte	0x53d
 5264 052d 1A       		.uleb128 0x1a
 5265 052e 6D657300 		.ascii	"mes\000"
 5266 0532 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 113


 5267 0533 9D01     		.2byte	0x19d
 5268 0535 FF020000 		.4byte	0x2ff
 5269 0539 02       		.uleb128 0x2
 5270 053a 91       		.byte	0x91
 5271 053b 58       		.sleb128 -40
 5272 053c 00       		.byte	0
 5273 053d 0C       		.uleb128 0xc
 5274 053e 12010000 		.4byte	.LBB5
 5275 0542 90000000 		.4byte	.LBE5-.LBB5
 5276 0546 19       		.uleb128 0x19
 5277 0547 A2080000 		.4byte	.LASF90
 5278 054b 01       		.byte	0x1
 5279 054c A801     		.2byte	0x1a8
 5280 054e D8000000 		.4byte	0xd8
 5281 0552 02       		.uleb128 0x2
 5282 0553 91       		.byte	0x91
 5283 0554 68       		.sleb128 -24
 5284 0555 00       		.byte	0
 5285 0556 00       		.byte	0
 5286 0557 1C       		.uleb128 0x1c
 5287 0558 A0020000 		.4byte	.LASF91
 5288 055c 01       		.byte	0x1
 5289 055d B201     		.2byte	0x1b2
 5290 055f 00000000 		.4byte	.LFB88
 5291 0563 AC000000 		.4byte	.LFE88-.LFB88
 5292 0567 01       		.uleb128 0x1
 5293 0568 9C       		.byte	0x9c
 5294 0569 1B       		.uleb128 0x1b
 5295 056a B9070000 		.4byte	.LASF92
 5296 056e 01       		.byte	0x1
 5297 056f D501     		.2byte	0x1d5
 5298 0571 00000000 		.4byte	.LFB89
 5299 0575 20000000 		.4byte	.LFE89-.LFB89
 5300 0579 01       		.uleb128 0x1
 5301 057a 9C       		.byte	0x9c
 5302 057b 1C       		.uleb128 0x1c
 5303 057c 26030000 		.4byte	.LASF93
 5304 0580 01       		.byte	0x1
 5305 0581 DC01     		.2byte	0x1dc
 5306 0583 00000000 		.4byte	.LFB90
 5307 0587 28000000 		.4byte	.LFE90-.LFB90
 5308 058b 01       		.uleb128 0x1
 5309 058c 9C       		.byte	0x9c
 5310 058d 1C       		.uleb128 0x1c
 5311 058e C3000000 		.4byte	.LASF94
 5312 0592 01       		.byte	0x1
 5313 0593 E501     		.2byte	0x1e5
 5314 0595 00000000 		.4byte	.LFB91
 5315 0599 0A000000 		.4byte	.LFE91-.LFB91
 5316 059d 01       		.uleb128 0x1
 5317 059e 9C       		.byte	0x9c
 5318 059f 1C       		.uleb128 0x1c
 5319 05a0 EF050000 		.4byte	.LASF95
 5320 05a4 01       		.byte	0x1
 5321 05a5 EA01     		.2byte	0x1ea
 5322 05a7 00000000 		.4byte	.LFB92
 5323 05ab 28000000 		.4byte	.LFE92-.LFB92
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 114


 5324 05af 01       		.uleb128 0x1
 5325 05b0 9C       		.byte	0x9c
 5326 05b1 16       		.uleb128 0x16
 5327 05b2 AF020000 		.4byte	.LASF96
 5328 05b6 01       		.byte	0x1
 5329 05b7 F401     		.2byte	0x1f4
 5330 05b9 00000000 		.4byte	.LFB93
 5331 05bd 40000000 		.4byte	.LFE93-.LFB93
 5332 05c1 01       		.uleb128 0x1
 5333 05c2 9C       		.byte	0x9c
 5334 05c3 16       		.uleb128 0x16
 5335 05c4 1E020000 		.4byte	.LASF97
 5336 05c8 01       		.byte	0x1
 5337 05c9 0302     		.2byte	0x203
 5338 05cb 00000000 		.4byte	.LFB94
 5339 05cf 40000000 		.4byte	.LFE94-.LFB94
 5340 05d3 01       		.uleb128 0x1
 5341 05d4 9C       		.byte	0x9c
 5342 05d5 1E       		.uleb128 0x1e
 5343 05d6 59000000 		.4byte	.LASF98
 5344 05da 01       		.byte	0x1
 5345 05db 1302     		.2byte	0x213
 5346 05dd 00000000 		.4byte	.LFB95
 5347 05e1 30020000 		.4byte	.LFE95-.LFB95
 5348 05e5 01       		.uleb128 0x1
 5349 05e6 9C       		.byte	0x9c
 5350 05e7 46060000 		.4byte	0x646
 5351 05eb 19       		.uleb128 0x19
 5352 05ec F7020000 		.4byte	.LASF99
 5353 05f0 01       		.byte	0x1
 5354 05f1 2102     		.2byte	0x221
 5355 05f3 C5000000 		.4byte	0xc5
 5356 05f7 02       		.uleb128 0x2
 5357 05f8 91       		.byte	0x91
 5358 05f9 5E       		.sleb128 -34
 5359 05fa 19       		.uleb128 0x19
 5360 05fb 3D050000 		.4byte	.LASF100
 5361 05ff 01       		.byte	0x1
 5362 0600 2202     		.2byte	0x222
 5363 0602 C5000000 		.4byte	0xc5
 5364 0606 02       		.uleb128 0x2
 5365 0607 91       		.byte	0x91
 5366 0608 5C       		.sleb128 -36
 5367 0609 19       		.uleb128 0x19
 5368 060a 93030000 		.4byte	.LASF101
 5369 060e 01       		.byte	0x1
 5370 060f 2302     		.2byte	0x223
 5371 0611 D8000000 		.4byte	0xd8
 5372 0615 02       		.uleb128 0x2
 5373 0616 91       		.byte	0x91
 5374 0617 68       		.sleb128 -24
 5375 0618 19       		.uleb128 0x19
 5376 0619 F5080000 		.4byte	.LASF102
 5377 061d 01       		.byte	0x1
 5378 061e 2402     		.2byte	0x224
 5379 0620 D8000000 		.4byte	0xd8
 5380 0624 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 115


 5381 0625 91       		.byte	0x91
 5382 0626 60       		.sleb128 -32
 5383 0627 19       		.uleb128 0x19
 5384 0628 1D040000 		.4byte	.LASF103
 5385 062c 01       		.byte	0x1
 5386 062d 2D02     		.2byte	0x22d
 5387 062f 68000000 		.4byte	0x68
 5388 0633 02       		.uleb128 0x2
 5389 0634 91       		.byte	0x91
 5390 0635 58       		.sleb128 -40
 5391 0636 19       		.uleb128 0x19
 5392 0637 98080000 		.4byte	.LASF104
 5393 063b 01       		.byte	0x1
 5394 063c 2E02     		.2byte	0x22e
 5395 063e 68000000 		.4byte	0x68
 5396 0642 02       		.uleb128 0x2
 5397 0643 91       		.byte	0x91
 5398 0644 54       		.sleb128 -44
 5399 0645 00       		.byte	0
 5400 0646 1E       		.uleb128 0x1e
 5401 0647 94050000 		.4byte	.LASF105
 5402 064b 01       		.byte	0x1
 5403 064c 3C02     		.2byte	0x23c
 5404 064e 00000000 		.4byte	.LFB96
 5405 0652 50010000 		.4byte	.LFE96-.LFB96
 5406 0656 01       		.uleb128 0x1
 5407 0657 9C       		.byte	0x9c
 5408 0658 88060000 		.4byte	0x688
 5409 065c 1A       		.uleb128 0x1a
 5410 065d 6E6C00   		.ascii	"nl\000"
 5411 0660 01       		.byte	0x1
 5412 0661 4002     		.2byte	0x240
 5413 0663 95000000 		.4byte	0x95
 5414 0667 02       		.uleb128 0x2
 5415 0668 91       		.byte	0x91
 5416 0669 67       		.sleb128 -25
 5417 066a 1A       		.uleb128 0x1a
 5418 066b 6E7200   		.ascii	"nr\000"
 5419 066e 01       		.byte	0x1
 5420 066f 4102     		.2byte	0x241
 5421 0671 95000000 		.4byte	0x95
 5422 0675 02       		.uleb128 0x2
 5423 0676 91       		.byte	0x91
 5424 0677 66       		.sleb128 -26
 5425 0678 1A       		.uleb128 0x1a
 5426 0679 6D696400 		.ascii	"mid\000"
 5427 067d 01       		.byte	0x1
 5428 067e 4202     		.2byte	0x242
 5429 0680 95000000 		.4byte	0x95
 5430 0684 02       		.uleb128 0x2
 5431 0685 91       		.byte	0x91
 5432 0686 65       		.sleb128 -27
 5433 0687 00       		.byte	0
 5434 0688 1E       		.uleb128 0x1e
 5435 0689 58010000 		.4byte	.LASF106
 5436 068d 01       		.byte	0x1
 5437 068e 5F02     		.2byte	0x25f
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 116


 5438 0690 00000000 		.4byte	.LFB97
 5439 0694 80010000 		.4byte	.LFE97-.LFB97
 5440 0698 01       		.uleb128 0x1
 5441 0699 9C       		.byte	0x9c
 5442 069a CA060000 		.4byte	0x6ca
 5443 069e 1A       		.uleb128 0x1a
 5444 069f 6E6C00   		.ascii	"nl\000"
 5445 06a2 01       		.byte	0x1
 5446 06a3 6302     		.2byte	0x263
 5447 06a5 95000000 		.4byte	0x95
 5448 06a9 02       		.uleb128 0x2
 5449 06aa 91       		.byte	0x91
 5450 06ab 67       		.sleb128 -25
 5451 06ac 1A       		.uleb128 0x1a
 5452 06ad 6E7200   		.ascii	"nr\000"
 5453 06b0 01       		.byte	0x1
 5454 06b1 6402     		.2byte	0x264
 5455 06b3 95000000 		.4byte	0x95
 5456 06b7 02       		.uleb128 0x2
 5457 06b8 91       		.byte	0x91
 5458 06b9 66       		.sleb128 -26
 5459 06ba 1A       		.uleb128 0x1a
 5460 06bb 6D696400 		.ascii	"mid\000"
 5461 06bf 01       		.byte	0x1
 5462 06c0 6502     		.2byte	0x265
 5463 06c2 95000000 		.4byte	0x95
 5464 06c6 02       		.uleb128 0x2
 5465 06c7 91       		.byte	0x91
 5466 06c8 65       		.sleb128 -27
 5467 06c9 00       		.byte	0
 5468 06ca 17       		.uleb128 0x17
 5469 06cb 3D010000 		.4byte	.LASF107
 5470 06cf 01       		.byte	0x1
 5471 06d0 B402     		.2byte	0x2b4
 5472 06d2 00000000 		.4byte	.LFB98
 5473 06d6 0C000000 		.4byte	.LFE98-.LFB98
 5474 06da 01       		.uleb128 0x1
 5475 06db 9C       		.byte	0x9c
 5476 06dc 1E       		.uleb128 0x1e
 5477 06dd 89030000 		.4byte	.LASF108
 5478 06e1 01       		.byte	0x1
 5479 06e2 F202     		.2byte	0x2f2
 5480 06e4 00000000 		.4byte	.LFB99
 5481 06e8 C0000000 		.4byte	.LFE99-.LFB99
 5482 06ec 01       		.uleb128 0x1
 5483 06ed 9C       		.byte	0x9c
 5484 06ee 2A070000 		.4byte	0x72a
 5485 06f2 0C       		.uleb128 0xc
 5486 06f3 0E000000 		.4byte	.LBB6
 5487 06f7 8E000000 		.4byte	.LBE6-.LBB6
 5488 06fb 19       		.uleb128 0x19
 5489 06fc E9020000 		.4byte	.LASF109
 5490 0700 01       		.byte	0x1
 5491 0701 FB02     		.2byte	0x2fb
 5492 0703 D1000000 		.4byte	0xd1
 5493 0707 02       		.uleb128 0x2
 5494 0708 91       		.byte	0x91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 117


 5495 0709 74       		.sleb128 -12
 5496 070a 19       		.uleb128 0x19
 5497 070b 7B050000 		.4byte	.LASF110
 5498 070f 01       		.byte	0x1
 5499 0710 FC02     		.2byte	0x2fc
 5500 0712 C5000000 		.4byte	0xc5
 5501 0716 02       		.uleb128 0x2
 5502 0717 91       		.byte	0x91
 5503 0718 72       		.sleb128 -14
 5504 0719 19       		.uleb128 0x19
 5505 071a 4C030000 		.4byte	.LASF111
 5506 071e 01       		.byte	0x1
 5507 071f 0103     		.2byte	0x301
 5508 0721 FF020000 		.4byte	0x2ff
 5509 0725 02       		.uleb128 0x2
 5510 0726 91       		.byte	0x91
 5511 0727 60       		.sleb128 -32
 5512 0728 00       		.byte	0
 5513 0729 00       		.byte	0
 5514 072a 1E       		.uleb128 0x1e
 5515 072b DE080000 		.4byte	.LASF112
 5516 072f 01       		.byte	0x1
 5517 0730 0803     		.2byte	0x308
 5518 0732 00000000 		.4byte	.LFB100
 5519 0736 B8000000 		.4byte	.LFE100-.LFB100
 5520 073a 01       		.uleb128 0x1
 5521 073b 9C       		.byte	0x9c
 5522 073c 5A070000 		.4byte	0x75a
 5523 0740 0C       		.uleb128 0xc
 5524 0741 0E000000 		.4byte	.LBB7
 5525 0745 86000000 		.4byte	.LBE7-.LBB7
 5526 0749 19       		.uleb128 0x19
 5527 074a 8F060000 		.4byte	.LASF113
 5528 074e 01       		.byte	0x1
 5529 074f 0C03     		.2byte	0x30c
 5530 0751 FF020000 		.4byte	0x2ff
 5531 0755 02       		.uleb128 0x2
 5532 0756 91       		.byte	0x91
 5533 0757 68       		.sleb128 -24
 5534 0758 00       		.byte	0
 5535 0759 00       		.byte	0
 5536 075a 18       		.uleb128 0x18
 5537 075b 18070000 		.4byte	.LASF114
 5538 075f 01       		.byte	0x1
 5539 0760 1D03     		.2byte	0x31d
 5540 0762 00000000 		.4byte	.LFB101
 5541 0766 4A000000 		.4byte	.LFE101-.LFB101
 5542 076a 01       		.uleb128 0x1
 5543 076b 9C       		.byte	0x9c
 5544 076c 80070000 		.4byte	0x780
 5545 0770 1F       		.uleb128 0x1f
 5546 0771 41030000 		.4byte	.LASF115
 5547 0775 01       		.byte	0x1
 5548 0776 1D03     		.2byte	0x31d
 5549 0778 80070000 		.4byte	0x780
 5550 077c 02       		.uleb128 0x2
 5551 077d 91       		.byte	0x91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 118


 5552 077e 6C       		.sleb128 -20
 5553 077f 00       		.byte	0
 5554 0780 05       		.uleb128 0x5
 5555 0781 04       		.byte	0x4
 5556 0782 95000000 		.4byte	0x95
 5557 0786 20       		.uleb128 0x20
 5558 0787 8A080000 		.4byte	.LASF116
 5559 078b 01       		.byte	0x1
 5560 078c 2603     		.2byte	0x326
 5561 078e 68000000 		.4byte	0x68
 5562 0792 00000000 		.4byte	.LFB102
 5563 0796 FC020000 		.4byte	.LFE102-.LFB102
 5564 079a 01       		.uleb128 0x1
 5565 079b 9C       		.byte	0x9c
 5566 079c E2070000 		.4byte	0x7e2
 5567 07a0 19       		.uleb128 0x19
 5568 07a1 17030000 		.4byte	.LASF117
 5569 07a5 01       		.byte	0x1
 5570 07a6 5F03     		.2byte	0x35f
 5571 07a8 A1000000 		.4byte	0xa1
 5572 07ac 02       		.uleb128 0x2
 5573 07ad 91       		.byte	0x91
 5574 07ae 76       		.sleb128 -10
 5575 07af 0C       		.uleb128 0xc
 5576 07b0 66000000 		.4byte	.LBB8
 5577 07b4 50020000 		.4byte	.LBE8-.LBB8
 5578 07b8 19       		.uleb128 0x19
 5579 07b9 6E020000 		.4byte	.LASF118
 5580 07bd 01       		.byte	0x1
 5581 07be 6D03     		.2byte	0x36d
 5582 07c0 E2070000 		.4byte	0x7e2
 5583 07c4 02       		.uleb128 0x2
 5584 07c5 91       		.byte	0x91
 5585 07c6 70       		.sleb128 -16
 5586 07c7 0C       		.uleb128 0xc
 5587 07c8 34010000 		.4byte	.LBB9
 5588 07cc 20010000 		.4byte	.LBE9-.LBB9
 5589 07d0 19       		.uleb128 0x19
 5590 07d1 77040000 		.4byte	.LASF119
 5591 07d5 01       		.byte	0x1
 5592 07d6 9703     		.2byte	0x397
 5593 07d8 83000000 		.4byte	0x83
 5594 07dc 02       		.uleb128 0x2
 5595 07dd 91       		.byte	0x91
 5596 07de 75       		.sleb128 -11
 5597 07df 00       		.byte	0
 5598 07e0 00       		.byte	0
 5599 07e1 00       		.byte	0
 5600 07e2 0E       		.uleb128 0xe
 5601 07e3 95000000 		.4byte	0x95
 5602 07e7 F2070000 		.4byte	0x7f2
 5603 07eb 0F       		.uleb128 0xf
 5604 07ec 76000000 		.4byte	0x76
 5605 07f0 04       		.byte	0x4
 5606 07f1 00       		.byte	0
 5607 07f2 18       		.uleb128 0x18
 5608 07f3 F1060000 		.4byte	.LASF120
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 119


 5609 07f7 01       		.byte	0x1
 5610 07f8 F503     		.2byte	0x3f5
 5611 07fa 00000000 		.4byte	.LFB103
 5612 07fe 68000000 		.4byte	.LFE103-.LFB103
 5613 0802 01       		.uleb128 0x1
 5614 0803 9C       		.byte	0x9c
 5615 0804 2F080000 		.4byte	0x82f
 5616 0808 21       		.uleb128 0x21
 5617 0809 7300     		.ascii	"s\000"
 5618 080b 01       		.byte	0x1
 5619 080c F503     		.2byte	0x3f5
 5620 080e 7D000000 		.4byte	0x7d
 5621 0812 02       		.uleb128 0x2
 5622 0813 91       		.byte	0x91
 5623 0814 6C       		.sleb128 -20
 5624 0815 0C       		.uleb128 0xc
 5625 0816 10000000 		.4byte	.LBB10
 5626 081a 48000000 		.4byte	.LBE10-.LBB10
 5627 081e 1A       		.uleb128 0x1a
 5628 081f 636E7400 		.ascii	"cnt\000"
 5629 0823 01       		.byte	0x1
 5630 0824 FC03     		.2byte	0x3fc
 5631 0826 AD000000 		.4byte	0xad
 5632 082a 02       		.uleb128 0x2
 5633 082b 91       		.byte	0x91
 5634 082c 74       		.sleb128 -12
 5635 082d 00       		.byte	0
 5636 082e 00       		.byte	0
 5637 082f 18       		.uleb128 0x18
 5638 0830 44080000 		.4byte	.LASF121
 5639 0834 01       		.byte	0x1
 5640 0835 0B04     		.2byte	0x40b
 5641 0837 00000000 		.4byte	.LFB104
 5642 083b 50000000 		.4byte	.LFE104-.LFB104
 5643 083f 01       		.uleb128 0x1
 5644 0840 9C       		.byte	0x9c
 5645 0841 6C080000 		.4byte	0x86c
 5646 0845 21       		.uleb128 0x21
 5647 0846 6300     		.ascii	"c\000"
 5648 0848 01       		.byte	0x1
 5649 0849 0B04     		.2byte	0x40b
 5650 084b 83000000 		.4byte	0x83
 5651 084f 02       		.uleb128 0x2
 5652 0850 91       		.byte	0x91
 5653 0851 6F       		.sleb128 -17
 5654 0852 0C       		.uleb128 0xc
 5655 0853 12000000 		.4byte	.LBB11
 5656 0857 2E000000 		.4byte	.LBE11-.LBB11
 5657 085b 1A       		.uleb128 0x1a
 5658 085c 636E7400 		.ascii	"cnt\000"
 5659 0860 01       		.byte	0x1
 5660 0861 0F04     		.2byte	0x40f
 5661 0863 AD000000 		.4byte	0xad
 5662 0867 02       		.uleb128 0x2
 5663 0868 91       		.byte	0x91
 5664 0869 74       		.sleb128 -12
 5665 086a 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 120


 5666 086b 00       		.byte	0
 5667 086c 1E       		.uleb128 0x1e
 5668 086d 57030000 		.4byte	.LASF122
 5669 0871 01       		.byte	0x1
 5670 0872 1C04     		.2byte	0x41c
 5671 0874 00000000 		.4byte	.LFB105
 5672 0878 3A000000 		.4byte	.LFE105-.LFB105
 5673 087c 01       		.uleb128 0x1
 5674 087d 9C       		.byte	0x9c
 5675 087e 90080000 		.4byte	0x890
 5676 0882 1A       		.uleb128 0x1a
 5677 0883 6300     		.ascii	"c\000"
 5678 0885 01       		.byte	0x1
 5679 0886 1E04     		.2byte	0x41e
 5680 0888 95000000 		.4byte	0x95
 5681 088c 02       		.uleb128 0x2
 5682 088d 91       		.byte	0x91
 5683 088e 77       		.sleb128 -9
 5684 088f 00       		.byte	0
 5685 0890 22       		.uleb128 0x22
 5686 0891 82060000 		.4byte	.LASF123
 5687 0895 06       		.byte	0x6
 5688 0896 9606     		.2byte	0x696
 5689 0898 9C080000 		.4byte	0x89c
 5690 089c 23       		.uleb128 0x23
 5691 089d 8A000000 		.4byte	0x8a
 5692 08a1 24       		.uleb128 0x24
 5693 08a2 747300   		.ascii	"ts\000"
 5694 08a5 05       		.byte	0x5
 5695 08a6 10       		.byte	0x10
 5696 08a7 95000000 		.4byte	0x95
 5697 08ab 05       		.uleb128 0x5
 5698 08ac 03       		.byte	0x3
 5699 08ad 00000000 		.4byte	ts
 5700 08b1 25       		.uleb128 0x25
 5701 08b2 C6070000 		.4byte	.LASF124
 5702 08b6 05       		.byte	0x5
 5703 08b7 11       		.byte	0x11
 5704 08b8 A1000000 		.4byte	0xa1
 5705 08bc 05       		.uleb128 0x5
 5706 08bd 03       		.byte	0x3
 5707 08be 00000000 		.4byte	ts_enc
 5708 08c2 25       		.uleb128 0x25
 5709 08c3 9B060000 		.4byte	.LASF125
 5710 08c7 05       		.byte	0x5
 5711 08c8 12       		.byte	0x12
 5712 08c9 A1000000 		.4byte	0xa1
 5713 08cd 05       		.uleb128 0x5
 5714 08ce 03       		.byte	0x3
 5715 08cf 00000000 		.4byte	ts_update
 5716 08d3 25       		.uleb128 0x25
 5717 08d4 48050000 		.4byte	.LASF126
 5718 08d8 05       		.byte	0x5
 5719 08d9 13       		.byte	0x13
 5720 08da A1000000 		.4byte	0xa1
 5721 08de 05       		.uleb128 0x5
 5722 08df 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 121


 5723 08e0 00000000 		.4byte	ts_speed
 5724 08e4 25       		.uleb128 0x25
 5725 08e5 7E030000 		.4byte	.LASF127
 5726 08e9 05       		.byte	0x5
 5727 08ea 14       		.byte	0x14
 5728 08eb A1000000 		.4byte	0xa1
 5729 08ef 05       		.uleb128 0x5
 5730 08f0 03       		.byte	0x3
 5731 08f1 00000000 		.4byte	ts_display
 5732 08f5 25       		.uleb128 0x25
 5733 08f6 01030000 		.4byte	.LASF128
 5734 08fa 05       		.byte	0x5
 5735 08fb 16       		.byte	0x16
 5736 08fc 95000000 		.4byte	0x95
 5737 0900 05       		.uleb128 0x5
 5738 0901 03       		.byte	0x3
 5739 0902 00000000 		.4byte	flag_ts_enc
 5740 0906 25       		.uleb128 0x25
 5741 0907 DA020000 		.4byte	.LASF129
 5742 090b 05       		.byte	0x5
 5743 090c 17       		.byte	0x17
 5744 090d 95000000 		.4byte	0x95
 5745 0911 05       		.uleb128 0x5
 5746 0912 03       		.byte	0x3
 5747 0913 00000000 		.4byte	flag_ts_update
 5748 0917 25       		.uleb128 0x25
 5749 0918 FC050000 		.4byte	.LASF130
 5750 091c 05       		.byte	0x5
 5751 091d 18       		.byte	0x18
 5752 091e 95000000 		.4byte	0x95
 5753 0922 05       		.uleb128 0x5
 5754 0923 03       		.byte	0x3
 5755 0924 00000000 		.4byte	flag_ts_speed
 5756 0928 25       		.uleb128 0x25
 5757 0929 D7070000 		.4byte	.LASF131
 5758 092d 05       		.byte	0x5
 5759 092e 19       		.byte	0x19
 5760 092f 95000000 		.4byte	0x95
 5761 0933 05       		.uleb128 0x5
 5762 0934 03       		.byte	0x3
 5763 0935 00000000 		.4byte	flag_ts_display
 5764 0939 25       		.uleb128 0x25
 5765 093a 27060000 		.4byte	.LASF132
 5766 093e 05       		.byte	0x5
 5767 093f 1C       		.byte	0x1c
 5768 0940 95000000 		.4byte	0x95
 5769 0944 05       		.uleb128 0x5
 5770 0945 03       		.byte	0x3
 5771 0946 00000000 		.4byte	flag_rx
 5772 094a 25       		.uleb128 0x25
 5773 094b 62020000 		.4byte	.LASF133
 5774 094f 05       		.byte	0x5
 5775 0950 1D       		.byte	0x1d
 5776 0951 95000000 		.4byte	0x95
 5777 0955 05       		.uleb128 0x5
 5778 0956 03       		.byte	0x3
 5779 0957 00000000 		.4byte	flag_packet
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 122


 5780 095b 25       		.uleb128 0x25
 5781 095c 02090000 		.4byte	.LASF134
 5782 0960 05       		.byte	0x5
 5783 0961 1E       		.byte	0x1e
 5784 0962 95000000 		.4byte	0x95
 5785 0966 05       		.uleb128 0x5
 5786 0967 03       		.byte	0x3
 5787 0968 00000000 		.4byte	flag_KB_string
 5788 096c 25       		.uleb128 0x25
 5789 096d 0A060000 		.4byte	.LASF135
 5790 0971 05       		.byte	0x5
 5791 0972 20       		.byte	0x20
 5792 0973 95000000 		.4byte	0x95
 5793 0977 05       		.uleb128 0x5
 5794 0978 03       		.byte	0x3
 5795 0979 00000000 		.4byte	dataready_flag
 5796 097d 25       		.uleb128 0x25
 5797 097e 84010000 		.4byte	.LASF136
 5798 0982 05       		.byte	0x5
 5799 0983 22       		.byte	0x22
 5800 0984 95000000 		.4byte	0x95
 5801 0988 05       		.uleb128 0x5
 5802 0989 03       		.byte	0x3
 5803 098a 00000000 		.4byte	flag_rf_transmission_active
 5804 098e 25       		.uleb128 0x25
 5805 098f A0010000 		.4byte	.LASF137
 5806 0993 05       		.byte	0x5
 5807 0994 23       		.byte	0x23
 5808 0995 95000000 		.4byte	0x95
 5809 0999 05       		.uleb128 0x5
 5810 099a 03       		.byte	0x3
 5811 099b 00000000 		.4byte	flag_print_rf
 5812 099f 25       		.uleb128 0x25
 5813 09a0 AB050000 		.4byte	.LASF138
 5814 09a4 05       		.byte	0x5
 5815 09a5 25       		.byte	0x25
 5816 09a6 95000000 		.4byte	0x95
 5817 09aa 05       		.uleb128 0x5
 5818 09ab 03       		.byte	0x3
 5819 09ac 00000000 		.4byte	flag_receive_ADC
 5820 09b0 25       		.uleb128 0x25
 5821 09b1 39060000 		.4byte	.LASF139
 5822 09b5 05       		.byte	0x5
 5823 09b6 26       		.byte	0x26
 5824 09b7 C5000000 		.4byte	0xc5
 5825 09bb 05       		.uleb128 0x5
 5826 09bc 03       		.byte	0x3
 5827 09bd 00000000 		.4byte	adc_result
 5828 09c1 25       		.uleb128 0x25
 5829 09c2 00000000 		.4byte	.LASF140
 5830 09c6 05       		.byte	0x5
 5831 09c7 28       		.byte	0x28
 5832 09c8 95000000 		.4byte	0x95
 5833 09cc 05       		.uleb128 0x5
 5834 09cd 03       		.byte	0x3
 5835 09ce 00000000 		.4byte	direction
 5836 09d2 25       		.uleb128 0x25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 123


 5837 09d3 31050000 		.4byte	.LASF141
 5838 09d7 05       		.byte	0x5
 5839 09d8 2B       		.byte	0x2b
 5840 09d9 95000000 		.4byte	0x95
 5841 09dd 05       		.uleb128 0x5
 5842 09de 03       		.byte	0x3
 5843 09df 00000000 		.4byte	BIN_ENABLED
 5844 09e3 25       		.uleb128 0x25
 5845 09e4 27040000 		.4byte	.LASF142
 5846 09e8 05       		.byte	0x5
 5847 09e9 2D       		.byte	0x2d
 5848 09ea 95000000 		.4byte	0x95
 5849 09ee 05       		.uleb128 0x5
 5850 09ef 03       		.byte	0x3
 5851 09f0 00000000 		.4byte	BT_ENABLED
 5852 09f4 25       		.uleb128 0x25
 5853 09f5 4E060000 		.4byte	.LASF143
 5854 09f9 05       		.byte	0x5
 5855 09fa 32       		.byte	0x32
 5856 09fb 95000000 		.4byte	0x95
 5857 09ff 05       		.uleb128 0x5
 5858 0a00 03       		.byte	0x3
 5859 0a01 00000000 		.4byte	flag_calc_wheelspeed
 5860 0a05 25       		.uleb128 0x25
 5861 0a06 25010000 		.4byte	.LASF144
 5862 0a0a 05       		.byte	0x5
 5863 0a0b 33       		.byte	0x33
 5864 0a0c C5000000 		.4byte	0xc5
 5865 0a10 05       		.uleb128 0x5
 5866 0a11 03       		.byte	0x3
 5867 0a12 00000000 		.4byte	quad_count1
 5868 0a16 25       		.uleb128 0x25
 5869 0a17 31010000 		.4byte	.LASF145
 5870 0a1b 05       		.byte	0x5
 5871 0a1c 34       		.byte	0x34
 5872 0a1d C5000000 		.4byte	0xc5
 5873 0a21 05       		.uleb128 0x5
 5874 0a22 03       		.byte	0x3
 5875 0a23 00000000 		.4byte	quad_count2
 5876 0a27 25       		.uleb128 0x25
 5877 0a28 16080000 		.4byte	.LASF146
 5878 0a2c 05       		.byte	0x5
 5879 0a2d 35       		.byte	0x35
 5880 0a2e C5000000 		.4byte	0xc5
 5881 0a32 05       		.uleb128 0x5
 5882 0a33 03       		.byte	0x3
 5883 0a34 00000000 		.4byte	last_quad_count1
 5884 0a38 25       		.uleb128 0x25
 5885 0a39 27080000 		.4byte	.LASF147
 5886 0a3d 05       		.byte	0x5
 5887 0a3e 36       		.byte	0x36
 5888 0a3f C5000000 		.4byte	0xc5
 5889 0a43 05       		.uleb128 0x5
 5890 0a44 03       		.byte	0x3
 5891 0a45 00000000 		.4byte	last_quad_count2
 5892 0a49 25       		.uleb128 0x25
 5893 0a4a 3B000000 		.4byte	.LASF148
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 124


 5894 0a4e 05       		.byte	0x5
 5895 0a4f 37       		.byte	0x37
 5896 0a50 C5000000 		.4byte	0xc5
 5897 0a54 05       		.uleb128 0x5
 5898 0a55 03       		.byte	0x3
 5899 0a56 00000000 		.4byte	quad_diff1
 5900 0a5a 25       		.uleb128 0x25
 5901 0a5b 46000000 		.4byte	.LASF149
 5902 0a5f 05       		.byte	0x5
 5903 0a60 38       		.byte	0x38
 5904 0a61 C5000000 		.4byte	0xc5
 5905 0a65 05       		.uleb128 0x5
 5906 0a66 03       		.byte	0x3
 5907 0a67 00000000 		.4byte	quad_diff2
 5908 0a6b 25       		.uleb128 0x25
 5909 0a6c AE060000 		.4byte	.LASF150
 5910 0a70 05       		.byte	0x5
 5911 0a71 39       		.byte	0x39
 5912 0a72 95000000 		.4byte	0x95
 5913 0a76 05       		.uleb128 0x5
 5914 0a77 03       		.byte	0x3
 5915 0a78 00000000 		.4byte	deadzone
 5916 0a7c 25       		.uleb128 0x25
 5917 0a7d 77000000 		.4byte	.LASF151
 5918 0a81 05       		.byte	0x5
 5919 0a82 3C       		.byte	0x3c
 5920 0a83 C5000000 		.4byte	0xc5
 5921 0a87 05       		.uleb128 0x5
 5922 0a88 03       		.byte	0x3
 5923 0a89 00000000 		.4byte	start_turn_count
 5924 0a8d 25       		.uleb128 0x25
 5925 0a8e DF050000 		.4byte	.LASF152
 5926 0a92 05       		.byte	0x5
 5927 0a93 3F       		.byte	0x3f
 5928 0a94 C5000000 		.4byte	0xc5
 5929 0a98 05       		.uleb128 0x5
 5930 0a99 03       		.byte	0x3
 5931 0a9a 00000000 		.4byte	left_duty_cycle
 5932 0a9e 25       		.uleb128 0x25
 5933 0a9f B4080000 		.4byte	.LASF153
 5934 0aa3 05       		.byte	0x5
 5935 0aa4 40       		.byte	0x40
 5936 0aa5 C5000000 		.4byte	0xc5
 5937 0aa9 05       		.uleb128 0x5
 5938 0aaa 03       		.byte	0x3
 5939 0aab 00000000 		.4byte	right_duty_cycle
 5940 0aaf 25       		.uleb128 0x25
 5941 0ab0 B7060000 		.4byte	.LASF154
 5942 0ab4 05       		.byte	0x5
 5943 0ab5 43       		.byte	0x43
 5944 0ab6 C5000000 		.4byte	0xc5
 5945 0aba 05       		.uleb128 0x5
 5946 0abb 03       		.byte	0x3
 5947 0abc 00000000 		.4byte	leftSpeedLimit
 5948 0ac0 25       		.uleb128 0x25
 5949 0ac1 AD030000 		.4byte	.LASF155
 5950 0ac5 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 125


 5951 0ac6 44       		.byte	0x44
 5952 0ac7 C5000000 		.4byte	0xc5
 5953 0acb 05       		.uleb128 0x5
 5954 0acc 03       		.byte	0x3
 5955 0acd 00000000 		.4byte	rightSpeedLimit
 5956 0ad1 25       		.uleb128 0x25
 5957 0ad2 35070000 		.4byte	.LASF156
 5958 0ad6 05       		.byte	0x5
 5959 0ad7 47       		.byte	0x47
 5960 0ad8 C5000000 		.4byte	0xc5
 5961 0adc 05       		.uleb128 0x5
 5962 0add 03       		.byte	0x3
 5963 0ade 00000000 		.4byte	target_distance_cm
 5964 0ae2 25       		.uleb128 0x25
 5965 0ae3 E6060000 		.4byte	.LASF157
 5966 0ae7 05       		.byte	0x5
 5967 0ae8 49       		.byte	0x49
 5968 0ae9 C5000000 		.4byte	0xc5
 5969 0aed 05       		.uleb128 0x5
 5970 0aee 03       		.byte	0x3
 5971 0aef 00000000 		.4byte	accum_dist
 5972 0af3 25       		.uleb128 0x25
 5973 0af4 D0000000 		.4byte	.LASF158
 5974 0af8 05       		.byte	0x5
 5975 0af9 4A       		.byte	0x4a
 5976 0afa C5000000 		.4byte	0xc5
 5977 0afe 05       		.uleb128 0x5
 5978 0aff 03       		.byte	0x3
 5979 0b00 00000000 		.4byte	target_distance_quad
 5980 0b04 25       		.uleb128 0x25
 5981 0b05 29070000 		.4byte	.LASF159
 5982 0b09 05       		.byte	0x5
 5983 0b0a 4B       		.byte	0x4b
 5984 0b0b D1000000 		.4byte	0xd1
 5985 0b0f 05       		.uleb128 0x5
 5986 0b10 03       		.byte	0x3
 5987 0b11 00000000 		.4byte	quad_per_cm
 5988 0b15 25       		.uleb128 0x25
 5989 0b16 38040000 		.4byte	.LASF160
 5990 0b1a 05       		.byte	0x5
 5991 0b1b 4E       		.byte	0x4e
 5992 0b1c 95000000 		.4byte	0x95
 5993 0b20 05       		.uleb128 0x5
 5994 0b21 03       		.byte	0x3
 5995 0b22 00000000 		.4byte	initial_pos_valid
 5996 0b26 25       		.uleb128 0x25
 5997 0b27 23090000 		.4byte	.LASF161
 5998 0b2b 05       		.byte	0x5
 5999 0b2c 4F       		.byte	0x4f
 6000 0b2d C5000000 		.4byte	0xc5
 6001 0b31 05       		.uleb128 0x5
 6002 0b32 03       		.byte	0x3
 6003 0b33 00000000 		.4byte	initial_x_pos
 6004 0b37 25       		.uleb128 0x25
 6005 0b38 19060000 		.4byte	.LASF162
 6006 0b3c 05       		.byte	0x5
 6007 0b3d 50       		.byte	0x50
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 126


 6008 0b3e C5000000 		.4byte	0xc5
 6009 0b42 05       		.uleb128 0x5
 6010 0b43 03       		.byte	0x3
 6011 0b44 00000000 		.4byte	initial_y_pos
 6012 0b48 25       		.uleb128 0x25
 6013 0b49 CD070000 		.4byte	.LASF163
 6014 0b4d 05       		.byte	0x5
 6015 0b4e 53       		.byte	0x53
 6016 0b4f 95000000 		.4byte	0x95
 6017 0b53 05       		.uleb128 0x5
 6018 0b54 03       		.byte	0x3
 6019 0b55 00000000 		.4byte	brakeFlag
 6020 0b59 25       		.uleb128 0x25
 6021 0b5a C7020000 		.4byte	.LASF164
 6022 0b5e 05       		.byte	0x5
 6023 0b5f 54       		.byte	0x54
 6024 0b60 95000000 		.4byte	0x95
 6025 0b64 05       		.uleb128 0x5
 6026 0b65 03       		.byte	0x3
 6027 0b66 00000000 		.4byte	portOpen
 6028 0b6a 25       		.uleb128 0x25
 6029 0b6b 6B000000 		.4byte	.LASF165
 6030 0b6f 05       		.byte	0x5
 6031 0b70 57       		.byte	0x57
 6032 0b71 C5000000 		.4byte	0xc5
 6033 0b75 05       		.uleb128 0x5
 6034 0b76 03       		.byte	0x3
 6035 0b77 00000000 		.4byte	prevVoltage
 6036 0b7b 25       		.uleb128 0x25
 6037 0b7c EE000000 		.4byte	.LASF166
 6038 0b80 05       		.byte	0x5
 6039 0b81 58       		.byte	0x58
 6040 0b82 C5000000 		.4byte	0xc5
 6041 0b86 05       		.uleb128 0x5
 6042 0b87 03       		.byte	0x3
 6043 0b88 00000000 		.4byte	prevVoltage2
 6044 0b8c 0E       		.uleb128 0xe
 6045 0b8d 83000000 		.4byte	0x83
 6046 0b91 9C0B0000 		.4byte	0xb9c
 6047 0b95 0F       		.uleb128 0xf
 6048 0b96 76000000 		.4byte	0x76
 6049 0b9a 3F       		.byte	0x3f
 6050 0b9b 00       		.byte	0
 6051 0b9c 25       		.uleb128 0x25
 6052 0b9d 08080000 		.4byte	.LASF167
 6053 0ba1 05       		.byte	0x5
 6054 0ba2 5E       		.byte	0x5e
 6055 0ba3 8C0B0000 		.4byte	0xb8c
 6056 0ba7 05       		.uleb128 0x5
 6057 0ba8 03       		.byte	0x3
 6058 0ba9 00000000 		.4byte	displaystring
 6059 0bad 25       		.uleb128 0x25
 6060 0bae B4070000 		.4byte	.LASF168
 6061 0bb2 05       		.byte	0x5
 6062 0bb3 5F       		.byte	0x5f
 6063 0bb4 8C0B0000 		.4byte	0xb8c
 6064 0bb8 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 127


 6065 0bb9 03       		.byte	0x3
 6066 0bba 00000000 		.4byte	line
 6067 0bbe 25       		.uleb128 0x25
 6068 0bbf A0070000 		.4byte	.LASF169
 6069 0bc3 05       		.byte	0x5
 6070 0bc4 5F       		.byte	0x5f
 6071 0bc5 8C0B0000 		.4byte	0xb8c
 6072 0bc9 05       		.uleb128 0x5
 6073 0bca 03       		.byte	0x3
 6074 0bcb 00000000 		.4byte	entry
 6075 0bcf 0E       		.uleb128 0xe
 6076 0bd0 95000000 		.4byte	0x95
 6077 0bd4 DF0B0000 		.4byte	0xbdf
 6078 0bd8 0F       		.uleb128 0xf
 6079 0bd9 76000000 		.4byte	0x76
 6080 0bdd 3F       		.byte	0x3f
 6081 0bde 00       		.byte	0
 6082 0bdf 25       		.uleb128 0x25
 6083 0be0 FA010000 		.4byte	.LASF170
 6084 0be4 05       		.byte	0x5
 6085 0be5 60       		.byte	0x60
 6086 0be6 CF0B0000 		.4byte	0xbcf
 6087 0bea 05       		.uleb128 0x5
 6088 0beb 03       		.byte	0x3
 6089 0bec 00000000 		.4byte	usbBuffer
 6090 0bf0 25       		.uleb128 0x25
 6091 0bf1 58040000 		.4byte	.LASF171
 6092 0bf5 05       		.byte	0x5
 6093 0bf6 75       		.byte	0x75
 6094 0bf7 60010000 		.4byte	0x160
 6095 0bfb 05       		.uleb128 0x5
 6096 0bfc 03       		.byte	0x3
 6097 0bfd 00000000 		.4byte	buffer_state
 6098 0c01 25       		.uleb128 0x25
 6099 0c02 B0000000 		.4byte	.LASF172
 6100 0c06 05       		.byte	0x5
 6101 0c07 76       		.byte	0x76
 6102 0c08 60010000 		.4byte	0x160
 6103 0c0c 05       		.uleb128 0x5
 6104 0c0d 03       		.byte	0x3
 6105 0c0e 00000000 		.4byte	system_state
 6106 0c12 25       		.uleb128 0x25
 6107 0c13 2D030000 		.4byte	.LASF173
 6108 0c17 05       		.byte	0x5
 6109 0c18 78       		.byte	0x78
 6110 0c19 E6000000 		.4byte	0xe6
 6111 0c1d 05       		.uleb128 0x5
 6112 0c1e 03       		.byte	0x3
 6113 0c1f 00000000 		.4byte	prev_movement_state
 6114 0c23 25       		.uleb128 0x25
 6115 0c24 AE010000 		.4byte	.LASF174
 6116 0c28 05       		.byte	0x5
 6117 0c29 79       		.byte	0x79
 6118 0c2a E6000000 		.4byte	0xe6
 6119 0c2e 05       		.uleb128 0x5
 6120 0c2f 03       		.byte	0x3
 6121 0c30 00000000 		.4byte	movement_state
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 128


 6122 0c34 25       		.uleb128 0x25
 6123 0c35 95000000 		.4byte	.LASF175
 6124 0c39 05       		.byte	0x5
 6125 0c3a 7A       		.byte	0x7a
 6126 0c3b 23010000 		.4byte	0x123
 6127 0c3f 05       		.uleb128 0x5
 6128 0c40 03       		.byte	0x3
 6129 0c41 00000000 		.4byte	track_mode
 6130 0c45 25       		.uleb128 0x25
 6131 0c46 0D030000 		.4byte	.LASF176
 6132 0c4a 05       		.byte	0x5
 6133 0c4b 7C       		.byte	0x7c
 6134 0c4c 95000000 		.4byte	0x95
 6135 0c50 05       		.uleb128 0x5
 6136 0c51 03       		.byte	0x3
 6137 0c52 00000000 		.4byte	byteCount
 6138 0c56 0E       		.uleb128 0xe
 6139 0c57 83000000 		.4byte	0x83
 6140 0c5b 660C0000 		.4byte	0xc66
 6141 0c5f 0F       		.uleb128 0xf
 6142 0c60 76000000 		.4byte	0x76
 6143 0c64 01       		.byte	0x1
 6144 0c65 00       		.byte	0
 6145 0c66 25       		.uleb128 0x25
 6146 0c67 77070000 		.4byte	.LASF177
 6147 0c6b 05       		.byte	0x5
 6148 0c6c 7D       		.byte	0x7d
 6149 0c6d 560C0000 		.4byte	0xc56
 6150 0c71 05       		.uleb128 0x5
 6151 0c72 03       		.byte	0x3
 6152 0c73 00000000 		.4byte	packet
 6153 0c77 25       		.uleb128 0x25
 6154 0c78 71010000 		.4byte	.LASF178
 6155 0c7c 05       		.byte	0x5
 6156 0c7d 81       		.byte	0x81
 6157 0c7e D8000000 		.4byte	0xd8
 6158 0c82 05       		.uleb128 0x5
 6159 0c83 03       		.byte	0x3
 6160 0c84 00000000 		.4byte	speed
 6161 0c88 25       		.uleb128 0x25
 6162 0c89 C8030000 		.4byte	.LASF179
 6163 0c8d 01       		.byte	0x1
 6164 0c8e 2B       		.byte	0x2b
 6165 0c8f A1000000 		.4byte	0xa1
 6166 0c93 05       		.uleb128 0x5
 6167 0c94 03       		.byte	0x3
 6168 0c95 00000000 		.4byte	instructionCount
 6169 0c99 25       		.uleb128 0x25
 6170 0c9a FB000000 		.4byte	.LASF180
 6171 0c9e 01       		.byte	0x1
 6172 0c9f 2C       		.byte	0x2c
 6173 0ca0 95000000 		.4byte	0x95
 6174 0ca4 05       		.uleb128 0x5
 6175 0ca5 03       		.byte	0x3
 6176 0ca6 00000000 		.4byte	sensorsDisabled
 6177 0caa 0E       		.uleb128 0xe
 6178 0cab 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 129


 6179 0caf C00C0000 		.4byte	0xcc0
 6180 0cb3 0F       		.uleb128 0xf
 6181 0cb4 76000000 		.4byte	0x76
 6182 0cb8 0E       		.byte	0xe
 6183 0cb9 0F       		.uleb128 0xf
 6184 0cba 76000000 		.4byte	0x76
 6185 0cbe 12       		.byte	0x12
 6186 0cbf 00       		.byte	0
 6187 0cc0 24       		.uleb128 0x24
 6188 0cc1 6D617000 		.ascii	"map\000"
 6189 0cc5 01       		.byte	0x1
 6190 0cc6 35       		.byte	0x35
 6191 0cc7 AA0C0000 		.4byte	0xcaa
 6192 0ccb 05       		.uleb128 0x5
 6193 0ccc 03       		.byte	0x3
 6194 0ccd 00000000 		.4byte	map
 6195 0cd1 0E       		.uleb128 0xe
 6196 0cd2 95000000 		.4byte	0x95
 6197 0cd6 E70C0000 		.4byte	0xce7
 6198 0cda 0F       		.uleb128 0xf
 6199 0cdb 76000000 		.4byte	0x76
 6200 0cdf 05       		.byte	0x5
 6201 0ce0 0F       		.uleb128 0xf
 6202 0ce1 76000000 		.4byte	0x76
 6203 0ce5 01       		.byte	0x1
 6204 0ce6 00       		.byte	0
 6205 0ce7 25       		.uleb128 0x25
 6206 0ce8 27050000 		.4byte	.LASF181
 6207 0cec 01       		.byte	0x1
 6208 0ced 48       		.byte	0x48
 6209 0cee D10C0000 		.4byte	0xcd1
 6210 0cf2 05       		.uleb128 0x5
 6211 0cf3 03       		.byte	0x3
 6212 0cf4 00000000 		.4byte	food_list
 6213 0cf8 0E       		.uleb128 0xe
 6214 0cf9 95000000 		.4byte	0x95
 6215 0cfd 0F0D0000 		.4byte	0xd0f
 6216 0d01 26       		.uleb128 0x26
 6217 0d02 76000000 		.4byte	0x76
 6218 0d06 1F03     		.2byte	0x31f
 6219 0d08 0F       		.uleb128 0xf
 6220 0d09 76000000 		.4byte	0x76
 6221 0d0d 02       		.byte	0x2
 6222 0d0e 00       		.byte	0
 6223 0d0f 25       		.uleb128 0x25
 6224 0d10 00040000 		.4byte	.LASF182
 6225 0d14 01       		.byte	0x1
 6226 0d15 30       		.byte	0x30
 6227 0d16 F80C0000 		.4byte	0xcf8
 6228 0d1a 05       		.uleb128 0x5
 6229 0d1b 03       		.byte	0x3
 6230 0d1c 00000000 		.4byte	path
 6231 0d20 0E       		.uleb128 0xe
 6232 0d21 95000000 		.4byte	0x95
 6233 0d25 300D0000 		.4byte	0xd30
 6234 0d29 0F       		.uleb128 0xf
 6235 0d2a 76000000 		.4byte	0x76
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 130


 6236 0d2e 01       		.byte	0x1
 6237 0d2f 00       		.byte	0
 6238 0d30 25       		.uleb128 0x25
 6239 0d31 89050000 		.4byte	.LASF183
 6240 0d35 01       		.byte	0x1
 6241 0d36 31       		.byte	0x31
 6242 0d37 200D0000 		.4byte	0xd20
 6243 0d3b 05       		.uleb128 0x5
 6244 0d3c 03       		.byte	0x3
 6245 0d3d 00000000 		.4byte	start
 6246 0d41 25       		.uleb128 0x25
 6247 0d42 38080000 		.4byte	.LASF184
 6248 0d46 01       		.byte	0x1
 6249 0d47 32       		.byte	0x32
 6250 0d48 200D0000 		.4byte	0xd20
 6251 0d4c 05       		.uleb128 0x5
 6252 0d4d 03       		.byte	0x3
 6253 0d4e 00000000 		.4byte	destination
 6254 0d52 25       		.uleb128 0x25
 6255 0d53 48010000 		.4byte	.LASF185
 6256 0d57 01       		.byte	0x1
 6257 0d58 2E       		.byte	0x2e
 6258 0d59 95000000 		.4byte	0x95
 6259 0d5d 05       		.uleb128 0x5
 6260 0d5e 03       		.byte	0x3
 6261 0d5f 00000000 		.4byte	robot_direction
 6262 0d63 25       		.uleb128 0x25
 6263 0d64 0A000000 		.4byte	.LASF186
 6264 0d68 07       		.byte	0x7
 6265 0d69 22       		.byte	0x22
 6266 0d6a 95000000 		.4byte	0x95
 6267 0d6e 05       		.uleb128 0x5
 6268 0d6f 03       		.byte	0x3
 6269 0d70 00000000 		.4byte	tracked_direction
 6270 0d74 25       		.uleb128 0x25
 6271 0d75 94070000 		.4byte	.LASF187
 6272 0d79 01       		.byte	0x1
 6273 0d7a 49       		.byte	0x49
 6274 0d7b 95000000 		.4byte	0x95
 6275 0d7f 05       		.uleb128 0x5
 6276 0d80 03       		.byte	0x3
 6277 0d81 00000000 		.4byte	food_length
 6278 0d85 0E       		.uleb128 0xe
 6279 0d86 83000000 		.4byte	0x83
 6280 0d8a 960D0000 		.4byte	0xd96
 6281 0d8e 26       		.uleb128 0x26
 6282 0d8f 76000000 		.4byte	0x76
 6283 0d93 1F03     		.2byte	0x31f
 6284 0d95 00       		.byte	0
 6285 0d96 25       		.uleb128 0x25
 6286 0d97 58050000 		.4byte	.LASF188
 6287 0d9b 01       		.byte	0x1
 6288 0d9c 2A       		.byte	0x2a
 6289 0d9d 850D0000 		.4byte	0xd85
 6290 0da1 05       		.uleb128 0x5
 6291 0da2 03       		.byte	0x3
 6292 0da3 00000000 		.4byte	instructions
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 131


 6293 0da7 27       		.uleb128 0x27
 6294 0da8 63010000 		.4byte	.LASF189
 6295 0dac 01       		.byte	0x1
 6296 0dad 5D02     		.2byte	0x25d
 6297 0daf A1000000 		.4byte	0xa1
 6298 0db3 05       		.uleb128 0x5
 6299 0db4 03       		.byte	0x3
 6300 0db5 00000000 		.4byte	leftTurnCount
 6301 0db9 27       		.uleb128 0x27
 6302 0dba 22000000 		.4byte	.LASF190
 6303 0dbe 01       		.byte	0x1
 6304 0dbf 5E02     		.2byte	0x25e
 6305 0dc1 A1000000 		.4byte	0xa1
 6306 0dc5 05       		.uleb128 0x5
 6307 0dc6 03       		.byte	0x3
 6308 0dc7 00000000 		.4byte	rightTurnCount
 6309 0dcb 00       		.byte	0
 6310              		.section	.debug_abbrev,"",%progbits
 6311              	.Ldebug_abbrev0:
 6312 0000 01       		.uleb128 0x1
 6313 0001 11       		.uleb128 0x11
 6314 0002 01       		.byte	0x1
 6315 0003 25       		.uleb128 0x25
 6316 0004 0E       		.uleb128 0xe
 6317 0005 13       		.uleb128 0x13
 6318 0006 0B       		.uleb128 0xb
 6319 0007 03       		.uleb128 0x3
 6320 0008 0E       		.uleb128 0xe
 6321 0009 1B       		.uleb128 0x1b
 6322 000a 0E       		.uleb128 0xe
 6323 000b 55       		.uleb128 0x55
 6324 000c 17       		.uleb128 0x17
 6325 000d 11       		.uleb128 0x11
 6326 000e 01       		.uleb128 0x1
 6327 000f 10       		.uleb128 0x10
 6328 0010 17       		.uleb128 0x17
 6329 0011 00       		.byte	0
 6330 0012 00       		.byte	0
 6331 0013 02       		.uleb128 0x2
 6332 0014 24       		.uleb128 0x24
 6333 0015 00       		.byte	0
 6334 0016 0B       		.uleb128 0xb
 6335 0017 0B       		.uleb128 0xb
 6336 0018 3E       		.uleb128 0x3e
 6337 0019 0B       		.uleb128 0xb
 6338 001a 03       		.uleb128 0x3
 6339 001b 0E       		.uleb128 0xe
 6340 001c 00       		.byte	0
 6341 001d 00       		.byte	0
 6342 001e 03       		.uleb128 0x3
 6343 001f 16       		.uleb128 0x16
 6344 0020 00       		.byte	0
 6345 0021 03       		.uleb128 0x3
 6346 0022 0E       		.uleb128 0xe
 6347 0023 3A       		.uleb128 0x3a
 6348 0024 0B       		.uleb128 0xb
 6349 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 132


 6350 0026 0B       		.uleb128 0xb
 6351 0027 49       		.uleb128 0x49
 6352 0028 13       		.uleb128 0x13
 6353 0029 00       		.byte	0
 6354 002a 00       		.byte	0
 6355 002b 04       		.uleb128 0x4
 6356 002c 24       		.uleb128 0x24
 6357 002d 00       		.byte	0
 6358 002e 0B       		.uleb128 0xb
 6359 002f 0B       		.uleb128 0xb
 6360 0030 3E       		.uleb128 0x3e
 6361 0031 0B       		.uleb128 0xb
 6362 0032 03       		.uleb128 0x3
 6363 0033 08       		.uleb128 0x8
 6364 0034 00       		.byte	0
 6365 0035 00       		.byte	0
 6366 0036 05       		.uleb128 0x5
 6367 0037 0F       		.uleb128 0xf
 6368 0038 00       		.byte	0
 6369 0039 0B       		.uleb128 0xb
 6370 003a 0B       		.uleb128 0xb
 6371 003b 49       		.uleb128 0x49
 6372 003c 13       		.uleb128 0x13
 6373 003d 00       		.byte	0
 6374 003e 00       		.byte	0
 6375 003f 06       		.uleb128 0x6
 6376 0040 16       		.uleb128 0x16
 6377 0041 00       		.byte	0
 6378 0042 03       		.uleb128 0x3
 6379 0043 0E       		.uleb128 0xe
 6380 0044 3A       		.uleb128 0x3a
 6381 0045 0B       		.uleb128 0xb
 6382 0046 3B       		.uleb128 0x3b
 6383 0047 05       		.uleb128 0x5
 6384 0048 49       		.uleb128 0x49
 6385 0049 13       		.uleb128 0x13
 6386 004a 00       		.byte	0
 6387 004b 00       		.byte	0
 6388 004c 07       		.uleb128 0x7
 6389 004d 04       		.uleb128 0x4
 6390 004e 01       		.byte	0x1
 6391 004f 03       		.uleb128 0x3
 6392 0050 0E       		.uleb128 0xe
 6393 0051 0B       		.uleb128 0xb
 6394 0052 0B       		.uleb128 0xb
 6395 0053 3A       		.uleb128 0x3a
 6396 0054 0B       		.uleb128 0xb
 6397 0055 3B       		.uleb128 0x3b
 6398 0056 0B       		.uleb128 0xb
 6399 0057 01       		.uleb128 0x1
 6400 0058 13       		.uleb128 0x13
 6401 0059 00       		.byte	0
 6402 005a 00       		.byte	0
 6403 005b 08       		.uleb128 0x8
 6404 005c 28       		.uleb128 0x28
 6405 005d 00       		.byte	0
 6406 005e 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 133


 6407 005f 0E       		.uleb128 0xe
 6408 0060 1C       		.uleb128 0x1c
 6409 0061 0D       		.uleb128 0xd
 6410 0062 00       		.byte	0
 6411 0063 00       		.byte	0
 6412 0064 09       		.uleb128 0x9
 6413 0065 13       		.uleb128 0x13
 6414 0066 01       		.byte	0x1
 6415 0067 03       		.uleb128 0x3
 6416 0068 0E       		.uleb128 0xe
 6417 0069 0B       		.uleb128 0xb
 6418 006a 0B       		.uleb128 0xb
 6419 006b 3A       		.uleb128 0x3a
 6420 006c 0B       		.uleb128 0xb
 6421 006d 3B       		.uleb128 0x3b
 6422 006e 0B       		.uleb128 0xb
 6423 006f 01       		.uleb128 0x1
 6424 0070 13       		.uleb128 0x13
 6425 0071 00       		.byte	0
 6426 0072 00       		.byte	0
 6427 0073 0A       		.uleb128 0xa
 6428 0074 0D       		.uleb128 0xd
 6429 0075 00       		.byte	0
 6430 0076 03       		.uleb128 0x3
 6431 0077 0E       		.uleb128 0xe
 6432 0078 3A       		.uleb128 0x3a
 6433 0079 0B       		.uleb128 0xb
 6434 007a 3B       		.uleb128 0x3b
 6435 007b 0B       		.uleb128 0xb
 6436 007c 49       		.uleb128 0x49
 6437 007d 13       		.uleb128 0x13
 6438 007e 38       		.uleb128 0x38
 6439 007f 0B       		.uleb128 0xb
 6440 0080 00       		.byte	0
 6441 0081 00       		.byte	0
 6442 0082 0B       		.uleb128 0xb
 6443 0083 2E       		.uleb128 0x2e
 6444 0084 01       		.byte	0x1
 6445 0085 3F       		.uleb128 0x3f
 6446 0086 19       		.uleb128 0x19
 6447 0087 03       		.uleb128 0x3
 6448 0088 0E       		.uleb128 0xe
 6449 0089 3A       		.uleb128 0x3a
 6450 008a 0B       		.uleb128 0xb
 6451 008b 3B       		.uleb128 0x3b
 6452 008c 0B       		.uleb128 0xb
 6453 008d 11       		.uleb128 0x11
 6454 008e 01       		.uleb128 0x1
 6455 008f 12       		.uleb128 0x12
 6456 0090 06       		.uleb128 0x6
 6457 0091 40       		.uleb128 0x40
 6458 0092 18       		.uleb128 0x18
 6459 0093 9742     		.uleb128 0x2117
 6460 0095 19       		.uleb128 0x19
 6461 0096 01       		.uleb128 0x1
 6462 0097 13       		.uleb128 0x13
 6463 0098 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 134


 6464 0099 00       		.byte	0
 6465 009a 0C       		.uleb128 0xc
 6466 009b 0B       		.uleb128 0xb
 6467 009c 01       		.byte	0x1
 6468 009d 11       		.uleb128 0x11
 6469 009e 01       		.uleb128 0x1
 6470 009f 12       		.uleb128 0x12
 6471 00a0 06       		.uleb128 0x6
 6472 00a1 00       		.byte	0
 6473 00a2 00       		.byte	0
 6474 00a3 0D       		.uleb128 0xd
 6475 00a4 34       		.uleb128 0x34
 6476 00a5 00       		.byte	0
 6477 00a6 03       		.uleb128 0x3
 6478 00a7 0E       		.uleb128 0xe
 6479 00a8 3A       		.uleb128 0x3a
 6480 00a9 0B       		.uleb128 0xb
 6481 00aa 3B       		.uleb128 0x3b
 6482 00ab 0B       		.uleb128 0xb
 6483 00ac 49       		.uleb128 0x49
 6484 00ad 13       		.uleb128 0x13
 6485 00ae 02       		.uleb128 0x2
 6486 00af 18       		.uleb128 0x18
 6487 00b0 00       		.byte	0
 6488 00b1 00       		.byte	0
 6489 00b2 0E       		.uleb128 0xe
 6490 00b3 01       		.uleb128 0x1
 6491 00b4 01       		.byte	0x1
 6492 00b5 49       		.uleb128 0x49
 6493 00b6 13       		.uleb128 0x13
 6494 00b7 01       		.uleb128 0x1
 6495 00b8 13       		.uleb128 0x13
 6496 00b9 00       		.byte	0
 6497 00ba 00       		.byte	0
 6498 00bb 0F       		.uleb128 0xf
 6499 00bc 21       		.uleb128 0x21
 6500 00bd 00       		.byte	0
 6501 00be 49       		.uleb128 0x49
 6502 00bf 13       		.uleb128 0x13
 6503 00c0 2F       		.uleb128 0x2f
 6504 00c1 0B       		.uleb128 0xb
 6505 00c2 00       		.byte	0
 6506 00c3 00       		.byte	0
 6507 00c4 10       		.uleb128 0x10
 6508 00c5 2E       		.uleb128 0x2e
 6509 00c6 01       		.byte	0x1
 6510 00c7 3F       		.uleb128 0x3f
 6511 00c8 19       		.uleb128 0x19
 6512 00c9 03       		.uleb128 0x3
 6513 00ca 0E       		.uleb128 0xe
 6514 00cb 3A       		.uleb128 0x3a
 6515 00cc 0B       		.uleb128 0xb
 6516 00cd 3B       		.uleb128 0x3b
 6517 00ce 0B       		.uleb128 0xb
 6518 00cf 27       		.uleb128 0x27
 6519 00d0 19       		.uleb128 0x19
 6520 00d1 11       		.uleb128 0x11
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 135


 6521 00d2 01       		.uleb128 0x1
 6522 00d3 12       		.uleb128 0x12
 6523 00d4 06       		.uleb128 0x6
 6524 00d5 40       		.uleb128 0x40
 6525 00d6 18       		.uleb128 0x18
 6526 00d7 9642     		.uleb128 0x2116
 6527 00d9 19       		.uleb128 0x19
 6528 00da 01       		.uleb128 0x1
 6529 00db 13       		.uleb128 0x13
 6530 00dc 00       		.byte	0
 6531 00dd 00       		.byte	0
 6532 00de 11       		.uleb128 0x11
 6533 00df 05       		.uleb128 0x5
 6534 00e0 00       		.byte	0
 6535 00e1 03       		.uleb128 0x3
 6536 00e2 08       		.uleb128 0x8
 6537 00e3 3A       		.uleb128 0x3a
 6538 00e4 0B       		.uleb128 0xb
 6539 00e5 3B       		.uleb128 0x3b
 6540 00e6 0B       		.uleb128 0xb
 6541 00e7 49       		.uleb128 0x49
 6542 00e8 13       		.uleb128 0x13
 6543 00e9 02       		.uleb128 0x2
 6544 00ea 18       		.uleb128 0x18
 6545 00eb 00       		.byte	0
 6546 00ec 00       		.byte	0
 6547 00ed 12       		.uleb128 0x12
 6548 00ee 2E       		.uleb128 0x2e
 6549 00ef 01       		.byte	0x1
 6550 00f0 3F       		.uleb128 0x3f
 6551 00f1 19       		.uleb128 0x19
 6552 00f2 03       		.uleb128 0x3
 6553 00f3 0E       		.uleb128 0xe
 6554 00f4 3A       		.uleb128 0x3a
 6555 00f5 0B       		.uleb128 0xb
 6556 00f6 3B       		.uleb128 0x3b
 6557 00f7 0B       		.uleb128 0xb
 6558 00f8 11       		.uleb128 0x11
 6559 00f9 01       		.uleb128 0x1
 6560 00fa 12       		.uleb128 0x12
 6561 00fb 06       		.uleb128 0x6
 6562 00fc 40       		.uleb128 0x40
 6563 00fd 18       		.uleb128 0x18
 6564 00fe 9642     		.uleb128 0x2116
 6565 0100 19       		.uleb128 0x19
 6566 0101 01       		.uleb128 0x1
 6567 0102 13       		.uleb128 0x13
 6568 0103 00       		.byte	0
 6569 0104 00       		.byte	0
 6570 0105 13       		.uleb128 0x13
 6571 0106 34       		.uleb128 0x34
 6572 0107 00       		.byte	0
 6573 0108 03       		.uleb128 0x3
 6574 0109 08       		.uleb128 0x8
 6575 010a 3A       		.uleb128 0x3a
 6576 010b 0B       		.uleb128 0xb
 6577 010c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 136


 6578 010d 0B       		.uleb128 0xb
 6579 010e 49       		.uleb128 0x49
 6580 010f 13       		.uleb128 0x13
 6581 0110 02       		.uleb128 0x2
 6582 0111 18       		.uleb128 0x18
 6583 0112 00       		.byte	0
 6584 0113 00       		.byte	0
 6585 0114 14       		.uleb128 0x14
 6586 0115 05       		.uleb128 0x5
 6587 0116 00       		.byte	0
 6588 0117 03       		.uleb128 0x3
 6589 0118 0E       		.uleb128 0xe
 6590 0119 3A       		.uleb128 0x3a
 6591 011a 0B       		.uleb128 0xb
 6592 011b 3B       		.uleb128 0x3b
 6593 011c 0B       		.uleb128 0xb
 6594 011d 49       		.uleb128 0x49
 6595 011e 13       		.uleb128 0x13
 6596 011f 02       		.uleb128 0x2
 6597 0120 18       		.uleb128 0x18
 6598 0121 00       		.byte	0
 6599 0122 00       		.byte	0
 6600 0123 15       		.uleb128 0x15
 6601 0124 2E       		.uleb128 0x2e
 6602 0125 00       		.byte	0
 6603 0126 3F       		.uleb128 0x3f
 6604 0127 19       		.uleb128 0x19
 6605 0128 03       		.uleb128 0x3
 6606 0129 0E       		.uleb128 0xe
 6607 012a 3A       		.uleb128 0x3a
 6608 012b 0B       		.uleb128 0xb
 6609 012c 3B       		.uleb128 0x3b
 6610 012d 0B       		.uleb128 0xb
 6611 012e 11       		.uleb128 0x11
 6612 012f 01       		.uleb128 0x1
 6613 0130 12       		.uleb128 0x12
 6614 0131 06       		.uleb128 0x6
 6615 0132 40       		.uleb128 0x40
 6616 0133 18       		.uleb128 0x18
 6617 0134 9642     		.uleb128 0x2116
 6618 0136 19       		.uleb128 0x19
 6619 0137 00       		.byte	0
 6620 0138 00       		.byte	0
 6621 0139 16       		.uleb128 0x16
 6622 013a 2E       		.uleb128 0x2e
 6623 013b 00       		.byte	0
 6624 013c 3F       		.uleb128 0x3f
 6625 013d 19       		.uleb128 0x19
 6626 013e 03       		.uleb128 0x3
 6627 013f 0E       		.uleb128 0xe
 6628 0140 3A       		.uleb128 0x3a
 6629 0141 0B       		.uleb128 0xb
 6630 0142 3B       		.uleb128 0x3b
 6631 0143 05       		.uleb128 0x5
 6632 0144 11       		.uleb128 0x11
 6633 0145 01       		.uleb128 0x1
 6634 0146 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 137


 6635 0147 06       		.uleb128 0x6
 6636 0148 40       		.uleb128 0x40
 6637 0149 18       		.uleb128 0x18
 6638 014a 9642     		.uleb128 0x2116
 6639 014c 19       		.uleb128 0x19
 6640 014d 00       		.byte	0
 6641 014e 00       		.byte	0
 6642 014f 17       		.uleb128 0x17
 6643 0150 2E       		.uleb128 0x2e
 6644 0151 00       		.byte	0
 6645 0152 3F       		.uleb128 0x3f
 6646 0153 19       		.uleb128 0x19
 6647 0154 03       		.uleb128 0x3
 6648 0155 0E       		.uleb128 0xe
 6649 0156 3A       		.uleb128 0x3a
 6650 0157 0B       		.uleb128 0xb
 6651 0158 3B       		.uleb128 0x3b
 6652 0159 05       		.uleb128 0x5
 6653 015a 11       		.uleb128 0x11
 6654 015b 01       		.uleb128 0x1
 6655 015c 12       		.uleb128 0x12
 6656 015d 06       		.uleb128 0x6
 6657 015e 40       		.uleb128 0x40
 6658 015f 18       		.uleb128 0x18
 6659 0160 9742     		.uleb128 0x2117
 6660 0162 19       		.uleb128 0x19
 6661 0163 00       		.byte	0
 6662 0164 00       		.byte	0
 6663 0165 18       		.uleb128 0x18
 6664 0166 2E       		.uleb128 0x2e
 6665 0167 01       		.byte	0x1
 6666 0168 3F       		.uleb128 0x3f
 6667 0169 19       		.uleb128 0x19
 6668 016a 03       		.uleb128 0x3
 6669 016b 0E       		.uleb128 0xe
 6670 016c 3A       		.uleb128 0x3a
 6671 016d 0B       		.uleb128 0xb
 6672 016e 3B       		.uleb128 0x3b
 6673 016f 05       		.uleb128 0x5
 6674 0170 27       		.uleb128 0x27
 6675 0171 19       		.uleb128 0x19
 6676 0172 11       		.uleb128 0x11
 6677 0173 01       		.uleb128 0x1
 6678 0174 12       		.uleb128 0x12
 6679 0175 06       		.uleb128 0x6
 6680 0176 40       		.uleb128 0x40
 6681 0177 18       		.uleb128 0x18
 6682 0178 9642     		.uleb128 0x2116
 6683 017a 19       		.uleb128 0x19
 6684 017b 01       		.uleb128 0x1
 6685 017c 13       		.uleb128 0x13
 6686 017d 00       		.byte	0
 6687 017e 00       		.byte	0
 6688 017f 19       		.uleb128 0x19
 6689 0180 34       		.uleb128 0x34
 6690 0181 00       		.byte	0
 6691 0182 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 138


 6692 0183 0E       		.uleb128 0xe
 6693 0184 3A       		.uleb128 0x3a
 6694 0185 0B       		.uleb128 0xb
 6695 0186 3B       		.uleb128 0x3b
 6696 0187 05       		.uleb128 0x5
 6697 0188 49       		.uleb128 0x49
 6698 0189 13       		.uleb128 0x13
 6699 018a 02       		.uleb128 0x2
 6700 018b 18       		.uleb128 0x18
 6701 018c 00       		.byte	0
 6702 018d 00       		.byte	0
 6703 018e 1A       		.uleb128 0x1a
 6704 018f 34       		.uleb128 0x34
 6705 0190 00       		.byte	0
 6706 0191 03       		.uleb128 0x3
 6707 0192 08       		.uleb128 0x8
 6708 0193 3A       		.uleb128 0x3a
 6709 0194 0B       		.uleb128 0xb
 6710 0195 3B       		.uleb128 0x3b
 6711 0196 05       		.uleb128 0x5
 6712 0197 49       		.uleb128 0x49
 6713 0198 13       		.uleb128 0x13
 6714 0199 02       		.uleb128 0x2
 6715 019a 18       		.uleb128 0x18
 6716 019b 00       		.byte	0
 6717 019c 00       		.byte	0
 6718 019d 1B       		.uleb128 0x1b
 6719 019e 2E       		.uleb128 0x2e
 6720 019f 00       		.byte	0
 6721 01a0 3F       		.uleb128 0x3f
 6722 01a1 19       		.uleb128 0x19
 6723 01a2 03       		.uleb128 0x3
 6724 01a3 0E       		.uleb128 0xe
 6725 01a4 3A       		.uleb128 0x3a
 6726 01a5 0B       		.uleb128 0xb
 6727 01a6 3B       		.uleb128 0x3b
 6728 01a7 05       		.uleb128 0x5
 6729 01a8 27       		.uleb128 0x27
 6730 01a9 19       		.uleb128 0x19
 6731 01aa 11       		.uleb128 0x11
 6732 01ab 01       		.uleb128 0x1
 6733 01ac 12       		.uleb128 0x12
 6734 01ad 06       		.uleb128 0x6
 6735 01ae 40       		.uleb128 0x40
 6736 01af 18       		.uleb128 0x18
 6737 01b0 9742     		.uleb128 0x2117
 6738 01b2 19       		.uleb128 0x19
 6739 01b3 00       		.byte	0
 6740 01b4 00       		.byte	0
 6741 01b5 1C       		.uleb128 0x1c
 6742 01b6 2E       		.uleb128 0x2e
 6743 01b7 00       		.byte	0
 6744 01b8 3F       		.uleb128 0x3f
 6745 01b9 19       		.uleb128 0x19
 6746 01ba 03       		.uleb128 0x3
 6747 01bb 0E       		.uleb128 0xe
 6748 01bc 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 139


 6749 01bd 0B       		.uleb128 0xb
 6750 01be 3B       		.uleb128 0x3b
 6751 01bf 05       		.uleb128 0x5
 6752 01c0 27       		.uleb128 0x27
 6753 01c1 19       		.uleb128 0x19
 6754 01c2 11       		.uleb128 0x11
 6755 01c3 01       		.uleb128 0x1
 6756 01c4 12       		.uleb128 0x12
 6757 01c5 06       		.uleb128 0x6
 6758 01c6 40       		.uleb128 0x40
 6759 01c7 18       		.uleb128 0x18
 6760 01c8 9642     		.uleb128 0x2116
 6761 01ca 19       		.uleb128 0x19
 6762 01cb 00       		.byte	0
 6763 01cc 00       		.byte	0
 6764 01cd 1D       		.uleb128 0x1d
 6765 01ce 0B       		.uleb128 0xb
 6766 01cf 01       		.byte	0x1
 6767 01d0 11       		.uleb128 0x11
 6768 01d1 01       		.uleb128 0x1
 6769 01d2 12       		.uleb128 0x12
 6770 01d3 06       		.uleb128 0x6
 6771 01d4 01       		.uleb128 0x1
 6772 01d5 13       		.uleb128 0x13
 6773 01d6 00       		.byte	0
 6774 01d7 00       		.byte	0
 6775 01d8 1E       		.uleb128 0x1e
 6776 01d9 2E       		.uleb128 0x2e
 6777 01da 01       		.byte	0x1
 6778 01db 3F       		.uleb128 0x3f
 6779 01dc 19       		.uleb128 0x19
 6780 01dd 03       		.uleb128 0x3
 6781 01de 0E       		.uleb128 0xe
 6782 01df 3A       		.uleb128 0x3a
 6783 01e0 0B       		.uleb128 0xb
 6784 01e1 3B       		.uleb128 0x3b
 6785 01e2 05       		.uleb128 0x5
 6786 01e3 11       		.uleb128 0x11
 6787 01e4 01       		.uleb128 0x1
 6788 01e5 12       		.uleb128 0x12
 6789 01e6 06       		.uleb128 0x6
 6790 01e7 40       		.uleb128 0x40
 6791 01e8 18       		.uleb128 0x18
 6792 01e9 9642     		.uleb128 0x2116
 6793 01eb 19       		.uleb128 0x19
 6794 01ec 01       		.uleb128 0x1
 6795 01ed 13       		.uleb128 0x13
 6796 01ee 00       		.byte	0
 6797 01ef 00       		.byte	0
 6798 01f0 1F       		.uleb128 0x1f
 6799 01f1 05       		.uleb128 0x5
 6800 01f2 00       		.byte	0
 6801 01f3 03       		.uleb128 0x3
 6802 01f4 0E       		.uleb128 0xe
 6803 01f5 3A       		.uleb128 0x3a
 6804 01f6 0B       		.uleb128 0xb
 6805 01f7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 140


 6806 01f8 05       		.uleb128 0x5
 6807 01f9 49       		.uleb128 0x49
 6808 01fa 13       		.uleb128 0x13
 6809 01fb 02       		.uleb128 0x2
 6810 01fc 18       		.uleb128 0x18
 6811 01fd 00       		.byte	0
 6812 01fe 00       		.byte	0
 6813 01ff 20       		.uleb128 0x20
 6814 0200 2E       		.uleb128 0x2e
 6815 0201 01       		.byte	0x1
 6816 0202 3F       		.uleb128 0x3f
 6817 0203 19       		.uleb128 0x19
 6818 0204 03       		.uleb128 0x3
 6819 0205 0E       		.uleb128 0xe
 6820 0206 3A       		.uleb128 0x3a
 6821 0207 0B       		.uleb128 0xb
 6822 0208 3B       		.uleb128 0x3b
 6823 0209 05       		.uleb128 0x5
 6824 020a 49       		.uleb128 0x49
 6825 020b 13       		.uleb128 0x13
 6826 020c 11       		.uleb128 0x11
 6827 020d 01       		.uleb128 0x1
 6828 020e 12       		.uleb128 0x12
 6829 020f 06       		.uleb128 0x6
 6830 0210 40       		.uleb128 0x40
 6831 0211 18       		.uleb128 0x18
 6832 0212 9642     		.uleb128 0x2116
 6833 0214 19       		.uleb128 0x19
 6834 0215 01       		.uleb128 0x1
 6835 0216 13       		.uleb128 0x13
 6836 0217 00       		.byte	0
 6837 0218 00       		.byte	0
 6838 0219 21       		.uleb128 0x21
 6839 021a 05       		.uleb128 0x5
 6840 021b 00       		.byte	0
 6841 021c 03       		.uleb128 0x3
 6842 021d 08       		.uleb128 0x8
 6843 021e 3A       		.uleb128 0x3a
 6844 021f 0B       		.uleb128 0xb
 6845 0220 3B       		.uleb128 0x3b
 6846 0221 05       		.uleb128 0x5
 6847 0222 49       		.uleb128 0x49
 6848 0223 13       		.uleb128 0x13
 6849 0224 02       		.uleb128 0x2
 6850 0225 18       		.uleb128 0x18
 6851 0226 00       		.byte	0
 6852 0227 00       		.byte	0
 6853 0228 22       		.uleb128 0x22
 6854 0229 34       		.uleb128 0x34
 6855 022a 00       		.byte	0
 6856 022b 03       		.uleb128 0x3
 6857 022c 0E       		.uleb128 0xe
 6858 022d 3A       		.uleb128 0x3a
 6859 022e 0B       		.uleb128 0xb
 6860 022f 3B       		.uleb128 0x3b
 6861 0230 05       		.uleb128 0x5
 6862 0231 49       		.uleb128 0x49
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 141


 6863 0232 13       		.uleb128 0x13
 6864 0233 3F       		.uleb128 0x3f
 6865 0234 19       		.uleb128 0x19
 6866 0235 3C       		.uleb128 0x3c
 6867 0236 19       		.uleb128 0x19
 6868 0237 00       		.byte	0
 6869 0238 00       		.byte	0
 6870 0239 23       		.uleb128 0x23
 6871 023a 35       		.uleb128 0x35
 6872 023b 00       		.byte	0
 6873 023c 49       		.uleb128 0x49
 6874 023d 13       		.uleb128 0x13
 6875 023e 00       		.byte	0
 6876 023f 00       		.byte	0
 6877 0240 24       		.uleb128 0x24
 6878 0241 34       		.uleb128 0x34
 6879 0242 00       		.byte	0
 6880 0243 03       		.uleb128 0x3
 6881 0244 08       		.uleb128 0x8
 6882 0245 3A       		.uleb128 0x3a
 6883 0246 0B       		.uleb128 0xb
 6884 0247 3B       		.uleb128 0x3b
 6885 0248 0B       		.uleb128 0xb
 6886 0249 49       		.uleb128 0x49
 6887 024a 13       		.uleb128 0x13
 6888 024b 3F       		.uleb128 0x3f
 6889 024c 19       		.uleb128 0x19
 6890 024d 02       		.uleb128 0x2
 6891 024e 18       		.uleb128 0x18
 6892 024f 00       		.byte	0
 6893 0250 00       		.byte	0
 6894 0251 25       		.uleb128 0x25
 6895 0252 34       		.uleb128 0x34
 6896 0253 00       		.byte	0
 6897 0254 03       		.uleb128 0x3
 6898 0255 0E       		.uleb128 0xe
 6899 0256 3A       		.uleb128 0x3a
 6900 0257 0B       		.uleb128 0xb
 6901 0258 3B       		.uleb128 0x3b
 6902 0259 0B       		.uleb128 0xb
 6903 025a 49       		.uleb128 0x49
 6904 025b 13       		.uleb128 0x13
 6905 025c 3F       		.uleb128 0x3f
 6906 025d 19       		.uleb128 0x19
 6907 025e 02       		.uleb128 0x2
 6908 025f 18       		.uleb128 0x18
 6909 0260 00       		.byte	0
 6910 0261 00       		.byte	0
 6911 0262 26       		.uleb128 0x26
 6912 0263 21       		.uleb128 0x21
 6913 0264 00       		.byte	0
 6914 0265 49       		.uleb128 0x49
 6915 0266 13       		.uleb128 0x13
 6916 0267 2F       		.uleb128 0x2f
 6917 0268 05       		.uleb128 0x5
 6918 0269 00       		.byte	0
 6919 026a 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 142


 6920 026b 27       		.uleb128 0x27
 6921 026c 34       		.uleb128 0x34
 6922 026d 00       		.byte	0
 6923 026e 03       		.uleb128 0x3
 6924 026f 0E       		.uleb128 0xe
 6925 0270 3A       		.uleb128 0x3a
 6926 0271 0B       		.uleb128 0xb
 6927 0272 3B       		.uleb128 0x3b
 6928 0273 05       		.uleb128 0x5
 6929 0274 49       		.uleb128 0x49
 6930 0275 13       		.uleb128 0x13
 6931 0276 3F       		.uleb128 0x3f
 6932 0277 19       		.uleb128 0x19
 6933 0278 02       		.uleb128 0x2
 6934 0279 18       		.uleb128 0x18
 6935 027a 00       		.byte	0
 6936 027b 00       		.byte	0
 6937 027c 00       		.byte	0
 6938              		.section	.debug_aranges,"",%progbits
 6939 0000 6C010000 		.4byte	0x16c
 6940 0004 0200     		.2byte	0x2
 6941 0006 00000000 		.4byte	.Ldebug_info0
 6942 000a 04       		.byte	0x4
 6943 000b 00       		.byte	0
 6944 000c 0000     		.2byte	0
 6945 000e 0000     		.2byte	0
 6946 0010 00000000 		.4byte	.LFB63
 6947 0014 60010000 		.4byte	.LFE63-.LFB63
 6948 0018 00000000 		.4byte	.LFB64
 6949 001c 18000000 		.4byte	.LFE64-.LFB64
 6950 0020 00000000 		.4byte	.LFB65
 6951 0024 18000000 		.4byte	.LFE65-.LFB65
 6952 0028 00000000 		.4byte	.LFB66
 6953 002c 54000000 		.4byte	.LFE66-.LFB66
 6954 0030 00000000 		.4byte	.LFB67
 6955 0034 F4000000 		.4byte	.LFE67-.LFB67
 6956 0038 00000000 		.4byte	.LFB68
 6957 003c 18000000 		.4byte	.LFE68-.LFB68
 6958 0040 00000000 		.4byte	.LFB69
 6959 0044 18000000 		.4byte	.LFE69-.LFB69
 6960 0048 00000000 		.4byte	.LFB70
 6961 004c 22000000 		.4byte	.LFE70-.LFB70
 6962 0050 00000000 		.4byte	.LFB71
 6963 0054 1C000000 		.4byte	.LFE71-.LFB71
 6964 0058 00000000 		.4byte	.LFB72
 6965 005c 28000000 		.4byte	.LFE72-.LFB72
 6966 0060 00000000 		.4byte	.LFB73
 6967 0064 2C000000 		.4byte	.LFE73-.LFB73
 6968 0068 00000000 		.4byte	.LFB74
 6969 006c 44000000 		.4byte	.LFE74-.LFB74
 6970 0070 00000000 		.4byte	.LFB75
 6971 0074 38000000 		.4byte	.LFE75-.LFB75
 6972 0078 00000000 		.4byte	.LFB76
 6973 007c 38000000 		.4byte	.LFE76-.LFB76
 6974 0080 00000000 		.4byte	.LFB77
 6975 0084 38000000 		.4byte	.LFE77-.LFB77
 6976 0088 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 143


 6977 008c 14000000 		.4byte	.LFE78-.LFB78
 6978 0090 00000000 		.4byte	.LFB79
 6979 0094 18000000 		.4byte	.LFE79-.LFB79
 6980 0098 00000000 		.4byte	.LFB80
 6981 009c 18000000 		.4byte	.LFE80-.LFB80
 6982 00a0 00000000 		.4byte	.LFB81
 6983 00a4 18000000 		.4byte	.LFE81-.LFB81
 6984 00a8 00000000 		.4byte	.LFB82
 6985 00ac 18000000 		.4byte	.LFE82-.LFB82
 6986 00b0 00000000 		.4byte	.LFB83
 6987 00b4 B8000000 		.4byte	.LFE83-.LFB83
 6988 00b8 00000000 		.4byte	.LFB84
 6989 00bc BC010000 		.4byte	.LFE84-.LFB84
 6990 00c0 00000000 		.4byte	.LFB85
 6991 00c4 0C000000 		.4byte	.LFE85-.LFB85
 6992 00c8 00000000 		.4byte	.LFB86
 6993 00cc 2C000000 		.4byte	.LFE86-.LFB86
 6994 00d0 00000000 		.4byte	.LFB87
 6995 00d4 EC010000 		.4byte	.LFE87-.LFB87
 6996 00d8 00000000 		.4byte	.LFB88
 6997 00dc AC000000 		.4byte	.LFE88-.LFB88
 6998 00e0 00000000 		.4byte	.LFB89
 6999 00e4 20000000 		.4byte	.LFE89-.LFB89
 7000 00e8 00000000 		.4byte	.LFB90
 7001 00ec 28000000 		.4byte	.LFE90-.LFB90
 7002 00f0 00000000 		.4byte	.LFB91
 7003 00f4 0A000000 		.4byte	.LFE91-.LFB91
 7004 00f8 00000000 		.4byte	.LFB92
 7005 00fc 28000000 		.4byte	.LFE92-.LFB92
 7006 0100 00000000 		.4byte	.LFB93
 7007 0104 40000000 		.4byte	.LFE93-.LFB93
 7008 0108 00000000 		.4byte	.LFB94
 7009 010c 40000000 		.4byte	.LFE94-.LFB94
 7010 0110 00000000 		.4byte	.LFB95
 7011 0114 30020000 		.4byte	.LFE95-.LFB95
 7012 0118 00000000 		.4byte	.LFB96
 7013 011c 50010000 		.4byte	.LFE96-.LFB96
 7014 0120 00000000 		.4byte	.LFB97
 7015 0124 80010000 		.4byte	.LFE97-.LFB97
 7016 0128 00000000 		.4byte	.LFB98
 7017 012c 0C000000 		.4byte	.LFE98-.LFB98
 7018 0130 00000000 		.4byte	.LFB99
 7019 0134 C0000000 		.4byte	.LFE99-.LFB99
 7020 0138 00000000 		.4byte	.LFB100
 7021 013c B8000000 		.4byte	.LFE100-.LFB100
 7022 0140 00000000 		.4byte	.LFB101
 7023 0144 4A000000 		.4byte	.LFE101-.LFB101
 7024 0148 00000000 		.4byte	.LFB102
 7025 014c FC020000 		.4byte	.LFE102-.LFB102
 7026 0150 00000000 		.4byte	.LFB103
 7027 0154 68000000 		.4byte	.LFE103-.LFB103
 7028 0158 00000000 		.4byte	.LFB104
 7029 015c 50000000 		.4byte	.LFE104-.LFB104
 7030 0160 00000000 		.4byte	.LFB105
 7031 0164 3A000000 		.4byte	.LFE105-.LFB105
 7032 0168 00000000 		.4byte	0
 7033 016c 00000000 		.4byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 144


 7034              		.section	.debug_ranges,"",%progbits
 7035              	.Ldebug_ranges0:
 7036 0000 00000000 		.4byte	.LFB63
 7037 0004 60010000 		.4byte	.LFE63
 7038 0008 00000000 		.4byte	.LFB64
 7039 000c 18000000 		.4byte	.LFE64
 7040 0010 00000000 		.4byte	.LFB65
 7041 0014 18000000 		.4byte	.LFE65
 7042 0018 00000000 		.4byte	.LFB66
 7043 001c 54000000 		.4byte	.LFE66
 7044 0020 00000000 		.4byte	.LFB67
 7045 0024 F4000000 		.4byte	.LFE67
 7046 0028 00000000 		.4byte	.LFB68
 7047 002c 18000000 		.4byte	.LFE68
 7048 0030 00000000 		.4byte	.LFB69
 7049 0034 18000000 		.4byte	.LFE69
 7050 0038 00000000 		.4byte	.LFB70
 7051 003c 22000000 		.4byte	.LFE70
 7052 0040 00000000 		.4byte	.LFB71
 7053 0044 1C000000 		.4byte	.LFE71
 7054 0048 00000000 		.4byte	.LFB72
 7055 004c 28000000 		.4byte	.LFE72
 7056 0050 00000000 		.4byte	.LFB73
 7057 0054 2C000000 		.4byte	.LFE73
 7058 0058 00000000 		.4byte	.LFB74
 7059 005c 44000000 		.4byte	.LFE74
 7060 0060 00000000 		.4byte	.LFB75
 7061 0064 38000000 		.4byte	.LFE75
 7062 0068 00000000 		.4byte	.LFB76
 7063 006c 38000000 		.4byte	.LFE76
 7064 0070 00000000 		.4byte	.LFB77
 7065 0074 38000000 		.4byte	.LFE77
 7066 0078 00000000 		.4byte	.LFB78
 7067 007c 14000000 		.4byte	.LFE78
 7068 0080 00000000 		.4byte	.LFB79
 7069 0084 18000000 		.4byte	.LFE79
 7070 0088 00000000 		.4byte	.LFB80
 7071 008c 18000000 		.4byte	.LFE80
 7072 0090 00000000 		.4byte	.LFB81
 7073 0094 18000000 		.4byte	.LFE81
 7074 0098 00000000 		.4byte	.LFB82
 7075 009c 18000000 		.4byte	.LFE82
 7076 00a0 00000000 		.4byte	.LFB83
 7077 00a4 B8000000 		.4byte	.LFE83
 7078 00a8 00000000 		.4byte	.LFB84
 7079 00ac BC010000 		.4byte	.LFE84
 7080 00b0 00000000 		.4byte	.LFB85
 7081 00b4 0C000000 		.4byte	.LFE85
 7082 00b8 00000000 		.4byte	.LFB86
 7083 00bc 2C000000 		.4byte	.LFE86
 7084 00c0 00000000 		.4byte	.LFB87
 7085 00c4 EC010000 		.4byte	.LFE87
 7086 00c8 00000000 		.4byte	.LFB88
 7087 00cc AC000000 		.4byte	.LFE88
 7088 00d0 00000000 		.4byte	.LFB89
 7089 00d4 20000000 		.4byte	.LFE89
 7090 00d8 00000000 		.4byte	.LFB90
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 145


 7091 00dc 28000000 		.4byte	.LFE90
 7092 00e0 00000000 		.4byte	.LFB91
 7093 00e4 0A000000 		.4byte	.LFE91
 7094 00e8 00000000 		.4byte	.LFB92
 7095 00ec 28000000 		.4byte	.LFE92
 7096 00f0 00000000 		.4byte	.LFB93
 7097 00f4 40000000 		.4byte	.LFE93
 7098 00f8 00000000 		.4byte	.LFB94
 7099 00fc 40000000 		.4byte	.LFE94
 7100 0100 00000000 		.4byte	.LFB95
 7101 0104 30020000 		.4byte	.LFE95
 7102 0108 00000000 		.4byte	.LFB96
 7103 010c 50010000 		.4byte	.LFE96
 7104 0110 00000000 		.4byte	.LFB97
 7105 0114 80010000 		.4byte	.LFE97
 7106 0118 00000000 		.4byte	.LFB98
 7107 011c 0C000000 		.4byte	.LFE98
 7108 0120 00000000 		.4byte	.LFB99
 7109 0124 C0000000 		.4byte	.LFE99
 7110 0128 00000000 		.4byte	.LFB100
 7111 012c B8000000 		.4byte	.LFE100
 7112 0130 00000000 		.4byte	.LFB101
 7113 0134 4A000000 		.4byte	.LFE101
 7114 0138 00000000 		.4byte	.LFB102
 7115 013c FC020000 		.4byte	.LFE102
 7116 0140 00000000 		.4byte	.LFB103
 7117 0144 68000000 		.4byte	.LFE103
 7118 0148 00000000 		.4byte	.LFB104
 7119 014c 50000000 		.4byte	.LFE104
 7120 0150 00000000 		.4byte	.LFB105
 7121 0154 3A000000 		.4byte	.LFE105
 7122 0158 00000000 		.4byte	0
 7123 015c 00000000 		.4byte	0
 7124              		.section	.debug_line,"",%progbits
 7125              	.Ldebug_line0:
 7126 0000 1E070000 		.section	.debug_str,"MS",%progbits,1
 7126      02006701 
 7126      00000201 
 7126      FB0E0D00 
 7126      01010101 
 7127              	.LASF140:
 7128 0000 64697265 		.ascii	"direction\000"
 7128      6374696F 
 7128      6E00
 7129              	.LASF186:
 7130 000a 74726163 		.ascii	"tracked_direction\000"
 7130      6B65645F 
 7130      64697265 
 7130      6374696F 
 7130      6E00
 7131              	.LASF23:
 7132 001c 52545552 		.ascii	"RTURN\000"
 7132      4E00
 7133              	.LASF190:
 7134 0022 72696768 		.ascii	"rightTurnCount\000"
 7134      74547572 
 7134      6E436F75 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 146


 7134      6E7400
 7135              	.LASF37:
 7136 0031 44455354 		.ascii	"DEST_TEST\000"
 7136      5F544553 
 7136      5400
 7137              	.LASF148:
 7138 003b 71756164 		.ascii	"quad_diff1\000"
 7138      5F646966 
 7138      663100
 7139              	.LASF149:
 7140 0046 71756164 		.ascii	"quad_diff2\000"
 7140      5F646966 
 7140      663200
 7141              	.LASF86:
 7142 0051 6D657373 		.ascii	"message\000"
 7142      61676500 
 7143              	.LASF98:
 7144 0059 51756164 		.ascii	"Quad_Dec_response\000"
 7144      5F446563 
 7144      5F726573 
 7144      706F6E73 
 7144      6500
 7145              	.LASF165:
 7146 006b 70726576 		.ascii	"prevVoltage\000"
 7146      566F6C74 
 7146      61676500 
 7147              	.LASF151:
 7148 0077 73746172 		.ascii	"start_turn_count\000"
 7148      745F7475 
 7148      726E5F63 
 7148      6F756E74 
 7148      00
 7149              	.LASF8:
 7150 0088 756E7369 		.ascii	"unsigned int\000"
 7150      676E6564 
 7150      20696E74 
 7150      00
 7151              	.LASF175:
 7152 0095 74726163 		.ascii	"track_mode\000"
 7152      6B5F6D6F 
 7152      646500
 7153              	.LASF11:
 7154 00a0 5F5F696E 		.ascii	"__int32_t\000"
 7154      7433325F 
 7154      7400
 7155              	.LASF17:
 7156 00aa 696E7431 		.ascii	"int16\000"
 7156      3600
 7157              	.LASF172:
 7158 00b0 73797374 		.ascii	"system_state\000"
 7158      656D5F73 
 7158      74617465 
 7158      00
 7159              	.LASF22:
 7160 00bd 4C545552 		.ascii	"LTURN\000"
 7160      4E00
 7161              	.LASF94:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 147


 7162 00c3 6973725F 		.ascii	"isr_adcTimer\000"
 7162      61646354 
 7162      696D6572 
 7162      00
 7163              	.LASF158:
 7164 00d0 74617267 		.ascii	"target_distance_quad\000"
 7164      65745F64 
 7164      69737461 
 7164      6E63655F 
 7164      71756164 
 7165              	.LASF25:
 7166 00e5 54524143 		.ascii	"TRACKING\000"
 7166      4B494E47 
 7166      00
 7167              	.LASF166:
 7168 00ee 70726576 		.ascii	"prevVoltage2\000"
 7168      566F6C74 
 7168      61676532 
 7168      00
 7169              	.LASF180:
 7170 00fb 73656E73 		.ascii	"sensorsDisabled\000"
 7170      6F727344 
 7170      69736162 
 7170      6C656400 
 7171              	.LASF56:
 7172 010b 7061636B 		.ascii	"packet_bytes\000"
 7172      65745F62 
 7172      79746573 
 7172      00
 7173              	.LASF52:
 7174 0118 67325F78 		.ascii	"g2_xpos\000"
 7174      706F7300 
 7175              	.LASF30:
 7176 0120 6D6F6465 		.ascii	"mode\000"
 7176      00
 7177              	.LASF144:
 7178 0125 71756164 		.ascii	"quad_count1\000"
 7178      5F636F75 
 7178      6E743100 
 7179              	.LASF145:
 7180 0131 71756164 		.ascii	"quad_count2\000"
 7180      5F636F75 
 7180      6E743200 
 7181              	.LASF107:
 7182 013d 74726163 		.ascii	"trackLineU\000"
 7182      6B4C696E 
 7182      655500
 7183              	.LASF185:
 7184 0148 726F626F 		.ascii	"robot_direction\000"
 7184      745F6469 
 7184      72656374 
 7184      696F6E00 
 7185              	.LASF106:
 7186 0158 74726163 		.ascii	"trackLineZ\000"
 7186      6B4C696E 
 7186      655A00
 7187              	.LASF189:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 148


 7188 0163 6C656674 		.ascii	"leftTurnCount\000"
 7188      5475726E 
 7188      436F756E 
 7188      7400
 7189              	.LASF178:
 7190 0171 73706565 		.ascii	"speed\000"
 7190      6400
 7191              	.LASF34:
 7192 0177 53515541 		.ascii	"SQUARE_TRACK\000"
 7192      52455F54 
 7192      5241434B 
 7192      00
 7193              	.LASF136:
 7194 0184 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7194      5F72665F 
 7194      7472616E 
 7194      736D6973 
 7194      73696F6E 
 7195              	.LASF137:
 7196 01a0 666C6167 		.ascii	"flag_print_rf\000"
 7196      5F707269 
 7196      6E745F72 
 7196      6600
 7197              	.LASF174:
 7198 01ae 6D6F7665 		.ascii	"movement_state\000"
 7198      6D656E74 
 7198      5F737461 
 7198      746500
 7199              	.LASF26:
 7200 01bd 54524143 		.ascii	"TRACKING_U\000"
 7200      4B494E47 
 7200      5F5500
 7201              	.LASF78:
 7202 01c8 696E6974 		.ascii	"initForward\000"
 7202      466F7277 
 7202      61726400 
 7203              	.LASF55:
 7204 01d4 67325F64 		.ascii	"g2_direction\000"
 7204      69726563 
 7204      74696F6E 
 7204      00
 7205              	.LASF89:
 7206 01e1 6973725F 		.ascii	"isr_quad1\000"
 7206      71756164 
 7206      3100
 7207              	.LASF18:
 7208 01eb 666C6F61 		.ascii	"float\000"
 7208      7400
 7209              	.LASF63:
 7210 01f1 73657453 		.ascii	"setSpeed\000"
 7210      70656564 
 7210      00
 7211              	.LASF170:
 7212 01fa 75736242 		.ascii	"usbBuffer\000"
 7212      75666665 
 7212      7200
 7213              	.LASF40:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 149


 7214 0204 696E6465 		.ascii	"index\000"
 7214      7800
 7215              	.LASF21:
 7216 020a 44524956 		.ascii	"DRIVE\000"
 7216      4500
 7217              	.LASF58:
 7218 0210 73747269 		.ascii	"string_packet\000"
 7218      6E675F70 
 7218      61636B65 
 7218      7400
 7219              	.LASF97:
 7220 021e 6368616E 		.ascii	"changeToBT\000"
 7220      6765546F 
 7220      425400
 7221              	.LASF66:
 7222 0229 636F756E 		.ascii	"countsLeft\000"
 7222      74734C65 
 7222      667400
 7223              	.LASF71:
 7224 0234 64726976 		.ascii	"driveForwards\000"
 7224      65466F72 
 7224      77617264 
 7224      7300
 7225              	.LASF73:
 7226 0242 7475726E 		.ascii	"turnLeft\000"
 7226      4C656674 
 7226      00
 7227              	.LASF7:
 7228 024b 6C6F6E67 		.ascii	"long long unsigned int\000"
 7228      206C6F6E 
 7228      6720756E 
 7228      7369676E 
 7228      65642069 
 7229              	.LASF133:
 7230 0262 666C6167 		.ascii	"flag_packet\000"
 7230      5F706163 
 7230      6B657400 
 7231              	.LASF118:
 7232 026e 66726F6E 		.ascii	"frontSensors\000"
 7232      7453656E 
 7232      736F7273 
 7232      00
 7233              	.LASF193:
 7234 027b 443A5C43 		.ascii	"D:\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 7234      53333031 
 7234      2D546561 
 7234      6D2D5265 
 7234      706F5C43 
 7235              	.LASF91:
 7236 02a0 6973725F 		.ascii	"isr_turn_timer\000"
 7236      7475726E 
 7236      5F74696D 
 7236      657200
 7237              	.LASF96:
 7238 02af 6368616E 		.ascii	"changeToRF\000"
 7238      6765546F 
 7238      524600
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 150


 7239              	.LASF75:
 7240 02ba 696E6974 		.ascii	"initTurnLeft\000"
 7240      5475726E 
 7240      4C656674 
 7240      00
 7241              	.LASF164:
 7242 02c7 706F7274 		.ascii	"portOpen\000"
 7242      4F70656E 
 7242      00
 7243              	.LASF79:
 7244 02d0 696E6974 		.ascii	"initBrake\000"
 7244      4272616B 
 7244      6500
 7245              	.LASF129:
 7246 02da 666C6167 		.ascii	"flag_ts_update\000"
 7246      5F74735F 
 7246      75706461 
 7246      746500
 7247              	.LASF109:
 7248 02e9 7363616C 		.ascii	"scalingFactor\000"
 7248      696E6746 
 7248      6163746F 
 7248      7200
 7249              	.LASF99:
 7250 02f7 6C656674 		.ascii	"leftSpeed\000"
 7250      53706565 
 7250      6400
 7251              	.LASF128:
 7252 0301 666C6167 		.ascii	"flag_ts_enc\000"
 7252      5F74735F 
 7252      656E6300 
 7253              	.LASF176:
 7254 030d 62797465 		.ascii	"byteCount\000"
 7254      436F756E 
 7254      7400
 7255              	.LASF117:
 7256 0317 61637469 		.ascii	"actionDebounce\000"
 7256      6F6E4465 
 7256      626F756E 
 7256      636500
 7257              	.LASF93:
 7258 0326 62757474 		.ascii	"button\000"
 7258      6F6E00
 7259              	.LASF173:
 7260 032d 70726576 		.ascii	"prev_movement_state\000"
 7260      5F6D6F76 
 7260      656D656E 
 7260      745F7374 
 7260      61746500 
 7261              	.LASF115:
 7262 0341 73656E73 		.ascii	"sensorVals\000"
 7262      6F725661 
 7262      6C7300
 7263              	.LASF111:
 7264 034c 72657375 		.ascii	"result_str\000"
 7264      6C745F73 
 7264      747200
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 151


 7265              	.LASF122:
 7266 0357 75617274 		.ascii	"uart_set_PWM\000"
 7266      5F736574 
 7266      5F50574D 
 7266      00
 7267              	.LASF82:
 7268 0364 696E6974 		.ascii	"inittrackLineZ\000"
 7268      74726163 
 7268      6B4C696E 
 7268      655A00
 7269              	.LASF42:
 7270 0373 726F626F 		.ascii	"robot_ypos\000"
 7270      745F7970 
 7270      6F7300
 7271              	.LASF127:
 7272 037e 74735F64 		.ascii	"ts_display\000"
 7272      6973706C 
 7272      617900
 7273              	.LASF108:
 7274 0389 7072696E 		.ascii	"print_ADC\000"
 7274      745F4144 
 7274      4300
 7275              	.LASF101:
 7276 0393 7363616C 		.ascii	"scalingLeft\000"
 7276      696E674C 
 7276      65667400 
 7277              	.LASF10:
 7278 039f 63686172 		.ascii	"char\000"
 7278      00
 7279              	.LASF46:
 7280 03a4 67305F73 		.ascii	"g0_speed\000"
 7280      70656564 
 7280      00
 7281              	.LASF155:
 7282 03ad 72696768 		.ascii	"rightSpeedLimit\000"
 7282      74537065 
 7282      65644C69 
 7282      6D697400 
 7283              	.LASF59:
 7284 03bd 7365744C 		.ascii	"setLeftDir\000"
 7284      65667444 
 7284      697200
 7285              	.LASF179:
 7286 03c8 696E7374 		.ascii	"instructionCount\000"
 7286      72756374 
 7286      696F6E43 
 7286      6F756E74 
 7286      00
 7287              	.LASF74:
 7288 03d9 7475726E 		.ascii	"turnU\000"
 7288      5500
 7289              	.LASF53:
 7290 03df 67325F79 		.ascii	"g2_ypos\000"
 7290      706F7300 
 7291              	.LASF14:
 7292 03e7 75696E74 		.ascii	"uint16\000"
 7292      313600
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 152


 7293              	.LASF16:
 7294 03ee 696E7438 		.ascii	"int8\000"
 7294      00
 7295              	.LASF51:
 7296 03f3 67315F64 		.ascii	"g1_direction\000"
 7296      69726563 
 7296      74696F6E 
 7296      00
 7297              	.LASF182:
 7298 0400 70617468 		.ascii	"path\000"
 7298      00
 7299              	.LASF60:
 7300 0405 73657452 		.ascii	"setRightDir\000"
 7300      69676874 
 7300      44697200 
 7301              	.LASF32:
 7302 0411 43555256 		.ascii	"CURVE_TRACK\000"
 7302      455F5452 
 7302      41434B00 
 7303              	.LASF103:
 7304 041d 696E7465 		.ascii	"interCalc\000"
 7304      7243616C 
 7304      6300
 7305              	.LASF142:
 7306 0427 42545F45 		.ascii	"BT_ENABLED\000"
 7306      4E41424C 
 7306      454400
 7307              	.LASF65:
 7308 0432 72696768 		.ascii	"right\000"
 7308      7400
 7309              	.LASF160:
 7310 0438 696E6974 		.ascii	"initial_pos_valid\000"
 7310      69616C5F 
 7310      706F735F 
 7310      76616C69 
 7310      6400
 7311              	.LASF6:
 7312 044a 6C6F6E67 		.ascii	"long long int\000"
 7312      206C6F6E 
 7312      6720696E 
 7312      7400
 7313              	.LASF171:
 7314 0458 62756666 		.ascii	"buffer_state\000"
 7314      65725F73 
 7314      74617465 
 7314      00
 7315              	.LASF48:
 7316 0465 67315F78 		.ascii	"g1_xpos\000"
 7316      706F7300 
 7317              	.LASF80:
 7318 046d 696E6974 		.ascii	"initTrack\000"
 7318      54726163 
 7318      6B00
 7319              	.LASF119:
 7320 0477 6E657874 		.ascii	"nextStep\000"
 7320      53746570 
 7320      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 153


 7321              	.LASF191:
 7322 0480 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7322      4320342E 
 7322      392E3320 
 7322      32303135 
 7322      30333033 
 7323 04b3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7323      20726576 
 7323      6973696F 
 7323      6E203232 
 7323      31323230 
 7324 04e6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7324      66756E63 
 7324      74696F6E 
 7324      2D736563 
 7324      74696F6E 
 7325              	.LASF54:
 7326 050e 67325F73 		.ascii	"g2_speed\000"
 7326      70656564 
 7326      00
 7327              	.LASF45:
 7328 0517 67305F79 		.ascii	"g0_ypos\000"
 7328      706F7300 
 7329              	.LASF84:
 7330 051f 72665F63 		.ascii	"rf_char\000"
 7330      68617200 
 7331              	.LASF181:
 7332 0527 666F6F64 		.ascii	"food_list\000"
 7332      5F6C6973 
 7332      7400
 7333              	.LASF141:
 7334 0531 42494E5F 		.ascii	"BIN_ENABLED\000"
 7334      454E4142 
 7334      4C454400 
 7335              	.LASF100:
 7336 053d 72696768 		.ascii	"rightSpeed\000"
 7336      74537065 
 7336      656400
 7337              	.LASF126:
 7338 0548 74735F73 		.ascii	"ts_speed\000"
 7338      70656564 
 7338      00
 7339              	.LASF15:
 7340 0551 75696E74 		.ascii	"uint32\000"
 7340      333200
 7341              	.LASF188:
 7342 0558 696E7374 		.ascii	"instructions\000"
 7342      72756374 
 7342      696F6E73 
 7342      00
 7343              	.LASF67:
 7344 0565 636F756E 		.ascii	"countsRight\000"
 7344      74735269 
 7344      67687400 
 7345              	.LASF194:
 7346 0571 64617461 		.ascii	"data_main\000"
 7346      5F6D6169 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 154


 7346      6E00
 7347              	.LASF110:
 7348 057b 636F6E76 		.ascii	"converted_val\000"
 7348      65727465 
 7348      645F7661 
 7348      6C00
 7349              	.LASF183:
 7350 0589 73746172 		.ascii	"start\000"
 7350      7400
 7351              	.LASF39:
 7352 058f 72737369 		.ascii	"rssi\000"
 7352      00
 7353              	.LASF105:
 7354 0594 74726163 		.ascii	"trackLine\000"
 7354      6B4C696E 
 7354      6500
 7355              	.LASF47:
 7356 059e 67305F64 		.ascii	"g0_direction\000"
 7356      69726563 
 7356      74696F6E 
 7356      00
 7357              	.LASF138:
 7358 05ab 666C6167 		.ascii	"flag_receive_ADC\000"
 7358      5F726563 
 7358      65697665 
 7358      5F414443 
 7358      00
 7359              	.LASF24:
 7360 05bc 53544F50 		.ascii	"STOPPED\000"
 7360      50454400 
 7361              	.LASF85:
 7362 05c4 42545F72 		.ascii	"BT_rxInt\000"
 7362      78496E74 
 7362      00
 7363              	.LASF20:
 7364 05cd 6C6F6E67 		.ascii	"long double\000"
 7364      20646F75 
 7364      626C6500 
 7365              	.LASF83:
 7366 05d9 7278496E 		.ascii	"rxInt\000"
 7366      7400
 7367              	.LASF152:
 7368 05df 6C656674 		.ascii	"left_duty_cycle\000"
 7368      5F647574 
 7368      795F6379 
 7368      636C6500 
 7369              	.LASF95:
 7370 05ef 6973725F 		.ascii	"isr_deadzone\000"
 7370      64656164 
 7370      7A6F6E65 
 7370      00
 7371              	.LASF130:
 7372 05fc 666C6167 		.ascii	"flag_ts_speed\000"
 7372      5F74735F 
 7372      73706565 
 7372      6400
 7373              	.LASF135:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 155


 7374 060a 64617461 		.ascii	"dataready_flag\000"
 7374      72656164 
 7374      795F666C 
 7374      616700
 7375              	.LASF162:
 7376 0619 696E6974 		.ascii	"initial_y_pos\000"
 7376      69616C5F 
 7376      795F706F 
 7376      7300
 7377              	.LASF132:
 7378 0627 666C6167 		.ascii	"flag_rx\000"
 7378      5F727800 
 7379              	.LASF2:
 7380 062f 73686F72 		.ascii	"short int\000"
 7380      7420696E 
 7380      7400
 7381              	.LASF139:
 7382 0639 6164635F 		.ascii	"adc_result\000"
 7382      72657375 
 7382      6C7400
 7383              	.LASF77:
 7384 0644 696E6974 		.ascii	"initTurnU\000"
 7384      5475726E 
 7384      5500
 7385              	.LASF143:
 7386 064e 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7386      5F63616C 
 7386      635F7768 
 7386      65656C73 
 7386      70656564 
 7387              	.LASF4:
 7388 0663 6C6F6E67 		.ascii	"long int\000"
 7388      20696E74 
 7388      00
 7389              	.LASF76:
 7390 066c 696E6974 		.ascii	"initTurnRight\000"
 7390      5475726E 
 7390      52696768 
 7390      7400
 7391              	.LASF33:
 7392 067a 555F5452 		.ascii	"U_TRACK\000"
 7392      41434B00 
 7393              	.LASF123:
 7394 0682 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7394      52784275 
 7394      66666572 
 7394      00
 7395              	.LASF113:
 7396 068f 7072696E 		.ascii	"printString\000"
 7396      74537472 
 7396      696E6700 
 7397              	.LASF125:
 7398 069b 74735F75 		.ascii	"ts_update\000"
 7398      70646174 
 7398      6500
 7399              	.LASF31:
 7400 06a5 4E4F5F54 		.ascii	"NO_TRACK\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 156


 7400      5241434B 
 7400      00
 7401              	.LASF150:
 7402 06ae 64656164 		.ascii	"deadzone\000"
 7402      7A6F6E65 
 7402      00
 7403              	.LASF154:
 7404 06b7 6C656674 		.ascii	"leftSpeedLimit\000"
 7404      53706565 
 7404      644C696D 
 7404      697400
 7405              	.LASF38:
 7406 06c6 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7406      54524156 
 7406      45525345 
 7406      00
 7407              	.LASF27:
 7408 06d3 54524143 		.ascii	"TRACKING_SOFT\000"
 7408      4B494E47 
 7408      5F534F46 
 7408      5400
 7409              	.LASF64:
 7410 06e1 6C656674 		.ascii	"left\000"
 7410      00
 7411              	.LASF157:
 7412 06e6 61636375 		.ascii	"accum_dist\000"
 7412      6D5F6469 
 7412      737400
 7413              	.LASF120:
 7414 06f1 75736250 		.ascii	"usbPutString\000"
 7414      75745374 
 7414      72696E67 
 7414      00
 7415              	.LASF72:
 7416 06fe 7475726E 		.ascii	"turnRight\000"
 7416      52696768 
 7416      7400
 7417              	.LASF49:
 7418 0708 67315F79 		.ascii	"g1_ypos\000"
 7418      706F7300 
 7419              	.LASF88:
 7420 0710 6164635F 		.ascii	"adc_isr\000"
 7420      69737200 
 7421              	.LASF114:
 7422 0718 72656164 		.ascii	"readFrontSensors\000"
 7422      46726F6E 
 7422      7453656E 
 7422      736F7273 
 7422      00
 7423              	.LASF159:
 7424 0729 71756164 		.ascii	"quad_per_cm\000"
 7424      5F706572 
 7424      5F636D00 
 7425              	.LASF156:
 7426 0735 74617267 		.ascii	"target_distance_cm\000"
 7426      65745F64 
 7426      69737461 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 157


 7426      6E63655F 
 7426      636D00
 7427              	.LASF9:
 7428 0748 73697A65 		.ascii	"sizetype\000"
 7428      74797065 
 7428      00
 7429              	.LASF5:
 7430 0751 6C6F6E67 		.ascii	"long unsigned int\000"
 7430      20756E73 
 7430      69676E65 
 7430      6420696E 
 7430      7400
 7431              	.LASF57:
 7432 0763 62797465 		.ascii	"byte_packet\000"
 7432      5F706163 
 7432      6B657400 
 7433              	.LASF12:
 7434 076f 696E7433 		.ascii	"int32_t\000"
 7434      325F7400 
 7435              	.LASF177:
 7436 0777 7061636B 		.ascii	"packet\000"
 7436      657400
 7437              	.LASF41:
 7438 077e 726F626F 		.ascii	"robot_xpos\000"
 7438      745F7870 
 7438      6F7300
 7439              	.LASF70:
 7440 0789 6272616B 		.ascii	"brakeMotor\000"
 7440      654D6F74 
 7440      6F7200
 7441              	.LASF187:
 7442 0794 666F6F64 		.ascii	"food_length\000"
 7442      5F6C656E 
 7442      67746800 
 7443              	.LASF169:
 7444 07a0 656E7472 		.ascii	"entry\000"
 7444      7900
 7445              	.LASF1:
 7446 07a6 756E7369 		.ascii	"unsigned char\000"
 7446      676E6564 
 7446      20636861 
 7446      7200
 7447              	.LASF168:
 7448 07b4 6C696E65 		.ascii	"line\000"
 7448      00
 7449              	.LASF92:
 7450 07b9 53746F70 		.ascii	"Stop_on_line\000"
 7450      5F6F6E5F 
 7450      6C696E65 
 7450      00
 7451              	.LASF124:
 7452 07c6 74735F65 		.ascii	"ts_enc\000"
 7452      6E6300
 7453              	.LASF163:
 7454 07cd 6272616B 		.ascii	"brakeFlag\000"
 7454      65466C61 
 7454      6700
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 158


 7455              	.LASF131:
 7456 07d7 666C6167 		.ascii	"flag_ts_display\000"
 7456      5F74735F 
 7456      64697370 
 7456      6C617900 
 7457              	.LASF29:
 7458 07e7 73746174 		.ascii	"state\000"
 7458      6500
 7459              	.LASF62:
 7460 07ed 72657665 		.ascii	"reverseDirection\000"
 7460      72736544 
 7460      69726563 
 7460      74696F6E 
 7460      00
 7461              	.LASF68:
 7462 07fe 6272616B 		.ascii	"brakeLeft\000"
 7462      654C6566 
 7462      7400
 7463              	.LASF167:
 7464 0808 64697370 		.ascii	"displaystring\000"
 7464      6C617973 
 7464      7472696E 
 7464      6700
 7465              	.LASF146:
 7466 0816 6C617374 		.ascii	"last_quad_count1\000"
 7466      5F717561 
 7466      645F636F 
 7466      756E7431 
 7466      00
 7467              	.LASF147:
 7468 0827 6C617374 		.ascii	"last_quad_count2\000"
 7468      5F717561 
 7468      645F636F 
 7468      756E7432 
 7468      00
 7469              	.LASF184:
 7470 0838 64657374 		.ascii	"destination\000"
 7470      696E6174 
 7470      696F6E00 
 7471              	.LASF121:
 7472 0844 75736250 		.ascii	"usbPutChar\000"
 7472      75744368 
 7472      617200
 7473              	.LASF0:
 7474 084f 7369676E 		.ascii	"signed char\000"
 7474      65642063 
 7474      68617200 
 7475              	.LASF3:
 7476 085b 73686F72 		.ascii	"short unsigned int\000"
 7476      7420756E 
 7476      7369676E 
 7476      65642069 
 7476      6E7400
 7477              	.LASF43:
 7478 086e 726F626F 		.ascii	"robot_orientation\000"
 7478      745F6F72 
 7478      69656E74 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 159


 7478      6174696F 
 7478      6E00
 7479              	.LASF35:
 7480 0880 51554144 		.ascii	"QUAD_STOP\000"
 7480      5F53544F 
 7480      5000
 7481              	.LASF116:
 7482 088a 6D61696E 		.ascii	"main\000"
 7482      00
 7483              	.LASF87:
 7484 088f 42545F74 		.ascii	"BT_txInt\000"
 7484      78496E74 
 7484      00
 7485              	.LASF104:
 7486 0898 6E657874 		.ascii	"nextSpeed\000"
 7486      53706565 
 7486      6400
 7487              	.LASF90:
 7488 08a2 64697374 		.ascii	"dist\000"
 7488      00
 7489              	.LASF13:
 7490 08a7 75696E74 		.ascii	"uint8\000"
 7490      3800
 7491              	.LASF19:
 7492 08ad 646F7562 		.ascii	"double\000"
 7492      6C6500
 7493              	.LASF153:
 7494 08b4 72696768 		.ascii	"right_duty_cycle\000"
 7494      745F6475 
 7494      74795F63 
 7494      79636C65 
 7494      00
 7495              	.LASF36:
 7496 08c5 52465F53 		.ascii	"RF_STOP\000"
 7496      544F5000 
 7497              	.LASF61:
 7498 08cd 68616E64 		.ascii	"handle_rx_binary\000"
 7498      6C655F72 
 7498      785F6269 
 7498      6E617279 
 7498      00
 7499              	.LASF112:
 7500 08de 7072696E 		.ascii	"print_RF\000"
 7500      745F5246 
 7500      00
 7501              	.LASF28:
 7502 08e7 55545552 		.ascii	"UTURN\000"
 7502      4E00
 7503              	.LASF44:
 7504 08ed 67305F78 		.ascii	"g0_xpos\000"
 7504      706F7300 
 7505              	.LASF102:
 7506 08f5 7363616C 		.ascii	"scalingRight\000"
 7506      696E6752 
 7506      69676874 
 7506      00
 7507              	.LASF134:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccKGkFwO.s 			page 160


 7508 0902 666C6167 		.ascii	"flag_KB_string\000"
 7508      5F4B425F 
 7508      73747269 
 7508      6E6700
 7509              	.LASF50:
 7510 0911 67315F73 		.ascii	"g1_speed\000"
 7510      70656564 
 7510      00
 7511              	.LASF192:
 7512 091a 2E5C6D61 		.ascii	".\\main.c\000"
 7512      696E2E63 
 7512      00
 7513              	.LASF161:
 7514 0923 696E6974 		.ascii	"initial_x_pos\000"
 7514      69616C5F 
 7514      785F706F 
 7514      7300
 7515              	.LASF69:
 7516 0931 6272616B 		.ascii	"brakeRight\000"
 7516      65526967 
 7516      687400
 7517              	.LASF81:
 7518 093c 696E6974 		.ascii	"initTrackU\000"
 7518      54726163 
 7518      6B5500
 7519              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
