ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	prevVoltage,2,2
 262              		.comm	prevVoltage2,2,2
 263              		.global	displaystring
 264 0009 000000   		.align	2
 265              		.type	displaystring, %object
 266              		.size	displaystring, 64
 267              	displaystring:
 268 000c 43533330 		.ascii	"CS301 2016\012\000"
 268      31203230 
 268      31360A00 
 269 0018 00000000 		.space	52
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.comm	line,64,4
 271              		.comm	entry,64,4
 272              		.comm	usbBuffer,64,4
 273              		.comm	buffer_state,32,4
 274              		.comm	system_state,32,4
 275              		.global	prev_movement_state
 276              		.type	prev_movement_state, %object
 277              		.size	prev_movement_state, 1
 278              	prev_movement_state:
 279 004c 03       		.byte	3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 6


 280              		.global	movement_state
 281              		.type	movement_state, %object
 282              		.size	movement_state, 1
 283              	movement_state:
 284 004d 03       		.byte	3
 285              		.global	track_mode
 286              		.bss
 287              		.type	track_mode, %object
 288              		.size	track_mode, 1
 289              	track_mode:
 290 003c 00       		.space	1
 291              		.global	byteCount
 292              		.type	byteCount, %object
 293              		.size	byteCount, 1
 294              	byteCount:
 295 003d 00       		.space	1
 296              		.comm	packet,2,4
 297              		.global	speed
 298              		.data
 299 004e 0000     		.align	3
 300              		.type	speed, %object
 301              		.size	speed, 8
 302              	speed:
 303 0050 00000000 		.word	0
 304 0054 00002E40 		.word	1076756480
 305              		.comm	tracked_direction,4,4
 306              		.global	instructions
 307              		.bss
 308 003e 0000     		.align	2
 309              		.type	instructions, %object
 310              		.size	instructions, 800
 311              	instructions:
 312 0040 00000000 		.space	800
 312      00000000 
 312      00000000 
 312      00000000 
 312      00000000 
 313              		.global	instructionCount
 314              		.align	1
 315              		.type	instructionCount, %object
 316              		.size	instructionCount, 2
 317              	instructionCount:
 318 0360 0000     		.space	2
 319              		.global	instructionLength
 320              		.align	1
 321              		.type	instructionLength, %object
 322              		.size	instructionLength, 2
 323              	instructionLength:
 324 0362 0000     		.space	2
 325              		.global	sensorsDisabled
 326              		.align	2
 327              		.type	sensorsDisabled, %object
 328              		.size	sensorsDisabled, 4
 329              	sensorsDisabled:
 330 0364 00000000 		.space	4
 331              		.global	robot_direction
 332              		.data
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 7


 333              		.align	2
 334              		.type	robot_direction, %object
 335              		.size	robot_direction, 4
 336              	robot_direction:
 337 0058 02000000 		.word	2
 338              		.global	path
 339              		.bss
 340              		.align	2
 341              		.type	path, %object
 342              		.size	path, 9600
 343              	path:
 344 0368 00000000 		.space	9600
 344      00000000 
 344      00000000 
 344      00000000 
 344      00000000 
 345              		.global	start
 346              		.data
 347              		.align	2
 348              		.type	start, %object
 349              		.size	start, 8
 350              	start:
 351 005c 01000000 		.word	1
 352 0060 01000000 		.word	1
 353              		.global	destination
 354              		.align	2
 355              		.type	destination, %object
 356              		.size	destination, 8
 357              	destination:
 358 0064 0D000000 		.word	13
 359 0068 0B000000 		.word	11
 360              		.global	map
 361              		.align	2
 362              		.type	map, %object
 363              		.size	map, 1140
 364              	map:
 365 006c 01000000 		.word	1
 366 0070 01000000 		.word	1
 367 0074 01000000 		.word	1
 368 0078 01000000 		.word	1
 369 007c 01000000 		.word	1
 370 0080 01000000 		.word	1
 371 0084 01000000 		.word	1
 372 0088 01000000 		.word	1
 373 008c 01000000 		.word	1
 374 0090 01000000 		.word	1
 375 0094 01000000 		.word	1
 376 0098 01000000 		.word	1
 377 009c 01000000 		.word	1
 378 00a0 01000000 		.word	1
 379 00a4 01000000 		.word	1
 380 00a8 01000000 		.word	1
 381 00ac 01000000 		.word	1
 382 00b0 01000000 		.word	1
 383 00b4 01000000 		.word	1
 384 00b8 01000000 		.word	1
 385 00bc 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 8


 386 00c0 00000000 		.word	0
 387 00c4 00000000 		.word	0
 388 00c8 00000000 		.word	0
 389 00cc 00000000 		.word	0
 390 00d0 01000000 		.word	1
 391 00d4 00000000 		.word	0
 392 00d8 01000000 		.word	1
 393 00dc 00000000 		.word	0
 394 00e0 00000000 		.word	0
 395 00e4 00000000 		.word	0
 396 00e8 00000000 		.word	0
 397 00ec 00000000 		.word	0
 398 00f0 00000000 		.word	0
 399 00f4 00000000 		.word	0
 400 00f8 00000000 		.word	0
 401 00fc 00000000 		.word	0
 402 0100 01000000 		.word	1
 403 0104 01000000 		.word	1
 404 0108 01000000 		.word	1
 405 010c 01000000 		.word	1
 406 0110 01000000 		.word	1
 407 0114 01000000 		.word	1
 408 0118 00000000 		.word	0
 409 011c 01000000 		.word	1
 410 0120 00000000 		.word	0
 411 0124 01000000 		.word	1
 412 0128 00000000 		.word	0
 413 012c 01000000 		.word	1
 414 0130 00000000 		.word	0
 415 0134 01000000 		.word	1
 416 0138 01000000 		.word	1
 417 013c 01000000 		.word	1
 418 0140 01000000 		.word	1
 419 0144 01000000 		.word	1
 420 0148 00000000 		.word	0
 421 014c 01000000 		.word	1
 422 0150 01000000 		.word	1
 423 0154 00000000 		.word	0
 424 0158 00000000 		.word	0
 425 015c 00000000 		.word	0
 426 0160 01000000 		.word	1
 427 0164 00000000 		.word	0
 428 0168 01000000 		.word	1
 429 016c 00000000 		.word	0
 430 0170 00000000 		.word	0
 431 0174 00000000 		.word	0
 432 0178 01000000 		.word	1
 433 017c 00000000 		.word	0
 434 0180 00000000 		.word	0
 435 0184 00000000 		.word	0
 436 0188 00000000 		.word	0
 437 018c 00000000 		.word	0
 438 0190 01000000 		.word	1
 439 0194 00000000 		.word	0
 440 0198 01000000 		.word	1
 441 019c 01000000 		.word	1
 442 01a0 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 9


 443 01a4 01000000 		.word	1
 444 01a8 00000000 		.word	0
 445 01ac 01000000 		.word	1
 446 01b0 00000000 		.word	0
 447 01b4 01000000 		.word	1
 448 01b8 00000000 		.word	0
 449 01bc 01000000 		.word	1
 450 01c0 01000000 		.word	1
 451 01c4 01000000 		.word	1
 452 01c8 01000000 		.word	1
 453 01cc 01000000 		.word	1
 454 01d0 01000000 		.word	1
 455 01d4 01000000 		.word	1
 456 01d8 00000000 		.word	0
 457 01dc 01000000 		.word	1
 458 01e0 00000000 		.word	0
 459 01e4 01000000 		.word	1
 460 01e8 01000000 		.word	1
 461 01ec 00000000 		.word	0
 462 01f0 01000000 		.word	1
 463 01f4 00000000 		.word	0
 464 01f8 00000000 		.word	0
 465 01fc 00000000 		.word	0
 466 0200 00000000 		.word	0
 467 0204 00000000 		.word	0
 468 0208 00000000 		.word	0
 469 020c 00000000 		.word	0
 470 0210 00000000 		.word	0
 471 0214 00000000 		.word	0
 472 0218 00000000 		.word	0
 473 021c 00000000 		.word	0
 474 0220 01000000 		.word	1
 475 0224 00000000 		.word	0
 476 0228 01000000 		.word	1
 477 022c 00000000 		.word	0
 478 0230 01000000 		.word	1
 479 0234 01000000 		.word	1
 480 0238 00000000 		.word	0
 481 023c 01000000 		.word	1
 482 0240 01000000 		.word	1
 483 0244 01000000 		.word	1
 484 0248 01000000 		.word	1
 485 024c 01000000 		.word	1
 486 0250 01000000 		.word	1
 487 0254 01000000 		.word	1
 488 0258 01000000 		.word	1
 489 025c 01000000 		.word	1
 490 0260 00000000 		.word	0
 491 0264 01000000 		.word	1
 492 0268 00000000 		.word	0
 493 026c 01000000 		.word	1
 494 0270 00000000 		.word	0
 495 0274 01000000 		.word	1
 496 0278 01000000 		.word	1
 497 027c 01000000 		.word	1
 498 0280 01000000 		.word	1
 499 0284 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 10


 500 0288 00000000 		.word	0
 501 028c 00000000 		.word	0
 502 0290 00000000 		.word	0
 503 0294 00000000 		.word	0
 504 0298 00000000 		.word	0
 505 029c 00000000 		.word	0
 506 02a0 00000000 		.word	0
 507 02a4 00000000 		.word	0
 508 02a8 00000000 		.word	0
 509 02ac 00000000 		.word	0
 510 02b0 01000000 		.word	1
 511 02b4 00000000 		.word	0
 512 02b8 01000000 		.word	1
 513 02bc 00000000 		.word	0
 514 02c0 00000000 		.word	0
 515 02c4 00000000 		.word	0
 516 02c8 01000000 		.word	1
 517 02cc 01000000 		.word	1
 518 02d0 01000000 		.word	1
 519 02d4 01000000 		.word	1
 520 02d8 01000000 		.word	1
 521 02dc 01000000 		.word	1
 522 02e0 01000000 		.word	1
 523 02e4 01000000 		.word	1
 524 02e8 00000000 		.word	0
 525 02ec 01000000 		.word	1
 526 02f0 01000000 		.word	1
 527 02f4 01000000 		.word	1
 528 02f8 01000000 		.word	1
 529 02fc 01000000 		.word	1
 530 0300 00000000 		.word	0
 531 0304 01000000 		.word	1
 532 0308 01000000 		.word	1
 533 030c 01000000 		.word	1
 534 0310 00000000 		.word	0
 535 0314 01000000 		.word	1
 536 0318 01000000 		.word	1
 537 031c 00000000 		.word	0
 538 0320 00000000 		.word	0
 539 0324 00000000 		.word	0
 540 0328 00000000 		.word	0
 541 032c 00000000 		.word	0
 542 0330 00000000 		.word	0
 543 0334 00000000 		.word	0
 544 0338 00000000 		.word	0
 545 033c 00000000 		.word	0
 546 0340 00000000 		.word	0
 547 0344 00000000 		.word	0
 548 0348 01000000 		.word	1
 549 034c 00000000 		.word	0
 550 0350 00000000 		.word	0
 551 0354 00000000 		.word	0
 552 0358 01000000 		.word	1
 553 035c 00000000 		.word	0
 554 0360 01000000 		.word	1
 555 0364 01000000 		.word	1
 556 0368 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 11


 557 036c 01000000 		.word	1
 558 0370 01000000 		.word	1
 559 0374 01000000 		.word	1
 560 0378 01000000 		.word	1
 561 037c 01000000 		.word	1
 562 0380 00000000 		.word	0
 563 0384 01000000 		.word	1
 564 0388 01000000 		.word	1
 565 038c 01000000 		.word	1
 566 0390 00000000 		.word	0
 567 0394 01000000 		.word	1
 568 0398 00000000 		.word	0
 569 039c 01000000 		.word	1
 570 03a0 00000000 		.word	0
 571 03a4 01000000 		.word	1
 572 03a8 00000000 		.word	0
 573 03ac 01000000 		.word	1
 574 03b0 01000000 		.word	1
 575 03b4 00000000 		.word	0
 576 03b8 00000000 		.word	0
 577 03bc 00000000 		.word	0
 578 03c0 00000000 		.word	0
 579 03c4 00000000 		.word	0
 580 03c8 01000000 		.word	1
 581 03cc 00000000 		.word	0
 582 03d0 00000000 		.word	0
 583 03d4 00000000 		.word	0
 584 03d8 01000000 		.word	1
 585 03dc 00000000 		.word	0
 586 03e0 00000000 		.word	0
 587 03e4 00000000 		.word	0
 588 03e8 01000000 		.word	1
 589 03ec 00000000 		.word	0
 590 03f0 00000000 		.word	0
 591 03f4 00000000 		.word	0
 592 03f8 01000000 		.word	1
 593 03fc 01000000 		.word	1
 594 0400 00000000 		.word	0
 595 0404 01000000 		.word	1
 596 0408 01000000 		.word	1
 597 040c 01000000 		.word	1
 598 0410 00000000 		.word	0
 599 0414 01000000 		.word	1
 600 0418 01000000 		.word	1
 601 041c 01000000 		.word	1
 602 0420 00000000 		.word	0
 603 0424 01000000 		.word	1
 604 0428 01000000 		.word	1
 605 042c 01000000 		.word	1
 606 0430 00000000 		.word	0
 607 0434 01000000 		.word	1
 608 0438 01000000 		.word	1
 609 043c 01000000 		.word	1
 610 0440 00000000 		.word	0
 611 0444 01000000 		.word	1
 612 0448 01000000 		.word	1
 613 044c 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 12


 614 0450 00000000 		.word	0
 615 0454 00000000 		.word	0
 616 0458 01000000 		.word	1
 617 045c 00000000 		.word	0
 618 0460 00000000 		.word	0
 619 0464 00000000 		.word	0
 620 0468 00000000 		.word	0
 621 046c 00000000 		.word	0
 622 0470 00000000 		.word	0
 623 0474 00000000 		.word	0
 624 0478 01000000 		.word	1
 625 047c 00000000 		.word	0
 626 0480 00000000 		.word	0
 627 0484 00000000 		.word	0
 628 0488 00000000 		.word	0
 629 048c 00000000 		.word	0
 630 0490 01000000 		.word	1
 631 0494 01000000 		.word	1
 632 0498 01000000 		.word	1
 633 049c 01000000 		.word	1
 634 04a0 01000000 		.word	1
 635 04a4 01000000 		.word	1
 636 04a8 01000000 		.word	1
 637 04ac 01000000 		.word	1
 638 04b0 01000000 		.word	1
 639 04b4 01000000 		.word	1
 640 04b8 01000000 		.word	1
 641 04bc 01000000 		.word	1
 642 04c0 01000000 		.word	1
 643 04c4 01000000 		.word	1
 644 04c8 01000000 		.word	1
 645 04cc 01000000 		.word	1
 646 04d0 01000000 		.word	1
 647 04d4 01000000 		.word	1
 648 04d8 01000000 		.word	1
 649 04dc 01000000 		.word	1
 650              		.global	food_list
 651              		.align	2
 652              		.type	food_list, %object
 653              		.size	food_list, 48
 654              	food_list:
 655 04e0 05000000 		.word	5
 656 04e4 0A000000 		.word	10
 657 04e8 05000000 		.word	5
 658 04ec 03000000 		.word	3
 659 04f0 0D000000 		.word	13
 660 04f4 02000000 		.word	2
 661 04f8 00000000 		.space	24
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.global	food_length
 663              		.align	2
 664              		.type	food_length, %object
 665              		.size	food_length, 4
 666              	food_length:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 13


 667 0510 03000000 		.word	3
 668 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 669              		.align	2
 670              		.global	BT_txInt
 671              		.thumb
 672              		.thumb_func
 673              		.type	BT_txInt, %function
 674              	BT_txInt:
 675              	.LFB63:
 676              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** 
  29:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  30:.\main.c      **** uint16 instructionCount = 0;
  31:.\main.c      **** uint16 instructionLength = 0;
  32:.\main.c      **** uint32_t sensorsDisabled = 0;
  33:.\main.c      **** 
  34:.\main.c      **** uint32_t robot_direction = 2;
  35:.\main.c      **** 
  36:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  37:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  38:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  39:.\main.c      **** 
  40:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  41:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  42:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  43:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  44:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  45:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  46:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  47:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 14


  48:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  49:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  50:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  51:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  52:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  53:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  54:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  55:.\main.c      **** 
  56:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  57:.\main.c      **** //first number is the y coord, second is x
  58:.\main.c      **** //first number is row, second column
  59:.\main.c      **** 
  60:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  61:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  62:.\main.c      **** //uint8 food_list[6][2]= {{10,1},{1,13},{9,7},{16,13},{17,1}};
  63:.\main.c      **** uint32_t food_length = 3;
  64:.\main.c      **** 
  65:.\main.c      **** void changeToRF();
  66:.\main.c      **** void changeToBT();
  67:.\main.c      **** void brakeMotor();
  68:.\main.c      **** void driveForwards();
  69:.\main.c      **** void initTurnLeft();
  70:.\main.c      **** void initTurnRight();
  71:.\main.c      **** void inittrackLineZ();
  72:.\main.c      **** void trackLineU();
  73:.\main.c      **** void trackLine();
  74:.\main.c      **** void trackLineZ();
  75:.\main.c      **** void initTrackU();
  76:.\main.c      **** void turnLeft();
  77:.\main.c      **** void turnRight();
  78:.\main.c      **** void initForward();
  79:.\main.c      **** void initTurnU();
  80:.\main.c      **** void turnU();
  81:.\main.c      **** void initBrake();
  82:.\main.c      **** void print_ADC();
  83:.\main.c      **** void Quad_Dec_response();
  84:.\main.c      **** void handle_rx_binary();
  85:.\main.c      **** void readFrontSensors();
  86:.\main.c      **** void print_RF();
  87:.\main.c      **** 
  88:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  89:.\main.c      **** //BT
  90:.\main.c      **** CY_ISR(BT_txInt)
  91:.\main.c      **** {
 677              		.loc 1 91 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 7, -4
 685 0002 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
  92:.\main.c      ****     
  93:.\main.c      **** }
 687              		.loc 1 93 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 15


 688 0004 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0006 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 000a 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE63:
 697              		.size	BT_txInt, .-BT_txInt
 698              		.section	.text.adc_isr,"ax",%progbits
 699              		.align	2
 700              		.global	adc_isr
 701              		.thumb
 702              		.thumb_func
 703              		.type	adc_isr, %function
 704              	adc_isr:
 705              	.LFB64:
  94:.\main.c      **** 
  95:.\main.c      **** //ADC:
  96:.\main.c      **** CY_ISR (adc_isr)
  97:.\main.c      **** {
 706              		.loc 1 97 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
  98:.\main.c      ****     //adc_result = ADC_GetResult16(0);
  99:.\main.c      ****     adc_result = ADC_GetResult16();
 716              		.loc 1 99 0
 717 0004 FFF7FEFF 		bl	ADC_GetResult16
 718 0008 0346     		mov	r3, r0
 719 000a 1A46     		mov	r2, r3
 720 000c 044B     		ldr	r3, .L3
 721 000e 1A80     		strh	r2, [r3]	@ movhi
 100:.\main.c      ****     flag_receive_ADC = 1;
 722              		.loc 1 100 0
 723 0010 044B     		ldr	r3, .L3+4
 724 0012 0122     		movs	r2, #1
 725 0014 1A70     		strb	r2, [r3]
 101:.\main.c      ****     flag_print_rf = 1;
 726              		.loc 1 101 0
 727 0016 044B     		ldr	r3, .L3+8
 728 0018 0122     		movs	r2, #1
 729 001a 1A70     		strb	r2, [r3]
 102:.\main.c      ****     //LED_Write(~LED_Read());
 103:.\main.c      **** }
 730              		.loc 1 103 0
 731 001c 80BD     		pop	{r7, pc}
 732              	.L4:
 733 001e 00BF     		.align	2
 734              	.L3:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 16


 735 0020 00000000 		.word	adc_result
 736 0024 00000000 		.word	flag_receive_ADC
 737 0028 00000000 		.word	flag_print_rf
 738              		.cfi_endproc
 739              	.LFE64:
 740              		.size	adc_isr, .-adc_isr
 741              		.global	__aeabi_i2d
 742              		.global	__aeabi_dmul
 743              		.global	__aeabi_dcmpge
 744              		.section	.text.isr_quad1,"ax",%progbits
 745              		.align	2
 746              		.global	isr_quad1
 747              		.thumb
 748              		.thumb_func
 749              		.type	isr_quad1, %function
 750              	isr_quad1:
 751              	.LFB65:
 104:.\main.c      **** 
 105:.\main.c      **** CY_ISR (isr_quad1)
 106:.\main.c      **** {
 752              		.loc 1 106 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756 0000 B0B5     		push	{r4, r5, r7, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 4, -16
 759              		.cfi_offset 5, -12
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 107:.\main.c      ****     //LED_Write(~LED_Read());
 108:.\main.c      ****     last_quad_count1 = quad_count1;
 764              		.loc 1 108 0
 765 0004 5A4B     		ldr	r3, .L13+16
 766 0006 1A88     		ldrh	r2, [r3]
 767 0008 5A4B     		ldr	r3, .L13+20
 768 000a 1A80     		strh	r2, [r3]	@ movhi
 109:.\main.c      ****     last_quad_count2 = quad_count2;
 769              		.loc 1 109 0
 770 000c 5A4B     		ldr	r3, .L13+24
 771 000e 1A88     		ldrh	r2, [r3]
 772 0010 5A4B     		ldr	r3, .L13+28
 773 0012 1A80     		strh	r2, [r3]	@ movhi
 110:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 774              		.loc 1 110 0
 775 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 776 0018 0346     		mov	r3, r0
 777 001a 1A46     		mov	r2, r3
 778 001c 544B     		ldr	r3, .L13+16
 779 001e 1A80     		strh	r2, [r3]	@ movhi
 111:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 780              		.loc 1 111 0
 781 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 782 0024 0346     		mov	r3, r0
 783 0026 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 17


 784 0028 534B     		ldr	r3, .L13+24
 785 002a 1A80     		strh	r2, [r3]	@ movhi
 112:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 786              		.loc 1 112 0
 787 002c 504B     		ldr	r3, .L13+16
 788 002e 1B88     		ldrh	r3, [r3]
 789 0030 9AB2     		uxth	r2, r3
 790 0032 504B     		ldr	r3, .L13+20
 791 0034 1B88     		ldrh	r3, [r3]
 792 0036 9BB2     		uxth	r3, r3
 793 0038 D31A     		subs	r3, r2, r3
 794 003a 9BB2     		uxth	r3, r3
 795 003c 9AB2     		uxth	r2, r3
 796 003e 504B     		ldr	r3, .L13+32
 797 0040 1A80     		strh	r2, [r3]	@ movhi
 113:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 798              		.loc 1 113 0
 799 0042 4D4B     		ldr	r3, .L13+24
 800 0044 1B88     		ldrh	r3, [r3]
 801 0046 9AB2     		uxth	r2, r3
 802 0048 4C4B     		ldr	r3, .L13+28
 803 004a 1B88     		ldrh	r3, [r3]
 804 004c 9BB2     		uxth	r3, r3
 805 004e D31A     		subs	r3, r2, r3
 806 0050 9BB2     		uxth	r3, r3
 807 0052 9AB2     		uxth	r2, r3
 808 0054 4B4B     		ldr	r3, .L13+36
 809 0056 1A80     		strh	r2, [r3]	@ movhi
 114:.\main.c      ****     
 115:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 810              		.loc 1 115 0
 811 0058 454B     		ldr	r3, .L13+16
 812 005a 1B88     		ldrh	r3, [r3]
 813 005c 1BB2     		sxth	r3, r3
 814 005e 002B     		cmp	r3, #0
 815 0060 B8BF     		it	lt
 816 0062 5B42     		rsblt	r3, r3, #0
 817 0064 40F6B832 		movw	r2, #3000
 818 0068 9342     		cmp	r3, r2
 819 006a 17DD     		ble	.L6
 820              		.loc 1 115 0 is_stmt 0 discriminator 1
 821 006c 464B     		ldr	r3, .L13+40
 822 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 823 0070 012B     		cmp	r3, #1
 824 0072 13D0     		beq	.L6
 825              		.loc 1 115 0 discriminator 2
 826 0074 444B     		ldr	r3, .L13+40
 827 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0078 022B     		cmp	r3, #2
 829 007a 0FD0     		beq	.L6
 830              		.loc 1 115 0 discriminator 3
 831 007c 424B     		ldr	r3, .L13+40
 832 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 0080 072B     		cmp	r3, #7
 834 0082 0BD0     		beq	.L6
 116:.\main.c      ****     {
 117:.\main.c      ****         QuadDec_M1_SetCounter(0);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 18


 835              		.loc 1 117 0 is_stmt 1
 836 0084 0020     		movs	r0, #0
 837 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 118:.\main.c      ****         QuadDec_M2_SetCounter(0);
 838              		.loc 1 118 0
 839 008a 0020     		movs	r0, #0
 840 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 119:.\main.c      ****         quad_count1 = 0;
 841              		.loc 1 119 0
 842 0090 374B     		ldr	r3, .L13+16
 843 0092 0022     		movs	r2, #0
 844 0094 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****         quad_count2 = 0;
 845              		.loc 1 120 0
 846 0096 384B     		ldr	r3, .L13+24
 847 0098 0022     		movs	r2, #0
 848 009a 1A80     		strh	r2, [r3]	@ movhi
 849              	.L6:
 121:.\main.c      ****     }
 122:.\main.c      **** 
 123:.\main.c      ****     flag_calc_wheelspeed = 1;
 850              		.loc 1 123 0
 851 009c 3B4B     		ldr	r3, .L13+44
 852 009e 0122     		movs	r2, #1
 853 00a0 1A70     		strb	r2, [r3]
 124:.\main.c      ****     
 125:.\main.c      ****     if(track_mode == DEST_TEST)
 854              		.loc 1 125 0
 855 00a2 3B4B     		ldr	r3, .L13+48
 856 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 00a6 062B     		cmp	r3, #6
 858 00a8 56D1     		bne	.L5
 126:.\main.c      ****     {
 127:.\main.c      ****         //track the distance
 128:.\main.c      ****         accum_dist += quad_diff1;
 859              		.loc 1 128 0
 860 00aa 3A4B     		ldr	r3, .L13+52
 861 00ac 1B88     		ldrh	r3, [r3]
 862 00ae 9AB2     		uxth	r2, r3
 863 00b0 334B     		ldr	r3, .L13+32
 864 00b2 1B88     		ldrh	r3, [r3]
 865 00b4 9BB2     		uxth	r3, r3
 866 00b6 1344     		add	r3, r3, r2
 867 00b8 9BB2     		uxth	r3, r3
 868 00ba 9AB2     		uxth	r2, r3
 869 00bc 354B     		ldr	r3, .L13+52
 870 00be 1A80     		strh	r2, [r3]	@ movhi
 129:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 0.8)
 871              		.loc 1 129 0
 872 00c0 344B     		ldr	r3, .L13+52
 873 00c2 1B88     		ldrh	r3, [r3]
 874 00c4 1BB2     		sxth	r3, r3
 875 00c6 002B     		cmp	r3, #0
 876 00c8 B8BF     		it	lt
 877 00ca 5B42     		rsblt	r3, r3, #0
 878 00cc 1846     		mov	r0, r3
 879 00ce FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 19


 880 00d2 0446     		mov	r4, r0
 881 00d4 0D46     		mov	r5, r1
 882 00d6 304B     		ldr	r3, .L13+56
 883 00d8 1B88     		ldrh	r3, [r3]
 884 00da 1BB2     		sxth	r3, r3
 885 00dc 1846     		mov	r0, r3
 886 00de FFF7FEFF 		bl	__aeabi_i2d
 887 00e2 0246     		mov	r2, r0
 888 00e4 0B46     		mov	r3, r1
 889 00e6 1046     		mov	r0, r2
 890 00e8 1946     		mov	r1, r3
 891 00ea 1DA3     		adr	r3, .L13
 892 00ec D3E90023 		ldrd	r2, [r3]
 893 00f0 FFF7FEFF 		bl	__aeabi_dmul
 894 00f4 0246     		mov	r2, r0
 895 00f6 0B46     		mov	r3, r1
 896 00f8 2046     		mov	r0, r4
 897 00fa 2946     		mov	r1, r5
 898 00fc FFF7FEFF 		bl	__aeabi_dcmpge
 899 0100 0346     		mov	r3, r0
 900 0102 002B     		cmp	r3, #0
 901 0104 02D0     		beq	.L8
 130:.\main.c      ****         {
 131:.\main.c      ****             reached_target = 1;
 902              		.loc 1 131 0
 903 0106 254B     		ldr	r3, .L13+60
 904 0108 0122     		movs	r2, #1
 905 010a 1A70     		strb	r2, [r3]
 906              	.L8:
 132:.\main.c      ****         }
 133:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 1.1)
 907              		.loc 1 133 0
 908 010c 214B     		ldr	r3, .L13+52
 909 010e 1B88     		ldrh	r3, [r3]
 910 0110 1BB2     		sxth	r3, r3
 911 0112 002B     		cmp	r3, #0
 912 0114 B8BF     		it	lt
 913 0116 5B42     		rsblt	r3, r3, #0
 914 0118 1846     		mov	r0, r3
 915 011a FFF7FEFF 		bl	__aeabi_i2d
 916 011e 0446     		mov	r4, r0
 917 0120 0D46     		mov	r5, r1
 918 0122 1D4B     		ldr	r3, .L13+56
 919 0124 1B88     		ldrh	r3, [r3]
 920 0126 1BB2     		sxth	r3, r3
 921 0128 1846     		mov	r0, r3
 922 012a FFF7FEFF 		bl	__aeabi_i2d
 923 012e 0246     		mov	r2, r0
 924 0130 0B46     		mov	r3, r1
 925 0132 1046     		mov	r0, r2
 926 0134 1946     		mov	r1, r3
 927 0136 0CA3     		adr	r3, .L13+8
 928 0138 D3E90023 		ldrd	r2, [r3]
 929 013c FFF7FEFF 		bl	__aeabi_dmul
 930 0140 0246     		mov	r2, r0
 931 0142 0B46     		mov	r3, r1
 932 0144 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 20


 933 0146 2946     		mov	r1, r5
 934 0148 FFF7FEFF 		bl	__aeabi_dcmpge
 935 014c 0346     		mov	r3, r0
 936 014e 002B     		cmp	r3, #0
 937 0150 02D0     		beq	.L5
 134:.\main.c      ****         {
 135:.\main.c      ****             overshot_target = 1;
 938              		.loc 1 135 0
 939 0152 134B     		ldr	r3, .L13+64
 940 0154 0122     		movs	r2, #1
 941 0156 1A70     		strb	r2, [r3]
 942              	.L5:
 136:.\main.c      ****         }
 137:.\main.c      ****     }
 138:.\main.c      **** //    if (track_mode == QUAD_STOP)
 139:.\main.c      **** //    {
 140:.\main.c      **** //        accum_dist += quad_diff1;
 141:.\main.c      **** //        char mes[16];
 142:.\main.c      **** //        sprintf(mes, "dist: %d\r\n", accum_dist);
 143:.\main.c      **** //        UART_PutString(mes);
 144:.\main.c      **** //        if(abs(accum_dist) >= target_distance_quad)
 145:.\main.c      **** //        {
 146:.\main.c      **** //            initBrake();
 147:.\main.c      **** //            track_mode = NO_TRACK;
 148:.\main.c      **** //        }
 149:.\main.c      **** //    } else if (track_mode == RF_STOP)
 150:.\main.c      **** //    { 
 151:.\main.c      **** //        // Do pythag
 152:.\main.c      **** //        double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_sta
 153:.\main.c      **** //        if (dist >= target_distance_cm)
 154:.\main.c      **** //        {
 155:.\main.c      **** //            initBrake();
 156:.\main.c      **** //            track_mode = NO_TRACK;
 157:.\main.c      **** //        }
 158:.\main.c      **** //    }
 159:.\main.c      **** }
 943              		.loc 1 159 0
 944 0158 B0BD     		pop	{r4, r5, r7, pc}
 945              	.L14:
 946 015a 00BFAFF3 		.align	3
 946      0080
 947              	.L13:
 948 0160 9A999999 		.word	-1717986918
 949 0164 9999E93F 		.word	1072273817
 950 0168 9A999999 		.word	-1717986918
 951 016c 9999F13F 		.word	1072798105
 952 0170 00000000 		.word	quad_count1
 953 0174 00000000 		.word	last_quad_count1
 954 0178 00000000 		.word	quad_count2
 955 017c 00000000 		.word	last_quad_count2
 956 0180 00000000 		.word	quad_diff1
 957 0184 00000000 		.word	quad_diff2
 958 0188 00000000 		.word	movement_state
 959 018c 00000000 		.word	flag_calc_wheelspeed
 960 0190 00000000 		.word	track_mode
 961 0194 00000000 		.word	accum_dist
 962 0198 00000000 		.word	target_distance_quad
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 21


 963 019c 00000000 		.word	reached_target
 964 01a0 00000000 		.word	overshot_target
 965              		.cfi_endproc
 966              	.LFE65:
 967              		.size	isr_quad1, .-isr_quad1
 968 01a4 AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 969              		.align	2
 970              		.global	isr_turn_timer
 971              		.thumb
 972              		.thumb_func
 973              		.type	isr_turn_timer, %function
 974              	isr_turn_timer:
 975              	.LFB66:
 160:.\main.c      **** 
 161:.\main.c      **** CY_ISR(isr_turn_timer)
 162:.\main.c      **** {
 976              		.loc 1 162 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 00AF     		add	r7, sp, #0
 985              		.cfi_def_cfa_register 7
 163:.\main.c      ****     if(movement_state == LTURN)
 986              		.loc 1 163 0
 987 0004 264B     		ldr	r3, .L21
 988 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0008 012B     		cmp	r3, #1
 990 000a 15D1     		bne	.L16
 164:.\main.c      ****     {
 165:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 991              		.loc 1 165 0
 992 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 993 0010 0346     		mov	r3, r0
 994 0012 1A46     		mov	r2, r3
 995 0014 234B     		ldr	r3, .L21+4
 996 0016 1B88     		ldrh	r3, [r3]
 997 0018 1BB2     		sxth	r3, r3
 998 001a D31A     		subs	r3, r2, r3
 999 001c 002B     		cmp	r3, #0
 1000 001e B8BF     		it	lt
 1001 0020 5B42     		rsblt	r3, r3, #0
 1002 0022 CF2B     		cmp	r3, #207
 1003 0024 3BDD     		ble	.L15
 166:.\main.c      ****         {
 167:.\main.c      ****             //movement_state = STOPPED;
 168:.\main.c      ****             brakeMotor();
 1004              		.loc 1 168 0
 1005 0026 FFF7FEFF 		bl	brakeMotor
 169:.\main.c      ****             movement_state = prev_movement_state;
 1006              		.loc 1 169 0
 1007 002a 1F4B     		ldr	r3, .L21+8
 1008 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1009 002e 1C4B     		ldr	r3, .L21
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 22


 1010 0030 1A70     		strb	r2, [r3]
 170:.\main.c      ****             Timer_2_Stop();
 1011              		.loc 1 170 0
 1012 0032 FFF7FEFF 		bl	Timer_2_Stop
 1013 0036 32E0     		b	.L15
 1014              	.L16:
 171:.\main.c      ****         }
 172:.\main.c      ****     }
 173:.\main.c      ****     else if (movement_state == RTURN)
 1015              		.loc 1 173 0
 1016 0038 194B     		ldr	r3, .L21
 1017 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 003c 022B     		cmp	r3, #2
 1019 003e 15D1     		bne	.L19
 174:.\main.c      ****     {
 175:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1020              		.loc 1 175 0
 1021 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1022 0044 0346     		mov	r3, r0
 1023 0046 1A46     		mov	r2, r3
 1024 0048 164B     		ldr	r3, .L21+4
 1025 004a 1B88     		ldrh	r3, [r3]
 1026 004c 1BB2     		sxth	r3, r3
 1027 004e D31A     		subs	r3, r2, r3
 1028 0050 002B     		cmp	r3, #0
 1029 0052 B8BF     		it	lt
 1030 0054 5B42     		rsblt	r3, r3, #0
 1031 0056 CF2B     		cmp	r3, #207
 1032 0058 21DD     		ble	.L15
 176:.\main.c      ****         {
 177:.\main.c      ****             //movement_state = STOPPED;
 178:.\main.c      ****             brakeMotor();
 1033              		.loc 1 178 0
 1034 005a FFF7FEFF 		bl	brakeMotor
 179:.\main.c      ****             movement_state = prev_movement_state;
 1035              		.loc 1 179 0
 1036 005e 124B     		ldr	r3, .L21+8
 1037 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0062 0F4B     		ldr	r3, .L21
 1039 0064 1A70     		strb	r2, [r3]
 180:.\main.c      ****             Timer_2_Stop();
 1040              		.loc 1 180 0
 1041 0066 FFF7FEFF 		bl	Timer_2_Stop
 1042 006a 18E0     		b	.L15
 1043              	.L19:
 181:.\main.c      ****         }
 182:.\main.c      ****     }
 183:.\main.c      ****     else if (movement_state == UTURN)
 1044              		.loc 1 183 0
 1045 006c 0C4B     		ldr	r3, .L21
 1046 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0070 072B     		cmp	r3, #7
 1048 0072 14D1     		bne	.L15
 184:.\main.c      ****     {
 185:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1049              		.loc 1 185 0
 1050 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 23


 1051 0078 0346     		mov	r3, r0
 1052 007a 1A46     		mov	r2, r3
 1053 007c 094B     		ldr	r3, .L21+4
 1054 007e 1B88     		ldrh	r3, [r3]
 1055 0080 1BB2     		sxth	r3, r3
 1056 0082 D31A     		subs	r3, r2, r3
 1057 0084 002B     		cmp	r3, #0
 1058 0086 B8BF     		it	lt
 1059 0088 5B42     		rsblt	r3, r3, #0
 1060 008a CF2B     		cmp	r3, #207
 1061 008c 07DD     		ble	.L15
 186:.\main.c      ****         {
 187:.\main.c      ****             //movement_state = STOPPED;
 188:.\main.c      ****             brakeMotor();
 1062              		.loc 1 188 0
 1063 008e FFF7FEFF 		bl	brakeMotor
 189:.\main.c      ****             movement_state = prev_movement_state;
 1064              		.loc 1 189 0
 1065 0092 054B     		ldr	r3, .L21+8
 1066 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1067 0096 024B     		ldr	r3, .L21
 1068 0098 1A70     		strb	r2, [r3]
 190:.\main.c      ****             Timer_2_Stop();
 1069              		.loc 1 190 0
 1070 009a FFF7FEFF 		bl	Timer_2_Stop
 1071              	.L15:
 191:.\main.c      ****         }
 192:.\main.c      ****     }
 193:.\main.c      **** }
 1072              		.loc 1 193 0
 1073 009e 80BD     		pop	{r7, pc}
 1074              	.L22:
 1075              		.align	2
 1076              	.L21:
 1077 00a0 00000000 		.word	movement_state
 1078 00a4 00000000 		.word	start_turn_count
 1079 00a8 00000000 		.word	prev_movement_state
 1080              		.cfi_endproc
 1081              	.LFE66:
 1082              		.size	isr_turn_timer, .-isr_turn_timer
 1083              		.section	.text.Stop_on_line,"ax",%progbits
 1084              		.align	2
 1085              		.global	Stop_on_line
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	Stop_on_line, %function
 1089              	Stop_on_line:
 1090              	.LFB67:
 194:.\main.c      **** 
 195:.\main.c      **** 
 196:.\main.c      **** CY_ISR (Stop_on_line)
 197:.\main.c      **** {
 1091              		.loc 1 197 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 24


 1096 0000 80B4     		push	{r7}
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 198:.\main.c      ****     movement_state = STOPPED;
 1101              		.loc 1 198 0
 1102 0004 054B     		ldr	r3, .L25
 1103 0006 0322     		movs	r2, #3
 1104 0008 1A70     		strb	r2, [r3]
 199:.\main.c      ****     if(movement_state != DRIVE) return;
 1105              		.loc 1 199 0
 1106 000a 044B     		ldr	r3, .L25
 1107 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 000e 002B     		cmp	r3, #0
 1109 0010 00D0     		beq	.L23
 1110 0012 00BF     		nop
 1111              	.L23:
 200:.\main.c      ****     //initTurnLeft();
 201:.\main.c      **** }
 1112              		.loc 1 201 0
 1113 0014 BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0016 5DF8047B 		ldr	r7, [sp], #4
 1117              		.cfi_restore 7
 1118              		.cfi_def_cfa_offset 0
 1119 001a 7047     		bx	lr
 1120              	.L26:
 1121              		.align	2
 1122              	.L25:
 1123 001c 00000000 		.word	movement_state
 1124              		.cfi_endproc
 1125              	.LFE67:
 1126              		.size	Stop_on_line, .-Stop_on_line
 1127              		.section	.rodata
 1128              		.align	2
 1129              	.LC0:
 1130 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1130      74696E67 
 1130      20726F62 
 1130      6F74210D 
 1130      0A00
 1131              		.section	.text.button,"ax",%progbits
 1132              		.align	2
 1133              		.global	button
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	button, %function
 1137              	button:
 1138              	.LFB68:
 202:.\main.c      **** 
 203:.\main.c      **** CY_ISR (button)
 204:.\main.c      **** {
 1139              		.loc 1 204 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 25


 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 80B5     		push	{r7, lr}
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 205:.\main.c      ****     if(BT_ENABLED)
 1149              		.loc 1 205 0
 1150 0004 054B     		ldr	r3, .L29
 1151 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0008 002B     		cmp	r3, #0
 1153 000a 02D0     		beq	.L28
 206:.\main.c      ****     {
 207:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1154              		.loc 1 207 0
 1155 000c 0448     		ldr	r0, .L29+4
 1156 000e FFF7FEFF 		bl	UART_PutString
 1157              	.L28:
 208:.\main.c      ****     }
 209:.\main.c      ****     movement_state = DRIVE;
 1158              		.loc 1 209 0
 1159 0012 044B     		ldr	r3, .L29+8
 1160 0014 0022     		movs	r2, #0
 1161 0016 1A70     		strb	r2, [r3]
 210:.\main.c      **** }
 1162              		.loc 1 210 0
 1163 0018 80BD     		pop	{r7, pc}
 1164              	.L30:
 1165 001a 00BF     		.align	2
 1166              	.L29:
 1167 001c 00000000 		.word	BT_ENABLED
 1168 0020 00000000 		.word	.LC0
 1169 0024 00000000 		.word	movement_state
 1170              		.cfi_endproc
 1171              	.LFE68:
 1172              		.size	button, .-button
 1173              		.section	.text.isr_adcTimer,"ax",%progbits
 1174              		.align	2
 1175              		.global	isr_adcTimer
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	isr_adcTimer, %function
 1179              	isr_adcTimer:
 1180              	.LFB69:
 211:.\main.c      **** 
 212:.\main.c      **** CY_ISR(isr_adcTimer)
 213:.\main.c      **** {
 1181              		.loc 1 213 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 26


 1190              		.cfi_def_cfa_register 7
 214:.\main.c      ****     ADC_StartConvert();
 1191              		.loc 1 214 0
 1192 0004 FFF7FEFF 		bl	ADC_StartConvert
 215:.\main.c      **** }
 1193              		.loc 1 215 0
 1194 0008 80BD     		pop	{r7, pc}
 1195              		.cfi_endproc
 1196              	.LFE69:
 1197              		.size	isr_adcTimer, .-isr_adcTimer
 1198 000a 00BF     		.section	.rodata
 1199 0012 0000     		.align	2
 1200              	.LC1:
 1201 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1201      7A6F6E65 
 1201      206C6566 
 1201      740D0A00 
 1202              		.section	.text.isr_deadzone,"ax",%progbits
 1203              		.align	2
 1204              		.global	isr_deadzone
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	isr_deadzone, %function
 1208              	isr_deadzone:
 1209              	.LFB70:
 216:.\main.c      **** 
 217:.\main.c      **** CY_ISR(isr_deadzone)
 218:.\main.c      **** {
 1210              		.loc 1 218 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 7, -8
 1217              		.cfi_offset 14, -4
 1218 0002 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 219:.\main.c      ****     sensorsDisabled = 0;
 1220              		.loc 1 219 0
 1221 0004 054B     		ldr	r3, .L33
 1222 0006 0022     		movs	r2, #0
 1223 0008 1A60     		str	r2, [r3]
 220:.\main.c      ****     deadzone = 0;
 1224              		.loc 1 220 0
 1225 000a 054B     		ldr	r3, .L33+4
 1226 000c 0022     		movs	r2, #0
 1227 000e 1A70     		strb	r2, [r3]
 221:.\main.c      ****     Timer_Deadzone_Stop();
 1228              		.loc 1 221 0
 1229 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 222:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1230              		.loc 1 222 0
 1231 0014 0348     		ldr	r0, .L33+8
 1232 0016 FFF7FEFF 		bl	UART_PutString
 223:.\main.c      **** }
 1233              		.loc 1 223 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 27


 1234 001a 80BD     		pop	{r7, pc}
 1235              	.L34:
 1236              		.align	2
 1237              	.L33:
 1238 001c 00000000 		.word	sensorsDisabled
 1239 0020 00000000 		.word	deadzone
 1240 0024 14000000 		.word	.LC1
 1241              		.cfi_endproc
 1242              	.LFE70:
 1243              		.size	isr_deadzone, .-isr_deadzone
 1244              		.section	.rodata
 1245              		.align	2
 1246              	.LC2:
 1247 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1247      20747261 
 1247      76656C3A 
 1247      2025640D 
 1247      0A00
 1248 0036 0000     		.align	2
 1249              	.LC3:
 1250 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1250      67657265 
 1250      64206174 
 1250      20696E74 
 1250      65727365 
 1251 0055 000000   		.align	2
 1252              	.LC4:
 1253 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1253      7A6F6E65 
 1253      20656E74 
 1253      65726564 
 1253      210D0A00 
 1254              		.align	2
 1255              	.LC5:
 1256 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1256      65742064 
 1256      6973743A 
 1256      2025640D 
 1256      0A00
 1257 007e 0000     		.align	2
 1258              	.LC6:
 1259 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1259      67657265 
 1259      64206174 
 1259      20776869 
 1259      7465206C 
 1260              		.align	2
 1261              	.LC7:
 1262 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1262      67657265 
 1262      64206174 
 1262      20717561 
 1262      6420636F 
 1263              		.section	.text.main,"ax",%progbits
 1264              		.align	2
 1265              		.global	main
 1266              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 28


 1267              		.thumb_func
 1268              		.type	main, %function
 1269              	main:
 1270              	.LFB71:
 224:.\main.c      **** 
 225:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 226:.\main.c      **** 
 227:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 228:.\main.c      **** int main()
 229:.\main.c      **** {  
 1271              		.loc 1 229 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 64
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 90B0     		sub	sp, sp, #64
 1280              		.cfi_def_cfa_offset 72
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 230:.\main.c      **** 
 231:.\main.c      **** // ----- INITIALIZATIONS ----------
 232:.\main.c      ****     CYGlobalIntEnable;
 1283              		.loc 1 232 0
 1284              	@ 232 ".\main.c" 1
 1285 0006 62B6     		CPSIE   i
 1286              	@ 0 "" 2
 233:.\main.c      ****     if(ENABLE_PWM)
 234:.\main.c      ****     {
 235:.\main.c      ****         PWM_1_Start();// starting the pwm
 1287              		.loc 1 235 0
 1288              		.thumb
 1289 0008 FFF7FEFF 		bl	PWM_1_Start
 236:.\main.c      ****         PWM_2_Start();// starting the pwm
 1290              		.loc 1 236 0
 1291 000c FFF7FEFF 		bl	PWM_2_Start
 237:.\main.c      ****     }
 238:.\main.c      ****     
 239:.\main.c      ****     if(ENABLE_ADC)
 240:.\main.c      ****     {
 241:.\main.c      ****         ADC_Start();
 242:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 243:.\main.c      ****         //ADC_StartConvert();
 244:.\main.c      ****         
 245:.\main.c      ****         //start the ADC timer for software trigger mode
 246:.\main.c      ****         Timer_TS_Start();
 247:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 248:.\main.c      ****     }
 249:.\main.c      ****     
 250:.\main.c      ****     if (ENABLE_QUAD)
 251:.\main.c      ****     {
 252:.\main.c      ****         QuadDec_M1_Start();
 1292              		.loc 1 252 0
 1293 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 253:.\main.c      ****         QuadDec_M2_Start();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 29


 1294              		.loc 1 253 0
 1295 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 254:.\main.c      ****         
 255:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1296              		.loc 1 255 0
 1297 0018 A948     		ldr	r0, .L97
 1298 001a FFF7FEFF 		bl	isr_quad1_StartEx
 256:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1299              		.loc 1 256 0
 1300 001e A948     		ldr	r0, .L97+4
 1301 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 257:.\main.c      ****         
 258:.\main.c      ****         Timer_1_Start();
 1302              		.loc 1 258 0
 1303 0024 FFF7FEFF 		bl	Timer_1_Start
 259:.\main.c      ****     }
 260:.\main.c      ****     
 261:.\main.c      ****     if(ENABLE_STOP){
 262:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 263:.\main.c      ****         
 264:.\main.c      ****     }
 265:.\main.c      ****     isr_button_StartEx(button);
 1304              		.loc 1 265 0
 1305 0028 A748     		ldr	r0, .L97+8
 1306 002a FFF7FEFF 		bl	isr_button_StartEx
 266:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1307              		.loc 1 266 0
 1308 002e A748     		ldr	r0, .L97+12
 1309 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 267:.\main.c      **** 
 268:.\main.c      ****     // ------USB SETUP ----------------    
 269:.\main.c      ****     if (USE_USB){    
 270:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1310              		.loc 1 270 0
 1311 0034 0020     		movs	r0, #0
 1312 0036 0121     		movs	r1, #1
 1313 0038 FFF7FEFF 		bl	USBUART_Start
 271:.\main.c      ****         if (USBUART_GetConfiguration())
 1314              		.loc 1 271 0
 1315 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1316 0040 0346     		mov	r3, r0
 1317 0042 002B     		cmp	r3, #0
 1318 0044 01D0     		beq	.L36
 272:.\main.c      ****             {
 273:.\main.c      ****                  USBUART_CDC_Init();
 1319              		.loc 1 273 0
 1320 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1321              	.L36:
 274:.\main.c      ****             }
 275:.\main.c      ****     }
 276:.\main.c      ****     
 277:.\main.c      ****     if(BIN_ENABLED){
 1322              		.loc 1 277 0
 1323 004a A14B     		ldr	r3, .L97+16
 1324 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 004e 002B     		cmp	r3, #0
 1326 0050 01D0     		beq	.L37
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 30


 278:.\main.c      ****         changeToRF();
 1327              		.loc 1 278 0
 1328 0052 FFF7FEFF 		bl	changeToRF
 1329              	.L37:
 279:.\main.c      ****     }
 280:.\main.c      ****     
 281:.\main.c      ****     if(BT_ENABLED){
 1330              		.loc 1 281 0
 1331 0056 9F4B     		ldr	r3, .L97+20
 1332 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 005a 002B     		cmp	r3, #0
 1334 005c 01D0     		beq	.L38
 282:.\main.c      ****         changeToBT();
 1335              		.loc 1 282 0
 1336 005e FFF7FEFF 		bl	changeToBT
 1337              	.L38:
 283:.\main.c      ****     }
 284:.\main.c      ****     
 285:.\main.c      ****     uint16 actionDebounce = 0;
 1338              		.loc 1 285 0
 1339 0062 0023     		movs	r3, #0
 1340 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1341              	.L93:
 1342              	.LBB2:
 286:.\main.c      ****     
 287:.\main.c      ****     //usbPutString("Started");
 288:.\main.c      ****     for(;;)
 289:.\main.c      ****     {
 290:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 291:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1343              		.loc 1 291 0
 1344 0066 FFF7FEFF 		bl	Quad_Dec_response
 292:.\main.c      ****         if(BIN_ENABLED == 1)
 1345              		.loc 1 292 0
 1346 006a 994B     		ldr	r3, .L97+16
 1347 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 006e 012B     		cmp	r3, #1
 1349 0070 03D1     		bne	.L39
 293:.\main.c      ****         {
 294:.\main.c      ****             handle_rx_binary();
 1350              		.loc 1 294 0
 1351 0072 FFF7FEFF 		bl	handle_rx_binary
 295:.\main.c      ****             print_RF();
 1352              		.loc 1 295 0
 1353 0076 FFF7FEFF 		bl	print_RF
 1354              	.L39:
 296:.\main.c      ****         }
 297:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 298:.\main.c      ****         
 299:.\main.c      ****         uint8 frontSensors[5];
 300:.\main.c      ****         readFrontSensors(frontSensors);
 1355              		.loc 1 300 0
 1356 007a 07F13403 		add	r3, r7, #52
 1357 007e 1846     		mov	r0, r3
 1358 0080 FFF7FEFF 		bl	readFrontSensors
 301:.\main.c      ****         
 302:.\main.c      ****         switch(track_mode)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 31


 1359              		.loc 1 302 0
 1360 0084 944B     		ldr	r3, .L97+24
 1361 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 0088 072B     		cmp	r3, #7
 1363 008a 00F29B82 		bhi	.L40
 1364 008e 01A2     		adr	r2, .L42
 1365 0090 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1366              		.p2align 2
 1367              	.L42:
 1368 0094 C5050000 		.word	.L40+1
 1369 0098 C5050000 		.word	.L40+1
 1370 009c C5050000 		.word	.L40+1
 1371 00a0 B5000000 		.word	.L45+1
 1372 00a4 C5050000 		.word	.L40+1
 1373 00a8 F9000000 		.word	.L47+1
 1374 00ac 1F010000 		.word	.L48+1
 1375 00b0 1F010000 		.word	.L48+1
 1376              		.p2align 1
 1377              	.L45:
 303:.\main.c      ****         {
 304:.\main.c      ****             case SQUARE_TRACK:
 305:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1378              		.loc 1 305 0
 1379 00b4 894B     		ldr	r3, .L97+28
 1380 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 00b8 012B     		cmp	r3, #1
 1382 00ba 1CD0     		beq	.L49
 1383              		.loc 1 305 0 is_stmt 0 discriminator 1
 1384 00bc 874B     		ldr	r3, .L97+28
 1385 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 00c0 022B     		cmp	r3, #2
 1387 00c2 18D0     		beq	.L49
 306:.\main.c      ****                 {
 307:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1388              		.loc 1 307 0 is_stmt 1
 1389 00c4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1390 00c8 012B     		cmp	r3, #1
 1391 00ca 06D1     		bne	.L50
 1392              		.loc 1 307 0 is_stmt 0 discriminator 1
 1393 00cc 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1394 00d0 012B     		cmp	r3, #1
 1395 00d2 02D1     		bne	.L50
 308:.\main.c      ****                         initTurnLeft();
 1396              		.loc 1 308 0 is_stmt 1
 1397 00d4 FFF7FEFF 		bl	initTurnLeft
 1398 00d8 0DE0     		b	.L49
 1399              	.L50:
 309:.\main.c      ****                     }
 310:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1400              		.loc 1 310 0
 1401 00da 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1402 00de 012B     		cmp	r3, #1
 1403 00e0 06D1     		bne	.L51
 1404              		.loc 1 310 0 is_stmt 0 discriminator 1
 1405 00e2 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1406 00e6 012B     		cmp	r3, #1
 1407 00e8 02D1     		bne	.L51
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 32


 311:.\main.c      ****                     {
 312:.\main.c      ****                         initTurnRight();
 1408              		.loc 1 312 0 is_stmt 1
 1409 00ea FFF7FEFF 		bl	initTurnRight
 1410 00ee 02E0     		b	.L49
 1411              	.L51:
 313:.\main.c      ****                     }
 314:.\main.c      ****                     else inittrackLineZ();
 1412              		.loc 1 314 0
 1413 00f0 FFF7FEFF 		bl	inittrackLineZ
 315:.\main.c      ****                 }
 316:.\main.c      ****             break;
 1414              		.loc 1 316 0
 1415 00f4 66E2     		b	.L40
 1416              	.L49:
 1417 00f6 65E2     		b	.L40
 1418              	.L47:
 317:.\main.c      ****             case NO_TRACK:
 318:.\main.c      ****             break;
 319:.\main.c      ****             case CURVE_TRACK:
 320:.\main.c      ****             break;
 321:.\main.c      ****             case U_TRACK:
 322:.\main.c      ****             break;
 323:.\main.c      ****             case QUAD_STOP:
 324:.\main.c      ****             break;
 325:.\main.c      ****             case RF_STOP:
 326:.\main.c      ****                 if(initial_pos_valid == 1)
 1419              		.loc 1 326 0
 1420 00f8 794B     		ldr	r3, .L97+32
 1421 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 00fc 012B     		cmp	r3, #1
 1423 00fe 0DD1     		bne	.L52
 327:.\main.c      ****                 {
 328:.\main.c      ****                     //changeToBT();
 329:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 330:.\main.c      ****                     //changeToRF();
 331:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1424              		.loc 1 331 0
 1425 0100 784B     		ldr	r3, .L97+36
 1426 0102 5A88     		ldrh	r2, [r3, #2]
 1427 0104 784B     		ldr	r3, .L97+40
 1428 0106 1A80     		strh	r2, [r3]	@ movhi
 332:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1429              		.loc 1 332 0
 1430 0108 764B     		ldr	r3, .L97+36
 1431 010a 9A88     		ldrh	r2, [r3, #4]
 1432 010c 774B     		ldr	r3, .L97+44
 1433 010e 1A80     		strh	r2, [r3]	@ movhi
 333:.\main.c      ****                     initial_pos_valid = 2;
 1434              		.loc 1 333 0
 1435 0110 734B     		ldr	r3, .L97+32
 1436 0112 0222     		movs	r2, #2
 1437 0114 1A70     		strb	r2, [r3]
 334:.\main.c      ****                     initForward();
 1438              		.loc 1 334 0
 1439 0116 FFF7FEFF 		bl	initForward
 335:.\main.c      ****                 }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 33


 336:.\main.c      ****             break;
 1440              		.loc 1 336 0
 1441 011a 53E2     		b	.L40
 1442              	.L52:
 1443 011c 52E2     		b	.L40
 1444              	.L48:
 337:.\main.c      ****             case MAP_TRAVERSE:
 338:.\main.c      ****             case DEST_TEST:
 339:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1445              		.loc 1 339 0
 1446 011e 6F4B     		ldr	r3, .L97+28
 1447 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0122 012B     		cmp	r3, #1
 1449 0124 00F04D82 		beq	.L53
 1450              		.loc 1 339 0 is_stmt 0 discriminator 1
 1451 0128 6C4B     		ldr	r3, .L97+28
 1452 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 012c 022B     		cmp	r3, #2
 1454 012e 00F04882 		beq	.L53
 1455              		.loc 1 339 0 discriminator 2
 1456 0132 6A4B     		ldr	r3, .L97+28
 1457 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 0136 072B     		cmp	r3, #7
 1459 0138 00F04382 		beq	.L53
 1460              	.LBB3:
 340:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 341:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1461              		.loc 1 341 0 is_stmt 1
 1462 013c 6C4B     		ldr	r3, .L97+48
 1463 013e 1B88     		ldrh	r3, [r3]
 1464 0140 1A46     		mov	r2, r3
 1465 0142 6C4B     		ldr	r3, .L97+52
 1466 0144 9B5C     		ldrb	r3, [r3, r2]
 1467 0146 87F83D30 		strb	r3, [r7, #61]
 342:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1468              		.loc 1 342 0
 1469 014a 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1470 014e 012B     		cmp	r3, #1
 1471 0150 03D1     		bne	.L54
 1472              		.loc 1 342 0 is_stmt 0 discriminator 1
 1473 0152 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1474 0156 012B     		cmp	r3, #1
 1475 0158 09D0     		beq	.L55
 1476              	.L54:
 1477              		.loc 1 342 0 discriminator 3
 1478 015a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1479 015e 012B     		cmp	r3, #1
 1480 0160 40F0FC80 		bne	.L56
 1481              		.loc 1 342 0 discriminator 4
 1482 0164 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1483 0168 012B     		cmp	r3, #1
 1484 016a 40F0F780 		bne	.L56
 1485              	.L55:
 343:.\main.c      ****                         if(sensorsDisabled == 0)
 1486              		.loc 1 343 0 is_stmt 1
 1487 016e 624B     		ldr	r3, .L97+56
 1488 0170 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 34


 1489 0172 002B     		cmp	r3, #0
 1490 0174 40F0F180 		bne	.L57
 344:.\main.c      ****                         {
 345:.\main.c      ****                             actionDebounce++;
 1491              		.loc 1 345 0
 1492 0178 FB8F     		ldrh	r3, [r7, #62]
 1493 017a 0133     		adds	r3, r3, #1
 1494 017c FB87     		strh	r3, [r7, #62]	@ movhi
 346:.\main.c      ****                             if(actionDebounce >= 1000)
 1495              		.loc 1 346 0
 1496 017e FB8F     		ldrh	r3, [r7, #62]
 1497 0180 B3F57A7F 		cmp	r3, #1000
 1498 0184 C0F0E980 		bcc	.L57
 1499              	.LBB4:
 347:.\main.c      ****                             {
 348:.\main.c      ****                                 char mes[16];
 349:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1500              		.loc 1 349 0
 1501 0188 5C4B     		ldr	r3, .L97+60
 1502 018a 1B88     		ldrh	r3, [r3]
 1503 018c 1BB2     		sxth	r3, r3
 1504 018e 07F12402 		add	r2, r7, #36
 1505 0192 1046     		mov	r0, r2
 1506 0194 5A49     		ldr	r1, .L97+64
 1507 0196 1A46     		mov	r2, r3
 1508 0198 FFF7FEFF 		bl	sprintf
 350:.\main.c      ****                                  UART_PutString(mes);
 1509              		.loc 1 350 0
 1510 019c 07F12403 		add	r3, r7, #36
 1511 01a0 1846     		mov	r0, r3
 1512 01a2 FFF7FEFF 		bl	UART_PutString
 351:.\main.c      ****                             if(reached_target == 1)
 1513              		.loc 1 351 0
 1514 01a6 574B     		ldr	r3, .L97+68
 1515 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 01aa 012B     		cmp	r3, #1
 1517 01ac 40F0D580 		bne	.L57
 1518              	.LBB5:
 352:.\main.c      ****                             {
 353:.\main.c      ****                                 if(nextStep == 'D')
 1519              		.loc 1 353 0
 1520 01b0 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1521 01b4 442B     		cmp	r3, #68
 1522 01b6 0CD1     		bne	.L59
 354:.\main.c      ****                                 {
 355:.\main.c      ****                                     instructionCount += 2;
 1523              		.loc 1 355 0
 1524 01b8 4D4B     		ldr	r3, .L97+48
 1525 01ba 1B88     		ldrh	r3, [r3]
 1526 01bc 0233     		adds	r3, r3, #2
 1527 01be 9AB2     		uxth	r2, r3
 1528 01c0 4B4B     		ldr	r3, .L97+48
 1529 01c2 1A80     		strh	r2, [r3]	@ movhi
 356:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1530              		.loc 1 356 0
 1531 01c4 4A4B     		ldr	r3, .L97+48
 1532 01c6 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 35


 1533 01c8 1A46     		mov	r2, r3
 1534 01ca 4A4B     		ldr	r3, .L97+52
 1535 01cc 9B5C     		ldrb	r3, [r3, r2]
 1536 01ce 87F83D30 		strb	r3, [r7, #61]
 1537              	.L59:
 357:.\main.c      ****                                 }
 358:.\main.c      ****                                 
 359:.\main.c      ****                                 sensorsDisabled = 1;
 1538              		.loc 1 359 0
 1539 01d2 494B     		ldr	r3, .L97+56
 1540 01d4 0122     		movs	r2, #1
 1541 01d6 1A60     		str	r2, [r3]
 360:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1542              		.loc 1 360 0
 1543 01d8 4B48     		ldr	r0, .L97+72
 1544 01da FFF7FEFF 		bl	UART_PutString
 361:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1545              		.loc 1 361 0
 1546 01de 4B48     		ldr	r0, .L97+76
 1547 01e0 FFF7FEFF 		bl	UART_PutString
 362:.\main.c      ****                                 deadzone = 1;
 1548              		.loc 1 362 0
 1549 01e4 4A4B     		ldr	r3, .L97+80
 1550 01e6 0122     		movs	r2, #1
 1551 01e8 1A70     		strb	r2, [r3]
 363:.\main.c      ****                                 Timer_Deadzone_WriteCounter(40000);
 1552              		.loc 1 363 0
 1553 01ea 49F64040 		movw	r0, #40000
 1554 01ee FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 364:.\main.c      ****                                 accum_dist = 0;
 1555              		.loc 1 364 0
 1556 01f2 424B     		ldr	r3, .L97+60
 1557 01f4 0022     		movs	r2, #0
 1558 01f6 1A80     		strh	r2, [r3]	@ movhi
 365:.\main.c      ****                                 uint8 nextStepDist;
 366:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1559              		.loc 1 366 0
 1560 01f8 3D4B     		ldr	r3, .L97+48
 1561 01fa 1B88     		ldrh	r3, [r3]
 1562 01fc 1A46     		mov	r2, r3
 1563 01fe 454B     		ldr	r3, .L97+84
 1564 0200 1B88     		ldrh	r3, [r3]
 1565 0202 053B     		subs	r3, r3, #5
 1566 0204 9A42     		cmp	r2, r3
 1567 0206 07DC     		bgt	.L60
 1568              		.loc 1 366 0 is_stmt 0 discriminator 1
 1569 0208 394B     		ldr	r3, .L97+48
 1570 020a 1B88     		ldrh	r3, [r3]
 1571 020c 0333     		adds	r3, r3, #3
 1572 020e 394A     		ldr	r2, .L97+52
 1573 0210 D35C     		ldrb	r3, [r2, r3]
 1574 0212 87F83C30 		strb	r3, [r7, #60]
 1575 0216 02E0     		b	.L61
 1576              	.L60:
 367:.\main.c      ****                                 else nextStepDist = 0;
 1577              		.loc 1 367 0 is_stmt 1
 1578 0218 0023     		movs	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 36


 1579 021a 87F83C30 		strb	r3, [r7, #60]
 1580              	.L61:
 368:.\main.c      ****                                 target_distance_quad = 145 * (nextStepDist-1);
 1581              		.loc 1 368 0
 1582 021e 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1583 0222 013B     		subs	r3, r3, #1
 1584 0224 9BB2     		uxth	r3, r3
 1585 0226 1A46     		mov	r2, r3	@ movhi
 1586 0228 D200     		lsls	r2, r2, #3
 1587 022a 1A44     		add	r2, r2, r3
 1588 022c 1201     		lsls	r2, r2, #4
 1589 022e 1344     		add	r3, r3, r2
 1590 0230 9BB2     		uxth	r3, r3
 1591 0232 9AB2     		uxth	r2, r3
 1592 0234 384B     		ldr	r3, .L97+88
 1593 0236 1A80     		strh	r2, [r3]	@ movhi
 369:.\main.c      ****                                 
 370:.\main.c      ****                                 
 371:.\main.c      ****                                 
 372:.\main.c      ****                                 switch(nextStep)
 1594              		.loc 1 372 0
 1595 0238 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1596 023c 4C3B     		subs	r3, r3, #76
 1597 023e 092B     		cmp	r3, #9
 1598 0240 6CD8     		bhi	.L94
 1599 0242 01A2     		adr	r2, .L64
 1600 0244 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1601              		.p2align 2
 1602              	.L64:
 1603 0248 7F020000 		.word	.L63+1
 1604 024c 1D030000 		.word	.L94+1
 1605 0250 1D030000 		.word	.L94+1
 1606 0254 1D030000 		.word	.L94+1
 1607 0258 1D030000 		.word	.L94+1
 1608 025c 1D030000 		.word	.L94+1
 1609 0260 95020000 		.word	.L65+1
 1610 0264 71020000 		.word	.L66+1
 1611 0268 1D030000 		.word	.L94+1
 1612 026c AB020000 		.word	.L67+1
 1613              		.p2align 1
 1614              	.L66:
 373:.\main.c      ****                                 {
 374:.\main.c      ****                                     case 'S':
 375:.\main.c      ****                                         initTrackU();
 1615              		.loc 1 375 0
 1616 0270 FFF7FEFF 		bl	initTrackU
 376:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1617              		.loc 1 376 0
 1618 0274 42F21070 		movw	r0, #10000
 1619 0278 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 377:.\main.c      ****                                         //do nothing
 378:.\main.c      ****                                     break;
 1620              		.loc 1 378 0
 1621 027c 4FE0     		b	.L68
 1622              	.L63:
 379:.\main.c      ****                                     case 'L':
 380:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 37


 381:.\main.c      ****                                         initTurnLeft();
 1623              		.loc 1 381 0
 1624 027e FFF7FEFF 		bl	initTurnLeft
 382:.\main.c      ****                                         target_distance_quad -= 100;
 1625              		.loc 1 382 0
 1626 0282 254B     		ldr	r3, .L97+88
 1627 0284 1B88     		ldrh	r3, [r3]
 1628 0286 9BB2     		uxth	r3, r3
 1629 0288 643B     		subs	r3, r3, #100
 1630 028a 9BB2     		uxth	r3, r3
 1631 028c 9AB2     		uxth	r2, r3
 1632 028e 224B     		ldr	r3, .L97+88
 1633 0290 1A80     		strh	r2, [r3]	@ movhi
 383:.\main.c      ****                                     break;
 1634              		.loc 1 383 0
 1635 0292 44E0     		b	.L68
 1636              	.L65:
 384:.\main.c      ****                                     case 'R':
 385:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 386:.\main.c      ****                                         initTurnRight();
 1637              		.loc 1 386 0
 1638 0294 FFF7FEFF 		bl	initTurnRight
 387:.\main.c      ****                                         target_distance_quad += 208 - 100;
 1639              		.loc 1 387 0
 1640 0298 1F4B     		ldr	r3, .L97+88
 1641 029a 1B88     		ldrh	r3, [r3]
 1642 029c 9BB2     		uxth	r3, r3
 1643 029e 6C33     		adds	r3, r3, #108
 1644 02a0 9BB2     		uxth	r3, r3
 1645 02a2 9AB2     		uxth	r2, r3
 1646 02a4 1C4B     		ldr	r3, .L97+88
 1647 02a6 1A80     		strh	r2, [r3]	@ movhi
 388:.\main.c      ****                                         
 389:.\main.c      ****                                     break;
 1648              		.loc 1 389 0
 1649 02a8 39E0     		b	.L68
 1650              	.L67:
 390:.\main.c      ****                                     case 'U':
 391:.\main.c      ****                                         // Direction not tracked any more
 392:.\main.c      ****                                         initTurnU();
 1651              		.loc 1 392 0
 1652 02aa FFF7FEFF 		bl	initTurnU
 393:.\main.c      ****                                         target_distance_quad += 208;
 1653              		.loc 1 393 0
 1654 02ae 1A4B     		ldr	r3, .L97+88
 1655 02b0 1B88     		ldrh	r3, [r3]
 1656 02b2 9BB2     		uxth	r3, r3
 1657 02b4 D033     		adds	r3, r3, #208
 1658 02b6 9BB2     		uxth	r3, r3
 1659 02b8 9AB2     		uxth	r2, r3
 1660 02ba 174B     		ldr	r3, .L97+88
 1661 02bc 1A80     		strh	r2, [r3]	@ movhi
 394:.\main.c      ****                                     break;
 1662              		.loc 1 394 0
 1663 02be 2EE0     		b	.L68
 1664              	.L98:
 1665              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 38


 1666              	.L97:
 1667 02c0 00000000 		.word	isr_quad1
 1668 02c4 00000000 		.word	isr_turn_timer
 1669 02c8 00000000 		.word	button
 1670 02cc 00000000 		.word	isr_deadzone
 1671 02d0 00000000 		.word	BIN_ENABLED
 1672 02d4 00000000 		.word	BT_ENABLED
 1673 02d8 00000000 		.word	track_mode
 1674 02dc 00000000 		.word	movement_state
 1675 02e0 00000000 		.word	initial_pos_valid
 1676 02e4 00000000 		.word	system_state
 1677 02e8 00000000 		.word	initial_x_pos
 1678 02ec 00000000 		.word	initial_y_pos
 1679 02f0 00000000 		.word	instructionCount
 1680 02f4 00000000 		.word	instructions
 1681 02f8 00000000 		.word	sensorsDisabled
 1682 02fc 00000000 		.word	accum_dist
 1683 0300 24000000 		.word	.LC2
 1684 0304 00000000 		.word	reached_target
 1685 0308 38000000 		.word	.LC3
 1686 030c 58000000 		.word	.LC4
 1687 0310 00000000 		.word	deadzone
 1688 0314 00000000 		.word	instructionLength
 1689 0318 00000000 		.word	target_distance_quad
 1690              	.L94:
 395:.\main.c      ****                                     
 396:.\main.c      ****                                     default:
 397:.\main.c      ****                                         //do nothing
 398:.\main.c      ****                                         break;
 1691              		.loc 1 398 0
 1692 031c 00BF     		nop
 1693              	.L68:
 399:.\main.c      ****                                 }
 400:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1694              		.loc 1 400 0
 1695 031e B54B     		ldr	r3, .L99
 1696 0320 1B88     		ldrh	r3, [r3]
 1697 0322 1BB2     		sxth	r3, r3
 1698 0324 07F12402 		add	r2, r7, #36
 1699 0328 1046     		mov	r0, r2
 1700 032a B349     		ldr	r1, .L99+4
 1701 032c 1A46     		mov	r2, r3
 1702 032e FFF7FEFF 		bl	sprintf
 401:.\main.c      ****                                  UART_PutString(mes);
 1703              		.loc 1 401 0
 1704 0332 07F12403 		add	r3, r7, #36
 1705 0336 1846     		mov	r0, r3
 1706 0338 FFF7FEFF 		bl	UART_PutString
 402:.\main.c      ****                                 
 403:.\main.c      ****                                 Timer_Deadzone_Start();
 1707              		.loc 1 403 0
 1708 033c FFF7FEFF 		bl	Timer_Deadzone_Start
 404:.\main.c      ****                                 reached_target = 0;
 1709              		.loc 1 404 0
 1710 0340 AE4B     		ldr	r3, .L99+8
 1711 0342 0022     		movs	r2, #0
 1712 0344 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 39


 405:.\main.c      ****                                 overshot_target = 0;
 1713              		.loc 1 405 0
 1714 0346 AE4B     		ldr	r3, .L99+12
 1715 0348 0022     		movs	r2, #0
 1716 034a 1A70     		strb	r2, [r3]
 406:.\main.c      ****                                 instructionCount += 2;
 1717              		.loc 1 406 0
 1718 034c AD4B     		ldr	r3, .L99+16
 1719 034e 1B88     		ldrh	r3, [r3]
 1720 0350 0233     		adds	r3, r3, #2
 1721 0352 9AB2     		uxth	r2, r3
 1722 0354 AB4B     		ldr	r3, .L99+16
 1723 0356 1A80     		strh	r2, [r3]	@ movhi
 1724              	.LBE5:
 1725              	.LBE4:
 343:.\main.c      ****                         {
 1726              		.loc 1 343 0
 1727 0358 33E1     		b	.L53
 1728              	.L57:
 343:.\main.c      ****                         {
 1729              		.loc 1 343 0 is_stmt 0 discriminator 1
 1730 035a 32E1     		b	.L53
 1731              	.L56:
 407:.\main.c      ****                             }
 408:.\main.c      ****                             }
 409:.\main.c      ****                         }
 410:.\main.c      ****                     }
 411:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1732              		.loc 1 411 0 is_stmt 1
 1733 035c 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1734 0360 002B     		cmp	r3, #0
 1735 0362 7BD1     		bne	.L69
 1736              		.loc 1 411 0 is_stmt 0 discriminator 1
 1737 0364 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1738 0368 002B     		cmp	r3, #0
 1739 036a 77D1     		bne	.L69
 1740              		.loc 1 411 0 discriminator 2
 1741 036c 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1742 0370 002B     		cmp	r3, #0
 1743 0372 73D1     		bne	.L69
 1744              		.loc 1 411 0 discriminator 3
 1745 0374 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1746 0378 002B     		cmp	r3, #0
 1747 037a 6FD1     		bne	.L69
 1748              		.loc 1 411 0 discriminator 4
 1749 037c 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1750 0380 002B     		cmp	r3, #0
 1751 0382 6BD1     		bne	.L69
 1752              		.loc 1 411 0 discriminator 5
 1753 0384 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1754 0388 552B     		cmp	r3, #85
 1755 038a 67D1     		bne	.L69
 412:.\main.c      ****                     {
 413:.\main.c      ****                         if(sensorsDisabled == 0)
 1756              		.loc 1 413 0 is_stmt 1
 1757 038c 9E4B     		ldr	r3, .L99+20
 1758 038e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 40


 1759 0390 002B     		cmp	r3, #0
 1760 0392 62D1     		bne	.L70
 414:.\main.c      ****                         {
 415:.\main.c      ****                                 
 416:.\main.c      ****                                 actionDebounce++;
 1761              		.loc 1 416 0
 1762 0394 FB8F     		ldrh	r3, [r7, #62]
 1763 0396 0133     		adds	r3, r3, #1
 1764 0398 FB87     		strh	r3, [r7, #62]	@ movhi
 417:.\main.c      ****                                 if(actionDebounce >= 5000)
 1765              		.loc 1 417 0
 1766 039a FB8F     		ldrh	r3, [r7, #62]
 1767 039c 41F28732 		movw	r2, #4999
 1768 03a0 9342     		cmp	r3, r2
 1769 03a2 5AD9     		bls	.L70
 418:.\main.c      ****                                 {
 419:.\main.c      ****                                     if(reached_target == 1)
 1770              		.loc 1 419 0
 1771 03a4 954B     		ldr	r3, .L99+8
 1772 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 03a8 012B     		cmp	r3, #1
 1774 03aa 56D1     		bne	.L70
 1775              	.LBB6:
 420:.\main.c      ****                                     {
 421:.\main.c      ****                                 char mes[16];
 422:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1776              		.loc 1 422 0
 1777 03ac 974B     		ldr	r3, .L99+24
 1778 03ae 1B88     		ldrh	r3, [r3]
 1779 03b0 1BB2     		sxth	r3, r3
 1780 03b2 07F11402 		add	r2, r7, #20
 1781 03b6 1046     		mov	r0, r2
 1782 03b8 9549     		ldr	r1, .L99+28
 1783 03ba 1A46     		mov	r2, r3
 1784 03bc FFF7FEFF 		bl	sprintf
 423:.\main.c      ****                                  UART_PutString(mes);
 1785              		.loc 1 423 0
 1786 03c0 07F11403 		add	r3, r7, #20
 1787 03c4 1846     		mov	r0, r3
 1788 03c6 FFF7FEFF 		bl	UART_PutString
 424:.\main.c      ****                                      accum_dist = 0;
 1789              		.loc 1 424 0
 1790 03ca 904B     		ldr	r3, .L99+24
 1791 03cc 0022     		movs	r2, #0
 1792 03ce 1A80     		strh	r2, [r3]	@ movhi
 425:.\main.c      ****                                 uint8 nextStepDist;
 426:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1793              		.loc 1 426 0
 1794 03d0 8C4B     		ldr	r3, .L99+16
 1795 03d2 1B88     		ldrh	r3, [r3]
 1796 03d4 1A46     		mov	r2, r3
 1797 03d6 8F4B     		ldr	r3, .L99+32
 1798 03d8 1B88     		ldrh	r3, [r3]
 1799 03da 053B     		subs	r3, r3, #5
 1800 03dc 9A42     		cmp	r2, r3
 1801 03de 07DC     		bgt	.L71
 1802              		.loc 1 426 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 41


 1803 03e0 884B     		ldr	r3, .L99+16
 1804 03e2 1B88     		ldrh	r3, [r3]
 1805 03e4 0333     		adds	r3, r3, #3
 1806 03e6 8C4A     		ldr	r2, .L99+36
 1807 03e8 D35C     		ldrb	r3, [r2, r3]
 1808 03ea 87F83B30 		strb	r3, [r7, #59]
 1809 03ee 02E0     		b	.L72
 1810              	.L71:
 427:.\main.c      ****                                 else nextStepDist = 0;
 1811              		.loc 1 427 0 is_stmt 1
 1812 03f0 0023     		movs	r3, #0
 1813 03f2 87F83B30 		strb	r3, [r7, #59]
 1814              	.L72:
 428:.\main.c      ****                                 
 429:.\main.c      ****                                 target_distance_quad = 145 * (nextStepDist-1) + 208;
 1815              		.loc 1 429 0
 1816 03f6 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1817 03fa 013B     		subs	r3, r3, #1
 1818 03fc 9BB2     		uxth	r3, r3
 1819 03fe 1A46     		mov	r2, r3	@ movhi
 1820 0400 D200     		lsls	r2, r2, #3
 1821 0402 1A44     		add	r2, r2, r3
 1822 0404 1201     		lsls	r2, r2, #4
 1823 0406 1344     		add	r3, r3, r2
 1824 0408 9BB2     		uxth	r3, r3
 1825 040a D033     		adds	r3, r3, #208
 1826 040c 9BB2     		uxth	r3, r3
 1827 040e 9AB2     		uxth	r2, r3
 1828 0410 784B     		ldr	r3, .L99
 1829 0412 1A80     		strh	r2, [r3]	@ movhi
 430:.\main.c      ****                                 
 431:.\main.c      ****                                     UART_PutString("Triggered at white light \r\n");
 1830              		.loc 1 431 0
 1831 0414 8148     		ldr	r0, .L99+40
 1832 0416 FFF7FEFF 		bl	UART_PutString
 432:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1833              		.loc 1 432 0
 1834 041a 8148     		ldr	r0, .L99+44
 1835 041c FFF7FEFF 		bl	UART_PutString
 433:.\main.c      ****                                     deadzone = 1;
 1836              		.loc 1 433 0
 1837 0420 804B     		ldr	r3, .L99+48
 1838 0422 0122     		movs	r2, #1
 1839 0424 1A70     		strb	r2, [r3]
 434:.\main.c      ****                                     Timer_Deadzone_WriteCounter(40000);
 1840              		.loc 1 434 0
 1841 0426 49F64040 		movw	r0, #40000
 1842 042a FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 435:.\main.c      ****                                     Timer_Deadzone_Start();
 1843              		.loc 1 435 0
 1844 042e FFF7FEFF 		bl	Timer_Deadzone_Start
 436:.\main.c      ****                                     actionDebounce = 0;
 1845              		.loc 1 436 0
 1846 0432 0023     		movs	r3, #0
 1847 0434 FB87     		strh	r3, [r7, #62]	@ movhi
 437:.\main.c      ****                                     sensorsDisabled = 1;
 1848              		.loc 1 437 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 42


 1849 0436 744B     		ldr	r3, .L99+20
 1850 0438 0122     		movs	r2, #1
 1851 043a 1A60     		str	r2, [r3]
 438:.\main.c      ****                                     initTurnU();
 1852              		.loc 1 438 0
 1853 043c FFF7FEFF 		bl	initTurnU
 439:.\main.c      ****                                     reached_target = 0;
 1854              		.loc 1 439 0
 1855 0440 6E4B     		ldr	r3, .L99+8
 1856 0442 0022     		movs	r2, #0
 1857 0444 1A70     		strb	r2, [r3]
 440:.\main.c      ****                                     overshot_target = 0;
 1858              		.loc 1 440 0
 1859 0446 6E4B     		ldr	r3, .L99+12
 1860 0448 0022     		movs	r2, #0
 1861 044a 1A70     		strb	r2, [r3]
 441:.\main.c      ****                                     instructionCount += 2;
 1862              		.loc 1 441 0
 1863 044c 6D4B     		ldr	r3, .L99+16
 1864 044e 1B88     		ldrh	r3, [r3]
 1865 0450 0233     		adds	r3, r3, #2
 1866 0452 9AB2     		uxth	r2, r3
 1867 0454 6B4B     		ldr	r3, .L99+16
 1868 0456 1A80     		strh	r2, [r3]	@ movhi
 1869              	.LBE6:
 413:.\main.c      ****                         {
 1870              		.loc 1 413 0
 1871 0458 B3E0     		b	.L53
 1872              	.L70:
 413:.\main.c      ****                         {
 1873              		.loc 1 413 0 is_stmt 0 discriminator 3
 1874 045a B2E0     		b	.L53
 1875              	.L69:
 442:.\main.c      ****                                 }
 443:.\main.c      ****                             }
 444:.\main.c      ****                         }
 445:.\main.c      ****                     }
 446:.\main.c      ****                     else if (overshot_target == 1 && nextStep == 'D')
 1876              		.loc 1 446 0 is_stmt 1
 1877 045c 684B     		ldr	r3, .L99+12
 1878 045e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1879 0460 012B     		cmp	r3, #1
 1880 0462 40F0A980 		bne	.L73
 1881              		.loc 1 446 0 is_stmt 0 discriminator 1
 1882 0466 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1883 046a 442B     		cmp	r3, #68
 1884 046c 40F0A480 		bne	.L73
 1885              	.LBB7:
 447:.\main.c      ****                     {
 448:.\main.c      ****                         
 449:.\main.c      ****                                 instructionCount += 2;
 1886              		.loc 1 449 0 is_stmt 1
 1887 0470 644B     		ldr	r3, .L99+16
 1888 0472 1B88     		ldrh	r3, [r3]
 1889 0474 0233     		adds	r3, r3, #2
 1890 0476 9AB2     		uxth	r2, r3
 1891 0478 624B     		ldr	r3, .L99+16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 43


 1892 047a 1A80     		strh	r2, [r3]	@ movhi
 450:.\main.c      ****                                 nextStep = instructions[instructionCount]; 
 1893              		.loc 1 450 0
 1894 047c 614B     		ldr	r3, .L99+16
 1895 047e 1B88     		ldrh	r3, [r3]
 1896 0480 1A46     		mov	r2, r3
 1897 0482 654B     		ldr	r3, .L99+36
 1898 0484 9B5C     		ldrb	r3, [r3, r2]
 1899 0486 87F83D30 		strb	r3, [r7, #61]
 451:.\main.c      ****                                 char mes[16];
 452:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1900              		.loc 1 452 0
 1901 048a 604B     		ldr	r3, .L99+24
 1902 048c 1B88     		ldrh	r3, [r3]
 1903 048e 1BB2     		sxth	r3, r3
 1904 0490 3A1D     		adds	r2, r7, #4
 1905 0492 1046     		mov	r0, r2
 1906 0494 5E49     		ldr	r1, .L99+28
 1907 0496 1A46     		mov	r2, r3
 1908 0498 FFF7FEFF 		bl	sprintf
 453:.\main.c      ****                                  UART_PutString(mes);
 1909              		.loc 1 453 0
 1910 049c 3B1D     		adds	r3, r7, #4
 1911 049e 1846     		mov	r0, r3
 1912 04a0 FFF7FEFF 		bl	UART_PutString
 454:.\main.c      ****                                  accum_dist = 0;
 1913              		.loc 1 454 0
 1914 04a4 594B     		ldr	r3, .L99+24
 1915 04a6 0022     		movs	r2, #0
 1916 04a8 1A80     		strh	r2, [r3]	@ movhi
 455:.\main.c      ****                                 uint8 nextStepDist;
 456:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1917              		.loc 1 456 0
 1918 04aa 564B     		ldr	r3, .L99+16
 1919 04ac 1B88     		ldrh	r3, [r3]
 1920 04ae 1A46     		mov	r2, r3
 1921 04b0 584B     		ldr	r3, .L99+32
 1922 04b2 1B88     		ldrh	r3, [r3]
 1923 04b4 053B     		subs	r3, r3, #5
 1924 04b6 9A42     		cmp	r2, r3
 1925 04b8 07DC     		bgt	.L74
 1926              		.loc 1 456 0 is_stmt 0 discriminator 1
 1927 04ba 524B     		ldr	r3, .L99+16
 1928 04bc 1B88     		ldrh	r3, [r3]
 1929 04be 0333     		adds	r3, r3, #3
 1930 04c0 554A     		ldr	r2, .L99+36
 1931 04c2 D35C     		ldrb	r3, [r2, r3]
 1932 04c4 87F83A30 		strb	r3, [r7, #58]
 1933 04c8 02E0     		b	.L75
 1934              	.L74:
 457:.\main.c      ****                                 else nextStepDist = 0;
 1935              		.loc 1 457 0 is_stmt 1
 1936 04ca 0023     		movs	r3, #0
 1937 04cc 87F83A30 		strb	r3, [r7, #58]
 1938              	.L75:
 458:.\main.c      ****                                 
 459:.\main.c      ****                                 target_distance_quad = 145 * (nextStepDist-1);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 44


 1939              		.loc 1 459 0
 1940 04d0 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 1941 04d4 013B     		subs	r3, r3, #1
 1942 04d6 9BB2     		uxth	r3, r3
 1943 04d8 1A46     		mov	r2, r3	@ movhi
 1944 04da D200     		lsls	r2, r2, #3
 1945 04dc 1A44     		add	r2, r2, r3
 1946 04de 1201     		lsls	r2, r2, #4
 1947 04e0 1344     		add	r3, r3, r2
 1948 04e2 9BB2     		uxth	r3, r3
 1949 04e4 9AB2     		uxth	r2, r3
 1950 04e6 434B     		ldr	r3, .L99
 1951 04e8 1A80     		strh	r2, [r3]	@ movhi
 460:.\main.c      ****                                 
 461:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 1952              		.loc 1 461 0
 1953 04ea 4F48     		ldr	r0, .L99+52
 1954 04ec FFF7FEFF 		bl	UART_PutString
 462:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1955              		.loc 1 462 0
 1956 04f0 4B48     		ldr	r0, .L99+44
 1957 04f2 FFF7FEFF 		bl	UART_PutString
 463:.\main.c      ****                                     deadzone = 1;
 1958              		.loc 1 463 0
 1959 04f6 4B4B     		ldr	r3, .L99+48
 1960 04f8 0122     		movs	r2, #1
 1961 04fa 1A70     		strb	r2, [r3]
 464:.\main.c      ****                                     Timer_Deadzone_WriteCounter(40000);
 1962              		.loc 1 464 0
 1963 04fc 49F64040 		movw	r0, #40000
 1964 0500 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 465:.\main.c      ****                                     Timer_Deadzone_Start();
 1965              		.loc 1 465 0
 1966 0504 FFF7FEFF 		bl	Timer_Deadzone_Start
 466:.\main.c      ****                                     actionDebounce = 0;
 1967              		.loc 1 466 0
 1968 0508 0023     		movs	r3, #0
 1969 050a FB87     		strh	r3, [r7, #62]	@ movhi
 467:.\main.c      ****                                     sensorsDisabled = 1;
 1970              		.loc 1 467 0
 1971 050c 3E4B     		ldr	r3, .L99+20
 1972 050e 0122     		movs	r2, #1
 1973 0510 1A60     		str	r2, [r3]
 468:.\main.c      ****                                     
 469:.\main.c      ****                                      switch(nextStep)
 1974              		.loc 1 469 0
 1975 0512 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1976 0516 4C3B     		subs	r3, r3, #76
 1977 0518 092B     		cmp	r3, #9
 1978 051a 3FD8     		bhi	.L95
 1979 051c 01A2     		adr	r2, .L78
 1980 051e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1981 0522 00BF     		.p2align 2
 1982              	.L78:
 1983 0524 5B050000 		.word	.L77+1
 1984 0528 9D050000 		.word	.L95+1
 1985 052c 9D050000 		.word	.L95+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 45


 1986 0530 9D050000 		.word	.L95+1
 1987 0534 9D050000 		.word	.L95+1
 1988 0538 9D050000 		.word	.L95+1
 1989 053c 71050000 		.word	.L79+1
 1990 0540 4D050000 		.word	.L80+1
 1991 0544 9D050000 		.word	.L95+1
 1992 0548 87050000 		.word	.L81+1
 1993              		.p2align 1
 1994              	.L80:
 470:.\main.c      ****                                 {
 471:.\main.c      ****                                     case 'S':
 472:.\main.c      ****                                         initTrackU();
 1995              		.loc 1 472 0
 1996 054c FFF7FEFF 		bl	initTrackU
 473:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1997              		.loc 1 473 0
 1998 0550 42F21070 		movw	r0, #10000
 1999 0554 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 474:.\main.c      ****                                         //do nothing
 475:.\main.c      ****                                     break;
 2000              		.loc 1 475 0
 2001 0558 21E0     		b	.L82
 2002              	.L77:
 476:.\main.c      ****                                     case 'L':
 477:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 478:.\main.c      ****                                         initTurnLeft();
 2003              		.loc 1 478 0
 2004 055a FFF7FEFF 		bl	initTurnLeft
 479:.\main.c      ****                                         target_distance_quad -= 100;
 2005              		.loc 1 479 0
 2006 055e 254B     		ldr	r3, .L99
 2007 0560 1B88     		ldrh	r3, [r3]
 2008 0562 9BB2     		uxth	r3, r3
 2009 0564 643B     		subs	r3, r3, #100
 2010 0566 9BB2     		uxth	r3, r3
 2011 0568 9AB2     		uxth	r2, r3
 2012 056a 224B     		ldr	r3, .L99
 2013 056c 1A80     		strh	r2, [r3]	@ movhi
 480:.\main.c      ****                                     break;
 2014              		.loc 1 480 0
 2015 056e 16E0     		b	.L82
 2016              	.L79:
 481:.\main.c      ****                                     case 'R':
 482:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 483:.\main.c      ****                                         initTurnRight();
 2017              		.loc 1 483 0
 2018 0570 FFF7FEFF 		bl	initTurnRight
 484:.\main.c      ****                                         target_distance_quad += 208 - 100;
 2019              		.loc 1 484 0
 2020 0574 1F4B     		ldr	r3, .L99
 2021 0576 1B88     		ldrh	r3, [r3]
 2022 0578 9BB2     		uxth	r3, r3
 2023 057a 6C33     		adds	r3, r3, #108
 2024 057c 9BB2     		uxth	r3, r3
 2025 057e 9AB2     		uxth	r2, r3
 2026 0580 1C4B     		ldr	r3, .L99
 2027 0582 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 46


 485:.\main.c      ****                                         
 486:.\main.c      ****                                     break;
 2028              		.loc 1 486 0
 2029 0584 0BE0     		b	.L82
 2030              	.L81:
 487:.\main.c      ****                                     case 'U':
 488:.\main.c      ****                                         // Direction not tracked any more
 489:.\main.c      ****                                         initTurnU();
 2031              		.loc 1 489 0
 2032 0586 FFF7FEFF 		bl	initTurnU
 490:.\main.c      ****                                         target_distance_quad += 208;
 2033              		.loc 1 490 0
 2034 058a 1A4B     		ldr	r3, .L99
 2035 058c 1B88     		ldrh	r3, [r3]
 2036 058e 9BB2     		uxth	r3, r3
 2037 0590 D033     		adds	r3, r3, #208
 2038 0592 9BB2     		uxth	r3, r3
 2039 0594 9AB2     		uxth	r2, r3
 2040 0596 174B     		ldr	r3, .L99
 2041 0598 1A80     		strh	r2, [r3]	@ movhi
 491:.\main.c      ****                                     break;
 2042              		.loc 1 491 0
 2043 059a 00E0     		b	.L82
 2044              	.L95:
 492:.\main.c      ****                                     default:
 493:.\main.c      ****                                         //do nothing
 494:.\main.c      ****                                         break;
 2045              		.loc 1 494 0
 2046 059c 00BF     		nop
 2047              	.L82:
 495:.\main.c      ****                                 }
 496:.\main.c      ****                                     
 497:.\main.c      ****                                     
 498:.\main.c      ****                                     reached_target = 0;
 2048              		.loc 1 498 0 discriminator 5
 2049 059e 174B     		ldr	r3, .L99+8
 2050 05a0 0022     		movs	r2, #0
 2051 05a2 1A70     		strb	r2, [r3]
 499:.\main.c      ****                                     overshot_target = 0;
 2052              		.loc 1 499 0 discriminator 5
 2053 05a4 164B     		ldr	r3, .L99+12
 2054 05a6 0022     		movs	r2, #0
 2055 05a8 1A70     		strb	r2, [r3]
 500:.\main.c      ****                                     instructionCount += 2;
 2056              		.loc 1 500 0 discriminator 5
 2057 05aa 164B     		ldr	r3, .L99+16
 2058 05ac 1B88     		ldrh	r3, [r3]
 2059 05ae 0233     		adds	r3, r3, #2
 2060 05b0 9AB2     		uxth	r2, r3
 2061 05b2 144B     		ldr	r3, .L99+16
 2062 05b4 1A80     		strh	r2, [r3]	@ movhi
 2063              	.LBE7:
 447:.\main.c      ****                         
 2064              		.loc 1 447 0 discriminator 5
 2065 05b6 04E0     		b	.L53
 2066              	.L73:
 501:.\main.c      ****                     }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 47


 502:.\main.c      ****                     else
 503:.\main.c      ****                     {
 504:.\main.c      ****                         inittrackLineZ();
 2067              		.loc 1 504 0
 2068 05b8 FFF7FEFF 		bl	inittrackLineZ
 505:.\main.c      ****                         actionDebounce = 0;
 2069              		.loc 1 505 0
 2070 05bc 0023     		movs	r3, #0
 2071 05be FB87     		strh	r3, [r7, #62]	@ movhi
 2072              	.LBE3:
 506:.\main.c      ****                     }
 507:.\main.c      ****                 }
 508:.\main.c      ****                 break;
 2073              		.loc 1 508 0
 2074 05c0 FFE7     		b	.L96
 2075              	.L53:
 2076              	.L96:
 2077 05c2 00BF     		nop
 2078              	.L40:
 509:.\main.c      ****         }
 510:.\main.c      ****         
 511:.\main.c      ****         switch(movement_state)
 2079              		.loc 1 511 0
 2080 05c4 194B     		ldr	r3, .L99+56
 2081 05c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2082 05c8 072B     		cmp	r3, #7
 2083 05ca 3FF64CAD 		bhi	.L93
 2084 05ce 01A2     		adr	r2, .L85
 2085 05d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2086              		.p2align 2
 2087              	.L85:
 2088 05d4 31060000 		.word	.L84+1
 2089 05d8 37060000 		.word	.L86+1
 2090 05dc 3D060000 		.word	.L87+1
 2091 05e0 49060000 		.word	.L88+1
 2092 05e4 4F060000 		.word	.L89+1
 2093 05e8 55060000 		.word	.L90+1
 2094 05ec 5B060000 		.word	.L91+1
 2095 05f0 43060000 		.word	.L92+1
 2096              		.p2align 1
 2097              	.L100:
 2098              		.align	2
 2099              	.L99:
 2100 05f4 00000000 		.word	target_distance_quad
 2101 05f8 6C000000 		.word	.LC5
 2102 05fc 00000000 		.word	reached_target
 2103 0600 00000000 		.word	overshot_target
 2104 0604 00000000 		.word	instructionCount
 2105 0608 00000000 		.word	sensorsDisabled
 2106 060c 00000000 		.word	accum_dist
 2107 0610 24000000 		.word	.LC2
 2108 0614 00000000 		.word	instructionLength
 2109 0618 00000000 		.word	instructions
 2110 061c 80000000 		.word	.LC6
 2111 0620 58000000 		.word	.LC4
 2112 0624 00000000 		.word	deadzone
 2113 0628 9C000000 		.word	.LC7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 48


 2114 062c 00000000 		.word	movement_state
 2115              	.L84:
 512:.\main.c      ****         {
 513:.\main.c      ****             case DRIVE:
 514:.\main.c      ****                 driveForwards();
 2116              		.loc 1 514 0
 2117 0630 FFF7FEFF 		bl	driveForwards
 515:.\main.c      ****             break;
 2118              		.loc 1 515 0
 2119 0634 13E0     		b	.L83
 2120              	.L86:
 516:.\main.c      ****             case LTURN:
 517:.\main.c      ****                 turnLeft();
 2121              		.loc 1 517 0
 2122 0636 FFF7FEFF 		bl	turnLeft
 518:.\main.c      ****             break;
 2123              		.loc 1 518 0
 2124 063a 10E0     		b	.L83
 2125              	.L87:
 519:.\main.c      ****             case RTURN:
 520:.\main.c      ****                 turnRight();
 2126              		.loc 1 520 0
 2127 063c FFF7FEFF 		bl	turnRight
 521:.\main.c      ****             break;
 2128              		.loc 1 521 0
 2129 0640 0DE0     		b	.L83
 2130              	.L92:
 522:.\main.c      ****             case UTURN:
 523:.\main.c      ****                 turnU();
 2131              		.loc 1 523 0
 2132 0642 FFF7FEFF 		bl	turnU
 524:.\main.c      ****             break;
 2133              		.loc 1 524 0
 2134 0646 0AE0     		b	.L83
 2135              	.L88:
 525:.\main.c      ****             case STOPPED:
 526:.\main.c      ****                 brakeMotor();
 2136              		.loc 1 526 0
 2137 0648 FFF7FEFF 		bl	brakeMotor
 527:.\main.c      ****             break;
 2138              		.loc 1 527 0
 2139 064c 07E0     		b	.L83
 2140              	.L89:
 528:.\main.c      ****             case TRACKING:
 529:.\main.c      ****                 trackLine();
 2141              		.loc 1 529 0
 2142 064e FFF7FEFF 		bl	trackLine
 530:.\main.c      ****             break;
 2143              		.loc 1 530 0
 2144 0652 04E0     		b	.L83
 2145              	.L90:
 531:.\main.c      ****             case TRACKING_U:
 532:.\main.c      ****                 trackLineU();
 2146              		.loc 1 532 0
 2147 0654 FFF7FEFF 		bl	trackLineU
 533:.\main.c      ****             break;
 2148              		.loc 1 533 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 49


 2149 0658 01E0     		b	.L83
 2150              	.L91:
 534:.\main.c      ****             case TRACKING_SOFT:
 535:.\main.c      ****                 trackLineZ();
 2151              		.loc 1 535 0
 2152 065a FFF7FEFF 		bl	trackLineZ
 2153              	.L83:
 2154              	.LBE2:
 536:.\main.c      ****         }      
 537:.\main.c      ****     }   
 2155              		.loc 1 537 0
 2156 065e 02E5     		b	.L93
 2157              		.cfi_endproc
 2158              	.LFE71:
 2159              		.size	main, .-main
 2160              		.section	.text.handle_rx_binary,"ax",%progbits
 2161              		.align	2
 2162              		.global	handle_rx_binary
 2163              		.thumb
 2164              		.thumb_func
 2165              		.type	handle_rx_binary, %function
 2166              	handle_rx_binary:
 2167              	.LFB72:
 538:.\main.c      **** }
 539:.\main.c      **** 
 540:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 541:.\main.c      **** 
 542:.\main.c      **** void handle_rx_binary()
 543:.\main.c      **** {
 2168              		.loc 1 543 0
 2169              		.cfi_startproc
 2170              		@ args = 0, pretend = 0, frame = 32
 2171              		@ frame_needed = 1, uses_anonymous_args = 0
 2172              		@ link register save eliminated.
 2173 0000 80B4     		push	{r7}
 2174              		.cfi_def_cfa_offset 4
 2175              		.cfi_offset 7, -4
 2176 0002 89B0     		sub	sp, sp, #36
 2177              		.cfi_def_cfa_offset 40
 2178 0004 00AF     		add	r7, sp, #0
 2179              		.cfi_def_cfa_register 7
 544:.\main.c      ****     if(flag_rx == 1)
 2180              		.loc 1 544 0
 2181 0006 524B     		ldr	r3, .L121
 2182 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2183 000a 012B     		cmp	r3, #1
 2184 000c 40F09A80 		bne	.L101
 2185              	.LBB8:
 545:.\main.c      ****     {    
 546:.\main.c      ****         flag_rx = 0;
 2186              		.loc 1 546 0
 2187 0010 4F4B     		ldr	r3, .L121
 2188 0012 0022     		movs	r2, #0
 2189 0014 1A70     		strb	r2, [r3]
 547:.\main.c      ****         
 548:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2190              		.loc 1 548 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 50


 2191 0016 4F4B     		ldr	r3, .L121+4
 2192 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2193 001a 1B02     		lsls	r3, r3, #8
 2194 001c 9AB2     		uxth	r2, r3
 2195 001e 4D4B     		ldr	r3, .L121+4
 2196 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2197 0022 9BB2     		uxth	r3, r3
 2198 0024 1343     		orrs	r3, r3, r2
 2199 0026 9BB2     		uxth	r3, r3
 2200 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 549:.\main.c      ****         char byte_packet[12];
 550:.\main.c      ****         char string_packet[12];
 551:.\main.c      ****         
 552:.\main.c      ****         switch(byteCount)
 2201              		.loc 1 552 0
 2202 002a 4B4B     		ldr	r3, .L121+8
 2203 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2204 002e 043B     		subs	r3, r3, #4
 2205 0030 1E2B     		cmp	r3, #30
 2206 0032 00F28780 		bhi	.L101
 2207 0036 01A2     		adr	r2, .L105
 2208 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2209              		.p2align 2
 2210              	.L105:
 2211 003c B9000000 		.word	.L104+1
 2212 0040 45010000 		.word	.L101+1
 2213 0044 CD000000 		.word	.L106+1
 2214 0048 45010000 		.word	.L101+1
 2215 004c D5000000 		.word	.L107+1
 2216 0050 45010000 		.word	.L101+1
 2217 0054 DD000000 		.word	.L108+1
 2218 0058 45010000 		.word	.L101+1
 2219 005c E5000000 		.word	.L109+1
 2220 0060 45010000 		.word	.L101+1
 2221 0064 ED000000 		.word	.L110+1
 2222 0068 45010000 		.word	.L101+1
 2223 006c F5000000 		.word	.L111+1
 2224 0070 45010000 		.word	.L101+1
 2225 0074 FD000000 		.word	.L112+1
 2226 0078 45010000 		.word	.L101+1
 2227 007c 05010000 		.word	.L113+1
 2228 0080 45010000 		.word	.L101+1
 2229 0084 0D010000 		.word	.L114+1
 2230 0088 45010000 		.word	.L101+1
 2231 008c 15010000 		.word	.L115+1
 2232 0090 45010000 		.word	.L101+1
 2233 0094 1D010000 		.word	.L116+1
 2234 0098 45010000 		.word	.L101+1
 2235 009c 25010000 		.word	.L117+1
 2236 00a0 45010000 		.word	.L101+1
 2237 00a4 2D010000 		.word	.L118+1
 2238 00a8 45010000 		.word	.L101+1
 2239 00ac 35010000 		.word	.L119+1
 2240 00b0 45010000 		.word	.L101+1
 2241 00b4 3D010000 		.word	.L120+1
 2242              		.p2align 1
 2243              	.L104:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 51


 553:.\main.c      ****         {
 554:.\main.c      ****             case 4:
 555:.\main.c      ****                 buffer_state.rssi = packet[0];
 2244              		.loc 1 555 0
 2245 00b8 264B     		ldr	r3, .L121+4
 2246 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2247 00bc DAB2     		uxtb	r2, r3
 2248 00be 274B     		ldr	r3, .L121+12
 2249 00c0 1A70     		strb	r2, [r3]
 556:.\main.c      ****                 buffer_state.index = packet[1];
 2250              		.loc 1 556 0
 2251 00c2 244B     		ldr	r3, .L121+4
 2252 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2253 00c6 254B     		ldr	r3, .L121+12
 2254 00c8 5A70     		strb	r2, [r3, #1]
 557:.\main.c      ****             break;
 2255              		.loc 1 557 0
 2256 00ca 3BE0     		b	.L101
 2257              	.L106:
 558:.\main.c      ****             case 6:
 559:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2258              		.loc 1 559 0
 2259 00cc FA8B     		ldrh	r2, [r7, #30]
 2260 00ce 234B     		ldr	r3, .L121+12
 2261 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 560:.\main.c      ****             break;
 2262              		.loc 1 560 0
 2263 00d2 37E0     		b	.L101
 2264              	.L107:
 561:.\main.c      ****             case 8:
 562:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2265              		.loc 1 562 0
 2266 00d4 FA8B     		ldrh	r2, [r7, #30]
 2267 00d6 214B     		ldr	r3, .L121+12
 2268 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 563:.\main.c      ****             break;
 2269              		.loc 1 563 0
 2270 00da 33E0     		b	.L101
 2271              	.L108:
 564:.\main.c      ****             case 10:
 565:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2272              		.loc 1 565 0
 2273 00dc FA8B     		ldrh	r2, [r7, #30]
 2274 00de 1F4B     		ldr	r3, .L121+12
 2275 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 566:.\main.c      ****             break;
 2276              		.loc 1 566 0
 2277 00e2 2FE0     		b	.L101
 2278              	.L109:
 567:.\main.c      ****             case 12:
 568:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2279              		.loc 1 568 0
 2280 00e4 FA8B     		ldrh	r2, [r7, #30]
 2281 00e6 1D4B     		ldr	r3, .L121+12
 2282 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 569:.\main.c      ****             break;
 2283              		.loc 1 569 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 52


 2284 00ea 2BE0     		b	.L101
 2285              	.L110:
 570:.\main.c      ****             case 14:
 571:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2286              		.loc 1 571 0
 2287 00ec FA8B     		ldrh	r2, [r7, #30]
 2288 00ee 1B4B     		ldr	r3, .L121+12
 2289 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 572:.\main.c      ****             break;
 2290              		.loc 1 572 0
 2291 00f2 27E0     		b	.L101
 2292              	.L111:
 573:.\main.c      ****             case 16:
 574:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2293              		.loc 1 574 0
 2294 00f4 FA8B     		ldrh	r2, [r7, #30]
 2295 00f6 194B     		ldr	r3, .L121+12
 2296 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 575:.\main.c      ****             break;
 2297              		.loc 1 575 0
 2298 00fa 23E0     		b	.L101
 2299              	.L112:
 576:.\main.c      ****             case 18:
 577:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2300              		.loc 1 577 0
 2301 00fc FA8B     		ldrh	r2, [r7, #30]
 2302 00fe 174B     		ldr	r3, .L121+12
 2303 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 578:.\main.c      ****             break;
 2304              		.loc 1 578 0
 2305 0102 1FE0     		b	.L101
 2306              	.L113:
 579:.\main.c      ****             case 20:
 580:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2307              		.loc 1 580 0
 2308 0104 FA8B     		ldrh	r2, [r7, #30]
 2309 0106 154B     		ldr	r3, .L121+12
 2310 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 581:.\main.c      ****             break;
 2311              		.loc 1 581 0
 2312 010a 1BE0     		b	.L101
 2313              	.L114:
 582:.\main.c      ****             case 22:
 583:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2314              		.loc 1 583 0
 2315 010c FA8B     		ldrh	r2, [r7, #30]
 2316 010e 134B     		ldr	r3, .L121+12
 2317 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 584:.\main.c      ****             break;
 2318              		.loc 1 584 0
 2319 0112 17E0     		b	.L101
 2320              	.L115:
 585:.\main.c      ****             case 24:
 586:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2321              		.loc 1 586 0
 2322 0114 FA8B     		ldrh	r2, [r7, #30]
 2323 0116 114B     		ldr	r3, .L121+12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 53


 2324 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 587:.\main.c      ****             break;
 2325              		.loc 1 587 0
 2326 011a 13E0     		b	.L101
 2327              	.L116:
 588:.\main.c      ****             case 26:
 589:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2328              		.loc 1 589 0
 2329 011c FA8B     		ldrh	r2, [r7, #30]
 2330 011e 0F4B     		ldr	r3, .L121+12
 2331 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 590:.\main.c      ****             break;
 2332              		.loc 1 590 0
 2333 0122 0FE0     		b	.L101
 2334              	.L117:
 591:.\main.c      ****             case 28:
 592:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2335              		.loc 1 592 0
 2336 0124 FA8B     		ldrh	r2, [r7, #30]
 2337 0126 0D4B     		ldr	r3, .L121+12
 2338 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 593:.\main.c      ****             break;
 2339              		.loc 1 593 0
 2340 012a 0BE0     		b	.L101
 2341              	.L118:
 594:.\main.c      ****             case 30:
 595:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2342              		.loc 1 595 0
 2343 012c FA8B     		ldrh	r2, [r7, #30]
 2344 012e 0B4B     		ldr	r3, .L121+12
 2345 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 596:.\main.c      ****             break;
 2346              		.loc 1 596 0
 2347 0132 07E0     		b	.L101
 2348              	.L119:
 597:.\main.c      ****             case 32:
 598:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2349              		.loc 1 598 0
 2350 0134 FA8B     		ldrh	r2, [r7, #30]
 2351 0136 094B     		ldr	r3, .L121+12
 2352 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 599:.\main.c      ****             break;
 2353              		.loc 1 599 0
 2354 013a 03E0     		b	.L101
 2355              	.L120:
 600:.\main.c      ****             case 34:
 601:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2356              		.loc 1 601 0
 2357 013c FA8B     		ldrh	r2, [r7, #30]
 2358 013e 074B     		ldr	r3, .L121+12
 2359 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 602:.\main.c      ****             break;
 2360              		.loc 1 602 0
 2361 0142 00BF     		nop
 2362              	.L101:
 2363              	.LBE8:
 603:.\main.c      ****         }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 54


 604:.\main.c      ****     }
 605:.\main.c      **** }
 2364              		.loc 1 605 0
 2365 0144 2437     		adds	r7, r7, #36
 2366              		.cfi_def_cfa_offset 4
 2367 0146 BD46     		mov	sp, r7
 2368              		.cfi_def_cfa_register 13
 2369              		@ sp needed
 2370 0148 5DF8047B 		ldr	r7, [sp], #4
 2371              		.cfi_restore 7
 2372              		.cfi_def_cfa_offset 0
 2373 014c 7047     		bx	lr
 2374              	.L122:
 2375 014e 00BF     		.align	2
 2376              	.L121:
 2377 0150 00000000 		.word	flag_rx
 2378 0154 00000000 		.word	packet
 2379 0158 00000000 		.word	byteCount
 2380 015c 00000000 		.word	buffer_state
 2381              		.cfi_endproc
 2382              	.LFE72:
 2383              		.size	handle_rx_binary, .-handle_rx_binary
 2384              		.section	.text.setLeftDir,"ax",%progbits
 2385              		.align	2
 2386              		.global	setLeftDir
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	setLeftDir, %function
 2390              	setLeftDir:
 2391              	.LFB73:
 606:.\main.c      **** 
 607:.\main.c      **** void setLeftDir(uint8 dir)
 608:.\main.c      **** {
 2392              		.loc 1 608 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 8
 2395              		@ frame_needed = 1, uses_anonymous_args = 0
 2396 0000 80B5     		push	{r7, lr}
 2397              		.cfi_def_cfa_offset 8
 2398              		.cfi_offset 7, -8
 2399              		.cfi_offset 14, -4
 2400 0002 82B0     		sub	sp, sp, #8
 2401              		.cfi_def_cfa_offset 16
 2402 0004 00AF     		add	r7, sp, #0
 2403              		.cfi_def_cfa_register 7
 2404 0006 0346     		mov	r3, r0
 2405 0008 FB71     		strb	r3, [r7, #7]
 609:.\main.c      ****     M2_IN2_Write(dir);
 2406              		.loc 1 609 0
 2407 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2408 000c 1846     		mov	r0, r3
 2409 000e FFF7FEFF 		bl	M2_IN2_Write
 610:.\main.c      **** }
 2410              		.loc 1 610 0
 2411 0012 0837     		adds	r7, r7, #8
 2412              		.cfi_def_cfa_offset 8
 2413 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 55


 2414              		.cfi_def_cfa_register 13
 2415              		@ sp needed
 2416 0016 80BD     		pop	{r7, pc}
 2417              		.cfi_endproc
 2418              	.LFE73:
 2419              		.size	setLeftDir, .-setLeftDir
 2420              		.section	.text.setRightDir,"ax",%progbits
 2421              		.align	2
 2422              		.global	setRightDir
 2423              		.thumb
 2424              		.thumb_func
 2425              		.type	setRightDir, %function
 2426              	setRightDir:
 2427              	.LFB74:
 611:.\main.c      **** 
 612:.\main.c      **** void setRightDir(uint8 dir)
 613:.\main.c      **** {
 2428              		.loc 1 613 0
 2429              		.cfi_startproc
 2430              		@ args = 0, pretend = 0, frame = 8
 2431              		@ frame_needed = 1, uses_anonymous_args = 0
 2432 0000 80B5     		push	{r7, lr}
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 7, -8
 2435              		.cfi_offset 14, -4
 2436 0002 82B0     		sub	sp, sp, #8
 2437              		.cfi_def_cfa_offset 16
 2438 0004 00AF     		add	r7, sp, #0
 2439              		.cfi_def_cfa_register 7
 2440 0006 0346     		mov	r3, r0
 2441 0008 FB71     		strb	r3, [r7, #7]
 614:.\main.c      ****     M1_IN2_Write(dir);
 2442              		.loc 1 614 0
 2443 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2444 000c 1846     		mov	r0, r3
 2445 000e FFF7FEFF 		bl	M1_IN2_Write
 615:.\main.c      **** }
 2446              		.loc 1 615 0
 2447 0012 0837     		adds	r7, r7, #8
 2448              		.cfi_def_cfa_offset 8
 2449 0014 BD46     		mov	sp, r7
 2450              		.cfi_def_cfa_register 13
 2451              		@ sp needed
 2452 0016 80BD     		pop	{r7, pc}
 2453              		.cfi_endproc
 2454              	.LFE74:
 2455              		.size	setRightDir, .-setRightDir
 2456              		.section	.rodata
 2457 00b7 00       		.align	2
 2458              	.LC8:
 2459 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2459      2025640D 
 2459      0A00
 2460              		.section	.text.reverseDirection,"ax",%progbits
 2461              		.align	2
 2462              		.global	reverseDirection
 2463              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 56


 2464              		.thumb_func
 2465              		.type	reverseDirection, %function
 2466              	reverseDirection:
 2467              	.LFB75:
 616:.\main.c      **** 
 617:.\main.c      **** void reverseDirection()
 618:.\main.c      **** {
 2468              		.loc 1 618 0
 2469              		.cfi_startproc
 2470              		@ args = 0, pretend = 0, frame = 16
 2471              		@ frame_needed = 1, uses_anonymous_args = 0
 2472 0000 80B5     		push	{r7, lr}
 2473              		.cfi_def_cfa_offset 8
 2474              		.cfi_offset 7, -8
 2475              		.cfi_offset 14, -4
 2476 0002 84B0     		sub	sp, sp, #16
 2477              		.cfi_def_cfa_offset 24
 2478 0004 00AF     		add	r7, sp, #0
 2479              		.cfi_def_cfa_register 7
 619:.\main.c      ****     direction = !direction;
 2480              		.loc 1 619 0
 2481 0006 114B     		ldr	r3, .L126
 2482 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2483 000a 002B     		cmp	r3, #0
 2484 000c 0CBF     		ite	eq
 2485 000e 0123     		moveq	r3, #1
 2486 0010 0023     		movne	r3, #0
 2487 0012 DBB2     		uxtb	r3, r3
 2488 0014 1A46     		mov	r2, r3
 2489 0016 0D4B     		ldr	r3, .L126
 2490 0018 1A70     		strb	r2, [r3]
 620:.\main.c      ****     setLeftDir(direction);
 2491              		.loc 1 620 0
 2492 001a 0C4B     		ldr	r3, .L126
 2493 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2494 001e 1846     		mov	r0, r3
 2495 0020 FFF7FEFF 		bl	setLeftDir
 621:.\main.c      ****     setRightDir(direction);
 2496              		.loc 1 621 0
 2497 0024 094B     		ldr	r3, .L126
 2498 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2499 0028 1846     		mov	r0, r3
 2500 002a FFF7FEFF 		bl	setRightDir
 622:.\main.c      ****     char mes[16];
 623:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2501              		.loc 1 623 0
 2502 002e 074B     		ldr	r3, .L126
 2503 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2504 0032 1A46     		mov	r2, r3
 2505 0034 3B46     		mov	r3, r7
 2506 0036 1846     		mov	r0, r3
 2507 0038 0549     		ldr	r1, .L126+4
 2508 003a FFF7FEFF 		bl	sprintf
 624:.\main.c      ****     UART_PutString(mes);
 2509              		.loc 1 624 0
 2510 003e 3B46     		mov	r3, r7
 2511 0040 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 57


 2512 0042 FFF7FEFF 		bl	UART_PutString
 625:.\main.c      **** }
 2513              		.loc 1 625 0
 2514 0046 1037     		adds	r7, r7, #16
 2515              		.cfi_def_cfa_offset 8
 2516 0048 BD46     		mov	sp, r7
 2517              		.cfi_def_cfa_register 13
 2518              		@ sp needed
 2519 004a 80BD     		pop	{r7, pc}
 2520              	.L127:
 2521              		.align	2
 2522              	.L126:
 2523 004c 00000000 		.word	direction
 2524 0050 B8000000 		.word	.LC8
 2525              		.cfi_endproc
 2526              	.LFE75:
 2527              		.size	reverseDirection, .-reverseDirection
 2528              		.global	__aeabi_dcmplt
 2529              		.global	__aeabi_ddiv
 2530              		.global	__aeabi_d2iz
 2531              		.section	.text.setSpeed,"ax",%progbits
 2532              		.align	2
 2533              		.global	setSpeed
 2534              		.thumb
 2535              		.thumb_func
 2536              		.type	setSpeed, %function
 2537              	setSpeed:
 2538              	.LFB76:
 626:.\main.c      **** 
 627:.\main.c      **** void setSpeed(double left, double right){
 2539              		.loc 1 627 0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 24
 2542              		@ frame_needed = 1, uses_anonymous_args = 0
 2543 0000 80B5     		push	{r7, lr}
 2544              		.cfi_def_cfa_offset 8
 2545              		.cfi_offset 7, -8
 2546              		.cfi_offset 14, -4
 2547 0002 86B0     		sub	sp, sp, #24
 2548              		.cfi_def_cfa_offset 32
 2549 0004 00AF     		add	r7, sp, #0
 2550              		.cfi_def_cfa_register 7
 2551 0006 C7E90201 		strd	r0, [r7, #8]
 2552 000a C7E90023 		strd	r2, [r7]
 628:.\main.c      ****     if(right < 0.0)
 2553              		.loc 1 628 0
 2554 000e D7E90001 		ldrd	r0, [r7]
 2555 0012 4FF00002 		mov	r2, #0
 2556 0016 4FF00003 		mov	r3, #0
 2557 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2558 001e 0346     		mov	r3, r0
 2559 0020 002B     		cmp	r3, #0
 2560 0022 10D0     		beq	.L137
 629:.\main.c      ****     {
 630:.\main.c      ****         //char mes[16];
 631:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 632:.\main.c      ****        // UART_PutString(mes);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 58


 633:.\main.c      ****         setRightDir(!direction);
 2561              		.loc 1 633 0
 2562 0024 304B     		ldr	r3, .L139+8
 2563 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2564 0028 002B     		cmp	r3, #0
 2565 002a 0CBF     		ite	eq
 2566 002c 0123     		moveq	r3, #1
 2567 002e 0023     		movne	r3, #0
 2568 0030 DBB2     		uxtb	r3, r3
 2569 0032 1846     		mov	r0, r3
 2570 0034 FFF7FEFF 		bl	setRightDir
 634:.\main.c      ****         right = -right;
 2571              		.loc 1 634 0
 2572 0038 3B68     		ldr	r3, [r7]
 2573 003a 3B60     		str	r3, [r7]
 2574 003c 7B68     		ldr	r3, [r7, #4]
 2575 003e 83F00043 		eor	r3, r3, #-2147483648
 2576 0042 7B60     		str	r3, [r7, #4]
 2577 0044 04E0     		b	.L131
 2578              	.L137:
 635:.\main.c      ****     }
 636:.\main.c      ****     else setRightDir(direction);
 2579              		.loc 1 636 0
 2580 0046 284B     		ldr	r3, .L139+8
 2581 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2582 004a 1846     		mov	r0, r3
 2583 004c FFF7FEFF 		bl	setRightDir
 2584              	.L131:
 637:.\main.c      ****     
 638:.\main.c      ****     if(left < 0.0)
 2585              		.loc 1 638 0
 2586 0050 D7E90201 		ldrd	r0, [r7, #8]
 2587 0054 4FF00002 		mov	r2, #0
 2588 0058 4FF00003 		mov	r3, #0
 2589 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2590 0060 0346     		mov	r3, r0
 2591 0062 002B     		cmp	r3, #0
 2592 0064 10D0     		beq	.L138
 639:.\main.c      ****     {
 640:.\main.c      ****        // char mes[16];
 641:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 642:.\main.c      ****         //UART_PutString(mes);
 643:.\main.c      ****         setLeftDir(!direction);
 2593              		.loc 1 643 0
 2594 0066 204B     		ldr	r3, .L139+8
 2595 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2596 006a 002B     		cmp	r3, #0
 2597 006c 0CBF     		ite	eq
 2598 006e 0123     		moveq	r3, #1
 2599 0070 0023     		movne	r3, #0
 2600 0072 DBB2     		uxtb	r3, r3
 2601 0074 1846     		mov	r0, r3
 2602 0076 FFF7FEFF 		bl	setLeftDir
 644:.\main.c      ****         left = -left;
 2603              		.loc 1 644 0
 2604 007a BB68     		ldr	r3, [r7, #8]
 2605 007c BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 59


 2606 007e FB68     		ldr	r3, [r7, #12]
 2607 0080 83F00043 		eor	r3, r3, #-2147483648
 2608 0084 FB60     		str	r3, [r7, #12]
 2609 0086 04E0     		b	.L134
 2610              	.L138:
 645:.\main.c      ****     }
 646:.\main.c      ****     else setLeftDir(direction);
 2611              		.loc 1 646 0
 2612 0088 174B     		ldr	r3, .L139+8
 2613 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2614 008c 1846     		mov	r0, r3
 2615 008e FFF7FEFF 		bl	setLeftDir
 2616              	.L134:
 647:.\main.c      ****     
 648:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2617              		.loc 1 648 0
 2618 0092 D7E90201 		ldrd	r0, [r7, #8]
 2619 0096 12A3     		adr	r3, .L139
 2620 0098 D3E90023 		ldrd	r2, [r3]
 2621 009c FFF7FEFF 		bl	__aeabi_ddiv
 2622 00a0 0246     		mov	r2, r0
 2623 00a2 0B46     		mov	r3, r1
 2624 00a4 1046     		mov	r0, r2
 2625 00a6 1946     		mov	r1, r3
 2626 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2627 00ac 0346     		mov	r3, r0
 2628 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 649:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2629              		.loc 1 649 0
 2630 00b0 D7E90001 		ldrd	r0, [r7]
 2631 00b4 0AA3     		adr	r3, .L139
 2632 00b6 D3E90023 		ldrd	r2, [r3]
 2633 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2634 00be 0246     		mov	r2, r0
 2635 00c0 0B46     		mov	r3, r1
 2636 00c2 1046     		mov	r0, r2
 2637 00c4 1946     		mov	r1, r3
 2638 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2639 00ca 0346     		mov	r3, r0
 2640 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 650:.\main.c      ****     
 651:.\main.c      ****     leftSpeedLimit = countsRight;
 2641              		.loc 1 651 0
 2642 00ce 074A     		ldr	r2, .L139+12
 2643 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2644 00d2 1380     		strh	r3, [r2]	@ movhi
 652:.\main.c      ****     rightSpeedLimit = countsLeft;
 2645              		.loc 1 652 0
 2646 00d4 064A     		ldr	r2, .L139+16
 2647 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2648 00d8 1380     		strh	r3, [r2]	@ movhi
 653:.\main.c      **** }
 2649              		.loc 1 653 0
 2650 00da 1837     		adds	r7, r7, #24
 2651              		.cfi_def_cfa_offset 8
 2652 00dc BD46     		mov	sp, r7
 2653              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 60


 2654              		@ sp needed
 2655 00de 80BD     		pop	{r7, pc}
 2656              	.L140:
 2657              		.align	3
 2658              	.L139:
 2659 00e0 969526A5 		.word	-1524197994
 2660 00e4 A0DBEF3F 		.word	1072683936
 2661 00e8 00000000 		.word	direction
 2662 00ec 00000000 		.word	leftSpeedLimit
 2663 00f0 00000000 		.word	rightSpeedLimit
 2664              		.cfi_endproc
 2665              	.LFE76:
 2666              		.size	setSpeed, .-setSpeed
 2667 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2668              		.align	2
 2669              		.global	brakeLeft
 2670              		.thumb
 2671              		.thumb_func
 2672              		.type	brakeLeft, %function
 2673              	brakeLeft:
 2674              	.LFB77:
 654:.\main.c      **** 
 655:.\main.c      **** void brakeLeft()
 656:.\main.c      **** {
 2675              		.loc 1 656 0
 2676              		.cfi_startproc
 2677              		@ args = 0, pretend = 0, frame = 0
 2678              		@ frame_needed = 1, uses_anonymous_args = 0
 2679 0000 80B5     		push	{r7, lr}
 2680              		.cfi_def_cfa_offset 8
 2681              		.cfi_offset 7, -8
 2682              		.cfi_offset 14, -4
 2683 0002 00AF     		add	r7, sp, #0
 2684              		.cfi_def_cfa_register 7
 657:.\main.c      ****     PWM_1_WriteCompare(0);
 2685              		.loc 1 657 0
 2686 0004 0020     		movs	r0, #0
 2687 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 658:.\main.c      ****     left_duty_cycle = 0;
 2688              		.loc 1 658 0
 2689 000a 024B     		ldr	r3, .L142
 2690 000c 0022     		movs	r2, #0
 2691 000e 1A80     		strh	r2, [r3]	@ movhi
 659:.\main.c      **** }
 2692              		.loc 1 659 0
 2693 0010 80BD     		pop	{r7, pc}
 2694              	.L143:
 2695 0012 00BF     		.align	2
 2696              	.L142:
 2697 0014 00000000 		.word	left_duty_cycle
 2698              		.cfi_endproc
 2699              	.LFE77:
 2700              		.size	brakeLeft, .-brakeLeft
 2701              		.section	.text.brakeRight,"ax",%progbits
 2702              		.align	2
 2703              		.global	brakeRight
 2704              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 61


 2705              		.thumb_func
 2706              		.type	brakeRight, %function
 2707              	brakeRight:
 2708              	.LFB78:
 660:.\main.c      **** 
 661:.\main.c      **** void brakeRight()
 662:.\main.c      **** {
 2709              		.loc 1 662 0
 2710              		.cfi_startproc
 2711              		@ args = 0, pretend = 0, frame = 0
 2712              		@ frame_needed = 1, uses_anonymous_args = 0
 2713 0000 80B5     		push	{r7, lr}
 2714              		.cfi_def_cfa_offset 8
 2715              		.cfi_offset 7, -8
 2716              		.cfi_offset 14, -4
 2717 0002 00AF     		add	r7, sp, #0
 2718              		.cfi_def_cfa_register 7
 663:.\main.c      ****      PWM_2_WriteCompare(0);
 2719              		.loc 1 663 0
 2720 0004 0020     		movs	r0, #0
 2721 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 664:.\main.c      ****      right_duty_cycle = 0;
 2722              		.loc 1 664 0
 2723 000a 024B     		ldr	r3, .L145
 2724 000c 0022     		movs	r2, #0
 2725 000e 1A80     		strh	r2, [r3]	@ movhi
 665:.\main.c      **** }
 2726              		.loc 1 665 0
 2727 0010 80BD     		pop	{r7, pc}
 2728              	.L146:
 2729 0012 00BF     		.align	2
 2730              	.L145:
 2731 0014 00000000 		.word	right_duty_cycle
 2732              		.cfi_endproc
 2733              	.LFE78:
 2734              		.size	brakeRight, .-brakeRight
 2735              		.section	.text.brakeMotor,"ax",%progbits
 2736              		.align	2
 2737              		.global	brakeMotor
 2738              		.thumb
 2739              		.thumb_func
 2740              		.type	brakeMotor, %function
 2741              	brakeMotor:
 2742              	.LFB79:
 666:.\main.c      **** 
 667:.\main.c      **** void brakeMotor(){
 2743              		.loc 1 667 0
 2744              		.cfi_startproc
 2745              		@ args = 0, pretend = 0, frame = 0
 2746              		@ frame_needed = 1, uses_anonymous_args = 0
 2747 0000 80B5     		push	{r7, lr}
 2748              		.cfi_def_cfa_offset 8
 2749              		.cfi_offset 7, -8
 2750              		.cfi_offset 14, -4
 2751 0002 00AF     		add	r7, sp, #0
 2752              		.cfi_def_cfa_register 7
 668:.\main.c      ****     setSpeed(0, 0);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 62


 2753              		.loc 1 668 0
 2754 0004 4FF00000 		mov	r0, #0
 2755 0008 4FF00001 		mov	r1, #0
 2756 000c 4FF00002 		mov	r2, #0
 2757 0010 4FF00003 		mov	r3, #0
 2758 0014 FFF7FEFF 		bl	setSpeed
 669:.\main.c      ****     brakeLeft();
 2759              		.loc 1 669 0
 2760 0018 FFF7FEFF 		bl	brakeLeft
 670:.\main.c      ****     brakeRight();
 2761              		.loc 1 670 0
 2762 001c FFF7FEFF 		bl	brakeRight
 671:.\main.c      **** }
 2763              		.loc 1 671 0
 2764 0020 80BD     		pop	{r7, pc}
 2765              		.cfi_endproc
 2766              	.LFE79:
 2767              		.size	brakeMotor, .-brakeMotor
 2768 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2769              		.align	2
 2770              		.global	driveForwards
 2771              		.thumb
 2772              		.thumb_func
 2773              		.type	driveForwards, %function
 2774              	driveForwards:
 2775              	.LFB80:
 672:.\main.c      **** 
 673:.\main.c      **** void driveForwards()
 674:.\main.c      **** {
 2776              		.loc 1 674 0
 2777              		.cfi_startproc
 2778              		@ args = 0, pretend = 0, frame = 0
 2779              		@ frame_needed = 1, uses_anonymous_args = 0
 2780 0000 80B5     		push	{r7, lr}
 2781              		.cfi_def_cfa_offset 8
 2782              		.cfi_offset 7, -8
 2783              		.cfi_offset 14, -4
 2784 0002 00AF     		add	r7, sp, #0
 2785              		.cfi_def_cfa_register 7
 675:.\main.c      ****     setSpeed(speed, speed);
 2786              		.loc 1 675 0
 2787 0004 044B     		ldr	r3, .L149
 2788 0006 D3E90001 		ldrd	r0, [r3]
 2789 000a 034B     		ldr	r3, .L149
 2790 000c D3E90023 		ldrd	r2, [r3]
 2791 0010 FFF7FEFF 		bl	setSpeed
 676:.\main.c      **** }
 2792              		.loc 1 676 0
 2793 0014 80BD     		pop	{r7, pc}
 2794              	.L150:
 2795 0016 00BF     		.align	2
 2796              	.L149:
 2797 0018 00000000 		.word	speed
 2798              		.cfi_endproc
 2799              	.LFE80:
 2800              		.size	driveForwards, .-driveForwards
 2801              		.global	__aeabi_dadd
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 63


 2802              		.section	.text.turnRight,"ax",%progbits
 2803              		.align	2
 2804              		.global	turnRight
 2805              		.thumb
 2806              		.thumb_func
 2807              		.type	turnRight, %function
 2808              	turnRight:
 2809              	.LFB81:
 677:.\main.c      **** 
 678:.\main.c      **** void turnRight()
 679:.\main.c      **** {
 2810              		.loc 1 679 0
 2811              		.cfi_startproc
 2812              		@ args = 0, pretend = 0, frame = 0
 2813              		@ frame_needed = 1, uses_anonymous_args = 0
 2814 0000 80B5     		push	{r7, lr}
 2815              		.cfi_def_cfa_offset 8
 2816              		.cfi_offset 7, -8
 2817              		.cfi_offset 14, -4
 2818 0002 00AF     		add	r7, sp, #0
 2819              		.cfi_def_cfa_register 7
 680:.\main.c      ****     setSpeed(0,speed*2.0);
 2820              		.loc 1 680 0
 2821 0004 074B     		ldr	r3, .L152
 2822 0006 D3E90023 		ldrd	r2, [r3]
 2823 000a 1046     		mov	r0, r2
 2824 000c 1946     		mov	r1, r3
 2825 000e FFF7FEFF 		bl	__aeabi_dadd
 2826 0012 0246     		mov	r2, r0
 2827 0014 0B46     		mov	r3, r1
 2828 0016 4FF00000 		mov	r0, #0
 2829 001a 4FF00001 		mov	r1, #0
 2830 001e FFF7FEFF 		bl	setSpeed
 681:.\main.c      **** }
 2831              		.loc 1 681 0
 2832 0022 80BD     		pop	{r7, pc}
 2833              	.L153:
 2834              		.align	2
 2835              	.L152:
 2836 0024 00000000 		.word	speed
 2837              		.cfi_endproc
 2838              	.LFE81:
 2839              		.size	turnRight, .-turnRight
 2840              		.section	.text.turnLeft,"ax",%progbits
 2841              		.align	2
 2842              		.global	turnLeft
 2843              		.thumb
 2844              		.thumb_func
 2845              		.type	turnLeft, %function
 2846              	turnLeft:
 2847              	.LFB82:
 682:.\main.c      **** 
 683:.\main.c      **** void turnLeft()
 684:.\main.c      **** {
 2848              		.loc 1 684 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 64


 2851              		@ frame_needed = 1, uses_anonymous_args = 0
 2852 0000 80B5     		push	{r7, lr}
 2853              		.cfi_def_cfa_offset 8
 2854              		.cfi_offset 7, -8
 2855              		.cfi_offset 14, -4
 2856 0002 00AF     		add	r7, sp, #0
 2857              		.cfi_def_cfa_register 7
 685:.\main.c      ****     setSpeed(speed*2.0,0);
 2858              		.loc 1 685 0
 2859 0004 084B     		ldr	r3, .L155
 2860 0006 D3E90023 		ldrd	r2, [r3]
 2861 000a 1046     		mov	r0, r2
 2862 000c 1946     		mov	r1, r3
 2863 000e FFF7FEFF 		bl	__aeabi_dadd
 2864 0012 0246     		mov	r2, r0
 2865 0014 0B46     		mov	r3, r1
 2866 0016 1046     		mov	r0, r2
 2867 0018 1946     		mov	r1, r3
 2868 001a 4FF00002 		mov	r2, #0
 2869 001e 4FF00003 		mov	r3, #0
 2870 0022 FFF7FEFF 		bl	setSpeed
 686:.\main.c      **** }
 2871              		.loc 1 686 0
 2872 0026 80BD     		pop	{r7, pc}
 2873              	.L156:
 2874              		.align	2
 2875              	.L155:
 2876 0028 00000000 		.word	speed
 2877              		.cfi_endproc
 2878              	.LFE82:
 2879              		.size	turnLeft, .-turnLeft
 2880              		.section	.text.turnU,"ax",%progbits
 2881              		.align	2
 2882              		.global	turnU
 2883              		.thumb
 2884              		.thumb_func
 2885              		.type	turnU, %function
 2886              	turnU:
 2887              	.LFB83:
 687:.\main.c      **** 
 688:.\main.c      **** void turnU()
 689:.\main.c      **** {
 2888              		.loc 1 689 0
 2889              		.cfi_startproc
 2890              		@ args = 0, pretend = 0, frame = 0
 2891              		@ frame_needed = 1, uses_anonymous_args = 0
 2892 0000 B0B5     		push	{r4, r5, r7, lr}
 2893              		.cfi_def_cfa_offset 16
 2894              		.cfi_offset 4, -16
 2895              		.cfi_offset 5, -12
 2896              		.cfi_offset 7, -8
 2897              		.cfi_offset 14, -4
 2898 0002 00AF     		add	r7, sp, #0
 2899              		.cfi_def_cfa_register 7
 690:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 2900              		.loc 1 690 0
 2901 0004 0E4B     		ldr	r3, .L158
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 65


 2902 0006 D3E90023 		ldrd	r2, [r3]
 2903 000a 1446     		mov	r4, r2
 2904 000c 83F00045 		eor	r5, r3, #-2147483648
 2905 0010 2046     		mov	r0, r4
 2906 0012 2946     		mov	r1, r5
 2907 0014 2246     		mov	r2, r4
 2908 0016 2B46     		mov	r3, r5
 2909 0018 FFF7FEFF 		bl	__aeabi_dadd
 2910 001c 0246     		mov	r2, r0
 2911 001e 0B46     		mov	r3, r1
 2912 0020 1446     		mov	r4, r2
 2913 0022 1D46     		mov	r5, r3
 2914 0024 064B     		ldr	r3, .L158
 2915 0026 D3E90023 		ldrd	r2, [r3]
 2916 002a 1046     		mov	r0, r2
 2917 002c 1946     		mov	r1, r3
 2918 002e FFF7FEFF 		bl	__aeabi_dadd
 2919 0032 0246     		mov	r2, r0
 2920 0034 0B46     		mov	r3, r1
 2921 0036 2046     		mov	r0, r4
 2922 0038 2946     		mov	r1, r5
 2923 003a FFF7FEFF 		bl	setSpeed
 691:.\main.c      **** }
 2924              		.loc 1 691 0
 2925 003e B0BD     		pop	{r4, r5, r7, pc}
 2926              	.L159:
 2927              		.align	2
 2928              	.L158:
 2929 0040 00000000 		.word	speed
 2930              		.cfi_endproc
 2931              	.LFE83:
 2932              		.size	turnU, .-turnU
 2933              		.section	.text.initTurnLeft,"ax",%progbits
 2934              		.align	2
 2935              		.global	initTurnLeft
 2936              		.thumb
 2937              		.thumb_func
 2938              		.type	initTurnLeft, %function
 2939              	initTurnLeft:
 2940              	.LFB84:
 692:.\main.c      **** 
 693:.\main.c      **** void initTurnLeft(){
 2941              		.loc 1 693 0
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 1, uses_anonymous_args = 0
 2945 0000 80B5     		push	{r7, lr}
 2946              		.cfi_def_cfa_offset 8
 2947              		.cfi_offset 7, -8
 2948              		.cfi_offset 14, -4
 2949 0002 00AF     		add	r7, sp, #0
 2950              		.cfi_def_cfa_register 7
 694:.\main.c      ****     Timer_2_Stop();
 2951              		.loc 1 694 0
 2952 0004 FFF7FEFF 		bl	Timer_2_Stop
 695:.\main.c      ****     prev_movement_state = movement_state;
 2953              		.loc 1 695 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 66


 2954 0008 084B     		ldr	r3, .L161
 2955 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2956 000c 084B     		ldr	r3, .L161+4
 2957 000e 1A70     		strb	r2, [r3]
 696:.\main.c      ****     movement_state = LTURN;
 2958              		.loc 1 696 0
 2959 0010 064B     		ldr	r3, .L161
 2960 0012 0122     		movs	r2, #1
 2961 0014 1A70     		strb	r2, [r3]
 697:.\main.c      ****     brakeLeft();
 2962              		.loc 1 697 0
 2963 0016 FFF7FEFF 		bl	brakeLeft
 698:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 2964              		.loc 1 698 0
 2965 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2966 001e 0346     		mov	r3, r0
 2967 0020 1A46     		mov	r2, r3
 2968 0022 044B     		ldr	r3, .L161+8
 2969 0024 1A80     		strh	r2, [r3]	@ movhi
 699:.\main.c      ****     Timer_2_Start();
 2970              		.loc 1 699 0
 2971 0026 FFF7FEFF 		bl	Timer_2_Start
 700:.\main.c      **** }
 2972              		.loc 1 700 0
 2973 002a 80BD     		pop	{r7, pc}
 2974              	.L162:
 2975              		.align	2
 2976              	.L161:
 2977 002c 00000000 		.word	movement_state
 2978 0030 00000000 		.word	prev_movement_state
 2979 0034 00000000 		.word	start_turn_count
 2980              		.cfi_endproc
 2981              	.LFE84:
 2982              		.size	initTurnLeft, .-initTurnLeft
 2983              		.section	.text.initTurnRight,"ax",%progbits
 2984              		.align	2
 2985              		.global	initTurnRight
 2986              		.thumb
 2987              		.thumb_func
 2988              		.type	initTurnRight, %function
 2989              	initTurnRight:
 2990              	.LFB85:
 701:.\main.c      **** 
 702:.\main.c      **** void initTurnRight(){
 2991              		.loc 1 702 0
 2992              		.cfi_startproc
 2993              		@ args = 0, pretend = 0, frame = 0
 2994              		@ frame_needed = 1, uses_anonymous_args = 0
 2995 0000 80B5     		push	{r7, lr}
 2996              		.cfi_def_cfa_offset 8
 2997              		.cfi_offset 7, -8
 2998              		.cfi_offset 14, -4
 2999 0002 00AF     		add	r7, sp, #0
 3000              		.cfi_def_cfa_register 7
 703:.\main.c      ****     Timer_2_Stop();
 3001              		.loc 1 703 0
 3002 0004 FFF7FEFF 		bl	Timer_2_Stop
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 67


 704:.\main.c      ****     prev_movement_state = movement_state;
 3003              		.loc 1 704 0
 3004 0008 084B     		ldr	r3, .L164
 3005 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3006 000c 084B     		ldr	r3, .L164+4
 3007 000e 1A70     		strb	r2, [r3]
 705:.\main.c      ****     movement_state = RTURN;
 3008              		.loc 1 705 0
 3009 0010 064B     		ldr	r3, .L164
 3010 0012 0222     		movs	r2, #2
 3011 0014 1A70     		strb	r2, [r3]
 706:.\main.c      ****     brakeRight();
 3012              		.loc 1 706 0
 3013 0016 FFF7FEFF 		bl	brakeRight
 707:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3014              		.loc 1 707 0
 3015 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3016 001e 0346     		mov	r3, r0
 3017 0020 1A46     		mov	r2, r3
 3018 0022 044B     		ldr	r3, .L164+8
 3019 0024 1A80     		strh	r2, [r3]	@ movhi
 708:.\main.c      ****     Timer_2_Start();
 3020              		.loc 1 708 0
 3021 0026 FFF7FEFF 		bl	Timer_2_Start
 709:.\main.c      **** }
 3022              		.loc 1 709 0
 3023 002a 80BD     		pop	{r7, pc}
 3024              	.L165:
 3025              		.align	2
 3026              	.L164:
 3027 002c 00000000 		.word	movement_state
 3028 0030 00000000 		.word	prev_movement_state
 3029 0034 00000000 		.word	start_turn_count
 3030              		.cfi_endproc
 3031              	.LFE85:
 3032              		.size	initTurnRight, .-initTurnRight
 3033              		.section	.text.initTurnU,"ax",%progbits
 3034              		.align	2
 3035              		.global	initTurnU
 3036              		.thumb
 3037              		.thumb_func
 3038              		.type	initTurnU, %function
 3039              	initTurnU:
 3040              	.LFB86:
 710:.\main.c      **** 
 711:.\main.c      **** void initTurnU(){
 3041              		.loc 1 711 0
 3042              		.cfi_startproc
 3043              		@ args = 0, pretend = 0, frame = 0
 3044              		@ frame_needed = 1, uses_anonymous_args = 0
 3045 0000 80B5     		push	{r7, lr}
 3046              		.cfi_def_cfa_offset 8
 3047              		.cfi_offset 7, -8
 3048              		.cfi_offset 14, -4
 3049 0002 00AF     		add	r7, sp, #0
 3050              		.cfi_def_cfa_register 7
 712:.\main.c      ****     Timer_2_Stop();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 68


 3051              		.loc 1 712 0
 3052 0004 FFF7FEFF 		bl	Timer_2_Stop
 713:.\main.c      ****     prev_movement_state = movement_state;
 3053              		.loc 1 713 0
 3054 0008 084B     		ldr	r3, .L167
 3055 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3056 000c 084B     		ldr	r3, .L167+4
 3057 000e 1A70     		strb	r2, [r3]
 714:.\main.c      ****     movement_state = UTURN;
 3058              		.loc 1 714 0
 3059 0010 064B     		ldr	r3, .L167
 3060 0012 0722     		movs	r2, #7
 3061 0014 1A70     		strb	r2, [r3]
 715:.\main.c      ****     brakeMotor();
 3062              		.loc 1 715 0
 3063 0016 FFF7FEFF 		bl	brakeMotor
 716:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3064              		.loc 1 716 0
 3065 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3066 001e 0346     		mov	r3, r0
 3067 0020 1A46     		mov	r2, r3
 3068 0022 044B     		ldr	r3, .L167+8
 3069 0024 1A80     		strh	r2, [r3]	@ movhi
 717:.\main.c      ****     Timer_2_Start();
 3070              		.loc 1 717 0
 3071 0026 FFF7FEFF 		bl	Timer_2_Start
 718:.\main.c      **** }
 3072              		.loc 1 718 0
 3073 002a 80BD     		pop	{r7, pc}
 3074              	.L168:
 3075              		.align	2
 3076              	.L167:
 3077 002c 00000000 		.word	movement_state
 3078 0030 00000000 		.word	prev_movement_state
 3079 0034 00000000 		.word	start_turn_count
 3080              		.cfi_endproc
 3081              	.LFE86:
 3082              		.size	initTurnU, .-initTurnU
 3083              		.section	.text.initForward,"ax",%progbits
 3084              		.align	2
 3085              		.global	initForward
 3086              		.thumb
 3087              		.thumb_func
 3088              		.type	initForward, %function
 3089              	initForward:
 3090              	.LFB87:
 719:.\main.c      **** 
 720:.\main.c      **** void initForward(){
 3091              		.loc 1 720 0
 3092              		.cfi_startproc
 3093              		@ args = 0, pretend = 0, frame = 0
 3094              		@ frame_needed = 1, uses_anonymous_args = 0
 3095 0000 80B5     		push	{r7, lr}
 3096              		.cfi_def_cfa_offset 8
 3097              		.cfi_offset 7, -8
 3098              		.cfi_offset 14, -4
 3099 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 69


 3100              		.cfi_def_cfa_register 7
 721:.\main.c      ****     brakeMotor();
 3101              		.loc 1 721 0
 3102 0004 FFF7FEFF 		bl	brakeMotor
 722:.\main.c      ****     movement_state = DRIVE;
 3103              		.loc 1 722 0
 3104 0008 014B     		ldr	r3, .L170
 3105 000a 0022     		movs	r2, #0
 3106 000c 1A70     		strb	r2, [r3]
 723:.\main.c      **** }
 3107              		.loc 1 723 0
 3108 000e 80BD     		pop	{r7, pc}
 3109              	.L171:
 3110              		.align	2
 3111              	.L170:
 3112 0010 00000000 		.word	movement_state
 3113              		.cfi_endproc
 3114              	.LFE87:
 3115              		.size	initForward, .-initForward
 3116              		.section	.text.initBrake,"ax",%progbits
 3117              		.align	2
 3118              		.global	initBrake
 3119              		.thumb
 3120              		.thumb_func
 3121              		.type	initBrake, %function
 3122              	initBrake:
 3123              	.LFB88:
 724:.\main.c      **** 
 725:.\main.c      **** void initBrake(){
 3124              		.loc 1 725 0
 3125              		.cfi_startproc
 3126              		@ args = 0, pretend = 0, frame = 0
 3127              		@ frame_needed = 1, uses_anonymous_args = 0
 3128              		@ link register save eliminated.
 3129 0000 80B4     		push	{r7}
 3130              		.cfi_def_cfa_offset 4
 3131              		.cfi_offset 7, -4
 3132 0002 00AF     		add	r7, sp, #0
 3133              		.cfi_def_cfa_register 7
 726:.\main.c      ****     movement_state = STOPPED;
 3134              		.loc 1 726 0
 3135 0004 034B     		ldr	r3, .L173
 3136 0006 0322     		movs	r2, #3
 3137 0008 1A70     		strb	r2, [r3]
 727:.\main.c      **** }
 3138              		.loc 1 727 0
 3139 000a BD46     		mov	sp, r7
 3140              		.cfi_def_cfa_register 13
 3141              		@ sp needed
 3142 000c 5DF8047B 		ldr	r7, [sp], #4
 3143              		.cfi_restore 7
 3144              		.cfi_def_cfa_offset 0
 3145 0010 7047     		bx	lr
 3146              	.L174:
 3147 0012 00BF     		.align	2
 3148              	.L173:
 3149 0014 00000000 		.word	movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 70


 3150              		.cfi_endproc
 3151              	.LFE88:
 3152              		.size	initBrake, .-initBrake
 3153              		.section	.text.initTrack,"ax",%progbits
 3154              		.align	2
 3155              		.global	initTrack
 3156              		.thumb
 3157              		.thumb_func
 3158              		.type	initTrack, %function
 3159              	initTrack:
 3160              	.LFB89:
 728:.\main.c      **** 
 729:.\main.c      **** void initTrack()
 730:.\main.c      **** {
 3161              		.loc 1 730 0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 0
 3164              		@ frame_needed = 1, uses_anonymous_args = 0
 3165              		@ link register save eliminated.
 3166 0000 80B4     		push	{r7}
 3167              		.cfi_def_cfa_offset 4
 3168              		.cfi_offset 7, -4
 3169 0002 00AF     		add	r7, sp, #0
 3170              		.cfi_def_cfa_register 7
 731:.\main.c      ****     movement_state = TRACKING;
 3171              		.loc 1 731 0
 3172 0004 034B     		ldr	r3, .L176
 3173 0006 0422     		movs	r2, #4
 3174 0008 1A70     		strb	r2, [r3]
 732:.\main.c      **** }
 3175              		.loc 1 732 0
 3176 000a BD46     		mov	sp, r7
 3177              		.cfi_def_cfa_register 13
 3178              		@ sp needed
 3179 000c 5DF8047B 		ldr	r7, [sp], #4
 3180              		.cfi_restore 7
 3181              		.cfi_def_cfa_offset 0
 3182 0010 7047     		bx	lr
 3183              	.L177:
 3184 0012 00BF     		.align	2
 3185              	.L176:
 3186 0014 00000000 		.word	movement_state
 3187              		.cfi_endproc
 3188              	.LFE89:
 3189              		.size	initTrack, .-initTrack
 3190              		.section	.text.initTrackU,"ax",%progbits
 3191              		.align	2
 3192              		.global	initTrackU
 3193              		.thumb
 3194              		.thumb_func
 3195              		.type	initTrackU, %function
 3196              	initTrackU:
 3197              	.LFB90:
 733:.\main.c      **** 
 734:.\main.c      **** void initTrackU(){
 3198              		.loc 1 734 0
 3199              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 71


 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 1, uses_anonymous_args = 0
 3202              		@ link register save eliminated.
 3203 0000 80B4     		push	{r7}
 3204              		.cfi_def_cfa_offset 4
 3205              		.cfi_offset 7, -4
 3206 0002 00AF     		add	r7, sp, #0
 3207              		.cfi_def_cfa_register 7
 735:.\main.c      ****     movement_state = TRACKING_U;
 3208              		.loc 1 735 0
 3209 0004 034B     		ldr	r3, .L179
 3210 0006 0522     		movs	r2, #5
 3211 0008 1A70     		strb	r2, [r3]
 736:.\main.c      **** }
 3212              		.loc 1 736 0
 3213 000a BD46     		mov	sp, r7
 3214              		.cfi_def_cfa_register 13
 3215              		@ sp needed
 3216 000c 5DF8047B 		ldr	r7, [sp], #4
 3217              		.cfi_restore 7
 3218              		.cfi_def_cfa_offset 0
 3219 0010 7047     		bx	lr
 3220              	.L180:
 3221 0012 00BF     		.align	2
 3222              	.L179:
 3223 0014 00000000 		.word	movement_state
 3224              		.cfi_endproc
 3225              	.LFE90:
 3226              		.size	initTrackU, .-initTrackU
 3227              		.section	.text.inittrackLineZ,"ax",%progbits
 3228              		.align	2
 3229              		.global	inittrackLineZ
 3230              		.thumb
 3231              		.thumb_func
 3232              		.type	inittrackLineZ, %function
 3233              	inittrackLineZ:
 3234              	.LFB91:
 737:.\main.c      **** 
 738:.\main.c      **** void inittrackLineZ(){
 3235              		.loc 1 738 0
 3236              		.cfi_startproc
 3237              		@ args = 0, pretend = 0, frame = 0
 3238              		@ frame_needed = 1, uses_anonymous_args = 0
 3239              		@ link register save eliminated.
 3240 0000 80B4     		push	{r7}
 3241              		.cfi_def_cfa_offset 4
 3242              		.cfi_offset 7, -4
 3243 0002 00AF     		add	r7, sp, #0
 3244              		.cfi_def_cfa_register 7
 739:.\main.c      ****     movement_state = TRACKING_SOFT;
 3245              		.loc 1 739 0
 3246 0004 034B     		ldr	r3, .L182
 3247 0006 0622     		movs	r2, #6
 3248 0008 1A70     		strb	r2, [r3]
 740:.\main.c      **** }
 3249              		.loc 1 740 0
 3250 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 72


 3251              		.cfi_def_cfa_register 13
 3252              		@ sp needed
 3253 000c 5DF8047B 		ldr	r7, [sp], #4
 3254              		.cfi_restore 7
 3255              		.cfi_def_cfa_offset 0
 3256 0010 7047     		bx	lr
 3257              	.L183:
 3258 0012 00BF     		.align	2
 3259              	.L182:
 3260 0014 00000000 		.word	movement_state
 3261              		.cfi_endproc
 3262              	.LFE91:
 3263              		.size	inittrackLineZ, .-inittrackLineZ
 3264              		.section	.text.rxInt,"ax",%progbits
 3265              		.align	2
 3266              		.global	rxInt
 3267              		.thumb
 3268              		.thumb_func
 3269              		.type	rxInt, %function
 3270              	rxInt:
 3271              	.LFB92:
 741:.\main.c      **** 
 742:.\main.c      **** 
 743:.\main.c      **** 
 744:.\main.c      **** //Binary RF Data
 745:.\main.c      **** CY_ISR(rxInt){
 3272              		.loc 1 745 0
 3273              		.cfi_startproc
 3274              		@ args = 0, pretend = 0, frame = 8
 3275              		@ frame_needed = 1, uses_anonymous_args = 0
 3276 0000 B0B5     		push	{r4, r5, r7, lr}
 3277              		.cfi_def_cfa_offset 16
 3278              		.cfi_offset 4, -16
 3279              		.cfi_offset 5, -12
 3280              		.cfi_offset 7, -8
 3281              		.cfi_offset 14, -4
 3282 0002 82B0     		sub	sp, sp, #8
 3283              		.cfi_def_cfa_offset 24
 3284 0004 00AF     		add	r7, sp, #0
 3285              		.cfi_def_cfa_register 7
 746:.\main.c      ****     char rf_char = UART_GetChar();
 3286              		.loc 1 746 0
 3287 0006 FFF7FEFF 		bl	UART_GetChar
 3288 000a 0346     		mov	r3, r0
 3289 000c FB71     		strb	r3, [r7, #7]
 747:.\main.c      ****     if(rf_char == SOP){
 3290              		.loc 1 747 0
 3291 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3292 0010 AA2B     		cmp	r3, #170
 3293 0012 2BD1     		bne	.L185
 748:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 749:.\main.c      ****             if(byteCount == 34)
 3294              		.loc 1 749 0
 3295 0014 224B     		ldr	r3, .L189
 3296 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3297 0018 222B     		cmp	r3, #34
 3298 001a 20D1     		bne	.L186
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 73


 750:.\main.c      ****             {
 751:.\main.c      ****                 system_state = buffer_state;
 3299              		.loc 1 751 0
 3300 001c 214B     		ldr	r3, .L189+4
 3301 001e 224A     		ldr	r2, .L189+8
 3302 0020 1568     		ldr	r5, [r2]	@ unaligned
 3303 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3304 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3305 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3306 0028 1D60     		str	r5, [r3]	@ unaligned
 3307 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3308 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3309 002e D960     		str	r1, [r3, #12]	@ unaligned
 3310 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3311 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3312 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3313 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3314 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3315 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3316 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3317 003e D961     		str	r1, [r3, #28]	@ unaligned
 752:.\main.c      ****                 if(initial_pos_valid == 0)
 3318              		.loc 1 752 0
 3319 0040 1A4B     		ldr	r3, .L189+12
 3320 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3321 0044 002B     		cmp	r3, #0
 3322 0046 0AD1     		bne	.L186
 753:.\main.c      ****                 {
 754:.\main.c      ****                     LED_Write(~LED_Read());
 3323              		.loc 1 754 0
 3324 0048 FFF7FEFF 		bl	LED_Read
 3325 004c 0346     		mov	r3, r0
 3326 004e DB43     		mvns	r3, r3
 3327 0050 DBB2     		uxtb	r3, r3
 3328 0052 1846     		mov	r0, r3
 3329 0054 FFF7FEFF 		bl	LED_Write
 755:.\main.c      ****                     initial_pos_valid = 1;
 3330              		.loc 1 755 0
 3331 0058 144B     		ldr	r3, .L189+12
 3332 005a 0122     		movs	r2, #1
 3333 005c 1A70     		strb	r2, [r3]
 3334              	.L186:
 756:.\main.c      ****                 }
 757:.\main.c      ****             }
 758:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3335              		.loc 1 758 0
 3336 005e 104B     		ldr	r3, .L189
 3337 0060 0222     		movs	r2, #2
 3338 0062 1A70     		strb	r2, [r3]
 759:.\main.c      ****             flag_rx = 0;
 3339              		.loc 1 759 0
 3340 0064 124B     		ldr	r3, .L189+16
 3341 0066 0022     		movs	r2, #0
 3342 0068 1A70     		strb	r2, [r3]
 3343 006a 16E0     		b	.L184
 3344              	.L185:
 760:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 74


 761:.\main.c      ****         }
 762:.\main.c      ****         else
 763:.\main.c      ****         {
 764:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3345              		.loc 1 764 0
 3346 006c 0C4B     		ldr	r3, .L189
 3347 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3348 0070 03F00103 		and	r3, r3, #1
 3349 0074 0F49     		ldr	r1, .L189+20
 3350 0076 FA79     		ldrb	r2, [r7, #7]
 3351 0078 CA54     		strb	r2, [r1, r3]
 765:.\main.c      ****            
 766:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3352              		.loc 1 766 0
 3353 007a 094B     		ldr	r3, .L189
 3354 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3355 007e 03F00103 		and	r3, r3, #1
 3356 0082 DBB2     		uxtb	r3, r3
 3357 0084 002B     		cmp	r3, #0
 3358 0086 02D0     		beq	.L188
 767:.\main.c      ****             {
 768:.\main.c      ****                 flag_rx = 1;
 3359              		.loc 1 768 0
 3360 0088 094B     		ldr	r3, .L189+16
 3361 008a 0122     		movs	r2, #1
 3362 008c 1A70     		strb	r2, [r3]
 3363              	.L188:
 769:.\main.c      ****             }
 770:.\main.c      ****             byteCount = (byteCount + 1);
 3364              		.loc 1 770 0
 3365 008e 044B     		ldr	r3, .L189
 3366 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3367 0092 0133     		adds	r3, r3, #1
 3368 0094 DAB2     		uxtb	r2, r3
 3369 0096 024B     		ldr	r3, .L189
 3370 0098 1A70     		strb	r2, [r3]
 3371              	.L184:
 771:.\main.c      ****         }
 772:.\main.c      **** }
 3372              		.loc 1 772 0
 3373 009a 0837     		adds	r7, r7, #8
 3374              		.cfi_def_cfa_offset 16
 3375 009c BD46     		mov	sp, r7
 3376              		.cfi_def_cfa_register 13
 3377              		@ sp needed
 3378 009e B0BD     		pop	{r4, r5, r7, pc}
 3379              	.L190:
 3380              		.align	2
 3381              	.L189:
 3382 00a0 00000000 		.word	byteCount
 3383 00a4 00000000 		.word	system_state
 3384 00a8 00000000 		.word	buffer_state
 3385 00ac 00000000 		.word	initial_pos_valid
 3386 00b0 00000000 		.word	flag_rx
 3387 00b4 00000000 		.word	packet
 3388              		.cfi_endproc
 3389              	.LFE92:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 75


 3390              		.size	rxInt, .-rxInt
 3391              		.global	__aeabi_i2f
 3392              		.global	__aeabi_fmul
 3393              		.global	__aeabi_f2iz
 3394              		.section	.rodata
 3395 00c2 0000     		.align	2
 3396              	.LC9:
 3397 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3397      65742071 
 3397      7561643A 
 3397      2025640D 
 3397      0A00
 3398 00d6 0000     		.align	2
 3399              	.LC10:
 3400 00d8 0D0A00   		.ascii	"\015\012\000"
 3401              		.section	.text.BT_rxInt,"ax",%progbits
 3402              		.align	2
 3403              		.global	BT_rxInt
 3404              		.thumb
 3405              		.thumb_func
 3406              		.type	BT_rxInt, %function
 3407              	BT_rxInt:
 3408              	.LFB93:
 773:.\main.c      **** 
 774:.\main.c      **** CY_ISR(BT_rxInt)
 775:.\main.c      **** {
 3409              		.loc 1 775 0
 3410              		.cfi_startproc
 3411              		@ args = 0, pretend = 0, frame = 24
 3412              		@ frame_needed = 1, uses_anonymous_args = 0
 3413 0000 80B5     		push	{r7, lr}
 3414              		.cfi_def_cfa_offset 8
 3415              		.cfi_offset 7, -8
 3416              		.cfi_offset 14, -4
 3417 0002 86B0     		sub	sp, sp, #24
 3418              		.cfi_def_cfa_offset 32
 3419 0004 00AF     		add	r7, sp, #0
 3420              		.cfi_def_cfa_register 7
 776:.\main.c      ****     char rf_char = UART_GetChar();
 3421              		.loc 1 776 0
 3422 0006 FFF7FEFF 		bl	UART_GetChar
 3423 000a 0346     		mov	r3, r0
 3424 000c FB74     		strb	r3, [r7, #19]
 777:.\main.c      ****     switch(rf_char){
 3425              		.loc 1 777 0
 3426 000e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3427 0010 613B     		subs	r3, r3, #97
 3428 0012 192B     		cmp	r3, #25
 3429 0014 00F2D580 		bhi	.L191
 3430 0018 01A2     		adr	r2, .L194
 3431 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3432 001e 00BF     		.p2align 2
 3433              	.L194:
 3434 0020 89000000 		.word	.L193+1
 3435 0024 C3010000 		.word	.L191+1
 3436 0028 C3010000 		.word	.L191+1
 3437 002c AD000000 		.word	.L195+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 76


 3438 0030 C3010000 		.word	.L191+1
 3439 0034 B9000000 		.word	.L196+1
 3440 0038 C3010000 		.word	.L191+1
 3441 003c C3010000 		.word	.L191+1
 3442 0040 C3010000 		.word	.L191+1
 3443 0044 C3010000 		.word	.L191+1
 3444 0048 C3010000 		.word	.L191+1
 3445 004c C3010000 		.word	.L191+1
 3446 0050 C3010000 		.word	.L191+1
 3447 0054 C3010000 		.word	.L191+1
 3448 0058 C3010000 		.word	.L191+1
 3449 005c C3010000 		.word	.L191+1
 3450 0060 E9000000 		.word	.L197+1
 3451 0064 3F010000 		.word	.L198+1
 3452 0068 A1000000 		.word	.L199+1
 3453 006c C5000000 		.word	.L200+1
 3454 0070 D1000000 		.word	.L201+1
 3455 0074 C3010000 		.word	.L191+1
 3456 0078 95000000 		.word	.L202+1
 3457 007c 55010000 		.word	.L203+1
 3458 0080 C3010000 		.word	.L191+1
 3459 0084 DD000000 		.word	.L204+1
 3460              		.p2align 1
 3461              	.L193:
 3462              	.LBB9:
 778:.\main.c      ****     case 'a':
 779:.\main.c      ****         initTurnLeft();
 3463              		.loc 1 779 0
 3464 0088 FFF7FEFF 		bl	initTurnLeft
 780:.\main.c      ****         track_mode = NO_TRACK;
 3465              		.loc 1 780 0
 3466 008c 4E4B     		ldr	r3, .L210
 3467 008e 0022     		movs	r2, #0
 3468 0090 1A70     		strb	r2, [r3]
 781:.\main.c      ****         break;
 3469              		.loc 1 781 0
 3470 0092 96E0     		b	.L191
 3471              	.L202:
 782:.\main.c      ****     case 'w':
 783:.\main.c      ****         initForward();
 3472              		.loc 1 783 0
 3473 0094 FFF7FEFF 		bl	initForward
 784:.\main.c      ****         track_mode = NO_TRACK;
 3474              		.loc 1 784 0
 3475 0098 4B4B     		ldr	r3, .L210
 3476 009a 0022     		movs	r2, #0
 3477 009c 1A70     		strb	r2, [r3]
 785:.\main.c      ****         break;
 3478              		.loc 1 785 0
 3479 009e 90E0     		b	.L191
 3480              	.L199:
 786:.\main.c      ****     case 's': 
 787:.\main.c      ****         reverseDirection();
 3481              		.loc 1 787 0
 3482 00a0 FFF7FEFF 		bl	reverseDirection
 788:.\main.c      ****         track_mode = NO_TRACK;
 3483              		.loc 1 788 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 77


 3484 00a4 484B     		ldr	r3, .L210
 3485 00a6 0022     		movs	r2, #0
 3486 00a8 1A70     		strb	r2, [r3]
 789:.\main.c      ****         break;
 3487              		.loc 1 789 0
 3488 00aa 8AE0     		b	.L191
 3489              	.L195:
 790:.\main.c      ****     case 'd':
 791:.\main.c      ****         initTurnRight();
 3490              		.loc 1 791 0
 3491 00ac FFF7FEFF 		bl	initTurnRight
 792:.\main.c      ****         track_mode = NO_TRACK;
 3492              		.loc 1 792 0
 3493 00b0 454B     		ldr	r3, .L210
 3494 00b2 0022     		movs	r2, #0
 3495 00b4 1A70     		strb	r2, [r3]
 793:.\main.c      ****         break;
 3496              		.loc 1 793 0
 3497 00b6 84E0     		b	.L191
 3498              	.L196:
 794:.\main.c      ****     case 'f':
 795:.\main.c      ****         initBrake();
 3499              		.loc 1 795 0
 3500 00b8 FFF7FEFF 		bl	initBrake
 796:.\main.c      ****         track_mode = NO_TRACK;
 3501              		.loc 1 796 0
 3502 00bc 424B     		ldr	r3, .L210
 3503 00be 0022     		movs	r2, #0
 3504 00c0 1A70     		strb	r2, [r3]
 797:.\main.c      ****         break;
 3505              		.loc 1 797 0
 3506 00c2 7EE0     		b	.L191
 3507              	.L200:
 798:.\main.c      ****     case('t'):
 799:.\main.c      ****         track_mode = CURVE_TRACK;
 3508              		.loc 1 799 0
 3509 00c4 404B     		ldr	r3, .L210
 3510 00c6 0122     		movs	r2, #1
 3511 00c8 1A70     		strb	r2, [r3]
 800:.\main.c      ****         initTrack();
 3512              		.loc 1 800 0
 3513 00ca FFF7FEFF 		bl	initTrack
 801:.\main.c      ****         break;
 3514              		.loc 1 801 0
 3515 00ce 78E0     		b	.L191
 3516              	.L201:
 802:.\main.c      ****     case('u'):
 803:.\main.c      ****         initTrackU();
 3517              		.loc 1 803 0
 3518 00d0 FFF7FEFF 		bl	initTrackU
 804:.\main.c      ****         track_mode = U_TRACK;
 3519              		.loc 1 804 0
 3520 00d4 3C4B     		ldr	r3, .L210
 3521 00d6 0222     		movs	r2, #2
 3522 00d8 1A70     		strb	r2, [r3]
 805:.\main.c      ****         break;
 3523              		.loc 1 805 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 78


 3524 00da 72E0     		b	.L191
 3525              	.L204:
 806:.\main.c      ****     case('z'):
 807:.\main.c      ****         track_mode = SQUARE_TRACK;
 3526              		.loc 1 807 0
 3527 00dc 3A4B     		ldr	r3, .L210
 3528 00de 0322     		movs	r2, #3
 3529 00e0 1A70     		strb	r2, [r3]
 808:.\main.c      ****         inittrackLineZ();
 3530              		.loc 1 808 0
 3531 00e2 FFF7FEFF 		bl	inittrackLineZ
 809:.\main.c      ****         break;
 3532              		.loc 1 809 0
 3533 00e6 6CE0     		b	.L191
 3534              	.L197:
 810:.\main.c      ****     case('q'):
 811:.\main.c      ****         track_mode = QUAD_STOP;
 3535              		.loc 1 811 0
 3536 00e8 374B     		ldr	r3, .L210
 3537 00ea 0422     		movs	r2, #4
 3538 00ec 1A70     		strb	r2, [r3]
 812:.\main.c      ****         accum_dist = 0;
 3539              		.loc 1 812 0
 3540 00ee 374B     		ldr	r3, .L210+4
 3541 00f0 0022     		movs	r2, #0
 3542 00f2 1A80     		strh	r2, [r3]	@ movhi
 813:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3543              		.loc 1 813 0
 3544 00f4 364B     		ldr	r3, .L210+8
 3545 00f6 1B88     		ldrh	r3, [r3]
 3546 00f8 1BB2     		sxth	r3, r3
 3547 00fa 1846     		mov	r0, r3
 3548 00fc FFF7FEFF 		bl	__aeabi_i2f
 3549 0100 0246     		mov	r2, r0
 3550 0102 344B     		ldr	r3, .L210+12
 3551 0104 1B68     		ldr	r3, [r3]	@ float
 3552 0106 1046     		mov	r0, r2
 3553 0108 1946     		mov	r1, r3
 3554 010a FFF7FEFF 		bl	__aeabi_fmul
 3555 010e 0346     		mov	r3, r0
 3556 0110 1846     		mov	r0, r3
 3557 0112 FFF7FEFF 		bl	__aeabi_f2iz
 3558 0116 0346     		mov	r3, r0
 3559 0118 9AB2     		uxth	r2, r3
 3560 011a 2F4B     		ldr	r3, .L210+16
 3561 011c 1A80     		strh	r2, [r3]	@ movhi
 814:.\main.c      ****         char mes[16];
 815:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3562              		.loc 1 815 0
 3563 011e 2E4B     		ldr	r3, .L210+16
 3564 0120 1B88     		ldrh	r3, [r3]
 3565 0122 1BB2     		sxth	r3, r3
 3566 0124 3A46     		mov	r2, r7
 3567 0126 1046     		mov	r0, r2
 3568 0128 2C49     		ldr	r1, .L210+20
 3569 012a 1A46     		mov	r2, r3
 3570 012c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 79


 816:.\main.c      ****         UART_PutString(mes);
 3571              		.loc 1 816 0
 3572 0130 3B46     		mov	r3, r7
 3573 0132 1846     		mov	r0, r3
 3574 0134 FFF7FEFF 		bl	UART_PutString
 817:.\main.c      ****         initForward();
 3575              		.loc 1 817 0
 3576 0138 FFF7FEFF 		bl	initForward
 818:.\main.c      ****         break;
 3577              		.loc 1 818 0
 3578 013c 41E0     		b	.L191
 3579              	.L198:
 819:.\main.c      ****     case ('r'):
 820:.\main.c      ****         track_mode = RF_STOP;
 3580              		.loc 1 820 0
 3581 013e 224B     		ldr	r3, .L210
 3582 0140 0522     		movs	r2, #5
 3583 0142 1A70     		strb	r2, [r3]
 821:.\main.c      ****         changeToRF();
 3584              		.loc 1 821 0
 3585 0144 FFF7FEFF 		bl	changeToRF
 822:.\main.c      ****         // Make initial position
 823:.\main.c      ****         initial_pos_valid = 0;
 3586              		.loc 1 823 0
 3587 0148 254B     		ldr	r3, .L210+24
 3588 014a 0022     		movs	r2, #0
 3589 014c 1A70     		strb	r2, [r3]
 824:.\main.c      ****         initBrake();
 3590              		.loc 1 824 0
 3591 014e FFF7FEFF 		bl	initBrake
 825:.\main.c      ****         break;
 3592              		.loc 1 825 0
 3593 0152 36E0     		b	.L191
 3594              	.L203:
 826:.\main.c      ****     case ('x'):
 827:.\main.c      ****         track_mode = DEST_TEST;
 3595              		.loc 1 827 0
 3596 0154 1C4B     		ldr	r3, .L210
 3597 0156 0622     		movs	r2, #6
 3598 0158 1A70     		strb	r2, [r3]
 828:.\main.c      ****         tracked_direction = robot_direction;
 3599              		.loc 1 828 0
 3600 015a 224B     		ldr	r3, .L210+28
 3601 015c 1B68     		ldr	r3, [r3]
 3602 015e 224A     		ldr	r2, .L210+32
 3603 0160 1360     		str	r3, [r2]
 829:.\main.c      ****         instructionLength = generateDirections();
 3604              		.loc 1 829 0
 3605 0162 FFF7FEFF 		bl	generateDirections
 3606 0166 0346     		mov	r3, r0
 3607 0168 9AB2     		uxth	r2, r3
 3608 016a 204B     		ldr	r3, .L210+36
 3609 016c 1A80     		strh	r2, [r3]	@ movhi
 830:.\main.c      ****         //generateEntireMapDirections();
 831:.\main.c      ****         //char message[128];
 832:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 833:.\main.c      ****         int i = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 80


 3610              		.loc 1 833 0
 3611 016e 0023     		movs	r3, #0
 3612 0170 7B61     		str	r3, [r7, #20]
 834:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3613              		.loc 1 834 0
 3614 0172 0023     		movs	r3, #0
 3615 0174 7B61     		str	r3, [r7, #20]
 3616 0176 18E0     		b	.L206
 3617              	.L209:
 835:.\main.c      ****         {
 836:.\main.c      ****             if(i%2 == 0)
 3618              		.loc 1 836 0
 3619 0178 7B69     		ldr	r3, [r7, #20]
 3620 017a 03F00103 		and	r3, r3, #1
 3621 017e 002B     		cmp	r3, #0
 3622 0180 07D1     		bne	.L207
 837:.\main.c      ****             {
 838:.\main.c      ****                 UART_PutChar(instructions[i]);
 3623              		.loc 1 838 0
 3624 0182 1B4A     		ldr	r2, .L210+40
 3625 0184 7B69     		ldr	r3, [r7, #20]
 3626 0186 1344     		add	r3, r3, r2
 3627 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3628 018a 1846     		mov	r0, r3
 3629 018c FFF7FEFF 		bl	UART_PutChar
 3630 0190 08E0     		b	.L208
 3631              	.L207:
 839:.\main.c      ****             }
 840:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3632              		.loc 1 840 0
 3633 0192 174A     		ldr	r2, .L210+40
 3634 0194 7B69     		ldr	r3, [r7, #20]
 3635 0196 1344     		add	r3, r3, r2
 3636 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3637 019a 3033     		adds	r3, r3, #48
 3638 019c DBB2     		uxtb	r3, r3
 3639 019e 1846     		mov	r0, r3
 3640 01a0 FFF7FEFF 		bl	UART_PutChar
 3641              	.L208:
 834:.\main.c      ****         {
 3642              		.loc 1 834 0 discriminator 2
 3643 01a4 7B69     		ldr	r3, [r7, #20]
 3644 01a6 0133     		adds	r3, r3, #1
 3645 01a8 7B61     		str	r3, [r7, #20]
 3646              	.L206:
 834:.\main.c      ****         {
 3647              		.loc 1 834 0 is_stmt 0 discriminator 1
 3648 01aa 104B     		ldr	r3, .L210+36
 3649 01ac 1B88     		ldrh	r3, [r3]
 3650 01ae 1A46     		mov	r2, r3
 3651 01b0 7B69     		ldr	r3, [r7, #20]
 3652 01b2 9A42     		cmp	r2, r3
 3653 01b4 E0DC     		bgt	.L209
 841:.\main.c      **** 
 842:.\main.c      ****         }
 843:.\main.c      ****         
 844:.\main.c      ****         UART_PutString("\r\n");
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 81


 3654              		.loc 1 844 0 is_stmt 1
 3655 01b6 0F48     		ldr	r0, .L210+44
 3656 01b8 FFF7FEFF 		bl	UART_PutString
 845:.\main.c      **** 
 846:.\main.c      ****         inittrackLineZ();
 3657              		.loc 1 846 0
 3658 01bc FFF7FEFF 		bl	inittrackLineZ
 847:.\main.c      ****         break;
 3659              		.loc 1 847 0
 3660 01c0 00BF     		nop
 3661              	.L191:
 3662              	.LBE9:
 848:.\main.c      ****     }
 849:.\main.c      **** }
 3663              		.loc 1 849 0
 3664 01c2 1837     		adds	r7, r7, #24
 3665              		.cfi_def_cfa_offset 8
 3666 01c4 BD46     		mov	sp, r7
 3667              		.cfi_def_cfa_register 13
 3668              		@ sp needed
 3669 01c6 80BD     		pop	{r7, pc}
 3670              	.L211:
 3671              		.align	2
 3672              	.L210:
 3673 01c8 00000000 		.word	track_mode
 3674 01cc 00000000 		.word	accum_dist
 3675 01d0 00000000 		.word	target_distance_cm
 3676 01d4 00000000 		.word	quad_per_cm
 3677 01d8 00000000 		.word	target_distance_quad
 3678 01dc C4000000 		.word	.LC9
 3679 01e0 00000000 		.word	initial_pos_valid
 3680 01e4 00000000 		.word	robot_direction
 3681 01e8 00000000 		.word	tracked_direction
 3682 01ec 00000000 		.word	instructionLength
 3683 01f0 00000000 		.word	instructions
 3684 01f4 D8000000 		.word	.LC10
 3685              		.cfi_endproc
 3686              	.LFE93:
 3687              		.size	BT_rxInt, .-BT_rxInt
 3688              		.section	.text.changeToRF,"ax",%progbits
 3689              		.align	2
 3690              		.global	changeToRF
 3691              		.thumb
 3692              		.thumb_func
 3693              		.type	changeToRF, %function
 3694              	changeToRF:
 3695              	.LFB94:
 850:.\main.c      **** 
 851:.\main.c      **** 
 852:.\main.c      **** void changeToRF()
 853:.\main.c      **** {
 3696              		.loc 1 853 0
 3697              		.cfi_startproc
 3698              		@ args = 0, pretend = 0, frame = 0
 3699              		@ frame_needed = 1, uses_anonymous_args = 0
 3700 0000 80B5     		push	{r7, lr}
 3701              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 82


 3702              		.cfi_offset 7, -8
 3703              		.cfi_offset 14, -4
 3704 0002 00AF     		add	r7, sp, #0
 3705              		.cfi_def_cfa_register 7
 854:.\main.c      ****         //disable BT
 855:.\main.c      ****         BT_ENABLED = 0;
 3706              		.loc 1 855 0
 3707 0004 0B4B     		ldr	r3, .L213
 3708 0006 0022     		movs	r2, #0
 3709 0008 1A70     		strb	r2, [r3]
 856:.\main.c      ****         isrRF_RX_Stop();
 3710              		.loc 1 856 0
 3711 000a FFF7FEFF 		bl	isrRF_RX_Stop
 857:.\main.c      ****         UART_Stop();
 3712              		.loc 1 857 0
 3713 000e FFF7FEFF 		bl	UART_Stop
 858:.\main.c      ****         
 859:.\main.c      ****         //enable RF
 860:.\main.c      ****         BIN_ENABLED = 1;
 3714              		.loc 1 860 0
 3715 0012 094B     		ldr	r3, .L213+4
 3716 0014 0122     		movs	r2, #1
 3717 0016 1A70     		strb	r2, [r3]
 861:.\main.c      ****         UART_clk_SetDividerValue(130);
 3718              		.loc 1 861 0
 3719 0018 8120     		movs	r0, #129
 3720 001a 0121     		movs	r1, #1
 3721 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 862:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 3722              		.loc 1 862 0
 3723 0020 0648     		ldr	r0, .L213+8
 3724 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 863:.\main.c      ****         UART_Start();
 3725              		.loc 1 863 0
 3726 0026 FFF7FEFF 		bl	UART_Start
 864:.\main.c      ****         RF_BT_SELECT_Write(0);
 3727              		.loc 1 864 0
 3728 002a 0020     		movs	r0, #0
 3729 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 865:.\main.c      **** }
 3730              		.loc 1 865 0
 3731 0030 80BD     		pop	{r7, pc}
 3732              	.L214:
 3733 0032 00BF     		.align	2
 3734              	.L213:
 3735 0034 00000000 		.word	BT_ENABLED
 3736 0038 00000000 		.word	BIN_ENABLED
 3737 003c 00000000 		.word	rxInt
 3738              		.cfi_endproc
 3739              	.LFE94:
 3740              		.size	changeToRF, .-changeToRF
 3741              		.section	.text.changeToBT,"ax",%progbits
 3742              		.align	2
 3743              		.global	changeToBT
 3744              		.thumb
 3745              		.thumb_func
 3746              		.type	changeToBT, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 83


 3747              	changeToBT:
 3748              	.LFB95:
 866:.\main.c      **** 
 867:.\main.c      **** void changeToBT()
 868:.\main.c      **** {
 3749              		.loc 1 868 0
 3750              		.cfi_startproc
 3751              		@ args = 0, pretend = 0, frame = 0
 3752              		@ frame_needed = 1, uses_anonymous_args = 0
 3753 0000 80B5     		push	{r7, lr}
 3754              		.cfi_def_cfa_offset 8
 3755              		.cfi_offset 7, -8
 3756              		.cfi_offset 14, -4
 3757 0002 00AF     		add	r7, sp, #0
 3758              		.cfi_def_cfa_register 7
 869:.\main.c      ****         //disable RF
 870:.\main.c      ****         BIN_ENABLED = 0;
 3759              		.loc 1 870 0
 3760 0004 0B4B     		ldr	r3, .L216
 3761 0006 0022     		movs	r2, #0
 3762 0008 1A70     		strb	r2, [r3]
 871:.\main.c      ****         isrRF_RX_Stop();
 3763              		.loc 1 871 0
 3764 000a FFF7FEFF 		bl	isrRF_RX_Stop
 872:.\main.c      ****         UART_Stop();
 3765              		.loc 1 872 0
 3766 000e FFF7FEFF 		bl	UART_Stop
 873:.\main.c      ****         
 874:.\main.c      ****         //enable BT
 875:.\main.c      ****         BT_ENABLED = 1;
 3767              		.loc 1 875 0
 3768 0012 094B     		ldr	r3, .L216+4
 3769 0014 0122     		movs	r2, #1
 3770 0016 1A70     		strb	r2, [r3]
 876:.\main.c      ****         UART_clk_SetDividerValue(781);
 3771              		.loc 1 876 0
 3772 0018 4FF44370 		mov	r0, #780
 3773 001c 0121     		movs	r1, #1
 3774 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 877:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3775              		.loc 1 877 0
 3776 0022 0648     		ldr	r0, .L216+8
 3777 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 878:.\main.c      ****         UART_Start();
 3778              		.loc 1 878 0
 3779 0028 FFF7FEFF 		bl	UART_Start
 879:.\main.c      ****         RF_BT_SELECT_Write(1);
 3780              		.loc 1 879 0
 3781 002c 0120     		movs	r0, #1
 3782 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 880:.\main.c      **** }
 3783              		.loc 1 880 0
 3784 0032 80BD     		pop	{r7, pc}
 3785              	.L217:
 3786              		.align	2
 3787              	.L216:
 3788 0034 00000000 		.word	BIN_ENABLED
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 84


 3789 0038 00000000 		.word	BT_ENABLED
 3790 003c 00000000 		.word	BT_rxInt
 3791              		.cfi_endproc
 3792              	.LFE95:
 3793              		.size	changeToBT, .-changeToBT
 3794              		.section	.text.Quad_Dec_response,"ax",%progbits
 3795              		.align	2
 3796              		.global	Quad_Dec_response
 3797              		.thumb
 3798              		.thumb_func
 3799              		.type	Quad_Dec_response, %function
 3800              	Quad_Dec_response:
 3801              	.LFB96:
 881:.\main.c      **** 
 882:.\main.c      **** 
 883:.\main.c      **** void Quad_Dec_response()
 884:.\main.c      **** {
 3802              		.loc 1 884 0
 3803              		.cfi_startproc
 3804              		@ args = 0, pretend = 0, frame = 32
 3805              		@ frame_needed = 1, uses_anonymous_args = 0
 3806 0000 B0B5     		push	{r4, r5, r7, lr}
 3807              		.cfi_def_cfa_offset 16
 3808              		.cfi_offset 4, -16
 3809              		.cfi_offset 5, -12
 3810              		.cfi_offset 7, -8
 3811              		.cfi_offset 14, -4
 3812 0002 88B0     		sub	sp, sp, #32
 3813              		.cfi_def_cfa_offset 48
 3814 0004 00AF     		add	r7, sp, #0
 3815              		.cfi_def_cfa_register 7
 885:.\main.c      ****     //Check if the flag has been set
 886:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 3816              		.loc 1 886 0
 3817 0006 824B     		ldr	r3, .L226
 3818 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3819 000a 002B     		cmp	r3, #0
 3820 000c 00D1     		bne	.L219
 3821 000e FCE0     		b	.L218
 3822              	.L219:
 887:.\main.c      ****     flag_calc_wheelspeed = 0;
 3823              		.loc 1 887 0
 3824 0010 7F4B     		ldr	r3, .L226
 3825 0012 0022     		movs	r2, #0
 3826 0014 1A70     		strb	r2, [r3]
 888:.\main.c      ****     
 889:.\main.c      ****     //char wheel_1_str [64];
 890:.\main.c      ****     //char wheel_2_str [64];
 891:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 892:.\main.c      ****     //usbPutString(wheel_1_str);
 893:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 894:.\main.c      ****     
 895:.\main.c      ****     //usbPutString(wheel_2_str);
 896:.\main.c      ****     
 897:.\main.c      ****     int16 leftSpeed = quad_diff1;
 3827              		.loc 1 897 0
 3828 0016 7F4B     		ldr	r3, .L226+4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 85


 3829 0018 1B88     		ldrh	r3, [r3]	@ movhi
 3830 001a FB81     		strh	r3, [r7, #14]	@ movhi
 898:.\main.c      ****     int16 rightSpeed = quad_diff2;
 3831              		.loc 1 898 0
 3832 001c 7E4B     		ldr	r3, .L226+8
 3833 001e 1B88     		ldrh	r3, [r3]	@ movhi
 3834 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 899:.\main.c      ****     double scalingLeft = 1;
 3835              		.loc 1 899 0
 3836 0022 4FF00002 		mov	r2, #0
 3837 0026 7D4B     		ldr	r3, .L226+12
 3838 0028 C7E90623 		strd	r2, [r7, #24]
 900:.\main.c      ****     double scalingRight = 1;
 3839              		.loc 1 900 0
 3840 002c 4FF00002 		mov	r2, #0
 3841 0030 7A4B     		ldr	r3, .L226+12
 3842 0032 C7E90423 		strd	r2, [r7, #16]
 901:.\main.c      ****     
 902:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 903:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 3843              		.loc 1 903 0
 3844 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 3845 003a 002B     		cmp	r3, #0
 3846 003c 0FD1     		bne	.L221
 3847              		.loc 1 903 0 is_stmt 0 discriminator 1
 3848 003e B7F90C30 		ldrsh	r3, [r7, #12]
 3849 0042 002B     		cmp	r3, #0
 3850 0044 0BD1     		bne	.L221
 904:.\main.c      ****        //leftSpeed = 3;
 905:.\main.c      ****         scalingLeft = 2;
 3851              		.loc 1 905 0 is_stmt 1
 3852 0046 4FF00002 		mov	r2, #0
 3853 004a 4FF08043 		mov	r3, #1073741824
 3854 004e C7E90623 		strd	r2, [r7, #24]
 906:.\main.c      ****         scalingRight = 2;
 3855              		.loc 1 906 0
 3856 0052 4FF00002 		mov	r2, #0
 3857 0056 4FF08043 		mov	r3, #1073741824
 3858 005a C7E90423 		strd	r2, [r7, #16]
 3859              	.L221:
 907:.\main.c      ****     }
 908:.\main.c      **** 
 909:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 3860              		.loc 1 909 0
 3861 005e 704B     		ldr	r3, .L226+16
 3862 0060 1B88     		ldrh	r3, [r3]
 3863 0062 1AB2     		sxth	r2, r3
 3864 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 3865 0068 002B     		cmp	r3, #0
 3866 006a B8BF     		it	lt
 3867 006c 5B42     		rsblt	r3, r3, #0
 3868 006e D31A     		subs	r3, r2, r3
 3869 0070 BB60     		str	r3, [r7, #8]
 910:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 3870              		.loc 1 910 0
 3871 0072 BB68     		ldr	r3, [r7, #8]
 3872 0074 83EAE372 		eor	r2, r3, r3, asr #31
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 86


 3873 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 3874 007c BB68     		ldr	r3, [r7, #8]
 3875 007e 92FBF3F3 		sdiv	r3, r2, r3
 3876 0082 1846     		mov	r0, r3
 3877 0084 FFF7FEFF 		bl	__aeabi_i2d
 3878 0088 0446     		mov	r4, r0
 3879 008a 0D46     		mov	r5, r1
 3880 008c BB68     		ldr	r3, [r7, #8]
 3881 008e 002B     		cmp	r3, #0
 3882 0090 B8BF     		it	lt
 3883 0092 5B42     		rsblt	r3, r3, #0
 3884 0094 1846     		mov	r0, r3
 3885 0096 FFF7FEFF 		bl	__aeabi_i2d
 3886 009a 0246     		mov	r2, r0
 3887 009c 0B46     		mov	r3, r1
 3888 009e 1046     		mov	r0, r2
 3889 00a0 1946     		mov	r1, r3
 3890 00a2 FFF7FEFF 		bl	sqrt
 3891 00a6 0246     		mov	r2, r0
 3892 00a8 0B46     		mov	r3, r1
 3893 00aa 2046     		mov	r0, r4
 3894 00ac 2946     		mov	r1, r5
 3895 00ae FFF7FEFF 		bl	__aeabi_dmul
 3896 00b2 0246     		mov	r2, r0
 3897 00b4 0B46     		mov	r3, r1
 3898 00b6 1046     		mov	r0, r2
 3899 00b8 1946     		mov	r1, r3
 3900 00ba FFF7FEFF 		bl	__aeabi_d2iz
 3901 00be 0346     		mov	r3, r0
 3902 00c0 7B60     		str	r3, [r7, #4]
 911:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 3903              		.loc 1 911 0
 3904 00c2 584B     		ldr	r3, .L226+20
 3905 00c4 1B88     		ldrh	r3, [r3]
 3906 00c6 1BB2     		sxth	r3, r3
 3907 00c8 1846     		mov	r0, r3
 3908 00ca FFF7FEFF 		bl	__aeabi_i2d
 3909 00ce 0446     		mov	r4, r0
 3910 00d0 0D46     		mov	r5, r1
 3911 00d2 7868     		ldr	r0, [r7, #4]
 3912 00d4 FFF7FEFF 		bl	__aeabi_i2d
 3913 00d8 0246     		mov	r2, r0
 3914 00da 0B46     		mov	r3, r1
 3915 00dc 1046     		mov	r0, r2
 3916 00de 1946     		mov	r1, r3
 3917 00e0 D7E90623 		ldrd	r2, [r7, #24]
 3918 00e4 FFF7FEFF 		bl	__aeabi_dmul
 3919 00e8 0246     		mov	r2, r0
 3920 00ea 0B46     		mov	r3, r1
 3921 00ec 2046     		mov	r0, r4
 3922 00ee 2946     		mov	r1, r5
 3923 00f0 FFF7FEFF 		bl	__aeabi_dadd
 3924 00f4 0246     		mov	r2, r0
 3925 00f6 0B46     		mov	r3, r1
 3926 00f8 1046     		mov	r0, r2
 3927 00fa 1946     		mov	r1, r3
 3928 00fc FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 87


 3929 0100 0346     		mov	r3, r0
 3930 0102 9AB2     		uxth	r2, r3
 3931 0104 474B     		ldr	r3, .L226+20
 3932 0106 1A80     		strh	r2, [r3]	@ movhi
 912:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 3933              		.loc 1 912 0
 3934 0108 474B     		ldr	r3, .L226+24
 3935 010a 1B88     		ldrh	r3, [r3]
 3936 010c 1AB2     		sxth	r2, r3
 3937 010e B7F90C30 		ldrsh	r3, [r7, #12]
 3938 0112 002B     		cmp	r3, #0
 3939 0114 B8BF     		it	lt
 3940 0116 5B42     		rsblt	r3, r3, #0
 3941 0118 D31A     		subs	r3, r2, r3
 3942 011a BB60     		str	r3, [r7, #8]
 913:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 3943              		.loc 1 913 0
 3944 011c BB68     		ldr	r3, [r7, #8]
 3945 011e 83EAE372 		eor	r2, r3, r3, asr #31
 3946 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 3947 0126 BB68     		ldr	r3, [r7, #8]
 3948 0128 92FBF3F3 		sdiv	r3, r2, r3
 3949 012c 1846     		mov	r0, r3
 3950 012e FFF7FEFF 		bl	__aeabi_i2d
 3951 0132 0446     		mov	r4, r0
 3952 0134 0D46     		mov	r5, r1
 3953 0136 BB68     		ldr	r3, [r7, #8]
 3954 0138 002B     		cmp	r3, #0
 3955 013a B8BF     		it	lt
 3956 013c 5B42     		rsblt	r3, r3, #0
 3957 013e 1846     		mov	r0, r3
 3958 0140 FFF7FEFF 		bl	__aeabi_i2d
 3959 0144 0246     		mov	r2, r0
 3960 0146 0B46     		mov	r3, r1
 3961 0148 1046     		mov	r0, r2
 3962 014a 1946     		mov	r1, r3
 3963 014c FFF7FEFF 		bl	sqrt
 3964 0150 0246     		mov	r2, r0
 3965 0152 0B46     		mov	r3, r1
 3966 0154 2046     		mov	r0, r4
 3967 0156 2946     		mov	r1, r5
 3968 0158 FFF7FEFF 		bl	__aeabi_dmul
 3969 015c 0246     		mov	r2, r0
 3970 015e 0B46     		mov	r3, r1
 3971 0160 1046     		mov	r0, r2
 3972 0162 1946     		mov	r1, r3
 3973 0164 FFF7FEFF 		bl	__aeabi_d2iz
 3974 0168 0346     		mov	r3, r0
 3975 016a 7B60     		str	r3, [r7, #4]
 914:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 3976              		.loc 1 914 0
 3977 016c 2F4B     		ldr	r3, .L226+28
 3978 016e 1B88     		ldrh	r3, [r3]
 3979 0170 1BB2     		sxth	r3, r3
 3980 0172 1846     		mov	r0, r3
 3981 0174 FFF7FEFF 		bl	__aeabi_i2d
 3982 0178 0446     		mov	r4, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 88


 3983 017a 0D46     		mov	r5, r1
 3984 017c 7868     		ldr	r0, [r7, #4]
 3985 017e FFF7FEFF 		bl	__aeabi_i2d
 3986 0182 0246     		mov	r2, r0
 3987 0184 0B46     		mov	r3, r1
 3988 0186 1046     		mov	r0, r2
 3989 0188 1946     		mov	r1, r3
 3990 018a D7E90423 		ldrd	r2, [r7, #16]
 3991 018e FFF7FEFF 		bl	__aeabi_dmul
 3992 0192 0246     		mov	r2, r0
 3993 0194 0B46     		mov	r3, r1
 3994 0196 2046     		mov	r0, r4
 3995 0198 2946     		mov	r1, r5
 3996 019a FFF7FEFF 		bl	__aeabi_dadd
 3997 019e 0246     		mov	r2, r0
 3998 01a0 0B46     		mov	r3, r1
 3999 01a2 1046     		mov	r0, r2
 4000 01a4 1946     		mov	r1, r3
 4001 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4002 01aa 0346     		mov	r3, r0
 4003 01ac 9AB2     		uxth	r2, r3
 4004 01ae 1F4B     		ldr	r3, .L226+28
 4005 01b0 1A80     		strh	r2, [r3]	@ movhi
 915:.\main.c      ****     
 916:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4006              		.loc 1 916 0
 4007 01b2 1E4B     		ldr	r3, .L226+28
 4008 01b4 1B88     		ldrh	r3, [r3]
 4009 01b6 1BB2     		sxth	r3, r3
 4010 01b8 002B     		cmp	r3, #0
 4011 01ba 02DA     		bge	.L222
 4012              		.loc 1 916 0 is_stmt 0 discriminator 1
 4013 01bc 1B4B     		ldr	r3, .L226+28
 4014 01be 0022     		movs	r2, #0
 4015 01c0 1A80     		strh	r2, [r3]	@ movhi
 4016              	.L222:
 917:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4017              		.loc 1 917 0 is_stmt 1
 4018 01c2 184B     		ldr	r3, .L226+20
 4019 01c4 1B88     		ldrh	r3, [r3]
 4020 01c6 1BB2     		sxth	r3, r3
 4021 01c8 002B     		cmp	r3, #0
 4022 01ca 02DA     		bge	.L223
 4023              		.loc 1 917 0 is_stmt 0 discriminator 1
 4024 01cc 154B     		ldr	r3, .L226+20
 4025 01ce 0022     		movs	r2, #0
 4026 01d0 1A80     		strh	r2, [r3]	@ movhi
 4027              	.L223:
 918:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4028              		.loc 1 918 0 is_stmt 1
 4029 01d2 164B     		ldr	r3, .L226+28
 4030 01d4 1B88     		ldrh	r3, [r3]
 4031 01d6 1BB2     		sxth	r3, r3
 4032 01d8 642B     		cmp	r3, #100
 4033 01da 02DD     		ble	.L224
 4034              		.loc 1 918 0 is_stmt 0 discriminator 1
 4035 01dc 134B     		ldr	r3, .L226+28
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 89


 4036 01de 6422     		movs	r2, #100
 4037 01e0 1A80     		strh	r2, [r3]	@ movhi
 4038              	.L224:
 919:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4039              		.loc 1 919 0 is_stmt 1
 4040 01e2 104B     		ldr	r3, .L226+20
 4041 01e4 1B88     		ldrh	r3, [r3]
 4042 01e6 1BB2     		sxth	r3, r3
 4043 01e8 642B     		cmp	r3, #100
 4044 01ea 02DD     		ble	.L225
 4045              		.loc 1 919 0 is_stmt 0 discriminator 1
 4046 01ec 0D4B     		ldr	r3, .L226+20
 4047 01ee 6422     		movs	r2, #100
 4048 01f0 1A80     		strh	r2, [r3]	@ movhi
 4049              	.L225:
 920:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4050              		.loc 1 920 0 is_stmt 1
 4051 01f2 0C4B     		ldr	r3, .L226+20
 4052 01f4 1B88     		ldrh	r3, [r3]
 4053 01f6 DBB2     		uxtb	r3, r3
 4054 01f8 1846     		mov	r0, r3
 4055 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 921:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4056              		.loc 1 921 0
 4057 01fe 0B4B     		ldr	r3, .L226+28
 4058 0200 1B88     		ldrh	r3, [r3]
 4059 0202 DBB2     		uxtb	r3, r3
 4060 0204 1846     		mov	r0, r3
 4061 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4062              	.L218:
 922:.\main.c      **** }
 4063              		.loc 1 922 0
 4064 020a 2037     		adds	r7, r7, #32
 4065              		.cfi_def_cfa_offset 16
 4066 020c BD46     		mov	sp, r7
 4067              		.cfi_def_cfa_register 13
 4068              		@ sp needed
 4069 020e B0BD     		pop	{r4, r5, r7, pc}
 4070              	.L227:
 4071              		.align	2
 4072              	.L226:
 4073 0210 00000000 		.word	flag_calc_wheelspeed
 4074 0214 00000000 		.word	quad_diff1
 4075 0218 00000000 		.word	quad_diff2
 4076 021c 0000F03F 		.word	1072693248
 4077 0220 00000000 		.word	leftSpeedLimit
 4078 0224 00000000 		.word	left_duty_cycle
 4079 0228 00000000 		.word	rightSpeedLimit
 4080 022c 00000000 		.word	right_duty_cycle
 4081              		.cfi_endproc
 4082              	.LFE96:
 4083              		.size	Quad_Dec_response, .-Quad_Dec_response
 4084              		.section	.text.trackLine,"ax",%progbits
 4085              		.align	2
 4086              		.global	trackLine
 4087              		.thumb
 4088              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 90


 4089              		.type	trackLine, %function
 4090              	trackLine:
 4091              	.LFB97:
 923:.\main.c      **** 
 924:.\main.c      **** void trackLine()
 925:.\main.c      **** {
 4092              		.loc 1 925 0
 4093              		.cfi_startproc
 4094              		@ args = 0, pretend = 0, frame = 0
 4095              		@ frame_needed = 1, uses_anonymous_args = 0
 4096              		@ link register save eliminated.
 4097 0000 80B4     		push	{r7}
 4098              		.cfi_def_cfa_offset 4
 4099              		.cfi_offset 7, -4
 4100 0002 00AF     		add	r7, sp, #0
 4101              		.cfi_def_cfa_register 7
 926:.\main.c      ****  //removed from implementation
 927:.\main.c      **** }
 4102              		.loc 1 927 0
 4103 0004 BD46     		mov	sp, r7
 4104              		.cfi_def_cfa_register 13
 4105              		@ sp needed
 4106 0006 5DF8047B 		ldr	r7, [sp], #4
 4107              		.cfi_restore 7
 4108              		.cfi_def_cfa_offset 0
 4109 000a 7047     		bx	lr
 4110              		.cfi_endproc
 4111              	.LFE97:
 4112              		.size	trackLine, .-trackLine
 4113              		.global	leftTurnCount
 4114              		.bss
 4115              		.align	1
 4116              		.type	leftTurnCount, %object
 4117              		.size	leftTurnCount, 2
 4118              	leftTurnCount:
 4119 28e8 0000     		.space	2
 4120              		.global	rightTurnCount
 4121              		.align	1
 4122              		.type	rightTurnCount, %object
 4123              		.size	rightTurnCount, 2
 4124              	rightTurnCount:
 4125 28ea 0000     		.space	2
 4126              		.section	.text.trackLineZ,"ax",%progbits
 4127              		.align	2
 4128              		.global	trackLineZ
 4129              		.thumb
 4130              		.thumb_func
 4131              		.type	trackLineZ, %function
 4132              	trackLineZ:
 4133              	.LFB98:
 928:.\main.c      **** uint16 leftTurnCount = 0;
 929:.\main.c      **** uint16 rightTurnCount = 0;
 930:.\main.c      **** void trackLineZ()
 931:.\main.c      **** {
 4134              		.loc 1 931 0
 4135              		.cfi_startproc
 4136              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 91


 4137              		@ frame_needed = 1, uses_anonymous_args = 0
 4138 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4139              		.cfi_def_cfa_offset 24
 4140              		.cfi_offset 4, -24
 4141              		.cfi_offset 5, -20
 4142              		.cfi_offset 7, -16
 4143              		.cfi_offset 8, -12
 4144              		.cfi_offset 9, -8
 4145              		.cfi_offset 14, -4
 4146 0004 82B0     		sub	sp, sp, #8
 4147              		.cfi_def_cfa_offset 32
 4148 0006 00AF     		add	r7, sp, #0
 4149              		.cfi_def_cfa_register 7
 932:.\main.c      ****     //read the value of the three central-front sensors
 933:.\main.c      ****     
 934:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4150              		.loc 1 934 0
 4151 0008 FFF7FEFF 		bl	NLSens_out_Read
 4152 000c 0346     		mov	r3, r0
 4153 000e FB71     		strb	r3, [r7, #7]
 935:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4154              		.loc 1 935 0
 4155 0010 FFF7FEFF 		bl	NRSens_out_Read
 4156 0014 0346     		mov	r3, r0
 4157 0016 BB71     		strb	r3, [r7, #6]
 936:.\main.c      ****     uint8 mid = MSens_out_Read();
 4158              		.loc 1 936 0
 4159 0018 FFF7FEFF 		bl	MSens_out_Read
 4160 001c 0346     		mov	r3, r0
 4161 001e 7B71     		strb	r3, [r7, #5]
 937:.\main.c      ****     
 938:.\main.c      ****         //if only the left one, hard left
 939:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4162              		.loc 1 939 0
 4163 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4164 0022 002B     		cmp	r3, #0
 4165 0024 27D0     		beq	.L230
 4166              		.loc 1 939 0 is_stmt 0 discriminator 1
 4167 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4168 0028 002B     		cmp	r3, #0
 4169 002a 24D1     		bne	.L230
 4170              		.loc 1 939 0 discriminator 2
 4171 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4172 002e 002B     		cmp	r3, #0
 4173 0030 21D1     		bne	.L230
 940:.\main.c      ****     {
 941:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4174              		.loc 1 941 0 is_stmt 1
 4175 0032 454B     		ldr	r3, .L235+8
 4176 0034 D3E90023 		ldrd	r2, [r3]
 4177 0038 1046     		mov	r0, r2
 4178 003a 1946     		mov	r1, r3
 4179 003c 40A3     		adr	r3, .L235
 4180 003e D3E90023 		ldrd	r2, [r3]
 4181 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4182 0046 0246     		mov	r2, r0
 4183 0048 0B46     		mov	r3, r1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 92


 4184 004a 1446     		mov	r4, r2
 4185 004c 1D46     		mov	r5, r3
 4186 004e 3E4B     		ldr	r3, .L235+8
 4187 0050 D3E90023 		ldrd	r2, [r3]
 4188 0054 9046     		mov	r8, r2
 4189 0056 83F00049 		eor	r9, r3, #-2147483648
 4190 005a 4046     		mov	r0, r8
 4191 005c 4946     		mov	r1, r9
 4192 005e 38A3     		adr	r3, .L235
 4193 0060 D3E90023 		ldrd	r2, [r3]
 4194 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4195 0068 0246     		mov	r2, r0
 4196 006a 0B46     		mov	r3, r1
 4197 006c 2046     		mov	r0, r4
 4198 006e 2946     		mov	r1, r5
 4199 0070 FFF7FEFF 		bl	setSpeed
 4200 0074 5FE0     		b	.L229
 4201              	.L230:
 942:.\main.c      ****     }
 943:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4202              		.loc 1 943 0
 4203 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4204 0078 002B     		cmp	r3, #0
 4205 007a 0ED0     		beq	.L232
 4206              		.loc 1 943 0 is_stmt 0 discriminator 1
 4207 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4208 007e 002B     		cmp	r3, #0
 4209 0080 0BD0     		beq	.L232
 4210              		.loc 1 943 0 discriminator 2
 4211 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4212 0084 002B     		cmp	r3, #0
 4213 0086 08D1     		bne	.L232
 944:.\main.c      ****     {
 945:.\main.c      ****         setSpeed(speed,speed);
 4214              		.loc 1 945 0 is_stmt 1
 4215 0088 2F4B     		ldr	r3, .L235+8
 4216 008a D3E90001 		ldrd	r0, [r3]
 4217 008e 2E4B     		ldr	r3, .L235+8
 4218 0090 D3E90023 		ldrd	r2, [r3]
 4219 0094 FFF7FEFF 		bl	setSpeed
 4220 0098 4DE0     		b	.L229
 4221              	.L232:
 946:.\main.c      ****     }
 947:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4222              		.loc 1 947 0
 4223 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4224 009c 002B     		cmp	r3, #0
 4225 009e 0ED0     		beq	.L233
 4226              		.loc 1 947 0 is_stmt 0 discriminator 1
 4227 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4228 00a2 002B     		cmp	r3, #0
 4229 00a4 0BD0     		beq	.L233
 4230              		.loc 1 947 0 discriminator 2
 4231 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4232 00a8 002B     		cmp	r3, #0
 4233 00aa 08D1     		bne	.L233
 948:.\main.c      ****     {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 93


 949:.\main.c      ****         setSpeed(speed ,speed);
 4234              		.loc 1 949 0 is_stmt 1
 4235 00ac 264B     		ldr	r3, .L235+8
 4236 00ae D3E90001 		ldrd	r0, [r3]
 4237 00b2 254B     		ldr	r3, .L235+8
 4238 00b4 D3E90023 		ldrd	r2, [r3]
 4239 00b8 FFF7FEFF 		bl	setSpeed
 4240 00bc 3BE0     		b	.L229
 4241              	.L233:
 950:.\main.c      ****     }
 951:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4242              		.loc 1 951 0
 4243 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4244 00c0 002B     		cmp	r3, #0
 4245 00c2 27D0     		beq	.L234
 4246              		.loc 1 951 0 is_stmt 0 discriminator 1
 4247 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4248 00c6 002B     		cmp	r3, #0
 4249 00c8 24D1     		bne	.L234
 4250              		.loc 1 951 0 discriminator 2
 4251 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4252 00cc 002B     		cmp	r3, #0
 4253 00ce 21D1     		bne	.L234
 952:.\main.c      ****     {
 953:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4254              		.loc 1 953 0 is_stmt 1
 4255 00d0 1D4B     		ldr	r3, .L235+8
 4256 00d2 D3E90023 		ldrd	r2, [r3]
 4257 00d6 1446     		mov	r4, r2
 4258 00d8 83F00045 		eor	r5, r3, #-2147483648
 4259 00dc 2046     		mov	r0, r4
 4260 00de 2946     		mov	r1, r5
 4261 00e0 17A3     		adr	r3, .L235
 4262 00e2 D3E90023 		ldrd	r2, [r3]
 4263 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4264 00ea 0246     		mov	r2, r0
 4265 00ec 0B46     		mov	r3, r1
 4266 00ee 1446     		mov	r4, r2
 4267 00f0 1D46     		mov	r5, r3
 4268 00f2 154B     		ldr	r3, .L235+8
 4269 00f4 D3E90023 		ldrd	r2, [r3]
 4270 00f8 1046     		mov	r0, r2
 4271 00fa 1946     		mov	r1, r3
 4272 00fc 10A3     		adr	r3, .L235
 4273 00fe D3E90023 		ldrd	r2, [r3]
 4274 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4275 0106 0246     		mov	r2, r0
 4276 0108 0B46     		mov	r3, r1
 4277 010a 2046     		mov	r0, r4
 4278 010c 2946     		mov	r1, r5
 4279 010e FFF7FEFF 		bl	setSpeed
 4280 0112 10E0     		b	.L229
 4281              	.L234:
 954:.\main.c      ****     }
 955:.\main.c      ****     else if (mid && !nr && !nl)
 4282              		.loc 1 955 0
 4283 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 94


 4284 0116 002B     		cmp	r3, #0
 4285 0118 0DD0     		beq	.L229
 4286              		.loc 1 955 0 is_stmt 0 discriminator 1
 4287 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4288 011c 002B     		cmp	r3, #0
 4289 011e 0AD1     		bne	.L229
 4290              		.loc 1 955 0 discriminator 2
 4291 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4292 0122 002B     		cmp	r3, #0
 4293 0124 07D1     		bne	.L229
 956:.\main.c      ****     {
 957:.\main.c      ****         setSpeed(speed,speed);
 4294              		.loc 1 957 0 is_stmt 1
 4295 0126 084B     		ldr	r3, .L235+8
 4296 0128 D3E90001 		ldrd	r0, [r3]
 4297 012c 064B     		ldr	r3, .L235+8
 4298 012e D3E90023 		ldrd	r2, [r3]
 4299 0132 FFF7FEFF 		bl	setSpeed
 4300              	.L229:
 958:.\main.c      ****     }
 959:.\main.c      **** }
 4301              		.loc 1 959 0
 4302 0136 0837     		adds	r7, r7, #8
 4303              		.cfi_def_cfa_offset 24
 4304 0138 BD46     		mov	sp, r7
 4305              		.cfi_def_cfa_register 13
 4306              		@ sp needed
 4307 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4308              	.L236:
 4309 013e 00BF     		.align	3
 4310              	.L235:
 4311 0140 9A999999 		.word	-1717986918
 4312 0144 9999F93F 		.word	1073322393
 4313 0148 00000000 		.word	speed
 4314              		.cfi_endproc
 4315              	.LFE98:
 4316              		.size	trackLineZ, .-trackLineZ
 4317 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4318              		.align	2
 4319              		.global	trackLineU
 4320              		.thumb
 4321              		.thumb_func
 4322              		.type	trackLineU, %function
 4323              	trackLineU:
 4324              	.LFB99:
 960:.\main.c      **** 
 961:.\main.c      **** 
 962:.\main.c      **** void trackLineU()
 963:.\main.c      **** { 
 4325              		.loc 1 963 0
 4326              		.cfi_startproc
 4327              		@ args = 0, pretend = 0, frame = 0
 4328              		@ frame_needed = 1, uses_anonymous_args = 0
 4329              		@ link register save eliminated.
 4330 0000 80B4     		push	{r7}
 4331              		.cfi_def_cfa_offset 4
 4332              		.cfi_offset 7, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 95


 4333 0002 00AF     		add	r7, sp, #0
 4334              		.cfi_def_cfa_register 7
 964:.\main.c      **** //removed from final implementation
 965:.\main.c      **** }
 4335              		.loc 1 965 0
 4336 0004 BD46     		mov	sp, r7
 4337              		.cfi_def_cfa_register 13
 4338              		@ sp needed
 4339 0006 5DF8047B 		ldr	r7, [sp], #4
 4340              		.cfi_restore 7
 4341              		.cfi_def_cfa_offset 0
 4342 000a 7047     		bx	lr
 4343              		.cfi_endproc
 4344              	.LFE99:
 4345              		.size	trackLineU, .-trackLineU
 4346              		.global	__aeabi_fadd
 4347              		.section	.rodata
 4348 00db 00       		.align	2
 4349              	.LC11:
 4350 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4350      65727920 
 4350      566F6C74 
 4350      6167653A 
 4350      2025646D 
 4351              		.section	.text.print_ADC,"ax",%progbits
 4352              		.align	2
 4353              		.global	print_ADC
 4354              		.thumb
 4355              		.thumb_func
 4356              		.type	print_ADC, %function
 4357              	print_ADC:
 4358              	.LFB100:
 966:.\main.c      **** 
 967:.\main.c      **** void print_ADC()
 968:.\main.c      **** {
 4359              		.loc 1 968 0
 4360              		.cfi_startproc
 4361              		@ args = 0, pretend = 0, frame = 24
 4362              		@ frame_needed = 1, uses_anonymous_args = 0
 4363 0000 80B5     		push	{r7, lr}
 4364              		.cfi_def_cfa_offset 8
 4365              		.cfi_offset 7, -8
 4366              		.cfi_offset 14, -4
 4367 0002 86B0     		sub	sp, sp, #24
 4368              		.cfi_def_cfa_offset 32
 4369 0004 00AF     		add	r7, sp, #0
 4370              		.cfi_def_cfa_register 7
 969:.\main.c      ****    //usbPutString("HII\n");
 970:.\main.c      ****     if(flag_receive_ADC == 1)
 4371              		.loc 1 970 0
 4372 0006 274B     		ldr	r3, .L241
 4373 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4374 000a 012B     		cmp	r3, #1
 4375 000c 46D1     		bne	.L238
 4376              	.LBB10:
 971:.\main.c      ****     {
 972:.\main.c      ****         //usbPutString("AAA\r\n");
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 96


 973:.\main.c      ****         flag_receive_ADC = 0;
 4377              		.loc 1 973 0
 4378 000e 254B     		ldr	r3, .L241
 4379 0010 0022     		movs	r2, #0
 4380 0012 1A70     		strb	r2, [r3]
 974:.\main.c      ****         
 975:.\main.c      ****        // int8 channel = ADC_
 976:.\main.c      ****         float scalingFactor = 0.972;
 4381              		.loc 1 976 0
 4382 0014 244B     		ldr	r3, .L241+4
 4383 0016 7B61     		str	r3, [r7, #20]	@ float
 977:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4384              		.loc 1 977 0
 4385 0018 244B     		ldr	r3, .L241+8
 4386 001a 1B88     		ldrh	r3, [r3]
 4387 001c 1BB2     		sxth	r3, r3
 4388 001e 41F28832 		movw	r2, #5000
 4389 0022 02FB03F3 		mul	r3, r2, r3
 4390 0026 002B     		cmp	r3, #0
 4391 0028 01DA     		bge	.L240
 4392 002a 03F6FF73 		addw	r3, r3, #4095
 4393              	.L240:
 4394 002e 1B13     		asrs	r3, r3, #12
 4395 0030 1846     		mov	r0, r3
 4396 0032 FFF7FEFF 		bl	__aeabi_i2f
 4397 0036 0346     		mov	r3, r0
 4398 0038 1846     		mov	r0, r3
 4399 003a 7969     		ldr	r1, [r7, #20]	@ float
 4400 003c FFF7FEFF 		bl	__aeabi_fmul
 4401 0040 0346     		mov	r3, r0
 4402 0042 1846     		mov	r0, r3
 4403 0044 1946     		mov	r1, r3
 4404 0046 FFF7FEFF 		bl	__aeabi_fadd
 4405 004a 0346     		mov	r3, r0
 4406 004c 1846     		mov	r0, r3
 4407 004e FFF7FEFF 		bl	__aeabi_f2iz
 4408 0052 0346     		mov	r3, r0
 4409 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 978:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4410              		.loc 1 978 0
 4411 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4412 005a 154B     		ldr	r3, .L241+12
 4413 005c 1B88     		ldrh	r3, [r3]
 4414 005e 1BB2     		sxth	r3, r3
 4415 0060 1A44     		add	r2, r2, r3
 4416 0062 144B     		ldr	r3, .L241+16
 4417 0064 1B88     		ldrh	r3, [r3]
 4418 0066 1BB2     		sxth	r3, r3
 4419 0068 1344     		add	r3, r3, r2
 4420 006a 134A     		ldr	r2, .L241+20
 4421 006c 82FB0312 		smull	r1, r2, r2, r3
 4422 0070 DB17     		asrs	r3, r3, #31
 4423 0072 D31A     		subs	r3, r2, r3
 4424 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 979:.\main.c      ****         prevVoltage2 = prevVoltage;
 4425              		.loc 1 979 0
 4426 0076 0E4B     		ldr	r3, .L241+12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 97


 4427 0078 1A88     		ldrh	r2, [r3]
 4428 007a 0E4B     		ldr	r3, .L241+16
 4429 007c 1A80     		strh	r2, [r3]	@ movhi
 980:.\main.c      ****         prevVoltage = converted_val;
 4430              		.loc 1 980 0
 4431 007e 0C4A     		ldr	r2, .L241+12
 4432 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4433 0082 1380     		strh	r3, [r2]	@ movhi
 981:.\main.c      ****         
 982:.\main.c      ****         char result_str[16];
 983:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4434              		.loc 1 983 0
 4435 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4436 0088 3A46     		mov	r2, r7
 4437 008a 1046     		mov	r0, r2
 4438 008c 0B49     		ldr	r1, .L241+24
 4439 008e 1A46     		mov	r2, r3
 4440 0090 FFF7FEFF 		bl	sprintf
 984:.\main.c      ****         
 985:.\main.c      ****         usbPutString(result_str);
 4441              		.loc 1 985 0
 4442 0094 3B46     		mov	r3, r7
 4443 0096 1846     		mov	r0, r3
 4444 0098 FFF7FEFF 		bl	usbPutString
 4445              	.L238:
 4446              	.LBE10:
 986:.\main.c      ****     }
 987:.\main.c      **** }
 4447              		.loc 1 987 0
 4448 009c 1837     		adds	r7, r7, #24
 4449              		.cfi_def_cfa_offset 8
 4450 009e BD46     		mov	sp, r7
 4451              		.cfi_def_cfa_register 13
 4452              		@ sp needed
 4453 00a0 80BD     		pop	{r7, pc}
 4454              	.L242:
 4455 00a2 00BF     		.align	2
 4456              	.L241:
 4457 00a4 00000000 		.word	flag_receive_ADC
 4458 00a8 FED4783F 		.word	1064883454
 4459 00ac 00000000 		.word	adc_result
 4460 00b0 00000000 		.word	prevVoltage
 4461 00b4 00000000 		.word	prevVoltage2
 4462 00b8 56555555 		.word	1431655766
 4463 00bc DC000000 		.word	.LC11
 4464              		.cfi_endproc
 4465              	.LFE100:
 4466              		.size	print_ADC, .-print_ADC
 4467              		.section	.rodata
 4468              		.align	2
 4469              	.LC12:
 4470 00f4 52535349 		.ascii	"RSSI:\000"
 4470      3A00
 4471 00fa 0000     		.align	2
 4472              	.LC13:
 4473 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4473      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 98


 4474 0101 000000   		.align	2
 4475              	.LC14:
 4476 0104 726F626F 		.ascii	"robot_x:\000"
 4476      745F783A 
 4476      00
 4477 010d 000000   		.align	2
 4478              	.LC15:
 4479 0110 726F626F 		.ascii	"robot_y:\000"
 4479      745F793A 
 4479      00
 4480 0119 000000   		.align	2
 4481              	.LC16:
 4482 011c 726F626F 		.ascii	"robot_dir:\000"
 4482      745F6469 
 4482      723A00
 4483 0127 00       		.section	.text.print_RF,"ax",%progbits
 4484              		.align	2
 4485              		.global	print_RF
 4486              		.thumb
 4487              		.thumb_func
 4488              		.type	print_RF, %function
 4489              	print_RF:
 4490              	.LFB101:
 988:.\main.c      **** 
 989:.\main.c      **** void print_RF()
 990:.\main.c      **** {
 4491              		.loc 1 990 0
 4492              		.cfi_startproc
 4493              		@ args = 0, pretend = 0, frame = 16
 4494              		@ frame_needed = 1, uses_anonymous_args = 0
 4495 0000 80B5     		push	{r7, lr}
 4496              		.cfi_def_cfa_offset 8
 4497              		.cfi_offset 7, -8
 4498              		.cfi_offset 14, -4
 4499 0002 84B0     		sub	sp, sp, #16
 4500              		.cfi_def_cfa_offset 24
 4501 0004 00AF     		add	r7, sp, #0
 4502              		.cfi_def_cfa_register 7
 991:.\main.c      ****     if(flag_print_rf == 1)
 4503              		.loc 1 991 0
 4504 0006 254B     		ldr	r3, .L245
 4505 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4506 000a 012B     		cmp	r3, #1
 4507 000c 42D1     		bne	.L243
 4508              	.LBB11:
 992:.\main.c      ****     {
 993:.\main.c      ****         char printString[16];
 994:.\main.c      ****         flag_print_rf = 0;
 4509              		.loc 1 994 0
 4510 000e 234B     		ldr	r3, .L245
 4511 0010 0022     		movs	r2, #0
 4512 0012 1A70     		strb	r2, [r3]
 995:.\main.c      ****         usbPutString("RSSI:");
 4513              		.loc 1 995 0
 4514 0014 2248     		ldr	r0, .L245+4
 4515 0016 FFF7FEFF 		bl	usbPutString
 996:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 99


 4516              		.loc 1 996 0
 4517 001a 224B     		ldr	r3, .L245+8
 4518 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4519 001e 5BB2     		sxtb	r3, r3
 4520 0020 3A46     		mov	r2, r7
 4521 0022 1046     		mov	r0, r2
 4522 0024 2049     		ldr	r1, .L245+12
 4523 0026 1A46     		mov	r2, r3
 4524 0028 FFF7FEFF 		bl	sprintf
 997:.\main.c      ****         usbPutString(printString);
 4525              		.loc 1 997 0
 4526 002c 3B46     		mov	r3, r7
 4527 002e 1846     		mov	r0, r3
 4528 0030 FFF7FEFF 		bl	usbPutString
 998:.\main.c      ****         usbPutString("robot_x:");
 4529              		.loc 1 998 0
 4530 0034 1D48     		ldr	r0, .L245+16
 4531 0036 FFF7FEFF 		bl	usbPutString
 999:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4532              		.loc 1 999 0
 4533 003a 1A4B     		ldr	r3, .L245+8
 4534 003c 5B88     		ldrh	r3, [r3, #2]
 4535 003e 1BB2     		sxth	r3, r3
 4536 0040 3A46     		mov	r2, r7
 4537 0042 1046     		mov	r0, r2
 4538 0044 1849     		ldr	r1, .L245+12
 4539 0046 1A46     		mov	r2, r3
 4540 0048 FFF7FEFF 		bl	sprintf
1000:.\main.c      ****         usbPutString(printString);
 4541              		.loc 1 1000 0
 4542 004c 3B46     		mov	r3, r7
 4543 004e 1846     		mov	r0, r3
 4544 0050 FFF7FEFF 		bl	usbPutString
1001:.\main.c      ****         usbPutString("robot_y:");
 4545              		.loc 1 1001 0
 4546 0054 1648     		ldr	r0, .L245+20
 4547 0056 FFF7FEFF 		bl	usbPutString
1002:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4548              		.loc 1 1002 0
 4549 005a 124B     		ldr	r3, .L245+8
 4550 005c 9B88     		ldrh	r3, [r3, #4]
 4551 005e 1BB2     		sxth	r3, r3
 4552 0060 3A46     		mov	r2, r7
 4553 0062 1046     		mov	r0, r2
 4554 0064 1049     		ldr	r1, .L245+12
 4555 0066 1A46     		mov	r2, r3
 4556 0068 FFF7FEFF 		bl	sprintf
1003:.\main.c      ****         usbPutString(printString);
 4557              		.loc 1 1003 0
 4558 006c 3B46     		mov	r3, r7
 4559 006e 1846     		mov	r0, r3
 4560 0070 FFF7FEFF 		bl	usbPutString
1004:.\main.c      ****         usbPutString("robot_dir:");
 4561              		.loc 1 1004 0
 4562 0074 0F48     		ldr	r0, .L245+24
 4563 0076 FFF7FEFF 		bl	usbPutString
1005:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 100


 4564              		.loc 1 1005 0
 4565 007a 0A4B     		ldr	r3, .L245+8
 4566 007c DB88     		ldrh	r3, [r3, #6]
 4567 007e 1BB2     		sxth	r3, r3
 4568 0080 3A46     		mov	r2, r7
 4569 0082 1046     		mov	r0, r2
 4570 0084 0849     		ldr	r1, .L245+12
 4571 0086 1A46     		mov	r2, r3
 4572 0088 FFF7FEFF 		bl	sprintf
1006:.\main.c      ****         usbPutString(printString);
 4573              		.loc 1 1006 0
 4574 008c 3B46     		mov	r3, r7
 4575 008e 1846     		mov	r0, r3
 4576 0090 FFF7FEFF 		bl	usbPutString
 4577              	.L243:
 4578              	.LBE11:
1007:.\main.c      ****     }
1008:.\main.c      **** }
 4579              		.loc 1 1008 0
 4580 0094 1037     		adds	r7, r7, #16
 4581              		.cfi_def_cfa_offset 8
 4582 0096 BD46     		mov	sp, r7
 4583              		.cfi_def_cfa_register 13
 4584              		@ sp needed
 4585 0098 80BD     		pop	{r7, pc}
 4586              	.L246:
 4587 009a 00BF     		.align	2
 4588              	.L245:
 4589 009c 00000000 		.word	flag_print_rf
 4590 00a0 F4000000 		.word	.LC12
 4591 00a4 00000000 		.word	system_state
 4592 00a8 FC000000 		.word	.LC13
 4593 00ac 04010000 		.word	.LC14
 4594 00b0 10010000 		.word	.LC15
 4595 00b4 1C010000 		.word	.LC16
 4596              		.cfi_endproc
 4597              	.LFE101:
 4598              		.size	print_RF, .-print_RF
 4599              		.section	.text.readFrontSensors,"ax",%progbits
 4600              		.align	2
 4601              		.global	readFrontSensors
 4602              		.thumb
 4603              		.thumb_func
 4604              		.type	readFrontSensors, %function
 4605              	readFrontSensors:
 4606              	.LFB102:
1009:.\main.c      **** 
1010:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1011:.\main.c      **** {
 4607              		.loc 1 1011 0
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 8
 4610              		@ frame_needed = 1, uses_anonymous_args = 0
 4611 0000 90B5     		push	{r4, r7, lr}
 4612              		.cfi_def_cfa_offset 12
 4613              		.cfi_offset 4, -12
 4614              		.cfi_offset 7, -8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 101


 4615              		.cfi_offset 14, -4
 4616 0002 83B0     		sub	sp, sp, #12
 4617              		.cfi_def_cfa_offset 24
 4618 0004 00AF     		add	r7, sp, #0
 4619              		.cfi_def_cfa_register 7
 4620 0006 7860     		str	r0, [r7, #4]
1012:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4621              		.loc 1 1012 0
 4622 0008 FFF7FEFF 		bl	FLSens_out_Read
 4623 000c 0346     		mov	r3, r0
 4624 000e 1A46     		mov	r2, r3
 4625 0010 7B68     		ldr	r3, [r7, #4]
 4626 0012 1A70     		strb	r2, [r3]
1013:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4627              		.loc 1 1013 0
 4628 0014 7B68     		ldr	r3, [r7, #4]
 4629 0016 5C1C     		adds	r4, r3, #1
 4630 0018 FFF7FEFF 		bl	NLSens_out_Read
 4631 001c 0346     		mov	r3, r0
 4632 001e 2370     		strb	r3, [r4]
1014:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4633              		.loc 1 1014 0
 4634 0020 7B68     		ldr	r3, [r7, #4]
 4635 0022 9C1C     		adds	r4, r3, #2
 4636 0024 FFF7FEFF 		bl	MSens_out_Read
 4637 0028 0346     		mov	r3, r0
 4638 002a 2370     		strb	r3, [r4]
1015:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4639              		.loc 1 1015 0
 4640 002c 7B68     		ldr	r3, [r7, #4]
 4641 002e DC1C     		adds	r4, r3, #3
 4642 0030 FFF7FEFF 		bl	NRSens_out_Read
 4643 0034 0346     		mov	r3, r0
 4644 0036 2370     		strb	r3, [r4]
1016:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4645              		.loc 1 1016 0
 4646 0038 7B68     		ldr	r3, [r7, #4]
 4647 003a 1C1D     		adds	r4, r3, #4
 4648 003c FFF7FEFF 		bl	FRSens_out_Read
 4649 0040 0346     		mov	r3, r0
 4650 0042 2370     		strb	r3, [r4]
1017:.\main.c      **** }
 4651              		.loc 1 1017 0
 4652 0044 0C37     		adds	r7, r7, #12
 4653              		.cfi_def_cfa_offset 12
 4654 0046 BD46     		mov	sp, r7
 4655              		.cfi_def_cfa_register 13
 4656              		@ sp needed
 4657 0048 90BD     		pop	{r4, r7, pc}
 4658              		.cfi_endproc
 4659              	.LFE102:
 4660              		.size	readFrontSensors, .-readFrontSensors
 4661 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4662              		.align	2
 4663              		.global	usbPutString
 4664              		.thumb
 4665              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 102


 4666              		.type	usbPutString, %function
 4667              	usbPutString:
 4668              	.LFB103:
1018:.\main.c      **** 
1019:.\main.c      **** 
1020:.\main.c      **** //* ========================================
1021:.\main.c      **** void usbPutString(char *s)
1022:.\main.c      **** {
 4669              		.loc 1 1022 0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 16
 4672              		@ frame_needed = 1, uses_anonymous_args = 0
 4673 0000 80B5     		push	{r7, lr}
 4674              		.cfi_def_cfa_offset 8
 4675              		.cfi_offset 7, -8
 4676              		.cfi_offset 14, -4
 4677 0002 84B0     		sub	sp, sp, #16
 4678              		.cfi_def_cfa_offset 24
 4679 0004 00AF     		add	r7, sp, #0
 4680              		.cfi_def_cfa_register 7
 4681 0006 7860     		str	r0, [r7, #4]
1023:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1024:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1025:.\main.c      **** //  length to 62 char (63rd char is a '!')
1026:.\main.c      ****     if (USE_USB && portOpen)
 4682              		.loc 1 1026 0
 4683 0008 154B     		ldr	r3, .L252
 4684 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4685 000c 002B     		cmp	r3, #0
 4686 000e 23D0     		beq	.L248
 4687              	.LBB12:
1027:.\main.c      ****     {
1028:.\main.c      ****             uint32 cnt = 0;
 4688              		.loc 1 1028 0
 4689 0010 0023     		movs	r3, #0
 4690 0012 FB60     		str	r3, [r7, #12]
1029:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4691              		.loc 1 1029 0
 4692 0014 0AE0     		b	.L250
 4693              	.L251:
1030:.\main.c      ****             {
1031:.\main.c      ****                 cnt++;
 4694              		.loc 1 1031 0
 4695 0016 FB68     		ldr	r3, [r7, #12]
 4696 0018 0133     		adds	r3, r3, #1
 4697 001a FB60     		str	r3, [r7, #12]
1032:.\main.c      ****                 if(cnt == 3000000){
 4698              		.loc 1 1032 0
 4699 001c FB68     		ldr	r3, [r7, #12]
 4700 001e 114A     		ldr	r2, .L252+4
 4701 0020 9342     		cmp	r3, r2
 4702 0022 03D1     		bne	.L250
1033:.\main.c      ****                     portOpen = 0;
 4703              		.loc 1 1033 0
 4704 0024 0E4B     		ldr	r3, .L252
 4705 0026 0022     		movs	r2, #0
 4706 0028 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 103


1034:.\main.c      ****                     return;
 4707              		.loc 1 1034 0
 4708 002a 15E0     		b	.L248
 4709              	.L250:
1029:.\main.c      ****             {
 4710              		.loc 1 1029 0
 4711 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4712 0030 0346     		mov	r3, r0
 4713 0032 002B     		cmp	r3, #0
 4714 0034 EFD0     		beq	.L251
1035:.\main.c      ****                 }
1036:.\main.c      ****             }
1037:.\main.c      ****             s[63]='\0';
 4715              		.loc 1 1037 0
 4716 0036 7B68     		ldr	r3, [r7, #4]
 4717 0038 3F33     		adds	r3, r3, #63
 4718 003a 0022     		movs	r2, #0
 4719 003c 1A70     		strb	r2, [r3]
1038:.\main.c      ****             s[62]='!';
 4720              		.loc 1 1038 0
 4721 003e 7B68     		ldr	r3, [r7, #4]
 4722 0040 3E33     		adds	r3, r3, #62
 4723 0042 2122     		movs	r2, #33
 4724 0044 1A70     		strb	r2, [r3]
1039:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4725              		.loc 1 1039 0
 4726 0046 7868     		ldr	r0, [r7, #4]
 4727 0048 FFF7FEFF 		bl	strlen
 4728 004c 0346     		mov	r3, r0
 4729 004e 9BB2     		uxth	r3, r3
 4730 0050 7868     		ldr	r0, [r7, #4]
 4731 0052 1946     		mov	r1, r3
 4732 0054 FFF7FEFF 		bl	USBUART_PutData
 4733              	.L248:
 4734              	.LBE12:
1040:.\main.c      ****     }
1041:.\main.c      **** }
 4735              		.loc 1 1041 0
 4736 0058 1037     		adds	r7, r7, #16
 4737              		.cfi_def_cfa_offset 8
 4738 005a BD46     		mov	sp, r7
 4739              		.cfi_def_cfa_register 13
 4740              		@ sp needed
 4741 005c 80BD     		pop	{r7, pc}
 4742              	.L253:
 4743 005e 00BF     		.align	2
 4744              	.L252:
 4745 0060 00000000 		.word	portOpen
 4746 0064 C0C62D00 		.word	3000000
 4747              		.cfi_endproc
 4748              	.LFE103:
 4749              		.size	usbPutString, .-usbPutString
 4750              		.section	.text.usbPutChar,"ax",%progbits
 4751              		.align	2
 4752              		.global	usbPutChar
 4753              		.thumb
 4754              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 104


 4755              		.type	usbPutChar, %function
 4756              	usbPutChar:
 4757              	.LFB104:
1042:.\main.c      **** //* ========================================
1043:.\main.c      **** void usbPutChar(char c)
1044:.\main.c      **** {
 4758              		.loc 1 1044 0
 4759              		.cfi_startproc
 4760              		@ args = 0, pretend = 0, frame = 16
 4761              		@ frame_needed = 1, uses_anonymous_args = 0
 4762 0000 80B5     		push	{r7, lr}
 4763              		.cfi_def_cfa_offset 8
 4764              		.cfi_offset 7, -8
 4765              		.cfi_offset 14, -4
 4766 0002 84B0     		sub	sp, sp, #16
 4767              		.cfi_def_cfa_offset 24
 4768 0004 00AF     		add	r7, sp, #0
 4769              		.cfi_def_cfa_register 7
 4770 0006 0346     		mov	r3, r0
 4771 0008 FB71     		strb	r3, [r7, #7]
1045:.\main.c      ****     if (USE_USB && portOpen)    
 4772              		.loc 1 1045 0
 4773 000a 0F4B     		ldr	r3, .L258
 4774 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4775 000e 002B     		cmp	r3, #0
 4776 0010 16D0     		beq	.L254
 4777              	.LBB13:
1046:.\main.c      ****     {    
1047:.\main.c      ****         uint32 cnt = 0;
 4778              		.loc 1 1047 0
 4779 0012 0023     		movs	r3, #0
 4780 0014 FB60     		str	r3, [r7, #12]
1048:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4781              		.loc 1 1048 0
 4782 0016 0AE0     		b	.L256
 4783              	.L257:
1049:.\main.c      ****             cnt++;
 4784              		.loc 1 1049 0
 4785 0018 FB68     		ldr	r3, [r7, #12]
 4786 001a 0133     		adds	r3, r3, #1
 4787 001c FB60     		str	r3, [r7, #12]
1050:.\main.c      ****             if(cnt == 3000000){
 4788              		.loc 1 1050 0
 4789 001e FB68     		ldr	r3, [r7, #12]
 4790 0020 0A4A     		ldr	r2, .L258+4
 4791 0022 9342     		cmp	r3, r2
 4792 0024 03D1     		bne	.L256
1051:.\main.c      ****                 portOpen = 0;
 4793              		.loc 1 1051 0
 4794 0026 084B     		ldr	r3, .L258
 4795 0028 0022     		movs	r2, #0
 4796 002a 1A70     		strb	r2, [r3]
1052:.\main.c      ****                 return;
 4797              		.loc 1 1052 0
 4798 002c 08E0     		b	.L254
 4799              	.L256:
1048:.\main.c      ****             cnt++;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 105


 4800              		.loc 1 1048 0
 4801 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4802 0032 0346     		mov	r3, r0
 4803 0034 002B     		cmp	r3, #0
 4804 0036 EFD0     		beq	.L257
1053:.\main.c      ****             }
1054:.\main.c      ****         }
1055:.\main.c      ****         USBUART_PutChar(c);
 4805              		.loc 1 1055 0
 4806 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4807 003a 1846     		mov	r0, r3
 4808 003c FFF7FEFF 		bl	USBUART_PutChar
 4809              	.L254:
 4810              	.LBE13:
1056:.\main.c      ****     }    
1057:.\main.c      **** }
 4811              		.loc 1 1057 0
 4812 0040 1037     		adds	r7, r7, #16
 4813              		.cfi_def_cfa_offset 8
 4814 0042 BD46     		mov	sp, r7
 4815              		.cfi_def_cfa_register 13
 4816              		@ sp needed
 4817 0044 80BD     		pop	{r7, pc}
 4818              	.L259:
 4819 0046 00BF     		.align	2
 4820              	.L258:
 4821 0048 00000000 		.word	portOpen
 4822 004c C0C62D00 		.word	3000000
 4823              		.cfi_endproc
 4824              	.LFE104:
 4825              		.size	usbPutChar, .-usbPutChar
 4826              		.section	.text.uart_set_PWM,"ax",%progbits
 4827              		.align	2
 4828              		.global	uart_set_PWM
 4829              		.thumb
 4830              		.thumb_func
 4831              		.type	uart_set_PWM, %function
 4832              	uart_set_PWM:
 4833              	.LFB105:
1058:.\main.c      **** //* ========================================
1059:.\main.c      **** 
1060:.\main.c      **** void uart_set_PWM()
1061:.\main.c      **** {
 4834              		.loc 1 1061 0
 4835              		.cfi_startproc
 4836              		@ args = 0, pretend = 0, frame = 0
 4837              		@ frame_needed = 1, uses_anonymous_args = 0
 4838              		@ link register save eliminated.
 4839 0000 80B4     		push	{r7}
 4840              		.cfi_def_cfa_offset 4
 4841              		.cfi_offset 7, -4
 4842 0002 00AF     		add	r7, sp, #0
 4843              		.cfi_def_cfa_register 7
1062:.\main.c      ****     //removed from final implementation
1063:.\main.c      **** }
 4844              		.loc 1 1063 0
 4845 0004 BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 106


 4846              		.cfi_def_cfa_register 13
 4847              		@ sp needed
 4848 0006 5DF8047B 		ldr	r7, [sp], #4
 4849              		.cfi_restore 7
 4850              		.cfi_def_cfa_offset 0
 4851 000a 7047     		bx	lr
 4852              		.cfi_endproc
 4853              	.LFE105:
 4854              		.size	uart_set_PWM, .-uart_set_PWM
 4855              		.text
 4856              	.Letext0:
 4857              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4858              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4859              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4860              		.file 5 ".\\vars.h"
 4861              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4862              		.file 7 ".\\pathfinder.h"
 4863              		.section	.debug_info,"",%progbits
 4864              	.Ldebug_info0:
 4865 0000 1C0E0000 		.4byte	0xe1c
 4866 0004 0400     		.2byte	0x4
 4867 0006 00000000 		.4byte	.Ldebug_abbrev0
 4868 000a 04       		.byte	0x4
 4869 000b 01       		.uleb128 0x1
 4870 000c 9B040000 		.4byte	.LASF195
 4871 0010 01       		.byte	0x1
 4872 0011 79090000 		.4byte	.LASF196
 4873 0015 1C000000 		.4byte	.LASF197
 4874 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4875 001d 00000000 		.4byte	0
 4876 0021 00000000 		.4byte	.Ldebug_line0
 4877 0025 02       		.uleb128 0x2
 4878 0026 01       		.byte	0x1
 4879 0027 06       		.byte	0x6
 4880 0028 B3080000 		.4byte	.LASF0
 4881 002c 02       		.uleb128 0x2
 4882 002d 01       		.byte	0x1
 4883 002e 08       		.byte	0x8
 4884 002f F0070000 		.4byte	.LASF1
 4885 0033 02       		.uleb128 0x2
 4886 0034 02       		.byte	0x2
 4887 0035 05       		.byte	0x5
 4888 0036 51060000 		.4byte	.LASF2
 4889 003a 02       		.uleb128 0x2
 4890 003b 02       		.byte	0x2
 4891 003c 07       		.byte	0x7
 4892 003d BF080000 		.4byte	.LASF3
 4893 0041 03       		.uleb128 0x3
 4894 0042 D7000000 		.4byte	.LASF5
 4895 0046 02       		.byte	0x2
 4896 0047 3F       		.byte	0x3f
 4897 0048 4C000000 		.4byte	0x4c
 4898 004c 02       		.uleb128 0x2
 4899 004d 04       		.byte	0x4
 4900 004e 05       		.byte	0x5
 4901 004f 85060000 		.4byte	.LASF4
 4902 0053 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 107


 4903 0054 FE070000 		.4byte	.LASF6
 4904 0058 02       		.byte	0x2
 4905 0059 41       		.byte	0x41
 4906 005a 5E000000 		.4byte	0x5e
 4907 005e 02       		.uleb128 0x2
 4908 005f 04       		.byte	0x4
 4909 0060 07       		.byte	0x7
 4910 0061 89070000 		.4byte	.LASF7
 4911 0065 02       		.uleb128 0x2
 4912 0066 08       		.byte	0x8
 4913 0067 05       		.byte	0x5
 4914 0068 65040000 		.4byte	.LASF8
 4915 006c 02       		.uleb128 0x2
 4916 006d 08       		.byte	0x8
 4917 006e 07       		.byte	0x7
 4918 006f 7E020000 		.4byte	.LASF9
 4919 0073 04       		.uleb128 0x4
 4920 0074 04       		.byte	0x4
 4921 0075 05       		.byte	0x5
 4922 0076 696E7400 		.ascii	"int\000"
 4923 007a 02       		.uleb128 0x2
 4924 007b 04       		.byte	0x4
 4925 007c 07       		.byte	0x7
 4926 007d BF000000 		.4byte	.LASF10
 4927 0081 02       		.uleb128 0x2
 4928 0082 04       		.byte	0x4
 4929 0083 07       		.byte	0x7
 4930 0084 80070000 		.4byte	.LASF11
 4931 0088 05       		.uleb128 0x5
 4932 0089 04       		.byte	0x4
 4933 008a 8E000000 		.4byte	0x8e
 4934 008e 02       		.uleb128 0x2
 4935 008f 01       		.byte	0x1
 4936 0090 08       		.byte	0x8
 4937 0091 AD030000 		.4byte	.LASF12
 4938 0095 03       		.uleb128 0x3
 4939 0096 A7070000 		.4byte	.LASF13
 4940 009a 03       		.byte	0x3
 4941 009b 2C       		.byte	0x2c
 4942 009c 41000000 		.4byte	0x41
 4943 00a0 03       		.uleb128 0x3
 4944 00a1 FE010000 		.4byte	.LASF14
 4945 00a5 03       		.byte	0x3
 4946 00a6 2D       		.byte	0x2d
 4947 00a7 53000000 		.4byte	0x53
 4948 00ab 06       		.uleb128 0x6
 4949 00ac 06090000 		.4byte	.LASF15
 4950 00b0 04       		.byte	0x4
 4951 00b1 9201     		.2byte	0x192
 4952 00b3 2C000000 		.4byte	0x2c
 4953 00b7 06       		.uleb128 0x6
 4954 00b8 F5030000 		.4byte	.LASF16
 4955 00bc 04       		.byte	0x4
 4956 00bd 9301     		.2byte	0x193
 4957 00bf 3A000000 		.4byte	0x3a
 4958 00c3 06       		.uleb128 0x6
 4959 00c4 6C050000 		.4byte	.LASF17
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 108


 4960 00c8 04       		.byte	0x4
 4961 00c9 9401     		.2byte	0x194
 4962 00cb 5E000000 		.4byte	0x5e
 4963 00cf 06       		.uleb128 0x6
 4964 00d0 FC030000 		.4byte	.LASF18
 4965 00d4 04       		.byte	0x4
 4966 00d5 9501     		.2byte	0x195
 4967 00d7 25000000 		.4byte	0x25
 4968 00db 06       		.uleb128 0x6
 4969 00dc E1000000 		.4byte	.LASF19
 4970 00e0 04       		.byte	0x4
 4971 00e1 9601     		.2byte	0x196
 4972 00e3 33000000 		.4byte	0x33
 4973 00e7 02       		.uleb128 0x2
 4974 00e8 04       		.byte	0x4
 4975 00e9 04       		.byte	0x4
 4976 00ea 1E020000 		.4byte	.LASF20
 4977 00ee 02       		.uleb128 0x2
 4978 00ef 08       		.byte	0x8
 4979 00f0 04       		.byte	0x4
 4980 00f1 0C090000 		.4byte	.LASF21
 4981 00f5 07       		.uleb128 0x7
 4982 00f6 A0000000 		.4byte	0xa0
 4983 00fa 05010000 		.4byte	0x105
 4984 00fe 08       		.uleb128 0x8
 4985 00ff 81000000 		.4byte	0x81
 4986 0103 01       		.byte	0x1
 4987 0104 00       		.byte	0
 4988 0105 02       		.uleb128 0x2
 4989 0106 08       		.byte	0x8
 4990 0107 04       		.byte	0x4
 4991 0108 E8050000 		.4byte	.LASF22
 4992 010c 09       		.uleb128 0x9
 4993 010d 4B080000 		.4byte	.LASF31
 4994 0111 01       		.byte	0x1
 4995 0112 05       		.byte	0x5
 4996 0113 5D       		.byte	0x5d
 4997 0114 49010000 		.4byte	0x149
 4998 0118 0A       		.uleb128 0xa
 4999 0119 3D020000 		.4byte	.LASF23
 5000 011d 00       		.sleb128 0
 5001 011e 0A       		.uleb128 0xa
 5002 011f F4000000 		.4byte	.LASF24
 5003 0123 01       		.sleb128 1
 5004 0124 0A       		.uleb128 0xa
 5005 0125 5B000000 		.4byte	.LASF25
 5006 0129 02       		.sleb128 2
 5007 012a 0A       		.uleb128 0xa
 5008 012b D7050000 		.4byte	.LASF26
 5009 012f 03       		.sleb128 3
 5010 0130 0A       		.uleb128 0xa
 5011 0131 0F010000 		.4byte	.LASF27
 5012 0135 04       		.sleb128 4
 5013 0136 0A       		.uleb128 0xa
 5014 0137 E7010000 		.4byte	.LASF28
 5015 013b 05       		.sleb128 5
 5016 013c 0A       		.uleb128 0xa
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 109


 5017 013d FB060000 		.4byte	.LASF29
 5018 0141 06       		.sleb128 6
 5019 0142 0A       		.uleb128 0xa
 5020 0143 46090000 		.4byte	.LASF30
 5021 0147 07       		.sleb128 7
 5022 0148 00       		.byte	0
 5023 0149 09       		.uleb128 0x9
 5024 014a 4A010000 		.4byte	.LASF32
 5025 014e 01       		.byte	0x1
 5026 014f 05       		.byte	0x5
 5027 0150 5E       		.byte	0x5e
 5028 0151 86010000 		.4byte	0x186
 5029 0155 0A       		.uleb128 0xa
 5030 0156 CD060000 		.4byte	.LASF33
 5031 015a 00       		.sleb128 0
 5032 015b 0A       		.uleb128 0xa
 5033 015c 2C040000 		.4byte	.LASF34
 5034 0160 01       		.sleb128 1
 5035 0161 0A       		.uleb128 0xa
 5036 0162 9C060000 		.4byte	.LASF35
 5037 0166 02       		.sleb128 2
 5038 0167 0A       		.uleb128 0xa
 5039 0168 A1010000 		.4byte	.LASF36
 5040 016c 03       		.sleb128 3
 5041 016d 0A       		.uleb128 0xa
 5042 016e E4080000 		.4byte	.LASF37
 5043 0172 04       		.sleb128 4
 5044 0173 0A       		.uleb128 0xa
 5045 0174 24090000 		.4byte	.LASF38
 5046 0178 05       		.sleb128 5
 5047 0179 0A       		.uleb128 0xa
 5048 017a 70000000 		.4byte	.LASF39
 5049 017e 06       		.sleb128 6
 5050 017f 0A       		.uleb128 0xa
 5051 0180 EE060000 		.4byte	.LASF40
 5052 0184 07       		.sleb128 7
 5053 0185 00       		.byte	0
 5054 0186 0B       		.uleb128 0xb
 5055 0187 8C050000 		.4byte	.LASF198
 5056 018b 20       		.byte	0x20
 5057 018c 05       		.byte	0x5
 5058 018d 64       		.byte	0x64
 5059 018e 5F020000 		.4byte	0x25f
 5060 0192 0C       		.uleb128 0xc
 5061 0193 AA050000 		.4byte	.LASF41
 5062 0197 05       		.byte	0x5
 5063 0198 65       		.byte	0x65
 5064 0199 CF000000 		.4byte	0xcf
 5065 019d 00       		.byte	0
 5066 019e 0C       		.uleb128 0xc
 5067 019f 37020000 		.4byte	.LASF42
 5068 01a3 05       		.byte	0x5
 5069 01a4 66       		.byte	0x66
 5070 01a5 AB000000 		.4byte	0xab
 5071 01a9 01       		.byte	0x1
 5072 01aa 0C       		.uleb128 0xc
 5073 01ab C8070000 		.4byte	.LASF43
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 110


 5074 01af 05       		.byte	0x5
 5075 01b0 67       		.byte	0x67
 5076 01b1 DB000000 		.4byte	0xdb
 5077 01b5 02       		.byte	0x2
 5078 01b6 0C       		.uleb128 0xc
 5079 01b7 81030000 		.4byte	.LASF44
 5080 01bb 05       		.byte	0x5
 5081 01bc 68       		.byte	0x68
 5082 01bd DB000000 		.4byte	0xdb
 5083 01c1 04       		.byte	0x4
 5084 01c2 0C       		.uleb128 0xc
 5085 01c3 D2080000 		.4byte	.LASF45
 5086 01c7 05       		.byte	0x5
 5087 01c8 69       		.byte	0x69
 5088 01c9 DB000000 		.4byte	0xdb
 5089 01cd 06       		.byte	0x6
 5090 01ce 0C       		.uleb128 0xc
 5091 01cf 4C090000 		.4byte	.LASF46
 5092 01d3 05       		.byte	0x5
 5093 01d4 6A       		.byte	0x6a
 5094 01d5 DB000000 		.4byte	0xdb
 5095 01d9 08       		.byte	0x8
 5096 01da 0C       		.uleb128 0xc
 5097 01db 32050000 		.4byte	.LASF47
 5098 01df 05       		.byte	0x5
 5099 01e0 6B       		.byte	0x6b
 5100 01e1 DB000000 		.4byte	0xdb
 5101 01e5 0A       		.byte	0xa
 5102 01e6 0C       		.uleb128 0xc
 5103 01e7 B2030000 		.4byte	.LASF48
 5104 01eb 05       		.byte	0x5
 5105 01ec 6C       		.byte	0x6c
 5106 01ed DB000000 		.4byte	0xdb
 5107 01f1 0C       		.byte	0xc
 5108 01f2 0C       		.uleb128 0xc
 5109 01f3 B9050000 		.4byte	.LASF49
 5110 01f7 05       		.byte	0x5
 5111 01f8 6D       		.byte	0x6d
 5112 01f9 DB000000 		.4byte	0xdb
 5113 01fd 0E       		.byte	0xe
 5114 01fe 0C       		.uleb128 0xc
 5115 01ff 80040000 		.4byte	.LASF50
 5116 0203 05       		.byte	0x5
 5117 0204 6E       		.byte	0x6e
 5118 0205 DB000000 		.4byte	0xdb
 5119 0209 10       		.byte	0x10
 5120 020a 0C       		.uleb128 0xc
 5121 020b 40070000 		.4byte	.LASF51
 5122 020f 05       		.byte	0x5
 5123 0210 6F       		.byte	0x6f
 5124 0211 DB000000 		.4byte	0xdb
 5125 0215 12       		.byte	0x12
 5126 0216 0C       		.uleb128 0xc
 5127 0217 70090000 		.4byte	.LASF52
 5128 021b 05       		.byte	0x5
 5129 021c 70       		.byte	0x70
 5130 021d DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 111


 5131 0221 14       		.byte	0x14
 5132 0222 0C       		.uleb128 0xc
 5133 0223 0E040000 		.4byte	.LASF53
 5134 0227 05       		.byte	0x5
 5135 0228 71       		.byte	0x71
 5136 0229 DB000000 		.4byte	0xdb
 5137 022d 16       		.byte	0x16
 5138 022e 0C       		.uleb128 0xc
 5139 022f 42010000 		.4byte	.LASF54
 5140 0233 05       		.byte	0x5
 5141 0234 72       		.byte	0x72
 5142 0235 DB000000 		.4byte	0xdb
 5143 0239 18       		.byte	0x18
 5144 023a 0C       		.uleb128 0xc
 5145 023b ED030000 		.4byte	.LASF55
 5146 023f 05       		.byte	0x5
 5147 0240 73       		.byte	0x73
 5148 0241 DB000000 		.4byte	0xdb
 5149 0245 1A       		.byte	0x1a
 5150 0246 0C       		.uleb128 0xc
 5151 0247 29050000 		.4byte	.LASF56
 5152 024b 05       		.byte	0x5
 5153 024c 74       		.byte	0x74
 5154 024d DB000000 		.4byte	0xdb
 5155 0251 1C       		.byte	0x1c
 5156 0252 0C       		.uleb128 0xc
 5157 0253 07020000 		.4byte	.LASF57
 5158 0257 05       		.byte	0x5
 5159 0258 75       		.byte	0x75
 5160 0259 DB000000 		.4byte	0xdb
 5161 025d 1E       		.byte	0x1e
 5162 025e 00       		.byte	0
 5163 025f 0D       		.uleb128 0xd
 5164 0260 F3080000 		.4byte	.LASF58
 5165 0264 01       		.byte	0x1
 5166 0265 5A       		.byte	0x5a
 5167 0266 00000000 		.4byte	.LFB63
 5168 026a 0C000000 		.4byte	.LFE63-.LFB63
 5169 026e 01       		.uleb128 0x1
 5170 026f 9C       		.byte	0x9c
 5171 0270 0E       		.uleb128 0xe
 5172 0271 48070000 		.4byte	.LASF59
 5173 0275 01       		.byte	0x1
 5174 0276 60       		.byte	0x60
 5175 0277 00000000 		.4byte	.LFB64
 5176 027b 2C000000 		.4byte	.LFE64-.LFB64
 5177 027f 01       		.uleb128 0x1
 5178 0280 9C       		.byte	0x9c
 5179 0281 0E       		.uleb128 0xe
 5180 0282 14020000 		.4byte	.LASF60
 5181 0286 01       		.byte	0x1
 5182 0287 69       		.byte	0x69
 5183 0288 00000000 		.4byte	.LFB65
 5184 028c A4010000 		.4byte	.LFE65-.LFB65
 5185 0290 01       		.uleb128 0x1
 5186 0291 9C       		.byte	0x9c
 5187 0292 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 112


 5188 0293 AE020000 		.4byte	.LASF61
 5189 0297 01       		.byte	0x1
 5190 0298 A1       		.byte	0xa1
 5191 0299 00000000 		.4byte	.LFB66
 5192 029d AC000000 		.4byte	.LFE66-.LFB66
 5193 02a1 01       		.uleb128 0x1
 5194 02a2 9C       		.byte	0x9c
 5195 02a3 0D       		.uleb128 0xd
 5196 02a4 1D080000 		.4byte	.LASF62
 5197 02a8 01       		.byte	0x1
 5198 02a9 C4       		.byte	0xc4
 5199 02aa 00000000 		.4byte	.LFB67
 5200 02ae 20000000 		.4byte	.LFE67-.LFB67
 5201 02b2 01       		.uleb128 0x1
 5202 02b3 9C       		.byte	0x9c
 5203 02b4 0E       		.uleb128 0xe
 5204 02b5 34030000 		.4byte	.LASF63
 5205 02b9 01       		.byte	0x1
 5206 02ba CB       		.byte	0xcb
 5207 02bb 00000000 		.4byte	.LFB68
 5208 02bf 28000000 		.4byte	.LFE68-.LFB68
 5209 02c3 01       		.uleb128 0x1
 5210 02c4 9C       		.byte	0x9c
 5211 02c5 0E       		.uleb128 0xe
 5212 02c6 F4050000 		.4byte	.LASF64
 5213 02ca 01       		.byte	0x1
 5214 02cb D4       		.byte	0xd4
 5215 02cc 00000000 		.4byte	.LFB69
 5216 02d0 0A000000 		.4byte	.LFE69-.LFB69
 5217 02d4 01       		.uleb128 0x1
 5218 02d5 9C       		.byte	0x9c
 5219 02d6 0E       		.uleb128 0xe
 5220 02d7 11060000 		.4byte	.LASF65
 5221 02db 01       		.byte	0x1
 5222 02dc D9       		.byte	0xd9
 5223 02dd 00000000 		.4byte	.LFB70
 5224 02e1 28000000 		.4byte	.LFE70-.LFB70
 5225 02e5 01       		.uleb128 0x1
 5226 02e6 9C       		.byte	0x9c
 5227 02e7 0F       		.uleb128 0xf
 5228 02e8 EE080000 		.4byte	.LASF73
 5229 02ec 01       		.byte	0x1
 5230 02ed E4       		.byte	0xe4
 5231 02ee 73000000 		.4byte	0x73
 5232 02f2 00000000 		.4byte	.LFB71
 5233 02f6 60060000 		.4byte	.LFE71-.LFB71
 5234 02fa 01       		.uleb128 0x1
 5235 02fb 9C       		.byte	0x9c
 5236 02fc CD030000 		.4byte	0x3cd
 5237 0300 10       		.uleb128 0x10
 5238 0301 25030000 		.4byte	.LASF66
 5239 0305 01       		.byte	0x1
 5240 0306 1D01     		.2byte	0x11d
 5241 0308 B7000000 		.4byte	0xb7
 5242 030c 02       		.uleb128 0x2
 5243 030d 91       		.byte	0x91
 5244 030e 76       		.sleb128 -10
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 113


 5245 030f 11       		.uleb128 0x11
 5246 0310 66000000 		.4byte	.LBB2
 5247 0314 F8050000 		.4byte	.LBE2-.LBB2
 5248 0318 10       		.uleb128 0x10
 5249 0319 A1020000 		.4byte	.LASF67
 5250 031d 01       		.byte	0x1
 5251 031e 2B01     		.2byte	0x12b
 5252 0320 CD030000 		.4byte	0x3cd
 5253 0324 02       		.uleb128 0x2
 5254 0325 91       		.byte	0x91
 5255 0326 6C       		.sleb128 -20
 5256 0327 11       		.uleb128 0x11
 5257 0328 3C010000 		.4byte	.LBB3
 5258 032c 84040000 		.4byte	.LBE3-.LBB3
 5259 0330 10       		.uleb128 0x10
 5260 0331 92040000 		.4byte	.LASF68
 5261 0335 01       		.byte	0x1
 5262 0336 5501     		.2byte	0x155
 5263 0338 8E000000 		.4byte	0x8e
 5264 033c 02       		.uleb128 0x2
 5265 033d 91       		.byte	0x91
 5266 033e 75       		.sleb128 -11
 5267 033f 12       		.uleb128 0x12
 5268 0340 88010000 		.4byte	.LBB4
 5269 0344 D0010000 		.4byte	.LBE4-.LBB4
 5270 0348 75030000 		.4byte	0x375
 5271 034c 13       		.uleb128 0x13
 5272 034d 6D657300 		.ascii	"mes\000"
 5273 0351 01       		.byte	0x1
 5274 0352 5C01     		.2byte	0x15c
 5275 0354 DD030000 		.4byte	0x3dd
 5276 0358 02       		.uleb128 0x2
 5277 0359 91       		.byte	0x91
 5278 035a 5C       		.sleb128 -36
 5279 035b 11       		.uleb128 0x11
 5280 035c B0010000 		.4byte	.LBB5
 5281 0360 A8010000 		.4byte	.LBE5-.LBB5
 5282 0364 10       		.uleb128 0x10
 5283 0365 01040000 		.4byte	.LASF69
 5284 0369 01       		.byte	0x1
 5285 036a 6D01     		.2byte	0x16d
 5286 036c AB000000 		.4byte	0xab
 5287 0370 02       		.uleb128 0x2
 5288 0371 91       		.byte	0x91
 5289 0372 74       		.sleb128 -12
 5290 0373 00       		.byte	0
 5291 0374 00       		.byte	0
 5292 0375 12       		.uleb128 0x12
 5293 0376 AC030000 		.4byte	.LBB6
 5294 037a AC000000 		.4byte	.LBE6-.LBB6
 5295 037e A1030000 		.4byte	0x3a1
 5296 0382 13       		.uleb128 0x13
 5297 0383 6D657300 		.ascii	"mes\000"
 5298 0387 01       		.byte	0x1
 5299 0388 A501     		.2byte	0x1a5
 5300 038a DD030000 		.4byte	0x3dd
 5301 038e 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 114


 5302 038f 91       		.byte	0x91
 5303 0390 4C       		.sleb128 -52
 5304 0391 10       		.uleb128 0x10
 5305 0392 01040000 		.4byte	.LASF69
 5306 0396 01       		.byte	0x1
 5307 0397 A901     		.2byte	0x1a9
 5308 0399 AB000000 		.4byte	0xab
 5309 039d 02       		.uleb128 0x2
 5310 039e 91       		.byte	0x91
 5311 039f 73       		.sleb128 -13
 5312 03a0 00       		.byte	0
 5313 03a1 11       		.uleb128 0x11
 5314 03a2 70040000 		.4byte	.LBB7
 5315 03a6 46010000 		.4byte	.LBE7-.LBB7
 5316 03aa 13       		.uleb128 0x13
 5317 03ab 6D657300 		.ascii	"mes\000"
 5318 03af 01       		.byte	0x1
 5319 03b0 C301     		.2byte	0x1c3
 5320 03b2 DD030000 		.4byte	0x3dd
 5321 03b6 03       		.uleb128 0x3
 5322 03b7 91       		.byte	0x91
 5323 03b8 BC7F     		.sleb128 -68
 5324 03ba 10       		.uleb128 0x10
 5325 03bb 01040000 		.4byte	.LASF69
 5326 03bf 01       		.byte	0x1
 5327 03c0 C701     		.2byte	0x1c7
 5328 03c2 AB000000 		.4byte	0xab
 5329 03c6 02       		.uleb128 0x2
 5330 03c7 91       		.byte	0x91
 5331 03c8 72       		.sleb128 -14
 5332 03c9 00       		.byte	0
 5333 03ca 00       		.byte	0
 5334 03cb 00       		.byte	0
 5335 03cc 00       		.byte	0
 5336 03cd 07       		.uleb128 0x7
 5337 03ce AB000000 		.4byte	0xab
 5338 03d2 DD030000 		.4byte	0x3dd
 5339 03d6 08       		.uleb128 0x8
 5340 03d7 81000000 		.4byte	0x81
 5341 03db 04       		.byte	0x4
 5342 03dc 00       		.byte	0
 5343 03dd 07       		.uleb128 0x7
 5344 03de 8E000000 		.4byte	0x8e
 5345 03e2 ED030000 		.4byte	0x3ed
 5346 03e6 08       		.uleb128 0x8
 5347 03e7 81000000 		.4byte	0x81
 5348 03eb 0F       		.byte	0xf
 5349 03ec 00       		.byte	0
 5350 03ed 14       		.uleb128 0x14
 5351 03ee 2C090000 		.4byte	.LASF76
 5352 03f2 01       		.byte	0x1
 5353 03f3 1E02     		.2byte	0x21e
 5354 03f5 00000000 		.4byte	.LFB72
 5355 03f9 60010000 		.4byte	.LFE72-.LFB72
 5356 03fd 01       		.uleb128 0x1
 5357 03fe 9C       		.byte	0x9c
 5358 03ff 3B040000 		.4byte	0x43b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 115


 5359 0403 11       		.uleb128 0x11
 5360 0404 10000000 		.4byte	.LBB8
 5361 0408 34010000 		.4byte	.LBE8-.LBB8
 5362 040c 10       		.uleb128 0x10
 5363 040d 35010000 		.4byte	.LASF70
 5364 0411 01       		.byte	0x1
 5365 0412 2402     		.2byte	0x224
 5366 0414 B7000000 		.4byte	0xb7
 5367 0418 02       		.uleb128 0x2
 5368 0419 91       		.byte	0x91
 5369 041a 76       		.sleb128 -10
 5370 041b 10       		.uleb128 0x10
 5371 041c 9B070000 		.4byte	.LASF71
 5372 0420 01       		.byte	0x1
 5373 0421 2502     		.2byte	0x225
 5374 0423 3B040000 		.4byte	0x43b
 5375 0427 02       		.uleb128 0x2
 5376 0428 91       		.byte	0x91
 5377 0429 68       		.sleb128 -24
 5378 042a 10       		.uleb128 0x10
 5379 042b 43020000 		.4byte	.LASF72
 5380 042f 01       		.byte	0x1
 5381 0430 2602     		.2byte	0x226
 5382 0432 3B040000 		.4byte	0x43b
 5383 0436 02       		.uleb128 0x2
 5384 0437 91       		.byte	0x91
 5385 0438 5C       		.sleb128 -36
 5386 0439 00       		.byte	0
 5387 043a 00       		.byte	0
 5388 043b 07       		.uleb128 0x7
 5389 043c 8E000000 		.4byte	0x8e
 5390 0440 4B040000 		.4byte	0x44b
 5391 0444 08       		.uleb128 0x8
 5392 0445 81000000 		.4byte	0x81
 5393 0449 0B       		.byte	0xb
 5394 044a 00       		.byte	0
 5395 044b 15       		.uleb128 0x15
 5396 044c CB030000 		.4byte	.LASF74
 5397 0450 01       		.byte	0x1
 5398 0451 5F02     		.2byte	0x25f
 5399 0453 00000000 		.4byte	.LFB73
 5400 0457 18000000 		.4byte	.LFE73-.LFB73
 5401 045b 01       		.uleb128 0x1
 5402 045c 9C       		.byte	0x9c
 5403 045d 71040000 		.4byte	0x471
 5404 0461 16       		.uleb128 0x16
 5405 0462 64697200 		.ascii	"dir\000"
 5406 0466 01       		.byte	0x1
 5407 0467 5F02     		.2byte	0x25f
 5408 0469 AB000000 		.4byte	0xab
 5409 046d 02       		.uleb128 0x2
 5410 046e 91       		.byte	0x91
 5411 046f 77       		.sleb128 -9
 5412 0470 00       		.byte	0
 5413 0471 15       		.uleb128 0x15
 5414 0472 20040000 		.4byte	.LASF75
 5415 0476 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 116


 5416 0477 6402     		.2byte	0x264
 5417 0479 00000000 		.4byte	.LFB74
 5418 047d 18000000 		.4byte	.LFE74-.LFB74
 5419 0481 01       		.uleb128 0x1
 5420 0482 9C       		.byte	0x9c
 5421 0483 97040000 		.4byte	0x497
 5422 0487 16       		.uleb128 0x16
 5423 0488 64697200 		.ascii	"dir\000"
 5424 048c 01       		.byte	0x1
 5425 048d 6402     		.2byte	0x264
 5426 048f AB000000 		.4byte	0xab
 5427 0493 02       		.uleb128 0x2
 5428 0494 91       		.byte	0x91
 5429 0495 77       		.sleb128 -9
 5430 0496 00       		.byte	0
 5431 0497 17       		.uleb128 0x17
 5432 0498 51080000 		.4byte	.LASF77
 5433 049c 01       		.byte	0x1
 5434 049d 6902     		.2byte	0x269
 5435 049f 00000000 		.4byte	.LFB75
 5436 04a3 54000000 		.4byte	.LFE75-.LFB75
 5437 04a7 01       		.uleb128 0x1
 5438 04a8 9C       		.byte	0x9c
 5439 04a9 BD040000 		.4byte	0x4bd
 5440 04ad 13       		.uleb128 0x13
 5441 04ae 6D657300 		.ascii	"mes\000"
 5442 04b2 01       		.byte	0x1
 5443 04b3 6E02     		.2byte	0x26e
 5444 04b5 DD030000 		.4byte	0x3dd
 5445 04b9 02       		.uleb128 0x2
 5446 04ba 91       		.byte	0x91
 5447 04bb 68       		.sleb128 -24
 5448 04bc 00       		.byte	0
 5449 04bd 15       		.uleb128 0x15
 5450 04be 24020000 		.4byte	.LASF78
 5451 04c2 01       		.byte	0x1
 5452 04c3 7302     		.2byte	0x273
 5453 04c5 00000000 		.4byte	.LFB76
 5454 04c9 F4000000 		.4byte	.LFE76-.LFB76
 5455 04cd 01       		.uleb128 0x1
 5456 04ce 9C       		.byte	0x9c
 5457 04cf 10050000 		.4byte	0x510
 5458 04d3 18       		.uleb128 0x18
 5459 04d4 19070000 		.4byte	.LASF79
 5460 04d8 01       		.byte	0x1
 5461 04d9 7302     		.2byte	0x273
 5462 04db EE000000 		.4byte	0xee
 5463 04df 02       		.uleb128 0x2
 5464 04e0 91       		.byte	0x91
 5465 04e1 68       		.sleb128 -24
 5466 04e2 18       		.uleb128 0x18
 5467 04e3 4D040000 		.4byte	.LASF80
 5468 04e7 01       		.byte	0x1
 5469 04e8 7302     		.2byte	0x273
 5470 04ea EE000000 		.4byte	0xee
 5471 04ee 02       		.uleb128 0x2
 5472 04ef 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 117


 5473 04f0 60       		.sleb128 -32
 5474 04f1 10       		.uleb128 0x10
 5475 04f2 5C020000 		.4byte	.LASF81
 5476 04f6 01       		.byte	0x1
 5477 04f7 8802     		.2byte	0x288
 5478 04f9 DB000000 		.4byte	0xdb
 5479 04fd 02       		.uleb128 0x2
 5480 04fe 91       		.byte	0x91
 5481 04ff 76       		.sleb128 -10
 5482 0500 10       		.uleb128 0x10
 5483 0501 80050000 		.4byte	.LASF82
 5484 0505 01       		.byte	0x1
 5485 0506 8902     		.2byte	0x289
 5486 0508 DB000000 		.4byte	0xdb
 5487 050c 02       		.uleb128 0x2
 5488 050d 91       		.byte	0x91
 5489 050e 74       		.sleb128 -12
 5490 050f 00       		.byte	0
 5491 0510 19       		.uleb128 0x19
 5492 0511 62080000 		.4byte	.LASF83
 5493 0515 01       		.byte	0x1
 5494 0516 8F02     		.2byte	0x28f
 5495 0518 00000000 		.4byte	.LFB77
 5496 051c 18000000 		.4byte	.LFE77-.LFB77
 5497 0520 01       		.uleb128 0x1
 5498 0521 9C       		.byte	0x9c
 5499 0522 19       		.uleb128 0x19
 5500 0523 90090000 		.4byte	.LASF84
 5501 0527 01       		.byte	0x1
 5502 0528 9502     		.2byte	0x295
 5503 052a 00000000 		.4byte	.LFB78
 5504 052e 18000000 		.4byte	.LFE78-.LFB78
 5505 0532 01       		.uleb128 0x1
 5506 0533 9C       		.byte	0x9c
 5507 0534 19       		.uleb128 0x19
 5508 0535 D3070000 		.4byte	.LASF85
 5509 0539 01       		.byte	0x1
 5510 053a 9B02     		.2byte	0x29b
 5511 053c 00000000 		.4byte	.LFB79
 5512 0540 22000000 		.4byte	.LFE79-.LFB79
 5513 0544 01       		.uleb128 0x1
 5514 0545 9C       		.byte	0x9c
 5515 0546 19       		.uleb128 0x19
 5516 0547 67020000 		.4byte	.LASF86
 5517 054b 01       		.byte	0x1
 5518 054c A102     		.2byte	0x2a1
 5519 054e 00000000 		.4byte	.LFB80
 5520 0552 1C000000 		.4byte	.LFE80-.LFB80
 5521 0556 01       		.uleb128 0x1
 5522 0557 9C       		.byte	0x9c
 5523 0558 19       		.uleb128 0x19
 5524 0559 36070000 		.4byte	.LASF87
 5525 055d 01       		.byte	0x1
 5526 055e A602     		.2byte	0x2a6
 5527 0560 00000000 		.4byte	.LFB81
 5528 0564 28000000 		.4byte	.LFE81-.LFB81
 5529 0568 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 118


 5530 0569 9C       		.byte	0x9c
 5531 056a 19       		.uleb128 0x19
 5532 056b 75020000 		.4byte	.LASF88
 5533 056f 01       		.byte	0x1
 5534 0570 AB02     		.2byte	0x2ab
 5535 0572 00000000 		.4byte	.LFB82
 5536 0576 2C000000 		.4byte	.LFE82-.LFB82
 5537 057a 01       		.uleb128 0x1
 5538 057b 9C       		.byte	0x9c
 5539 057c 19       		.uleb128 0x19
 5540 057d E7030000 		.4byte	.LASF89
 5541 0581 01       		.byte	0x1
 5542 0582 B002     		.2byte	0x2b0
 5543 0584 00000000 		.4byte	.LFB83
 5544 0588 44000000 		.4byte	.LFE83-.LFB83
 5545 058c 01       		.uleb128 0x1
 5546 058d 9C       		.byte	0x9c
 5547 058e 19       		.uleb128 0x19
 5548 058f C8020000 		.4byte	.LASF90
 5549 0593 01       		.byte	0x1
 5550 0594 B502     		.2byte	0x2b5
 5551 0596 00000000 		.4byte	.LFB84
 5552 059a 38000000 		.4byte	.LFE84-.LFB84
 5553 059e 01       		.uleb128 0x1
 5554 059f 9C       		.byte	0x9c
 5555 05a0 19       		.uleb128 0x19
 5556 05a1 8E060000 		.4byte	.LASF91
 5557 05a5 01       		.byte	0x1
 5558 05a6 BE02     		.2byte	0x2be
 5559 05a8 00000000 		.4byte	.LFB85
 5560 05ac 38000000 		.4byte	.LFE85-.LFB85
 5561 05b0 01       		.uleb128 0x1
 5562 05b1 9C       		.byte	0x9c
 5563 05b2 19       		.uleb128 0x19
 5564 05b3 66060000 		.4byte	.LASF92
 5565 05b7 01       		.byte	0x1
 5566 05b8 C702     		.2byte	0x2c7
 5567 05ba 00000000 		.4byte	.LFB86
 5568 05be 38000000 		.4byte	.LFE86-.LFB86
 5569 05c2 01       		.uleb128 0x1
 5570 05c3 9C       		.byte	0x9c
 5571 05c4 19       		.uleb128 0x19
 5572 05c5 F2010000 		.4byte	.LASF93
 5573 05c9 01       		.byte	0x1
 5574 05ca D002     		.2byte	0x2d0
 5575 05cc 00000000 		.4byte	.LFB87
 5576 05d0 14000000 		.4byte	.LFE87-.LFB87
 5577 05d4 01       		.uleb128 0x1
 5578 05d5 9C       		.byte	0x9c
 5579 05d6 1A       		.uleb128 0x1a
 5580 05d7 DE020000 		.4byte	.LASF94
 5581 05db 01       		.byte	0x1
 5582 05dc D502     		.2byte	0x2d5
 5583 05de 00000000 		.4byte	.LFB88
 5584 05e2 18000000 		.4byte	.LFE88-.LFB88
 5585 05e6 01       		.uleb128 0x1
 5586 05e7 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 119


 5587 05e8 1A       		.uleb128 0x1a
 5588 05e9 88040000 		.4byte	.LASF95
 5589 05ed 01       		.byte	0x1
 5590 05ee D902     		.2byte	0x2d9
 5591 05f0 00000000 		.4byte	.LFB89
 5592 05f4 18000000 		.4byte	.LFE89-.LFB89
 5593 05f8 01       		.uleb128 0x1
 5594 05f9 9C       		.byte	0x9c
 5595 05fa 1A       		.uleb128 0x1a
 5596 05fb 9B090000 		.4byte	.LASF96
 5597 05ff 01       		.byte	0x1
 5598 0600 DE02     		.2byte	0x2de
 5599 0602 00000000 		.4byte	.LFB90
 5600 0606 18000000 		.4byte	.LFE90-.LFB90
 5601 060a 01       		.uleb128 0x1
 5602 060b 9C       		.byte	0x9c
 5603 060c 1A       		.uleb128 0x1a
 5604 060d 72030000 		.4byte	.LASF97
 5605 0611 01       		.byte	0x1
 5606 0612 E202     		.2byte	0x2e2
 5607 0614 00000000 		.4byte	.LFB91
 5608 0618 18000000 		.4byte	.LFE91-.LFB91
 5609 061c 01       		.uleb128 0x1
 5610 061d 9C       		.byte	0x9c
 5611 061e 15       		.uleb128 0x15
 5612 061f BD060000 		.4byte	.LASF98
 5613 0623 01       		.byte	0x1
 5614 0624 E902     		.2byte	0x2e9
 5615 0626 00000000 		.4byte	.LFB92
 5616 062a B8000000 		.4byte	.LFE92-.LFB92
 5617 062e 01       		.uleb128 0x1
 5618 062f 9C       		.byte	0x9c
 5619 0630 44060000 		.4byte	0x644
 5620 0634 10       		.uleb128 0x10
 5621 0635 3A050000 		.4byte	.LASF99
 5622 0639 01       		.byte	0x1
 5623 063a EA02     		.2byte	0x2ea
 5624 063c 8E000000 		.4byte	0x8e
 5625 0640 02       		.uleb128 0x2
 5626 0641 91       		.byte	0x91
 5627 0642 6F       		.sleb128 -17
 5628 0643 00       		.byte	0
 5629 0644 15       		.uleb128 0x15
 5630 0645 DF050000 		.4byte	.LASF100
 5631 0649 01       		.byte	0x1
 5632 064a 0603     		.2byte	0x306
 5633 064c 00000000 		.4byte	.LFB93
 5634 0650 F8010000 		.4byte	.LFE93-.LFB93
 5635 0654 01       		.uleb128 0x1
 5636 0655 9C       		.byte	0x9c
 5637 0656 90060000 		.4byte	0x690
 5638 065a 10       		.uleb128 0x10
 5639 065b 3A050000 		.4byte	.LASF99
 5640 065f 01       		.byte	0x1
 5641 0660 0803     		.2byte	0x308
 5642 0662 8E000000 		.4byte	0x8e
 5643 0666 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 120


 5644 0667 91       		.byte	0x91
 5645 0668 73       		.sleb128 -13
 5646 0669 11       		.uleb128 0x11
 5647 066a 88000000 		.4byte	.LBB9
 5648 066e 3A010000 		.4byte	.LBE9-.LBB9
 5649 0672 13       		.uleb128 0x13
 5650 0673 6D657300 		.ascii	"mes\000"
 5651 0677 01       		.byte	0x1
 5652 0678 2E03     		.2byte	0x32e
 5653 067a DD030000 		.4byte	0x3dd
 5654 067e 02       		.uleb128 0x2
 5655 067f 91       		.byte	0x91
 5656 0680 60       		.sleb128 -32
 5657 0681 13       		.uleb128 0x13
 5658 0682 6900     		.ascii	"i\000"
 5659 0684 01       		.byte	0x1
 5660 0685 4103     		.2byte	0x341
 5661 0687 73000000 		.4byte	0x73
 5662 068b 02       		.uleb128 0x2
 5663 068c 91       		.byte	0x91
 5664 068d 74       		.sleb128 -12
 5665 068e 00       		.byte	0
 5666 068f 00       		.byte	0
 5667 0690 19       		.uleb128 0x19
 5668 0691 BD020000 		.4byte	.LASF101
 5669 0695 01       		.byte	0x1
 5670 0696 5403     		.2byte	0x354
 5671 0698 00000000 		.4byte	.LFB94
 5672 069c 40000000 		.4byte	.LFE94-.LFB94
 5673 06a0 01       		.uleb128 0x1
 5674 06a1 9C       		.byte	0x9c
 5675 06a2 19       		.uleb128 0x19
 5676 06a3 51020000 		.4byte	.LASF102
 5677 06a7 01       		.byte	0x1
 5678 06a8 6303     		.2byte	0x363
 5679 06aa 00000000 		.4byte	.LFB95
 5680 06ae 40000000 		.4byte	.LFE95-.LFB95
 5681 06b2 01       		.uleb128 0x1
 5682 06b3 9C       		.byte	0x9c
 5683 06b4 17       		.uleb128 0x17
 5684 06b5 90000000 		.4byte	.LASF103
 5685 06b9 01       		.byte	0x1
 5686 06ba 7303     		.2byte	0x373
 5687 06bc 00000000 		.4byte	.LFB96
 5688 06c0 30020000 		.4byte	.LFE96-.LFB96
 5689 06c4 01       		.uleb128 0x1
 5690 06c5 9C       		.byte	0x9c
 5691 06c6 25070000 		.4byte	0x725
 5692 06ca 10       		.uleb128 0x10
 5693 06cb 05030000 		.4byte	.LASF104
 5694 06cf 01       		.byte	0x1
 5695 06d0 8103     		.2byte	0x381
 5696 06d2 DB000000 		.4byte	0xdb
 5697 06d6 02       		.uleb128 0x2
 5698 06d7 91       		.byte	0x91
 5699 06d8 5E       		.sleb128 -34
 5700 06d9 10       		.uleb128 0x10
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 121


 5701 06da 58050000 		.4byte	.LASF105
 5702 06de 01       		.byte	0x1
 5703 06df 8203     		.2byte	0x382
 5704 06e1 DB000000 		.4byte	0xdb
 5705 06e5 02       		.uleb128 0x2
 5706 06e6 91       		.byte	0x91
 5707 06e7 5C       		.sleb128 -36
 5708 06e8 10       		.uleb128 0x10
 5709 06e9 A1030000 		.4byte	.LASF106
 5710 06ed 01       		.byte	0x1
 5711 06ee 8303     		.2byte	0x383
 5712 06f0 EE000000 		.4byte	0xee
 5713 06f4 02       		.uleb128 0x2
 5714 06f5 91       		.byte	0x91
 5715 06f6 68       		.sleb128 -24
 5716 06f7 10       		.uleb128 0x10
 5717 06f8 54090000 		.4byte	.LASF107
 5718 06fc 01       		.byte	0x1
 5719 06fd 8403     		.2byte	0x384
 5720 06ff EE000000 		.4byte	0xee
 5721 0703 02       		.uleb128 0x2
 5722 0704 91       		.byte	0x91
 5723 0705 60       		.sleb128 -32
 5724 0706 10       		.uleb128 0x10
 5725 0707 38040000 		.4byte	.LASF108
 5726 070b 01       		.byte	0x1
 5727 070c 8D03     		.2byte	0x38d
 5728 070e 73000000 		.4byte	0x73
 5729 0712 02       		.uleb128 0x2
 5730 0713 91       		.byte	0x91
 5731 0714 58       		.sleb128 -40
 5732 0715 10       		.uleb128 0x10
 5733 0716 FC080000 		.4byte	.LASF109
 5734 071a 01       		.byte	0x1
 5735 071b 8E03     		.2byte	0x38e
 5736 071d 73000000 		.4byte	0x73
 5737 0721 02       		.uleb128 0x2
 5738 0722 91       		.byte	0x91
 5739 0723 54       		.sleb128 -44
 5740 0724 00       		.byte	0
 5741 0725 1A       		.uleb128 0x1a
 5742 0726 AF050000 		.4byte	.LASF110
 5743 072a 01       		.byte	0x1
 5744 072b 9C03     		.2byte	0x39c
 5745 072d 00000000 		.4byte	.LFB97
 5746 0731 0C000000 		.4byte	.LFE97-.LFB97
 5747 0735 01       		.uleb128 0x1
 5748 0736 9C       		.byte	0x9c
 5749 0737 17       		.uleb128 0x17
 5750 0738 82010000 		.4byte	.LASF111
 5751 073c 01       		.byte	0x1
 5752 073d A203     		.2byte	0x3a2
 5753 073f 00000000 		.4byte	.LFB98
 5754 0743 4C010000 		.4byte	.LFE98-.LFB98
 5755 0747 01       		.uleb128 0x1
 5756 0748 9C       		.byte	0x9c
 5757 0749 79070000 		.4byte	0x779
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 122


 5758 074d 13       		.uleb128 0x13
 5759 074e 6E6C00   		.ascii	"nl\000"
 5760 0751 01       		.byte	0x1
 5761 0752 A603     		.2byte	0x3a6
 5762 0754 AB000000 		.4byte	0xab
 5763 0758 02       		.uleb128 0x2
 5764 0759 91       		.byte	0x91
 5765 075a 67       		.sleb128 -25
 5766 075b 13       		.uleb128 0x13
 5767 075c 6E7200   		.ascii	"nr\000"
 5768 075f 01       		.byte	0x1
 5769 0760 A703     		.2byte	0x3a7
 5770 0762 AB000000 		.4byte	0xab
 5771 0766 02       		.uleb128 0x2
 5772 0767 91       		.byte	0x91
 5773 0768 66       		.sleb128 -26
 5774 0769 13       		.uleb128 0x13
 5775 076a 6D696400 		.ascii	"mid\000"
 5776 076e 01       		.byte	0x1
 5777 076f A803     		.2byte	0x3a8
 5778 0771 AB000000 		.4byte	0xab
 5779 0775 02       		.uleb128 0x2
 5780 0776 91       		.byte	0x91
 5781 0777 65       		.sleb128 -27
 5782 0778 00       		.byte	0
 5783 0779 1A       		.uleb128 0x1a
 5784 077a 67010000 		.4byte	.LASF112
 5785 077e 01       		.byte	0x1
 5786 077f C203     		.2byte	0x3c2
 5787 0781 00000000 		.4byte	.LFB99
 5788 0785 0C000000 		.4byte	.LFE99-.LFB99
 5789 0789 01       		.uleb128 0x1
 5790 078a 9C       		.byte	0x9c
 5791 078b 17       		.uleb128 0x17
 5792 078c 97030000 		.4byte	.LASF113
 5793 0790 01       		.byte	0x1
 5794 0791 C703     		.2byte	0x3c7
 5795 0793 00000000 		.4byte	.LFB100
 5796 0797 C0000000 		.4byte	.LFE100-.LFB100
 5797 079b 01       		.uleb128 0x1
 5798 079c 9C       		.byte	0x9c
 5799 079d D9070000 		.4byte	0x7d9
 5800 07a1 11       		.uleb128 0x11
 5801 07a2 0E000000 		.4byte	.LBB10
 5802 07a6 8E000000 		.4byte	.LBE10-.LBB10
 5803 07aa 10       		.uleb128 0x10
 5804 07ab F7020000 		.4byte	.LASF114
 5805 07af 01       		.byte	0x1
 5806 07b0 D003     		.2byte	0x3d0
 5807 07b2 E7000000 		.4byte	0xe7
 5808 07b6 02       		.uleb128 0x2
 5809 07b7 91       		.byte	0x91
 5810 07b8 74       		.sleb128 -12
 5811 07b9 10       		.uleb128 0x10
 5812 07ba 96050000 		.4byte	.LASF115
 5813 07be 01       		.byte	0x1
 5814 07bf D103     		.2byte	0x3d1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 123


 5815 07c1 DB000000 		.4byte	0xdb
 5816 07c5 02       		.uleb128 0x2
 5817 07c6 91       		.byte	0x91
 5818 07c7 72       		.sleb128 -14
 5819 07c8 10       		.uleb128 0x10
 5820 07c9 5A030000 		.4byte	.LASF116
 5821 07cd 01       		.byte	0x1
 5822 07ce D603     		.2byte	0x3d6
 5823 07d0 DD030000 		.4byte	0x3dd
 5824 07d4 02       		.uleb128 0x2
 5825 07d5 91       		.byte	0x91
 5826 07d6 60       		.sleb128 -32
 5827 07d7 00       		.byte	0
 5828 07d8 00       		.byte	0
 5829 07d9 17       		.uleb128 0x17
 5830 07da 3D090000 		.4byte	.LASF117
 5831 07de 01       		.byte	0x1
 5832 07df DD03     		.2byte	0x3dd
 5833 07e1 00000000 		.4byte	.LFB101
 5834 07e5 B8000000 		.4byte	.LFE101-.LFB101
 5835 07e9 01       		.uleb128 0x1
 5836 07ea 9C       		.byte	0x9c
 5837 07eb 09080000 		.4byte	0x809
 5838 07ef 11       		.uleb128 0x11
 5839 07f0 0E000000 		.4byte	.LBB11
 5840 07f4 86000000 		.4byte	.LBE11-.LBB11
 5841 07f8 10       		.uleb128 0x10
 5842 07f9 B1060000 		.4byte	.LASF118
 5843 07fd 01       		.byte	0x1
 5844 07fe E103     		.2byte	0x3e1
 5845 0800 DD030000 		.4byte	0x3dd
 5846 0804 02       		.uleb128 0x2
 5847 0805 91       		.byte	0x91
 5848 0806 68       		.sleb128 -24
 5849 0807 00       		.byte	0
 5850 0808 00       		.byte	0
 5851 0809 15       		.uleb128 0x15
 5852 080a 50070000 		.4byte	.LASF119
 5853 080e 01       		.byte	0x1
 5854 080f F203     		.2byte	0x3f2
 5855 0811 00000000 		.4byte	.LFB102
 5856 0815 4A000000 		.4byte	.LFE102-.LFB102
 5857 0819 01       		.uleb128 0x1
 5858 081a 9C       		.byte	0x9c
 5859 081b 2F080000 		.4byte	0x82f
 5860 081f 18       		.uleb128 0x18
 5861 0820 4F030000 		.4byte	.LASF120
 5862 0824 01       		.byte	0x1
 5863 0825 F203     		.2byte	0x3f2
 5864 0827 2F080000 		.4byte	0x82f
 5865 082b 02       		.uleb128 0x2
 5866 082c 91       		.byte	0x91
 5867 082d 6C       		.sleb128 -20
 5868 082e 00       		.byte	0
 5869 082f 05       		.uleb128 0x5
 5870 0830 04       		.byte	0x4
 5871 0831 AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 124


 5872 0835 15       		.uleb128 0x15
 5873 0836 29070000 		.4byte	.LASF121
 5874 083a 01       		.byte	0x1
 5875 083b FD03     		.2byte	0x3fd
 5876 083d 00000000 		.4byte	.LFB103
 5877 0841 68000000 		.4byte	.LFE103-.LFB103
 5878 0845 01       		.uleb128 0x1
 5879 0846 9C       		.byte	0x9c
 5880 0847 72080000 		.4byte	0x872
 5881 084b 16       		.uleb128 0x16
 5882 084c 7300     		.ascii	"s\000"
 5883 084e 01       		.byte	0x1
 5884 084f FD03     		.2byte	0x3fd
 5885 0851 88000000 		.4byte	0x88
 5886 0855 02       		.uleb128 0x2
 5887 0856 91       		.byte	0x91
 5888 0857 6C       		.sleb128 -20
 5889 0858 11       		.uleb128 0x11
 5890 0859 10000000 		.4byte	.LBB12
 5891 085d 48000000 		.4byte	.LBE12-.LBB12
 5892 0861 13       		.uleb128 0x13
 5893 0862 636E7400 		.ascii	"cnt\000"
 5894 0866 01       		.byte	0x1
 5895 0867 0404     		.2byte	0x404
 5896 0869 C3000000 		.4byte	0xc3
 5897 086d 02       		.uleb128 0x2
 5898 086e 91       		.byte	0x91
 5899 086f 74       		.sleb128 -12
 5900 0870 00       		.byte	0
 5901 0871 00       		.byte	0
 5902 0872 15       		.uleb128 0x15
 5903 0873 A8080000 		.4byte	.LASF122
 5904 0877 01       		.byte	0x1
 5905 0878 1304     		.2byte	0x413
 5906 087a 00000000 		.4byte	.LFB104
 5907 087e 50000000 		.4byte	.LFE104-.LFB104
 5908 0882 01       		.uleb128 0x1
 5909 0883 9C       		.byte	0x9c
 5910 0884 AF080000 		.4byte	0x8af
 5911 0888 16       		.uleb128 0x16
 5912 0889 6300     		.ascii	"c\000"
 5913 088b 01       		.byte	0x1
 5914 088c 1304     		.2byte	0x413
 5915 088e 8E000000 		.4byte	0x8e
 5916 0892 02       		.uleb128 0x2
 5917 0893 91       		.byte	0x91
 5918 0894 6F       		.sleb128 -17
 5919 0895 11       		.uleb128 0x11
 5920 0896 12000000 		.4byte	.LBB13
 5921 089a 2E000000 		.4byte	.LBE13-.LBB13
 5922 089e 13       		.uleb128 0x13
 5923 089f 636E7400 		.ascii	"cnt\000"
 5924 08a3 01       		.byte	0x1
 5925 08a4 1704     		.2byte	0x417
 5926 08a6 C3000000 		.4byte	0xc3
 5927 08aa 02       		.uleb128 0x2
 5928 08ab 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 125


 5929 08ac 74       		.sleb128 -12
 5930 08ad 00       		.byte	0
 5931 08ae 00       		.byte	0
 5932 08af 1A       		.uleb128 0x1a
 5933 08b0 65030000 		.4byte	.LASF123
 5934 08b4 01       		.byte	0x1
 5935 08b5 2404     		.2byte	0x424
 5936 08b7 00000000 		.4byte	.LFB105
 5937 08bb 0C000000 		.4byte	.LFE105-.LFB105
 5938 08bf 01       		.uleb128 0x1
 5939 08c0 9C       		.byte	0x9c
 5940 08c1 1B       		.uleb128 0x1b
 5941 08c2 A4060000 		.4byte	.LASF124
 5942 08c6 06       		.byte	0x6
 5943 08c7 9606     		.2byte	0x696
 5944 08c9 CD080000 		.4byte	0x8cd
 5945 08cd 1C       		.uleb128 0x1c
 5946 08ce 95000000 		.4byte	0x95
 5947 08d2 1D       		.uleb128 0x1d
 5948 08d3 747300   		.ascii	"ts\000"
 5949 08d6 05       		.byte	0x5
 5950 08d7 10       		.byte	0x10
 5951 08d8 AB000000 		.4byte	0xab
 5952 08dc 05       		.uleb128 0x5
 5953 08dd 03       		.byte	0x3
 5954 08de 00000000 		.4byte	ts
 5955 08e2 1E       		.uleb128 0x1e
 5956 08e3 2A080000 		.4byte	.LASF125
 5957 08e7 05       		.byte	0x5
 5958 08e8 11       		.byte	0x11
 5959 08e9 B7000000 		.4byte	0xb7
 5960 08ed 05       		.uleb128 0x5
 5961 08ee 03       		.byte	0x3
 5962 08ef 00000000 		.4byte	ts_enc
 5963 08f3 1E       		.uleb128 0x1e
 5964 08f4 C3060000 		.4byte	.LASF126
 5965 08f8 05       		.byte	0x5
 5966 08f9 12       		.byte	0x12
 5967 08fa B7000000 		.4byte	0xb7
 5968 08fe 05       		.uleb128 0x5
 5969 08ff 03       		.byte	0x3
 5970 0900 00000000 		.4byte	ts_update
 5971 0904 1E       		.uleb128 0x1e
 5972 0905 63050000 		.4byte	.LASF127
 5973 0909 05       		.byte	0x5
 5974 090a 13       		.byte	0x13
 5975 090b B7000000 		.4byte	0xb7
 5976 090f 05       		.uleb128 0x5
 5977 0910 03       		.byte	0x3
 5978 0911 00000000 		.4byte	ts_speed
 5979 0915 1E       		.uleb128 0x1e
 5980 0916 8C030000 		.4byte	.LASF128
 5981 091a 05       		.byte	0x5
 5982 091b 14       		.byte	0x14
 5983 091c B7000000 		.4byte	0xb7
 5984 0920 05       		.uleb128 0x5
 5985 0921 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 126


 5986 0922 00000000 		.4byte	ts_display
 5987 0926 1E       		.uleb128 0x1e
 5988 0927 0F030000 		.4byte	.LASF129
 5989 092b 05       		.byte	0x5
 5990 092c 16       		.byte	0x16
 5991 092d AB000000 		.4byte	0xab
 5992 0931 05       		.uleb128 0x5
 5993 0932 03       		.byte	0x3
 5994 0933 00000000 		.4byte	flag_ts_enc
 5995 0937 1E       		.uleb128 0x1e
 5996 0938 E8020000 		.4byte	.LASF130
 5997 093c 05       		.byte	0x5
 5998 093d 17       		.byte	0x17
 5999 093e AB000000 		.4byte	0xab
 6000 0942 05       		.uleb128 0x5
 6001 0943 03       		.byte	0x3
 6002 0944 00000000 		.4byte	flag_ts_update
 6003 0948 1E       		.uleb128 0x1e
 6004 0949 1E060000 		.4byte	.LASF131
 6005 094d 05       		.byte	0x5
 6006 094e 18       		.byte	0x18
 6007 094f AB000000 		.4byte	0xab
 6008 0953 05       		.uleb128 0x5
 6009 0954 03       		.byte	0x3
 6010 0955 00000000 		.4byte	flag_ts_speed
 6011 0959 1E       		.uleb128 0x1e
 6012 095a 3B080000 		.4byte	.LASF132
 6013 095e 05       		.byte	0x5
 6014 095f 19       		.byte	0x19
 6015 0960 AB000000 		.4byte	0xab
 6016 0964 05       		.uleb128 0x5
 6017 0965 03       		.byte	0x3
 6018 0966 00000000 		.4byte	flag_ts_display
 6019 096a 1E       		.uleb128 0x1e
 6020 096b 49060000 		.4byte	.LASF133
 6021 096f 05       		.byte	0x5
 6022 0970 1C       		.byte	0x1c
 6023 0971 AB000000 		.4byte	0xab
 6024 0975 05       		.uleb128 0x5
 6025 0976 03       		.byte	0x3
 6026 0977 00000000 		.4byte	flag_rx
 6027 097b 1E       		.uleb128 0x1e
 6028 097c 95020000 		.4byte	.LASF134
 6029 0980 05       		.byte	0x5
 6030 0981 1D       		.byte	0x1d
 6031 0982 AB000000 		.4byte	0xab
 6032 0986 05       		.uleb128 0x5
 6033 0987 03       		.byte	0x3
 6034 0988 00000000 		.4byte	flag_packet
 6035 098c 1E       		.uleb128 0x1e
 6036 098d 61090000 		.4byte	.LASF135
 6037 0991 05       		.byte	0x5
 6038 0992 1E       		.byte	0x1e
 6039 0993 AB000000 		.4byte	0xab
 6040 0997 05       		.uleb128 0x5
 6041 0998 03       		.byte	0x3
 6042 0999 00000000 		.4byte	flag_KB_string
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 127


 6043 099d 1E       		.uleb128 0x1e
 6044 099e 2C060000 		.4byte	.LASF136
 6045 09a2 05       		.byte	0x5
 6046 09a3 20       		.byte	0x20
 6047 09a4 AB000000 		.4byte	0xab
 6048 09a8 05       		.uleb128 0x5
 6049 09a9 03       		.byte	0x3
 6050 09aa 00000000 		.4byte	dataready_flag
 6051 09ae 1E       		.uleb128 0x1e
 6052 09af AE010000 		.4byte	.LASF137
 6053 09b3 05       		.byte	0x5
 6054 09b4 22       		.byte	0x22
 6055 09b5 AB000000 		.4byte	0xab
 6056 09b9 05       		.uleb128 0x5
 6057 09ba 03       		.byte	0x3
 6058 09bb 00000000 		.4byte	flag_rf_transmission_active
 6059 09bf 1E       		.uleb128 0x1e
 6060 09c0 CA010000 		.4byte	.LASF138
 6061 09c4 05       		.byte	0x5
 6062 09c5 23       		.byte	0x23
 6063 09c6 AB000000 		.4byte	0xab
 6064 09ca 05       		.uleb128 0x5
 6065 09cb 03       		.byte	0x3
 6066 09cc 00000000 		.4byte	flag_print_rf
 6067 09d0 1E       		.uleb128 0x1e
 6068 09d1 C6050000 		.4byte	.LASF139
 6069 09d5 05       		.byte	0x5
 6070 09d6 25       		.byte	0x25
 6071 09d7 AB000000 		.4byte	0xab
 6072 09db 05       		.uleb128 0x5
 6073 09dc 03       		.byte	0x3
 6074 09dd 00000000 		.4byte	flag_receive_ADC
 6075 09e1 1E       		.uleb128 0x1e
 6076 09e2 5B060000 		.4byte	.LASF140
 6077 09e6 05       		.byte	0x5
 6078 09e7 26       		.byte	0x26
 6079 09e8 DB000000 		.4byte	0xdb
 6080 09ec 05       		.uleb128 0x5
 6081 09ed 03       		.byte	0x3
 6082 09ee 00000000 		.4byte	adc_result
 6083 09f2 1E       		.uleb128 0x1e
 6084 09f3 00000000 		.4byte	.LASF141
 6085 09f7 05       		.byte	0x5
 6086 09f8 28       		.byte	0x28
 6087 09f9 AB000000 		.4byte	0xab
 6088 09fd 05       		.uleb128 0x5
 6089 09fe 03       		.byte	0x3
 6090 09ff 00000000 		.4byte	direction
 6091 0a03 1E       		.uleb128 0x1e
 6092 0a04 4C050000 		.4byte	.LASF142
 6093 0a08 05       		.byte	0x5
 6094 0a09 2B       		.byte	0x2b
 6095 0a0a AB000000 		.4byte	0xab
 6096 0a0e 05       		.uleb128 0x5
 6097 0a0f 03       		.byte	0x3
 6098 0a10 00000000 		.4byte	BIN_ENABLED
 6099 0a14 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 128


 6100 0a15 42040000 		.4byte	.LASF143
 6101 0a19 05       		.byte	0x5
 6102 0a1a 2D       		.byte	0x2d
 6103 0a1b AB000000 		.4byte	0xab
 6104 0a1f 05       		.uleb128 0x5
 6105 0a20 03       		.byte	0x3
 6106 0a21 00000000 		.4byte	BT_ENABLED
 6107 0a25 1E       		.uleb128 0x1e
 6108 0a26 70060000 		.4byte	.LASF144
 6109 0a2a 05       		.byte	0x5
 6110 0a2b 32       		.byte	0x32
 6111 0a2c AB000000 		.4byte	0xab
 6112 0a30 05       		.uleb128 0x5
 6113 0a31 03       		.byte	0x3
 6114 0a32 00000000 		.4byte	flag_calc_wheelspeed
 6115 0a36 1E       		.uleb128 0x1e
 6116 0a37 4F010000 		.4byte	.LASF145
 6117 0a3b 05       		.byte	0x5
 6118 0a3c 33       		.byte	0x33
 6119 0a3d DB000000 		.4byte	0xdb
 6120 0a41 05       		.uleb128 0x5
 6121 0a42 03       		.byte	0x3
 6122 0a43 00000000 		.4byte	quad_count1
 6123 0a47 1E       		.uleb128 0x1e
 6124 0a48 5B010000 		.4byte	.LASF146
 6125 0a4c 05       		.byte	0x5
 6126 0a4d 34       		.byte	0x34
 6127 0a4e DB000000 		.4byte	0xdb
 6128 0a52 05       		.uleb128 0x5
 6129 0a53 03       		.byte	0x3
 6130 0a54 00000000 		.4byte	quad_count2
 6131 0a58 1E       		.uleb128 0x1e
 6132 0a59 7A080000 		.4byte	.LASF147
 6133 0a5d 05       		.byte	0x5
 6134 0a5e 35       		.byte	0x35
 6135 0a5f DB000000 		.4byte	0xdb
 6136 0a63 05       		.uleb128 0x5
 6137 0a64 03       		.byte	0x3
 6138 0a65 00000000 		.4byte	last_quad_count1
 6139 0a69 1E       		.uleb128 0x1e
 6140 0a6a 8B080000 		.4byte	.LASF148
 6141 0a6e 05       		.byte	0x5
 6142 0a6f 36       		.byte	0x36
 6143 0a70 DB000000 		.4byte	0xdb
 6144 0a74 05       		.uleb128 0x5
 6145 0a75 03       		.byte	0x3
 6146 0a76 00000000 		.4byte	last_quad_count2
 6147 0a7a 1E       		.uleb128 0x1e
 6148 0a7b 7A000000 		.4byte	.LASF149
 6149 0a7f 05       		.byte	0x5
 6150 0a80 37       		.byte	0x37
 6151 0a81 DB000000 		.4byte	0xdb
 6152 0a85 05       		.uleb128 0x5
 6153 0a86 03       		.byte	0x3
 6154 0a87 00000000 		.4byte	quad_diff1
 6155 0a8b 1E       		.uleb128 0x1e
 6156 0a8c 85000000 		.4byte	.LASF150
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 129


 6157 0a90 05       		.byte	0x5
 6158 0a91 38       		.byte	0x38
 6159 0a92 DB000000 		.4byte	0xdb
 6160 0a96 05       		.uleb128 0x5
 6161 0a97 03       		.byte	0x3
 6162 0a98 00000000 		.4byte	quad_diff2
 6163 0a9c 1E       		.uleb128 0x1e
 6164 0a9d D6060000 		.4byte	.LASF151
 6165 0aa1 05       		.byte	0x5
 6166 0aa2 39       		.byte	0x39
 6167 0aa3 AB000000 		.4byte	0xab
 6168 0aa7 05       		.uleb128 0x5
 6169 0aa8 03       		.byte	0x3
 6170 0aa9 00000000 		.4byte	deadzone
 6171 0aad 1E       		.uleb128 0x1e
 6172 0aae AE000000 		.4byte	.LASF152
 6173 0ab2 05       		.byte	0x5
 6174 0ab3 3C       		.byte	0x3c
 6175 0ab4 DB000000 		.4byte	0xdb
 6176 0ab8 05       		.uleb128 0x5
 6177 0ab9 03       		.byte	0x3
 6178 0aba 00000000 		.4byte	start_turn_count
 6179 0abe 1E       		.uleb128 0x1e
 6180 0abf 01060000 		.4byte	.LASF153
 6181 0ac3 05       		.byte	0x5
 6182 0ac4 3F       		.byte	0x3f
 6183 0ac5 DB000000 		.4byte	0xdb
 6184 0ac9 05       		.uleb128 0x5
 6185 0aca 03       		.byte	0x3
 6186 0acb 00000000 		.4byte	left_duty_cycle
 6187 0acf 1E       		.uleb128 0x1e
 6188 0ad0 13090000 		.4byte	.LASF154
 6189 0ad4 05       		.byte	0x5
 6190 0ad5 40       		.byte	0x40
 6191 0ad6 DB000000 		.4byte	0xdb
 6192 0ada 05       		.uleb128 0x5
 6193 0adb 03       		.byte	0x3
 6194 0adc 00000000 		.4byte	right_duty_cycle
 6195 0ae0 1E       		.uleb128 0x1e
 6196 0ae1 DF060000 		.4byte	.LASF155
 6197 0ae5 05       		.byte	0x5
 6198 0ae6 43       		.byte	0x43
 6199 0ae7 DB000000 		.4byte	0xdb
 6200 0aeb 05       		.uleb128 0x5
 6201 0aec 03       		.byte	0x3
 6202 0aed 00000000 		.4byte	leftSpeedLimit
 6203 0af1 1E       		.uleb128 0x1e
 6204 0af2 BB030000 		.4byte	.LASF156
 6205 0af6 05       		.byte	0x5
 6206 0af7 44       		.byte	0x44
 6207 0af8 DB000000 		.4byte	0xdb
 6208 0afc 05       		.uleb128 0x5
 6209 0afd 03       		.byte	0x3
 6210 0afe 00000000 		.4byte	rightSpeedLimit
 6211 0b02 1E       		.uleb128 0x1e
 6212 0b03 6D070000 		.4byte	.LASF157
 6213 0b07 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 130


 6214 0b08 47       		.byte	0x47
 6215 0b09 DB000000 		.4byte	0xdb
 6216 0b0d 05       		.uleb128 0x5
 6217 0b0e 03       		.byte	0x3
 6218 0b0f 00000000 		.4byte	target_distance_cm
 6219 0b13 1E       		.uleb128 0x1e
 6220 0b14 1E070000 		.4byte	.LASF158
 6221 0b18 05       		.byte	0x5
 6222 0b19 49       		.byte	0x49
 6223 0b1a DB000000 		.4byte	0xdb
 6224 0b1e 05       		.uleb128 0x5
 6225 0b1f 03       		.byte	0x3
 6226 0b20 00000000 		.4byte	accum_dist
 6227 0b24 1E       		.uleb128 0x1e
 6228 0b25 FA000000 		.4byte	.LASF159
 6229 0b29 05       		.byte	0x5
 6230 0b2a 4A       		.byte	0x4a
 6231 0b2b DB000000 		.4byte	0xdb
 6232 0b2f 05       		.uleb128 0x5
 6233 0b30 03       		.byte	0x3
 6234 0b31 00000000 		.4byte	target_distance_quad
 6235 0b35 1E       		.uleb128 0x1e
 6236 0b36 0E080000 		.4byte	.LASF160
 6237 0b3a 05       		.byte	0x5
 6238 0b3b 4B       		.byte	0x4b
 6239 0b3c AB000000 		.4byte	0xab
 6240 0b40 05       		.uleb128 0x5
 6241 0b41 03       		.byte	0x3
 6242 0b42 00000000 		.4byte	reached_target
 6243 0b46 1E       		.uleb128 0x1e
 6244 0b47 09070000 		.4byte	.LASF161
 6245 0b4b 05       		.byte	0x5
 6246 0b4c 4C       		.byte	0x4c
 6247 0b4d AB000000 		.4byte	0xab
 6248 0b51 05       		.uleb128 0x5
 6249 0b52 03       		.byte	0x3
 6250 0b53 00000000 		.4byte	overshot_target
 6251 0b57 1E       		.uleb128 0x1e
 6252 0b58 61070000 		.4byte	.LASF162
 6253 0b5c 05       		.byte	0x5
 6254 0b5d 4D       		.byte	0x4d
 6255 0b5e E7000000 		.4byte	0xe7
 6256 0b62 05       		.uleb128 0x5
 6257 0b63 03       		.byte	0x3
 6258 0b64 00000000 		.4byte	quad_per_cm
 6259 0b68 1E       		.uleb128 0x1e
 6260 0b69 53040000 		.4byte	.LASF163
 6261 0b6d 05       		.byte	0x5
 6262 0b6e 50       		.byte	0x50
 6263 0b6f AB000000 		.4byte	0xab
 6264 0b73 05       		.uleb128 0x5
 6265 0b74 03       		.byte	0x3
 6266 0b75 00000000 		.4byte	initial_pos_valid
 6267 0b79 1E       		.uleb128 0x1e
 6268 0b7a 82090000 		.4byte	.LASF164
 6269 0b7e 05       		.byte	0x5
 6270 0b7f 51       		.byte	0x51
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 131


 6271 0b80 DB000000 		.4byte	0xdb
 6272 0b84 05       		.uleb128 0x5
 6273 0b85 03       		.byte	0x3
 6274 0b86 00000000 		.4byte	initial_x_pos
 6275 0b8a 1E       		.uleb128 0x1e
 6276 0b8b 3B060000 		.4byte	.LASF165
 6277 0b8f 05       		.byte	0x5
 6278 0b90 52       		.byte	0x52
 6279 0b91 DB000000 		.4byte	0xdb
 6280 0b95 05       		.uleb128 0x5
 6281 0b96 03       		.byte	0x3
 6282 0b97 00000000 		.4byte	initial_y_pos
 6283 0b9b 1E       		.uleb128 0x1e
 6284 0b9c 31080000 		.4byte	.LASF166
 6285 0ba0 05       		.byte	0x5
 6286 0ba1 55       		.byte	0x55
 6287 0ba2 AB000000 		.4byte	0xab
 6288 0ba6 05       		.uleb128 0x5
 6289 0ba7 03       		.byte	0x3
 6290 0ba8 00000000 		.4byte	brakeFlag
 6291 0bac 1E       		.uleb128 0x1e
 6292 0bad D5020000 		.4byte	.LASF167
 6293 0bb1 05       		.byte	0x5
 6294 0bb2 56       		.byte	0x56
 6295 0bb3 AB000000 		.4byte	0xab
 6296 0bb7 05       		.uleb128 0x5
 6297 0bb8 03       		.byte	0x3
 6298 0bb9 00000000 		.4byte	portOpen
 6299 0bbd 1E       		.uleb128 0x1e
 6300 0bbe A2000000 		.4byte	.LASF168
 6301 0bc2 05       		.byte	0x5
 6302 0bc3 59       		.byte	0x59
 6303 0bc4 DB000000 		.4byte	0xdb
 6304 0bc8 05       		.uleb128 0x5
 6305 0bc9 03       		.byte	0x3
 6306 0bca 00000000 		.4byte	prevVoltage
 6307 0bce 1E       		.uleb128 0x1e
 6308 0bcf 18010000 		.4byte	.LASF169
 6309 0bd3 05       		.byte	0x5
 6310 0bd4 5A       		.byte	0x5a
 6311 0bd5 DB000000 		.4byte	0xdb
 6312 0bd9 05       		.uleb128 0x5
 6313 0bda 03       		.byte	0x3
 6314 0bdb 00000000 		.4byte	prevVoltage2
 6315 0bdf 07       		.uleb128 0x7
 6316 0be0 8E000000 		.4byte	0x8e
 6317 0be4 EF0B0000 		.4byte	0xbef
 6318 0be8 08       		.uleb128 0x8
 6319 0be9 81000000 		.4byte	0x81
 6320 0bed 3F       		.byte	0x3f
 6321 0bee 00       		.byte	0
 6322 0bef 1E       		.uleb128 0x1e
 6323 0bf0 6C080000 		.4byte	.LASF170
 6324 0bf4 05       		.byte	0x5
 6325 0bf5 60       		.byte	0x60
 6326 0bf6 DF0B0000 		.4byte	0xbdf
 6327 0bfa 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 132


 6328 0bfb 03       		.byte	0x3
 6329 0bfc 00000000 		.4byte	displaystring
 6330 0c00 1E       		.uleb128 0x1e
 6331 0c01 09080000 		.4byte	.LASF171
 6332 0c05 05       		.byte	0x5
 6333 0c06 61       		.byte	0x61
 6334 0c07 DF0B0000 		.4byte	0xbdf
 6335 0c0b 05       		.uleb128 0x5
 6336 0c0c 03       		.byte	0x3
 6337 0c0d 00000000 		.4byte	line
 6338 0c11 1E       		.uleb128 0x1e
 6339 0c12 EA070000 		.4byte	.LASF172
 6340 0c16 05       		.byte	0x5
 6341 0c17 61       		.byte	0x61
 6342 0c18 DF0B0000 		.4byte	0xbdf
 6343 0c1c 05       		.uleb128 0x5
 6344 0c1d 03       		.byte	0x3
 6345 0c1e 00000000 		.4byte	entry
 6346 0c22 07       		.uleb128 0x7
 6347 0c23 AB000000 		.4byte	0xab
 6348 0c27 320C0000 		.4byte	0xc32
 6349 0c2b 08       		.uleb128 0x8
 6350 0c2c 81000000 		.4byte	0x81
 6351 0c30 3F       		.byte	0x3f
 6352 0c31 00       		.byte	0
 6353 0c32 1E       		.uleb128 0x1e
 6354 0c33 2D020000 		.4byte	.LASF173
 6355 0c37 05       		.byte	0x5
 6356 0c38 62       		.byte	0x62
 6357 0c39 220C0000 		.4byte	0xc22
 6358 0c3d 05       		.uleb128 0x5
 6359 0c3e 03       		.byte	0x3
 6360 0c3f 00000000 		.4byte	usbBuffer
 6361 0c43 1E       		.uleb128 0x1e
 6362 0c44 73040000 		.4byte	.LASF174
 6363 0c48 05       		.byte	0x5
 6364 0c49 77       		.byte	0x77
 6365 0c4a 86010000 		.4byte	0x186
 6366 0c4e 05       		.uleb128 0x5
 6367 0c4f 03       		.byte	0x3
 6368 0c50 00000000 		.4byte	buffer_state
 6369 0c54 1E       		.uleb128 0x1e
 6370 0c55 E7000000 		.4byte	.LASF175
 6371 0c59 05       		.byte	0x5
 6372 0c5a 78       		.byte	0x78
 6373 0c5b 86010000 		.4byte	0x186
 6374 0c5f 05       		.uleb128 0x5
 6375 0c60 03       		.byte	0x3
 6376 0c61 00000000 		.4byte	system_state
 6377 0c65 1E       		.uleb128 0x1e
 6378 0c66 3B030000 		.4byte	.LASF176
 6379 0c6a 05       		.byte	0x5
 6380 0c6b 7A       		.byte	0x7a
 6381 0c6c 0C010000 		.4byte	0x10c
 6382 0c70 05       		.uleb128 0x5
 6383 0c71 03       		.byte	0x3
 6384 0c72 00000000 		.4byte	prev_movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 133


 6385 0c76 1E       		.uleb128 0x1e
 6386 0c77 D8010000 		.4byte	.LASF177
 6387 0c7b 05       		.byte	0x5
 6388 0c7c 7B       		.byte	0x7b
 6389 0c7d 0C010000 		.4byte	0x10c
 6390 0c81 05       		.uleb128 0x5
 6391 0c82 03       		.byte	0x3
 6392 0c83 00000000 		.4byte	movement_state
 6393 0c87 1E       		.uleb128 0x1e
 6394 0c88 CC000000 		.4byte	.LASF178
 6395 0c8c 05       		.byte	0x5
 6396 0c8d 7C       		.byte	0x7c
 6397 0c8e 49010000 		.4byte	0x149
 6398 0c92 05       		.uleb128 0x5
 6399 0c93 03       		.byte	0x3
 6400 0c94 00000000 		.4byte	track_mode
 6401 0c98 1E       		.uleb128 0x1e
 6402 0c99 1B030000 		.4byte	.LASF179
 6403 0c9d 05       		.byte	0x5
 6404 0c9e 7E       		.byte	0x7e
 6405 0c9f AB000000 		.4byte	0xab
 6406 0ca3 05       		.uleb128 0x5
 6407 0ca4 03       		.byte	0x3
 6408 0ca5 00000000 		.4byte	byteCount
 6409 0ca9 07       		.uleb128 0x7
 6410 0caa 8E000000 		.4byte	0x8e
 6411 0cae B90C0000 		.4byte	0xcb9
 6412 0cb2 08       		.uleb128 0x8
 6413 0cb3 81000000 		.4byte	0x81
 6414 0cb7 01       		.byte	0x1
 6415 0cb8 00       		.byte	0
 6416 0cb9 1E       		.uleb128 0x1e
 6417 0cba AF070000 		.4byte	.LASF180
 6418 0cbe 05       		.byte	0x5
 6419 0cbf 7F       		.byte	0x7f
 6420 0cc0 A90C0000 		.4byte	0xca9
 6421 0cc4 05       		.uleb128 0x5
 6422 0cc5 03       		.byte	0x3
 6423 0cc6 00000000 		.4byte	packet
 6424 0cca 1E       		.uleb128 0x1e
 6425 0ccb 9B010000 		.4byte	.LASF181
 6426 0ccf 05       		.byte	0x5
 6427 0cd0 83       		.byte	0x83
 6428 0cd1 EE000000 		.4byte	0xee
 6429 0cd5 05       		.uleb128 0x5
 6430 0cd6 03       		.byte	0x3
 6431 0cd7 00000000 		.4byte	speed
 6432 0cdb 1E       		.uleb128 0x1e
 6433 0cdc D6030000 		.4byte	.LASF182
 6434 0ce0 01       		.byte	0x1
 6435 0ce1 1E       		.byte	0x1e
 6436 0ce2 B7000000 		.4byte	0xb7
 6437 0ce6 05       		.uleb128 0x5
 6438 0ce7 03       		.byte	0x3
 6439 0ce8 00000000 		.4byte	instructionCount
 6440 0cec 1E       		.uleb128 0x1e
 6441 0ced 25010000 		.4byte	.LASF183
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 134


 6442 0cf1 01       		.byte	0x1
 6443 0cf2 20       		.byte	0x20
 6444 0cf3 A0000000 		.4byte	0xa0
 6445 0cf7 05       		.uleb128 0x5
 6446 0cf8 03       		.byte	0x3
 6447 0cf9 00000000 		.4byte	sensorsDisabled
 6448 0cfd 07       		.uleb128 0x7
 6449 0cfe A0000000 		.4byte	0xa0
 6450 0d02 130D0000 		.4byte	0xd13
 6451 0d06 08       		.uleb128 0x8
 6452 0d07 81000000 		.4byte	0x81
 6453 0d0b 0E       		.byte	0xe
 6454 0d0c 08       		.uleb128 0x8
 6455 0d0d 81000000 		.4byte	0x81
 6456 0d11 12       		.byte	0x12
 6457 0d12 00       		.byte	0
 6458 0d13 1D       		.uleb128 0x1d
 6459 0d14 6D617000 		.ascii	"map\000"
 6460 0d18 01       		.byte	0x1
 6461 0d19 28       		.byte	0x28
 6462 0d1a FD0C0000 		.4byte	0xcfd
 6463 0d1e 05       		.uleb128 0x5
 6464 0d1f 03       		.byte	0x3
 6465 0d20 00000000 		.4byte	map
 6466 0d24 07       		.uleb128 0x7
 6467 0d25 A0000000 		.4byte	0xa0
 6468 0d29 3A0D0000 		.4byte	0xd3a
 6469 0d2d 08       		.uleb128 0x8
 6470 0d2e 81000000 		.4byte	0x81
 6471 0d32 05       		.byte	0x5
 6472 0d33 08       		.uleb128 0x8
 6473 0d34 81000000 		.4byte	0x81
 6474 0d38 01       		.byte	0x1
 6475 0d39 00       		.byte	0
 6476 0d3a 1E       		.uleb128 0x1e
 6477 0d3b 42050000 		.4byte	.LASF184
 6478 0d3f 01       		.byte	0x1
 6479 0d40 3D       		.byte	0x3d
 6480 0d41 240D0000 		.4byte	0xd24
 6481 0d45 05       		.uleb128 0x5
 6482 0d46 03       		.byte	0x3
 6483 0d47 00000000 		.4byte	food_list
 6484 0d4b 07       		.uleb128 0x7
 6485 0d4c A0000000 		.4byte	0xa0
 6486 0d50 620D0000 		.4byte	0xd62
 6487 0d54 1F       		.uleb128 0x1f
 6488 0d55 81000000 		.4byte	0x81
 6489 0d59 1F03     		.2byte	0x31f
 6490 0d5b 08       		.uleb128 0x8
 6491 0d5c 81000000 		.4byte	0x81
 6492 0d60 02       		.byte	0x2
 6493 0d61 00       		.byte	0
 6494 0d62 1E       		.uleb128 0x1e
 6495 0d63 1B040000 		.4byte	.LASF185
 6496 0d67 01       		.byte	0x1
 6497 0d68 24       		.byte	0x24
 6498 0d69 4B0D0000 		.4byte	0xd4b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 135


 6499 0d6d 05       		.uleb128 0x5
 6500 0d6e 03       		.byte	0x3
 6501 0d6f 00000000 		.4byte	path
 6502 0d73 1E       		.uleb128 0x1e
 6503 0d74 A4050000 		.4byte	.LASF186
 6504 0d78 01       		.byte	0x1
 6505 0d79 25       		.byte	0x25
 6506 0d7a F5000000 		.4byte	0xf5
 6507 0d7e 05       		.uleb128 0x5
 6508 0d7f 03       		.byte	0x3
 6509 0d80 00000000 		.4byte	start
 6510 0d84 1E       		.uleb128 0x1e
 6511 0d85 9C080000 		.4byte	.LASF187
 6512 0d89 01       		.byte	0x1
 6513 0d8a 26       		.byte	0x26
 6514 0d8b F5000000 		.4byte	0xf5
 6515 0d8f 05       		.uleb128 0x5
 6516 0d90 03       		.byte	0x3
 6517 0d91 00000000 		.4byte	destination
 6518 0d95 1E       		.uleb128 0x1e
 6519 0d96 72010000 		.4byte	.LASF188
 6520 0d9a 01       		.byte	0x1
 6521 0d9b 22       		.byte	0x22
 6522 0d9c A0000000 		.4byte	0xa0
 6523 0da0 05       		.uleb128 0x5
 6524 0da1 03       		.byte	0x3
 6525 0da2 00000000 		.4byte	robot_direction
 6526 0da6 1E       		.uleb128 0x1e
 6527 0da7 0A000000 		.4byte	.LASF189
 6528 0dab 07       		.byte	0x7
 6529 0dac 22       		.byte	0x22
 6530 0dad A0000000 		.4byte	0xa0
 6531 0db1 05       		.uleb128 0x5
 6532 0db2 03       		.byte	0x3
 6533 0db3 00000000 		.4byte	tracked_direction
 6534 0db7 1E       		.uleb128 0x1e
 6535 0db8 DE070000 		.4byte	.LASF190
 6536 0dbc 01       		.byte	0x1
 6537 0dbd 3F       		.byte	0x3f
 6538 0dbe A0000000 		.4byte	0xa0
 6539 0dc2 05       		.uleb128 0x5
 6540 0dc3 03       		.byte	0x3
 6541 0dc4 00000000 		.4byte	food_length
 6542 0dc8 07       		.uleb128 0x7
 6543 0dc9 8E000000 		.4byte	0x8e
 6544 0dcd D90D0000 		.4byte	0xdd9
 6545 0dd1 1F       		.uleb128 0x1f
 6546 0dd2 81000000 		.4byte	0x81
 6547 0dd6 1F03     		.2byte	0x31f
 6548 0dd8 00       		.byte	0
 6549 0dd9 1E       		.uleb128 0x1e
 6550 0dda 73050000 		.4byte	.LASF191
 6551 0dde 01       		.byte	0x1
 6552 0ddf 1D       		.byte	0x1d
 6553 0de0 C80D0000 		.4byte	0xdc8
 6554 0de4 05       		.uleb128 0x5
 6555 0de5 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 136


 6556 0de6 00000000 		.4byte	instructions
 6557 0dea 1E       		.uleb128 0x1e
 6558 0deb B6070000 		.4byte	.LASF192
 6559 0def 01       		.byte	0x1
 6560 0df0 1F       		.byte	0x1f
 6561 0df1 B7000000 		.4byte	0xb7
 6562 0df5 05       		.uleb128 0x5
 6563 0df6 03       		.byte	0x3
 6564 0df7 00000000 		.4byte	instructionLength
 6565 0dfb 20       		.uleb128 0x20
 6566 0dfc 8D010000 		.4byte	.LASF193
 6567 0e00 01       		.byte	0x1
 6568 0e01 A003     		.2byte	0x3a0
 6569 0e03 B7000000 		.4byte	0xb7
 6570 0e07 05       		.uleb128 0x5
 6571 0e08 03       		.byte	0x3
 6572 0e09 00000000 		.4byte	leftTurnCount
 6573 0e0d 20       		.uleb128 0x20
 6574 0e0e 61000000 		.4byte	.LASF194
 6575 0e12 01       		.byte	0x1
 6576 0e13 A103     		.2byte	0x3a1
 6577 0e15 B7000000 		.4byte	0xb7
 6578 0e19 05       		.uleb128 0x5
 6579 0e1a 03       		.byte	0x3
 6580 0e1b 00000000 		.4byte	rightTurnCount
 6581 0e1f 00       		.byte	0
 6582              		.section	.debug_abbrev,"",%progbits
 6583              	.Ldebug_abbrev0:
 6584 0000 01       		.uleb128 0x1
 6585 0001 11       		.uleb128 0x11
 6586 0002 01       		.byte	0x1
 6587 0003 25       		.uleb128 0x25
 6588 0004 0E       		.uleb128 0xe
 6589 0005 13       		.uleb128 0x13
 6590 0006 0B       		.uleb128 0xb
 6591 0007 03       		.uleb128 0x3
 6592 0008 0E       		.uleb128 0xe
 6593 0009 1B       		.uleb128 0x1b
 6594 000a 0E       		.uleb128 0xe
 6595 000b 55       		.uleb128 0x55
 6596 000c 17       		.uleb128 0x17
 6597 000d 11       		.uleb128 0x11
 6598 000e 01       		.uleb128 0x1
 6599 000f 10       		.uleb128 0x10
 6600 0010 17       		.uleb128 0x17
 6601 0011 00       		.byte	0
 6602 0012 00       		.byte	0
 6603 0013 02       		.uleb128 0x2
 6604 0014 24       		.uleb128 0x24
 6605 0015 00       		.byte	0
 6606 0016 0B       		.uleb128 0xb
 6607 0017 0B       		.uleb128 0xb
 6608 0018 3E       		.uleb128 0x3e
 6609 0019 0B       		.uleb128 0xb
 6610 001a 03       		.uleb128 0x3
 6611 001b 0E       		.uleb128 0xe
 6612 001c 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 137


 6613 001d 00       		.byte	0
 6614 001e 03       		.uleb128 0x3
 6615 001f 16       		.uleb128 0x16
 6616 0020 00       		.byte	0
 6617 0021 03       		.uleb128 0x3
 6618 0022 0E       		.uleb128 0xe
 6619 0023 3A       		.uleb128 0x3a
 6620 0024 0B       		.uleb128 0xb
 6621 0025 3B       		.uleb128 0x3b
 6622 0026 0B       		.uleb128 0xb
 6623 0027 49       		.uleb128 0x49
 6624 0028 13       		.uleb128 0x13
 6625 0029 00       		.byte	0
 6626 002a 00       		.byte	0
 6627 002b 04       		.uleb128 0x4
 6628 002c 24       		.uleb128 0x24
 6629 002d 00       		.byte	0
 6630 002e 0B       		.uleb128 0xb
 6631 002f 0B       		.uleb128 0xb
 6632 0030 3E       		.uleb128 0x3e
 6633 0031 0B       		.uleb128 0xb
 6634 0032 03       		.uleb128 0x3
 6635 0033 08       		.uleb128 0x8
 6636 0034 00       		.byte	0
 6637 0035 00       		.byte	0
 6638 0036 05       		.uleb128 0x5
 6639 0037 0F       		.uleb128 0xf
 6640 0038 00       		.byte	0
 6641 0039 0B       		.uleb128 0xb
 6642 003a 0B       		.uleb128 0xb
 6643 003b 49       		.uleb128 0x49
 6644 003c 13       		.uleb128 0x13
 6645 003d 00       		.byte	0
 6646 003e 00       		.byte	0
 6647 003f 06       		.uleb128 0x6
 6648 0040 16       		.uleb128 0x16
 6649 0041 00       		.byte	0
 6650 0042 03       		.uleb128 0x3
 6651 0043 0E       		.uleb128 0xe
 6652 0044 3A       		.uleb128 0x3a
 6653 0045 0B       		.uleb128 0xb
 6654 0046 3B       		.uleb128 0x3b
 6655 0047 05       		.uleb128 0x5
 6656 0048 49       		.uleb128 0x49
 6657 0049 13       		.uleb128 0x13
 6658 004a 00       		.byte	0
 6659 004b 00       		.byte	0
 6660 004c 07       		.uleb128 0x7
 6661 004d 01       		.uleb128 0x1
 6662 004e 01       		.byte	0x1
 6663 004f 49       		.uleb128 0x49
 6664 0050 13       		.uleb128 0x13
 6665 0051 01       		.uleb128 0x1
 6666 0052 13       		.uleb128 0x13
 6667 0053 00       		.byte	0
 6668 0054 00       		.byte	0
 6669 0055 08       		.uleb128 0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 138


 6670 0056 21       		.uleb128 0x21
 6671 0057 00       		.byte	0
 6672 0058 49       		.uleb128 0x49
 6673 0059 13       		.uleb128 0x13
 6674 005a 2F       		.uleb128 0x2f
 6675 005b 0B       		.uleb128 0xb
 6676 005c 00       		.byte	0
 6677 005d 00       		.byte	0
 6678 005e 09       		.uleb128 0x9
 6679 005f 04       		.uleb128 0x4
 6680 0060 01       		.byte	0x1
 6681 0061 03       		.uleb128 0x3
 6682 0062 0E       		.uleb128 0xe
 6683 0063 0B       		.uleb128 0xb
 6684 0064 0B       		.uleb128 0xb
 6685 0065 3A       		.uleb128 0x3a
 6686 0066 0B       		.uleb128 0xb
 6687 0067 3B       		.uleb128 0x3b
 6688 0068 0B       		.uleb128 0xb
 6689 0069 01       		.uleb128 0x1
 6690 006a 13       		.uleb128 0x13
 6691 006b 00       		.byte	0
 6692 006c 00       		.byte	0
 6693 006d 0A       		.uleb128 0xa
 6694 006e 28       		.uleb128 0x28
 6695 006f 00       		.byte	0
 6696 0070 03       		.uleb128 0x3
 6697 0071 0E       		.uleb128 0xe
 6698 0072 1C       		.uleb128 0x1c
 6699 0073 0D       		.uleb128 0xd
 6700 0074 00       		.byte	0
 6701 0075 00       		.byte	0
 6702 0076 0B       		.uleb128 0xb
 6703 0077 13       		.uleb128 0x13
 6704 0078 01       		.byte	0x1
 6705 0079 03       		.uleb128 0x3
 6706 007a 0E       		.uleb128 0xe
 6707 007b 0B       		.uleb128 0xb
 6708 007c 0B       		.uleb128 0xb
 6709 007d 3A       		.uleb128 0x3a
 6710 007e 0B       		.uleb128 0xb
 6711 007f 3B       		.uleb128 0x3b
 6712 0080 0B       		.uleb128 0xb
 6713 0081 01       		.uleb128 0x1
 6714 0082 13       		.uleb128 0x13
 6715 0083 00       		.byte	0
 6716 0084 00       		.byte	0
 6717 0085 0C       		.uleb128 0xc
 6718 0086 0D       		.uleb128 0xd
 6719 0087 00       		.byte	0
 6720 0088 03       		.uleb128 0x3
 6721 0089 0E       		.uleb128 0xe
 6722 008a 3A       		.uleb128 0x3a
 6723 008b 0B       		.uleb128 0xb
 6724 008c 3B       		.uleb128 0x3b
 6725 008d 0B       		.uleb128 0xb
 6726 008e 49       		.uleb128 0x49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 139


 6727 008f 13       		.uleb128 0x13
 6728 0090 38       		.uleb128 0x38
 6729 0091 0B       		.uleb128 0xb
 6730 0092 00       		.byte	0
 6731 0093 00       		.byte	0
 6732 0094 0D       		.uleb128 0xd
 6733 0095 2E       		.uleb128 0x2e
 6734 0096 00       		.byte	0
 6735 0097 3F       		.uleb128 0x3f
 6736 0098 19       		.uleb128 0x19
 6737 0099 03       		.uleb128 0x3
 6738 009a 0E       		.uleb128 0xe
 6739 009b 3A       		.uleb128 0x3a
 6740 009c 0B       		.uleb128 0xb
 6741 009d 3B       		.uleb128 0x3b
 6742 009e 0B       		.uleb128 0xb
 6743 009f 27       		.uleb128 0x27
 6744 00a0 19       		.uleb128 0x19
 6745 00a1 11       		.uleb128 0x11
 6746 00a2 01       		.uleb128 0x1
 6747 00a3 12       		.uleb128 0x12
 6748 00a4 06       		.uleb128 0x6
 6749 00a5 40       		.uleb128 0x40
 6750 00a6 18       		.uleb128 0x18
 6751 00a7 9742     		.uleb128 0x2117
 6752 00a9 19       		.uleb128 0x19
 6753 00aa 00       		.byte	0
 6754 00ab 00       		.byte	0
 6755 00ac 0E       		.uleb128 0xe
 6756 00ad 2E       		.uleb128 0x2e
 6757 00ae 00       		.byte	0
 6758 00af 3F       		.uleb128 0x3f
 6759 00b0 19       		.uleb128 0x19
 6760 00b1 03       		.uleb128 0x3
 6761 00b2 0E       		.uleb128 0xe
 6762 00b3 3A       		.uleb128 0x3a
 6763 00b4 0B       		.uleb128 0xb
 6764 00b5 3B       		.uleb128 0x3b
 6765 00b6 0B       		.uleb128 0xb
 6766 00b7 27       		.uleb128 0x27
 6767 00b8 19       		.uleb128 0x19
 6768 00b9 11       		.uleb128 0x11
 6769 00ba 01       		.uleb128 0x1
 6770 00bb 12       		.uleb128 0x12
 6771 00bc 06       		.uleb128 0x6
 6772 00bd 40       		.uleb128 0x40
 6773 00be 18       		.uleb128 0x18
 6774 00bf 9642     		.uleb128 0x2116
 6775 00c1 19       		.uleb128 0x19
 6776 00c2 00       		.byte	0
 6777 00c3 00       		.byte	0
 6778 00c4 0F       		.uleb128 0xf
 6779 00c5 2E       		.uleb128 0x2e
 6780 00c6 01       		.byte	0x1
 6781 00c7 3F       		.uleb128 0x3f
 6782 00c8 19       		.uleb128 0x19
 6783 00c9 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 140


 6784 00ca 0E       		.uleb128 0xe
 6785 00cb 3A       		.uleb128 0x3a
 6786 00cc 0B       		.uleb128 0xb
 6787 00cd 3B       		.uleb128 0x3b
 6788 00ce 0B       		.uleb128 0xb
 6789 00cf 49       		.uleb128 0x49
 6790 00d0 13       		.uleb128 0x13
 6791 00d1 11       		.uleb128 0x11
 6792 00d2 01       		.uleb128 0x1
 6793 00d3 12       		.uleb128 0x12
 6794 00d4 06       		.uleb128 0x6
 6795 00d5 40       		.uleb128 0x40
 6796 00d6 18       		.uleb128 0x18
 6797 00d7 9642     		.uleb128 0x2116
 6798 00d9 19       		.uleb128 0x19
 6799 00da 01       		.uleb128 0x1
 6800 00db 13       		.uleb128 0x13
 6801 00dc 00       		.byte	0
 6802 00dd 00       		.byte	0
 6803 00de 10       		.uleb128 0x10
 6804 00df 34       		.uleb128 0x34
 6805 00e0 00       		.byte	0
 6806 00e1 03       		.uleb128 0x3
 6807 00e2 0E       		.uleb128 0xe
 6808 00e3 3A       		.uleb128 0x3a
 6809 00e4 0B       		.uleb128 0xb
 6810 00e5 3B       		.uleb128 0x3b
 6811 00e6 05       		.uleb128 0x5
 6812 00e7 49       		.uleb128 0x49
 6813 00e8 13       		.uleb128 0x13
 6814 00e9 02       		.uleb128 0x2
 6815 00ea 18       		.uleb128 0x18
 6816 00eb 00       		.byte	0
 6817 00ec 00       		.byte	0
 6818 00ed 11       		.uleb128 0x11
 6819 00ee 0B       		.uleb128 0xb
 6820 00ef 01       		.byte	0x1
 6821 00f0 11       		.uleb128 0x11
 6822 00f1 01       		.uleb128 0x1
 6823 00f2 12       		.uleb128 0x12
 6824 00f3 06       		.uleb128 0x6
 6825 00f4 00       		.byte	0
 6826 00f5 00       		.byte	0
 6827 00f6 12       		.uleb128 0x12
 6828 00f7 0B       		.uleb128 0xb
 6829 00f8 01       		.byte	0x1
 6830 00f9 11       		.uleb128 0x11
 6831 00fa 01       		.uleb128 0x1
 6832 00fb 12       		.uleb128 0x12
 6833 00fc 06       		.uleb128 0x6
 6834 00fd 01       		.uleb128 0x1
 6835 00fe 13       		.uleb128 0x13
 6836 00ff 00       		.byte	0
 6837 0100 00       		.byte	0
 6838 0101 13       		.uleb128 0x13
 6839 0102 34       		.uleb128 0x34
 6840 0103 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 141


 6841 0104 03       		.uleb128 0x3
 6842 0105 08       		.uleb128 0x8
 6843 0106 3A       		.uleb128 0x3a
 6844 0107 0B       		.uleb128 0xb
 6845 0108 3B       		.uleb128 0x3b
 6846 0109 05       		.uleb128 0x5
 6847 010a 49       		.uleb128 0x49
 6848 010b 13       		.uleb128 0x13
 6849 010c 02       		.uleb128 0x2
 6850 010d 18       		.uleb128 0x18
 6851 010e 00       		.byte	0
 6852 010f 00       		.byte	0
 6853 0110 14       		.uleb128 0x14
 6854 0111 2E       		.uleb128 0x2e
 6855 0112 01       		.byte	0x1
 6856 0113 3F       		.uleb128 0x3f
 6857 0114 19       		.uleb128 0x19
 6858 0115 03       		.uleb128 0x3
 6859 0116 0E       		.uleb128 0xe
 6860 0117 3A       		.uleb128 0x3a
 6861 0118 0B       		.uleb128 0xb
 6862 0119 3B       		.uleb128 0x3b
 6863 011a 05       		.uleb128 0x5
 6864 011b 11       		.uleb128 0x11
 6865 011c 01       		.uleb128 0x1
 6866 011d 12       		.uleb128 0x12
 6867 011e 06       		.uleb128 0x6
 6868 011f 40       		.uleb128 0x40
 6869 0120 18       		.uleb128 0x18
 6870 0121 9742     		.uleb128 0x2117
 6871 0123 19       		.uleb128 0x19
 6872 0124 01       		.uleb128 0x1
 6873 0125 13       		.uleb128 0x13
 6874 0126 00       		.byte	0
 6875 0127 00       		.byte	0
 6876 0128 15       		.uleb128 0x15
 6877 0129 2E       		.uleb128 0x2e
 6878 012a 01       		.byte	0x1
 6879 012b 3F       		.uleb128 0x3f
 6880 012c 19       		.uleb128 0x19
 6881 012d 03       		.uleb128 0x3
 6882 012e 0E       		.uleb128 0xe
 6883 012f 3A       		.uleb128 0x3a
 6884 0130 0B       		.uleb128 0xb
 6885 0131 3B       		.uleb128 0x3b
 6886 0132 05       		.uleb128 0x5
 6887 0133 27       		.uleb128 0x27
 6888 0134 19       		.uleb128 0x19
 6889 0135 11       		.uleb128 0x11
 6890 0136 01       		.uleb128 0x1
 6891 0137 12       		.uleb128 0x12
 6892 0138 06       		.uleb128 0x6
 6893 0139 40       		.uleb128 0x40
 6894 013a 18       		.uleb128 0x18
 6895 013b 9642     		.uleb128 0x2116
 6896 013d 19       		.uleb128 0x19
 6897 013e 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 142


 6898 013f 13       		.uleb128 0x13
 6899 0140 00       		.byte	0
 6900 0141 00       		.byte	0
 6901 0142 16       		.uleb128 0x16
 6902 0143 05       		.uleb128 0x5
 6903 0144 00       		.byte	0
 6904 0145 03       		.uleb128 0x3
 6905 0146 08       		.uleb128 0x8
 6906 0147 3A       		.uleb128 0x3a
 6907 0148 0B       		.uleb128 0xb
 6908 0149 3B       		.uleb128 0x3b
 6909 014a 05       		.uleb128 0x5
 6910 014b 49       		.uleb128 0x49
 6911 014c 13       		.uleb128 0x13
 6912 014d 02       		.uleb128 0x2
 6913 014e 18       		.uleb128 0x18
 6914 014f 00       		.byte	0
 6915 0150 00       		.byte	0
 6916 0151 17       		.uleb128 0x17
 6917 0152 2E       		.uleb128 0x2e
 6918 0153 01       		.byte	0x1
 6919 0154 3F       		.uleb128 0x3f
 6920 0155 19       		.uleb128 0x19
 6921 0156 03       		.uleb128 0x3
 6922 0157 0E       		.uleb128 0xe
 6923 0158 3A       		.uleb128 0x3a
 6924 0159 0B       		.uleb128 0xb
 6925 015a 3B       		.uleb128 0x3b
 6926 015b 05       		.uleb128 0x5
 6927 015c 11       		.uleb128 0x11
 6928 015d 01       		.uleb128 0x1
 6929 015e 12       		.uleb128 0x12
 6930 015f 06       		.uleb128 0x6
 6931 0160 40       		.uleb128 0x40
 6932 0161 18       		.uleb128 0x18
 6933 0162 9642     		.uleb128 0x2116
 6934 0164 19       		.uleb128 0x19
 6935 0165 01       		.uleb128 0x1
 6936 0166 13       		.uleb128 0x13
 6937 0167 00       		.byte	0
 6938 0168 00       		.byte	0
 6939 0169 18       		.uleb128 0x18
 6940 016a 05       		.uleb128 0x5
 6941 016b 00       		.byte	0
 6942 016c 03       		.uleb128 0x3
 6943 016d 0E       		.uleb128 0xe
 6944 016e 3A       		.uleb128 0x3a
 6945 016f 0B       		.uleb128 0xb
 6946 0170 3B       		.uleb128 0x3b
 6947 0171 05       		.uleb128 0x5
 6948 0172 49       		.uleb128 0x49
 6949 0173 13       		.uleb128 0x13
 6950 0174 02       		.uleb128 0x2
 6951 0175 18       		.uleb128 0x18
 6952 0176 00       		.byte	0
 6953 0177 00       		.byte	0
 6954 0178 19       		.uleb128 0x19
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 143


 6955 0179 2E       		.uleb128 0x2e
 6956 017a 00       		.byte	0
 6957 017b 3F       		.uleb128 0x3f
 6958 017c 19       		.uleb128 0x19
 6959 017d 03       		.uleb128 0x3
 6960 017e 0E       		.uleb128 0xe
 6961 017f 3A       		.uleb128 0x3a
 6962 0180 0B       		.uleb128 0xb
 6963 0181 3B       		.uleb128 0x3b
 6964 0182 05       		.uleb128 0x5
 6965 0183 11       		.uleb128 0x11
 6966 0184 01       		.uleb128 0x1
 6967 0185 12       		.uleb128 0x12
 6968 0186 06       		.uleb128 0x6
 6969 0187 40       		.uleb128 0x40
 6970 0188 18       		.uleb128 0x18
 6971 0189 9642     		.uleb128 0x2116
 6972 018b 19       		.uleb128 0x19
 6973 018c 00       		.byte	0
 6974 018d 00       		.byte	0
 6975 018e 1A       		.uleb128 0x1a
 6976 018f 2E       		.uleb128 0x2e
 6977 0190 00       		.byte	0
 6978 0191 3F       		.uleb128 0x3f
 6979 0192 19       		.uleb128 0x19
 6980 0193 03       		.uleb128 0x3
 6981 0194 0E       		.uleb128 0xe
 6982 0195 3A       		.uleb128 0x3a
 6983 0196 0B       		.uleb128 0xb
 6984 0197 3B       		.uleb128 0x3b
 6985 0198 05       		.uleb128 0x5
 6986 0199 11       		.uleb128 0x11
 6987 019a 01       		.uleb128 0x1
 6988 019b 12       		.uleb128 0x12
 6989 019c 06       		.uleb128 0x6
 6990 019d 40       		.uleb128 0x40
 6991 019e 18       		.uleb128 0x18
 6992 019f 9742     		.uleb128 0x2117
 6993 01a1 19       		.uleb128 0x19
 6994 01a2 00       		.byte	0
 6995 01a3 00       		.byte	0
 6996 01a4 1B       		.uleb128 0x1b
 6997 01a5 34       		.uleb128 0x34
 6998 01a6 00       		.byte	0
 6999 01a7 03       		.uleb128 0x3
 7000 01a8 0E       		.uleb128 0xe
 7001 01a9 3A       		.uleb128 0x3a
 7002 01aa 0B       		.uleb128 0xb
 7003 01ab 3B       		.uleb128 0x3b
 7004 01ac 05       		.uleb128 0x5
 7005 01ad 49       		.uleb128 0x49
 7006 01ae 13       		.uleb128 0x13
 7007 01af 3F       		.uleb128 0x3f
 7008 01b0 19       		.uleb128 0x19
 7009 01b1 3C       		.uleb128 0x3c
 7010 01b2 19       		.uleb128 0x19
 7011 01b3 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 144


 7012 01b4 00       		.byte	0
 7013 01b5 1C       		.uleb128 0x1c
 7014 01b6 35       		.uleb128 0x35
 7015 01b7 00       		.byte	0
 7016 01b8 49       		.uleb128 0x49
 7017 01b9 13       		.uleb128 0x13
 7018 01ba 00       		.byte	0
 7019 01bb 00       		.byte	0
 7020 01bc 1D       		.uleb128 0x1d
 7021 01bd 34       		.uleb128 0x34
 7022 01be 00       		.byte	0
 7023 01bf 03       		.uleb128 0x3
 7024 01c0 08       		.uleb128 0x8
 7025 01c1 3A       		.uleb128 0x3a
 7026 01c2 0B       		.uleb128 0xb
 7027 01c3 3B       		.uleb128 0x3b
 7028 01c4 0B       		.uleb128 0xb
 7029 01c5 49       		.uleb128 0x49
 7030 01c6 13       		.uleb128 0x13
 7031 01c7 3F       		.uleb128 0x3f
 7032 01c8 19       		.uleb128 0x19
 7033 01c9 02       		.uleb128 0x2
 7034 01ca 18       		.uleb128 0x18
 7035 01cb 00       		.byte	0
 7036 01cc 00       		.byte	0
 7037 01cd 1E       		.uleb128 0x1e
 7038 01ce 34       		.uleb128 0x34
 7039 01cf 00       		.byte	0
 7040 01d0 03       		.uleb128 0x3
 7041 01d1 0E       		.uleb128 0xe
 7042 01d2 3A       		.uleb128 0x3a
 7043 01d3 0B       		.uleb128 0xb
 7044 01d4 3B       		.uleb128 0x3b
 7045 01d5 0B       		.uleb128 0xb
 7046 01d6 49       		.uleb128 0x49
 7047 01d7 13       		.uleb128 0x13
 7048 01d8 3F       		.uleb128 0x3f
 7049 01d9 19       		.uleb128 0x19
 7050 01da 02       		.uleb128 0x2
 7051 01db 18       		.uleb128 0x18
 7052 01dc 00       		.byte	0
 7053 01dd 00       		.byte	0
 7054 01de 1F       		.uleb128 0x1f
 7055 01df 21       		.uleb128 0x21
 7056 01e0 00       		.byte	0
 7057 01e1 49       		.uleb128 0x49
 7058 01e2 13       		.uleb128 0x13
 7059 01e3 2F       		.uleb128 0x2f
 7060 01e4 05       		.uleb128 0x5
 7061 01e5 00       		.byte	0
 7062 01e6 00       		.byte	0
 7063 01e7 20       		.uleb128 0x20
 7064 01e8 34       		.uleb128 0x34
 7065 01e9 00       		.byte	0
 7066 01ea 03       		.uleb128 0x3
 7067 01eb 0E       		.uleb128 0xe
 7068 01ec 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 145


 7069 01ed 0B       		.uleb128 0xb
 7070 01ee 3B       		.uleb128 0x3b
 7071 01ef 05       		.uleb128 0x5
 7072 01f0 49       		.uleb128 0x49
 7073 01f1 13       		.uleb128 0x13
 7074 01f2 3F       		.uleb128 0x3f
 7075 01f3 19       		.uleb128 0x19
 7076 01f4 02       		.uleb128 0x2
 7077 01f5 18       		.uleb128 0x18
 7078 01f6 00       		.byte	0
 7079 01f7 00       		.byte	0
 7080 01f8 00       		.byte	0
 7081              		.section	.debug_aranges,"",%progbits
 7082 0000 6C010000 		.4byte	0x16c
 7083 0004 0200     		.2byte	0x2
 7084 0006 00000000 		.4byte	.Ldebug_info0
 7085 000a 04       		.byte	0x4
 7086 000b 00       		.byte	0
 7087 000c 0000     		.2byte	0
 7088 000e 0000     		.2byte	0
 7089 0010 00000000 		.4byte	.LFB63
 7090 0014 0C000000 		.4byte	.LFE63-.LFB63
 7091 0018 00000000 		.4byte	.LFB64
 7092 001c 2C000000 		.4byte	.LFE64-.LFB64
 7093 0020 00000000 		.4byte	.LFB65
 7094 0024 A4010000 		.4byte	.LFE65-.LFB65
 7095 0028 00000000 		.4byte	.LFB66
 7096 002c AC000000 		.4byte	.LFE66-.LFB66
 7097 0030 00000000 		.4byte	.LFB67
 7098 0034 20000000 		.4byte	.LFE67-.LFB67
 7099 0038 00000000 		.4byte	.LFB68
 7100 003c 28000000 		.4byte	.LFE68-.LFB68
 7101 0040 00000000 		.4byte	.LFB69
 7102 0044 0A000000 		.4byte	.LFE69-.LFB69
 7103 0048 00000000 		.4byte	.LFB70
 7104 004c 28000000 		.4byte	.LFE70-.LFB70
 7105 0050 00000000 		.4byte	.LFB71
 7106 0054 60060000 		.4byte	.LFE71-.LFB71
 7107 0058 00000000 		.4byte	.LFB72
 7108 005c 60010000 		.4byte	.LFE72-.LFB72
 7109 0060 00000000 		.4byte	.LFB73
 7110 0064 18000000 		.4byte	.LFE73-.LFB73
 7111 0068 00000000 		.4byte	.LFB74
 7112 006c 18000000 		.4byte	.LFE74-.LFB74
 7113 0070 00000000 		.4byte	.LFB75
 7114 0074 54000000 		.4byte	.LFE75-.LFB75
 7115 0078 00000000 		.4byte	.LFB76
 7116 007c F4000000 		.4byte	.LFE76-.LFB76
 7117 0080 00000000 		.4byte	.LFB77
 7118 0084 18000000 		.4byte	.LFE77-.LFB77
 7119 0088 00000000 		.4byte	.LFB78
 7120 008c 18000000 		.4byte	.LFE78-.LFB78
 7121 0090 00000000 		.4byte	.LFB79
 7122 0094 22000000 		.4byte	.LFE79-.LFB79
 7123 0098 00000000 		.4byte	.LFB80
 7124 009c 1C000000 		.4byte	.LFE80-.LFB80
 7125 00a0 00000000 		.4byte	.LFB81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 146


 7126 00a4 28000000 		.4byte	.LFE81-.LFB81
 7127 00a8 00000000 		.4byte	.LFB82
 7128 00ac 2C000000 		.4byte	.LFE82-.LFB82
 7129 00b0 00000000 		.4byte	.LFB83
 7130 00b4 44000000 		.4byte	.LFE83-.LFB83
 7131 00b8 00000000 		.4byte	.LFB84
 7132 00bc 38000000 		.4byte	.LFE84-.LFB84
 7133 00c0 00000000 		.4byte	.LFB85
 7134 00c4 38000000 		.4byte	.LFE85-.LFB85
 7135 00c8 00000000 		.4byte	.LFB86
 7136 00cc 38000000 		.4byte	.LFE86-.LFB86
 7137 00d0 00000000 		.4byte	.LFB87
 7138 00d4 14000000 		.4byte	.LFE87-.LFB87
 7139 00d8 00000000 		.4byte	.LFB88
 7140 00dc 18000000 		.4byte	.LFE88-.LFB88
 7141 00e0 00000000 		.4byte	.LFB89
 7142 00e4 18000000 		.4byte	.LFE89-.LFB89
 7143 00e8 00000000 		.4byte	.LFB90
 7144 00ec 18000000 		.4byte	.LFE90-.LFB90
 7145 00f0 00000000 		.4byte	.LFB91
 7146 00f4 18000000 		.4byte	.LFE91-.LFB91
 7147 00f8 00000000 		.4byte	.LFB92
 7148 00fc B8000000 		.4byte	.LFE92-.LFB92
 7149 0100 00000000 		.4byte	.LFB93
 7150 0104 F8010000 		.4byte	.LFE93-.LFB93
 7151 0108 00000000 		.4byte	.LFB94
 7152 010c 40000000 		.4byte	.LFE94-.LFB94
 7153 0110 00000000 		.4byte	.LFB95
 7154 0114 40000000 		.4byte	.LFE95-.LFB95
 7155 0118 00000000 		.4byte	.LFB96
 7156 011c 30020000 		.4byte	.LFE96-.LFB96
 7157 0120 00000000 		.4byte	.LFB97
 7158 0124 0C000000 		.4byte	.LFE97-.LFB97
 7159 0128 00000000 		.4byte	.LFB98
 7160 012c 4C010000 		.4byte	.LFE98-.LFB98
 7161 0130 00000000 		.4byte	.LFB99
 7162 0134 0C000000 		.4byte	.LFE99-.LFB99
 7163 0138 00000000 		.4byte	.LFB100
 7164 013c C0000000 		.4byte	.LFE100-.LFB100
 7165 0140 00000000 		.4byte	.LFB101
 7166 0144 B8000000 		.4byte	.LFE101-.LFB101
 7167 0148 00000000 		.4byte	.LFB102
 7168 014c 4A000000 		.4byte	.LFE102-.LFB102
 7169 0150 00000000 		.4byte	.LFB103
 7170 0154 68000000 		.4byte	.LFE103-.LFB103
 7171 0158 00000000 		.4byte	.LFB104
 7172 015c 50000000 		.4byte	.LFE104-.LFB104
 7173 0160 00000000 		.4byte	.LFB105
 7174 0164 0C000000 		.4byte	.LFE105-.LFB105
 7175 0168 00000000 		.4byte	0
 7176 016c 00000000 		.4byte	0
 7177              		.section	.debug_ranges,"",%progbits
 7178              	.Ldebug_ranges0:
 7179 0000 00000000 		.4byte	.LFB63
 7180 0004 0C000000 		.4byte	.LFE63
 7181 0008 00000000 		.4byte	.LFB64
 7182 000c 2C000000 		.4byte	.LFE64
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 147


 7183 0010 00000000 		.4byte	.LFB65
 7184 0014 A4010000 		.4byte	.LFE65
 7185 0018 00000000 		.4byte	.LFB66
 7186 001c AC000000 		.4byte	.LFE66
 7187 0020 00000000 		.4byte	.LFB67
 7188 0024 20000000 		.4byte	.LFE67
 7189 0028 00000000 		.4byte	.LFB68
 7190 002c 28000000 		.4byte	.LFE68
 7191 0030 00000000 		.4byte	.LFB69
 7192 0034 0A000000 		.4byte	.LFE69
 7193 0038 00000000 		.4byte	.LFB70
 7194 003c 28000000 		.4byte	.LFE70
 7195 0040 00000000 		.4byte	.LFB71
 7196 0044 60060000 		.4byte	.LFE71
 7197 0048 00000000 		.4byte	.LFB72
 7198 004c 60010000 		.4byte	.LFE72
 7199 0050 00000000 		.4byte	.LFB73
 7200 0054 18000000 		.4byte	.LFE73
 7201 0058 00000000 		.4byte	.LFB74
 7202 005c 18000000 		.4byte	.LFE74
 7203 0060 00000000 		.4byte	.LFB75
 7204 0064 54000000 		.4byte	.LFE75
 7205 0068 00000000 		.4byte	.LFB76
 7206 006c F4000000 		.4byte	.LFE76
 7207 0070 00000000 		.4byte	.LFB77
 7208 0074 18000000 		.4byte	.LFE77
 7209 0078 00000000 		.4byte	.LFB78
 7210 007c 18000000 		.4byte	.LFE78
 7211 0080 00000000 		.4byte	.LFB79
 7212 0084 22000000 		.4byte	.LFE79
 7213 0088 00000000 		.4byte	.LFB80
 7214 008c 1C000000 		.4byte	.LFE80
 7215 0090 00000000 		.4byte	.LFB81
 7216 0094 28000000 		.4byte	.LFE81
 7217 0098 00000000 		.4byte	.LFB82
 7218 009c 2C000000 		.4byte	.LFE82
 7219 00a0 00000000 		.4byte	.LFB83
 7220 00a4 44000000 		.4byte	.LFE83
 7221 00a8 00000000 		.4byte	.LFB84
 7222 00ac 38000000 		.4byte	.LFE84
 7223 00b0 00000000 		.4byte	.LFB85
 7224 00b4 38000000 		.4byte	.LFE85
 7225 00b8 00000000 		.4byte	.LFB86
 7226 00bc 38000000 		.4byte	.LFE86
 7227 00c0 00000000 		.4byte	.LFB87
 7228 00c4 14000000 		.4byte	.LFE87
 7229 00c8 00000000 		.4byte	.LFB88
 7230 00cc 18000000 		.4byte	.LFE88
 7231 00d0 00000000 		.4byte	.LFB89
 7232 00d4 18000000 		.4byte	.LFE89
 7233 00d8 00000000 		.4byte	.LFB90
 7234 00dc 18000000 		.4byte	.LFE90
 7235 00e0 00000000 		.4byte	.LFB91
 7236 00e4 18000000 		.4byte	.LFE91
 7237 00e8 00000000 		.4byte	.LFB92
 7238 00ec B8000000 		.4byte	.LFE92
 7239 00f0 00000000 		.4byte	.LFB93
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 148


 7240 00f4 F8010000 		.4byte	.LFE93
 7241 00f8 00000000 		.4byte	.LFB94
 7242 00fc 40000000 		.4byte	.LFE94
 7243 0100 00000000 		.4byte	.LFB95
 7244 0104 40000000 		.4byte	.LFE95
 7245 0108 00000000 		.4byte	.LFB96
 7246 010c 30020000 		.4byte	.LFE96
 7247 0110 00000000 		.4byte	.LFB97
 7248 0114 0C000000 		.4byte	.LFE97
 7249 0118 00000000 		.4byte	.LFB98
 7250 011c 4C010000 		.4byte	.LFE98
 7251 0120 00000000 		.4byte	.LFB99
 7252 0124 0C000000 		.4byte	.LFE99
 7253 0128 00000000 		.4byte	.LFB100
 7254 012c C0000000 		.4byte	.LFE100
 7255 0130 00000000 		.4byte	.LFB101
 7256 0134 B8000000 		.4byte	.LFE101
 7257 0138 00000000 		.4byte	.LFB102
 7258 013c 4A000000 		.4byte	.LFE102
 7259 0140 00000000 		.4byte	.LFB103
 7260 0144 68000000 		.4byte	.LFE103
 7261 0148 00000000 		.4byte	.LFB104
 7262 014c 50000000 		.4byte	.LFE104
 7263 0150 00000000 		.4byte	.LFB105
 7264 0154 0C000000 		.4byte	.LFE105
 7265 0158 00000000 		.4byte	0
 7266 015c 00000000 		.4byte	0
 7267              		.section	.debug_line,"",%progbits
 7268              	.Ldebug_line0:
 7269 0000 48070000 		.section	.debug_str,"MS",%progbits,1
 7269      02006701 
 7269      00000201 
 7269      FB0E0D00 
 7269      01010101 
 7270              	.LASF141:
 7271 0000 64697265 		.ascii	"direction\000"
 7271      6374696F 
 7271      6E00
 7272              	.LASF189:
 7273 000a 74726163 		.ascii	"tracked_direction\000"
 7273      6B65645F 
 7273      64697265 
 7273      6374696F 
 7273      6E00
 7274              	.LASF197:
 7275 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7275      73657273 
 7275      5C4C6F67 
 7275      616E5C44 
 7275      65736B74 
 7276 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7276      315F436C 
 7276      6173732E 
 7276      63796473 
 7276      6E00
 7277              	.LASF25:
 7278 005b 52545552 		.ascii	"RTURN\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 149


 7278      4E00
 7279              	.LASF194:
 7280 0061 72696768 		.ascii	"rightTurnCount\000"
 7280      74547572 
 7280      6E436F75 
 7280      6E7400
 7281              	.LASF39:
 7282 0070 44455354 		.ascii	"DEST_TEST\000"
 7282      5F544553 
 7282      5400
 7283              	.LASF149:
 7284 007a 71756164 		.ascii	"quad_diff1\000"
 7284      5F646966 
 7284      663100
 7285              	.LASF150:
 7286 0085 71756164 		.ascii	"quad_diff2\000"
 7286      5F646966 
 7286      663200
 7287              	.LASF103:
 7288 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7288      5F446563 
 7288      5F726573 
 7288      706F6E73 
 7288      6500
 7289              	.LASF168:
 7290 00a2 70726576 		.ascii	"prevVoltage\000"
 7290      566F6C74 
 7290      61676500 
 7291              	.LASF152:
 7292 00ae 73746172 		.ascii	"start_turn_count\000"
 7292      745F7475 
 7292      726E5F63 
 7292      6F756E74 
 7292      00
 7293              	.LASF10:
 7294 00bf 756E7369 		.ascii	"unsigned int\000"
 7294      676E6564 
 7294      20696E74 
 7294      00
 7295              	.LASF178:
 7296 00cc 74726163 		.ascii	"track_mode\000"
 7296      6B5F6D6F 
 7296      646500
 7297              	.LASF5:
 7298 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7298      7433325F 
 7298      7400
 7299              	.LASF19:
 7300 00e1 696E7431 		.ascii	"int16\000"
 7300      3600
 7301              	.LASF175:
 7302 00e7 73797374 		.ascii	"system_state\000"
 7302      656D5F73 
 7302      74617465 
 7302      00
 7303              	.LASF24:
 7304 00f4 4C545552 		.ascii	"LTURN\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 150


 7304      4E00
 7305              	.LASF159:
 7306 00fa 74617267 		.ascii	"target_distance_quad\000"
 7306      65745F64 
 7306      69737461 
 7306      6E63655F 
 7306      71756164 
 7307              	.LASF27:
 7308 010f 54524143 		.ascii	"TRACKING\000"
 7308      4B494E47 
 7308      00
 7309              	.LASF169:
 7310 0118 70726576 		.ascii	"prevVoltage2\000"
 7310      566F6C74 
 7310      61676532 
 7310      00
 7311              	.LASF183:
 7312 0125 73656E73 		.ascii	"sensorsDisabled\000"
 7312      6F727344 
 7312      69736162 
 7312      6C656400 
 7313              	.LASF70:
 7314 0135 7061636B 		.ascii	"packet_bytes\000"
 7314      65745F62 
 7314      79746573 
 7314      00
 7315              	.LASF54:
 7316 0142 67325F78 		.ascii	"g2_xpos\000"
 7316      706F7300 
 7317              	.LASF32:
 7318 014a 6D6F6465 		.ascii	"mode\000"
 7318      00
 7319              	.LASF145:
 7320 014f 71756164 		.ascii	"quad_count1\000"
 7320      5F636F75 
 7320      6E743100 
 7321              	.LASF146:
 7322 015b 71756164 		.ascii	"quad_count2\000"
 7322      5F636F75 
 7322      6E743200 
 7323              	.LASF112:
 7324 0167 74726163 		.ascii	"trackLineU\000"
 7324      6B4C696E 
 7324      655500
 7325              	.LASF188:
 7326 0172 726F626F 		.ascii	"robot_direction\000"
 7326      745F6469 
 7326      72656374 
 7326      696F6E00 
 7327              	.LASF111:
 7328 0182 74726163 		.ascii	"trackLineZ\000"
 7328      6B4C696E 
 7328      655A00
 7329              	.LASF193:
 7330 018d 6C656674 		.ascii	"leftTurnCount\000"
 7330      5475726E 
 7330      436F756E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 151


 7330      7400
 7331              	.LASF181:
 7332 019b 73706565 		.ascii	"speed\000"
 7332      6400
 7333              	.LASF36:
 7334 01a1 53515541 		.ascii	"SQUARE_TRACK\000"
 7334      52455F54 
 7334      5241434B 
 7334      00
 7335              	.LASF137:
 7336 01ae 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7336      5F72665F 
 7336      7472616E 
 7336      736D6973 
 7336      73696F6E 
 7337              	.LASF138:
 7338 01ca 666C6167 		.ascii	"flag_print_rf\000"
 7338      5F707269 
 7338      6E745F72 
 7338      6600
 7339              	.LASF177:
 7340 01d8 6D6F7665 		.ascii	"movement_state\000"
 7340      6D656E74 
 7340      5F737461 
 7340      746500
 7341              	.LASF28:
 7342 01e7 54524143 		.ascii	"TRACKING_U\000"
 7342      4B494E47 
 7342      5F5500
 7343              	.LASF93:
 7344 01f2 696E6974 		.ascii	"initForward\000"
 7344      466F7277 
 7344      61726400 
 7345              	.LASF14:
 7346 01fe 75696E74 		.ascii	"uint32_t\000"
 7346      33325F74 
 7346      00
 7347              	.LASF57:
 7348 0207 67325F64 		.ascii	"g2_direction\000"
 7348      69726563 
 7348      74696F6E 
 7348      00
 7349              	.LASF60:
 7350 0214 6973725F 		.ascii	"isr_quad1\000"
 7350      71756164 
 7350      3100
 7351              	.LASF20:
 7352 021e 666C6F61 		.ascii	"float\000"
 7352      7400
 7353              	.LASF78:
 7354 0224 73657453 		.ascii	"setSpeed\000"
 7354      70656564 
 7354      00
 7355              	.LASF173:
 7356 022d 75736242 		.ascii	"usbBuffer\000"
 7356      75666665 
 7356      7200
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 152


 7357              	.LASF42:
 7358 0237 696E6465 		.ascii	"index\000"
 7358      7800
 7359              	.LASF23:
 7360 023d 44524956 		.ascii	"DRIVE\000"
 7360      4500
 7361              	.LASF72:
 7362 0243 73747269 		.ascii	"string_packet\000"
 7362      6E675F70 
 7362      61636B65 
 7362      7400
 7363              	.LASF102:
 7364 0251 6368616E 		.ascii	"changeToBT\000"
 7364      6765546F 
 7364      425400
 7365              	.LASF81:
 7366 025c 636F756E 		.ascii	"countsLeft\000"
 7366      74734C65 
 7366      667400
 7367              	.LASF86:
 7368 0267 64726976 		.ascii	"driveForwards\000"
 7368      65466F72 
 7368      77617264 
 7368      7300
 7369              	.LASF88:
 7370 0275 7475726E 		.ascii	"turnLeft\000"
 7370      4C656674 
 7370      00
 7371              	.LASF9:
 7372 027e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7372      206C6F6E 
 7372      6720756E 
 7372      7369676E 
 7372      65642069 
 7373              	.LASF134:
 7374 0295 666C6167 		.ascii	"flag_packet\000"
 7374      5F706163 
 7374      6B657400 
 7375              	.LASF67:
 7376 02a1 66726F6E 		.ascii	"frontSensors\000"
 7376      7453656E 
 7376      736F7273 
 7376      00
 7377              	.LASF61:
 7378 02ae 6973725F 		.ascii	"isr_turn_timer\000"
 7378      7475726E 
 7378      5F74696D 
 7378      657200
 7379              	.LASF101:
 7380 02bd 6368616E 		.ascii	"changeToRF\000"
 7380      6765546F 
 7380      524600
 7381              	.LASF90:
 7382 02c8 696E6974 		.ascii	"initTurnLeft\000"
 7382      5475726E 
 7382      4C656674 
 7382      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 153


 7383              	.LASF167:
 7384 02d5 706F7274 		.ascii	"portOpen\000"
 7384      4F70656E 
 7384      00
 7385              	.LASF94:
 7386 02de 696E6974 		.ascii	"initBrake\000"
 7386      4272616B 
 7386      6500
 7387              	.LASF130:
 7388 02e8 666C6167 		.ascii	"flag_ts_update\000"
 7388      5F74735F 
 7388      75706461 
 7388      746500
 7389              	.LASF114:
 7390 02f7 7363616C 		.ascii	"scalingFactor\000"
 7390      696E6746 
 7390      6163746F 
 7390      7200
 7391              	.LASF104:
 7392 0305 6C656674 		.ascii	"leftSpeed\000"
 7392      53706565 
 7392      6400
 7393              	.LASF129:
 7394 030f 666C6167 		.ascii	"flag_ts_enc\000"
 7394      5F74735F 
 7394      656E6300 
 7395              	.LASF179:
 7396 031b 62797465 		.ascii	"byteCount\000"
 7396      436F756E 
 7396      7400
 7397              	.LASF66:
 7398 0325 61637469 		.ascii	"actionDebounce\000"
 7398      6F6E4465 
 7398      626F756E 
 7398      636500
 7399              	.LASF63:
 7400 0334 62757474 		.ascii	"button\000"
 7400      6F6E00
 7401              	.LASF176:
 7402 033b 70726576 		.ascii	"prev_movement_state\000"
 7402      5F6D6F76 
 7402      656D656E 
 7402      745F7374 
 7402      61746500 
 7403              	.LASF120:
 7404 034f 73656E73 		.ascii	"sensorVals\000"
 7404      6F725661 
 7404      6C7300
 7405              	.LASF116:
 7406 035a 72657375 		.ascii	"result_str\000"
 7406      6C745F73 
 7406      747200
 7407              	.LASF123:
 7408 0365 75617274 		.ascii	"uart_set_PWM\000"
 7408      5F736574 
 7408      5F50574D 
 7408      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 154


 7409              	.LASF97:
 7410 0372 696E6974 		.ascii	"inittrackLineZ\000"
 7410      74726163 
 7410      6B4C696E 
 7410      655A00
 7411              	.LASF44:
 7412 0381 726F626F 		.ascii	"robot_ypos\000"
 7412      745F7970 
 7412      6F7300
 7413              	.LASF128:
 7414 038c 74735F64 		.ascii	"ts_display\000"
 7414      6973706C 
 7414      617900
 7415              	.LASF113:
 7416 0397 7072696E 		.ascii	"print_ADC\000"
 7416      745F4144 
 7416      4300
 7417              	.LASF106:
 7418 03a1 7363616C 		.ascii	"scalingLeft\000"
 7418      696E674C 
 7418      65667400 
 7419              	.LASF12:
 7420 03ad 63686172 		.ascii	"char\000"
 7420      00
 7421              	.LASF48:
 7422 03b2 67305F73 		.ascii	"g0_speed\000"
 7422      70656564 
 7422      00
 7423              	.LASF156:
 7424 03bb 72696768 		.ascii	"rightSpeedLimit\000"
 7424      74537065 
 7424      65644C69 
 7424      6D697400 
 7425              	.LASF74:
 7426 03cb 7365744C 		.ascii	"setLeftDir\000"
 7426      65667444 
 7426      697200
 7427              	.LASF182:
 7428 03d6 696E7374 		.ascii	"instructionCount\000"
 7428      72756374 
 7428      696F6E43 
 7428      6F756E74 
 7428      00
 7429              	.LASF89:
 7430 03e7 7475726E 		.ascii	"turnU\000"
 7430      5500
 7431              	.LASF55:
 7432 03ed 67325F79 		.ascii	"g2_ypos\000"
 7432      706F7300 
 7433              	.LASF16:
 7434 03f5 75696E74 		.ascii	"uint16\000"
 7434      313600
 7435              	.LASF18:
 7436 03fc 696E7438 		.ascii	"int8\000"
 7436      00
 7437              	.LASF69:
 7438 0401 6E657874 		.ascii	"nextStepDist\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 155


 7438      53746570 
 7438      44697374 
 7438      00
 7439              	.LASF53:
 7440 040e 67315F64 		.ascii	"g1_direction\000"
 7440      69726563 
 7440      74696F6E 
 7440      00
 7441              	.LASF185:
 7442 041b 70617468 		.ascii	"path\000"
 7442      00
 7443              	.LASF75:
 7444 0420 73657452 		.ascii	"setRightDir\000"
 7444      69676874 
 7444      44697200 
 7445              	.LASF34:
 7446 042c 43555256 		.ascii	"CURVE_TRACK\000"
 7446      455F5452 
 7446      41434B00 
 7447              	.LASF108:
 7448 0438 696E7465 		.ascii	"interCalc\000"
 7448      7243616C 
 7448      6300
 7449              	.LASF143:
 7450 0442 42545F45 		.ascii	"BT_ENABLED\000"
 7450      4E41424C 
 7450      454400
 7451              	.LASF80:
 7452 044d 72696768 		.ascii	"right\000"
 7452      7400
 7453              	.LASF163:
 7454 0453 696E6974 		.ascii	"initial_pos_valid\000"
 7454      69616C5F 
 7454      706F735F 
 7454      76616C69 
 7454      6400
 7455              	.LASF8:
 7456 0465 6C6F6E67 		.ascii	"long long int\000"
 7456      206C6F6E 
 7456      6720696E 
 7456      7400
 7457              	.LASF174:
 7458 0473 62756666 		.ascii	"buffer_state\000"
 7458      65725F73 
 7458      74617465 
 7458      00
 7459              	.LASF50:
 7460 0480 67315F78 		.ascii	"g1_xpos\000"
 7460      706F7300 
 7461              	.LASF95:
 7462 0488 696E6974 		.ascii	"initTrack\000"
 7462      54726163 
 7462      6B00
 7463              	.LASF68:
 7464 0492 6E657874 		.ascii	"nextStep\000"
 7464      53746570 
 7464      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 156


 7465              	.LASF195:
 7466 049b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7466      4320342E 
 7466      392E3320 
 7466      32303135 
 7466      30333033 
 7467 04ce 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7467      20726576 
 7467      6973696F 
 7467      6E203232 
 7467      31323230 
 7468 0501 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7468      66756E63 
 7468      74696F6E 
 7468      2D736563 
 7468      74696F6E 
 7469              	.LASF56:
 7470 0529 67325F73 		.ascii	"g2_speed\000"
 7470      70656564 
 7470      00
 7471              	.LASF47:
 7472 0532 67305F79 		.ascii	"g0_ypos\000"
 7472      706F7300 
 7473              	.LASF99:
 7474 053a 72665F63 		.ascii	"rf_char\000"
 7474      68617200 
 7475              	.LASF184:
 7476 0542 666F6F64 		.ascii	"food_list\000"
 7476      5F6C6973 
 7476      7400
 7477              	.LASF142:
 7478 054c 42494E5F 		.ascii	"BIN_ENABLED\000"
 7478      454E4142 
 7478      4C454400 
 7479              	.LASF105:
 7480 0558 72696768 		.ascii	"rightSpeed\000"
 7480      74537065 
 7480      656400
 7481              	.LASF127:
 7482 0563 74735F73 		.ascii	"ts_speed\000"
 7482      70656564 
 7482      00
 7483              	.LASF17:
 7484 056c 75696E74 		.ascii	"uint32\000"
 7484      333200
 7485              	.LASF191:
 7486 0573 696E7374 		.ascii	"instructions\000"
 7486      72756374 
 7486      696F6E73 
 7486      00
 7487              	.LASF82:
 7488 0580 636F756E 		.ascii	"countsRight\000"
 7488      74735269 
 7488      67687400 
 7489              	.LASF198:
 7490 058c 64617461 		.ascii	"data_main\000"
 7490      5F6D6169 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 157


 7490      6E00
 7491              	.LASF115:
 7492 0596 636F6E76 		.ascii	"converted_val\000"
 7492      65727465 
 7492      645F7661 
 7492      6C00
 7493              	.LASF186:
 7494 05a4 73746172 		.ascii	"start\000"
 7494      7400
 7495              	.LASF41:
 7496 05aa 72737369 		.ascii	"rssi\000"
 7496      00
 7497              	.LASF110:
 7498 05af 74726163 		.ascii	"trackLine\000"
 7498      6B4C696E 
 7498      6500
 7499              	.LASF49:
 7500 05b9 67305F64 		.ascii	"g0_direction\000"
 7500      69726563 
 7500      74696F6E 
 7500      00
 7501              	.LASF139:
 7502 05c6 666C6167 		.ascii	"flag_receive_ADC\000"
 7502      5F726563 
 7502      65697665 
 7502      5F414443 
 7502      00
 7503              	.LASF26:
 7504 05d7 53544F50 		.ascii	"STOPPED\000"
 7504      50454400 
 7505              	.LASF100:
 7506 05df 42545F72 		.ascii	"BT_rxInt\000"
 7506      78496E74 
 7506      00
 7507              	.LASF22:
 7508 05e8 6C6F6E67 		.ascii	"long double\000"
 7508      20646F75 
 7508      626C6500 
 7509              	.LASF64:
 7510 05f4 6973725F 		.ascii	"isr_adcTimer\000"
 7510      61646354 
 7510      696D6572 
 7510      00
 7511              	.LASF153:
 7512 0601 6C656674 		.ascii	"left_duty_cycle\000"
 7512      5F647574 
 7512      795F6379 
 7512      636C6500 
 7513              	.LASF65:
 7514 0611 6973725F 		.ascii	"isr_deadzone\000"
 7514      64656164 
 7514      7A6F6E65 
 7514      00
 7515              	.LASF131:
 7516 061e 666C6167 		.ascii	"flag_ts_speed\000"
 7516      5F74735F 
 7516      73706565 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 158


 7516      6400
 7517              	.LASF136:
 7518 062c 64617461 		.ascii	"dataready_flag\000"
 7518      72656164 
 7518      795F666C 
 7518      616700
 7519              	.LASF165:
 7520 063b 696E6974 		.ascii	"initial_y_pos\000"
 7520      69616C5F 
 7520      795F706F 
 7520      7300
 7521              	.LASF133:
 7522 0649 666C6167 		.ascii	"flag_rx\000"
 7522      5F727800 
 7523              	.LASF2:
 7524 0651 73686F72 		.ascii	"short int\000"
 7524      7420696E 
 7524      7400
 7525              	.LASF140:
 7526 065b 6164635F 		.ascii	"adc_result\000"
 7526      72657375 
 7526      6C7400
 7527              	.LASF92:
 7528 0666 696E6974 		.ascii	"initTurnU\000"
 7528      5475726E 
 7528      5500
 7529              	.LASF144:
 7530 0670 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7530      5F63616C 
 7530      635F7768 
 7530      65656C73 
 7530      70656564 
 7531              	.LASF4:
 7532 0685 6C6F6E67 		.ascii	"long int\000"
 7532      20696E74 
 7532      00
 7533              	.LASF91:
 7534 068e 696E6974 		.ascii	"initTurnRight\000"
 7534      5475726E 
 7534      52696768 
 7534      7400
 7535              	.LASF35:
 7536 069c 555F5452 		.ascii	"U_TRACK\000"
 7536      41434B00 
 7537              	.LASF124:
 7538 06a4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7538      52784275 
 7538      66666572 
 7538      00
 7539              	.LASF118:
 7540 06b1 7072696E 		.ascii	"printString\000"
 7540      74537472 
 7540      696E6700 
 7541              	.LASF98:
 7542 06bd 7278496E 		.ascii	"rxInt\000"
 7542      7400
 7543              	.LASF126:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 159


 7544 06c3 74735F75 		.ascii	"ts_update\000"
 7544      70646174 
 7544      6500
 7545              	.LASF33:
 7546 06cd 4E4F5F54 		.ascii	"NO_TRACK\000"
 7546      5241434B 
 7546      00
 7547              	.LASF151:
 7548 06d6 64656164 		.ascii	"deadzone\000"
 7548      7A6F6E65 
 7548      00
 7549              	.LASF155:
 7550 06df 6C656674 		.ascii	"leftSpeedLimit\000"
 7550      53706565 
 7550      644C696D 
 7550      697400
 7551              	.LASF40:
 7552 06ee 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7552      54524156 
 7552      45525345 
 7552      00
 7553              	.LASF29:
 7554 06fb 54524143 		.ascii	"TRACKING_SOFT\000"
 7554      4B494E47 
 7554      5F534F46 
 7554      5400
 7555              	.LASF161:
 7556 0709 6F766572 		.ascii	"overshot_target\000"
 7556      73686F74 
 7556      5F746172 
 7556      67657400 
 7557              	.LASF79:
 7558 0719 6C656674 		.ascii	"left\000"
 7558      00
 7559              	.LASF158:
 7560 071e 61636375 		.ascii	"accum_dist\000"
 7560      6D5F6469 
 7560      737400
 7561              	.LASF121:
 7562 0729 75736250 		.ascii	"usbPutString\000"
 7562      75745374 
 7562      72696E67 
 7562      00
 7563              	.LASF87:
 7564 0736 7475726E 		.ascii	"turnRight\000"
 7564      52696768 
 7564      7400
 7565              	.LASF51:
 7566 0740 67315F79 		.ascii	"g1_ypos\000"
 7566      706F7300 
 7567              	.LASF59:
 7568 0748 6164635F 		.ascii	"adc_isr\000"
 7568      69737200 
 7569              	.LASF119:
 7570 0750 72656164 		.ascii	"readFrontSensors\000"
 7570      46726F6E 
 7570      7453656E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 160


 7570      736F7273 
 7570      00
 7571              	.LASF162:
 7572 0761 71756164 		.ascii	"quad_per_cm\000"
 7572      5F706572 
 7572      5F636D00 
 7573              	.LASF157:
 7574 076d 74617267 		.ascii	"target_distance_cm\000"
 7574      65745F64 
 7574      69737461 
 7574      6E63655F 
 7574      636D00
 7575              	.LASF11:
 7576 0780 73697A65 		.ascii	"sizetype\000"
 7576      74797065 
 7576      00
 7577              	.LASF7:
 7578 0789 6C6F6E67 		.ascii	"long unsigned int\000"
 7578      20756E73 
 7578      69676E65 
 7578      6420696E 
 7578      7400
 7579              	.LASF71:
 7580 079b 62797465 		.ascii	"byte_packet\000"
 7580      5F706163 
 7580      6B657400 
 7581              	.LASF13:
 7582 07a7 696E7433 		.ascii	"int32_t\000"
 7582      325F7400 
 7583              	.LASF180:
 7584 07af 7061636B 		.ascii	"packet\000"
 7584      657400
 7585              	.LASF192:
 7586 07b6 696E7374 		.ascii	"instructionLength\000"
 7586      72756374 
 7586      696F6E4C 
 7586      656E6774 
 7586      6800
 7587              	.LASF43:
 7588 07c8 726F626F 		.ascii	"robot_xpos\000"
 7588      745F7870 
 7588      6F7300
 7589              	.LASF85:
 7590 07d3 6272616B 		.ascii	"brakeMotor\000"
 7590      654D6F74 
 7590      6F7200
 7591              	.LASF190:
 7592 07de 666F6F64 		.ascii	"food_length\000"
 7592      5F6C656E 
 7592      67746800 
 7593              	.LASF172:
 7594 07ea 656E7472 		.ascii	"entry\000"
 7594      7900
 7595              	.LASF1:
 7596 07f0 756E7369 		.ascii	"unsigned char\000"
 7596      676E6564 
 7596      20636861 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 161


 7596      7200
 7597              	.LASF6:
 7598 07fe 5F5F7569 		.ascii	"__uint32_t\000"
 7598      6E743332 
 7598      5F7400
 7599              	.LASF171:
 7600 0809 6C696E65 		.ascii	"line\000"
 7600      00
 7601              	.LASF160:
 7602 080e 72656163 		.ascii	"reached_target\000"
 7602      6865645F 
 7602      74617267 
 7602      657400
 7603              	.LASF62:
 7604 081d 53746F70 		.ascii	"Stop_on_line\000"
 7604      5F6F6E5F 
 7604      6C696E65 
 7604      00
 7605              	.LASF125:
 7606 082a 74735F65 		.ascii	"ts_enc\000"
 7606      6E6300
 7607              	.LASF166:
 7608 0831 6272616B 		.ascii	"brakeFlag\000"
 7608      65466C61 
 7608      6700
 7609              	.LASF132:
 7610 083b 666C6167 		.ascii	"flag_ts_display\000"
 7610      5F74735F 
 7610      64697370 
 7610      6C617900 
 7611              	.LASF31:
 7612 084b 73746174 		.ascii	"state\000"
 7612      6500
 7613              	.LASF77:
 7614 0851 72657665 		.ascii	"reverseDirection\000"
 7614      72736544 
 7614      69726563 
 7614      74696F6E 
 7614      00
 7615              	.LASF83:
 7616 0862 6272616B 		.ascii	"brakeLeft\000"
 7616      654C6566 
 7616      7400
 7617              	.LASF170:
 7618 086c 64697370 		.ascii	"displaystring\000"
 7618      6C617973 
 7618      7472696E 
 7618      6700
 7619              	.LASF147:
 7620 087a 6C617374 		.ascii	"last_quad_count1\000"
 7620      5F717561 
 7620      645F636F 
 7620      756E7431 
 7620      00
 7621              	.LASF148:
 7622 088b 6C617374 		.ascii	"last_quad_count2\000"
 7622      5F717561 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 162


 7622      645F636F 
 7622      756E7432 
 7622      00
 7623              	.LASF187:
 7624 089c 64657374 		.ascii	"destination\000"
 7624      696E6174 
 7624      696F6E00 
 7625              	.LASF122:
 7626 08a8 75736250 		.ascii	"usbPutChar\000"
 7626      75744368 
 7626      617200
 7627              	.LASF0:
 7628 08b3 7369676E 		.ascii	"signed char\000"
 7628      65642063 
 7628      68617200 
 7629              	.LASF3:
 7630 08bf 73686F72 		.ascii	"short unsigned int\000"
 7630      7420756E 
 7630      7369676E 
 7630      65642069 
 7630      6E7400
 7631              	.LASF45:
 7632 08d2 726F626F 		.ascii	"robot_orientation\000"
 7632      745F6F72 
 7632      69656E74 
 7632      6174696F 
 7632      6E00
 7633              	.LASF37:
 7634 08e4 51554144 		.ascii	"QUAD_STOP\000"
 7634      5F53544F 
 7634      5000
 7635              	.LASF73:
 7636 08ee 6D61696E 		.ascii	"main\000"
 7636      00
 7637              	.LASF58:
 7638 08f3 42545F74 		.ascii	"BT_txInt\000"
 7638      78496E74 
 7638      00
 7639              	.LASF109:
 7640 08fc 6E657874 		.ascii	"nextSpeed\000"
 7640      53706565 
 7640      6400
 7641              	.LASF15:
 7642 0906 75696E74 		.ascii	"uint8\000"
 7642      3800
 7643              	.LASF21:
 7644 090c 646F7562 		.ascii	"double\000"
 7644      6C6500
 7645              	.LASF154:
 7646 0913 72696768 		.ascii	"right_duty_cycle\000"
 7646      745F6475 
 7646      74795F63 
 7646      79636C65 
 7646      00
 7647              	.LASF38:
 7648 0924 52465F53 		.ascii	"RF_STOP\000"
 7648      544F5000 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccZwvXq8.s 			page 163


 7649              	.LASF76:
 7650 092c 68616E64 		.ascii	"handle_rx_binary\000"
 7650      6C655F72 
 7650      785F6269 
 7650      6E617279 
 7650      00
 7651              	.LASF117:
 7652 093d 7072696E 		.ascii	"print_RF\000"
 7652      745F5246 
 7652      00
 7653              	.LASF30:
 7654 0946 55545552 		.ascii	"UTURN\000"
 7654      4E00
 7655              	.LASF46:
 7656 094c 67305F78 		.ascii	"g0_xpos\000"
 7656      706F7300 
 7657              	.LASF107:
 7658 0954 7363616C 		.ascii	"scalingRight\000"
 7658      696E6752 
 7658      69676874 
 7658      00
 7659              	.LASF135:
 7660 0961 666C6167 		.ascii	"flag_KB_string\000"
 7660      5F4B425F 
 7660      73747269 
 7660      6E6700
 7661              	.LASF52:
 7662 0970 67315F73 		.ascii	"g1_speed\000"
 7662      70656564 
 7662      00
 7663              	.LASF196:
 7664 0979 2E5C6D61 		.ascii	".\\main.c\000"
 7664      696E2E63 
 7664      00
 7665              	.LASF164:
 7666 0982 696E6974 		.ascii	"initial_x_pos\000"
 7666      69616C5F 
 7666      785F706F 
 7666      7300
 7667              	.LASF84:
 7668 0990 6272616B 		.ascii	"brakeRight\000"
 7668      65526967 
 7668      687400
 7669              	.LASF96:
 7670 099b 696E6974 		.ascii	"initTrackU\000"
 7670      54726163 
 7670      6B5500
 7671              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
