ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	prevVoltage,2,2
 262              		.comm	prevVoltage2,2,2
 263              		.global	displaystring
 264 0009 000000   		.align	2
 265              		.type	displaystring, %object
 266              		.size	displaystring, 64
 267              	displaystring:
 268 000c 43533330 		.ascii	"CS301 2016\012\000"
 268      31203230 
 268      31360A00 
 269 0018 00000000 		.space	52
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.comm	line,64,4
 271              		.comm	entry,64,4
 272              		.comm	usbBuffer,64,4
 273              		.comm	buffer_state,32,4
 274              		.comm	system_state,32,4
 275              		.global	prev_movement_state
 276              		.type	prev_movement_state, %object
 277              		.size	prev_movement_state, 1
 278              	prev_movement_state:
 279 004c 03       		.byte	3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 6


 280              		.global	movement_state
 281              		.type	movement_state, %object
 282              		.size	movement_state, 1
 283              	movement_state:
 284 004d 03       		.byte	3
 285              		.global	track_mode
 286              		.bss
 287              		.type	track_mode, %object
 288              		.size	track_mode, 1
 289              	track_mode:
 290 003c 00       		.space	1
 291              		.global	byteCount
 292              		.type	byteCount, %object
 293              		.size	byteCount, 1
 294              	byteCount:
 295 003d 00       		.space	1
 296              		.comm	packet,2,4
 297              		.global	speed
 298              		.data
 299 004e 0000     		.align	3
 300              		.type	speed, %object
 301              		.size	speed, 8
 302              	speed:
 303 0050 00000000 		.word	0
 304 0054 00002E40 		.word	1076756480
 305              		.comm	tracked_direction,4,4
 306              		.global	instructions
 307              		.bss
 308 003e 0000     		.align	2
 309              		.type	instructions, %object
 310              		.size	instructions, 800
 311              	instructions:
 312 0040 00000000 		.space	800
 312      00000000 
 312      00000000 
 312      00000000 
 312      00000000 
 313              		.global	instructionCount
 314              		.align	1
 315              		.type	instructionCount, %object
 316              		.size	instructionCount, 2
 317              	instructionCount:
 318 0360 0000     		.space	2
 319              		.global	instructionLength
 320              		.align	1
 321              		.type	instructionLength, %object
 322              		.size	instructionLength, 2
 323              	instructionLength:
 324 0362 0000     		.space	2
 325              		.global	sensorsDisabled
 326              		.align	2
 327              		.type	sensorsDisabled, %object
 328              		.size	sensorsDisabled, 4
 329              	sensorsDisabled:
 330 0364 00000000 		.space	4
 331              		.global	robot_direction
 332              		.data
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 7


 333              		.align	2
 334              		.type	robot_direction, %object
 335              		.size	robot_direction, 4
 336              	robot_direction:
 337 0058 02000000 		.word	2
 338              		.global	path
 339              		.bss
 340              		.align	2
 341              		.type	path, %object
 342              		.size	path, 9600
 343              	path:
 344 0368 00000000 		.space	9600
 344      00000000 
 344      00000000 
 344      00000000 
 344      00000000 
 345              		.global	start
 346              		.data
 347              		.align	2
 348              		.type	start, %object
 349              		.size	start, 8
 350              	start:
 351 005c 01000000 		.word	1
 352 0060 01000000 		.word	1
 353              		.global	destination
 354              		.align	2
 355              		.type	destination, %object
 356              		.size	destination, 8
 357              	destination:
 358 0064 0D000000 		.word	13
 359 0068 0B000000 		.word	11
 360              		.global	map
 361              		.align	2
 362              		.type	map, %object
 363              		.size	map, 1140
 364              	map:
 365 006c 01000000 		.word	1
 366 0070 01000000 		.word	1
 367 0074 01000000 		.word	1
 368 0078 01000000 		.word	1
 369 007c 01000000 		.word	1
 370 0080 01000000 		.word	1
 371 0084 01000000 		.word	1
 372 0088 01000000 		.word	1
 373 008c 01000000 		.word	1
 374 0090 01000000 		.word	1
 375 0094 01000000 		.word	1
 376 0098 01000000 		.word	1
 377 009c 01000000 		.word	1
 378 00a0 01000000 		.word	1
 379 00a4 01000000 		.word	1
 380 00a8 01000000 		.word	1
 381 00ac 01000000 		.word	1
 382 00b0 01000000 		.word	1
 383 00b4 01000000 		.word	1
 384 00b8 01000000 		.word	1
 385 00bc 00000000 		.word	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 8


 386 00c0 00000000 		.word	0
 387 00c4 00000000 		.word	0
 388 00c8 00000000 		.word	0
 389 00cc 00000000 		.word	0
 390 00d0 01000000 		.word	1
 391 00d4 00000000 		.word	0
 392 00d8 01000000 		.word	1
 393 00dc 00000000 		.word	0
 394 00e0 00000000 		.word	0
 395 00e4 00000000 		.word	0
 396 00e8 00000000 		.word	0
 397 00ec 00000000 		.word	0
 398 00f0 00000000 		.word	0
 399 00f4 00000000 		.word	0
 400 00f8 00000000 		.word	0
 401 00fc 00000000 		.word	0
 402 0100 01000000 		.word	1
 403 0104 01000000 		.word	1
 404 0108 01000000 		.word	1
 405 010c 01000000 		.word	1
 406 0110 01000000 		.word	1
 407 0114 01000000 		.word	1
 408 0118 00000000 		.word	0
 409 011c 01000000 		.word	1
 410 0120 00000000 		.word	0
 411 0124 01000000 		.word	1
 412 0128 00000000 		.word	0
 413 012c 01000000 		.word	1
 414 0130 00000000 		.word	0
 415 0134 01000000 		.word	1
 416 0138 01000000 		.word	1
 417 013c 01000000 		.word	1
 418 0140 01000000 		.word	1
 419 0144 01000000 		.word	1
 420 0148 00000000 		.word	0
 421 014c 01000000 		.word	1
 422 0150 01000000 		.word	1
 423 0154 00000000 		.word	0
 424 0158 00000000 		.word	0
 425 015c 00000000 		.word	0
 426 0160 01000000 		.word	1
 427 0164 00000000 		.word	0
 428 0168 01000000 		.word	1
 429 016c 00000000 		.word	0
 430 0170 00000000 		.word	0
 431 0174 00000000 		.word	0
 432 0178 01000000 		.word	1
 433 017c 00000000 		.word	0
 434 0180 00000000 		.word	0
 435 0184 00000000 		.word	0
 436 0188 00000000 		.word	0
 437 018c 00000000 		.word	0
 438 0190 01000000 		.word	1
 439 0194 00000000 		.word	0
 440 0198 01000000 		.word	1
 441 019c 01000000 		.word	1
 442 01a0 00000000 		.word	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 9


 443 01a4 01000000 		.word	1
 444 01a8 00000000 		.word	0
 445 01ac 01000000 		.word	1
 446 01b0 00000000 		.word	0
 447 01b4 01000000 		.word	1
 448 01b8 00000000 		.word	0
 449 01bc 01000000 		.word	1
 450 01c0 01000000 		.word	1
 451 01c4 01000000 		.word	1
 452 01c8 01000000 		.word	1
 453 01cc 01000000 		.word	1
 454 01d0 01000000 		.word	1
 455 01d4 01000000 		.word	1
 456 01d8 00000000 		.word	0
 457 01dc 01000000 		.word	1
 458 01e0 00000000 		.word	0
 459 01e4 01000000 		.word	1
 460 01e8 01000000 		.word	1
 461 01ec 00000000 		.word	0
 462 01f0 01000000 		.word	1
 463 01f4 00000000 		.word	0
 464 01f8 00000000 		.word	0
 465 01fc 00000000 		.word	0
 466 0200 00000000 		.word	0
 467 0204 00000000 		.word	0
 468 0208 00000000 		.word	0
 469 020c 00000000 		.word	0
 470 0210 00000000 		.word	0
 471 0214 00000000 		.word	0
 472 0218 00000000 		.word	0
 473 021c 00000000 		.word	0
 474 0220 01000000 		.word	1
 475 0224 00000000 		.word	0
 476 0228 01000000 		.word	1
 477 022c 00000000 		.word	0
 478 0230 01000000 		.word	1
 479 0234 01000000 		.word	1
 480 0238 00000000 		.word	0
 481 023c 01000000 		.word	1
 482 0240 01000000 		.word	1
 483 0244 01000000 		.word	1
 484 0248 01000000 		.word	1
 485 024c 01000000 		.word	1
 486 0250 01000000 		.word	1
 487 0254 01000000 		.word	1
 488 0258 01000000 		.word	1
 489 025c 01000000 		.word	1
 490 0260 00000000 		.word	0
 491 0264 01000000 		.word	1
 492 0268 00000000 		.word	0
 493 026c 01000000 		.word	1
 494 0270 00000000 		.word	0
 495 0274 01000000 		.word	1
 496 0278 01000000 		.word	1
 497 027c 01000000 		.word	1
 498 0280 01000000 		.word	1
 499 0284 00000000 		.word	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 10


 500 0288 00000000 		.word	0
 501 028c 00000000 		.word	0
 502 0290 00000000 		.word	0
 503 0294 00000000 		.word	0
 504 0298 00000000 		.word	0
 505 029c 00000000 		.word	0
 506 02a0 00000000 		.word	0
 507 02a4 00000000 		.word	0
 508 02a8 00000000 		.word	0
 509 02ac 00000000 		.word	0
 510 02b0 01000000 		.word	1
 511 02b4 00000000 		.word	0
 512 02b8 01000000 		.word	1
 513 02bc 00000000 		.word	0
 514 02c0 00000000 		.word	0
 515 02c4 00000000 		.word	0
 516 02c8 01000000 		.word	1
 517 02cc 01000000 		.word	1
 518 02d0 01000000 		.word	1
 519 02d4 01000000 		.word	1
 520 02d8 01000000 		.word	1
 521 02dc 01000000 		.word	1
 522 02e0 01000000 		.word	1
 523 02e4 01000000 		.word	1
 524 02e8 00000000 		.word	0
 525 02ec 01000000 		.word	1
 526 02f0 01000000 		.word	1
 527 02f4 01000000 		.word	1
 528 02f8 01000000 		.word	1
 529 02fc 01000000 		.word	1
 530 0300 00000000 		.word	0
 531 0304 01000000 		.word	1
 532 0308 01000000 		.word	1
 533 030c 01000000 		.word	1
 534 0310 00000000 		.word	0
 535 0314 01000000 		.word	1
 536 0318 01000000 		.word	1
 537 031c 00000000 		.word	0
 538 0320 00000000 		.word	0
 539 0324 00000000 		.word	0
 540 0328 00000000 		.word	0
 541 032c 00000000 		.word	0
 542 0330 00000000 		.word	0
 543 0334 00000000 		.word	0
 544 0338 00000000 		.word	0
 545 033c 00000000 		.word	0
 546 0340 00000000 		.word	0
 547 0344 00000000 		.word	0
 548 0348 01000000 		.word	1
 549 034c 00000000 		.word	0
 550 0350 00000000 		.word	0
 551 0354 00000000 		.word	0
 552 0358 01000000 		.word	1
 553 035c 00000000 		.word	0
 554 0360 01000000 		.word	1
 555 0364 01000000 		.word	1
 556 0368 00000000 		.word	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 11


 557 036c 01000000 		.word	1
 558 0370 01000000 		.word	1
 559 0374 01000000 		.word	1
 560 0378 01000000 		.word	1
 561 037c 01000000 		.word	1
 562 0380 00000000 		.word	0
 563 0384 01000000 		.word	1
 564 0388 01000000 		.word	1
 565 038c 01000000 		.word	1
 566 0390 00000000 		.word	0
 567 0394 01000000 		.word	1
 568 0398 00000000 		.word	0
 569 039c 01000000 		.word	1
 570 03a0 00000000 		.word	0
 571 03a4 01000000 		.word	1
 572 03a8 00000000 		.word	0
 573 03ac 01000000 		.word	1
 574 03b0 01000000 		.word	1
 575 03b4 00000000 		.word	0
 576 03b8 00000000 		.word	0
 577 03bc 00000000 		.word	0
 578 03c0 00000000 		.word	0
 579 03c4 00000000 		.word	0
 580 03c8 01000000 		.word	1
 581 03cc 00000000 		.word	0
 582 03d0 00000000 		.word	0
 583 03d4 00000000 		.word	0
 584 03d8 01000000 		.word	1
 585 03dc 00000000 		.word	0
 586 03e0 00000000 		.word	0
 587 03e4 00000000 		.word	0
 588 03e8 01000000 		.word	1
 589 03ec 00000000 		.word	0
 590 03f0 00000000 		.word	0
 591 03f4 00000000 		.word	0
 592 03f8 01000000 		.word	1
 593 03fc 01000000 		.word	1
 594 0400 00000000 		.word	0
 595 0404 01000000 		.word	1
 596 0408 01000000 		.word	1
 597 040c 01000000 		.word	1
 598 0410 00000000 		.word	0
 599 0414 01000000 		.word	1
 600 0418 01000000 		.word	1
 601 041c 01000000 		.word	1
 602 0420 00000000 		.word	0
 603 0424 01000000 		.word	1
 604 0428 01000000 		.word	1
 605 042c 01000000 		.word	1
 606 0430 00000000 		.word	0
 607 0434 01000000 		.word	1
 608 0438 01000000 		.word	1
 609 043c 01000000 		.word	1
 610 0440 00000000 		.word	0
 611 0444 01000000 		.word	1
 612 0448 01000000 		.word	1
 613 044c 00000000 		.word	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 12


 614 0450 00000000 		.word	0
 615 0454 00000000 		.word	0
 616 0458 01000000 		.word	1
 617 045c 00000000 		.word	0
 618 0460 00000000 		.word	0
 619 0464 00000000 		.word	0
 620 0468 00000000 		.word	0
 621 046c 00000000 		.word	0
 622 0470 00000000 		.word	0
 623 0474 00000000 		.word	0
 624 0478 01000000 		.word	1
 625 047c 00000000 		.word	0
 626 0480 00000000 		.word	0
 627 0484 00000000 		.word	0
 628 0488 00000000 		.word	0
 629 048c 00000000 		.word	0
 630 0490 01000000 		.word	1
 631 0494 01000000 		.word	1
 632 0498 01000000 		.word	1
 633 049c 01000000 		.word	1
 634 04a0 01000000 		.word	1
 635 04a4 01000000 		.word	1
 636 04a8 01000000 		.word	1
 637 04ac 01000000 		.word	1
 638 04b0 01000000 		.word	1
 639 04b4 01000000 		.word	1
 640 04b8 01000000 		.word	1
 641 04bc 01000000 		.word	1
 642 04c0 01000000 		.word	1
 643 04c4 01000000 		.word	1
 644 04c8 01000000 		.word	1
 645 04cc 01000000 		.word	1
 646 04d0 01000000 		.word	1
 647 04d4 01000000 		.word	1
 648 04d8 01000000 		.word	1
 649 04dc 01000000 		.word	1
 650              		.global	food_list
 651              		.align	2
 652              		.type	food_list, %object
 653              		.size	food_list, 48
 654              	food_list:
 655 04e0 05000000 		.word	5
 656 04e4 0A000000 		.word	10
 657 04e8 05000000 		.word	5
 658 04ec 03000000 		.word	3
 659 04f0 0D000000 		.word	13
 660 04f4 02000000 		.word	2
 661 04f8 00000000 		.space	24
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.global	food_length
 663              		.align	2
 664              		.type	food_length, %object
 665              		.size	food_length, 4
 666              	food_length:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 13


 667 0510 03000000 		.word	3
 668 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 669              		.align	2
 670              		.global	BT_txInt
 671              		.thumb
 672              		.thumb_func
 673              		.type	BT_txInt, %function
 674              	BT_txInt:
 675              	.LFB63:
 676              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 75
  29:.\main.c      **** 
  30:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  31:.\main.c      **** uint16 instructionCount = 0;
  32:.\main.c      **** uint16 instructionLength = 0;
  33:.\main.c      **** uint32_t sensorsDisabled = 0;
  34:.\main.c      **** 
  35:.\main.c      **** uint32_t robot_direction = 2;
  36:.\main.c      **** 
  37:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  38:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  39:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  42:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  43:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  44:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  45:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  46:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  47:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 14


  48:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  49:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  50:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  51:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  52:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  53:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  54:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  56:.\main.c      **** 
  57:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  58:.\main.c      **** //first number is the y coord, second is x
  59:.\main.c      **** //first number is row, second column
  60:.\main.c      **** 
  61:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  62:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  63:.\main.c      **** //uint8 food_list[6][2]= {{10,1},{1,13},{9,7},{16,13},{17,1}};
  64:.\main.c      **** uint32_t food_length = 3;
  65:.\main.c      **** 
  66:.\main.c      **** void changeToRF();
  67:.\main.c      **** void changeToBT();
  68:.\main.c      **** void brakeMotor();
  69:.\main.c      **** void driveForwards();
  70:.\main.c      **** void initTurnLeft();
  71:.\main.c      **** void initTurnRight();
  72:.\main.c      **** void inittrackLineZ();
  73:.\main.c      **** void trackLineU();
  74:.\main.c      **** void trackLine();
  75:.\main.c      **** void trackLineZ();
  76:.\main.c      **** void initTrackU();
  77:.\main.c      **** void turnLeft();
  78:.\main.c      **** void turnRight();
  79:.\main.c      **** void initForward();
  80:.\main.c      **** void initTurnU();
  81:.\main.c      **** void turnU();
  82:.\main.c      **** void initBrake();
  83:.\main.c      **** void print_ADC();
  84:.\main.c      **** void Quad_Dec_response();
  85:.\main.c      **** void handle_rx_binary();
  86:.\main.c      **** void readFrontSensors();
  87:.\main.c      **** void print_RF();
  88:.\main.c      **** 
  89:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  90:.\main.c      **** //BT
  91:.\main.c      **** CY_ISR(BT_txInt)
  92:.\main.c      **** {
 677              		.loc 1 92 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 7, -4
 685 0002 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
  93:.\main.c      ****     
  94:.\main.c      **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 15


 687              		.loc 1 94 0
 688 0004 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0006 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 000a 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE63:
 697              		.size	BT_txInt, .-BT_txInt
 698              		.section	.text.adc_isr,"ax",%progbits
 699              		.align	2
 700              		.global	adc_isr
 701              		.thumb
 702              		.thumb_func
 703              		.type	adc_isr, %function
 704              	adc_isr:
 705              	.LFB64:
  95:.\main.c      **** 
  96:.\main.c      **** //ADC:
  97:.\main.c      **** CY_ISR (adc_isr)
  98:.\main.c      **** {
 706              		.loc 1 98 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
  99:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 100:.\main.c      ****     adc_result = ADC_GetResult16();
 716              		.loc 1 100 0
 717 0004 FFF7FEFF 		bl	ADC_GetResult16
 718 0008 0346     		mov	r3, r0
 719 000a 1A46     		mov	r2, r3
 720 000c 044B     		ldr	r3, .L3
 721 000e 1A80     		strh	r2, [r3]	@ movhi
 101:.\main.c      ****     flag_receive_ADC = 1;
 722              		.loc 1 101 0
 723 0010 044B     		ldr	r3, .L3+4
 724 0012 0122     		movs	r2, #1
 725 0014 1A70     		strb	r2, [r3]
 102:.\main.c      ****     flag_print_rf = 1;
 726              		.loc 1 102 0
 727 0016 044B     		ldr	r3, .L3+8
 728 0018 0122     		movs	r2, #1
 729 001a 1A70     		strb	r2, [r3]
 103:.\main.c      ****     //LED_Write(~LED_Read());
 104:.\main.c      **** }
 730              		.loc 1 104 0
 731 001c 80BD     		pop	{r7, pc}
 732              	.L4:
 733 001e 00BF     		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 16


 734              	.L3:
 735 0020 00000000 		.word	adc_result
 736 0024 00000000 		.word	flag_receive_ADC
 737 0028 00000000 		.word	flag_print_rf
 738              		.cfi_endproc
 739              	.LFE64:
 740              		.size	adc_isr, .-adc_isr
 741              		.global	__aeabi_i2d
 742              		.global	__aeabi_dmul
 743              		.global	__aeabi_dcmpge
 744              		.section	.text.isr_quad1,"ax",%progbits
 745              		.align	2
 746              		.global	isr_quad1
 747              		.thumb
 748              		.thumb_func
 749              		.type	isr_quad1, %function
 750              	isr_quad1:
 751              	.LFB65:
 105:.\main.c      **** 
 106:.\main.c      **** CY_ISR (isr_quad1)
 107:.\main.c      **** {
 752              		.loc 1 107 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756 0000 B0B5     		push	{r4, r5, r7, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 4, -16
 759              		.cfi_offset 5, -12
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 108:.\main.c      ****     //LED_Write(~LED_Read());
 109:.\main.c      ****     last_quad_count1 = quad_count1;
 764              		.loc 1 109 0
 765 0004 5A4B     		ldr	r3, .L13+16
 766 0006 1A88     		ldrh	r2, [r3]
 767 0008 5A4B     		ldr	r3, .L13+20
 768 000a 1A80     		strh	r2, [r3]	@ movhi
 110:.\main.c      ****     last_quad_count2 = quad_count2;
 769              		.loc 1 110 0
 770 000c 5A4B     		ldr	r3, .L13+24
 771 000e 1A88     		ldrh	r2, [r3]
 772 0010 5A4B     		ldr	r3, .L13+28
 773 0012 1A80     		strh	r2, [r3]	@ movhi
 111:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 774              		.loc 1 111 0
 775 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 776 0018 0346     		mov	r3, r0
 777 001a 1A46     		mov	r2, r3
 778 001c 544B     		ldr	r3, .L13+16
 779 001e 1A80     		strh	r2, [r3]	@ movhi
 112:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 780              		.loc 1 112 0
 781 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 782 0024 0346     		mov	r3, r0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 17


 783 0026 1A46     		mov	r2, r3
 784 0028 534B     		ldr	r3, .L13+24
 785 002a 1A80     		strh	r2, [r3]	@ movhi
 113:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 786              		.loc 1 113 0
 787 002c 504B     		ldr	r3, .L13+16
 788 002e 1B88     		ldrh	r3, [r3]
 789 0030 9AB2     		uxth	r2, r3
 790 0032 504B     		ldr	r3, .L13+20
 791 0034 1B88     		ldrh	r3, [r3]
 792 0036 9BB2     		uxth	r3, r3
 793 0038 D31A     		subs	r3, r2, r3
 794 003a 9BB2     		uxth	r3, r3
 795 003c 9AB2     		uxth	r2, r3
 796 003e 504B     		ldr	r3, .L13+32
 797 0040 1A80     		strh	r2, [r3]	@ movhi
 114:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 798              		.loc 1 114 0
 799 0042 4D4B     		ldr	r3, .L13+24
 800 0044 1B88     		ldrh	r3, [r3]
 801 0046 9AB2     		uxth	r2, r3
 802 0048 4C4B     		ldr	r3, .L13+28
 803 004a 1B88     		ldrh	r3, [r3]
 804 004c 9BB2     		uxth	r3, r3
 805 004e D31A     		subs	r3, r2, r3
 806 0050 9BB2     		uxth	r3, r3
 807 0052 9AB2     		uxth	r2, r3
 808 0054 4B4B     		ldr	r3, .L13+36
 809 0056 1A80     		strh	r2, [r3]	@ movhi
 115:.\main.c      ****     
 116:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 810              		.loc 1 116 0
 811 0058 454B     		ldr	r3, .L13+16
 812 005a 1B88     		ldrh	r3, [r3]
 813 005c 1BB2     		sxth	r3, r3
 814 005e 002B     		cmp	r3, #0
 815 0060 B8BF     		it	lt
 816 0062 5B42     		rsblt	r3, r3, #0
 817 0064 40F6B832 		movw	r2, #3000
 818 0068 9342     		cmp	r3, r2
 819 006a 17DD     		ble	.L6
 820              		.loc 1 116 0 is_stmt 0 discriminator 1
 821 006c 464B     		ldr	r3, .L13+40
 822 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 823 0070 012B     		cmp	r3, #1
 824 0072 13D0     		beq	.L6
 825              		.loc 1 116 0 discriminator 2
 826 0074 444B     		ldr	r3, .L13+40
 827 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0078 022B     		cmp	r3, #2
 829 007a 0FD0     		beq	.L6
 830              		.loc 1 116 0 discriminator 3
 831 007c 424B     		ldr	r3, .L13+40
 832 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 0080 072B     		cmp	r3, #7
 834 0082 0BD0     		beq	.L6
 117:.\main.c      ****     {
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 18


 118:.\main.c      ****         QuadDec_M1_SetCounter(0);
 835              		.loc 1 118 0 is_stmt 1
 836 0084 0020     		movs	r0, #0
 837 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 119:.\main.c      ****         QuadDec_M2_SetCounter(0);
 838              		.loc 1 119 0
 839 008a 0020     		movs	r0, #0
 840 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 120:.\main.c      ****         quad_count1 = 0;
 841              		.loc 1 120 0
 842 0090 374B     		ldr	r3, .L13+16
 843 0092 0022     		movs	r2, #0
 844 0094 1A80     		strh	r2, [r3]	@ movhi
 121:.\main.c      ****         quad_count2 = 0;
 845              		.loc 1 121 0
 846 0096 384B     		ldr	r3, .L13+24
 847 0098 0022     		movs	r2, #0
 848 009a 1A80     		strh	r2, [r3]	@ movhi
 849              	.L6:
 122:.\main.c      ****     }
 123:.\main.c      **** 
 124:.\main.c      ****     flag_calc_wheelspeed = 1;
 850              		.loc 1 124 0
 851 009c 3B4B     		ldr	r3, .L13+44
 852 009e 0122     		movs	r2, #1
 853 00a0 1A70     		strb	r2, [r3]
 125:.\main.c      ****     
 126:.\main.c      ****     if(track_mode == DEST_TEST)
 854              		.loc 1 126 0
 855 00a2 3B4B     		ldr	r3, .L13+48
 856 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 00a6 062B     		cmp	r3, #6
 858 00a8 56D1     		bne	.L5
 127:.\main.c      ****     {
 128:.\main.c      ****         //track the distance
 129:.\main.c      ****         accum_dist += quad_diff1;
 859              		.loc 1 129 0
 860 00aa 3A4B     		ldr	r3, .L13+52
 861 00ac 1B88     		ldrh	r3, [r3]
 862 00ae 9AB2     		uxth	r2, r3
 863 00b0 334B     		ldr	r3, .L13+32
 864 00b2 1B88     		ldrh	r3, [r3]
 865 00b4 9BB2     		uxth	r3, r3
 866 00b6 1344     		add	r3, r3, r2
 867 00b8 9BB2     		uxth	r3, r3
 868 00ba 9AB2     		uxth	r2, r3
 869 00bc 354B     		ldr	r3, .L13+52
 870 00be 1A80     		strh	r2, [r3]	@ movhi
 130:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 0.8)
 871              		.loc 1 130 0
 872 00c0 344B     		ldr	r3, .L13+52
 873 00c2 1B88     		ldrh	r3, [r3]
 874 00c4 1BB2     		sxth	r3, r3
 875 00c6 002B     		cmp	r3, #0
 876 00c8 B8BF     		it	lt
 877 00ca 5B42     		rsblt	r3, r3, #0
 878 00cc 1846     		mov	r0, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 19


 879 00ce FFF7FEFF 		bl	__aeabi_i2d
 880 00d2 0446     		mov	r4, r0
 881 00d4 0D46     		mov	r5, r1
 882 00d6 304B     		ldr	r3, .L13+56
 883 00d8 1B88     		ldrh	r3, [r3]
 884 00da 1BB2     		sxth	r3, r3
 885 00dc 1846     		mov	r0, r3
 886 00de FFF7FEFF 		bl	__aeabi_i2d
 887 00e2 0246     		mov	r2, r0
 888 00e4 0B46     		mov	r3, r1
 889 00e6 1046     		mov	r0, r2
 890 00e8 1946     		mov	r1, r3
 891 00ea 1DA3     		adr	r3, .L13
 892 00ec D3E90023 		ldrd	r2, [r3]
 893 00f0 FFF7FEFF 		bl	__aeabi_dmul
 894 00f4 0246     		mov	r2, r0
 895 00f6 0B46     		mov	r3, r1
 896 00f8 2046     		mov	r0, r4
 897 00fa 2946     		mov	r1, r5
 898 00fc FFF7FEFF 		bl	__aeabi_dcmpge
 899 0100 0346     		mov	r3, r0
 900 0102 002B     		cmp	r3, #0
 901 0104 02D0     		beq	.L8
 131:.\main.c      ****         {
 132:.\main.c      ****             reached_target = 1;
 902              		.loc 1 132 0
 903 0106 254B     		ldr	r3, .L13+60
 904 0108 0122     		movs	r2, #1
 905 010a 1A70     		strb	r2, [r3]
 906              	.L8:
 133:.\main.c      ****         }
 134:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 1.1)
 907              		.loc 1 134 0
 908 010c 214B     		ldr	r3, .L13+52
 909 010e 1B88     		ldrh	r3, [r3]
 910 0110 1BB2     		sxth	r3, r3
 911 0112 002B     		cmp	r3, #0
 912 0114 B8BF     		it	lt
 913 0116 5B42     		rsblt	r3, r3, #0
 914 0118 1846     		mov	r0, r3
 915 011a FFF7FEFF 		bl	__aeabi_i2d
 916 011e 0446     		mov	r4, r0
 917 0120 0D46     		mov	r5, r1
 918 0122 1D4B     		ldr	r3, .L13+56
 919 0124 1B88     		ldrh	r3, [r3]
 920 0126 1BB2     		sxth	r3, r3
 921 0128 1846     		mov	r0, r3
 922 012a FFF7FEFF 		bl	__aeabi_i2d
 923 012e 0246     		mov	r2, r0
 924 0130 0B46     		mov	r3, r1
 925 0132 1046     		mov	r0, r2
 926 0134 1946     		mov	r1, r3
 927 0136 0CA3     		adr	r3, .L13+8
 928 0138 D3E90023 		ldrd	r2, [r3]
 929 013c FFF7FEFF 		bl	__aeabi_dmul
 930 0140 0246     		mov	r2, r0
 931 0142 0B46     		mov	r3, r1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 20


 932 0144 2046     		mov	r0, r4
 933 0146 2946     		mov	r1, r5
 934 0148 FFF7FEFF 		bl	__aeabi_dcmpge
 935 014c 0346     		mov	r3, r0
 936 014e 002B     		cmp	r3, #0
 937 0150 02D0     		beq	.L5
 135:.\main.c      ****         {
 136:.\main.c      ****             overshot_target = 1;
 938              		.loc 1 136 0
 939 0152 134B     		ldr	r3, .L13+64
 940 0154 0122     		movs	r2, #1
 941 0156 1A70     		strb	r2, [r3]
 942              	.L5:
 137:.\main.c      ****         }
 138:.\main.c      ****     }
 139:.\main.c      **** //    if (track_mode == QUAD_STOP)
 140:.\main.c      **** //    {
 141:.\main.c      **** //        accum_dist += quad_diff1;
 142:.\main.c      **** //        char mes[16];
 143:.\main.c      **** //        sprintf(mes, "dist: %d\r\n", accum_dist);
 144:.\main.c      **** //        UART_PutString(mes);
 145:.\main.c      **** //        if(abs(accum_dist) >= target_distance_quad)
 146:.\main.c      **** //        {
 147:.\main.c      **** //            initBrake();
 148:.\main.c      **** //            track_mode = NO_TRACK;
 149:.\main.c      **** //        }
 150:.\main.c      **** //    } else if (track_mode == RF_STOP)
 151:.\main.c      **** //    { 
 152:.\main.c      **** //        // Do pythag
 153:.\main.c      **** //        double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_sta
 154:.\main.c      **** //        if (dist >= target_distance_cm)
 155:.\main.c      **** //        {
 156:.\main.c      **** //            initBrake();
 157:.\main.c      **** //            track_mode = NO_TRACK;
 158:.\main.c      **** //        }
 159:.\main.c      **** //    }
 160:.\main.c      **** }
 943              		.loc 1 160 0
 944 0158 B0BD     		pop	{r4, r5, r7, pc}
 945              	.L14:
 946 015a 00BFAFF3 		.align	3
 946      0080
 947              	.L13:
 948 0160 9A999999 		.word	-1717986918
 949 0164 9999E93F 		.word	1072273817
 950 0168 9A999999 		.word	-1717986918
 951 016c 9999F13F 		.word	1072798105
 952 0170 00000000 		.word	quad_count1
 953 0174 00000000 		.word	last_quad_count1
 954 0178 00000000 		.word	quad_count2
 955 017c 00000000 		.word	last_quad_count2
 956 0180 00000000 		.word	quad_diff1
 957 0184 00000000 		.word	quad_diff2
 958 0188 00000000 		.word	movement_state
 959 018c 00000000 		.word	flag_calc_wheelspeed
 960 0190 00000000 		.word	track_mode
 961 0194 00000000 		.word	accum_dist
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 21


 962 0198 00000000 		.word	target_distance_quad
 963 019c 00000000 		.word	reached_target
 964 01a0 00000000 		.word	overshot_target
 965              		.cfi_endproc
 966              	.LFE65:
 967              		.size	isr_quad1, .-isr_quad1
 968 01a4 AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 969              		.align	2
 970              		.global	isr_turn_timer
 971              		.thumb
 972              		.thumb_func
 973              		.type	isr_turn_timer, %function
 974              	isr_turn_timer:
 975              	.LFB66:
 161:.\main.c      **** 
 162:.\main.c      **** CY_ISR(isr_turn_timer)
 163:.\main.c      **** {
 976              		.loc 1 163 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 00AF     		add	r7, sp, #0
 985              		.cfi_def_cfa_register 7
 164:.\main.c      ****     if(movement_state == LTURN)
 986              		.loc 1 164 0
 987 0004 264B     		ldr	r3, .L21
 988 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0008 012B     		cmp	r3, #1
 990 000a 15D1     		bne	.L16
 165:.\main.c      ****     {
 166:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 991              		.loc 1 166 0
 992 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 993 0010 0346     		mov	r3, r0
 994 0012 1A46     		mov	r2, r3
 995 0014 234B     		ldr	r3, .L21+4
 996 0016 1B88     		ldrh	r3, [r3]
 997 0018 1BB2     		sxth	r3, r3
 998 001a D31A     		subs	r3, r2, r3
 999 001c 002B     		cmp	r3, #0
 1000 001e B8BF     		it	lt
 1001 0020 5B42     		rsblt	r3, r3, #0
 1002 0022 CF2B     		cmp	r3, #207
 1003 0024 3BDD     		ble	.L15
 167:.\main.c      ****         {
 168:.\main.c      ****             //movement_state = STOPPED;
 169:.\main.c      ****             brakeMotor();
 1004              		.loc 1 169 0
 1005 0026 FFF7FEFF 		bl	brakeMotor
 170:.\main.c      ****             movement_state = prev_movement_state;
 1006              		.loc 1 170 0
 1007 002a 1F4B     		ldr	r3, .L21+8
 1008 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 22


 1009 002e 1C4B     		ldr	r3, .L21
 1010 0030 1A70     		strb	r2, [r3]
 171:.\main.c      ****             Timer_2_Stop();
 1011              		.loc 1 171 0
 1012 0032 FFF7FEFF 		bl	Timer_2_Stop
 1013 0036 32E0     		b	.L15
 1014              	.L16:
 172:.\main.c      ****         }
 173:.\main.c      ****     }
 174:.\main.c      ****     else if (movement_state == RTURN)
 1015              		.loc 1 174 0
 1016 0038 194B     		ldr	r3, .L21
 1017 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 003c 022B     		cmp	r3, #2
 1019 003e 15D1     		bne	.L19
 175:.\main.c      ****     {
 176:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1020              		.loc 1 176 0
 1021 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1022 0044 0346     		mov	r3, r0
 1023 0046 1A46     		mov	r2, r3
 1024 0048 164B     		ldr	r3, .L21+4
 1025 004a 1B88     		ldrh	r3, [r3]
 1026 004c 1BB2     		sxth	r3, r3
 1027 004e D31A     		subs	r3, r2, r3
 1028 0050 002B     		cmp	r3, #0
 1029 0052 B8BF     		it	lt
 1030 0054 5B42     		rsblt	r3, r3, #0
 1031 0056 CF2B     		cmp	r3, #207
 1032 0058 21DD     		ble	.L15
 177:.\main.c      ****         {
 178:.\main.c      ****             //movement_state = STOPPED;
 179:.\main.c      ****             brakeMotor();
 1033              		.loc 1 179 0
 1034 005a FFF7FEFF 		bl	brakeMotor
 180:.\main.c      ****             movement_state = prev_movement_state;
 1035              		.loc 1 180 0
 1036 005e 124B     		ldr	r3, .L21+8
 1037 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0062 0F4B     		ldr	r3, .L21
 1039 0064 1A70     		strb	r2, [r3]
 181:.\main.c      ****             Timer_2_Stop();
 1040              		.loc 1 181 0
 1041 0066 FFF7FEFF 		bl	Timer_2_Stop
 1042 006a 18E0     		b	.L15
 1043              	.L19:
 182:.\main.c      ****         }
 183:.\main.c      ****     }
 184:.\main.c      ****     else if (movement_state == UTURN)
 1044              		.loc 1 184 0
 1045 006c 0C4B     		ldr	r3, .L21
 1046 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0070 072B     		cmp	r3, #7
 1048 0072 14D1     		bne	.L15
 185:.\main.c      ****     {
 186:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1049              		.loc 1 186 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 23


 1050 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1051 0078 0346     		mov	r3, r0
 1052 007a 1A46     		mov	r2, r3
 1053 007c 094B     		ldr	r3, .L21+4
 1054 007e 1B88     		ldrh	r3, [r3]
 1055 0080 1BB2     		sxth	r3, r3
 1056 0082 D31A     		subs	r3, r2, r3
 1057 0084 002B     		cmp	r3, #0
 1058 0086 B8BF     		it	lt
 1059 0088 5B42     		rsblt	r3, r3, #0
 1060 008a CF2B     		cmp	r3, #207
 1061 008c 07DD     		ble	.L15
 187:.\main.c      ****         {
 188:.\main.c      ****             //movement_state = STOPPED;
 189:.\main.c      ****             brakeMotor();
 1062              		.loc 1 189 0
 1063 008e FFF7FEFF 		bl	brakeMotor
 190:.\main.c      ****             movement_state = prev_movement_state;
 1064              		.loc 1 190 0
 1065 0092 054B     		ldr	r3, .L21+8
 1066 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1067 0096 024B     		ldr	r3, .L21
 1068 0098 1A70     		strb	r2, [r3]
 191:.\main.c      ****             Timer_2_Stop();
 1069              		.loc 1 191 0
 1070 009a FFF7FEFF 		bl	Timer_2_Stop
 1071              	.L15:
 192:.\main.c      ****         }
 193:.\main.c      ****     }
 194:.\main.c      **** }
 1072              		.loc 1 194 0
 1073 009e 80BD     		pop	{r7, pc}
 1074              	.L22:
 1075              		.align	2
 1076              	.L21:
 1077 00a0 00000000 		.word	movement_state
 1078 00a4 00000000 		.word	start_turn_count
 1079 00a8 00000000 		.word	prev_movement_state
 1080              		.cfi_endproc
 1081              	.LFE66:
 1082              		.size	isr_turn_timer, .-isr_turn_timer
 1083              		.section	.text.Stop_on_line,"ax",%progbits
 1084              		.align	2
 1085              		.global	Stop_on_line
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	Stop_on_line, %function
 1089              	Stop_on_line:
 1090              	.LFB67:
 195:.\main.c      **** 
 196:.\main.c      **** 
 197:.\main.c      **** CY_ISR (Stop_on_line)
 198:.\main.c      **** {
 1091              		.loc 1 198 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 24


 1095              		@ link register save eliminated.
 1096 0000 80B4     		push	{r7}
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 199:.\main.c      ****     movement_state = STOPPED;
 1101              		.loc 1 199 0
 1102 0004 054B     		ldr	r3, .L25
 1103 0006 0322     		movs	r2, #3
 1104 0008 1A70     		strb	r2, [r3]
 200:.\main.c      ****     if(movement_state != DRIVE) return;
 1105              		.loc 1 200 0
 1106 000a 044B     		ldr	r3, .L25
 1107 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 000e 002B     		cmp	r3, #0
 1109 0010 00D0     		beq	.L23
 1110 0012 00BF     		nop
 1111              	.L23:
 201:.\main.c      ****     //initTurnLeft();
 202:.\main.c      **** }
 1112              		.loc 1 202 0
 1113 0014 BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0016 5DF8047B 		ldr	r7, [sp], #4
 1117              		.cfi_restore 7
 1118              		.cfi_def_cfa_offset 0
 1119 001a 7047     		bx	lr
 1120              	.L26:
 1121              		.align	2
 1122              	.L25:
 1123 001c 00000000 		.word	movement_state
 1124              		.cfi_endproc
 1125              	.LFE67:
 1126              		.size	Stop_on_line, .-Stop_on_line
 1127              		.section	.rodata
 1128              		.align	2
 1129              	.LC0:
 1130 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1130      74696E67 
 1130      20726F62 
 1130      6F74210D 
 1130      0A00
 1131              		.section	.text.button,"ax",%progbits
 1132              		.align	2
 1133              		.global	button
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	button, %function
 1137              	button:
 1138              	.LFB68:
 203:.\main.c      **** 
 204:.\main.c      **** CY_ISR (button)
 205:.\main.c      **** {
 1139              		.loc 1 205 0
 1140              		.cfi_startproc
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 25


 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 80B5     		push	{r7, lr}
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 206:.\main.c      ****     if(BT_ENABLED)
 1149              		.loc 1 206 0
 1150 0004 054B     		ldr	r3, .L29
 1151 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0008 002B     		cmp	r3, #0
 1153 000a 02D0     		beq	.L28
 207:.\main.c      ****     {
 208:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1154              		.loc 1 208 0
 1155 000c 0448     		ldr	r0, .L29+4
 1156 000e FFF7FEFF 		bl	UART_PutString
 1157              	.L28:
 209:.\main.c      ****     }
 210:.\main.c      ****     movement_state = DRIVE;
 1158              		.loc 1 210 0
 1159 0012 044B     		ldr	r3, .L29+8
 1160 0014 0022     		movs	r2, #0
 1161 0016 1A70     		strb	r2, [r3]
 211:.\main.c      **** }
 1162              		.loc 1 211 0
 1163 0018 80BD     		pop	{r7, pc}
 1164              	.L30:
 1165 001a 00BF     		.align	2
 1166              	.L29:
 1167 001c 00000000 		.word	BT_ENABLED
 1168 0020 00000000 		.word	.LC0
 1169 0024 00000000 		.word	movement_state
 1170              		.cfi_endproc
 1171              	.LFE68:
 1172              		.size	button, .-button
 1173              		.section	.text.isr_adcTimer,"ax",%progbits
 1174              		.align	2
 1175              		.global	isr_adcTimer
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	isr_adcTimer, %function
 1179              	isr_adcTimer:
 1180              	.LFB69:
 212:.\main.c      **** 
 213:.\main.c      **** CY_ISR(isr_adcTimer)
 214:.\main.c      **** {
 1181              		.loc 1 214 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 26


 1189 0002 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 215:.\main.c      ****     ADC_StartConvert();
 1191              		.loc 1 215 0
 1192 0004 FFF7FEFF 		bl	ADC_StartConvert
 216:.\main.c      **** }
 1193              		.loc 1 216 0
 1194 0008 80BD     		pop	{r7, pc}
 1195              		.cfi_endproc
 1196              	.LFE69:
 1197              		.size	isr_adcTimer, .-isr_adcTimer
 1198 000a 00BF     		.section	.rodata
 1199 0012 0000     		.align	2
 1200              	.LC1:
 1201 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1201      7A6F6E65 
 1201      206C6566 
 1201      740D0A00 
 1202              		.section	.text.isr_deadzone,"ax",%progbits
 1203              		.align	2
 1204              		.global	isr_deadzone
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	isr_deadzone, %function
 1208              	isr_deadzone:
 1209              	.LFB70:
 217:.\main.c      **** 
 218:.\main.c      **** CY_ISR(isr_deadzone)
 219:.\main.c      **** {
 1210              		.loc 1 219 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 7, -8
 1217              		.cfi_offset 14, -4
 1218 0002 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 220:.\main.c      ****     sensorsDisabled = 0;
 1220              		.loc 1 220 0
 1221 0004 054B     		ldr	r3, .L33
 1222 0006 0022     		movs	r2, #0
 1223 0008 1A60     		str	r2, [r3]
 221:.\main.c      ****     deadzone = 0;
 1224              		.loc 1 221 0
 1225 000a 054B     		ldr	r3, .L33+4
 1226 000c 0022     		movs	r2, #0
 1227 000e 1A70     		strb	r2, [r3]
 222:.\main.c      ****     Timer_Deadzone_Stop();
 1228              		.loc 1 222 0
 1229 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 223:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1230              		.loc 1 223 0
 1231 0014 0348     		ldr	r0, .L33+8
 1232 0016 FFF7FEFF 		bl	UART_PutString
 224:.\main.c      **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 27


 1233              		.loc 1 224 0
 1234 001a 80BD     		pop	{r7, pc}
 1235              	.L34:
 1236              		.align	2
 1237              	.L33:
 1238 001c 00000000 		.word	sensorsDisabled
 1239 0020 00000000 		.word	deadzone
 1240 0024 14000000 		.word	.LC1
 1241              		.cfi_endproc
 1242              	.LFE70:
 1243              		.size	isr_deadzone, .-isr_deadzone
 1244              		.section	.rodata
 1245              		.align	2
 1246              	.LC2:
 1247 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1247      20747261 
 1247      76656C3A 
 1247      2025640D 
 1247      0A00
 1248 0036 0000     		.align	2
 1249              	.LC3:
 1250 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1250      67657265 
 1250      64206174 
 1250      20696E74 
 1250      65727365 
 1251 0055 000000   		.align	2
 1252              	.LC4:
 1253 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1253      7A6F6E65 
 1253      20656E74 
 1253      65726564 
 1253      210D0A00 
 1254              		.align	2
 1255              	.LC5:
 1256 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1256      65742064 
 1256      6973743A 
 1256      2025640D 
 1256      0A00
 1257 007e 0000     		.align	2
 1258              	.LC6:
 1259 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1259      67657265 
 1259      64206174 
 1259      20776869 
 1259      7465206C 
 1260              		.align	2
 1261              	.LC7:
 1262 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1262      67657265 
 1262      64206174 
 1262      20717561 
 1262      6420636F 
 1263              		.section	.text.main,"ax",%progbits
 1264              		.align	2
 1265              		.global	main
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 28


 1266              		.thumb
 1267              		.thumb_func
 1268              		.type	main, %function
 1269              	main:
 1270              	.LFB71:
 225:.\main.c      **** 
 226:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 227:.\main.c      **** 
 228:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 229:.\main.c      **** int main()
 230:.\main.c      **** {  
 1271              		.loc 1 230 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 64
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 90B0     		sub	sp, sp, #64
 1280              		.cfi_def_cfa_offset 72
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 231:.\main.c      **** 
 232:.\main.c      **** // ----- INITIALIZATIONS ----------
 233:.\main.c      ****     CYGlobalIntEnable;
 1283              		.loc 1 233 0
 1284              	@ 233 ".\main.c" 1
 1285 0006 62B6     		CPSIE   i
 1286              	@ 0 "" 2
 234:.\main.c      ****     if(ENABLE_PWM)
 235:.\main.c      ****     {
 236:.\main.c      ****         PWM_1_Start();// starting the pwm
 1287              		.loc 1 236 0
 1288              		.thumb
 1289 0008 FFF7FEFF 		bl	PWM_1_Start
 237:.\main.c      ****         PWM_2_Start();// starting the pwm
 1290              		.loc 1 237 0
 1291 000c FFF7FEFF 		bl	PWM_2_Start
 238:.\main.c      ****     }
 239:.\main.c      ****     
 240:.\main.c      ****     if(ENABLE_ADC)
 241:.\main.c      ****     {
 242:.\main.c      ****         ADC_Start();
 243:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 244:.\main.c      ****         //ADC_StartConvert();
 245:.\main.c      ****         
 246:.\main.c      ****         //start the ADC timer for software trigger mode
 247:.\main.c      ****         Timer_TS_Start();
 248:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 249:.\main.c      ****     }
 250:.\main.c      ****     
 251:.\main.c      ****     if (ENABLE_QUAD)
 252:.\main.c      ****     {
 253:.\main.c      ****         QuadDec_M1_Start();
 1292              		.loc 1 253 0
 1293 0010 FFF7FEFF 		bl	QuadDec_M1_Start
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 29


 254:.\main.c      ****         QuadDec_M2_Start();
 1294              		.loc 1 254 0
 1295 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 255:.\main.c      ****         
 256:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1296              		.loc 1 256 0
 1297 0018 B648     		ldr	r0, .L97
 1298 001a FFF7FEFF 		bl	isr_quad1_StartEx
 257:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1299              		.loc 1 257 0
 1300 001e B648     		ldr	r0, .L97+4
 1301 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 258:.\main.c      ****         
 259:.\main.c      ****         Timer_1_Start();
 1302              		.loc 1 259 0
 1303 0024 FFF7FEFF 		bl	Timer_1_Start
 260:.\main.c      ****     }
 261:.\main.c      ****     
 262:.\main.c      ****     if(ENABLE_STOP){
 263:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 264:.\main.c      ****         
 265:.\main.c      ****     }
 266:.\main.c      ****     isr_button_StartEx(button);
 1304              		.loc 1 266 0
 1305 0028 B448     		ldr	r0, .L97+8
 1306 002a FFF7FEFF 		bl	isr_button_StartEx
 267:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1307              		.loc 1 267 0
 1308 002e B448     		ldr	r0, .L97+12
 1309 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 268:.\main.c      **** 
 269:.\main.c      ****     // ------USB SETUP ----------------    
 270:.\main.c      ****     if (USE_USB){    
 271:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1310              		.loc 1 271 0
 1311 0034 0020     		movs	r0, #0
 1312 0036 0121     		movs	r1, #1
 1313 0038 FFF7FEFF 		bl	USBUART_Start
 272:.\main.c      ****         if (USBUART_GetConfiguration())
 1314              		.loc 1 272 0
 1315 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1316 0040 0346     		mov	r3, r0
 1317 0042 002B     		cmp	r3, #0
 1318 0044 01D0     		beq	.L36
 273:.\main.c      ****             {
 274:.\main.c      ****                  USBUART_CDC_Init();
 1319              		.loc 1 274 0
 1320 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1321              	.L36:
 275:.\main.c      ****             }
 276:.\main.c      ****     }
 277:.\main.c      ****     
 278:.\main.c      ****     if(BIN_ENABLED){
 1322              		.loc 1 278 0
 1323 004a AE4B     		ldr	r3, .L97+16
 1324 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 004e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 30


 1326 0050 01D0     		beq	.L37
 279:.\main.c      ****         changeToRF();
 1327              		.loc 1 279 0
 1328 0052 FFF7FEFF 		bl	changeToRF
 1329              	.L37:
 280:.\main.c      ****     }
 281:.\main.c      ****     
 282:.\main.c      ****     if(BT_ENABLED){
 1330              		.loc 1 282 0
 1331 0056 AC4B     		ldr	r3, .L97+20
 1332 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 005a 002B     		cmp	r3, #0
 1334 005c 01D0     		beq	.L38
 283:.\main.c      ****         changeToBT();
 1335              		.loc 1 283 0
 1336 005e FFF7FEFF 		bl	changeToBT
 1337              	.L38:
 284:.\main.c      ****     }
 285:.\main.c      ****     
 286:.\main.c      ****     uint16 actionDebounce = 0;
 1338              		.loc 1 286 0
 1339 0062 0023     		movs	r3, #0
 1340 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1341              	.L93:
 1342              	.LBB2:
 287:.\main.c      ****     
 288:.\main.c      ****     //usbPutString("Started");
 289:.\main.c      ****     for(;;)
 290:.\main.c      ****     {
 291:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 292:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1343              		.loc 1 292 0
 1344 0066 FFF7FEFF 		bl	Quad_Dec_response
 293:.\main.c      ****         if(BIN_ENABLED == 1)
 1345              		.loc 1 293 0
 1346 006a A64B     		ldr	r3, .L97+16
 1347 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 006e 012B     		cmp	r3, #1
 1349 0070 03D1     		bne	.L39
 294:.\main.c      ****         {
 295:.\main.c      ****             handle_rx_binary();
 1350              		.loc 1 295 0
 1351 0072 FFF7FEFF 		bl	handle_rx_binary
 296:.\main.c      ****             print_RF();
 1352              		.loc 1 296 0
 1353 0076 FFF7FEFF 		bl	print_RF
 1354              	.L39:
 297:.\main.c      ****         }
 298:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 299:.\main.c      ****         
 300:.\main.c      ****         uint8 frontSensors[5];
 301:.\main.c      ****         readFrontSensors(frontSensors);
 1355              		.loc 1 301 0
 1356 007a 07F13403 		add	r3, r7, #52
 1357 007e 1846     		mov	r0, r3
 1358 0080 FFF7FEFF 		bl	readFrontSensors
 302:.\main.c      ****         
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 31


 303:.\main.c      ****         switch(track_mode)
 1359              		.loc 1 303 0
 1360 0084 A14B     		ldr	r3, .L97+24
 1361 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 0088 072B     		cmp	r3, #7
 1363 008a 00F29382 		bhi	.L40
 1364 008e 01A2     		adr	r2, .L42
 1365 0090 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1366              		.p2align 2
 1367              	.L42:
 1368 0094 B5050000 		.word	.L40+1
 1369 0098 B5050000 		.word	.L40+1
 1370 009c B5050000 		.word	.L40+1
 1371 00a0 B5000000 		.word	.L45+1
 1372 00a4 B5050000 		.word	.L40+1
 1373 00a8 F9000000 		.word	.L47+1
 1374 00ac 1F010000 		.word	.L48+1
 1375 00b0 1F010000 		.word	.L48+1
 1376              		.p2align 1
 1377              	.L45:
 304:.\main.c      ****         {
 305:.\main.c      ****             case SQUARE_TRACK:
 306:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1378              		.loc 1 306 0
 1379 00b4 964B     		ldr	r3, .L97+28
 1380 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 00b8 012B     		cmp	r3, #1
 1382 00ba 1CD0     		beq	.L49
 1383              		.loc 1 306 0 is_stmt 0 discriminator 1
 1384 00bc 944B     		ldr	r3, .L97+28
 1385 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 00c0 022B     		cmp	r3, #2
 1387 00c2 18D0     		beq	.L49
 307:.\main.c      ****                 {
 308:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1388              		.loc 1 308 0 is_stmt 1
 1389 00c4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1390 00c8 012B     		cmp	r3, #1
 1391 00ca 06D1     		bne	.L50
 1392              		.loc 1 308 0 is_stmt 0 discriminator 1
 1393 00cc 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1394 00d0 012B     		cmp	r3, #1
 1395 00d2 02D1     		bne	.L50
 309:.\main.c      ****                         initTurnLeft();
 1396              		.loc 1 309 0 is_stmt 1
 1397 00d4 FFF7FEFF 		bl	initTurnLeft
 1398 00d8 0DE0     		b	.L49
 1399              	.L50:
 310:.\main.c      ****                     }
 311:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1400              		.loc 1 311 0
 1401 00da 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1402 00de 012B     		cmp	r3, #1
 1403 00e0 06D1     		bne	.L51
 1404              		.loc 1 311 0 is_stmt 0 discriminator 1
 1405 00e2 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1406 00e6 012B     		cmp	r3, #1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 32


 1407 00e8 02D1     		bne	.L51
 312:.\main.c      ****                     {
 313:.\main.c      ****                         initTurnRight();
 1408              		.loc 1 313 0 is_stmt 1
 1409 00ea FFF7FEFF 		bl	initTurnRight
 1410 00ee 02E0     		b	.L49
 1411              	.L51:
 314:.\main.c      ****                     }
 315:.\main.c      ****                     else inittrackLineZ();
 1412              		.loc 1 315 0
 1413 00f0 FFF7FEFF 		bl	inittrackLineZ
 316:.\main.c      ****                 }
 317:.\main.c      ****             break;
 1414              		.loc 1 317 0
 1415 00f4 5EE2     		b	.L40
 1416              	.L49:
 1417 00f6 5DE2     		b	.L40
 1418              	.L47:
 318:.\main.c      ****             case NO_TRACK:
 319:.\main.c      ****             break;
 320:.\main.c      ****             case CURVE_TRACK:
 321:.\main.c      ****             break;
 322:.\main.c      ****             case U_TRACK:
 323:.\main.c      ****             break;
 324:.\main.c      ****             case QUAD_STOP:
 325:.\main.c      ****             break;
 326:.\main.c      ****             case RF_STOP:
 327:.\main.c      ****                 if(initial_pos_valid == 1)
 1419              		.loc 1 327 0
 1420 00f8 864B     		ldr	r3, .L97+32
 1421 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 00fc 012B     		cmp	r3, #1
 1423 00fe 0DD1     		bne	.L52
 328:.\main.c      ****                 {
 329:.\main.c      ****                     //changeToBT();
 330:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 331:.\main.c      ****                     //changeToRF();
 332:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1424              		.loc 1 332 0
 1425 0100 854B     		ldr	r3, .L97+36
 1426 0102 5A88     		ldrh	r2, [r3, #2]
 1427 0104 854B     		ldr	r3, .L97+40
 1428 0106 1A80     		strh	r2, [r3]	@ movhi
 333:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1429              		.loc 1 333 0
 1430 0108 834B     		ldr	r3, .L97+36
 1431 010a 9A88     		ldrh	r2, [r3, #4]
 1432 010c 844B     		ldr	r3, .L97+44
 1433 010e 1A80     		strh	r2, [r3]	@ movhi
 334:.\main.c      ****                     initial_pos_valid = 2;
 1434              		.loc 1 334 0
 1435 0110 804B     		ldr	r3, .L97+32
 1436 0112 0222     		movs	r2, #2
 1437 0114 1A70     		strb	r2, [r3]
 335:.\main.c      ****                     initForward();
 1438              		.loc 1 335 0
 1439 0116 FFF7FEFF 		bl	initForward
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 33


 336:.\main.c      ****                 }
 337:.\main.c      ****             break;
 1440              		.loc 1 337 0
 1441 011a 4BE2     		b	.L40
 1442              	.L52:
 1443 011c 4AE2     		b	.L40
 1444              	.L48:
 338:.\main.c      ****             case MAP_TRAVERSE:
 339:.\main.c      ****             case DEST_TEST:
 340:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1445              		.loc 1 340 0
 1446 011e 7C4B     		ldr	r3, .L97+28
 1447 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0122 012B     		cmp	r3, #1
 1449 0124 00F04582 		beq	.L53
 1450              		.loc 1 340 0 is_stmt 0 discriminator 1
 1451 0128 794B     		ldr	r3, .L97+28
 1452 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 012c 022B     		cmp	r3, #2
 1454 012e 00F04082 		beq	.L53
 1455              		.loc 1 340 0 discriminator 2
 1456 0132 774B     		ldr	r3, .L97+28
 1457 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 0136 072B     		cmp	r3, #7
 1459 0138 00F03B82 		beq	.L53
 1460              	.LBB3:
 341:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 342:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1461              		.loc 1 342 0 is_stmt 1
 1462 013c 794B     		ldr	r3, .L97+48
 1463 013e 1B88     		ldrh	r3, [r3]
 1464 0140 1A46     		mov	r2, r3
 1465 0142 794B     		ldr	r3, .L97+52
 1466 0144 9B5C     		ldrb	r3, [r3, r2]
 1467 0146 87F83D30 		strb	r3, [r7, #61]
 343:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1468              		.loc 1 343 0
 1469 014a 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1470 014e 012B     		cmp	r3, #1
 1471 0150 03D1     		bne	.L54
 1472              		.loc 1 343 0 is_stmt 0 discriminator 1
 1473 0152 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1474 0156 012B     		cmp	r3, #1
 1475 0158 09D0     		beq	.L55
 1476              	.L54:
 1477              		.loc 1 343 0 discriminator 3
 1478 015a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1479 015e 012B     		cmp	r3, #1
 1480 0160 40F0FA80 		bne	.L56
 1481              		.loc 1 343 0 discriminator 4
 1482 0164 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1483 0168 012B     		cmp	r3, #1
 1484 016a 40F0F580 		bne	.L56
 1485              	.L55:
 344:.\main.c      ****                         if(sensorsDisabled == 0)
 1486              		.loc 1 344 0 is_stmt 1
 1487 016e 6F4B     		ldr	r3, .L97+56
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 34


 1488 0170 1B68     		ldr	r3, [r3]
 1489 0172 002B     		cmp	r3, #0
 1490 0174 40F0BD80 		bne	.L57
 345:.\main.c      ****                         {
 346:.\main.c      ****                             actionDebounce++;
 1491              		.loc 1 346 0
 1492 0178 FB8F     		ldrh	r3, [r7, #62]
 1493 017a 0133     		adds	r3, r3, #1
 1494 017c FB87     		strh	r3, [r7, #62]	@ movhi
 347:.\main.c      ****                             if(actionDebounce >= 800)
 1495              		.loc 1 347 0
 1496 017e FB8F     		ldrh	r3, [r7, #62]
 1497 0180 B3F5487F 		cmp	r3, #800
 1498 0184 C0F0B580 		bcc	.L57
 1499              	.LBB4:
 348:.\main.c      ****                             {
 349:.\main.c      ****                                 char mes[16];
 350:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1500              		.loc 1 350 0
 1501 0188 694B     		ldr	r3, .L97+60
 1502 018a 1B88     		ldrh	r3, [r3]
 1503 018c 1BB2     		sxth	r3, r3
 1504 018e 07F12402 		add	r2, r7, #36
 1505 0192 1046     		mov	r0, r2
 1506 0194 6749     		ldr	r1, .L97+64
 1507 0196 1A46     		mov	r2, r3
 1508 0198 FFF7FEFF 		bl	sprintf
 351:.\main.c      ****                                  UART_PutString(mes);
 1509              		.loc 1 351 0
 1510 019c 07F12403 		add	r3, r7, #36
 1511 01a0 1846     		mov	r0, r3
 1512 01a2 FFF7FEFF 		bl	UART_PutString
 352:.\main.c      ****                             if(reached_target == 1)
 1513              		.loc 1 352 0
 1514 01a6 644B     		ldr	r3, .L97+68
 1515 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 01aa 012B     		cmp	r3, #1
 1517 01ac 40F0A180 		bne	.L57
 1518              	.LBB5:
 353:.\main.c      ****                             {
 354:.\main.c      ****                                 if(nextStep == 'D')
 1519              		.loc 1 354 0
 1520 01b0 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1521 01b4 442B     		cmp	r3, #68
 1522 01b6 0CD1     		bne	.L59
 355:.\main.c      ****                                 {
 356:.\main.c      ****                                     instructionCount += 2;
 1523              		.loc 1 356 0
 1524 01b8 5A4B     		ldr	r3, .L97+48
 1525 01ba 1B88     		ldrh	r3, [r3]
 1526 01bc 0233     		adds	r3, r3, #2
 1527 01be 9AB2     		uxth	r2, r3
 1528 01c0 584B     		ldr	r3, .L97+48
 1529 01c2 1A80     		strh	r2, [r3]	@ movhi
 357:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1530              		.loc 1 357 0
 1531 01c4 574B     		ldr	r3, .L97+48
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 35


 1532 01c6 1B88     		ldrh	r3, [r3]
 1533 01c8 1A46     		mov	r2, r3
 1534 01ca 574B     		ldr	r3, .L97+52
 1535 01cc 9B5C     		ldrb	r3, [r3, r2]
 1536 01ce 87F83D30 		strb	r3, [r7, #61]
 1537              	.L59:
 358:.\main.c      ****                                 }
 359:.\main.c      ****                                 
 360:.\main.c      ****                                 sensorsDisabled = 1;
 1538              		.loc 1 360 0
 1539 01d2 564B     		ldr	r3, .L97+56
 1540 01d4 0122     		movs	r2, #1
 1541 01d6 1A60     		str	r2, [r3]
 361:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1542              		.loc 1 361 0
 1543 01d8 5848     		ldr	r0, .L97+72
 1544 01da FFF7FEFF 		bl	UART_PutString
 362:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1545              		.loc 1 362 0
 1546 01de 5848     		ldr	r0, .L97+76
 1547 01e0 FFF7FEFF 		bl	UART_PutString
 363:.\main.c      ****                                 deadzone = 1;
 1548              		.loc 1 363 0
 1549 01e4 574B     		ldr	r3, .L97+80
 1550 01e6 0122     		movs	r2, #1
 1551 01e8 1A70     		strb	r2, [r3]
 364:.\main.c      ****                                 Timer_Deadzone_WriteCounter(40000);
 1552              		.loc 1 364 0
 1553 01ea 49F64040 		movw	r0, #40000
 1554 01ee FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 365:.\main.c      ****                                 accum_dist = 0;
 1555              		.loc 1 365 0
 1556 01f2 4F4B     		ldr	r3, .L97+60
 1557 01f4 0022     		movs	r2, #0
 1558 01f6 1A80     		strh	r2, [r3]	@ movhi
 366:.\main.c      ****                                 uint8 nextStepDist;
 367:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1559              		.loc 1 367 0
 1560 01f8 4A4B     		ldr	r3, .L97+48
 1561 01fa 1B88     		ldrh	r3, [r3]
 1562 01fc 1A46     		mov	r2, r3
 1563 01fe 524B     		ldr	r3, .L97+84
 1564 0200 1B88     		ldrh	r3, [r3]
 1565 0202 053B     		subs	r3, r3, #5
 1566 0204 9A42     		cmp	r2, r3
 1567 0206 07DC     		bgt	.L60
 1568              		.loc 1 367 0 is_stmt 0 discriminator 1
 1569 0208 464B     		ldr	r3, .L97+48
 1570 020a 1B88     		ldrh	r3, [r3]
 1571 020c 0333     		adds	r3, r3, #3
 1572 020e 464A     		ldr	r2, .L97+52
 1573 0210 D35C     		ldrb	r3, [r2, r3]
 1574 0212 87F83C30 		strb	r3, [r7, #60]
 1575 0216 02E0     		b	.L61
 1576              	.L60:
 368:.\main.c      ****                                 else nextStepDist = 0;
 1577              		.loc 1 368 0 is_stmt 1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 36


 1578 0218 0023     		movs	r3, #0
 1579 021a 87F83C30 		strb	r3, [r7, #60]
 1580              	.L61:
 369:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1581              		.loc 1 369 0
 1582 021e 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1583 0222 013B     		subs	r3, r3, #1
 1584 0224 9BB2     		uxth	r3, r3
 1585 0226 1A46     		mov	r2, r3	@ movhi
 1586 0228 9200     		lsls	r2, r2, #2
 1587 022a 1344     		add	r3, r3, r2
 1588 022c 1A46     		mov	r2, r3	@ movhi
 1589 022e D200     		lsls	r2, r2, #3
 1590 0230 D31A     		subs	r3, r2, r3
 1591 0232 9B00     		lsls	r3, r3, #2
 1592 0234 9BB2     		uxth	r3, r3
 1593 0236 9AB2     		uxth	r2, r3
 1594 0238 444B     		ldr	r3, .L97+88
 1595 023a 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****                                 
 371:.\main.c      ****                                 
 372:.\main.c      ****                                 
 373:.\main.c      ****                                 switch(nextStep)
 1596              		.loc 1 373 0
 1597 023c 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1598 0240 4C3B     		subs	r3, r3, #76
 1599 0242 092B     		cmp	r3, #9
 1600 0244 36D8     		bhi	.L94
 1601 0246 01A2     		adr	r2, .L64
 1602 0248 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1603              		.p2align 2
 1604              	.L64:
 1605 024c 83020000 		.word	.L63+1
 1606 0250 B5020000 		.word	.L94+1
 1607 0254 B5020000 		.word	.L94+1
 1608 0258 B5020000 		.word	.L94+1
 1609 025c B5020000 		.word	.L94+1
 1610 0260 B5020000 		.word	.L94+1
 1611 0264 99020000 		.word	.L65+1
 1612 0268 75020000 		.word	.L66+1
 1613 026c B5020000 		.word	.L94+1
 1614 0270 AF020000 		.word	.L67+1
 1615              		.p2align 1
 1616              	.L66:
 374:.\main.c      ****                                 {
 375:.\main.c      ****                                     case 'S':
 376:.\main.c      ****                                         initTrackU();
 1617              		.loc 1 376 0
 1618 0274 FFF7FEFF 		bl	initTrackU
 377:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1619              		.loc 1 377 0
 1620 0278 42F21070 		movw	r0, #10000
 1621 027c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 378:.\main.c      ****                                         //do nothing
 379:.\main.c      ****                                     break;
 1622              		.loc 1 379 0
 1623 0280 19E0     		b	.L68
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 37


 1624              	.L63:
 380:.\main.c      ****                                     case 'L':
 381:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 382:.\main.c      ****                                         initTurnLeft();
 1625              		.loc 1 382 0
 1626 0282 FFF7FEFF 		bl	initTurnLeft
 383:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1627              		.loc 1 383 0
 1628 0286 314B     		ldr	r3, .L97+88
 1629 0288 1B88     		ldrh	r3, [r3]
 1630 028a 9BB2     		uxth	r3, r3
 1631 028c 4B3B     		subs	r3, r3, #75
 1632 028e 9BB2     		uxth	r3, r3
 1633 0290 9AB2     		uxth	r2, r3
 1634 0292 2E4B     		ldr	r3, .L97+88
 1635 0294 1A80     		strh	r2, [r3]	@ movhi
 384:.\main.c      ****                                     break;
 1636              		.loc 1 384 0
 1637 0296 0EE0     		b	.L68
 1638              	.L65:
 385:.\main.c      ****                                     case 'R':
 386:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 387:.\main.c      ****                                         initTurnRight();
 1639              		.loc 1 387 0
 1640 0298 FFF7FEFF 		bl	initTurnRight
 388:.\main.c      ****                                         target_distance_quad += (208 - TURN_OFFSET);
 1641              		.loc 1 388 0
 1642 029c 2B4B     		ldr	r3, .L97+88
 1643 029e 1B88     		ldrh	r3, [r3]
 1644 02a0 9BB2     		uxth	r3, r3
 1645 02a2 8533     		adds	r3, r3, #133
 1646 02a4 9BB2     		uxth	r3, r3
 1647 02a6 9AB2     		uxth	r2, r3
 1648 02a8 284B     		ldr	r3, .L97+88
 1649 02aa 1A80     		strh	r2, [r3]	@ movhi
 389:.\main.c      ****                                         
 390:.\main.c      ****                                     break;
 1650              		.loc 1 390 0
 1651 02ac 03E0     		b	.L68
 1652              	.L67:
 391:.\main.c      ****                                     case 'U':
 392:.\main.c      ****                                         // Direction not tracked any more
 393:.\main.c      ****                                         initTurnU();
 1653              		.loc 1 393 0
 1654 02ae FFF7FEFF 		bl	initTurnU
 394:.\main.c      ****                                        // target_distance_quad += 208;
 395:.\main.c      ****                                     break;
 1655              		.loc 1 395 0
 1656 02b2 00E0     		b	.L68
 1657              	.L94:
 396:.\main.c      ****                                     
 397:.\main.c      ****                                     default:
 398:.\main.c      ****                                         //do nothing
 399:.\main.c      ****                                         break;
 1658              		.loc 1 399 0
 1659 02b4 00BF     		nop
 1660              	.L68:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 38


 400:.\main.c      ****                                 }
 401:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1661              		.loc 1 401 0
 1662 02b6 254B     		ldr	r3, .L97+88
 1663 02b8 1B88     		ldrh	r3, [r3]
 1664 02ba 1BB2     		sxth	r3, r3
 1665 02bc 07F12402 		add	r2, r7, #36
 1666 02c0 1046     		mov	r0, r2
 1667 02c2 2349     		ldr	r1, .L97+92
 1668 02c4 1A46     		mov	r2, r3
 1669 02c6 FFF7FEFF 		bl	sprintf
 402:.\main.c      ****                                  UART_PutString(mes);
 1670              		.loc 1 402 0
 1671 02ca 07F12403 		add	r3, r7, #36
 1672 02ce 1846     		mov	r0, r3
 1673 02d0 FFF7FEFF 		bl	UART_PutString
 403:.\main.c      ****                                 
 404:.\main.c      ****                                 Timer_Deadzone_Start();
 1674              		.loc 1 404 0
 1675 02d4 FFF7FEFF 		bl	Timer_Deadzone_Start
 405:.\main.c      ****                                 reached_target = 0;
 1676              		.loc 1 405 0
 1677 02d8 174B     		ldr	r3, .L97+68
 1678 02da 0022     		movs	r2, #0
 1679 02dc 1A70     		strb	r2, [r3]
 406:.\main.c      ****                                 overshot_target = 0;
 1680              		.loc 1 406 0
 1681 02de 1D4B     		ldr	r3, .L97+96
 1682 02e0 0022     		movs	r2, #0
 1683 02e2 1A70     		strb	r2, [r3]
 407:.\main.c      ****                                 instructionCount += 2;
 1684              		.loc 1 407 0
 1685 02e4 0F4B     		ldr	r3, .L97+48
 1686 02e6 1B88     		ldrh	r3, [r3]
 1687 02e8 0233     		adds	r3, r3, #2
 1688 02ea 9AB2     		uxth	r2, r3
 1689 02ec 0D4B     		ldr	r3, .L97+48
 1690 02ee 1A80     		strh	r2, [r3]	@ movhi
 1691              	.LBE5:
 1692              	.LBE4:
 344:.\main.c      ****                         {
 1693              		.loc 1 344 0
 1694 02f0 5FE1     		b	.L53
 1695              	.L57:
 344:.\main.c      ****                         {
 1696              		.loc 1 344 0 is_stmt 0 discriminator 1
 1697 02f2 5EE1     		b	.L53
 1698              	.L98:
 1699              		.align	2
 1700              	.L97:
 1701 02f4 00000000 		.word	isr_quad1
 1702 02f8 00000000 		.word	isr_turn_timer
 1703 02fc 00000000 		.word	button
 1704 0300 00000000 		.word	isr_deadzone
 1705 0304 00000000 		.word	BIN_ENABLED
 1706 0308 00000000 		.word	BT_ENABLED
 1707 030c 00000000 		.word	track_mode
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 39


 1708 0310 00000000 		.word	movement_state
 1709 0314 00000000 		.word	initial_pos_valid
 1710 0318 00000000 		.word	system_state
 1711 031c 00000000 		.word	initial_x_pos
 1712 0320 00000000 		.word	initial_y_pos
 1713 0324 00000000 		.word	instructionCount
 1714 0328 00000000 		.word	instructions
 1715 032c 00000000 		.word	sensorsDisabled
 1716 0330 00000000 		.word	accum_dist
 1717 0334 24000000 		.word	.LC2
 1718 0338 00000000 		.word	reached_target
 1719 033c 38000000 		.word	.LC3
 1720 0340 58000000 		.word	.LC4
 1721 0344 00000000 		.word	deadzone
 1722 0348 00000000 		.word	instructionLength
 1723 034c 00000000 		.word	target_distance_quad
 1724 0350 6C000000 		.word	.LC5
 1725 0354 00000000 		.word	overshot_target
 1726              	.L56:
 408:.\main.c      ****                             }
 409:.\main.c      ****                             }
 410:.\main.c      ****                         }
 411:.\main.c      ****                     }
 412:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1727              		.loc 1 412 0 is_stmt 1
 1728 0358 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1729 035c 002B     		cmp	r3, #0
 1730 035e 7BD1     		bne	.L69
 1731              		.loc 1 412 0 is_stmt 0 discriminator 1
 1732 0360 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1733 0364 002B     		cmp	r3, #0
 1734 0366 77D1     		bne	.L69
 1735              		.loc 1 412 0 discriminator 2
 1736 0368 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1737 036c 002B     		cmp	r3, #0
 1738 036e 73D1     		bne	.L69
 1739              		.loc 1 412 0 discriminator 3
 1740 0370 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1741 0374 002B     		cmp	r3, #0
 1742 0376 6FD1     		bne	.L69
 1743              		.loc 1 412 0 discriminator 4
 1744 0378 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1745 037c 002B     		cmp	r3, #0
 1746 037e 6BD1     		bne	.L69
 1747              		.loc 1 412 0 discriminator 5
 1748 0380 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1749 0384 552B     		cmp	r3, #85
 1750 0386 67D1     		bne	.L69
 413:.\main.c      ****                     {
 414:.\main.c      ****                         if(sensorsDisabled == 0)
 1751              		.loc 1 414 0 is_stmt 1
 1752 0388 A24B     		ldr	r3, .L99
 1753 038a 1B68     		ldr	r3, [r3]
 1754 038c 002B     		cmp	r3, #0
 1755 038e 62D1     		bne	.L70
 415:.\main.c      ****                         {
 416:.\main.c      ****                                 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 40


 417:.\main.c      ****                                 actionDebounce++;
 1756              		.loc 1 417 0
 1757 0390 FB8F     		ldrh	r3, [r7, #62]
 1758 0392 0133     		adds	r3, r3, #1
 1759 0394 FB87     		strh	r3, [r7, #62]	@ movhi
 418:.\main.c      ****                                 if(actionDebounce >= 3000)
 1760              		.loc 1 418 0
 1761 0396 FB8F     		ldrh	r3, [r7, #62]
 1762 0398 40F6B732 		movw	r2, #2999
 1763 039c 9342     		cmp	r3, r2
 1764 039e 5AD9     		bls	.L70
 419:.\main.c      ****                                 {
 420:.\main.c      ****                                     if(reached_target == 1)
 1765              		.loc 1 420 0
 1766 03a0 9D4B     		ldr	r3, .L99+4
 1767 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 03a4 012B     		cmp	r3, #1
 1769 03a6 56D1     		bne	.L70
 1770              	.LBB6:
 421:.\main.c      ****                                     {
 422:.\main.c      ****                                 char mes[16];
 423:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1771              		.loc 1 423 0
 1772 03a8 9C4B     		ldr	r3, .L99+8
 1773 03aa 1B88     		ldrh	r3, [r3]
 1774 03ac 1BB2     		sxth	r3, r3
 1775 03ae 07F11402 		add	r2, r7, #20
 1776 03b2 1046     		mov	r0, r2
 1777 03b4 9A49     		ldr	r1, .L99+12
 1778 03b6 1A46     		mov	r2, r3
 1779 03b8 FFF7FEFF 		bl	sprintf
 424:.\main.c      ****                                  UART_PutString(mes);
 1780              		.loc 1 424 0
 1781 03bc 07F11403 		add	r3, r7, #20
 1782 03c0 1846     		mov	r0, r3
 1783 03c2 FFF7FEFF 		bl	UART_PutString
 425:.\main.c      ****                                      accum_dist = 0;
 1784              		.loc 1 425 0
 1785 03c6 954B     		ldr	r3, .L99+8
 1786 03c8 0022     		movs	r2, #0
 1787 03ca 1A80     		strh	r2, [r3]	@ movhi
 426:.\main.c      ****                                 uint8 nextStepDist;
 427:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1788              		.loc 1 427 0
 1789 03cc 954B     		ldr	r3, .L99+16
 1790 03ce 1B88     		ldrh	r3, [r3]
 1791 03d0 1A46     		mov	r2, r3
 1792 03d2 954B     		ldr	r3, .L99+20
 1793 03d4 1B88     		ldrh	r3, [r3]
 1794 03d6 053B     		subs	r3, r3, #5
 1795 03d8 9A42     		cmp	r2, r3
 1796 03da 07DC     		bgt	.L71
 1797              		.loc 1 427 0 is_stmt 0 discriminator 1
 1798 03dc 914B     		ldr	r3, .L99+16
 1799 03de 1B88     		ldrh	r3, [r3]
 1800 03e0 0333     		adds	r3, r3, #3
 1801 03e2 924A     		ldr	r2, .L99+24
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 41


 1802 03e4 D35C     		ldrb	r3, [r2, r3]
 1803 03e6 87F83B30 		strb	r3, [r7, #59]
 1804 03ea 02E0     		b	.L72
 1805              	.L71:
 428:.\main.c      ****                                 else nextStepDist = 0;
 1806              		.loc 1 428 0 is_stmt 1
 1807 03ec 0023     		movs	r3, #0
 1808 03ee 87F83B30 		strb	r3, [r7, #59]
 1809              	.L72:
 429:.\main.c      ****                                 
 430:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1810              		.loc 1 430 0
 1811 03f2 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1812 03f6 013B     		subs	r3, r3, #1
 1813 03f8 9BB2     		uxth	r3, r3
 1814 03fa 1A46     		mov	r2, r3	@ movhi
 1815 03fc 9200     		lsls	r2, r2, #2
 1816 03fe 1344     		add	r3, r3, r2
 1817 0400 1A46     		mov	r2, r3	@ movhi
 1818 0402 D200     		lsls	r2, r2, #3
 1819 0404 D31A     		subs	r3, r2, r3
 1820 0406 9B00     		lsls	r3, r3, #2
 1821 0408 9BB2     		uxth	r3, r3
 1822 040a 9AB2     		uxth	r2, r3
 1823 040c 884B     		ldr	r3, .L99+28
 1824 040e 1A80     		strh	r2, [r3]	@ movhi
 431:.\main.c      ****                                 
 432:.\main.c      ****                                     UART_PutString("Triggered at white light \r\n");
 1825              		.loc 1 432 0
 1826 0410 8848     		ldr	r0, .L99+32
 1827 0412 FFF7FEFF 		bl	UART_PutString
 433:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1828              		.loc 1 433 0
 1829 0416 8848     		ldr	r0, .L99+36
 1830 0418 FFF7FEFF 		bl	UART_PutString
 434:.\main.c      ****                                     deadzone = 1;
 1831              		.loc 1 434 0
 1832 041c 874B     		ldr	r3, .L99+40
 1833 041e 0122     		movs	r2, #1
 1834 0420 1A70     		strb	r2, [r3]
 435:.\main.c      ****                                     Timer_Deadzone_WriteCounter(40000);
 1835              		.loc 1 435 0
 1836 0422 49F64040 		movw	r0, #40000
 1837 0426 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 436:.\main.c      ****                                     Timer_Deadzone_Start();
 1838              		.loc 1 436 0
 1839 042a FFF7FEFF 		bl	Timer_Deadzone_Start
 437:.\main.c      ****                                     actionDebounce = 0;
 1840              		.loc 1 437 0
 1841 042e 0023     		movs	r3, #0
 1842 0430 FB87     		strh	r3, [r7, #62]	@ movhi
 438:.\main.c      ****                                     sensorsDisabled = 1;
 1843              		.loc 1 438 0
 1844 0432 784B     		ldr	r3, .L99
 1845 0434 0122     		movs	r2, #1
 1846 0436 1A60     		str	r2, [r3]
 439:.\main.c      ****                                     initTurnU();
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 42


 1847              		.loc 1 439 0
 1848 0438 FFF7FEFF 		bl	initTurnU
 440:.\main.c      ****                                     reached_target = 0;
 1849              		.loc 1 440 0
 1850 043c 764B     		ldr	r3, .L99+4
 1851 043e 0022     		movs	r2, #0
 1852 0440 1A70     		strb	r2, [r3]
 441:.\main.c      ****                                     overshot_target = 0;
 1853              		.loc 1 441 0
 1854 0442 7F4B     		ldr	r3, .L99+44
 1855 0444 0022     		movs	r2, #0
 1856 0446 1A70     		strb	r2, [r3]
 442:.\main.c      ****                                     instructionCount += 2;
 1857              		.loc 1 442 0
 1858 0448 764B     		ldr	r3, .L99+16
 1859 044a 1B88     		ldrh	r3, [r3]
 1860 044c 0233     		adds	r3, r3, #2
 1861 044e 9AB2     		uxth	r2, r3
 1862 0450 744B     		ldr	r3, .L99+16
 1863 0452 1A80     		strh	r2, [r3]	@ movhi
 1864              	.LBE6:
 414:.\main.c      ****                         {
 1865              		.loc 1 414 0
 1866 0454 ADE0     		b	.L53
 1867              	.L70:
 414:.\main.c      ****                         {
 1868              		.loc 1 414 0 is_stmt 0 discriminator 3
 1869 0456 ACE0     		b	.L53
 1870              	.L69:
 443:.\main.c      ****                                 }
 444:.\main.c      ****                             }
 445:.\main.c      ****                         }
 446:.\main.c      ****                     }
 447:.\main.c      ****                     else if (overshot_target == 1 && nextStep == 'D')
 1871              		.loc 1 447 0 is_stmt 1
 1872 0458 794B     		ldr	r3, .L99+44
 1873 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1874 045c 012B     		cmp	r3, #1
 1875 045e 40F0A380 		bne	.L73
 1876              		.loc 1 447 0 is_stmt 0 discriminator 1
 1877 0462 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1878 0466 442B     		cmp	r3, #68
 1879 0468 40F09E80 		bne	.L73
 1880              	.LBB7:
 448:.\main.c      ****                     {
 449:.\main.c      ****                         
 450:.\main.c      ****                                 instructionCount += 2;
 1881              		.loc 1 450 0 is_stmt 1
 1882 046c 6D4B     		ldr	r3, .L99+16
 1883 046e 1B88     		ldrh	r3, [r3]
 1884 0470 0233     		adds	r3, r3, #2
 1885 0472 9AB2     		uxth	r2, r3
 1886 0474 6B4B     		ldr	r3, .L99+16
 1887 0476 1A80     		strh	r2, [r3]	@ movhi
 451:.\main.c      ****                                 nextStep = instructions[instructionCount]; 
 1888              		.loc 1 451 0
 1889 0478 6A4B     		ldr	r3, .L99+16
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 43


 1890 047a 1B88     		ldrh	r3, [r3]
 1891 047c 1A46     		mov	r2, r3
 1892 047e 6B4B     		ldr	r3, .L99+24
 1893 0480 9B5C     		ldrb	r3, [r3, r2]
 1894 0482 87F83D30 		strb	r3, [r7, #61]
 452:.\main.c      ****                                 char mes[16];
 453:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1895              		.loc 1 453 0
 1896 0486 654B     		ldr	r3, .L99+8
 1897 0488 1B88     		ldrh	r3, [r3]
 1898 048a 1BB2     		sxth	r3, r3
 1899 048c 3A1D     		adds	r2, r7, #4
 1900 048e 1046     		mov	r0, r2
 1901 0490 6349     		ldr	r1, .L99+12
 1902 0492 1A46     		mov	r2, r3
 1903 0494 FFF7FEFF 		bl	sprintf
 454:.\main.c      ****                                  UART_PutString(mes);
 1904              		.loc 1 454 0
 1905 0498 3B1D     		adds	r3, r7, #4
 1906 049a 1846     		mov	r0, r3
 1907 049c FFF7FEFF 		bl	UART_PutString
 455:.\main.c      ****                                  accum_dist = 0;
 1908              		.loc 1 455 0
 1909 04a0 5E4B     		ldr	r3, .L99+8
 1910 04a2 0022     		movs	r2, #0
 1911 04a4 1A80     		strh	r2, [r3]	@ movhi
 456:.\main.c      ****                                 uint8 nextStepDist;
 457:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1912              		.loc 1 457 0
 1913 04a6 5F4B     		ldr	r3, .L99+16
 1914 04a8 1B88     		ldrh	r3, [r3]
 1915 04aa 1A46     		mov	r2, r3
 1916 04ac 5E4B     		ldr	r3, .L99+20
 1917 04ae 1B88     		ldrh	r3, [r3]
 1918 04b0 053B     		subs	r3, r3, #5
 1919 04b2 9A42     		cmp	r2, r3
 1920 04b4 07DC     		bgt	.L74
 1921              		.loc 1 457 0 is_stmt 0 discriminator 1
 1922 04b6 5B4B     		ldr	r3, .L99+16
 1923 04b8 1B88     		ldrh	r3, [r3]
 1924 04ba 0333     		adds	r3, r3, #3
 1925 04bc 5B4A     		ldr	r2, .L99+24
 1926 04be D35C     		ldrb	r3, [r2, r3]
 1927 04c0 87F83A30 		strb	r3, [r7, #58]
 1928 04c4 02E0     		b	.L75
 1929              	.L74:
 458:.\main.c      ****                                 else nextStepDist = 0;
 1930              		.loc 1 458 0 is_stmt 1
 1931 04c6 0023     		movs	r3, #0
 1932 04c8 87F83A30 		strb	r3, [r7, #58]
 1933              	.L75:
 459:.\main.c      ****                                 
 460:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1934              		.loc 1 460 0
 1935 04cc 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 1936 04d0 013B     		subs	r3, r3, #1
 1937 04d2 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 44


 1938 04d4 1A46     		mov	r2, r3	@ movhi
 1939 04d6 9200     		lsls	r2, r2, #2
 1940 04d8 1344     		add	r3, r3, r2
 1941 04da 1A46     		mov	r2, r3	@ movhi
 1942 04dc D200     		lsls	r2, r2, #3
 1943 04de D31A     		subs	r3, r2, r3
 1944 04e0 9B00     		lsls	r3, r3, #2
 1945 04e2 9BB2     		uxth	r3, r3
 1946 04e4 9AB2     		uxth	r2, r3
 1947 04e6 524B     		ldr	r3, .L99+28
 1948 04e8 1A80     		strh	r2, [r3]	@ movhi
 461:.\main.c      ****                                 
 462:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 1949              		.loc 1 462 0
 1950 04ea 5648     		ldr	r0, .L99+48
 1951 04ec FFF7FEFF 		bl	UART_PutString
 463:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1952              		.loc 1 463 0
 1953 04f0 5148     		ldr	r0, .L99+36
 1954 04f2 FFF7FEFF 		bl	UART_PutString
 464:.\main.c      ****                                     deadzone = 1;
 1955              		.loc 1 464 0
 1956 04f6 514B     		ldr	r3, .L99+40
 1957 04f8 0122     		movs	r2, #1
 1958 04fa 1A70     		strb	r2, [r3]
 465:.\main.c      ****                                     Timer_Deadzone_WriteCounter(40000);
 1959              		.loc 1 465 0
 1960 04fc 49F64040 		movw	r0, #40000
 1961 0500 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 466:.\main.c      ****                                     Timer_Deadzone_Start();
 1962              		.loc 1 466 0
 1963 0504 FFF7FEFF 		bl	Timer_Deadzone_Start
 467:.\main.c      ****                                     actionDebounce = 0;
 1964              		.loc 1 467 0
 1965 0508 0023     		movs	r3, #0
 1966 050a FB87     		strh	r3, [r7, #62]	@ movhi
 468:.\main.c      ****                                     sensorsDisabled = 1;
 1967              		.loc 1 468 0
 1968 050c 414B     		ldr	r3, .L99
 1969 050e 0122     		movs	r2, #1
 1970 0510 1A60     		str	r2, [r3]
 469:.\main.c      ****                                     
 470:.\main.c      ****                                      switch(nextStep)
 1971              		.loc 1 470 0
 1972 0512 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1973 0516 4C3B     		subs	r3, r3, #76
 1974 0518 092B     		cmp	r3, #9
 1975 051a 37D8     		bhi	.L95
 1976 051c 01A2     		adr	r2, .L78
 1977 051e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1978 0522 00BF     		.p2align 2
 1979              	.L78:
 1980 0524 5B050000 		.word	.L77+1
 1981 0528 8D050000 		.word	.L95+1
 1982 052c 8D050000 		.word	.L95+1
 1983 0530 8D050000 		.word	.L95+1
 1984 0534 8D050000 		.word	.L95+1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 45


 1985 0538 8D050000 		.word	.L95+1
 1986 053c 71050000 		.word	.L79+1
 1987 0540 4D050000 		.word	.L80+1
 1988 0544 8D050000 		.word	.L95+1
 1989 0548 87050000 		.word	.L81+1
 1990              		.p2align 1
 1991              	.L80:
 471:.\main.c      ****                                 {
 472:.\main.c      ****                                     case 'S':
 473:.\main.c      ****                                         initTrackU();
 1992              		.loc 1 473 0
 1993 054c FFF7FEFF 		bl	initTrackU
 474:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1994              		.loc 1 474 0
 1995 0550 42F21070 		movw	r0, #10000
 1996 0554 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 475:.\main.c      ****                                         //do nothing
 476:.\main.c      ****                                     break;
 1997              		.loc 1 476 0
 1998 0558 19E0     		b	.L82
 1999              	.L77:
 477:.\main.c      ****                                     case 'L':
 478:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 479:.\main.c      ****                                         initTurnLeft();
 2000              		.loc 1 479 0
 2001 055a FFF7FEFF 		bl	initTurnLeft
 480:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2002              		.loc 1 480 0
 2003 055e 344B     		ldr	r3, .L99+28
 2004 0560 1B88     		ldrh	r3, [r3]
 2005 0562 9BB2     		uxth	r3, r3
 2006 0564 4B3B     		subs	r3, r3, #75
 2007 0566 9BB2     		uxth	r3, r3
 2008 0568 9AB2     		uxth	r2, r3
 2009 056a 314B     		ldr	r3, .L99+28
 2010 056c 1A80     		strh	r2, [r3]	@ movhi
 481:.\main.c      ****                                     break;
 2011              		.loc 1 481 0
 2012 056e 0EE0     		b	.L82
 2013              	.L79:
 482:.\main.c      ****                                     case 'R':
 483:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 484:.\main.c      ****                                         initTurnRight();
 2014              		.loc 1 484 0
 2015 0570 FFF7FEFF 		bl	initTurnRight
 485:.\main.c      ****                                         target_distance_quad += 208 - TURN_OFFSET;
 2016              		.loc 1 485 0
 2017 0574 2E4B     		ldr	r3, .L99+28
 2018 0576 1B88     		ldrh	r3, [r3]
 2019 0578 9BB2     		uxth	r3, r3
 2020 057a 8533     		adds	r3, r3, #133
 2021 057c 9BB2     		uxth	r3, r3
 2022 057e 9AB2     		uxth	r2, r3
 2023 0580 2B4B     		ldr	r3, .L99+28
 2024 0582 1A80     		strh	r2, [r3]	@ movhi
 486:.\main.c      ****                                         
 487:.\main.c      ****                                     break;
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 46


 2025              		.loc 1 487 0
 2026 0584 03E0     		b	.L82
 2027              	.L81:
 488:.\main.c      ****                                     case 'U':
 489:.\main.c      ****                                         // Direction not tracked any more
 490:.\main.c      ****                                         initTurnU();
 2028              		.loc 1 490 0
 2029 0586 FFF7FEFF 		bl	initTurnU
 491:.\main.c      ****                                     break;
 2030              		.loc 1 491 0
 2031 058a 00E0     		b	.L82
 2032              	.L95:
 492:.\main.c      ****                                     default:
 493:.\main.c      ****                                         //do nothing
 494:.\main.c      ****                                         break;
 2033              		.loc 1 494 0
 2034 058c 00BF     		nop
 2035              	.L82:
 495:.\main.c      ****                                 }
 496:.\main.c      ****                                     
 497:.\main.c      ****                                     
 498:.\main.c      ****                                     reached_target = 0;
 2036              		.loc 1 498 0 discriminator 5
 2037 058e 224B     		ldr	r3, .L99+4
 2038 0590 0022     		movs	r2, #0
 2039 0592 1A70     		strb	r2, [r3]
 499:.\main.c      ****                                     overshot_target = 0;
 2040              		.loc 1 499 0 discriminator 5
 2041 0594 2A4B     		ldr	r3, .L99+44
 2042 0596 0022     		movs	r2, #0
 2043 0598 1A70     		strb	r2, [r3]
 500:.\main.c      ****                                     instructionCount += 2;
 2044              		.loc 1 500 0 discriminator 5
 2045 059a 224B     		ldr	r3, .L99+16
 2046 059c 1B88     		ldrh	r3, [r3]
 2047 059e 0233     		adds	r3, r3, #2
 2048 05a0 9AB2     		uxth	r2, r3
 2049 05a2 204B     		ldr	r3, .L99+16
 2050 05a4 1A80     		strh	r2, [r3]	@ movhi
 2051              	.LBE7:
 448:.\main.c      ****                         
 2052              		.loc 1 448 0 discriminator 5
 2053 05a6 04E0     		b	.L53
 2054              	.L73:
 501:.\main.c      ****                     }
 502:.\main.c      ****                     else
 503:.\main.c      ****                     {
 504:.\main.c      ****                         inittrackLineZ();
 2055              		.loc 1 504 0
 2056 05a8 FFF7FEFF 		bl	inittrackLineZ
 505:.\main.c      ****                         actionDebounce = 0;
 2057              		.loc 1 505 0
 2058 05ac 0023     		movs	r3, #0
 2059 05ae FB87     		strh	r3, [r7, #62]	@ movhi
 2060              	.LBE3:
 506:.\main.c      ****                     }
 507:.\main.c      ****                 }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 47


 508:.\main.c      ****                 break;
 2061              		.loc 1 508 0
 2062 05b0 FFE7     		b	.L96
 2063              	.L53:
 2064              	.L96:
 2065 05b2 00BF     		nop
 2066              	.L40:
 509:.\main.c      ****         }
 510:.\main.c      ****         
 511:.\main.c      ****         switch(movement_state)
 2067              		.loc 1 511 0
 2068 05b4 244B     		ldr	r3, .L99+52
 2069 05b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 05b8 072B     		cmp	r3, #7
 2071 05ba 3FF654AD 		bhi	.L93
 2072 05be 01A2     		adr	r2, .L85
 2073 05c0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2074              		.p2align 2
 2075              	.L85:
 2076 05c4 E5050000 		.word	.L84+1
 2077 05c8 EB050000 		.word	.L86+1
 2078 05cc F1050000 		.word	.L87+1
 2079 05d0 FD050000 		.word	.L88+1
 2080 05d4 03060000 		.word	.L89+1
 2081 05d8 09060000 		.word	.L90+1
 2082 05dc 0F060000 		.word	.L91+1
 2083 05e0 F7050000 		.word	.L92+1
 2084              		.p2align 1
 2085              	.L84:
 512:.\main.c      ****         {
 513:.\main.c      ****             case DRIVE:
 514:.\main.c      ****                 driveForwards();
 2086              		.loc 1 514 0
 2087 05e4 FFF7FEFF 		bl	driveForwards
 515:.\main.c      ****             break;
 2088              		.loc 1 515 0
 2089 05e8 13E0     		b	.L83
 2090              	.L86:
 516:.\main.c      ****             case LTURN:
 517:.\main.c      ****                 turnLeft();
 2091              		.loc 1 517 0
 2092 05ea FFF7FEFF 		bl	turnLeft
 518:.\main.c      ****             break;
 2093              		.loc 1 518 0
 2094 05ee 10E0     		b	.L83
 2095              	.L87:
 519:.\main.c      ****             case RTURN:
 520:.\main.c      ****                 turnRight();
 2096              		.loc 1 520 0
 2097 05f0 FFF7FEFF 		bl	turnRight
 521:.\main.c      ****             break;
 2098              		.loc 1 521 0
 2099 05f4 0DE0     		b	.L83
 2100              	.L92:
 522:.\main.c      ****             case UTURN:
 523:.\main.c      ****                 turnU();
 2101              		.loc 1 523 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 48


 2102 05f6 FFF7FEFF 		bl	turnU
 524:.\main.c      ****             break;
 2103              		.loc 1 524 0
 2104 05fa 0AE0     		b	.L83
 2105              	.L88:
 525:.\main.c      ****             case STOPPED:
 526:.\main.c      ****                 brakeMotor();
 2106              		.loc 1 526 0
 2107 05fc FFF7FEFF 		bl	brakeMotor
 527:.\main.c      ****             break;
 2108              		.loc 1 527 0
 2109 0600 07E0     		b	.L83
 2110              	.L89:
 528:.\main.c      ****             case TRACKING:
 529:.\main.c      ****                 trackLine();
 2111              		.loc 1 529 0
 2112 0602 FFF7FEFF 		bl	trackLine
 530:.\main.c      ****             break;
 2113              		.loc 1 530 0
 2114 0606 04E0     		b	.L83
 2115              	.L90:
 531:.\main.c      ****             case TRACKING_U:
 532:.\main.c      ****                 trackLineU();
 2116              		.loc 1 532 0
 2117 0608 FFF7FEFF 		bl	trackLineU
 533:.\main.c      ****             break;
 2118              		.loc 1 533 0
 2119 060c 01E0     		b	.L83
 2120              	.L91:
 534:.\main.c      ****             case TRACKING_SOFT:
 535:.\main.c      ****                 trackLineZ();
 2121              		.loc 1 535 0
 2122 060e FFF7FEFF 		bl	trackLineZ
 2123              	.L83:
 2124              	.LBE2:
 536:.\main.c      ****         }      
 537:.\main.c      ****     }   
 2125              		.loc 1 537 0
 2126 0612 28E5     		b	.L93
 2127              	.L100:
 2128              		.align	2
 2129              	.L99:
 2130 0614 00000000 		.word	sensorsDisabled
 2131 0618 00000000 		.word	reached_target
 2132 061c 00000000 		.word	accum_dist
 2133 0620 24000000 		.word	.LC2
 2134 0624 00000000 		.word	instructionCount
 2135 0628 00000000 		.word	instructionLength
 2136 062c 00000000 		.word	instructions
 2137 0630 00000000 		.word	target_distance_quad
 2138 0634 80000000 		.word	.LC6
 2139 0638 58000000 		.word	.LC4
 2140 063c 00000000 		.word	deadzone
 2141 0640 00000000 		.word	overshot_target
 2142 0644 9C000000 		.word	.LC7
 2143 0648 00000000 		.word	movement_state
 2144              		.cfi_endproc
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 49


 2145              	.LFE71:
 2146              		.size	main, .-main
 2147              		.section	.text.handle_rx_binary,"ax",%progbits
 2148              		.align	2
 2149              		.global	handle_rx_binary
 2150              		.thumb
 2151              		.thumb_func
 2152              		.type	handle_rx_binary, %function
 2153              	handle_rx_binary:
 2154              	.LFB72:
 538:.\main.c      **** }
 539:.\main.c      **** 
 540:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 541:.\main.c      **** 
 542:.\main.c      **** void handle_rx_binary()
 543:.\main.c      **** {
 2155              		.loc 1 543 0
 2156              		.cfi_startproc
 2157              		@ args = 0, pretend = 0, frame = 32
 2158              		@ frame_needed = 1, uses_anonymous_args = 0
 2159              		@ link register save eliminated.
 2160 0000 80B4     		push	{r7}
 2161              		.cfi_def_cfa_offset 4
 2162              		.cfi_offset 7, -4
 2163 0002 89B0     		sub	sp, sp, #36
 2164              		.cfi_def_cfa_offset 40
 2165 0004 00AF     		add	r7, sp, #0
 2166              		.cfi_def_cfa_register 7
 544:.\main.c      ****     if(flag_rx == 1)
 2167              		.loc 1 544 0
 2168 0006 524B     		ldr	r3, .L121
 2169 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2170 000a 012B     		cmp	r3, #1
 2171 000c 40F09A80 		bne	.L101
 2172              	.LBB8:
 545:.\main.c      ****     {    
 546:.\main.c      ****         flag_rx = 0;
 2173              		.loc 1 546 0
 2174 0010 4F4B     		ldr	r3, .L121
 2175 0012 0022     		movs	r2, #0
 2176 0014 1A70     		strb	r2, [r3]
 547:.\main.c      ****         
 548:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2177              		.loc 1 548 0
 2178 0016 4F4B     		ldr	r3, .L121+4
 2179 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2180 001a 1B02     		lsls	r3, r3, #8
 2181 001c 9AB2     		uxth	r2, r3
 2182 001e 4D4B     		ldr	r3, .L121+4
 2183 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2184 0022 9BB2     		uxth	r3, r3
 2185 0024 1343     		orrs	r3, r3, r2
 2186 0026 9BB2     		uxth	r3, r3
 2187 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 549:.\main.c      ****         char byte_packet[12];
 550:.\main.c      ****         char string_packet[12];
 551:.\main.c      ****         
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 50


 552:.\main.c      ****         switch(byteCount)
 2188              		.loc 1 552 0
 2189 002a 4B4B     		ldr	r3, .L121+8
 2190 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2191 002e 043B     		subs	r3, r3, #4
 2192 0030 1E2B     		cmp	r3, #30
 2193 0032 00F28780 		bhi	.L101
 2194 0036 01A2     		adr	r2, .L105
 2195 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2196              		.p2align 2
 2197              	.L105:
 2198 003c B9000000 		.word	.L104+1
 2199 0040 45010000 		.word	.L101+1
 2200 0044 CD000000 		.word	.L106+1
 2201 0048 45010000 		.word	.L101+1
 2202 004c D5000000 		.word	.L107+1
 2203 0050 45010000 		.word	.L101+1
 2204 0054 DD000000 		.word	.L108+1
 2205 0058 45010000 		.word	.L101+1
 2206 005c E5000000 		.word	.L109+1
 2207 0060 45010000 		.word	.L101+1
 2208 0064 ED000000 		.word	.L110+1
 2209 0068 45010000 		.word	.L101+1
 2210 006c F5000000 		.word	.L111+1
 2211 0070 45010000 		.word	.L101+1
 2212 0074 FD000000 		.word	.L112+1
 2213 0078 45010000 		.word	.L101+1
 2214 007c 05010000 		.word	.L113+1
 2215 0080 45010000 		.word	.L101+1
 2216 0084 0D010000 		.word	.L114+1
 2217 0088 45010000 		.word	.L101+1
 2218 008c 15010000 		.word	.L115+1
 2219 0090 45010000 		.word	.L101+1
 2220 0094 1D010000 		.word	.L116+1
 2221 0098 45010000 		.word	.L101+1
 2222 009c 25010000 		.word	.L117+1
 2223 00a0 45010000 		.word	.L101+1
 2224 00a4 2D010000 		.word	.L118+1
 2225 00a8 45010000 		.word	.L101+1
 2226 00ac 35010000 		.word	.L119+1
 2227 00b0 45010000 		.word	.L101+1
 2228 00b4 3D010000 		.word	.L120+1
 2229              		.p2align 1
 2230              	.L104:
 553:.\main.c      ****         {
 554:.\main.c      ****             case 4:
 555:.\main.c      ****                 buffer_state.rssi = packet[0];
 2231              		.loc 1 555 0
 2232 00b8 264B     		ldr	r3, .L121+4
 2233 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 00bc DAB2     		uxtb	r2, r3
 2235 00be 274B     		ldr	r3, .L121+12
 2236 00c0 1A70     		strb	r2, [r3]
 556:.\main.c      ****                 buffer_state.index = packet[1];
 2237              		.loc 1 556 0
 2238 00c2 244B     		ldr	r3, .L121+4
 2239 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 51


 2240 00c6 254B     		ldr	r3, .L121+12
 2241 00c8 5A70     		strb	r2, [r3, #1]
 557:.\main.c      ****             break;
 2242              		.loc 1 557 0
 2243 00ca 3BE0     		b	.L101
 2244              	.L106:
 558:.\main.c      ****             case 6:
 559:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2245              		.loc 1 559 0
 2246 00cc FA8B     		ldrh	r2, [r7, #30]
 2247 00ce 234B     		ldr	r3, .L121+12
 2248 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 560:.\main.c      ****             break;
 2249              		.loc 1 560 0
 2250 00d2 37E0     		b	.L101
 2251              	.L107:
 561:.\main.c      ****             case 8:
 562:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2252              		.loc 1 562 0
 2253 00d4 FA8B     		ldrh	r2, [r7, #30]
 2254 00d6 214B     		ldr	r3, .L121+12
 2255 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 563:.\main.c      ****             break;
 2256              		.loc 1 563 0
 2257 00da 33E0     		b	.L101
 2258              	.L108:
 564:.\main.c      ****             case 10:
 565:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2259              		.loc 1 565 0
 2260 00dc FA8B     		ldrh	r2, [r7, #30]
 2261 00de 1F4B     		ldr	r3, .L121+12
 2262 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 566:.\main.c      ****             break;
 2263              		.loc 1 566 0
 2264 00e2 2FE0     		b	.L101
 2265              	.L109:
 567:.\main.c      ****             case 12:
 568:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2266              		.loc 1 568 0
 2267 00e4 FA8B     		ldrh	r2, [r7, #30]
 2268 00e6 1D4B     		ldr	r3, .L121+12
 2269 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 569:.\main.c      ****             break;
 2270              		.loc 1 569 0
 2271 00ea 2BE0     		b	.L101
 2272              	.L110:
 570:.\main.c      ****             case 14:
 571:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2273              		.loc 1 571 0
 2274 00ec FA8B     		ldrh	r2, [r7, #30]
 2275 00ee 1B4B     		ldr	r3, .L121+12
 2276 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 572:.\main.c      ****             break;
 2277              		.loc 1 572 0
 2278 00f2 27E0     		b	.L101
 2279              	.L111:
 573:.\main.c      ****             case 16:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 52


 574:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2280              		.loc 1 574 0
 2281 00f4 FA8B     		ldrh	r2, [r7, #30]
 2282 00f6 194B     		ldr	r3, .L121+12
 2283 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 575:.\main.c      ****             break;
 2284              		.loc 1 575 0
 2285 00fa 23E0     		b	.L101
 2286              	.L112:
 576:.\main.c      ****             case 18:
 577:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2287              		.loc 1 577 0
 2288 00fc FA8B     		ldrh	r2, [r7, #30]
 2289 00fe 174B     		ldr	r3, .L121+12
 2290 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 578:.\main.c      ****             break;
 2291              		.loc 1 578 0
 2292 0102 1FE0     		b	.L101
 2293              	.L113:
 579:.\main.c      ****             case 20:
 580:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2294              		.loc 1 580 0
 2295 0104 FA8B     		ldrh	r2, [r7, #30]
 2296 0106 154B     		ldr	r3, .L121+12
 2297 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 581:.\main.c      ****             break;
 2298              		.loc 1 581 0
 2299 010a 1BE0     		b	.L101
 2300              	.L114:
 582:.\main.c      ****             case 22:
 583:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2301              		.loc 1 583 0
 2302 010c FA8B     		ldrh	r2, [r7, #30]
 2303 010e 134B     		ldr	r3, .L121+12
 2304 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 584:.\main.c      ****             break;
 2305              		.loc 1 584 0
 2306 0112 17E0     		b	.L101
 2307              	.L115:
 585:.\main.c      ****             case 24:
 586:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2308              		.loc 1 586 0
 2309 0114 FA8B     		ldrh	r2, [r7, #30]
 2310 0116 114B     		ldr	r3, .L121+12
 2311 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 587:.\main.c      ****             break;
 2312              		.loc 1 587 0
 2313 011a 13E0     		b	.L101
 2314              	.L116:
 588:.\main.c      ****             case 26:
 589:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2315              		.loc 1 589 0
 2316 011c FA8B     		ldrh	r2, [r7, #30]
 2317 011e 0F4B     		ldr	r3, .L121+12
 2318 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 590:.\main.c      ****             break;
 2319              		.loc 1 590 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 53


 2320 0122 0FE0     		b	.L101
 2321              	.L117:
 591:.\main.c      ****             case 28:
 592:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2322              		.loc 1 592 0
 2323 0124 FA8B     		ldrh	r2, [r7, #30]
 2324 0126 0D4B     		ldr	r3, .L121+12
 2325 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 593:.\main.c      ****             break;
 2326              		.loc 1 593 0
 2327 012a 0BE0     		b	.L101
 2328              	.L118:
 594:.\main.c      ****             case 30:
 595:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2329              		.loc 1 595 0
 2330 012c FA8B     		ldrh	r2, [r7, #30]
 2331 012e 0B4B     		ldr	r3, .L121+12
 2332 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 596:.\main.c      ****             break;
 2333              		.loc 1 596 0
 2334 0132 07E0     		b	.L101
 2335              	.L119:
 597:.\main.c      ****             case 32:
 598:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2336              		.loc 1 598 0
 2337 0134 FA8B     		ldrh	r2, [r7, #30]
 2338 0136 094B     		ldr	r3, .L121+12
 2339 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 599:.\main.c      ****             break;
 2340              		.loc 1 599 0
 2341 013a 03E0     		b	.L101
 2342              	.L120:
 600:.\main.c      ****             case 34:
 601:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2343              		.loc 1 601 0
 2344 013c FA8B     		ldrh	r2, [r7, #30]
 2345 013e 074B     		ldr	r3, .L121+12
 2346 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 602:.\main.c      ****             break;
 2347              		.loc 1 602 0
 2348 0142 00BF     		nop
 2349              	.L101:
 2350              	.LBE8:
 603:.\main.c      ****         }
 604:.\main.c      ****     }
 605:.\main.c      **** }
 2351              		.loc 1 605 0
 2352 0144 2437     		adds	r7, r7, #36
 2353              		.cfi_def_cfa_offset 4
 2354 0146 BD46     		mov	sp, r7
 2355              		.cfi_def_cfa_register 13
 2356              		@ sp needed
 2357 0148 5DF8047B 		ldr	r7, [sp], #4
 2358              		.cfi_restore 7
 2359              		.cfi_def_cfa_offset 0
 2360 014c 7047     		bx	lr
 2361              	.L122:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 54


 2362 014e 00BF     		.align	2
 2363              	.L121:
 2364 0150 00000000 		.word	flag_rx
 2365 0154 00000000 		.word	packet
 2366 0158 00000000 		.word	byteCount
 2367 015c 00000000 		.word	buffer_state
 2368              		.cfi_endproc
 2369              	.LFE72:
 2370              		.size	handle_rx_binary, .-handle_rx_binary
 2371              		.section	.text.setLeftDir,"ax",%progbits
 2372              		.align	2
 2373              		.global	setLeftDir
 2374              		.thumb
 2375              		.thumb_func
 2376              		.type	setLeftDir, %function
 2377              	setLeftDir:
 2378              	.LFB73:
 606:.\main.c      **** 
 607:.\main.c      **** void setLeftDir(uint8 dir)
 608:.\main.c      **** {
 2379              		.loc 1 608 0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 8
 2382              		@ frame_needed = 1, uses_anonymous_args = 0
 2383 0000 80B5     		push	{r7, lr}
 2384              		.cfi_def_cfa_offset 8
 2385              		.cfi_offset 7, -8
 2386              		.cfi_offset 14, -4
 2387 0002 82B0     		sub	sp, sp, #8
 2388              		.cfi_def_cfa_offset 16
 2389 0004 00AF     		add	r7, sp, #0
 2390              		.cfi_def_cfa_register 7
 2391 0006 0346     		mov	r3, r0
 2392 0008 FB71     		strb	r3, [r7, #7]
 609:.\main.c      ****     M2_IN2_Write(dir);
 2393              		.loc 1 609 0
 2394 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2395 000c 1846     		mov	r0, r3
 2396 000e FFF7FEFF 		bl	M2_IN2_Write
 610:.\main.c      **** }
 2397              		.loc 1 610 0
 2398 0012 0837     		adds	r7, r7, #8
 2399              		.cfi_def_cfa_offset 8
 2400 0014 BD46     		mov	sp, r7
 2401              		.cfi_def_cfa_register 13
 2402              		@ sp needed
 2403 0016 80BD     		pop	{r7, pc}
 2404              		.cfi_endproc
 2405              	.LFE73:
 2406              		.size	setLeftDir, .-setLeftDir
 2407              		.section	.text.setRightDir,"ax",%progbits
 2408              		.align	2
 2409              		.global	setRightDir
 2410              		.thumb
 2411              		.thumb_func
 2412              		.type	setRightDir, %function
 2413              	setRightDir:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 55


 2414              	.LFB74:
 611:.\main.c      **** 
 612:.\main.c      **** void setRightDir(uint8 dir)
 613:.\main.c      **** {
 2415              		.loc 1 613 0
 2416              		.cfi_startproc
 2417              		@ args = 0, pretend = 0, frame = 8
 2418              		@ frame_needed = 1, uses_anonymous_args = 0
 2419 0000 80B5     		push	{r7, lr}
 2420              		.cfi_def_cfa_offset 8
 2421              		.cfi_offset 7, -8
 2422              		.cfi_offset 14, -4
 2423 0002 82B0     		sub	sp, sp, #8
 2424              		.cfi_def_cfa_offset 16
 2425 0004 00AF     		add	r7, sp, #0
 2426              		.cfi_def_cfa_register 7
 2427 0006 0346     		mov	r3, r0
 2428 0008 FB71     		strb	r3, [r7, #7]
 614:.\main.c      ****     M1_IN2_Write(dir);
 2429              		.loc 1 614 0
 2430 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2431 000c 1846     		mov	r0, r3
 2432 000e FFF7FEFF 		bl	M1_IN2_Write
 615:.\main.c      **** }
 2433              		.loc 1 615 0
 2434 0012 0837     		adds	r7, r7, #8
 2435              		.cfi_def_cfa_offset 8
 2436 0014 BD46     		mov	sp, r7
 2437              		.cfi_def_cfa_register 13
 2438              		@ sp needed
 2439 0016 80BD     		pop	{r7, pc}
 2440              		.cfi_endproc
 2441              	.LFE74:
 2442              		.size	setRightDir, .-setRightDir
 2443              		.section	.rodata
 2444 00b7 00       		.align	2
 2445              	.LC8:
 2446 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2446      2025640D 
 2446      0A00
 2447              		.section	.text.reverseDirection,"ax",%progbits
 2448              		.align	2
 2449              		.global	reverseDirection
 2450              		.thumb
 2451              		.thumb_func
 2452              		.type	reverseDirection, %function
 2453              	reverseDirection:
 2454              	.LFB75:
 616:.\main.c      **** 
 617:.\main.c      **** void reverseDirection()
 618:.\main.c      **** {
 2455              		.loc 1 618 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 16
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459 0000 80B5     		push	{r7, lr}
 2460              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 56


 2461              		.cfi_offset 7, -8
 2462              		.cfi_offset 14, -4
 2463 0002 84B0     		sub	sp, sp, #16
 2464              		.cfi_def_cfa_offset 24
 2465 0004 00AF     		add	r7, sp, #0
 2466              		.cfi_def_cfa_register 7
 619:.\main.c      ****     direction = !direction;
 2467              		.loc 1 619 0
 2468 0006 114B     		ldr	r3, .L126
 2469 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2470 000a 002B     		cmp	r3, #0
 2471 000c 0CBF     		ite	eq
 2472 000e 0123     		moveq	r3, #1
 2473 0010 0023     		movne	r3, #0
 2474 0012 DBB2     		uxtb	r3, r3
 2475 0014 1A46     		mov	r2, r3
 2476 0016 0D4B     		ldr	r3, .L126
 2477 0018 1A70     		strb	r2, [r3]
 620:.\main.c      ****     setLeftDir(direction);
 2478              		.loc 1 620 0
 2479 001a 0C4B     		ldr	r3, .L126
 2480 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2481 001e 1846     		mov	r0, r3
 2482 0020 FFF7FEFF 		bl	setLeftDir
 621:.\main.c      ****     setRightDir(direction);
 2483              		.loc 1 621 0
 2484 0024 094B     		ldr	r3, .L126
 2485 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2486 0028 1846     		mov	r0, r3
 2487 002a FFF7FEFF 		bl	setRightDir
 622:.\main.c      ****     char mes[16];
 623:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2488              		.loc 1 623 0
 2489 002e 074B     		ldr	r3, .L126
 2490 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2491 0032 1A46     		mov	r2, r3
 2492 0034 3B46     		mov	r3, r7
 2493 0036 1846     		mov	r0, r3
 2494 0038 0549     		ldr	r1, .L126+4
 2495 003a FFF7FEFF 		bl	sprintf
 624:.\main.c      ****     UART_PutString(mes);
 2496              		.loc 1 624 0
 2497 003e 3B46     		mov	r3, r7
 2498 0040 1846     		mov	r0, r3
 2499 0042 FFF7FEFF 		bl	UART_PutString
 625:.\main.c      **** }
 2500              		.loc 1 625 0
 2501 0046 1037     		adds	r7, r7, #16
 2502              		.cfi_def_cfa_offset 8
 2503 0048 BD46     		mov	sp, r7
 2504              		.cfi_def_cfa_register 13
 2505              		@ sp needed
 2506 004a 80BD     		pop	{r7, pc}
 2507              	.L127:
 2508              		.align	2
 2509              	.L126:
 2510 004c 00000000 		.word	direction
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 57


 2511 0050 B8000000 		.word	.LC8
 2512              		.cfi_endproc
 2513              	.LFE75:
 2514              		.size	reverseDirection, .-reverseDirection
 2515              		.global	__aeabi_dcmplt
 2516              		.global	__aeabi_ddiv
 2517              		.global	__aeabi_d2iz
 2518              		.section	.text.setSpeed,"ax",%progbits
 2519              		.align	2
 2520              		.global	setSpeed
 2521              		.thumb
 2522              		.thumb_func
 2523              		.type	setSpeed, %function
 2524              	setSpeed:
 2525              	.LFB76:
 626:.\main.c      **** 
 627:.\main.c      **** void setSpeed(double left, double right){
 2526              		.loc 1 627 0
 2527              		.cfi_startproc
 2528              		@ args = 0, pretend = 0, frame = 24
 2529              		@ frame_needed = 1, uses_anonymous_args = 0
 2530 0000 80B5     		push	{r7, lr}
 2531              		.cfi_def_cfa_offset 8
 2532              		.cfi_offset 7, -8
 2533              		.cfi_offset 14, -4
 2534 0002 86B0     		sub	sp, sp, #24
 2535              		.cfi_def_cfa_offset 32
 2536 0004 00AF     		add	r7, sp, #0
 2537              		.cfi_def_cfa_register 7
 2538 0006 C7E90201 		strd	r0, [r7, #8]
 2539 000a C7E90023 		strd	r2, [r7]
 628:.\main.c      ****     if(right < 0.0)
 2540              		.loc 1 628 0
 2541 000e D7E90001 		ldrd	r0, [r7]
 2542 0012 4FF00002 		mov	r2, #0
 2543 0016 4FF00003 		mov	r3, #0
 2544 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2545 001e 0346     		mov	r3, r0
 2546 0020 002B     		cmp	r3, #0
 2547 0022 10D0     		beq	.L137
 629:.\main.c      ****     {
 630:.\main.c      ****         //char mes[16];
 631:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 632:.\main.c      ****        // UART_PutString(mes);
 633:.\main.c      ****         setRightDir(!direction);
 2548              		.loc 1 633 0
 2549 0024 304B     		ldr	r3, .L139+8
 2550 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2551 0028 002B     		cmp	r3, #0
 2552 002a 0CBF     		ite	eq
 2553 002c 0123     		moveq	r3, #1
 2554 002e 0023     		movne	r3, #0
 2555 0030 DBB2     		uxtb	r3, r3
 2556 0032 1846     		mov	r0, r3
 2557 0034 FFF7FEFF 		bl	setRightDir
 634:.\main.c      ****         right = -right;
 2558              		.loc 1 634 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 58


 2559 0038 3B68     		ldr	r3, [r7]
 2560 003a 3B60     		str	r3, [r7]
 2561 003c 7B68     		ldr	r3, [r7, #4]
 2562 003e 83F00043 		eor	r3, r3, #-2147483648
 2563 0042 7B60     		str	r3, [r7, #4]
 2564 0044 04E0     		b	.L131
 2565              	.L137:
 635:.\main.c      ****     }
 636:.\main.c      ****     else setRightDir(direction);
 2566              		.loc 1 636 0
 2567 0046 284B     		ldr	r3, .L139+8
 2568 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2569 004a 1846     		mov	r0, r3
 2570 004c FFF7FEFF 		bl	setRightDir
 2571              	.L131:
 637:.\main.c      ****     
 638:.\main.c      ****     if(left < 0.0)
 2572              		.loc 1 638 0
 2573 0050 D7E90201 		ldrd	r0, [r7, #8]
 2574 0054 4FF00002 		mov	r2, #0
 2575 0058 4FF00003 		mov	r3, #0
 2576 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2577 0060 0346     		mov	r3, r0
 2578 0062 002B     		cmp	r3, #0
 2579 0064 10D0     		beq	.L138
 639:.\main.c      ****     {
 640:.\main.c      ****        // char mes[16];
 641:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 642:.\main.c      ****         //UART_PutString(mes);
 643:.\main.c      ****         setLeftDir(!direction);
 2580              		.loc 1 643 0
 2581 0066 204B     		ldr	r3, .L139+8
 2582 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2583 006a 002B     		cmp	r3, #0
 2584 006c 0CBF     		ite	eq
 2585 006e 0123     		moveq	r3, #1
 2586 0070 0023     		movne	r3, #0
 2587 0072 DBB2     		uxtb	r3, r3
 2588 0074 1846     		mov	r0, r3
 2589 0076 FFF7FEFF 		bl	setLeftDir
 644:.\main.c      ****         left = -left;
 2590              		.loc 1 644 0
 2591 007a BB68     		ldr	r3, [r7, #8]
 2592 007c BB60     		str	r3, [r7, #8]
 2593 007e FB68     		ldr	r3, [r7, #12]
 2594 0080 83F00043 		eor	r3, r3, #-2147483648
 2595 0084 FB60     		str	r3, [r7, #12]
 2596 0086 04E0     		b	.L134
 2597              	.L138:
 645:.\main.c      ****     }
 646:.\main.c      ****     else setLeftDir(direction);
 2598              		.loc 1 646 0
 2599 0088 174B     		ldr	r3, .L139+8
 2600 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2601 008c 1846     		mov	r0, r3
 2602 008e FFF7FEFF 		bl	setLeftDir
 2603              	.L134:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 59


 647:.\main.c      ****     
 648:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2604              		.loc 1 648 0
 2605 0092 D7E90201 		ldrd	r0, [r7, #8]
 2606 0096 12A3     		adr	r3, .L139
 2607 0098 D3E90023 		ldrd	r2, [r3]
 2608 009c FFF7FEFF 		bl	__aeabi_ddiv
 2609 00a0 0246     		mov	r2, r0
 2610 00a2 0B46     		mov	r3, r1
 2611 00a4 1046     		mov	r0, r2
 2612 00a6 1946     		mov	r1, r3
 2613 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2614 00ac 0346     		mov	r3, r0
 2615 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 649:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2616              		.loc 1 649 0
 2617 00b0 D7E90001 		ldrd	r0, [r7]
 2618 00b4 0AA3     		adr	r3, .L139
 2619 00b6 D3E90023 		ldrd	r2, [r3]
 2620 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2621 00be 0246     		mov	r2, r0
 2622 00c0 0B46     		mov	r3, r1
 2623 00c2 1046     		mov	r0, r2
 2624 00c4 1946     		mov	r1, r3
 2625 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2626 00ca 0346     		mov	r3, r0
 2627 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 650:.\main.c      ****     
 651:.\main.c      ****     leftSpeedLimit = countsRight;
 2628              		.loc 1 651 0
 2629 00ce 074A     		ldr	r2, .L139+12
 2630 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2631 00d2 1380     		strh	r3, [r2]	@ movhi
 652:.\main.c      ****     rightSpeedLimit = countsLeft;
 2632              		.loc 1 652 0
 2633 00d4 064A     		ldr	r2, .L139+16
 2634 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2635 00d8 1380     		strh	r3, [r2]	@ movhi
 653:.\main.c      **** }
 2636              		.loc 1 653 0
 2637 00da 1837     		adds	r7, r7, #24
 2638              		.cfi_def_cfa_offset 8
 2639 00dc BD46     		mov	sp, r7
 2640              		.cfi_def_cfa_register 13
 2641              		@ sp needed
 2642 00de 80BD     		pop	{r7, pc}
 2643              	.L140:
 2644              		.align	3
 2645              	.L139:
 2646 00e0 969526A5 		.word	-1524197994
 2647 00e4 A0DBEF3F 		.word	1072683936
 2648 00e8 00000000 		.word	direction
 2649 00ec 00000000 		.word	leftSpeedLimit
 2650 00f0 00000000 		.word	rightSpeedLimit
 2651              		.cfi_endproc
 2652              	.LFE76:
 2653              		.size	setSpeed, .-setSpeed
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 60


 2654 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2655              		.align	2
 2656              		.global	brakeLeft
 2657              		.thumb
 2658              		.thumb_func
 2659              		.type	brakeLeft, %function
 2660              	brakeLeft:
 2661              	.LFB77:
 654:.\main.c      **** 
 655:.\main.c      **** void brakeLeft()
 656:.\main.c      **** {
 2662              		.loc 1 656 0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 1, uses_anonymous_args = 0
 2666 0000 80B5     		push	{r7, lr}
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 7, -8
 2669              		.cfi_offset 14, -4
 2670 0002 00AF     		add	r7, sp, #0
 2671              		.cfi_def_cfa_register 7
 657:.\main.c      ****     PWM_1_WriteCompare(0);
 2672              		.loc 1 657 0
 2673 0004 0020     		movs	r0, #0
 2674 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 658:.\main.c      ****     left_duty_cycle = 0;
 2675              		.loc 1 658 0
 2676 000a 024B     		ldr	r3, .L142
 2677 000c 0022     		movs	r2, #0
 2678 000e 1A80     		strh	r2, [r3]	@ movhi
 659:.\main.c      **** }
 2679              		.loc 1 659 0
 2680 0010 80BD     		pop	{r7, pc}
 2681              	.L143:
 2682 0012 00BF     		.align	2
 2683              	.L142:
 2684 0014 00000000 		.word	left_duty_cycle
 2685              		.cfi_endproc
 2686              	.LFE77:
 2687              		.size	brakeLeft, .-brakeLeft
 2688              		.section	.text.brakeRight,"ax",%progbits
 2689              		.align	2
 2690              		.global	brakeRight
 2691              		.thumb
 2692              		.thumb_func
 2693              		.type	brakeRight, %function
 2694              	brakeRight:
 2695              	.LFB78:
 660:.\main.c      **** 
 661:.\main.c      **** void brakeRight()
 662:.\main.c      **** {
 2696              		.loc 1 662 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700 0000 80B5     		push	{r7, lr}
 2701              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 61


 2702              		.cfi_offset 7, -8
 2703              		.cfi_offset 14, -4
 2704 0002 00AF     		add	r7, sp, #0
 2705              		.cfi_def_cfa_register 7
 663:.\main.c      ****      PWM_2_WriteCompare(0);
 2706              		.loc 1 663 0
 2707 0004 0020     		movs	r0, #0
 2708 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 664:.\main.c      ****      right_duty_cycle = 0;
 2709              		.loc 1 664 0
 2710 000a 024B     		ldr	r3, .L145
 2711 000c 0022     		movs	r2, #0
 2712 000e 1A80     		strh	r2, [r3]	@ movhi
 665:.\main.c      **** }
 2713              		.loc 1 665 0
 2714 0010 80BD     		pop	{r7, pc}
 2715              	.L146:
 2716 0012 00BF     		.align	2
 2717              	.L145:
 2718 0014 00000000 		.word	right_duty_cycle
 2719              		.cfi_endproc
 2720              	.LFE78:
 2721              		.size	brakeRight, .-brakeRight
 2722              		.section	.text.brakeMotor,"ax",%progbits
 2723              		.align	2
 2724              		.global	brakeMotor
 2725              		.thumb
 2726              		.thumb_func
 2727              		.type	brakeMotor, %function
 2728              	brakeMotor:
 2729              	.LFB79:
 666:.\main.c      **** 
 667:.\main.c      **** void brakeMotor(){
 2730              		.loc 1 667 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 0
 2733              		@ frame_needed = 1, uses_anonymous_args = 0
 2734 0000 80B5     		push	{r7, lr}
 2735              		.cfi_def_cfa_offset 8
 2736              		.cfi_offset 7, -8
 2737              		.cfi_offset 14, -4
 2738 0002 00AF     		add	r7, sp, #0
 2739              		.cfi_def_cfa_register 7
 668:.\main.c      ****     setSpeed(0, 0);
 2740              		.loc 1 668 0
 2741 0004 4FF00000 		mov	r0, #0
 2742 0008 4FF00001 		mov	r1, #0
 2743 000c 4FF00002 		mov	r2, #0
 2744 0010 4FF00003 		mov	r3, #0
 2745 0014 FFF7FEFF 		bl	setSpeed
 669:.\main.c      ****     brakeLeft();
 2746              		.loc 1 669 0
 2747 0018 FFF7FEFF 		bl	brakeLeft
 670:.\main.c      ****     brakeRight();
 2748              		.loc 1 670 0
 2749 001c FFF7FEFF 		bl	brakeRight
 671:.\main.c      **** }
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 62


 2750              		.loc 1 671 0
 2751 0020 80BD     		pop	{r7, pc}
 2752              		.cfi_endproc
 2753              	.LFE79:
 2754              		.size	brakeMotor, .-brakeMotor
 2755 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2756              		.align	2
 2757              		.global	driveForwards
 2758              		.thumb
 2759              		.thumb_func
 2760              		.type	driveForwards, %function
 2761              	driveForwards:
 2762              	.LFB80:
 672:.\main.c      **** 
 673:.\main.c      **** void driveForwards()
 674:.\main.c      **** {
 2763              		.loc 1 674 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 0
 2766              		@ frame_needed = 1, uses_anonymous_args = 0
 2767 0000 80B5     		push	{r7, lr}
 2768              		.cfi_def_cfa_offset 8
 2769              		.cfi_offset 7, -8
 2770              		.cfi_offset 14, -4
 2771 0002 00AF     		add	r7, sp, #0
 2772              		.cfi_def_cfa_register 7
 675:.\main.c      ****     setSpeed(speed, speed);
 2773              		.loc 1 675 0
 2774 0004 044B     		ldr	r3, .L149
 2775 0006 D3E90001 		ldrd	r0, [r3]
 2776 000a 034B     		ldr	r3, .L149
 2777 000c D3E90023 		ldrd	r2, [r3]
 2778 0010 FFF7FEFF 		bl	setSpeed
 676:.\main.c      **** }
 2779              		.loc 1 676 0
 2780 0014 80BD     		pop	{r7, pc}
 2781              	.L150:
 2782 0016 00BF     		.align	2
 2783              	.L149:
 2784 0018 00000000 		.word	speed
 2785              		.cfi_endproc
 2786              	.LFE80:
 2787              		.size	driveForwards, .-driveForwards
 2788              		.global	__aeabi_dadd
 2789              		.section	.text.turnRight,"ax",%progbits
 2790              		.align	2
 2791              		.global	turnRight
 2792              		.thumb
 2793              		.thumb_func
 2794              		.type	turnRight, %function
 2795              	turnRight:
 2796              	.LFB81:
 677:.\main.c      **** 
 678:.\main.c      **** void turnRight()
 679:.\main.c      **** {
 2797              		.loc 1 679 0
 2798              		.cfi_startproc
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 63


 2799              		@ args = 0, pretend = 0, frame = 0
 2800              		@ frame_needed = 1, uses_anonymous_args = 0
 2801 0000 80B5     		push	{r7, lr}
 2802              		.cfi_def_cfa_offset 8
 2803              		.cfi_offset 7, -8
 2804              		.cfi_offset 14, -4
 2805 0002 00AF     		add	r7, sp, #0
 2806              		.cfi_def_cfa_register 7
 680:.\main.c      ****     setSpeed(0,speed*2.0);
 2807              		.loc 1 680 0
 2808 0004 074B     		ldr	r3, .L152
 2809 0006 D3E90023 		ldrd	r2, [r3]
 2810 000a 1046     		mov	r0, r2
 2811 000c 1946     		mov	r1, r3
 2812 000e FFF7FEFF 		bl	__aeabi_dadd
 2813 0012 0246     		mov	r2, r0
 2814 0014 0B46     		mov	r3, r1
 2815 0016 4FF00000 		mov	r0, #0
 2816 001a 4FF00001 		mov	r1, #0
 2817 001e FFF7FEFF 		bl	setSpeed
 681:.\main.c      **** }
 2818              		.loc 1 681 0
 2819 0022 80BD     		pop	{r7, pc}
 2820              	.L153:
 2821              		.align	2
 2822              	.L152:
 2823 0024 00000000 		.word	speed
 2824              		.cfi_endproc
 2825              	.LFE81:
 2826              		.size	turnRight, .-turnRight
 2827              		.section	.text.turnLeft,"ax",%progbits
 2828              		.align	2
 2829              		.global	turnLeft
 2830              		.thumb
 2831              		.thumb_func
 2832              		.type	turnLeft, %function
 2833              	turnLeft:
 2834              	.LFB82:
 682:.\main.c      **** 
 683:.\main.c      **** void turnLeft()
 684:.\main.c      **** {
 2835              		.loc 1 684 0
 2836              		.cfi_startproc
 2837              		@ args = 0, pretend = 0, frame = 0
 2838              		@ frame_needed = 1, uses_anonymous_args = 0
 2839 0000 80B5     		push	{r7, lr}
 2840              		.cfi_def_cfa_offset 8
 2841              		.cfi_offset 7, -8
 2842              		.cfi_offset 14, -4
 2843 0002 00AF     		add	r7, sp, #0
 2844              		.cfi_def_cfa_register 7
 685:.\main.c      ****     setSpeed(speed*2.0,0);
 2845              		.loc 1 685 0
 2846 0004 084B     		ldr	r3, .L155
 2847 0006 D3E90023 		ldrd	r2, [r3]
 2848 000a 1046     		mov	r0, r2
 2849 000c 1946     		mov	r1, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 64


 2850 000e FFF7FEFF 		bl	__aeabi_dadd
 2851 0012 0246     		mov	r2, r0
 2852 0014 0B46     		mov	r3, r1
 2853 0016 1046     		mov	r0, r2
 2854 0018 1946     		mov	r1, r3
 2855 001a 4FF00002 		mov	r2, #0
 2856 001e 4FF00003 		mov	r3, #0
 2857 0022 FFF7FEFF 		bl	setSpeed
 686:.\main.c      **** }
 2858              		.loc 1 686 0
 2859 0026 80BD     		pop	{r7, pc}
 2860              	.L156:
 2861              		.align	2
 2862              	.L155:
 2863 0028 00000000 		.word	speed
 2864              		.cfi_endproc
 2865              	.LFE82:
 2866              		.size	turnLeft, .-turnLeft
 2867              		.section	.text.turnU,"ax",%progbits
 2868              		.align	2
 2869              		.global	turnU
 2870              		.thumb
 2871              		.thumb_func
 2872              		.type	turnU, %function
 2873              	turnU:
 2874              	.LFB83:
 687:.\main.c      **** 
 688:.\main.c      **** void turnU()
 689:.\main.c      **** {
 2875              		.loc 1 689 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 0
 2878              		@ frame_needed = 1, uses_anonymous_args = 0
 2879 0000 B0B5     		push	{r4, r5, r7, lr}
 2880              		.cfi_def_cfa_offset 16
 2881              		.cfi_offset 4, -16
 2882              		.cfi_offset 5, -12
 2883              		.cfi_offset 7, -8
 2884              		.cfi_offset 14, -4
 2885 0002 00AF     		add	r7, sp, #0
 2886              		.cfi_def_cfa_register 7
 690:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 2887              		.loc 1 690 0
 2888 0004 0E4B     		ldr	r3, .L158
 2889 0006 D3E90023 		ldrd	r2, [r3]
 2890 000a 1446     		mov	r4, r2
 2891 000c 83F00045 		eor	r5, r3, #-2147483648
 2892 0010 2046     		mov	r0, r4
 2893 0012 2946     		mov	r1, r5
 2894 0014 2246     		mov	r2, r4
 2895 0016 2B46     		mov	r3, r5
 2896 0018 FFF7FEFF 		bl	__aeabi_dadd
 2897 001c 0246     		mov	r2, r0
 2898 001e 0B46     		mov	r3, r1
 2899 0020 1446     		mov	r4, r2
 2900 0022 1D46     		mov	r5, r3
 2901 0024 064B     		ldr	r3, .L158
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 65


 2902 0026 D3E90023 		ldrd	r2, [r3]
 2903 002a 1046     		mov	r0, r2
 2904 002c 1946     		mov	r1, r3
 2905 002e FFF7FEFF 		bl	__aeabi_dadd
 2906 0032 0246     		mov	r2, r0
 2907 0034 0B46     		mov	r3, r1
 2908 0036 2046     		mov	r0, r4
 2909 0038 2946     		mov	r1, r5
 2910 003a FFF7FEFF 		bl	setSpeed
 691:.\main.c      **** }
 2911              		.loc 1 691 0
 2912 003e B0BD     		pop	{r4, r5, r7, pc}
 2913              	.L159:
 2914              		.align	2
 2915              	.L158:
 2916 0040 00000000 		.word	speed
 2917              		.cfi_endproc
 2918              	.LFE83:
 2919              		.size	turnU, .-turnU
 2920              		.section	.text.initTurnLeft,"ax",%progbits
 2921              		.align	2
 2922              		.global	initTurnLeft
 2923              		.thumb
 2924              		.thumb_func
 2925              		.type	initTurnLeft, %function
 2926              	initTurnLeft:
 2927              	.LFB84:
 692:.\main.c      **** 
 693:.\main.c      **** void initTurnLeft(){
 2928              		.loc 1 693 0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 0
 2931              		@ frame_needed = 1, uses_anonymous_args = 0
 2932 0000 80B5     		push	{r7, lr}
 2933              		.cfi_def_cfa_offset 8
 2934              		.cfi_offset 7, -8
 2935              		.cfi_offset 14, -4
 2936 0002 00AF     		add	r7, sp, #0
 2937              		.cfi_def_cfa_register 7
 694:.\main.c      ****     Timer_2_Stop();
 2938              		.loc 1 694 0
 2939 0004 FFF7FEFF 		bl	Timer_2_Stop
 695:.\main.c      ****     prev_movement_state = movement_state;
 2940              		.loc 1 695 0
 2941 0008 084B     		ldr	r3, .L161
 2942 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2943 000c 084B     		ldr	r3, .L161+4
 2944 000e 1A70     		strb	r2, [r3]
 696:.\main.c      ****     movement_state = LTURN;
 2945              		.loc 1 696 0
 2946 0010 064B     		ldr	r3, .L161
 2947 0012 0122     		movs	r2, #1
 2948 0014 1A70     		strb	r2, [r3]
 697:.\main.c      ****     brakeLeft();
 2949              		.loc 1 697 0
 2950 0016 FFF7FEFF 		bl	brakeLeft
 698:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 66


 2951              		.loc 1 698 0
 2952 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2953 001e 0346     		mov	r3, r0
 2954 0020 1A46     		mov	r2, r3
 2955 0022 044B     		ldr	r3, .L161+8
 2956 0024 1A80     		strh	r2, [r3]	@ movhi
 699:.\main.c      ****     Timer_2_Start();
 2957              		.loc 1 699 0
 2958 0026 FFF7FEFF 		bl	Timer_2_Start
 700:.\main.c      **** }
 2959              		.loc 1 700 0
 2960 002a 80BD     		pop	{r7, pc}
 2961              	.L162:
 2962              		.align	2
 2963              	.L161:
 2964 002c 00000000 		.word	movement_state
 2965 0030 00000000 		.word	prev_movement_state
 2966 0034 00000000 		.word	start_turn_count
 2967              		.cfi_endproc
 2968              	.LFE84:
 2969              		.size	initTurnLeft, .-initTurnLeft
 2970              		.section	.text.initTurnRight,"ax",%progbits
 2971              		.align	2
 2972              		.global	initTurnRight
 2973              		.thumb
 2974              		.thumb_func
 2975              		.type	initTurnRight, %function
 2976              	initTurnRight:
 2977              	.LFB85:
 701:.\main.c      **** 
 702:.\main.c      **** void initTurnRight(){
 2978              		.loc 1 702 0
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 0
 2981              		@ frame_needed = 1, uses_anonymous_args = 0
 2982 0000 80B5     		push	{r7, lr}
 2983              		.cfi_def_cfa_offset 8
 2984              		.cfi_offset 7, -8
 2985              		.cfi_offset 14, -4
 2986 0002 00AF     		add	r7, sp, #0
 2987              		.cfi_def_cfa_register 7
 703:.\main.c      ****     Timer_2_Stop();
 2988              		.loc 1 703 0
 2989 0004 FFF7FEFF 		bl	Timer_2_Stop
 704:.\main.c      ****     prev_movement_state = movement_state;
 2990              		.loc 1 704 0
 2991 0008 084B     		ldr	r3, .L164
 2992 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2993 000c 084B     		ldr	r3, .L164+4
 2994 000e 1A70     		strb	r2, [r3]
 705:.\main.c      ****     movement_state = RTURN;
 2995              		.loc 1 705 0
 2996 0010 064B     		ldr	r3, .L164
 2997 0012 0222     		movs	r2, #2
 2998 0014 1A70     		strb	r2, [r3]
 706:.\main.c      ****     brakeRight();
 2999              		.loc 1 706 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 67


 3000 0016 FFF7FEFF 		bl	brakeRight
 707:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3001              		.loc 1 707 0
 3002 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3003 001e 0346     		mov	r3, r0
 3004 0020 1A46     		mov	r2, r3
 3005 0022 044B     		ldr	r3, .L164+8
 3006 0024 1A80     		strh	r2, [r3]	@ movhi
 708:.\main.c      ****     Timer_2_Start();
 3007              		.loc 1 708 0
 3008 0026 FFF7FEFF 		bl	Timer_2_Start
 709:.\main.c      **** }
 3009              		.loc 1 709 0
 3010 002a 80BD     		pop	{r7, pc}
 3011              	.L165:
 3012              		.align	2
 3013              	.L164:
 3014 002c 00000000 		.word	movement_state
 3015 0030 00000000 		.word	prev_movement_state
 3016 0034 00000000 		.word	start_turn_count
 3017              		.cfi_endproc
 3018              	.LFE85:
 3019              		.size	initTurnRight, .-initTurnRight
 3020              		.section	.text.initTurnU,"ax",%progbits
 3021              		.align	2
 3022              		.global	initTurnU
 3023              		.thumb
 3024              		.thumb_func
 3025              		.type	initTurnU, %function
 3026              	initTurnU:
 3027              	.LFB86:
 710:.\main.c      **** 
 711:.\main.c      **** void initTurnU(){
 3028              		.loc 1 711 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 0
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032 0000 80B5     		push	{r7, lr}
 3033              		.cfi_def_cfa_offset 8
 3034              		.cfi_offset 7, -8
 3035              		.cfi_offset 14, -4
 3036 0002 00AF     		add	r7, sp, #0
 3037              		.cfi_def_cfa_register 7
 712:.\main.c      ****     Timer_2_Stop();
 3038              		.loc 1 712 0
 3039 0004 FFF7FEFF 		bl	Timer_2_Stop
 713:.\main.c      ****     prev_movement_state = movement_state;
 3040              		.loc 1 713 0
 3041 0008 084B     		ldr	r3, .L167
 3042 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3043 000c 084B     		ldr	r3, .L167+4
 3044 000e 1A70     		strb	r2, [r3]
 714:.\main.c      ****     movement_state = UTURN;
 3045              		.loc 1 714 0
 3046 0010 064B     		ldr	r3, .L167
 3047 0012 0722     		movs	r2, #7
 3048 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 68


 715:.\main.c      ****     brakeMotor();
 3049              		.loc 1 715 0
 3050 0016 FFF7FEFF 		bl	brakeMotor
 716:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3051              		.loc 1 716 0
 3052 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3053 001e 0346     		mov	r3, r0
 3054 0020 1A46     		mov	r2, r3
 3055 0022 044B     		ldr	r3, .L167+8
 3056 0024 1A80     		strh	r2, [r3]	@ movhi
 717:.\main.c      ****     Timer_2_Start();
 3057              		.loc 1 717 0
 3058 0026 FFF7FEFF 		bl	Timer_2_Start
 718:.\main.c      **** }
 3059              		.loc 1 718 0
 3060 002a 80BD     		pop	{r7, pc}
 3061              	.L168:
 3062              		.align	2
 3063              	.L167:
 3064 002c 00000000 		.word	movement_state
 3065 0030 00000000 		.word	prev_movement_state
 3066 0034 00000000 		.word	start_turn_count
 3067              		.cfi_endproc
 3068              	.LFE86:
 3069              		.size	initTurnU, .-initTurnU
 3070              		.section	.text.initForward,"ax",%progbits
 3071              		.align	2
 3072              		.global	initForward
 3073              		.thumb
 3074              		.thumb_func
 3075              		.type	initForward, %function
 3076              	initForward:
 3077              	.LFB87:
 719:.\main.c      **** 
 720:.\main.c      **** void initForward(){
 3078              		.loc 1 720 0
 3079              		.cfi_startproc
 3080              		@ args = 0, pretend = 0, frame = 0
 3081              		@ frame_needed = 1, uses_anonymous_args = 0
 3082 0000 80B5     		push	{r7, lr}
 3083              		.cfi_def_cfa_offset 8
 3084              		.cfi_offset 7, -8
 3085              		.cfi_offset 14, -4
 3086 0002 00AF     		add	r7, sp, #0
 3087              		.cfi_def_cfa_register 7
 721:.\main.c      ****     brakeMotor();
 3088              		.loc 1 721 0
 3089 0004 FFF7FEFF 		bl	brakeMotor
 722:.\main.c      ****     movement_state = DRIVE;
 3090              		.loc 1 722 0
 3091 0008 014B     		ldr	r3, .L170
 3092 000a 0022     		movs	r2, #0
 3093 000c 1A70     		strb	r2, [r3]
 723:.\main.c      **** }
 3094              		.loc 1 723 0
 3095 000e 80BD     		pop	{r7, pc}
 3096              	.L171:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 69


 3097              		.align	2
 3098              	.L170:
 3099 0010 00000000 		.word	movement_state
 3100              		.cfi_endproc
 3101              	.LFE87:
 3102              		.size	initForward, .-initForward
 3103              		.section	.text.initBrake,"ax",%progbits
 3104              		.align	2
 3105              		.global	initBrake
 3106              		.thumb
 3107              		.thumb_func
 3108              		.type	initBrake, %function
 3109              	initBrake:
 3110              	.LFB88:
 724:.\main.c      **** 
 725:.\main.c      **** void initBrake(){
 3111              		.loc 1 725 0
 3112              		.cfi_startproc
 3113              		@ args = 0, pretend = 0, frame = 0
 3114              		@ frame_needed = 1, uses_anonymous_args = 0
 3115              		@ link register save eliminated.
 3116 0000 80B4     		push	{r7}
 3117              		.cfi_def_cfa_offset 4
 3118              		.cfi_offset 7, -4
 3119 0002 00AF     		add	r7, sp, #0
 3120              		.cfi_def_cfa_register 7
 726:.\main.c      ****     movement_state = STOPPED;
 3121              		.loc 1 726 0
 3122 0004 034B     		ldr	r3, .L173
 3123 0006 0322     		movs	r2, #3
 3124 0008 1A70     		strb	r2, [r3]
 727:.\main.c      **** }
 3125              		.loc 1 727 0
 3126 000a BD46     		mov	sp, r7
 3127              		.cfi_def_cfa_register 13
 3128              		@ sp needed
 3129 000c 5DF8047B 		ldr	r7, [sp], #4
 3130              		.cfi_restore 7
 3131              		.cfi_def_cfa_offset 0
 3132 0010 7047     		bx	lr
 3133              	.L174:
 3134 0012 00BF     		.align	2
 3135              	.L173:
 3136 0014 00000000 		.word	movement_state
 3137              		.cfi_endproc
 3138              	.LFE88:
 3139              		.size	initBrake, .-initBrake
 3140              		.section	.text.initTrack,"ax",%progbits
 3141              		.align	2
 3142              		.global	initTrack
 3143              		.thumb
 3144              		.thumb_func
 3145              		.type	initTrack, %function
 3146              	initTrack:
 3147              	.LFB89:
 728:.\main.c      **** 
 729:.\main.c      **** void initTrack()
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 70


 730:.\main.c      **** {
 3148              		.loc 1 730 0
 3149              		.cfi_startproc
 3150              		@ args = 0, pretend = 0, frame = 0
 3151              		@ frame_needed = 1, uses_anonymous_args = 0
 3152              		@ link register save eliminated.
 3153 0000 80B4     		push	{r7}
 3154              		.cfi_def_cfa_offset 4
 3155              		.cfi_offset 7, -4
 3156 0002 00AF     		add	r7, sp, #0
 3157              		.cfi_def_cfa_register 7
 731:.\main.c      ****     movement_state = TRACKING;
 3158              		.loc 1 731 0
 3159 0004 034B     		ldr	r3, .L176
 3160 0006 0422     		movs	r2, #4
 3161 0008 1A70     		strb	r2, [r3]
 732:.\main.c      **** }
 3162              		.loc 1 732 0
 3163 000a BD46     		mov	sp, r7
 3164              		.cfi_def_cfa_register 13
 3165              		@ sp needed
 3166 000c 5DF8047B 		ldr	r7, [sp], #4
 3167              		.cfi_restore 7
 3168              		.cfi_def_cfa_offset 0
 3169 0010 7047     		bx	lr
 3170              	.L177:
 3171 0012 00BF     		.align	2
 3172              	.L176:
 3173 0014 00000000 		.word	movement_state
 3174              		.cfi_endproc
 3175              	.LFE89:
 3176              		.size	initTrack, .-initTrack
 3177              		.section	.text.initTrackU,"ax",%progbits
 3178              		.align	2
 3179              		.global	initTrackU
 3180              		.thumb
 3181              		.thumb_func
 3182              		.type	initTrackU, %function
 3183              	initTrackU:
 3184              	.LFB90:
 733:.\main.c      **** 
 734:.\main.c      **** void initTrackU(){
 3185              		.loc 1 734 0
 3186              		.cfi_startproc
 3187              		@ args = 0, pretend = 0, frame = 0
 3188              		@ frame_needed = 1, uses_anonymous_args = 0
 3189              		@ link register save eliminated.
 3190 0000 80B4     		push	{r7}
 3191              		.cfi_def_cfa_offset 4
 3192              		.cfi_offset 7, -4
 3193 0002 00AF     		add	r7, sp, #0
 3194              		.cfi_def_cfa_register 7
 735:.\main.c      ****     movement_state = TRACKING_U;
 3195              		.loc 1 735 0
 3196 0004 034B     		ldr	r3, .L179
 3197 0006 0522     		movs	r2, #5
 3198 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 71


 736:.\main.c      **** }
 3199              		.loc 1 736 0
 3200 000a BD46     		mov	sp, r7
 3201              		.cfi_def_cfa_register 13
 3202              		@ sp needed
 3203 000c 5DF8047B 		ldr	r7, [sp], #4
 3204              		.cfi_restore 7
 3205              		.cfi_def_cfa_offset 0
 3206 0010 7047     		bx	lr
 3207              	.L180:
 3208 0012 00BF     		.align	2
 3209              	.L179:
 3210 0014 00000000 		.word	movement_state
 3211              		.cfi_endproc
 3212              	.LFE90:
 3213              		.size	initTrackU, .-initTrackU
 3214              		.section	.text.inittrackLineZ,"ax",%progbits
 3215              		.align	2
 3216              		.global	inittrackLineZ
 3217              		.thumb
 3218              		.thumb_func
 3219              		.type	inittrackLineZ, %function
 3220              	inittrackLineZ:
 3221              	.LFB91:
 737:.\main.c      **** 
 738:.\main.c      **** void inittrackLineZ(){
 3222              		.loc 1 738 0
 3223              		.cfi_startproc
 3224              		@ args = 0, pretend = 0, frame = 0
 3225              		@ frame_needed = 1, uses_anonymous_args = 0
 3226              		@ link register save eliminated.
 3227 0000 80B4     		push	{r7}
 3228              		.cfi_def_cfa_offset 4
 3229              		.cfi_offset 7, -4
 3230 0002 00AF     		add	r7, sp, #0
 3231              		.cfi_def_cfa_register 7
 739:.\main.c      ****     movement_state = TRACKING_SOFT;
 3232              		.loc 1 739 0
 3233 0004 034B     		ldr	r3, .L182
 3234 0006 0622     		movs	r2, #6
 3235 0008 1A70     		strb	r2, [r3]
 740:.\main.c      **** }
 3236              		.loc 1 740 0
 3237 000a BD46     		mov	sp, r7
 3238              		.cfi_def_cfa_register 13
 3239              		@ sp needed
 3240 000c 5DF8047B 		ldr	r7, [sp], #4
 3241              		.cfi_restore 7
 3242              		.cfi_def_cfa_offset 0
 3243 0010 7047     		bx	lr
 3244              	.L183:
 3245 0012 00BF     		.align	2
 3246              	.L182:
 3247 0014 00000000 		.word	movement_state
 3248              		.cfi_endproc
 3249              	.LFE91:
 3250              		.size	inittrackLineZ, .-inittrackLineZ
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 72


 3251              		.section	.text.rxInt,"ax",%progbits
 3252              		.align	2
 3253              		.global	rxInt
 3254              		.thumb
 3255              		.thumb_func
 3256              		.type	rxInt, %function
 3257              	rxInt:
 3258              	.LFB92:
 741:.\main.c      **** 
 742:.\main.c      **** 
 743:.\main.c      **** 
 744:.\main.c      **** //Binary RF Data
 745:.\main.c      **** CY_ISR(rxInt){
 3259              		.loc 1 745 0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 8
 3262              		@ frame_needed = 1, uses_anonymous_args = 0
 3263 0000 B0B5     		push	{r4, r5, r7, lr}
 3264              		.cfi_def_cfa_offset 16
 3265              		.cfi_offset 4, -16
 3266              		.cfi_offset 5, -12
 3267              		.cfi_offset 7, -8
 3268              		.cfi_offset 14, -4
 3269 0002 82B0     		sub	sp, sp, #8
 3270              		.cfi_def_cfa_offset 24
 3271 0004 00AF     		add	r7, sp, #0
 3272              		.cfi_def_cfa_register 7
 746:.\main.c      ****     char rf_char = UART_GetChar();
 3273              		.loc 1 746 0
 3274 0006 FFF7FEFF 		bl	UART_GetChar
 3275 000a 0346     		mov	r3, r0
 3276 000c FB71     		strb	r3, [r7, #7]
 747:.\main.c      ****     if(rf_char == SOP){
 3277              		.loc 1 747 0
 3278 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3279 0010 AA2B     		cmp	r3, #170
 3280 0012 2BD1     		bne	.L185
 748:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 749:.\main.c      ****             if(byteCount == 34)
 3281              		.loc 1 749 0
 3282 0014 224B     		ldr	r3, .L189
 3283 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3284 0018 222B     		cmp	r3, #34
 3285 001a 20D1     		bne	.L186
 750:.\main.c      ****             {
 751:.\main.c      ****                 system_state = buffer_state;
 3286              		.loc 1 751 0
 3287 001c 214B     		ldr	r3, .L189+4
 3288 001e 224A     		ldr	r2, .L189+8
 3289 0020 1568     		ldr	r5, [r2]	@ unaligned
 3290 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3291 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3292 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3293 0028 1D60     		str	r5, [r3]	@ unaligned
 3294 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3295 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3296 002e D960     		str	r1, [r3, #12]	@ unaligned
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 73


 3297 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3298 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3299 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3300 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3301 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3302 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3303 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3304 003e D961     		str	r1, [r3, #28]	@ unaligned
 752:.\main.c      ****                 if(initial_pos_valid == 0)
 3305              		.loc 1 752 0
 3306 0040 1A4B     		ldr	r3, .L189+12
 3307 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3308 0044 002B     		cmp	r3, #0
 3309 0046 0AD1     		bne	.L186
 753:.\main.c      ****                 {
 754:.\main.c      ****                     LED_Write(~LED_Read());
 3310              		.loc 1 754 0
 3311 0048 FFF7FEFF 		bl	LED_Read
 3312 004c 0346     		mov	r3, r0
 3313 004e DB43     		mvns	r3, r3
 3314 0050 DBB2     		uxtb	r3, r3
 3315 0052 1846     		mov	r0, r3
 3316 0054 FFF7FEFF 		bl	LED_Write
 755:.\main.c      ****                     initial_pos_valid = 1;
 3317              		.loc 1 755 0
 3318 0058 144B     		ldr	r3, .L189+12
 3319 005a 0122     		movs	r2, #1
 3320 005c 1A70     		strb	r2, [r3]
 3321              	.L186:
 756:.\main.c      ****                 }
 757:.\main.c      ****             }
 758:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3322              		.loc 1 758 0
 3323 005e 104B     		ldr	r3, .L189
 3324 0060 0222     		movs	r2, #2
 3325 0062 1A70     		strb	r2, [r3]
 759:.\main.c      ****             flag_rx = 0;
 3326              		.loc 1 759 0
 3327 0064 124B     		ldr	r3, .L189+16
 3328 0066 0022     		movs	r2, #0
 3329 0068 1A70     		strb	r2, [r3]
 3330 006a 16E0     		b	.L184
 3331              	.L185:
 760:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 761:.\main.c      ****         }
 762:.\main.c      ****         else
 763:.\main.c      ****         {
 764:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3332              		.loc 1 764 0
 3333 006c 0C4B     		ldr	r3, .L189
 3334 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3335 0070 03F00103 		and	r3, r3, #1
 3336 0074 0F49     		ldr	r1, .L189+20
 3337 0076 FA79     		ldrb	r2, [r7, #7]
 3338 0078 CA54     		strb	r2, [r1, r3]
 765:.\main.c      ****            
 766:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 74


 3339              		.loc 1 766 0
 3340 007a 094B     		ldr	r3, .L189
 3341 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3342 007e 03F00103 		and	r3, r3, #1
 3343 0082 DBB2     		uxtb	r3, r3
 3344 0084 002B     		cmp	r3, #0
 3345 0086 02D0     		beq	.L188
 767:.\main.c      ****             {
 768:.\main.c      ****                 flag_rx = 1;
 3346              		.loc 1 768 0
 3347 0088 094B     		ldr	r3, .L189+16
 3348 008a 0122     		movs	r2, #1
 3349 008c 1A70     		strb	r2, [r3]
 3350              	.L188:
 769:.\main.c      ****             }
 770:.\main.c      ****             byteCount = (byteCount + 1);
 3351              		.loc 1 770 0
 3352 008e 044B     		ldr	r3, .L189
 3353 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3354 0092 0133     		adds	r3, r3, #1
 3355 0094 DAB2     		uxtb	r2, r3
 3356 0096 024B     		ldr	r3, .L189
 3357 0098 1A70     		strb	r2, [r3]
 3358              	.L184:
 771:.\main.c      ****         }
 772:.\main.c      **** }
 3359              		.loc 1 772 0
 3360 009a 0837     		adds	r7, r7, #8
 3361              		.cfi_def_cfa_offset 16
 3362 009c BD46     		mov	sp, r7
 3363              		.cfi_def_cfa_register 13
 3364              		@ sp needed
 3365 009e B0BD     		pop	{r4, r5, r7, pc}
 3366              	.L190:
 3367              		.align	2
 3368              	.L189:
 3369 00a0 00000000 		.word	byteCount
 3370 00a4 00000000 		.word	system_state
 3371 00a8 00000000 		.word	buffer_state
 3372 00ac 00000000 		.word	initial_pos_valid
 3373 00b0 00000000 		.word	flag_rx
 3374 00b4 00000000 		.word	packet
 3375              		.cfi_endproc
 3376              	.LFE92:
 3377              		.size	rxInt, .-rxInt
 3378              		.global	__aeabi_i2f
 3379              		.global	__aeabi_fmul
 3380              		.global	__aeabi_f2iz
 3381              		.section	.rodata
 3382 00c2 0000     		.align	2
 3383              	.LC9:
 3384 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3384      65742071 
 3384      7561643A 
 3384      2025640D 
 3384      0A00
 3385 00d6 0000     		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 75


 3386              	.LC10:
 3387 00d8 0D0A00   		.ascii	"\015\012\000"
 3388              		.section	.text.BT_rxInt,"ax",%progbits
 3389              		.align	2
 3390              		.global	BT_rxInt
 3391              		.thumb
 3392              		.thumb_func
 3393              		.type	BT_rxInt, %function
 3394              	BT_rxInt:
 3395              	.LFB93:
 773:.\main.c      **** 
 774:.\main.c      **** CY_ISR(BT_rxInt)
 775:.\main.c      **** {
 3396              		.loc 1 775 0
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 32
 3399              		@ frame_needed = 1, uses_anonymous_args = 0
 3400 0000 80B5     		push	{r7, lr}
 3401              		.cfi_def_cfa_offset 8
 3402              		.cfi_offset 7, -8
 3403              		.cfi_offset 14, -4
 3404 0002 88B0     		sub	sp, sp, #32
 3405              		.cfi_def_cfa_offset 40
 3406 0004 00AF     		add	r7, sp, #0
 3407              		.cfi_def_cfa_register 7
 776:.\main.c      ****     char rf_char = UART_GetChar();
 3408              		.loc 1 776 0
 3409 0006 FFF7FEFF 		bl	UART_GetChar
 3410 000a 0346     		mov	r3, r0
 3411 000c FB75     		strb	r3, [r7, #23]
 777:.\main.c      ****     switch(rf_char){
 3412              		.loc 1 777 0
 3413 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3414 0010 313B     		subs	r3, r3, #49
 3415 0012 492B     		cmp	r3, #73
 3416 0014 00F27281 		bhi	.L191
 3417 0018 01A2     		adr	r2, .L194
 3418 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3419 001e 00BF     		.p2align 2
 3420              	.L194:
 3421 0020 8F020000 		.word	.L193+1
 3422 0024 15020000 		.word	.L195+1
 3423 0028 FD020000 		.word	.L191+1
 3424 002c FD020000 		.word	.L191+1
 3425 0030 FD020000 		.word	.L191+1
 3426 0034 FD020000 		.word	.L191+1
 3427 0038 FD020000 		.word	.L191+1
 3428 003c FD020000 		.word	.L191+1
 3429 0040 FD020000 		.word	.L191+1
 3430 0044 FD020000 		.word	.L191+1
 3431 0048 FD020000 		.word	.L191+1
 3432 004c FD020000 		.word	.L191+1
 3433 0050 FD020000 		.word	.L191+1
 3434 0054 FD020000 		.word	.L191+1
 3435 0058 FD020000 		.word	.L191+1
 3436 005c FD020000 		.word	.L191+1
 3437 0060 FD020000 		.word	.L191+1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 76


 3438 0064 FD020000 		.word	.L191+1
 3439 0068 FD020000 		.word	.L191+1
 3440 006c FD020000 		.word	.L191+1
 3441 0070 FD020000 		.word	.L191+1
 3442 0074 FD020000 		.word	.L191+1
 3443 0078 FD020000 		.word	.L191+1
 3444 007c FD020000 		.word	.L191+1
 3445 0080 FD020000 		.word	.L191+1
 3446 0084 FD020000 		.word	.L191+1
 3447 0088 FD020000 		.word	.L191+1
 3448 008c FD020000 		.word	.L191+1
 3449 0090 FD020000 		.word	.L191+1
 3450 0094 FD020000 		.word	.L191+1
 3451 0098 FD020000 		.word	.L191+1
 3452 009c FD020000 		.word	.L191+1
 3453 00a0 FD020000 		.word	.L191+1
 3454 00a4 FD020000 		.word	.L191+1
 3455 00a8 FD020000 		.word	.L191+1
 3456 00ac FD020000 		.word	.L191+1
 3457 00b0 FD020000 		.word	.L191+1
 3458 00b4 FD020000 		.word	.L191+1
 3459 00b8 FD020000 		.word	.L191+1
 3460 00bc FD020000 		.word	.L191+1
 3461 00c0 FD020000 		.word	.L191+1
 3462 00c4 FD020000 		.word	.L191+1
 3463 00c8 FD020000 		.word	.L191+1
 3464 00cc FD020000 		.word	.L191+1
 3465 00d0 FD020000 		.word	.L191+1
 3466 00d4 FD020000 		.word	.L191+1
 3467 00d8 FD020000 		.word	.L191+1
 3468 00dc FD020000 		.word	.L191+1
 3469 00e0 49010000 		.word	.L196+1
 3470 00e4 FD020000 		.word	.L191+1
 3471 00e8 FD020000 		.word	.L191+1
 3472 00ec 6D010000 		.word	.L197+1
 3473 00f0 FD020000 		.word	.L191+1
 3474 00f4 79010000 		.word	.L198+1
 3475 00f8 FD020000 		.word	.L191+1
 3476 00fc FD020000 		.word	.L191+1
 3477 0100 FD020000 		.word	.L191+1
 3478 0104 FD020000 		.word	.L191+1
 3479 0108 FD020000 		.word	.L191+1
 3480 010c FD020000 		.word	.L191+1
 3481 0110 FD020000 		.word	.L191+1
 3482 0114 FD020000 		.word	.L191+1
 3483 0118 FD020000 		.word	.L191+1
 3484 011c FD020000 		.word	.L191+1
 3485 0120 A9010000 		.word	.L199+1
 3486 0124 FF010000 		.word	.L200+1
 3487 0128 61010000 		.word	.L201+1
 3488 012c 85010000 		.word	.L202+1
 3489 0130 91010000 		.word	.L203+1
 3490 0134 FD020000 		.word	.L191+1
 3491 0138 55010000 		.word	.L204+1
 3492 013c FD020000 		.word	.L191+1
 3493 0140 FD020000 		.word	.L191+1
 3494 0144 9D010000 		.word	.L205+1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 77


 3495              		.p2align 1
 3496              	.L196:
 3497              	.LBB9:
 778:.\main.c      ****     case 'a':
 779:.\main.c      ****         initTurnLeft();
 3498              		.loc 1 779 0
 3499 0148 FFF7FEFF 		bl	initTurnLeft
 780:.\main.c      ****         track_mode = NO_TRACK;
 3500              		.loc 1 780 0
 3501 014c 6D4B     		ldr	r3, .L215
 3502 014e 0022     		movs	r2, #0
 3503 0150 1A70     		strb	r2, [r3]
 781:.\main.c      ****         break;
 3504              		.loc 1 781 0
 3505 0152 D3E0     		b	.L191
 3506              	.L204:
 782:.\main.c      ****     case 'w':
 783:.\main.c      ****         initForward();
 3507              		.loc 1 783 0
 3508 0154 FFF7FEFF 		bl	initForward
 784:.\main.c      ****         track_mode = NO_TRACK;
 3509              		.loc 1 784 0
 3510 0158 6A4B     		ldr	r3, .L215
 3511 015a 0022     		movs	r2, #0
 3512 015c 1A70     		strb	r2, [r3]
 785:.\main.c      ****         break;
 3513              		.loc 1 785 0
 3514 015e CDE0     		b	.L191
 3515              	.L201:
 786:.\main.c      ****     case 's': 
 787:.\main.c      ****         reverseDirection();
 3516              		.loc 1 787 0
 3517 0160 FFF7FEFF 		bl	reverseDirection
 788:.\main.c      ****         track_mode = NO_TRACK;
 3518              		.loc 1 788 0
 3519 0164 674B     		ldr	r3, .L215
 3520 0166 0022     		movs	r2, #0
 3521 0168 1A70     		strb	r2, [r3]
 789:.\main.c      ****         break;
 3522              		.loc 1 789 0
 3523 016a C7E0     		b	.L191
 3524              	.L197:
 790:.\main.c      ****     case 'd':
 791:.\main.c      ****         initTurnRight();
 3525              		.loc 1 791 0
 3526 016c FFF7FEFF 		bl	initTurnRight
 792:.\main.c      ****         track_mode = NO_TRACK;
 3527              		.loc 1 792 0
 3528 0170 644B     		ldr	r3, .L215
 3529 0172 0022     		movs	r2, #0
 3530 0174 1A70     		strb	r2, [r3]
 793:.\main.c      ****         break;
 3531              		.loc 1 793 0
 3532 0176 C1E0     		b	.L191
 3533              	.L198:
 794:.\main.c      ****     case 'f':
 795:.\main.c      ****         initBrake();
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 78


 3534              		.loc 1 795 0
 3535 0178 FFF7FEFF 		bl	initBrake
 796:.\main.c      ****         track_mode = NO_TRACK;
 3536              		.loc 1 796 0
 3537 017c 614B     		ldr	r3, .L215
 3538 017e 0022     		movs	r2, #0
 3539 0180 1A70     		strb	r2, [r3]
 797:.\main.c      ****         break;
 3540              		.loc 1 797 0
 3541 0182 BBE0     		b	.L191
 3542              	.L202:
 798:.\main.c      ****     case('t'):
 799:.\main.c      ****         track_mode = CURVE_TRACK;
 3543              		.loc 1 799 0
 3544 0184 5F4B     		ldr	r3, .L215
 3545 0186 0122     		movs	r2, #1
 3546 0188 1A70     		strb	r2, [r3]
 800:.\main.c      ****         initTrack();
 3547              		.loc 1 800 0
 3548 018a FFF7FEFF 		bl	initTrack
 801:.\main.c      ****         break;
 3549              		.loc 1 801 0
 3550 018e B5E0     		b	.L191
 3551              	.L203:
 802:.\main.c      ****     case('u'):
 803:.\main.c      ****         initTrackU();
 3552              		.loc 1 803 0
 3553 0190 FFF7FEFF 		bl	initTrackU
 804:.\main.c      ****         track_mode = U_TRACK;
 3554              		.loc 1 804 0
 3555 0194 5B4B     		ldr	r3, .L215
 3556 0196 0222     		movs	r2, #2
 3557 0198 1A70     		strb	r2, [r3]
 805:.\main.c      ****         break;
 3558              		.loc 1 805 0
 3559 019a AFE0     		b	.L191
 3560              	.L205:
 806:.\main.c      ****     case('z'):
 807:.\main.c      ****         track_mode = SQUARE_TRACK;
 3561              		.loc 1 807 0
 3562 019c 594B     		ldr	r3, .L215
 3563 019e 0322     		movs	r2, #3
 3564 01a0 1A70     		strb	r2, [r3]
 808:.\main.c      ****         inittrackLineZ();
 3565              		.loc 1 808 0
 3566 01a2 FFF7FEFF 		bl	inittrackLineZ
 809:.\main.c      ****         break;
 3567              		.loc 1 809 0
 3568 01a6 A9E0     		b	.L191
 3569              	.L199:
 810:.\main.c      ****     case('q'):
 811:.\main.c      ****         track_mode = QUAD_STOP;
 3570              		.loc 1 811 0
 3571 01a8 564B     		ldr	r3, .L215
 3572 01aa 0422     		movs	r2, #4
 3573 01ac 1A70     		strb	r2, [r3]
 812:.\main.c      ****         accum_dist = 0;
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 79


 3574              		.loc 1 812 0
 3575 01ae 564B     		ldr	r3, .L215+4
 3576 01b0 0022     		movs	r2, #0
 3577 01b2 1A80     		strh	r2, [r3]	@ movhi
 813:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3578              		.loc 1 813 0
 3579 01b4 554B     		ldr	r3, .L215+8
 3580 01b6 1B88     		ldrh	r3, [r3]
 3581 01b8 1BB2     		sxth	r3, r3
 3582 01ba 1846     		mov	r0, r3
 3583 01bc FFF7FEFF 		bl	__aeabi_i2f
 3584 01c0 0246     		mov	r2, r0
 3585 01c2 534B     		ldr	r3, .L215+12
 3586 01c4 1B68     		ldr	r3, [r3]	@ float
 3587 01c6 1046     		mov	r0, r2
 3588 01c8 1946     		mov	r1, r3
 3589 01ca FFF7FEFF 		bl	__aeabi_fmul
 3590 01ce 0346     		mov	r3, r0
 3591 01d0 1846     		mov	r0, r3
 3592 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3593 01d6 0346     		mov	r3, r0
 3594 01d8 9AB2     		uxth	r2, r3
 3595 01da 4E4B     		ldr	r3, .L215+16
 3596 01dc 1A80     		strh	r2, [r3]	@ movhi
 814:.\main.c      ****         char mes[16];
 815:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3597              		.loc 1 815 0
 3598 01de 4D4B     		ldr	r3, .L215+16
 3599 01e0 1B88     		ldrh	r3, [r3]
 3600 01e2 1BB2     		sxth	r3, r3
 3601 01e4 3A1D     		adds	r2, r7, #4
 3602 01e6 1046     		mov	r0, r2
 3603 01e8 4B49     		ldr	r1, .L215+20
 3604 01ea 1A46     		mov	r2, r3
 3605 01ec FFF7FEFF 		bl	sprintf
 816:.\main.c      ****         UART_PutString(mes);
 3606              		.loc 1 816 0
 3607 01f0 3B1D     		adds	r3, r7, #4
 3608 01f2 1846     		mov	r0, r3
 3609 01f4 FFF7FEFF 		bl	UART_PutString
 817:.\main.c      ****         initForward();
 3610              		.loc 1 817 0
 3611 01f8 FFF7FEFF 		bl	initForward
 818:.\main.c      ****         break;
 3612              		.loc 1 818 0
 3613 01fc 7EE0     		b	.L191
 3614              	.L200:
 819:.\main.c      ****     case ('r'):
 820:.\main.c      ****         track_mode = RF_STOP;
 3615              		.loc 1 820 0
 3616 01fe 414B     		ldr	r3, .L215
 3617 0200 0522     		movs	r2, #5
 3618 0202 1A70     		strb	r2, [r3]
 821:.\main.c      ****         changeToRF();
 3619              		.loc 1 821 0
 3620 0204 FFF7FEFF 		bl	changeToRF
 822:.\main.c      ****         // Make initial position
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 80


 823:.\main.c      ****         initial_pos_valid = 0;
 3621              		.loc 1 823 0
 3622 0208 444B     		ldr	r3, .L215+24
 3623 020a 0022     		movs	r2, #0
 3624 020c 1A70     		strb	r2, [r3]
 824:.\main.c      ****         initBrake();
 3625              		.loc 1 824 0
 3626 020e FFF7FEFF 		bl	initBrake
 825:.\main.c      ****         break;
 3627              		.loc 1 825 0
 3628 0212 73E0     		b	.L191
 3629              	.L195:
 826:.\main.c      ****     case ('2'):
 827:.\main.c      ****         track_mode = DEST_TEST;
 3630              		.loc 1 827 0
 3631 0214 3B4B     		ldr	r3, .L215
 3632 0216 0622     		movs	r2, #6
 3633 0218 1A70     		strb	r2, [r3]
 828:.\main.c      ****         tracked_direction = robot_direction;
 3634              		.loc 1 828 0
 3635 021a 414B     		ldr	r3, .L215+28
 3636 021c 1B68     		ldr	r3, [r3]
 3637 021e 414A     		ldr	r2, .L215+32
 3638 0220 1360     		str	r3, [r2]
 829:.\main.c      ****         instructionLength = generateDirections();
 3639              		.loc 1 829 0
 3640 0222 FFF7FEFF 		bl	generateDirections
 3641 0226 0346     		mov	r3, r0
 3642 0228 9AB2     		uxth	r2, r3
 3643 022a 3F4B     		ldr	r3, .L215+36
 3644 022c 1A80     		strh	r2, [r3]	@ movhi
 830:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3645              		.loc 1 830 0
 3646 022e FFF7FEFF 		bl	generateEntireMapDirections
 3647 0232 0346     		mov	r3, r0
 3648 0234 9AB2     		uxth	r2, r3
 3649 0236 3C4B     		ldr	r3, .L215+36
 3650 0238 1A80     		strh	r2, [r3]	@ movhi
 831:.\main.c      ****         //char message[128];
 832:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 833:.\main.c      ****         int i = 0;
 3651              		.loc 1 833 0
 3652 023a 0023     		movs	r3, #0
 3653 023c FB61     		str	r3, [r7, #28]
 834:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3654              		.loc 1 834 0
 3655 023e 0023     		movs	r3, #0
 3656 0240 FB61     		str	r3, [r7, #28]
 3657 0242 18E0     		b	.L207
 3658              	.L210:
 835:.\main.c      ****         {
 836:.\main.c      ****             if(i%2 == 0)
 3659              		.loc 1 836 0
 3660 0244 FB69     		ldr	r3, [r7, #28]
 3661 0246 03F00103 		and	r3, r3, #1
 3662 024a 002B     		cmp	r3, #0
 3663 024c 07D1     		bne	.L208
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 81


 837:.\main.c      ****             {
 838:.\main.c      ****                 UART_PutChar(instructions[i]);
 3664              		.loc 1 838 0
 3665 024e 374A     		ldr	r2, .L215+40
 3666 0250 FB69     		ldr	r3, [r7, #28]
 3667 0252 1344     		add	r3, r3, r2
 3668 0254 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3669 0256 1846     		mov	r0, r3
 3670 0258 FFF7FEFF 		bl	UART_PutChar
 3671 025c 08E0     		b	.L209
 3672              	.L208:
 839:.\main.c      ****             }
 840:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3673              		.loc 1 840 0
 3674 025e 334A     		ldr	r2, .L215+40
 3675 0260 FB69     		ldr	r3, [r7, #28]
 3676 0262 1344     		add	r3, r3, r2
 3677 0264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3678 0266 3033     		adds	r3, r3, #48
 3679 0268 DBB2     		uxtb	r3, r3
 3680 026a 1846     		mov	r0, r3
 3681 026c FFF7FEFF 		bl	UART_PutChar
 3682              	.L209:
 834:.\main.c      ****         {
 3683              		.loc 1 834 0 discriminator 2
 3684 0270 FB69     		ldr	r3, [r7, #28]
 3685 0272 0133     		adds	r3, r3, #1
 3686 0274 FB61     		str	r3, [r7, #28]
 3687              	.L207:
 834:.\main.c      ****         {
 3688              		.loc 1 834 0 is_stmt 0 discriminator 1
 3689 0276 2C4B     		ldr	r3, .L215+36
 3690 0278 1B88     		ldrh	r3, [r3]
 3691 027a 1A46     		mov	r2, r3
 3692 027c FB69     		ldr	r3, [r7, #28]
 3693 027e 9A42     		cmp	r2, r3
 3694 0280 E0DC     		bgt	.L210
 841:.\main.c      **** 
 842:.\main.c      ****         }
 843:.\main.c      ****         
 844:.\main.c      ****         UART_PutString("\r\n");
 3695              		.loc 1 844 0 is_stmt 1
 3696 0282 2B48     		ldr	r0, .L215+44
 3697 0284 FFF7FEFF 		bl	UART_PutString
 845:.\main.c      **** 
 846:.\main.c      ****         inittrackLineZ();
 3698              		.loc 1 846 0
 3699 0288 FFF7FEFF 		bl	inittrackLineZ
 847:.\main.c      ****         break;
 3700              		.loc 1 847 0
 3701 028c 36E0     		b	.L191
 3702              	.L193:
 848:.\main.c      ****         case ('1'):
 849:.\main.c      ****         track_mode = DEST_TEST;
 3703              		.loc 1 849 0
 3704 028e 1D4B     		ldr	r3, .L215
 3705 0290 0622     		movs	r2, #6
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 82


 3706 0292 1A70     		strb	r2, [r3]
 850:.\main.c      ****         tracked_direction = robot_direction;
 3707              		.loc 1 850 0
 3708 0294 224B     		ldr	r3, .L215+28
 3709 0296 1B68     		ldr	r3, [r3]
 3710 0298 224A     		ldr	r2, .L215+32
 3711 029a 1360     		str	r3, [r2]
 851:.\main.c      ****         //instructionLength = generateDirections();
 852:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3712              		.loc 1 852 0
 3713 029c FFF7FEFF 		bl	generateEntireMapDirections
 3714 02a0 0346     		mov	r3, r0
 3715 02a2 9AB2     		uxth	r2, r3
 3716 02a4 204B     		ldr	r3, .L215+36
 3717 02a6 1A80     		strh	r2, [r3]	@ movhi
 853:.\main.c      ****         //char message[128];
 854:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 855:.\main.c      ****         int x = 0;
 3718              		.loc 1 855 0
 3719 02a8 0023     		movs	r3, #0
 3720 02aa BB61     		str	r3, [r7, #24]
 856:.\main.c      ****         for(x = 0;x < instructionLength; x++)
 3721              		.loc 1 856 0
 3722 02ac 0023     		movs	r3, #0
 3723 02ae BB61     		str	r3, [r7, #24]
 3724 02b0 18E0     		b	.L211
 3725              	.L214:
 857:.\main.c      ****         {
 858:.\main.c      ****             if(x%2 == 0)
 3726              		.loc 1 858 0
 3727 02b2 BB69     		ldr	r3, [r7, #24]
 3728 02b4 03F00103 		and	r3, r3, #1
 3729 02b8 002B     		cmp	r3, #0
 3730 02ba 07D1     		bne	.L212
 859:.\main.c      ****             {
 860:.\main.c      ****                 UART_PutChar(instructions[x]);
 3731              		.loc 1 860 0
 3732 02bc 1B4A     		ldr	r2, .L215+40
 3733 02be BB69     		ldr	r3, [r7, #24]
 3734 02c0 1344     		add	r3, r3, r2
 3735 02c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3736 02c4 1846     		mov	r0, r3
 3737 02c6 FFF7FEFF 		bl	UART_PutChar
 3738 02ca 08E0     		b	.L213
 3739              	.L212:
 861:.\main.c      ****             }
 862:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 3740              		.loc 1 862 0
 3741 02cc 174A     		ldr	r2, .L215+40
 3742 02ce BB69     		ldr	r3, [r7, #24]
 3743 02d0 1344     		add	r3, r3, r2
 3744 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3745 02d4 3033     		adds	r3, r3, #48
 3746 02d6 DBB2     		uxtb	r3, r3
 3747 02d8 1846     		mov	r0, r3
 3748 02da FFF7FEFF 		bl	UART_PutChar
 3749              	.L213:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 83


 856:.\main.c      ****         {
 3750              		.loc 1 856 0 discriminator 2
 3751 02de BB69     		ldr	r3, [r7, #24]
 3752 02e0 0133     		adds	r3, r3, #1
 3753 02e2 BB61     		str	r3, [r7, #24]
 3754              	.L211:
 856:.\main.c      ****         {
 3755              		.loc 1 856 0 is_stmt 0 discriminator 1
 3756 02e4 104B     		ldr	r3, .L215+36
 3757 02e6 1B88     		ldrh	r3, [r3]
 3758 02e8 1A46     		mov	r2, r3
 3759 02ea BB69     		ldr	r3, [r7, #24]
 3760 02ec 9A42     		cmp	r2, r3
 3761 02ee E0DC     		bgt	.L214
 863:.\main.c      **** 
 864:.\main.c      ****         }
 865:.\main.c      ****         
 866:.\main.c      ****         UART_PutString("\r\n");
 3762              		.loc 1 866 0 is_stmt 1
 3763 02f0 0F48     		ldr	r0, .L215+44
 3764 02f2 FFF7FEFF 		bl	UART_PutString
 867:.\main.c      **** 
 868:.\main.c      ****         inittrackLineZ();
 3765              		.loc 1 868 0
 3766 02f6 FFF7FEFF 		bl	inittrackLineZ
 869:.\main.c      ****         break;
 3767              		.loc 1 869 0
 3768 02fa 00BF     		nop
 3769              	.L191:
 3770              	.LBE9:
 870:.\main.c      ****     }
 871:.\main.c      **** }
 3771              		.loc 1 871 0
 3772 02fc 2037     		adds	r7, r7, #32
 3773              		.cfi_def_cfa_offset 8
 3774 02fe BD46     		mov	sp, r7
 3775              		.cfi_def_cfa_register 13
 3776              		@ sp needed
 3777 0300 80BD     		pop	{r7, pc}
 3778              	.L216:
 3779 0302 00BF     		.align	2
 3780              	.L215:
 3781 0304 00000000 		.word	track_mode
 3782 0308 00000000 		.word	accum_dist
 3783 030c 00000000 		.word	target_distance_cm
 3784 0310 00000000 		.word	quad_per_cm
 3785 0314 00000000 		.word	target_distance_quad
 3786 0318 C4000000 		.word	.LC9
 3787 031c 00000000 		.word	initial_pos_valid
 3788 0320 00000000 		.word	robot_direction
 3789 0324 00000000 		.word	tracked_direction
 3790 0328 00000000 		.word	instructionLength
 3791 032c 00000000 		.word	instructions
 3792 0330 D8000000 		.word	.LC10
 3793              		.cfi_endproc
 3794              	.LFE93:
 3795              		.size	BT_rxInt, .-BT_rxInt
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 84


 3796              		.section	.text.changeToRF,"ax",%progbits
 3797              		.align	2
 3798              		.global	changeToRF
 3799              		.thumb
 3800              		.thumb_func
 3801              		.type	changeToRF, %function
 3802              	changeToRF:
 3803              	.LFB94:
 872:.\main.c      **** 
 873:.\main.c      **** 
 874:.\main.c      **** void changeToRF()
 875:.\main.c      **** {
 3804              		.loc 1 875 0
 3805              		.cfi_startproc
 3806              		@ args = 0, pretend = 0, frame = 0
 3807              		@ frame_needed = 1, uses_anonymous_args = 0
 3808 0000 80B5     		push	{r7, lr}
 3809              		.cfi_def_cfa_offset 8
 3810              		.cfi_offset 7, -8
 3811              		.cfi_offset 14, -4
 3812 0002 00AF     		add	r7, sp, #0
 3813              		.cfi_def_cfa_register 7
 876:.\main.c      ****         //disable BT
 877:.\main.c      ****         BT_ENABLED = 0;
 3814              		.loc 1 877 0
 3815 0004 0B4B     		ldr	r3, .L218
 3816 0006 0022     		movs	r2, #0
 3817 0008 1A70     		strb	r2, [r3]
 878:.\main.c      ****         isrRF_RX_Stop();
 3818              		.loc 1 878 0
 3819 000a FFF7FEFF 		bl	isrRF_RX_Stop
 879:.\main.c      ****         UART_Stop();
 3820              		.loc 1 879 0
 3821 000e FFF7FEFF 		bl	UART_Stop
 880:.\main.c      ****         
 881:.\main.c      ****         //enable RF
 882:.\main.c      ****         BIN_ENABLED = 1;
 3822              		.loc 1 882 0
 3823 0012 094B     		ldr	r3, .L218+4
 3824 0014 0122     		movs	r2, #1
 3825 0016 1A70     		strb	r2, [r3]
 883:.\main.c      ****         UART_clk_SetDividerValue(130);
 3826              		.loc 1 883 0
 3827 0018 8120     		movs	r0, #129
 3828 001a 0121     		movs	r1, #1
 3829 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 884:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 3830              		.loc 1 884 0
 3831 0020 0648     		ldr	r0, .L218+8
 3832 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 885:.\main.c      ****         UART_Start();
 3833              		.loc 1 885 0
 3834 0026 FFF7FEFF 		bl	UART_Start
 886:.\main.c      ****         RF_BT_SELECT_Write(0);
 3835              		.loc 1 886 0
 3836 002a 0020     		movs	r0, #0
 3837 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 85


 887:.\main.c      **** }
 3838              		.loc 1 887 0
 3839 0030 80BD     		pop	{r7, pc}
 3840              	.L219:
 3841 0032 00BF     		.align	2
 3842              	.L218:
 3843 0034 00000000 		.word	BT_ENABLED
 3844 0038 00000000 		.word	BIN_ENABLED
 3845 003c 00000000 		.word	rxInt
 3846              		.cfi_endproc
 3847              	.LFE94:
 3848              		.size	changeToRF, .-changeToRF
 3849              		.section	.text.changeToBT,"ax",%progbits
 3850              		.align	2
 3851              		.global	changeToBT
 3852              		.thumb
 3853              		.thumb_func
 3854              		.type	changeToBT, %function
 3855              	changeToBT:
 3856              	.LFB95:
 888:.\main.c      **** 
 889:.\main.c      **** void changeToBT()
 890:.\main.c      **** {
 3857              		.loc 1 890 0
 3858              		.cfi_startproc
 3859              		@ args = 0, pretend = 0, frame = 0
 3860              		@ frame_needed = 1, uses_anonymous_args = 0
 3861 0000 80B5     		push	{r7, lr}
 3862              		.cfi_def_cfa_offset 8
 3863              		.cfi_offset 7, -8
 3864              		.cfi_offset 14, -4
 3865 0002 00AF     		add	r7, sp, #0
 3866              		.cfi_def_cfa_register 7
 891:.\main.c      ****         //disable RF
 892:.\main.c      ****         BIN_ENABLED = 0;
 3867              		.loc 1 892 0
 3868 0004 0B4B     		ldr	r3, .L221
 3869 0006 0022     		movs	r2, #0
 3870 0008 1A70     		strb	r2, [r3]
 893:.\main.c      ****         isrRF_RX_Stop();
 3871              		.loc 1 893 0
 3872 000a FFF7FEFF 		bl	isrRF_RX_Stop
 894:.\main.c      ****         UART_Stop();
 3873              		.loc 1 894 0
 3874 000e FFF7FEFF 		bl	UART_Stop
 895:.\main.c      ****         
 896:.\main.c      ****         //enable BT
 897:.\main.c      ****         BT_ENABLED = 1;
 3875              		.loc 1 897 0
 3876 0012 094B     		ldr	r3, .L221+4
 3877 0014 0122     		movs	r2, #1
 3878 0016 1A70     		strb	r2, [r3]
 898:.\main.c      ****         UART_clk_SetDividerValue(781);
 3879              		.loc 1 898 0
 3880 0018 4FF44370 		mov	r0, #780
 3881 001c 0121     		movs	r1, #1
 3882 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 86


 899:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3883              		.loc 1 899 0
 3884 0022 0648     		ldr	r0, .L221+8
 3885 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 900:.\main.c      ****         UART_Start();
 3886              		.loc 1 900 0
 3887 0028 FFF7FEFF 		bl	UART_Start
 901:.\main.c      ****         RF_BT_SELECT_Write(1);
 3888              		.loc 1 901 0
 3889 002c 0120     		movs	r0, #1
 3890 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 902:.\main.c      **** }
 3891              		.loc 1 902 0
 3892 0032 80BD     		pop	{r7, pc}
 3893              	.L222:
 3894              		.align	2
 3895              	.L221:
 3896 0034 00000000 		.word	BIN_ENABLED
 3897 0038 00000000 		.word	BT_ENABLED
 3898 003c 00000000 		.word	BT_rxInt
 3899              		.cfi_endproc
 3900              	.LFE95:
 3901              		.size	changeToBT, .-changeToBT
 3902              		.section	.text.Quad_Dec_response,"ax",%progbits
 3903              		.align	2
 3904              		.global	Quad_Dec_response
 3905              		.thumb
 3906              		.thumb_func
 3907              		.type	Quad_Dec_response, %function
 3908              	Quad_Dec_response:
 3909              	.LFB96:
 903:.\main.c      **** 
 904:.\main.c      **** 
 905:.\main.c      **** void Quad_Dec_response()
 906:.\main.c      **** {
 3910              		.loc 1 906 0
 3911              		.cfi_startproc
 3912              		@ args = 0, pretend = 0, frame = 32
 3913              		@ frame_needed = 1, uses_anonymous_args = 0
 3914 0000 B0B5     		push	{r4, r5, r7, lr}
 3915              		.cfi_def_cfa_offset 16
 3916              		.cfi_offset 4, -16
 3917              		.cfi_offset 5, -12
 3918              		.cfi_offset 7, -8
 3919              		.cfi_offset 14, -4
 3920 0002 88B0     		sub	sp, sp, #32
 3921              		.cfi_def_cfa_offset 48
 3922 0004 00AF     		add	r7, sp, #0
 3923              		.cfi_def_cfa_register 7
 907:.\main.c      ****     //Check if the flag has been set
 908:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 3924              		.loc 1 908 0
 3925 0006 824B     		ldr	r3, .L231
 3926 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3927 000a 002B     		cmp	r3, #0
 3928 000c 00D1     		bne	.L224
 3929 000e FCE0     		b	.L223
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 87


 3930              	.L224:
 909:.\main.c      ****     flag_calc_wheelspeed = 0;
 3931              		.loc 1 909 0
 3932 0010 7F4B     		ldr	r3, .L231
 3933 0012 0022     		movs	r2, #0
 3934 0014 1A70     		strb	r2, [r3]
 910:.\main.c      ****     
 911:.\main.c      ****     //char wheel_1_str [64];
 912:.\main.c      ****     //char wheel_2_str [64];
 913:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 914:.\main.c      ****     //usbPutString(wheel_1_str);
 915:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 916:.\main.c      ****     
 917:.\main.c      ****     //usbPutString(wheel_2_str);
 918:.\main.c      ****     
 919:.\main.c      ****     int16 leftSpeed = quad_diff1;
 3935              		.loc 1 919 0
 3936 0016 7F4B     		ldr	r3, .L231+4
 3937 0018 1B88     		ldrh	r3, [r3]	@ movhi
 3938 001a FB81     		strh	r3, [r7, #14]	@ movhi
 920:.\main.c      ****     int16 rightSpeed = quad_diff2;
 3939              		.loc 1 920 0
 3940 001c 7E4B     		ldr	r3, .L231+8
 3941 001e 1B88     		ldrh	r3, [r3]	@ movhi
 3942 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 921:.\main.c      ****     double scalingLeft = 1;
 3943              		.loc 1 921 0
 3944 0022 4FF00002 		mov	r2, #0
 3945 0026 7D4B     		ldr	r3, .L231+12
 3946 0028 C7E90623 		strd	r2, [r7, #24]
 922:.\main.c      ****     double scalingRight = 1;
 3947              		.loc 1 922 0
 3948 002c 4FF00002 		mov	r2, #0
 3949 0030 7A4B     		ldr	r3, .L231+12
 3950 0032 C7E90423 		strd	r2, [r7, #16]
 923:.\main.c      ****     
 924:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 925:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 3951              		.loc 1 925 0
 3952 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 3953 003a 002B     		cmp	r3, #0
 3954 003c 0FD1     		bne	.L226
 3955              		.loc 1 925 0 is_stmt 0 discriminator 1
 3956 003e B7F90C30 		ldrsh	r3, [r7, #12]
 3957 0042 002B     		cmp	r3, #0
 3958 0044 0BD1     		bne	.L226
 926:.\main.c      ****        //leftSpeed = 3;
 927:.\main.c      ****         scalingLeft = 2;
 3959              		.loc 1 927 0 is_stmt 1
 3960 0046 4FF00002 		mov	r2, #0
 3961 004a 4FF08043 		mov	r3, #1073741824
 3962 004e C7E90623 		strd	r2, [r7, #24]
 928:.\main.c      ****         scalingRight = 2;
 3963              		.loc 1 928 0
 3964 0052 4FF00002 		mov	r2, #0
 3965 0056 4FF08043 		mov	r3, #1073741824
 3966 005a C7E90423 		strd	r2, [r7, #16]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 88


 3967              	.L226:
 929:.\main.c      ****     }
 930:.\main.c      **** 
 931:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 3968              		.loc 1 931 0
 3969 005e 704B     		ldr	r3, .L231+16
 3970 0060 1B88     		ldrh	r3, [r3]
 3971 0062 1AB2     		sxth	r2, r3
 3972 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 3973 0068 002B     		cmp	r3, #0
 3974 006a B8BF     		it	lt
 3975 006c 5B42     		rsblt	r3, r3, #0
 3976 006e D31A     		subs	r3, r2, r3
 3977 0070 BB60     		str	r3, [r7, #8]
 932:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 3978              		.loc 1 932 0
 3979 0072 BB68     		ldr	r3, [r7, #8]
 3980 0074 83EAE372 		eor	r2, r3, r3, asr #31
 3981 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 3982 007c BB68     		ldr	r3, [r7, #8]
 3983 007e 92FBF3F3 		sdiv	r3, r2, r3
 3984 0082 1846     		mov	r0, r3
 3985 0084 FFF7FEFF 		bl	__aeabi_i2d
 3986 0088 0446     		mov	r4, r0
 3987 008a 0D46     		mov	r5, r1
 3988 008c BB68     		ldr	r3, [r7, #8]
 3989 008e 002B     		cmp	r3, #0
 3990 0090 B8BF     		it	lt
 3991 0092 5B42     		rsblt	r3, r3, #0
 3992 0094 1846     		mov	r0, r3
 3993 0096 FFF7FEFF 		bl	__aeabi_i2d
 3994 009a 0246     		mov	r2, r0
 3995 009c 0B46     		mov	r3, r1
 3996 009e 1046     		mov	r0, r2
 3997 00a0 1946     		mov	r1, r3
 3998 00a2 FFF7FEFF 		bl	sqrt
 3999 00a6 0246     		mov	r2, r0
 4000 00a8 0B46     		mov	r3, r1
 4001 00aa 2046     		mov	r0, r4
 4002 00ac 2946     		mov	r1, r5
 4003 00ae FFF7FEFF 		bl	__aeabi_dmul
 4004 00b2 0246     		mov	r2, r0
 4005 00b4 0B46     		mov	r3, r1
 4006 00b6 1046     		mov	r0, r2
 4007 00b8 1946     		mov	r1, r3
 4008 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4009 00be 0346     		mov	r3, r0
 4010 00c0 7B60     		str	r3, [r7, #4]
 933:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4011              		.loc 1 933 0
 4012 00c2 584B     		ldr	r3, .L231+20
 4013 00c4 1B88     		ldrh	r3, [r3]
 4014 00c6 1BB2     		sxth	r3, r3
 4015 00c8 1846     		mov	r0, r3
 4016 00ca FFF7FEFF 		bl	__aeabi_i2d
 4017 00ce 0446     		mov	r4, r0
 4018 00d0 0D46     		mov	r5, r1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 89


 4019 00d2 7868     		ldr	r0, [r7, #4]
 4020 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4021 00d8 0246     		mov	r2, r0
 4022 00da 0B46     		mov	r3, r1
 4023 00dc 1046     		mov	r0, r2
 4024 00de 1946     		mov	r1, r3
 4025 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4026 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4027 00e8 0246     		mov	r2, r0
 4028 00ea 0B46     		mov	r3, r1
 4029 00ec 2046     		mov	r0, r4
 4030 00ee 2946     		mov	r1, r5
 4031 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4032 00f4 0246     		mov	r2, r0
 4033 00f6 0B46     		mov	r3, r1
 4034 00f8 1046     		mov	r0, r2
 4035 00fa 1946     		mov	r1, r3
 4036 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4037 0100 0346     		mov	r3, r0
 4038 0102 9AB2     		uxth	r2, r3
 4039 0104 474B     		ldr	r3, .L231+20
 4040 0106 1A80     		strh	r2, [r3]	@ movhi
 934:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4041              		.loc 1 934 0
 4042 0108 474B     		ldr	r3, .L231+24
 4043 010a 1B88     		ldrh	r3, [r3]
 4044 010c 1AB2     		sxth	r2, r3
 4045 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4046 0112 002B     		cmp	r3, #0
 4047 0114 B8BF     		it	lt
 4048 0116 5B42     		rsblt	r3, r3, #0
 4049 0118 D31A     		subs	r3, r2, r3
 4050 011a BB60     		str	r3, [r7, #8]
 935:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4051              		.loc 1 935 0
 4052 011c BB68     		ldr	r3, [r7, #8]
 4053 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4054 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4055 0126 BB68     		ldr	r3, [r7, #8]
 4056 0128 92FBF3F3 		sdiv	r3, r2, r3
 4057 012c 1846     		mov	r0, r3
 4058 012e FFF7FEFF 		bl	__aeabi_i2d
 4059 0132 0446     		mov	r4, r0
 4060 0134 0D46     		mov	r5, r1
 4061 0136 BB68     		ldr	r3, [r7, #8]
 4062 0138 002B     		cmp	r3, #0
 4063 013a B8BF     		it	lt
 4064 013c 5B42     		rsblt	r3, r3, #0
 4065 013e 1846     		mov	r0, r3
 4066 0140 FFF7FEFF 		bl	__aeabi_i2d
 4067 0144 0246     		mov	r2, r0
 4068 0146 0B46     		mov	r3, r1
 4069 0148 1046     		mov	r0, r2
 4070 014a 1946     		mov	r1, r3
 4071 014c FFF7FEFF 		bl	sqrt
 4072 0150 0246     		mov	r2, r0
 4073 0152 0B46     		mov	r3, r1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 90


 4074 0154 2046     		mov	r0, r4
 4075 0156 2946     		mov	r1, r5
 4076 0158 FFF7FEFF 		bl	__aeabi_dmul
 4077 015c 0246     		mov	r2, r0
 4078 015e 0B46     		mov	r3, r1
 4079 0160 1046     		mov	r0, r2
 4080 0162 1946     		mov	r1, r3
 4081 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4082 0168 0346     		mov	r3, r0
 4083 016a 7B60     		str	r3, [r7, #4]
 936:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4084              		.loc 1 936 0
 4085 016c 2F4B     		ldr	r3, .L231+28
 4086 016e 1B88     		ldrh	r3, [r3]
 4087 0170 1BB2     		sxth	r3, r3
 4088 0172 1846     		mov	r0, r3
 4089 0174 FFF7FEFF 		bl	__aeabi_i2d
 4090 0178 0446     		mov	r4, r0
 4091 017a 0D46     		mov	r5, r1
 4092 017c 7868     		ldr	r0, [r7, #4]
 4093 017e FFF7FEFF 		bl	__aeabi_i2d
 4094 0182 0246     		mov	r2, r0
 4095 0184 0B46     		mov	r3, r1
 4096 0186 1046     		mov	r0, r2
 4097 0188 1946     		mov	r1, r3
 4098 018a D7E90423 		ldrd	r2, [r7, #16]
 4099 018e FFF7FEFF 		bl	__aeabi_dmul
 4100 0192 0246     		mov	r2, r0
 4101 0194 0B46     		mov	r3, r1
 4102 0196 2046     		mov	r0, r4
 4103 0198 2946     		mov	r1, r5
 4104 019a FFF7FEFF 		bl	__aeabi_dadd
 4105 019e 0246     		mov	r2, r0
 4106 01a0 0B46     		mov	r3, r1
 4107 01a2 1046     		mov	r0, r2
 4108 01a4 1946     		mov	r1, r3
 4109 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4110 01aa 0346     		mov	r3, r0
 4111 01ac 9AB2     		uxth	r2, r3
 4112 01ae 1F4B     		ldr	r3, .L231+28
 4113 01b0 1A80     		strh	r2, [r3]	@ movhi
 937:.\main.c      ****     
 938:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4114              		.loc 1 938 0
 4115 01b2 1E4B     		ldr	r3, .L231+28
 4116 01b4 1B88     		ldrh	r3, [r3]
 4117 01b6 1BB2     		sxth	r3, r3
 4118 01b8 002B     		cmp	r3, #0
 4119 01ba 02DA     		bge	.L227
 4120              		.loc 1 938 0 is_stmt 0 discriminator 1
 4121 01bc 1B4B     		ldr	r3, .L231+28
 4122 01be 0022     		movs	r2, #0
 4123 01c0 1A80     		strh	r2, [r3]	@ movhi
 4124              	.L227:
 939:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4125              		.loc 1 939 0 is_stmt 1
 4126 01c2 184B     		ldr	r3, .L231+20
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 91


 4127 01c4 1B88     		ldrh	r3, [r3]
 4128 01c6 1BB2     		sxth	r3, r3
 4129 01c8 002B     		cmp	r3, #0
 4130 01ca 02DA     		bge	.L228
 4131              		.loc 1 939 0 is_stmt 0 discriminator 1
 4132 01cc 154B     		ldr	r3, .L231+20
 4133 01ce 0022     		movs	r2, #0
 4134 01d0 1A80     		strh	r2, [r3]	@ movhi
 4135              	.L228:
 940:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4136              		.loc 1 940 0 is_stmt 1
 4137 01d2 164B     		ldr	r3, .L231+28
 4138 01d4 1B88     		ldrh	r3, [r3]
 4139 01d6 1BB2     		sxth	r3, r3
 4140 01d8 642B     		cmp	r3, #100
 4141 01da 02DD     		ble	.L229
 4142              		.loc 1 940 0 is_stmt 0 discriminator 1
 4143 01dc 134B     		ldr	r3, .L231+28
 4144 01de 6422     		movs	r2, #100
 4145 01e0 1A80     		strh	r2, [r3]	@ movhi
 4146              	.L229:
 941:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4147              		.loc 1 941 0 is_stmt 1
 4148 01e2 104B     		ldr	r3, .L231+20
 4149 01e4 1B88     		ldrh	r3, [r3]
 4150 01e6 1BB2     		sxth	r3, r3
 4151 01e8 642B     		cmp	r3, #100
 4152 01ea 02DD     		ble	.L230
 4153              		.loc 1 941 0 is_stmt 0 discriminator 1
 4154 01ec 0D4B     		ldr	r3, .L231+20
 4155 01ee 6422     		movs	r2, #100
 4156 01f0 1A80     		strh	r2, [r3]	@ movhi
 4157              	.L230:
 942:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4158              		.loc 1 942 0 is_stmt 1
 4159 01f2 0C4B     		ldr	r3, .L231+20
 4160 01f4 1B88     		ldrh	r3, [r3]
 4161 01f6 DBB2     		uxtb	r3, r3
 4162 01f8 1846     		mov	r0, r3
 4163 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 943:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4164              		.loc 1 943 0
 4165 01fe 0B4B     		ldr	r3, .L231+28
 4166 0200 1B88     		ldrh	r3, [r3]
 4167 0202 DBB2     		uxtb	r3, r3
 4168 0204 1846     		mov	r0, r3
 4169 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4170              	.L223:
 944:.\main.c      **** }
 4171              		.loc 1 944 0
 4172 020a 2037     		adds	r7, r7, #32
 4173              		.cfi_def_cfa_offset 16
 4174 020c BD46     		mov	sp, r7
 4175              		.cfi_def_cfa_register 13
 4176              		@ sp needed
 4177 020e B0BD     		pop	{r4, r5, r7, pc}
 4178              	.L232:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 92


 4179              		.align	2
 4180              	.L231:
 4181 0210 00000000 		.word	flag_calc_wheelspeed
 4182 0214 00000000 		.word	quad_diff1
 4183 0218 00000000 		.word	quad_diff2
 4184 021c 0000F03F 		.word	1072693248
 4185 0220 00000000 		.word	leftSpeedLimit
 4186 0224 00000000 		.word	left_duty_cycle
 4187 0228 00000000 		.word	rightSpeedLimit
 4188 022c 00000000 		.word	right_duty_cycle
 4189              		.cfi_endproc
 4190              	.LFE96:
 4191              		.size	Quad_Dec_response, .-Quad_Dec_response
 4192              		.section	.text.trackLine,"ax",%progbits
 4193              		.align	2
 4194              		.global	trackLine
 4195              		.thumb
 4196              		.thumb_func
 4197              		.type	trackLine, %function
 4198              	trackLine:
 4199              	.LFB97:
 945:.\main.c      **** 
 946:.\main.c      **** void trackLine()
 947:.\main.c      **** {
 4200              		.loc 1 947 0
 4201              		.cfi_startproc
 4202              		@ args = 0, pretend = 0, frame = 0
 4203              		@ frame_needed = 1, uses_anonymous_args = 0
 4204              		@ link register save eliminated.
 4205 0000 80B4     		push	{r7}
 4206              		.cfi_def_cfa_offset 4
 4207              		.cfi_offset 7, -4
 4208 0002 00AF     		add	r7, sp, #0
 4209              		.cfi_def_cfa_register 7
 948:.\main.c      ****  //removed from implementation
 949:.\main.c      **** }
 4210              		.loc 1 949 0
 4211 0004 BD46     		mov	sp, r7
 4212              		.cfi_def_cfa_register 13
 4213              		@ sp needed
 4214 0006 5DF8047B 		ldr	r7, [sp], #4
 4215              		.cfi_restore 7
 4216              		.cfi_def_cfa_offset 0
 4217 000a 7047     		bx	lr
 4218              		.cfi_endproc
 4219              	.LFE97:
 4220              		.size	trackLine, .-trackLine
 4221              		.global	leftTurnCount
 4222              		.bss
 4223              		.align	1
 4224              		.type	leftTurnCount, %object
 4225              		.size	leftTurnCount, 2
 4226              	leftTurnCount:
 4227 28e8 0000     		.space	2
 4228              		.global	rightTurnCount
 4229              		.align	1
 4230              		.type	rightTurnCount, %object
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 93


 4231              		.size	rightTurnCount, 2
 4232              	rightTurnCount:
 4233 28ea 0000     		.space	2
 4234              		.section	.text.trackLineZ,"ax",%progbits
 4235              		.align	2
 4236              		.global	trackLineZ
 4237              		.thumb
 4238              		.thumb_func
 4239              		.type	trackLineZ, %function
 4240              	trackLineZ:
 4241              	.LFB98:
 950:.\main.c      **** uint16 leftTurnCount = 0;
 951:.\main.c      **** uint16 rightTurnCount = 0;
 952:.\main.c      **** void trackLineZ()
 953:.\main.c      **** {
 4242              		.loc 1 953 0
 4243              		.cfi_startproc
 4244              		@ args = 0, pretend = 0, frame = 8
 4245              		@ frame_needed = 1, uses_anonymous_args = 0
 4246 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4247              		.cfi_def_cfa_offset 24
 4248              		.cfi_offset 4, -24
 4249              		.cfi_offset 5, -20
 4250              		.cfi_offset 7, -16
 4251              		.cfi_offset 8, -12
 4252              		.cfi_offset 9, -8
 4253              		.cfi_offset 14, -4
 4254 0004 82B0     		sub	sp, sp, #8
 4255              		.cfi_def_cfa_offset 32
 4256 0006 00AF     		add	r7, sp, #0
 4257              		.cfi_def_cfa_register 7
 954:.\main.c      ****     //read the value of the three central-front sensors
 955:.\main.c      ****     
 956:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4258              		.loc 1 956 0
 4259 0008 FFF7FEFF 		bl	NLSens_out_Read
 4260 000c 0346     		mov	r3, r0
 4261 000e FB71     		strb	r3, [r7, #7]
 957:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4262              		.loc 1 957 0
 4263 0010 FFF7FEFF 		bl	NRSens_out_Read
 4264 0014 0346     		mov	r3, r0
 4265 0016 BB71     		strb	r3, [r7, #6]
 958:.\main.c      ****     uint8 mid = MSens_out_Read();
 4266              		.loc 1 958 0
 4267 0018 FFF7FEFF 		bl	MSens_out_Read
 4268 001c 0346     		mov	r3, r0
 4269 001e 7B71     		strb	r3, [r7, #5]
 959:.\main.c      ****     
 960:.\main.c      ****         //if only the left one, hard left
 961:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4270              		.loc 1 961 0
 4271 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4272 0022 002B     		cmp	r3, #0
 4273 0024 27D0     		beq	.L235
 4274              		.loc 1 961 0 is_stmt 0 discriminator 1
 4275 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 94


 4276 0028 002B     		cmp	r3, #0
 4277 002a 24D1     		bne	.L235
 4278              		.loc 1 961 0 discriminator 2
 4279 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4280 002e 002B     		cmp	r3, #0
 4281 0030 21D1     		bne	.L235
 962:.\main.c      ****     {
 963:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4282              		.loc 1 963 0 is_stmt 1
 4283 0032 454B     		ldr	r3, .L240+8
 4284 0034 D3E90023 		ldrd	r2, [r3]
 4285 0038 1046     		mov	r0, r2
 4286 003a 1946     		mov	r1, r3
 4287 003c 40A3     		adr	r3, .L240
 4288 003e D3E90023 		ldrd	r2, [r3]
 4289 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4290 0046 0246     		mov	r2, r0
 4291 0048 0B46     		mov	r3, r1
 4292 004a 1446     		mov	r4, r2
 4293 004c 1D46     		mov	r5, r3
 4294 004e 3E4B     		ldr	r3, .L240+8
 4295 0050 D3E90023 		ldrd	r2, [r3]
 4296 0054 9046     		mov	r8, r2
 4297 0056 83F00049 		eor	r9, r3, #-2147483648
 4298 005a 4046     		mov	r0, r8
 4299 005c 4946     		mov	r1, r9
 4300 005e 38A3     		adr	r3, .L240
 4301 0060 D3E90023 		ldrd	r2, [r3]
 4302 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4303 0068 0246     		mov	r2, r0
 4304 006a 0B46     		mov	r3, r1
 4305 006c 2046     		mov	r0, r4
 4306 006e 2946     		mov	r1, r5
 4307 0070 FFF7FEFF 		bl	setSpeed
 4308 0074 5FE0     		b	.L234
 4309              	.L235:
 964:.\main.c      ****     }
 965:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4310              		.loc 1 965 0
 4311 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4312 0078 002B     		cmp	r3, #0
 4313 007a 0ED0     		beq	.L237
 4314              		.loc 1 965 0 is_stmt 0 discriminator 1
 4315 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4316 007e 002B     		cmp	r3, #0
 4317 0080 0BD0     		beq	.L237
 4318              		.loc 1 965 0 discriminator 2
 4319 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4320 0084 002B     		cmp	r3, #0
 4321 0086 08D1     		bne	.L237
 966:.\main.c      ****     {
 967:.\main.c      ****         setSpeed(speed,speed);
 4322              		.loc 1 967 0 is_stmt 1
 4323 0088 2F4B     		ldr	r3, .L240+8
 4324 008a D3E90001 		ldrd	r0, [r3]
 4325 008e 2E4B     		ldr	r3, .L240+8
 4326 0090 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 95


 4327 0094 FFF7FEFF 		bl	setSpeed
 4328 0098 4DE0     		b	.L234
 4329              	.L237:
 968:.\main.c      ****     }
 969:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4330              		.loc 1 969 0
 4331 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4332 009c 002B     		cmp	r3, #0
 4333 009e 0ED0     		beq	.L238
 4334              		.loc 1 969 0 is_stmt 0 discriminator 1
 4335 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4336 00a2 002B     		cmp	r3, #0
 4337 00a4 0BD0     		beq	.L238
 4338              		.loc 1 969 0 discriminator 2
 4339 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4340 00a8 002B     		cmp	r3, #0
 4341 00aa 08D1     		bne	.L238
 970:.\main.c      ****     {
 971:.\main.c      ****         setSpeed(speed ,speed);
 4342              		.loc 1 971 0 is_stmt 1
 4343 00ac 264B     		ldr	r3, .L240+8
 4344 00ae D3E90001 		ldrd	r0, [r3]
 4345 00b2 254B     		ldr	r3, .L240+8
 4346 00b4 D3E90023 		ldrd	r2, [r3]
 4347 00b8 FFF7FEFF 		bl	setSpeed
 4348 00bc 3BE0     		b	.L234
 4349              	.L238:
 972:.\main.c      ****     }
 973:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4350              		.loc 1 973 0
 4351 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4352 00c0 002B     		cmp	r3, #0
 4353 00c2 27D0     		beq	.L239
 4354              		.loc 1 973 0 is_stmt 0 discriminator 1
 4355 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4356 00c6 002B     		cmp	r3, #0
 4357 00c8 24D1     		bne	.L239
 4358              		.loc 1 973 0 discriminator 2
 4359 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4360 00cc 002B     		cmp	r3, #0
 4361 00ce 21D1     		bne	.L239
 974:.\main.c      ****     {
 975:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4362              		.loc 1 975 0 is_stmt 1
 4363 00d0 1D4B     		ldr	r3, .L240+8
 4364 00d2 D3E90023 		ldrd	r2, [r3]
 4365 00d6 1446     		mov	r4, r2
 4366 00d8 83F00045 		eor	r5, r3, #-2147483648
 4367 00dc 2046     		mov	r0, r4
 4368 00de 2946     		mov	r1, r5
 4369 00e0 17A3     		adr	r3, .L240
 4370 00e2 D3E90023 		ldrd	r2, [r3]
 4371 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4372 00ea 0246     		mov	r2, r0
 4373 00ec 0B46     		mov	r3, r1
 4374 00ee 1446     		mov	r4, r2
 4375 00f0 1D46     		mov	r5, r3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 96


 4376 00f2 154B     		ldr	r3, .L240+8
 4377 00f4 D3E90023 		ldrd	r2, [r3]
 4378 00f8 1046     		mov	r0, r2
 4379 00fa 1946     		mov	r1, r3
 4380 00fc 10A3     		adr	r3, .L240
 4381 00fe D3E90023 		ldrd	r2, [r3]
 4382 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4383 0106 0246     		mov	r2, r0
 4384 0108 0B46     		mov	r3, r1
 4385 010a 2046     		mov	r0, r4
 4386 010c 2946     		mov	r1, r5
 4387 010e FFF7FEFF 		bl	setSpeed
 4388 0112 10E0     		b	.L234
 4389              	.L239:
 976:.\main.c      ****     }
 977:.\main.c      ****     else if (mid && !nr && !nl)
 4390              		.loc 1 977 0
 4391 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4392 0116 002B     		cmp	r3, #0
 4393 0118 0DD0     		beq	.L234
 4394              		.loc 1 977 0 is_stmt 0 discriminator 1
 4395 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4396 011c 002B     		cmp	r3, #0
 4397 011e 0AD1     		bne	.L234
 4398              		.loc 1 977 0 discriminator 2
 4399 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4400 0122 002B     		cmp	r3, #0
 4401 0124 07D1     		bne	.L234
 978:.\main.c      ****     {
 979:.\main.c      ****         setSpeed(speed,speed);
 4402              		.loc 1 979 0 is_stmt 1
 4403 0126 084B     		ldr	r3, .L240+8
 4404 0128 D3E90001 		ldrd	r0, [r3]
 4405 012c 064B     		ldr	r3, .L240+8
 4406 012e D3E90023 		ldrd	r2, [r3]
 4407 0132 FFF7FEFF 		bl	setSpeed
 4408              	.L234:
 980:.\main.c      ****     }
 981:.\main.c      **** }
 4409              		.loc 1 981 0
 4410 0136 0837     		adds	r7, r7, #8
 4411              		.cfi_def_cfa_offset 24
 4412 0138 BD46     		mov	sp, r7
 4413              		.cfi_def_cfa_register 13
 4414              		@ sp needed
 4415 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4416              	.L241:
 4417 013e 00BF     		.align	3
 4418              	.L240:
 4419 0140 9A999999 		.word	-1717986918
 4420 0144 9999F93F 		.word	1073322393
 4421 0148 00000000 		.word	speed
 4422              		.cfi_endproc
 4423              	.LFE98:
 4424              		.size	trackLineZ, .-trackLineZ
 4425 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4426              		.align	2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 97


 4427              		.global	trackLineU
 4428              		.thumb
 4429              		.thumb_func
 4430              		.type	trackLineU, %function
 4431              	trackLineU:
 4432              	.LFB99:
 982:.\main.c      **** 
 983:.\main.c      **** 
 984:.\main.c      **** void trackLineU()
 985:.\main.c      **** { 
 4433              		.loc 1 985 0
 4434              		.cfi_startproc
 4435              		@ args = 0, pretend = 0, frame = 0
 4436              		@ frame_needed = 1, uses_anonymous_args = 0
 4437              		@ link register save eliminated.
 4438 0000 80B4     		push	{r7}
 4439              		.cfi_def_cfa_offset 4
 4440              		.cfi_offset 7, -4
 4441 0002 00AF     		add	r7, sp, #0
 4442              		.cfi_def_cfa_register 7
 986:.\main.c      **** //removed from final implementation
 987:.\main.c      **** }
 4443              		.loc 1 987 0
 4444 0004 BD46     		mov	sp, r7
 4445              		.cfi_def_cfa_register 13
 4446              		@ sp needed
 4447 0006 5DF8047B 		ldr	r7, [sp], #4
 4448              		.cfi_restore 7
 4449              		.cfi_def_cfa_offset 0
 4450 000a 7047     		bx	lr
 4451              		.cfi_endproc
 4452              	.LFE99:
 4453              		.size	trackLineU, .-trackLineU
 4454              		.global	__aeabi_fadd
 4455              		.section	.rodata
 4456 00db 00       		.align	2
 4457              	.LC11:
 4458 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4458      65727920 
 4458      566F6C74 
 4458      6167653A 
 4458      2025646D 
 4459              		.section	.text.print_ADC,"ax",%progbits
 4460              		.align	2
 4461              		.global	print_ADC
 4462              		.thumb
 4463              		.thumb_func
 4464              		.type	print_ADC, %function
 4465              	print_ADC:
 4466              	.LFB100:
 988:.\main.c      **** 
 989:.\main.c      **** void print_ADC()
 990:.\main.c      **** {
 4467              		.loc 1 990 0
 4468              		.cfi_startproc
 4469              		@ args = 0, pretend = 0, frame = 24
 4470              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 98


 4471 0000 80B5     		push	{r7, lr}
 4472              		.cfi_def_cfa_offset 8
 4473              		.cfi_offset 7, -8
 4474              		.cfi_offset 14, -4
 4475 0002 86B0     		sub	sp, sp, #24
 4476              		.cfi_def_cfa_offset 32
 4477 0004 00AF     		add	r7, sp, #0
 4478              		.cfi_def_cfa_register 7
 991:.\main.c      ****    //usbPutString("HII\n");
 992:.\main.c      ****     if(flag_receive_ADC == 1)
 4479              		.loc 1 992 0
 4480 0006 274B     		ldr	r3, .L246
 4481 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4482 000a 012B     		cmp	r3, #1
 4483 000c 46D1     		bne	.L243
 4484              	.LBB10:
 993:.\main.c      ****     {
 994:.\main.c      ****         //usbPutString("AAA\r\n");
 995:.\main.c      ****         flag_receive_ADC = 0;
 4485              		.loc 1 995 0
 4486 000e 254B     		ldr	r3, .L246
 4487 0010 0022     		movs	r2, #0
 4488 0012 1A70     		strb	r2, [r3]
 996:.\main.c      ****         
 997:.\main.c      ****        // int8 channel = ADC_
 998:.\main.c      ****         float scalingFactor = 0.972;
 4489              		.loc 1 998 0
 4490 0014 244B     		ldr	r3, .L246+4
 4491 0016 7B61     		str	r3, [r7, #20]	@ float
 999:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4492              		.loc 1 999 0
 4493 0018 244B     		ldr	r3, .L246+8
 4494 001a 1B88     		ldrh	r3, [r3]
 4495 001c 1BB2     		sxth	r3, r3
 4496 001e 41F28832 		movw	r2, #5000
 4497 0022 02FB03F3 		mul	r3, r2, r3
 4498 0026 002B     		cmp	r3, #0
 4499 0028 01DA     		bge	.L245
 4500 002a 03F6FF73 		addw	r3, r3, #4095
 4501              	.L245:
 4502 002e 1B13     		asrs	r3, r3, #12
 4503 0030 1846     		mov	r0, r3
 4504 0032 FFF7FEFF 		bl	__aeabi_i2f
 4505 0036 0346     		mov	r3, r0
 4506 0038 1846     		mov	r0, r3
 4507 003a 7969     		ldr	r1, [r7, #20]	@ float
 4508 003c FFF7FEFF 		bl	__aeabi_fmul
 4509 0040 0346     		mov	r3, r0
 4510 0042 1846     		mov	r0, r3
 4511 0044 1946     		mov	r1, r3
 4512 0046 FFF7FEFF 		bl	__aeabi_fadd
 4513 004a 0346     		mov	r3, r0
 4514 004c 1846     		mov	r0, r3
 4515 004e FFF7FEFF 		bl	__aeabi_f2iz
 4516 0052 0346     		mov	r3, r0
 4517 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1000:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 99


 4518              		.loc 1 1000 0
 4519 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4520 005a 154B     		ldr	r3, .L246+12
 4521 005c 1B88     		ldrh	r3, [r3]
 4522 005e 1BB2     		sxth	r3, r3
 4523 0060 1A44     		add	r2, r2, r3
 4524 0062 144B     		ldr	r3, .L246+16
 4525 0064 1B88     		ldrh	r3, [r3]
 4526 0066 1BB2     		sxth	r3, r3
 4527 0068 1344     		add	r3, r3, r2
 4528 006a 134A     		ldr	r2, .L246+20
 4529 006c 82FB0312 		smull	r1, r2, r2, r3
 4530 0070 DB17     		asrs	r3, r3, #31
 4531 0072 D31A     		subs	r3, r2, r3
 4532 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1001:.\main.c      ****         prevVoltage2 = prevVoltage;
 4533              		.loc 1 1001 0
 4534 0076 0E4B     		ldr	r3, .L246+12
 4535 0078 1A88     		ldrh	r2, [r3]
 4536 007a 0E4B     		ldr	r3, .L246+16
 4537 007c 1A80     		strh	r2, [r3]	@ movhi
1002:.\main.c      ****         prevVoltage = converted_val;
 4538              		.loc 1 1002 0
 4539 007e 0C4A     		ldr	r2, .L246+12
 4540 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4541 0082 1380     		strh	r3, [r2]	@ movhi
1003:.\main.c      ****         
1004:.\main.c      ****         char result_str[16];
1005:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4542              		.loc 1 1005 0
 4543 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4544 0088 3A46     		mov	r2, r7
 4545 008a 1046     		mov	r0, r2
 4546 008c 0B49     		ldr	r1, .L246+24
 4547 008e 1A46     		mov	r2, r3
 4548 0090 FFF7FEFF 		bl	sprintf
1006:.\main.c      ****         
1007:.\main.c      ****         usbPutString(result_str);
 4549              		.loc 1 1007 0
 4550 0094 3B46     		mov	r3, r7
 4551 0096 1846     		mov	r0, r3
 4552 0098 FFF7FEFF 		bl	usbPutString
 4553              	.L243:
 4554              	.LBE10:
1008:.\main.c      ****     }
1009:.\main.c      **** }
 4555              		.loc 1 1009 0
 4556 009c 1837     		adds	r7, r7, #24
 4557              		.cfi_def_cfa_offset 8
 4558 009e BD46     		mov	sp, r7
 4559              		.cfi_def_cfa_register 13
 4560              		@ sp needed
 4561 00a0 80BD     		pop	{r7, pc}
 4562              	.L247:
 4563 00a2 00BF     		.align	2
 4564              	.L246:
 4565 00a4 00000000 		.word	flag_receive_ADC
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 100


 4566 00a8 FED4783F 		.word	1064883454
 4567 00ac 00000000 		.word	adc_result
 4568 00b0 00000000 		.word	prevVoltage
 4569 00b4 00000000 		.word	prevVoltage2
 4570 00b8 56555555 		.word	1431655766
 4571 00bc DC000000 		.word	.LC11
 4572              		.cfi_endproc
 4573              	.LFE100:
 4574              		.size	print_ADC, .-print_ADC
 4575              		.section	.rodata
 4576              		.align	2
 4577              	.LC12:
 4578 00f4 52535349 		.ascii	"RSSI:\000"
 4578      3A00
 4579 00fa 0000     		.align	2
 4580              	.LC13:
 4581 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4581      00
 4582 0101 000000   		.align	2
 4583              	.LC14:
 4584 0104 726F626F 		.ascii	"robot_x:\000"
 4584      745F783A 
 4584      00
 4585 010d 000000   		.align	2
 4586              	.LC15:
 4587 0110 726F626F 		.ascii	"robot_y:\000"
 4587      745F793A 
 4587      00
 4588 0119 000000   		.align	2
 4589              	.LC16:
 4590 011c 726F626F 		.ascii	"robot_dir:\000"
 4590      745F6469 
 4590      723A00
 4591 0127 00       		.section	.text.print_RF,"ax",%progbits
 4592              		.align	2
 4593              		.global	print_RF
 4594              		.thumb
 4595              		.thumb_func
 4596              		.type	print_RF, %function
 4597              	print_RF:
 4598              	.LFB101:
1010:.\main.c      **** 
1011:.\main.c      **** void print_RF()
1012:.\main.c      **** {
 4599              		.loc 1 1012 0
 4600              		.cfi_startproc
 4601              		@ args = 0, pretend = 0, frame = 16
 4602              		@ frame_needed = 1, uses_anonymous_args = 0
 4603 0000 80B5     		push	{r7, lr}
 4604              		.cfi_def_cfa_offset 8
 4605              		.cfi_offset 7, -8
 4606              		.cfi_offset 14, -4
 4607 0002 84B0     		sub	sp, sp, #16
 4608              		.cfi_def_cfa_offset 24
 4609 0004 00AF     		add	r7, sp, #0
 4610              		.cfi_def_cfa_register 7
1013:.\main.c      ****     if(flag_print_rf == 1)
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 101


 4611              		.loc 1 1013 0
 4612 0006 254B     		ldr	r3, .L250
 4613 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4614 000a 012B     		cmp	r3, #1
 4615 000c 42D1     		bne	.L248
 4616              	.LBB11:
1014:.\main.c      ****     {
1015:.\main.c      ****         char printString[16];
1016:.\main.c      ****         flag_print_rf = 0;
 4617              		.loc 1 1016 0
 4618 000e 234B     		ldr	r3, .L250
 4619 0010 0022     		movs	r2, #0
 4620 0012 1A70     		strb	r2, [r3]
1017:.\main.c      ****         usbPutString("RSSI:");
 4621              		.loc 1 1017 0
 4622 0014 2248     		ldr	r0, .L250+4
 4623 0016 FFF7FEFF 		bl	usbPutString
1018:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4624              		.loc 1 1018 0
 4625 001a 224B     		ldr	r3, .L250+8
 4626 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4627 001e 5BB2     		sxtb	r3, r3
 4628 0020 3A46     		mov	r2, r7
 4629 0022 1046     		mov	r0, r2
 4630 0024 2049     		ldr	r1, .L250+12
 4631 0026 1A46     		mov	r2, r3
 4632 0028 FFF7FEFF 		bl	sprintf
1019:.\main.c      ****         usbPutString(printString);
 4633              		.loc 1 1019 0
 4634 002c 3B46     		mov	r3, r7
 4635 002e 1846     		mov	r0, r3
 4636 0030 FFF7FEFF 		bl	usbPutString
1020:.\main.c      ****         usbPutString("robot_x:");
 4637              		.loc 1 1020 0
 4638 0034 1D48     		ldr	r0, .L250+16
 4639 0036 FFF7FEFF 		bl	usbPutString
1021:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4640              		.loc 1 1021 0
 4641 003a 1A4B     		ldr	r3, .L250+8
 4642 003c 5B88     		ldrh	r3, [r3, #2]
 4643 003e 1BB2     		sxth	r3, r3
 4644 0040 3A46     		mov	r2, r7
 4645 0042 1046     		mov	r0, r2
 4646 0044 1849     		ldr	r1, .L250+12
 4647 0046 1A46     		mov	r2, r3
 4648 0048 FFF7FEFF 		bl	sprintf
1022:.\main.c      ****         usbPutString(printString);
 4649              		.loc 1 1022 0
 4650 004c 3B46     		mov	r3, r7
 4651 004e 1846     		mov	r0, r3
 4652 0050 FFF7FEFF 		bl	usbPutString
1023:.\main.c      ****         usbPutString("robot_y:");
 4653              		.loc 1 1023 0
 4654 0054 1648     		ldr	r0, .L250+20
 4655 0056 FFF7FEFF 		bl	usbPutString
1024:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4656              		.loc 1 1024 0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 102


 4657 005a 124B     		ldr	r3, .L250+8
 4658 005c 9B88     		ldrh	r3, [r3, #4]
 4659 005e 1BB2     		sxth	r3, r3
 4660 0060 3A46     		mov	r2, r7
 4661 0062 1046     		mov	r0, r2
 4662 0064 1049     		ldr	r1, .L250+12
 4663 0066 1A46     		mov	r2, r3
 4664 0068 FFF7FEFF 		bl	sprintf
1025:.\main.c      ****         usbPutString(printString);
 4665              		.loc 1 1025 0
 4666 006c 3B46     		mov	r3, r7
 4667 006e 1846     		mov	r0, r3
 4668 0070 FFF7FEFF 		bl	usbPutString
1026:.\main.c      ****         usbPutString("robot_dir:");
 4669              		.loc 1 1026 0
 4670 0074 0F48     		ldr	r0, .L250+24
 4671 0076 FFF7FEFF 		bl	usbPutString
1027:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4672              		.loc 1 1027 0
 4673 007a 0A4B     		ldr	r3, .L250+8
 4674 007c DB88     		ldrh	r3, [r3, #6]
 4675 007e 1BB2     		sxth	r3, r3
 4676 0080 3A46     		mov	r2, r7
 4677 0082 1046     		mov	r0, r2
 4678 0084 0849     		ldr	r1, .L250+12
 4679 0086 1A46     		mov	r2, r3
 4680 0088 FFF7FEFF 		bl	sprintf
1028:.\main.c      ****         usbPutString(printString);
 4681              		.loc 1 1028 0
 4682 008c 3B46     		mov	r3, r7
 4683 008e 1846     		mov	r0, r3
 4684 0090 FFF7FEFF 		bl	usbPutString
 4685              	.L248:
 4686              	.LBE11:
1029:.\main.c      ****     }
1030:.\main.c      **** }
 4687              		.loc 1 1030 0
 4688 0094 1037     		adds	r7, r7, #16
 4689              		.cfi_def_cfa_offset 8
 4690 0096 BD46     		mov	sp, r7
 4691              		.cfi_def_cfa_register 13
 4692              		@ sp needed
 4693 0098 80BD     		pop	{r7, pc}
 4694              	.L251:
 4695 009a 00BF     		.align	2
 4696              	.L250:
 4697 009c 00000000 		.word	flag_print_rf
 4698 00a0 F4000000 		.word	.LC12
 4699 00a4 00000000 		.word	system_state
 4700 00a8 FC000000 		.word	.LC13
 4701 00ac 04010000 		.word	.LC14
 4702 00b0 10010000 		.word	.LC15
 4703 00b4 1C010000 		.word	.LC16
 4704              		.cfi_endproc
 4705              	.LFE101:
 4706              		.size	print_RF, .-print_RF
 4707              		.section	.text.readFrontSensors,"ax",%progbits
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 103


 4708              		.align	2
 4709              		.global	readFrontSensors
 4710              		.thumb
 4711              		.thumb_func
 4712              		.type	readFrontSensors, %function
 4713              	readFrontSensors:
 4714              	.LFB102:
1031:.\main.c      **** 
1032:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1033:.\main.c      **** {
 4715              		.loc 1 1033 0
 4716              		.cfi_startproc
 4717              		@ args = 0, pretend = 0, frame = 8
 4718              		@ frame_needed = 1, uses_anonymous_args = 0
 4719 0000 90B5     		push	{r4, r7, lr}
 4720              		.cfi_def_cfa_offset 12
 4721              		.cfi_offset 4, -12
 4722              		.cfi_offset 7, -8
 4723              		.cfi_offset 14, -4
 4724 0002 83B0     		sub	sp, sp, #12
 4725              		.cfi_def_cfa_offset 24
 4726 0004 00AF     		add	r7, sp, #0
 4727              		.cfi_def_cfa_register 7
 4728 0006 7860     		str	r0, [r7, #4]
1034:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4729              		.loc 1 1034 0
 4730 0008 FFF7FEFF 		bl	FLSens_out_Read
 4731 000c 0346     		mov	r3, r0
 4732 000e 1A46     		mov	r2, r3
 4733 0010 7B68     		ldr	r3, [r7, #4]
 4734 0012 1A70     		strb	r2, [r3]
1035:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4735              		.loc 1 1035 0
 4736 0014 7B68     		ldr	r3, [r7, #4]
 4737 0016 5C1C     		adds	r4, r3, #1
 4738 0018 FFF7FEFF 		bl	NLSens_out_Read
 4739 001c 0346     		mov	r3, r0
 4740 001e 2370     		strb	r3, [r4]
1036:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4741              		.loc 1 1036 0
 4742 0020 7B68     		ldr	r3, [r7, #4]
 4743 0022 9C1C     		adds	r4, r3, #2
 4744 0024 FFF7FEFF 		bl	MSens_out_Read
 4745 0028 0346     		mov	r3, r0
 4746 002a 2370     		strb	r3, [r4]
1037:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4747              		.loc 1 1037 0
 4748 002c 7B68     		ldr	r3, [r7, #4]
 4749 002e DC1C     		adds	r4, r3, #3
 4750 0030 FFF7FEFF 		bl	NRSens_out_Read
 4751 0034 0346     		mov	r3, r0
 4752 0036 2370     		strb	r3, [r4]
1038:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4753              		.loc 1 1038 0
 4754 0038 7B68     		ldr	r3, [r7, #4]
 4755 003a 1C1D     		adds	r4, r3, #4
 4756 003c FFF7FEFF 		bl	FRSens_out_Read
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 104


 4757 0040 0346     		mov	r3, r0
 4758 0042 2370     		strb	r3, [r4]
1039:.\main.c      **** }
 4759              		.loc 1 1039 0
 4760 0044 0C37     		adds	r7, r7, #12
 4761              		.cfi_def_cfa_offset 12
 4762 0046 BD46     		mov	sp, r7
 4763              		.cfi_def_cfa_register 13
 4764              		@ sp needed
 4765 0048 90BD     		pop	{r4, r7, pc}
 4766              		.cfi_endproc
 4767              	.LFE102:
 4768              		.size	readFrontSensors, .-readFrontSensors
 4769 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4770              		.align	2
 4771              		.global	usbPutString
 4772              		.thumb
 4773              		.thumb_func
 4774              		.type	usbPutString, %function
 4775              	usbPutString:
 4776              	.LFB103:
1040:.\main.c      **** 
1041:.\main.c      **** 
1042:.\main.c      **** //* ========================================
1043:.\main.c      **** void usbPutString(char *s)
1044:.\main.c      **** {
 4777              		.loc 1 1044 0
 4778              		.cfi_startproc
 4779              		@ args = 0, pretend = 0, frame = 16
 4780              		@ frame_needed = 1, uses_anonymous_args = 0
 4781 0000 80B5     		push	{r7, lr}
 4782              		.cfi_def_cfa_offset 8
 4783              		.cfi_offset 7, -8
 4784              		.cfi_offset 14, -4
 4785 0002 84B0     		sub	sp, sp, #16
 4786              		.cfi_def_cfa_offset 24
 4787 0004 00AF     		add	r7, sp, #0
 4788              		.cfi_def_cfa_register 7
 4789 0006 7860     		str	r0, [r7, #4]
1045:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1046:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1047:.\main.c      **** //  length to 62 char (63rd char is a '!')
1048:.\main.c      ****     if (USE_USB && portOpen)
 4790              		.loc 1 1048 0
 4791 0008 154B     		ldr	r3, .L257
 4792 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4793 000c 002B     		cmp	r3, #0
 4794 000e 23D0     		beq	.L253
 4795              	.LBB12:
1049:.\main.c      ****     {
1050:.\main.c      ****             uint32 cnt = 0;
 4796              		.loc 1 1050 0
 4797 0010 0023     		movs	r3, #0
 4798 0012 FB60     		str	r3, [r7, #12]
1051:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4799              		.loc 1 1051 0
 4800 0014 0AE0     		b	.L255
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 105


 4801              	.L256:
1052:.\main.c      ****             {
1053:.\main.c      ****                 cnt++;
 4802              		.loc 1 1053 0
 4803 0016 FB68     		ldr	r3, [r7, #12]
 4804 0018 0133     		adds	r3, r3, #1
 4805 001a FB60     		str	r3, [r7, #12]
1054:.\main.c      ****                 if(cnt == 3000000){
 4806              		.loc 1 1054 0
 4807 001c FB68     		ldr	r3, [r7, #12]
 4808 001e 114A     		ldr	r2, .L257+4
 4809 0020 9342     		cmp	r3, r2
 4810 0022 03D1     		bne	.L255
1055:.\main.c      ****                     portOpen = 0;
 4811              		.loc 1 1055 0
 4812 0024 0E4B     		ldr	r3, .L257
 4813 0026 0022     		movs	r2, #0
 4814 0028 1A70     		strb	r2, [r3]
1056:.\main.c      ****                     return;
 4815              		.loc 1 1056 0
 4816 002a 15E0     		b	.L253
 4817              	.L255:
1051:.\main.c      ****             {
 4818              		.loc 1 1051 0
 4819 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4820 0030 0346     		mov	r3, r0
 4821 0032 002B     		cmp	r3, #0
 4822 0034 EFD0     		beq	.L256
1057:.\main.c      ****                 }
1058:.\main.c      ****             }
1059:.\main.c      ****             s[63]='\0';
 4823              		.loc 1 1059 0
 4824 0036 7B68     		ldr	r3, [r7, #4]
 4825 0038 3F33     		adds	r3, r3, #63
 4826 003a 0022     		movs	r2, #0
 4827 003c 1A70     		strb	r2, [r3]
1060:.\main.c      ****             s[62]='!';
 4828              		.loc 1 1060 0
 4829 003e 7B68     		ldr	r3, [r7, #4]
 4830 0040 3E33     		adds	r3, r3, #62
 4831 0042 2122     		movs	r2, #33
 4832 0044 1A70     		strb	r2, [r3]
1061:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4833              		.loc 1 1061 0
 4834 0046 7868     		ldr	r0, [r7, #4]
 4835 0048 FFF7FEFF 		bl	strlen
 4836 004c 0346     		mov	r3, r0
 4837 004e 9BB2     		uxth	r3, r3
 4838 0050 7868     		ldr	r0, [r7, #4]
 4839 0052 1946     		mov	r1, r3
 4840 0054 FFF7FEFF 		bl	USBUART_PutData
 4841              	.L253:
 4842              	.LBE12:
1062:.\main.c      ****     }
1063:.\main.c      **** }
 4843              		.loc 1 1063 0
 4844 0058 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 106


 4845              		.cfi_def_cfa_offset 8
 4846 005a BD46     		mov	sp, r7
 4847              		.cfi_def_cfa_register 13
 4848              		@ sp needed
 4849 005c 80BD     		pop	{r7, pc}
 4850              	.L258:
 4851 005e 00BF     		.align	2
 4852              	.L257:
 4853 0060 00000000 		.word	portOpen
 4854 0064 C0C62D00 		.word	3000000
 4855              		.cfi_endproc
 4856              	.LFE103:
 4857              		.size	usbPutString, .-usbPutString
 4858              		.section	.text.usbPutChar,"ax",%progbits
 4859              		.align	2
 4860              		.global	usbPutChar
 4861              		.thumb
 4862              		.thumb_func
 4863              		.type	usbPutChar, %function
 4864              	usbPutChar:
 4865              	.LFB104:
1064:.\main.c      **** //* ========================================
1065:.\main.c      **** void usbPutChar(char c)
1066:.\main.c      **** {
 4866              		.loc 1 1066 0
 4867              		.cfi_startproc
 4868              		@ args = 0, pretend = 0, frame = 16
 4869              		@ frame_needed = 1, uses_anonymous_args = 0
 4870 0000 80B5     		push	{r7, lr}
 4871              		.cfi_def_cfa_offset 8
 4872              		.cfi_offset 7, -8
 4873              		.cfi_offset 14, -4
 4874 0002 84B0     		sub	sp, sp, #16
 4875              		.cfi_def_cfa_offset 24
 4876 0004 00AF     		add	r7, sp, #0
 4877              		.cfi_def_cfa_register 7
 4878 0006 0346     		mov	r3, r0
 4879 0008 FB71     		strb	r3, [r7, #7]
1067:.\main.c      ****     if (USE_USB && portOpen)    
 4880              		.loc 1 1067 0
 4881 000a 0F4B     		ldr	r3, .L263
 4882 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4883 000e 002B     		cmp	r3, #0
 4884 0010 16D0     		beq	.L259
 4885              	.LBB13:
1068:.\main.c      ****     {    
1069:.\main.c      ****         uint32 cnt = 0;
 4886              		.loc 1 1069 0
 4887 0012 0023     		movs	r3, #0
 4888 0014 FB60     		str	r3, [r7, #12]
1070:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4889              		.loc 1 1070 0
 4890 0016 0AE0     		b	.L261
 4891              	.L262:
1071:.\main.c      ****             cnt++;
 4892              		.loc 1 1071 0
 4893 0018 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 107


 4894 001a 0133     		adds	r3, r3, #1
 4895 001c FB60     		str	r3, [r7, #12]
1072:.\main.c      ****             if(cnt == 3000000){
 4896              		.loc 1 1072 0
 4897 001e FB68     		ldr	r3, [r7, #12]
 4898 0020 0A4A     		ldr	r2, .L263+4
 4899 0022 9342     		cmp	r3, r2
 4900 0024 03D1     		bne	.L261
1073:.\main.c      ****                 portOpen = 0;
 4901              		.loc 1 1073 0
 4902 0026 084B     		ldr	r3, .L263
 4903 0028 0022     		movs	r2, #0
 4904 002a 1A70     		strb	r2, [r3]
1074:.\main.c      ****                 return;
 4905              		.loc 1 1074 0
 4906 002c 08E0     		b	.L259
 4907              	.L261:
1070:.\main.c      ****             cnt++;
 4908              		.loc 1 1070 0
 4909 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4910 0032 0346     		mov	r3, r0
 4911 0034 002B     		cmp	r3, #0
 4912 0036 EFD0     		beq	.L262
1075:.\main.c      ****             }
1076:.\main.c      ****         }
1077:.\main.c      ****         USBUART_PutChar(c);
 4913              		.loc 1 1077 0
 4914 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4915 003a 1846     		mov	r0, r3
 4916 003c FFF7FEFF 		bl	USBUART_PutChar
 4917              	.L259:
 4918              	.LBE13:
1078:.\main.c      ****     }    
1079:.\main.c      **** }
 4919              		.loc 1 1079 0
 4920 0040 1037     		adds	r7, r7, #16
 4921              		.cfi_def_cfa_offset 8
 4922 0042 BD46     		mov	sp, r7
 4923              		.cfi_def_cfa_register 13
 4924              		@ sp needed
 4925 0044 80BD     		pop	{r7, pc}
 4926              	.L264:
 4927 0046 00BF     		.align	2
 4928              	.L263:
 4929 0048 00000000 		.word	portOpen
 4930 004c C0C62D00 		.word	3000000
 4931              		.cfi_endproc
 4932              	.LFE104:
 4933              		.size	usbPutChar, .-usbPutChar
 4934              		.section	.text.uart_set_PWM,"ax",%progbits
 4935              		.align	2
 4936              		.global	uart_set_PWM
 4937              		.thumb
 4938              		.thumb_func
 4939              		.type	uart_set_PWM, %function
 4940              	uart_set_PWM:
 4941              	.LFB105:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 108


1080:.\main.c      **** //* ========================================
1081:.\main.c      **** 
1082:.\main.c      **** void uart_set_PWM()
1083:.\main.c      **** {
 4942              		.loc 1 1083 0
 4943              		.cfi_startproc
 4944              		@ args = 0, pretend = 0, frame = 0
 4945              		@ frame_needed = 1, uses_anonymous_args = 0
 4946              		@ link register save eliminated.
 4947 0000 80B4     		push	{r7}
 4948              		.cfi_def_cfa_offset 4
 4949              		.cfi_offset 7, -4
 4950 0002 00AF     		add	r7, sp, #0
 4951              		.cfi_def_cfa_register 7
1084:.\main.c      ****     //removed from final implementation
1085:.\main.c      **** }
 4952              		.loc 1 1085 0
 4953 0004 BD46     		mov	sp, r7
 4954              		.cfi_def_cfa_register 13
 4955              		@ sp needed
 4956 0006 5DF8047B 		ldr	r7, [sp], #4
 4957              		.cfi_restore 7
 4958              		.cfi_def_cfa_offset 0
 4959 000a 7047     		bx	lr
 4960              		.cfi_endproc
 4961              	.LFE105:
 4962              		.size	uart_set_PWM, .-uart_set_PWM
 4963              		.text
 4964              	.Letext0:
 4965              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4966              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4967              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4968              		.file 5 ".\\vars.h"
 4969              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4970              		.file 7 ".\\pathfinder.h"
 4971              		.section	.debug_info,"",%progbits
 4972              	.Ldebug_info0:
 4973 0000 290E0000 		.4byte	0xe29
 4974 0004 0400     		.2byte	0x4
 4975 0006 00000000 		.4byte	.Ldebug_abbrev0
 4976 000a 04       		.byte	0x4
 4977 000b 01       		.uleb128 0x1
 4978 000c 9E040000 		.4byte	.LASF195
 4979 0010 01       		.byte	0x1
 4980 0011 7C090000 		.4byte	.LASF196
 4981 0015 A9020000 		.4byte	.LASF197
 4982 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4983 001d 00000000 		.4byte	0
 4984 0021 00000000 		.4byte	.Ldebug_line0
 4985 0025 02       		.uleb128 0x2
 4986 0026 01       		.byte	0x1
 4987 0027 06       		.byte	0x6
 4988 0028 B6080000 		.4byte	.LASF0
 4989 002c 02       		.uleb128 0x2
 4990 002d 01       		.byte	0x1
 4991 002e 08       		.byte	0x8
 4992 002f F3070000 		.4byte	.LASF1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 109


 4993 0033 02       		.uleb128 0x2
 4994 0034 02       		.byte	0x2
 4995 0035 05       		.byte	0x5
 4996 0036 54060000 		.4byte	.LASF2
 4997 003a 02       		.uleb128 0x2
 4998 003b 02       		.byte	0x2
 4999 003c 07       		.byte	0x7
 5000 003d C2080000 		.4byte	.LASF3
 5001 0041 03       		.uleb128 0x3
 5002 0042 98000000 		.4byte	.LASF5
 5003 0046 02       		.byte	0x2
 5004 0047 3F       		.byte	0x3f
 5005 0048 4C000000 		.4byte	0x4c
 5006 004c 02       		.uleb128 0x2
 5007 004d 04       		.byte	0x4
 5008 004e 05       		.byte	0x5
 5009 004f 88060000 		.4byte	.LASF4
 5010 0053 03       		.uleb128 0x3
 5011 0054 01080000 		.4byte	.LASF6
 5012 0058 02       		.byte	0x2
 5013 0059 41       		.byte	0x41
 5014 005a 5E000000 		.4byte	0x5e
 5015 005e 02       		.uleb128 0x2
 5016 005f 04       		.byte	0x4
 5017 0060 07       		.byte	0x7
 5018 0061 8C070000 		.4byte	.LASF7
 5019 0065 02       		.uleb128 0x2
 5020 0066 08       		.byte	0x8
 5021 0067 05       		.byte	0x5
 5022 0068 68040000 		.4byte	.LASF8
 5023 006c 02       		.uleb128 0x2
 5024 006d 08       		.byte	0x8
 5025 006e 07       		.byte	0x7
 5026 006f 3F020000 		.4byte	.LASF9
 5027 0073 04       		.uleb128 0x4
 5028 0074 04       		.byte	0x4
 5029 0075 05       		.byte	0x5
 5030 0076 696E7400 		.ascii	"int\000"
 5031 007a 02       		.uleb128 0x2
 5032 007b 04       		.byte	0x4
 5033 007c 07       		.byte	0x7
 5034 007d 80000000 		.4byte	.LASF10
 5035 0081 02       		.uleb128 0x2
 5036 0082 04       		.byte	0x4
 5037 0083 07       		.byte	0x7
 5038 0084 83070000 		.4byte	.LASF11
 5039 0088 05       		.uleb128 0x5
 5040 0089 04       		.byte	0x4
 5041 008a 8E000000 		.4byte	0x8e
 5042 008e 02       		.uleb128 0x2
 5043 008f 01       		.byte	0x1
 5044 0090 08       		.byte	0x8
 5045 0091 B0030000 		.4byte	.LASF12
 5046 0095 03       		.uleb128 0x3
 5047 0096 AA070000 		.4byte	.LASF13
 5048 009a 03       		.byte	0x3
 5049 009b 2C       		.byte	0x2c
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 110


 5050 009c 41000000 		.4byte	0x41
 5051 00a0 03       		.uleb128 0x3
 5052 00a1 BF010000 		.4byte	.LASF14
 5053 00a5 03       		.byte	0x3
 5054 00a6 2D       		.byte	0x2d
 5055 00a7 53000000 		.4byte	0x53
 5056 00ab 06       		.uleb128 0x6
 5057 00ac 09090000 		.4byte	.LASF15
 5058 00b0 04       		.byte	0x4
 5059 00b1 9201     		.2byte	0x192
 5060 00b3 2C000000 		.4byte	0x2c
 5061 00b7 06       		.uleb128 0x6
 5062 00b8 F8030000 		.4byte	.LASF16
 5063 00bc 04       		.byte	0x4
 5064 00bd 9301     		.2byte	0x193
 5065 00bf 3A000000 		.4byte	0x3a
 5066 00c3 06       		.uleb128 0x6
 5067 00c4 6F050000 		.4byte	.LASF17
 5068 00c8 04       		.byte	0x4
 5069 00c9 9401     		.2byte	0x194
 5070 00cb 5E000000 		.4byte	0x5e
 5071 00cf 06       		.uleb128 0x6
 5072 00d0 FF030000 		.4byte	.LASF18
 5073 00d4 04       		.byte	0x4
 5074 00d5 9501     		.2byte	0x195
 5075 00d7 25000000 		.4byte	0x25
 5076 00db 06       		.uleb128 0x6
 5077 00dc A2000000 		.4byte	.LASF19
 5078 00e0 04       		.byte	0x4
 5079 00e1 9601     		.2byte	0x196
 5080 00e3 33000000 		.4byte	0x33
 5081 00e7 02       		.uleb128 0x2
 5082 00e8 04       		.byte	0x4
 5083 00e9 04       		.byte	0x4
 5084 00ea DF010000 		.4byte	.LASF20
 5085 00ee 02       		.uleb128 0x2
 5086 00ef 08       		.byte	0x8
 5087 00f0 04       		.byte	0x4
 5088 00f1 0F090000 		.4byte	.LASF21
 5089 00f5 07       		.uleb128 0x7
 5090 00f6 A0000000 		.4byte	0xa0
 5091 00fa 05010000 		.4byte	0x105
 5092 00fe 08       		.uleb128 0x8
 5093 00ff 81000000 		.4byte	0x81
 5094 0103 01       		.byte	0x1
 5095 0104 00       		.byte	0
 5096 0105 02       		.uleb128 0x2
 5097 0106 08       		.byte	0x8
 5098 0107 04       		.byte	0x4
 5099 0108 EB050000 		.4byte	.LASF22
 5100 010c 09       		.uleb128 0x9
 5101 010d 4E080000 		.4byte	.LASF31
 5102 0111 01       		.byte	0x1
 5103 0112 05       		.byte	0x5
 5104 0113 5D       		.byte	0x5d
 5105 0114 49010000 		.4byte	0x149
 5106 0118 0A       		.uleb128 0xa
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 111


 5107 0119 FE010000 		.4byte	.LASF23
 5108 011d 00       		.sleb128 0
 5109 011e 0A       		.uleb128 0xa
 5110 011f B5000000 		.4byte	.LASF24
 5111 0123 01       		.sleb128 1
 5112 0124 0A       		.uleb128 0xa
 5113 0125 1C000000 		.4byte	.LASF25
 5114 0129 02       		.sleb128 2
 5115 012a 0A       		.uleb128 0xa
 5116 012b DA050000 		.4byte	.LASF26
 5117 012f 03       		.sleb128 3
 5118 0130 0A       		.uleb128 0xa
 5119 0131 D0000000 		.4byte	.LASF27
 5120 0135 04       		.sleb128 4
 5121 0136 0A       		.uleb128 0xa
 5122 0137 A8010000 		.4byte	.LASF28
 5123 013b 05       		.sleb128 5
 5124 013c 0A       		.uleb128 0xa
 5125 013d FE060000 		.4byte	.LASF29
 5126 0141 06       		.sleb128 6
 5127 0142 0A       		.uleb128 0xa
 5128 0143 49090000 		.4byte	.LASF30
 5129 0147 07       		.sleb128 7
 5130 0148 00       		.byte	0
 5131 0149 09       		.uleb128 0x9
 5132 014a 0B010000 		.4byte	.LASF32
 5133 014e 01       		.byte	0x1
 5134 014f 05       		.byte	0x5
 5135 0150 5E       		.byte	0x5e
 5136 0151 86010000 		.4byte	0x186
 5137 0155 0A       		.uleb128 0xa
 5138 0156 D0060000 		.4byte	.LASF33
 5139 015a 00       		.sleb128 0
 5140 015b 0A       		.uleb128 0xa
 5141 015c 2F040000 		.4byte	.LASF34
 5142 0160 01       		.sleb128 1
 5143 0161 0A       		.uleb128 0xa
 5144 0162 9F060000 		.4byte	.LASF35
 5145 0166 02       		.sleb128 2
 5146 0167 0A       		.uleb128 0xa
 5147 0168 62010000 		.4byte	.LASF36
 5148 016c 03       		.sleb128 3
 5149 016d 0A       		.uleb128 0xa
 5150 016e E7080000 		.4byte	.LASF37
 5151 0172 04       		.sleb128 4
 5152 0173 0A       		.uleb128 0xa
 5153 0174 27090000 		.4byte	.LASF38
 5154 0178 05       		.sleb128 5
 5155 0179 0A       		.uleb128 0xa
 5156 017a 31000000 		.4byte	.LASF39
 5157 017e 06       		.sleb128 6
 5158 017f 0A       		.uleb128 0xa
 5159 0180 F1060000 		.4byte	.LASF40
 5160 0184 07       		.sleb128 7
 5161 0185 00       		.byte	0
 5162 0186 0B       		.uleb128 0xb
 5163 0187 8F050000 		.4byte	.LASF198
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 112


 5164 018b 20       		.byte	0x20
 5165 018c 05       		.byte	0x5
 5166 018d 64       		.byte	0x64
 5167 018e 5F020000 		.4byte	0x25f
 5168 0192 0C       		.uleb128 0xc
 5169 0193 AD050000 		.4byte	.LASF41
 5170 0197 05       		.byte	0x5
 5171 0198 65       		.byte	0x65
 5172 0199 CF000000 		.4byte	0xcf
 5173 019d 00       		.byte	0
 5174 019e 0C       		.uleb128 0xc
 5175 019f F8010000 		.4byte	.LASF42
 5176 01a3 05       		.byte	0x5
 5177 01a4 66       		.byte	0x66
 5178 01a5 AB000000 		.4byte	0xab
 5179 01a9 01       		.byte	0x1
 5180 01aa 0C       		.uleb128 0xc
 5181 01ab CB070000 		.4byte	.LASF43
 5182 01af 05       		.byte	0x5
 5183 01b0 67       		.byte	0x67
 5184 01b1 DB000000 		.4byte	0xdb
 5185 01b5 02       		.byte	0x2
 5186 01b6 0C       		.uleb128 0xc
 5187 01b7 84030000 		.4byte	.LASF44
 5188 01bb 05       		.byte	0x5
 5189 01bc 68       		.byte	0x68
 5190 01bd DB000000 		.4byte	0xdb
 5191 01c1 04       		.byte	0x4
 5192 01c2 0C       		.uleb128 0xc
 5193 01c3 D5080000 		.4byte	.LASF45
 5194 01c7 05       		.byte	0x5
 5195 01c8 69       		.byte	0x69
 5196 01c9 DB000000 		.4byte	0xdb
 5197 01cd 06       		.byte	0x6
 5198 01ce 0C       		.uleb128 0xc
 5199 01cf 4F090000 		.4byte	.LASF46
 5200 01d3 05       		.byte	0x5
 5201 01d4 6A       		.byte	0x6a
 5202 01d5 DB000000 		.4byte	0xdb
 5203 01d9 08       		.byte	0x8
 5204 01da 0C       		.uleb128 0xc
 5205 01db 35050000 		.4byte	.LASF47
 5206 01df 05       		.byte	0x5
 5207 01e0 6B       		.byte	0x6b
 5208 01e1 DB000000 		.4byte	0xdb
 5209 01e5 0A       		.byte	0xa
 5210 01e6 0C       		.uleb128 0xc
 5211 01e7 B5030000 		.4byte	.LASF48
 5212 01eb 05       		.byte	0x5
 5213 01ec 6C       		.byte	0x6c
 5214 01ed DB000000 		.4byte	0xdb
 5215 01f1 0C       		.byte	0xc
 5216 01f2 0C       		.uleb128 0xc
 5217 01f3 BC050000 		.4byte	.LASF49
 5218 01f7 05       		.byte	0x5
 5219 01f8 6D       		.byte	0x6d
 5220 01f9 DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 113


 5221 01fd 0E       		.byte	0xe
 5222 01fe 0C       		.uleb128 0xc
 5223 01ff 83040000 		.4byte	.LASF50
 5224 0203 05       		.byte	0x5
 5225 0204 6E       		.byte	0x6e
 5226 0205 DB000000 		.4byte	0xdb
 5227 0209 10       		.byte	0x10
 5228 020a 0C       		.uleb128 0xc
 5229 020b 43070000 		.4byte	.LASF51
 5230 020f 05       		.byte	0x5
 5231 0210 6F       		.byte	0x6f
 5232 0211 DB000000 		.4byte	0xdb
 5233 0215 12       		.byte	0x12
 5234 0216 0C       		.uleb128 0xc
 5235 0217 73090000 		.4byte	.LASF52
 5236 021b 05       		.byte	0x5
 5237 021c 70       		.byte	0x70
 5238 021d DB000000 		.4byte	0xdb
 5239 0221 14       		.byte	0x14
 5240 0222 0C       		.uleb128 0xc
 5241 0223 11040000 		.4byte	.LASF53
 5242 0227 05       		.byte	0x5
 5243 0228 71       		.byte	0x71
 5244 0229 DB000000 		.4byte	0xdb
 5245 022d 16       		.byte	0x16
 5246 022e 0C       		.uleb128 0xc
 5247 022f 03010000 		.4byte	.LASF54
 5248 0233 05       		.byte	0x5
 5249 0234 72       		.byte	0x72
 5250 0235 DB000000 		.4byte	0xdb
 5251 0239 18       		.byte	0x18
 5252 023a 0C       		.uleb128 0xc
 5253 023b F0030000 		.4byte	.LASF55
 5254 023f 05       		.byte	0x5
 5255 0240 73       		.byte	0x73
 5256 0241 DB000000 		.4byte	0xdb
 5257 0245 1A       		.byte	0x1a
 5258 0246 0C       		.uleb128 0xc
 5259 0247 2C050000 		.4byte	.LASF56
 5260 024b 05       		.byte	0x5
 5261 024c 74       		.byte	0x74
 5262 024d DB000000 		.4byte	0xdb
 5263 0251 1C       		.byte	0x1c
 5264 0252 0C       		.uleb128 0xc
 5265 0253 C8010000 		.4byte	.LASF57
 5266 0257 05       		.byte	0x5
 5267 0258 75       		.byte	0x75
 5268 0259 DB000000 		.4byte	0xdb
 5269 025d 1E       		.byte	0x1e
 5270 025e 00       		.byte	0
 5271 025f 0D       		.uleb128 0xd
 5272 0260 F6080000 		.4byte	.LASF58
 5273 0264 01       		.byte	0x1
 5274 0265 5B       		.byte	0x5b
 5275 0266 00000000 		.4byte	.LFB63
 5276 026a 0C000000 		.4byte	.LFE63-.LFB63
 5277 026e 01       		.uleb128 0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 114


 5278 026f 9C       		.byte	0x9c
 5279 0270 0E       		.uleb128 0xe
 5280 0271 4B070000 		.4byte	.LASF59
 5281 0275 01       		.byte	0x1
 5282 0276 61       		.byte	0x61
 5283 0277 00000000 		.4byte	.LFB64
 5284 027b 2C000000 		.4byte	.LFE64-.LFB64
 5285 027f 01       		.uleb128 0x1
 5286 0280 9C       		.byte	0x9c
 5287 0281 0E       		.uleb128 0xe
 5288 0282 D5010000 		.4byte	.LASF60
 5289 0286 01       		.byte	0x1
 5290 0287 6A       		.byte	0x6a
 5291 0288 00000000 		.4byte	.LFB65
 5292 028c A4010000 		.4byte	.LFE65-.LFB65
 5293 0290 01       		.uleb128 0x1
 5294 0291 9C       		.byte	0x9c
 5295 0292 0E       		.uleb128 0xe
 5296 0293 6F020000 		.4byte	.LASF61
 5297 0297 01       		.byte	0x1
 5298 0298 A2       		.byte	0xa2
 5299 0299 00000000 		.4byte	.LFB66
 5300 029d AC000000 		.4byte	.LFE66-.LFB66
 5301 02a1 01       		.uleb128 0x1
 5302 02a2 9C       		.byte	0x9c
 5303 02a3 0D       		.uleb128 0xd
 5304 02a4 20080000 		.4byte	.LASF62
 5305 02a8 01       		.byte	0x1
 5306 02a9 C5       		.byte	0xc5
 5307 02aa 00000000 		.4byte	.LFB67
 5308 02ae 20000000 		.4byte	.LFE67-.LFB67
 5309 02b2 01       		.uleb128 0x1
 5310 02b3 9C       		.byte	0x9c
 5311 02b4 0E       		.uleb128 0xe
 5312 02b5 37030000 		.4byte	.LASF63
 5313 02b9 01       		.byte	0x1
 5314 02ba CC       		.byte	0xcc
 5315 02bb 00000000 		.4byte	.LFB68
 5316 02bf 28000000 		.4byte	.LFE68-.LFB68
 5317 02c3 01       		.uleb128 0x1
 5318 02c4 9C       		.byte	0x9c
 5319 02c5 0E       		.uleb128 0xe
 5320 02c6 F7050000 		.4byte	.LASF64
 5321 02ca 01       		.byte	0x1
 5322 02cb D5       		.byte	0xd5
 5323 02cc 00000000 		.4byte	.LFB69
 5324 02d0 0A000000 		.4byte	.LFE69-.LFB69
 5325 02d4 01       		.uleb128 0x1
 5326 02d5 9C       		.byte	0x9c
 5327 02d6 0E       		.uleb128 0xe
 5328 02d7 14060000 		.4byte	.LASF65
 5329 02db 01       		.byte	0x1
 5330 02dc DA       		.byte	0xda
 5331 02dd 00000000 		.4byte	.LFB70
 5332 02e1 28000000 		.4byte	.LFE70-.LFB70
 5333 02e5 01       		.uleb128 0x1
 5334 02e6 9C       		.byte	0x9c
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 115


 5335 02e7 0F       		.uleb128 0xf
 5336 02e8 F1080000 		.4byte	.LASF73
 5337 02ec 01       		.byte	0x1
 5338 02ed E5       		.byte	0xe5
 5339 02ee 73000000 		.4byte	0x73
 5340 02f2 00000000 		.4byte	.LFB71
 5341 02f6 4C060000 		.4byte	.LFE71-.LFB71
 5342 02fa 01       		.uleb128 0x1
 5343 02fb 9C       		.byte	0x9c
 5344 02fc CD030000 		.4byte	0x3cd
 5345 0300 10       		.uleb128 0x10
 5346 0301 28030000 		.4byte	.LASF66
 5347 0305 01       		.byte	0x1
 5348 0306 1E01     		.2byte	0x11e
 5349 0308 B7000000 		.4byte	0xb7
 5350 030c 02       		.uleb128 0x2
 5351 030d 91       		.byte	0x91
 5352 030e 76       		.sleb128 -10
 5353 030f 11       		.uleb128 0x11
 5354 0310 66000000 		.4byte	.LBB2
 5355 0314 AC050000 		.4byte	.LBE2-.LBB2
 5356 0318 10       		.uleb128 0x10
 5357 0319 62020000 		.4byte	.LASF67
 5358 031d 01       		.byte	0x1
 5359 031e 2C01     		.2byte	0x12c
 5360 0320 CD030000 		.4byte	0x3cd
 5361 0324 02       		.uleb128 0x2
 5362 0325 91       		.byte	0x91
 5363 0326 6C       		.sleb128 -20
 5364 0327 11       		.uleb128 0x11
 5365 0328 3C010000 		.4byte	.LBB3
 5366 032c 74040000 		.4byte	.LBE3-.LBB3
 5367 0330 10       		.uleb128 0x10
 5368 0331 95040000 		.4byte	.LASF68
 5369 0335 01       		.byte	0x1
 5370 0336 5601     		.2byte	0x156
 5371 0338 8E000000 		.4byte	0x8e
 5372 033c 02       		.uleb128 0x2
 5373 033d 91       		.byte	0x91
 5374 033e 75       		.sleb128 -11
 5375 033f 12       		.uleb128 0x12
 5376 0340 88010000 		.4byte	.LBB4
 5377 0344 68010000 		.4byte	.LBE4-.LBB4
 5378 0348 75030000 		.4byte	0x375
 5379 034c 13       		.uleb128 0x13
 5380 034d 6D657300 		.ascii	"mes\000"
 5381 0351 01       		.byte	0x1
 5382 0352 5D01     		.2byte	0x15d
 5383 0354 DD030000 		.4byte	0x3dd
 5384 0358 02       		.uleb128 0x2
 5385 0359 91       		.byte	0x91
 5386 035a 5C       		.sleb128 -36
 5387 035b 11       		.uleb128 0x11
 5388 035c B0010000 		.4byte	.LBB5
 5389 0360 40010000 		.4byte	.LBE5-.LBB5
 5390 0364 10       		.uleb128 0x10
 5391 0365 04040000 		.4byte	.LASF69
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 116


 5392 0369 01       		.byte	0x1
 5393 036a 6E01     		.2byte	0x16e
 5394 036c AB000000 		.4byte	0xab
 5395 0370 02       		.uleb128 0x2
 5396 0371 91       		.byte	0x91
 5397 0372 74       		.sleb128 -12
 5398 0373 00       		.byte	0
 5399 0374 00       		.byte	0
 5400 0375 12       		.uleb128 0x12
 5401 0376 A8030000 		.4byte	.LBB6
 5402 037a AC000000 		.4byte	.LBE6-.LBB6
 5403 037e A1030000 		.4byte	0x3a1
 5404 0382 13       		.uleb128 0x13
 5405 0383 6D657300 		.ascii	"mes\000"
 5406 0387 01       		.byte	0x1
 5407 0388 A601     		.2byte	0x1a6
 5408 038a DD030000 		.4byte	0x3dd
 5409 038e 02       		.uleb128 0x2
 5410 038f 91       		.byte	0x91
 5411 0390 4C       		.sleb128 -52
 5412 0391 10       		.uleb128 0x10
 5413 0392 04040000 		.4byte	.LASF69
 5414 0396 01       		.byte	0x1
 5415 0397 AA01     		.2byte	0x1aa
 5416 0399 AB000000 		.4byte	0xab
 5417 039d 02       		.uleb128 0x2
 5418 039e 91       		.byte	0x91
 5419 039f 73       		.sleb128 -13
 5420 03a0 00       		.byte	0
 5421 03a1 11       		.uleb128 0x11
 5422 03a2 6C040000 		.4byte	.LBB7
 5423 03a6 3A010000 		.4byte	.LBE7-.LBB7
 5424 03aa 13       		.uleb128 0x13
 5425 03ab 6D657300 		.ascii	"mes\000"
 5426 03af 01       		.byte	0x1
 5427 03b0 C401     		.2byte	0x1c4
 5428 03b2 DD030000 		.4byte	0x3dd
 5429 03b6 03       		.uleb128 0x3
 5430 03b7 91       		.byte	0x91
 5431 03b8 BC7F     		.sleb128 -68
 5432 03ba 10       		.uleb128 0x10
 5433 03bb 04040000 		.4byte	.LASF69
 5434 03bf 01       		.byte	0x1
 5435 03c0 C801     		.2byte	0x1c8
 5436 03c2 AB000000 		.4byte	0xab
 5437 03c6 02       		.uleb128 0x2
 5438 03c7 91       		.byte	0x91
 5439 03c8 72       		.sleb128 -14
 5440 03c9 00       		.byte	0
 5441 03ca 00       		.byte	0
 5442 03cb 00       		.byte	0
 5443 03cc 00       		.byte	0
 5444 03cd 07       		.uleb128 0x7
 5445 03ce AB000000 		.4byte	0xab
 5446 03d2 DD030000 		.4byte	0x3dd
 5447 03d6 08       		.uleb128 0x8
 5448 03d7 81000000 		.4byte	0x81
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 117


 5449 03db 04       		.byte	0x4
 5450 03dc 00       		.byte	0
 5451 03dd 07       		.uleb128 0x7
 5452 03de 8E000000 		.4byte	0x8e
 5453 03e2 ED030000 		.4byte	0x3ed
 5454 03e6 08       		.uleb128 0x8
 5455 03e7 81000000 		.4byte	0x81
 5456 03eb 0F       		.byte	0xf
 5457 03ec 00       		.byte	0
 5458 03ed 14       		.uleb128 0x14
 5459 03ee 2F090000 		.4byte	.LASF76
 5460 03f2 01       		.byte	0x1
 5461 03f3 1E02     		.2byte	0x21e
 5462 03f5 00000000 		.4byte	.LFB72
 5463 03f9 60010000 		.4byte	.LFE72-.LFB72
 5464 03fd 01       		.uleb128 0x1
 5465 03fe 9C       		.byte	0x9c
 5466 03ff 3B040000 		.4byte	0x43b
 5467 0403 11       		.uleb128 0x11
 5468 0404 10000000 		.4byte	.LBB8
 5469 0408 34010000 		.4byte	.LBE8-.LBB8
 5470 040c 10       		.uleb128 0x10
 5471 040d F6000000 		.4byte	.LASF70
 5472 0411 01       		.byte	0x1
 5473 0412 2402     		.2byte	0x224
 5474 0414 B7000000 		.4byte	0xb7
 5475 0418 02       		.uleb128 0x2
 5476 0419 91       		.byte	0x91
 5477 041a 76       		.sleb128 -10
 5478 041b 10       		.uleb128 0x10
 5479 041c 9E070000 		.4byte	.LASF71
 5480 0420 01       		.byte	0x1
 5481 0421 2502     		.2byte	0x225
 5482 0423 3B040000 		.4byte	0x43b
 5483 0427 02       		.uleb128 0x2
 5484 0428 91       		.byte	0x91
 5485 0429 68       		.sleb128 -24
 5486 042a 10       		.uleb128 0x10
 5487 042b 04020000 		.4byte	.LASF72
 5488 042f 01       		.byte	0x1
 5489 0430 2602     		.2byte	0x226
 5490 0432 3B040000 		.4byte	0x43b
 5491 0436 02       		.uleb128 0x2
 5492 0437 91       		.byte	0x91
 5493 0438 5C       		.sleb128 -36
 5494 0439 00       		.byte	0
 5495 043a 00       		.byte	0
 5496 043b 07       		.uleb128 0x7
 5497 043c 8E000000 		.4byte	0x8e
 5498 0440 4B040000 		.4byte	0x44b
 5499 0444 08       		.uleb128 0x8
 5500 0445 81000000 		.4byte	0x81
 5501 0449 0B       		.byte	0xb
 5502 044a 00       		.byte	0
 5503 044b 15       		.uleb128 0x15
 5504 044c CE030000 		.4byte	.LASF74
 5505 0450 01       		.byte	0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 118


 5506 0451 5F02     		.2byte	0x25f
 5507 0453 00000000 		.4byte	.LFB73
 5508 0457 18000000 		.4byte	.LFE73-.LFB73
 5509 045b 01       		.uleb128 0x1
 5510 045c 9C       		.byte	0x9c
 5511 045d 71040000 		.4byte	0x471
 5512 0461 16       		.uleb128 0x16
 5513 0462 64697200 		.ascii	"dir\000"
 5514 0466 01       		.byte	0x1
 5515 0467 5F02     		.2byte	0x25f
 5516 0469 AB000000 		.4byte	0xab
 5517 046d 02       		.uleb128 0x2
 5518 046e 91       		.byte	0x91
 5519 046f 77       		.sleb128 -9
 5520 0470 00       		.byte	0
 5521 0471 15       		.uleb128 0x15
 5522 0472 23040000 		.4byte	.LASF75
 5523 0476 01       		.byte	0x1
 5524 0477 6402     		.2byte	0x264
 5525 0479 00000000 		.4byte	.LFB74
 5526 047d 18000000 		.4byte	.LFE74-.LFB74
 5527 0481 01       		.uleb128 0x1
 5528 0482 9C       		.byte	0x9c
 5529 0483 97040000 		.4byte	0x497
 5530 0487 16       		.uleb128 0x16
 5531 0488 64697200 		.ascii	"dir\000"
 5532 048c 01       		.byte	0x1
 5533 048d 6402     		.2byte	0x264
 5534 048f AB000000 		.4byte	0xab
 5535 0493 02       		.uleb128 0x2
 5536 0494 91       		.byte	0x91
 5537 0495 77       		.sleb128 -9
 5538 0496 00       		.byte	0
 5539 0497 17       		.uleb128 0x17
 5540 0498 54080000 		.4byte	.LASF77
 5541 049c 01       		.byte	0x1
 5542 049d 6902     		.2byte	0x269
 5543 049f 00000000 		.4byte	.LFB75
 5544 04a3 54000000 		.4byte	.LFE75-.LFB75
 5545 04a7 01       		.uleb128 0x1
 5546 04a8 9C       		.byte	0x9c
 5547 04a9 BD040000 		.4byte	0x4bd
 5548 04ad 13       		.uleb128 0x13
 5549 04ae 6D657300 		.ascii	"mes\000"
 5550 04b2 01       		.byte	0x1
 5551 04b3 6E02     		.2byte	0x26e
 5552 04b5 DD030000 		.4byte	0x3dd
 5553 04b9 02       		.uleb128 0x2
 5554 04ba 91       		.byte	0x91
 5555 04bb 68       		.sleb128 -24
 5556 04bc 00       		.byte	0
 5557 04bd 15       		.uleb128 0x15
 5558 04be E5010000 		.4byte	.LASF78
 5559 04c2 01       		.byte	0x1
 5560 04c3 7302     		.2byte	0x273
 5561 04c5 00000000 		.4byte	.LFB76
 5562 04c9 F4000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 119


 5563 04cd 01       		.uleb128 0x1
 5564 04ce 9C       		.byte	0x9c
 5565 04cf 10050000 		.4byte	0x510
 5566 04d3 18       		.uleb128 0x18
 5567 04d4 1C070000 		.4byte	.LASF79
 5568 04d8 01       		.byte	0x1
 5569 04d9 7302     		.2byte	0x273
 5570 04db EE000000 		.4byte	0xee
 5571 04df 02       		.uleb128 0x2
 5572 04e0 91       		.byte	0x91
 5573 04e1 68       		.sleb128 -24
 5574 04e2 18       		.uleb128 0x18
 5575 04e3 50040000 		.4byte	.LASF80
 5576 04e7 01       		.byte	0x1
 5577 04e8 7302     		.2byte	0x273
 5578 04ea EE000000 		.4byte	0xee
 5579 04ee 02       		.uleb128 0x2
 5580 04ef 91       		.byte	0x91
 5581 04f0 60       		.sleb128 -32
 5582 04f1 10       		.uleb128 0x10
 5583 04f2 1D020000 		.4byte	.LASF81
 5584 04f6 01       		.byte	0x1
 5585 04f7 8802     		.2byte	0x288
 5586 04f9 DB000000 		.4byte	0xdb
 5587 04fd 02       		.uleb128 0x2
 5588 04fe 91       		.byte	0x91
 5589 04ff 76       		.sleb128 -10
 5590 0500 10       		.uleb128 0x10
 5591 0501 83050000 		.4byte	.LASF82
 5592 0505 01       		.byte	0x1
 5593 0506 8902     		.2byte	0x289
 5594 0508 DB000000 		.4byte	0xdb
 5595 050c 02       		.uleb128 0x2
 5596 050d 91       		.byte	0x91
 5597 050e 74       		.sleb128 -12
 5598 050f 00       		.byte	0
 5599 0510 19       		.uleb128 0x19
 5600 0511 65080000 		.4byte	.LASF83
 5601 0515 01       		.byte	0x1
 5602 0516 8F02     		.2byte	0x28f
 5603 0518 00000000 		.4byte	.LFB77
 5604 051c 18000000 		.4byte	.LFE77-.LFB77
 5605 0520 01       		.uleb128 0x1
 5606 0521 9C       		.byte	0x9c
 5607 0522 19       		.uleb128 0x19
 5608 0523 93090000 		.4byte	.LASF84
 5609 0527 01       		.byte	0x1
 5610 0528 9502     		.2byte	0x295
 5611 052a 00000000 		.4byte	.LFB78
 5612 052e 18000000 		.4byte	.LFE78-.LFB78
 5613 0532 01       		.uleb128 0x1
 5614 0533 9C       		.byte	0x9c
 5615 0534 19       		.uleb128 0x19
 5616 0535 D6070000 		.4byte	.LASF85
 5617 0539 01       		.byte	0x1
 5618 053a 9B02     		.2byte	0x29b
 5619 053c 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 120


 5620 0540 22000000 		.4byte	.LFE79-.LFB79
 5621 0544 01       		.uleb128 0x1
 5622 0545 9C       		.byte	0x9c
 5623 0546 19       		.uleb128 0x19
 5624 0547 28020000 		.4byte	.LASF86
 5625 054b 01       		.byte	0x1
 5626 054c A102     		.2byte	0x2a1
 5627 054e 00000000 		.4byte	.LFB80
 5628 0552 1C000000 		.4byte	.LFE80-.LFB80
 5629 0556 01       		.uleb128 0x1
 5630 0557 9C       		.byte	0x9c
 5631 0558 19       		.uleb128 0x19
 5632 0559 39070000 		.4byte	.LASF87
 5633 055d 01       		.byte	0x1
 5634 055e A602     		.2byte	0x2a6
 5635 0560 00000000 		.4byte	.LFB81
 5636 0564 28000000 		.4byte	.LFE81-.LFB81
 5637 0568 01       		.uleb128 0x1
 5638 0569 9C       		.byte	0x9c
 5639 056a 19       		.uleb128 0x19
 5640 056b 36020000 		.4byte	.LASF88
 5641 056f 01       		.byte	0x1
 5642 0570 AB02     		.2byte	0x2ab
 5643 0572 00000000 		.4byte	.LFB82
 5644 0576 2C000000 		.4byte	.LFE82-.LFB82
 5645 057a 01       		.uleb128 0x1
 5646 057b 9C       		.byte	0x9c
 5647 057c 19       		.uleb128 0x19
 5648 057d EA030000 		.4byte	.LASF89
 5649 0581 01       		.byte	0x1
 5650 0582 B002     		.2byte	0x2b0
 5651 0584 00000000 		.4byte	.LFB83
 5652 0588 44000000 		.4byte	.LFE83-.LFB83
 5653 058c 01       		.uleb128 0x1
 5654 058d 9C       		.byte	0x9c
 5655 058e 19       		.uleb128 0x19
 5656 058f 89020000 		.4byte	.LASF90
 5657 0593 01       		.byte	0x1
 5658 0594 B502     		.2byte	0x2b5
 5659 0596 00000000 		.4byte	.LFB84
 5660 059a 38000000 		.4byte	.LFE84-.LFB84
 5661 059e 01       		.uleb128 0x1
 5662 059f 9C       		.byte	0x9c
 5663 05a0 19       		.uleb128 0x19
 5664 05a1 91060000 		.4byte	.LASF91
 5665 05a5 01       		.byte	0x1
 5666 05a6 BE02     		.2byte	0x2be
 5667 05a8 00000000 		.4byte	.LFB85
 5668 05ac 38000000 		.4byte	.LFE85-.LFB85
 5669 05b0 01       		.uleb128 0x1
 5670 05b1 9C       		.byte	0x9c
 5671 05b2 19       		.uleb128 0x19
 5672 05b3 69060000 		.4byte	.LASF92
 5673 05b7 01       		.byte	0x1
 5674 05b8 C702     		.2byte	0x2c7
 5675 05ba 00000000 		.4byte	.LFB86
 5676 05be 38000000 		.4byte	.LFE86-.LFB86
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 121


 5677 05c2 01       		.uleb128 0x1
 5678 05c3 9C       		.byte	0x9c
 5679 05c4 19       		.uleb128 0x19
 5680 05c5 B3010000 		.4byte	.LASF93
 5681 05c9 01       		.byte	0x1
 5682 05ca D002     		.2byte	0x2d0
 5683 05cc 00000000 		.4byte	.LFB87
 5684 05d0 14000000 		.4byte	.LFE87-.LFB87
 5685 05d4 01       		.uleb128 0x1
 5686 05d5 9C       		.byte	0x9c
 5687 05d6 1A       		.uleb128 0x1a
 5688 05d7 9F020000 		.4byte	.LASF94
 5689 05db 01       		.byte	0x1
 5690 05dc D502     		.2byte	0x2d5
 5691 05de 00000000 		.4byte	.LFB88
 5692 05e2 18000000 		.4byte	.LFE88-.LFB88
 5693 05e6 01       		.uleb128 0x1
 5694 05e7 9C       		.byte	0x9c
 5695 05e8 1A       		.uleb128 0x1a
 5696 05e9 8B040000 		.4byte	.LASF95
 5697 05ed 01       		.byte	0x1
 5698 05ee D902     		.2byte	0x2d9
 5699 05f0 00000000 		.4byte	.LFB89
 5700 05f4 18000000 		.4byte	.LFE89-.LFB89
 5701 05f8 01       		.uleb128 0x1
 5702 05f9 9C       		.byte	0x9c
 5703 05fa 1A       		.uleb128 0x1a
 5704 05fb 9E090000 		.4byte	.LASF96
 5705 05ff 01       		.byte	0x1
 5706 0600 DE02     		.2byte	0x2de
 5707 0602 00000000 		.4byte	.LFB90
 5708 0606 18000000 		.4byte	.LFE90-.LFB90
 5709 060a 01       		.uleb128 0x1
 5710 060b 9C       		.byte	0x9c
 5711 060c 1A       		.uleb128 0x1a
 5712 060d 75030000 		.4byte	.LASF97
 5713 0611 01       		.byte	0x1
 5714 0612 E202     		.2byte	0x2e2
 5715 0614 00000000 		.4byte	.LFB91
 5716 0618 18000000 		.4byte	.LFE91-.LFB91
 5717 061c 01       		.uleb128 0x1
 5718 061d 9C       		.byte	0x9c
 5719 061e 15       		.uleb128 0x15
 5720 061f C0060000 		.4byte	.LASF98
 5721 0623 01       		.byte	0x1
 5722 0624 E902     		.2byte	0x2e9
 5723 0626 00000000 		.4byte	.LFB92
 5724 062a B8000000 		.4byte	.LFE92-.LFB92
 5725 062e 01       		.uleb128 0x1
 5726 062f 9C       		.byte	0x9c
 5727 0630 44060000 		.4byte	0x644
 5728 0634 10       		.uleb128 0x10
 5729 0635 3D050000 		.4byte	.LASF99
 5730 0639 01       		.byte	0x1
 5731 063a EA02     		.2byte	0x2ea
 5732 063c 8E000000 		.4byte	0x8e
 5733 0640 02       		.uleb128 0x2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 122


 5734 0641 91       		.byte	0x91
 5735 0642 6F       		.sleb128 -17
 5736 0643 00       		.byte	0
 5737 0644 15       		.uleb128 0x15
 5738 0645 E2050000 		.4byte	.LASF100
 5739 0649 01       		.byte	0x1
 5740 064a 0603     		.2byte	0x306
 5741 064c 00000000 		.4byte	.LFB93
 5742 0650 34030000 		.4byte	.LFE93-.LFB93
 5743 0654 01       		.uleb128 0x1
 5744 0655 9C       		.byte	0x9c
 5745 0656 9D060000 		.4byte	0x69d
 5746 065a 10       		.uleb128 0x10
 5747 065b 3D050000 		.4byte	.LASF99
 5748 065f 01       		.byte	0x1
 5749 0660 0803     		.2byte	0x308
 5750 0662 8E000000 		.4byte	0x8e
 5751 0666 02       		.uleb128 0x2
 5752 0667 91       		.byte	0x91
 5753 0668 6F       		.sleb128 -17
 5754 0669 11       		.uleb128 0x11
 5755 066a 48010000 		.4byte	.LBB9
 5756 066e B4010000 		.4byte	.LBE9-.LBB9
 5757 0672 13       		.uleb128 0x13
 5758 0673 6D657300 		.ascii	"mes\000"
 5759 0677 01       		.byte	0x1
 5760 0678 2E03     		.2byte	0x32e
 5761 067a DD030000 		.4byte	0x3dd
 5762 067e 02       		.uleb128 0x2
 5763 067f 91       		.byte	0x91
 5764 0680 5C       		.sleb128 -36
 5765 0681 13       		.uleb128 0x13
 5766 0682 6900     		.ascii	"i\000"
 5767 0684 01       		.byte	0x1
 5768 0685 4103     		.2byte	0x341
 5769 0687 73000000 		.4byte	0x73
 5770 068b 02       		.uleb128 0x2
 5771 068c 91       		.byte	0x91
 5772 068d 74       		.sleb128 -12
 5773 068e 13       		.uleb128 0x13
 5774 068f 7800     		.ascii	"x\000"
 5775 0691 01       		.byte	0x1
 5776 0692 5703     		.2byte	0x357
 5777 0694 73000000 		.4byte	0x73
 5778 0698 02       		.uleb128 0x2
 5779 0699 91       		.byte	0x91
 5780 069a 70       		.sleb128 -16
 5781 069b 00       		.byte	0
 5782 069c 00       		.byte	0
 5783 069d 19       		.uleb128 0x19
 5784 069e 7E020000 		.4byte	.LASF101
 5785 06a2 01       		.byte	0x1
 5786 06a3 6A03     		.2byte	0x36a
 5787 06a5 00000000 		.4byte	.LFB94
 5788 06a9 40000000 		.4byte	.LFE94-.LFB94
 5789 06ad 01       		.uleb128 0x1
 5790 06ae 9C       		.byte	0x9c
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 123


 5791 06af 19       		.uleb128 0x19
 5792 06b0 12020000 		.4byte	.LASF102
 5793 06b4 01       		.byte	0x1
 5794 06b5 7903     		.2byte	0x379
 5795 06b7 00000000 		.4byte	.LFB95
 5796 06bb 40000000 		.4byte	.LFE95-.LFB95
 5797 06bf 01       		.uleb128 0x1
 5798 06c0 9C       		.byte	0x9c
 5799 06c1 17       		.uleb128 0x17
 5800 06c2 51000000 		.4byte	.LASF103
 5801 06c6 01       		.byte	0x1
 5802 06c7 8903     		.2byte	0x389
 5803 06c9 00000000 		.4byte	.LFB96
 5804 06cd 30020000 		.4byte	.LFE96-.LFB96
 5805 06d1 01       		.uleb128 0x1
 5806 06d2 9C       		.byte	0x9c
 5807 06d3 32070000 		.4byte	0x732
 5808 06d7 10       		.uleb128 0x10
 5809 06d8 08030000 		.4byte	.LASF104
 5810 06dc 01       		.byte	0x1
 5811 06dd 9703     		.2byte	0x397
 5812 06df DB000000 		.4byte	0xdb
 5813 06e3 02       		.uleb128 0x2
 5814 06e4 91       		.byte	0x91
 5815 06e5 5E       		.sleb128 -34
 5816 06e6 10       		.uleb128 0x10
 5817 06e7 5B050000 		.4byte	.LASF105
 5818 06eb 01       		.byte	0x1
 5819 06ec 9803     		.2byte	0x398
 5820 06ee DB000000 		.4byte	0xdb
 5821 06f2 02       		.uleb128 0x2
 5822 06f3 91       		.byte	0x91
 5823 06f4 5C       		.sleb128 -36
 5824 06f5 10       		.uleb128 0x10
 5825 06f6 A4030000 		.4byte	.LASF106
 5826 06fa 01       		.byte	0x1
 5827 06fb 9903     		.2byte	0x399
 5828 06fd EE000000 		.4byte	0xee
 5829 0701 02       		.uleb128 0x2
 5830 0702 91       		.byte	0x91
 5831 0703 68       		.sleb128 -24
 5832 0704 10       		.uleb128 0x10
 5833 0705 57090000 		.4byte	.LASF107
 5834 0709 01       		.byte	0x1
 5835 070a 9A03     		.2byte	0x39a
 5836 070c EE000000 		.4byte	0xee
 5837 0710 02       		.uleb128 0x2
 5838 0711 91       		.byte	0x91
 5839 0712 60       		.sleb128 -32
 5840 0713 10       		.uleb128 0x10
 5841 0714 3B040000 		.4byte	.LASF108
 5842 0718 01       		.byte	0x1
 5843 0719 A303     		.2byte	0x3a3
 5844 071b 73000000 		.4byte	0x73
 5845 071f 02       		.uleb128 0x2
 5846 0720 91       		.byte	0x91
 5847 0721 58       		.sleb128 -40
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 124


 5848 0722 10       		.uleb128 0x10
 5849 0723 FF080000 		.4byte	.LASF109
 5850 0727 01       		.byte	0x1
 5851 0728 A403     		.2byte	0x3a4
 5852 072a 73000000 		.4byte	0x73
 5853 072e 02       		.uleb128 0x2
 5854 072f 91       		.byte	0x91
 5855 0730 54       		.sleb128 -44
 5856 0731 00       		.byte	0
 5857 0732 1A       		.uleb128 0x1a
 5858 0733 B2050000 		.4byte	.LASF110
 5859 0737 01       		.byte	0x1
 5860 0738 B203     		.2byte	0x3b2
 5861 073a 00000000 		.4byte	.LFB97
 5862 073e 0C000000 		.4byte	.LFE97-.LFB97
 5863 0742 01       		.uleb128 0x1
 5864 0743 9C       		.byte	0x9c
 5865 0744 17       		.uleb128 0x17
 5866 0745 43010000 		.4byte	.LASF111
 5867 0749 01       		.byte	0x1
 5868 074a B803     		.2byte	0x3b8
 5869 074c 00000000 		.4byte	.LFB98
 5870 0750 4C010000 		.4byte	.LFE98-.LFB98
 5871 0754 01       		.uleb128 0x1
 5872 0755 9C       		.byte	0x9c
 5873 0756 86070000 		.4byte	0x786
 5874 075a 13       		.uleb128 0x13
 5875 075b 6E6C00   		.ascii	"nl\000"
 5876 075e 01       		.byte	0x1
 5877 075f BC03     		.2byte	0x3bc
 5878 0761 AB000000 		.4byte	0xab
 5879 0765 02       		.uleb128 0x2
 5880 0766 91       		.byte	0x91
 5881 0767 67       		.sleb128 -25
 5882 0768 13       		.uleb128 0x13
 5883 0769 6E7200   		.ascii	"nr\000"
 5884 076c 01       		.byte	0x1
 5885 076d BD03     		.2byte	0x3bd
 5886 076f AB000000 		.4byte	0xab
 5887 0773 02       		.uleb128 0x2
 5888 0774 91       		.byte	0x91
 5889 0775 66       		.sleb128 -26
 5890 0776 13       		.uleb128 0x13
 5891 0777 6D696400 		.ascii	"mid\000"
 5892 077b 01       		.byte	0x1
 5893 077c BE03     		.2byte	0x3be
 5894 077e AB000000 		.4byte	0xab
 5895 0782 02       		.uleb128 0x2
 5896 0783 91       		.byte	0x91
 5897 0784 65       		.sleb128 -27
 5898 0785 00       		.byte	0
 5899 0786 1A       		.uleb128 0x1a
 5900 0787 28010000 		.4byte	.LASF112
 5901 078b 01       		.byte	0x1
 5902 078c D803     		.2byte	0x3d8
 5903 078e 00000000 		.4byte	.LFB99
 5904 0792 0C000000 		.4byte	.LFE99-.LFB99
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 125


 5905 0796 01       		.uleb128 0x1
 5906 0797 9C       		.byte	0x9c
 5907 0798 17       		.uleb128 0x17
 5908 0799 9A030000 		.4byte	.LASF113
 5909 079d 01       		.byte	0x1
 5910 079e DD03     		.2byte	0x3dd
 5911 07a0 00000000 		.4byte	.LFB100
 5912 07a4 C0000000 		.4byte	.LFE100-.LFB100
 5913 07a8 01       		.uleb128 0x1
 5914 07a9 9C       		.byte	0x9c
 5915 07aa E6070000 		.4byte	0x7e6
 5916 07ae 11       		.uleb128 0x11
 5917 07af 0E000000 		.4byte	.LBB10
 5918 07b3 8E000000 		.4byte	.LBE10-.LBB10
 5919 07b7 10       		.uleb128 0x10
 5920 07b8 FA020000 		.4byte	.LASF114
 5921 07bc 01       		.byte	0x1
 5922 07bd E603     		.2byte	0x3e6
 5923 07bf E7000000 		.4byte	0xe7
 5924 07c3 02       		.uleb128 0x2
 5925 07c4 91       		.byte	0x91
 5926 07c5 74       		.sleb128 -12
 5927 07c6 10       		.uleb128 0x10
 5928 07c7 99050000 		.4byte	.LASF115
 5929 07cb 01       		.byte	0x1
 5930 07cc E703     		.2byte	0x3e7
 5931 07ce DB000000 		.4byte	0xdb
 5932 07d2 02       		.uleb128 0x2
 5933 07d3 91       		.byte	0x91
 5934 07d4 72       		.sleb128 -14
 5935 07d5 10       		.uleb128 0x10
 5936 07d6 5D030000 		.4byte	.LASF116
 5937 07da 01       		.byte	0x1
 5938 07db EC03     		.2byte	0x3ec
 5939 07dd DD030000 		.4byte	0x3dd
 5940 07e1 02       		.uleb128 0x2
 5941 07e2 91       		.byte	0x91
 5942 07e3 60       		.sleb128 -32
 5943 07e4 00       		.byte	0
 5944 07e5 00       		.byte	0
 5945 07e6 17       		.uleb128 0x17
 5946 07e7 40090000 		.4byte	.LASF117
 5947 07eb 01       		.byte	0x1
 5948 07ec F303     		.2byte	0x3f3
 5949 07ee 00000000 		.4byte	.LFB101
 5950 07f2 B8000000 		.4byte	.LFE101-.LFB101
 5951 07f6 01       		.uleb128 0x1
 5952 07f7 9C       		.byte	0x9c
 5953 07f8 16080000 		.4byte	0x816
 5954 07fc 11       		.uleb128 0x11
 5955 07fd 0E000000 		.4byte	.LBB11
 5956 0801 86000000 		.4byte	.LBE11-.LBB11
 5957 0805 10       		.uleb128 0x10
 5958 0806 B4060000 		.4byte	.LASF118
 5959 080a 01       		.byte	0x1
 5960 080b F703     		.2byte	0x3f7
 5961 080d DD030000 		.4byte	0x3dd
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 126


 5962 0811 02       		.uleb128 0x2
 5963 0812 91       		.byte	0x91
 5964 0813 68       		.sleb128 -24
 5965 0814 00       		.byte	0
 5966 0815 00       		.byte	0
 5967 0816 15       		.uleb128 0x15
 5968 0817 53070000 		.4byte	.LASF119
 5969 081b 01       		.byte	0x1
 5970 081c 0804     		.2byte	0x408
 5971 081e 00000000 		.4byte	.LFB102
 5972 0822 4A000000 		.4byte	.LFE102-.LFB102
 5973 0826 01       		.uleb128 0x1
 5974 0827 9C       		.byte	0x9c
 5975 0828 3C080000 		.4byte	0x83c
 5976 082c 18       		.uleb128 0x18
 5977 082d 52030000 		.4byte	.LASF120
 5978 0831 01       		.byte	0x1
 5979 0832 0804     		.2byte	0x408
 5980 0834 3C080000 		.4byte	0x83c
 5981 0838 02       		.uleb128 0x2
 5982 0839 91       		.byte	0x91
 5983 083a 6C       		.sleb128 -20
 5984 083b 00       		.byte	0
 5985 083c 05       		.uleb128 0x5
 5986 083d 04       		.byte	0x4
 5987 083e AB000000 		.4byte	0xab
 5988 0842 15       		.uleb128 0x15
 5989 0843 2C070000 		.4byte	.LASF121
 5990 0847 01       		.byte	0x1
 5991 0848 1304     		.2byte	0x413
 5992 084a 00000000 		.4byte	.LFB103
 5993 084e 68000000 		.4byte	.LFE103-.LFB103
 5994 0852 01       		.uleb128 0x1
 5995 0853 9C       		.byte	0x9c
 5996 0854 7F080000 		.4byte	0x87f
 5997 0858 16       		.uleb128 0x16
 5998 0859 7300     		.ascii	"s\000"
 5999 085b 01       		.byte	0x1
 6000 085c 1304     		.2byte	0x413
 6001 085e 88000000 		.4byte	0x88
 6002 0862 02       		.uleb128 0x2
 6003 0863 91       		.byte	0x91
 6004 0864 6C       		.sleb128 -20
 6005 0865 11       		.uleb128 0x11
 6006 0866 10000000 		.4byte	.LBB12
 6007 086a 48000000 		.4byte	.LBE12-.LBB12
 6008 086e 13       		.uleb128 0x13
 6009 086f 636E7400 		.ascii	"cnt\000"
 6010 0873 01       		.byte	0x1
 6011 0874 1A04     		.2byte	0x41a
 6012 0876 C3000000 		.4byte	0xc3
 6013 087a 02       		.uleb128 0x2
 6014 087b 91       		.byte	0x91
 6015 087c 74       		.sleb128 -12
 6016 087d 00       		.byte	0
 6017 087e 00       		.byte	0
 6018 087f 15       		.uleb128 0x15
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 127


 6019 0880 AB080000 		.4byte	.LASF122
 6020 0884 01       		.byte	0x1
 6021 0885 2904     		.2byte	0x429
 6022 0887 00000000 		.4byte	.LFB104
 6023 088b 50000000 		.4byte	.LFE104-.LFB104
 6024 088f 01       		.uleb128 0x1
 6025 0890 9C       		.byte	0x9c
 6026 0891 BC080000 		.4byte	0x8bc
 6027 0895 16       		.uleb128 0x16
 6028 0896 6300     		.ascii	"c\000"
 6029 0898 01       		.byte	0x1
 6030 0899 2904     		.2byte	0x429
 6031 089b 8E000000 		.4byte	0x8e
 6032 089f 02       		.uleb128 0x2
 6033 08a0 91       		.byte	0x91
 6034 08a1 6F       		.sleb128 -17
 6035 08a2 11       		.uleb128 0x11
 6036 08a3 12000000 		.4byte	.LBB13
 6037 08a7 2E000000 		.4byte	.LBE13-.LBB13
 6038 08ab 13       		.uleb128 0x13
 6039 08ac 636E7400 		.ascii	"cnt\000"
 6040 08b0 01       		.byte	0x1
 6041 08b1 2D04     		.2byte	0x42d
 6042 08b3 C3000000 		.4byte	0xc3
 6043 08b7 02       		.uleb128 0x2
 6044 08b8 91       		.byte	0x91
 6045 08b9 74       		.sleb128 -12
 6046 08ba 00       		.byte	0
 6047 08bb 00       		.byte	0
 6048 08bc 1A       		.uleb128 0x1a
 6049 08bd 68030000 		.4byte	.LASF123
 6050 08c1 01       		.byte	0x1
 6051 08c2 3A04     		.2byte	0x43a
 6052 08c4 00000000 		.4byte	.LFB105
 6053 08c8 0C000000 		.4byte	.LFE105-.LFB105
 6054 08cc 01       		.uleb128 0x1
 6055 08cd 9C       		.byte	0x9c
 6056 08ce 1B       		.uleb128 0x1b
 6057 08cf A7060000 		.4byte	.LASF124
 6058 08d3 06       		.byte	0x6
 6059 08d4 9606     		.2byte	0x696
 6060 08d6 DA080000 		.4byte	0x8da
 6061 08da 1C       		.uleb128 0x1c
 6062 08db 95000000 		.4byte	0x95
 6063 08df 1D       		.uleb128 0x1d
 6064 08e0 747300   		.ascii	"ts\000"
 6065 08e3 05       		.byte	0x5
 6066 08e4 10       		.byte	0x10
 6067 08e5 AB000000 		.4byte	0xab
 6068 08e9 05       		.uleb128 0x5
 6069 08ea 03       		.byte	0x3
 6070 08eb 00000000 		.4byte	ts
 6071 08ef 1E       		.uleb128 0x1e
 6072 08f0 2D080000 		.4byte	.LASF125
 6073 08f4 05       		.byte	0x5
 6074 08f5 11       		.byte	0x11
 6075 08f6 B7000000 		.4byte	0xb7
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 128


 6076 08fa 05       		.uleb128 0x5
 6077 08fb 03       		.byte	0x3
 6078 08fc 00000000 		.4byte	ts_enc
 6079 0900 1E       		.uleb128 0x1e
 6080 0901 C6060000 		.4byte	.LASF126
 6081 0905 05       		.byte	0x5
 6082 0906 12       		.byte	0x12
 6083 0907 B7000000 		.4byte	0xb7
 6084 090b 05       		.uleb128 0x5
 6085 090c 03       		.byte	0x3
 6086 090d 00000000 		.4byte	ts_update
 6087 0911 1E       		.uleb128 0x1e
 6088 0912 66050000 		.4byte	.LASF127
 6089 0916 05       		.byte	0x5
 6090 0917 13       		.byte	0x13
 6091 0918 B7000000 		.4byte	0xb7
 6092 091c 05       		.uleb128 0x5
 6093 091d 03       		.byte	0x3
 6094 091e 00000000 		.4byte	ts_speed
 6095 0922 1E       		.uleb128 0x1e
 6096 0923 8F030000 		.4byte	.LASF128
 6097 0927 05       		.byte	0x5
 6098 0928 14       		.byte	0x14
 6099 0929 B7000000 		.4byte	0xb7
 6100 092d 05       		.uleb128 0x5
 6101 092e 03       		.byte	0x3
 6102 092f 00000000 		.4byte	ts_display
 6103 0933 1E       		.uleb128 0x1e
 6104 0934 12030000 		.4byte	.LASF129
 6105 0938 05       		.byte	0x5
 6106 0939 16       		.byte	0x16
 6107 093a AB000000 		.4byte	0xab
 6108 093e 05       		.uleb128 0x5
 6109 093f 03       		.byte	0x3
 6110 0940 00000000 		.4byte	flag_ts_enc
 6111 0944 1E       		.uleb128 0x1e
 6112 0945 EB020000 		.4byte	.LASF130
 6113 0949 05       		.byte	0x5
 6114 094a 17       		.byte	0x17
 6115 094b AB000000 		.4byte	0xab
 6116 094f 05       		.uleb128 0x5
 6117 0950 03       		.byte	0x3
 6118 0951 00000000 		.4byte	flag_ts_update
 6119 0955 1E       		.uleb128 0x1e
 6120 0956 21060000 		.4byte	.LASF131
 6121 095a 05       		.byte	0x5
 6122 095b 18       		.byte	0x18
 6123 095c AB000000 		.4byte	0xab
 6124 0960 05       		.uleb128 0x5
 6125 0961 03       		.byte	0x3
 6126 0962 00000000 		.4byte	flag_ts_speed
 6127 0966 1E       		.uleb128 0x1e
 6128 0967 3E080000 		.4byte	.LASF132
 6129 096b 05       		.byte	0x5
 6130 096c 19       		.byte	0x19
 6131 096d AB000000 		.4byte	0xab
 6132 0971 05       		.uleb128 0x5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 129


 6133 0972 03       		.byte	0x3
 6134 0973 00000000 		.4byte	flag_ts_display
 6135 0977 1E       		.uleb128 0x1e
 6136 0978 4C060000 		.4byte	.LASF133
 6137 097c 05       		.byte	0x5
 6138 097d 1C       		.byte	0x1c
 6139 097e AB000000 		.4byte	0xab
 6140 0982 05       		.uleb128 0x5
 6141 0983 03       		.byte	0x3
 6142 0984 00000000 		.4byte	flag_rx
 6143 0988 1E       		.uleb128 0x1e
 6144 0989 56020000 		.4byte	.LASF134
 6145 098d 05       		.byte	0x5
 6146 098e 1D       		.byte	0x1d
 6147 098f AB000000 		.4byte	0xab
 6148 0993 05       		.uleb128 0x5
 6149 0994 03       		.byte	0x3
 6150 0995 00000000 		.4byte	flag_packet
 6151 0999 1E       		.uleb128 0x1e
 6152 099a 64090000 		.4byte	.LASF135
 6153 099e 05       		.byte	0x5
 6154 099f 1E       		.byte	0x1e
 6155 09a0 AB000000 		.4byte	0xab
 6156 09a4 05       		.uleb128 0x5
 6157 09a5 03       		.byte	0x3
 6158 09a6 00000000 		.4byte	flag_KB_string
 6159 09aa 1E       		.uleb128 0x1e
 6160 09ab 2F060000 		.4byte	.LASF136
 6161 09af 05       		.byte	0x5
 6162 09b0 20       		.byte	0x20
 6163 09b1 AB000000 		.4byte	0xab
 6164 09b5 05       		.uleb128 0x5
 6165 09b6 03       		.byte	0x3
 6166 09b7 00000000 		.4byte	dataready_flag
 6167 09bb 1E       		.uleb128 0x1e
 6168 09bc 6F010000 		.4byte	.LASF137
 6169 09c0 05       		.byte	0x5
 6170 09c1 22       		.byte	0x22
 6171 09c2 AB000000 		.4byte	0xab
 6172 09c6 05       		.uleb128 0x5
 6173 09c7 03       		.byte	0x3
 6174 09c8 00000000 		.4byte	flag_rf_transmission_active
 6175 09cc 1E       		.uleb128 0x1e
 6176 09cd 8B010000 		.4byte	.LASF138
 6177 09d1 05       		.byte	0x5
 6178 09d2 23       		.byte	0x23
 6179 09d3 AB000000 		.4byte	0xab
 6180 09d7 05       		.uleb128 0x5
 6181 09d8 03       		.byte	0x3
 6182 09d9 00000000 		.4byte	flag_print_rf
 6183 09dd 1E       		.uleb128 0x1e
 6184 09de C9050000 		.4byte	.LASF139
 6185 09e2 05       		.byte	0x5
 6186 09e3 25       		.byte	0x25
 6187 09e4 AB000000 		.4byte	0xab
 6188 09e8 05       		.uleb128 0x5
 6189 09e9 03       		.byte	0x3
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 130


 6190 09ea 00000000 		.4byte	flag_receive_ADC
 6191 09ee 1E       		.uleb128 0x1e
 6192 09ef 5E060000 		.4byte	.LASF140
 6193 09f3 05       		.byte	0x5
 6194 09f4 26       		.byte	0x26
 6195 09f5 DB000000 		.4byte	0xdb
 6196 09f9 05       		.uleb128 0x5
 6197 09fa 03       		.byte	0x3
 6198 09fb 00000000 		.4byte	adc_result
 6199 09ff 1E       		.uleb128 0x1e
 6200 0a00 00000000 		.4byte	.LASF141
 6201 0a04 05       		.byte	0x5
 6202 0a05 28       		.byte	0x28
 6203 0a06 AB000000 		.4byte	0xab
 6204 0a0a 05       		.uleb128 0x5
 6205 0a0b 03       		.byte	0x3
 6206 0a0c 00000000 		.4byte	direction
 6207 0a10 1E       		.uleb128 0x1e
 6208 0a11 4F050000 		.4byte	.LASF142
 6209 0a15 05       		.byte	0x5
 6210 0a16 2B       		.byte	0x2b
 6211 0a17 AB000000 		.4byte	0xab
 6212 0a1b 05       		.uleb128 0x5
 6213 0a1c 03       		.byte	0x3
 6214 0a1d 00000000 		.4byte	BIN_ENABLED
 6215 0a21 1E       		.uleb128 0x1e
 6216 0a22 45040000 		.4byte	.LASF143
 6217 0a26 05       		.byte	0x5
 6218 0a27 2D       		.byte	0x2d
 6219 0a28 AB000000 		.4byte	0xab
 6220 0a2c 05       		.uleb128 0x5
 6221 0a2d 03       		.byte	0x3
 6222 0a2e 00000000 		.4byte	BT_ENABLED
 6223 0a32 1E       		.uleb128 0x1e
 6224 0a33 73060000 		.4byte	.LASF144
 6225 0a37 05       		.byte	0x5
 6226 0a38 32       		.byte	0x32
 6227 0a39 AB000000 		.4byte	0xab
 6228 0a3d 05       		.uleb128 0x5
 6229 0a3e 03       		.byte	0x3
 6230 0a3f 00000000 		.4byte	flag_calc_wheelspeed
 6231 0a43 1E       		.uleb128 0x1e
 6232 0a44 10010000 		.4byte	.LASF145
 6233 0a48 05       		.byte	0x5
 6234 0a49 33       		.byte	0x33
 6235 0a4a DB000000 		.4byte	0xdb
 6236 0a4e 05       		.uleb128 0x5
 6237 0a4f 03       		.byte	0x3
 6238 0a50 00000000 		.4byte	quad_count1
 6239 0a54 1E       		.uleb128 0x1e
 6240 0a55 1C010000 		.4byte	.LASF146
 6241 0a59 05       		.byte	0x5
 6242 0a5a 34       		.byte	0x34
 6243 0a5b DB000000 		.4byte	0xdb
 6244 0a5f 05       		.uleb128 0x5
 6245 0a60 03       		.byte	0x3
 6246 0a61 00000000 		.4byte	quad_count2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 131


 6247 0a65 1E       		.uleb128 0x1e
 6248 0a66 7D080000 		.4byte	.LASF147
 6249 0a6a 05       		.byte	0x5
 6250 0a6b 35       		.byte	0x35
 6251 0a6c DB000000 		.4byte	0xdb
 6252 0a70 05       		.uleb128 0x5
 6253 0a71 03       		.byte	0x3
 6254 0a72 00000000 		.4byte	last_quad_count1
 6255 0a76 1E       		.uleb128 0x1e
 6256 0a77 8E080000 		.4byte	.LASF148
 6257 0a7b 05       		.byte	0x5
 6258 0a7c 36       		.byte	0x36
 6259 0a7d DB000000 		.4byte	0xdb
 6260 0a81 05       		.uleb128 0x5
 6261 0a82 03       		.byte	0x3
 6262 0a83 00000000 		.4byte	last_quad_count2
 6263 0a87 1E       		.uleb128 0x1e
 6264 0a88 3B000000 		.4byte	.LASF149
 6265 0a8c 05       		.byte	0x5
 6266 0a8d 37       		.byte	0x37
 6267 0a8e DB000000 		.4byte	0xdb
 6268 0a92 05       		.uleb128 0x5
 6269 0a93 03       		.byte	0x3
 6270 0a94 00000000 		.4byte	quad_diff1
 6271 0a98 1E       		.uleb128 0x1e
 6272 0a99 46000000 		.4byte	.LASF150
 6273 0a9d 05       		.byte	0x5
 6274 0a9e 38       		.byte	0x38
 6275 0a9f DB000000 		.4byte	0xdb
 6276 0aa3 05       		.uleb128 0x5
 6277 0aa4 03       		.byte	0x3
 6278 0aa5 00000000 		.4byte	quad_diff2
 6279 0aa9 1E       		.uleb128 0x1e
 6280 0aaa D9060000 		.4byte	.LASF151
 6281 0aae 05       		.byte	0x5
 6282 0aaf 39       		.byte	0x39
 6283 0ab0 AB000000 		.4byte	0xab
 6284 0ab4 05       		.uleb128 0x5
 6285 0ab5 03       		.byte	0x3
 6286 0ab6 00000000 		.4byte	deadzone
 6287 0aba 1E       		.uleb128 0x1e
 6288 0abb 6F000000 		.4byte	.LASF152
 6289 0abf 05       		.byte	0x5
 6290 0ac0 3C       		.byte	0x3c
 6291 0ac1 DB000000 		.4byte	0xdb
 6292 0ac5 05       		.uleb128 0x5
 6293 0ac6 03       		.byte	0x3
 6294 0ac7 00000000 		.4byte	start_turn_count
 6295 0acb 1E       		.uleb128 0x1e
 6296 0acc 04060000 		.4byte	.LASF153
 6297 0ad0 05       		.byte	0x5
 6298 0ad1 3F       		.byte	0x3f
 6299 0ad2 DB000000 		.4byte	0xdb
 6300 0ad6 05       		.uleb128 0x5
 6301 0ad7 03       		.byte	0x3
 6302 0ad8 00000000 		.4byte	left_duty_cycle
 6303 0adc 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 132


 6304 0add 16090000 		.4byte	.LASF154
 6305 0ae1 05       		.byte	0x5
 6306 0ae2 40       		.byte	0x40
 6307 0ae3 DB000000 		.4byte	0xdb
 6308 0ae7 05       		.uleb128 0x5
 6309 0ae8 03       		.byte	0x3
 6310 0ae9 00000000 		.4byte	right_duty_cycle
 6311 0aed 1E       		.uleb128 0x1e
 6312 0aee E2060000 		.4byte	.LASF155
 6313 0af2 05       		.byte	0x5
 6314 0af3 43       		.byte	0x43
 6315 0af4 DB000000 		.4byte	0xdb
 6316 0af8 05       		.uleb128 0x5
 6317 0af9 03       		.byte	0x3
 6318 0afa 00000000 		.4byte	leftSpeedLimit
 6319 0afe 1E       		.uleb128 0x1e
 6320 0aff BE030000 		.4byte	.LASF156
 6321 0b03 05       		.byte	0x5
 6322 0b04 44       		.byte	0x44
 6323 0b05 DB000000 		.4byte	0xdb
 6324 0b09 05       		.uleb128 0x5
 6325 0b0a 03       		.byte	0x3
 6326 0b0b 00000000 		.4byte	rightSpeedLimit
 6327 0b0f 1E       		.uleb128 0x1e
 6328 0b10 70070000 		.4byte	.LASF157
 6329 0b14 05       		.byte	0x5
 6330 0b15 47       		.byte	0x47
 6331 0b16 DB000000 		.4byte	0xdb
 6332 0b1a 05       		.uleb128 0x5
 6333 0b1b 03       		.byte	0x3
 6334 0b1c 00000000 		.4byte	target_distance_cm
 6335 0b20 1E       		.uleb128 0x1e
 6336 0b21 21070000 		.4byte	.LASF158
 6337 0b25 05       		.byte	0x5
 6338 0b26 49       		.byte	0x49
 6339 0b27 DB000000 		.4byte	0xdb
 6340 0b2b 05       		.uleb128 0x5
 6341 0b2c 03       		.byte	0x3
 6342 0b2d 00000000 		.4byte	accum_dist
 6343 0b31 1E       		.uleb128 0x1e
 6344 0b32 BB000000 		.4byte	.LASF159
 6345 0b36 05       		.byte	0x5
 6346 0b37 4A       		.byte	0x4a
 6347 0b38 DB000000 		.4byte	0xdb
 6348 0b3c 05       		.uleb128 0x5
 6349 0b3d 03       		.byte	0x3
 6350 0b3e 00000000 		.4byte	target_distance_quad
 6351 0b42 1E       		.uleb128 0x1e
 6352 0b43 11080000 		.4byte	.LASF160
 6353 0b47 05       		.byte	0x5
 6354 0b48 4B       		.byte	0x4b
 6355 0b49 AB000000 		.4byte	0xab
 6356 0b4d 05       		.uleb128 0x5
 6357 0b4e 03       		.byte	0x3
 6358 0b4f 00000000 		.4byte	reached_target
 6359 0b53 1E       		.uleb128 0x1e
 6360 0b54 0C070000 		.4byte	.LASF161
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 133


 6361 0b58 05       		.byte	0x5
 6362 0b59 4C       		.byte	0x4c
 6363 0b5a AB000000 		.4byte	0xab
 6364 0b5e 05       		.uleb128 0x5
 6365 0b5f 03       		.byte	0x3
 6366 0b60 00000000 		.4byte	overshot_target
 6367 0b64 1E       		.uleb128 0x1e
 6368 0b65 64070000 		.4byte	.LASF162
 6369 0b69 05       		.byte	0x5
 6370 0b6a 4D       		.byte	0x4d
 6371 0b6b E7000000 		.4byte	0xe7
 6372 0b6f 05       		.uleb128 0x5
 6373 0b70 03       		.byte	0x3
 6374 0b71 00000000 		.4byte	quad_per_cm
 6375 0b75 1E       		.uleb128 0x1e
 6376 0b76 56040000 		.4byte	.LASF163
 6377 0b7a 05       		.byte	0x5
 6378 0b7b 50       		.byte	0x50
 6379 0b7c AB000000 		.4byte	0xab
 6380 0b80 05       		.uleb128 0x5
 6381 0b81 03       		.byte	0x3
 6382 0b82 00000000 		.4byte	initial_pos_valid
 6383 0b86 1E       		.uleb128 0x1e
 6384 0b87 85090000 		.4byte	.LASF164
 6385 0b8b 05       		.byte	0x5
 6386 0b8c 51       		.byte	0x51
 6387 0b8d DB000000 		.4byte	0xdb
 6388 0b91 05       		.uleb128 0x5
 6389 0b92 03       		.byte	0x3
 6390 0b93 00000000 		.4byte	initial_x_pos
 6391 0b97 1E       		.uleb128 0x1e
 6392 0b98 3E060000 		.4byte	.LASF165
 6393 0b9c 05       		.byte	0x5
 6394 0b9d 52       		.byte	0x52
 6395 0b9e DB000000 		.4byte	0xdb
 6396 0ba2 05       		.uleb128 0x5
 6397 0ba3 03       		.byte	0x3
 6398 0ba4 00000000 		.4byte	initial_y_pos
 6399 0ba8 1E       		.uleb128 0x1e
 6400 0ba9 34080000 		.4byte	.LASF166
 6401 0bad 05       		.byte	0x5
 6402 0bae 55       		.byte	0x55
 6403 0baf AB000000 		.4byte	0xab
 6404 0bb3 05       		.uleb128 0x5
 6405 0bb4 03       		.byte	0x3
 6406 0bb5 00000000 		.4byte	brakeFlag
 6407 0bb9 1E       		.uleb128 0x1e
 6408 0bba 96020000 		.4byte	.LASF167
 6409 0bbe 05       		.byte	0x5
 6410 0bbf 56       		.byte	0x56
 6411 0bc0 AB000000 		.4byte	0xab
 6412 0bc4 05       		.uleb128 0x5
 6413 0bc5 03       		.byte	0x3
 6414 0bc6 00000000 		.4byte	portOpen
 6415 0bca 1E       		.uleb128 0x1e
 6416 0bcb 63000000 		.4byte	.LASF168
 6417 0bcf 05       		.byte	0x5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 134


 6418 0bd0 59       		.byte	0x59
 6419 0bd1 DB000000 		.4byte	0xdb
 6420 0bd5 05       		.uleb128 0x5
 6421 0bd6 03       		.byte	0x3
 6422 0bd7 00000000 		.4byte	prevVoltage
 6423 0bdb 1E       		.uleb128 0x1e
 6424 0bdc D9000000 		.4byte	.LASF169
 6425 0be0 05       		.byte	0x5
 6426 0be1 5A       		.byte	0x5a
 6427 0be2 DB000000 		.4byte	0xdb
 6428 0be6 05       		.uleb128 0x5
 6429 0be7 03       		.byte	0x3
 6430 0be8 00000000 		.4byte	prevVoltage2
 6431 0bec 07       		.uleb128 0x7
 6432 0bed 8E000000 		.4byte	0x8e
 6433 0bf1 FC0B0000 		.4byte	0xbfc
 6434 0bf5 08       		.uleb128 0x8
 6435 0bf6 81000000 		.4byte	0x81
 6436 0bfa 3F       		.byte	0x3f
 6437 0bfb 00       		.byte	0
 6438 0bfc 1E       		.uleb128 0x1e
 6439 0bfd 6F080000 		.4byte	.LASF170
 6440 0c01 05       		.byte	0x5
 6441 0c02 60       		.byte	0x60
 6442 0c03 EC0B0000 		.4byte	0xbec
 6443 0c07 05       		.uleb128 0x5
 6444 0c08 03       		.byte	0x3
 6445 0c09 00000000 		.4byte	displaystring
 6446 0c0d 1E       		.uleb128 0x1e
 6447 0c0e 0C080000 		.4byte	.LASF171
 6448 0c12 05       		.byte	0x5
 6449 0c13 61       		.byte	0x61
 6450 0c14 EC0B0000 		.4byte	0xbec
 6451 0c18 05       		.uleb128 0x5
 6452 0c19 03       		.byte	0x3
 6453 0c1a 00000000 		.4byte	line
 6454 0c1e 1E       		.uleb128 0x1e
 6455 0c1f ED070000 		.4byte	.LASF172
 6456 0c23 05       		.byte	0x5
 6457 0c24 61       		.byte	0x61
 6458 0c25 EC0B0000 		.4byte	0xbec
 6459 0c29 05       		.uleb128 0x5
 6460 0c2a 03       		.byte	0x3
 6461 0c2b 00000000 		.4byte	entry
 6462 0c2f 07       		.uleb128 0x7
 6463 0c30 AB000000 		.4byte	0xab
 6464 0c34 3F0C0000 		.4byte	0xc3f
 6465 0c38 08       		.uleb128 0x8
 6466 0c39 81000000 		.4byte	0x81
 6467 0c3d 3F       		.byte	0x3f
 6468 0c3e 00       		.byte	0
 6469 0c3f 1E       		.uleb128 0x1e
 6470 0c40 EE010000 		.4byte	.LASF173
 6471 0c44 05       		.byte	0x5
 6472 0c45 62       		.byte	0x62
 6473 0c46 2F0C0000 		.4byte	0xc2f
 6474 0c4a 05       		.uleb128 0x5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 135


 6475 0c4b 03       		.byte	0x3
 6476 0c4c 00000000 		.4byte	usbBuffer
 6477 0c50 1E       		.uleb128 0x1e
 6478 0c51 76040000 		.4byte	.LASF174
 6479 0c55 05       		.byte	0x5
 6480 0c56 77       		.byte	0x77
 6481 0c57 86010000 		.4byte	0x186
 6482 0c5b 05       		.uleb128 0x5
 6483 0c5c 03       		.byte	0x3
 6484 0c5d 00000000 		.4byte	buffer_state
 6485 0c61 1E       		.uleb128 0x1e
 6486 0c62 A8000000 		.4byte	.LASF175
 6487 0c66 05       		.byte	0x5
 6488 0c67 78       		.byte	0x78
 6489 0c68 86010000 		.4byte	0x186
 6490 0c6c 05       		.uleb128 0x5
 6491 0c6d 03       		.byte	0x3
 6492 0c6e 00000000 		.4byte	system_state
 6493 0c72 1E       		.uleb128 0x1e
 6494 0c73 3E030000 		.4byte	.LASF176
 6495 0c77 05       		.byte	0x5
 6496 0c78 7A       		.byte	0x7a
 6497 0c79 0C010000 		.4byte	0x10c
 6498 0c7d 05       		.uleb128 0x5
 6499 0c7e 03       		.byte	0x3
 6500 0c7f 00000000 		.4byte	prev_movement_state
 6501 0c83 1E       		.uleb128 0x1e
 6502 0c84 99010000 		.4byte	.LASF177
 6503 0c88 05       		.byte	0x5
 6504 0c89 7B       		.byte	0x7b
 6505 0c8a 0C010000 		.4byte	0x10c
 6506 0c8e 05       		.uleb128 0x5
 6507 0c8f 03       		.byte	0x3
 6508 0c90 00000000 		.4byte	movement_state
 6509 0c94 1E       		.uleb128 0x1e
 6510 0c95 8D000000 		.4byte	.LASF178
 6511 0c99 05       		.byte	0x5
 6512 0c9a 7C       		.byte	0x7c
 6513 0c9b 49010000 		.4byte	0x149
 6514 0c9f 05       		.uleb128 0x5
 6515 0ca0 03       		.byte	0x3
 6516 0ca1 00000000 		.4byte	track_mode
 6517 0ca5 1E       		.uleb128 0x1e
 6518 0ca6 1E030000 		.4byte	.LASF179
 6519 0caa 05       		.byte	0x5
 6520 0cab 7E       		.byte	0x7e
 6521 0cac AB000000 		.4byte	0xab
 6522 0cb0 05       		.uleb128 0x5
 6523 0cb1 03       		.byte	0x3
 6524 0cb2 00000000 		.4byte	byteCount
 6525 0cb6 07       		.uleb128 0x7
 6526 0cb7 8E000000 		.4byte	0x8e
 6527 0cbb C60C0000 		.4byte	0xcc6
 6528 0cbf 08       		.uleb128 0x8
 6529 0cc0 81000000 		.4byte	0x81
 6530 0cc4 01       		.byte	0x1
 6531 0cc5 00       		.byte	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 136


 6532 0cc6 1E       		.uleb128 0x1e
 6533 0cc7 B2070000 		.4byte	.LASF180
 6534 0ccb 05       		.byte	0x5
 6535 0ccc 7F       		.byte	0x7f
 6536 0ccd B60C0000 		.4byte	0xcb6
 6537 0cd1 05       		.uleb128 0x5
 6538 0cd2 03       		.byte	0x3
 6539 0cd3 00000000 		.4byte	packet
 6540 0cd7 1E       		.uleb128 0x1e
 6541 0cd8 5C010000 		.4byte	.LASF181
 6542 0cdc 05       		.byte	0x5
 6543 0cdd 83       		.byte	0x83
 6544 0cde EE000000 		.4byte	0xee
 6545 0ce2 05       		.uleb128 0x5
 6546 0ce3 03       		.byte	0x3
 6547 0ce4 00000000 		.4byte	speed
 6548 0ce8 1E       		.uleb128 0x1e
 6549 0ce9 D9030000 		.4byte	.LASF182
 6550 0ced 01       		.byte	0x1
 6551 0cee 1F       		.byte	0x1f
 6552 0cef B7000000 		.4byte	0xb7
 6553 0cf3 05       		.uleb128 0x5
 6554 0cf4 03       		.byte	0x3
 6555 0cf5 00000000 		.4byte	instructionCount
 6556 0cf9 1E       		.uleb128 0x1e
 6557 0cfa E6000000 		.4byte	.LASF183
 6558 0cfe 01       		.byte	0x1
 6559 0cff 21       		.byte	0x21
 6560 0d00 A0000000 		.4byte	0xa0
 6561 0d04 05       		.uleb128 0x5
 6562 0d05 03       		.byte	0x3
 6563 0d06 00000000 		.4byte	sensorsDisabled
 6564 0d0a 07       		.uleb128 0x7
 6565 0d0b A0000000 		.4byte	0xa0
 6566 0d0f 200D0000 		.4byte	0xd20
 6567 0d13 08       		.uleb128 0x8
 6568 0d14 81000000 		.4byte	0x81
 6569 0d18 0E       		.byte	0xe
 6570 0d19 08       		.uleb128 0x8
 6571 0d1a 81000000 		.4byte	0x81
 6572 0d1e 12       		.byte	0x12
 6573 0d1f 00       		.byte	0
 6574 0d20 1D       		.uleb128 0x1d
 6575 0d21 6D617000 		.ascii	"map\000"
 6576 0d25 01       		.byte	0x1
 6577 0d26 29       		.byte	0x29
 6578 0d27 0A0D0000 		.4byte	0xd0a
 6579 0d2b 05       		.uleb128 0x5
 6580 0d2c 03       		.byte	0x3
 6581 0d2d 00000000 		.4byte	map
 6582 0d31 07       		.uleb128 0x7
 6583 0d32 A0000000 		.4byte	0xa0
 6584 0d36 470D0000 		.4byte	0xd47
 6585 0d3a 08       		.uleb128 0x8
 6586 0d3b 81000000 		.4byte	0x81
 6587 0d3f 05       		.byte	0x5
 6588 0d40 08       		.uleb128 0x8
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 137


 6589 0d41 81000000 		.4byte	0x81
 6590 0d45 01       		.byte	0x1
 6591 0d46 00       		.byte	0
 6592 0d47 1E       		.uleb128 0x1e
 6593 0d48 45050000 		.4byte	.LASF184
 6594 0d4c 01       		.byte	0x1
 6595 0d4d 3E       		.byte	0x3e
 6596 0d4e 310D0000 		.4byte	0xd31
 6597 0d52 05       		.uleb128 0x5
 6598 0d53 03       		.byte	0x3
 6599 0d54 00000000 		.4byte	food_list
 6600 0d58 07       		.uleb128 0x7
 6601 0d59 A0000000 		.4byte	0xa0
 6602 0d5d 6F0D0000 		.4byte	0xd6f
 6603 0d61 1F       		.uleb128 0x1f
 6604 0d62 81000000 		.4byte	0x81
 6605 0d66 1F03     		.2byte	0x31f
 6606 0d68 08       		.uleb128 0x8
 6607 0d69 81000000 		.4byte	0x81
 6608 0d6d 02       		.byte	0x2
 6609 0d6e 00       		.byte	0
 6610 0d6f 1E       		.uleb128 0x1e
 6611 0d70 1E040000 		.4byte	.LASF185
 6612 0d74 01       		.byte	0x1
 6613 0d75 25       		.byte	0x25
 6614 0d76 580D0000 		.4byte	0xd58
 6615 0d7a 05       		.uleb128 0x5
 6616 0d7b 03       		.byte	0x3
 6617 0d7c 00000000 		.4byte	path
 6618 0d80 1E       		.uleb128 0x1e
 6619 0d81 A7050000 		.4byte	.LASF186
 6620 0d85 01       		.byte	0x1
 6621 0d86 26       		.byte	0x26
 6622 0d87 F5000000 		.4byte	0xf5
 6623 0d8b 05       		.uleb128 0x5
 6624 0d8c 03       		.byte	0x3
 6625 0d8d 00000000 		.4byte	start
 6626 0d91 1E       		.uleb128 0x1e
 6627 0d92 9F080000 		.4byte	.LASF187
 6628 0d96 01       		.byte	0x1
 6629 0d97 27       		.byte	0x27
 6630 0d98 F5000000 		.4byte	0xf5
 6631 0d9c 05       		.uleb128 0x5
 6632 0d9d 03       		.byte	0x3
 6633 0d9e 00000000 		.4byte	destination
 6634 0da2 1E       		.uleb128 0x1e
 6635 0da3 33010000 		.4byte	.LASF188
 6636 0da7 01       		.byte	0x1
 6637 0da8 23       		.byte	0x23
 6638 0da9 A0000000 		.4byte	0xa0
 6639 0dad 05       		.uleb128 0x5
 6640 0dae 03       		.byte	0x3
 6641 0daf 00000000 		.4byte	robot_direction
 6642 0db3 1E       		.uleb128 0x1e
 6643 0db4 0A000000 		.4byte	.LASF189
 6644 0db8 07       		.byte	0x7
 6645 0db9 22       		.byte	0x22
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 138


 6646 0dba A0000000 		.4byte	0xa0
 6647 0dbe 05       		.uleb128 0x5
 6648 0dbf 03       		.byte	0x3
 6649 0dc0 00000000 		.4byte	tracked_direction
 6650 0dc4 1E       		.uleb128 0x1e
 6651 0dc5 E1070000 		.4byte	.LASF190
 6652 0dc9 01       		.byte	0x1
 6653 0dca 40       		.byte	0x40
 6654 0dcb A0000000 		.4byte	0xa0
 6655 0dcf 05       		.uleb128 0x5
 6656 0dd0 03       		.byte	0x3
 6657 0dd1 00000000 		.4byte	food_length
 6658 0dd5 07       		.uleb128 0x7
 6659 0dd6 8E000000 		.4byte	0x8e
 6660 0dda E60D0000 		.4byte	0xde6
 6661 0dde 1F       		.uleb128 0x1f
 6662 0ddf 81000000 		.4byte	0x81
 6663 0de3 1F03     		.2byte	0x31f
 6664 0de5 00       		.byte	0
 6665 0de6 1E       		.uleb128 0x1e
 6666 0de7 76050000 		.4byte	.LASF191
 6667 0deb 01       		.byte	0x1
 6668 0dec 1E       		.byte	0x1e
 6669 0ded D50D0000 		.4byte	0xdd5
 6670 0df1 05       		.uleb128 0x5
 6671 0df2 03       		.byte	0x3
 6672 0df3 00000000 		.4byte	instructions
 6673 0df7 1E       		.uleb128 0x1e
 6674 0df8 B9070000 		.4byte	.LASF192
 6675 0dfc 01       		.byte	0x1
 6676 0dfd 20       		.byte	0x20
 6677 0dfe B7000000 		.4byte	0xb7
 6678 0e02 05       		.uleb128 0x5
 6679 0e03 03       		.byte	0x3
 6680 0e04 00000000 		.4byte	instructionLength
 6681 0e08 20       		.uleb128 0x20
 6682 0e09 4E010000 		.4byte	.LASF193
 6683 0e0d 01       		.byte	0x1
 6684 0e0e B603     		.2byte	0x3b6
 6685 0e10 B7000000 		.4byte	0xb7
 6686 0e14 05       		.uleb128 0x5
 6687 0e15 03       		.byte	0x3
 6688 0e16 00000000 		.4byte	leftTurnCount
 6689 0e1a 20       		.uleb128 0x20
 6690 0e1b 22000000 		.4byte	.LASF194
 6691 0e1f 01       		.byte	0x1
 6692 0e20 B703     		.2byte	0x3b7
 6693 0e22 B7000000 		.4byte	0xb7
 6694 0e26 05       		.uleb128 0x5
 6695 0e27 03       		.byte	0x3
 6696 0e28 00000000 		.4byte	rightTurnCount
 6697 0e2c 00       		.byte	0
 6698              		.section	.debug_abbrev,"",%progbits
 6699              	.Ldebug_abbrev0:
 6700 0000 01       		.uleb128 0x1
 6701 0001 11       		.uleb128 0x11
 6702 0002 01       		.byte	0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 139


 6703 0003 25       		.uleb128 0x25
 6704 0004 0E       		.uleb128 0xe
 6705 0005 13       		.uleb128 0x13
 6706 0006 0B       		.uleb128 0xb
 6707 0007 03       		.uleb128 0x3
 6708 0008 0E       		.uleb128 0xe
 6709 0009 1B       		.uleb128 0x1b
 6710 000a 0E       		.uleb128 0xe
 6711 000b 55       		.uleb128 0x55
 6712 000c 17       		.uleb128 0x17
 6713 000d 11       		.uleb128 0x11
 6714 000e 01       		.uleb128 0x1
 6715 000f 10       		.uleb128 0x10
 6716 0010 17       		.uleb128 0x17
 6717 0011 00       		.byte	0
 6718 0012 00       		.byte	0
 6719 0013 02       		.uleb128 0x2
 6720 0014 24       		.uleb128 0x24
 6721 0015 00       		.byte	0
 6722 0016 0B       		.uleb128 0xb
 6723 0017 0B       		.uleb128 0xb
 6724 0018 3E       		.uleb128 0x3e
 6725 0019 0B       		.uleb128 0xb
 6726 001a 03       		.uleb128 0x3
 6727 001b 0E       		.uleb128 0xe
 6728 001c 00       		.byte	0
 6729 001d 00       		.byte	0
 6730 001e 03       		.uleb128 0x3
 6731 001f 16       		.uleb128 0x16
 6732 0020 00       		.byte	0
 6733 0021 03       		.uleb128 0x3
 6734 0022 0E       		.uleb128 0xe
 6735 0023 3A       		.uleb128 0x3a
 6736 0024 0B       		.uleb128 0xb
 6737 0025 3B       		.uleb128 0x3b
 6738 0026 0B       		.uleb128 0xb
 6739 0027 49       		.uleb128 0x49
 6740 0028 13       		.uleb128 0x13
 6741 0029 00       		.byte	0
 6742 002a 00       		.byte	0
 6743 002b 04       		.uleb128 0x4
 6744 002c 24       		.uleb128 0x24
 6745 002d 00       		.byte	0
 6746 002e 0B       		.uleb128 0xb
 6747 002f 0B       		.uleb128 0xb
 6748 0030 3E       		.uleb128 0x3e
 6749 0031 0B       		.uleb128 0xb
 6750 0032 03       		.uleb128 0x3
 6751 0033 08       		.uleb128 0x8
 6752 0034 00       		.byte	0
 6753 0035 00       		.byte	0
 6754 0036 05       		.uleb128 0x5
 6755 0037 0F       		.uleb128 0xf
 6756 0038 00       		.byte	0
 6757 0039 0B       		.uleb128 0xb
 6758 003a 0B       		.uleb128 0xb
 6759 003b 49       		.uleb128 0x49
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 140


 6760 003c 13       		.uleb128 0x13
 6761 003d 00       		.byte	0
 6762 003e 00       		.byte	0
 6763 003f 06       		.uleb128 0x6
 6764 0040 16       		.uleb128 0x16
 6765 0041 00       		.byte	0
 6766 0042 03       		.uleb128 0x3
 6767 0043 0E       		.uleb128 0xe
 6768 0044 3A       		.uleb128 0x3a
 6769 0045 0B       		.uleb128 0xb
 6770 0046 3B       		.uleb128 0x3b
 6771 0047 05       		.uleb128 0x5
 6772 0048 49       		.uleb128 0x49
 6773 0049 13       		.uleb128 0x13
 6774 004a 00       		.byte	0
 6775 004b 00       		.byte	0
 6776 004c 07       		.uleb128 0x7
 6777 004d 01       		.uleb128 0x1
 6778 004e 01       		.byte	0x1
 6779 004f 49       		.uleb128 0x49
 6780 0050 13       		.uleb128 0x13
 6781 0051 01       		.uleb128 0x1
 6782 0052 13       		.uleb128 0x13
 6783 0053 00       		.byte	0
 6784 0054 00       		.byte	0
 6785 0055 08       		.uleb128 0x8
 6786 0056 21       		.uleb128 0x21
 6787 0057 00       		.byte	0
 6788 0058 49       		.uleb128 0x49
 6789 0059 13       		.uleb128 0x13
 6790 005a 2F       		.uleb128 0x2f
 6791 005b 0B       		.uleb128 0xb
 6792 005c 00       		.byte	0
 6793 005d 00       		.byte	0
 6794 005e 09       		.uleb128 0x9
 6795 005f 04       		.uleb128 0x4
 6796 0060 01       		.byte	0x1
 6797 0061 03       		.uleb128 0x3
 6798 0062 0E       		.uleb128 0xe
 6799 0063 0B       		.uleb128 0xb
 6800 0064 0B       		.uleb128 0xb
 6801 0065 3A       		.uleb128 0x3a
 6802 0066 0B       		.uleb128 0xb
 6803 0067 3B       		.uleb128 0x3b
 6804 0068 0B       		.uleb128 0xb
 6805 0069 01       		.uleb128 0x1
 6806 006a 13       		.uleb128 0x13
 6807 006b 00       		.byte	0
 6808 006c 00       		.byte	0
 6809 006d 0A       		.uleb128 0xa
 6810 006e 28       		.uleb128 0x28
 6811 006f 00       		.byte	0
 6812 0070 03       		.uleb128 0x3
 6813 0071 0E       		.uleb128 0xe
 6814 0072 1C       		.uleb128 0x1c
 6815 0073 0D       		.uleb128 0xd
 6816 0074 00       		.byte	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 141


 6817 0075 00       		.byte	0
 6818 0076 0B       		.uleb128 0xb
 6819 0077 13       		.uleb128 0x13
 6820 0078 01       		.byte	0x1
 6821 0079 03       		.uleb128 0x3
 6822 007a 0E       		.uleb128 0xe
 6823 007b 0B       		.uleb128 0xb
 6824 007c 0B       		.uleb128 0xb
 6825 007d 3A       		.uleb128 0x3a
 6826 007e 0B       		.uleb128 0xb
 6827 007f 3B       		.uleb128 0x3b
 6828 0080 0B       		.uleb128 0xb
 6829 0081 01       		.uleb128 0x1
 6830 0082 13       		.uleb128 0x13
 6831 0083 00       		.byte	0
 6832 0084 00       		.byte	0
 6833 0085 0C       		.uleb128 0xc
 6834 0086 0D       		.uleb128 0xd
 6835 0087 00       		.byte	0
 6836 0088 03       		.uleb128 0x3
 6837 0089 0E       		.uleb128 0xe
 6838 008a 3A       		.uleb128 0x3a
 6839 008b 0B       		.uleb128 0xb
 6840 008c 3B       		.uleb128 0x3b
 6841 008d 0B       		.uleb128 0xb
 6842 008e 49       		.uleb128 0x49
 6843 008f 13       		.uleb128 0x13
 6844 0090 38       		.uleb128 0x38
 6845 0091 0B       		.uleb128 0xb
 6846 0092 00       		.byte	0
 6847 0093 00       		.byte	0
 6848 0094 0D       		.uleb128 0xd
 6849 0095 2E       		.uleb128 0x2e
 6850 0096 00       		.byte	0
 6851 0097 3F       		.uleb128 0x3f
 6852 0098 19       		.uleb128 0x19
 6853 0099 03       		.uleb128 0x3
 6854 009a 0E       		.uleb128 0xe
 6855 009b 3A       		.uleb128 0x3a
 6856 009c 0B       		.uleb128 0xb
 6857 009d 3B       		.uleb128 0x3b
 6858 009e 0B       		.uleb128 0xb
 6859 009f 27       		.uleb128 0x27
 6860 00a0 19       		.uleb128 0x19
 6861 00a1 11       		.uleb128 0x11
 6862 00a2 01       		.uleb128 0x1
 6863 00a3 12       		.uleb128 0x12
 6864 00a4 06       		.uleb128 0x6
 6865 00a5 40       		.uleb128 0x40
 6866 00a6 18       		.uleb128 0x18
 6867 00a7 9742     		.uleb128 0x2117
 6868 00a9 19       		.uleb128 0x19
 6869 00aa 00       		.byte	0
 6870 00ab 00       		.byte	0
 6871 00ac 0E       		.uleb128 0xe
 6872 00ad 2E       		.uleb128 0x2e
 6873 00ae 00       		.byte	0
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 142


 6874 00af 3F       		.uleb128 0x3f
 6875 00b0 19       		.uleb128 0x19
 6876 00b1 03       		.uleb128 0x3
 6877 00b2 0E       		.uleb128 0xe
 6878 00b3 3A       		.uleb128 0x3a
 6879 00b4 0B       		.uleb128 0xb
 6880 00b5 3B       		.uleb128 0x3b
 6881 00b6 0B       		.uleb128 0xb
 6882 00b7 27       		.uleb128 0x27
 6883 00b8 19       		.uleb128 0x19
 6884 00b9 11       		.uleb128 0x11
 6885 00ba 01       		.uleb128 0x1
 6886 00bb 12       		.uleb128 0x12
 6887 00bc 06       		.uleb128 0x6
 6888 00bd 40       		.uleb128 0x40
 6889 00be 18       		.uleb128 0x18
 6890 00bf 9642     		.uleb128 0x2116
 6891 00c1 19       		.uleb128 0x19
 6892 00c2 00       		.byte	0
 6893 00c3 00       		.byte	0
 6894 00c4 0F       		.uleb128 0xf
 6895 00c5 2E       		.uleb128 0x2e
 6896 00c6 01       		.byte	0x1
 6897 00c7 3F       		.uleb128 0x3f
 6898 00c8 19       		.uleb128 0x19
 6899 00c9 03       		.uleb128 0x3
 6900 00ca 0E       		.uleb128 0xe
 6901 00cb 3A       		.uleb128 0x3a
 6902 00cc 0B       		.uleb128 0xb
 6903 00cd 3B       		.uleb128 0x3b
 6904 00ce 0B       		.uleb128 0xb
 6905 00cf 49       		.uleb128 0x49
 6906 00d0 13       		.uleb128 0x13
 6907 00d1 11       		.uleb128 0x11
 6908 00d2 01       		.uleb128 0x1
 6909 00d3 12       		.uleb128 0x12
 6910 00d4 06       		.uleb128 0x6
 6911 00d5 40       		.uleb128 0x40
 6912 00d6 18       		.uleb128 0x18
 6913 00d7 9642     		.uleb128 0x2116
 6914 00d9 19       		.uleb128 0x19
 6915 00da 01       		.uleb128 0x1
 6916 00db 13       		.uleb128 0x13
 6917 00dc 00       		.byte	0
 6918 00dd 00       		.byte	0
 6919 00de 10       		.uleb128 0x10
 6920 00df 34       		.uleb128 0x34
 6921 00e0 00       		.byte	0
 6922 00e1 03       		.uleb128 0x3
 6923 00e2 0E       		.uleb128 0xe
 6924 00e3 3A       		.uleb128 0x3a
 6925 00e4 0B       		.uleb128 0xb
 6926 00e5 3B       		.uleb128 0x3b
 6927 00e6 05       		.uleb128 0x5
 6928 00e7 49       		.uleb128 0x49
 6929 00e8 13       		.uleb128 0x13
 6930 00e9 02       		.uleb128 0x2
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 143


 6931 00ea 18       		.uleb128 0x18
 6932 00eb 00       		.byte	0
 6933 00ec 00       		.byte	0
 6934 00ed 11       		.uleb128 0x11
 6935 00ee 0B       		.uleb128 0xb
 6936 00ef 01       		.byte	0x1
 6937 00f0 11       		.uleb128 0x11
 6938 00f1 01       		.uleb128 0x1
 6939 00f2 12       		.uleb128 0x12
 6940 00f3 06       		.uleb128 0x6
 6941 00f4 00       		.byte	0
 6942 00f5 00       		.byte	0
 6943 00f6 12       		.uleb128 0x12
 6944 00f7 0B       		.uleb128 0xb
 6945 00f8 01       		.byte	0x1
 6946 00f9 11       		.uleb128 0x11
 6947 00fa 01       		.uleb128 0x1
 6948 00fb 12       		.uleb128 0x12
 6949 00fc 06       		.uleb128 0x6
 6950 00fd 01       		.uleb128 0x1
 6951 00fe 13       		.uleb128 0x13
 6952 00ff 00       		.byte	0
 6953 0100 00       		.byte	0
 6954 0101 13       		.uleb128 0x13
 6955 0102 34       		.uleb128 0x34
 6956 0103 00       		.byte	0
 6957 0104 03       		.uleb128 0x3
 6958 0105 08       		.uleb128 0x8
 6959 0106 3A       		.uleb128 0x3a
 6960 0107 0B       		.uleb128 0xb
 6961 0108 3B       		.uleb128 0x3b
 6962 0109 05       		.uleb128 0x5
 6963 010a 49       		.uleb128 0x49
 6964 010b 13       		.uleb128 0x13
 6965 010c 02       		.uleb128 0x2
 6966 010d 18       		.uleb128 0x18
 6967 010e 00       		.byte	0
 6968 010f 00       		.byte	0
 6969 0110 14       		.uleb128 0x14
 6970 0111 2E       		.uleb128 0x2e
 6971 0112 01       		.byte	0x1
 6972 0113 3F       		.uleb128 0x3f
 6973 0114 19       		.uleb128 0x19
 6974 0115 03       		.uleb128 0x3
 6975 0116 0E       		.uleb128 0xe
 6976 0117 3A       		.uleb128 0x3a
 6977 0118 0B       		.uleb128 0xb
 6978 0119 3B       		.uleb128 0x3b
 6979 011a 05       		.uleb128 0x5
 6980 011b 11       		.uleb128 0x11
 6981 011c 01       		.uleb128 0x1
 6982 011d 12       		.uleb128 0x12
 6983 011e 06       		.uleb128 0x6
 6984 011f 40       		.uleb128 0x40
 6985 0120 18       		.uleb128 0x18
 6986 0121 9742     		.uleb128 0x2117
 6987 0123 19       		.uleb128 0x19
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 144


 6988 0124 01       		.uleb128 0x1
 6989 0125 13       		.uleb128 0x13
 6990 0126 00       		.byte	0
 6991 0127 00       		.byte	0
 6992 0128 15       		.uleb128 0x15
 6993 0129 2E       		.uleb128 0x2e
 6994 012a 01       		.byte	0x1
 6995 012b 3F       		.uleb128 0x3f
 6996 012c 19       		.uleb128 0x19
 6997 012d 03       		.uleb128 0x3
 6998 012e 0E       		.uleb128 0xe
 6999 012f 3A       		.uleb128 0x3a
 7000 0130 0B       		.uleb128 0xb
 7001 0131 3B       		.uleb128 0x3b
 7002 0132 05       		.uleb128 0x5
 7003 0133 27       		.uleb128 0x27
 7004 0134 19       		.uleb128 0x19
 7005 0135 11       		.uleb128 0x11
 7006 0136 01       		.uleb128 0x1
 7007 0137 12       		.uleb128 0x12
 7008 0138 06       		.uleb128 0x6
 7009 0139 40       		.uleb128 0x40
 7010 013a 18       		.uleb128 0x18
 7011 013b 9642     		.uleb128 0x2116
 7012 013d 19       		.uleb128 0x19
 7013 013e 01       		.uleb128 0x1
 7014 013f 13       		.uleb128 0x13
 7015 0140 00       		.byte	0
 7016 0141 00       		.byte	0
 7017 0142 16       		.uleb128 0x16
 7018 0143 05       		.uleb128 0x5
 7019 0144 00       		.byte	0
 7020 0145 03       		.uleb128 0x3
 7021 0146 08       		.uleb128 0x8
 7022 0147 3A       		.uleb128 0x3a
 7023 0148 0B       		.uleb128 0xb
 7024 0149 3B       		.uleb128 0x3b
 7025 014a 05       		.uleb128 0x5
 7026 014b 49       		.uleb128 0x49
 7027 014c 13       		.uleb128 0x13
 7028 014d 02       		.uleb128 0x2
 7029 014e 18       		.uleb128 0x18
 7030 014f 00       		.byte	0
 7031 0150 00       		.byte	0
 7032 0151 17       		.uleb128 0x17
 7033 0152 2E       		.uleb128 0x2e
 7034 0153 01       		.byte	0x1
 7035 0154 3F       		.uleb128 0x3f
 7036 0155 19       		.uleb128 0x19
 7037 0156 03       		.uleb128 0x3
 7038 0157 0E       		.uleb128 0xe
 7039 0158 3A       		.uleb128 0x3a
 7040 0159 0B       		.uleb128 0xb
 7041 015a 3B       		.uleb128 0x3b
 7042 015b 05       		.uleb128 0x5
 7043 015c 11       		.uleb128 0x11
 7044 015d 01       		.uleb128 0x1
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 145


 7045 015e 12       		.uleb128 0x12
 7046 015f 06       		.uleb128 0x6
 7047 0160 40       		.uleb128 0x40
 7048 0161 18       		.uleb128 0x18
 7049 0162 9642     		.uleb128 0x2116
 7050 0164 19       		.uleb128 0x19
 7051 0165 01       		.uleb128 0x1
 7052 0166 13       		.uleb128 0x13
 7053 0167 00       		.byte	0
 7054 0168 00       		.byte	0
 7055 0169 18       		.uleb128 0x18
 7056 016a 05       		.uleb128 0x5
 7057 016b 00       		.byte	0
 7058 016c 03       		.uleb128 0x3
 7059 016d 0E       		.uleb128 0xe
 7060 016e 3A       		.uleb128 0x3a
 7061 016f 0B       		.uleb128 0xb
 7062 0170 3B       		.uleb128 0x3b
 7063 0171 05       		.uleb128 0x5
 7064 0172 49       		.uleb128 0x49
 7065 0173 13       		.uleb128 0x13
 7066 0174 02       		.uleb128 0x2
 7067 0175 18       		.uleb128 0x18
 7068 0176 00       		.byte	0
 7069 0177 00       		.byte	0
 7070 0178 19       		.uleb128 0x19
 7071 0179 2E       		.uleb128 0x2e
 7072 017a 00       		.byte	0
 7073 017b 3F       		.uleb128 0x3f
 7074 017c 19       		.uleb128 0x19
 7075 017d 03       		.uleb128 0x3
 7076 017e 0E       		.uleb128 0xe
 7077 017f 3A       		.uleb128 0x3a
 7078 0180 0B       		.uleb128 0xb
 7079 0181 3B       		.uleb128 0x3b
 7080 0182 05       		.uleb128 0x5
 7081 0183 11       		.uleb128 0x11
 7082 0184 01       		.uleb128 0x1
 7083 0185 12       		.uleb128 0x12
 7084 0186 06       		.uleb128 0x6
 7085 0187 40       		.uleb128 0x40
 7086 0188 18       		.uleb128 0x18
 7087 0189 9642     		.uleb128 0x2116
 7088 018b 19       		.uleb128 0x19
 7089 018c 00       		.byte	0
 7090 018d 00       		.byte	0
 7091 018e 1A       		.uleb128 0x1a
 7092 018f 2E       		.uleb128 0x2e
 7093 0190 00       		.byte	0
 7094 0191 3F       		.uleb128 0x3f
 7095 0192 19       		.uleb128 0x19
 7096 0193 03       		.uleb128 0x3
 7097 0194 0E       		.uleb128 0xe
 7098 0195 3A       		.uleb128 0x3a
 7099 0196 0B       		.uleb128 0xb
 7100 0197 3B       		.uleb128 0x3b
 7101 0198 05       		.uleb128 0x5
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 146


 7102 0199 11       		.uleb128 0x11
 7103 019a 01       		.uleb128 0x1
 7104 019b 12       		.uleb128 0x12
 7105 019c 06       		.uleb128 0x6
 7106 019d 40       		.uleb128 0x40
 7107 019e 18       		.uleb128 0x18
 7108 019f 9742     		.uleb128 0x2117
 7109 01a1 19       		.uleb128 0x19
 7110 01a2 00       		.byte	0
 7111 01a3 00       		.byte	0
 7112 01a4 1B       		.uleb128 0x1b
 7113 01a5 34       		.uleb128 0x34
 7114 01a6 00       		.byte	0
 7115 01a7 03       		.uleb128 0x3
 7116 01a8 0E       		.uleb128 0xe
 7117 01a9 3A       		.uleb128 0x3a
 7118 01aa 0B       		.uleb128 0xb
 7119 01ab 3B       		.uleb128 0x3b
 7120 01ac 05       		.uleb128 0x5
 7121 01ad 49       		.uleb128 0x49
 7122 01ae 13       		.uleb128 0x13
 7123 01af 3F       		.uleb128 0x3f
 7124 01b0 19       		.uleb128 0x19
 7125 01b1 3C       		.uleb128 0x3c
 7126 01b2 19       		.uleb128 0x19
 7127 01b3 00       		.byte	0
 7128 01b4 00       		.byte	0
 7129 01b5 1C       		.uleb128 0x1c
 7130 01b6 35       		.uleb128 0x35
 7131 01b7 00       		.byte	0
 7132 01b8 49       		.uleb128 0x49
 7133 01b9 13       		.uleb128 0x13
 7134 01ba 00       		.byte	0
 7135 01bb 00       		.byte	0
 7136 01bc 1D       		.uleb128 0x1d
 7137 01bd 34       		.uleb128 0x34
 7138 01be 00       		.byte	0
 7139 01bf 03       		.uleb128 0x3
 7140 01c0 08       		.uleb128 0x8
 7141 01c1 3A       		.uleb128 0x3a
 7142 01c2 0B       		.uleb128 0xb
 7143 01c3 3B       		.uleb128 0x3b
 7144 01c4 0B       		.uleb128 0xb
 7145 01c5 49       		.uleb128 0x49
 7146 01c6 13       		.uleb128 0x13
 7147 01c7 3F       		.uleb128 0x3f
 7148 01c8 19       		.uleb128 0x19
 7149 01c9 02       		.uleb128 0x2
 7150 01ca 18       		.uleb128 0x18
 7151 01cb 00       		.byte	0
 7152 01cc 00       		.byte	0
 7153 01cd 1E       		.uleb128 0x1e
 7154 01ce 34       		.uleb128 0x34
 7155 01cf 00       		.byte	0
 7156 01d0 03       		.uleb128 0x3
 7157 01d1 0E       		.uleb128 0xe
 7158 01d2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 147


 7159 01d3 0B       		.uleb128 0xb
 7160 01d4 3B       		.uleb128 0x3b
 7161 01d5 0B       		.uleb128 0xb
 7162 01d6 49       		.uleb128 0x49
 7163 01d7 13       		.uleb128 0x13
 7164 01d8 3F       		.uleb128 0x3f
 7165 01d9 19       		.uleb128 0x19
 7166 01da 02       		.uleb128 0x2
 7167 01db 18       		.uleb128 0x18
 7168 01dc 00       		.byte	0
 7169 01dd 00       		.byte	0
 7170 01de 1F       		.uleb128 0x1f
 7171 01df 21       		.uleb128 0x21
 7172 01e0 00       		.byte	0
 7173 01e1 49       		.uleb128 0x49
 7174 01e2 13       		.uleb128 0x13
 7175 01e3 2F       		.uleb128 0x2f
 7176 01e4 05       		.uleb128 0x5
 7177 01e5 00       		.byte	0
 7178 01e6 00       		.byte	0
 7179 01e7 20       		.uleb128 0x20
 7180 01e8 34       		.uleb128 0x34
 7181 01e9 00       		.byte	0
 7182 01ea 03       		.uleb128 0x3
 7183 01eb 0E       		.uleb128 0xe
 7184 01ec 3A       		.uleb128 0x3a
 7185 01ed 0B       		.uleb128 0xb
 7186 01ee 3B       		.uleb128 0x3b
 7187 01ef 05       		.uleb128 0x5
 7188 01f0 49       		.uleb128 0x49
 7189 01f1 13       		.uleb128 0x13
 7190 01f2 3F       		.uleb128 0x3f
 7191 01f3 19       		.uleb128 0x19
 7192 01f4 02       		.uleb128 0x2
 7193 01f5 18       		.uleb128 0x18
 7194 01f6 00       		.byte	0
 7195 01f7 00       		.byte	0
 7196 01f8 00       		.byte	0
 7197              		.section	.debug_aranges,"",%progbits
 7198 0000 6C010000 		.4byte	0x16c
 7199 0004 0200     		.2byte	0x2
 7200 0006 00000000 		.4byte	.Ldebug_info0
 7201 000a 04       		.byte	0x4
 7202 000b 00       		.byte	0
 7203 000c 0000     		.2byte	0
 7204 000e 0000     		.2byte	0
 7205 0010 00000000 		.4byte	.LFB63
 7206 0014 0C000000 		.4byte	.LFE63-.LFB63
 7207 0018 00000000 		.4byte	.LFB64
 7208 001c 2C000000 		.4byte	.LFE64-.LFB64
 7209 0020 00000000 		.4byte	.LFB65
 7210 0024 A4010000 		.4byte	.LFE65-.LFB65
 7211 0028 00000000 		.4byte	.LFB66
 7212 002c AC000000 		.4byte	.LFE66-.LFB66
 7213 0030 00000000 		.4byte	.LFB67
 7214 0034 20000000 		.4byte	.LFE67-.LFB67
 7215 0038 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 148


 7216 003c 28000000 		.4byte	.LFE68-.LFB68
 7217 0040 00000000 		.4byte	.LFB69
 7218 0044 0A000000 		.4byte	.LFE69-.LFB69
 7219 0048 00000000 		.4byte	.LFB70
 7220 004c 28000000 		.4byte	.LFE70-.LFB70
 7221 0050 00000000 		.4byte	.LFB71
 7222 0054 4C060000 		.4byte	.LFE71-.LFB71
 7223 0058 00000000 		.4byte	.LFB72
 7224 005c 60010000 		.4byte	.LFE72-.LFB72
 7225 0060 00000000 		.4byte	.LFB73
 7226 0064 18000000 		.4byte	.LFE73-.LFB73
 7227 0068 00000000 		.4byte	.LFB74
 7228 006c 18000000 		.4byte	.LFE74-.LFB74
 7229 0070 00000000 		.4byte	.LFB75
 7230 0074 54000000 		.4byte	.LFE75-.LFB75
 7231 0078 00000000 		.4byte	.LFB76
 7232 007c F4000000 		.4byte	.LFE76-.LFB76
 7233 0080 00000000 		.4byte	.LFB77
 7234 0084 18000000 		.4byte	.LFE77-.LFB77
 7235 0088 00000000 		.4byte	.LFB78
 7236 008c 18000000 		.4byte	.LFE78-.LFB78
 7237 0090 00000000 		.4byte	.LFB79
 7238 0094 22000000 		.4byte	.LFE79-.LFB79
 7239 0098 00000000 		.4byte	.LFB80
 7240 009c 1C000000 		.4byte	.LFE80-.LFB80
 7241 00a0 00000000 		.4byte	.LFB81
 7242 00a4 28000000 		.4byte	.LFE81-.LFB81
 7243 00a8 00000000 		.4byte	.LFB82
 7244 00ac 2C000000 		.4byte	.LFE82-.LFB82
 7245 00b0 00000000 		.4byte	.LFB83
 7246 00b4 44000000 		.4byte	.LFE83-.LFB83
 7247 00b8 00000000 		.4byte	.LFB84
 7248 00bc 38000000 		.4byte	.LFE84-.LFB84
 7249 00c0 00000000 		.4byte	.LFB85
 7250 00c4 38000000 		.4byte	.LFE85-.LFB85
 7251 00c8 00000000 		.4byte	.LFB86
 7252 00cc 38000000 		.4byte	.LFE86-.LFB86
 7253 00d0 00000000 		.4byte	.LFB87
 7254 00d4 14000000 		.4byte	.LFE87-.LFB87
 7255 00d8 00000000 		.4byte	.LFB88
 7256 00dc 18000000 		.4byte	.LFE88-.LFB88
 7257 00e0 00000000 		.4byte	.LFB89
 7258 00e4 18000000 		.4byte	.LFE89-.LFB89
 7259 00e8 00000000 		.4byte	.LFB90
 7260 00ec 18000000 		.4byte	.LFE90-.LFB90
 7261 00f0 00000000 		.4byte	.LFB91
 7262 00f4 18000000 		.4byte	.LFE91-.LFB91
 7263 00f8 00000000 		.4byte	.LFB92
 7264 00fc B8000000 		.4byte	.LFE92-.LFB92
 7265 0100 00000000 		.4byte	.LFB93
 7266 0104 34030000 		.4byte	.LFE93-.LFB93
 7267 0108 00000000 		.4byte	.LFB94
 7268 010c 40000000 		.4byte	.LFE94-.LFB94
 7269 0110 00000000 		.4byte	.LFB95
 7270 0114 40000000 		.4byte	.LFE95-.LFB95
 7271 0118 00000000 		.4byte	.LFB96
 7272 011c 30020000 		.4byte	.LFE96-.LFB96
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 149


 7273 0120 00000000 		.4byte	.LFB97
 7274 0124 0C000000 		.4byte	.LFE97-.LFB97
 7275 0128 00000000 		.4byte	.LFB98
 7276 012c 4C010000 		.4byte	.LFE98-.LFB98
 7277 0130 00000000 		.4byte	.LFB99
 7278 0134 0C000000 		.4byte	.LFE99-.LFB99
 7279 0138 00000000 		.4byte	.LFB100
 7280 013c C0000000 		.4byte	.LFE100-.LFB100
 7281 0140 00000000 		.4byte	.LFB101
 7282 0144 B8000000 		.4byte	.LFE101-.LFB101
 7283 0148 00000000 		.4byte	.LFB102
 7284 014c 4A000000 		.4byte	.LFE102-.LFB102
 7285 0150 00000000 		.4byte	.LFB103
 7286 0154 68000000 		.4byte	.LFE103-.LFB103
 7287 0158 00000000 		.4byte	.LFB104
 7288 015c 50000000 		.4byte	.LFE104-.LFB104
 7289 0160 00000000 		.4byte	.LFB105
 7290 0164 0C000000 		.4byte	.LFE105-.LFB105
 7291 0168 00000000 		.4byte	0
 7292 016c 00000000 		.4byte	0
 7293              		.section	.debug_ranges,"",%progbits
 7294              	.Ldebug_ranges0:
 7295 0000 00000000 		.4byte	.LFB63
 7296 0004 0C000000 		.4byte	.LFE63
 7297 0008 00000000 		.4byte	.LFB64
 7298 000c 2C000000 		.4byte	.LFE64
 7299 0010 00000000 		.4byte	.LFB65
 7300 0014 A4010000 		.4byte	.LFE65
 7301 0018 00000000 		.4byte	.LFB66
 7302 001c AC000000 		.4byte	.LFE66
 7303 0020 00000000 		.4byte	.LFB67
 7304 0024 20000000 		.4byte	.LFE67
 7305 0028 00000000 		.4byte	.LFB68
 7306 002c 28000000 		.4byte	.LFE68
 7307 0030 00000000 		.4byte	.LFB69
 7308 0034 0A000000 		.4byte	.LFE69
 7309 0038 00000000 		.4byte	.LFB70
 7310 003c 28000000 		.4byte	.LFE70
 7311 0040 00000000 		.4byte	.LFB71
 7312 0044 4C060000 		.4byte	.LFE71
 7313 0048 00000000 		.4byte	.LFB72
 7314 004c 60010000 		.4byte	.LFE72
 7315 0050 00000000 		.4byte	.LFB73
 7316 0054 18000000 		.4byte	.LFE73
 7317 0058 00000000 		.4byte	.LFB74
 7318 005c 18000000 		.4byte	.LFE74
 7319 0060 00000000 		.4byte	.LFB75
 7320 0064 54000000 		.4byte	.LFE75
 7321 0068 00000000 		.4byte	.LFB76
 7322 006c F4000000 		.4byte	.LFE76
 7323 0070 00000000 		.4byte	.LFB77
 7324 0074 18000000 		.4byte	.LFE77
 7325 0078 00000000 		.4byte	.LFB78
 7326 007c 18000000 		.4byte	.LFE78
 7327 0080 00000000 		.4byte	.LFB79
 7328 0084 22000000 		.4byte	.LFE79
 7329 0088 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 150


 7330 008c 1C000000 		.4byte	.LFE80
 7331 0090 00000000 		.4byte	.LFB81
 7332 0094 28000000 		.4byte	.LFE81
 7333 0098 00000000 		.4byte	.LFB82
 7334 009c 2C000000 		.4byte	.LFE82
 7335 00a0 00000000 		.4byte	.LFB83
 7336 00a4 44000000 		.4byte	.LFE83
 7337 00a8 00000000 		.4byte	.LFB84
 7338 00ac 38000000 		.4byte	.LFE84
 7339 00b0 00000000 		.4byte	.LFB85
 7340 00b4 38000000 		.4byte	.LFE85
 7341 00b8 00000000 		.4byte	.LFB86
 7342 00bc 38000000 		.4byte	.LFE86
 7343 00c0 00000000 		.4byte	.LFB87
 7344 00c4 14000000 		.4byte	.LFE87
 7345 00c8 00000000 		.4byte	.LFB88
 7346 00cc 18000000 		.4byte	.LFE88
 7347 00d0 00000000 		.4byte	.LFB89
 7348 00d4 18000000 		.4byte	.LFE89
 7349 00d8 00000000 		.4byte	.LFB90
 7350 00dc 18000000 		.4byte	.LFE90
 7351 00e0 00000000 		.4byte	.LFB91
 7352 00e4 18000000 		.4byte	.LFE91
 7353 00e8 00000000 		.4byte	.LFB92
 7354 00ec B8000000 		.4byte	.LFE92
 7355 00f0 00000000 		.4byte	.LFB93
 7356 00f4 34030000 		.4byte	.LFE93
 7357 00f8 00000000 		.4byte	.LFB94
 7358 00fc 40000000 		.4byte	.LFE94
 7359 0100 00000000 		.4byte	.LFB95
 7360 0104 40000000 		.4byte	.LFE95
 7361 0108 00000000 		.4byte	.LFB96
 7362 010c 30020000 		.4byte	.LFE96
 7363 0110 00000000 		.4byte	.LFB97
 7364 0114 0C000000 		.4byte	.LFE97
 7365 0118 00000000 		.4byte	.LFB98
 7366 011c 4C010000 		.4byte	.LFE98
 7367 0120 00000000 		.4byte	.LFB99
 7368 0124 0C000000 		.4byte	.LFE99
 7369 0128 00000000 		.4byte	.LFB100
 7370 012c C0000000 		.4byte	.LFE100
 7371 0130 00000000 		.4byte	.LFB101
 7372 0134 B8000000 		.4byte	.LFE101
 7373 0138 00000000 		.4byte	.LFB102
 7374 013c 4A000000 		.4byte	.LFE102
 7375 0140 00000000 		.4byte	.LFB103
 7376 0144 68000000 		.4byte	.LFE103
 7377 0148 00000000 		.4byte	.LFB104
 7378 014c 50000000 		.4byte	.LFE104
 7379 0150 00000000 		.4byte	.LFB105
 7380 0154 0C000000 		.4byte	.LFE105
 7381 0158 00000000 		.4byte	0
 7382 015c 00000000 		.4byte	0
 7383              		.section	.debug_line,"",%progbits
 7384              	.Ldebug_line0:
 7385 0000 62070000 		.section	.debug_str,"MS",%progbits,1
 7385      02006701 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 151


 7385      00000201 
 7385      FB0E0D00 
 7385      01010101 
 7386              	.LASF141:
 7387 0000 64697265 		.ascii	"direction\000"
 7387      6374696F 
 7387      6E00
 7388              	.LASF189:
 7389 000a 74726163 		.ascii	"tracked_direction\000"
 7389      6B65645F 
 7389      64697265 
 7389      6374696F 
 7389      6E00
 7390              	.LASF25:
 7391 001c 52545552 		.ascii	"RTURN\000"
 7391      4E00
 7392              	.LASF194:
 7393 0022 72696768 		.ascii	"rightTurnCount\000"
 7393      74547572 
 7393      6E436F75 
 7393      6E7400
 7394              	.LASF39:
 7395 0031 44455354 		.ascii	"DEST_TEST\000"
 7395      5F544553 
 7395      5400
 7396              	.LASF149:
 7397 003b 71756164 		.ascii	"quad_diff1\000"
 7397      5F646966 
 7397      663100
 7398              	.LASF150:
 7399 0046 71756164 		.ascii	"quad_diff2\000"
 7399      5F646966 
 7399      663200
 7400              	.LASF103:
 7401 0051 51756164 		.ascii	"Quad_Dec_response\000"
 7401      5F446563 
 7401      5F726573 
 7401      706F6E73 
 7401      6500
 7402              	.LASF168:
 7403 0063 70726576 		.ascii	"prevVoltage\000"
 7403      566F6C74 
 7403      61676500 
 7404              	.LASF152:
 7405 006f 73746172 		.ascii	"start_turn_count\000"
 7405      745F7475 
 7405      726E5F63 
 7405      6F756E74 
 7405      00
 7406              	.LASF10:
 7407 0080 756E7369 		.ascii	"unsigned int\000"
 7407      676E6564 
 7407      20696E74 
 7407      00
 7408              	.LASF178:
 7409 008d 74726163 		.ascii	"track_mode\000"
 7409      6B5F6D6F 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 152


 7409      646500
 7410              	.LASF5:
 7411 0098 5F5F696E 		.ascii	"__int32_t\000"
 7411      7433325F 
 7411      7400
 7412              	.LASF19:
 7413 00a2 696E7431 		.ascii	"int16\000"
 7413      3600
 7414              	.LASF175:
 7415 00a8 73797374 		.ascii	"system_state\000"
 7415      656D5F73 
 7415      74617465 
 7415      00
 7416              	.LASF24:
 7417 00b5 4C545552 		.ascii	"LTURN\000"
 7417      4E00
 7418              	.LASF159:
 7419 00bb 74617267 		.ascii	"target_distance_quad\000"
 7419      65745F64 
 7419      69737461 
 7419      6E63655F 
 7419      71756164 
 7420              	.LASF27:
 7421 00d0 54524143 		.ascii	"TRACKING\000"
 7421      4B494E47 
 7421      00
 7422              	.LASF169:
 7423 00d9 70726576 		.ascii	"prevVoltage2\000"
 7423      566F6C74 
 7423      61676532 
 7423      00
 7424              	.LASF183:
 7425 00e6 73656E73 		.ascii	"sensorsDisabled\000"
 7425      6F727344 
 7425      69736162 
 7425      6C656400 
 7426              	.LASF70:
 7427 00f6 7061636B 		.ascii	"packet_bytes\000"
 7427      65745F62 
 7427      79746573 
 7427      00
 7428              	.LASF54:
 7429 0103 67325F78 		.ascii	"g2_xpos\000"
 7429      706F7300 
 7430              	.LASF32:
 7431 010b 6D6F6465 		.ascii	"mode\000"
 7431      00
 7432              	.LASF145:
 7433 0110 71756164 		.ascii	"quad_count1\000"
 7433      5F636F75 
 7433      6E743100 
 7434              	.LASF146:
 7435 011c 71756164 		.ascii	"quad_count2\000"
 7435      5F636F75 
 7435      6E743200 
 7436              	.LASF112:
 7437 0128 74726163 		.ascii	"trackLineU\000"
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 153


 7437      6B4C696E 
 7437      655500
 7438              	.LASF188:
 7439 0133 726F626F 		.ascii	"robot_direction\000"
 7439      745F6469 
 7439      72656374 
 7439      696F6E00 
 7440              	.LASF111:
 7441 0143 74726163 		.ascii	"trackLineZ\000"
 7441      6B4C696E 
 7441      655A00
 7442              	.LASF193:
 7443 014e 6C656674 		.ascii	"leftTurnCount\000"
 7443      5475726E 
 7443      436F756E 
 7443      7400
 7444              	.LASF181:
 7445 015c 73706565 		.ascii	"speed\000"
 7445      6400
 7446              	.LASF36:
 7447 0162 53515541 		.ascii	"SQUARE_TRACK\000"
 7447      52455F54 
 7447      5241434B 
 7447      00
 7448              	.LASF137:
 7449 016f 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7449      5F72665F 
 7449      7472616E 
 7449      736D6973 
 7449      73696F6E 
 7450              	.LASF138:
 7451 018b 666C6167 		.ascii	"flag_print_rf\000"
 7451      5F707269 
 7451      6E745F72 
 7451      6600
 7452              	.LASF177:
 7453 0199 6D6F7665 		.ascii	"movement_state\000"
 7453      6D656E74 
 7453      5F737461 
 7453      746500
 7454              	.LASF28:
 7455 01a8 54524143 		.ascii	"TRACKING_U\000"
 7455      4B494E47 
 7455      5F5500
 7456              	.LASF93:
 7457 01b3 696E6974 		.ascii	"initForward\000"
 7457      466F7277 
 7457      61726400 
 7458              	.LASF14:
 7459 01bf 75696E74 		.ascii	"uint32_t\000"
 7459      33325F74 
 7459      00
 7460              	.LASF57:
 7461 01c8 67325F64 		.ascii	"g2_direction\000"
 7461      69726563 
 7461      74696F6E 
 7461      00
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 154


 7462              	.LASF60:
 7463 01d5 6973725F 		.ascii	"isr_quad1\000"
 7463      71756164 
 7463      3100
 7464              	.LASF20:
 7465 01df 666C6F61 		.ascii	"float\000"
 7465      7400
 7466              	.LASF78:
 7467 01e5 73657453 		.ascii	"setSpeed\000"
 7467      70656564 
 7467      00
 7468              	.LASF173:
 7469 01ee 75736242 		.ascii	"usbBuffer\000"
 7469      75666665 
 7469      7200
 7470              	.LASF42:
 7471 01f8 696E6465 		.ascii	"index\000"
 7471      7800
 7472              	.LASF23:
 7473 01fe 44524956 		.ascii	"DRIVE\000"
 7473      4500
 7474              	.LASF72:
 7475 0204 73747269 		.ascii	"string_packet\000"
 7475      6E675F70 
 7475      61636B65 
 7475      7400
 7476              	.LASF102:
 7477 0212 6368616E 		.ascii	"changeToBT\000"
 7477      6765546F 
 7477      425400
 7478              	.LASF81:
 7479 021d 636F756E 		.ascii	"countsLeft\000"
 7479      74734C65 
 7479      667400
 7480              	.LASF86:
 7481 0228 64726976 		.ascii	"driveForwards\000"
 7481      65466F72 
 7481      77617264 
 7481      7300
 7482              	.LASF88:
 7483 0236 7475726E 		.ascii	"turnLeft\000"
 7483      4C656674 
 7483      00
 7484              	.LASF9:
 7485 023f 6C6F6E67 		.ascii	"long long unsigned int\000"
 7485      206C6F6E 
 7485      6720756E 
 7485      7369676E 
 7485      65642069 
 7486              	.LASF134:
 7487 0256 666C6167 		.ascii	"flag_packet\000"
 7487      5F706163 
 7487      6B657400 
 7488              	.LASF67:
 7489 0262 66726F6E 		.ascii	"frontSensors\000"
 7489      7453656E 
 7489      736F7273 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 155


 7489      00
 7490              	.LASF61:
 7491 026f 6973725F 		.ascii	"isr_turn_timer\000"
 7491      7475726E 
 7491      5F74696D 
 7491      657200
 7492              	.LASF101:
 7493 027e 6368616E 		.ascii	"changeToRF\000"
 7493      6765546F 
 7493      524600
 7494              	.LASF90:
 7495 0289 696E6974 		.ascii	"initTurnLeft\000"
 7495      5475726E 
 7495      4C656674 
 7495      00
 7496              	.LASF167:
 7497 0296 706F7274 		.ascii	"portOpen\000"
 7497      4F70656E 
 7497      00
 7498              	.LASF94:
 7499 029f 696E6974 		.ascii	"initBrake\000"
 7499      4272616B 
 7499      6500
 7500              	.LASF197:
 7501 02a9 433A5C55 		.ascii	"C:\\Users\\Tomas\\Google_Drive\\301\\CS301-Team-Rep"
 7501      73657273 
 7501      5C546F6D 
 7501      61735C47 
 7501      6F6F676C 
 7502 02d7 6F5C4353 		.ascii	"o\\CS301_Class.cydsn\000"
 7502      3330315F 
 7502      436C6173 
 7502      732E6379 
 7502      64736E00 
 7503              	.LASF130:
 7504 02eb 666C6167 		.ascii	"flag_ts_update\000"
 7504      5F74735F 
 7504      75706461 
 7504      746500
 7505              	.LASF114:
 7506 02fa 7363616C 		.ascii	"scalingFactor\000"
 7506      696E6746 
 7506      6163746F 
 7506      7200
 7507              	.LASF104:
 7508 0308 6C656674 		.ascii	"leftSpeed\000"
 7508      53706565 
 7508      6400
 7509              	.LASF129:
 7510 0312 666C6167 		.ascii	"flag_ts_enc\000"
 7510      5F74735F 
 7510      656E6300 
 7511              	.LASF179:
 7512 031e 62797465 		.ascii	"byteCount\000"
 7512      436F756E 
 7512      7400
 7513              	.LASF66:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 156


 7514 0328 61637469 		.ascii	"actionDebounce\000"
 7514      6F6E4465 
 7514      626F756E 
 7514      636500
 7515              	.LASF63:
 7516 0337 62757474 		.ascii	"button\000"
 7516      6F6E00
 7517              	.LASF176:
 7518 033e 70726576 		.ascii	"prev_movement_state\000"
 7518      5F6D6F76 
 7518      656D656E 
 7518      745F7374 
 7518      61746500 
 7519              	.LASF120:
 7520 0352 73656E73 		.ascii	"sensorVals\000"
 7520      6F725661 
 7520      6C7300
 7521              	.LASF116:
 7522 035d 72657375 		.ascii	"result_str\000"
 7522      6C745F73 
 7522      747200
 7523              	.LASF123:
 7524 0368 75617274 		.ascii	"uart_set_PWM\000"
 7524      5F736574 
 7524      5F50574D 
 7524      00
 7525              	.LASF97:
 7526 0375 696E6974 		.ascii	"inittrackLineZ\000"
 7526      74726163 
 7526      6B4C696E 
 7526      655A00
 7527              	.LASF44:
 7528 0384 726F626F 		.ascii	"robot_ypos\000"
 7528      745F7970 
 7528      6F7300
 7529              	.LASF128:
 7530 038f 74735F64 		.ascii	"ts_display\000"
 7530      6973706C 
 7530      617900
 7531              	.LASF113:
 7532 039a 7072696E 		.ascii	"print_ADC\000"
 7532      745F4144 
 7532      4300
 7533              	.LASF106:
 7534 03a4 7363616C 		.ascii	"scalingLeft\000"
 7534      696E674C 
 7534      65667400 
 7535              	.LASF12:
 7536 03b0 63686172 		.ascii	"char\000"
 7536      00
 7537              	.LASF48:
 7538 03b5 67305F73 		.ascii	"g0_speed\000"
 7538      70656564 
 7538      00
 7539              	.LASF156:
 7540 03be 72696768 		.ascii	"rightSpeedLimit\000"
 7540      74537065 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 157


 7540      65644C69 
 7540      6D697400 
 7541              	.LASF74:
 7542 03ce 7365744C 		.ascii	"setLeftDir\000"
 7542      65667444 
 7542      697200
 7543              	.LASF182:
 7544 03d9 696E7374 		.ascii	"instructionCount\000"
 7544      72756374 
 7544      696F6E43 
 7544      6F756E74 
 7544      00
 7545              	.LASF89:
 7546 03ea 7475726E 		.ascii	"turnU\000"
 7546      5500
 7547              	.LASF55:
 7548 03f0 67325F79 		.ascii	"g2_ypos\000"
 7548      706F7300 
 7549              	.LASF16:
 7550 03f8 75696E74 		.ascii	"uint16\000"
 7550      313600
 7551              	.LASF18:
 7552 03ff 696E7438 		.ascii	"int8\000"
 7552      00
 7553              	.LASF69:
 7554 0404 6E657874 		.ascii	"nextStepDist\000"
 7554      53746570 
 7554      44697374 
 7554      00
 7555              	.LASF53:
 7556 0411 67315F64 		.ascii	"g1_direction\000"
 7556      69726563 
 7556      74696F6E 
 7556      00
 7557              	.LASF185:
 7558 041e 70617468 		.ascii	"path\000"
 7558      00
 7559              	.LASF75:
 7560 0423 73657452 		.ascii	"setRightDir\000"
 7560      69676874 
 7560      44697200 
 7561              	.LASF34:
 7562 042f 43555256 		.ascii	"CURVE_TRACK\000"
 7562      455F5452 
 7562      41434B00 
 7563              	.LASF108:
 7564 043b 696E7465 		.ascii	"interCalc\000"
 7564      7243616C 
 7564      6300
 7565              	.LASF143:
 7566 0445 42545F45 		.ascii	"BT_ENABLED\000"
 7566      4E41424C 
 7566      454400
 7567              	.LASF80:
 7568 0450 72696768 		.ascii	"right\000"
 7568      7400
 7569              	.LASF163:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 158


 7570 0456 696E6974 		.ascii	"initial_pos_valid\000"
 7570      69616C5F 
 7570      706F735F 
 7570      76616C69 
 7570      6400
 7571              	.LASF8:
 7572 0468 6C6F6E67 		.ascii	"long long int\000"
 7572      206C6F6E 
 7572      6720696E 
 7572      7400
 7573              	.LASF174:
 7574 0476 62756666 		.ascii	"buffer_state\000"
 7574      65725F73 
 7574      74617465 
 7574      00
 7575              	.LASF50:
 7576 0483 67315F78 		.ascii	"g1_xpos\000"
 7576      706F7300 
 7577              	.LASF95:
 7578 048b 696E6974 		.ascii	"initTrack\000"
 7578      54726163 
 7578      6B00
 7579              	.LASF68:
 7580 0495 6E657874 		.ascii	"nextStep\000"
 7580      53746570 
 7580      00
 7581              	.LASF195:
 7582 049e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7582      4320342E 
 7582      392E3320 
 7582      32303135 
 7582      30333033 
 7583 04d1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7583      20726576 
 7583      6973696F 
 7583      6E203232 
 7583      31323230 
 7584 0504 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7584      66756E63 
 7584      74696F6E 
 7584      2D736563 
 7584      74696F6E 
 7585              	.LASF56:
 7586 052c 67325F73 		.ascii	"g2_speed\000"
 7586      70656564 
 7586      00
 7587              	.LASF47:
 7588 0535 67305F79 		.ascii	"g0_ypos\000"
 7588      706F7300 
 7589              	.LASF99:
 7590 053d 72665F63 		.ascii	"rf_char\000"
 7590      68617200 
 7591              	.LASF184:
 7592 0545 666F6F64 		.ascii	"food_list\000"
 7592      5F6C6973 
 7592      7400
 7593              	.LASF142:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 159


 7594 054f 42494E5F 		.ascii	"BIN_ENABLED\000"
 7594      454E4142 
 7594      4C454400 
 7595              	.LASF105:
 7596 055b 72696768 		.ascii	"rightSpeed\000"
 7596      74537065 
 7596      656400
 7597              	.LASF127:
 7598 0566 74735F73 		.ascii	"ts_speed\000"
 7598      70656564 
 7598      00
 7599              	.LASF17:
 7600 056f 75696E74 		.ascii	"uint32\000"
 7600      333200
 7601              	.LASF191:
 7602 0576 696E7374 		.ascii	"instructions\000"
 7602      72756374 
 7602      696F6E73 
 7602      00
 7603              	.LASF82:
 7604 0583 636F756E 		.ascii	"countsRight\000"
 7604      74735269 
 7604      67687400 
 7605              	.LASF198:
 7606 058f 64617461 		.ascii	"data_main\000"
 7606      5F6D6169 
 7606      6E00
 7607              	.LASF115:
 7608 0599 636F6E76 		.ascii	"converted_val\000"
 7608      65727465 
 7608      645F7661 
 7608      6C00
 7609              	.LASF186:
 7610 05a7 73746172 		.ascii	"start\000"
 7610      7400
 7611              	.LASF41:
 7612 05ad 72737369 		.ascii	"rssi\000"
 7612      00
 7613              	.LASF110:
 7614 05b2 74726163 		.ascii	"trackLine\000"
 7614      6B4C696E 
 7614      6500
 7615              	.LASF49:
 7616 05bc 67305F64 		.ascii	"g0_direction\000"
 7616      69726563 
 7616      74696F6E 
 7616      00
 7617              	.LASF139:
 7618 05c9 666C6167 		.ascii	"flag_receive_ADC\000"
 7618      5F726563 
 7618      65697665 
 7618      5F414443 
 7618      00
 7619              	.LASF26:
 7620 05da 53544F50 		.ascii	"STOPPED\000"
 7620      50454400 
 7621              	.LASF100:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 160


 7622 05e2 42545F72 		.ascii	"BT_rxInt\000"
 7622      78496E74 
 7622      00
 7623              	.LASF22:
 7624 05eb 6C6F6E67 		.ascii	"long double\000"
 7624      20646F75 
 7624      626C6500 
 7625              	.LASF64:
 7626 05f7 6973725F 		.ascii	"isr_adcTimer\000"
 7626      61646354 
 7626      696D6572 
 7626      00
 7627              	.LASF153:
 7628 0604 6C656674 		.ascii	"left_duty_cycle\000"
 7628      5F647574 
 7628      795F6379 
 7628      636C6500 
 7629              	.LASF65:
 7630 0614 6973725F 		.ascii	"isr_deadzone\000"
 7630      64656164 
 7630      7A6F6E65 
 7630      00
 7631              	.LASF131:
 7632 0621 666C6167 		.ascii	"flag_ts_speed\000"
 7632      5F74735F 
 7632      73706565 
 7632      6400
 7633              	.LASF136:
 7634 062f 64617461 		.ascii	"dataready_flag\000"
 7634      72656164 
 7634      795F666C 
 7634      616700
 7635              	.LASF165:
 7636 063e 696E6974 		.ascii	"initial_y_pos\000"
 7636      69616C5F 
 7636      795F706F 
 7636      7300
 7637              	.LASF133:
 7638 064c 666C6167 		.ascii	"flag_rx\000"
 7638      5F727800 
 7639              	.LASF2:
 7640 0654 73686F72 		.ascii	"short int\000"
 7640      7420696E 
 7640      7400
 7641              	.LASF140:
 7642 065e 6164635F 		.ascii	"adc_result\000"
 7642      72657375 
 7642      6C7400
 7643              	.LASF92:
 7644 0669 696E6974 		.ascii	"initTurnU\000"
 7644      5475726E 
 7644      5500
 7645              	.LASF144:
 7646 0673 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7646      5F63616C 
 7646      635F7768 
 7646      65656C73 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 161


 7646      70656564 
 7647              	.LASF4:
 7648 0688 6C6F6E67 		.ascii	"long int\000"
 7648      20696E74 
 7648      00
 7649              	.LASF91:
 7650 0691 696E6974 		.ascii	"initTurnRight\000"
 7650      5475726E 
 7650      52696768 
 7650      7400
 7651              	.LASF35:
 7652 069f 555F5452 		.ascii	"U_TRACK\000"
 7652      41434B00 
 7653              	.LASF124:
 7654 06a7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7654      52784275 
 7654      66666572 
 7654      00
 7655              	.LASF118:
 7656 06b4 7072696E 		.ascii	"printString\000"
 7656      74537472 
 7656      696E6700 
 7657              	.LASF98:
 7658 06c0 7278496E 		.ascii	"rxInt\000"
 7658      7400
 7659              	.LASF126:
 7660 06c6 74735F75 		.ascii	"ts_update\000"
 7660      70646174 
 7660      6500
 7661              	.LASF33:
 7662 06d0 4E4F5F54 		.ascii	"NO_TRACK\000"
 7662      5241434B 
 7662      00
 7663              	.LASF151:
 7664 06d9 64656164 		.ascii	"deadzone\000"
 7664      7A6F6E65 
 7664      00
 7665              	.LASF155:
 7666 06e2 6C656674 		.ascii	"leftSpeedLimit\000"
 7666      53706565 
 7666      644C696D 
 7666      697400
 7667              	.LASF40:
 7668 06f1 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7668      54524156 
 7668      45525345 
 7668      00
 7669              	.LASF29:
 7670 06fe 54524143 		.ascii	"TRACKING_SOFT\000"
 7670      4B494E47 
 7670      5F534F46 
 7670      5400
 7671              	.LASF161:
 7672 070c 6F766572 		.ascii	"overshot_target\000"
 7672      73686F74 
 7672      5F746172 
 7672      67657400 
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 162


 7673              	.LASF79:
 7674 071c 6C656674 		.ascii	"left\000"
 7674      00
 7675              	.LASF158:
 7676 0721 61636375 		.ascii	"accum_dist\000"
 7676      6D5F6469 
 7676      737400
 7677              	.LASF121:
 7678 072c 75736250 		.ascii	"usbPutString\000"
 7678      75745374 
 7678      72696E67 
 7678      00
 7679              	.LASF87:
 7680 0739 7475726E 		.ascii	"turnRight\000"
 7680      52696768 
 7680      7400
 7681              	.LASF51:
 7682 0743 67315F79 		.ascii	"g1_ypos\000"
 7682      706F7300 
 7683              	.LASF59:
 7684 074b 6164635F 		.ascii	"adc_isr\000"
 7684      69737200 
 7685              	.LASF119:
 7686 0753 72656164 		.ascii	"readFrontSensors\000"
 7686      46726F6E 
 7686      7453656E 
 7686      736F7273 
 7686      00
 7687              	.LASF162:
 7688 0764 71756164 		.ascii	"quad_per_cm\000"
 7688      5F706572 
 7688      5F636D00 
 7689              	.LASF157:
 7690 0770 74617267 		.ascii	"target_distance_cm\000"
 7690      65745F64 
 7690      69737461 
 7690      6E63655F 
 7690      636D00
 7691              	.LASF11:
 7692 0783 73697A65 		.ascii	"sizetype\000"
 7692      74797065 
 7692      00
 7693              	.LASF7:
 7694 078c 6C6F6E67 		.ascii	"long unsigned int\000"
 7694      20756E73 
 7694      69676E65 
 7694      6420696E 
 7694      7400
 7695              	.LASF71:
 7696 079e 62797465 		.ascii	"byte_packet\000"
 7696      5F706163 
 7696      6B657400 
 7697              	.LASF13:
 7698 07aa 696E7433 		.ascii	"int32_t\000"
 7698      325F7400 
 7699              	.LASF180:
 7700 07b2 7061636B 		.ascii	"packet\000"
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 163


 7700      657400
 7701              	.LASF192:
 7702 07b9 696E7374 		.ascii	"instructionLength\000"
 7702      72756374 
 7702      696F6E4C 
 7702      656E6774 
 7702      6800
 7703              	.LASF43:
 7704 07cb 726F626F 		.ascii	"robot_xpos\000"
 7704      745F7870 
 7704      6F7300
 7705              	.LASF85:
 7706 07d6 6272616B 		.ascii	"brakeMotor\000"
 7706      654D6F74 
 7706      6F7200
 7707              	.LASF190:
 7708 07e1 666F6F64 		.ascii	"food_length\000"
 7708      5F6C656E 
 7708      67746800 
 7709              	.LASF172:
 7710 07ed 656E7472 		.ascii	"entry\000"
 7710      7900
 7711              	.LASF1:
 7712 07f3 756E7369 		.ascii	"unsigned char\000"
 7712      676E6564 
 7712      20636861 
 7712      7200
 7713              	.LASF6:
 7714 0801 5F5F7569 		.ascii	"__uint32_t\000"
 7714      6E743332 
 7714      5F7400
 7715              	.LASF171:
 7716 080c 6C696E65 		.ascii	"line\000"
 7716      00
 7717              	.LASF160:
 7718 0811 72656163 		.ascii	"reached_target\000"
 7718      6865645F 
 7718      74617267 
 7718      657400
 7719              	.LASF62:
 7720 0820 53746F70 		.ascii	"Stop_on_line\000"
 7720      5F6F6E5F 
 7720      6C696E65 
 7720      00
 7721              	.LASF125:
 7722 082d 74735F65 		.ascii	"ts_enc\000"
 7722      6E6300
 7723              	.LASF166:
 7724 0834 6272616B 		.ascii	"brakeFlag\000"
 7724      65466C61 
 7724      6700
 7725              	.LASF132:
 7726 083e 666C6167 		.ascii	"flag_ts_display\000"
 7726      5F74735F 
 7726      64697370 
 7726      6C617900 
 7727              	.LASF31:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 164


 7728 084e 73746174 		.ascii	"state\000"
 7728      6500
 7729              	.LASF77:
 7730 0854 72657665 		.ascii	"reverseDirection\000"
 7730      72736544 
 7730      69726563 
 7730      74696F6E 
 7730      00
 7731              	.LASF83:
 7732 0865 6272616B 		.ascii	"brakeLeft\000"
 7732      654C6566 
 7732      7400
 7733              	.LASF170:
 7734 086f 64697370 		.ascii	"displaystring\000"
 7734      6C617973 
 7734      7472696E 
 7734      6700
 7735              	.LASF147:
 7736 087d 6C617374 		.ascii	"last_quad_count1\000"
 7736      5F717561 
 7736      645F636F 
 7736      756E7431 
 7736      00
 7737              	.LASF148:
 7738 088e 6C617374 		.ascii	"last_quad_count2\000"
 7738      5F717561 
 7738      645F636F 
 7738      756E7432 
 7738      00
 7739              	.LASF187:
 7740 089f 64657374 		.ascii	"destination\000"
 7740      696E6174 
 7740      696F6E00 
 7741              	.LASF122:
 7742 08ab 75736250 		.ascii	"usbPutChar\000"
 7742      75744368 
 7742      617200
 7743              	.LASF0:
 7744 08b6 7369676E 		.ascii	"signed char\000"
 7744      65642063 
 7744      68617200 
 7745              	.LASF3:
 7746 08c2 73686F72 		.ascii	"short unsigned int\000"
 7746      7420756E 
 7746      7369676E 
 7746      65642069 
 7746      6E7400
 7747              	.LASF45:
 7748 08d5 726F626F 		.ascii	"robot_orientation\000"
 7748      745F6F72 
 7748      69656E74 
 7748      6174696F 
 7748      6E00
 7749              	.LASF37:
 7750 08e7 51554144 		.ascii	"QUAD_STOP\000"
 7750      5F53544F 
 7750      5000
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 165


 7751              	.LASF73:
 7752 08f1 6D61696E 		.ascii	"main\000"
 7752      00
 7753              	.LASF58:
 7754 08f6 42545F74 		.ascii	"BT_txInt\000"
 7754      78496E74 
 7754      00
 7755              	.LASF109:
 7756 08ff 6E657874 		.ascii	"nextSpeed\000"
 7756      53706565 
 7756      6400
 7757              	.LASF15:
 7758 0909 75696E74 		.ascii	"uint8\000"
 7758      3800
 7759              	.LASF21:
 7760 090f 646F7562 		.ascii	"double\000"
 7760      6C6500
 7761              	.LASF154:
 7762 0916 72696768 		.ascii	"right_duty_cycle\000"
 7762      745F6475 
 7762      74795F63 
 7762      79636C65 
 7762      00
 7763              	.LASF38:
 7764 0927 52465F53 		.ascii	"RF_STOP\000"
 7764      544F5000 
 7765              	.LASF76:
 7766 092f 68616E64 		.ascii	"handle_rx_binary\000"
 7766      6C655F72 
 7766      785F6269 
 7766      6E617279 
 7766      00
 7767              	.LASF117:
 7768 0940 7072696E 		.ascii	"print_RF\000"
 7768      745F5246 
 7768      00
 7769              	.LASF30:
 7770 0949 55545552 		.ascii	"UTURN\000"
 7770      4E00
 7771              	.LASF46:
 7772 094f 67305F78 		.ascii	"g0_xpos\000"
 7772      706F7300 
 7773              	.LASF107:
 7774 0957 7363616C 		.ascii	"scalingRight\000"
 7774      696E6752 
 7774      69676874 
 7774      00
 7775              	.LASF135:
 7776 0964 666C6167 		.ascii	"flag_KB_string\000"
 7776      5F4B425F 
 7776      73747269 
 7776      6E6700
 7777              	.LASF52:
 7778 0973 67315F73 		.ascii	"g1_speed\000"
 7778      70656564 
 7778      00
 7779              	.LASF196:
ARM GAS  C:\Users\Tomas\AppData\Local\Temp\ccfApk3t.s 			page 166


 7780 097c 2E5C6D61 		.ascii	".\\main.c\000"
 7780      696E2E63 
 7780      00
 7781              	.LASF164:
 7782 0985 696E6974 		.ascii	"initial_x_pos\000"
 7782      69616C5F 
 7782      785F706F 
 7782      7300
 7783              	.LASF84:
 7784 0993 6272616B 		.ascii	"brakeRight\000"
 7784      65526967 
 7784      687400
 7785              	.LASF96:
 7786 099e 696E6974 		.ascii	"initTrackU\000"
 7786      54726163 
 7786      6B5500
 7787              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
