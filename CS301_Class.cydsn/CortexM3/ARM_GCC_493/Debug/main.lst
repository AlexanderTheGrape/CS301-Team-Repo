ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	movement_state
 204              		.type	movement_state, %object
 205              		.size	movement_state, 1
 206              	movement_state:
 207 0044 03       		.byte	3
 208              		.global	byteCount
 209 0045 000000   		.bss
 210              		.type	byteCount, %object
 211              		.size	byteCount, 1
 212              	byteCount:
 213 002c 00       		.space	1
 214              		.comm	packet,2,4
 215 002d 00       		.section	.text.handle_rx_binary,"ax",%progbits
 216              		.align	2
 217              		.global	handle_rx_binary
 218              		.thumb
 219              		.thumb_func
 220              		.type	handle_rx_binary, %function
 221              	handle_rx_binary:
 222              	.LFB63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 5


 223              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** #define QUAD_RATIO 0.99556
  40:.\main.c      **** 
  41:.\main.c      **** void handle_rx_binary()
  42:.\main.c      **** {
 224              		.loc 1 42 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 89B0     		sub	sp, sp, #36
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  43:.\main.c      ****     if(flag_rx == 1)
 236              		.loc 1 43 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 6


 237 0006 524B     		ldr	r3, .L21
 238 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 000a 012B     		cmp	r3, #1
 240 000c 40F09A80 		bne	.L1
 241              	.LBB2:
  44:.\main.c      ****     {    
  45:.\main.c      ****         flag_rx = 0;
 242              		.loc 1 45 0
 243 0010 4F4B     		ldr	r3, .L21
 244 0012 0022     		movs	r2, #0
 245 0014 1A70     		strb	r2, [r3]
  46:.\main.c      ****         
  47:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 246              		.loc 1 47 0
 247 0016 4F4B     		ldr	r3, .L21+4
 248 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 249 001a 1B02     		lsls	r3, r3, #8
 250 001c 9AB2     		uxth	r2, r3
 251 001e 4D4B     		ldr	r3, .L21+4
 252 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0022 9BB2     		uxth	r3, r3
 254 0024 1343     		orrs	r3, r3, r2
 255 0026 9BB2     		uxth	r3, r3
 256 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  48:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  49:.\main.c      ****         char byte_packet[12];
  50:.\main.c      ****         char string_packet[12];
  51:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  52:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  53:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  54:.\main.c      ****         //usbPutString(string_packet);
  55:.\main.c      ****        // usbPutString(string_packet);
  56:.\main.c      ****        // usbPutChar(' ');
  57:.\main.c      ****         
  58:.\main.c      ****         switch(byteCount)
 257              		.loc 1 58 0
 258 002a 4B4B     		ldr	r3, .L21+8
 259 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 002e 043B     		subs	r3, r3, #4
 261 0030 1E2B     		cmp	r3, #30
 262 0032 00F28780 		bhi	.L1
 263 0036 01A2     		adr	r2, .L5
 264 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265              		.p2align 2
 266              	.L5:
 267 003c B9000000 		.word	.L4+1
 268 0040 45010000 		.word	.L1+1
 269 0044 CD000000 		.word	.L6+1
 270 0048 45010000 		.word	.L1+1
 271 004c D5000000 		.word	.L7+1
 272 0050 45010000 		.word	.L1+1
 273 0054 DD000000 		.word	.L8+1
 274 0058 45010000 		.word	.L1+1
 275 005c E5000000 		.word	.L9+1
 276 0060 45010000 		.word	.L1+1
 277 0064 ED000000 		.word	.L10+1
 278 0068 45010000 		.word	.L1+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 7


 279 006c F5000000 		.word	.L11+1
 280 0070 45010000 		.word	.L1+1
 281 0074 FD000000 		.word	.L12+1
 282 0078 45010000 		.word	.L1+1
 283 007c 05010000 		.word	.L13+1
 284 0080 45010000 		.word	.L1+1
 285 0084 0D010000 		.word	.L14+1
 286 0088 45010000 		.word	.L1+1
 287 008c 15010000 		.word	.L15+1
 288 0090 45010000 		.word	.L1+1
 289 0094 1D010000 		.word	.L16+1
 290 0098 45010000 		.word	.L1+1
 291 009c 25010000 		.word	.L17+1
 292 00a0 45010000 		.word	.L1+1
 293 00a4 2D010000 		.word	.L18+1
 294 00a8 45010000 		.word	.L1+1
 295 00ac 35010000 		.word	.L19+1
 296 00b0 45010000 		.word	.L1+1
 297 00b4 3D010000 		.word	.L20+1
 298              		.p2align 1
 299              	.L4:
  59:.\main.c      ****         {
  60:.\main.c      ****             case 4:
  61:.\main.c      ****                 //usbPutString("RSSI:");
  62:.\main.c      ****                 //usbPutString(byte_packet);
  63:.\main.c      ****                 //usbPutString("\r\n");
  64:.\main.c      ****                 buffer_state.rssi = packet[0];
 300              		.loc 1 64 0
 301 00b8 264B     		ldr	r3, .L21+4
 302 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00bc DAB2     		uxtb	r2, r3
 304 00be 274B     		ldr	r3, .L21+12
 305 00c0 1A70     		strb	r2, [r3]
  65:.\main.c      ****                 buffer_state.index = packet[1];
 306              		.loc 1 65 0
 307 00c2 244B     		ldr	r3, .L21+4
 308 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 309 00c6 254B     		ldr	r3, .L21+12
 310 00c8 5A70     		strb	r2, [r3, #1]
  66:.\main.c      ****             break;
 311              		.loc 1 66 0
 312 00ca 3BE0     		b	.L1
 313              	.L6:
  67:.\main.c      ****             case 6:
  68:.\main.c      ****                 //usbPutString("robot_x:");
  69:.\main.c      ****                 //usbPutString(string_packet);
  70:.\main.c      ****                 //usbPutString("\r\n");
  71:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 314              		.loc 1 71 0
 315 00cc FA8B     		ldrh	r2, [r7, #30]
 316 00ce 234B     		ldr	r3, .L21+12
 317 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  72:.\main.c      ****             break;
 318              		.loc 1 72 0
 319 00d2 37E0     		b	.L1
 320              	.L7:
  73:.\main.c      ****             case 8:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 8


  74:.\main.c      ****                 //usbPutString("robot_y:");
  75:.\main.c      ****                 //usbPutString(string_packet);
  76:.\main.c      ****                 //usbPutString("\r\n");
  77:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 321              		.loc 1 77 0
 322 00d4 FA8B     		ldrh	r2, [r7, #30]
 323 00d6 214B     		ldr	r3, .L21+12
 324 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  78:.\main.c      ****             break;
 325              		.loc 1 78 0
 326 00da 33E0     		b	.L1
 327              	.L8:
  79:.\main.c      ****             case 10:
  80:.\main.c      ****                 //usbPutString("robot_dir:");
  81:.\main.c      ****                 //usbPutString(string_packet);
  82:.\main.c      ****                 //usbPutString("\r\n");
  83:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 328              		.loc 1 83 0
 329 00dc FA8B     		ldrh	r2, [r7, #30]
 330 00de 1F4B     		ldr	r3, .L21+12
 331 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  84:.\main.c      ****             break;
 332              		.loc 1 84 0
 333 00e2 2FE0     		b	.L1
 334              	.L9:
  85:.\main.c      ****             case 12:
  86:.\main.c      ****                 //usbPutString("g0_x:");
  87:.\main.c      ****                 //usbPutString(string_packet);
  88:.\main.c      ****                 //usbPutString("\r\n");
  89:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 335              		.loc 1 89 0
 336 00e4 FA8B     		ldrh	r2, [r7, #30]
 337 00e6 1D4B     		ldr	r3, .L21+12
 338 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  90:.\main.c      ****             break;
 339              		.loc 1 90 0
 340 00ea 2BE0     		b	.L1
 341              	.L10:
  91:.\main.c      ****             case 14:
  92:.\main.c      ****                 //usbPutString("g0_y:");
  93:.\main.c      ****                 //usbPutString(string_packet);
  94:.\main.c      ****                 //usbPutString("\r\n");
  95:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 342              		.loc 1 95 0
 343 00ec FA8B     		ldrh	r2, [r7, #30]
 344 00ee 1B4B     		ldr	r3, .L21+12
 345 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  96:.\main.c      ****             break;
 346              		.loc 1 96 0
 347 00f2 27E0     		b	.L1
 348              	.L11:
  97:.\main.c      ****             case 16:
  98:.\main.c      ****                 //usbPutString("g0_speed:");
  99:.\main.c      ****                 //usbPutString(string_packet);
 100:.\main.c      ****                 //usbPutString("\r\n");
 101:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 349              		.loc 1 101 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 9


 350 00f4 FA8B     		ldrh	r2, [r7, #30]
 351 00f6 194B     		ldr	r3, .L21+12
 352 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 102:.\main.c      ****             break;
 353              		.loc 1 102 0
 354 00fa 23E0     		b	.L1
 355              	.L12:
 103:.\main.c      ****             case 18:
 104:.\main.c      ****                 //usbPutString("g1_dir:");
 105:.\main.c      ****                 //usbPutString(string_packet);
 106:.\main.c      ****                 //usbPutString("\r\n");
 107:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 356              		.loc 1 107 0
 357 00fc FA8B     		ldrh	r2, [r7, #30]
 358 00fe 174B     		ldr	r3, .L21+12
 359 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 108:.\main.c      ****             break;
 360              		.loc 1 108 0
 361 0102 1FE0     		b	.L1
 362              	.L13:
 109:.\main.c      ****             case 20:
 110:.\main.c      ****                 //usbPutString("g1_x:");
 111:.\main.c      ****                 //usbPutString(string_packet);
 112:.\main.c      ****                 //usbPutString("\r\n");
 113:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 363              		.loc 1 113 0
 364 0104 FA8B     		ldrh	r2, [r7, #30]
 365 0106 154B     		ldr	r3, .L21+12
 366 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 114:.\main.c      ****             break;
 367              		.loc 1 114 0
 368 010a 1BE0     		b	.L1
 369              	.L14:
 115:.\main.c      ****             case 22:
 116:.\main.c      ****                 //usbPutString("g1_y:");
 117:.\main.c      ****                 //usbPutString(string_packet);
 118:.\main.c      ****                 //usbPutString("\r\n");
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 370              		.loc 1 119 0
 371 010c FA8B     		ldrh	r2, [r7, #30]
 372 010e 134B     		ldr	r3, .L21+12
 373 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 374              		.loc 1 120 0
 375 0112 17E0     		b	.L1
 376              	.L15:
 121:.\main.c      ****             case 24:
 122:.\main.c      ****                 //usbPutString("g1_speed:");
 123:.\main.c      ****                 //usbPutString(string_packet);
 124:.\main.c      ****                 //usbPutString("\r\n");
 125:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 377              		.loc 1 125 0
 378 0114 FA8B     		ldrh	r2, [r7, #30]
 379 0116 114B     		ldr	r3, .L21+12
 380 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 126:.\main.c      ****             break;
 381              		.loc 1 126 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 10


 382 011a 13E0     		b	.L1
 383              	.L16:
 127:.\main.c      ****             case 26:
 128:.\main.c      ****                 //usbPutString("g1_dir:");
 129:.\main.c      ****                 //usbPutString(string_packet);
 130:.\main.c      ****                 //usbPutString("\r\n");
 131:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 384              		.loc 1 131 0
 385 011c FA8B     		ldrh	r2, [r7, #30]
 386 011e 0F4B     		ldr	r3, .L21+12
 387 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 132:.\main.c      ****             break;
 388              		.loc 1 132 0
 389 0122 0FE0     		b	.L1
 390              	.L17:
 133:.\main.c      ****             case 28:
 134:.\main.c      ****                 //usbPutString("g2_x:");
 135:.\main.c      ****                 //usbPutString(string_packet);
 136:.\main.c      ****                 //usbPutString("\r\n");
 137:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 391              		.loc 1 137 0
 392 0124 FA8B     		ldrh	r2, [r7, #30]
 393 0126 0D4B     		ldr	r3, .L21+12
 394 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 138:.\main.c      ****             break;
 395              		.loc 1 138 0
 396 012a 0BE0     		b	.L1
 397              	.L18:
 139:.\main.c      ****             case 30:
 140:.\main.c      ****                 //usbPutString("g2_y:");
 141:.\main.c      ****                 //usbPutString(string_packet);
 142:.\main.c      ****                 //usbPutString("\r\n");
 143:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 398              		.loc 1 143 0
 399 012c FA8B     		ldrh	r2, [r7, #30]
 400 012e 0B4B     		ldr	r3, .L21+12
 401 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 144:.\main.c      ****             break;
 402              		.loc 1 144 0
 403 0132 07E0     		b	.L1
 404              	.L19:
 145:.\main.c      ****             case 32:
 146:.\main.c      ****                 //usbPutString("g1_speed:");
 147:.\main.c      ****                 //usbPutString(string_packet);
 148:.\main.c      ****                 //usbPutString("\r\n");
 149:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 405              		.loc 1 149 0
 406 0134 FA8B     		ldrh	r2, [r7, #30]
 407 0136 094B     		ldr	r3, .L21+12
 408 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 150:.\main.c      ****             break;
 409              		.loc 1 150 0
 410 013a 03E0     		b	.L1
 411              	.L20:
 151:.\main.c      ****             case 34:
 152:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 412              		.loc 1 152 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 11


 413 013c FA8B     		ldrh	r2, [r7, #30]
 414 013e 074B     		ldr	r3, .L21+12
 415 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 153:.\main.c      ****                 //usbPutString("g2_dir:");
 154:.\main.c      ****                 //usbPutString(string_packet);
 155:.\main.c      ****                 //usbPutString("\r\n");
 156:.\main.c      ****                 
 157:.\main.c      ****             break;
 416              		.loc 1 157 0
 417 0142 00BF     		nop
 418              	.L1:
 419              	.LBE2:
 158:.\main.c      ****         }
 159:.\main.c      ****     }
 160:.\main.c      **** }
 420              		.loc 1 160 0
 421 0144 2437     		adds	r7, r7, #36
 422              		.cfi_def_cfa_offset 4
 423 0146 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0148 5DF8047B 		ldr	r7, [sp], #4
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 014c 7047     		bx	lr
 430              	.L22:
 431 014e 00BF     		.align	2
 432              	.L21:
 433 0150 00000000 		.word	flag_rx
 434 0154 00000000 		.word	packet
 435 0158 00000000 		.word	byteCount
 436 015c 00000000 		.word	buffer_state
 437              		.cfi_endproc
 438              	.LFE63:
 439              		.size	handle_rx_binary, .-handle_rx_binary
 440              		.section	.text.setLeftDir,"ax",%progbits
 441              		.align	2
 442              		.global	setLeftDir
 443              		.thumb
 444              		.thumb_func
 445              		.type	setLeftDir, %function
 446              	setLeftDir:
 447              	.LFB64:
 161:.\main.c      **** 
 162:.\main.c      **** 
 163:.\main.c      **** 
 164:.\main.c      **** void setLeftDir(uint8 dir)
 165:.\main.c      **** {
 448              		.loc 1 165 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 7, -8
 455              		.cfi_offset 14, -4
 456 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 12


 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 0346     		mov	r3, r0
 461 0008 FB71     		strb	r3, [r7, #7]
 166:.\main.c      ****     M2_IN2_Write(dir);
 462              		.loc 1 166 0
 463 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 464 000c 1846     		mov	r0, r3
 465 000e FFF7FEFF 		bl	M2_IN2_Write
 167:.\main.c      **** }
 466              		.loc 1 167 0
 467 0012 0837     		adds	r7, r7, #8
 468              		.cfi_def_cfa_offset 8
 469 0014 BD46     		mov	sp, r7
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 0016 80BD     		pop	{r7, pc}
 473              		.cfi_endproc
 474              	.LFE64:
 475              		.size	setLeftDir, .-setLeftDir
 476              		.section	.text.setRightDir,"ax",%progbits
 477              		.align	2
 478              		.global	setRightDir
 479              		.thumb
 480              		.thumb_func
 481              		.type	setRightDir, %function
 482              	setRightDir:
 483              	.LFB65:
 168:.\main.c      **** 
 169:.\main.c      **** void setRightDir(uint8 dir)
 170:.\main.c      **** {
 484              		.loc 1 170 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488 0000 80B5     		push	{r7, lr}
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 492 0002 82B0     		sub	sp, sp, #8
 493              		.cfi_def_cfa_offset 16
 494 0004 00AF     		add	r7, sp, #0
 495              		.cfi_def_cfa_register 7
 496 0006 0346     		mov	r3, r0
 497 0008 FB71     		strb	r3, [r7, #7]
 171:.\main.c      ****     M1_IN2_Write(dir);
 498              		.loc 1 171 0
 499 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500 000c 1846     		mov	r0, r3
 501 000e FFF7FEFF 		bl	M1_IN2_Write
 172:.\main.c      **** }
 502              		.loc 1 172 0
 503 0012 0837     		adds	r7, r7, #8
 504              		.cfi_def_cfa_offset 8
 505 0014 BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 13


 507              		@ sp needed
 508 0016 80BD     		pop	{r7, pc}
 509              		.cfi_endproc
 510              	.LFE65:
 511              		.size	setRightDir, .-setRightDir
 512              		.section	.rodata
 513              		.align	2
 514              	.LC0:
 515 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 515      2025640D 
 515      0A00
 516              		.section	.text.reverseDirection,"ax",%progbits
 517              		.align	2
 518              		.global	reverseDirection
 519              		.thumb
 520              		.thumb_func
 521              		.type	reverseDirection, %function
 522              	reverseDirection:
 523              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** void reverseDirection()
 175:.\main.c      **** {
 524              		.loc 1 175 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 80B5     		push	{r7, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 7, -8
 531              		.cfi_offset 14, -4
 532 0002 84B0     		sub	sp, sp, #16
 533              		.cfi_def_cfa_offset 24
 534 0004 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 176:.\main.c      ****     direction = !direction;
 536              		.loc 1 176 0
 537 0006 114B     		ldr	r3, .L26
 538 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 539 000a 002B     		cmp	r3, #0
 540 000c 0CBF     		ite	eq
 541 000e 0123     		moveq	r3, #1
 542 0010 0023     		movne	r3, #0
 543 0012 DBB2     		uxtb	r3, r3
 544 0014 1A46     		mov	r2, r3
 545 0016 0D4B     		ldr	r3, .L26
 546 0018 1A70     		strb	r2, [r3]
 177:.\main.c      ****     setLeftDir(direction);
 547              		.loc 1 177 0
 548 001a 0C4B     		ldr	r3, .L26
 549 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 001e 1846     		mov	r0, r3
 551 0020 FFF7FEFF 		bl	setLeftDir
 178:.\main.c      ****     setRightDir(direction);
 552              		.loc 1 178 0
 553 0024 094B     		ldr	r3, .L26
 554 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 555 0028 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 14


 556 002a FFF7FEFF 		bl	setRightDir
 179:.\main.c      ****     char mes[16];
 180:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 557              		.loc 1 180 0
 558 002e 074B     		ldr	r3, .L26
 559 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 560 0032 1A46     		mov	r2, r3
 561 0034 3B46     		mov	r3, r7
 562 0036 1846     		mov	r0, r3
 563 0038 0549     		ldr	r1, .L26+4
 564 003a FFF7FEFF 		bl	sprintf
 181:.\main.c      ****     UART_PutString(mes);
 565              		.loc 1 181 0
 566 003e 3B46     		mov	r3, r7
 567 0040 1846     		mov	r0, r3
 568 0042 FFF7FEFF 		bl	UART_PutString
 182:.\main.c      **** }
 569              		.loc 1 182 0
 570 0046 1037     		adds	r7, r7, #16
 571              		.cfi_def_cfa_offset 8
 572 0048 BD46     		mov	sp, r7
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 004a 80BD     		pop	{r7, pc}
 576              	.L27:
 577              		.align	2
 578              	.L26:
 579 004c 00000000 		.word	direction
 580 0050 00000000 		.word	.LC0
 581              		.cfi_endproc
 582              	.LFE66:
 583              		.size	reverseDirection, .-reverseDirection
 584              		.global	__aeabi_dcmplt
 585              		.section	.rodata
 586 000a 0000     		.align	2
 587              	.LC1:
 588 000c 72696768 		.ascii	"right dir: %d\015\012\000"
 588      74206469 
 588      723A2025 
 588      640D0A00 
 589              		.align	2
 590              	.LC2:
 591 001c 6C656674 		.ascii	"left dir: %d\015\012\000"
 591      20646972 
 591      3A202564 
 591      0D0A00
 592              		.global	__aeabi_dmul
 593              		.global	__aeabi_d2uiz
 594              		.section	.text.setSpeed,"ax",%progbits
 595              		.align	2
 596              		.global	setSpeed
 597              		.thumb
 598              		.thumb_func
 599              		.type	setSpeed, %function
 600              	setSpeed:
 601              	.LFB67:
 183:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 15


 184:.\main.c      **** void setSpeed(double right, double left){
 602              		.loc 1 184 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 56
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606 0000 80B5     		push	{r7, lr}
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 0002 8EB0     		sub	sp, sp, #56
 611              		.cfi_def_cfa_offset 64
 612 0004 00AF     		add	r7, sp, #0
 613              		.cfi_def_cfa_register 7
 614 0006 C7E90201 		strd	r0, [r7, #8]
 615 000a C7E90023 		strd	r2, [r7]
 185:.\main.c      ****     if(right < 0)
 616              		.loc 1 185 0
 617 000e D7E90201 		ldrd	r0, [r7, #8]
 618 0012 4FF00002 		mov	r2, #0
 619 0016 4FF00003 		mov	r3, #0
 620 001a FFF7FEFF 		bl	__aeabi_dcmplt
 621 001e 0346     		mov	r3, r0
 622 0020 002B     		cmp	r3, #0
 623 0022 23D0     		beq	.L37
 624              	.LBB3:
 186:.\main.c      ****     {
 187:.\main.c      ****         char mes[16];
 188:.\main.c      ****         sprintf(mes, "right dir: %d\r\n", !direction);
 625              		.loc 1 188 0
 626 0024 464B     		ldr	r3, .L39+8
 627 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 628 0028 002B     		cmp	r3, #0
 629 002a 0CBF     		ite	eq
 630 002c 0123     		moveq	r3, #1
 631 002e 0023     		movne	r3, #0
 632 0030 DBB2     		uxtb	r3, r3
 633 0032 1A46     		mov	r2, r3
 634 0034 07F12403 		add	r3, r7, #36
 635 0038 1846     		mov	r0, r3
 636 003a 4249     		ldr	r1, .L39+12
 637 003c FFF7FEFF 		bl	sprintf
 189:.\main.c      ****         UART_PutString(mes);
 638              		.loc 1 189 0
 639 0040 07F12403 		add	r3, r7, #36
 640 0044 1846     		mov	r0, r3
 641 0046 FFF7FEFF 		bl	UART_PutString
 190:.\main.c      ****         setRightDir(!direction);
 642              		.loc 1 190 0
 643 004a 3D4B     		ldr	r3, .L39+8
 644 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 645 004e 002B     		cmp	r3, #0
 646 0050 0CBF     		ite	eq
 647 0052 0123     		moveq	r3, #1
 648 0054 0023     		movne	r3, #0
 649 0056 DBB2     		uxtb	r3, r3
 650 0058 1846     		mov	r0, r3
 651 005a FFF7FEFF 		bl	setRightDir
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 16


 191:.\main.c      ****         right = -right;
 652              		.loc 1 191 0
 653 005e BB68     		ldr	r3, [r7, #8]
 654 0060 BB60     		str	r3, [r7, #8]
 655 0062 FB68     		ldr	r3, [r7, #12]
 656 0064 83F00043 		eor	r3, r3, #-2147483648
 657 0068 FB60     		str	r3, [r7, #12]
 658              	.LBE3:
 659 006a 04E0     		b	.L31
 660              	.L37:
 192:.\main.c      ****     }
 193:.\main.c      ****     else setRightDir(direction);
 661              		.loc 1 193 0
 662 006c 344B     		ldr	r3, .L39+8
 663 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664 0070 1846     		mov	r0, r3
 665 0072 FFF7FEFF 		bl	setRightDir
 666              	.L31:
 194:.\main.c      ****     
 195:.\main.c      ****     if(left < 0)
 667              		.loc 1 195 0
 668 0076 D7E90001 		ldrd	r0, [r7]
 669 007a 4FF00002 		mov	r2, #0
 670 007e 4FF00003 		mov	r3, #0
 671 0082 FFF7FEFF 		bl	__aeabi_dcmplt
 672 0086 0346     		mov	r3, r0
 673 0088 002B     		cmp	r3, #0
 674 008a 23D0     		beq	.L38
 675              	.LBB4:
 196:.\main.c      ****     {
 197:.\main.c      ****         char mes[16];
 198:.\main.c      ****         sprintf(mes, "left dir: %d\r\n", !direction);
 676              		.loc 1 198 0
 677 008c 2C4B     		ldr	r3, .L39+8
 678 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 679 0090 002B     		cmp	r3, #0
 680 0092 0CBF     		ite	eq
 681 0094 0123     		moveq	r3, #1
 682 0096 0023     		movne	r3, #0
 683 0098 DBB2     		uxtb	r3, r3
 684 009a 1A46     		mov	r2, r3
 685 009c 07F11403 		add	r3, r7, #20
 686 00a0 1846     		mov	r0, r3
 687 00a2 2949     		ldr	r1, .L39+16
 688 00a4 FFF7FEFF 		bl	sprintf
 199:.\main.c      ****         UART_PutString(mes);
 689              		.loc 1 199 0
 690 00a8 07F11403 		add	r3, r7, #20
 691 00ac 1846     		mov	r0, r3
 692 00ae FFF7FEFF 		bl	UART_PutString
 200:.\main.c      ****         setLeftDir(!direction);
 693              		.loc 1 200 0
 694 00b2 234B     		ldr	r3, .L39+8
 695 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 696 00b6 002B     		cmp	r3, #0
 697 00b8 0CBF     		ite	eq
 698 00ba 0123     		moveq	r3, #1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 17


 699 00bc 0023     		movne	r3, #0
 700 00be DBB2     		uxtb	r3, r3
 701 00c0 1846     		mov	r0, r3
 702 00c2 FFF7FEFF 		bl	setLeftDir
 201:.\main.c      ****         left = -left;
 703              		.loc 1 201 0
 704 00c6 3B68     		ldr	r3, [r7]
 705 00c8 3B60     		str	r3, [r7]
 706 00ca 7B68     		ldr	r3, [r7, #4]
 707 00cc 83F00043 		eor	r3, r3, #-2147483648
 708 00d0 7B60     		str	r3, [r7, #4]
 709              	.LBE4:
 710 00d2 04E0     		b	.L34
 711              	.L38:
 202:.\main.c      ****     }
 203:.\main.c      ****     else setLeftDir(direction);
 712              		.loc 1 203 0
 713 00d4 1A4B     		ldr	r3, .L39+8
 714 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 715 00d8 1846     		mov	r0, r3
 716 00da FFF7FEFF 		bl	setLeftDir
 717              	.L34:
 204:.\main.c      ****     
 205:.\main.c      ****     uint8 countsLeft = left*QUAD_RATIO;
 718              		.loc 1 205 0
 719 00de D7E90001 		ldrd	r0, [r7]
 720 00e2 15A3     		adr	r3, .L39
 721 00e4 D3E90023 		ldrd	r2, [r3]
 722 00e8 FFF7FEFF 		bl	__aeabi_dmul
 723 00ec 0246     		mov	r2, r0
 724 00ee 0B46     		mov	r3, r1
 725 00f0 1046     		mov	r0, r2
 726 00f2 1946     		mov	r1, r3
 727 00f4 FFF7FEFF 		bl	__aeabi_d2uiz
 728 00f8 0346     		mov	r3, r0
 729 00fa 87F83730 		strb	r3, [r7, #55]
 206:.\main.c      ****     uint8 countsRight = right*QUAD_RATIO;
 730              		.loc 1 206 0
 731 00fe D7E90201 		ldrd	r0, [r7, #8]
 732 0102 0DA3     		adr	r3, .L39
 733 0104 D3E90023 		ldrd	r2, [r3]
 734 0108 FFF7FEFF 		bl	__aeabi_dmul
 735 010c 0246     		mov	r2, r0
 736 010e 0B46     		mov	r3, r1
 737 0110 1046     		mov	r0, r2
 738 0112 1946     		mov	r1, r3
 739 0114 FFF7FEFF 		bl	__aeabi_d2uiz
 740 0118 0346     		mov	r3, r0
 741 011a 87F83630 		strb	r3, [r7, #54]
 207:.\main.c      ****     
 208:.\main.c      ****     leftSpeedLimit = countsRight;
 742              		.loc 1 208 0
 743 011e 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 744 0122 9AB2     		uxth	r2, r3
 745 0124 094B     		ldr	r3, .L39+20
 746 0126 1A80     		strh	r2, [r3]	@ movhi
 209:.\main.c      ****     rightSpeedLimit = countsLeft;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 18


 747              		.loc 1 209 0
 748 0128 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 749 012c 9AB2     		uxth	r2, r3
 750 012e 084B     		ldr	r3, .L39+24
 751 0130 1A80     		strh	r2, [r3]	@ movhi
 210:.\main.c      **** }
 752              		.loc 1 210 0
 753 0132 3837     		adds	r7, r7, #56
 754              		.cfi_def_cfa_offset 8
 755 0134 BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 0136 80BD     		pop	{r7, pc}
 759              	.L40:
 760              		.align	3
 761              	.L39:
 762 0138 969526A5 		.word	-1524197994
 763 013c A0DBEF3F 		.word	1072683936
 764 0140 00000000 		.word	direction
 765 0144 0C000000 		.word	.LC1
 766 0148 1C000000 		.word	.LC2
 767 014c 00000000 		.word	leftSpeedLimit
 768 0150 00000000 		.word	rightSpeedLimit
 769              		.cfi_endproc
 770              	.LFE67:
 771              		.size	setSpeed, .-setSpeed
 772 0154 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 773              		.align	2
 774              		.global	brakeLeft
 775              		.thumb
 776              		.thumb_func
 777              		.type	brakeLeft, %function
 778              	brakeLeft:
 779              	.LFB68:
 211:.\main.c      **** 
 212:.\main.c      **** void brakeLeft()
 213:.\main.c      **** {
 780              		.loc 1 213 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784 0000 80B5     		push	{r7, lr}
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 214:.\main.c      ****     PWM_1_WriteCompare(0);
 790              		.loc 1 214 0
 791 0004 0020     		movs	r0, #0
 792 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 215:.\main.c      ****     left_duty_cycle = 0;
 793              		.loc 1 215 0
 794 000a 024B     		ldr	r3, .L42
 795 000c 0022     		movs	r2, #0
 796 000e 1A80     		strh	r2, [r3]	@ movhi
 216:.\main.c      **** }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 19


 797              		.loc 1 216 0
 798 0010 80BD     		pop	{r7, pc}
 799              	.L43:
 800 0012 00BF     		.align	2
 801              	.L42:
 802 0014 00000000 		.word	left_duty_cycle
 803              		.cfi_endproc
 804              	.LFE68:
 805              		.size	brakeLeft, .-brakeLeft
 806              		.section	.text.brakeRight,"ax",%progbits
 807              		.align	2
 808              		.global	brakeRight
 809              		.thumb
 810              		.thumb_func
 811              		.type	brakeRight, %function
 812              	brakeRight:
 813              	.LFB69:
 217:.\main.c      **** 
 218:.\main.c      **** void brakeRight()
 219:.\main.c      **** {
 814              		.loc 1 219 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818 0000 80B5     		push	{r7, lr}
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 7, -8
 821              		.cfi_offset 14, -4
 822 0002 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 220:.\main.c      ****      PWM_2_WriteCompare(0);
 824              		.loc 1 220 0
 825 0004 0020     		movs	r0, #0
 826 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 221:.\main.c      ****      right_duty_cycle = 0;
 827              		.loc 1 221 0
 828 000a 024B     		ldr	r3, .L45
 829 000c 0022     		movs	r2, #0
 830 000e 1A80     		strh	r2, [r3]	@ movhi
 222:.\main.c      **** }
 831              		.loc 1 222 0
 832 0010 80BD     		pop	{r7, pc}
 833              	.L46:
 834 0012 00BF     		.align	2
 835              	.L45:
 836 0014 00000000 		.word	right_duty_cycle
 837              		.cfi_endproc
 838              	.LFE69:
 839              		.size	brakeRight, .-brakeRight
 840              		.section	.text.brakeMotor,"ax",%progbits
 841              		.align	2
 842              		.global	brakeMotor
 843              		.thumb
 844              		.thumb_func
 845              		.type	brakeMotor, %function
 846              	brakeMotor:
 847              	.LFB70:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 20


 223:.\main.c      **** 
 224:.\main.c      **** void brakeMotor(){
 848              		.loc 1 224 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 80B5     		push	{r7, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 7, -8
 855              		.cfi_offset 14, -4
 856 0002 00AF     		add	r7, sp, #0
 857              		.cfi_def_cfa_register 7
 225:.\main.c      ****     setSpeed(0, 0);
 858              		.loc 1 225 0
 859 0004 4FF00000 		mov	r0, #0
 860 0008 4FF00001 		mov	r1, #0
 861 000c 4FF00002 		mov	r2, #0
 862 0010 4FF00003 		mov	r3, #0
 863 0014 FFF7FEFF 		bl	setSpeed
 226:.\main.c      ****     brakeLeft();
 864              		.loc 1 226 0
 865 0018 FFF7FEFF 		bl	brakeLeft
 227:.\main.c      ****     brakeRight();
 866              		.loc 1 227 0
 867 001c FFF7FEFF 		bl	brakeRight
 228:.\main.c      **** }
 868              		.loc 1 228 0
 869 0020 80BD     		pop	{r7, pc}
 870              		.cfi_endproc
 871              	.LFE70:
 872              		.size	brakeMotor, .-brakeMotor
 873 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 874              		.align	2
 875              		.global	driveForwards
 876              		.thumb
 877              		.thumb_func
 878              		.type	driveForwards, %function
 879              	driveForwards:
 880              	.LFB71:
 229:.\main.c      **** 
 230:.\main.c      **** 
 231:.\main.c      **** void driveForwards()
 232:.\main.c      **** {
 881              		.loc 1 232 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885 0000 80B5     		push	{r7, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0002 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 233:.\main.c      ****     setSpeed(20, 20);
 891              		.loc 1 233 0
 892 0004 4FF00000 		mov	r0, #0
 893 0008 0349     		ldr	r1, .L49
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 21


 894 000a 4FF00002 		mov	r2, #0
 895 000e 024B     		ldr	r3, .L49
 896 0010 FFF7FEFF 		bl	setSpeed
 234:.\main.c      **** }
 897              		.loc 1 234 0
 898 0014 80BD     		pop	{r7, pc}
 899              	.L50:
 900 0016 00BF     		.align	2
 901              	.L49:
 902 0018 00003440 		.word	1077149696
 903              		.cfi_endproc
 904              	.LFE71:
 905              		.size	driveForwards, .-driveForwards
 906              		.section	.text.turnLeft,"ax",%progbits
 907              		.align	2
 908              		.global	turnLeft
 909              		.thumb
 910              		.thumb_func
 911              		.type	turnLeft, %function
 912              	turnLeft:
 913              	.LFB72:
 235:.\main.c      **** 
 236:.\main.c      **** void turnLeft()
 237:.\main.c      **** {
 914              		.loc 1 237 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918 0000 80B5     		push	{r7, lr}
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 00AF     		add	r7, sp, #0
 923              		.cfi_def_cfa_register 7
 238:.\main.c      ****     setSpeed(0,20);
 924              		.loc 1 238 0
 925 0004 4FF00000 		mov	r0, #0
 926 0008 4FF00001 		mov	r1, #0
 927 000c 4FF00002 		mov	r2, #0
 928 0010 014B     		ldr	r3, .L52
 929 0012 FFF7FEFF 		bl	setSpeed
 239:.\main.c      **** }
 930              		.loc 1 239 0
 931 0016 80BD     		pop	{r7, pc}
 932              	.L53:
 933              		.align	2
 934              	.L52:
 935 0018 00003440 		.word	1077149696
 936              		.cfi_endproc
 937              	.LFE72:
 938              		.size	turnLeft, .-turnLeft
 939              		.section	.text.turnRight,"ax",%progbits
 940              		.align	2
 941              		.global	turnRight
 942              		.thumb
 943              		.thumb_func
 944              		.type	turnRight, %function
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 22


 945              	turnRight:
 946              	.LFB73:
 240:.\main.c      **** 
 241:.\main.c      **** void turnRight()
 242:.\main.c      **** {
 947              		.loc 1 242 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951 0000 80B5     		push	{r7, lr}
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 00AF     		add	r7, sp, #0
 956              		.cfi_def_cfa_register 7
 243:.\main.c      ****     setSpeed(20,0);
 957              		.loc 1 243 0
 958 0004 4FF00000 		mov	r0, #0
 959 0008 0349     		ldr	r1, .L55
 960 000a 4FF00002 		mov	r2, #0
 961 000e 4FF00003 		mov	r3, #0
 962 0012 FFF7FEFF 		bl	setSpeed
 244:.\main.c      **** }
 963              		.loc 1 244 0
 964 0016 80BD     		pop	{r7, pc}
 965              	.L56:
 966              		.align	2
 967              	.L55:
 968 0018 00003440 		.word	1077149696
 969              		.cfi_endproc
 970              	.LFE73:
 971              		.size	turnRight, .-turnRight
 972              		.section	.text.initTurnLeft,"ax",%progbits
 973              		.align	2
 974              		.global	initTurnLeft
 975              		.thumb
 976              		.thumb_func
 977              		.type	initTurnLeft, %function
 978              	initTurnLeft:
 979              	.LFB74:
 245:.\main.c      **** 
 246:.\main.c      **** void initTurnLeft(){
 980              		.loc 1 246 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
 247:.\main.c      ****     Timer_2_Stop();
 990              		.loc 1 247 0
 991 0004 FFF7FEFF 		bl	Timer_2_Stop
 248:.\main.c      ****     movement_state = LTURN;
 992              		.loc 1 248 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 23


 993 0008 064B     		ldr	r3, .L58
 994 000a 0122     		movs	r2, #1
 995 000c 1A70     		strb	r2, [r3]
 249:.\main.c      ****     brakeLeft();
 996              		.loc 1 249 0
 997 000e FFF7FEFF 		bl	brakeLeft
 250:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 998              		.loc 1 250 0
 999 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1000 0016 0346     		mov	r3, r0
 1001 0018 1A46     		mov	r2, r3
 1002 001a 034B     		ldr	r3, .L58+4
 1003 001c 1A80     		strh	r2, [r3]	@ movhi
 251:.\main.c      ****     Timer_2_Start();
 1004              		.loc 1 251 0
 1005 001e FFF7FEFF 		bl	Timer_2_Start
 252:.\main.c      **** }
 1006              		.loc 1 252 0
 1007 0022 80BD     		pop	{r7, pc}
 1008              	.L59:
 1009              		.align	2
 1010              	.L58:
 1011 0024 00000000 		.word	movement_state
 1012 0028 00000000 		.word	start_turn_count
 1013              		.cfi_endproc
 1014              	.LFE74:
 1015              		.size	initTurnLeft, .-initTurnLeft
 1016              		.section	.text.initTurnRight,"ax",%progbits
 1017              		.align	2
 1018              		.global	initTurnRight
 1019              		.thumb
 1020              		.thumb_func
 1021              		.type	initTurnRight, %function
 1022              	initTurnRight:
 1023              	.LFB75:
 253:.\main.c      **** 
 254:.\main.c      **** void initTurnRight(){
 1024              		.loc 1 254 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 1, uses_anonymous_args = 0
 1028 0000 80B5     		push	{r7, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 1032 0002 00AF     		add	r7, sp, #0
 1033              		.cfi_def_cfa_register 7
 255:.\main.c      ****     Timer_2_Stop();
 1034              		.loc 1 255 0
 1035 0004 FFF7FEFF 		bl	Timer_2_Stop
 256:.\main.c      ****     movement_state = RTURN;
 1036              		.loc 1 256 0
 1037 0008 064B     		ldr	r3, .L61
 1038 000a 0222     		movs	r2, #2
 1039 000c 1A70     		strb	r2, [r3]
 257:.\main.c      ****     brakeRight();
 1040              		.loc 1 257 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 24


 1041 000e FFF7FEFF 		bl	brakeRight
 258:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1042              		.loc 1 258 0
 1043 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1044 0016 0346     		mov	r3, r0
 1045 0018 1A46     		mov	r2, r3
 1046 001a 034B     		ldr	r3, .L61+4
 1047 001c 1A80     		strh	r2, [r3]	@ movhi
 259:.\main.c      ****     Timer_2_Start();
 1048              		.loc 1 259 0
 1049 001e FFF7FEFF 		bl	Timer_2_Start
 260:.\main.c      **** }
 1050              		.loc 1 260 0
 1051 0022 80BD     		pop	{r7, pc}
 1052              	.L62:
 1053              		.align	2
 1054              	.L61:
 1055 0024 00000000 		.word	movement_state
 1056 0028 00000000 		.word	start_turn_count
 1057              		.cfi_endproc
 1058              	.LFE75:
 1059              		.size	initTurnRight, .-initTurnRight
 1060              		.section	.text.initForward,"ax",%progbits
 1061              		.align	2
 1062              		.global	initForward
 1063              		.thumb
 1064              		.thumb_func
 1065              		.type	initForward, %function
 1066              	initForward:
 1067              	.LFB76:
 261:.\main.c      **** 
 262:.\main.c      **** void initForward(){
 1068              		.loc 1 262 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 1, uses_anonymous_args = 0
 1072 0000 80B5     		push	{r7, lr}
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 7, -8
 1075              		.cfi_offset 14, -4
 1076 0002 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 263:.\main.c      ****     brakeMotor();
 1078              		.loc 1 263 0
 1079 0004 FFF7FEFF 		bl	brakeMotor
 264:.\main.c      ****     movement_state = DRIVE;
 1080              		.loc 1 264 0
 1081 0008 014B     		ldr	r3, .L64
 1082 000a 0022     		movs	r2, #0
 1083 000c 1A70     		strb	r2, [r3]
 265:.\main.c      **** }
 1084              		.loc 1 265 0
 1085 000e 80BD     		pop	{r7, pc}
 1086              	.L65:
 1087              		.align	2
 1088              	.L64:
 1089 0010 00000000 		.word	movement_state
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 25


 1090              		.cfi_endproc
 1091              	.LFE76:
 1092              		.size	initForward, .-initForward
 1093              		.section	.text.initBrake,"ax",%progbits
 1094              		.align	2
 1095              		.global	initBrake
 1096              		.thumb
 1097              		.thumb_func
 1098              		.type	initBrake, %function
 1099              	initBrake:
 1100              	.LFB77:
 266:.\main.c      **** 
 267:.\main.c      **** void initBrake(){
 1101              		.loc 1 267 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106 0000 80B4     		push	{r7}
 1107              		.cfi_def_cfa_offset 4
 1108              		.cfi_offset 7, -4
 1109 0002 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
 268:.\main.c      ****     movement_state = STOPPED;
 1111              		.loc 1 268 0
 1112 0004 034B     		ldr	r3, .L67
 1113 0006 0322     		movs	r2, #3
 1114 0008 1A70     		strb	r2, [r3]
 269:.\main.c      **** }
 1115              		.loc 1 269 0
 1116 000a BD46     		mov	sp, r7
 1117              		.cfi_def_cfa_register 13
 1118              		@ sp needed
 1119 000c 5DF8047B 		ldr	r7, [sp], #4
 1120              		.cfi_restore 7
 1121              		.cfi_def_cfa_offset 0
 1122 0010 7047     		bx	lr
 1123              	.L68:
 1124 0012 00BF     		.align	2
 1125              	.L67:
 1126 0014 00000000 		.word	movement_state
 1127              		.cfi_endproc
 1128              	.LFE77:
 1129              		.size	initBrake, .-initBrake
 1130              		.section	.text.initTrack,"ax",%progbits
 1131              		.align	2
 1132              		.global	initTrack
 1133              		.thumb
 1134              		.thumb_func
 1135              		.type	initTrack, %function
 1136              	initTrack:
 1137              	.LFB78:
 270:.\main.c      **** 
 271:.\main.c      **** void initTrack()
 272:.\main.c      **** {
 1138              		.loc 1 272 0
 1139              		.cfi_startproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 26


 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143 0000 80B4     		push	{r7}
 1144              		.cfi_def_cfa_offset 4
 1145              		.cfi_offset 7, -4
 1146 0002 00AF     		add	r7, sp, #0
 1147              		.cfi_def_cfa_register 7
 273:.\main.c      ****     movement_state = TRACKING;
 1148              		.loc 1 273 0
 1149 0004 034B     		ldr	r3, .L70
 1150 0006 0422     		movs	r2, #4
 1151 0008 1A70     		strb	r2, [r3]
 274:.\main.c      **** }
 1152              		.loc 1 274 0
 1153 000a BD46     		mov	sp, r7
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 000c 5DF8047B 		ldr	r7, [sp], #4
 1157              		.cfi_restore 7
 1158              		.cfi_def_cfa_offset 0
 1159 0010 7047     		bx	lr
 1160              	.L71:
 1161 0012 00BF     		.align	2
 1162              	.L70:
 1163 0014 00000000 		.word	movement_state
 1164              		.cfi_endproc
 1165              	.LFE78:
 1166              		.size	initTrack, .-initTrack
 1167              		.section	.text.rxInt,"ax",%progbits
 1168              		.align	2
 1169              		.global	rxInt
 1170              		.thumb
 1171              		.thumb_func
 1172              		.type	rxInt, %function
 1173              	rxInt:
 1174              	.LFB79:
 275:.\main.c      **** 
 276:.\main.c      **** //Binary RF Data
 277:.\main.c      **** CY_ISR(rxInt){
 1175              		.loc 1 277 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 8
 1178              		@ frame_needed = 1, uses_anonymous_args = 0
 1179 0000 B0B5     		push	{r4, r5, r7, lr}
 1180              		.cfi_def_cfa_offset 16
 1181              		.cfi_offset 4, -16
 1182              		.cfi_offset 5, -12
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 82B0     		sub	sp, sp, #8
 1186              		.cfi_def_cfa_offset 24
 1187 0004 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 278:.\main.c      ****     char rf_char = UART_GetChar();
 1189              		.loc 1 278 0
 1190 0006 FFF7FEFF 		bl	UART_GetChar
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 27


 1191 000a 0346     		mov	r3, r0
 1192 000c FB71     		strb	r3, [r7, #7]
 279:.\main.c      ****     if(rf_char == SOP){
 1193              		.loc 1 279 0
 1194 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1195 0010 AA2B     		cmp	r3, #170
 1196 0012 1CD1     		bne	.L73
 280:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 281:.\main.c      ****             if(byteCount == 34)
 1197              		.loc 1 281 0
 1198 0014 1B4B     		ldr	r3, .L77
 1199 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 0018 222B     		cmp	r3, #34
 1201 001a 11D1     		bne	.L74
 282:.\main.c      ****             {
 283:.\main.c      ****                 system_state = buffer_state;
 1202              		.loc 1 283 0
 1203 001c 1A4B     		ldr	r3, .L77+4
 1204 001e 1B4A     		ldr	r2, .L77+8
 1205 0020 1568     		ldr	r5, [r2]	@ unaligned
 1206 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1207 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1208 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1209 0028 1D60     		str	r5, [r3]	@ unaligned
 1210 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1211 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1212 002e D960     		str	r1, [r3, #12]	@ unaligned
 1213 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1214 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1215 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1216 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1217 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1218 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1219 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1220 003e D961     		str	r1, [r3, #28]	@ unaligned
 1221              	.L74:
 284:.\main.c      ****             }
 285:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1222              		.loc 1 285 0
 1223 0040 104B     		ldr	r3, .L77
 1224 0042 0222     		movs	r2, #2
 1225 0044 1A70     		strb	r2, [r3]
 286:.\main.c      ****             flag_rx = 0;
 1226              		.loc 1 286 0
 1227 0046 124B     		ldr	r3, .L77+12
 1228 0048 0022     		movs	r2, #0
 1229 004a 1A70     		strb	r2, [r3]
 1230 004c 16E0     		b	.L72
 1231              	.L73:
 287:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 288:.\main.c      ****         }
 289:.\main.c      ****         else
 290:.\main.c      ****         {
 291:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1232              		.loc 1 291 0
 1233 004e 0D4B     		ldr	r3, .L77
 1234 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 28


 1235 0052 03F00103 		and	r3, r3, #1
 1236 0056 0F49     		ldr	r1, .L77+16
 1237 0058 FA79     		ldrb	r2, [r7, #7]
 1238 005a CA54     		strb	r2, [r1, r3]
 292:.\main.c      ****            
 293:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1239              		.loc 1 293 0
 1240 005c 094B     		ldr	r3, .L77
 1241 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1242 0060 03F00103 		and	r3, r3, #1
 1243 0064 DBB2     		uxtb	r3, r3
 1244 0066 002B     		cmp	r3, #0
 1245 0068 02D0     		beq	.L76
 294:.\main.c      ****             {
 295:.\main.c      ****                 flag_rx = 1;
 1246              		.loc 1 295 0
 1247 006a 094B     		ldr	r3, .L77+12
 1248 006c 0122     		movs	r2, #1
 1249 006e 1A70     		strb	r2, [r3]
 1250              	.L76:
 296:.\main.c      ****             }
 297:.\main.c      ****             byteCount = (byteCount + 1);
 1251              		.loc 1 297 0
 1252 0070 044B     		ldr	r3, .L77
 1253 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1254 0074 0133     		adds	r3, r3, #1
 1255 0076 DAB2     		uxtb	r2, r3
 1256 0078 024B     		ldr	r3, .L77
 1257 007a 1A70     		strb	r2, [r3]
 1258              	.L72:
 298:.\main.c      ****         }
 299:.\main.c      **** }
 1259              		.loc 1 299 0
 1260 007c 0837     		adds	r7, r7, #8
 1261              		.cfi_def_cfa_offset 16
 1262 007e BD46     		mov	sp, r7
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 0080 B0BD     		pop	{r4, r5, r7, pc}
 1266              	.L78:
 1267 0082 00BF     		.align	2
 1268              	.L77:
 1269 0084 00000000 		.word	byteCount
 1270 0088 00000000 		.word	system_state
 1271 008c 00000000 		.word	buffer_state
 1272 0090 00000000 		.word	flag_rx
 1273 0094 00000000 		.word	packet
 1274              		.cfi_endproc
 1275              	.LFE79:
 1276              		.size	rxInt, .-rxInt
 1277              		.section	.text.BT_rxInt,"ax",%progbits
 1278              		.align	2
 1279              		.global	BT_rxInt
 1280              		.thumb
 1281              		.thumb_func
 1282              		.type	BT_rxInt, %function
 1283              	BT_rxInt:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 29


 1284              	.LFB80:
 300:.\main.c      **** 
 301:.\main.c      **** CY_ISR(BT_rxInt)
 302:.\main.c      **** {
 1285              		.loc 1 302 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 8
 1288              		@ frame_needed = 1, uses_anonymous_args = 0
 1289 0000 80B5     		push	{r7, lr}
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 7, -8
 1292              		.cfi_offset 14, -4
 1293 0002 82B0     		sub	sp, sp, #8
 1294              		.cfi_def_cfa_offset 16
 1295 0004 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
 303:.\main.c      ****     char rf_char = UART_GetChar();
 1297              		.loc 1 303 0
 1298 0006 FFF7FEFF 		bl	UART_GetChar
 1299 000a 0346     		mov	r3, r0
 1300 000c FB71     		strb	r3, [r7, #7]
 304:.\main.c      ****     switch(rf_char){
 1301              		.loc 1 304 0
 1302 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1303 0010 613B     		subs	r3, r3, #97
 1304 0012 162B     		cmp	r3, #22
 1305 0014 42D8     		bhi	.L79
 1306 0016 01A2     		adr	r2, .L82
 1307 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1308              		.p2align 2
 1309              	.L82:
 1310 001c 79000000 		.word	.L81+1
 1311 0020 9D000000 		.word	.L79+1
 1312 0024 9D000000 		.word	.L79+1
 1313 0028 8B000000 		.word	.L83+1
 1314 002c 9D000000 		.word	.L79+1
 1315 0030 91000000 		.word	.L84+1
 1316 0034 9D000000 		.word	.L79+1
 1317 0038 9D000000 		.word	.L79+1
 1318 003c 9D000000 		.word	.L79+1
 1319 0040 9D000000 		.word	.L79+1
 1320 0044 9D000000 		.word	.L79+1
 1321 0048 9D000000 		.word	.L79+1
 1322 004c 9D000000 		.word	.L79+1
 1323 0050 9D000000 		.word	.L79+1
 1324 0054 9D000000 		.word	.L79+1
 1325 0058 9D000000 		.word	.L79+1
 1326 005c 9D000000 		.word	.L79+1
 1327 0060 9D000000 		.word	.L79+1
 1328 0064 85000000 		.word	.L85+1
 1329 0068 97000000 		.word	.L86+1
 1330 006c 9D000000 		.word	.L79+1
 1331 0070 9D000000 		.word	.L79+1
 1332 0074 7F000000 		.word	.L87+1
 1333              		.p2align 1
 1334              	.L81:
 305:.\main.c      ****     case 'a':
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 30


 306:.\main.c      ****         initTurnLeft();
 1335              		.loc 1 306 0
 1336 0078 FFF7FEFF 		bl	initTurnLeft
 307:.\main.c      ****         break;
 1337              		.loc 1 307 0
 1338 007c 0EE0     		b	.L79
 1339              	.L87:
 308:.\main.c      ****     case 'w':
 309:.\main.c      ****         initForward();
 1340              		.loc 1 309 0
 1341 007e FFF7FEFF 		bl	initForward
 310:.\main.c      ****         break;
 1342              		.loc 1 310 0
 1343 0082 0BE0     		b	.L79
 1344              	.L85:
 311:.\main.c      ****     case 's': 
 312:.\main.c      ****         reverseDirection();
 1345              		.loc 1 312 0
 1346 0084 FFF7FEFF 		bl	reverseDirection
 313:.\main.c      ****         break;
 1347              		.loc 1 313 0
 1348 0088 08E0     		b	.L79
 1349              	.L83:
 314:.\main.c      ****     case 'd':
 315:.\main.c      ****         initTurnRight();
 1350              		.loc 1 315 0
 1351 008a FFF7FEFF 		bl	initTurnRight
 316:.\main.c      ****         break;
 1352              		.loc 1 316 0
 1353 008e 05E0     		b	.L79
 1354              	.L84:
 317:.\main.c      ****     case 'f':
 318:.\main.c      ****         initBrake();
 1355              		.loc 1 318 0
 1356 0090 FFF7FEFF 		bl	initBrake
 319:.\main.c      ****         break;
 1357              		.loc 1 319 0
 1358 0094 02E0     		b	.L79
 1359              	.L86:
 320:.\main.c      ****     case('t'):
 321:.\main.c      ****         initTrack();
 1360              		.loc 1 321 0
 1361 0096 FFF7FEFF 		bl	initTrack
 322:.\main.c      ****         break;
 1362              		.loc 1 322 0
 1363 009a 00BF     		nop
 1364              	.L79:
 323:.\main.c      ****     }
 324:.\main.c      **** }
 1365              		.loc 1 324 0
 1366 009c 0837     		adds	r7, r7, #8
 1367              		.cfi_def_cfa_offset 8
 1368 009e BD46     		mov	sp, r7
 1369              		.cfi_def_cfa_register 13
 1370              		@ sp needed
 1371 00a0 80BD     		pop	{r7, pc}
 1372              		.cfi_endproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 31


 1373              	.LFE80:
 1374              		.size	BT_rxInt, .-BT_rxInt
 1375 00a2 00BF     		.section	.text.BT_txInt,"ax",%progbits
 1376              		.align	2
 1377              		.global	BT_txInt
 1378              		.thumb
 1379              		.thumb_func
 1380              		.type	BT_txInt, %function
 1381              	BT_txInt:
 1382              	.LFB81:
 325:.\main.c      **** 
 326:.\main.c      **** //BT
 327:.\main.c      **** CY_ISR(BT_txInt)
 328:.\main.c      **** {
 1383              		.loc 1 328 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 1, uses_anonymous_args = 0
 1387              		@ link register save eliminated.
 1388 0000 80B4     		push	{r7}
 1389              		.cfi_def_cfa_offset 4
 1390              		.cfi_offset 7, -4
 1391 0002 00AF     		add	r7, sp, #0
 1392              		.cfi_def_cfa_register 7
 329:.\main.c      ****     
 330:.\main.c      **** }
 1393              		.loc 1 330 0
 1394 0004 BD46     		mov	sp, r7
 1395              		.cfi_def_cfa_register 13
 1396              		@ sp needed
 1397 0006 5DF8047B 		ldr	r7, [sp], #4
 1398              		.cfi_restore 7
 1399              		.cfi_def_cfa_offset 0
 1400 000a 7047     		bx	lr
 1401              		.cfi_endproc
 1402              	.LFE81:
 1403              		.size	BT_txInt, .-BT_txInt
 1404              		.section	.text.adc_isr,"ax",%progbits
 1405              		.align	2
 1406              		.global	adc_isr
 1407              		.thumb
 1408              		.thumb_func
 1409              		.type	adc_isr, %function
 1410              	adc_isr:
 1411              	.LFB82:
 331:.\main.c      **** 
 332:.\main.c      **** //ADC:
 333:.\main.c      **** CY_ISR (adc_isr)
 334:.\main.c      **** {
 1412              		.loc 1 334 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416 0000 80B5     		push	{r7, lr}
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 7, -8
 1419              		.cfi_offset 14, -4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 32


 1420 0002 00AF     		add	r7, sp, #0
 1421              		.cfi_def_cfa_register 7
 335:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 336:.\main.c      ****     adc_result = ADC_GetResult16();
 1422              		.loc 1 336 0
 1423 0004 FFF7FEFF 		bl	ADC_GetResult16
 1424 0008 0346     		mov	r3, r0
 1425 000a 1A46     		mov	r2, r3
 1426 000c 044B     		ldr	r3, .L90
 1427 000e 1A80     		strh	r2, [r3]	@ movhi
 337:.\main.c      ****     flag_receive_ADC = 1;
 1428              		.loc 1 337 0
 1429 0010 044B     		ldr	r3, .L90+4
 1430 0012 0122     		movs	r2, #1
 1431 0014 1A70     		strb	r2, [r3]
 338:.\main.c      ****     flag_print_rf = 1;
 1432              		.loc 1 338 0
 1433 0016 044B     		ldr	r3, .L90+8
 1434 0018 0122     		movs	r2, #1
 1435 001a 1A70     		strb	r2, [r3]
 339:.\main.c      ****     //LED_Write(~LED_Read());
 340:.\main.c      **** }
 1436              		.loc 1 340 0
 1437 001c 80BD     		pop	{r7, pc}
 1438              	.L91:
 1439 001e 00BF     		.align	2
 1440              	.L90:
 1441 0020 00000000 		.word	adc_result
 1442 0024 00000000 		.word	flag_receive_ADC
 1443 0028 00000000 		.word	flag_print_rf
 1444              		.cfi_endproc
 1445              	.LFE82:
 1446              		.size	adc_isr, .-adc_isr
 1447              		.section	.text.isr_quad1,"ax",%progbits
 1448              		.align	2
 1449              		.global	isr_quad1
 1450              		.thumb
 1451              		.thumb_func
 1452              		.type	isr_quad1, %function
 1453              	isr_quad1:
 1454              	.LFB83:
 341:.\main.c      **** 
 342:.\main.c      **** CY_ISR (isr_quad1)
 343:.\main.c      **** {
 1455              		.loc 1 343 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459 0000 80B5     		push	{r7, lr}
 1460              		.cfi_def_cfa_offset 8
 1461              		.cfi_offset 7, -8
 1462              		.cfi_offset 14, -4
 1463 0002 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 344:.\main.c      ****     //LED_Write(~LED_Read());
 345:.\main.c      ****     last_quad_count1 = quad_count1;
 1465              		.loc 1 345 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 33


 1466 0004 244B     		ldr	r3, .L94
 1467 0006 1A88     		ldrh	r2, [r3]
 1468 0008 244B     		ldr	r3, .L94+4
 1469 000a 1A80     		strh	r2, [r3]	@ movhi
 346:.\main.c      ****     last_quad_count2 = quad_count2;
 1470              		.loc 1 346 0
 1471 000c 244B     		ldr	r3, .L94+8
 1472 000e 1A88     		ldrh	r2, [r3]
 1473 0010 244B     		ldr	r3, .L94+12
 1474 0012 1A80     		strh	r2, [r3]	@ movhi
 347:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1475              		.loc 1 347 0
 1476 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1477 0018 0346     		mov	r3, r0
 1478 001a 1A46     		mov	r2, r3
 1479 001c 1E4B     		ldr	r3, .L94
 1480 001e 1A80     		strh	r2, [r3]	@ movhi
 348:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1481              		.loc 1 348 0
 1482 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1483 0024 0346     		mov	r3, r0
 1484 0026 1A46     		mov	r2, r3
 1485 0028 1D4B     		ldr	r3, .L94+8
 1486 002a 1A80     		strh	r2, [r3]	@ movhi
 349:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1487              		.loc 1 349 0
 1488 002c 1A4B     		ldr	r3, .L94
 1489 002e 1B88     		ldrh	r3, [r3]
 1490 0030 9AB2     		uxth	r2, r3
 1491 0032 1A4B     		ldr	r3, .L94+4
 1492 0034 1B88     		ldrh	r3, [r3]
 1493 0036 9BB2     		uxth	r3, r3
 1494 0038 D31A     		subs	r3, r2, r3
 1495 003a 9BB2     		uxth	r3, r3
 1496 003c 9AB2     		uxth	r2, r3
 1497 003e 1A4B     		ldr	r3, .L94+16
 1498 0040 1A80     		strh	r2, [r3]	@ movhi
 350:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1499              		.loc 1 350 0
 1500 0042 174B     		ldr	r3, .L94+8
 1501 0044 1B88     		ldrh	r3, [r3]
 1502 0046 9AB2     		uxth	r2, r3
 1503 0048 164B     		ldr	r3, .L94+12
 1504 004a 1B88     		ldrh	r3, [r3]
 1505 004c 9BB2     		uxth	r3, r3
 1506 004e D31A     		subs	r3, r2, r3
 1507 0050 9BB2     		uxth	r3, r3
 1508 0052 9AB2     		uxth	r2, r3
 1509 0054 154B     		ldr	r3, .L94+20
 1510 0056 1A80     		strh	r2, [r3]	@ movhi
 351:.\main.c      ****     
 352:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1511              		.loc 1 352 0
 1512 0058 0F4B     		ldr	r3, .L94
 1513 005a 1B88     		ldrh	r3, [r3]
 1514 005c 1BB2     		sxth	r3, r3
 1515 005e 40F6B832 		movw	r2, #3000
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 34


 1516 0062 9342     		cmp	r3, r2
 1517 0064 13DD     		ble	.L93
 1518              		.loc 1 352 0 is_stmt 0 discriminator 1
 1519 0066 124B     		ldr	r3, .L94+24
 1520 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 006a 012B     		cmp	r3, #1
 1522 006c 0FD0     		beq	.L93
 1523              		.loc 1 352 0 discriminator 2
 1524 006e 104B     		ldr	r3, .L94+24
 1525 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 0072 022B     		cmp	r3, #2
 1527 0074 0BD0     		beq	.L93
 353:.\main.c      ****     {
 354:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1528              		.loc 1 354 0 is_stmt 1
 1529 0076 0020     		movs	r0, #0
 1530 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 355:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1531              		.loc 1 355 0
 1532 007c 0020     		movs	r0, #0
 1533 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 356:.\main.c      ****         quad_count1 = 0;
 1534              		.loc 1 356 0
 1535 0082 054B     		ldr	r3, .L94
 1536 0084 0022     		movs	r2, #0
 1537 0086 1A80     		strh	r2, [r3]	@ movhi
 357:.\main.c      ****         quad_count2 = 0;
 1538              		.loc 1 357 0
 1539 0088 054B     		ldr	r3, .L94+8
 1540 008a 0022     		movs	r2, #0
 1541 008c 1A80     		strh	r2, [r3]	@ movhi
 1542              	.L93:
 358:.\main.c      ****     }
 359:.\main.c      **** 
 360:.\main.c      ****     flag_calc_wheelspeed = 1;
 1543              		.loc 1 360 0
 1544 008e 094B     		ldr	r3, .L94+28
 1545 0090 0122     		movs	r2, #1
 1546 0092 1A70     		strb	r2, [r3]
 361:.\main.c      **** }
 1547              		.loc 1 361 0
 1548 0094 80BD     		pop	{r7, pc}
 1549              	.L95:
 1550 0096 00BF     		.align	2
 1551              	.L94:
 1552 0098 00000000 		.word	quad_count1
 1553 009c 00000000 		.word	last_quad_count1
 1554 00a0 00000000 		.word	quad_count2
 1555 00a4 00000000 		.word	last_quad_count2
 1556 00a8 00000000 		.word	quad_diff1
 1557 00ac 00000000 		.word	quad_diff2
 1558 00b0 00000000 		.word	movement_state
 1559 00b4 00000000 		.word	flag_calc_wheelspeed
 1560              		.cfi_endproc
 1561              	.LFE83:
 1562              		.size	isr_quad1, .-isr_quad1
 1563              		.section	.text.isr_turn_timer,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 35


 1564              		.align	2
 1565              		.global	isr_turn_timer
 1566              		.thumb
 1567              		.thumb_func
 1568              		.type	isr_turn_timer, %function
 1569              	isr_turn_timer:
 1570              	.LFB84:
 362:.\main.c      **** 
 363:.\main.c      **** CY_ISR(isr_turn_timer)
 364:.\main.c      **** {
 1571              		.loc 1 364 0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 0
 1574              		@ frame_needed = 1, uses_anonymous_args = 0
 1575 0000 80B5     		push	{r7, lr}
 1576              		.cfi_def_cfa_offset 8
 1577              		.cfi_offset 7, -8
 1578              		.cfi_offset 14, -4
 1579 0002 00AF     		add	r7, sp, #0
 1580              		.cfi_def_cfa_register 7
 365:.\main.c      ****     if(movement_state == LTURN)
 1581              		.loc 1 365 0
 1582 0004 184B     		ldr	r3, .L100
 1583 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 0008 012B     		cmp	r3, #1
 1585 000a 14D1     		bne	.L97
 366:.\main.c      ****     {
 367:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1586              		.loc 1 367 0
 1587 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1588 0010 0346     		mov	r3, r0
 1589 0012 1A46     		mov	r2, r3
 1590 0014 154B     		ldr	r3, .L100+4
 1591 0016 1B88     		ldrh	r3, [r3]
 1592 0018 1BB2     		sxth	r3, r3
 1593 001a D31A     		subs	r3, r2, r3
 1594 001c 002B     		cmp	r3, #0
 1595 001e B8BF     		it	lt
 1596 0020 5B42     		rsblt	r3, r3, #0
 1597 0022 CF2B     		cmp	r3, #207
 1598 0024 1FDD     		ble	.L96
 368:.\main.c      ****         {
 369:.\main.c      ****             //movement_state = STOPPED;
 370:.\main.c      ****             brakeMotor();
 1599              		.loc 1 370 0
 1600 0026 FFF7FEFF 		bl	brakeMotor
 371:.\main.c      ****             movement_state = DRIVE;
 1601              		.loc 1 371 0
 1602 002a 0F4B     		ldr	r3, .L100
 1603 002c 0022     		movs	r2, #0
 1604 002e 1A70     		strb	r2, [r3]
 372:.\main.c      ****             Timer_2_Stop();
 1605              		.loc 1 372 0
 1606 0030 FFF7FEFF 		bl	Timer_2_Stop
 1607 0034 17E0     		b	.L96
 1608              	.L97:
 373:.\main.c      ****         }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 36


 374:.\main.c      ****     }
 375:.\main.c      ****     else if (movement_state == RTURN)
 1609              		.loc 1 375 0
 1610 0036 0C4B     		ldr	r3, .L100
 1611 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1612 003a 022B     		cmp	r3, #2
 1613 003c 13D1     		bne	.L96
 376:.\main.c      ****     {
 377:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1614              		.loc 1 377 0
 1615 003e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1616 0042 0346     		mov	r3, r0
 1617 0044 1A46     		mov	r2, r3
 1618 0046 094B     		ldr	r3, .L100+4
 1619 0048 1B88     		ldrh	r3, [r3]
 1620 004a 1BB2     		sxth	r3, r3
 1621 004c D31A     		subs	r3, r2, r3
 1622 004e 002B     		cmp	r3, #0
 1623 0050 B8BF     		it	lt
 1624 0052 5B42     		rsblt	r3, r3, #0
 1625 0054 CF2B     		cmp	r3, #207
 1626 0056 06DD     		ble	.L96
 378:.\main.c      ****         {
 379:.\main.c      ****             //movement_state = STOPPED;
 380:.\main.c      ****             brakeMotor();
 1627              		.loc 1 380 0
 1628 0058 FFF7FEFF 		bl	brakeMotor
 381:.\main.c      ****             movement_state = DRIVE;
 1629              		.loc 1 381 0
 1630 005c 024B     		ldr	r3, .L100
 1631 005e 0022     		movs	r2, #0
 1632 0060 1A70     		strb	r2, [r3]
 382:.\main.c      ****             Timer_2_Stop();
 1633              		.loc 1 382 0
 1634 0062 FFF7FEFF 		bl	Timer_2_Stop
 1635              	.L96:
 383:.\main.c      ****         }
 384:.\main.c      ****     }
 385:.\main.c      **** }
 1636              		.loc 1 385 0
 1637 0066 80BD     		pop	{r7, pc}
 1638              	.L101:
 1639              		.align	2
 1640              	.L100:
 1641 0068 00000000 		.word	movement_state
 1642 006c 00000000 		.word	start_turn_count
 1643              		.cfi_endproc
 1644              	.LFE84:
 1645              		.size	isr_turn_timer, .-isr_turn_timer
 1646              		.section	.text.Stop_on_line,"ax",%progbits
 1647              		.align	2
 1648              		.global	Stop_on_line
 1649              		.thumb
 1650              		.thumb_func
 1651              		.type	Stop_on_line, %function
 1652              	Stop_on_line:
 1653              	.LFB85:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 37


 386:.\main.c      **** 
 387:.\main.c      **** 
 388:.\main.c      **** CY_ISR (Stop_on_line)
 389:.\main.c      **** {
 1654              		.loc 1 389 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 1, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659 0000 80B4     		push	{r7}
 1660              		.cfi_def_cfa_offset 4
 1661              		.cfi_offset 7, -4
 1662 0002 00AF     		add	r7, sp, #0
 1663              		.cfi_def_cfa_register 7
 390:.\main.c      ****     movement_state = STOPPED;
 1664              		.loc 1 390 0
 1665 0004 054B     		ldr	r3, .L104
 1666 0006 0322     		movs	r2, #3
 1667 0008 1A70     		strb	r2, [r3]
 391:.\main.c      ****     if(movement_state != DRIVE) return;
 1668              		.loc 1 391 0
 1669 000a 044B     		ldr	r3, .L104
 1670 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 000e 002B     		cmp	r3, #0
 1672 0010 00D0     		beq	.L102
 1673 0012 00BF     		nop
 1674              	.L102:
 392:.\main.c      ****     //initTurnLeft();
 393:.\main.c      **** }
 1675              		.loc 1 393 0
 1676 0014 BD46     		mov	sp, r7
 1677              		.cfi_def_cfa_register 13
 1678              		@ sp needed
 1679 0016 5DF8047B 		ldr	r7, [sp], #4
 1680              		.cfi_restore 7
 1681              		.cfi_def_cfa_offset 0
 1682 001a 7047     		bx	lr
 1683              	.L105:
 1684              		.align	2
 1685              	.L104:
 1686 001c 00000000 		.word	movement_state
 1687              		.cfi_endproc
 1688              	.LFE85:
 1689              		.size	Stop_on_line, .-Stop_on_line
 1690              		.section	.rodata
 1691 002b 00       		.align	2
 1692              	.LC3:
 1693 002c 53746172 		.ascii	"Starting robot!\015\012\000"
 1693      74696E67 
 1693      20726F62 
 1693      6F74210D 
 1693      0A00
 1694              		.section	.text.button,"ax",%progbits
 1695              		.align	2
 1696              		.global	button
 1697              		.thumb
 1698              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 38


 1699              		.type	button, %function
 1700              	button:
 1701              	.LFB86:
 394:.\main.c      **** 
 395:.\main.c      **** CY_ISR (button)
 396:.\main.c      **** {
 1702              		.loc 1 396 0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 1, uses_anonymous_args = 0
 1706 0000 80B5     		push	{r7, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 00AF     		add	r7, sp, #0
 1711              		.cfi_def_cfa_register 7
 397:.\main.c      ****     if(BT_ENABLED)
 398:.\main.c      ****     {
 399:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1712              		.loc 1 399 0
 1713 0004 0348     		ldr	r0, .L107
 1714 0006 FFF7FEFF 		bl	UART_PutString
 400:.\main.c      ****     }
 401:.\main.c      ****     movement_state = DRIVE;
 1715              		.loc 1 401 0
 1716 000a 034B     		ldr	r3, .L107+4
 1717 000c 0022     		movs	r2, #0
 1718 000e 1A70     		strb	r2, [r3]
 402:.\main.c      **** }
 1719              		.loc 1 402 0
 1720 0010 80BD     		pop	{r7, pc}
 1721              	.L108:
 1722 0012 00BF     		.align	2
 1723              	.L107:
 1724 0014 2C000000 		.word	.LC3
 1725 0018 00000000 		.word	movement_state
 1726              		.cfi_endproc
 1727              	.LFE86:
 1728              		.size	button, .-button
 1729              		.section	.text.isr_adcTimer,"ax",%progbits
 1730              		.align	2
 1731              		.global	isr_adcTimer
 1732              		.thumb
 1733              		.thumb_func
 1734              		.type	isr_adcTimer, %function
 1735              	isr_adcTimer:
 1736              	.LFB87:
 403:.\main.c      **** 
 404:.\main.c      **** CY_ISR(isr_adcTimer)
 405:.\main.c      **** {
 1737              		.loc 1 405 0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 0
 1740              		@ frame_needed = 1, uses_anonymous_args = 0
 1741 0000 80B5     		push	{r7, lr}
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 39


 1744              		.cfi_offset 14, -4
 1745 0002 00AF     		add	r7, sp, #0
 1746              		.cfi_def_cfa_register 7
 406:.\main.c      ****     ADC_StartConvert();
 1747              		.loc 1 406 0
 1748 0004 FFF7FEFF 		bl	ADC_StartConvert
 407:.\main.c      **** }
 1749              		.loc 1 407 0
 1750 0008 80BD     		pop	{r7, pc}
 1751              		.cfi_endproc
 1752              	.LFE87:
 1753              		.size	isr_adcTimer, .-isr_adcTimer
 1754              		.global	__aeabi_i2d
 1755              		.global	__aeabi_d2iz
 1756              		.global	__aeabi_dadd
 1757 000a 00BF     		.section	.text.Quad_Dec_response,"ax",%progbits
 1758              		.align	2
 1759              		.global	Quad_Dec_response
 1760              		.thumb
 1761              		.thumb_func
 1762              		.type	Quad_Dec_response, %function
 1763              	Quad_Dec_response:
 1764              	.LFB88:
 408:.\main.c      **** 
 409:.\main.c      **** void Quad_Dec_response()
 410:.\main.c      **** {
 1765              		.loc 1 410 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 32
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 B0B5     		push	{r4, r5, r7, lr}
 1770              		.cfi_def_cfa_offset 16
 1771              		.cfi_offset 4, -16
 1772              		.cfi_offset 5, -12
 1773              		.cfi_offset 7, -8
 1774              		.cfi_offset 14, -4
 1775 0002 88B0     		sub	sp, sp, #32
 1776              		.cfi_def_cfa_offset 48
 1777 0004 00AF     		add	r7, sp, #0
 1778              		.cfi_def_cfa_register 7
 411:.\main.c      ****     //Check if the flag has been set
 412:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1779              		.loc 1 412 0
 1780 0006 814B     		ldr	r3, .L118
 1781 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1782 000a 002B     		cmp	r3, #0
 1783 000c 00D1     		bne	.L111
 1784 000e FAE0     		b	.L110
 1785              	.L111:
 413:.\main.c      ****     flag_calc_wheelspeed = 0;
 1786              		.loc 1 413 0
 1787 0010 7E4B     		ldr	r3, .L118
 1788 0012 0022     		movs	r2, #0
 1789 0014 1A70     		strb	r2, [r3]
 414:.\main.c      ****     
 415:.\main.c      ****     //char wheel_1_str [64];
 416:.\main.c      ****     //char wheel_2_str [64];
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 40


 417:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 418:.\main.c      ****     //usbPutString(wheel_1_str);
 419:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 420:.\main.c      ****     
 421:.\main.c      ****     //usbPutString(wheel_2_str);
 422:.\main.c      ****     
 423:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1790              		.loc 1 423 0
 1791 0016 7E4B     		ldr	r3, .L118+4
 1792 0018 1B88     		ldrh	r3, [r3]	@ movhi
 1793 001a FB81     		strh	r3, [r7, #14]	@ movhi
 424:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1794              		.loc 1 424 0
 1795 001c 7D4B     		ldr	r3, .L118+8
 1796 001e 1B88     		ldrh	r3, [r3]	@ movhi
 1797 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 425:.\main.c      ****     double scalingLeft = 1;
 1798              		.loc 1 425 0
 1799 0022 4FF00002 		mov	r2, #0
 1800 0026 7C4B     		ldr	r3, .L118+12
 1801 0028 C7E90623 		strd	r2, [r7, #24]
 426:.\main.c      ****     double scalingRight = 1;
 1802              		.loc 1 426 0
 1803 002c 4FF00002 		mov	r2, #0
 1804 0030 794B     		ldr	r3, .L118+12
 1805 0032 C7E90423 		strd	r2, [r7, #16]
 427:.\main.c      ****     
 428:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 429:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 1806              		.loc 1 429 0
 1807 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 1808 003a 002B     		cmp	r3, #0
 1809 003c 0DD1     		bne	.L113
 1810              		.loc 1 429 0 is_stmt 0 discriminator 1
 1811 003e B7F90C30 		ldrsh	r3, [r7, #12]
 1812 0042 002B     		cmp	r3, #0
 1813 0044 09D1     		bne	.L113
 430:.\main.c      ****        //leftSpeed = 3;
 431:.\main.c      ****         scalingLeft = 8;
 1814              		.loc 1 431 0 is_stmt 1
 1815 0046 4FF00002 		mov	r2, #0
 1816 004a 744B     		ldr	r3, .L118+16
 1817 004c C7E90623 		strd	r2, [r7, #24]
 432:.\main.c      ****         scalingRight = 8;
 1818              		.loc 1 432 0
 1819 0050 4FF00002 		mov	r2, #0
 1820 0054 714B     		ldr	r3, .L118+16
 1821 0056 C7E90423 		strd	r2, [r7, #16]
 1822              	.L113:
 433:.\main.c      ****     }
 434:.\main.c      **** 
 435:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1823              		.loc 1 435 0
 1824 005a 714B     		ldr	r3, .L118+20
 1825 005c 1B88     		ldrh	r3, [r3]
 1826 005e 1AB2     		sxth	r2, r3
 1827 0060 B7F90E30 		ldrsh	r3, [r7, #14]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 41


 1828 0064 002B     		cmp	r3, #0
 1829 0066 B8BF     		it	lt
 1830 0068 5B42     		rsblt	r3, r3, #0
 1831 006a D31A     		subs	r3, r2, r3
 1832 006c BB60     		str	r3, [r7, #8]
 436:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 1833              		.loc 1 436 0
 1834 006e BB68     		ldr	r3, [r7, #8]
 1835 0070 83EAE372 		eor	r2, r3, r3, asr #31
 1836 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 1837 0078 BB68     		ldr	r3, [r7, #8]
 1838 007a 92FBF3F3 		sdiv	r3, r2, r3
 1839 007e 1846     		mov	r0, r3
 1840 0080 FFF7FEFF 		bl	__aeabi_i2d
 1841 0084 0446     		mov	r4, r0
 1842 0086 0D46     		mov	r5, r1
 1843 0088 BB68     		ldr	r3, [r7, #8]
 1844 008a 002B     		cmp	r3, #0
 1845 008c B8BF     		it	lt
 1846 008e 5B42     		rsblt	r3, r3, #0
 1847 0090 1846     		mov	r0, r3
 1848 0092 FFF7FEFF 		bl	__aeabi_i2d
 1849 0096 0246     		mov	r2, r0
 1850 0098 0B46     		mov	r3, r1
 1851 009a 1046     		mov	r0, r2
 1852 009c 1946     		mov	r1, r3
 1853 009e FFF7FEFF 		bl	sqrt
 1854 00a2 0246     		mov	r2, r0
 1855 00a4 0B46     		mov	r3, r1
 1856 00a6 2046     		mov	r0, r4
 1857 00a8 2946     		mov	r1, r5
 1858 00aa FFF7FEFF 		bl	__aeabi_dmul
 1859 00ae 0246     		mov	r2, r0
 1860 00b0 0B46     		mov	r3, r1
 1861 00b2 1046     		mov	r0, r2
 1862 00b4 1946     		mov	r1, r3
 1863 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 1864 00ba 0346     		mov	r3, r0
 1865 00bc 7B60     		str	r3, [r7, #4]
 437:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 1866              		.loc 1 437 0
 1867 00be 594B     		ldr	r3, .L118+24
 1868 00c0 1B88     		ldrh	r3, [r3]
 1869 00c2 1BB2     		sxth	r3, r3
 1870 00c4 1846     		mov	r0, r3
 1871 00c6 FFF7FEFF 		bl	__aeabi_i2d
 1872 00ca 0446     		mov	r4, r0
 1873 00cc 0D46     		mov	r5, r1
 1874 00ce 7868     		ldr	r0, [r7, #4]
 1875 00d0 FFF7FEFF 		bl	__aeabi_i2d
 1876 00d4 0246     		mov	r2, r0
 1877 00d6 0B46     		mov	r3, r1
 1878 00d8 1046     		mov	r0, r2
 1879 00da 1946     		mov	r1, r3
 1880 00dc D7E90623 		ldrd	r2, [r7, #24]
 1881 00e0 FFF7FEFF 		bl	__aeabi_dmul
 1882 00e4 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 42


 1883 00e6 0B46     		mov	r3, r1
 1884 00e8 2046     		mov	r0, r4
 1885 00ea 2946     		mov	r1, r5
 1886 00ec FFF7FEFF 		bl	__aeabi_dadd
 1887 00f0 0246     		mov	r2, r0
 1888 00f2 0B46     		mov	r3, r1
 1889 00f4 1046     		mov	r0, r2
 1890 00f6 1946     		mov	r1, r3
 1891 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 1892 00fc 0346     		mov	r3, r0
 1893 00fe 9AB2     		uxth	r2, r3
 1894 0100 484B     		ldr	r3, .L118+24
 1895 0102 1A80     		strh	r2, [r3]	@ movhi
 438:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 1896              		.loc 1 438 0
 1897 0104 484B     		ldr	r3, .L118+28
 1898 0106 1B88     		ldrh	r3, [r3]
 1899 0108 1AB2     		sxth	r2, r3
 1900 010a B7F90C30 		ldrsh	r3, [r7, #12]
 1901 010e 002B     		cmp	r3, #0
 1902 0110 B8BF     		it	lt
 1903 0112 5B42     		rsblt	r3, r3, #0
 1904 0114 D31A     		subs	r3, r2, r3
 1905 0116 BB60     		str	r3, [r7, #8]
 439:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1906              		.loc 1 439 0
 1907 0118 BB68     		ldr	r3, [r7, #8]
 1908 011a 83EAE372 		eor	r2, r3, r3, asr #31
 1909 011e A2EBE372 		sub	r2, r2, r3, asr #31
 1910 0122 BB68     		ldr	r3, [r7, #8]
 1911 0124 92FBF3F3 		sdiv	r3, r2, r3
 1912 0128 1846     		mov	r0, r3
 1913 012a FFF7FEFF 		bl	__aeabi_i2d
 1914 012e 0446     		mov	r4, r0
 1915 0130 0D46     		mov	r5, r1
 1916 0132 BB68     		ldr	r3, [r7, #8]
 1917 0134 002B     		cmp	r3, #0
 1918 0136 B8BF     		it	lt
 1919 0138 5B42     		rsblt	r3, r3, #0
 1920 013a 1846     		mov	r0, r3
 1921 013c FFF7FEFF 		bl	__aeabi_i2d
 1922 0140 0246     		mov	r2, r0
 1923 0142 0B46     		mov	r3, r1
 1924 0144 1046     		mov	r0, r2
 1925 0146 1946     		mov	r1, r3
 1926 0148 FFF7FEFF 		bl	sqrt
 1927 014c 0246     		mov	r2, r0
 1928 014e 0B46     		mov	r3, r1
 1929 0150 2046     		mov	r0, r4
 1930 0152 2946     		mov	r1, r5
 1931 0154 FFF7FEFF 		bl	__aeabi_dmul
 1932 0158 0246     		mov	r2, r0
 1933 015a 0B46     		mov	r3, r1
 1934 015c 1046     		mov	r0, r2
 1935 015e 1946     		mov	r1, r3
 1936 0160 FFF7FEFF 		bl	__aeabi_d2iz
 1937 0164 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 43


 1938 0166 7B60     		str	r3, [r7, #4]
 440:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 1939              		.loc 1 440 0
 1940 0168 304B     		ldr	r3, .L118+32
 1941 016a 1B88     		ldrh	r3, [r3]
 1942 016c 1BB2     		sxth	r3, r3
 1943 016e 1846     		mov	r0, r3
 1944 0170 FFF7FEFF 		bl	__aeabi_i2d
 1945 0174 0446     		mov	r4, r0
 1946 0176 0D46     		mov	r5, r1
 1947 0178 7868     		ldr	r0, [r7, #4]
 1948 017a FFF7FEFF 		bl	__aeabi_i2d
 1949 017e 0246     		mov	r2, r0
 1950 0180 0B46     		mov	r3, r1
 1951 0182 1046     		mov	r0, r2
 1952 0184 1946     		mov	r1, r3
 1953 0186 D7E90423 		ldrd	r2, [r7, #16]
 1954 018a FFF7FEFF 		bl	__aeabi_dmul
 1955 018e 0246     		mov	r2, r0
 1956 0190 0B46     		mov	r3, r1
 1957 0192 2046     		mov	r0, r4
 1958 0194 2946     		mov	r1, r5
 1959 0196 FFF7FEFF 		bl	__aeabi_dadd
 1960 019a 0246     		mov	r2, r0
 1961 019c 0B46     		mov	r3, r1
 1962 019e 1046     		mov	r0, r2
 1963 01a0 1946     		mov	r1, r3
 1964 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 1965 01a6 0346     		mov	r3, r0
 1966 01a8 9AB2     		uxth	r2, r3
 1967 01aa 204B     		ldr	r3, .L118+32
 1968 01ac 1A80     		strh	r2, [r3]	@ movhi
 441:.\main.c      ****     
 442:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1969              		.loc 1 442 0
 1970 01ae 1F4B     		ldr	r3, .L118+32
 1971 01b0 1B88     		ldrh	r3, [r3]
 1972 01b2 1BB2     		sxth	r3, r3
 1973 01b4 002B     		cmp	r3, #0
 1974 01b6 02DA     		bge	.L114
 1975              		.loc 1 442 0 is_stmt 0 discriminator 1
 1976 01b8 1C4B     		ldr	r3, .L118+32
 1977 01ba 0022     		movs	r2, #0
 1978 01bc 1A80     		strh	r2, [r3]	@ movhi
 1979              	.L114:
 443:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1980              		.loc 1 443 0 is_stmt 1
 1981 01be 194B     		ldr	r3, .L118+24
 1982 01c0 1B88     		ldrh	r3, [r3]
 1983 01c2 1BB2     		sxth	r3, r3
 1984 01c4 002B     		cmp	r3, #0
 1985 01c6 02DA     		bge	.L115
 1986              		.loc 1 443 0 is_stmt 0 discriminator 1
 1987 01c8 164B     		ldr	r3, .L118+24
 1988 01ca 0022     		movs	r2, #0
 1989 01cc 1A80     		strh	r2, [r3]	@ movhi
 1990              	.L115:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 44


 444:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1991              		.loc 1 444 0 is_stmt 1
 1992 01ce 174B     		ldr	r3, .L118+32
 1993 01d0 1B88     		ldrh	r3, [r3]
 1994 01d2 1BB2     		sxth	r3, r3
 1995 01d4 642B     		cmp	r3, #100
 1996 01d6 02DD     		ble	.L116
 1997              		.loc 1 444 0 is_stmt 0 discriminator 1
 1998 01d8 144B     		ldr	r3, .L118+32
 1999 01da 6422     		movs	r2, #100
 2000 01dc 1A80     		strh	r2, [r3]	@ movhi
 2001              	.L116:
 445:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2002              		.loc 1 445 0 is_stmt 1
 2003 01de 114B     		ldr	r3, .L118+24
 2004 01e0 1B88     		ldrh	r3, [r3]
 2005 01e2 1BB2     		sxth	r3, r3
 2006 01e4 642B     		cmp	r3, #100
 2007 01e6 02DD     		ble	.L117
 2008              		.loc 1 445 0 is_stmt 0 discriminator 1
 2009 01e8 0E4B     		ldr	r3, .L118+24
 2010 01ea 6422     		movs	r2, #100
 2011 01ec 1A80     		strh	r2, [r3]	@ movhi
 2012              	.L117:
 446:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2013              		.loc 1 446 0 is_stmt 1
 2014 01ee 0D4B     		ldr	r3, .L118+24
 2015 01f0 1B88     		ldrh	r3, [r3]
 2016 01f2 DBB2     		uxtb	r3, r3
 2017 01f4 1846     		mov	r0, r3
 2018 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 447:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2019              		.loc 1 447 0
 2020 01fa 0C4B     		ldr	r3, .L118+32
 2021 01fc 1B88     		ldrh	r3, [r3]
 2022 01fe DBB2     		uxtb	r3, r3
 2023 0200 1846     		mov	r0, r3
 2024 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2025              	.L110:
 448:.\main.c      **** }
 2026              		.loc 1 448 0
 2027 0206 2037     		adds	r7, r7, #32
 2028              		.cfi_def_cfa_offset 16
 2029 0208 BD46     		mov	sp, r7
 2030              		.cfi_def_cfa_register 13
 2031              		@ sp needed
 2032 020a B0BD     		pop	{r4, r5, r7, pc}
 2033              	.L119:
 2034              		.align	2
 2035              	.L118:
 2036 020c 00000000 		.word	flag_calc_wheelspeed
 2037 0210 00000000 		.word	quad_diff1
 2038 0214 00000000 		.word	quad_diff2
 2039 0218 0000F03F 		.word	1072693248
 2040 021c 00002040 		.word	1075838976
 2041 0220 00000000 		.word	leftSpeedLimit
 2042 0224 00000000 		.word	left_duty_cycle
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 45


 2043 0228 00000000 		.word	rightSpeedLimit
 2044 022c 00000000 		.word	right_duty_cycle
 2045              		.cfi_endproc
 2046              	.LFE88:
 2047              		.size	Quad_Dec_response, .-Quad_Dec_response
 2048              		.section	.text.trackLine,"ax",%progbits
 2049              		.align	2
 2050              		.global	trackLine
 2051              		.thumb
 2052              		.thumb_func
 2053              		.type	trackLine, %function
 2054              	trackLine:
 2055              	.LFB89:
 449:.\main.c      **** 
 450:.\main.c      **** void trackLine()
 451:.\main.c      **** {
 2056              		.loc 1 451 0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 8
 2059              		@ frame_needed = 1, uses_anonymous_args = 0
 2060 0000 80B5     		push	{r7, lr}
 2061              		.cfi_def_cfa_offset 8
 2062              		.cfi_offset 7, -8
 2063              		.cfi_offset 14, -4
 2064 0002 82B0     		sub	sp, sp, #8
 2065              		.cfi_def_cfa_offset 16
 2066 0004 00AF     		add	r7, sp, #0
 2067              		.cfi_def_cfa_register 7
 452:.\main.c      ****     //read the value of the three central-front sensors
 453:.\main.c      ****     
 454:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2068              		.loc 1 454 0
 2069 0006 FFF7FEFF 		bl	NLSens_out_Read
 2070 000a 0346     		mov	r3, r0
 2071 000c FB71     		strb	r3, [r7, #7]
 455:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2072              		.loc 1 455 0
 2073 000e FFF7FEFF 		bl	NRSens_out_Read
 2074 0012 0346     		mov	r3, r0
 2075 0014 BB71     		strb	r3, [r7, #6]
 456:.\main.c      ****     uint8 mid = MSens_out_Read();
 2076              		.loc 1 456 0
 2077 0016 FFF7FEFF 		bl	MSens_out_Read
 2078 001a 0346     		mov	r3, r0
 2079 001c 7B71     		strb	r3, [r7, #5]
 457:.\main.c      ****     //if only the left one, hard left
 458:.\main.c      ****     if(nl && !nr && !mid)
 2080              		.loc 1 458 0
 2081 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2082 0020 002B     		cmp	r3, #0
 2083 0022 0ED0     		beq	.L121
 2084              		.loc 1 458 0 is_stmt 0 discriminator 1
 2085 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2086 0026 002B     		cmp	r3, #0
 2087 0028 0BD1     		bne	.L121
 2088              		.loc 1 458 0 discriminator 2
 2089 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 46


 2090 002c 002B     		cmp	r3, #0
 2091 002e 08D1     		bne	.L121
 459:.\main.c      ****     {
 460:.\main.c      ****         setSpeed(-10,15);
 2092              		.loc 1 460 0 is_stmt 1
 2093 0030 4FF00000 		mov	r0, #0
 2094 0034 3349     		ldr	r1, .L127
 2095 0036 4FF00002 		mov	r2, #0
 2096 003a 334B     		ldr	r3, .L127+4
 2097 003c FFF7FEFF 		bl	setSpeed
 2098 0040 5CE0     		b	.L120
 2099              	.L121:
 461:.\main.c      ****     }
 462:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2100              		.loc 1 462 0
 2101 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2102 0044 002B     		cmp	r3, #0
 2103 0046 0FD0     		beq	.L123
 2104              		.loc 1 462 0 is_stmt 0 discriminator 1
 2105 0048 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2106 004a 002B     		cmp	r3, #0
 2107 004c 0CD0     		beq	.L123
 2108              		.loc 1 462 0 discriminator 2
 2109 004e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2110 0050 002B     		cmp	r3, #0
 2111 0052 09D1     		bne	.L123
 463:.\main.c      ****     {
 464:.\main.c      ****         setSpeed(0,15);
 2112              		.loc 1 464 0 is_stmt 1
 2113 0054 4FF00000 		mov	r0, #0
 2114 0058 4FF00001 		mov	r1, #0
 2115 005c 4FF00002 		mov	r2, #0
 2116 0060 294B     		ldr	r3, .L127+4
 2117 0062 FFF7FEFF 		bl	setSpeed
 2118 0066 49E0     		b	.L120
 2119              	.L123:
 465:.\main.c      ****     }
 466:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2120              		.loc 1 466 0
 2121 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2122 006a 002B     		cmp	r3, #0
 2123 006c 0FD0     		beq	.L124
 2124              		.loc 1 466 0 is_stmt 0 discriminator 1
 2125 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2126 0070 002B     		cmp	r3, #0
 2127 0072 0CD0     		beq	.L124
 2128              		.loc 1 466 0 discriminator 2
 2129 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2130 0076 002B     		cmp	r3, #0
 2131 0078 09D1     		bne	.L124
 467:.\main.c      ****     {
 468:.\main.c      ****         setSpeed(15,0);
 2132              		.loc 1 468 0 is_stmt 1
 2133 007a 4FF00000 		mov	r0, #0
 2134 007e 2249     		ldr	r1, .L127+4
 2135 0080 4FF00002 		mov	r2, #0
 2136 0084 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 47


 2137 0088 FFF7FEFF 		bl	setSpeed
 2138 008c 36E0     		b	.L120
 2139              	.L124:
 469:.\main.c      ****     }
 470:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2140              		.loc 1 470 0
 2141 008e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2142 0090 002B     		cmp	r3, #0
 2143 0092 0ED0     		beq	.L125
 2144              		.loc 1 470 0 is_stmt 0 discriminator 1
 2145 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2146 0096 002B     		cmp	r3, #0
 2147 0098 0BD1     		bne	.L125
 2148              		.loc 1 470 0 discriminator 2
 2149 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2150 009c 002B     		cmp	r3, #0
 2151 009e 08D1     		bne	.L125
 471:.\main.c      ****     {
 472:.\main.c      ****         setSpeed(15,-10);
 2152              		.loc 1 472 0 is_stmt 1
 2153 00a0 4FF00000 		mov	r0, #0
 2154 00a4 1849     		ldr	r1, .L127+4
 2155 00a6 4FF00002 		mov	r2, #0
 2156 00aa 164B     		ldr	r3, .L127
 2157 00ac FFF7FEFF 		bl	setSpeed
 2158 00b0 24E0     		b	.L120
 2159              	.L125:
 473:.\main.c      ****     }
 474:.\main.c      ****     else if (mid && !nr && !nl)
 2160              		.loc 1 474 0
 2161 00b2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2162 00b4 002B     		cmp	r3, #0
 2163 00b6 0ED0     		beq	.L126
 2164              		.loc 1 474 0 is_stmt 0 discriminator 1
 2165 00b8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2166 00ba 002B     		cmp	r3, #0
 2167 00bc 0BD1     		bne	.L126
 2168              		.loc 1 474 0 discriminator 2
 2169 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2170 00c0 002B     		cmp	r3, #0
 2171 00c2 08D1     		bne	.L126
 475:.\main.c      ****     {
 476:.\main.c      ****         setSpeed(10,10);
 2172              		.loc 1 476 0 is_stmt 1
 2173 00c4 4FF00000 		mov	r0, #0
 2174 00c8 1049     		ldr	r1, .L127+8
 2175 00ca 4FF00002 		mov	r2, #0
 2176 00ce 0F4B     		ldr	r3, .L127+8
 2177 00d0 FFF7FEFF 		bl	setSpeed
 2178 00d4 12E0     		b	.L120
 2179              	.L126:
 477:.\main.c      ****     }
 478:.\main.c      ****     else if (!mid && !nr && !nl)
 2180              		.loc 1 478 0
 2181 00d6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2182 00d8 002B     		cmp	r3, #0
 2183 00da 0FD1     		bne	.L120
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 48


 2184              		.loc 1 478 0 is_stmt 0 discriminator 1
 2185 00dc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2186 00de 002B     		cmp	r3, #0
 2187 00e0 0CD1     		bne	.L120
 2188              		.loc 1 478 0 discriminator 2
 2189 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2190 00e4 002B     		cmp	r3, #0
 2191 00e6 09D1     		bne	.L120
 479:.\main.c      ****     {
 480:.\main.c      ****         setSpeed(0,0);
 2192              		.loc 1 480 0 is_stmt 1
 2193 00e8 4FF00000 		mov	r0, #0
 2194 00ec 4FF00001 		mov	r1, #0
 2195 00f0 4FF00002 		mov	r2, #0
 2196 00f4 4FF00003 		mov	r3, #0
 2197 00f8 FFF7FEFF 		bl	setSpeed
 2198              	.L120:
 481:.\main.c      ****     }
 482:.\main.c      ****    
 483:.\main.c      **** 
 484:.\main.c      **** }
 2199              		.loc 1 484 0
 2200 00fc 0837     		adds	r7, r7, #8
 2201              		.cfi_def_cfa_offset 8
 2202 00fe BD46     		mov	sp, r7
 2203              		.cfi_def_cfa_register 13
 2204              		@ sp needed
 2205 0100 80BD     		pop	{r7, pc}
 2206              	.L128:
 2207 0102 00BF     		.align	2
 2208              	.L127:
 2209 0104 000024C0 		.word	-1071382528
 2210 0108 00002E40 		.word	1076756480
 2211 010c 00002440 		.word	1076101120
 2212              		.cfi_endproc
 2213              	.LFE89:
 2214              		.size	trackLine, .-trackLine
 2215              		.global	__aeabi_i2f
 2216              		.global	__aeabi_fmul
 2217              		.global	__aeabi_fadd
 2218              		.global	__aeabi_f2iz
 2219              		.section	.rodata
 2220 003e 0000     		.align	2
 2221              	.LC4:
 2222 0040 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 2222      65727920 
 2222      566F6C74 
 2222      6167653A 
 2222      2025646D 
 2223              		.section	.text.print_ADC,"ax",%progbits
 2224              		.align	2
 2225              		.global	print_ADC
 2226              		.thumb
 2227              		.thumb_func
 2228              		.type	print_ADC, %function
 2229              	print_ADC:
 2230              	.LFB90:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 49


 485:.\main.c      **** 
 486:.\main.c      **** void print_ADC()
 487:.\main.c      **** {
 2231              		.loc 1 487 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 24
 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0000 80B5     		push	{r7, lr}
 2236              		.cfi_def_cfa_offset 8
 2237              		.cfi_offset 7, -8
 2238              		.cfi_offset 14, -4
 2239 0002 86B0     		sub	sp, sp, #24
 2240              		.cfi_def_cfa_offset 32
 2241 0004 00AF     		add	r7, sp, #0
 2242              		.cfi_def_cfa_register 7
 488:.\main.c      ****    //usbPutString("HII\n");
 489:.\main.c      ****     if(flag_receive_ADC == 1)
 2243              		.loc 1 489 0
 2244 0006 274B     		ldr	r3, .L132
 2245 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2246 000a 012B     		cmp	r3, #1
 2247 000c 46D1     		bne	.L129
 2248              	.LBB5:
 490:.\main.c      ****     {
 491:.\main.c      ****         //usbPutString("AAA\r\n");
 492:.\main.c      ****         flag_receive_ADC = 0;
 2249              		.loc 1 492 0
 2250 000e 254B     		ldr	r3, .L132
 2251 0010 0022     		movs	r2, #0
 2252 0012 1A70     		strb	r2, [r3]
 493:.\main.c      ****         
 494:.\main.c      ****        // int8 channel = ADC_
 495:.\main.c      ****         float scalingFactor = 0.972;
 2253              		.loc 1 495 0
 2254 0014 244B     		ldr	r3, .L132+4
 2255 0016 7B61     		str	r3, [r7, #20]	@ float
 496:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 2256              		.loc 1 496 0
 2257 0018 244B     		ldr	r3, .L132+8
 2258 001a 1B88     		ldrh	r3, [r3]
 2259 001c 1BB2     		sxth	r3, r3
 2260 001e 41F28832 		movw	r2, #5000
 2261 0022 02FB03F3 		mul	r3, r2, r3
 2262 0026 002B     		cmp	r3, #0
 2263 0028 01DA     		bge	.L131
 2264 002a 03F6FF73 		addw	r3, r3, #4095
 2265              	.L131:
 2266 002e 1B13     		asrs	r3, r3, #12
 2267 0030 1846     		mov	r0, r3
 2268 0032 FFF7FEFF 		bl	__aeabi_i2f
 2269 0036 0346     		mov	r3, r0
 2270 0038 1846     		mov	r0, r3
 2271 003a 7969     		ldr	r1, [r7, #20]	@ float
 2272 003c FFF7FEFF 		bl	__aeabi_fmul
 2273 0040 0346     		mov	r3, r0
 2274 0042 1846     		mov	r0, r3
 2275 0044 1946     		mov	r1, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 50


 2276 0046 FFF7FEFF 		bl	__aeabi_fadd
 2277 004a 0346     		mov	r3, r0
 2278 004c 1846     		mov	r0, r3
 2279 004e FFF7FEFF 		bl	__aeabi_f2iz
 2280 0052 0346     		mov	r3, r0
 2281 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 497:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 2282              		.loc 1 497 0
 2283 0056 B7F91220 		ldrsh	r2, [r7, #18]
 2284 005a 154B     		ldr	r3, .L132+12
 2285 005c 1B88     		ldrh	r3, [r3]
 2286 005e 1BB2     		sxth	r3, r3
 2287 0060 1A44     		add	r2, r2, r3
 2288 0062 144B     		ldr	r3, .L132+16
 2289 0064 1B88     		ldrh	r3, [r3]
 2290 0066 1BB2     		sxth	r3, r3
 2291 0068 1344     		add	r3, r3, r2
 2292 006a 134A     		ldr	r2, .L132+20
 2293 006c 82FB0312 		smull	r1, r2, r2, r3
 2294 0070 DB17     		asrs	r3, r3, #31
 2295 0072 D31A     		subs	r3, r2, r3
 2296 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 498:.\main.c      ****         prevVoltage2 = prevVoltage;
 2297              		.loc 1 498 0
 2298 0076 0E4B     		ldr	r3, .L132+12
 2299 0078 1A88     		ldrh	r2, [r3]
 2300 007a 0E4B     		ldr	r3, .L132+16
 2301 007c 1A80     		strh	r2, [r3]	@ movhi
 499:.\main.c      ****         prevVoltage = converted_val;
 2302              		.loc 1 499 0
 2303 007e 0C4A     		ldr	r2, .L132+12
 2304 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 2305 0082 1380     		strh	r3, [r2]	@ movhi
 500:.\main.c      ****         
 501:.\main.c      ****         char result_str[16];
 502:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 2306              		.loc 1 502 0
 2307 0084 B7F91230 		ldrsh	r3, [r7, #18]
 2308 0088 3A46     		mov	r2, r7
 2309 008a 1046     		mov	r0, r2
 2310 008c 0B49     		ldr	r1, .L132+24
 2311 008e 1A46     		mov	r2, r3
 2312 0090 FFF7FEFF 		bl	sprintf
 503:.\main.c      ****         
 504:.\main.c      ****         usbPutString(result_str);
 2313              		.loc 1 504 0
 2314 0094 3B46     		mov	r3, r7
 2315 0096 1846     		mov	r0, r3
 2316 0098 FFF7FEFF 		bl	usbPutString
 2317              	.L129:
 2318              	.LBE5:
 505:.\main.c      ****     }
 506:.\main.c      **** }
 2319              		.loc 1 506 0
 2320 009c 1837     		adds	r7, r7, #24
 2321              		.cfi_def_cfa_offset 8
 2322 009e BD46     		mov	sp, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 51


 2323              		.cfi_def_cfa_register 13
 2324              		@ sp needed
 2325 00a0 80BD     		pop	{r7, pc}
 2326              	.L133:
 2327 00a2 00BF     		.align	2
 2328              	.L132:
 2329 00a4 00000000 		.word	flag_receive_ADC
 2330 00a8 FED4783F 		.word	1064883454
 2331 00ac 00000000 		.word	adc_result
 2332 00b0 00000000 		.word	prevVoltage
 2333 00b4 00000000 		.word	prevVoltage2
 2334 00b8 56555555 		.word	1431655766
 2335 00bc 40000000 		.word	.LC4
 2336              		.cfi_endproc
 2337              	.LFE90:
 2338              		.size	print_ADC, .-print_ADC
 2339              		.section	.rodata
 2340              		.align	2
 2341              	.LC5:
 2342 0058 52535349 		.ascii	"RSSI:\000"
 2342      3A00
 2343 005e 0000     		.align	2
 2344              	.LC6:
 2345 0060 25640D0A 		.ascii	"%d\015\012\000"
 2345      00
 2346 0065 000000   		.align	2
 2347              	.LC7:
 2348 0068 726F626F 		.ascii	"robot_x:\000"
 2348      745F783A 
 2348      00
 2349 0071 000000   		.align	2
 2350              	.LC8:
 2351 0074 726F626F 		.ascii	"robot_y:\000"
 2351      745F793A 
 2351      00
 2352 007d 000000   		.align	2
 2353              	.LC9:
 2354 0080 726F626F 		.ascii	"robot_dir:\000"
 2354      745F6469 
 2354      723A00
 2355 008b 00       		.section	.text.print_RF,"ax",%progbits
 2356              		.align	2
 2357              		.global	print_RF
 2358              		.thumb
 2359              		.thumb_func
 2360              		.type	print_RF, %function
 2361              	print_RF:
 2362              	.LFB91:
 507:.\main.c      **** 
 508:.\main.c      **** void print_RF()
 509:.\main.c      **** {
 2363              		.loc 1 509 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 16
 2366              		@ frame_needed = 1, uses_anonymous_args = 0
 2367 0000 80B5     		push	{r7, lr}
 2368              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 52


 2369              		.cfi_offset 7, -8
 2370              		.cfi_offset 14, -4
 2371 0002 84B0     		sub	sp, sp, #16
 2372              		.cfi_def_cfa_offset 24
 2373 0004 00AF     		add	r7, sp, #0
 2374              		.cfi_def_cfa_register 7
 510:.\main.c      ****     if(flag_print_rf == 1)
 2375              		.loc 1 510 0
 2376 0006 254B     		ldr	r3, .L136
 2377 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2378 000a 012B     		cmp	r3, #1
 2379 000c 42D1     		bne	.L134
 2380              	.LBB6:
 511:.\main.c      ****     {
 512:.\main.c      ****         char printString[16];
 513:.\main.c      ****         flag_print_rf = 0;
 2381              		.loc 1 513 0
 2382 000e 234B     		ldr	r3, .L136
 2383 0010 0022     		movs	r2, #0
 2384 0012 1A70     		strb	r2, [r3]
 514:.\main.c      ****         usbPutString("RSSI:");
 2385              		.loc 1 514 0
 2386 0014 2248     		ldr	r0, .L136+4
 2387 0016 FFF7FEFF 		bl	usbPutString
 515:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 2388              		.loc 1 515 0
 2389 001a 224B     		ldr	r3, .L136+8
 2390 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2391 001e 5BB2     		sxtb	r3, r3
 2392 0020 3A46     		mov	r2, r7
 2393 0022 1046     		mov	r0, r2
 2394 0024 2049     		ldr	r1, .L136+12
 2395 0026 1A46     		mov	r2, r3
 2396 0028 FFF7FEFF 		bl	sprintf
 516:.\main.c      ****         usbPutString(printString);
 2397              		.loc 1 516 0
 2398 002c 3B46     		mov	r3, r7
 2399 002e 1846     		mov	r0, r3
 2400 0030 FFF7FEFF 		bl	usbPutString
 517:.\main.c      ****         usbPutString("robot_x:");
 2401              		.loc 1 517 0
 2402 0034 1D48     		ldr	r0, .L136+16
 2403 0036 FFF7FEFF 		bl	usbPutString
 518:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 2404              		.loc 1 518 0
 2405 003a 1A4B     		ldr	r3, .L136+8
 2406 003c 5B88     		ldrh	r3, [r3, #2]
 2407 003e 1BB2     		sxth	r3, r3
 2408 0040 3A46     		mov	r2, r7
 2409 0042 1046     		mov	r0, r2
 2410 0044 1849     		ldr	r1, .L136+12
 2411 0046 1A46     		mov	r2, r3
 2412 0048 FFF7FEFF 		bl	sprintf
 519:.\main.c      ****         usbPutString(printString);
 2413              		.loc 1 519 0
 2414 004c 3B46     		mov	r3, r7
 2415 004e 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 53


 2416 0050 FFF7FEFF 		bl	usbPutString
 520:.\main.c      ****         usbPutString("robot_y:");
 2417              		.loc 1 520 0
 2418 0054 1648     		ldr	r0, .L136+20
 2419 0056 FFF7FEFF 		bl	usbPutString
 521:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 2420              		.loc 1 521 0
 2421 005a 124B     		ldr	r3, .L136+8
 2422 005c 9B88     		ldrh	r3, [r3, #4]
 2423 005e 1BB2     		sxth	r3, r3
 2424 0060 3A46     		mov	r2, r7
 2425 0062 1046     		mov	r0, r2
 2426 0064 1049     		ldr	r1, .L136+12
 2427 0066 1A46     		mov	r2, r3
 2428 0068 FFF7FEFF 		bl	sprintf
 522:.\main.c      ****         usbPutString(printString);
 2429              		.loc 1 522 0
 2430 006c 3B46     		mov	r3, r7
 2431 006e 1846     		mov	r0, r3
 2432 0070 FFF7FEFF 		bl	usbPutString
 523:.\main.c      ****         usbPutString("robot_dir:");
 2433              		.loc 1 523 0
 2434 0074 0F48     		ldr	r0, .L136+24
 2435 0076 FFF7FEFF 		bl	usbPutString
 524:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 2436              		.loc 1 524 0
 2437 007a 0A4B     		ldr	r3, .L136+8
 2438 007c DB88     		ldrh	r3, [r3, #6]
 2439 007e 1BB2     		sxth	r3, r3
 2440 0080 3A46     		mov	r2, r7
 2441 0082 1046     		mov	r0, r2
 2442 0084 0849     		ldr	r1, .L136+12
 2443 0086 1A46     		mov	r2, r3
 2444 0088 FFF7FEFF 		bl	sprintf
 525:.\main.c      ****         usbPutString(printString);
 2445              		.loc 1 525 0
 2446 008c 3B46     		mov	r3, r7
 2447 008e 1846     		mov	r0, r3
 2448 0090 FFF7FEFF 		bl	usbPutString
 2449              	.L134:
 2450              	.LBE6:
 526:.\main.c      ****     }
 527:.\main.c      **** }
 2451              		.loc 1 527 0
 2452 0094 1037     		adds	r7, r7, #16
 2453              		.cfi_def_cfa_offset 8
 2454 0096 BD46     		mov	sp, r7
 2455              		.cfi_def_cfa_register 13
 2456              		@ sp needed
 2457 0098 80BD     		pop	{r7, pc}
 2458              	.L137:
 2459 009a 00BF     		.align	2
 2460              	.L136:
 2461 009c 00000000 		.word	flag_print_rf
 2462 00a0 58000000 		.word	.LC5
 2463 00a4 00000000 		.word	system_state
 2464 00a8 60000000 		.word	.LC6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 54


 2465 00ac 68000000 		.word	.LC7
 2466 00b0 74000000 		.word	.LC8
 2467 00b4 80000000 		.word	.LC9
 2468              		.cfi_endproc
 2469              	.LFE91:
 2470              		.size	print_RF, .-print_RF
 2471              		.section	.text.main,"ax",%progbits
 2472              		.align	2
 2473              		.global	main
 2474              		.thumb
 2475              		.thumb_func
 2476              		.type	main, %function
 2477              	main:
 2478              	.LFB92:
 528:.\main.c      **** 
 529:.\main.c      **** int main()
 530:.\main.c      **** {  
 2479              		.loc 1 530 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0000 80B5     		push	{r7, lr}
 2484              		.cfi_def_cfa_offset 8
 2485              		.cfi_offset 7, -8
 2486              		.cfi_offset 14, -4
 2487 0002 00AF     		add	r7, sp, #0
 2488              		.cfi_def_cfa_register 7
 531:.\main.c      **** 
 532:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 533:.\main.c      **** // ----- INITIALIZATIONS ----------
 534:.\main.c      ****     CYGlobalIntEnable;
 2489              		.loc 1 534 0
 2490              	@ 534 ".\main.c" 1
 2491 0004 62B6     		CPSIE   i
 2492              	@ 0 "" 2
 535:.\main.c      ****     if(ENABLE_PWM)
 536:.\main.c      ****     {
 537:.\main.c      ****         PWM_1_Start();// starting the pwm
 2493              		.loc 1 537 0
 2494              		.thumb
 2495 0006 FFF7FEFF 		bl	PWM_1_Start
 538:.\main.c      ****         PWM_2_Start();// starting the pwm
 2496              		.loc 1 538 0
 2497 000a FFF7FEFF 		bl	PWM_2_Start
 539:.\main.c      ****     }
 540:.\main.c      ****     
 541:.\main.c      ****     if(ENABLE_ADC)
 542:.\main.c      ****     {
 543:.\main.c      ****         ADC_Start();
 544:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 545:.\main.c      ****         //ADC_StartConvert();
 546:.\main.c      ****         
 547:.\main.c      ****         //start the ADC timer for software trigger mode
 548:.\main.c      ****         Timer_TS_Start();
 549:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 550:.\main.c      ****     }
 551:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 55


 552:.\main.c      ****     if (ENABLE_QUAD)
 553:.\main.c      ****     {
 554:.\main.c      ****         QuadDec_M1_Start();
 2498              		.loc 1 554 0
 2499 000e FFF7FEFF 		bl	QuadDec_M1_Start
 555:.\main.c      ****         QuadDec_M2_Start();
 2500              		.loc 1 555 0
 2501 0012 FFF7FEFF 		bl	QuadDec_M2_Start
 556:.\main.c      ****         
 557:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 2502              		.loc 1 557 0
 2503 0016 2348     		ldr	r0, .L149
 2504 0018 FFF7FEFF 		bl	isr_quad1_StartEx
 558:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 2505              		.loc 1 558 0
 2506 001c 2248     		ldr	r0, .L149+4
 2507 001e FFF7FEFF 		bl	isr_turn_count_StartEx
 559:.\main.c      ****         
 560:.\main.c      ****         Timer_1_Start();
 2508              		.loc 1 560 0
 2509 0022 FFF7FEFF 		bl	Timer_1_Start
 561:.\main.c      ****     }
 562:.\main.c      ****     
 563:.\main.c      ****     if(ENABLE_STOP){
 564:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 565:.\main.c      ****         
 566:.\main.c      ****     }
 567:.\main.c      ****     isr_button_StartEx(button);
 2510              		.loc 1 567 0
 2511 0026 2148     		ldr	r0, .L149+8
 2512 0028 FFF7FEFF 		bl	isr_button_StartEx
 568:.\main.c      ****     
 569:.\main.c      **** 
 570:.\main.c      ****     // ------USB SETUP ----------------    
 571:.\main.c      ****     if (USE_USB){    
 572:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 2513              		.loc 1 572 0
 2514 002c 0020     		movs	r0, #0
 2515 002e 0121     		movs	r1, #1
 2516 0030 FFF7FEFF 		bl	USBUART_Start
 573:.\main.c      ****         if (USBUART_GetConfiguration())
 2517              		.loc 1 573 0
 2518 0034 FFF7FEFF 		bl	USBUART_GetConfiguration
 2519 0038 0346     		mov	r3, r0
 2520 003a 002B     		cmp	r3, #0
 2521 003c 01D0     		beq	.L148
 574:.\main.c      ****             {
 575:.\main.c      ****                  USBUART_CDC_Init();
 2522              		.loc 1 575 0
 2523 003e FFF7FEFF 		bl	USBUART_CDC_Init
 2524              	.L148:
 576:.\main.c      ****             }
 577:.\main.c      ****     }
 578:.\main.c      ****     
 579:.\main.c      ****     if(BIN_ENABLED){
 580:.\main.c      ****         UART_clk_SetDividerValue(130);
 581:.\main.c      ****         isrRF_RX_StartEx(rxInt);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 56


 582:.\main.c      ****         UART_Start();
 583:.\main.c      ****         RF_BT_SELECT_Write(0);
 584:.\main.c      ****     }
 585:.\main.c      ****     
 586:.\main.c      ****     if(BT_ENABLED){
 587:.\main.c      ****         UART_clk_SetDividerValue(781);
 2525              		.loc 1 587 0
 2526 0042 4FF44370 		mov	r0, #780
 2527 0046 0121     		movs	r1, #1
 2528 0048 FFF7FEFF 		bl	UART_clk_SetDividerRegister
 588:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2529              		.loc 1 588 0
 2530 004c 1848     		ldr	r0, .L149+12
 2531 004e FFF7FEFF 		bl	isrRF_RX_StartEx
 589:.\main.c      ****         UART_Start();
 2532              		.loc 1 589 0
 2533 0052 FFF7FEFF 		bl	UART_Start
 590:.\main.c      ****         RF_BT_SELECT_Write(1);
 2534              		.loc 1 590 0
 2535 0056 0120     		movs	r0, #1
 2536 0058 FFF7FEFF 		bl	RF_BT_SELECT_Write
 2537              	.L147:
 591:.\main.c      ****     }
 592:.\main.c      ****     
 593:.\main.c      ****     //usbPutString("Started");
 594:.\main.c      ****     for(;;)
 595:.\main.c      ****     {
 596:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 597:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 2538              		.loc 1 597 0
 2539 005c FFF7FEFF 		bl	Quad_Dec_response
 598:.\main.c      ****         if(BIN_ENABLED == 1)
 599:.\main.c      ****         {
 600:.\main.c      ****             handle_rx_binary();
 601:.\main.c      ****             print_RF();
 602:.\main.c      ****         }
 603:.\main.c      ****         
 604:.\main.c      ****         switch(movement_state)
 2540              		.loc 1 604 0
 2541 0060 144B     		ldr	r3, .L149+16
 2542 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2543 0064 042B     		cmp	r3, #4
 2544 0066 F9D8     		bhi	.L147
 2545 0068 01A2     		adr	r2, .L142
 2546 006a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2547 006e 00BF     		.p2align 2
 2548              	.L142:
 2549 0070 85000000 		.word	.L141+1
 2550 0074 8B000000 		.word	.L143+1
 2551 0078 91000000 		.word	.L144+1
 2552 007c 97000000 		.word	.L145+1
 2553 0080 9D000000 		.word	.L146+1
 2554              		.p2align 1
 2555              	.L141:
 605:.\main.c      ****         {
 606:.\main.c      ****             case DRIVE:
 607:.\main.c      ****                 driveForwards();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 57


 2556              		.loc 1 607 0
 2557 0084 FFF7FEFF 		bl	driveForwards
 608:.\main.c      ****             break;
 2558              		.loc 1 608 0
 2559 0088 0BE0     		b	.L140
 2560              	.L143:
 609:.\main.c      ****             case LTURN:
 610:.\main.c      ****                 turnLeft();
 2561              		.loc 1 610 0
 2562 008a FFF7FEFF 		bl	turnLeft
 611:.\main.c      ****             break;
 2563              		.loc 1 611 0
 2564 008e 08E0     		b	.L140
 2565              	.L144:
 612:.\main.c      ****             case RTURN:
 613:.\main.c      ****                 turnRight();
 2566              		.loc 1 613 0
 2567 0090 FFF7FEFF 		bl	turnRight
 614:.\main.c      ****             break;
 2568              		.loc 1 614 0
 2569 0094 05E0     		b	.L140
 2570              	.L145:
 615:.\main.c      ****             case STOPPED:
 616:.\main.c      ****                 brakeMotor();
 2571              		.loc 1 616 0
 2572 0096 FFF7FEFF 		bl	brakeMotor
 617:.\main.c      ****             break;
 2573              		.loc 1 617 0
 2574 009a 02E0     		b	.L140
 2575              	.L146:
 618:.\main.c      ****             case TRACKING:
 619:.\main.c      ****                 trackLine();
 2576              		.loc 1 619 0
 2577 009c FFF7FEFF 		bl	trackLine
 620:.\main.c      ****             break;
 2578              		.loc 1 620 0
 2579 00a0 00BF     		nop
 2580              	.L140:
 621:.\main.c      ****         }
 622:.\main.c      ****         //handle_usb();        
 623:.\main.c      ****     }   
 2581              		.loc 1 623 0
 2582 00a2 DBE7     		b	.L147
 2583              	.L150:
 2584              		.align	2
 2585              	.L149:
 2586 00a4 00000000 		.word	isr_quad1
 2587 00a8 00000000 		.word	isr_turn_timer
 2588 00ac 00000000 		.word	button
 2589 00b0 00000000 		.word	BT_rxInt
 2590 00b4 00000000 		.word	movement_state
 2591              		.cfi_endproc
 2592              	.LFE92:
 2593              		.size	main, .-main
 2594              		.section	.text.usbPutString,"ax",%progbits
 2595              		.align	2
 2596              		.global	usbPutString
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 58


 2597              		.thumb
 2598              		.thumb_func
 2599              		.type	usbPutString, %function
 2600              	usbPutString:
 2601              	.LFB93:
 624:.\main.c      **** }
 625:.\main.c      **** //* ========================================
 626:.\main.c      **** void usbPutString(char *s)
 627:.\main.c      **** {
 2602              		.loc 1 627 0
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 16
 2605              		@ frame_needed = 1, uses_anonymous_args = 0
 2606 0000 80B5     		push	{r7, lr}
 2607              		.cfi_def_cfa_offset 8
 2608              		.cfi_offset 7, -8
 2609              		.cfi_offset 14, -4
 2610 0002 84B0     		sub	sp, sp, #16
 2611              		.cfi_def_cfa_offset 24
 2612 0004 00AF     		add	r7, sp, #0
 2613              		.cfi_def_cfa_register 7
 2614 0006 7860     		str	r0, [r7, #4]
 628:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 629:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 630:.\main.c      **** //  length to 62 char (63rd char is a '!')
 631:.\main.c      ****     if (USE_USB && portOpen)    
 2615              		.loc 1 631 0
 2616 0008 154B     		ldr	r3, .L155
 2617 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2618 000c 002B     		cmp	r3, #0
 2619 000e 23D0     		beq	.L151
 2620              	.LBB7:
 632:.\main.c      ****     {
 633:.\main.c      ****             uint32 cnt = 0;
 2621              		.loc 1 633 0
 2622 0010 0023     		movs	r3, #0
 2623 0012 FB60     		str	r3, [r7, #12]
 634:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 2624              		.loc 1 634 0
 2625 0014 0AE0     		b	.L153
 2626              	.L154:
 635:.\main.c      ****             {
 636:.\main.c      ****                 cnt++;
 2627              		.loc 1 636 0
 2628 0016 FB68     		ldr	r3, [r7, #12]
 2629 0018 0133     		adds	r3, r3, #1
 2630 001a FB60     		str	r3, [r7, #12]
 637:.\main.c      ****                 if(cnt == 3000000){
 2631              		.loc 1 637 0
 2632 001c FB68     		ldr	r3, [r7, #12]
 2633 001e 114A     		ldr	r2, .L155+4
 2634 0020 9342     		cmp	r3, r2
 2635 0022 03D1     		bne	.L153
 638:.\main.c      ****                     portOpen = 0;
 2636              		.loc 1 638 0
 2637 0024 0E4B     		ldr	r3, .L155
 2638 0026 0022     		movs	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 59


 2639 0028 1A70     		strb	r2, [r3]
 639:.\main.c      ****                     return;
 2640              		.loc 1 639 0
 2641 002a 15E0     		b	.L151
 2642              	.L153:
 634:.\main.c      ****             {
 2643              		.loc 1 634 0
 2644 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 2645 0030 0346     		mov	r3, r0
 2646 0032 002B     		cmp	r3, #0
 2647 0034 EFD0     		beq	.L154
 640:.\main.c      ****                 }
 641:.\main.c      ****             }
 642:.\main.c      ****             s[63]='\0';
 2648              		.loc 1 642 0
 2649 0036 7B68     		ldr	r3, [r7, #4]
 2650 0038 3F33     		adds	r3, r3, #63
 2651 003a 0022     		movs	r2, #0
 2652 003c 1A70     		strb	r2, [r3]
 643:.\main.c      ****             s[62]='!';
 2653              		.loc 1 643 0
 2654 003e 7B68     		ldr	r3, [r7, #4]
 2655 0040 3E33     		adds	r3, r3, #62
 2656 0042 2122     		movs	r2, #33
 2657 0044 1A70     		strb	r2, [r3]
 644:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 2658              		.loc 1 644 0
 2659 0046 7868     		ldr	r0, [r7, #4]
 2660 0048 FFF7FEFF 		bl	strlen
 2661 004c 0346     		mov	r3, r0
 2662 004e 9BB2     		uxth	r3, r3
 2663 0050 7868     		ldr	r0, [r7, #4]
 2664 0052 1946     		mov	r1, r3
 2665 0054 FFF7FEFF 		bl	USBUART_PutData
 2666              	.L151:
 2667              	.LBE7:
 645:.\main.c      ****     }
 646:.\main.c      **** }
 2668              		.loc 1 646 0
 2669 0058 1037     		adds	r7, r7, #16
 2670              		.cfi_def_cfa_offset 8
 2671 005a BD46     		mov	sp, r7
 2672              		.cfi_def_cfa_register 13
 2673              		@ sp needed
 2674 005c 80BD     		pop	{r7, pc}
 2675              	.L156:
 2676 005e 00BF     		.align	2
 2677              	.L155:
 2678 0060 00000000 		.word	portOpen
 2679 0064 C0C62D00 		.word	3000000
 2680              		.cfi_endproc
 2681              	.LFE93:
 2682              		.size	usbPutString, .-usbPutString
 2683              		.section	.text.usbPutChar,"ax",%progbits
 2684              		.align	2
 2685              		.global	usbPutChar
 2686              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 60


 2687              		.thumb_func
 2688              		.type	usbPutChar, %function
 2689              	usbPutChar:
 2690              	.LFB94:
 647:.\main.c      **** //* ========================================
 648:.\main.c      **** void usbPutChar(char c)
 649:.\main.c      **** {
 2691              		.loc 1 649 0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 16
 2694              		@ frame_needed = 1, uses_anonymous_args = 0
 2695 0000 80B5     		push	{r7, lr}
 2696              		.cfi_def_cfa_offset 8
 2697              		.cfi_offset 7, -8
 2698              		.cfi_offset 14, -4
 2699 0002 84B0     		sub	sp, sp, #16
 2700              		.cfi_def_cfa_offset 24
 2701 0004 00AF     		add	r7, sp, #0
 2702              		.cfi_def_cfa_register 7
 2703 0006 0346     		mov	r3, r0
 2704 0008 FB71     		strb	r3, [r7, #7]
 650:.\main.c      ****     if (USE_USB && portOpen)    
 2705              		.loc 1 650 0
 2706 000a 0F4B     		ldr	r3, .L161
 2707 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2708 000e 002B     		cmp	r3, #0
 2709 0010 16D0     		beq	.L157
 2710              	.LBB8:
 651:.\main.c      ****     {    
 652:.\main.c      ****         uint32 cnt = 0;
 2711              		.loc 1 652 0
 2712 0012 0023     		movs	r3, #0
 2713 0014 FB60     		str	r3, [r7, #12]
 653:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 2714              		.loc 1 653 0
 2715 0016 0AE0     		b	.L159
 2716              	.L160:
 654:.\main.c      ****             cnt++;
 2717              		.loc 1 654 0
 2718 0018 FB68     		ldr	r3, [r7, #12]
 2719 001a 0133     		adds	r3, r3, #1
 2720 001c FB60     		str	r3, [r7, #12]
 655:.\main.c      ****             if(cnt == 3000000){
 2721              		.loc 1 655 0
 2722 001e FB68     		ldr	r3, [r7, #12]
 2723 0020 0A4A     		ldr	r2, .L161+4
 2724 0022 9342     		cmp	r3, r2
 2725 0024 03D1     		bne	.L159
 656:.\main.c      ****                 portOpen = 0;
 2726              		.loc 1 656 0
 2727 0026 084B     		ldr	r3, .L161
 2728 0028 0022     		movs	r2, #0
 2729 002a 1A70     		strb	r2, [r3]
 657:.\main.c      ****                 return;
 2730              		.loc 1 657 0
 2731 002c 08E0     		b	.L157
 2732              	.L159:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 61


 653:.\main.c      ****             cnt++;
 2733              		.loc 1 653 0
 2734 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 2735 0032 0346     		mov	r3, r0
 2736 0034 002B     		cmp	r3, #0
 2737 0036 EFD0     		beq	.L160
 658:.\main.c      ****             }
 659:.\main.c      ****         }
 660:.\main.c      ****         USBUART_PutChar(c);
 2738              		.loc 1 660 0
 2739 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2740 003a 1846     		mov	r0, r3
 2741 003c FFF7FEFF 		bl	USBUART_PutChar
 2742              	.L157:
 2743              	.LBE8:
 661:.\main.c      ****     }    
 662:.\main.c      **** }
 2744              		.loc 1 662 0
 2745 0040 1037     		adds	r7, r7, #16
 2746              		.cfi_def_cfa_offset 8
 2747 0042 BD46     		mov	sp, r7
 2748              		.cfi_def_cfa_register 13
 2749              		@ sp needed
 2750 0044 80BD     		pop	{r7, pc}
 2751              	.L162:
 2752 0046 00BF     		.align	2
 2753              	.L161:
 2754 0048 00000000 		.word	portOpen
 2755 004c C0C62D00 		.word	3000000
 2756              		.cfi_endproc
 2757              	.LFE94:
 2758              		.size	usbPutChar, .-usbPutChar
 2759              		.section	.text.uart_set_PWM,"ax",%progbits
 2760              		.align	2
 2761              		.global	uart_set_PWM
 2762              		.thumb
 2763              		.thumb_func
 2764              		.type	uart_set_PWM, %function
 2765              	uart_set_PWM:
 2766              	.LFB95:
 663:.\main.c      **** //* ========================================
 664:.\main.c      **** 
 665:.\main.c      **** void uart_set_PWM()
 666:.\main.c      **** {
 2767              		.loc 1 666 0
 2768              		.cfi_startproc
 2769              		@ args = 0, pretend = 0, frame = 8
 2770              		@ frame_needed = 1, uses_anonymous_args = 0
 2771 0000 80B5     		push	{r7, lr}
 2772              		.cfi_def_cfa_offset 8
 2773              		.cfi_offset 7, -8
 2774              		.cfi_offset 14, -4
 2775 0002 82B0     		sub	sp, sp, #8
 2776              		.cfi_def_cfa_offset 16
 2777 0004 00AF     		add	r7, sp, #0
 2778              		.cfi_def_cfa_register 7
 667:.\main.c      ****     uint8 c;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 62


 668:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 2779              		.loc 1 668 0
 2780 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 2781 000a 0346     		mov	r3, r0
 2782 000c 002B     		cmp	r3, #0
 2783 000e 11D0     		beq	.L163
 669:.\main.c      ****        {  
 670:.\main.c      ****             c = USBUART_GetChar();
 2784              		.loc 1 670 0
 2785 0010 FFF7FEFF 		bl	USBUART_GetChar
 2786 0014 0346     		mov	r3, r0
 2787 0016 FB71     		strb	r3, [r7, #7]
 671:.\main.c      ****             
 672:.\main.c      ****             if(c <= 100 && c > 0){
 2788              		.loc 1 672 0
 2789 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2790 001a 642B     		cmp	r3, #100
 2791 001c 0AD8     		bhi	.L163
 2792              		.loc 1 672 0 is_stmt 0 discriminator 1
 2793 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2794 0020 002B     		cmp	r3, #0
 2795 0022 07D0     		beq	.L163
 673:.\main.c      ****                 PWM_1_WriteCompare(c);
 2796              		.loc 1 673 0 is_stmt 1
 2797 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2798 0026 1846     		mov	r0, r3
 2799 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 674:.\main.c      ****                 usbPutString(c);
 2800              		.loc 1 674 0
 2801 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2802 002e 1846     		mov	r0, r3
 2803 0030 FFF7FEFF 		bl	usbPutString
 2804              	.L163:
 675:.\main.c      ****             }
 676:.\main.c      ****        }
 677:.\main.c      **** }
 2805              		.loc 1 677 0
 2806 0034 0837     		adds	r7, r7, #8
 2807              		.cfi_def_cfa_offset 8
 2808 0036 BD46     		mov	sp, r7
 2809              		.cfi_def_cfa_register 13
 2810              		@ sp needed
 2811 0038 80BD     		pop	{r7, pc}
 2812              		.cfi_endproc
 2813              	.LFE95:
 2814              		.size	uart_set_PWM, .-uart_set_PWM
 2815 003a 00BF     		.text
 2816              	.Letext0:
 2817              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2818              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2819              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2820              		.file 5 ".\\vars.h"
 2821              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2822              		.section	.debug_info,"",%progbits
 2823              	.Ldebug_info0:
 2824 0000 C7090000 		.4byte	0x9c7
 2825 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 63


 2826 0006 00000000 		.4byte	.Ldebug_abbrev0
 2827 000a 04       		.byte	0x4
 2828 000b 01       		.uleb128 0x1
 2829 000c 02030000 		.4byte	.LASF137
 2830 0010 01       		.byte	0x1
 2831 0011 C3060000 		.4byte	.LASF138
 2832 0015 64060000 		.4byte	.LASF139
 2833 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2834 001d 00000000 		.4byte	0
 2835 0021 00000000 		.4byte	.Ldebug_line0
 2836 0025 02       		.uleb128 0x2
 2837 0026 01       		.byte	0x1
 2838 0027 06       		.byte	0x6
 2839 0028 EC050000 		.4byte	.LASF0
 2840 002c 02       		.uleb128 0x2
 2841 002d 01       		.byte	0x1
 2842 002e 08       		.byte	0x8
 2843 002f 4F050000 		.4byte	.LASF1
 2844 0033 02       		.uleb128 0x2
 2845 0034 02       		.byte	0x2
 2846 0035 05       		.byte	0x5
 2847 0036 63040000 		.4byte	.LASF2
 2848 003a 02       		.uleb128 0x2
 2849 003b 02       		.byte	0x2
 2850 003c 07       		.byte	0x7
 2851 003d F8050000 		.4byte	.LASF3
 2852 0041 03       		.uleb128 0x3
 2853 0042 62000000 		.4byte	.LASF11
 2854 0046 02       		.byte	0x2
 2855 0047 3F       		.byte	0x3f
 2856 0048 4C000000 		.4byte	0x4c
 2857 004c 02       		.uleb128 0x2
 2858 004d 04       		.byte	0x4
 2859 004e 05       		.byte	0x5
 2860 004f 8D040000 		.4byte	.LASF4
 2861 0053 02       		.uleb128 0x2
 2862 0054 04       		.byte	0x4
 2863 0055 07       		.byte	0x7
 2864 0056 06050000 		.4byte	.LASF5
 2865 005a 02       		.uleb128 0x2
 2866 005b 08       		.byte	0x8
 2867 005c 05       		.byte	0x5
 2868 005d D5020000 		.4byte	.LASF6
 2869 0061 02       		.uleb128 0x2
 2870 0062 08       		.byte	0x8
 2871 0063 07       		.byte	0x7
 2872 0064 93010000 		.4byte	.LASF7
 2873 0068 04       		.uleb128 0x4
 2874 0069 04       		.byte	0x4
 2875 006a 05       		.byte	0x5
 2876 006b 696E7400 		.ascii	"int\000"
 2877 006f 02       		.uleb128 0x2
 2878 0070 04       		.byte	0x4
 2879 0071 07       		.byte	0x7
 2880 0072 55000000 		.4byte	.LASF8
 2881 0076 02       		.uleb128 0x2
 2882 0077 04       		.byte	0x4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 64


 2883 0078 07       		.byte	0x7
 2884 0079 FD040000 		.4byte	.LASF9
 2885 007d 05       		.uleb128 0x5
 2886 007e 04       		.byte	0x4
 2887 007f 83000000 		.4byte	0x83
 2888 0083 02       		.uleb128 0x2
 2889 0084 01       		.byte	0x1
 2890 0085 08       		.byte	0x8
 2891 0086 77020000 		.4byte	.LASF10
 2892 008a 03       		.uleb128 0x3
 2893 008b 24050000 		.4byte	.LASF12
 2894 008f 03       		.byte	0x3
 2895 0090 2C       		.byte	0x2c
 2896 0091 41000000 		.4byte	0x41
 2897 0095 06       		.uleb128 0x6
 2898 0096 35060000 		.4byte	.LASF13
 2899 009a 04       		.byte	0x4
 2900 009b 9201     		.2byte	0x192
 2901 009d 2C000000 		.4byte	0x2c
 2902 00a1 06       		.uleb128 0x6
 2903 00a2 A0020000 		.4byte	.LASF14
 2904 00a6 04       		.byte	0x4
 2905 00a7 9301     		.2byte	0x193
 2906 00a9 3A000000 		.4byte	0x3a
 2907 00ad 06       		.uleb128 0x6
 2908 00ae BD030000 		.4byte	.LASF15
 2909 00b2 04       		.byte	0x4
 2910 00b3 9401     		.2byte	0x194
 2911 00b5 53000000 		.4byte	0x53
 2912 00b9 06       		.uleb128 0x6
 2913 00ba A7020000 		.4byte	.LASF16
 2914 00be 04       		.byte	0x4
 2915 00bf 9501     		.2byte	0x195
 2916 00c1 25000000 		.4byte	0x25
 2917 00c5 06       		.uleb128 0x6
 2918 00c6 6C000000 		.4byte	.LASF17
 2919 00ca 04       		.byte	0x4
 2920 00cb 9601     		.2byte	0x196
 2921 00cd 33000000 		.4byte	0x33
 2922 00d1 02       		.uleb128 0x2
 2923 00d2 04       		.byte	0x4
 2924 00d3 04       		.byte	0x4
 2925 00d4 3E010000 		.4byte	.LASF18
 2926 00d8 02       		.uleb128 0x2
 2927 00d9 08       		.byte	0x8
 2928 00da 04       		.byte	0x4
 2929 00db 3B060000 		.4byte	.LASF19
 2930 00df 02       		.uleb128 0x2
 2931 00e0 08       		.byte	0x8
 2932 00e1 04       		.byte	0x4
 2933 00e2 1C040000 		.4byte	.LASF20
 2934 00e6 07       		.uleb128 0x7
 2935 00e7 90050000 		.4byte	.LASF140
 2936 00eb 01       		.byte	0x1
 2937 00ec 05       		.byte	0x5
 2938 00ed 48       		.byte	0x48
 2939 00ee 11010000 		.4byte	0x111
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 65


 2940 00f2 08       		.uleb128 0x8
 2941 00f3 5D010000 		.4byte	.LASF21
 2942 00f7 00       		.sleb128 0
 2943 00f8 08       		.uleb128 0x8
 2944 00f9 7F000000 		.4byte	.LASF22
 2945 00fd 01       		.sleb128 1
 2946 00fe 08       		.uleb128 0x8
 2947 00ff 0A000000 		.4byte	.LASF23
 2948 0103 02       		.sleb128 2
 2949 0104 08       		.uleb128 0x8
 2950 0105 0B040000 		.4byte	.LASF24
 2951 0109 03       		.sleb128 3
 2952 010a 08       		.uleb128 0x8
 2953 010b 92000000 		.4byte	.LASF25
 2954 010f 04       		.sleb128 4
 2955 0110 00       		.byte	0
 2956 0111 09       		.uleb128 0x9
 2957 0112 D0030000 		.4byte	.LASF141
 2958 0116 20       		.byte	0x20
 2959 0117 05       		.byte	0x5
 2960 0118 4F       		.byte	0x4f
 2961 0119 EA010000 		.4byte	0x1ea
 2962 011d 0A       		.uleb128 0xa
 2963 011e E8030000 		.4byte	.LASF26
 2964 0122 05       		.byte	0x5
 2965 0123 50       		.byte	0x50
 2966 0124 B9000000 		.4byte	0xb9
 2967 0128 00       		.byte	0
 2968 0129 0A       		.uleb128 0xa
 2969 012a 57010000 		.4byte	.LASF27
 2970 012e 05       		.byte	0x5
 2971 012f 51       		.byte	0x51
 2972 0130 95000000 		.4byte	0x95
 2973 0134 01       		.byte	0x1
 2974 0135 0A       		.uleb128 0xa
 2975 0136 33050000 		.4byte	.LASF28
 2976 013a 05       		.byte	0x5
 2977 013b 52       		.byte	0x52
 2978 013c C5000000 		.4byte	0xc5
 2979 0140 02       		.byte	0x2
 2980 0141 0A       		.uleb128 0xa
 2981 0142 4B020000 		.4byte	.LASF29
 2982 0146 05       		.byte	0x5
 2983 0147 53       		.byte	0x53
 2984 0148 C5000000 		.4byte	0xc5
 2985 014c 04       		.byte	0x4
 2986 014d 0A       		.uleb128 0xa
 2987 014e 0B060000 		.4byte	.LASF30
 2988 0152 05       		.byte	0x5
 2989 0153 54       		.byte	0x54
 2990 0154 C5000000 		.4byte	0xc5
 2991 0158 06       		.byte	0x6
 2992 0159 0A       		.uleb128 0xa
 2993 015a 96060000 		.4byte	.LASF31
 2994 015e 05       		.byte	0x5
 2995 015f 55       		.byte	0x55
 2996 0160 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 66


 2997 0164 08       		.byte	0x8
 2998 0165 0A       		.uleb128 0xa
 2999 0166 99030000 		.4byte	.LASF32
 3000 016a 05       		.byte	0x5
 3001 016b 56       		.byte	0x56
 3002 016c C5000000 		.4byte	0xc5
 3003 0170 0A       		.byte	0xa
 3004 0171 0A       		.uleb128 0xa
 3005 0172 7C020000 		.4byte	.LASF33
 3006 0176 05       		.byte	0x5
 3007 0177 57       		.byte	0x57
 3008 0178 C5000000 		.4byte	0xc5
 3009 017c 0C       		.byte	0xc
 3010 017d 0A       		.uleb128 0xa
 3011 017e ED030000 		.4byte	.LASF34
 3012 0182 05       		.byte	0x5
 3013 0183 58       		.byte	0x58
 3014 0184 C5000000 		.4byte	0xc5
 3015 0188 0E       		.byte	0xe
 3016 0189 0A       		.uleb128 0xa
 3017 018a F0020000 		.4byte	.LASF35
 3018 018e 05       		.byte	0x5
 3019 018f 59       		.byte	0x59
 3020 0190 C5000000 		.4byte	0xc5
 3021 0194 10       		.byte	0x10
 3022 0195 0A       		.uleb128 0xa
 3023 0196 ED040000 		.4byte	.LASF36
 3024 019a 05       		.byte	0x5
 3025 019b 5A       		.byte	0x5a
 3026 019c C5000000 		.4byte	0xc5
 3027 01a0 12       		.byte	0x12
 3028 01a1 0A       		.uleb128 0xa
 3029 01a2 BA060000 		.4byte	.LASF37
 3030 01a6 05       		.byte	0x5
 3031 01a7 5B       		.byte	0x5b
 3032 01a8 C5000000 		.4byte	0xc5
 3033 01ac 14       		.byte	0x14
 3034 01ad 0A       		.uleb128 0xa
 3035 01ae AC020000 		.4byte	.LASF38
 3036 01b2 05       		.byte	0x5
 3037 01b3 5C       		.byte	0x5c
 3038 01b4 C5000000 		.4byte	0xc5
 3039 01b8 16       		.byte	0x16
 3040 01b9 0A       		.uleb128 0xa
 3041 01ba B5000000 		.4byte	.LASF39
 3042 01be 05       		.byte	0x5
 3043 01bf 5D       		.byte	0x5d
 3044 01c0 C5000000 		.4byte	0xc5
 3045 01c4 18       		.byte	0x18
 3046 01c5 0A       		.uleb128 0xa
 3047 01c6 D6040000 		.4byte	.LASF40
 3048 01ca 05       		.byte	0x5
 3049 01cb 5E       		.byte	0x5e
 3050 01cc C5000000 		.4byte	0xc5
 3051 01d0 1A       		.byte	0x1a
 3052 01d1 0A       		.uleb128 0xa
 3053 01d2 90030000 		.4byte	.LASF41
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 67


 3054 01d6 05       		.byte	0x5
 3055 01d7 5F       		.byte	0x5f
 3056 01d8 C5000000 		.4byte	0xc5
 3057 01dc 1C       		.byte	0x1c
 3058 01dd 0A       		.uleb128 0xa
 3059 01de 27010000 		.4byte	.LASF42
 3060 01e2 05       		.byte	0x5
 3061 01e3 60       		.byte	0x60
 3062 01e4 C5000000 		.4byte	0xc5
 3063 01e8 1E       		.byte	0x1e
 3064 01e9 00       		.byte	0
 3065 01ea 0B       		.uleb128 0xb
 3066 01eb 53060000 		.4byte	.LASF48
 3067 01ef 01       		.byte	0x1
 3068 01f0 29       		.byte	0x29
 3069 01f1 00000000 		.4byte	.LFB63
 3070 01f5 60010000 		.4byte	.LFE63-.LFB63
 3071 01f9 01       		.uleb128 0x1
 3072 01fa 9C       		.byte	0x9c
 3073 01fb 34020000 		.4byte	0x234
 3074 01ff 0C       		.uleb128 0xc
 3075 0200 10000000 		.4byte	.LBB2
 3076 0204 34010000 		.4byte	.LBE2-.LBB2
 3077 0208 0D       		.uleb128 0xd
 3078 0209 A8000000 		.4byte	.LASF43
 3079 020d 01       		.byte	0x1
 3080 020e 2F       		.byte	0x2f
 3081 020f A1000000 		.4byte	0xa1
 3082 0213 02       		.uleb128 0x2
 3083 0214 91       		.byte	0x91
 3084 0215 76       		.sleb128 -10
 3085 0216 0D       		.uleb128 0xd
 3086 0217 18050000 		.4byte	.LASF44
 3087 021b 01       		.byte	0x1
 3088 021c 31       		.byte	0x31
 3089 021d 34020000 		.4byte	0x234
 3090 0221 02       		.uleb128 0x2
 3091 0222 91       		.byte	0x91
 3092 0223 68       		.sleb128 -24
 3093 0224 0D       		.uleb128 0xd
 3094 0225 63010000 		.4byte	.LASF45
 3095 0229 01       		.byte	0x1
 3096 022a 32       		.byte	0x32
 3097 022b 34020000 		.4byte	0x234
 3098 022f 02       		.uleb128 0x2
 3099 0230 91       		.byte	0x91
 3100 0231 5C       		.sleb128 -36
 3101 0232 00       		.byte	0
 3102 0233 00       		.byte	0
 3103 0234 0E       		.uleb128 0xe
 3104 0235 83000000 		.4byte	0x83
 3105 0239 44020000 		.4byte	0x244
 3106 023d 0F       		.uleb128 0xf
 3107 023e 76000000 		.4byte	0x76
 3108 0242 0B       		.byte	0xb
 3109 0243 00       		.byte	0
 3110 0244 10       		.uleb128 0x10
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 68


 3111 0245 95020000 		.4byte	.LASF46
 3112 0249 01       		.byte	0x1
 3113 024a A4       		.byte	0xa4
 3114 024b 00000000 		.4byte	.LFB64
 3115 024f 18000000 		.4byte	.LFE64-.LFB64
 3116 0253 01       		.uleb128 0x1
 3117 0254 9C       		.byte	0x9c
 3118 0255 68020000 		.4byte	0x268
 3119 0259 11       		.uleb128 0x11
 3120 025a 64697200 		.ascii	"dir\000"
 3121 025e 01       		.byte	0x1
 3122 025f A4       		.byte	0xa4
 3123 0260 95000000 		.4byte	0x95
 3124 0264 02       		.uleb128 0x2
 3125 0265 91       		.byte	0x91
 3126 0266 77       		.sleb128 -9
 3127 0267 00       		.byte	0
 3128 0268 10       		.uleb128 0x10
 3129 0269 B9020000 		.4byte	.LASF47
 3130 026d 01       		.byte	0x1
 3131 026e A9       		.byte	0xa9
 3132 026f 00000000 		.4byte	.LFB65
 3133 0273 18000000 		.4byte	.LFE65-.LFB65
 3134 0277 01       		.uleb128 0x1
 3135 0278 9C       		.byte	0x9c
 3136 0279 8C020000 		.4byte	0x28c
 3137 027d 11       		.uleb128 0x11
 3138 027e 64697200 		.ascii	"dir\000"
 3139 0282 01       		.byte	0x1
 3140 0283 A9       		.byte	0xa9
 3141 0284 95000000 		.4byte	0x95
 3142 0288 02       		.uleb128 0x2
 3143 0289 91       		.byte	0x91
 3144 028a 77       		.sleb128 -9
 3145 028b 00       		.byte	0
 3146 028c 12       		.uleb128 0x12
 3147 028d 96050000 		.4byte	.LASF49
 3148 0291 01       		.byte	0x1
 3149 0292 AE       		.byte	0xae
 3150 0293 00000000 		.4byte	.LFB66
 3151 0297 54000000 		.4byte	.LFE66-.LFB66
 3152 029b 01       		.uleb128 0x1
 3153 029c 9C       		.byte	0x9c
 3154 029d B0020000 		.4byte	0x2b0
 3155 02a1 13       		.uleb128 0x13
 3156 02a2 6D657300 		.ascii	"mes\000"
 3157 02a6 01       		.byte	0x1
 3158 02a7 B3       		.byte	0xb3
 3159 02a8 B0020000 		.4byte	0x2b0
 3160 02ac 02       		.uleb128 0x2
 3161 02ad 91       		.byte	0x91
 3162 02ae 68       		.sleb128 -24
 3163 02af 00       		.byte	0
 3164 02b0 0E       		.uleb128 0xe
 3165 02b1 83000000 		.4byte	0x83
 3166 02b5 C0020000 		.4byte	0x2c0
 3167 02b9 0F       		.uleb128 0xf
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 69


 3168 02ba 76000000 		.4byte	0x76
 3169 02be 0F       		.byte	0xf
 3170 02bf 00       		.byte	0
 3171 02c0 10       		.uleb128 0x10
 3172 02c1 44010000 		.4byte	.LASF50
 3173 02c5 01       		.byte	0x1
 3174 02c6 B8       		.byte	0xb8
 3175 02c7 00000000 		.4byte	.LFB67
 3176 02cb 54010000 		.4byte	.LFE67-.LFB67
 3177 02cf 01       		.uleb128 0x1
 3178 02d0 9C       		.byte	0x9c
 3179 02d1 42030000 		.4byte	0x342
 3180 02d5 14       		.uleb128 0x14
 3181 02d6 CF020000 		.4byte	.LASF51
 3182 02da 01       		.byte	0x1
 3183 02db B8       		.byte	0xb8
 3184 02dc D8000000 		.4byte	0xd8
 3185 02e0 02       		.uleb128 0x2
 3186 02e1 91       		.byte	0x91
 3187 02e2 48       		.sleb128 -56
 3188 02e3 14       		.uleb128 0x14
 3189 02e4 DE040000 		.4byte	.LASF52
 3190 02e8 01       		.byte	0x1
 3191 02e9 B8       		.byte	0xb8
 3192 02ea D8000000 		.4byte	0xd8
 3193 02ee 02       		.uleb128 0x2
 3194 02ef 91       		.byte	0x91
 3195 02f0 40       		.sleb128 -64
 3196 02f1 0D       		.uleb128 0xd
 3197 02f2 71010000 		.4byte	.LASF53
 3198 02f6 01       		.byte	0x1
 3199 02f7 CD       		.byte	0xcd
 3200 02f8 95000000 		.4byte	0x95
 3201 02fc 02       		.uleb128 0x2
 3202 02fd 91       		.byte	0x91
 3203 02fe 77       		.sleb128 -9
 3204 02ff 0D       		.uleb128 0xd
 3205 0300 C4030000 		.4byte	.LASF54
 3206 0304 01       		.byte	0x1
 3207 0305 CE       		.byte	0xce
 3208 0306 95000000 		.4byte	0x95
 3209 030a 02       		.uleb128 0x2
 3210 030b 91       		.byte	0x91
 3211 030c 76       		.sleb128 -10
 3212 030d 15       		.uleb128 0x15
 3213 030e 24000000 		.4byte	.LBB3
 3214 0312 46000000 		.4byte	.LBE3-.LBB3
 3215 0316 29030000 		.4byte	0x329
 3216 031a 13       		.uleb128 0x13
 3217 031b 6D657300 		.ascii	"mes\000"
 3218 031f 01       		.byte	0x1
 3219 0320 BB       		.byte	0xbb
 3220 0321 B0020000 		.4byte	0x2b0
 3221 0325 02       		.uleb128 0x2
 3222 0326 91       		.byte	0x91
 3223 0327 64       		.sleb128 -28
 3224 0328 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 70


 3225 0329 0C       		.uleb128 0xc
 3226 032a 8C000000 		.4byte	.LBB4
 3227 032e 46000000 		.4byte	.LBE4-.LBB4
 3228 0332 13       		.uleb128 0x13
 3229 0333 6D657300 		.ascii	"mes\000"
 3230 0337 01       		.byte	0x1
 3231 0338 C5       		.byte	0xc5
 3232 0339 B0020000 		.4byte	0x2b0
 3233 033d 02       		.uleb128 0x2
 3234 033e 91       		.byte	0x91
 3235 033f 54       		.sleb128 -44
 3236 0340 00       		.byte	0
 3237 0341 00       		.byte	0
 3238 0342 16       		.uleb128 0x16
 3239 0343 A7050000 		.4byte	.LASF55
 3240 0347 01       		.byte	0x1
 3241 0348 D4       		.byte	0xd4
 3242 0349 00000000 		.4byte	.LFB68
 3243 034d 18000000 		.4byte	.LFE68-.LFB68
 3244 0351 01       		.uleb128 0x1
 3245 0352 9C       		.byte	0x9c
 3246 0353 16       		.uleb128 0x16
 3247 0354 CC060000 		.4byte	.LASF56
 3248 0358 01       		.byte	0x1
 3249 0359 DA       		.byte	0xda
 3250 035a 00000000 		.4byte	.LFB69
 3251 035e 18000000 		.4byte	.LFE69-.LFB69
 3252 0362 01       		.uleb128 0x1
 3253 0363 9C       		.byte	0x9c
 3254 0364 16       		.uleb128 0x16
 3255 0365 3E050000 		.4byte	.LASF57
 3256 0369 01       		.byte	0x1
 3257 036a E0       		.byte	0xe0
 3258 036b 00000000 		.4byte	.LFB70
 3259 036f 22000000 		.4byte	.LFE70-.LFB70
 3260 0373 01       		.uleb128 0x1
 3261 0374 9C       		.byte	0x9c
 3262 0375 16       		.uleb128 0x16
 3263 0376 7C010000 		.4byte	.LASF58
 3264 037a 01       		.byte	0x1
 3265 037b E7       		.byte	0xe7
 3266 037c 00000000 		.4byte	.LFB71
 3267 0380 1C000000 		.4byte	.LFE71-.LFB71
 3268 0384 01       		.uleb128 0x1
 3269 0385 9C       		.byte	0x9c
 3270 0386 16       		.uleb128 0x16
 3271 0387 8A010000 		.4byte	.LASF59
 3272 038b 01       		.byte	0x1
 3273 038c EC       		.byte	0xec
 3274 038d 00000000 		.4byte	.LFB72
 3275 0391 1C000000 		.4byte	.LFE72-.LFB72
 3276 0395 01       		.uleb128 0x1
 3277 0396 9C       		.byte	0x9c
 3278 0397 16       		.uleb128 0x16
 3279 0398 E3040000 		.4byte	.LASF60
 3280 039c 01       		.byte	0x1
 3281 039d F1       		.byte	0xf1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 71


 3282 039e 00000000 		.4byte	.LFB73
 3283 03a2 1C000000 		.4byte	.LFE73-.LFB73
 3284 03a6 01       		.uleb128 0x1
 3285 03a7 9C       		.byte	0x9c
 3286 03a8 16       		.uleb128 0x16
 3287 03a9 CF010000 		.4byte	.LASF61
 3288 03ad 01       		.byte	0x1
 3289 03ae F6       		.byte	0xf6
 3290 03af 00000000 		.4byte	.LFB74
 3291 03b3 2C000000 		.4byte	.LFE74-.LFB74
 3292 03b7 01       		.uleb128 0x1
 3293 03b8 9C       		.byte	0x9c
 3294 03b9 16       		.uleb128 0x16
 3295 03ba 96040000 		.4byte	.LASF62
 3296 03be 01       		.byte	0x1
 3297 03bf FE       		.byte	0xfe
 3298 03c0 00000000 		.4byte	.LFB75
 3299 03c4 2C000000 		.4byte	.LFE75-.LFB75
 3300 03c8 01       		.uleb128 0x1
 3301 03c9 9C       		.byte	0x9c
 3302 03ca 17       		.uleb128 0x17
 3303 03cb 1B010000 		.4byte	.LASF63
 3304 03cf 01       		.byte	0x1
 3305 03d0 0601     		.2byte	0x106
 3306 03d2 00000000 		.4byte	.LFB76
 3307 03d6 14000000 		.4byte	.LFE76-.LFB76
 3308 03da 01       		.uleb128 0x1
 3309 03db 9C       		.byte	0x9c
 3310 03dc 18       		.uleb128 0x18
 3311 03dd E5010000 		.4byte	.LASF64
 3312 03e1 01       		.byte	0x1
 3313 03e2 0B01     		.2byte	0x10b
 3314 03e4 00000000 		.4byte	.LFB77
 3315 03e8 18000000 		.4byte	.LFE77-.LFB77
 3316 03ec 01       		.uleb128 0x1
 3317 03ed 9C       		.byte	0x9c
 3318 03ee 18       		.uleb128 0x18
 3319 03ef F8020000 		.4byte	.LASF65
 3320 03f3 01       		.byte	0x1
 3321 03f4 0F01     		.2byte	0x10f
 3322 03f6 00000000 		.4byte	.LFB78
 3323 03fa 18000000 		.4byte	.LFE78-.LFB78
 3324 03fe 01       		.uleb128 0x1
 3325 03ff 9C       		.byte	0x9c
 3326 0400 19       		.uleb128 0x19
 3327 0401 28040000 		.4byte	.LASF66
 3328 0405 01       		.byte	0x1
 3329 0406 1501     		.2byte	0x115
 3330 0408 00000000 		.4byte	.LFB79
 3331 040c 98000000 		.4byte	.LFE79-.LFB79
 3332 0410 01       		.uleb128 0x1
 3333 0411 9C       		.byte	0x9c
 3334 0412 26040000 		.4byte	0x426
 3335 0416 1A       		.uleb128 0x1a
 3336 0417 A1030000 		.4byte	.LASF67
 3337 041b 01       		.byte	0x1
 3338 041c 1601     		.2byte	0x116
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 72


 3339 041e 83000000 		.4byte	0x83
 3340 0422 02       		.uleb128 0x2
 3341 0423 91       		.byte	0x91
 3342 0424 6F       		.sleb128 -17
 3343 0425 00       		.byte	0
 3344 0426 19       		.uleb128 0x19
 3345 0427 13040000 		.4byte	.LASF68
 3346 042b 01       		.byte	0x1
 3347 042c 2D01     		.2byte	0x12d
 3348 042e 00000000 		.4byte	.LFB80
 3349 0432 A2000000 		.4byte	.LFE80-.LFB80
 3350 0436 01       		.uleb128 0x1
 3351 0437 9C       		.byte	0x9c
 3352 0438 4C040000 		.4byte	0x44c
 3353 043c 1A       		.uleb128 0x1a
 3354 043d A1030000 		.4byte	.LASF67
 3355 0441 01       		.byte	0x1
 3356 0442 2F01     		.2byte	0x12f
 3357 0444 83000000 		.4byte	0x83
 3358 0448 02       		.uleb128 0x2
 3359 0449 91       		.byte	0x91
 3360 044a 77       		.sleb128 -9
 3361 044b 00       		.byte	0
 3362 044c 1B       		.uleb128 0x1b
 3363 044d 22060000 		.4byte	.LASF69
 3364 0451 01       		.byte	0x1
 3365 0452 4701     		.2byte	0x147
 3366 0454 00000000 		.4byte	.LFB81
 3367 0458 0C000000 		.4byte	.LFE81-.LFB81
 3368 045c 01       		.uleb128 0x1
 3369 045d 9C       		.byte	0x9c
 3370 045e 1C       		.uleb128 0x1c
 3371 045f F5040000 		.4byte	.LASF70
 3372 0463 01       		.byte	0x1
 3373 0464 4D01     		.2byte	0x14d
 3374 0466 00000000 		.4byte	.LFB82
 3375 046a 2C000000 		.4byte	.LFE82-.LFB82
 3376 046e 01       		.uleb128 0x1
 3377 046f 9C       		.byte	0x9c
 3378 0470 1C       		.uleb128 0x1c
 3379 0471 34010000 		.4byte	.LASF71
 3380 0475 01       		.byte	0x1
 3381 0476 5601     		.2byte	0x156
 3382 0478 00000000 		.4byte	.LFB83
 3383 047c B8000000 		.4byte	.LFE83-.LFB83
 3384 0480 01       		.uleb128 0x1
 3385 0481 9C       		.byte	0x9c
 3386 0482 1C       		.uleb128 0x1c
 3387 0483 B6010000 		.4byte	.LASF72
 3388 0487 01       		.byte	0x1
 3389 0488 6B01     		.2byte	0x16b
 3390 048a 00000000 		.4byte	.LFB84
 3391 048e 70000000 		.4byte	.LFE84-.LFB84
 3392 0492 01       		.uleb128 0x1
 3393 0493 9C       		.byte	0x9c
 3394 0494 1B       		.uleb128 0x1b
 3395 0495 62050000 		.4byte	.LASF73
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 73


 3396 0499 01       		.byte	0x1
 3397 049a 8401     		.2byte	0x184
 3398 049c 00000000 		.4byte	.LFB85
 3399 04a0 20000000 		.4byte	.LFE85-.LFB85
 3400 04a4 01       		.uleb128 0x1
 3401 04a5 9C       		.byte	0x9c
 3402 04a6 1C       		.uleb128 0x1c
 3403 04a7 2C020000 		.4byte	.LASF74
 3404 04ab 01       		.byte	0x1
 3405 04ac 8B01     		.2byte	0x18b
 3406 04ae 00000000 		.4byte	.LFB86
 3407 04b2 1C000000 		.4byte	.LFE86-.LFB86
 3408 04b6 01       		.uleb128 0x1
 3409 04b7 9C       		.byte	0x9c
 3410 04b8 1C       		.uleb128 0x1c
 3411 04b9 85000000 		.4byte	.LASF75
 3412 04bd 01       		.byte	0x1
 3413 04be 9401     		.2byte	0x194
 3414 04c0 00000000 		.4byte	.LFB87
 3415 04c4 0A000000 		.4byte	.LFE87-.LFB87
 3416 04c8 01       		.uleb128 0x1
 3417 04c9 9C       		.byte	0x9c
 3418 04ca 1D       		.uleb128 0x1d
 3419 04cb 26000000 		.4byte	.LASF76
 3420 04cf 01       		.byte	0x1
 3421 04d0 9901     		.2byte	0x199
 3422 04d2 00000000 		.4byte	.LFB88
 3423 04d6 30020000 		.4byte	.LFE88-.LFB88
 3424 04da 01       		.uleb128 0x1
 3425 04db 9C       		.byte	0x9c
 3426 04dc 3B050000 		.4byte	0x53b
 3427 04e0 1A       		.uleb128 0x1a
 3428 04e1 0C020000 		.4byte	.LASF77
 3429 04e5 01       		.byte	0x1
 3430 04e6 A701     		.2byte	0x1a7
 3431 04e8 C5000000 		.4byte	0xc5
 3432 04ec 02       		.uleb128 0x2
 3433 04ed 91       		.byte	0x91
 3434 04ee 5E       		.sleb128 -34
 3435 04ef 1A       		.uleb128 0x1a
 3436 04f0 A9030000 		.4byte	.LASF78
 3437 04f4 01       		.byte	0x1
 3438 04f5 A801     		.2byte	0x1a8
 3439 04f7 C5000000 		.4byte	0xc5
 3440 04fb 02       		.uleb128 0x2
 3441 04fc 91       		.byte	0x91
 3442 04fd 5C       		.sleb128 -36
 3443 04fe 1A       		.uleb128 0x1a
 3444 04ff 6B020000 		.4byte	.LASF79
 3445 0503 01       		.byte	0x1
 3446 0504 A901     		.2byte	0x1a9
 3447 0506 D8000000 		.4byte	0xd8
 3448 050a 02       		.uleb128 0x2
 3449 050b 91       		.byte	0x91
 3450 050c 68       		.sleb128 -24
 3451 050d 1A       		.uleb128 0x1a
 3452 050e 9E060000 		.4byte	.LASF80
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 74


 3453 0512 01       		.byte	0x1
 3454 0513 AA01     		.2byte	0x1aa
 3455 0515 D8000000 		.4byte	0xd8
 3456 0519 02       		.uleb128 0x2
 3457 051a 91       		.byte	0x91
 3458 051b 60       		.sleb128 -32
 3459 051c 1A       		.uleb128 0x1a
 3460 051d C5020000 		.4byte	.LASF81
 3461 0521 01       		.byte	0x1
 3462 0522 B301     		.2byte	0x1b3
 3463 0524 68000000 		.4byte	0x68
 3464 0528 02       		.uleb128 0x2
 3465 0529 91       		.byte	0x91
 3466 052a 58       		.sleb128 -40
 3467 052b 1A       		.uleb128 0x1a
 3468 052c 2B060000 		.4byte	.LASF82
 3469 0530 01       		.byte	0x1
 3470 0531 B401     		.2byte	0x1b4
 3471 0533 68000000 		.4byte	0x68
 3472 0537 02       		.uleb128 0x2
 3473 0538 91       		.byte	0x91
 3474 0539 54       		.sleb128 -44
 3475 053a 00       		.byte	0
 3476 053b 1D       		.uleb128 0x1d
 3477 053c C5010000 		.4byte	.LASF83
 3478 0540 01       		.byte	0x1
 3479 0541 C201     		.2byte	0x1c2
 3480 0543 00000000 		.4byte	.LFB89
 3481 0547 10010000 		.4byte	.LFE89-.LFB89
 3482 054b 01       		.uleb128 0x1
 3483 054c 9C       		.byte	0x9c
 3484 054d 7D050000 		.4byte	0x57d
 3485 0551 1E       		.uleb128 0x1e
 3486 0552 6E6C00   		.ascii	"nl\000"
 3487 0555 01       		.byte	0x1
 3488 0556 C601     		.2byte	0x1c6
 3489 0558 95000000 		.4byte	0x95
 3490 055c 02       		.uleb128 0x2
 3491 055d 91       		.byte	0x91
 3492 055e 77       		.sleb128 -9
 3493 055f 1E       		.uleb128 0x1e
 3494 0560 6E7200   		.ascii	"nr\000"
 3495 0563 01       		.byte	0x1
 3496 0564 C701     		.2byte	0x1c7
 3497 0566 95000000 		.4byte	0x95
 3498 056a 02       		.uleb128 0x2
 3499 056b 91       		.byte	0x91
 3500 056c 76       		.sleb128 -10
 3501 056d 1E       		.uleb128 0x1e
 3502 056e 6D696400 		.ascii	"mid\000"
 3503 0572 01       		.byte	0x1
 3504 0573 C801     		.2byte	0x1c8
 3505 0575 95000000 		.4byte	0x95
 3506 0579 02       		.uleb128 0x2
 3507 057a 91       		.byte	0x91
 3508 057b 75       		.sleb128 -11
 3509 057c 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 75


 3510 057d 1D       		.uleb128 0x1d
 3511 057e 61020000 		.4byte	.LASF84
 3512 0582 01       		.byte	0x1
 3513 0583 E601     		.2byte	0x1e6
 3514 0585 00000000 		.4byte	.LFB90
 3515 0589 C0000000 		.4byte	.LFE90-.LFB90
 3516 058d 01       		.uleb128 0x1
 3517 058e 9C       		.byte	0x9c
 3518 058f CB050000 		.4byte	0x5cb
 3519 0593 0C       		.uleb128 0xc
 3520 0594 0E000000 		.4byte	.LBB5
 3521 0598 8E000000 		.4byte	.LBE5-.LBB5
 3522 059c 1A       		.uleb128 0x1a
 3523 059d FE010000 		.4byte	.LASF85
 3524 05a1 01       		.byte	0x1
 3525 05a2 EF01     		.2byte	0x1ef
 3526 05a4 D1000000 		.4byte	0xd1
 3527 05a8 02       		.uleb128 0x2
 3528 05a9 91       		.byte	0x91
 3529 05aa 74       		.sleb128 -12
 3530 05ab 1A       		.uleb128 0x1a
 3531 05ac DA030000 		.4byte	.LASF86
 3532 05b0 01       		.byte	0x1
 3533 05b1 F001     		.2byte	0x1f0
 3534 05b3 C5000000 		.4byte	0xc5
 3535 05b7 02       		.uleb128 0x2
 3536 05b8 91       		.byte	0x91
 3537 05b9 72       		.sleb128 -14
 3538 05ba 1A       		.uleb128 0x1a
 3539 05bb 33020000 		.4byte	.LASF87
 3540 05bf 01       		.byte	0x1
 3541 05c0 F501     		.2byte	0x1f5
 3542 05c2 B0020000 		.4byte	0x2b0
 3543 05c6 02       		.uleb128 0x2
 3544 05c7 91       		.byte	0x91
 3545 05c8 60       		.sleb128 -32
 3546 05c9 00       		.byte	0
 3547 05ca 00       		.byte	0
 3548 05cb 1D       		.uleb128 0x1d
 3549 05cc 8D060000 		.4byte	.LASF88
 3550 05d0 01       		.byte	0x1
 3551 05d1 FC01     		.2byte	0x1fc
 3552 05d3 00000000 		.4byte	.LFB91
 3553 05d7 B8000000 		.4byte	.LFE91-.LFB91
 3554 05db 01       		.uleb128 0x1
 3555 05dc 9C       		.byte	0x9c
 3556 05dd FB050000 		.4byte	0x5fb
 3557 05e1 0C       		.uleb128 0xc
 3558 05e2 0E000000 		.4byte	.LBB6
 3559 05e6 86000000 		.4byte	.LBE6-.LBB6
 3560 05ea 1A       		.uleb128 0x1a
 3561 05eb B1040000 		.4byte	.LASF89
 3562 05ef 01       		.byte	0x1
 3563 05f0 0002     		.2byte	0x200
 3564 05f2 B0020000 		.4byte	0x2b0
 3565 05f6 02       		.uleb128 0x2
 3566 05f7 91       		.byte	0x91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 76


 3567 05f8 68       		.sleb128 -24
 3568 05f9 00       		.byte	0
 3569 05fa 00       		.byte	0
 3570 05fb 1F       		.uleb128 0x1f
 3571 05fc 1D060000 		.4byte	.LASF90
 3572 0600 01       		.byte	0x1
 3573 0601 1102     		.2byte	0x211
 3574 0603 68000000 		.4byte	0x68
 3575 0607 00000000 		.4byte	.LFB92
 3576 060b B8000000 		.4byte	.LFE92-.LFB92
 3577 060f 01       		.uleb128 0x1
 3578 0610 9C       		.byte	0x9c
 3579 0611 19       		.uleb128 0x19
 3580 0612 0E010000 		.4byte	.LASF91
 3581 0616 01       		.byte	0x1
 3582 0617 7202     		.2byte	0x272
 3583 0619 00000000 		.4byte	.LFB93
 3584 061d 68000000 		.4byte	.LFE93-.LFB93
 3585 0621 01       		.uleb128 0x1
 3586 0622 9C       		.byte	0x9c
 3587 0623 4E060000 		.4byte	0x64e
 3588 0627 20       		.uleb128 0x20
 3589 0628 7300     		.ascii	"s\000"
 3590 062a 01       		.byte	0x1
 3591 062b 7202     		.2byte	0x272
 3592 062d 7D000000 		.4byte	0x7d
 3593 0631 02       		.uleb128 0x2
 3594 0632 91       		.byte	0x91
 3595 0633 6C       		.sleb128 -20
 3596 0634 0C       		.uleb128 0xc
 3597 0635 10000000 		.4byte	.LBB7
 3598 0639 48000000 		.4byte	.LBE7-.LBB7
 3599 063d 1E       		.uleb128 0x1e
 3600 063e 636E7400 		.ascii	"cnt\000"
 3601 0642 01       		.byte	0x1
 3602 0643 7902     		.2byte	0x279
 3603 0645 AD000000 		.4byte	0xad
 3604 0649 02       		.uleb128 0x2
 3605 064a 91       		.byte	0x91
 3606 064b 74       		.sleb128 -12
 3607 064c 00       		.byte	0
 3608 064d 00       		.byte	0
 3609 064e 19       		.uleb128 0x19
 3610 064f E1050000 		.4byte	.LASF92
 3611 0653 01       		.byte	0x1
 3612 0654 8802     		.2byte	0x288
 3613 0656 00000000 		.4byte	.LFB94
 3614 065a 50000000 		.4byte	.LFE94-.LFB94
 3615 065e 01       		.uleb128 0x1
 3616 065f 9C       		.byte	0x9c
 3617 0660 8B060000 		.4byte	0x68b
 3618 0664 20       		.uleb128 0x20
 3619 0665 6300     		.ascii	"c\000"
 3620 0667 01       		.byte	0x1
 3621 0668 8802     		.2byte	0x288
 3622 066a 83000000 		.4byte	0x83
 3623 066e 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 77


 3624 066f 91       		.byte	0x91
 3625 0670 6F       		.sleb128 -17
 3626 0671 0C       		.uleb128 0xc
 3627 0672 12000000 		.4byte	.LBB8
 3628 0676 2E000000 		.4byte	.LBE8-.LBB8
 3629 067a 1E       		.uleb128 0x1e
 3630 067b 636E7400 		.ascii	"cnt\000"
 3631 067f 01       		.byte	0x1
 3632 0680 8C02     		.2byte	0x28c
 3633 0682 AD000000 		.4byte	0xad
 3634 0686 02       		.uleb128 0x2
 3635 0687 91       		.byte	0x91
 3636 0688 74       		.sleb128 -12
 3637 0689 00       		.byte	0
 3638 068a 00       		.byte	0
 3639 068b 1D       		.uleb128 0x1d
 3640 068c 3E020000 		.4byte	.LASF93
 3641 0690 01       		.byte	0x1
 3642 0691 9902     		.2byte	0x299
 3643 0693 00000000 		.4byte	.LFB95
 3644 0697 3A000000 		.4byte	.LFE95-.LFB95
 3645 069b 01       		.uleb128 0x1
 3646 069c 9C       		.byte	0x9c
 3647 069d AF060000 		.4byte	0x6af
 3648 06a1 1E       		.uleb128 0x1e
 3649 06a2 6300     		.ascii	"c\000"
 3650 06a4 01       		.byte	0x1
 3651 06a5 9B02     		.2byte	0x29b
 3652 06a7 95000000 		.4byte	0x95
 3653 06ab 02       		.uleb128 0x2
 3654 06ac 91       		.byte	0x91
 3655 06ad 77       		.sleb128 -9
 3656 06ae 00       		.byte	0
 3657 06af 21       		.uleb128 0x21
 3658 06b0 A4040000 		.4byte	.LASF94
 3659 06b4 06       		.byte	0x6
 3660 06b5 9606     		.2byte	0x696
 3661 06b7 BB060000 		.4byte	0x6bb
 3662 06bb 22       		.uleb128 0x22
 3663 06bc 8A000000 		.4byte	0x8a
 3664 06c0 23       		.uleb128 0x23
 3665 06c1 747300   		.ascii	"ts\000"
 3666 06c4 05       		.byte	0x5
 3667 06c5 10       		.byte	0x10
 3668 06c6 95000000 		.4byte	0x95
 3669 06ca 05       		.uleb128 0x5
 3670 06cb 03       		.byte	0x3
 3671 06cc 00000000 		.4byte	ts
 3672 06d0 24       		.uleb128 0x24
 3673 06d1 6F050000 		.4byte	.LASF95
 3674 06d5 05       		.byte	0x5
 3675 06d6 11       		.byte	0x11
 3676 06d7 A1000000 		.4byte	0xa1
 3677 06db 05       		.uleb128 0x5
 3678 06dc 03       		.byte	0x3
 3679 06dd 00000000 		.4byte	ts_enc
 3680 06e1 24       		.uleb128 0x24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 78


 3681 06e2 BD040000 		.4byte	.LASF96
 3682 06e6 05       		.byte	0x5
 3683 06e7 12       		.byte	0x12
 3684 06e8 A1000000 		.4byte	0xa1
 3685 06ec 05       		.uleb128 0x5
 3686 06ed 03       		.byte	0x3
 3687 06ee 00000000 		.4byte	ts_update
 3688 06f2 24       		.uleb128 0x24
 3689 06f3 B4030000 		.4byte	.LASF97
 3690 06f7 05       		.byte	0x5
 3691 06f8 13       		.byte	0x13
 3692 06f9 A1000000 		.4byte	0xa1
 3693 06fd 05       		.uleb128 0x5
 3694 06fe 03       		.byte	0x3
 3695 06ff 00000000 		.4byte	ts_speed
 3696 0703 24       		.uleb128 0x24
 3697 0704 56020000 		.4byte	.LASF98
 3698 0708 05       		.byte	0x5
 3699 0709 14       		.byte	0x14
 3700 070a A1000000 		.4byte	0xa1
 3701 070e 05       		.uleb128 0x5
 3702 070f 03       		.byte	0x3
 3703 0710 00000000 		.4byte	ts_display
 3704 0714 24       		.uleb128 0x24
 3705 0715 16020000 		.4byte	.LASF99
 3706 0719 05       		.byte	0x5
 3707 071a 16       		.byte	0x16
 3708 071b 95000000 		.4byte	0x95
 3709 071f 05       		.uleb128 0x5
 3710 0720 03       		.byte	0x3
 3711 0721 00000000 		.4byte	flag_ts_enc
 3712 0725 24       		.uleb128 0x24
 3713 0726 EF010000 		.4byte	.LASF100
 3714 072a 05       		.byte	0x5
 3715 072b 17       		.byte	0x17
 3716 072c 95000000 		.4byte	0x95
 3717 0730 05       		.uleb128 0x5
 3718 0731 03       		.byte	0x3
 3719 0732 00000000 		.4byte	flag_ts_update
 3720 0736 24       		.uleb128 0x24
 3721 0737 3E040000 		.4byte	.LASF101
 3722 073b 05       		.byte	0x5
 3723 073c 18       		.byte	0x18
 3724 073d 95000000 		.4byte	0x95
 3725 0741 05       		.uleb128 0x5
 3726 0742 03       		.byte	0x3
 3727 0743 00000000 		.4byte	flag_ts_speed
 3728 0747 24       		.uleb128 0x24
 3729 0748 80050000 		.4byte	.LASF102
 3730 074c 05       		.byte	0x5
 3731 074d 19       		.byte	0x19
 3732 074e 95000000 		.4byte	0x95
 3733 0752 05       		.uleb128 0x5
 3734 0753 03       		.byte	0x3
 3735 0754 00000000 		.4byte	flag_ts_display
 3736 0758 24       		.uleb128 0x24
 3737 0759 5B040000 		.4byte	.LASF103
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 79


 3738 075d 05       		.byte	0x5
 3739 075e 1C       		.byte	0x1c
 3740 075f 95000000 		.4byte	0x95
 3741 0763 05       		.uleb128 0x5
 3742 0764 03       		.byte	0x3
 3743 0765 00000000 		.4byte	flag_rx
 3744 0769 24       		.uleb128 0x24
 3745 076a AA010000 		.4byte	.LASF104
 3746 076e 05       		.byte	0x5
 3747 076f 1D       		.byte	0x1d
 3748 0770 95000000 		.4byte	0x95
 3749 0774 05       		.uleb128 0x5
 3750 0775 03       		.byte	0x3
 3751 0776 00000000 		.4byte	flag_packet
 3752 077a 24       		.uleb128 0x24
 3753 077b AB060000 		.4byte	.LASF105
 3754 077f 05       		.byte	0x5
 3755 0780 1E       		.byte	0x1e
 3756 0781 95000000 		.4byte	0x95
 3757 0785 05       		.uleb128 0x5
 3758 0786 03       		.byte	0x3
 3759 0787 00000000 		.4byte	flag_KB_string
 3760 078b 24       		.uleb128 0x24
 3761 078c 4C040000 		.4byte	.LASF106
 3762 0790 05       		.byte	0x5
 3763 0791 20       		.byte	0x20
 3764 0792 95000000 		.4byte	0x95
 3765 0796 05       		.uleb128 0x5
 3766 0797 03       		.byte	0x3
 3767 0798 00000000 		.4byte	dataready_flag
 3768 079c 24       		.uleb128 0x24
 3769 079d D5000000 		.4byte	.LASF107
 3770 07a1 05       		.byte	0x5
 3771 07a2 22       		.byte	0x22
 3772 07a3 95000000 		.4byte	0x95
 3773 07a7 05       		.uleb128 0x5
 3774 07a8 03       		.byte	0x3
 3775 07a9 00000000 		.4byte	flag_rf_transmission_active
 3776 07ad 24       		.uleb128 0x24
 3777 07ae F1000000 		.4byte	.LASF108
 3778 07b2 05       		.byte	0x5
 3779 07b3 23       		.byte	0x23
 3780 07b4 95000000 		.4byte	0x95
 3781 07b8 05       		.uleb128 0x5
 3782 07b9 03       		.byte	0x3
 3783 07ba 00000000 		.4byte	flag_print_rf
 3784 07be 24       		.uleb128 0x24
 3785 07bf FA030000 		.4byte	.LASF109
 3786 07c3 05       		.byte	0x5
 3787 07c4 25       		.byte	0x25
 3788 07c5 95000000 		.4byte	0x95
 3789 07c9 05       		.uleb128 0x5
 3790 07ca 03       		.byte	0x3
 3791 07cb 00000000 		.4byte	flag_receive_ADC
 3792 07cf 24       		.uleb128 0x24
 3793 07d0 6D040000 		.4byte	.LASF110
 3794 07d4 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 80


 3795 07d5 26       		.byte	0x26
 3796 07d6 C5000000 		.4byte	0xc5
 3797 07da 05       		.uleb128 0x5
 3798 07db 03       		.byte	0x3
 3799 07dc 00000000 		.4byte	adc_result
 3800 07e0 24       		.uleb128 0x24
 3801 07e1 00000000 		.4byte	.LASF111
 3802 07e5 05       		.byte	0x5
 3803 07e6 28       		.byte	0x28
 3804 07e7 95000000 		.4byte	0x95
 3805 07eb 05       		.uleb128 0x5
 3806 07ec 03       		.byte	0x3
 3807 07ed 00000000 		.4byte	direction
 3808 07f1 24       		.uleb128 0x24
 3809 07f2 78040000 		.4byte	.LASF112
 3810 07f6 05       		.byte	0x5
 3811 07f7 2C       		.byte	0x2c
 3812 07f8 95000000 		.4byte	0x95
 3813 07fc 05       		.uleb128 0x5
 3814 07fd 03       		.byte	0x3
 3815 07fe 00000000 		.4byte	flag_calc_wheelspeed
 3816 0802 24       		.uleb128 0x24
 3817 0803 BD000000 		.4byte	.LASF113
 3818 0807 05       		.byte	0x5
 3819 0808 2D       		.byte	0x2d
 3820 0809 C5000000 		.4byte	0xc5
 3821 080d 05       		.uleb128 0x5
 3822 080e 03       		.byte	0x3
 3823 080f 00000000 		.4byte	quad_count1
 3824 0813 24       		.uleb128 0x24
 3825 0814 C9000000 		.4byte	.LASF114
 3826 0818 05       		.byte	0x5
 3827 0819 2E       		.byte	0x2e
 3828 081a C5000000 		.4byte	0xc5
 3829 081e 05       		.uleb128 0x5
 3830 081f 03       		.byte	0x3
 3831 0820 00000000 		.4byte	quad_count2
 3832 0824 24       		.uleb128 0x24
 3833 0825 BF050000 		.4byte	.LASF115
 3834 0829 05       		.byte	0x5
 3835 082a 2F       		.byte	0x2f
 3836 082b C5000000 		.4byte	0xc5
 3837 082f 05       		.uleb128 0x5
 3838 0830 03       		.byte	0x3
 3839 0831 00000000 		.4byte	last_quad_count1
 3840 0835 24       		.uleb128 0x24
 3841 0836 D0050000 		.4byte	.LASF116
 3842 083a 05       		.byte	0x5
 3843 083b 30       		.byte	0x30
 3844 083c C5000000 		.4byte	0xc5
 3845 0840 05       		.uleb128 0x5
 3846 0841 03       		.byte	0x3
 3847 0842 00000000 		.4byte	last_quad_count2
 3848 0846 24       		.uleb128 0x24
 3849 0847 10000000 		.4byte	.LASF117
 3850 084b 05       		.byte	0x5
 3851 084c 31       		.byte	0x31
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 81


 3852 084d C5000000 		.4byte	0xc5
 3853 0851 05       		.uleb128 0x5
 3854 0852 03       		.byte	0x3
 3855 0853 00000000 		.4byte	quad_diff1
 3856 0857 24       		.uleb128 0x24
 3857 0858 1B000000 		.4byte	.LASF118
 3858 085c 05       		.byte	0x5
 3859 085d 32       		.byte	0x32
 3860 085e C5000000 		.4byte	0xc5
 3861 0862 05       		.uleb128 0x5
 3862 0863 03       		.byte	0x3
 3863 0864 00000000 		.4byte	quad_diff2
 3864 0868 24       		.uleb128 0x24
 3865 0869 44000000 		.4byte	.LASF119
 3866 086d 05       		.byte	0x5
 3867 086e 35       		.byte	0x35
 3868 086f C5000000 		.4byte	0xc5
 3869 0873 05       		.uleb128 0x5
 3870 0874 03       		.byte	0x3
 3871 0875 00000000 		.4byte	start_turn_count
 3872 0879 24       		.uleb128 0x24
 3873 087a 2E040000 		.4byte	.LASF120
 3874 087e 05       		.byte	0x5
 3875 087f 38       		.byte	0x38
 3876 0880 C5000000 		.4byte	0xc5
 3877 0884 05       		.uleb128 0x5
 3878 0885 03       		.byte	0x3
 3879 0886 00000000 		.4byte	left_duty_cycle
 3880 088a 24       		.uleb128 0x24
 3881 088b 42060000 		.4byte	.LASF121
 3882 088f 05       		.byte	0x5
 3883 0890 39       		.byte	0x39
 3884 0891 C5000000 		.4byte	0xc5
 3885 0895 05       		.uleb128 0x5
 3886 0896 03       		.byte	0x3
 3887 0897 00000000 		.4byte	right_duty_cycle
 3888 089b 24       		.uleb128 0x24
 3889 089c C7040000 		.4byte	.LASF122
 3890 08a0 05       		.byte	0x5
 3891 08a1 3C       		.byte	0x3c
 3892 08a2 C5000000 		.4byte	0xc5
 3893 08a6 05       		.uleb128 0x5
 3894 08a7 03       		.byte	0x3
 3895 08a8 00000000 		.4byte	leftSpeedLimit
 3896 08ac 24       		.uleb128 0x24
 3897 08ad 85020000 		.4byte	.LASF123
 3898 08b1 05       		.byte	0x5
 3899 08b2 3D       		.byte	0x3d
 3900 08b3 C5000000 		.4byte	0xc5
 3901 08b7 05       		.uleb128 0x5
 3902 08b8 03       		.byte	0x3
 3903 08b9 00000000 		.4byte	rightSpeedLimit
 3904 08bd 24       		.uleb128 0x24
 3905 08be 76050000 		.4byte	.LASF124
 3906 08c2 05       		.byte	0x5
 3907 08c3 40       		.byte	0x40
 3908 08c4 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 82


 3909 08c8 05       		.uleb128 0x5
 3910 08c9 03       		.byte	0x3
 3911 08ca 00000000 		.4byte	brakeFlag
 3912 08ce 24       		.uleb128 0x24
 3913 08cf DC010000 		.4byte	.LASF125
 3914 08d3 05       		.byte	0x5
 3915 08d4 41       		.byte	0x41
 3916 08d5 95000000 		.4byte	0x95
 3917 08d9 05       		.uleb128 0x5
 3918 08da 03       		.byte	0x3
 3919 08db 00000000 		.4byte	portOpen
 3920 08df 24       		.uleb128 0x24
 3921 08e0 38000000 		.4byte	.LASF126
 3922 08e4 05       		.byte	0x5
 3923 08e5 44       		.byte	0x44
 3924 08e6 C5000000 		.4byte	0xc5
 3925 08ea 05       		.uleb128 0x5
 3926 08eb 03       		.byte	0x3
 3927 08ec 00000000 		.4byte	prevVoltage
 3928 08f0 24       		.uleb128 0x24
 3929 08f1 9B000000 		.4byte	.LASF127
 3930 08f5 05       		.byte	0x5
 3931 08f6 45       		.byte	0x45
 3932 08f7 C5000000 		.4byte	0xc5
 3933 08fb 05       		.uleb128 0x5
 3934 08fc 03       		.byte	0x3
 3935 08fd 00000000 		.4byte	prevVoltage2
 3936 0901 0E       		.uleb128 0xe
 3937 0902 83000000 		.4byte	0x83
 3938 0906 11090000 		.4byte	0x911
 3939 090a 0F       		.uleb128 0xf
 3940 090b 76000000 		.4byte	0x76
 3941 090f 3F       		.byte	0x3f
 3942 0910 00       		.byte	0
 3943 0911 24       		.uleb128 0x24
 3944 0912 B1050000 		.4byte	.LASF128
 3945 0916 05       		.byte	0x5
 3946 0917 4B       		.byte	0x4b
 3947 0918 01090000 		.4byte	0x901
 3948 091c 05       		.uleb128 0x5
 3949 091d 03       		.byte	0x3
 3950 091e 00000000 		.4byte	displaystring
 3951 0922 24       		.uleb128 0x24
 3952 0923 5D050000 		.4byte	.LASF129
 3953 0927 05       		.byte	0x5
 3954 0928 4C       		.byte	0x4c
 3955 0929 01090000 		.4byte	0x901
 3956 092d 05       		.uleb128 0x5
 3957 092e 03       		.byte	0x3
 3958 092f 00000000 		.4byte	line
 3959 0933 24       		.uleb128 0x24
 3960 0934 49050000 		.4byte	.LASF130
 3961 0938 05       		.byte	0x5
 3962 0939 4C       		.byte	0x4c
 3963 093a 01090000 		.4byte	0x901
 3964 093e 05       		.uleb128 0x5
 3965 093f 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 83


 3966 0940 00000000 		.4byte	entry
 3967 0944 0E       		.uleb128 0xe
 3968 0945 95000000 		.4byte	0x95
 3969 0949 54090000 		.4byte	0x954
 3970 094d 0F       		.uleb128 0xf
 3971 094e 76000000 		.4byte	0x76
 3972 0952 3F       		.byte	0x3f
 3973 0953 00       		.byte	0
 3974 0954 24       		.uleb128 0x24
 3975 0955 4D010000 		.4byte	.LASF131
 3976 0959 05       		.byte	0x5
 3977 095a 4D       		.byte	0x4d
 3978 095b 44090000 		.4byte	0x944
 3979 095f 05       		.uleb128 0x5
 3980 0960 03       		.byte	0x3
 3981 0961 00000000 		.4byte	usbBuffer
 3982 0965 24       		.uleb128 0x24
 3983 0966 E3020000 		.4byte	.LASF132
 3984 096a 05       		.byte	0x5
 3985 096b 62       		.byte	0x62
 3986 096c 11010000 		.4byte	0x111
 3987 0970 05       		.uleb128 0x5
 3988 0971 03       		.byte	0x3
 3989 0972 00000000 		.4byte	buffer_state
 3990 0976 24       		.uleb128 0x24
 3991 0977 72000000 		.4byte	.LASF133
 3992 097b 05       		.byte	0x5
 3993 097c 63       		.byte	0x63
 3994 097d 11010000 		.4byte	0x111
 3995 0981 05       		.uleb128 0x5
 3996 0982 03       		.byte	0x3
 3997 0983 00000000 		.4byte	system_state
 3998 0987 24       		.uleb128 0x24
 3999 0988 FF000000 		.4byte	.LASF134
 4000 098c 05       		.byte	0x5
 4001 098d 65       		.byte	0x65
 4002 098e E6000000 		.4byte	0xe6
 4003 0992 05       		.uleb128 0x5
 4004 0993 03       		.byte	0x3
 4005 0994 00000000 		.4byte	movement_state
 4006 0998 24       		.uleb128 0x24
 4007 0999 22020000 		.4byte	.LASF135
 4008 099d 05       		.byte	0x5
 4009 099e 67       		.byte	0x67
 4010 099f 95000000 		.4byte	0x95
 4011 09a3 05       		.uleb128 0x5
 4012 09a4 03       		.byte	0x3
 4013 09a5 00000000 		.4byte	byteCount
 4014 09a9 0E       		.uleb128 0xe
 4015 09aa 83000000 		.4byte	0x83
 4016 09ae B9090000 		.4byte	0x9b9
 4017 09b2 0F       		.uleb128 0xf
 4018 09b3 76000000 		.4byte	0x76
 4019 09b7 01       		.byte	0x1
 4020 09b8 00       		.byte	0
 4021 09b9 24       		.uleb128 0x24
 4022 09ba 2C050000 		.4byte	.LASF136
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 84


 4023 09be 05       		.byte	0x5
 4024 09bf 68       		.byte	0x68
 4025 09c0 A9090000 		.4byte	0x9a9
 4026 09c4 05       		.uleb128 0x5
 4027 09c5 03       		.byte	0x3
 4028 09c6 00000000 		.4byte	packet
 4029 09ca 00       		.byte	0
 4030              		.section	.debug_abbrev,"",%progbits
 4031              	.Ldebug_abbrev0:
 4032 0000 01       		.uleb128 0x1
 4033 0001 11       		.uleb128 0x11
 4034 0002 01       		.byte	0x1
 4035 0003 25       		.uleb128 0x25
 4036 0004 0E       		.uleb128 0xe
 4037 0005 13       		.uleb128 0x13
 4038 0006 0B       		.uleb128 0xb
 4039 0007 03       		.uleb128 0x3
 4040 0008 0E       		.uleb128 0xe
 4041 0009 1B       		.uleb128 0x1b
 4042 000a 0E       		.uleb128 0xe
 4043 000b 55       		.uleb128 0x55
 4044 000c 17       		.uleb128 0x17
 4045 000d 11       		.uleb128 0x11
 4046 000e 01       		.uleb128 0x1
 4047 000f 10       		.uleb128 0x10
 4048 0010 17       		.uleb128 0x17
 4049 0011 00       		.byte	0
 4050 0012 00       		.byte	0
 4051 0013 02       		.uleb128 0x2
 4052 0014 24       		.uleb128 0x24
 4053 0015 00       		.byte	0
 4054 0016 0B       		.uleb128 0xb
 4055 0017 0B       		.uleb128 0xb
 4056 0018 3E       		.uleb128 0x3e
 4057 0019 0B       		.uleb128 0xb
 4058 001a 03       		.uleb128 0x3
 4059 001b 0E       		.uleb128 0xe
 4060 001c 00       		.byte	0
 4061 001d 00       		.byte	0
 4062 001e 03       		.uleb128 0x3
 4063 001f 16       		.uleb128 0x16
 4064 0020 00       		.byte	0
 4065 0021 03       		.uleb128 0x3
 4066 0022 0E       		.uleb128 0xe
 4067 0023 3A       		.uleb128 0x3a
 4068 0024 0B       		.uleb128 0xb
 4069 0025 3B       		.uleb128 0x3b
 4070 0026 0B       		.uleb128 0xb
 4071 0027 49       		.uleb128 0x49
 4072 0028 13       		.uleb128 0x13
 4073 0029 00       		.byte	0
 4074 002a 00       		.byte	0
 4075 002b 04       		.uleb128 0x4
 4076 002c 24       		.uleb128 0x24
 4077 002d 00       		.byte	0
 4078 002e 0B       		.uleb128 0xb
 4079 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 85


 4080 0030 3E       		.uleb128 0x3e
 4081 0031 0B       		.uleb128 0xb
 4082 0032 03       		.uleb128 0x3
 4083 0033 08       		.uleb128 0x8
 4084 0034 00       		.byte	0
 4085 0035 00       		.byte	0
 4086 0036 05       		.uleb128 0x5
 4087 0037 0F       		.uleb128 0xf
 4088 0038 00       		.byte	0
 4089 0039 0B       		.uleb128 0xb
 4090 003a 0B       		.uleb128 0xb
 4091 003b 49       		.uleb128 0x49
 4092 003c 13       		.uleb128 0x13
 4093 003d 00       		.byte	0
 4094 003e 00       		.byte	0
 4095 003f 06       		.uleb128 0x6
 4096 0040 16       		.uleb128 0x16
 4097 0041 00       		.byte	0
 4098 0042 03       		.uleb128 0x3
 4099 0043 0E       		.uleb128 0xe
 4100 0044 3A       		.uleb128 0x3a
 4101 0045 0B       		.uleb128 0xb
 4102 0046 3B       		.uleb128 0x3b
 4103 0047 05       		.uleb128 0x5
 4104 0048 49       		.uleb128 0x49
 4105 0049 13       		.uleb128 0x13
 4106 004a 00       		.byte	0
 4107 004b 00       		.byte	0
 4108 004c 07       		.uleb128 0x7
 4109 004d 04       		.uleb128 0x4
 4110 004e 01       		.byte	0x1
 4111 004f 03       		.uleb128 0x3
 4112 0050 0E       		.uleb128 0xe
 4113 0051 0B       		.uleb128 0xb
 4114 0052 0B       		.uleb128 0xb
 4115 0053 3A       		.uleb128 0x3a
 4116 0054 0B       		.uleb128 0xb
 4117 0055 3B       		.uleb128 0x3b
 4118 0056 0B       		.uleb128 0xb
 4119 0057 01       		.uleb128 0x1
 4120 0058 13       		.uleb128 0x13
 4121 0059 00       		.byte	0
 4122 005a 00       		.byte	0
 4123 005b 08       		.uleb128 0x8
 4124 005c 28       		.uleb128 0x28
 4125 005d 00       		.byte	0
 4126 005e 03       		.uleb128 0x3
 4127 005f 0E       		.uleb128 0xe
 4128 0060 1C       		.uleb128 0x1c
 4129 0061 0D       		.uleb128 0xd
 4130 0062 00       		.byte	0
 4131 0063 00       		.byte	0
 4132 0064 09       		.uleb128 0x9
 4133 0065 13       		.uleb128 0x13
 4134 0066 01       		.byte	0x1
 4135 0067 03       		.uleb128 0x3
 4136 0068 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 86


 4137 0069 0B       		.uleb128 0xb
 4138 006a 0B       		.uleb128 0xb
 4139 006b 3A       		.uleb128 0x3a
 4140 006c 0B       		.uleb128 0xb
 4141 006d 3B       		.uleb128 0x3b
 4142 006e 0B       		.uleb128 0xb
 4143 006f 01       		.uleb128 0x1
 4144 0070 13       		.uleb128 0x13
 4145 0071 00       		.byte	0
 4146 0072 00       		.byte	0
 4147 0073 0A       		.uleb128 0xa
 4148 0074 0D       		.uleb128 0xd
 4149 0075 00       		.byte	0
 4150 0076 03       		.uleb128 0x3
 4151 0077 0E       		.uleb128 0xe
 4152 0078 3A       		.uleb128 0x3a
 4153 0079 0B       		.uleb128 0xb
 4154 007a 3B       		.uleb128 0x3b
 4155 007b 0B       		.uleb128 0xb
 4156 007c 49       		.uleb128 0x49
 4157 007d 13       		.uleb128 0x13
 4158 007e 38       		.uleb128 0x38
 4159 007f 0B       		.uleb128 0xb
 4160 0080 00       		.byte	0
 4161 0081 00       		.byte	0
 4162 0082 0B       		.uleb128 0xb
 4163 0083 2E       		.uleb128 0x2e
 4164 0084 01       		.byte	0x1
 4165 0085 3F       		.uleb128 0x3f
 4166 0086 19       		.uleb128 0x19
 4167 0087 03       		.uleb128 0x3
 4168 0088 0E       		.uleb128 0xe
 4169 0089 3A       		.uleb128 0x3a
 4170 008a 0B       		.uleb128 0xb
 4171 008b 3B       		.uleb128 0x3b
 4172 008c 0B       		.uleb128 0xb
 4173 008d 11       		.uleb128 0x11
 4174 008e 01       		.uleb128 0x1
 4175 008f 12       		.uleb128 0x12
 4176 0090 06       		.uleb128 0x6
 4177 0091 40       		.uleb128 0x40
 4178 0092 18       		.uleb128 0x18
 4179 0093 9742     		.uleb128 0x2117
 4180 0095 19       		.uleb128 0x19
 4181 0096 01       		.uleb128 0x1
 4182 0097 13       		.uleb128 0x13
 4183 0098 00       		.byte	0
 4184 0099 00       		.byte	0
 4185 009a 0C       		.uleb128 0xc
 4186 009b 0B       		.uleb128 0xb
 4187 009c 01       		.byte	0x1
 4188 009d 11       		.uleb128 0x11
 4189 009e 01       		.uleb128 0x1
 4190 009f 12       		.uleb128 0x12
 4191 00a0 06       		.uleb128 0x6
 4192 00a1 00       		.byte	0
 4193 00a2 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 87


 4194 00a3 0D       		.uleb128 0xd
 4195 00a4 34       		.uleb128 0x34
 4196 00a5 00       		.byte	0
 4197 00a6 03       		.uleb128 0x3
 4198 00a7 0E       		.uleb128 0xe
 4199 00a8 3A       		.uleb128 0x3a
 4200 00a9 0B       		.uleb128 0xb
 4201 00aa 3B       		.uleb128 0x3b
 4202 00ab 0B       		.uleb128 0xb
 4203 00ac 49       		.uleb128 0x49
 4204 00ad 13       		.uleb128 0x13
 4205 00ae 02       		.uleb128 0x2
 4206 00af 18       		.uleb128 0x18
 4207 00b0 00       		.byte	0
 4208 00b1 00       		.byte	0
 4209 00b2 0E       		.uleb128 0xe
 4210 00b3 01       		.uleb128 0x1
 4211 00b4 01       		.byte	0x1
 4212 00b5 49       		.uleb128 0x49
 4213 00b6 13       		.uleb128 0x13
 4214 00b7 01       		.uleb128 0x1
 4215 00b8 13       		.uleb128 0x13
 4216 00b9 00       		.byte	0
 4217 00ba 00       		.byte	0
 4218 00bb 0F       		.uleb128 0xf
 4219 00bc 21       		.uleb128 0x21
 4220 00bd 00       		.byte	0
 4221 00be 49       		.uleb128 0x49
 4222 00bf 13       		.uleb128 0x13
 4223 00c0 2F       		.uleb128 0x2f
 4224 00c1 0B       		.uleb128 0xb
 4225 00c2 00       		.byte	0
 4226 00c3 00       		.byte	0
 4227 00c4 10       		.uleb128 0x10
 4228 00c5 2E       		.uleb128 0x2e
 4229 00c6 01       		.byte	0x1
 4230 00c7 3F       		.uleb128 0x3f
 4231 00c8 19       		.uleb128 0x19
 4232 00c9 03       		.uleb128 0x3
 4233 00ca 0E       		.uleb128 0xe
 4234 00cb 3A       		.uleb128 0x3a
 4235 00cc 0B       		.uleb128 0xb
 4236 00cd 3B       		.uleb128 0x3b
 4237 00ce 0B       		.uleb128 0xb
 4238 00cf 27       		.uleb128 0x27
 4239 00d0 19       		.uleb128 0x19
 4240 00d1 11       		.uleb128 0x11
 4241 00d2 01       		.uleb128 0x1
 4242 00d3 12       		.uleb128 0x12
 4243 00d4 06       		.uleb128 0x6
 4244 00d5 40       		.uleb128 0x40
 4245 00d6 18       		.uleb128 0x18
 4246 00d7 9642     		.uleb128 0x2116
 4247 00d9 19       		.uleb128 0x19
 4248 00da 01       		.uleb128 0x1
 4249 00db 13       		.uleb128 0x13
 4250 00dc 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 88


 4251 00dd 00       		.byte	0
 4252 00de 11       		.uleb128 0x11
 4253 00df 05       		.uleb128 0x5
 4254 00e0 00       		.byte	0
 4255 00e1 03       		.uleb128 0x3
 4256 00e2 08       		.uleb128 0x8
 4257 00e3 3A       		.uleb128 0x3a
 4258 00e4 0B       		.uleb128 0xb
 4259 00e5 3B       		.uleb128 0x3b
 4260 00e6 0B       		.uleb128 0xb
 4261 00e7 49       		.uleb128 0x49
 4262 00e8 13       		.uleb128 0x13
 4263 00e9 02       		.uleb128 0x2
 4264 00ea 18       		.uleb128 0x18
 4265 00eb 00       		.byte	0
 4266 00ec 00       		.byte	0
 4267 00ed 12       		.uleb128 0x12
 4268 00ee 2E       		.uleb128 0x2e
 4269 00ef 01       		.byte	0x1
 4270 00f0 3F       		.uleb128 0x3f
 4271 00f1 19       		.uleb128 0x19
 4272 00f2 03       		.uleb128 0x3
 4273 00f3 0E       		.uleb128 0xe
 4274 00f4 3A       		.uleb128 0x3a
 4275 00f5 0B       		.uleb128 0xb
 4276 00f6 3B       		.uleb128 0x3b
 4277 00f7 0B       		.uleb128 0xb
 4278 00f8 11       		.uleb128 0x11
 4279 00f9 01       		.uleb128 0x1
 4280 00fa 12       		.uleb128 0x12
 4281 00fb 06       		.uleb128 0x6
 4282 00fc 40       		.uleb128 0x40
 4283 00fd 18       		.uleb128 0x18
 4284 00fe 9642     		.uleb128 0x2116
 4285 0100 19       		.uleb128 0x19
 4286 0101 01       		.uleb128 0x1
 4287 0102 13       		.uleb128 0x13
 4288 0103 00       		.byte	0
 4289 0104 00       		.byte	0
 4290 0105 13       		.uleb128 0x13
 4291 0106 34       		.uleb128 0x34
 4292 0107 00       		.byte	0
 4293 0108 03       		.uleb128 0x3
 4294 0109 08       		.uleb128 0x8
 4295 010a 3A       		.uleb128 0x3a
 4296 010b 0B       		.uleb128 0xb
 4297 010c 3B       		.uleb128 0x3b
 4298 010d 0B       		.uleb128 0xb
 4299 010e 49       		.uleb128 0x49
 4300 010f 13       		.uleb128 0x13
 4301 0110 02       		.uleb128 0x2
 4302 0111 18       		.uleb128 0x18
 4303 0112 00       		.byte	0
 4304 0113 00       		.byte	0
 4305 0114 14       		.uleb128 0x14
 4306 0115 05       		.uleb128 0x5
 4307 0116 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 89


 4308 0117 03       		.uleb128 0x3
 4309 0118 0E       		.uleb128 0xe
 4310 0119 3A       		.uleb128 0x3a
 4311 011a 0B       		.uleb128 0xb
 4312 011b 3B       		.uleb128 0x3b
 4313 011c 0B       		.uleb128 0xb
 4314 011d 49       		.uleb128 0x49
 4315 011e 13       		.uleb128 0x13
 4316 011f 02       		.uleb128 0x2
 4317 0120 18       		.uleb128 0x18
 4318 0121 00       		.byte	0
 4319 0122 00       		.byte	0
 4320 0123 15       		.uleb128 0x15
 4321 0124 0B       		.uleb128 0xb
 4322 0125 01       		.byte	0x1
 4323 0126 11       		.uleb128 0x11
 4324 0127 01       		.uleb128 0x1
 4325 0128 12       		.uleb128 0x12
 4326 0129 06       		.uleb128 0x6
 4327 012a 01       		.uleb128 0x1
 4328 012b 13       		.uleb128 0x13
 4329 012c 00       		.byte	0
 4330 012d 00       		.byte	0
 4331 012e 16       		.uleb128 0x16
 4332 012f 2E       		.uleb128 0x2e
 4333 0130 00       		.byte	0
 4334 0131 3F       		.uleb128 0x3f
 4335 0132 19       		.uleb128 0x19
 4336 0133 03       		.uleb128 0x3
 4337 0134 0E       		.uleb128 0xe
 4338 0135 3A       		.uleb128 0x3a
 4339 0136 0B       		.uleb128 0xb
 4340 0137 3B       		.uleb128 0x3b
 4341 0138 0B       		.uleb128 0xb
 4342 0139 11       		.uleb128 0x11
 4343 013a 01       		.uleb128 0x1
 4344 013b 12       		.uleb128 0x12
 4345 013c 06       		.uleb128 0x6
 4346 013d 40       		.uleb128 0x40
 4347 013e 18       		.uleb128 0x18
 4348 013f 9642     		.uleb128 0x2116
 4349 0141 19       		.uleb128 0x19
 4350 0142 00       		.byte	0
 4351 0143 00       		.byte	0
 4352 0144 17       		.uleb128 0x17
 4353 0145 2E       		.uleb128 0x2e
 4354 0146 00       		.byte	0
 4355 0147 3F       		.uleb128 0x3f
 4356 0148 19       		.uleb128 0x19
 4357 0149 03       		.uleb128 0x3
 4358 014a 0E       		.uleb128 0xe
 4359 014b 3A       		.uleb128 0x3a
 4360 014c 0B       		.uleb128 0xb
 4361 014d 3B       		.uleb128 0x3b
 4362 014e 05       		.uleb128 0x5
 4363 014f 11       		.uleb128 0x11
 4364 0150 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 90


 4365 0151 12       		.uleb128 0x12
 4366 0152 06       		.uleb128 0x6
 4367 0153 40       		.uleb128 0x40
 4368 0154 18       		.uleb128 0x18
 4369 0155 9642     		.uleb128 0x2116
 4370 0157 19       		.uleb128 0x19
 4371 0158 00       		.byte	0
 4372 0159 00       		.byte	0
 4373 015a 18       		.uleb128 0x18
 4374 015b 2E       		.uleb128 0x2e
 4375 015c 00       		.byte	0
 4376 015d 3F       		.uleb128 0x3f
 4377 015e 19       		.uleb128 0x19
 4378 015f 03       		.uleb128 0x3
 4379 0160 0E       		.uleb128 0xe
 4380 0161 3A       		.uleb128 0x3a
 4381 0162 0B       		.uleb128 0xb
 4382 0163 3B       		.uleb128 0x3b
 4383 0164 05       		.uleb128 0x5
 4384 0165 11       		.uleb128 0x11
 4385 0166 01       		.uleb128 0x1
 4386 0167 12       		.uleb128 0x12
 4387 0168 06       		.uleb128 0x6
 4388 0169 40       		.uleb128 0x40
 4389 016a 18       		.uleb128 0x18
 4390 016b 9742     		.uleb128 0x2117
 4391 016d 19       		.uleb128 0x19
 4392 016e 00       		.byte	0
 4393 016f 00       		.byte	0
 4394 0170 19       		.uleb128 0x19
 4395 0171 2E       		.uleb128 0x2e
 4396 0172 01       		.byte	0x1
 4397 0173 3F       		.uleb128 0x3f
 4398 0174 19       		.uleb128 0x19
 4399 0175 03       		.uleb128 0x3
 4400 0176 0E       		.uleb128 0xe
 4401 0177 3A       		.uleb128 0x3a
 4402 0178 0B       		.uleb128 0xb
 4403 0179 3B       		.uleb128 0x3b
 4404 017a 05       		.uleb128 0x5
 4405 017b 27       		.uleb128 0x27
 4406 017c 19       		.uleb128 0x19
 4407 017d 11       		.uleb128 0x11
 4408 017e 01       		.uleb128 0x1
 4409 017f 12       		.uleb128 0x12
 4410 0180 06       		.uleb128 0x6
 4411 0181 40       		.uleb128 0x40
 4412 0182 18       		.uleb128 0x18
 4413 0183 9642     		.uleb128 0x2116
 4414 0185 19       		.uleb128 0x19
 4415 0186 01       		.uleb128 0x1
 4416 0187 13       		.uleb128 0x13
 4417 0188 00       		.byte	0
 4418 0189 00       		.byte	0
 4419 018a 1A       		.uleb128 0x1a
 4420 018b 34       		.uleb128 0x34
 4421 018c 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 91


 4422 018d 03       		.uleb128 0x3
 4423 018e 0E       		.uleb128 0xe
 4424 018f 3A       		.uleb128 0x3a
 4425 0190 0B       		.uleb128 0xb
 4426 0191 3B       		.uleb128 0x3b
 4427 0192 05       		.uleb128 0x5
 4428 0193 49       		.uleb128 0x49
 4429 0194 13       		.uleb128 0x13
 4430 0195 02       		.uleb128 0x2
 4431 0196 18       		.uleb128 0x18
 4432 0197 00       		.byte	0
 4433 0198 00       		.byte	0
 4434 0199 1B       		.uleb128 0x1b
 4435 019a 2E       		.uleb128 0x2e
 4436 019b 00       		.byte	0
 4437 019c 3F       		.uleb128 0x3f
 4438 019d 19       		.uleb128 0x19
 4439 019e 03       		.uleb128 0x3
 4440 019f 0E       		.uleb128 0xe
 4441 01a0 3A       		.uleb128 0x3a
 4442 01a1 0B       		.uleb128 0xb
 4443 01a2 3B       		.uleb128 0x3b
 4444 01a3 05       		.uleb128 0x5
 4445 01a4 27       		.uleb128 0x27
 4446 01a5 19       		.uleb128 0x19
 4447 01a6 11       		.uleb128 0x11
 4448 01a7 01       		.uleb128 0x1
 4449 01a8 12       		.uleb128 0x12
 4450 01a9 06       		.uleb128 0x6
 4451 01aa 40       		.uleb128 0x40
 4452 01ab 18       		.uleb128 0x18
 4453 01ac 9742     		.uleb128 0x2117
 4454 01ae 19       		.uleb128 0x19
 4455 01af 00       		.byte	0
 4456 01b0 00       		.byte	0
 4457 01b1 1C       		.uleb128 0x1c
 4458 01b2 2E       		.uleb128 0x2e
 4459 01b3 00       		.byte	0
 4460 01b4 3F       		.uleb128 0x3f
 4461 01b5 19       		.uleb128 0x19
 4462 01b6 03       		.uleb128 0x3
 4463 01b7 0E       		.uleb128 0xe
 4464 01b8 3A       		.uleb128 0x3a
 4465 01b9 0B       		.uleb128 0xb
 4466 01ba 3B       		.uleb128 0x3b
 4467 01bb 05       		.uleb128 0x5
 4468 01bc 27       		.uleb128 0x27
 4469 01bd 19       		.uleb128 0x19
 4470 01be 11       		.uleb128 0x11
 4471 01bf 01       		.uleb128 0x1
 4472 01c0 12       		.uleb128 0x12
 4473 01c1 06       		.uleb128 0x6
 4474 01c2 40       		.uleb128 0x40
 4475 01c3 18       		.uleb128 0x18
 4476 01c4 9642     		.uleb128 0x2116
 4477 01c6 19       		.uleb128 0x19
 4478 01c7 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 92


 4479 01c8 00       		.byte	0
 4480 01c9 1D       		.uleb128 0x1d
 4481 01ca 2E       		.uleb128 0x2e
 4482 01cb 01       		.byte	0x1
 4483 01cc 3F       		.uleb128 0x3f
 4484 01cd 19       		.uleb128 0x19
 4485 01ce 03       		.uleb128 0x3
 4486 01cf 0E       		.uleb128 0xe
 4487 01d0 3A       		.uleb128 0x3a
 4488 01d1 0B       		.uleb128 0xb
 4489 01d2 3B       		.uleb128 0x3b
 4490 01d3 05       		.uleb128 0x5
 4491 01d4 11       		.uleb128 0x11
 4492 01d5 01       		.uleb128 0x1
 4493 01d6 12       		.uleb128 0x12
 4494 01d7 06       		.uleb128 0x6
 4495 01d8 40       		.uleb128 0x40
 4496 01d9 18       		.uleb128 0x18
 4497 01da 9642     		.uleb128 0x2116
 4498 01dc 19       		.uleb128 0x19
 4499 01dd 01       		.uleb128 0x1
 4500 01de 13       		.uleb128 0x13
 4501 01df 00       		.byte	0
 4502 01e0 00       		.byte	0
 4503 01e1 1E       		.uleb128 0x1e
 4504 01e2 34       		.uleb128 0x34
 4505 01e3 00       		.byte	0
 4506 01e4 03       		.uleb128 0x3
 4507 01e5 08       		.uleb128 0x8
 4508 01e6 3A       		.uleb128 0x3a
 4509 01e7 0B       		.uleb128 0xb
 4510 01e8 3B       		.uleb128 0x3b
 4511 01e9 05       		.uleb128 0x5
 4512 01ea 49       		.uleb128 0x49
 4513 01eb 13       		.uleb128 0x13
 4514 01ec 02       		.uleb128 0x2
 4515 01ed 18       		.uleb128 0x18
 4516 01ee 00       		.byte	0
 4517 01ef 00       		.byte	0
 4518 01f0 1F       		.uleb128 0x1f
 4519 01f1 2E       		.uleb128 0x2e
 4520 01f2 00       		.byte	0
 4521 01f3 3F       		.uleb128 0x3f
 4522 01f4 19       		.uleb128 0x19
 4523 01f5 03       		.uleb128 0x3
 4524 01f6 0E       		.uleb128 0xe
 4525 01f7 3A       		.uleb128 0x3a
 4526 01f8 0B       		.uleb128 0xb
 4527 01f9 3B       		.uleb128 0x3b
 4528 01fa 05       		.uleb128 0x5
 4529 01fb 49       		.uleb128 0x49
 4530 01fc 13       		.uleb128 0x13
 4531 01fd 11       		.uleb128 0x11
 4532 01fe 01       		.uleb128 0x1
 4533 01ff 12       		.uleb128 0x12
 4534 0200 06       		.uleb128 0x6
 4535 0201 40       		.uleb128 0x40
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 93


 4536 0202 18       		.uleb128 0x18
 4537 0203 9642     		.uleb128 0x2116
 4538 0205 19       		.uleb128 0x19
 4539 0206 00       		.byte	0
 4540 0207 00       		.byte	0
 4541 0208 20       		.uleb128 0x20
 4542 0209 05       		.uleb128 0x5
 4543 020a 00       		.byte	0
 4544 020b 03       		.uleb128 0x3
 4545 020c 08       		.uleb128 0x8
 4546 020d 3A       		.uleb128 0x3a
 4547 020e 0B       		.uleb128 0xb
 4548 020f 3B       		.uleb128 0x3b
 4549 0210 05       		.uleb128 0x5
 4550 0211 49       		.uleb128 0x49
 4551 0212 13       		.uleb128 0x13
 4552 0213 02       		.uleb128 0x2
 4553 0214 18       		.uleb128 0x18
 4554 0215 00       		.byte	0
 4555 0216 00       		.byte	0
 4556 0217 21       		.uleb128 0x21
 4557 0218 34       		.uleb128 0x34
 4558 0219 00       		.byte	0
 4559 021a 03       		.uleb128 0x3
 4560 021b 0E       		.uleb128 0xe
 4561 021c 3A       		.uleb128 0x3a
 4562 021d 0B       		.uleb128 0xb
 4563 021e 3B       		.uleb128 0x3b
 4564 021f 05       		.uleb128 0x5
 4565 0220 49       		.uleb128 0x49
 4566 0221 13       		.uleb128 0x13
 4567 0222 3F       		.uleb128 0x3f
 4568 0223 19       		.uleb128 0x19
 4569 0224 3C       		.uleb128 0x3c
 4570 0225 19       		.uleb128 0x19
 4571 0226 00       		.byte	0
 4572 0227 00       		.byte	0
 4573 0228 22       		.uleb128 0x22
 4574 0229 35       		.uleb128 0x35
 4575 022a 00       		.byte	0
 4576 022b 49       		.uleb128 0x49
 4577 022c 13       		.uleb128 0x13
 4578 022d 00       		.byte	0
 4579 022e 00       		.byte	0
 4580 022f 23       		.uleb128 0x23
 4581 0230 34       		.uleb128 0x34
 4582 0231 00       		.byte	0
 4583 0232 03       		.uleb128 0x3
 4584 0233 08       		.uleb128 0x8
 4585 0234 3A       		.uleb128 0x3a
 4586 0235 0B       		.uleb128 0xb
 4587 0236 3B       		.uleb128 0x3b
 4588 0237 0B       		.uleb128 0xb
 4589 0238 49       		.uleb128 0x49
 4590 0239 13       		.uleb128 0x13
 4591 023a 3F       		.uleb128 0x3f
 4592 023b 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 94


 4593 023c 02       		.uleb128 0x2
 4594 023d 18       		.uleb128 0x18
 4595 023e 00       		.byte	0
 4596 023f 00       		.byte	0
 4597 0240 24       		.uleb128 0x24
 4598 0241 34       		.uleb128 0x34
 4599 0242 00       		.byte	0
 4600 0243 03       		.uleb128 0x3
 4601 0244 0E       		.uleb128 0xe
 4602 0245 3A       		.uleb128 0x3a
 4603 0246 0B       		.uleb128 0xb
 4604 0247 3B       		.uleb128 0x3b
 4605 0248 0B       		.uleb128 0xb
 4606 0249 49       		.uleb128 0x49
 4607 024a 13       		.uleb128 0x13
 4608 024b 3F       		.uleb128 0x3f
 4609 024c 19       		.uleb128 0x19
 4610 024d 02       		.uleb128 0x2
 4611 024e 18       		.uleb128 0x18
 4612 024f 00       		.byte	0
 4613 0250 00       		.byte	0
 4614 0251 00       		.byte	0
 4615              		.section	.debug_aranges,"",%progbits
 4616 0000 1C010000 		.4byte	0x11c
 4617 0004 0200     		.2byte	0x2
 4618 0006 00000000 		.4byte	.Ldebug_info0
 4619 000a 04       		.byte	0x4
 4620 000b 00       		.byte	0
 4621 000c 0000     		.2byte	0
 4622 000e 0000     		.2byte	0
 4623 0010 00000000 		.4byte	.LFB63
 4624 0014 60010000 		.4byte	.LFE63-.LFB63
 4625 0018 00000000 		.4byte	.LFB64
 4626 001c 18000000 		.4byte	.LFE64-.LFB64
 4627 0020 00000000 		.4byte	.LFB65
 4628 0024 18000000 		.4byte	.LFE65-.LFB65
 4629 0028 00000000 		.4byte	.LFB66
 4630 002c 54000000 		.4byte	.LFE66-.LFB66
 4631 0030 00000000 		.4byte	.LFB67
 4632 0034 54010000 		.4byte	.LFE67-.LFB67
 4633 0038 00000000 		.4byte	.LFB68
 4634 003c 18000000 		.4byte	.LFE68-.LFB68
 4635 0040 00000000 		.4byte	.LFB69
 4636 0044 18000000 		.4byte	.LFE69-.LFB69
 4637 0048 00000000 		.4byte	.LFB70
 4638 004c 22000000 		.4byte	.LFE70-.LFB70
 4639 0050 00000000 		.4byte	.LFB71
 4640 0054 1C000000 		.4byte	.LFE71-.LFB71
 4641 0058 00000000 		.4byte	.LFB72
 4642 005c 1C000000 		.4byte	.LFE72-.LFB72
 4643 0060 00000000 		.4byte	.LFB73
 4644 0064 1C000000 		.4byte	.LFE73-.LFB73
 4645 0068 00000000 		.4byte	.LFB74
 4646 006c 2C000000 		.4byte	.LFE74-.LFB74
 4647 0070 00000000 		.4byte	.LFB75
 4648 0074 2C000000 		.4byte	.LFE75-.LFB75
 4649 0078 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 95


 4650 007c 14000000 		.4byte	.LFE76-.LFB76
 4651 0080 00000000 		.4byte	.LFB77
 4652 0084 18000000 		.4byte	.LFE77-.LFB77
 4653 0088 00000000 		.4byte	.LFB78
 4654 008c 18000000 		.4byte	.LFE78-.LFB78
 4655 0090 00000000 		.4byte	.LFB79
 4656 0094 98000000 		.4byte	.LFE79-.LFB79
 4657 0098 00000000 		.4byte	.LFB80
 4658 009c A2000000 		.4byte	.LFE80-.LFB80
 4659 00a0 00000000 		.4byte	.LFB81
 4660 00a4 0C000000 		.4byte	.LFE81-.LFB81
 4661 00a8 00000000 		.4byte	.LFB82
 4662 00ac 2C000000 		.4byte	.LFE82-.LFB82
 4663 00b0 00000000 		.4byte	.LFB83
 4664 00b4 B8000000 		.4byte	.LFE83-.LFB83
 4665 00b8 00000000 		.4byte	.LFB84
 4666 00bc 70000000 		.4byte	.LFE84-.LFB84
 4667 00c0 00000000 		.4byte	.LFB85
 4668 00c4 20000000 		.4byte	.LFE85-.LFB85
 4669 00c8 00000000 		.4byte	.LFB86
 4670 00cc 1C000000 		.4byte	.LFE86-.LFB86
 4671 00d0 00000000 		.4byte	.LFB87
 4672 00d4 0A000000 		.4byte	.LFE87-.LFB87
 4673 00d8 00000000 		.4byte	.LFB88
 4674 00dc 30020000 		.4byte	.LFE88-.LFB88
 4675 00e0 00000000 		.4byte	.LFB89
 4676 00e4 10010000 		.4byte	.LFE89-.LFB89
 4677 00e8 00000000 		.4byte	.LFB90
 4678 00ec C0000000 		.4byte	.LFE90-.LFB90
 4679 00f0 00000000 		.4byte	.LFB91
 4680 00f4 B8000000 		.4byte	.LFE91-.LFB91
 4681 00f8 00000000 		.4byte	.LFB92
 4682 00fc B8000000 		.4byte	.LFE92-.LFB92
 4683 0100 00000000 		.4byte	.LFB93
 4684 0104 68000000 		.4byte	.LFE93-.LFB93
 4685 0108 00000000 		.4byte	.LFB94
 4686 010c 50000000 		.4byte	.LFE94-.LFB94
 4687 0110 00000000 		.4byte	.LFB95
 4688 0114 3A000000 		.4byte	.LFE95-.LFB95
 4689 0118 00000000 		.4byte	0
 4690 011c 00000000 		.4byte	0
 4691              		.section	.debug_ranges,"",%progbits
 4692              	.Ldebug_ranges0:
 4693 0000 00000000 		.4byte	.LFB63
 4694 0004 60010000 		.4byte	.LFE63
 4695 0008 00000000 		.4byte	.LFB64
 4696 000c 18000000 		.4byte	.LFE64
 4697 0010 00000000 		.4byte	.LFB65
 4698 0014 18000000 		.4byte	.LFE65
 4699 0018 00000000 		.4byte	.LFB66
 4700 001c 54000000 		.4byte	.LFE66
 4701 0020 00000000 		.4byte	.LFB67
 4702 0024 54010000 		.4byte	.LFE67
 4703 0028 00000000 		.4byte	.LFB68
 4704 002c 18000000 		.4byte	.LFE68
 4705 0030 00000000 		.4byte	.LFB69
 4706 0034 18000000 		.4byte	.LFE69
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 96


 4707 0038 00000000 		.4byte	.LFB70
 4708 003c 22000000 		.4byte	.LFE70
 4709 0040 00000000 		.4byte	.LFB71
 4710 0044 1C000000 		.4byte	.LFE71
 4711 0048 00000000 		.4byte	.LFB72
 4712 004c 1C000000 		.4byte	.LFE72
 4713 0050 00000000 		.4byte	.LFB73
 4714 0054 1C000000 		.4byte	.LFE73
 4715 0058 00000000 		.4byte	.LFB74
 4716 005c 2C000000 		.4byte	.LFE74
 4717 0060 00000000 		.4byte	.LFB75
 4718 0064 2C000000 		.4byte	.LFE75
 4719 0068 00000000 		.4byte	.LFB76
 4720 006c 14000000 		.4byte	.LFE76
 4721 0070 00000000 		.4byte	.LFB77
 4722 0074 18000000 		.4byte	.LFE77
 4723 0078 00000000 		.4byte	.LFB78
 4724 007c 18000000 		.4byte	.LFE78
 4725 0080 00000000 		.4byte	.LFB79
 4726 0084 98000000 		.4byte	.LFE79
 4727 0088 00000000 		.4byte	.LFB80
 4728 008c A2000000 		.4byte	.LFE80
 4729 0090 00000000 		.4byte	.LFB81
 4730 0094 0C000000 		.4byte	.LFE81
 4731 0098 00000000 		.4byte	.LFB82
 4732 009c 2C000000 		.4byte	.LFE82
 4733 00a0 00000000 		.4byte	.LFB83
 4734 00a4 B8000000 		.4byte	.LFE83
 4735 00a8 00000000 		.4byte	.LFB84
 4736 00ac 70000000 		.4byte	.LFE84
 4737 00b0 00000000 		.4byte	.LFB85
 4738 00b4 20000000 		.4byte	.LFE85
 4739 00b8 00000000 		.4byte	.LFB86
 4740 00bc 1C000000 		.4byte	.LFE86
 4741 00c0 00000000 		.4byte	.LFB87
 4742 00c4 0A000000 		.4byte	.LFE87
 4743 00c8 00000000 		.4byte	.LFB88
 4744 00cc 30020000 		.4byte	.LFE88
 4745 00d0 00000000 		.4byte	.LFB89
 4746 00d4 10010000 		.4byte	.LFE89
 4747 00d8 00000000 		.4byte	.LFB90
 4748 00dc C0000000 		.4byte	.LFE90
 4749 00e0 00000000 		.4byte	.LFB91
 4750 00e4 B8000000 		.4byte	.LFE91
 4751 00e8 00000000 		.4byte	.LFB92
 4752 00ec B8000000 		.4byte	.LFE92
 4753 00f0 00000000 		.4byte	.LFB93
 4754 00f4 68000000 		.4byte	.LFE93
 4755 00f8 00000000 		.4byte	.LFB94
 4756 00fc 50000000 		.4byte	.LFE94
 4757 0100 00000000 		.4byte	.LFB95
 4758 0104 3A000000 		.4byte	.LFE95
 4759 0108 00000000 		.4byte	0
 4760 010c 00000000 		.4byte	0
 4761              		.section	.debug_line,"",%progbits
 4762              	.Ldebug_line0:
 4763 0000 19050000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 97


 4763      02005501 
 4763      00000201 
 4763      FB0E0D00 
 4763      01010101 
 4764              	.LASF111:
 4765 0000 64697265 		.ascii	"direction\000"
 4765      6374696F 
 4765      6E00
 4766              	.LASF23:
 4767 000a 52545552 		.ascii	"RTURN\000"
 4767      4E00
 4768              	.LASF117:
 4769 0010 71756164 		.ascii	"quad_diff1\000"
 4769      5F646966 
 4769      663100
 4770              	.LASF118:
 4771 001b 71756164 		.ascii	"quad_diff2\000"
 4771      5F646966 
 4771      663200
 4772              	.LASF76:
 4773 0026 51756164 		.ascii	"Quad_Dec_response\000"
 4773      5F446563 
 4773      5F726573 
 4773      706F6E73 
 4773      6500
 4774              	.LASF126:
 4775 0038 70726576 		.ascii	"prevVoltage\000"
 4775      566F6C74 
 4775      61676500 
 4776              	.LASF119:
 4777 0044 73746172 		.ascii	"start_turn_count\000"
 4777      745F7475 
 4777      726E5F63 
 4777      6F756E74 
 4777      00
 4778              	.LASF8:
 4779 0055 756E7369 		.ascii	"unsigned int\000"
 4779      676E6564 
 4779      20696E74 
 4779      00
 4780              	.LASF11:
 4781 0062 5F5F696E 		.ascii	"__int32_t\000"
 4781      7433325F 
 4781      7400
 4782              	.LASF17:
 4783 006c 696E7431 		.ascii	"int16\000"
 4783      3600
 4784              	.LASF133:
 4785 0072 73797374 		.ascii	"system_state\000"
 4785      656D5F73 
 4785      74617465 
 4785      00
 4786              	.LASF22:
 4787 007f 4C545552 		.ascii	"LTURN\000"
 4787      4E00
 4788              	.LASF75:
 4789 0085 6973725F 		.ascii	"isr_adcTimer\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 98


 4789      61646354 
 4789      696D6572 
 4789      00
 4790              	.LASF25:
 4791 0092 54524143 		.ascii	"TRACKING\000"
 4791      4B494E47 
 4791      00
 4792              	.LASF127:
 4793 009b 70726576 		.ascii	"prevVoltage2\000"
 4793      566F6C74 
 4793      61676532 
 4793      00
 4794              	.LASF43:
 4795 00a8 7061636B 		.ascii	"packet_bytes\000"
 4795      65745F62 
 4795      79746573 
 4795      00
 4796              	.LASF39:
 4797 00b5 67325F78 		.ascii	"g2_xpos\000"
 4797      706F7300 
 4798              	.LASF113:
 4799 00bd 71756164 		.ascii	"quad_count1\000"
 4799      5F636F75 
 4799      6E743100 
 4800              	.LASF114:
 4801 00c9 71756164 		.ascii	"quad_count2\000"
 4801      5F636F75 
 4801      6E743200 
 4802              	.LASF107:
 4803 00d5 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4803      5F72665F 
 4803      7472616E 
 4803      736D6973 
 4803      73696F6E 
 4804              	.LASF108:
 4805 00f1 666C6167 		.ascii	"flag_print_rf\000"
 4805      5F707269 
 4805      6E745F72 
 4805      6600
 4806              	.LASF134:
 4807 00ff 6D6F7665 		.ascii	"movement_state\000"
 4807      6D656E74 
 4807      5F737461 
 4807      746500
 4808              	.LASF91:
 4809 010e 75736250 		.ascii	"usbPutString\000"
 4809      75745374 
 4809      72696E67 
 4809      00
 4810              	.LASF63:
 4811 011b 696E6974 		.ascii	"initForward\000"
 4811      466F7277 
 4811      61726400 
 4812              	.LASF42:
 4813 0127 67325F64 		.ascii	"g2_direction\000"
 4813      69726563 
 4813      74696F6E 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 99


 4813      00
 4814              	.LASF71:
 4815 0134 6973725F 		.ascii	"isr_quad1\000"
 4815      71756164 
 4815      3100
 4816              	.LASF18:
 4817 013e 666C6F61 		.ascii	"float\000"
 4817      7400
 4818              	.LASF50:
 4819 0144 73657453 		.ascii	"setSpeed\000"
 4819      70656564 
 4819      00
 4820              	.LASF131:
 4821 014d 75736242 		.ascii	"usbBuffer\000"
 4821      75666665 
 4821      7200
 4822              	.LASF27:
 4823 0157 696E6465 		.ascii	"index\000"
 4823      7800
 4824              	.LASF21:
 4825 015d 44524956 		.ascii	"DRIVE\000"
 4825      4500
 4826              	.LASF45:
 4827 0163 73747269 		.ascii	"string_packet\000"
 4827      6E675F70 
 4827      61636B65 
 4827      7400
 4828              	.LASF53:
 4829 0171 636F756E 		.ascii	"countsLeft\000"
 4829      74734C65 
 4829      667400
 4830              	.LASF58:
 4831 017c 64726976 		.ascii	"driveForwards\000"
 4831      65466F72 
 4831      77617264 
 4831      7300
 4832              	.LASF59:
 4833 018a 7475726E 		.ascii	"turnLeft\000"
 4833      4C656674 
 4833      00
 4834              	.LASF7:
 4835 0193 6C6F6E67 		.ascii	"long long unsigned int\000"
 4835      206C6F6E 
 4835      6720756E 
 4835      7369676E 
 4835      65642069 
 4836              	.LASF104:
 4837 01aa 666C6167 		.ascii	"flag_packet\000"
 4837      5F706163 
 4837      6B657400 
 4838              	.LASF72:
 4839 01b6 6973725F 		.ascii	"isr_turn_timer\000"
 4839      7475726E 
 4839      5F74696D 
 4839      657200
 4840              	.LASF83:
 4841 01c5 74726163 		.ascii	"trackLine\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 100


 4841      6B4C696E 
 4841      6500
 4842              	.LASF61:
 4843 01cf 696E6974 		.ascii	"initTurnLeft\000"
 4843      5475726E 
 4843      4C656674 
 4843      00
 4844              	.LASF125:
 4845 01dc 706F7274 		.ascii	"portOpen\000"
 4845      4F70656E 
 4845      00
 4846              	.LASF64:
 4847 01e5 696E6974 		.ascii	"initBrake\000"
 4847      4272616B 
 4847      6500
 4848              	.LASF100:
 4849 01ef 666C6167 		.ascii	"flag_ts_update\000"
 4849      5F74735F 
 4849      75706461 
 4849      746500
 4850              	.LASF85:
 4851 01fe 7363616C 		.ascii	"scalingFactor\000"
 4851      696E6746 
 4851      6163746F 
 4851      7200
 4852              	.LASF77:
 4853 020c 6C656674 		.ascii	"leftSpeed\000"
 4853      53706565 
 4853      6400
 4854              	.LASF99:
 4855 0216 666C6167 		.ascii	"flag_ts_enc\000"
 4855      5F74735F 
 4855      656E6300 
 4856              	.LASF135:
 4857 0222 62797465 		.ascii	"byteCount\000"
 4857      436F756E 
 4857      7400
 4858              	.LASF74:
 4859 022c 62757474 		.ascii	"button\000"
 4859      6F6E00
 4860              	.LASF87:
 4861 0233 72657375 		.ascii	"result_str\000"
 4861      6C745F73 
 4861      747200
 4862              	.LASF93:
 4863 023e 75617274 		.ascii	"uart_set_PWM\000"
 4863      5F736574 
 4863      5F50574D 
 4863      00
 4864              	.LASF29:
 4865 024b 726F626F 		.ascii	"robot_ypos\000"
 4865      745F7970 
 4865      6F7300
 4866              	.LASF98:
 4867 0256 74735F64 		.ascii	"ts_display\000"
 4867      6973706C 
 4867      617900
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 101


 4868              	.LASF84:
 4869 0261 7072696E 		.ascii	"print_ADC\000"
 4869      745F4144 
 4869      4300
 4870              	.LASF79:
 4871 026b 7363616C 		.ascii	"scalingLeft\000"
 4871      696E674C 
 4871      65667400 
 4872              	.LASF10:
 4873 0277 63686172 		.ascii	"char\000"
 4873      00
 4874              	.LASF33:
 4875 027c 67305F73 		.ascii	"g0_speed\000"
 4875      70656564 
 4875      00
 4876              	.LASF123:
 4877 0285 72696768 		.ascii	"rightSpeedLimit\000"
 4877      74537065 
 4877      65644C69 
 4877      6D697400 
 4878              	.LASF46:
 4879 0295 7365744C 		.ascii	"setLeftDir\000"
 4879      65667444 
 4879      697200
 4880              	.LASF14:
 4881 02a0 75696E74 		.ascii	"uint16\000"
 4881      313600
 4882              	.LASF16:
 4883 02a7 696E7438 		.ascii	"int8\000"
 4883      00
 4884              	.LASF38:
 4885 02ac 67315F64 		.ascii	"g1_direction\000"
 4885      69726563 
 4885      74696F6E 
 4885      00
 4886              	.LASF47:
 4887 02b9 73657452 		.ascii	"setRightDir\000"
 4887      69676874 
 4887      44697200 
 4888              	.LASF81:
 4889 02c5 696E7465 		.ascii	"interCalc\000"
 4889      7243616C 
 4889      6300
 4890              	.LASF51:
 4891 02cf 72696768 		.ascii	"right\000"
 4891      7400
 4892              	.LASF6:
 4893 02d5 6C6F6E67 		.ascii	"long long int\000"
 4893      206C6F6E 
 4893      6720696E 
 4893      7400
 4894              	.LASF132:
 4895 02e3 62756666 		.ascii	"buffer_state\000"
 4895      65725F73 
 4895      74617465 
 4895      00
 4896              	.LASF35:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 102


 4897 02f0 67315F78 		.ascii	"g1_xpos\000"
 4897      706F7300 
 4898              	.LASF65:
 4899 02f8 696E6974 		.ascii	"initTrack\000"
 4899      54726163 
 4899      6B00
 4900              	.LASF137:
 4901 0302 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4901      4320342E 
 4901      392E3320 
 4901      32303135 
 4901      30333033 
 4902 0335 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4902      20726576 
 4902      6973696F 
 4902      6E203232 
 4902      31323230 
 4903 0368 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4903      66756E63 
 4903      74696F6E 
 4903      2D736563 
 4903      74696F6E 
 4904              	.LASF41:
 4905 0390 67325F73 		.ascii	"g2_speed\000"
 4905      70656564 
 4905      00
 4906              	.LASF32:
 4907 0399 67305F79 		.ascii	"g0_ypos\000"
 4907      706F7300 
 4908              	.LASF67:
 4909 03a1 72665F63 		.ascii	"rf_char\000"
 4909      68617200 
 4910              	.LASF78:
 4911 03a9 72696768 		.ascii	"rightSpeed\000"
 4911      74537065 
 4911      656400
 4912              	.LASF97:
 4913 03b4 74735F73 		.ascii	"ts_speed\000"
 4913      70656564 
 4913      00
 4914              	.LASF15:
 4915 03bd 75696E74 		.ascii	"uint32\000"
 4915      333200
 4916              	.LASF54:
 4917 03c4 636F756E 		.ascii	"countsRight\000"
 4917      74735269 
 4917      67687400 
 4918              	.LASF141:
 4919 03d0 64617461 		.ascii	"data_main\000"
 4919      5F6D6169 
 4919      6E00
 4920              	.LASF86:
 4921 03da 636F6E76 		.ascii	"converted_val\000"
 4921      65727465 
 4921      645F7661 
 4921      6C00
 4922              	.LASF26:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 103


 4923 03e8 72737369 		.ascii	"rssi\000"
 4923      00
 4924              	.LASF34:
 4925 03ed 67305F64 		.ascii	"g0_direction\000"
 4925      69726563 
 4925      74696F6E 
 4925      00
 4926              	.LASF109:
 4927 03fa 666C6167 		.ascii	"flag_receive_ADC\000"
 4927      5F726563 
 4927      65697665 
 4927      5F414443 
 4927      00
 4928              	.LASF24:
 4929 040b 53544F50 		.ascii	"STOPPED\000"
 4929      50454400 
 4930              	.LASF68:
 4931 0413 42545F72 		.ascii	"BT_rxInt\000"
 4931      78496E74 
 4931      00
 4932              	.LASF20:
 4933 041c 6C6F6E67 		.ascii	"long double\000"
 4933      20646F75 
 4933      626C6500 
 4934              	.LASF66:
 4935 0428 7278496E 		.ascii	"rxInt\000"
 4935      7400
 4936              	.LASF120:
 4937 042e 6C656674 		.ascii	"left_duty_cycle\000"
 4937      5F647574 
 4937      795F6379 
 4937      636C6500 
 4938              	.LASF101:
 4939 043e 666C6167 		.ascii	"flag_ts_speed\000"
 4939      5F74735F 
 4939      73706565 
 4939      6400
 4940              	.LASF106:
 4941 044c 64617461 		.ascii	"dataready_flag\000"
 4941      72656164 
 4941      795F666C 
 4941      616700
 4942              	.LASF103:
 4943 045b 666C6167 		.ascii	"flag_rx\000"
 4943      5F727800 
 4944              	.LASF2:
 4945 0463 73686F72 		.ascii	"short int\000"
 4945      7420696E 
 4945      7400
 4946              	.LASF110:
 4947 046d 6164635F 		.ascii	"adc_result\000"
 4947      72657375 
 4947      6C7400
 4948              	.LASF112:
 4949 0478 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 4949      5F63616C 
 4949      635F7768 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 104


 4949      65656C73 
 4949      70656564 
 4950              	.LASF4:
 4951 048d 6C6F6E67 		.ascii	"long int\000"
 4951      20696E74 
 4951      00
 4952              	.LASF62:
 4953 0496 696E6974 		.ascii	"initTurnRight\000"
 4953      5475726E 
 4953      52696768 
 4953      7400
 4954              	.LASF94:
 4955 04a4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4955      52784275 
 4955      66666572 
 4955      00
 4956              	.LASF89:
 4957 04b1 7072696E 		.ascii	"printString\000"
 4957      74537472 
 4957      696E6700 
 4958              	.LASF96:
 4959 04bd 74735F75 		.ascii	"ts_update\000"
 4959      70646174 
 4959      6500
 4960              	.LASF122:
 4961 04c7 6C656674 		.ascii	"leftSpeedLimit\000"
 4961      53706565 
 4961      644C696D 
 4961      697400
 4962              	.LASF40:
 4963 04d6 67325F79 		.ascii	"g2_ypos\000"
 4963      706F7300 
 4964              	.LASF52:
 4965 04de 6C656674 		.ascii	"left\000"
 4965      00
 4966              	.LASF60:
 4967 04e3 7475726E 		.ascii	"turnRight\000"
 4967      52696768 
 4967      7400
 4968              	.LASF36:
 4969 04ed 67315F79 		.ascii	"g1_ypos\000"
 4969      706F7300 
 4970              	.LASF70:
 4971 04f5 6164635F 		.ascii	"adc_isr\000"
 4971      69737200 
 4972              	.LASF9:
 4973 04fd 73697A65 		.ascii	"sizetype\000"
 4973      74797065 
 4973      00
 4974              	.LASF5:
 4975 0506 6C6F6E67 		.ascii	"long unsigned int\000"
 4975      20756E73 
 4975      69676E65 
 4975      6420696E 
 4975      7400
 4976              	.LASF44:
 4977 0518 62797465 		.ascii	"byte_packet\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 105


 4977      5F706163 
 4977      6B657400 
 4978              	.LASF12:
 4979 0524 696E7433 		.ascii	"int32_t\000"
 4979      325F7400 
 4980              	.LASF136:
 4981 052c 7061636B 		.ascii	"packet\000"
 4981      657400
 4982              	.LASF28:
 4983 0533 726F626F 		.ascii	"robot_xpos\000"
 4983      745F7870 
 4983      6F7300
 4984              	.LASF57:
 4985 053e 6272616B 		.ascii	"brakeMotor\000"
 4985      654D6F74 
 4985      6F7200
 4986              	.LASF130:
 4987 0549 656E7472 		.ascii	"entry\000"
 4987      7900
 4988              	.LASF1:
 4989 054f 756E7369 		.ascii	"unsigned char\000"
 4989      676E6564 
 4989      20636861 
 4989      7200
 4990              	.LASF129:
 4991 055d 6C696E65 		.ascii	"line\000"
 4991      00
 4992              	.LASF73:
 4993 0562 53746F70 		.ascii	"Stop_on_line\000"
 4993      5F6F6E5F 
 4993      6C696E65 
 4993      00
 4994              	.LASF95:
 4995 056f 74735F65 		.ascii	"ts_enc\000"
 4995      6E6300
 4996              	.LASF124:
 4997 0576 6272616B 		.ascii	"brakeFlag\000"
 4997      65466C61 
 4997      6700
 4998              	.LASF102:
 4999 0580 666C6167 		.ascii	"flag_ts_display\000"
 4999      5F74735F 
 4999      64697370 
 4999      6C617900 
 5000              	.LASF140:
 5001 0590 73746174 		.ascii	"state\000"
 5001      6500
 5002              	.LASF49:
 5003 0596 72657665 		.ascii	"reverseDirection\000"
 5003      72736544 
 5003      69726563 
 5003      74696F6E 
 5003      00
 5004              	.LASF55:
 5005 05a7 6272616B 		.ascii	"brakeLeft\000"
 5005      654C6566 
 5005      7400
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 106


 5006              	.LASF128:
 5007 05b1 64697370 		.ascii	"displaystring\000"
 5007      6C617973 
 5007      7472696E 
 5007      6700
 5008              	.LASF115:
 5009 05bf 6C617374 		.ascii	"last_quad_count1\000"
 5009      5F717561 
 5009      645F636F 
 5009      756E7431 
 5009      00
 5010              	.LASF116:
 5011 05d0 6C617374 		.ascii	"last_quad_count2\000"
 5011      5F717561 
 5011      645F636F 
 5011      756E7432 
 5011      00
 5012              	.LASF92:
 5013 05e1 75736250 		.ascii	"usbPutChar\000"
 5013      75744368 
 5013      617200
 5014              	.LASF0:
 5015 05ec 7369676E 		.ascii	"signed char\000"
 5015      65642063 
 5015      68617200 
 5016              	.LASF3:
 5017 05f8 73686F72 		.ascii	"short unsigned int\000"
 5017      7420756E 
 5017      7369676E 
 5017      65642069 
 5017      6E7400
 5018              	.LASF30:
 5019 060b 726F626F 		.ascii	"robot_orientation\000"
 5019      745F6F72 
 5019      69656E74 
 5019      6174696F 
 5019      6E00
 5020              	.LASF90:
 5021 061d 6D61696E 		.ascii	"main\000"
 5021      00
 5022              	.LASF69:
 5023 0622 42545F74 		.ascii	"BT_txInt\000"
 5023      78496E74 
 5023      00
 5024              	.LASF82:
 5025 062b 6E657874 		.ascii	"nextSpeed\000"
 5025      53706565 
 5025      6400
 5026              	.LASF13:
 5027 0635 75696E74 		.ascii	"uint8\000"
 5027      3800
 5028              	.LASF19:
 5029 063b 646F7562 		.ascii	"double\000"
 5029      6C6500
 5030              	.LASF121:
 5031 0642 72696768 		.ascii	"right_duty_cycle\000"
 5031      745F6475 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9KEhg5.s 			page 107


 5031      74795F63 
 5031      79636C65 
 5031      00
 5032              	.LASF48:
 5033 0653 68616E64 		.ascii	"handle_rx_binary\000"
 5033      6C655F72 
 5033      785F6269 
 5033      6E617279 
 5033      00
 5034              	.LASF139:
 5035 0664 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 5035      70315C43 
 5035      53333031 
 5035      2D546561 
 5035      6D2D5265 
 5036              	.LASF88:
 5037 068d 7072696E 		.ascii	"print_RF\000"
 5037      745F5246 
 5037      00
 5038              	.LASF31:
 5039 0696 67305F78 		.ascii	"g0_xpos\000"
 5039      706F7300 
 5040              	.LASF80:
 5041 069e 7363616C 		.ascii	"scalingRight\000"
 5041      696E6752 
 5041      69676874 
 5041      00
 5042              	.LASF105:
 5043 06ab 666C6167 		.ascii	"flag_KB_string\000"
 5043      5F4B425F 
 5043      73747269 
 5043      6E6700
 5044              	.LASF37:
 5045 06ba 67315F73 		.ascii	"g1_speed\000"
 5045      70656564 
 5045      00
 5046              	.LASF138:
 5047 06c3 2E5C6D61 		.ascii	".\\main.c\000"
 5047      696E2E63 
 5047      00
 5048              	.LASF56:
 5049 06cc 6272616B 		.ascii	"brakeRight\000"
 5049      65526967 
 5049      687400
 5050              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
