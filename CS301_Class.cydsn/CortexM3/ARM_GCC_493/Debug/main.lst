ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	prevVoltage,2,2
 262              		.comm	prevVoltage2,2,2
 263              		.global	displaystring
 264 0009 000000   		.align	2
 265              		.type	displaystring, %object
 266              		.size	displaystring, 64
 267              	displaystring:
 268 000c 43533330 		.ascii	"CS301 2016\012\000"
 268      31203230 
 268      31360A00 
 269 0018 00000000 		.space	52
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.comm	line,64,4
 271              		.comm	entry,64,4
 272              		.comm	usbBuffer,64,4
 273              		.comm	buffer_state,32,4
 274              		.comm	system_state,32,4
 275              		.global	prev_movement_state
 276              		.type	prev_movement_state, %object
 277              		.size	prev_movement_state, 1
 278              	prev_movement_state:
 279 004c 03       		.byte	3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 6


 280              		.global	movement_state
 281              		.type	movement_state, %object
 282              		.size	movement_state, 1
 283              	movement_state:
 284 004d 03       		.byte	3
 285              		.global	track_mode
 286              		.bss
 287              		.type	track_mode, %object
 288              		.size	track_mode, 1
 289              	track_mode:
 290 003c 00       		.space	1
 291              		.global	byteCount
 292              		.type	byteCount, %object
 293              		.size	byteCount, 1
 294              	byteCount:
 295 003d 00       		.space	1
 296              		.comm	packet,2,4
 297              		.global	speed
 298              		.data
 299 004e 0000     		.align	3
 300              		.type	speed, %object
 301              		.size	speed, 8
 302              	speed:
 303 0050 00000000 		.word	0
 304 0054 00002E40 		.word	1076756480
 305              		.comm	tracked_direction,4,4
 306              		.global	instructions
 307              		.bss
 308 003e 0000     		.align	2
 309              		.type	instructions, %object
 310              		.size	instructions, 800
 311              	instructions:
 312 0040 00000000 		.space	800
 312      00000000 
 312      00000000 
 312      00000000 
 312      00000000 
 313              		.global	instructionCount
 314              		.align	1
 315              		.type	instructionCount, %object
 316              		.size	instructionCount, 2
 317              	instructionCount:
 318 0360 0000     		.space	2
 319              		.global	instructionLength
 320              		.align	1
 321              		.type	instructionLength, %object
 322              		.size	instructionLength, 2
 323              	instructionLength:
 324 0362 0000     		.space	2
 325              		.global	sensorsDisabled
 326              		.align	2
 327              		.type	sensorsDisabled, %object
 328              		.size	sensorsDisabled, 4
 329              	sensorsDisabled:
 330 0364 00000000 		.space	4
 331              		.global	robot_direction
 332              		.data
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 7


 333              		.align	2
 334              		.type	robot_direction, %object
 335              		.size	robot_direction, 4
 336              	robot_direction:
 337 0058 02000000 		.word	2
 338              		.global	path
 339              		.bss
 340              		.align	2
 341              		.type	path, %object
 342              		.size	path, 9600
 343              	path:
 344 0368 00000000 		.space	9600
 344      00000000 
 344      00000000 
 344      00000000 
 344      00000000 
 345              		.global	start
 346              		.data
 347              		.align	2
 348              		.type	start, %object
 349              		.size	start, 8
 350              	start:
 351 005c 01000000 		.word	1
 352 0060 01000000 		.word	1
 353              		.global	destination
 354              		.align	2
 355              		.type	destination, %object
 356              		.size	destination, 8
 357              	destination:
 358 0064 0D000000 		.word	13
 359 0068 0B000000 		.word	11
 360              		.global	map
 361              		.align	2
 362              		.type	map, %object
 363              		.size	map, 1140
 364              	map:
 365 006c 01000000 		.word	1
 366 0070 01000000 		.word	1
 367 0074 01000000 		.word	1
 368 0078 01000000 		.word	1
 369 007c 01000000 		.word	1
 370 0080 01000000 		.word	1
 371 0084 01000000 		.word	1
 372 0088 01000000 		.word	1
 373 008c 01000000 		.word	1
 374 0090 01000000 		.word	1
 375 0094 01000000 		.word	1
 376 0098 01000000 		.word	1
 377 009c 01000000 		.word	1
 378 00a0 01000000 		.word	1
 379 00a4 01000000 		.word	1
 380 00a8 01000000 		.word	1
 381 00ac 01000000 		.word	1
 382 00b0 01000000 		.word	1
 383 00b4 01000000 		.word	1
 384 00b8 01000000 		.word	1
 385 00bc 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 8


 386 00c0 00000000 		.word	0
 387 00c4 00000000 		.word	0
 388 00c8 00000000 		.word	0
 389 00cc 00000000 		.word	0
 390 00d0 01000000 		.word	1
 391 00d4 00000000 		.word	0
 392 00d8 01000000 		.word	1
 393 00dc 00000000 		.word	0
 394 00e0 00000000 		.word	0
 395 00e4 00000000 		.word	0
 396 00e8 00000000 		.word	0
 397 00ec 00000000 		.word	0
 398 00f0 00000000 		.word	0
 399 00f4 00000000 		.word	0
 400 00f8 00000000 		.word	0
 401 00fc 00000000 		.word	0
 402 0100 01000000 		.word	1
 403 0104 01000000 		.word	1
 404 0108 01000000 		.word	1
 405 010c 01000000 		.word	1
 406 0110 01000000 		.word	1
 407 0114 01000000 		.word	1
 408 0118 00000000 		.word	0
 409 011c 01000000 		.word	1
 410 0120 00000000 		.word	0
 411 0124 01000000 		.word	1
 412 0128 00000000 		.word	0
 413 012c 01000000 		.word	1
 414 0130 00000000 		.word	0
 415 0134 01000000 		.word	1
 416 0138 01000000 		.word	1
 417 013c 01000000 		.word	1
 418 0140 01000000 		.word	1
 419 0144 01000000 		.word	1
 420 0148 00000000 		.word	0
 421 014c 01000000 		.word	1
 422 0150 01000000 		.word	1
 423 0154 00000000 		.word	0
 424 0158 00000000 		.word	0
 425 015c 00000000 		.word	0
 426 0160 01000000 		.word	1
 427 0164 00000000 		.word	0
 428 0168 01000000 		.word	1
 429 016c 00000000 		.word	0
 430 0170 00000000 		.word	0
 431 0174 00000000 		.word	0
 432 0178 01000000 		.word	1
 433 017c 00000000 		.word	0
 434 0180 00000000 		.word	0
 435 0184 00000000 		.word	0
 436 0188 00000000 		.word	0
 437 018c 00000000 		.word	0
 438 0190 01000000 		.word	1
 439 0194 00000000 		.word	0
 440 0198 01000000 		.word	1
 441 019c 01000000 		.word	1
 442 01a0 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 9


 443 01a4 01000000 		.word	1
 444 01a8 00000000 		.word	0
 445 01ac 01000000 		.word	1
 446 01b0 00000000 		.word	0
 447 01b4 01000000 		.word	1
 448 01b8 00000000 		.word	0
 449 01bc 01000000 		.word	1
 450 01c0 01000000 		.word	1
 451 01c4 01000000 		.word	1
 452 01c8 01000000 		.word	1
 453 01cc 01000000 		.word	1
 454 01d0 01000000 		.word	1
 455 01d4 01000000 		.word	1
 456 01d8 00000000 		.word	0
 457 01dc 01000000 		.word	1
 458 01e0 00000000 		.word	0
 459 01e4 01000000 		.word	1
 460 01e8 01000000 		.word	1
 461 01ec 00000000 		.word	0
 462 01f0 01000000 		.word	1
 463 01f4 00000000 		.word	0
 464 01f8 00000000 		.word	0
 465 01fc 00000000 		.word	0
 466 0200 00000000 		.word	0
 467 0204 00000000 		.word	0
 468 0208 00000000 		.word	0
 469 020c 00000000 		.word	0
 470 0210 00000000 		.word	0
 471 0214 00000000 		.word	0
 472 0218 00000000 		.word	0
 473 021c 00000000 		.word	0
 474 0220 01000000 		.word	1
 475 0224 00000000 		.word	0
 476 0228 01000000 		.word	1
 477 022c 00000000 		.word	0
 478 0230 01000000 		.word	1
 479 0234 01000000 		.word	1
 480 0238 00000000 		.word	0
 481 023c 01000000 		.word	1
 482 0240 01000000 		.word	1
 483 0244 01000000 		.word	1
 484 0248 01000000 		.word	1
 485 024c 01000000 		.word	1
 486 0250 01000000 		.word	1
 487 0254 01000000 		.word	1
 488 0258 01000000 		.word	1
 489 025c 01000000 		.word	1
 490 0260 00000000 		.word	0
 491 0264 01000000 		.word	1
 492 0268 00000000 		.word	0
 493 026c 01000000 		.word	1
 494 0270 00000000 		.word	0
 495 0274 01000000 		.word	1
 496 0278 01000000 		.word	1
 497 027c 01000000 		.word	1
 498 0280 01000000 		.word	1
 499 0284 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 10


 500 0288 00000000 		.word	0
 501 028c 00000000 		.word	0
 502 0290 00000000 		.word	0
 503 0294 00000000 		.word	0
 504 0298 00000000 		.word	0
 505 029c 00000000 		.word	0
 506 02a0 00000000 		.word	0
 507 02a4 00000000 		.word	0
 508 02a8 00000000 		.word	0
 509 02ac 00000000 		.word	0
 510 02b0 01000000 		.word	1
 511 02b4 00000000 		.word	0
 512 02b8 01000000 		.word	1
 513 02bc 00000000 		.word	0
 514 02c0 00000000 		.word	0
 515 02c4 00000000 		.word	0
 516 02c8 01000000 		.word	1
 517 02cc 01000000 		.word	1
 518 02d0 01000000 		.word	1
 519 02d4 01000000 		.word	1
 520 02d8 01000000 		.word	1
 521 02dc 01000000 		.word	1
 522 02e0 01000000 		.word	1
 523 02e4 01000000 		.word	1
 524 02e8 00000000 		.word	0
 525 02ec 01000000 		.word	1
 526 02f0 01000000 		.word	1
 527 02f4 01000000 		.word	1
 528 02f8 01000000 		.word	1
 529 02fc 01000000 		.word	1
 530 0300 00000000 		.word	0
 531 0304 01000000 		.word	1
 532 0308 01000000 		.word	1
 533 030c 01000000 		.word	1
 534 0310 00000000 		.word	0
 535 0314 01000000 		.word	1
 536 0318 01000000 		.word	1
 537 031c 00000000 		.word	0
 538 0320 00000000 		.word	0
 539 0324 00000000 		.word	0
 540 0328 00000000 		.word	0
 541 032c 00000000 		.word	0
 542 0330 00000000 		.word	0
 543 0334 00000000 		.word	0
 544 0338 00000000 		.word	0
 545 033c 00000000 		.word	0
 546 0340 00000000 		.word	0
 547 0344 00000000 		.word	0
 548 0348 01000000 		.word	1
 549 034c 00000000 		.word	0
 550 0350 00000000 		.word	0
 551 0354 00000000 		.word	0
 552 0358 01000000 		.word	1
 553 035c 00000000 		.word	0
 554 0360 01000000 		.word	1
 555 0364 01000000 		.word	1
 556 0368 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 11


 557 036c 01000000 		.word	1
 558 0370 01000000 		.word	1
 559 0374 01000000 		.word	1
 560 0378 01000000 		.word	1
 561 037c 01000000 		.word	1
 562 0380 00000000 		.word	0
 563 0384 01000000 		.word	1
 564 0388 01000000 		.word	1
 565 038c 01000000 		.word	1
 566 0390 00000000 		.word	0
 567 0394 01000000 		.word	1
 568 0398 00000000 		.word	0
 569 039c 01000000 		.word	1
 570 03a0 00000000 		.word	0
 571 03a4 01000000 		.word	1
 572 03a8 00000000 		.word	0
 573 03ac 01000000 		.word	1
 574 03b0 01000000 		.word	1
 575 03b4 00000000 		.word	0
 576 03b8 00000000 		.word	0
 577 03bc 00000000 		.word	0
 578 03c0 00000000 		.word	0
 579 03c4 00000000 		.word	0
 580 03c8 01000000 		.word	1
 581 03cc 00000000 		.word	0
 582 03d0 00000000 		.word	0
 583 03d4 00000000 		.word	0
 584 03d8 01000000 		.word	1
 585 03dc 00000000 		.word	0
 586 03e0 00000000 		.word	0
 587 03e4 00000000 		.word	0
 588 03e8 01000000 		.word	1
 589 03ec 00000000 		.word	0
 590 03f0 00000000 		.word	0
 591 03f4 00000000 		.word	0
 592 03f8 01000000 		.word	1
 593 03fc 01000000 		.word	1
 594 0400 00000000 		.word	0
 595 0404 01000000 		.word	1
 596 0408 01000000 		.word	1
 597 040c 01000000 		.word	1
 598 0410 00000000 		.word	0
 599 0414 01000000 		.word	1
 600 0418 01000000 		.word	1
 601 041c 01000000 		.word	1
 602 0420 00000000 		.word	0
 603 0424 01000000 		.word	1
 604 0428 01000000 		.word	1
 605 042c 01000000 		.word	1
 606 0430 00000000 		.word	0
 607 0434 01000000 		.word	1
 608 0438 01000000 		.word	1
 609 043c 01000000 		.word	1
 610 0440 00000000 		.word	0
 611 0444 01000000 		.word	1
 612 0448 01000000 		.word	1
 613 044c 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 12


 614 0450 00000000 		.word	0
 615 0454 00000000 		.word	0
 616 0458 01000000 		.word	1
 617 045c 00000000 		.word	0
 618 0460 00000000 		.word	0
 619 0464 00000000 		.word	0
 620 0468 00000000 		.word	0
 621 046c 00000000 		.word	0
 622 0470 00000000 		.word	0
 623 0474 00000000 		.word	0
 624 0478 01000000 		.word	1
 625 047c 00000000 		.word	0
 626 0480 00000000 		.word	0
 627 0484 00000000 		.word	0
 628 0488 00000000 		.word	0
 629 048c 00000000 		.word	0
 630 0490 01000000 		.word	1
 631 0494 01000000 		.word	1
 632 0498 01000000 		.word	1
 633 049c 01000000 		.word	1
 634 04a0 01000000 		.word	1
 635 04a4 01000000 		.word	1
 636 04a8 01000000 		.word	1
 637 04ac 01000000 		.word	1
 638 04b0 01000000 		.word	1
 639 04b4 01000000 		.word	1
 640 04b8 01000000 		.word	1
 641 04bc 01000000 		.word	1
 642 04c0 01000000 		.word	1
 643 04c4 01000000 		.word	1
 644 04c8 01000000 		.word	1
 645 04cc 01000000 		.word	1
 646 04d0 01000000 		.word	1
 647 04d4 01000000 		.word	1
 648 04d8 01000000 		.word	1
 649 04dc 01000000 		.word	1
 650              		.global	food_list
 651              		.align	2
 652              		.type	food_list, %object
 653              		.size	food_list, 48
 654              	food_list:
 655 04e0 05000000 		.word	5
 656 04e4 0A000000 		.word	10
 657 04e8 05000000 		.word	5
 658 04ec 03000000 		.word	3
 659 04f0 0D000000 		.word	13
 660 04f4 02000000 		.word	2
 661 04f8 00000000 		.space	24
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.global	food_length
 663              		.align	2
 664              		.type	food_length, %object
 665              		.size	food_length, 4
 666              	food_length:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 13


 667 0510 03000000 		.word	3
 668 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 669              		.align	2
 670              		.global	BT_txInt
 671              		.thumb
 672              		.thumb_func
 673              		.type	BT_txInt, %function
 674              	BT_txInt:
 675              	.LFB63:
 676              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 50
  29:.\main.c      **** 
  30:.\main.c      **** #define U_DEADZONE 90000
  31:.\main.c      **** #define TURN_DEADZONE 50000
  32:.\main.c      **** #define S_DEADZONE 10000
  33:.\main.c      **** #define QUAD_PER_UNIT 145
  34:.\main.c      **** 
  35:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  36:.\main.c      **** uint16 instructionCount = 0;
  37:.\main.c      **** uint16 instructionLength = 0;
  38:.\main.c      **** uint32_t sensorsDisabled = 0;
  39:.\main.c      **** 
  40:.\main.c      **** uint32_t robot_direction = 2;
  41:.\main.c      **** 
  42:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  43:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  44:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  45:.\main.c      **** 
  46:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  47:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 14


  48:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  49:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  50:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  51:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  52:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  53:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  54:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  55:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  56:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  57:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  58:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  59:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  60:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  61:.\main.c      **** 
  62:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  63:.\main.c      **** //first number is the y coord, second is x
  64:.\main.c      **** //first number is row, second column
  65:.\main.c      **** 
  66:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  67:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  68:.\main.c      **** //uint8 food_list[6][2]= {{10,1},{1,13},{9,7},{16,13},{17,1}};
  69:.\main.c      **** uint32_t food_length = 3;
  70:.\main.c      **** 
  71:.\main.c      **** void changeToRF();
  72:.\main.c      **** void changeToBT();
  73:.\main.c      **** void brakeMotor();
  74:.\main.c      **** void driveForwards();
  75:.\main.c      **** void initTurnLeft();
  76:.\main.c      **** void initTurnRight();
  77:.\main.c      **** void inittrackLineZ();
  78:.\main.c      **** void trackLineU();
  79:.\main.c      **** void trackLine();
  80:.\main.c      **** void trackLineZ();
  81:.\main.c      **** void initTrackU();
  82:.\main.c      **** void turnLeft();
  83:.\main.c      **** void turnRight();
  84:.\main.c      **** void initForward();
  85:.\main.c      **** void initTurnU();
  86:.\main.c      **** void turnU();
  87:.\main.c      **** void initBrake();
  88:.\main.c      **** void print_ADC();
  89:.\main.c      **** void Quad_Dec_response();
  90:.\main.c      **** void handle_rx_binary();
  91:.\main.c      **** void readFrontSensors();
  92:.\main.c      **** void print_RF();
  93:.\main.c      **** 
  94:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  95:.\main.c      **** //BT
  96:.\main.c      **** CY_ISR(BT_txInt)
  97:.\main.c      **** {
 677              		.loc 1 97 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 15


 684              		.cfi_offset 7, -4
 685 0002 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
  98:.\main.c      ****     
  99:.\main.c      **** }
 687              		.loc 1 99 0
 688 0004 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0006 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 000a 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE63:
 697              		.size	BT_txInt, .-BT_txInt
 698              		.section	.text.adc_isr,"ax",%progbits
 699              		.align	2
 700              		.global	adc_isr
 701              		.thumb
 702              		.thumb_func
 703              		.type	adc_isr, %function
 704              	adc_isr:
 705              	.LFB64:
 100:.\main.c      **** 
 101:.\main.c      **** //ADC:
 102:.\main.c      **** CY_ISR (adc_isr)
 103:.\main.c      **** {
 706              		.loc 1 103 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 104:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 105:.\main.c      ****     adc_result = ADC_GetResult16();
 716              		.loc 1 105 0
 717 0004 FFF7FEFF 		bl	ADC_GetResult16
 718 0008 0346     		mov	r3, r0
 719 000a 1A46     		mov	r2, r3
 720 000c 044B     		ldr	r3, .L3
 721 000e 1A80     		strh	r2, [r3]	@ movhi
 106:.\main.c      ****     flag_receive_ADC = 1;
 722              		.loc 1 106 0
 723 0010 044B     		ldr	r3, .L3+4
 724 0012 0122     		movs	r2, #1
 725 0014 1A70     		strb	r2, [r3]
 107:.\main.c      ****     flag_print_rf = 1;
 726              		.loc 1 107 0
 727 0016 044B     		ldr	r3, .L3+8
 728 0018 0122     		movs	r2, #1
 729 001a 1A70     		strb	r2, [r3]
 108:.\main.c      ****     //LED_Write(~LED_Read());
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 16


 109:.\main.c      **** }
 730              		.loc 1 109 0
 731 001c 80BD     		pop	{r7, pc}
 732              	.L4:
 733 001e 00BF     		.align	2
 734              	.L3:
 735 0020 00000000 		.word	adc_result
 736 0024 00000000 		.word	flag_receive_ADC
 737 0028 00000000 		.word	flag_print_rf
 738              		.cfi_endproc
 739              	.LFE64:
 740              		.size	adc_isr, .-adc_isr
 741              		.global	__aeabi_i2d
 742              		.global	__aeabi_dsub
 743              		.global	__aeabi_dcmpge
 744              		.global	__aeabi_dadd
 745              		.section	.text.isr_quad1,"ax",%progbits
 746              		.align	2
 747              		.global	isr_quad1
 748              		.thumb
 749              		.thumb_func
 750              		.type	isr_quad1, %function
 751              	isr_quad1:
 752              	.LFB65:
 110:.\main.c      **** 
 111:.\main.c      **** CY_ISR (isr_quad1)
 112:.\main.c      **** {
 753              		.loc 1 112 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 B0B5     		push	{r4, r5, r7, lr}
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 4, -16
 760              		.cfi_offset 5, -12
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 113:.\main.c      ****     //LED_Write(~LED_Read());
 114:.\main.c      ****     last_quad_count1 = quad_count1;
 765              		.loc 1 114 0
 766 0004 584B     		ldr	r3, .L13+8
 767 0006 1A88     		ldrh	r2, [r3]
 768 0008 584B     		ldr	r3, .L13+12
 769 000a 1A80     		strh	r2, [r3]	@ movhi
 115:.\main.c      ****     last_quad_count2 = quad_count2;
 770              		.loc 1 115 0
 771 000c 584B     		ldr	r3, .L13+16
 772 000e 1A88     		ldrh	r2, [r3]
 773 0010 584B     		ldr	r3, .L13+20
 774 0012 1A80     		strh	r2, [r3]	@ movhi
 116:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 775              		.loc 1 116 0
 776 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 777 0018 0346     		mov	r3, r0
 778 001a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 17


 779 001c 524B     		ldr	r3, .L13+8
 780 001e 1A80     		strh	r2, [r3]	@ movhi
 117:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 781              		.loc 1 117 0
 782 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 783 0024 0346     		mov	r3, r0
 784 0026 1A46     		mov	r2, r3
 785 0028 514B     		ldr	r3, .L13+16
 786 002a 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 787              		.loc 1 118 0
 788 002c 4E4B     		ldr	r3, .L13+8
 789 002e 1B88     		ldrh	r3, [r3]
 790 0030 9AB2     		uxth	r2, r3
 791 0032 4E4B     		ldr	r3, .L13+12
 792 0034 1B88     		ldrh	r3, [r3]
 793 0036 9BB2     		uxth	r3, r3
 794 0038 D31A     		subs	r3, r2, r3
 795 003a 9BB2     		uxth	r3, r3
 796 003c 9AB2     		uxth	r2, r3
 797 003e 4E4B     		ldr	r3, .L13+24
 798 0040 1A80     		strh	r2, [r3]	@ movhi
 119:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 799              		.loc 1 119 0
 800 0042 4B4B     		ldr	r3, .L13+16
 801 0044 1B88     		ldrh	r3, [r3]
 802 0046 9AB2     		uxth	r2, r3
 803 0048 4A4B     		ldr	r3, .L13+20
 804 004a 1B88     		ldrh	r3, [r3]
 805 004c 9BB2     		uxth	r3, r3
 806 004e D31A     		subs	r3, r2, r3
 807 0050 9BB2     		uxth	r3, r3
 808 0052 9AB2     		uxth	r2, r3
 809 0054 494B     		ldr	r3, .L13+28
 810 0056 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****     
 121:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 811              		.loc 1 121 0
 812 0058 434B     		ldr	r3, .L13+8
 813 005a 1B88     		ldrh	r3, [r3]
 814 005c 1BB2     		sxth	r3, r3
 815 005e 002B     		cmp	r3, #0
 816 0060 B8BF     		it	lt
 817 0062 5B42     		rsblt	r3, r3, #0
 818 0064 40F6B832 		movw	r2, #3000
 819 0068 9342     		cmp	r3, r2
 820 006a 17DD     		ble	.L6
 821              		.loc 1 121 0 is_stmt 0 discriminator 1
 822 006c 444B     		ldr	r3, .L13+32
 823 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 824 0070 012B     		cmp	r3, #1
 825 0072 13D0     		beq	.L6
 826              		.loc 1 121 0 discriminator 2
 827 0074 424B     		ldr	r3, .L13+32
 828 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829 0078 022B     		cmp	r3, #2
 830 007a 0FD0     		beq	.L6
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 18


 831              		.loc 1 121 0 discriminator 3
 832 007c 404B     		ldr	r3, .L13+32
 833 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 0080 072B     		cmp	r3, #7
 835 0082 0BD0     		beq	.L6
 122:.\main.c      ****     {
 123:.\main.c      ****         QuadDec_M1_SetCounter(0);
 836              		.loc 1 123 0 is_stmt 1
 837 0084 0020     		movs	r0, #0
 838 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 124:.\main.c      ****         QuadDec_M2_SetCounter(0);
 839              		.loc 1 124 0
 840 008a 0020     		movs	r0, #0
 841 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 125:.\main.c      ****         quad_count1 = 0;
 842              		.loc 1 125 0
 843 0090 354B     		ldr	r3, .L13+8
 844 0092 0022     		movs	r2, #0
 845 0094 1A80     		strh	r2, [r3]	@ movhi
 126:.\main.c      ****         quad_count2 = 0;
 846              		.loc 1 126 0
 847 0096 364B     		ldr	r3, .L13+16
 848 0098 0022     		movs	r2, #0
 849 009a 1A80     		strh	r2, [r3]	@ movhi
 850              	.L6:
 127:.\main.c      ****     }
 128:.\main.c      **** 
 129:.\main.c      ****     flag_calc_wheelspeed = 1;
 851              		.loc 1 129 0
 852 009c 394B     		ldr	r3, .L13+36
 853 009e 0122     		movs	r2, #1
 854 00a0 1A70     		strb	r2, [r3]
 130:.\main.c      ****     
 131:.\main.c      ****     if(track_mode == DEST_TEST)
 855              		.loc 1 131 0
 856 00a2 394B     		ldr	r3, .L13+40
 857 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 858 00a6 062B     		cmp	r3, #6
 859 00a8 56D1     		bne	.L5
 132:.\main.c      ****     {
 133:.\main.c      ****         //track the distance
 134:.\main.c      ****         accum_dist += quad_diff1;
 860              		.loc 1 134 0
 861 00aa 384B     		ldr	r3, .L13+44
 862 00ac 1B88     		ldrh	r3, [r3]
 863 00ae 9AB2     		uxth	r2, r3
 864 00b0 314B     		ldr	r3, .L13+24
 865 00b2 1B88     		ldrh	r3, [r3]
 866 00b4 9BB2     		uxth	r3, r3
 867 00b6 1344     		add	r3, r3, r2
 868 00b8 9BB2     		uxth	r3, r3
 869 00ba 9AB2     		uxth	r2, r3
 870 00bc 334B     		ldr	r3, .L13+44
 871 00be 1A80     		strh	r2, [r3]	@ movhi
 135:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad - QUAD_PER_UNIT * 0.8)
 872              		.loc 1 135 0
 873 00c0 324B     		ldr	r3, .L13+44
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 19


 874 00c2 1B88     		ldrh	r3, [r3]
 875 00c4 1BB2     		sxth	r3, r3
 876 00c6 002B     		cmp	r3, #0
 877 00c8 B8BF     		it	lt
 878 00ca 5B42     		rsblt	r3, r3, #0
 879 00cc 1846     		mov	r0, r3
 880 00ce FFF7FEFF 		bl	__aeabi_i2d
 881 00d2 0446     		mov	r4, r0
 882 00d4 0D46     		mov	r5, r1
 883 00d6 2E4B     		ldr	r3, .L13+48
 884 00d8 1B88     		ldrh	r3, [r3]
 885 00da 1BB2     		sxth	r3, r3
 886 00dc 1846     		mov	r0, r3
 887 00de FFF7FEFF 		bl	__aeabi_i2d
 888 00e2 0246     		mov	r2, r0
 889 00e4 0B46     		mov	r3, r1
 890 00e6 1046     		mov	r0, r2
 891 00e8 1946     		mov	r1, r3
 892 00ea 4FF00002 		mov	r2, #0
 893 00ee 294B     		ldr	r3, .L13+52
 894 00f0 FFF7FEFF 		bl	__aeabi_dsub
 895 00f4 0246     		mov	r2, r0
 896 00f6 0B46     		mov	r3, r1
 897 00f8 2046     		mov	r0, r4
 898 00fa 2946     		mov	r1, r5
 899 00fc FFF7FEFF 		bl	__aeabi_dcmpge
 900 0100 0346     		mov	r3, r0
 901 0102 002B     		cmp	r3, #0
 902 0104 02D0     		beq	.L8
 136:.\main.c      ****         {
 137:.\main.c      ****             reached_target = 1;
 903              		.loc 1 137 0
 904 0106 244B     		ldr	r3, .L13+56
 905 0108 0122     		movs	r2, #1
 906 010a 1A70     		strb	r2, [r3]
 907              	.L8:
 138:.\main.c      ****         }
 139:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad + QUAD_PER_UNIT * 1.15)
 908              		.loc 1 139 0
 909 010c 1F4B     		ldr	r3, .L13+44
 910 010e 1B88     		ldrh	r3, [r3]
 911 0110 1BB2     		sxth	r3, r3
 912 0112 002B     		cmp	r3, #0
 913 0114 B8BF     		it	lt
 914 0116 5B42     		rsblt	r3, r3, #0
 915 0118 1846     		mov	r0, r3
 916 011a FFF7FEFF 		bl	__aeabi_i2d
 917 011e 0446     		mov	r4, r0
 918 0120 0D46     		mov	r5, r1
 919 0122 1B4B     		ldr	r3, .L13+48
 920 0124 1B88     		ldrh	r3, [r3]
 921 0126 1BB2     		sxth	r3, r3
 922 0128 1846     		mov	r0, r3
 923 012a FFF7FEFF 		bl	__aeabi_i2d
 924 012e 0246     		mov	r2, r0
 925 0130 0B46     		mov	r3, r1
 926 0132 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 20


 927 0134 1946     		mov	r1, r3
 928 0136 0AA3     		adr	r3, .L13
 929 0138 D3E90023 		ldrd	r2, [r3]
 930 013c FFF7FEFF 		bl	__aeabi_dadd
 931 0140 0246     		mov	r2, r0
 932 0142 0B46     		mov	r3, r1
 933 0144 2046     		mov	r0, r4
 934 0146 2946     		mov	r1, r5
 935 0148 FFF7FEFF 		bl	__aeabi_dcmpge
 936 014c 0346     		mov	r3, r0
 937 014e 002B     		cmp	r3, #0
 938 0150 02D0     		beq	.L5
 140:.\main.c      ****         {
 141:.\main.c      ****             overshot_target = 1;
 939              		.loc 1 141 0
 940 0152 124B     		ldr	r3, .L13+60
 941 0154 0122     		movs	r2, #1
 942 0156 1A70     		strb	r2, [r3]
 943              	.L5:
 142:.\main.c      ****         }
 143:.\main.c      ****     }
 144:.\main.c      **** //    if (track_mode == QUAD_STOP)
 145:.\main.c      **** //    {
 146:.\main.c      **** //        accum_dist += quad_diff1;
 147:.\main.c      **** //        char mes[16];
 148:.\main.c      **** //        sprintf(mes, "dist: %d\r\n", accum_dist);
 149:.\main.c      **** //        UART_PutString(mes);
 150:.\main.c      **** //        if(abs(accum_dist) >= target_distance_quad)
 151:.\main.c      **** //        {
 152:.\main.c      **** //            initBrake();
 153:.\main.c      **** //            track_mode = NO_TRACK;
 154:.\main.c      **** //        }
 155:.\main.c      **** //    } else if (track_mode == RF_STOP)
 156:.\main.c      **** //    { 
 157:.\main.c      **** //        // Do pythag
 158:.\main.c      **** //        double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_sta
 159:.\main.c      **** //        if (dist >= target_distance_cm)
 160:.\main.c      **** //        {
 161:.\main.c      **** //            initBrake();
 162:.\main.c      **** //            track_mode = NO_TRACK;
 163:.\main.c      **** //        }
 164:.\main.c      **** //    }
 165:.\main.c      **** }
 944              		.loc 1 165 0
 945 0158 B0BD     		pop	{r4, r5, r7, pc}
 946              	.L14:
 947 015a 00BFAFF3 		.align	3
 947      0080
 948              	.L13:
 949 0160 00000000 		.word	0
 950 0164 00D86440 		.word	1080350720
 951 0168 00000000 		.word	quad_count1
 952 016c 00000000 		.word	last_quad_count1
 953 0170 00000000 		.word	quad_count2
 954 0174 00000000 		.word	last_quad_count2
 955 0178 00000000 		.word	quad_diff1
 956 017c 00000000 		.word	quad_diff2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 21


 957 0180 00000000 		.word	movement_state
 958 0184 00000000 		.word	flag_calc_wheelspeed
 959 0188 00000000 		.word	track_mode
 960 018c 00000000 		.word	accum_dist
 961 0190 00000000 		.word	target_distance_quad
 962 0194 00005D40 		.word	1079836672
 963 0198 00000000 		.word	reached_target
 964 019c 00000000 		.word	overshot_target
 965              		.cfi_endproc
 966              	.LFE65:
 967              		.size	isr_quad1, .-isr_quad1
 968              		.section	.text.isr_turn_timer,"ax",%progbits
 969              		.align	2
 970              		.global	isr_turn_timer
 971              		.thumb
 972              		.thumb_func
 973              		.type	isr_turn_timer, %function
 974              	isr_turn_timer:
 975              	.LFB66:
 166:.\main.c      **** 
 167:.\main.c      **** CY_ISR(isr_turn_timer)
 168:.\main.c      **** {
 976              		.loc 1 168 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 00AF     		add	r7, sp, #0
 985              		.cfi_def_cfa_register 7
 169:.\main.c      ****     if(movement_state == LTURN)
 986              		.loc 1 169 0
 987 0004 264B     		ldr	r3, .L21
 988 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0008 012B     		cmp	r3, #1
 990 000a 15D1     		bne	.L16
 170:.\main.c      ****     {
 171:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 991              		.loc 1 171 0
 992 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 993 0010 0346     		mov	r3, r0
 994 0012 1A46     		mov	r2, r3
 995 0014 234B     		ldr	r3, .L21+4
 996 0016 1B88     		ldrh	r3, [r3]
 997 0018 1BB2     		sxth	r3, r3
 998 001a D31A     		subs	r3, r2, r3
 999 001c 002B     		cmp	r3, #0
 1000 001e B8BF     		it	lt
 1001 0020 5B42     		rsblt	r3, r3, #0
 1002 0022 CF2B     		cmp	r3, #207
 1003 0024 3BDD     		ble	.L15
 172:.\main.c      ****         {
 173:.\main.c      ****             //movement_state = STOPPED;
 174:.\main.c      ****             brakeMotor();
 1004              		.loc 1 174 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 22


 1005 0026 FFF7FEFF 		bl	brakeMotor
 175:.\main.c      ****             movement_state = prev_movement_state;
 1006              		.loc 1 175 0
 1007 002a 1F4B     		ldr	r3, .L21+8
 1008 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1009 002e 1C4B     		ldr	r3, .L21
 1010 0030 1A70     		strb	r2, [r3]
 176:.\main.c      ****             Timer_2_Stop();
 1011              		.loc 1 176 0
 1012 0032 FFF7FEFF 		bl	Timer_2_Stop
 1013 0036 32E0     		b	.L15
 1014              	.L16:
 177:.\main.c      ****         }
 178:.\main.c      ****     }
 179:.\main.c      ****     else if (movement_state == RTURN)
 1015              		.loc 1 179 0
 1016 0038 194B     		ldr	r3, .L21
 1017 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 003c 022B     		cmp	r3, #2
 1019 003e 15D1     		bne	.L19
 180:.\main.c      ****     {
 181:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1020              		.loc 1 181 0
 1021 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1022 0044 0346     		mov	r3, r0
 1023 0046 1A46     		mov	r2, r3
 1024 0048 164B     		ldr	r3, .L21+4
 1025 004a 1B88     		ldrh	r3, [r3]
 1026 004c 1BB2     		sxth	r3, r3
 1027 004e D31A     		subs	r3, r2, r3
 1028 0050 002B     		cmp	r3, #0
 1029 0052 B8BF     		it	lt
 1030 0054 5B42     		rsblt	r3, r3, #0
 1031 0056 CF2B     		cmp	r3, #207
 1032 0058 21DD     		ble	.L15
 182:.\main.c      ****         {
 183:.\main.c      ****             //movement_state = STOPPED;
 184:.\main.c      ****             brakeMotor();
 1033              		.loc 1 184 0
 1034 005a FFF7FEFF 		bl	brakeMotor
 185:.\main.c      ****             movement_state = prev_movement_state;
 1035              		.loc 1 185 0
 1036 005e 124B     		ldr	r3, .L21+8
 1037 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0062 0F4B     		ldr	r3, .L21
 1039 0064 1A70     		strb	r2, [r3]
 186:.\main.c      ****             Timer_2_Stop();
 1040              		.loc 1 186 0
 1041 0066 FFF7FEFF 		bl	Timer_2_Stop
 1042 006a 18E0     		b	.L15
 1043              	.L19:
 187:.\main.c      ****         }
 188:.\main.c      ****     }
 189:.\main.c      ****     else if (movement_state == UTURN)
 1044              		.loc 1 189 0
 1045 006c 0C4B     		ldr	r3, .L21
 1046 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 23


 1047 0070 072B     		cmp	r3, #7
 1048 0072 14D1     		bne	.L15
 190:.\main.c      ****     {
 191:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1049              		.loc 1 191 0
 1050 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1051 0078 0346     		mov	r3, r0
 1052 007a 1A46     		mov	r2, r3
 1053 007c 094B     		ldr	r3, .L21+4
 1054 007e 1B88     		ldrh	r3, [r3]
 1055 0080 1BB2     		sxth	r3, r3
 1056 0082 D31A     		subs	r3, r2, r3
 1057 0084 002B     		cmp	r3, #0
 1058 0086 B8BF     		it	lt
 1059 0088 5B42     		rsblt	r3, r3, #0
 1060 008a CF2B     		cmp	r3, #207
 1061 008c 07DD     		ble	.L15
 192:.\main.c      ****         {
 193:.\main.c      ****             //movement_state = STOPPED;
 194:.\main.c      ****             brakeMotor();
 1062              		.loc 1 194 0
 1063 008e FFF7FEFF 		bl	brakeMotor
 195:.\main.c      ****             movement_state = prev_movement_state;
 1064              		.loc 1 195 0
 1065 0092 054B     		ldr	r3, .L21+8
 1066 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1067 0096 024B     		ldr	r3, .L21
 1068 0098 1A70     		strb	r2, [r3]
 196:.\main.c      ****             Timer_2_Stop();
 1069              		.loc 1 196 0
 1070 009a FFF7FEFF 		bl	Timer_2_Stop
 1071              	.L15:
 197:.\main.c      ****         }
 198:.\main.c      ****     }
 199:.\main.c      **** }
 1072              		.loc 1 199 0
 1073 009e 80BD     		pop	{r7, pc}
 1074              	.L22:
 1075              		.align	2
 1076              	.L21:
 1077 00a0 00000000 		.word	movement_state
 1078 00a4 00000000 		.word	start_turn_count
 1079 00a8 00000000 		.word	prev_movement_state
 1080              		.cfi_endproc
 1081              	.LFE66:
 1082              		.size	isr_turn_timer, .-isr_turn_timer
 1083              		.section	.text.Stop_on_line,"ax",%progbits
 1084              		.align	2
 1085              		.global	Stop_on_line
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	Stop_on_line, %function
 1089              	Stop_on_line:
 1090              	.LFB67:
 200:.\main.c      **** 
 201:.\main.c      **** 
 202:.\main.c      **** CY_ISR (Stop_on_line)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 24


 203:.\main.c      **** {
 1091              		.loc 1 203 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
 1096 0000 80B4     		push	{r7}
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 204:.\main.c      ****     movement_state = STOPPED;
 1101              		.loc 1 204 0
 1102 0004 054B     		ldr	r3, .L25
 1103 0006 0322     		movs	r2, #3
 1104 0008 1A70     		strb	r2, [r3]
 205:.\main.c      ****     if(movement_state != DRIVE) return;
 1105              		.loc 1 205 0
 1106 000a 044B     		ldr	r3, .L25
 1107 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 000e 002B     		cmp	r3, #0
 1109 0010 00D0     		beq	.L23
 1110 0012 00BF     		nop
 1111              	.L23:
 206:.\main.c      ****     //initTurnLeft();
 207:.\main.c      **** }
 1112              		.loc 1 207 0
 1113 0014 BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0016 5DF8047B 		ldr	r7, [sp], #4
 1117              		.cfi_restore 7
 1118              		.cfi_def_cfa_offset 0
 1119 001a 7047     		bx	lr
 1120              	.L26:
 1121              		.align	2
 1122              	.L25:
 1123 001c 00000000 		.word	movement_state
 1124              		.cfi_endproc
 1125              	.LFE67:
 1126              		.size	Stop_on_line, .-Stop_on_line
 1127              		.section	.rodata
 1128              		.align	2
 1129              	.LC0:
 1130 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1130      74696E67 
 1130      20726F62 
 1130      6F74210D 
 1130      0A00
 1131              		.section	.text.button,"ax",%progbits
 1132              		.align	2
 1133              		.global	button
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	button, %function
 1137              	button:
 1138              	.LFB68:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 25


 208:.\main.c      **** 
 209:.\main.c      **** CY_ISR (button)
 210:.\main.c      **** {
 1139              		.loc 1 210 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 80B5     		push	{r7, lr}
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 211:.\main.c      ****     if(BT_ENABLED)
 1149              		.loc 1 211 0
 1150 0004 054B     		ldr	r3, .L29
 1151 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0008 002B     		cmp	r3, #0
 1153 000a 02D0     		beq	.L28
 212:.\main.c      ****     {
 213:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1154              		.loc 1 213 0
 1155 000c 0448     		ldr	r0, .L29+4
 1156 000e FFF7FEFF 		bl	UART_PutString
 1157              	.L28:
 214:.\main.c      ****     }
 215:.\main.c      ****     movement_state = DRIVE;
 1158              		.loc 1 215 0
 1159 0012 044B     		ldr	r3, .L29+8
 1160 0014 0022     		movs	r2, #0
 1161 0016 1A70     		strb	r2, [r3]
 216:.\main.c      **** }
 1162              		.loc 1 216 0
 1163 0018 80BD     		pop	{r7, pc}
 1164              	.L30:
 1165 001a 00BF     		.align	2
 1166              	.L29:
 1167 001c 00000000 		.word	BT_ENABLED
 1168 0020 00000000 		.word	.LC0
 1169 0024 00000000 		.word	movement_state
 1170              		.cfi_endproc
 1171              	.LFE68:
 1172              		.size	button, .-button
 1173              		.section	.text.isr_adcTimer,"ax",%progbits
 1174              		.align	2
 1175              		.global	isr_adcTimer
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	isr_adcTimer, %function
 1179              	isr_adcTimer:
 1180              	.LFB69:
 217:.\main.c      **** 
 218:.\main.c      **** CY_ISR(isr_adcTimer)
 219:.\main.c      **** {
 1181              		.loc 1 219 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 26


 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 220:.\main.c      ****     ADC_StartConvert();
 1191              		.loc 1 220 0
 1192 0004 FFF7FEFF 		bl	ADC_StartConvert
 221:.\main.c      **** }
 1193              		.loc 1 221 0
 1194 0008 80BD     		pop	{r7, pc}
 1195              		.cfi_endproc
 1196              	.LFE69:
 1197              		.size	isr_adcTimer, .-isr_adcTimer
 1198 000a 00BF     		.section	.rodata
 1199 0012 0000     		.align	2
 1200              	.LC1:
 1201 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1201      7A6F6E65 
 1201      206C6566 
 1201      740D0A00 
 1202              		.section	.text.isr_deadzone,"ax",%progbits
 1203              		.align	2
 1204              		.global	isr_deadzone
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	isr_deadzone, %function
 1208              	isr_deadzone:
 1209              	.LFB70:
 222:.\main.c      **** 
 223:.\main.c      **** CY_ISR(isr_deadzone)
 224:.\main.c      **** {
 1210              		.loc 1 224 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 7, -8
 1217              		.cfi_offset 14, -4
 1218 0002 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 225:.\main.c      ****     sensorsDisabled = 0;
 1220              		.loc 1 225 0
 1221 0004 054B     		ldr	r3, .L33
 1222 0006 0022     		movs	r2, #0
 1223 0008 1A60     		str	r2, [r3]
 226:.\main.c      ****     deadzone = 0;
 1224              		.loc 1 226 0
 1225 000a 054B     		ldr	r3, .L33+4
 1226 000c 0022     		movs	r2, #0
 1227 000e 1A70     		strb	r2, [r3]
 227:.\main.c      ****     Timer_Deadzone_Stop();
 1228              		.loc 1 227 0
 1229 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 27


 228:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1230              		.loc 1 228 0
 1231 0014 0348     		ldr	r0, .L33+8
 1232 0016 FFF7FEFF 		bl	UART_PutString
 229:.\main.c      **** }
 1233              		.loc 1 229 0
 1234 001a 80BD     		pop	{r7, pc}
 1235              	.L34:
 1236              		.align	2
 1237              	.L33:
 1238 001c 00000000 		.word	sensorsDisabled
 1239 0020 00000000 		.word	deadzone
 1240 0024 14000000 		.word	.LC1
 1241              		.cfi_endproc
 1242              	.LFE70:
 1243              		.size	isr_deadzone, .-isr_deadzone
 1244              		.section	.rodata
 1245              		.align	2
 1246              	.LC2:
 1247 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1247      20747261 
 1247      76656C3A 
 1247      2025640D 
 1247      0A00
 1248 0036 0000     		.align	2
 1249              	.LC3:
 1250 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1250      67657265 
 1250      64206174 
 1250      20696E74 
 1250      65727365 
 1251 0055 000000   		.align	2
 1252              	.LC4:
 1253 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1253      7A6F6E65 
 1253      20656E74 
 1253      65726564 
 1253      210D0A00 
 1254              		.align	2
 1255              	.LC5:
 1256 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1256      65742064 
 1256      6973743A 
 1256      2025640D 
 1256      0A00
 1257 007e 0000     		.align	2
 1258              	.LC6:
 1259 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1259      67657265 
 1259      64206174 
 1259      20776869 
 1259      7465206C 
 1260              		.align	2
 1261              	.LC7:
 1262 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1262      67657265 
 1262      64206174 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 28


 1262      20717561 
 1262      6420636F 
 1263              		.section	.text.main,"ax",%progbits
 1264              		.align	2
 1265              		.global	main
 1266              		.thumb
 1267              		.thumb_func
 1268              		.type	main, %function
 1269              	main:
 1270              	.LFB71:
 230:.\main.c      **** 
 231:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 232:.\main.c      **** 
 233:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 234:.\main.c      **** int main()
 235:.\main.c      **** {  
 1271              		.loc 1 235 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 64
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 90B0     		sub	sp, sp, #64
 1280              		.cfi_def_cfa_offset 72
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 236:.\main.c      **** 
 237:.\main.c      **** // ----- INITIALIZATIONS ----------
 238:.\main.c      ****     CYGlobalIntEnable;
 1283              		.loc 1 238 0
 1284              	@ 238 ".\main.c" 1
 1285 0006 62B6     		CPSIE   i
 1286              	@ 0 "" 2
 239:.\main.c      ****     if(ENABLE_PWM)
 240:.\main.c      ****     {
 241:.\main.c      ****         PWM_1_Start();// starting the pwm
 1287              		.loc 1 241 0
 1288              		.thumb
 1289 0008 FFF7FEFF 		bl	PWM_1_Start
 242:.\main.c      ****         PWM_2_Start();// starting the pwm
 1290              		.loc 1 242 0
 1291 000c FFF7FEFF 		bl	PWM_2_Start
 243:.\main.c      ****     }
 244:.\main.c      ****     
 245:.\main.c      ****     if(ENABLE_ADC)
 246:.\main.c      ****     {
 247:.\main.c      ****         ADC_Start();
 248:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 249:.\main.c      ****         //ADC_StartConvert();
 250:.\main.c      ****         
 251:.\main.c      ****         //start the ADC timer for software trigger mode
 252:.\main.c      ****         Timer_TS_Start();
 253:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 254:.\main.c      ****     }
 255:.\main.c      ****     
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 29


 256:.\main.c      ****     if (ENABLE_QUAD)
 257:.\main.c      ****     {
 258:.\main.c      ****         QuadDec_M1_Start();
 1292              		.loc 1 258 0
 1293 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 259:.\main.c      ****         QuadDec_M2_Start();
 1294              		.loc 1 259 0
 1295 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 260:.\main.c      ****         
 261:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1296              		.loc 1 261 0
 1297 0018 AD48     		ldr	r0, .L102
 1298 001a FFF7FEFF 		bl	isr_quad1_StartEx
 262:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1299              		.loc 1 262 0
 1300 001e AD48     		ldr	r0, .L102+4
 1301 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 263:.\main.c      ****         
 264:.\main.c      ****         Timer_1_Start();
 1302              		.loc 1 264 0
 1303 0024 FFF7FEFF 		bl	Timer_1_Start
 265:.\main.c      ****     }
 266:.\main.c      ****     
 267:.\main.c      ****     if(ENABLE_STOP){
 268:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 269:.\main.c      ****         
 270:.\main.c      ****     }
 271:.\main.c      ****     isr_button_StartEx(button);
 1304              		.loc 1 271 0
 1305 0028 AB48     		ldr	r0, .L102+8
 1306 002a FFF7FEFF 		bl	isr_button_StartEx
 272:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1307              		.loc 1 272 0
 1308 002e AB48     		ldr	r0, .L102+12
 1309 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 273:.\main.c      **** 
 274:.\main.c      ****     // ------USB SETUP ----------------    
 275:.\main.c      ****     if (USE_USB){    
 276:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1310              		.loc 1 276 0
 1311 0034 0020     		movs	r0, #0
 1312 0036 0121     		movs	r1, #1
 1313 0038 FFF7FEFF 		bl	USBUART_Start
 277:.\main.c      ****         if (USBUART_GetConfiguration())
 1314              		.loc 1 277 0
 1315 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1316 0040 0346     		mov	r3, r0
 1317 0042 002B     		cmp	r3, #0
 1318 0044 01D0     		beq	.L36
 278:.\main.c      ****             {
 279:.\main.c      ****                  USBUART_CDC_Init();
 1319              		.loc 1 279 0
 1320 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1321              	.L36:
 280:.\main.c      ****             }
 281:.\main.c      ****     }
 282:.\main.c      ****     
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 30


 283:.\main.c      ****     if(BIN_ENABLED){
 1322              		.loc 1 283 0
 1323 004a A54B     		ldr	r3, .L102+16
 1324 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 004e 002B     		cmp	r3, #0
 1326 0050 01D0     		beq	.L37
 284:.\main.c      ****         changeToRF();
 1327              		.loc 1 284 0
 1328 0052 FFF7FEFF 		bl	changeToRF
 1329              	.L37:
 285:.\main.c      ****     }
 286:.\main.c      ****     
 287:.\main.c      ****     if(BT_ENABLED){
 1330              		.loc 1 287 0
 1331 0056 A34B     		ldr	r3, .L102+20
 1332 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 005a 002B     		cmp	r3, #0
 1334 005c 01D0     		beq	.L38
 288:.\main.c      ****         changeToBT();
 1335              		.loc 1 288 0
 1336 005e FFF7FEFF 		bl	changeToBT
 1337              	.L38:
 289:.\main.c      ****     }
 290:.\main.c      ****     
 291:.\main.c      ****     uint16 actionDebounce = 0;
 1338              		.loc 1 291 0
 1339 0062 0023     		movs	r3, #0
 1340 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1341              	.L98:
 1342              	.LBB2:
 292:.\main.c      ****     
 293:.\main.c      ****     //usbPutString("Started");
 294:.\main.c      ****     for(;;)
 295:.\main.c      ****     {
 296:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 297:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1343              		.loc 1 297 0
 1344 0066 FFF7FEFF 		bl	Quad_Dec_response
 298:.\main.c      ****         if(BIN_ENABLED == 1)
 1345              		.loc 1 298 0
 1346 006a 9D4B     		ldr	r3, .L102+16
 1347 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 006e 012B     		cmp	r3, #1
 1349 0070 03D1     		bne	.L39
 299:.\main.c      ****         {
 300:.\main.c      ****             handle_rx_binary();
 1350              		.loc 1 300 0
 1351 0072 FFF7FEFF 		bl	handle_rx_binary
 301:.\main.c      ****             print_RF();
 1352              		.loc 1 301 0
 1353 0076 FFF7FEFF 		bl	print_RF
 1354              	.L39:
 302:.\main.c      ****         }
 303:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 304:.\main.c      ****         
 305:.\main.c      ****         uint8 frontSensors[5];
 306:.\main.c      ****         readFrontSensors(frontSensors);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 31


 1355              		.loc 1 306 0
 1356 007a 07F13403 		add	r3, r7, #52
 1357 007e 1846     		mov	r0, r3
 1358 0080 FFF7FEFF 		bl	readFrontSensors
 307:.\main.c      ****         
 308:.\main.c      ****         switch(track_mode)
 1359              		.loc 1 308 0
 1360 0084 984B     		ldr	r3, .L102+24
 1361 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 0088 072B     		cmp	r3, #7
 1363 008a 00F21183 		bhi	.L40
 1364 008e 01A2     		adr	r2, .L42
 1365 0090 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1366              		.p2align 2
 1367              	.L42:
 1368 0094 B1060000 		.word	.L40+1
 1369 0098 B1060000 		.word	.L40+1
 1370 009c B1060000 		.word	.L40+1
 1371 00a0 B5000000 		.word	.L45+1
 1372 00a4 B1060000 		.word	.L40+1
 1373 00a8 F9000000 		.word	.L47+1
 1374 00ac 1F010000 		.word	.L48+1
 1375 00b0 1F010000 		.word	.L48+1
 1376              		.p2align 1
 1377              	.L45:
 309:.\main.c      ****         {
 310:.\main.c      ****             case SQUARE_TRACK:
 311:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1378              		.loc 1 311 0
 1379 00b4 8D4B     		ldr	r3, .L102+28
 1380 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 00b8 012B     		cmp	r3, #1
 1382 00ba 1CD0     		beq	.L49
 1383              		.loc 1 311 0 is_stmt 0 discriminator 1
 1384 00bc 8B4B     		ldr	r3, .L102+28
 1385 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 00c0 022B     		cmp	r3, #2
 1387 00c2 18D0     		beq	.L49
 312:.\main.c      ****                 {
 313:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1388              		.loc 1 313 0 is_stmt 1
 1389 00c4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1390 00c8 012B     		cmp	r3, #1
 1391 00ca 06D1     		bne	.L50
 1392              		.loc 1 313 0 is_stmt 0 discriminator 1
 1393 00cc 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1394 00d0 012B     		cmp	r3, #1
 1395 00d2 02D1     		bne	.L50
 314:.\main.c      ****                         initTurnLeft();
 1396              		.loc 1 314 0 is_stmt 1
 1397 00d4 FFF7FEFF 		bl	initTurnLeft
 1398 00d8 0DE0     		b	.L49
 1399              	.L50:
 315:.\main.c      ****                     }
 316:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1400              		.loc 1 316 0
 1401 00da 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 32


 1402 00de 012B     		cmp	r3, #1
 1403 00e0 06D1     		bne	.L51
 1404              		.loc 1 316 0 is_stmt 0 discriminator 1
 1405 00e2 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1406 00e6 012B     		cmp	r3, #1
 1407 00e8 02D1     		bne	.L51
 317:.\main.c      ****                     {
 318:.\main.c      ****                         initTurnRight();
 1408              		.loc 1 318 0 is_stmt 1
 1409 00ea FFF7FEFF 		bl	initTurnRight
 1410 00ee 02E0     		b	.L49
 1411              	.L51:
 319:.\main.c      ****                     }
 320:.\main.c      ****                     else inittrackLineZ();
 1412              		.loc 1 320 0
 1413 00f0 FFF7FEFF 		bl	inittrackLineZ
 321:.\main.c      ****                 }
 322:.\main.c      ****             break;
 1414              		.loc 1 322 0
 1415 00f4 DCE2     		b	.L40
 1416              	.L49:
 1417 00f6 DBE2     		b	.L40
 1418              	.L47:
 323:.\main.c      ****             case NO_TRACK:
 324:.\main.c      ****             break;
 325:.\main.c      ****             case CURVE_TRACK:
 326:.\main.c      ****             break;
 327:.\main.c      ****             case U_TRACK:
 328:.\main.c      ****             break;
 329:.\main.c      ****             case QUAD_STOP:
 330:.\main.c      ****             break;
 331:.\main.c      ****             case RF_STOP:
 332:.\main.c      ****                 if(initial_pos_valid == 1)
 1419              		.loc 1 332 0
 1420 00f8 7D4B     		ldr	r3, .L102+32
 1421 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 00fc 012B     		cmp	r3, #1
 1423 00fe 0DD1     		bne	.L52
 333:.\main.c      ****                 {
 334:.\main.c      ****                     //changeToBT();
 335:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 336:.\main.c      ****                     //changeToRF();
 337:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1424              		.loc 1 337 0
 1425 0100 7C4B     		ldr	r3, .L102+36
 1426 0102 5A88     		ldrh	r2, [r3, #2]
 1427 0104 7C4B     		ldr	r3, .L102+40
 1428 0106 1A80     		strh	r2, [r3]	@ movhi
 338:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1429              		.loc 1 338 0
 1430 0108 7A4B     		ldr	r3, .L102+36
 1431 010a 9A88     		ldrh	r2, [r3, #4]
 1432 010c 7B4B     		ldr	r3, .L102+44
 1433 010e 1A80     		strh	r2, [r3]	@ movhi
 339:.\main.c      ****                     initial_pos_valid = 2;
 1434              		.loc 1 339 0
 1435 0110 774B     		ldr	r3, .L102+32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 33


 1436 0112 0222     		movs	r2, #2
 1437 0114 1A70     		strb	r2, [r3]
 340:.\main.c      ****                     initForward();
 1438              		.loc 1 340 0
 1439 0116 FFF7FEFF 		bl	initForward
 341:.\main.c      ****                 }
 342:.\main.c      ****             break;
 1440              		.loc 1 342 0
 1441 011a C9E2     		b	.L40
 1442              	.L52:
 1443 011c C8E2     		b	.L40
 1444              	.L48:
 343:.\main.c      ****             case MAP_TRAVERSE:
 344:.\main.c      ****             case DEST_TEST:
 345:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1445              		.loc 1 345 0
 1446 011e 734B     		ldr	r3, .L102+28
 1447 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0122 012B     		cmp	r3, #1
 1449 0124 00F0C382 		beq	.L53
 1450              		.loc 1 345 0 is_stmt 0 discriminator 1
 1451 0128 704B     		ldr	r3, .L102+28
 1452 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 012c 022B     		cmp	r3, #2
 1454 012e 00F0BE82 		beq	.L53
 1455              		.loc 1 345 0 discriminator 2
 1456 0132 6E4B     		ldr	r3, .L102+28
 1457 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 0136 072B     		cmp	r3, #7
 1459 0138 00F0B982 		beq	.L53
 1460              	.LBB3:
 346:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 347:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1461              		.loc 1 347 0 is_stmt 1
 1462 013c 704B     		ldr	r3, .L102+48
 1463 013e 1B88     		ldrh	r3, [r3]
 1464 0140 1A46     		mov	r2, r3
 1465 0142 704B     		ldr	r3, .L102+52
 1466 0144 9B5C     		ldrb	r3, [r3, r2]
 1467 0146 87F83D30 		strb	r3, [r7, #61]
 348:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1468              		.loc 1 348 0
 1469 014a 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1470 014e 012B     		cmp	r3, #1
 1471 0150 03D1     		bne	.L54
 1472              		.loc 1 348 0 is_stmt 0 discriminator 1
 1473 0152 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1474 0156 012B     		cmp	r3, #1
 1475 0158 09D0     		beq	.L55
 1476              	.L54:
 1477              		.loc 1 348 0 discriminator 3
 1478 015a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1479 015e 012B     		cmp	r3, #1
 1480 0160 40F00E81 		bne	.L56
 1481              		.loc 1 348 0 discriminator 4
 1482 0164 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1483 0168 012B     		cmp	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 34


 1484 016a 40F00981 		bne	.L56
 1485              	.L55:
 349:.\main.c      ****                         if(sensorsDisabled == 0)
 1486              		.loc 1 349 0 is_stmt 1
 1487 016e 664B     		ldr	r3, .L102+56
 1488 0170 1B68     		ldr	r3, [r3]
 1489 0172 002B     		cmp	r3, #0
 1490 0174 40F00381 		bne	.L57
 350:.\main.c      ****                         {
 351:.\main.c      ****                             actionDebounce++;
 1491              		.loc 1 351 0
 1492 0178 FB8F     		ldrh	r3, [r7, #62]
 1493 017a 0133     		adds	r3, r3, #1
 1494 017c FB87     		strh	r3, [r7, #62]	@ movhi
 352:.\main.c      ****                             if(actionDebounce >= 500)
 1495              		.loc 1 352 0
 1496 017e FB8F     		ldrh	r3, [r7, #62]
 1497 0180 B3F5FA7F 		cmp	r3, #500
 1498 0184 C0F0FB80 		bcc	.L57
 1499              	.LBB4:
 353:.\main.c      ****                             {
 354:.\main.c      ****                                 char mes[16];
 355:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1500              		.loc 1 355 0
 1501 0188 604B     		ldr	r3, .L102+60
 1502 018a 1B88     		ldrh	r3, [r3]
 1503 018c 1BB2     		sxth	r3, r3
 1504 018e 07F12402 		add	r2, r7, #36
 1505 0192 1046     		mov	r0, r2
 1506 0194 5E49     		ldr	r1, .L102+64
 1507 0196 1A46     		mov	r2, r3
 1508 0198 FFF7FEFF 		bl	sprintf
 356:.\main.c      ****                                  UART_PutString(mes);
 1509              		.loc 1 356 0
 1510 019c 07F12403 		add	r3, r7, #36
 1511 01a0 1846     		mov	r0, r3
 1512 01a2 FFF7FEFF 		bl	UART_PutString
 357:.\main.c      ****                             if(reached_target == 1)
 1513              		.loc 1 357 0
 1514 01a6 5B4B     		ldr	r3, .L102+68
 1515 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 01aa 012B     		cmp	r3, #1
 1517 01ac 40F0E780 		bne	.L57
 1518              	.LBB5:
 358:.\main.c      ****                             {
 359:.\main.c      ****                                 if(nextStep == 'D')
 1519              		.loc 1 359 0
 1520 01b0 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1521 01b4 442B     		cmp	r3, #68
 1522 01b6 0CD1     		bne	.L59
 360:.\main.c      ****                                 {
 361:.\main.c      ****                                     instructionCount += 2;
 1523              		.loc 1 361 0
 1524 01b8 514B     		ldr	r3, .L102+48
 1525 01ba 1B88     		ldrh	r3, [r3]
 1526 01bc 0233     		adds	r3, r3, #2
 1527 01be 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 35


 1528 01c0 4F4B     		ldr	r3, .L102+48
 1529 01c2 1A80     		strh	r2, [r3]	@ movhi
 362:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1530              		.loc 1 362 0
 1531 01c4 4E4B     		ldr	r3, .L102+48
 1532 01c6 1B88     		ldrh	r3, [r3]
 1533 01c8 1A46     		mov	r2, r3
 1534 01ca 4E4B     		ldr	r3, .L102+52
 1535 01cc 9B5C     		ldrb	r3, [r3, r2]
 1536 01ce 87F83D30 		strb	r3, [r7, #61]
 1537              	.L59:
 363:.\main.c      ****                                 }
 364:.\main.c      ****                                 
 365:.\main.c      ****                                 sensorsDisabled = 1;
 1538              		.loc 1 365 0
 1539 01d2 4D4B     		ldr	r3, .L102+56
 1540 01d4 0122     		movs	r2, #1
 1541 01d6 1A60     		str	r2, [r3]
 366:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1542              		.loc 1 366 0
 1543 01d8 4F48     		ldr	r0, .L102+72
 1544 01da FFF7FEFF 		bl	UART_PutString
 367:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1545              		.loc 1 367 0
 1546 01de 4F48     		ldr	r0, .L102+76
 1547 01e0 FFF7FEFF 		bl	UART_PutString
 368:.\main.c      ****                                 deadzone = 1;
 1548              		.loc 1 368 0
 1549 01e4 4E4B     		ldr	r3, .L102+80
 1550 01e6 0122     		movs	r2, #1
 1551 01e8 1A70     		strb	r2, [r3]
 369:.\main.c      ****                                 
 370:.\main.c      ****                                 accum_dist = 0;
 1552              		.loc 1 370 0
 1553 01ea 484B     		ldr	r3, .L102+60
 1554 01ec 0022     		movs	r2, #0
 1555 01ee 1A80     		strh	r2, [r3]	@ movhi
 371:.\main.c      ****                                 uint8 nextStepDist;
 372:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1556              		.loc 1 372 0
 1557 01f0 434B     		ldr	r3, .L102+48
 1558 01f2 1B88     		ldrh	r3, [r3]
 1559 01f4 1A46     		mov	r2, r3
 1560 01f6 4B4B     		ldr	r3, .L102+84
 1561 01f8 1B88     		ldrh	r3, [r3]
 1562 01fa 053B     		subs	r3, r3, #5
 1563 01fc 9A42     		cmp	r2, r3
 1564 01fe 07DC     		bgt	.L60
 1565              		.loc 1 372 0 is_stmt 0 discriminator 1
 1566 0200 3F4B     		ldr	r3, .L102+48
 1567 0202 1B88     		ldrh	r3, [r3]
 1568 0204 0333     		adds	r3, r3, #3
 1569 0206 3F4A     		ldr	r2, .L102+52
 1570 0208 D35C     		ldrb	r3, [r2, r3]
 1571 020a 87F83C30 		strb	r3, [r7, #60]
 1572 020e 02E0     		b	.L61
 1573              	.L60:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 36


 373:.\main.c      ****                                 else nextStepDist = 0;
 1574              		.loc 1 373 0 is_stmt 1
 1575 0210 0023     		movs	r3, #0
 1576 0212 87F83C30 		strb	r3, [r7, #60]
 1577              	.L61:
 374:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-1);
 1578              		.loc 1 374 0
 1579 0216 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1580 021a 013B     		subs	r3, r3, #1
 1581 021c 9BB2     		uxth	r3, r3
 1582 021e 1A46     		mov	r2, r3	@ movhi
 1583 0220 D200     		lsls	r2, r2, #3
 1584 0222 1A44     		add	r2, r2, r3
 1585 0224 1201     		lsls	r2, r2, #4
 1586 0226 1344     		add	r3, r3, r2
 1587 0228 9BB2     		uxth	r3, r3
 1588 022a 9AB2     		uxth	r2, r3
 1589 022c 3E4B     		ldr	r3, .L102+88
 1590 022e 1A80     		strh	r2, [r3]	@ movhi
 375:.\main.c      ****                                 
 376:.\main.c      ****                                 
 377:.\main.c      ****                                 
 378:.\main.c      ****                                 switch(nextStep)
 1591              		.loc 1 378 0
 1592 0230 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1593 0234 4C3B     		subs	r3, r3, #76
 1594 0236 092B     		cmp	r3, #9
 1595 0238 7AD8     		bhi	.L99
 1596 023a 01A2     		adr	r2, .L64
 1597 023c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1598              		.p2align 2
 1599              	.L64:
 1600 0240 77020000 		.word	.L63+1
 1601 0244 31030000 		.word	.L99+1
 1602 0248 31030000 		.word	.L99+1
 1603 024c 31030000 		.word	.L99+1
 1604 0250 31030000 		.word	.L99+1
 1605 0254 31030000 		.word	.L99+1
 1606 0258 95020000 		.word	.L65+1
 1607 025c 69020000 		.word	.L66+1
 1608 0260 31030000 		.word	.L99+1
 1609 0264 B3020000 		.word	.L67+1
 1610              		.p2align 1
 1611              	.L66:
 379:.\main.c      ****                                 {
 380:.\main.c      ****                                     case 'S':
 381:.\main.c      ****                                         inittrackLineZ();
 1612              		.loc 1 381 0
 1613 0268 FFF7FEFF 		bl	inittrackLineZ
 382:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1614              		.loc 1 382 0
 1615 026c 42F21070 		movw	r0, #10000
 1616 0270 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 383:.\main.c      ****                                         //do nothing
 384:.\main.c      ****                                     break;
 1617              		.loc 1 384 0
 1618 0274 5DE0     		b	.L68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 37


 1619              	.L63:
 385:.\main.c      ****                                     case 'L':
 386:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 387:.\main.c      ****                                         initTurnLeft();
 1620              		.loc 1 387 0
 1621 0276 FFF7FEFF 		bl	initTurnLeft
 388:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1622              		.loc 1 388 0
 1623 027a 4CF25030 		movw	r0, #50000
 1624 027e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 389:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1625              		.loc 1 389 0
 1626 0282 294B     		ldr	r3, .L102+88
 1627 0284 1B88     		ldrh	r3, [r3]
 1628 0286 9BB2     		uxth	r3, r3
 1629 0288 323B     		subs	r3, r3, #50
 1630 028a 9BB2     		uxth	r3, r3
 1631 028c 9AB2     		uxth	r2, r3
 1632 028e 264B     		ldr	r3, .L102+88
 1633 0290 1A80     		strh	r2, [r3]	@ movhi
 390:.\main.c      ****                                     break;
 1634              		.loc 1 390 0
 1635 0292 4EE0     		b	.L68
 1636              	.L65:
 391:.\main.c      ****                                     case 'R':
 392:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 393:.\main.c      ****                                         initTurnRight();
 1637              		.loc 1 393 0
 1638 0294 FFF7FEFF 		bl	initTurnRight
 394:.\main.c      ****                                         target_distance_quad += (208 - TURN_OFFSET);
 1639              		.loc 1 394 0
 1640 0298 234B     		ldr	r3, .L102+88
 1641 029a 1B88     		ldrh	r3, [r3]
 1642 029c 9BB2     		uxth	r3, r3
 1643 029e 9E33     		adds	r3, r3, #158
 1644 02a0 9BB2     		uxth	r3, r3
 1645 02a2 9AB2     		uxth	r2, r3
 1646 02a4 204B     		ldr	r3, .L102+88
 1647 02a6 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1648              		.loc 1 395 0
 1649 02a8 4CF25030 		movw	r0, #50000
 1650 02ac FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 396:.\main.c      ****                                     break;
 1651              		.loc 1 396 0
 1652 02b0 3FE0     		b	.L68
 1653              	.L67:
 397:.\main.c      ****                                     case 'U':
 398:.\main.c      ****                                         // Direction not tracked any more
 399:.\main.c      ****                                         initTurnU();
 1654              		.loc 1 399 0
 1655 02b2 FFF7FEFF 		bl	initTurnU
 400:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1656              		.loc 1 400 0
 1657 02b6 1D48     		ldr	r0, .L102+92
 1658 02b8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 401:.\main.c      ****                                         target_distance_quad += 208;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 38


 1659              		.loc 1 401 0
 1660 02bc 1A4B     		ldr	r3, .L102+88
 1661 02be 1B88     		ldrh	r3, [r3]
 1662 02c0 9BB2     		uxth	r3, r3
 1663 02c2 D033     		adds	r3, r3, #208
 1664 02c4 9BB2     		uxth	r3, r3
 1665 02c6 9AB2     		uxth	r2, r3
 1666 02c8 174B     		ldr	r3, .L102+88
 1667 02ca 1A80     		strh	r2, [r3]	@ movhi
 402:.\main.c      ****                                     break;
 1668              		.loc 1 402 0
 1669 02cc 31E0     		b	.L68
 1670              	.L103:
 1671 02ce 00BF     		.align	2
 1672              	.L102:
 1673 02d0 00000000 		.word	isr_quad1
 1674 02d4 00000000 		.word	isr_turn_timer
 1675 02d8 00000000 		.word	button
 1676 02dc 00000000 		.word	isr_deadzone
 1677 02e0 00000000 		.word	BIN_ENABLED
 1678 02e4 00000000 		.word	BT_ENABLED
 1679 02e8 00000000 		.word	track_mode
 1680 02ec 00000000 		.word	movement_state
 1681 02f0 00000000 		.word	initial_pos_valid
 1682 02f4 00000000 		.word	system_state
 1683 02f8 00000000 		.word	initial_x_pos
 1684 02fc 00000000 		.word	initial_y_pos
 1685 0300 00000000 		.word	instructionCount
 1686 0304 00000000 		.word	instructions
 1687 0308 00000000 		.word	sensorsDisabled
 1688 030c 00000000 		.word	accum_dist
 1689 0310 24000000 		.word	.LC2
 1690 0314 00000000 		.word	reached_target
 1691 0318 38000000 		.word	.LC3
 1692 031c 58000000 		.word	.LC4
 1693 0320 00000000 		.word	deadzone
 1694 0324 00000000 		.word	instructionLength
 1695 0328 00000000 		.word	target_distance_quad
 1696 032c 905F0100 		.word	90000
 1697              	.L99:
 403:.\main.c      ****                                     
 404:.\main.c      ****                                     default:
 405:.\main.c      ****                                         //do nothing
 406:.\main.c      ****                                         break;
 1698              		.loc 1 406 0
 1699 0330 00BF     		nop
 1700              	.L68:
 407:.\main.c      ****                                 }
 408:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1701              		.loc 1 408 0
 1702 0332 B14B     		ldr	r3, .L104
 1703 0334 1B88     		ldrh	r3, [r3]
 1704 0336 1BB2     		sxth	r3, r3
 1705 0338 07F12402 		add	r2, r7, #36
 1706 033c 1046     		mov	r0, r2
 1707 033e AF49     		ldr	r1, .L104+4
 1708 0340 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 39


 1709 0342 FFF7FEFF 		bl	sprintf
 409:.\main.c      ****                                  UART_PutString(mes);
 1710              		.loc 1 409 0
 1711 0346 07F12403 		add	r3, r7, #36
 1712 034a 1846     		mov	r0, r3
 1713 034c FFF7FEFF 		bl	UART_PutString
 410:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1714              		.loc 1 410 0
 1715 0350 A94B     		ldr	r3, .L104
 1716 0352 1B88     		ldrh	r3, [r3]
 1717 0354 1BB2     		sxth	r3, r3
 1718 0356 002B     		cmp	r3, #0
 1719 0358 02DA     		bge	.L69
 1720              		.loc 1 410 0 is_stmt 0 discriminator 1
 1721 035a A74B     		ldr	r3, .L104
 1722 035c 0022     		movs	r2, #0
 1723 035e 1A80     		strh	r2, [r3]	@ movhi
 1724              	.L69:
 411:.\main.c      ****                                 Timer_Deadzone_Start();
 1725              		.loc 1 411 0 is_stmt 1
 1726 0360 FFF7FEFF 		bl	Timer_Deadzone_Start
 412:.\main.c      ****                                 reached_target = 0;
 1727              		.loc 1 412 0
 1728 0364 A64B     		ldr	r3, .L104+8
 1729 0366 0022     		movs	r2, #0
 1730 0368 1A70     		strb	r2, [r3]
 413:.\main.c      ****                                 overshot_target = 0;
 1731              		.loc 1 413 0
 1732 036a A64B     		ldr	r3, .L104+12
 1733 036c 0022     		movs	r2, #0
 1734 036e 1A70     		strb	r2, [r3]
 414:.\main.c      ****                                 instructionCount += 2;
 1735              		.loc 1 414 0
 1736 0370 A54B     		ldr	r3, .L104+16
 1737 0372 1B88     		ldrh	r3, [r3]
 1738 0374 0233     		adds	r3, r3, #2
 1739 0376 9AB2     		uxth	r2, r3
 1740 0378 A34B     		ldr	r3, .L104+16
 1741 037a 1A80     		strh	r2, [r3]	@ movhi
 1742              	.LBE5:
 1743              	.LBE4:
 349:.\main.c      ****                         {
 1744              		.loc 1 349 0
 1745 037c 97E1     		b	.L53
 1746              	.L57:
 349:.\main.c      ****                         {
 1747              		.loc 1 349 0 is_stmt 0 discriminator 1
 1748 037e 96E1     		b	.L53
 1749              	.L56:
 415:.\main.c      ****                             }
 416:.\main.c      ****                             }
 417:.\main.c      ****                         }
 418:.\main.c      ****                     }
 419:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1750              		.loc 1 419 0 is_stmt 1
 1751 0380 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1752 0384 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 40


 1753 0386 40F0B380 		bne	.L70
 1754              		.loc 1 419 0 is_stmt 0 discriminator 1
 1755 038a 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1756 038e 002B     		cmp	r3, #0
 1757 0390 40F0AE80 		bne	.L70
 1758              		.loc 1 419 0 discriminator 2
 1759 0394 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1760 0398 002B     		cmp	r3, #0
 1761 039a 40F0A980 		bne	.L70
 1762              		.loc 1 419 0 discriminator 3
 1763 039e 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1764 03a2 002B     		cmp	r3, #0
 1765 03a4 40F0A480 		bne	.L70
 1766              		.loc 1 419 0 discriminator 4
 1767 03a8 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1768 03ac 002B     		cmp	r3, #0
 1769 03ae 40F09F80 		bne	.L70
 1770              		.loc 1 419 0 discriminator 5
 1771 03b2 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1772 03b6 552B     		cmp	r3, #85
 1773 03b8 04D0     		beq	.L71
 1774              		.loc 1 419 0 discriminator 6
 1775 03ba 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1776 03be 442B     		cmp	r3, #68
 1777 03c0 40F09680 		bne	.L70
 1778              	.L71:
 420:.\main.c      ****                     {
 421:.\main.c      ****                         if(sensorsDisabled == 0)
 1779              		.loc 1 421 0 is_stmt 1
 1780 03c4 914B     		ldr	r3, .L104+20
 1781 03c6 1B68     		ldr	r3, [r3]
 1782 03c8 002B     		cmp	r3, #0
 1783 03ca 40F09080 		bne	.L72
 422:.\main.c      ****                         {
 423:.\main.c      ****                                 if(nextStep == 'D')
 1784              		.loc 1 423 0
 1785 03ce 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1786 03d2 442B     		cmp	r3, #68
 1787 03d4 17D1     		bne	.L73
 1788              	.LBB6:
 424:.\main.c      ****                                 {
 425:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1789              		.loc 1 425 0
 1790 03d6 8C4B     		ldr	r3, .L104+16
 1791 03d8 1B88     		ldrh	r3, [r3]
 1792 03da 0233     		adds	r3, r3, #2
 1793 03dc 8C4A     		ldr	r2, .L104+24
 1794 03de D35C     		ldrb	r3, [r2, r3]
 1795 03e0 87F83930 		strb	r3, [r7, #57]
 426:.\main.c      ****                                     if(nextInstruction == 'U')
 1796              		.loc 1 426 0
 1797 03e4 97F83930 		ldrb	r3, [r7, #57]	@ zero_extendqisi2
 1798 03e8 552B     		cmp	r3, #85
 1799 03ea 0CD1     		bne	.L73
 427:.\main.c      ****                                     {
 428:.\main.c      ****                                         instructionCount += 2;
 1800              		.loc 1 428 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 41


 1801 03ec 864B     		ldr	r3, .L104+16
 1802 03ee 1B88     		ldrh	r3, [r3]
 1803 03f0 0233     		adds	r3, r3, #2
 1804 03f2 9AB2     		uxth	r2, r3
 1805 03f4 844B     		ldr	r3, .L104+16
 1806 03f6 1A80     		strh	r2, [r3]	@ movhi
 429:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1807              		.loc 1 429 0
 1808 03f8 834B     		ldr	r3, .L104+16
 1809 03fa 1B88     		ldrh	r3, [r3]
 1810 03fc 1A46     		mov	r2, r3
 1811 03fe 844B     		ldr	r3, .L104+24
 1812 0400 9B5C     		ldrb	r3, [r3, r2]
 1813 0402 87F83D30 		strb	r3, [r7, #61]
 1814              	.L73:
 1815              	.LBE6:
 430:.\main.c      ****                                     }
 431:.\main.c      ****                                 }
 432:.\main.c      ****                                 
 433:.\main.c      ****                                 if(nextStep == 'U')
 1816              		.loc 1 433 0
 1817 0406 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1818 040a 552B     		cmp	r3, #85
 1819 040c 6FD1     		bne	.L72
 434:.\main.c      ****                                 {
 435:.\main.c      ****                                     actionDebounce++;
 1820              		.loc 1 435 0
 1821 040e FB8F     		ldrh	r3, [r7, #62]
 1822 0410 0133     		adds	r3, r3, #1
 1823 0412 FB87     		strh	r3, [r7, #62]	@ movhi
 436:.\main.c      ****                                     if(actionDebounce >= 2600)
 1824              		.loc 1 436 0
 1825 0414 FB8F     		ldrh	r3, [r7, #62]
 1826 0416 40F62722 		movw	r2, #2599
 1827 041a 9342     		cmp	r3, r2
 1828 041c 67D9     		bls	.L72
 437:.\main.c      ****                                     {
 438:.\main.c      ****                                         if(reached_target == 1)
 1829              		.loc 1 438 0
 1830 041e 784B     		ldr	r3, .L104+8
 1831 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1832 0422 012B     		cmp	r3, #1
 1833 0424 63D1     		bne	.L72
 1834              	.LBB7:
 439:.\main.c      ****                                         {
 440:.\main.c      ****                                     char mes[16];
 441:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1835              		.loc 1 441 0
 1836 0426 7B4B     		ldr	r3, .L104+28
 1837 0428 1B88     		ldrh	r3, [r3]
 1838 042a 1BB2     		sxth	r3, r3
 1839 042c 07F11402 		add	r2, r7, #20
 1840 0430 1046     		mov	r0, r2
 1841 0432 7949     		ldr	r1, .L104+32
 1842 0434 1A46     		mov	r2, r3
 1843 0436 FFF7FEFF 		bl	sprintf
 442:.\main.c      ****                                      UART_PutString(mes);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 42


 1844              		.loc 1 442 0
 1845 043a 07F11403 		add	r3, r7, #20
 1846 043e 1846     		mov	r0, r3
 1847 0440 FFF7FEFF 		bl	UART_PutString
 443:.\main.c      ****                                          accum_dist = 0;
 1848              		.loc 1 443 0
 1849 0444 734B     		ldr	r3, .L104+28
 1850 0446 0022     		movs	r2, #0
 1851 0448 1A80     		strh	r2, [r3]	@ movhi
 444:.\main.c      ****                                     uint8 nextStepDist;
 445:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 1852              		.loc 1 445 0
 1853 044a 6F4B     		ldr	r3, .L104+16
 1854 044c 1B88     		ldrh	r3, [r3]
 1855 044e 1A46     		mov	r2, r3
 1856 0450 724B     		ldr	r3, .L104+36
 1857 0452 1B88     		ldrh	r3, [r3]
 1858 0454 053B     		subs	r3, r3, #5
 1859 0456 9A42     		cmp	r2, r3
 1860 0458 07DC     		bgt	.L74
 1861              		.loc 1 445 0 is_stmt 0 discriminator 1
 1862 045a 6B4B     		ldr	r3, .L104+16
 1863 045c 1B88     		ldrh	r3, [r3]
 1864 045e 0333     		adds	r3, r3, #3
 1865 0460 6B4A     		ldr	r2, .L104+24
 1866 0462 D35C     		ldrb	r3, [r2, r3]
 1867 0464 87F83B30 		strb	r3, [r7, #59]
 1868 0468 02E0     		b	.L75
 1869              	.L74:
 446:.\main.c      ****                                     else nextStepDist = 0;
 1870              		.loc 1 446 0 is_stmt 1
 1871 046a 0023     		movs	r3, #0
 1872 046c 87F83B30 		strb	r3, [r7, #59]
 1873              	.L75:
 447:.\main.c      ****                                     
 448:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-1);
 1874              		.loc 1 448 0
 1875 0470 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1876 0474 013B     		subs	r3, r3, #1
 1877 0476 9BB2     		uxth	r3, r3
 1878 0478 1A46     		mov	r2, r3	@ movhi
 1879 047a D200     		lsls	r2, r2, #3
 1880 047c 1A44     		add	r2, r2, r3
 1881 047e 1201     		lsls	r2, r2, #4
 1882 0480 1344     		add	r3, r3, r2
 1883 0482 9BB2     		uxth	r3, r3
 1884 0484 9AB2     		uxth	r2, r3
 1885 0486 5C4B     		ldr	r3, .L104
 1886 0488 1A80     		strh	r2, [r3]	@ movhi
 449:.\main.c      ****                                     target_distance_quad += 208;
 1887              		.loc 1 449 0
 1888 048a 5B4B     		ldr	r3, .L104
 1889 048c 1B88     		ldrh	r3, [r3]
 1890 048e 9BB2     		uxth	r3, r3
 1891 0490 D033     		adds	r3, r3, #208
 1892 0492 9BB2     		uxth	r3, r3
 1893 0494 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 43


 1894 0496 584B     		ldr	r3, .L104
 1895 0498 1A80     		strh	r2, [r3]	@ movhi
 450:.\main.c      ****                                     
 451:.\main.c      ****                                         UART_PutString("Triggered at white light \r\n");
 1896              		.loc 1 451 0
 1897 049a 6148     		ldr	r0, .L104+40
 1898 049c FFF7FEFF 		bl	UART_PutString
 452:.\main.c      ****                                         UART_PutString("Deadzone entered!\r\n");
 1899              		.loc 1 452 0
 1900 04a0 6048     		ldr	r0, .L104+44
 1901 04a2 FFF7FEFF 		bl	UART_PutString
 453:.\main.c      ****                                         deadzone = 1;
 1902              		.loc 1 453 0
 1903 04a6 604B     		ldr	r3, .L104+48
 1904 04a8 0122     		movs	r2, #1
 1905 04aa 1A70     		strb	r2, [r3]
 454:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1906              		.loc 1 454 0
 1907 04ac 5F48     		ldr	r0, .L104+52
 1908 04ae FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 455:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 1909              		.loc 1 455 0
 1910 04b2 514B     		ldr	r3, .L104
 1911 04b4 1B88     		ldrh	r3, [r3]
 1912 04b6 1BB2     		sxth	r3, r3
 1913 04b8 002B     		cmp	r3, #0
 1914 04ba 02DA     		bge	.L76
 1915              		.loc 1 455 0 is_stmt 0 discriminator 1
 1916 04bc 4E4B     		ldr	r3, .L104
 1917 04be 0022     		movs	r2, #0
 1918 04c0 1A80     		strh	r2, [r3]	@ movhi
 1919              	.L76:
 456:.\main.c      ****                                         Timer_Deadzone_Start();
 1920              		.loc 1 456 0 is_stmt 1
 1921 04c2 FFF7FEFF 		bl	Timer_Deadzone_Start
 457:.\main.c      ****                                         actionDebounce = 0;
 1922              		.loc 1 457 0
 1923 04c6 0023     		movs	r3, #0
 1924 04c8 FB87     		strh	r3, [r7, #62]	@ movhi
 458:.\main.c      ****                                         sensorsDisabled = 1;
 1925              		.loc 1 458 0
 1926 04ca 504B     		ldr	r3, .L104+20
 1927 04cc 0122     		movs	r2, #1
 1928 04ce 1A60     		str	r2, [r3]
 459:.\main.c      ****                                         initTurnU();
 1929              		.loc 1 459 0
 1930 04d0 FFF7FEFF 		bl	initTurnU
 460:.\main.c      ****                                         reached_target = 0;
 1931              		.loc 1 460 0
 1932 04d4 4A4B     		ldr	r3, .L104+8
 1933 04d6 0022     		movs	r2, #0
 1934 04d8 1A70     		strb	r2, [r3]
 461:.\main.c      ****                                         overshot_target = 0;
 1935              		.loc 1 461 0
 1936 04da 4A4B     		ldr	r3, .L104+12
 1937 04dc 0022     		movs	r2, #0
 1938 04de 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 44


 462:.\main.c      ****                                         instructionCount += 2;
 1939              		.loc 1 462 0
 1940 04e0 494B     		ldr	r3, .L104+16
 1941 04e2 1B88     		ldrh	r3, [r3]
 1942 04e4 0233     		adds	r3, r3, #2
 1943 04e6 9AB2     		uxth	r2, r3
 1944 04e8 474B     		ldr	r3, .L104+16
 1945 04ea 1A80     		strh	r2, [r3]	@ movhi
 1946              	.LBE7:
 421:.\main.c      ****                         {
 1947              		.loc 1 421 0
 1948 04ec DFE0     		b	.L53
 1949              	.L72:
 421:.\main.c      ****                         {
 1950              		.loc 1 421 0 is_stmt 0 discriminator 3
 1951 04ee DEE0     		b	.L53
 1952              	.L70:
 463:.\main.c      ****                                 }
 464:.\main.c      ****                                 }
 465:.\main.c      ****                             }
 466:.\main.c      ****                         }
 467:.\main.c      ****                     }
 468:.\main.c      ****                     else if (overshot_target == 1 && nextStep == 'D')
 1953              		.loc 1 468 0 is_stmt 1
 1954 04f0 444B     		ldr	r3, .L104+12
 1955 04f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 04f4 012B     		cmp	r3, #1
 1957 04f6 40F0D580 		bne	.L77
 1958              		.loc 1 468 0 is_stmt 0 discriminator 1
 1959 04fa 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1960 04fe 442B     		cmp	r3, #68
 1961 0500 40F0D080 		bne	.L77
 1962              	.LBB8:
 469:.\main.c      ****                     {
 470:.\main.c      ****                         
 471:.\main.c      ****                                 instructionCount += 2;
 1963              		.loc 1 471 0 is_stmt 1
 1964 0504 404B     		ldr	r3, .L104+16
 1965 0506 1B88     		ldrh	r3, [r3]
 1966 0508 0233     		adds	r3, r3, #2
 1967 050a 9AB2     		uxth	r2, r3
 1968 050c 3E4B     		ldr	r3, .L104+16
 1969 050e 1A80     		strh	r2, [r3]	@ movhi
 472:.\main.c      ****                                 nextStep = instructions[instructionCount]; 
 1970              		.loc 1 472 0
 1971 0510 3D4B     		ldr	r3, .L104+16
 1972 0512 1B88     		ldrh	r3, [r3]
 1973 0514 1A46     		mov	r2, r3
 1974 0516 3E4B     		ldr	r3, .L104+24
 1975 0518 9B5C     		ldrb	r3, [r3, r2]
 1976 051a 87F83D30 		strb	r3, [r7, #61]
 473:.\main.c      ****                                 char mes[16];
 474:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1977              		.loc 1 474 0
 1978 051e 3D4B     		ldr	r3, .L104+28
 1979 0520 1B88     		ldrh	r3, [r3]
 1980 0522 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 45


 1981 0524 3A1D     		adds	r2, r7, #4
 1982 0526 1046     		mov	r0, r2
 1983 0528 3B49     		ldr	r1, .L104+32
 1984 052a 1A46     		mov	r2, r3
 1985 052c FFF7FEFF 		bl	sprintf
 475:.\main.c      ****                                  UART_PutString(mes);
 1986              		.loc 1 475 0
 1987 0530 3B1D     		adds	r3, r7, #4
 1988 0532 1846     		mov	r0, r3
 1989 0534 FFF7FEFF 		bl	UART_PutString
 476:.\main.c      ****                                  accum_dist = 0;
 1990              		.loc 1 476 0
 1991 0538 364B     		ldr	r3, .L104+28
 1992 053a 0022     		movs	r2, #0
 1993 053c 1A80     		strh	r2, [r3]	@ movhi
 477:.\main.c      ****                                 uint8 nextStepDist;
 478:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1994              		.loc 1 478 0
 1995 053e 324B     		ldr	r3, .L104+16
 1996 0540 1B88     		ldrh	r3, [r3]
 1997 0542 1A46     		mov	r2, r3
 1998 0544 354B     		ldr	r3, .L104+36
 1999 0546 1B88     		ldrh	r3, [r3]
 2000 0548 053B     		subs	r3, r3, #5
 2001 054a 9A42     		cmp	r2, r3
 2002 054c 07DC     		bgt	.L78
 2003              		.loc 1 478 0 is_stmt 0 discriminator 1
 2004 054e 2E4B     		ldr	r3, .L104+16
 2005 0550 1B88     		ldrh	r3, [r3]
 2006 0552 0333     		adds	r3, r3, #3
 2007 0554 2E4A     		ldr	r2, .L104+24
 2008 0556 D35C     		ldrb	r3, [r2, r3]
 2009 0558 87F83A30 		strb	r3, [r7, #58]
 2010 055c 02E0     		b	.L79
 2011              	.L78:
 479:.\main.c      ****                                 else nextStepDist = 0;
 2012              		.loc 1 479 0 is_stmt 1
 2013 055e 0023     		movs	r3, #0
 2014 0560 87F83A30 		strb	r3, [r7, #58]
 2015              	.L79:
 480:.\main.c      ****                                 
 481:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-1);
 2016              		.loc 1 481 0
 2017 0564 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 2018 0568 013B     		subs	r3, r3, #1
 2019 056a 9BB2     		uxth	r3, r3
 2020 056c 1A46     		mov	r2, r3	@ movhi
 2021 056e D200     		lsls	r2, r2, #3
 2022 0570 1A44     		add	r2, r2, r3
 2023 0572 1201     		lsls	r2, r2, #4
 2024 0574 1344     		add	r3, r3, r2
 2025 0576 9BB2     		uxth	r3, r3
 2026 0578 9AB2     		uxth	r2, r3
 2027 057a 1F4B     		ldr	r3, .L104
 2028 057c 1A80     		strh	r2, [r3]	@ movhi
 482:.\main.c      ****                                 
 483:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 46


 2029              		.loc 1 483 0
 2030 057e 2C48     		ldr	r0, .L104+56
 2031 0580 FFF7FEFF 		bl	UART_PutString
 484:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 2032              		.loc 1 484 0
 2033 0584 2748     		ldr	r0, .L104+44
 2034 0586 FFF7FEFF 		bl	UART_PutString
 485:.\main.c      ****                                     
 486:.\main.c      ****                                     
 487:.\main.c      ****                                     actionDebounce = 0;
 2035              		.loc 1 487 0
 2036 058a 0023     		movs	r3, #0
 2037 058c FB87     		strh	r3, [r7, #62]	@ movhi
 488:.\main.c      ****                                     sensorsDisabled = 1;
 2038              		.loc 1 488 0
 2039 058e 1F4B     		ldr	r3, .L104+20
 2040 0590 0122     		movs	r2, #1
 2041 0592 1A60     		str	r2, [r3]
 489:.\main.c      ****                                     
 490:.\main.c      ****                                      switch(nextStep)
 2042              		.loc 1 490 0
 2043 0594 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2044 0598 4C3B     		subs	r3, r3, #76
 2045 059a 092B     		cmp	r3, #9
 2046 059c 67D8     		bhi	.L100
 2047 059e 01A2     		adr	r2, .L82
 2048 05a0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2049              		.p2align 2
 2050              	.L82:
 2051 05a4 DB050000 		.word	.L81+1
 2052 05a8 6F060000 		.word	.L100+1
 2053 05ac 6F060000 		.word	.L100+1
 2054 05b0 6F060000 		.word	.L100+1
 2055 05b4 6F060000 		.word	.L100+1
 2056 05b8 6F060000 		.word	.L100+1
 2057 05bc 35060000 		.word	.L83+1
 2058 05c0 CD050000 		.word	.L84+1
 2059 05c4 6F060000 		.word	.L100+1
 2060 05c8 53060000 		.word	.L85+1
 2061              		.p2align 1
 2062              	.L84:
 491:.\main.c      ****                                 {
 492:.\main.c      ****                                     case 'S':
 493:.\main.c      ****                                         inittrackLineZ();
 2063              		.loc 1 493 0
 2064 05cc FFF7FEFF 		bl	inittrackLineZ
 494:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 2065              		.loc 1 494 0
 2066 05d0 42F21070 		movw	r0, #10000
 2067 05d4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 495:.\main.c      ****                                         //do nothing
 496:.\main.c      ****                                     break;
 2068              		.loc 1 496 0
 2069 05d8 4AE0     		b	.L86
 2070              	.L81:
 497:.\main.c      ****                                     case 'L':
 498:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 47


 499:.\main.c      ****                                         initTurnLeft();
 2071              		.loc 1 499 0
 2072 05da FFF7FEFF 		bl	initTurnLeft
 500:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2073              		.loc 1 500 0
 2074 05de 4CF25030 		movw	r0, #50000
 2075 05e2 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 501:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2076              		.loc 1 501 0
 2077 05e6 044B     		ldr	r3, .L104
 2078 05e8 1B88     		ldrh	r3, [r3]
 2079 05ea 9BB2     		uxth	r3, r3
 2080 05ec 323B     		subs	r3, r3, #50
 2081 05ee 9BB2     		uxth	r3, r3
 2082 05f0 9AB2     		uxth	r2, r3
 2083 05f2 014B     		ldr	r3, .L104
 2084 05f4 1A80     		strh	r2, [r3]	@ movhi
 502:.\main.c      ****                                     break;
 2085              		.loc 1 502 0
 2086 05f6 3BE0     		b	.L86
 2087              	.L105:
 2088              		.align	2
 2089              	.L104:
 2090 05f8 00000000 		.word	target_distance_quad
 2091 05fc 6C000000 		.word	.LC5
 2092 0600 00000000 		.word	reached_target
 2093 0604 00000000 		.word	overshot_target
 2094 0608 00000000 		.word	instructionCount
 2095 060c 00000000 		.word	sensorsDisabled
 2096 0610 00000000 		.word	instructions
 2097 0614 00000000 		.word	accum_dist
 2098 0618 24000000 		.word	.LC2
 2099 061c 00000000 		.word	instructionLength
 2100 0620 80000000 		.word	.LC6
 2101 0624 58000000 		.word	.LC4
 2102 0628 00000000 		.word	deadzone
 2103 062c 905F0100 		.word	90000
 2104 0630 9C000000 		.word	.LC7
 2105              	.L83:
 503:.\main.c      ****                                     case 'R':
 504:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 505:.\main.c      ****                                         initTurnRight();
 2106              		.loc 1 505 0
 2107 0634 FFF7FEFF 		bl	initTurnRight
 506:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2108              		.loc 1 506 0
 2109 0638 4CF25030 		movw	r0, #50000
 2110 063c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 507:.\main.c      ****                                         target_distance_quad += (208 - TURN_OFFSET);
 2111              		.loc 1 507 0
 2112 0640 334B     		ldr	r3, .L106
 2113 0642 1B88     		ldrh	r3, [r3]
 2114 0644 9BB2     		uxth	r3, r3
 2115 0646 9E33     		adds	r3, r3, #158
 2116 0648 9BB2     		uxth	r3, r3
 2117 064a 9AB2     		uxth	r2, r3
 2118 064c 304B     		ldr	r3, .L106
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 48


 2119 064e 1A80     		strh	r2, [r3]	@ movhi
 508:.\main.c      ****                                         
 509:.\main.c      ****                                     break;
 2120              		.loc 1 509 0
 2121 0650 0EE0     		b	.L86
 2122              	.L85:
 510:.\main.c      ****                                     case 'U':
 511:.\main.c      ****                                         // Direction not tracked any more
 512:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2123              		.loc 1 512 0
 2124 0652 3048     		ldr	r0, .L106+4
 2125 0654 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 513:.\main.c      ****                                         initTurnU();
 2126              		.loc 1 513 0
 2127 0658 FFF7FEFF 		bl	initTurnU
 514:.\main.c      ****                                         target_distance_quad += 208;
 2128              		.loc 1 514 0
 2129 065c 2C4B     		ldr	r3, .L106
 2130 065e 1B88     		ldrh	r3, [r3]
 2131 0660 9BB2     		uxth	r3, r3
 2132 0662 D033     		adds	r3, r3, #208
 2133 0664 9BB2     		uxth	r3, r3
 2134 0666 9AB2     		uxth	r2, r3
 2135 0668 294B     		ldr	r3, .L106
 2136 066a 1A80     		strh	r2, [r3]	@ movhi
 515:.\main.c      ****                                     break;
 2137              		.loc 1 515 0
 2138 066c 00E0     		b	.L86
 2139              	.L100:
 516:.\main.c      ****                                     default:
 517:.\main.c      ****                                         //do nothing
 518:.\main.c      ****                                         break;
 2140              		.loc 1 518 0
 2141 066e 00BF     		nop
 2142              	.L86:
 519:.\main.c      ****                                 }
 520:.\main.c      ****                                     
 521:.\main.c      ****                                     reached_target = 0;
 2143              		.loc 1 521 0
 2144 0670 294B     		ldr	r3, .L106+8
 2145 0672 0022     		movs	r2, #0
 2146 0674 1A70     		strb	r2, [r3]
 522:.\main.c      ****                                     overshot_target = 0;
 2147              		.loc 1 522 0
 2148 0676 294B     		ldr	r3, .L106+12
 2149 0678 0022     		movs	r2, #0
 2150 067a 1A70     		strb	r2, [r3]
 523:.\main.c      ****                                     instructionCount += 2;
 2151              		.loc 1 523 0
 2152 067c 284B     		ldr	r3, .L106+16
 2153 067e 1B88     		ldrh	r3, [r3]
 2154 0680 0233     		adds	r3, r3, #2
 2155 0682 9AB2     		uxth	r2, r3
 2156 0684 264B     		ldr	r3, .L106+16
 2157 0686 1A80     		strh	r2, [r3]	@ movhi
 524:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2158              		.loc 1 524 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 49


 2159 0688 214B     		ldr	r3, .L106
 2160 068a 1B88     		ldrh	r3, [r3]
 2161 068c 1BB2     		sxth	r3, r3
 2162 068e 002B     		cmp	r3, #0
 2163 0690 02DA     		bge	.L87
 2164              		.loc 1 524 0 is_stmt 0 discriminator 1
 2165 0692 1F4B     		ldr	r3, .L106
 2166 0694 0022     		movs	r2, #0
 2167 0696 1A80     		strh	r2, [r3]	@ movhi
 2168              	.L87:
 525:.\main.c      ****                                     Timer_Deadzone_Start();
 2169              		.loc 1 525 0 is_stmt 1 discriminator 5
 2170 0698 FFF7FEFF 		bl	Timer_Deadzone_Start
 526:.\main.c      ****                                     deadzone = 1;
 2171              		.loc 1 526 0 discriminator 5
 2172 069c 214B     		ldr	r3, .L106+20
 2173 069e 0122     		movs	r2, #1
 2174 06a0 1A70     		strb	r2, [r3]
 2175              	.LBE8:
 469:.\main.c      ****                         
 2176              		.loc 1 469 0 discriminator 5
 2177 06a2 04E0     		b	.L53
 2178              	.L77:
 527:.\main.c      ****                     }
 528:.\main.c      ****                     else
 529:.\main.c      ****                     {
 530:.\main.c      ****                         inittrackLineZ();
 2179              		.loc 1 530 0
 2180 06a4 FFF7FEFF 		bl	inittrackLineZ
 531:.\main.c      ****                         actionDebounce = 0;
 2181              		.loc 1 531 0
 2182 06a8 0023     		movs	r3, #0
 2183 06aa FB87     		strh	r3, [r7, #62]	@ movhi
 2184              	.LBE3:
 532:.\main.c      ****                     }
 533:.\main.c      ****                 }
 534:.\main.c      ****                 break;
 2185              		.loc 1 534 0
 2186 06ac FFE7     		b	.L101
 2187              	.L53:
 2188              	.L101:
 2189 06ae 00BF     		nop
 2190              	.L40:
 535:.\main.c      ****         }
 536:.\main.c      ****         
 537:.\main.c      ****         switch(movement_state)
 2191              		.loc 1 537 0
 2192 06b0 1D4B     		ldr	r3, .L106+24
 2193 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2194 06b4 072B     		cmp	r3, #7
 2195 06b6 3FF6D6AC 		bhi	.L98
 2196 06ba 01A2     		adr	r2, .L90
 2197 06bc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2198              		.p2align 2
 2199              	.L90:
 2200 06c0 E1060000 		.word	.L89+1
 2201 06c4 E7060000 		.word	.L91+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 50


 2202 06c8 ED060000 		.word	.L92+1
 2203 06cc F9060000 		.word	.L93+1
 2204 06d0 FF060000 		.word	.L94+1
 2205 06d4 05070000 		.word	.L95+1
 2206 06d8 0B070000 		.word	.L96+1
 2207 06dc F3060000 		.word	.L97+1
 2208              		.p2align 1
 2209              	.L89:
 538:.\main.c      ****         {
 539:.\main.c      ****             case DRIVE:
 540:.\main.c      ****                 driveForwards();
 2210              		.loc 1 540 0
 2211 06e0 FFF7FEFF 		bl	driveForwards
 541:.\main.c      ****             break;
 2212              		.loc 1 541 0
 2213 06e4 13E0     		b	.L88
 2214              	.L91:
 542:.\main.c      ****             case LTURN:
 543:.\main.c      ****                 turnLeft();
 2215              		.loc 1 543 0
 2216 06e6 FFF7FEFF 		bl	turnLeft
 544:.\main.c      ****             break;
 2217              		.loc 1 544 0
 2218 06ea 10E0     		b	.L88
 2219              	.L92:
 545:.\main.c      ****             case RTURN:
 546:.\main.c      ****                 turnRight();
 2220              		.loc 1 546 0
 2221 06ec FFF7FEFF 		bl	turnRight
 547:.\main.c      ****             break;
 2222              		.loc 1 547 0
 2223 06f0 0DE0     		b	.L88
 2224              	.L97:
 548:.\main.c      ****             case UTURN:
 549:.\main.c      ****                 turnU();
 2225              		.loc 1 549 0
 2226 06f2 FFF7FEFF 		bl	turnU
 550:.\main.c      ****             break;
 2227              		.loc 1 550 0
 2228 06f6 0AE0     		b	.L88
 2229              	.L93:
 551:.\main.c      ****             case STOPPED:
 552:.\main.c      ****                 brakeMotor();
 2230              		.loc 1 552 0
 2231 06f8 FFF7FEFF 		bl	brakeMotor
 553:.\main.c      ****             break;
 2232              		.loc 1 553 0
 2233 06fc 07E0     		b	.L88
 2234              	.L94:
 554:.\main.c      ****             case TRACKING:
 555:.\main.c      ****                 trackLine();
 2235              		.loc 1 555 0
 2236 06fe FFF7FEFF 		bl	trackLine
 556:.\main.c      ****             break;
 2237              		.loc 1 556 0
 2238 0702 04E0     		b	.L88
 2239              	.L95:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 51


 557:.\main.c      ****             case TRACKING_U:
 558:.\main.c      ****                 trackLineU();
 2240              		.loc 1 558 0
 2241 0704 FFF7FEFF 		bl	trackLineU
 559:.\main.c      ****             break;
 2242              		.loc 1 559 0
 2243 0708 01E0     		b	.L88
 2244              	.L96:
 560:.\main.c      ****             case TRACKING_SOFT:
 561:.\main.c      ****                 trackLineZ();
 2245              		.loc 1 561 0
 2246 070a FFF7FEFF 		bl	trackLineZ
 2247              	.L88:
 2248              	.LBE2:
 562:.\main.c      ****         }      
 563:.\main.c      ****     }   
 2249              		.loc 1 563 0
 2250 070e AAE4     		b	.L98
 2251              	.L107:
 2252              		.align	2
 2253              	.L106:
 2254 0710 00000000 		.word	target_distance_quad
 2255 0714 905F0100 		.word	90000
 2256 0718 00000000 		.word	reached_target
 2257 071c 00000000 		.word	overshot_target
 2258 0720 00000000 		.word	instructionCount
 2259 0724 00000000 		.word	deadzone
 2260 0728 00000000 		.word	movement_state
 2261              		.cfi_endproc
 2262              	.LFE71:
 2263              		.size	main, .-main
 2264              		.section	.text.handle_rx_binary,"ax",%progbits
 2265              		.align	2
 2266              		.global	handle_rx_binary
 2267              		.thumb
 2268              		.thumb_func
 2269              		.type	handle_rx_binary, %function
 2270              	handle_rx_binary:
 2271              	.LFB72:
 564:.\main.c      **** }
 565:.\main.c      **** 
 566:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 567:.\main.c      **** 
 568:.\main.c      **** void handle_rx_binary()
 569:.\main.c      **** {
 2272              		.loc 1 569 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 32
 2275              		@ frame_needed = 1, uses_anonymous_args = 0
 2276              		@ link register save eliminated.
 2277 0000 80B4     		push	{r7}
 2278              		.cfi_def_cfa_offset 4
 2279              		.cfi_offset 7, -4
 2280 0002 89B0     		sub	sp, sp, #36
 2281              		.cfi_def_cfa_offset 40
 2282 0004 00AF     		add	r7, sp, #0
 2283              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 52


 570:.\main.c      ****     if(flag_rx == 1)
 2284              		.loc 1 570 0
 2285 0006 524B     		ldr	r3, .L128
 2286 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2287 000a 012B     		cmp	r3, #1
 2288 000c 40F09A80 		bne	.L108
 2289              	.LBB9:
 571:.\main.c      ****     {    
 572:.\main.c      ****         flag_rx = 0;
 2290              		.loc 1 572 0
 2291 0010 4F4B     		ldr	r3, .L128
 2292 0012 0022     		movs	r2, #0
 2293 0014 1A70     		strb	r2, [r3]
 573:.\main.c      ****         
 574:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2294              		.loc 1 574 0
 2295 0016 4F4B     		ldr	r3, .L128+4
 2296 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2297 001a 1B02     		lsls	r3, r3, #8
 2298 001c 9AB2     		uxth	r2, r3
 2299 001e 4D4B     		ldr	r3, .L128+4
 2300 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2301 0022 9BB2     		uxth	r3, r3
 2302 0024 1343     		orrs	r3, r3, r2
 2303 0026 9BB2     		uxth	r3, r3
 2304 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 575:.\main.c      ****         char byte_packet[12];
 576:.\main.c      ****         char string_packet[12];
 577:.\main.c      ****         
 578:.\main.c      ****         switch(byteCount)
 2305              		.loc 1 578 0
 2306 002a 4B4B     		ldr	r3, .L128+8
 2307 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2308 002e 043B     		subs	r3, r3, #4
 2309 0030 1E2B     		cmp	r3, #30
 2310 0032 00F28780 		bhi	.L108
 2311 0036 01A2     		adr	r2, .L112
 2312 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2313              		.p2align 2
 2314              	.L112:
 2315 003c B9000000 		.word	.L111+1
 2316 0040 45010000 		.word	.L108+1
 2317 0044 CD000000 		.word	.L113+1
 2318 0048 45010000 		.word	.L108+1
 2319 004c D5000000 		.word	.L114+1
 2320 0050 45010000 		.word	.L108+1
 2321 0054 DD000000 		.word	.L115+1
 2322 0058 45010000 		.word	.L108+1
 2323 005c E5000000 		.word	.L116+1
 2324 0060 45010000 		.word	.L108+1
 2325 0064 ED000000 		.word	.L117+1
 2326 0068 45010000 		.word	.L108+1
 2327 006c F5000000 		.word	.L118+1
 2328 0070 45010000 		.word	.L108+1
 2329 0074 FD000000 		.word	.L119+1
 2330 0078 45010000 		.word	.L108+1
 2331 007c 05010000 		.word	.L120+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 53


 2332 0080 45010000 		.word	.L108+1
 2333 0084 0D010000 		.word	.L121+1
 2334 0088 45010000 		.word	.L108+1
 2335 008c 15010000 		.word	.L122+1
 2336 0090 45010000 		.word	.L108+1
 2337 0094 1D010000 		.word	.L123+1
 2338 0098 45010000 		.word	.L108+1
 2339 009c 25010000 		.word	.L124+1
 2340 00a0 45010000 		.word	.L108+1
 2341 00a4 2D010000 		.word	.L125+1
 2342 00a8 45010000 		.word	.L108+1
 2343 00ac 35010000 		.word	.L126+1
 2344 00b0 45010000 		.word	.L108+1
 2345 00b4 3D010000 		.word	.L127+1
 2346              		.p2align 1
 2347              	.L111:
 579:.\main.c      ****         {
 580:.\main.c      ****             case 4:
 581:.\main.c      ****                 buffer_state.rssi = packet[0];
 2348              		.loc 1 581 0
 2349 00b8 264B     		ldr	r3, .L128+4
 2350 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2351 00bc DAB2     		uxtb	r2, r3
 2352 00be 274B     		ldr	r3, .L128+12
 2353 00c0 1A70     		strb	r2, [r3]
 582:.\main.c      ****                 buffer_state.index = packet[1];
 2354              		.loc 1 582 0
 2355 00c2 244B     		ldr	r3, .L128+4
 2356 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2357 00c6 254B     		ldr	r3, .L128+12
 2358 00c8 5A70     		strb	r2, [r3, #1]
 583:.\main.c      ****             break;
 2359              		.loc 1 583 0
 2360 00ca 3BE0     		b	.L108
 2361              	.L113:
 584:.\main.c      ****             case 6:
 585:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2362              		.loc 1 585 0
 2363 00cc FA8B     		ldrh	r2, [r7, #30]
 2364 00ce 234B     		ldr	r3, .L128+12
 2365 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 586:.\main.c      ****             break;
 2366              		.loc 1 586 0
 2367 00d2 37E0     		b	.L108
 2368              	.L114:
 587:.\main.c      ****             case 8:
 588:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2369              		.loc 1 588 0
 2370 00d4 FA8B     		ldrh	r2, [r7, #30]
 2371 00d6 214B     		ldr	r3, .L128+12
 2372 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 589:.\main.c      ****             break;
 2373              		.loc 1 589 0
 2374 00da 33E0     		b	.L108
 2375              	.L115:
 590:.\main.c      ****             case 10:
 591:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 54


 2376              		.loc 1 591 0
 2377 00dc FA8B     		ldrh	r2, [r7, #30]
 2378 00de 1F4B     		ldr	r3, .L128+12
 2379 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 592:.\main.c      ****             break;
 2380              		.loc 1 592 0
 2381 00e2 2FE0     		b	.L108
 2382              	.L116:
 593:.\main.c      ****             case 12:
 594:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2383              		.loc 1 594 0
 2384 00e4 FA8B     		ldrh	r2, [r7, #30]
 2385 00e6 1D4B     		ldr	r3, .L128+12
 2386 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 595:.\main.c      ****             break;
 2387              		.loc 1 595 0
 2388 00ea 2BE0     		b	.L108
 2389              	.L117:
 596:.\main.c      ****             case 14:
 597:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2390              		.loc 1 597 0
 2391 00ec FA8B     		ldrh	r2, [r7, #30]
 2392 00ee 1B4B     		ldr	r3, .L128+12
 2393 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 598:.\main.c      ****             break;
 2394              		.loc 1 598 0
 2395 00f2 27E0     		b	.L108
 2396              	.L118:
 599:.\main.c      ****             case 16:
 600:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2397              		.loc 1 600 0
 2398 00f4 FA8B     		ldrh	r2, [r7, #30]
 2399 00f6 194B     		ldr	r3, .L128+12
 2400 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 601:.\main.c      ****             break;
 2401              		.loc 1 601 0
 2402 00fa 23E0     		b	.L108
 2403              	.L119:
 602:.\main.c      ****             case 18:
 603:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2404              		.loc 1 603 0
 2405 00fc FA8B     		ldrh	r2, [r7, #30]
 2406 00fe 174B     		ldr	r3, .L128+12
 2407 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 604:.\main.c      ****             break;
 2408              		.loc 1 604 0
 2409 0102 1FE0     		b	.L108
 2410              	.L120:
 605:.\main.c      ****             case 20:
 606:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2411              		.loc 1 606 0
 2412 0104 FA8B     		ldrh	r2, [r7, #30]
 2413 0106 154B     		ldr	r3, .L128+12
 2414 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 607:.\main.c      ****             break;
 2415              		.loc 1 607 0
 2416 010a 1BE0     		b	.L108
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 55


 2417              	.L121:
 608:.\main.c      ****             case 22:
 609:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2418              		.loc 1 609 0
 2419 010c FA8B     		ldrh	r2, [r7, #30]
 2420 010e 134B     		ldr	r3, .L128+12
 2421 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 610:.\main.c      ****             break;
 2422              		.loc 1 610 0
 2423 0112 17E0     		b	.L108
 2424              	.L122:
 611:.\main.c      ****             case 24:
 612:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2425              		.loc 1 612 0
 2426 0114 FA8B     		ldrh	r2, [r7, #30]
 2427 0116 114B     		ldr	r3, .L128+12
 2428 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 613:.\main.c      ****             break;
 2429              		.loc 1 613 0
 2430 011a 13E0     		b	.L108
 2431              	.L123:
 614:.\main.c      ****             case 26:
 615:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2432              		.loc 1 615 0
 2433 011c FA8B     		ldrh	r2, [r7, #30]
 2434 011e 0F4B     		ldr	r3, .L128+12
 2435 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 616:.\main.c      ****             break;
 2436              		.loc 1 616 0
 2437 0122 0FE0     		b	.L108
 2438              	.L124:
 617:.\main.c      ****             case 28:
 618:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2439              		.loc 1 618 0
 2440 0124 FA8B     		ldrh	r2, [r7, #30]
 2441 0126 0D4B     		ldr	r3, .L128+12
 2442 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 619:.\main.c      ****             break;
 2443              		.loc 1 619 0
 2444 012a 0BE0     		b	.L108
 2445              	.L125:
 620:.\main.c      ****             case 30:
 621:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2446              		.loc 1 621 0
 2447 012c FA8B     		ldrh	r2, [r7, #30]
 2448 012e 0B4B     		ldr	r3, .L128+12
 2449 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 622:.\main.c      ****             break;
 2450              		.loc 1 622 0
 2451 0132 07E0     		b	.L108
 2452              	.L126:
 623:.\main.c      ****             case 32:
 624:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2453              		.loc 1 624 0
 2454 0134 FA8B     		ldrh	r2, [r7, #30]
 2455 0136 094B     		ldr	r3, .L128+12
 2456 0138 9A83     		strh	r2, [r3, #28]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 56


 625:.\main.c      ****             break;
 2457              		.loc 1 625 0
 2458 013a 03E0     		b	.L108
 2459              	.L127:
 626:.\main.c      ****             case 34:
 627:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2460              		.loc 1 627 0
 2461 013c FA8B     		ldrh	r2, [r7, #30]
 2462 013e 074B     		ldr	r3, .L128+12
 2463 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 628:.\main.c      ****             break;
 2464              		.loc 1 628 0
 2465 0142 00BF     		nop
 2466              	.L108:
 2467              	.LBE9:
 629:.\main.c      ****         }
 630:.\main.c      ****     }
 631:.\main.c      **** }
 2468              		.loc 1 631 0
 2469 0144 2437     		adds	r7, r7, #36
 2470              		.cfi_def_cfa_offset 4
 2471 0146 BD46     		mov	sp, r7
 2472              		.cfi_def_cfa_register 13
 2473              		@ sp needed
 2474 0148 5DF8047B 		ldr	r7, [sp], #4
 2475              		.cfi_restore 7
 2476              		.cfi_def_cfa_offset 0
 2477 014c 7047     		bx	lr
 2478              	.L129:
 2479 014e 00BF     		.align	2
 2480              	.L128:
 2481 0150 00000000 		.word	flag_rx
 2482 0154 00000000 		.word	packet
 2483 0158 00000000 		.word	byteCount
 2484 015c 00000000 		.word	buffer_state
 2485              		.cfi_endproc
 2486              	.LFE72:
 2487              		.size	handle_rx_binary, .-handle_rx_binary
 2488              		.section	.text.setLeftDir,"ax",%progbits
 2489              		.align	2
 2490              		.global	setLeftDir
 2491              		.thumb
 2492              		.thumb_func
 2493              		.type	setLeftDir, %function
 2494              	setLeftDir:
 2495              	.LFB73:
 632:.\main.c      **** 
 633:.\main.c      **** void setLeftDir(uint8 dir)
 634:.\main.c      **** {
 2496              		.loc 1 634 0
 2497              		.cfi_startproc
 2498              		@ args = 0, pretend = 0, frame = 8
 2499              		@ frame_needed = 1, uses_anonymous_args = 0
 2500 0000 80B5     		push	{r7, lr}
 2501              		.cfi_def_cfa_offset 8
 2502              		.cfi_offset 7, -8
 2503              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 57


 2504 0002 82B0     		sub	sp, sp, #8
 2505              		.cfi_def_cfa_offset 16
 2506 0004 00AF     		add	r7, sp, #0
 2507              		.cfi_def_cfa_register 7
 2508 0006 0346     		mov	r3, r0
 2509 0008 FB71     		strb	r3, [r7, #7]
 635:.\main.c      ****     M2_IN2_Write(dir);
 2510              		.loc 1 635 0
 2511 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2512 000c 1846     		mov	r0, r3
 2513 000e FFF7FEFF 		bl	M2_IN2_Write
 636:.\main.c      **** }
 2514              		.loc 1 636 0
 2515 0012 0837     		adds	r7, r7, #8
 2516              		.cfi_def_cfa_offset 8
 2517 0014 BD46     		mov	sp, r7
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 0016 80BD     		pop	{r7, pc}
 2521              		.cfi_endproc
 2522              	.LFE73:
 2523              		.size	setLeftDir, .-setLeftDir
 2524              		.section	.text.setRightDir,"ax",%progbits
 2525              		.align	2
 2526              		.global	setRightDir
 2527              		.thumb
 2528              		.thumb_func
 2529              		.type	setRightDir, %function
 2530              	setRightDir:
 2531              	.LFB74:
 637:.\main.c      **** 
 638:.\main.c      **** void setRightDir(uint8 dir)
 639:.\main.c      **** {
 2532              		.loc 1 639 0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 8
 2535              		@ frame_needed = 1, uses_anonymous_args = 0
 2536 0000 80B5     		push	{r7, lr}
 2537              		.cfi_def_cfa_offset 8
 2538              		.cfi_offset 7, -8
 2539              		.cfi_offset 14, -4
 2540 0002 82B0     		sub	sp, sp, #8
 2541              		.cfi_def_cfa_offset 16
 2542 0004 00AF     		add	r7, sp, #0
 2543              		.cfi_def_cfa_register 7
 2544 0006 0346     		mov	r3, r0
 2545 0008 FB71     		strb	r3, [r7, #7]
 640:.\main.c      ****     M1_IN2_Write(dir);
 2546              		.loc 1 640 0
 2547 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2548 000c 1846     		mov	r0, r3
 2549 000e FFF7FEFF 		bl	M1_IN2_Write
 641:.\main.c      **** }
 2550              		.loc 1 641 0
 2551 0012 0837     		adds	r7, r7, #8
 2552              		.cfi_def_cfa_offset 8
 2553 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 58


 2554              		.cfi_def_cfa_register 13
 2555              		@ sp needed
 2556 0016 80BD     		pop	{r7, pc}
 2557              		.cfi_endproc
 2558              	.LFE74:
 2559              		.size	setRightDir, .-setRightDir
 2560              		.section	.rodata
 2561 00b7 00       		.align	2
 2562              	.LC8:
 2563 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2563      2025640D 
 2563      0A00
 2564              		.section	.text.reverseDirection,"ax",%progbits
 2565              		.align	2
 2566              		.global	reverseDirection
 2567              		.thumb
 2568              		.thumb_func
 2569              		.type	reverseDirection, %function
 2570              	reverseDirection:
 2571              	.LFB75:
 642:.\main.c      **** 
 643:.\main.c      **** void reverseDirection()
 644:.\main.c      **** {
 2572              		.loc 1 644 0
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 16
 2575              		@ frame_needed = 1, uses_anonymous_args = 0
 2576 0000 80B5     		push	{r7, lr}
 2577              		.cfi_def_cfa_offset 8
 2578              		.cfi_offset 7, -8
 2579              		.cfi_offset 14, -4
 2580 0002 84B0     		sub	sp, sp, #16
 2581              		.cfi_def_cfa_offset 24
 2582 0004 00AF     		add	r7, sp, #0
 2583              		.cfi_def_cfa_register 7
 645:.\main.c      ****     direction = !direction;
 2584              		.loc 1 645 0
 2585 0006 114B     		ldr	r3, .L133
 2586 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2587 000a 002B     		cmp	r3, #0
 2588 000c 0CBF     		ite	eq
 2589 000e 0123     		moveq	r3, #1
 2590 0010 0023     		movne	r3, #0
 2591 0012 DBB2     		uxtb	r3, r3
 2592 0014 1A46     		mov	r2, r3
 2593 0016 0D4B     		ldr	r3, .L133
 2594 0018 1A70     		strb	r2, [r3]
 646:.\main.c      ****     setLeftDir(direction);
 2595              		.loc 1 646 0
 2596 001a 0C4B     		ldr	r3, .L133
 2597 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2598 001e 1846     		mov	r0, r3
 2599 0020 FFF7FEFF 		bl	setLeftDir
 647:.\main.c      ****     setRightDir(direction);
 2600              		.loc 1 647 0
 2601 0024 094B     		ldr	r3, .L133
 2602 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 59


 2603 0028 1846     		mov	r0, r3
 2604 002a FFF7FEFF 		bl	setRightDir
 648:.\main.c      ****     char mes[16];
 649:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2605              		.loc 1 649 0
 2606 002e 074B     		ldr	r3, .L133
 2607 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2608 0032 1A46     		mov	r2, r3
 2609 0034 3B46     		mov	r3, r7
 2610 0036 1846     		mov	r0, r3
 2611 0038 0549     		ldr	r1, .L133+4
 2612 003a FFF7FEFF 		bl	sprintf
 650:.\main.c      ****     UART_PutString(mes);
 2613              		.loc 1 650 0
 2614 003e 3B46     		mov	r3, r7
 2615 0040 1846     		mov	r0, r3
 2616 0042 FFF7FEFF 		bl	UART_PutString
 651:.\main.c      **** }
 2617              		.loc 1 651 0
 2618 0046 1037     		adds	r7, r7, #16
 2619              		.cfi_def_cfa_offset 8
 2620 0048 BD46     		mov	sp, r7
 2621              		.cfi_def_cfa_register 13
 2622              		@ sp needed
 2623 004a 80BD     		pop	{r7, pc}
 2624              	.L134:
 2625              		.align	2
 2626              	.L133:
 2627 004c 00000000 		.word	direction
 2628 0050 B8000000 		.word	.LC8
 2629              		.cfi_endproc
 2630              	.LFE75:
 2631              		.size	reverseDirection, .-reverseDirection
 2632              		.global	__aeabi_dcmplt
 2633              		.global	__aeabi_ddiv
 2634              		.global	__aeabi_d2iz
 2635              		.section	.text.setSpeed,"ax",%progbits
 2636              		.align	2
 2637              		.global	setSpeed
 2638              		.thumb
 2639              		.thumb_func
 2640              		.type	setSpeed, %function
 2641              	setSpeed:
 2642              	.LFB76:
 652:.\main.c      **** 
 653:.\main.c      **** void setSpeed(double left, double right){
 2643              		.loc 1 653 0
 2644              		.cfi_startproc
 2645              		@ args = 0, pretend = 0, frame = 24
 2646              		@ frame_needed = 1, uses_anonymous_args = 0
 2647 0000 80B5     		push	{r7, lr}
 2648              		.cfi_def_cfa_offset 8
 2649              		.cfi_offset 7, -8
 2650              		.cfi_offset 14, -4
 2651 0002 86B0     		sub	sp, sp, #24
 2652              		.cfi_def_cfa_offset 32
 2653 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 60


 2654              		.cfi_def_cfa_register 7
 2655 0006 C7E90201 		strd	r0, [r7, #8]
 2656 000a C7E90023 		strd	r2, [r7]
 654:.\main.c      ****     if(right < 0.0)
 2657              		.loc 1 654 0
 2658 000e D7E90001 		ldrd	r0, [r7]
 2659 0012 4FF00002 		mov	r2, #0
 2660 0016 4FF00003 		mov	r3, #0
 2661 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2662 001e 0346     		mov	r3, r0
 2663 0020 002B     		cmp	r3, #0
 2664 0022 10D0     		beq	.L144
 655:.\main.c      ****     {
 656:.\main.c      ****         //char mes[16];
 657:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 658:.\main.c      ****        // UART_PutString(mes);
 659:.\main.c      ****         setRightDir(!direction);
 2665              		.loc 1 659 0
 2666 0024 304B     		ldr	r3, .L146+8
 2667 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2668 0028 002B     		cmp	r3, #0
 2669 002a 0CBF     		ite	eq
 2670 002c 0123     		moveq	r3, #1
 2671 002e 0023     		movne	r3, #0
 2672 0030 DBB2     		uxtb	r3, r3
 2673 0032 1846     		mov	r0, r3
 2674 0034 FFF7FEFF 		bl	setRightDir
 660:.\main.c      ****         right = -right;
 2675              		.loc 1 660 0
 2676 0038 3B68     		ldr	r3, [r7]
 2677 003a 3B60     		str	r3, [r7]
 2678 003c 7B68     		ldr	r3, [r7, #4]
 2679 003e 83F00043 		eor	r3, r3, #-2147483648
 2680 0042 7B60     		str	r3, [r7, #4]
 2681 0044 04E0     		b	.L138
 2682              	.L144:
 661:.\main.c      ****     }
 662:.\main.c      ****     else setRightDir(direction);
 2683              		.loc 1 662 0
 2684 0046 284B     		ldr	r3, .L146+8
 2685 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2686 004a 1846     		mov	r0, r3
 2687 004c FFF7FEFF 		bl	setRightDir
 2688              	.L138:
 663:.\main.c      ****     
 664:.\main.c      ****     if(left < 0.0)
 2689              		.loc 1 664 0
 2690 0050 D7E90201 		ldrd	r0, [r7, #8]
 2691 0054 4FF00002 		mov	r2, #0
 2692 0058 4FF00003 		mov	r3, #0
 2693 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2694 0060 0346     		mov	r3, r0
 2695 0062 002B     		cmp	r3, #0
 2696 0064 10D0     		beq	.L145
 665:.\main.c      ****     {
 666:.\main.c      ****        // char mes[16];
 667:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 61


 668:.\main.c      ****         //UART_PutString(mes);
 669:.\main.c      ****         setLeftDir(!direction);
 2697              		.loc 1 669 0
 2698 0066 204B     		ldr	r3, .L146+8
 2699 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2700 006a 002B     		cmp	r3, #0
 2701 006c 0CBF     		ite	eq
 2702 006e 0123     		moveq	r3, #1
 2703 0070 0023     		movne	r3, #0
 2704 0072 DBB2     		uxtb	r3, r3
 2705 0074 1846     		mov	r0, r3
 2706 0076 FFF7FEFF 		bl	setLeftDir
 670:.\main.c      ****         left = -left;
 2707              		.loc 1 670 0
 2708 007a BB68     		ldr	r3, [r7, #8]
 2709 007c BB60     		str	r3, [r7, #8]
 2710 007e FB68     		ldr	r3, [r7, #12]
 2711 0080 83F00043 		eor	r3, r3, #-2147483648
 2712 0084 FB60     		str	r3, [r7, #12]
 2713 0086 04E0     		b	.L141
 2714              	.L145:
 671:.\main.c      ****     }
 672:.\main.c      ****     else setLeftDir(direction);
 2715              		.loc 1 672 0
 2716 0088 174B     		ldr	r3, .L146+8
 2717 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2718 008c 1846     		mov	r0, r3
 2719 008e FFF7FEFF 		bl	setLeftDir
 2720              	.L141:
 673:.\main.c      ****     
 674:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2721              		.loc 1 674 0
 2722 0092 D7E90201 		ldrd	r0, [r7, #8]
 2723 0096 12A3     		adr	r3, .L146
 2724 0098 D3E90023 		ldrd	r2, [r3]
 2725 009c FFF7FEFF 		bl	__aeabi_ddiv
 2726 00a0 0246     		mov	r2, r0
 2727 00a2 0B46     		mov	r3, r1
 2728 00a4 1046     		mov	r0, r2
 2729 00a6 1946     		mov	r1, r3
 2730 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2731 00ac 0346     		mov	r3, r0
 2732 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 675:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2733              		.loc 1 675 0
 2734 00b0 D7E90001 		ldrd	r0, [r7]
 2735 00b4 0AA3     		adr	r3, .L146
 2736 00b6 D3E90023 		ldrd	r2, [r3]
 2737 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2738 00be 0246     		mov	r2, r0
 2739 00c0 0B46     		mov	r3, r1
 2740 00c2 1046     		mov	r0, r2
 2741 00c4 1946     		mov	r1, r3
 2742 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2743 00ca 0346     		mov	r3, r0
 2744 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 676:.\main.c      ****     
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 62


 677:.\main.c      ****     leftSpeedLimit = countsRight;
 2745              		.loc 1 677 0
 2746 00ce 074A     		ldr	r2, .L146+12
 2747 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2748 00d2 1380     		strh	r3, [r2]	@ movhi
 678:.\main.c      ****     rightSpeedLimit = countsLeft;
 2749              		.loc 1 678 0
 2750 00d4 064A     		ldr	r2, .L146+16
 2751 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2752 00d8 1380     		strh	r3, [r2]	@ movhi
 679:.\main.c      **** }
 2753              		.loc 1 679 0
 2754 00da 1837     		adds	r7, r7, #24
 2755              		.cfi_def_cfa_offset 8
 2756 00dc BD46     		mov	sp, r7
 2757              		.cfi_def_cfa_register 13
 2758              		@ sp needed
 2759 00de 80BD     		pop	{r7, pc}
 2760              	.L147:
 2761              		.align	3
 2762              	.L146:
 2763 00e0 969526A5 		.word	-1524197994
 2764 00e4 A0DBEF3F 		.word	1072683936
 2765 00e8 00000000 		.word	direction
 2766 00ec 00000000 		.word	leftSpeedLimit
 2767 00f0 00000000 		.word	rightSpeedLimit
 2768              		.cfi_endproc
 2769              	.LFE76:
 2770              		.size	setSpeed, .-setSpeed
 2771 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2772              		.align	2
 2773              		.global	brakeLeft
 2774              		.thumb
 2775              		.thumb_func
 2776              		.type	brakeLeft, %function
 2777              	brakeLeft:
 2778              	.LFB77:
 680:.\main.c      **** 
 681:.\main.c      **** void brakeLeft()
 682:.\main.c      **** {
 2779              		.loc 1 682 0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 0
 2782              		@ frame_needed = 1, uses_anonymous_args = 0
 2783 0000 80B5     		push	{r7, lr}
 2784              		.cfi_def_cfa_offset 8
 2785              		.cfi_offset 7, -8
 2786              		.cfi_offset 14, -4
 2787 0002 00AF     		add	r7, sp, #0
 2788              		.cfi_def_cfa_register 7
 683:.\main.c      ****     PWM_1_WriteCompare(0);
 2789              		.loc 1 683 0
 2790 0004 0020     		movs	r0, #0
 2791 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 684:.\main.c      ****     left_duty_cycle = 0;
 2792              		.loc 1 684 0
 2793 000a 024B     		ldr	r3, .L149
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 63


 2794 000c 0022     		movs	r2, #0
 2795 000e 1A80     		strh	r2, [r3]	@ movhi
 685:.\main.c      **** }
 2796              		.loc 1 685 0
 2797 0010 80BD     		pop	{r7, pc}
 2798              	.L150:
 2799 0012 00BF     		.align	2
 2800              	.L149:
 2801 0014 00000000 		.word	left_duty_cycle
 2802              		.cfi_endproc
 2803              	.LFE77:
 2804              		.size	brakeLeft, .-brakeLeft
 2805              		.section	.text.brakeRight,"ax",%progbits
 2806              		.align	2
 2807              		.global	brakeRight
 2808              		.thumb
 2809              		.thumb_func
 2810              		.type	brakeRight, %function
 2811              	brakeRight:
 2812              	.LFB78:
 686:.\main.c      **** 
 687:.\main.c      **** void brakeRight()
 688:.\main.c      **** {
 2813              		.loc 1 688 0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 1, uses_anonymous_args = 0
 2817 0000 80B5     		push	{r7, lr}
 2818              		.cfi_def_cfa_offset 8
 2819              		.cfi_offset 7, -8
 2820              		.cfi_offset 14, -4
 2821 0002 00AF     		add	r7, sp, #0
 2822              		.cfi_def_cfa_register 7
 689:.\main.c      ****      PWM_2_WriteCompare(0);
 2823              		.loc 1 689 0
 2824 0004 0020     		movs	r0, #0
 2825 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 690:.\main.c      ****      right_duty_cycle = 0;
 2826              		.loc 1 690 0
 2827 000a 024B     		ldr	r3, .L152
 2828 000c 0022     		movs	r2, #0
 2829 000e 1A80     		strh	r2, [r3]	@ movhi
 691:.\main.c      **** }
 2830              		.loc 1 691 0
 2831 0010 80BD     		pop	{r7, pc}
 2832              	.L153:
 2833 0012 00BF     		.align	2
 2834              	.L152:
 2835 0014 00000000 		.word	right_duty_cycle
 2836              		.cfi_endproc
 2837              	.LFE78:
 2838              		.size	brakeRight, .-brakeRight
 2839              		.section	.text.brakeMotor,"ax",%progbits
 2840              		.align	2
 2841              		.global	brakeMotor
 2842              		.thumb
 2843              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 64


 2844              		.type	brakeMotor, %function
 2845              	brakeMotor:
 2846              	.LFB79:
 692:.\main.c      **** 
 693:.\main.c      **** void brakeMotor(){
 2847              		.loc 1 693 0
 2848              		.cfi_startproc
 2849              		@ args = 0, pretend = 0, frame = 0
 2850              		@ frame_needed = 1, uses_anonymous_args = 0
 2851 0000 80B5     		push	{r7, lr}
 2852              		.cfi_def_cfa_offset 8
 2853              		.cfi_offset 7, -8
 2854              		.cfi_offset 14, -4
 2855 0002 00AF     		add	r7, sp, #0
 2856              		.cfi_def_cfa_register 7
 694:.\main.c      ****     setSpeed(0, 0);
 2857              		.loc 1 694 0
 2858 0004 4FF00000 		mov	r0, #0
 2859 0008 4FF00001 		mov	r1, #0
 2860 000c 4FF00002 		mov	r2, #0
 2861 0010 4FF00003 		mov	r3, #0
 2862 0014 FFF7FEFF 		bl	setSpeed
 695:.\main.c      ****     brakeLeft();
 2863              		.loc 1 695 0
 2864 0018 FFF7FEFF 		bl	brakeLeft
 696:.\main.c      ****     brakeRight();
 2865              		.loc 1 696 0
 2866 001c FFF7FEFF 		bl	brakeRight
 697:.\main.c      **** }
 2867              		.loc 1 697 0
 2868 0020 80BD     		pop	{r7, pc}
 2869              		.cfi_endproc
 2870              	.LFE79:
 2871              		.size	brakeMotor, .-brakeMotor
 2872 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2873              		.align	2
 2874              		.global	driveForwards
 2875              		.thumb
 2876              		.thumb_func
 2877              		.type	driveForwards, %function
 2878              	driveForwards:
 2879              	.LFB80:
 698:.\main.c      **** 
 699:.\main.c      **** void driveForwards()
 700:.\main.c      **** {
 2880              		.loc 1 700 0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 0
 2883              		@ frame_needed = 1, uses_anonymous_args = 0
 2884 0000 80B5     		push	{r7, lr}
 2885              		.cfi_def_cfa_offset 8
 2886              		.cfi_offset 7, -8
 2887              		.cfi_offset 14, -4
 2888 0002 00AF     		add	r7, sp, #0
 2889              		.cfi_def_cfa_register 7
 701:.\main.c      ****     setSpeed(speed, speed);
 2890              		.loc 1 701 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 65


 2891 0004 044B     		ldr	r3, .L156
 2892 0006 D3E90001 		ldrd	r0, [r3]
 2893 000a 034B     		ldr	r3, .L156
 2894 000c D3E90023 		ldrd	r2, [r3]
 2895 0010 FFF7FEFF 		bl	setSpeed
 702:.\main.c      **** }
 2896              		.loc 1 702 0
 2897 0014 80BD     		pop	{r7, pc}
 2898              	.L157:
 2899 0016 00BF     		.align	2
 2900              	.L156:
 2901 0018 00000000 		.word	speed
 2902              		.cfi_endproc
 2903              	.LFE80:
 2904              		.size	driveForwards, .-driveForwards
 2905              		.section	.text.turnRight,"ax",%progbits
 2906              		.align	2
 2907              		.global	turnRight
 2908              		.thumb
 2909              		.thumb_func
 2910              		.type	turnRight, %function
 2911              	turnRight:
 2912              	.LFB81:
 703:.\main.c      **** 
 704:.\main.c      **** void turnRight()
 705:.\main.c      **** {
 2913              		.loc 1 705 0
 2914              		.cfi_startproc
 2915              		@ args = 0, pretend = 0, frame = 0
 2916              		@ frame_needed = 1, uses_anonymous_args = 0
 2917 0000 80B5     		push	{r7, lr}
 2918              		.cfi_def_cfa_offset 8
 2919              		.cfi_offset 7, -8
 2920              		.cfi_offset 14, -4
 2921 0002 00AF     		add	r7, sp, #0
 2922              		.cfi_def_cfa_register 7
 706:.\main.c      ****     setSpeed(0,speed*2.0);
 2923              		.loc 1 706 0
 2924 0004 074B     		ldr	r3, .L159
 2925 0006 D3E90023 		ldrd	r2, [r3]
 2926 000a 1046     		mov	r0, r2
 2927 000c 1946     		mov	r1, r3
 2928 000e FFF7FEFF 		bl	__aeabi_dadd
 2929 0012 0246     		mov	r2, r0
 2930 0014 0B46     		mov	r3, r1
 2931 0016 4FF00000 		mov	r0, #0
 2932 001a 4FF00001 		mov	r1, #0
 2933 001e FFF7FEFF 		bl	setSpeed
 707:.\main.c      **** }
 2934              		.loc 1 707 0
 2935 0022 80BD     		pop	{r7, pc}
 2936              	.L160:
 2937              		.align	2
 2938              	.L159:
 2939 0024 00000000 		.word	speed
 2940              		.cfi_endproc
 2941              	.LFE81:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 66


 2942              		.size	turnRight, .-turnRight
 2943              		.section	.text.turnLeft,"ax",%progbits
 2944              		.align	2
 2945              		.global	turnLeft
 2946              		.thumb
 2947              		.thumb_func
 2948              		.type	turnLeft, %function
 2949              	turnLeft:
 2950              	.LFB82:
 708:.\main.c      **** 
 709:.\main.c      **** void turnLeft()
 710:.\main.c      **** {
 2951              		.loc 1 710 0
 2952              		.cfi_startproc
 2953              		@ args = 0, pretend = 0, frame = 0
 2954              		@ frame_needed = 1, uses_anonymous_args = 0
 2955 0000 80B5     		push	{r7, lr}
 2956              		.cfi_def_cfa_offset 8
 2957              		.cfi_offset 7, -8
 2958              		.cfi_offset 14, -4
 2959 0002 00AF     		add	r7, sp, #0
 2960              		.cfi_def_cfa_register 7
 711:.\main.c      ****     setSpeed(speed*2.0,0);
 2961              		.loc 1 711 0
 2962 0004 084B     		ldr	r3, .L162
 2963 0006 D3E90023 		ldrd	r2, [r3]
 2964 000a 1046     		mov	r0, r2
 2965 000c 1946     		mov	r1, r3
 2966 000e FFF7FEFF 		bl	__aeabi_dadd
 2967 0012 0246     		mov	r2, r0
 2968 0014 0B46     		mov	r3, r1
 2969 0016 1046     		mov	r0, r2
 2970 0018 1946     		mov	r1, r3
 2971 001a 4FF00002 		mov	r2, #0
 2972 001e 4FF00003 		mov	r3, #0
 2973 0022 FFF7FEFF 		bl	setSpeed
 712:.\main.c      **** }
 2974              		.loc 1 712 0
 2975 0026 80BD     		pop	{r7, pc}
 2976              	.L163:
 2977              		.align	2
 2978              	.L162:
 2979 0028 00000000 		.word	speed
 2980              		.cfi_endproc
 2981              	.LFE82:
 2982              		.size	turnLeft, .-turnLeft
 2983              		.section	.text.turnU,"ax",%progbits
 2984              		.align	2
 2985              		.global	turnU
 2986              		.thumb
 2987              		.thumb_func
 2988              		.type	turnU, %function
 2989              	turnU:
 2990              	.LFB83:
 713:.\main.c      **** 
 714:.\main.c      **** void turnU()
 715:.\main.c      **** {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 67


 2991              		.loc 1 715 0
 2992              		.cfi_startproc
 2993              		@ args = 0, pretend = 0, frame = 0
 2994              		@ frame_needed = 1, uses_anonymous_args = 0
 2995 0000 B0B5     		push	{r4, r5, r7, lr}
 2996              		.cfi_def_cfa_offset 16
 2997              		.cfi_offset 4, -16
 2998              		.cfi_offset 5, -12
 2999              		.cfi_offset 7, -8
 3000              		.cfi_offset 14, -4
 3001 0002 00AF     		add	r7, sp, #0
 3002              		.cfi_def_cfa_register 7
 716:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 3003              		.loc 1 716 0
 3004 0004 0E4B     		ldr	r3, .L165
 3005 0006 D3E90023 		ldrd	r2, [r3]
 3006 000a 1446     		mov	r4, r2
 3007 000c 83F00045 		eor	r5, r3, #-2147483648
 3008 0010 2046     		mov	r0, r4
 3009 0012 2946     		mov	r1, r5
 3010 0014 2246     		mov	r2, r4
 3011 0016 2B46     		mov	r3, r5
 3012 0018 FFF7FEFF 		bl	__aeabi_dadd
 3013 001c 0246     		mov	r2, r0
 3014 001e 0B46     		mov	r3, r1
 3015 0020 1446     		mov	r4, r2
 3016 0022 1D46     		mov	r5, r3
 3017 0024 064B     		ldr	r3, .L165
 3018 0026 D3E90023 		ldrd	r2, [r3]
 3019 002a 1046     		mov	r0, r2
 3020 002c 1946     		mov	r1, r3
 3021 002e FFF7FEFF 		bl	__aeabi_dadd
 3022 0032 0246     		mov	r2, r0
 3023 0034 0B46     		mov	r3, r1
 3024 0036 2046     		mov	r0, r4
 3025 0038 2946     		mov	r1, r5
 3026 003a FFF7FEFF 		bl	setSpeed
 717:.\main.c      **** }
 3027              		.loc 1 717 0
 3028 003e B0BD     		pop	{r4, r5, r7, pc}
 3029              	.L166:
 3030              		.align	2
 3031              	.L165:
 3032 0040 00000000 		.word	speed
 3033              		.cfi_endproc
 3034              	.LFE83:
 3035              		.size	turnU, .-turnU
 3036              		.section	.text.initTurnLeft,"ax",%progbits
 3037              		.align	2
 3038              		.global	initTurnLeft
 3039              		.thumb
 3040              		.thumb_func
 3041              		.type	initTurnLeft, %function
 3042              	initTurnLeft:
 3043              	.LFB84:
 718:.\main.c      **** 
 719:.\main.c      **** void initTurnLeft(){
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 68


 3044              		.loc 1 719 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 1, uses_anonymous_args = 0
 3048 0000 80B5     		push	{r7, lr}
 3049              		.cfi_def_cfa_offset 8
 3050              		.cfi_offset 7, -8
 3051              		.cfi_offset 14, -4
 3052 0002 00AF     		add	r7, sp, #0
 3053              		.cfi_def_cfa_register 7
 720:.\main.c      ****     Timer_2_Stop();
 3054              		.loc 1 720 0
 3055 0004 FFF7FEFF 		bl	Timer_2_Stop
 721:.\main.c      ****     prev_movement_state = movement_state;
 3056              		.loc 1 721 0
 3057 0008 084B     		ldr	r3, .L168
 3058 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3059 000c 084B     		ldr	r3, .L168+4
 3060 000e 1A70     		strb	r2, [r3]
 722:.\main.c      ****     movement_state = LTURN;
 3061              		.loc 1 722 0
 3062 0010 064B     		ldr	r3, .L168
 3063 0012 0122     		movs	r2, #1
 3064 0014 1A70     		strb	r2, [r3]
 723:.\main.c      ****     brakeLeft();
 3065              		.loc 1 723 0
 3066 0016 FFF7FEFF 		bl	brakeLeft
 724:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3067              		.loc 1 724 0
 3068 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3069 001e 0346     		mov	r3, r0
 3070 0020 1A46     		mov	r2, r3
 3071 0022 044B     		ldr	r3, .L168+8
 3072 0024 1A80     		strh	r2, [r3]	@ movhi
 725:.\main.c      ****     Timer_2_Start();
 3073              		.loc 1 725 0
 3074 0026 FFF7FEFF 		bl	Timer_2_Start
 726:.\main.c      **** }
 3075              		.loc 1 726 0
 3076 002a 80BD     		pop	{r7, pc}
 3077              	.L169:
 3078              		.align	2
 3079              	.L168:
 3080 002c 00000000 		.word	movement_state
 3081 0030 00000000 		.word	prev_movement_state
 3082 0034 00000000 		.word	start_turn_count
 3083              		.cfi_endproc
 3084              	.LFE84:
 3085              		.size	initTurnLeft, .-initTurnLeft
 3086              		.section	.text.initTurnRight,"ax",%progbits
 3087              		.align	2
 3088              		.global	initTurnRight
 3089              		.thumb
 3090              		.thumb_func
 3091              		.type	initTurnRight, %function
 3092              	initTurnRight:
 3093              	.LFB85:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 69


 727:.\main.c      **** 
 728:.\main.c      **** void initTurnRight(){
 3094              		.loc 1 728 0
 3095              		.cfi_startproc
 3096              		@ args = 0, pretend = 0, frame = 0
 3097              		@ frame_needed = 1, uses_anonymous_args = 0
 3098 0000 80B5     		push	{r7, lr}
 3099              		.cfi_def_cfa_offset 8
 3100              		.cfi_offset 7, -8
 3101              		.cfi_offset 14, -4
 3102 0002 00AF     		add	r7, sp, #0
 3103              		.cfi_def_cfa_register 7
 729:.\main.c      ****     Timer_2_Stop();
 3104              		.loc 1 729 0
 3105 0004 FFF7FEFF 		bl	Timer_2_Stop
 730:.\main.c      ****     prev_movement_state = movement_state;
 3106              		.loc 1 730 0
 3107 0008 084B     		ldr	r3, .L171
 3108 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3109 000c 084B     		ldr	r3, .L171+4
 3110 000e 1A70     		strb	r2, [r3]
 731:.\main.c      ****     movement_state = RTURN;
 3111              		.loc 1 731 0
 3112 0010 064B     		ldr	r3, .L171
 3113 0012 0222     		movs	r2, #2
 3114 0014 1A70     		strb	r2, [r3]
 732:.\main.c      ****     brakeRight();
 3115              		.loc 1 732 0
 3116 0016 FFF7FEFF 		bl	brakeRight
 733:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3117              		.loc 1 733 0
 3118 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3119 001e 0346     		mov	r3, r0
 3120 0020 1A46     		mov	r2, r3
 3121 0022 044B     		ldr	r3, .L171+8
 3122 0024 1A80     		strh	r2, [r3]	@ movhi
 734:.\main.c      ****     Timer_2_Start();
 3123              		.loc 1 734 0
 3124 0026 FFF7FEFF 		bl	Timer_2_Start
 735:.\main.c      **** }
 3125              		.loc 1 735 0
 3126 002a 80BD     		pop	{r7, pc}
 3127              	.L172:
 3128              		.align	2
 3129              	.L171:
 3130 002c 00000000 		.word	movement_state
 3131 0030 00000000 		.word	prev_movement_state
 3132 0034 00000000 		.word	start_turn_count
 3133              		.cfi_endproc
 3134              	.LFE85:
 3135              		.size	initTurnRight, .-initTurnRight
 3136              		.section	.text.initTurnU,"ax",%progbits
 3137              		.align	2
 3138              		.global	initTurnU
 3139              		.thumb
 3140              		.thumb_func
 3141              		.type	initTurnU, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 70


 3142              	initTurnU:
 3143              	.LFB86:
 736:.\main.c      **** 
 737:.\main.c      **** void initTurnU(){
 3144              		.loc 1 737 0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 0
 3147              		@ frame_needed = 1, uses_anonymous_args = 0
 3148 0000 80B5     		push	{r7, lr}
 3149              		.cfi_def_cfa_offset 8
 3150              		.cfi_offset 7, -8
 3151              		.cfi_offset 14, -4
 3152 0002 00AF     		add	r7, sp, #0
 3153              		.cfi_def_cfa_register 7
 738:.\main.c      ****     Timer_2_Stop();
 3154              		.loc 1 738 0
 3155 0004 FFF7FEFF 		bl	Timer_2_Stop
 739:.\main.c      ****     prev_movement_state = movement_state;
 3156              		.loc 1 739 0
 3157 0008 084B     		ldr	r3, .L174
 3158 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3159 000c 084B     		ldr	r3, .L174+4
 3160 000e 1A70     		strb	r2, [r3]
 740:.\main.c      ****     movement_state = UTURN;
 3161              		.loc 1 740 0
 3162 0010 064B     		ldr	r3, .L174
 3163 0012 0722     		movs	r2, #7
 3164 0014 1A70     		strb	r2, [r3]
 741:.\main.c      ****     brakeMotor();
 3165              		.loc 1 741 0
 3166 0016 FFF7FEFF 		bl	brakeMotor
 742:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3167              		.loc 1 742 0
 3168 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3169 001e 0346     		mov	r3, r0
 3170 0020 1A46     		mov	r2, r3
 3171 0022 044B     		ldr	r3, .L174+8
 3172 0024 1A80     		strh	r2, [r3]	@ movhi
 743:.\main.c      ****     Timer_2_Start();
 3173              		.loc 1 743 0
 3174 0026 FFF7FEFF 		bl	Timer_2_Start
 744:.\main.c      **** }
 3175              		.loc 1 744 0
 3176 002a 80BD     		pop	{r7, pc}
 3177              	.L175:
 3178              		.align	2
 3179              	.L174:
 3180 002c 00000000 		.word	movement_state
 3181 0030 00000000 		.word	prev_movement_state
 3182 0034 00000000 		.word	start_turn_count
 3183              		.cfi_endproc
 3184              	.LFE86:
 3185              		.size	initTurnU, .-initTurnU
 3186              		.section	.text.initForward,"ax",%progbits
 3187              		.align	2
 3188              		.global	initForward
 3189              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 71


 3190              		.thumb_func
 3191              		.type	initForward, %function
 3192              	initForward:
 3193              	.LFB87:
 745:.\main.c      **** 
 746:.\main.c      **** void initForward(){
 3194              		.loc 1 746 0
 3195              		.cfi_startproc
 3196              		@ args = 0, pretend = 0, frame = 0
 3197              		@ frame_needed = 1, uses_anonymous_args = 0
 3198 0000 80B5     		push	{r7, lr}
 3199              		.cfi_def_cfa_offset 8
 3200              		.cfi_offset 7, -8
 3201              		.cfi_offset 14, -4
 3202 0002 00AF     		add	r7, sp, #0
 3203              		.cfi_def_cfa_register 7
 747:.\main.c      ****     brakeMotor();
 3204              		.loc 1 747 0
 3205 0004 FFF7FEFF 		bl	brakeMotor
 748:.\main.c      ****     movement_state = DRIVE;
 3206              		.loc 1 748 0
 3207 0008 014B     		ldr	r3, .L177
 3208 000a 0022     		movs	r2, #0
 3209 000c 1A70     		strb	r2, [r3]
 749:.\main.c      **** }
 3210              		.loc 1 749 0
 3211 000e 80BD     		pop	{r7, pc}
 3212              	.L178:
 3213              		.align	2
 3214              	.L177:
 3215 0010 00000000 		.word	movement_state
 3216              		.cfi_endproc
 3217              	.LFE87:
 3218              		.size	initForward, .-initForward
 3219              		.section	.text.initBrake,"ax",%progbits
 3220              		.align	2
 3221              		.global	initBrake
 3222              		.thumb
 3223              		.thumb_func
 3224              		.type	initBrake, %function
 3225              	initBrake:
 3226              	.LFB88:
 750:.\main.c      **** 
 751:.\main.c      **** void initBrake(){
 3227              		.loc 1 751 0
 3228              		.cfi_startproc
 3229              		@ args = 0, pretend = 0, frame = 0
 3230              		@ frame_needed = 1, uses_anonymous_args = 0
 3231              		@ link register save eliminated.
 3232 0000 80B4     		push	{r7}
 3233              		.cfi_def_cfa_offset 4
 3234              		.cfi_offset 7, -4
 3235 0002 00AF     		add	r7, sp, #0
 3236              		.cfi_def_cfa_register 7
 752:.\main.c      ****     movement_state = STOPPED;
 3237              		.loc 1 752 0
 3238 0004 034B     		ldr	r3, .L180
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 72


 3239 0006 0322     		movs	r2, #3
 3240 0008 1A70     		strb	r2, [r3]
 753:.\main.c      **** }
 3241              		.loc 1 753 0
 3242 000a BD46     		mov	sp, r7
 3243              		.cfi_def_cfa_register 13
 3244              		@ sp needed
 3245 000c 5DF8047B 		ldr	r7, [sp], #4
 3246              		.cfi_restore 7
 3247              		.cfi_def_cfa_offset 0
 3248 0010 7047     		bx	lr
 3249              	.L181:
 3250 0012 00BF     		.align	2
 3251              	.L180:
 3252 0014 00000000 		.word	movement_state
 3253              		.cfi_endproc
 3254              	.LFE88:
 3255              		.size	initBrake, .-initBrake
 3256              		.section	.text.initTrack,"ax",%progbits
 3257              		.align	2
 3258              		.global	initTrack
 3259              		.thumb
 3260              		.thumb_func
 3261              		.type	initTrack, %function
 3262              	initTrack:
 3263              	.LFB89:
 754:.\main.c      **** 
 755:.\main.c      **** void initTrack()
 756:.\main.c      **** {
 3264              		.loc 1 756 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 0
 3267              		@ frame_needed = 1, uses_anonymous_args = 0
 3268              		@ link register save eliminated.
 3269 0000 80B4     		push	{r7}
 3270              		.cfi_def_cfa_offset 4
 3271              		.cfi_offset 7, -4
 3272 0002 00AF     		add	r7, sp, #0
 3273              		.cfi_def_cfa_register 7
 757:.\main.c      ****     movement_state = TRACKING;
 3274              		.loc 1 757 0
 3275 0004 034B     		ldr	r3, .L183
 3276 0006 0422     		movs	r2, #4
 3277 0008 1A70     		strb	r2, [r3]
 758:.\main.c      **** }
 3278              		.loc 1 758 0
 3279 000a BD46     		mov	sp, r7
 3280              		.cfi_def_cfa_register 13
 3281              		@ sp needed
 3282 000c 5DF8047B 		ldr	r7, [sp], #4
 3283              		.cfi_restore 7
 3284              		.cfi_def_cfa_offset 0
 3285 0010 7047     		bx	lr
 3286              	.L184:
 3287 0012 00BF     		.align	2
 3288              	.L183:
 3289 0014 00000000 		.word	movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 73


 3290              		.cfi_endproc
 3291              	.LFE89:
 3292              		.size	initTrack, .-initTrack
 3293              		.section	.text.initTrackU,"ax",%progbits
 3294              		.align	2
 3295              		.global	initTrackU
 3296              		.thumb
 3297              		.thumb_func
 3298              		.type	initTrackU, %function
 3299              	initTrackU:
 3300              	.LFB90:
 759:.\main.c      **** 
 760:.\main.c      **** void initTrackU(){
 3301              		.loc 1 760 0
 3302              		.cfi_startproc
 3303              		@ args = 0, pretend = 0, frame = 0
 3304              		@ frame_needed = 1, uses_anonymous_args = 0
 3305              		@ link register save eliminated.
 3306 0000 80B4     		push	{r7}
 3307              		.cfi_def_cfa_offset 4
 3308              		.cfi_offset 7, -4
 3309 0002 00AF     		add	r7, sp, #0
 3310              		.cfi_def_cfa_register 7
 761:.\main.c      ****     movement_state = TRACKING_U;
 3311              		.loc 1 761 0
 3312 0004 034B     		ldr	r3, .L186
 3313 0006 0522     		movs	r2, #5
 3314 0008 1A70     		strb	r2, [r3]
 762:.\main.c      **** }
 3315              		.loc 1 762 0
 3316 000a BD46     		mov	sp, r7
 3317              		.cfi_def_cfa_register 13
 3318              		@ sp needed
 3319 000c 5DF8047B 		ldr	r7, [sp], #4
 3320              		.cfi_restore 7
 3321              		.cfi_def_cfa_offset 0
 3322 0010 7047     		bx	lr
 3323              	.L187:
 3324 0012 00BF     		.align	2
 3325              	.L186:
 3326 0014 00000000 		.word	movement_state
 3327              		.cfi_endproc
 3328              	.LFE90:
 3329              		.size	initTrackU, .-initTrackU
 3330              		.section	.text.inittrackLineZ,"ax",%progbits
 3331              		.align	2
 3332              		.global	inittrackLineZ
 3333              		.thumb
 3334              		.thumb_func
 3335              		.type	inittrackLineZ, %function
 3336              	inittrackLineZ:
 3337              	.LFB91:
 763:.\main.c      **** 
 764:.\main.c      **** void inittrackLineZ(){
 3338              		.loc 1 764 0
 3339              		.cfi_startproc
 3340              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 74


 3341              		@ frame_needed = 1, uses_anonymous_args = 0
 3342              		@ link register save eliminated.
 3343 0000 80B4     		push	{r7}
 3344              		.cfi_def_cfa_offset 4
 3345              		.cfi_offset 7, -4
 3346 0002 00AF     		add	r7, sp, #0
 3347              		.cfi_def_cfa_register 7
 765:.\main.c      ****     movement_state = TRACKING_SOFT;
 3348              		.loc 1 765 0
 3349 0004 034B     		ldr	r3, .L189
 3350 0006 0622     		movs	r2, #6
 3351 0008 1A70     		strb	r2, [r3]
 766:.\main.c      **** }
 3352              		.loc 1 766 0
 3353 000a BD46     		mov	sp, r7
 3354              		.cfi_def_cfa_register 13
 3355              		@ sp needed
 3356 000c 5DF8047B 		ldr	r7, [sp], #4
 3357              		.cfi_restore 7
 3358              		.cfi_def_cfa_offset 0
 3359 0010 7047     		bx	lr
 3360              	.L190:
 3361 0012 00BF     		.align	2
 3362              	.L189:
 3363 0014 00000000 		.word	movement_state
 3364              		.cfi_endproc
 3365              	.LFE91:
 3366              		.size	inittrackLineZ, .-inittrackLineZ
 3367              		.section	.text.rxInt,"ax",%progbits
 3368              		.align	2
 3369              		.global	rxInt
 3370              		.thumb
 3371              		.thumb_func
 3372              		.type	rxInt, %function
 3373              	rxInt:
 3374              	.LFB92:
 767:.\main.c      **** 
 768:.\main.c      **** 
 769:.\main.c      **** 
 770:.\main.c      **** //Binary RF Data
 771:.\main.c      **** CY_ISR(rxInt){
 3375              		.loc 1 771 0
 3376              		.cfi_startproc
 3377              		@ args = 0, pretend = 0, frame = 8
 3378              		@ frame_needed = 1, uses_anonymous_args = 0
 3379 0000 B0B5     		push	{r4, r5, r7, lr}
 3380              		.cfi_def_cfa_offset 16
 3381              		.cfi_offset 4, -16
 3382              		.cfi_offset 5, -12
 3383              		.cfi_offset 7, -8
 3384              		.cfi_offset 14, -4
 3385 0002 82B0     		sub	sp, sp, #8
 3386              		.cfi_def_cfa_offset 24
 3387 0004 00AF     		add	r7, sp, #0
 3388              		.cfi_def_cfa_register 7
 772:.\main.c      ****     char rf_char = UART_GetChar();
 3389              		.loc 1 772 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 75


 3390 0006 FFF7FEFF 		bl	UART_GetChar
 3391 000a 0346     		mov	r3, r0
 3392 000c FB71     		strb	r3, [r7, #7]
 773:.\main.c      ****     if(rf_char == SOP){
 3393              		.loc 1 773 0
 3394 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3395 0010 AA2B     		cmp	r3, #170
 3396 0012 2BD1     		bne	.L192
 774:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 775:.\main.c      ****             if(byteCount == 34)
 3397              		.loc 1 775 0
 3398 0014 224B     		ldr	r3, .L196
 3399 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3400 0018 222B     		cmp	r3, #34
 3401 001a 20D1     		bne	.L193
 776:.\main.c      ****             {
 777:.\main.c      ****                 system_state = buffer_state;
 3402              		.loc 1 777 0
 3403 001c 214B     		ldr	r3, .L196+4
 3404 001e 224A     		ldr	r2, .L196+8
 3405 0020 1568     		ldr	r5, [r2]	@ unaligned
 3406 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3407 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3408 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3409 0028 1D60     		str	r5, [r3]	@ unaligned
 3410 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3411 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3412 002e D960     		str	r1, [r3, #12]	@ unaligned
 3413 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3414 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3415 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3416 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3417 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3418 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3419 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3420 003e D961     		str	r1, [r3, #28]	@ unaligned
 778:.\main.c      ****                 if(initial_pos_valid == 0)
 3421              		.loc 1 778 0
 3422 0040 1A4B     		ldr	r3, .L196+12
 3423 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3424 0044 002B     		cmp	r3, #0
 3425 0046 0AD1     		bne	.L193
 779:.\main.c      ****                 {
 780:.\main.c      ****                     LED_Write(~LED_Read());
 3426              		.loc 1 780 0
 3427 0048 FFF7FEFF 		bl	LED_Read
 3428 004c 0346     		mov	r3, r0
 3429 004e DB43     		mvns	r3, r3
 3430 0050 DBB2     		uxtb	r3, r3
 3431 0052 1846     		mov	r0, r3
 3432 0054 FFF7FEFF 		bl	LED_Write
 781:.\main.c      ****                     initial_pos_valid = 1;
 3433              		.loc 1 781 0
 3434 0058 144B     		ldr	r3, .L196+12
 3435 005a 0122     		movs	r2, #1
 3436 005c 1A70     		strb	r2, [r3]
 3437              	.L193:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 76


 782:.\main.c      ****                 }
 783:.\main.c      ****             }
 784:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3438              		.loc 1 784 0
 3439 005e 104B     		ldr	r3, .L196
 3440 0060 0222     		movs	r2, #2
 3441 0062 1A70     		strb	r2, [r3]
 785:.\main.c      ****             flag_rx = 0;
 3442              		.loc 1 785 0
 3443 0064 124B     		ldr	r3, .L196+16
 3444 0066 0022     		movs	r2, #0
 3445 0068 1A70     		strb	r2, [r3]
 3446 006a 16E0     		b	.L191
 3447              	.L192:
 786:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 787:.\main.c      ****         }
 788:.\main.c      ****         else
 789:.\main.c      ****         {
 790:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3448              		.loc 1 790 0
 3449 006c 0C4B     		ldr	r3, .L196
 3450 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3451 0070 03F00103 		and	r3, r3, #1
 3452 0074 0F49     		ldr	r1, .L196+20
 3453 0076 FA79     		ldrb	r2, [r7, #7]
 3454 0078 CA54     		strb	r2, [r1, r3]
 791:.\main.c      ****            
 792:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3455              		.loc 1 792 0
 3456 007a 094B     		ldr	r3, .L196
 3457 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3458 007e 03F00103 		and	r3, r3, #1
 3459 0082 DBB2     		uxtb	r3, r3
 3460 0084 002B     		cmp	r3, #0
 3461 0086 02D0     		beq	.L195
 793:.\main.c      ****             {
 794:.\main.c      ****                 flag_rx = 1;
 3462              		.loc 1 794 0
 3463 0088 094B     		ldr	r3, .L196+16
 3464 008a 0122     		movs	r2, #1
 3465 008c 1A70     		strb	r2, [r3]
 3466              	.L195:
 795:.\main.c      ****             }
 796:.\main.c      ****             byteCount = (byteCount + 1);
 3467              		.loc 1 796 0
 3468 008e 044B     		ldr	r3, .L196
 3469 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3470 0092 0133     		adds	r3, r3, #1
 3471 0094 DAB2     		uxtb	r2, r3
 3472 0096 024B     		ldr	r3, .L196
 3473 0098 1A70     		strb	r2, [r3]
 3474              	.L191:
 797:.\main.c      ****         }
 798:.\main.c      **** }
 3475              		.loc 1 798 0
 3476 009a 0837     		adds	r7, r7, #8
 3477              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 77


 3478 009c BD46     		mov	sp, r7
 3479              		.cfi_def_cfa_register 13
 3480              		@ sp needed
 3481 009e B0BD     		pop	{r4, r5, r7, pc}
 3482              	.L197:
 3483              		.align	2
 3484              	.L196:
 3485 00a0 00000000 		.word	byteCount
 3486 00a4 00000000 		.word	system_state
 3487 00a8 00000000 		.word	buffer_state
 3488 00ac 00000000 		.word	initial_pos_valid
 3489 00b0 00000000 		.word	flag_rx
 3490 00b4 00000000 		.word	packet
 3491              		.cfi_endproc
 3492              	.LFE92:
 3493              		.size	rxInt, .-rxInt
 3494              		.global	__aeabi_i2f
 3495              		.global	__aeabi_fmul
 3496              		.global	__aeabi_f2iz
 3497              		.section	.rodata
 3498 00c2 0000     		.align	2
 3499              	.LC9:
 3500 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3500      65742071 
 3500      7561643A 
 3500      2025640D 
 3500      0A00
 3501 00d6 0000     		.align	2
 3502              	.LC10:
 3503 00d8 0D0A00   		.ascii	"\015\012\000"
 3504              		.section	.text.BT_rxInt,"ax",%progbits
 3505              		.align	2
 3506              		.global	BT_rxInt
 3507              		.thumb
 3508              		.thumb_func
 3509              		.type	BT_rxInt, %function
 3510              	BT_rxInt:
 3511              	.LFB93:
 799:.\main.c      **** 
 800:.\main.c      **** CY_ISR(BT_rxInt)
 801:.\main.c      **** {
 3512              		.loc 1 801 0
 3513              		.cfi_startproc
 3514              		@ args = 0, pretend = 0, frame = 32
 3515              		@ frame_needed = 1, uses_anonymous_args = 0
 3516 0000 80B5     		push	{r7, lr}
 3517              		.cfi_def_cfa_offset 8
 3518              		.cfi_offset 7, -8
 3519              		.cfi_offset 14, -4
 3520 0002 88B0     		sub	sp, sp, #32
 3521              		.cfi_def_cfa_offset 40
 3522 0004 00AF     		add	r7, sp, #0
 3523              		.cfi_def_cfa_register 7
 802:.\main.c      ****     char rf_char = UART_GetChar();
 3524              		.loc 1 802 0
 3525 0006 FFF7FEFF 		bl	UART_GetChar
 3526 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 78


 3527 000c FB75     		strb	r3, [r7, #23]
 803:.\main.c      ****     switch(rf_char){
 3528              		.loc 1 803 0
 3529 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3530 0010 313B     		subs	r3, r3, #49
 3531 0012 492B     		cmp	r3, #73
 3532 0014 00F26B81 		bhi	.L198
 3533 0018 01A2     		adr	r2, .L201
 3534 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3535 001e 00BF     		.p2align 2
 3536              	.L201:
 3537 0020 83020000 		.word	.L200+1
 3538 0024 15020000 		.word	.L202+1
 3539 0028 EF020000 		.word	.L198+1
 3540 002c EF020000 		.word	.L198+1
 3541 0030 EF020000 		.word	.L198+1
 3542 0034 EF020000 		.word	.L198+1
 3543 0038 EF020000 		.word	.L198+1
 3544 003c EF020000 		.word	.L198+1
 3545 0040 EF020000 		.word	.L198+1
 3546 0044 EF020000 		.word	.L198+1
 3547 0048 EF020000 		.word	.L198+1
 3548 004c EF020000 		.word	.L198+1
 3549 0050 EF020000 		.word	.L198+1
 3550 0054 EF020000 		.word	.L198+1
 3551 0058 EF020000 		.word	.L198+1
 3552 005c EF020000 		.word	.L198+1
 3553 0060 EF020000 		.word	.L198+1
 3554 0064 EF020000 		.word	.L198+1
 3555 0068 EF020000 		.word	.L198+1
 3556 006c EF020000 		.word	.L198+1
 3557 0070 EF020000 		.word	.L198+1
 3558 0074 EF020000 		.word	.L198+1
 3559 0078 EF020000 		.word	.L198+1
 3560 007c EF020000 		.word	.L198+1
 3561 0080 EF020000 		.word	.L198+1
 3562 0084 EF020000 		.word	.L198+1
 3563 0088 EF020000 		.word	.L198+1
 3564 008c EF020000 		.word	.L198+1
 3565 0090 EF020000 		.word	.L198+1
 3566 0094 EF020000 		.word	.L198+1
 3567 0098 EF020000 		.word	.L198+1
 3568 009c EF020000 		.word	.L198+1
 3569 00a0 EF020000 		.word	.L198+1
 3570 00a4 EF020000 		.word	.L198+1
 3571 00a8 EF020000 		.word	.L198+1
 3572 00ac EF020000 		.word	.L198+1
 3573 00b0 EF020000 		.word	.L198+1
 3574 00b4 EF020000 		.word	.L198+1
 3575 00b8 EF020000 		.word	.L198+1
 3576 00bc EF020000 		.word	.L198+1
 3577 00c0 EF020000 		.word	.L198+1
 3578 00c4 EF020000 		.word	.L198+1
 3579 00c8 EF020000 		.word	.L198+1
 3580 00cc EF020000 		.word	.L198+1
 3581 00d0 EF020000 		.word	.L198+1
 3582 00d4 EF020000 		.word	.L198+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 79


 3583 00d8 EF020000 		.word	.L198+1
 3584 00dc EF020000 		.word	.L198+1
 3585 00e0 49010000 		.word	.L203+1
 3586 00e4 EF020000 		.word	.L198+1
 3587 00e8 EF020000 		.word	.L198+1
 3588 00ec 6D010000 		.word	.L204+1
 3589 00f0 EF020000 		.word	.L198+1
 3590 00f4 79010000 		.word	.L205+1
 3591 00f8 EF020000 		.word	.L198+1
 3592 00fc EF020000 		.word	.L198+1
 3593 0100 EF020000 		.word	.L198+1
 3594 0104 EF020000 		.word	.L198+1
 3595 0108 EF020000 		.word	.L198+1
 3596 010c EF020000 		.word	.L198+1
 3597 0110 EF020000 		.word	.L198+1
 3598 0114 EF020000 		.word	.L198+1
 3599 0118 EF020000 		.word	.L198+1
 3600 011c EF020000 		.word	.L198+1
 3601 0120 A9010000 		.word	.L206+1
 3602 0124 FF010000 		.word	.L207+1
 3603 0128 61010000 		.word	.L208+1
 3604 012c 85010000 		.word	.L209+1
 3605 0130 91010000 		.word	.L210+1
 3606 0134 EF020000 		.word	.L198+1
 3607 0138 55010000 		.word	.L211+1
 3608 013c EF020000 		.word	.L198+1
 3609 0140 EF020000 		.word	.L198+1
 3610 0144 9D010000 		.word	.L212+1
 3611              		.p2align 1
 3612              	.L203:
 3613              	.LBB10:
 804:.\main.c      ****     case 'a':
 805:.\main.c      ****         initTurnLeft();
 3614              		.loc 1 805 0
 3615 0148 FFF7FEFF 		bl	initTurnLeft
 806:.\main.c      ****         track_mode = NO_TRACK;
 3616              		.loc 1 806 0
 3617 014c 694B     		ldr	r3, .L222
 3618 014e 0022     		movs	r2, #0
 3619 0150 1A70     		strb	r2, [r3]
 807:.\main.c      ****         break;
 3620              		.loc 1 807 0
 3621 0152 CCE0     		b	.L198
 3622              	.L211:
 808:.\main.c      ****     case 'w':
 809:.\main.c      ****         initForward();
 3623              		.loc 1 809 0
 3624 0154 FFF7FEFF 		bl	initForward
 810:.\main.c      ****         track_mode = NO_TRACK;
 3625              		.loc 1 810 0
 3626 0158 664B     		ldr	r3, .L222
 3627 015a 0022     		movs	r2, #0
 3628 015c 1A70     		strb	r2, [r3]
 811:.\main.c      ****         break;
 3629              		.loc 1 811 0
 3630 015e C6E0     		b	.L198
 3631              	.L208:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 80


 812:.\main.c      ****     case 's': 
 813:.\main.c      ****         reverseDirection();
 3632              		.loc 1 813 0
 3633 0160 FFF7FEFF 		bl	reverseDirection
 814:.\main.c      ****         track_mode = NO_TRACK;
 3634              		.loc 1 814 0
 3635 0164 634B     		ldr	r3, .L222
 3636 0166 0022     		movs	r2, #0
 3637 0168 1A70     		strb	r2, [r3]
 815:.\main.c      ****         break;
 3638              		.loc 1 815 0
 3639 016a C0E0     		b	.L198
 3640              	.L204:
 816:.\main.c      ****     case 'd':
 817:.\main.c      ****         initTurnRight();
 3641              		.loc 1 817 0
 3642 016c FFF7FEFF 		bl	initTurnRight
 818:.\main.c      ****         track_mode = NO_TRACK;
 3643              		.loc 1 818 0
 3644 0170 604B     		ldr	r3, .L222
 3645 0172 0022     		movs	r2, #0
 3646 0174 1A70     		strb	r2, [r3]
 819:.\main.c      ****         break;
 3647              		.loc 1 819 0
 3648 0176 BAE0     		b	.L198
 3649              	.L205:
 820:.\main.c      ****     case 'f':
 821:.\main.c      ****         initBrake();
 3650              		.loc 1 821 0
 3651 0178 FFF7FEFF 		bl	initBrake
 822:.\main.c      ****         track_mode = NO_TRACK;
 3652              		.loc 1 822 0
 3653 017c 5D4B     		ldr	r3, .L222
 3654 017e 0022     		movs	r2, #0
 3655 0180 1A70     		strb	r2, [r3]
 823:.\main.c      ****         break;
 3656              		.loc 1 823 0
 3657 0182 B4E0     		b	.L198
 3658              	.L209:
 824:.\main.c      ****     case('t'):
 825:.\main.c      ****         track_mode = CURVE_TRACK;
 3659              		.loc 1 825 0
 3660 0184 5B4B     		ldr	r3, .L222
 3661 0186 0122     		movs	r2, #1
 3662 0188 1A70     		strb	r2, [r3]
 826:.\main.c      ****         initTrack();
 3663              		.loc 1 826 0
 3664 018a FFF7FEFF 		bl	initTrack
 827:.\main.c      ****         break;
 3665              		.loc 1 827 0
 3666 018e AEE0     		b	.L198
 3667              	.L210:
 828:.\main.c      ****     case('u'):
 829:.\main.c      ****         initTrackU();
 3668              		.loc 1 829 0
 3669 0190 FFF7FEFF 		bl	initTrackU
 830:.\main.c      ****         track_mode = U_TRACK;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 81


 3670              		.loc 1 830 0
 3671 0194 574B     		ldr	r3, .L222
 3672 0196 0222     		movs	r2, #2
 3673 0198 1A70     		strb	r2, [r3]
 831:.\main.c      ****         break;
 3674              		.loc 1 831 0
 3675 019a A8E0     		b	.L198
 3676              	.L212:
 832:.\main.c      ****     case('z'):
 833:.\main.c      ****         track_mode = SQUARE_TRACK;
 3677              		.loc 1 833 0
 3678 019c 554B     		ldr	r3, .L222
 3679 019e 0322     		movs	r2, #3
 3680 01a0 1A70     		strb	r2, [r3]
 834:.\main.c      ****         inittrackLineZ();
 3681              		.loc 1 834 0
 3682 01a2 FFF7FEFF 		bl	inittrackLineZ
 835:.\main.c      ****         break;
 3683              		.loc 1 835 0
 3684 01a6 A2E0     		b	.L198
 3685              	.L206:
 836:.\main.c      ****     case('q'):
 837:.\main.c      ****         track_mode = QUAD_STOP;
 3686              		.loc 1 837 0
 3687 01a8 524B     		ldr	r3, .L222
 3688 01aa 0422     		movs	r2, #4
 3689 01ac 1A70     		strb	r2, [r3]
 838:.\main.c      ****         accum_dist = 0;
 3690              		.loc 1 838 0
 3691 01ae 524B     		ldr	r3, .L222+4
 3692 01b0 0022     		movs	r2, #0
 3693 01b2 1A80     		strh	r2, [r3]	@ movhi
 839:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3694              		.loc 1 839 0
 3695 01b4 514B     		ldr	r3, .L222+8
 3696 01b6 1B88     		ldrh	r3, [r3]
 3697 01b8 1BB2     		sxth	r3, r3
 3698 01ba 1846     		mov	r0, r3
 3699 01bc FFF7FEFF 		bl	__aeabi_i2f
 3700 01c0 0246     		mov	r2, r0
 3701 01c2 4F4B     		ldr	r3, .L222+12
 3702 01c4 1B68     		ldr	r3, [r3]	@ float
 3703 01c6 1046     		mov	r0, r2
 3704 01c8 1946     		mov	r1, r3
 3705 01ca FFF7FEFF 		bl	__aeabi_fmul
 3706 01ce 0346     		mov	r3, r0
 3707 01d0 1846     		mov	r0, r3
 3708 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3709 01d6 0346     		mov	r3, r0
 3710 01d8 9AB2     		uxth	r2, r3
 3711 01da 4A4B     		ldr	r3, .L222+16
 3712 01dc 1A80     		strh	r2, [r3]	@ movhi
 840:.\main.c      ****         char mes[16];
 841:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3713              		.loc 1 841 0
 3714 01de 494B     		ldr	r3, .L222+16
 3715 01e0 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 82


 3716 01e2 1BB2     		sxth	r3, r3
 3717 01e4 3A1D     		adds	r2, r7, #4
 3718 01e6 1046     		mov	r0, r2
 3719 01e8 4749     		ldr	r1, .L222+20
 3720 01ea 1A46     		mov	r2, r3
 3721 01ec FFF7FEFF 		bl	sprintf
 842:.\main.c      ****         UART_PutString(mes);
 3722              		.loc 1 842 0
 3723 01f0 3B1D     		adds	r3, r7, #4
 3724 01f2 1846     		mov	r0, r3
 3725 01f4 FFF7FEFF 		bl	UART_PutString
 843:.\main.c      ****         initForward();
 3726              		.loc 1 843 0
 3727 01f8 FFF7FEFF 		bl	initForward
 844:.\main.c      ****         break;
 3728              		.loc 1 844 0
 3729 01fc 77E0     		b	.L198
 3730              	.L207:
 845:.\main.c      ****     case ('r'):
 846:.\main.c      ****         track_mode = RF_STOP;
 3731              		.loc 1 846 0
 3732 01fe 3D4B     		ldr	r3, .L222
 3733 0200 0522     		movs	r2, #5
 3734 0202 1A70     		strb	r2, [r3]
 847:.\main.c      ****         changeToRF();
 3735              		.loc 1 847 0
 3736 0204 FFF7FEFF 		bl	changeToRF
 848:.\main.c      ****         // Make initial position
 849:.\main.c      ****         initial_pos_valid = 0;
 3737              		.loc 1 849 0
 3738 0208 404B     		ldr	r3, .L222+24
 3739 020a 0022     		movs	r2, #0
 3740 020c 1A70     		strb	r2, [r3]
 850:.\main.c      ****         initBrake();
 3741              		.loc 1 850 0
 3742 020e FFF7FEFF 		bl	initBrake
 851:.\main.c      ****         break;
 3743              		.loc 1 851 0
 3744 0212 6CE0     		b	.L198
 3745              	.L202:
 852:.\main.c      ****     case ('2'):
 853:.\main.c      ****         track_mode = DEST_TEST;
 3746              		.loc 1 853 0
 3747 0214 374B     		ldr	r3, .L222
 3748 0216 0622     		movs	r2, #6
 3749 0218 1A70     		strb	r2, [r3]
 854:.\main.c      ****         tracked_direction = robot_direction;
 3750              		.loc 1 854 0
 3751 021a 3D4B     		ldr	r3, .L222+28
 3752 021c 1B68     		ldr	r3, [r3]
 3753 021e 3D4A     		ldr	r2, .L222+32
 3754 0220 1360     		str	r3, [r2]
 855:.\main.c      ****         instructionLength = generateDirections();
 3755              		.loc 1 855 0
 3756 0222 FFF7FEFF 		bl	generateDirections
 3757 0226 0346     		mov	r3, r0
 3758 0228 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 83


 3759 022a 3B4B     		ldr	r3, .L222+36
 3760 022c 1A80     		strh	r2, [r3]	@ movhi
 856:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 857:.\main.c      ****         //char message[128];
 858:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 859:.\main.c      ****         int i = 0;
 3761              		.loc 1 859 0
 3762 022e 0023     		movs	r3, #0
 3763 0230 FB61     		str	r3, [r7, #28]
 860:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3764              		.loc 1 860 0
 3765 0232 0023     		movs	r3, #0
 3766 0234 FB61     		str	r3, [r7, #28]
 3767 0236 18E0     		b	.L214
 3768              	.L217:
 861:.\main.c      ****         {
 862:.\main.c      ****             if(i%2 == 0)
 3769              		.loc 1 862 0
 3770 0238 FB69     		ldr	r3, [r7, #28]
 3771 023a 03F00103 		and	r3, r3, #1
 3772 023e 002B     		cmp	r3, #0
 3773 0240 07D1     		bne	.L215
 863:.\main.c      ****             {
 864:.\main.c      ****                 UART_PutChar(instructions[i]);
 3774              		.loc 1 864 0
 3775 0242 364A     		ldr	r2, .L222+40
 3776 0244 FB69     		ldr	r3, [r7, #28]
 3777 0246 1344     		add	r3, r3, r2
 3778 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3779 024a 1846     		mov	r0, r3
 3780 024c FFF7FEFF 		bl	UART_PutChar
 3781 0250 08E0     		b	.L216
 3782              	.L215:
 865:.\main.c      ****             }
 866:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3783              		.loc 1 866 0
 3784 0252 324A     		ldr	r2, .L222+40
 3785 0254 FB69     		ldr	r3, [r7, #28]
 3786 0256 1344     		add	r3, r3, r2
 3787 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3788 025a 3033     		adds	r3, r3, #48
 3789 025c DBB2     		uxtb	r3, r3
 3790 025e 1846     		mov	r0, r3
 3791 0260 FFF7FEFF 		bl	UART_PutChar
 3792              	.L216:
 860:.\main.c      ****         {
 3793              		.loc 1 860 0 discriminator 2
 3794 0264 FB69     		ldr	r3, [r7, #28]
 3795 0266 0133     		adds	r3, r3, #1
 3796 0268 FB61     		str	r3, [r7, #28]
 3797              	.L214:
 860:.\main.c      ****         {
 3798              		.loc 1 860 0 is_stmt 0 discriminator 1
 3799 026a 2B4B     		ldr	r3, .L222+36
 3800 026c 1B88     		ldrh	r3, [r3]
 3801 026e 1A46     		mov	r2, r3
 3802 0270 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 84


 3803 0272 9A42     		cmp	r2, r3
 3804 0274 E0DC     		bgt	.L217
 867:.\main.c      **** 
 868:.\main.c      ****         }
 869:.\main.c      ****         
 870:.\main.c      ****         UART_PutString("\r\n");
 3805              		.loc 1 870 0 is_stmt 1
 3806 0276 2A48     		ldr	r0, .L222+44
 3807 0278 FFF7FEFF 		bl	UART_PutString
 871:.\main.c      **** 
 872:.\main.c      ****         inittrackLineZ();
 3808              		.loc 1 872 0
 3809 027c FFF7FEFF 		bl	inittrackLineZ
 873:.\main.c      ****         break;
 3810              		.loc 1 873 0
 3811 0280 35E0     		b	.L198
 3812              	.L200:
 874:.\main.c      ****         case ('1'):
 875:.\main.c      ****         track_mode = DEST_TEST;
 3813              		.loc 1 875 0
 3814 0282 1C4B     		ldr	r3, .L222
 3815 0284 0622     		movs	r2, #6
 3816 0286 1A70     		strb	r2, [r3]
 876:.\main.c      ****         tracked_direction = robot_direction;
 3817              		.loc 1 876 0
 3818 0288 214B     		ldr	r3, .L222+28
 3819 028a 1B68     		ldr	r3, [r3]
 3820 028c 214A     		ldr	r2, .L222+32
 3821 028e 1360     		str	r3, [r2]
 877:.\main.c      ****         //instructionLength = generateDirections();
 878:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3822              		.loc 1 878 0
 3823 0290 FFF7FEFF 		bl	generateEntireMapDirections
 3824 0294 0346     		mov	r3, r0
 3825 0296 9AB2     		uxth	r2, r3
 3826 0298 1F4B     		ldr	r3, .L222+36
 3827 029a 1A80     		strh	r2, [r3]	@ movhi
 879:.\main.c      ****         //char message[128];
 880:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 881:.\main.c      ****         //instructionCount = instructionLength - 22;
 882:.\main.c      ****         int x;
 883:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 3828              		.loc 1 883 0
 3829 029c 214B     		ldr	r3, .L222+48
 3830 029e 1B88     		ldrh	r3, [r3]
 3831 02a0 BB61     		str	r3, [r7, #24]
 3832 02a2 18E0     		b	.L218
 3833              	.L221:
 884:.\main.c      ****         {
 885:.\main.c      ****             if(x%2 == 0)
 3834              		.loc 1 885 0
 3835 02a4 BB69     		ldr	r3, [r7, #24]
 3836 02a6 03F00103 		and	r3, r3, #1
 3837 02aa 002B     		cmp	r3, #0
 3838 02ac 07D1     		bne	.L219
 886:.\main.c      ****             {
 887:.\main.c      ****                 UART_PutChar(instructions[x]);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 85


 3839              		.loc 1 887 0
 3840 02ae 1B4A     		ldr	r2, .L222+40
 3841 02b0 BB69     		ldr	r3, [r7, #24]
 3842 02b2 1344     		add	r3, r3, r2
 3843 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3844 02b6 1846     		mov	r0, r3
 3845 02b8 FFF7FEFF 		bl	UART_PutChar
 3846 02bc 08E0     		b	.L220
 3847              	.L219:
 888:.\main.c      ****             }
 889:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 3848              		.loc 1 889 0
 3849 02be 174A     		ldr	r2, .L222+40
 3850 02c0 BB69     		ldr	r3, [r7, #24]
 3851 02c2 1344     		add	r3, r3, r2
 3852 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3853 02c6 3033     		adds	r3, r3, #48
 3854 02c8 DBB2     		uxtb	r3, r3
 3855 02ca 1846     		mov	r0, r3
 3856 02cc FFF7FEFF 		bl	UART_PutChar
 3857              	.L220:
 883:.\main.c      ****         {
 3858              		.loc 1 883 0 discriminator 2
 3859 02d0 BB69     		ldr	r3, [r7, #24]
 3860 02d2 0133     		adds	r3, r3, #1
 3861 02d4 BB61     		str	r3, [r7, #24]
 3862              	.L218:
 883:.\main.c      ****         {
 3863              		.loc 1 883 0 is_stmt 0 discriminator 1
 3864 02d6 104B     		ldr	r3, .L222+36
 3865 02d8 1B88     		ldrh	r3, [r3]
 3866 02da 1A46     		mov	r2, r3
 3867 02dc BB69     		ldr	r3, [r7, #24]
 3868 02de 9A42     		cmp	r2, r3
 3869 02e0 E0DC     		bgt	.L221
 890:.\main.c      **** 
 891:.\main.c      ****         }
 892:.\main.c      ****         
 893:.\main.c      ****         UART_PutString("\r\n");
 3870              		.loc 1 893 0 is_stmt 1
 3871 02e2 0F48     		ldr	r0, .L222+44
 3872 02e4 FFF7FEFF 		bl	UART_PutString
 894:.\main.c      **** 
 895:.\main.c      ****         inittrackLineZ();
 3873              		.loc 1 895 0
 3874 02e8 FFF7FEFF 		bl	inittrackLineZ
 896:.\main.c      ****         break;
 3875              		.loc 1 896 0
 3876 02ec 00BF     		nop
 3877              	.L198:
 3878              	.LBE10:
 897:.\main.c      ****     }
 898:.\main.c      **** }
 3879              		.loc 1 898 0
 3880 02ee 2037     		adds	r7, r7, #32
 3881              		.cfi_def_cfa_offset 8
 3882 02f0 BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 86


 3883              		.cfi_def_cfa_register 13
 3884              		@ sp needed
 3885 02f2 80BD     		pop	{r7, pc}
 3886              	.L223:
 3887              		.align	2
 3888              	.L222:
 3889 02f4 00000000 		.word	track_mode
 3890 02f8 00000000 		.word	accum_dist
 3891 02fc 00000000 		.word	target_distance_cm
 3892 0300 00000000 		.word	quad_per_cm
 3893 0304 00000000 		.word	target_distance_quad
 3894 0308 C4000000 		.word	.LC9
 3895 030c 00000000 		.word	initial_pos_valid
 3896 0310 00000000 		.word	robot_direction
 3897 0314 00000000 		.word	tracked_direction
 3898 0318 00000000 		.word	instructionLength
 3899 031c 00000000 		.word	instructions
 3900 0320 D8000000 		.word	.LC10
 3901 0324 00000000 		.word	instructionCount
 3902              		.cfi_endproc
 3903              	.LFE93:
 3904              		.size	BT_rxInt, .-BT_rxInt
 3905              		.section	.text.changeToRF,"ax",%progbits
 3906              		.align	2
 3907              		.global	changeToRF
 3908              		.thumb
 3909              		.thumb_func
 3910              		.type	changeToRF, %function
 3911              	changeToRF:
 3912              	.LFB94:
 899:.\main.c      **** 
 900:.\main.c      **** 
 901:.\main.c      **** void changeToRF()
 902:.\main.c      **** {
 3913              		.loc 1 902 0
 3914              		.cfi_startproc
 3915              		@ args = 0, pretend = 0, frame = 0
 3916              		@ frame_needed = 1, uses_anonymous_args = 0
 3917 0000 80B5     		push	{r7, lr}
 3918              		.cfi_def_cfa_offset 8
 3919              		.cfi_offset 7, -8
 3920              		.cfi_offset 14, -4
 3921 0002 00AF     		add	r7, sp, #0
 3922              		.cfi_def_cfa_register 7
 903:.\main.c      ****         //disable BT
 904:.\main.c      ****         BT_ENABLED = 0;
 3923              		.loc 1 904 0
 3924 0004 0B4B     		ldr	r3, .L225
 3925 0006 0022     		movs	r2, #0
 3926 0008 1A70     		strb	r2, [r3]
 905:.\main.c      ****         isrRF_RX_Stop();
 3927              		.loc 1 905 0
 3928 000a FFF7FEFF 		bl	isrRF_RX_Stop
 906:.\main.c      ****         UART_Stop();
 3929              		.loc 1 906 0
 3930 000e FFF7FEFF 		bl	UART_Stop
 907:.\main.c      ****         
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 87


 908:.\main.c      ****         //enable RF
 909:.\main.c      ****         BIN_ENABLED = 1;
 3931              		.loc 1 909 0
 3932 0012 094B     		ldr	r3, .L225+4
 3933 0014 0122     		movs	r2, #1
 3934 0016 1A70     		strb	r2, [r3]
 910:.\main.c      ****         UART_clk_SetDividerValue(130);
 3935              		.loc 1 910 0
 3936 0018 8120     		movs	r0, #129
 3937 001a 0121     		movs	r1, #1
 3938 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 911:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 3939              		.loc 1 911 0
 3940 0020 0648     		ldr	r0, .L225+8
 3941 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 912:.\main.c      ****         UART_Start();
 3942              		.loc 1 912 0
 3943 0026 FFF7FEFF 		bl	UART_Start
 913:.\main.c      ****         RF_BT_SELECT_Write(0);
 3944              		.loc 1 913 0
 3945 002a 0020     		movs	r0, #0
 3946 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 914:.\main.c      **** }
 3947              		.loc 1 914 0
 3948 0030 80BD     		pop	{r7, pc}
 3949              	.L226:
 3950 0032 00BF     		.align	2
 3951              	.L225:
 3952 0034 00000000 		.word	BT_ENABLED
 3953 0038 00000000 		.word	BIN_ENABLED
 3954 003c 00000000 		.word	rxInt
 3955              		.cfi_endproc
 3956              	.LFE94:
 3957              		.size	changeToRF, .-changeToRF
 3958              		.section	.text.changeToBT,"ax",%progbits
 3959              		.align	2
 3960              		.global	changeToBT
 3961              		.thumb
 3962              		.thumb_func
 3963              		.type	changeToBT, %function
 3964              	changeToBT:
 3965              	.LFB95:
 915:.\main.c      **** 
 916:.\main.c      **** void changeToBT()
 917:.\main.c      **** {
 3966              		.loc 1 917 0
 3967              		.cfi_startproc
 3968              		@ args = 0, pretend = 0, frame = 0
 3969              		@ frame_needed = 1, uses_anonymous_args = 0
 3970 0000 80B5     		push	{r7, lr}
 3971              		.cfi_def_cfa_offset 8
 3972              		.cfi_offset 7, -8
 3973              		.cfi_offset 14, -4
 3974 0002 00AF     		add	r7, sp, #0
 3975              		.cfi_def_cfa_register 7
 918:.\main.c      ****         //disable RF
 919:.\main.c      ****         BIN_ENABLED = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 88


 3976              		.loc 1 919 0
 3977 0004 0B4B     		ldr	r3, .L228
 3978 0006 0022     		movs	r2, #0
 3979 0008 1A70     		strb	r2, [r3]
 920:.\main.c      ****         isrRF_RX_Stop();
 3980              		.loc 1 920 0
 3981 000a FFF7FEFF 		bl	isrRF_RX_Stop
 921:.\main.c      ****         UART_Stop();
 3982              		.loc 1 921 0
 3983 000e FFF7FEFF 		bl	UART_Stop
 922:.\main.c      ****         
 923:.\main.c      ****         //enable BT
 924:.\main.c      ****         BT_ENABLED = 1;
 3984              		.loc 1 924 0
 3985 0012 094B     		ldr	r3, .L228+4
 3986 0014 0122     		movs	r2, #1
 3987 0016 1A70     		strb	r2, [r3]
 925:.\main.c      ****         UART_clk_SetDividerValue(781);
 3988              		.loc 1 925 0
 3989 0018 4FF44370 		mov	r0, #780
 3990 001c 0121     		movs	r1, #1
 3991 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 926:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3992              		.loc 1 926 0
 3993 0022 0648     		ldr	r0, .L228+8
 3994 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 927:.\main.c      ****         UART_Start();
 3995              		.loc 1 927 0
 3996 0028 FFF7FEFF 		bl	UART_Start
 928:.\main.c      ****         RF_BT_SELECT_Write(1);
 3997              		.loc 1 928 0
 3998 002c 0120     		movs	r0, #1
 3999 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 929:.\main.c      **** }
 4000              		.loc 1 929 0
 4001 0032 80BD     		pop	{r7, pc}
 4002              	.L229:
 4003              		.align	2
 4004              	.L228:
 4005 0034 00000000 		.word	BIN_ENABLED
 4006 0038 00000000 		.word	BT_ENABLED
 4007 003c 00000000 		.word	BT_rxInt
 4008              		.cfi_endproc
 4009              	.LFE95:
 4010              		.size	changeToBT, .-changeToBT
 4011              		.global	__aeabi_dmul
 4012              		.section	.text.Quad_Dec_response,"ax",%progbits
 4013              		.align	2
 4014              		.global	Quad_Dec_response
 4015              		.thumb
 4016              		.thumb_func
 4017              		.type	Quad_Dec_response, %function
 4018              	Quad_Dec_response:
 4019              	.LFB96:
 930:.\main.c      **** 
 931:.\main.c      **** 
 932:.\main.c      **** void Quad_Dec_response()
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 89


 933:.\main.c      **** {
 4020              		.loc 1 933 0
 4021              		.cfi_startproc
 4022              		@ args = 0, pretend = 0, frame = 32
 4023              		@ frame_needed = 1, uses_anonymous_args = 0
 4024 0000 B0B5     		push	{r4, r5, r7, lr}
 4025              		.cfi_def_cfa_offset 16
 4026              		.cfi_offset 4, -16
 4027              		.cfi_offset 5, -12
 4028              		.cfi_offset 7, -8
 4029              		.cfi_offset 14, -4
 4030 0002 88B0     		sub	sp, sp, #32
 4031              		.cfi_def_cfa_offset 48
 4032 0004 00AF     		add	r7, sp, #0
 4033              		.cfi_def_cfa_register 7
 934:.\main.c      ****     //Check if the flag has been set
 935:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4034              		.loc 1 935 0
 4035 0006 824B     		ldr	r3, .L238
 4036 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4037 000a 002B     		cmp	r3, #0
 4038 000c 00D1     		bne	.L231
 4039 000e FCE0     		b	.L230
 4040              	.L231:
 936:.\main.c      ****     flag_calc_wheelspeed = 0;
 4041              		.loc 1 936 0
 4042 0010 7F4B     		ldr	r3, .L238
 4043 0012 0022     		movs	r2, #0
 4044 0014 1A70     		strb	r2, [r3]
 937:.\main.c      ****     
 938:.\main.c      ****     //char wheel_1_str [64];
 939:.\main.c      ****     //char wheel_2_str [64];
 940:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 941:.\main.c      ****     //usbPutString(wheel_1_str);
 942:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 943:.\main.c      ****     
 944:.\main.c      ****     //usbPutString(wheel_2_str);
 945:.\main.c      ****     
 946:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4045              		.loc 1 946 0
 4046 0016 7F4B     		ldr	r3, .L238+4
 4047 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4048 001a FB81     		strh	r3, [r7, #14]	@ movhi
 947:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4049              		.loc 1 947 0
 4050 001c 7E4B     		ldr	r3, .L238+8
 4051 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4052 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 948:.\main.c      ****     double scalingLeft = 1;
 4053              		.loc 1 948 0
 4054 0022 4FF00002 		mov	r2, #0
 4055 0026 7D4B     		ldr	r3, .L238+12
 4056 0028 C7E90623 		strd	r2, [r7, #24]
 949:.\main.c      ****     double scalingRight = 1;
 4057              		.loc 1 949 0
 4058 002c 4FF00002 		mov	r2, #0
 4059 0030 7A4B     		ldr	r3, .L238+12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 90


 4060 0032 C7E90423 		strd	r2, [r7, #16]
 950:.\main.c      ****     
 951:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 952:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4061              		.loc 1 952 0
 4062 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4063 003a 002B     		cmp	r3, #0
 4064 003c 0FD1     		bne	.L233
 4065              		.loc 1 952 0 is_stmt 0 discriminator 1
 4066 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4067 0042 002B     		cmp	r3, #0
 4068 0044 0BD1     		bne	.L233
 953:.\main.c      ****        //leftSpeed = 3;
 954:.\main.c      ****         scalingLeft = 2;
 4069              		.loc 1 954 0 is_stmt 1
 4070 0046 4FF00002 		mov	r2, #0
 4071 004a 4FF08043 		mov	r3, #1073741824
 4072 004e C7E90623 		strd	r2, [r7, #24]
 955:.\main.c      ****         scalingRight = 2;
 4073              		.loc 1 955 0
 4074 0052 4FF00002 		mov	r2, #0
 4075 0056 4FF08043 		mov	r3, #1073741824
 4076 005a C7E90423 		strd	r2, [r7, #16]
 4077              	.L233:
 956:.\main.c      ****     }
 957:.\main.c      **** 
 958:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4078              		.loc 1 958 0
 4079 005e 704B     		ldr	r3, .L238+16
 4080 0060 1B88     		ldrh	r3, [r3]
 4081 0062 1AB2     		sxth	r2, r3
 4082 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4083 0068 002B     		cmp	r3, #0
 4084 006a B8BF     		it	lt
 4085 006c 5B42     		rsblt	r3, r3, #0
 4086 006e D31A     		subs	r3, r2, r3
 4087 0070 BB60     		str	r3, [r7, #8]
 959:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4088              		.loc 1 959 0
 4089 0072 BB68     		ldr	r3, [r7, #8]
 4090 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4091 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4092 007c BB68     		ldr	r3, [r7, #8]
 4093 007e 92FBF3F3 		sdiv	r3, r2, r3
 4094 0082 1846     		mov	r0, r3
 4095 0084 FFF7FEFF 		bl	__aeabi_i2d
 4096 0088 0446     		mov	r4, r0
 4097 008a 0D46     		mov	r5, r1
 4098 008c BB68     		ldr	r3, [r7, #8]
 4099 008e 002B     		cmp	r3, #0
 4100 0090 B8BF     		it	lt
 4101 0092 5B42     		rsblt	r3, r3, #0
 4102 0094 1846     		mov	r0, r3
 4103 0096 FFF7FEFF 		bl	__aeabi_i2d
 4104 009a 0246     		mov	r2, r0
 4105 009c 0B46     		mov	r3, r1
 4106 009e 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 91


 4107 00a0 1946     		mov	r1, r3
 4108 00a2 FFF7FEFF 		bl	sqrt
 4109 00a6 0246     		mov	r2, r0
 4110 00a8 0B46     		mov	r3, r1
 4111 00aa 2046     		mov	r0, r4
 4112 00ac 2946     		mov	r1, r5
 4113 00ae FFF7FEFF 		bl	__aeabi_dmul
 4114 00b2 0246     		mov	r2, r0
 4115 00b4 0B46     		mov	r3, r1
 4116 00b6 1046     		mov	r0, r2
 4117 00b8 1946     		mov	r1, r3
 4118 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4119 00be 0346     		mov	r3, r0
 4120 00c0 7B60     		str	r3, [r7, #4]
 960:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4121              		.loc 1 960 0
 4122 00c2 584B     		ldr	r3, .L238+20
 4123 00c4 1B88     		ldrh	r3, [r3]
 4124 00c6 1BB2     		sxth	r3, r3
 4125 00c8 1846     		mov	r0, r3
 4126 00ca FFF7FEFF 		bl	__aeabi_i2d
 4127 00ce 0446     		mov	r4, r0
 4128 00d0 0D46     		mov	r5, r1
 4129 00d2 7868     		ldr	r0, [r7, #4]
 4130 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4131 00d8 0246     		mov	r2, r0
 4132 00da 0B46     		mov	r3, r1
 4133 00dc 1046     		mov	r0, r2
 4134 00de 1946     		mov	r1, r3
 4135 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4136 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4137 00e8 0246     		mov	r2, r0
 4138 00ea 0B46     		mov	r3, r1
 4139 00ec 2046     		mov	r0, r4
 4140 00ee 2946     		mov	r1, r5
 4141 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4142 00f4 0246     		mov	r2, r0
 4143 00f6 0B46     		mov	r3, r1
 4144 00f8 1046     		mov	r0, r2
 4145 00fa 1946     		mov	r1, r3
 4146 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4147 0100 0346     		mov	r3, r0
 4148 0102 9AB2     		uxth	r2, r3
 4149 0104 474B     		ldr	r3, .L238+20
 4150 0106 1A80     		strh	r2, [r3]	@ movhi
 961:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4151              		.loc 1 961 0
 4152 0108 474B     		ldr	r3, .L238+24
 4153 010a 1B88     		ldrh	r3, [r3]
 4154 010c 1AB2     		sxth	r2, r3
 4155 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4156 0112 002B     		cmp	r3, #0
 4157 0114 B8BF     		it	lt
 4158 0116 5B42     		rsblt	r3, r3, #0
 4159 0118 D31A     		subs	r3, r2, r3
 4160 011a BB60     		str	r3, [r7, #8]
 962:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 92


 4161              		.loc 1 962 0
 4162 011c BB68     		ldr	r3, [r7, #8]
 4163 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4164 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4165 0126 BB68     		ldr	r3, [r7, #8]
 4166 0128 92FBF3F3 		sdiv	r3, r2, r3
 4167 012c 1846     		mov	r0, r3
 4168 012e FFF7FEFF 		bl	__aeabi_i2d
 4169 0132 0446     		mov	r4, r0
 4170 0134 0D46     		mov	r5, r1
 4171 0136 BB68     		ldr	r3, [r7, #8]
 4172 0138 002B     		cmp	r3, #0
 4173 013a B8BF     		it	lt
 4174 013c 5B42     		rsblt	r3, r3, #0
 4175 013e 1846     		mov	r0, r3
 4176 0140 FFF7FEFF 		bl	__aeabi_i2d
 4177 0144 0246     		mov	r2, r0
 4178 0146 0B46     		mov	r3, r1
 4179 0148 1046     		mov	r0, r2
 4180 014a 1946     		mov	r1, r3
 4181 014c FFF7FEFF 		bl	sqrt
 4182 0150 0246     		mov	r2, r0
 4183 0152 0B46     		mov	r3, r1
 4184 0154 2046     		mov	r0, r4
 4185 0156 2946     		mov	r1, r5
 4186 0158 FFF7FEFF 		bl	__aeabi_dmul
 4187 015c 0246     		mov	r2, r0
 4188 015e 0B46     		mov	r3, r1
 4189 0160 1046     		mov	r0, r2
 4190 0162 1946     		mov	r1, r3
 4191 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4192 0168 0346     		mov	r3, r0
 4193 016a 7B60     		str	r3, [r7, #4]
 963:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4194              		.loc 1 963 0
 4195 016c 2F4B     		ldr	r3, .L238+28
 4196 016e 1B88     		ldrh	r3, [r3]
 4197 0170 1BB2     		sxth	r3, r3
 4198 0172 1846     		mov	r0, r3
 4199 0174 FFF7FEFF 		bl	__aeabi_i2d
 4200 0178 0446     		mov	r4, r0
 4201 017a 0D46     		mov	r5, r1
 4202 017c 7868     		ldr	r0, [r7, #4]
 4203 017e FFF7FEFF 		bl	__aeabi_i2d
 4204 0182 0246     		mov	r2, r0
 4205 0184 0B46     		mov	r3, r1
 4206 0186 1046     		mov	r0, r2
 4207 0188 1946     		mov	r1, r3
 4208 018a D7E90423 		ldrd	r2, [r7, #16]
 4209 018e FFF7FEFF 		bl	__aeabi_dmul
 4210 0192 0246     		mov	r2, r0
 4211 0194 0B46     		mov	r3, r1
 4212 0196 2046     		mov	r0, r4
 4213 0198 2946     		mov	r1, r5
 4214 019a FFF7FEFF 		bl	__aeabi_dadd
 4215 019e 0246     		mov	r2, r0
 4216 01a0 0B46     		mov	r3, r1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 93


 4217 01a2 1046     		mov	r0, r2
 4218 01a4 1946     		mov	r1, r3
 4219 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4220 01aa 0346     		mov	r3, r0
 4221 01ac 9AB2     		uxth	r2, r3
 4222 01ae 1F4B     		ldr	r3, .L238+28
 4223 01b0 1A80     		strh	r2, [r3]	@ movhi
 964:.\main.c      ****     
 965:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4224              		.loc 1 965 0
 4225 01b2 1E4B     		ldr	r3, .L238+28
 4226 01b4 1B88     		ldrh	r3, [r3]
 4227 01b6 1BB2     		sxth	r3, r3
 4228 01b8 002B     		cmp	r3, #0
 4229 01ba 02DA     		bge	.L234
 4230              		.loc 1 965 0 is_stmt 0 discriminator 1
 4231 01bc 1B4B     		ldr	r3, .L238+28
 4232 01be 0022     		movs	r2, #0
 4233 01c0 1A80     		strh	r2, [r3]	@ movhi
 4234              	.L234:
 966:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4235              		.loc 1 966 0 is_stmt 1
 4236 01c2 184B     		ldr	r3, .L238+20
 4237 01c4 1B88     		ldrh	r3, [r3]
 4238 01c6 1BB2     		sxth	r3, r3
 4239 01c8 002B     		cmp	r3, #0
 4240 01ca 02DA     		bge	.L235
 4241              		.loc 1 966 0 is_stmt 0 discriminator 1
 4242 01cc 154B     		ldr	r3, .L238+20
 4243 01ce 0022     		movs	r2, #0
 4244 01d0 1A80     		strh	r2, [r3]	@ movhi
 4245              	.L235:
 967:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4246              		.loc 1 967 0 is_stmt 1
 4247 01d2 164B     		ldr	r3, .L238+28
 4248 01d4 1B88     		ldrh	r3, [r3]
 4249 01d6 1BB2     		sxth	r3, r3
 4250 01d8 642B     		cmp	r3, #100
 4251 01da 02DD     		ble	.L236
 4252              		.loc 1 967 0 is_stmt 0 discriminator 1
 4253 01dc 134B     		ldr	r3, .L238+28
 4254 01de 6422     		movs	r2, #100
 4255 01e0 1A80     		strh	r2, [r3]	@ movhi
 4256              	.L236:
 968:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4257              		.loc 1 968 0 is_stmt 1
 4258 01e2 104B     		ldr	r3, .L238+20
 4259 01e4 1B88     		ldrh	r3, [r3]
 4260 01e6 1BB2     		sxth	r3, r3
 4261 01e8 642B     		cmp	r3, #100
 4262 01ea 02DD     		ble	.L237
 4263              		.loc 1 968 0 is_stmt 0 discriminator 1
 4264 01ec 0D4B     		ldr	r3, .L238+20
 4265 01ee 6422     		movs	r2, #100
 4266 01f0 1A80     		strh	r2, [r3]	@ movhi
 4267              	.L237:
 969:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 94


 4268              		.loc 1 969 0 is_stmt 1
 4269 01f2 0C4B     		ldr	r3, .L238+20
 4270 01f4 1B88     		ldrh	r3, [r3]
 4271 01f6 DBB2     		uxtb	r3, r3
 4272 01f8 1846     		mov	r0, r3
 4273 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 970:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4274              		.loc 1 970 0
 4275 01fe 0B4B     		ldr	r3, .L238+28
 4276 0200 1B88     		ldrh	r3, [r3]
 4277 0202 DBB2     		uxtb	r3, r3
 4278 0204 1846     		mov	r0, r3
 4279 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4280              	.L230:
 971:.\main.c      **** }
 4281              		.loc 1 971 0
 4282 020a 2037     		adds	r7, r7, #32
 4283              		.cfi_def_cfa_offset 16
 4284 020c BD46     		mov	sp, r7
 4285              		.cfi_def_cfa_register 13
 4286              		@ sp needed
 4287 020e B0BD     		pop	{r4, r5, r7, pc}
 4288              	.L239:
 4289              		.align	2
 4290              	.L238:
 4291 0210 00000000 		.word	flag_calc_wheelspeed
 4292 0214 00000000 		.word	quad_diff1
 4293 0218 00000000 		.word	quad_diff2
 4294 021c 0000F03F 		.word	1072693248
 4295 0220 00000000 		.word	leftSpeedLimit
 4296 0224 00000000 		.word	left_duty_cycle
 4297 0228 00000000 		.word	rightSpeedLimit
 4298 022c 00000000 		.word	right_duty_cycle
 4299              		.cfi_endproc
 4300              	.LFE96:
 4301              		.size	Quad_Dec_response, .-Quad_Dec_response
 4302              		.section	.text.trackLine,"ax",%progbits
 4303              		.align	2
 4304              		.global	trackLine
 4305              		.thumb
 4306              		.thumb_func
 4307              		.type	trackLine, %function
 4308              	trackLine:
 4309              	.LFB97:
 972:.\main.c      **** 
 973:.\main.c      **** void trackLine()
 974:.\main.c      **** {
 4310              		.loc 1 974 0
 4311              		.cfi_startproc
 4312              		@ args = 0, pretend = 0, frame = 0
 4313              		@ frame_needed = 1, uses_anonymous_args = 0
 4314              		@ link register save eliminated.
 4315 0000 80B4     		push	{r7}
 4316              		.cfi_def_cfa_offset 4
 4317              		.cfi_offset 7, -4
 4318 0002 00AF     		add	r7, sp, #0
 4319              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 95


 975:.\main.c      ****  //removed from implementation
 976:.\main.c      **** }
 4320              		.loc 1 976 0
 4321 0004 BD46     		mov	sp, r7
 4322              		.cfi_def_cfa_register 13
 4323              		@ sp needed
 4324 0006 5DF8047B 		ldr	r7, [sp], #4
 4325              		.cfi_restore 7
 4326              		.cfi_def_cfa_offset 0
 4327 000a 7047     		bx	lr
 4328              		.cfi_endproc
 4329              	.LFE97:
 4330              		.size	trackLine, .-trackLine
 4331              		.global	leftTurnCount
 4332              		.bss
 4333              		.align	1
 4334              		.type	leftTurnCount, %object
 4335              		.size	leftTurnCount, 2
 4336              	leftTurnCount:
 4337 28e8 0000     		.space	2
 4338              		.global	rightTurnCount
 4339              		.align	1
 4340              		.type	rightTurnCount, %object
 4341              		.size	rightTurnCount, 2
 4342              	rightTurnCount:
 4343 28ea 0000     		.space	2
 4344              		.section	.text.trackLineZ,"ax",%progbits
 4345              		.align	2
 4346              		.global	trackLineZ
 4347              		.thumb
 4348              		.thumb_func
 4349              		.type	trackLineZ, %function
 4350              	trackLineZ:
 4351              	.LFB98:
 977:.\main.c      **** uint16 leftTurnCount = 0;
 978:.\main.c      **** uint16 rightTurnCount = 0;
 979:.\main.c      **** void trackLineZ()
 980:.\main.c      **** {
 4352              		.loc 1 980 0
 4353              		.cfi_startproc
 4354              		@ args = 0, pretend = 0, frame = 8
 4355              		@ frame_needed = 1, uses_anonymous_args = 0
 4356 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4357              		.cfi_def_cfa_offset 24
 4358              		.cfi_offset 4, -24
 4359              		.cfi_offset 5, -20
 4360              		.cfi_offset 7, -16
 4361              		.cfi_offset 8, -12
 4362              		.cfi_offset 9, -8
 4363              		.cfi_offset 14, -4
 4364 0004 82B0     		sub	sp, sp, #8
 4365              		.cfi_def_cfa_offset 32
 4366 0006 00AF     		add	r7, sp, #0
 4367              		.cfi_def_cfa_register 7
 981:.\main.c      ****     //read the value of the three central-front sensors
 982:.\main.c      ****     
 983:.\main.c      ****     uint8 nl = NLSens_out_Read();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 96


 4368              		.loc 1 983 0
 4369 0008 FFF7FEFF 		bl	NLSens_out_Read
 4370 000c 0346     		mov	r3, r0
 4371 000e FB71     		strb	r3, [r7, #7]
 984:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4372              		.loc 1 984 0
 4373 0010 FFF7FEFF 		bl	NRSens_out_Read
 4374 0014 0346     		mov	r3, r0
 4375 0016 BB71     		strb	r3, [r7, #6]
 985:.\main.c      ****     uint8 mid = MSens_out_Read();
 4376              		.loc 1 985 0
 4377 0018 FFF7FEFF 		bl	MSens_out_Read
 4378 001c 0346     		mov	r3, r0
 4379 001e 7B71     		strb	r3, [r7, #5]
 986:.\main.c      ****     
 987:.\main.c      ****         //if only the left one, hard left
 988:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4380              		.loc 1 988 0
 4381 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4382 0022 002B     		cmp	r3, #0
 4383 0024 27D0     		beq	.L242
 4384              		.loc 1 988 0 is_stmt 0 discriminator 1
 4385 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4386 0028 002B     		cmp	r3, #0
 4387 002a 24D1     		bne	.L242
 4388              		.loc 1 988 0 discriminator 2
 4389 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4390 002e 002B     		cmp	r3, #0
 4391 0030 21D1     		bne	.L242
 989:.\main.c      ****     {
 990:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4392              		.loc 1 990 0 is_stmt 1
 4393 0032 454B     		ldr	r3, .L247+8
 4394 0034 D3E90023 		ldrd	r2, [r3]
 4395 0038 1046     		mov	r0, r2
 4396 003a 1946     		mov	r1, r3
 4397 003c 40A3     		adr	r3, .L247
 4398 003e D3E90023 		ldrd	r2, [r3]
 4399 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4400 0046 0246     		mov	r2, r0
 4401 0048 0B46     		mov	r3, r1
 4402 004a 1446     		mov	r4, r2
 4403 004c 1D46     		mov	r5, r3
 4404 004e 3E4B     		ldr	r3, .L247+8
 4405 0050 D3E90023 		ldrd	r2, [r3]
 4406 0054 9046     		mov	r8, r2
 4407 0056 83F00049 		eor	r9, r3, #-2147483648
 4408 005a 4046     		mov	r0, r8
 4409 005c 4946     		mov	r1, r9
 4410 005e 38A3     		adr	r3, .L247
 4411 0060 D3E90023 		ldrd	r2, [r3]
 4412 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4413 0068 0246     		mov	r2, r0
 4414 006a 0B46     		mov	r3, r1
 4415 006c 2046     		mov	r0, r4
 4416 006e 2946     		mov	r1, r5
 4417 0070 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 97


 4418 0074 5FE0     		b	.L241
 4419              	.L242:
 991:.\main.c      ****     }
 992:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4420              		.loc 1 992 0
 4421 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4422 0078 002B     		cmp	r3, #0
 4423 007a 0ED0     		beq	.L244
 4424              		.loc 1 992 0 is_stmt 0 discriminator 1
 4425 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4426 007e 002B     		cmp	r3, #0
 4427 0080 0BD0     		beq	.L244
 4428              		.loc 1 992 0 discriminator 2
 4429 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4430 0084 002B     		cmp	r3, #0
 4431 0086 08D1     		bne	.L244
 993:.\main.c      ****     {
 994:.\main.c      ****         setSpeed(speed,speed);
 4432              		.loc 1 994 0 is_stmt 1
 4433 0088 2F4B     		ldr	r3, .L247+8
 4434 008a D3E90001 		ldrd	r0, [r3]
 4435 008e 2E4B     		ldr	r3, .L247+8
 4436 0090 D3E90023 		ldrd	r2, [r3]
 4437 0094 FFF7FEFF 		bl	setSpeed
 4438 0098 4DE0     		b	.L241
 4439              	.L244:
 995:.\main.c      ****     }
 996:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4440              		.loc 1 996 0
 4441 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4442 009c 002B     		cmp	r3, #0
 4443 009e 0ED0     		beq	.L245
 4444              		.loc 1 996 0 is_stmt 0 discriminator 1
 4445 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4446 00a2 002B     		cmp	r3, #0
 4447 00a4 0BD0     		beq	.L245
 4448              		.loc 1 996 0 discriminator 2
 4449 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4450 00a8 002B     		cmp	r3, #0
 4451 00aa 08D1     		bne	.L245
 997:.\main.c      ****     {
 998:.\main.c      ****         setSpeed(speed ,speed);
 4452              		.loc 1 998 0 is_stmt 1
 4453 00ac 264B     		ldr	r3, .L247+8
 4454 00ae D3E90001 		ldrd	r0, [r3]
 4455 00b2 254B     		ldr	r3, .L247+8
 4456 00b4 D3E90023 		ldrd	r2, [r3]
 4457 00b8 FFF7FEFF 		bl	setSpeed
 4458 00bc 3BE0     		b	.L241
 4459              	.L245:
 999:.\main.c      ****     }
1000:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4460              		.loc 1 1000 0
 4461 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4462 00c0 002B     		cmp	r3, #0
 4463 00c2 27D0     		beq	.L246
 4464              		.loc 1 1000 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 98


 4465 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4466 00c6 002B     		cmp	r3, #0
 4467 00c8 24D1     		bne	.L246
 4468              		.loc 1 1000 0 discriminator 2
 4469 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4470 00cc 002B     		cmp	r3, #0
 4471 00ce 21D1     		bne	.L246
1001:.\main.c      ****     {
1002:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4472              		.loc 1 1002 0 is_stmt 1
 4473 00d0 1D4B     		ldr	r3, .L247+8
 4474 00d2 D3E90023 		ldrd	r2, [r3]
 4475 00d6 1446     		mov	r4, r2
 4476 00d8 83F00045 		eor	r5, r3, #-2147483648
 4477 00dc 2046     		mov	r0, r4
 4478 00de 2946     		mov	r1, r5
 4479 00e0 17A3     		adr	r3, .L247
 4480 00e2 D3E90023 		ldrd	r2, [r3]
 4481 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4482 00ea 0246     		mov	r2, r0
 4483 00ec 0B46     		mov	r3, r1
 4484 00ee 1446     		mov	r4, r2
 4485 00f0 1D46     		mov	r5, r3
 4486 00f2 154B     		ldr	r3, .L247+8
 4487 00f4 D3E90023 		ldrd	r2, [r3]
 4488 00f8 1046     		mov	r0, r2
 4489 00fa 1946     		mov	r1, r3
 4490 00fc 10A3     		adr	r3, .L247
 4491 00fe D3E90023 		ldrd	r2, [r3]
 4492 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4493 0106 0246     		mov	r2, r0
 4494 0108 0B46     		mov	r3, r1
 4495 010a 2046     		mov	r0, r4
 4496 010c 2946     		mov	r1, r5
 4497 010e FFF7FEFF 		bl	setSpeed
 4498 0112 10E0     		b	.L241
 4499              	.L246:
1003:.\main.c      ****     }
1004:.\main.c      ****     else if (mid && !nr && !nl)
 4500              		.loc 1 1004 0
 4501 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4502 0116 002B     		cmp	r3, #0
 4503 0118 0DD0     		beq	.L241
 4504              		.loc 1 1004 0 is_stmt 0 discriminator 1
 4505 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4506 011c 002B     		cmp	r3, #0
 4507 011e 0AD1     		bne	.L241
 4508              		.loc 1 1004 0 discriminator 2
 4509 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4510 0122 002B     		cmp	r3, #0
 4511 0124 07D1     		bne	.L241
1005:.\main.c      ****     {
1006:.\main.c      ****         setSpeed(speed,speed);
 4512              		.loc 1 1006 0 is_stmt 1
 4513 0126 084B     		ldr	r3, .L247+8
 4514 0128 D3E90001 		ldrd	r0, [r3]
 4515 012c 064B     		ldr	r3, .L247+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 99


 4516 012e D3E90023 		ldrd	r2, [r3]
 4517 0132 FFF7FEFF 		bl	setSpeed
 4518              	.L241:
1007:.\main.c      ****     }
1008:.\main.c      **** }
 4519              		.loc 1 1008 0
 4520 0136 0837     		adds	r7, r7, #8
 4521              		.cfi_def_cfa_offset 24
 4522 0138 BD46     		mov	sp, r7
 4523              		.cfi_def_cfa_register 13
 4524              		@ sp needed
 4525 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4526              	.L248:
 4527 013e 00BF     		.align	3
 4528              	.L247:
 4529 0140 9A999999 		.word	-1717986918
 4530 0144 9999F93F 		.word	1073322393
 4531 0148 00000000 		.word	speed
 4532              		.cfi_endproc
 4533              	.LFE98:
 4534              		.size	trackLineZ, .-trackLineZ
 4535 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4536              		.align	2
 4537              		.global	trackLineU
 4538              		.thumb
 4539              		.thumb_func
 4540              		.type	trackLineU, %function
 4541              	trackLineU:
 4542              	.LFB99:
1009:.\main.c      **** 
1010:.\main.c      **** 
1011:.\main.c      **** void trackLineU()
1012:.\main.c      **** { 
 4543              		.loc 1 1012 0
 4544              		.cfi_startproc
 4545              		@ args = 0, pretend = 0, frame = 0
 4546              		@ frame_needed = 1, uses_anonymous_args = 0
 4547              		@ link register save eliminated.
 4548 0000 80B4     		push	{r7}
 4549              		.cfi_def_cfa_offset 4
 4550              		.cfi_offset 7, -4
 4551 0002 00AF     		add	r7, sp, #0
 4552              		.cfi_def_cfa_register 7
1013:.\main.c      **** //removed from final implementation
1014:.\main.c      **** }
 4553              		.loc 1 1014 0
 4554 0004 BD46     		mov	sp, r7
 4555              		.cfi_def_cfa_register 13
 4556              		@ sp needed
 4557 0006 5DF8047B 		ldr	r7, [sp], #4
 4558              		.cfi_restore 7
 4559              		.cfi_def_cfa_offset 0
 4560 000a 7047     		bx	lr
 4561              		.cfi_endproc
 4562              	.LFE99:
 4563              		.size	trackLineU, .-trackLineU
 4564              		.global	__aeabi_fadd
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 100


 4565              		.section	.rodata
 4566 00db 00       		.align	2
 4567              	.LC11:
 4568 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4568      65727920 
 4568      566F6C74 
 4568      6167653A 
 4568      2025646D 
 4569              		.section	.text.print_ADC,"ax",%progbits
 4570              		.align	2
 4571              		.global	print_ADC
 4572              		.thumb
 4573              		.thumb_func
 4574              		.type	print_ADC, %function
 4575              	print_ADC:
 4576              	.LFB100:
1015:.\main.c      **** 
1016:.\main.c      **** void print_ADC()
1017:.\main.c      **** {
 4577              		.loc 1 1017 0
 4578              		.cfi_startproc
 4579              		@ args = 0, pretend = 0, frame = 24
 4580              		@ frame_needed = 1, uses_anonymous_args = 0
 4581 0000 80B5     		push	{r7, lr}
 4582              		.cfi_def_cfa_offset 8
 4583              		.cfi_offset 7, -8
 4584              		.cfi_offset 14, -4
 4585 0002 86B0     		sub	sp, sp, #24
 4586              		.cfi_def_cfa_offset 32
 4587 0004 00AF     		add	r7, sp, #0
 4588              		.cfi_def_cfa_register 7
1018:.\main.c      ****    //usbPutString("HII\n");
1019:.\main.c      ****     if(flag_receive_ADC == 1)
 4589              		.loc 1 1019 0
 4590 0006 274B     		ldr	r3, .L253
 4591 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4592 000a 012B     		cmp	r3, #1
 4593 000c 46D1     		bne	.L250
 4594              	.LBB11:
1020:.\main.c      ****     {
1021:.\main.c      ****         //usbPutString("AAA\r\n");
1022:.\main.c      ****         flag_receive_ADC = 0;
 4595              		.loc 1 1022 0
 4596 000e 254B     		ldr	r3, .L253
 4597 0010 0022     		movs	r2, #0
 4598 0012 1A70     		strb	r2, [r3]
1023:.\main.c      ****         
1024:.\main.c      ****        // int8 channel = ADC_
1025:.\main.c      ****         float scalingFactor = 0.972;
 4599              		.loc 1 1025 0
 4600 0014 244B     		ldr	r3, .L253+4
 4601 0016 7B61     		str	r3, [r7, #20]	@ float
1026:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4602              		.loc 1 1026 0
 4603 0018 244B     		ldr	r3, .L253+8
 4604 001a 1B88     		ldrh	r3, [r3]
 4605 001c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 101


 4606 001e 41F28832 		movw	r2, #5000
 4607 0022 02FB03F3 		mul	r3, r2, r3
 4608 0026 002B     		cmp	r3, #0
 4609 0028 01DA     		bge	.L252
 4610 002a 03F6FF73 		addw	r3, r3, #4095
 4611              	.L252:
 4612 002e 1B13     		asrs	r3, r3, #12
 4613 0030 1846     		mov	r0, r3
 4614 0032 FFF7FEFF 		bl	__aeabi_i2f
 4615 0036 0346     		mov	r3, r0
 4616 0038 1846     		mov	r0, r3
 4617 003a 7969     		ldr	r1, [r7, #20]	@ float
 4618 003c FFF7FEFF 		bl	__aeabi_fmul
 4619 0040 0346     		mov	r3, r0
 4620 0042 1846     		mov	r0, r3
 4621 0044 1946     		mov	r1, r3
 4622 0046 FFF7FEFF 		bl	__aeabi_fadd
 4623 004a 0346     		mov	r3, r0
 4624 004c 1846     		mov	r0, r3
 4625 004e FFF7FEFF 		bl	__aeabi_f2iz
 4626 0052 0346     		mov	r3, r0
 4627 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1027:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4628              		.loc 1 1027 0
 4629 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4630 005a 154B     		ldr	r3, .L253+12
 4631 005c 1B88     		ldrh	r3, [r3]
 4632 005e 1BB2     		sxth	r3, r3
 4633 0060 1A44     		add	r2, r2, r3
 4634 0062 144B     		ldr	r3, .L253+16
 4635 0064 1B88     		ldrh	r3, [r3]
 4636 0066 1BB2     		sxth	r3, r3
 4637 0068 1344     		add	r3, r3, r2
 4638 006a 134A     		ldr	r2, .L253+20
 4639 006c 82FB0312 		smull	r1, r2, r2, r3
 4640 0070 DB17     		asrs	r3, r3, #31
 4641 0072 D31A     		subs	r3, r2, r3
 4642 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1028:.\main.c      ****         prevVoltage2 = prevVoltage;
 4643              		.loc 1 1028 0
 4644 0076 0E4B     		ldr	r3, .L253+12
 4645 0078 1A88     		ldrh	r2, [r3]
 4646 007a 0E4B     		ldr	r3, .L253+16
 4647 007c 1A80     		strh	r2, [r3]	@ movhi
1029:.\main.c      ****         prevVoltage = converted_val;
 4648              		.loc 1 1029 0
 4649 007e 0C4A     		ldr	r2, .L253+12
 4650 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4651 0082 1380     		strh	r3, [r2]	@ movhi
1030:.\main.c      ****         
1031:.\main.c      ****         char result_str[16];
1032:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4652              		.loc 1 1032 0
 4653 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4654 0088 3A46     		mov	r2, r7
 4655 008a 1046     		mov	r0, r2
 4656 008c 0B49     		ldr	r1, .L253+24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 102


 4657 008e 1A46     		mov	r2, r3
 4658 0090 FFF7FEFF 		bl	sprintf
1033:.\main.c      ****         
1034:.\main.c      ****         usbPutString(result_str);
 4659              		.loc 1 1034 0
 4660 0094 3B46     		mov	r3, r7
 4661 0096 1846     		mov	r0, r3
 4662 0098 FFF7FEFF 		bl	usbPutString
 4663              	.L250:
 4664              	.LBE11:
1035:.\main.c      ****     }
1036:.\main.c      **** }
 4665              		.loc 1 1036 0
 4666 009c 1837     		adds	r7, r7, #24
 4667              		.cfi_def_cfa_offset 8
 4668 009e BD46     		mov	sp, r7
 4669              		.cfi_def_cfa_register 13
 4670              		@ sp needed
 4671 00a0 80BD     		pop	{r7, pc}
 4672              	.L254:
 4673 00a2 00BF     		.align	2
 4674              	.L253:
 4675 00a4 00000000 		.word	flag_receive_ADC
 4676 00a8 FED4783F 		.word	1064883454
 4677 00ac 00000000 		.word	adc_result
 4678 00b0 00000000 		.word	prevVoltage
 4679 00b4 00000000 		.word	prevVoltage2
 4680 00b8 56555555 		.word	1431655766
 4681 00bc DC000000 		.word	.LC11
 4682              		.cfi_endproc
 4683              	.LFE100:
 4684              		.size	print_ADC, .-print_ADC
 4685              		.section	.rodata
 4686              		.align	2
 4687              	.LC12:
 4688 00f4 52535349 		.ascii	"RSSI:\000"
 4688      3A00
 4689 00fa 0000     		.align	2
 4690              	.LC13:
 4691 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4691      00
 4692 0101 000000   		.align	2
 4693              	.LC14:
 4694 0104 726F626F 		.ascii	"robot_x:\000"
 4694      745F783A 
 4694      00
 4695 010d 000000   		.align	2
 4696              	.LC15:
 4697 0110 726F626F 		.ascii	"robot_y:\000"
 4697      745F793A 
 4697      00
 4698 0119 000000   		.align	2
 4699              	.LC16:
 4700 011c 726F626F 		.ascii	"robot_dir:\000"
 4700      745F6469 
 4700      723A00
 4701 0127 00       		.section	.text.print_RF,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 103


 4702              		.align	2
 4703              		.global	print_RF
 4704              		.thumb
 4705              		.thumb_func
 4706              		.type	print_RF, %function
 4707              	print_RF:
 4708              	.LFB101:
1037:.\main.c      **** 
1038:.\main.c      **** void print_RF()
1039:.\main.c      **** {
 4709              		.loc 1 1039 0
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 16
 4712              		@ frame_needed = 1, uses_anonymous_args = 0
 4713 0000 80B5     		push	{r7, lr}
 4714              		.cfi_def_cfa_offset 8
 4715              		.cfi_offset 7, -8
 4716              		.cfi_offset 14, -4
 4717 0002 84B0     		sub	sp, sp, #16
 4718              		.cfi_def_cfa_offset 24
 4719 0004 00AF     		add	r7, sp, #0
 4720              		.cfi_def_cfa_register 7
1040:.\main.c      ****     if(flag_print_rf == 1)
 4721              		.loc 1 1040 0
 4722 0006 254B     		ldr	r3, .L257
 4723 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4724 000a 012B     		cmp	r3, #1
 4725 000c 42D1     		bne	.L255
 4726              	.LBB12:
1041:.\main.c      ****     {
1042:.\main.c      ****         char printString[16];
1043:.\main.c      ****         flag_print_rf = 0;
 4727              		.loc 1 1043 0
 4728 000e 234B     		ldr	r3, .L257
 4729 0010 0022     		movs	r2, #0
 4730 0012 1A70     		strb	r2, [r3]
1044:.\main.c      ****         usbPutString("RSSI:");
 4731              		.loc 1 1044 0
 4732 0014 2248     		ldr	r0, .L257+4
 4733 0016 FFF7FEFF 		bl	usbPutString
1045:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4734              		.loc 1 1045 0
 4735 001a 224B     		ldr	r3, .L257+8
 4736 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4737 001e 5BB2     		sxtb	r3, r3
 4738 0020 3A46     		mov	r2, r7
 4739 0022 1046     		mov	r0, r2
 4740 0024 2049     		ldr	r1, .L257+12
 4741 0026 1A46     		mov	r2, r3
 4742 0028 FFF7FEFF 		bl	sprintf
1046:.\main.c      ****         usbPutString(printString);
 4743              		.loc 1 1046 0
 4744 002c 3B46     		mov	r3, r7
 4745 002e 1846     		mov	r0, r3
 4746 0030 FFF7FEFF 		bl	usbPutString
1047:.\main.c      ****         usbPutString("robot_x:");
 4747              		.loc 1 1047 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 104


 4748 0034 1D48     		ldr	r0, .L257+16
 4749 0036 FFF7FEFF 		bl	usbPutString
1048:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4750              		.loc 1 1048 0
 4751 003a 1A4B     		ldr	r3, .L257+8
 4752 003c 5B88     		ldrh	r3, [r3, #2]
 4753 003e 1BB2     		sxth	r3, r3
 4754 0040 3A46     		mov	r2, r7
 4755 0042 1046     		mov	r0, r2
 4756 0044 1849     		ldr	r1, .L257+12
 4757 0046 1A46     		mov	r2, r3
 4758 0048 FFF7FEFF 		bl	sprintf
1049:.\main.c      ****         usbPutString(printString);
 4759              		.loc 1 1049 0
 4760 004c 3B46     		mov	r3, r7
 4761 004e 1846     		mov	r0, r3
 4762 0050 FFF7FEFF 		bl	usbPutString
1050:.\main.c      ****         usbPutString("robot_y:");
 4763              		.loc 1 1050 0
 4764 0054 1648     		ldr	r0, .L257+20
 4765 0056 FFF7FEFF 		bl	usbPutString
1051:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4766              		.loc 1 1051 0
 4767 005a 124B     		ldr	r3, .L257+8
 4768 005c 9B88     		ldrh	r3, [r3, #4]
 4769 005e 1BB2     		sxth	r3, r3
 4770 0060 3A46     		mov	r2, r7
 4771 0062 1046     		mov	r0, r2
 4772 0064 1049     		ldr	r1, .L257+12
 4773 0066 1A46     		mov	r2, r3
 4774 0068 FFF7FEFF 		bl	sprintf
1052:.\main.c      ****         usbPutString(printString);
 4775              		.loc 1 1052 0
 4776 006c 3B46     		mov	r3, r7
 4777 006e 1846     		mov	r0, r3
 4778 0070 FFF7FEFF 		bl	usbPutString
1053:.\main.c      ****         usbPutString("robot_dir:");
 4779              		.loc 1 1053 0
 4780 0074 0F48     		ldr	r0, .L257+24
 4781 0076 FFF7FEFF 		bl	usbPutString
1054:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4782              		.loc 1 1054 0
 4783 007a 0A4B     		ldr	r3, .L257+8
 4784 007c DB88     		ldrh	r3, [r3, #6]
 4785 007e 1BB2     		sxth	r3, r3
 4786 0080 3A46     		mov	r2, r7
 4787 0082 1046     		mov	r0, r2
 4788 0084 0849     		ldr	r1, .L257+12
 4789 0086 1A46     		mov	r2, r3
 4790 0088 FFF7FEFF 		bl	sprintf
1055:.\main.c      ****         usbPutString(printString);
 4791              		.loc 1 1055 0
 4792 008c 3B46     		mov	r3, r7
 4793 008e 1846     		mov	r0, r3
 4794 0090 FFF7FEFF 		bl	usbPutString
 4795              	.L255:
 4796              	.LBE12:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 105


1056:.\main.c      ****     }
1057:.\main.c      **** }
 4797              		.loc 1 1057 0
 4798 0094 1037     		adds	r7, r7, #16
 4799              		.cfi_def_cfa_offset 8
 4800 0096 BD46     		mov	sp, r7
 4801              		.cfi_def_cfa_register 13
 4802              		@ sp needed
 4803 0098 80BD     		pop	{r7, pc}
 4804              	.L258:
 4805 009a 00BF     		.align	2
 4806              	.L257:
 4807 009c 00000000 		.word	flag_print_rf
 4808 00a0 F4000000 		.word	.LC12
 4809 00a4 00000000 		.word	system_state
 4810 00a8 FC000000 		.word	.LC13
 4811 00ac 04010000 		.word	.LC14
 4812 00b0 10010000 		.word	.LC15
 4813 00b4 1C010000 		.word	.LC16
 4814              		.cfi_endproc
 4815              	.LFE101:
 4816              		.size	print_RF, .-print_RF
 4817              		.section	.text.readFrontSensors,"ax",%progbits
 4818              		.align	2
 4819              		.global	readFrontSensors
 4820              		.thumb
 4821              		.thumb_func
 4822              		.type	readFrontSensors, %function
 4823              	readFrontSensors:
 4824              	.LFB102:
1058:.\main.c      **** 
1059:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1060:.\main.c      **** {
 4825              		.loc 1 1060 0
 4826              		.cfi_startproc
 4827              		@ args = 0, pretend = 0, frame = 8
 4828              		@ frame_needed = 1, uses_anonymous_args = 0
 4829 0000 90B5     		push	{r4, r7, lr}
 4830              		.cfi_def_cfa_offset 12
 4831              		.cfi_offset 4, -12
 4832              		.cfi_offset 7, -8
 4833              		.cfi_offset 14, -4
 4834 0002 83B0     		sub	sp, sp, #12
 4835              		.cfi_def_cfa_offset 24
 4836 0004 00AF     		add	r7, sp, #0
 4837              		.cfi_def_cfa_register 7
 4838 0006 7860     		str	r0, [r7, #4]
1061:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4839              		.loc 1 1061 0
 4840 0008 FFF7FEFF 		bl	FLSens_out_Read
 4841 000c 0346     		mov	r3, r0
 4842 000e 1A46     		mov	r2, r3
 4843 0010 7B68     		ldr	r3, [r7, #4]
 4844 0012 1A70     		strb	r2, [r3]
1062:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4845              		.loc 1 1062 0
 4846 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 106


 4847 0016 5C1C     		adds	r4, r3, #1
 4848 0018 FFF7FEFF 		bl	NLSens_out_Read
 4849 001c 0346     		mov	r3, r0
 4850 001e 2370     		strb	r3, [r4]
1063:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4851              		.loc 1 1063 0
 4852 0020 7B68     		ldr	r3, [r7, #4]
 4853 0022 9C1C     		adds	r4, r3, #2
 4854 0024 FFF7FEFF 		bl	MSens_out_Read
 4855 0028 0346     		mov	r3, r0
 4856 002a 2370     		strb	r3, [r4]
1064:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4857              		.loc 1 1064 0
 4858 002c 7B68     		ldr	r3, [r7, #4]
 4859 002e DC1C     		adds	r4, r3, #3
 4860 0030 FFF7FEFF 		bl	NRSens_out_Read
 4861 0034 0346     		mov	r3, r0
 4862 0036 2370     		strb	r3, [r4]
1065:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4863              		.loc 1 1065 0
 4864 0038 7B68     		ldr	r3, [r7, #4]
 4865 003a 1C1D     		adds	r4, r3, #4
 4866 003c FFF7FEFF 		bl	FRSens_out_Read
 4867 0040 0346     		mov	r3, r0
 4868 0042 2370     		strb	r3, [r4]
1066:.\main.c      **** }
 4869              		.loc 1 1066 0
 4870 0044 0C37     		adds	r7, r7, #12
 4871              		.cfi_def_cfa_offset 12
 4872 0046 BD46     		mov	sp, r7
 4873              		.cfi_def_cfa_register 13
 4874              		@ sp needed
 4875 0048 90BD     		pop	{r4, r7, pc}
 4876              		.cfi_endproc
 4877              	.LFE102:
 4878              		.size	readFrontSensors, .-readFrontSensors
 4879 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4880              		.align	2
 4881              		.global	usbPutString
 4882              		.thumb
 4883              		.thumb_func
 4884              		.type	usbPutString, %function
 4885              	usbPutString:
 4886              	.LFB103:
1067:.\main.c      **** 
1068:.\main.c      **** 
1069:.\main.c      **** //* ========================================
1070:.\main.c      **** void usbPutString(char *s)
1071:.\main.c      **** {
 4887              		.loc 1 1071 0
 4888              		.cfi_startproc
 4889              		@ args = 0, pretend = 0, frame = 16
 4890              		@ frame_needed = 1, uses_anonymous_args = 0
 4891 0000 80B5     		push	{r7, lr}
 4892              		.cfi_def_cfa_offset 8
 4893              		.cfi_offset 7, -8
 4894              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 107


 4895 0002 84B0     		sub	sp, sp, #16
 4896              		.cfi_def_cfa_offset 24
 4897 0004 00AF     		add	r7, sp, #0
 4898              		.cfi_def_cfa_register 7
 4899 0006 7860     		str	r0, [r7, #4]
1072:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1073:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1074:.\main.c      **** //  length to 62 char (63rd char is a '!')
1075:.\main.c      ****     if (USE_USB && portOpen)
 4900              		.loc 1 1075 0
 4901 0008 154B     		ldr	r3, .L264
 4902 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4903 000c 002B     		cmp	r3, #0
 4904 000e 23D0     		beq	.L260
 4905              	.LBB13:
1076:.\main.c      ****     {
1077:.\main.c      ****             uint32 cnt = 0;
 4906              		.loc 1 1077 0
 4907 0010 0023     		movs	r3, #0
 4908 0012 FB60     		str	r3, [r7, #12]
1078:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4909              		.loc 1 1078 0
 4910 0014 0AE0     		b	.L262
 4911              	.L263:
1079:.\main.c      ****             {
1080:.\main.c      ****                 cnt++;
 4912              		.loc 1 1080 0
 4913 0016 FB68     		ldr	r3, [r7, #12]
 4914 0018 0133     		adds	r3, r3, #1
 4915 001a FB60     		str	r3, [r7, #12]
1081:.\main.c      ****                 if(cnt == 3000000){
 4916              		.loc 1 1081 0
 4917 001c FB68     		ldr	r3, [r7, #12]
 4918 001e 114A     		ldr	r2, .L264+4
 4919 0020 9342     		cmp	r3, r2
 4920 0022 03D1     		bne	.L262
1082:.\main.c      ****                     portOpen = 0;
 4921              		.loc 1 1082 0
 4922 0024 0E4B     		ldr	r3, .L264
 4923 0026 0022     		movs	r2, #0
 4924 0028 1A70     		strb	r2, [r3]
1083:.\main.c      ****                     return;
 4925              		.loc 1 1083 0
 4926 002a 15E0     		b	.L260
 4927              	.L262:
1078:.\main.c      ****             {
 4928              		.loc 1 1078 0
 4929 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4930 0030 0346     		mov	r3, r0
 4931 0032 002B     		cmp	r3, #0
 4932 0034 EFD0     		beq	.L263
1084:.\main.c      ****                 }
1085:.\main.c      ****             }
1086:.\main.c      ****             s[63]='\0';
 4933              		.loc 1 1086 0
 4934 0036 7B68     		ldr	r3, [r7, #4]
 4935 0038 3F33     		adds	r3, r3, #63
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 108


 4936 003a 0022     		movs	r2, #0
 4937 003c 1A70     		strb	r2, [r3]
1087:.\main.c      ****             s[62]='!';
 4938              		.loc 1 1087 0
 4939 003e 7B68     		ldr	r3, [r7, #4]
 4940 0040 3E33     		adds	r3, r3, #62
 4941 0042 2122     		movs	r2, #33
 4942 0044 1A70     		strb	r2, [r3]
1088:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4943              		.loc 1 1088 0
 4944 0046 7868     		ldr	r0, [r7, #4]
 4945 0048 FFF7FEFF 		bl	strlen
 4946 004c 0346     		mov	r3, r0
 4947 004e 9BB2     		uxth	r3, r3
 4948 0050 7868     		ldr	r0, [r7, #4]
 4949 0052 1946     		mov	r1, r3
 4950 0054 FFF7FEFF 		bl	USBUART_PutData
 4951              	.L260:
 4952              	.LBE13:
1089:.\main.c      ****     }
1090:.\main.c      **** }
 4953              		.loc 1 1090 0
 4954 0058 1037     		adds	r7, r7, #16
 4955              		.cfi_def_cfa_offset 8
 4956 005a BD46     		mov	sp, r7
 4957              		.cfi_def_cfa_register 13
 4958              		@ sp needed
 4959 005c 80BD     		pop	{r7, pc}
 4960              	.L265:
 4961 005e 00BF     		.align	2
 4962              	.L264:
 4963 0060 00000000 		.word	portOpen
 4964 0064 C0C62D00 		.word	3000000
 4965              		.cfi_endproc
 4966              	.LFE103:
 4967              		.size	usbPutString, .-usbPutString
 4968              		.section	.text.usbPutChar,"ax",%progbits
 4969              		.align	2
 4970              		.global	usbPutChar
 4971              		.thumb
 4972              		.thumb_func
 4973              		.type	usbPutChar, %function
 4974              	usbPutChar:
 4975              	.LFB104:
1091:.\main.c      **** //* ========================================
1092:.\main.c      **** void usbPutChar(char c)
1093:.\main.c      **** {
 4976              		.loc 1 1093 0
 4977              		.cfi_startproc
 4978              		@ args = 0, pretend = 0, frame = 16
 4979              		@ frame_needed = 1, uses_anonymous_args = 0
 4980 0000 80B5     		push	{r7, lr}
 4981              		.cfi_def_cfa_offset 8
 4982              		.cfi_offset 7, -8
 4983              		.cfi_offset 14, -4
 4984 0002 84B0     		sub	sp, sp, #16
 4985              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 109


 4986 0004 00AF     		add	r7, sp, #0
 4987              		.cfi_def_cfa_register 7
 4988 0006 0346     		mov	r3, r0
 4989 0008 FB71     		strb	r3, [r7, #7]
1094:.\main.c      ****     if (USE_USB && portOpen)    
 4990              		.loc 1 1094 0
 4991 000a 0F4B     		ldr	r3, .L270
 4992 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4993 000e 002B     		cmp	r3, #0
 4994 0010 16D0     		beq	.L266
 4995              	.LBB14:
1095:.\main.c      ****     {    
1096:.\main.c      ****         uint32 cnt = 0;
 4996              		.loc 1 1096 0
 4997 0012 0023     		movs	r3, #0
 4998 0014 FB60     		str	r3, [r7, #12]
1097:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4999              		.loc 1 1097 0
 5000 0016 0AE0     		b	.L268
 5001              	.L269:
1098:.\main.c      ****             cnt++;
 5002              		.loc 1 1098 0
 5003 0018 FB68     		ldr	r3, [r7, #12]
 5004 001a 0133     		adds	r3, r3, #1
 5005 001c FB60     		str	r3, [r7, #12]
1099:.\main.c      ****             if(cnt == 3000000){
 5006              		.loc 1 1099 0
 5007 001e FB68     		ldr	r3, [r7, #12]
 5008 0020 0A4A     		ldr	r2, .L270+4
 5009 0022 9342     		cmp	r3, r2
 5010 0024 03D1     		bne	.L268
1100:.\main.c      ****                 portOpen = 0;
 5011              		.loc 1 1100 0
 5012 0026 084B     		ldr	r3, .L270
 5013 0028 0022     		movs	r2, #0
 5014 002a 1A70     		strb	r2, [r3]
1101:.\main.c      ****                 return;
 5015              		.loc 1 1101 0
 5016 002c 08E0     		b	.L266
 5017              	.L268:
1097:.\main.c      ****             cnt++;
 5018              		.loc 1 1097 0
 5019 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5020 0032 0346     		mov	r3, r0
 5021 0034 002B     		cmp	r3, #0
 5022 0036 EFD0     		beq	.L269
1102:.\main.c      ****             }
1103:.\main.c      ****         }
1104:.\main.c      ****         USBUART_PutChar(c);
 5023              		.loc 1 1104 0
 5024 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5025 003a 1846     		mov	r0, r3
 5026 003c FFF7FEFF 		bl	USBUART_PutChar
 5027              	.L266:
 5028              	.LBE14:
1105:.\main.c      ****     }    
1106:.\main.c      **** }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 110


 5029              		.loc 1 1106 0
 5030 0040 1037     		adds	r7, r7, #16
 5031              		.cfi_def_cfa_offset 8
 5032 0042 BD46     		mov	sp, r7
 5033              		.cfi_def_cfa_register 13
 5034              		@ sp needed
 5035 0044 80BD     		pop	{r7, pc}
 5036              	.L271:
 5037 0046 00BF     		.align	2
 5038              	.L270:
 5039 0048 00000000 		.word	portOpen
 5040 004c C0C62D00 		.word	3000000
 5041              		.cfi_endproc
 5042              	.LFE104:
 5043              		.size	usbPutChar, .-usbPutChar
 5044              		.section	.text.uart_set_PWM,"ax",%progbits
 5045              		.align	2
 5046              		.global	uart_set_PWM
 5047              		.thumb
 5048              		.thumb_func
 5049              		.type	uart_set_PWM, %function
 5050              	uart_set_PWM:
 5051              	.LFB105:
1107:.\main.c      **** //* ========================================
1108:.\main.c      **** 
1109:.\main.c      **** void uart_set_PWM()
1110:.\main.c      **** {
 5052              		.loc 1 1110 0
 5053              		.cfi_startproc
 5054              		@ args = 0, pretend = 0, frame = 0
 5055              		@ frame_needed = 1, uses_anonymous_args = 0
 5056              		@ link register save eliminated.
 5057 0000 80B4     		push	{r7}
 5058              		.cfi_def_cfa_offset 4
 5059              		.cfi_offset 7, -4
 5060 0002 00AF     		add	r7, sp, #0
 5061              		.cfi_def_cfa_register 7
1111:.\main.c      ****     //removed from final implementation
1112:.\main.c      **** }
 5062              		.loc 1 1112 0
 5063 0004 BD46     		mov	sp, r7
 5064              		.cfi_def_cfa_register 13
 5065              		@ sp needed
 5066 0006 5DF8047B 		ldr	r7, [sp], #4
 5067              		.cfi_restore 7
 5068              		.cfi_def_cfa_offset 0
 5069 000a 7047     		bx	lr
 5070              		.cfi_endproc
 5071              	.LFE105:
 5072              		.size	uart_set_PWM, .-uart_set_PWM
 5073              		.text
 5074              	.Letext0:
 5075              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5076              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5077              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5078              		.file 5 ".\\vars.h"
 5079              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 111


 5080              		.file 7 ".\\pathfinder.h"
 5081              		.section	.debug_info,"",%progbits
 5082              	.Ldebug_info0:
 5083 0000 460E0000 		.4byte	0xe46
 5084 0004 0400     		.2byte	0x4
 5085 0006 00000000 		.4byte	.Ldebug_abbrev0
 5086 000a 04       		.byte	0x4
 5087 000b 01       		.uleb128 0x1
 5088 000c AB040000 		.4byte	.LASF196
 5089 0010 01       		.byte	0x1
 5090 0011 89090000 		.4byte	.LASF197
 5091 0015 1C000000 		.4byte	.LASF198
 5092 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5093 001d 00000000 		.4byte	0
 5094 0021 00000000 		.4byte	.Ldebug_line0
 5095 0025 02       		.uleb128 0x2
 5096 0026 01       		.byte	0x1
 5097 0027 06       		.byte	0x6
 5098 0028 C3080000 		.4byte	.LASF0
 5099 002c 02       		.uleb128 0x2
 5100 002d 01       		.byte	0x1
 5101 002e 08       		.byte	0x8
 5102 002f 00080000 		.4byte	.LASF1
 5103 0033 02       		.uleb128 0x2
 5104 0034 02       		.byte	0x2
 5105 0035 05       		.byte	0x5
 5106 0036 61060000 		.4byte	.LASF2
 5107 003a 02       		.uleb128 0x2
 5108 003b 02       		.byte	0x2
 5109 003c 07       		.byte	0x7
 5110 003d CF080000 		.4byte	.LASF3
 5111 0041 03       		.uleb128 0x3
 5112 0042 D7000000 		.4byte	.LASF5
 5113 0046 02       		.byte	0x2
 5114 0047 3F       		.byte	0x3f
 5115 0048 4C000000 		.4byte	0x4c
 5116 004c 02       		.uleb128 0x2
 5117 004d 04       		.byte	0x4
 5118 004e 05       		.byte	0x5
 5119 004f 95060000 		.4byte	.LASF4
 5120 0053 03       		.uleb128 0x3
 5121 0054 0E080000 		.4byte	.LASF6
 5122 0058 02       		.byte	0x2
 5123 0059 41       		.byte	0x41
 5124 005a 5E000000 		.4byte	0x5e
 5125 005e 02       		.uleb128 0x2
 5126 005f 04       		.byte	0x4
 5127 0060 07       		.byte	0x7
 5128 0061 99070000 		.4byte	.LASF7
 5129 0065 02       		.uleb128 0x2
 5130 0066 08       		.byte	0x8
 5131 0067 05       		.byte	0x5
 5132 0068 75040000 		.4byte	.LASF8
 5133 006c 02       		.uleb128 0x2
 5134 006d 08       		.byte	0x8
 5135 006e 07       		.byte	0x7
 5136 006f 8E020000 		.4byte	.LASF9
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 112


 5137 0073 04       		.uleb128 0x4
 5138 0074 04       		.byte	0x4
 5139 0075 05       		.byte	0x5
 5140 0076 696E7400 		.ascii	"int\000"
 5141 007a 02       		.uleb128 0x2
 5142 007b 04       		.byte	0x4
 5143 007c 07       		.byte	0x7
 5144 007d BF000000 		.4byte	.LASF10
 5145 0081 02       		.uleb128 0x2
 5146 0082 04       		.byte	0x4
 5147 0083 07       		.byte	0x7
 5148 0084 90070000 		.4byte	.LASF11
 5149 0088 05       		.uleb128 0x5
 5150 0089 04       		.byte	0x4
 5151 008a 8E000000 		.4byte	0x8e
 5152 008e 02       		.uleb128 0x2
 5153 008f 01       		.byte	0x1
 5154 0090 08       		.byte	0x8
 5155 0091 BD030000 		.4byte	.LASF12
 5156 0095 03       		.uleb128 0x3
 5157 0096 B7070000 		.4byte	.LASF13
 5158 009a 03       		.byte	0x3
 5159 009b 2C       		.byte	0x2c
 5160 009c 41000000 		.4byte	0x41
 5161 00a0 03       		.uleb128 0x3
 5162 00a1 0E020000 		.4byte	.LASF14
 5163 00a5 03       		.byte	0x3
 5164 00a6 2D       		.byte	0x2d
 5165 00a7 53000000 		.4byte	0x53
 5166 00ab 06       		.uleb128 0x6
 5167 00ac 16090000 		.4byte	.LASF15
 5168 00b0 04       		.byte	0x4
 5169 00b1 9201     		.2byte	0x192
 5170 00b3 2C000000 		.4byte	0x2c
 5171 00b7 06       		.uleb128 0x6
 5172 00b8 05040000 		.4byte	.LASF16
 5173 00bc 04       		.byte	0x4
 5174 00bd 9301     		.2byte	0x193
 5175 00bf 3A000000 		.4byte	0x3a
 5176 00c3 06       		.uleb128 0x6
 5177 00c4 7C050000 		.4byte	.LASF17
 5178 00c8 04       		.byte	0x4
 5179 00c9 9401     		.2byte	0x194
 5180 00cb 5E000000 		.4byte	0x5e
 5181 00cf 06       		.uleb128 0x6
 5182 00d0 0C040000 		.4byte	.LASF18
 5183 00d4 04       		.byte	0x4
 5184 00d5 9501     		.2byte	0x195
 5185 00d7 25000000 		.4byte	0x25
 5186 00db 06       		.uleb128 0x6
 5187 00dc E1000000 		.4byte	.LASF19
 5188 00e0 04       		.byte	0x4
 5189 00e1 9601     		.2byte	0x196
 5190 00e3 33000000 		.4byte	0x33
 5191 00e7 02       		.uleb128 0x2
 5192 00e8 04       		.byte	0x4
 5193 00e9 04       		.byte	0x4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 113


 5194 00ea 2E020000 		.4byte	.LASF20
 5195 00ee 02       		.uleb128 0x2
 5196 00ef 08       		.byte	0x8
 5197 00f0 04       		.byte	0x4
 5198 00f1 1C090000 		.4byte	.LASF21
 5199 00f5 07       		.uleb128 0x7
 5200 00f6 A0000000 		.4byte	0xa0
 5201 00fa 05010000 		.4byte	0x105
 5202 00fe 08       		.uleb128 0x8
 5203 00ff 81000000 		.4byte	0x81
 5204 0103 01       		.byte	0x1
 5205 0104 00       		.byte	0
 5206 0105 02       		.uleb128 0x2
 5207 0106 08       		.byte	0x8
 5208 0107 04       		.byte	0x4
 5209 0108 F8050000 		.4byte	.LASF22
 5210 010c 09       		.uleb128 0x9
 5211 010d 5B080000 		.4byte	.LASF31
 5212 0111 01       		.byte	0x1
 5213 0112 05       		.byte	0x5
 5214 0113 5D       		.byte	0x5d
 5215 0114 49010000 		.4byte	0x149
 5216 0118 0A       		.uleb128 0xa
 5217 0119 4D020000 		.4byte	.LASF23
 5218 011d 00       		.sleb128 0
 5219 011e 0A       		.uleb128 0xa
 5220 011f F4000000 		.4byte	.LASF24
 5221 0123 01       		.sleb128 1
 5222 0124 0A       		.uleb128 0xa
 5223 0125 5B000000 		.4byte	.LASF25
 5224 0129 02       		.sleb128 2
 5225 012a 0A       		.uleb128 0xa
 5226 012b E7050000 		.4byte	.LASF26
 5227 012f 03       		.sleb128 3
 5228 0130 0A       		.uleb128 0xa
 5229 0131 1F010000 		.4byte	.LASF27
 5230 0135 04       		.sleb128 4
 5231 0136 0A       		.uleb128 0xa
 5232 0137 F7010000 		.4byte	.LASF28
 5233 013b 05       		.sleb128 5
 5234 013c 0A       		.uleb128 0xa
 5235 013d 0B070000 		.4byte	.LASF29
 5236 0141 06       		.sleb128 6
 5237 0142 0A       		.uleb128 0xa
 5238 0143 56090000 		.4byte	.LASF30
 5239 0147 07       		.sleb128 7
 5240 0148 00       		.byte	0
 5241 0149 09       		.uleb128 0x9
 5242 014a 5A010000 		.4byte	.LASF32
 5243 014e 01       		.byte	0x1
 5244 014f 05       		.byte	0x5
 5245 0150 5E       		.byte	0x5e
 5246 0151 86010000 		.4byte	0x186
 5247 0155 0A       		.uleb128 0xa
 5248 0156 DD060000 		.4byte	.LASF33
 5249 015a 00       		.sleb128 0
 5250 015b 0A       		.uleb128 0xa
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 114


 5251 015c 3C040000 		.4byte	.LASF34
 5252 0160 01       		.sleb128 1
 5253 0161 0A       		.uleb128 0xa
 5254 0162 AC060000 		.4byte	.LASF35
 5255 0166 02       		.sleb128 2
 5256 0167 0A       		.uleb128 0xa
 5257 0168 B1010000 		.4byte	.LASF36
 5258 016c 03       		.sleb128 3
 5259 016d 0A       		.uleb128 0xa
 5260 016e F4080000 		.4byte	.LASF37
 5261 0172 04       		.sleb128 4
 5262 0173 0A       		.uleb128 0xa
 5263 0174 34090000 		.4byte	.LASF38
 5264 0178 05       		.sleb128 5
 5265 0179 0A       		.uleb128 0xa
 5266 017a 70000000 		.4byte	.LASF39
 5267 017e 06       		.sleb128 6
 5268 017f 0A       		.uleb128 0xa
 5269 0180 FE060000 		.4byte	.LASF40
 5270 0184 07       		.sleb128 7
 5271 0185 00       		.byte	0
 5272 0186 0B       		.uleb128 0xb
 5273 0187 9C050000 		.4byte	.LASF199
 5274 018b 20       		.byte	0x20
 5275 018c 05       		.byte	0x5
 5276 018d 64       		.byte	0x64
 5277 018e 5F020000 		.4byte	0x25f
 5278 0192 0C       		.uleb128 0xc
 5279 0193 BA050000 		.4byte	.LASF41
 5280 0197 05       		.byte	0x5
 5281 0198 65       		.byte	0x65
 5282 0199 CF000000 		.4byte	0xcf
 5283 019d 00       		.byte	0
 5284 019e 0C       		.uleb128 0xc
 5285 019f 47020000 		.4byte	.LASF42
 5286 01a3 05       		.byte	0x5
 5287 01a4 66       		.byte	0x66
 5288 01a5 AB000000 		.4byte	0xab
 5289 01a9 01       		.byte	0x1
 5290 01aa 0C       		.uleb128 0xc
 5291 01ab D8070000 		.4byte	.LASF43
 5292 01af 05       		.byte	0x5
 5293 01b0 67       		.byte	0x67
 5294 01b1 DB000000 		.4byte	0xdb
 5295 01b5 02       		.byte	0x2
 5296 01b6 0C       		.uleb128 0xc
 5297 01b7 91030000 		.4byte	.LASF44
 5298 01bb 05       		.byte	0x5
 5299 01bc 68       		.byte	0x68
 5300 01bd DB000000 		.4byte	0xdb
 5301 01c1 04       		.byte	0x4
 5302 01c2 0C       		.uleb128 0xc
 5303 01c3 E2080000 		.4byte	.LASF45
 5304 01c7 05       		.byte	0x5
 5305 01c8 69       		.byte	0x69
 5306 01c9 DB000000 		.4byte	0xdb
 5307 01cd 06       		.byte	0x6
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 115


 5308 01ce 0C       		.uleb128 0xc
 5309 01cf 5C090000 		.4byte	.LASF46
 5310 01d3 05       		.byte	0x5
 5311 01d4 6A       		.byte	0x6a
 5312 01d5 DB000000 		.4byte	0xdb
 5313 01d9 08       		.byte	0x8
 5314 01da 0C       		.uleb128 0xc
 5315 01db 42050000 		.4byte	.LASF47
 5316 01df 05       		.byte	0x5
 5317 01e0 6B       		.byte	0x6b
 5318 01e1 DB000000 		.4byte	0xdb
 5319 01e5 0A       		.byte	0xa
 5320 01e6 0C       		.uleb128 0xc
 5321 01e7 C2030000 		.4byte	.LASF48
 5322 01eb 05       		.byte	0x5
 5323 01ec 6C       		.byte	0x6c
 5324 01ed DB000000 		.4byte	0xdb
 5325 01f1 0C       		.byte	0xc
 5326 01f2 0C       		.uleb128 0xc
 5327 01f3 C9050000 		.4byte	.LASF49
 5328 01f7 05       		.byte	0x5
 5329 01f8 6D       		.byte	0x6d
 5330 01f9 DB000000 		.4byte	0xdb
 5331 01fd 0E       		.byte	0xe
 5332 01fe 0C       		.uleb128 0xc
 5333 01ff 90040000 		.4byte	.LASF50
 5334 0203 05       		.byte	0x5
 5335 0204 6E       		.byte	0x6e
 5336 0205 DB000000 		.4byte	0xdb
 5337 0209 10       		.byte	0x10
 5338 020a 0C       		.uleb128 0xc
 5339 020b 50070000 		.4byte	.LASF51
 5340 020f 05       		.byte	0x5
 5341 0210 6F       		.byte	0x6f
 5342 0211 DB000000 		.4byte	0xdb
 5343 0215 12       		.byte	0x12
 5344 0216 0C       		.uleb128 0xc
 5345 0217 80090000 		.4byte	.LASF52
 5346 021b 05       		.byte	0x5
 5347 021c 70       		.byte	0x70
 5348 021d DB000000 		.4byte	0xdb
 5349 0221 14       		.byte	0x14
 5350 0222 0C       		.uleb128 0xc
 5351 0223 1E040000 		.4byte	.LASF53
 5352 0227 05       		.byte	0x5
 5353 0228 71       		.byte	0x71
 5354 0229 DB000000 		.4byte	0xdb
 5355 022d 16       		.byte	0x16
 5356 022e 0C       		.uleb128 0xc
 5357 022f 52010000 		.4byte	.LASF54
 5358 0233 05       		.byte	0x5
 5359 0234 72       		.byte	0x72
 5360 0235 DB000000 		.4byte	0xdb
 5361 0239 18       		.byte	0x18
 5362 023a 0C       		.uleb128 0xc
 5363 023b FD030000 		.4byte	.LASF55
 5364 023f 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 116


 5365 0240 73       		.byte	0x73
 5366 0241 DB000000 		.4byte	0xdb
 5367 0245 1A       		.byte	0x1a
 5368 0246 0C       		.uleb128 0xc
 5369 0247 39050000 		.4byte	.LASF56
 5370 024b 05       		.byte	0x5
 5371 024c 74       		.byte	0x74
 5372 024d DB000000 		.4byte	0xdb
 5373 0251 1C       		.byte	0x1c
 5374 0252 0C       		.uleb128 0xc
 5375 0253 17020000 		.4byte	.LASF57
 5376 0257 05       		.byte	0x5
 5377 0258 75       		.byte	0x75
 5378 0259 DB000000 		.4byte	0xdb
 5379 025d 1E       		.byte	0x1e
 5380 025e 00       		.byte	0
 5381 025f 0D       		.uleb128 0xd
 5382 0260 03090000 		.4byte	.LASF58
 5383 0264 01       		.byte	0x1
 5384 0265 60       		.byte	0x60
 5385 0266 00000000 		.4byte	.LFB63
 5386 026a 0C000000 		.4byte	.LFE63-.LFB63
 5387 026e 01       		.uleb128 0x1
 5388 026f 9C       		.byte	0x9c
 5389 0270 0E       		.uleb128 0xe
 5390 0271 58070000 		.4byte	.LASF59
 5391 0275 01       		.byte	0x1
 5392 0276 66       		.byte	0x66
 5393 0277 00000000 		.4byte	.LFB64
 5394 027b 2C000000 		.4byte	.LFE64-.LFB64
 5395 027f 01       		.uleb128 0x1
 5396 0280 9C       		.byte	0x9c
 5397 0281 0E       		.uleb128 0xe
 5398 0282 24020000 		.4byte	.LASF60
 5399 0286 01       		.byte	0x1
 5400 0287 6F       		.byte	0x6f
 5401 0288 00000000 		.4byte	.LFB65
 5402 028c A0010000 		.4byte	.LFE65-.LFB65
 5403 0290 01       		.uleb128 0x1
 5404 0291 9C       		.byte	0x9c
 5405 0292 0E       		.uleb128 0xe
 5406 0293 BE020000 		.4byte	.LASF61
 5407 0297 01       		.byte	0x1
 5408 0298 A7       		.byte	0xa7
 5409 0299 00000000 		.4byte	.LFB66
 5410 029d AC000000 		.4byte	.LFE66-.LFB66
 5411 02a1 01       		.uleb128 0x1
 5412 02a2 9C       		.byte	0x9c
 5413 02a3 0D       		.uleb128 0xd
 5414 02a4 2D080000 		.4byte	.LASF62
 5415 02a8 01       		.byte	0x1
 5416 02a9 CA       		.byte	0xca
 5417 02aa 00000000 		.4byte	.LFB67
 5418 02ae 20000000 		.4byte	.LFE67-.LFB67
 5419 02b2 01       		.uleb128 0x1
 5420 02b3 9C       		.byte	0x9c
 5421 02b4 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 117


 5422 02b5 44030000 		.4byte	.LASF63
 5423 02b9 01       		.byte	0x1
 5424 02ba D1       		.byte	0xd1
 5425 02bb 00000000 		.4byte	.LFB68
 5426 02bf 28000000 		.4byte	.LFE68-.LFB68
 5427 02c3 01       		.uleb128 0x1
 5428 02c4 9C       		.byte	0x9c
 5429 02c5 0E       		.uleb128 0xe
 5430 02c6 04060000 		.4byte	.LASF64
 5431 02ca 01       		.byte	0x1
 5432 02cb DA       		.byte	0xda
 5433 02cc 00000000 		.4byte	.LFB69
 5434 02d0 0A000000 		.4byte	.LFE69-.LFB69
 5435 02d4 01       		.uleb128 0x1
 5436 02d5 9C       		.byte	0x9c
 5437 02d6 0E       		.uleb128 0xe
 5438 02d7 21060000 		.4byte	.LASF65
 5439 02db 01       		.byte	0x1
 5440 02dc DF       		.byte	0xdf
 5441 02dd 00000000 		.4byte	.LFB70
 5442 02e1 28000000 		.4byte	.LFE70-.LFB70
 5443 02e5 01       		.uleb128 0x1
 5444 02e6 9C       		.byte	0x9c
 5445 02e7 0F       		.uleb128 0xf
 5446 02e8 FE080000 		.4byte	.LASF74
 5447 02ec 01       		.byte	0x1
 5448 02ed EA       		.byte	0xea
 5449 02ee 73000000 		.4byte	0x73
 5450 02f2 00000000 		.4byte	.LFB71
 5451 02f6 2C070000 		.4byte	.LFE71-.LFB71
 5452 02fa 01       		.uleb128 0x1
 5453 02fb 9C       		.byte	0x9c
 5454 02fc EA030000 		.4byte	0x3ea
 5455 0300 10       		.uleb128 0x10
 5456 0301 35030000 		.4byte	.LASF66
 5457 0305 01       		.byte	0x1
 5458 0306 2301     		.2byte	0x123
 5459 0308 B7000000 		.4byte	0xb7
 5460 030c 02       		.uleb128 0x2
 5461 030d 91       		.byte	0x91
 5462 030e 76       		.sleb128 -10
 5463 030f 11       		.uleb128 0x11
 5464 0310 66000000 		.4byte	.LBB2
 5465 0314 A8060000 		.4byte	.LBE2-.LBB2
 5466 0318 10       		.uleb128 0x10
 5467 0319 B1020000 		.4byte	.LASF67
 5468 031d 01       		.byte	0x1
 5469 031e 3101     		.2byte	0x131
 5470 0320 EA030000 		.4byte	0x3ea
 5471 0324 02       		.uleb128 0x2
 5472 0325 91       		.byte	0x91
 5473 0326 6C       		.sleb128 -20
 5474 0327 11       		.uleb128 0x11
 5475 0328 3C010000 		.4byte	.LBB3
 5476 032c 70050000 		.4byte	.LBE3-.LBB3
 5477 0330 10       		.uleb128 0x10
 5478 0331 A2040000 		.4byte	.LASF68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 118


 5479 0335 01       		.byte	0x1
 5480 0336 5B01     		.2byte	0x15b
 5481 0338 8E000000 		.4byte	0x8e
 5482 033c 02       		.uleb128 0x2
 5483 033d 91       		.byte	0x91
 5484 033e 75       		.sleb128 -11
 5485 033f 12       		.uleb128 0x12
 5486 0340 88010000 		.4byte	.LBB4
 5487 0344 F4010000 		.4byte	.LBE4-.LBB4
 5488 0348 75030000 		.4byte	0x375
 5489 034c 13       		.uleb128 0x13
 5490 034d 6D657300 		.ascii	"mes\000"
 5491 0351 01       		.byte	0x1
 5492 0352 6201     		.2byte	0x162
 5493 0354 FA030000 		.4byte	0x3fa
 5494 0358 02       		.uleb128 0x2
 5495 0359 91       		.byte	0x91
 5496 035a 5C       		.sleb128 -36
 5497 035b 11       		.uleb128 0x11
 5498 035c B0010000 		.4byte	.LBB5
 5499 0360 CC010000 		.4byte	.LBE5-.LBB5
 5500 0364 10       		.uleb128 0x10
 5501 0365 11040000 		.4byte	.LASF69
 5502 0369 01       		.byte	0x1
 5503 036a 7301     		.2byte	0x173
 5504 036c AB000000 		.4byte	0xab
 5505 0370 02       		.uleb128 0x2
 5506 0371 91       		.byte	0x91
 5507 0372 74       		.sleb128 -12
 5508 0373 00       		.byte	0
 5509 0374 00       		.byte	0
 5510 0375 12       		.uleb128 0x12
 5511 0376 D6030000 		.4byte	.LBB6
 5512 037a 30000000 		.4byte	.LBE6-.LBB6
 5513 037e 92030000 		.4byte	0x392
 5514 0382 10       		.uleb128 0x10
 5515 0383 FA000000 		.4byte	.LASF70
 5516 0387 01       		.byte	0x1
 5517 0388 A901     		.2byte	0x1a9
 5518 038a 8E000000 		.4byte	0x8e
 5519 038e 02       		.uleb128 0x2
 5520 038f 91       		.byte	0x91
 5521 0390 71       		.sleb128 -15
 5522 0391 00       		.byte	0
 5523 0392 12       		.uleb128 0x12
 5524 0393 26040000 		.4byte	.LBB7
 5525 0397 C6000000 		.4byte	.LBE7-.LBB7
 5526 039b BE030000 		.4byte	0x3be
 5527 039f 13       		.uleb128 0x13
 5528 03a0 6D657300 		.ascii	"mes\000"
 5529 03a4 01       		.byte	0x1
 5530 03a5 B801     		.2byte	0x1b8
 5531 03a7 FA030000 		.4byte	0x3fa
 5532 03ab 02       		.uleb128 0x2
 5533 03ac 91       		.byte	0x91
 5534 03ad 4C       		.sleb128 -52
 5535 03ae 10       		.uleb128 0x10
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 119


 5536 03af 11040000 		.4byte	.LASF69
 5537 03b3 01       		.byte	0x1
 5538 03b4 BC01     		.2byte	0x1bc
 5539 03b6 AB000000 		.4byte	0xab
 5540 03ba 02       		.uleb128 0x2
 5541 03bb 91       		.byte	0x91
 5542 03bc 73       		.sleb128 -13
 5543 03bd 00       		.byte	0
 5544 03be 11       		.uleb128 0x11
 5545 03bf 04050000 		.4byte	.LBB8
 5546 03c3 9E010000 		.4byte	.LBE8-.LBB8
 5547 03c7 13       		.uleb128 0x13
 5548 03c8 6D657300 		.ascii	"mes\000"
 5549 03cc 01       		.byte	0x1
 5550 03cd D901     		.2byte	0x1d9
 5551 03cf FA030000 		.4byte	0x3fa
 5552 03d3 03       		.uleb128 0x3
 5553 03d4 91       		.byte	0x91
 5554 03d5 BC7F     		.sleb128 -68
 5555 03d7 10       		.uleb128 0x10
 5556 03d8 11040000 		.4byte	.LASF69
 5557 03dc 01       		.byte	0x1
 5558 03dd DD01     		.2byte	0x1dd
 5559 03df AB000000 		.4byte	0xab
 5560 03e3 02       		.uleb128 0x2
 5561 03e4 91       		.byte	0x91
 5562 03e5 72       		.sleb128 -14
 5563 03e6 00       		.byte	0
 5564 03e7 00       		.byte	0
 5565 03e8 00       		.byte	0
 5566 03e9 00       		.byte	0
 5567 03ea 07       		.uleb128 0x7
 5568 03eb AB000000 		.4byte	0xab
 5569 03ef FA030000 		.4byte	0x3fa
 5570 03f3 08       		.uleb128 0x8
 5571 03f4 81000000 		.4byte	0x81
 5572 03f8 04       		.byte	0x4
 5573 03f9 00       		.byte	0
 5574 03fa 07       		.uleb128 0x7
 5575 03fb 8E000000 		.4byte	0x8e
 5576 03ff 0A040000 		.4byte	0x40a
 5577 0403 08       		.uleb128 0x8
 5578 0404 81000000 		.4byte	0x81
 5579 0408 0F       		.byte	0xf
 5580 0409 00       		.byte	0
 5581 040a 14       		.uleb128 0x14
 5582 040b 3C090000 		.4byte	.LASF77
 5583 040f 01       		.byte	0x1
 5584 0410 3802     		.2byte	0x238
 5585 0412 00000000 		.4byte	.LFB72
 5586 0416 60010000 		.4byte	.LFE72-.LFB72
 5587 041a 01       		.uleb128 0x1
 5588 041b 9C       		.byte	0x9c
 5589 041c 58040000 		.4byte	0x458
 5590 0420 11       		.uleb128 0x11
 5591 0421 10000000 		.4byte	.LBB9
 5592 0425 34010000 		.4byte	.LBE9-.LBB9
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 120


 5593 0429 10       		.uleb128 0x10
 5594 042a 45010000 		.4byte	.LASF71
 5595 042e 01       		.byte	0x1
 5596 042f 3E02     		.2byte	0x23e
 5597 0431 B7000000 		.4byte	0xb7
 5598 0435 02       		.uleb128 0x2
 5599 0436 91       		.byte	0x91
 5600 0437 76       		.sleb128 -10
 5601 0438 10       		.uleb128 0x10
 5602 0439 AB070000 		.4byte	.LASF72
 5603 043d 01       		.byte	0x1
 5604 043e 3F02     		.2byte	0x23f
 5605 0440 58040000 		.4byte	0x458
 5606 0444 02       		.uleb128 0x2
 5607 0445 91       		.byte	0x91
 5608 0446 68       		.sleb128 -24
 5609 0447 10       		.uleb128 0x10
 5610 0448 53020000 		.4byte	.LASF73
 5611 044c 01       		.byte	0x1
 5612 044d 4002     		.2byte	0x240
 5613 044f 58040000 		.4byte	0x458
 5614 0453 02       		.uleb128 0x2
 5615 0454 91       		.byte	0x91
 5616 0455 5C       		.sleb128 -36
 5617 0456 00       		.byte	0
 5618 0457 00       		.byte	0
 5619 0458 07       		.uleb128 0x7
 5620 0459 8E000000 		.4byte	0x8e
 5621 045d 68040000 		.4byte	0x468
 5622 0461 08       		.uleb128 0x8
 5623 0462 81000000 		.4byte	0x81
 5624 0466 0B       		.byte	0xb
 5625 0467 00       		.byte	0
 5626 0468 15       		.uleb128 0x15
 5627 0469 DB030000 		.4byte	.LASF75
 5628 046d 01       		.byte	0x1
 5629 046e 7902     		.2byte	0x279
 5630 0470 00000000 		.4byte	.LFB73
 5631 0474 18000000 		.4byte	.LFE73-.LFB73
 5632 0478 01       		.uleb128 0x1
 5633 0479 9C       		.byte	0x9c
 5634 047a 8E040000 		.4byte	0x48e
 5635 047e 16       		.uleb128 0x16
 5636 047f 64697200 		.ascii	"dir\000"
 5637 0483 01       		.byte	0x1
 5638 0484 7902     		.2byte	0x279
 5639 0486 AB000000 		.4byte	0xab
 5640 048a 02       		.uleb128 0x2
 5641 048b 91       		.byte	0x91
 5642 048c 77       		.sleb128 -9
 5643 048d 00       		.byte	0
 5644 048e 15       		.uleb128 0x15
 5645 048f 30040000 		.4byte	.LASF76
 5646 0493 01       		.byte	0x1
 5647 0494 7E02     		.2byte	0x27e
 5648 0496 00000000 		.4byte	.LFB74
 5649 049a 18000000 		.4byte	.LFE74-.LFB74
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 121


 5650 049e 01       		.uleb128 0x1
 5651 049f 9C       		.byte	0x9c
 5652 04a0 B4040000 		.4byte	0x4b4
 5653 04a4 16       		.uleb128 0x16
 5654 04a5 64697200 		.ascii	"dir\000"
 5655 04a9 01       		.byte	0x1
 5656 04aa 7E02     		.2byte	0x27e
 5657 04ac AB000000 		.4byte	0xab
 5658 04b0 02       		.uleb128 0x2
 5659 04b1 91       		.byte	0x91
 5660 04b2 77       		.sleb128 -9
 5661 04b3 00       		.byte	0
 5662 04b4 17       		.uleb128 0x17
 5663 04b5 61080000 		.4byte	.LASF78
 5664 04b9 01       		.byte	0x1
 5665 04ba 8302     		.2byte	0x283
 5666 04bc 00000000 		.4byte	.LFB75
 5667 04c0 54000000 		.4byte	.LFE75-.LFB75
 5668 04c4 01       		.uleb128 0x1
 5669 04c5 9C       		.byte	0x9c
 5670 04c6 DA040000 		.4byte	0x4da
 5671 04ca 13       		.uleb128 0x13
 5672 04cb 6D657300 		.ascii	"mes\000"
 5673 04cf 01       		.byte	0x1
 5674 04d0 8802     		.2byte	0x288
 5675 04d2 FA030000 		.4byte	0x3fa
 5676 04d6 02       		.uleb128 0x2
 5677 04d7 91       		.byte	0x91
 5678 04d8 68       		.sleb128 -24
 5679 04d9 00       		.byte	0
 5680 04da 15       		.uleb128 0x15
 5681 04db 34020000 		.4byte	.LASF79
 5682 04df 01       		.byte	0x1
 5683 04e0 8D02     		.2byte	0x28d
 5684 04e2 00000000 		.4byte	.LFB76
 5685 04e6 F4000000 		.4byte	.LFE76-.LFB76
 5686 04ea 01       		.uleb128 0x1
 5687 04eb 9C       		.byte	0x9c
 5688 04ec 2D050000 		.4byte	0x52d
 5689 04f0 18       		.uleb128 0x18
 5690 04f1 29070000 		.4byte	.LASF80
 5691 04f5 01       		.byte	0x1
 5692 04f6 8D02     		.2byte	0x28d
 5693 04f8 EE000000 		.4byte	0xee
 5694 04fc 02       		.uleb128 0x2
 5695 04fd 91       		.byte	0x91
 5696 04fe 68       		.sleb128 -24
 5697 04ff 18       		.uleb128 0x18
 5698 0500 5D040000 		.4byte	.LASF81
 5699 0504 01       		.byte	0x1
 5700 0505 8D02     		.2byte	0x28d
 5701 0507 EE000000 		.4byte	0xee
 5702 050b 02       		.uleb128 0x2
 5703 050c 91       		.byte	0x91
 5704 050d 60       		.sleb128 -32
 5705 050e 10       		.uleb128 0x10
 5706 050f 6C020000 		.4byte	.LASF82
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 122


 5707 0513 01       		.byte	0x1
 5708 0514 A202     		.2byte	0x2a2
 5709 0516 DB000000 		.4byte	0xdb
 5710 051a 02       		.uleb128 0x2
 5711 051b 91       		.byte	0x91
 5712 051c 76       		.sleb128 -10
 5713 051d 10       		.uleb128 0x10
 5714 051e 90050000 		.4byte	.LASF83
 5715 0522 01       		.byte	0x1
 5716 0523 A302     		.2byte	0x2a3
 5717 0525 DB000000 		.4byte	0xdb
 5718 0529 02       		.uleb128 0x2
 5719 052a 91       		.byte	0x91
 5720 052b 74       		.sleb128 -12
 5721 052c 00       		.byte	0
 5722 052d 19       		.uleb128 0x19
 5723 052e 72080000 		.4byte	.LASF84
 5724 0532 01       		.byte	0x1
 5725 0533 A902     		.2byte	0x2a9
 5726 0535 00000000 		.4byte	.LFB77
 5727 0539 18000000 		.4byte	.LFE77-.LFB77
 5728 053d 01       		.uleb128 0x1
 5729 053e 9C       		.byte	0x9c
 5730 053f 19       		.uleb128 0x19
 5731 0540 A0090000 		.4byte	.LASF85
 5732 0544 01       		.byte	0x1
 5733 0545 AF02     		.2byte	0x2af
 5734 0547 00000000 		.4byte	.LFB78
 5735 054b 18000000 		.4byte	.LFE78-.LFB78
 5736 054f 01       		.uleb128 0x1
 5737 0550 9C       		.byte	0x9c
 5738 0551 19       		.uleb128 0x19
 5739 0552 E3070000 		.4byte	.LASF86
 5740 0556 01       		.byte	0x1
 5741 0557 B502     		.2byte	0x2b5
 5742 0559 00000000 		.4byte	.LFB79
 5743 055d 22000000 		.4byte	.LFE79-.LFB79
 5744 0561 01       		.uleb128 0x1
 5745 0562 9C       		.byte	0x9c
 5746 0563 19       		.uleb128 0x19
 5747 0564 77020000 		.4byte	.LASF87
 5748 0568 01       		.byte	0x1
 5749 0569 BB02     		.2byte	0x2bb
 5750 056b 00000000 		.4byte	.LFB80
 5751 056f 1C000000 		.4byte	.LFE80-.LFB80
 5752 0573 01       		.uleb128 0x1
 5753 0574 9C       		.byte	0x9c
 5754 0575 19       		.uleb128 0x19
 5755 0576 46070000 		.4byte	.LASF88
 5756 057a 01       		.byte	0x1
 5757 057b C002     		.2byte	0x2c0
 5758 057d 00000000 		.4byte	.LFB81
 5759 0581 28000000 		.4byte	.LFE81-.LFB81
 5760 0585 01       		.uleb128 0x1
 5761 0586 9C       		.byte	0x9c
 5762 0587 19       		.uleb128 0x19
 5763 0588 85020000 		.4byte	.LASF89
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 123


 5764 058c 01       		.byte	0x1
 5765 058d C502     		.2byte	0x2c5
 5766 058f 00000000 		.4byte	.LFB82
 5767 0593 2C000000 		.4byte	.LFE82-.LFB82
 5768 0597 01       		.uleb128 0x1
 5769 0598 9C       		.byte	0x9c
 5770 0599 19       		.uleb128 0x19
 5771 059a F7030000 		.4byte	.LASF90
 5772 059e 01       		.byte	0x1
 5773 059f CA02     		.2byte	0x2ca
 5774 05a1 00000000 		.4byte	.LFB83
 5775 05a5 44000000 		.4byte	.LFE83-.LFB83
 5776 05a9 01       		.uleb128 0x1
 5777 05aa 9C       		.byte	0x9c
 5778 05ab 19       		.uleb128 0x19
 5779 05ac D8020000 		.4byte	.LASF91
 5780 05b0 01       		.byte	0x1
 5781 05b1 CF02     		.2byte	0x2cf
 5782 05b3 00000000 		.4byte	.LFB84
 5783 05b7 38000000 		.4byte	.LFE84-.LFB84
 5784 05bb 01       		.uleb128 0x1
 5785 05bc 9C       		.byte	0x9c
 5786 05bd 19       		.uleb128 0x19
 5787 05be 9E060000 		.4byte	.LASF92
 5788 05c2 01       		.byte	0x1
 5789 05c3 D802     		.2byte	0x2d8
 5790 05c5 00000000 		.4byte	.LFB85
 5791 05c9 38000000 		.4byte	.LFE85-.LFB85
 5792 05cd 01       		.uleb128 0x1
 5793 05ce 9C       		.byte	0x9c
 5794 05cf 19       		.uleb128 0x19
 5795 05d0 76060000 		.4byte	.LASF93
 5796 05d4 01       		.byte	0x1
 5797 05d5 E102     		.2byte	0x2e1
 5798 05d7 00000000 		.4byte	.LFB86
 5799 05db 38000000 		.4byte	.LFE86-.LFB86
 5800 05df 01       		.uleb128 0x1
 5801 05e0 9C       		.byte	0x9c
 5802 05e1 19       		.uleb128 0x19
 5803 05e2 02020000 		.4byte	.LASF94
 5804 05e6 01       		.byte	0x1
 5805 05e7 EA02     		.2byte	0x2ea
 5806 05e9 00000000 		.4byte	.LFB87
 5807 05ed 14000000 		.4byte	.LFE87-.LFB87
 5808 05f1 01       		.uleb128 0x1
 5809 05f2 9C       		.byte	0x9c
 5810 05f3 1A       		.uleb128 0x1a
 5811 05f4 EE020000 		.4byte	.LASF95
 5812 05f8 01       		.byte	0x1
 5813 05f9 EF02     		.2byte	0x2ef
 5814 05fb 00000000 		.4byte	.LFB88
 5815 05ff 18000000 		.4byte	.LFE88-.LFB88
 5816 0603 01       		.uleb128 0x1
 5817 0604 9C       		.byte	0x9c
 5818 0605 1A       		.uleb128 0x1a
 5819 0606 98040000 		.4byte	.LASF96
 5820 060a 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 124


 5821 060b F302     		.2byte	0x2f3
 5822 060d 00000000 		.4byte	.LFB89
 5823 0611 18000000 		.4byte	.LFE89-.LFB89
 5824 0615 01       		.uleb128 0x1
 5825 0616 9C       		.byte	0x9c
 5826 0617 1A       		.uleb128 0x1a
 5827 0618 AB090000 		.4byte	.LASF97
 5828 061c 01       		.byte	0x1
 5829 061d F802     		.2byte	0x2f8
 5830 061f 00000000 		.4byte	.LFB90
 5831 0623 18000000 		.4byte	.LFE90-.LFB90
 5832 0627 01       		.uleb128 0x1
 5833 0628 9C       		.byte	0x9c
 5834 0629 1A       		.uleb128 0x1a
 5835 062a 82030000 		.4byte	.LASF98
 5836 062e 01       		.byte	0x1
 5837 062f FC02     		.2byte	0x2fc
 5838 0631 00000000 		.4byte	.LFB91
 5839 0635 18000000 		.4byte	.LFE91-.LFB91
 5840 0639 01       		.uleb128 0x1
 5841 063a 9C       		.byte	0x9c
 5842 063b 15       		.uleb128 0x15
 5843 063c CD060000 		.4byte	.LASF99
 5844 0640 01       		.byte	0x1
 5845 0641 0303     		.2byte	0x303
 5846 0643 00000000 		.4byte	.LFB92
 5847 0647 B8000000 		.4byte	.LFE92-.LFB92
 5848 064b 01       		.uleb128 0x1
 5849 064c 9C       		.byte	0x9c
 5850 064d 61060000 		.4byte	0x661
 5851 0651 10       		.uleb128 0x10
 5852 0652 4A050000 		.4byte	.LASF100
 5853 0656 01       		.byte	0x1
 5854 0657 0403     		.2byte	0x304
 5855 0659 8E000000 		.4byte	0x8e
 5856 065d 02       		.uleb128 0x2
 5857 065e 91       		.byte	0x91
 5858 065f 6F       		.sleb128 -17
 5859 0660 00       		.byte	0
 5860 0661 15       		.uleb128 0x15
 5861 0662 EF050000 		.4byte	.LASF101
 5862 0666 01       		.byte	0x1
 5863 0667 2003     		.2byte	0x320
 5864 0669 00000000 		.4byte	.LFB93
 5865 066d 28030000 		.4byte	.LFE93-.LFB93
 5866 0671 01       		.uleb128 0x1
 5867 0672 9C       		.byte	0x9c
 5868 0673 BA060000 		.4byte	0x6ba
 5869 0677 10       		.uleb128 0x10
 5870 0678 4A050000 		.4byte	.LASF100
 5871 067c 01       		.byte	0x1
 5872 067d 2203     		.2byte	0x322
 5873 067f 8E000000 		.4byte	0x8e
 5874 0683 02       		.uleb128 0x2
 5875 0684 91       		.byte	0x91
 5876 0685 6F       		.sleb128 -17
 5877 0686 11       		.uleb128 0x11
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 125


 5878 0687 48010000 		.4byte	.LBB10
 5879 068b A6010000 		.4byte	.LBE10-.LBB10
 5880 068f 13       		.uleb128 0x13
 5881 0690 6D657300 		.ascii	"mes\000"
 5882 0694 01       		.byte	0x1
 5883 0695 4803     		.2byte	0x348
 5884 0697 FA030000 		.4byte	0x3fa
 5885 069b 02       		.uleb128 0x2
 5886 069c 91       		.byte	0x91
 5887 069d 5C       		.sleb128 -36
 5888 069e 13       		.uleb128 0x13
 5889 069f 6900     		.ascii	"i\000"
 5890 06a1 01       		.byte	0x1
 5891 06a2 5B03     		.2byte	0x35b
 5892 06a4 73000000 		.4byte	0x73
 5893 06a8 02       		.uleb128 0x2
 5894 06a9 91       		.byte	0x91
 5895 06aa 74       		.sleb128 -12
 5896 06ab 13       		.uleb128 0x13
 5897 06ac 7800     		.ascii	"x\000"
 5898 06ae 01       		.byte	0x1
 5899 06af 7203     		.2byte	0x372
 5900 06b1 73000000 		.4byte	0x73
 5901 06b5 02       		.uleb128 0x2
 5902 06b6 91       		.byte	0x91
 5903 06b7 70       		.sleb128 -16
 5904 06b8 00       		.byte	0
 5905 06b9 00       		.byte	0
 5906 06ba 19       		.uleb128 0x19
 5907 06bb CD020000 		.4byte	.LASF102
 5908 06bf 01       		.byte	0x1
 5909 06c0 8503     		.2byte	0x385
 5910 06c2 00000000 		.4byte	.LFB94
 5911 06c6 40000000 		.4byte	.LFE94-.LFB94
 5912 06ca 01       		.uleb128 0x1
 5913 06cb 9C       		.byte	0x9c
 5914 06cc 19       		.uleb128 0x19
 5915 06cd 61020000 		.4byte	.LASF103
 5916 06d1 01       		.byte	0x1
 5917 06d2 9403     		.2byte	0x394
 5918 06d4 00000000 		.4byte	.LFB95
 5919 06d8 40000000 		.4byte	.LFE95-.LFB95
 5920 06dc 01       		.uleb128 0x1
 5921 06dd 9C       		.byte	0x9c
 5922 06de 17       		.uleb128 0x17
 5923 06df 90000000 		.4byte	.LASF104
 5924 06e3 01       		.byte	0x1
 5925 06e4 A403     		.2byte	0x3a4
 5926 06e6 00000000 		.4byte	.LFB96
 5927 06ea 30020000 		.4byte	.LFE96-.LFB96
 5928 06ee 01       		.uleb128 0x1
 5929 06ef 9C       		.byte	0x9c
 5930 06f0 4F070000 		.4byte	0x74f
 5931 06f4 10       		.uleb128 0x10
 5932 06f5 15030000 		.4byte	.LASF105
 5933 06f9 01       		.byte	0x1
 5934 06fa B203     		.2byte	0x3b2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 126


 5935 06fc DB000000 		.4byte	0xdb
 5936 0700 02       		.uleb128 0x2
 5937 0701 91       		.byte	0x91
 5938 0702 5E       		.sleb128 -34
 5939 0703 10       		.uleb128 0x10
 5940 0704 68050000 		.4byte	.LASF106
 5941 0708 01       		.byte	0x1
 5942 0709 B303     		.2byte	0x3b3
 5943 070b DB000000 		.4byte	0xdb
 5944 070f 02       		.uleb128 0x2
 5945 0710 91       		.byte	0x91
 5946 0711 5C       		.sleb128 -36
 5947 0712 10       		.uleb128 0x10
 5948 0713 B1030000 		.4byte	.LASF107
 5949 0717 01       		.byte	0x1
 5950 0718 B403     		.2byte	0x3b4
 5951 071a EE000000 		.4byte	0xee
 5952 071e 02       		.uleb128 0x2
 5953 071f 91       		.byte	0x91
 5954 0720 68       		.sleb128 -24
 5955 0721 10       		.uleb128 0x10
 5956 0722 64090000 		.4byte	.LASF108
 5957 0726 01       		.byte	0x1
 5958 0727 B503     		.2byte	0x3b5
 5959 0729 EE000000 		.4byte	0xee
 5960 072d 02       		.uleb128 0x2
 5961 072e 91       		.byte	0x91
 5962 072f 60       		.sleb128 -32
 5963 0730 10       		.uleb128 0x10
 5964 0731 48040000 		.4byte	.LASF109
 5965 0735 01       		.byte	0x1
 5966 0736 BE03     		.2byte	0x3be
 5967 0738 73000000 		.4byte	0x73
 5968 073c 02       		.uleb128 0x2
 5969 073d 91       		.byte	0x91
 5970 073e 58       		.sleb128 -40
 5971 073f 10       		.uleb128 0x10
 5972 0740 0C090000 		.4byte	.LASF110
 5973 0744 01       		.byte	0x1
 5974 0745 BF03     		.2byte	0x3bf
 5975 0747 73000000 		.4byte	0x73
 5976 074b 02       		.uleb128 0x2
 5977 074c 91       		.byte	0x91
 5978 074d 54       		.sleb128 -44
 5979 074e 00       		.byte	0
 5980 074f 1A       		.uleb128 0x1a
 5981 0750 BF050000 		.4byte	.LASF111
 5982 0754 01       		.byte	0x1
 5983 0755 CD03     		.2byte	0x3cd
 5984 0757 00000000 		.4byte	.LFB97
 5985 075b 0C000000 		.4byte	.LFE97-.LFB97
 5986 075f 01       		.uleb128 0x1
 5987 0760 9C       		.byte	0x9c
 5988 0761 17       		.uleb128 0x17
 5989 0762 92010000 		.4byte	.LASF112
 5990 0766 01       		.byte	0x1
 5991 0767 D303     		.2byte	0x3d3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 127


 5992 0769 00000000 		.4byte	.LFB98
 5993 076d 4C010000 		.4byte	.LFE98-.LFB98
 5994 0771 01       		.uleb128 0x1
 5995 0772 9C       		.byte	0x9c
 5996 0773 A3070000 		.4byte	0x7a3
 5997 0777 13       		.uleb128 0x13
 5998 0778 6E6C00   		.ascii	"nl\000"
 5999 077b 01       		.byte	0x1
 6000 077c D703     		.2byte	0x3d7
 6001 077e AB000000 		.4byte	0xab
 6002 0782 02       		.uleb128 0x2
 6003 0783 91       		.byte	0x91
 6004 0784 67       		.sleb128 -25
 6005 0785 13       		.uleb128 0x13
 6006 0786 6E7200   		.ascii	"nr\000"
 6007 0789 01       		.byte	0x1
 6008 078a D803     		.2byte	0x3d8
 6009 078c AB000000 		.4byte	0xab
 6010 0790 02       		.uleb128 0x2
 6011 0791 91       		.byte	0x91
 6012 0792 66       		.sleb128 -26
 6013 0793 13       		.uleb128 0x13
 6014 0794 6D696400 		.ascii	"mid\000"
 6015 0798 01       		.byte	0x1
 6016 0799 D903     		.2byte	0x3d9
 6017 079b AB000000 		.4byte	0xab
 6018 079f 02       		.uleb128 0x2
 6019 07a0 91       		.byte	0x91
 6020 07a1 65       		.sleb128 -27
 6021 07a2 00       		.byte	0
 6022 07a3 1A       		.uleb128 0x1a
 6023 07a4 77010000 		.4byte	.LASF113
 6024 07a8 01       		.byte	0x1
 6025 07a9 F303     		.2byte	0x3f3
 6026 07ab 00000000 		.4byte	.LFB99
 6027 07af 0C000000 		.4byte	.LFE99-.LFB99
 6028 07b3 01       		.uleb128 0x1
 6029 07b4 9C       		.byte	0x9c
 6030 07b5 17       		.uleb128 0x17
 6031 07b6 A7030000 		.4byte	.LASF114
 6032 07ba 01       		.byte	0x1
 6033 07bb F803     		.2byte	0x3f8
 6034 07bd 00000000 		.4byte	.LFB100
 6035 07c1 C0000000 		.4byte	.LFE100-.LFB100
 6036 07c5 01       		.uleb128 0x1
 6037 07c6 9C       		.byte	0x9c
 6038 07c7 03080000 		.4byte	0x803
 6039 07cb 11       		.uleb128 0x11
 6040 07cc 0E000000 		.4byte	.LBB11
 6041 07d0 8E000000 		.4byte	.LBE11-.LBB11
 6042 07d4 10       		.uleb128 0x10
 6043 07d5 07030000 		.4byte	.LASF115
 6044 07d9 01       		.byte	0x1
 6045 07da 0104     		.2byte	0x401
 6046 07dc E7000000 		.4byte	0xe7
 6047 07e0 02       		.uleb128 0x2
 6048 07e1 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 128


 6049 07e2 74       		.sleb128 -12
 6050 07e3 10       		.uleb128 0x10
 6051 07e4 A6050000 		.4byte	.LASF116
 6052 07e8 01       		.byte	0x1
 6053 07e9 0204     		.2byte	0x402
 6054 07eb DB000000 		.4byte	0xdb
 6055 07ef 02       		.uleb128 0x2
 6056 07f0 91       		.byte	0x91
 6057 07f1 72       		.sleb128 -14
 6058 07f2 10       		.uleb128 0x10
 6059 07f3 6A030000 		.4byte	.LASF117
 6060 07f7 01       		.byte	0x1
 6061 07f8 0704     		.2byte	0x407
 6062 07fa FA030000 		.4byte	0x3fa
 6063 07fe 02       		.uleb128 0x2
 6064 07ff 91       		.byte	0x91
 6065 0800 60       		.sleb128 -32
 6066 0801 00       		.byte	0
 6067 0802 00       		.byte	0
 6068 0803 17       		.uleb128 0x17
 6069 0804 4D090000 		.4byte	.LASF118
 6070 0808 01       		.byte	0x1
 6071 0809 0E04     		.2byte	0x40e
 6072 080b 00000000 		.4byte	.LFB101
 6073 080f B8000000 		.4byte	.LFE101-.LFB101
 6074 0813 01       		.uleb128 0x1
 6075 0814 9C       		.byte	0x9c
 6076 0815 33080000 		.4byte	0x833
 6077 0819 11       		.uleb128 0x11
 6078 081a 0E000000 		.4byte	.LBB12
 6079 081e 86000000 		.4byte	.LBE12-.LBB12
 6080 0822 10       		.uleb128 0x10
 6081 0823 C1060000 		.4byte	.LASF119
 6082 0827 01       		.byte	0x1
 6083 0828 1204     		.2byte	0x412
 6084 082a FA030000 		.4byte	0x3fa
 6085 082e 02       		.uleb128 0x2
 6086 082f 91       		.byte	0x91
 6087 0830 68       		.sleb128 -24
 6088 0831 00       		.byte	0
 6089 0832 00       		.byte	0
 6090 0833 15       		.uleb128 0x15
 6091 0834 60070000 		.4byte	.LASF120
 6092 0838 01       		.byte	0x1
 6093 0839 2304     		.2byte	0x423
 6094 083b 00000000 		.4byte	.LFB102
 6095 083f 4A000000 		.4byte	.LFE102-.LFB102
 6096 0843 01       		.uleb128 0x1
 6097 0844 9C       		.byte	0x9c
 6098 0845 59080000 		.4byte	0x859
 6099 0849 18       		.uleb128 0x18
 6100 084a 5F030000 		.4byte	.LASF121
 6101 084e 01       		.byte	0x1
 6102 084f 2304     		.2byte	0x423
 6103 0851 59080000 		.4byte	0x859
 6104 0855 02       		.uleb128 0x2
 6105 0856 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 129


 6106 0857 6C       		.sleb128 -20
 6107 0858 00       		.byte	0
 6108 0859 05       		.uleb128 0x5
 6109 085a 04       		.byte	0x4
 6110 085b AB000000 		.4byte	0xab
 6111 085f 15       		.uleb128 0x15
 6112 0860 39070000 		.4byte	.LASF122
 6113 0864 01       		.byte	0x1
 6114 0865 2E04     		.2byte	0x42e
 6115 0867 00000000 		.4byte	.LFB103
 6116 086b 68000000 		.4byte	.LFE103-.LFB103
 6117 086f 01       		.uleb128 0x1
 6118 0870 9C       		.byte	0x9c
 6119 0871 9C080000 		.4byte	0x89c
 6120 0875 16       		.uleb128 0x16
 6121 0876 7300     		.ascii	"s\000"
 6122 0878 01       		.byte	0x1
 6123 0879 2E04     		.2byte	0x42e
 6124 087b 88000000 		.4byte	0x88
 6125 087f 02       		.uleb128 0x2
 6126 0880 91       		.byte	0x91
 6127 0881 6C       		.sleb128 -20
 6128 0882 11       		.uleb128 0x11
 6129 0883 10000000 		.4byte	.LBB13
 6130 0887 48000000 		.4byte	.LBE13-.LBB13
 6131 088b 13       		.uleb128 0x13
 6132 088c 636E7400 		.ascii	"cnt\000"
 6133 0890 01       		.byte	0x1
 6134 0891 3504     		.2byte	0x435
 6135 0893 C3000000 		.4byte	0xc3
 6136 0897 02       		.uleb128 0x2
 6137 0898 91       		.byte	0x91
 6138 0899 74       		.sleb128 -12
 6139 089a 00       		.byte	0
 6140 089b 00       		.byte	0
 6141 089c 15       		.uleb128 0x15
 6142 089d B8080000 		.4byte	.LASF123
 6143 08a1 01       		.byte	0x1
 6144 08a2 4404     		.2byte	0x444
 6145 08a4 00000000 		.4byte	.LFB104
 6146 08a8 50000000 		.4byte	.LFE104-.LFB104
 6147 08ac 01       		.uleb128 0x1
 6148 08ad 9C       		.byte	0x9c
 6149 08ae D9080000 		.4byte	0x8d9
 6150 08b2 16       		.uleb128 0x16
 6151 08b3 6300     		.ascii	"c\000"
 6152 08b5 01       		.byte	0x1
 6153 08b6 4404     		.2byte	0x444
 6154 08b8 8E000000 		.4byte	0x8e
 6155 08bc 02       		.uleb128 0x2
 6156 08bd 91       		.byte	0x91
 6157 08be 6F       		.sleb128 -17
 6158 08bf 11       		.uleb128 0x11
 6159 08c0 12000000 		.4byte	.LBB14
 6160 08c4 2E000000 		.4byte	.LBE14-.LBB14
 6161 08c8 13       		.uleb128 0x13
 6162 08c9 636E7400 		.ascii	"cnt\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 130


 6163 08cd 01       		.byte	0x1
 6164 08ce 4804     		.2byte	0x448
 6165 08d0 C3000000 		.4byte	0xc3
 6166 08d4 02       		.uleb128 0x2
 6167 08d5 91       		.byte	0x91
 6168 08d6 74       		.sleb128 -12
 6169 08d7 00       		.byte	0
 6170 08d8 00       		.byte	0
 6171 08d9 1A       		.uleb128 0x1a
 6172 08da 75030000 		.4byte	.LASF124
 6173 08de 01       		.byte	0x1
 6174 08df 5504     		.2byte	0x455
 6175 08e1 00000000 		.4byte	.LFB105
 6176 08e5 0C000000 		.4byte	.LFE105-.LFB105
 6177 08e9 01       		.uleb128 0x1
 6178 08ea 9C       		.byte	0x9c
 6179 08eb 1B       		.uleb128 0x1b
 6180 08ec B4060000 		.4byte	.LASF125
 6181 08f0 06       		.byte	0x6
 6182 08f1 9606     		.2byte	0x696
 6183 08f3 F7080000 		.4byte	0x8f7
 6184 08f7 1C       		.uleb128 0x1c
 6185 08f8 95000000 		.4byte	0x95
 6186 08fc 1D       		.uleb128 0x1d
 6187 08fd 747300   		.ascii	"ts\000"
 6188 0900 05       		.byte	0x5
 6189 0901 10       		.byte	0x10
 6190 0902 AB000000 		.4byte	0xab
 6191 0906 05       		.uleb128 0x5
 6192 0907 03       		.byte	0x3
 6193 0908 00000000 		.4byte	ts
 6194 090c 1E       		.uleb128 0x1e
 6195 090d 3A080000 		.4byte	.LASF126
 6196 0911 05       		.byte	0x5
 6197 0912 11       		.byte	0x11
 6198 0913 B7000000 		.4byte	0xb7
 6199 0917 05       		.uleb128 0x5
 6200 0918 03       		.byte	0x3
 6201 0919 00000000 		.4byte	ts_enc
 6202 091d 1E       		.uleb128 0x1e
 6203 091e D3060000 		.4byte	.LASF127
 6204 0922 05       		.byte	0x5
 6205 0923 12       		.byte	0x12
 6206 0924 B7000000 		.4byte	0xb7
 6207 0928 05       		.uleb128 0x5
 6208 0929 03       		.byte	0x3
 6209 092a 00000000 		.4byte	ts_update
 6210 092e 1E       		.uleb128 0x1e
 6211 092f 73050000 		.4byte	.LASF128
 6212 0933 05       		.byte	0x5
 6213 0934 13       		.byte	0x13
 6214 0935 B7000000 		.4byte	0xb7
 6215 0939 05       		.uleb128 0x5
 6216 093a 03       		.byte	0x3
 6217 093b 00000000 		.4byte	ts_speed
 6218 093f 1E       		.uleb128 0x1e
 6219 0940 9C030000 		.4byte	.LASF129
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 131


 6220 0944 05       		.byte	0x5
 6221 0945 14       		.byte	0x14
 6222 0946 B7000000 		.4byte	0xb7
 6223 094a 05       		.uleb128 0x5
 6224 094b 03       		.byte	0x3
 6225 094c 00000000 		.4byte	ts_display
 6226 0950 1E       		.uleb128 0x1e
 6227 0951 1F030000 		.4byte	.LASF130
 6228 0955 05       		.byte	0x5
 6229 0956 16       		.byte	0x16
 6230 0957 AB000000 		.4byte	0xab
 6231 095b 05       		.uleb128 0x5
 6232 095c 03       		.byte	0x3
 6233 095d 00000000 		.4byte	flag_ts_enc
 6234 0961 1E       		.uleb128 0x1e
 6235 0962 F8020000 		.4byte	.LASF131
 6236 0966 05       		.byte	0x5
 6237 0967 17       		.byte	0x17
 6238 0968 AB000000 		.4byte	0xab
 6239 096c 05       		.uleb128 0x5
 6240 096d 03       		.byte	0x3
 6241 096e 00000000 		.4byte	flag_ts_update
 6242 0972 1E       		.uleb128 0x1e
 6243 0973 2E060000 		.4byte	.LASF132
 6244 0977 05       		.byte	0x5
 6245 0978 18       		.byte	0x18
 6246 0979 AB000000 		.4byte	0xab
 6247 097d 05       		.uleb128 0x5
 6248 097e 03       		.byte	0x3
 6249 097f 00000000 		.4byte	flag_ts_speed
 6250 0983 1E       		.uleb128 0x1e
 6251 0984 4B080000 		.4byte	.LASF133
 6252 0988 05       		.byte	0x5
 6253 0989 19       		.byte	0x19
 6254 098a AB000000 		.4byte	0xab
 6255 098e 05       		.uleb128 0x5
 6256 098f 03       		.byte	0x3
 6257 0990 00000000 		.4byte	flag_ts_display
 6258 0994 1E       		.uleb128 0x1e
 6259 0995 59060000 		.4byte	.LASF134
 6260 0999 05       		.byte	0x5
 6261 099a 1C       		.byte	0x1c
 6262 099b AB000000 		.4byte	0xab
 6263 099f 05       		.uleb128 0x5
 6264 09a0 03       		.byte	0x3
 6265 09a1 00000000 		.4byte	flag_rx
 6266 09a5 1E       		.uleb128 0x1e
 6267 09a6 A5020000 		.4byte	.LASF135
 6268 09aa 05       		.byte	0x5
 6269 09ab 1D       		.byte	0x1d
 6270 09ac AB000000 		.4byte	0xab
 6271 09b0 05       		.uleb128 0x5
 6272 09b1 03       		.byte	0x3
 6273 09b2 00000000 		.4byte	flag_packet
 6274 09b6 1E       		.uleb128 0x1e
 6275 09b7 71090000 		.4byte	.LASF136
 6276 09bb 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 132


 6277 09bc 1E       		.byte	0x1e
 6278 09bd AB000000 		.4byte	0xab
 6279 09c1 05       		.uleb128 0x5
 6280 09c2 03       		.byte	0x3
 6281 09c3 00000000 		.4byte	flag_KB_string
 6282 09c7 1E       		.uleb128 0x1e
 6283 09c8 3C060000 		.4byte	.LASF137
 6284 09cc 05       		.byte	0x5
 6285 09cd 20       		.byte	0x20
 6286 09ce AB000000 		.4byte	0xab
 6287 09d2 05       		.uleb128 0x5
 6288 09d3 03       		.byte	0x3
 6289 09d4 00000000 		.4byte	dataready_flag
 6290 09d8 1E       		.uleb128 0x1e
 6291 09d9 BE010000 		.4byte	.LASF138
 6292 09dd 05       		.byte	0x5
 6293 09de 22       		.byte	0x22
 6294 09df AB000000 		.4byte	0xab
 6295 09e3 05       		.uleb128 0x5
 6296 09e4 03       		.byte	0x3
 6297 09e5 00000000 		.4byte	flag_rf_transmission_active
 6298 09e9 1E       		.uleb128 0x1e
 6299 09ea DA010000 		.4byte	.LASF139
 6300 09ee 05       		.byte	0x5
 6301 09ef 23       		.byte	0x23
 6302 09f0 AB000000 		.4byte	0xab
 6303 09f4 05       		.uleb128 0x5
 6304 09f5 03       		.byte	0x3
 6305 09f6 00000000 		.4byte	flag_print_rf
 6306 09fa 1E       		.uleb128 0x1e
 6307 09fb D6050000 		.4byte	.LASF140
 6308 09ff 05       		.byte	0x5
 6309 0a00 25       		.byte	0x25
 6310 0a01 AB000000 		.4byte	0xab
 6311 0a05 05       		.uleb128 0x5
 6312 0a06 03       		.byte	0x3
 6313 0a07 00000000 		.4byte	flag_receive_ADC
 6314 0a0b 1E       		.uleb128 0x1e
 6315 0a0c 6B060000 		.4byte	.LASF141
 6316 0a10 05       		.byte	0x5
 6317 0a11 26       		.byte	0x26
 6318 0a12 DB000000 		.4byte	0xdb
 6319 0a16 05       		.uleb128 0x5
 6320 0a17 03       		.byte	0x3
 6321 0a18 00000000 		.4byte	adc_result
 6322 0a1c 1E       		.uleb128 0x1e
 6323 0a1d 00000000 		.4byte	.LASF142
 6324 0a21 05       		.byte	0x5
 6325 0a22 28       		.byte	0x28
 6326 0a23 AB000000 		.4byte	0xab
 6327 0a27 05       		.uleb128 0x5
 6328 0a28 03       		.byte	0x3
 6329 0a29 00000000 		.4byte	direction
 6330 0a2d 1E       		.uleb128 0x1e
 6331 0a2e 5C050000 		.4byte	.LASF143
 6332 0a32 05       		.byte	0x5
 6333 0a33 2B       		.byte	0x2b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 133


 6334 0a34 AB000000 		.4byte	0xab
 6335 0a38 05       		.uleb128 0x5
 6336 0a39 03       		.byte	0x3
 6337 0a3a 00000000 		.4byte	BIN_ENABLED
 6338 0a3e 1E       		.uleb128 0x1e
 6339 0a3f 52040000 		.4byte	.LASF144
 6340 0a43 05       		.byte	0x5
 6341 0a44 2D       		.byte	0x2d
 6342 0a45 AB000000 		.4byte	0xab
 6343 0a49 05       		.uleb128 0x5
 6344 0a4a 03       		.byte	0x3
 6345 0a4b 00000000 		.4byte	BT_ENABLED
 6346 0a4f 1E       		.uleb128 0x1e
 6347 0a50 80060000 		.4byte	.LASF145
 6348 0a54 05       		.byte	0x5
 6349 0a55 32       		.byte	0x32
 6350 0a56 AB000000 		.4byte	0xab
 6351 0a5a 05       		.uleb128 0x5
 6352 0a5b 03       		.byte	0x3
 6353 0a5c 00000000 		.4byte	flag_calc_wheelspeed
 6354 0a60 1E       		.uleb128 0x1e
 6355 0a61 5F010000 		.4byte	.LASF146
 6356 0a65 05       		.byte	0x5
 6357 0a66 33       		.byte	0x33
 6358 0a67 DB000000 		.4byte	0xdb
 6359 0a6b 05       		.uleb128 0x5
 6360 0a6c 03       		.byte	0x3
 6361 0a6d 00000000 		.4byte	quad_count1
 6362 0a71 1E       		.uleb128 0x1e
 6363 0a72 6B010000 		.4byte	.LASF147
 6364 0a76 05       		.byte	0x5
 6365 0a77 34       		.byte	0x34
 6366 0a78 DB000000 		.4byte	0xdb
 6367 0a7c 05       		.uleb128 0x5
 6368 0a7d 03       		.byte	0x3
 6369 0a7e 00000000 		.4byte	quad_count2
 6370 0a82 1E       		.uleb128 0x1e
 6371 0a83 8A080000 		.4byte	.LASF148
 6372 0a87 05       		.byte	0x5
 6373 0a88 35       		.byte	0x35
 6374 0a89 DB000000 		.4byte	0xdb
 6375 0a8d 05       		.uleb128 0x5
 6376 0a8e 03       		.byte	0x3
 6377 0a8f 00000000 		.4byte	last_quad_count1
 6378 0a93 1E       		.uleb128 0x1e
 6379 0a94 9B080000 		.4byte	.LASF149
 6380 0a98 05       		.byte	0x5
 6381 0a99 36       		.byte	0x36
 6382 0a9a DB000000 		.4byte	0xdb
 6383 0a9e 05       		.uleb128 0x5
 6384 0a9f 03       		.byte	0x3
 6385 0aa0 00000000 		.4byte	last_quad_count2
 6386 0aa4 1E       		.uleb128 0x1e
 6387 0aa5 7A000000 		.4byte	.LASF150
 6388 0aa9 05       		.byte	0x5
 6389 0aaa 37       		.byte	0x37
 6390 0aab DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 134


 6391 0aaf 05       		.uleb128 0x5
 6392 0ab0 03       		.byte	0x3
 6393 0ab1 00000000 		.4byte	quad_diff1
 6394 0ab5 1E       		.uleb128 0x1e
 6395 0ab6 85000000 		.4byte	.LASF151
 6396 0aba 05       		.byte	0x5
 6397 0abb 38       		.byte	0x38
 6398 0abc DB000000 		.4byte	0xdb
 6399 0ac0 05       		.uleb128 0x5
 6400 0ac1 03       		.byte	0x3
 6401 0ac2 00000000 		.4byte	quad_diff2
 6402 0ac6 1E       		.uleb128 0x1e
 6403 0ac7 E6060000 		.4byte	.LASF152
 6404 0acb 05       		.byte	0x5
 6405 0acc 39       		.byte	0x39
 6406 0acd AB000000 		.4byte	0xab
 6407 0ad1 05       		.uleb128 0x5
 6408 0ad2 03       		.byte	0x3
 6409 0ad3 00000000 		.4byte	deadzone
 6410 0ad7 1E       		.uleb128 0x1e
 6411 0ad8 AE000000 		.4byte	.LASF153
 6412 0adc 05       		.byte	0x5
 6413 0add 3C       		.byte	0x3c
 6414 0ade DB000000 		.4byte	0xdb
 6415 0ae2 05       		.uleb128 0x5
 6416 0ae3 03       		.byte	0x3
 6417 0ae4 00000000 		.4byte	start_turn_count
 6418 0ae8 1E       		.uleb128 0x1e
 6419 0ae9 11060000 		.4byte	.LASF154
 6420 0aed 05       		.byte	0x5
 6421 0aee 3F       		.byte	0x3f
 6422 0aef DB000000 		.4byte	0xdb
 6423 0af3 05       		.uleb128 0x5
 6424 0af4 03       		.byte	0x3
 6425 0af5 00000000 		.4byte	left_duty_cycle
 6426 0af9 1E       		.uleb128 0x1e
 6427 0afa 23090000 		.4byte	.LASF155
 6428 0afe 05       		.byte	0x5
 6429 0aff 40       		.byte	0x40
 6430 0b00 DB000000 		.4byte	0xdb
 6431 0b04 05       		.uleb128 0x5
 6432 0b05 03       		.byte	0x3
 6433 0b06 00000000 		.4byte	right_duty_cycle
 6434 0b0a 1E       		.uleb128 0x1e
 6435 0b0b EF060000 		.4byte	.LASF156
 6436 0b0f 05       		.byte	0x5
 6437 0b10 43       		.byte	0x43
 6438 0b11 DB000000 		.4byte	0xdb
 6439 0b15 05       		.uleb128 0x5
 6440 0b16 03       		.byte	0x3
 6441 0b17 00000000 		.4byte	leftSpeedLimit
 6442 0b1b 1E       		.uleb128 0x1e
 6443 0b1c CB030000 		.4byte	.LASF157
 6444 0b20 05       		.byte	0x5
 6445 0b21 44       		.byte	0x44
 6446 0b22 DB000000 		.4byte	0xdb
 6447 0b26 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 135


 6448 0b27 03       		.byte	0x3
 6449 0b28 00000000 		.4byte	rightSpeedLimit
 6450 0b2c 1E       		.uleb128 0x1e
 6451 0b2d 7D070000 		.4byte	.LASF158
 6452 0b31 05       		.byte	0x5
 6453 0b32 47       		.byte	0x47
 6454 0b33 DB000000 		.4byte	0xdb
 6455 0b37 05       		.uleb128 0x5
 6456 0b38 03       		.byte	0x3
 6457 0b39 00000000 		.4byte	target_distance_cm
 6458 0b3d 1E       		.uleb128 0x1e
 6459 0b3e 2E070000 		.4byte	.LASF159
 6460 0b42 05       		.byte	0x5
 6461 0b43 49       		.byte	0x49
 6462 0b44 DB000000 		.4byte	0xdb
 6463 0b48 05       		.uleb128 0x5
 6464 0b49 03       		.byte	0x3
 6465 0b4a 00000000 		.4byte	accum_dist
 6466 0b4e 1E       		.uleb128 0x1e
 6467 0b4f 0A010000 		.4byte	.LASF160
 6468 0b53 05       		.byte	0x5
 6469 0b54 4A       		.byte	0x4a
 6470 0b55 DB000000 		.4byte	0xdb
 6471 0b59 05       		.uleb128 0x5
 6472 0b5a 03       		.byte	0x3
 6473 0b5b 00000000 		.4byte	target_distance_quad
 6474 0b5f 1E       		.uleb128 0x1e
 6475 0b60 1E080000 		.4byte	.LASF161
 6476 0b64 05       		.byte	0x5
 6477 0b65 4B       		.byte	0x4b
 6478 0b66 AB000000 		.4byte	0xab
 6479 0b6a 05       		.uleb128 0x5
 6480 0b6b 03       		.byte	0x3
 6481 0b6c 00000000 		.4byte	reached_target
 6482 0b70 1E       		.uleb128 0x1e
 6483 0b71 19070000 		.4byte	.LASF162
 6484 0b75 05       		.byte	0x5
 6485 0b76 4C       		.byte	0x4c
 6486 0b77 AB000000 		.4byte	0xab
 6487 0b7b 05       		.uleb128 0x5
 6488 0b7c 03       		.byte	0x3
 6489 0b7d 00000000 		.4byte	overshot_target
 6490 0b81 1E       		.uleb128 0x1e
 6491 0b82 71070000 		.4byte	.LASF163
 6492 0b86 05       		.byte	0x5
 6493 0b87 4D       		.byte	0x4d
 6494 0b88 E7000000 		.4byte	0xe7
 6495 0b8c 05       		.uleb128 0x5
 6496 0b8d 03       		.byte	0x3
 6497 0b8e 00000000 		.4byte	quad_per_cm
 6498 0b92 1E       		.uleb128 0x1e
 6499 0b93 63040000 		.4byte	.LASF164
 6500 0b97 05       		.byte	0x5
 6501 0b98 50       		.byte	0x50
 6502 0b99 AB000000 		.4byte	0xab
 6503 0b9d 05       		.uleb128 0x5
 6504 0b9e 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 136


 6505 0b9f 00000000 		.4byte	initial_pos_valid
 6506 0ba3 1E       		.uleb128 0x1e
 6507 0ba4 92090000 		.4byte	.LASF165
 6508 0ba8 05       		.byte	0x5
 6509 0ba9 51       		.byte	0x51
 6510 0baa DB000000 		.4byte	0xdb
 6511 0bae 05       		.uleb128 0x5
 6512 0baf 03       		.byte	0x3
 6513 0bb0 00000000 		.4byte	initial_x_pos
 6514 0bb4 1E       		.uleb128 0x1e
 6515 0bb5 4B060000 		.4byte	.LASF166
 6516 0bb9 05       		.byte	0x5
 6517 0bba 52       		.byte	0x52
 6518 0bbb DB000000 		.4byte	0xdb
 6519 0bbf 05       		.uleb128 0x5
 6520 0bc0 03       		.byte	0x3
 6521 0bc1 00000000 		.4byte	initial_y_pos
 6522 0bc5 1E       		.uleb128 0x1e
 6523 0bc6 41080000 		.4byte	.LASF167
 6524 0bca 05       		.byte	0x5
 6525 0bcb 55       		.byte	0x55
 6526 0bcc AB000000 		.4byte	0xab
 6527 0bd0 05       		.uleb128 0x5
 6528 0bd1 03       		.byte	0x3
 6529 0bd2 00000000 		.4byte	brakeFlag
 6530 0bd6 1E       		.uleb128 0x1e
 6531 0bd7 E5020000 		.4byte	.LASF168
 6532 0bdb 05       		.byte	0x5
 6533 0bdc 56       		.byte	0x56
 6534 0bdd AB000000 		.4byte	0xab
 6535 0be1 05       		.uleb128 0x5
 6536 0be2 03       		.byte	0x3
 6537 0be3 00000000 		.4byte	portOpen
 6538 0be7 1E       		.uleb128 0x1e
 6539 0be8 A2000000 		.4byte	.LASF169
 6540 0bec 05       		.byte	0x5
 6541 0bed 59       		.byte	0x59
 6542 0bee DB000000 		.4byte	0xdb
 6543 0bf2 05       		.uleb128 0x5
 6544 0bf3 03       		.byte	0x3
 6545 0bf4 00000000 		.4byte	prevVoltage
 6546 0bf8 1E       		.uleb128 0x1e
 6547 0bf9 28010000 		.4byte	.LASF170
 6548 0bfd 05       		.byte	0x5
 6549 0bfe 5A       		.byte	0x5a
 6550 0bff DB000000 		.4byte	0xdb
 6551 0c03 05       		.uleb128 0x5
 6552 0c04 03       		.byte	0x3
 6553 0c05 00000000 		.4byte	prevVoltage2
 6554 0c09 07       		.uleb128 0x7
 6555 0c0a 8E000000 		.4byte	0x8e
 6556 0c0e 190C0000 		.4byte	0xc19
 6557 0c12 08       		.uleb128 0x8
 6558 0c13 81000000 		.4byte	0x81
 6559 0c17 3F       		.byte	0x3f
 6560 0c18 00       		.byte	0
 6561 0c19 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 137


 6562 0c1a 7C080000 		.4byte	.LASF171
 6563 0c1e 05       		.byte	0x5
 6564 0c1f 60       		.byte	0x60
 6565 0c20 090C0000 		.4byte	0xc09
 6566 0c24 05       		.uleb128 0x5
 6567 0c25 03       		.byte	0x3
 6568 0c26 00000000 		.4byte	displaystring
 6569 0c2a 1E       		.uleb128 0x1e
 6570 0c2b 19080000 		.4byte	.LASF172
 6571 0c2f 05       		.byte	0x5
 6572 0c30 61       		.byte	0x61
 6573 0c31 090C0000 		.4byte	0xc09
 6574 0c35 05       		.uleb128 0x5
 6575 0c36 03       		.byte	0x3
 6576 0c37 00000000 		.4byte	line
 6577 0c3b 1E       		.uleb128 0x1e
 6578 0c3c FA070000 		.4byte	.LASF173
 6579 0c40 05       		.byte	0x5
 6580 0c41 61       		.byte	0x61
 6581 0c42 090C0000 		.4byte	0xc09
 6582 0c46 05       		.uleb128 0x5
 6583 0c47 03       		.byte	0x3
 6584 0c48 00000000 		.4byte	entry
 6585 0c4c 07       		.uleb128 0x7
 6586 0c4d AB000000 		.4byte	0xab
 6587 0c51 5C0C0000 		.4byte	0xc5c
 6588 0c55 08       		.uleb128 0x8
 6589 0c56 81000000 		.4byte	0x81
 6590 0c5a 3F       		.byte	0x3f
 6591 0c5b 00       		.byte	0
 6592 0c5c 1E       		.uleb128 0x1e
 6593 0c5d 3D020000 		.4byte	.LASF174
 6594 0c61 05       		.byte	0x5
 6595 0c62 62       		.byte	0x62
 6596 0c63 4C0C0000 		.4byte	0xc4c
 6597 0c67 05       		.uleb128 0x5
 6598 0c68 03       		.byte	0x3
 6599 0c69 00000000 		.4byte	usbBuffer
 6600 0c6d 1E       		.uleb128 0x1e
 6601 0c6e 83040000 		.4byte	.LASF175
 6602 0c72 05       		.byte	0x5
 6603 0c73 77       		.byte	0x77
 6604 0c74 86010000 		.4byte	0x186
 6605 0c78 05       		.uleb128 0x5
 6606 0c79 03       		.byte	0x3
 6607 0c7a 00000000 		.4byte	buffer_state
 6608 0c7e 1E       		.uleb128 0x1e
 6609 0c7f E7000000 		.4byte	.LASF176
 6610 0c83 05       		.byte	0x5
 6611 0c84 78       		.byte	0x78
 6612 0c85 86010000 		.4byte	0x186
 6613 0c89 05       		.uleb128 0x5
 6614 0c8a 03       		.byte	0x3
 6615 0c8b 00000000 		.4byte	system_state
 6616 0c8f 1E       		.uleb128 0x1e
 6617 0c90 4B030000 		.4byte	.LASF177
 6618 0c94 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 138


 6619 0c95 7A       		.byte	0x7a
 6620 0c96 0C010000 		.4byte	0x10c
 6621 0c9a 05       		.uleb128 0x5
 6622 0c9b 03       		.byte	0x3
 6623 0c9c 00000000 		.4byte	prev_movement_state
 6624 0ca0 1E       		.uleb128 0x1e
 6625 0ca1 E8010000 		.4byte	.LASF178
 6626 0ca5 05       		.byte	0x5
 6627 0ca6 7B       		.byte	0x7b
 6628 0ca7 0C010000 		.4byte	0x10c
 6629 0cab 05       		.uleb128 0x5
 6630 0cac 03       		.byte	0x3
 6631 0cad 00000000 		.4byte	movement_state
 6632 0cb1 1E       		.uleb128 0x1e
 6633 0cb2 CC000000 		.4byte	.LASF179
 6634 0cb6 05       		.byte	0x5
 6635 0cb7 7C       		.byte	0x7c
 6636 0cb8 49010000 		.4byte	0x149
 6637 0cbc 05       		.uleb128 0x5
 6638 0cbd 03       		.byte	0x3
 6639 0cbe 00000000 		.4byte	track_mode
 6640 0cc2 1E       		.uleb128 0x1e
 6641 0cc3 2B030000 		.4byte	.LASF180
 6642 0cc7 05       		.byte	0x5
 6643 0cc8 7E       		.byte	0x7e
 6644 0cc9 AB000000 		.4byte	0xab
 6645 0ccd 05       		.uleb128 0x5
 6646 0cce 03       		.byte	0x3
 6647 0ccf 00000000 		.4byte	byteCount
 6648 0cd3 07       		.uleb128 0x7
 6649 0cd4 8E000000 		.4byte	0x8e
 6650 0cd8 E30C0000 		.4byte	0xce3
 6651 0cdc 08       		.uleb128 0x8
 6652 0cdd 81000000 		.4byte	0x81
 6653 0ce1 01       		.byte	0x1
 6654 0ce2 00       		.byte	0
 6655 0ce3 1E       		.uleb128 0x1e
 6656 0ce4 BF070000 		.4byte	.LASF181
 6657 0ce8 05       		.byte	0x5
 6658 0ce9 7F       		.byte	0x7f
 6659 0cea D30C0000 		.4byte	0xcd3
 6660 0cee 05       		.uleb128 0x5
 6661 0cef 03       		.byte	0x3
 6662 0cf0 00000000 		.4byte	packet
 6663 0cf4 1E       		.uleb128 0x1e
 6664 0cf5 AB010000 		.4byte	.LASF182
 6665 0cf9 05       		.byte	0x5
 6666 0cfa 83       		.byte	0x83
 6667 0cfb EE000000 		.4byte	0xee
 6668 0cff 05       		.uleb128 0x5
 6669 0d00 03       		.byte	0x3
 6670 0d01 00000000 		.4byte	speed
 6671 0d05 1E       		.uleb128 0x1e
 6672 0d06 E6030000 		.4byte	.LASF183
 6673 0d0a 01       		.byte	0x1
 6674 0d0b 24       		.byte	0x24
 6675 0d0c B7000000 		.4byte	0xb7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 139


 6676 0d10 05       		.uleb128 0x5
 6677 0d11 03       		.byte	0x3
 6678 0d12 00000000 		.4byte	instructionCount
 6679 0d16 1E       		.uleb128 0x1e
 6680 0d17 35010000 		.4byte	.LASF184
 6681 0d1b 01       		.byte	0x1
 6682 0d1c 26       		.byte	0x26
 6683 0d1d A0000000 		.4byte	0xa0
 6684 0d21 05       		.uleb128 0x5
 6685 0d22 03       		.byte	0x3
 6686 0d23 00000000 		.4byte	sensorsDisabled
 6687 0d27 07       		.uleb128 0x7
 6688 0d28 A0000000 		.4byte	0xa0
 6689 0d2c 3D0D0000 		.4byte	0xd3d
 6690 0d30 08       		.uleb128 0x8
 6691 0d31 81000000 		.4byte	0x81
 6692 0d35 0E       		.byte	0xe
 6693 0d36 08       		.uleb128 0x8
 6694 0d37 81000000 		.4byte	0x81
 6695 0d3b 12       		.byte	0x12
 6696 0d3c 00       		.byte	0
 6697 0d3d 1D       		.uleb128 0x1d
 6698 0d3e 6D617000 		.ascii	"map\000"
 6699 0d42 01       		.byte	0x1
 6700 0d43 2E       		.byte	0x2e
 6701 0d44 270D0000 		.4byte	0xd27
 6702 0d48 05       		.uleb128 0x5
 6703 0d49 03       		.byte	0x3
 6704 0d4a 00000000 		.4byte	map
 6705 0d4e 07       		.uleb128 0x7
 6706 0d4f A0000000 		.4byte	0xa0
 6707 0d53 640D0000 		.4byte	0xd64
 6708 0d57 08       		.uleb128 0x8
 6709 0d58 81000000 		.4byte	0x81
 6710 0d5c 05       		.byte	0x5
 6711 0d5d 08       		.uleb128 0x8
 6712 0d5e 81000000 		.4byte	0x81
 6713 0d62 01       		.byte	0x1
 6714 0d63 00       		.byte	0
 6715 0d64 1E       		.uleb128 0x1e
 6716 0d65 52050000 		.4byte	.LASF185
 6717 0d69 01       		.byte	0x1
 6718 0d6a 43       		.byte	0x43
 6719 0d6b 4E0D0000 		.4byte	0xd4e
 6720 0d6f 05       		.uleb128 0x5
 6721 0d70 03       		.byte	0x3
 6722 0d71 00000000 		.4byte	food_list
 6723 0d75 07       		.uleb128 0x7
 6724 0d76 A0000000 		.4byte	0xa0
 6725 0d7a 8C0D0000 		.4byte	0xd8c
 6726 0d7e 1F       		.uleb128 0x1f
 6727 0d7f 81000000 		.4byte	0x81
 6728 0d83 1F03     		.2byte	0x31f
 6729 0d85 08       		.uleb128 0x8
 6730 0d86 81000000 		.4byte	0x81
 6731 0d8a 02       		.byte	0x2
 6732 0d8b 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 140


 6733 0d8c 1E       		.uleb128 0x1e
 6734 0d8d 2B040000 		.4byte	.LASF186
 6735 0d91 01       		.byte	0x1
 6736 0d92 2A       		.byte	0x2a
 6737 0d93 750D0000 		.4byte	0xd75
 6738 0d97 05       		.uleb128 0x5
 6739 0d98 03       		.byte	0x3
 6740 0d99 00000000 		.4byte	path
 6741 0d9d 1E       		.uleb128 0x1e
 6742 0d9e B4050000 		.4byte	.LASF187
 6743 0da2 01       		.byte	0x1
 6744 0da3 2B       		.byte	0x2b
 6745 0da4 F5000000 		.4byte	0xf5
 6746 0da8 05       		.uleb128 0x5
 6747 0da9 03       		.byte	0x3
 6748 0daa 00000000 		.4byte	start
 6749 0dae 1E       		.uleb128 0x1e
 6750 0daf AC080000 		.4byte	.LASF188
 6751 0db3 01       		.byte	0x1
 6752 0db4 2C       		.byte	0x2c
 6753 0db5 F5000000 		.4byte	0xf5
 6754 0db9 05       		.uleb128 0x5
 6755 0dba 03       		.byte	0x3
 6756 0dbb 00000000 		.4byte	destination
 6757 0dbf 1E       		.uleb128 0x1e
 6758 0dc0 82010000 		.4byte	.LASF189
 6759 0dc4 01       		.byte	0x1
 6760 0dc5 28       		.byte	0x28
 6761 0dc6 A0000000 		.4byte	0xa0
 6762 0dca 05       		.uleb128 0x5
 6763 0dcb 03       		.byte	0x3
 6764 0dcc 00000000 		.4byte	robot_direction
 6765 0dd0 1E       		.uleb128 0x1e
 6766 0dd1 0A000000 		.4byte	.LASF190
 6767 0dd5 07       		.byte	0x7
 6768 0dd6 22       		.byte	0x22
 6769 0dd7 A0000000 		.4byte	0xa0
 6770 0ddb 05       		.uleb128 0x5
 6771 0ddc 03       		.byte	0x3
 6772 0ddd 00000000 		.4byte	tracked_direction
 6773 0de1 1E       		.uleb128 0x1e
 6774 0de2 EE070000 		.4byte	.LASF191
 6775 0de6 01       		.byte	0x1
 6776 0de7 45       		.byte	0x45
 6777 0de8 A0000000 		.4byte	0xa0
 6778 0dec 05       		.uleb128 0x5
 6779 0ded 03       		.byte	0x3
 6780 0dee 00000000 		.4byte	food_length
 6781 0df2 07       		.uleb128 0x7
 6782 0df3 8E000000 		.4byte	0x8e
 6783 0df7 030E0000 		.4byte	0xe03
 6784 0dfb 1F       		.uleb128 0x1f
 6785 0dfc 81000000 		.4byte	0x81
 6786 0e00 1F03     		.2byte	0x31f
 6787 0e02 00       		.byte	0
 6788 0e03 1E       		.uleb128 0x1e
 6789 0e04 83050000 		.4byte	.LASF192
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 141


 6790 0e08 01       		.byte	0x1
 6791 0e09 23       		.byte	0x23
 6792 0e0a F20D0000 		.4byte	0xdf2
 6793 0e0e 05       		.uleb128 0x5
 6794 0e0f 03       		.byte	0x3
 6795 0e10 00000000 		.4byte	instructions
 6796 0e14 1E       		.uleb128 0x1e
 6797 0e15 C6070000 		.4byte	.LASF193
 6798 0e19 01       		.byte	0x1
 6799 0e1a 25       		.byte	0x25
 6800 0e1b B7000000 		.4byte	0xb7
 6801 0e1f 05       		.uleb128 0x5
 6802 0e20 03       		.byte	0x3
 6803 0e21 00000000 		.4byte	instructionLength
 6804 0e25 20       		.uleb128 0x20
 6805 0e26 9D010000 		.4byte	.LASF194
 6806 0e2a 01       		.byte	0x1
 6807 0e2b D103     		.2byte	0x3d1
 6808 0e2d B7000000 		.4byte	0xb7
 6809 0e31 05       		.uleb128 0x5
 6810 0e32 03       		.byte	0x3
 6811 0e33 00000000 		.4byte	leftTurnCount
 6812 0e37 20       		.uleb128 0x20
 6813 0e38 61000000 		.4byte	.LASF195
 6814 0e3c 01       		.byte	0x1
 6815 0e3d D203     		.2byte	0x3d2
 6816 0e3f B7000000 		.4byte	0xb7
 6817 0e43 05       		.uleb128 0x5
 6818 0e44 03       		.byte	0x3
 6819 0e45 00000000 		.4byte	rightTurnCount
 6820 0e49 00       		.byte	0
 6821              		.section	.debug_abbrev,"",%progbits
 6822              	.Ldebug_abbrev0:
 6823 0000 01       		.uleb128 0x1
 6824 0001 11       		.uleb128 0x11
 6825 0002 01       		.byte	0x1
 6826 0003 25       		.uleb128 0x25
 6827 0004 0E       		.uleb128 0xe
 6828 0005 13       		.uleb128 0x13
 6829 0006 0B       		.uleb128 0xb
 6830 0007 03       		.uleb128 0x3
 6831 0008 0E       		.uleb128 0xe
 6832 0009 1B       		.uleb128 0x1b
 6833 000a 0E       		.uleb128 0xe
 6834 000b 55       		.uleb128 0x55
 6835 000c 17       		.uleb128 0x17
 6836 000d 11       		.uleb128 0x11
 6837 000e 01       		.uleb128 0x1
 6838 000f 10       		.uleb128 0x10
 6839 0010 17       		.uleb128 0x17
 6840 0011 00       		.byte	0
 6841 0012 00       		.byte	0
 6842 0013 02       		.uleb128 0x2
 6843 0014 24       		.uleb128 0x24
 6844 0015 00       		.byte	0
 6845 0016 0B       		.uleb128 0xb
 6846 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 142


 6847 0018 3E       		.uleb128 0x3e
 6848 0019 0B       		.uleb128 0xb
 6849 001a 03       		.uleb128 0x3
 6850 001b 0E       		.uleb128 0xe
 6851 001c 00       		.byte	0
 6852 001d 00       		.byte	0
 6853 001e 03       		.uleb128 0x3
 6854 001f 16       		.uleb128 0x16
 6855 0020 00       		.byte	0
 6856 0021 03       		.uleb128 0x3
 6857 0022 0E       		.uleb128 0xe
 6858 0023 3A       		.uleb128 0x3a
 6859 0024 0B       		.uleb128 0xb
 6860 0025 3B       		.uleb128 0x3b
 6861 0026 0B       		.uleb128 0xb
 6862 0027 49       		.uleb128 0x49
 6863 0028 13       		.uleb128 0x13
 6864 0029 00       		.byte	0
 6865 002a 00       		.byte	0
 6866 002b 04       		.uleb128 0x4
 6867 002c 24       		.uleb128 0x24
 6868 002d 00       		.byte	0
 6869 002e 0B       		.uleb128 0xb
 6870 002f 0B       		.uleb128 0xb
 6871 0030 3E       		.uleb128 0x3e
 6872 0031 0B       		.uleb128 0xb
 6873 0032 03       		.uleb128 0x3
 6874 0033 08       		.uleb128 0x8
 6875 0034 00       		.byte	0
 6876 0035 00       		.byte	0
 6877 0036 05       		.uleb128 0x5
 6878 0037 0F       		.uleb128 0xf
 6879 0038 00       		.byte	0
 6880 0039 0B       		.uleb128 0xb
 6881 003a 0B       		.uleb128 0xb
 6882 003b 49       		.uleb128 0x49
 6883 003c 13       		.uleb128 0x13
 6884 003d 00       		.byte	0
 6885 003e 00       		.byte	0
 6886 003f 06       		.uleb128 0x6
 6887 0040 16       		.uleb128 0x16
 6888 0041 00       		.byte	0
 6889 0042 03       		.uleb128 0x3
 6890 0043 0E       		.uleb128 0xe
 6891 0044 3A       		.uleb128 0x3a
 6892 0045 0B       		.uleb128 0xb
 6893 0046 3B       		.uleb128 0x3b
 6894 0047 05       		.uleb128 0x5
 6895 0048 49       		.uleb128 0x49
 6896 0049 13       		.uleb128 0x13
 6897 004a 00       		.byte	0
 6898 004b 00       		.byte	0
 6899 004c 07       		.uleb128 0x7
 6900 004d 01       		.uleb128 0x1
 6901 004e 01       		.byte	0x1
 6902 004f 49       		.uleb128 0x49
 6903 0050 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 143


 6904 0051 01       		.uleb128 0x1
 6905 0052 13       		.uleb128 0x13
 6906 0053 00       		.byte	0
 6907 0054 00       		.byte	0
 6908 0055 08       		.uleb128 0x8
 6909 0056 21       		.uleb128 0x21
 6910 0057 00       		.byte	0
 6911 0058 49       		.uleb128 0x49
 6912 0059 13       		.uleb128 0x13
 6913 005a 2F       		.uleb128 0x2f
 6914 005b 0B       		.uleb128 0xb
 6915 005c 00       		.byte	0
 6916 005d 00       		.byte	0
 6917 005e 09       		.uleb128 0x9
 6918 005f 04       		.uleb128 0x4
 6919 0060 01       		.byte	0x1
 6920 0061 03       		.uleb128 0x3
 6921 0062 0E       		.uleb128 0xe
 6922 0063 0B       		.uleb128 0xb
 6923 0064 0B       		.uleb128 0xb
 6924 0065 3A       		.uleb128 0x3a
 6925 0066 0B       		.uleb128 0xb
 6926 0067 3B       		.uleb128 0x3b
 6927 0068 0B       		.uleb128 0xb
 6928 0069 01       		.uleb128 0x1
 6929 006a 13       		.uleb128 0x13
 6930 006b 00       		.byte	0
 6931 006c 00       		.byte	0
 6932 006d 0A       		.uleb128 0xa
 6933 006e 28       		.uleb128 0x28
 6934 006f 00       		.byte	0
 6935 0070 03       		.uleb128 0x3
 6936 0071 0E       		.uleb128 0xe
 6937 0072 1C       		.uleb128 0x1c
 6938 0073 0D       		.uleb128 0xd
 6939 0074 00       		.byte	0
 6940 0075 00       		.byte	0
 6941 0076 0B       		.uleb128 0xb
 6942 0077 13       		.uleb128 0x13
 6943 0078 01       		.byte	0x1
 6944 0079 03       		.uleb128 0x3
 6945 007a 0E       		.uleb128 0xe
 6946 007b 0B       		.uleb128 0xb
 6947 007c 0B       		.uleb128 0xb
 6948 007d 3A       		.uleb128 0x3a
 6949 007e 0B       		.uleb128 0xb
 6950 007f 3B       		.uleb128 0x3b
 6951 0080 0B       		.uleb128 0xb
 6952 0081 01       		.uleb128 0x1
 6953 0082 13       		.uleb128 0x13
 6954 0083 00       		.byte	0
 6955 0084 00       		.byte	0
 6956 0085 0C       		.uleb128 0xc
 6957 0086 0D       		.uleb128 0xd
 6958 0087 00       		.byte	0
 6959 0088 03       		.uleb128 0x3
 6960 0089 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 144


 6961 008a 3A       		.uleb128 0x3a
 6962 008b 0B       		.uleb128 0xb
 6963 008c 3B       		.uleb128 0x3b
 6964 008d 0B       		.uleb128 0xb
 6965 008e 49       		.uleb128 0x49
 6966 008f 13       		.uleb128 0x13
 6967 0090 38       		.uleb128 0x38
 6968 0091 0B       		.uleb128 0xb
 6969 0092 00       		.byte	0
 6970 0093 00       		.byte	0
 6971 0094 0D       		.uleb128 0xd
 6972 0095 2E       		.uleb128 0x2e
 6973 0096 00       		.byte	0
 6974 0097 3F       		.uleb128 0x3f
 6975 0098 19       		.uleb128 0x19
 6976 0099 03       		.uleb128 0x3
 6977 009a 0E       		.uleb128 0xe
 6978 009b 3A       		.uleb128 0x3a
 6979 009c 0B       		.uleb128 0xb
 6980 009d 3B       		.uleb128 0x3b
 6981 009e 0B       		.uleb128 0xb
 6982 009f 27       		.uleb128 0x27
 6983 00a0 19       		.uleb128 0x19
 6984 00a1 11       		.uleb128 0x11
 6985 00a2 01       		.uleb128 0x1
 6986 00a3 12       		.uleb128 0x12
 6987 00a4 06       		.uleb128 0x6
 6988 00a5 40       		.uleb128 0x40
 6989 00a6 18       		.uleb128 0x18
 6990 00a7 9742     		.uleb128 0x2117
 6991 00a9 19       		.uleb128 0x19
 6992 00aa 00       		.byte	0
 6993 00ab 00       		.byte	0
 6994 00ac 0E       		.uleb128 0xe
 6995 00ad 2E       		.uleb128 0x2e
 6996 00ae 00       		.byte	0
 6997 00af 3F       		.uleb128 0x3f
 6998 00b0 19       		.uleb128 0x19
 6999 00b1 03       		.uleb128 0x3
 7000 00b2 0E       		.uleb128 0xe
 7001 00b3 3A       		.uleb128 0x3a
 7002 00b4 0B       		.uleb128 0xb
 7003 00b5 3B       		.uleb128 0x3b
 7004 00b6 0B       		.uleb128 0xb
 7005 00b7 27       		.uleb128 0x27
 7006 00b8 19       		.uleb128 0x19
 7007 00b9 11       		.uleb128 0x11
 7008 00ba 01       		.uleb128 0x1
 7009 00bb 12       		.uleb128 0x12
 7010 00bc 06       		.uleb128 0x6
 7011 00bd 40       		.uleb128 0x40
 7012 00be 18       		.uleb128 0x18
 7013 00bf 9642     		.uleb128 0x2116
 7014 00c1 19       		.uleb128 0x19
 7015 00c2 00       		.byte	0
 7016 00c3 00       		.byte	0
 7017 00c4 0F       		.uleb128 0xf
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 145


 7018 00c5 2E       		.uleb128 0x2e
 7019 00c6 01       		.byte	0x1
 7020 00c7 3F       		.uleb128 0x3f
 7021 00c8 19       		.uleb128 0x19
 7022 00c9 03       		.uleb128 0x3
 7023 00ca 0E       		.uleb128 0xe
 7024 00cb 3A       		.uleb128 0x3a
 7025 00cc 0B       		.uleb128 0xb
 7026 00cd 3B       		.uleb128 0x3b
 7027 00ce 0B       		.uleb128 0xb
 7028 00cf 49       		.uleb128 0x49
 7029 00d0 13       		.uleb128 0x13
 7030 00d1 11       		.uleb128 0x11
 7031 00d2 01       		.uleb128 0x1
 7032 00d3 12       		.uleb128 0x12
 7033 00d4 06       		.uleb128 0x6
 7034 00d5 40       		.uleb128 0x40
 7035 00d6 18       		.uleb128 0x18
 7036 00d7 9642     		.uleb128 0x2116
 7037 00d9 19       		.uleb128 0x19
 7038 00da 01       		.uleb128 0x1
 7039 00db 13       		.uleb128 0x13
 7040 00dc 00       		.byte	0
 7041 00dd 00       		.byte	0
 7042 00de 10       		.uleb128 0x10
 7043 00df 34       		.uleb128 0x34
 7044 00e0 00       		.byte	0
 7045 00e1 03       		.uleb128 0x3
 7046 00e2 0E       		.uleb128 0xe
 7047 00e3 3A       		.uleb128 0x3a
 7048 00e4 0B       		.uleb128 0xb
 7049 00e5 3B       		.uleb128 0x3b
 7050 00e6 05       		.uleb128 0x5
 7051 00e7 49       		.uleb128 0x49
 7052 00e8 13       		.uleb128 0x13
 7053 00e9 02       		.uleb128 0x2
 7054 00ea 18       		.uleb128 0x18
 7055 00eb 00       		.byte	0
 7056 00ec 00       		.byte	0
 7057 00ed 11       		.uleb128 0x11
 7058 00ee 0B       		.uleb128 0xb
 7059 00ef 01       		.byte	0x1
 7060 00f0 11       		.uleb128 0x11
 7061 00f1 01       		.uleb128 0x1
 7062 00f2 12       		.uleb128 0x12
 7063 00f3 06       		.uleb128 0x6
 7064 00f4 00       		.byte	0
 7065 00f5 00       		.byte	0
 7066 00f6 12       		.uleb128 0x12
 7067 00f7 0B       		.uleb128 0xb
 7068 00f8 01       		.byte	0x1
 7069 00f9 11       		.uleb128 0x11
 7070 00fa 01       		.uleb128 0x1
 7071 00fb 12       		.uleb128 0x12
 7072 00fc 06       		.uleb128 0x6
 7073 00fd 01       		.uleb128 0x1
 7074 00fe 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 146


 7075 00ff 00       		.byte	0
 7076 0100 00       		.byte	0
 7077 0101 13       		.uleb128 0x13
 7078 0102 34       		.uleb128 0x34
 7079 0103 00       		.byte	0
 7080 0104 03       		.uleb128 0x3
 7081 0105 08       		.uleb128 0x8
 7082 0106 3A       		.uleb128 0x3a
 7083 0107 0B       		.uleb128 0xb
 7084 0108 3B       		.uleb128 0x3b
 7085 0109 05       		.uleb128 0x5
 7086 010a 49       		.uleb128 0x49
 7087 010b 13       		.uleb128 0x13
 7088 010c 02       		.uleb128 0x2
 7089 010d 18       		.uleb128 0x18
 7090 010e 00       		.byte	0
 7091 010f 00       		.byte	0
 7092 0110 14       		.uleb128 0x14
 7093 0111 2E       		.uleb128 0x2e
 7094 0112 01       		.byte	0x1
 7095 0113 3F       		.uleb128 0x3f
 7096 0114 19       		.uleb128 0x19
 7097 0115 03       		.uleb128 0x3
 7098 0116 0E       		.uleb128 0xe
 7099 0117 3A       		.uleb128 0x3a
 7100 0118 0B       		.uleb128 0xb
 7101 0119 3B       		.uleb128 0x3b
 7102 011a 05       		.uleb128 0x5
 7103 011b 11       		.uleb128 0x11
 7104 011c 01       		.uleb128 0x1
 7105 011d 12       		.uleb128 0x12
 7106 011e 06       		.uleb128 0x6
 7107 011f 40       		.uleb128 0x40
 7108 0120 18       		.uleb128 0x18
 7109 0121 9742     		.uleb128 0x2117
 7110 0123 19       		.uleb128 0x19
 7111 0124 01       		.uleb128 0x1
 7112 0125 13       		.uleb128 0x13
 7113 0126 00       		.byte	0
 7114 0127 00       		.byte	0
 7115 0128 15       		.uleb128 0x15
 7116 0129 2E       		.uleb128 0x2e
 7117 012a 01       		.byte	0x1
 7118 012b 3F       		.uleb128 0x3f
 7119 012c 19       		.uleb128 0x19
 7120 012d 03       		.uleb128 0x3
 7121 012e 0E       		.uleb128 0xe
 7122 012f 3A       		.uleb128 0x3a
 7123 0130 0B       		.uleb128 0xb
 7124 0131 3B       		.uleb128 0x3b
 7125 0132 05       		.uleb128 0x5
 7126 0133 27       		.uleb128 0x27
 7127 0134 19       		.uleb128 0x19
 7128 0135 11       		.uleb128 0x11
 7129 0136 01       		.uleb128 0x1
 7130 0137 12       		.uleb128 0x12
 7131 0138 06       		.uleb128 0x6
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 147


 7132 0139 40       		.uleb128 0x40
 7133 013a 18       		.uleb128 0x18
 7134 013b 9642     		.uleb128 0x2116
 7135 013d 19       		.uleb128 0x19
 7136 013e 01       		.uleb128 0x1
 7137 013f 13       		.uleb128 0x13
 7138 0140 00       		.byte	0
 7139 0141 00       		.byte	0
 7140 0142 16       		.uleb128 0x16
 7141 0143 05       		.uleb128 0x5
 7142 0144 00       		.byte	0
 7143 0145 03       		.uleb128 0x3
 7144 0146 08       		.uleb128 0x8
 7145 0147 3A       		.uleb128 0x3a
 7146 0148 0B       		.uleb128 0xb
 7147 0149 3B       		.uleb128 0x3b
 7148 014a 05       		.uleb128 0x5
 7149 014b 49       		.uleb128 0x49
 7150 014c 13       		.uleb128 0x13
 7151 014d 02       		.uleb128 0x2
 7152 014e 18       		.uleb128 0x18
 7153 014f 00       		.byte	0
 7154 0150 00       		.byte	0
 7155 0151 17       		.uleb128 0x17
 7156 0152 2E       		.uleb128 0x2e
 7157 0153 01       		.byte	0x1
 7158 0154 3F       		.uleb128 0x3f
 7159 0155 19       		.uleb128 0x19
 7160 0156 03       		.uleb128 0x3
 7161 0157 0E       		.uleb128 0xe
 7162 0158 3A       		.uleb128 0x3a
 7163 0159 0B       		.uleb128 0xb
 7164 015a 3B       		.uleb128 0x3b
 7165 015b 05       		.uleb128 0x5
 7166 015c 11       		.uleb128 0x11
 7167 015d 01       		.uleb128 0x1
 7168 015e 12       		.uleb128 0x12
 7169 015f 06       		.uleb128 0x6
 7170 0160 40       		.uleb128 0x40
 7171 0161 18       		.uleb128 0x18
 7172 0162 9642     		.uleb128 0x2116
 7173 0164 19       		.uleb128 0x19
 7174 0165 01       		.uleb128 0x1
 7175 0166 13       		.uleb128 0x13
 7176 0167 00       		.byte	0
 7177 0168 00       		.byte	0
 7178 0169 18       		.uleb128 0x18
 7179 016a 05       		.uleb128 0x5
 7180 016b 00       		.byte	0
 7181 016c 03       		.uleb128 0x3
 7182 016d 0E       		.uleb128 0xe
 7183 016e 3A       		.uleb128 0x3a
 7184 016f 0B       		.uleb128 0xb
 7185 0170 3B       		.uleb128 0x3b
 7186 0171 05       		.uleb128 0x5
 7187 0172 49       		.uleb128 0x49
 7188 0173 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 148


 7189 0174 02       		.uleb128 0x2
 7190 0175 18       		.uleb128 0x18
 7191 0176 00       		.byte	0
 7192 0177 00       		.byte	0
 7193 0178 19       		.uleb128 0x19
 7194 0179 2E       		.uleb128 0x2e
 7195 017a 00       		.byte	0
 7196 017b 3F       		.uleb128 0x3f
 7197 017c 19       		.uleb128 0x19
 7198 017d 03       		.uleb128 0x3
 7199 017e 0E       		.uleb128 0xe
 7200 017f 3A       		.uleb128 0x3a
 7201 0180 0B       		.uleb128 0xb
 7202 0181 3B       		.uleb128 0x3b
 7203 0182 05       		.uleb128 0x5
 7204 0183 11       		.uleb128 0x11
 7205 0184 01       		.uleb128 0x1
 7206 0185 12       		.uleb128 0x12
 7207 0186 06       		.uleb128 0x6
 7208 0187 40       		.uleb128 0x40
 7209 0188 18       		.uleb128 0x18
 7210 0189 9642     		.uleb128 0x2116
 7211 018b 19       		.uleb128 0x19
 7212 018c 00       		.byte	0
 7213 018d 00       		.byte	0
 7214 018e 1A       		.uleb128 0x1a
 7215 018f 2E       		.uleb128 0x2e
 7216 0190 00       		.byte	0
 7217 0191 3F       		.uleb128 0x3f
 7218 0192 19       		.uleb128 0x19
 7219 0193 03       		.uleb128 0x3
 7220 0194 0E       		.uleb128 0xe
 7221 0195 3A       		.uleb128 0x3a
 7222 0196 0B       		.uleb128 0xb
 7223 0197 3B       		.uleb128 0x3b
 7224 0198 05       		.uleb128 0x5
 7225 0199 11       		.uleb128 0x11
 7226 019a 01       		.uleb128 0x1
 7227 019b 12       		.uleb128 0x12
 7228 019c 06       		.uleb128 0x6
 7229 019d 40       		.uleb128 0x40
 7230 019e 18       		.uleb128 0x18
 7231 019f 9742     		.uleb128 0x2117
 7232 01a1 19       		.uleb128 0x19
 7233 01a2 00       		.byte	0
 7234 01a3 00       		.byte	0
 7235 01a4 1B       		.uleb128 0x1b
 7236 01a5 34       		.uleb128 0x34
 7237 01a6 00       		.byte	0
 7238 01a7 03       		.uleb128 0x3
 7239 01a8 0E       		.uleb128 0xe
 7240 01a9 3A       		.uleb128 0x3a
 7241 01aa 0B       		.uleb128 0xb
 7242 01ab 3B       		.uleb128 0x3b
 7243 01ac 05       		.uleb128 0x5
 7244 01ad 49       		.uleb128 0x49
 7245 01ae 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 149


 7246 01af 3F       		.uleb128 0x3f
 7247 01b0 19       		.uleb128 0x19
 7248 01b1 3C       		.uleb128 0x3c
 7249 01b2 19       		.uleb128 0x19
 7250 01b3 00       		.byte	0
 7251 01b4 00       		.byte	0
 7252 01b5 1C       		.uleb128 0x1c
 7253 01b6 35       		.uleb128 0x35
 7254 01b7 00       		.byte	0
 7255 01b8 49       		.uleb128 0x49
 7256 01b9 13       		.uleb128 0x13
 7257 01ba 00       		.byte	0
 7258 01bb 00       		.byte	0
 7259 01bc 1D       		.uleb128 0x1d
 7260 01bd 34       		.uleb128 0x34
 7261 01be 00       		.byte	0
 7262 01bf 03       		.uleb128 0x3
 7263 01c0 08       		.uleb128 0x8
 7264 01c1 3A       		.uleb128 0x3a
 7265 01c2 0B       		.uleb128 0xb
 7266 01c3 3B       		.uleb128 0x3b
 7267 01c4 0B       		.uleb128 0xb
 7268 01c5 49       		.uleb128 0x49
 7269 01c6 13       		.uleb128 0x13
 7270 01c7 3F       		.uleb128 0x3f
 7271 01c8 19       		.uleb128 0x19
 7272 01c9 02       		.uleb128 0x2
 7273 01ca 18       		.uleb128 0x18
 7274 01cb 00       		.byte	0
 7275 01cc 00       		.byte	0
 7276 01cd 1E       		.uleb128 0x1e
 7277 01ce 34       		.uleb128 0x34
 7278 01cf 00       		.byte	0
 7279 01d0 03       		.uleb128 0x3
 7280 01d1 0E       		.uleb128 0xe
 7281 01d2 3A       		.uleb128 0x3a
 7282 01d3 0B       		.uleb128 0xb
 7283 01d4 3B       		.uleb128 0x3b
 7284 01d5 0B       		.uleb128 0xb
 7285 01d6 49       		.uleb128 0x49
 7286 01d7 13       		.uleb128 0x13
 7287 01d8 3F       		.uleb128 0x3f
 7288 01d9 19       		.uleb128 0x19
 7289 01da 02       		.uleb128 0x2
 7290 01db 18       		.uleb128 0x18
 7291 01dc 00       		.byte	0
 7292 01dd 00       		.byte	0
 7293 01de 1F       		.uleb128 0x1f
 7294 01df 21       		.uleb128 0x21
 7295 01e0 00       		.byte	0
 7296 01e1 49       		.uleb128 0x49
 7297 01e2 13       		.uleb128 0x13
 7298 01e3 2F       		.uleb128 0x2f
 7299 01e4 05       		.uleb128 0x5
 7300 01e5 00       		.byte	0
 7301 01e6 00       		.byte	0
 7302 01e7 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 150


 7303 01e8 34       		.uleb128 0x34
 7304 01e9 00       		.byte	0
 7305 01ea 03       		.uleb128 0x3
 7306 01eb 0E       		.uleb128 0xe
 7307 01ec 3A       		.uleb128 0x3a
 7308 01ed 0B       		.uleb128 0xb
 7309 01ee 3B       		.uleb128 0x3b
 7310 01ef 05       		.uleb128 0x5
 7311 01f0 49       		.uleb128 0x49
 7312 01f1 13       		.uleb128 0x13
 7313 01f2 3F       		.uleb128 0x3f
 7314 01f3 19       		.uleb128 0x19
 7315 01f4 02       		.uleb128 0x2
 7316 01f5 18       		.uleb128 0x18
 7317 01f6 00       		.byte	0
 7318 01f7 00       		.byte	0
 7319 01f8 00       		.byte	0
 7320              		.section	.debug_aranges,"",%progbits
 7321 0000 6C010000 		.4byte	0x16c
 7322 0004 0200     		.2byte	0x2
 7323 0006 00000000 		.4byte	.Ldebug_info0
 7324 000a 04       		.byte	0x4
 7325 000b 00       		.byte	0
 7326 000c 0000     		.2byte	0
 7327 000e 0000     		.2byte	0
 7328 0010 00000000 		.4byte	.LFB63
 7329 0014 0C000000 		.4byte	.LFE63-.LFB63
 7330 0018 00000000 		.4byte	.LFB64
 7331 001c 2C000000 		.4byte	.LFE64-.LFB64
 7332 0020 00000000 		.4byte	.LFB65
 7333 0024 A0010000 		.4byte	.LFE65-.LFB65
 7334 0028 00000000 		.4byte	.LFB66
 7335 002c AC000000 		.4byte	.LFE66-.LFB66
 7336 0030 00000000 		.4byte	.LFB67
 7337 0034 20000000 		.4byte	.LFE67-.LFB67
 7338 0038 00000000 		.4byte	.LFB68
 7339 003c 28000000 		.4byte	.LFE68-.LFB68
 7340 0040 00000000 		.4byte	.LFB69
 7341 0044 0A000000 		.4byte	.LFE69-.LFB69
 7342 0048 00000000 		.4byte	.LFB70
 7343 004c 28000000 		.4byte	.LFE70-.LFB70
 7344 0050 00000000 		.4byte	.LFB71
 7345 0054 2C070000 		.4byte	.LFE71-.LFB71
 7346 0058 00000000 		.4byte	.LFB72
 7347 005c 60010000 		.4byte	.LFE72-.LFB72
 7348 0060 00000000 		.4byte	.LFB73
 7349 0064 18000000 		.4byte	.LFE73-.LFB73
 7350 0068 00000000 		.4byte	.LFB74
 7351 006c 18000000 		.4byte	.LFE74-.LFB74
 7352 0070 00000000 		.4byte	.LFB75
 7353 0074 54000000 		.4byte	.LFE75-.LFB75
 7354 0078 00000000 		.4byte	.LFB76
 7355 007c F4000000 		.4byte	.LFE76-.LFB76
 7356 0080 00000000 		.4byte	.LFB77
 7357 0084 18000000 		.4byte	.LFE77-.LFB77
 7358 0088 00000000 		.4byte	.LFB78
 7359 008c 18000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 151


 7360 0090 00000000 		.4byte	.LFB79
 7361 0094 22000000 		.4byte	.LFE79-.LFB79
 7362 0098 00000000 		.4byte	.LFB80
 7363 009c 1C000000 		.4byte	.LFE80-.LFB80
 7364 00a0 00000000 		.4byte	.LFB81
 7365 00a4 28000000 		.4byte	.LFE81-.LFB81
 7366 00a8 00000000 		.4byte	.LFB82
 7367 00ac 2C000000 		.4byte	.LFE82-.LFB82
 7368 00b0 00000000 		.4byte	.LFB83
 7369 00b4 44000000 		.4byte	.LFE83-.LFB83
 7370 00b8 00000000 		.4byte	.LFB84
 7371 00bc 38000000 		.4byte	.LFE84-.LFB84
 7372 00c0 00000000 		.4byte	.LFB85
 7373 00c4 38000000 		.4byte	.LFE85-.LFB85
 7374 00c8 00000000 		.4byte	.LFB86
 7375 00cc 38000000 		.4byte	.LFE86-.LFB86
 7376 00d0 00000000 		.4byte	.LFB87
 7377 00d4 14000000 		.4byte	.LFE87-.LFB87
 7378 00d8 00000000 		.4byte	.LFB88
 7379 00dc 18000000 		.4byte	.LFE88-.LFB88
 7380 00e0 00000000 		.4byte	.LFB89
 7381 00e4 18000000 		.4byte	.LFE89-.LFB89
 7382 00e8 00000000 		.4byte	.LFB90
 7383 00ec 18000000 		.4byte	.LFE90-.LFB90
 7384 00f0 00000000 		.4byte	.LFB91
 7385 00f4 18000000 		.4byte	.LFE91-.LFB91
 7386 00f8 00000000 		.4byte	.LFB92
 7387 00fc B8000000 		.4byte	.LFE92-.LFB92
 7388 0100 00000000 		.4byte	.LFB93
 7389 0104 28030000 		.4byte	.LFE93-.LFB93
 7390 0108 00000000 		.4byte	.LFB94
 7391 010c 40000000 		.4byte	.LFE94-.LFB94
 7392 0110 00000000 		.4byte	.LFB95
 7393 0114 40000000 		.4byte	.LFE95-.LFB95
 7394 0118 00000000 		.4byte	.LFB96
 7395 011c 30020000 		.4byte	.LFE96-.LFB96
 7396 0120 00000000 		.4byte	.LFB97
 7397 0124 0C000000 		.4byte	.LFE97-.LFB97
 7398 0128 00000000 		.4byte	.LFB98
 7399 012c 4C010000 		.4byte	.LFE98-.LFB98
 7400 0130 00000000 		.4byte	.LFB99
 7401 0134 0C000000 		.4byte	.LFE99-.LFB99
 7402 0138 00000000 		.4byte	.LFB100
 7403 013c C0000000 		.4byte	.LFE100-.LFB100
 7404 0140 00000000 		.4byte	.LFB101
 7405 0144 B8000000 		.4byte	.LFE101-.LFB101
 7406 0148 00000000 		.4byte	.LFB102
 7407 014c 4A000000 		.4byte	.LFE102-.LFB102
 7408 0150 00000000 		.4byte	.LFB103
 7409 0154 68000000 		.4byte	.LFE103-.LFB103
 7410 0158 00000000 		.4byte	.LFB104
 7411 015c 50000000 		.4byte	.LFE104-.LFB104
 7412 0160 00000000 		.4byte	.LFB105
 7413 0164 0C000000 		.4byte	.LFE105-.LFB105
 7414 0168 00000000 		.4byte	0
 7415 016c 00000000 		.4byte	0
 7416              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 152


 7417              	.Ldebug_ranges0:
 7418 0000 00000000 		.4byte	.LFB63
 7419 0004 0C000000 		.4byte	.LFE63
 7420 0008 00000000 		.4byte	.LFB64
 7421 000c 2C000000 		.4byte	.LFE64
 7422 0010 00000000 		.4byte	.LFB65
 7423 0014 A0010000 		.4byte	.LFE65
 7424 0018 00000000 		.4byte	.LFB66
 7425 001c AC000000 		.4byte	.LFE66
 7426 0020 00000000 		.4byte	.LFB67
 7427 0024 20000000 		.4byte	.LFE67
 7428 0028 00000000 		.4byte	.LFB68
 7429 002c 28000000 		.4byte	.LFE68
 7430 0030 00000000 		.4byte	.LFB69
 7431 0034 0A000000 		.4byte	.LFE69
 7432 0038 00000000 		.4byte	.LFB70
 7433 003c 28000000 		.4byte	.LFE70
 7434 0040 00000000 		.4byte	.LFB71
 7435 0044 2C070000 		.4byte	.LFE71
 7436 0048 00000000 		.4byte	.LFB72
 7437 004c 60010000 		.4byte	.LFE72
 7438 0050 00000000 		.4byte	.LFB73
 7439 0054 18000000 		.4byte	.LFE73
 7440 0058 00000000 		.4byte	.LFB74
 7441 005c 18000000 		.4byte	.LFE74
 7442 0060 00000000 		.4byte	.LFB75
 7443 0064 54000000 		.4byte	.LFE75
 7444 0068 00000000 		.4byte	.LFB76
 7445 006c F4000000 		.4byte	.LFE76
 7446 0070 00000000 		.4byte	.LFB77
 7447 0074 18000000 		.4byte	.LFE77
 7448 0078 00000000 		.4byte	.LFB78
 7449 007c 18000000 		.4byte	.LFE78
 7450 0080 00000000 		.4byte	.LFB79
 7451 0084 22000000 		.4byte	.LFE79
 7452 0088 00000000 		.4byte	.LFB80
 7453 008c 1C000000 		.4byte	.LFE80
 7454 0090 00000000 		.4byte	.LFB81
 7455 0094 28000000 		.4byte	.LFE81
 7456 0098 00000000 		.4byte	.LFB82
 7457 009c 2C000000 		.4byte	.LFE82
 7458 00a0 00000000 		.4byte	.LFB83
 7459 00a4 44000000 		.4byte	.LFE83
 7460 00a8 00000000 		.4byte	.LFB84
 7461 00ac 38000000 		.4byte	.LFE84
 7462 00b0 00000000 		.4byte	.LFB85
 7463 00b4 38000000 		.4byte	.LFE85
 7464 00b8 00000000 		.4byte	.LFB86
 7465 00bc 38000000 		.4byte	.LFE86
 7466 00c0 00000000 		.4byte	.LFB87
 7467 00c4 14000000 		.4byte	.LFE87
 7468 00c8 00000000 		.4byte	.LFB88
 7469 00cc 18000000 		.4byte	.LFE88
 7470 00d0 00000000 		.4byte	.LFB89
 7471 00d4 18000000 		.4byte	.LFE89
 7472 00d8 00000000 		.4byte	.LFB90
 7473 00dc 18000000 		.4byte	.LFE90
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 153


 7474 00e0 00000000 		.4byte	.LFB91
 7475 00e4 18000000 		.4byte	.LFE91
 7476 00e8 00000000 		.4byte	.LFB92
 7477 00ec B8000000 		.4byte	.LFE92
 7478 00f0 00000000 		.4byte	.LFB93
 7479 00f4 28030000 		.4byte	.LFE93
 7480 00f8 00000000 		.4byte	.LFB94
 7481 00fc 40000000 		.4byte	.LFE94
 7482 0100 00000000 		.4byte	.LFB95
 7483 0104 40000000 		.4byte	.LFE95
 7484 0108 00000000 		.4byte	.LFB96
 7485 010c 30020000 		.4byte	.LFE96
 7486 0110 00000000 		.4byte	.LFB97
 7487 0114 0C000000 		.4byte	.LFE97
 7488 0118 00000000 		.4byte	.LFB98
 7489 011c 4C010000 		.4byte	.LFE98
 7490 0120 00000000 		.4byte	.LFB99
 7491 0124 0C000000 		.4byte	.LFE99
 7492 0128 00000000 		.4byte	.LFB100
 7493 012c C0000000 		.4byte	.LFE100
 7494 0130 00000000 		.4byte	.LFB101
 7495 0134 B8000000 		.4byte	.LFE101
 7496 0138 00000000 		.4byte	.LFB102
 7497 013c 4A000000 		.4byte	.LFE102
 7498 0140 00000000 		.4byte	.LFB103
 7499 0144 68000000 		.4byte	.LFE103
 7500 0148 00000000 		.4byte	.LFB104
 7501 014c 50000000 		.4byte	.LFE104
 7502 0150 00000000 		.4byte	.LFB105
 7503 0154 0C000000 		.4byte	.LFE105
 7504 0158 00000000 		.4byte	0
 7505 015c 00000000 		.4byte	0
 7506              		.section	.debug_line,"",%progbits
 7507              	.Ldebug_line0:
 7508 0000 88070000 		.section	.debug_str,"MS",%progbits,1
 7508      02006701 
 7508      00000201 
 7508      FB0E0D00 
 7508      01010101 
 7509              	.LASF142:
 7510 0000 64697265 		.ascii	"direction\000"
 7510      6374696F 
 7510      6E00
 7511              	.LASF190:
 7512 000a 74726163 		.ascii	"tracked_direction\000"
 7512      6B65645F 
 7512      64697265 
 7512      6374696F 
 7512      6E00
 7513              	.LASF198:
 7514 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7514      73657273 
 7514      5C4C6F67 
 7514      616E5C44 
 7514      65736B74 
 7515 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7515      315F436C 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 154


 7515      6173732E 
 7515      63796473 
 7515      6E00
 7516              	.LASF25:
 7517 005b 52545552 		.ascii	"RTURN\000"
 7517      4E00
 7518              	.LASF195:
 7519 0061 72696768 		.ascii	"rightTurnCount\000"
 7519      74547572 
 7519      6E436F75 
 7519      6E7400
 7520              	.LASF39:
 7521 0070 44455354 		.ascii	"DEST_TEST\000"
 7521      5F544553 
 7521      5400
 7522              	.LASF150:
 7523 007a 71756164 		.ascii	"quad_diff1\000"
 7523      5F646966 
 7523      663100
 7524              	.LASF151:
 7525 0085 71756164 		.ascii	"quad_diff2\000"
 7525      5F646966 
 7525      663200
 7526              	.LASF104:
 7527 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7527      5F446563 
 7527      5F726573 
 7527      706F6E73 
 7527      6500
 7528              	.LASF169:
 7529 00a2 70726576 		.ascii	"prevVoltage\000"
 7529      566F6C74 
 7529      61676500 
 7530              	.LASF153:
 7531 00ae 73746172 		.ascii	"start_turn_count\000"
 7531      745F7475 
 7531      726E5F63 
 7531      6F756E74 
 7531      00
 7532              	.LASF10:
 7533 00bf 756E7369 		.ascii	"unsigned int\000"
 7533      676E6564 
 7533      20696E74 
 7533      00
 7534              	.LASF179:
 7535 00cc 74726163 		.ascii	"track_mode\000"
 7535      6B5F6D6F 
 7535      646500
 7536              	.LASF5:
 7537 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7537      7433325F 
 7537      7400
 7538              	.LASF19:
 7539 00e1 696E7431 		.ascii	"int16\000"
 7539      3600
 7540              	.LASF176:
 7541 00e7 73797374 		.ascii	"system_state\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 155


 7541      656D5F73 
 7541      74617465 
 7541      00
 7542              	.LASF24:
 7543 00f4 4C545552 		.ascii	"LTURN\000"
 7543      4E00
 7544              	.LASF70:
 7545 00fa 6E657874 		.ascii	"nextInstruction\000"
 7545      496E7374 
 7545      72756374 
 7545      696F6E00 
 7546              	.LASF160:
 7547 010a 74617267 		.ascii	"target_distance_quad\000"
 7547      65745F64 
 7547      69737461 
 7547      6E63655F 
 7547      71756164 
 7548              	.LASF27:
 7549 011f 54524143 		.ascii	"TRACKING\000"
 7549      4B494E47 
 7549      00
 7550              	.LASF170:
 7551 0128 70726576 		.ascii	"prevVoltage2\000"
 7551      566F6C74 
 7551      61676532 
 7551      00
 7552              	.LASF184:
 7553 0135 73656E73 		.ascii	"sensorsDisabled\000"
 7553      6F727344 
 7553      69736162 
 7553      6C656400 
 7554              	.LASF71:
 7555 0145 7061636B 		.ascii	"packet_bytes\000"
 7555      65745F62 
 7555      79746573 
 7555      00
 7556              	.LASF54:
 7557 0152 67325F78 		.ascii	"g2_xpos\000"
 7557      706F7300 
 7558              	.LASF32:
 7559 015a 6D6F6465 		.ascii	"mode\000"
 7559      00
 7560              	.LASF146:
 7561 015f 71756164 		.ascii	"quad_count1\000"
 7561      5F636F75 
 7561      6E743100 
 7562              	.LASF147:
 7563 016b 71756164 		.ascii	"quad_count2\000"
 7563      5F636F75 
 7563      6E743200 
 7564              	.LASF113:
 7565 0177 74726163 		.ascii	"trackLineU\000"
 7565      6B4C696E 
 7565      655500
 7566              	.LASF189:
 7567 0182 726F626F 		.ascii	"robot_direction\000"
 7567      745F6469 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 156


 7567      72656374 
 7567      696F6E00 
 7568              	.LASF112:
 7569 0192 74726163 		.ascii	"trackLineZ\000"
 7569      6B4C696E 
 7569      655A00
 7570              	.LASF194:
 7571 019d 6C656674 		.ascii	"leftTurnCount\000"
 7571      5475726E 
 7571      436F756E 
 7571      7400
 7572              	.LASF182:
 7573 01ab 73706565 		.ascii	"speed\000"
 7573      6400
 7574              	.LASF36:
 7575 01b1 53515541 		.ascii	"SQUARE_TRACK\000"
 7575      52455F54 
 7575      5241434B 
 7575      00
 7576              	.LASF138:
 7577 01be 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7577      5F72665F 
 7577      7472616E 
 7577      736D6973 
 7577      73696F6E 
 7578              	.LASF139:
 7579 01da 666C6167 		.ascii	"flag_print_rf\000"
 7579      5F707269 
 7579      6E745F72 
 7579      6600
 7580              	.LASF178:
 7581 01e8 6D6F7665 		.ascii	"movement_state\000"
 7581      6D656E74 
 7581      5F737461 
 7581      746500
 7582              	.LASF28:
 7583 01f7 54524143 		.ascii	"TRACKING_U\000"
 7583      4B494E47 
 7583      5F5500
 7584              	.LASF94:
 7585 0202 696E6974 		.ascii	"initForward\000"
 7585      466F7277 
 7585      61726400 
 7586              	.LASF14:
 7587 020e 75696E74 		.ascii	"uint32_t\000"
 7587      33325F74 
 7587      00
 7588              	.LASF57:
 7589 0217 67325F64 		.ascii	"g2_direction\000"
 7589      69726563 
 7589      74696F6E 
 7589      00
 7590              	.LASF60:
 7591 0224 6973725F 		.ascii	"isr_quad1\000"
 7591      71756164 
 7591      3100
 7592              	.LASF20:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 157


 7593 022e 666C6F61 		.ascii	"float\000"
 7593      7400
 7594              	.LASF79:
 7595 0234 73657453 		.ascii	"setSpeed\000"
 7595      70656564 
 7595      00
 7596              	.LASF174:
 7597 023d 75736242 		.ascii	"usbBuffer\000"
 7597      75666665 
 7597      7200
 7598              	.LASF42:
 7599 0247 696E6465 		.ascii	"index\000"
 7599      7800
 7600              	.LASF23:
 7601 024d 44524956 		.ascii	"DRIVE\000"
 7601      4500
 7602              	.LASF73:
 7603 0253 73747269 		.ascii	"string_packet\000"
 7603      6E675F70 
 7603      61636B65 
 7603      7400
 7604              	.LASF103:
 7605 0261 6368616E 		.ascii	"changeToBT\000"
 7605      6765546F 
 7605      425400
 7606              	.LASF82:
 7607 026c 636F756E 		.ascii	"countsLeft\000"
 7607      74734C65 
 7607      667400
 7608              	.LASF87:
 7609 0277 64726976 		.ascii	"driveForwards\000"
 7609      65466F72 
 7609      77617264 
 7609      7300
 7610              	.LASF89:
 7611 0285 7475726E 		.ascii	"turnLeft\000"
 7611      4C656674 
 7611      00
 7612              	.LASF9:
 7613 028e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7613      206C6F6E 
 7613      6720756E 
 7613      7369676E 
 7613      65642069 
 7614              	.LASF135:
 7615 02a5 666C6167 		.ascii	"flag_packet\000"
 7615      5F706163 
 7615      6B657400 
 7616              	.LASF67:
 7617 02b1 66726F6E 		.ascii	"frontSensors\000"
 7617      7453656E 
 7617      736F7273 
 7617      00
 7618              	.LASF61:
 7619 02be 6973725F 		.ascii	"isr_turn_timer\000"
 7619      7475726E 
 7619      5F74696D 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 158


 7619      657200
 7620              	.LASF102:
 7621 02cd 6368616E 		.ascii	"changeToRF\000"
 7621      6765546F 
 7621      524600
 7622              	.LASF91:
 7623 02d8 696E6974 		.ascii	"initTurnLeft\000"
 7623      5475726E 
 7623      4C656674 
 7623      00
 7624              	.LASF168:
 7625 02e5 706F7274 		.ascii	"portOpen\000"
 7625      4F70656E 
 7625      00
 7626              	.LASF95:
 7627 02ee 696E6974 		.ascii	"initBrake\000"
 7627      4272616B 
 7627      6500
 7628              	.LASF131:
 7629 02f8 666C6167 		.ascii	"flag_ts_update\000"
 7629      5F74735F 
 7629      75706461 
 7629      746500
 7630              	.LASF115:
 7631 0307 7363616C 		.ascii	"scalingFactor\000"
 7631      696E6746 
 7631      6163746F 
 7631      7200
 7632              	.LASF105:
 7633 0315 6C656674 		.ascii	"leftSpeed\000"
 7633      53706565 
 7633      6400
 7634              	.LASF130:
 7635 031f 666C6167 		.ascii	"flag_ts_enc\000"
 7635      5F74735F 
 7635      656E6300 
 7636              	.LASF180:
 7637 032b 62797465 		.ascii	"byteCount\000"
 7637      436F756E 
 7637      7400
 7638              	.LASF66:
 7639 0335 61637469 		.ascii	"actionDebounce\000"
 7639      6F6E4465 
 7639      626F756E 
 7639      636500
 7640              	.LASF63:
 7641 0344 62757474 		.ascii	"button\000"
 7641      6F6E00
 7642              	.LASF177:
 7643 034b 70726576 		.ascii	"prev_movement_state\000"
 7643      5F6D6F76 
 7643      656D656E 
 7643      745F7374 
 7643      61746500 
 7644              	.LASF121:
 7645 035f 73656E73 		.ascii	"sensorVals\000"
 7645      6F725661 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 159


 7645      6C7300
 7646              	.LASF117:
 7647 036a 72657375 		.ascii	"result_str\000"
 7647      6C745F73 
 7647      747200
 7648              	.LASF124:
 7649 0375 75617274 		.ascii	"uart_set_PWM\000"
 7649      5F736574 
 7649      5F50574D 
 7649      00
 7650              	.LASF98:
 7651 0382 696E6974 		.ascii	"inittrackLineZ\000"
 7651      74726163 
 7651      6B4C696E 
 7651      655A00
 7652              	.LASF44:
 7653 0391 726F626F 		.ascii	"robot_ypos\000"
 7653      745F7970 
 7653      6F7300
 7654              	.LASF129:
 7655 039c 74735F64 		.ascii	"ts_display\000"
 7655      6973706C 
 7655      617900
 7656              	.LASF114:
 7657 03a7 7072696E 		.ascii	"print_ADC\000"
 7657      745F4144 
 7657      4300
 7658              	.LASF107:
 7659 03b1 7363616C 		.ascii	"scalingLeft\000"
 7659      696E674C 
 7659      65667400 
 7660              	.LASF12:
 7661 03bd 63686172 		.ascii	"char\000"
 7661      00
 7662              	.LASF48:
 7663 03c2 67305F73 		.ascii	"g0_speed\000"
 7663      70656564 
 7663      00
 7664              	.LASF157:
 7665 03cb 72696768 		.ascii	"rightSpeedLimit\000"
 7665      74537065 
 7665      65644C69 
 7665      6D697400 
 7666              	.LASF75:
 7667 03db 7365744C 		.ascii	"setLeftDir\000"
 7667      65667444 
 7667      697200
 7668              	.LASF183:
 7669 03e6 696E7374 		.ascii	"instructionCount\000"
 7669      72756374 
 7669      696F6E43 
 7669      6F756E74 
 7669      00
 7670              	.LASF90:
 7671 03f7 7475726E 		.ascii	"turnU\000"
 7671      5500
 7672              	.LASF55:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 160


 7673 03fd 67325F79 		.ascii	"g2_ypos\000"
 7673      706F7300 
 7674              	.LASF16:
 7675 0405 75696E74 		.ascii	"uint16\000"
 7675      313600
 7676              	.LASF18:
 7677 040c 696E7438 		.ascii	"int8\000"
 7677      00
 7678              	.LASF69:
 7679 0411 6E657874 		.ascii	"nextStepDist\000"
 7679      53746570 
 7679      44697374 
 7679      00
 7680              	.LASF53:
 7681 041e 67315F64 		.ascii	"g1_direction\000"
 7681      69726563 
 7681      74696F6E 
 7681      00
 7682              	.LASF186:
 7683 042b 70617468 		.ascii	"path\000"
 7683      00
 7684              	.LASF76:
 7685 0430 73657452 		.ascii	"setRightDir\000"
 7685      69676874 
 7685      44697200 
 7686              	.LASF34:
 7687 043c 43555256 		.ascii	"CURVE_TRACK\000"
 7687      455F5452 
 7687      41434B00 
 7688              	.LASF109:
 7689 0448 696E7465 		.ascii	"interCalc\000"
 7689      7243616C 
 7689      6300
 7690              	.LASF144:
 7691 0452 42545F45 		.ascii	"BT_ENABLED\000"
 7691      4E41424C 
 7691      454400
 7692              	.LASF81:
 7693 045d 72696768 		.ascii	"right\000"
 7693      7400
 7694              	.LASF164:
 7695 0463 696E6974 		.ascii	"initial_pos_valid\000"
 7695      69616C5F 
 7695      706F735F 
 7695      76616C69 
 7695      6400
 7696              	.LASF8:
 7697 0475 6C6F6E67 		.ascii	"long long int\000"
 7697      206C6F6E 
 7697      6720696E 
 7697      7400
 7698              	.LASF175:
 7699 0483 62756666 		.ascii	"buffer_state\000"
 7699      65725F73 
 7699      74617465 
 7699      00
 7700              	.LASF50:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 161


 7701 0490 67315F78 		.ascii	"g1_xpos\000"
 7701      706F7300 
 7702              	.LASF96:
 7703 0498 696E6974 		.ascii	"initTrack\000"
 7703      54726163 
 7703      6B00
 7704              	.LASF68:
 7705 04a2 6E657874 		.ascii	"nextStep\000"
 7705      53746570 
 7705      00
 7706              	.LASF196:
 7707 04ab 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7707      4320342E 
 7707      392E3320 
 7707      32303135 
 7707      30333033 
 7708 04de 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7708      20726576 
 7708      6973696F 
 7708      6E203232 
 7708      31323230 
 7709 0511 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7709      66756E63 
 7709      74696F6E 
 7709      2D736563 
 7709      74696F6E 
 7710              	.LASF56:
 7711 0539 67325F73 		.ascii	"g2_speed\000"
 7711      70656564 
 7711      00
 7712              	.LASF47:
 7713 0542 67305F79 		.ascii	"g0_ypos\000"
 7713      706F7300 
 7714              	.LASF100:
 7715 054a 72665F63 		.ascii	"rf_char\000"
 7715      68617200 
 7716              	.LASF185:
 7717 0552 666F6F64 		.ascii	"food_list\000"
 7717      5F6C6973 
 7717      7400
 7718              	.LASF143:
 7719 055c 42494E5F 		.ascii	"BIN_ENABLED\000"
 7719      454E4142 
 7719      4C454400 
 7720              	.LASF106:
 7721 0568 72696768 		.ascii	"rightSpeed\000"
 7721      74537065 
 7721      656400
 7722              	.LASF128:
 7723 0573 74735F73 		.ascii	"ts_speed\000"
 7723      70656564 
 7723      00
 7724              	.LASF17:
 7725 057c 75696E74 		.ascii	"uint32\000"
 7725      333200
 7726              	.LASF192:
 7727 0583 696E7374 		.ascii	"instructions\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 162


 7727      72756374 
 7727      696F6E73 
 7727      00
 7728              	.LASF83:
 7729 0590 636F756E 		.ascii	"countsRight\000"
 7729      74735269 
 7729      67687400 
 7730              	.LASF199:
 7731 059c 64617461 		.ascii	"data_main\000"
 7731      5F6D6169 
 7731      6E00
 7732              	.LASF116:
 7733 05a6 636F6E76 		.ascii	"converted_val\000"
 7733      65727465 
 7733      645F7661 
 7733      6C00
 7734              	.LASF187:
 7735 05b4 73746172 		.ascii	"start\000"
 7735      7400
 7736              	.LASF41:
 7737 05ba 72737369 		.ascii	"rssi\000"
 7737      00
 7738              	.LASF111:
 7739 05bf 74726163 		.ascii	"trackLine\000"
 7739      6B4C696E 
 7739      6500
 7740              	.LASF49:
 7741 05c9 67305F64 		.ascii	"g0_direction\000"
 7741      69726563 
 7741      74696F6E 
 7741      00
 7742              	.LASF140:
 7743 05d6 666C6167 		.ascii	"flag_receive_ADC\000"
 7743      5F726563 
 7743      65697665 
 7743      5F414443 
 7743      00
 7744              	.LASF26:
 7745 05e7 53544F50 		.ascii	"STOPPED\000"
 7745      50454400 
 7746              	.LASF101:
 7747 05ef 42545F72 		.ascii	"BT_rxInt\000"
 7747      78496E74 
 7747      00
 7748              	.LASF22:
 7749 05f8 6C6F6E67 		.ascii	"long double\000"
 7749      20646F75 
 7749      626C6500 
 7750              	.LASF64:
 7751 0604 6973725F 		.ascii	"isr_adcTimer\000"
 7751      61646354 
 7751      696D6572 
 7751      00
 7752              	.LASF154:
 7753 0611 6C656674 		.ascii	"left_duty_cycle\000"
 7753      5F647574 
 7753      795F6379 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 163


 7753      636C6500 
 7754              	.LASF65:
 7755 0621 6973725F 		.ascii	"isr_deadzone\000"
 7755      64656164 
 7755      7A6F6E65 
 7755      00
 7756              	.LASF132:
 7757 062e 666C6167 		.ascii	"flag_ts_speed\000"
 7757      5F74735F 
 7757      73706565 
 7757      6400
 7758              	.LASF137:
 7759 063c 64617461 		.ascii	"dataready_flag\000"
 7759      72656164 
 7759      795F666C 
 7759      616700
 7760              	.LASF166:
 7761 064b 696E6974 		.ascii	"initial_y_pos\000"
 7761      69616C5F 
 7761      795F706F 
 7761      7300
 7762              	.LASF134:
 7763 0659 666C6167 		.ascii	"flag_rx\000"
 7763      5F727800 
 7764              	.LASF2:
 7765 0661 73686F72 		.ascii	"short int\000"
 7765      7420696E 
 7765      7400
 7766              	.LASF141:
 7767 066b 6164635F 		.ascii	"adc_result\000"
 7767      72657375 
 7767      6C7400
 7768              	.LASF93:
 7769 0676 696E6974 		.ascii	"initTurnU\000"
 7769      5475726E 
 7769      5500
 7770              	.LASF145:
 7771 0680 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7771      5F63616C 
 7771      635F7768 
 7771      65656C73 
 7771      70656564 
 7772              	.LASF4:
 7773 0695 6C6F6E67 		.ascii	"long int\000"
 7773      20696E74 
 7773      00
 7774              	.LASF92:
 7775 069e 696E6974 		.ascii	"initTurnRight\000"
 7775      5475726E 
 7775      52696768 
 7775      7400
 7776              	.LASF35:
 7777 06ac 555F5452 		.ascii	"U_TRACK\000"
 7777      41434B00 
 7778              	.LASF125:
 7779 06b4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7779      52784275 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 164


 7779      66666572 
 7779      00
 7780              	.LASF119:
 7781 06c1 7072696E 		.ascii	"printString\000"
 7781      74537472 
 7781      696E6700 
 7782              	.LASF99:
 7783 06cd 7278496E 		.ascii	"rxInt\000"
 7783      7400
 7784              	.LASF127:
 7785 06d3 74735F75 		.ascii	"ts_update\000"
 7785      70646174 
 7785      6500
 7786              	.LASF33:
 7787 06dd 4E4F5F54 		.ascii	"NO_TRACK\000"
 7787      5241434B 
 7787      00
 7788              	.LASF152:
 7789 06e6 64656164 		.ascii	"deadzone\000"
 7789      7A6F6E65 
 7789      00
 7790              	.LASF156:
 7791 06ef 6C656674 		.ascii	"leftSpeedLimit\000"
 7791      53706565 
 7791      644C696D 
 7791      697400
 7792              	.LASF40:
 7793 06fe 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7793      54524156 
 7793      45525345 
 7793      00
 7794              	.LASF29:
 7795 070b 54524143 		.ascii	"TRACKING_SOFT\000"
 7795      4B494E47 
 7795      5F534F46 
 7795      5400
 7796              	.LASF162:
 7797 0719 6F766572 		.ascii	"overshot_target\000"
 7797      73686F74 
 7797      5F746172 
 7797      67657400 
 7798              	.LASF80:
 7799 0729 6C656674 		.ascii	"left\000"
 7799      00
 7800              	.LASF159:
 7801 072e 61636375 		.ascii	"accum_dist\000"
 7801      6D5F6469 
 7801      737400
 7802              	.LASF122:
 7803 0739 75736250 		.ascii	"usbPutString\000"
 7803      75745374 
 7803      72696E67 
 7803      00
 7804              	.LASF88:
 7805 0746 7475726E 		.ascii	"turnRight\000"
 7805      52696768 
 7805      7400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 165


 7806              	.LASF51:
 7807 0750 67315F79 		.ascii	"g1_ypos\000"
 7807      706F7300 
 7808              	.LASF59:
 7809 0758 6164635F 		.ascii	"adc_isr\000"
 7809      69737200 
 7810              	.LASF120:
 7811 0760 72656164 		.ascii	"readFrontSensors\000"
 7811      46726F6E 
 7811      7453656E 
 7811      736F7273 
 7811      00
 7812              	.LASF163:
 7813 0771 71756164 		.ascii	"quad_per_cm\000"
 7813      5F706572 
 7813      5F636D00 
 7814              	.LASF158:
 7815 077d 74617267 		.ascii	"target_distance_cm\000"
 7815      65745F64 
 7815      69737461 
 7815      6E63655F 
 7815      636D00
 7816              	.LASF11:
 7817 0790 73697A65 		.ascii	"sizetype\000"
 7817      74797065 
 7817      00
 7818              	.LASF7:
 7819 0799 6C6F6E67 		.ascii	"long unsigned int\000"
 7819      20756E73 
 7819      69676E65 
 7819      6420696E 
 7819      7400
 7820              	.LASF72:
 7821 07ab 62797465 		.ascii	"byte_packet\000"
 7821      5F706163 
 7821      6B657400 
 7822              	.LASF13:
 7823 07b7 696E7433 		.ascii	"int32_t\000"
 7823      325F7400 
 7824              	.LASF181:
 7825 07bf 7061636B 		.ascii	"packet\000"
 7825      657400
 7826              	.LASF193:
 7827 07c6 696E7374 		.ascii	"instructionLength\000"
 7827      72756374 
 7827      696F6E4C 
 7827      656E6774 
 7827      6800
 7828              	.LASF43:
 7829 07d8 726F626F 		.ascii	"robot_xpos\000"
 7829      745F7870 
 7829      6F7300
 7830              	.LASF86:
 7831 07e3 6272616B 		.ascii	"brakeMotor\000"
 7831      654D6F74 
 7831      6F7200
 7832              	.LASF191:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 166


 7833 07ee 666F6F64 		.ascii	"food_length\000"
 7833      5F6C656E 
 7833      67746800 
 7834              	.LASF173:
 7835 07fa 656E7472 		.ascii	"entry\000"
 7835      7900
 7836              	.LASF1:
 7837 0800 756E7369 		.ascii	"unsigned char\000"
 7837      676E6564 
 7837      20636861 
 7837      7200
 7838              	.LASF6:
 7839 080e 5F5F7569 		.ascii	"__uint32_t\000"
 7839      6E743332 
 7839      5F7400
 7840              	.LASF172:
 7841 0819 6C696E65 		.ascii	"line\000"
 7841      00
 7842              	.LASF161:
 7843 081e 72656163 		.ascii	"reached_target\000"
 7843      6865645F 
 7843      74617267 
 7843      657400
 7844              	.LASF62:
 7845 082d 53746F70 		.ascii	"Stop_on_line\000"
 7845      5F6F6E5F 
 7845      6C696E65 
 7845      00
 7846              	.LASF126:
 7847 083a 74735F65 		.ascii	"ts_enc\000"
 7847      6E6300
 7848              	.LASF167:
 7849 0841 6272616B 		.ascii	"brakeFlag\000"
 7849      65466C61 
 7849      6700
 7850              	.LASF133:
 7851 084b 666C6167 		.ascii	"flag_ts_display\000"
 7851      5F74735F 
 7851      64697370 
 7851      6C617900 
 7852              	.LASF31:
 7853 085b 73746174 		.ascii	"state\000"
 7853      6500
 7854              	.LASF78:
 7855 0861 72657665 		.ascii	"reverseDirection\000"
 7855      72736544 
 7855      69726563 
 7855      74696F6E 
 7855      00
 7856              	.LASF84:
 7857 0872 6272616B 		.ascii	"brakeLeft\000"
 7857      654C6566 
 7857      7400
 7858              	.LASF171:
 7859 087c 64697370 		.ascii	"displaystring\000"
 7859      6C617973 
 7859      7472696E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 167


 7859      6700
 7860              	.LASF148:
 7861 088a 6C617374 		.ascii	"last_quad_count1\000"
 7861      5F717561 
 7861      645F636F 
 7861      756E7431 
 7861      00
 7862              	.LASF149:
 7863 089b 6C617374 		.ascii	"last_quad_count2\000"
 7863      5F717561 
 7863      645F636F 
 7863      756E7432 
 7863      00
 7864              	.LASF188:
 7865 08ac 64657374 		.ascii	"destination\000"
 7865      696E6174 
 7865      696F6E00 
 7866              	.LASF123:
 7867 08b8 75736250 		.ascii	"usbPutChar\000"
 7867      75744368 
 7867      617200
 7868              	.LASF0:
 7869 08c3 7369676E 		.ascii	"signed char\000"
 7869      65642063 
 7869      68617200 
 7870              	.LASF3:
 7871 08cf 73686F72 		.ascii	"short unsigned int\000"
 7871      7420756E 
 7871      7369676E 
 7871      65642069 
 7871      6E7400
 7872              	.LASF45:
 7873 08e2 726F626F 		.ascii	"robot_orientation\000"
 7873      745F6F72 
 7873      69656E74 
 7873      6174696F 
 7873      6E00
 7874              	.LASF37:
 7875 08f4 51554144 		.ascii	"QUAD_STOP\000"
 7875      5F53544F 
 7875      5000
 7876              	.LASF74:
 7877 08fe 6D61696E 		.ascii	"main\000"
 7877      00
 7878              	.LASF58:
 7879 0903 42545F74 		.ascii	"BT_txInt\000"
 7879      78496E74 
 7879      00
 7880              	.LASF110:
 7881 090c 6E657874 		.ascii	"nextSpeed\000"
 7881      53706565 
 7881      6400
 7882              	.LASF15:
 7883 0916 75696E74 		.ascii	"uint8\000"
 7883      3800
 7884              	.LASF21:
 7885 091c 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 168


 7885      6C6500
 7886              	.LASF155:
 7887 0923 72696768 		.ascii	"right_duty_cycle\000"
 7887      745F6475 
 7887      74795F63 
 7887      79636C65 
 7887      00
 7888              	.LASF38:
 7889 0934 52465F53 		.ascii	"RF_STOP\000"
 7889      544F5000 
 7890              	.LASF77:
 7891 093c 68616E64 		.ascii	"handle_rx_binary\000"
 7891      6C655F72 
 7891      785F6269 
 7891      6E617279 
 7891      00
 7892              	.LASF118:
 7893 094d 7072696E 		.ascii	"print_RF\000"
 7893      745F5246 
 7893      00
 7894              	.LASF30:
 7895 0956 55545552 		.ascii	"UTURN\000"
 7895      4E00
 7896              	.LASF46:
 7897 095c 67305F78 		.ascii	"g0_xpos\000"
 7897      706F7300 
 7898              	.LASF108:
 7899 0964 7363616C 		.ascii	"scalingRight\000"
 7899      696E6752 
 7899      69676874 
 7899      00
 7900              	.LASF136:
 7901 0971 666C6167 		.ascii	"flag_KB_string\000"
 7901      5F4B425F 
 7901      73747269 
 7901      6E6700
 7902              	.LASF52:
 7903 0980 67315F73 		.ascii	"g1_speed\000"
 7903      70656564 
 7903      00
 7904              	.LASF197:
 7905 0989 2E5C6D61 		.ascii	".\\main.c\000"
 7905      696E2E63 
 7905      00
 7906              	.LASF165:
 7907 0992 696E6974 		.ascii	"initial_x_pos\000"
 7907      69616C5F 
 7907      785F706F 
 7907      7300
 7908              	.LASF85:
 7909 09a0 6272616B 		.ascii	"brakeRight\000"
 7909      65526967 
 7909      687400
 7910              	.LASF97:
 7911 09ab 696E6974 		.ascii	"initTrackU\000"
 7911      54726163 
 7911      6B5500
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccYcS4RI.s 			page 169


 7912              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
