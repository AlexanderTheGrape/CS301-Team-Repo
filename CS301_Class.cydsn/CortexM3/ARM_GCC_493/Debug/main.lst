ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_receive_ADC
  95              		.bss
  96              		.type	flag_receive_ADC, %object
  97              		.size	flag_receive_ADC, 1
  98              	flag_receive_ADC:
  99 0012 00       		.space	1
 100              		.comm	adc_result,2,2
 101              		.global	direction
 102              		.type	direction, %object
 103              		.size	direction, 1
 104              	direction:
 105 0013 00       		.space	1
 106              		.global	flag_calc_wheelspeed
 107              		.type	flag_calc_wheelspeed, %object
 108              		.size	flag_calc_wheelspeed, 1
 109              	flag_calc_wheelspeed:
 110 0014 00       		.space	1
 111              		.global	quad_count1
 112 0015 00       		.align	1
 113              		.type	quad_count1, %object
 114              		.size	quad_count1, 2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 3


 115              	quad_count1:
 116 0016 0000     		.space	2
 117              		.global	quad_count2
 118              		.align	1
 119              		.type	quad_count2, %object
 120              		.size	quad_count2, 2
 121              	quad_count2:
 122 0018 0000     		.space	2
 123              		.global	left_duty_cycle
 124              		.align	1
 125              		.type	left_duty_cycle, %object
 126              		.size	left_duty_cycle, 2
 127              	left_duty_cycle:
 128 001a 0000     		.space	2
 129              		.global	right_duty_cycle
 130              		.align	1
 131              		.type	right_duty_cycle, %object
 132              		.size	right_duty_cycle, 2
 133              	right_duty_cycle:
 134 001c 0000     		.space	2
 135              		.global	leftSpeedLimit
 136              		.align	1
 137              		.type	leftSpeedLimit, %object
 138              		.size	leftSpeedLimit, 2
 139              	leftSpeedLimit:
 140 001e 0000     		.space	2
 141              		.global	rightSpeedLimit
 142              		.align	1
 143              		.type	rightSpeedLimit, %object
 144              		.size	rightSpeedLimit, 2
 145              	rightSpeedLimit:
 146 0020 0000     		.space	2
 147              		.comm	brakeFlag,1,1
 148              		.global	portOpen
 149              		.data
 150              		.type	portOpen, %object
 151              		.size	portOpen, 1
 152              	portOpen:
 153 0001 01       		.byte	1
 154              		.global	displaystring
 155 0002 0000     		.align	2
 156              		.type	displaystring, %object
 157              		.size	displaystring, 64
 158              	displaystring:
 159 0004 43533330 		.ascii	"CS301 2016\012\000"
 159      31203230 
 159      31360A00 
 160 0010 00000000 		.space	52
 160      00000000 
 160      00000000 
 160      00000000 
 160      00000000 
 161              		.comm	line,64,4
 162              		.comm	entry,64,4
 163              		.comm	usbBuffer,64,4
 164              		.comm	system_state,32,4
 165              		.section	.text.setSpeed,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 4


 166              		.align	2
 167              		.global	setSpeed
 168              		.thumb
 169              		.thumb_func
 170              		.type	setSpeed, %function
 171              	setSpeed:
 172              	.LFB63:
 173              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** //* ========================================
  30:.\main.c      **** #include "defines.h"
  31:.\main.c      **** #include "vars.h"
  32:.\main.c      **** //* ========================================
  33:.\main.c      **** void usbPutString(char *s);
  34:.\main.c      **** void usbPutChar(char c);
  35:.\main.c      **** //void handle_usb();
  36:.\main.c      **** //* ========================================
  37:.\main.c      **** 
  38:.\main.c      **** void setSpeed(int right, int left){
 174              		.loc 1 38 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 8
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 83B0     		sub	sp, sp, #12
 183              		.cfi_def_cfa_offset 16
 184 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 5


 185              		.cfi_def_cfa_register 7
 186 0006 7860     		str	r0, [r7, #4]
 187 0008 3960     		str	r1, [r7]
  39:.\main.c      ****     leftSpeedLimit = right;
 188              		.loc 1 39 0
 189 000a 7B68     		ldr	r3, [r7, #4]
 190 000c 9AB2     		uxth	r2, r3
 191 000e 054B     		ldr	r3, .L2
 192 0010 1A80     		strh	r2, [r3]	@ movhi
  40:.\main.c      ****     rightSpeedLimit = left;
 193              		.loc 1 40 0
 194 0012 3B68     		ldr	r3, [r7]
 195 0014 9AB2     		uxth	r2, r3
 196 0016 044B     		ldr	r3, .L2+4
 197 0018 1A80     		strh	r2, [r3]	@ movhi
  41:.\main.c      **** }
 198              		.loc 1 41 0
 199 001a 0C37     		adds	r7, r7, #12
 200              		.cfi_def_cfa_offset 4
 201 001c BD46     		mov	sp, r7
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 001e 5DF8047B 		ldr	r7, [sp], #4
 205              		.cfi_restore 7
 206              		.cfi_def_cfa_offset 0
 207 0022 7047     		bx	lr
 208              	.L3:
 209              		.align	2
 210              	.L2:
 211 0024 00000000 		.word	leftSpeedLimit
 212 0028 00000000 		.word	rightSpeedLimit
 213              		.cfi_endproc
 214              	.LFE63:
 215              		.size	setSpeed, .-setSpeed
 216              		.section	.text.brakeMotor,"ax",%progbits
 217              		.align	2
 218              		.global	brakeMotor
 219              		.thumb
 220              		.thumb_func
 221              		.type	brakeMotor, %function
 222              	brakeMotor:
 223              	.LFB64:
  42:.\main.c      **** 
  43:.\main.c      **** void brakeMotor(){
 224              		.loc 1 43 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
  44:.\main.c      ****     setSpeed(0, 0);
 234              		.loc 1 44 0
 235 0004 0020     		movs	r0, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 6


 236 0006 0021     		movs	r1, #0
 237 0008 FFF7FEFF 		bl	setSpeed
  45:.\main.c      ****     PWM_1_WriteCompare(0);
 238              		.loc 1 45 0
 239 000c 0020     		movs	r0, #0
 240 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  46:.\main.c      ****     PWM_2_WriteCompare(0);
 241              		.loc 1 46 0
 242 0012 0020     		movs	r0, #0
 243 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  47:.\main.c      ****     right_duty_cycle = 0;
 244              		.loc 1 47 0
 245 0018 034B     		ldr	r3, .L5
 246 001a 0022     		movs	r2, #0
 247 001c 1A80     		strh	r2, [r3]	@ movhi
  48:.\main.c      ****     left_duty_cycle = 0;
 248              		.loc 1 48 0
 249 001e 034B     		ldr	r3, .L5+4
 250 0020 0022     		movs	r2, #0
 251 0022 1A80     		strh	r2, [r3]	@ movhi
  49:.\main.c      **** }
 252              		.loc 1 49 0
 253 0024 80BD     		pop	{r7, pc}
 254              	.L6:
 255 0026 00BF     		.align	2
 256              	.L5:
 257 0028 00000000 		.word	right_duty_cycle
 258 002c 00000000 		.word	left_duty_cycle
 259              		.cfi_endproc
 260              	.LFE64:
 261              		.size	brakeMotor, .-brakeMotor
 262              		.section	.text.adc_isr,"ax",%progbits
 263              		.align	2
 264              		.global	adc_isr
 265              		.thumb
 266              		.thumb_func
 267              		.type	adc_isr, %function
 268              	adc_isr:
 269              	.LFB65:
  50:.\main.c      **** 
  51:.\main.c      **** //ADC:
  52:.\main.c      **** CY_ISR (adc_isr)
  53:.\main.c      **** {
 270              		.loc 1 53 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0000 80B5     		push	{r7, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 00AF     		add	r7, sp, #0
 279              		.cfi_def_cfa_register 7
  54:.\main.c      ****     //adc_result = ADC_GetResult16(0);
  55:.\main.c      ****     adc_result = ADC_GetResult16();
 280              		.loc 1 55 0
 281 0004 FFF7FEFF 		bl	ADC_GetResult16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 7


 282 0008 0346     		mov	r3, r0
 283 000a 1A46     		mov	r2, r3
 284 000c 024B     		ldr	r3, .L8
 285 000e 1A80     		strh	r2, [r3]	@ movhi
  56:.\main.c      ****     flag_receive_ADC = 1;
 286              		.loc 1 56 0
 287 0010 024B     		ldr	r3, .L8+4
 288 0012 0122     		movs	r2, #1
 289 0014 1A70     		strb	r2, [r3]
  57:.\main.c      ****     //LED_Write(~LED_Read());
  58:.\main.c      **** }
 290              		.loc 1 58 0
 291 0016 80BD     		pop	{r7, pc}
 292              	.L9:
 293              		.align	2
 294              	.L8:
 295 0018 00000000 		.word	adc_result
 296 001c 00000000 		.word	flag_receive_ADC
 297              		.cfi_endproc
 298              	.LFE65:
 299              		.size	adc_isr, .-adc_isr
 300              		.section	.text.isr_quad1,"ax",%progbits
 301              		.align	2
 302              		.global	isr_quad1
 303              		.thumb
 304              		.thumb_func
 305              		.type	isr_quad1, %function
 306              	isr_quad1:
 307              	.LFB66:
  59:.\main.c      **** 
  60:.\main.c      **** CY_ISR (isr_quad1)
  61:.\main.c      **** {
 308              		.loc 1 61 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
  62:.\main.c      ****     //LED_Write(~LED_Read());
  63:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 318              		.loc 1 63 0
 319 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 320 0008 0346     		mov	r3, r0
 321 000a 1A46     		mov	r2, r3
 322 000c 084B     		ldr	r3, .L11
 323 000e 1A80     		strh	r2, [r3]	@ movhi
  64:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 324              		.loc 1 64 0
 325 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 326 0014 0346     		mov	r3, r0
 327 0016 1A46     		mov	r2, r3
 328 0018 064B     		ldr	r3, .L11+4
 329 001a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 8


  65:.\main.c      ****     QuadDec_M1_SetCounter(0);
 330              		.loc 1 65 0
 331 001c 0020     		movs	r0, #0
 332 001e FFF7FEFF 		bl	QuadDec_M1_SetCounter
  66:.\main.c      ****     QuadDec_M2_SetCounter(0);
 333              		.loc 1 66 0
 334 0022 0020     		movs	r0, #0
 335 0024 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  67:.\main.c      ****     flag_calc_wheelspeed = 1;
 336              		.loc 1 67 0
 337 0028 034B     		ldr	r3, .L11+8
 338 002a 0122     		movs	r2, #1
 339 002c 1A70     		strb	r2, [r3]
  68:.\main.c      **** }
 340              		.loc 1 68 0
 341 002e 80BD     		pop	{r7, pc}
 342              	.L12:
 343              		.align	2
 344              	.L11:
 345 0030 00000000 		.word	quad_count1
 346 0034 00000000 		.word	quad_count2
 347 0038 00000000 		.word	flag_calc_wheelspeed
 348              		.cfi_endproc
 349              	.LFE66:
 350              		.size	isr_quad1, .-isr_quad1
 351              		.section	.text.Stop_on_line,"ax",%progbits
 352              		.align	2
 353              		.global	Stop_on_line
 354              		.thumb
 355              		.thumb_func
 356              		.type	Stop_on_line, %function
 357              	Stop_on_line:
 358              	.LFB67:
  69:.\main.c      **** 
  70:.\main.c      **** CY_ISR (Stop_on_line)
  71:.\main.c      **** {
 359              		.loc 1 71 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
  72:.\main.c      ****     brakeMotor();
 369              		.loc 1 72 0
 370 0004 FFF7FEFF 		bl	brakeMotor
  73:.\main.c      **** }
 371              		.loc 1 73 0
 372 0008 80BD     		pop	{r7, pc}
 373              		.cfi_endproc
 374              	.LFE67:
 375              		.size	Stop_on_line, .-Stop_on_line
 376 000a 00BF     		.section	.text.button,"ax",%progbits
 377              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 9


 378              		.global	button
 379              		.thumb
 380              		.thumb_func
 381              		.type	button, %function
 382              	button:
 383              	.LFB68:
  74:.\main.c      **** 
  75:.\main.c      **** CY_ISR (button)
  76:.\main.c      **** {
 384              		.loc 1 76 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 80B5     		push	{r7, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
  77:.\main.c      ****     setSpeed(20, 20);
 394              		.loc 1 77 0
 395 0004 1420     		movs	r0, #20
 396 0006 1421     		movs	r1, #20
 397 0008 FFF7FEFF 		bl	setSpeed
  78:.\main.c      **** }
 398              		.loc 1 78 0
 399 000c 80BD     		pop	{r7, pc}
 400              		.cfi_endproc
 401              	.LFE68:
 402              		.size	button, .-button
 403 000e 00BF     		.section	.text.isr_adcTimer,"ax",%progbits
 404              		.align	2
 405              		.global	isr_adcTimer
 406              		.thumb
 407              		.thumb_func
 408              		.type	isr_adcTimer, %function
 409              	isr_adcTimer:
 410              	.LFB69:
  79:.\main.c      **** 
  80:.\main.c      **** CY_ISR(isr_adcTimer)
  81:.\main.c      **** {
 411              		.loc 1 81 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
  82:.\main.c      ****     ADC_StartConvert();
 421              		.loc 1 82 0
 422 0004 FFF7FEFF 		bl	ADC_StartConvert
  83:.\main.c      **** }
 423              		.loc 1 83 0
 424 0008 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 10


 425              		.cfi_endproc
 426              	.LFE69:
 427              		.size	isr_adcTimer, .-isr_adcTimer
 428 000a 00BF     		.section	.rodata
 429              		.align	2
 430              	.LC0:
 431 0000 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
 431      20636F75 
 431      6E742031 
 431      2069733A 
 431      2025640A 
 432 0016 0000     		.align	2
 433              	.LC1:
 434 0018 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 434      20636F75 
 434      6E742032 
 434      2069733A 
 434      2025640A 
 435 002e 0000     		.align	2
 436              	.LC2:
 437 0030 52696768 		.ascii	"Right wheel too fast! Slowing down \015\012\000"
 437      74207768 
 437      65656C20 
 437      746F6F20 
 437      66617374 
 438 0056 0000     		.align	2
 439              	.LC3:
 440 0058 52696768 		.ascii	"Right wheel duty cycle is now:%d\015\012\000"
 440      74207768 
 440      65656C20 
 440      64757479 
 440      20637963 
 441 007b 00       		.align	2
 442              	.LC4:
 443 007c 52696768 		.ascii	"Right wheel too slow, speeding up! \015\012\000"
 443      74207768 
 443      65656C20 
 443      746F6F20 
 443      736C6F77 
 444              		.section	.text.Quad_Dec_response,"ax",%progbits
 445              		.align	2
 446              		.global	Quad_Dec_response
 447              		.thumb
 448              		.thumb_func
 449              		.type	Quad_Dec_response, %function
 450              	Quad_Dec_response:
 451              	.LFB70:
  84:.\main.c      **** 
  85:.\main.c      **** void Quad_Dec_response()
  86:.\main.c      **** {
 452              		.loc 1 86 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 136
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 B0B5     		push	{r4, r5, r7, lr}
 457              		.cfi_def_cfa_offset 16
 458              		.cfi_offset 4, -16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 11


 459              		.cfi_offset 5, -12
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0002 A2B0     		sub	sp, sp, #136
 463              		.cfi_def_cfa_offset 152
 464 0004 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
  87:.\main.c      ****     //Check if the flag has been set
  88:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 466              		.loc 1 88 0
 467 0006 8A4B     		ldr	r3, .L31
 468 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469 000a 002B     		cmp	r3, #0
 470 000c 00F00D81 		beq	.L16
  89:.\main.c      ****     flag_calc_wheelspeed = 0;
 471              		.loc 1 89 0
 472 0010 874B     		ldr	r3, .L31
 473 0012 0022     		movs	r2, #0
 474 0014 1A70     		strb	r2, [r3]
  90:.\main.c      ****     
  91:.\main.c      ****     char wheel_1_str [64];
  92:.\main.c      ****     char wheel_2_str [64];
  93:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_count1);
 475              		.loc 1 93 0
 476 0016 874B     		ldr	r3, .L31+4
 477 0018 1B88     		ldrh	r3, [r3]
 478 001a 1BB2     		sxth	r3, r3
 479 001c 07F14002 		add	r2, r7, #64
 480 0020 1046     		mov	r0, r2
 481 0022 8549     		ldr	r1, .L31+8
 482 0024 1A46     		mov	r2, r3
 483 0026 FFF7FEFF 		bl	sprintf
  94:.\main.c      ****     usbPutString(wheel_1_str);
 484              		.loc 1 94 0
 485 002a 07F14003 		add	r3, r7, #64
 486 002e 1846     		mov	r0, r3
 487 0030 FFF7FEFF 		bl	usbPutString
  95:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_count2);
 488              		.loc 1 95 0
 489 0034 814B     		ldr	r3, .L31+12
 490 0036 1B88     		ldrh	r3, [r3]
 491 0038 1BB2     		sxth	r3, r3
 492 003a 3A46     		mov	r2, r7
 493 003c 1046     		mov	r0, r2
 494 003e 8049     		ldr	r1, .L31+16
 495 0040 1A46     		mov	r2, r3
 496 0042 FFF7FEFF 		bl	sprintf
  96:.\main.c      ****     
  97:.\main.c      ****     usbPutString(wheel_2_str);
 497              		.loc 1 97 0
 498 0046 3B46     		mov	r3, r7
 499 0048 1846     		mov	r0, r3
 500 004a FFF7FEFF 		bl	usbPutString
  98:.\main.c      ****     
  99:.\main.c      ****     int16 leftSpeed = quad_count1;
 501              		.loc 1 99 0
 502 004e 794B     		ldr	r3, .L31+4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 12


 503 0050 1B88     		ldrh	r3, [r3]	@ movhi
 504 0052 A7F88230 		strh	r3, [r7, #130]	@ movhi
 100:.\main.c      ****     int16 rightSpeed = quad_count2;
 505              		.loc 1 100 0
 506 0056 794B     		ldr	r3, .L31+12
 507 0058 1B88     		ldrh	r3, [r3]	@ movhi
 508 005a A7F88030 		strh	r3, [r7, #128]	@ movhi
 101:.\main.c      ****     
 102:.\main.c      ****     int16 left_direction = 1;
 509              		.loc 1 102 0
 510 005e 0123     		movs	r3, #1
 511 0060 A7F88630 		strh	r3, [r7, #134]	@ movhi
 103:.\main.c      ****     int16 right_direction = 1;
 512              		.loc 1 103 0
 513 0064 0123     		movs	r3, #1
 514 0066 A7F88430 		strh	r3, [r7, #132]	@ movhi
 104:.\main.c      ****     
 105:.\main.c      ****     if (leftSpeed > 0) {
 515              		.loc 1 105 0
 516 006a B7F98230 		ldrsh	r3, [r7, #130]
 517 006e 002B     		cmp	r3, #0
 518 0070 04DD     		ble	.L19
 106:.\main.c      ****         left_direction = -1;
 519              		.loc 1 106 0
 520 0072 4FF6FF73 		movw	r3, #65535
 521 0076 A7F88630 		strh	r3, [r7, #134]	@ movhi
 522 007a 02E0     		b	.L20
 523              	.L19:
 107:.\main.c      ****     } else {
 108:.\main.c      ****         left_direction = 1;
 524              		.loc 1 108 0
 525 007c 0123     		movs	r3, #1
 526 007e A7F88630 		strh	r3, [r7, #134]	@ movhi
 527              	.L20:
 109:.\main.c      ****     }
 110:.\main.c      ****     if (rightSpeed < 0) {
 528              		.loc 1 110 0
 529 0082 B7F98030 		ldrsh	r3, [r7, #128]
 530 0086 002B     		cmp	r3, #0
 531 0088 04DA     		bge	.L21
 111:.\main.c      ****         right_direction = -1;
 532              		.loc 1 111 0
 533 008a 4FF6FF73 		movw	r3, #65535
 534 008e A7F88430 		strh	r3, [r7, #132]	@ movhi
 535 0092 02E0     		b	.L22
 536              	.L21:
 112:.\main.c      ****     } else {
 113:.\main.c      ****         right_direction = 1;
 537              		.loc 1 113 0
 538 0094 0123     		movs	r3, #1
 539 0096 A7F88430 		strh	r3, [r7, #132]	@ movhi
 540              	.L22:
 114:.\main.c      ****     }
 115:.\main.c      ****     
 116:.\main.c      ****     if (abs(leftSpeed) > leftSpeedLimit){
 541              		.loc 1 116 0
 542 009a B7F98230 		ldrsh	r3, [r7, #130]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 13


 543 009e 83EAE372 		eor	r2, r3, r3, asr #31
 544 00a2 A2EBE372 		sub	r2, r2, r3, asr #31
 545 00a6 674B     		ldr	r3, .L31+20
 546 00a8 1B88     		ldrh	r3, [r3]
 547 00aa 1BB2     		sxth	r3, r3
 548 00ac 9A42     		cmp	r2, r3
 549 00ae 0FDD     		ble	.L23
 117:.\main.c      ****         //sprintf(wheel_1_str,"Left wheel too fast! Slowing down \r\n");
 118:.\main.c      ****         usbPutString(wheel_1_str);
 550              		.loc 1 118 0
 551 00b0 07F14003 		add	r3, r7, #64
 552 00b4 1846     		mov	r0, r3
 553 00b6 FFF7FEFF 		bl	usbPutString
 119:.\main.c      ****         
 120:.\main.c      ****         left_duty_cycle = left_duty_cycle + (-1 * left_direction);
 554              		.loc 1 120 0
 555 00ba 634B     		ldr	r3, .L31+24
 556 00bc 1B88     		ldrh	r3, [r3]
 557 00be 9AB2     		uxth	r2, r3
 558 00c0 B7F88630 		ldrh	r3, [r7, #134]
 559 00c4 D31A     		subs	r3, r2, r3
 560 00c6 9BB2     		uxth	r3, r3
 561 00c8 9AB2     		uxth	r2, r3
 562 00ca 5F4B     		ldr	r3, .L31+24
 563 00cc 1A80     		strh	r2, [r3]	@ movhi
 564 00ce 19E0     		b	.L24
 565              	.L23:
 121:.\main.c      ****     } else if (abs(leftSpeed) < leftSpeedLimit) {
 566              		.loc 1 121 0
 567 00d0 B7F98230 		ldrsh	r3, [r7, #130]
 568 00d4 83EAE372 		eor	r2, r3, r3, asr #31
 569 00d8 A2EBE372 		sub	r2, r2, r3, asr #31
 570 00dc 594B     		ldr	r3, .L31+20
 571 00de 1B88     		ldrh	r3, [r3]
 572 00e0 1BB2     		sxth	r3, r3
 573 00e2 9A42     		cmp	r2, r3
 574 00e4 0EDA     		bge	.L24
 122:.\main.c      ****        // sprintf(wheel_1_str,"Left wheel too slow! Speeding up \r\n");
 123:.\main.c      ****         usbPutString(wheel_1_str);
 575              		.loc 1 123 0
 576 00e6 07F14003 		add	r3, r7, #64
 577 00ea 1846     		mov	r0, r3
 578 00ec FFF7FEFF 		bl	usbPutString
 124:.\main.c      ****         left_duty_cycle = left_duty_cycle + left_direction;
 579              		.loc 1 124 0
 580 00f0 554B     		ldr	r3, .L31+24
 581 00f2 1B88     		ldrh	r3, [r3]
 582 00f4 9AB2     		uxth	r2, r3
 583 00f6 B7F88630 		ldrh	r3, [r7, #134]
 584 00fa 1344     		add	r3, r3, r2
 585 00fc 9BB2     		uxth	r3, r3
 586 00fe 9AB2     		uxth	r2, r3
 587 0100 514B     		ldr	r3, .L31+24
 588 0102 1A80     		strh	r2, [r3]	@ movhi
 589              	.L24:
 125:.\main.c      ****     }
 126:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 14


 127:.\main.c      ****     if (abs(rightSpeed) > rightSpeedLimit){
 590              		.loc 1 127 0
 591 0104 B7F98030 		ldrsh	r3, [r7, #128]
 592 0108 83EAE372 		eor	r2, r3, r3, asr #31
 593 010c A2EBE372 		sub	r2, r2, r3, asr #31
 594 0110 4E4B     		ldr	r3, .L31+28
 595 0112 1B88     		ldrh	r3, [r3]
 596 0114 1BB2     		sxth	r3, r3
 597 0116 9A42     		cmp	r2, r3
 598 0118 28DD     		ble	.L25
 128:.\main.c      ****         sprintf(wheel_2_str,"Right wheel too fast! Slowing down \r\n");
 599              		.loc 1 128 0
 600 011a 3B46     		mov	r3, r7
 601 011c 4C4A     		ldr	r2, .L31+32
 602 011e 1C46     		mov	r4, r3
 603 0120 1546     		mov	r5, r2
 604 0122 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 605 0124 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 606 0126 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 607 0128 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 608 012a 95E80300 		ldmia	r5, {r0, r1}
 609 012e 2060     		str	r0, [r4]
 610 0130 0434     		adds	r4, r4, #4
 611 0132 2180     		strh	r1, [r4]	@ movhi
 129:.\main.c      ****         usbPutString(wheel_2_str);
 612              		.loc 1 129 0
 613 0134 3B46     		mov	r3, r7
 614 0136 1846     		mov	r0, r3
 615 0138 FFF7FEFF 		bl	usbPutString
 130:.\main.c      ****         right_duty_cycle = right_duty_cycle + (-1 * right_direction);
 616              		.loc 1 130 0
 617 013c 454B     		ldr	r3, .L31+36
 618 013e 1B88     		ldrh	r3, [r3]
 619 0140 9AB2     		uxth	r2, r3
 620 0142 B7F88430 		ldrh	r3, [r7, #132]
 621 0146 D31A     		subs	r3, r2, r3
 622 0148 9BB2     		uxth	r3, r3
 623 014a 9AB2     		uxth	r2, r3
 624 014c 414B     		ldr	r3, .L31+36
 625 014e 1A80     		strh	r2, [r3]	@ movhi
 131:.\main.c      ****         sprintf(wheel_2_str,"Right wheel duty cycle is now:%d\r\n", right_duty_cycle);
 626              		.loc 1 131 0
 627 0150 404B     		ldr	r3, .L31+36
 628 0152 1B88     		ldrh	r3, [r3]
 629 0154 1BB2     		sxth	r3, r3
 630 0156 3A46     		mov	r2, r7
 631 0158 1046     		mov	r0, r2
 632 015a 3F49     		ldr	r1, .L31+40
 633 015c 1A46     		mov	r2, r3
 634 015e FFF7FEFF 		bl	sprintf
 132:.\main.c      ****         usbPutString(wheel_2_str);
 635              		.loc 1 132 0
 636 0162 3B46     		mov	r3, r7
 637 0164 1846     		mov	r0, r3
 638 0166 FFF7FEFF 		bl	usbPutString
 639 016a 32E0     		b	.L26
 640              	.L25:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 15


 133:.\main.c      ****     } else if (abs(rightSpeed) < rightSpeedLimit) {
 641              		.loc 1 133 0
 642 016c B7F98030 		ldrsh	r3, [r7, #128]
 643 0170 83EAE372 		eor	r2, r3, r3, asr #31
 644 0174 A2EBE372 		sub	r2, r2, r3, asr #31
 645 0178 344B     		ldr	r3, .L31+28
 646 017a 1B88     		ldrh	r3, [r3]
 647 017c 1BB2     		sxth	r3, r3
 648 017e 9A42     		cmp	r2, r3
 649 0180 27DA     		bge	.L26
 134:.\main.c      ****         sprintf(wheel_2_str,"Right wheel too slow, speeding up! \r\n");
 650              		.loc 1 134 0
 651 0182 3B46     		mov	r3, r7
 652 0184 354A     		ldr	r2, .L31+44
 653 0186 1C46     		mov	r4, r3
 654 0188 1546     		mov	r5, r2
 655 018a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 656 018c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 657 018e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 658 0190 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 659 0192 95E80300 		ldmia	r5, {r0, r1}
 660 0196 2060     		str	r0, [r4]
 661 0198 0434     		adds	r4, r4, #4
 662 019a 2180     		strh	r1, [r4]	@ movhi
 135:.\main.c      ****         usbPutString(wheel_2_str);
 663              		.loc 1 135 0
 664 019c 3B46     		mov	r3, r7
 665 019e 1846     		mov	r0, r3
 666 01a0 FFF7FEFF 		bl	usbPutString
 136:.\main.c      ****         sprintf(wheel_2_str,"Right wheel duty cycle is now:%d\r\n", right_duty_cycle);
 667              		.loc 1 136 0
 668 01a4 2B4B     		ldr	r3, .L31+36
 669 01a6 1B88     		ldrh	r3, [r3]
 670 01a8 1BB2     		sxth	r3, r3
 671 01aa 3A46     		mov	r2, r7
 672 01ac 1046     		mov	r0, r2
 673 01ae 2A49     		ldr	r1, .L31+40
 674 01b0 1A46     		mov	r2, r3
 675 01b2 FFF7FEFF 		bl	sprintf
 137:.\main.c      ****         usbPutString(wheel_2_str);
 676              		.loc 1 137 0
 677 01b6 3B46     		mov	r3, r7
 678 01b8 1846     		mov	r0, r3
 679 01ba FFF7FEFF 		bl	usbPutString
 138:.\main.c      ****         right_duty_cycle = right_duty_cycle + right_direction;
 680              		.loc 1 138 0
 681 01be 254B     		ldr	r3, .L31+36
 682 01c0 1B88     		ldrh	r3, [r3]
 683 01c2 9AB2     		uxth	r2, r3
 684 01c4 B7F88430 		ldrh	r3, [r7, #132]
 685 01c8 1344     		add	r3, r3, r2
 686 01ca 9BB2     		uxth	r3, r3
 687 01cc 9AB2     		uxth	r2, r3
 688 01ce 214B     		ldr	r3, .L31+36
 689 01d0 1A80     		strh	r2, [r3]	@ movhi
 690              	.L26:
 139:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 16


 140:.\main.c      ****     
 141:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 691              		.loc 1 141 0
 692 01d2 204B     		ldr	r3, .L31+36
 693 01d4 1B88     		ldrh	r3, [r3]
 694 01d6 1BB2     		sxth	r3, r3
 695 01d8 002B     		cmp	r3, #0
 696 01da 02DA     		bge	.L27
 697              		.loc 1 141 0 is_stmt 0 discriminator 1
 698 01dc 1D4B     		ldr	r3, .L31+36
 699 01de 0022     		movs	r2, #0
 700 01e0 1A80     		strh	r2, [r3]	@ movhi
 701              	.L27:
 142:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 702              		.loc 1 142 0 is_stmt 1
 703 01e2 194B     		ldr	r3, .L31+24
 704 01e4 1B88     		ldrh	r3, [r3]
 705 01e6 1BB2     		sxth	r3, r3
 706 01e8 002B     		cmp	r3, #0
 707 01ea 02DA     		bge	.L28
 708              		.loc 1 142 0 is_stmt 0 discriminator 1
 709 01ec 164B     		ldr	r3, .L31+24
 710 01ee 0022     		movs	r2, #0
 711 01f0 1A80     		strh	r2, [r3]	@ movhi
 712              	.L28:
 143:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 713              		.loc 1 143 0 is_stmt 1
 714 01f2 184B     		ldr	r3, .L31+36
 715 01f4 1B88     		ldrh	r3, [r3]
 716 01f6 1BB2     		sxth	r3, r3
 717 01f8 642B     		cmp	r3, #100
 718 01fa 02DD     		ble	.L29
 719              		.loc 1 143 0 is_stmt 0 discriminator 1
 720 01fc 154B     		ldr	r3, .L31+36
 721 01fe 6422     		movs	r2, #100
 722 0200 1A80     		strh	r2, [r3]	@ movhi
 723              	.L29:
 144:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 724              		.loc 1 144 0 is_stmt 1
 725 0202 114B     		ldr	r3, .L31+24
 726 0204 1B88     		ldrh	r3, [r3]
 727 0206 1BB2     		sxth	r3, r3
 728 0208 642B     		cmp	r3, #100
 729 020a 02DD     		ble	.L30
 730              		.loc 1 144 0 is_stmt 0 discriminator 1
 731 020c 0E4B     		ldr	r3, .L31+24
 732 020e 6422     		movs	r2, #100
 733 0210 1A80     		strh	r2, [r3]	@ movhi
 734              	.L30:
 145:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 735              		.loc 1 145 0 is_stmt 1
 736 0212 0D4B     		ldr	r3, .L31+24
 737 0214 1B88     		ldrh	r3, [r3]
 738 0216 DBB2     		uxtb	r3, r3
 739 0218 1846     		mov	r0, r3
 740 021a FFF7FEFF 		bl	PWM_1_WriteCompare
 146:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 17


 741              		.loc 1 146 0
 742 021e 0D4B     		ldr	r3, .L31+36
 743 0220 1B88     		ldrh	r3, [r3]
 744 0222 DBB2     		uxtb	r3, r3
 745 0224 1846     		mov	r0, r3
 746 0226 FFF7FEFF 		bl	PWM_2_WriteCompare
 747              	.L16:
 147:.\main.c      ****         
 148:.\main.c      **** }
 748              		.loc 1 148 0
 749 022a 8837     		adds	r7, r7, #136
 750              		.cfi_def_cfa_offset 16
 751 022c BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 022e B0BD     		pop	{r4, r5, r7, pc}
 755              	.L32:
 756              		.align	2
 757              	.L31:
 758 0230 00000000 		.word	flag_calc_wheelspeed
 759 0234 00000000 		.word	quad_count1
 760 0238 00000000 		.word	.LC0
 761 023c 00000000 		.word	quad_count2
 762 0240 18000000 		.word	.LC1
 763 0244 00000000 		.word	leftSpeedLimit
 764 0248 00000000 		.word	left_duty_cycle
 765 024c 00000000 		.word	rightSpeedLimit
 766 0250 30000000 		.word	.LC2
 767 0254 00000000 		.word	right_duty_cycle
 768 0258 58000000 		.word	.LC3
 769 025c 7C000000 		.word	.LC4
 770              		.cfi_endproc
 771              	.LFE70:
 772              		.size	Quad_Dec_response, .-Quad_Dec_response
 773              		.global	__aeabi_i2f
 774              		.global	__aeabi_fmul
 775              		.global	__aeabi_fadd
 776              		.global	__aeabi_f2iz
 777              		.section	.rodata
 778 00a2 0000     		.align	2
 779              	.LC5:
 780 00a4 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 780      65727920 
 780      566F6C74 
 780      6167653A 
 780      2025646D 
 781              		.section	.text.print_ADC,"ax",%progbits
 782              		.align	2
 783              		.global	print_ADC
 784              		.thumb
 785              		.thumb_func
 786              		.type	print_ADC, %function
 787              	print_ADC:
 788              	.LFB71:
 149:.\main.c      **** 
 150:.\main.c      **** void print_ADC()
 151:.\main.c      **** {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 18


 789              		.loc 1 151 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 24
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 86B0     		sub	sp, sp, #24
 798              		.cfi_def_cfa_offset 32
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 152:.\main.c      ****    //usbPutString("HII\n");
 153:.\main.c      ****     if(flag_receive_ADC == 1)
 801              		.loc 1 153 0
 802 0006 1B4B     		ldr	r3, .L36
 803 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 804 000a 012B     		cmp	r3, #1
 805 000c 2FD1     		bne	.L33
 806              	.LBB2:
 154:.\main.c      ****     {
 155:.\main.c      ****         //usbPutString("AAA\r\n");
 156:.\main.c      ****         flag_receive_ADC = 0;
 807              		.loc 1 156 0
 808 000e 194B     		ldr	r3, .L36
 809 0010 0022     		movs	r2, #0
 810 0012 1A70     		strb	r2, [r3]
 157:.\main.c      ****         
 158:.\main.c      ****        // int8 channel = ADC_
 159:.\main.c      ****         float scalingFactor = 0.972;
 811              		.loc 1 159 0
 812 0014 184B     		ldr	r3, .L36+4
 813 0016 7B61     		str	r3, [r7, #20]	@ float
 160:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 814              		.loc 1 160 0
 815 0018 184B     		ldr	r3, .L36+8
 816 001a 1B88     		ldrh	r3, [r3]
 817 001c 1BB2     		sxth	r3, r3
 818 001e 41F28832 		movw	r2, #5000
 819 0022 02FB03F3 		mul	r3, r2, r3
 820 0026 002B     		cmp	r3, #0
 821 0028 01DA     		bge	.L35
 822 002a 03F6FF73 		addw	r3, r3, #4095
 823              	.L35:
 824 002e 1B13     		asrs	r3, r3, #12
 825 0030 1846     		mov	r0, r3
 826 0032 FFF7FEFF 		bl	__aeabi_i2f
 827 0036 0346     		mov	r3, r0
 828 0038 1846     		mov	r0, r3
 829 003a 7969     		ldr	r1, [r7, #20]	@ float
 830 003c FFF7FEFF 		bl	__aeabi_fmul
 831 0040 0346     		mov	r3, r0
 832 0042 1846     		mov	r0, r3
 833 0044 1946     		mov	r1, r3
 834 0046 FFF7FEFF 		bl	__aeabi_fadd
 835 004a 0346     		mov	r3, r0
 836 004c 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 19


 837 004e FFF7FEFF 		bl	__aeabi_f2iz
 838 0052 0346     		mov	r3, r0
 839 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 161:.\main.c      ****         
 162:.\main.c      ****         char result_str[16];
 163:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 840              		.loc 1 163 0
 841 0056 B7F91230 		ldrsh	r3, [r7, #18]
 842 005a 3A46     		mov	r2, r7
 843 005c 1046     		mov	r0, r2
 844 005e 0849     		ldr	r1, .L36+12
 845 0060 1A46     		mov	r2, r3
 846 0062 FFF7FEFF 		bl	sprintf
 164:.\main.c      ****         
 165:.\main.c      ****         usbPutString(result_str);
 847              		.loc 1 165 0
 848 0066 3B46     		mov	r3, r7
 849 0068 1846     		mov	r0, r3
 850 006a FFF7FEFF 		bl	usbPutString
 851              	.L33:
 852              	.LBE2:
 166:.\main.c      ****     }
 167:.\main.c      **** }
 853              		.loc 1 167 0
 854 006e 1837     		adds	r7, r7, #24
 855              		.cfi_def_cfa_offset 8
 856 0070 BD46     		mov	sp, r7
 857              		.cfi_def_cfa_register 13
 858              		@ sp needed
 859 0072 80BD     		pop	{r7, pc}
 860              	.L37:
 861              		.align	2
 862              	.L36:
 863 0074 00000000 		.word	flag_receive_ADC
 864 0078 FED4783F 		.word	1064883454
 865 007c 00000000 		.word	adc_result
 866 0080 A4000000 		.word	.LC5
 867              		.cfi_endproc
 868              	.LFE71:
 869              		.size	print_ADC, .-print_ADC
 870              		.section	.text.cycle_PWM,"ax",%progbits
 871              		.align	2
 872              		.global	cycle_PWM
 873              		.thumb
 874              		.thumb_func
 875              		.type	cycle_PWM, %function
 876              	cycle_PWM:
 877              	.LFB72:
 168:.\main.c      **** 
 169:.\main.c      **** 
 170:.\main.c      **** //PWM:
 171:.\main.c      **** void cycle_PWM()
 172:.\main.c      **** {
 878              		.loc 1 172 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 20


 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 173:.\main.c      ****     uint16 fluct;
 174:.\main.c      ****     if (direction == 0){
 890              		.loc 1 174 0
 891 0006 3A4B     		ldr	r3, .L49
 892 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 893 000a 002B     		cmp	r3, #0
 894 000c 2CD1     		bne	.L39
 175:.\main.c      ****         for(fluct = 30; fluct < 70; fluct++)
 895              		.loc 1 175 0
 896 000e 1E23     		movs	r3, #30
 897 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 898 0012 0FE0     		b	.L40
 899              	.L41:
 176:.\main.c      ****         {
 177:.\main.c      ****             PWM_1_WriteCompare(fluct);
 900              		.loc 1 177 0 discriminator 3
 901 0014 FB88     		ldrh	r3, [r7, #6]	@ movhi
 902 0016 DBB2     		uxtb	r3, r3
 903 0018 1846     		mov	r0, r3
 904 001a FFF7FEFF 		bl	PWM_1_WriteCompare
 178:.\main.c      ****             PWM_2_WriteCompare(fluct);
 905              		.loc 1 178 0 discriminator 3
 906 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 907 0020 DBB2     		uxtb	r3, r3
 908 0022 1846     		mov	r0, r3
 909 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 179:.\main.c      ****             CyDelay(30);
 910              		.loc 1 179 0 discriminator 3
 911 0028 1E20     		movs	r0, #30
 912 002a FFF7FEFF 		bl	CyDelay
 175:.\main.c      ****         {
 913              		.loc 1 175 0 discriminator 3
 914 002e FB88     		ldrh	r3, [r7, #6]
 915 0030 0133     		adds	r3, r3, #1
 916 0032 FB80     		strh	r3, [r7, #6]	@ movhi
 917              	.L40:
 175:.\main.c      ****         {
 918              		.loc 1 175 0 is_stmt 0 discriminator 1
 919 0034 FB88     		ldrh	r3, [r7, #6]
 920 0036 452B     		cmp	r3, #69
 921 0038 ECD9     		bls	.L41
 180:.\main.c      ****         }
 181:.\main.c      ****         
 182:.\main.c      ****         for(fluct = 70; fluct > 30; fluct--)
 922              		.loc 1 182 0 is_stmt 1
 923 003a 4623     		movs	r3, #70
 924 003c FB80     		strh	r3, [r7, #6]	@ movhi
 925 003e 0FE0     		b	.L42
 926              	.L43:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 21


 183:.\main.c      ****         {
 184:.\main.c      ****             PWM_1_WriteCompare(fluct);
 927              		.loc 1 184 0 discriminator 3
 928 0040 FB88     		ldrh	r3, [r7, #6]	@ movhi
 929 0042 DBB2     		uxtb	r3, r3
 930 0044 1846     		mov	r0, r3
 931 0046 FFF7FEFF 		bl	PWM_1_WriteCompare
 185:.\main.c      ****             PWM_2_WriteCompare(fluct);
 932              		.loc 1 185 0 discriminator 3
 933 004a FB88     		ldrh	r3, [r7, #6]	@ movhi
 934 004c DBB2     		uxtb	r3, r3
 935 004e 1846     		mov	r0, r3
 936 0050 FFF7FEFF 		bl	PWM_2_WriteCompare
 186:.\main.c      ****             CyDelay(30);
 937              		.loc 1 186 0 discriminator 3
 938 0054 1E20     		movs	r0, #30
 939 0056 FFF7FEFF 		bl	CyDelay
 182:.\main.c      ****         {
 940              		.loc 1 182 0 discriminator 3
 941 005a FB88     		ldrh	r3, [r7, #6]
 942 005c 013B     		subs	r3, r3, #1
 943 005e FB80     		strh	r3, [r7, #6]	@ movhi
 944              	.L42:
 182:.\main.c      ****         {
 945              		.loc 1 182 0 is_stmt 0 discriminator 1
 946 0060 FB88     		ldrh	r3, [r7, #6]
 947 0062 1E2B     		cmp	r3, #30
 948 0064 ECD8     		bhi	.L43
 949 0066 2BE0     		b	.L44
 950              	.L39:
 187:.\main.c      ****         }
 188:.\main.c      ****     } else {
 189:.\main.c      ****         for(fluct = 70; fluct > 30; fluct--)
 951              		.loc 1 189 0 is_stmt 1
 952 0068 4623     		movs	r3, #70
 953 006a FB80     		strh	r3, [r7, #6]	@ movhi
 954 006c 0FE0     		b	.L45
 955              	.L46:
 190:.\main.c      ****         {
 191:.\main.c      ****             PWM_1_WriteCompare(fluct);
 956              		.loc 1 191 0 discriminator 3
 957 006e FB88     		ldrh	r3, [r7, #6]	@ movhi
 958 0070 DBB2     		uxtb	r3, r3
 959 0072 1846     		mov	r0, r3
 960 0074 FFF7FEFF 		bl	PWM_1_WriteCompare
 192:.\main.c      ****             PWM_2_WriteCompare(fluct);
 961              		.loc 1 192 0 discriminator 3
 962 0078 FB88     		ldrh	r3, [r7, #6]	@ movhi
 963 007a DBB2     		uxtb	r3, r3
 964 007c 1846     		mov	r0, r3
 965 007e FFF7FEFF 		bl	PWM_2_WriteCompare
 193:.\main.c      ****             CyDelay(30);
 966              		.loc 1 193 0 discriminator 3
 967 0082 1E20     		movs	r0, #30
 968 0084 FFF7FEFF 		bl	CyDelay
 189:.\main.c      ****         {
 969              		.loc 1 189 0 discriminator 3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 22


 970 0088 FB88     		ldrh	r3, [r7, #6]
 971 008a 013B     		subs	r3, r3, #1
 972 008c FB80     		strh	r3, [r7, #6]	@ movhi
 973              	.L45:
 189:.\main.c      ****         {
 974              		.loc 1 189 0 is_stmt 0 discriminator 1
 975 008e FB88     		ldrh	r3, [r7, #6]
 976 0090 1E2B     		cmp	r3, #30
 977 0092 ECD8     		bhi	.L46
 194:.\main.c      ****         }
 195:.\main.c      ****         
 196:.\main.c      ****         for(fluct = 30; fluct < 70; fluct++)
 978              		.loc 1 196 0 is_stmt 1
 979 0094 1E23     		movs	r3, #30
 980 0096 FB80     		strh	r3, [r7, #6]	@ movhi
 981 0098 0FE0     		b	.L47
 982              	.L48:
 197:.\main.c      ****         {
 198:.\main.c      ****             PWM_1_WriteCompare(fluct);
 983              		.loc 1 198 0 discriminator 3
 984 009a FB88     		ldrh	r3, [r7, #6]	@ movhi
 985 009c DBB2     		uxtb	r3, r3
 986 009e 1846     		mov	r0, r3
 987 00a0 FFF7FEFF 		bl	PWM_1_WriteCompare
 199:.\main.c      ****             PWM_2_WriteCompare(fluct);
 988              		.loc 1 199 0 discriminator 3
 989 00a4 FB88     		ldrh	r3, [r7, #6]	@ movhi
 990 00a6 DBB2     		uxtb	r3, r3
 991 00a8 1846     		mov	r0, r3
 992 00aa FFF7FEFF 		bl	PWM_2_WriteCompare
 200:.\main.c      ****             CyDelay(30);
 993              		.loc 1 200 0 discriminator 3
 994 00ae 1E20     		movs	r0, #30
 995 00b0 FFF7FEFF 		bl	CyDelay
 196:.\main.c      ****         {
 996              		.loc 1 196 0 discriminator 3
 997 00b4 FB88     		ldrh	r3, [r7, #6]
 998 00b6 0133     		adds	r3, r3, #1
 999 00b8 FB80     		strh	r3, [r7, #6]	@ movhi
 1000              	.L47:
 196:.\main.c      ****         {
 1001              		.loc 1 196 0 is_stmt 0 discriminator 1
 1002 00ba FB88     		ldrh	r3, [r7, #6]
 1003 00bc 452B     		cmp	r3, #69
 1004 00be ECD9     		bls	.L48
 1005              	.L44:
 201:.\main.c      ****         }
 202:.\main.c      ****     }
 203:.\main.c      ****     direction = !direction;
 1006              		.loc 1 203 0 is_stmt 1
 1007 00c0 0B4B     		ldr	r3, .L49
 1008 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1009 00c4 002B     		cmp	r3, #0
 1010 00c6 0CBF     		ite	eq
 1011 00c8 0123     		moveq	r3, #1
 1012 00ca 0023     		movne	r3, #0
 1013 00cc DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 23


 1014 00ce 1A46     		mov	r2, r3
 1015 00d0 074B     		ldr	r3, .L49
 1016 00d2 1A70     		strb	r2, [r3]
 204:.\main.c      ****     M1_IN2_Write(direction);
 1017              		.loc 1 204 0
 1018 00d4 064B     		ldr	r3, .L49
 1019 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 00d8 1846     		mov	r0, r3
 1021 00da FFF7FEFF 		bl	M1_IN2_Write
 205:.\main.c      ****     M2_IN2_Write(direction);
 1022              		.loc 1 205 0
 1023 00de 044B     		ldr	r3, .L49
 1024 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1025 00e2 1846     		mov	r0, r3
 1026 00e4 FFF7FEFF 		bl	M2_IN2_Write
 206:.\main.c      **** }
 1027              		.loc 1 206 0
 1028 00e8 0837     		adds	r7, r7, #8
 1029              		.cfi_def_cfa_offset 8
 1030 00ea BD46     		mov	sp, r7
 1031              		.cfi_def_cfa_register 13
 1032              		@ sp needed
 1033 00ec 80BD     		pop	{r7, pc}
 1034              	.L50:
 1035 00ee 00BF     		.align	2
 1036              	.L49:
 1037 00f0 00000000 		.word	direction
 1038              		.cfi_endproc
 1039              	.LFE72:
 1040              		.size	cycle_PWM, .-cycle_PWM
 1041              		.section	.text.main,"ax",%progbits
 1042              		.align	2
 1043              		.global	main
 1044              		.thumb
 1045              		.thumb_func
 1046              		.type	main, %function
 1047              	main:
 1048              	.LFB73:
 207:.\main.c      **** 
 208:.\main.c      **** int main()
 209:.\main.c      **** {  
 1049              		.loc 1 209 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053 0000 80B5     		push	{r7, lr}
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 7, -8
 1056              		.cfi_offset 14, -4
 1057 0002 00AF     		add	r7, sp, #0
 1058              		.cfi_def_cfa_register 7
 210:.\main.c      **** 
 211:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 212:.\main.c      **** // ----- INITIALIZATIONS ----------
 213:.\main.c      ****     CYGlobalIntEnable;
 1059              		.loc 1 213 0
 1060              	@ 213 ".\main.c" 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 24


 1061 0004 62B6     		CPSIE   i
 1062              	@ 0 "" 2
 214:.\main.c      ****     if(ENABLE_PWM)
 215:.\main.c      ****     {
 216:.\main.c      ****         PWM_1_Start();// starting the pwm
 1063              		.loc 1 216 0
 1064              		.thumb
 1065 0006 FFF7FEFF 		bl	PWM_1_Start
 217:.\main.c      ****         PWM_2_Start();// starting the pwm
 1066              		.loc 1 217 0
 1067 000a FFF7FEFF 		bl	PWM_2_Start
 218:.\main.c      ****     }
 219:.\main.c      ****     
 220:.\main.c      ****     if(ENABLE_ADC)
 221:.\main.c      ****     {
 222:.\main.c      ****         ADC_Start();
 1068              		.loc 1 222 0
 1069 000e FFF7FEFF 		bl	ADC_Start
 223:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 1070              		.loc 1 223 0
 1071 0012 1548     		ldr	r0, .L54
 1072 0014 FFF7FEFF 		bl	isr_eoc_StartEx
 224:.\main.c      ****         //ADC_StartConvert();
 225:.\main.c      ****         
 226:.\main.c      ****         //start the ADC timer for software trigger mode
 227:.\main.c      ****         Timer_TS_Start();
 1073              		.loc 1 227 0
 1074 0018 FFF7FEFF 		bl	Timer_TS_Start
 228:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 1075              		.loc 1 228 0
 1076 001c 1348     		ldr	r0, .L54+4
 1077 001e FFF7FEFF 		bl	isr_TS_StartEx
 229:.\main.c      ****     }
 230:.\main.c      ****     
 231:.\main.c      ****     if (ENABLE_QUAD)
 232:.\main.c      ****     {
 233:.\main.c      ****         QuadDec_M1_Start();
 1078              		.loc 1 233 0
 1079 0022 FFF7FEFF 		bl	QuadDec_M1_Start
 234:.\main.c      ****         QuadDec_M2_Start();
 1080              		.loc 1 234 0
 1081 0026 FFF7FEFF 		bl	QuadDec_M2_Start
 235:.\main.c      ****         
 236:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1082              		.loc 1 236 0
 1083 002a 1148     		ldr	r0, .L54+8
 1084 002c FFF7FEFF 		bl	isr_quad1_StartEx
 237:.\main.c      ****         
 238:.\main.c      ****         Timer_1_Start();
 1085              		.loc 1 238 0
 1086 0030 FFF7FEFF 		bl	Timer_1_Start
 239:.\main.c      ****         
 240:.\main.c      ****         //isr_quad1_Start();
 241:.\main.c      ****     }
 242:.\main.c      ****     
 243:.\main.c      ****     if(ENABLE_STOP){
 244:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 25


 1087              		.loc 1 244 0
 1088 0034 0F48     		ldr	r0, .L54+12
 1089 0036 FFF7FEFF 		bl	isr_OnLine_StartEx
 245:.\main.c      ****         isr_button_StartEx(button);
 1090              		.loc 1 245 0
 1091 003a 0F48     		ldr	r0, .L54+16
 1092 003c FFF7FEFF 		bl	isr_button_StartEx
 246:.\main.c      ****     }
 247:.\main.c      **** 
 248:.\main.c      ****     // ------USB SETUP ----------------    
 249:.\main.c      ****     if (USE_USB){    
 250:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1093              		.loc 1 250 0
 1094 0040 0020     		movs	r0, #0
 1095 0042 0121     		movs	r1, #1
 1096 0044 FFF7FEFF 		bl	USBUART_Start
 251:.\main.c      ****         if (USBUART_GetConfiguration())
 1097              		.loc 1 251 0
 1098 0048 FFF7FEFF 		bl	USBUART_GetConfiguration
 1099 004c 0346     		mov	r3, r0
 1100 004e 002B     		cmp	r3, #0
 1101 0050 01D0     		beq	.L52
 252:.\main.c      ****             {
 253:.\main.c      ****                  USBUART_CDC_Init();
 1102              		.loc 1 253 0
 1103 0052 FFF7FEFF 		bl	USBUART_CDC_Init
 1104              	.L52:
 254:.\main.c      ****             }
 255:.\main.c      ****     }
 256:.\main.c      ****     
 257:.\main.c      ****     RF_BT_SELECT_Write(0);
 1105              		.loc 1 257 0
 1106 0056 0020     		movs	r0, #0
 1107 0058 FFF7FEFF 		bl	RF_BT_SELECT_Write
 1108              	.L53:
 258:.\main.c      **** 
 259:.\main.c      ****     //usbPutString("Started");
 260:.\main.c      ****     for(;;)
 261:.\main.c      ****     {
 262:.\main.c      ****         /* Place your application code here. */
 263:.\main.c      ****         if(ENABLE_PWM && ENABLE_CYCLE) cycle_PWM();
 264:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 1109              		.loc 1 264 0
 1110 005c FFF7FEFF 		bl	print_ADC
 265:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1111              		.loc 1 265 0
 1112 0060 FFF7FEFF 		bl	Quad_Dec_response
 266:.\main.c      ****         
 267:.\main.c      ****         //handle_usb();        
 268:.\main.c      ****     }   
 1113              		.loc 1 268 0
 1114 0064 FAE7     		b	.L53
 1115              	.L55:
 1116 0066 00BF     		.align	2
 1117              	.L54:
 1118 0068 00000000 		.word	adc_isr
 1119 006c 00000000 		.word	isr_adcTimer
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 26


 1120 0070 00000000 		.word	isr_quad1
 1121 0074 00000000 		.word	Stop_on_line
 1122 0078 00000000 		.word	button
 1123              		.cfi_endproc
 1124              	.LFE73:
 1125              		.size	main, .-main
 1126              		.section	.text.usbPutString,"ax",%progbits
 1127              		.align	2
 1128              		.global	usbPutString
 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	usbPutString, %function
 1132              	usbPutString:
 1133              	.LFB74:
 269:.\main.c      **** }
 270:.\main.c      **** //* ========================================
 271:.\main.c      **** void usbPutString(char *s)
 272:.\main.c      **** {
 1134              		.loc 1 272 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 16
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138 0000 80B5     		push	{r7, lr}
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 7, -8
 1141              		.cfi_offset 14, -4
 1142 0002 84B0     		sub	sp, sp, #16
 1143              		.cfi_def_cfa_offset 24
 1144 0004 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 1146 0006 7860     		str	r0, [r7, #4]
 273:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 274:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 275:.\main.c      **** //  length to 62 char (63rd char is a '!')
 276:.\main.c      ****     if (USE_USB && portOpen)    
 1147              		.loc 1 276 0
 1148 0008 154B     		ldr	r3, .L60
 1149 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1150 000c 002B     		cmp	r3, #0
 1151 000e 23D0     		beq	.L56
 1152              	.LBB3:
 277:.\main.c      ****     {
 278:.\main.c      ****             uint32 cnt = 0;
 1153              		.loc 1 278 0
 1154 0010 0023     		movs	r3, #0
 1155 0012 FB60     		str	r3, [r7, #12]
 279:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 1156              		.loc 1 279 0
 1157 0014 0AE0     		b	.L58
 1158              	.L59:
 280:.\main.c      ****             {
 281:.\main.c      ****                 cnt++;
 1159              		.loc 1 281 0
 1160 0016 FB68     		ldr	r3, [r7, #12]
 1161 0018 0133     		adds	r3, r3, #1
 1162 001a FB60     		str	r3, [r7, #12]
 282:.\main.c      ****                 if(cnt == 3000000){
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 27


 1163              		.loc 1 282 0
 1164 001c FB68     		ldr	r3, [r7, #12]
 1165 001e 114A     		ldr	r2, .L60+4
 1166 0020 9342     		cmp	r3, r2
 1167 0022 03D1     		bne	.L58
 283:.\main.c      ****                     portOpen = 0;
 1168              		.loc 1 283 0
 1169 0024 0E4B     		ldr	r3, .L60
 1170 0026 0022     		movs	r2, #0
 1171 0028 1A70     		strb	r2, [r3]
 284:.\main.c      ****                     return;
 1172              		.loc 1 284 0
 1173 002a 15E0     		b	.L56
 1174              	.L58:
 279:.\main.c      ****             {
 1175              		.loc 1 279 0
 1176 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 1177 0030 0346     		mov	r3, r0
 1178 0032 002B     		cmp	r3, #0
 1179 0034 EFD0     		beq	.L59
 285:.\main.c      ****                 }
 286:.\main.c      ****             }
 287:.\main.c      ****             s[63]='\0';
 1180              		.loc 1 287 0
 1181 0036 7B68     		ldr	r3, [r7, #4]
 1182 0038 3F33     		adds	r3, r3, #63
 1183 003a 0022     		movs	r2, #0
 1184 003c 1A70     		strb	r2, [r3]
 288:.\main.c      ****             s[62]='!';
 1185              		.loc 1 288 0
 1186 003e 7B68     		ldr	r3, [r7, #4]
 1187 0040 3E33     		adds	r3, r3, #62
 1188 0042 2122     		movs	r2, #33
 1189 0044 1A70     		strb	r2, [r3]
 289:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 1190              		.loc 1 289 0
 1191 0046 7868     		ldr	r0, [r7, #4]
 1192 0048 FFF7FEFF 		bl	strlen
 1193 004c 0346     		mov	r3, r0
 1194 004e 9BB2     		uxth	r3, r3
 1195 0050 7868     		ldr	r0, [r7, #4]
 1196 0052 1946     		mov	r1, r3
 1197 0054 FFF7FEFF 		bl	USBUART_PutData
 1198              	.L56:
 1199              	.LBE3:
 290:.\main.c      ****     }
 291:.\main.c      **** }
 1200              		.loc 1 291 0
 1201 0058 1037     		adds	r7, r7, #16
 1202              		.cfi_def_cfa_offset 8
 1203 005a BD46     		mov	sp, r7
 1204              		.cfi_def_cfa_register 13
 1205              		@ sp needed
 1206 005c 80BD     		pop	{r7, pc}
 1207              	.L61:
 1208 005e 00BF     		.align	2
 1209              	.L60:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 28


 1210 0060 00000000 		.word	portOpen
 1211 0064 C0C62D00 		.word	3000000
 1212              		.cfi_endproc
 1213              	.LFE74:
 1214              		.size	usbPutString, .-usbPutString
 1215              		.section	.text.usbPutChar,"ax",%progbits
 1216              		.align	2
 1217              		.global	usbPutChar
 1218              		.thumb
 1219              		.thumb_func
 1220              		.type	usbPutChar, %function
 1221              	usbPutChar:
 1222              	.LFB75:
 292:.\main.c      **** //* ========================================
 293:.\main.c      **** void usbPutChar(char c)
 294:.\main.c      **** {
 1223              		.loc 1 294 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 16
 1226              		@ frame_needed = 1, uses_anonymous_args = 0
 1227 0000 80B5     		push	{r7, lr}
 1228              		.cfi_def_cfa_offset 8
 1229              		.cfi_offset 7, -8
 1230              		.cfi_offset 14, -4
 1231 0002 84B0     		sub	sp, sp, #16
 1232              		.cfi_def_cfa_offset 24
 1233 0004 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 1235 0006 0346     		mov	r3, r0
 1236 0008 FB71     		strb	r3, [r7, #7]
 295:.\main.c      ****     if (USE_USB && portOpen)    
 1237              		.loc 1 295 0
 1238 000a 0F4B     		ldr	r3, .L66
 1239 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1240 000e 002B     		cmp	r3, #0
 1241 0010 16D0     		beq	.L62
 1242              	.LBB4:
 296:.\main.c      ****     {    
 297:.\main.c      ****         uint32 cnt = 0;
 1243              		.loc 1 297 0
 1244 0012 0023     		movs	r3, #0
 1245 0014 FB60     		str	r3, [r7, #12]
 298:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 1246              		.loc 1 298 0
 1247 0016 0AE0     		b	.L64
 1248              	.L65:
 299:.\main.c      ****             cnt++;
 1249              		.loc 1 299 0
 1250 0018 FB68     		ldr	r3, [r7, #12]
 1251 001a 0133     		adds	r3, r3, #1
 1252 001c FB60     		str	r3, [r7, #12]
 300:.\main.c      ****             if(cnt == 3000000){
 1253              		.loc 1 300 0
 1254 001e FB68     		ldr	r3, [r7, #12]
 1255 0020 0A4A     		ldr	r2, .L66+4
 1256 0022 9342     		cmp	r3, r2
 1257 0024 03D1     		bne	.L64
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 29


 301:.\main.c      ****                 portOpen = 0;
 1258              		.loc 1 301 0
 1259 0026 084B     		ldr	r3, .L66
 1260 0028 0022     		movs	r2, #0
 1261 002a 1A70     		strb	r2, [r3]
 302:.\main.c      ****                 return;
 1262              		.loc 1 302 0
 1263 002c 08E0     		b	.L62
 1264              	.L64:
 298:.\main.c      ****             cnt++;
 1265              		.loc 1 298 0
 1266 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 1267 0032 0346     		mov	r3, r0
 1268 0034 002B     		cmp	r3, #0
 1269 0036 EFD0     		beq	.L65
 303:.\main.c      ****             }
 304:.\main.c      ****         }
 305:.\main.c      ****         USBUART_PutChar(c);
 1270              		.loc 1 305 0
 1271 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1272 003a 1846     		mov	r0, r3
 1273 003c FFF7FEFF 		bl	USBUART_PutChar
 1274              	.L62:
 1275              	.LBE4:
 306:.\main.c      ****     }    
 307:.\main.c      **** }
 1276              		.loc 1 307 0
 1277 0040 1037     		adds	r7, r7, #16
 1278              		.cfi_def_cfa_offset 8
 1279 0042 BD46     		mov	sp, r7
 1280              		.cfi_def_cfa_register 13
 1281              		@ sp needed
 1282 0044 80BD     		pop	{r7, pc}
 1283              	.L67:
 1284 0046 00BF     		.align	2
 1285              	.L66:
 1286 0048 00000000 		.word	portOpen
 1287 004c C0C62D00 		.word	3000000
 1288              		.cfi_endproc
 1289              	.LFE75:
 1290              		.size	usbPutChar, .-usbPutChar
 1291              		.section	.text.uart_set_PWM,"ax",%progbits
 1292              		.align	2
 1293              		.global	uart_set_PWM
 1294              		.thumb
 1295              		.thumb_func
 1296              		.type	uart_set_PWM, %function
 1297              	uart_set_PWM:
 1298              	.LFB76:
 308:.\main.c      **** //* ========================================
 309:.\main.c      **** 
 310:.\main.c      **** void uart_set_PWM()
 311:.\main.c      **** {
 1299              		.loc 1 311 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 8
 1302              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 30


 1303 0000 80B5     		push	{r7, lr}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 82B0     		sub	sp, sp, #8
 1308              		.cfi_def_cfa_offset 16
 1309 0004 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 312:.\main.c      ****     uint8 c;
 313:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 1311              		.loc 1 313 0
 1312 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 1313 000a 0346     		mov	r3, r0
 1314 000c 002B     		cmp	r3, #0
 1315 000e 11D0     		beq	.L68
 314:.\main.c      ****        {  
 315:.\main.c      ****             c = USBUART_GetChar();
 1316              		.loc 1 315 0
 1317 0010 FFF7FEFF 		bl	USBUART_GetChar
 1318 0014 0346     		mov	r3, r0
 1319 0016 FB71     		strb	r3, [r7, #7]
 316:.\main.c      ****             
 317:.\main.c      ****             if(c <= 100 && c > 0){
 1320              		.loc 1 317 0
 1321 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1322 001a 642B     		cmp	r3, #100
 1323 001c 0AD8     		bhi	.L68
 1324              		.loc 1 317 0 is_stmt 0 discriminator 1
 1325 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1326 0020 002B     		cmp	r3, #0
 1327 0022 07D0     		beq	.L68
 318:.\main.c      ****                 PWM_1_WriteCompare(c);
 1328              		.loc 1 318 0 is_stmt 1
 1329 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1330 0026 1846     		mov	r0, r3
 1331 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 319:.\main.c      ****                 usbPutString(c);
 1332              		.loc 1 319 0
 1333 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1334 002e 1846     		mov	r0, r3
 1335 0030 FFF7FEFF 		bl	usbPutString
 1336              	.L68:
 320:.\main.c      ****             }
 321:.\main.c      ****        }
 322:.\main.c      **** }
 1337              		.loc 1 322 0
 1338 0034 0837     		adds	r7, r7, #8
 1339              		.cfi_def_cfa_offset 8
 1340 0036 BD46     		mov	sp, r7
 1341              		.cfi_def_cfa_register 13
 1342              		@ sp needed
 1343 0038 80BD     		pop	{r7, pc}
 1344              		.cfi_endproc
 1345              	.LFE76:
 1346              		.size	uart_set_PWM, .-uart_set_PWM
 1347 003a 00BF     		.text
 1348              	.Letext0:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 31


 1349              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1350              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1351              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1352              		.file 5 ".\\vars.h"
 1353              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1354              		.section	.debug_info,"",%progbits
 1355              	.Ldebug_info0:
 1356 0000 29060000 		.4byte	0x629
 1357 0004 0400     		.2byte	0x4
 1358 0006 00000000 		.4byte	.Ldebug_abbrev0
 1359 000a 04       		.byte	0x4
 1360 000b 01       		.uleb128 0x1
 1361 000c B1010000 		.4byte	.LASF93
 1362 0010 01       		.byte	0x1
 1363 0011 70020000 		.4byte	.LASF94
 1364 0015 0C030000 		.4byte	.LASF95
 1365 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1366 001d 00000000 		.4byte	0
 1367 0021 00000000 		.4byte	.Ldebug_line0
 1368 0025 02       		.uleb128 0x2
 1369 0026 01       		.byte	0x1
 1370 0027 06       		.byte	0x6
 1371 0028 B0020000 		.4byte	.LASF0
 1372 002c 02       		.uleb128 0x2
 1373 002d 01       		.byte	0x1
 1374 002e 08       		.byte	0x8
 1375 002f 7F020000 		.4byte	.LASF1
 1376 0033 02       		.uleb128 0x2
 1377 0034 02       		.byte	0x2
 1378 0035 05       		.byte	0x5
 1379 0036 7E000000 		.4byte	.LASF2
 1380 003a 02       		.uleb128 0x2
 1381 003b 02       		.byte	0x2
 1382 003c 07       		.byte	0x7
 1383 003d 66030000 		.4byte	.LASF3
 1384 0041 03       		.uleb128 0x3
 1385 0042 4B040000 		.4byte	.LASF11
 1386 0046 02       		.byte	0x2
 1387 0047 3F       		.byte	0x3f
 1388 0048 4C000000 		.4byte	0x4c
 1389 004c 02       		.uleb128 0x2
 1390 004d 04       		.byte	0x4
 1391 004e 05       		.byte	0x5
 1392 004f 93030000 		.4byte	.LASF4
 1393 0053 02       		.uleb128 0x2
 1394 0054 04       		.byte	0x4
 1395 0055 07       		.byte	0x7
 1396 0056 00040000 		.4byte	.LASF5
 1397 005a 02       		.uleb128 0x2
 1398 005b 08       		.byte	0x8
 1399 005c 05       		.byte	0x5
 1400 005d 65010000 		.4byte	.LASF6
 1401 0061 02       		.uleb128 0x2
 1402 0062 08       		.byte	0x8
 1403 0063 07       		.byte	0x7
 1404 0064 C4020000 		.4byte	.LASF7
 1405 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 32


 1406 0069 04       		.byte	0x4
 1407 006a 05       		.byte	0x5
 1408 006b 696E7400 		.ascii	"int\000"
 1409 006f 02       		.uleb128 0x2
 1410 0070 04       		.byte	0x4
 1411 0071 07       		.byte	0x7
 1412 0072 E6020000 		.4byte	.LASF8
 1413 0076 02       		.uleb128 0x2
 1414 0077 04       		.byte	0x4
 1415 0078 07       		.byte	0x7
 1416 0079 95000000 		.4byte	.LASF9
 1417 007d 05       		.uleb128 0x5
 1418 007e 04       		.byte	0x4
 1419 007f 83000000 		.4byte	0x83
 1420 0083 02       		.uleb128 0x2
 1421 0084 01       		.byte	0x1
 1422 0085 08       		.byte	0x8
 1423 0086 8E030000 		.4byte	.LASF10
 1424 008a 03       		.uleb128 0x3
 1425 008b BC020000 		.4byte	.LASF12
 1426 008f 03       		.byte	0x3
 1427 0090 2C       		.byte	0x2c
 1428 0091 41000000 		.4byte	0x41
 1429 0095 06       		.uleb128 0x6
 1430 0096 1A010000 		.4byte	.LASF13
 1431 009a 04       		.byte	0x4
 1432 009b 9201     		.2byte	0x192
 1433 009d 2C000000 		.4byte	0x2c
 1434 00a1 06       		.uleb128 0x6
 1435 00a2 D8030000 		.4byte	.LASF14
 1436 00a6 04       		.byte	0x4
 1437 00a7 9301     		.2byte	0x193
 1438 00a9 3A000000 		.4byte	0x3a
 1439 00ad 06       		.uleb128 0x6
 1440 00ae F9030000 		.4byte	.LASF15
 1441 00b2 04       		.byte	0x4
 1442 00b3 9401     		.2byte	0x194
 1443 00b5 53000000 		.4byte	0x53
 1444 00b9 06       		.uleb128 0x6
 1445 00ba 80010000 		.4byte	.LASF16
 1446 00be 04       		.byte	0x4
 1447 00bf 9501     		.2byte	0x195
 1448 00c1 25000000 		.4byte	0x25
 1449 00c5 06       		.uleb128 0x6
 1450 00c6 14010000 		.4byte	.LASF17
 1451 00ca 04       		.byte	0x4
 1452 00cb 9601     		.2byte	0x196
 1453 00cd 33000000 		.4byte	0x33
 1454 00d1 02       		.uleb128 0x2
 1455 00d2 04       		.byte	0x4
 1456 00d3 04       		.byte	0x4
 1457 00d4 5F010000 		.4byte	.LASF18
 1458 00d8 02       		.uleb128 0x2
 1459 00d9 08       		.byte	0x8
 1460 00da 04       		.byte	0x4
 1461 00db 27040000 		.4byte	.LASF19
 1462 00df 07       		.uleb128 0x7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 33


 1463 00e0 84030000 		.4byte	.LASF96
 1464 00e4 20       		.byte	0x20
 1465 00e5 05       		.byte	0x5
 1466 00e6 3F       		.byte	0x3f
 1467 00e7 B8010000 		.4byte	0x1b8
 1468 00eb 08       		.uleb128 0x8
 1469 00ec D2040000 		.4byte	.LASF20
 1470 00f0 05       		.byte	0x5
 1471 00f1 40       		.byte	0x40
 1472 00f2 B9000000 		.4byte	0xb9
 1473 00f6 00       		.byte	0
 1474 00f7 08       		.uleb128 0x8
 1475 00f8 0E010000 		.4byte	.LASF21
 1476 00fc 05       		.byte	0x5
 1477 00fd 41       		.byte	0x41
 1478 00fe 95000000 		.4byte	0x95
 1479 0102 01       		.byte	0x1
 1480 0103 08       		.uleb128 0x8
 1481 0104 9C030000 		.4byte	.LASF22
 1482 0108 05       		.byte	0x5
 1483 0109 42       		.byte	0x42
 1484 010a C5000000 		.4byte	0xc5
 1485 010e 02       		.byte	0x2
 1486 010f 08       		.uleb128 0x8
 1487 0110 AF040000 		.4byte	.LASF23
 1488 0114 05       		.byte	0x5
 1489 0115 43       		.byte	0x43
 1490 0116 C5000000 		.4byte	0xc5
 1491 011a 04       		.byte	0x4
 1492 011b 08       		.uleb128 0x8
 1493 011c D7040000 		.4byte	.LASF24
 1494 0120 05       		.byte	0x5
 1495 0121 44       		.byte	0x44
 1496 0122 C5000000 		.4byte	0xc5
 1497 0126 06       		.byte	0x6
 1498 0127 08       		.uleb128 0x8
 1499 0128 A9010000 		.4byte	.LASF25
 1500 012c 05       		.byte	0x5
 1501 012d 45       		.byte	0x45
 1502 012e C5000000 		.4byte	0xc5
 1503 0132 08       		.byte	0x8
 1504 0133 08       		.uleb128 0x8
 1505 0134 66040000 		.4byte	.LASF26
 1506 0138 05       		.byte	0x5
 1507 0139 46       		.byte	0x46
 1508 013a C5000000 		.4byte	0xc5
 1509 013e 0A       		.byte	0xa
 1510 013f 08       		.uleb128 0x8
 1511 0140 8D020000 		.4byte	.LASF27
 1512 0144 05       		.byte	0x5
 1513 0145 47       		.byte	0x47
 1514 0146 C5000000 		.4byte	0xc5
 1515 014a 0C       		.byte	0xc
 1516 014b 08       		.uleb128 0x8
 1517 014c 9C010000 		.4byte	.LASF28
 1518 0150 05       		.byte	0x5
 1519 0151 48       		.byte	0x48
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 34


 1520 0152 C5000000 		.4byte	0xc5
 1521 0156 0E       		.byte	0xe
 1522 0157 08       		.uleb128 0x8
 1523 0158 5E030000 		.4byte	.LASF29
 1524 015c 05       		.byte	0x5
 1525 015d 49       		.byte	0x49
 1526 015e C5000000 		.4byte	0xc5
 1527 0162 10       		.byte	0x10
 1528 0163 08       		.uleb128 0x8
 1529 0164 AC030000 		.4byte	.LASF30
 1530 0168 05       		.byte	0x5
 1531 0169 4A       		.byte	0x4a
 1532 016a C5000000 		.4byte	0xc5
 1533 016e 12       		.byte	0x12
 1534 016f 08       		.uleb128 0x8
 1535 0170 C1030000 		.4byte	.LASF31
 1536 0174 05       		.byte	0x5
 1537 0175 4B       		.byte	0x4b
 1538 0176 C5000000 		.4byte	0xc5
 1539 017a 14       		.byte	0x14
 1540 017b 08       		.uleb128 0x8
 1541 017c 20010000 		.4byte	.LASF32
 1542 0180 05       		.byte	0x5
 1543 0181 4C       		.byte	0x4c
 1544 0182 C5000000 		.4byte	0xc5
 1545 0186 16       		.byte	0x16
 1546 0187 08       		.uleb128 0x8
 1547 0188 76000000 		.4byte	.LASF33
 1548 018c 05       		.byte	0x5
 1549 018d 4D       		.byte	0x4d
 1550 018e C5000000 		.4byte	0xc5
 1551 0192 18       		.byte	0x18
 1552 0193 08       		.uleb128 0x8
 1553 0194 94010000 		.4byte	.LASF34
 1554 0198 05       		.byte	0x5
 1555 0199 4E       		.byte	0x4e
 1556 019a C5000000 		.4byte	0xc5
 1557 019e 1A       		.byte	0x1a
 1558 019f 08       		.uleb128 0x8
 1559 01a0 3B030000 		.4byte	.LASF35
 1560 01a4 05       		.byte	0x5
 1561 01a5 4F       		.byte	0x4f
 1562 01a6 C5000000 		.4byte	0xc5
 1563 01aa 1C       		.byte	0x1c
 1564 01ab 08       		.uleb128 0x8
 1565 01ac B4030000 		.4byte	.LASF36
 1566 01b0 05       		.byte	0x5
 1567 01b1 50       		.byte	0x50
 1568 01b2 C5000000 		.4byte	0xc5
 1569 01b6 1E       		.byte	0x1e
 1570 01b7 00       		.byte	0
 1571 01b8 09       		.uleb128 0x9
 1572 01b9 36040000 		.4byte	.LASF58
 1573 01bd 01       		.byte	0x1
 1574 01be 26       		.byte	0x26
 1575 01bf 00000000 		.4byte	.LFB63
 1576 01c3 2C000000 		.4byte	.LFE63-.LFB63
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 35


 1577 01c7 01       		.uleb128 0x1
 1578 01c8 9C       		.byte	0x9c
 1579 01c9 EA010000 		.4byte	0x1ea
 1580 01cd 0A       		.uleb128 0xa
 1581 01ce 79020000 		.4byte	.LASF37
 1582 01d2 01       		.byte	0x1
 1583 01d3 26       		.byte	0x26
 1584 01d4 68000000 		.4byte	0x68
 1585 01d8 02       		.uleb128 0x2
 1586 01d9 91       		.byte	0x91
 1587 01da 74       		.sleb128 -12
 1588 01db 0A       		.uleb128 0xa
 1589 01dc A7030000 		.4byte	.LASF38
 1590 01e0 01       		.byte	0x1
 1591 01e1 26       		.byte	0x26
 1592 01e2 68000000 		.4byte	0x68
 1593 01e6 02       		.uleb128 0x2
 1594 01e7 91       		.byte	0x91
 1595 01e8 70       		.sleb128 -16
 1596 01e9 00       		.byte	0
 1597 01ea 0B       		.uleb128 0xb
 1598 01eb 96020000 		.4byte	.LASF97
 1599 01ef 01       		.byte	0x1
 1600 01f0 2B       		.byte	0x2b
 1601 01f1 00000000 		.4byte	.LFB64
 1602 01f5 30000000 		.4byte	.LFE64-.LFB64
 1603 01f9 01       		.uleb128 0x1
 1604 01fa 9C       		.byte	0x9c
 1605 01fb 0C       		.uleb128 0xc
 1606 01fc 2E040000 		.4byte	.LASF39
 1607 0200 01       		.byte	0x1
 1608 0201 34       		.byte	0x34
 1609 0202 00000000 		.4byte	.LFB65
 1610 0206 20000000 		.4byte	.LFE65-.LFB65
 1611 020a 01       		.uleb128 0x1
 1612 020b 9C       		.byte	0x9c
 1613 020c 0C       		.uleb128 0xc
 1614 020d FA000000 		.4byte	.LASF40
 1615 0211 01       		.byte	0x1
 1616 0212 3C       		.byte	0x3c
 1617 0213 00000000 		.4byte	.LFB66
 1618 0217 3C000000 		.4byte	.LFE66-.LFB66
 1619 021b 01       		.uleb128 0x1
 1620 021c 9C       		.byte	0x9c
 1621 021d 0C       		.uleb128 0xc
 1622 021e 4E000000 		.4byte	.LASF41
 1623 0222 01       		.byte	0x1
 1624 0223 46       		.byte	0x46
 1625 0224 00000000 		.4byte	.LFB67
 1626 0228 0A000000 		.4byte	.LFE67-.LFB67
 1627 022c 01       		.uleb128 0x1
 1628 022d 9C       		.byte	0x9c
 1629 022e 0C       		.uleb128 0xc
 1630 022f 3F020000 		.4byte	.LASF42
 1631 0233 01       		.byte	0x1
 1632 0234 4B       		.byte	0x4b
 1633 0235 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 36


 1634 0239 0E000000 		.4byte	.LFE68-.LFB68
 1635 023d 01       		.uleb128 0x1
 1636 023e 9C       		.byte	0x9c
 1637 023f 0C       		.uleb128 0xc
 1638 0240 5B000000 		.4byte	.LASF43
 1639 0244 01       		.byte	0x1
 1640 0245 50       		.byte	0x50
 1641 0246 00000000 		.4byte	.LFB69
 1642 024a 0A000000 		.4byte	.LFE69-.LFB69
 1643 024e 01       		.uleb128 0x1
 1644 024f 9C       		.byte	0x9c
 1645 0250 0D       		.uleb128 0xd
 1646 0251 9E000000 		.4byte	.LASF50
 1647 0255 01       		.byte	0x1
 1648 0256 55       		.byte	0x55
 1649 0257 00000000 		.4byte	.LFB70
 1650 025b 60020000 		.4byte	.LFE70-.LFB70
 1651 025f 01       		.uleb128 0x1
 1652 0260 9C       		.byte	0x9c
 1653 0261 BC020000 		.4byte	0x2bc
 1654 0265 0E       		.uleb128 0xe
 1655 0266 BC000000 		.4byte	.LASF44
 1656 026a 01       		.byte	0x1
 1657 026b 5B       		.byte	0x5b
 1658 026c BC020000 		.4byte	0x2bc
 1659 0270 03       		.uleb128 0x3
 1660 0271 91       		.byte	0x91
 1661 0272 A87F     		.sleb128 -88
 1662 0274 0E       		.uleb128 0xe
 1663 0275 64020000 		.4byte	.LASF45
 1664 0279 01       		.byte	0x1
 1665 027a 5C       		.byte	0x5c
 1666 027b BC020000 		.4byte	0x2bc
 1667 027f 03       		.uleb128 0x3
 1668 0280 91       		.byte	0x91
 1669 0281 E87E     		.sleb128 -152
 1670 0283 0E       		.uleb128 0xe
 1671 0284 F3020000 		.4byte	.LASF46
 1672 0288 01       		.byte	0x1
 1673 0289 63       		.byte	0x63
 1674 028a C5000000 		.4byte	0xc5
 1675 028e 02       		.uleb128 0x2
 1676 028f 91       		.byte	0x91
 1677 0290 6A       		.sleb128 -22
 1678 0291 0E       		.uleb128 0xe
 1679 0292 79030000 		.4byte	.LASF47
 1680 0296 01       		.byte	0x1
 1681 0297 64       		.byte	0x64
 1682 0298 C5000000 		.4byte	0xc5
 1683 029c 02       		.uleb128 0x2
 1684 029d 91       		.byte	0x91
 1685 029e 68       		.sleb128 -24
 1686 029f 0E       		.uleb128 0xe
 1687 02a0 50010000 		.4byte	.LASF48
 1688 02a4 01       		.byte	0x1
 1689 02a5 66       		.byte	0x66
 1690 02a6 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 37


 1691 02aa 02       		.uleb128 0x2
 1692 02ab 91       		.byte	0x91
 1693 02ac 6E       		.sleb128 -18
 1694 02ad 0E       		.uleb128 0xe
 1695 02ae 44030000 		.4byte	.LASF49
 1696 02b2 01       		.byte	0x1
 1697 02b3 67       		.byte	0x67
 1698 02b4 C5000000 		.4byte	0xc5
 1699 02b8 02       		.uleb128 0x2
 1700 02b9 91       		.byte	0x91
 1701 02ba 6C       		.sleb128 -20
 1702 02bb 00       		.byte	0
 1703 02bc 0F       		.uleb128 0xf
 1704 02bd 83000000 		.4byte	0x83
 1705 02c1 CC020000 		.4byte	0x2cc
 1706 02c5 10       		.uleb128 0x10
 1707 02c6 76000000 		.4byte	0x76
 1708 02ca 3F       		.byte	0x3f
 1709 02cb 00       		.byte	0
 1710 02cc 0D       		.uleb128 0xd
 1711 02cd 04010000 		.4byte	.LASF51
 1712 02d1 01       		.byte	0x1
 1713 02d2 96       		.byte	0x96
 1714 02d3 00000000 		.4byte	.LFB71
 1715 02d7 84000000 		.4byte	.LFE71-.LFB71
 1716 02db 01       		.uleb128 0x1
 1717 02dc 9C       		.byte	0x9c
 1718 02dd 16030000 		.4byte	0x316
 1719 02e1 11       		.uleb128 0x11
 1720 02e2 0E000000 		.4byte	.LBB2
 1721 02e6 60000000 		.4byte	.LBE2-.LBB2
 1722 02ea 0E       		.uleb128 0xe
 1723 02eb EB030000 		.4byte	.LASF52
 1724 02ef 01       		.byte	0x1
 1725 02f0 9F       		.byte	0x9f
 1726 02f1 D1000000 		.4byte	0xd1
 1727 02f5 02       		.uleb128 0x2
 1728 02f6 91       		.byte	0x91
 1729 02f7 74       		.sleb128 -12
 1730 02f8 0E       		.uleb128 0xe
 1731 02f9 0B000000 		.4byte	.LASF53
 1732 02fd 01       		.byte	0x1
 1733 02fe A0       		.byte	0xa0
 1734 02ff C5000000 		.4byte	0xc5
 1735 0303 02       		.uleb128 0x2
 1736 0304 91       		.byte	0x91
 1737 0305 72       		.sleb128 -14
 1738 0306 0E       		.uleb128 0xe
 1739 0307 C7040000 		.4byte	.LASF54
 1740 030b 01       		.byte	0x1
 1741 030c A2       		.byte	0xa2
 1742 030d 16030000 		.4byte	0x316
 1743 0311 02       		.uleb128 0x2
 1744 0312 91       		.byte	0x91
 1745 0313 60       		.sleb128 -32
 1746 0314 00       		.byte	0
 1747 0315 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 38


 1748 0316 0F       		.uleb128 0xf
 1749 0317 83000000 		.4byte	0x83
 1750 031b 26030000 		.4byte	0x326
 1751 031f 10       		.uleb128 0x10
 1752 0320 76000000 		.4byte	0x76
 1753 0324 0F       		.byte	0xf
 1754 0325 00       		.byte	0
 1755 0326 0D       		.uleb128 0xd
 1756 0327 38000000 		.4byte	.LASF55
 1757 032b 01       		.byte	0x1
 1758 032c AB       		.byte	0xab
 1759 032d 00000000 		.4byte	.LFB72
 1760 0331 F4000000 		.4byte	.LFE72-.LFB72
 1761 0335 01       		.uleb128 0x1
 1762 0336 9C       		.byte	0x9c
 1763 0337 4A030000 		.4byte	0x34a
 1764 033b 0E       		.uleb128 0xe
 1765 033c 35030000 		.4byte	.LASF56
 1766 0340 01       		.byte	0x1
 1767 0341 AD       		.byte	0xad
 1768 0342 A1000000 		.4byte	0xa1
 1769 0346 02       		.uleb128 0x2
 1770 0347 91       		.byte	0x91
 1771 0348 76       		.sleb128 -10
 1772 0349 00       		.byte	0
 1773 034a 12       		.uleb128 0x12
 1774 034b DC000000 		.4byte	.LASF57
 1775 034f 01       		.byte	0x1
 1776 0350 D0       		.byte	0xd0
 1777 0351 68000000 		.4byte	0x68
 1778 0355 00000000 		.4byte	.LFB73
 1779 0359 7C000000 		.4byte	.LFE73-.LFB73
 1780 035d 01       		.uleb128 0x1
 1781 035e 9C       		.byte	0x9c
 1782 035f 13       		.uleb128 0x13
 1783 0360 73010000 		.4byte	.LASF59
 1784 0364 01       		.byte	0x1
 1785 0365 0F01     		.2byte	0x10f
 1786 0367 00000000 		.4byte	.LFB74
 1787 036b 68000000 		.4byte	.LFE74-.LFB74
 1788 036f 01       		.uleb128 0x1
 1789 0370 9C       		.byte	0x9c
 1790 0371 9C030000 		.4byte	0x39c
 1791 0375 14       		.uleb128 0x14
 1792 0376 7300     		.ascii	"s\000"
 1793 0378 01       		.byte	0x1
 1794 0379 0F01     		.2byte	0x10f
 1795 037b 7D000000 		.4byte	0x7d
 1796 037f 02       		.uleb128 0x2
 1797 0380 91       		.byte	0x91
 1798 0381 6C       		.sleb128 -20
 1799 0382 11       		.uleb128 0x11
 1800 0383 10000000 		.4byte	.LBB3
 1801 0387 48000000 		.4byte	.LBE3-.LBB3
 1802 038b 15       		.uleb128 0x15
 1803 038c 636E7400 		.ascii	"cnt\000"
 1804 0390 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 39


 1805 0391 1601     		.2byte	0x116
 1806 0393 AD000000 		.4byte	0xad
 1807 0397 02       		.uleb128 0x2
 1808 0398 91       		.byte	0x91
 1809 0399 74       		.sleb128 -12
 1810 039a 00       		.byte	0
 1811 039b 00       		.byte	0
 1812 039c 13       		.uleb128 0x13
 1813 039d 00000000 		.4byte	.LASF60
 1814 03a1 01       		.byte	0x1
 1815 03a2 2501     		.2byte	0x125
 1816 03a4 00000000 		.4byte	.LFB75
 1817 03a8 50000000 		.4byte	.LFE75-.LFB75
 1818 03ac 01       		.uleb128 0x1
 1819 03ad 9C       		.byte	0x9c
 1820 03ae D9030000 		.4byte	0x3d9
 1821 03b2 14       		.uleb128 0x14
 1822 03b3 6300     		.ascii	"c\000"
 1823 03b5 01       		.byte	0x1
 1824 03b6 2501     		.2byte	0x125
 1825 03b8 83000000 		.4byte	0x83
 1826 03bc 02       		.uleb128 0x2
 1827 03bd 91       		.byte	0x91
 1828 03be 6F       		.sleb128 -17
 1829 03bf 11       		.uleb128 0x11
 1830 03c0 12000000 		.4byte	.LBB4
 1831 03c4 2E000000 		.4byte	.LBE4-.LBB4
 1832 03c8 15       		.uleb128 0x15
 1833 03c9 636E7400 		.ascii	"cnt\000"
 1834 03cd 01       		.byte	0x1
 1835 03ce 2901     		.2byte	0x129
 1836 03d0 AD000000 		.4byte	0xad
 1837 03d4 02       		.uleb128 0x2
 1838 03d5 91       		.byte	0x91
 1839 03d6 74       		.sleb128 -12
 1840 03d7 00       		.byte	0
 1841 03d8 00       		.byte	0
 1842 03d9 16       		.uleb128 0x16
 1843 03da 43010000 		.4byte	.LASF61
 1844 03de 01       		.byte	0x1
 1845 03df 3601     		.2byte	0x136
 1846 03e1 00000000 		.4byte	.LFB76
 1847 03e5 3A000000 		.4byte	.LFE76-.LFB76
 1848 03e9 01       		.uleb128 0x1
 1849 03ea 9C       		.byte	0x9c
 1850 03eb FD030000 		.4byte	0x3fd
 1851 03ef 15       		.uleb128 0x15
 1852 03f0 6300     		.ascii	"c\000"
 1853 03f2 01       		.byte	0x1
 1854 03f3 3801     		.2byte	0x138
 1855 03f5 95000000 		.4byte	0x95
 1856 03f9 02       		.uleb128 0x2
 1857 03fa 91       		.byte	0x91
 1858 03fb 77       		.sleb128 -9
 1859 03fc 00       		.byte	0
 1860 03fd 17       		.uleb128 0x17
 1861 03fe BA040000 		.4byte	.LASF62
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 40


 1862 0402 06       		.byte	0x6
 1863 0403 9606     		.2byte	0x696
 1864 0405 09040000 		.4byte	0x409
 1865 0409 18       		.uleb128 0x18
 1866 040a 8A000000 		.4byte	0x8a
 1867 040e 19       		.uleb128 0x19
 1868 040f 747300   		.ascii	"ts\000"
 1869 0412 05       		.byte	0x5
 1870 0413 10       		.byte	0x10
 1871 0414 95000000 		.4byte	0x95
 1872 0418 05       		.uleb128 0x5
 1873 0419 03       		.byte	0x3
 1874 041a 00000000 		.4byte	ts
 1875 041e 1A       		.uleb128 0x1a
 1876 041f 82040000 		.4byte	.LASF63
 1877 0423 05       		.byte	0x5
 1878 0424 11       		.byte	0x11
 1879 0425 A1000000 		.4byte	0xa1
 1880 0429 05       		.uleb128 0x5
 1881 042a 03       		.byte	0x3
 1882 042b 00000000 		.4byte	ts_enc
 1883 042f 1A       		.uleb128 0x1a
 1884 0430 89040000 		.4byte	.LASF64
 1885 0434 05       		.byte	0x5
 1886 0435 12       		.byte	0x12
 1887 0436 A1000000 		.4byte	0xa1
 1888 043a 05       		.uleb128 0x5
 1889 043b 03       		.byte	0x3
 1890 043c 00000000 		.4byte	ts_update
 1891 0440 1A       		.uleb128 0x1a
 1892 0441 79040000 		.4byte	.LASF65
 1893 0445 05       		.byte	0x5
 1894 0446 13       		.byte	0x13
 1895 0447 A1000000 		.4byte	0xa1
 1896 044b 05       		.uleb128 0x5
 1897 044c 03       		.byte	0x3
 1898 044d 00000000 		.4byte	ts_speed
 1899 0451 1A       		.uleb128 0x1a
 1900 0452 6E040000 		.4byte	.LASF66
 1901 0456 05       		.byte	0x5
 1902 0457 14       		.byte	0x14
 1903 0458 A1000000 		.4byte	0xa1
 1904 045c 05       		.uleb128 0x5
 1905 045d 03       		.byte	0x3
 1906 045e 00000000 		.4byte	ts_display
 1907 0462 1A       		.uleb128 0x1a
 1908 0463 3F040000 		.4byte	.LASF67
 1909 0467 05       		.byte	0x5
 1910 0468 16       		.byte	0x16
 1911 0469 95000000 		.4byte	0x95
 1912 046d 05       		.uleb128 0x5
 1913 046e 03       		.byte	0x3
 1914 046f 00000000 		.4byte	flag_ts_enc
 1915 0473 1A       		.uleb128 0x1a
 1916 0474 85010000 		.4byte	.LASF68
 1917 0478 05       		.byte	0x5
 1918 0479 17       		.byte	0x17
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 41


 1919 047a 95000000 		.4byte	0x95
 1920 047e 05       		.uleb128 0x5
 1921 047f 03       		.byte	0x3
 1922 0480 00000000 		.4byte	flag_ts_update
 1923 0484 1A       		.uleb128 0x1a
 1924 0485 68000000 		.4byte	.LASF69
 1925 0489 05       		.byte	0x5
 1926 048a 18       		.byte	0x18
 1927 048b 95000000 		.4byte	0x95
 1928 048f 05       		.uleb128 0x5
 1929 0490 03       		.byte	0x3
 1930 0491 00000000 		.4byte	flag_ts_speed
 1931 0495 1A       		.uleb128 0x1a
 1932 0496 46020000 		.4byte	.LASF70
 1933 049a 05       		.byte	0x5
 1934 049b 19       		.byte	0x19
 1935 049c 95000000 		.4byte	0x95
 1936 04a0 05       		.uleb128 0x5
 1937 04a1 03       		.byte	0x3
 1938 04a2 00000000 		.4byte	flag_ts_display
 1939 04a6 1A       		.uleb128 0x1a
 1940 04a7 56020000 		.4byte	.LASF71
 1941 04ab 05       		.byte	0x5
 1942 04ac 1C       		.byte	0x1c
 1943 04ad 95000000 		.4byte	0x95
 1944 04b1 05       		.uleb128 0x5
 1945 04b2 03       		.byte	0x3
 1946 04b3 00000000 		.4byte	flag_rx
 1947 04b7 1A       		.uleb128 0x1a
 1948 04b8 42000000 		.4byte	.LASF72
 1949 04bc 05       		.byte	0x5
 1950 04bd 1D       		.byte	0x1d
 1951 04be 95000000 		.4byte	0x95
 1952 04c2 05       		.uleb128 0x5
 1953 04c3 03       		.byte	0x3
 1954 04c4 00000000 		.4byte	flag_packet
 1955 04c8 1A       		.uleb128 0x1a
 1956 04c9 FD020000 		.4byte	.LASF73
 1957 04cd 05       		.byte	0x5
 1958 04ce 1E       		.byte	0x1e
 1959 04cf 95000000 		.4byte	0x95
 1960 04d3 05       		.uleb128 0x5
 1961 04d4 03       		.byte	0x3
 1962 04d5 00000000 		.4byte	flag_KB_string
 1963 04d9 1A       		.uleb128 0x1a
 1964 04da A1020000 		.4byte	.LASF74
 1965 04de 05       		.byte	0x5
 1966 04df 20       		.byte	0x20
 1967 04e0 95000000 		.4byte	0x95
 1968 04e4 05       		.uleb128 0x5
 1969 04e5 03       		.byte	0x3
 1970 04e6 00000000 		.4byte	dataready_flag
 1971 04ea 1A       		.uleb128 0x1a
 1972 04eb 93040000 		.4byte	.LASF75
 1973 04ef 05       		.byte	0x5
 1974 04f0 22       		.byte	0x22
 1975 04f1 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 42


 1976 04f5 05       		.uleb128 0x5
 1977 04f6 03       		.byte	0x3
 1978 04f7 00000000 		.4byte	flag_rf_transmission_active
 1979 04fb 1A       		.uleb128 0x1a
 1980 04fc 55040000 		.4byte	.LASF76
 1981 0500 05       		.byte	0x5
 1982 0501 24       		.byte	0x24
 1983 0502 95000000 		.4byte	0x95
 1984 0506 05       		.uleb128 0x5
 1985 0507 03       		.byte	0x3
 1986 0508 00000000 		.4byte	flag_receive_ADC
 1987 050c 1A       		.uleb128 0x1a
 1988 050d DB020000 		.4byte	.LASF77
 1989 0511 05       		.byte	0x5
 1990 0512 25       		.byte	0x25
 1991 0513 C5000000 		.4byte	0xc5
 1992 0517 05       		.uleb128 0x5
 1993 0518 03       		.byte	0x3
 1994 0519 00000000 		.4byte	adc_result
 1995 051d 1A       		.uleb128 0x1a
 1996 051e D2000000 		.4byte	.LASF78
 1997 0522 05       		.byte	0x5
 1998 0523 27       		.byte	0x27
 1999 0524 95000000 		.4byte	0x95
 2000 0528 05       		.uleb128 0x5
 2001 0529 03       		.byte	0x3
 2002 052a 00000000 		.4byte	direction
 2003 052e 1A       		.uleb128 0x1a
 2004 052f 12040000 		.4byte	.LASF79
 2005 0533 05       		.byte	0x5
 2006 0534 2B       		.byte	0x2b
 2007 0535 95000000 		.4byte	0x95
 2008 0539 05       		.uleb128 0x5
 2009 053a 03       		.byte	0x3
 2010 053b 00000000 		.4byte	flag_calc_wheelspeed
 2011 053f 1A       		.uleb128 0x1a
 2012 0540 DF030000 		.4byte	.LASF80
 2013 0544 05       		.byte	0x5
 2014 0545 2C       		.byte	0x2c
 2015 0546 C5000000 		.4byte	0xc5
 2016 054a 05       		.uleb128 0x5
 2017 054b 03       		.byte	0x3
 2018 054c 00000000 		.4byte	quad_count1
 2019 0550 1A       		.uleb128 0x1a
 2020 0551 B0000000 		.4byte	.LASF81
 2021 0555 05       		.byte	0x5
 2022 0556 2D       		.byte	0x2d
 2023 0557 C5000000 		.4byte	0xc5
 2024 055b 05       		.uleb128 0x5
 2025 055c 03       		.byte	0x3
 2026 055d 00000000 		.4byte	quad_count2
 2027 0561 1A       		.uleb128 0x1a
 2028 0562 E1000000 		.4byte	.LASF82
 2029 0566 05       		.byte	0x5
 2030 0567 2F       		.byte	0x2f
 2031 0568 C5000000 		.4byte	0xc5
 2032 056c 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 43


 2033 056d 03       		.byte	0x3
 2034 056e 00000000 		.4byte	left_duty_cycle
 2035 0572 1A       		.uleb128 0x1a
 2036 0573 2D010000 		.4byte	.LASF83
 2037 0577 05       		.byte	0x5
 2038 0578 30       		.byte	0x30
 2039 0579 C5000000 		.4byte	0xc5
 2040 057d 05       		.uleb128 0x5
 2041 057e 03       		.byte	0x3
 2042 057f 00000000 		.4byte	right_duty_cycle
 2043 0583 1A       		.uleb128 0x1a
 2044 0584 19000000 		.4byte	.LASF84
 2045 0588 05       		.byte	0x5
 2046 0589 33       		.byte	0x33
 2047 058a C5000000 		.4byte	0xc5
 2048 058e 05       		.uleb128 0x5
 2049 058f 03       		.byte	0x3
 2050 0590 00000000 		.4byte	leftSpeedLimit
 2051 0594 1A       		.uleb128 0x1a
 2052 0595 28000000 		.4byte	.LASF85
 2053 0599 05       		.byte	0x5
 2054 059a 34       		.byte	0x34
 2055 059b C5000000 		.4byte	0xc5
 2056 059f 05       		.uleb128 0x5
 2057 05a0 03       		.byte	0x3
 2058 05a1 00000000 		.4byte	rightSpeedLimit
 2059 05a5 1A       		.uleb128 0x1a
 2060 05a6 54030000 		.4byte	.LASF86
 2061 05aa 05       		.byte	0x5
 2062 05ab 37       		.byte	0x37
 2063 05ac 95000000 		.4byte	0x95
 2064 05b0 05       		.uleb128 0x5
 2065 05b1 03       		.byte	0x3
 2066 05b2 00000000 		.4byte	brakeFlag
 2067 05b6 1A       		.uleb128 0x1a
 2068 05b7 F1000000 		.4byte	.LASF87
 2069 05bb 05       		.byte	0x5
 2070 05bc 38       		.byte	0x38
 2071 05bd 95000000 		.4byte	0x95
 2072 05c1 05       		.uleb128 0x5
 2073 05c2 03       		.byte	0x3
 2074 05c3 00000000 		.4byte	portOpen
 2075 05c7 1A       		.uleb128 0x1a
 2076 05c8 CA030000 		.4byte	.LASF88
 2077 05cc 05       		.byte	0x5
 2078 05cd 3B       		.byte	0x3b
 2079 05ce BC020000 		.4byte	0x2bc
 2080 05d2 05       		.uleb128 0x5
 2081 05d3 03       		.byte	0x3
 2082 05d4 00000000 		.4byte	displaystring
 2083 05d8 1A       		.uleb128 0x1a
 2084 05d9 3E010000 		.4byte	.LASF89
 2085 05dd 05       		.byte	0x5
 2086 05de 3C       		.byte	0x3c
 2087 05df BC020000 		.4byte	0x2bc
 2088 05e3 05       		.uleb128 0x5
 2089 05e4 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 44


 2090 05e5 00000000 		.4byte	line
 2091 05e9 1A       		.uleb128 0x1a
 2092 05ea 5E020000 		.4byte	.LASF90
 2093 05ee 05       		.byte	0x5
 2094 05ef 3C       		.byte	0x3c
 2095 05f0 BC020000 		.4byte	0x2bc
 2096 05f4 05       		.uleb128 0x5
 2097 05f5 03       		.byte	0x3
 2098 05f6 00000000 		.4byte	entry
 2099 05fa 0F       		.uleb128 0xf
 2100 05fb 95000000 		.4byte	0x95
 2101 05ff 0A060000 		.4byte	0x60a
 2102 0603 10       		.uleb128 0x10
 2103 0604 76000000 		.4byte	0x76
 2104 0608 3F       		.byte	0x3f
 2105 0609 00       		.byte	0
 2106 060a 1A       		.uleb128 0x1a
 2107 060b C8000000 		.4byte	.LASF91
 2108 060f 05       		.byte	0x5
 2109 0610 3D       		.byte	0x3d
 2110 0611 FA050000 		.4byte	0x5fa
 2111 0615 05       		.uleb128 0x5
 2112 0616 03       		.byte	0x3
 2113 0617 00000000 		.4byte	usbBuffer
 2114 061b 1A       		.uleb128 0x1a
 2115 061c 88000000 		.4byte	.LASF92
 2116 0620 05       		.byte	0x5
 2117 0621 52       		.byte	0x52
 2118 0622 DF000000 		.4byte	0xdf
 2119 0626 05       		.uleb128 0x5
 2120 0627 03       		.byte	0x3
 2121 0628 00000000 		.4byte	system_state
 2122 062c 00       		.byte	0
 2123              		.section	.debug_abbrev,"",%progbits
 2124              	.Ldebug_abbrev0:
 2125 0000 01       		.uleb128 0x1
 2126 0001 11       		.uleb128 0x11
 2127 0002 01       		.byte	0x1
 2128 0003 25       		.uleb128 0x25
 2129 0004 0E       		.uleb128 0xe
 2130 0005 13       		.uleb128 0x13
 2131 0006 0B       		.uleb128 0xb
 2132 0007 03       		.uleb128 0x3
 2133 0008 0E       		.uleb128 0xe
 2134 0009 1B       		.uleb128 0x1b
 2135 000a 0E       		.uleb128 0xe
 2136 000b 55       		.uleb128 0x55
 2137 000c 17       		.uleb128 0x17
 2138 000d 11       		.uleb128 0x11
 2139 000e 01       		.uleb128 0x1
 2140 000f 10       		.uleb128 0x10
 2141 0010 17       		.uleb128 0x17
 2142 0011 00       		.byte	0
 2143 0012 00       		.byte	0
 2144 0013 02       		.uleb128 0x2
 2145 0014 24       		.uleb128 0x24
 2146 0015 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 45


 2147 0016 0B       		.uleb128 0xb
 2148 0017 0B       		.uleb128 0xb
 2149 0018 3E       		.uleb128 0x3e
 2150 0019 0B       		.uleb128 0xb
 2151 001a 03       		.uleb128 0x3
 2152 001b 0E       		.uleb128 0xe
 2153 001c 00       		.byte	0
 2154 001d 00       		.byte	0
 2155 001e 03       		.uleb128 0x3
 2156 001f 16       		.uleb128 0x16
 2157 0020 00       		.byte	0
 2158 0021 03       		.uleb128 0x3
 2159 0022 0E       		.uleb128 0xe
 2160 0023 3A       		.uleb128 0x3a
 2161 0024 0B       		.uleb128 0xb
 2162 0025 3B       		.uleb128 0x3b
 2163 0026 0B       		.uleb128 0xb
 2164 0027 49       		.uleb128 0x49
 2165 0028 13       		.uleb128 0x13
 2166 0029 00       		.byte	0
 2167 002a 00       		.byte	0
 2168 002b 04       		.uleb128 0x4
 2169 002c 24       		.uleb128 0x24
 2170 002d 00       		.byte	0
 2171 002e 0B       		.uleb128 0xb
 2172 002f 0B       		.uleb128 0xb
 2173 0030 3E       		.uleb128 0x3e
 2174 0031 0B       		.uleb128 0xb
 2175 0032 03       		.uleb128 0x3
 2176 0033 08       		.uleb128 0x8
 2177 0034 00       		.byte	0
 2178 0035 00       		.byte	0
 2179 0036 05       		.uleb128 0x5
 2180 0037 0F       		.uleb128 0xf
 2181 0038 00       		.byte	0
 2182 0039 0B       		.uleb128 0xb
 2183 003a 0B       		.uleb128 0xb
 2184 003b 49       		.uleb128 0x49
 2185 003c 13       		.uleb128 0x13
 2186 003d 00       		.byte	0
 2187 003e 00       		.byte	0
 2188 003f 06       		.uleb128 0x6
 2189 0040 16       		.uleb128 0x16
 2190 0041 00       		.byte	0
 2191 0042 03       		.uleb128 0x3
 2192 0043 0E       		.uleb128 0xe
 2193 0044 3A       		.uleb128 0x3a
 2194 0045 0B       		.uleb128 0xb
 2195 0046 3B       		.uleb128 0x3b
 2196 0047 05       		.uleb128 0x5
 2197 0048 49       		.uleb128 0x49
 2198 0049 13       		.uleb128 0x13
 2199 004a 00       		.byte	0
 2200 004b 00       		.byte	0
 2201 004c 07       		.uleb128 0x7
 2202 004d 13       		.uleb128 0x13
 2203 004e 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 46


 2204 004f 03       		.uleb128 0x3
 2205 0050 0E       		.uleb128 0xe
 2206 0051 0B       		.uleb128 0xb
 2207 0052 0B       		.uleb128 0xb
 2208 0053 3A       		.uleb128 0x3a
 2209 0054 0B       		.uleb128 0xb
 2210 0055 3B       		.uleb128 0x3b
 2211 0056 0B       		.uleb128 0xb
 2212 0057 01       		.uleb128 0x1
 2213 0058 13       		.uleb128 0x13
 2214 0059 00       		.byte	0
 2215 005a 00       		.byte	0
 2216 005b 08       		.uleb128 0x8
 2217 005c 0D       		.uleb128 0xd
 2218 005d 00       		.byte	0
 2219 005e 03       		.uleb128 0x3
 2220 005f 0E       		.uleb128 0xe
 2221 0060 3A       		.uleb128 0x3a
 2222 0061 0B       		.uleb128 0xb
 2223 0062 3B       		.uleb128 0x3b
 2224 0063 0B       		.uleb128 0xb
 2225 0064 49       		.uleb128 0x49
 2226 0065 13       		.uleb128 0x13
 2227 0066 38       		.uleb128 0x38
 2228 0067 0B       		.uleb128 0xb
 2229 0068 00       		.byte	0
 2230 0069 00       		.byte	0
 2231 006a 09       		.uleb128 0x9
 2232 006b 2E       		.uleb128 0x2e
 2233 006c 01       		.byte	0x1
 2234 006d 3F       		.uleb128 0x3f
 2235 006e 19       		.uleb128 0x19
 2236 006f 03       		.uleb128 0x3
 2237 0070 0E       		.uleb128 0xe
 2238 0071 3A       		.uleb128 0x3a
 2239 0072 0B       		.uleb128 0xb
 2240 0073 3B       		.uleb128 0x3b
 2241 0074 0B       		.uleb128 0xb
 2242 0075 27       		.uleb128 0x27
 2243 0076 19       		.uleb128 0x19
 2244 0077 11       		.uleb128 0x11
 2245 0078 01       		.uleb128 0x1
 2246 0079 12       		.uleb128 0x12
 2247 007a 06       		.uleb128 0x6
 2248 007b 40       		.uleb128 0x40
 2249 007c 18       		.uleb128 0x18
 2250 007d 9742     		.uleb128 0x2117
 2251 007f 19       		.uleb128 0x19
 2252 0080 01       		.uleb128 0x1
 2253 0081 13       		.uleb128 0x13
 2254 0082 00       		.byte	0
 2255 0083 00       		.byte	0
 2256 0084 0A       		.uleb128 0xa
 2257 0085 05       		.uleb128 0x5
 2258 0086 00       		.byte	0
 2259 0087 03       		.uleb128 0x3
 2260 0088 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 47


 2261 0089 3A       		.uleb128 0x3a
 2262 008a 0B       		.uleb128 0xb
 2263 008b 3B       		.uleb128 0x3b
 2264 008c 0B       		.uleb128 0xb
 2265 008d 49       		.uleb128 0x49
 2266 008e 13       		.uleb128 0x13
 2267 008f 02       		.uleb128 0x2
 2268 0090 18       		.uleb128 0x18
 2269 0091 00       		.byte	0
 2270 0092 00       		.byte	0
 2271 0093 0B       		.uleb128 0xb
 2272 0094 2E       		.uleb128 0x2e
 2273 0095 00       		.byte	0
 2274 0096 3F       		.uleb128 0x3f
 2275 0097 19       		.uleb128 0x19
 2276 0098 03       		.uleb128 0x3
 2277 0099 0E       		.uleb128 0xe
 2278 009a 3A       		.uleb128 0x3a
 2279 009b 0B       		.uleb128 0xb
 2280 009c 3B       		.uleb128 0x3b
 2281 009d 0B       		.uleb128 0xb
 2282 009e 11       		.uleb128 0x11
 2283 009f 01       		.uleb128 0x1
 2284 00a0 12       		.uleb128 0x12
 2285 00a1 06       		.uleb128 0x6
 2286 00a2 40       		.uleb128 0x40
 2287 00a3 18       		.uleb128 0x18
 2288 00a4 9642     		.uleb128 0x2116
 2289 00a6 19       		.uleb128 0x19
 2290 00a7 00       		.byte	0
 2291 00a8 00       		.byte	0
 2292 00a9 0C       		.uleb128 0xc
 2293 00aa 2E       		.uleb128 0x2e
 2294 00ab 00       		.byte	0
 2295 00ac 3F       		.uleb128 0x3f
 2296 00ad 19       		.uleb128 0x19
 2297 00ae 03       		.uleb128 0x3
 2298 00af 0E       		.uleb128 0xe
 2299 00b0 3A       		.uleb128 0x3a
 2300 00b1 0B       		.uleb128 0xb
 2301 00b2 3B       		.uleb128 0x3b
 2302 00b3 0B       		.uleb128 0xb
 2303 00b4 27       		.uleb128 0x27
 2304 00b5 19       		.uleb128 0x19
 2305 00b6 11       		.uleb128 0x11
 2306 00b7 01       		.uleb128 0x1
 2307 00b8 12       		.uleb128 0x12
 2308 00b9 06       		.uleb128 0x6
 2309 00ba 40       		.uleb128 0x40
 2310 00bb 18       		.uleb128 0x18
 2311 00bc 9642     		.uleb128 0x2116
 2312 00be 19       		.uleb128 0x19
 2313 00bf 00       		.byte	0
 2314 00c0 00       		.byte	0
 2315 00c1 0D       		.uleb128 0xd
 2316 00c2 2E       		.uleb128 0x2e
 2317 00c3 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 48


 2318 00c4 3F       		.uleb128 0x3f
 2319 00c5 19       		.uleb128 0x19
 2320 00c6 03       		.uleb128 0x3
 2321 00c7 0E       		.uleb128 0xe
 2322 00c8 3A       		.uleb128 0x3a
 2323 00c9 0B       		.uleb128 0xb
 2324 00ca 3B       		.uleb128 0x3b
 2325 00cb 0B       		.uleb128 0xb
 2326 00cc 11       		.uleb128 0x11
 2327 00cd 01       		.uleb128 0x1
 2328 00ce 12       		.uleb128 0x12
 2329 00cf 06       		.uleb128 0x6
 2330 00d0 40       		.uleb128 0x40
 2331 00d1 18       		.uleb128 0x18
 2332 00d2 9642     		.uleb128 0x2116
 2333 00d4 19       		.uleb128 0x19
 2334 00d5 01       		.uleb128 0x1
 2335 00d6 13       		.uleb128 0x13
 2336 00d7 00       		.byte	0
 2337 00d8 00       		.byte	0
 2338 00d9 0E       		.uleb128 0xe
 2339 00da 34       		.uleb128 0x34
 2340 00db 00       		.byte	0
 2341 00dc 03       		.uleb128 0x3
 2342 00dd 0E       		.uleb128 0xe
 2343 00de 3A       		.uleb128 0x3a
 2344 00df 0B       		.uleb128 0xb
 2345 00e0 3B       		.uleb128 0x3b
 2346 00e1 0B       		.uleb128 0xb
 2347 00e2 49       		.uleb128 0x49
 2348 00e3 13       		.uleb128 0x13
 2349 00e4 02       		.uleb128 0x2
 2350 00e5 18       		.uleb128 0x18
 2351 00e6 00       		.byte	0
 2352 00e7 00       		.byte	0
 2353 00e8 0F       		.uleb128 0xf
 2354 00e9 01       		.uleb128 0x1
 2355 00ea 01       		.byte	0x1
 2356 00eb 49       		.uleb128 0x49
 2357 00ec 13       		.uleb128 0x13
 2358 00ed 01       		.uleb128 0x1
 2359 00ee 13       		.uleb128 0x13
 2360 00ef 00       		.byte	0
 2361 00f0 00       		.byte	0
 2362 00f1 10       		.uleb128 0x10
 2363 00f2 21       		.uleb128 0x21
 2364 00f3 00       		.byte	0
 2365 00f4 49       		.uleb128 0x49
 2366 00f5 13       		.uleb128 0x13
 2367 00f6 2F       		.uleb128 0x2f
 2368 00f7 0B       		.uleb128 0xb
 2369 00f8 00       		.byte	0
 2370 00f9 00       		.byte	0
 2371 00fa 11       		.uleb128 0x11
 2372 00fb 0B       		.uleb128 0xb
 2373 00fc 01       		.byte	0x1
 2374 00fd 11       		.uleb128 0x11
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 49


 2375 00fe 01       		.uleb128 0x1
 2376 00ff 12       		.uleb128 0x12
 2377 0100 06       		.uleb128 0x6
 2378 0101 00       		.byte	0
 2379 0102 00       		.byte	0
 2380 0103 12       		.uleb128 0x12
 2381 0104 2E       		.uleb128 0x2e
 2382 0105 00       		.byte	0
 2383 0106 3F       		.uleb128 0x3f
 2384 0107 19       		.uleb128 0x19
 2385 0108 03       		.uleb128 0x3
 2386 0109 0E       		.uleb128 0xe
 2387 010a 3A       		.uleb128 0x3a
 2388 010b 0B       		.uleb128 0xb
 2389 010c 3B       		.uleb128 0x3b
 2390 010d 0B       		.uleb128 0xb
 2391 010e 49       		.uleb128 0x49
 2392 010f 13       		.uleb128 0x13
 2393 0110 11       		.uleb128 0x11
 2394 0111 01       		.uleb128 0x1
 2395 0112 12       		.uleb128 0x12
 2396 0113 06       		.uleb128 0x6
 2397 0114 40       		.uleb128 0x40
 2398 0115 18       		.uleb128 0x18
 2399 0116 9642     		.uleb128 0x2116
 2400 0118 19       		.uleb128 0x19
 2401 0119 00       		.byte	0
 2402 011a 00       		.byte	0
 2403 011b 13       		.uleb128 0x13
 2404 011c 2E       		.uleb128 0x2e
 2405 011d 01       		.byte	0x1
 2406 011e 3F       		.uleb128 0x3f
 2407 011f 19       		.uleb128 0x19
 2408 0120 03       		.uleb128 0x3
 2409 0121 0E       		.uleb128 0xe
 2410 0122 3A       		.uleb128 0x3a
 2411 0123 0B       		.uleb128 0xb
 2412 0124 3B       		.uleb128 0x3b
 2413 0125 05       		.uleb128 0x5
 2414 0126 27       		.uleb128 0x27
 2415 0127 19       		.uleb128 0x19
 2416 0128 11       		.uleb128 0x11
 2417 0129 01       		.uleb128 0x1
 2418 012a 12       		.uleb128 0x12
 2419 012b 06       		.uleb128 0x6
 2420 012c 40       		.uleb128 0x40
 2421 012d 18       		.uleb128 0x18
 2422 012e 9642     		.uleb128 0x2116
 2423 0130 19       		.uleb128 0x19
 2424 0131 01       		.uleb128 0x1
 2425 0132 13       		.uleb128 0x13
 2426 0133 00       		.byte	0
 2427 0134 00       		.byte	0
 2428 0135 14       		.uleb128 0x14
 2429 0136 05       		.uleb128 0x5
 2430 0137 00       		.byte	0
 2431 0138 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 50


 2432 0139 08       		.uleb128 0x8
 2433 013a 3A       		.uleb128 0x3a
 2434 013b 0B       		.uleb128 0xb
 2435 013c 3B       		.uleb128 0x3b
 2436 013d 05       		.uleb128 0x5
 2437 013e 49       		.uleb128 0x49
 2438 013f 13       		.uleb128 0x13
 2439 0140 02       		.uleb128 0x2
 2440 0141 18       		.uleb128 0x18
 2441 0142 00       		.byte	0
 2442 0143 00       		.byte	0
 2443 0144 15       		.uleb128 0x15
 2444 0145 34       		.uleb128 0x34
 2445 0146 00       		.byte	0
 2446 0147 03       		.uleb128 0x3
 2447 0148 08       		.uleb128 0x8
 2448 0149 3A       		.uleb128 0x3a
 2449 014a 0B       		.uleb128 0xb
 2450 014b 3B       		.uleb128 0x3b
 2451 014c 05       		.uleb128 0x5
 2452 014d 49       		.uleb128 0x49
 2453 014e 13       		.uleb128 0x13
 2454 014f 02       		.uleb128 0x2
 2455 0150 18       		.uleb128 0x18
 2456 0151 00       		.byte	0
 2457 0152 00       		.byte	0
 2458 0153 16       		.uleb128 0x16
 2459 0154 2E       		.uleb128 0x2e
 2460 0155 01       		.byte	0x1
 2461 0156 3F       		.uleb128 0x3f
 2462 0157 19       		.uleb128 0x19
 2463 0158 03       		.uleb128 0x3
 2464 0159 0E       		.uleb128 0xe
 2465 015a 3A       		.uleb128 0x3a
 2466 015b 0B       		.uleb128 0xb
 2467 015c 3B       		.uleb128 0x3b
 2468 015d 05       		.uleb128 0x5
 2469 015e 11       		.uleb128 0x11
 2470 015f 01       		.uleb128 0x1
 2471 0160 12       		.uleb128 0x12
 2472 0161 06       		.uleb128 0x6
 2473 0162 40       		.uleb128 0x40
 2474 0163 18       		.uleb128 0x18
 2475 0164 9642     		.uleb128 0x2116
 2476 0166 19       		.uleb128 0x19
 2477 0167 01       		.uleb128 0x1
 2478 0168 13       		.uleb128 0x13
 2479 0169 00       		.byte	0
 2480 016a 00       		.byte	0
 2481 016b 17       		.uleb128 0x17
 2482 016c 34       		.uleb128 0x34
 2483 016d 00       		.byte	0
 2484 016e 03       		.uleb128 0x3
 2485 016f 0E       		.uleb128 0xe
 2486 0170 3A       		.uleb128 0x3a
 2487 0171 0B       		.uleb128 0xb
 2488 0172 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 51


 2489 0173 05       		.uleb128 0x5
 2490 0174 49       		.uleb128 0x49
 2491 0175 13       		.uleb128 0x13
 2492 0176 3F       		.uleb128 0x3f
 2493 0177 19       		.uleb128 0x19
 2494 0178 3C       		.uleb128 0x3c
 2495 0179 19       		.uleb128 0x19
 2496 017a 00       		.byte	0
 2497 017b 00       		.byte	0
 2498 017c 18       		.uleb128 0x18
 2499 017d 35       		.uleb128 0x35
 2500 017e 00       		.byte	0
 2501 017f 49       		.uleb128 0x49
 2502 0180 13       		.uleb128 0x13
 2503 0181 00       		.byte	0
 2504 0182 00       		.byte	0
 2505 0183 19       		.uleb128 0x19
 2506 0184 34       		.uleb128 0x34
 2507 0185 00       		.byte	0
 2508 0186 03       		.uleb128 0x3
 2509 0187 08       		.uleb128 0x8
 2510 0188 3A       		.uleb128 0x3a
 2511 0189 0B       		.uleb128 0xb
 2512 018a 3B       		.uleb128 0x3b
 2513 018b 0B       		.uleb128 0xb
 2514 018c 49       		.uleb128 0x49
 2515 018d 13       		.uleb128 0x13
 2516 018e 3F       		.uleb128 0x3f
 2517 018f 19       		.uleb128 0x19
 2518 0190 02       		.uleb128 0x2
 2519 0191 18       		.uleb128 0x18
 2520 0192 00       		.byte	0
 2521 0193 00       		.byte	0
 2522 0194 1A       		.uleb128 0x1a
 2523 0195 34       		.uleb128 0x34
 2524 0196 00       		.byte	0
 2525 0197 03       		.uleb128 0x3
 2526 0198 0E       		.uleb128 0xe
 2527 0199 3A       		.uleb128 0x3a
 2528 019a 0B       		.uleb128 0xb
 2529 019b 3B       		.uleb128 0x3b
 2530 019c 0B       		.uleb128 0xb
 2531 019d 49       		.uleb128 0x49
 2532 019e 13       		.uleb128 0x13
 2533 019f 3F       		.uleb128 0x3f
 2534 01a0 19       		.uleb128 0x19
 2535 01a1 02       		.uleb128 0x2
 2536 01a2 18       		.uleb128 0x18
 2537 01a3 00       		.byte	0
 2538 01a4 00       		.byte	0
 2539 01a5 00       		.byte	0
 2540              		.section	.debug_aranges,"",%progbits
 2541 0000 84000000 		.4byte	0x84
 2542 0004 0200     		.2byte	0x2
 2543 0006 00000000 		.4byte	.Ldebug_info0
 2544 000a 04       		.byte	0x4
 2545 000b 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 52


 2546 000c 0000     		.2byte	0
 2547 000e 0000     		.2byte	0
 2548 0010 00000000 		.4byte	.LFB63
 2549 0014 2C000000 		.4byte	.LFE63-.LFB63
 2550 0018 00000000 		.4byte	.LFB64
 2551 001c 30000000 		.4byte	.LFE64-.LFB64
 2552 0020 00000000 		.4byte	.LFB65
 2553 0024 20000000 		.4byte	.LFE65-.LFB65
 2554 0028 00000000 		.4byte	.LFB66
 2555 002c 3C000000 		.4byte	.LFE66-.LFB66
 2556 0030 00000000 		.4byte	.LFB67
 2557 0034 0A000000 		.4byte	.LFE67-.LFB67
 2558 0038 00000000 		.4byte	.LFB68
 2559 003c 0E000000 		.4byte	.LFE68-.LFB68
 2560 0040 00000000 		.4byte	.LFB69
 2561 0044 0A000000 		.4byte	.LFE69-.LFB69
 2562 0048 00000000 		.4byte	.LFB70
 2563 004c 60020000 		.4byte	.LFE70-.LFB70
 2564 0050 00000000 		.4byte	.LFB71
 2565 0054 84000000 		.4byte	.LFE71-.LFB71
 2566 0058 00000000 		.4byte	.LFB72
 2567 005c F4000000 		.4byte	.LFE72-.LFB72
 2568 0060 00000000 		.4byte	.LFB73
 2569 0064 7C000000 		.4byte	.LFE73-.LFB73
 2570 0068 00000000 		.4byte	.LFB74
 2571 006c 68000000 		.4byte	.LFE74-.LFB74
 2572 0070 00000000 		.4byte	.LFB75
 2573 0074 50000000 		.4byte	.LFE75-.LFB75
 2574 0078 00000000 		.4byte	.LFB76
 2575 007c 3A000000 		.4byte	.LFE76-.LFB76
 2576 0080 00000000 		.4byte	0
 2577 0084 00000000 		.4byte	0
 2578              		.section	.debug_ranges,"",%progbits
 2579              	.Ldebug_ranges0:
 2580 0000 00000000 		.4byte	.LFB63
 2581 0004 2C000000 		.4byte	.LFE63
 2582 0008 00000000 		.4byte	.LFB64
 2583 000c 30000000 		.4byte	.LFE64
 2584 0010 00000000 		.4byte	.LFB65
 2585 0014 20000000 		.4byte	.LFE65
 2586 0018 00000000 		.4byte	.LFB66
 2587 001c 3C000000 		.4byte	.LFE66
 2588 0020 00000000 		.4byte	.LFB67
 2589 0024 0A000000 		.4byte	.LFE67
 2590 0028 00000000 		.4byte	.LFB68
 2591 002c 0E000000 		.4byte	.LFE68
 2592 0030 00000000 		.4byte	.LFB69
 2593 0034 0A000000 		.4byte	.LFE69
 2594 0038 00000000 		.4byte	.LFB70
 2595 003c 60020000 		.4byte	.LFE70
 2596 0040 00000000 		.4byte	.LFB71
 2597 0044 84000000 		.4byte	.LFE71
 2598 0048 00000000 		.4byte	.LFB72
 2599 004c F4000000 		.4byte	.LFE72
 2600 0050 00000000 		.4byte	.LFB73
 2601 0054 7C000000 		.4byte	.LFE73
 2602 0058 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 53


 2603 005c 68000000 		.4byte	.LFE74
 2604 0060 00000000 		.4byte	.LFB75
 2605 0064 50000000 		.4byte	.LFE75
 2606 0068 00000000 		.4byte	.LFB76
 2607 006c 3A000000 		.4byte	.LFE76
 2608 0070 00000000 		.4byte	0
 2609 0074 00000000 		.4byte	0
 2610              		.section	.debug_line,"",%progbits
 2611              	.Ldebug_line0:
 2612 0000 48030000 		.section	.debug_str,"MS",%progbits,1
 2612      02005501 
 2612      00000201 
 2612      FB0E0D00 
 2612      01010101 
 2613              	.LASF60:
 2614 0000 75736250 		.ascii	"usbPutChar\000"
 2614      75744368 
 2614      617200
 2615              	.LASF53:
 2616 000b 636F6E76 		.ascii	"converted_val\000"
 2616      65727465 
 2616      645F7661 
 2616      6C00
 2617              	.LASF84:
 2618 0019 6C656674 		.ascii	"leftSpeedLimit\000"
 2618      53706565 
 2618      644C696D 
 2618      697400
 2619              	.LASF85:
 2620 0028 72696768 		.ascii	"rightSpeedLimit\000"
 2620      74537065 
 2620      65644C69 
 2620      6D697400 
 2621              	.LASF55:
 2622 0038 6379636C 		.ascii	"cycle_PWM\000"
 2622      655F5057 
 2622      4D00
 2623              	.LASF72:
 2624 0042 666C6167 		.ascii	"flag_packet\000"
 2624      5F706163 
 2624      6B657400 
 2625              	.LASF41:
 2626 004e 53746F70 		.ascii	"Stop_on_line\000"
 2626      5F6F6E5F 
 2626      6C696E65 
 2626      00
 2627              	.LASF43:
 2628 005b 6973725F 		.ascii	"isr_adcTimer\000"
 2628      61646354 
 2628      696D6572 
 2628      00
 2629              	.LASF69:
 2630 0068 666C6167 		.ascii	"flag_ts_speed\000"
 2630      5F74735F 
 2630      73706565 
 2630      6400
 2631              	.LASF33:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 54


 2632 0076 67325F78 		.ascii	"g2_xpos\000"
 2632      706F7300 
 2633              	.LASF2:
 2634 007e 73686F72 		.ascii	"short int\000"
 2634      7420696E 
 2634      7400
 2635              	.LASF92:
 2636 0088 73797374 		.ascii	"system_state\000"
 2636      656D5F73 
 2636      74617465 
 2636      00
 2637              	.LASF9:
 2638 0095 73697A65 		.ascii	"sizetype\000"
 2638      74797065 
 2638      00
 2639              	.LASF50:
 2640 009e 51756164 		.ascii	"Quad_Dec_response\000"
 2640      5F446563 
 2640      5F726573 
 2640      706F6E73 
 2640      6500
 2641              	.LASF81:
 2642 00b0 71756164 		.ascii	"quad_count2\000"
 2642      5F636F75 
 2642      6E743200 
 2643              	.LASF44:
 2644 00bc 77686565 		.ascii	"wheel_1_str\000"
 2644      6C5F315F 
 2644      73747200 
 2645              	.LASF91:
 2646 00c8 75736242 		.ascii	"usbBuffer\000"
 2646      75666665 
 2646      7200
 2647              	.LASF78:
 2648 00d2 64697265 		.ascii	"direction\000"
 2648      6374696F 
 2648      6E00
 2649              	.LASF57:
 2650 00dc 6D61696E 		.ascii	"main\000"
 2650      00
 2651              	.LASF82:
 2652 00e1 6C656674 		.ascii	"left_duty_cycle\000"
 2652      5F647574 
 2652      795F6379 
 2652      636C6500 
 2653              	.LASF87:
 2654 00f1 706F7274 		.ascii	"portOpen\000"
 2654      4F70656E 
 2654      00
 2655              	.LASF40:
 2656 00fa 6973725F 		.ascii	"isr_quad1\000"
 2656      71756164 
 2656      3100
 2657              	.LASF51:
 2658 0104 7072696E 		.ascii	"print_ADC\000"
 2658      745F4144 
 2658      4300
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 55


 2659              	.LASF21:
 2660 010e 696E6465 		.ascii	"index\000"
 2660      7800
 2661              	.LASF17:
 2662 0114 696E7431 		.ascii	"int16\000"
 2662      3600
 2663              	.LASF13:
 2664 011a 75696E74 		.ascii	"uint8\000"
 2664      3800
 2665              	.LASF32:
 2666 0120 67315F64 		.ascii	"g1_direction\000"
 2666      69726563 
 2666      74696F6E 
 2666      00
 2667              	.LASF83:
 2668 012d 72696768 		.ascii	"right_duty_cycle\000"
 2668      745F6475 
 2668      74795F63 
 2668      79636C65 
 2668      00
 2669              	.LASF89:
 2670 013e 6C696E65 		.ascii	"line\000"
 2670      00
 2671              	.LASF61:
 2672 0143 75617274 		.ascii	"uart_set_PWM\000"
 2672      5F736574 
 2672      5F50574D 
 2672      00
 2673              	.LASF48:
 2674 0150 6C656674 		.ascii	"left_direction\000"
 2674      5F646972 
 2674      65637469 
 2674      6F6E00
 2675              	.LASF18:
 2676 015f 666C6F61 		.ascii	"float\000"
 2676      7400
 2677              	.LASF6:
 2678 0165 6C6F6E67 		.ascii	"long long int\000"
 2678      206C6F6E 
 2678      6720696E 
 2678      7400
 2679              	.LASF59:
 2680 0173 75736250 		.ascii	"usbPutString\000"
 2680      75745374 
 2680      72696E67 
 2680      00
 2681              	.LASF16:
 2682 0180 696E7438 		.ascii	"int8\000"
 2682      00
 2683              	.LASF68:
 2684 0185 666C6167 		.ascii	"flag_ts_update\000"
 2684      5F74735F 
 2684      75706461 
 2684      746500
 2685              	.LASF34:
 2686 0194 67325F79 		.ascii	"g2_ypos\000"
 2686      706F7300 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 56


 2687              	.LASF28:
 2688 019c 67305F64 		.ascii	"g0_direction\000"
 2688      69726563 
 2688      74696F6E 
 2688      00
 2689              	.LASF25:
 2690 01a9 67305F78 		.ascii	"g0_xpos\000"
 2690      706F7300 
 2691              	.LASF93:
 2692 01b1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2692      4320342E 
 2692      392E3320 
 2692      32303135 
 2692      30333033 
 2693 01e4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2693      20726576 
 2693      6973696F 
 2693      6E203232 
 2693      31323230 
 2694 0217 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2694      66756E63 
 2694      74696F6E 
 2694      2D736563 
 2694      74696F6E 
 2695              	.LASF42:
 2696 023f 62757474 		.ascii	"button\000"
 2696      6F6E00
 2697              	.LASF70:
 2698 0246 666C6167 		.ascii	"flag_ts_display\000"
 2698      5F74735F 
 2698      64697370 
 2698      6C617900 
 2699              	.LASF71:
 2700 0256 666C6167 		.ascii	"flag_rx\000"
 2700      5F727800 
 2701              	.LASF90:
 2702 025e 656E7472 		.ascii	"entry\000"
 2702      7900
 2703              	.LASF45:
 2704 0264 77686565 		.ascii	"wheel_2_str\000"
 2704      6C5F325F 
 2704      73747200 
 2705              	.LASF94:
 2706 0270 2E5C6D61 		.ascii	".\\main.c\000"
 2706      696E2E63 
 2706      00
 2707              	.LASF37:
 2708 0279 72696768 		.ascii	"right\000"
 2708      7400
 2709              	.LASF1:
 2710 027f 756E7369 		.ascii	"unsigned char\000"
 2710      676E6564 
 2710      20636861 
 2710      7200
 2711              	.LASF27:
 2712 028d 67305F73 		.ascii	"g0_speed\000"
 2712      70656564 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 57


 2712      00
 2713              	.LASF97:
 2714 0296 6272616B 		.ascii	"brakeMotor\000"
 2714      654D6F74 
 2714      6F7200
 2715              	.LASF74:
 2716 02a1 64617461 		.ascii	"dataready_flag\000"
 2716      72656164 
 2716      795F666C 
 2716      616700
 2717              	.LASF0:
 2718 02b0 7369676E 		.ascii	"signed char\000"
 2718      65642063 
 2718      68617200 
 2719              	.LASF12:
 2720 02bc 696E7433 		.ascii	"int32_t\000"
 2720      325F7400 
 2721              	.LASF7:
 2722 02c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2722      206C6F6E 
 2722      6720756E 
 2722      7369676E 
 2722      65642069 
 2723              	.LASF77:
 2724 02db 6164635F 		.ascii	"adc_result\000"
 2724      72657375 
 2724      6C7400
 2725              	.LASF8:
 2726 02e6 756E7369 		.ascii	"unsigned int\000"
 2726      676E6564 
 2726      20696E74 
 2726      00
 2727              	.LASF46:
 2728 02f3 6C656674 		.ascii	"leftSpeed\000"
 2728      53706565 
 2728      6400
 2729              	.LASF73:
 2730 02fd 666C6167 		.ascii	"flag_KB_string\000"
 2730      5F4B425F 
 2730      73747269 
 2730      6E6700
 2731              	.LASF95:
 2732 030c 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 2732      70315C43 
 2732      53333031 
 2732      2D546561 
 2732      6D2D5265 
 2733              	.LASF56:
 2734 0335 666C7563 		.ascii	"fluct\000"
 2734      7400
 2735              	.LASF35:
 2736 033b 67325F73 		.ascii	"g2_speed\000"
 2736      70656564 
 2736      00
 2737              	.LASF49:
 2738 0344 72696768 		.ascii	"right_direction\000"
 2738      745F6469 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 58


 2738      72656374 
 2738      696F6E00 
 2739              	.LASF86:
 2740 0354 6272616B 		.ascii	"brakeFlag\000"
 2740      65466C61 
 2740      6700
 2741              	.LASF29:
 2742 035e 67315F78 		.ascii	"g1_xpos\000"
 2742      706F7300 
 2743              	.LASF3:
 2744 0366 73686F72 		.ascii	"short unsigned int\000"
 2744      7420756E 
 2744      7369676E 
 2744      65642069 
 2744      6E7400
 2745              	.LASF47:
 2746 0379 72696768 		.ascii	"rightSpeed\000"
 2746      74537065 
 2746      656400
 2747              	.LASF96:
 2748 0384 64617461 		.ascii	"data_main\000"
 2748      5F6D6169 
 2748      6E00
 2749              	.LASF10:
 2750 038e 63686172 		.ascii	"char\000"
 2750      00
 2751              	.LASF4:
 2752 0393 6C6F6E67 		.ascii	"long int\000"
 2752      20696E74 
 2752      00
 2753              	.LASF22:
 2754 039c 726F626F 		.ascii	"robot_xpos\000"
 2754      745F7870 
 2754      6F7300
 2755              	.LASF38:
 2756 03a7 6C656674 		.ascii	"left\000"
 2756      00
 2757              	.LASF30:
 2758 03ac 67315F79 		.ascii	"g1_ypos\000"
 2758      706F7300 
 2759              	.LASF36:
 2760 03b4 67325F64 		.ascii	"g2_direction\000"
 2760      69726563 
 2760      74696F6E 
 2760      00
 2761              	.LASF31:
 2762 03c1 67315F73 		.ascii	"g1_speed\000"
 2762      70656564 
 2762      00
 2763              	.LASF88:
 2764 03ca 64697370 		.ascii	"displaystring\000"
 2764      6C617973 
 2764      7472696E 
 2764      6700
 2765              	.LASF14:
 2766 03d8 75696E74 		.ascii	"uint16\000"
 2766      313600
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 59


 2767              	.LASF80:
 2768 03df 71756164 		.ascii	"quad_count1\000"
 2768      5F636F75 
 2768      6E743100 
 2769              	.LASF52:
 2770 03eb 7363616C 		.ascii	"scalingFactor\000"
 2770      696E6746 
 2770      6163746F 
 2770      7200
 2771              	.LASF15:
 2772 03f9 75696E74 		.ascii	"uint32\000"
 2772      333200
 2773              	.LASF5:
 2774 0400 6C6F6E67 		.ascii	"long unsigned int\000"
 2774      20756E73 
 2774      69676E65 
 2774      6420696E 
 2774      7400
 2775              	.LASF79:
 2776 0412 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 2776      5F63616C 
 2776      635F7768 
 2776      65656C73 
 2776      70656564 
 2777              	.LASF19:
 2778 0427 646F7562 		.ascii	"double\000"
 2778      6C6500
 2779              	.LASF39:
 2780 042e 6164635F 		.ascii	"adc_isr\000"
 2780      69737200 
 2781              	.LASF58:
 2782 0436 73657453 		.ascii	"setSpeed\000"
 2782      70656564 
 2782      00
 2783              	.LASF67:
 2784 043f 666C6167 		.ascii	"flag_ts_enc\000"
 2784      5F74735F 
 2784      656E6300 
 2785              	.LASF11:
 2786 044b 5F5F696E 		.ascii	"__int32_t\000"
 2786      7433325F 
 2786      7400
 2787              	.LASF76:
 2788 0455 666C6167 		.ascii	"flag_receive_ADC\000"
 2788      5F726563 
 2788      65697665 
 2788      5F414443 
 2788      00
 2789              	.LASF26:
 2790 0466 67305F79 		.ascii	"g0_ypos\000"
 2790      706F7300 
 2791              	.LASF66:
 2792 046e 74735F64 		.ascii	"ts_display\000"
 2792      6973706C 
 2792      617900
 2793              	.LASF65:
 2794 0479 74735F73 		.ascii	"ts_speed\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccP9nuwE.s 			page 60


 2794      70656564 
 2794      00
 2795              	.LASF63:
 2796 0482 74735F65 		.ascii	"ts_enc\000"
 2796      6E6300
 2797              	.LASF64:
 2798 0489 74735F75 		.ascii	"ts_update\000"
 2798      70646174 
 2798      6500
 2799              	.LASF75:
 2800 0493 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2800      5F72665F 
 2800      7472616E 
 2800      736D6973 
 2800      73696F6E 
 2801              	.LASF23:
 2802 04af 726F626F 		.ascii	"robot_ypos\000"
 2802      745F7970 
 2802      6F7300
 2803              	.LASF62:
 2804 04ba 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2804      52784275 
 2804      66666572 
 2804      00
 2805              	.LASF54:
 2806 04c7 72657375 		.ascii	"result_str\000"
 2806      6C745F73 
 2806      747200
 2807              	.LASF20:
 2808 04d2 72737369 		.ascii	"rssi\000"
 2808      00
 2809              	.LASF24:
 2810 04d7 726F626F 		.ascii	"robot_orientation\000"
 2810      745F6F72 
 2810      69656E74 
 2810      6174696F 
 2810      6E00
 2811              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
