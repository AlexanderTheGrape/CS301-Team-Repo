ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	movement_state
 204              		.type	movement_state, %object
 205              		.size	movement_state, 1
 206              	movement_state:
 207 0044 03       		.byte	3
 208              		.global	byteCount
 209 0045 000000   		.bss
 210              		.type	byteCount, %object
 211              		.size	byteCount, 1
 212              	byteCount:
 213 002c 00       		.space	1
 214              		.comm	packet,2,4
 215 002d 00       		.section	.text.handle_rx_binary,"ax",%progbits
 216              		.align	2
 217              		.global	handle_rx_binary
 218              		.thumb
 219              		.thumb_func
 220              		.type	handle_rx_binary, %function
 221              	handle_rx_binary:
 222              	.LFB63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 5


 223              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** 
  40:.\main.c      **** void handle_rx_binary()
  41:.\main.c      **** {
 224              		.loc 1 41 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 89B0     		sub	sp, sp, #36
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  42:.\main.c      ****     if(flag_rx == 1)
 236              		.loc 1 42 0
 237 0006 524B     		ldr	r3, .L21
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 6


 238 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 000a 012B     		cmp	r3, #1
 240 000c 40F09A80 		bne	.L1
 241              	.LBB2:
  43:.\main.c      ****     {    
  44:.\main.c      ****         flag_rx = 0;
 242              		.loc 1 44 0
 243 0010 4F4B     		ldr	r3, .L21
 244 0012 0022     		movs	r2, #0
 245 0014 1A70     		strb	r2, [r3]
  45:.\main.c      ****         
  46:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 246              		.loc 1 46 0
 247 0016 4F4B     		ldr	r3, .L21+4
 248 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 249 001a 1B02     		lsls	r3, r3, #8
 250 001c 9AB2     		uxth	r2, r3
 251 001e 4D4B     		ldr	r3, .L21+4
 252 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0022 9BB2     		uxth	r3, r3
 254 0024 1343     		orrs	r3, r3, r2
 255 0026 9BB2     		uxth	r3, r3
 256 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  47:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  48:.\main.c      ****         char byte_packet[12];
  49:.\main.c      ****         char string_packet[12];
  50:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  51:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  52:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  53:.\main.c      ****         //usbPutString(string_packet);
  54:.\main.c      ****        // usbPutString(string_packet);
  55:.\main.c      ****        // usbPutChar(' ');
  56:.\main.c      ****         
  57:.\main.c      ****         switch(byteCount)
 257              		.loc 1 57 0
 258 002a 4B4B     		ldr	r3, .L21+8
 259 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 002e 043B     		subs	r3, r3, #4
 261 0030 1E2B     		cmp	r3, #30
 262 0032 00F28780 		bhi	.L1
 263 0036 01A2     		adr	r2, .L5
 264 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265              		.p2align 2
 266              	.L5:
 267 003c B9000000 		.word	.L4+1
 268 0040 45010000 		.word	.L1+1
 269 0044 CD000000 		.word	.L6+1
 270 0048 45010000 		.word	.L1+1
 271 004c D5000000 		.word	.L7+1
 272 0050 45010000 		.word	.L1+1
 273 0054 DD000000 		.word	.L8+1
 274 0058 45010000 		.word	.L1+1
 275 005c E5000000 		.word	.L9+1
 276 0060 45010000 		.word	.L1+1
 277 0064 ED000000 		.word	.L10+1
 278 0068 45010000 		.word	.L1+1
 279 006c F5000000 		.word	.L11+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 7


 280 0070 45010000 		.word	.L1+1
 281 0074 FD000000 		.word	.L12+1
 282 0078 45010000 		.word	.L1+1
 283 007c 05010000 		.word	.L13+1
 284 0080 45010000 		.word	.L1+1
 285 0084 0D010000 		.word	.L14+1
 286 0088 45010000 		.word	.L1+1
 287 008c 15010000 		.word	.L15+1
 288 0090 45010000 		.word	.L1+1
 289 0094 1D010000 		.word	.L16+1
 290 0098 45010000 		.word	.L1+1
 291 009c 25010000 		.word	.L17+1
 292 00a0 45010000 		.word	.L1+1
 293 00a4 2D010000 		.word	.L18+1
 294 00a8 45010000 		.word	.L1+1
 295 00ac 35010000 		.word	.L19+1
 296 00b0 45010000 		.word	.L1+1
 297 00b4 3D010000 		.word	.L20+1
 298              		.p2align 1
 299              	.L4:
  58:.\main.c      ****         {
  59:.\main.c      ****             case 4:
  60:.\main.c      ****                 //usbPutString("RSSI:");
  61:.\main.c      ****                 //usbPutString(byte_packet);
  62:.\main.c      ****                 //usbPutString("\r\n");
  63:.\main.c      ****                 buffer_state.rssi = packet[0];
 300              		.loc 1 63 0
 301 00b8 264B     		ldr	r3, .L21+4
 302 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00bc DAB2     		uxtb	r2, r3
 304 00be 274B     		ldr	r3, .L21+12
 305 00c0 1A70     		strb	r2, [r3]
  64:.\main.c      ****                 buffer_state.index = packet[1];
 306              		.loc 1 64 0
 307 00c2 244B     		ldr	r3, .L21+4
 308 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 309 00c6 254B     		ldr	r3, .L21+12
 310 00c8 5A70     		strb	r2, [r3, #1]
  65:.\main.c      ****             break;
 311              		.loc 1 65 0
 312 00ca 3BE0     		b	.L1
 313              	.L6:
  66:.\main.c      ****             case 6:
  67:.\main.c      ****                 //usbPutString("robot_x:");
  68:.\main.c      ****                 //usbPutString(string_packet);
  69:.\main.c      ****                 //usbPutString("\r\n");
  70:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 314              		.loc 1 70 0
 315 00cc FA8B     		ldrh	r2, [r7, #30]
 316 00ce 234B     		ldr	r3, .L21+12
 317 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  71:.\main.c      ****             break;
 318              		.loc 1 71 0
 319 00d2 37E0     		b	.L1
 320              	.L7:
  72:.\main.c      ****             case 8:
  73:.\main.c      ****                 //usbPutString("robot_y:");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 8


  74:.\main.c      ****                 //usbPutString(string_packet);
  75:.\main.c      ****                 //usbPutString("\r\n");
  76:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 321              		.loc 1 76 0
 322 00d4 FA8B     		ldrh	r2, [r7, #30]
 323 00d6 214B     		ldr	r3, .L21+12
 324 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  77:.\main.c      ****             break;
 325              		.loc 1 77 0
 326 00da 33E0     		b	.L1
 327              	.L8:
  78:.\main.c      ****             case 10:
  79:.\main.c      ****                 //usbPutString("robot_dir:");
  80:.\main.c      ****                 //usbPutString(string_packet);
  81:.\main.c      ****                 //usbPutString("\r\n");
  82:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 328              		.loc 1 82 0
 329 00dc FA8B     		ldrh	r2, [r7, #30]
 330 00de 1F4B     		ldr	r3, .L21+12
 331 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  83:.\main.c      ****             break;
 332              		.loc 1 83 0
 333 00e2 2FE0     		b	.L1
 334              	.L9:
  84:.\main.c      ****             case 12:
  85:.\main.c      ****                 //usbPutString("g0_x:");
  86:.\main.c      ****                 //usbPutString(string_packet);
  87:.\main.c      ****                 //usbPutString("\r\n");
  88:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 335              		.loc 1 88 0
 336 00e4 FA8B     		ldrh	r2, [r7, #30]
 337 00e6 1D4B     		ldr	r3, .L21+12
 338 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  89:.\main.c      ****             break;
 339              		.loc 1 89 0
 340 00ea 2BE0     		b	.L1
 341              	.L10:
  90:.\main.c      ****             case 14:
  91:.\main.c      ****                 //usbPutString("g0_y:");
  92:.\main.c      ****                 //usbPutString(string_packet);
  93:.\main.c      ****                 //usbPutString("\r\n");
  94:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 342              		.loc 1 94 0
 343 00ec FA8B     		ldrh	r2, [r7, #30]
 344 00ee 1B4B     		ldr	r3, .L21+12
 345 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  95:.\main.c      ****             break;
 346              		.loc 1 95 0
 347 00f2 27E0     		b	.L1
 348              	.L11:
  96:.\main.c      ****             case 16:
  97:.\main.c      ****                 //usbPutString("g0_speed:");
  98:.\main.c      ****                 //usbPutString(string_packet);
  99:.\main.c      ****                 //usbPutString("\r\n");
 100:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 349              		.loc 1 100 0
 350 00f4 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 9


 351 00f6 194B     		ldr	r3, .L21+12
 352 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 101:.\main.c      ****             break;
 353              		.loc 1 101 0
 354 00fa 23E0     		b	.L1
 355              	.L12:
 102:.\main.c      ****             case 18:
 103:.\main.c      ****                 //usbPutString("g1_dir:");
 104:.\main.c      ****                 //usbPutString(string_packet);
 105:.\main.c      ****                 //usbPutString("\r\n");
 106:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 356              		.loc 1 106 0
 357 00fc FA8B     		ldrh	r2, [r7, #30]
 358 00fe 174B     		ldr	r3, .L21+12
 359 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 107:.\main.c      ****             break;
 360              		.loc 1 107 0
 361 0102 1FE0     		b	.L1
 362              	.L13:
 108:.\main.c      ****             case 20:
 109:.\main.c      ****                 //usbPutString("g1_x:");
 110:.\main.c      ****                 //usbPutString(string_packet);
 111:.\main.c      ****                 //usbPutString("\r\n");
 112:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 363              		.loc 1 112 0
 364 0104 FA8B     		ldrh	r2, [r7, #30]
 365 0106 154B     		ldr	r3, .L21+12
 366 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 113:.\main.c      ****             break;
 367              		.loc 1 113 0
 368 010a 1BE0     		b	.L1
 369              	.L14:
 114:.\main.c      ****             case 22:
 115:.\main.c      ****                 //usbPutString("g1_y:");
 116:.\main.c      ****                 //usbPutString(string_packet);
 117:.\main.c      ****                 //usbPutString("\r\n");
 118:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 370              		.loc 1 118 0
 371 010c FA8B     		ldrh	r2, [r7, #30]
 372 010e 134B     		ldr	r3, .L21+12
 373 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 119:.\main.c      ****             break;
 374              		.loc 1 119 0
 375 0112 17E0     		b	.L1
 376              	.L15:
 120:.\main.c      ****             case 24:
 121:.\main.c      ****                 //usbPutString("g1_speed:");
 122:.\main.c      ****                 //usbPutString(string_packet);
 123:.\main.c      ****                 //usbPutString("\r\n");
 124:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 377              		.loc 1 124 0
 378 0114 FA8B     		ldrh	r2, [r7, #30]
 379 0116 114B     		ldr	r3, .L21+12
 380 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 125:.\main.c      ****             break;
 381              		.loc 1 125 0
 382 011a 13E0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 10


 383              	.L16:
 126:.\main.c      ****             case 26:
 127:.\main.c      ****                 //usbPutString("g1_dir:");
 128:.\main.c      ****                 //usbPutString(string_packet);
 129:.\main.c      ****                 //usbPutString("\r\n");
 130:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 384              		.loc 1 130 0
 385 011c FA8B     		ldrh	r2, [r7, #30]
 386 011e 0F4B     		ldr	r3, .L21+12
 387 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 131:.\main.c      ****             break;
 388              		.loc 1 131 0
 389 0122 0FE0     		b	.L1
 390              	.L17:
 132:.\main.c      ****             case 28:
 133:.\main.c      ****                 //usbPutString("g2_x:");
 134:.\main.c      ****                 //usbPutString(string_packet);
 135:.\main.c      ****                 //usbPutString("\r\n");
 136:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 391              		.loc 1 136 0
 392 0124 FA8B     		ldrh	r2, [r7, #30]
 393 0126 0D4B     		ldr	r3, .L21+12
 394 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 137:.\main.c      ****             break;
 395              		.loc 1 137 0
 396 012a 0BE0     		b	.L1
 397              	.L18:
 138:.\main.c      ****             case 30:
 139:.\main.c      ****                 //usbPutString("g2_y:");
 140:.\main.c      ****                 //usbPutString(string_packet);
 141:.\main.c      ****                 //usbPutString("\r\n");
 142:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 398              		.loc 1 142 0
 399 012c FA8B     		ldrh	r2, [r7, #30]
 400 012e 0B4B     		ldr	r3, .L21+12
 401 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 143:.\main.c      ****             break;
 402              		.loc 1 143 0
 403 0132 07E0     		b	.L1
 404              	.L19:
 144:.\main.c      ****             case 32:
 145:.\main.c      ****                 //usbPutString("g1_speed:");
 146:.\main.c      ****                 //usbPutString(string_packet);
 147:.\main.c      ****                 //usbPutString("\r\n");
 148:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 405              		.loc 1 148 0
 406 0134 FA8B     		ldrh	r2, [r7, #30]
 407 0136 094B     		ldr	r3, .L21+12
 408 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 149:.\main.c      ****             break;
 409              		.loc 1 149 0
 410 013a 03E0     		b	.L1
 411              	.L20:
 150:.\main.c      ****             case 34:
 151:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 412              		.loc 1 151 0
 413 013c FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 11


 414 013e 074B     		ldr	r3, .L21+12
 415 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 152:.\main.c      ****                 //usbPutString("g2_dir:");
 153:.\main.c      ****                 //usbPutString(string_packet);
 154:.\main.c      ****                 //usbPutString("\r\n");
 155:.\main.c      ****                 
 156:.\main.c      ****             break;
 416              		.loc 1 156 0
 417 0142 00BF     		nop
 418              	.L1:
 419              	.LBE2:
 157:.\main.c      ****         }
 158:.\main.c      ****     }
 159:.\main.c      **** }
 420              		.loc 1 159 0
 421 0144 2437     		adds	r7, r7, #36
 422              		.cfi_def_cfa_offset 4
 423 0146 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0148 5DF8047B 		ldr	r7, [sp], #4
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 014c 7047     		bx	lr
 430              	.L22:
 431 014e 00BF     		.align	2
 432              	.L21:
 433 0150 00000000 		.word	flag_rx
 434 0154 00000000 		.word	packet
 435 0158 00000000 		.word	byteCount
 436 015c 00000000 		.word	buffer_state
 437              		.cfi_endproc
 438              	.LFE63:
 439              		.size	handle_rx_binary, .-handle_rx_binary
 440              		.section	.text.setSpeed,"ax",%progbits
 441              		.align	2
 442              		.global	setSpeed
 443              		.thumb
 444              		.thumb_func
 445              		.type	setSpeed, %function
 446              	setSpeed:
 447              	.LFB64:
 160:.\main.c      **** 
 161:.\main.c      **** void setSpeed(int right, int left){
 448              		.loc 1 161 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 0002 83B0     		sub	sp, sp, #12
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 12


 461 0008 3960     		str	r1, [r7]
 162:.\main.c      ****     leftSpeedLimit = right;
 462              		.loc 1 162 0
 463 000a 7B68     		ldr	r3, [r7, #4]
 464 000c 9AB2     		uxth	r2, r3
 465 000e 054B     		ldr	r3, .L24
 466 0010 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****     rightSpeedLimit = left;
 467              		.loc 1 163 0
 468 0012 3B68     		ldr	r3, [r7]
 469 0014 9AB2     		uxth	r2, r3
 470 0016 044B     		ldr	r3, .L24+4
 471 0018 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      **** }
 472              		.loc 1 164 0
 473 001a 0C37     		adds	r7, r7, #12
 474              		.cfi_def_cfa_offset 4
 475 001c BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 001e 5DF8047B 		ldr	r7, [sp], #4
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 0022 7047     		bx	lr
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0024 00000000 		.word	leftSpeedLimit
 486 0028 00000000 		.word	rightSpeedLimit
 487              		.cfi_endproc
 488              	.LFE64:
 489              		.size	setSpeed, .-setSpeed
 490              		.section	.text.brakeMotor,"ax",%progbits
 491              		.align	2
 492              		.global	brakeMotor
 493              		.thumb
 494              		.thumb_func
 495              		.type	brakeMotor, %function
 496              	brakeMotor:
 497              	.LFB65:
 165:.\main.c      **** 
 166:.\main.c      **** void brakeMotor(){
 498              		.loc 1 166 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 167:.\main.c      ****     setSpeed(0, 0);
 508              		.loc 1 167 0
 509 0004 0020     		movs	r0, #0
 510 0006 0021     		movs	r1, #0
 511 0008 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 13


 168:.\main.c      ****     PWM_1_WriteCompare(0);
 512              		.loc 1 168 0
 513 000c 0020     		movs	r0, #0
 514 000e FFF7FEFF 		bl	PWM_1_WriteCompare
 169:.\main.c      ****     PWM_2_WriteCompare(0);
 515              		.loc 1 169 0
 516 0012 0020     		movs	r0, #0
 517 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 170:.\main.c      ****     right_duty_cycle = 0;
 518              		.loc 1 170 0
 519 0018 034B     		ldr	r3, .L27
 520 001a 0022     		movs	r2, #0
 521 001c 1A80     		strh	r2, [r3]	@ movhi
 171:.\main.c      ****     left_duty_cycle = 0;
 522              		.loc 1 171 0
 523 001e 034B     		ldr	r3, .L27+4
 524 0020 0022     		movs	r2, #0
 525 0022 1A80     		strh	r2, [r3]	@ movhi
 172:.\main.c      **** }
 526              		.loc 1 172 0
 527 0024 80BD     		pop	{r7, pc}
 528              	.L28:
 529 0026 00BF     		.align	2
 530              	.L27:
 531 0028 00000000 		.word	right_duty_cycle
 532 002c 00000000 		.word	left_duty_cycle
 533              		.cfi_endproc
 534              	.LFE65:
 535              		.size	brakeMotor, .-brakeMotor
 536              		.section	.text.driveForwards,"ax",%progbits
 537              		.align	2
 538              		.global	driveForwards
 539              		.thumb
 540              		.thumb_func
 541              		.type	driveForwards, %function
 542              	driveForwards:
 543              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** void driveForwards()
 175:.\main.c      **** {
 544              		.loc 1 175 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 176:.\main.c      ****     setSpeed(20, 20);
 554              		.loc 1 176 0
 555 0004 1420     		movs	r0, #20
 556 0006 1421     		movs	r1, #20
 557 0008 FFF7FEFF 		bl	setSpeed
 177:.\main.c      **** }
 558              		.loc 1 177 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 14


 559 000c 80BD     		pop	{r7, pc}
 560              		.cfi_endproc
 561              	.LFE66:
 562              		.size	driveForwards, .-driveForwards
 563 000e 00BF     		.section	.text.turnLeft,"ax",%progbits
 564              		.align	2
 565              		.global	turnLeft
 566              		.thumb
 567              		.thumb_func
 568              		.type	turnLeft, %function
 569              	turnLeft:
 570              	.LFB67:
 178:.\main.c      **** 
 179:.\main.c      **** void turnLeft()
 180:.\main.c      **** {
 571              		.loc 1 180 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 181:.\main.c      ****     setSpeed(0,20);
 581              		.loc 1 181 0
 582 0004 0020     		movs	r0, #0
 583 0006 1421     		movs	r1, #20
 584 0008 FFF7FEFF 		bl	setSpeed
 182:.\main.c      **** }
 585              		.loc 1 182 0
 586 000c 80BD     		pop	{r7, pc}
 587              		.cfi_endproc
 588              	.LFE67:
 589              		.size	turnLeft, .-turnLeft
 590 000e 00BF     		.section	.text.turnRight,"ax",%progbits
 591              		.align	2
 592              		.global	turnRight
 593              		.thumb
 594              		.thumb_func
 595              		.type	turnRight, %function
 596              	turnRight:
 597              	.LFB68:
 183:.\main.c      **** 
 184:.\main.c      **** void turnRight()
 185:.\main.c      **** {
 598              		.loc 1 185 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 15


 186:.\main.c      ****     setSpeed(20,0);
 608              		.loc 1 186 0
 609 0004 1420     		movs	r0, #20
 610 0006 0021     		movs	r1, #0
 611 0008 FFF7FEFF 		bl	setSpeed
 187:.\main.c      **** }
 612              		.loc 1 187 0
 613 000c 80BD     		pop	{r7, pc}
 614              		.cfi_endproc
 615              	.LFE68:
 616              		.size	turnRight, .-turnRight
 617 000e 00BF     		.section	.text.rxInt,"ax",%progbits
 618              		.align	2
 619              		.global	rxInt
 620              		.thumb
 621              		.thumb_func
 622              		.type	rxInt, %function
 623              	rxInt:
 624              	.LFB69:
 188:.\main.c      **** 
 189:.\main.c      **** 
 190:.\main.c      **** //Binary RF Data
 191:.\main.c      **** CY_ISR(rxInt){
 625              		.loc 1 191 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 8
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629 0000 B0B5     		push	{r4, r5, r7, lr}
 630              		.cfi_def_cfa_offset 16
 631              		.cfi_offset 4, -16
 632              		.cfi_offset 5, -12
 633              		.cfi_offset 7, -8
 634              		.cfi_offset 14, -4
 635 0002 82B0     		sub	sp, sp, #8
 636              		.cfi_def_cfa_offset 24
 637 0004 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 192:.\main.c      ****     char rf_char = UART_GetChar();
 639              		.loc 1 192 0
 640 0006 FFF7FEFF 		bl	UART_GetChar
 641 000a 0346     		mov	r3, r0
 642 000c FB71     		strb	r3, [r7, #7]
 193:.\main.c      ****     if(rf_char == SOP){
 643              		.loc 1 193 0
 644 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 645 0010 AA2B     		cmp	r3, #170
 646 0012 1CD1     		bne	.L33
 194:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 195:.\main.c      ****             if(byteCount == 34)
 647              		.loc 1 195 0
 648 0014 1B4B     		ldr	r3, .L37
 649 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 650 0018 222B     		cmp	r3, #34
 651 001a 11D1     		bne	.L34
 196:.\main.c      ****             {
 197:.\main.c      ****                 system_state = buffer_state;
 652              		.loc 1 197 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 16


 653 001c 1A4B     		ldr	r3, .L37+4
 654 001e 1B4A     		ldr	r2, .L37+8
 655 0020 1568     		ldr	r5, [r2]	@ unaligned
 656 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 657 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 658 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 659 0028 1D60     		str	r5, [r3]	@ unaligned
 660 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 661 002c 9860     		str	r0, [r3, #8]	@ unaligned
 662 002e D960     		str	r1, [r3, #12]	@ unaligned
 663 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 664 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 665 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 666 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 667 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 668 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 669 003c 9861     		str	r0, [r3, #24]	@ unaligned
 670 003e D961     		str	r1, [r3, #28]	@ unaligned
 671              	.L34:
 198:.\main.c      ****             }
 199:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 672              		.loc 1 199 0
 673 0040 104B     		ldr	r3, .L37
 674 0042 0222     		movs	r2, #2
 675 0044 1A70     		strb	r2, [r3]
 200:.\main.c      ****             flag_rx = 0;
 676              		.loc 1 200 0
 677 0046 124B     		ldr	r3, .L37+12
 678 0048 0022     		movs	r2, #0
 679 004a 1A70     		strb	r2, [r3]
 680 004c 16E0     		b	.L32
 681              	.L33:
 201:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 202:.\main.c      ****         }
 203:.\main.c      ****         else
 204:.\main.c      ****         {
 205:.\main.c      ****             packet[byteCount % 2] = rf_char;
 682              		.loc 1 205 0
 683 004e 0D4B     		ldr	r3, .L37
 684 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 685 0052 03F00103 		and	r3, r3, #1
 686 0056 0F49     		ldr	r1, .L37+16
 687 0058 FA79     		ldrb	r2, [r7, #7]
 688 005a CA54     		strb	r2, [r1, r3]
 206:.\main.c      ****            
 207:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 689              		.loc 1 207 0
 690 005c 094B     		ldr	r3, .L37
 691 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 692 0060 03F00103 		and	r3, r3, #1
 693 0064 DBB2     		uxtb	r3, r3
 694 0066 002B     		cmp	r3, #0
 695 0068 02D0     		beq	.L36
 208:.\main.c      ****             {
 209:.\main.c      ****                 flag_rx = 1;
 696              		.loc 1 209 0
 697 006a 094B     		ldr	r3, .L37+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 17


 698 006c 0122     		movs	r2, #1
 699 006e 1A70     		strb	r2, [r3]
 700              	.L36:
 210:.\main.c      ****             }
 211:.\main.c      ****             byteCount = (byteCount + 1);
 701              		.loc 1 211 0
 702 0070 044B     		ldr	r3, .L37
 703 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 704 0074 0133     		adds	r3, r3, #1
 705 0076 DAB2     		uxtb	r2, r3
 706 0078 024B     		ldr	r3, .L37
 707 007a 1A70     		strb	r2, [r3]
 708              	.L32:
 212:.\main.c      ****         }
 213:.\main.c      **** }
 709              		.loc 1 213 0
 710 007c 0837     		adds	r7, r7, #8
 711              		.cfi_def_cfa_offset 16
 712 007e BD46     		mov	sp, r7
 713              		.cfi_def_cfa_register 13
 714              		@ sp needed
 715 0080 B0BD     		pop	{r4, r5, r7, pc}
 716              	.L38:
 717 0082 00BF     		.align	2
 718              	.L37:
 719 0084 00000000 		.word	byteCount
 720 0088 00000000 		.word	system_state
 721 008c 00000000 		.word	buffer_state
 722 0090 00000000 		.word	flag_rx
 723 0094 00000000 		.word	packet
 724              		.cfi_endproc
 725              	.LFE69:
 726              		.size	rxInt, .-rxInt
 727              		.section	.text.BT_txInt,"ax",%progbits
 728              		.align	2
 729              		.global	BT_txInt
 730              		.thumb
 731              		.thumb_func
 732              		.type	BT_txInt, %function
 733              	BT_txInt:
 734              	.LFB70:
 214:.\main.c      **** 
 215:.\main.c      **** 
 216:.\main.c      **** //BT
 217:.\main.c      **** CY_ISR(BT_txInt)
 218:.\main.c      **** {
 735              		.loc 1 218 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739              		@ link register save eliminated.
 740 0000 80B4     		push	{r7}
 741              		.cfi_def_cfa_offset 4
 742              		.cfi_offset 7, -4
 743 0002 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
 219:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 18


 220:.\main.c      **** }
 745              		.loc 1 220 0
 746 0004 BD46     		mov	sp, r7
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 0006 5DF8047B 		ldr	r7, [sp], #4
 750              		.cfi_restore 7
 751              		.cfi_def_cfa_offset 0
 752 000a 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE70:
 755              		.size	BT_txInt, .-BT_txInt
 756              		.section	.text.adc_isr,"ax",%progbits
 757              		.align	2
 758              		.global	adc_isr
 759              		.thumb
 760              		.thumb_func
 761              		.type	adc_isr, %function
 762              	adc_isr:
 763              	.LFB71:
 221:.\main.c      **** 
 222:.\main.c      **** //ADC:
 223:.\main.c      **** CY_ISR (adc_isr)
 224:.\main.c      **** {
 764              		.loc 1 224 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 225:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 226:.\main.c      ****     adc_result = ADC_GetResult16();
 774              		.loc 1 226 0
 775 0004 FFF7FEFF 		bl	ADC_GetResult16
 776 0008 0346     		mov	r3, r0
 777 000a 1A46     		mov	r2, r3
 778 000c 044B     		ldr	r3, .L41
 779 000e 1A80     		strh	r2, [r3]	@ movhi
 227:.\main.c      ****     flag_receive_ADC = 1;
 780              		.loc 1 227 0
 781 0010 044B     		ldr	r3, .L41+4
 782 0012 0122     		movs	r2, #1
 783 0014 1A70     		strb	r2, [r3]
 228:.\main.c      ****     flag_print_rf = 1;
 784              		.loc 1 228 0
 785 0016 044B     		ldr	r3, .L41+8
 786 0018 0122     		movs	r2, #1
 787 001a 1A70     		strb	r2, [r3]
 229:.\main.c      ****     //LED_Write(~LED_Read());
 230:.\main.c      **** }
 788              		.loc 1 230 0
 789 001c 80BD     		pop	{r7, pc}
 790              	.L42:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 19


 791 001e 00BF     		.align	2
 792              	.L41:
 793 0020 00000000 		.word	adc_result
 794 0024 00000000 		.word	flag_receive_ADC
 795 0028 00000000 		.word	flag_print_rf
 796              		.cfi_endproc
 797              	.LFE71:
 798              		.size	adc_isr, .-adc_isr
 799              		.section	.text.isr_quad1,"ax",%progbits
 800              		.align	2
 801              		.global	isr_quad1
 802              		.thumb
 803              		.thumb_func
 804              		.type	isr_quad1, %function
 805              	isr_quad1:
 806              	.LFB72:
 231:.\main.c      **** 
 232:.\main.c      **** CY_ISR (isr_quad1)
 233:.\main.c      **** {
 807              		.loc 1 233 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 1, uses_anonymous_args = 0
 811 0000 80B5     		push	{r7, lr}
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815 0002 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 234:.\main.c      ****     //LED_Write(~LED_Read());
 235:.\main.c      ****     last_quad_count1 = quad_count1;
 817              		.loc 1 235 0
 818 0004 244B     		ldr	r3, .L45
 819 0006 1A88     		ldrh	r2, [r3]
 820 0008 244B     		ldr	r3, .L45+4
 821 000a 1A80     		strh	r2, [r3]	@ movhi
 236:.\main.c      ****     last_quad_count2 = quad_count2;
 822              		.loc 1 236 0
 823 000c 244B     		ldr	r3, .L45+8
 824 000e 1A88     		ldrh	r2, [r3]
 825 0010 244B     		ldr	r3, .L45+12
 826 0012 1A80     		strh	r2, [r3]	@ movhi
 237:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 827              		.loc 1 237 0
 828 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 829 0018 0346     		mov	r3, r0
 830 001a 1A46     		mov	r2, r3
 831 001c 1E4B     		ldr	r3, .L45
 832 001e 1A80     		strh	r2, [r3]	@ movhi
 238:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 833              		.loc 1 238 0
 834 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 835 0024 0346     		mov	r3, r0
 836 0026 1A46     		mov	r2, r3
 837 0028 1D4B     		ldr	r3, .L45+8
 838 002a 1A80     		strh	r2, [r3]	@ movhi
 239:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 20


 839              		.loc 1 239 0
 840 002c 1A4B     		ldr	r3, .L45
 841 002e 1B88     		ldrh	r3, [r3]
 842 0030 9AB2     		uxth	r2, r3
 843 0032 1A4B     		ldr	r3, .L45+4
 844 0034 1B88     		ldrh	r3, [r3]
 845 0036 9BB2     		uxth	r3, r3
 846 0038 D31A     		subs	r3, r2, r3
 847 003a 9BB2     		uxth	r3, r3
 848 003c 9AB2     		uxth	r2, r3
 849 003e 1A4B     		ldr	r3, .L45+16
 850 0040 1A80     		strh	r2, [r3]	@ movhi
 240:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 851              		.loc 1 240 0
 852 0042 174B     		ldr	r3, .L45+8
 853 0044 1B88     		ldrh	r3, [r3]
 854 0046 9AB2     		uxth	r2, r3
 855 0048 164B     		ldr	r3, .L45+12
 856 004a 1B88     		ldrh	r3, [r3]
 857 004c 9BB2     		uxth	r3, r3
 858 004e D31A     		subs	r3, r2, r3
 859 0050 9BB2     		uxth	r3, r3
 860 0052 9AB2     		uxth	r2, r3
 861 0054 154B     		ldr	r3, .L45+20
 862 0056 1A80     		strh	r2, [r3]	@ movhi
 241:.\main.c      ****     
 242:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 863              		.loc 1 242 0
 864 0058 0F4B     		ldr	r3, .L45
 865 005a 1B88     		ldrh	r3, [r3]
 866 005c 1BB2     		sxth	r3, r3
 867 005e 40F6B832 		movw	r2, #3000
 868 0062 9342     		cmp	r3, r2
 869 0064 13DD     		ble	.L44
 870              		.loc 1 242 0 is_stmt 0 discriminator 1
 871 0066 124B     		ldr	r3, .L45+24
 872 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 873 006a 012B     		cmp	r3, #1
 874 006c 0FD0     		beq	.L44
 875              		.loc 1 242 0 discriminator 2
 876 006e 104B     		ldr	r3, .L45+24
 877 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 878 0072 022B     		cmp	r3, #2
 879 0074 0BD0     		beq	.L44
 243:.\main.c      ****     {
 244:.\main.c      ****         QuadDec_M1_SetCounter(0);
 880              		.loc 1 244 0 is_stmt 1
 881 0076 0020     		movs	r0, #0
 882 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 245:.\main.c      ****         QuadDec_M2_SetCounter(0);
 883              		.loc 1 245 0
 884 007c 0020     		movs	r0, #0
 885 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 246:.\main.c      ****         quad_count1 = 0;
 886              		.loc 1 246 0
 887 0082 054B     		ldr	r3, .L45
 888 0084 0022     		movs	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 21


 889 0086 1A80     		strh	r2, [r3]	@ movhi
 247:.\main.c      ****         quad_count2 = 0;
 890              		.loc 1 247 0
 891 0088 054B     		ldr	r3, .L45+8
 892 008a 0022     		movs	r2, #0
 893 008c 1A80     		strh	r2, [r3]	@ movhi
 894              	.L44:
 248:.\main.c      ****     }
 249:.\main.c      **** 
 250:.\main.c      ****     flag_calc_wheelspeed = 1;
 895              		.loc 1 250 0
 896 008e 094B     		ldr	r3, .L45+28
 897 0090 0122     		movs	r2, #1
 898 0092 1A70     		strb	r2, [r3]
 251:.\main.c      **** }
 899              		.loc 1 251 0
 900 0094 80BD     		pop	{r7, pc}
 901              	.L46:
 902 0096 00BF     		.align	2
 903              	.L45:
 904 0098 00000000 		.word	quad_count1
 905 009c 00000000 		.word	last_quad_count1
 906 00a0 00000000 		.word	quad_count2
 907 00a4 00000000 		.word	last_quad_count2
 908 00a8 00000000 		.word	quad_diff1
 909 00ac 00000000 		.word	quad_diff2
 910 00b0 00000000 		.word	movement_state
 911 00b4 00000000 		.word	flag_calc_wheelspeed
 912              		.cfi_endproc
 913              	.LFE72:
 914              		.size	isr_quad1, .-isr_quad1
 915              		.section	.text.isr_turn_timer,"ax",%progbits
 916              		.align	2
 917              		.global	isr_turn_timer
 918              		.thumb
 919              		.thumb_func
 920              		.type	isr_turn_timer, %function
 921              	isr_turn_timer:
 922              	.LFB73:
 252:.\main.c      **** 
 253:.\main.c      **** CY_ISR(isr_turn_timer)
 254:.\main.c      **** {
 923              		.loc 1 254 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927 0000 80B5     		push	{r7, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 7, -8
 930              		.cfi_offset 14, -4
 931 0002 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 255:.\main.c      ****     if(movement_state == LTURN)
 933              		.loc 1 255 0
 934 0004 134B     		ldr	r3, .L51
 935 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 936 0008 012B     		cmp	r3, #1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 22


 937 000a 0FD1     		bne	.L48
 256:.\main.c      ****     {
 257:.\main.c      ****         if((QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 938              		.loc 1 257 0
 939 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 940 0010 0346     		mov	r3, r0
 941 0012 1A46     		mov	r2, r3
 942 0014 104B     		ldr	r3, .L51+4
 943 0016 1B88     		ldrh	r3, [r3]
 944 0018 1BB2     		sxth	r3, r3
 945 001a D31A     		subs	r3, r2, r3
 946 001c CF2B     		cmp	r3, #207
 947 001e 18DD     		ble	.L47
 258:.\main.c      ****         {
 259:.\main.c      ****             movement_state = STOPPED;
 948              		.loc 1 259 0
 949 0020 0C4B     		ldr	r3, .L51
 950 0022 0322     		movs	r2, #3
 951 0024 1A70     		strb	r2, [r3]
 260:.\main.c      ****             Timer_2_Stop();
 952              		.loc 1 260 0
 953 0026 FFF7FEFF 		bl	Timer_2_Stop
 954 002a 12E0     		b	.L47
 955              	.L48:
 261:.\main.c      ****         }
 262:.\main.c      ****     }
 263:.\main.c      ****     else if (movement_state == RTURN)
 956              		.loc 1 263 0
 957 002c 094B     		ldr	r3, .L51
 958 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 0030 022B     		cmp	r3, #2
 960 0032 0ED1     		bne	.L47
 264:.\main.c      ****     {
 265:.\main.c      ****         if((QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 961              		.loc 1 265 0
 962 0034 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 963 0038 0346     		mov	r3, r0
 964 003a 1A46     		mov	r2, r3
 965 003c 064B     		ldr	r3, .L51+4
 966 003e 1B88     		ldrh	r3, [r3]
 967 0040 1BB2     		sxth	r3, r3
 968 0042 D31A     		subs	r3, r2, r3
 969 0044 CF2B     		cmp	r3, #207
 970 0046 04DD     		ble	.L47
 266:.\main.c      ****         {
 267:.\main.c      ****             movement_state = STOPPED;
 971              		.loc 1 267 0
 972 0048 024B     		ldr	r3, .L51
 973 004a 0322     		movs	r2, #3
 974 004c 1A70     		strb	r2, [r3]
 268:.\main.c      ****             Timer_2_Stop();
 975              		.loc 1 268 0
 976 004e FFF7FEFF 		bl	Timer_2_Stop
 977              	.L47:
 269:.\main.c      ****         }
 270:.\main.c      ****     }
 271:.\main.c      **** }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 23


 978              		.loc 1 271 0
 979 0052 80BD     		pop	{r7, pc}
 980              	.L52:
 981              		.align	2
 982              	.L51:
 983 0054 00000000 		.word	movement_state
 984 0058 00000000 		.word	start_turn_count
 985              		.cfi_endproc
 986              	.LFE73:
 987              		.size	isr_turn_timer, .-isr_turn_timer
 988              		.section	.text.Stop_on_line,"ax",%progbits
 989              		.align	2
 990              		.global	Stop_on_line
 991              		.thumb
 992              		.thumb_func
 993              		.type	Stop_on_line, %function
 994              	Stop_on_line:
 995              	.LFB74:
 272:.\main.c      **** 
 273:.\main.c      **** 
 274:.\main.c      **** CY_ISR (Stop_on_line)
 275:.\main.c      **** {
 996              		.loc 1 275 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000 0000 80B5     		push	{r7, lr}
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 1004 0002 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 276:.\main.c      ****     //movement_state = STOPPED;
 277:.\main.c      ****     if(movement_state != DRIVE) return;
 1006              		.loc 1 277 0
 1007 0004 094B     		ldr	r3, .L56
 1008 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1009 0008 002B     		cmp	r3, #0
 1010 000a 00D0     		beq	.L54
 1011 000c 0CE0     		b	.L53
 1012              	.L54:
 278:.\main.c      ****     brakeMotor();
 1013              		.loc 1 278 0
 1014 000e FFF7FEFF 		bl	brakeMotor
 279:.\main.c      ****     movement_state = LTURN;
 1015              		.loc 1 279 0
 1016 0012 064B     		ldr	r3, .L56
 1017 0014 0122     		movs	r2, #1
 1018 0016 1A70     		strb	r2, [r3]
 280:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1019              		.loc 1 280 0
 1020 0018 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1021 001c 0346     		mov	r3, r0
 1022 001e 1A46     		mov	r2, r3
 1023 0020 034B     		ldr	r3, .L56+4
 1024 0022 1A80     		strh	r2, [r3]	@ movhi
 281:.\main.c      ****     Timer_2_Start();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 24


 1025              		.loc 1 281 0
 1026 0024 FFF7FEFF 		bl	Timer_2_Start
 1027              	.L53:
 282:.\main.c      **** }
 1028              		.loc 1 282 0
 1029 0028 80BD     		pop	{r7, pc}
 1030              	.L57:
 1031 002a 00BF     		.align	2
 1032              	.L56:
 1033 002c 00000000 		.word	movement_state
 1034 0030 00000000 		.word	start_turn_count
 1035              		.cfi_endproc
 1036              	.LFE74:
 1037              		.size	Stop_on_line, .-Stop_on_line
 1038              		.section	.rodata
 1039              		.align	2
 1040              	.LC0:
 1041 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1041      74696E67 
 1041      20726F62 
 1041      6F74210D 
 1041      0A00
 1042              		.section	.text.button,"ax",%progbits
 1043              		.align	2
 1044              		.global	button
 1045              		.thumb
 1046              		.thumb_func
 1047              		.type	button, %function
 1048              	button:
 1049              	.LFB75:
 283:.\main.c      **** 
 284:.\main.c      **** CY_ISR (button)
 285:.\main.c      **** {
 1050              		.loc 1 285 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 1, uses_anonymous_args = 0
 1054 0000 80B5     		push	{r7, lr}
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
 286:.\main.c      ****     if(BT_ENABLED)
 287:.\main.c      ****     {
 288:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1060              		.loc 1 288 0
 1061 0004 0348     		ldr	r0, .L59
 1062 0006 FFF7FEFF 		bl	UART_PutString
 289:.\main.c      ****     }
 290:.\main.c      ****     movement_state = DRIVE;
 1063              		.loc 1 290 0
 1064 000a 034B     		ldr	r3, .L59+4
 1065 000c 0022     		movs	r2, #0
 1066 000e 1A70     		strb	r2, [r3]
 291:.\main.c      **** }
 1067              		.loc 1 291 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 25


 1068 0010 80BD     		pop	{r7, pc}
 1069              	.L60:
 1070 0012 00BF     		.align	2
 1071              	.L59:
 1072 0014 00000000 		.word	.LC0
 1073 0018 00000000 		.word	movement_state
 1074              		.cfi_endproc
 1075              	.LFE75:
 1076              		.size	button, .-button
 1077              		.section	.text.isr_adcTimer,"ax",%progbits
 1078              		.align	2
 1079              		.global	isr_adcTimer
 1080              		.thumb
 1081              		.thumb_func
 1082              		.type	isr_adcTimer, %function
 1083              	isr_adcTimer:
 1084              	.LFB76:
 292:.\main.c      **** 
 293:.\main.c      **** CY_ISR(isr_adcTimer)
 294:.\main.c      **** {
 1085              		.loc 1 294 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 1, uses_anonymous_args = 0
 1089 0000 80B5     		push	{r7, lr}
 1090              		.cfi_def_cfa_offset 8
 1091              		.cfi_offset 7, -8
 1092              		.cfi_offset 14, -4
 1093 0002 00AF     		add	r7, sp, #0
 1094              		.cfi_def_cfa_register 7
 295:.\main.c      ****     ADC_StartConvert();
 1095              		.loc 1 295 0
 1096 0004 FFF7FEFF 		bl	ADC_StartConvert
 296:.\main.c      **** }
 1097              		.loc 1 296 0
 1098 0008 80BD     		pop	{r7, pc}
 1099              		.cfi_endproc
 1100              	.LFE76:
 1101              		.size	isr_adcTimer, .-isr_adcTimer
 1102 000a 00BF     		.section	.rodata
 1103 0012 0000     		.align	2
 1104              	.LC1:
 1105 0014 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
 1105      20636F75 
 1105      6E742031 
 1105      2069733A 
 1105      2025640A 
 1106 002a 0000     		.align	2
 1107              	.LC2:
 1108 002c 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 1108      20636F75 
 1108      6E742032 
 1108      2069733A 
 1108      2025640A 
 1109              		.global	__aeabi_i2d
 1110              		.global	__aeabi_dmul
 1111              		.global	__aeabi_d2iz
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 26


 1112              		.section	.text.Quad_Dec_response,"ax",%progbits
 1113              		.align	2
 1114              		.global	Quad_Dec_response
 1115              		.thumb
 1116              		.thumb_func
 1117              		.type	Quad_Dec_response, %function
 1118              	Quad_Dec_response:
 1119              	.LFB77:
 297:.\main.c      **** 
 298:.\main.c      **** void Quad_Dec_response()
 299:.\main.c      **** {
 1120              		.loc 1 299 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 144
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 0000 B0B5     		push	{r4, r5, r7, lr}
 1125              		.cfi_def_cfa_offset 16
 1126              		.cfi_offset 4, -16
 1127              		.cfi_offset 5, -12
 1128              		.cfi_offset 7, -8
 1129              		.cfi_offset 14, -4
 1130 0002 A4B0     		sub	sp, sp, #144
 1131              		.cfi_def_cfa_offset 160
 1132 0004 00AF     		add	r7, sp, #0
 1133              		.cfi_def_cfa_register 7
 300:.\main.c      ****     //Check if the flag has been set
 301:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1134              		.loc 1 301 0
 1135 0006 6B4B     		ldr	r3, .L69
 1136 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 000a 002B     		cmp	r3, #0
 1138 000c 00F0CE80 		beq	.L62
 302:.\main.c      ****     flag_calc_wheelspeed = 0;
 1139              		.loc 1 302 0
 1140 0010 684B     		ldr	r3, .L69
 1141 0012 0022     		movs	r2, #0
 1142 0014 1A70     		strb	r2, [r3]
 303:.\main.c      ****     
 304:.\main.c      ****     char wheel_1_str [64];
 305:.\main.c      ****     char wheel_2_str [64];
 306:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 1143              		.loc 1 306 0
 1144 0016 684B     		ldr	r3, .L69+4
 1145 0018 1B88     		ldrh	r3, [r3]
 1146 001a 1BB2     		sxth	r3, r3
 1147 001c 07F14402 		add	r2, r7, #68
 1148 0020 1046     		mov	r0, r2
 1149 0022 6649     		ldr	r1, .L69+8
 1150 0024 1A46     		mov	r2, r3
 1151 0026 FFF7FEFF 		bl	sprintf
 307:.\main.c      ****     //usbPutString(wheel_1_str);
 308:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 1152              		.loc 1 308 0
 1153 002a 654B     		ldr	r3, .L69+12
 1154 002c 1B88     		ldrh	r3, [r3]
 1155 002e 1BB2     		sxth	r3, r3
 1156 0030 3A1D     		adds	r2, r7, #4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 27


 1157 0032 1046     		mov	r0, r2
 1158 0034 6349     		ldr	r1, .L69+16
 1159 0036 1A46     		mov	r2, r3
 1160 0038 FFF7FEFF 		bl	sprintf
 309:.\main.c      ****     
 310:.\main.c      ****     //usbPutString(wheel_2_str);
 311:.\main.c      ****     
 312:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1161              		.loc 1 312 0
 1162 003c 5E4B     		ldr	r3, .L69+4
 1163 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1164 0040 A7F88E30 		strh	r3, [r7, #142]	@ movhi
 313:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1165              		.loc 1 313 0
 1166 0044 5E4B     		ldr	r3, .L69+12
 1167 0046 1B88     		ldrh	r3, [r3]	@ movhi
 1168 0048 A7F88C30 		strh	r3, [r7, #140]	@ movhi
 314:.\main.c      **** 
 315:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1169              		.loc 1 315 0
 1170 004c 5E4B     		ldr	r3, .L69+20
 1171 004e 1B88     		ldrh	r3, [r3]
 1172 0050 1AB2     		sxth	r2, r3
 1173 0052 B7F98E30 		ldrsh	r3, [r7, #142]
 1174 0056 002B     		cmp	r3, #0
 1175 0058 B8BF     		it	lt
 1176 005a 5B42     		rsblt	r3, r3, #0
 1177 005c D31A     		subs	r3, r2, r3
 1178 005e C7F88830 		str	r3, [r7, #136]
 316:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1179              		.loc 1 316 0
 1180 0062 D7F88830 		ldr	r3, [r7, #136]
 1181 0066 83EAE372 		eor	r2, r3, r3, asr #31
 1182 006a A2EBE372 		sub	r2, r2, r3, asr #31
 1183 006e D7F88830 		ldr	r3, [r7, #136]
 1184 0072 92FBF3F3 		sdiv	r3, r2, r3
 1185 0076 1846     		mov	r0, r3
 1186 0078 FFF7FEFF 		bl	__aeabi_i2d
 1187 007c 0446     		mov	r4, r0
 1188 007e 0D46     		mov	r5, r1
 1189 0080 D7F88830 		ldr	r3, [r7, #136]
 1190 0084 002B     		cmp	r3, #0
 1191 0086 B8BF     		it	lt
 1192 0088 5B42     		rsblt	r3, r3, #0
 1193 008a 1846     		mov	r0, r3
 1194 008c FFF7FEFF 		bl	__aeabi_i2d
 1195 0090 0246     		mov	r2, r0
 1196 0092 0B46     		mov	r3, r1
 1197 0094 1046     		mov	r0, r2
 1198 0096 1946     		mov	r1, r3
 1199 0098 FFF7FEFF 		bl	sqrt
 1200 009c 0246     		mov	r2, r0
 1201 009e 0B46     		mov	r3, r1
 1202 00a0 2046     		mov	r0, r4
 1203 00a2 2946     		mov	r1, r5
 1204 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1205 00a8 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 28


 1206 00aa 0B46     		mov	r3, r1
 1207 00ac 1046     		mov	r0, r2
 1208 00ae 1946     		mov	r1, r3
 1209 00b0 FFF7FEFF 		bl	__aeabi_d2iz
 1210 00b4 0346     		mov	r3, r0
 1211 00b6 C7F88430 		str	r3, [r7, #132]
 317:.\main.c      ****     left_duty_cycle = left_duty_cycle + nextSpeed;
 1212              		.loc 1 317 0
 1213 00ba D7F88430 		ldr	r3, [r7, #132]
 1214 00be 9AB2     		uxth	r2, r3
 1215 00c0 424B     		ldr	r3, .L69+24
 1216 00c2 1B88     		ldrh	r3, [r3]
 1217 00c4 9BB2     		uxth	r3, r3
 1218 00c6 1344     		add	r3, r3, r2
 1219 00c8 9BB2     		uxth	r3, r3
 1220 00ca 9AB2     		uxth	r2, r3
 1221 00cc 3F4B     		ldr	r3, .L69+24
 1222 00ce 1A80     		strh	r2, [r3]	@ movhi
 318:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 1223              		.loc 1 318 0
 1224 00d0 3F4B     		ldr	r3, .L69+28
 1225 00d2 1B88     		ldrh	r3, [r3]
 1226 00d4 1AB2     		sxth	r2, r3
 1227 00d6 B7F98C30 		ldrsh	r3, [r7, #140]
 1228 00da 002B     		cmp	r3, #0
 1229 00dc B8BF     		it	lt
 1230 00de 5B42     		rsblt	r3, r3, #0
 1231 00e0 D31A     		subs	r3, r2, r3
 1232 00e2 C7F88830 		str	r3, [r7, #136]
 319:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1233              		.loc 1 319 0
 1234 00e6 D7F88830 		ldr	r3, [r7, #136]
 1235 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 1236 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 1237 00f2 D7F88830 		ldr	r3, [r7, #136]
 1238 00f6 92FBF3F3 		sdiv	r3, r2, r3
 1239 00fa 1846     		mov	r0, r3
 1240 00fc FFF7FEFF 		bl	__aeabi_i2d
 1241 0100 0446     		mov	r4, r0
 1242 0102 0D46     		mov	r5, r1
 1243 0104 D7F88830 		ldr	r3, [r7, #136]
 1244 0108 002B     		cmp	r3, #0
 1245 010a B8BF     		it	lt
 1246 010c 5B42     		rsblt	r3, r3, #0
 1247 010e 1846     		mov	r0, r3
 1248 0110 FFF7FEFF 		bl	__aeabi_i2d
 1249 0114 0246     		mov	r2, r0
 1250 0116 0B46     		mov	r3, r1
 1251 0118 1046     		mov	r0, r2
 1252 011a 1946     		mov	r1, r3
 1253 011c FFF7FEFF 		bl	sqrt
 1254 0120 0246     		mov	r2, r0
 1255 0122 0B46     		mov	r3, r1
 1256 0124 2046     		mov	r0, r4
 1257 0126 2946     		mov	r1, r5
 1258 0128 FFF7FEFF 		bl	__aeabi_dmul
 1259 012c 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 29


 1260 012e 0B46     		mov	r3, r1
 1261 0130 1046     		mov	r0, r2
 1262 0132 1946     		mov	r1, r3
 1263 0134 FFF7FEFF 		bl	__aeabi_d2iz
 1264 0138 0346     		mov	r3, r0
 1265 013a C7F88430 		str	r3, [r7, #132]
 320:.\main.c      ****     right_duty_cycle = right_duty_cycle + nextSpeed;
 1266              		.loc 1 320 0
 1267 013e D7F88430 		ldr	r3, [r7, #132]
 1268 0142 9AB2     		uxth	r2, r3
 1269 0144 234B     		ldr	r3, .L69+32
 1270 0146 1B88     		ldrh	r3, [r3]
 1271 0148 9BB2     		uxth	r3, r3
 1272 014a 1344     		add	r3, r3, r2
 1273 014c 9BB2     		uxth	r3, r3
 1274 014e 9AB2     		uxth	r2, r3
 1275 0150 204B     		ldr	r3, .L69+32
 1276 0152 1A80     		strh	r2, [r3]	@ movhi
 321:.\main.c      ****     
 322:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1277              		.loc 1 322 0
 1278 0154 1F4B     		ldr	r3, .L69+32
 1279 0156 1B88     		ldrh	r3, [r3]
 1280 0158 1BB2     		sxth	r3, r3
 1281 015a 002B     		cmp	r3, #0
 1282 015c 02DA     		bge	.L65
 1283              		.loc 1 322 0 is_stmt 0 discriminator 1
 1284 015e 1D4B     		ldr	r3, .L69+32
 1285 0160 0022     		movs	r2, #0
 1286 0162 1A80     		strh	r2, [r3]	@ movhi
 1287              	.L65:
 323:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1288              		.loc 1 323 0 is_stmt 1
 1289 0164 194B     		ldr	r3, .L69+24
 1290 0166 1B88     		ldrh	r3, [r3]
 1291 0168 1BB2     		sxth	r3, r3
 1292 016a 002B     		cmp	r3, #0
 1293 016c 02DA     		bge	.L66
 1294              		.loc 1 323 0 is_stmt 0 discriminator 1
 1295 016e 174B     		ldr	r3, .L69+24
 1296 0170 0022     		movs	r2, #0
 1297 0172 1A80     		strh	r2, [r3]	@ movhi
 1298              	.L66:
 324:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1299              		.loc 1 324 0 is_stmt 1
 1300 0174 174B     		ldr	r3, .L69+32
 1301 0176 1B88     		ldrh	r3, [r3]
 1302 0178 1BB2     		sxth	r3, r3
 1303 017a 642B     		cmp	r3, #100
 1304 017c 02DD     		ble	.L67
 1305              		.loc 1 324 0 is_stmt 0 discriminator 1
 1306 017e 154B     		ldr	r3, .L69+32
 1307 0180 6422     		movs	r2, #100
 1308 0182 1A80     		strh	r2, [r3]	@ movhi
 1309              	.L67:
 325:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 1310              		.loc 1 325 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 30


 1311 0184 114B     		ldr	r3, .L69+24
 1312 0186 1B88     		ldrh	r3, [r3]
 1313 0188 1BB2     		sxth	r3, r3
 1314 018a 642B     		cmp	r3, #100
 1315 018c 02DD     		ble	.L68
 1316              		.loc 1 325 0 is_stmt 0 discriminator 1
 1317 018e 0F4B     		ldr	r3, .L69+24
 1318 0190 6422     		movs	r2, #100
 1319 0192 1A80     		strh	r2, [r3]	@ movhi
 1320              	.L68:
 326:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 1321              		.loc 1 326 0 is_stmt 1
 1322 0194 0D4B     		ldr	r3, .L69+24
 1323 0196 1B88     		ldrh	r3, [r3]
 1324 0198 DBB2     		uxtb	r3, r3
 1325 019a 1846     		mov	r0, r3
 1326 019c FFF7FEFF 		bl	PWM_1_WriteCompare
 327:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 1327              		.loc 1 327 0
 1328 01a0 0C4B     		ldr	r3, .L69+32
 1329 01a2 1B88     		ldrh	r3, [r3]
 1330 01a4 DBB2     		uxtb	r3, r3
 1331 01a6 1846     		mov	r0, r3
 1332 01a8 FFF7FEFF 		bl	PWM_2_WriteCompare
 1333              	.L62:
 328:.\main.c      **** }
 1334              		.loc 1 328 0
 1335 01ac 9037     		adds	r7, r7, #144
 1336              		.cfi_def_cfa_offset 16
 1337 01ae BD46     		mov	sp, r7
 1338              		.cfi_def_cfa_register 13
 1339              		@ sp needed
 1340 01b0 B0BD     		pop	{r4, r5, r7, pc}
 1341              	.L70:
 1342 01b2 00BF     		.align	2
 1343              	.L69:
 1344 01b4 00000000 		.word	flag_calc_wheelspeed
 1345 01b8 00000000 		.word	quad_diff1
 1346 01bc 14000000 		.word	.LC1
 1347 01c0 00000000 		.word	quad_diff2
 1348 01c4 2C000000 		.word	.LC2
 1349 01c8 00000000 		.word	leftSpeedLimit
 1350 01cc 00000000 		.word	left_duty_cycle
 1351 01d0 00000000 		.word	rightSpeedLimit
 1352 01d4 00000000 		.word	right_duty_cycle
 1353              		.cfi_endproc
 1354              	.LFE77:
 1355              		.size	Quad_Dec_response, .-Quad_Dec_response
 1356              		.global	__aeabi_i2f
 1357              		.global	__aeabi_fmul
 1358              		.global	__aeabi_fadd
 1359              		.global	__aeabi_f2iz
 1360              		.section	.rodata
 1361 0042 0000     		.align	2
 1362              	.LC3:
 1363 0044 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 1363      65727920 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 31


 1363      566F6C74 
 1363      6167653A 
 1363      2025646D 
 1364              		.section	.text.print_ADC,"ax",%progbits
 1365              		.align	2
 1366              		.global	print_ADC
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	print_ADC, %function
 1370              	print_ADC:
 1371              	.LFB78:
 329:.\main.c      **** 
 330:.\main.c      **** void print_ADC()
 331:.\main.c      **** {
 1372              		.loc 1 331 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 24
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
 1379              		.cfi_offset 14, -4
 1380 0002 86B0     		sub	sp, sp, #24
 1381              		.cfi_def_cfa_offset 32
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 332:.\main.c      ****    //usbPutString("HII\n");
 333:.\main.c      ****     if(flag_receive_ADC == 1)
 1384              		.loc 1 333 0
 1385 0006 274B     		ldr	r3, .L74
 1386 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1387 000a 012B     		cmp	r3, #1
 1388 000c 46D1     		bne	.L71
 1389              	.LBB3:
 334:.\main.c      ****     {
 335:.\main.c      ****         //usbPutString("AAA\r\n");
 336:.\main.c      ****         flag_receive_ADC = 0;
 1390              		.loc 1 336 0
 1391 000e 254B     		ldr	r3, .L74
 1392 0010 0022     		movs	r2, #0
 1393 0012 1A70     		strb	r2, [r3]
 337:.\main.c      ****         
 338:.\main.c      ****        // int8 channel = ADC_
 339:.\main.c      ****         float scalingFactor = 0.972;
 1394              		.loc 1 339 0
 1395 0014 244B     		ldr	r3, .L74+4
 1396 0016 7B61     		str	r3, [r7, #20]	@ float
 340:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 1397              		.loc 1 340 0
 1398 0018 244B     		ldr	r3, .L74+8
 1399 001a 1B88     		ldrh	r3, [r3]
 1400 001c 1BB2     		sxth	r3, r3
 1401 001e 41F28832 		movw	r2, #5000
 1402 0022 02FB03F3 		mul	r3, r2, r3
 1403 0026 002B     		cmp	r3, #0
 1404 0028 01DA     		bge	.L73
 1405 002a 03F6FF73 		addw	r3, r3, #4095
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 32


 1406              	.L73:
 1407 002e 1B13     		asrs	r3, r3, #12
 1408 0030 1846     		mov	r0, r3
 1409 0032 FFF7FEFF 		bl	__aeabi_i2f
 1410 0036 0346     		mov	r3, r0
 1411 0038 1846     		mov	r0, r3
 1412 003a 7969     		ldr	r1, [r7, #20]	@ float
 1413 003c FFF7FEFF 		bl	__aeabi_fmul
 1414 0040 0346     		mov	r3, r0
 1415 0042 1846     		mov	r0, r3
 1416 0044 1946     		mov	r1, r3
 1417 0046 FFF7FEFF 		bl	__aeabi_fadd
 1418 004a 0346     		mov	r3, r0
 1419 004c 1846     		mov	r0, r3
 1420 004e FFF7FEFF 		bl	__aeabi_f2iz
 1421 0052 0346     		mov	r3, r0
 1422 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 341:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 1423              		.loc 1 341 0
 1424 0056 B7F91220 		ldrsh	r2, [r7, #18]
 1425 005a 154B     		ldr	r3, .L74+12
 1426 005c 1B88     		ldrh	r3, [r3]
 1427 005e 1BB2     		sxth	r3, r3
 1428 0060 1A44     		add	r2, r2, r3
 1429 0062 144B     		ldr	r3, .L74+16
 1430 0064 1B88     		ldrh	r3, [r3]
 1431 0066 1BB2     		sxth	r3, r3
 1432 0068 1344     		add	r3, r3, r2
 1433 006a 134A     		ldr	r2, .L74+20
 1434 006c 82FB0312 		smull	r1, r2, r2, r3
 1435 0070 DB17     		asrs	r3, r3, #31
 1436 0072 D31A     		subs	r3, r2, r3
 1437 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 342:.\main.c      ****         prevVoltage2 = prevVoltage;
 1438              		.loc 1 342 0
 1439 0076 0E4B     		ldr	r3, .L74+12
 1440 0078 1A88     		ldrh	r2, [r3]
 1441 007a 0E4B     		ldr	r3, .L74+16
 1442 007c 1A80     		strh	r2, [r3]	@ movhi
 343:.\main.c      ****         prevVoltage = converted_val;
 1443              		.loc 1 343 0
 1444 007e 0C4A     		ldr	r2, .L74+12
 1445 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1446 0082 1380     		strh	r3, [r2]	@ movhi
 344:.\main.c      ****         
 345:.\main.c      ****         char result_str[16];
 346:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 1447              		.loc 1 346 0
 1448 0084 B7F91230 		ldrsh	r3, [r7, #18]
 1449 0088 3A46     		mov	r2, r7
 1450 008a 1046     		mov	r0, r2
 1451 008c 0B49     		ldr	r1, .L74+24
 1452 008e 1A46     		mov	r2, r3
 1453 0090 FFF7FEFF 		bl	sprintf
 347:.\main.c      ****         
 348:.\main.c      ****         usbPutString(result_str);
 1454              		.loc 1 348 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 33


 1455 0094 3B46     		mov	r3, r7
 1456 0096 1846     		mov	r0, r3
 1457 0098 FFF7FEFF 		bl	usbPutString
 1458              	.L71:
 1459              	.LBE3:
 349:.\main.c      ****     }
 350:.\main.c      **** }
 1460              		.loc 1 350 0
 1461 009c 1837     		adds	r7, r7, #24
 1462              		.cfi_def_cfa_offset 8
 1463 009e BD46     		mov	sp, r7
 1464              		.cfi_def_cfa_register 13
 1465              		@ sp needed
 1466 00a0 80BD     		pop	{r7, pc}
 1467              	.L75:
 1468 00a2 00BF     		.align	2
 1469              	.L74:
 1470 00a4 00000000 		.word	flag_receive_ADC
 1471 00a8 FED4783F 		.word	1064883454
 1472 00ac 00000000 		.word	adc_result
 1473 00b0 00000000 		.word	prevVoltage
 1474 00b4 00000000 		.word	prevVoltage2
 1475 00b8 56555555 		.word	1431655766
 1476 00bc 44000000 		.word	.LC3
 1477              		.cfi_endproc
 1478              	.LFE78:
 1479              		.size	print_ADC, .-print_ADC
 1480              		.section	.rodata
 1481              		.align	2
 1482              	.LC4:
 1483 005c 52535349 		.ascii	"RSSI:\000"
 1483      3A00
 1484 0062 0000     		.align	2
 1485              	.LC5:
 1486 0064 25640D0A 		.ascii	"%d\015\012\000"
 1486      00
 1487 0069 000000   		.align	2
 1488              	.LC6:
 1489 006c 726F626F 		.ascii	"robot_x:\000"
 1489      745F783A 
 1489      00
 1490 0075 000000   		.align	2
 1491              	.LC7:
 1492 0078 726F626F 		.ascii	"robot_y:\000"
 1492      745F793A 
 1492      00
 1493 0081 000000   		.align	2
 1494              	.LC8:
 1495 0084 726F626F 		.ascii	"robot_dir:\000"
 1495      745F6469 
 1495      723A00
 1496 008f 00       		.section	.text.print_RF,"ax",%progbits
 1497              		.align	2
 1498              		.global	print_RF
 1499              		.thumb
 1500              		.thumb_func
 1501              		.type	print_RF, %function
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 34


 1502              	print_RF:
 1503              	.LFB79:
 351:.\main.c      **** 
 352:.\main.c      **** void print_RF()
 353:.\main.c      **** {
 1504              		.loc 1 353 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 16
 1507              		@ frame_needed = 1, uses_anonymous_args = 0
 1508 0000 80B5     		push	{r7, lr}
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 7, -8
 1511              		.cfi_offset 14, -4
 1512 0002 84B0     		sub	sp, sp, #16
 1513              		.cfi_def_cfa_offset 24
 1514 0004 00AF     		add	r7, sp, #0
 1515              		.cfi_def_cfa_register 7
 354:.\main.c      ****     if(flag_print_rf == 1)
 1516              		.loc 1 354 0
 1517 0006 254B     		ldr	r3, .L78
 1518 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 000a 012B     		cmp	r3, #1
 1520 000c 42D1     		bne	.L76
 1521              	.LBB4:
 355:.\main.c      ****     {
 356:.\main.c      ****         char printString[16];
 357:.\main.c      ****         flag_print_rf = 0;
 1522              		.loc 1 357 0
 1523 000e 234B     		ldr	r3, .L78
 1524 0010 0022     		movs	r2, #0
 1525 0012 1A70     		strb	r2, [r3]
 358:.\main.c      ****         usbPutString("RSSI:");
 1526              		.loc 1 358 0
 1527 0014 2248     		ldr	r0, .L78+4
 1528 0016 FFF7FEFF 		bl	usbPutString
 359:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 1529              		.loc 1 359 0
 1530 001a 224B     		ldr	r3, .L78+8
 1531 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1532 001e 5BB2     		sxtb	r3, r3
 1533 0020 3A46     		mov	r2, r7
 1534 0022 1046     		mov	r0, r2
 1535 0024 2049     		ldr	r1, .L78+12
 1536 0026 1A46     		mov	r2, r3
 1537 0028 FFF7FEFF 		bl	sprintf
 360:.\main.c      ****         usbPutString(printString);
 1538              		.loc 1 360 0
 1539 002c 3B46     		mov	r3, r7
 1540 002e 1846     		mov	r0, r3
 1541 0030 FFF7FEFF 		bl	usbPutString
 361:.\main.c      ****         usbPutString("robot_x:");
 1542              		.loc 1 361 0
 1543 0034 1D48     		ldr	r0, .L78+16
 1544 0036 FFF7FEFF 		bl	usbPutString
 362:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 1545              		.loc 1 362 0
 1546 003a 1A4B     		ldr	r3, .L78+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 35


 1547 003c 5B88     		ldrh	r3, [r3, #2]
 1548 003e 1BB2     		sxth	r3, r3
 1549 0040 3A46     		mov	r2, r7
 1550 0042 1046     		mov	r0, r2
 1551 0044 1849     		ldr	r1, .L78+12
 1552 0046 1A46     		mov	r2, r3
 1553 0048 FFF7FEFF 		bl	sprintf
 363:.\main.c      ****         usbPutString(printString);
 1554              		.loc 1 363 0
 1555 004c 3B46     		mov	r3, r7
 1556 004e 1846     		mov	r0, r3
 1557 0050 FFF7FEFF 		bl	usbPutString
 364:.\main.c      ****         usbPutString("robot_y:");
 1558              		.loc 1 364 0
 1559 0054 1648     		ldr	r0, .L78+20
 1560 0056 FFF7FEFF 		bl	usbPutString
 365:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 1561              		.loc 1 365 0
 1562 005a 124B     		ldr	r3, .L78+8
 1563 005c 9B88     		ldrh	r3, [r3, #4]
 1564 005e 1BB2     		sxth	r3, r3
 1565 0060 3A46     		mov	r2, r7
 1566 0062 1046     		mov	r0, r2
 1567 0064 1049     		ldr	r1, .L78+12
 1568 0066 1A46     		mov	r2, r3
 1569 0068 FFF7FEFF 		bl	sprintf
 366:.\main.c      ****         usbPutString(printString);
 1570              		.loc 1 366 0
 1571 006c 3B46     		mov	r3, r7
 1572 006e 1846     		mov	r0, r3
 1573 0070 FFF7FEFF 		bl	usbPutString
 367:.\main.c      ****         usbPutString("robot_dir:");
 1574              		.loc 1 367 0
 1575 0074 0F48     		ldr	r0, .L78+24
 1576 0076 FFF7FEFF 		bl	usbPutString
 368:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 1577              		.loc 1 368 0
 1578 007a 0A4B     		ldr	r3, .L78+8
 1579 007c DB88     		ldrh	r3, [r3, #6]
 1580 007e 1BB2     		sxth	r3, r3
 1581 0080 3A46     		mov	r2, r7
 1582 0082 1046     		mov	r0, r2
 1583 0084 0849     		ldr	r1, .L78+12
 1584 0086 1A46     		mov	r2, r3
 1585 0088 FFF7FEFF 		bl	sprintf
 369:.\main.c      ****         usbPutString(printString);
 1586              		.loc 1 369 0
 1587 008c 3B46     		mov	r3, r7
 1588 008e 1846     		mov	r0, r3
 1589 0090 FFF7FEFF 		bl	usbPutString
 1590              	.L76:
 1591              	.LBE4:
 370:.\main.c      ****     }
 371:.\main.c      **** }
 1592              		.loc 1 371 0
 1593 0094 1037     		adds	r7, r7, #16
 1594              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 36


 1595 0096 BD46     		mov	sp, r7
 1596              		.cfi_def_cfa_register 13
 1597              		@ sp needed
 1598 0098 80BD     		pop	{r7, pc}
 1599              	.L79:
 1600 009a 00BF     		.align	2
 1601              	.L78:
 1602 009c 00000000 		.word	flag_print_rf
 1603 00a0 5C000000 		.word	.LC4
 1604 00a4 00000000 		.word	system_state
 1605 00a8 64000000 		.word	.LC5
 1606 00ac 6C000000 		.word	.LC6
 1607 00b0 78000000 		.word	.LC7
 1608 00b4 84000000 		.word	.LC8
 1609              		.cfi_endproc
 1610              	.LFE79:
 1611              		.size	print_RF, .-print_RF
 1612              		.section	.text.main,"ax",%progbits
 1613              		.align	2
 1614              		.global	main
 1615              		.thumb
 1616              		.thumb_func
 1617              		.type	main, %function
 1618              	main:
 1619              	.LFB80:
 372:.\main.c      **** 
 373:.\main.c      **** int main()
 374:.\main.c      **** {  
 1620              		.loc 1 374 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 1, uses_anonymous_args = 0
 1624 0000 80B5     		push	{r7, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 7, -8
 1627              		.cfi_offset 14, -4
 1628 0002 00AF     		add	r7, sp, #0
 1629              		.cfi_def_cfa_register 7
 375:.\main.c      **** 
 376:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 377:.\main.c      **** // ----- INITIALIZATIONS ----------
 378:.\main.c      ****     CYGlobalIntEnable;
 1630              		.loc 1 378 0
 1631              	@ 378 ".\main.c" 1
 1632 0004 62B6     		CPSIE   i
 1633              	@ 0 "" 2
 379:.\main.c      ****     if(ENABLE_PWM)
 380:.\main.c      ****     {
 381:.\main.c      ****         PWM_1_Start();// starting the pwm
 1634              		.loc 1 381 0
 1635              		.thumb
 1636 0006 FFF7FEFF 		bl	PWM_1_Start
 382:.\main.c      ****         PWM_2_Start();// starting the pwm
 1637              		.loc 1 382 0
 1638 000a FFF7FEFF 		bl	PWM_2_Start
 383:.\main.c      ****     }
 384:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 37


 385:.\main.c      ****     if(ENABLE_ADC)
 386:.\main.c      ****     {
 387:.\main.c      ****         ADC_Start();
 388:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 389:.\main.c      ****         //ADC_StartConvert();
 390:.\main.c      ****         
 391:.\main.c      ****         //start the ADC timer for software trigger mode
 392:.\main.c      ****         Timer_TS_Start();
 393:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 394:.\main.c      ****     }
 395:.\main.c      ****     
 396:.\main.c      ****     if (ENABLE_QUAD)
 397:.\main.c      ****     {
 398:.\main.c      ****         QuadDec_M1_Start();
 1639              		.loc 1 398 0
 1640 000e FFF7FEFF 		bl	QuadDec_M1_Start
 399:.\main.c      ****         QuadDec_M2_Start();
 1641              		.loc 1 399 0
 1642 0012 FFF7FEFF 		bl	QuadDec_M2_Start
 400:.\main.c      ****         
 401:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1643              		.loc 1 401 0
 1644 0016 2148     		ldr	r0, .L90
 1645 0018 FFF7FEFF 		bl	isr_quad1_StartEx
 402:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1646              		.loc 1 402 0
 1647 001c 2048     		ldr	r0, .L90+4
 1648 001e FFF7FEFF 		bl	isr_turn_count_StartEx
 403:.\main.c      ****         
 404:.\main.c      ****         Timer_1_Start();
 1649              		.loc 1 404 0
 1650 0022 FFF7FEFF 		bl	Timer_1_Start
 405:.\main.c      ****     }
 406:.\main.c      ****     
 407:.\main.c      ****     if(ENABLE_STOP){
 408:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 1651              		.loc 1 408 0
 1652 0026 1F48     		ldr	r0, .L90+8
 1653 0028 FFF7FEFF 		bl	isr_OnLine_StartEx
 409:.\main.c      ****         isr_button_StartEx(button);
 1654              		.loc 1 409 0
 1655 002c 1E48     		ldr	r0, .L90+12
 1656 002e FFF7FEFF 		bl	isr_button_StartEx
 410:.\main.c      ****     }
 411:.\main.c      **** 
 412:.\main.c      ****     // ------USB SETUP ----------------    
 413:.\main.c      ****     if (USE_USB){    
 414:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1657              		.loc 1 414 0
 1658 0032 0020     		movs	r0, #0
 1659 0034 0121     		movs	r1, #1
 1660 0036 FFF7FEFF 		bl	USBUART_Start
 415:.\main.c      ****         if (USBUART_GetConfiguration())
 1661              		.loc 1 415 0
 1662 003a FFF7FEFF 		bl	USBUART_GetConfiguration
 1663 003e 0346     		mov	r3, r0
 1664 0040 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 38


 1665 0042 01D0     		beq	.L89
 416:.\main.c      ****             {
 417:.\main.c      ****                  USBUART_CDC_Init();
 1666              		.loc 1 417 0
 1667 0044 FFF7FEFF 		bl	USBUART_CDC_Init
 1668              	.L89:
 418:.\main.c      ****             }
 419:.\main.c      ****     }
 420:.\main.c      ****     
 421:.\main.c      ****     if(BIN_ENABLED){
 422:.\main.c      ****         UART_clk_SetDividerValue(130);
 423:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 424:.\main.c      ****         UART_Start();
 425:.\main.c      ****         RF_BT_SELECT_Write(0);
 426:.\main.c      ****     }
 427:.\main.c      ****     
 428:.\main.c      ****     if(BT_ENABLED){
 429:.\main.c      ****         UART_clk_SetDividerValue(781);
 1669              		.loc 1 429 0
 1670 0048 4FF44370 		mov	r0, #780
 1671 004c 0121     		movs	r1, #1
 1672 004e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 430:.\main.c      ****         UART_Start();
 1673              		.loc 1 430 0
 1674 0052 FFF7FEFF 		bl	UART_Start
 431:.\main.c      ****         RF_BT_SELECT_Write(1);
 1675              		.loc 1 431 0
 1676 0056 0120     		movs	r0, #1
 1677 0058 FFF7FEFF 		bl	RF_BT_SELECT_Write
 1678              	.L88:
 432:.\main.c      ****     }
 433:.\main.c      ****     
 434:.\main.c      ****     //usbPutString("Started");
 435:.\main.c      ****     for(;;)
 436:.\main.c      ****     {
 437:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 438:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1679              		.loc 1 438 0
 1680 005c FFF7FEFF 		bl	Quad_Dec_response
 439:.\main.c      ****         if(BIN_ENABLED == 1)
 440:.\main.c      ****         {
 441:.\main.c      ****             handle_rx_binary();
 442:.\main.c      ****             print_RF();
 443:.\main.c      ****         }
 444:.\main.c      ****         
 445:.\main.c      ****         switch(movement_state)
 1681              		.loc 1 445 0
 1682 0060 124B     		ldr	r3, .L90+16
 1683 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1684 0064 032B     		cmp	r3, #3
 1685 0066 F9D8     		bhi	.L88
 1686 0068 01A2     		adr	r2, .L84
 1687 006a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1688 006e 00BF     		.p2align 2
 1689              	.L84:
 1690 0070 81000000 		.word	.L83+1
 1691 0074 87000000 		.word	.L85+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 39


 1692 0078 8D000000 		.word	.L86+1
 1693 007c 93000000 		.word	.L87+1
 1694              		.p2align 1
 1695              	.L83:
 446:.\main.c      ****         {
 447:.\main.c      ****             case DRIVE:
 448:.\main.c      ****                 driveForwards();
 1696              		.loc 1 448 0
 1697 0080 FFF7FEFF 		bl	driveForwards
 449:.\main.c      ****             break;
 1698              		.loc 1 449 0
 1699 0084 08E0     		b	.L82
 1700              	.L85:
 450:.\main.c      ****             case LTURN:
 451:.\main.c      ****                 turnLeft();
 1701              		.loc 1 451 0
 1702 0086 FFF7FEFF 		bl	turnLeft
 452:.\main.c      ****             break;
 1703              		.loc 1 452 0
 1704 008a 05E0     		b	.L82
 1705              	.L86:
 453:.\main.c      ****             case RTURN:
 454:.\main.c      ****                 turnRight();
 1706              		.loc 1 454 0
 1707 008c FFF7FEFF 		bl	turnRight
 455:.\main.c      ****             break;
 1708              		.loc 1 455 0
 1709 0090 02E0     		b	.L82
 1710              	.L87:
 456:.\main.c      ****             case STOPPED:
 457:.\main.c      ****                 brakeMotor();
 1711              		.loc 1 457 0
 1712 0092 FFF7FEFF 		bl	brakeMotor
 458:.\main.c      ****             break;
 1713              		.loc 1 458 0
 1714 0096 00BF     		nop
 1715              	.L82:
 459:.\main.c      ****         }
 460:.\main.c      ****         //handle_usb();        
 461:.\main.c      ****     }   
 1716              		.loc 1 461 0
 1717 0098 E0E7     		b	.L88
 1718              	.L91:
 1719 009a 00BF     		.align	2
 1720              	.L90:
 1721 009c 00000000 		.word	isr_quad1
 1722 00a0 00000000 		.word	isr_turn_timer
 1723 00a4 00000000 		.word	Stop_on_line
 1724 00a8 00000000 		.word	button
 1725 00ac 00000000 		.word	movement_state
 1726              		.cfi_endproc
 1727              	.LFE80:
 1728              		.size	main, .-main
 1729              		.section	.text.usbPutString,"ax",%progbits
 1730              		.align	2
 1731              		.global	usbPutString
 1732              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 40


 1733              		.thumb_func
 1734              		.type	usbPutString, %function
 1735              	usbPutString:
 1736              	.LFB81:
 462:.\main.c      **** }
 463:.\main.c      **** //* ========================================
 464:.\main.c      **** void usbPutString(char *s)
 465:.\main.c      **** {
 1737              		.loc 1 465 0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 16
 1740              		@ frame_needed = 1, uses_anonymous_args = 0
 1741 0000 80B5     		push	{r7, lr}
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 7, -8
 1744              		.cfi_offset 14, -4
 1745 0002 84B0     		sub	sp, sp, #16
 1746              		.cfi_def_cfa_offset 24
 1747 0004 00AF     		add	r7, sp, #0
 1748              		.cfi_def_cfa_register 7
 1749 0006 7860     		str	r0, [r7, #4]
 466:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 467:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 468:.\main.c      **** //  length to 62 char (63rd char is a '!')
 469:.\main.c      ****     if (USE_USB && portOpen)    
 1750              		.loc 1 469 0
 1751 0008 154B     		ldr	r3, .L96
 1752 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1753 000c 002B     		cmp	r3, #0
 1754 000e 23D0     		beq	.L92
 1755              	.LBB5:
 470:.\main.c      ****     {
 471:.\main.c      ****             uint32 cnt = 0;
 1756              		.loc 1 471 0
 1757 0010 0023     		movs	r3, #0
 1758 0012 FB60     		str	r3, [r7, #12]
 472:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 1759              		.loc 1 472 0
 1760 0014 0AE0     		b	.L94
 1761              	.L95:
 473:.\main.c      ****             {
 474:.\main.c      ****                 cnt++;
 1762              		.loc 1 474 0
 1763 0016 FB68     		ldr	r3, [r7, #12]
 1764 0018 0133     		adds	r3, r3, #1
 1765 001a FB60     		str	r3, [r7, #12]
 475:.\main.c      ****                 if(cnt == 3000000){
 1766              		.loc 1 475 0
 1767 001c FB68     		ldr	r3, [r7, #12]
 1768 001e 114A     		ldr	r2, .L96+4
 1769 0020 9342     		cmp	r3, r2
 1770 0022 03D1     		bne	.L94
 476:.\main.c      ****                     portOpen = 0;
 1771              		.loc 1 476 0
 1772 0024 0E4B     		ldr	r3, .L96
 1773 0026 0022     		movs	r2, #0
 1774 0028 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 41


 477:.\main.c      ****                     return;
 1775              		.loc 1 477 0
 1776 002a 15E0     		b	.L92
 1777              	.L94:
 472:.\main.c      ****             {
 1778              		.loc 1 472 0
 1779 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 1780 0030 0346     		mov	r3, r0
 1781 0032 002B     		cmp	r3, #0
 1782 0034 EFD0     		beq	.L95
 478:.\main.c      ****                 }
 479:.\main.c      ****             }
 480:.\main.c      ****             s[63]='\0';
 1783              		.loc 1 480 0
 1784 0036 7B68     		ldr	r3, [r7, #4]
 1785 0038 3F33     		adds	r3, r3, #63
 1786 003a 0022     		movs	r2, #0
 1787 003c 1A70     		strb	r2, [r3]
 481:.\main.c      ****             s[62]='!';
 1788              		.loc 1 481 0
 1789 003e 7B68     		ldr	r3, [r7, #4]
 1790 0040 3E33     		adds	r3, r3, #62
 1791 0042 2122     		movs	r2, #33
 1792 0044 1A70     		strb	r2, [r3]
 482:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 1793              		.loc 1 482 0
 1794 0046 7868     		ldr	r0, [r7, #4]
 1795 0048 FFF7FEFF 		bl	strlen
 1796 004c 0346     		mov	r3, r0
 1797 004e 9BB2     		uxth	r3, r3
 1798 0050 7868     		ldr	r0, [r7, #4]
 1799 0052 1946     		mov	r1, r3
 1800 0054 FFF7FEFF 		bl	USBUART_PutData
 1801              	.L92:
 1802              	.LBE5:
 483:.\main.c      ****     }
 484:.\main.c      **** }
 1803              		.loc 1 484 0
 1804 0058 1037     		adds	r7, r7, #16
 1805              		.cfi_def_cfa_offset 8
 1806 005a BD46     		mov	sp, r7
 1807              		.cfi_def_cfa_register 13
 1808              		@ sp needed
 1809 005c 80BD     		pop	{r7, pc}
 1810              	.L97:
 1811 005e 00BF     		.align	2
 1812              	.L96:
 1813 0060 00000000 		.word	portOpen
 1814 0064 C0C62D00 		.word	3000000
 1815              		.cfi_endproc
 1816              	.LFE81:
 1817              		.size	usbPutString, .-usbPutString
 1818              		.section	.text.usbPutChar,"ax",%progbits
 1819              		.align	2
 1820              		.global	usbPutChar
 1821              		.thumb
 1822              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 42


 1823              		.type	usbPutChar, %function
 1824              	usbPutChar:
 1825              	.LFB82:
 485:.\main.c      **** //* ========================================
 486:.\main.c      **** void usbPutChar(char c)
 487:.\main.c      **** {
 1826              		.loc 1 487 0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 16
 1829              		@ frame_needed = 1, uses_anonymous_args = 0
 1830 0000 80B5     		push	{r7, lr}
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 7, -8
 1833              		.cfi_offset 14, -4
 1834 0002 84B0     		sub	sp, sp, #16
 1835              		.cfi_def_cfa_offset 24
 1836 0004 00AF     		add	r7, sp, #0
 1837              		.cfi_def_cfa_register 7
 1838 0006 0346     		mov	r3, r0
 1839 0008 FB71     		strb	r3, [r7, #7]
 488:.\main.c      ****     if (USE_USB && portOpen)    
 1840              		.loc 1 488 0
 1841 000a 0F4B     		ldr	r3, .L102
 1842 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1843 000e 002B     		cmp	r3, #0
 1844 0010 16D0     		beq	.L98
 1845              	.LBB6:
 489:.\main.c      ****     {    
 490:.\main.c      ****         uint32 cnt = 0;
 1846              		.loc 1 490 0
 1847 0012 0023     		movs	r3, #0
 1848 0014 FB60     		str	r3, [r7, #12]
 491:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 1849              		.loc 1 491 0
 1850 0016 0AE0     		b	.L100
 1851              	.L101:
 492:.\main.c      ****             cnt++;
 1852              		.loc 1 492 0
 1853 0018 FB68     		ldr	r3, [r7, #12]
 1854 001a 0133     		adds	r3, r3, #1
 1855 001c FB60     		str	r3, [r7, #12]
 493:.\main.c      ****             if(cnt == 3000000){
 1856              		.loc 1 493 0
 1857 001e FB68     		ldr	r3, [r7, #12]
 1858 0020 0A4A     		ldr	r2, .L102+4
 1859 0022 9342     		cmp	r3, r2
 1860 0024 03D1     		bne	.L100
 494:.\main.c      ****                 portOpen = 0;
 1861              		.loc 1 494 0
 1862 0026 084B     		ldr	r3, .L102
 1863 0028 0022     		movs	r2, #0
 1864 002a 1A70     		strb	r2, [r3]
 495:.\main.c      ****                 return;
 1865              		.loc 1 495 0
 1866 002c 08E0     		b	.L98
 1867              	.L100:
 491:.\main.c      ****             cnt++;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 43


 1868              		.loc 1 491 0
 1869 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 1870 0032 0346     		mov	r3, r0
 1871 0034 002B     		cmp	r3, #0
 1872 0036 EFD0     		beq	.L101
 496:.\main.c      ****             }
 497:.\main.c      ****         }
 498:.\main.c      ****         USBUART_PutChar(c);
 1873              		.loc 1 498 0
 1874 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1875 003a 1846     		mov	r0, r3
 1876 003c FFF7FEFF 		bl	USBUART_PutChar
 1877              	.L98:
 1878              	.LBE6:
 499:.\main.c      ****     }    
 500:.\main.c      **** }
 1879              		.loc 1 500 0
 1880 0040 1037     		adds	r7, r7, #16
 1881              		.cfi_def_cfa_offset 8
 1882 0042 BD46     		mov	sp, r7
 1883              		.cfi_def_cfa_register 13
 1884              		@ sp needed
 1885 0044 80BD     		pop	{r7, pc}
 1886              	.L103:
 1887 0046 00BF     		.align	2
 1888              	.L102:
 1889 0048 00000000 		.word	portOpen
 1890 004c C0C62D00 		.word	3000000
 1891              		.cfi_endproc
 1892              	.LFE82:
 1893              		.size	usbPutChar, .-usbPutChar
 1894              		.section	.text.uart_set_PWM,"ax",%progbits
 1895              		.align	2
 1896              		.global	uart_set_PWM
 1897              		.thumb
 1898              		.thumb_func
 1899              		.type	uart_set_PWM, %function
 1900              	uart_set_PWM:
 1901              	.LFB83:
 501:.\main.c      **** //* ========================================
 502:.\main.c      **** 
 503:.\main.c      **** void uart_set_PWM()
 504:.\main.c      **** {
 1902              		.loc 1 504 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 8
 1905              		@ frame_needed = 1, uses_anonymous_args = 0
 1906 0000 80B5     		push	{r7, lr}
 1907              		.cfi_def_cfa_offset 8
 1908              		.cfi_offset 7, -8
 1909              		.cfi_offset 14, -4
 1910 0002 82B0     		sub	sp, sp, #8
 1911              		.cfi_def_cfa_offset 16
 1912 0004 00AF     		add	r7, sp, #0
 1913              		.cfi_def_cfa_register 7
 505:.\main.c      ****     uint8 c;
 506:.\main.c      ****      if (USBUART_DataIsReady() != 0)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 44


 1914              		.loc 1 506 0
 1915 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 1916 000a 0346     		mov	r3, r0
 1917 000c 002B     		cmp	r3, #0
 1918 000e 11D0     		beq	.L104
 507:.\main.c      ****        {  
 508:.\main.c      ****             c = USBUART_GetChar();
 1919              		.loc 1 508 0
 1920 0010 FFF7FEFF 		bl	USBUART_GetChar
 1921 0014 0346     		mov	r3, r0
 1922 0016 FB71     		strb	r3, [r7, #7]
 509:.\main.c      ****             
 510:.\main.c      ****             if(c <= 100 && c > 0){
 1923              		.loc 1 510 0
 1924 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1925 001a 642B     		cmp	r3, #100
 1926 001c 0AD8     		bhi	.L104
 1927              		.loc 1 510 0 is_stmt 0 discriminator 1
 1928 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1929 0020 002B     		cmp	r3, #0
 1930 0022 07D0     		beq	.L104
 511:.\main.c      ****                 PWM_1_WriteCompare(c);
 1931              		.loc 1 511 0 is_stmt 1
 1932 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1933 0026 1846     		mov	r0, r3
 1934 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 512:.\main.c      ****                 usbPutString(c);
 1935              		.loc 1 512 0
 1936 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1937 002e 1846     		mov	r0, r3
 1938 0030 FFF7FEFF 		bl	usbPutString
 1939              	.L104:
 513:.\main.c      ****             }
 514:.\main.c      ****        }
 515:.\main.c      **** }
 1940              		.loc 1 515 0
 1941 0034 0837     		adds	r7, r7, #8
 1942              		.cfi_def_cfa_offset 8
 1943 0036 BD46     		mov	sp, r7
 1944              		.cfi_def_cfa_register 13
 1945              		@ sp needed
 1946 0038 80BD     		pop	{r7, pc}
 1947              		.cfi_endproc
 1948              	.LFE83:
 1949              		.size	uart_set_PWM, .-uart_set_PWM
 1950 003a 00BF     		.text
 1951              	.Letext0:
 1952              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1953              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1954              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1955              		.file 5 ".\\vars.h"
 1956              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1957              		.section	.debug_info,"",%progbits
 1958              	.Ldebug_info0:
 1959 0000 1F080000 		.4byte	0x81f
 1960 0004 0400     		.2byte	0x4
 1961 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 45


 1962 000a 04       		.byte	0x4
 1963 000b 01       		.uleb128 0x1
 1964 000c AC020000 		.4byte	.LASF122
 1965 0010 01       		.byte	0x1
 1966 0011 22060000 		.4byte	.LASF123
 1967 0015 D0050000 		.4byte	.LASF124
 1968 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1969 001d 00000000 		.4byte	0
 1970 0021 00000000 		.4byte	.Ldebug_line0
 1971 0025 02       		.uleb128 0x2
 1972 0026 01       		.byte	0x1
 1973 0027 06       		.byte	0x6
 1974 0028 58050000 		.4byte	.LASF0
 1975 002c 02       		.uleb128 0x2
 1976 002d 01       		.byte	0x1
 1977 002e 08       		.byte	0x8
 1978 002f D6040000 		.4byte	.LASF1
 1979 0033 02       		.uleb128 0x2
 1980 0034 02       		.byte	0x2
 1981 0035 05       		.byte	0x5
 1982 0036 F8030000 		.4byte	.LASF2
 1983 003a 02       		.uleb128 0x2
 1984 003b 02       		.byte	0x2
 1985 003c 07       		.byte	0x7
 1986 003d 64050000 		.4byte	.LASF3
 1987 0041 03       		.uleb128 0x3
 1988 0042 6E000000 		.4byte	.LASF11
 1989 0046 02       		.byte	0x2
 1990 0047 3F       		.byte	0x3f
 1991 0048 4C000000 		.4byte	0x4c
 1992 004c 02       		.uleb128 0x2
 1993 004d 04       		.byte	0x4
 1994 004e 05       		.byte	0x5
 1995 004f 22040000 		.4byte	.LASF4
 1996 0053 02       		.uleb128 0x2
 1997 0054 04       		.byte	0x4
 1998 0055 07       		.byte	0x7
 1999 0056 8D040000 		.4byte	.LASF5
 2000 005a 02       		.uleb128 0x2
 2001 005b 08       		.byte	0x8
 2002 005c 05       		.byte	0x5
 2003 005d 89020000 		.4byte	.LASF6
 2004 0061 02       		.uleb128 0x2
 2005 0062 08       		.byte	0x8
 2006 0063 07       		.byte	0x7
 2007 0064 7F010000 		.4byte	.LASF7
 2008 0068 04       		.uleb128 0x4
 2009 0069 04       		.byte	0x4
 2010 006a 05       		.byte	0x5
 2011 006b 696E7400 		.ascii	"int\000"
 2012 006f 02       		.uleb128 0x2
 2013 0070 04       		.byte	0x4
 2014 0071 07       		.byte	0x7
 2015 0072 61000000 		.4byte	.LASF8
 2016 0076 02       		.uleb128 0x2
 2017 0077 04       		.byte	0x4
 2018 0078 07       		.byte	0x7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 46


 2019 0079 84040000 		.4byte	.LASF9
 2020 007d 05       		.uleb128 0x5
 2021 007e 04       		.byte	0x4
 2022 007f 83000000 		.4byte	0x83
 2023 0083 02       		.uleb128 0x2
 2024 0084 01       		.byte	0x1
 2025 0085 08       		.byte	0x8
 2026 0086 42020000 		.4byte	.LASF10
 2027 008a 03       		.uleb128 0x3
 2028 008b AB040000 		.4byte	.LASF12
 2029 008f 03       		.byte	0x3
 2030 0090 2C       		.byte	0x2c
 2031 0091 41000000 		.4byte	0x41
 2032 0095 06       		.uleb128 0x6
 2033 0096 A1050000 		.4byte	.LASF13
 2034 009a 04       		.byte	0x4
 2035 009b 9201     		.2byte	0x192
 2036 009d 2C000000 		.4byte	0x2c
 2037 00a1 06       		.uleb128 0x6
 2038 00a2 60020000 		.4byte	.LASF14
 2039 00a6 04       		.byte	0x4
 2040 00a7 9301     		.2byte	0x193
 2041 00a9 3A000000 		.4byte	0x3a
 2042 00ad 06       		.uleb128 0x6
 2043 00ae 67030000 		.4byte	.LASF15
 2044 00b2 04       		.byte	0x4
 2045 00b3 9401     		.2byte	0x194
 2046 00b5 53000000 		.4byte	0x53
 2047 00b9 06       		.uleb128 0x6
 2048 00ba 67020000 		.4byte	.LASF16
 2049 00be 04       		.byte	0x4
 2050 00bf 9501     		.2byte	0x195
 2051 00c1 25000000 		.4byte	0x25
 2052 00c5 06       		.uleb128 0x6
 2053 00c6 78000000 		.4byte	.LASF17
 2054 00ca 04       		.byte	0x4
 2055 00cb 9601     		.2byte	0x196
 2056 00cd 33000000 		.4byte	0x33
 2057 00d1 02       		.uleb128 0x2
 2058 00d2 04       		.byte	0x4
 2059 00d3 04       		.byte	0x4
 2060 00d4 35010000 		.4byte	.LASF18
 2061 00d8 02       		.uleb128 0x2
 2062 00d9 08       		.byte	0x8
 2063 00da 04       		.byte	0x4
 2064 00db A7050000 		.4byte	.LASF19
 2065 00df 02       		.uleb128 0x2
 2066 00e0 08       		.byte	0x8
 2067 00e1 04       		.byte	0x4
 2068 00e2 B1030000 		.4byte	.LASF20
 2069 00e6 07       		.uleb128 0x7
 2070 00e7 17050000 		.4byte	.LASF125
 2071 00eb 01       		.byte	0x1
 2072 00ec 05       		.byte	0x5
 2073 00ed 48       		.byte	0x48
 2074 00ee 0B010000 		.4byte	0x10b
 2075 00f2 08       		.uleb128 0x8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 47


 2076 00f3 54010000 		.4byte	.LASF21
 2077 00f7 00       		.sleb128 0
 2078 00f8 08       		.uleb128 0x8
 2079 00f9 8B000000 		.4byte	.LASF22
 2080 00fd 01       		.sleb128 1
 2081 00fe 08       		.uleb128 0x8
 2082 00ff 0A000000 		.4byte	.LASF23
 2083 0103 02       		.sleb128 2
 2084 0104 08       		.uleb128 0x8
 2085 0105 A9030000 		.4byte	.LASF24
 2086 0109 03       		.sleb128 3
 2087 010a 00       		.byte	0
 2088 010b 09       		.uleb128 0x9
 2089 010c 6E030000 		.4byte	.LASF126
 2090 0110 20       		.byte	0x20
 2091 0111 05       		.byte	0x5
 2092 0112 4F       		.byte	0x4f
 2093 0113 E4010000 		.4byte	0x1e4
 2094 0117 0A       		.uleb128 0xa
 2095 0118 86030000 		.4byte	.LASF25
 2096 011c 05       		.byte	0x5
 2097 011d 50       		.byte	0x50
 2098 011e B9000000 		.4byte	0xb9
 2099 0122 00       		.byte	0
 2100 0123 0A       		.uleb128 0xa
 2101 0124 4E010000 		.4byte	.LASF26
 2102 0128 05       		.byte	0x5
 2103 0129 51       		.byte	0x51
 2104 012a 95000000 		.4byte	0x95
 2105 012e 01       		.byte	0x1
 2106 012f 0A       		.uleb128 0xa
 2107 0130 BA040000 		.4byte	.LASF27
 2108 0134 05       		.byte	0x5
 2109 0135 52       		.byte	0x52
 2110 0136 C5000000 		.4byte	0xc5
 2111 013a 02       		.byte	0x2
 2112 013b 0A       		.uleb128 0xa
 2113 013c 16020000 		.4byte	.LASF28
 2114 0140 05       		.byte	0x5
 2115 0141 53       		.byte	0x53
 2116 0142 C5000000 		.4byte	0xc5
 2117 0146 04       		.byte	0x4
 2118 0147 0A       		.uleb128 0xa
 2119 0148 77050000 		.4byte	.LASF29
 2120 014c 05       		.byte	0x5
 2121 014d 54       		.byte	0x54
 2122 014e C5000000 		.4byte	0xc5
 2123 0152 06       		.byte	0x6
 2124 0153 0A       		.uleb128 0xa
 2125 0154 02060000 		.4byte	.LASF30
 2126 0158 05       		.byte	0x5
 2127 0159 55       		.byte	0x55
 2128 015a C5000000 		.4byte	0xc5
 2129 015e 08       		.byte	0x8
 2130 015f 0A       		.uleb128 0xa
 2131 0160 43030000 		.4byte	.LASF31
 2132 0164 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 48


 2133 0165 56       		.byte	0x56
 2134 0166 C5000000 		.4byte	0xc5
 2135 016a 0A       		.byte	0xa
 2136 016b 0A       		.uleb128 0xa
 2137 016c 47020000 		.4byte	.LASF32
 2138 0170 05       		.byte	0x5
 2139 0171 57       		.byte	0x57
 2140 0172 C5000000 		.4byte	0xc5
 2141 0176 0C       		.byte	0xc
 2142 0177 0A       		.uleb128 0xa
 2143 0178 8B030000 		.4byte	.LASF33
 2144 017c 05       		.byte	0x5
 2145 017d 58       		.byte	0x58
 2146 017e C5000000 		.4byte	0xc5
 2147 0182 0E       		.byte	0xe
 2148 0183 0A       		.uleb128 0xa
 2149 0184 A4020000 		.4byte	.LASF34
 2150 0188 05       		.byte	0x5
 2151 0189 59       		.byte	0x59
 2152 018a C5000000 		.4byte	0xc5
 2153 018e 10       		.byte	0x10
 2154 018f 0A       		.uleb128 0xa
 2155 0190 74040000 		.4byte	.LASF35
 2156 0194 05       		.byte	0x5
 2157 0195 5A       		.byte	0x5a
 2158 0196 C5000000 		.4byte	0xc5
 2159 019a 12       		.byte	0x12
 2160 019b 0A       		.uleb128 0xa
 2161 019c 19060000 		.4byte	.LASF36
 2162 01a0 05       		.byte	0x5
 2163 01a1 5B       		.byte	0x5b
 2164 01a2 C5000000 		.4byte	0xc5
 2165 01a6 14       		.byte	0x14
 2166 01a7 0A       		.uleb128 0xa
 2167 01a8 6C020000 		.4byte	.LASF37
 2168 01ac 05       		.byte	0x5
 2169 01ad 5C       		.byte	0x5c
 2170 01ae C5000000 		.4byte	0xc5
 2171 01b2 16       		.byte	0x16
 2172 01b3 0A       		.uleb128 0xa
 2173 01b4 B8000000 		.4byte	.LASF38
 2174 01b8 05       		.byte	0x5
 2175 01b9 5D       		.byte	0x5d
 2176 01ba C5000000 		.4byte	0xc5
 2177 01be 18       		.byte	0x18
 2178 01bf 0A       		.uleb128 0xa
 2179 01c0 5D040000 		.4byte	.LASF39
 2180 01c4 05       		.byte	0x5
 2181 01c5 5E       		.byte	0x5e
 2182 01c6 C5000000 		.4byte	0xc5
 2183 01ca 1A       		.byte	0x1a
 2184 01cb 0A       		.uleb128 0xa
 2185 01cc 3A030000 		.4byte	.LASF40
 2186 01d0 05       		.byte	0x5
 2187 01d1 5F       		.byte	0x5f
 2188 01d2 C5000000 		.4byte	0xc5
 2189 01d6 1C       		.byte	0x1c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 49


 2190 01d7 0A       		.uleb128 0xa
 2191 01d8 1E010000 		.4byte	.LASF41
 2192 01dc 05       		.byte	0x5
 2193 01dd 60       		.byte	0x60
 2194 01de C5000000 		.4byte	0xc5
 2195 01e2 1E       		.byte	0x1e
 2196 01e3 00       		.byte	0
 2197 01e4 0B       		.uleb128 0xb
 2198 01e5 BF050000 		.4byte	.LASF61
 2199 01e9 01       		.byte	0x1
 2200 01ea 28       		.byte	0x28
 2201 01eb 00000000 		.4byte	.LFB63
 2202 01ef 60010000 		.4byte	.LFE63-.LFB63
 2203 01f3 01       		.uleb128 0x1
 2204 01f4 9C       		.byte	0x9c
 2205 01f5 2E020000 		.4byte	0x22e
 2206 01f9 0C       		.uleb128 0xc
 2207 01fa 10000000 		.4byte	.LBB2
 2208 01fe 34010000 		.4byte	.LBE2-.LBB2
 2209 0202 0D       		.uleb128 0xd
 2210 0203 AB000000 		.4byte	.LASF42
 2211 0207 01       		.byte	0x1
 2212 0208 2E       		.byte	0x2e
 2213 0209 A1000000 		.4byte	0xa1
 2214 020d 02       		.uleb128 0x2
 2215 020e 91       		.byte	0x91
 2216 020f 76       		.sleb128 -10
 2217 0210 0D       		.uleb128 0xd
 2218 0211 9F040000 		.4byte	.LASF43
 2219 0215 01       		.byte	0x1
 2220 0216 30       		.byte	0x30
 2221 0217 2E020000 		.4byte	0x22e
 2222 021b 02       		.uleb128 0x2
 2223 021c 91       		.byte	0x91
 2224 021d 68       		.sleb128 -24
 2225 021e 0D       		.uleb128 0xd
 2226 021f 5A010000 		.4byte	.LASF44
 2227 0223 01       		.byte	0x1
 2228 0224 31       		.byte	0x31
 2229 0225 2E020000 		.4byte	0x22e
 2230 0229 02       		.uleb128 0x2
 2231 022a 91       		.byte	0x91
 2232 022b 5C       		.sleb128 -36
 2233 022c 00       		.byte	0
 2234 022d 00       		.byte	0
 2235 022e 0E       		.uleb128 0xe
 2236 022f 83000000 		.4byte	0x83
 2237 0233 3E020000 		.4byte	0x23e
 2238 0237 0F       		.uleb128 0xf
 2239 0238 76000000 		.4byte	0x76
 2240 023c 0B       		.byte	0xb
 2241 023d 00       		.byte	0
 2242 023e 10       		.uleb128 0x10
 2243 023f 3B010000 		.4byte	.LASF51
 2244 0243 01       		.byte	0x1
 2245 0244 A1       		.byte	0xa1
 2246 0245 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 50


 2247 0249 2C000000 		.4byte	.LFE64-.LFB64
 2248 024d 01       		.uleb128 0x1
 2249 024e 9C       		.byte	0x9c
 2250 024f 70020000 		.4byte	0x270
 2251 0253 11       		.uleb128 0x11
 2252 0254 83020000 		.4byte	.LASF45
 2253 0258 01       		.byte	0x1
 2254 0259 A1       		.byte	0xa1
 2255 025a 68000000 		.4byte	0x68
 2256 025e 02       		.uleb128 0x2
 2257 025f 91       		.byte	0x91
 2258 0260 74       		.sleb128 -12
 2259 0261 11       		.uleb128 0x11
 2260 0262 65040000 		.4byte	.LASF46
 2261 0266 01       		.byte	0x1
 2262 0267 A1       		.byte	0xa1
 2263 0268 68000000 		.4byte	0x68
 2264 026c 02       		.uleb128 0x2
 2265 026d 91       		.byte	0x91
 2266 026e 70       		.sleb128 -16
 2267 026f 00       		.byte	0
 2268 0270 12       		.uleb128 0x12
 2269 0271 C5040000 		.4byte	.LASF47
 2270 0275 01       		.byte	0x1
 2271 0276 A6       		.byte	0xa6
 2272 0277 00000000 		.4byte	.LFB65
 2273 027b 30000000 		.4byte	.LFE65-.LFB65
 2274 027f 01       		.uleb128 0x1
 2275 0280 9C       		.byte	0x9c
 2276 0281 12       		.uleb128 0x12
 2277 0282 68010000 		.4byte	.LASF48
 2278 0286 01       		.byte	0x1
 2279 0287 AE       		.byte	0xae
 2280 0288 00000000 		.4byte	.LFB66
 2281 028c 0E000000 		.4byte	.LFE66-.LFB66
 2282 0290 01       		.uleb128 0x1
 2283 0291 9C       		.byte	0x9c
 2284 0292 12       		.uleb128 0x12
 2285 0293 76010000 		.4byte	.LASF49
 2286 0297 01       		.byte	0x1
 2287 0298 B3       		.byte	0xb3
 2288 0299 00000000 		.4byte	.LFB67
 2289 029d 0E000000 		.4byte	.LFE67-.LFB67
 2290 02a1 01       		.uleb128 0x1
 2291 02a2 9C       		.byte	0x9c
 2292 02a3 12       		.uleb128 0x12
 2293 02a4 6A040000 		.4byte	.LASF50
 2294 02a8 01       		.byte	0x1
 2295 02a9 B8       		.byte	0xb8
 2296 02aa 00000000 		.4byte	.LFB68
 2297 02ae 0E000000 		.4byte	.LFE68-.LFB68
 2298 02b2 01       		.uleb128 0x1
 2299 02b3 9C       		.byte	0x9c
 2300 02b4 13       		.uleb128 0x13
 2301 02b5 BD030000 		.4byte	.LASF52
 2302 02b9 01       		.byte	0x1
 2303 02ba BF       		.byte	0xbf
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 51


 2304 02bb 00000000 		.4byte	.LFB69
 2305 02bf 98000000 		.4byte	.LFE69-.LFB69
 2306 02c3 01       		.uleb128 0x1
 2307 02c4 9C       		.byte	0x9c
 2308 02c5 D8020000 		.4byte	0x2d8
 2309 02c9 0D       		.uleb128 0xd
 2310 02ca 4B030000 		.4byte	.LASF53
 2311 02ce 01       		.byte	0x1
 2312 02cf C0       		.byte	0xc0
 2313 02d0 83000000 		.4byte	0x83
 2314 02d4 02       		.uleb128 0x2
 2315 02d5 91       		.byte	0x91
 2316 02d6 6F       		.sleb128 -17
 2317 02d7 00       		.byte	0
 2318 02d8 14       		.uleb128 0x14
 2319 02d9 8E050000 		.4byte	.LASF54
 2320 02dd 01       		.byte	0x1
 2321 02de D9       		.byte	0xd9
 2322 02df 00000000 		.4byte	.LFB70
 2323 02e3 0C000000 		.4byte	.LFE70-.LFB70
 2324 02e7 01       		.uleb128 0x1
 2325 02e8 9C       		.byte	0x9c
 2326 02e9 15       		.uleb128 0x15
 2327 02ea 7C040000 		.4byte	.LASF55
 2328 02ee 01       		.byte	0x1
 2329 02ef DF       		.byte	0xdf
 2330 02f0 00000000 		.4byte	.LFB71
 2331 02f4 2C000000 		.4byte	.LFE71-.LFB71
 2332 02f8 01       		.uleb128 0x1
 2333 02f9 9C       		.byte	0x9c
 2334 02fa 15       		.uleb128 0x15
 2335 02fb 2B010000 		.4byte	.LASF56
 2336 02ff 01       		.byte	0x1
 2337 0300 E8       		.byte	0xe8
 2338 0301 00000000 		.4byte	.LFB72
 2339 0305 B8000000 		.4byte	.LFE72-.LFB72
 2340 0309 01       		.uleb128 0x1
 2341 030a 9C       		.byte	0x9c
 2342 030b 15       		.uleb128 0x15
 2343 030c A2010000 		.4byte	.LASF57
 2344 0310 01       		.byte	0x1
 2345 0311 FD       		.byte	0xfd
 2346 0312 00000000 		.4byte	.LFB73
 2347 0316 5C000000 		.4byte	.LFE73-.LFB73
 2348 031a 01       		.uleb128 0x1
 2349 031b 9C       		.byte	0x9c
 2350 031c 16       		.uleb128 0x16
 2351 031d E9040000 		.4byte	.LASF58
 2352 0321 01       		.byte	0x1
 2353 0322 1201     		.2byte	0x112
 2354 0324 00000000 		.4byte	.LFB74
 2355 0328 34000000 		.4byte	.LFE74-.LFB74
 2356 032c 01       		.uleb128 0x1
 2357 032d 9C       		.byte	0x9c
 2358 032e 16       		.uleb128 0x16
 2359 032f F7010000 		.4byte	.LASF59
 2360 0333 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 52


 2361 0334 1C01     		.2byte	0x11c
 2362 0336 00000000 		.4byte	.LFB75
 2363 033a 1C000000 		.4byte	.LFE75-.LFB75
 2364 033e 01       		.uleb128 0x1
 2365 033f 9C       		.byte	0x9c
 2366 0340 16       		.uleb128 0x16
 2367 0341 91000000 		.4byte	.LASF60
 2368 0345 01       		.byte	0x1
 2369 0346 2501     		.2byte	0x125
 2370 0348 00000000 		.4byte	.LFB76
 2371 034c 0A000000 		.4byte	.LFE76-.LFB76
 2372 0350 01       		.uleb128 0x1
 2373 0351 9C       		.byte	0x9c
 2374 0352 17       		.uleb128 0x17
 2375 0353 32000000 		.4byte	.LASF62
 2376 0357 01       		.byte	0x1
 2377 0358 2A01     		.2byte	0x12a
 2378 035a 00000000 		.4byte	.LFB77
 2379 035e D8010000 		.4byte	.LFE77-.LFB77
 2380 0362 01       		.uleb128 0x1
 2381 0363 9C       		.byte	0x9c
 2382 0364 C5030000 		.4byte	0x3c5
 2383 0368 18       		.uleb128 0x18
 2384 0369 36020000 		.4byte	.LASF63
 2385 036d 01       		.byte	0x1
 2386 036e 3001     		.2byte	0x130
 2387 0370 C5030000 		.4byte	0x3c5
 2388 0374 03       		.uleb128 0x3
 2389 0375 91       		.byte	0x91
 2390 0376 A47F     		.sleb128 -92
 2391 0378 18       		.uleb128 0x18
 2392 0379 26000000 		.4byte	.LASF64
 2393 037d 01       		.byte	0x1
 2394 037e 3101     		.2byte	0x131
 2395 0380 C5030000 		.4byte	0x3c5
 2396 0384 03       		.uleb128 0x3
 2397 0385 91       		.byte	0x91
 2398 0386 E47E     		.sleb128 -156
 2399 0388 18       		.uleb128 0x18
 2400 0389 D7010000 		.4byte	.LASF65
 2401 038d 01       		.byte	0x1
 2402 038e 3801     		.2byte	0x138
 2403 0390 C5000000 		.4byte	0xc5
 2404 0394 02       		.uleb128 0x2
 2405 0395 91       		.byte	0x91
 2406 0396 6E       		.sleb128 -18
 2407 0397 18       		.uleb128 0x18
 2408 0398 53030000 		.4byte	.LASF66
 2409 039c 01       		.byte	0x1
 2410 039d 3901     		.2byte	0x139
 2411 039f C5000000 		.4byte	0xc5
 2412 03a3 02       		.uleb128 0x2
 2413 03a4 91       		.byte	0x91
 2414 03a5 6C       		.sleb128 -20
 2415 03a6 18       		.uleb128 0x18
 2416 03a7 79020000 		.4byte	.LASF67
 2417 03ab 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 53


 2418 03ac 3B01     		.2byte	0x13b
 2419 03ae 68000000 		.4byte	0x68
 2420 03b2 02       		.uleb128 0x2
 2421 03b3 91       		.byte	0x91
 2422 03b4 68       		.sleb128 -24
 2423 03b5 18       		.uleb128 0x18
 2424 03b6 97050000 		.4byte	.LASF68
 2425 03ba 01       		.byte	0x1
 2426 03bb 3C01     		.2byte	0x13c
 2427 03bd 68000000 		.4byte	0x68
 2428 03c1 02       		.uleb128 0x2
 2429 03c2 91       		.byte	0x91
 2430 03c3 64       		.sleb128 -28
 2431 03c4 00       		.byte	0
 2432 03c5 0E       		.uleb128 0xe
 2433 03c6 83000000 		.4byte	0x83
 2434 03ca D5030000 		.4byte	0x3d5
 2435 03ce 0F       		.uleb128 0xf
 2436 03cf 76000000 		.4byte	0x76
 2437 03d3 3F       		.byte	0x3f
 2438 03d4 00       		.byte	0
 2439 03d5 17       		.uleb128 0x17
 2440 03d6 2C020000 		.4byte	.LASF69
 2441 03da 01       		.byte	0x1
 2442 03db 4A01     		.2byte	0x14a
 2443 03dd 00000000 		.4byte	.LFB78
 2444 03e1 C0000000 		.4byte	.LFE78-.LFB78
 2445 03e5 01       		.uleb128 0x1
 2446 03e6 9C       		.byte	0x9c
 2447 03e7 23040000 		.4byte	0x423
 2448 03eb 0C       		.uleb128 0xc
 2449 03ec 0E000000 		.4byte	.LBB3
 2450 03f0 8E000000 		.4byte	.LBE3-.LBB3
 2451 03f4 18       		.uleb128 0x18
 2452 03f5 C9010000 		.4byte	.LASF70
 2453 03f9 01       		.byte	0x1
 2454 03fa 5301     		.2byte	0x153
 2455 03fc D1000000 		.4byte	0xd1
 2456 0400 02       		.uleb128 0x2
 2457 0401 91       		.byte	0x91
 2458 0402 74       		.sleb128 -12
 2459 0403 18       		.uleb128 0x18
 2460 0404 78030000 		.4byte	.LASF71
 2461 0408 01       		.byte	0x1
 2462 0409 5401     		.2byte	0x154
 2463 040b C5000000 		.4byte	0xc5
 2464 040f 02       		.uleb128 0x2
 2465 0410 91       		.byte	0x91
 2466 0411 72       		.sleb128 -14
 2467 0412 18       		.uleb128 0x18
 2468 0413 FE010000 		.4byte	.LASF72
 2469 0417 01       		.byte	0x1
 2470 0418 5901     		.2byte	0x159
 2471 041a 23040000 		.4byte	0x423
 2472 041e 02       		.uleb128 0x2
 2473 041f 91       		.byte	0x91
 2474 0420 60       		.sleb128 -32
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 54


 2475 0421 00       		.byte	0
 2476 0422 00       		.byte	0
 2477 0423 0E       		.uleb128 0xe
 2478 0424 83000000 		.4byte	0x83
 2479 0428 33040000 		.4byte	0x433
 2480 042c 0F       		.uleb128 0xf
 2481 042d 76000000 		.4byte	0x76
 2482 0431 0F       		.byte	0xf
 2483 0432 00       		.byte	0
 2484 0433 17       		.uleb128 0x17
 2485 0434 F9050000 		.4byte	.LASF73
 2486 0438 01       		.byte	0x1
 2487 0439 6001     		.2byte	0x160
 2488 043b 00000000 		.4byte	.LFB79
 2489 043f B8000000 		.4byte	.LFE79-.LFB79
 2490 0443 01       		.uleb128 0x1
 2491 0444 9C       		.byte	0x9c
 2492 0445 63040000 		.4byte	0x463
 2493 0449 0C       		.uleb128 0xc
 2494 044a 0E000000 		.4byte	.LBB4
 2495 044e 86000000 		.4byte	.LBE4-.LBB4
 2496 0452 18       		.uleb128 0x18
 2497 0453 38040000 		.4byte	.LASF74
 2498 0457 01       		.byte	0x1
 2499 0458 6401     		.2byte	0x164
 2500 045a 23040000 		.4byte	0x423
 2501 045e 02       		.uleb128 0x2
 2502 045f 91       		.byte	0x91
 2503 0460 68       		.sleb128 -24
 2504 0461 00       		.byte	0
 2505 0462 00       		.byte	0
 2506 0463 19       		.uleb128 0x19
 2507 0464 89050000 		.4byte	.LASF75
 2508 0468 01       		.byte	0x1
 2509 0469 7501     		.2byte	0x175
 2510 046b 68000000 		.4byte	0x68
 2511 046f 00000000 		.4byte	.LFB80
 2512 0473 B0000000 		.4byte	.LFE80-.LFB80
 2513 0477 01       		.uleb128 0x1
 2514 0478 9C       		.byte	0x9c
 2515 0479 1A       		.uleb128 0x1a
 2516 047a 11010000 		.4byte	.LASF76
 2517 047e 01       		.byte	0x1
 2518 047f D001     		.2byte	0x1d0
 2519 0481 00000000 		.4byte	.LFB81
 2520 0485 68000000 		.4byte	.LFE81-.LFB81
 2521 0489 01       		.uleb128 0x1
 2522 048a 9C       		.byte	0x9c
 2523 048b B6040000 		.4byte	0x4b6
 2524 048f 1B       		.uleb128 0x1b
 2525 0490 7300     		.ascii	"s\000"
 2526 0492 01       		.byte	0x1
 2527 0493 D001     		.2byte	0x1d0
 2528 0495 7D000000 		.4byte	0x7d
 2529 0499 02       		.uleb128 0x2
 2530 049a 91       		.byte	0x91
 2531 049b 6C       		.sleb128 -20
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 55


 2532 049c 0C       		.uleb128 0xc
 2533 049d 10000000 		.4byte	.LBB5
 2534 04a1 48000000 		.4byte	.LBE5-.LBB5
 2535 04a5 1C       		.uleb128 0x1c
 2536 04a6 636E7400 		.ascii	"cnt\000"
 2537 04aa 01       		.byte	0x1
 2538 04ab D701     		.2byte	0x1d7
 2539 04ad AD000000 		.4byte	0xad
 2540 04b1 02       		.uleb128 0x2
 2541 04b2 91       		.byte	0x91
 2542 04b3 74       		.sleb128 -12
 2543 04b4 00       		.byte	0
 2544 04b5 00       		.byte	0
 2545 04b6 1A       		.uleb128 0x1a
 2546 04b7 4D050000 		.4byte	.LASF77
 2547 04bb 01       		.byte	0x1
 2548 04bc E601     		.2byte	0x1e6
 2549 04be 00000000 		.4byte	.LFB82
 2550 04c2 50000000 		.4byte	.LFE82-.LFB82
 2551 04c6 01       		.uleb128 0x1
 2552 04c7 9C       		.byte	0x9c
 2553 04c8 F3040000 		.4byte	0x4f3
 2554 04cc 1B       		.uleb128 0x1b
 2555 04cd 6300     		.ascii	"c\000"
 2556 04cf 01       		.byte	0x1
 2557 04d0 E601     		.2byte	0x1e6
 2558 04d2 83000000 		.4byte	0x83
 2559 04d6 02       		.uleb128 0x2
 2560 04d7 91       		.byte	0x91
 2561 04d8 6F       		.sleb128 -17
 2562 04d9 0C       		.uleb128 0xc
 2563 04da 12000000 		.4byte	.LBB6
 2564 04de 2E000000 		.4byte	.LBE6-.LBB6
 2565 04e2 1C       		.uleb128 0x1c
 2566 04e3 636E7400 		.ascii	"cnt\000"
 2567 04e7 01       		.byte	0x1
 2568 04e8 EA01     		.2byte	0x1ea
 2569 04ea AD000000 		.4byte	0xad
 2570 04ee 02       		.uleb128 0x2
 2571 04ef 91       		.byte	0x91
 2572 04f0 74       		.sleb128 -12
 2573 04f1 00       		.byte	0
 2574 04f2 00       		.byte	0
 2575 04f3 17       		.uleb128 0x17
 2576 04f4 09020000 		.4byte	.LASF78
 2577 04f8 01       		.byte	0x1
 2578 04f9 F701     		.2byte	0x1f7
 2579 04fb 00000000 		.4byte	.LFB83
 2580 04ff 3A000000 		.4byte	.LFE83-.LFB83
 2581 0503 01       		.uleb128 0x1
 2582 0504 9C       		.byte	0x9c
 2583 0505 17050000 		.4byte	0x517
 2584 0509 1C       		.uleb128 0x1c
 2585 050a 6300     		.ascii	"c\000"
 2586 050c 01       		.byte	0x1
 2587 050d F901     		.2byte	0x1f9
 2588 050f 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 56


 2589 0513 02       		.uleb128 0x2
 2590 0514 91       		.byte	0x91
 2591 0515 77       		.sleb128 -9
 2592 0516 00       		.byte	0
 2593 0517 1D       		.uleb128 0x1d
 2594 0518 2B040000 		.4byte	.LASF79
 2595 051c 06       		.byte	0x6
 2596 051d 9606     		.2byte	0x696
 2597 051f 23050000 		.4byte	0x523
 2598 0523 1E       		.uleb128 0x1e
 2599 0524 8A000000 		.4byte	0x8a
 2600 0528 1F       		.uleb128 0x1f
 2601 0529 747300   		.ascii	"ts\000"
 2602 052c 05       		.byte	0x5
 2603 052d 10       		.byte	0x10
 2604 052e 95000000 		.4byte	0x95
 2605 0532 05       		.uleb128 0x5
 2606 0533 03       		.byte	0x3
 2607 0534 00000000 		.4byte	ts
 2608 0538 20       		.uleb128 0x20
 2609 0539 F6040000 		.4byte	.LASF80
 2610 053d 05       		.byte	0x5
 2611 053e 11       		.byte	0x11
 2612 053f A1000000 		.4byte	0xa1
 2613 0543 05       		.uleb128 0x5
 2614 0544 03       		.byte	0x3
 2615 0545 00000000 		.4byte	ts_enc
 2616 0549 20       		.uleb128 0x20
 2617 054a 44040000 		.4byte	.LASF81
 2618 054e 05       		.byte	0x5
 2619 054f 12       		.byte	0x12
 2620 0550 A1000000 		.4byte	0xa1
 2621 0554 05       		.uleb128 0x5
 2622 0555 03       		.byte	0x3
 2623 0556 00000000 		.4byte	ts_update
 2624 055a 20       		.uleb128 0x20
 2625 055b 5E030000 		.4byte	.LASF82
 2626 055f 05       		.byte	0x5
 2627 0560 13       		.byte	0x13
 2628 0561 A1000000 		.4byte	0xa1
 2629 0565 05       		.uleb128 0x5
 2630 0566 03       		.byte	0x3
 2631 0567 00000000 		.4byte	ts_speed
 2632 056b 20       		.uleb128 0x20
 2633 056c 21020000 		.4byte	.LASF83
 2634 0570 05       		.byte	0x5
 2635 0571 14       		.byte	0x14
 2636 0572 A1000000 		.4byte	0xa1
 2637 0576 05       		.uleb128 0x5
 2638 0577 03       		.byte	0x3
 2639 0578 00000000 		.4byte	ts_display
 2640 057c 20       		.uleb128 0x20
 2641 057d E1010000 		.4byte	.LASF84
 2642 0581 05       		.byte	0x5
 2643 0582 16       		.byte	0x16
 2644 0583 95000000 		.4byte	0x95
 2645 0587 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 57


 2646 0588 03       		.byte	0x3
 2647 0589 00000000 		.4byte	flag_ts_enc
 2648 058d 20       		.uleb128 0x20
 2649 058e BA010000 		.4byte	.LASF85
 2650 0592 05       		.byte	0x5
 2651 0593 17       		.byte	0x17
 2652 0594 95000000 		.4byte	0x95
 2653 0598 05       		.uleb128 0x5
 2654 0599 03       		.byte	0x3
 2655 059a 00000000 		.4byte	flag_ts_update
 2656 059e 20       		.uleb128 0x20
 2657 059f D3030000 		.4byte	.LASF86
 2658 05a3 05       		.byte	0x5
 2659 05a4 18       		.byte	0x18
 2660 05a5 95000000 		.4byte	0x95
 2661 05a9 05       		.uleb128 0x5
 2662 05aa 03       		.byte	0x3
 2663 05ab 00000000 		.4byte	flag_ts_speed
 2664 05af 20       		.uleb128 0x20
 2665 05b0 07050000 		.4byte	.LASF87
 2666 05b4 05       		.byte	0x5
 2667 05b5 19       		.byte	0x19
 2668 05b6 95000000 		.4byte	0x95
 2669 05ba 05       		.uleb128 0x5
 2670 05bb 03       		.byte	0x3
 2671 05bc 00000000 		.4byte	flag_ts_display
 2672 05c0 20       		.uleb128 0x20
 2673 05c1 F0030000 		.4byte	.LASF88
 2674 05c5 05       		.byte	0x5
 2675 05c6 1C       		.byte	0x1c
 2676 05c7 95000000 		.4byte	0x95
 2677 05cb 05       		.uleb128 0x5
 2678 05cc 03       		.byte	0x3
 2679 05cd 00000000 		.4byte	flag_rx
 2680 05d1 20       		.uleb128 0x20
 2681 05d2 96010000 		.4byte	.LASF89
 2682 05d6 05       		.byte	0x5
 2683 05d7 1D       		.byte	0x1d
 2684 05d8 95000000 		.4byte	0x95
 2685 05dc 05       		.uleb128 0x5
 2686 05dd 03       		.byte	0x3
 2687 05de 00000000 		.4byte	flag_packet
 2688 05e2 20       		.uleb128 0x20
 2689 05e3 0A060000 		.4byte	.LASF90
 2690 05e7 05       		.byte	0x5
 2691 05e8 1E       		.byte	0x1e
 2692 05e9 95000000 		.4byte	0x95
 2693 05ed 05       		.uleb128 0x5
 2694 05ee 03       		.byte	0x3
 2695 05ef 00000000 		.4byte	flag_KB_string
 2696 05f3 20       		.uleb128 0x20
 2697 05f4 E1030000 		.4byte	.LASF91
 2698 05f8 05       		.byte	0x5
 2699 05f9 20       		.byte	0x20
 2700 05fa 95000000 		.4byte	0x95
 2701 05fe 05       		.uleb128 0x5
 2702 05ff 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 58


 2703 0600 00000000 		.4byte	dataready_flag
 2704 0604 20       		.uleb128 0x20
 2705 0605 D8000000 		.4byte	.LASF92
 2706 0609 05       		.byte	0x5
 2707 060a 22       		.byte	0x22
 2708 060b 95000000 		.4byte	0x95
 2709 060f 05       		.uleb128 0x5
 2710 0610 03       		.byte	0x3
 2711 0611 00000000 		.4byte	flag_rf_transmission_active
 2712 0615 20       		.uleb128 0x20
 2713 0616 F4000000 		.4byte	.LASF93
 2714 061a 05       		.byte	0x5
 2715 061b 23       		.byte	0x23
 2716 061c 95000000 		.4byte	0x95
 2717 0620 05       		.uleb128 0x5
 2718 0621 03       		.byte	0x3
 2719 0622 00000000 		.4byte	flag_print_rf
 2720 0626 20       		.uleb128 0x20
 2721 0627 98030000 		.4byte	.LASF94
 2722 062b 05       		.byte	0x5
 2723 062c 25       		.byte	0x25
 2724 062d 95000000 		.4byte	0x95
 2725 0631 05       		.uleb128 0x5
 2726 0632 03       		.byte	0x3
 2727 0633 00000000 		.4byte	flag_receive_ADC
 2728 0637 20       		.uleb128 0x20
 2729 0638 02040000 		.4byte	.LASF95
 2730 063c 05       		.byte	0x5
 2731 063d 26       		.byte	0x26
 2732 063e C5000000 		.4byte	0xc5
 2733 0642 05       		.uleb128 0x5
 2734 0643 03       		.byte	0x3
 2735 0644 00000000 		.4byte	adc_result
 2736 0648 20       		.uleb128 0x20
 2737 0649 00000000 		.4byte	.LASF96
 2738 064d 05       		.byte	0x5
 2739 064e 28       		.byte	0x28
 2740 064f 95000000 		.4byte	0x95
 2741 0653 05       		.uleb128 0x5
 2742 0654 03       		.byte	0x3
 2743 0655 00000000 		.4byte	direction
 2744 0659 20       		.uleb128 0x20
 2745 065a 0D040000 		.4byte	.LASF97
 2746 065e 05       		.byte	0x5
 2747 065f 2C       		.byte	0x2c
 2748 0660 95000000 		.4byte	0x95
 2749 0664 05       		.uleb128 0x5
 2750 0665 03       		.byte	0x3
 2751 0666 00000000 		.4byte	flag_calc_wheelspeed
 2752 066a 20       		.uleb128 0x20
 2753 066b C0000000 		.4byte	.LASF98
 2754 066f 05       		.byte	0x5
 2755 0670 2D       		.byte	0x2d
 2756 0671 C5000000 		.4byte	0xc5
 2757 0675 05       		.uleb128 0x5
 2758 0676 03       		.byte	0x3
 2759 0677 00000000 		.4byte	quad_count1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 59


 2760 067b 20       		.uleb128 0x20
 2761 067c CC000000 		.4byte	.LASF99
 2762 0680 05       		.byte	0x5
 2763 0681 2E       		.byte	0x2e
 2764 0682 C5000000 		.4byte	0xc5
 2765 0686 05       		.uleb128 0x5
 2766 0687 03       		.byte	0x3
 2767 0688 00000000 		.4byte	quad_count2
 2768 068c 20       		.uleb128 0x20
 2769 068d 2B050000 		.4byte	.LASF100
 2770 0691 05       		.byte	0x5
 2771 0692 2F       		.byte	0x2f
 2772 0693 C5000000 		.4byte	0xc5
 2773 0697 05       		.uleb128 0x5
 2774 0698 03       		.byte	0x3
 2775 0699 00000000 		.4byte	last_quad_count1
 2776 069d 20       		.uleb128 0x20
 2777 069e 3C050000 		.4byte	.LASF101
 2778 06a2 05       		.byte	0x5
 2779 06a3 30       		.byte	0x30
 2780 06a4 C5000000 		.4byte	0xc5
 2781 06a8 05       		.uleb128 0x5
 2782 06a9 03       		.byte	0x3
 2783 06aa 00000000 		.4byte	last_quad_count2
 2784 06ae 20       		.uleb128 0x20
 2785 06af 10000000 		.4byte	.LASF102
 2786 06b3 05       		.byte	0x5
 2787 06b4 31       		.byte	0x31
 2788 06b5 C5000000 		.4byte	0xc5
 2789 06b9 05       		.uleb128 0x5
 2790 06ba 03       		.byte	0x3
 2791 06bb 00000000 		.4byte	quad_diff1
 2792 06bf 20       		.uleb128 0x20
 2793 06c0 1B000000 		.4byte	.LASF103
 2794 06c4 05       		.byte	0x5
 2795 06c5 32       		.byte	0x32
 2796 06c6 C5000000 		.4byte	0xc5
 2797 06ca 05       		.uleb128 0x5
 2798 06cb 03       		.byte	0x3
 2799 06cc 00000000 		.4byte	quad_diff2
 2800 06d0 20       		.uleb128 0x20
 2801 06d1 50000000 		.4byte	.LASF104
 2802 06d5 05       		.byte	0x5
 2803 06d6 35       		.byte	0x35
 2804 06d7 C5000000 		.4byte	0xc5
 2805 06db 05       		.uleb128 0x5
 2806 06dc 03       		.byte	0x3
 2807 06dd 00000000 		.4byte	start_turn_count
 2808 06e1 20       		.uleb128 0x20
 2809 06e2 C3030000 		.4byte	.LASF105
 2810 06e6 05       		.byte	0x5
 2811 06e7 38       		.byte	0x38
 2812 06e8 C5000000 		.4byte	0xc5
 2813 06ec 05       		.uleb128 0x5
 2814 06ed 03       		.byte	0x3
 2815 06ee 00000000 		.4byte	left_duty_cycle
 2816 06f2 20       		.uleb128 0x20
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 60


 2817 06f3 AE050000 		.4byte	.LASF106
 2818 06f7 05       		.byte	0x5
 2819 06f8 39       		.byte	0x39
 2820 06f9 C5000000 		.4byte	0xc5
 2821 06fd 05       		.uleb128 0x5
 2822 06fe 03       		.byte	0x3
 2823 06ff 00000000 		.4byte	right_duty_cycle
 2824 0703 20       		.uleb128 0x20
 2825 0704 4E040000 		.4byte	.LASF107
 2826 0708 05       		.byte	0x5
 2827 0709 3C       		.byte	0x3c
 2828 070a C5000000 		.4byte	0xc5
 2829 070e 05       		.uleb128 0x5
 2830 070f 03       		.byte	0x3
 2831 0710 00000000 		.4byte	leftSpeedLimit
 2832 0714 20       		.uleb128 0x20
 2833 0715 50020000 		.4byte	.LASF108
 2834 0719 05       		.byte	0x5
 2835 071a 3D       		.byte	0x3d
 2836 071b C5000000 		.4byte	0xc5
 2837 071f 05       		.uleb128 0x5
 2838 0720 03       		.byte	0x3
 2839 0721 00000000 		.4byte	rightSpeedLimit
 2840 0725 20       		.uleb128 0x20
 2841 0726 FD040000 		.4byte	.LASF109
 2842 072a 05       		.byte	0x5
 2843 072b 40       		.byte	0x40
 2844 072c 95000000 		.4byte	0x95
 2845 0730 05       		.uleb128 0x5
 2846 0731 03       		.byte	0x3
 2847 0732 00000000 		.4byte	brakeFlag
 2848 0736 20       		.uleb128 0x20
 2849 0737 B1010000 		.4byte	.LASF110
 2850 073b 05       		.byte	0x5
 2851 073c 41       		.byte	0x41
 2852 073d 95000000 		.4byte	0x95
 2853 0741 05       		.uleb128 0x5
 2854 0742 03       		.byte	0x3
 2855 0743 00000000 		.4byte	portOpen
 2856 0747 20       		.uleb128 0x20
 2857 0748 44000000 		.4byte	.LASF111
 2858 074c 05       		.byte	0x5
 2859 074d 44       		.byte	0x44
 2860 074e C5000000 		.4byte	0xc5
 2861 0752 05       		.uleb128 0x5
 2862 0753 03       		.byte	0x3
 2863 0754 00000000 		.4byte	prevVoltage
 2864 0758 20       		.uleb128 0x20
 2865 0759 9E000000 		.4byte	.LASF112
 2866 075d 05       		.byte	0x5
 2867 075e 45       		.byte	0x45
 2868 075f C5000000 		.4byte	0xc5
 2869 0763 05       		.uleb128 0x5
 2870 0764 03       		.byte	0x3
 2871 0765 00000000 		.4byte	prevVoltage2
 2872 0769 20       		.uleb128 0x20
 2873 076a 1D050000 		.4byte	.LASF113
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 61


 2874 076e 05       		.byte	0x5
 2875 076f 4B       		.byte	0x4b
 2876 0770 C5030000 		.4byte	0x3c5
 2877 0774 05       		.uleb128 0x5
 2878 0775 03       		.byte	0x3
 2879 0776 00000000 		.4byte	displaystring
 2880 077a 20       		.uleb128 0x20
 2881 077b E4040000 		.4byte	.LASF114
 2882 077f 05       		.byte	0x5
 2883 0780 4C       		.byte	0x4c
 2884 0781 C5030000 		.4byte	0x3c5
 2885 0785 05       		.uleb128 0x5
 2886 0786 03       		.byte	0x3
 2887 0787 00000000 		.4byte	line
 2888 078b 20       		.uleb128 0x20
 2889 078c D0040000 		.4byte	.LASF115
 2890 0790 05       		.byte	0x5
 2891 0791 4C       		.byte	0x4c
 2892 0792 C5030000 		.4byte	0x3c5
 2893 0796 05       		.uleb128 0x5
 2894 0797 03       		.byte	0x3
 2895 0798 00000000 		.4byte	entry
 2896 079c 0E       		.uleb128 0xe
 2897 079d 95000000 		.4byte	0x95
 2898 07a1 AC070000 		.4byte	0x7ac
 2899 07a5 0F       		.uleb128 0xf
 2900 07a6 76000000 		.4byte	0x76
 2901 07aa 3F       		.byte	0x3f
 2902 07ab 00       		.byte	0
 2903 07ac 20       		.uleb128 0x20
 2904 07ad 44010000 		.4byte	.LASF116
 2905 07b1 05       		.byte	0x5
 2906 07b2 4D       		.byte	0x4d
 2907 07b3 9C070000 		.4byte	0x79c
 2908 07b7 05       		.uleb128 0x5
 2909 07b8 03       		.byte	0x3
 2910 07b9 00000000 		.4byte	usbBuffer
 2911 07bd 20       		.uleb128 0x20
 2912 07be 97020000 		.4byte	.LASF117
 2913 07c2 05       		.byte	0x5
 2914 07c3 62       		.byte	0x62
 2915 07c4 0B010000 		.4byte	0x10b
 2916 07c8 05       		.uleb128 0x5
 2917 07c9 03       		.byte	0x3
 2918 07ca 00000000 		.4byte	buffer_state
 2919 07ce 20       		.uleb128 0x20
 2920 07cf 7E000000 		.4byte	.LASF118
 2921 07d3 05       		.byte	0x5
 2922 07d4 63       		.byte	0x63
 2923 07d5 0B010000 		.4byte	0x10b
 2924 07d9 05       		.uleb128 0x5
 2925 07da 03       		.byte	0x3
 2926 07db 00000000 		.4byte	system_state
 2927 07df 20       		.uleb128 0x20
 2928 07e0 02010000 		.4byte	.LASF119
 2929 07e4 05       		.byte	0x5
 2930 07e5 65       		.byte	0x65
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 62


 2931 07e6 E6000000 		.4byte	0xe6
 2932 07ea 05       		.uleb128 0x5
 2933 07eb 03       		.byte	0x3
 2934 07ec 00000000 		.4byte	movement_state
 2935 07f0 20       		.uleb128 0x20
 2936 07f1 ED010000 		.4byte	.LASF120
 2937 07f5 05       		.byte	0x5
 2938 07f6 67       		.byte	0x67
 2939 07f7 95000000 		.4byte	0x95
 2940 07fb 05       		.uleb128 0x5
 2941 07fc 03       		.byte	0x3
 2942 07fd 00000000 		.4byte	byteCount
 2943 0801 0E       		.uleb128 0xe
 2944 0802 83000000 		.4byte	0x83
 2945 0806 11080000 		.4byte	0x811
 2946 080a 0F       		.uleb128 0xf
 2947 080b 76000000 		.4byte	0x76
 2948 080f 01       		.byte	0x1
 2949 0810 00       		.byte	0
 2950 0811 20       		.uleb128 0x20
 2951 0812 B3040000 		.4byte	.LASF121
 2952 0816 05       		.byte	0x5
 2953 0817 68       		.byte	0x68
 2954 0818 01080000 		.4byte	0x801
 2955 081c 05       		.uleb128 0x5
 2956 081d 03       		.byte	0x3
 2957 081e 00000000 		.4byte	packet
 2958 0822 00       		.byte	0
 2959              		.section	.debug_abbrev,"",%progbits
 2960              	.Ldebug_abbrev0:
 2961 0000 01       		.uleb128 0x1
 2962 0001 11       		.uleb128 0x11
 2963 0002 01       		.byte	0x1
 2964 0003 25       		.uleb128 0x25
 2965 0004 0E       		.uleb128 0xe
 2966 0005 13       		.uleb128 0x13
 2967 0006 0B       		.uleb128 0xb
 2968 0007 03       		.uleb128 0x3
 2969 0008 0E       		.uleb128 0xe
 2970 0009 1B       		.uleb128 0x1b
 2971 000a 0E       		.uleb128 0xe
 2972 000b 55       		.uleb128 0x55
 2973 000c 17       		.uleb128 0x17
 2974 000d 11       		.uleb128 0x11
 2975 000e 01       		.uleb128 0x1
 2976 000f 10       		.uleb128 0x10
 2977 0010 17       		.uleb128 0x17
 2978 0011 00       		.byte	0
 2979 0012 00       		.byte	0
 2980 0013 02       		.uleb128 0x2
 2981 0014 24       		.uleb128 0x24
 2982 0015 00       		.byte	0
 2983 0016 0B       		.uleb128 0xb
 2984 0017 0B       		.uleb128 0xb
 2985 0018 3E       		.uleb128 0x3e
 2986 0019 0B       		.uleb128 0xb
 2987 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 63


 2988 001b 0E       		.uleb128 0xe
 2989 001c 00       		.byte	0
 2990 001d 00       		.byte	0
 2991 001e 03       		.uleb128 0x3
 2992 001f 16       		.uleb128 0x16
 2993 0020 00       		.byte	0
 2994 0021 03       		.uleb128 0x3
 2995 0022 0E       		.uleb128 0xe
 2996 0023 3A       		.uleb128 0x3a
 2997 0024 0B       		.uleb128 0xb
 2998 0025 3B       		.uleb128 0x3b
 2999 0026 0B       		.uleb128 0xb
 3000 0027 49       		.uleb128 0x49
 3001 0028 13       		.uleb128 0x13
 3002 0029 00       		.byte	0
 3003 002a 00       		.byte	0
 3004 002b 04       		.uleb128 0x4
 3005 002c 24       		.uleb128 0x24
 3006 002d 00       		.byte	0
 3007 002e 0B       		.uleb128 0xb
 3008 002f 0B       		.uleb128 0xb
 3009 0030 3E       		.uleb128 0x3e
 3010 0031 0B       		.uleb128 0xb
 3011 0032 03       		.uleb128 0x3
 3012 0033 08       		.uleb128 0x8
 3013 0034 00       		.byte	0
 3014 0035 00       		.byte	0
 3015 0036 05       		.uleb128 0x5
 3016 0037 0F       		.uleb128 0xf
 3017 0038 00       		.byte	0
 3018 0039 0B       		.uleb128 0xb
 3019 003a 0B       		.uleb128 0xb
 3020 003b 49       		.uleb128 0x49
 3021 003c 13       		.uleb128 0x13
 3022 003d 00       		.byte	0
 3023 003e 00       		.byte	0
 3024 003f 06       		.uleb128 0x6
 3025 0040 16       		.uleb128 0x16
 3026 0041 00       		.byte	0
 3027 0042 03       		.uleb128 0x3
 3028 0043 0E       		.uleb128 0xe
 3029 0044 3A       		.uleb128 0x3a
 3030 0045 0B       		.uleb128 0xb
 3031 0046 3B       		.uleb128 0x3b
 3032 0047 05       		.uleb128 0x5
 3033 0048 49       		.uleb128 0x49
 3034 0049 13       		.uleb128 0x13
 3035 004a 00       		.byte	0
 3036 004b 00       		.byte	0
 3037 004c 07       		.uleb128 0x7
 3038 004d 04       		.uleb128 0x4
 3039 004e 01       		.byte	0x1
 3040 004f 03       		.uleb128 0x3
 3041 0050 0E       		.uleb128 0xe
 3042 0051 0B       		.uleb128 0xb
 3043 0052 0B       		.uleb128 0xb
 3044 0053 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 64


 3045 0054 0B       		.uleb128 0xb
 3046 0055 3B       		.uleb128 0x3b
 3047 0056 0B       		.uleb128 0xb
 3048 0057 01       		.uleb128 0x1
 3049 0058 13       		.uleb128 0x13
 3050 0059 00       		.byte	0
 3051 005a 00       		.byte	0
 3052 005b 08       		.uleb128 0x8
 3053 005c 28       		.uleb128 0x28
 3054 005d 00       		.byte	0
 3055 005e 03       		.uleb128 0x3
 3056 005f 0E       		.uleb128 0xe
 3057 0060 1C       		.uleb128 0x1c
 3058 0061 0D       		.uleb128 0xd
 3059 0062 00       		.byte	0
 3060 0063 00       		.byte	0
 3061 0064 09       		.uleb128 0x9
 3062 0065 13       		.uleb128 0x13
 3063 0066 01       		.byte	0x1
 3064 0067 03       		.uleb128 0x3
 3065 0068 0E       		.uleb128 0xe
 3066 0069 0B       		.uleb128 0xb
 3067 006a 0B       		.uleb128 0xb
 3068 006b 3A       		.uleb128 0x3a
 3069 006c 0B       		.uleb128 0xb
 3070 006d 3B       		.uleb128 0x3b
 3071 006e 0B       		.uleb128 0xb
 3072 006f 01       		.uleb128 0x1
 3073 0070 13       		.uleb128 0x13
 3074 0071 00       		.byte	0
 3075 0072 00       		.byte	0
 3076 0073 0A       		.uleb128 0xa
 3077 0074 0D       		.uleb128 0xd
 3078 0075 00       		.byte	0
 3079 0076 03       		.uleb128 0x3
 3080 0077 0E       		.uleb128 0xe
 3081 0078 3A       		.uleb128 0x3a
 3082 0079 0B       		.uleb128 0xb
 3083 007a 3B       		.uleb128 0x3b
 3084 007b 0B       		.uleb128 0xb
 3085 007c 49       		.uleb128 0x49
 3086 007d 13       		.uleb128 0x13
 3087 007e 38       		.uleb128 0x38
 3088 007f 0B       		.uleb128 0xb
 3089 0080 00       		.byte	0
 3090 0081 00       		.byte	0
 3091 0082 0B       		.uleb128 0xb
 3092 0083 2E       		.uleb128 0x2e
 3093 0084 01       		.byte	0x1
 3094 0085 3F       		.uleb128 0x3f
 3095 0086 19       		.uleb128 0x19
 3096 0087 03       		.uleb128 0x3
 3097 0088 0E       		.uleb128 0xe
 3098 0089 3A       		.uleb128 0x3a
 3099 008a 0B       		.uleb128 0xb
 3100 008b 3B       		.uleb128 0x3b
 3101 008c 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 65


 3102 008d 11       		.uleb128 0x11
 3103 008e 01       		.uleb128 0x1
 3104 008f 12       		.uleb128 0x12
 3105 0090 06       		.uleb128 0x6
 3106 0091 40       		.uleb128 0x40
 3107 0092 18       		.uleb128 0x18
 3108 0093 9742     		.uleb128 0x2117
 3109 0095 19       		.uleb128 0x19
 3110 0096 01       		.uleb128 0x1
 3111 0097 13       		.uleb128 0x13
 3112 0098 00       		.byte	0
 3113 0099 00       		.byte	0
 3114 009a 0C       		.uleb128 0xc
 3115 009b 0B       		.uleb128 0xb
 3116 009c 01       		.byte	0x1
 3117 009d 11       		.uleb128 0x11
 3118 009e 01       		.uleb128 0x1
 3119 009f 12       		.uleb128 0x12
 3120 00a0 06       		.uleb128 0x6
 3121 00a1 00       		.byte	0
 3122 00a2 00       		.byte	0
 3123 00a3 0D       		.uleb128 0xd
 3124 00a4 34       		.uleb128 0x34
 3125 00a5 00       		.byte	0
 3126 00a6 03       		.uleb128 0x3
 3127 00a7 0E       		.uleb128 0xe
 3128 00a8 3A       		.uleb128 0x3a
 3129 00a9 0B       		.uleb128 0xb
 3130 00aa 3B       		.uleb128 0x3b
 3131 00ab 0B       		.uleb128 0xb
 3132 00ac 49       		.uleb128 0x49
 3133 00ad 13       		.uleb128 0x13
 3134 00ae 02       		.uleb128 0x2
 3135 00af 18       		.uleb128 0x18
 3136 00b0 00       		.byte	0
 3137 00b1 00       		.byte	0
 3138 00b2 0E       		.uleb128 0xe
 3139 00b3 01       		.uleb128 0x1
 3140 00b4 01       		.byte	0x1
 3141 00b5 49       		.uleb128 0x49
 3142 00b6 13       		.uleb128 0x13
 3143 00b7 01       		.uleb128 0x1
 3144 00b8 13       		.uleb128 0x13
 3145 00b9 00       		.byte	0
 3146 00ba 00       		.byte	0
 3147 00bb 0F       		.uleb128 0xf
 3148 00bc 21       		.uleb128 0x21
 3149 00bd 00       		.byte	0
 3150 00be 49       		.uleb128 0x49
 3151 00bf 13       		.uleb128 0x13
 3152 00c0 2F       		.uleb128 0x2f
 3153 00c1 0B       		.uleb128 0xb
 3154 00c2 00       		.byte	0
 3155 00c3 00       		.byte	0
 3156 00c4 10       		.uleb128 0x10
 3157 00c5 2E       		.uleb128 0x2e
 3158 00c6 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 66


 3159 00c7 3F       		.uleb128 0x3f
 3160 00c8 19       		.uleb128 0x19
 3161 00c9 03       		.uleb128 0x3
 3162 00ca 0E       		.uleb128 0xe
 3163 00cb 3A       		.uleb128 0x3a
 3164 00cc 0B       		.uleb128 0xb
 3165 00cd 3B       		.uleb128 0x3b
 3166 00ce 0B       		.uleb128 0xb
 3167 00cf 27       		.uleb128 0x27
 3168 00d0 19       		.uleb128 0x19
 3169 00d1 11       		.uleb128 0x11
 3170 00d2 01       		.uleb128 0x1
 3171 00d3 12       		.uleb128 0x12
 3172 00d4 06       		.uleb128 0x6
 3173 00d5 40       		.uleb128 0x40
 3174 00d6 18       		.uleb128 0x18
 3175 00d7 9742     		.uleb128 0x2117
 3176 00d9 19       		.uleb128 0x19
 3177 00da 01       		.uleb128 0x1
 3178 00db 13       		.uleb128 0x13
 3179 00dc 00       		.byte	0
 3180 00dd 00       		.byte	0
 3181 00de 11       		.uleb128 0x11
 3182 00df 05       		.uleb128 0x5
 3183 00e0 00       		.byte	0
 3184 00e1 03       		.uleb128 0x3
 3185 00e2 0E       		.uleb128 0xe
 3186 00e3 3A       		.uleb128 0x3a
 3187 00e4 0B       		.uleb128 0xb
 3188 00e5 3B       		.uleb128 0x3b
 3189 00e6 0B       		.uleb128 0xb
 3190 00e7 49       		.uleb128 0x49
 3191 00e8 13       		.uleb128 0x13
 3192 00e9 02       		.uleb128 0x2
 3193 00ea 18       		.uleb128 0x18
 3194 00eb 00       		.byte	0
 3195 00ec 00       		.byte	0
 3196 00ed 12       		.uleb128 0x12
 3197 00ee 2E       		.uleb128 0x2e
 3198 00ef 00       		.byte	0
 3199 00f0 3F       		.uleb128 0x3f
 3200 00f1 19       		.uleb128 0x19
 3201 00f2 03       		.uleb128 0x3
 3202 00f3 0E       		.uleb128 0xe
 3203 00f4 3A       		.uleb128 0x3a
 3204 00f5 0B       		.uleb128 0xb
 3205 00f6 3B       		.uleb128 0x3b
 3206 00f7 0B       		.uleb128 0xb
 3207 00f8 11       		.uleb128 0x11
 3208 00f9 01       		.uleb128 0x1
 3209 00fa 12       		.uleb128 0x12
 3210 00fb 06       		.uleb128 0x6
 3211 00fc 40       		.uleb128 0x40
 3212 00fd 18       		.uleb128 0x18
 3213 00fe 9642     		.uleb128 0x2116
 3214 0100 19       		.uleb128 0x19
 3215 0101 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 67


 3216 0102 00       		.byte	0
 3217 0103 13       		.uleb128 0x13
 3218 0104 2E       		.uleb128 0x2e
 3219 0105 01       		.byte	0x1
 3220 0106 3F       		.uleb128 0x3f
 3221 0107 19       		.uleb128 0x19
 3222 0108 03       		.uleb128 0x3
 3223 0109 0E       		.uleb128 0xe
 3224 010a 3A       		.uleb128 0x3a
 3225 010b 0B       		.uleb128 0xb
 3226 010c 3B       		.uleb128 0x3b
 3227 010d 0B       		.uleb128 0xb
 3228 010e 27       		.uleb128 0x27
 3229 010f 19       		.uleb128 0x19
 3230 0110 11       		.uleb128 0x11
 3231 0111 01       		.uleb128 0x1
 3232 0112 12       		.uleb128 0x12
 3233 0113 06       		.uleb128 0x6
 3234 0114 40       		.uleb128 0x40
 3235 0115 18       		.uleb128 0x18
 3236 0116 9642     		.uleb128 0x2116
 3237 0118 19       		.uleb128 0x19
 3238 0119 01       		.uleb128 0x1
 3239 011a 13       		.uleb128 0x13
 3240 011b 00       		.byte	0
 3241 011c 00       		.byte	0
 3242 011d 14       		.uleb128 0x14
 3243 011e 2E       		.uleb128 0x2e
 3244 011f 00       		.byte	0
 3245 0120 3F       		.uleb128 0x3f
 3246 0121 19       		.uleb128 0x19
 3247 0122 03       		.uleb128 0x3
 3248 0123 0E       		.uleb128 0xe
 3249 0124 3A       		.uleb128 0x3a
 3250 0125 0B       		.uleb128 0xb
 3251 0126 3B       		.uleb128 0x3b
 3252 0127 0B       		.uleb128 0xb
 3253 0128 27       		.uleb128 0x27
 3254 0129 19       		.uleb128 0x19
 3255 012a 11       		.uleb128 0x11
 3256 012b 01       		.uleb128 0x1
 3257 012c 12       		.uleb128 0x12
 3258 012d 06       		.uleb128 0x6
 3259 012e 40       		.uleb128 0x40
 3260 012f 18       		.uleb128 0x18
 3261 0130 9742     		.uleb128 0x2117
 3262 0132 19       		.uleb128 0x19
 3263 0133 00       		.byte	0
 3264 0134 00       		.byte	0
 3265 0135 15       		.uleb128 0x15
 3266 0136 2E       		.uleb128 0x2e
 3267 0137 00       		.byte	0
 3268 0138 3F       		.uleb128 0x3f
 3269 0139 19       		.uleb128 0x19
 3270 013a 03       		.uleb128 0x3
 3271 013b 0E       		.uleb128 0xe
 3272 013c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 68


 3273 013d 0B       		.uleb128 0xb
 3274 013e 3B       		.uleb128 0x3b
 3275 013f 0B       		.uleb128 0xb
 3276 0140 27       		.uleb128 0x27
 3277 0141 19       		.uleb128 0x19
 3278 0142 11       		.uleb128 0x11
 3279 0143 01       		.uleb128 0x1
 3280 0144 12       		.uleb128 0x12
 3281 0145 06       		.uleb128 0x6
 3282 0146 40       		.uleb128 0x40
 3283 0147 18       		.uleb128 0x18
 3284 0148 9642     		.uleb128 0x2116
 3285 014a 19       		.uleb128 0x19
 3286 014b 00       		.byte	0
 3287 014c 00       		.byte	0
 3288 014d 16       		.uleb128 0x16
 3289 014e 2E       		.uleb128 0x2e
 3290 014f 00       		.byte	0
 3291 0150 3F       		.uleb128 0x3f
 3292 0151 19       		.uleb128 0x19
 3293 0152 03       		.uleb128 0x3
 3294 0153 0E       		.uleb128 0xe
 3295 0154 3A       		.uleb128 0x3a
 3296 0155 0B       		.uleb128 0xb
 3297 0156 3B       		.uleb128 0x3b
 3298 0157 05       		.uleb128 0x5
 3299 0158 27       		.uleb128 0x27
 3300 0159 19       		.uleb128 0x19
 3301 015a 11       		.uleb128 0x11
 3302 015b 01       		.uleb128 0x1
 3303 015c 12       		.uleb128 0x12
 3304 015d 06       		.uleb128 0x6
 3305 015e 40       		.uleb128 0x40
 3306 015f 18       		.uleb128 0x18
 3307 0160 9642     		.uleb128 0x2116
 3308 0162 19       		.uleb128 0x19
 3309 0163 00       		.byte	0
 3310 0164 00       		.byte	0
 3311 0165 17       		.uleb128 0x17
 3312 0166 2E       		.uleb128 0x2e
 3313 0167 01       		.byte	0x1
 3314 0168 3F       		.uleb128 0x3f
 3315 0169 19       		.uleb128 0x19
 3316 016a 03       		.uleb128 0x3
 3317 016b 0E       		.uleb128 0xe
 3318 016c 3A       		.uleb128 0x3a
 3319 016d 0B       		.uleb128 0xb
 3320 016e 3B       		.uleb128 0x3b
 3321 016f 05       		.uleb128 0x5
 3322 0170 11       		.uleb128 0x11
 3323 0171 01       		.uleb128 0x1
 3324 0172 12       		.uleb128 0x12
 3325 0173 06       		.uleb128 0x6
 3326 0174 40       		.uleb128 0x40
 3327 0175 18       		.uleb128 0x18
 3328 0176 9642     		.uleb128 0x2116
 3329 0178 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 69


 3330 0179 01       		.uleb128 0x1
 3331 017a 13       		.uleb128 0x13
 3332 017b 00       		.byte	0
 3333 017c 00       		.byte	0
 3334 017d 18       		.uleb128 0x18
 3335 017e 34       		.uleb128 0x34
 3336 017f 00       		.byte	0
 3337 0180 03       		.uleb128 0x3
 3338 0181 0E       		.uleb128 0xe
 3339 0182 3A       		.uleb128 0x3a
 3340 0183 0B       		.uleb128 0xb
 3341 0184 3B       		.uleb128 0x3b
 3342 0185 05       		.uleb128 0x5
 3343 0186 49       		.uleb128 0x49
 3344 0187 13       		.uleb128 0x13
 3345 0188 02       		.uleb128 0x2
 3346 0189 18       		.uleb128 0x18
 3347 018a 00       		.byte	0
 3348 018b 00       		.byte	0
 3349 018c 19       		.uleb128 0x19
 3350 018d 2E       		.uleb128 0x2e
 3351 018e 00       		.byte	0
 3352 018f 3F       		.uleb128 0x3f
 3353 0190 19       		.uleb128 0x19
 3354 0191 03       		.uleb128 0x3
 3355 0192 0E       		.uleb128 0xe
 3356 0193 3A       		.uleb128 0x3a
 3357 0194 0B       		.uleb128 0xb
 3358 0195 3B       		.uleb128 0x3b
 3359 0196 05       		.uleb128 0x5
 3360 0197 49       		.uleb128 0x49
 3361 0198 13       		.uleb128 0x13
 3362 0199 11       		.uleb128 0x11
 3363 019a 01       		.uleb128 0x1
 3364 019b 12       		.uleb128 0x12
 3365 019c 06       		.uleb128 0x6
 3366 019d 40       		.uleb128 0x40
 3367 019e 18       		.uleb128 0x18
 3368 019f 9642     		.uleb128 0x2116
 3369 01a1 19       		.uleb128 0x19
 3370 01a2 00       		.byte	0
 3371 01a3 00       		.byte	0
 3372 01a4 1A       		.uleb128 0x1a
 3373 01a5 2E       		.uleb128 0x2e
 3374 01a6 01       		.byte	0x1
 3375 01a7 3F       		.uleb128 0x3f
 3376 01a8 19       		.uleb128 0x19
 3377 01a9 03       		.uleb128 0x3
 3378 01aa 0E       		.uleb128 0xe
 3379 01ab 3A       		.uleb128 0x3a
 3380 01ac 0B       		.uleb128 0xb
 3381 01ad 3B       		.uleb128 0x3b
 3382 01ae 05       		.uleb128 0x5
 3383 01af 27       		.uleb128 0x27
 3384 01b0 19       		.uleb128 0x19
 3385 01b1 11       		.uleb128 0x11
 3386 01b2 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 70


 3387 01b3 12       		.uleb128 0x12
 3388 01b4 06       		.uleb128 0x6
 3389 01b5 40       		.uleb128 0x40
 3390 01b6 18       		.uleb128 0x18
 3391 01b7 9642     		.uleb128 0x2116
 3392 01b9 19       		.uleb128 0x19
 3393 01ba 01       		.uleb128 0x1
 3394 01bb 13       		.uleb128 0x13
 3395 01bc 00       		.byte	0
 3396 01bd 00       		.byte	0
 3397 01be 1B       		.uleb128 0x1b
 3398 01bf 05       		.uleb128 0x5
 3399 01c0 00       		.byte	0
 3400 01c1 03       		.uleb128 0x3
 3401 01c2 08       		.uleb128 0x8
 3402 01c3 3A       		.uleb128 0x3a
 3403 01c4 0B       		.uleb128 0xb
 3404 01c5 3B       		.uleb128 0x3b
 3405 01c6 05       		.uleb128 0x5
 3406 01c7 49       		.uleb128 0x49
 3407 01c8 13       		.uleb128 0x13
 3408 01c9 02       		.uleb128 0x2
 3409 01ca 18       		.uleb128 0x18
 3410 01cb 00       		.byte	0
 3411 01cc 00       		.byte	0
 3412 01cd 1C       		.uleb128 0x1c
 3413 01ce 34       		.uleb128 0x34
 3414 01cf 00       		.byte	0
 3415 01d0 03       		.uleb128 0x3
 3416 01d1 08       		.uleb128 0x8
 3417 01d2 3A       		.uleb128 0x3a
 3418 01d3 0B       		.uleb128 0xb
 3419 01d4 3B       		.uleb128 0x3b
 3420 01d5 05       		.uleb128 0x5
 3421 01d6 49       		.uleb128 0x49
 3422 01d7 13       		.uleb128 0x13
 3423 01d8 02       		.uleb128 0x2
 3424 01d9 18       		.uleb128 0x18
 3425 01da 00       		.byte	0
 3426 01db 00       		.byte	0
 3427 01dc 1D       		.uleb128 0x1d
 3428 01dd 34       		.uleb128 0x34
 3429 01de 00       		.byte	0
 3430 01df 03       		.uleb128 0x3
 3431 01e0 0E       		.uleb128 0xe
 3432 01e1 3A       		.uleb128 0x3a
 3433 01e2 0B       		.uleb128 0xb
 3434 01e3 3B       		.uleb128 0x3b
 3435 01e4 05       		.uleb128 0x5
 3436 01e5 49       		.uleb128 0x49
 3437 01e6 13       		.uleb128 0x13
 3438 01e7 3F       		.uleb128 0x3f
 3439 01e8 19       		.uleb128 0x19
 3440 01e9 3C       		.uleb128 0x3c
 3441 01ea 19       		.uleb128 0x19
 3442 01eb 00       		.byte	0
 3443 01ec 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 71


 3444 01ed 1E       		.uleb128 0x1e
 3445 01ee 35       		.uleb128 0x35
 3446 01ef 00       		.byte	0
 3447 01f0 49       		.uleb128 0x49
 3448 01f1 13       		.uleb128 0x13
 3449 01f2 00       		.byte	0
 3450 01f3 00       		.byte	0
 3451 01f4 1F       		.uleb128 0x1f
 3452 01f5 34       		.uleb128 0x34
 3453 01f6 00       		.byte	0
 3454 01f7 03       		.uleb128 0x3
 3455 01f8 08       		.uleb128 0x8
 3456 01f9 3A       		.uleb128 0x3a
 3457 01fa 0B       		.uleb128 0xb
 3458 01fb 3B       		.uleb128 0x3b
 3459 01fc 0B       		.uleb128 0xb
 3460 01fd 49       		.uleb128 0x49
 3461 01fe 13       		.uleb128 0x13
 3462 01ff 3F       		.uleb128 0x3f
 3463 0200 19       		.uleb128 0x19
 3464 0201 02       		.uleb128 0x2
 3465 0202 18       		.uleb128 0x18
 3466 0203 00       		.byte	0
 3467 0204 00       		.byte	0
 3468 0205 20       		.uleb128 0x20
 3469 0206 34       		.uleb128 0x34
 3470 0207 00       		.byte	0
 3471 0208 03       		.uleb128 0x3
 3472 0209 0E       		.uleb128 0xe
 3473 020a 3A       		.uleb128 0x3a
 3474 020b 0B       		.uleb128 0xb
 3475 020c 3B       		.uleb128 0x3b
 3476 020d 0B       		.uleb128 0xb
 3477 020e 49       		.uleb128 0x49
 3478 020f 13       		.uleb128 0x13
 3479 0210 3F       		.uleb128 0x3f
 3480 0211 19       		.uleb128 0x19
 3481 0212 02       		.uleb128 0x2
 3482 0213 18       		.uleb128 0x18
 3483 0214 00       		.byte	0
 3484 0215 00       		.byte	0
 3485 0216 00       		.byte	0
 3486              		.section	.debug_aranges,"",%progbits
 3487 0000 BC000000 		.4byte	0xbc
 3488 0004 0200     		.2byte	0x2
 3489 0006 00000000 		.4byte	.Ldebug_info0
 3490 000a 04       		.byte	0x4
 3491 000b 00       		.byte	0
 3492 000c 0000     		.2byte	0
 3493 000e 0000     		.2byte	0
 3494 0010 00000000 		.4byte	.LFB63
 3495 0014 60010000 		.4byte	.LFE63-.LFB63
 3496 0018 00000000 		.4byte	.LFB64
 3497 001c 2C000000 		.4byte	.LFE64-.LFB64
 3498 0020 00000000 		.4byte	.LFB65
 3499 0024 30000000 		.4byte	.LFE65-.LFB65
 3500 0028 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 72


 3501 002c 0E000000 		.4byte	.LFE66-.LFB66
 3502 0030 00000000 		.4byte	.LFB67
 3503 0034 0E000000 		.4byte	.LFE67-.LFB67
 3504 0038 00000000 		.4byte	.LFB68
 3505 003c 0E000000 		.4byte	.LFE68-.LFB68
 3506 0040 00000000 		.4byte	.LFB69
 3507 0044 98000000 		.4byte	.LFE69-.LFB69
 3508 0048 00000000 		.4byte	.LFB70
 3509 004c 0C000000 		.4byte	.LFE70-.LFB70
 3510 0050 00000000 		.4byte	.LFB71
 3511 0054 2C000000 		.4byte	.LFE71-.LFB71
 3512 0058 00000000 		.4byte	.LFB72
 3513 005c B8000000 		.4byte	.LFE72-.LFB72
 3514 0060 00000000 		.4byte	.LFB73
 3515 0064 5C000000 		.4byte	.LFE73-.LFB73
 3516 0068 00000000 		.4byte	.LFB74
 3517 006c 34000000 		.4byte	.LFE74-.LFB74
 3518 0070 00000000 		.4byte	.LFB75
 3519 0074 1C000000 		.4byte	.LFE75-.LFB75
 3520 0078 00000000 		.4byte	.LFB76
 3521 007c 0A000000 		.4byte	.LFE76-.LFB76
 3522 0080 00000000 		.4byte	.LFB77
 3523 0084 D8010000 		.4byte	.LFE77-.LFB77
 3524 0088 00000000 		.4byte	.LFB78
 3525 008c C0000000 		.4byte	.LFE78-.LFB78
 3526 0090 00000000 		.4byte	.LFB79
 3527 0094 B8000000 		.4byte	.LFE79-.LFB79
 3528 0098 00000000 		.4byte	.LFB80
 3529 009c B0000000 		.4byte	.LFE80-.LFB80
 3530 00a0 00000000 		.4byte	.LFB81
 3531 00a4 68000000 		.4byte	.LFE81-.LFB81
 3532 00a8 00000000 		.4byte	.LFB82
 3533 00ac 50000000 		.4byte	.LFE82-.LFB82
 3534 00b0 00000000 		.4byte	.LFB83
 3535 00b4 3A000000 		.4byte	.LFE83-.LFB83
 3536 00b8 00000000 		.4byte	0
 3537 00bc 00000000 		.4byte	0
 3538              		.section	.debug_ranges,"",%progbits
 3539              	.Ldebug_ranges0:
 3540 0000 00000000 		.4byte	.LFB63
 3541 0004 60010000 		.4byte	.LFE63
 3542 0008 00000000 		.4byte	.LFB64
 3543 000c 2C000000 		.4byte	.LFE64
 3544 0010 00000000 		.4byte	.LFB65
 3545 0014 30000000 		.4byte	.LFE65
 3546 0018 00000000 		.4byte	.LFB66
 3547 001c 0E000000 		.4byte	.LFE66
 3548 0020 00000000 		.4byte	.LFB67
 3549 0024 0E000000 		.4byte	.LFE67
 3550 0028 00000000 		.4byte	.LFB68
 3551 002c 0E000000 		.4byte	.LFE68
 3552 0030 00000000 		.4byte	.LFB69
 3553 0034 98000000 		.4byte	.LFE69
 3554 0038 00000000 		.4byte	.LFB70
 3555 003c 0C000000 		.4byte	.LFE70
 3556 0040 00000000 		.4byte	.LFB71
 3557 0044 2C000000 		.4byte	.LFE71
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 73


 3558 0048 00000000 		.4byte	.LFB72
 3559 004c B8000000 		.4byte	.LFE72
 3560 0050 00000000 		.4byte	.LFB73
 3561 0054 5C000000 		.4byte	.LFE73
 3562 0058 00000000 		.4byte	.LFB74
 3563 005c 34000000 		.4byte	.LFE74
 3564 0060 00000000 		.4byte	.LFB75
 3565 0064 1C000000 		.4byte	.LFE75
 3566 0068 00000000 		.4byte	.LFB76
 3567 006c 0A000000 		.4byte	.LFE76
 3568 0070 00000000 		.4byte	.LFB77
 3569 0074 D8010000 		.4byte	.LFE77
 3570 0078 00000000 		.4byte	.LFB78
 3571 007c C0000000 		.4byte	.LFE78
 3572 0080 00000000 		.4byte	.LFB79
 3573 0084 B8000000 		.4byte	.LFE79
 3574 0088 00000000 		.4byte	.LFB80
 3575 008c B0000000 		.4byte	.LFE80
 3576 0090 00000000 		.4byte	.LFB81
 3577 0094 68000000 		.4byte	.LFE81
 3578 0098 00000000 		.4byte	.LFB82
 3579 009c 50000000 		.4byte	.LFE82
 3580 00a0 00000000 		.4byte	.LFB83
 3581 00a4 3A000000 		.4byte	.LFE83
 3582 00a8 00000000 		.4byte	0
 3583 00ac 00000000 		.4byte	0
 3584              		.section	.debug_line,"",%progbits
 3585              	.Ldebug_line0:
 3586 0000 B0030000 		.section	.debug_str,"MS",%progbits,1
 3586      02005501 
 3586      00000201 
 3586      FB0E0D00 
 3586      01010101 
 3587              	.LASF96:
 3588 0000 64697265 		.ascii	"direction\000"
 3588      6374696F 
 3588      6E00
 3589              	.LASF23:
 3590 000a 52545552 		.ascii	"RTURN\000"
 3590      4E00
 3591              	.LASF102:
 3592 0010 71756164 		.ascii	"quad_diff1\000"
 3592      5F646966 
 3592      663100
 3593              	.LASF103:
 3594 001b 71756164 		.ascii	"quad_diff2\000"
 3594      5F646966 
 3594      663200
 3595              	.LASF64:
 3596 0026 77686565 		.ascii	"wheel_2_str\000"
 3596      6C5F325F 
 3596      73747200 
 3597              	.LASF62:
 3598 0032 51756164 		.ascii	"Quad_Dec_response\000"
 3598      5F446563 
 3598      5F726573 
 3598      706F6E73 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 74


 3598      6500
 3599              	.LASF111:
 3600 0044 70726576 		.ascii	"prevVoltage\000"
 3600      566F6C74 
 3600      61676500 
 3601              	.LASF104:
 3602 0050 73746172 		.ascii	"start_turn_count\000"
 3602      745F7475 
 3602      726E5F63 
 3602      6F756E74 
 3602      00
 3603              	.LASF8:
 3604 0061 756E7369 		.ascii	"unsigned int\000"
 3604      676E6564 
 3604      20696E74 
 3604      00
 3605              	.LASF11:
 3606 006e 5F5F696E 		.ascii	"__int32_t\000"
 3606      7433325F 
 3606      7400
 3607              	.LASF17:
 3608 0078 696E7431 		.ascii	"int16\000"
 3608      3600
 3609              	.LASF118:
 3610 007e 73797374 		.ascii	"system_state\000"
 3610      656D5F73 
 3610      74617465 
 3610      00
 3611              	.LASF22:
 3612 008b 4C545552 		.ascii	"LTURN\000"
 3612      4E00
 3613              	.LASF60:
 3614 0091 6973725F 		.ascii	"isr_adcTimer\000"
 3614      61646354 
 3614      696D6572 
 3614      00
 3615              	.LASF112:
 3616 009e 70726576 		.ascii	"prevVoltage2\000"
 3616      566F6C74 
 3616      61676532 
 3616      00
 3617              	.LASF42:
 3618 00ab 7061636B 		.ascii	"packet_bytes\000"
 3618      65745F62 
 3618      79746573 
 3618      00
 3619              	.LASF38:
 3620 00b8 67325F78 		.ascii	"g2_xpos\000"
 3620      706F7300 
 3621              	.LASF98:
 3622 00c0 71756164 		.ascii	"quad_count1\000"
 3622      5F636F75 
 3622      6E743100 
 3623              	.LASF99:
 3624 00cc 71756164 		.ascii	"quad_count2\000"
 3624      5F636F75 
 3624      6E743200 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 75


 3625              	.LASF92:
 3626 00d8 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3626      5F72665F 
 3626      7472616E 
 3626      736D6973 
 3626      73696F6E 
 3627              	.LASF93:
 3628 00f4 666C6167 		.ascii	"flag_print_rf\000"
 3628      5F707269 
 3628      6E745F72 
 3628      6600
 3629              	.LASF119:
 3630 0102 6D6F7665 		.ascii	"movement_state\000"
 3630      6D656E74 
 3630      5F737461 
 3630      746500
 3631              	.LASF76:
 3632 0111 75736250 		.ascii	"usbPutString\000"
 3632      75745374 
 3632      72696E67 
 3632      00
 3633              	.LASF41:
 3634 011e 67325F64 		.ascii	"g2_direction\000"
 3634      69726563 
 3634      74696F6E 
 3634      00
 3635              	.LASF56:
 3636 012b 6973725F 		.ascii	"isr_quad1\000"
 3636      71756164 
 3636      3100
 3637              	.LASF18:
 3638 0135 666C6F61 		.ascii	"float\000"
 3638      7400
 3639              	.LASF51:
 3640 013b 73657453 		.ascii	"setSpeed\000"
 3640      70656564 
 3640      00
 3641              	.LASF116:
 3642 0144 75736242 		.ascii	"usbBuffer\000"
 3642      75666665 
 3642      7200
 3643              	.LASF26:
 3644 014e 696E6465 		.ascii	"index\000"
 3644      7800
 3645              	.LASF21:
 3646 0154 44524956 		.ascii	"DRIVE\000"
 3646      4500
 3647              	.LASF44:
 3648 015a 73747269 		.ascii	"string_packet\000"
 3648      6E675F70 
 3648      61636B65 
 3648      7400
 3649              	.LASF48:
 3650 0168 64726976 		.ascii	"driveForwards\000"
 3650      65466F72 
 3650      77617264 
 3650      7300
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 76


 3651              	.LASF49:
 3652 0176 7475726E 		.ascii	"turnLeft\000"
 3652      4C656674 
 3652      00
 3653              	.LASF7:
 3654 017f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3654      206C6F6E 
 3654      6720756E 
 3654      7369676E 
 3654      65642069 
 3655              	.LASF89:
 3656 0196 666C6167 		.ascii	"flag_packet\000"
 3656      5F706163 
 3656      6B657400 
 3657              	.LASF57:
 3658 01a2 6973725F 		.ascii	"isr_turn_timer\000"
 3658      7475726E 
 3658      5F74696D 
 3658      657200
 3659              	.LASF110:
 3660 01b1 706F7274 		.ascii	"portOpen\000"
 3660      4F70656E 
 3660      00
 3661              	.LASF85:
 3662 01ba 666C6167 		.ascii	"flag_ts_update\000"
 3662      5F74735F 
 3662      75706461 
 3662      746500
 3663              	.LASF70:
 3664 01c9 7363616C 		.ascii	"scalingFactor\000"
 3664      696E6746 
 3664      6163746F 
 3664      7200
 3665              	.LASF65:
 3666 01d7 6C656674 		.ascii	"leftSpeed\000"
 3666      53706565 
 3666      6400
 3667              	.LASF84:
 3668 01e1 666C6167 		.ascii	"flag_ts_enc\000"
 3668      5F74735F 
 3668      656E6300 
 3669              	.LASF120:
 3670 01ed 62797465 		.ascii	"byteCount\000"
 3670      436F756E 
 3670      7400
 3671              	.LASF59:
 3672 01f7 62757474 		.ascii	"button\000"
 3672      6F6E00
 3673              	.LASF72:
 3674 01fe 72657375 		.ascii	"result_str\000"
 3674      6C745F73 
 3674      747200
 3675              	.LASF78:
 3676 0209 75617274 		.ascii	"uart_set_PWM\000"
 3676      5F736574 
 3676      5F50574D 
 3676      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 77


 3677              	.LASF28:
 3678 0216 726F626F 		.ascii	"robot_ypos\000"
 3678      745F7970 
 3678      6F7300
 3679              	.LASF83:
 3680 0221 74735F64 		.ascii	"ts_display\000"
 3680      6973706C 
 3680      617900
 3681              	.LASF69:
 3682 022c 7072696E 		.ascii	"print_ADC\000"
 3682      745F4144 
 3682      4300
 3683              	.LASF63:
 3684 0236 77686565 		.ascii	"wheel_1_str\000"
 3684      6C5F315F 
 3684      73747200 
 3685              	.LASF10:
 3686 0242 63686172 		.ascii	"char\000"
 3686      00
 3687              	.LASF32:
 3688 0247 67305F73 		.ascii	"g0_speed\000"
 3688      70656564 
 3688      00
 3689              	.LASF108:
 3690 0250 72696768 		.ascii	"rightSpeedLimit\000"
 3690      74537065 
 3690      65644C69 
 3690      6D697400 
 3691              	.LASF14:
 3692 0260 75696E74 		.ascii	"uint16\000"
 3692      313600
 3693              	.LASF16:
 3694 0267 696E7438 		.ascii	"int8\000"
 3694      00
 3695              	.LASF37:
 3696 026c 67315F64 		.ascii	"g1_direction\000"
 3696      69726563 
 3696      74696F6E 
 3696      00
 3697              	.LASF67:
 3698 0279 696E7465 		.ascii	"interCalc\000"
 3698      7243616C 
 3698      6300
 3699              	.LASF45:
 3700 0283 72696768 		.ascii	"right\000"
 3700      7400
 3701              	.LASF6:
 3702 0289 6C6F6E67 		.ascii	"long long int\000"
 3702      206C6F6E 
 3702      6720696E 
 3702      7400
 3703              	.LASF117:
 3704 0297 62756666 		.ascii	"buffer_state\000"
 3704      65725F73 
 3704      74617465 
 3704      00
 3705              	.LASF34:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 78


 3706 02a4 67315F78 		.ascii	"g1_xpos\000"
 3706      706F7300 
 3707              	.LASF122:
 3708 02ac 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3708      4320342E 
 3708      392E3320 
 3708      32303135 
 3708      30333033 
 3709 02df 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3709      20726576 
 3709      6973696F 
 3709      6E203232 
 3709      31323230 
 3710 0312 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3710      66756E63 
 3710      74696F6E 
 3710      2D736563 
 3710      74696F6E 
 3711              	.LASF40:
 3712 033a 67325F73 		.ascii	"g2_speed\000"
 3712      70656564 
 3712      00
 3713              	.LASF31:
 3714 0343 67305F79 		.ascii	"g0_ypos\000"
 3714      706F7300 
 3715              	.LASF53:
 3716 034b 72665F63 		.ascii	"rf_char\000"
 3716      68617200 
 3717              	.LASF66:
 3718 0353 72696768 		.ascii	"rightSpeed\000"
 3718      74537065 
 3718      656400
 3719              	.LASF82:
 3720 035e 74735F73 		.ascii	"ts_speed\000"
 3720      70656564 
 3720      00
 3721              	.LASF15:
 3722 0367 75696E74 		.ascii	"uint32\000"
 3722      333200
 3723              	.LASF126:
 3724 036e 64617461 		.ascii	"data_main\000"
 3724      5F6D6169 
 3724      6E00
 3725              	.LASF71:
 3726 0378 636F6E76 		.ascii	"converted_val\000"
 3726      65727465 
 3726      645F7661 
 3726      6C00
 3727              	.LASF25:
 3728 0386 72737369 		.ascii	"rssi\000"
 3728      00
 3729              	.LASF33:
 3730 038b 67305F64 		.ascii	"g0_direction\000"
 3730      69726563 
 3730      74696F6E 
 3730      00
 3731              	.LASF94:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 79


 3732 0398 666C6167 		.ascii	"flag_receive_ADC\000"
 3732      5F726563 
 3732      65697665 
 3732      5F414443 
 3732      00
 3733              	.LASF24:
 3734 03a9 53544F50 		.ascii	"STOPPED\000"
 3734      50454400 
 3735              	.LASF20:
 3736 03b1 6C6F6E67 		.ascii	"long double\000"
 3736      20646F75 
 3736      626C6500 
 3737              	.LASF52:
 3738 03bd 7278496E 		.ascii	"rxInt\000"
 3738      7400
 3739              	.LASF105:
 3740 03c3 6C656674 		.ascii	"left_duty_cycle\000"
 3740      5F647574 
 3740      795F6379 
 3740      636C6500 
 3741              	.LASF86:
 3742 03d3 666C6167 		.ascii	"flag_ts_speed\000"
 3742      5F74735F 
 3742      73706565 
 3742      6400
 3743              	.LASF91:
 3744 03e1 64617461 		.ascii	"dataready_flag\000"
 3744      72656164 
 3744      795F666C 
 3744      616700
 3745              	.LASF88:
 3746 03f0 666C6167 		.ascii	"flag_rx\000"
 3746      5F727800 
 3747              	.LASF2:
 3748 03f8 73686F72 		.ascii	"short int\000"
 3748      7420696E 
 3748      7400
 3749              	.LASF95:
 3750 0402 6164635F 		.ascii	"adc_result\000"
 3750      72657375 
 3750      6C7400
 3751              	.LASF97:
 3752 040d 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 3752      5F63616C 
 3752      635F7768 
 3752      65656C73 
 3752      70656564 
 3753              	.LASF4:
 3754 0422 6C6F6E67 		.ascii	"long int\000"
 3754      20696E74 
 3754      00
 3755              	.LASF79:
 3756 042b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3756      52784275 
 3756      66666572 
 3756      00
 3757              	.LASF74:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 80


 3758 0438 7072696E 		.ascii	"printString\000"
 3758      74537472 
 3758      696E6700 
 3759              	.LASF81:
 3760 0444 74735F75 		.ascii	"ts_update\000"
 3760      70646174 
 3760      6500
 3761              	.LASF107:
 3762 044e 6C656674 		.ascii	"leftSpeedLimit\000"
 3762      53706565 
 3762      644C696D 
 3762      697400
 3763              	.LASF39:
 3764 045d 67325F79 		.ascii	"g2_ypos\000"
 3764      706F7300 
 3765              	.LASF46:
 3766 0465 6C656674 		.ascii	"left\000"
 3766      00
 3767              	.LASF50:
 3768 046a 7475726E 		.ascii	"turnRight\000"
 3768      52696768 
 3768      7400
 3769              	.LASF35:
 3770 0474 67315F79 		.ascii	"g1_ypos\000"
 3770      706F7300 
 3771              	.LASF55:
 3772 047c 6164635F 		.ascii	"adc_isr\000"
 3772      69737200 
 3773              	.LASF9:
 3774 0484 73697A65 		.ascii	"sizetype\000"
 3774      74797065 
 3774      00
 3775              	.LASF5:
 3776 048d 6C6F6E67 		.ascii	"long unsigned int\000"
 3776      20756E73 
 3776      69676E65 
 3776      6420696E 
 3776      7400
 3777              	.LASF43:
 3778 049f 62797465 		.ascii	"byte_packet\000"
 3778      5F706163 
 3778      6B657400 
 3779              	.LASF12:
 3780 04ab 696E7433 		.ascii	"int32_t\000"
 3780      325F7400 
 3781              	.LASF121:
 3782 04b3 7061636B 		.ascii	"packet\000"
 3782      657400
 3783              	.LASF27:
 3784 04ba 726F626F 		.ascii	"robot_xpos\000"
 3784      745F7870 
 3784      6F7300
 3785              	.LASF47:
 3786 04c5 6272616B 		.ascii	"brakeMotor\000"
 3786      654D6F74 
 3786      6F7200
 3787              	.LASF115:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 81


 3788 04d0 656E7472 		.ascii	"entry\000"
 3788      7900
 3789              	.LASF1:
 3790 04d6 756E7369 		.ascii	"unsigned char\000"
 3790      676E6564 
 3790      20636861 
 3790      7200
 3791              	.LASF114:
 3792 04e4 6C696E65 		.ascii	"line\000"
 3792      00
 3793              	.LASF58:
 3794 04e9 53746F70 		.ascii	"Stop_on_line\000"
 3794      5F6F6E5F 
 3794      6C696E65 
 3794      00
 3795              	.LASF80:
 3796 04f6 74735F65 		.ascii	"ts_enc\000"
 3796      6E6300
 3797              	.LASF109:
 3798 04fd 6272616B 		.ascii	"brakeFlag\000"
 3798      65466C61 
 3798      6700
 3799              	.LASF87:
 3800 0507 666C6167 		.ascii	"flag_ts_display\000"
 3800      5F74735F 
 3800      64697370 
 3800      6C617900 
 3801              	.LASF125:
 3802 0517 73746174 		.ascii	"state\000"
 3802      6500
 3803              	.LASF113:
 3804 051d 64697370 		.ascii	"displaystring\000"
 3804      6C617973 
 3804      7472696E 
 3804      6700
 3805              	.LASF100:
 3806 052b 6C617374 		.ascii	"last_quad_count1\000"
 3806      5F717561 
 3806      645F636F 
 3806      756E7431 
 3806      00
 3807              	.LASF101:
 3808 053c 6C617374 		.ascii	"last_quad_count2\000"
 3808      5F717561 
 3808      645F636F 
 3808      756E7432 
 3808      00
 3809              	.LASF77:
 3810 054d 75736250 		.ascii	"usbPutChar\000"
 3810      75744368 
 3810      617200
 3811              	.LASF0:
 3812 0558 7369676E 		.ascii	"signed char\000"
 3812      65642063 
 3812      68617200 
 3813              	.LASF3:
 3814 0564 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 82


 3814      7420756E 
 3814      7369676E 
 3814      65642069 
 3814      6E7400
 3815              	.LASF29:
 3816 0577 726F626F 		.ascii	"robot_orientation\000"
 3816      745F6F72 
 3816      69656E74 
 3816      6174696F 
 3816      6E00
 3817              	.LASF75:
 3818 0589 6D61696E 		.ascii	"main\000"
 3818      00
 3819              	.LASF54:
 3820 058e 42545F74 		.ascii	"BT_txInt\000"
 3820      78496E74 
 3820      00
 3821              	.LASF68:
 3822 0597 6E657874 		.ascii	"nextSpeed\000"
 3822      53706565 
 3822      6400
 3823              	.LASF13:
 3824 05a1 75696E74 		.ascii	"uint8\000"
 3824      3800
 3825              	.LASF19:
 3826 05a7 646F7562 		.ascii	"double\000"
 3826      6C6500
 3827              	.LASF106:
 3828 05ae 72696768 		.ascii	"right_duty_cycle\000"
 3828      745F6475 
 3828      74795F63 
 3828      79636C65 
 3828      00
 3829              	.LASF61:
 3830 05bf 68616E64 		.ascii	"handle_rx_binary\000"
 3830      6C655F72 
 3830      785F6269 
 3830      6E617279 
 3830      00
 3831              	.LASF124:
 3832 05d0 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 3832      70315C43 
 3832      53333031 
 3832      2D546561 
 3832      6D2D5265 
 3833              	.LASF73:
 3834 05f9 7072696E 		.ascii	"print_RF\000"
 3834      745F5246 
 3834      00
 3835              	.LASF30:
 3836 0602 67305F78 		.ascii	"g0_xpos\000"
 3836      706F7300 
 3837              	.LASF90:
 3838 060a 666C6167 		.ascii	"flag_KB_string\000"
 3838      5F4B425F 
 3838      73747269 
 3838      6E6700
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc9OJZBE.s 			page 83


 3839              	.LASF36:
 3840 0619 67315F73 		.ascii	"g1_speed\000"
 3840      70656564 
 3840      00
 3841              	.LASF123:
 3842 0622 2E5C6D61 		.ascii	".\\main.c\000"
 3842      696E2E63 
 3842      00
 3843              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
