ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	left_duty_cycle
 129              		.align	1
 130              		.type	left_duty_cycle, %object
 131              		.size	left_duty_cycle, 2
 132              	left_duty_cycle:
 133 001a 0000     		.space	2
 134              		.global	right_duty_cycle
 135              		.align	1
 136              		.type	right_duty_cycle, %object
 137              		.size	right_duty_cycle, 2
 138              	right_duty_cycle:
 139 001c 0000     		.space	2
 140              		.global	leftSpeedLimit
 141              		.align	1
 142              		.type	leftSpeedLimit, %object
 143              		.size	leftSpeedLimit, 2
 144              	leftSpeedLimit:
 145 001e 0000     		.space	2
 146              		.global	rightSpeedLimit
 147              		.align	1
 148              		.type	rightSpeedLimit, %object
 149              		.size	rightSpeedLimit, 2
 150              	rightSpeedLimit:
 151 0020 0000     		.space	2
 152              		.comm	brakeFlag,1,1
 153              		.global	portOpen
 154              		.data
 155              		.type	portOpen, %object
 156              		.size	portOpen, 1
 157              	portOpen:
 158 0001 01       		.byte	1
 159              		.comm	prevVoltage,2,2
 160              		.comm	prevVoltage2,2,2
 161              		.global	displaystring
 162 0002 0000     		.align	2
 163              		.type	displaystring, %object
 164              		.size	displaystring, 64
 165              	displaystring:
 166 0004 43533330 		.ascii	"CS301 2016\012\000"
 166      31203230 
 166      31360A00 
 167 0010 00000000 		.space	52
 167      00000000 
 167      00000000 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 4


 167      00000000 
 167      00000000 
 168              		.comm	line,64,4
 169              		.comm	entry,64,4
 170              		.comm	usbBuffer,64,4
 171              		.comm	buffer_state,32,4
 172              		.comm	system_state,32,4
 173              		.global	byteCount
 174              		.bss
 175              		.type	byteCount, %object
 176              		.size	byteCount, 1
 177              	byteCount:
 178 0022 00       		.space	1
 179              		.comm	packet,2,4
 180 0023 00       		.section	.text.handle_rx_binary,"ax",%progbits
 181              		.align	2
 182              		.global	handle_rx_binary
 183              		.thumb
 184              		.thumb_func
 185              		.type	handle_rx_binary, %function
 186              	handle_rx_binary:
 187              	.LFB63:
 188              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** //* ========================================
  30:.\main.c      **** #include "defines.h"
  31:.\main.c      **** #include "vars.h"
  32:.\main.c      **** //* ========================================
  33:.\main.c      **** void usbPutString(char *s);
  34:.\main.c      **** void usbPutChar(char c);
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 5


  35:.\main.c      **** //void handle_usb();
  36:.\main.c      **** //* ========================================
  37:.\main.c      **** 
  38:.\main.c      **** 
  39:.\main.c      **** void handle_rx_binary()
  40:.\main.c      **** {
 189              		.loc 1 40 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 32
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 0002 89B0     		sub	sp, sp, #36
 198              		.cfi_def_cfa_offset 40
 199 0004 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  41:.\main.c      ****     if(flag_rx == 1)
 201              		.loc 1 41 0
 202 0006 524B     		ldr	r3, .L21
 203 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 204 000a 012B     		cmp	r3, #1
 205 000c 40F09A80 		bne	.L1
 206              	.LBB2:
  42:.\main.c      ****     {    
  43:.\main.c      ****         flag_rx = 0;
 207              		.loc 1 43 0
 208 0010 4F4B     		ldr	r3, .L21
 209 0012 0022     		movs	r2, #0
 210 0014 1A70     		strb	r2, [r3]
  44:.\main.c      ****         
  45:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 211              		.loc 1 45 0
 212 0016 4F4B     		ldr	r3, .L21+4
 213 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 214 001a 1B02     		lsls	r3, r3, #8
 215 001c 9AB2     		uxth	r2, r3
 216 001e 4D4B     		ldr	r3, .L21+4
 217 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218 0022 9BB2     		uxth	r3, r3
 219 0024 1343     		orrs	r3, r3, r2
 220 0026 9BB2     		uxth	r3, r3
 221 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  46:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  47:.\main.c      ****         char byte_packet[12];
  48:.\main.c      ****         char string_packet[12];
  49:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  50:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  51:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  52:.\main.c      ****         //usbPutString(string_packet);
  53:.\main.c      ****        // usbPutString(string_packet);
  54:.\main.c      ****        // usbPutChar(' ');
  55:.\main.c      ****         
  56:.\main.c      ****         switch(byteCount)
 222              		.loc 1 56 0
 223 002a 4B4B     		ldr	r3, .L21+8
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 6


 224 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 225 002e 043B     		subs	r3, r3, #4
 226 0030 1E2B     		cmp	r3, #30
 227 0032 00F28780 		bhi	.L1
 228 0036 01A2     		adr	r2, .L5
 229 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 230              		.p2align 2
 231              	.L5:
 232 003c B9000000 		.word	.L4+1
 233 0040 45010000 		.word	.L1+1
 234 0044 CD000000 		.word	.L6+1
 235 0048 45010000 		.word	.L1+1
 236 004c D5000000 		.word	.L7+1
 237 0050 45010000 		.word	.L1+1
 238 0054 DD000000 		.word	.L8+1
 239 0058 45010000 		.word	.L1+1
 240 005c E5000000 		.word	.L9+1
 241 0060 45010000 		.word	.L1+1
 242 0064 ED000000 		.word	.L10+1
 243 0068 45010000 		.word	.L1+1
 244 006c F5000000 		.word	.L11+1
 245 0070 45010000 		.word	.L1+1
 246 0074 FD000000 		.word	.L12+1
 247 0078 45010000 		.word	.L1+1
 248 007c 05010000 		.word	.L13+1
 249 0080 45010000 		.word	.L1+1
 250 0084 0D010000 		.word	.L14+1
 251 0088 45010000 		.word	.L1+1
 252 008c 15010000 		.word	.L15+1
 253 0090 45010000 		.word	.L1+1
 254 0094 1D010000 		.word	.L16+1
 255 0098 45010000 		.word	.L1+1
 256 009c 25010000 		.word	.L17+1
 257 00a0 45010000 		.word	.L1+1
 258 00a4 2D010000 		.word	.L18+1
 259 00a8 45010000 		.word	.L1+1
 260 00ac 35010000 		.word	.L19+1
 261 00b0 45010000 		.word	.L1+1
 262 00b4 3D010000 		.word	.L20+1
 263              		.p2align 1
 264              	.L4:
  57:.\main.c      ****         {
  58:.\main.c      ****             case 4:
  59:.\main.c      ****                 //usbPutString("RSSI:");
  60:.\main.c      ****                 //usbPutString(byte_packet);
  61:.\main.c      ****                 //usbPutString("\r\n");
  62:.\main.c      ****                 buffer_state.rssi = packet[0];
 265              		.loc 1 62 0
 266 00b8 264B     		ldr	r3, .L21+4
 267 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 268 00bc DAB2     		uxtb	r2, r3
 269 00be 274B     		ldr	r3, .L21+12
 270 00c0 1A70     		strb	r2, [r3]
  63:.\main.c      ****                 buffer_state.index = packet[1];
 271              		.loc 1 63 0
 272 00c2 244B     		ldr	r3, .L21+4
 273 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 7


 274 00c6 254B     		ldr	r3, .L21+12
 275 00c8 5A70     		strb	r2, [r3, #1]
  64:.\main.c      ****             break;
 276              		.loc 1 64 0
 277 00ca 3BE0     		b	.L1
 278              	.L6:
  65:.\main.c      ****             case 6:
  66:.\main.c      ****                 //usbPutString("robot_x:");
  67:.\main.c      ****                 //usbPutString(string_packet);
  68:.\main.c      ****                 //usbPutString("\r\n");
  69:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 279              		.loc 1 69 0
 280 00cc FA8B     		ldrh	r2, [r7, #30]
 281 00ce 234B     		ldr	r3, .L21+12
 282 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  70:.\main.c      ****             break;
 283              		.loc 1 70 0
 284 00d2 37E0     		b	.L1
 285              	.L7:
  71:.\main.c      ****             case 8:
  72:.\main.c      ****                 //usbPutString("robot_y:");
  73:.\main.c      ****                 //usbPutString(string_packet);
  74:.\main.c      ****                 //usbPutString("\r\n");
  75:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 286              		.loc 1 75 0
 287 00d4 FA8B     		ldrh	r2, [r7, #30]
 288 00d6 214B     		ldr	r3, .L21+12
 289 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  76:.\main.c      ****             break;
 290              		.loc 1 76 0
 291 00da 33E0     		b	.L1
 292              	.L8:
  77:.\main.c      ****             case 10:
  78:.\main.c      ****                 //usbPutString("robot_dir:");
  79:.\main.c      ****                 //usbPutString(string_packet);
  80:.\main.c      ****                 //usbPutString("\r\n");
  81:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 293              		.loc 1 81 0
 294 00dc FA8B     		ldrh	r2, [r7, #30]
 295 00de 1F4B     		ldr	r3, .L21+12
 296 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  82:.\main.c      ****             break;
 297              		.loc 1 82 0
 298 00e2 2FE0     		b	.L1
 299              	.L9:
  83:.\main.c      ****             case 12:
  84:.\main.c      ****                 //usbPutString("g0_x:");
  85:.\main.c      ****                 //usbPutString(string_packet);
  86:.\main.c      ****                 //usbPutString("\r\n");
  87:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 300              		.loc 1 87 0
 301 00e4 FA8B     		ldrh	r2, [r7, #30]
 302 00e6 1D4B     		ldr	r3, .L21+12
 303 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  88:.\main.c      ****             break;
 304              		.loc 1 88 0
 305 00ea 2BE0     		b	.L1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 8


 306              	.L10:
  89:.\main.c      ****             case 14:
  90:.\main.c      ****                 //usbPutString("g0_y:");
  91:.\main.c      ****                 //usbPutString(string_packet);
  92:.\main.c      ****                 //usbPutString("\r\n");
  93:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 307              		.loc 1 93 0
 308 00ec FA8B     		ldrh	r2, [r7, #30]
 309 00ee 1B4B     		ldr	r3, .L21+12
 310 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  94:.\main.c      ****             break;
 311              		.loc 1 94 0
 312 00f2 27E0     		b	.L1
 313              	.L11:
  95:.\main.c      ****             case 16:
  96:.\main.c      ****                 //usbPutString("g0_speed:");
  97:.\main.c      ****                 //usbPutString(string_packet);
  98:.\main.c      ****                 //usbPutString("\r\n");
  99:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 314              		.loc 1 99 0
 315 00f4 FA8B     		ldrh	r2, [r7, #30]
 316 00f6 194B     		ldr	r3, .L21+12
 317 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 100:.\main.c      ****             break;
 318              		.loc 1 100 0
 319 00fa 23E0     		b	.L1
 320              	.L12:
 101:.\main.c      ****             case 18:
 102:.\main.c      ****                 //usbPutString("g1_dir:");
 103:.\main.c      ****                 //usbPutString(string_packet);
 104:.\main.c      ****                 //usbPutString("\r\n");
 105:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 321              		.loc 1 105 0
 322 00fc FA8B     		ldrh	r2, [r7, #30]
 323 00fe 174B     		ldr	r3, .L21+12
 324 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 106:.\main.c      ****             break;
 325              		.loc 1 106 0
 326 0102 1FE0     		b	.L1
 327              	.L13:
 107:.\main.c      ****             case 20:
 108:.\main.c      ****                 //usbPutString("g1_x:");
 109:.\main.c      ****                 //usbPutString(string_packet);
 110:.\main.c      ****                 //usbPutString("\r\n");
 111:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 328              		.loc 1 111 0
 329 0104 FA8B     		ldrh	r2, [r7, #30]
 330 0106 154B     		ldr	r3, .L21+12
 331 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 112:.\main.c      ****             break;
 332              		.loc 1 112 0
 333 010a 1BE0     		b	.L1
 334              	.L14:
 113:.\main.c      ****             case 22:
 114:.\main.c      ****                 //usbPutString("g1_y:");
 115:.\main.c      ****                 //usbPutString(string_packet);
 116:.\main.c      ****                 //usbPutString("\r\n");
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 9


 117:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 335              		.loc 1 117 0
 336 010c FA8B     		ldrh	r2, [r7, #30]
 337 010e 134B     		ldr	r3, .L21+12
 338 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 118:.\main.c      ****             break;
 339              		.loc 1 118 0
 340 0112 17E0     		b	.L1
 341              	.L15:
 119:.\main.c      ****             case 24:
 120:.\main.c      ****                 //usbPutString("g1_speed:");
 121:.\main.c      ****                 //usbPutString(string_packet);
 122:.\main.c      ****                 //usbPutString("\r\n");
 123:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 342              		.loc 1 123 0
 343 0114 FA8B     		ldrh	r2, [r7, #30]
 344 0116 114B     		ldr	r3, .L21+12
 345 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 124:.\main.c      ****             break;
 346              		.loc 1 124 0
 347 011a 13E0     		b	.L1
 348              	.L16:
 125:.\main.c      ****             case 26:
 126:.\main.c      ****                 //usbPutString("g1_dir:");
 127:.\main.c      ****                 //usbPutString(string_packet);
 128:.\main.c      ****                 //usbPutString("\r\n");
 129:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 349              		.loc 1 129 0
 350 011c FA8B     		ldrh	r2, [r7, #30]
 351 011e 0F4B     		ldr	r3, .L21+12
 352 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 130:.\main.c      ****             break;
 353              		.loc 1 130 0
 354 0122 0FE0     		b	.L1
 355              	.L17:
 131:.\main.c      ****             case 28:
 132:.\main.c      ****                 //usbPutString("g2_x:");
 133:.\main.c      ****                 //usbPutString(string_packet);
 134:.\main.c      ****                 //usbPutString("\r\n");
 135:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 356              		.loc 1 135 0
 357 0124 FA8B     		ldrh	r2, [r7, #30]
 358 0126 0D4B     		ldr	r3, .L21+12
 359 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 136:.\main.c      ****             break;
 360              		.loc 1 136 0
 361 012a 0BE0     		b	.L1
 362              	.L18:
 137:.\main.c      ****             case 30:
 138:.\main.c      ****                 //usbPutString("g2_y:");
 139:.\main.c      ****                 //usbPutString(string_packet);
 140:.\main.c      ****                 //usbPutString("\r\n");
 141:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 363              		.loc 1 141 0
 364 012c FA8B     		ldrh	r2, [r7, #30]
 365 012e 0B4B     		ldr	r3, .L21+12
 366 0130 5A83     		strh	r2, [r3, #26]	@ movhi
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 10


 142:.\main.c      ****             break;
 367              		.loc 1 142 0
 368 0132 07E0     		b	.L1
 369              	.L19:
 143:.\main.c      ****             case 32:
 144:.\main.c      ****                 //usbPutString("g1_speed:");
 145:.\main.c      ****                 //usbPutString(string_packet);
 146:.\main.c      ****                 //usbPutString("\r\n");
 147:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 370              		.loc 1 147 0
 371 0134 FA8B     		ldrh	r2, [r7, #30]
 372 0136 094B     		ldr	r3, .L21+12
 373 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 148:.\main.c      ****             break;
 374              		.loc 1 148 0
 375 013a 03E0     		b	.L1
 376              	.L20:
 149:.\main.c      ****             case 34:
 150:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 377              		.loc 1 150 0
 378 013c FA8B     		ldrh	r2, [r7, #30]
 379 013e 074B     		ldr	r3, .L21+12
 380 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 151:.\main.c      ****                 //usbPutString("g2_dir:");
 152:.\main.c      ****                 //usbPutString(string_packet);
 153:.\main.c      ****                 //usbPutString("\r\n");
 154:.\main.c      ****                 
 155:.\main.c      ****             break;
 381              		.loc 1 155 0
 382 0142 00BF     		nop
 383              	.L1:
 384              	.LBE2:
 156:.\main.c      ****         }
 157:.\main.c      ****         
 158:.\main.c      ****     }
 159:.\main.c      **** }
 385              		.loc 1 159 0
 386 0144 2437     		adds	r7, r7, #36
 387              		.cfi_def_cfa_offset 4
 388 0146 BD46     		mov	sp, r7
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0148 5DF8047B 		ldr	r7, [sp], #4
 392              		.cfi_restore 7
 393              		.cfi_def_cfa_offset 0
 394 014c 7047     		bx	lr
 395              	.L22:
 396 014e 00BF     		.align	2
 397              	.L21:
 398 0150 00000000 		.word	flag_rx
 399 0154 00000000 		.word	packet
 400 0158 00000000 		.word	byteCount
 401 015c 00000000 		.word	buffer_state
 402              		.cfi_endproc
 403              	.LFE63:
 404              		.size	handle_rx_binary, .-handle_rx_binary
 405              		.section	.text.setSpeed,"ax",%progbits
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 11


 406              		.align	2
 407              		.global	setSpeed
 408              		.thumb
 409              		.thumb_func
 410              		.type	setSpeed, %function
 411              	setSpeed:
 412              	.LFB64:
 160:.\main.c      **** 
 161:.\main.c      **** void setSpeed(int right, int left){
 413              		.loc 1 161 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418 0000 80B4     		push	{r7}
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 83B0     		sub	sp, sp, #12
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 0006 7860     		str	r0, [r7, #4]
 426 0008 3960     		str	r1, [r7]
 162:.\main.c      ****     leftSpeedLimit = right;
 427              		.loc 1 162 0
 428 000a 7B68     		ldr	r3, [r7, #4]
 429 000c 9AB2     		uxth	r2, r3
 430 000e 054B     		ldr	r3, .L24
 431 0010 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****     rightSpeedLimit = left;
 432              		.loc 1 163 0
 433 0012 3B68     		ldr	r3, [r7]
 434 0014 9AB2     		uxth	r2, r3
 435 0016 044B     		ldr	r3, .L24+4
 436 0018 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      **** }
 437              		.loc 1 164 0
 438 001a 0C37     		adds	r7, r7, #12
 439              		.cfi_def_cfa_offset 4
 440 001c BD46     		mov	sp, r7
 441              		.cfi_def_cfa_register 13
 442              		@ sp needed
 443 001e 5DF8047B 		ldr	r7, [sp], #4
 444              		.cfi_restore 7
 445              		.cfi_def_cfa_offset 0
 446 0022 7047     		bx	lr
 447              	.L25:
 448              		.align	2
 449              	.L24:
 450 0024 00000000 		.word	leftSpeedLimit
 451 0028 00000000 		.word	rightSpeedLimit
 452              		.cfi_endproc
 453              	.LFE64:
 454              		.size	setSpeed, .-setSpeed
 455              		.section	.text.brakeMotor,"ax",%progbits
 456              		.align	2
 457              		.global	brakeMotor
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 12


 458              		.thumb
 459              		.thumb_func
 460              		.type	brakeMotor, %function
 461              	brakeMotor:
 462              	.LFB65:
 165:.\main.c      **** 
 166:.\main.c      **** void brakeMotor(){
 463              		.loc 1 166 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467 0000 80B5     		push	{r7, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 167:.\main.c      ****     setSpeed(0, 0);
 473              		.loc 1 167 0
 474 0004 0020     		movs	r0, #0
 475 0006 0021     		movs	r1, #0
 476 0008 FFF7FEFF 		bl	setSpeed
 168:.\main.c      ****     PWM_1_WriteCompare(0);
 477              		.loc 1 168 0
 478 000c 0020     		movs	r0, #0
 479 000e FFF7FEFF 		bl	PWM_1_WriteCompare
 169:.\main.c      ****     PWM_2_WriteCompare(0);
 480              		.loc 1 169 0
 481 0012 0020     		movs	r0, #0
 482 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 170:.\main.c      ****     right_duty_cycle = 0;
 483              		.loc 1 170 0
 484 0018 034B     		ldr	r3, .L27
 485 001a 0022     		movs	r2, #0
 486 001c 1A80     		strh	r2, [r3]	@ movhi
 171:.\main.c      ****     left_duty_cycle = 0;
 487              		.loc 1 171 0
 488 001e 034B     		ldr	r3, .L27+4
 489 0020 0022     		movs	r2, #0
 490 0022 1A80     		strh	r2, [r3]	@ movhi
 172:.\main.c      **** }
 491              		.loc 1 172 0
 492 0024 80BD     		pop	{r7, pc}
 493              	.L28:
 494 0026 00BF     		.align	2
 495              	.L27:
 496 0028 00000000 		.word	right_duty_cycle
 497 002c 00000000 		.word	left_duty_cycle
 498              		.cfi_endproc
 499              	.LFE65:
 500              		.size	brakeMotor, .-brakeMotor
 501              		.section	.text.rxInt,"ax",%progbits
 502              		.align	2
 503              		.global	rxInt
 504              		.thumb
 505              		.thumb_func
 506              		.type	rxInt, %function
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 13


 507              	rxInt:
 508              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** //Binary RF Data
 175:.\main.c      **** CY_ISR(rxInt){
 509              		.loc 1 175 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 8
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 B0B5     		push	{r4, r5, r7, lr}
 514              		.cfi_def_cfa_offset 16
 515              		.cfi_offset 4, -16
 516              		.cfi_offset 5, -12
 517              		.cfi_offset 7, -8
 518              		.cfi_offset 14, -4
 519 0002 82B0     		sub	sp, sp, #8
 520              		.cfi_def_cfa_offset 24
 521 0004 00AF     		add	r7, sp, #0
 522              		.cfi_def_cfa_register 7
 176:.\main.c      ****     char rf_char = UART_GetChar();
 523              		.loc 1 176 0
 524 0006 FFF7FEFF 		bl	UART_GetChar
 525 000a 0346     		mov	r3, r0
 526 000c FB71     		strb	r3, [r7, #7]
 177:.\main.c      ****     if(rf_char == SOP){
 527              		.loc 1 177 0
 528 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 529 0010 AA2B     		cmp	r3, #170
 530 0012 1CD1     		bne	.L30
 178:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 179:.\main.c      ****             if(byteCount == 34)
 531              		.loc 1 179 0
 532 0014 1B4B     		ldr	r3, .L34
 533 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 534 0018 222B     		cmp	r3, #34
 535 001a 11D1     		bne	.L31
 180:.\main.c      ****             {
 181:.\main.c      ****                 system_state = buffer_state;
 536              		.loc 1 181 0
 537 001c 1A4B     		ldr	r3, .L34+4
 538 001e 1B4A     		ldr	r2, .L34+8
 539 0020 1568     		ldr	r5, [r2]	@ unaligned
 540 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 541 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 542 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 543 0028 1D60     		str	r5, [r3]	@ unaligned
 544 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 545 002c 9860     		str	r0, [r3, #8]	@ unaligned
 546 002e D960     		str	r1, [r3, #12]	@ unaligned
 547 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 548 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 549 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 550 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 551 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 552 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 553 003c 9861     		str	r0, [r3, #24]	@ unaligned
 554 003e D961     		str	r1, [r3, #28]	@ unaligned
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 14


 555              	.L31:
 182:.\main.c      ****             }
 183:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 556              		.loc 1 183 0
 557 0040 104B     		ldr	r3, .L34
 558 0042 0222     		movs	r2, #2
 559 0044 1A70     		strb	r2, [r3]
 184:.\main.c      ****             flag_rx = 0;
 560              		.loc 1 184 0
 561 0046 124B     		ldr	r3, .L34+12
 562 0048 0022     		movs	r2, #0
 563 004a 1A70     		strb	r2, [r3]
 564 004c 16E0     		b	.L29
 565              	.L30:
 185:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 186:.\main.c      ****         }
 187:.\main.c      ****         else
 188:.\main.c      ****         {
 189:.\main.c      ****             packet[byteCount % 2] = rf_char;
 566              		.loc 1 189 0
 567 004e 0D4B     		ldr	r3, .L34
 568 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 569 0052 03F00103 		and	r3, r3, #1
 570 0056 0F49     		ldr	r1, .L34+16
 571 0058 FA79     		ldrb	r2, [r7, #7]
 572 005a CA54     		strb	r2, [r1, r3]
 190:.\main.c      ****            
 191:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 573              		.loc 1 191 0
 574 005c 094B     		ldr	r3, .L34
 575 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 576 0060 03F00103 		and	r3, r3, #1
 577 0064 DBB2     		uxtb	r3, r3
 578 0066 002B     		cmp	r3, #0
 579 0068 02D0     		beq	.L33
 192:.\main.c      ****             {
 193:.\main.c      ****                 flag_rx = 1;
 580              		.loc 1 193 0
 581 006a 094B     		ldr	r3, .L34+12
 582 006c 0122     		movs	r2, #1
 583 006e 1A70     		strb	r2, [r3]
 584              	.L33:
 194:.\main.c      ****             }
 195:.\main.c      ****             byteCount = (byteCount + 1);
 585              		.loc 1 195 0
 586 0070 044B     		ldr	r3, .L34
 587 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 0074 0133     		adds	r3, r3, #1
 589 0076 DAB2     		uxtb	r2, r3
 590 0078 024B     		ldr	r3, .L34
 591 007a 1A70     		strb	r2, [r3]
 592              	.L29:
 196:.\main.c      ****         }
 197:.\main.c      **** }
 593              		.loc 1 197 0
 594 007c 0837     		adds	r7, r7, #8
 595              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 15


 596 007e BD46     		mov	sp, r7
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 0080 B0BD     		pop	{r4, r5, r7, pc}
 600              	.L35:
 601 0082 00BF     		.align	2
 602              	.L34:
 603 0084 00000000 		.word	byteCount
 604 0088 00000000 		.word	system_state
 605 008c 00000000 		.word	buffer_state
 606 0090 00000000 		.word	flag_rx
 607 0094 00000000 		.word	packet
 608              		.cfi_endproc
 609              	.LFE66:
 610              		.size	rxInt, .-rxInt
 611              		.section	.text.adc_isr,"ax",%progbits
 612              		.align	2
 613              		.global	adc_isr
 614              		.thumb
 615              		.thumb_func
 616              		.type	adc_isr, %function
 617              	adc_isr:
 618              	.LFB67:
 198:.\main.c      **** 
 199:.\main.c      **** //ADC:
 200:.\main.c      **** CY_ISR (adc_isr)
 201:.\main.c      **** {
 619              		.loc 1 201 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 80B5     		push	{r7, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 7, -8
 626              		.cfi_offset 14, -4
 627 0002 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
 202:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 203:.\main.c      ****     adc_result = ADC_GetResult16();
 629              		.loc 1 203 0
 630 0004 FFF7FEFF 		bl	ADC_GetResult16
 631 0008 0346     		mov	r3, r0
 632 000a 1A46     		mov	r2, r3
 633 000c 044B     		ldr	r3, .L37
 634 000e 1A80     		strh	r2, [r3]	@ movhi
 204:.\main.c      ****     flag_receive_ADC = 1;
 635              		.loc 1 204 0
 636 0010 044B     		ldr	r3, .L37+4
 637 0012 0122     		movs	r2, #1
 638 0014 1A70     		strb	r2, [r3]
 205:.\main.c      ****     flag_print_rf = 1;
 639              		.loc 1 205 0
 640 0016 044B     		ldr	r3, .L37+8
 641 0018 0122     		movs	r2, #1
 642 001a 1A70     		strb	r2, [r3]
 206:.\main.c      ****     //LED_Write(~LED_Read());
 207:.\main.c      **** }
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 16


 643              		.loc 1 207 0
 644 001c 80BD     		pop	{r7, pc}
 645              	.L38:
 646 001e 00BF     		.align	2
 647              	.L37:
 648 0020 00000000 		.word	adc_result
 649 0024 00000000 		.word	flag_receive_ADC
 650 0028 00000000 		.word	flag_print_rf
 651              		.cfi_endproc
 652              	.LFE67:
 653              		.size	adc_isr, .-adc_isr
 654              		.section	.text.isr_quad1,"ax",%progbits
 655              		.align	2
 656              		.global	isr_quad1
 657              		.thumb
 658              		.thumb_func
 659              		.type	isr_quad1, %function
 660              	isr_quad1:
 661              	.LFB68:
 208:.\main.c      **** 
 209:.\main.c      **** CY_ISR (isr_quad1)
 210:.\main.c      **** {
 662              		.loc 1 210 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666 0000 80B5     		push	{r7, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 7, -8
 669              		.cfi_offset 14, -4
 670 0002 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 211:.\main.c      ****     //LED_Write(~LED_Read());
 212:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 672              		.loc 1 212 0
 673 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 674 0008 0346     		mov	r3, r0
 675 000a 1A46     		mov	r2, r3
 676 000c 084B     		ldr	r3, .L40
 677 000e 1A80     		strh	r2, [r3]	@ movhi
 213:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 678              		.loc 1 213 0
 679 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 680 0014 0346     		mov	r3, r0
 681 0016 1A46     		mov	r2, r3
 682 0018 064B     		ldr	r3, .L40+4
 683 001a 1A80     		strh	r2, [r3]	@ movhi
 214:.\main.c      ****     QuadDec_M1_SetCounter(0);
 684              		.loc 1 214 0
 685 001c 0020     		movs	r0, #0
 686 001e FFF7FEFF 		bl	QuadDec_M1_SetCounter
 215:.\main.c      ****     QuadDec_M2_SetCounter(0);
 687              		.loc 1 215 0
 688 0022 0020     		movs	r0, #0
 689 0024 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 216:.\main.c      ****     flag_calc_wheelspeed = 1;
 690              		.loc 1 216 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 17


 691 0028 034B     		ldr	r3, .L40+8
 692 002a 0122     		movs	r2, #1
 693 002c 1A70     		strb	r2, [r3]
 217:.\main.c      **** }
 694              		.loc 1 217 0
 695 002e 80BD     		pop	{r7, pc}
 696              	.L41:
 697              		.align	2
 698              	.L40:
 699 0030 00000000 		.word	quad_count1
 700 0034 00000000 		.word	quad_count2
 701 0038 00000000 		.word	flag_calc_wheelspeed
 702              		.cfi_endproc
 703              	.LFE68:
 704              		.size	isr_quad1, .-isr_quad1
 705              		.section	.text.Stop_on_line,"ax",%progbits
 706              		.align	2
 707              		.global	Stop_on_line
 708              		.thumb
 709              		.thumb_func
 710              		.type	Stop_on_line, %function
 711              	Stop_on_line:
 712              	.LFB69:
 218:.\main.c      **** 
 219:.\main.c      **** CY_ISR (Stop_on_line)
 220:.\main.c      **** {
 713              		.loc 1 220 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 221:.\main.c      ****     brakeMotor();
 723              		.loc 1 221 0
 724 0004 FFF7FEFF 		bl	brakeMotor
 222:.\main.c      **** }
 725              		.loc 1 222 0
 726 0008 80BD     		pop	{r7, pc}
 727              		.cfi_endproc
 728              	.LFE69:
 729              		.size	Stop_on_line, .-Stop_on_line
 730 000a 00BF     		.section	.text.button,"ax",%progbits
 731              		.align	2
 732              		.global	button
 733              		.thumb
 734              		.thumb_func
 735              		.type	button, %function
 736              	button:
 737              	.LFB70:
 223:.\main.c      **** 
 224:.\main.c      **** CY_ISR (button)
 225:.\main.c      **** {
 738              		.loc 1 225 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 18


 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 226:.\main.c      ****     setSpeed(20, 20);
 748              		.loc 1 226 0
 749 0004 1420     		movs	r0, #20
 750 0006 1421     		movs	r1, #20
 751 0008 FFF7FEFF 		bl	setSpeed
 227:.\main.c      **** }
 752              		.loc 1 227 0
 753 000c 80BD     		pop	{r7, pc}
 754              		.cfi_endproc
 755              	.LFE70:
 756              		.size	button, .-button
 757 000e 00BF     		.section	.text.isr_adcTimer,"ax",%progbits
 758              		.align	2
 759              		.global	isr_adcTimer
 760              		.thumb
 761              		.thumb_func
 762              		.type	isr_adcTimer, %function
 763              	isr_adcTimer:
 764              	.LFB71:
 228:.\main.c      **** 
 229:.\main.c      **** CY_ISR(isr_adcTimer)
 230:.\main.c      **** {
 765              		.loc 1 230 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769 0000 80B5     		push	{r7, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 231:.\main.c      ****     ADC_StartConvert();
 775              		.loc 1 231 0
 776 0004 FFF7FEFF 		bl	ADC_StartConvert
 232:.\main.c      **** }
 777              		.loc 1 232 0
 778 0008 80BD     		pop	{r7, pc}
 779              		.cfi_endproc
 780              	.LFE71:
 781              		.size	isr_adcTimer, .-isr_adcTimer
 782 000a 00BF     		.section	.rodata
 783              		.align	2
 784              	.LC0:
 785 0000 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
 785      20636F75 
 785      6E742031 
 785      2069733A 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 19


 785      2025640A 
 786 0016 0000     		.align	2
 787              	.LC1:
 788 0018 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 788      20636F75 
 788      6E742032 
 788      2069733A 
 788      2025640A 
 789 002e 0000     		.align	2
 790              	.LC2:
 791 0030 52696768 		.ascii	"Right wheel too fast! Slowing down \015\012\000"
 791      74207768 
 791      65656C20 
 791      746F6F20 
 791      66617374 
 792 0056 0000     		.align	2
 793              	.LC3:
 794 0058 52696768 		.ascii	"Right wheel duty cycle is now:%d\015\012\000"
 794      74207768 
 794      65656C20 
 794      64757479 
 794      20637963 
 795 007b 00       		.align	2
 796              	.LC4:
 797 007c 52696768 		.ascii	"Right wheel too slow, speeding up! \015\012\000"
 797      74207768 
 797      65656C20 
 797      746F6F20 
 797      736C6F77 
 798              		.section	.text.Quad_Dec_response,"ax",%progbits
 799              		.align	2
 800              		.global	Quad_Dec_response
 801              		.thumb
 802              		.thumb_func
 803              		.type	Quad_Dec_response, %function
 804              	Quad_Dec_response:
 805              	.LFB72:
 233:.\main.c      **** 
 234:.\main.c      **** void Quad_Dec_response()
 235:.\main.c      **** {
 806              		.loc 1 235 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 136
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810 0000 B0B5     		push	{r4, r5, r7, lr}
 811              		.cfi_def_cfa_offset 16
 812              		.cfi_offset 4, -16
 813              		.cfi_offset 5, -12
 814              		.cfi_offset 7, -8
 815              		.cfi_offset 14, -4
 816 0002 A2B0     		sub	sp, sp, #136
 817              		.cfi_def_cfa_offset 152
 818 0004 00AF     		add	r7, sp, #0
 819              		.cfi_def_cfa_register 7
 236:.\main.c      ****     //Check if the flag has been set
 237:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 820              		.loc 1 237 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 20


 821 0006 794B     		ldr	r3, .L60
 822 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 823 000a 002B     		cmp	r3, #0
 824 000c 00F0EA80 		beq	.L45
 238:.\main.c      ****     flag_calc_wheelspeed = 0;
 825              		.loc 1 238 0
 826 0010 764B     		ldr	r3, .L60
 827 0012 0022     		movs	r2, #0
 828 0014 1A70     		strb	r2, [r3]
 239:.\main.c      ****     
 240:.\main.c      ****     char wheel_1_str [64];
 241:.\main.c      ****     char wheel_2_str [64];
 242:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_count1);
 829              		.loc 1 242 0
 830 0016 764B     		ldr	r3, .L60+4
 831 0018 1B88     		ldrh	r3, [r3]
 832 001a 1BB2     		sxth	r3, r3
 833 001c 07F14002 		add	r2, r7, #64
 834 0020 1046     		mov	r0, r2
 835 0022 7449     		ldr	r1, .L60+8
 836 0024 1A46     		mov	r2, r3
 837 0026 FFF7FEFF 		bl	sprintf
 243:.\main.c      ****     //usbPutString(wheel_1_str);
 244:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_count2);
 838              		.loc 1 244 0
 839 002a 734B     		ldr	r3, .L60+12
 840 002c 1B88     		ldrh	r3, [r3]
 841 002e 1BB2     		sxth	r3, r3
 842 0030 3A46     		mov	r2, r7
 843 0032 1046     		mov	r0, r2
 844 0034 7149     		ldr	r1, .L60+16
 845 0036 1A46     		mov	r2, r3
 846 0038 FFF7FEFF 		bl	sprintf
 245:.\main.c      ****     
 246:.\main.c      ****     //usbPutString(wheel_2_str);
 247:.\main.c      ****     
 248:.\main.c      ****     int16 leftSpeed = quad_count1;
 847              		.loc 1 248 0
 848 003c 6C4B     		ldr	r3, .L60+4
 849 003e 1B88     		ldrh	r3, [r3]	@ movhi
 850 0040 A7F88230 		strh	r3, [r7, #130]	@ movhi
 249:.\main.c      ****     int16 rightSpeed = quad_count2;
 851              		.loc 1 249 0
 852 0044 6C4B     		ldr	r3, .L60+12
 853 0046 1B88     		ldrh	r3, [r3]	@ movhi
 854 0048 A7F88030 		strh	r3, [r7, #128]	@ movhi
 250:.\main.c      ****     
 251:.\main.c      ****     int16 left_direction = 1;
 855              		.loc 1 251 0
 856 004c 0123     		movs	r3, #1
 857 004e A7F88630 		strh	r3, [r7, #134]	@ movhi
 252:.\main.c      ****     int16 right_direction = 1;
 858              		.loc 1 252 0
 859 0052 0123     		movs	r3, #1
 860 0054 A7F88430 		strh	r3, [r7, #132]	@ movhi
 253:.\main.c      ****     
 254:.\main.c      ****     if (leftSpeed > 0) {
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 21


 861              		.loc 1 254 0
 862 0058 B7F98230 		ldrsh	r3, [r7, #130]
 863 005c 002B     		cmp	r3, #0
 864 005e 04DD     		ble	.L48
 255:.\main.c      ****         left_direction = -1;
 865              		.loc 1 255 0
 866 0060 4FF6FF73 		movw	r3, #65535
 867 0064 A7F88630 		strh	r3, [r7, #134]	@ movhi
 868 0068 02E0     		b	.L49
 869              	.L48:
 256:.\main.c      ****     } else {
 257:.\main.c      ****         left_direction = 1;
 870              		.loc 1 257 0
 871 006a 0123     		movs	r3, #1
 872 006c A7F88630 		strh	r3, [r7, #134]	@ movhi
 873              	.L49:
 258:.\main.c      ****     }
 259:.\main.c      ****     if (rightSpeed < 0) {
 874              		.loc 1 259 0
 875 0070 B7F98030 		ldrsh	r3, [r7, #128]
 876 0074 002B     		cmp	r3, #0
 877 0076 04DA     		bge	.L50
 260:.\main.c      ****         right_direction = -1;
 878              		.loc 1 260 0
 879 0078 4FF6FF73 		movw	r3, #65535
 880 007c A7F88430 		strh	r3, [r7, #132]	@ movhi
 881 0080 02E0     		b	.L51
 882              	.L50:
 261:.\main.c      ****     } else {
 262:.\main.c      ****         right_direction = 1;
 883              		.loc 1 262 0
 884 0082 0123     		movs	r3, #1
 885 0084 A7F88430 		strh	r3, [r7, #132]	@ movhi
 886              	.L51:
 263:.\main.c      ****     }
 264:.\main.c      ****     
 265:.\main.c      ****     if (abs(leftSpeed) > leftSpeedLimit){
 887              		.loc 1 265 0
 888 0088 B7F98230 		ldrsh	r3, [r7, #130]
 889 008c 83EAE372 		eor	r2, r3, r3, asr #31
 890 0090 A2EBE372 		sub	r2, r2, r3, asr #31
 891 0094 5A4B     		ldr	r3, .L60+20
 892 0096 1B88     		ldrh	r3, [r3]
 893 0098 1BB2     		sxth	r3, r3
 894 009a 9A42     		cmp	r2, r3
 895 009c 0ADD     		ble	.L52
 266:.\main.c      ****         //sprintf(wheel_1_str,"Left wheel too fast! Slowing down \r\n");
 267:.\main.c      ****         //usbPutString(wheel_1_str);
 268:.\main.c      ****         
 269:.\main.c      ****         left_duty_cycle = left_duty_cycle + (-1 * left_direction);
 896              		.loc 1 269 0
 897 009e 594B     		ldr	r3, .L60+24
 898 00a0 1B88     		ldrh	r3, [r3]
 899 00a2 9AB2     		uxth	r2, r3
 900 00a4 B7F88630 		ldrh	r3, [r7, #134]
 901 00a8 D31A     		subs	r3, r2, r3
 902 00aa 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 22


 903 00ac 9AB2     		uxth	r2, r3
 904 00ae 554B     		ldr	r3, .L60+24
 905 00b0 1A80     		strh	r2, [r3]	@ movhi
 906 00b2 14E0     		b	.L53
 907              	.L52:
 270:.\main.c      ****     } else if (abs(leftSpeed) < leftSpeedLimit) {
 908              		.loc 1 270 0
 909 00b4 B7F98230 		ldrsh	r3, [r7, #130]
 910 00b8 83EAE372 		eor	r2, r3, r3, asr #31
 911 00bc A2EBE372 		sub	r2, r2, r3, asr #31
 912 00c0 4F4B     		ldr	r3, .L60+20
 913 00c2 1B88     		ldrh	r3, [r3]
 914 00c4 1BB2     		sxth	r3, r3
 915 00c6 9A42     		cmp	r2, r3
 916 00c8 09DA     		bge	.L53
 271:.\main.c      ****        // sprintf(wheel_1_str,"Left wheel too slow! Speeding up \r\n");
 272:.\main.c      ****         //usbPutString(wheel_1_str);
 273:.\main.c      ****         left_duty_cycle = left_duty_cycle + left_direction;
 917              		.loc 1 273 0
 918 00ca 4E4B     		ldr	r3, .L60+24
 919 00cc 1B88     		ldrh	r3, [r3]
 920 00ce 9AB2     		uxth	r2, r3
 921 00d0 B7F88630 		ldrh	r3, [r7, #134]
 922 00d4 1344     		add	r3, r3, r2
 923 00d6 9BB2     		uxth	r3, r3
 924 00d8 9AB2     		uxth	r2, r3
 925 00da 4A4B     		ldr	r3, .L60+24
 926 00dc 1A80     		strh	r2, [r3]	@ movhi
 927              	.L53:
 274:.\main.c      ****     }
 275:.\main.c      ****     
 276:.\main.c      ****     if (abs(rightSpeed) > rightSpeedLimit){
 928              		.loc 1 276 0
 929 00de B7F98030 		ldrsh	r3, [r7, #128]
 930 00e2 83EAE372 		eor	r2, r3, r3, asr #31
 931 00e6 A2EBE372 		sub	r2, r2, r3, asr #31
 932 00ea 474B     		ldr	r3, .L60+28
 933 00ec 1B88     		ldrh	r3, [r3]
 934 00ee 1BB2     		sxth	r3, r3
 935 00f0 9A42     		cmp	r2, r3
 936 00f2 20DD     		ble	.L54
 277:.\main.c      ****         sprintf(wheel_2_str,"Right wheel too fast! Slowing down \r\n");
 937              		.loc 1 277 0
 938 00f4 3B46     		mov	r3, r7
 939 00f6 454A     		ldr	r2, .L60+32
 940 00f8 1C46     		mov	r4, r3
 941 00fa 1546     		mov	r5, r2
 942 00fc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 943 00fe 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 944 0100 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 945 0102 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 946 0104 95E80300 		ldmia	r5, {r0, r1}
 947 0108 2060     		str	r0, [r4]
 948 010a 0434     		adds	r4, r4, #4
 949 010c 2180     		strh	r1, [r4]	@ movhi
 278:.\main.c      ****        // usbPutString(wheel_2_str);
 279:.\main.c      ****         right_duty_cycle = right_duty_cycle + (-1 * right_direction);
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 23


 950              		.loc 1 279 0
 951 010e 404B     		ldr	r3, .L60+36
 952 0110 1B88     		ldrh	r3, [r3]
 953 0112 9AB2     		uxth	r2, r3
 954 0114 B7F88430 		ldrh	r3, [r7, #132]
 955 0118 D31A     		subs	r3, r2, r3
 956 011a 9BB2     		uxth	r3, r3
 957 011c 9AB2     		uxth	r2, r3
 958 011e 3C4B     		ldr	r3, .L60+36
 959 0120 1A80     		strh	r2, [r3]	@ movhi
 280:.\main.c      ****         sprintf(wheel_2_str,"Right wheel duty cycle is now:%d\r\n", right_duty_cycle);
 960              		.loc 1 280 0
 961 0122 3B4B     		ldr	r3, .L60+36
 962 0124 1B88     		ldrh	r3, [r3]
 963 0126 1BB2     		sxth	r3, r3
 964 0128 3A46     		mov	r2, r7
 965 012a 1046     		mov	r0, r2
 966 012c 3949     		ldr	r1, .L60+40
 967 012e 1A46     		mov	r2, r3
 968 0130 FFF7FEFF 		bl	sprintf
 969 0134 2AE0     		b	.L55
 970              	.L54:
 281:.\main.c      ****         //usbPutString(wheel_2_str);
 282:.\main.c      ****     } else if (abs(rightSpeed) < rightSpeedLimit) {
 971              		.loc 1 282 0
 972 0136 B7F98030 		ldrsh	r3, [r7, #128]
 973 013a 83EAE372 		eor	r2, r3, r3, asr #31
 974 013e A2EBE372 		sub	r2, r2, r3, asr #31
 975 0142 314B     		ldr	r3, .L60+28
 976 0144 1B88     		ldrh	r3, [r3]
 977 0146 1BB2     		sxth	r3, r3
 978 0148 9A42     		cmp	r2, r3
 979 014a 1FDA     		bge	.L55
 283:.\main.c      ****         sprintf(wheel_2_str,"Right wheel too slow, speeding up! \r\n");
 980              		.loc 1 283 0
 981 014c 3B46     		mov	r3, r7
 982 014e 324A     		ldr	r2, .L60+44
 983 0150 1C46     		mov	r4, r3
 984 0152 1546     		mov	r5, r2
 985 0154 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 986 0156 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 987 0158 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 988 015a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 989 015c 95E80300 		ldmia	r5, {r0, r1}
 990 0160 2060     		str	r0, [r4]
 991 0162 0434     		adds	r4, r4, #4
 992 0164 2180     		strh	r1, [r4]	@ movhi
 284:.\main.c      ****         //usbPutString(wheel_2_str);
 285:.\main.c      ****         sprintf(wheel_2_str,"Right wheel duty cycle is now:%d\r\n", right_duty_cycle);
 993              		.loc 1 285 0
 994 0166 2A4B     		ldr	r3, .L60+36
 995 0168 1B88     		ldrh	r3, [r3]
 996 016a 1BB2     		sxth	r3, r3
 997 016c 3A46     		mov	r2, r7
 998 016e 1046     		mov	r0, r2
 999 0170 2849     		ldr	r1, .L60+40
 1000 0172 1A46     		mov	r2, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 24


 1001 0174 FFF7FEFF 		bl	sprintf
 286:.\main.c      ****         //usbPutString(wheel_2_str);
 287:.\main.c      ****         right_duty_cycle = right_duty_cycle + right_direction;
 1002              		.loc 1 287 0
 1003 0178 254B     		ldr	r3, .L60+36
 1004 017a 1B88     		ldrh	r3, [r3]
 1005 017c 9AB2     		uxth	r2, r3
 1006 017e B7F88430 		ldrh	r3, [r7, #132]
 1007 0182 1344     		add	r3, r3, r2
 1008 0184 9BB2     		uxth	r3, r3
 1009 0186 9AB2     		uxth	r2, r3
 1010 0188 214B     		ldr	r3, .L60+36
 1011 018a 1A80     		strh	r2, [r3]	@ movhi
 1012              	.L55:
 288:.\main.c      ****     }
 289:.\main.c      ****     
 290:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1013              		.loc 1 290 0
 1014 018c 204B     		ldr	r3, .L60+36
 1015 018e 1B88     		ldrh	r3, [r3]
 1016 0190 1BB2     		sxth	r3, r3
 1017 0192 002B     		cmp	r3, #0
 1018 0194 02DA     		bge	.L56
 1019              		.loc 1 290 0 is_stmt 0 discriminator 1
 1020 0196 1E4B     		ldr	r3, .L60+36
 1021 0198 0022     		movs	r2, #0
 1022 019a 1A80     		strh	r2, [r3]	@ movhi
 1023              	.L56:
 291:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1024              		.loc 1 291 0 is_stmt 1
 1025 019c 194B     		ldr	r3, .L60+24
 1026 019e 1B88     		ldrh	r3, [r3]
 1027 01a0 1BB2     		sxth	r3, r3
 1028 01a2 002B     		cmp	r3, #0
 1029 01a4 02DA     		bge	.L57
 1030              		.loc 1 291 0 is_stmt 0 discriminator 1
 1031 01a6 174B     		ldr	r3, .L60+24
 1032 01a8 0022     		movs	r2, #0
 1033 01aa 1A80     		strh	r2, [r3]	@ movhi
 1034              	.L57:
 292:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1035              		.loc 1 292 0 is_stmt 1
 1036 01ac 184B     		ldr	r3, .L60+36
 1037 01ae 1B88     		ldrh	r3, [r3]
 1038 01b0 1BB2     		sxth	r3, r3
 1039 01b2 642B     		cmp	r3, #100
 1040 01b4 02DD     		ble	.L58
 1041              		.loc 1 292 0 is_stmt 0 discriminator 1
 1042 01b6 164B     		ldr	r3, .L60+36
 1043 01b8 6422     		movs	r2, #100
 1044 01ba 1A80     		strh	r2, [r3]	@ movhi
 1045              	.L58:
 293:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 1046              		.loc 1 293 0 is_stmt 1
 1047 01bc 114B     		ldr	r3, .L60+24
 1048 01be 1B88     		ldrh	r3, [r3]
 1049 01c0 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 25


 1050 01c2 642B     		cmp	r3, #100
 1051 01c4 02DD     		ble	.L59
 1052              		.loc 1 293 0 is_stmt 0 discriminator 1
 1053 01c6 0F4B     		ldr	r3, .L60+24
 1054 01c8 6422     		movs	r2, #100
 1055 01ca 1A80     		strh	r2, [r3]	@ movhi
 1056              	.L59:
 294:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 1057              		.loc 1 294 0 is_stmt 1
 1058 01cc 0D4B     		ldr	r3, .L60+24
 1059 01ce 1B88     		ldrh	r3, [r3]
 1060 01d0 DBB2     		uxtb	r3, r3
 1061 01d2 1846     		mov	r0, r3
 1062 01d4 FFF7FEFF 		bl	PWM_1_WriteCompare
 295:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 1063              		.loc 1 295 0
 1064 01d8 0D4B     		ldr	r3, .L60+36
 1065 01da 1B88     		ldrh	r3, [r3]
 1066 01dc DBB2     		uxtb	r3, r3
 1067 01de 1846     		mov	r0, r3
 1068 01e0 FFF7FEFF 		bl	PWM_2_WriteCompare
 1069              	.L45:
 296:.\main.c      ****         
 297:.\main.c      **** }
 1070              		.loc 1 297 0
 1071 01e4 8837     		adds	r7, r7, #136
 1072              		.cfi_def_cfa_offset 16
 1073 01e6 BD46     		mov	sp, r7
 1074              		.cfi_def_cfa_register 13
 1075              		@ sp needed
 1076 01e8 B0BD     		pop	{r4, r5, r7, pc}
 1077              	.L61:
 1078 01ea 00BF     		.align	2
 1079              	.L60:
 1080 01ec 00000000 		.word	flag_calc_wheelspeed
 1081 01f0 00000000 		.word	quad_count1
 1082 01f4 00000000 		.word	.LC0
 1083 01f8 00000000 		.word	quad_count2
 1084 01fc 18000000 		.word	.LC1
 1085 0200 00000000 		.word	leftSpeedLimit
 1086 0204 00000000 		.word	left_duty_cycle
 1087 0208 00000000 		.word	rightSpeedLimit
 1088 020c 30000000 		.word	.LC2
 1089 0210 00000000 		.word	right_duty_cycle
 1090 0214 58000000 		.word	.LC3
 1091 0218 7C000000 		.word	.LC4
 1092              		.cfi_endproc
 1093              	.LFE72:
 1094              		.size	Quad_Dec_response, .-Quad_Dec_response
 1095              		.global	__aeabi_i2f
 1096              		.global	__aeabi_fmul
 1097              		.global	__aeabi_fadd
 1098              		.global	__aeabi_f2iz
 1099              		.section	.rodata
 1100 00a2 0000     		.align	2
 1101              	.LC5:
 1102 00a4 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 26


 1102      65727920 
 1102      566F6C74 
 1102      6167653A 
 1102      2025646D 
 1103              		.section	.text.print_ADC,"ax",%progbits
 1104              		.align	2
 1105              		.global	print_ADC
 1106              		.thumb
 1107              		.thumb_func
 1108              		.type	print_ADC, %function
 1109              	print_ADC:
 1110              	.LFB73:
 298:.\main.c      **** 
 299:.\main.c      **** void print_ADC()
 300:.\main.c      **** {
 1111              		.loc 1 300 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 24
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115 0000 80B5     		push	{r7, lr}
 1116              		.cfi_def_cfa_offset 8
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
 1119 0002 86B0     		sub	sp, sp, #24
 1120              		.cfi_def_cfa_offset 32
 1121 0004 00AF     		add	r7, sp, #0
 1122              		.cfi_def_cfa_register 7
 301:.\main.c      ****    //usbPutString("HII\n");
 302:.\main.c      ****     if(flag_receive_ADC == 1)
 1123              		.loc 1 302 0
 1124 0006 274B     		ldr	r3, .L65
 1125 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 000a 012B     		cmp	r3, #1
 1127 000c 46D1     		bne	.L62
 1128              	.LBB3:
 303:.\main.c      ****     {
 304:.\main.c      ****         //usbPutString("AAA\r\n");
 305:.\main.c      ****         flag_receive_ADC = 0;
 1129              		.loc 1 305 0
 1130 000e 254B     		ldr	r3, .L65
 1131 0010 0022     		movs	r2, #0
 1132 0012 1A70     		strb	r2, [r3]
 306:.\main.c      ****         
 307:.\main.c      ****        // int8 channel = ADC_
 308:.\main.c      ****         float scalingFactor = 0.972;
 1133              		.loc 1 308 0
 1134 0014 244B     		ldr	r3, .L65+4
 1135 0016 7B61     		str	r3, [r7, #20]	@ float
 309:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 1136              		.loc 1 309 0
 1137 0018 244B     		ldr	r3, .L65+8
 1138 001a 1B88     		ldrh	r3, [r3]
 1139 001c 1BB2     		sxth	r3, r3
 1140 001e 41F28832 		movw	r2, #5000
 1141 0022 02FB03F3 		mul	r3, r2, r3
 1142 0026 002B     		cmp	r3, #0
 1143 0028 01DA     		bge	.L64
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 27


 1144 002a 03F6FF73 		addw	r3, r3, #4095
 1145              	.L64:
 1146 002e 1B13     		asrs	r3, r3, #12
 1147 0030 1846     		mov	r0, r3
 1148 0032 FFF7FEFF 		bl	__aeabi_i2f
 1149 0036 0346     		mov	r3, r0
 1150 0038 1846     		mov	r0, r3
 1151 003a 7969     		ldr	r1, [r7, #20]	@ float
 1152 003c FFF7FEFF 		bl	__aeabi_fmul
 1153 0040 0346     		mov	r3, r0
 1154 0042 1846     		mov	r0, r3
 1155 0044 1946     		mov	r1, r3
 1156 0046 FFF7FEFF 		bl	__aeabi_fadd
 1157 004a 0346     		mov	r3, r0
 1158 004c 1846     		mov	r0, r3
 1159 004e FFF7FEFF 		bl	__aeabi_f2iz
 1160 0052 0346     		mov	r3, r0
 1161 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 310:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 1162              		.loc 1 310 0
 1163 0056 B7F91220 		ldrsh	r2, [r7, #18]
 1164 005a 154B     		ldr	r3, .L65+12
 1165 005c 1B88     		ldrh	r3, [r3]
 1166 005e 1BB2     		sxth	r3, r3
 1167 0060 1A44     		add	r2, r2, r3
 1168 0062 144B     		ldr	r3, .L65+16
 1169 0064 1B88     		ldrh	r3, [r3]
 1170 0066 1BB2     		sxth	r3, r3
 1171 0068 1344     		add	r3, r3, r2
 1172 006a 134A     		ldr	r2, .L65+20
 1173 006c 82FB0312 		smull	r1, r2, r2, r3
 1174 0070 DB17     		asrs	r3, r3, #31
 1175 0072 D31A     		subs	r3, r2, r3
 1176 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 311:.\main.c      ****         prevVoltage2 = prevVoltage;
 1177              		.loc 1 311 0
 1178 0076 0E4B     		ldr	r3, .L65+12
 1179 0078 1A88     		ldrh	r2, [r3]
 1180 007a 0E4B     		ldr	r3, .L65+16
 1181 007c 1A80     		strh	r2, [r3]	@ movhi
 312:.\main.c      ****         prevVoltage = converted_val;
 1182              		.loc 1 312 0
 1183 007e 0C4A     		ldr	r2, .L65+12
 1184 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1185 0082 1380     		strh	r3, [r2]	@ movhi
 313:.\main.c      ****         
 314:.\main.c      ****         char result_str[16];
 315:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 1186              		.loc 1 315 0
 1187 0084 B7F91230 		ldrsh	r3, [r7, #18]
 1188 0088 3A46     		mov	r2, r7
 1189 008a 1046     		mov	r0, r2
 1190 008c 0B49     		ldr	r1, .L65+24
 1191 008e 1A46     		mov	r2, r3
 1192 0090 FFF7FEFF 		bl	sprintf
 316:.\main.c      ****         
 317:.\main.c      ****         usbPutString(result_str);
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 28


 1193              		.loc 1 317 0
 1194 0094 3B46     		mov	r3, r7
 1195 0096 1846     		mov	r0, r3
 1196 0098 FFF7FEFF 		bl	usbPutString
 1197              	.L62:
 1198              	.LBE3:
 318:.\main.c      ****     }
 319:.\main.c      **** }
 1199              		.loc 1 319 0
 1200 009c 1837     		adds	r7, r7, #24
 1201              		.cfi_def_cfa_offset 8
 1202 009e BD46     		mov	sp, r7
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 00a0 80BD     		pop	{r7, pc}
 1206              	.L66:
 1207 00a2 00BF     		.align	2
 1208              	.L65:
 1209 00a4 00000000 		.word	flag_receive_ADC
 1210 00a8 FED4783F 		.word	1064883454
 1211 00ac 00000000 		.word	adc_result
 1212 00b0 00000000 		.word	prevVoltage
 1213 00b4 00000000 		.word	prevVoltage2
 1214 00b8 56555555 		.word	1431655766
 1215 00bc A4000000 		.word	.LC5
 1216              		.cfi_endproc
 1217              	.LFE73:
 1218              		.size	print_ADC, .-print_ADC
 1219              		.section	.rodata
 1220              		.align	2
 1221              	.LC6:
 1222 00bc 52535349 		.ascii	"RSSI:\000"
 1222      3A00
 1223 00c2 0000     		.align	2
 1224              	.LC7:
 1225 00c4 25640D0A 		.ascii	"%d\015\012\000"
 1225      00
 1226 00c9 000000   		.align	2
 1227              	.LC8:
 1228 00cc 726F626F 		.ascii	"robot_x:\000"
 1228      745F783A 
 1228      00
 1229 00d5 000000   		.align	2
 1230              	.LC9:
 1231 00d8 726F626F 		.ascii	"robot_y:\000"
 1231      745F793A 
 1231      00
 1232 00e1 000000   		.align	2
 1233              	.LC10:
 1234 00e4 726F626F 		.ascii	"robot_dir:\000"
 1234      745F6469 
 1234      723A00
 1235 00ef 00       		.section	.text.print_RF,"ax",%progbits
 1236              		.align	2
 1237              		.global	print_RF
 1238              		.thumb
 1239              		.thumb_func
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 29


 1240              		.type	print_RF, %function
 1241              	print_RF:
 1242              	.LFB74:
 320:.\main.c      **** 
 321:.\main.c      **** void print_RF()
 322:.\main.c      **** {
 1243              		.loc 1 322 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 16
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 80B5     		push	{r7, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 84B0     		sub	sp, sp, #16
 1252              		.cfi_def_cfa_offset 24
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 323:.\main.c      ****     if(flag_print_rf == 1)
 1255              		.loc 1 323 0
 1256 0006 254B     		ldr	r3, .L69
 1257 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1258 000a 012B     		cmp	r3, #1
 1259 000c 42D1     		bne	.L67
 1260              	.LBB4:
 324:.\main.c      ****     {
 325:.\main.c      ****         char printString[16];
 326:.\main.c      ****         flag_print_rf = 0;
 1261              		.loc 1 326 0
 1262 000e 234B     		ldr	r3, .L69
 1263 0010 0022     		movs	r2, #0
 1264 0012 1A70     		strb	r2, [r3]
 327:.\main.c      ****         usbPutString("RSSI:");
 1265              		.loc 1 327 0
 1266 0014 2248     		ldr	r0, .L69+4
 1267 0016 FFF7FEFF 		bl	usbPutString
 328:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 1268              		.loc 1 328 0
 1269 001a 224B     		ldr	r3, .L69+8
 1270 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1271 001e 5BB2     		sxtb	r3, r3
 1272 0020 3A46     		mov	r2, r7
 1273 0022 1046     		mov	r0, r2
 1274 0024 2049     		ldr	r1, .L69+12
 1275 0026 1A46     		mov	r2, r3
 1276 0028 FFF7FEFF 		bl	sprintf
 329:.\main.c      ****         usbPutString(printString);
 1277              		.loc 1 329 0
 1278 002c 3B46     		mov	r3, r7
 1279 002e 1846     		mov	r0, r3
 1280 0030 FFF7FEFF 		bl	usbPutString
 330:.\main.c      ****         usbPutString("robot_x:");
 1281              		.loc 1 330 0
 1282 0034 1D48     		ldr	r0, .L69+16
 1283 0036 FFF7FEFF 		bl	usbPutString
 331:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 1284              		.loc 1 331 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 30


 1285 003a 1A4B     		ldr	r3, .L69+8
 1286 003c 5B88     		ldrh	r3, [r3, #2]
 1287 003e 1BB2     		sxth	r3, r3
 1288 0040 3A46     		mov	r2, r7
 1289 0042 1046     		mov	r0, r2
 1290 0044 1849     		ldr	r1, .L69+12
 1291 0046 1A46     		mov	r2, r3
 1292 0048 FFF7FEFF 		bl	sprintf
 332:.\main.c      ****         usbPutString(printString);
 1293              		.loc 1 332 0
 1294 004c 3B46     		mov	r3, r7
 1295 004e 1846     		mov	r0, r3
 1296 0050 FFF7FEFF 		bl	usbPutString
 333:.\main.c      ****         usbPutString("robot_y:");
 1297              		.loc 1 333 0
 1298 0054 1648     		ldr	r0, .L69+20
 1299 0056 FFF7FEFF 		bl	usbPutString
 334:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 1300              		.loc 1 334 0
 1301 005a 124B     		ldr	r3, .L69+8
 1302 005c 9B88     		ldrh	r3, [r3, #4]
 1303 005e 1BB2     		sxth	r3, r3
 1304 0060 3A46     		mov	r2, r7
 1305 0062 1046     		mov	r0, r2
 1306 0064 1049     		ldr	r1, .L69+12
 1307 0066 1A46     		mov	r2, r3
 1308 0068 FFF7FEFF 		bl	sprintf
 335:.\main.c      ****         usbPutString(printString);
 1309              		.loc 1 335 0
 1310 006c 3B46     		mov	r3, r7
 1311 006e 1846     		mov	r0, r3
 1312 0070 FFF7FEFF 		bl	usbPutString
 336:.\main.c      ****         usbPutString("robot_dir:");
 1313              		.loc 1 336 0
 1314 0074 0F48     		ldr	r0, .L69+24
 1315 0076 FFF7FEFF 		bl	usbPutString
 337:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 1316              		.loc 1 337 0
 1317 007a 0A4B     		ldr	r3, .L69+8
 1318 007c DB88     		ldrh	r3, [r3, #6]
 1319 007e 1BB2     		sxth	r3, r3
 1320 0080 3A46     		mov	r2, r7
 1321 0082 1046     		mov	r0, r2
 1322 0084 0849     		ldr	r1, .L69+12
 1323 0086 1A46     		mov	r2, r3
 1324 0088 FFF7FEFF 		bl	sprintf
 338:.\main.c      ****         usbPutString(printString);
 1325              		.loc 1 338 0
 1326 008c 3B46     		mov	r3, r7
 1327 008e 1846     		mov	r0, r3
 1328 0090 FFF7FEFF 		bl	usbPutString
 1329              	.L67:
 1330              	.LBE4:
 339:.\main.c      ****     }
 340:.\main.c      **** }
 1331              		.loc 1 340 0
 1332 0094 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 31


 1333              		.cfi_def_cfa_offset 8
 1334 0096 BD46     		mov	sp, r7
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 0098 80BD     		pop	{r7, pc}
 1338              	.L70:
 1339 009a 00BF     		.align	2
 1340              	.L69:
 1341 009c 00000000 		.word	flag_print_rf
 1342 00a0 BC000000 		.word	.LC6
 1343 00a4 00000000 		.word	system_state
 1344 00a8 C4000000 		.word	.LC7
 1345 00ac CC000000 		.word	.LC8
 1346 00b0 D8000000 		.word	.LC9
 1347 00b4 E4000000 		.word	.LC10
 1348              		.cfi_endproc
 1349              	.LFE74:
 1350              		.size	print_RF, .-print_RF
 1351              		.section	.text.cycle_PWM,"ax",%progbits
 1352              		.align	2
 1353              		.global	cycle_PWM
 1354              		.thumb
 1355              		.thumb_func
 1356              		.type	cycle_PWM, %function
 1357              	cycle_PWM:
 1358              	.LFB75:
 341:.\main.c      **** 
 342:.\main.c      **** 
 343:.\main.c      **** //PWM:
 344:.\main.c      **** void cycle_PWM()
 345:.\main.c      **** {
 1359              		.loc 1 345 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 8
 1362              		@ frame_needed = 1, uses_anonymous_args = 0
 1363 0000 80B5     		push	{r7, lr}
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 82B0     		sub	sp, sp, #8
 1368              		.cfi_def_cfa_offset 16
 1369 0004 00AF     		add	r7, sp, #0
 1370              		.cfi_def_cfa_register 7
 346:.\main.c      ****     uint16 fluct;
 347:.\main.c      ****     if (direction == 0){
 1371              		.loc 1 347 0
 1372 0006 3A4B     		ldr	r3, .L82
 1373 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1374 000a 002B     		cmp	r3, #0
 1375 000c 2CD1     		bne	.L72
 348:.\main.c      ****         for(fluct = 30; fluct < 70; fluct++)
 1376              		.loc 1 348 0
 1377 000e 1E23     		movs	r3, #30
 1378 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 1379 0012 0FE0     		b	.L73
 1380              	.L74:
 349:.\main.c      ****         {
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 32


 350:.\main.c      ****             PWM_1_WriteCompare(fluct);
 1381              		.loc 1 350 0 discriminator 3
 1382 0014 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1383 0016 DBB2     		uxtb	r3, r3
 1384 0018 1846     		mov	r0, r3
 1385 001a FFF7FEFF 		bl	PWM_1_WriteCompare
 351:.\main.c      ****             PWM_2_WriteCompare(fluct);
 1386              		.loc 1 351 0 discriminator 3
 1387 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 1388 0020 DBB2     		uxtb	r3, r3
 1389 0022 1846     		mov	r0, r3
 1390 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 352:.\main.c      ****             CyDelay(30);
 1391              		.loc 1 352 0 discriminator 3
 1392 0028 1E20     		movs	r0, #30
 1393 002a FFF7FEFF 		bl	CyDelay
 348:.\main.c      ****         {
 1394              		.loc 1 348 0 discriminator 3
 1395 002e FB88     		ldrh	r3, [r7, #6]
 1396 0030 0133     		adds	r3, r3, #1
 1397 0032 FB80     		strh	r3, [r7, #6]	@ movhi
 1398              	.L73:
 348:.\main.c      ****         {
 1399              		.loc 1 348 0 is_stmt 0 discriminator 1
 1400 0034 FB88     		ldrh	r3, [r7, #6]
 1401 0036 452B     		cmp	r3, #69
 1402 0038 ECD9     		bls	.L74
 353:.\main.c      ****         }
 354:.\main.c      ****         
 355:.\main.c      ****         for(fluct = 70; fluct > 30; fluct--)
 1403              		.loc 1 355 0 is_stmt 1
 1404 003a 4623     		movs	r3, #70
 1405 003c FB80     		strh	r3, [r7, #6]	@ movhi
 1406 003e 0FE0     		b	.L75
 1407              	.L76:
 356:.\main.c      ****         {
 357:.\main.c      ****             PWM_1_WriteCompare(fluct);
 1408              		.loc 1 357 0 discriminator 3
 1409 0040 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1410 0042 DBB2     		uxtb	r3, r3
 1411 0044 1846     		mov	r0, r3
 1412 0046 FFF7FEFF 		bl	PWM_1_WriteCompare
 358:.\main.c      ****             PWM_2_WriteCompare(fluct);
 1413              		.loc 1 358 0 discriminator 3
 1414 004a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1415 004c DBB2     		uxtb	r3, r3
 1416 004e 1846     		mov	r0, r3
 1417 0050 FFF7FEFF 		bl	PWM_2_WriteCompare
 359:.\main.c      ****             CyDelay(30);
 1418              		.loc 1 359 0 discriminator 3
 1419 0054 1E20     		movs	r0, #30
 1420 0056 FFF7FEFF 		bl	CyDelay
 355:.\main.c      ****         {
 1421              		.loc 1 355 0 discriminator 3
 1422 005a FB88     		ldrh	r3, [r7, #6]
 1423 005c 013B     		subs	r3, r3, #1
 1424 005e FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 33


 1425              	.L75:
 355:.\main.c      ****         {
 1426              		.loc 1 355 0 is_stmt 0 discriminator 1
 1427 0060 FB88     		ldrh	r3, [r7, #6]
 1428 0062 1E2B     		cmp	r3, #30
 1429 0064 ECD8     		bhi	.L76
 1430 0066 2BE0     		b	.L77
 1431              	.L72:
 360:.\main.c      ****         }
 361:.\main.c      ****     } else {
 362:.\main.c      ****         for(fluct = 70; fluct > 30; fluct--)
 1432              		.loc 1 362 0 is_stmt 1
 1433 0068 4623     		movs	r3, #70
 1434 006a FB80     		strh	r3, [r7, #6]	@ movhi
 1435 006c 0FE0     		b	.L78
 1436              	.L79:
 363:.\main.c      ****         {
 364:.\main.c      ****             PWM_1_WriteCompare(fluct);
 1437              		.loc 1 364 0 discriminator 3
 1438 006e FB88     		ldrh	r3, [r7, #6]	@ movhi
 1439 0070 DBB2     		uxtb	r3, r3
 1440 0072 1846     		mov	r0, r3
 1441 0074 FFF7FEFF 		bl	PWM_1_WriteCompare
 365:.\main.c      ****             PWM_2_WriteCompare(fluct);
 1442              		.loc 1 365 0 discriminator 3
 1443 0078 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1444 007a DBB2     		uxtb	r3, r3
 1445 007c 1846     		mov	r0, r3
 1446 007e FFF7FEFF 		bl	PWM_2_WriteCompare
 366:.\main.c      ****             CyDelay(30);
 1447              		.loc 1 366 0 discriminator 3
 1448 0082 1E20     		movs	r0, #30
 1449 0084 FFF7FEFF 		bl	CyDelay
 362:.\main.c      ****         {
 1450              		.loc 1 362 0 discriminator 3
 1451 0088 FB88     		ldrh	r3, [r7, #6]
 1452 008a 013B     		subs	r3, r3, #1
 1453 008c FB80     		strh	r3, [r7, #6]	@ movhi
 1454              	.L78:
 362:.\main.c      ****         {
 1455              		.loc 1 362 0 is_stmt 0 discriminator 1
 1456 008e FB88     		ldrh	r3, [r7, #6]
 1457 0090 1E2B     		cmp	r3, #30
 1458 0092 ECD8     		bhi	.L79
 367:.\main.c      ****         }
 368:.\main.c      ****         
 369:.\main.c      ****         for(fluct = 30; fluct < 70; fluct++)
 1459              		.loc 1 369 0 is_stmt 1
 1460 0094 1E23     		movs	r3, #30
 1461 0096 FB80     		strh	r3, [r7, #6]	@ movhi
 1462 0098 0FE0     		b	.L80
 1463              	.L81:
 370:.\main.c      ****         {
 371:.\main.c      ****             PWM_1_WriteCompare(fluct);
 1464              		.loc 1 371 0 discriminator 3
 1465 009a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1466 009c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 34


 1467 009e 1846     		mov	r0, r3
 1468 00a0 FFF7FEFF 		bl	PWM_1_WriteCompare
 372:.\main.c      ****             PWM_2_WriteCompare(fluct);
 1469              		.loc 1 372 0 discriminator 3
 1470 00a4 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1471 00a6 DBB2     		uxtb	r3, r3
 1472 00a8 1846     		mov	r0, r3
 1473 00aa FFF7FEFF 		bl	PWM_2_WriteCompare
 373:.\main.c      ****             CyDelay(30);
 1474              		.loc 1 373 0 discriminator 3
 1475 00ae 1E20     		movs	r0, #30
 1476 00b0 FFF7FEFF 		bl	CyDelay
 369:.\main.c      ****         {
 1477              		.loc 1 369 0 discriminator 3
 1478 00b4 FB88     		ldrh	r3, [r7, #6]
 1479 00b6 0133     		adds	r3, r3, #1
 1480 00b8 FB80     		strh	r3, [r7, #6]	@ movhi
 1481              	.L80:
 369:.\main.c      ****         {
 1482              		.loc 1 369 0 is_stmt 0 discriminator 1
 1483 00ba FB88     		ldrh	r3, [r7, #6]
 1484 00bc 452B     		cmp	r3, #69
 1485 00be ECD9     		bls	.L81
 1486              	.L77:
 374:.\main.c      ****         }
 375:.\main.c      ****     }
 376:.\main.c      ****     direction = !direction;
 1487              		.loc 1 376 0 is_stmt 1
 1488 00c0 0B4B     		ldr	r3, .L82
 1489 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1490 00c4 002B     		cmp	r3, #0
 1491 00c6 0CBF     		ite	eq
 1492 00c8 0123     		moveq	r3, #1
 1493 00ca 0023     		movne	r3, #0
 1494 00cc DBB2     		uxtb	r3, r3
 1495 00ce 1A46     		mov	r2, r3
 1496 00d0 074B     		ldr	r3, .L82
 1497 00d2 1A70     		strb	r2, [r3]
 377:.\main.c      ****     M1_IN2_Write(direction);
 1498              		.loc 1 377 0
 1499 00d4 064B     		ldr	r3, .L82
 1500 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 00d8 1846     		mov	r0, r3
 1502 00da FFF7FEFF 		bl	M1_IN2_Write
 378:.\main.c      ****     M2_IN2_Write(direction);
 1503              		.loc 1 378 0
 1504 00de 044B     		ldr	r3, .L82
 1505 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1506 00e2 1846     		mov	r0, r3
 1507 00e4 FFF7FEFF 		bl	M2_IN2_Write
 379:.\main.c      **** }
 1508              		.loc 1 379 0
 1509 00e8 0837     		adds	r7, r7, #8
 1510              		.cfi_def_cfa_offset 8
 1511 00ea BD46     		mov	sp, r7
 1512              		.cfi_def_cfa_register 13
 1513              		@ sp needed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 35


 1514 00ec 80BD     		pop	{r7, pc}
 1515              	.L83:
 1516 00ee 00BF     		.align	2
 1517              	.L82:
 1518 00f0 00000000 		.word	direction
 1519              		.cfi_endproc
 1520              	.LFE75:
 1521              		.size	cycle_PWM, .-cycle_PWM
 1522              		.section	.text.main,"ax",%progbits
 1523              		.align	2
 1524              		.global	main
 1525              		.thumb
 1526              		.thumb_func
 1527              		.type	main, %function
 1528              	main:
 1529              	.LFB76:
 380:.\main.c      **** 
 381:.\main.c      **** int main()
 382:.\main.c      **** {  
 1530              		.loc 1 382 0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 0
 1533              		@ frame_needed = 1, uses_anonymous_args = 0
 1534 0000 80B5     		push	{r7, lr}
 1535              		.cfi_def_cfa_offset 8
 1536              		.cfi_offset 7, -8
 1537              		.cfi_offset 14, -4
 1538 0002 00AF     		add	r7, sp, #0
 1539              		.cfi_def_cfa_register 7
 383:.\main.c      **** 
 384:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 385:.\main.c      **** // ----- INITIALIZATIONS ----------
 386:.\main.c      ****     CYGlobalIntEnable;
 1540              		.loc 1 386 0
 1541              	@ 386 ".\main.c" 1
 1542 0004 62B6     		CPSIE   i
 1543              	@ 0 "" 2
 387:.\main.c      ****     if(ENABLE_PWM)
 388:.\main.c      ****     {
 389:.\main.c      ****         PWM_1_Start();// starting the pwm
 1544              		.loc 1 389 0
 1545              		.thumb
 1546 0006 FFF7FEFF 		bl	PWM_1_Start
 390:.\main.c      ****         PWM_2_Start();// starting the pwm
 1547              		.loc 1 390 0
 1548 000a FFF7FEFF 		bl	PWM_2_Start
 391:.\main.c      ****     }
 392:.\main.c      ****     
 393:.\main.c      ****     if(ENABLE_ADC)
 394:.\main.c      ****     {
 395:.\main.c      ****         ADC_Start();
 1549              		.loc 1 395 0
 1550 000e FFF7FEFF 		bl	ADC_Start
 396:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 1551              		.loc 1 396 0
 1552 0012 1948     		ldr	r0, .L88
 1553 0014 FFF7FEFF 		bl	isr_eoc_StartEx
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 36


 397:.\main.c      ****         //ADC_StartConvert();
 398:.\main.c      ****         
 399:.\main.c      ****         //start the ADC timer for software trigger mode
 400:.\main.c      ****         Timer_TS_Start();
 1554              		.loc 1 400 0
 1555 0018 FFF7FEFF 		bl	Timer_TS_Start
 401:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 1556              		.loc 1 401 0
 1557 001c 1748     		ldr	r0, .L88+4
 1558 001e FFF7FEFF 		bl	isr_TS_StartEx
 402:.\main.c      ****     }
 403:.\main.c      ****     
 404:.\main.c      ****     if (ENABLE_QUAD)
 405:.\main.c      ****     {
 406:.\main.c      ****         QuadDec_M1_Start();
 1559              		.loc 1 406 0
 1560 0022 FFF7FEFF 		bl	QuadDec_M1_Start
 407:.\main.c      ****         QuadDec_M2_Start();
 1561              		.loc 1 407 0
 1562 0026 FFF7FEFF 		bl	QuadDec_M2_Start
 408:.\main.c      ****         
 409:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1563              		.loc 1 409 0
 1564 002a 1548     		ldr	r0, .L88+8
 1565 002c FFF7FEFF 		bl	isr_quad1_StartEx
 410:.\main.c      ****         
 411:.\main.c      ****         Timer_1_Start();
 1566              		.loc 1 411 0
 1567 0030 FFF7FEFF 		bl	Timer_1_Start
 412:.\main.c      ****         
 413:.\main.c      ****         //isr_quad1_Start();
 414:.\main.c      ****     }
 415:.\main.c      ****     
 416:.\main.c      ****     if(ENABLE_STOP){
 417:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 1568              		.loc 1 417 0
 1569 0034 1348     		ldr	r0, .L88+12
 1570 0036 FFF7FEFF 		bl	isr_OnLine_StartEx
 418:.\main.c      ****         isr_button_StartEx(button);
 1571              		.loc 1 418 0
 1572 003a 1348     		ldr	r0, .L88+16
 1573 003c FFF7FEFF 		bl	isr_button_StartEx
 419:.\main.c      ****     }
 420:.\main.c      **** 
 421:.\main.c      ****     // ------USB SETUP ----------------    
 422:.\main.c      ****     if (USE_USB){    
 423:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1574              		.loc 1 423 0
 1575 0040 0020     		movs	r0, #0
 1576 0042 0121     		movs	r1, #1
 1577 0044 FFF7FEFF 		bl	USBUART_Start
 424:.\main.c      ****         if (USBUART_GetConfiguration())
 1578              		.loc 1 424 0
 1579 0048 FFF7FEFF 		bl	USBUART_GetConfiguration
 1580 004c 0346     		mov	r3, r0
 1581 004e 002B     		cmp	r3, #0
 1582 0050 01D0     		beq	.L87
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 37


 425:.\main.c      ****             {
 426:.\main.c      ****                  USBUART_CDC_Init();
 1583              		.loc 1 426 0
 1584 0052 FFF7FEFF 		bl	USBUART_CDC_Init
 1585              	.L87:
 427:.\main.c      ****             }
 428:.\main.c      ****     }
 429:.\main.c      ****     
 430:.\main.c      ****     if(BIN_ENABLED){
 431:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 1586              		.loc 1 431 0
 1587 0056 0D48     		ldr	r0, .L88+20
 1588 0058 FFF7FEFF 		bl	isrRF_RX_StartEx
 432:.\main.c      ****         UART_Start();
 1589              		.loc 1 432 0
 1590 005c FFF7FEFF 		bl	UART_Start
 433:.\main.c      ****     }
 434:.\main.c      ****     
 435:.\main.c      ****     RF_BT_SELECT_Write(0);
 1591              		.loc 1 435 0
 1592 0060 0020     		movs	r0, #0
 1593 0062 FFF7FEFF 		bl	RF_BT_SELECT_Write
 1594              	.L86:
 436:.\main.c      **** 
 437:.\main.c      ****     //usbPutString("Started");
 438:.\main.c      ****     for(;;)
 439:.\main.c      ****     {
 440:.\main.c      ****         /* Place your application code here. */
 441:.\main.c      ****         if(ENABLE_PWM && ENABLE_CYCLE) cycle_PWM();
 442:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 1595              		.loc 1 442 0
 1596 0066 FFF7FEFF 		bl	print_ADC
 443:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1597              		.loc 1 443 0
 1598 006a FFF7FEFF 		bl	Quad_Dec_response
 444:.\main.c      ****         
 445:.\main.c      ****         if(BIN_ENABLED == 1)
 446:.\main.c      ****         {
 447:.\main.c      ****             handle_rx_binary();
 1599              		.loc 1 447 0
 1600 006e FFF7FEFF 		bl	handle_rx_binary
 448:.\main.c      ****             print_RF();
 1601              		.loc 1 448 0
 1602 0072 FFF7FEFF 		bl	print_RF
 449:.\main.c      ****         }
 450:.\main.c      ****         
 451:.\main.c      ****         //handle_usb();        
 452:.\main.c      ****     }   
 1603              		.loc 1 452 0
 1604 0076 F6E7     		b	.L86
 1605              	.L89:
 1606              		.align	2
 1607              	.L88:
 1608 0078 00000000 		.word	adc_isr
 1609 007c 00000000 		.word	isr_adcTimer
 1610 0080 00000000 		.word	isr_quad1
 1611 0084 00000000 		.word	Stop_on_line
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 38


 1612 0088 00000000 		.word	button
 1613 008c 00000000 		.word	rxInt
 1614              		.cfi_endproc
 1615              	.LFE76:
 1616              		.size	main, .-main
 1617              		.section	.text.usbPutString,"ax",%progbits
 1618              		.align	2
 1619              		.global	usbPutString
 1620              		.thumb
 1621              		.thumb_func
 1622              		.type	usbPutString, %function
 1623              	usbPutString:
 1624              	.LFB77:
 453:.\main.c      **** }
 454:.\main.c      **** //* ========================================
 455:.\main.c      **** void usbPutString(char *s)
 456:.\main.c      **** {
 1625              		.loc 1 456 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 16
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629 0000 80B5     		push	{r7, lr}
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 84B0     		sub	sp, sp, #16
 1634              		.cfi_def_cfa_offset 24
 1635 0004 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
 1637 0006 7860     		str	r0, [r7, #4]
 457:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 458:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 459:.\main.c      **** //  length to 62 char (63rd char is a '!')
 460:.\main.c      ****     if (USE_USB && portOpen)    
 1638              		.loc 1 460 0
 1639 0008 154B     		ldr	r3, .L94
 1640 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1641 000c 002B     		cmp	r3, #0
 1642 000e 23D0     		beq	.L90
 1643              	.LBB5:
 461:.\main.c      ****     {
 462:.\main.c      ****             uint32 cnt = 0;
 1644              		.loc 1 462 0
 1645 0010 0023     		movs	r3, #0
 1646 0012 FB60     		str	r3, [r7, #12]
 463:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 1647              		.loc 1 463 0
 1648 0014 0AE0     		b	.L92
 1649              	.L93:
 464:.\main.c      ****             {
 465:.\main.c      ****                 cnt++;
 1650              		.loc 1 465 0
 1651 0016 FB68     		ldr	r3, [r7, #12]
 1652 0018 0133     		adds	r3, r3, #1
 1653 001a FB60     		str	r3, [r7, #12]
 466:.\main.c      ****                 if(cnt == 3000000){
 1654              		.loc 1 466 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 39


 1655 001c FB68     		ldr	r3, [r7, #12]
 1656 001e 114A     		ldr	r2, .L94+4
 1657 0020 9342     		cmp	r3, r2
 1658 0022 03D1     		bne	.L92
 467:.\main.c      ****                     portOpen = 0;
 1659              		.loc 1 467 0
 1660 0024 0E4B     		ldr	r3, .L94
 1661 0026 0022     		movs	r2, #0
 1662 0028 1A70     		strb	r2, [r3]
 468:.\main.c      ****                     return;
 1663              		.loc 1 468 0
 1664 002a 15E0     		b	.L90
 1665              	.L92:
 463:.\main.c      ****             {
 1666              		.loc 1 463 0
 1667 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 1668 0030 0346     		mov	r3, r0
 1669 0032 002B     		cmp	r3, #0
 1670 0034 EFD0     		beq	.L93
 469:.\main.c      ****                 }
 470:.\main.c      ****             }
 471:.\main.c      ****             s[63]='\0';
 1671              		.loc 1 471 0
 1672 0036 7B68     		ldr	r3, [r7, #4]
 1673 0038 3F33     		adds	r3, r3, #63
 1674 003a 0022     		movs	r2, #0
 1675 003c 1A70     		strb	r2, [r3]
 472:.\main.c      ****             s[62]='!';
 1676              		.loc 1 472 0
 1677 003e 7B68     		ldr	r3, [r7, #4]
 1678 0040 3E33     		adds	r3, r3, #62
 1679 0042 2122     		movs	r2, #33
 1680 0044 1A70     		strb	r2, [r3]
 473:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 1681              		.loc 1 473 0
 1682 0046 7868     		ldr	r0, [r7, #4]
 1683 0048 FFF7FEFF 		bl	strlen
 1684 004c 0346     		mov	r3, r0
 1685 004e 9BB2     		uxth	r3, r3
 1686 0050 7868     		ldr	r0, [r7, #4]
 1687 0052 1946     		mov	r1, r3
 1688 0054 FFF7FEFF 		bl	USBUART_PutData
 1689              	.L90:
 1690              	.LBE5:
 474:.\main.c      ****     }
 475:.\main.c      **** }
 1691              		.loc 1 475 0
 1692 0058 1037     		adds	r7, r7, #16
 1693              		.cfi_def_cfa_offset 8
 1694 005a BD46     		mov	sp, r7
 1695              		.cfi_def_cfa_register 13
 1696              		@ sp needed
 1697 005c 80BD     		pop	{r7, pc}
 1698              	.L95:
 1699 005e 00BF     		.align	2
 1700              	.L94:
 1701 0060 00000000 		.word	portOpen
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 40


 1702 0064 C0C62D00 		.word	3000000
 1703              		.cfi_endproc
 1704              	.LFE77:
 1705              		.size	usbPutString, .-usbPutString
 1706              		.section	.text.usbPutChar,"ax",%progbits
 1707              		.align	2
 1708              		.global	usbPutChar
 1709              		.thumb
 1710              		.thumb_func
 1711              		.type	usbPutChar, %function
 1712              	usbPutChar:
 1713              	.LFB78:
 476:.\main.c      **** //* ========================================
 477:.\main.c      **** void usbPutChar(char c)
 478:.\main.c      **** {
 1714              		.loc 1 478 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 16
 1717              		@ frame_needed = 1, uses_anonymous_args = 0
 1718 0000 80B5     		push	{r7, lr}
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 7, -8
 1721              		.cfi_offset 14, -4
 1722 0002 84B0     		sub	sp, sp, #16
 1723              		.cfi_def_cfa_offset 24
 1724 0004 00AF     		add	r7, sp, #0
 1725              		.cfi_def_cfa_register 7
 1726 0006 0346     		mov	r3, r0
 1727 0008 FB71     		strb	r3, [r7, #7]
 479:.\main.c      ****     if (USE_USB && portOpen)    
 1728              		.loc 1 479 0
 1729 000a 0F4B     		ldr	r3, .L100
 1730 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 000e 002B     		cmp	r3, #0
 1732 0010 16D0     		beq	.L96
 1733              	.LBB6:
 480:.\main.c      ****     {    
 481:.\main.c      ****         uint32 cnt = 0;
 1734              		.loc 1 481 0
 1735 0012 0023     		movs	r3, #0
 1736 0014 FB60     		str	r3, [r7, #12]
 482:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 1737              		.loc 1 482 0
 1738 0016 0AE0     		b	.L98
 1739              	.L99:
 483:.\main.c      ****             cnt++;
 1740              		.loc 1 483 0
 1741 0018 FB68     		ldr	r3, [r7, #12]
 1742 001a 0133     		adds	r3, r3, #1
 1743 001c FB60     		str	r3, [r7, #12]
 484:.\main.c      ****             if(cnt == 3000000){
 1744              		.loc 1 484 0
 1745 001e FB68     		ldr	r3, [r7, #12]
 1746 0020 0A4A     		ldr	r2, .L100+4
 1747 0022 9342     		cmp	r3, r2
 1748 0024 03D1     		bne	.L98
 485:.\main.c      ****                 portOpen = 0;
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 41


 1749              		.loc 1 485 0
 1750 0026 084B     		ldr	r3, .L100
 1751 0028 0022     		movs	r2, #0
 1752 002a 1A70     		strb	r2, [r3]
 486:.\main.c      ****                 return;
 1753              		.loc 1 486 0
 1754 002c 08E0     		b	.L96
 1755              	.L98:
 482:.\main.c      ****             cnt++;
 1756              		.loc 1 482 0
 1757 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 1758 0032 0346     		mov	r3, r0
 1759 0034 002B     		cmp	r3, #0
 1760 0036 EFD0     		beq	.L99
 487:.\main.c      ****             }
 488:.\main.c      ****         }
 489:.\main.c      ****         USBUART_PutChar(c);
 1761              		.loc 1 489 0
 1762 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1763 003a 1846     		mov	r0, r3
 1764 003c FFF7FEFF 		bl	USBUART_PutChar
 1765              	.L96:
 1766              	.LBE6:
 490:.\main.c      ****     }    
 491:.\main.c      **** }
 1767              		.loc 1 491 0
 1768 0040 1037     		adds	r7, r7, #16
 1769              		.cfi_def_cfa_offset 8
 1770 0042 BD46     		mov	sp, r7
 1771              		.cfi_def_cfa_register 13
 1772              		@ sp needed
 1773 0044 80BD     		pop	{r7, pc}
 1774              	.L101:
 1775 0046 00BF     		.align	2
 1776              	.L100:
 1777 0048 00000000 		.word	portOpen
 1778 004c C0C62D00 		.word	3000000
 1779              		.cfi_endproc
 1780              	.LFE78:
 1781              		.size	usbPutChar, .-usbPutChar
 1782              		.section	.text.uart_set_PWM,"ax",%progbits
 1783              		.align	2
 1784              		.global	uart_set_PWM
 1785              		.thumb
 1786              		.thumb_func
 1787              		.type	uart_set_PWM, %function
 1788              	uart_set_PWM:
 1789              	.LFB79:
 492:.\main.c      **** //* ========================================
 493:.\main.c      **** 
 494:.\main.c      **** void uart_set_PWM()
 495:.\main.c      **** {
 1790              		.loc 1 495 0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 8
 1793              		@ frame_needed = 1, uses_anonymous_args = 0
 1794 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 42


 1795              		.cfi_def_cfa_offset 8
 1796              		.cfi_offset 7, -8
 1797              		.cfi_offset 14, -4
 1798 0002 82B0     		sub	sp, sp, #8
 1799              		.cfi_def_cfa_offset 16
 1800 0004 00AF     		add	r7, sp, #0
 1801              		.cfi_def_cfa_register 7
 496:.\main.c      ****     uint8 c;
 497:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 1802              		.loc 1 497 0
 1803 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 1804 000a 0346     		mov	r3, r0
 1805 000c 002B     		cmp	r3, #0
 1806 000e 11D0     		beq	.L102
 498:.\main.c      ****        {  
 499:.\main.c      ****             c = USBUART_GetChar();
 1807              		.loc 1 499 0
 1808 0010 FFF7FEFF 		bl	USBUART_GetChar
 1809 0014 0346     		mov	r3, r0
 1810 0016 FB71     		strb	r3, [r7, #7]
 500:.\main.c      ****             
 501:.\main.c      ****             if(c <= 100 && c > 0){
 1811              		.loc 1 501 0
 1812 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1813 001a 642B     		cmp	r3, #100
 1814 001c 0AD8     		bhi	.L102
 1815              		.loc 1 501 0 is_stmt 0 discriminator 1
 1816 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1817 0020 002B     		cmp	r3, #0
 1818 0022 07D0     		beq	.L102
 502:.\main.c      ****                 PWM_1_WriteCompare(c);
 1819              		.loc 1 502 0 is_stmt 1
 1820 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1821 0026 1846     		mov	r0, r3
 1822 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 503:.\main.c      ****                 usbPutString(c);
 1823              		.loc 1 503 0
 1824 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1825 002e 1846     		mov	r0, r3
 1826 0030 FFF7FEFF 		bl	usbPutString
 1827              	.L102:
 504:.\main.c      ****             }
 505:.\main.c      ****        }
 506:.\main.c      **** }
 1828              		.loc 1 506 0
 1829 0034 0837     		adds	r7, r7, #8
 1830              		.cfi_def_cfa_offset 8
 1831 0036 BD46     		mov	sp, r7
 1832              		.cfi_def_cfa_register 13
 1833              		@ sp needed
 1834 0038 80BD     		pop	{r7, pc}
 1835              		.cfi_endproc
 1836              	.LFE79:
 1837              		.size	uart_set_PWM, .-uart_set_PWM
 1838 003a 00BF     		.text
 1839              	.Letext0:
 1840              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 43


 1841              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1842              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1843              		.file 5 ".\\vars.h"
 1844              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1845              		.section	.debug_info,"",%progbits
 1846              	.Ldebug_info0:
 1847 0000 54070000 		.4byte	0x754
 1848 0004 0400     		.2byte	0x4
 1849 0006 00000000 		.4byte	.Ldebug_abbrev0
 1850 000a 04       		.byte	0x4
 1851 000b 01       		.uleb128 0x1
 1852 000c 17020000 		.4byte	.LASF107
 1853 0010 01       		.byte	0x1
 1854 0011 E3020000 		.4byte	.LASF108
 1855 0015 68010000 		.4byte	.LASF109
 1856 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1857 001d 00000000 		.4byte	0
 1858 0021 00000000 		.4byte	.Ldebug_line0
 1859 0025 02       		.uleb128 0x2
 1860 0026 01       		.byte	0x1
 1861 0027 06       		.byte	0x6
 1862 0028 B9010000 		.4byte	.LASF0
 1863 002c 02       		.uleb128 0x2
 1864 002d 01       		.byte	0x1
 1865 002e 08       		.byte	0x8
 1866 002f F2020000 		.4byte	.LASF1
 1867 0033 02       		.uleb128 0x2
 1868 0034 02       		.byte	0x2
 1869 0035 05       		.byte	0x5
 1870 0036 AD000000 		.4byte	.LASF2
 1871 003a 02       		.uleb128 0x2
 1872 003b 02       		.byte	0x2
 1873 003c 07       		.byte	0x7
 1874 003d AE030000 		.4byte	.LASF3
 1875 0041 03       		.uleb128 0x3
 1876 0042 BE040000 		.4byte	.LASF11
 1877 0046 02       		.byte	0x2
 1878 0047 3F       		.byte	0x3f
 1879 0048 4C000000 		.4byte	0x4c
 1880 004c 02       		.uleb128 0x2
 1881 004d 04       		.byte	0x4
 1882 004e 05       		.byte	0x5
 1883 004f DB030000 		.4byte	.LASF4
 1884 0053 02       		.uleb128 0x2
 1885 0054 04       		.byte	0x4
 1886 0055 07       		.byte	0x7
 1887 0056 59040000 		.4byte	.LASF5
 1888 005a 02       		.uleb128 0x2
 1889 005b 08       		.byte	0x8
 1890 005c 05       		.byte	0x5
 1891 005d CB010000 		.4byte	.LASF6
 1892 0061 02       		.uleb128 0x2
 1893 0062 08       		.byte	0x8
 1894 0063 07       		.byte	0x7
 1895 0064 35030000 		.4byte	.LASF7
 1896 0068 04       		.uleb128 0x4
 1897 0069 04       		.byte	0x4
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 44


 1898 006a 05       		.byte	0x5
 1899 006b 696E7400 		.ascii	"int\000"
 1900 006f 02       		.uleb128 0x2
 1901 0070 04       		.byte	0x4
 1902 0071 07       		.byte	0x7
 1903 0072 57030000 		.4byte	.LASF8
 1904 0076 02       		.uleb128 0x2
 1905 0077 04       		.byte	0x4
 1906 0078 07       		.byte	0x7
 1907 0079 C4000000 		.4byte	.LASF9
 1908 007d 05       		.uleb128 0x5
 1909 007e 04       		.byte	0x4
 1910 007f 83000000 		.4byte	0x83
 1911 0083 02       		.uleb128 0x2
 1912 0084 01       		.byte	0x1
 1913 0085 08       		.byte	0x8
 1914 0086 D6030000 		.4byte	.LASF10
 1915 008a 03       		.uleb128 0x3
 1916 008b 2D030000 		.4byte	.LASF12
 1917 008f 03       		.byte	0x3
 1918 0090 2C       		.byte	0x2c
 1919 0091 41000000 		.4byte	0x41
 1920 0095 06       		.uleb128 0x6
 1921 0096 55010000 		.4byte	.LASF13
 1922 009a 04       		.byte	0x4
 1923 009b 9201     		.2byte	0x192
 1924 009d 2C000000 		.4byte	0x2c
 1925 00a1 06       		.uleb128 0x6
 1926 00a2 31040000 		.4byte	.LASF14
 1927 00a6 04       		.byte	0x4
 1928 00a7 9301     		.2byte	0x193
 1929 00a9 3A000000 		.4byte	0x3a
 1930 00ad 06       		.uleb128 0x6
 1931 00ae 52040000 		.4byte	.LASF15
 1932 00b2 04       		.byte	0x4
 1933 00b3 9401     		.2byte	0x194
 1934 00b5 53000000 		.4byte	0x53
 1935 00b9 06       		.uleb128 0x6
 1936 00ba E6010000 		.4byte	.LASF16
 1937 00be 04       		.byte	0x4
 1938 00bf 9501     		.2byte	0x195
 1939 00c1 25000000 		.4byte	0x25
 1940 00c5 06       		.uleb128 0x6
 1941 00c6 4F010000 		.4byte	.LASF17
 1942 00ca 04       		.byte	0x4
 1943 00cb 9601     		.2byte	0x196
 1944 00cd 33000000 		.4byte	0x33
 1945 00d1 02       		.uleb128 0x2
 1946 00d2 04       		.byte	0x4
 1947 00d3 04       		.byte	0x4
 1948 00d4 C5010000 		.4byte	.LASF18
 1949 00d8 02       		.uleb128 0x2
 1950 00d9 08       		.byte	0x8
 1951 00da 04       		.byte	0x4
 1952 00db 80040000 		.4byte	.LASF19
 1953 00df 07       		.uleb128 0x7
 1954 00e0 CC030000 		.4byte	.LASF110
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 45


 1955 00e4 20       		.byte	0x20
 1956 00e5 05       		.byte	0x5
 1957 00e6 44       		.byte	0x44
 1958 00e7 B8010000 		.4byte	0x1b8
 1959 00eb 08       		.uleb128 0x8
 1960 00ec 6C050000 		.4byte	.LASF20
 1961 00f0 05       		.byte	0x5
 1962 00f1 45       		.byte	0x45
 1963 00f2 B9000000 		.4byte	0xb9
 1964 00f6 00       		.byte	0
 1965 00f7 08       		.uleb128 0x8
 1966 00f8 49010000 		.4byte	.LASF21
 1967 00fc 05       		.byte	0x5
 1968 00fd 46       		.byte	0x46
 1969 00fe 95000000 		.4byte	0x95
 1970 0102 01       		.byte	0x1
 1971 0103 08       		.uleb128 0x8
 1972 0104 E4030000 		.4byte	.LASF22
 1973 0108 05       		.byte	0x5
 1974 0109 47       		.byte	0x47
 1975 010a C5000000 		.4byte	0xc5
 1976 010e 02       		.byte	0x2
 1977 010f 08       		.uleb128 0x8
 1978 0110 27050000 		.4byte	.LASF23
 1979 0114 05       		.byte	0x5
 1980 0115 48       		.byte	0x48
 1981 0116 C5000000 		.4byte	0xc5
 1982 011a 04       		.byte	0x4
 1983 011b 08       		.uleb128 0x8
 1984 011c 71050000 		.4byte	.LASF24
 1985 0120 05       		.byte	0x5
 1986 0121 49       		.byte	0x49
 1987 0122 C5000000 		.4byte	0xc5
 1988 0126 06       		.byte	0x6
 1989 0127 08       		.uleb128 0x8
 1990 0128 0F020000 		.4byte	.LASF25
 1991 012c 05       		.byte	0x5
 1992 012d 4A       		.byte	0x4a
 1993 012e C5000000 		.4byte	0xc5
 1994 0132 08       		.byte	0x8
 1995 0133 08       		.uleb128 0x8
 1996 0134 DE040000 		.4byte	.LASF26
 1997 0138 05       		.byte	0x5
 1998 0139 4B       		.byte	0x4b
 1999 013a C5000000 		.4byte	0xc5
 2000 013e 0A       		.byte	0xa
 2001 013f 08       		.uleb128 0x8
 2002 0140 00030000 		.4byte	.LASF27
 2003 0144 05       		.byte	0x5
 2004 0145 4C       		.byte	0x4c
 2005 0146 C5000000 		.4byte	0xc5
 2006 014a 0C       		.byte	0xc
 2007 014b 08       		.uleb128 0x8
 2008 014c 02020000 		.4byte	.LASF28
 2009 0150 05       		.byte	0x5
 2010 0151 4D       		.byte	0x4d
 2011 0152 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 46


 2012 0156 0E       		.byte	0xe
 2013 0157 08       		.uleb128 0x8
 2014 0158 A6030000 		.4byte	.LASF29
 2015 015c 05       		.byte	0x5
 2016 015d 4E       		.byte	0x4e
 2017 015e C5000000 		.4byte	0xc5
 2018 0162 10       		.byte	0x10
 2019 0163 08       		.uleb128 0x8
 2020 0164 F4030000 		.4byte	.LASF30
 2021 0168 05       		.byte	0x5
 2022 0169 4F       		.byte	0x4f
 2023 016a C5000000 		.4byte	0xc5
 2024 016e 12       		.byte	0x12
 2025 016f 08       		.uleb128 0x8
 2026 0170 09040000 		.4byte	.LASF31
 2027 0174 05       		.byte	0x5
 2028 0175 50       		.byte	0x50
 2029 0176 C5000000 		.4byte	0xc5
 2030 017a 14       		.byte	0x14
 2031 017b 08       		.uleb128 0x8
 2032 017c 5B010000 		.4byte	.LASF32
 2033 0180 05       		.byte	0x5
 2034 0181 51       		.byte	0x51
 2035 0182 C5000000 		.4byte	0xc5
 2036 0186 16       		.byte	0x16
 2037 0187 08       		.uleb128 0x8
 2038 0188 A5000000 		.4byte	.LASF33
 2039 018c 05       		.byte	0x5
 2040 018d 52       		.byte	0x52
 2041 018e C5000000 		.4byte	0xc5
 2042 0192 18       		.byte	0x18
 2043 0193 08       		.uleb128 0x8
 2044 0194 FA010000 		.4byte	.LASF34
 2045 0198 05       		.byte	0x5
 2046 0199 53       		.byte	0x53
 2047 019a C5000000 		.4byte	0xc5
 2048 019e 1A       		.byte	0x1a
 2049 019f 08       		.uleb128 0x8
 2050 01a0 83030000 		.4byte	.LASF35
 2051 01a4 05       		.byte	0x5
 2052 01a5 54       		.byte	0x54
 2053 01a6 C5000000 		.4byte	0xc5
 2054 01aa 1C       		.byte	0x1c
 2055 01ab 08       		.uleb128 0x8
 2056 01ac FC030000 		.4byte	.LASF36
 2057 01b0 05       		.byte	0x5
 2058 01b1 55       		.byte	0x55
 2059 01b2 C5000000 		.4byte	0xc5
 2060 01b6 1E       		.byte	0x1e
 2061 01b7 00       		.byte	0
 2062 01b8 09       		.uleb128 0x9
 2063 01b9 12040000 		.4byte	.LASF50
 2064 01bd 01       		.byte	0x1
 2065 01be 27       		.byte	0x27
 2066 01bf 00000000 		.4byte	.LFB63
 2067 01c3 60010000 		.4byte	.LFE63-.LFB63
 2068 01c7 01       		.uleb128 0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 47


 2069 01c8 9C       		.byte	0x9c
 2070 01c9 02020000 		.4byte	0x202
 2071 01cd 0A       		.uleb128 0xa
 2072 01ce 10000000 		.4byte	.LBB2
 2073 01d2 34010000 		.4byte	.LBE2-.LBB2
 2074 01d6 0B       		.uleb128 0xb
 2075 01d7 69000000 		.4byte	.LASF37
 2076 01db 01       		.byte	0x1
 2077 01dc 2D       		.byte	0x2d
 2078 01dd A1000000 		.4byte	0xa1
 2079 01e1 02       		.uleb128 0x2
 2080 01e2 91       		.byte	0x91
 2081 01e3 76       		.sleb128 -10
 2082 01e4 0B       		.uleb128 0xb
 2083 01e5 01010000 		.4byte	.LASF38
 2084 01e9 01       		.byte	0x1
 2085 01ea 2F       		.byte	0x2f
 2086 01eb 02020000 		.4byte	0x202
 2087 01ef 02       		.uleb128 0x2
 2088 01f0 91       		.byte	0x91
 2089 01f1 68       		.sleb128 -24
 2090 01f2 0B       		.uleb128 0xb
 2091 01f3 87040000 		.4byte	.LASF39
 2092 01f7 01       		.byte	0x1
 2093 01f8 30       		.byte	0x30
 2094 01f9 02020000 		.4byte	0x202
 2095 01fd 02       		.uleb128 0x2
 2096 01fe 91       		.byte	0x91
 2097 01ff 5C       		.sleb128 -36
 2098 0200 00       		.byte	0
 2099 0201 00       		.byte	0
 2100 0202 0C       		.uleb128 0xc
 2101 0203 83000000 		.4byte	0x83
 2102 0207 12020000 		.4byte	0x212
 2103 020b 0D       		.uleb128 0xd
 2104 020c 76000000 		.4byte	0x76
 2105 0210 0B       		.byte	0xb
 2106 0211 00       		.byte	0
 2107 0212 0E       		.uleb128 0xe
 2108 0213 A9040000 		.4byte	.LASF42
 2109 0217 01       		.byte	0x1
 2110 0218 A1       		.byte	0xa1
 2111 0219 00000000 		.4byte	.LFB64
 2112 021d 2C000000 		.4byte	.LFE64-.LFB64
 2113 0221 01       		.uleb128 0x1
 2114 0222 9C       		.byte	0x9c
 2115 0223 44020000 		.4byte	0x244
 2116 0227 0F       		.uleb128 0xf
 2117 0228 EC020000 		.4byte	.LASF40
 2118 022c 01       		.byte	0x1
 2119 022d A1       		.byte	0xa1
 2120 022e 68000000 		.4byte	0x68
 2121 0232 02       		.uleb128 0x2
 2122 0233 91       		.byte	0x91
 2123 0234 74       		.sleb128 -12
 2124 0235 0F       		.uleb128 0xf
 2125 0236 EF030000 		.4byte	.LASF41
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 48


 2126 023a 01       		.byte	0x1
 2127 023b A1       		.byte	0xa1
 2128 023c 68000000 		.4byte	0x68
 2129 0240 02       		.uleb128 0x2
 2130 0241 91       		.byte	0x91
 2131 0242 70       		.sleb128 -16
 2132 0243 00       		.byte	0
 2133 0244 10       		.uleb128 0x10
 2134 0245 09030000 		.4byte	.LASF111
 2135 0249 01       		.byte	0x1
 2136 024a A6       		.byte	0xa6
 2137 024b 00000000 		.4byte	.LFB65
 2138 024f 30000000 		.4byte	.LFE65-.LFB65
 2139 0253 01       		.uleb128 0x1
 2140 0254 9C       		.byte	0x9c
 2141 0255 11       		.uleb128 0x11
 2142 0256 83050000 		.4byte	.LASF43
 2143 025a 01       		.byte	0x1
 2144 025b AF       		.byte	0xaf
 2145 025c 00000000 		.4byte	.LFB66
 2146 0260 98000000 		.4byte	.LFE66-.LFB66
 2147 0264 01       		.uleb128 0x1
 2148 0265 9C       		.byte	0x9c
 2149 0266 79020000 		.4byte	0x279
 2150 026a 0B       		.uleb128 0xb
 2151 026b 59050000 		.4byte	.LASF44
 2152 026f 01       		.byte	0x1
 2153 0270 B0       		.byte	0xb0
 2154 0271 83000000 		.4byte	0x83
 2155 0275 02       		.uleb128 0x2
 2156 0276 91       		.byte	0x91
 2157 0277 6F       		.sleb128 -17
 2158 0278 00       		.byte	0
 2159 0279 12       		.uleb128 0x12
 2160 027a 95040000 		.4byte	.LASF45
 2161 027e 01       		.byte	0x1
 2162 027f C8       		.byte	0xc8
 2163 0280 00000000 		.4byte	.LFB67
 2164 0284 2C000000 		.4byte	.LFE67-.LFB67
 2165 0288 01       		.uleb128 0x1
 2166 0289 9C       		.byte	0x9c
 2167 028a 12       		.uleb128 0x12
 2168 028b 35010000 		.4byte	.LASF46
 2169 028f 01       		.byte	0x1
 2170 0290 D1       		.byte	0xd1
 2171 0291 00000000 		.4byte	.LFB68
 2172 0295 3C000000 		.4byte	.LFE68-.LFB68
 2173 0299 01       		.uleb128 0x1
 2174 029a 9C       		.byte	0x9c
 2175 029b 12       		.uleb128 0x12
 2176 029c 4C050000 		.4byte	.LASF47
 2177 02a0 01       		.byte	0x1
 2178 02a1 DB       		.byte	0xdb
 2179 02a2 00000000 		.4byte	.LFB69
 2180 02a6 0A000000 		.4byte	.LFE69-.LFB69
 2181 02aa 01       		.uleb128 0x1
 2182 02ab 9C       		.byte	0x9c
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 49


 2183 02ac 12       		.uleb128 0x12
 2184 02ad A5020000 		.4byte	.LASF48
 2185 02b1 01       		.byte	0x1
 2186 02b2 E0       		.byte	0xe0
 2187 02b3 00000000 		.4byte	.LFB70
 2188 02b7 0E000000 		.4byte	.LFE70-.LFB70
 2189 02bb 01       		.uleb128 0x1
 2190 02bc 9C       		.byte	0x9c
 2191 02bd 12       		.uleb128 0x12
 2192 02be C8040000 		.4byte	.LASF49
 2193 02c2 01       		.byte	0x1
 2194 02c3 E5       		.byte	0xe5
 2195 02c4 00000000 		.4byte	.LFB71
 2196 02c8 0A000000 		.4byte	.LFE71-.LFB71
 2197 02cc 01       		.uleb128 0x1
 2198 02cd 9C       		.byte	0x9c
 2199 02ce 13       		.uleb128 0x13
 2200 02cf CD000000 		.4byte	.LASF51
 2201 02d3 01       		.byte	0x1
 2202 02d4 EA       		.byte	0xea
 2203 02d5 00000000 		.4byte	.LFB72
 2204 02d9 1C020000 		.4byte	.LFE72-.LFB72
 2205 02dd 01       		.uleb128 0x1
 2206 02de 9C       		.byte	0x9c
 2207 02df 3A030000 		.4byte	0x33a
 2208 02e3 0B       		.uleb128 0xb
 2209 02e4 EB000000 		.4byte	.LASF52
 2210 02e8 01       		.byte	0x1
 2211 02e9 F0       		.byte	0xf0
 2212 02ea 3A030000 		.4byte	0x33a
 2213 02ee 03       		.uleb128 0x3
 2214 02ef 91       		.byte	0x91
 2215 02f0 A87F     		.sleb128 -88
 2216 02f2 0B       		.uleb128 0xb
 2217 02f3 D7020000 		.4byte	.LASF53
 2218 02f7 01       		.byte	0x1
 2219 02f8 F1       		.byte	0xf1
 2220 02f9 3A030000 		.4byte	0x33a
 2221 02fd 03       		.uleb128 0x3
 2222 02fe 91       		.byte	0x91
 2223 02ff E87E     		.sleb128 -152
 2224 0301 0B       		.uleb128 0xb
 2225 0302 64030000 		.4byte	.LASF54
 2226 0306 01       		.byte	0x1
 2227 0307 F8       		.byte	0xf8
 2228 0308 C5000000 		.4byte	0xc5
 2229 030c 02       		.uleb128 0x2
 2230 030d 91       		.byte	0x91
 2231 030e 6A       		.sleb128 -22
 2232 030f 0B       		.uleb128 0xb
 2233 0310 C1030000 		.4byte	.LASF55
 2234 0314 01       		.byte	0x1
 2235 0315 F9       		.byte	0xf9
 2236 0316 C5000000 		.4byte	0xc5
 2237 031a 02       		.uleb128 0x2
 2238 031b 91       		.byte	0x91
 2239 031c 68       		.sleb128 -24
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 50


 2240 031d 0B       		.uleb128 0xb
 2241 031e AA010000 		.4byte	.LASF56
 2242 0322 01       		.byte	0x1
 2243 0323 FB       		.byte	0xfb
 2244 0324 C5000000 		.4byte	0xc5
 2245 0328 02       		.uleb128 0x2
 2246 0329 91       		.byte	0x91
 2247 032a 6E       		.sleb128 -18
 2248 032b 0B       		.uleb128 0xb
 2249 032c 8C030000 		.4byte	.LASF57
 2250 0330 01       		.byte	0x1
 2251 0331 FC       		.byte	0xfc
 2252 0332 C5000000 		.4byte	0xc5
 2253 0336 02       		.uleb128 0x2
 2254 0337 91       		.byte	0x91
 2255 0338 6C       		.sleb128 -20
 2256 0339 00       		.byte	0
 2257 033a 0C       		.uleb128 0xc
 2258 033b 83000000 		.4byte	0x83
 2259 033f 4A030000 		.4byte	0x34a
 2260 0343 0D       		.uleb128 0xd
 2261 0344 76000000 		.4byte	0x76
 2262 0348 3F       		.byte	0x3f
 2263 0349 00       		.byte	0
 2264 034a 14       		.uleb128 0x14
 2265 034b 3F010000 		.4byte	.LASF58
 2266 034f 01       		.byte	0x1
 2267 0350 2B01     		.2byte	0x12b
 2268 0352 00000000 		.4byte	.LFB73
 2269 0356 C0000000 		.4byte	.LFE73-.LFB73
 2270 035a 01       		.uleb128 0x1
 2271 035b 9C       		.byte	0x9c
 2272 035c 98030000 		.4byte	0x398
 2273 0360 0A       		.uleb128 0xa
 2274 0361 0E000000 		.4byte	.LBB3
 2275 0365 8E000000 		.4byte	.LBE3-.LBB3
 2276 0369 15       		.uleb128 0x15
 2277 036a 44040000 		.4byte	.LASF59
 2278 036e 01       		.byte	0x1
 2279 036f 3401     		.2byte	0x134
 2280 0371 D1000000 		.4byte	0xd1
 2281 0375 02       		.uleb128 0x2
 2282 0376 91       		.byte	0x91
 2283 0377 74       		.sleb128 -12
 2284 0378 15       		.uleb128 0x15
 2285 0379 18000000 		.4byte	.LASF60
 2286 037d 01       		.byte	0x1
 2287 037e 3501     		.2byte	0x135
 2288 0380 C5000000 		.4byte	0xc5
 2289 0384 02       		.uleb128 0x2
 2290 0385 91       		.byte	0x91
 2291 0386 72       		.sleb128 -14
 2292 0387 15       		.uleb128 0x15
 2293 0388 61050000 		.4byte	.LASF61
 2294 038c 01       		.byte	0x1
 2295 038d 3A01     		.2byte	0x13a
 2296 038f 98030000 		.4byte	0x398
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 51


 2297 0393 02       		.uleb128 0x2
 2298 0394 91       		.byte	0x91
 2299 0395 60       		.sleb128 -32
 2300 0396 00       		.byte	0
 2301 0397 00       		.byte	0
 2302 0398 0C       		.uleb128 0xc
 2303 0399 83000000 		.4byte	0x83
 2304 039d A8030000 		.4byte	0x3a8
 2305 03a1 0D       		.uleb128 0xd
 2306 03a2 76000000 		.4byte	0x76
 2307 03a6 0F       		.byte	0xf
 2308 03a7 00       		.byte	0
 2309 03a8 14       		.uleb128 0x14
 2310 03a9 D5040000 		.4byte	.LASF62
 2311 03ad 01       		.byte	0x1
 2312 03ae 4101     		.2byte	0x141
 2313 03b0 00000000 		.4byte	.LFB74
 2314 03b4 B8000000 		.4byte	.LFE74-.LFB74
 2315 03b8 01       		.uleb128 0x1
 2316 03b9 9C       		.byte	0x9c
 2317 03ba D8030000 		.4byte	0x3d8
 2318 03be 0A       		.uleb128 0xa
 2319 03bf 0E000000 		.4byte	.LBB4
 2320 03c3 86000000 		.4byte	.LBE4-.LBB4
 2321 03c7 15       		.uleb128 0x15
 2322 03c8 AC020000 		.4byte	.LASF63
 2323 03cc 01       		.byte	0x1
 2324 03cd 4501     		.2byte	0x145
 2325 03cf 98030000 		.4byte	0x398
 2326 03d3 02       		.uleb128 0x2
 2327 03d4 91       		.byte	0x91
 2328 03d5 68       		.sleb128 -24
 2329 03d6 00       		.byte	0
 2330 03d7 00       		.byte	0
 2331 03d8 14       		.uleb128 0x14
 2332 03d9 45000000 		.4byte	.LASF64
 2333 03dd 01       		.byte	0x1
 2334 03de 5801     		.2byte	0x158
 2335 03e0 00000000 		.4byte	.LFB75
 2336 03e4 F4000000 		.4byte	.LFE75-.LFB75
 2337 03e8 01       		.uleb128 0x1
 2338 03e9 9C       		.byte	0x9c
 2339 03ea FE030000 		.4byte	0x3fe
 2340 03ee 15       		.uleb128 0x15
 2341 03ef 7D030000 		.4byte	.LASF65
 2342 03f3 01       		.byte	0x1
 2343 03f4 5A01     		.2byte	0x15a
 2344 03f6 A1000000 		.4byte	0xa1
 2345 03fa 02       		.uleb128 0x2
 2346 03fb 91       		.byte	0x91
 2347 03fc 76       		.sleb128 -10
 2348 03fd 00       		.byte	0
 2349 03fe 16       		.uleb128 0x16
 2350 03ff 17010000 		.4byte	.LASF66
 2351 0403 01       		.byte	0x1
 2352 0404 7D01     		.2byte	0x17d
 2353 0406 68000000 		.4byte	0x68
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 52


 2354 040a 00000000 		.4byte	.LFB76
 2355 040e 90000000 		.4byte	.LFE76-.LFB76
 2356 0412 01       		.uleb128 0x1
 2357 0413 9C       		.byte	0x9c
 2358 0414 17       		.uleb128 0x17
 2359 0415 D9010000 		.4byte	.LASF67
 2360 0419 01       		.byte	0x1
 2361 041a C701     		.2byte	0x1c7
 2362 041c 00000000 		.4byte	.LFB77
 2363 0420 68000000 		.4byte	.LFE77-.LFB77
 2364 0424 01       		.uleb128 0x1
 2365 0425 9C       		.byte	0x9c
 2366 0426 51040000 		.4byte	0x451
 2367 042a 18       		.uleb128 0x18
 2368 042b 7300     		.ascii	"s\000"
 2369 042d 01       		.byte	0x1
 2370 042e C701     		.2byte	0x1c7
 2371 0430 7D000000 		.4byte	0x7d
 2372 0434 02       		.uleb128 0x2
 2373 0435 91       		.byte	0x91
 2374 0436 6C       		.sleb128 -20
 2375 0437 0A       		.uleb128 0xa
 2376 0438 10000000 		.4byte	.LBB5
 2377 043c 48000000 		.4byte	.LBE5-.LBB5
 2378 0440 19       		.uleb128 0x19
 2379 0441 636E7400 		.ascii	"cnt\000"
 2380 0445 01       		.byte	0x1
 2381 0446 CE01     		.2byte	0x1ce
 2382 0448 AD000000 		.4byte	0xad
 2383 044c 02       		.uleb128 0x2
 2384 044d 91       		.byte	0x91
 2385 044e 74       		.sleb128 -12
 2386 044f 00       		.byte	0
 2387 0450 00       		.byte	0
 2388 0451 17       		.uleb128 0x17
 2389 0452 0D000000 		.4byte	.LASF68
 2390 0456 01       		.byte	0x1
 2391 0457 DD01     		.2byte	0x1dd
 2392 0459 00000000 		.4byte	.LFB78
 2393 045d 50000000 		.4byte	.LFE78-.LFB78
 2394 0461 01       		.uleb128 0x1
 2395 0462 9C       		.byte	0x9c
 2396 0463 8E040000 		.4byte	0x48e
 2397 0467 18       		.uleb128 0x18
 2398 0468 6300     		.ascii	"c\000"
 2399 046a 01       		.byte	0x1
 2400 046b DD01     		.2byte	0x1dd
 2401 046d 83000000 		.4byte	0x83
 2402 0471 02       		.uleb128 0x2
 2403 0472 91       		.byte	0x91
 2404 0473 6F       		.sleb128 -17
 2405 0474 0A       		.uleb128 0xa
 2406 0475 12000000 		.4byte	.LBB6
 2407 0479 2E000000 		.4byte	.LBE6-.LBB6
 2408 047d 19       		.uleb128 0x19
 2409 047e 636E7400 		.ascii	"cnt\000"
 2410 0482 01       		.byte	0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 53


 2411 0483 E101     		.2byte	0x1e1
 2412 0485 AD000000 		.4byte	0xad
 2413 0489 02       		.uleb128 0x2
 2414 048a 91       		.byte	0x91
 2415 048b 74       		.sleb128 -12
 2416 048c 00       		.byte	0
 2417 048d 00       		.byte	0
 2418 048e 14       		.uleb128 0x14
 2419 048f 9D010000 		.4byte	.LASF69
 2420 0493 01       		.byte	0x1
 2421 0494 EE01     		.2byte	0x1ee
 2422 0496 00000000 		.4byte	.LFB79
 2423 049a 3A000000 		.4byte	.LFE79-.LFB79
 2424 049e 01       		.uleb128 0x1
 2425 049f 9C       		.byte	0x9c
 2426 04a0 B2040000 		.4byte	0x4b2
 2427 04a4 19       		.uleb128 0x19
 2428 04a5 6300     		.ascii	"c\000"
 2429 04a7 01       		.byte	0x1
 2430 04a8 F001     		.2byte	0x1f0
 2431 04aa 95000000 		.4byte	0x95
 2432 04ae 02       		.uleb128 0x2
 2433 04af 91       		.byte	0x91
 2434 04b0 77       		.sleb128 -9
 2435 04b1 00       		.byte	0
 2436 04b2 1A       		.uleb128 0x1a
 2437 04b3 3F050000 		.4byte	.LASF70
 2438 04b7 06       		.byte	0x6
 2439 04b8 9606     		.2byte	0x696
 2440 04ba BE040000 		.4byte	0x4be
 2441 04be 1B       		.uleb128 0x1b
 2442 04bf 8A000000 		.4byte	0x8a
 2443 04c3 1C       		.uleb128 0x1c
 2444 04c4 747300   		.ascii	"ts\000"
 2445 04c7 05       		.byte	0x5
 2446 04c8 10       		.byte	0x10
 2447 04c9 95000000 		.4byte	0x95
 2448 04cd 05       		.uleb128 0x5
 2449 04ce 03       		.byte	0x3
 2450 04cf 00000000 		.4byte	ts
 2451 04d3 1D       		.uleb128 0x1d
 2452 04d4 FA040000 		.4byte	.LASF71
 2453 04d8 05       		.byte	0x5
 2454 04d9 11       		.byte	0x11
 2455 04da A1000000 		.4byte	0xa1
 2456 04de 05       		.uleb128 0x5
 2457 04df 03       		.byte	0x3
 2458 04e0 00000000 		.4byte	ts_enc
 2459 04e4 1D       		.uleb128 0x1d
 2460 04e5 01050000 		.4byte	.LASF72
 2461 04e9 05       		.byte	0x5
 2462 04ea 12       		.byte	0x12
 2463 04eb A1000000 		.4byte	0xa1
 2464 04ef 05       		.uleb128 0x5
 2465 04f0 03       		.byte	0x3
 2466 04f1 00000000 		.4byte	ts_update
 2467 04f5 1D       		.uleb128 0x1d
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 54


 2468 04f6 F1040000 		.4byte	.LASF73
 2469 04fa 05       		.byte	0x5
 2470 04fb 13       		.byte	0x13
 2471 04fc A1000000 		.4byte	0xa1
 2472 0500 05       		.uleb128 0x5
 2473 0501 03       		.byte	0x3
 2474 0502 00000000 		.4byte	ts_speed
 2475 0506 1D       		.uleb128 0x1d
 2476 0507 E6040000 		.4byte	.LASF74
 2477 050b 05       		.byte	0x5
 2478 050c 14       		.byte	0x14
 2479 050d A1000000 		.4byte	0xa1
 2480 0511 05       		.uleb128 0x5
 2481 0512 03       		.byte	0x3
 2482 0513 00000000 		.4byte	ts_display
 2483 0517 1D       		.uleb128 0x1d
 2484 0518 B2040000 		.4byte	.LASF75
 2485 051c 05       		.byte	0x5
 2486 051d 16       		.byte	0x16
 2487 051e 95000000 		.4byte	0x95
 2488 0522 05       		.uleb128 0x5
 2489 0523 03       		.byte	0x3
 2490 0524 00000000 		.4byte	flag_ts_enc
 2491 0528 1D       		.uleb128 0x1d
 2492 0529 EB010000 		.4byte	.LASF76
 2493 052d 05       		.byte	0x5
 2494 052e 17       		.byte	0x17
 2495 052f 95000000 		.4byte	0x95
 2496 0533 05       		.uleb128 0x5
 2497 0534 03       		.byte	0x3
 2498 0535 00000000 		.4byte	flag_ts_update
 2499 0539 1D       		.uleb128 0x1d
 2500 053a 97000000 		.4byte	.LASF77
 2501 053e 05       		.byte	0x5
 2502 053f 18       		.byte	0x18
 2503 0540 95000000 		.4byte	0x95
 2504 0544 05       		.uleb128 0x5
 2505 0545 03       		.byte	0x3
 2506 0546 00000000 		.4byte	flag_ts_speed
 2507 054a 1D       		.uleb128 0x1d
 2508 054b 87000000 		.4byte	.LASF78
 2509 054f 05       		.byte	0x5
 2510 0550 19       		.byte	0x19
 2511 0551 95000000 		.4byte	0x95
 2512 0555 05       		.uleb128 0x5
 2513 0556 03       		.byte	0x3
 2514 0557 00000000 		.4byte	flag_ts_display
 2515 055b 1D       		.uleb128 0x1d
 2516 055c C9020000 		.4byte	.LASF79
 2517 0560 05       		.byte	0x5
 2518 0561 1C       		.byte	0x1c
 2519 0562 95000000 		.4byte	0x95
 2520 0566 05       		.uleb128 0x5
 2521 0567 03       		.byte	0x3
 2522 0568 00000000 		.4byte	flag_rx
 2523 056c 1D       		.uleb128 0x1d
 2524 056d 4F000000 		.4byte	.LASF80
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 55


 2525 0571 05       		.byte	0x5
 2526 0572 1D       		.byte	0x1d
 2527 0573 95000000 		.4byte	0x95
 2528 0577 05       		.uleb128 0x5
 2529 0578 03       		.byte	0x3
 2530 0579 00000000 		.4byte	flag_packet
 2531 057d 1D       		.uleb128 0x1d
 2532 057e 6E030000 		.4byte	.LASF81
 2533 0582 05       		.byte	0x5
 2534 0583 1E       		.byte	0x1e
 2535 0584 95000000 		.4byte	0x95
 2536 0588 05       		.uleb128 0x5
 2537 0589 03       		.byte	0x3
 2538 058a 00000000 		.4byte	flag_KB_string
 2539 058e 1D       		.uleb128 0x1d
 2540 058f 14030000 		.4byte	.LASF82
 2541 0593 05       		.byte	0x5
 2542 0594 20       		.byte	0x20
 2543 0595 95000000 		.4byte	0x95
 2544 0599 05       		.uleb128 0x5
 2545 059a 03       		.byte	0x3
 2546 059b 00000000 		.4byte	dataready_flag
 2547 059f 1D       		.uleb128 0x1d
 2548 05a0 0B050000 		.4byte	.LASF83
 2549 05a4 05       		.byte	0x5
 2550 05a5 22       		.byte	0x22
 2551 05a6 95000000 		.4byte	0x95
 2552 05aa 05       		.uleb128 0x5
 2553 05ab 03       		.byte	0x3
 2554 05ac 00000000 		.4byte	flag_rf_transmission_active
 2555 05b0 1D       		.uleb128 0x1d
 2556 05b1 5B000000 		.4byte	.LASF84
 2557 05b5 05       		.byte	0x5
 2558 05b6 23       		.byte	0x23
 2559 05b7 95000000 		.4byte	0x95
 2560 05bb 05       		.uleb128 0x5
 2561 05bc 03       		.byte	0x3
 2562 05bd 00000000 		.4byte	flag_print_rf
 2563 05c1 1D       		.uleb128 0x1d
 2564 05c2 B8020000 		.4byte	.LASF85
 2565 05c6 05       		.byte	0x5
 2566 05c7 25       		.byte	0x25
 2567 05c8 95000000 		.4byte	0x95
 2568 05cc 05       		.uleb128 0x5
 2569 05cd 03       		.byte	0x3
 2570 05ce 00000000 		.4byte	flag_receive_ADC
 2571 05d2 1D       		.uleb128 0x1d
 2572 05d3 4C030000 		.4byte	.LASF86
 2573 05d7 05       		.byte	0x5
 2574 05d8 26       		.byte	0x26
 2575 05d9 C5000000 		.4byte	0xc5
 2576 05dd 05       		.uleb128 0x5
 2577 05de 03       		.byte	0x3
 2578 05df 00000000 		.4byte	adc_result
 2579 05e3 1D       		.uleb128 0x1d
 2580 05e4 0D010000 		.4byte	.LASF87
 2581 05e8 05       		.byte	0x5
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 56


 2582 05e9 28       		.byte	0x28
 2583 05ea 95000000 		.4byte	0x95
 2584 05ee 05       		.uleb128 0x5
 2585 05ef 03       		.byte	0x3
 2586 05f0 00000000 		.4byte	direction
 2587 05f4 1D       		.uleb128 0x1d
 2588 05f5 6B040000 		.4byte	.LASF88
 2589 05f9 05       		.byte	0x5
 2590 05fa 2C       		.byte	0x2c
 2591 05fb 95000000 		.4byte	0x95
 2592 05ff 05       		.uleb128 0x5
 2593 0600 03       		.byte	0x3
 2594 0601 00000000 		.4byte	flag_calc_wheelspeed
 2595 0605 1D       		.uleb128 0x1d
 2596 0606 38040000 		.4byte	.LASF89
 2597 060a 05       		.byte	0x5
 2598 060b 2D       		.byte	0x2d
 2599 060c C5000000 		.4byte	0xc5
 2600 0610 05       		.uleb128 0x5
 2601 0611 03       		.byte	0x3
 2602 0612 00000000 		.4byte	quad_count1
 2603 0616 1D       		.uleb128 0x1d
 2604 0617 DF000000 		.4byte	.LASF90
 2605 061b 05       		.byte	0x5
 2606 061c 2E       		.byte	0x2e
 2607 061d C5000000 		.4byte	0xc5
 2608 0621 05       		.uleb128 0x5
 2609 0622 03       		.byte	0x3
 2610 0623 00000000 		.4byte	quad_count2
 2611 0627 1D       		.uleb128 0x1d
 2612 0628 1C010000 		.4byte	.LASF91
 2613 062c 05       		.byte	0x5
 2614 062d 30       		.byte	0x30
 2615 062e C5000000 		.4byte	0xc5
 2616 0632 05       		.uleb128 0x5
 2617 0633 03       		.byte	0x3
 2618 0634 00000000 		.4byte	left_duty_cycle
 2619 0638 1D       		.uleb128 0x1d
 2620 0639 76000000 		.4byte	.LASF92
 2621 063d 05       		.byte	0x5
 2622 063e 31       		.byte	0x31
 2623 063f C5000000 		.4byte	0xc5
 2624 0643 05       		.uleb128 0x5
 2625 0644 03       		.byte	0x3
 2626 0645 00000000 		.4byte	right_duty_cycle
 2627 0649 1D       		.uleb128 0x1d
 2628 064a 26000000 		.4byte	.LASF93
 2629 064e 05       		.byte	0x5
 2630 064f 34       		.byte	0x34
 2631 0650 C5000000 		.4byte	0xc5
 2632 0654 05       		.uleb128 0x5
 2633 0655 03       		.byte	0x3
 2634 0656 00000000 		.4byte	leftSpeedLimit
 2635 065a 1D       		.uleb128 0x1d
 2636 065b 35000000 		.4byte	.LASF94
 2637 065f 05       		.byte	0x5
 2638 0660 35       		.byte	0x35
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 57


 2639 0661 C5000000 		.4byte	0xc5
 2640 0665 05       		.uleb128 0x5
 2641 0666 03       		.byte	0x3
 2642 0667 00000000 		.4byte	rightSpeedLimit
 2643 066b 1D       		.uleb128 0x1d
 2644 066c 9C030000 		.4byte	.LASF95
 2645 0670 05       		.byte	0x5
 2646 0671 38       		.byte	0x38
 2647 0672 95000000 		.4byte	0x95
 2648 0676 05       		.uleb128 0x5
 2649 0677 03       		.byte	0x3
 2650 0678 00000000 		.4byte	brakeFlag
 2651 067c 1D       		.uleb128 0x1d
 2652 067d 2C010000 		.4byte	.LASF96
 2653 0681 05       		.byte	0x5
 2654 0682 39       		.byte	0x39
 2655 0683 95000000 		.4byte	0x95
 2656 0687 05       		.uleb128 0x5
 2657 0688 03       		.byte	0x3
 2658 0689 00000000 		.4byte	portOpen
 2659 068d 1D       		.uleb128 0x1d
 2660 068e 9D040000 		.4byte	.LASF97
 2661 0692 05       		.byte	0x5
 2662 0693 3C       		.byte	0x3c
 2663 0694 C5000000 		.4byte	0xc5
 2664 0698 05       		.uleb128 0x5
 2665 0699 03       		.byte	0x3
 2666 069a 00000000 		.4byte	prevVoltage
 2667 069e 1D       		.uleb128 0x1d
 2668 069f 00000000 		.4byte	.LASF98
 2669 06a3 05       		.byte	0x5
 2670 06a4 3D       		.byte	0x3d
 2671 06a5 C5000000 		.4byte	0xc5
 2672 06a9 05       		.uleb128 0x5
 2673 06aa 03       		.byte	0x3
 2674 06ab 00000000 		.4byte	prevVoltage2
 2675 06af 1D       		.uleb128 0x1d
 2676 06b0 23040000 		.4byte	.LASF99
 2677 06b4 05       		.byte	0x5
 2678 06b5 40       		.byte	0x40
 2679 06b6 3A030000 		.4byte	0x33a
 2680 06ba 05       		.uleb128 0x5
 2681 06bb 03       		.byte	0x3
 2682 06bc 00000000 		.4byte	displaystring
 2683 06c0 1D       		.uleb128 0x1d
 2684 06c1 98010000 		.4byte	.LASF100
 2685 06c5 05       		.byte	0x5
 2686 06c6 41       		.byte	0x41
 2687 06c7 3A030000 		.4byte	0x33a
 2688 06cb 05       		.uleb128 0x5
 2689 06cc 03       		.byte	0x3
 2690 06cd 00000000 		.4byte	line
 2691 06d1 1D       		.uleb128 0x1d
 2692 06d2 D1020000 		.4byte	.LASF101
 2693 06d6 05       		.byte	0x5
 2694 06d7 41       		.byte	0x41
 2695 06d8 3A030000 		.4byte	0x33a
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 58


 2696 06dc 05       		.uleb128 0x5
 2697 06dd 03       		.byte	0x3
 2698 06de 00000000 		.4byte	entry
 2699 06e2 0C       		.uleb128 0xc
 2700 06e3 95000000 		.4byte	0x95
 2701 06e7 F2060000 		.4byte	0x6f2
 2702 06eb 0D       		.uleb128 0xd
 2703 06ec 76000000 		.4byte	0x76
 2704 06f0 3F       		.byte	0x3f
 2705 06f1 00       		.byte	0
 2706 06f2 1D       		.uleb128 0x1d
 2707 06f3 F7000000 		.4byte	.LASF102
 2708 06f7 05       		.byte	0x5
 2709 06f8 42       		.byte	0x42
 2710 06f9 E2060000 		.4byte	0x6e2
 2711 06fd 05       		.uleb128 0x5
 2712 06fe 03       		.byte	0x3
 2713 06ff 00000000 		.4byte	usbBuffer
 2714 0703 1D       		.uleb128 0x1d
 2715 0704 32050000 		.4byte	.LASF103
 2716 0708 05       		.byte	0x5
 2717 0709 57       		.byte	0x57
 2718 070a DF000000 		.4byte	0xdf
 2719 070e 05       		.uleb128 0x5
 2720 070f 03       		.byte	0x3
 2721 0710 00000000 		.4byte	buffer_state
 2722 0714 1D       		.uleb128 0x1d
 2723 0715 B7000000 		.4byte	.LASF104
 2724 0719 05       		.byte	0x5
 2725 071a 58       		.byte	0x58
 2726 071b DF000000 		.4byte	0xdf
 2727 071f 05       		.uleb128 0x5
 2728 0720 03       		.byte	0x3
 2729 0721 00000000 		.4byte	system_state
 2730 0725 1D       		.uleb128 0x1d
 2731 0726 23030000 		.4byte	.LASF105
 2732 072a 05       		.byte	0x5
 2733 072b 5A       		.byte	0x5a
 2734 072c 95000000 		.4byte	0x95
 2735 0730 05       		.uleb128 0x5
 2736 0731 03       		.byte	0x3
 2737 0732 00000000 		.4byte	byteCount
 2738 0736 0C       		.uleb128 0xc
 2739 0737 83000000 		.4byte	0x83
 2740 073b 46070000 		.4byte	0x746
 2741 073f 0D       		.uleb128 0xd
 2742 0740 76000000 		.4byte	0x76
 2743 0744 01       		.byte	0x1
 2744 0745 00       		.byte	0
 2745 0746 1D       		.uleb128 0x1d
 2746 0747 91010000 		.4byte	.LASF106
 2747 074b 05       		.byte	0x5
 2748 074c 5B       		.byte	0x5b
 2749 074d 36070000 		.4byte	0x736
 2750 0751 05       		.uleb128 0x5
 2751 0752 03       		.byte	0x3
 2752 0753 00000000 		.4byte	packet
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 59


 2753 0757 00       		.byte	0
 2754              		.section	.debug_abbrev,"",%progbits
 2755              	.Ldebug_abbrev0:
 2756 0000 01       		.uleb128 0x1
 2757 0001 11       		.uleb128 0x11
 2758 0002 01       		.byte	0x1
 2759 0003 25       		.uleb128 0x25
 2760 0004 0E       		.uleb128 0xe
 2761 0005 13       		.uleb128 0x13
 2762 0006 0B       		.uleb128 0xb
 2763 0007 03       		.uleb128 0x3
 2764 0008 0E       		.uleb128 0xe
 2765 0009 1B       		.uleb128 0x1b
 2766 000a 0E       		.uleb128 0xe
 2767 000b 55       		.uleb128 0x55
 2768 000c 17       		.uleb128 0x17
 2769 000d 11       		.uleb128 0x11
 2770 000e 01       		.uleb128 0x1
 2771 000f 10       		.uleb128 0x10
 2772 0010 17       		.uleb128 0x17
 2773 0011 00       		.byte	0
 2774 0012 00       		.byte	0
 2775 0013 02       		.uleb128 0x2
 2776 0014 24       		.uleb128 0x24
 2777 0015 00       		.byte	0
 2778 0016 0B       		.uleb128 0xb
 2779 0017 0B       		.uleb128 0xb
 2780 0018 3E       		.uleb128 0x3e
 2781 0019 0B       		.uleb128 0xb
 2782 001a 03       		.uleb128 0x3
 2783 001b 0E       		.uleb128 0xe
 2784 001c 00       		.byte	0
 2785 001d 00       		.byte	0
 2786 001e 03       		.uleb128 0x3
 2787 001f 16       		.uleb128 0x16
 2788 0020 00       		.byte	0
 2789 0021 03       		.uleb128 0x3
 2790 0022 0E       		.uleb128 0xe
 2791 0023 3A       		.uleb128 0x3a
 2792 0024 0B       		.uleb128 0xb
 2793 0025 3B       		.uleb128 0x3b
 2794 0026 0B       		.uleb128 0xb
 2795 0027 49       		.uleb128 0x49
 2796 0028 13       		.uleb128 0x13
 2797 0029 00       		.byte	0
 2798 002a 00       		.byte	0
 2799 002b 04       		.uleb128 0x4
 2800 002c 24       		.uleb128 0x24
 2801 002d 00       		.byte	0
 2802 002e 0B       		.uleb128 0xb
 2803 002f 0B       		.uleb128 0xb
 2804 0030 3E       		.uleb128 0x3e
 2805 0031 0B       		.uleb128 0xb
 2806 0032 03       		.uleb128 0x3
 2807 0033 08       		.uleb128 0x8
 2808 0034 00       		.byte	0
 2809 0035 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 60


 2810 0036 05       		.uleb128 0x5
 2811 0037 0F       		.uleb128 0xf
 2812 0038 00       		.byte	0
 2813 0039 0B       		.uleb128 0xb
 2814 003a 0B       		.uleb128 0xb
 2815 003b 49       		.uleb128 0x49
 2816 003c 13       		.uleb128 0x13
 2817 003d 00       		.byte	0
 2818 003e 00       		.byte	0
 2819 003f 06       		.uleb128 0x6
 2820 0040 16       		.uleb128 0x16
 2821 0041 00       		.byte	0
 2822 0042 03       		.uleb128 0x3
 2823 0043 0E       		.uleb128 0xe
 2824 0044 3A       		.uleb128 0x3a
 2825 0045 0B       		.uleb128 0xb
 2826 0046 3B       		.uleb128 0x3b
 2827 0047 05       		.uleb128 0x5
 2828 0048 49       		.uleb128 0x49
 2829 0049 13       		.uleb128 0x13
 2830 004a 00       		.byte	0
 2831 004b 00       		.byte	0
 2832 004c 07       		.uleb128 0x7
 2833 004d 13       		.uleb128 0x13
 2834 004e 01       		.byte	0x1
 2835 004f 03       		.uleb128 0x3
 2836 0050 0E       		.uleb128 0xe
 2837 0051 0B       		.uleb128 0xb
 2838 0052 0B       		.uleb128 0xb
 2839 0053 3A       		.uleb128 0x3a
 2840 0054 0B       		.uleb128 0xb
 2841 0055 3B       		.uleb128 0x3b
 2842 0056 0B       		.uleb128 0xb
 2843 0057 01       		.uleb128 0x1
 2844 0058 13       		.uleb128 0x13
 2845 0059 00       		.byte	0
 2846 005a 00       		.byte	0
 2847 005b 08       		.uleb128 0x8
 2848 005c 0D       		.uleb128 0xd
 2849 005d 00       		.byte	0
 2850 005e 03       		.uleb128 0x3
 2851 005f 0E       		.uleb128 0xe
 2852 0060 3A       		.uleb128 0x3a
 2853 0061 0B       		.uleb128 0xb
 2854 0062 3B       		.uleb128 0x3b
 2855 0063 0B       		.uleb128 0xb
 2856 0064 49       		.uleb128 0x49
 2857 0065 13       		.uleb128 0x13
 2858 0066 38       		.uleb128 0x38
 2859 0067 0B       		.uleb128 0xb
 2860 0068 00       		.byte	0
 2861 0069 00       		.byte	0
 2862 006a 09       		.uleb128 0x9
 2863 006b 2E       		.uleb128 0x2e
 2864 006c 01       		.byte	0x1
 2865 006d 3F       		.uleb128 0x3f
 2866 006e 19       		.uleb128 0x19
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 61


 2867 006f 03       		.uleb128 0x3
 2868 0070 0E       		.uleb128 0xe
 2869 0071 3A       		.uleb128 0x3a
 2870 0072 0B       		.uleb128 0xb
 2871 0073 3B       		.uleb128 0x3b
 2872 0074 0B       		.uleb128 0xb
 2873 0075 11       		.uleb128 0x11
 2874 0076 01       		.uleb128 0x1
 2875 0077 12       		.uleb128 0x12
 2876 0078 06       		.uleb128 0x6
 2877 0079 40       		.uleb128 0x40
 2878 007a 18       		.uleb128 0x18
 2879 007b 9742     		.uleb128 0x2117
 2880 007d 19       		.uleb128 0x19
 2881 007e 01       		.uleb128 0x1
 2882 007f 13       		.uleb128 0x13
 2883 0080 00       		.byte	0
 2884 0081 00       		.byte	0
 2885 0082 0A       		.uleb128 0xa
 2886 0083 0B       		.uleb128 0xb
 2887 0084 01       		.byte	0x1
 2888 0085 11       		.uleb128 0x11
 2889 0086 01       		.uleb128 0x1
 2890 0087 12       		.uleb128 0x12
 2891 0088 06       		.uleb128 0x6
 2892 0089 00       		.byte	0
 2893 008a 00       		.byte	0
 2894 008b 0B       		.uleb128 0xb
 2895 008c 34       		.uleb128 0x34
 2896 008d 00       		.byte	0
 2897 008e 03       		.uleb128 0x3
 2898 008f 0E       		.uleb128 0xe
 2899 0090 3A       		.uleb128 0x3a
 2900 0091 0B       		.uleb128 0xb
 2901 0092 3B       		.uleb128 0x3b
 2902 0093 0B       		.uleb128 0xb
 2903 0094 49       		.uleb128 0x49
 2904 0095 13       		.uleb128 0x13
 2905 0096 02       		.uleb128 0x2
 2906 0097 18       		.uleb128 0x18
 2907 0098 00       		.byte	0
 2908 0099 00       		.byte	0
 2909 009a 0C       		.uleb128 0xc
 2910 009b 01       		.uleb128 0x1
 2911 009c 01       		.byte	0x1
 2912 009d 49       		.uleb128 0x49
 2913 009e 13       		.uleb128 0x13
 2914 009f 01       		.uleb128 0x1
 2915 00a0 13       		.uleb128 0x13
 2916 00a1 00       		.byte	0
 2917 00a2 00       		.byte	0
 2918 00a3 0D       		.uleb128 0xd
 2919 00a4 21       		.uleb128 0x21
 2920 00a5 00       		.byte	0
 2921 00a6 49       		.uleb128 0x49
 2922 00a7 13       		.uleb128 0x13
 2923 00a8 2F       		.uleb128 0x2f
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 62


 2924 00a9 0B       		.uleb128 0xb
 2925 00aa 00       		.byte	0
 2926 00ab 00       		.byte	0
 2927 00ac 0E       		.uleb128 0xe
 2928 00ad 2E       		.uleb128 0x2e
 2929 00ae 01       		.byte	0x1
 2930 00af 3F       		.uleb128 0x3f
 2931 00b0 19       		.uleb128 0x19
 2932 00b1 03       		.uleb128 0x3
 2933 00b2 0E       		.uleb128 0xe
 2934 00b3 3A       		.uleb128 0x3a
 2935 00b4 0B       		.uleb128 0xb
 2936 00b5 3B       		.uleb128 0x3b
 2937 00b6 0B       		.uleb128 0xb
 2938 00b7 27       		.uleb128 0x27
 2939 00b8 19       		.uleb128 0x19
 2940 00b9 11       		.uleb128 0x11
 2941 00ba 01       		.uleb128 0x1
 2942 00bb 12       		.uleb128 0x12
 2943 00bc 06       		.uleb128 0x6
 2944 00bd 40       		.uleb128 0x40
 2945 00be 18       		.uleb128 0x18
 2946 00bf 9742     		.uleb128 0x2117
 2947 00c1 19       		.uleb128 0x19
 2948 00c2 01       		.uleb128 0x1
 2949 00c3 13       		.uleb128 0x13
 2950 00c4 00       		.byte	0
 2951 00c5 00       		.byte	0
 2952 00c6 0F       		.uleb128 0xf
 2953 00c7 05       		.uleb128 0x5
 2954 00c8 00       		.byte	0
 2955 00c9 03       		.uleb128 0x3
 2956 00ca 0E       		.uleb128 0xe
 2957 00cb 3A       		.uleb128 0x3a
 2958 00cc 0B       		.uleb128 0xb
 2959 00cd 3B       		.uleb128 0x3b
 2960 00ce 0B       		.uleb128 0xb
 2961 00cf 49       		.uleb128 0x49
 2962 00d0 13       		.uleb128 0x13
 2963 00d1 02       		.uleb128 0x2
 2964 00d2 18       		.uleb128 0x18
 2965 00d3 00       		.byte	0
 2966 00d4 00       		.byte	0
 2967 00d5 10       		.uleb128 0x10
 2968 00d6 2E       		.uleb128 0x2e
 2969 00d7 00       		.byte	0
 2970 00d8 3F       		.uleb128 0x3f
 2971 00d9 19       		.uleb128 0x19
 2972 00da 03       		.uleb128 0x3
 2973 00db 0E       		.uleb128 0xe
 2974 00dc 3A       		.uleb128 0x3a
 2975 00dd 0B       		.uleb128 0xb
 2976 00de 3B       		.uleb128 0x3b
 2977 00df 0B       		.uleb128 0xb
 2978 00e0 11       		.uleb128 0x11
 2979 00e1 01       		.uleb128 0x1
 2980 00e2 12       		.uleb128 0x12
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 63


 2981 00e3 06       		.uleb128 0x6
 2982 00e4 40       		.uleb128 0x40
 2983 00e5 18       		.uleb128 0x18
 2984 00e6 9642     		.uleb128 0x2116
 2985 00e8 19       		.uleb128 0x19
 2986 00e9 00       		.byte	0
 2987 00ea 00       		.byte	0
 2988 00eb 11       		.uleb128 0x11
 2989 00ec 2E       		.uleb128 0x2e
 2990 00ed 01       		.byte	0x1
 2991 00ee 3F       		.uleb128 0x3f
 2992 00ef 19       		.uleb128 0x19
 2993 00f0 03       		.uleb128 0x3
 2994 00f1 0E       		.uleb128 0xe
 2995 00f2 3A       		.uleb128 0x3a
 2996 00f3 0B       		.uleb128 0xb
 2997 00f4 3B       		.uleb128 0x3b
 2998 00f5 0B       		.uleb128 0xb
 2999 00f6 27       		.uleb128 0x27
 3000 00f7 19       		.uleb128 0x19
 3001 00f8 11       		.uleb128 0x11
 3002 00f9 01       		.uleb128 0x1
 3003 00fa 12       		.uleb128 0x12
 3004 00fb 06       		.uleb128 0x6
 3005 00fc 40       		.uleb128 0x40
 3006 00fd 18       		.uleb128 0x18
 3007 00fe 9642     		.uleb128 0x2116
 3008 0100 19       		.uleb128 0x19
 3009 0101 01       		.uleb128 0x1
 3010 0102 13       		.uleb128 0x13
 3011 0103 00       		.byte	0
 3012 0104 00       		.byte	0
 3013 0105 12       		.uleb128 0x12
 3014 0106 2E       		.uleb128 0x2e
 3015 0107 00       		.byte	0
 3016 0108 3F       		.uleb128 0x3f
 3017 0109 19       		.uleb128 0x19
 3018 010a 03       		.uleb128 0x3
 3019 010b 0E       		.uleb128 0xe
 3020 010c 3A       		.uleb128 0x3a
 3021 010d 0B       		.uleb128 0xb
 3022 010e 3B       		.uleb128 0x3b
 3023 010f 0B       		.uleb128 0xb
 3024 0110 27       		.uleb128 0x27
 3025 0111 19       		.uleb128 0x19
 3026 0112 11       		.uleb128 0x11
 3027 0113 01       		.uleb128 0x1
 3028 0114 12       		.uleb128 0x12
 3029 0115 06       		.uleb128 0x6
 3030 0116 40       		.uleb128 0x40
 3031 0117 18       		.uleb128 0x18
 3032 0118 9642     		.uleb128 0x2116
 3033 011a 19       		.uleb128 0x19
 3034 011b 00       		.byte	0
 3035 011c 00       		.byte	0
 3036 011d 13       		.uleb128 0x13
 3037 011e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 64


 3038 011f 01       		.byte	0x1
 3039 0120 3F       		.uleb128 0x3f
 3040 0121 19       		.uleb128 0x19
 3041 0122 03       		.uleb128 0x3
 3042 0123 0E       		.uleb128 0xe
 3043 0124 3A       		.uleb128 0x3a
 3044 0125 0B       		.uleb128 0xb
 3045 0126 3B       		.uleb128 0x3b
 3046 0127 0B       		.uleb128 0xb
 3047 0128 11       		.uleb128 0x11
 3048 0129 01       		.uleb128 0x1
 3049 012a 12       		.uleb128 0x12
 3050 012b 06       		.uleb128 0x6
 3051 012c 40       		.uleb128 0x40
 3052 012d 18       		.uleb128 0x18
 3053 012e 9642     		.uleb128 0x2116
 3054 0130 19       		.uleb128 0x19
 3055 0131 01       		.uleb128 0x1
 3056 0132 13       		.uleb128 0x13
 3057 0133 00       		.byte	0
 3058 0134 00       		.byte	0
 3059 0135 14       		.uleb128 0x14
 3060 0136 2E       		.uleb128 0x2e
 3061 0137 01       		.byte	0x1
 3062 0138 3F       		.uleb128 0x3f
 3063 0139 19       		.uleb128 0x19
 3064 013a 03       		.uleb128 0x3
 3065 013b 0E       		.uleb128 0xe
 3066 013c 3A       		.uleb128 0x3a
 3067 013d 0B       		.uleb128 0xb
 3068 013e 3B       		.uleb128 0x3b
 3069 013f 05       		.uleb128 0x5
 3070 0140 11       		.uleb128 0x11
 3071 0141 01       		.uleb128 0x1
 3072 0142 12       		.uleb128 0x12
 3073 0143 06       		.uleb128 0x6
 3074 0144 40       		.uleb128 0x40
 3075 0145 18       		.uleb128 0x18
 3076 0146 9642     		.uleb128 0x2116
 3077 0148 19       		.uleb128 0x19
 3078 0149 01       		.uleb128 0x1
 3079 014a 13       		.uleb128 0x13
 3080 014b 00       		.byte	0
 3081 014c 00       		.byte	0
 3082 014d 15       		.uleb128 0x15
 3083 014e 34       		.uleb128 0x34
 3084 014f 00       		.byte	0
 3085 0150 03       		.uleb128 0x3
 3086 0151 0E       		.uleb128 0xe
 3087 0152 3A       		.uleb128 0x3a
 3088 0153 0B       		.uleb128 0xb
 3089 0154 3B       		.uleb128 0x3b
 3090 0155 05       		.uleb128 0x5
 3091 0156 49       		.uleb128 0x49
 3092 0157 13       		.uleb128 0x13
 3093 0158 02       		.uleb128 0x2
 3094 0159 18       		.uleb128 0x18
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 65


 3095 015a 00       		.byte	0
 3096 015b 00       		.byte	0
 3097 015c 16       		.uleb128 0x16
 3098 015d 2E       		.uleb128 0x2e
 3099 015e 00       		.byte	0
 3100 015f 3F       		.uleb128 0x3f
 3101 0160 19       		.uleb128 0x19
 3102 0161 03       		.uleb128 0x3
 3103 0162 0E       		.uleb128 0xe
 3104 0163 3A       		.uleb128 0x3a
 3105 0164 0B       		.uleb128 0xb
 3106 0165 3B       		.uleb128 0x3b
 3107 0166 05       		.uleb128 0x5
 3108 0167 49       		.uleb128 0x49
 3109 0168 13       		.uleb128 0x13
 3110 0169 11       		.uleb128 0x11
 3111 016a 01       		.uleb128 0x1
 3112 016b 12       		.uleb128 0x12
 3113 016c 06       		.uleb128 0x6
 3114 016d 40       		.uleb128 0x40
 3115 016e 18       		.uleb128 0x18
 3116 016f 9642     		.uleb128 0x2116
 3117 0171 19       		.uleb128 0x19
 3118 0172 00       		.byte	0
 3119 0173 00       		.byte	0
 3120 0174 17       		.uleb128 0x17
 3121 0175 2E       		.uleb128 0x2e
 3122 0176 01       		.byte	0x1
 3123 0177 3F       		.uleb128 0x3f
 3124 0178 19       		.uleb128 0x19
 3125 0179 03       		.uleb128 0x3
 3126 017a 0E       		.uleb128 0xe
 3127 017b 3A       		.uleb128 0x3a
 3128 017c 0B       		.uleb128 0xb
 3129 017d 3B       		.uleb128 0x3b
 3130 017e 05       		.uleb128 0x5
 3131 017f 27       		.uleb128 0x27
 3132 0180 19       		.uleb128 0x19
 3133 0181 11       		.uleb128 0x11
 3134 0182 01       		.uleb128 0x1
 3135 0183 12       		.uleb128 0x12
 3136 0184 06       		.uleb128 0x6
 3137 0185 40       		.uleb128 0x40
 3138 0186 18       		.uleb128 0x18
 3139 0187 9642     		.uleb128 0x2116
 3140 0189 19       		.uleb128 0x19
 3141 018a 01       		.uleb128 0x1
 3142 018b 13       		.uleb128 0x13
 3143 018c 00       		.byte	0
 3144 018d 00       		.byte	0
 3145 018e 18       		.uleb128 0x18
 3146 018f 05       		.uleb128 0x5
 3147 0190 00       		.byte	0
 3148 0191 03       		.uleb128 0x3
 3149 0192 08       		.uleb128 0x8
 3150 0193 3A       		.uleb128 0x3a
 3151 0194 0B       		.uleb128 0xb
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 66


 3152 0195 3B       		.uleb128 0x3b
 3153 0196 05       		.uleb128 0x5
 3154 0197 49       		.uleb128 0x49
 3155 0198 13       		.uleb128 0x13
 3156 0199 02       		.uleb128 0x2
 3157 019a 18       		.uleb128 0x18
 3158 019b 00       		.byte	0
 3159 019c 00       		.byte	0
 3160 019d 19       		.uleb128 0x19
 3161 019e 34       		.uleb128 0x34
 3162 019f 00       		.byte	0
 3163 01a0 03       		.uleb128 0x3
 3164 01a1 08       		.uleb128 0x8
 3165 01a2 3A       		.uleb128 0x3a
 3166 01a3 0B       		.uleb128 0xb
 3167 01a4 3B       		.uleb128 0x3b
 3168 01a5 05       		.uleb128 0x5
 3169 01a6 49       		.uleb128 0x49
 3170 01a7 13       		.uleb128 0x13
 3171 01a8 02       		.uleb128 0x2
 3172 01a9 18       		.uleb128 0x18
 3173 01aa 00       		.byte	0
 3174 01ab 00       		.byte	0
 3175 01ac 1A       		.uleb128 0x1a
 3176 01ad 34       		.uleb128 0x34
 3177 01ae 00       		.byte	0
 3178 01af 03       		.uleb128 0x3
 3179 01b0 0E       		.uleb128 0xe
 3180 01b1 3A       		.uleb128 0x3a
 3181 01b2 0B       		.uleb128 0xb
 3182 01b3 3B       		.uleb128 0x3b
 3183 01b4 05       		.uleb128 0x5
 3184 01b5 49       		.uleb128 0x49
 3185 01b6 13       		.uleb128 0x13
 3186 01b7 3F       		.uleb128 0x3f
 3187 01b8 19       		.uleb128 0x19
 3188 01b9 3C       		.uleb128 0x3c
 3189 01ba 19       		.uleb128 0x19
 3190 01bb 00       		.byte	0
 3191 01bc 00       		.byte	0
 3192 01bd 1B       		.uleb128 0x1b
 3193 01be 35       		.uleb128 0x35
 3194 01bf 00       		.byte	0
 3195 01c0 49       		.uleb128 0x49
 3196 01c1 13       		.uleb128 0x13
 3197 01c2 00       		.byte	0
 3198 01c3 00       		.byte	0
 3199 01c4 1C       		.uleb128 0x1c
 3200 01c5 34       		.uleb128 0x34
 3201 01c6 00       		.byte	0
 3202 01c7 03       		.uleb128 0x3
 3203 01c8 08       		.uleb128 0x8
 3204 01c9 3A       		.uleb128 0x3a
 3205 01ca 0B       		.uleb128 0xb
 3206 01cb 3B       		.uleb128 0x3b
 3207 01cc 0B       		.uleb128 0xb
 3208 01cd 49       		.uleb128 0x49
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 67


 3209 01ce 13       		.uleb128 0x13
 3210 01cf 3F       		.uleb128 0x3f
 3211 01d0 19       		.uleb128 0x19
 3212 01d1 02       		.uleb128 0x2
 3213 01d2 18       		.uleb128 0x18
 3214 01d3 00       		.byte	0
 3215 01d4 00       		.byte	0
 3216 01d5 1D       		.uleb128 0x1d
 3217 01d6 34       		.uleb128 0x34
 3218 01d7 00       		.byte	0
 3219 01d8 03       		.uleb128 0x3
 3220 01d9 0E       		.uleb128 0xe
 3221 01da 3A       		.uleb128 0x3a
 3222 01db 0B       		.uleb128 0xb
 3223 01dc 3B       		.uleb128 0x3b
 3224 01dd 0B       		.uleb128 0xb
 3225 01de 49       		.uleb128 0x49
 3226 01df 13       		.uleb128 0x13
 3227 01e0 3F       		.uleb128 0x3f
 3228 01e1 19       		.uleb128 0x19
 3229 01e2 02       		.uleb128 0x2
 3230 01e3 18       		.uleb128 0x18
 3231 01e4 00       		.byte	0
 3232 01e5 00       		.byte	0
 3233 01e6 00       		.byte	0
 3234              		.section	.debug_aranges,"",%progbits
 3235 0000 9C000000 		.4byte	0x9c
 3236 0004 0200     		.2byte	0x2
 3237 0006 00000000 		.4byte	.Ldebug_info0
 3238 000a 04       		.byte	0x4
 3239 000b 00       		.byte	0
 3240 000c 0000     		.2byte	0
 3241 000e 0000     		.2byte	0
 3242 0010 00000000 		.4byte	.LFB63
 3243 0014 60010000 		.4byte	.LFE63-.LFB63
 3244 0018 00000000 		.4byte	.LFB64
 3245 001c 2C000000 		.4byte	.LFE64-.LFB64
 3246 0020 00000000 		.4byte	.LFB65
 3247 0024 30000000 		.4byte	.LFE65-.LFB65
 3248 0028 00000000 		.4byte	.LFB66
 3249 002c 98000000 		.4byte	.LFE66-.LFB66
 3250 0030 00000000 		.4byte	.LFB67
 3251 0034 2C000000 		.4byte	.LFE67-.LFB67
 3252 0038 00000000 		.4byte	.LFB68
 3253 003c 3C000000 		.4byte	.LFE68-.LFB68
 3254 0040 00000000 		.4byte	.LFB69
 3255 0044 0A000000 		.4byte	.LFE69-.LFB69
 3256 0048 00000000 		.4byte	.LFB70
 3257 004c 0E000000 		.4byte	.LFE70-.LFB70
 3258 0050 00000000 		.4byte	.LFB71
 3259 0054 0A000000 		.4byte	.LFE71-.LFB71
 3260 0058 00000000 		.4byte	.LFB72
 3261 005c 1C020000 		.4byte	.LFE72-.LFB72
 3262 0060 00000000 		.4byte	.LFB73
 3263 0064 C0000000 		.4byte	.LFE73-.LFB73
 3264 0068 00000000 		.4byte	.LFB74
 3265 006c B8000000 		.4byte	.LFE74-.LFB74
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 68


 3266 0070 00000000 		.4byte	.LFB75
 3267 0074 F4000000 		.4byte	.LFE75-.LFB75
 3268 0078 00000000 		.4byte	.LFB76
 3269 007c 90000000 		.4byte	.LFE76-.LFB76
 3270 0080 00000000 		.4byte	.LFB77
 3271 0084 68000000 		.4byte	.LFE77-.LFB77
 3272 0088 00000000 		.4byte	.LFB78
 3273 008c 50000000 		.4byte	.LFE78-.LFB78
 3274 0090 00000000 		.4byte	.LFB79
 3275 0094 3A000000 		.4byte	.LFE79-.LFB79
 3276 0098 00000000 		.4byte	0
 3277 009c 00000000 		.4byte	0
 3278              		.section	.debug_ranges,"",%progbits
 3279              	.Ldebug_ranges0:
 3280 0000 00000000 		.4byte	.LFB63
 3281 0004 60010000 		.4byte	.LFE63
 3282 0008 00000000 		.4byte	.LFB64
 3283 000c 2C000000 		.4byte	.LFE64
 3284 0010 00000000 		.4byte	.LFB65
 3285 0014 30000000 		.4byte	.LFE65
 3286 0018 00000000 		.4byte	.LFB66
 3287 001c 98000000 		.4byte	.LFE66
 3288 0020 00000000 		.4byte	.LFB67
 3289 0024 2C000000 		.4byte	.LFE67
 3290 0028 00000000 		.4byte	.LFB68
 3291 002c 3C000000 		.4byte	.LFE68
 3292 0030 00000000 		.4byte	.LFB69
 3293 0034 0A000000 		.4byte	.LFE69
 3294 0038 00000000 		.4byte	.LFB70
 3295 003c 0E000000 		.4byte	.LFE70
 3296 0040 00000000 		.4byte	.LFB71
 3297 0044 0A000000 		.4byte	.LFE71
 3298 0048 00000000 		.4byte	.LFB72
 3299 004c 1C020000 		.4byte	.LFE72
 3300 0050 00000000 		.4byte	.LFB73
 3301 0054 C0000000 		.4byte	.LFE73
 3302 0058 00000000 		.4byte	.LFB74
 3303 005c B8000000 		.4byte	.LFE74
 3304 0060 00000000 		.4byte	.LFB75
 3305 0064 F4000000 		.4byte	.LFE75
 3306 0068 00000000 		.4byte	.LFB76
 3307 006c 90000000 		.4byte	.LFE76
 3308 0070 00000000 		.4byte	.LFB77
 3309 0074 68000000 		.4byte	.LFE77
 3310 0078 00000000 		.4byte	.LFB78
 3311 007c 50000000 		.4byte	.LFE78
 3312 0080 00000000 		.4byte	.LFB79
 3313 0084 3A000000 		.4byte	.LFE79
 3314 0088 00000000 		.4byte	0
 3315 008c 00000000 		.4byte	0
 3316              		.section	.debug_line,"",%progbits
 3317              	.Ldebug_line0:
 3318 0000 C0030000 		.section	.debug_str,"MS",%progbits,1
 3318      02005501 
 3318      00000201 
 3318      FB0E0D00 
 3318      01010101 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 69


 3319              	.LASF98:
 3320 0000 70726576 		.ascii	"prevVoltage2\000"
 3320      566F6C74 
 3320      61676532 
 3320      00
 3321              	.LASF68:
 3322 000d 75736250 		.ascii	"usbPutChar\000"
 3322      75744368 
 3322      617200
 3323              	.LASF60:
 3324 0018 636F6E76 		.ascii	"converted_val\000"
 3324      65727465 
 3324      645F7661 
 3324      6C00
 3325              	.LASF93:
 3326 0026 6C656674 		.ascii	"leftSpeedLimit\000"
 3326      53706565 
 3326      644C696D 
 3326      697400
 3327              	.LASF94:
 3328 0035 72696768 		.ascii	"rightSpeedLimit\000"
 3328      74537065 
 3328      65644C69 
 3328      6D697400 
 3329              	.LASF64:
 3330 0045 6379636C 		.ascii	"cycle_PWM\000"
 3330      655F5057 
 3330      4D00
 3331              	.LASF80:
 3332 004f 666C6167 		.ascii	"flag_packet\000"
 3332      5F706163 
 3332      6B657400 
 3333              	.LASF84:
 3334 005b 666C6167 		.ascii	"flag_print_rf\000"
 3334      5F707269 
 3334      6E745F72 
 3334      6600
 3335              	.LASF37:
 3336 0069 7061636B 		.ascii	"packet_bytes\000"
 3336      65745F62 
 3336      79746573 
 3336      00
 3337              	.LASF92:
 3338 0076 72696768 		.ascii	"right_duty_cycle\000"
 3338      745F6475 
 3338      74795F63 
 3338      79636C65 
 3338      00
 3339              	.LASF78:
 3340 0087 666C6167 		.ascii	"flag_ts_display\000"
 3340      5F74735F 
 3340      64697370 
 3340      6C617900 
 3341              	.LASF77:
 3342 0097 666C6167 		.ascii	"flag_ts_speed\000"
 3342      5F74735F 
 3342      73706565 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 70


 3342      6400
 3343              	.LASF33:
 3344 00a5 67325F78 		.ascii	"g2_xpos\000"
 3344      706F7300 
 3345              	.LASF2:
 3346 00ad 73686F72 		.ascii	"short int\000"
 3346      7420696E 
 3346      7400
 3347              	.LASF104:
 3348 00b7 73797374 		.ascii	"system_state\000"
 3348      656D5F73 
 3348      74617465 
 3348      00
 3349              	.LASF9:
 3350 00c4 73697A65 		.ascii	"sizetype\000"
 3350      74797065 
 3350      00
 3351              	.LASF51:
 3352 00cd 51756164 		.ascii	"Quad_Dec_response\000"
 3352      5F446563 
 3352      5F726573 
 3352      706F6E73 
 3352      6500
 3353              	.LASF90:
 3354 00df 71756164 		.ascii	"quad_count2\000"
 3354      5F636F75 
 3354      6E743200 
 3355              	.LASF52:
 3356 00eb 77686565 		.ascii	"wheel_1_str\000"
 3356      6C5F315F 
 3356      73747200 
 3357              	.LASF102:
 3358 00f7 75736242 		.ascii	"usbBuffer\000"
 3358      75666665 
 3358      7200
 3359              	.LASF38:
 3360 0101 62797465 		.ascii	"byte_packet\000"
 3360      5F706163 
 3360      6B657400 
 3361              	.LASF87:
 3362 010d 64697265 		.ascii	"direction\000"
 3362      6374696F 
 3362      6E00
 3363              	.LASF66:
 3364 0117 6D61696E 		.ascii	"main\000"
 3364      00
 3365              	.LASF91:
 3366 011c 6C656674 		.ascii	"left_duty_cycle\000"
 3366      5F647574 
 3366      795F6379 
 3366      636C6500 
 3367              	.LASF96:
 3368 012c 706F7274 		.ascii	"portOpen\000"
 3368      4F70656E 
 3368      00
 3369              	.LASF46:
 3370 0135 6973725F 		.ascii	"isr_quad1\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 71


 3370      71756164 
 3370      3100
 3371              	.LASF58:
 3372 013f 7072696E 		.ascii	"print_ADC\000"
 3372      745F4144 
 3372      4300
 3373              	.LASF21:
 3374 0149 696E6465 		.ascii	"index\000"
 3374      7800
 3375              	.LASF17:
 3376 014f 696E7431 		.ascii	"int16\000"
 3376      3600
 3377              	.LASF13:
 3378 0155 75696E74 		.ascii	"uint8\000"
 3378      3800
 3379              	.LASF32:
 3380 015b 67315F64 		.ascii	"g1_direction\000"
 3380      69726563 
 3380      74696F6E 
 3380      00
 3381              	.LASF109:
 3382 0168 443A5C47 		.ascii	"D:\\GP1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 3382      50315C43 
 3382      53333031 
 3382      2D546561 
 3382      6D2D5265 
 3383              	.LASF106:
 3384 0191 7061636B 		.ascii	"packet\000"
 3384      657400
 3385              	.LASF100:
 3386 0198 6C696E65 		.ascii	"line\000"
 3386      00
 3387              	.LASF69:
 3388 019d 75617274 		.ascii	"uart_set_PWM\000"
 3388      5F736574 
 3388      5F50574D 
 3388      00
 3389              	.LASF56:
 3390 01aa 6C656674 		.ascii	"left_direction\000"
 3390      5F646972 
 3390      65637469 
 3390      6F6E00
 3391              	.LASF0:
 3392 01b9 7369676E 		.ascii	"signed char\000"
 3392      65642063 
 3392      68617200 
 3393              	.LASF18:
 3394 01c5 666C6F61 		.ascii	"float\000"
 3394      7400
 3395              	.LASF6:
 3396 01cb 6C6F6E67 		.ascii	"long long int\000"
 3396      206C6F6E 
 3396      6720696E 
 3396      7400
 3397              	.LASF67:
 3398 01d9 75736250 		.ascii	"usbPutString\000"
 3398      75745374 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 72


 3398      72696E67 
 3398      00
 3399              	.LASF16:
 3400 01e6 696E7438 		.ascii	"int8\000"
 3400      00
 3401              	.LASF76:
 3402 01eb 666C6167 		.ascii	"flag_ts_update\000"
 3402      5F74735F 
 3402      75706461 
 3402      746500
 3403              	.LASF34:
 3404 01fa 67325F79 		.ascii	"g2_ypos\000"
 3404      706F7300 
 3405              	.LASF28:
 3406 0202 67305F64 		.ascii	"g0_direction\000"
 3406      69726563 
 3406      74696F6E 
 3406      00
 3407              	.LASF25:
 3408 020f 67305F78 		.ascii	"g0_xpos\000"
 3408      706F7300 
 3409              	.LASF107:
 3410 0217 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3410      4320342E 
 3410      392E3320 
 3410      32303135 
 3410      30333033 
 3411 024a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3411      20726576 
 3411      6973696F 
 3411      6E203232 
 3411      31323230 
 3412 027d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3412      66756E63 
 3412      74696F6E 
 3412      2D736563 
 3412      74696F6E 
 3413              	.LASF48:
 3414 02a5 62757474 		.ascii	"button\000"
 3414      6F6E00
 3415              	.LASF63:
 3416 02ac 7072696E 		.ascii	"printString\000"
 3416      74537472 
 3416      696E6700 
 3417              	.LASF85:
 3418 02b8 666C6167 		.ascii	"flag_receive_ADC\000"
 3418      5F726563 
 3418      65697665 
 3418      5F414443 
 3418      00
 3419              	.LASF79:
 3420 02c9 666C6167 		.ascii	"flag_rx\000"
 3420      5F727800 
 3421              	.LASF101:
 3422 02d1 656E7472 		.ascii	"entry\000"
 3422      7900
 3423              	.LASF53:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 73


 3424 02d7 77686565 		.ascii	"wheel_2_str\000"
 3424      6C5F325F 
 3424      73747200 
 3425              	.LASF108:
 3426 02e3 2E5C6D61 		.ascii	".\\main.c\000"
 3426      696E2E63 
 3426      00
 3427              	.LASF40:
 3428 02ec 72696768 		.ascii	"right\000"
 3428      7400
 3429              	.LASF1:
 3430 02f2 756E7369 		.ascii	"unsigned char\000"
 3430      676E6564 
 3430      20636861 
 3430      7200
 3431              	.LASF27:
 3432 0300 67305F73 		.ascii	"g0_speed\000"
 3432      70656564 
 3432      00
 3433              	.LASF111:
 3434 0309 6272616B 		.ascii	"brakeMotor\000"
 3434      654D6F74 
 3434      6F7200
 3435              	.LASF82:
 3436 0314 64617461 		.ascii	"dataready_flag\000"
 3436      72656164 
 3436      795F666C 
 3436      616700
 3437              	.LASF105:
 3438 0323 62797465 		.ascii	"byteCount\000"
 3438      436F756E 
 3438      7400
 3439              	.LASF12:
 3440 032d 696E7433 		.ascii	"int32_t\000"
 3440      325F7400 
 3441              	.LASF7:
 3442 0335 6C6F6E67 		.ascii	"long long unsigned int\000"
 3442      206C6F6E 
 3442      6720756E 
 3442      7369676E 
 3442      65642069 
 3443              	.LASF86:
 3444 034c 6164635F 		.ascii	"adc_result\000"
 3444      72657375 
 3444      6C7400
 3445              	.LASF8:
 3446 0357 756E7369 		.ascii	"unsigned int\000"
 3446      676E6564 
 3446      20696E74 
 3446      00
 3447              	.LASF54:
 3448 0364 6C656674 		.ascii	"leftSpeed\000"
 3448      53706565 
 3448      6400
 3449              	.LASF81:
 3450 036e 666C6167 		.ascii	"flag_KB_string\000"
 3450      5F4B425F 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 74


 3450      73747269 
 3450      6E6700
 3451              	.LASF65:
 3452 037d 666C7563 		.ascii	"fluct\000"
 3452      7400
 3453              	.LASF35:
 3454 0383 67325F73 		.ascii	"g2_speed\000"
 3454      70656564 
 3454      00
 3455              	.LASF57:
 3456 038c 72696768 		.ascii	"right_direction\000"
 3456      745F6469 
 3456      72656374 
 3456      696F6E00 
 3457              	.LASF95:
 3458 039c 6272616B 		.ascii	"brakeFlag\000"
 3458      65466C61 
 3458      6700
 3459              	.LASF29:
 3460 03a6 67315F78 		.ascii	"g1_xpos\000"
 3460      706F7300 
 3461              	.LASF3:
 3462 03ae 73686F72 		.ascii	"short unsigned int\000"
 3462      7420756E 
 3462      7369676E 
 3462      65642069 
 3462      6E7400
 3463              	.LASF55:
 3464 03c1 72696768 		.ascii	"rightSpeed\000"
 3464      74537065 
 3464      656400
 3465              	.LASF110:
 3466 03cc 64617461 		.ascii	"data_main\000"
 3466      5F6D6169 
 3466      6E00
 3467              	.LASF10:
 3468 03d6 63686172 		.ascii	"char\000"
 3468      00
 3469              	.LASF4:
 3470 03db 6C6F6E67 		.ascii	"long int\000"
 3470      20696E74 
 3470      00
 3471              	.LASF22:
 3472 03e4 726F626F 		.ascii	"robot_xpos\000"
 3472      745F7870 
 3472      6F7300
 3473              	.LASF41:
 3474 03ef 6C656674 		.ascii	"left\000"
 3474      00
 3475              	.LASF30:
 3476 03f4 67315F79 		.ascii	"g1_ypos\000"
 3476      706F7300 
 3477              	.LASF36:
 3478 03fc 67325F64 		.ascii	"g2_direction\000"
 3478      69726563 
 3478      74696F6E 
 3478      00
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 75


 3479              	.LASF31:
 3480 0409 67315F73 		.ascii	"g1_speed\000"
 3480      70656564 
 3480      00
 3481              	.LASF50:
 3482 0412 68616E64 		.ascii	"handle_rx_binary\000"
 3482      6C655F72 
 3482      785F6269 
 3482      6E617279 
 3482      00
 3483              	.LASF99:
 3484 0423 64697370 		.ascii	"displaystring\000"
 3484      6C617973 
 3484      7472696E 
 3484      6700
 3485              	.LASF14:
 3486 0431 75696E74 		.ascii	"uint16\000"
 3486      313600
 3487              	.LASF89:
 3488 0438 71756164 		.ascii	"quad_count1\000"
 3488      5F636F75 
 3488      6E743100 
 3489              	.LASF59:
 3490 0444 7363616C 		.ascii	"scalingFactor\000"
 3490      696E6746 
 3490      6163746F 
 3490      7200
 3491              	.LASF15:
 3492 0452 75696E74 		.ascii	"uint32\000"
 3492      333200
 3493              	.LASF5:
 3494 0459 6C6F6E67 		.ascii	"long unsigned int\000"
 3494      20756E73 
 3494      69676E65 
 3494      6420696E 
 3494      7400
 3495              	.LASF88:
 3496 046b 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 3496      5F63616C 
 3496      635F7768 
 3496      65656C73 
 3496      70656564 
 3497              	.LASF19:
 3498 0480 646F7562 		.ascii	"double\000"
 3498      6C6500
 3499              	.LASF39:
 3500 0487 73747269 		.ascii	"string_packet\000"
 3500      6E675F70 
 3500      61636B65 
 3500      7400
 3501              	.LASF45:
 3502 0495 6164635F 		.ascii	"adc_isr\000"
 3502      69737200 
 3503              	.LASF97:
 3504 049d 70726576 		.ascii	"prevVoltage\000"
 3504      566F6C74 
 3504      61676500 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 76


 3505              	.LASF42:
 3506 04a9 73657453 		.ascii	"setSpeed\000"
 3506      70656564 
 3506      00
 3507              	.LASF75:
 3508 04b2 666C6167 		.ascii	"flag_ts_enc\000"
 3508      5F74735F 
 3508      656E6300 
 3509              	.LASF11:
 3510 04be 5F5F696E 		.ascii	"__int32_t\000"
 3510      7433325F 
 3510      7400
 3511              	.LASF49:
 3512 04c8 6973725F 		.ascii	"isr_adcTimer\000"
 3512      61646354 
 3512      696D6572 
 3512      00
 3513              	.LASF62:
 3514 04d5 7072696E 		.ascii	"print_RF\000"
 3514      745F5246 
 3514      00
 3515              	.LASF26:
 3516 04de 67305F79 		.ascii	"g0_ypos\000"
 3516      706F7300 
 3517              	.LASF74:
 3518 04e6 74735F64 		.ascii	"ts_display\000"
 3518      6973706C 
 3518      617900
 3519              	.LASF73:
 3520 04f1 74735F73 		.ascii	"ts_speed\000"
 3520      70656564 
 3520      00
 3521              	.LASF71:
 3522 04fa 74735F65 		.ascii	"ts_enc\000"
 3522      6E6300
 3523              	.LASF72:
 3524 0501 74735F75 		.ascii	"ts_update\000"
 3524      70646174 
 3524      6500
 3525              	.LASF83:
 3526 050b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3526      5F72665F 
 3526      7472616E 
 3526      736D6973 
 3526      73696F6E 
 3527              	.LASF23:
 3528 0527 726F626F 		.ascii	"robot_ypos\000"
 3528      745F7970 
 3528      6F7300
 3529              	.LASF103:
 3530 0532 62756666 		.ascii	"buffer_state\000"
 3530      65725F73 
 3530      74617465 
 3530      00
 3531              	.LASF70:
 3532 053f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3532      52784275 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccMLEC5b.s 			page 77


 3532      66666572 
 3532      00
 3533              	.LASF47:
 3534 054c 53746F70 		.ascii	"Stop_on_line\000"
 3534      5F6F6E5F 
 3534      6C696E65 
 3534      00
 3535              	.LASF44:
 3536 0559 72665F63 		.ascii	"rf_char\000"
 3536      68617200 
 3537              	.LASF61:
 3538 0561 72657375 		.ascii	"result_str\000"
 3538      6C745F73 
 3538      747200
 3539              	.LASF20:
 3540 056c 72737369 		.ascii	"rssi\000"
 3540      00
 3541              	.LASF24:
 3542 0571 726F626F 		.ascii	"robot_orientation\000"
 3542      745F6F72 
 3542      69656E74 
 3542      6174696F 
 3542      6E00
 3543              	.LASF43:
 3544 0583 7278496E 		.ascii	"rxInt\000"
 3544      7400
 3545              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
