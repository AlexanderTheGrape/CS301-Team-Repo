ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	movement_state
 204              		.type	movement_state, %object
 205              		.size	movement_state, 1
 206              	movement_state:
 207 0044 03       		.byte	3
 208              		.global	byteCount
 209 0045 000000   		.bss
 210              		.type	byteCount, %object
 211              		.size	byteCount, 1
 212              	byteCount:
 213 002c 00       		.space	1
 214              		.comm	packet,2,4
 215 002d 00       		.section	.text.handle_rx_binary,"ax",%progbits
 216              		.align	2
 217              		.global	handle_rx_binary
 218              		.thumb
 219              		.thumb_func
 220              		.type	handle_rx_binary, %function
 221              	handle_rx_binary:
 222              	.LFB63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 5


 223              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** 
  40:.\main.c      **** void handle_rx_binary()
  41:.\main.c      **** {
 224              		.loc 1 41 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 89B0     		sub	sp, sp, #36
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  42:.\main.c      ****     if(flag_rx == 1)
 236              		.loc 1 42 0
 237 0006 524B     		ldr	r3, .L21
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 6


 238 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 000a 012B     		cmp	r3, #1
 240 000c 40F09A80 		bne	.L1
 241              	.LBB2:
  43:.\main.c      ****     {    
  44:.\main.c      ****         flag_rx = 0;
 242              		.loc 1 44 0
 243 0010 4F4B     		ldr	r3, .L21
 244 0012 0022     		movs	r2, #0
 245 0014 1A70     		strb	r2, [r3]
  45:.\main.c      ****         
  46:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 246              		.loc 1 46 0
 247 0016 4F4B     		ldr	r3, .L21+4
 248 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 249 001a 1B02     		lsls	r3, r3, #8
 250 001c 9AB2     		uxth	r2, r3
 251 001e 4D4B     		ldr	r3, .L21+4
 252 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0022 9BB2     		uxth	r3, r3
 254 0024 1343     		orrs	r3, r3, r2
 255 0026 9BB2     		uxth	r3, r3
 256 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  47:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  48:.\main.c      ****         char byte_packet[12];
  49:.\main.c      ****         char string_packet[12];
  50:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  51:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  52:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  53:.\main.c      ****         //usbPutString(string_packet);
  54:.\main.c      ****        // usbPutString(string_packet);
  55:.\main.c      ****        // usbPutChar(' ');
  56:.\main.c      ****         
  57:.\main.c      ****         switch(byteCount)
 257              		.loc 1 57 0
 258 002a 4B4B     		ldr	r3, .L21+8
 259 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 002e 043B     		subs	r3, r3, #4
 261 0030 1E2B     		cmp	r3, #30
 262 0032 00F28780 		bhi	.L1
 263 0036 01A2     		adr	r2, .L5
 264 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265              		.p2align 2
 266              	.L5:
 267 003c B9000000 		.word	.L4+1
 268 0040 45010000 		.word	.L1+1
 269 0044 CD000000 		.word	.L6+1
 270 0048 45010000 		.word	.L1+1
 271 004c D5000000 		.word	.L7+1
 272 0050 45010000 		.word	.L1+1
 273 0054 DD000000 		.word	.L8+1
 274 0058 45010000 		.word	.L1+1
 275 005c E5000000 		.word	.L9+1
 276 0060 45010000 		.word	.L1+1
 277 0064 ED000000 		.word	.L10+1
 278 0068 45010000 		.word	.L1+1
 279 006c F5000000 		.word	.L11+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 7


 280 0070 45010000 		.word	.L1+1
 281 0074 FD000000 		.word	.L12+1
 282 0078 45010000 		.word	.L1+1
 283 007c 05010000 		.word	.L13+1
 284 0080 45010000 		.word	.L1+1
 285 0084 0D010000 		.word	.L14+1
 286 0088 45010000 		.word	.L1+1
 287 008c 15010000 		.word	.L15+1
 288 0090 45010000 		.word	.L1+1
 289 0094 1D010000 		.word	.L16+1
 290 0098 45010000 		.word	.L1+1
 291 009c 25010000 		.word	.L17+1
 292 00a0 45010000 		.word	.L1+1
 293 00a4 2D010000 		.word	.L18+1
 294 00a8 45010000 		.word	.L1+1
 295 00ac 35010000 		.word	.L19+1
 296 00b0 45010000 		.word	.L1+1
 297 00b4 3D010000 		.word	.L20+1
 298              		.p2align 1
 299              	.L4:
  58:.\main.c      ****         {
  59:.\main.c      ****             case 4:
  60:.\main.c      ****                 //usbPutString("RSSI:");
  61:.\main.c      ****                 //usbPutString(byte_packet);
  62:.\main.c      ****                 //usbPutString("\r\n");
  63:.\main.c      ****                 buffer_state.rssi = packet[0];
 300              		.loc 1 63 0
 301 00b8 264B     		ldr	r3, .L21+4
 302 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00bc DAB2     		uxtb	r2, r3
 304 00be 274B     		ldr	r3, .L21+12
 305 00c0 1A70     		strb	r2, [r3]
  64:.\main.c      ****                 buffer_state.index = packet[1];
 306              		.loc 1 64 0
 307 00c2 244B     		ldr	r3, .L21+4
 308 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 309 00c6 254B     		ldr	r3, .L21+12
 310 00c8 5A70     		strb	r2, [r3, #1]
  65:.\main.c      ****             break;
 311              		.loc 1 65 0
 312 00ca 3BE0     		b	.L1
 313              	.L6:
  66:.\main.c      ****             case 6:
  67:.\main.c      ****                 //usbPutString("robot_x:");
  68:.\main.c      ****                 //usbPutString(string_packet);
  69:.\main.c      ****                 //usbPutString("\r\n");
  70:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 314              		.loc 1 70 0
 315 00cc FA8B     		ldrh	r2, [r7, #30]
 316 00ce 234B     		ldr	r3, .L21+12
 317 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  71:.\main.c      ****             break;
 318              		.loc 1 71 0
 319 00d2 37E0     		b	.L1
 320              	.L7:
  72:.\main.c      ****             case 8:
  73:.\main.c      ****                 //usbPutString("robot_y:");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 8


  74:.\main.c      ****                 //usbPutString(string_packet);
  75:.\main.c      ****                 //usbPutString("\r\n");
  76:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 321              		.loc 1 76 0
 322 00d4 FA8B     		ldrh	r2, [r7, #30]
 323 00d6 214B     		ldr	r3, .L21+12
 324 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  77:.\main.c      ****             break;
 325              		.loc 1 77 0
 326 00da 33E0     		b	.L1
 327              	.L8:
  78:.\main.c      ****             case 10:
  79:.\main.c      ****                 //usbPutString("robot_dir:");
  80:.\main.c      ****                 //usbPutString(string_packet);
  81:.\main.c      ****                 //usbPutString("\r\n");
  82:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 328              		.loc 1 82 0
 329 00dc FA8B     		ldrh	r2, [r7, #30]
 330 00de 1F4B     		ldr	r3, .L21+12
 331 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  83:.\main.c      ****             break;
 332              		.loc 1 83 0
 333 00e2 2FE0     		b	.L1
 334              	.L9:
  84:.\main.c      ****             case 12:
  85:.\main.c      ****                 //usbPutString("g0_x:");
  86:.\main.c      ****                 //usbPutString(string_packet);
  87:.\main.c      ****                 //usbPutString("\r\n");
  88:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 335              		.loc 1 88 0
 336 00e4 FA8B     		ldrh	r2, [r7, #30]
 337 00e6 1D4B     		ldr	r3, .L21+12
 338 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  89:.\main.c      ****             break;
 339              		.loc 1 89 0
 340 00ea 2BE0     		b	.L1
 341              	.L10:
  90:.\main.c      ****             case 14:
  91:.\main.c      ****                 //usbPutString("g0_y:");
  92:.\main.c      ****                 //usbPutString(string_packet);
  93:.\main.c      ****                 //usbPutString("\r\n");
  94:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 342              		.loc 1 94 0
 343 00ec FA8B     		ldrh	r2, [r7, #30]
 344 00ee 1B4B     		ldr	r3, .L21+12
 345 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  95:.\main.c      ****             break;
 346              		.loc 1 95 0
 347 00f2 27E0     		b	.L1
 348              	.L11:
  96:.\main.c      ****             case 16:
  97:.\main.c      ****                 //usbPutString("g0_speed:");
  98:.\main.c      ****                 //usbPutString(string_packet);
  99:.\main.c      ****                 //usbPutString("\r\n");
 100:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 349              		.loc 1 100 0
 350 00f4 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 9


 351 00f6 194B     		ldr	r3, .L21+12
 352 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 101:.\main.c      ****             break;
 353              		.loc 1 101 0
 354 00fa 23E0     		b	.L1
 355              	.L12:
 102:.\main.c      ****             case 18:
 103:.\main.c      ****                 //usbPutString("g1_dir:");
 104:.\main.c      ****                 //usbPutString(string_packet);
 105:.\main.c      ****                 //usbPutString("\r\n");
 106:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 356              		.loc 1 106 0
 357 00fc FA8B     		ldrh	r2, [r7, #30]
 358 00fe 174B     		ldr	r3, .L21+12
 359 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 107:.\main.c      ****             break;
 360              		.loc 1 107 0
 361 0102 1FE0     		b	.L1
 362              	.L13:
 108:.\main.c      ****             case 20:
 109:.\main.c      ****                 //usbPutString("g1_x:");
 110:.\main.c      ****                 //usbPutString(string_packet);
 111:.\main.c      ****                 //usbPutString("\r\n");
 112:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 363              		.loc 1 112 0
 364 0104 FA8B     		ldrh	r2, [r7, #30]
 365 0106 154B     		ldr	r3, .L21+12
 366 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 113:.\main.c      ****             break;
 367              		.loc 1 113 0
 368 010a 1BE0     		b	.L1
 369              	.L14:
 114:.\main.c      ****             case 22:
 115:.\main.c      ****                 //usbPutString("g1_y:");
 116:.\main.c      ****                 //usbPutString(string_packet);
 117:.\main.c      ****                 //usbPutString("\r\n");
 118:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 370              		.loc 1 118 0
 371 010c FA8B     		ldrh	r2, [r7, #30]
 372 010e 134B     		ldr	r3, .L21+12
 373 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 119:.\main.c      ****             break;
 374              		.loc 1 119 0
 375 0112 17E0     		b	.L1
 376              	.L15:
 120:.\main.c      ****             case 24:
 121:.\main.c      ****                 //usbPutString("g1_speed:");
 122:.\main.c      ****                 //usbPutString(string_packet);
 123:.\main.c      ****                 //usbPutString("\r\n");
 124:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 377              		.loc 1 124 0
 378 0114 FA8B     		ldrh	r2, [r7, #30]
 379 0116 114B     		ldr	r3, .L21+12
 380 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 125:.\main.c      ****             break;
 381              		.loc 1 125 0
 382 011a 13E0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 10


 383              	.L16:
 126:.\main.c      ****             case 26:
 127:.\main.c      ****                 //usbPutString("g1_dir:");
 128:.\main.c      ****                 //usbPutString(string_packet);
 129:.\main.c      ****                 //usbPutString("\r\n");
 130:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 384              		.loc 1 130 0
 385 011c FA8B     		ldrh	r2, [r7, #30]
 386 011e 0F4B     		ldr	r3, .L21+12
 387 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 131:.\main.c      ****             break;
 388              		.loc 1 131 0
 389 0122 0FE0     		b	.L1
 390              	.L17:
 132:.\main.c      ****             case 28:
 133:.\main.c      ****                 //usbPutString("g2_x:");
 134:.\main.c      ****                 //usbPutString(string_packet);
 135:.\main.c      ****                 //usbPutString("\r\n");
 136:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 391              		.loc 1 136 0
 392 0124 FA8B     		ldrh	r2, [r7, #30]
 393 0126 0D4B     		ldr	r3, .L21+12
 394 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 137:.\main.c      ****             break;
 395              		.loc 1 137 0
 396 012a 0BE0     		b	.L1
 397              	.L18:
 138:.\main.c      ****             case 30:
 139:.\main.c      ****                 //usbPutString("g2_y:");
 140:.\main.c      ****                 //usbPutString(string_packet);
 141:.\main.c      ****                 //usbPutString("\r\n");
 142:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 398              		.loc 1 142 0
 399 012c FA8B     		ldrh	r2, [r7, #30]
 400 012e 0B4B     		ldr	r3, .L21+12
 401 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 143:.\main.c      ****             break;
 402              		.loc 1 143 0
 403 0132 07E0     		b	.L1
 404              	.L19:
 144:.\main.c      ****             case 32:
 145:.\main.c      ****                 //usbPutString("g1_speed:");
 146:.\main.c      ****                 //usbPutString(string_packet);
 147:.\main.c      ****                 //usbPutString("\r\n");
 148:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 405              		.loc 1 148 0
 406 0134 FA8B     		ldrh	r2, [r7, #30]
 407 0136 094B     		ldr	r3, .L21+12
 408 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 149:.\main.c      ****             break;
 409              		.loc 1 149 0
 410 013a 03E0     		b	.L1
 411              	.L20:
 150:.\main.c      ****             case 34:
 151:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 412              		.loc 1 151 0
 413 013c FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 11


 414 013e 074B     		ldr	r3, .L21+12
 415 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 152:.\main.c      ****                 //usbPutString("g2_dir:");
 153:.\main.c      ****                 //usbPutString(string_packet);
 154:.\main.c      ****                 //usbPutString("\r\n");
 155:.\main.c      ****                 
 156:.\main.c      ****             break;
 416              		.loc 1 156 0
 417 0142 00BF     		nop
 418              	.L1:
 419              	.LBE2:
 157:.\main.c      ****         }
 158:.\main.c      ****     }
 159:.\main.c      **** }
 420              		.loc 1 159 0
 421 0144 2437     		adds	r7, r7, #36
 422              		.cfi_def_cfa_offset 4
 423 0146 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0148 5DF8047B 		ldr	r7, [sp], #4
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 014c 7047     		bx	lr
 430              	.L22:
 431 014e 00BF     		.align	2
 432              	.L21:
 433 0150 00000000 		.word	flag_rx
 434 0154 00000000 		.word	packet
 435 0158 00000000 		.word	byteCount
 436 015c 00000000 		.word	buffer_state
 437              		.cfi_endproc
 438              	.LFE63:
 439              		.size	handle_rx_binary, .-handle_rx_binary
 440              		.section	.text.setSpeed,"ax",%progbits
 441              		.align	2
 442              		.global	setSpeed
 443              		.thumb
 444              		.thumb_func
 445              		.type	setSpeed, %function
 446              	setSpeed:
 447              	.LFB64:
 160:.\main.c      **** 
 161:.\main.c      **** void setSpeed(int right, int left){
 448              		.loc 1 161 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 0002 83B0     		sub	sp, sp, #12
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 12


 461 0008 3960     		str	r1, [r7]
 162:.\main.c      ****     leftSpeedLimit = right;
 462              		.loc 1 162 0
 463 000a 7B68     		ldr	r3, [r7, #4]
 464 000c 9AB2     		uxth	r2, r3
 465 000e 054B     		ldr	r3, .L24
 466 0010 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****     rightSpeedLimit = left;
 467              		.loc 1 163 0
 468 0012 3B68     		ldr	r3, [r7]
 469 0014 9AB2     		uxth	r2, r3
 470 0016 044B     		ldr	r3, .L24+4
 471 0018 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      **** }
 472              		.loc 1 164 0
 473 001a 0C37     		adds	r7, r7, #12
 474              		.cfi_def_cfa_offset 4
 475 001c BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 001e 5DF8047B 		ldr	r7, [sp], #4
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 0022 7047     		bx	lr
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0024 00000000 		.word	leftSpeedLimit
 486 0028 00000000 		.word	rightSpeedLimit
 487              		.cfi_endproc
 488              	.LFE64:
 489              		.size	setSpeed, .-setSpeed
 490              		.section	.text.brakeMotor,"ax",%progbits
 491              		.align	2
 492              		.global	brakeMotor
 493              		.thumb
 494              		.thumb_func
 495              		.type	brakeMotor, %function
 496              	brakeMotor:
 497              	.LFB65:
 165:.\main.c      **** 
 166:.\main.c      **** void brakeMotor(){
 498              		.loc 1 166 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 167:.\main.c      ****     setSpeed(0, 0);
 508              		.loc 1 167 0
 509 0004 0020     		movs	r0, #0
 510 0006 0021     		movs	r1, #0
 511 0008 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 13


 168:.\main.c      ****     PWM_1_WriteCompare(0);
 512              		.loc 1 168 0
 513 000c 0020     		movs	r0, #0
 514 000e FFF7FEFF 		bl	PWM_1_WriteCompare
 169:.\main.c      ****     PWM_2_WriteCompare(0);
 515              		.loc 1 169 0
 516 0012 0020     		movs	r0, #0
 517 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 170:.\main.c      ****     right_duty_cycle = 0;
 518              		.loc 1 170 0
 519 0018 034B     		ldr	r3, .L27
 520 001a 0022     		movs	r2, #0
 521 001c 1A80     		strh	r2, [r3]	@ movhi
 171:.\main.c      ****     left_duty_cycle = 0;
 522              		.loc 1 171 0
 523 001e 034B     		ldr	r3, .L27+4
 524 0020 0022     		movs	r2, #0
 525 0022 1A80     		strh	r2, [r3]	@ movhi
 172:.\main.c      **** }
 526              		.loc 1 172 0
 527 0024 80BD     		pop	{r7, pc}
 528              	.L28:
 529 0026 00BF     		.align	2
 530              	.L27:
 531 0028 00000000 		.word	right_duty_cycle
 532 002c 00000000 		.word	left_duty_cycle
 533              		.cfi_endproc
 534              	.LFE65:
 535              		.size	brakeMotor, .-brakeMotor
 536              		.section	.text.driveForwards,"ax",%progbits
 537              		.align	2
 538              		.global	driveForwards
 539              		.thumb
 540              		.thumb_func
 541              		.type	driveForwards, %function
 542              	driveForwards:
 543              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** void driveForwards()
 175:.\main.c      **** {
 544              		.loc 1 175 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 176:.\main.c      ****     setSpeed(20, 20);
 554              		.loc 1 176 0
 555 0004 1420     		movs	r0, #20
 556 0006 1421     		movs	r1, #20
 557 0008 FFF7FEFF 		bl	setSpeed
 177:.\main.c      **** }
 558              		.loc 1 177 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 14


 559 000c 80BD     		pop	{r7, pc}
 560              		.cfi_endproc
 561              	.LFE66:
 562              		.size	driveForwards, .-driveForwards
 563 000e 00BF     		.section	.text.turnLeft,"ax",%progbits
 564              		.align	2
 565              		.global	turnLeft
 566              		.thumb
 567              		.thumb_func
 568              		.type	turnLeft, %function
 569              	turnLeft:
 570              	.LFB67:
 178:.\main.c      **** 
 179:.\main.c      **** void turnLeft()
 180:.\main.c      **** {
 571              		.loc 1 180 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 181:.\main.c      ****     setSpeed(0,20);
 581              		.loc 1 181 0
 582 0004 0020     		movs	r0, #0
 583 0006 1421     		movs	r1, #20
 584 0008 FFF7FEFF 		bl	setSpeed
 182:.\main.c      **** }
 585              		.loc 1 182 0
 586 000c 80BD     		pop	{r7, pc}
 587              		.cfi_endproc
 588              	.LFE67:
 589              		.size	turnLeft, .-turnLeft
 590 000e 00BF     		.section	.text.turnRight,"ax",%progbits
 591              		.align	2
 592              		.global	turnRight
 593              		.thumb
 594              		.thumb_func
 595              		.type	turnRight, %function
 596              	turnRight:
 597              	.LFB68:
 183:.\main.c      **** 
 184:.\main.c      **** void turnRight()
 185:.\main.c      **** {
 598              		.loc 1 185 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 15


 186:.\main.c      ****     setSpeed(20,0);
 608              		.loc 1 186 0
 609 0004 1420     		movs	r0, #20
 610 0006 0021     		movs	r1, #0
 611 0008 FFF7FEFF 		bl	setSpeed
 187:.\main.c      **** }
 612              		.loc 1 187 0
 613 000c 80BD     		pop	{r7, pc}
 614              		.cfi_endproc
 615              	.LFE68:
 616              		.size	turnRight, .-turnRight
 617 000e 00BF     		.section	.text.initTurnLeft,"ax",%progbits
 618              		.align	2
 619              		.global	initTurnLeft
 620              		.thumb
 621              		.thumb_func
 622              		.type	initTurnLeft, %function
 623              	initTurnLeft:
 624              	.LFB69:
 188:.\main.c      **** 
 189:.\main.c      **** void initTurnLeft(){
 625              		.loc 1 189 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629 0000 80B5     		push	{r7, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 190:.\main.c      ****     Timer_2_Stop();
 635              		.loc 1 190 0
 636 0004 FFF7FEFF 		bl	Timer_2_Stop
 191:.\main.c      ****     brakeMotor();
 637              		.loc 1 191 0
 638 0008 FFF7FEFF 		bl	brakeMotor
 192:.\main.c      ****     movement_state = LTURN;
 639              		.loc 1 192 0
 640 000c 054B     		ldr	r3, .L33
 641 000e 0122     		movs	r2, #1
 642 0010 1A70     		strb	r2, [r3]
 193:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 643              		.loc 1 193 0
 644 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 645 0016 0346     		mov	r3, r0
 646 0018 1A46     		mov	r2, r3
 647 001a 034B     		ldr	r3, .L33+4
 648 001c 1A80     		strh	r2, [r3]	@ movhi
 194:.\main.c      ****     Timer_2_Start();
 649              		.loc 1 194 0
 650 001e FFF7FEFF 		bl	Timer_2_Start
 195:.\main.c      **** }
 651              		.loc 1 195 0
 652 0022 80BD     		pop	{r7, pc}
 653              	.L34:
 654              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 16


 655              	.L33:
 656 0024 00000000 		.word	movement_state
 657 0028 00000000 		.word	start_turn_count
 658              		.cfi_endproc
 659              	.LFE69:
 660              		.size	initTurnLeft, .-initTurnLeft
 661              		.section	.text.initTurnRight,"ax",%progbits
 662              		.align	2
 663              		.global	initTurnRight
 664              		.thumb
 665              		.thumb_func
 666              		.type	initTurnRight, %function
 667              	initTurnRight:
 668              	.LFB70:
 196:.\main.c      **** 
 197:.\main.c      **** void initTurnRight(){
 669              		.loc 1 197 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673 0000 80B5     		push	{r7, lr}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 198:.\main.c      ****     Timer_2_Stop();
 679              		.loc 1 198 0
 680 0004 FFF7FEFF 		bl	Timer_2_Stop
 199:.\main.c      ****     brakeMotor();
 681              		.loc 1 199 0
 682 0008 FFF7FEFF 		bl	brakeMotor
 200:.\main.c      ****     movement_state = RTURN;
 683              		.loc 1 200 0
 684 000c 054B     		ldr	r3, .L36
 685 000e 0222     		movs	r2, #2
 686 0010 1A70     		strb	r2, [r3]
 201:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 687              		.loc 1 201 0
 688 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 689 0016 0346     		mov	r3, r0
 690 0018 1A46     		mov	r2, r3
 691 001a 034B     		ldr	r3, .L36+4
 692 001c 1A80     		strh	r2, [r3]	@ movhi
 202:.\main.c      ****     Timer_2_Start();
 693              		.loc 1 202 0
 694 001e FFF7FEFF 		bl	Timer_2_Start
 203:.\main.c      **** }
 695              		.loc 1 203 0
 696 0022 80BD     		pop	{r7, pc}
 697              	.L37:
 698              		.align	2
 699              	.L36:
 700 0024 00000000 		.word	movement_state
 701 0028 00000000 		.word	start_turn_count
 702              		.cfi_endproc
 703              	.LFE70:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 17


 704              		.size	initTurnRight, .-initTurnRight
 705              		.section	.text.initForward,"ax",%progbits
 706              		.align	2
 707              		.global	initForward
 708              		.thumb
 709              		.thumb_func
 710              		.type	initForward, %function
 711              	initForward:
 712              	.LFB71:
 204:.\main.c      **** 
 205:.\main.c      **** void initForward(){
 713              		.loc 1 205 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 206:.\main.c      ****     brakeMotor();
 723              		.loc 1 206 0
 724 0004 FFF7FEFF 		bl	brakeMotor
 207:.\main.c      ****     movement_state = DRIVE;
 725              		.loc 1 207 0
 726 0008 014B     		ldr	r3, .L39
 727 000a 0022     		movs	r2, #0
 728 000c 1A70     		strb	r2, [r3]
 208:.\main.c      **** }
 729              		.loc 1 208 0
 730 000e 80BD     		pop	{r7, pc}
 731              	.L40:
 732              		.align	2
 733              	.L39:
 734 0010 00000000 		.word	movement_state
 735              		.cfi_endproc
 736              	.LFE71:
 737              		.size	initForward, .-initForward
 738              		.section	.text.initBrake,"ax",%progbits
 739              		.align	2
 740              		.global	initBrake
 741              		.thumb
 742              		.thumb_func
 743              		.type	initBrake, %function
 744              	initBrake:
 745              	.LFB72:
 209:.\main.c      **** 
 210:.\main.c      **** void initBrake(){
 746              		.loc 1 210 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751 0000 80B4     		push	{r7}
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 7, -4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 18


 754 0002 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 211:.\main.c      ****     movement_state = STOPPED;
 756              		.loc 1 211 0
 757 0004 034B     		ldr	r3, .L42
 758 0006 0322     		movs	r2, #3
 759 0008 1A70     		strb	r2, [r3]
 212:.\main.c      **** }
 760              		.loc 1 212 0
 761 000a BD46     		mov	sp, r7
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 000c 5DF8047B 		ldr	r7, [sp], #4
 765              		.cfi_restore 7
 766              		.cfi_def_cfa_offset 0
 767 0010 7047     		bx	lr
 768              	.L43:
 769 0012 00BF     		.align	2
 770              	.L42:
 771 0014 00000000 		.word	movement_state
 772              		.cfi_endproc
 773              	.LFE72:
 774              		.size	initBrake, .-initBrake
 775              		.section	.text.reverseDirection,"ax",%progbits
 776              		.align	2
 777              		.global	reverseDirection
 778              		.thumb
 779              		.thumb_func
 780              		.type	reverseDirection, %function
 781              	reverseDirection:
 782              	.LFB73:
 213:.\main.c      **** 
 214:.\main.c      **** void reverseDirection()
 215:.\main.c      **** {
 783              		.loc 1 215 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787 0000 80B5     		push	{r7, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 00AF     		add	r7, sp, #0
 792              		.cfi_def_cfa_register 7
 216:.\main.c      ****     direction = !direction;
 793              		.loc 1 216 0
 794 0004 0A4B     		ldr	r3, .L45
 795 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 796 0008 002B     		cmp	r3, #0
 797 000a 0CBF     		ite	eq
 798 000c 0123     		moveq	r3, #1
 799 000e 0023     		movne	r3, #0
 800 0010 DBB2     		uxtb	r3, r3
 801 0012 1A46     		mov	r2, r3
 802 0014 064B     		ldr	r3, .L45
 803 0016 1A70     		strb	r2, [r3]
 217:.\main.c      ****     M1_IN2_Write(direction);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 19


 804              		.loc 1 217 0
 805 0018 054B     		ldr	r3, .L45
 806 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 807 001c 1846     		mov	r0, r3
 808 001e FFF7FEFF 		bl	M1_IN2_Write
 218:.\main.c      ****     M2_IN2_Write(direction);
 809              		.loc 1 218 0
 810 0022 034B     		ldr	r3, .L45
 811 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 0026 1846     		mov	r0, r3
 813 0028 FFF7FEFF 		bl	M2_IN2_Write
 219:.\main.c      **** }
 814              		.loc 1 219 0
 815 002c 80BD     		pop	{r7, pc}
 816              	.L46:
 817 002e 00BF     		.align	2
 818              	.L45:
 819 0030 00000000 		.word	direction
 820              		.cfi_endproc
 821              	.LFE73:
 822              		.size	reverseDirection, .-reverseDirection
 823              		.section	.text.rxInt,"ax",%progbits
 824              		.align	2
 825              		.global	rxInt
 826              		.thumb
 827              		.thumb_func
 828              		.type	rxInt, %function
 829              	rxInt:
 830              	.LFB74:
 220:.\main.c      **** 
 221:.\main.c      **** //Binary RF Data
 222:.\main.c      **** CY_ISR(rxInt){
 831              		.loc 1 222 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 8
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835 0000 B0B5     		push	{r4, r5, r7, lr}
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 4, -16
 838              		.cfi_offset 5, -12
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
 841 0002 82B0     		sub	sp, sp, #8
 842              		.cfi_def_cfa_offset 24
 843 0004 00AF     		add	r7, sp, #0
 844              		.cfi_def_cfa_register 7
 223:.\main.c      ****     char rf_char = UART_GetChar();
 845              		.loc 1 223 0
 846 0006 FFF7FEFF 		bl	UART_GetChar
 847 000a 0346     		mov	r3, r0
 848 000c FB71     		strb	r3, [r7, #7]
 224:.\main.c      ****     if(rf_char == SOP){
 849              		.loc 1 224 0
 850 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 851 0010 AA2B     		cmp	r3, #170
 852 0012 1CD1     		bne	.L48
 225:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 20


 226:.\main.c      ****             if(byteCount == 34)
 853              		.loc 1 226 0
 854 0014 1B4B     		ldr	r3, .L52
 855 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 856 0018 222B     		cmp	r3, #34
 857 001a 11D1     		bne	.L49
 227:.\main.c      ****             {
 228:.\main.c      ****                 system_state = buffer_state;
 858              		.loc 1 228 0
 859 001c 1A4B     		ldr	r3, .L52+4
 860 001e 1B4A     		ldr	r2, .L52+8
 861 0020 1568     		ldr	r5, [r2]	@ unaligned
 862 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 863 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 864 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 865 0028 1D60     		str	r5, [r3]	@ unaligned
 866 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 867 002c 9860     		str	r0, [r3, #8]	@ unaligned
 868 002e D960     		str	r1, [r3, #12]	@ unaligned
 869 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 870 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 871 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 872 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 873 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 874 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 875 003c 9861     		str	r0, [r3, #24]	@ unaligned
 876 003e D961     		str	r1, [r3, #28]	@ unaligned
 877              	.L49:
 229:.\main.c      ****             }
 230:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 878              		.loc 1 230 0
 879 0040 104B     		ldr	r3, .L52
 880 0042 0222     		movs	r2, #2
 881 0044 1A70     		strb	r2, [r3]
 231:.\main.c      ****             flag_rx = 0;
 882              		.loc 1 231 0
 883 0046 124B     		ldr	r3, .L52+12
 884 0048 0022     		movs	r2, #0
 885 004a 1A70     		strb	r2, [r3]
 886 004c 16E0     		b	.L47
 887              	.L48:
 232:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 233:.\main.c      ****         }
 234:.\main.c      ****         else
 235:.\main.c      ****         {
 236:.\main.c      ****             packet[byteCount % 2] = rf_char;
 888              		.loc 1 236 0
 889 004e 0D4B     		ldr	r3, .L52
 890 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 891 0052 03F00103 		and	r3, r3, #1
 892 0056 0F49     		ldr	r1, .L52+16
 893 0058 FA79     		ldrb	r2, [r7, #7]
 894 005a CA54     		strb	r2, [r1, r3]
 237:.\main.c      ****            
 238:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 895              		.loc 1 238 0
 896 005c 094B     		ldr	r3, .L52
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 21


 897 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 898 0060 03F00103 		and	r3, r3, #1
 899 0064 DBB2     		uxtb	r3, r3
 900 0066 002B     		cmp	r3, #0
 901 0068 02D0     		beq	.L51
 239:.\main.c      ****             {
 240:.\main.c      ****                 flag_rx = 1;
 902              		.loc 1 240 0
 903 006a 094B     		ldr	r3, .L52+12
 904 006c 0122     		movs	r2, #1
 905 006e 1A70     		strb	r2, [r3]
 906              	.L51:
 241:.\main.c      ****             }
 242:.\main.c      ****             byteCount = (byteCount + 1);
 907              		.loc 1 242 0
 908 0070 044B     		ldr	r3, .L52
 909 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910 0074 0133     		adds	r3, r3, #1
 911 0076 DAB2     		uxtb	r2, r3
 912 0078 024B     		ldr	r3, .L52
 913 007a 1A70     		strb	r2, [r3]
 914              	.L47:
 243:.\main.c      ****         }
 244:.\main.c      **** }
 915              		.loc 1 244 0
 916 007c 0837     		adds	r7, r7, #8
 917              		.cfi_def_cfa_offset 16
 918 007e BD46     		mov	sp, r7
 919              		.cfi_def_cfa_register 13
 920              		@ sp needed
 921 0080 B0BD     		pop	{r4, r5, r7, pc}
 922              	.L53:
 923 0082 00BF     		.align	2
 924              	.L52:
 925 0084 00000000 		.word	byteCount
 926 0088 00000000 		.word	system_state
 927 008c 00000000 		.word	buffer_state
 928 0090 00000000 		.word	flag_rx
 929 0094 00000000 		.word	packet
 930              		.cfi_endproc
 931              	.LFE74:
 932              		.size	rxInt, .-rxInt
 933              		.section	.text.BT_rxInt,"ax",%progbits
 934              		.align	2
 935              		.global	BT_rxInt
 936              		.thumb
 937              		.thumb_func
 938              		.type	BT_rxInt, %function
 939              	BT_rxInt:
 940              	.LFB75:
 245:.\main.c      **** 
 246:.\main.c      **** CY_ISR(BT_rxInt)
 247:.\main.c      **** {
 941              		.loc 1 247 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 8
 944              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 22


 945 0000 80B5     		push	{r7, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 7, -8
 948              		.cfi_offset 14, -4
 949 0002 82B0     		sub	sp, sp, #8
 950              		.cfi_def_cfa_offset 16
 951 0004 00AF     		add	r7, sp, #0
 952              		.cfi_def_cfa_register 7
 248:.\main.c      ****     char rf_char = UART_GetChar();
 953              		.loc 1 248 0
 954 0006 FFF7FEFF 		bl	UART_GetChar
 955 000a 0346     		mov	r3, r0
 956 000c FB71     		strb	r3, [r7, #7]
 249:.\main.c      ****     switch(rf_char){
 957              		.loc 1 249 0
 958 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 959 0010 613B     		subs	r3, r3, #97
 960 0012 162B     		cmp	r3, #22
 961 0014 3FD8     		bhi	.L54
 962 0016 01A2     		adr	r2, .L57
 963 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 964              		.p2align 2
 965              	.L57:
 966 001c 79000000 		.word	.L56+1
 967 0020 97000000 		.word	.L54+1
 968 0024 97000000 		.word	.L54+1
 969 0028 8B000000 		.word	.L58+1
 970 002c 97000000 		.word	.L54+1
 971 0030 91000000 		.word	.L59+1
 972 0034 97000000 		.word	.L54+1
 973 0038 97000000 		.word	.L54+1
 974 003c 97000000 		.word	.L54+1
 975 0040 97000000 		.word	.L54+1
 976 0044 97000000 		.word	.L54+1
 977 0048 97000000 		.word	.L54+1
 978 004c 97000000 		.word	.L54+1
 979 0050 97000000 		.word	.L54+1
 980 0054 97000000 		.word	.L54+1
 981 0058 97000000 		.word	.L54+1
 982 005c 97000000 		.word	.L54+1
 983 0060 97000000 		.word	.L54+1
 984 0064 85000000 		.word	.L60+1
 985 0068 97000000 		.word	.L54+1
 986 006c 97000000 		.word	.L54+1
 987 0070 97000000 		.word	.L54+1
 988 0074 7F000000 		.word	.L61+1
 989              		.p2align 1
 990              	.L56:
 250:.\main.c      ****     case 'a':
 251:.\main.c      ****         initTurnLeft();
 991              		.loc 1 251 0
 992 0078 FFF7FEFF 		bl	initTurnLeft
 252:.\main.c      ****         break;
 993              		.loc 1 252 0
 994 007c 0BE0     		b	.L54
 995              	.L61:
 253:.\main.c      ****     case 'w':
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 23


 254:.\main.c      ****         initForward();
 996              		.loc 1 254 0
 997 007e FFF7FEFF 		bl	initForward
 255:.\main.c      ****         break;
 998              		.loc 1 255 0
 999 0082 08E0     		b	.L54
 1000              	.L60:
 256:.\main.c      ****     case 's': 
 257:.\main.c      ****         reverseDirection();
 1001              		.loc 1 257 0
 1002 0084 FFF7FEFF 		bl	reverseDirection
 258:.\main.c      ****         break;
 1003              		.loc 1 258 0
 1004 0088 05E0     		b	.L54
 1005              	.L58:
 259:.\main.c      ****     case 'd':
 260:.\main.c      ****         initTurnRight();
 1006              		.loc 1 260 0
 1007 008a FFF7FEFF 		bl	initTurnRight
 261:.\main.c      ****         break;
 1008              		.loc 1 261 0
 1009 008e 02E0     		b	.L54
 1010              	.L59:
 262:.\main.c      ****     case 'f':
 263:.\main.c      ****         initBrake();
 1011              		.loc 1 263 0
 1012 0090 FFF7FEFF 		bl	initBrake
 264:.\main.c      ****         break;
 1013              		.loc 1 264 0
 1014 0094 00BF     		nop
 1015              	.L54:
 265:.\main.c      ****     }
 266:.\main.c      **** }
 1016              		.loc 1 266 0
 1017 0096 0837     		adds	r7, r7, #8
 1018              		.cfi_def_cfa_offset 8
 1019 0098 BD46     		mov	sp, r7
 1020              		.cfi_def_cfa_register 13
 1021              		@ sp needed
 1022 009a 80BD     		pop	{r7, pc}
 1023              		.cfi_endproc
 1024              	.LFE75:
 1025              		.size	BT_rxInt, .-BT_rxInt
 1026              		.section	.text.BT_txInt,"ax",%progbits
 1027              		.align	2
 1028              		.global	BT_txInt
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	BT_txInt, %function
 1032              	BT_txInt:
 1033              	.LFB76:
 267:.\main.c      **** 
 268:.\main.c      **** //BT
 269:.\main.c      **** CY_ISR(BT_txInt)
 270:.\main.c      **** {
 1034              		.loc 1 270 0
 1035              		.cfi_startproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 24


 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 1039 0000 80B4     		push	{r7}
 1040              		.cfi_def_cfa_offset 4
 1041              		.cfi_offset 7, -4
 1042 0002 00AF     		add	r7, sp, #0
 1043              		.cfi_def_cfa_register 7
 271:.\main.c      ****     
 272:.\main.c      **** }
 1044              		.loc 1 272 0
 1045 0004 BD46     		mov	sp, r7
 1046              		.cfi_def_cfa_register 13
 1047              		@ sp needed
 1048 0006 5DF8047B 		ldr	r7, [sp], #4
 1049              		.cfi_restore 7
 1050              		.cfi_def_cfa_offset 0
 1051 000a 7047     		bx	lr
 1052              		.cfi_endproc
 1053              	.LFE76:
 1054              		.size	BT_txInt, .-BT_txInt
 1055              		.section	.text.adc_isr,"ax",%progbits
 1056              		.align	2
 1057              		.global	adc_isr
 1058              		.thumb
 1059              		.thumb_func
 1060              		.type	adc_isr, %function
 1061              	adc_isr:
 1062              	.LFB77:
 273:.\main.c      **** 
 274:.\main.c      **** //ADC:
 275:.\main.c      **** CY_ISR (adc_isr)
 276:.\main.c      **** {
 1063              		.loc 1 276 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 80B5     		push	{r7, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 00AF     		add	r7, sp, #0
 1072              		.cfi_def_cfa_register 7
 277:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 278:.\main.c      ****     adc_result = ADC_GetResult16();
 1073              		.loc 1 278 0
 1074 0004 FFF7FEFF 		bl	ADC_GetResult16
 1075 0008 0346     		mov	r3, r0
 1076 000a 1A46     		mov	r2, r3
 1077 000c 044B     		ldr	r3, .L64
 1078 000e 1A80     		strh	r2, [r3]	@ movhi
 279:.\main.c      ****     flag_receive_ADC = 1;
 1079              		.loc 1 279 0
 1080 0010 044B     		ldr	r3, .L64+4
 1081 0012 0122     		movs	r2, #1
 1082 0014 1A70     		strb	r2, [r3]
 280:.\main.c      ****     flag_print_rf = 1;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 25


 1083              		.loc 1 280 0
 1084 0016 044B     		ldr	r3, .L64+8
 1085 0018 0122     		movs	r2, #1
 1086 001a 1A70     		strb	r2, [r3]
 281:.\main.c      ****     //LED_Write(~LED_Read());
 282:.\main.c      **** }
 1087              		.loc 1 282 0
 1088 001c 80BD     		pop	{r7, pc}
 1089              	.L65:
 1090 001e 00BF     		.align	2
 1091              	.L64:
 1092 0020 00000000 		.word	adc_result
 1093 0024 00000000 		.word	flag_receive_ADC
 1094 0028 00000000 		.word	flag_print_rf
 1095              		.cfi_endproc
 1096              	.LFE77:
 1097              		.size	adc_isr, .-adc_isr
 1098              		.section	.text.isr_quad1,"ax",%progbits
 1099              		.align	2
 1100              		.global	isr_quad1
 1101              		.thumb
 1102              		.thumb_func
 1103              		.type	isr_quad1, %function
 1104              	isr_quad1:
 1105              	.LFB78:
 283:.\main.c      **** 
 284:.\main.c      **** CY_ISR (isr_quad1)
 285:.\main.c      **** {
 1106              		.loc 1 285 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110 0000 80B5     		push	{r7, lr}
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 7, -8
 1113              		.cfi_offset 14, -4
 1114 0002 00AF     		add	r7, sp, #0
 1115              		.cfi_def_cfa_register 7
 286:.\main.c      ****     //LED_Write(~LED_Read());
 287:.\main.c      ****     last_quad_count1 = quad_count1;
 1116              		.loc 1 287 0
 1117 0004 244B     		ldr	r3, .L68
 1118 0006 1A88     		ldrh	r2, [r3]
 1119 0008 244B     		ldr	r3, .L68+4
 1120 000a 1A80     		strh	r2, [r3]	@ movhi
 288:.\main.c      ****     last_quad_count2 = quad_count2;
 1121              		.loc 1 288 0
 1122 000c 244B     		ldr	r3, .L68+8
 1123 000e 1A88     		ldrh	r2, [r3]
 1124 0010 244B     		ldr	r3, .L68+12
 1125 0012 1A80     		strh	r2, [r3]	@ movhi
 289:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1126              		.loc 1 289 0
 1127 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1128 0018 0346     		mov	r3, r0
 1129 001a 1A46     		mov	r2, r3
 1130 001c 1E4B     		ldr	r3, .L68
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 26


 1131 001e 1A80     		strh	r2, [r3]	@ movhi
 290:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1132              		.loc 1 290 0
 1133 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1134 0024 0346     		mov	r3, r0
 1135 0026 1A46     		mov	r2, r3
 1136 0028 1D4B     		ldr	r3, .L68+8
 1137 002a 1A80     		strh	r2, [r3]	@ movhi
 291:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1138              		.loc 1 291 0
 1139 002c 1A4B     		ldr	r3, .L68
 1140 002e 1B88     		ldrh	r3, [r3]
 1141 0030 9AB2     		uxth	r2, r3
 1142 0032 1A4B     		ldr	r3, .L68+4
 1143 0034 1B88     		ldrh	r3, [r3]
 1144 0036 9BB2     		uxth	r3, r3
 1145 0038 D31A     		subs	r3, r2, r3
 1146 003a 9BB2     		uxth	r3, r3
 1147 003c 9AB2     		uxth	r2, r3
 1148 003e 1A4B     		ldr	r3, .L68+16
 1149 0040 1A80     		strh	r2, [r3]	@ movhi
 292:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1150              		.loc 1 292 0
 1151 0042 174B     		ldr	r3, .L68+8
 1152 0044 1B88     		ldrh	r3, [r3]
 1153 0046 9AB2     		uxth	r2, r3
 1154 0048 164B     		ldr	r3, .L68+12
 1155 004a 1B88     		ldrh	r3, [r3]
 1156 004c 9BB2     		uxth	r3, r3
 1157 004e D31A     		subs	r3, r2, r3
 1158 0050 9BB2     		uxth	r3, r3
 1159 0052 9AB2     		uxth	r2, r3
 1160 0054 154B     		ldr	r3, .L68+20
 1161 0056 1A80     		strh	r2, [r3]	@ movhi
 293:.\main.c      ****     
 294:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1162              		.loc 1 294 0
 1163 0058 0F4B     		ldr	r3, .L68
 1164 005a 1B88     		ldrh	r3, [r3]
 1165 005c 1BB2     		sxth	r3, r3
 1166 005e 40F6B832 		movw	r2, #3000
 1167 0062 9342     		cmp	r3, r2
 1168 0064 13DD     		ble	.L67
 1169              		.loc 1 294 0 is_stmt 0 discriminator 1
 1170 0066 124B     		ldr	r3, .L68+24
 1171 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1172 006a 012B     		cmp	r3, #1
 1173 006c 0FD0     		beq	.L67
 1174              		.loc 1 294 0 discriminator 2
 1175 006e 104B     		ldr	r3, .L68+24
 1176 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1177 0072 022B     		cmp	r3, #2
 1178 0074 0BD0     		beq	.L67
 295:.\main.c      ****     {
 296:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1179              		.loc 1 296 0 is_stmt 1
 1180 0076 0020     		movs	r0, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 27


 1181 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 297:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1182              		.loc 1 297 0
 1183 007c 0020     		movs	r0, #0
 1184 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 298:.\main.c      ****         quad_count1 = 0;
 1185              		.loc 1 298 0
 1186 0082 054B     		ldr	r3, .L68
 1187 0084 0022     		movs	r2, #0
 1188 0086 1A80     		strh	r2, [r3]	@ movhi
 299:.\main.c      ****         quad_count2 = 0;
 1189              		.loc 1 299 0
 1190 0088 054B     		ldr	r3, .L68+8
 1191 008a 0022     		movs	r2, #0
 1192 008c 1A80     		strh	r2, [r3]	@ movhi
 1193              	.L67:
 300:.\main.c      ****     }
 301:.\main.c      **** 
 302:.\main.c      ****     flag_calc_wheelspeed = 1;
 1194              		.loc 1 302 0
 1195 008e 094B     		ldr	r3, .L68+28
 1196 0090 0122     		movs	r2, #1
 1197 0092 1A70     		strb	r2, [r3]
 303:.\main.c      **** }
 1198              		.loc 1 303 0
 1199 0094 80BD     		pop	{r7, pc}
 1200              	.L69:
 1201 0096 00BF     		.align	2
 1202              	.L68:
 1203 0098 00000000 		.word	quad_count1
 1204 009c 00000000 		.word	last_quad_count1
 1205 00a0 00000000 		.word	quad_count2
 1206 00a4 00000000 		.word	last_quad_count2
 1207 00a8 00000000 		.word	quad_diff1
 1208 00ac 00000000 		.word	quad_diff2
 1209 00b0 00000000 		.word	movement_state
 1210 00b4 00000000 		.word	flag_calc_wheelspeed
 1211              		.cfi_endproc
 1212              	.LFE78:
 1213              		.size	isr_quad1, .-isr_quad1
 1214              		.section	.text.isr_turn_timer,"ax",%progbits
 1215              		.align	2
 1216              		.global	isr_turn_timer
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	isr_turn_timer, %function
 1220              	isr_turn_timer:
 1221              	.LFB79:
 304:.\main.c      **** 
 305:.\main.c      **** CY_ISR(isr_turn_timer)
 306:.\main.c      **** {
 1222              		.loc 1 306 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 1, uses_anonymous_args = 0
 1226 0000 80B5     		push	{r7, lr}
 1227              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 28


 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 00AF     		add	r7, sp, #0
 1231              		.cfi_def_cfa_register 7
 307:.\main.c      ****     if(movement_state == LTURN)
 1232              		.loc 1 307 0
 1233 0004 164B     		ldr	r3, .L74
 1234 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1235 0008 012B     		cmp	r3, #1
 1236 000a 12D1     		bne	.L71
 308:.\main.c      ****     {
 309:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1237              		.loc 1 309 0
 1238 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1239 0010 0346     		mov	r3, r0
 1240 0012 1A46     		mov	r2, r3
 1241 0014 134B     		ldr	r3, .L74+4
 1242 0016 1B88     		ldrh	r3, [r3]
 1243 0018 1BB2     		sxth	r3, r3
 1244 001a D31A     		subs	r3, r2, r3
 1245 001c 002B     		cmp	r3, #0
 1246 001e B8BF     		it	lt
 1247 0020 5B42     		rsblt	r3, r3, #0
 1248 0022 CF2B     		cmp	r3, #207
 1249 0024 1BDD     		ble	.L70
 310:.\main.c      ****         {
 311:.\main.c      ****             movement_state = STOPPED;
 1250              		.loc 1 311 0
 1251 0026 0E4B     		ldr	r3, .L74
 1252 0028 0322     		movs	r2, #3
 1253 002a 1A70     		strb	r2, [r3]
 312:.\main.c      ****             Timer_2_Stop();
 1254              		.loc 1 312 0
 1255 002c FFF7FEFF 		bl	Timer_2_Stop
 1256 0030 15E0     		b	.L70
 1257              	.L71:
 313:.\main.c      ****         }
 314:.\main.c      ****     }
 315:.\main.c      ****     else if (movement_state == RTURN)
 1258              		.loc 1 315 0
 1259 0032 0B4B     		ldr	r3, .L74
 1260 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 0036 022B     		cmp	r3, #2
 1262 0038 11D1     		bne	.L70
 316:.\main.c      ****     {
 317:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1263              		.loc 1 317 0
 1264 003a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1265 003e 0346     		mov	r3, r0
 1266 0040 1A46     		mov	r2, r3
 1267 0042 084B     		ldr	r3, .L74+4
 1268 0044 1B88     		ldrh	r3, [r3]
 1269 0046 1BB2     		sxth	r3, r3
 1270 0048 D31A     		subs	r3, r2, r3
 1271 004a 002B     		cmp	r3, #0
 1272 004c B8BF     		it	lt
 1273 004e 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 29


 1274 0050 CF2B     		cmp	r3, #207
 1275 0052 04DD     		ble	.L70
 318:.\main.c      ****         {
 319:.\main.c      ****             movement_state = STOPPED;
 1276              		.loc 1 319 0
 1277 0054 024B     		ldr	r3, .L74
 1278 0056 0322     		movs	r2, #3
 1279 0058 1A70     		strb	r2, [r3]
 320:.\main.c      ****             Timer_2_Stop();
 1280              		.loc 1 320 0
 1281 005a FFF7FEFF 		bl	Timer_2_Stop
 1282              	.L70:
 321:.\main.c      ****         }
 322:.\main.c      ****     }
 323:.\main.c      **** }
 1283              		.loc 1 323 0
 1284 005e 80BD     		pop	{r7, pc}
 1285              	.L75:
 1286              		.align	2
 1287              	.L74:
 1288 0060 00000000 		.word	movement_state
 1289 0064 00000000 		.word	start_turn_count
 1290              		.cfi_endproc
 1291              	.LFE79:
 1292              		.size	isr_turn_timer, .-isr_turn_timer
 1293              		.section	.text.Stop_on_line,"ax",%progbits
 1294              		.align	2
 1295              		.global	Stop_on_line
 1296              		.thumb
 1297              		.thumb_func
 1298              		.type	Stop_on_line, %function
 1299              	Stop_on_line:
 1300              	.LFB80:
 324:.\main.c      **** 
 325:.\main.c      **** 
 326:.\main.c      **** CY_ISR (Stop_on_line)
 327:.\main.c      **** {
 1301              		.loc 1 327 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 1, uses_anonymous_args = 0
 1305 0000 80B5     		push	{r7, lr}
 1306              		.cfi_def_cfa_offset 8
 1307              		.cfi_offset 7, -8
 1308              		.cfi_offset 14, -4
 1309 0002 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 328:.\main.c      ****     //movement_state = STOPPED;
 329:.\main.c      ****     if(movement_state != DRIVE) return;
 1311              		.loc 1 329 0
 1312 0004 034B     		ldr	r3, .L79
 1313 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 0008 002B     		cmp	r3, #0
 1315 000a 00D0     		beq	.L77
 1316 000c 01E0     		b	.L76
 1317              	.L77:
 330:.\main.c      ****     initTurnLeft();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 30


 1318              		.loc 1 330 0
 1319 000e FFF7FEFF 		bl	initTurnLeft
 1320              	.L76:
 331:.\main.c      **** }
 1321              		.loc 1 331 0
 1322 0012 80BD     		pop	{r7, pc}
 1323              	.L80:
 1324              		.align	2
 1325              	.L79:
 1326 0014 00000000 		.word	movement_state
 1327              		.cfi_endproc
 1328              	.LFE80:
 1329              		.size	Stop_on_line, .-Stop_on_line
 1330              		.section	.rodata
 1331              		.align	2
 1332              	.LC0:
 1333 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1333      74696E67 
 1333      20726F62 
 1333      6F74210D 
 1333      0A00
 1334              		.section	.text.button,"ax",%progbits
 1335              		.align	2
 1336              		.global	button
 1337              		.thumb
 1338              		.thumb_func
 1339              		.type	button, %function
 1340              	button:
 1341              	.LFB81:
 332:.\main.c      **** 
 333:.\main.c      **** CY_ISR (button)
 334:.\main.c      **** {
 1342              		.loc 1 334 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346 0000 80B5     		push	{r7, lr}
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 7, -8
 1349              		.cfi_offset 14, -4
 1350 0002 00AF     		add	r7, sp, #0
 1351              		.cfi_def_cfa_register 7
 335:.\main.c      ****     if(BT_ENABLED)
 336:.\main.c      ****     {
 337:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1352              		.loc 1 337 0
 1353 0004 0348     		ldr	r0, .L82
 1354 0006 FFF7FEFF 		bl	UART_PutString
 338:.\main.c      ****     }
 339:.\main.c      ****     movement_state = DRIVE;
 1355              		.loc 1 339 0
 1356 000a 034B     		ldr	r3, .L82+4
 1357 000c 0022     		movs	r2, #0
 1358 000e 1A70     		strb	r2, [r3]
 340:.\main.c      **** }
 1359              		.loc 1 340 0
 1360 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 31


 1361              	.L83:
 1362 0012 00BF     		.align	2
 1363              	.L82:
 1364 0014 00000000 		.word	.LC0
 1365 0018 00000000 		.word	movement_state
 1366              		.cfi_endproc
 1367              	.LFE81:
 1368              		.size	button, .-button
 1369              		.section	.text.isr_adcTimer,"ax",%progbits
 1370              		.align	2
 1371              		.global	isr_adcTimer
 1372              		.thumb
 1373              		.thumb_func
 1374              		.type	isr_adcTimer, %function
 1375              	isr_adcTimer:
 1376              	.LFB82:
 341:.\main.c      **** 
 342:.\main.c      **** CY_ISR(isr_adcTimer)
 343:.\main.c      **** {
 1377              		.loc 1 343 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 1, uses_anonymous_args = 0
 1381 0000 80B5     		push	{r7, lr}
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 7, -8
 1384              		.cfi_offset 14, -4
 1385 0002 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 344:.\main.c      ****     ADC_StartConvert();
 1387              		.loc 1 344 0
 1388 0004 FFF7FEFF 		bl	ADC_StartConvert
 345:.\main.c      **** }
 1389              		.loc 1 345 0
 1390 0008 80BD     		pop	{r7, pc}
 1391              		.cfi_endproc
 1392              	.LFE82:
 1393              		.size	isr_adcTimer, .-isr_adcTimer
 1394 000a 00BF     		.section	.rodata
 1395 0012 0000     		.align	2
 1396              	.LC1:
 1397 0014 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
 1397      20636F75 
 1397      6E742031 
 1397      2069733A 
 1397      2025640A 
 1398 002a 0000     		.align	2
 1399              	.LC2:
 1400 002c 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 1400      20636F75 
 1400      6E742032 
 1400      2069733A 
 1400      2025640A 
 1401              		.global	__aeabi_i2d
 1402              		.global	__aeabi_dmul
 1403              		.global	__aeabi_d2iz
 1404              		.section	.text.Quad_Dec_response,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 32


 1405              		.align	2
 1406              		.global	Quad_Dec_response
 1407              		.thumb
 1408              		.thumb_func
 1409              		.type	Quad_Dec_response, %function
 1410              	Quad_Dec_response:
 1411              	.LFB83:
 346:.\main.c      **** 
 347:.\main.c      **** void Quad_Dec_response()
 348:.\main.c      **** {
 1412              		.loc 1 348 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 144
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416 0000 B0B5     		push	{r4, r5, r7, lr}
 1417              		.cfi_def_cfa_offset 16
 1418              		.cfi_offset 4, -16
 1419              		.cfi_offset 5, -12
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 A4B0     		sub	sp, sp, #144
 1423              		.cfi_def_cfa_offset 160
 1424 0004 00AF     		add	r7, sp, #0
 1425              		.cfi_def_cfa_register 7
 349:.\main.c      ****     //Check if the flag has been set
 350:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1426              		.loc 1 350 0
 1427 0006 6B4B     		ldr	r3, .L92
 1428 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1429 000a 002B     		cmp	r3, #0
 1430 000c 00F0CE80 		beq	.L85
 351:.\main.c      ****     flag_calc_wheelspeed = 0;
 1431              		.loc 1 351 0
 1432 0010 684B     		ldr	r3, .L92
 1433 0012 0022     		movs	r2, #0
 1434 0014 1A70     		strb	r2, [r3]
 352:.\main.c      ****     
 353:.\main.c      ****     char wheel_1_str [64];
 354:.\main.c      ****     char wheel_2_str [64];
 355:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 1435              		.loc 1 355 0
 1436 0016 684B     		ldr	r3, .L92+4
 1437 0018 1B88     		ldrh	r3, [r3]
 1438 001a 1BB2     		sxth	r3, r3
 1439 001c 07F14402 		add	r2, r7, #68
 1440 0020 1046     		mov	r0, r2
 1441 0022 6649     		ldr	r1, .L92+8
 1442 0024 1A46     		mov	r2, r3
 1443 0026 FFF7FEFF 		bl	sprintf
 356:.\main.c      ****     //usbPutString(wheel_1_str);
 357:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 1444              		.loc 1 357 0
 1445 002a 654B     		ldr	r3, .L92+12
 1446 002c 1B88     		ldrh	r3, [r3]
 1447 002e 1BB2     		sxth	r3, r3
 1448 0030 3A1D     		adds	r2, r7, #4
 1449 0032 1046     		mov	r0, r2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 33


 1450 0034 6349     		ldr	r1, .L92+16
 1451 0036 1A46     		mov	r2, r3
 1452 0038 FFF7FEFF 		bl	sprintf
 358:.\main.c      ****     
 359:.\main.c      ****     //usbPutString(wheel_2_str);
 360:.\main.c      ****     
 361:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1453              		.loc 1 361 0
 1454 003c 5E4B     		ldr	r3, .L92+4
 1455 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1456 0040 A7F88E30 		strh	r3, [r7, #142]	@ movhi
 362:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1457              		.loc 1 362 0
 1458 0044 5E4B     		ldr	r3, .L92+12
 1459 0046 1B88     		ldrh	r3, [r3]	@ movhi
 1460 0048 A7F88C30 		strh	r3, [r7, #140]	@ movhi
 363:.\main.c      **** 
 364:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1461              		.loc 1 364 0
 1462 004c 5E4B     		ldr	r3, .L92+20
 1463 004e 1B88     		ldrh	r3, [r3]
 1464 0050 1AB2     		sxth	r2, r3
 1465 0052 B7F98E30 		ldrsh	r3, [r7, #142]
 1466 0056 002B     		cmp	r3, #0
 1467 0058 B8BF     		it	lt
 1468 005a 5B42     		rsblt	r3, r3, #0
 1469 005c D31A     		subs	r3, r2, r3
 1470 005e C7F88830 		str	r3, [r7, #136]
 365:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1471              		.loc 1 365 0
 1472 0062 D7F88830 		ldr	r3, [r7, #136]
 1473 0066 83EAE372 		eor	r2, r3, r3, asr #31
 1474 006a A2EBE372 		sub	r2, r2, r3, asr #31
 1475 006e D7F88830 		ldr	r3, [r7, #136]
 1476 0072 92FBF3F3 		sdiv	r3, r2, r3
 1477 0076 1846     		mov	r0, r3
 1478 0078 FFF7FEFF 		bl	__aeabi_i2d
 1479 007c 0446     		mov	r4, r0
 1480 007e 0D46     		mov	r5, r1
 1481 0080 D7F88830 		ldr	r3, [r7, #136]
 1482 0084 002B     		cmp	r3, #0
 1483 0086 B8BF     		it	lt
 1484 0088 5B42     		rsblt	r3, r3, #0
 1485 008a 1846     		mov	r0, r3
 1486 008c FFF7FEFF 		bl	__aeabi_i2d
 1487 0090 0246     		mov	r2, r0
 1488 0092 0B46     		mov	r3, r1
 1489 0094 1046     		mov	r0, r2
 1490 0096 1946     		mov	r1, r3
 1491 0098 FFF7FEFF 		bl	sqrt
 1492 009c 0246     		mov	r2, r0
 1493 009e 0B46     		mov	r3, r1
 1494 00a0 2046     		mov	r0, r4
 1495 00a2 2946     		mov	r1, r5
 1496 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1497 00a8 0246     		mov	r2, r0
 1498 00aa 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 34


 1499 00ac 1046     		mov	r0, r2
 1500 00ae 1946     		mov	r1, r3
 1501 00b0 FFF7FEFF 		bl	__aeabi_d2iz
 1502 00b4 0346     		mov	r3, r0
 1503 00b6 C7F88430 		str	r3, [r7, #132]
 366:.\main.c      ****     left_duty_cycle = left_duty_cycle + nextSpeed;
 1504              		.loc 1 366 0
 1505 00ba D7F88430 		ldr	r3, [r7, #132]
 1506 00be 9AB2     		uxth	r2, r3
 1507 00c0 424B     		ldr	r3, .L92+24
 1508 00c2 1B88     		ldrh	r3, [r3]
 1509 00c4 9BB2     		uxth	r3, r3
 1510 00c6 1344     		add	r3, r3, r2
 1511 00c8 9BB2     		uxth	r3, r3
 1512 00ca 9AB2     		uxth	r2, r3
 1513 00cc 3F4B     		ldr	r3, .L92+24
 1514 00ce 1A80     		strh	r2, [r3]	@ movhi
 367:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 1515              		.loc 1 367 0
 1516 00d0 3F4B     		ldr	r3, .L92+28
 1517 00d2 1B88     		ldrh	r3, [r3]
 1518 00d4 1AB2     		sxth	r2, r3
 1519 00d6 B7F98C30 		ldrsh	r3, [r7, #140]
 1520 00da 002B     		cmp	r3, #0
 1521 00dc B8BF     		it	lt
 1522 00de 5B42     		rsblt	r3, r3, #0
 1523 00e0 D31A     		subs	r3, r2, r3
 1524 00e2 C7F88830 		str	r3, [r7, #136]
 368:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1525              		.loc 1 368 0
 1526 00e6 D7F88830 		ldr	r3, [r7, #136]
 1527 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 1528 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 1529 00f2 D7F88830 		ldr	r3, [r7, #136]
 1530 00f6 92FBF3F3 		sdiv	r3, r2, r3
 1531 00fa 1846     		mov	r0, r3
 1532 00fc FFF7FEFF 		bl	__aeabi_i2d
 1533 0100 0446     		mov	r4, r0
 1534 0102 0D46     		mov	r5, r1
 1535 0104 D7F88830 		ldr	r3, [r7, #136]
 1536 0108 002B     		cmp	r3, #0
 1537 010a B8BF     		it	lt
 1538 010c 5B42     		rsblt	r3, r3, #0
 1539 010e 1846     		mov	r0, r3
 1540 0110 FFF7FEFF 		bl	__aeabi_i2d
 1541 0114 0246     		mov	r2, r0
 1542 0116 0B46     		mov	r3, r1
 1543 0118 1046     		mov	r0, r2
 1544 011a 1946     		mov	r1, r3
 1545 011c FFF7FEFF 		bl	sqrt
 1546 0120 0246     		mov	r2, r0
 1547 0122 0B46     		mov	r3, r1
 1548 0124 2046     		mov	r0, r4
 1549 0126 2946     		mov	r1, r5
 1550 0128 FFF7FEFF 		bl	__aeabi_dmul
 1551 012c 0246     		mov	r2, r0
 1552 012e 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 35


 1553 0130 1046     		mov	r0, r2
 1554 0132 1946     		mov	r1, r3
 1555 0134 FFF7FEFF 		bl	__aeabi_d2iz
 1556 0138 0346     		mov	r3, r0
 1557 013a C7F88430 		str	r3, [r7, #132]
 369:.\main.c      ****     right_duty_cycle = right_duty_cycle + nextSpeed;
 1558              		.loc 1 369 0
 1559 013e D7F88430 		ldr	r3, [r7, #132]
 1560 0142 9AB2     		uxth	r2, r3
 1561 0144 234B     		ldr	r3, .L92+32
 1562 0146 1B88     		ldrh	r3, [r3]
 1563 0148 9BB2     		uxth	r3, r3
 1564 014a 1344     		add	r3, r3, r2
 1565 014c 9BB2     		uxth	r3, r3
 1566 014e 9AB2     		uxth	r2, r3
 1567 0150 204B     		ldr	r3, .L92+32
 1568 0152 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****     
 371:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1569              		.loc 1 371 0
 1570 0154 1F4B     		ldr	r3, .L92+32
 1571 0156 1B88     		ldrh	r3, [r3]
 1572 0158 1BB2     		sxth	r3, r3
 1573 015a 002B     		cmp	r3, #0
 1574 015c 02DA     		bge	.L88
 1575              		.loc 1 371 0 is_stmt 0 discriminator 1
 1576 015e 1D4B     		ldr	r3, .L92+32
 1577 0160 0022     		movs	r2, #0
 1578 0162 1A80     		strh	r2, [r3]	@ movhi
 1579              	.L88:
 372:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1580              		.loc 1 372 0 is_stmt 1
 1581 0164 194B     		ldr	r3, .L92+24
 1582 0166 1B88     		ldrh	r3, [r3]
 1583 0168 1BB2     		sxth	r3, r3
 1584 016a 002B     		cmp	r3, #0
 1585 016c 02DA     		bge	.L89
 1586              		.loc 1 372 0 is_stmt 0 discriminator 1
 1587 016e 174B     		ldr	r3, .L92+24
 1588 0170 0022     		movs	r2, #0
 1589 0172 1A80     		strh	r2, [r3]	@ movhi
 1590              	.L89:
 373:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1591              		.loc 1 373 0 is_stmt 1
 1592 0174 174B     		ldr	r3, .L92+32
 1593 0176 1B88     		ldrh	r3, [r3]
 1594 0178 1BB2     		sxth	r3, r3
 1595 017a 642B     		cmp	r3, #100
 1596 017c 02DD     		ble	.L90
 1597              		.loc 1 373 0 is_stmt 0 discriminator 1
 1598 017e 154B     		ldr	r3, .L92+32
 1599 0180 6422     		movs	r2, #100
 1600 0182 1A80     		strh	r2, [r3]	@ movhi
 1601              	.L90:
 374:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 1602              		.loc 1 374 0 is_stmt 1
 1603 0184 114B     		ldr	r3, .L92+24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 36


 1604 0186 1B88     		ldrh	r3, [r3]
 1605 0188 1BB2     		sxth	r3, r3
 1606 018a 642B     		cmp	r3, #100
 1607 018c 02DD     		ble	.L91
 1608              		.loc 1 374 0 is_stmt 0 discriminator 1
 1609 018e 0F4B     		ldr	r3, .L92+24
 1610 0190 6422     		movs	r2, #100
 1611 0192 1A80     		strh	r2, [r3]	@ movhi
 1612              	.L91:
 375:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 1613              		.loc 1 375 0 is_stmt 1
 1614 0194 0D4B     		ldr	r3, .L92+24
 1615 0196 1B88     		ldrh	r3, [r3]
 1616 0198 DBB2     		uxtb	r3, r3
 1617 019a 1846     		mov	r0, r3
 1618 019c FFF7FEFF 		bl	PWM_1_WriteCompare
 376:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 1619              		.loc 1 376 0
 1620 01a0 0C4B     		ldr	r3, .L92+32
 1621 01a2 1B88     		ldrh	r3, [r3]
 1622 01a4 DBB2     		uxtb	r3, r3
 1623 01a6 1846     		mov	r0, r3
 1624 01a8 FFF7FEFF 		bl	PWM_2_WriteCompare
 1625              	.L85:
 377:.\main.c      **** }
 1626              		.loc 1 377 0
 1627 01ac 9037     		adds	r7, r7, #144
 1628              		.cfi_def_cfa_offset 16
 1629 01ae BD46     		mov	sp, r7
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 01b0 B0BD     		pop	{r4, r5, r7, pc}
 1633              	.L93:
 1634 01b2 00BF     		.align	2
 1635              	.L92:
 1636 01b4 00000000 		.word	flag_calc_wheelspeed
 1637 01b8 00000000 		.word	quad_diff1
 1638 01bc 14000000 		.word	.LC1
 1639 01c0 00000000 		.word	quad_diff2
 1640 01c4 2C000000 		.word	.LC2
 1641 01c8 00000000 		.word	leftSpeedLimit
 1642 01cc 00000000 		.word	left_duty_cycle
 1643 01d0 00000000 		.word	rightSpeedLimit
 1644 01d4 00000000 		.word	right_duty_cycle
 1645              		.cfi_endproc
 1646              	.LFE83:
 1647              		.size	Quad_Dec_response, .-Quad_Dec_response
 1648              		.global	__aeabi_i2f
 1649              		.global	__aeabi_fmul
 1650              		.global	__aeabi_fadd
 1651              		.global	__aeabi_f2iz
 1652              		.section	.rodata
 1653 0042 0000     		.align	2
 1654              	.LC3:
 1655 0044 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 1655      65727920 
 1655      566F6C74 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 37


 1655      6167653A 
 1655      2025646D 
 1656              		.section	.text.print_ADC,"ax",%progbits
 1657              		.align	2
 1658              		.global	print_ADC
 1659              		.thumb
 1660              		.thumb_func
 1661              		.type	print_ADC, %function
 1662              	print_ADC:
 1663              	.LFB84:
 378:.\main.c      **** 
 379:.\main.c      **** void print_ADC()
 380:.\main.c      **** {
 1664              		.loc 1 380 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 24
 1667              		@ frame_needed = 1, uses_anonymous_args = 0
 1668 0000 80B5     		push	{r7, lr}
 1669              		.cfi_def_cfa_offset 8
 1670              		.cfi_offset 7, -8
 1671              		.cfi_offset 14, -4
 1672 0002 86B0     		sub	sp, sp, #24
 1673              		.cfi_def_cfa_offset 32
 1674 0004 00AF     		add	r7, sp, #0
 1675              		.cfi_def_cfa_register 7
 381:.\main.c      ****    //usbPutString("HII\n");
 382:.\main.c      ****     if(flag_receive_ADC == 1)
 1676              		.loc 1 382 0
 1677 0006 274B     		ldr	r3, .L97
 1678 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1679 000a 012B     		cmp	r3, #1
 1680 000c 46D1     		bne	.L94
 1681              	.LBB3:
 383:.\main.c      ****     {
 384:.\main.c      ****         //usbPutString("AAA\r\n");
 385:.\main.c      ****         flag_receive_ADC = 0;
 1682              		.loc 1 385 0
 1683 000e 254B     		ldr	r3, .L97
 1684 0010 0022     		movs	r2, #0
 1685 0012 1A70     		strb	r2, [r3]
 386:.\main.c      ****         
 387:.\main.c      ****        // int8 channel = ADC_
 388:.\main.c      ****         float scalingFactor = 0.972;
 1686              		.loc 1 388 0
 1687 0014 244B     		ldr	r3, .L97+4
 1688 0016 7B61     		str	r3, [r7, #20]	@ float
 389:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 1689              		.loc 1 389 0
 1690 0018 244B     		ldr	r3, .L97+8
 1691 001a 1B88     		ldrh	r3, [r3]
 1692 001c 1BB2     		sxth	r3, r3
 1693 001e 41F28832 		movw	r2, #5000
 1694 0022 02FB03F3 		mul	r3, r2, r3
 1695 0026 002B     		cmp	r3, #0
 1696 0028 01DA     		bge	.L96
 1697 002a 03F6FF73 		addw	r3, r3, #4095
 1698              	.L96:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 38


 1699 002e 1B13     		asrs	r3, r3, #12
 1700 0030 1846     		mov	r0, r3
 1701 0032 FFF7FEFF 		bl	__aeabi_i2f
 1702 0036 0346     		mov	r3, r0
 1703 0038 1846     		mov	r0, r3
 1704 003a 7969     		ldr	r1, [r7, #20]	@ float
 1705 003c FFF7FEFF 		bl	__aeabi_fmul
 1706 0040 0346     		mov	r3, r0
 1707 0042 1846     		mov	r0, r3
 1708 0044 1946     		mov	r1, r3
 1709 0046 FFF7FEFF 		bl	__aeabi_fadd
 1710 004a 0346     		mov	r3, r0
 1711 004c 1846     		mov	r0, r3
 1712 004e FFF7FEFF 		bl	__aeabi_f2iz
 1713 0052 0346     		mov	r3, r0
 1714 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 390:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 1715              		.loc 1 390 0
 1716 0056 B7F91220 		ldrsh	r2, [r7, #18]
 1717 005a 154B     		ldr	r3, .L97+12
 1718 005c 1B88     		ldrh	r3, [r3]
 1719 005e 1BB2     		sxth	r3, r3
 1720 0060 1A44     		add	r2, r2, r3
 1721 0062 144B     		ldr	r3, .L97+16
 1722 0064 1B88     		ldrh	r3, [r3]
 1723 0066 1BB2     		sxth	r3, r3
 1724 0068 1344     		add	r3, r3, r2
 1725 006a 134A     		ldr	r2, .L97+20
 1726 006c 82FB0312 		smull	r1, r2, r2, r3
 1727 0070 DB17     		asrs	r3, r3, #31
 1728 0072 D31A     		subs	r3, r2, r3
 1729 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 391:.\main.c      ****         prevVoltage2 = prevVoltage;
 1730              		.loc 1 391 0
 1731 0076 0E4B     		ldr	r3, .L97+12
 1732 0078 1A88     		ldrh	r2, [r3]
 1733 007a 0E4B     		ldr	r3, .L97+16
 1734 007c 1A80     		strh	r2, [r3]	@ movhi
 392:.\main.c      ****         prevVoltage = converted_val;
 1735              		.loc 1 392 0
 1736 007e 0C4A     		ldr	r2, .L97+12
 1737 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1738 0082 1380     		strh	r3, [r2]	@ movhi
 393:.\main.c      ****         
 394:.\main.c      ****         char result_str[16];
 395:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 1739              		.loc 1 395 0
 1740 0084 B7F91230 		ldrsh	r3, [r7, #18]
 1741 0088 3A46     		mov	r2, r7
 1742 008a 1046     		mov	r0, r2
 1743 008c 0B49     		ldr	r1, .L97+24
 1744 008e 1A46     		mov	r2, r3
 1745 0090 FFF7FEFF 		bl	sprintf
 396:.\main.c      ****         
 397:.\main.c      ****         usbPutString(result_str);
 1746              		.loc 1 397 0
 1747 0094 3B46     		mov	r3, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 39


 1748 0096 1846     		mov	r0, r3
 1749 0098 FFF7FEFF 		bl	usbPutString
 1750              	.L94:
 1751              	.LBE3:
 398:.\main.c      ****     }
 399:.\main.c      **** }
 1752              		.loc 1 399 0
 1753 009c 1837     		adds	r7, r7, #24
 1754              		.cfi_def_cfa_offset 8
 1755 009e BD46     		mov	sp, r7
 1756              		.cfi_def_cfa_register 13
 1757              		@ sp needed
 1758 00a0 80BD     		pop	{r7, pc}
 1759              	.L98:
 1760 00a2 00BF     		.align	2
 1761              	.L97:
 1762 00a4 00000000 		.word	flag_receive_ADC
 1763 00a8 FED4783F 		.word	1064883454
 1764 00ac 00000000 		.word	adc_result
 1765 00b0 00000000 		.word	prevVoltage
 1766 00b4 00000000 		.word	prevVoltage2
 1767 00b8 56555555 		.word	1431655766
 1768 00bc 44000000 		.word	.LC3
 1769              		.cfi_endproc
 1770              	.LFE84:
 1771              		.size	print_ADC, .-print_ADC
 1772              		.section	.rodata
 1773              		.align	2
 1774              	.LC4:
 1775 005c 52535349 		.ascii	"RSSI:\000"
 1775      3A00
 1776 0062 0000     		.align	2
 1777              	.LC5:
 1778 0064 25640D0A 		.ascii	"%d\015\012\000"
 1778      00
 1779 0069 000000   		.align	2
 1780              	.LC6:
 1781 006c 726F626F 		.ascii	"robot_x:\000"
 1781      745F783A 
 1781      00
 1782 0075 000000   		.align	2
 1783              	.LC7:
 1784 0078 726F626F 		.ascii	"robot_y:\000"
 1784      745F793A 
 1784      00
 1785 0081 000000   		.align	2
 1786              	.LC8:
 1787 0084 726F626F 		.ascii	"robot_dir:\000"
 1787      745F6469 
 1787      723A00
 1788 008f 00       		.section	.text.print_RF,"ax",%progbits
 1789              		.align	2
 1790              		.global	print_RF
 1791              		.thumb
 1792              		.thumb_func
 1793              		.type	print_RF, %function
 1794              	print_RF:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 40


 1795              	.LFB85:
 400:.\main.c      **** 
 401:.\main.c      **** void print_RF()
 402:.\main.c      **** {
 1796              		.loc 1 402 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 16
 1799              		@ frame_needed = 1, uses_anonymous_args = 0
 1800 0000 80B5     		push	{r7, lr}
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 84B0     		sub	sp, sp, #16
 1805              		.cfi_def_cfa_offset 24
 1806 0004 00AF     		add	r7, sp, #0
 1807              		.cfi_def_cfa_register 7
 403:.\main.c      ****     if(flag_print_rf == 1)
 1808              		.loc 1 403 0
 1809 0006 254B     		ldr	r3, .L101
 1810 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 000a 012B     		cmp	r3, #1
 1812 000c 42D1     		bne	.L99
 1813              	.LBB4:
 404:.\main.c      ****     {
 405:.\main.c      ****         char printString[16];
 406:.\main.c      ****         flag_print_rf = 0;
 1814              		.loc 1 406 0
 1815 000e 234B     		ldr	r3, .L101
 1816 0010 0022     		movs	r2, #0
 1817 0012 1A70     		strb	r2, [r3]
 407:.\main.c      ****         usbPutString("RSSI:");
 1818              		.loc 1 407 0
 1819 0014 2248     		ldr	r0, .L101+4
 1820 0016 FFF7FEFF 		bl	usbPutString
 408:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 1821              		.loc 1 408 0
 1822 001a 224B     		ldr	r3, .L101+8
 1823 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1824 001e 5BB2     		sxtb	r3, r3
 1825 0020 3A46     		mov	r2, r7
 1826 0022 1046     		mov	r0, r2
 1827 0024 2049     		ldr	r1, .L101+12
 1828 0026 1A46     		mov	r2, r3
 1829 0028 FFF7FEFF 		bl	sprintf
 409:.\main.c      ****         usbPutString(printString);
 1830              		.loc 1 409 0
 1831 002c 3B46     		mov	r3, r7
 1832 002e 1846     		mov	r0, r3
 1833 0030 FFF7FEFF 		bl	usbPutString
 410:.\main.c      ****         usbPutString("robot_x:");
 1834              		.loc 1 410 0
 1835 0034 1D48     		ldr	r0, .L101+16
 1836 0036 FFF7FEFF 		bl	usbPutString
 411:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 1837              		.loc 1 411 0
 1838 003a 1A4B     		ldr	r3, .L101+8
 1839 003c 5B88     		ldrh	r3, [r3, #2]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 41


 1840 003e 1BB2     		sxth	r3, r3
 1841 0040 3A46     		mov	r2, r7
 1842 0042 1046     		mov	r0, r2
 1843 0044 1849     		ldr	r1, .L101+12
 1844 0046 1A46     		mov	r2, r3
 1845 0048 FFF7FEFF 		bl	sprintf
 412:.\main.c      ****         usbPutString(printString);
 1846              		.loc 1 412 0
 1847 004c 3B46     		mov	r3, r7
 1848 004e 1846     		mov	r0, r3
 1849 0050 FFF7FEFF 		bl	usbPutString
 413:.\main.c      ****         usbPutString("robot_y:");
 1850              		.loc 1 413 0
 1851 0054 1648     		ldr	r0, .L101+20
 1852 0056 FFF7FEFF 		bl	usbPutString
 414:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 1853              		.loc 1 414 0
 1854 005a 124B     		ldr	r3, .L101+8
 1855 005c 9B88     		ldrh	r3, [r3, #4]
 1856 005e 1BB2     		sxth	r3, r3
 1857 0060 3A46     		mov	r2, r7
 1858 0062 1046     		mov	r0, r2
 1859 0064 1049     		ldr	r1, .L101+12
 1860 0066 1A46     		mov	r2, r3
 1861 0068 FFF7FEFF 		bl	sprintf
 415:.\main.c      ****         usbPutString(printString);
 1862              		.loc 1 415 0
 1863 006c 3B46     		mov	r3, r7
 1864 006e 1846     		mov	r0, r3
 1865 0070 FFF7FEFF 		bl	usbPutString
 416:.\main.c      ****         usbPutString("robot_dir:");
 1866              		.loc 1 416 0
 1867 0074 0F48     		ldr	r0, .L101+24
 1868 0076 FFF7FEFF 		bl	usbPutString
 417:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 1869              		.loc 1 417 0
 1870 007a 0A4B     		ldr	r3, .L101+8
 1871 007c DB88     		ldrh	r3, [r3, #6]
 1872 007e 1BB2     		sxth	r3, r3
 1873 0080 3A46     		mov	r2, r7
 1874 0082 1046     		mov	r0, r2
 1875 0084 0849     		ldr	r1, .L101+12
 1876 0086 1A46     		mov	r2, r3
 1877 0088 FFF7FEFF 		bl	sprintf
 418:.\main.c      ****         usbPutString(printString);
 1878              		.loc 1 418 0
 1879 008c 3B46     		mov	r3, r7
 1880 008e 1846     		mov	r0, r3
 1881 0090 FFF7FEFF 		bl	usbPutString
 1882              	.L99:
 1883              	.LBE4:
 419:.\main.c      ****     }
 420:.\main.c      **** }
 1884              		.loc 1 420 0
 1885 0094 1037     		adds	r7, r7, #16
 1886              		.cfi_def_cfa_offset 8
 1887 0096 BD46     		mov	sp, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 42


 1888              		.cfi_def_cfa_register 13
 1889              		@ sp needed
 1890 0098 80BD     		pop	{r7, pc}
 1891              	.L102:
 1892 009a 00BF     		.align	2
 1893              	.L101:
 1894 009c 00000000 		.word	flag_print_rf
 1895 00a0 5C000000 		.word	.LC4
 1896 00a4 00000000 		.word	system_state
 1897 00a8 64000000 		.word	.LC5
 1898 00ac 6C000000 		.word	.LC6
 1899 00b0 78000000 		.word	.LC7
 1900 00b4 84000000 		.word	.LC8
 1901              		.cfi_endproc
 1902              	.LFE85:
 1903              		.size	print_RF, .-print_RF
 1904              		.section	.text.main,"ax",%progbits
 1905              		.align	2
 1906              		.global	main
 1907              		.thumb
 1908              		.thumb_func
 1909              		.type	main, %function
 1910              	main:
 1911              	.LFB86:
 421:.\main.c      **** 
 422:.\main.c      **** int main()
 423:.\main.c      **** {  
 1912              		.loc 1 423 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 1, uses_anonymous_args = 0
 1916 0000 80B5     		push	{r7, lr}
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 7, -8
 1919              		.cfi_offset 14, -4
 1920 0002 00AF     		add	r7, sp, #0
 1921              		.cfi_def_cfa_register 7
 424:.\main.c      **** 
 425:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 426:.\main.c      **** // ----- INITIALIZATIONS ----------
 427:.\main.c      ****     CYGlobalIntEnable;
 1922              		.loc 1 427 0
 1923              	@ 427 ".\main.c" 1
 1924 0004 62B6     		CPSIE   i
 1925              	@ 0 "" 2
 428:.\main.c      ****     if(ENABLE_PWM)
 429:.\main.c      ****     {
 430:.\main.c      ****         PWM_1_Start();// starting the pwm
 1926              		.loc 1 430 0
 1927              		.thumb
 1928 0006 FFF7FEFF 		bl	PWM_1_Start
 431:.\main.c      ****         PWM_2_Start();// starting the pwm
 1929              		.loc 1 431 0
 1930 000a FFF7FEFF 		bl	PWM_2_Start
 432:.\main.c      ****     }
 433:.\main.c      ****     
 434:.\main.c      ****     if(ENABLE_ADC)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 43


 435:.\main.c      ****     {
 436:.\main.c      ****         ADC_Start();
 437:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 438:.\main.c      ****         //ADC_StartConvert();
 439:.\main.c      ****         
 440:.\main.c      ****         //start the ADC timer for software trigger mode
 441:.\main.c      ****         Timer_TS_Start();
 442:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 443:.\main.c      ****     }
 444:.\main.c      ****     
 445:.\main.c      ****     if (ENABLE_QUAD)
 446:.\main.c      ****     {
 447:.\main.c      ****         QuadDec_M1_Start();
 1931              		.loc 1 447 0
 1932 000e FFF7FEFF 		bl	QuadDec_M1_Start
 448:.\main.c      ****         QuadDec_M2_Start();
 1933              		.loc 1 448 0
 1934 0012 FFF7FEFF 		bl	QuadDec_M2_Start
 449:.\main.c      ****         
 450:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1935              		.loc 1 450 0
 1936 0016 2248     		ldr	r0, .L113
 1937 0018 FFF7FEFF 		bl	isr_quad1_StartEx
 451:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1938              		.loc 1 451 0
 1939 001c 2148     		ldr	r0, .L113+4
 1940 001e FFF7FEFF 		bl	isr_turn_count_StartEx
 452:.\main.c      ****         
 453:.\main.c      ****         Timer_1_Start();
 1941              		.loc 1 453 0
 1942 0022 FFF7FEFF 		bl	Timer_1_Start
 454:.\main.c      ****     }
 455:.\main.c      ****     
 456:.\main.c      ****     if(ENABLE_STOP){
 457:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 1943              		.loc 1 457 0
 1944 0026 2048     		ldr	r0, .L113+8
 1945 0028 FFF7FEFF 		bl	isr_OnLine_StartEx
 458:.\main.c      ****         isr_button_StartEx(button);
 1946              		.loc 1 458 0
 1947 002c 1F48     		ldr	r0, .L113+12
 1948 002e FFF7FEFF 		bl	isr_button_StartEx
 459:.\main.c      ****     }
 460:.\main.c      **** 
 461:.\main.c      ****     // ------USB SETUP ----------------    
 462:.\main.c      ****     if (USE_USB){    
 463:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1949              		.loc 1 463 0
 1950 0032 0020     		movs	r0, #0
 1951 0034 0121     		movs	r1, #1
 1952 0036 FFF7FEFF 		bl	USBUART_Start
 464:.\main.c      ****         if (USBUART_GetConfiguration())
 1953              		.loc 1 464 0
 1954 003a FFF7FEFF 		bl	USBUART_GetConfiguration
 1955 003e 0346     		mov	r3, r0
 1956 0040 002B     		cmp	r3, #0
 1957 0042 01D0     		beq	.L112
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 44


 465:.\main.c      ****             {
 466:.\main.c      ****                  USBUART_CDC_Init();
 1958              		.loc 1 466 0
 1959 0044 FFF7FEFF 		bl	USBUART_CDC_Init
 1960              	.L112:
 467:.\main.c      ****             }
 468:.\main.c      ****     }
 469:.\main.c      ****     
 470:.\main.c      ****     if(BIN_ENABLED){
 471:.\main.c      ****         UART_clk_SetDividerValue(130);
 472:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 473:.\main.c      ****         UART_Start();
 474:.\main.c      ****         RF_BT_SELECT_Write(0);
 475:.\main.c      ****     }
 476:.\main.c      ****     
 477:.\main.c      ****     if(BT_ENABLED){
 478:.\main.c      ****         UART_clk_SetDividerValue(781);
 1961              		.loc 1 478 0
 1962 0048 4FF44370 		mov	r0, #780
 1963 004c 0121     		movs	r1, #1
 1964 004e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 479:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 1965              		.loc 1 479 0
 1966 0052 1748     		ldr	r0, .L113+16
 1967 0054 FFF7FEFF 		bl	isrRF_RX_StartEx
 480:.\main.c      ****         UART_Start();
 1968              		.loc 1 480 0
 1969 0058 FFF7FEFF 		bl	UART_Start
 481:.\main.c      ****         RF_BT_SELECT_Write(1);
 1970              		.loc 1 481 0
 1971 005c 0120     		movs	r0, #1
 1972 005e FFF7FEFF 		bl	RF_BT_SELECT_Write
 1973              	.L111:
 482:.\main.c      ****     }
 483:.\main.c      ****     
 484:.\main.c      ****     //usbPutString("Started");
 485:.\main.c      ****     for(;;)
 486:.\main.c      ****     {
 487:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 488:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1974              		.loc 1 488 0
 1975 0062 FFF7FEFF 		bl	Quad_Dec_response
 489:.\main.c      ****         if(BIN_ENABLED == 1)
 490:.\main.c      ****         {
 491:.\main.c      ****             handle_rx_binary();
 492:.\main.c      ****             print_RF();
 493:.\main.c      ****         }
 494:.\main.c      ****         
 495:.\main.c      ****         switch(movement_state)
 1976              		.loc 1 495 0
 1977 0066 134B     		ldr	r3, .L113+20
 1978 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1979 006a 032B     		cmp	r3, #3
 1980 006c F9D8     		bhi	.L111
 1981 006e 01A2     		adr	r2, .L107
 1982 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1983              		.p2align 2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 45


 1984              	.L107:
 1985 0074 85000000 		.word	.L106+1
 1986 0078 8B000000 		.word	.L108+1
 1987 007c 91000000 		.word	.L109+1
 1988 0080 97000000 		.word	.L110+1
 1989              		.p2align 1
 1990              	.L106:
 496:.\main.c      ****         {
 497:.\main.c      ****             case DRIVE:
 498:.\main.c      ****                 driveForwards();
 1991              		.loc 1 498 0
 1992 0084 FFF7FEFF 		bl	driveForwards
 499:.\main.c      ****             break;
 1993              		.loc 1 499 0
 1994 0088 08E0     		b	.L105
 1995              	.L108:
 500:.\main.c      ****             case LTURN:
 501:.\main.c      ****                 turnLeft();
 1996              		.loc 1 501 0
 1997 008a FFF7FEFF 		bl	turnLeft
 502:.\main.c      ****             break;
 1998              		.loc 1 502 0
 1999 008e 05E0     		b	.L105
 2000              	.L109:
 503:.\main.c      ****             case RTURN:
 504:.\main.c      ****                 turnRight();
 2001              		.loc 1 504 0
 2002 0090 FFF7FEFF 		bl	turnRight
 505:.\main.c      ****             break;
 2003              		.loc 1 505 0
 2004 0094 02E0     		b	.L105
 2005              	.L110:
 506:.\main.c      ****             case STOPPED:
 507:.\main.c      ****                 brakeMotor();
 2006              		.loc 1 507 0
 2007 0096 FFF7FEFF 		bl	brakeMotor
 508:.\main.c      ****             break;
 2008              		.loc 1 508 0
 2009 009a 00BF     		nop
 2010              	.L105:
 509:.\main.c      ****         }
 510:.\main.c      ****         //handle_usb();        
 511:.\main.c      ****     }   
 2011              		.loc 1 511 0
 2012 009c E1E7     		b	.L111
 2013              	.L114:
 2014 009e 00BF     		.align	2
 2015              	.L113:
 2016 00a0 00000000 		.word	isr_quad1
 2017 00a4 00000000 		.word	isr_turn_timer
 2018 00a8 00000000 		.word	Stop_on_line
 2019 00ac 00000000 		.word	button
 2020 00b0 00000000 		.word	BT_rxInt
 2021 00b4 00000000 		.word	movement_state
 2022              		.cfi_endproc
 2023              	.LFE86:
 2024              		.size	main, .-main
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 46


 2025              		.section	.text.usbPutString,"ax",%progbits
 2026              		.align	2
 2027              		.global	usbPutString
 2028              		.thumb
 2029              		.thumb_func
 2030              		.type	usbPutString, %function
 2031              	usbPutString:
 2032              	.LFB87:
 512:.\main.c      **** }
 513:.\main.c      **** //* ========================================
 514:.\main.c      **** void usbPutString(char *s)
 515:.\main.c      **** {
 2033              		.loc 1 515 0
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 16
 2036              		@ frame_needed = 1, uses_anonymous_args = 0
 2037 0000 80B5     		push	{r7, lr}
 2038              		.cfi_def_cfa_offset 8
 2039              		.cfi_offset 7, -8
 2040              		.cfi_offset 14, -4
 2041 0002 84B0     		sub	sp, sp, #16
 2042              		.cfi_def_cfa_offset 24
 2043 0004 00AF     		add	r7, sp, #0
 2044              		.cfi_def_cfa_register 7
 2045 0006 7860     		str	r0, [r7, #4]
 516:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 517:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 518:.\main.c      **** //  length to 62 char (63rd char is a '!')
 519:.\main.c      ****     if (USE_USB && portOpen)    
 2046              		.loc 1 519 0
 2047 0008 154B     		ldr	r3, .L119
 2048 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2049 000c 002B     		cmp	r3, #0
 2050 000e 23D0     		beq	.L115
 2051              	.LBB5:
 520:.\main.c      ****     {
 521:.\main.c      ****             uint32 cnt = 0;
 2052              		.loc 1 521 0
 2053 0010 0023     		movs	r3, #0
 2054 0012 FB60     		str	r3, [r7, #12]
 522:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 2055              		.loc 1 522 0
 2056 0014 0AE0     		b	.L117
 2057              	.L118:
 523:.\main.c      ****             {
 524:.\main.c      ****                 cnt++;
 2058              		.loc 1 524 0
 2059 0016 FB68     		ldr	r3, [r7, #12]
 2060 0018 0133     		adds	r3, r3, #1
 2061 001a FB60     		str	r3, [r7, #12]
 525:.\main.c      ****                 if(cnt == 3000000){
 2062              		.loc 1 525 0
 2063 001c FB68     		ldr	r3, [r7, #12]
 2064 001e 114A     		ldr	r2, .L119+4
 2065 0020 9342     		cmp	r3, r2
 2066 0022 03D1     		bne	.L117
 526:.\main.c      ****                     portOpen = 0;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 47


 2067              		.loc 1 526 0
 2068 0024 0E4B     		ldr	r3, .L119
 2069 0026 0022     		movs	r2, #0
 2070 0028 1A70     		strb	r2, [r3]
 527:.\main.c      ****                     return;
 2071              		.loc 1 527 0
 2072 002a 15E0     		b	.L115
 2073              	.L117:
 522:.\main.c      ****             {
 2074              		.loc 1 522 0
 2075 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 2076 0030 0346     		mov	r3, r0
 2077 0032 002B     		cmp	r3, #0
 2078 0034 EFD0     		beq	.L118
 528:.\main.c      ****                 }
 529:.\main.c      ****             }
 530:.\main.c      ****             s[63]='\0';
 2079              		.loc 1 530 0
 2080 0036 7B68     		ldr	r3, [r7, #4]
 2081 0038 3F33     		adds	r3, r3, #63
 2082 003a 0022     		movs	r2, #0
 2083 003c 1A70     		strb	r2, [r3]
 531:.\main.c      ****             s[62]='!';
 2084              		.loc 1 531 0
 2085 003e 7B68     		ldr	r3, [r7, #4]
 2086 0040 3E33     		adds	r3, r3, #62
 2087 0042 2122     		movs	r2, #33
 2088 0044 1A70     		strb	r2, [r3]
 532:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 2089              		.loc 1 532 0
 2090 0046 7868     		ldr	r0, [r7, #4]
 2091 0048 FFF7FEFF 		bl	strlen
 2092 004c 0346     		mov	r3, r0
 2093 004e 9BB2     		uxth	r3, r3
 2094 0050 7868     		ldr	r0, [r7, #4]
 2095 0052 1946     		mov	r1, r3
 2096 0054 FFF7FEFF 		bl	USBUART_PutData
 2097              	.L115:
 2098              	.LBE5:
 533:.\main.c      ****     }
 534:.\main.c      **** }
 2099              		.loc 1 534 0
 2100 0058 1037     		adds	r7, r7, #16
 2101              		.cfi_def_cfa_offset 8
 2102 005a BD46     		mov	sp, r7
 2103              		.cfi_def_cfa_register 13
 2104              		@ sp needed
 2105 005c 80BD     		pop	{r7, pc}
 2106              	.L120:
 2107 005e 00BF     		.align	2
 2108              	.L119:
 2109 0060 00000000 		.word	portOpen
 2110 0064 C0C62D00 		.word	3000000
 2111              		.cfi_endproc
 2112              	.LFE87:
 2113              		.size	usbPutString, .-usbPutString
 2114              		.section	.text.usbPutChar,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 48


 2115              		.align	2
 2116              		.global	usbPutChar
 2117              		.thumb
 2118              		.thumb_func
 2119              		.type	usbPutChar, %function
 2120              	usbPutChar:
 2121              	.LFB88:
 535:.\main.c      **** //* ========================================
 536:.\main.c      **** void usbPutChar(char c)
 537:.\main.c      **** {
 2122              		.loc 1 537 0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 16
 2125              		@ frame_needed = 1, uses_anonymous_args = 0
 2126 0000 80B5     		push	{r7, lr}
 2127              		.cfi_def_cfa_offset 8
 2128              		.cfi_offset 7, -8
 2129              		.cfi_offset 14, -4
 2130 0002 84B0     		sub	sp, sp, #16
 2131              		.cfi_def_cfa_offset 24
 2132 0004 00AF     		add	r7, sp, #0
 2133              		.cfi_def_cfa_register 7
 2134 0006 0346     		mov	r3, r0
 2135 0008 FB71     		strb	r3, [r7, #7]
 538:.\main.c      ****     if (USE_USB && portOpen)    
 2136              		.loc 1 538 0
 2137 000a 0F4B     		ldr	r3, .L125
 2138 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2139 000e 002B     		cmp	r3, #0
 2140 0010 16D0     		beq	.L121
 2141              	.LBB6:
 539:.\main.c      ****     {    
 540:.\main.c      ****         uint32 cnt = 0;
 2142              		.loc 1 540 0
 2143 0012 0023     		movs	r3, #0
 2144 0014 FB60     		str	r3, [r7, #12]
 541:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 2145              		.loc 1 541 0
 2146 0016 0AE0     		b	.L123
 2147              	.L124:
 542:.\main.c      ****             cnt++;
 2148              		.loc 1 542 0
 2149 0018 FB68     		ldr	r3, [r7, #12]
 2150 001a 0133     		adds	r3, r3, #1
 2151 001c FB60     		str	r3, [r7, #12]
 543:.\main.c      ****             if(cnt == 3000000){
 2152              		.loc 1 543 0
 2153 001e FB68     		ldr	r3, [r7, #12]
 2154 0020 0A4A     		ldr	r2, .L125+4
 2155 0022 9342     		cmp	r3, r2
 2156 0024 03D1     		bne	.L123
 544:.\main.c      ****                 portOpen = 0;
 2157              		.loc 1 544 0
 2158 0026 084B     		ldr	r3, .L125
 2159 0028 0022     		movs	r2, #0
 2160 002a 1A70     		strb	r2, [r3]
 545:.\main.c      ****                 return;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 49


 2161              		.loc 1 545 0
 2162 002c 08E0     		b	.L121
 2163              	.L123:
 541:.\main.c      ****             cnt++;
 2164              		.loc 1 541 0
 2165 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 2166 0032 0346     		mov	r3, r0
 2167 0034 002B     		cmp	r3, #0
 2168 0036 EFD0     		beq	.L124
 546:.\main.c      ****             }
 547:.\main.c      ****         }
 548:.\main.c      ****         USBUART_PutChar(c);
 2169              		.loc 1 548 0
 2170 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2171 003a 1846     		mov	r0, r3
 2172 003c FFF7FEFF 		bl	USBUART_PutChar
 2173              	.L121:
 2174              	.LBE6:
 549:.\main.c      ****     }    
 550:.\main.c      **** }
 2175              		.loc 1 550 0
 2176 0040 1037     		adds	r7, r7, #16
 2177              		.cfi_def_cfa_offset 8
 2178 0042 BD46     		mov	sp, r7
 2179              		.cfi_def_cfa_register 13
 2180              		@ sp needed
 2181 0044 80BD     		pop	{r7, pc}
 2182              	.L126:
 2183 0046 00BF     		.align	2
 2184              	.L125:
 2185 0048 00000000 		.word	portOpen
 2186 004c C0C62D00 		.word	3000000
 2187              		.cfi_endproc
 2188              	.LFE88:
 2189              		.size	usbPutChar, .-usbPutChar
 2190              		.section	.text.uart_set_PWM,"ax",%progbits
 2191              		.align	2
 2192              		.global	uart_set_PWM
 2193              		.thumb
 2194              		.thumb_func
 2195              		.type	uart_set_PWM, %function
 2196              	uart_set_PWM:
 2197              	.LFB89:
 551:.\main.c      **** //* ========================================
 552:.\main.c      **** 
 553:.\main.c      **** void uart_set_PWM()
 554:.\main.c      **** {
 2198              		.loc 1 554 0
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 8
 2201              		@ frame_needed = 1, uses_anonymous_args = 0
 2202 0000 80B5     		push	{r7, lr}
 2203              		.cfi_def_cfa_offset 8
 2204              		.cfi_offset 7, -8
 2205              		.cfi_offset 14, -4
 2206 0002 82B0     		sub	sp, sp, #8
 2207              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 50


 2208 0004 00AF     		add	r7, sp, #0
 2209              		.cfi_def_cfa_register 7
 555:.\main.c      ****     uint8 c;
 556:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 2210              		.loc 1 556 0
 2211 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 2212 000a 0346     		mov	r3, r0
 2213 000c 002B     		cmp	r3, #0
 2214 000e 11D0     		beq	.L127
 557:.\main.c      ****        {  
 558:.\main.c      ****             c = USBUART_GetChar();
 2215              		.loc 1 558 0
 2216 0010 FFF7FEFF 		bl	USBUART_GetChar
 2217 0014 0346     		mov	r3, r0
 2218 0016 FB71     		strb	r3, [r7, #7]
 559:.\main.c      ****             
 560:.\main.c      ****             if(c <= 100 && c > 0){
 2219              		.loc 1 560 0
 2220 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2221 001a 642B     		cmp	r3, #100
 2222 001c 0AD8     		bhi	.L127
 2223              		.loc 1 560 0 is_stmt 0 discriminator 1
 2224 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2225 0020 002B     		cmp	r3, #0
 2226 0022 07D0     		beq	.L127
 561:.\main.c      ****                 PWM_1_WriteCompare(c);
 2227              		.loc 1 561 0 is_stmt 1
 2228 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2229 0026 1846     		mov	r0, r3
 2230 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 562:.\main.c      ****                 usbPutString(c);
 2231              		.loc 1 562 0
 2232 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2233 002e 1846     		mov	r0, r3
 2234 0030 FFF7FEFF 		bl	usbPutString
 2235              	.L127:
 563:.\main.c      ****             }
 564:.\main.c      ****        }
 565:.\main.c      **** }
 2236              		.loc 1 565 0
 2237 0034 0837     		adds	r7, r7, #8
 2238              		.cfi_def_cfa_offset 8
 2239 0036 BD46     		mov	sp, r7
 2240              		.cfi_def_cfa_register 13
 2241              		@ sp needed
 2242 0038 80BD     		pop	{r7, pc}
 2243              		.cfi_endproc
 2244              	.LFE89:
 2245              		.size	uart_set_PWM, .-uart_set_PWM
 2246 003a 00BF     		.text
 2247              	.Letext0:
 2248              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2249              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2250              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2251              		.file 5 ".\\vars.h"
 2252              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2253              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 51


 2254              	.Ldebug_info0:
 2255 0000 9C080000 		.4byte	0x89c
 2256 0004 0400     		.2byte	0x4
 2257 0006 00000000 		.4byte	.Ldebug_abbrev0
 2258 000a 04       		.byte	0x4
 2259 000b 01       		.uleb128 0x1
 2260 000c CF020000 		.4byte	.LASF128
 2261 0010 01       		.byte	0x1
 2262 0011 6D060000 		.4byte	.LASF129
 2263 0015 1B060000 		.4byte	.LASF130
 2264 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2265 001d 00000000 		.4byte	0
 2266 0021 00000000 		.4byte	.Ldebug_line0
 2267 0025 02       		.uleb128 0x2
 2268 0026 01       		.byte	0x1
 2269 0027 06       		.byte	0x6
 2270 0028 A3050000 		.4byte	.LASF0
 2271 002c 02       		.uleb128 0x2
 2272 002d 01       		.byte	0x1
 2273 002e 08       		.byte	0x8
 2274 002f 10050000 		.4byte	.LASF1
 2275 0033 02       		.uleb128 0x2
 2276 0034 02       		.byte	0x2
 2277 0035 05       		.byte	0x5
 2278 0036 24040000 		.4byte	.LASF2
 2279 003a 02       		.uleb128 0x2
 2280 003b 02       		.byte	0x2
 2281 003c 07       		.byte	0x7
 2282 003d AF050000 		.4byte	.LASF3
 2283 0041 03       		.uleb128 0x3
 2284 0042 6E000000 		.4byte	.LASF11
 2285 0046 02       		.byte	0x2
 2286 0047 3F       		.byte	0x3f
 2287 0048 4C000000 		.4byte	0x4c
 2288 004c 02       		.uleb128 0x2
 2289 004d 04       		.byte	0x4
 2290 004e 05       		.byte	0x5
 2291 004f 4E040000 		.4byte	.LASF4
 2292 0053 02       		.uleb128 0x2
 2293 0054 04       		.byte	0x4
 2294 0055 07       		.byte	0x7
 2295 0056 C7040000 		.4byte	.LASF5
 2296 005a 02       		.uleb128 0x2
 2297 005b 08       		.byte	0x8
 2298 005c 05       		.byte	0x5
 2299 005d AC020000 		.4byte	.LASF6
 2300 0061 02       		.uleb128 0x2
 2301 0062 08       		.byte	0x8
 2302 0063 07       		.byte	0x7
 2303 0064 8B010000 		.4byte	.LASF7
 2304 0068 04       		.uleb128 0x4
 2305 0069 04       		.byte	0x4
 2306 006a 05       		.byte	0x5
 2307 006b 696E7400 		.ascii	"int\000"
 2308 006f 02       		.uleb128 0x2
 2309 0070 04       		.byte	0x4
 2310 0071 07       		.byte	0x7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 52


 2311 0072 61000000 		.4byte	.LASF8
 2312 0076 02       		.uleb128 0x2
 2313 0077 04       		.byte	0x4
 2314 0078 07       		.byte	0x7
 2315 0079 BE040000 		.4byte	.LASF9
 2316 007d 05       		.uleb128 0x5
 2317 007e 04       		.byte	0x4
 2318 007f 83000000 		.4byte	0x83
 2319 0083 02       		.uleb128 0x2
 2320 0084 01       		.byte	0x1
 2321 0085 08       		.byte	0x8
 2322 0086 65020000 		.4byte	.LASF10
 2323 008a 03       		.uleb128 0x3
 2324 008b E5040000 		.4byte	.LASF12
 2325 008f 03       		.byte	0x3
 2326 0090 2C       		.byte	0x2c
 2327 0091 41000000 		.4byte	0x41
 2328 0095 06       		.uleb128 0x6
 2329 0096 EC050000 		.4byte	.LASF13
 2330 009a 04       		.byte	0x4
 2331 009b 9201     		.2byte	0x192
 2332 009d 2C000000 		.4byte	0x2c
 2333 00a1 06       		.uleb128 0x6
 2334 00a2 83020000 		.4byte	.LASF14
 2335 00a6 04       		.byte	0x4
 2336 00a7 9301     		.2byte	0x193
 2337 00a9 3A000000 		.4byte	0x3a
 2338 00ad 06       		.uleb128 0x6
 2339 00ae 8A030000 		.4byte	.LASF15
 2340 00b2 04       		.byte	0x4
 2341 00b3 9401     		.2byte	0x194
 2342 00b5 53000000 		.4byte	0x53
 2343 00b9 06       		.uleb128 0x6
 2344 00ba 8A020000 		.4byte	.LASF16
 2345 00be 04       		.byte	0x4
 2346 00bf 9501     		.2byte	0x195
 2347 00c1 25000000 		.4byte	0x25
 2348 00c5 06       		.uleb128 0x6
 2349 00c6 78000000 		.4byte	.LASF17
 2350 00ca 04       		.byte	0x4
 2351 00cb 9601     		.2byte	0x196
 2352 00cd 33000000 		.4byte	0x33
 2353 00d1 02       		.uleb128 0x2
 2354 00d2 04       		.byte	0x4
 2355 00d3 04       		.byte	0x4
 2356 00d4 41010000 		.4byte	.LASF18
 2357 00d8 02       		.uleb128 0x2
 2358 00d9 08       		.byte	0x8
 2359 00da 04       		.byte	0x4
 2360 00db F2050000 		.4byte	.LASF19
 2361 00df 02       		.uleb128 0x2
 2362 00e0 08       		.byte	0x8
 2363 00e1 04       		.byte	0x4
 2364 00e2 DD030000 		.4byte	.LASF20
 2365 00e6 07       		.uleb128 0x7
 2366 00e7 51050000 		.4byte	.LASF131
 2367 00eb 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 53


 2368 00ec 05       		.byte	0x5
 2369 00ed 48       		.byte	0x48
 2370 00ee 0B010000 		.4byte	0x10b
 2371 00f2 08       		.uleb128 0x8
 2372 00f3 60010000 		.4byte	.LASF21
 2373 00f7 00       		.sleb128 0
 2374 00f8 08       		.uleb128 0x8
 2375 00f9 8B000000 		.4byte	.LASF22
 2376 00fd 01       		.sleb128 1
 2377 00fe 08       		.uleb128 0x8
 2378 00ff 0A000000 		.4byte	.LASF23
 2379 0103 02       		.sleb128 2
 2380 0104 08       		.uleb128 0x8
 2381 0105 CC030000 		.4byte	.LASF24
 2382 0109 03       		.sleb128 3
 2383 010a 00       		.byte	0
 2384 010b 09       		.uleb128 0x9
 2385 010c 91030000 		.4byte	.LASF132
 2386 0110 20       		.byte	0x20
 2387 0111 05       		.byte	0x5
 2388 0112 4F       		.byte	0x4f
 2389 0113 E4010000 		.4byte	0x1e4
 2390 0117 0A       		.uleb128 0xa
 2391 0118 A9030000 		.4byte	.LASF25
 2392 011c 05       		.byte	0x5
 2393 011d 50       		.byte	0x50
 2394 011e B9000000 		.4byte	0xb9
 2395 0122 00       		.byte	0
 2396 0123 0A       		.uleb128 0xa
 2397 0124 5A010000 		.4byte	.LASF26
 2398 0128 05       		.byte	0x5
 2399 0129 51       		.byte	0x51
 2400 012a 95000000 		.4byte	0x95
 2401 012e 01       		.byte	0x1
 2402 012f 0A       		.uleb128 0xa
 2403 0130 F4040000 		.4byte	.LASF27
 2404 0134 05       		.byte	0x5
 2405 0135 52       		.byte	0x52
 2406 0136 C5000000 		.4byte	0xc5
 2407 013a 02       		.byte	0x2
 2408 013b 0A       		.uleb128 0xa
 2409 013c 39020000 		.4byte	.LASF28
 2410 0140 05       		.byte	0x5
 2411 0141 53       		.byte	0x53
 2412 0142 C5000000 		.4byte	0xc5
 2413 0146 04       		.byte	0x4
 2414 0147 0A       		.uleb128 0xa
 2415 0148 C2050000 		.4byte	.LASF29
 2416 014c 05       		.byte	0x5
 2417 014d 54       		.byte	0x54
 2418 014e C5000000 		.4byte	0xc5
 2419 0152 06       		.byte	0x6
 2420 0153 0A       		.uleb128 0xa
 2421 0154 4D060000 		.4byte	.LASF30
 2422 0158 05       		.byte	0x5
 2423 0159 55       		.byte	0x55
 2424 015a C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 54


 2425 015e 08       		.byte	0x8
 2426 015f 0A       		.uleb128 0xa
 2427 0160 66030000 		.4byte	.LASF31
 2428 0164 05       		.byte	0x5
 2429 0165 56       		.byte	0x56
 2430 0166 C5000000 		.4byte	0xc5
 2431 016a 0A       		.byte	0xa
 2432 016b 0A       		.uleb128 0xa
 2433 016c 6A020000 		.4byte	.LASF32
 2434 0170 05       		.byte	0x5
 2435 0171 57       		.byte	0x57
 2436 0172 C5000000 		.4byte	0xc5
 2437 0176 0C       		.byte	0xc
 2438 0177 0A       		.uleb128 0xa
 2439 0178 AE030000 		.4byte	.LASF33
 2440 017c 05       		.byte	0x5
 2441 017d 58       		.byte	0x58
 2442 017e C5000000 		.4byte	0xc5
 2443 0182 0E       		.byte	0xe
 2444 0183 0A       		.uleb128 0xa
 2445 0184 C7020000 		.4byte	.LASF34
 2446 0188 05       		.byte	0x5
 2447 0189 59       		.byte	0x59
 2448 018a C5000000 		.4byte	0xc5
 2449 018e 10       		.byte	0x10
 2450 018f 0A       		.uleb128 0xa
 2451 0190 AE040000 		.4byte	.LASF35
 2452 0194 05       		.byte	0x5
 2453 0195 5A       		.byte	0x5a
 2454 0196 C5000000 		.4byte	0xc5
 2455 019a 12       		.byte	0x12
 2456 019b 0A       		.uleb128 0xa
 2457 019c 64060000 		.4byte	.LASF36
 2458 01a0 05       		.byte	0x5
 2459 01a1 5B       		.byte	0x5b
 2460 01a2 C5000000 		.4byte	0xc5
 2461 01a6 14       		.byte	0x14
 2462 01a7 0A       		.uleb128 0xa
 2463 01a8 8F020000 		.4byte	.LASF37
 2464 01ac 05       		.byte	0x5
 2465 01ad 5C       		.byte	0x5c
 2466 01ae C5000000 		.4byte	0xc5
 2467 01b2 16       		.byte	0x16
 2468 01b3 0A       		.uleb128 0xa
 2469 01b4 B8000000 		.4byte	.LASF38
 2470 01b8 05       		.byte	0x5
 2471 01b9 5D       		.byte	0x5d
 2472 01ba C5000000 		.4byte	0xc5
 2473 01be 18       		.byte	0x18
 2474 01bf 0A       		.uleb128 0xa
 2475 01c0 97040000 		.4byte	.LASF39
 2476 01c4 05       		.byte	0x5
 2477 01c5 5E       		.byte	0x5e
 2478 01c6 C5000000 		.4byte	0xc5
 2479 01ca 1A       		.byte	0x1a
 2480 01cb 0A       		.uleb128 0xa
 2481 01cc 5D030000 		.4byte	.LASF40
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 55


 2482 01d0 05       		.byte	0x5
 2483 01d1 5F       		.byte	0x5f
 2484 01d2 C5000000 		.4byte	0xc5
 2485 01d6 1C       		.byte	0x1c
 2486 01d7 0A       		.uleb128 0xa
 2487 01d8 2A010000 		.4byte	.LASF41
 2488 01dc 05       		.byte	0x5
 2489 01dd 60       		.byte	0x60
 2490 01de C5000000 		.4byte	0xc5
 2491 01e2 1E       		.byte	0x1e
 2492 01e3 00       		.byte	0
 2493 01e4 0B       		.uleb128 0xb
 2494 01e5 0A060000 		.4byte	.LASF67
 2495 01e9 01       		.byte	0x1
 2496 01ea 28       		.byte	0x28
 2497 01eb 00000000 		.4byte	.LFB63
 2498 01ef 60010000 		.4byte	.LFE63-.LFB63
 2499 01f3 01       		.uleb128 0x1
 2500 01f4 9C       		.byte	0x9c
 2501 01f5 2E020000 		.4byte	0x22e
 2502 01f9 0C       		.uleb128 0xc
 2503 01fa 10000000 		.4byte	.LBB2
 2504 01fe 34010000 		.4byte	.LBE2-.LBB2
 2505 0202 0D       		.uleb128 0xd
 2506 0203 AB000000 		.4byte	.LASF42
 2507 0207 01       		.byte	0x1
 2508 0208 2E       		.byte	0x2e
 2509 0209 A1000000 		.4byte	0xa1
 2510 020d 02       		.uleb128 0x2
 2511 020e 91       		.byte	0x91
 2512 020f 76       		.sleb128 -10
 2513 0210 0D       		.uleb128 0xd
 2514 0211 D9040000 		.4byte	.LASF43
 2515 0215 01       		.byte	0x1
 2516 0216 30       		.byte	0x30
 2517 0217 2E020000 		.4byte	0x22e
 2518 021b 02       		.uleb128 0x2
 2519 021c 91       		.byte	0x91
 2520 021d 68       		.sleb128 -24
 2521 021e 0D       		.uleb128 0xd
 2522 021f 66010000 		.4byte	.LASF44
 2523 0223 01       		.byte	0x1
 2524 0224 31       		.byte	0x31
 2525 0225 2E020000 		.4byte	0x22e
 2526 0229 02       		.uleb128 0x2
 2527 022a 91       		.byte	0x91
 2528 022b 5C       		.sleb128 -36
 2529 022c 00       		.byte	0
 2530 022d 00       		.byte	0
 2531 022e 0E       		.uleb128 0xe
 2532 022f 83000000 		.4byte	0x83
 2533 0233 3E020000 		.4byte	0x23e
 2534 0237 0F       		.uleb128 0xf
 2535 0238 76000000 		.4byte	0x76
 2536 023c 0B       		.byte	0xb
 2537 023d 00       		.byte	0
 2538 023e 10       		.uleb128 0x10
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 56


 2539 023f 47010000 		.4byte	.LASF56
 2540 0243 01       		.byte	0x1
 2541 0244 A1       		.byte	0xa1
 2542 0245 00000000 		.4byte	.LFB64
 2543 0249 2C000000 		.4byte	.LFE64-.LFB64
 2544 024d 01       		.uleb128 0x1
 2545 024e 9C       		.byte	0x9c
 2546 024f 70020000 		.4byte	0x270
 2547 0253 11       		.uleb128 0x11
 2548 0254 A6020000 		.4byte	.LASF45
 2549 0258 01       		.byte	0x1
 2550 0259 A1       		.byte	0xa1
 2551 025a 68000000 		.4byte	0x68
 2552 025e 02       		.uleb128 0x2
 2553 025f 91       		.byte	0x91
 2554 0260 74       		.sleb128 -12
 2555 0261 11       		.uleb128 0x11
 2556 0262 9F040000 		.4byte	.LASF46
 2557 0266 01       		.byte	0x1
 2558 0267 A1       		.byte	0xa1
 2559 0268 68000000 		.4byte	0x68
 2560 026c 02       		.uleb128 0x2
 2561 026d 91       		.byte	0x91
 2562 026e 70       		.sleb128 -16
 2563 026f 00       		.byte	0
 2564 0270 12       		.uleb128 0x12
 2565 0271 FF040000 		.4byte	.LASF47
 2566 0275 01       		.byte	0x1
 2567 0276 A6       		.byte	0xa6
 2568 0277 00000000 		.4byte	.LFB65
 2569 027b 30000000 		.4byte	.LFE65-.LFB65
 2570 027f 01       		.uleb128 0x1
 2571 0280 9C       		.byte	0x9c
 2572 0281 12       		.uleb128 0x12
 2573 0282 74010000 		.4byte	.LASF48
 2574 0286 01       		.byte	0x1
 2575 0287 AE       		.byte	0xae
 2576 0288 00000000 		.4byte	.LFB66
 2577 028c 0E000000 		.4byte	.LFE66-.LFB66
 2578 0290 01       		.uleb128 0x1
 2579 0291 9C       		.byte	0x9c
 2580 0292 12       		.uleb128 0x12
 2581 0293 82010000 		.4byte	.LASF49
 2582 0297 01       		.byte	0x1
 2583 0298 B3       		.byte	0xb3
 2584 0299 00000000 		.4byte	.LFB67
 2585 029d 0E000000 		.4byte	.LFE67-.LFB67
 2586 02a1 01       		.uleb128 0x1
 2587 02a2 9C       		.byte	0x9c
 2588 02a3 12       		.uleb128 0x12
 2589 02a4 A4040000 		.4byte	.LASF50
 2590 02a8 01       		.byte	0x1
 2591 02a9 B8       		.byte	0xb8
 2592 02aa 00000000 		.4byte	.LFB68
 2593 02ae 0E000000 		.4byte	.LFE68-.LFB68
 2594 02b2 01       		.uleb128 0x1
 2595 02b3 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 57


 2596 02b4 12       		.uleb128 0x12
 2597 02b5 BD010000 		.4byte	.LASF51
 2598 02b9 01       		.byte	0x1
 2599 02ba BD       		.byte	0xbd
 2600 02bb 00000000 		.4byte	.LFB69
 2601 02bf 2C000000 		.4byte	.LFE69-.LFB69
 2602 02c3 01       		.uleb128 0x1
 2603 02c4 9C       		.byte	0x9c
 2604 02c5 12       		.uleb128 0x12
 2605 02c6 57040000 		.4byte	.LASF52
 2606 02ca 01       		.byte	0x1
 2607 02cb C5       		.byte	0xc5
 2608 02cc 00000000 		.4byte	.LFB70
 2609 02d0 2C000000 		.4byte	.LFE70-.LFB70
 2610 02d4 01       		.uleb128 0x1
 2611 02d5 9C       		.byte	0x9c
 2612 02d6 12       		.uleb128 0x12
 2613 02d7 1E010000 		.4byte	.LASF53
 2614 02db 01       		.byte	0x1
 2615 02dc CD       		.byte	0xcd
 2616 02dd 00000000 		.4byte	.LFB71
 2617 02e1 14000000 		.4byte	.LFE71-.LFB71
 2618 02e5 01       		.uleb128 0x1
 2619 02e6 9C       		.byte	0x9c
 2620 02e7 13       		.uleb128 0x13
 2621 02e8 D3010000 		.4byte	.LASF54
 2622 02ec 01       		.byte	0x1
 2623 02ed D2       		.byte	0xd2
 2624 02ee 00000000 		.4byte	.LFB72
 2625 02f2 18000000 		.4byte	.LFE72-.LFB72
 2626 02f6 01       		.uleb128 0x1
 2627 02f7 9C       		.byte	0x9c
 2628 02f8 12       		.uleb128 0x12
 2629 02f9 57050000 		.4byte	.LASF55
 2630 02fd 01       		.byte	0x1
 2631 02fe D6       		.byte	0xd6
 2632 02ff 00000000 		.4byte	.LFB73
 2633 0303 34000000 		.4byte	.LFE73-.LFB73
 2634 0307 01       		.uleb128 0x1
 2635 0308 9C       		.byte	0x9c
 2636 0309 14       		.uleb128 0x14
 2637 030a E9030000 		.4byte	.LASF57
 2638 030e 01       		.byte	0x1
 2639 030f DE       		.byte	0xde
 2640 0310 00000000 		.4byte	.LFB74
 2641 0314 98000000 		.4byte	.LFE74-.LFB74
 2642 0318 01       		.uleb128 0x1
 2643 0319 9C       		.byte	0x9c
 2644 031a 2D030000 		.4byte	0x32d
 2645 031e 0D       		.uleb128 0xd
 2646 031f 6E030000 		.4byte	.LASF58
 2647 0323 01       		.byte	0x1
 2648 0324 DF       		.byte	0xdf
 2649 0325 83000000 		.4byte	0x83
 2650 0329 02       		.uleb128 0x2
 2651 032a 91       		.byte	0x91
 2652 032b 6F       		.sleb128 -17
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 58


 2653 032c 00       		.byte	0
 2654 032d 14       		.uleb128 0x14
 2655 032e D4030000 		.4byte	.LASF59
 2656 0332 01       		.byte	0x1
 2657 0333 F6       		.byte	0xf6
 2658 0334 00000000 		.4byte	.LFB75
 2659 0338 9C000000 		.4byte	.LFE75-.LFB75
 2660 033c 01       		.uleb128 0x1
 2661 033d 9C       		.byte	0x9c
 2662 033e 51030000 		.4byte	0x351
 2663 0342 0D       		.uleb128 0xd
 2664 0343 6E030000 		.4byte	.LASF58
 2665 0347 01       		.byte	0x1
 2666 0348 F8       		.byte	0xf8
 2667 0349 83000000 		.4byte	0x83
 2668 034d 02       		.uleb128 0x2
 2669 034e 91       		.byte	0x91
 2670 034f 77       		.sleb128 -9
 2671 0350 00       		.byte	0
 2672 0351 15       		.uleb128 0x15
 2673 0352 D9050000 		.4byte	.LASF60
 2674 0356 01       		.byte	0x1
 2675 0357 0D01     		.2byte	0x10d
 2676 0359 00000000 		.4byte	.LFB76
 2677 035d 0C000000 		.4byte	.LFE76-.LFB76
 2678 0361 01       		.uleb128 0x1
 2679 0362 9C       		.byte	0x9c
 2680 0363 16       		.uleb128 0x16
 2681 0364 B6040000 		.4byte	.LASF61
 2682 0368 01       		.byte	0x1
 2683 0369 1301     		.2byte	0x113
 2684 036b 00000000 		.4byte	.LFB77
 2685 036f 2C000000 		.4byte	.LFE77-.LFB77
 2686 0373 01       		.uleb128 0x1
 2687 0374 9C       		.byte	0x9c
 2688 0375 16       		.uleb128 0x16
 2689 0376 37010000 		.4byte	.LASF62
 2690 037a 01       		.byte	0x1
 2691 037b 1C01     		.2byte	0x11c
 2692 037d 00000000 		.4byte	.LFB78
 2693 0381 B8000000 		.4byte	.LFE78-.LFB78
 2694 0385 01       		.uleb128 0x1
 2695 0386 9C       		.byte	0x9c
 2696 0387 16       		.uleb128 0x16
 2697 0388 AE010000 		.4byte	.LASF63
 2698 038c 01       		.byte	0x1
 2699 038d 3101     		.2byte	0x131
 2700 038f 00000000 		.4byte	.LFB79
 2701 0393 68000000 		.4byte	.LFE79-.LFB79
 2702 0397 01       		.uleb128 0x1
 2703 0398 9C       		.byte	0x9c
 2704 0399 16       		.uleb128 0x16
 2705 039a 23050000 		.4byte	.LASF64
 2706 039e 01       		.byte	0x1
 2707 039f 4601     		.2byte	0x146
 2708 03a1 00000000 		.4byte	.LFB80
 2709 03a5 18000000 		.4byte	.LFE80-.LFB80
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 59


 2710 03a9 01       		.uleb128 0x1
 2711 03aa 9C       		.byte	0x9c
 2712 03ab 16       		.uleb128 0x16
 2713 03ac 1A020000 		.4byte	.LASF65
 2714 03b0 01       		.byte	0x1
 2715 03b1 4D01     		.2byte	0x14d
 2716 03b3 00000000 		.4byte	.LFB81
 2717 03b7 1C000000 		.4byte	.LFE81-.LFB81
 2718 03bb 01       		.uleb128 0x1
 2719 03bc 9C       		.byte	0x9c
 2720 03bd 16       		.uleb128 0x16
 2721 03be 91000000 		.4byte	.LASF66
 2722 03c2 01       		.byte	0x1
 2723 03c3 5601     		.2byte	0x156
 2724 03c5 00000000 		.4byte	.LFB82
 2725 03c9 0A000000 		.4byte	.LFE82-.LFB82
 2726 03cd 01       		.uleb128 0x1
 2727 03ce 9C       		.byte	0x9c
 2728 03cf 17       		.uleb128 0x17
 2729 03d0 32000000 		.4byte	.LASF68
 2730 03d4 01       		.byte	0x1
 2731 03d5 5B01     		.2byte	0x15b
 2732 03d7 00000000 		.4byte	.LFB83
 2733 03db D8010000 		.4byte	.LFE83-.LFB83
 2734 03df 01       		.uleb128 0x1
 2735 03e0 9C       		.byte	0x9c
 2736 03e1 42040000 		.4byte	0x442
 2737 03e5 18       		.uleb128 0x18
 2738 03e6 59020000 		.4byte	.LASF69
 2739 03ea 01       		.byte	0x1
 2740 03eb 6101     		.2byte	0x161
 2741 03ed 42040000 		.4byte	0x442
 2742 03f1 03       		.uleb128 0x3
 2743 03f2 91       		.byte	0x91
 2744 03f3 A47F     		.sleb128 -92
 2745 03f5 18       		.uleb128 0x18
 2746 03f6 26000000 		.4byte	.LASF70
 2747 03fa 01       		.byte	0x1
 2748 03fb 6201     		.2byte	0x162
 2749 03fd 42040000 		.4byte	0x442
 2750 0401 03       		.uleb128 0x3
 2751 0402 91       		.byte	0x91
 2752 0403 E47E     		.sleb128 -156
 2753 0405 18       		.uleb128 0x18
 2754 0406 FA010000 		.4byte	.LASF71
 2755 040a 01       		.byte	0x1
 2756 040b 6901     		.2byte	0x169
 2757 040d C5000000 		.4byte	0xc5
 2758 0411 02       		.uleb128 0x2
 2759 0412 91       		.byte	0x91
 2760 0413 6E       		.sleb128 -18
 2761 0414 18       		.uleb128 0x18
 2762 0415 76030000 		.4byte	.LASF72
 2763 0419 01       		.byte	0x1
 2764 041a 6A01     		.2byte	0x16a
 2765 041c C5000000 		.4byte	0xc5
 2766 0420 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 60


 2767 0421 91       		.byte	0x91
 2768 0422 6C       		.sleb128 -20
 2769 0423 18       		.uleb128 0x18
 2770 0424 9C020000 		.4byte	.LASF73
 2771 0428 01       		.byte	0x1
 2772 0429 6C01     		.2byte	0x16c
 2773 042b 68000000 		.4byte	0x68
 2774 042f 02       		.uleb128 0x2
 2775 0430 91       		.byte	0x91
 2776 0431 68       		.sleb128 -24
 2777 0432 18       		.uleb128 0x18
 2778 0433 E2050000 		.4byte	.LASF74
 2779 0437 01       		.byte	0x1
 2780 0438 6D01     		.2byte	0x16d
 2781 043a 68000000 		.4byte	0x68
 2782 043e 02       		.uleb128 0x2
 2783 043f 91       		.byte	0x91
 2784 0440 64       		.sleb128 -28
 2785 0441 00       		.byte	0
 2786 0442 0E       		.uleb128 0xe
 2787 0443 83000000 		.4byte	0x83
 2788 0447 52040000 		.4byte	0x452
 2789 044b 0F       		.uleb128 0xf
 2790 044c 76000000 		.4byte	0x76
 2791 0450 3F       		.byte	0x3f
 2792 0451 00       		.byte	0
 2793 0452 17       		.uleb128 0x17
 2794 0453 4F020000 		.4byte	.LASF75
 2795 0457 01       		.byte	0x1
 2796 0458 7B01     		.2byte	0x17b
 2797 045a 00000000 		.4byte	.LFB84
 2798 045e C0000000 		.4byte	.LFE84-.LFB84
 2799 0462 01       		.uleb128 0x1
 2800 0463 9C       		.byte	0x9c
 2801 0464 A0040000 		.4byte	0x4a0
 2802 0468 0C       		.uleb128 0xc
 2803 0469 0E000000 		.4byte	.LBB3
 2804 046d 8E000000 		.4byte	.LBE3-.LBB3
 2805 0471 18       		.uleb128 0x18
 2806 0472 EC010000 		.4byte	.LASF76
 2807 0476 01       		.byte	0x1
 2808 0477 8401     		.2byte	0x184
 2809 0479 D1000000 		.4byte	0xd1
 2810 047d 02       		.uleb128 0x2
 2811 047e 91       		.byte	0x91
 2812 047f 74       		.sleb128 -12
 2813 0480 18       		.uleb128 0x18
 2814 0481 9B030000 		.4byte	.LASF77
 2815 0485 01       		.byte	0x1
 2816 0486 8501     		.2byte	0x185
 2817 0488 C5000000 		.4byte	0xc5
 2818 048c 02       		.uleb128 0x2
 2819 048d 91       		.byte	0x91
 2820 048e 72       		.sleb128 -14
 2821 048f 18       		.uleb128 0x18
 2822 0490 21020000 		.4byte	.LASF78
 2823 0494 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 61


 2824 0495 8A01     		.2byte	0x18a
 2825 0497 A0040000 		.4byte	0x4a0
 2826 049b 02       		.uleb128 0x2
 2827 049c 91       		.byte	0x91
 2828 049d 60       		.sleb128 -32
 2829 049e 00       		.byte	0
 2830 049f 00       		.byte	0
 2831 04a0 0E       		.uleb128 0xe
 2832 04a1 83000000 		.4byte	0x83
 2833 04a5 B0040000 		.4byte	0x4b0
 2834 04a9 0F       		.uleb128 0xf
 2835 04aa 76000000 		.4byte	0x76
 2836 04ae 0F       		.byte	0xf
 2837 04af 00       		.byte	0
 2838 04b0 17       		.uleb128 0x17
 2839 04b1 44060000 		.4byte	.LASF79
 2840 04b5 01       		.byte	0x1
 2841 04b6 9101     		.2byte	0x191
 2842 04b8 00000000 		.4byte	.LFB85
 2843 04bc B8000000 		.4byte	.LFE85-.LFB85
 2844 04c0 01       		.uleb128 0x1
 2845 04c1 9C       		.byte	0x9c
 2846 04c2 E0040000 		.4byte	0x4e0
 2847 04c6 0C       		.uleb128 0xc
 2848 04c7 0E000000 		.4byte	.LBB4
 2849 04cb 86000000 		.4byte	.LBE4-.LBB4
 2850 04cf 18       		.uleb128 0x18
 2851 04d0 72040000 		.4byte	.LASF80
 2852 04d4 01       		.byte	0x1
 2853 04d5 9501     		.2byte	0x195
 2854 04d7 A0040000 		.4byte	0x4a0
 2855 04db 02       		.uleb128 0x2
 2856 04dc 91       		.byte	0x91
 2857 04dd 68       		.sleb128 -24
 2858 04de 00       		.byte	0
 2859 04df 00       		.byte	0
 2860 04e0 19       		.uleb128 0x19
 2861 04e1 D4050000 		.4byte	.LASF81
 2862 04e5 01       		.byte	0x1
 2863 04e6 A601     		.2byte	0x1a6
 2864 04e8 68000000 		.4byte	0x68
 2865 04ec 00000000 		.4byte	.LFB86
 2866 04f0 B8000000 		.4byte	.LFE86-.LFB86
 2867 04f4 01       		.uleb128 0x1
 2868 04f5 9C       		.byte	0x9c
 2869 04f6 1A       		.uleb128 0x1a
 2870 04f7 11010000 		.4byte	.LASF82
 2871 04fb 01       		.byte	0x1
 2872 04fc 0202     		.2byte	0x202
 2873 04fe 00000000 		.4byte	.LFB87
 2874 0502 68000000 		.4byte	.LFE87-.LFB87
 2875 0506 01       		.uleb128 0x1
 2876 0507 9C       		.byte	0x9c
 2877 0508 33050000 		.4byte	0x533
 2878 050c 1B       		.uleb128 0x1b
 2879 050d 7300     		.ascii	"s\000"
 2880 050f 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 62


 2881 0510 0202     		.2byte	0x202
 2882 0512 7D000000 		.4byte	0x7d
 2883 0516 02       		.uleb128 0x2
 2884 0517 91       		.byte	0x91
 2885 0518 6C       		.sleb128 -20
 2886 0519 0C       		.uleb128 0xc
 2887 051a 10000000 		.4byte	.LBB5
 2888 051e 48000000 		.4byte	.LBE5-.LBB5
 2889 0522 1C       		.uleb128 0x1c
 2890 0523 636E7400 		.ascii	"cnt\000"
 2891 0527 01       		.byte	0x1
 2892 0528 0902     		.2byte	0x209
 2893 052a AD000000 		.4byte	0xad
 2894 052e 02       		.uleb128 0x2
 2895 052f 91       		.byte	0x91
 2896 0530 74       		.sleb128 -12
 2897 0531 00       		.byte	0
 2898 0532 00       		.byte	0
 2899 0533 1A       		.uleb128 0x1a
 2900 0534 98050000 		.4byte	.LASF83
 2901 0538 01       		.byte	0x1
 2902 0539 1802     		.2byte	0x218
 2903 053b 00000000 		.4byte	.LFB88
 2904 053f 50000000 		.4byte	.LFE88-.LFB88
 2905 0543 01       		.uleb128 0x1
 2906 0544 9C       		.byte	0x9c
 2907 0545 70050000 		.4byte	0x570
 2908 0549 1B       		.uleb128 0x1b
 2909 054a 6300     		.ascii	"c\000"
 2910 054c 01       		.byte	0x1
 2911 054d 1802     		.2byte	0x218
 2912 054f 83000000 		.4byte	0x83
 2913 0553 02       		.uleb128 0x2
 2914 0554 91       		.byte	0x91
 2915 0555 6F       		.sleb128 -17
 2916 0556 0C       		.uleb128 0xc
 2917 0557 12000000 		.4byte	.LBB6
 2918 055b 2E000000 		.4byte	.LBE6-.LBB6
 2919 055f 1C       		.uleb128 0x1c
 2920 0560 636E7400 		.ascii	"cnt\000"
 2921 0564 01       		.byte	0x1
 2922 0565 1C02     		.2byte	0x21c
 2923 0567 AD000000 		.4byte	0xad
 2924 056b 02       		.uleb128 0x2
 2925 056c 91       		.byte	0x91
 2926 056d 74       		.sleb128 -12
 2927 056e 00       		.byte	0
 2928 056f 00       		.byte	0
 2929 0570 17       		.uleb128 0x17
 2930 0571 2C020000 		.4byte	.LASF84
 2931 0575 01       		.byte	0x1
 2932 0576 2902     		.2byte	0x229
 2933 0578 00000000 		.4byte	.LFB89
 2934 057c 3A000000 		.4byte	.LFE89-.LFB89
 2935 0580 01       		.uleb128 0x1
 2936 0581 9C       		.byte	0x9c
 2937 0582 94050000 		.4byte	0x594
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 63


 2938 0586 1C       		.uleb128 0x1c
 2939 0587 6300     		.ascii	"c\000"
 2940 0589 01       		.byte	0x1
 2941 058a 2B02     		.2byte	0x22b
 2942 058c 95000000 		.4byte	0x95
 2943 0590 02       		.uleb128 0x2
 2944 0591 91       		.byte	0x91
 2945 0592 77       		.sleb128 -9
 2946 0593 00       		.byte	0
 2947 0594 1D       		.uleb128 0x1d
 2948 0595 65040000 		.4byte	.LASF85
 2949 0599 06       		.byte	0x6
 2950 059a 9606     		.2byte	0x696
 2951 059c A0050000 		.4byte	0x5a0
 2952 05a0 1E       		.uleb128 0x1e
 2953 05a1 8A000000 		.4byte	0x8a
 2954 05a5 1F       		.uleb128 0x1f
 2955 05a6 747300   		.ascii	"ts\000"
 2956 05a9 05       		.byte	0x5
 2957 05aa 10       		.byte	0x10
 2958 05ab 95000000 		.4byte	0x95
 2959 05af 05       		.uleb128 0x5
 2960 05b0 03       		.byte	0x3
 2961 05b1 00000000 		.4byte	ts
 2962 05b5 20       		.uleb128 0x20
 2963 05b6 30050000 		.4byte	.LASF86
 2964 05ba 05       		.byte	0x5
 2965 05bb 11       		.byte	0x11
 2966 05bc A1000000 		.4byte	0xa1
 2967 05c0 05       		.uleb128 0x5
 2968 05c1 03       		.byte	0x3
 2969 05c2 00000000 		.4byte	ts_enc
 2970 05c6 20       		.uleb128 0x20
 2971 05c7 7E040000 		.4byte	.LASF87
 2972 05cb 05       		.byte	0x5
 2973 05cc 12       		.byte	0x12
 2974 05cd A1000000 		.4byte	0xa1
 2975 05d1 05       		.uleb128 0x5
 2976 05d2 03       		.byte	0x3
 2977 05d3 00000000 		.4byte	ts_update
 2978 05d7 20       		.uleb128 0x20
 2979 05d8 81030000 		.4byte	.LASF88
 2980 05dc 05       		.byte	0x5
 2981 05dd 13       		.byte	0x13
 2982 05de A1000000 		.4byte	0xa1
 2983 05e2 05       		.uleb128 0x5
 2984 05e3 03       		.byte	0x3
 2985 05e4 00000000 		.4byte	ts_speed
 2986 05e8 20       		.uleb128 0x20
 2987 05e9 44020000 		.4byte	.LASF89
 2988 05ed 05       		.byte	0x5
 2989 05ee 14       		.byte	0x14
 2990 05ef A1000000 		.4byte	0xa1
 2991 05f3 05       		.uleb128 0x5
 2992 05f4 03       		.byte	0x3
 2993 05f5 00000000 		.4byte	ts_display
 2994 05f9 20       		.uleb128 0x20
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 64


 2995 05fa 04020000 		.4byte	.LASF90
 2996 05fe 05       		.byte	0x5
 2997 05ff 16       		.byte	0x16
 2998 0600 95000000 		.4byte	0x95
 2999 0604 05       		.uleb128 0x5
 3000 0605 03       		.byte	0x3
 3001 0606 00000000 		.4byte	flag_ts_enc
 3002 060a 20       		.uleb128 0x20
 3003 060b DD010000 		.4byte	.LASF91
 3004 060f 05       		.byte	0x5
 3005 0610 17       		.byte	0x17
 3006 0611 95000000 		.4byte	0x95
 3007 0615 05       		.uleb128 0x5
 3008 0616 03       		.byte	0x3
 3009 0617 00000000 		.4byte	flag_ts_update
 3010 061b 20       		.uleb128 0x20
 3011 061c FF030000 		.4byte	.LASF92
 3012 0620 05       		.byte	0x5
 3013 0621 18       		.byte	0x18
 3014 0622 95000000 		.4byte	0x95
 3015 0626 05       		.uleb128 0x5
 3016 0627 03       		.byte	0x3
 3017 0628 00000000 		.4byte	flag_ts_speed
 3018 062c 20       		.uleb128 0x20
 3019 062d 41050000 		.4byte	.LASF93
 3020 0631 05       		.byte	0x5
 3021 0632 19       		.byte	0x19
 3022 0633 95000000 		.4byte	0x95
 3023 0637 05       		.uleb128 0x5
 3024 0638 03       		.byte	0x3
 3025 0639 00000000 		.4byte	flag_ts_display
 3026 063d 20       		.uleb128 0x20
 3027 063e 1C040000 		.4byte	.LASF94
 3028 0642 05       		.byte	0x5
 3029 0643 1C       		.byte	0x1c
 3030 0644 95000000 		.4byte	0x95
 3031 0648 05       		.uleb128 0x5
 3032 0649 03       		.byte	0x3
 3033 064a 00000000 		.4byte	flag_rx
 3034 064e 20       		.uleb128 0x20
 3035 064f A2010000 		.4byte	.LASF95
 3036 0653 05       		.byte	0x5
 3037 0654 1D       		.byte	0x1d
 3038 0655 95000000 		.4byte	0x95
 3039 0659 05       		.uleb128 0x5
 3040 065a 03       		.byte	0x3
 3041 065b 00000000 		.4byte	flag_packet
 3042 065f 20       		.uleb128 0x20
 3043 0660 55060000 		.4byte	.LASF96
 3044 0664 05       		.byte	0x5
 3045 0665 1E       		.byte	0x1e
 3046 0666 95000000 		.4byte	0x95
 3047 066a 05       		.uleb128 0x5
 3048 066b 03       		.byte	0x3
 3049 066c 00000000 		.4byte	flag_KB_string
 3050 0670 20       		.uleb128 0x20
 3051 0671 0D040000 		.4byte	.LASF97
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 65


 3052 0675 05       		.byte	0x5
 3053 0676 20       		.byte	0x20
 3054 0677 95000000 		.4byte	0x95
 3055 067b 05       		.uleb128 0x5
 3056 067c 03       		.byte	0x3
 3057 067d 00000000 		.4byte	dataready_flag
 3058 0681 20       		.uleb128 0x20
 3059 0682 D8000000 		.4byte	.LASF98
 3060 0686 05       		.byte	0x5
 3061 0687 22       		.byte	0x22
 3062 0688 95000000 		.4byte	0x95
 3063 068c 05       		.uleb128 0x5
 3064 068d 03       		.byte	0x3
 3065 068e 00000000 		.4byte	flag_rf_transmission_active
 3066 0692 20       		.uleb128 0x20
 3067 0693 F4000000 		.4byte	.LASF99
 3068 0697 05       		.byte	0x5
 3069 0698 23       		.byte	0x23
 3070 0699 95000000 		.4byte	0x95
 3071 069d 05       		.uleb128 0x5
 3072 069e 03       		.byte	0x3
 3073 069f 00000000 		.4byte	flag_print_rf
 3074 06a3 20       		.uleb128 0x20
 3075 06a4 BB030000 		.4byte	.LASF100
 3076 06a8 05       		.byte	0x5
 3077 06a9 25       		.byte	0x25
 3078 06aa 95000000 		.4byte	0x95
 3079 06ae 05       		.uleb128 0x5
 3080 06af 03       		.byte	0x3
 3081 06b0 00000000 		.4byte	flag_receive_ADC
 3082 06b4 20       		.uleb128 0x20
 3083 06b5 2E040000 		.4byte	.LASF101
 3084 06b9 05       		.byte	0x5
 3085 06ba 26       		.byte	0x26
 3086 06bb C5000000 		.4byte	0xc5
 3087 06bf 05       		.uleb128 0x5
 3088 06c0 03       		.byte	0x3
 3089 06c1 00000000 		.4byte	adc_result
 3090 06c5 20       		.uleb128 0x20
 3091 06c6 00000000 		.4byte	.LASF102
 3092 06ca 05       		.byte	0x5
 3093 06cb 28       		.byte	0x28
 3094 06cc 95000000 		.4byte	0x95
 3095 06d0 05       		.uleb128 0x5
 3096 06d1 03       		.byte	0x3
 3097 06d2 00000000 		.4byte	direction
 3098 06d6 20       		.uleb128 0x20
 3099 06d7 39040000 		.4byte	.LASF103
 3100 06db 05       		.byte	0x5
 3101 06dc 2C       		.byte	0x2c
 3102 06dd 95000000 		.4byte	0x95
 3103 06e1 05       		.uleb128 0x5
 3104 06e2 03       		.byte	0x3
 3105 06e3 00000000 		.4byte	flag_calc_wheelspeed
 3106 06e7 20       		.uleb128 0x20
 3107 06e8 C0000000 		.4byte	.LASF104
 3108 06ec 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 66


 3109 06ed 2D       		.byte	0x2d
 3110 06ee C5000000 		.4byte	0xc5
 3111 06f2 05       		.uleb128 0x5
 3112 06f3 03       		.byte	0x3
 3113 06f4 00000000 		.4byte	quad_count1
 3114 06f8 20       		.uleb128 0x20
 3115 06f9 CC000000 		.4byte	.LASF105
 3116 06fd 05       		.byte	0x5
 3117 06fe 2E       		.byte	0x2e
 3118 06ff C5000000 		.4byte	0xc5
 3119 0703 05       		.uleb128 0x5
 3120 0704 03       		.byte	0x3
 3121 0705 00000000 		.4byte	quad_count2
 3122 0709 20       		.uleb128 0x20
 3123 070a 76050000 		.4byte	.LASF106
 3124 070e 05       		.byte	0x5
 3125 070f 2F       		.byte	0x2f
 3126 0710 C5000000 		.4byte	0xc5
 3127 0714 05       		.uleb128 0x5
 3128 0715 03       		.byte	0x3
 3129 0716 00000000 		.4byte	last_quad_count1
 3130 071a 20       		.uleb128 0x20
 3131 071b 87050000 		.4byte	.LASF107
 3132 071f 05       		.byte	0x5
 3133 0720 30       		.byte	0x30
 3134 0721 C5000000 		.4byte	0xc5
 3135 0725 05       		.uleb128 0x5
 3136 0726 03       		.byte	0x3
 3137 0727 00000000 		.4byte	last_quad_count2
 3138 072b 20       		.uleb128 0x20
 3139 072c 10000000 		.4byte	.LASF108
 3140 0730 05       		.byte	0x5
 3141 0731 31       		.byte	0x31
 3142 0732 C5000000 		.4byte	0xc5
 3143 0736 05       		.uleb128 0x5
 3144 0737 03       		.byte	0x3
 3145 0738 00000000 		.4byte	quad_diff1
 3146 073c 20       		.uleb128 0x20
 3147 073d 1B000000 		.4byte	.LASF109
 3148 0741 05       		.byte	0x5
 3149 0742 32       		.byte	0x32
 3150 0743 C5000000 		.4byte	0xc5
 3151 0747 05       		.uleb128 0x5
 3152 0748 03       		.byte	0x3
 3153 0749 00000000 		.4byte	quad_diff2
 3154 074d 20       		.uleb128 0x20
 3155 074e 50000000 		.4byte	.LASF110
 3156 0752 05       		.byte	0x5
 3157 0753 35       		.byte	0x35
 3158 0754 C5000000 		.4byte	0xc5
 3159 0758 05       		.uleb128 0x5
 3160 0759 03       		.byte	0x3
 3161 075a 00000000 		.4byte	start_turn_count
 3162 075e 20       		.uleb128 0x20
 3163 075f EF030000 		.4byte	.LASF111
 3164 0763 05       		.byte	0x5
 3165 0764 38       		.byte	0x38
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 67


 3166 0765 C5000000 		.4byte	0xc5
 3167 0769 05       		.uleb128 0x5
 3168 076a 03       		.byte	0x3
 3169 076b 00000000 		.4byte	left_duty_cycle
 3170 076f 20       		.uleb128 0x20
 3171 0770 F9050000 		.4byte	.LASF112
 3172 0774 05       		.byte	0x5
 3173 0775 39       		.byte	0x39
 3174 0776 C5000000 		.4byte	0xc5
 3175 077a 05       		.uleb128 0x5
 3176 077b 03       		.byte	0x3
 3177 077c 00000000 		.4byte	right_duty_cycle
 3178 0780 20       		.uleb128 0x20
 3179 0781 88040000 		.4byte	.LASF113
 3180 0785 05       		.byte	0x5
 3181 0786 3C       		.byte	0x3c
 3182 0787 C5000000 		.4byte	0xc5
 3183 078b 05       		.uleb128 0x5
 3184 078c 03       		.byte	0x3
 3185 078d 00000000 		.4byte	leftSpeedLimit
 3186 0791 20       		.uleb128 0x20
 3187 0792 73020000 		.4byte	.LASF114
 3188 0796 05       		.byte	0x5
 3189 0797 3D       		.byte	0x3d
 3190 0798 C5000000 		.4byte	0xc5
 3191 079c 05       		.uleb128 0x5
 3192 079d 03       		.byte	0x3
 3193 079e 00000000 		.4byte	rightSpeedLimit
 3194 07a2 20       		.uleb128 0x20
 3195 07a3 37050000 		.4byte	.LASF115
 3196 07a7 05       		.byte	0x5
 3197 07a8 40       		.byte	0x40
 3198 07a9 95000000 		.4byte	0x95
 3199 07ad 05       		.uleb128 0x5
 3200 07ae 03       		.byte	0x3
 3201 07af 00000000 		.4byte	brakeFlag
 3202 07b3 20       		.uleb128 0x20
 3203 07b4 CA010000 		.4byte	.LASF116
 3204 07b8 05       		.byte	0x5
 3205 07b9 41       		.byte	0x41
 3206 07ba 95000000 		.4byte	0x95
 3207 07be 05       		.uleb128 0x5
 3208 07bf 03       		.byte	0x3
 3209 07c0 00000000 		.4byte	portOpen
 3210 07c4 20       		.uleb128 0x20
 3211 07c5 44000000 		.4byte	.LASF117
 3212 07c9 05       		.byte	0x5
 3213 07ca 44       		.byte	0x44
 3214 07cb C5000000 		.4byte	0xc5
 3215 07cf 05       		.uleb128 0x5
 3216 07d0 03       		.byte	0x3
 3217 07d1 00000000 		.4byte	prevVoltage
 3218 07d5 20       		.uleb128 0x20
 3219 07d6 9E000000 		.4byte	.LASF118
 3220 07da 05       		.byte	0x5
 3221 07db 45       		.byte	0x45
 3222 07dc C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 68


 3223 07e0 05       		.uleb128 0x5
 3224 07e1 03       		.byte	0x3
 3225 07e2 00000000 		.4byte	prevVoltage2
 3226 07e6 20       		.uleb128 0x20
 3227 07e7 68050000 		.4byte	.LASF119
 3228 07eb 05       		.byte	0x5
 3229 07ec 4B       		.byte	0x4b
 3230 07ed 42040000 		.4byte	0x442
 3231 07f1 05       		.uleb128 0x5
 3232 07f2 03       		.byte	0x3
 3233 07f3 00000000 		.4byte	displaystring
 3234 07f7 20       		.uleb128 0x20
 3235 07f8 1E050000 		.4byte	.LASF120
 3236 07fc 05       		.byte	0x5
 3237 07fd 4C       		.byte	0x4c
 3238 07fe 42040000 		.4byte	0x442
 3239 0802 05       		.uleb128 0x5
 3240 0803 03       		.byte	0x3
 3241 0804 00000000 		.4byte	line
 3242 0808 20       		.uleb128 0x20
 3243 0809 0A050000 		.4byte	.LASF121
 3244 080d 05       		.byte	0x5
 3245 080e 4C       		.byte	0x4c
 3246 080f 42040000 		.4byte	0x442
 3247 0813 05       		.uleb128 0x5
 3248 0814 03       		.byte	0x3
 3249 0815 00000000 		.4byte	entry
 3250 0819 0E       		.uleb128 0xe
 3251 081a 95000000 		.4byte	0x95
 3252 081e 29080000 		.4byte	0x829
 3253 0822 0F       		.uleb128 0xf
 3254 0823 76000000 		.4byte	0x76
 3255 0827 3F       		.byte	0x3f
 3256 0828 00       		.byte	0
 3257 0829 20       		.uleb128 0x20
 3258 082a 50010000 		.4byte	.LASF122
 3259 082e 05       		.byte	0x5
 3260 082f 4D       		.byte	0x4d
 3261 0830 19080000 		.4byte	0x819
 3262 0834 05       		.uleb128 0x5
 3263 0835 03       		.byte	0x3
 3264 0836 00000000 		.4byte	usbBuffer
 3265 083a 20       		.uleb128 0x20
 3266 083b BA020000 		.4byte	.LASF123
 3267 083f 05       		.byte	0x5
 3268 0840 62       		.byte	0x62
 3269 0841 0B010000 		.4byte	0x10b
 3270 0845 05       		.uleb128 0x5
 3271 0846 03       		.byte	0x3
 3272 0847 00000000 		.4byte	buffer_state
 3273 084b 20       		.uleb128 0x20
 3274 084c 7E000000 		.4byte	.LASF124
 3275 0850 05       		.byte	0x5
 3276 0851 63       		.byte	0x63
 3277 0852 0B010000 		.4byte	0x10b
 3278 0856 05       		.uleb128 0x5
 3279 0857 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 69


 3280 0858 00000000 		.4byte	system_state
 3281 085c 20       		.uleb128 0x20
 3282 085d 02010000 		.4byte	.LASF125
 3283 0861 05       		.byte	0x5
 3284 0862 65       		.byte	0x65
 3285 0863 E6000000 		.4byte	0xe6
 3286 0867 05       		.uleb128 0x5
 3287 0868 03       		.byte	0x3
 3288 0869 00000000 		.4byte	movement_state
 3289 086d 20       		.uleb128 0x20
 3290 086e 10020000 		.4byte	.LASF126
 3291 0872 05       		.byte	0x5
 3292 0873 67       		.byte	0x67
 3293 0874 95000000 		.4byte	0x95
 3294 0878 05       		.uleb128 0x5
 3295 0879 03       		.byte	0x3
 3296 087a 00000000 		.4byte	byteCount
 3297 087e 0E       		.uleb128 0xe
 3298 087f 83000000 		.4byte	0x83
 3299 0883 8E080000 		.4byte	0x88e
 3300 0887 0F       		.uleb128 0xf
 3301 0888 76000000 		.4byte	0x76
 3302 088c 01       		.byte	0x1
 3303 088d 00       		.byte	0
 3304 088e 20       		.uleb128 0x20
 3305 088f ED040000 		.4byte	.LASF127
 3306 0893 05       		.byte	0x5
 3307 0894 68       		.byte	0x68
 3308 0895 7E080000 		.4byte	0x87e
 3309 0899 05       		.uleb128 0x5
 3310 089a 03       		.byte	0x3
 3311 089b 00000000 		.4byte	packet
 3312 089f 00       		.byte	0
 3313              		.section	.debug_abbrev,"",%progbits
 3314              	.Ldebug_abbrev0:
 3315 0000 01       		.uleb128 0x1
 3316 0001 11       		.uleb128 0x11
 3317 0002 01       		.byte	0x1
 3318 0003 25       		.uleb128 0x25
 3319 0004 0E       		.uleb128 0xe
 3320 0005 13       		.uleb128 0x13
 3321 0006 0B       		.uleb128 0xb
 3322 0007 03       		.uleb128 0x3
 3323 0008 0E       		.uleb128 0xe
 3324 0009 1B       		.uleb128 0x1b
 3325 000a 0E       		.uleb128 0xe
 3326 000b 55       		.uleb128 0x55
 3327 000c 17       		.uleb128 0x17
 3328 000d 11       		.uleb128 0x11
 3329 000e 01       		.uleb128 0x1
 3330 000f 10       		.uleb128 0x10
 3331 0010 17       		.uleb128 0x17
 3332 0011 00       		.byte	0
 3333 0012 00       		.byte	0
 3334 0013 02       		.uleb128 0x2
 3335 0014 24       		.uleb128 0x24
 3336 0015 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 70


 3337 0016 0B       		.uleb128 0xb
 3338 0017 0B       		.uleb128 0xb
 3339 0018 3E       		.uleb128 0x3e
 3340 0019 0B       		.uleb128 0xb
 3341 001a 03       		.uleb128 0x3
 3342 001b 0E       		.uleb128 0xe
 3343 001c 00       		.byte	0
 3344 001d 00       		.byte	0
 3345 001e 03       		.uleb128 0x3
 3346 001f 16       		.uleb128 0x16
 3347 0020 00       		.byte	0
 3348 0021 03       		.uleb128 0x3
 3349 0022 0E       		.uleb128 0xe
 3350 0023 3A       		.uleb128 0x3a
 3351 0024 0B       		.uleb128 0xb
 3352 0025 3B       		.uleb128 0x3b
 3353 0026 0B       		.uleb128 0xb
 3354 0027 49       		.uleb128 0x49
 3355 0028 13       		.uleb128 0x13
 3356 0029 00       		.byte	0
 3357 002a 00       		.byte	0
 3358 002b 04       		.uleb128 0x4
 3359 002c 24       		.uleb128 0x24
 3360 002d 00       		.byte	0
 3361 002e 0B       		.uleb128 0xb
 3362 002f 0B       		.uleb128 0xb
 3363 0030 3E       		.uleb128 0x3e
 3364 0031 0B       		.uleb128 0xb
 3365 0032 03       		.uleb128 0x3
 3366 0033 08       		.uleb128 0x8
 3367 0034 00       		.byte	0
 3368 0035 00       		.byte	0
 3369 0036 05       		.uleb128 0x5
 3370 0037 0F       		.uleb128 0xf
 3371 0038 00       		.byte	0
 3372 0039 0B       		.uleb128 0xb
 3373 003a 0B       		.uleb128 0xb
 3374 003b 49       		.uleb128 0x49
 3375 003c 13       		.uleb128 0x13
 3376 003d 00       		.byte	0
 3377 003e 00       		.byte	0
 3378 003f 06       		.uleb128 0x6
 3379 0040 16       		.uleb128 0x16
 3380 0041 00       		.byte	0
 3381 0042 03       		.uleb128 0x3
 3382 0043 0E       		.uleb128 0xe
 3383 0044 3A       		.uleb128 0x3a
 3384 0045 0B       		.uleb128 0xb
 3385 0046 3B       		.uleb128 0x3b
 3386 0047 05       		.uleb128 0x5
 3387 0048 49       		.uleb128 0x49
 3388 0049 13       		.uleb128 0x13
 3389 004a 00       		.byte	0
 3390 004b 00       		.byte	0
 3391 004c 07       		.uleb128 0x7
 3392 004d 04       		.uleb128 0x4
 3393 004e 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 71


 3394 004f 03       		.uleb128 0x3
 3395 0050 0E       		.uleb128 0xe
 3396 0051 0B       		.uleb128 0xb
 3397 0052 0B       		.uleb128 0xb
 3398 0053 3A       		.uleb128 0x3a
 3399 0054 0B       		.uleb128 0xb
 3400 0055 3B       		.uleb128 0x3b
 3401 0056 0B       		.uleb128 0xb
 3402 0057 01       		.uleb128 0x1
 3403 0058 13       		.uleb128 0x13
 3404 0059 00       		.byte	0
 3405 005a 00       		.byte	0
 3406 005b 08       		.uleb128 0x8
 3407 005c 28       		.uleb128 0x28
 3408 005d 00       		.byte	0
 3409 005e 03       		.uleb128 0x3
 3410 005f 0E       		.uleb128 0xe
 3411 0060 1C       		.uleb128 0x1c
 3412 0061 0D       		.uleb128 0xd
 3413 0062 00       		.byte	0
 3414 0063 00       		.byte	0
 3415 0064 09       		.uleb128 0x9
 3416 0065 13       		.uleb128 0x13
 3417 0066 01       		.byte	0x1
 3418 0067 03       		.uleb128 0x3
 3419 0068 0E       		.uleb128 0xe
 3420 0069 0B       		.uleb128 0xb
 3421 006a 0B       		.uleb128 0xb
 3422 006b 3A       		.uleb128 0x3a
 3423 006c 0B       		.uleb128 0xb
 3424 006d 3B       		.uleb128 0x3b
 3425 006e 0B       		.uleb128 0xb
 3426 006f 01       		.uleb128 0x1
 3427 0070 13       		.uleb128 0x13
 3428 0071 00       		.byte	0
 3429 0072 00       		.byte	0
 3430 0073 0A       		.uleb128 0xa
 3431 0074 0D       		.uleb128 0xd
 3432 0075 00       		.byte	0
 3433 0076 03       		.uleb128 0x3
 3434 0077 0E       		.uleb128 0xe
 3435 0078 3A       		.uleb128 0x3a
 3436 0079 0B       		.uleb128 0xb
 3437 007a 3B       		.uleb128 0x3b
 3438 007b 0B       		.uleb128 0xb
 3439 007c 49       		.uleb128 0x49
 3440 007d 13       		.uleb128 0x13
 3441 007e 38       		.uleb128 0x38
 3442 007f 0B       		.uleb128 0xb
 3443 0080 00       		.byte	0
 3444 0081 00       		.byte	0
 3445 0082 0B       		.uleb128 0xb
 3446 0083 2E       		.uleb128 0x2e
 3447 0084 01       		.byte	0x1
 3448 0085 3F       		.uleb128 0x3f
 3449 0086 19       		.uleb128 0x19
 3450 0087 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 72


 3451 0088 0E       		.uleb128 0xe
 3452 0089 3A       		.uleb128 0x3a
 3453 008a 0B       		.uleb128 0xb
 3454 008b 3B       		.uleb128 0x3b
 3455 008c 0B       		.uleb128 0xb
 3456 008d 11       		.uleb128 0x11
 3457 008e 01       		.uleb128 0x1
 3458 008f 12       		.uleb128 0x12
 3459 0090 06       		.uleb128 0x6
 3460 0091 40       		.uleb128 0x40
 3461 0092 18       		.uleb128 0x18
 3462 0093 9742     		.uleb128 0x2117
 3463 0095 19       		.uleb128 0x19
 3464 0096 01       		.uleb128 0x1
 3465 0097 13       		.uleb128 0x13
 3466 0098 00       		.byte	0
 3467 0099 00       		.byte	0
 3468 009a 0C       		.uleb128 0xc
 3469 009b 0B       		.uleb128 0xb
 3470 009c 01       		.byte	0x1
 3471 009d 11       		.uleb128 0x11
 3472 009e 01       		.uleb128 0x1
 3473 009f 12       		.uleb128 0x12
 3474 00a0 06       		.uleb128 0x6
 3475 00a1 00       		.byte	0
 3476 00a2 00       		.byte	0
 3477 00a3 0D       		.uleb128 0xd
 3478 00a4 34       		.uleb128 0x34
 3479 00a5 00       		.byte	0
 3480 00a6 03       		.uleb128 0x3
 3481 00a7 0E       		.uleb128 0xe
 3482 00a8 3A       		.uleb128 0x3a
 3483 00a9 0B       		.uleb128 0xb
 3484 00aa 3B       		.uleb128 0x3b
 3485 00ab 0B       		.uleb128 0xb
 3486 00ac 49       		.uleb128 0x49
 3487 00ad 13       		.uleb128 0x13
 3488 00ae 02       		.uleb128 0x2
 3489 00af 18       		.uleb128 0x18
 3490 00b0 00       		.byte	0
 3491 00b1 00       		.byte	0
 3492 00b2 0E       		.uleb128 0xe
 3493 00b3 01       		.uleb128 0x1
 3494 00b4 01       		.byte	0x1
 3495 00b5 49       		.uleb128 0x49
 3496 00b6 13       		.uleb128 0x13
 3497 00b7 01       		.uleb128 0x1
 3498 00b8 13       		.uleb128 0x13
 3499 00b9 00       		.byte	0
 3500 00ba 00       		.byte	0
 3501 00bb 0F       		.uleb128 0xf
 3502 00bc 21       		.uleb128 0x21
 3503 00bd 00       		.byte	0
 3504 00be 49       		.uleb128 0x49
 3505 00bf 13       		.uleb128 0x13
 3506 00c0 2F       		.uleb128 0x2f
 3507 00c1 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 73


 3508 00c2 00       		.byte	0
 3509 00c3 00       		.byte	0
 3510 00c4 10       		.uleb128 0x10
 3511 00c5 2E       		.uleb128 0x2e
 3512 00c6 01       		.byte	0x1
 3513 00c7 3F       		.uleb128 0x3f
 3514 00c8 19       		.uleb128 0x19
 3515 00c9 03       		.uleb128 0x3
 3516 00ca 0E       		.uleb128 0xe
 3517 00cb 3A       		.uleb128 0x3a
 3518 00cc 0B       		.uleb128 0xb
 3519 00cd 3B       		.uleb128 0x3b
 3520 00ce 0B       		.uleb128 0xb
 3521 00cf 27       		.uleb128 0x27
 3522 00d0 19       		.uleb128 0x19
 3523 00d1 11       		.uleb128 0x11
 3524 00d2 01       		.uleb128 0x1
 3525 00d3 12       		.uleb128 0x12
 3526 00d4 06       		.uleb128 0x6
 3527 00d5 40       		.uleb128 0x40
 3528 00d6 18       		.uleb128 0x18
 3529 00d7 9742     		.uleb128 0x2117
 3530 00d9 19       		.uleb128 0x19
 3531 00da 01       		.uleb128 0x1
 3532 00db 13       		.uleb128 0x13
 3533 00dc 00       		.byte	0
 3534 00dd 00       		.byte	0
 3535 00de 11       		.uleb128 0x11
 3536 00df 05       		.uleb128 0x5
 3537 00e0 00       		.byte	0
 3538 00e1 03       		.uleb128 0x3
 3539 00e2 0E       		.uleb128 0xe
 3540 00e3 3A       		.uleb128 0x3a
 3541 00e4 0B       		.uleb128 0xb
 3542 00e5 3B       		.uleb128 0x3b
 3543 00e6 0B       		.uleb128 0xb
 3544 00e7 49       		.uleb128 0x49
 3545 00e8 13       		.uleb128 0x13
 3546 00e9 02       		.uleb128 0x2
 3547 00ea 18       		.uleb128 0x18
 3548 00eb 00       		.byte	0
 3549 00ec 00       		.byte	0
 3550 00ed 12       		.uleb128 0x12
 3551 00ee 2E       		.uleb128 0x2e
 3552 00ef 00       		.byte	0
 3553 00f0 3F       		.uleb128 0x3f
 3554 00f1 19       		.uleb128 0x19
 3555 00f2 03       		.uleb128 0x3
 3556 00f3 0E       		.uleb128 0xe
 3557 00f4 3A       		.uleb128 0x3a
 3558 00f5 0B       		.uleb128 0xb
 3559 00f6 3B       		.uleb128 0x3b
 3560 00f7 0B       		.uleb128 0xb
 3561 00f8 11       		.uleb128 0x11
 3562 00f9 01       		.uleb128 0x1
 3563 00fa 12       		.uleb128 0x12
 3564 00fb 06       		.uleb128 0x6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 74


 3565 00fc 40       		.uleb128 0x40
 3566 00fd 18       		.uleb128 0x18
 3567 00fe 9642     		.uleb128 0x2116
 3568 0100 19       		.uleb128 0x19
 3569 0101 00       		.byte	0
 3570 0102 00       		.byte	0
 3571 0103 13       		.uleb128 0x13
 3572 0104 2E       		.uleb128 0x2e
 3573 0105 00       		.byte	0
 3574 0106 3F       		.uleb128 0x3f
 3575 0107 19       		.uleb128 0x19
 3576 0108 03       		.uleb128 0x3
 3577 0109 0E       		.uleb128 0xe
 3578 010a 3A       		.uleb128 0x3a
 3579 010b 0B       		.uleb128 0xb
 3580 010c 3B       		.uleb128 0x3b
 3581 010d 0B       		.uleb128 0xb
 3582 010e 11       		.uleb128 0x11
 3583 010f 01       		.uleb128 0x1
 3584 0110 12       		.uleb128 0x12
 3585 0111 06       		.uleb128 0x6
 3586 0112 40       		.uleb128 0x40
 3587 0113 18       		.uleb128 0x18
 3588 0114 9742     		.uleb128 0x2117
 3589 0116 19       		.uleb128 0x19
 3590 0117 00       		.byte	0
 3591 0118 00       		.byte	0
 3592 0119 14       		.uleb128 0x14
 3593 011a 2E       		.uleb128 0x2e
 3594 011b 01       		.byte	0x1
 3595 011c 3F       		.uleb128 0x3f
 3596 011d 19       		.uleb128 0x19
 3597 011e 03       		.uleb128 0x3
 3598 011f 0E       		.uleb128 0xe
 3599 0120 3A       		.uleb128 0x3a
 3600 0121 0B       		.uleb128 0xb
 3601 0122 3B       		.uleb128 0x3b
 3602 0123 0B       		.uleb128 0xb
 3603 0124 27       		.uleb128 0x27
 3604 0125 19       		.uleb128 0x19
 3605 0126 11       		.uleb128 0x11
 3606 0127 01       		.uleb128 0x1
 3607 0128 12       		.uleb128 0x12
 3608 0129 06       		.uleb128 0x6
 3609 012a 40       		.uleb128 0x40
 3610 012b 18       		.uleb128 0x18
 3611 012c 9642     		.uleb128 0x2116
 3612 012e 19       		.uleb128 0x19
 3613 012f 01       		.uleb128 0x1
 3614 0130 13       		.uleb128 0x13
 3615 0131 00       		.byte	0
 3616 0132 00       		.byte	0
 3617 0133 15       		.uleb128 0x15
 3618 0134 2E       		.uleb128 0x2e
 3619 0135 00       		.byte	0
 3620 0136 3F       		.uleb128 0x3f
 3621 0137 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 75


 3622 0138 03       		.uleb128 0x3
 3623 0139 0E       		.uleb128 0xe
 3624 013a 3A       		.uleb128 0x3a
 3625 013b 0B       		.uleb128 0xb
 3626 013c 3B       		.uleb128 0x3b
 3627 013d 05       		.uleb128 0x5
 3628 013e 27       		.uleb128 0x27
 3629 013f 19       		.uleb128 0x19
 3630 0140 11       		.uleb128 0x11
 3631 0141 01       		.uleb128 0x1
 3632 0142 12       		.uleb128 0x12
 3633 0143 06       		.uleb128 0x6
 3634 0144 40       		.uleb128 0x40
 3635 0145 18       		.uleb128 0x18
 3636 0146 9742     		.uleb128 0x2117
 3637 0148 19       		.uleb128 0x19
 3638 0149 00       		.byte	0
 3639 014a 00       		.byte	0
 3640 014b 16       		.uleb128 0x16
 3641 014c 2E       		.uleb128 0x2e
 3642 014d 00       		.byte	0
 3643 014e 3F       		.uleb128 0x3f
 3644 014f 19       		.uleb128 0x19
 3645 0150 03       		.uleb128 0x3
 3646 0151 0E       		.uleb128 0xe
 3647 0152 3A       		.uleb128 0x3a
 3648 0153 0B       		.uleb128 0xb
 3649 0154 3B       		.uleb128 0x3b
 3650 0155 05       		.uleb128 0x5
 3651 0156 27       		.uleb128 0x27
 3652 0157 19       		.uleb128 0x19
 3653 0158 11       		.uleb128 0x11
 3654 0159 01       		.uleb128 0x1
 3655 015a 12       		.uleb128 0x12
 3656 015b 06       		.uleb128 0x6
 3657 015c 40       		.uleb128 0x40
 3658 015d 18       		.uleb128 0x18
 3659 015e 9642     		.uleb128 0x2116
 3660 0160 19       		.uleb128 0x19
 3661 0161 00       		.byte	0
 3662 0162 00       		.byte	0
 3663 0163 17       		.uleb128 0x17
 3664 0164 2E       		.uleb128 0x2e
 3665 0165 01       		.byte	0x1
 3666 0166 3F       		.uleb128 0x3f
 3667 0167 19       		.uleb128 0x19
 3668 0168 03       		.uleb128 0x3
 3669 0169 0E       		.uleb128 0xe
 3670 016a 3A       		.uleb128 0x3a
 3671 016b 0B       		.uleb128 0xb
 3672 016c 3B       		.uleb128 0x3b
 3673 016d 05       		.uleb128 0x5
 3674 016e 11       		.uleb128 0x11
 3675 016f 01       		.uleb128 0x1
 3676 0170 12       		.uleb128 0x12
 3677 0171 06       		.uleb128 0x6
 3678 0172 40       		.uleb128 0x40
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 76


 3679 0173 18       		.uleb128 0x18
 3680 0174 9642     		.uleb128 0x2116
 3681 0176 19       		.uleb128 0x19
 3682 0177 01       		.uleb128 0x1
 3683 0178 13       		.uleb128 0x13
 3684 0179 00       		.byte	0
 3685 017a 00       		.byte	0
 3686 017b 18       		.uleb128 0x18
 3687 017c 34       		.uleb128 0x34
 3688 017d 00       		.byte	0
 3689 017e 03       		.uleb128 0x3
 3690 017f 0E       		.uleb128 0xe
 3691 0180 3A       		.uleb128 0x3a
 3692 0181 0B       		.uleb128 0xb
 3693 0182 3B       		.uleb128 0x3b
 3694 0183 05       		.uleb128 0x5
 3695 0184 49       		.uleb128 0x49
 3696 0185 13       		.uleb128 0x13
 3697 0186 02       		.uleb128 0x2
 3698 0187 18       		.uleb128 0x18
 3699 0188 00       		.byte	0
 3700 0189 00       		.byte	0
 3701 018a 19       		.uleb128 0x19
 3702 018b 2E       		.uleb128 0x2e
 3703 018c 00       		.byte	0
 3704 018d 3F       		.uleb128 0x3f
 3705 018e 19       		.uleb128 0x19
 3706 018f 03       		.uleb128 0x3
 3707 0190 0E       		.uleb128 0xe
 3708 0191 3A       		.uleb128 0x3a
 3709 0192 0B       		.uleb128 0xb
 3710 0193 3B       		.uleb128 0x3b
 3711 0194 05       		.uleb128 0x5
 3712 0195 49       		.uleb128 0x49
 3713 0196 13       		.uleb128 0x13
 3714 0197 11       		.uleb128 0x11
 3715 0198 01       		.uleb128 0x1
 3716 0199 12       		.uleb128 0x12
 3717 019a 06       		.uleb128 0x6
 3718 019b 40       		.uleb128 0x40
 3719 019c 18       		.uleb128 0x18
 3720 019d 9642     		.uleb128 0x2116
 3721 019f 19       		.uleb128 0x19
 3722 01a0 00       		.byte	0
 3723 01a1 00       		.byte	0
 3724 01a2 1A       		.uleb128 0x1a
 3725 01a3 2E       		.uleb128 0x2e
 3726 01a4 01       		.byte	0x1
 3727 01a5 3F       		.uleb128 0x3f
 3728 01a6 19       		.uleb128 0x19
 3729 01a7 03       		.uleb128 0x3
 3730 01a8 0E       		.uleb128 0xe
 3731 01a9 3A       		.uleb128 0x3a
 3732 01aa 0B       		.uleb128 0xb
 3733 01ab 3B       		.uleb128 0x3b
 3734 01ac 05       		.uleb128 0x5
 3735 01ad 27       		.uleb128 0x27
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 77


 3736 01ae 19       		.uleb128 0x19
 3737 01af 11       		.uleb128 0x11
 3738 01b0 01       		.uleb128 0x1
 3739 01b1 12       		.uleb128 0x12
 3740 01b2 06       		.uleb128 0x6
 3741 01b3 40       		.uleb128 0x40
 3742 01b4 18       		.uleb128 0x18
 3743 01b5 9642     		.uleb128 0x2116
 3744 01b7 19       		.uleb128 0x19
 3745 01b8 01       		.uleb128 0x1
 3746 01b9 13       		.uleb128 0x13
 3747 01ba 00       		.byte	0
 3748 01bb 00       		.byte	0
 3749 01bc 1B       		.uleb128 0x1b
 3750 01bd 05       		.uleb128 0x5
 3751 01be 00       		.byte	0
 3752 01bf 03       		.uleb128 0x3
 3753 01c0 08       		.uleb128 0x8
 3754 01c1 3A       		.uleb128 0x3a
 3755 01c2 0B       		.uleb128 0xb
 3756 01c3 3B       		.uleb128 0x3b
 3757 01c4 05       		.uleb128 0x5
 3758 01c5 49       		.uleb128 0x49
 3759 01c6 13       		.uleb128 0x13
 3760 01c7 02       		.uleb128 0x2
 3761 01c8 18       		.uleb128 0x18
 3762 01c9 00       		.byte	0
 3763 01ca 00       		.byte	0
 3764 01cb 1C       		.uleb128 0x1c
 3765 01cc 34       		.uleb128 0x34
 3766 01cd 00       		.byte	0
 3767 01ce 03       		.uleb128 0x3
 3768 01cf 08       		.uleb128 0x8
 3769 01d0 3A       		.uleb128 0x3a
 3770 01d1 0B       		.uleb128 0xb
 3771 01d2 3B       		.uleb128 0x3b
 3772 01d3 05       		.uleb128 0x5
 3773 01d4 49       		.uleb128 0x49
 3774 01d5 13       		.uleb128 0x13
 3775 01d6 02       		.uleb128 0x2
 3776 01d7 18       		.uleb128 0x18
 3777 01d8 00       		.byte	0
 3778 01d9 00       		.byte	0
 3779 01da 1D       		.uleb128 0x1d
 3780 01db 34       		.uleb128 0x34
 3781 01dc 00       		.byte	0
 3782 01dd 03       		.uleb128 0x3
 3783 01de 0E       		.uleb128 0xe
 3784 01df 3A       		.uleb128 0x3a
 3785 01e0 0B       		.uleb128 0xb
 3786 01e1 3B       		.uleb128 0x3b
 3787 01e2 05       		.uleb128 0x5
 3788 01e3 49       		.uleb128 0x49
 3789 01e4 13       		.uleb128 0x13
 3790 01e5 3F       		.uleb128 0x3f
 3791 01e6 19       		.uleb128 0x19
 3792 01e7 3C       		.uleb128 0x3c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 78


 3793 01e8 19       		.uleb128 0x19
 3794 01e9 00       		.byte	0
 3795 01ea 00       		.byte	0
 3796 01eb 1E       		.uleb128 0x1e
 3797 01ec 35       		.uleb128 0x35
 3798 01ed 00       		.byte	0
 3799 01ee 49       		.uleb128 0x49
 3800 01ef 13       		.uleb128 0x13
 3801 01f0 00       		.byte	0
 3802 01f1 00       		.byte	0
 3803 01f2 1F       		.uleb128 0x1f
 3804 01f3 34       		.uleb128 0x34
 3805 01f4 00       		.byte	0
 3806 01f5 03       		.uleb128 0x3
 3807 01f6 08       		.uleb128 0x8
 3808 01f7 3A       		.uleb128 0x3a
 3809 01f8 0B       		.uleb128 0xb
 3810 01f9 3B       		.uleb128 0x3b
 3811 01fa 0B       		.uleb128 0xb
 3812 01fb 49       		.uleb128 0x49
 3813 01fc 13       		.uleb128 0x13
 3814 01fd 3F       		.uleb128 0x3f
 3815 01fe 19       		.uleb128 0x19
 3816 01ff 02       		.uleb128 0x2
 3817 0200 18       		.uleb128 0x18
 3818 0201 00       		.byte	0
 3819 0202 00       		.byte	0
 3820 0203 20       		.uleb128 0x20
 3821 0204 34       		.uleb128 0x34
 3822 0205 00       		.byte	0
 3823 0206 03       		.uleb128 0x3
 3824 0207 0E       		.uleb128 0xe
 3825 0208 3A       		.uleb128 0x3a
 3826 0209 0B       		.uleb128 0xb
 3827 020a 3B       		.uleb128 0x3b
 3828 020b 0B       		.uleb128 0xb
 3829 020c 49       		.uleb128 0x49
 3830 020d 13       		.uleb128 0x13
 3831 020e 3F       		.uleb128 0x3f
 3832 020f 19       		.uleb128 0x19
 3833 0210 02       		.uleb128 0x2
 3834 0211 18       		.uleb128 0x18
 3835 0212 00       		.byte	0
 3836 0213 00       		.byte	0
 3837 0214 00       		.byte	0
 3838              		.section	.debug_aranges,"",%progbits
 3839 0000 EC000000 		.4byte	0xec
 3840 0004 0200     		.2byte	0x2
 3841 0006 00000000 		.4byte	.Ldebug_info0
 3842 000a 04       		.byte	0x4
 3843 000b 00       		.byte	0
 3844 000c 0000     		.2byte	0
 3845 000e 0000     		.2byte	0
 3846 0010 00000000 		.4byte	.LFB63
 3847 0014 60010000 		.4byte	.LFE63-.LFB63
 3848 0018 00000000 		.4byte	.LFB64
 3849 001c 2C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 79


 3850 0020 00000000 		.4byte	.LFB65
 3851 0024 30000000 		.4byte	.LFE65-.LFB65
 3852 0028 00000000 		.4byte	.LFB66
 3853 002c 0E000000 		.4byte	.LFE66-.LFB66
 3854 0030 00000000 		.4byte	.LFB67
 3855 0034 0E000000 		.4byte	.LFE67-.LFB67
 3856 0038 00000000 		.4byte	.LFB68
 3857 003c 0E000000 		.4byte	.LFE68-.LFB68
 3858 0040 00000000 		.4byte	.LFB69
 3859 0044 2C000000 		.4byte	.LFE69-.LFB69
 3860 0048 00000000 		.4byte	.LFB70
 3861 004c 2C000000 		.4byte	.LFE70-.LFB70
 3862 0050 00000000 		.4byte	.LFB71
 3863 0054 14000000 		.4byte	.LFE71-.LFB71
 3864 0058 00000000 		.4byte	.LFB72
 3865 005c 18000000 		.4byte	.LFE72-.LFB72
 3866 0060 00000000 		.4byte	.LFB73
 3867 0064 34000000 		.4byte	.LFE73-.LFB73
 3868 0068 00000000 		.4byte	.LFB74
 3869 006c 98000000 		.4byte	.LFE74-.LFB74
 3870 0070 00000000 		.4byte	.LFB75
 3871 0074 9C000000 		.4byte	.LFE75-.LFB75
 3872 0078 00000000 		.4byte	.LFB76
 3873 007c 0C000000 		.4byte	.LFE76-.LFB76
 3874 0080 00000000 		.4byte	.LFB77
 3875 0084 2C000000 		.4byte	.LFE77-.LFB77
 3876 0088 00000000 		.4byte	.LFB78
 3877 008c B8000000 		.4byte	.LFE78-.LFB78
 3878 0090 00000000 		.4byte	.LFB79
 3879 0094 68000000 		.4byte	.LFE79-.LFB79
 3880 0098 00000000 		.4byte	.LFB80
 3881 009c 18000000 		.4byte	.LFE80-.LFB80
 3882 00a0 00000000 		.4byte	.LFB81
 3883 00a4 1C000000 		.4byte	.LFE81-.LFB81
 3884 00a8 00000000 		.4byte	.LFB82
 3885 00ac 0A000000 		.4byte	.LFE82-.LFB82
 3886 00b0 00000000 		.4byte	.LFB83
 3887 00b4 D8010000 		.4byte	.LFE83-.LFB83
 3888 00b8 00000000 		.4byte	.LFB84
 3889 00bc C0000000 		.4byte	.LFE84-.LFB84
 3890 00c0 00000000 		.4byte	.LFB85
 3891 00c4 B8000000 		.4byte	.LFE85-.LFB85
 3892 00c8 00000000 		.4byte	.LFB86
 3893 00cc B8000000 		.4byte	.LFE86-.LFB86
 3894 00d0 00000000 		.4byte	.LFB87
 3895 00d4 68000000 		.4byte	.LFE87-.LFB87
 3896 00d8 00000000 		.4byte	.LFB88
 3897 00dc 50000000 		.4byte	.LFE88-.LFB88
 3898 00e0 00000000 		.4byte	.LFB89
 3899 00e4 3A000000 		.4byte	.LFE89-.LFB89
 3900 00e8 00000000 		.4byte	0
 3901 00ec 00000000 		.4byte	0
 3902              		.section	.debug_ranges,"",%progbits
 3903              	.Ldebug_ranges0:
 3904 0000 00000000 		.4byte	.LFB63
 3905 0004 60010000 		.4byte	.LFE63
 3906 0008 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 80


 3907 000c 2C000000 		.4byte	.LFE64
 3908 0010 00000000 		.4byte	.LFB65
 3909 0014 30000000 		.4byte	.LFE65
 3910 0018 00000000 		.4byte	.LFB66
 3911 001c 0E000000 		.4byte	.LFE66
 3912 0020 00000000 		.4byte	.LFB67
 3913 0024 0E000000 		.4byte	.LFE67
 3914 0028 00000000 		.4byte	.LFB68
 3915 002c 0E000000 		.4byte	.LFE68
 3916 0030 00000000 		.4byte	.LFB69
 3917 0034 2C000000 		.4byte	.LFE69
 3918 0038 00000000 		.4byte	.LFB70
 3919 003c 2C000000 		.4byte	.LFE70
 3920 0040 00000000 		.4byte	.LFB71
 3921 0044 14000000 		.4byte	.LFE71
 3922 0048 00000000 		.4byte	.LFB72
 3923 004c 18000000 		.4byte	.LFE72
 3924 0050 00000000 		.4byte	.LFB73
 3925 0054 34000000 		.4byte	.LFE73
 3926 0058 00000000 		.4byte	.LFB74
 3927 005c 98000000 		.4byte	.LFE74
 3928 0060 00000000 		.4byte	.LFB75
 3929 0064 9C000000 		.4byte	.LFE75
 3930 0068 00000000 		.4byte	.LFB76
 3931 006c 0C000000 		.4byte	.LFE76
 3932 0070 00000000 		.4byte	.LFB77
 3933 0074 2C000000 		.4byte	.LFE77
 3934 0078 00000000 		.4byte	.LFB78
 3935 007c B8000000 		.4byte	.LFE78
 3936 0080 00000000 		.4byte	.LFB79
 3937 0084 68000000 		.4byte	.LFE79
 3938 0088 00000000 		.4byte	.LFB80
 3939 008c 18000000 		.4byte	.LFE80
 3940 0090 00000000 		.4byte	.LFB81
 3941 0094 1C000000 		.4byte	.LFE81
 3942 0098 00000000 		.4byte	.LFB82
 3943 009c 0A000000 		.4byte	.LFE82
 3944 00a0 00000000 		.4byte	.LFB83
 3945 00a4 D8010000 		.4byte	.LFE83
 3946 00a8 00000000 		.4byte	.LFB84
 3947 00ac C0000000 		.4byte	.LFE84
 3948 00b0 00000000 		.4byte	.LFB85
 3949 00b4 B8000000 		.4byte	.LFE85
 3950 00b8 00000000 		.4byte	.LFB86
 3951 00bc B8000000 		.4byte	.LFE86
 3952 00c0 00000000 		.4byte	.LFB87
 3953 00c4 68000000 		.4byte	.LFE87
 3954 00c8 00000000 		.4byte	.LFB88
 3955 00cc 50000000 		.4byte	.LFE88
 3956 00d0 00000000 		.4byte	.LFB89
 3957 00d4 3A000000 		.4byte	.LFE89
 3958 00d8 00000000 		.4byte	0
 3959 00dc 00000000 		.4byte	0
 3960              		.section	.debug_line,"",%progbits
 3961              	.Ldebug_line0:
 3962 0000 32040000 		.section	.debug_str,"MS",%progbits,1
 3962      02005501 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 81


 3962      00000201 
 3962      FB0E0D00 
 3962      01010101 
 3963              	.LASF102:
 3964 0000 64697265 		.ascii	"direction\000"
 3964      6374696F 
 3964      6E00
 3965              	.LASF23:
 3966 000a 52545552 		.ascii	"RTURN\000"
 3966      4E00
 3967              	.LASF108:
 3968 0010 71756164 		.ascii	"quad_diff1\000"
 3968      5F646966 
 3968      663100
 3969              	.LASF109:
 3970 001b 71756164 		.ascii	"quad_diff2\000"
 3970      5F646966 
 3970      663200
 3971              	.LASF70:
 3972 0026 77686565 		.ascii	"wheel_2_str\000"
 3972      6C5F325F 
 3972      73747200 
 3973              	.LASF68:
 3974 0032 51756164 		.ascii	"Quad_Dec_response\000"
 3974      5F446563 
 3974      5F726573 
 3974      706F6E73 
 3974      6500
 3975              	.LASF117:
 3976 0044 70726576 		.ascii	"prevVoltage\000"
 3976      566F6C74 
 3976      61676500 
 3977              	.LASF110:
 3978 0050 73746172 		.ascii	"start_turn_count\000"
 3978      745F7475 
 3978      726E5F63 
 3978      6F756E74 
 3978      00
 3979              	.LASF8:
 3980 0061 756E7369 		.ascii	"unsigned int\000"
 3980      676E6564 
 3980      20696E74 
 3980      00
 3981              	.LASF11:
 3982 006e 5F5F696E 		.ascii	"__int32_t\000"
 3982      7433325F 
 3982      7400
 3983              	.LASF17:
 3984 0078 696E7431 		.ascii	"int16\000"
 3984      3600
 3985              	.LASF124:
 3986 007e 73797374 		.ascii	"system_state\000"
 3986      656D5F73 
 3986      74617465 
 3986      00
 3987              	.LASF22:
 3988 008b 4C545552 		.ascii	"LTURN\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 82


 3988      4E00
 3989              	.LASF66:
 3990 0091 6973725F 		.ascii	"isr_adcTimer\000"
 3990      61646354 
 3990      696D6572 
 3990      00
 3991              	.LASF118:
 3992 009e 70726576 		.ascii	"prevVoltage2\000"
 3992      566F6C74 
 3992      61676532 
 3992      00
 3993              	.LASF42:
 3994 00ab 7061636B 		.ascii	"packet_bytes\000"
 3994      65745F62 
 3994      79746573 
 3994      00
 3995              	.LASF38:
 3996 00b8 67325F78 		.ascii	"g2_xpos\000"
 3996      706F7300 
 3997              	.LASF104:
 3998 00c0 71756164 		.ascii	"quad_count1\000"
 3998      5F636F75 
 3998      6E743100 
 3999              	.LASF105:
 4000 00cc 71756164 		.ascii	"quad_count2\000"
 4000      5F636F75 
 4000      6E743200 
 4001              	.LASF98:
 4002 00d8 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4002      5F72665F 
 4002      7472616E 
 4002      736D6973 
 4002      73696F6E 
 4003              	.LASF99:
 4004 00f4 666C6167 		.ascii	"flag_print_rf\000"
 4004      5F707269 
 4004      6E745F72 
 4004      6600
 4005              	.LASF125:
 4006 0102 6D6F7665 		.ascii	"movement_state\000"
 4006      6D656E74 
 4006      5F737461 
 4006      746500
 4007              	.LASF82:
 4008 0111 75736250 		.ascii	"usbPutString\000"
 4008      75745374 
 4008      72696E67 
 4008      00
 4009              	.LASF53:
 4010 011e 696E6974 		.ascii	"initForward\000"
 4010      466F7277 
 4010      61726400 
 4011              	.LASF41:
 4012 012a 67325F64 		.ascii	"g2_direction\000"
 4012      69726563 
 4012      74696F6E 
 4012      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 83


 4013              	.LASF62:
 4014 0137 6973725F 		.ascii	"isr_quad1\000"
 4014      71756164 
 4014      3100
 4015              	.LASF18:
 4016 0141 666C6F61 		.ascii	"float\000"
 4016      7400
 4017              	.LASF56:
 4018 0147 73657453 		.ascii	"setSpeed\000"
 4018      70656564 
 4018      00
 4019              	.LASF122:
 4020 0150 75736242 		.ascii	"usbBuffer\000"
 4020      75666665 
 4020      7200
 4021              	.LASF26:
 4022 015a 696E6465 		.ascii	"index\000"
 4022      7800
 4023              	.LASF21:
 4024 0160 44524956 		.ascii	"DRIVE\000"
 4024      4500
 4025              	.LASF44:
 4026 0166 73747269 		.ascii	"string_packet\000"
 4026      6E675F70 
 4026      61636B65 
 4026      7400
 4027              	.LASF48:
 4028 0174 64726976 		.ascii	"driveForwards\000"
 4028      65466F72 
 4028      77617264 
 4028      7300
 4029              	.LASF49:
 4030 0182 7475726E 		.ascii	"turnLeft\000"
 4030      4C656674 
 4030      00
 4031              	.LASF7:
 4032 018b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4032      206C6F6E 
 4032      6720756E 
 4032      7369676E 
 4032      65642069 
 4033              	.LASF95:
 4034 01a2 666C6167 		.ascii	"flag_packet\000"
 4034      5F706163 
 4034      6B657400 
 4035              	.LASF63:
 4036 01ae 6973725F 		.ascii	"isr_turn_timer\000"
 4036      7475726E 
 4036      5F74696D 
 4036      657200
 4037              	.LASF51:
 4038 01bd 696E6974 		.ascii	"initTurnLeft\000"
 4038      5475726E 
 4038      4C656674 
 4038      00
 4039              	.LASF116:
 4040 01ca 706F7274 		.ascii	"portOpen\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 84


 4040      4F70656E 
 4040      00
 4041              	.LASF54:
 4042 01d3 696E6974 		.ascii	"initBrake\000"
 4042      4272616B 
 4042      6500
 4043              	.LASF91:
 4044 01dd 666C6167 		.ascii	"flag_ts_update\000"
 4044      5F74735F 
 4044      75706461 
 4044      746500
 4045              	.LASF76:
 4046 01ec 7363616C 		.ascii	"scalingFactor\000"
 4046      696E6746 
 4046      6163746F 
 4046      7200
 4047              	.LASF71:
 4048 01fa 6C656674 		.ascii	"leftSpeed\000"
 4048      53706565 
 4048      6400
 4049              	.LASF90:
 4050 0204 666C6167 		.ascii	"flag_ts_enc\000"
 4050      5F74735F 
 4050      656E6300 
 4051              	.LASF126:
 4052 0210 62797465 		.ascii	"byteCount\000"
 4052      436F756E 
 4052      7400
 4053              	.LASF65:
 4054 021a 62757474 		.ascii	"button\000"
 4054      6F6E00
 4055              	.LASF78:
 4056 0221 72657375 		.ascii	"result_str\000"
 4056      6C745F73 
 4056      747200
 4057              	.LASF84:
 4058 022c 75617274 		.ascii	"uart_set_PWM\000"
 4058      5F736574 
 4058      5F50574D 
 4058      00
 4059              	.LASF28:
 4060 0239 726F626F 		.ascii	"robot_ypos\000"
 4060      745F7970 
 4060      6F7300
 4061              	.LASF89:
 4062 0244 74735F64 		.ascii	"ts_display\000"
 4062      6973706C 
 4062      617900
 4063              	.LASF75:
 4064 024f 7072696E 		.ascii	"print_ADC\000"
 4064      745F4144 
 4064      4300
 4065              	.LASF69:
 4066 0259 77686565 		.ascii	"wheel_1_str\000"
 4066      6C5F315F 
 4066      73747200 
 4067              	.LASF10:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 85


 4068 0265 63686172 		.ascii	"char\000"
 4068      00
 4069              	.LASF32:
 4070 026a 67305F73 		.ascii	"g0_speed\000"
 4070      70656564 
 4070      00
 4071              	.LASF114:
 4072 0273 72696768 		.ascii	"rightSpeedLimit\000"
 4072      74537065 
 4072      65644C69 
 4072      6D697400 
 4073              	.LASF14:
 4074 0283 75696E74 		.ascii	"uint16\000"
 4074      313600
 4075              	.LASF16:
 4076 028a 696E7438 		.ascii	"int8\000"
 4076      00
 4077              	.LASF37:
 4078 028f 67315F64 		.ascii	"g1_direction\000"
 4078      69726563 
 4078      74696F6E 
 4078      00
 4079              	.LASF73:
 4080 029c 696E7465 		.ascii	"interCalc\000"
 4080      7243616C 
 4080      6300
 4081              	.LASF45:
 4082 02a6 72696768 		.ascii	"right\000"
 4082      7400
 4083              	.LASF6:
 4084 02ac 6C6F6E67 		.ascii	"long long int\000"
 4084      206C6F6E 
 4084      6720696E 
 4084      7400
 4085              	.LASF123:
 4086 02ba 62756666 		.ascii	"buffer_state\000"
 4086      65725F73 
 4086      74617465 
 4086      00
 4087              	.LASF34:
 4088 02c7 67315F78 		.ascii	"g1_xpos\000"
 4088      706F7300 
 4089              	.LASF128:
 4090 02cf 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4090      4320342E 
 4090      392E3320 
 4090      32303135 
 4090      30333033 
 4091 0302 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4091      20726576 
 4091      6973696F 
 4091      6E203232 
 4091      31323230 
 4092 0335 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4092      66756E63 
 4092      74696F6E 
 4092      2D736563 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 86


 4092      74696F6E 
 4093              	.LASF40:
 4094 035d 67325F73 		.ascii	"g2_speed\000"
 4094      70656564 
 4094      00
 4095              	.LASF31:
 4096 0366 67305F79 		.ascii	"g0_ypos\000"
 4096      706F7300 
 4097              	.LASF58:
 4098 036e 72665F63 		.ascii	"rf_char\000"
 4098      68617200 
 4099              	.LASF72:
 4100 0376 72696768 		.ascii	"rightSpeed\000"
 4100      74537065 
 4100      656400
 4101              	.LASF88:
 4102 0381 74735F73 		.ascii	"ts_speed\000"
 4102      70656564 
 4102      00
 4103              	.LASF15:
 4104 038a 75696E74 		.ascii	"uint32\000"
 4104      333200
 4105              	.LASF132:
 4106 0391 64617461 		.ascii	"data_main\000"
 4106      5F6D6169 
 4106      6E00
 4107              	.LASF77:
 4108 039b 636F6E76 		.ascii	"converted_val\000"
 4108      65727465 
 4108      645F7661 
 4108      6C00
 4109              	.LASF25:
 4110 03a9 72737369 		.ascii	"rssi\000"
 4110      00
 4111              	.LASF33:
 4112 03ae 67305F64 		.ascii	"g0_direction\000"
 4112      69726563 
 4112      74696F6E 
 4112      00
 4113              	.LASF100:
 4114 03bb 666C6167 		.ascii	"flag_receive_ADC\000"
 4114      5F726563 
 4114      65697665 
 4114      5F414443 
 4114      00
 4115              	.LASF24:
 4116 03cc 53544F50 		.ascii	"STOPPED\000"
 4116      50454400 
 4117              	.LASF59:
 4118 03d4 42545F72 		.ascii	"BT_rxInt\000"
 4118      78496E74 
 4118      00
 4119              	.LASF20:
 4120 03dd 6C6F6E67 		.ascii	"long double\000"
 4120      20646F75 
 4120      626C6500 
 4121              	.LASF57:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 87


 4122 03e9 7278496E 		.ascii	"rxInt\000"
 4122      7400
 4123              	.LASF111:
 4124 03ef 6C656674 		.ascii	"left_duty_cycle\000"
 4124      5F647574 
 4124      795F6379 
 4124      636C6500 
 4125              	.LASF92:
 4126 03ff 666C6167 		.ascii	"flag_ts_speed\000"
 4126      5F74735F 
 4126      73706565 
 4126      6400
 4127              	.LASF97:
 4128 040d 64617461 		.ascii	"dataready_flag\000"
 4128      72656164 
 4128      795F666C 
 4128      616700
 4129              	.LASF94:
 4130 041c 666C6167 		.ascii	"flag_rx\000"
 4130      5F727800 
 4131              	.LASF2:
 4132 0424 73686F72 		.ascii	"short int\000"
 4132      7420696E 
 4132      7400
 4133              	.LASF101:
 4134 042e 6164635F 		.ascii	"adc_result\000"
 4134      72657375 
 4134      6C7400
 4135              	.LASF103:
 4136 0439 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 4136      5F63616C 
 4136      635F7768 
 4136      65656C73 
 4136      70656564 
 4137              	.LASF4:
 4138 044e 6C6F6E67 		.ascii	"long int\000"
 4138      20696E74 
 4138      00
 4139              	.LASF52:
 4140 0457 696E6974 		.ascii	"initTurnRight\000"
 4140      5475726E 
 4140      52696768 
 4140      7400
 4141              	.LASF85:
 4142 0465 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4142      52784275 
 4142      66666572 
 4142      00
 4143              	.LASF80:
 4144 0472 7072696E 		.ascii	"printString\000"
 4144      74537472 
 4144      696E6700 
 4145              	.LASF87:
 4146 047e 74735F75 		.ascii	"ts_update\000"
 4146      70646174 
 4146      6500
 4147              	.LASF113:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 88


 4148 0488 6C656674 		.ascii	"leftSpeedLimit\000"
 4148      53706565 
 4148      644C696D 
 4148      697400
 4149              	.LASF39:
 4150 0497 67325F79 		.ascii	"g2_ypos\000"
 4150      706F7300 
 4151              	.LASF46:
 4152 049f 6C656674 		.ascii	"left\000"
 4152      00
 4153              	.LASF50:
 4154 04a4 7475726E 		.ascii	"turnRight\000"
 4154      52696768 
 4154      7400
 4155              	.LASF35:
 4156 04ae 67315F79 		.ascii	"g1_ypos\000"
 4156      706F7300 
 4157              	.LASF61:
 4158 04b6 6164635F 		.ascii	"adc_isr\000"
 4158      69737200 
 4159              	.LASF9:
 4160 04be 73697A65 		.ascii	"sizetype\000"
 4160      74797065 
 4160      00
 4161              	.LASF5:
 4162 04c7 6C6F6E67 		.ascii	"long unsigned int\000"
 4162      20756E73 
 4162      69676E65 
 4162      6420696E 
 4162      7400
 4163              	.LASF43:
 4164 04d9 62797465 		.ascii	"byte_packet\000"
 4164      5F706163 
 4164      6B657400 
 4165              	.LASF12:
 4166 04e5 696E7433 		.ascii	"int32_t\000"
 4166      325F7400 
 4167              	.LASF127:
 4168 04ed 7061636B 		.ascii	"packet\000"
 4168      657400
 4169              	.LASF27:
 4170 04f4 726F626F 		.ascii	"robot_xpos\000"
 4170      745F7870 
 4170      6F7300
 4171              	.LASF47:
 4172 04ff 6272616B 		.ascii	"brakeMotor\000"
 4172      654D6F74 
 4172      6F7200
 4173              	.LASF121:
 4174 050a 656E7472 		.ascii	"entry\000"
 4174      7900
 4175              	.LASF1:
 4176 0510 756E7369 		.ascii	"unsigned char\000"
 4176      676E6564 
 4176      20636861 
 4176      7200
 4177              	.LASF120:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 89


 4178 051e 6C696E65 		.ascii	"line\000"
 4178      00
 4179              	.LASF64:
 4180 0523 53746F70 		.ascii	"Stop_on_line\000"
 4180      5F6F6E5F 
 4180      6C696E65 
 4180      00
 4181              	.LASF86:
 4182 0530 74735F65 		.ascii	"ts_enc\000"
 4182      6E6300
 4183              	.LASF115:
 4184 0537 6272616B 		.ascii	"brakeFlag\000"
 4184      65466C61 
 4184      6700
 4185              	.LASF93:
 4186 0541 666C6167 		.ascii	"flag_ts_display\000"
 4186      5F74735F 
 4186      64697370 
 4186      6C617900 
 4187              	.LASF131:
 4188 0551 73746174 		.ascii	"state\000"
 4188      6500
 4189              	.LASF55:
 4190 0557 72657665 		.ascii	"reverseDirection\000"
 4190      72736544 
 4190      69726563 
 4190      74696F6E 
 4190      00
 4191              	.LASF119:
 4192 0568 64697370 		.ascii	"displaystring\000"
 4192      6C617973 
 4192      7472696E 
 4192      6700
 4193              	.LASF106:
 4194 0576 6C617374 		.ascii	"last_quad_count1\000"
 4194      5F717561 
 4194      645F636F 
 4194      756E7431 
 4194      00
 4195              	.LASF107:
 4196 0587 6C617374 		.ascii	"last_quad_count2\000"
 4196      5F717561 
 4196      645F636F 
 4196      756E7432 
 4196      00
 4197              	.LASF83:
 4198 0598 75736250 		.ascii	"usbPutChar\000"
 4198      75744368 
 4198      617200
 4199              	.LASF0:
 4200 05a3 7369676E 		.ascii	"signed char\000"
 4200      65642063 
 4200      68617200 
 4201              	.LASF3:
 4202 05af 73686F72 		.ascii	"short unsigned int\000"
 4202      7420756E 
 4202      7369676E 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 90


 4202      65642069 
 4202      6E7400
 4203              	.LASF29:
 4204 05c2 726F626F 		.ascii	"robot_orientation\000"
 4204      745F6F72 
 4204      69656E74 
 4204      6174696F 
 4204      6E00
 4205              	.LASF81:
 4206 05d4 6D61696E 		.ascii	"main\000"
 4206      00
 4207              	.LASF60:
 4208 05d9 42545F74 		.ascii	"BT_txInt\000"
 4208      78496E74 
 4208      00
 4209              	.LASF74:
 4210 05e2 6E657874 		.ascii	"nextSpeed\000"
 4210      53706565 
 4210      6400
 4211              	.LASF13:
 4212 05ec 75696E74 		.ascii	"uint8\000"
 4212      3800
 4213              	.LASF19:
 4214 05f2 646F7562 		.ascii	"double\000"
 4214      6C6500
 4215              	.LASF112:
 4216 05f9 72696768 		.ascii	"right_duty_cycle\000"
 4216      745F6475 
 4216      74795F63 
 4216      79636C65 
 4216      00
 4217              	.LASF67:
 4218 060a 68616E64 		.ascii	"handle_rx_binary\000"
 4218      6C655F72 
 4218      785F6269 
 4218      6E617279 
 4218      00
 4219              	.LASF130:
 4220 061b 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 4220      70315C43 
 4220      53333031 
 4220      2D546561 
 4220      6D2D5265 
 4221              	.LASF79:
 4222 0644 7072696E 		.ascii	"print_RF\000"
 4222      745F5246 
 4222      00
 4223              	.LASF30:
 4224 064d 67305F78 		.ascii	"g0_xpos\000"
 4224      706F7300 
 4225              	.LASF96:
 4226 0655 666C6167 		.ascii	"flag_KB_string\000"
 4226      5F4B425F 
 4226      73747269 
 4226      6E6700
 4227              	.LASF36:
 4228 0664 67315F73 		.ascii	"g1_speed\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccdPYmZd.s 			page 91


 4228      70656564 
 4228      00
 4229              	.LASF129:
 4230 066d 2E5C6D61 		.ascii	".\\main.c\000"
 4230      696E2E63 
 4230      00
 4231              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
