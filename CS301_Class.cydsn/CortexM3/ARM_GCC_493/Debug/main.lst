ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	prevVoltage,2,2
 263              		.comm	prevVoltage2,2,2
 264              		.global	displaystring
 265 0009 000000   		.align	2
 266              		.type	displaystring, %object
 267              		.size	displaystring, 64
 268              	displaystring:
 269 000c 43533330 		.ascii	"CS301 2016\012\000"
 269      31203230 
 269      31360A00 
 270 0018 00000000 		.space	52
 270      00000000 
 270      00000000 
 270      00000000 
 270      00000000 
 271              		.comm	line,64,4
 272              		.comm	entry,64,4
 273              		.comm	usbBuffer,64,4
 274              		.comm	buffer_state,32,4
 275              		.comm	system_state,32,4
 276              		.global	prev_movement_state
 277              		.type	prev_movement_state, %object
 278              		.size	prev_movement_state, 1
 279              	prev_movement_state:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 6


 280 004c 03       		.byte	3
 281              		.global	movement_state
 282              		.type	movement_state, %object
 283              		.size	movement_state, 1
 284              	movement_state:
 285 004d 03       		.byte	3
 286              		.global	track_mode
 287              		.bss
 288              		.type	track_mode, %object
 289              		.size	track_mode, 1
 290              	track_mode:
 291 003c 00       		.space	1
 292              		.global	byteCount
 293              		.type	byteCount, %object
 294              		.size	byteCount, 1
 295              	byteCount:
 296 003d 00       		.space	1
 297              		.comm	packet,2,4
 298              		.global	speed
 299              		.data
 300 004e 0000     		.align	3
 301              		.type	speed, %object
 302              		.size	speed, 8
 303              	speed:
 304 0050 00000000 		.word	0
 305 0054 00002E40 		.word	1076756480
 306              		.comm	tracked_direction,4,4
 307              		.global	instructions
 308              		.bss
 309 003e 0000     		.align	2
 310              		.type	instructions, %object
 311              		.size	instructions, 800
 312              	instructions:
 313 0040 00000000 		.space	800
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	instructionCount
 315              		.align	1
 316              		.type	instructionCount, %object
 317              		.size	instructionCount, 2
 318              	instructionCount:
 319 0360 0000     		.space	2
 320              		.global	instructionLength
 321              		.align	1
 322              		.type	instructionLength, %object
 323              		.size	instructionLength, 2
 324              	instructionLength:
 325 0362 0000     		.space	2
 326              		.global	sensorsDisabled
 327              		.align	2
 328              		.type	sensorsDisabled, %object
 329              		.size	sensorsDisabled, 4
 330              	sensorsDisabled:
 331 0364 00000000 		.space	4
 332              		.global	robot_direction
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 7


 333              		.data
 334              		.align	2
 335              		.type	robot_direction, %object
 336              		.size	robot_direction, 4
 337              	robot_direction:
 338 0058 02000000 		.word	2
 339              		.global	path
 340              		.bss
 341              		.align	2
 342              		.type	path, %object
 343              		.size	path, 9600
 344              	path:
 345 0368 00000000 		.space	9600
 345      00000000 
 345      00000000 
 345      00000000 
 345      00000000 
 346              		.global	start
 347              		.data
 348              		.align	2
 349              		.type	start, %object
 350              		.size	start, 8
 351              	start:
 352 005c 01000000 		.word	1
 353 0060 01000000 		.word	1
 354              		.global	destination
 355              		.align	2
 356              		.type	destination, %object
 357              		.size	destination, 8
 358              	destination:
 359 0064 0E000000 		.word	14
 360 0068 12000000 		.word	18
 361              		.global	map
 362              		.align	2
 363              		.type	map, %object
 364              		.size	map, 1140
 365              	map:
 366 006c 01000000 		.word	1
 367 0070 01000000 		.word	1
 368 0074 01000000 		.word	1
 369 0078 01000000 		.word	1
 370 007c 01000000 		.word	1
 371 0080 01000000 		.word	1
 372 0084 01000000 		.word	1
 373 0088 01000000 		.word	1
 374 008c 01000000 		.word	1
 375 0090 01000000 		.word	1
 376 0094 01000000 		.word	1
 377 0098 01000000 		.word	1
 378 009c 01000000 		.word	1
 379 00a0 01000000 		.word	1
 380 00a4 01000000 		.word	1
 381 00a8 01000000 		.word	1
 382 00ac 01000000 		.word	1
 383 00b0 01000000 		.word	1
 384 00b4 01000000 		.word	1
 385 00b8 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 8


 386 00bc 00000000 		.word	0
 387 00c0 00000000 		.word	0
 388 00c4 00000000 		.word	0
 389 00c8 00000000 		.word	0
 390 00cc 00000000 		.word	0
 391 00d0 00000000 		.word	0
 392 00d4 00000000 		.word	0
 393 00d8 00000000 		.word	0
 394 00dc 00000000 		.word	0
 395 00e0 00000000 		.word	0
 396 00e4 00000000 		.word	0
 397 00e8 00000000 		.word	0
 398 00ec 00000000 		.word	0
 399 00f0 00000000 		.word	0
 400 00f4 00000000 		.word	0
 401 00f8 00000000 		.word	0
 402 00fc 00000000 		.word	0
 403 0100 01000000 		.word	1
 404 0104 01000000 		.word	1
 405 0108 01000000 		.word	1
 406 010c 00000000 		.word	0
 407 0110 01000000 		.word	1
 408 0114 01000000 		.word	1
 409 0118 01000000 		.word	1
 410 011c 01000000 		.word	1
 411 0120 01000000 		.word	1
 412 0124 01000000 		.word	1
 413 0128 01000000 		.word	1
 414 012c 01000000 		.word	1
 415 0130 01000000 		.word	1
 416 0134 01000000 		.word	1
 417 0138 00000000 		.word	0
 418 013c 01000000 		.word	1
 419 0140 01000000 		.word	1
 420 0144 00000000 		.word	0
 421 0148 01000000 		.word	1
 422 014c 01000000 		.word	1
 423 0150 01000000 		.word	1
 424 0154 01000000 		.word	1
 425 0158 00000000 		.word	0
 426 015c 01000000 		.word	1
 427 0160 00000000 		.word	0
 428 0164 00000000 		.word	0
 429 0168 00000000 		.word	0
 430 016c 00000000 		.word	0
 431 0170 01000000 		.word	1
 432 0174 01000000 		.word	1
 433 0178 00000000 		.word	0
 434 017c 00000000 		.word	0
 435 0180 00000000 		.word	0
 436 0184 00000000 		.word	0
 437 0188 01000000 		.word	1
 438 018c 01000000 		.word	1
 439 0190 00000000 		.word	0
 440 0194 01000000 		.word	1
 441 0198 01000000 		.word	1
 442 019c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 9


 443 01a0 01000000 		.word	1
 444 01a4 00000000 		.word	0
 445 01a8 01000000 		.word	1
 446 01ac 00000000 		.word	0
 447 01b0 01000000 		.word	1
 448 01b4 01000000 		.word	1
 449 01b8 00000000 		.word	0
 450 01bc 01000000 		.word	1
 451 01c0 01000000 		.word	1
 452 01c4 01000000 		.word	1
 453 01c8 01000000 		.word	1
 454 01cc 01000000 		.word	1
 455 01d0 00000000 		.word	0
 456 01d4 01000000 		.word	1
 457 01d8 01000000 		.word	1
 458 01dc 00000000 		.word	0
 459 01e0 01000000 		.word	1
 460 01e4 01000000 		.word	1
 461 01e8 01000000 		.word	1
 462 01ec 01000000 		.word	1
 463 01f0 00000000 		.word	0
 464 01f4 01000000 		.word	1
 465 01f8 00000000 		.word	0
 466 01fc 01000000 		.word	1
 467 0200 01000000 		.word	1
 468 0204 00000000 		.word	0
 469 0208 00000000 		.word	0
 470 020c 00000000 		.word	0
 471 0210 00000000 		.word	0
 472 0214 00000000 		.word	0
 473 0218 00000000 		.word	0
 474 021c 00000000 		.word	0
 475 0220 01000000 		.word	1
 476 0224 01000000 		.word	1
 477 0228 00000000 		.word	0
 478 022c 01000000 		.word	1
 479 0230 01000000 		.word	1
 480 0234 01000000 		.word	1
 481 0238 01000000 		.word	1
 482 023c 00000000 		.word	0
 483 0240 00000000 		.word	0
 484 0244 00000000 		.word	0
 485 0248 00000000 		.word	0
 486 024c 00000000 		.word	0
 487 0250 00000000 		.word	0
 488 0254 01000000 		.word	1
 489 0258 01000000 		.word	1
 490 025c 01000000 		.word	1
 491 0260 01000000 		.word	1
 492 0264 01000000 		.word	1
 493 0268 00000000 		.word	0
 494 026c 01000000 		.word	1
 495 0270 01000000 		.word	1
 496 0274 00000000 		.word	0
 497 0278 01000000 		.word	1
 498 027c 01000000 		.word	1
 499 0280 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 10


 500 0284 01000000 		.word	1
 501 0288 01000000 		.word	1
 502 028c 01000000 		.word	1
 503 0290 01000000 		.word	1
 504 0294 01000000 		.word	1
 505 0298 01000000 		.word	1
 506 029c 00000000 		.word	0
 507 02a0 01000000 		.word	1
 508 02a4 01000000 		.word	1
 509 02a8 01000000 		.word	1
 510 02ac 00000000 		.word	0
 511 02b0 00000000 		.word	0
 512 02b4 00000000 		.word	0
 513 02b8 01000000 		.word	1
 514 02bc 01000000 		.word	1
 515 02c0 00000000 		.word	0
 516 02c4 01000000 		.word	1
 517 02c8 01000000 		.word	1
 518 02cc 01000000 		.word	1
 519 02d0 01000000 		.word	1
 520 02d4 00000000 		.word	0
 521 02d8 00000000 		.word	0
 522 02dc 00000000 		.word	0
 523 02e0 00000000 		.word	0
 524 02e4 00000000 		.word	0
 525 02e8 00000000 		.word	0
 526 02ec 01000000 		.word	1
 527 02f0 01000000 		.word	1
 528 02f4 01000000 		.word	1
 529 02f8 00000000 		.word	0
 530 02fc 01000000 		.word	1
 531 0300 00000000 		.word	0
 532 0304 01000000 		.word	1
 533 0308 01000000 		.word	1
 534 030c 00000000 		.word	0
 535 0310 01000000 		.word	1
 536 0314 01000000 		.word	1
 537 0318 01000000 		.word	1
 538 031c 01000000 		.word	1
 539 0320 00000000 		.word	0
 540 0324 01000000 		.word	1
 541 0328 00000000 		.word	0
 542 032c 01000000 		.word	1
 543 0330 01000000 		.word	1
 544 0334 00000000 		.word	0
 545 0338 01000000 		.word	1
 546 033c 01000000 		.word	1
 547 0340 01000000 		.word	1
 548 0344 00000000 		.word	0
 549 0348 01000000 		.word	1
 550 034c 00000000 		.word	0
 551 0350 01000000 		.word	1
 552 0354 01000000 		.word	1
 553 0358 00000000 		.word	0
 554 035c 01000000 		.word	1
 555 0360 01000000 		.word	1
 556 0364 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 11


 557 0368 01000000 		.word	1
 558 036c 00000000 		.word	0
 559 0370 01000000 		.word	1
 560 0374 00000000 		.word	0
 561 0378 01000000 		.word	1
 562 037c 01000000 		.word	1
 563 0380 00000000 		.word	0
 564 0384 01000000 		.word	1
 565 0388 01000000 		.word	1
 566 038c 01000000 		.word	1
 567 0390 00000000 		.word	0
 568 0394 01000000 		.word	1
 569 0398 00000000 		.word	0
 570 039c 01000000 		.word	1
 571 03a0 01000000 		.word	1
 572 03a4 00000000 		.word	0
 573 03a8 01000000 		.word	1
 574 03ac 01000000 		.word	1
 575 03b0 01000000 		.word	1
 576 03b4 01000000 		.word	1
 577 03b8 00000000 		.word	0
 578 03bc 01000000 		.word	1
 579 03c0 00000000 		.word	0
 580 03c4 00000000 		.word	0
 581 03c8 00000000 		.word	0
 582 03cc 00000000 		.word	0
 583 03d0 00000000 		.word	0
 584 03d4 00000000 		.word	0
 585 03d8 00000000 		.word	0
 586 03dc 00000000 		.word	0
 587 03e0 01000000 		.word	1
 588 03e4 00000000 		.word	0
 589 03e8 00000000 		.word	0
 590 03ec 00000000 		.word	0
 591 03f0 00000000 		.word	0
 592 03f4 01000000 		.word	1
 593 03f8 01000000 		.word	1
 594 03fc 01000000 		.word	1
 595 0400 01000000 		.word	1
 596 0404 00000000 		.word	0
 597 0408 01000000 		.word	1
 598 040c 01000000 		.word	1
 599 0410 01000000 		.word	1
 600 0414 01000000 		.word	1
 601 0418 01000000 		.word	1
 602 041c 01000000 		.word	1
 603 0420 01000000 		.word	1
 604 0424 01000000 		.word	1
 605 0428 01000000 		.word	1
 606 042c 01000000 		.word	1
 607 0430 00000000 		.word	0
 608 0434 01000000 		.word	1
 609 0438 01000000 		.word	1
 610 043c 00000000 		.word	0
 611 0440 01000000 		.word	1
 612 0444 01000000 		.word	1
 613 0448 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 12


 614 044c 00000000 		.word	0
 615 0450 00000000 		.word	0
 616 0454 00000000 		.word	0
 617 0458 00000000 		.word	0
 618 045c 00000000 		.word	0
 619 0460 00000000 		.word	0
 620 0464 00000000 		.word	0
 621 0468 00000000 		.word	0
 622 046c 00000000 		.word	0
 623 0470 00000000 		.word	0
 624 0474 00000000 		.word	0
 625 0478 00000000 		.word	0
 626 047c 00000000 		.word	0
 627 0480 00000000 		.word	0
 628 0484 00000000 		.word	0
 629 0488 00000000 		.word	0
 630 048c 00000000 		.word	0
 631 0490 01000000 		.word	1
 632 0494 01000000 		.word	1
 633 0498 01000000 		.word	1
 634 049c 01000000 		.word	1
 635 04a0 01000000 		.word	1
 636 04a4 01000000 		.word	1
 637 04a8 01000000 		.word	1
 638 04ac 01000000 		.word	1
 639 04b0 01000000 		.word	1
 640 04b4 01000000 		.word	1
 641 04b8 01000000 		.word	1
 642 04bc 01000000 		.word	1
 643 04c0 01000000 		.word	1
 644 04c4 01000000 		.word	1
 645 04c8 01000000 		.word	1
 646 04cc 01000000 		.word	1
 647 04d0 01000000 		.word	1
 648 04d4 01000000 		.word	1
 649 04d8 01000000 		.word	1
 650 04dc 01000000 		.word	1
 651              		.global	food_list
 652              		.align	2
 653              		.type	food_list, %object
 654              		.size	food_list, 48
 655              	food_list:
 656 04e0 03000000 		.word	3
 657 04e4 06000000 		.word	6
 658 04e8 05000000 		.word	5
 659 04ec 0A000000 		.word	10
 660 04f0 0D000000 		.word	13
 661 04f4 09000000 		.word	9
 662 04f8 0D000000 		.word	13
 663 04fc 10000000 		.word	16
 664 0500 01000000 		.word	1
 665 0504 11000000 		.word	17
 666 0508 00000000 		.space	8
 666      00000000 
 667              		.global	food_length
 668              		.align	2
 669              		.type	food_length, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 13


 670              		.size	food_length, 4
 671              	food_length:
 672 0510 05000000 		.word	5
 673 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 674              		.align	2
 675              		.global	BT_txInt
 676              		.thumb
 677              		.thumb_func
 678              		.type	BT_txInt, %function
 679              	BT_txInt:
 680              	.LFB63:
 681              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 134
  29:.\main.c      **** #define U_OFFSET 93
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 142
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t robot_direction = 2;
  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {14, 18};//(y, x) DON'T HARDCODE THIS
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 14


  46:.\main.c      **** 
  47:.\main.c      **** // map default
  48:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      **** //                    {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      **** //                    {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      **** //                    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      **** //                    {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      **** //                    {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      **** //                    {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      **** //                    {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      **** //                    {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      **** //                    {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      **** //                    {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      **** //                    {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      **** //                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //practice map 1
  65:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  66:.\main.c      **** ////practice map 2
  67:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  68:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  69:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  70:.\main.c      ****                         {1,1,0,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1},
  71:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1},
  72:.\main.c      ****                         {1,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1},
  73:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1},
  74:.\main.c      ****                         {1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,0,1,1},
  75:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1},
  76:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  77:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  78:.\main.c      ****                         {1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1},
  79:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  80:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  81:.\main.c      ****                         {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  82:.\main.c      **** 
  83:.\main.c      **** //practice map 3
  84:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  85:.\main.c      **** 
  86:.\main.c      **** //first number is the y coord, second is x
  87:.\main.c      **** //first number is row, second column
  88:.\main.c      **** 
  89:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};//???
  90:.\main.c      **** //uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}}; //???
  91:.\main.c      **** //uint32_t food_list[6][2] ={ //default
  92:.\main.c      **** //{5, 7},
  93:.\main.c      **** //{5, 17},
  94:.\main.c      **** //{12, 13},
  95:.\main.c      **** //{5, 17},
  96:.\main.c      **** //{9, 3}
  97:.\main.c      **** //};
  98:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}}; //practice map 1
  99:.\main.c      **** //practice map 2
 100:.\main.c      **** uint32_t food_list[6][2]= {{3,6},{5,10},{13,9},{13,16},{1,17}};
 101:.\main.c      **** 
 102:.\main.c      **** //practice map 3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 15


 103:.\main.c      **** //uint32_t food_list[6][2]= {{16,11},{3,12},{3,5},{9,7},{5,9}};
 104:.\main.c      **** 
 105:.\main.c      **** uint32_t food_length = 5;
 106:.\main.c      **** 
 107:.\main.c      **** void changeToRF();
 108:.\main.c      **** void changeToBT();
 109:.\main.c      **** void brakeMotor();
 110:.\main.c      **** void driveForwards();
 111:.\main.c      **** void initTurnLeft();
 112:.\main.c      **** void initTurnRight();
 113:.\main.c      **** void inittrackLineZ();
 114:.\main.c      **** void trackLineU();
 115:.\main.c      **** void trackLine();
 116:.\main.c      **** void trackLineZ();
 117:.\main.c      **** void initTrackU();
 118:.\main.c      **** void turnLeft();
 119:.\main.c      **** void turnRight();
 120:.\main.c      **** void initForward();
 121:.\main.c      **** void initTurnU();
 122:.\main.c      **** void turnU();
 123:.\main.c      **** void initBrake();
 124:.\main.c      **** void print_ADC();
 125:.\main.c      **** void Quad_Dec_response();
 126:.\main.c      **** void handle_rx_binary();
 127:.\main.c      **** void readFrontSensors();
 128:.\main.c      **** void print_RF();
 129:.\main.c      **** 
 130:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
 131:.\main.c      **** //BT
 132:.\main.c      **** CY_ISR(BT_txInt)
 133:.\main.c      **** {
 682              		.loc 1 133 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687 0000 80B4     		push	{r7}
 688              		.cfi_def_cfa_offset 4
 689              		.cfi_offset 7, -4
 690 0002 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 134:.\main.c      ****     
 135:.\main.c      **** }
 692              		.loc 1 135 0
 693 0004 BD46     		mov	sp, r7
 694              		.cfi_def_cfa_register 13
 695              		@ sp needed
 696 0006 5DF8047B 		ldr	r7, [sp], #4
 697              		.cfi_restore 7
 698              		.cfi_def_cfa_offset 0
 699 000a 7047     		bx	lr
 700              		.cfi_endproc
 701              	.LFE63:
 702              		.size	BT_txInt, .-BT_txInt
 703              		.section	.text.adc_isr,"ax",%progbits
 704              		.align	2
 705              		.global	adc_isr
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 16


 706              		.thumb
 707              		.thumb_func
 708              		.type	adc_isr, %function
 709              	adc_isr:
 710              	.LFB64:
 136:.\main.c      **** 
 137:.\main.c      **** //ADC:
 138:.\main.c      **** CY_ISR (adc_isr)
 139:.\main.c      **** {
 711              		.loc 1 139 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 140:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 141:.\main.c      ****     adc_result = ADC_GetResult16();
 721              		.loc 1 141 0
 722 0004 FFF7FEFF 		bl	ADC_GetResult16
 723 0008 0346     		mov	r3, r0
 724 000a 1A46     		mov	r2, r3
 725 000c 044B     		ldr	r3, .L3
 726 000e 1A80     		strh	r2, [r3]	@ movhi
 142:.\main.c      ****     flag_receive_ADC = 1;
 727              		.loc 1 142 0
 728 0010 044B     		ldr	r3, .L3+4
 729 0012 0122     		movs	r2, #1
 730 0014 1A70     		strb	r2, [r3]
 143:.\main.c      ****     flag_print_rf = 1;
 731              		.loc 1 143 0
 732 0016 044B     		ldr	r3, .L3+8
 733 0018 0122     		movs	r2, #1
 734 001a 1A70     		strb	r2, [r3]
 144:.\main.c      ****     //LED_Write(~LED_Read());
 145:.\main.c      **** }
 735              		.loc 1 145 0
 736 001c 80BD     		pop	{r7, pc}
 737              	.L4:
 738 001e 00BF     		.align	2
 739              	.L3:
 740 0020 00000000 		.word	adc_result
 741 0024 00000000 		.word	flag_receive_ADC
 742 0028 00000000 		.word	flag_print_rf
 743              		.cfi_endproc
 744              	.LFE64:
 745              		.size	adc_isr, .-adc_isr
 746              		.global	__aeabi_i2d
 747              		.global	__aeabi_dsub
 748              		.global	__aeabi_dcmpge
 749              		.global	__aeabi_dadd
 750              		.section	.text.isr_quad1,"ax",%progbits
 751              		.align	2
 752              		.global	isr_quad1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 17


 753              		.thumb
 754              		.thumb_func
 755              		.type	isr_quad1, %function
 756              	isr_quad1:
 757              	.LFB65:
 146:.\main.c      **** 
 147:.\main.c      **** CY_ISR (isr_quad1)
 148:.\main.c      **** {
 758              		.loc 1 148 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 B0B5     		push	{r4, r5, r7, lr}
 763              		.cfi_def_cfa_offset 16
 764              		.cfi_offset 4, -16
 765              		.cfi_offset 5, -12
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 149:.\main.c      ****     
 150:.\main.c      ****     //LED_Write(~LED_Read());
 151:.\main.c      ****     last_quad_count1 = quad_count1;
 770              		.loc 1 151 0
 771 0004 5C4B     		ldr	r3, .L12+8
 772 0006 1A88     		ldrh	r2, [r3]
 773 0008 5C4B     		ldr	r3, .L12+12
 774 000a 1A80     		strh	r2, [r3]	@ movhi
 152:.\main.c      ****     last_quad_count2 = quad_count2;
 775              		.loc 1 152 0
 776 000c 5C4B     		ldr	r3, .L12+16
 777 000e 1A88     		ldrh	r2, [r3]
 778 0010 5C4B     		ldr	r3, .L12+20
 779 0012 1A80     		strh	r2, [r3]	@ movhi
 153:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 780              		.loc 1 153 0
 781 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 782 0018 0346     		mov	r3, r0
 783 001a 1A46     		mov	r2, r3
 784 001c 564B     		ldr	r3, .L12+8
 785 001e 1A80     		strh	r2, [r3]	@ movhi
 154:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 786              		.loc 1 154 0
 787 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 788 0024 0346     		mov	r3, r0
 789 0026 1A46     		mov	r2, r3
 790 0028 554B     		ldr	r3, .L12+16
 791 002a 1A80     		strh	r2, [r3]	@ movhi
 155:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 792              		.loc 1 155 0
 793 002c 524B     		ldr	r3, .L12+8
 794 002e 1B88     		ldrh	r3, [r3]
 795 0030 9AB2     		uxth	r2, r3
 796 0032 524B     		ldr	r3, .L12+12
 797 0034 1B88     		ldrh	r3, [r3]
 798 0036 9BB2     		uxth	r3, r3
 799 0038 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 18


 800 003a 9BB2     		uxth	r3, r3
 801 003c 9AB2     		uxth	r2, r3
 802 003e 524B     		ldr	r3, .L12+24
 803 0040 1A80     		strh	r2, [r3]	@ movhi
 156:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 804              		.loc 1 156 0
 805 0042 4F4B     		ldr	r3, .L12+16
 806 0044 1B88     		ldrh	r3, [r3]
 807 0046 9AB2     		uxth	r2, r3
 808 0048 4E4B     		ldr	r3, .L12+20
 809 004a 1B88     		ldrh	r3, [r3]
 810 004c 9BB2     		uxth	r3, r3
 811 004e D31A     		subs	r3, r2, r3
 812 0050 9BB2     		uxth	r3, r3
 813 0052 9AB2     		uxth	r2, r3
 814 0054 4D4B     		ldr	r3, .L12+28
 815 0056 1A80     		strh	r2, [r3]	@ movhi
 157:.\main.c      ****     
 158:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 816              		.loc 1 158 0
 817 0058 474B     		ldr	r3, .L12+8
 818 005a 1B88     		ldrh	r3, [r3]
 819 005c 1BB2     		sxth	r3, r3
 820 005e 002B     		cmp	r3, #0
 821 0060 B8BF     		it	lt
 822 0062 5B42     		rsblt	r3, r3, #0
 823 0064 40F6B832 		movw	r2, #3000
 824 0068 9342     		cmp	r3, r2
 825 006a 17DD     		ble	.L6
 826              		.loc 1 158 0 is_stmt 0 discriminator 1
 827 006c 484B     		ldr	r3, .L12+32
 828 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829 0070 012B     		cmp	r3, #1
 830 0072 13D0     		beq	.L6
 831              		.loc 1 158 0 discriminator 2
 832 0074 464B     		ldr	r3, .L12+32
 833 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 0078 022B     		cmp	r3, #2
 835 007a 0FD0     		beq	.L6
 836              		.loc 1 158 0 discriminator 3
 837 007c 444B     		ldr	r3, .L12+32
 838 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 839 0080 072B     		cmp	r3, #7
 840 0082 0BD0     		beq	.L6
 159:.\main.c      ****     {
 160:.\main.c      ****         QuadDec_M1_SetCounter(0);
 841              		.loc 1 160 0 is_stmt 1
 842 0084 0020     		movs	r0, #0
 843 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 161:.\main.c      ****         QuadDec_M2_SetCounter(0);
 844              		.loc 1 161 0
 845 008a 0020     		movs	r0, #0
 846 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 162:.\main.c      ****         quad_count1 = 0;
 847              		.loc 1 162 0
 848 0090 394B     		ldr	r3, .L12+8
 849 0092 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 19


 850 0094 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****         quad_count2 = 0;
 851              		.loc 1 163 0
 852 0096 3A4B     		ldr	r3, .L12+16
 853 0098 0022     		movs	r2, #0
 854 009a 1A80     		strh	r2, [r3]	@ movhi
 855              	.L6:
 164:.\main.c      ****     }
 165:.\main.c      **** 
 166:.\main.c      ****     flag_calc_wheelspeed = 1;
 856              		.loc 1 166 0
 857 009c 3D4B     		ldr	r3, .L12+36
 858 009e 0122     		movs	r2, #1
 859 00a0 1A70     		strb	r2, [r3]
 167:.\main.c      ****     
 168:.\main.c      ****     
 169:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 860              		.loc 1 169 0
 861 00a2 3D4B     		ldr	r3, .L12+40
 862 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 00a6 062B     		cmp	r3, #6
 864 00a8 5ED1     		bne	.L5
 865              		.loc 1 169 0 is_stmt 0 discriminator 1
 866 00aa 394B     		ldr	r3, .L12+32
 867 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 00ae 062B     		cmp	r3, #6
 869 00b0 5AD1     		bne	.L5
 170:.\main.c      ****     {
 171:.\main.c      ****         //track the distance
 172:.\main.c      ****         accum_dist += quad_diff1;
 870              		.loc 1 172 0 is_stmt 1
 871 00b2 3A4B     		ldr	r3, .L12+44
 872 00b4 1B88     		ldrh	r3, [r3]
 873 00b6 9AB2     		uxth	r2, r3
 874 00b8 334B     		ldr	r3, .L12+24
 875 00ba 1B88     		ldrh	r3, [r3]
 876 00bc 9BB2     		uxth	r3, r3
 877 00be 1344     		add	r3, r3, r2
 878 00c0 9BB2     		uxth	r3, r3
 879 00c2 9AB2     		uxth	r2, r3
 880 00c4 354B     		ldr	r3, .L12+44
 881 00c6 1A80     		strh	r2, [r3]	@ movhi
 173:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 882              		.loc 1 173 0
 883 00c8 344B     		ldr	r3, .L12+44
 884 00ca 1B88     		ldrh	r3, [r3]
 885 00cc 1BB2     		sxth	r3, r3
 886 00ce 002B     		cmp	r3, #0
 887 00d0 B8BF     		it	lt
 888 00d2 5B42     		rsblt	r3, r3, #0
 889 00d4 1846     		mov	r0, r3
 890 00d6 FFF7FEFF 		bl	__aeabi_i2d
 891 00da 0446     		mov	r4, r0
 892 00dc 0D46     		mov	r5, r1
 893 00de 304B     		ldr	r3, .L12+48
 894 00e0 1B88     		ldrh	r3, [r3]
 895 00e2 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 20


 896 00e4 1846     		mov	r0, r3
 897 00e6 FFF7FEFF 		bl	__aeabi_i2d
 898 00ea 0246     		mov	r2, r0
 899 00ec 0B46     		mov	r3, r1
 900 00ee 1046     		mov	r0, r2
 901 00f0 1946     		mov	r1, r3
 902 00f2 1FA3     		adr	r3, .L12
 903 00f4 D3E90023 		ldrd	r2, [r3]
 904 00f8 FFF7FEFF 		bl	__aeabi_dsub
 905 00fc 0246     		mov	r2, r0
 906 00fe 0B46     		mov	r3, r1
 907 0100 2046     		mov	r0, r4
 908 0102 2946     		mov	r1, r5
 909 0104 FFF7FEFF 		bl	__aeabi_dcmpge
 910 0108 0346     		mov	r3, r0
 911 010a 002B     		cmp	r3, #0
 912 010c 02D0     		beq	.L8
 174:.\main.c      ****         {
 175:.\main.c      ****             reached_target = 1;
 913              		.loc 1 175 0
 914 010e 254B     		ldr	r3, .L12+52
 915 0110 0122     		movs	r2, #1
 916 0112 1A70     		strb	r2, [r3]
 917              	.L8:
 176:.\main.c      ****         }
 177:.\main.c      ****         if((abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5)) || target_distance_qua
 918              		.loc 1 177 0
 919 0114 214B     		ldr	r3, .L12+44
 920 0116 1B88     		ldrh	r3, [r3]
 921 0118 1BB2     		sxth	r3, r3
 922 011a 002B     		cmp	r3, #0
 923 011c B8BF     		it	lt
 924 011e 5B42     		rsblt	r3, r3, #0
 925 0120 1846     		mov	r0, r3
 926 0122 FFF7FEFF 		bl	__aeabi_i2d
 927 0126 0446     		mov	r4, r0
 928 0128 0D46     		mov	r5, r1
 929 012a 1D4B     		ldr	r3, .L12+48
 930 012c 1B88     		ldrh	r3, [r3]
 931 012e 1BB2     		sxth	r3, r3
 932 0130 1846     		mov	r0, r3
 933 0132 FFF7FEFF 		bl	__aeabi_i2d
 934 0136 0246     		mov	r2, r0
 935 0138 0B46     		mov	r3, r1
 936 013a 1046     		mov	r0, r2
 937 013c 1946     		mov	r1, r3
 938 013e 0CA3     		adr	r3, .L12
 939 0140 D3E90023 		ldrd	r2, [r3]
 940 0144 FFF7FEFF 		bl	__aeabi_dadd
 941 0148 0246     		mov	r2, r0
 942 014a 0B46     		mov	r3, r1
 943 014c 2046     		mov	r0, r4
 944 014e 2946     		mov	r1, r5
 945 0150 FFF7FEFF 		bl	__aeabi_dcmpge
 946 0154 0346     		mov	r3, r0
 947 0156 002B     		cmp	r3, #0
 948 0158 03D1     		bne	.L10
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 21


 949              		.loc 1 177 0 is_stmt 0 discriminator 1
 950 015a 114B     		ldr	r3, .L12+48
 951 015c 1B88     		ldrh	r3, [r3]
 952 015e 002B     		cmp	r3, #0
 953 0160 02D1     		bne	.L5
 954              	.L10:
 178:.\main.c      ****         {
 179:.\main.c      ****             overshot_target = 1;
 955              		.loc 1 179 0 is_stmt 1
 956 0162 114B     		ldr	r3, .L12+56
 957 0164 0122     		movs	r2, #1
 958 0166 1A70     		strb	r2, [r3]
 959              	.L5:
 180:.\main.c      ****         }
 181:.\main.c      ****     }
 182:.\main.c      **** }
 960              		.loc 1 182 0
 961 0168 B0BD     		pop	{r4, r5, r7, pc}
 962              	.L13:
 963 016a 00BFAFF3 		.align	3
 963      0080
 964              	.L12:
 965 0170 00000000 		.word	0
 966 0174 00C05140 		.word	1079099392
 967 0178 00000000 		.word	quad_count1
 968 017c 00000000 		.word	last_quad_count1
 969 0180 00000000 		.word	quad_count2
 970 0184 00000000 		.word	last_quad_count2
 971 0188 00000000 		.word	quad_diff1
 972 018c 00000000 		.word	quad_diff2
 973 0190 00000000 		.word	movement_state
 974 0194 00000000 		.word	flag_calc_wheelspeed
 975 0198 00000000 		.word	track_mode
 976 019c 00000000 		.word	accum_dist
 977 01a0 00000000 		.word	target_distance_quad
 978 01a4 00000000 		.word	reached_target
 979 01a8 00000000 		.word	overshot_target
 980              		.cfi_endproc
 981              	.LFE65:
 982              		.size	isr_quad1, .-isr_quad1
 983 01ac AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 984              		.align	2
 985              		.global	isr_turn_timer
 986              		.thumb
 987              		.thumb_func
 988              		.type	isr_turn_timer, %function
 989              	isr_turn_timer:
 990              	.LFB66:
 183:.\main.c      **** 
 184:.\main.c      **** CY_ISR(isr_turn_timer)
 185:.\main.c      **** {
 991              		.loc 1 185 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 8
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 22


 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 82B0     		sub	sp, sp, #8
 1000              		.cfi_def_cfa_offset 16
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 186:.\main.c      ****     if(movement_state == LTURN)
 1003              		.loc 1 186 0
 1004 0006 464B     		ldr	r3, .L22
 1005 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 000a 012B     		cmp	r3, #1
 1007 000c 33D1     		bne	.L15
 1008              	.LBB2:
 187:.\main.c      ****     {
 188:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 1009              		.loc 1 188 0
 1010 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1011 0012 0346     		mov	r3, r0
 1012 0014 1A46     		mov	r2, r3
 1013 0016 434B     		ldr	r3, .L22+4
 1014 0018 1B88     		ldrh	r3, [r3]
 1015 001a 1BB2     		sxth	r3, r3
 1016 001c D31A     		subs	r3, r2, r3
 1017 001e 002B     		cmp	r3, #0
 1018 0020 B8BF     		it	lt
 1019 0022 5B42     		rsblt	r3, r3, #0
 1020 0024 404A     		ldr	r2, .L22+8
 1021 0026 82FB0312 		smull	r1, r2, r2, r3
 1022 002a 1112     		asrs	r1, r2, #8
 1023 002c DA17     		asrs	r2, r3, #31
 1024 002e 8A1A     		subs	r2, r1, r2
 1025 0030 4FF45071 		mov	r1, #832
 1026 0034 01FB02F2 		mul	r2, r1, r2
 1027 0038 9A1A     		subs	r2, r3, r2
 1028 003a 1346     		mov	r3, r2	@ movhi
 1029 003c FB80     		strh	r3, [r7, #6]	@ movhi
 189:.\main.c      ****   
 190:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1030              		.loc 1 190 0
 1031 003e FB88     		ldrh	r3, [r7, #6]
 1032 0040 B82B     		cmp	r3, #184
 1033 0042 17D9     		bls	.L16
 1034              		.loc 1 190 0 is_stmt 0 discriminator 1
 1035 0044 FB88     		ldrh	r3, [r7, #6]
 1036 0046 E02B     		cmp	r3, #224
 1037 0048 14D8     		bhi	.L16
 1038              		.loc 1 190 0 discriminator 2
 1039 004a 384B     		ldr	r3, .L22+12
 1040 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1041 004e 012B     		cmp	r3, #1
 1042 0050 07D0     		beq	.L17
 1043              		.loc 1 190 0 discriminator 3
 1044 0052 364B     		ldr	r3, .L22+12
 1045 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1046 0056 012B     		cmp	r3, #1
 1047 0058 03D0     		beq	.L17
 1048              		.loc 1 190 0 discriminator 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 23


 1049 005a 344B     		ldr	r3, .L22+12
 1050 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1051 005e 012B     		cmp	r3, #1
 1052 0060 08D1     		bne	.L16
 1053              	.L17:
 191:.\main.c      ****         {
 192:.\main.c      ****             //movement_state = STOPPED;
 193:.\main.c      ****             brakeMotor();
 1054              		.loc 1 193 0 is_stmt 1
 1055 0062 FFF7FEFF 		bl	brakeMotor
 194:.\main.c      ****             movement_state = prev_movement_state;
 1056              		.loc 1 194 0
 1057 0066 324B     		ldr	r3, .L22+16
 1058 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1059 006a 2D4B     		ldr	r3, .L22
 1060 006c 1A70     		strb	r2, [r3]
 195:.\main.c      ****             Timer_2_Stop();
 1061              		.loc 1 195 0
 1062 006e FFF7FEFF 		bl	Timer_2_Stop
 1063              	.LBE2:
 1064 0072 51E0     		b	.L14
 1065              	.L16:
 1066 0074 50E0     		b	.L14
 1067              	.L15:
 196:.\main.c      ****         }
 197:.\main.c      ****     }
 198:.\main.c      ****     else if (movement_state == RTURN)
 1068              		.loc 1 198 0
 1069 0076 2A4B     		ldr	r3, .L22
 1070 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1071 007a 022B     		cmp	r3, #2
 1072 007c 33D1     		bne	.L19
 1073              	.LBB3:
 199:.\main.c      ****     {
 200:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1074              		.loc 1 200 0
 1075 007e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1076 0082 0346     		mov	r3, r0
 1077 0084 1A46     		mov	r2, r3
 1078 0086 274B     		ldr	r3, .L22+4
 1079 0088 1B88     		ldrh	r3, [r3]
 1080 008a 1BB2     		sxth	r3, r3
 1081 008c D31A     		subs	r3, r2, r3
 1082 008e 002B     		cmp	r3, #0
 1083 0090 B8BF     		it	lt
 1084 0092 5B42     		rsblt	r3, r3, #0
 1085 0094 244A     		ldr	r2, .L22+8
 1086 0096 82FB0312 		smull	r1, r2, r2, r3
 1087 009a 1112     		asrs	r1, r2, #8
 1088 009c DA17     		asrs	r2, r3, #31
 1089 009e 8A1A     		subs	r2, r1, r2
 1090 00a0 4FF45071 		mov	r1, #832
 1091 00a4 01FB02F2 		mul	r2, r1, r2
 1092 00a8 9A1A     		subs	r2, r3, r2
 1093 00aa 1346     		mov	r3, r2	@ movhi
 1094 00ac BB80     		strh	r3, [r7, #4]	@ movhi
 201:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 24


 1095              		.loc 1 201 0
 1096 00ae BB88     		ldrh	r3, [r7, #4]
 1097 00b0 B82B     		cmp	r3, #184
 1098 00b2 17D9     		bls	.L20
 1099              		.loc 1 201 0 is_stmt 0 discriminator 1
 1100 00b4 BB88     		ldrh	r3, [r7, #4]
 1101 00b6 E02B     		cmp	r3, #224
 1102 00b8 14D8     		bhi	.L20
 1103              		.loc 1 201 0 discriminator 2
 1104 00ba 1C4B     		ldr	r3, .L22+12
 1105 00bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1106 00be 012B     		cmp	r3, #1
 1107 00c0 07D0     		beq	.L21
 1108              		.loc 1 201 0 discriminator 3
 1109 00c2 1A4B     		ldr	r3, .L22+12
 1110 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1111 00c6 012B     		cmp	r3, #1
 1112 00c8 03D0     		beq	.L21
 1113              		.loc 1 201 0 discriminator 4
 1114 00ca 184B     		ldr	r3, .L22+12
 1115 00cc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1116 00ce 012B     		cmp	r3, #1
 1117 00d0 08D1     		bne	.L20
 1118              	.L21:
 202:.\main.c      ****         {
 203:.\main.c      ****             //movement_state = STOPPED;
 204:.\main.c      ****             brakeMotor();
 1119              		.loc 1 204 0 is_stmt 1
 1120 00d2 FFF7FEFF 		bl	brakeMotor
 205:.\main.c      ****             movement_state = prev_movement_state;
 1121              		.loc 1 205 0
 1122 00d6 164B     		ldr	r3, .L22+16
 1123 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1124 00da 114B     		ldr	r3, .L22
 1125 00dc 1A70     		strb	r2, [r3]
 206:.\main.c      ****             Timer_2_Stop();
 1126              		.loc 1 206 0
 1127 00de FFF7FEFF 		bl	Timer_2_Stop
 1128              	.LBE3:
 1129 00e2 19E0     		b	.L14
 1130              	.L20:
 1131 00e4 18E0     		b	.L14
 1132              	.L19:
 207:.\main.c      ****         }
 208:.\main.c      ****     }
 209:.\main.c      ****     else if (movement_state == UTURN)
 1133              		.loc 1 209 0
 1134 00e6 0E4B     		ldr	r3, .L22
 1135 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1136 00ea 072B     		cmp	r3, #7
 1137 00ec 14D1     		bne	.L14
 210:.\main.c      ****     {
 211:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1138              		.loc 1 211 0
 1139 00ee FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1140 00f2 0346     		mov	r3, r0
 1141 00f4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 25


 1142 00f6 0B4B     		ldr	r3, .L22+4
 1143 00f8 1B88     		ldrh	r3, [r3]
 1144 00fa 1BB2     		sxth	r3, r3
 1145 00fc D31A     		subs	r3, r2, r3
 1146 00fe 002B     		cmp	r3, #0
 1147 0100 B8BF     		it	lt
 1148 0102 5B42     		rsblt	r3, r3, #0
 1149 0104 CF2B     		cmp	r3, #207
 1150 0106 07DD     		ble	.L14
 212:.\main.c      ****         {
 213:.\main.c      ****             //movement_state = STOPPED;
 214:.\main.c      ****             brakeMotor();
 1151              		.loc 1 214 0
 1152 0108 FFF7FEFF 		bl	brakeMotor
 215:.\main.c      ****             movement_state = prev_movement_state;
 1153              		.loc 1 215 0
 1154 010c 084B     		ldr	r3, .L22+16
 1155 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1156 0110 034B     		ldr	r3, .L22
 1157 0112 1A70     		strb	r2, [r3]
 216:.\main.c      ****             Timer_2_Stop();
 1158              		.loc 1 216 0
 1159 0114 FFF7FEFF 		bl	Timer_2_Stop
 1160              	.L14:
 217:.\main.c      ****         }
 218:.\main.c      ****     }
 219:.\main.c      **** }
 1161              		.loc 1 219 0
 1162 0118 0837     		adds	r7, r7, #8
 1163              		.cfi_def_cfa_offset 8
 1164 011a BD46     		mov	sp, r7
 1165              		.cfi_def_cfa_register 13
 1166              		@ sp needed
 1167 011c 80BD     		pop	{r7, pc}
 1168              	.L23:
 1169 011e 00BF     		.align	2
 1170              	.L22:
 1171 0120 00000000 		.word	movement_state
 1172 0124 00000000 		.word	start_turn_count
 1173 0128 4FECC44E 		.word	1321528399
 1174 012c 00000000 		.word	frontSensors
 1175 0130 00000000 		.word	prev_movement_state
 1176              		.cfi_endproc
 1177              	.LFE66:
 1178              		.size	isr_turn_timer, .-isr_turn_timer
 1179              		.section	.text.Stop_on_line,"ax",%progbits
 1180              		.align	2
 1181              		.global	Stop_on_line
 1182              		.thumb
 1183              		.thumb_func
 1184              		.type	Stop_on_line, %function
 1185              	Stop_on_line:
 1186              	.LFB67:
 220:.\main.c      **** 
 221:.\main.c      **** 
 222:.\main.c      **** CY_ISR (Stop_on_line)
 223:.\main.c      **** {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 26


 1187              		.loc 1 223 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192 0000 80B4     		push	{r7}
 1193              		.cfi_def_cfa_offset 4
 1194              		.cfi_offset 7, -4
 1195 0002 00AF     		add	r7, sp, #0
 1196              		.cfi_def_cfa_register 7
 224:.\main.c      ****     movement_state = STOPPED;
 1197              		.loc 1 224 0
 1198 0004 054B     		ldr	r3, .L26
 1199 0006 0322     		movs	r2, #3
 1200 0008 1A70     		strb	r2, [r3]
 225:.\main.c      ****     if(movement_state != DRIVE) return;
 1201              		.loc 1 225 0
 1202 000a 044B     		ldr	r3, .L26
 1203 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1204 000e 002B     		cmp	r3, #0
 1205 0010 00D0     		beq	.L24
 1206 0012 00BF     		nop
 1207              	.L24:
 226:.\main.c      ****     //initTurnLeft();
 227:.\main.c      **** }
 1208              		.loc 1 227 0
 1209 0014 BD46     		mov	sp, r7
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 0016 5DF8047B 		ldr	r7, [sp], #4
 1213              		.cfi_restore 7
 1214              		.cfi_def_cfa_offset 0
 1215 001a 7047     		bx	lr
 1216              	.L27:
 1217              		.align	2
 1218              	.L26:
 1219 001c 00000000 		.word	movement_state
 1220              		.cfi_endproc
 1221              	.LFE67:
 1222              		.size	Stop_on_line, .-Stop_on_line
 1223              		.section	.rodata
 1224              		.align	2
 1225              	.LC0:
 1226 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1226      74696E67 
 1226      20726F62 
 1226      6F74210D 
 1226      0A00
 1227              		.section	.text.button,"ax",%progbits
 1228              		.align	2
 1229              		.global	button
 1230              		.thumb
 1231              		.thumb_func
 1232              		.type	button, %function
 1233              	button:
 1234              	.LFB68:
 228:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 27


 229:.\main.c      **** CY_ISR (button)
 230:.\main.c      **** {
 1235              		.loc 1 230 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 1, uses_anonymous_args = 0
 1239 0000 80B5     		push	{r7, lr}
 1240              		.cfi_def_cfa_offset 8
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243 0002 00AF     		add	r7, sp, #0
 1244              		.cfi_def_cfa_register 7
 231:.\main.c      ****     if(BT_ENABLED)
 1245              		.loc 1 231 0
 1246 0004 054B     		ldr	r3, .L30
 1247 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1248 0008 002B     		cmp	r3, #0
 1249 000a 02D0     		beq	.L29
 232:.\main.c      ****     {
 233:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1250              		.loc 1 233 0
 1251 000c 0448     		ldr	r0, .L30+4
 1252 000e FFF7FEFF 		bl	UART_PutString
 1253              	.L29:
 234:.\main.c      ****     }
 235:.\main.c      ****     movement_state = DRIVE;
 1254              		.loc 1 235 0
 1255 0012 044B     		ldr	r3, .L30+8
 1256 0014 0022     		movs	r2, #0
 1257 0016 1A70     		strb	r2, [r3]
 236:.\main.c      **** }
 1258              		.loc 1 236 0
 1259 0018 80BD     		pop	{r7, pc}
 1260              	.L31:
 1261 001a 00BF     		.align	2
 1262              	.L30:
 1263 001c 00000000 		.word	BT_ENABLED
 1264 0020 00000000 		.word	.LC0
 1265 0024 00000000 		.word	movement_state
 1266              		.cfi_endproc
 1267              	.LFE68:
 1268              		.size	button, .-button
 1269              		.section	.text.isr_adcTimer,"ax",%progbits
 1270              		.align	2
 1271              		.global	isr_adcTimer
 1272              		.thumb
 1273              		.thumb_func
 1274              		.type	isr_adcTimer, %function
 1275              	isr_adcTimer:
 1276              	.LFB69:
 237:.\main.c      **** 
 238:.\main.c      **** CY_ISR(isr_adcTimer)
 239:.\main.c      **** {
 1277              		.loc 1 239 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 28


 1281 0000 80B5     		push	{r7, lr}
 1282              		.cfi_def_cfa_offset 8
 1283              		.cfi_offset 7, -8
 1284              		.cfi_offset 14, -4
 1285 0002 00AF     		add	r7, sp, #0
 1286              		.cfi_def_cfa_register 7
 240:.\main.c      ****     ADC_StartConvert();
 1287              		.loc 1 240 0
 1288 0004 FFF7FEFF 		bl	ADC_StartConvert
 241:.\main.c      **** }
 1289              		.loc 1 241 0
 1290 0008 80BD     		pop	{r7, pc}
 1291              		.cfi_endproc
 1292              	.LFE69:
 1293              		.size	isr_adcTimer, .-isr_adcTimer
 1294 000a 00BF     		.section	.rodata
 1295 0012 0000     		.align	2
 1296              	.LC1:
 1297 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1297      7A6F6E65 
 1297      206C6566 
 1297      740D0A00 
 1298              		.section	.text.isr_deadzone,"ax",%progbits
 1299              		.align	2
 1300              		.global	isr_deadzone
 1301              		.thumb
 1302              		.thumb_func
 1303              		.type	isr_deadzone, %function
 1304              	isr_deadzone:
 1305              	.LFB70:
 242:.\main.c      **** 
 243:.\main.c      **** CY_ISR(isr_deadzone)
 244:.\main.c      **** {
 1306              		.loc 1 244 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 00AF     		add	r7, sp, #0
 1315              		.cfi_def_cfa_register 7
 245:.\main.c      ****     sensorsDisabled = 0;
 1316              		.loc 1 245 0
 1317 0004 054B     		ldr	r3, .L34
 1318 0006 0022     		movs	r2, #0
 1319 0008 1A60     		str	r2, [r3]
 246:.\main.c      ****     deadzone = 0;
 1320              		.loc 1 246 0
 1321 000a 054B     		ldr	r3, .L34+4
 1322 000c 0022     		movs	r2, #0
 1323 000e 1A70     		strb	r2, [r3]
 247:.\main.c      ****     Timer_Deadzone_Stop();
 1324              		.loc 1 247 0
 1325 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 248:.\main.c      ****     UART_PutString("Deadzone left\r\n");
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 29


 1326              		.loc 1 248 0
 1327 0014 0348     		ldr	r0, .L34+8
 1328 0016 FFF7FEFF 		bl	UART_PutString
 249:.\main.c      **** }
 1329              		.loc 1 249 0
 1330 001a 80BD     		pop	{r7, pc}
 1331              	.L35:
 1332              		.align	2
 1333              	.L34:
 1334 001c 00000000 		.word	sensorsDisabled
 1335 0020 00000000 		.word	deadzone
 1336 0024 14000000 		.word	.LC1
 1337              		.cfi_endproc
 1338              	.LFE70:
 1339              		.size	isr_deadzone, .-isr_deadzone
 1340              		.section	.rodata
 1341              		.align	2
 1342              	.LC2:
 1343 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1343      20747261 
 1343      76656C3A 
 1343      2025640D 
 1343      0A00
 1344 0036 0000     		.align	2
 1345              	.LC3:
 1346 0038 54726967 		.ascii	"Trigger intersection\015\012\000"
 1346      67657220 
 1346      696E7465 
 1346      72736563 
 1346      74696F6E 
 1347 004f 00       		.align	2
 1348              	.LC4:
 1349 0050 44656164 		.ascii	"Deadzone enter\015\012\000"
 1349      7A6F6E65 
 1349      20656E74 
 1349      65720D0A 
 1349      00
 1350 0061 000000   		.align	2
 1351              	.LC5:
 1352 0064 54617267 		.ascii	"Target dist: %d\015\012\000"
 1352      65742064 
 1352      6973743A 
 1352      2025640D 
 1352      0A00
 1353 0076 0000     		.align	2
 1354              	.LC6:
 1355 0078 696E7374 		.ascii	"instr count:%d\015\012\000"
 1355      7220636F 
 1355      756E743A 
 1355      25640D0A 
 1355      00
 1356 0089 000000   		.align	2
 1357              	.LC7:
 1358 008c 54726967 		.ascii	"Trigger white light\015\012\000"
 1358      67657220 
 1358      77686974 
 1358      65206C69 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 30


 1358      6768740D 
 1359 00a2 0000     		.align	2
 1360              	.LC8:
 1361 00a4 54726967 		.ascii	"Trigger quad\015\012\000"
 1361      67657220 
 1361      71756164 
 1361      0D0A00
 1362              		.global	__aeabi_d2iz
 1363              		.section	.text.main,"ax",%progbits
 1364              		.align	2
 1365              		.global	main
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	main, %function
 1369              	main:
 1370              	.LFB71:
 250:.\main.c      **** 
 251:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 252:.\main.c      **** 
 253:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 254:.\main.c      **** int main()
 255:.\main.c      **** {  
 1371              		.loc 1 255 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 64
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375 0000 80B5     		push	{r7, lr}
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 7, -8
 1378              		.cfi_offset 14, -4
 1379 0002 90B0     		sub	sp, sp, #64
 1380              		.cfi_def_cfa_offset 72
 1381 0004 00AF     		add	r7, sp, #0
 1382              		.cfi_def_cfa_register 7
 256:.\main.c      **** 
 257:.\main.c      **** // ----- INITIALIZATIONS ----------
 258:.\main.c      ****     CYGlobalIntEnable;
 1383              		.loc 1 258 0
 1384              	@ 258 ".\main.c" 1
 1385 0006 62B6     		CPSIE   i
 1386              	@ 0 "" 2
 259:.\main.c      ****     if(ENABLE_PWM)
 260:.\main.c      ****     {
 261:.\main.c      ****         PWM_1_Start();// starting the pwm
 1387              		.loc 1 261 0
 1388              		.thumb
 1389 0008 FFF7FEFF 		bl	PWM_1_Start
 262:.\main.c      ****         PWM_2_Start();// starting the pwm
 1390              		.loc 1 262 0
 1391 000c FFF7FEFF 		bl	PWM_2_Start
 263:.\main.c      ****     }
 264:.\main.c      ****     
 265:.\main.c      ****     if(ENABLE_ADC)
 266:.\main.c      ****     {
 267:.\main.c      ****         ADC_Start();
 268:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 269:.\main.c      ****         //ADC_StartConvert();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 31


 270:.\main.c      ****         
 271:.\main.c      ****         //start the ADC timer for software trigger mode
 272:.\main.c      ****         Timer_TS_Start();
 273:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 274:.\main.c      ****     }
 275:.\main.c      ****     
 276:.\main.c      ****     if (ENABLE_QUAD)
 277:.\main.c      ****     {
 278:.\main.c      ****         QuadDec_M1_Start();
 1392              		.loc 1 278 0
 1393 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 279:.\main.c      ****         QuadDec_M2_Start();
 1394              		.loc 1 279 0
 1395 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 280:.\main.c      ****         
 281:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1396              		.loc 1 281 0
 1397 0018 B148     		ldr	r0, .L103
 1398 001a FFF7FEFF 		bl	isr_quad1_StartEx
 282:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1399              		.loc 1 282 0
 1400 001e B148     		ldr	r0, .L103+4
 1401 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 283:.\main.c      ****         
 284:.\main.c      ****         Timer_1_Start();
 1402              		.loc 1 284 0
 1403 0024 FFF7FEFF 		bl	Timer_1_Start
 285:.\main.c      ****     }
 286:.\main.c      ****     
 287:.\main.c      ****     if(ENABLE_STOP){
 288:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 289:.\main.c      ****         
 290:.\main.c      ****     }
 291:.\main.c      ****     isr_button_StartEx(button);
 1404              		.loc 1 291 0
 1405 0028 AF48     		ldr	r0, .L103+8
 1406 002a FFF7FEFF 		bl	isr_button_StartEx
 292:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1407              		.loc 1 292 0
 1408 002e AF48     		ldr	r0, .L103+12
 1409 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 293:.\main.c      **** 
 294:.\main.c      ****     // ------USB SETUP ----------------    
 295:.\main.c      ****     if (USE_USB){    
 296:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1410              		.loc 1 296 0
 1411 0034 0020     		movs	r0, #0
 1412 0036 0121     		movs	r1, #1
 1413 0038 FFF7FEFF 		bl	USBUART_Start
 297:.\main.c      ****         if (USBUART_GetConfiguration())
 1414              		.loc 1 297 0
 1415 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1416 0040 0346     		mov	r3, r0
 1417 0042 002B     		cmp	r3, #0
 1418 0044 01D0     		beq	.L37
 298:.\main.c      ****             {
 299:.\main.c      ****                  USBUART_CDC_Init();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 32


 1419              		.loc 1 299 0
 1420 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1421              	.L37:
 300:.\main.c      ****             }
 301:.\main.c      ****     }
 302:.\main.c      ****     
 303:.\main.c      ****     if(BIN_ENABLED){
 1422              		.loc 1 303 0
 1423 004a A94B     		ldr	r3, .L103+16
 1424 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 004e 002B     		cmp	r3, #0
 1426 0050 01D0     		beq	.L38
 304:.\main.c      ****         changeToRF();
 1427              		.loc 1 304 0
 1428 0052 FFF7FEFF 		bl	changeToRF
 1429              	.L38:
 305:.\main.c      ****     }
 306:.\main.c      ****     
 307:.\main.c      ****     if(BT_ENABLED){
 1430              		.loc 1 307 0
 1431 0056 A74B     		ldr	r3, .L103+20
 1432 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1433 005a 002B     		cmp	r3, #0
 1434 005c 01D0     		beq	.L39
 308:.\main.c      ****         changeToBT();
 1435              		.loc 1 308 0
 1436 005e FFF7FEFF 		bl	changeToBT
 1437              	.L39:
 309:.\main.c      ****     }
 310:.\main.c      ****     
 311:.\main.c      ****     uint16 actionDebounce = 0;
 1438              		.loc 1 311 0
 1439 0062 0023     		movs	r3, #0
 1440 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1441              	.L100:
 312:.\main.c      ****     
 313:.\main.c      ****     //usbPutString("Started");
 314:.\main.c      ****     for(;;)
 315:.\main.c      ****     {
 316:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 317:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1442              		.loc 1 317 0
 1443 0066 FFF7FEFF 		bl	Quad_Dec_response
 318:.\main.c      ****         if(BIN_ENABLED == 1)
 1444              		.loc 1 318 0
 1445 006a A14B     		ldr	r3, .L103+16
 1446 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 006e 012B     		cmp	r3, #1
 1448 0070 03D1     		bne	.L40
 319:.\main.c      ****         {
 320:.\main.c      ****             handle_rx_binary();
 1449              		.loc 1 320 0
 1450 0072 FFF7FEFF 		bl	handle_rx_binary
 321:.\main.c      ****             print_RF();
 1451              		.loc 1 321 0
 1452 0076 FFF7FEFF 		bl	print_RF
 1453              	.L40:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 33


 322:.\main.c      ****         }
 323:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 324:.\main.c      ****        
 325:.\main.c      ****         readFrontSensors(frontSensors);
 1454              		.loc 1 325 0
 1455 007a 9F48     		ldr	r0, .L103+24
 1456 007c FFF7FEFF 		bl	readFrontSensors
 326:.\main.c      ****         
 327:.\main.c      ****         switch(track_mode)
 1457              		.loc 1 327 0
 1458 0080 9E4B     		ldr	r3, .L103+28
 1459 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1460 0084 072B     		cmp	r3, #7
 1461 0086 00F24583 		bhi	.L41
 1462 008a 01A2     		adr	r2, .L43
 1463 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1464              		.p2align 2
 1465              	.L43:
 1466 0090 15070000 		.word	.L41+1
 1467 0094 15070000 		.word	.L41+1
 1468 0098 15070000 		.word	.L41+1
 1469 009c B1000000 		.word	.L46+1
 1470 00a0 15070000 		.word	.L41+1
 1471 00a4 F5000000 		.word	.L48+1
 1472 00a8 1B010000 		.word	.L49+1
 1473 00ac 1B010000 		.word	.L49+1
 1474              		.p2align 1
 1475              	.L46:
 328:.\main.c      ****         {
 329:.\main.c      ****             case SQUARE_TRACK:
 330:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1476              		.loc 1 330 0
 1477 00b0 934B     		ldr	r3, .L103+32
 1478 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1479 00b4 012B     		cmp	r3, #1
 1480 00b6 1CD0     		beq	.L50
 1481              		.loc 1 330 0 is_stmt 0 discriminator 1
 1482 00b8 914B     		ldr	r3, .L103+32
 1483 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1484 00bc 022B     		cmp	r3, #2
 1485 00be 18D0     		beq	.L50
 331:.\main.c      ****                 {
 332:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1486              		.loc 1 332 0 is_stmt 1
 1487 00c0 8D4B     		ldr	r3, .L103+24
 1488 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 00c4 012B     		cmp	r3, #1
 1490 00c6 06D1     		bne	.L51
 1491              		.loc 1 332 0 is_stmt 0 discriminator 1
 1492 00c8 8B4B     		ldr	r3, .L103+24
 1493 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1494 00cc 012B     		cmp	r3, #1
 1495 00ce 02D1     		bne	.L51
 333:.\main.c      ****                         initTurnLeft();
 1496              		.loc 1 333 0 is_stmt 1
 1497 00d0 FFF7FEFF 		bl	initTurnLeft
 1498 00d4 0DE0     		b	.L50
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 34


 1499              	.L51:
 334:.\main.c      ****                     }
 335:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1500              		.loc 1 335 0
 1501 00d6 884B     		ldr	r3, .L103+24
 1502 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1503 00da 012B     		cmp	r3, #1
 1504 00dc 06D1     		bne	.L52
 1505              		.loc 1 335 0 is_stmt 0 discriminator 1
 1506 00de 864B     		ldr	r3, .L103+24
 1507 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1508 00e2 012B     		cmp	r3, #1
 1509 00e4 02D1     		bne	.L52
 336:.\main.c      ****                     {
 337:.\main.c      ****                         initTurnRight();
 1510              		.loc 1 337 0 is_stmt 1
 1511 00e6 FFF7FEFF 		bl	initTurnRight
 1512 00ea 02E0     		b	.L50
 1513              	.L52:
 338:.\main.c      ****                     }
 339:.\main.c      ****                     else inittrackLineZ();
 1514              		.loc 1 339 0
 1515 00ec FFF7FEFF 		bl	inittrackLineZ
 340:.\main.c      ****                 }
 341:.\main.c      ****             break;
 1516              		.loc 1 341 0
 1517 00f0 10E3     		b	.L41
 1518              	.L50:
 1519 00f2 0FE3     		b	.L41
 1520              	.L48:
 342:.\main.c      ****             case NO_TRACK:
 343:.\main.c      ****             break;
 344:.\main.c      ****             case CURVE_TRACK:
 345:.\main.c      ****             break;
 346:.\main.c      ****             case U_TRACK:
 347:.\main.c      ****             break;
 348:.\main.c      ****             case QUAD_STOP:
 349:.\main.c      ****             break;
 350:.\main.c      ****             case RF_STOP:
 351:.\main.c      ****                 if(initial_pos_valid == 1)
 1521              		.loc 1 351 0
 1522 00f4 834B     		ldr	r3, .L103+36
 1523 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1524 00f8 012B     		cmp	r3, #1
 1525 00fa 0DD1     		bne	.L53
 352:.\main.c      ****                 {
 353:.\main.c      ****                     //changeToBT();
 354:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 355:.\main.c      ****                     //changeToRF();
 356:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1526              		.loc 1 356 0
 1527 00fc 824B     		ldr	r3, .L103+40
 1528 00fe 5A88     		ldrh	r2, [r3, #2]
 1529 0100 824B     		ldr	r3, .L103+44
 1530 0102 1A80     		strh	r2, [r3]	@ movhi
 357:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1531              		.loc 1 357 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 35


 1532 0104 804B     		ldr	r3, .L103+40
 1533 0106 9A88     		ldrh	r2, [r3, #4]
 1534 0108 814B     		ldr	r3, .L103+48
 1535 010a 1A80     		strh	r2, [r3]	@ movhi
 358:.\main.c      ****                     initial_pos_valid = 2;
 1536              		.loc 1 358 0
 1537 010c 7D4B     		ldr	r3, .L103+36
 1538 010e 0222     		movs	r2, #2
 1539 0110 1A70     		strb	r2, [r3]
 359:.\main.c      ****                     initForward();
 1540              		.loc 1 359 0
 1541 0112 FFF7FEFF 		bl	initForward
 360:.\main.c      ****                 }
 361:.\main.c      ****             break;
 1542              		.loc 1 361 0
 1543 0116 FDE2     		b	.L41
 1544              	.L53:
 1545 0118 FCE2     		b	.L41
 1546              	.L49:
 362:.\main.c      ****             case MAP_TRAVERSE:
 363:.\main.c      ****             case DEST_TEST:
 364:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1547              		.loc 1 364 0
 1548 011a 794B     		ldr	r3, .L103+32
 1549 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1550 011e 012B     		cmp	r3, #1
 1551 0120 00F0F782 		beq	.L54
 1552              		.loc 1 364 0 is_stmt 0 discriminator 1
 1553 0124 764B     		ldr	r3, .L103+32
 1554 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1555 0128 022B     		cmp	r3, #2
 1556 012a 00F0F282 		beq	.L54
 1557              		.loc 1 364 0 discriminator 2
 1558 012e 744B     		ldr	r3, .L103+32
 1559 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 0132 072B     		cmp	r3, #7
 1561 0134 00F0ED82 		beq	.L54
 1562              	.LBB4:
 365:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 366:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1563              		.loc 1 366 0 is_stmt 1
 1564 0138 764B     		ldr	r3, .L103+52
 1565 013a 1B88     		ldrh	r3, [r3]
 1566 013c 1A46     		mov	r2, r3
 1567 013e 764B     		ldr	r3, .L103+56
 1568 0140 9B5C     		ldrb	r3, [r3, r2]
 1569 0142 87F83D30 		strb	r3, [r7, #61]
 367:.\main.c      ****                     uint8 leftOn = frontSensors[0] && frontSensors[2];
 1570              		.loc 1 367 0
 1571 0146 6C4B     		ldr	r3, .L103+24
 1572 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1573 014a 002B     		cmp	r3, #0
 1574 014c 05D0     		beq	.L55
 1575              		.loc 1 367 0 is_stmt 0 discriminator 1
 1576 014e 6A4B     		ldr	r3, .L103+24
 1577 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1578 0152 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 36


 1579 0154 01D0     		beq	.L55
 1580              		.loc 1 367 0 discriminator 3
 1581 0156 0123     		movs	r3, #1
 1582 0158 00E0     		b	.L56
 1583              	.L55:
 1584              		.loc 1 367 0 discriminator 4
 1585 015a 0023     		movs	r3, #0
 1586              	.L56:
 1587              		.loc 1 367 0 discriminator 6
 1588 015c 87F83930 		strb	r3, [r7, #57]
 368:.\main.c      ****                     uint8 rightOn = frontSensors[4] && frontSensors[2];
 1589              		.loc 1 368 0 is_stmt 1 discriminator 6
 1590 0160 654B     		ldr	r3, .L103+24
 1591 0162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1592 0164 002B     		cmp	r3, #0
 1593 0166 05D0     		beq	.L57
 1594              		.loc 1 368 0 is_stmt 0 discriminator 1
 1595 0168 634B     		ldr	r3, .L103+24
 1596 016a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1597 016c 002B     		cmp	r3, #0
 1598 016e 01D0     		beq	.L57
 1599              		.loc 1 368 0 discriminator 3
 1600 0170 0123     		movs	r3, #1
 1601 0172 00E0     		b	.L58
 1602              	.L57:
 1603              		.loc 1 368 0 discriminator 4
 1604 0174 0023     		movs	r3, #0
 1605              	.L58:
 1606              		.loc 1 368 0 discriminator 6
 1607 0176 87F83830 		strb	r3, [r7, #56]
 369:.\main.c      ****                     if((leftOn && (nextStep != 'R')) || (rightOn && (nextStep != 'L'))){ //intersec
 1608              		.loc 1 369 0 is_stmt 1 discriminator 6
 1609 017a 97F83930 		ldrb	r3, [r7, #57]	@ zero_extendqisi2
 1610 017e 002B     		cmp	r3, #0
 1611 0180 03D0     		beq	.L59
 1612              		.loc 1 369 0 is_stmt 0 discriminator 1
 1613 0182 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1614 0186 522B     		cmp	r3, #82
 1615 0188 09D1     		bne	.L60
 1616              	.L59:
 1617              		.loc 1 369 0 discriminator 3
 1618 018a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1619 018e 002B     		cmp	r3, #0
 1620 0190 00F00E81 		beq	.L61
 1621              		.loc 1 369 0 discriminator 4
 1622 0194 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1623 0198 4C2B     		cmp	r3, #76
 1624 019a 00F00981 		beq	.L61
 1625              	.L60:
 370:.\main.c      ****                         if(sensorsDisabled == 0)
 1626              		.loc 1 370 0 is_stmt 1
 1627 019e 5F4B     		ldr	r3, .L103+60
 1628 01a0 1B68     		ldr	r3, [r3]
 1629 01a2 002B     		cmp	r3, #0
 1630 01a4 40F00381 		bne	.L62
 371:.\main.c      ****                         {
 372:.\main.c      ****                             actionDebounce++;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 37


 1631              		.loc 1 372 0
 1632 01a8 FB8F     		ldrh	r3, [r7, #62]
 1633 01aa 0133     		adds	r3, r3, #1
 1634 01ac FB87     		strh	r3, [r7, #62]	@ movhi
 373:.\main.c      ****                             if(actionDebounce >= 400)
 1635              		.loc 1 373 0
 1636 01ae FB8F     		ldrh	r3, [r7, #62]
 1637 01b0 B3F5C87F 		cmp	r3, #400
 1638 01b4 C0F0FB80 		bcc	.L62
 1639              	.LBB5:
 374:.\main.c      ****                             {
 375:.\main.c      ****                                 char mes[16];
 376:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1640              		.loc 1 376 0
 1641 01b8 594B     		ldr	r3, .L103+64
 1642 01ba 1B88     		ldrh	r3, [r3]
 1643 01bc 1BB2     		sxth	r3, r3
 1644 01be 07F12402 		add	r2, r7, #36
 1645 01c2 1046     		mov	r0, r2
 1646 01c4 5749     		ldr	r1, .L103+68
 1647 01c6 1A46     		mov	r2, r3
 1648 01c8 FFF7FEFF 		bl	sprintf
 377:.\main.c      ****                                  UART_PutString(mes);
 1649              		.loc 1 377 0
 1650 01cc 07F12403 		add	r3, r7, #36
 1651 01d0 1846     		mov	r0, r3
 1652 01d2 FFF7FEFF 		bl	UART_PutString
 378:.\main.c      ****                             if(reached_target == 1)
 1653              		.loc 1 378 0
 1654 01d6 544B     		ldr	r3, .L103+72
 1655 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1656 01da 012B     		cmp	r3, #1
 1657 01dc 40F0E780 		bne	.L62
 1658              	.LBB6:
 379:.\main.c      ****                             {
 380:.\main.c      **** //                                if(nextStep == 'D')
 381:.\main.c      **** //                                {
 382:.\main.c      **** //                                    instructionCount += 2;
 383:.\main.c      **** //                                    nextStep = instructions[instructionCount]; 
 384:.\main.c      **** //                                }
 385:.\main.c      ****                                 
 386:.\main.c      ****                                 sensorsDisabled = 1;
 1659              		.loc 1 386 0
 1660 01e0 4E4B     		ldr	r3, .L103+60
 1661 01e2 0122     		movs	r2, #1
 1662 01e4 1A60     		str	r2, [r3]
 387:.\main.c      ****                                 UART_PutString("Trigger intersection\r\n");
 1663              		.loc 1 387 0
 1664 01e6 5148     		ldr	r0, .L103+76
 1665 01e8 FFF7FEFF 		bl	UART_PutString
 388:.\main.c      ****                                 UART_PutString("Deadzone enter\r\n");
 1666              		.loc 1 388 0
 1667 01ec 5048     		ldr	r0, .L103+80
 1668 01ee FFF7FEFF 		bl	UART_PutString
 389:.\main.c      ****                                 deadzone = 1;
 1669              		.loc 1 389 0
 1670 01f2 504B     		ldr	r3, .L103+84
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 38


 1671 01f4 0122     		movs	r2, #1
 1672 01f6 1A70     		strb	r2, [r3]
 390:.\main.c      ****                                 
 391:.\main.c      ****                                 accum_dist = 0;
 1673              		.loc 1 391 0
 1674 01f8 494B     		ldr	r3, .L103+64
 1675 01fa 0022     		movs	r2, #0
 1676 01fc 1A80     		strh	r2, [r3]	@ movhi
 392:.\main.c      ****                                 uint8 nextStepDist;
 393:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1677              		.loc 1 393 0
 1678 01fe 454B     		ldr	r3, .L103+52
 1679 0200 1B88     		ldrh	r3, [r3]
 1680 0202 1A46     		mov	r2, r3
 1681 0204 4C4B     		ldr	r3, .L103+88
 1682 0206 1B88     		ldrh	r3, [r3]
 1683 0208 053B     		subs	r3, r3, #5
 1684 020a 9A42     		cmp	r2, r3
 1685 020c 07DC     		bgt	.L64
 1686              		.loc 1 393 0 is_stmt 0 discriminator 1
 1687 020e 414B     		ldr	r3, .L103+52
 1688 0210 1B88     		ldrh	r3, [r3]
 1689 0212 0333     		adds	r3, r3, #3
 1690 0214 404A     		ldr	r2, .L103+56
 1691 0216 D35C     		ldrb	r3, [r2, r3]
 1692 0218 87F83C30 		strb	r3, [r7, #60]
 1693 021c 02E0     		b	.L65
 1694              	.L64:
 394:.\main.c      ****                                 else nextStepDist = 0;
 1695              		.loc 1 394 0 is_stmt 1
 1696 021e 0023     		movs	r3, #0
 1697 0220 87F83C30 		strb	r3, [r7, #60]
 1698              	.L65:
 395:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1699              		.loc 1 395 0
 1700 0224 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1701 0228 9BB2     		uxth	r3, r3
 1702 022a 1A46     		mov	r2, r3	@ movhi
 1703 022c D200     		lsls	r2, r2, #3
 1704 022e 1A44     		add	r2, r2, r3
 1705 0230 D200     		lsls	r2, r2, #3
 1706 0232 D31A     		subs	r3, r2, r3
 1707 0234 5B00     		lsls	r3, r3, #1
 1708 0236 9BB2     		uxth	r3, r3
 1709 0238 9AB2     		uxth	r2, r3
 1710 023a 404B     		ldr	r3, .L103+92
 1711 023c 1A80     		strh	r2, [r3]	@ movhi
 396:.\main.c      ****                                 
 397:.\main.c      ****                                 
 398:.\main.c      ****                                 
 399:.\main.c      ****                                 switch(nextStep)
 1712              		.loc 1 399 0
 1713 023e 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1714 0242 4C3B     		subs	r3, r3, #76
 1715 0244 092B     		cmp	r3, #9
 1716 0246 7DD8     		bhi	.L101
 1717 0248 01A2     		adr	r2, .L68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 39


 1718 024a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1719 024e 00BF     		.p2align 2
 1720              	.L68:
 1721 0250 87020000 		.word	.L67+1
 1722 0254 45030000 		.word	.L101+1
 1723 0258 45030000 		.word	.L101+1
 1724 025c 45030000 		.word	.L101+1
 1725 0260 45030000 		.word	.L101+1
 1726 0264 45030000 		.word	.L101+1
 1727 0268 A5020000 		.word	.L69+1
 1728 026c 79020000 		.word	.L70+1
 1729 0270 45030000 		.word	.L101+1
 1730 0274 C3020000 		.word	.L71+1
 1731              		.p2align 1
 1732              	.L70:
 400:.\main.c      ****                                 {
 401:.\main.c      ****                                     case 'S':
 402:.\main.c      ****                                         inittrackLineZ();
 1733              		.loc 1 402 0
 1734 0278 FFF7FEFF 		bl	inittrackLineZ
 403:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1735              		.loc 1 403 0
 1736 027c 42F21070 		movw	r0, #10000
 1737 0280 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 404:.\main.c      ****                                         //do nothing
 405:.\main.c      ****                                     break;
 1738              		.loc 1 405 0
 1739 0284 5FE0     		b	.L72
 1740              	.L67:
 406:.\main.c      ****                                     case 'L':
 407:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 408:.\main.c      ****                                         initTurnLeft();
 1741              		.loc 1 408 0
 1742 0286 FFF7FEFF 		bl	initTurnLeft
 409:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1743              		.loc 1 409 0
 1744 028a 4CF25030 		movw	r0, #50000
 1745 028e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 410:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1746              		.loc 1 410 0
 1747 0292 2A4B     		ldr	r3, .L103+92
 1748 0294 1B88     		ldrh	r3, [r3]
 1749 0296 9BB2     		uxth	r3, r3
 1750 0298 863B     		subs	r3, r3, #134
 1751 029a 9BB2     		uxth	r3, r3
 1752 029c 9AB2     		uxth	r2, r3
 1753 029e 274B     		ldr	r3, .L103+92
 1754 02a0 1A80     		strh	r2, [r3]	@ movhi
 411:.\main.c      ****                                     break;
 1755              		.loc 1 411 0
 1756 02a2 50E0     		b	.L72
 1757              	.L69:
 412:.\main.c      ****                                     case 'R':
 413:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 414:.\main.c      ****                                         initTurnRight();
 1758              		.loc 1 414 0
 1759 02a4 FFF7FEFF 		bl	initTurnRight
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 40


 415:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1760              		.loc 1 415 0
 1761 02a8 244B     		ldr	r3, .L103+92
 1762 02aa 1B88     		ldrh	r3, [r3]
 1763 02ac 9BB2     		uxth	r3, r3
 1764 02ae 863B     		subs	r3, r3, #134
 1765 02b0 9BB2     		uxth	r3, r3
 1766 02b2 9AB2     		uxth	r2, r3
 1767 02b4 214B     		ldr	r3, .L103+92
 1768 02b6 1A80     		strh	r2, [r3]	@ movhi
 416:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 417:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1769              		.loc 1 417 0
 1770 02b8 4CF25030 		movw	r0, #50000
 1771 02bc FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 418:.\main.c      ****                                     break;
 1772              		.loc 1 418 0
 1773 02c0 41E0     		b	.L72
 1774              	.L71:
 419:.\main.c      ****                                     case 'U':
 420:.\main.c      ****                                         // Direction not tracked any more
 421:.\main.c      ****                                         initTurnU();
 1775              		.loc 1 421 0
 1776 02c2 FFF7FEFF 		bl	initTurnU
 422:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1777              		.loc 1 422 0
 1778 02c6 1E48     		ldr	r0, .L103+96
 1779 02c8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 423:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 1780              		.loc 1 423 0
 1781 02cc 1B4B     		ldr	r3, .L103+92
 1782 02ce 1B88     		ldrh	r3, [r3]
 1783 02d0 9BB2     		uxth	r3, r3
 1784 02d2 5D3B     		subs	r3, r3, #93
 1785 02d4 9BB2     		uxth	r3, r3
 1786 02d6 9AB2     		uxth	r2, r3
 1787 02d8 184B     		ldr	r3, .L103+92
 1788 02da 1A80     		strh	r2, [r3]	@ movhi
 424:.\main.c      ****                                         //target_distance_quad += 208;
 425:.\main.c      ****                                     break;
 1789              		.loc 1 425 0
 1790 02dc 33E0     		b	.L72
 1791              	.L104:
 1792 02de 00BF     		.align	2
 1793              	.L103:
 1794 02e0 00000000 		.word	isr_quad1
 1795 02e4 00000000 		.word	isr_turn_timer
 1796 02e8 00000000 		.word	button
 1797 02ec 00000000 		.word	isr_deadzone
 1798 02f0 00000000 		.word	BIN_ENABLED
 1799 02f4 00000000 		.word	BT_ENABLED
 1800 02f8 00000000 		.word	frontSensors
 1801 02fc 00000000 		.word	track_mode
 1802 0300 00000000 		.word	movement_state
 1803 0304 00000000 		.word	initial_pos_valid
 1804 0308 00000000 		.word	system_state
 1805 030c 00000000 		.word	initial_x_pos
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 41


 1806 0310 00000000 		.word	initial_y_pos
 1807 0314 00000000 		.word	instructionCount
 1808 0318 00000000 		.word	instructions
 1809 031c 00000000 		.word	sensorsDisabled
 1810 0320 00000000 		.word	accum_dist
 1811 0324 24000000 		.word	.LC2
 1812 0328 00000000 		.word	reached_target
 1813 032c 38000000 		.word	.LC3
 1814 0330 50000000 		.word	.LC4
 1815 0334 00000000 		.word	deadzone
 1816 0338 00000000 		.word	instructionLength
 1817 033c 00000000 		.word	target_distance_quad
 1818 0340 905F0100 		.word	90000
 1819              	.L101:
 426:.\main.c      ****                                     
 427:.\main.c      ****                                     default:
 428:.\main.c      ****                                         //do nothing
 429:.\main.c      ****                                         break;
 1820              		.loc 1 429 0
 1821 0344 00BF     		nop
 1822              	.L72:
 430:.\main.c      ****                                 }
 431:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1823              		.loc 1 431 0
 1824 0346 AC4B     		ldr	r3, .L105
 1825 0348 1B88     		ldrh	r3, [r3]
 1826 034a 1BB2     		sxth	r3, r3
 1827 034c 002B     		cmp	r3, #0
 1828 034e 02DA     		bge	.L73
 1829              		.loc 1 431 0 is_stmt 0 discriminator 1
 1830 0350 A94B     		ldr	r3, .L105
 1831 0352 0022     		movs	r2, #0
 1832 0354 1A80     		strh	r2, [r3]	@ movhi
 1833              	.L73:
 432:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1834              		.loc 1 432 0 is_stmt 1
 1835 0356 A84B     		ldr	r3, .L105
 1836 0358 1B88     		ldrh	r3, [r3]
 1837 035a 1BB2     		sxth	r3, r3
 1838 035c 07F12402 		add	r2, r7, #36
 1839 0360 1046     		mov	r0, r2
 1840 0362 A649     		ldr	r1, .L105+4
 1841 0364 1A46     		mov	r2, r3
 1842 0366 FFF7FEFF 		bl	sprintf
 433:.\main.c      ****                                  UART_PutString(mes);
 1843              		.loc 1 433 0
 1844 036a 07F12403 		add	r3, r7, #36
 1845 036e 1846     		mov	r0, r3
 1846 0370 FFF7FEFF 		bl	UART_PutString
 434:.\main.c      ****                                 
 435:.\main.c      ****                                 Timer_Deadzone_Start();
 1847              		.loc 1 435 0
 1848 0374 FFF7FEFF 		bl	Timer_Deadzone_Start
 436:.\main.c      ****                                 reached_target = 0;
 1849              		.loc 1 436 0
 1850 0378 A14B     		ldr	r3, .L105+8
 1851 037a 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 42


 1852 037c 1A70     		strb	r2, [r3]
 437:.\main.c      ****                                 overshot_target = 0;
 1853              		.loc 1 437 0
 1854 037e A14B     		ldr	r3, .L105+12
 1855 0380 0022     		movs	r2, #0
 1856 0382 1A70     		strb	r2, [r3]
 438:.\main.c      ****                                 instructionCount += 2;
 1857              		.loc 1 438 0
 1858 0384 A04B     		ldr	r3, .L105+16
 1859 0386 1B88     		ldrh	r3, [r3]
 1860 0388 0233     		adds	r3, r3, #2
 1861 038a 9AB2     		uxth	r2, r3
 1862 038c 9E4B     		ldr	r3, .L105+16
 1863 038e 1A80     		strh	r2, [r3]	@ movhi
 439:.\main.c      ****                                 sprintf(mes, "instr count:%d\r\n", instructionCount);
 1864              		.loc 1 439 0
 1865 0390 9D4B     		ldr	r3, .L105+16
 1866 0392 1B88     		ldrh	r3, [r3]
 1867 0394 1A46     		mov	r2, r3
 1868 0396 07F12403 		add	r3, r7, #36
 1869 039a 1846     		mov	r0, r3
 1870 039c 9B49     		ldr	r1, .L105+20
 1871 039e FFF7FEFF 		bl	sprintf
 440:.\main.c      ****                                 UART_PutString(mes);
 1872              		.loc 1 440 0
 1873 03a2 07F12403 		add	r3, r7, #36
 1874 03a6 1846     		mov	r0, r3
 1875 03a8 FFF7FEFF 		bl	UART_PutString
 1876              	.LBE6:
 1877              	.LBE5:
 370:.\main.c      ****                         {
 1878              		.loc 1 370 0
 1879 03ac B1E1     		b	.L54
 1880              	.L62:
 370:.\main.c      ****                         {
 1881              		.loc 1 370 0 is_stmt 0 discriminator 1
 1882 03ae B0E1     		b	.L54
 1883              	.L61:
 441:.\main.c      ****                                 
 442:.\main.c      ****                             }
 443:.\main.c      ****                             }
 444:.\main.c      ****                         }
 445:.\main.c      ****                     }
 446:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1884              		.loc 1 446 0 is_stmt 1
 1885 03b0 974B     		ldr	r3, .L105+24
 1886 03b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1887 03b4 002B     		cmp	r3, #0
 1888 03b6 40F0D280 		bne	.L74
 1889              		.loc 1 446 0 is_stmt 0 discriminator 1
 1890 03ba 954B     		ldr	r3, .L105+24
 1891 03bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1892 03be 002B     		cmp	r3, #0
 1893 03c0 40F0CD80 		bne	.L74
 1894              		.loc 1 446 0 discriminator 2
 1895 03c4 924B     		ldr	r3, .L105+24
 1896 03c6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 43


 1897 03c8 002B     		cmp	r3, #0
 1898 03ca 40F0C880 		bne	.L74
 1899              		.loc 1 446 0 discriminator 3
 1900 03ce 904B     		ldr	r3, .L105+24
 1901 03d0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1902 03d2 002B     		cmp	r3, #0
 1903 03d4 40F0C380 		bne	.L74
 1904              		.loc 1 446 0 discriminator 4
 1905 03d8 8D4B     		ldr	r3, .L105+24
 1906 03da 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1907 03dc 002B     		cmp	r3, #0
 1908 03de 40F0BE80 		bne	.L74
 1909              		.loc 1 446 0 discriminator 5
 1910 03e2 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1911 03e6 552B     		cmp	r3, #85
 1912 03e8 04D0     		beq	.L75
 1913              		.loc 1 446 0 discriminator 6
 1914 03ea 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1915 03ee 442B     		cmp	r3, #68
 1916 03f0 40F0B580 		bne	.L74
 1917              	.L75:
 447:.\main.c      ****                     {
 448:.\main.c      ****                         if(sensorsDisabled == 0)
 1918              		.loc 1 448 0 is_stmt 1
 1919 03f4 874B     		ldr	r3, .L105+28
 1920 03f6 1B68     		ldr	r3, [r3]
 1921 03f8 002B     		cmp	r3, #0
 1922 03fa 40F0AF80 		bne	.L76
 449:.\main.c      ****                         {
 450:.\main.c      ****                                 if(nextStep == 'D')
 1923              		.loc 1 450 0
 1924 03fe 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1925 0402 442B     		cmp	r3, #68
 1926 0404 17D1     		bne	.L77
 1927              	.LBB7:
 451:.\main.c      ****                                 {
 452:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1928              		.loc 1 452 0
 1929 0406 804B     		ldr	r3, .L105+16
 1930 0408 1B88     		ldrh	r3, [r3]
 1931 040a 0233     		adds	r3, r3, #2
 1932 040c 824A     		ldr	r2, .L105+32
 1933 040e D35C     		ldrb	r3, [r2, r3]
 1934 0410 87F83730 		strb	r3, [r7, #55]
 453:.\main.c      ****                                     if(nextInstruction == 'U')
 1935              		.loc 1 453 0
 1936 0414 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1937 0418 552B     		cmp	r3, #85
 1938 041a 0CD1     		bne	.L77
 454:.\main.c      ****                                     {
 455:.\main.c      ****                                         instructionCount += 2;
 1939              		.loc 1 455 0
 1940 041c 7A4B     		ldr	r3, .L105+16
 1941 041e 1B88     		ldrh	r3, [r3]
 1942 0420 0233     		adds	r3, r3, #2
 1943 0422 9AB2     		uxth	r2, r3
 1944 0424 784B     		ldr	r3, .L105+16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 44


 1945 0426 1A80     		strh	r2, [r3]	@ movhi
 456:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1946              		.loc 1 456 0
 1947 0428 774B     		ldr	r3, .L105+16
 1948 042a 1B88     		ldrh	r3, [r3]
 1949 042c 1A46     		mov	r2, r3
 1950 042e 7A4B     		ldr	r3, .L105+32
 1951 0430 9B5C     		ldrb	r3, [r3, r2]
 1952 0432 87F83D30 		strb	r3, [r7, #61]
 1953              	.L77:
 1954              	.LBE7:
 457:.\main.c      ****                                     }
 458:.\main.c      ****                                 }
 459:.\main.c      ****                                 
 460:.\main.c      ****                                 if(nextStep == 'U')
 1955              		.loc 1 460 0
 1956 0436 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1957 043a 552B     		cmp	r3, #85
 1958 043c 40F08E80 		bne	.L76
 461:.\main.c      ****                                 {
 462:.\main.c      ****                                     actionDebounce++;
 1959              		.loc 1 462 0
 1960 0440 FB8F     		ldrh	r3, [r7, #62]
 1961 0442 0133     		adds	r3, r3, #1
 1962 0444 FB87     		strh	r3, [r7, #62]	@ movhi
 463:.\main.c      ****                                     if(actionDebounce >= 2400)
 1963              		.loc 1 463 0
 1964 0446 FB8F     		ldrh	r3, [r7, #62]
 1965 0448 B3F5166F 		cmp	r3, #2400
 1966 044c C0F08680 		bcc	.L76
 464:.\main.c      ****                                     {
 465:.\main.c      ****                                         if(reached_target == 1)
 1967              		.loc 1 465 0
 1968 0450 6B4B     		ldr	r3, .L105+8
 1969 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1970 0454 012B     		cmp	r3, #1
 1971 0456 40F08180 		bne	.L76
 1972              	.LBB8:
 466:.\main.c      ****                                         {
 467:.\main.c      ****                                     char mes[16];
 468:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1973              		.loc 1 468 0
 1974 045a 704B     		ldr	r3, .L105+36
 1975 045c 1B88     		ldrh	r3, [r3]
 1976 045e 1BB2     		sxth	r3, r3
 1977 0460 07F11402 		add	r2, r7, #20
 1978 0464 1046     		mov	r0, r2
 1979 0466 6E49     		ldr	r1, .L105+40
 1980 0468 1A46     		mov	r2, r3
 1981 046a FFF7FEFF 		bl	sprintf
 469:.\main.c      ****                                      UART_PutString(mes);
 1982              		.loc 1 469 0
 1983 046e 07F11403 		add	r3, r7, #20
 1984 0472 1846     		mov	r0, r3
 1985 0474 FFF7FEFF 		bl	UART_PutString
 470:.\main.c      ****                                          accum_dist = 0;
 1986              		.loc 1 470 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 45


 1987 0478 684B     		ldr	r3, .L105+36
 1988 047a 0022     		movs	r2, #0
 1989 047c 1A80     		strh	r2, [r3]	@ movhi
 471:.\main.c      ****                                     uint8 nextStepDist;
 472:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 1990              		.loc 1 472 0
 1991 047e 624B     		ldr	r3, .L105+16
 1992 0480 1B88     		ldrh	r3, [r3]
 1993 0482 1A46     		mov	r2, r3
 1994 0484 674B     		ldr	r3, .L105+44
 1995 0486 1B88     		ldrh	r3, [r3]
 1996 0488 053B     		subs	r3, r3, #5
 1997 048a 9A42     		cmp	r2, r3
 1998 048c 07DC     		bgt	.L78
 1999              		.loc 1 472 0 is_stmt 0 discriminator 1
 2000 048e 5E4B     		ldr	r3, .L105+16
 2001 0490 1B88     		ldrh	r3, [r3]
 2002 0492 0333     		adds	r3, r3, #3
 2003 0494 604A     		ldr	r2, .L105+32
 2004 0496 D35C     		ldrb	r3, [r2, r3]
 2005 0498 87F83B30 		strb	r3, [r7, #59]
 2006 049c 02E0     		b	.L79
 2007              	.L78:
 473:.\main.c      ****                                     else nextStepDist = 0;
 2008              		.loc 1 473 0 is_stmt 1
 2009 049e 0023     		movs	r3, #0
 2010 04a0 87F83B30 		strb	r3, [r7, #59]
 2011              	.L79:
 474:.\main.c      ****                                     
 475:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2012              		.loc 1 475 0
 2013 04a4 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 2014 04a8 9BB2     		uxth	r3, r3
 2015 04aa 1A46     		mov	r2, r3	@ movhi
 2016 04ac D200     		lsls	r2, r2, #3
 2017 04ae 1A44     		add	r2, r2, r3
 2018 04b0 D200     		lsls	r2, r2, #3
 2019 04b2 D31A     		subs	r3, r2, r3
 2020 04b4 5B00     		lsls	r3, r3, #1
 2021 04b6 9BB2     		uxth	r3, r3
 2022 04b8 9AB2     		uxth	r2, r3
 2023 04ba 4F4B     		ldr	r3, .L105
 2024 04bc 1A80     		strh	r2, [r3]	@ movhi
 476:.\main.c      ****                                     target_distance_quad -= U_OFFSET;
 2025              		.loc 1 476 0
 2026 04be 4E4B     		ldr	r3, .L105
 2027 04c0 1B88     		ldrh	r3, [r3]
 2028 04c2 9BB2     		uxth	r3, r3
 2029 04c4 5D3B     		subs	r3, r3, #93
 2030 04c6 9BB2     		uxth	r3, r3
 2031 04c8 9AB2     		uxth	r2, r3
 2032 04ca 4B4B     		ldr	r3, .L105
 2033 04cc 1A80     		strh	r2, [r3]	@ movhi
 477:.\main.c      ****                                     //target_distance_quad += 208;
 478:.\main.c      ****                                     
 479:.\main.c      ****                                         UART_PutString("Trigger white light\r\n");
 2034              		.loc 1 479 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 46


 2035 04ce 5648     		ldr	r0, .L105+48
 2036 04d0 FFF7FEFF 		bl	UART_PutString
 480:.\main.c      ****                                         UART_PutString("Deadzone enter\r\n");
 2037              		.loc 1 480 0
 2038 04d4 5548     		ldr	r0, .L105+52
 2039 04d6 FFF7FEFF 		bl	UART_PutString
 481:.\main.c      ****                                         
 482:.\main.c      ****                                         deadzone = 1;
 2040              		.loc 1 482 0
 2041 04da 554B     		ldr	r3, .L105+56
 2042 04dc 0122     		movs	r2, #1
 2043 04de 1A70     		strb	r2, [r3]
 483:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2044              		.loc 1 483 0
 2045 04e0 5448     		ldr	r0, .L105+60
 2046 04e2 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 484:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 2047              		.loc 1 484 0
 2048 04e6 444B     		ldr	r3, .L105
 2049 04e8 1B88     		ldrh	r3, [r3]
 2050 04ea 1BB2     		sxth	r3, r3
 2051 04ec 002B     		cmp	r3, #0
 2052 04ee 02DA     		bge	.L80
 2053              		.loc 1 484 0 is_stmt 0 discriminator 1
 2054 04f0 414B     		ldr	r3, .L105
 2055 04f2 0022     		movs	r2, #0
 2056 04f4 1A80     		strh	r2, [r3]	@ movhi
 2057              	.L80:
 485:.\main.c      ****                                         Timer_Deadzone_Start();
 2058              		.loc 1 485 0 is_stmt 1
 2059 04f6 FFF7FEFF 		bl	Timer_Deadzone_Start
 486:.\main.c      ****                                         actionDebounce = 0;
 2060              		.loc 1 486 0
 2061 04fa 0023     		movs	r3, #0
 2062 04fc FB87     		strh	r3, [r7, #62]	@ movhi
 487:.\main.c      ****                                         sensorsDisabled = 1;
 2063              		.loc 1 487 0
 2064 04fe 454B     		ldr	r3, .L105+28
 2065 0500 0122     		movs	r2, #1
 2066 0502 1A60     		str	r2, [r3]
 488:.\main.c      ****                                         initTurnU();
 2067              		.loc 1 488 0
 2068 0504 FFF7FEFF 		bl	initTurnU
 489:.\main.c      ****                                         reached_target = 0;
 2069              		.loc 1 489 0
 2070 0508 3D4B     		ldr	r3, .L105+8
 2071 050a 0022     		movs	r2, #0
 2072 050c 1A70     		strb	r2, [r3]
 490:.\main.c      ****                                         overshot_target = 0;
 2073              		.loc 1 490 0
 2074 050e 3D4B     		ldr	r3, .L105+12
 2075 0510 0022     		movs	r2, #0
 2076 0512 1A70     		strb	r2, [r3]
 491:.\main.c      ****                                         instructionCount += 2;
 2077              		.loc 1 491 0
 2078 0514 3C4B     		ldr	r3, .L105+16
 2079 0516 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 47


 2080 0518 0233     		adds	r3, r3, #2
 2081 051a 9AB2     		uxth	r2, r3
 2082 051c 3A4B     		ldr	r3, .L105+16
 2083 051e 1A80     		strh	r2, [r3]	@ movhi
 492:.\main.c      ****                                         
 493:.\main.c      ****                                         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2084              		.loc 1 493 0
 2085 0520 354B     		ldr	r3, .L105
 2086 0522 1B88     		ldrh	r3, [r3]
 2087 0524 1BB2     		sxth	r3, r3
 2088 0526 07F11402 		add	r2, r7, #20
 2089 052a 1046     		mov	r0, r2
 2090 052c 3349     		ldr	r1, .L105+4
 2091 052e 1A46     		mov	r2, r3
 2092 0530 FFF7FEFF 		bl	sprintf
 494:.\main.c      ****                                         UART_PutString(mes);
 2093              		.loc 1 494 0
 2094 0534 07F11403 		add	r3, r7, #20
 2095 0538 1846     		mov	r0, r3
 2096 053a FFF7FEFF 		bl	UART_PutString
 495:.\main.c      ****                                         sprintf(mes, "instr count:%d\r\n", instructionCount);
 2097              		.loc 1 495 0
 2098 053e 324B     		ldr	r3, .L105+16
 2099 0540 1B88     		ldrh	r3, [r3]
 2100 0542 1A46     		mov	r2, r3
 2101 0544 07F11403 		add	r3, r7, #20
 2102 0548 1846     		mov	r0, r3
 2103 054a 3049     		ldr	r1, .L105+20
 2104 054c FFF7FEFF 		bl	sprintf
 496:.\main.c      ****                                         UART_PutString(mes);
 2105              		.loc 1 496 0
 2106 0550 07F11403 		add	r3, r7, #20
 2107 0554 1846     		mov	r0, r3
 2108 0556 FFF7FEFF 		bl	UART_PutString
 2109              	.LBE8:
 448:.\main.c      ****                         {
 2110              		.loc 1 448 0
 2111 055a DAE0     		b	.L54
 2112              	.L76:
 448:.\main.c      ****                         {
 2113              		.loc 1 448 0 is_stmt 0 discriminator 3
 2114 055c D9E0     		b	.L54
 2115              	.L74:
 497:.\main.c      ****                                 }
 498:.\main.c      ****                                 }
 499:.\main.c      ****                             }
 500:.\main.c      ****                         }
 501:.\main.c      ****                     }
 502:.\main.c      ****                     else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U' || nextSte
 2116              		.loc 1 502 0 is_stmt 1
 2117 055e 294B     		ldr	r3, .L105+12
 2118 0560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2119 0562 012B     		cmp	r3, #1
 2120 0564 40F0D080 		bne	.L81
 2121              		.loc 1 502 0 is_stmt 0 discriminator 1
 2122 0568 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2123 056c 442B     		cmp	r3, #68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 48


 2124 056e 08D0     		beq	.L82
 2125              		.loc 1 502 0 discriminator 2
 2126 0570 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2127 0574 552B     		cmp	r3, #85
 2128 0576 04D0     		beq	.L82
 2129              		.loc 1 502 0 discriminator 3
 2130 0578 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2131 057c 532B     		cmp	r3, #83
 2132 057e 40F0C380 		bne	.L81
 2133              	.L82:
 2134              	.LBB9:
 503:.\main.c      ****                     {
 504:.\main.c      ****                         
 505:.\main.c      ****                                 //instructionCount += 2;
 506:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 507:.\main.c      ****                                 char mes[16];
 508:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2135              		.loc 1 508 0 is_stmt 1
 2136 0582 264B     		ldr	r3, .L105+36
 2137 0584 1B88     		ldrh	r3, [r3]
 2138 0586 1BB2     		sxth	r3, r3
 2139 0588 3A1D     		adds	r2, r7, #4
 2140 058a 1046     		mov	r0, r2
 2141 058c 2449     		ldr	r1, .L105+40
 2142 058e 1A46     		mov	r2, r3
 2143 0590 FFF7FEFF 		bl	sprintf
 509:.\main.c      ****                                  UART_PutString(mes);
 2144              		.loc 1 509 0
 2145 0594 3B1D     		adds	r3, r7, #4
 2146 0596 1846     		mov	r0, r3
 2147 0598 FFF7FEFF 		bl	UART_PutString
 510:.\main.c      ****                                  accum_dist = 0;
 2148              		.loc 1 510 0
 2149 059c 1F4B     		ldr	r3, .L105+36
 2150 059e 0022     		movs	r2, #0
 2151 05a0 1A80     		strh	r2, [r3]	@ movhi
 511:.\main.c      ****                                 uint8 nextStepDist;
 512:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2152              		.loc 1 512 0
 2153 05a2 194B     		ldr	r3, .L105+16
 2154 05a4 1B88     		ldrh	r3, [r3]
 2155 05a6 1A46     		mov	r2, r3
 2156 05a8 1E4B     		ldr	r3, .L105+44
 2157 05aa 1B88     		ldrh	r3, [r3]
 2158 05ac 053B     		subs	r3, r3, #5
 2159 05ae 9A42     		cmp	r2, r3
 2160 05b0 07DC     		bgt	.L83
 2161              		.loc 1 512 0 is_stmt 0 discriminator 1
 2162 05b2 154B     		ldr	r3, .L105+16
 2163 05b4 1B88     		ldrh	r3, [r3]
 2164 05b6 0333     		adds	r3, r3, #3
 2165 05b8 174A     		ldr	r2, .L105+32
 2166 05ba D35C     		ldrb	r3, [r2, r3]
 2167 05bc 87F83A30 		strb	r3, [r7, #58]
 2168 05c0 02E0     		b	.L84
 2169              	.L83:
 513:.\main.c      ****                                 else nextStepDist = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 49


 2170              		.loc 1 513 0 is_stmt 1
 2171 05c2 0023     		movs	r3, #0
 2172 05c4 87F83A30 		strb	r3, [r7, #58]
 2173              	.L84:
 514:.\main.c      ****                                 
 515:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2174              		.loc 1 515 0
 2175 05c8 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 2176 05cc 9BB2     		uxth	r3, r3
 2177 05ce 1A46     		mov	r2, r3	@ movhi
 2178 05d0 D200     		lsls	r2, r2, #3
 2179 05d2 1A44     		add	r2, r2, r3
 2180 05d4 D200     		lsls	r2, r2, #3
 2181 05d6 D31A     		subs	r3, r2, r3
 2182 05d8 5B00     		lsls	r3, r3, #1
 2183 05da 9BB2     		uxth	r3, r3
 2184 05dc 9AB2     		uxth	r2, r3
 2185 05de 064B     		ldr	r3, .L105
 2186 05e0 1A80     		strh	r2, [r3]	@ movhi
 516:.\main.c      ****                                 
 517:.\main.c      ****                                 
 518:.\main.c      ****                                     UART_PutString("Trigger quad\r\n");
 2187              		.loc 1 518 0
 2188 05e2 1548     		ldr	r0, .L105+64
 2189 05e4 FFF7FEFF 		bl	UART_PutString
 519:.\main.c      ****                                     switch(nextStep)
 2190              		.loc 1 519 0
 2191 05e8 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2192 05ec 532B     		cmp	r3, #83
 2193 05ee 38D0     		beq	.L86
 2194 05f0 552B     		cmp	r3, #85
 2195 05f2 23D0     		beq	.L87
 2196 05f4 442B     		cmp	r3, #68
 520:.\main.c      ****                                     {
 521:.\main.c      ****                                         case 'U':
 522:.\main.c      ****                                              Timer_Deadzone_WriteCounter(U_DEADZONE);
 523:.\main.c      ****                                             initTurnU();
 524:.\main.c      ****                                             //target_distance_quad += 208;
 525:.\main.c      ****                                             target_distance_quad -= U_OFFSET;
 526:.\main.c      ****                                             Timer_Deadzone_Start();
 527:.\main.c      ****                                              deadzone = 1;
 528:.\main.c      ****                                         break;
 529:.\main.c      ****                                         case 'D':
 530:.\main.c      ****                                             //do nothing
 531:.\main.c      ****                                         break;
 2197              		.loc 1 531 0
 2198 05f6 59E0     		b	.L85
 2199              	.L106:
 2200              		.align	2
 2201              	.L105:
 2202 05f8 00000000 		.word	target_distance_quad
 2203 05fc 64000000 		.word	.LC5
 2204 0600 00000000 		.word	reached_target
 2205 0604 00000000 		.word	overshot_target
 2206 0608 00000000 		.word	instructionCount
 2207 060c 78000000 		.word	.LC6
 2208 0610 00000000 		.word	frontSensors
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 50


 2209 0614 00000000 		.word	sensorsDisabled
 2210 0618 00000000 		.word	instructions
 2211 061c 00000000 		.word	accum_dist
 2212 0620 24000000 		.word	.LC2
 2213 0624 00000000 		.word	instructionLength
 2214 0628 8C000000 		.word	.LC7
 2215 062c 50000000 		.word	.LC4
 2216 0630 00000000 		.word	deadzone
 2217 0634 905F0100 		.word	90000
 2218 0638 A4000000 		.word	.LC8
 2219              	.L87:
 522:.\main.c      ****                                             initTurnU();
 2220              		.loc 1 522 0
 2221 063c 5048     		ldr	r0, .L107+8
 2222 063e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 523:.\main.c      ****                                             //target_distance_quad += 208;
 2223              		.loc 1 523 0
 2224 0642 FFF7FEFF 		bl	initTurnU
 525:.\main.c      ****                                             Timer_Deadzone_Start();
 2225              		.loc 1 525 0
 2226 0646 4F4B     		ldr	r3, .L107+12
 2227 0648 1B88     		ldrh	r3, [r3]
 2228 064a 9BB2     		uxth	r3, r3
 2229 064c 5D3B     		subs	r3, r3, #93
 2230 064e 9BB2     		uxth	r3, r3
 2231 0650 9AB2     		uxth	r2, r3
 2232 0652 4C4B     		ldr	r3, .L107+12
 2233 0654 1A80     		strh	r2, [r3]	@ movhi
 526:.\main.c      ****                                              deadzone = 1;
 2234              		.loc 1 526 0
 2235 0656 FFF7FEFF 		bl	Timer_Deadzone_Start
 527:.\main.c      ****                                         break;
 2236              		.loc 1 527 0
 2237 065a 4B4B     		ldr	r3, .L107+16
 2238 065c 0122     		movs	r2, #1
 2239 065e 1A70     		strb	r2, [r3]
 528:.\main.c      ****                                         case 'D':
 2240              		.loc 1 528 0
 2241 0660 24E0     		b	.L85
 2242              	.L86:
 532:.\main.c      ****                                         case 'S':
 533:.\main.c      ****                                             inittrackLineZ();
 2243              		.loc 1 533 0
 2244 0662 FFF7FEFF 		bl	inittrackLineZ
 534:.\main.c      ****                                             Timer_Deadzone_WriteCounter(S_DEADZONE);
 2245              		.loc 1 534 0
 2246 0666 42F21070 		movw	r0, #10000
 2247 066a FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 535:.\main.c      ****                                              target_distance_quad -= (QUAD_PER_UNIT * 0.5);
 2248              		.loc 1 535 0
 2249 066e 454B     		ldr	r3, .L107+12
 2250 0670 1B88     		ldrh	r3, [r3]
 2251 0672 1BB2     		sxth	r3, r3
 2252 0674 1846     		mov	r0, r3
 2253 0676 FFF7FEFF 		bl	__aeabi_i2d
 2254 067a 0246     		mov	r2, r0
 2255 067c 0B46     		mov	r3, r1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 51


 2256 067e 1046     		mov	r0, r2
 2257 0680 1946     		mov	r1, r3
 2258 0682 3DA3     		adr	r3, .L107
 2259 0684 D3E90023 		ldrd	r2, [r3]
 2260 0688 FFF7FEFF 		bl	__aeabi_dsub
 2261 068c 0246     		mov	r2, r0
 2262 068e 0B46     		mov	r3, r1
 2263 0690 1046     		mov	r0, r2
 2264 0692 1946     		mov	r1, r3
 2265 0694 FFF7FEFF 		bl	__aeabi_d2iz
 2266 0698 0346     		mov	r3, r0
 2267 069a 9AB2     		uxth	r2, r3
 2268 069c 394B     		ldr	r3, .L107+12
 2269 069e 1A80     		strh	r2, [r3]	@ movhi
 536:.\main.c      ****                                             Timer_Deadzone_Start();
 2270              		.loc 1 536 0
 2271 06a0 FFF7FEFF 		bl	Timer_Deadzone_Start
 537:.\main.c      ****                                             deadzone = 1;
 2272              		.loc 1 537 0
 2273 06a4 384B     		ldr	r3, .L107+16
 2274 06a6 0122     		movs	r2, #1
 2275 06a8 1A70     		strb	r2, [r3]
 538:.\main.c      ****                                         break;
 2276              		.loc 1 538 0
 2277 06aa 00BF     		nop
 2278              	.L85:
 539:.\main.c      ****                                     }                                   
 540:.\main.c      ****                                     reached_target = 0;
 2279              		.loc 1 540 0
 2280 06ac 374B     		ldr	r3, .L107+20
 2281 06ae 0022     		movs	r2, #0
 2282 06b0 1A70     		strb	r2, [r3]
 541:.\main.c      ****                                     overshot_target = 0;
 2283              		.loc 1 541 0
 2284 06b2 374B     		ldr	r3, .L107+24
 2285 06b4 0022     		movs	r2, #0
 2286 06b6 1A70     		strb	r2, [r3]
 542:.\main.c      ****                                     instructionCount += 2;
 2287              		.loc 1 542 0
 2288 06b8 364B     		ldr	r3, .L107+28
 2289 06ba 1B88     		ldrh	r3, [r3]
 2290 06bc 0233     		adds	r3, r3, #2
 2291 06be 9AB2     		uxth	r2, r3
 2292 06c0 344B     		ldr	r3, .L107+28
 2293 06c2 1A80     		strh	r2, [r3]	@ movhi
 543:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2294              		.loc 1 543 0
 2295 06c4 2F4B     		ldr	r3, .L107+12
 2296 06c6 1B88     		ldrh	r3, [r3]
 2297 06c8 1BB2     		sxth	r3, r3
 2298 06ca 002B     		cmp	r3, #0
 2299 06cc 02DA     		bge	.L89
 2300              		.loc 1 543 0 is_stmt 0 discriminator 1
 2301 06ce 2D4B     		ldr	r3, .L107+12
 2302 06d0 0022     		movs	r2, #0
 2303 06d2 1A80     		strh	r2, [r3]	@ movhi
 2304              	.L89:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 52


 544:.\main.c      ****                                     //Timer_Deadzone_Start();
 545:.\main.c      ****                                     //deadzone = 1;
 546:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2305              		.loc 1 546 0 is_stmt 1 discriminator 5
 2306 06d4 2B4B     		ldr	r3, .L107+12
 2307 06d6 1B88     		ldrh	r3, [r3]
 2308 06d8 1BB2     		sxth	r3, r3
 2309 06da 3A1D     		adds	r2, r7, #4
 2310 06dc 1046     		mov	r0, r2
 2311 06de 2E49     		ldr	r1, .L107+32
 2312 06e0 1A46     		mov	r2, r3
 2313 06e2 FFF7FEFF 		bl	sprintf
 547:.\main.c      ****                                     UART_PutString(mes);
 2314              		.loc 1 547 0 discriminator 5
 2315 06e6 3B1D     		adds	r3, r7, #4
 2316 06e8 1846     		mov	r0, r3
 2317 06ea FFF7FEFF 		bl	UART_PutString
 548:.\main.c      ****                                     sprintf(mes, "instr count:%d\r\n", instructionCount);
 2318              		.loc 1 548 0 discriminator 5
 2319 06ee 294B     		ldr	r3, .L107+28
 2320 06f0 1B88     		ldrh	r3, [r3]
 2321 06f2 1A46     		mov	r2, r3
 2322 06f4 3B1D     		adds	r3, r7, #4
 2323 06f6 1846     		mov	r0, r3
 2324 06f8 2849     		ldr	r1, .L107+36
 2325 06fa FFF7FEFF 		bl	sprintf
 549:.\main.c      ****                                     UART_PutString(mes);
 2326              		.loc 1 549 0 discriminator 5
 2327 06fe 3B1D     		adds	r3, r7, #4
 2328 0700 1846     		mov	r0, r3
 2329 0702 FFF7FEFF 		bl	UART_PutString
 2330              	.LBE9:
 503:.\main.c      ****                         
 2331              		.loc 1 503 0 discriminator 5
 2332 0706 04E0     		b	.L54
 2333              	.L81:
 550:.\main.c      ****                     }
 551:.\main.c      ****                     else
 552:.\main.c      ****                     {
 553:.\main.c      ****                         inittrackLineZ();
 2334              		.loc 1 553 0
 2335 0708 FFF7FEFF 		bl	inittrackLineZ
 554:.\main.c      ****                         actionDebounce = 0;
 2336              		.loc 1 554 0
 2337 070c 0023     		movs	r3, #0
 2338 070e FB87     		strh	r3, [r7, #62]	@ movhi
 2339              	.LBE4:
 555:.\main.c      ****                     }
 556:.\main.c      ****                 }
 557:.\main.c      ****                 break;
 2340              		.loc 1 557 0
 2341 0710 FFE7     		b	.L102
 2342              	.L54:
 2343              	.L102:
 2344 0712 00BF     		nop
 2345              	.L41:
 558:.\main.c      ****         }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 53


 559:.\main.c      ****         
 560:.\main.c      ****         switch(movement_state)
 2346              		.loc 1 560 0
 2347 0714 224B     		ldr	r3, .L107+40
 2348 0716 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2349 0718 072B     		cmp	r3, #7
 2350 071a 3FF6A4AC 		bhi	.L100
 2351 071e 01A2     		adr	r2, .L92
 2352 0720 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2353              		.p2align 2
 2354              	.L92:
 2355 0724 45070000 		.word	.L91+1
 2356 0728 4B070000 		.word	.L93+1
 2357 072c 51070000 		.word	.L94+1
 2358 0730 5D070000 		.word	.L95+1
 2359 0734 63070000 		.word	.L96+1
 2360 0738 69070000 		.word	.L97+1
 2361 073c 6F070000 		.word	.L98+1
 2362 0740 57070000 		.word	.L99+1
 2363              		.p2align 1
 2364              	.L91:
 561:.\main.c      ****         {
 562:.\main.c      ****             case DRIVE:
 563:.\main.c      ****                 driveForwards();
 2365              		.loc 1 563 0
 2366 0744 FFF7FEFF 		bl	driveForwards
 564:.\main.c      ****             break;
 2367              		.loc 1 564 0
 2368 0748 13E0     		b	.L90
 2369              	.L93:
 565:.\main.c      ****             case LTURN:
 566:.\main.c      ****                 turnLeft();
 2370              		.loc 1 566 0
 2371 074a FFF7FEFF 		bl	turnLeft
 567:.\main.c      ****             break;
 2372              		.loc 1 567 0
 2373 074e 10E0     		b	.L90
 2374              	.L94:
 568:.\main.c      ****             case RTURN:
 569:.\main.c      ****                 turnRight();
 2375              		.loc 1 569 0
 2376 0750 FFF7FEFF 		bl	turnRight
 570:.\main.c      ****             break;
 2377              		.loc 1 570 0
 2378 0754 0DE0     		b	.L90
 2379              	.L99:
 571:.\main.c      ****             case UTURN:
 572:.\main.c      ****                 turnU();
 2380              		.loc 1 572 0
 2381 0756 FFF7FEFF 		bl	turnU
 573:.\main.c      ****             break;
 2382              		.loc 1 573 0
 2383 075a 0AE0     		b	.L90
 2384              	.L95:
 574:.\main.c      ****             case STOPPED:
 575:.\main.c      ****                 brakeMotor();
 2385              		.loc 1 575 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 54


 2386 075c FFF7FEFF 		bl	brakeMotor
 576:.\main.c      ****             break;
 2387              		.loc 1 576 0
 2388 0760 07E0     		b	.L90
 2389              	.L96:
 577:.\main.c      ****             case TRACKING:
 578:.\main.c      ****                 trackLine();
 2390              		.loc 1 578 0
 2391 0762 FFF7FEFF 		bl	trackLine
 579:.\main.c      ****             break;
 2392              		.loc 1 579 0
 2393 0766 04E0     		b	.L90
 2394              	.L97:
 580:.\main.c      ****             case TRACKING_U:
 581:.\main.c      ****                 trackLineU();
 2395              		.loc 1 581 0
 2396 0768 FFF7FEFF 		bl	trackLineU
 582:.\main.c      ****             break;
 2397              		.loc 1 582 0
 2398 076c 01E0     		b	.L90
 2399              	.L98:
 583:.\main.c      ****             case TRACKING_SOFT:
 584:.\main.c      ****                 trackLineZ();
 2400              		.loc 1 584 0
 2401 076e FFF7FEFF 		bl	trackLineZ
 2402              	.L90:
 585:.\main.c      ****         }      
 586:.\main.c      ****     }   
 2403              		.loc 1 586 0
 2404 0772 78E4     		b	.L100
 2405              	.L108:
 2406 0774 AFF30080 		.align	3
 2407              	.L107:
 2408 0778 00000000 		.word	0
 2409 077c 00C05140 		.word	1079099392
 2410 0780 905F0100 		.word	90000
 2411 0784 00000000 		.word	target_distance_quad
 2412 0788 00000000 		.word	deadzone
 2413 078c 00000000 		.word	reached_target
 2414 0790 00000000 		.word	overshot_target
 2415 0794 00000000 		.word	instructionCount
 2416 0798 64000000 		.word	.LC5
 2417 079c 78000000 		.word	.LC6
 2418 07a0 00000000 		.word	movement_state
 2419              		.cfi_endproc
 2420              	.LFE71:
 2421              		.size	main, .-main
 2422 07a4 AFF30080 		.section	.text.handle_rx_binary,"ax",%progbits
 2423              		.align	2
 2424              		.global	handle_rx_binary
 2425              		.thumb
 2426              		.thumb_func
 2427              		.type	handle_rx_binary, %function
 2428              	handle_rx_binary:
 2429              	.LFB72:
 587:.\main.c      **** }
 588:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 55


 589:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 590:.\main.c      **** 
 591:.\main.c      **** void handle_rx_binary()
 592:.\main.c      **** {
 2430              		.loc 1 592 0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 32
 2433              		@ frame_needed = 1, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
 2435 0000 80B4     		push	{r7}
 2436              		.cfi_def_cfa_offset 4
 2437              		.cfi_offset 7, -4
 2438 0002 89B0     		sub	sp, sp, #36
 2439              		.cfi_def_cfa_offset 40
 2440 0004 00AF     		add	r7, sp, #0
 2441              		.cfi_def_cfa_register 7
 593:.\main.c      ****     if(flag_rx == 1)
 2442              		.loc 1 593 0
 2443 0006 524B     		ldr	r3, .L129
 2444 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2445 000a 012B     		cmp	r3, #1
 2446 000c 40F09A80 		bne	.L109
 2447              	.LBB10:
 594:.\main.c      ****     {    
 595:.\main.c      ****         flag_rx = 0;
 2448              		.loc 1 595 0
 2449 0010 4F4B     		ldr	r3, .L129
 2450 0012 0022     		movs	r2, #0
 2451 0014 1A70     		strb	r2, [r3]
 596:.\main.c      ****         
 597:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2452              		.loc 1 597 0
 2453 0016 4F4B     		ldr	r3, .L129+4
 2454 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2455 001a 1B02     		lsls	r3, r3, #8
 2456 001c 9AB2     		uxth	r2, r3
 2457 001e 4D4B     		ldr	r3, .L129+4
 2458 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2459 0022 9BB2     		uxth	r3, r3
 2460 0024 1343     		orrs	r3, r3, r2
 2461 0026 9BB2     		uxth	r3, r3
 2462 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 598:.\main.c      ****         char byte_packet[12];
 599:.\main.c      ****         char string_packet[12];
 600:.\main.c      ****         
 601:.\main.c      ****         switch(byteCount)
 2463              		.loc 1 601 0
 2464 002a 4B4B     		ldr	r3, .L129+8
 2465 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2466 002e 043B     		subs	r3, r3, #4
 2467 0030 1E2B     		cmp	r3, #30
 2468 0032 00F28780 		bhi	.L109
 2469 0036 01A2     		adr	r2, .L113
 2470 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2471              		.p2align 2
 2472              	.L113:
 2473 003c B9000000 		.word	.L112+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 56


 2474 0040 45010000 		.word	.L109+1
 2475 0044 CD000000 		.word	.L114+1
 2476 0048 45010000 		.word	.L109+1
 2477 004c D5000000 		.word	.L115+1
 2478 0050 45010000 		.word	.L109+1
 2479 0054 DD000000 		.word	.L116+1
 2480 0058 45010000 		.word	.L109+1
 2481 005c E5000000 		.word	.L117+1
 2482 0060 45010000 		.word	.L109+1
 2483 0064 ED000000 		.word	.L118+1
 2484 0068 45010000 		.word	.L109+1
 2485 006c F5000000 		.word	.L119+1
 2486 0070 45010000 		.word	.L109+1
 2487 0074 FD000000 		.word	.L120+1
 2488 0078 45010000 		.word	.L109+1
 2489 007c 05010000 		.word	.L121+1
 2490 0080 45010000 		.word	.L109+1
 2491 0084 0D010000 		.word	.L122+1
 2492 0088 45010000 		.word	.L109+1
 2493 008c 15010000 		.word	.L123+1
 2494 0090 45010000 		.word	.L109+1
 2495 0094 1D010000 		.word	.L124+1
 2496 0098 45010000 		.word	.L109+1
 2497 009c 25010000 		.word	.L125+1
 2498 00a0 45010000 		.word	.L109+1
 2499 00a4 2D010000 		.word	.L126+1
 2500 00a8 45010000 		.word	.L109+1
 2501 00ac 35010000 		.word	.L127+1
 2502 00b0 45010000 		.word	.L109+1
 2503 00b4 3D010000 		.word	.L128+1
 2504              		.p2align 1
 2505              	.L112:
 602:.\main.c      ****         {
 603:.\main.c      ****             case 4:
 604:.\main.c      ****                 buffer_state.rssi = packet[0];
 2506              		.loc 1 604 0
 2507 00b8 264B     		ldr	r3, .L129+4
 2508 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2509 00bc DAB2     		uxtb	r2, r3
 2510 00be 274B     		ldr	r3, .L129+12
 2511 00c0 1A70     		strb	r2, [r3]
 605:.\main.c      ****                 buffer_state.index = packet[1];
 2512              		.loc 1 605 0
 2513 00c2 244B     		ldr	r3, .L129+4
 2514 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2515 00c6 254B     		ldr	r3, .L129+12
 2516 00c8 5A70     		strb	r2, [r3, #1]
 606:.\main.c      ****             break;
 2517              		.loc 1 606 0
 2518 00ca 3BE0     		b	.L109
 2519              	.L114:
 607:.\main.c      ****             case 6:
 608:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2520              		.loc 1 608 0
 2521 00cc FA8B     		ldrh	r2, [r7, #30]
 2522 00ce 234B     		ldr	r3, .L129+12
 2523 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 57


 609:.\main.c      ****             break;
 2524              		.loc 1 609 0
 2525 00d2 37E0     		b	.L109
 2526              	.L115:
 610:.\main.c      ****             case 8:
 611:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2527              		.loc 1 611 0
 2528 00d4 FA8B     		ldrh	r2, [r7, #30]
 2529 00d6 214B     		ldr	r3, .L129+12
 2530 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 612:.\main.c      ****             break;
 2531              		.loc 1 612 0
 2532 00da 33E0     		b	.L109
 2533              	.L116:
 613:.\main.c      ****             case 10:
 614:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2534              		.loc 1 614 0
 2535 00dc FA8B     		ldrh	r2, [r7, #30]
 2536 00de 1F4B     		ldr	r3, .L129+12
 2537 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 615:.\main.c      ****             break;
 2538              		.loc 1 615 0
 2539 00e2 2FE0     		b	.L109
 2540              	.L117:
 616:.\main.c      ****             case 12:
 617:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2541              		.loc 1 617 0
 2542 00e4 FA8B     		ldrh	r2, [r7, #30]
 2543 00e6 1D4B     		ldr	r3, .L129+12
 2544 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 618:.\main.c      ****             break;
 2545              		.loc 1 618 0
 2546 00ea 2BE0     		b	.L109
 2547              	.L118:
 619:.\main.c      ****             case 14:
 620:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2548              		.loc 1 620 0
 2549 00ec FA8B     		ldrh	r2, [r7, #30]
 2550 00ee 1B4B     		ldr	r3, .L129+12
 2551 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 621:.\main.c      ****             break;
 2552              		.loc 1 621 0
 2553 00f2 27E0     		b	.L109
 2554              	.L119:
 622:.\main.c      ****             case 16:
 623:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2555              		.loc 1 623 0
 2556 00f4 FA8B     		ldrh	r2, [r7, #30]
 2557 00f6 194B     		ldr	r3, .L129+12
 2558 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 624:.\main.c      ****             break;
 2559              		.loc 1 624 0
 2560 00fa 23E0     		b	.L109
 2561              	.L120:
 625:.\main.c      ****             case 18:
 626:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2562              		.loc 1 626 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 58


 2563 00fc FA8B     		ldrh	r2, [r7, #30]
 2564 00fe 174B     		ldr	r3, .L129+12
 2565 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 627:.\main.c      ****             break;
 2566              		.loc 1 627 0
 2567 0102 1FE0     		b	.L109
 2568              	.L121:
 628:.\main.c      ****             case 20:
 629:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2569              		.loc 1 629 0
 2570 0104 FA8B     		ldrh	r2, [r7, #30]
 2571 0106 154B     		ldr	r3, .L129+12
 2572 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 630:.\main.c      ****             break;
 2573              		.loc 1 630 0
 2574 010a 1BE0     		b	.L109
 2575              	.L122:
 631:.\main.c      ****             case 22:
 632:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2576              		.loc 1 632 0
 2577 010c FA8B     		ldrh	r2, [r7, #30]
 2578 010e 134B     		ldr	r3, .L129+12
 2579 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 633:.\main.c      ****             break;
 2580              		.loc 1 633 0
 2581 0112 17E0     		b	.L109
 2582              	.L123:
 634:.\main.c      ****             case 24:
 635:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2583              		.loc 1 635 0
 2584 0114 FA8B     		ldrh	r2, [r7, #30]
 2585 0116 114B     		ldr	r3, .L129+12
 2586 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 636:.\main.c      ****             break;
 2587              		.loc 1 636 0
 2588 011a 13E0     		b	.L109
 2589              	.L124:
 637:.\main.c      ****             case 26:
 638:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2590              		.loc 1 638 0
 2591 011c FA8B     		ldrh	r2, [r7, #30]
 2592 011e 0F4B     		ldr	r3, .L129+12
 2593 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 639:.\main.c      ****             break;
 2594              		.loc 1 639 0
 2595 0122 0FE0     		b	.L109
 2596              	.L125:
 640:.\main.c      ****             case 28:
 641:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2597              		.loc 1 641 0
 2598 0124 FA8B     		ldrh	r2, [r7, #30]
 2599 0126 0D4B     		ldr	r3, .L129+12
 2600 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 642:.\main.c      ****             break;
 2601              		.loc 1 642 0
 2602 012a 0BE0     		b	.L109
 2603              	.L126:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 59


 643:.\main.c      ****             case 30:
 644:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2604              		.loc 1 644 0
 2605 012c FA8B     		ldrh	r2, [r7, #30]
 2606 012e 0B4B     		ldr	r3, .L129+12
 2607 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 645:.\main.c      ****             break;
 2608              		.loc 1 645 0
 2609 0132 07E0     		b	.L109
 2610              	.L127:
 646:.\main.c      ****             case 32:
 647:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2611              		.loc 1 647 0
 2612 0134 FA8B     		ldrh	r2, [r7, #30]
 2613 0136 094B     		ldr	r3, .L129+12
 2614 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 648:.\main.c      ****             break;
 2615              		.loc 1 648 0
 2616 013a 03E0     		b	.L109
 2617              	.L128:
 649:.\main.c      ****             case 34:
 650:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2618              		.loc 1 650 0
 2619 013c FA8B     		ldrh	r2, [r7, #30]
 2620 013e 074B     		ldr	r3, .L129+12
 2621 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 651:.\main.c      ****             break;
 2622              		.loc 1 651 0
 2623 0142 00BF     		nop
 2624              	.L109:
 2625              	.LBE10:
 652:.\main.c      ****         }
 653:.\main.c      ****     }
 654:.\main.c      **** }
 2626              		.loc 1 654 0
 2627 0144 2437     		adds	r7, r7, #36
 2628              		.cfi_def_cfa_offset 4
 2629 0146 BD46     		mov	sp, r7
 2630              		.cfi_def_cfa_register 13
 2631              		@ sp needed
 2632 0148 5DF8047B 		ldr	r7, [sp], #4
 2633              		.cfi_restore 7
 2634              		.cfi_def_cfa_offset 0
 2635 014c 7047     		bx	lr
 2636              	.L130:
 2637 014e 00BF     		.align	2
 2638              	.L129:
 2639 0150 00000000 		.word	flag_rx
 2640 0154 00000000 		.word	packet
 2641 0158 00000000 		.word	byteCount
 2642 015c 00000000 		.word	buffer_state
 2643              		.cfi_endproc
 2644              	.LFE72:
 2645              		.size	handle_rx_binary, .-handle_rx_binary
 2646              		.section	.text.setLeftDir,"ax",%progbits
 2647              		.align	2
 2648              		.global	setLeftDir
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 60


 2649              		.thumb
 2650              		.thumb_func
 2651              		.type	setLeftDir, %function
 2652              	setLeftDir:
 2653              	.LFB73:
 655:.\main.c      **** 
 656:.\main.c      **** void setLeftDir(uint8 dir)
 657:.\main.c      **** {
 2654              		.loc 1 657 0
 2655              		.cfi_startproc
 2656              		@ args = 0, pretend = 0, frame = 8
 2657              		@ frame_needed = 1, uses_anonymous_args = 0
 2658 0000 80B5     		push	{r7, lr}
 2659              		.cfi_def_cfa_offset 8
 2660              		.cfi_offset 7, -8
 2661              		.cfi_offset 14, -4
 2662 0002 82B0     		sub	sp, sp, #8
 2663              		.cfi_def_cfa_offset 16
 2664 0004 00AF     		add	r7, sp, #0
 2665              		.cfi_def_cfa_register 7
 2666 0006 0346     		mov	r3, r0
 2667 0008 FB71     		strb	r3, [r7, #7]
 658:.\main.c      ****     M2_IN2_Write(dir);
 2668              		.loc 1 658 0
 2669 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2670 000c 1846     		mov	r0, r3
 2671 000e FFF7FEFF 		bl	M2_IN2_Write
 659:.\main.c      **** }
 2672              		.loc 1 659 0
 2673 0012 0837     		adds	r7, r7, #8
 2674              		.cfi_def_cfa_offset 8
 2675 0014 BD46     		mov	sp, r7
 2676              		.cfi_def_cfa_register 13
 2677              		@ sp needed
 2678 0016 80BD     		pop	{r7, pc}
 2679              		.cfi_endproc
 2680              	.LFE73:
 2681              		.size	setLeftDir, .-setLeftDir
 2682              		.section	.text.setRightDir,"ax",%progbits
 2683              		.align	2
 2684              		.global	setRightDir
 2685              		.thumb
 2686              		.thumb_func
 2687              		.type	setRightDir, %function
 2688              	setRightDir:
 2689              	.LFB74:
 660:.\main.c      **** 
 661:.\main.c      **** void setRightDir(uint8 dir)
 662:.\main.c      **** {
 2690              		.loc 1 662 0
 2691              		.cfi_startproc
 2692              		@ args = 0, pretend = 0, frame = 8
 2693              		@ frame_needed = 1, uses_anonymous_args = 0
 2694 0000 80B5     		push	{r7, lr}
 2695              		.cfi_def_cfa_offset 8
 2696              		.cfi_offset 7, -8
 2697              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 61


 2698 0002 82B0     		sub	sp, sp, #8
 2699              		.cfi_def_cfa_offset 16
 2700 0004 00AF     		add	r7, sp, #0
 2701              		.cfi_def_cfa_register 7
 2702 0006 0346     		mov	r3, r0
 2703 0008 FB71     		strb	r3, [r7, #7]
 663:.\main.c      ****     M1_IN2_Write(dir);
 2704              		.loc 1 663 0
 2705 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2706 000c 1846     		mov	r0, r3
 2707 000e FFF7FEFF 		bl	M1_IN2_Write
 664:.\main.c      **** }
 2708              		.loc 1 664 0
 2709 0012 0837     		adds	r7, r7, #8
 2710              		.cfi_def_cfa_offset 8
 2711 0014 BD46     		mov	sp, r7
 2712              		.cfi_def_cfa_register 13
 2713              		@ sp needed
 2714 0016 80BD     		pop	{r7, pc}
 2715              		.cfi_endproc
 2716              	.LFE74:
 2717              		.size	setRightDir, .-setRightDir
 2718              		.section	.rodata
 2719 00b3 00       		.align	2
 2720              	.LC9:
 2721 00b4 6469723A 		.ascii	"dir: %d\015\012\000"
 2721      2025640D 
 2721      0A00
 2722              		.section	.text.reverseDirection,"ax",%progbits
 2723              		.align	2
 2724              		.global	reverseDirection
 2725              		.thumb
 2726              		.thumb_func
 2727              		.type	reverseDirection, %function
 2728              	reverseDirection:
 2729              	.LFB75:
 665:.\main.c      **** 
 666:.\main.c      **** void reverseDirection()
 667:.\main.c      **** {
 2730              		.loc 1 667 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 16
 2733              		@ frame_needed = 1, uses_anonymous_args = 0
 2734 0000 80B5     		push	{r7, lr}
 2735              		.cfi_def_cfa_offset 8
 2736              		.cfi_offset 7, -8
 2737              		.cfi_offset 14, -4
 2738 0002 84B0     		sub	sp, sp, #16
 2739              		.cfi_def_cfa_offset 24
 2740 0004 00AF     		add	r7, sp, #0
 2741              		.cfi_def_cfa_register 7
 668:.\main.c      ****     direction = !direction;
 2742              		.loc 1 668 0
 2743 0006 114B     		ldr	r3, .L134
 2744 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2745 000a 002B     		cmp	r3, #0
 2746 000c 0CBF     		ite	eq
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 62


 2747 000e 0123     		moveq	r3, #1
 2748 0010 0023     		movne	r3, #0
 2749 0012 DBB2     		uxtb	r3, r3
 2750 0014 1A46     		mov	r2, r3
 2751 0016 0D4B     		ldr	r3, .L134
 2752 0018 1A70     		strb	r2, [r3]
 669:.\main.c      ****     setLeftDir(direction);
 2753              		.loc 1 669 0
 2754 001a 0C4B     		ldr	r3, .L134
 2755 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2756 001e 1846     		mov	r0, r3
 2757 0020 FFF7FEFF 		bl	setLeftDir
 670:.\main.c      ****     setRightDir(direction);
 2758              		.loc 1 670 0
 2759 0024 094B     		ldr	r3, .L134
 2760 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2761 0028 1846     		mov	r0, r3
 2762 002a FFF7FEFF 		bl	setRightDir
 671:.\main.c      ****     char mes[16];
 672:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2763              		.loc 1 672 0
 2764 002e 074B     		ldr	r3, .L134
 2765 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2766 0032 1A46     		mov	r2, r3
 2767 0034 3B46     		mov	r3, r7
 2768 0036 1846     		mov	r0, r3
 2769 0038 0549     		ldr	r1, .L134+4
 2770 003a FFF7FEFF 		bl	sprintf
 673:.\main.c      ****     UART_PutString(mes);
 2771              		.loc 1 673 0
 2772 003e 3B46     		mov	r3, r7
 2773 0040 1846     		mov	r0, r3
 2774 0042 FFF7FEFF 		bl	UART_PutString
 674:.\main.c      **** }
 2775              		.loc 1 674 0
 2776 0046 1037     		adds	r7, r7, #16
 2777              		.cfi_def_cfa_offset 8
 2778 0048 BD46     		mov	sp, r7
 2779              		.cfi_def_cfa_register 13
 2780              		@ sp needed
 2781 004a 80BD     		pop	{r7, pc}
 2782              	.L135:
 2783              		.align	2
 2784              	.L134:
 2785 004c 00000000 		.word	direction
 2786 0050 B4000000 		.word	.LC9
 2787              		.cfi_endproc
 2788              	.LFE75:
 2789              		.size	reverseDirection, .-reverseDirection
 2790              		.global	__aeabi_dcmplt
 2791              		.global	__aeabi_ddiv
 2792              		.section	.text.setSpeed,"ax",%progbits
 2793              		.align	2
 2794              		.global	setSpeed
 2795              		.thumb
 2796              		.thumb_func
 2797              		.type	setSpeed, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 63


 2798              	setSpeed:
 2799              	.LFB76:
 675:.\main.c      **** 
 676:.\main.c      **** void setSpeed(double left, double right){
 2800              		.loc 1 676 0
 2801              		.cfi_startproc
 2802              		@ args = 0, pretend = 0, frame = 24
 2803              		@ frame_needed = 1, uses_anonymous_args = 0
 2804 0000 80B5     		push	{r7, lr}
 2805              		.cfi_def_cfa_offset 8
 2806              		.cfi_offset 7, -8
 2807              		.cfi_offset 14, -4
 2808 0002 86B0     		sub	sp, sp, #24
 2809              		.cfi_def_cfa_offset 32
 2810 0004 00AF     		add	r7, sp, #0
 2811              		.cfi_def_cfa_register 7
 2812 0006 C7E90201 		strd	r0, [r7, #8]
 2813 000a C7E90023 		strd	r2, [r7]
 677:.\main.c      ****     if(right < 0.0)
 2814              		.loc 1 677 0
 2815 000e D7E90001 		ldrd	r0, [r7]
 2816 0012 4FF00002 		mov	r2, #0
 2817 0016 4FF00003 		mov	r3, #0
 2818 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2819 001e 0346     		mov	r3, r0
 2820 0020 002B     		cmp	r3, #0
 2821 0022 10D0     		beq	.L145
 678:.\main.c      ****     {
 679:.\main.c      ****         //char mes[16];
 680:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 681:.\main.c      ****        // UART_PutString(mes);
 682:.\main.c      ****         setRightDir(!direction);
 2822              		.loc 1 682 0
 2823 0024 304B     		ldr	r3, .L147+8
 2824 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2825 0028 002B     		cmp	r3, #0
 2826 002a 0CBF     		ite	eq
 2827 002c 0123     		moveq	r3, #1
 2828 002e 0023     		movne	r3, #0
 2829 0030 DBB2     		uxtb	r3, r3
 2830 0032 1846     		mov	r0, r3
 2831 0034 FFF7FEFF 		bl	setRightDir
 683:.\main.c      ****         right = -right;
 2832              		.loc 1 683 0
 2833 0038 3B68     		ldr	r3, [r7]
 2834 003a 3B60     		str	r3, [r7]
 2835 003c 7B68     		ldr	r3, [r7, #4]
 2836 003e 83F00043 		eor	r3, r3, #-2147483648
 2837 0042 7B60     		str	r3, [r7, #4]
 2838 0044 04E0     		b	.L139
 2839              	.L145:
 684:.\main.c      ****     }
 685:.\main.c      ****     else setRightDir(direction);
 2840              		.loc 1 685 0
 2841 0046 284B     		ldr	r3, .L147+8
 2842 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2843 004a 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 64


 2844 004c FFF7FEFF 		bl	setRightDir
 2845              	.L139:
 686:.\main.c      ****     
 687:.\main.c      ****     if(left < 0.0)
 2846              		.loc 1 687 0
 2847 0050 D7E90201 		ldrd	r0, [r7, #8]
 2848 0054 4FF00002 		mov	r2, #0
 2849 0058 4FF00003 		mov	r3, #0
 2850 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2851 0060 0346     		mov	r3, r0
 2852 0062 002B     		cmp	r3, #0
 2853 0064 10D0     		beq	.L146
 688:.\main.c      ****     {
 689:.\main.c      ****        // char mes[16];
 690:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 691:.\main.c      ****         //UART_PutString(mes);
 692:.\main.c      ****         setLeftDir(!direction);
 2854              		.loc 1 692 0
 2855 0066 204B     		ldr	r3, .L147+8
 2856 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2857 006a 002B     		cmp	r3, #0
 2858 006c 0CBF     		ite	eq
 2859 006e 0123     		moveq	r3, #1
 2860 0070 0023     		movne	r3, #0
 2861 0072 DBB2     		uxtb	r3, r3
 2862 0074 1846     		mov	r0, r3
 2863 0076 FFF7FEFF 		bl	setLeftDir
 693:.\main.c      ****         left = -left;
 2864              		.loc 1 693 0
 2865 007a BB68     		ldr	r3, [r7, #8]
 2866 007c BB60     		str	r3, [r7, #8]
 2867 007e FB68     		ldr	r3, [r7, #12]
 2868 0080 83F00043 		eor	r3, r3, #-2147483648
 2869 0084 FB60     		str	r3, [r7, #12]
 2870 0086 04E0     		b	.L142
 2871              	.L146:
 694:.\main.c      ****     }
 695:.\main.c      ****     else setLeftDir(direction);
 2872              		.loc 1 695 0
 2873 0088 174B     		ldr	r3, .L147+8
 2874 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 008c 1846     		mov	r0, r3
 2876 008e FFF7FEFF 		bl	setLeftDir
 2877              	.L142:
 696:.\main.c      ****     
 697:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2878              		.loc 1 697 0
 2879 0092 D7E90201 		ldrd	r0, [r7, #8]
 2880 0096 12A3     		adr	r3, .L147
 2881 0098 D3E90023 		ldrd	r2, [r3]
 2882 009c FFF7FEFF 		bl	__aeabi_ddiv
 2883 00a0 0246     		mov	r2, r0
 2884 00a2 0B46     		mov	r3, r1
 2885 00a4 1046     		mov	r0, r2
 2886 00a6 1946     		mov	r1, r3
 2887 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2888 00ac 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 65


 2889 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 698:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2890              		.loc 1 698 0
 2891 00b0 D7E90001 		ldrd	r0, [r7]
 2892 00b4 0AA3     		adr	r3, .L147
 2893 00b6 D3E90023 		ldrd	r2, [r3]
 2894 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2895 00be 0246     		mov	r2, r0
 2896 00c0 0B46     		mov	r3, r1
 2897 00c2 1046     		mov	r0, r2
 2898 00c4 1946     		mov	r1, r3
 2899 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2900 00ca 0346     		mov	r3, r0
 2901 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 699:.\main.c      ****     
 700:.\main.c      ****     leftSpeedLimit = countsRight;
 2902              		.loc 1 700 0
 2903 00ce 074A     		ldr	r2, .L147+12
 2904 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2905 00d2 1380     		strh	r3, [r2]	@ movhi
 701:.\main.c      ****     rightSpeedLimit = countsLeft;
 2906              		.loc 1 701 0
 2907 00d4 064A     		ldr	r2, .L147+16
 2908 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2909 00d8 1380     		strh	r3, [r2]	@ movhi
 702:.\main.c      **** }
 2910              		.loc 1 702 0
 2911 00da 1837     		adds	r7, r7, #24
 2912              		.cfi_def_cfa_offset 8
 2913 00dc BD46     		mov	sp, r7
 2914              		.cfi_def_cfa_register 13
 2915              		@ sp needed
 2916 00de 80BD     		pop	{r7, pc}
 2917              	.L148:
 2918              		.align	3
 2919              	.L147:
 2920 00e0 969526A5 		.word	-1524197994
 2921 00e4 A0DBEF3F 		.word	1072683936
 2922 00e8 00000000 		.word	direction
 2923 00ec 00000000 		.word	leftSpeedLimit
 2924 00f0 00000000 		.word	rightSpeedLimit
 2925              		.cfi_endproc
 2926              	.LFE76:
 2927              		.size	setSpeed, .-setSpeed
 2928 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2929              		.align	2
 2930              		.global	brakeLeft
 2931              		.thumb
 2932              		.thumb_func
 2933              		.type	brakeLeft, %function
 2934              	brakeLeft:
 2935              	.LFB77:
 703:.\main.c      **** 
 704:.\main.c      **** void brakeLeft()
 705:.\main.c      **** {
 2936              		.loc 1 705 0
 2937              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 66


 2938              		@ args = 0, pretend = 0, frame = 0
 2939              		@ frame_needed = 1, uses_anonymous_args = 0
 2940 0000 80B5     		push	{r7, lr}
 2941              		.cfi_def_cfa_offset 8
 2942              		.cfi_offset 7, -8
 2943              		.cfi_offset 14, -4
 2944 0002 00AF     		add	r7, sp, #0
 2945              		.cfi_def_cfa_register 7
 706:.\main.c      ****     PWM_1_WriteCompare(0);
 2946              		.loc 1 706 0
 2947 0004 0020     		movs	r0, #0
 2948 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 707:.\main.c      ****     left_duty_cycle = 0;
 2949              		.loc 1 707 0
 2950 000a 024B     		ldr	r3, .L150
 2951 000c 0022     		movs	r2, #0
 2952 000e 1A80     		strh	r2, [r3]	@ movhi
 708:.\main.c      **** }
 2953              		.loc 1 708 0
 2954 0010 80BD     		pop	{r7, pc}
 2955              	.L151:
 2956 0012 00BF     		.align	2
 2957              	.L150:
 2958 0014 00000000 		.word	left_duty_cycle
 2959              		.cfi_endproc
 2960              	.LFE77:
 2961              		.size	brakeLeft, .-brakeLeft
 2962              		.section	.text.brakeRight,"ax",%progbits
 2963              		.align	2
 2964              		.global	brakeRight
 2965              		.thumb
 2966              		.thumb_func
 2967              		.type	brakeRight, %function
 2968              	brakeRight:
 2969              	.LFB78:
 709:.\main.c      **** 
 710:.\main.c      **** void brakeRight()
 711:.\main.c      **** {
 2970              		.loc 1 711 0
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 0
 2973              		@ frame_needed = 1, uses_anonymous_args = 0
 2974 0000 80B5     		push	{r7, lr}
 2975              		.cfi_def_cfa_offset 8
 2976              		.cfi_offset 7, -8
 2977              		.cfi_offset 14, -4
 2978 0002 00AF     		add	r7, sp, #0
 2979              		.cfi_def_cfa_register 7
 712:.\main.c      ****      PWM_2_WriteCompare(0);
 2980              		.loc 1 712 0
 2981 0004 0020     		movs	r0, #0
 2982 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 713:.\main.c      ****      right_duty_cycle = 0;
 2983              		.loc 1 713 0
 2984 000a 024B     		ldr	r3, .L153
 2985 000c 0022     		movs	r2, #0
 2986 000e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 67


 714:.\main.c      **** }
 2987              		.loc 1 714 0
 2988 0010 80BD     		pop	{r7, pc}
 2989              	.L154:
 2990 0012 00BF     		.align	2
 2991              	.L153:
 2992 0014 00000000 		.word	right_duty_cycle
 2993              		.cfi_endproc
 2994              	.LFE78:
 2995              		.size	brakeRight, .-brakeRight
 2996              		.section	.text.brakeMotor,"ax",%progbits
 2997              		.align	2
 2998              		.global	brakeMotor
 2999              		.thumb
 3000              		.thumb_func
 3001              		.type	brakeMotor, %function
 3002              	brakeMotor:
 3003              	.LFB79:
 715:.\main.c      **** 
 716:.\main.c      **** void brakeMotor(){
 3004              		.loc 1 716 0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
 3007              		@ frame_needed = 1, uses_anonymous_args = 0
 3008 0000 80B5     		push	{r7, lr}
 3009              		.cfi_def_cfa_offset 8
 3010              		.cfi_offset 7, -8
 3011              		.cfi_offset 14, -4
 3012 0002 00AF     		add	r7, sp, #0
 3013              		.cfi_def_cfa_register 7
 717:.\main.c      ****     setSpeed(0, 0);
 3014              		.loc 1 717 0
 3015 0004 4FF00000 		mov	r0, #0
 3016 0008 4FF00001 		mov	r1, #0
 3017 000c 4FF00002 		mov	r2, #0
 3018 0010 4FF00003 		mov	r3, #0
 3019 0014 FFF7FEFF 		bl	setSpeed
 718:.\main.c      ****     brakeLeft();
 3020              		.loc 1 718 0
 3021 0018 FFF7FEFF 		bl	brakeLeft
 719:.\main.c      ****     brakeRight();
 3022              		.loc 1 719 0
 3023 001c FFF7FEFF 		bl	brakeRight
 720:.\main.c      **** }
 3024              		.loc 1 720 0
 3025 0020 80BD     		pop	{r7, pc}
 3026              		.cfi_endproc
 3027              	.LFE79:
 3028              		.size	brakeMotor, .-brakeMotor
 3029 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 3030              		.align	2
 3031              		.global	driveForwards
 3032              		.thumb
 3033              		.thumb_func
 3034              		.type	driveForwards, %function
 3035              	driveForwards:
 3036              	.LFB80:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 68


 721:.\main.c      **** 
 722:.\main.c      **** void driveForwards()
 723:.\main.c      **** {
 3037              		.loc 1 723 0
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 0
 3040              		@ frame_needed = 1, uses_anonymous_args = 0
 3041 0000 80B5     		push	{r7, lr}
 3042              		.cfi_def_cfa_offset 8
 3043              		.cfi_offset 7, -8
 3044              		.cfi_offset 14, -4
 3045 0002 00AF     		add	r7, sp, #0
 3046              		.cfi_def_cfa_register 7
 724:.\main.c      ****     setSpeed(speed, speed);
 3047              		.loc 1 724 0
 3048 0004 044B     		ldr	r3, .L157
 3049 0006 D3E90001 		ldrd	r0, [r3]
 3050 000a 034B     		ldr	r3, .L157
 3051 000c D3E90023 		ldrd	r2, [r3]
 3052 0010 FFF7FEFF 		bl	setSpeed
 725:.\main.c      **** }
 3053              		.loc 1 725 0
 3054 0014 80BD     		pop	{r7, pc}
 3055              	.L158:
 3056 0016 00BF     		.align	2
 3057              	.L157:
 3058 0018 00000000 		.word	speed
 3059              		.cfi_endproc
 3060              	.LFE80:
 3061              		.size	driveForwards, .-driveForwards
 3062              		.global	__aeabi_dmul
 3063              		.section	.text.turnRight,"ax",%progbits
 3064              		.align	2
 3065              		.global	turnRight
 3066              		.thumb
 3067              		.thumb_func
 3068              		.type	turnRight, %function
 3069              	turnRight:
 3070              	.LFB81:
 726:.\main.c      **** 
 727:.\main.c      **** void turnRight()
 728:.\main.c      **** {
 3071              		.loc 1 728 0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 0
 3074              		@ frame_needed = 1, uses_anonymous_args = 0
 3075 0000 80B5     		push	{r7, lr}
 3076              		.cfi_def_cfa_offset 8
 3077              		.cfi_offset 7, -8
 3078              		.cfi_offset 14, -4
 3079 0002 00AF     		add	r7, sp, #0
 3080              		.cfi_def_cfa_register 7
 729:.\main.c      ****     setSpeed(0,speed * 1.5);
 3081              		.loc 1 729 0
 3082 0004 094B     		ldr	r3, .L160
 3083 0006 D3E90023 		ldrd	r2, [r3]
 3084 000a 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 69


 3085 000c 1946     		mov	r1, r3
 3086 000e 4FF00002 		mov	r2, #0
 3087 0012 074B     		ldr	r3, .L160+4
 3088 0014 FFF7FEFF 		bl	__aeabi_dmul
 3089 0018 0246     		mov	r2, r0
 3090 001a 0B46     		mov	r3, r1
 3091 001c 4FF00000 		mov	r0, #0
 3092 0020 4FF00001 		mov	r1, #0
 3093 0024 FFF7FEFF 		bl	setSpeed
 730:.\main.c      **** }
 3094              		.loc 1 730 0
 3095 0028 80BD     		pop	{r7, pc}
 3096              	.L161:
 3097 002a 00BF     		.align	2
 3098              	.L160:
 3099 002c 00000000 		.word	speed
 3100 0030 0000F83F 		.word	1073217536
 3101              		.cfi_endproc
 3102              	.LFE81:
 3103              		.size	turnRight, .-turnRight
 3104              		.section	.text.turnLeft,"ax",%progbits
 3105              		.align	2
 3106              		.global	turnLeft
 3107              		.thumb
 3108              		.thumb_func
 3109              		.type	turnLeft, %function
 3110              	turnLeft:
 3111              	.LFB82:
 731:.\main.c      **** 
 732:.\main.c      **** void turnLeft()
 733:.\main.c      **** {
 3112              		.loc 1 733 0
 3113              		.cfi_startproc
 3114              		@ args = 0, pretend = 0, frame = 0
 3115              		@ frame_needed = 1, uses_anonymous_args = 0
 3116 0000 80B5     		push	{r7, lr}
 3117              		.cfi_def_cfa_offset 8
 3118              		.cfi_offset 7, -8
 3119              		.cfi_offset 14, -4
 3120 0002 00AF     		add	r7, sp, #0
 3121              		.cfi_def_cfa_register 7
 734:.\main.c      ****     setSpeed(speed * 1.5,0);
 3122              		.loc 1 734 0
 3123 0004 0A4B     		ldr	r3, .L163
 3124 0006 D3E90023 		ldrd	r2, [r3]
 3125 000a 1046     		mov	r0, r2
 3126 000c 1946     		mov	r1, r3
 3127 000e 4FF00002 		mov	r2, #0
 3128 0012 084B     		ldr	r3, .L163+4
 3129 0014 FFF7FEFF 		bl	__aeabi_dmul
 3130 0018 0246     		mov	r2, r0
 3131 001a 0B46     		mov	r3, r1
 3132 001c 1046     		mov	r0, r2
 3133 001e 1946     		mov	r1, r3
 3134 0020 4FF00002 		mov	r2, #0
 3135 0024 4FF00003 		mov	r3, #0
 3136 0028 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 70


 735:.\main.c      **** }
 3137              		.loc 1 735 0
 3138 002c 80BD     		pop	{r7, pc}
 3139              	.L164:
 3140 002e 00BF     		.align	2
 3141              	.L163:
 3142 0030 00000000 		.word	speed
 3143 0034 0000F83F 		.word	1073217536
 3144              		.cfi_endproc
 3145              	.LFE82:
 3146              		.size	turnLeft, .-turnLeft
 3147              		.section	.text.turnU,"ax",%progbits
 3148              		.align	2
 3149              		.global	turnU
 3150              		.thumb
 3151              		.thumb_func
 3152              		.type	turnU, %function
 3153              	turnU:
 3154              	.LFB83:
 736:.\main.c      **** 
 737:.\main.c      **** void turnU()
 738:.\main.c      **** {
 3155              		.loc 1 738 0
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 0
 3158              		@ frame_needed = 1, uses_anonymous_args = 0
 3159 0000 B0B5     		push	{r4, r5, r7, lr}
 3160              		.cfi_def_cfa_offset 16
 3161              		.cfi_offset 4, -16
 3162              		.cfi_offset 5, -12
 3163              		.cfi_offset 7, -8
 3164              		.cfi_offset 14, -4
 3165 0002 00AF     		add	r7, sp, #0
 3166              		.cfi_def_cfa_register 7
 739:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3167              		.loc 1 739 0
 3168 0004 0F4B     		ldr	r3, .L166
 3169 0006 D3E90023 		ldrd	r2, [r3]
 3170 000a 1046     		mov	r0, r2
 3171 000c 83F00041 		eor	r1, r3, #-2147483648
 3172 0010 4FF00002 		mov	r2, #0
 3173 0014 0C4B     		ldr	r3, .L166+4
 3174 0016 FFF7FEFF 		bl	__aeabi_dmul
 3175 001a 0246     		mov	r2, r0
 3176 001c 0B46     		mov	r3, r1
 3177 001e 1446     		mov	r4, r2
 3178 0020 1D46     		mov	r5, r3
 3179 0022 084B     		ldr	r3, .L166
 3180 0024 D3E90023 		ldrd	r2, [r3]
 3181 0028 1046     		mov	r0, r2
 3182 002a 1946     		mov	r1, r3
 3183 002c 4FF00002 		mov	r2, #0
 3184 0030 054B     		ldr	r3, .L166+4
 3185 0032 FFF7FEFF 		bl	__aeabi_dmul
 3186 0036 0246     		mov	r2, r0
 3187 0038 0B46     		mov	r3, r1
 3188 003a 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 71


 3189 003c 2946     		mov	r1, r5
 3190 003e FFF7FEFF 		bl	setSpeed
 740:.\main.c      **** }
 3191              		.loc 1 740 0
 3192 0042 B0BD     		pop	{r4, r5, r7, pc}
 3193              	.L167:
 3194              		.align	2
 3195              	.L166:
 3196 0044 00000000 		.word	speed
 3197 0048 0000F83F 		.word	1073217536
 3198              		.cfi_endproc
 3199              	.LFE83:
 3200              		.size	turnU, .-turnU
 3201              		.section	.text.initTurnLeft,"ax",%progbits
 3202              		.align	2
 3203              		.global	initTurnLeft
 3204              		.thumb
 3205              		.thumb_func
 3206              		.type	initTurnLeft, %function
 3207              	initTurnLeft:
 3208              	.LFB84:
 741:.\main.c      **** 
 742:.\main.c      **** void initTurnLeft(){
 3209              		.loc 1 742 0
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 0
 3212              		@ frame_needed = 1, uses_anonymous_args = 0
 3213 0000 80B5     		push	{r7, lr}
 3214              		.cfi_def_cfa_offset 8
 3215              		.cfi_offset 7, -8
 3216              		.cfi_offset 14, -4
 3217 0002 00AF     		add	r7, sp, #0
 3218              		.cfi_def_cfa_register 7
 743:.\main.c      ****     Timer_2_Stop();
 3219              		.loc 1 743 0
 3220 0004 FFF7FEFF 		bl	Timer_2_Stop
 744:.\main.c      ****     prev_movement_state = movement_state;
 3221              		.loc 1 744 0
 3222 0008 084B     		ldr	r3, .L169
 3223 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3224 000c 084B     		ldr	r3, .L169+4
 3225 000e 1A70     		strb	r2, [r3]
 745:.\main.c      ****     movement_state = LTURN;
 3226              		.loc 1 745 0
 3227 0010 064B     		ldr	r3, .L169
 3228 0012 0122     		movs	r2, #1
 3229 0014 1A70     		strb	r2, [r3]
 746:.\main.c      ****     brakeLeft();
 3230              		.loc 1 746 0
 3231 0016 FFF7FEFF 		bl	brakeLeft
 747:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3232              		.loc 1 747 0
 3233 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3234 001e 0346     		mov	r3, r0
 3235 0020 1A46     		mov	r2, r3
 3236 0022 044B     		ldr	r3, .L169+8
 3237 0024 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 72


 748:.\main.c      ****     Timer_2_Start();
 3238              		.loc 1 748 0
 3239 0026 FFF7FEFF 		bl	Timer_2_Start
 749:.\main.c      **** }
 3240              		.loc 1 749 0
 3241 002a 80BD     		pop	{r7, pc}
 3242              	.L170:
 3243              		.align	2
 3244              	.L169:
 3245 002c 00000000 		.word	movement_state
 3246 0030 00000000 		.word	prev_movement_state
 3247 0034 00000000 		.word	start_turn_count
 3248              		.cfi_endproc
 3249              	.LFE84:
 3250              		.size	initTurnLeft, .-initTurnLeft
 3251              		.section	.text.initTurnRight,"ax",%progbits
 3252              		.align	2
 3253              		.global	initTurnRight
 3254              		.thumb
 3255              		.thumb_func
 3256              		.type	initTurnRight, %function
 3257              	initTurnRight:
 3258              	.LFB85:
 750:.\main.c      **** 
 751:.\main.c      **** void initTurnRight(){
 3259              		.loc 1 751 0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 0
 3262              		@ frame_needed = 1, uses_anonymous_args = 0
 3263 0000 80B5     		push	{r7, lr}
 3264              		.cfi_def_cfa_offset 8
 3265              		.cfi_offset 7, -8
 3266              		.cfi_offset 14, -4
 3267 0002 00AF     		add	r7, sp, #0
 3268              		.cfi_def_cfa_register 7
 752:.\main.c      ****     Timer_2_Stop();
 3269              		.loc 1 752 0
 3270 0004 FFF7FEFF 		bl	Timer_2_Stop
 753:.\main.c      ****     prev_movement_state = movement_state;
 3271              		.loc 1 753 0
 3272 0008 084B     		ldr	r3, .L172
 3273 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3274 000c 084B     		ldr	r3, .L172+4
 3275 000e 1A70     		strb	r2, [r3]
 754:.\main.c      ****     movement_state = RTURN;
 3276              		.loc 1 754 0
 3277 0010 064B     		ldr	r3, .L172
 3278 0012 0222     		movs	r2, #2
 3279 0014 1A70     		strb	r2, [r3]
 755:.\main.c      ****     brakeRight();
 3280              		.loc 1 755 0
 3281 0016 FFF7FEFF 		bl	brakeRight
 756:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3282              		.loc 1 756 0
 3283 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3284 001e 0346     		mov	r3, r0
 3285 0020 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 73


 3286 0022 044B     		ldr	r3, .L172+8
 3287 0024 1A80     		strh	r2, [r3]	@ movhi
 757:.\main.c      ****     Timer_2_Start();
 3288              		.loc 1 757 0
 3289 0026 FFF7FEFF 		bl	Timer_2_Start
 758:.\main.c      **** }
 3290              		.loc 1 758 0
 3291 002a 80BD     		pop	{r7, pc}
 3292              	.L173:
 3293              		.align	2
 3294              	.L172:
 3295 002c 00000000 		.word	movement_state
 3296 0030 00000000 		.word	prev_movement_state
 3297 0034 00000000 		.word	start_turn_count
 3298              		.cfi_endproc
 3299              	.LFE85:
 3300              		.size	initTurnRight, .-initTurnRight
 3301              		.section	.text.initTurnU,"ax",%progbits
 3302              		.align	2
 3303              		.global	initTurnU
 3304              		.thumb
 3305              		.thumb_func
 3306              		.type	initTurnU, %function
 3307              	initTurnU:
 3308              	.LFB86:
 759:.\main.c      **** 
 760:.\main.c      **** void initTurnU(){
 3309              		.loc 1 760 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 0
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313 0000 80B5     		push	{r7, lr}
 3314              		.cfi_def_cfa_offset 8
 3315              		.cfi_offset 7, -8
 3316              		.cfi_offset 14, -4
 3317 0002 00AF     		add	r7, sp, #0
 3318              		.cfi_def_cfa_register 7
 761:.\main.c      ****     Timer_2_Stop();
 3319              		.loc 1 761 0
 3320 0004 FFF7FEFF 		bl	Timer_2_Stop
 762:.\main.c      ****     prev_movement_state = movement_state;
 3321              		.loc 1 762 0
 3322 0008 084B     		ldr	r3, .L175
 3323 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3324 000c 084B     		ldr	r3, .L175+4
 3325 000e 1A70     		strb	r2, [r3]
 763:.\main.c      ****     movement_state = UTURN;
 3326              		.loc 1 763 0
 3327 0010 064B     		ldr	r3, .L175
 3328 0012 0722     		movs	r2, #7
 3329 0014 1A70     		strb	r2, [r3]
 764:.\main.c      ****     brakeMotor();
 3330              		.loc 1 764 0
 3331 0016 FFF7FEFF 		bl	brakeMotor
 765:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3332              		.loc 1 765 0
 3333 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 74


 3334 001e 0346     		mov	r3, r0
 3335 0020 1A46     		mov	r2, r3
 3336 0022 044B     		ldr	r3, .L175+8
 3337 0024 1A80     		strh	r2, [r3]	@ movhi
 766:.\main.c      ****     Timer_2_Start();
 3338              		.loc 1 766 0
 3339 0026 FFF7FEFF 		bl	Timer_2_Start
 767:.\main.c      **** }
 3340              		.loc 1 767 0
 3341 002a 80BD     		pop	{r7, pc}
 3342              	.L176:
 3343              		.align	2
 3344              	.L175:
 3345 002c 00000000 		.word	movement_state
 3346 0030 00000000 		.word	prev_movement_state
 3347 0034 00000000 		.word	start_turn_count
 3348              		.cfi_endproc
 3349              	.LFE86:
 3350              		.size	initTurnU, .-initTurnU
 3351              		.section	.text.initForward,"ax",%progbits
 3352              		.align	2
 3353              		.global	initForward
 3354              		.thumb
 3355              		.thumb_func
 3356              		.type	initForward, %function
 3357              	initForward:
 3358              	.LFB87:
 768:.\main.c      **** 
 769:.\main.c      **** void initForward(){
 3359              		.loc 1 769 0
 3360              		.cfi_startproc
 3361              		@ args = 0, pretend = 0, frame = 0
 3362              		@ frame_needed = 1, uses_anonymous_args = 0
 3363 0000 80B5     		push	{r7, lr}
 3364              		.cfi_def_cfa_offset 8
 3365              		.cfi_offset 7, -8
 3366              		.cfi_offset 14, -4
 3367 0002 00AF     		add	r7, sp, #0
 3368              		.cfi_def_cfa_register 7
 770:.\main.c      ****     brakeMotor();
 3369              		.loc 1 770 0
 3370 0004 FFF7FEFF 		bl	brakeMotor
 771:.\main.c      ****     movement_state = DRIVE;
 3371              		.loc 1 771 0
 3372 0008 014B     		ldr	r3, .L178
 3373 000a 0022     		movs	r2, #0
 3374 000c 1A70     		strb	r2, [r3]
 772:.\main.c      **** }
 3375              		.loc 1 772 0
 3376 000e 80BD     		pop	{r7, pc}
 3377              	.L179:
 3378              		.align	2
 3379              	.L178:
 3380 0010 00000000 		.word	movement_state
 3381              		.cfi_endproc
 3382              	.LFE87:
 3383              		.size	initForward, .-initForward
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 75


 3384              		.section	.text.initBrake,"ax",%progbits
 3385              		.align	2
 3386              		.global	initBrake
 3387              		.thumb
 3388              		.thumb_func
 3389              		.type	initBrake, %function
 3390              	initBrake:
 3391              	.LFB88:
 773:.\main.c      **** 
 774:.\main.c      **** void initBrake(){
 3392              		.loc 1 774 0
 3393              		.cfi_startproc
 3394              		@ args = 0, pretend = 0, frame = 0
 3395              		@ frame_needed = 1, uses_anonymous_args = 0
 3396              		@ link register save eliminated.
 3397 0000 80B4     		push	{r7}
 3398              		.cfi_def_cfa_offset 4
 3399              		.cfi_offset 7, -4
 3400 0002 00AF     		add	r7, sp, #0
 3401              		.cfi_def_cfa_register 7
 775:.\main.c      ****     movement_state = STOPPED;
 3402              		.loc 1 775 0
 3403 0004 034B     		ldr	r3, .L181
 3404 0006 0322     		movs	r2, #3
 3405 0008 1A70     		strb	r2, [r3]
 776:.\main.c      **** }
 3406              		.loc 1 776 0
 3407 000a BD46     		mov	sp, r7
 3408              		.cfi_def_cfa_register 13
 3409              		@ sp needed
 3410 000c 5DF8047B 		ldr	r7, [sp], #4
 3411              		.cfi_restore 7
 3412              		.cfi_def_cfa_offset 0
 3413 0010 7047     		bx	lr
 3414              	.L182:
 3415 0012 00BF     		.align	2
 3416              	.L181:
 3417 0014 00000000 		.word	movement_state
 3418              		.cfi_endproc
 3419              	.LFE88:
 3420              		.size	initBrake, .-initBrake
 3421              		.section	.text.initTrack,"ax",%progbits
 3422              		.align	2
 3423              		.global	initTrack
 3424              		.thumb
 3425              		.thumb_func
 3426              		.type	initTrack, %function
 3427              	initTrack:
 3428              	.LFB89:
 777:.\main.c      **** 
 778:.\main.c      **** void initTrack()
 779:.\main.c      **** {
 3429              		.loc 1 779 0
 3430              		.cfi_startproc
 3431              		@ args = 0, pretend = 0, frame = 0
 3432              		@ frame_needed = 1, uses_anonymous_args = 0
 3433              		@ link register save eliminated.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 76


 3434 0000 80B4     		push	{r7}
 3435              		.cfi_def_cfa_offset 4
 3436              		.cfi_offset 7, -4
 3437 0002 00AF     		add	r7, sp, #0
 3438              		.cfi_def_cfa_register 7
 780:.\main.c      ****     movement_state = TRACKING;
 3439              		.loc 1 780 0
 3440 0004 034B     		ldr	r3, .L184
 3441 0006 0422     		movs	r2, #4
 3442 0008 1A70     		strb	r2, [r3]
 781:.\main.c      **** }
 3443              		.loc 1 781 0
 3444 000a BD46     		mov	sp, r7
 3445              		.cfi_def_cfa_register 13
 3446              		@ sp needed
 3447 000c 5DF8047B 		ldr	r7, [sp], #4
 3448              		.cfi_restore 7
 3449              		.cfi_def_cfa_offset 0
 3450 0010 7047     		bx	lr
 3451              	.L185:
 3452 0012 00BF     		.align	2
 3453              	.L184:
 3454 0014 00000000 		.word	movement_state
 3455              		.cfi_endproc
 3456              	.LFE89:
 3457              		.size	initTrack, .-initTrack
 3458              		.section	.text.initTrackU,"ax",%progbits
 3459              		.align	2
 3460              		.global	initTrackU
 3461              		.thumb
 3462              		.thumb_func
 3463              		.type	initTrackU, %function
 3464              	initTrackU:
 3465              	.LFB90:
 782:.\main.c      **** 
 783:.\main.c      **** void initTrackU(){
 3466              		.loc 1 783 0
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 0
 3469              		@ frame_needed = 1, uses_anonymous_args = 0
 3470              		@ link register save eliminated.
 3471 0000 80B4     		push	{r7}
 3472              		.cfi_def_cfa_offset 4
 3473              		.cfi_offset 7, -4
 3474 0002 00AF     		add	r7, sp, #0
 3475              		.cfi_def_cfa_register 7
 784:.\main.c      ****     movement_state = TRACKING_U;
 3476              		.loc 1 784 0
 3477 0004 034B     		ldr	r3, .L187
 3478 0006 0522     		movs	r2, #5
 3479 0008 1A70     		strb	r2, [r3]
 785:.\main.c      **** }
 3480              		.loc 1 785 0
 3481 000a BD46     		mov	sp, r7
 3482              		.cfi_def_cfa_register 13
 3483              		@ sp needed
 3484 000c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 77


 3485              		.cfi_restore 7
 3486              		.cfi_def_cfa_offset 0
 3487 0010 7047     		bx	lr
 3488              	.L188:
 3489 0012 00BF     		.align	2
 3490              	.L187:
 3491 0014 00000000 		.word	movement_state
 3492              		.cfi_endproc
 3493              	.LFE90:
 3494              		.size	initTrackU, .-initTrackU
 3495              		.section	.text.inittrackLineZ,"ax",%progbits
 3496              		.align	2
 3497              		.global	inittrackLineZ
 3498              		.thumb
 3499              		.thumb_func
 3500              		.type	inittrackLineZ, %function
 3501              	inittrackLineZ:
 3502              	.LFB91:
 786:.\main.c      **** 
 787:.\main.c      **** void inittrackLineZ(){
 3503              		.loc 1 787 0
 3504              		.cfi_startproc
 3505              		@ args = 0, pretend = 0, frame = 0
 3506              		@ frame_needed = 1, uses_anonymous_args = 0
 3507              		@ link register save eliminated.
 3508 0000 80B4     		push	{r7}
 3509              		.cfi_def_cfa_offset 4
 3510              		.cfi_offset 7, -4
 3511 0002 00AF     		add	r7, sp, #0
 3512              		.cfi_def_cfa_register 7
 788:.\main.c      ****     movement_state = TRACKING_SOFT;
 3513              		.loc 1 788 0
 3514 0004 034B     		ldr	r3, .L190
 3515 0006 0622     		movs	r2, #6
 3516 0008 1A70     		strb	r2, [r3]
 789:.\main.c      **** }
 3517              		.loc 1 789 0
 3518 000a BD46     		mov	sp, r7
 3519              		.cfi_def_cfa_register 13
 3520              		@ sp needed
 3521 000c 5DF8047B 		ldr	r7, [sp], #4
 3522              		.cfi_restore 7
 3523              		.cfi_def_cfa_offset 0
 3524 0010 7047     		bx	lr
 3525              	.L191:
 3526 0012 00BF     		.align	2
 3527              	.L190:
 3528 0014 00000000 		.word	movement_state
 3529              		.cfi_endproc
 3530              	.LFE91:
 3531              		.size	inittrackLineZ, .-inittrackLineZ
 3532              		.section	.text.rxInt,"ax",%progbits
 3533              		.align	2
 3534              		.global	rxInt
 3535              		.thumb
 3536              		.thumb_func
 3537              		.type	rxInt, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 78


 3538              	rxInt:
 3539              	.LFB92:
 790:.\main.c      **** 
 791:.\main.c      **** 
 792:.\main.c      **** 
 793:.\main.c      **** //Binary RF Data
 794:.\main.c      **** CY_ISR(rxInt){
 3540              		.loc 1 794 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 8
 3543              		@ frame_needed = 1, uses_anonymous_args = 0
 3544 0000 B0B5     		push	{r4, r5, r7, lr}
 3545              		.cfi_def_cfa_offset 16
 3546              		.cfi_offset 4, -16
 3547              		.cfi_offset 5, -12
 3548              		.cfi_offset 7, -8
 3549              		.cfi_offset 14, -4
 3550 0002 82B0     		sub	sp, sp, #8
 3551              		.cfi_def_cfa_offset 24
 3552 0004 00AF     		add	r7, sp, #0
 3553              		.cfi_def_cfa_register 7
 795:.\main.c      ****     char rf_char = UART_GetChar();
 3554              		.loc 1 795 0
 3555 0006 FFF7FEFF 		bl	UART_GetChar
 3556 000a 0346     		mov	r3, r0
 3557 000c FB71     		strb	r3, [r7, #7]
 796:.\main.c      ****     if(rf_char == SOP){
 3558              		.loc 1 796 0
 3559 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3560 0010 AA2B     		cmp	r3, #170
 3561 0012 2BD1     		bne	.L193
 797:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 798:.\main.c      ****             if(byteCount == 34)
 3562              		.loc 1 798 0
 3563 0014 224B     		ldr	r3, .L197
 3564 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3565 0018 222B     		cmp	r3, #34
 3566 001a 20D1     		bne	.L194
 799:.\main.c      ****             {
 800:.\main.c      ****                 system_state = buffer_state;
 3567              		.loc 1 800 0
 3568 001c 214B     		ldr	r3, .L197+4
 3569 001e 224A     		ldr	r2, .L197+8
 3570 0020 1568     		ldr	r5, [r2]	@ unaligned
 3571 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3572 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3573 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3574 0028 1D60     		str	r5, [r3]	@ unaligned
 3575 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3576 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3577 002e D960     		str	r1, [r3, #12]	@ unaligned
 3578 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3579 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3580 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3581 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3582 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3583 003a 5C61     		str	r4, [r3, #20]	@ unaligned
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 79


 3584 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3585 003e D961     		str	r1, [r3, #28]	@ unaligned
 801:.\main.c      ****                 if(initial_pos_valid == 0)
 3586              		.loc 1 801 0
 3587 0040 1A4B     		ldr	r3, .L197+12
 3588 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3589 0044 002B     		cmp	r3, #0
 3590 0046 0AD1     		bne	.L194
 802:.\main.c      ****                 {
 803:.\main.c      ****                     LED_Write(~LED_Read());
 3591              		.loc 1 803 0
 3592 0048 FFF7FEFF 		bl	LED_Read
 3593 004c 0346     		mov	r3, r0
 3594 004e DB43     		mvns	r3, r3
 3595 0050 DBB2     		uxtb	r3, r3
 3596 0052 1846     		mov	r0, r3
 3597 0054 FFF7FEFF 		bl	LED_Write
 804:.\main.c      ****                     initial_pos_valid = 1;
 3598              		.loc 1 804 0
 3599 0058 144B     		ldr	r3, .L197+12
 3600 005a 0122     		movs	r2, #1
 3601 005c 1A70     		strb	r2, [r3]
 3602              	.L194:
 805:.\main.c      ****                 }
 806:.\main.c      ****             }
 807:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3603              		.loc 1 807 0
 3604 005e 104B     		ldr	r3, .L197
 3605 0060 0222     		movs	r2, #2
 3606 0062 1A70     		strb	r2, [r3]
 808:.\main.c      ****             flag_rx = 0;
 3607              		.loc 1 808 0
 3608 0064 124B     		ldr	r3, .L197+16
 3609 0066 0022     		movs	r2, #0
 3610 0068 1A70     		strb	r2, [r3]
 3611 006a 16E0     		b	.L192
 3612              	.L193:
 809:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 810:.\main.c      ****         }
 811:.\main.c      ****         else
 812:.\main.c      ****         {
 813:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3613              		.loc 1 813 0
 3614 006c 0C4B     		ldr	r3, .L197
 3615 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3616 0070 03F00103 		and	r3, r3, #1
 3617 0074 0F49     		ldr	r1, .L197+20
 3618 0076 FA79     		ldrb	r2, [r7, #7]
 3619 0078 CA54     		strb	r2, [r1, r3]
 814:.\main.c      ****            
 815:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3620              		.loc 1 815 0
 3621 007a 094B     		ldr	r3, .L197
 3622 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3623 007e 03F00103 		and	r3, r3, #1
 3624 0082 DBB2     		uxtb	r3, r3
 3625 0084 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 80


 3626 0086 02D0     		beq	.L196
 816:.\main.c      ****             {
 817:.\main.c      ****                 flag_rx = 1;
 3627              		.loc 1 817 0
 3628 0088 094B     		ldr	r3, .L197+16
 3629 008a 0122     		movs	r2, #1
 3630 008c 1A70     		strb	r2, [r3]
 3631              	.L196:
 818:.\main.c      ****             }
 819:.\main.c      ****             byteCount = (byteCount + 1);
 3632              		.loc 1 819 0
 3633 008e 044B     		ldr	r3, .L197
 3634 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3635 0092 0133     		adds	r3, r3, #1
 3636 0094 DAB2     		uxtb	r2, r3
 3637 0096 024B     		ldr	r3, .L197
 3638 0098 1A70     		strb	r2, [r3]
 3639              	.L192:
 820:.\main.c      ****         }
 821:.\main.c      **** }
 3640              		.loc 1 821 0
 3641 009a 0837     		adds	r7, r7, #8
 3642              		.cfi_def_cfa_offset 16
 3643 009c BD46     		mov	sp, r7
 3644              		.cfi_def_cfa_register 13
 3645              		@ sp needed
 3646 009e B0BD     		pop	{r4, r5, r7, pc}
 3647              	.L198:
 3648              		.align	2
 3649              	.L197:
 3650 00a0 00000000 		.word	byteCount
 3651 00a4 00000000 		.word	system_state
 3652 00a8 00000000 		.word	buffer_state
 3653 00ac 00000000 		.word	initial_pos_valid
 3654 00b0 00000000 		.word	flag_rx
 3655 00b4 00000000 		.word	packet
 3656              		.cfi_endproc
 3657              	.LFE92:
 3658              		.size	rxInt, .-rxInt
 3659              		.global	__aeabi_i2f
 3660              		.global	__aeabi_fmul
 3661              		.global	__aeabi_f2iz
 3662              		.section	.rodata
 3663 00be 0000     		.align	2
 3664              	.LC10:
 3665 00c0 74617267 		.ascii	"target quad: %d\015\012\000"
 3665      65742071 
 3665      7561643A 
 3665      2025640D 
 3665      0A00
 3666 00d2 0000     		.align	2
 3667              	.LC11:
 3668 00d4 72656365 		.ascii	"received: \000"
 3668      69766564 
 3668      3A2000
 3669 00df 00       		.align	2
 3670              	.LC12:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 81


 3671 00e0 0D0A00   		.ascii	"\015\012\000"
 3672 00e3 00       		.align	2
 3673              	.LC13:
 3674 00e4 73746172 		.ascii	"starting from instruction %d\015\012\000"
 3674      74696E67 
 3674      2066726F 
 3674      6D20696E 
 3674      73747275 
 3675              		.section	.text.BT_rxInt,"ax",%progbits
 3676              		.align	2
 3677              		.global	BT_rxInt
 3678              		.thumb
 3679              		.thumb_func
 3680              		.type	BT_rxInt, %function
 3681              	BT_rxInt:
 3682              	.LFB93:
 822:.\main.c      **** 
 823:.\main.c      **** CY_ISR(BT_rxInt)
 824:.\main.c      **** {
 3683              		.loc 1 824 0
 3684              		.cfi_startproc
 3685              		@ args = 0, pretend = 0, frame = 32
 3686              		@ frame_needed = 1, uses_anonymous_args = 0
 3687 0000 80B5     		push	{r7, lr}
 3688              		.cfi_def_cfa_offset 8
 3689              		.cfi_offset 7, -8
 3690              		.cfi_offset 14, -4
 3691 0002 88B0     		sub	sp, sp, #32
 3692              		.cfi_def_cfa_offset 40
 3693 0004 00AF     		add	r7, sp, #0
 3694              		.cfi_def_cfa_register 7
 825:.\main.c      ****     char rf_char = UART_GetChar();
 3695              		.loc 1 825 0
 3696 0006 FFF7FEFF 		bl	UART_GetChar
 3697 000a 0346     		mov	r3, r0
 3698 000c FB77     		strb	r3, [r7, #31]
 826:.\main.c      ****     switch(rf_char){
 3699              		.loc 1 826 0
 3700 000e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3701 0010 313B     		subs	r3, r3, #49
 3702 0012 492B     		cmp	r3, #73
 3703 0014 00F28582 		bhi	.L199
 3704 0018 01A2     		adr	r2, .L202
 3705 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3706 001e 00BF     		.p2align 2
 3707              	.L202:
 3708 0020 75030000 		.word	.L201+1
 3709 0024 15020000 		.word	.L203+1
 3710 0028 23050000 		.word	.L199+1
 3711 002c 23050000 		.word	.L199+1
 3712 0030 23050000 		.word	.L199+1
 3713 0034 23050000 		.word	.L199+1
 3714 0038 23050000 		.word	.L199+1
 3715 003c 23050000 		.word	.L199+1
 3716 0040 23050000 		.word	.L199+1
 3717 0044 23050000 		.word	.L199+1
 3718 0048 23050000 		.word	.L199+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 82


 3719 004c 23050000 		.word	.L199+1
 3720 0050 23050000 		.word	.L199+1
 3721 0054 23050000 		.word	.L199+1
 3722 0058 23050000 		.word	.L199+1
 3723 005c 23050000 		.word	.L199+1
 3724 0060 23050000 		.word	.L199+1
 3725 0064 23050000 		.word	.L199+1
 3726 0068 23050000 		.word	.L199+1
 3727 006c 23050000 		.word	.L199+1
 3728 0070 23050000 		.word	.L199+1
 3729 0074 23050000 		.word	.L199+1
 3730 0078 23050000 		.word	.L199+1
 3731 007c 23050000 		.word	.L199+1
 3732 0080 23050000 		.word	.L199+1
 3733 0084 23050000 		.word	.L199+1
 3734 0088 23050000 		.word	.L199+1
 3735 008c 23050000 		.word	.L199+1
 3736 0090 23050000 		.word	.L199+1
 3737 0094 23050000 		.word	.L199+1
 3738 0098 23050000 		.word	.L199+1
 3739 009c 23050000 		.word	.L199+1
 3740 00a0 23050000 		.word	.L199+1
 3741 00a4 23050000 		.word	.L199+1
 3742 00a8 23050000 		.word	.L199+1
 3743 00ac 23050000 		.word	.L199+1
 3744 00b0 23050000 		.word	.L199+1
 3745 00b4 23050000 		.word	.L199+1
 3746 00b8 23050000 		.word	.L199+1
 3747 00bc 23050000 		.word	.L199+1
 3748 00c0 23050000 		.word	.L199+1
 3749 00c4 23050000 		.word	.L199+1
 3750 00c8 23050000 		.word	.L199+1
 3751 00cc 23050000 		.word	.L199+1
 3752 00d0 23050000 		.word	.L199+1
 3753 00d4 23050000 		.word	.L199+1
 3754 00d8 23050000 		.word	.L199+1
 3755 00dc 23050000 		.word	.L199+1
 3756 00e0 49010000 		.word	.L204+1
 3757 00e4 23050000 		.word	.L199+1
 3758 00e8 23050000 		.word	.L199+1
 3759 00ec 6D010000 		.word	.L205+1
 3760 00f0 23050000 		.word	.L199+1
 3761 00f4 79010000 		.word	.L206+1
 3762 00f8 23050000 		.word	.L199+1
 3763 00fc 23050000 		.word	.L199+1
 3764 0100 23050000 		.word	.L199+1
 3765 0104 23050000 		.word	.L199+1
 3766 0108 23050000 		.word	.L199+1
 3767 010c 23050000 		.word	.L199+1
 3768 0110 23050000 		.word	.L199+1
 3769 0114 23050000 		.word	.L199+1
 3770 0118 23050000 		.word	.L199+1
 3771 011c 23050000 		.word	.L199+1
 3772 0120 A9010000 		.word	.L207+1
 3773 0124 FF010000 		.word	.L208+1
 3774 0128 61010000 		.word	.L209+1
 3775 012c 85010000 		.word	.L210+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 83


 3776 0130 91010000 		.word	.L211+1
 3777 0134 23050000 		.word	.L199+1
 3778 0138 55010000 		.word	.L212+1
 3779 013c 23050000 		.word	.L199+1
 3780 0140 23050000 		.word	.L199+1
 3781 0144 9D010000 		.word	.L213+1
 3782              		.p2align 1
 3783              	.L204:
 3784              	.LBB11:
 827:.\main.c      ****     case 'a':
 828:.\main.c      ****         initTurnLeft();
 3785              		.loc 1 828 0
 3786 0148 FFF7FEFF 		bl	initTurnLeft
 829:.\main.c      ****         track_mode = NO_TRACK;
 3787              		.loc 1 829 0
 3788 014c 9D4B     		ldr	r3, .L233
 3789 014e 0022     		movs	r2, #0
 3790 0150 1A70     		strb	r2, [r3]
 830:.\main.c      ****         break;
 3791              		.loc 1 830 0
 3792 0152 E6E1     		b	.L199
 3793              	.L212:
 831:.\main.c      ****     case 'w':
 832:.\main.c      ****         initForward();
 3794              		.loc 1 832 0
 3795 0154 FFF7FEFF 		bl	initForward
 833:.\main.c      ****         track_mode = NO_TRACK;
 3796              		.loc 1 833 0
 3797 0158 9A4B     		ldr	r3, .L233
 3798 015a 0022     		movs	r2, #0
 3799 015c 1A70     		strb	r2, [r3]
 834:.\main.c      ****         break;
 3800              		.loc 1 834 0
 3801 015e E0E1     		b	.L199
 3802              	.L209:
 835:.\main.c      ****     case 's': 
 836:.\main.c      ****         reverseDirection();
 3803              		.loc 1 836 0
 3804 0160 FFF7FEFF 		bl	reverseDirection
 837:.\main.c      ****         track_mode = NO_TRACK;
 3805              		.loc 1 837 0
 3806 0164 974B     		ldr	r3, .L233
 3807 0166 0022     		movs	r2, #0
 3808 0168 1A70     		strb	r2, [r3]
 838:.\main.c      ****         break;
 3809              		.loc 1 838 0
 3810 016a DAE1     		b	.L199
 3811              	.L205:
 839:.\main.c      ****     case 'd':
 840:.\main.c      ****         initTurnRight();
 3812              		.loc 1 840 0
 3813 016c FFF7FEFF 		bl	initTurnRight
 841:.\main.c      ****         track_mode = NO_TRACK;
 3814              		.loc 1 841 0
 3815 0170 944B     		ldr	r3, .L233
 3816 0172 0022     		movs	r2, #0
 3817 0174 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 84


 842:.\main.c      ****         break;
 3818              		.loc 1 842 0
 3819 0176 D4E1     		b	.L199
 3820              	.L206:
 843:.\main.c      ****     case 'f':
 844:.\main.c      ****         initBrake();
 3821              		.loc 1 844 0
 3822 0178 FFF7FEFF 		bl	initBrake
 845:.\main.c      ****         track_mode = NO_TRACK;
 3823              		.loc 1 845 0
 3824 017c 914B     		ldr	r3, .L233
 3825 017e 0022     		movs	r2, #0
 3826 0180 1A70     		strb	r2, [r3]
 846:.\main.c      ****         break;
 3827              		.loc 1 846 0
 3828 0182 CEE1     		b	.L199
 3829              	.L210:
 847:.\main.c      ****     case('t'):
 848:.\main.c      ****         track_mode = CURVE_TRACK;
 3830              		.loc 1 848 0
 3831 0184 8F4B     		ldr	r3, .L233
 3832 0186 0122     		movs	r2, #1
 3833 0188 1A70     		strb	r2, [r3]
 849:.\main.c      ****         initTrack();
 3834              		.loc 1 849 0
 3835 018a FFF7FEFF 		bl	initTrack
 850:.\main.c      ****         break;
 3836              		.loc 1 850 0
 3837 018e C8E1     		b	.L199
 3838              	.L211:
 851:.\main.c      ****     case('u'):
 852:.\main.c      ****         initTrackU();
 3839              		.loc 1 852 0
 3840 0190 FFF7FEFF 		bl	initTrackU
 853:.\main.c      ****         track_mode = U_TRACK;
 3841              		.loc 1 853 0
 3842 0194 8B4B     		ldr	r3, .L233
 3843 0196 0222     		movs	r2, #2
 3844 0198 1A70     		strb	r2, [r3]
 854:.\main.c      ****         break;
 3845              		.loc 1 854 0
 3846 019a C2E1     		b	.L199
 3847              	.L213:
 855:.\main.c      ****     case('z'):
 856:.\main.c      ****         track_mode = SQUARE_TRACK;
 3848              		.loc 1 856 0
 3849 019c 894B     		ldr	r3, .L233
 3850 019e 0322     		movs	r2, #3
 3851 01a0 1A70     		strb	r2, [r3]
 857:.\main.c      ****         inittrackLineZ();
 3852              		.loc 1 857 0
 3853 01a2 FFF7FEFF 		bl	inittrackLineZ
 858:.\main.c      ****         break;
 3854              		.loc 1 858 0
 3855 01a6 BCE1     		b	.L199
 3856              	.L207:
 859:.\main.c      ****     case('q'):
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 85


 860:.\main.c      ****         track_mode = QUAD_STOP;
 3857              		.loc 1 860 0
 3858 01a8 864B     		ldr	r3, .L233
 3859 01aa 0422     		movs	r2, #4
 3860 01ac 1A70     		strb	r2, [r3]
 861:.\main.c      ****         accum_dist = 0;
 3861              		.loc 1 861 0
 3862 01ae 864B     		ldr	r3, .L233+4
 3863 01b0 0022     		movs	r2, #0
 3864 01b2 1A80     		strh	r2, [r3]	@ movhi
 862:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3865              		.loc 1 862 0
 3866 01b4 854B     		ldr	r3, .L233+8
 3867 01b6 1B88     		ldrh	r3, [r3]
 3868 01b8 1BB2     		sxth	r3, r3
 3869 01ba 1846     		mov	r0, r3
 3870 01bc FFF7FEFF 		bl	__aeabi_i2f
 3871 01c0 0246     		mov	r2, r0
 3872 01c2 834B     		ldr	r3, .L233+12
 3873 01c4 1B68     		ldr	r3, [r3]	@ float
 3874 01c6 1046     		mov	r0, r2
 3875 01c8 1946     		mov	r1, r3
 3876 01ca FFF7FEFF 		bl	__aeabi_fmul
 3877 01ce 0346     		mov	r3, r0
 3878 01d0 1846     		mov	r0, r3
 3879 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3880 01d6 0346     		mov	r3, r0
 3881 01d8 9AB2     		uxth	r2, r3
 3882 01da 7E4B     		ldr	r3, .L233+16
 3883 01dc 1A80     		strh	r2, [r3]	@ movhi
 863:.\main.c      ****         char mes[16];
 864:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3884              		.loc 1 864 0
 3885 01de 7D4B     		ldr	r3, .L233+16
 3886 01e0 1B88     		ldrh	r3, [r3]
 3887 01e2 1BB2     		sxth	r3, r3
 3888 01e4 3A46     		mov	r2, r7
 3889 01e6 1046     		mov	r0, r2
 3890 01e8 7B49     		ldr	r1, .L233+20
 3891 01ea 1A46     		mov	r2, r3
 3892 01ec FFF7FEFF 		bl	sprintf
 865:.\main.c      ****         UART_PutString(mes);
 3893              		.loc 1 865 0
 3894 01f0 3B46     		mov	r3, r7
 3895 01f2 1846     		mov	r0, r3
 3896 01f4 FFF7FEFF 		bl	UART_PutString
 866:.\main.c      ****         initForward();
 3897              		.loc 1 866 0
 3898 01f8 FFF7FEFF 		bl	initForward
 867:.\main.c      ****         break;
 3899              		.loc 1 867 0
 3900 01fc 91E1     		b	.L199
 3901              	.L208:
 868:.\main.c      ****     case ('r'):
 869:.\main.c      ****         track_mode = RF_STOP;
 3902              		.loc 1 869 0
 3903 01fe 714B     		ldr	r3, .L233
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 86


 3904 0200 0522     		movs	r2, #5
 3905 0202 1A70     		strb	r2, [r3]
 870:.\main.c      ****         changeToRF();
 3906              		.loc 1 870 0
 3907 0204 FFF7FEFF 		bl	changeToRF
 871:.\main.c      ****         // Make initial position
 872:.\main.c      ****         initial_pos_valid = 0;
 3908              		.loc 1 872 0
 3909 0208 744B     		ldr	r3, .L233+24
 3910 020a 0022     		movs	r2, #0
 3911 020c 1A70     		strb	r2, [r3]
 873:.\main.c      ****         initBrake();
 3912              		.loc 1 873 0
 3913 020e FFF7FEFF 		bl	initBrake
 874:.\main.c      ****         break;
 3914              		.loc 1 874 0
 3915 0212 86E1     		b	.L199
 3916              	.L203:
 875:.\main.c      ****     case ('2'):
 876:.\main.c      ****         track_mode = DEST_TEST;
 3917              		.loc 1 876 0
 3918 0214 6B4B     		ldr	r3, .L233
 3919 0216 0622     		movs	r2, #6
 3920 0218 1A70     		strb	r2, [r3]
 877:.\main.c      ****         tracked_direction = robot_direction;
 3921              		.loc 1 877 0
 3922 021a 714B     		ldr	r3, .L233+28
 3923 021c 1B68     		ldr	r3, [r3]
 3924 021e 714A     		ldr	r2, .L233+32
 3925 0220 1360     		str	r3, [r2]
 878:.\main.c      ****         instructionLength = generateDirections();
 3926              		.loc 1 878 0
 3927 0222 FFF7FEFF 		bl	generateDirections
 3928 0226 0346     		mov	r3, r0
 3929 0228 9AB2     		uxth	r2, r3
 3930 022a 6F4B     		ldr	r3, .L233+36
 3931 022c 1A80     		strh	r2, [r3]	@ movhi
 879:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 880:.\main.c      ****         //char message[128];
 881:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 882:.\main.c      ****         
 883:.\main.c      ****         last_quad_count1 = 0;
 3932              		.loc 1 883 0
 3933 022e 6F4B     		ldr	r3, .L233+40
 3934 0230 0022     		movs	r2, #0
 3935 0232 1A80     		strh	r2, [r3]	@ movhi
 884:.\main.c      ****         last_quad_count2 = 0;
 3936              		.loc 1 884 0
 3937 0234 6E4B     		ldr	r3, .L233+44
 3938 0236 0022     		movs	r2, #0
 3939 0238 1A80     		strh	r2, [r3]	@ movhi
 885:.\main.c      ****         QuadDec_M1_SetCounter(0);
 3940              		.loc 1 885 0
 3941 023a 0020     		movs	r0, #0
 3942 023c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 886:.\main.c      ****         QuadDec_M2_SetCounter(0);
 3943              		.loc 1 886 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 87


 3944 0240 0020     		movs	r0, #0
 3945 0242 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 887:.\main.c      ****         instructionCount = 0;
 3946              		.loc 1 887 0
 3947 0246 6B4B     		ldr	r3, .L233+48
 3948 0248 0022     		movs	r2, #0
 3949 024a 1A80     		strh	r2, [r3]	@ movhi
 888:.\main.c      ****         isrRF_RX_Disable();
 3950              		.loc 1 888 0
 3951 024c FFF7FEFF 		bl	isrRF_RX_Disable
 889:.\main.c      ****         while(rf_char != 'F')
 3952              		.loc 1 889 0
 3953 0250 26E0     		b	.L215
 3954              	.L218:
 890:.\main.c      ****         {
 891:.\main.c      ****             rf_char = UART_GetChar();
 3955              		.loc 1 891 0
 3956 0252 FFF7FEFF 		bl	UART_GetChar
 3957 0256 0346     		mov	r3, r0
 3958 0258 FB77     		strb	r3, [r7, #31]
 892:.\main.c      ****             if(rf_char == 'F') break;
 3959              		.loc 1 892 0
 3960 025a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3961 025c 462B     		cmp	r3, #70
 3962 025e 00D1     		bne	.L216
 3963 0260 21E0     		b	.L217
 3964              	.L216:
 893:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 3965              		.loc 1 893 0
 3966 0262 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3967 0264 2F2B     		cmp	r3, #47
 3968 0266 1BD9     		bls	.L215
 3969              		.loc 1 893 0 is_stmt 0 discriminator 1
 3970 0268 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3971 026a 392B     		cmp	r3, #57
 3972 026c 18D8     		bhi	.L215
 894:.\main.c      ****             {
 895:.\main.c      ****                 UART_PutString("received: ");
 3973              		.loc 1 895 0 is_stmt 1
 3974 026e 6248     		ldr	r0, .L233+52
 3975 0270 FFF7FEFF 		bl	UART_PutString
 896:.\main.c      ****                 UART_PutChar(rf_char);
 3976              		.loc 1 896 0
 3977 0274 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3978 0276 1846     		mov	r0, r3
 3979 0278 FFF7FEFF 		bl	UART_PutChar
 897:.\main.c      ****                 UART_PutString("\r\n");
 3980              		.loc 1 897 0
 3981 027c 5F48     		ldr	r0, .L233+56
 3982 027e FFF7FEFF 		bl	UART_PutString
 898:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 3983              		.loc 1 898 0
 3984 0282 5C4B     		ldr	r3, .L233+48
 3985 0284 1B88     		ldrh	r3, [r3]
 3986 0286 1A46     		mov	r2, r3	@ movhi
 3987 0288 9200     		lsls	r2, r2, #2
 3988 028a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 88


 3989 028c 5B00     		lsls	r3, r3, #1
 3990 028e 9AB2     		uxth	r2, r3
 3991 0290 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3992 0292 9BB2     		uxth	r3, r3
 3993 0294 1344     		add	r3, r3, r2
 3994 0296 9BB2     		uxth	r3, r3
 3995 0298 303B     		subs	r3, r3, #48
 3996 029a 9AB2     		uxth	r2, r3
 3997 029c 554B     		ldr	r3, .L233+48
 3998 029e 1A80     		strh	r2, [r3]	@ movhi
 3999              	.L215:
 889:.\main.c      ****         {
 4000              		.loc 1 889 0
 4001 02a0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4002 02a2 462B     		cmp	r3, #70
 4003 02a4 D5D1     		bne	.L218
 4004              	.L217:
 899:.\main.c      ****             }
 900:.\main.c      ****             
 901:.\main.c      ****         }
 902:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4005              		.loc 1 902 0
 4006 02a6 5648     		ldr	r0, .L233+60
 4007 02a8 FFF7FEFF 		bl	isrRF_RX_StartEx
 903:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4008              		.loc 1 903 0
 4009 02ac 514B     		ldr	r3, .L233+48
 4010 02ae 1B88     		ldrh	r3, [r3]
 4011 02b0 1A46     		mov	r2, r3
 4012 02b2 3B46     		mov	r3, r7
 4013 02b4 1846     		mov	r0, r3
 4014 02b6 5349     		ldr	r1, .L233+64
 4015 02b8 FFF7FEFF 		bl	sprintf
 904:.\main.c      ****         UART_PutString(mes);
 4016              		.loc 1 904 0
 4017 02bc 3B46     		mov	r3, r7
 4018 02be 1846     		mov	r0, r3
 4019 02c0 FFF7FEFF 		bl	UART_PutString
 905:.\main.c      ****         
 906:.\main.c      ****         int i;
 907:.\main.c      ****         for(i = instructionCount;i < instructionLength; i++)
 4020              		.loc 1 907 0
 4021 02c4 4B4B     		ldr	r3, .L233+48
 4022 02c6 1B88     		ldrh	r3, [r3]
 4023 02c8 BB61     		str	r3, [r7, #24]
 4024 02ca 18E0     		b	.L219
 4025              	.L222:
 908:.\main.c      ****         {
 909:.\main.c      ****             if(i%2 == 0)
 4026              		.loc 1 909 0
 4027 02cc BB69     		ldr	r3, [r7, #24]
 4028 02ce 03F00103 		and	r3, r3, #1
 4029 02d2 002B     		cmp	r3, #0
 4030 02d4 07D1     		bne	.L220
 910:.\main.c      ****             {
 911:.\main.c      ****                 UART_PutChar(instructions[i]);
 4031              		.loc 1 911 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 89


 4032 02d6 4C4A     		ldr	r2, .L233+68
 4033 02d8 BB69     		ldr	r3, [r7, #24]
 4034 02da 1344     		add	r3, r3, r2
 4035 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4036 02de 1846     		mov	r0, r3
 4037 02e0 FFF7FEFF 		bl	UART_PutChar
 4038 02e4 08E0     		b	.L221
 4039              	.L220:
 912:.\main.c      ****             }
 913:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 4040              		.loc 1 913 0
 4041 02e6 484A     		ldr	r2, .L233+68
 4042 02e8 BB69     		ldr	r3, [r7, #24]
 4043 02ea 1344     		add	r3, r3, r2
 4044 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4045 02ee 3033     		adds	r3, r3, #48
 4046 02f0 DBB2     		uxtb	r3, r3
 4047 02f2 1846     		mov	r0, r3
 4048 02f4 FFF7FEFF 		bl	UART_PutChar
 4049              	.L221:
 907:.\main.c      ****         {
 4050              		.loc 1 907 0 discriminator 2
 4051 02f8 BB69     		ldr	r3, [r7, #24]
 4052 02fa 0133     		adds	r3, r3, #1
 4053 02fc BB61     		str	r3, [r7, #24]
 4054              	.L219:
 907:.\main.c      ****         {
 4055              		.loc 1 907 0 is_stmt 0 discriminator 1
 4056 02fe 3A4B     		ldr	r3, .L233+36
 4057 0300 1B88     		ldrh	r3, [r3]
 4058 0302 1A46     		mov	r2, r3
 4059 0304 BB69     		ldr	r3, [r7, #24]
 4060 0306 9A42     		cmp	r2, r3
 4061 0308 E0DC     		bgt	.L222
 914:.\main.c      **** 
 915:.\main.c      ****         }
 916:.\main.c      ****         
 917:.\main.c      ****         UART_PutString("\r\n");
 4062              		.loc 1 917 0 is_stmt 1
 4063 030a 3C48     		ldr	r0, .L233+56
 4064 030c FFF7FEFF 		bl	UART_PutString
 918:.\main.c      ****         
 919:.\main.c      ****         char nextStep = instructions[instructionCount];
 4065              		.loc 1 919 0
 4066 0310 384B     		ldr	r3, .L233+48
 4067 0312 1B88     		ldrh	r3, [r3]
 4068 0314 1A46     		mov	r2, r3
 4069 0316 3C4B     		ldr	r3, .L233+68
 4070 0318 9B5C     		ldrb	r3, [r3, r2]
 4071 031a FB74     		strb	r3, [r7, #19]
 920:.\main.c      ****         
 921:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];
 4072              		.loc 1 921 0
 4073 031c 354B     		ldr	r3, .L233+48
 4074 031e 1B88     		ldrh	r3, [r3]
 4075 0320 0133     		adds	r3, r3, #1
 4076 0322 394A     		ldr	r2, .L233+68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 90


 4077 0324 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4078 0326 9BB2     		uxth	r3, r3
 4079 0328 1A46     		mov	r2, r3	@ movhi
 4080 032a D200     		lsls	r2, r2, #3
 4081 032c 1A44     		add	r2, r2, r3
 4082 032e D200     		lsls	r2, r2, #3
 4083 0330 D31A     		subs	r3, r2, r3
 4084 0332 5B00     		lsls	r3, r3, #1
 4085 0334 9BB2     		uxth	r3, r3
 4086 0336 9AB2     		uxth	r2, r3
 4087 0338 264B     		ldr	r3, .L233+16
 4088 033a 1A80     		strh	r2, [r3]	@ movhi
 922:.\main.c      ****         if(instructionCount == 0) target_distance_quad -= QUAD_PER_UNIT; 
 4089              		.loc 1 922 0
 4090 033c 2D4B     		ldr	r3, .L233+48
 4091 033e 1B88     		ldrh	r3, [r3]
 4092 0340 002B     		cmp	r3, #0
 4093 0342 07D1     		bne	.L223
 4094              		.loc 1 922 0 is_stmt 0 discriminator 1
 4095 0344 234B     		ldr	r3, .L233+16
 4096 0346 1B88     		ldrh	r3, [r3]
 4097 0348 9BB2     		uxth	r3, r3
 4098 034a 8E3B     		subs	r3, r3, #142
 4099 034c 9BB2     		uxth	r3, r3
 4100 034e 9AB2     		uxth	r2, r3
 4101 0350 204B     		ldr	r3, .L233+16
 4102 0352 1A80     		strh	r2, [r3]	@ movhi
 4103              	.L223:
 923:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4104              		.loc 1 923 0 is_stmt 1
 4105 0354 1F4B     		ldr	r3, .L233+16
 4106 0356 1B88     		ldrh	r3, [r3]
 4107 0358 1BB2     		sxth	r3, r3
 4108 035a 3A46     		mov	r2, r7
 4109 035c 1046     		mov	r0, r2
 4110 035e 2B49     		ldr	r1, .L233+72
 4111 0360 1A46     		mov	r2, r3
 4112 0362 FFF7FEFF 		bl	sprintf
 924:.\main.c      ****         UART_PutString(mes);
 4113              		.loc 1 924 0
 4114 0366 3B46     		mov	r3, r7
 4115 0368 1846     		mov	r0, r3
 4116 036a FFF7FEFF 		bl	UART_PutString
 925:.\main.c      ****         inittrackLineZ();
 4117              		.loc 1 925 0
 4118 036e FFF7FEFF 		bl	inittrackLineZ
 926:.\main.c      ****         break;
 4119              		.loc 1 926 0
 4120 0372 D6E0     		b	.L199
 4121              	.L201:
 927:.\main.c      ****     case ('1'):
 928:.\main.c      ****         track_mode = DEST_TEST;
 4122              		.loc 1 928 0
 4123 0374 134B     		ldr	r3, .L233
 4124 0376 0622     		movs	r2, #6
 4125 0378 1A70     		strb	r2, [r3]
 929:.\main.c      ****         tracked_direction = robot_direction;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 91


 4126              		.loc 1 929 0
 4127 037a 194B     		ldr	r3, .L233+28
 4128 037c 1B68     		ldr	r3, [r3]
 4129 037e 194A     		ldr	r2, .L233+32
 4130 0380 1360     		str	r3, [r2]
 930:.\main.c      ****         //instructionLength = generateDirections();
 931:.\main.c      ****         instructionLength = generateEntireMapDirections();
 4131              		.loc 1 931 0
 4132 0382 FFF7FEFF 		bl	generateEntireMapDirections
 4133 0386 0346     		mov	r3, r0
 4134 0388 9AB2     		uxth	r2, r3
 4135 038a 174B     		ldr	r3, .L233+36
 4136 038c 1A80     		strh	r2, [r3]	@ movhi
 932:.\main.c      ****         //char message[128];
 933:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 934:.\main.c      ****         instructionCount = 0;
 4137              		.loc 1 934 0
 4138 038e 194B     		ldr	r3, .L233+48
 4139 0390 0022     		movs	r2, #0
 4140 0392 1A80     		strh	r2, [r3]	@ movhi
 935:.\main.c      ****         QuadDec_M1_SetCounter(0);
 4141              		.loc 1 935 0
 4142 0394 0020     		movs	r0, #0
 4143 0396 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 936:.\main.c      ****         QuadDec_M2_SetCounter(0);
 4144              		.loc 1 936 0
 4145 039a 0020     		movs	r0, #0
 4146 039c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 937:.\main.c      ****         last_quad_count1 = 0;
 4147              		.loc 1 937 0
 4148 03a0 124B     		ldr	r3, .L233+40
 4149 03a2 0022     		movs	r2, #0
 4150 03a4 1A80     		strh	r2, [r3]	@ movhi
 938:.\main.c      ****         last_quad_count2 = 0;
 4151              		.loc 1 938 0
 4152 03a6 124B     		ldr	r3, .L233+44
 4153 03a8 0022     		movs	r2, #0
 4154 03aa 1A80     		strh	r2, [r3]	@ movhi
 939:.\main.c      ****         isrRF_RX_Disable();
 4155              		.loc 1 939 0
 4156 03ac FFF7FEFF 		bl	isrRF_RX_Disable
 940:.\main.c      ****         while(rf_char != 'F')
 4157              		.loc 1 940 0
 4158 03b0 4DE0     		b	.L224
 4159              	.L227:
 941:.\main.c      ****         {
 942:.\main.c      ****             rf_char = UART_GetChar();
 4160              		.loc 1 942 0
 4161 03b2 FFF7FEFF 		bl	UART_GetChar
 4162 03b6 0346     		mov	r3, r0
 4163 03b8 FB77     		strb	r3, [r7, #31]
 943:.\main.c      ****             if(rf_char == 'F') break;
 4164              		.loc 1 943 0
 4165 03ba FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4166 03bc 462B     		cmp	r3, #70
 4167 03be 27D1     		bne	.L225
 4168 03c0 48E0     		b	.L226
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 92


 4169              	.L234:
 4170 03c2 00BF     		.align	2
 4171              	.L233:
 4172 03c4 00000000 		.word	track_mode
 4173 03c8 00000000 		.word	accum_dist
 4174 03cc 00000000 		.word	target_distance_cm
 4175 03d0 00000000 		.word	quad_per_cm
 4176 03d4 00000000 		.word	target_distance_quad
 4177 03d8 C0000000 		.word	.LC10
 4178 03dc 00000000 		.word	initial_pos_valid
 4179 03e0 00000000 		.word	robot_direction
 4180 03e4 00000000 		.word	tracked_direction
 4181 03e8 00000000 		.word	instructionLength
 4182 03ec 00000000 		.word	last_quad_count1
 4183 03f0 00000000 		.word	last_quad_count2
 4184 03f4 00000000 		.word	instructionCount
 4185 03f8 D4000000 		.word	.LC11
 4186 03fc E0000000 		.word	.LC12
 4187 0400 00000000 		.word	BT_rxInt
 4188 0404 E4000000 		.word	.LC13
 4189 0408 00000000 		.word	instructions
 4190 040c 64000000 		.word	.LC5
 4191              	.L225:
 944:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 4192              		.loc 1 944 0
 4193 0410 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4194 0412 2F2B     		cmp	r3, #47
 4195 0414 1BD9     		bls	.L224
 4196              		.loc 1 944 0 is_stmt 0 discriminator 1
 4197 0416 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4198 0418 392B     		cmp	r3, #57
 4199 041a 18D8     		bhi	.L224
 945:.\main.c      ****             {
 946:.\main.c      ****                 UART_PutString("received: ");
 4200              		.loc 1 946 0 is_stmt 1
 4201 041c 4248     		ldr	r0, .L235
 4202 041e FFF7FEFF 		bl	UART_PutString
 947:.\main.c      ****                 UART_PutChar(rf_char);
 4203              		.loc 1 947 0
 4204 0422 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4205 0424 1846     		mov	r0, r3
 4206 0426 FFF7FEFF 		bl	UART_PutChar
 948:.\main.c      ****                 UART_PutString("\r\n");
 4207              		.loc 1 948 0
 4208 042a 4048     		ldr	r0, .L235+4
 4209 042c FFF7FEFF 		bl	UART_PutString
 949:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4210              		.loc 1 949 0
 4211 0430 3F4B     		ldr	r3, .L235+8
 4212 0432 1B88     		ldrh	r3, [r3]
 4213 0434 1A46     		mov	r2, r3	@ movhi
 4214 0436 9200     		lsls	r2, r2, #2
 4215 0438 1344     		add	r3, r3, r2
 4216 043a 5B00     		lsls	r3, r3, #1
 4217 043c 9AB2     		uxth	r2, r3
 4218 043e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4219 0440 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 93


 4220 0442 1344     		add	r3, r3, r2
 4221 0444 9BB2     		uxth	r3, r3
 4222 0446 303B     		subs	r3, r3, #48
 4223 0448 9AB2     		uxth	r2, r3
 4224 044a 394B     		ldr	r3, .L235+8
 4225 044c 1A80     		strh	r2, [r3]	@ movhi
 4226              	.L224:
 940:.\main.c      ****         {
 4227              		.loc 1 940 0
 4228 044e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4229 0450 462B     		cmp	r3, #70
 4230 0452 AED1     		bne	.L227
 4231              	.L226:
 950:.\main.c      ****             }
 951:.\main.c      ****             
 952:.\main.c      ****         }
 953:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4232              		.loc 1 953 0
 4233 0454 3748     		ldr	r0, .L235+12
 4234 0456 FFF7FEFF 		bl	isrRF_RX_StartEx
 954:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4235              		.loc 1 954 0
 4236 045a 354B     		ldr	r3, .L235+8
 4237 045c 1B88     		ldrh	r3, [r3]
 4238 045e 1A46     		mov	r2, r3
 4239 0460 3B46     		mov	r3, r7
 4240 0462 1846     		mov	r0, r3
 4241 0464 3449     		ldr	r1, .L235+16
 4242 0466 FFF7FEFF 		bl	sprintf
 955:.\main.c      ****         UART_PutString(mes);
 4243              		.loc 1 955 0
 4244 046a 3B46     		mov	r3, r7
 4245 046c 1846     		mov	r0, r3
 4246 046e FFF7FEFF 		bl	UART_PutString
 956:.\main.c      ****         //instructionCount = instructionLength - 22;
 957:.\main.c      ****         int x;
 958:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 4247              		.loc 1 958 0
 4248 0472 2F4B     		ldr	r3, .L235+8
 4249 0474 1B88     		ldrh	r3, [r3]
 4250 0476 7B61     		str	r3, [r7, #20]
 4251 0478 18E0     		b	.L228
 4252              	.L231:
 959:.\main.c      ****         {
 960:.\main.c      ****             if(x%2 == 0)
 4253              		.loc 1 960 0
 4254 047a 7B69     		ldr	r3, [r7, #20]
 4255 047c 03F00103 		and	r3, r3, #1
 4256 0480 002B     		cmp	r3, #0
 4257 0482 07D1     		bne	.L229
 961:.\main.c      ****             {
 962:.\main.c      ****                 UART_PutChar(instructions[x]);
 4258              		.loc 1 962 0
 4259 0484 2D4A     		ldr	r2, .L235+20
 4260 0486 7B69     		ldr	r3, [r7, #20]
 4261 0488 1344     		add	r3, r3, r2
 4262 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 94


 4263 048c 1846     		mov	r0, r3
 4264 048e FFF7FEFF 		bl	UART_PutChar
 4265 0492 08E0     		b	.L230
 4266              	.L229:
 963:.\main.c      ****             }
 964:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 4267              		.loc 1 964 0
 4268 0494 294A     		ldr	r2, .L235+20
 4269 0496 7B69     		ldr	r3, [r7, #20]
 4270 0498 1344     		add	r3, r3, r2
 4271 049a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4272 049c 3033     		adds	r3, r3, #48
 4273 049e DBB2     		uxtb	r3, r3
 4274 04a0 1846     		mov	r0, r3
 4275 04a2 FFF7FEFF 		bl	UART_PutChar
 4276              	.L230:
 958:.\main.c      ****         {
 4277              		.loc 1 958 0 discriminator 2
 4278 04a6 7B69     		ldr	r3, [r7, #20]
 4279 04a8 0133     		adds	r3, r3, #1
 4280 04aa 7B61     		str	r3, [r7, #20]
 4281              	.L228:
 958:.\main.c      ****         {
 4282              		.loc 1 958 0 is_stmt 0 discriminator 1
 4283 04ac 244B     		ldr	r3, .L235+24
 4284 04ae 1B88     		ldrh	r3, [r3]
 4285 04b0 1A46     		mov	r2, r3
 4286 04b2 7B69     		ldr	r3, [r7, #20]
 4287 04b4 9A42     		cmp	r2, r3
 4288 04b6 E0DC     		bgt	.L231
 965:.\main.c      **** 
 966:.\main.c      ****         }
 967:.\main.c      ****         
 968:.\main.c      ****         UART_PutString("\r\n");
 4289              		.loc 1 968 0 is_stmt 1
 4290 04b8 1C48     		ldr	r0, .L235+4
 4291 04ba FFF7FEFF 		bl	UART_PutString
 969:.\main.c      **** 
 970:.\main.c      ****         nextStep = instructions[instructionCount];
 4292              		.loc 1 970 0
 4293 04be 1C4B     		ldr	r3, .L235+8
 4294 04c0 1B88     		ldrh	r3, [r3]
 4295 04c2 1A46     		mov	r2, r3
 4296 04c4 1D4B     		ldr	r3, .L235+20
 4297 04c6 9B5C     		ldrb	r3, [r3, r2]
 4298 04c8 FB74     		strb	r3, [r7, #19]
 971:.\main.c      ****         
 972:.\main.c      ****         
 973:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1]; 
 4299              		.loc 1 973 0
 4300 04ca 194B     		ldr	r3, .L235+8
 4301 04cc 1B88     		ldrh	r3, [r3]
 4302 04ce 0133     		adds	r3, r3, #1
 4303 04d0 1A4A     		ldr	r2, .L235+20
 4304 04d2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4305 04d4 9BB2     		uxth	r3, r3
 4306 04d6 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 95


 4307 04d8 D200     		lsls	r2, r2, #3
 4308 04da 1A44     		add	r2, r2, r3
 4309 04dc D200     		lsls	r2, r2, #3
 4310 04de D31A     		subs	r3, r2, r3
 4311 04e0 5B00     		lsls	r3, r3, #1
 4312 04e2 9BB2     		uxth	r3, r3
 4313 04e4 9AB2     		uxth	r2, r3
 4314 04e6 174B     		ldr	r3, .L235+28
 4315 04e8 1A80     		strh	r2, [r3]	@ movhi
 974:.\main.c      ****         if(instructionCount == 0) target_distance_quad += QUAD_PER_UNIT; 
 4316              		.loc 1 974 0
 4317 04ea 114B     		ldr	r3, .L235+8
 4318 04ec 1B88     		ldrh	r3, [r3]
 4319 04ee 002B     		cmp	r3, #0
 4320 04f0 07D1     		bne	.L232
 4321              		.loc 1 974 0 is_stmt 0 discriminator 1
 4322 04f2 144B     		ldr	r3, .L235+28
 4323 04f4 1B88     		ldrh	r3, [r3]
 4324 04f6 9BB2     		uxth	r3, r3
 4325 04f8 8E33     		adds	r3, r3, #142
 4326 04fa 9BB2     		uxth	r3, r3
 4327 04fc 9AB2     		uxth	r2, r3
 4328 04fe 114B     		ldr	r3, .L235+28
 4329 0500 1A80     		strh	r2, [r3]	@ movhi
 4330              	.L232:
 975:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4331              		.loc 1 975 0 is_stmt 1
 4332 0502 104B     		ldr	r3, .L235+28
 4333 0504 1B88     		ldrh	r3, [r3]
 4334 0506 1BB2     		sxth	r3, r3
 4335 0508 3A46     		mov	r2, r7
 4336 050a 1046     		mov	r0, r2
 4337 050c 0E49     		ldr	r1, .L235+32
 4338 050e 1A46     		mov	r2, r3
 4339 0510 FFF7FEFF 		bl	sprintf
 976:.\main.c      ****         UART_PutString(mes);
 4340              		.loc 1 976 0
 4341 0514 3B46     		mov	r3, r7
 4342 0516 1846     		mov	r0, r3
 4343 0518 FFF7FEFF 		bl	UART_PutString
 977:.\main.c      ****         inittrackLineZ();
 4344              		.loc 1 977 0
 4345 051c FFF7FEFF 		bl	inittrackLineZ
 978:.\main.c      ****         break;
 4346              		.loc 1 978 0
 4347 0520 00BF     		nop
 4348              	.L199:
 4349              	.LBE11:
 979:.\main.c      ****     }
 980:.\main.c      **** }
 4350              		.loc 1 980 0
 4351 0522 2037     		adds	r7, r7, #32
 4352              		.cfi_def_cfa_offset 8
 4353 0524 BD46     		mov	sp, r7
 4354              		.cfi_def_cfa_register 13
 4355              		@ sp needed
 4356 0526 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 96


 4357              	.L236:
 4358              		.align	2
 4359              	.L235:
 4360 0528 D4000000 		.word	.LC11
 4361 052c E0000000 		.word	.LC12
 4362 0530 00000000 		.word	instructionCount
 4363 0534 00000000 		.word	BT_rxInt
 4364 0538 E4000000 		.word	.LC13
 4365 053c 00000000 		.word	instructions
 4366 0540 00000000 		.word	instructionLength
 4367 0544 00000000 		.word	target_distance_quad
 4368 0548 64000000 		.word	.LC5
 4369              		.cfi_endproc
 4370              	.LFE93:
 4371              		.size	BT_rxInt, .-BT_rxInt
 4372              		.section	.text.changeToRF,"ax",%progbits
 4373              		.align	2
 4374              		.global	changeToRF
 4375              		.thumb
 4376              		.thumb_func
 4377              		.type	changeToRF, %function
 4378              	changeToRF:
 4379              	.LFB94:
 981:.\main.c      **** 
 982:.\main.c      **** 
 983:.\main.c      **** void changeToRF()
 984:.\main.c      **** {
 4380              		.loc 1 984 0
 4381              		.cfi_startproc
 4382              		@ args = 0, pretend = 0, frame = 0
 4383              		@ frame_needed = 1, uses_anonymous_args = 0
 4384 0000 80B5     		push	{r7, lr}
 4385              		.cfi_def_cfa_offset 8
 4386              		.cfi_offset 7, -8
 4387              		.cfi_offset 14, -4
 4388 0002 00AF     		add	r7, sp, #0
 4389              		.cfi_def_cfa_register 7
 985:.\main.c      ****         //disable BT
 986:.\main.c      ****         BT_ENABLED = 0;
 4390              		.loc 1 986 0
 4391 0004 0B4B     		ldr	r3, .L238
 4392 0006 0022     		movs	r2, #0
 4393 0008 1A70     		strb	r2, [r3]
 987:.\main.c      ****         isrRF_RX_Stop();
 4394              		.loc 1 987 0
 4395 000a FFF7FEFF 		bl	isrRF_RX_Stop
 988:.\main.c      ****         UART_Stop();
 4396              		.loc 1 988 0
 4397 000e FFF7FEFF 		bl	UART_Stop
 989:.\main.c      ****         
 990:.\main.c      ****         //enable RF
 991:.\main.c      ****         BIN_ENABLED = 1;
 4398              		.loc 1 991 0
 4399 0012 094B     		ldr	r3, .L238+4
 4400 0014 0122     		movs	r2, #1
 4401 0016 1A70     		strb	r2, [r3]
 992:.\main.c      ****         UART_clk_SetDividerValue(130);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 97


 4402              		.loc 1 992 0
 4403 0018 8120     		movs	r0, #129
 4404 001a 0121     		movs	r1, #1
 4405 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 993:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4406              		.loc 1 993 0
 4407 0020 0648     		ldr	r0, .L238+8
 4408 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 994:.\main.c      ****         UART_Start();
 4409              		.loc 1 994 0
 4410 0026 FFF7FEFF 		bl	UART_Start
 995:.\main.c      ****         RF_BT_SELECT_Write(0);
 4411              		.loc 1 995 0
 4412 002a 0020     		movs	r0, #0
 4413 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 996:.\main.c      **** }
 4414              		.loc 1 996 0
 4415 0030 80BD     		pop	{r7, pc}
 4416              	.L239:
 4417 0032 00BF     		.align	2
 4418              	.L238:
 4419 0034 00000000 		.word	BT_ENABLED
 4420 0038 00000000 		.word	BIN_ENABLED
 4421 003c 00000000 		.word	rxInt
 4422              		.cfi_endproc
 4423              	.LFE94:
 4424              		.size	changeToRF, .-changeToRF
 4425              		.section	.text.changeToBT,"ax",%progbits
 4426              		.align	2
 4427              		.global	changeToBT
 4428              		.thumb
 4429              		.thumb_func
 4430              		.type	changeToBT, %function
 4431              	changeToBT:
 4432              	.LFB95:
 997:.\main.c      **** 
 998:.\main.c      **** void changeToBT()
 999:.\main.c      **** {
 4433              		.loc 1 999 0
 4434              		.cfi_startproc
 4435              		@ args = 0, pretend = 0, frame = 0
 4436              		@ frame_needed = 1, uses_anonymous_args = 0
 4437 0000 80B5     		push	{r7, lr}
 4438              		.cfi_def_cfa_offset 8
 4439              		.cfi_offset 7, -8
 4440              		.cfi_offset 14, -4
 4441 0002 00AF     		add	r7, sp, #0
 4442              		.cfi_def_cfa_register 7
1000:.\main.c      ****         //disable RF
1001:.\main.c      ****         BIN_ENABLED = 0;
 4443              		.loc 1 1001 0
 4444 0004 0B4B     		ldr	r3, .L241
 4445 0006 0022     		movs	r2, #0
 4446 0008 1A70     		strb	r2, [r3]
1002:.\main.c      ****         isrRF_RX_Stop();
 4447              		.loc 1 1002 0
 4448 000a FFF7FEFF 		bl	isrRF_RX_Stop
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 98


1003:.\main.c      ****         UART_Stop();
 4449              		.loc 1 1003 0
 4450 000e FFF7FEFF 		bl	UART_Stop
1004:.\main.c      ****         
1005:.\main.c      ****         //enable BT
1006:.\main.c      ****         BT_ENABLED = 1;
 4451              		.loc 1 1006 0
 4452 0012 094B     		ldr	r3, .L241+4
 4453 0014 0122     		movs	r2, #1
 4454 0016 1A70     		strb	r2, [r3]
1007:.\main.c      ****         UART_clk_SetDividerValue(781);
 4455              		.loc 1 1007 0
 4456 0018 4FF44370 		mov	r0, #780
 4457 001c 0121     		movs	r1, #1
 4458 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
1008:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4459              		.loc 1 1008 0
 4460 0022 0648     		ldr	r0, .L241+8
 4461 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
1009:.\main.c      ****         UART_Start();
 4462              		.loc 1 1009 0
 4463 0028 FFF7FEFF 		bl	UART_Start
1010:.\main.c      ****         RF_BT_SELECT_Write(1);
 4464              		.loc 1 1010 0
 4465 002c 0120     		movs	r0, #1
 4466 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
1011:.\main.c      **** }
 4467              		.loc 1 1011 0
 4468 0032 80BD     		pop	{r7, pc}
 4469              	.L242:
 4470              		.align	2
 4471              	.L241:
 4472 0034 00000000 		.word	BIN_ENABLED
 4473 0038 00000000 		.word	BT_ENABLED
 4474 003c 00000000 		.word	BT_rxInt
 4475              		.cfi_endproc
 4476              	.LFE95:
 4477              		.size	changeToBT, .-changeToBT
 4478              		.section	.text.Quad_Dec_response,"ax",%progbits
 4479              		.align	2
 4480              		.global	Quad_Dec_response
 4481              		.thumb
 4482              		.thumb_func
 4483              		.type	Quad_Dec_response, %function
 4484              	Quad_Dec_response:
 4485              	.LFB96:
1012:.\main.c      **** 
1013:.\main.c      **** 
1014:.\main.c      **** void Quad_Dec_response()
1015:.\main.c      **** {
 4486              		.loc 1 1015 0
 4487              		.cfi_startproc
 4488              		@ args = 0, pretend = 0, frame = 32
 4489              		@ frame_needed = 1, uses_anonymous_args = 0
 4490 0000 B0B5     		push	{r4, r5, r7, lr}
 4491              		.cfi_def_cfa_offset 16
 4492              		.cfi_offset 4, -16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 99


 4493              		.cfi_offset 5, -12
 4494              		.cfi_offset 7, -8
 4495              		.cfi_offset 14, -4
 4496 0002 88B0     		sub	sp, sp, #32
 4497              		.cfi_def_cfa_offset 48
 4498 0004 00AF     		add	r7, sp, #0
 4499              		.cfi_def_cfa_register 7
1016:.\main.c      ****     //Check if the flag has been set
1017:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4500              		.loc 1 1017 0
 4501 0006 824B     		ldr	r3, .L251
 4502 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4503 000a 002B     		cmp	r3, #0
 4504 000c 00D1     		bne	.L244
 4505 000e FCE0     		b	.L243
 4506              	.L244:
1018:.\main.c      ****     flag_calc_wheelspeed = 0;
 4507              		.loc 1 1018 0
 4508 0010 7F4B     		ldr	r3, .L251
 4509 0012 0022     		movs	r2, #0
 4510 0014 1A70     		strb	r2, [r3]
1019:.\main.c      ****     
1020:.\main.c      ****     //char wheel_1_str [64];
1021:.\main.c      ****     //char wheel_2_str [64];
1022:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
1023:.\main.c      ****     //usbPutString(wheel_1_str);
1024:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
1025:.\main.c      ****     
1026:.\main.c      ****     //usbPutString(wheel_2_str);
1027:.\main.c      ****     
1028:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4511              		.loc 1 1028 0
 4512 0016 7F4B     		ldr	r3, .L251+4
 4513 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4514 001a FB81     		strh	r3, [r7, #14]	@ movhi
1029:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4515              		.loc 1 1029 0
 4516 001c 7E4B     		ldr	r3, .L251+8
 4517 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4518 0020 BB81     		strh	r3, [r7, #12]	@ movhi
1030:.\main.c      ****     double scalingLeft = 1;
 4519              		.loc 1 1030 0
 4520 0022 4FF00002 		mov	r2, #0
 4521 0026 7D4B     		ldr	r3, .L251+12
 4522 0028 C7E90623 		strd	r2, [r7, #24]
1031:.\main.c      ****     double scalingRight = 1;
 4523              		.loc 1 1031 0
 4524 002c 4FF00002 		mov	r2, #0
 4525 0030 7A4B     		ldr	r3, .L251+12
 4526 0032 C7E90423 		strd	r2, [r7, #16]
1032:.\main.c      ****     
1033:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
1034:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4527              		.loc 1 1034 0
 4528 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4529 003a 002B     		cmp	r3, #0
 4530 003c 0FD1     		bne	.L246
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 100


 4531              		.loc 1 1034 0 is_stmt 0 discriminator 1
 4532 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4533 0042 002B     		cmp	r3, #0
 4534 0044 0BD1     		bne	.L246
1035:.\main.c      ****        //leftSpeed = 3;
1036:.\main.c      ****         scalingLeft = 2;
 4535              		.loc 1 1036 0 is_stmt 1
 4536 0046 4FF00002 		mov	r2, #0
 4537 004a 4FF08043 		mov	r3, #1073741824
 4538 004e C7E90623 		strd	r2, [r7, #24]
1037:.\main.c      ****         scalingRight = 2;
 4539              		.loc 1 1037 0
 4540 0052 4FF00002 		mov	r2, #0
 4541 0056 4FF08043 		mov	r3, #1073741824
 4542 005a C7E90423 		strd	r2, [r7, #16]
 4543              	.L246:
1038:.\main.c      ****     }
1039:.\main.c      **** 
1040:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4544              		.loc 1 1040 0
 4545 005e 704B     		ldr	r3, .L251+16
 4546 0060 1B88     		ldrh	r3, [r3]
 4547 0062 1AB2     		sxth	r2, r3
 4548 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4549 0068 002B     		cmp	r3, #0
 4550 006a B8BF     		it	lt
 4551 006c 5B42     		rsblt	r3, r3, #0
 4552 006e D31A     		subs	r3, r2, r3
 4553 0070 BB60     		str	r3, [r7, #8]
1041:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4554              		.loc 1 1041 0
 4555 0072 BB68     		ldr	r3, [r7, #8]
 4556 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4557 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4558 007c BB68     		ldr	r3, [r7, #8]
 4559 007e 92FBF3F3 		sdiv	r3, r2, r3
 4560 0082 1846     		mov	r0, r3
 4561 0084 FFF7FEFF 		bl	__aeabi_i2d
 4562 0088 0446     		mov	r4, r0
 4563 008a 0D46     		mov	r5, r1
 4564 008c BB68     		ldr	r3, [r7, #8]
 4565 008e 002B     		cmp	r3, #0
 4566 0090 B8BF     		it	lt
 4567 0092 5B42     		rsblt	r3, r3, #0
 4568 0094 1846     		mov	r0, r3
 4569 0096 FFF7FEFF 		bl	__aeabi_i2d
 4570 009a 0246     		mov	r2, r0
 4571 009c 0B46     		mov	r3, r1
 4572 009e 1046     		mov	r0, r2
 4573 00a0 1946     		mov	r1, r3
 4574 00a2 FFF7FEFF 		bl	sqrt
 4575 00a6 0246     		mov	r2, r0
 4576 00a8 0B46     		mov	r3, r1
 4577 00aa 2046     		mov	r0, r4
 4578 00ac 2946     		mov	r1, r5
 4579 00ae FFF7FEFF 		bl	__aeabi_dmul
 4580 00b2 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 101


 4581 00b4 0B46     		mov	r3, r1
 4582 00b6 1046     		mov	r0, r2
 4583 00b8 1946     		mov	r1, r3
 4584 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4585 00be 0346     		mov	r3, r0
 4586 00c0 7B60     		str	r3, [r7, #4]
1042:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4587              		.loc 1 1042 0
 4588 00c2 584B     		ldr	r3, .L251+20
 4589 00c4 1B88     		ldrh	r3, [r3]
 4590 00c6 1BB2     		sxth	r3, r3
 4591 00c8 1846     		mov	r0, r3
 4592 00ca FFF7FEFF 		bl	__aeabi_i2d
 4593 00ce 0446     		mov	r4, r0
 4594 00d0 0D46     		mov	r5, r1
 4595 00d2 7868     		ldr	r0, [r7, #4]
 4596 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4597 00d8 0246     		mov	r2, r0
 4598 00da 0B46     		mov	r3, r1
 4599 00dc 1046     		mov	r0, r2
 4600 00de 1946     		mov	r1, r3
 4601 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4602 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4603 00e8 0246     		mov	r2, r0
 4604 00ea 0B46     		mov	r3, r1
 4605 00ec 2046     		mov	r0, r4
 4606 00ee 2946     		mov	r1, r5
 4607 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4608 00f4 0246     		mov	r2, r0
 4609 00f6 0B46     		mov	r3, r1
 4610 00f8 1046     		mov	r0, r2
 4611 00fa 1946     		mov	r1, r3
 4612 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4613 0100 0346     		mov	r3, r0
 4614 0102 9AB2     		uxth	r2, r3
 4615 0104 474B     		ldr	r3, .L251+20
 4616 0106 1A80     		strh	r2, [r3]	@ movhi
1043:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4617              		.loc 1 1043 0
 4618 0108 474B     		ldr	r3, .L251+24
 4619 010a 1B88     		ldrh	r3, [r3]
 4620 010c 1AB2     		sxth	r2, r3
 4621 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4622 0112 002B     		cmp	r3, #0
 4623 0114 B8BF     		it	lt
 4624 0116 5B42     		rsblt	r3, r3, #0
 4625 0118 D31A     		subs	r3, r2, r3
 4626 011a BB60     		str	r3, [r7, #8]
1044:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4627              		.loc 1 1044 0
 4628 011c BB68     		ldr	r3, [r7, #8]
 4629 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4630 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4631 0126 BB68     		ldr	r3, [r7, #8]
 4632 0128 92FBF3F3 		sdiv	r3, r2, r3
 4633 012c 1846     		mov	r0, r3
 4634 012e FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 102


 4635 0132 0446     		mov	r4, r0
 4636 0134 0D46     		mov	r5, r1
 4637 0136 BB68     		ldr	r3, [r7, #8]
 4638 0138 002B     		cmp	r3, #0
 4639 013a B8BF     		it	lt
 4640 013c 5B42     		rsblt	r3, r3, #0
 4641 013e 1846     		mov	r0, r3
 4642 0140 FFF7FEFF 		bl	__aeabi_i2d
 4643 0144 0246     		mov	r2, r0
 4644 0146 0B46     		mov	r3, r1
 4645 0148 1046     		mov	r0, r2
 4646 014a 1946     		mov	r1, r3
 4647 014c FFF7FEFF 		bl	sqrt
 4648 0150 0246     		mov	r2, r0
 4649 0152 0B46     		mov	r3, r1
 4650 0154 2046     		mov	r0, r4
 4651 0156 2946     		mov	r1, r5
 4652 0158 FFF7FEFF 		bl	__aeabi_dmul
 4653 015c 0246     		mov	r2, r0
 4654 015e 0B46     		mov	r3, r1
 4655 0160 1046     		mov	r0, r2
 4656 0162 1946     		mov	r1, r3
 4657 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4658 0168 0346     		mov	r3, r0
 4659 016a 7B60     		str	r3, [r7, #4]
1045:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4660              		.loc 1 1045 0
 4661 016c 2F4B     		ldr	r3, .L251+28
 4662 016e 1B88     		ldrh	r3, [r3]
 4663 0170 1BB2     		sxth	r3, r3
 4664 0172 1846     		mov	r0, r3
 4665 0174 FFF7FEFF 		bl	__aeabi_i2d
 4666 0178 0446     		mov	r4, r0
 4667 017a 0D46     		mov	r5, r1
 4668 017c 7868     		ldr	r0, [r7, #4]
 4669 017e FFF7FEFF 		bl	__aeabi_i2d
 4670 0182 0246     		mov	r2, r0
 4671 0184 0B46     		mov	r3, r1
 4672 0186 1046     		mov	r0, r2
 4673 0188 1946     		mov	r1, r3
 4674 018a D7E90423 		ldrd	r2, [r7, #16]
 4675 018e FFF7FEFF 		bl	__aeabi_dmul
 4676 0192 0246     		mov	r2, r0
 4677 0194 0B46     		mov	r3, r1
 4678 0196 2046     		mov	r0, r4
 4679 0198 2946     		mov	r1, r5
 4680 019a FFF7FEFF 		bl	__aeabi_dadd
 4681 019e 0246     		mov	r2, r0
 4682 01a0 0B46     		mov	r3, r1
 4683 01a2 1046     		mov	r0, r2
 4684 01a4 1946     		mov	r1, r3
 4685 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4686 01aa 0346     		mov	r3, r0
 4687 01ac 9AB2     		uxth	r2, r3
 4688 01ae 1F4B     		ldr	r3, .L251+28
 4689 01b0 1A80     		strh	r2, [r3]	@ movhi
1046:.\main.c      ****     
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 103


1047:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4690              		.loc 1 1047 0
 4691 01b2 1E4B     		ldr	r3, .L251+28
 4692 01b4 1B88     		ldrh	r3, [r3]
 4693 01b6 1BB2     		sxth	r3, r3
 4694 01b8 002B     		cmp	r3, #0
 4695 01ba 02DA     		bge	.L247
 4696              		.loc 1 1047 0 is_stmt 0 discriminator 1
 4697 01bc 1B4B     		ldr	r3, .L251+28
 4698 01be 0022     		movs	r2, #0
 4699 01c0 1A80     		strh	r2, [r3]	@ movhi
 4700              	.L247:
1048:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4701              		.loc 1 1048 0 is_stmt 1
 4702 01c2 184B     		ldr	r3, .L251+20
 4703 01c4 1B88     		ldrh	r3, [r3]
 4704 01c6 1BB2     		sxth	r3, r3
 4705 01c8 002B     		cmp	r3, #0
 4706 01ca 02DA     		bge	.L248
 4707              		.loc 1 1048 0 is_stmt 0 discriminator 1
 4708 01cc 154B     		ldr	r3, .L251+20
 4709 01ce 0022     		movs	r2, #0
 4710 01d0 1A80     		strh	r2, [r3]	@ movhi
 4711              	.L248:
1049:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4712              		.loc 1 1049 0 is_stmt 1
 4713 01d2 164B     		ldr	r3, .L251+28
 4714 01d4 1B88     		ldrh	r3, [r3]
 4715 01d6 1BB2     		sxth	r3, r3
 4716 01d8 642B     		cmp	r3, #100
 4717 01da 02DD     		ble	.L249
 4718              		.loc 1 1049 0 is_stmt 0 discriminator 1
 4719 01dc 134B     		ldr	r3, .L251+28
 4720 01de 6422     		movs	r2, #100
 4721 01e0 1A80     		strh	r2, [r3]	@ movhi
 4722              	.L249:
1050:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4723              		.loc 1 1050 0 is_stmt 1
 4724 01e2 104B     		ldr	r3, .L251+20
 4725 01e4 1B88     		ldrh	r3, [r3]
 4726 01e6 1BB2     		sxth	r3, r3
 4727 01e8 642B     		cmp	r3, #100
 4728 01ea 02DD     		ble	.L250
 4729              		.loc 1 1050 0 is_stmt 0 discriminator 1
 4730 01ec 0D4B     		ldr	r3, .L251+20
 4731 01ee 6422     		movs	r2, #100
 4732 01f0 1A80     		strh	r2, [r3]	@ movhi
 4733              	.L250:
1051:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4734              		.loc 1 1051 0 is_stmt 1
 4735 01f2 0C4B     		ldr	r3, .L251+20
 4736 01f4 1B88     		ldrh	r3, [r3]
 4737 01f6 DBB2     		uxtb	r3, r3
 4738 01f8 1846     		mov	r0, r3
 4739 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
1052:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4740              		.loc 1 1052 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 104


 4741 01fe 0B4B     		ldr	r3, .L251+28
 4742 0200 1B88     		ldrh	r3, [r3]
 4743 0202 DBB2     		uxtb	r3, r3
 4744 0204 1846     		mov	r0, r3
 4745 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4746              	.L243:
1053:.\main.c      **** }
 4747              		.loc 1 1053 0
 4748 020a 2037     		adds	r7, r7, #32
 4749              		.cfi_def_cfa_offset 16
 4750 020c BD46     		mov	sp, r7
 4751              		.cfi_def_cfa_register 13
 4752              		@ sp needed
 4753 020e B0BD     		pop	{r4, r5, r7, pc}
 4754              	.L252:
 4755              		.align	2
 4756              	.L251:
 4757 0210 00000000 		.word	flag_calc_wheelspeed
 4758 0214 00000000 		.word	quad_diff1
 4759 0218 00000000 		.word	quad_diff2
 4760 021c 0000F03F 		.word	1072693248
 4761 0220 00000000 		.word	leftSpeedLimit
 4762 0224 00000000 		.word	left_duty_cycle
 4763 0228 00000000 		.word	rightSpeedLimit
 4764 022c 00000000 		.word	right_duty_cycle
 4765              		.cfi_endproc
 4766              	.LFE96:
 4767              		.size	Quad_Dec_response, .-Quad_Dec_response
 4768              		.section	.text.trackLine,"ax",%progbits
 4769              		.align	2
 4770              		.global	trackLine
 4771              		.thumb
 4772              		.thumb_func
 4773              		.type	trackLine, %function
 4774              	trackLine:
 4775              	.LFB97:
1054:.\main.c      **** 
1055:.\main.c      **** void trackLine()
1056:.\main.c      **** {
 4776              		.loc 1 1056 0
 4777              		.cfi_startproc
 4778              		@ args = 0, pretend = 0, frame = 0
 4779              		@ frame_needed = 1, uses_anonymous_args = 0
 4780              		@ link register save eliminated.
 4781 0000 80B4     		push	{r7}
 4782              		.cfi_def_cfa_offset 4
 4783              		.cfi_offset 7, -4
 4784 0002 00AF     		add	r7, sp, #0
 4785              		.cfi_def_cfa_register 7
1057:.\main.c      ****  //removed from implementation
1058:.\main.c      **** }
 4786              		.loc 1 1058 0
 4787 0004 BD46     		mov	sp, r7
 4788              		.cfi_def_cfa_register 13
 4789              		@ sp needed
 4790 0006 5DF8047B 		ldr	r7, [sp], #4
 4791              		.cfi_restore 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 105


 4792              		.cfi_def_cfa_offset 0
 4793 000a 7047     		bx	lr
 4794              		.cfi_endproc
 4795              	.LFE97:
 4796              		.size	trackLine, .-trackLine
 4797              		.global	leftTurnCount
 4798              		.bss
 4799              		.align	1
 4800              		.type	leftTurnCount, %object
 4801              		.size	leftTurnCount, 2
 4802              	leftTurnCount:
 4803 28e8 0000     		.space	2
 4804              		.global	rightTurnCount
 4805              		.align	1
 4806              		.type	rightTurnCount, %object
 4807              		.size	rightTurnCount, 2
 4808              	rightTurnCount:
 4809 28ea 0000     		.space	2
 4810              		.section	.text.trackLineZ,"ax",%progbits
 4811              		.align	2
 4812              		.global	trackLineZ
 4813              		.thumb
 4814              		.thumb_func
 4815              		.type	trackLineZ, %function
 4816              	trackLineZ:
 4817              	.LFB98:
1059:.\main.c      **** uint16 leftTurnCount = 0;
1060:.\main.c      **** uint16 rightTurnCount = 0;
1061:.\main.c      **** void trackLineZ()
1062:.\main.c      **** {
 4818              		.loc 1 1062 0
 4819              		.cfi_startproc
 4820              		@ args = 0, pretend = 0, frame = 8
 4821              		@ frame_needed = 1, uses_anonymous_args = 0
 4822 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4823              		.cfi_def_cfa_offset 24
 4824              		.cfi_offset 4, -24
 4825              		.cfi_offset 5, -20
 4826              		.cfi_offset 7, -16
 4827              		.cfi_offset 8, -12
 4828              		.cfi_offset 9, -8
 4829              		.cfi_offset 14, -4
 4830 0004 82B0     		sub	sp, sp, #8
 4831              		.cfi_def_cfa_offset 32
 4832 0006 00AF     		add	r7, sp, #0
 4833              		.cfi_def_cfa_register 7
1063:.\main.c      ****     //read the value of the three central-front sensors
1064:.\main.c      ****     
1065:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4834              		.loc 1 1065 0
 4835 0008 FFF7FEFF 		bl	NLSens_out_Read
 4836 000c 0346     		mov	r3, r0
 4837 000e FB71     		strb	r3, [r7, #7]
1066:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4838              		.loc 1 1066 0
 4839 0010 FFF7FEFF 		bl	NRSens_out_Read
 4840 0014 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 106


 4841 0016 BB71     		strb	r3, [r7, #6]
1067:.\main.c      ****     uint8 mid = MSens_out_Read();
 4842              		.loc 1 1067 0
 4843 0018 FFF7FEFF 		bl	MSens_out_Read
 4844 001c 0346     		mov	r3, r0
 4845 001e 7B71     		strb	r3, [r7, #5]
1068:.\main.c      ****     
1069:.\main.c      ****         //if only the left one, hard left
1070:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4846              		.loc 1 1070 0
 4847 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4848 0022 002B     		cmp	r3, #0
 4849 0024 27D0     		beq	.L255
 4850              		.loc 1 1070 0 is_stmt 0 discriminator 1
 4851 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4852 0028 002B     		cmp	r3, #0
 4853 002a 24D1     		bne	.L255
 4854              		.loc 1 1070 0 discriminator 2
 4855 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4856 002e 002B     		cmp	r3, #0
 4857 0030 21D1     		bne	.L255
1071:.\main.c      ****     {
1072:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4858              		.loc 1 1072 0 is_stmt 1
 4859 0032 454B     		ldr	r3, .L260+8
 4860 0034 D3E90023 		ldrd	r2, [r3]
 4861 0038 1046     		mov	r0, r2
 4862 003a 1946     		mov	r1, r3
 4863 003c 40A3     		adr	r3, .L260
 4864 003e D3E90023 		ldrd	r2, [r3]
 4865 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4866 0046 0246     		mov	r2, r0
 4867 0048 0B46     		mov	r3, r1
 4868 004a 1446     		mov	r4, r2
 4869 004c 1D46     		mov	r5, r3
 4870 004e 3E4B     		ldr	r3, .L260+8
 4871 0050 D3E90023 		ldrd	r2, [r3]
 4872 0054 9046     		mov	r8, r2
 4873 0056 83F00049 		eor	r9, r3, #-2147483648
 4874 005a 4046     		mov	r0, r8
 4875 005c 4946     		mov	r1, r9
 4876 005e 38A3     		adr	r3, .L260
 4877 0060 D3E90023 		ldrd	r2, [r3]
 4878 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4879 0068 0246     		mov	r2, r0
 4880 006a 0B46     		mov	r3, r1
 4881 006c 2046     		mov	r0, r4
 4882 006e 2946     		mov	r1, r5
 4883 0070 FFF7FEFF 		bl	setSpeed
 4884 0074 5FE0     		b	.L254
 4885              	.L255:
1073:.\main.c      ****     }
1074:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4886              		.loc 1 1074 0
 4887 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4888 0078 002B     		cmp	r3, #0
 4889 007a 0ED0     		beq	.L257
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 107


 4890              		.loc 1 1074 0 is_stmt 0 discriminator 1
 4891 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4892 007e 002B     		cmp	r3, #0
 4893 0080 0BD0     		beq	.L257
 4894              		.loc 1 1074 0 discriminator 2
 4895 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4896 0084 002B     		cmp	r3, #0
 4897 0086 08D1     		bne	.L257
1075:.\main.c      ****     {
1076:.\main.c      ****         setSpeed(speed,speed);
 4898              		.loc 1 1076 0 is_stmt 1
 4899 0088 2F4B     		ldr	r3, .L260+8
 4900 008a D3E90001 		ldrd	r0, [r3]
 4901 008e 2E4B     		ldr	r3, .L260+8
 4902 0090 D3E90023 		ldrd	r2, [r3]
 4903 0094 FFF7FEFF 		bl	setSpeed
 4904 0098 4DE0     		b	.L254
 4905              	.L257:
1077:.\main.c      ****     }
1078:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4906              		.loc 1 1078 0
 4907 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4908 009c 002B     		cmp	r3, #0
 4909 009e 0ED0     		beq	.L258
 4910              		.loc 1 1078 0 is_stmt 0 discriminator 1
 4911 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4912 00a2 002B     		cmp	r3, #0
 4913 00a4 0BD0     		beq	.L258
 4914              		.loc 1 1078 0 discriminator 2
 4915 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4916 00a8 002B     		cmp	r3, #0
 4917 00aa 08D1     		bne	.L258
1079:.\main.c      ****     {
1080:.\main.c      ****         setSpeed(speed ,speed);
 4918              		.loc 1 1080 0 is_stmt 1
 4919 00ac 264B     		ldr	r3, .L260+8
 4920 00ae D3E90001 		ldrd	r0, [r3]
 4921 00b2 254B     		ldr	r3, .L260+8
 4922 00b4 D3E90023 		ldrd	r2, [r3]
 4923 00b8 FFF7FEFF 		bl	setSpeed
 4924 00bc 3BE0     		b	.L254
 4925              	.L258:
1081:.\main.c      ****     }
1082:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4926              		.loc 1 1082 0
 4927 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4928 00c0 002B     		cmp	r3, #0
 4929 00c2 27D0     		beq	.L259
 4930              		.loc 1 1082 0 is_stmt 0 discriminator 1
 4931 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4932 00c6 002B     		cmp	r3, #0
 4933 00c8 24D1     		bne	.L259
 4934              		.loc 1 1082 0 discriminator 2
 4935 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4936 00cc 002B     		cmp	r3, #0
 4937 00ce 21D1     		bne	.L259
1083:.\main.c      ****     {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 108


1084:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4938              		.loc 1 1084 0 is_stmt 1
 4939 00d0 1D4B     		ldr	r3, .L260+8
 4940 00d2 D3E90023 		ldrd	r2, [r3]
 4941 00d6 1446     		mov	r4, r2
 4942 00d8 83F00045 		eor	r5, r3, #-2147483648
 4943 00dc 2046     		mov	r0, r4
 4944 00de 2946     		mov	r1, r5
 4945 00e0 17A3     		adr	r3, .L260
 4946 00e2 D3E90023 		ldrd	r2, [r3]
 4947 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4948 00ea 0246     		mov	r2, r0
 4949 00ec 0B46     		mov	r3, r1
 4950 00ee 1446     		mov	r4, r2
 4951 00f0 1D46     		mov	r5, r3
 4952 00f2 154B     		ldr	r3, .L260+8
 4953 00f4 D3E90023 		ldrd	r2, [r3]
 4954 00f8 1046     		mov	r0, r2
 4955 00fa 1946     		mov	r1, r3
 4956 00fc 10A3     		adr	r3, .L260
 4957 00fe D3E90023 		ldrd	r2, [r3]
 4958 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4959 0106 0246     		mov	r2, r0
 4960 0108 0B46     		mov	r3, r1
 4961 010a 2046     		mov	r0, r4
 4962 010c 2946     		mov	r1, r5
 4963 010e FFF7FEFF 		bl	setSpeed
 4964 0112 10E0     		b	.L254
 4965              	.L259:
1085:.\main.c      ****     }
1086:.\main.c      ****     else if (mid && !nr && !nl)
 4966              		.loc 1 1086 0
 4967 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4968 0116 002B     		cmp	r3, #0
 4969 0118 0DD0     		beq	.L254
 4970              		.loc 1 1086 0 is_stmt 0 discriminator 1
 4971 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4972 011c 002B     		cmp	r3, #0
 4973 011e 0AD1     		bne	.L254
 4974              		.loc 1 1086 0 discriminator 2
 4975 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4976 0122 002B     		cmp	r3, #0
 4977 0124 07D1     		bne	.L254
1087:.\main.c      ****     {
1088:.\main.c      ****         setSpeed(speed,speed);
 4978              		.loc 1 1088 0 is_stmt 1
 4979 0126 084B     		ldr	r3, .L260+8
 4980 0128 D3E90001 		ldrd	r0, [r3]
 4981 012c 064B     		ldr	r3, .L260+8
 4982 012e D3E90023 		ldrd	r2, [r3]
 4983 0132 FFF7FEFF 		bl	setSpeed
 4984              	.L254:
1089:.\main.c      ****     }
1090:.\main.c      **** }
 4985              		.loc 1 1090 0
 4986 0136 0837     		adds	r7, r7, #8
 4987              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 109


 4988 0138 BD46     		mov	sp, r7
 4989              		.cfi_def_cfa_register 13
 4990              		@ sp needed
 4991 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4992              	.L261:
 4993 013e 00BF     		.align	3
 4994              	.L260:
 4995 0140 9A999999 		.word	-1717986918
 4996 0144 9999F93F 		.word	1073322393
 4997 0148 00000000 		.word	speed
 4998              		.cfi_endproc
 4999              	.LFE98:
 5000              		.size	trackLineZ, .-trackLineZ
 5001 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 5002              		.align	2
 5003              		.global	trackLineU
 5004              		.thumb
 5005              		.thumb_func
 5006              		.type	trackLineU, %function
 5007              	trackLineU:
 5008              	.LFB99:
1091:.\main.c      **** 
1092:.\main.c      **** 
1093:.\main.c      **** void trackLineU()
1094:.\main.c      **** { 
 5009              		.loc 1 1094 0
 5010              		.cfi_startproc
 5011              		@ args = 0, pretend = 0, frame = 0
 5012              		@ frame_needed = 1, uses_anonymous_args = 0
 5013              		@ link register save eliminated.
 5014 0000 80B4     		push	{r7}
 5015              		.cfi_def_cfa_offset 4
 5016              		.cfi_offset 7, -4
 5017 0002 00AF     		add	r7, sp, #0
 5018              		.cfi_def_cfa_register 7
1095:.\main.c      **** //removed from final implementation
1096:.\main.c      **** }
 5019              		.loc 1 1096 0
 5020 0004 BD46     		mov	sp, r7
 5021              		.cfi_def_cfa_register 13
 5022              		@ sp needed
 5023 0006 5DF8047B 		ldr	r7, [sp], #4
 5024              		.cfi_restore 7
 5025              		.cfi_def_cfa_offset 0
 5026 000a 7047     		bx	lr
 5027              		.cfi_endproc
 5028              	.LFE99:
 5029              		.size	trackLineU, .-trackLineU
 5030              		.global	__aeabi_fadd
 5031              		.section	.rodata
 5032 0103 00       		.align	2
 5033              	.LC14:
 5034 0104 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 5034      65727920 
 5034      566F6C74 
 5034      6167653A 
 5034      2025646D 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 110


 5035              		.section	.text.print_ADC,"ax",%progbits
 5036              		.align	2
 5037              		.global	print_ADC
 5038              		.thumb
 5039              		.thumb_func
 5040              		.type	print_ADC, %function
 5041              	print_ADC:
 5042              	.LFB100:
1097:.\main.c      **** 
1098:.\main.c      **** void print_ADC()
1099:.\main.c      **** {
 5043              		.loc 1 1099 0
 5044              		.cfi_startproc
 5045              		@ args = 0, pretend = 0, frame = 24
 5046              		@ frame_needed = 1, uses_anonymous_args = 0
 5047 0000 80B5     		push	{r7, lr}
 5048              		.cfi_def_cfa_offset 8
 5049              		.cfi_offset 7, -8
 5050              		.cfi_offset 14, -4
 5051 0002 86B0     		sub	sp, sp, #24
 5052              		.cfi_def_cfa_offset 32
 5053 0004 00AF     		add	r7, sp, #0
 5054              		.cfi_def_cfa_register 7
1100:.\main.c      ****    //usbPutString("HII\n");
1101:.\main.c      ****     if(flag_receive_ADC == 1)
 5055              		.loc 1 1101 0
 5056 0006 274B     		ldr	r3, .L266
 5057 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5058 000a 012B     		cmp	r3, #1
 5059 000c 46D1     		bne	.L263
 5060              	.LBB12:
1102:.\main.c      ****     {
1103:.\main.c      ****         //usbPutString("AAA\r\n");
1104:.\main.c      ****         flag_receive_ADC = 0;
 5061              		.loc 1 1104 0
 5062 000e 254B     		ldr	r3, .L266
 5063 0010 0022     		movs	r2, #0
 5064 0012 1A70     		strb	r2, [r3]
1105:.\main.c      ****         
1106:.\main.c      ****        // int8 channel = ADC_
1107:.\main.c      ****         float scalingFactor = 0.972;
 5065              		.loc 1 1107 0
 5066 0014 244B     		ldr	r3, .L266+4
 5067 0016 7B61     		str	r3, [r7, #20]	@ float
1108:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 5068              		.loc 1 1108 0
 5069 0018 244B     		ldr	r3, .L266+8
 5070 001a 1B88     		ldrh	r3, [r3]
 5071 001c 1BB2     		sxth	r3, r3
 5072 001e 41F28832 		movw	r2, #5000
 5073 0022 02FB03F3 		mul	r3, r2, r3
 5074 0026 002B     		cmp	r3, #0
 5075 0028 01DA     		bge	.L265
 5076 002a 03F6FF73 		addw	r3, r3, #4095
 5077              	.L265:
 5078 002e 1B13     		asrs	r3, r3, #12
 5079 0030 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 111


 5080 0032 FFF7FEFF 		bl	__aeabi_i2f
 5081 0036 0346     		mov	r3, r0
 5082 0038 1846     		mov	r0, r3
 5083 003a 7969     		ldr	r1, [r7, #20]	@ float
 5084 003c FFF7FEFF 		bl	__aeabi_fmul
 5085 0040 0346     		mov	r3, r0
 5086 0042 1846     		mov	r0, r3
 5087 0044 1946     		mov	r1, r3
 5088 0046 FFF7FEFF 		bl	__aeabi_fadd
 5089 004a 0346     		mov	r3, r0
 5090 004c 1846     		mov	r0, r3
 5091 004e FFF7FEFF 		bl	__aeabi_f2iz
 5092 0052 0346     		mov	r3, r0
 5093 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1109:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 5094              		.loc 1 1109 0
 5095 0056 B7F91220 		ldrsh	r2, [r7, #18]
 5096 005a 154B     		ldr	r3, .L266+12
 5097 005c 1B88     		ldrh	r3, [r3]
 5098 005e 1BB2     		sxth	r3, r3
 5099 0060 1A44     		add	r2, r2, r3
 5100 0062 144B     		ldr	r3, .L266+16
 5101 0064 1B88     		ldrh	r3, [r3]
 5102 0066 1BB2     		sxth	r3, r3
 5103 0068 1344     		add	r3, r3, r2
 5104 006a 134A     		ldr	r2, .L266+20
 5105 006c 82FB0312 		smull	r1, r2, r2, r3
 5106 0070 DB17     		asrs	r3, r3, #31
 5107 0072 D31A     		subs	r3, r2, r3
 5108 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1110:.\main.c      ****         prevVoltage2 = prevVoltage;
 5109              		.loc 1 1110 0
 5110 0076 0E4B     		ldr	r3, .L266+12
 5111 0078 1A88     		ldrh	r2, [r3]
 5112 007a 0E4B     		ldr	r3, .L266+16
 5113 007c 1A80     		strh	r2, [r3]	@ movhi
1111:.\main.c      ****         prevVoltage = converted_val;
 5114              		.loc 1 1111 0
 5115 007e 0C4A     		ldr	r2, .L266+12
 5116 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5117 0082 1380     		strh	r3, [r2]	@ movhi
1112:.\main.c      ****         
1113:.\main.c      ****         char result_str[16];
1114:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 5118              		.loc 1 1114 0
 5119 0084 B7F91230 		ldrsh	r3, [r7, #18]
 5120 0088 3A46     		mov	r2, r7
 5121 008a 1046     		mov	r0, r2
 5122 008c 0B49     		ldr	r1, .L266+24
 5123 008e 1A46     		mov	r2, r3
 5124 0090 FFF7FEFF 		bl	sprintf
1115:.\main.c      ****         
1116:.\main.c      ****         usbPutString(result_str);
 5125              		.loc 1 1116 0
 5126 0094 3B46     		mov	r3, r7
 5127 0096 1846     		mov	r0, r3
 5128 0098 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 112


 5129              	.L263:
 5130              	.LBE12:
1117:.\main.c      ****     }
1118:.\main.c      **** }
 5131              		.loc 1 1118 0
 5132 009c 1837     		adds	r7, r7, #24
 5133              		.cfi_def_cfa_offset 8
 5134 009e BD46     		mov	sp, r7
 5135              		.cfi_def_cfa_register 13
 5136              		@ sp needed
 5137 00a0 80BD     		pop	{r7, pc}
 5138              	.L267:
 5139 00a2 00BF     		.align	2
 5140              	.L266:
 5141 00a4 00000000 		.word	flag_receive_ADC
 5142 00a8 FED4783F 		.word	1064883454
 5143 00ac 00000000 		.word	adc_result
 5144 00b0 00000000 		.word	prevVoltage
 5145 00b4 00000000 		.word	prevVoltage2
 5146 00b8 56555555 		.word	1431655766
 5147 00bc 04010000 		.word	.LC14
 5148              		.cfi_endproc
 5149              	.LFE100:
 5150              		.size	print_ADC, .-print_ADC
 5151              		.section	.rodata
 5152              		.align	2
 5153              	.LC15:
 5154 011c 52535349 		.ascii	"RSSI:\000"
 5154      3A00
 5155 0122 0000     		.align	2
 5156              	.LC16:
 5157 0124 25640D0A 		.ascii	"%d\015\012\000"
 5157      00
 5158 0129 000000   		.align	2
 5159              	.LC17:
 5160 012c 726F626F 		.ascii	"robot_x:\000"
 5160      745F783A 
 5160      00
 5161 0135 000000   		.align	2
 5162              	.LC18:
 5163 0138 726F626F 		.ascii	"robot_y:\000"
 5163      745F793A 
 5163      00
 5164 0141 000000   		.align	2
 5165              	.LC19:
 5166 0144 726F626F 		.ascii	"robot_dir:\000"
 5166      745F6469 
 5166      723A00
 5167 014f 00       		.section	.text.print_RF,"ax",%progbits
 5168              		.align	2
 5169              		.global	print_RF
 5170              		.thumb
 5171              		.thumb_func
 5172              		.type	print_RF, %function
 5173              	print_RF:
 5174              	.LFB101:
1119:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 113


1120:.\main.c      **** void print_RF()
1121:.\main.c      **** {
 5175              		.loc 1 1121 0
 5176              		.cfi_startproc
 5177              		@ args = 0, pretend = 0, frame = 16
 5178              		@ frame_needed = 1, uses_anonymous_args = 0
 5179 0000 80B5     		push	{r7, lr}
 5180              		.cfi_def_cfa_offset 8
 5181              		.cfi_offset 7, -8
 5182              		.cfi_offset 14, -4
 5183 0002 84B0     		sub	sp, sp, #16
 5184              		.cfi_def_cfa_offset 24
 5185 0004 00AF     		add	r7, sp, #0
 5186              		.cfi_def_cfa_register 7
1122:.\main.c      ****     if(flag_print_rf == 1)
 5187              		.loc 1 1122 0
 5188 0006 254B     		ldr	r3, .L270
 5189 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5190 000a 012B     		cmp	r3, #1
 5191 000c 42D1     		bne	.L268
 5192              	.LBB13:
1123:.\main.c      ****     {
1124:.\main.c      ****         char printString[16];
1125:.\main.c      ****         flag_print_rf = 0;
 5193              		.loc 1 1125 0
 5194 000e 234B     		ldr	r3, .L270
 5195 0010 0022     		movs	r2, #0
 5196 0012 1A70     		strb	r2, [r3]
1126:.\main.c      ****         usbPutString("RSSI:");
 5197              		.loc 1 1126 0
 5198 0014 2248     		ldr	r0, .L270+4
 5199 0016 FFF7FEFF 		bl	usbPutString
1127:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 5200              		.loc 1 1127 0
 5201 001a 224B     		ldr	r3, .L270+8
 5202 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5203 001e 5BB2     		sxtb	r3, r3
 5204 0020 3A46     		mov	r2, r7
 5205 0022 1046     		mov	r0, r2
 5206 0024 2049     		ldr	r1, .L270+12
 5207 0026 1A46     		mov	r2, r3
 5208 0028 FFF7FEFF 		bl	sprintf
1128:.\main.c      ****         usbPutString(printString);
 5209              		.loc 1 1128 0
 5210 002c 3B46     		mov	r3, r7
 5211 002e 1846     		mov	r0, r3
 5212 0030 FFF7FEFF 		bl	usbPutString
1129:.\main.c      ****         usbPutString("robot_x:");
 5213              		.loc 1 1129 0
 5214 0034 1D48     		ldr	r0, .L270+16
 5215 0036 FFF7FEFF 		bl	usbPutString
1130:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 5216              		.loc 1 1130 0
 5217 003a 1A4B     		ldr	r3, .L270+8
 5218 003c 5B88     		ldrh	r3, [r3, #2]
 5219 003e 1BB2     		sxth	r3, r3
 5220 0040 3A46     		mov	r2, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 114


 5221 0042 1046     		mov	r0, r2
 5222 0044 1849     		ldr	r1, .L270+12
 5223 0046 1A46     		mov	r2, r3
 5224 0048 FFF7FEFF 		bl	sprintf
1131:.\main.c      ****         usbPutString(printString);
 5225              		.loc 1 1131 0
 5226 004c 3B46     		mov	r3, r7
 5227 004e 1846     		mov	r0, r3
 5228 0050 FFF7FEFF 		bl	usbPutString
1132:.\main.c      ****         usbPutString("robot_y:");
 5229              		.loc 1 1132 0
 5230 0054 1648     		ldr	r0, .L270+20
 5231 0056 FFF7FEFF 		bl	usbPutString
1133:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 5232              		.loc 1 1133 0
 5233 005a 124B     		ldr	r3, .L270+8
 5234 005c 9B88     		ldrh	r3, [r3, #4]
 5235 005e 1BB2     		sxth	r3, r3
 5236 0060 3A46     		mov	r2, r7
 5237 0062 1046     		mov	r0, r2
 5238 0064 1049     		ldr	r1, .L270+12
 5239 0066 1A46     		mov	r2, r3
 5240 0068 FFF7FEFF 		bl	sprintf
1134:.\main.c      ****         usbPutString(printString);
 5241              		.loc 1 1134 0
 5242 006c 3B46     		mov	r3, r7
 5243 006e 1846     		mov	r0, r3
 5244 0070 FFF7FEFF 		bl	usbPutString
1135:.\main.c      ****         usbPutString("robot_dir:");
 5245              		.loc 1 1135 0
 5246 0074 0F48     		ldr	r0, .L270+24
 5247 0076 FFF7FEFF 		bl	usbPutString
1136:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 5248              		.loc 1 1136 0
 5249 007a 0A4B     		ldr	r3, .L270+8
 5250 007c DB88     		ldrh	r3, [r3, #6]
 5251 007e 1BB2     		sxth	r3, r3
 5252 0080 3A46     		mov	r2, r7
 5253 0082 1046     		mov	r0, r2
 5254 0084 0849     		ldr	r1, .L270+12
 5255 0086 1A46     		mov	r2, r3
 5256 0088 FFF7FEFF 		bl	sprintf
1137:.\main.c      ****         usbPutString(printString);
 5257              		.loc 1 1137 0
 5258 008c 3B46     		mov	r3, r7
 5259 008e 1846     		mov	r0, r3
 5260 0090 FFF7FEFF 		bl	usbPutString
 5261              	.L268:
 5262              	.LBE13:
1138:.\main.c      ****     }
1139:.\main.c      **** }
 5263              		.loc 1 1139 0
 5264 0094 1037     		adds	r7, r7, #16
 5265              		.cfi_def_cfa_offset 8
 5266 0096 BD46     		mov	sp, r7
 5267              		.cfi_def_cfa_register 13
 5268              		@ sp needed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 115


 5269 0098 80BD     		pop	{r7, pc}
 5270              	.L271:
 5271 009a 00BF     		.align	2
 5272              	.L270:
 5273 009c 00000000 		.word	flag_print_rf
 5274 00a0 1C010000 		.word	.LC15
 5275 00a4 00000000 		.word	system_state
 5276 00a8 24010000 		.word	.LC16
 5277 00ac 2C010000 		.word	.LC17
 5278 00b0 38010000 		.word	.LC18
 5279 00b4 44010000 		.word	.LC19
 5280              		.cfi_endproc
 5281              	.LFE101:
 5282              		.size	print_RF, .-print_RF
 5283              		.section	.text.readFrontSensors,"ax",%progbits
 5284              		.align	2
 5285              		.global	readFrontSensors
 5286              		.thumb
 5287              		.thumb_func
 5288              		.type	readFrontSensors, %function
 5289              	readFrontSensors:
 5290              	.LFB102:
1140:.\main.c      **** 
1141:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1142:.\main.c      **** {
 5291              		.loc 1 1142 0
 5292              		.cfi_startproc
 5293              		@ args = 0, pretend = 0, frame = 8
 5294              		@ frame_needed = 1, uses_anonymous_args = 0
 5295 0000 90B5     		push	{r4, r7, lr}
 5296              		.cfi_def_cfa_offset 12
 5297              		.cfi_offset 4, -12
 5298              		.cfi_offset 7, -8
 5299              		.cfi_offset 14, -4
 5300 0002 83B0     		sub	sp, sp, #12
 5301              		.cfi_def_cfa_offset 24
 5302 0004 00AF     		add	r7, sp, #0
 5303              		.cfi_def_cfa_register 7
 5304 0006 7860     		str	r0, [r7, #4]
1143:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 5305              		.loc 1 1143 0
 5306 0008 FFF7FEFF 		bl	FLSens_out_Read
 5307 000c 0346     		mov	r3, r0
 5308 000e 1A46     		mov	r2, r3
 5309 0010 7B68     		ldr	r3, [r7, #4]
 5310 0012 1A70     		strb	r2, [r3]
1144:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 5311              		.loc 1 1144 0
 5312 0014 7B68     		ldr	r3, [r7, #4]
 5313 0016 5C1C     		adds	r4, r3, #1
 5314 0018 FFF7FEFF 		bl	NLSens_out_Read
 5315 001c 0346     		mov	r3, r0
 5316 001e 2370     		strb	r3, [r4]
1145:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 5317              		.loc 1 1145 0
 5318 0020 7B68     		ldr	r3, [r7, #4]
 5319 0022 9C1C     		adds	r4, r3, #2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 116


 5320 0024 FFF7FEFF 		bl	MSens_out_Read
 5321 0028 0346     		mov	r3, r0
 5322 002a 2370     		strb	r3, [r4]
1146:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 5323              		.loc 1 1146 0
 5324 002c 7B68     		ldr	r3, [r7, #4]
 5325 002e DC1C     		adds	r4, r3, #3
 5326 0030 FFF7FEFF 		bl	NRSens_out_Read
 5327 0034 0346     		mov	r3, r0
 5328 0036 2370     		strb	r3, [r4]
1147:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5329              		.loc 1 1147 0
 5330 0038 7B68     		ldr	r3, [r7, #4]
 5331 003a 1C1D     		adds	r4, r3, #4
 5332 003c FFF7FEFF 		bl	FRSens_out_Read
 5333 0040 0346     		mov	r3, r0
 5334 0042 2370     		strb	r3, [r4]
1148:.\main.c      **** }
 5335              		.loc 1 1148 0
 5336 0044 0C37     		adds	r7, r7, #12
 5337              		.cfi_def_cfa_offset 12
 5338 0046 BD46     		mov	sp, r7
 5339              		.cfi_def_cfa_register 13
 5340              		@ sp needed
 5341 0048 90BD     		pop	{r4, r7, pc}
 5342              		.cfi_endproc
 5343              	.LFE102:
 5344              		.size	readFrontSensors, .-readFrontSensors
 5345 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5346              		.align	2
 5347              		.global	usbPutString
 5348              		.thumb
 5349              		.thumb_func
 5350              		.type	usbPutString, %function
 5351              	usbPutString:
 5352              	.LFB103:
1149:.\main.c      **** 
1150:.\main.c      **** 
1151:.\main.c      **** //* ========================================
1152:.\main.c      **** void usbPutString(char *s)
1153:.\main.c      **** {
 5353              		.loc 1 1153 0
 5354              		.cfi_startproc
 5355              		@ args = 0, pretend = 0, frame = 16
 5356              		@ frame_needed = 1, uses_anonymous_args = 0
 5357 0000 80B5     		push	{r7, lr}
 5358              		.cfi_def_cfa_offset 8
 5359              		.cfi_offset 7, -8
 5360              		.cfi_offset 14, -4
 5361 0002 84B0     		sub	sp, sp, #16
 5362              		.cfi_def_cfa_offset 24
 5363 0004 00AF     		add	r7, sp, #0
 5364              		.cfi_def_cfa_register 7
 5365 0006 7860     		str	r0, [r7, #4]
1154:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1155:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1156:.\main.c      **** //  length to 62 char (63rd char is a '!')
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 117


1157:.\main.c      ****     if (USE_USB && portOpen)
 5366              		.loc 1 1157 0
 5367 0008 154B     		ldr	r3, .L277
 5368 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5369 000c 002B     		cmp	r3, #0
 5370 000e 23D0     		beq	.L273
 5371              	.LBB14:
1158:.\main.c      ****     {
1159:.\main.c      ****             uint32 cnt = 0;
 5372              		.loc 1 1159 0
 5373 0010 0023     		movs	r3, #0
 5374 0012 FB60     		str	r3, [r7, #12]
1160:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5375              		.loc 1 1160 0
 5376 0014 0AE0     		b	.L275
 5377              	.L276:
1161:.\main.c      ****             {
1162:.\main.c      ****                 cnt++;
 5378              		.loc 1 1162 0
 5379 0016 FB68     		ldr	r3, [r7, #12]
 5380 0018 0133     		adds	r3, r3, #1
 5381 001a FB60     		str	r3, [r7, #12]
1163:.\main.c      ****                 if(cnt == 3000000){
 5382              		.loc 1 1163 0
 5383 001c FB68     		ldr	r3, [r7, #12]
 5384 001e 114A     		ldr	r2, .L277+4
 5385 0020 9342     		cmp	r3, r2
 5386 0022 03D1     		bne	.L275
1164:.\main.c      ****                     portOpen = 0;
 5387              		.loc 1 1164 0
 5388 0024 0E4B     		ldr	r3, .L277
 5389 0026 0022     		movs	r2, #0
 5390 0028 1A70     		strb	r2, [r3]
1165:.\main.c      ****                     return;
 5391              		.loc 1 1165 0
 5392 002a 15E0     		b	.L273
 5393              	.L275:
1160:.\main.c      ****             {
 5394              		.loc 1 1160 0
 5395 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5396 0030 0346     		mov	r3, r0
 5397 0032 002B     		cmp	r3, #0
 5398 0034 EFD0     		beq	.L276
1166:.\main.c      ****                 }
1167:.\main.c      ****             }
1168:.\main.c      ****             s[63]='\0';
 5399              		.loc 1 1168 0
 5400 0036 7B68     		ldr	r3, [r7, #4]
 5401 0038 3F33     		adds	r3, r3, #63
 5402 003a 0022     		movs	r2, #0
 5403 003c 1A70     		strb	r2, [r3]
1169:.\main.c      ****             s[62]='!';
 5404              		.loc 1 1169 0
 5405 003e 7B68     		ldr	r3, [r7, #4]
 5406 0040 3E33     		adds	r3, r3, #62
 5407 0042 2122     		movs	r2, #33
 5408 0044 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 118


1170:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5409              		.loc 1 1170 0
 5410 0046 7868     		ldr	r0, [r7, #4]
 5411 0048 FFF7FEFF 		bl	strlen
 5412 004c 0346     		mov	r3, r0
 5413 004e 9BB2     		uxth	r3, r3
 5414 0050 7868     		ldr	r0, [r7, #4]
 5415 0052 1946     		mov	r1, r3
 5416 0054 FFF7FEFF 		bl	USBUART_PutData
 5417              	.L273:
 5418              	.LBE14:
1171:.\main.c      ****     }
1172:.\main.c      **** }
 5419              		.loc 1 1172 0
 5420 0058 1037     		adds	r7, r7, #16
 5421              		.cfi_def_cfa_offset 8
 5422 005a BD46     		mov	sp, r7
 5423              		.cfi_def_cfa_register 13
 5424              		@ sp needed
 5425 005c 80BD     		pop	{r7, pc}
 5426              	.L278:
 5427 005e 00BF     		.align	2
 5428              	.L277:
 5429 0060 00000000 		.word	portOpen
 5430 0064 C0C62D00 		.word	3000000
 5431              		.cfi_endproc
 5432              	.LFE103:
 5433              		.size	usbPutString, .-usbPutString
 5434              		.section	.text.usbPutChar,"ax",%progbits
 5435              		.align	2
 5436              		.global	usbPutChar
 5437              		.thumb
 5438              		.thumb_func
 5439              		.type	usbPutChar, %function
 5440              	usbPutChar:
 5441              	.LFB104:
1173:.\main.c      **** //* ========================================
1174:.\main.c      **** void usbPutChar(char c)
1175:.\main.c      **** {
 5442              		.loc 1 1175 0
 5443              		.cfi_startproc
 5444              		@ args = 0, pretend = 0, frame = 16
 5445              		@ frame_needed = 1, uses_anonymous_args = 0
 5446 0000 80B5     		push	{r7, lr}
 5447              		.cfi_def_cfa_offset 8
 5448              		.cfi_offset 7, -8
 5449              		.cfi_offset 14, -4
 5450 0002 84B0     		sub	sp, sp, #16
 5451              		.cfi_def_cfa_offset 24
 5452 0004 00AF     		add	r7, sp, #0
 5453              		.cfi_def_cfa_register 7
 5454 0006 0346     		mov	r3, r0
 5455 0008 FB71     		strb	r3, [r7, #7]
1176:.\main.c      ****     if (USE_USB && portOpen)    
 5456              		.loc 1 1176 0
 5457 000a 0F4B     		ldr	r3, .L283
 5458 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 119


 5459 000e 002B     		cmp	r3, #0
 5460 0010 16D0     		beq	.L279
 5461              	.LBB15:
1177:.\main.c      ****     {    
1178:.\main.c      ****         uint32 cnt = 0;
 5462              		.loc 1 1178 0
 5463 0012 0023     		movs	r3, #0
 5464 0014 FB60     		str	r3, [r7, #12]
1179:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5465              		.loc 1 1179 0
 5466 0016 0AE0     		b	.L281
 5467              	.L282:
1180:.\main.c      ****             cnt++;
 5468              		.loc 1 1180 0
 5469 0018 FB68     		ldr	r3, [r7, #12]
 5470 001a 0133     		adds	r3, r3, #1
 5471 001c FB60     		str	r3, [r7, #12]
1181:.\main.c      ****             if(cnt == 3000000){
 5472              		.loc 1 1181 0
 5473 001e FB68     		ldr	r3, [r7, #12]
 5474 0020 0A4A     		ldr	r2, .L283+4
 5475 0022 9342     		cmp	r3, r2
 5476 0024 03D1     		bne	.L281
1182:.\main.c      ****                 portOpen = 0;
 5477              		.loc 1 1182 0
 5478 0026 084B     		ldr	r3, .L283
 5479 0028 0022     		movs	r2, #0
 5480 002a 1A70     		strb	r2, [r3]
1183:.\main.c      ****                 return;
 5481              		.loc 1 1183 0
 5482 002c 08E0     		b	.L279
 5483              	.L281:
1179:.\main.c      ****             cnt++;
 5484              		.loc 1 1179 0
 5485 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5486 0032 0346     		mov	r3, r0
 5487 0034 002B     		cmp	r3, #0
 5488 0036 EFD0     		beq	.L282
1184:.\main.c      ****             }
1185:.\main.c      ****         }
1186:.\main.c      ****         USBUART_PutChar(c);
 5489              		.loc 1 1186 0
 5490 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5491 003a 1846     		mov	r0, r3
 5492 003c FFF7FEFF 		bl	USBUART_PutChar
 5493              	.L279:
 5494              	.LBE15:
1187:.\main.c      ****     }    
1188:.\main.c      **** }
 5495              		.loc 1 1188 0
 5496 0040 1037     		adds	r7, r7, #16
 5497              		.cfi_def_cfa_offset 8
 5498 0042 BD46     		mov	sp, r7
 5499              		.cfi_def_cfa_register 13
 5500              		@ sp needed
 5501 0044 80BD     		pop	{r7, pc}
 5502              	.L284:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 120


 5503 0046 00BF     		.align	2
 5504              	.L283:
 5505 0048 00000000 		.word	portOpen
 5506 004c C0C62D00 		.word	3000000
 5507              		.cfi_endproc
 5508              	.LFE104:
 5509              		.size	usbPutChar, .-usbPutChar
 5510              		.section	.text.uart_set_PWM,"ax",%progbits
 5511              		.align	2
 5512              		.global	uart_set_PWM
 5513              		.thumb
 5514              		.thumb_func
 5515              		.type	uart_set_PWM, %function
 5516              	uart_set_PWM:
 5517              	.LFB105:
1189:.\main.c      **** //* ========================================
1190:.\main.c      **** 
1191:.\main.c      **** void uart_set_PWM()
1192:.\main.c      **** {
 5518              		.loc 1 1192 0
 5519              		.cfi_startproc
 5520              		@ args = 0, pretend = 0, frame = 0
 5521              		@ frame_needed = 1, uses_anonymous_args = 0
 5522              		@ link register save eliminated.
 5523 0000 80B4     		push	{r7}
 5524              		.cfi_def_cfa_offset 4
 5525              		.cfi_offset 7, -4
 5526 0002 00AF     		add	r7, sp, #0
 5527              		.cfi_def_cfa_register 7
1193:.\main.c      ****     //removed from final implementation
1194:.\main.c      **** }
 5528              		.loc 1 1194 0
 5529 0004 BD46     		mov	sp, r7
 5530              		.cfi_def_cfa_register 13
 5531              		@ sp needed
 5532 0006 5DF8047B 		ldr	r7, [sp], #4
 5533              		.cfi_restore 7
 5534              		.cfi_def_cfa_offset 0
 5535 000a 7047     		bx	lr
 5536              		.cfi_endproc
 5537              	.LFE105:
 5538              		.size	uart_set_PWM, .-uart_set_PWM
 5539              		.text
 5540              	.Letext0:
 5541              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5542              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5543              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5544              		.file 5 ".\\vars.h"
 5545              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5546              		.file 7 ".\\pathfinder.h"
 5547              		.section	.debug_info,"",%progbits
 5548              	.Ldebug_info0:
 5549 0000 A40E0000 		.4byte	0xea4
 5550 0004 0400     		.2byte	0x4
 5551 0006 00000000 		.4byte	.Ldebug_abbrev0
 5552 000a 04       		.byte	0x4
 5553 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 121


 5554 000c 0D050000 		.4byte	.LASF199
 5555 0010 01       		.byte	0x1
 5556 0011 3E090000 		.4byte	.LASF200
 5557 0015 76090000 		.4byte	.LASF201
 5558 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5559 001d 00000000 		.4byte	0
 5560 0021 00000000 		.4byte	.Ldebug_line0
 5561 0025 02       		.uleb128 0x2
 5562 0026 01       		.byte	0x1
 5563 0027 06       		.byte	0x6
 5564 0028 3C010000 		.4byte	.LASF0
 5565 002c 02       		.uleb128 0x2
 5566 002d 01       		.byte	0x1
 5567 002e 08       		.byte	0x8
 5568 002f 75060000 		.4byte	.LASF1
 5569 0033 02       		.uleb128 0x2
 5570 0034 02       		.byte	0x2
 5571 0035 05       		.byte	0x5
 5572 0036 AF060000 		.4byte	.LASF2
 5573 003a 02       		.uleb128 0x2
 5574 003b 02       		.byte	0x2
 5575 003c 07       		.byte	0x7
 5576 003d 92030000 		.4byte	.LASF3
 5577 0041 03       		.uleb128 0x3
 5578 0042 18040000 		.4byte	.LASF5
 5579 0046 02       		.byte	0x2
 5580 0047 3F       		.byte	0x3f
 5581 0048 4C000000 		.4byte	0x4c
 5582 004c 02       		.uleb128 0x2
 5583 004d 04       		.byte	0x4
 5584 004e 05       		.byte	0x5
 5585 004f D6010000 		.4byte	.LASF4
 5586 0053 03       		.uleb128 0x3
 5587 0054 94070000 		.4byte	.LASF6
 5588 0058 02       		.byte	0x2
 5589 0059 41       		.byte	0x41
 5590 005a 5E000000 		.4byte	0x5e
 5591 005e 02       		.uleb128 0x2
 5592 005f 04       		.byte	0x4
 5593 0060 07       		.byte	0x7
 5594 0061 52030000 		.4byte	.LASF7
 5595 0065 02       		.uleb128 0x2
 5596 0066 08       		.byte	0x8
 5597 0067 05       		.byte	0x5
 5598 0068 2E010000 		.4byte	.LASF8
 5599 006c 02       		.uleb128 0x2
 5600 006d 08       		.byte	0x8
 5601 006e 07       		.byte	0x7
 5602 006f 99000000 		.4byte	.LASF9
 5603 0073 04       		.uleb128 0x4
 5604 0074 04       		.byte	0x4
 5605 0075 05       		.byte	0x5
 5606 0076 696E7400 		.ascii	"int\000"
 5607 007a 02       		.uleb128 0x2
 5608 007b 04       		.byte	0x4
 5609 007c 07       		.byte	0x7
 5610 007d FE020000 		.4byte	.LASF10
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 122


 5611 0081 02       		.uleb128 0x2
 5612 0082 04       		.byte	0x4
 5613 0083 07       		.byte	0x7
 5614 0084 8B040000 		.4byte	.LASF11
 5615 0088 05       		.uleb128 0x5
 5616 0089 04       		.byte	0x4
 5617 008a 8E000000 		.4byte	0x8e
 5618 008e 02       		.uleb128 0x2
 5619 008f 01       		.byte	0x1
 5620 0090 08       		.byte	0x8
 5621 0091 54070000 		.4byte	.LASF12
 5622 0095 03       		.uleb128 0x3
 5623 0096 6D060000 		.4byte	.LASF13
 5624 009a 03       		.byte	0x3
 5625 009b 2C       		.byte	0x2c
 5626 009c 41000000 		.4byte	0x41
 5627 00a0 03       		.uleb128 0x3
 5628 00a1 60080000 		.4byte	.LASF14
 5629 00a5 03       		.byte	0x3
 5630 00a6 2D       		.byte	0x2d
 5631 00a7 53000000 		.4byte	0x53
 5632 00ab 06       		.uleb128 0x6
 5633 00ac F1010000 		.4byte	.LASF15
 5634 00b0 04       		.byte	0x4
 5635 00b1 9201     		.2byte	0x192
 5636 00b3 2C000000 		.4byte	0x2c
 5637 00b7 06       		.uleb128 0x6
 5638 00b8 83060000 		.4byte	.LASF16
 5639 00bc 04       		.byte	0x4
 5640 00bd 9301     		.2byte	0x193
 5641 00bf 3A000000 		.4byte	0x3a
 5642 00c3 06       		.uleb128 0x6
 5643 00c4 3D020000 		.4byte	.LASF17
 5644 00c8 04       		.byte	0x4
 5645 00c9 9401     		.2byte	0x194
 5646 00cb 5E000000 		.4byte	0x5e
 5647 00cf 06       		.uleb128 0x6
 5648 00d0 AE030000 		.4byte	.LASF18
 5649 00d4 04       		.byte	0x4
 5650 00d5 9501     		.2byte	0x195
 5651 00d7 25000000 		.4byte	0x25
 5652 00db 06       		.uleb128 0x6
 5653 00dc FD080000 		.4byte	.LASF19
 5654 00e0 04       		.byte	0x4
 5655 00e1 9601     		.2byte	0x196
 5656 00e3 33000000 		.4byte	0x33
 5657 00e7 02       		.uleb128 0x2
 5658 00e8 04       		.byte	0x4
 5659 00e9 04       		.byte	0x4
 5660 00ea E3050000 		.4byte	.LASF20
 5661 00ee 02       		.uleb128 0x2
 5662 00ef 08       		.byte	0x8
 5663 00f0 04       		.byte	0x4
 5664 00f1 10020000 		.4byte	.LASF21
 5665 00f5 07       		.uleb128 0x7
 5666 00f6 A0000000 		.4byte	0xa0
 5667 00fa 05010000 		.4byte	0x105
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 123


 5668 00fe 08       		.uleb128 0x8
 5669 00ff 81000000 		.4byte	0x81
 5670 0103 01       		.byte	0x1
 5671 0104 00       		.byte	0
 5672 0105 02       		.uleb128 0x2
 5673 0106 08       		.byte	0x8
 5674 0107 04       		.byte	0x4
 5675 0108 36070000 		.4byte	.LASF22
 5676 010c 09       		.uleb128 0x9
 5677 010d D0010000 		.4byte	.LASF31
 5678 0111 01       		.byte	0x1
 5679 0112 05       		.byte	0x5
 5680 0113 61       		.byte	0x61
 5681 0114 49010000 		.4byte	0x149
 5682 0118 0A       		.uleb128 0xa
 5683 0119 B3030000 		.4byte	.LASF23
 5684 011d 00       		.sleb128 0
 5685 011e 0A       		.uleb128 0xa
 5686 011f D6040000 		.4byte	.LASF24
 5687 0123 01       		.sleb128 1
 5688 0124 0A       		.uleb128 0xa
 5689 0125 E2020000 		.4byte	.LASF25
 5690 0129 02       		.sleb128 2
 5691 012a 0A       		.uleb128 0xa
 5692 012b 21070000 		.4byte	.LASF26
 5693 012f 03       		.sleb128 3
 5694 0130 0A       		.uleb128 0xa
 5695 0131 D1030000 		.4byte	.LASF27
 5696 0135 04       		.sleb128 4
 5697 0136 0A       		.uleb128 0xa
 5698 0137 E9050000 		.4byte	.LASF28
 5699 013b 05       		.sleb128 5
 5700 013c 0A       		.uleb128 0xa
 5701 013d 53060000 		.4byte	.LASF29
 5702 0141 06       		.sleb128 6
 5703 0142 0A       		.uleb128 0xa
 5704 0143 DF010000 		.4byte	.LASF30
 5705 0147 07       		.sleb128 7
 5706 0148 00       		.byte	0
 5707 0149 09       		.uleb128 0x9
 5708 014a 59070000 		.4byte	.LASF32
 5709 014e 01       		.byte	0x1
 5710 014f 05       		.byte	0x5
 5711 0150 62       		.byte	0x62
 5712 0151 86010000 		.4byte	0x186
 5713 0155 0A       		.uleb128 0xa
 5714 0156 B9060000 		.4byte	.LASF33
 5715 015a 00       		.sleb128 0
 5716 015b 0A       		.uleb128 0xa
 5717 015c 0C040000 		.4byte	.LASF34
 5718 0160 01       		.sleb128 1
 5719 0161 0A       		.uleb128 0xa
 5720 0162 08010000 		.4byte	.LASF35
 5721 0166 02       		.sleb128 2
 5722 0167 0A       		.uleb128 0xa
 5723 0168 22040000 		.4byte	.LASF36
 5724 016c 03       		.sleb128 3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 124


 5725 016d 0A       		.uleb128 0xa
 5726 016e 1F000000 		.4byte	.LASF37
 5727 0172 04       		.sleb128 4
 5728 0173 0A       		.uleb128 0xa
 5729 0174 8A060000 		.4byte	.LASF38
 5730 0178 05       		.sleb128 5
 5731 0179 0A       		.uleb128 0xa
 5732 017a CD020000 		.4byte	.LASF39
 5733 017e 06       		.sleb128 6
 5734 017f 0A       		.uleb128 0xa
 5735 0180 10010000 		.4byte	.LASF40
 5736 0184 07       		.sleb128 7
 5737 0185 00       		.byte	0
 5738 0186 0B       		.uleb128 0xb
 5739 0187 1C030000 		.4byte	.LASF202
 5740 018b 20       		.byte	0x20
 5741 018c 05       		.byte	0x5
 5742 018d 68       		.byte	0x68
 5743 018e 5F020000 		.4byte	0x25f
 5744 0192 0C       		.uleb128 0xc
 5745 0193 7D040000 		.4byte	.LASF41
 5746 0197 05       		.byte	0x5
 5747 0198 69       		.byte	0x69
 5748 0199 CF000000 		.4byte	0xcf
 5749 019d 00       		.byte	0
 5750 019e 0C       		.uleb128 0xc
 5751 019f 6B070000 		.4byte	.LASF42
 5752 01a3 05       		.byte	0x5
 5753 01a4 6A       		.byte	0x6a
 5754 01a5 AB000000 		.4byte	0xab
 5755 01a9 01       		.byte	0x1
 5756 01aa 0C       		.uleb128 0xc
 5757 01ab D3070000 		.4byte	.LASF43
 5758 01af 05       		.byte	0x5
 5759 01b0 6B       		.byte	0x6b
 5760 01b1 DB000000 		.4byte	0xdb
 5761 01b5 02       		.byte	0x2
 5762 01b6 0C       		.uleb128 0xc
 5763 01b7 F2080000 		.4byte	.LASF44
 5764 01bb 05       		.byte	0x5
 5765 01bc 6C       		.byte	0x6c
 5766 01bd DB000000 		.4byte	0xdb
 5767 01c1 04       		.byte	0x4
 5768 01c2 0C       		.uleb128 0xc
 5769 01c3 53010000 		.4byte	.LASF45
 5770 01c7 05       		.byte	0x5
 5771 01c8 6D       		.byte	0x6d
 5772 01c9 DB000000 		.4byte	0xdb
 5773 01cd 06       		.byte	0x6
 5774 01ce 0C       		.uleb128 0xc
 5775 01cf D6000000 		.4byte	.LASF46
 5776 01d3 05       		.byte	0x5
 5777 01d4 6E       		.byte	0x6e
 5778 01d5 DB000000 		.4byte	0xdb
 5779 01d9 08       		.byte	0x8
 5780 01da 0C       		.uleb128 0xc
 5781 01db BC070000 		.4byte	.LASF47
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 125


 5782 01df 05       		.byte	0x5
 5783 01e0 6F       		.byte	0x6f
 5784 01e1 DB000000 		.4byte	0xdb
 5785 01e5 0A       		.byte	0xa
 5786 01e6 0C       		.uleb128 0xc
 5787 01e7 6D090000 		.4byte	.LASF48
 5788 01eb 05       		.byte	0x5
 5789 01ec 70       		.byte	0x70
 5790 01ed DB000000 		.4byte	0xdb
 5791 01f1 0C       		.byte	0xc
 5792 01f2 0C       		.uleb128 0xc
 5793 01f3 7B000000 		.4byte	.LASF49
 5794 01f7 05       		.byte	0x5
 5795 01f8 71       		.byte	0x71
 5796 01f9 DB000000 		.4byte	0xdb
 5797 01fd 0E       		.byte	0xe
 5798 01fe 0C       		.uleb128 0xc
 5799 01ff 14080000 		.4byte	.LASF50
 5800 0203 05       		.byte	0x5
 5801 0204 72       		.byte	0x72
 5802 0205 DB000000 		.4byte	0xdb
 5803 0209 10       		.byte	0x10
 5804 020a 0C       		.uleb128 0xc
 5805 020b AF040000 		.4byte	.LASF51
 5806 020f 05       		.byte	0x5
 5807 0210 73       		.byte	0x73
 5808 0211 DB000000 		.4byte	0xdb
 5809 0215 12       		.byte	0x12
 5810 0216 0C       		.uleb128 0xc
 5811 0217 82040000 		.4byte	.LASF52
 5812 021b 05       		.byte	0x5
 5813 021c 74       		.byte	0x74
 5814 021d DB000000 		.4byte	0xdb
 5815 0221 14       		.byte	0x14
 5816 0222 0C       		.uleb128 0xc
 5817 0223 B7040000 		.4byte	.LASF53
 5818 0227 05       		.byte	0x5
 5819 0228 75       		.byte	0x75
 5820 0229 DB000000 		.4byte	0xdb
 5821 022d 16       		.byte	0x16
 5822 022e 0C       		.uleb128 0xc
 5823 022f 9D060000 		.4byte	.LASF54
 5824 0233 05       		.byte	0x5
 5825 0234 76       		.byte	0x76
 5826 0235 DB000000 		.4byte	0xdb
 5827 0239 18       		.byte	0x18
 5828 023a 0C       		.uleb128 0xc
 5829 023b E6040000 		.4byte	.LASF55
 5830 023f 05       		.byte	0x5
 5831 0240 77       		.byte	0x77
 5832 0241 DB000000 		.4byte	0xdb
 5833 0245 1A       		.byte	0x1a
 5834 0246 0C       		.uleb128 0xc
 5835 0247 0B000000 		.4byte	.LASF56
 5836 024b 05       		.byte	0x5
 5837 024c 78       		.byte	0x78
 5838 024d DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 126


 5839 0251 1C       		.byte	0x1c
 5840 0252 0C       		.uleb128 0xc
 5841 0253 7A020000 		.4byte	.LASF57
 5842 0257 05       		.byte	0x5
 5843 0258 79       		.byte	0x79
 5844 0259 DB000000 		.4byte	0xdb
 5845 025d 1E       		.byte	0x1e
 5846 025e 00       		.byte	0
 5847 025f 0D       		.uleb128 0xd
 5848 0260 91080000 		.4byte	.LASF58
 5849 0264 01       		.byte	0x1
 5850 0265 84       		.byte	0x84
 5851 0266 00000000 		.4byte	.LFB63
 5852 026a 0C000000 		.4byte	.LFE63-.LFB63
 5853 026e 01       		.uleb128 0x1
 5854 026f 9C       		.byte	0x9c
 5855 0270 0E       		.uleb128 0xe
 5856 0271 26020000 		.4byte	.LASF59
 5857 0275 01       		.byte	0x1
 5858 0276 8A       		.byte	0x8a
 5859 0277 00000000 		.4byte	.LFB64
 5860 027b 2C000000 		.4byte	.LFE64-.LFB64
 5861 027f 01       		.uleb128 0x1
 5862 0280 9C       		.byte	0x9c
 5863 0281 0E       		.uleb128 0xe
 5864 0282 F4020000 		.4byte	.LASF60
 5865 0286 01       		.byte	0x1
 5866 0287 93       		.byte	0x93
 5867 0288 00000000 		.4byte	.LFB65
 5868 028c AC010000 		.4byte	.LFE65-.LFB65
 5869 0290 01       		.uleb128 0x1
 5870 0291 9C       		.byte	0x9c
 5871 0292 0F       		.uleb128 0xf
 5872 0293 56040000 		.4byte	.LASF66
 5873 0297 01       		.byte	0x1
 5874 0298 B8       		.byte	0xb8
 5875 0299 00000000 		.4byte	.LFB66
 5876 029d 34010000 		.4byte	.LFE66-.LFB66
 5877 02a1 01       		.uleb128 0x1
 5878 02a2 9C       		.byte	0x9c
 5879 02a3 DC020000 		.4byte	0x2dc
 5880 02a7 10       		.uleb128 0x10
 5881 02a8 0E000000 		.4byte	.LBB2
 5882 02ac 64000000 		.4byte	.LBE2-.LBB2
 5883 02b0 C3020000 		.4byte	0x2c3
 5884 02b4 11       		.uleb128 0x11
 5885 02b5 88000000 		.4byte	.LASF61
 5886 02b9 01       		.byte	0x1
 5887 02ba BC       		.byte	0xbc
 5888 02bb B7000000 		.4byte	0xb7
 5889 02bf 02       		.uleb128 0x2
 5890 02c0 91       		.byte	0x91
 5891 02c1 76       		.sleb128 -10
 5892 02c2 00       		.byte	0
 5893 02c3 12       		.uleb128 0x12
 5894 02c4 7E000000 		.4byte	.LBB3
 5895 02c8 64000000 		.4byte	.LBE3-.LBB3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 127


 5896 02cc 11       		.uleb128 0x11
 5897 02cd 88000000 		.4byte	.LASF61
 5898 02d1 01       		.byte	0x1
 5899 02d2 C8       		.byte	0xc8
 5900 02d3 B7000000 		.4byte	0xb7
 5901 02d7 02       		.uleb128 0x2
 5902 02d8 91       		.byte	0x91
 5903 02d9 74       		.sleb128 -12
 5904 02da 00       		.byte	0
 5905 02db 00       		.byte	0
 5906 02dc 0D       		.uleb128 0xd
 5907 02dd FF030000 		.4byte	.LASF62
 5908 02e1 01       		.byte	0x1
 5909 02e2 DE       		.byte	0xde
 5910 02e3 00000000 		.4byte	.LFB67
 5911 02e7 20000000 		.4byte	.LFE67-.LFB67
 5912 02eb 01       		.uleb128 0x1
 5913 02ec 9C       		.byte	0x9c
 5914 02ed 0E       		.uleb128 0xe
 5915 02ee 29000000 		.4byte	.LASF63
 5916 02f2 01       		.byte	0x1
 5917 02f3 E5       		.byte	0xe5
 5918 02f4 00000000 		.4byte	.LFB68
 5919 02f8 28000000 		.4byte	.LFE68-.LFB68
 5920 02fc 01       		.uleb128 0x1
 5921 02fd 9C       		.byte	0x9c
 5922 02fe 0E       		.uleb128 0xe
 5923 02ff EF060000 		.4byte	.LASF64
 5924 0303 01       		.byte	0x1
 5925 0304 EE       		.byte	0xee
 5926 0305 00000000 		.4byte	.LFB69
 5927 0309 0A000000 		.4byte	.LFE69-.LFB69
 5928 030d 01       		.uleb128 0x1
 5929 030e 9C       		.byte	0x9c
 5930 030f 0E       		.uleb128 0xe
 5931 0310 55000000 		.4byte	.LASF65
 5932 0314 01       		.byte	0x1
 5933 0315 F3       		.byte	0xf3
 5934 0316 00000000 		.4byte	.LFB70
 5935 031a 28000000 		.4byte	.LFE70-.LFB70
 5936 031e 01       		.uleb128 0x1
 5937 031f 9C       		.byte	0x9c
 5938 0320 13       		.uleb128 0x13
 5939 0321 63090000 		.4byte	.LASF67
 5940 0325 01       		.byte	0x1
 5941 0326 FE       		.byte	0xfe
 5942 0327 73000000 		.4byte	0x73
 5943 032b 00000000 		.4byte	.LFB71
 5944 032f A4070000 		.4byte	.LFE71-.LFB71
 5945 0333 01       		.uleb128 0x1
 5946 0334 9C       		.byte	0x9c
 5947 0335 28040000 		.4byte	0x428
 5948 0339 14       		.uleb128 0x14
 5949 033a 7B070000 		.4byte	.LASF68
 5950 033e 01       		.byte	0x1
 5951 033f 3701     		.2byte	0x137
 5952 0341 B7000000 		.4byte	0xb7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 128


 5953 0345 02       		.uleb128 0x2
 5954 0346 91       		.byte	0x91
 5955 0347 76       		.sleb128 -10
 5956 0348 12       		.uleb128 0x12
 5957 0349 38010000 		.4byte	.LBB4
 5958 034d D8050000 		.4byte	.LBE4-.LBB4
 5959 0351 14       		.uleb128 0x14
 5960 0352 35090000 		.4byte	.LASF69
 5961 0356 01       		.byte	0x1
 5962 0357 6E01     		.2byte	0x16e
 5963 0359 8E000000 		.4byte	0x8e
 5964 035d 02       		.uleb128 0x2
 5965 035e 91       		.byte	0x91
 5966 035f 75       		.sleb128 -11
 5967 0360 14       		.uleb128 0x14
 5968 0361 EB030000 		.4byte	.LASF70
 5969 0365 01       		.byte	0x1
 5970 0366 6F01     		.2byte	0x16f
 5971 0368 AB000000 		.4byte	0xab
 5972 036c 02       		.uleb128 0x2
 5973 036d 91       		.byte	0x91
 5974 036e 71       		.sleb128 -15
 5975 036f 14       		.uleb128 0x14
 5976 0370 A9080000 		.4byte	.LASF71
 5977 0374 01       		.byte	0x1
 5978 0375 7001     		.2byte	0x170
 5979 0377 AB000000 		.4byte	0xab
 5980 037b 02       		.uleb128 0x2
 5981 037c 91       		.byte	0x91
 5982 037d 70       		.sleb128 -16
 5983 037e 10       		.uleb128 0x10
 5984 037f B8010000 		.4byte	.LBB5
 5985 0383 F4010000 		.4byte	.LBE5-.LBB5
 5986 0387 B4030000 		.4byte	0x3b4
 5987 038b 15       		.uleb128 0x15
 5988 038c 6D657300 		.ascii	"mes\000"
 5989 0390 01       		.byte	0x1
 5990 0391 7701     		.2byte	0x177
 5991 0393 28040000 		.4byte	0x428
 5992 0397 02       		.uleb128 0x2
 5993 0398 91       		.byte	0x91
 5994 0399 5C       		.sleb128 -36
 5995 039a 12       		.uleb128 0x12
 5996 039b E0010000 		.4byte	.LBB6
 5997 039f CC010000 		.4byte	.LBE6-.LBB6
 5998 03a3 14       		.uleb128 0x14
 5999 03a4 79080000 		.4byte	.LASF72
 6000 03a8 01       		.byte	0x1
 6001 03a9 8801     		.2byte	0x188
 6002 03ab AB000000 		.4byte	0xab
 6003 03af 02       		.uleb128 0x2
 6004 03b0 91       		.byte	0x91
 6005 03b1 74       		.sleb128 -12
 6006 03b2 00       		.byte	0
 6007 03b3 00       		.byte	0
 6008 03b4 10       		.uleb128 0x10
 6009 03b5 06040000 		.4byte	.LBB7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 129


 6010 03b9 30000000 		.4byte	.LBE7-.LBB7
 6011 03bd D1030000 		.4byte	0x3d1
 6012 03c1 14       		.uleb128 0x14
 6013 03c2 44020000 		.4byte	.LASF73
 6014 03c6 01       		.byte	0x1
 6015 03c7 C401     		.2byte	0x1c4
 6016 03c9 8E000000 		.4byte	0x8e
 6017 03cd 02       		.uleb128 0x2
 6018 03ce 91       		.byte	0x91
 6019 03cf 6F       		.sleb128 -17
 6020 03d0 00       		.byte	0
 6021 03d1 10       		.uleb128 0x10
 6022 03d2 5A040000 		.4byte	.LBB8
 6023 03d6 00010000 		.4byte	.LBE8-.LBB8
 6024 03da FD030000 		.4byte	0x3fd
 6025 03de 15       		.uleb128 0x15
 6026 03df 6D657300 		.ascii	"mes\000"
 6027 03e3 01       		.byte	0x1
 6028 03e4 D301     		.2byte	0x1d3
 6029 03e6 28040000 		.4byte	0x428
 6030 03ea 02       		.uleb128 0x2
 6031 03eb 91       		.byte	0x91
 6032 03ec 4C       		.sleb128 -52
 6033 03ed 14       		.uleb128 0x14
 6034 03ee 79080000 		.4byte	.LASF72
 6035 03f2 01       		.byte	0x1
 6036 03f3 D701     		.2byte	0x1d7
 6037 03f5 AB000000 		.4byte	0xab
 6038 03f9 02       		.uleb128 0x2
 6039 03fa 91       		.byte	0x91
 6040 03fb 73       		.sleb128 -13
 6041 03fc 00       		.byte	0
 6042 03fd 12       		.uleb128 0x12
 6043 03fe 82050000 		.4byte	.LBB9
 6044 0402 84010000 		.4byte	.LBE9-.LBB9
 6045 0406 15       		.uleb128 0x15
 6046 0407 6D657300 		.ascii	"mes\000"
 6047 040b 01       		.byte	0x1
 6048 040c FB01     		.2byte	0x1fb
 6049 040e 28040000 		.4byte	0x428
 6050 0412 03       		.uleb128 0x3
 6051 0413 91       		.byte	0x91
 6052 0414 BC7F     		.sleb128 -68
 6053 0416 14       		.uleb128 0x14
 6054 0417 79080000 		.4byte	.LASF72
 6055 041b 01       		.byte	0x1
 6056 041c FF01     		.2byte	0x1ff
 6057 041e AB000000 		.4byte	0xab
 6058 0422 02       		.uleb128 0x2
 6059 0423 91       		.byte	0x91
 6060 0424 72       		.sleb128 -14
 6061 0425 00       		.byte	0
 6062 0426 00       		.byte	0
 6063 0427 00       		.byte	0
 6064 0428 07       		.uleb128 0x7
 6065 0429 8E000000 		.4byte	0x8e
 6066 042d 38040000 		.4byte	0x438
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 130


 6067 0431 08       		.uleb128 0x8
 6068 0432 81000000 		.4byte	0x81
 6069 0436 0F       		.byte	0xf
 6070 0437 00       		.byte	0
 6071 0438 16       		.uleb128 0x16
 6072 0439 CE060000 		.4byte	.LASF79
 6073 043d 01       		.byte	0x1
 6074 043e 4F02     		.2byte	0x24f
 6075 0440 00000000 		.4byte	.LFB72
 6076 0444 60010000 		.4byte	.LFE72-.LFB72
 6077 0448 01       		.uleb128 0x1
 6078 0449 9C       		.byte	0x9c
 6079 044a 86040000 		.4byte	0x486
 6080 044e 12       		.uleb128 0x12
 6081 044f 10000000 		.4byte	.LBB10
 6082 0453 34010000 		.4byte	.LBE10-.LBB10
 6083 0457 14       		.uleb128 0x14
 6084 0458 29070000 		.4byte	.LASF74
 6085 045c 01       		.byte	0x1
 6086 045d 5502     		.2byte	0x255
 6087 045f B7000000 		.4byte	0xb7
 6088 0463 02       		.uleb128 0x2
 6089 0464 91       		.byte	0x91
 6090 0465 76       		.sleb128 -10
 6091 0466 14       		.uleb128 0x14
 6092 0467 54020000 		.4byte	.LASF75
 6093 046b 01       		.byte	0x1
 6094 046c 5602     		.2byte	0x256
 6095 046e 86040000 		.4byte	0x486
 6096 0472 02       		.uleb128 0x2
 6097 0473 91       		.byte	0x91
 6098 0474 68       		.sleb128 -24
 6099 0475 14       		.uleb128 0x14
 6100 0476 D5050000 		.4byte	.LASF76
 6101 047a 01       		.byte	0x1
 6102 047b 5702     		.2byte	0x257
 6103 047d 86040000 		.4byte	0x486
 6104 0481 02       		.uleb128 0x2
 6105 0482 91       		.byte	0x91
 6106 0483 5C       		.sleb128 -36
 6107 0484 00       		.byte	0
 6108 0485 00       		.byte	0
 6109 0486 07       		.uleb128 0x7
 6110 0487 8E000000 		.4byte	0x8e
 6111 048b 96040000 		.4byte	0x496
 6112 048f 08       		.uleb128 0x8
 6113 0490 81000000 		.4byte	0x81
 6114 0494 0B       		.byte	0xb
 6115 0495 00       		.byte	0
 6116 0496 17       		.uleb128 0x17
 6117 0497 05020000 		.4byte	.LASF77
 6118 049b 01       		.byte	0x1
 6119 049c 9002     		.2byte	0x290
 6120 049e 00000000 		.4byte	.LFB73
 6121 04a2 18000000 		.4byte	.LFE73-.LFB73
 6122 04a6 01       		.uleb128 0x1
 6123 04a7 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 131


 6124 04a8 BC040000 		.4byte	0x4bc
 6125 04ac 18       		.uleb128 0x18
 6126 04ad 64697200 		.ascii	"dir\000"
 6127 04b1 01       		.byte	0x1
 6128 04b2 9002     		.2byte	0x290
 6129 04b4 AB000000 		.4byte	0xab
 6130 04b8 02       		.uleb128 0x2
 6131 04b9 91       		.byte	0x91
 6132 04ba 77       		.sleb128 -9
 6133 04bb 00       		.byte	0
 6134 04bc 17       		.uleb128 0x17
 6135 04bd 25060000 		.4byte	.LASF78
 6136 04c1 01       		.byte	0x1
 6137 04c2 9502     		.2byte	0x295
 6138 04c4 00000000 		.4byte	.LFB74
 6139 04c8 18000000 		.4byte	.LFE74-.LFB74
 6140 04cc 01       		.uleb128 0x1
 6141 04cd 9C       		.byte	0x9c
 6142 04ce E2040000 		.4byte	0x4e2
 6143 04d2 18       		.uleb128 0x18
 6144 04d3 64697200 		.ascii	"dir\000"
 6145 04d7 01       		.byte	0x1
 6146 04d8 9502     		.2byte	0x295
 6147 04da AB000000 		.4byte	0xab
 6148 04de 02       		.uleb128 0x2
 6149 04df 91       		.byte	0x91
 6150 04e0 77       		.sleb128 -9
 6151 04e1 00       		.byte	0
 6152 04e2 19       		.uleb128 0x19
 6153 04e3 36080000 		.4byte	.LASF80
 6154 04e7 01       		.byte	0x1
 6155 04e8 9A02     		.2byte	0x29a
 6156 04ea 00000000 		.4byte	.LFB75
 6157 04ee 54000000 		.4byte	.LFE75-.LFB75
 6158 04f2 01       		.uleb128 0x1
 6159 04f3 9C       		.byte	0x9c
 6160 04f4 08050000 		.4byte	0x508
 6161 04f8 15       		.uleb128 0x15
 6162 04f9 6D657300 		.ascii	"mes\000"
 6163 04fd 01       		.byte	0x1
 6164 04fe 9F02     		.2byte	0x29f
 6165 0500 28040000 		.4byte	0x428
 6166 0504 02       		.uleb128 0x2
 6167 0505 91       		.byte	0x91
 6168 0506 68       		.sleb128 -24
 6169 0507 00       		.byte	0
 6170 0508 17       		.uleb128 0x17
 6171 0509 A5030000 		.4byte	.LASF81
 6172 050d 01       		.byte	0x1
 6173 050e A402     		.2byte	0x2a4
 6174 0510 00000000 		.4byte	.LFB76
 6175 0514 F4000000 		.4byte	.LFE76-.LFB76
 6176 0518 01       		.uleb128 0x1
 6177 0519 9C       		.byte	0x9c
 6178 051a 5B050000 		.4byte	0x55b
 6179 051e 1A       		.uleb128 0x1a
 6180 051f 68090000 		.4byte	.LASF82
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 132


 6181 0523 01       		.byte	0x1
 6182 0524 A402     		.2byte	0x2a4
 6183 0526 EE000000 		.4byte	0xee
 6184 052a 02       		.uleb128 0x2
 6185 052b 91       		.byte	0x91
 6186 052c 68       		.sleb128 -24
 6187 052d 1A       		.uleb128 0x1a
 6188 052e 1D010000 		.4byte	.LASF83
 6189 0532 01       		.byte	0x1
 6190 0533 A402     		.2byte	0x2a4
 6191 0535 EE000000 		.4byte	0xee
 6192 0539 02       		.uleb128 0x2
 6193 053a 91       		.byte	0x91
 6194 053b 60       		.sleb128 -32
 6195 053c 14       		.uleb128 0x14
 6196 053d 03090000 		.4byte	.LASF84
 6197 0541 01       		.byte	0x1
 6198 0542 B902     		.2byte	0x2b9
 6199 0544 DB000000 		.4byte	0xdb
 6200 0548 02       		.uleb128 0x2
 6201 0549 91       		.byte	0x91
 6202 054a 76       		.sleb128 -10
 6203 054b 14       		.uleb128 0x14
 6204 054c EB070000 		.4byte	.LASF85
 6205 0550 01       		.byte	0x1
 6206 0551 BA02     		.2byte	0x2ba
 6207 0553 DB000000 		.4byte	0xdb
 6208 0557 02       		.uleb128 0x2
 6209 0558 91       		.byte	0x91
 6210 0559 74       		.sleb128 -12
 6211 055a 00       		.byte	0
 6212 055b 1B       		.uleb128 0x1b
 6213 055c 00080000 		.4byte	.LASF86
 6214 0560 01       		.byte	0x1
 6215 0561 C002     		.2byte	0x2c0
 6216 0563 00000000 		.4byte	.LFB77
 6217 0567 18000000 		.4byte	.LFE77-.LFB77
 6218 056b 01       		.uleb128 0x1
 6219 056c 9C       		.byte	0x9c
 6220 056d 1B       		.uleb128 0x1b
 6221 056e 06070000 		.4byte	.LASF87
 6222 0572 01       		.byte	0x1
 6223 0573 C602     		.2byte	0x2c6
 6224 0575 00000000 		.4byte	.LFB78
 6225 0579 18000000 		.4byte	.LFE78-.LFB78
 6226 057d 01       		.uleb128 0x1
 6227 057e 9C       		.byte	0x9c
 6228 057f 1B       		.uleb128 0x1b
 6229 0580 92060000 		.4byte	.LASF88
 6230 0584 01       		.byte	0x1
 6231 0585 CC02     		.2byte	0x2cc
 6232 0587 00000000 		.4byte	.LFB79
 6233 058b 22000000 		.4byte	.LFE79-.LFB79
 6234 058f 01       		.uleb128 0x1
 6235 0590 9C       		.byte	0x9c
 6236 0591 1B       		.uleb128 0x1b
 6237 0592 02060000 		.4byte	.LASF89
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 133


 6238 0596 01       		.byte	0x1
 6239 0597 D202     		.2byte	0x2d2
 6240 0599 00000000 		.4byte	.LFB80
 6241 059d 1C000000 		.4byte	.LFE80-.LFB80
 6242 05a1 01       		.uleb128 0x1
 6243 05a2 9C       		.byte	0x9c
 6244 05a3 1B       		.uleb128 0x1b
 6245 05a4 CC000000 		.4byte	.LASF90
 6246 05a8 01       		.byte	0x1
 6247 05a9 D702     		.2byte	0x2d7
 6248 05ab 00000000 		.4byte	.LFB81
 6249 05af 34000000 		.4byte	.LFE81-.LFB81
 6250 05b3 01       		.uleb128 0x1
 6251 05b4 9C       		.byte	0x9c
 6252 05b5 1B       		.uleb128 0x1b
 6253 05b6 C7010000 		.4byte	.LASF91
 6254 05ba 01       		.byte	0x1
 6255 05bb DC02     		.2byte	0x2dc
 6256 05bd 00000000 		.4byte	.LFB82
 6257 05c1 38000000 		.4byte	.LFE82-.LFB82
 6258 05c5 01       		.uleb128 0x1
 6259 05c6 9C       		.byte	0x9c
 6260 05c7 1B       		.uleb128 0x1b
 6261 05c8 DE070000 		.4byte	.LASF92
 6262 05cc 01       		.byte	0x1
 6263 05cd E102     		.2byte	0x2e1
 6264 05cf 00000000 		.4byte	.LFB83
 6265 05d3 4C000000 		.4byte	.LFE83-.LFB83
 6266 05d7 01       		.uleb128 0x1
 6267 05d8 9C       		.byte	0x9c
 6268 05d9 1B       		.uleb128 0x1b
 6269 05da B9030000 		.4byte	.LASF93
 6270 05de 01       		.byte	0x1
 6271 05df E602     		.2byte	0x2e6
 6272 05e1 00000000 		.4byte	.LFB84
 6273 05e5 38000000 		.4byte	.LFE84-.LFB84
 6274 05e9 01       		.uleb128 0x1
 6275 05ea 9C       		.byte	0x9c
 6276 05eb 1B       		.uleb128 0x1b
 6277 05ec 96010000 		.4byte	.LASF94
 6278 05f0 01       		.byte	0x1
 6279 05f1 EF02     		.2byte	0x2ef
 6280 05f3 00000000 		.4byte	.LFB85
 6281 05f7 38000000 		.4byte	.LFE85-.LFB85
 6282 05fb 01       		.uleb128 0x1
 6283 05fc 9C       		.byte	0x9c
 6284 05fd 1B       		.uleb128 0x1b
 6285 05fe 6E030000 		.4byte	.LASF95
 6286 0602 01       		.byte	0x1
 6287 0603 F802     		.2byte	0x2f8
 6288 0605 00000000 		.4byte	.LFB86
 6289 0609 38000000 		.4byte	.LFE86-.LFB86
 6290 060d 01       		.uleb128 0x1
 6291 060e 9C       		.byte	0x9c
 6292 060f 1B       		.uleb128 0x1b
 6293 0610 54080000 		.4byte	.LASF96
 6294 0614 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 134


 6295 0615 0103     		.2byte	0x301
 6296 0617 00000000 		.4byte	.LFB87
 6297 061b 14000000 		.4byte	.LFE87-.LFB87
 6298 061f 01       		.uleb128 0x1
 6299 0620 9C       		.byte	0x9c
 6300 0621 1C       		.uleb128 0x1c
 6301 0622 71000000 		.4byte	.LASF97
 6302 0626 01       		.byte	0x1
 6303 0627 0603     		.2byte	0x306
 6304 0629 00000000 		.4byte	.LFB88
 6305 062d 18000000 		.4byte	.LFE88-.LFB88
 6306 0631 01       		.uleb128 0x1
 6307 0632 9C       		.byte	0x9c
 6308 0633 1C       		.uleb128 0x1c
 6309 0634 64030000 		.4byte	.LASF98
 6310 0638 01       		.byte	0x1
 6311 0639 0A03     		.2byte	0x30a
 6312 063b 00000000 		.4byte	.LFB89
 6313 063f 18000000 		.4byte	.LFE89-.LFB89
 6314 0643 01       		.uleb128 0x1
 6315 0644 9C       		.byte	0x9c
 6316 0645 1C       		.uleb128 0x1c
 6317 0646 00000000 		.4byte	.LASF99
 6318 064a 01       		.byte	0x1
 6319 064b 0F03     		.2byte	0x30f
 6320 064d 00000000 		.4byte	.LFB90
 6321 0651 18000000 		.4byte	.LFE90-.LFB90
 6322 0655 01       		.uleb128 0x1
 6323 0656 9C       		.byte	0x9c
 6324 0657 1C       		.uleb128 0x1c
 6325 0658 C7080000 		.4byte	.LASF100
 6326 065c 01       		.byte	0x1
 6327 065d 1303     		.2byte	0x313
 6328 065f 00000000 		.4byte	.LFB91
 6329 0663 18000000 		.4byte	.LFE91-.LFB91
 6330 0667 01       		.uleb128 0x1
 6331 0668 9C       		.byte	0x9c
 6332 0669 17       		.uleb128 0x17
 6333 066a DF060000 		.4byte	.LASF101
 6334 066e 01       		.byte	0x1
 6335 066f 1A03     		.2byte	0x31a
 6336 0671 00000000 		.4byte	.LFB92
 6337 0675 B8000000 		.4byte	.LFE92-.LFB92
 6338 0679 01       		.uleb128 0x1
 6339 067a 9C       		.byte	0x9c
 6340 067b 8F060000 		.4byte	0x68f
 6341 067f 14       		.uleb128 0x14
 6342 0680 1C080000 		.4byte	.LASF102
 6343 0684 01       		.byte	0x1
 6344 0685 1B03     		.2byte	0x31b
 6345 0687 8E000000 		.4byte	0x8e
 6346 068b 02       		.uleb128 0x2
 6347 068c 91       		.byte	0x91
 6348 068d 6F       		.sleb128 -17
 6349 068e 00       		.byte	0
 6350 068f 17       		.uleb128 0x17
 6351 0690 9B050000 		.4byte	.LASF103
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 135


 6352 0694 01       		.byte	0x1
 6353 0695 3703     		.2byte	0x337
 6354 0697 00000000 		.4byte	.LFB93
 6355 069b 4C050000 		.4byte	.LFE93-.LFB93
 6356 069f 01       		.uleb128 0x1
 6357 06a0 9C       		.byte	0x9c
 6358 06a1 F7060000 		.4byte	0x6f7
 6359 06a5 14       		.uleb128 0x14
 6360 06a6 1C080000 		.4byte	.LASF102
 6361 06aa 01       		.byte	0x1
 6362 06ab 3903     		.2byte	0x339
 6363 06ad 8E000000 		.4byte	0x8e
 6364 06b1 02       		.uleb128 0x2
 6365 06b2 91       		.byte	0x91
 6366 06b3 77       		.sleb128 -9
 6367 06b4 12       		.uleb128 0x12
 6368 06b5 48010000 		.4byte	.LBB11
 6369 06b9 DA030000 		.4byte	.LBE11-.LBB11
 6370 06bd 15       		.uleb128 0x15
 6371 06be 6D657300 		.ascii	"mes\000"
 6372 06c2 01       		.byte	0x1
 6373 06c3 5F03     		.2byte	0x35f
 6374 06c5 28040000 		.4byte	0x428
 6375 06c9 02       		.uleb128 0x2
 6376 06ca 91       		.byte	0x91
 6377 06cb 58       		.sleb128 -40
 6378 06cc 15       		.uleb128 0x15
 6379 06cd 6900     		.ascii	"i\000"
 6380 06cf 01       		.byte	0x1
 6381 06d0 8A03     		.2byte	0x38a
 6382 06d2 73000000 		.4byte	0x73
 6383 06d6 02       		.uleb128 0x2
 6384 06d7 91       		.byte	0x91
 6385 06d8 70       		.sleb128 -16
 6386 06d9 14       		.uleb128 0x14
 6387 06da 35090000 		.4byte	.LASF69
 6388 06de 01       		.byte	0x1
 6389 06df 9703     		.2byte	0x397
 6390 06e1 8E000000 		.4byte	0x8e
 6391 06e5 02       		.uleb128 0x2
 6392 06e6 91       		.byte	0x91
 6393 06e7 6B       		.sleb128 -21
 6394 06e8 15       		.uleb128 0x15
 6395 06e9 7800     		.ascii	"x\000"
 6396 06eb 01       		.byte	0x1
 6397 06ec BD03     		.2byte	0x3bd
 6398 06ee 73000000 		.4byte	0x73
 6399 06f2 02       		.uleb128 0x2
 6400 06f3 91       		.byte	0x91
 6401 06f4 6C       		.sleb128 -20
 6402 06f5 00       		.byte	0
 6403 06f6 00       		.byte	0
 6404 06f7 1B       		.uleb128 0x1b
 6405 06f8 14000000 		.4byte	.LASF104
 6406 06fc 01       		.byte	0x1
 6407 06fd D703     		.2byte	0x3d7
 6408 06ff 00000000 		.4byte	.LFB94
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 136


 6409 0703 40000000 		.4byte	.LFE94-.LFB94
 6410 0707 01       		.uleb128 0x1
 6411 0708 9C       		.byte	0x9c
 6412 0709 1B       		.uleb128 0x1b
 6413 070a C6030000 		.4byte	.LASF105
 6414 070e 01       		.byte	0x1
 6415 070f E603     		.2byte	0x3e6
 6416 0711 00000000 		.4byte	.LFB95
 6417 0715 40000000 		.4byte	.LFE95-.LFB95
 6418 0719 01       		.uleb128 0x1
 6419 071a 9C       		.byte	0x9c
 6420 071b 19       		.uleb128 0x19
 6421 071c C4040000 		.4byte	.LASF106
 6422 0720 01       		.byte	0x1
 6423 0721 F603     		.2byte	0x3f6
 6424 0723 00000000 		.4byte	.LFB96
 6425 0727 30020000 		.4byte	.LFE96-.LFB96
 6426 072b 01       		.uleb128 0x1
 6427 072c 9C       		.byte	0x9c
 6428 072d 8C070000 		.4byte	0x78c
 6429 0731 14       		.uleb128 0x14
 6430 0732 8A070000 		.4byte	.LASF107
 6431 0736 01       		.byte	0x1
 6432 0737 0404     		.2byte	0x404
 6433 0739 DB000000 		.4byte	0xdb
 6434 073d 02       		.uleb128 0x2
 6435 073e 91       		.byte	0x91
 6436 073f 5E       		.sleb128 -34
 6437 0740 14       		.uleb128 0x14
 6438 0741 48010000 		.4byte	.LASF108
 6439 0745 01       		.byte	0x1
 6440 0746 0504     		.2byte	0x405
 6441 0748 DB000000 		.4byte	0xdb
 6442 074c 02       		.uleb128 0x2
 6443 074d 91       		.byte	0x91
 6444 074e 5C       		.sleb128 -36
 6445 074f 14       		.uleb128 0x14
 6446 0750 C2060000 		.4byte	.LASF109
 6447 0754 01       		.byte	0x1
 6448 0755 0604     		.2byte	0x406
 6449 0757 EE000000 		.4byte	0xee
 6450 075b 02       		.uleb128 0x2
 6451 075c 91       		.byte	0x91
 6452 075d 68       		.sleb128 -24
 6453 075e 14       		.uleb128 0x14
 6454 075f D6080000 		.4byte	.LASF110
 6455 0763 01       		.byte	0x1
 6456 0764 0704     		.2byte	0x407
 6457 0766 EE000000 		.4byte	0xee
 6458 076a 02       		.uleb128 0x2
 6459 076b 91       		.byte	0x91
 6460 076c 60       		.sleb128 -32
 6461 076d 14       		.uleb128 0x14
 6462 076e 65040000 		.4byte	.LASF111
 6463 0772 01       		.byte	0x1
 6464 0773 1004     		.2byte	0x410
 6465 0775 73000000 		.4byte	0x73
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 137


 6466 0779 02       		.uleb128 0x2
 6467 077a 91       		.byte	0x91
 6468 077b 58       		.sleb128 -40
 6469 077c 14       		.uleb128 0x14
 6470 077d A5060000 		.4byte	.LASF112
 6471 0781 01       		.byte	0x1
 6472 0782 1104     		.2byte	0x411
 6473 0784 73000000 		.4byte	0x73
 6474 0788 02       		.uleb128 0x2
 6475 0789 91       		.byte	0x91
 6476 078a 54       		.sleb128 -44
 6477 078b 00       		.byte	0
 6478 078c 1C       		.uleb128 0x1c
 6479 078d FC060000 		.4byte	.LASF113
 6480 0791 01       		.byte	0x1
 6481 0792 1F04     		.2byte	0x41f
 6482 0794 00000000 		.4byte	.LFB97
 6483 0798 0C000000 		.4byte	.LFE97-.LFB97
 6484 079c 01       		.uleb128 0x1
 6485 079d 9C       		.byte	0x9c
 6486 079e 19       		.uleb128 0x19
 6487 079f BC010000 		.4byte	.LASF114
 6488 07a3 01       		.byte	0x1
 6489 07a4 2504     		.2byte	0x425
 6490 07a6 00000000 		.4byte	.LFB98
 6491 07aa 4C010000 		.4byte	.LFE98-.LFB98
 6492 07ae 01       		.uleb128 0x1
 6493 07af 9C       		.byte	0x9c
 6494 07b0 E0070000 		.4byte	0x7e0
 6495 07b4 15       		.uleb128 0x15
 6496 07b5 6E6C00   		.ascii	"nl\000"
 6497 07b8 01       		.byte	0x1
 6498 07b9 2904     		.2byte	0x429
 6499 07bb AB000000 		.4byte	0xab
 6500 07bf 02       		.uleb128 0x2
 6501 07c0 91       		.byte	0x91
 6502 07c1 67       		.sleb128 -25
 6503 07c2 15       		.uleb128 0x15
 6504 07c3 6E7200   		.ascii	"nr\000"
 6505 07c6 01       		.byte	0x1
 6506 07c7 2A04     		.2byte	0x42a
 6507 07c9 AB000000 		.4byte	0xab
 6508 07cd 02       		.uleb128 0x2
 6509 07ce 91       		.byte	0x91
 6510 07cf 66       		.sleb128 -26
 6511 07d0 15       		.uleb128 0x15
 6512 07d1 6D696400 		.ascii	"mid\000"
 6513 07d5 01       		.byte	0x1
 6514 07d6 2B04     		.2byte	0x42b
 6515 07d8 AB000000 		.4byte	0xab
 6516 07dc 02       		.uleb128 0x2
 6517 07dd 91       		.byte	0x91
 6518 07de 65       		.sleb128 -27
 6519 07df 00       		.byte	0
 6520 07e0 1C       		.uleb128 0x1c
 6521 07e1 72010000 		.4byte	.LASF115
 6522 07e5 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 138


 6523 07e6 4504     		.2byte	0x445
 6524 07e8 00000000 		.4byte	.LFB99
 6525 07ec 0C000000 		.4byte	.LFE99-.LFB99
 6526 07f0 01       		.uleb128 0x1
 6527 07f1 9C       		.byte	0x9c
 6528 07f2 19       		.uleb128 0x19
 6529 07f3 B5090000 		.4byte	.LASF116
 6530 07f7 01       		.byte	0x1
 6531 07f8 4A04     		.2byte	0x44a
 6532 07fa 00000000 		.4byte	.LFB100
 6533 07fe C0000000 		.4byte	.LFE100-.LFB100
 6534 0802 01       		.uleb128 0x1
 6535 0803 9C       		.byte	0x9c
 6536 0804 40080000 		.4byte	0x840
 6537 0808 12       		.uleb128 0x12
 6538 0809 0E000000 		.4byte	.LBB12
 6539 080d 8E000000 		.4byte	.LBE12-.LBB12
 6540 0811 14       		.uleb128 0x14
 6541 0812 78030000 		.4byte	.LASF117
 6542 0816 01       		.byte	0x1
 6543 0817 5304     		.2byte	0x453
 6544 0819 E7000000 		.4byte	0xe7
 6545 081d 02       		.uleb128 0x2
 6546 081e 91       		.byte	0x91
 6547 081f 74       		.sleb128 -12
 6548 0820 14       		.uleb128 0x14
 6549 0821 F7010000 		.4byte	.LASF118
 6550 0825 01       		.byte	0x1
 6551 0826 5404     		.2byte	0x454
 6552 0828 DB000000 		.4byte	0xdb
 6553 082c 02       		.uleb128 0x2
 6554 082d 91       		.byte	0x91
 6555 082e 72       		.sleb128 -14
 6556 082f 14       		.uleb128 0x14
 6557 0830 EE040000 		.4byte	.LASF119
 6558 0834 01       		.byte	0x1
 6559 0835 5904     		.2byte	0x459
 6560 0837 28040000 		.4byte	0x428
 6561 083b 02       		.uleb128 0x2
 6562 083c 91       		.byte	0x91
 6563 083d 60       		.sleb128 -32
 6564 083e 00       		.byte	0
 6565 083f 00       		.byte	0
 6566 0840 19       		.uleb128 0x19
 6567 0841 F7070000 		.4byte	.LASF120
 6568 0845 01       		.byte	0x1
 6569 0846 6004     		.2byte	0x460
 6570 0848 00000000 		.4byte	.LFB101
 6571 084c B8000000 		.4byte	.LFE101-.LFB101
 6572 0850 01       		.uleb128 0x1
 6573 0851 9C       		.byte	0x9c
 6574 0852 70080000 		.4byte	0x870
 6575 0856 12       		.uleb128 0x12
 6576 0857 0E000000 		.4byte	.LBB13
 6577 085b 86000000 		.4byte	.LBE13-.LBB13
 6578 085f 14       		.uleb128 0x14
 6579 0860 10060000 		.4byte	.LASF121
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 139


 6580 0864 01       		.byte	0x1
 6581 0865 6404     		.2byte	0x464
 6582 0867 28040000 		.4byte	0x428
 6583 086b 02       		.uleb128 0x2
 6584 086c 91       		.byte	0x91
 6585 086d 68       		.sleb128 -24
 6586 086e 00       		.byte	0
 6587 086f 00       		.byte	0
 6588 0870 17       		.uleb128 0x17
 6589 0871 BF090000 		.4byte	.LASF122
 6590 0875 01       		.byte	0x1
 6591 0876 7504     		.2byte	0x475
 6592 0878 00000000 		.4byte	.LFB102
 6593 087c 4A000000 		.4byte	.LFE102-.LFB102
 6594 0880 01       		.uleb128 0x1
 6595 0881 9C       		.byte	0x9c
 6596 0882 96080000 		.4byte	0x896
 6597 0886 1A       		.uleb128 0x1a
 6598 0887 23010000 		.4byte	.LASF123
 6599 088b 01       		.byte	0x1
 6600 088c 7504     		.2byte	0x475
 6601 088e 96080000 		.4byte	0x896
 6602 0892 02       		.uleb128 0x2
 6603 0893 91       		.byte	0x91
 6604 0894 6C       		.sleb128 -20
 6605 0895 00       		.byte	0
 6606 0896 05       		.uleb128 0x5
 6607 0897 04       		.byte	0x4
 6608 0898 AB000000 		.4byte	0xab
 6609 089c 17       		.uleb128 0x17
 6610 089d F2030000 		.4byte	.LASF124
 6611 08a1 01       		.byte	0x1
 6612 08a2 8004     		.2byte	0x480
 6613 08a4 00000000 		.4byte	.LFB103
 6614 08a8 68000000 		.4byte	.LFE103-.LFB103
 6615 08ac 01       		.uleb128 0x1
 6616 08ad 9C       		.byte	0x9c
 6617 08ae D9080000 		.4byte	0x8d9
 6618 08b2 18       		.uleb128 0x18
 6619 08b3 7300     		.ascii	"s\000"
 6620 08b5 01       		.byte	0x1
 6621 08b6 8004     		.2byte	0x480
 6622 08b8 88000000 		.4byte	0x88
 6623 08bc 02       		.uleb128 0x2
 6624 08bd 91       		.byte	0x91
 6625 08be 6C       		.sleb128 -20
 6626 08bf 12       		.uleb128 0x12
 6627 08c0 10000000 		.4byte	.LBB14
 6628 08c4 48000000 		.4byte	.LBE14-.LBB14
 6629 08c8 15       		.uleb128 0x15
 6630 08c9 636E7400 		.ascii	"cnt\000"
 6631 08cd 01       		.byte	0x1
 6632 08ce 8704     		.2byte	0x487
 6633 08d0 C3000000 		.4byte	0xc3
 6634 08d4 02       		.uleb128 0x2
 6635 08d5 91       		.byte	0x91
 6636 08d6 74       		.sleb128 -12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 140


 6637 08d7 00       		.byte	0
 6638 08d8 00       		.byte	0
 6639 08d9 17       		.uleb128 0x17
 6640 08da BC080000 		.4byte	.LASF125
 6641 08de 01       		.byte	0x1
 6642 08df 9604     		.2byte	0x496
 6643 08e1 00000000 		.4byte	.LFB104
 6644 08e5 50000000 		.4byte	.LFE104-.LFB104
 6645 08e9 01       		.uleb128 0x1
 6646 08ea 9C       		.byte	0x9c
 6647 08eb 16090000 		.4byte	0x916
 6648 08ef 18       		.uleb128 0x18
 6649 08f0 6300     		.ascii	"c\000"
 6650 08f2 01       		.byte	0x1
 6651 08f3 9604     		.2byte	0x496
 6652 08f5 8E000000 		.4byte	0x8e
 6653 08f9 02       		.uleb128 0x2
 6654 08fa 91       		.byte	0x91
 6655 08fb 6F       		.sleb128 -17
 6656 08fc 12       		.uleb128 0x12
 6657 08fd 12000000 		.4byte	.LBB15
 6658 0901 2E000000 		.4byte	.LBE15-.LBB15
 6659 0905 15       		.uleb128 0x15
 6660 0906 636E7400 		.ascii	"cnt\000"
 6661 090a 01       		.byte	0x1
 6662 090b 9A04     		.2byte	0x49a
 6663 090d C3000000 		.4byte	0xc3
 6664 0911 02       		.uleb128 0x2
 6665 0912 91       		.byte	0x91
 6666 0913 74       		.sleb128 -12
 6667 0914 00       		.byte	0
 6668 0915 00       		.byte	0
 6669 0916 1C       		.uleb128 0x1c
 6670 0917 3A040000 		.4byte	.LASF126
 6671 091b 01       		.byte	0x1
 6672 091c A704     		.2byte	0x4a7
 6673 091e 00000000 		.4byte	.LFB105
 6674 0922 0C000000 		.4byte	.LFE105-.LFB105
 6675 0926 01       		.uleb128 0x1
 6676 0927 9C       		.byte	0x9c
 6677 0928 1D       		.uleb128 0x1d
 6678 0929 DE000000 		.4byte	.LASF127
 6679 092d 06       		.byte	0x6
 6680 092e 9606     		.2byte	0x696
 6681 0930 34090000 		.4byte	0x934
 6682 0934 1E       		.uleb128 0x1e
 6683 0935 95000000 		.4byte	0x95
 6684 0939 1F       		.uleb128 0x1f
 6685 093a 747300   		.ascii	"ts\000"
 6686 093d 05       		.byte	0x5
 6687 093e 10       		.byte	0x10
 6688 093f AB000000 		.4byte	0xab
 6689 0943 05       		.uleb128 0x5
 6690 0944 03       		.byte	0x3
 6691 0945 00000000 		.4byte	ts
 6692 0949 20       		.uleb128 0x20
 6693 094a 2E020000 		.4byte	.LASF128
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 141


 6694 094e 05       		.byte	0x5
 6695 094f 11       		.byte	0x11
 6696 0950 B7000000 		.4byte	0xb7
 6697 0954 05       		.uleb128 0x5
 6698 0955 03       		.byte	0x3
 6699 0956 00000000 		.4byte	ts_enc
 6700 095a 20       		.uleb128 0x20
 6701 095b FE000000 		.4byte	.LASF129
 6702 095f 05       		.byte	0x5
 6703 0960 12       		.byte	0x12
 6704 0961 B7000000 		.4byte	0xb7
 6705 0965 05       		.uleb128 0x5
 6706 0966 03       		.byte	0x3
 6707 0967 00000000 		.4byte	ts_update
 6708 096b 20       		.uleb128 0x20
 6709 096c 30000000 		.4byte	.LASF130
 6710 0970 05       		.byte	0x5
 6711 0971 13       		.byte	0x13
 6712 0972 B7000000 		.4byte	0xb7
 6713 0976 05       		.uleb128 0x5
 6714 0977 03       		.byte	0x3
 6715 0978 00000000 		.4byte	ts_speed
 6716 097c 20       		.uleb128 0x20
 6717 097d 2F040000 		.4byte	.LASF131
 6718 0981 05       		.byte	0x5
 6719 0982 14       		.byte	0x14
 6720 0983 B7000000 		.4byte	0xb7
 6721 0987 05       		.uleb128 0x5
 6722 0988 03       		.byte	0x3
 6723 0989 00000000 		.4byte	ts_display
 6724 098d 20       		.uleb128 0x20
 6725 098e 7D010000 		.4byte	.LASF132
 6726 0992 05       		.byte	0x5
 6727 0993 16       		.byte	0x16
 6728 0994 AB000000 		.4byte	0xab
 6729 0998 05       		.uleb128 0x5
 6730 0999 03       		.byte	0x3
 6731 099a 00000000 		.4byte	flag_ts_enc
 6732 099e 20       		.uleb128 0x20
 6733 099f 9F070000 		.4byte	.LASF133
 6734 09a3 05       		.byte	0x5
 6735 09a4 17       		.byte	0x17
 6736 09a5 AB000000 		.4byte	0xab
 6737 09a9 05       		.uleb128 0x5
 6738 09aa 03       		.byte	0x3
 6739 09ab 00000000 		.4byte	flag_ts_update
 6740 09af 20       		.uleb128 0x20
 6741 09b0 6F040000 		.4byte	.LASF134
 6742 09b4 05       		.byte	0x5
 6743 09b5 18       		.byte	0x18
 6744 09b6 AB000000 		.4byte	0xab
 6745 09ba 05       		.uleb128 0x5
 6746 09bb 03       		.byte	0x3
 6747 09bc 00000000 		.4byte	flag_ts_speed
 6748 09c0 20       		.uleb128 0x20
 6749 09c1 11070000 		.4byte	.LASF135
 6750 09c5 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 142


 6751 09c6 19       		.byte	0x19
 6752 09c7 AB000000 		.4byte	0xab
 6753 09cb 05       		.uleb128 0x5
 6754 09cc 03       		.byte	0x3
 6755 09cd 00000000 		.4byte	flag_ts_display
 6756 09d1 20       		.uleb128 0x20
 6757 09d2 35020000 		.4byte	.LASF136
 6758 09d6 05       		.byte	0x5
 6759 09d7 1C       		.byte	0x1c
 6760 09d8 AB000000 		.4byte	0xab
 6761 09dc 05       		.uleb128 0x5
 6762 09dd 03       		.byte	0x3
 6763 09de 00000000 		.4byte	flag_rx
 6764 09e2 20       		.uleb128 0x20
 6765 09e3 C0000000 		.4byte	.LASF137
 6766 09e7 05       		.byte	0x5
 6767 09e8 1D       		.byte	0x1d
 6768 09e9 AB000000 		.4byte	0xab
 6769 09ed 05       		.uleb128 0x5
 6770 09ee 03       		.byte	0x3
 6771 09ef 00000000 		.4byte	flag_packet
 6772 09f3 20       		.uleb128 0x20
 6773 09f4 AD010000 		.4byte	.LASF138
 6774 09f8 05       		.byte	0x5
 6775 09f9 1E       		.byte	0x1e
 6776 09fa AB000000 		.4byte	0xab
 6777 09fe 05       		.uleb128 0x5
 6778 09ff 03       		.byte	0x3
 6779 0a00 00000000 		.4byte	flag_KB_string
 6780 0a04 20       		.uleb128 0x20
 6781 0a05 17020000 		.4byte	.LASF139
 6782 0a09 05       		.byte	0x5
 6783 0a0a 20       		.byte	0x20
 6784 0a0b AB000000 		.4byte	0xab
 6785 0a0f 05       		.uleb128 0x5
 6786 0a10 03       		.byte	0x3
 6787 0a11 00000000 		.4byte	dataready_flag
 6788 0a15 20       		.uleb128 0x20
 6789 0a16 B9050000 		.4byte	.LASF140
 6790 0a1a 05       		.byte	0x5
 6791 0a1b 22       		.byte	0x22
 6792 0a1c AB000000 		.4byte	0xab
 6793 0a20 05       		.uleb128 0x5
 6794 0a21 03       		.byte	0x3
 6795 0a22 00000000 		.4byte	flag_rf_transmission_active
 6796 0a26 20       		.uleb128 0x20
 6797 0a27 94040000 		.4byte	.LASF141
 6798 0a2b 05       		.byte	0x5
 6799 0a2c 23       		.byte	0x23
 6800 0a2d AB000000 		.4byte	0xab
 6801 0a31 05       		.uleb128 0x5
 6802 0a32 03       		.byte	0x3
 6803 0a33 00000000 		.4byte	flag_print_rf
 6804 0a37 20       		.uleb128 0x20
 6805 0a38 41030000 		.4byte	.LASF142
 6806 0a3c 05       		.byte	0x5
 6807 0a3d 25       		.byte	0x25
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 143


 6808 0a3e AB000000 		.4byte	0xab
 6809 0a42 05       		.uleb128 0x5
 6810 0a43 03       		.byte	0x3
 6811 0a44 00000000 		.4byte	flag_receive_ADC
 6812 0a48 20       		.uleb128 0x20
 6813 0a49 26030000 		.4byte	.LASF143
 6814 0a4d 05       		.byte	0x5
 6815 0a4e 26       		.byte	0x26
 6816 0a4f DB000000 		.4byte	0xdb
 6817 0a53 05       		.uleb128 0x5
 6818 0a54 03       		.byte	0x3
 6819 0a55 00000000 		.4byte	adc_result
 6820 0a59 20       		.uleb128 0x20
 6821 0a5a 62000000 		.4byte	.LASF144
 6822 0a5e 05       		.byte	0x5
 6823 0a5f 28       		.byte	0x28
 6824 0a60 AB000000 		.4byte	0xab
 6825 0a64 05       		.uleb128 0x5
 6826 0a65 03       		.byte	0x3
 6827 0a66 00000000 		.4byte	direction
 6828 0a6a 20       		.uleb128 0x20
 6829 0a6b 61060000 		.4byte	.LASF145
 6830 0a6f 05       		.byte	0x5
 6831 0a70 2B       		.byte	0x2b
 6832 0a71 AB000000 		.4byte	0xab
 6833 0a75 05       		.uleb128 0x5
 6834 0a76 03       		.byte	0x3
 6835 0a77 00000000 		.4byte	BIN_ENABLED
 6836 0a7b 20       		.uleb128 0x20
 6837 0a7c B1080000 		.4byte	.LASF146
 6838 0a80 05       		.byte	0x5
 6839 0a81 2D       		.byte	0x2d
 6840 0a82 AB000000 		.4byte	0xab
 6841 0a86 05       		.uleb128 0x5
 6842 0a87 03       		.byte	0x3
 6843 0a88 00000000 		.4byte	BT_ENABLED
 6844 0a8c 20       		.uleb128 0x20
 6845 0a8d 65020000 		.4byte	.LASF147
 6846 0a91 05       		.byte	0x5
 6847 0a92 32       		.byte	0x32
 6848 0a93 AB000000 		.4byte	0xab
 6849 0a97 05       		.uleb128 0x5
 6850 0a98 03       		.byte	0x3
 6851 0a99 00000000 		.4byte	flag_calc_wheelspeed
 6852 0a9d 20       		.uleb128 0x20
 6853 0a9e 93020000 		.4byte	.LASF148
 6854 0aa2 05       		.byte	0x5
 6855 0aa3 33       		.byte	0x33
 6856 0aa4 DB000000 		.4byte	0xdb
 6857 0aa8 05       		.uleb128 0x5
 6858 0aa9 03       		.byte	0x3
 6859 0aaa 00000000 		.4byte	quad_count1
 6860 0aae 20       		.uleb128 0x20
 6861 0aaf 9F020000 		.4byte	.LASF149
 6862 0ab3 05       		.byte	0x5
 6863 0ab4 34       		.byte	0x34
 6864 0ab5 DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 144


 6865 0ab9 05       		.uleb128 0x5
 6866 0aba 03       		.byte	0x3
 6867 0abb 00000000 		.4byte	quad_count2
 6868 0abf 20       		.uleb128 0x20
 6869 0ac0 31060000 		.4byte	.LASF150
 6870 0ac4 05       		.byte	0x5
 6871 0ac5 35       		.byte	0x35
 6872 0ac6 DB000000 		.4byte	0xdb
 6873 0aca 05       		.uleb128 0x5
 6874 0acb 03       		.byte	0x3
 6875 0acc 00000000 		.4byte	last_quad_count1
 6876 0ad0 20       		.uleb128 0x20
 6877 0ad1 42060000 		.4byte	.LASF151
 6878 0ad5 05       		.byte	0x5
 6879 0ad6 36       		.byte	0x36
 6880 0ad7 DB000000 		.4byte	0xdb
 6881 0adb 05       		.uleb128 0x5
 6882 0adc 03       		.byte	0x3
 6883 0add 00000000 		.4byte	last_quad_count2
 6884 0ae1 20       		.uleb128 0x20
 6885 0ae2 47090000 		.4byte	.LASF152
 6886 0ae6 05       		.byte	0x5
 6887 0ae7 37       		.byte	0x37
 6888 0ae8 DB000000 		.4byte	0xdb
 6889 0aec 05       		.uleb128 0x5
 6890 0aed 03       		.byte	0x3
 6891 0aee 00000000 		.4byte	quad_diff1
 6892 0af2 20       		.uleb128 0x20
 6893 0af3 52090000 		.4byte	.LASF153
 6894 0af7 05       		.byte	0x5
 6895 0af8 38       		.byte	0x38
 6896 0af9 DB000000 		.4byte	0xdb
 6897 0afd 05       		.uleb128 0x5
 6898 0afe 03       		.byte	0x3
 6899 0aff 00000000 		.4byte	quad_diff2
 6900 0b03 20       		.uleb128 0x20
 6901 0b04 A4010000 		.4byte	.LASF154
 6902 0b08 05       		.byte	0x5
 6903 0b09 39       		.byte	0x39
 6904 0b0a AB000000 		.4byte	0xab
 6905 0b0e 05       		.uleb128 0x5
 6906 0b0f 03       		.byte	0x3
 6907 0b10 00000000 		.4byte	deadzone
 6908 0b14 20       		.uleb128 0x20
 6909 0b15 0E090000 		.4byte	.LASF155
 6910 0b19 05       		.byte	0x5
 6911 0b1a 3C       		.byte	0x3c
 6912 0b1b DB000000 		.4byte	0xdb
 6913 0b1f 05       		.uleb128 0x5
 6914 0b20 03       		.byte	0x3
 6915 0b21 00000000 		.4byte	start_turn_count
 6916 0b25 20       		.uleb128 0x20
 6917 0b26 69080000 		.4byte	.LASF156
 6918 0b2a 05       		.byte	0x5
 6919 0b2b 3F       		.byte	0x3f
 6920 0b2c DB000000 		.4byte	0xdb
 6921 0b30 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 145


 6922 0b31 03       		.byte	0x3
 6923 0b32 00000000 		.4byte	left_duty_cycle
 6924 0b36 20       		.uleb128 0x20
 6925 0b37 0B030000 		.4byte	.LASF157
 6926 0b3b 05       		.byte	0x5
 6927 0b3c 40       		.byte	0x40
 6928 0b3d DB000000 		.4byte	0xdb
 6929 0b41 05       		.uleb128 0x5
 6930 0b42 03       		.byte	0x3
 6931 0b43 00000000 		.4byte	right_duty_cycle
 6932 0b47 20       		.uleb128 0x20
 6933 0b48 C4070000 		.4byte	.LASF158
 6934 0b4c 05       		.byte	0x5
 6935 0b4d 43       		.byte	0x43
 6936 0b4e DB000000 		.4byte	0xdb
 6937 0b52 05       		.uleb128 0x5
 6938 0b53 03       		.byte	0x3
 6939 0b54 00000000 		.4byte	leftSpeedLimit
 6940 0b58 20       		.uleb128 0x20
 6941 0b59 AB020000 		.4byte	.LASF159
 6942 0b5d 05       		.byte	0x5
 6943 0b5e 44       		.byte	0x44
 6944 0b5f DB000000 		.4byte	0xdb
 6945 0b63 05       		.uleb128 0x5
 6946 0b64 03       		.byte	0x3
 6947 0b65 00000000 		.4byte	rightSpeedLimit
 6948 0b69 20       		.uleb128 0x20
 6949 0b6a EB000000 		.4byte	.LASF160
 6950 0b6e 05       		.byte	0x5
 6951 0b6f 47       		.byte	0x47
 6952 0b70 DB000000 		.4byte	0xdb
 6953 0b74 05       		.uleb128 0x5
 6954 0b75 03       		.byte	0x3
 6955 0b76 00000000 		.4byte	target_distance_cm
 6956 0b7a 20       		.uleb128 0x20
 6957 0b7b 86080000 		.4byte	.LASF161
 6958 0b7f 05       		.byte	0x5
 6959 0b80 49       		.byte	0x49
 6960 0b81 DB000000 		.4byte	0xdb
 6961 0b85 05       		.uleb128 0x5
 6962 0b86 03       		.byte	0x3
 6963 0b87 00000000 		.4byte	accum_dist
 6964 0b8b 20       		.uleb128 0x20
 6965 0b8c A4050000 		.4byte	.LASF162
 6966 0b90 05       		.byte	0x5
 6967 0b91 4A       		.byte	0x4a
 6968 0b92 DB000000 		.4byte	0xdb
 6969 0b96 05       		.uleb128 0x5
 6970 0b97 03       		.byte	0x3
 6971 0b98 00000000 		.4byte	target_distance_quad
 6972 0b9c 20       		.uleb128 0x20
 6973 0b9d E3080000 		.4byte	.LASF163
 6974 0ba1 05       		.byte	0x5
 6975 0ba2 4B       		.byte	0x4b
 6976 0ba3 AB000000 		.4byte	0xab
 6977 0ba7 05       		.uleb128 0x5
 6978 0ba8 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 146


 6979 0ba9 00000000 		.4byte	reached_target
 6980 0bad 20       		.uleb128 0x20
 6981 0bae 25090000 		.4byte	.LASF164
 6982 0bb2 05       		.byte	0x5
 6983 0bb3 4C       		.byte	0x4c
 6984 0bb4 AB000000 		.4byte	0xab
 6985 0bb8 05       		.uleb128 0x5
 6986 0bb9 03       		.byte	0x3
 6987 0bba 00000000 		.4byte	overshot_target
 6988 0bbe 20       		.uleb128 0x20
 6989 0bbf E5010000 		.4byte	.LASF165
 6990 0bc3 05       		.byte	0x5
 6991 0bc4 4D       		.byte	0x4d
 6992 0bc5 E7000000 		.4byte	0xe7
 6993 0bc9 05       		.uleb128 0x5
 6994 0bca 03       		.byte	0x3
 6995 0bcb 00000000 		.4byte	quad_per_cm
 6996 0bcf 20       		.uleb128 0x20
 6997 0bd0 24080000 		.4byte	.LASF166
 6998 0bd4 05       		.byte	0x5
 6999 0bd5 50       		.byte	0x50
 7000 0bd6 AB000000 		.4byte	0xab
 7001 0bda 05       		.uleb128 0x5
 7002 0bdb 03       		.byte	0x3
 7003 0bdc 00000000 		.4byte	initial_pos_valid
 7004 0be0 20       		.uleb128 0x20
 7005 0be1 F4050000 		.4byte	.LASF167
 7006 0be5 05       		.byte	0x5
 7007 0be6 51       		.byte	0x51
 7008 0be7 DB000000 		.4byte	0xdb
 7009 0beb 05       		.uleb128 0x5
 7010 0bec 03       		.byte	0x3
 7011 0bed 00000000 		.4byte	initial_x_pos
 7012 0bf1 20       		.uleb128 0x20
 7013 0bf2 47000000 		.4byte	.LASF168
 7014 0bf6 05       		.byte	0x5
 7015 0bf7 52       		.byte	0x52
 7016 0bf8 DB000000 		.4byte	0xdb
 7017 0bfc 05       		.uleb128 0x5
 7018 0bfd 03       		.byte	0x3
 7019 0bfe 00000000 		.4byte	initial_y_pos
 7020 0c02 20       		.uleb128 0x20
 7021 0c03 DC040000 		.4byte	.LASF169
 7022 0c07 05       		.byte	0x5
 7023 0c08 55       		.byte	0x55
 7024 0c09 AB000000 		.4byte	0xab
 7025 0c0d 05       		.uleb128 0x5
 7026 0c0e 03       		.byte	0x3
 7027 0c0f 00000000 		.4byte	brakeFlag
 7028 0c13 20       		.uleb128 0x20
 7029 0c14 1C060000 		.4byte	.LASF170
 7030 0c18 05       		.byte	0x5
 7031 0c19 56       		.byte	0x56
 7032 0c1a AB000000 		.4byte	0xab
 7033 0c1e 05       		.uleb128 0x5
 7034 0c1f 03       		.byte	0x3
 7035 0c20 00000000 		.4byte	portOpen
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 147


 7036 0c24 07       		.uleb128 0x7
 7037 0c25 AB000000 		.4byte	0xab
 7038 0c29 340C0000 		.4byte	0xc34
 7039 0c2d 08       		.uleb128 0x8
 7040 0c2e 81000000 		.4byte	0x81
 7041 0c32 04       		.byte	0x4
 7042 0c33 00       		.byte	0
 7043 0c34 20       		.uleb128 0x20
 7044 0c35 65010000 		.4byte	.LASF171
 7045 0c39 05       		.byte	0x5
 7046 0c3a 59       		.byte	0x59
 7047 0c3b 240C0000 		.4byte	0xc24
 7048 0c3f 05       		.uleb128 0x5
 7049 0c40 03       		.byte	0x3
 7050 0c41 00000000 		.4byte	frontSensors
 7051 0c45 20       		.uleb128 0x20
 7052 0c46 87020000 		.4byte	.LASF172
 7053 0c4a 05       		.byte	0x5
 7054 0c4b 5D       		.byte	0x5d
 7055 0c4c DB000000 		.4byte	0xdb
 7056 0c50 05       		.uleb128 0x5
 7057 0c51 03       		.byte	0x3
 7058 0c52 00000000 		.4byte	prevVoltage
 7059 0c56 20       		.uleb128 0x20
 7060 0c57 47080000 		.4byte	.LASF173
 7061 0c5b 05       		.byte	0x5
 7062 0c5c 5E       		.byte	0x5e
 7063 0c5d DB000000 		.4byte	0xdb
 7064 0c61 05       		.uleb128 0x5
 7065 0c62 03       		.byte	0x3
 7066 0c63 00000000 		.4byte	prevVoltage2
 7067 0c67 07       		.uleb128 0x7
 7068 0c68 8E000000 		.4byte	0x8e
 7069 0c6c 770C0000 		.4byte	0xc77
 7070 0c70 08       		.uleb128 0x8
 7071 0c71 81000000 		.4byte	0x81
 7072 0c75 3F       		.byte	0x3f
 7073 0c76 00       		.byte	0
 7074 0c77 20       		.uleb128 0x20
 7075 0c78 AE070000 		.4byte	.LASF174
 7076 0c7c 05       		.byte	0x5
 7077 0c7d 64       		.byte	0x64
 7078 0c7e 670C0000 		.4byte	0xc67
 7079 0c82 05       		.uleb128 0x5
 7080 0c83 03       		.byte	0x3
 7081 0c84 00000000 		.4byte	displaystring
 7082 0c88 20       		.uleb128 0x20
 7083 0c89 60020000 		.4byte	.LASF175
 7084 0c8d 05       		.byte	0x5
 7085 0c8e 65       		.byte	0x65
 7086 0c8f 670C0000 		.4byte	0xc67
 7087 0c93 05       		.uleb128 0x5
 7088 0c94 03       		.byte	0x3
 7089 0c95 00000000 		.4byte	line
 7090 0c99 20       		.uleb128 0x20
 7091 0c9a 93000000 		.4byte	.LASF176
 7092 0c9e 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 148


 7093 0c9f 65       		.byte	0x65
 7094 0ca0 670C0000 		.4byte	0xc67
 7095 0ca4 05       		.uleb128 0x5
 7096 0ca5 03       		.byte	0x3
 7097 0ca6 00000000 		.4byte	entry
 7098 0caa 07       		.uleb128 0x7
 7099 0cab AB000000 		.4byte	0xab
 7100 0caf BA0C0000 		.4byte	0xcba
 7101 0cb3 08       		.uleb128 0x8
 7102 0cb4 81000000 		.4byte	0x81
 7103 0cb8 3F       		.byte	0x3f
 7104 0cb9 00       		.byte	0
 7105 0cba 20       		.uleb128 0x20
 7106 0cbb 0A080000 		.4byte	.LASF177
 7107 0cbf 05       		.byte	0x5
 7108 0cc0 66       		.byte	0x66
 7109 0cc1 AA0C0000 		.4byte	0xcaa
 7110 0cc5 05       		.uleb128 0x5
 7111 0cc6 03       		.byte	0x3
 7112 0cc7 00000000 		.4byte	usbBuffer
 7113 0ccb 20       		.uleb128 0x20
 7114 0ccc 89010000 		.4byte	.LASF178
 7115 0cd0 05       		.byte	0x5
 7116 0cd1 7B       		.byte	0x7b
 7117 0cd2 86010000 		.4byte	0x186
 7118 0cd6 05       		.uleb128 0x5
 7119 0cd7 03       		.byte	0x3
 7120 0cd8 00000000 		.4byte	buffer_state
 7121 0cdc 20       		.uleb128 0x20
 7122 0cdd A2040000 		.4byte	.LASF179
 7123 0ce1 05       		.byte	0x5
 7124 0ce2 7C       		.byte	0x7c
 7125 0ce3 86010000 		.4byte	0x186
 7126 0ce7 05       		.uleb128 0x5
 7127 0ce8 03       		.byte	0x3
 7128 0ce9 00000000 		.4byte	system_state
 7129 0ced 20       		.uleb128 0x20
 7130 0cee F9040000 		.4byte	.LASF180
 7131 0cf2 05       		.byte	0x5
 7132 0cf3 7E       		.byte	0x7e
 7133 0cf4 0C010000 		.4byte	0x10c
 7134 0cf8 05       		.uleb128 0x5
 7135 0cf9 03       		.byte	0x3
 7136 0cfa 00000000 		.4byte	prev_movement_state
 7137 0cfe 20       		.uleb128 0x20
 7138 0cff 9A080000 		.4byte	.LASF181
 7139 0d03 05       		.byte	0x5
 7140 0d04 7F       		.byte	0x7f
 7141 0d05 0C010000 		.4byte	0x10c
 7142 0d09 05       		.uleb128 0x5
 7143 0d0a 03       		.byte	0x3
 7144 0d0b 00000000 		.4byte	movement_state
 7145 0d0f 20       		.uleb128 0x20
 7146 0d10 D7020000 		.4byte	.LASF182
 7147 0d14 05       		.byte	0x5
 7148 0d15 80       		.byte	0x80
 7149 0d16 49010000 		.4byte	0x149
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 149


 7150 0d1a 05       		.uleb128 0x5
 7151 0d1b 03       		.byte	0x3
 7152 0d1c 00000000 		.4byte	track_mode
 7153 0d20 20       		.uleb128 0x20
 7154 0d21 E5060000 		.4byte	.LASF183
 7155 0d25 05       		.byte	0x5
 7156 0d26 82       		.byte	0x82
 7157 0d27 AB000000 		.4byte	0xab
 7158 0d2b 05       		.uleb128 0x5
 7159 0d2c 03       		.byte	0x3
 7160 0d2d 00000000 		.4byte	byteCount
 7161 0d31 07       		.uleb128 0x7
 7162 0d32 8E000000 		.4byte	0x8e
 7163 0d36 410D0000 		.4byte	0xd41
 7164 0d3a 08       		.uleb128 0x8
 7165 0d3b 81000000 		.4byte	0x81
 7166 0d3f 01       		.byte	0x1
 7167 0d40 00       		.byte	0
 7168 0d41 20       		.uleb128 0x20
 7169 0d42 E4070000 		.4byte	.LASF184
 7170 0d46 05       		.byte	0x5
 7171 0d47 83       		.byte	0x83
 7172 0d48 310D0000 		.4byte	0xd31
 7173 0d4c 05       		.uleb128 0x5
 7174 0d4d 03       		.byte	0x3
 7175 0d4e 00000000 		.4byte	packet
 7176 0d52 20       		.uleb128 0x20
 7177 0d53 1F090000 		.4byte	.LASF185
 7178 0d57 05       		.byte	0x5
 7179 0d58 87       		.byte	0x87
 7180 0d59 EE000000 		.4byte	0xee
 7181 0d5d 05       		.uleb128 0x5
 7182 0d5e 03       		.byte	0x3
 7183 0d5f 00000000 		.4byte	speed
 7184 0d63 20       		.uleb128 0x20
 7185 0d64 DA030000 		.4byte	.LASF186
 7186 0d68 01       		.byte	0x1
 7187 0d69 25       		.byte	0x25
 7188 0d6a B7000000 		.4byte	0xb7
 7189 0d6e 05       		.uleb128 0x5
 7190 0d6f 03       		.byte	0x3
 7191 0d70 00000000 		.4byte	instructionCount
 7192 0d74 20       		.uleb128 0x20
 7193 0d75 31030000 		.4byte	.LASF187
 7194 0d79 01       		.byte	0x1
 7195 0d7a 27       		.byte	0x27
 7196 0d7b A0000000 		.4byte	0xa0
 7197 0d7f 05       		.uleb128 0x5
 7198 0d80 03       		.byte	0x3
 7199 0d81 00000000 		.4byte	sensorsDisabled
 7200 0d85 07       		.uleb128 0x7
 7201 0d86 A0000000 		.4byte	0xa0
 7202 0d8a 9B0D0000 		.4byte	0xd9b
 7203 0d8e 08       		.uleb128 0x8
 7204 0d8f 81000000 		.4byte	0x81
 7205 0d93 0E       		.byte	0xe
 7206 0d94 08       		.uleb128 0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 150


 7207 0d95 81000000 		.4byte	0x81
 7208 0d99 12       		.byte	0x12
 7209 0d9a 00       		.byte	0
 7210 0d9b 1F       		.uleb128 0x1f
 7211 0d9c 6D617000 		.ascii	"map\000"
 7212 0da0 01       		.byte	0x1
 7213 0da1 43       		.byte	0x43
 7214 0da2 850D0000 		.4byte	0xd85
 7215 0da6 05       		.uleb128 0x5
 7216 0da7 03       		.byte	0x3
 7217 0da8 00000000 		.4byte	map
 7218 0dac 07       		.uleb128 0x7
 7219 0dad A0000000 		.4byte	0xa0
 7220 0db1 C20D0000 		.4byte	0xdc2
 7221 0db5 08       		.uleb128 0x8
 7222 0db6 81000000 		.4byte	0x81
 7223 0dba 05       		.byte	0x5
 7224 0dbb 08       		.uleb128 0x8
 7225 0dbc 81000000 		.4byte	0x81
 7226 0dc0 01       		.byte	0x1
 7227 0dc1 00       		.byte	0
 7228 0dc2 20       		.uleb128 0x20
 7229 0dc3 71070000 		.4byte	.LASF188
 7230 0dc7 01       		.byte	0x1
 7231 0dc8 64       		.byte	0x64
 7232 0dc9 AC0D0000 		.4byte	0xdac
 7233 0dcd 05       		.uleb128 0x5
 7234 0dce 03       		.byte	0x3
 7235 0dcf 00000000 		.4byte	food_list
 7236 0dd3 07       		.uleb128 0x7
 7237 0dd4 A0000000 		.4byte	0xa0
 7238 0dd8 EA0D0000 		.4byte	0xdea
 7239 0ddc 21       		.uleb128 0x21
 7240 0ddd 81000000 		.4byte	0x81
 7241 0de1 1F03     		.2byte	0x31f
 7242 0de3 08       		.uleb128 0x8
 7243 0de4 81000000 		.4byte	0x81
 7244 0de8 02       		.byte	0x2
 7245 0de9 00       		.byte	0
 7246 0dea 20       		.uleb128 0x20
 7247 0deb 6C000000 		.4byte	.LASF189
 7248 0def 01       		.byte	0x1
 7249 0df0 2B       		.byte	0x2b
 7250 0df1 D30D0000 		.4byte	0xdd3
 7251 0df5 05       		.uleb128 0x5
 7252 0df6 03       		.byte	0x3
 7253 0df7 00000000 		.4byte	path
 7254 0dfb 20       		.uleb128 0x20
 7255 0dfc 5D090000 		.4byte	.LASF190
 7256 0e00 01       		.byte	0x1
 7257 0e01 2C       		.byte	0x2c
 7258 0e02 F5000000 		.4byte	0xf5
 7259 0e06 05       		.uleb128 0x5
 7260 0e07 03       		.byte	0x3
 7261 0e08 00000000 		.4byte	start
 7262 0e0c 20       		.uleb128 0x20
 7263 0e0d E8020000 		.4byte	.LASF191
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 151


 7264 0e11 01       		.byte	0x1
 7265 0e12 2D       		.byte	0x2d
 7266 0e13 F5000000 		.4byte	0xf5
 7267 0e17 05       		.uleb128 0x5
 7268 0e18 03       		.byte	0x3
 7269 0e19 00000000 		.4byte	destination
 7270 0e1d 20       		.uleb128 0x20
 7271 0e1e B0000000 		.4byte	.LASF192
 7272 0e22 01       		.byte	0x1
 7273 0e23 29       		.byte	0x29
 7274 0e24 A0000000 		.4byte	0xa0
 7275 0e28 05       		.uleb128 0x5
 7276 0e29 03       		.byte	0x3
 7277 0e2a 00000000 		.4byte	robot_direction
 7278 0e2e 20       		.uleb128 0x20
 7279 0e2f 42070000 		.4byte	.LASF193
 7280 0e33 07       		.byte	0x7
 7281 0e34 22       		.byte	0x22
 7282 0e35 A0000000 		.4byte	0xa0
 7283 0e39 05       		.uleb128 0x5
 7284 0e3a 03       		.byte	0x3
 7285 0e3b 00000000 		.4byte	tracked_direction
 7286 0e3f 20       		.uleb128 0x20
 7287 0e40 86030000 		.4byte	.LASF194
 7288 0e44 01       		.byte	0x1
 7289 0e45 69       		.byte	0x69
 7290 0e46 A0000000 		.4byte	0xa0
 7291 0e4a 05       		.uleb128 0x5
 7292 0e4b 03       		.byte	0x3
 7293 0e4c 00000000 		.4byte	food_length
 7294 0e50 07       		.uleb128 0x7
 7295 0e51 8E000000 		.4byte	0x8e
 7296 0e55 610E0000 		.4byte	0xe61
 7297 0e59 21       		.uleb128 0x21
 7298 0e5a 81000000 		.4byte	0x81
 7299 0e5e 1F03     		.2byte	0x31f
 7300 0e60 00       		.byte	0
 7301 0e61 20       		.uleb128 0x20
 7302 0e62 5E070000 		.4byte	.LASF195
 7303 0e66 01       		.byte	0x1
 7304 0e67 24       		.byte	0x24
 7305 0e68 500E0000 		.4byte	0xe50
 7306 0e6c 05       		.uleb128 0x5
 7307 0e6d 03       		.byte	0x3
 7308 0e6e 00000000 		.4byte	instructions
 7309 0e72 20       		.uleb128 0x20
 7310 0e73 BB020000 		.4byte	.LASF196
 7311 0e77 01       		.byte	0x1
 7312 0e78 26       		.byte	0x26
 7313 0e79 B7000000 		.4byte	0xb7
 7314 0e7d 05       		.uleb128 0x5
 7315 0e7e 03       		.byte	0x3
 7316 0e7f 00000000 		.4byte	instructionLength
 7317 0e83 22       		.uleb128 0x22
 7318 0e84 39000000 		.4byte	.LASF197
 7319 0e88 01       		.byte	0x1
 7320 0e89 2304     		.2byte	0x423
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 152


 7321 0e8b B7000000 		.4byte	0xb7
 7322 0e8f 05       		.uleb128 0x5
 7323 0e90 03       		.byte	0x3
 7324 0e91 00000000 		.4byte	leftTurnCount
 7325 0e95 22       		.uleb128 0x22
 7326 0e96 47040000 		.4byte	.LASF198
 7327 0e9a 01       		.byte	0x1
 7328 0e9b 2404     		.2byte	0x424
 7329 0e9d B7000000 		.4byte	0xb7
 7330 0ea1 05       		.uleb128 0x5
 7331 0ea2 03       		.byte	0x3
 7332 0ea3 00000000 		.4byte	rightTurnCount
 7333 0ea7 00       		.byte	0
 7334              		.section	.debug_abbrev,"",%progbits
 7335              	.Ldebug_abbrev0:
 7336 0000 01       		.uleb128 0x1
 7337 0001 11       		.uleb128 0x11
 7338 0002 01       		.byte	0x1
 7339 0003 25       		.uleb128 0x25
 7340 0004 0E       		.uleb128 0xe
 7341 0005 13       		.uleb128 0x13
 7342 0006 0B       		.uleb128 0xb
 7343 0007 03       		.uleb128 0x3
 7344 0008 0E       		.uleb128 0xe
 7345 0009 1B       		.uleb128 0x1b
 7346 000a 0E       		.uleb128 0xe
 7347 000b 55       		.uleb128 0x55
 7348 000c 17       		.uleb128 0x17
 7349 000d 11       		.uleb128 0x11
 7350 000e 01       		.uleb128 0x1
 7351 000f 10       		.uleb128 0x10
 7352 0010 17       		.uleb128 0x17
 7353 0011 00       		.byte	0
 7354 0012 00       		.byte	0
 7355 0013 02       		.uleb128 0x2
 7356 0014 24       		.uleb128 0x24
 7357 0015 00       		.byte	0
 7358 0016 0B       		.uleb128 0xb
 7359 0017 0B       		.uleb128 0xb
 7360 0018 3E       		.uleb128 0x3e
 7361 0019 0B       		.uleb128 0xb
 7362 001a 03       		.uleb128 0x3
 7363 001b 0E       		.uleb128 0xe
 7364 001c 00       		.byte	0
 7365 001d 00       		.byte	0
 7366 001e 03       		.uleb128 0x3
 7367 001f 16       		.uleb128 0x16
 7368 0020 00       		.byte	0
 7369 0021 03       		.uleb128 0x3
 7370 0022 0E       		.uleb128 0xe
 7371 0023 3A       		.uleb128 0x3a
 7372 0024 0B       		.uleb128 0xb
 7373 0025 3B       		.uleb128 0x3b
 7374 0026 0B       		.uleb128 0xb
 7375 0027 49       		.uleb128 0x49
 7376 0028 13       		.uleb128 0x13
 7377 0029 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 153


 7378 002a 00       		.byte	0
 7379 002b 04       		.uleb128 0x4
 7380 002c 24       		.uleb128 0x24
 7381 002d 00       		.byte	0
 7382 002e 0B       		.uleb128 0xb
 7383 002f 0B       		.uleb128 0xb
 7384 0030 3E       		.uleb128 0x3e
 7385 0031 0B       		.uleb128 0xb
 7386 0032 03       		.uleb128 0x3
 7387 0033 08       		.uleb128 0x8
 7388 0034 00       		.byte	0
 7389 0035 00       		.byte	0
 7390 0036 05       		.uleb128 0x5
 7391 0037 0F       		.uleb128 0xf
 7392 0038 00       		.byte	0
 7393 0039 0B       		.uleb128 0xb
 7394 003a 0B       		.uleb128 0xb
 7395 003b 49       		.uleb128 0x49
 7396 003c 13       		.uleb128 0x13
 7397 003d 00       		.byte	0
 7398 003e 00       		.byte	0
 7399 003f 06       		.uleb128 0x6
 7400 0040 16       		.uleb128 0x16
 7401 0041 00       		.byte	0
 7402 0042 03       		.uleb128 0x3
 7403 0043 0E       		.uleb128 0xe
 7404 0044 3A       		.uleb128 0x3a
 7405 0045 0B       		.uleb128 0xb
 7406 0046 3B       		.uleb128 0x3b
 7407 0047 05       		.uleb128 0x5
 7408 0048 49       		.uleb128 0x49
 7409 0049 13       		.uleb128 0x13
 7410 004a 00       		.byte	0
 7411 004b 00       		.byte	0
 7412 004c 07       		.uleb128 0x7
 7413 004d 01       		.uleb128 0x1
 7414 004e 01       		.byte	0x1
 7415 004f 49       		.uleb128 0x49
 7416 0050 13       		.uleb128 0x13
 7417 0051 01       		.uleb128 0x1
 7418 0052 13       		.uleb128 0x13
 7419 0053 00       		.byte	0
 7420 0054 00       		.byte	0
 7421 0055 08       		.uleb128 0x8
 7422 0056 21       		.uleb128 0x21
 7423 0057 00       		.byte	0
 7424 0058 49       		.uleb128 0x49
 7425 0059 13       		.uleb128 0x13
 7426 005a 2F       		.uleb128 0x2f
 7427 005b 0B       		.uleb128 0xb
 7428 005c 00       		.byte	0
 7429 005d 00       		.byte	0
 7430 005e 09       		.uleb128 0x9
 7431 005f 04       		.uleb128 0x4
 7432 0060 01       		.byte	0x1
 7433 0061 03       		.uleb128 0x3
 7434 0062 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 154


 7435 0063 0B       		.uleb128 0xb
 7436 0064 0B       		.uleb128 0xb
 7437 0065 3A       		.uleb128 0x3a
 7438 0066 0B       		.uleb128 0xb
 7439 0067 3B       		.uleb128 0x3b
 7440 0068 0B       		.uleb128 0xb
 7441 0069 01       		.uleb128 0x1
 7442 006a 13       		.uleb128 0x13
 7443 006b 00       		.byte	0
 7444 006c 00       		.byte	0
 7445 006d 0A       		.uleb128 0xa
 7446 006e 28       		.uleb128 0x28
 7447 006f 00       		.byte	0
 7448 0070 03       		.uleb128 0x3
 7449 0071 0E       		.uleb128 0xe
 7450 0072 1C       		.uleb128 0x1c
 7451 0073 0D       		.uleb128 0xd
 7452 0074 00       		.byte	0
 7453 0075 00       		.byte	0
 7454 0076 0B       		.uleb128 0xb
 7455 0077 13       		.uleb128 0x13
 7456 0078 01       		.byte	0x1
 7457 0079 03       		.uleb128 0x3
 7458 007a 0E       		.uleb128 0xe
 7459 007b 0B       		.uleb128 0xb
 7460 007c 0B       		.uleb128 0xb
 7461 007d 3A       		.uleb128 0x3a
 7462 007e 0B       		.uleb128 0xb
 7463 007f 3B       		.uleb128 0x3b
 7464 0080 0B       		.uleb128 0xb
 7465 0081 01       		.uleb128 0x1
 7466 0082 13       		.uleb128 0x13
 7467 0083 00       		.byte	0
 7468 0084 00       		.byte	0
 7469 0085 0C       		.uleb128 0xc
 7470 0086 0D       		.uleb128 0xd
 7471 0087 00       		.byte	0
 7472 0088 03       		.uleb128 0x3
 7473 0089 0E       		.uleb128 0xe
 7474 008a 3A       		.uleb128 0x3a
 7475 008b 0B       		.uleb128 0xb
 7476 008c 3B       		.uleb128 0x3b
 7477 008d 0B       		.uleb128 0xb
 7478 008e 49       		.uleb128 0x49
 7479 008f 13       		.uleb128 0x13
 7480 0090 38       		.uleb128 0x38
 7481 0091 0B       		.uleb128 0xb
 7482 0092 00       		.byte	0
 7483 0093 00       		.byte	0
 7484 0094 0D       		.uleb128 0xd
 7485 0095 2E       		.uleb128 0x2e
 7486 0096 00       		.byte	0
 7487 0097 3F       		.uleb128 0x3f
 7488 0098 19       		.uleb128 0x19
 7489 0099 03       		.uleb128 0x3
 7490 009a 0E       		.uleb128 0xe
 7491 009b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 155


 7492 009c 0B       		.uleb128 0xb
 7493 009d 3B       		.uleb128 0x3b
 7494 009e 0B       		.uleb128 0xb
 7495 009f 27       		.uleb128 0x27
 7496 00a0 19       		.uleb128 0x19
 7497 00a1 11       		.uleb128 0x11
 7498 00a2 01       		.uleb128 0x1
 7499 00a3 12       		.uleb128 0x12
 7500 00a4 06       		.uleb128 0x6
 7501 00a5 40       		.uleb128 0x40
 7502 00a6 18       		.uleb128 0x18
 7503 00a7 9742     		.uleb128 0x2117
 7504 00a9 19       		.uleb128 0x19
 7505 00aa 00       		.byte	0
 7506 00ab 00       		.byte	0
 7507 00ac 0E       		.uleb128 0xe
 7508 00ad 2E       		.uleb128 0x2e
 7509 00ae 00       		.byte	0
 7510 00af 3F       		.uleb128 0x3f
 7511 00b0 19       		.uleb128 0x19
 7512 00b1 03       		.uleb128 0x3
 7513 00b2 0E       		.uleb128 0xe
 7514 00b3 3A       		.uleb128 0x3a
 7515 00b4 0B       		.uleb128 0xb
 7516 00b5 3B       		.uleb128 0x3b
 7517 00b6 0B       		.uleb128 0xb
 7518 00b7 27       		.uleb128 0x27
 7519 00b8 19       		.uleb128 0x19
 7520 00b9 11       		.uleb128 0x11
 7521 00ba 01       		.uleb128 0x1
 7522 00bb 12       		.uleb128 0x12
 7523 00bc 06       		.uleb128 0x6
 7524 00bd 40       		.uleb128 0x40
 7525 00be 18       		.uleb128 0x18
 7526 00bf 9642     		.uleb128 0x2116
 7527 00c1 19       		.uleb128 0x19
 7528 00c2 00       		.byte	0
 7529 00c3 00       		.byte	0
 7530 00c4 0F       		.uleb128 0xf
 7531 00c5 2E       		.uleb128 0x2e
 7532 00c6 01       		.byte	0x1
 7533 00c7 3F       		.uleb128 0x3f
 7534 00c8 19       		.uleb128 0x19
 7535 00c9 03       		.uleb128 0x3
 7536 00ca 0E       		.uleb128 0xe
 7537 00cb 3A       		.uleb128 0x3a
 7538 00cc 0B       		.uleb128 0xb
 7539 00cd 3B       		.uleb128 0x3b
 7540 00ce 0B       		.uleb128 0xb
 7541 00cf 27       		.uleb128 0x27
 7542 00d0 19       		.uleb128 0x19
 7543 00d1 11       		.uleb128 0x11
 7544 00d2 01       		.uleb128 0x1
 7545 00d3 12       		.uleb128 0x12
 7546 00d4 06       		.uleb128 0x6
 7547 00d5 40       		.uleb128 0x40
 7548 00d6 18       		.uleb128 0x18
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 156


 7549 00d7 9642     		.uleb128 0x2116
 7550 00d9 19       		.uleb128 0x19
 7551 00da 01       		.uleb128 0x1
 7552 00db 13       		.uleb128 0x13
 7553 00dc 00       		.byte	0
 7554 00dd 00       		.byte	0
 7555 00de 10       		.uleb128 0x10
 7556 00df 0B       		.uleb128 0xb
 7557 00e0 01       		.byte	0x1
 7558 00e1 11       		.uleb128 0x11
 7559 00e2 01       		.uleb128 0x1
 7560 00e3 12       		.uleb128 0x12
 7561 00e4 06       		.uleb128 0x6
 7562 00e5 01       		.uleb128 0x1
 7563 00e6 13       		.uleb128 0x13
 7564 00e7 00       		.byte	0
 7565 00e8 00       		.byte	0
 7566 00e9 11       		.uleb128 0x11
 7567 00ea 34       		.uleb128 0x34
 7568 00eb 00       		.byte	0
 7569 00ec 03       		.uleb128 0x3
 7570 00ed 0E       		.uleb128 0xe
 7571 00ee 3A       		.uleb128 0x3a
 7572 00ef 0B       		.uleb128 0xb
 7573 00f0 3B       		.uleb128 0x3b
 7574 00f1 0B       		.uleb128 0xb
 7575 00f2 49       		.uleb128 0x49
 7576 00f3 13       		.uleb128 0x13
 7577 00f4 02       		.uleb128 0x2
 7578 00f5 18       		.uleb128 0x18
 7579 00f6 00       		.byte	0
 7580 00f7 00       		.byte	0
 7581 00f8 12       		.uleb128 0x12
 7582 00f9 0B       		.uleb128 0xb
 7583 00fa 01       		.byte	0x1
 7584 00fb 11       		.uleb128 0x11
 7585 00fc 01       		.uleb128 0x1
 7586 00fd 12       		.uleb128 0x12
 7587 00fe 06       		.uleb128 0x6
 7588 00ff 00       		.byte	0
 7589 0100 00       		.byte	0
 7590 0101 13       		.uleb128 0x13
 7591 0102 2E       		.uleb128 0x2e
 7592 0103 01       		.byte	0x1
 7593 0104 3F       		.uleb128 0x3f
 7594 0105 19       		.uleb128 0x19
 7595 0106 03       		.uleb128 0x3
 7596 0107 0E       		.uleb128 0xe
 7597 0108 3A       		.uleb128 0x3a
 7598 0109 0B       		.uleb128 0xb
 7599 010a 3B       		.uleb128 0x3b
 7600 010b 0B       		.uleb128 0xb
 7601 010c 49       		.uleb128 0x49
 7602 010d 13       		.uleb128 0x13
 7603 010e 11       		.uleb128 0x11
 7604 010f 01       		.uleb128 0x1
 7605 0110 12       		.uleb128 0x12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 157


 7606 0111 06       		.uleb128 0x6
 7607 0112 40       		.uleb128 0x40
 7608 0113 18       		.uleb128 0x18
 7609 0114 9642     		.uleb128 0x2116
 7610 0116 19       		.uleb128 0x19
 7611 0117 01       		.uleb128 0x1
 7612 0118 13       		.uleb128 0x13
 7613 0119 00       		.byte	0
 7614 011a 00       		.byte	0
 7615 011b 14       		.uleb128 0x14
 7616 011c 34       		.uleb128 0x34
 7617 011d 00       		.byte	0
 7618 011e 03       		.uleb128 0x3
 7619 011f 0E       		.uleb128 0xe
 7620 0120 3A       		.uleb128 0x3a
 7621 0121 0B       		.uleb128 0xb
 7622 0122 3B       		.uleb128 0x3b
 7623 0123 05       		.uleb128 0x5
 7624 0124 49       		.uleb128 0x49
 7625 0125 13       		.uleb128 0x13
 7626 0126 02       		.uleb128 0x2
 7627 0127 18       		.uleb128 0x18
 7628 0128 00       		.byte	0
 7629 0129 00       		.byte	0
 7630 012a 15       		.uleb128 0x15
 7631 012b 34       		.uleb128 0x34
 7632 012c 00       		.byte	0
 7633 012d 03       		.uleb128 0x3
 7634 012e 08       		.uleb128 0x8
 7635 012f 3A       		.uleb128 0x3a
 7636 0130 0B       		.uleb128 0xb
 7637 0131 3B       		.uleb128 0x3b
 7638 0132 05       		.uleb128 0x5
 7639 0133 49       		.uleb128 0x49
 7640 0134 13       		.uleb128 0x13
 7641 0135 02       		.uleb128 0x2
 7642 0136 18       		.uleb128 0x18
 7643 0137 00       		.byte	0
 7644 0138 00       		.byte	0
 7645 0139 16       		.uleb128 0x16
 7646 013a 2E       		.uleb128 0x2e
 7647 013b 01       		.byte	0x1
 7648 013c 3F       		.uleb128 0x3f
 7649 013d 19       		.uleb128 0x19
 7650 013e 03       		.uleb128 0x3
 7651 013f 0E       		.uleb128 0xe
 7652 0140 3A       		.uleb128 0x3a
 7653 0141 0B       		.uleb128 0xb
 7654 0142 3B       		.uleb128 0x3b
 7655 0143 05       		.uleb128 0x5
 7656 0144 11       		.uleb128 0x11
 7657 0145 01       		.uleb128 0x1
 7658 0146 12       		.uleb128 0x12
 7659 0147 06       		.uleb128 0x6
 7660 0148 40       		.uleb128 0x40
 7661 0149 18       		.uleb128 0x18
 7662 014a 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 158


 7663 014c 19       		.uleb128 0x19
 7664 014d 01       		.uleb128 0x1
 7665 014e 13       		.uleb128 0x13
 7666 014f 00       		.byte	0
 7667 0150 00       		.byte	0
 7668 0151 17       		.uleb128 0x17
 7669 0152 2E       		.uleb128 0x2e
 7670 0153 01       		.byte	0x1
 7671 0154 3F       		.uleb128 0x3f
 7672 0155 19       		.uleb128 0x19
 7673 0156 03       		.uleb128 0x3
 7674 0157 0E       		.uleb128 0xe
 7675 0158 3A       		.uleb128 0x3a
 7676 0159 0B       		.uleb128 0xb
 7677 015a 3B       		.uleb128 0x3b
 7678 015b 05       		.uleb128 0x5
 7679 015c 27       		.uleb128 0x27
 7680 015d 19       		.uleb128 0x19
 7681 015e 11       		.uleb128 0x11
 7682 015f 01       		.uleb128 0x1
 7683 0160 12       		.uleb128 0x12
 7684 0161 06       		.uleb128 0x6
 7685 0162 40       		.uleb128 0x40
 7686 0163 18       		.uleb128 0x18
 7687 0164 9642     		.uleb128 0x2116
 7688 0166 19       		.uleb128 0x19
 7689 0167 01       		.uleb128 0x1
 7690 0168 13       		.uleb128 0x13
 7691 0169 00       		.byte	0
 7692 016a 00       		.byte	0
 7693 016b 18       		.uleb128 0x18
 7694 016c 05       		.uleb128 0x5
 7695 016d 00       		.byte	0
 7696 016e 03       		.uleb128 0x3
 7697 016f 08       		.uleb128 0x8
 7698 0170 3A       		.uleb128 0x3a
 7699 0171 0B       		.uleb128 0xb
 7700 0172 3B       		.uleb128 0x3b
 7701 0173 05       		.uleb128 0x5
 7702 0174 49       		.uleb128 0x49
 7703 0175 13       		.uleb128 0x13
 7704 0176 02       		.uleb128 0x2
 7705 0177 18       		.uleb128 0x18
 7706 0178 00       		.byte	0
 7707 0179 00       		.byte	0
 7708 017a 19       		.uleb128 0x19
 7709 017b 2E       		.uleb128 0x2e
 7710 017c 01       		.byte	0x1
 7711 017d 3F       		.uleb128 0x3f
 7712 017e 19       		.uleb128 0x19
 7713 017f 03       		.uleb128 0x3
 7714 0180 0E       		.uleb128 0xe
 7715 0181 3A       		.uleb128 0x3a
 7716 0182 0B       		.uleb128 0xb
 7717 0183 3B       		.uleb128 0x3b
 7718 0184 05       		.uleb128 0x5
 7719 0185 11       		.uleb128 0x11
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 159


 7720 0186 01       		.uleb128 0x1
 7721 0187 12       		.uleb128 0x12
 7722 0188 06       		.uleb128 0x6
 7723 0189 40       		.uleb128 0x40
 7724 018a 18       		.uleb128 0x18
 7725 018b 9642     		.uleb128 0x2116
 7726 018d 19       		.uleb128 0x19
 7727 018e 01       		.uleb128 0x1
 7728 018f 13       		.uleb128 0x13
 7729 0190 00       		.byte	0
 7730 0191 00       		.byte	0
 7731 0192 1A       		.uleb128 0x1a
 7732 0193 05       		.uleb128 0x5
 7733 0194 00       		.byte	0
 7734 0195 03       		.uleb128 0x3
 7735 0196 0E       		.uleb128 0xe
 7736 0197 3A       		.uleb128 0x3a
 7737 0198 0B       		.uleb128 0xb
 7738 0199 3B       		.uleb128 0x3b
 7739 019a 05       		.uleb128 0x5
 7740 019b 49       		.uleb128 0x49
 7741 019c 13       		.uleb128 0x13
 7742 019d 02       		.uleb128 0x2
 7743 019e 18       		.uleb128 0x18
 7744 019f 00       		.byte	0
 7745 01a0 00       		.byte	0
 7746 01a1 1B       		.uleb128 0x1b
 7747 01a2 2E       		.uleb128 0x2e
 7748 01a3 00       		.byte	0
 7749 01a4 3F       		.uleb128 0x3f
 7750 01a5 19       		.uleb128 0x19
 7751 01a6 03       		.uleb128 0x3
 7752 01a7 0E       		.uleb128 0xe
 7753 01a8 3A       		.uleb128 0x3a
 7754 01a9 0B       		.uleb128 0xb
 7755 01aa 3B       		.uleb128 0x3b
 7756 01ab 05       		.uleb128 0x5
 7757 01ac 11       		.uleb128 0x11
 7758 01ad 01       		.uleb128 0x1
 7759 01ae 12       		.uleb128 0x12
 7760 01af 06       		.uleb128 0x6
 7761 01b0 40       		.uleb128 0x40
 7762 01b1 18       		.uleb128 0x18
 7763 01b2 9642     		.uleb128 0x2116
 7764 01b4 19       		.uleb128 0x19
 7765 01b5 00       		.byte	0
 7766 01b6 00       		.byte	0
 7767 01b7 1C       		.uleb128 0x1c
 7768 01b8 2E       		.uleb128 0x2e
 7769 01b9 00       		.byte	0
 7770 01ba 3F       		.uleb128 0x3f
 7771 01bb 19       		.uleb128 0x19
 7772 01bc 03       		.uleb128 0x3
 7773 01bd 0E       		.uleb128 0xe
 7774 01be 3A       		.uleb128 0x3a
 7775 01bf 0B       		.uleb128 0xb
 7776 01c0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 160


 7777 01c1 05       		.uleb128 0x5
 7778 01c2 11       		.uleb128 0x11
 7779 01c3 01       		.uleb128 0x1
 7780 01c4 12       		.uleb128 0x12
 7781 01c5 06       		.uleb128 0x6
 7782 01c6 40       		.uleb128 0x40
 7783 01c7 18       		.uleb128 0x18
 7784 01c8 9742     		.uleb128 0x2117
 7785 01ca 19       		.uleb128 0x19
 7786 01cb 00       		.byte	0
 7787 01cc 00       		.byte	0
 7788 01cd 1D       		.uleb128 0x1d
 7789 01ce 34       		.uleb128 0x34
 7790 01cf 00       		.byte	0
 7791 01d0 03       		.uleb128 0x3
 7792 01d1 0E       		.uleb128 0xe
 7793 01d2 3A       		.uleb128 0x3a
 7794 01d3 0B       		.uleb128 0xb
 7795 01d4 3B       		.uleb128 0x3b
 7796 01d5 05       		.uleb128 0x5
 7797 01d6 49       		.uleb128 0x49
 7798 01d7 13       		.uleb128 0x13
 7799 01d8 3F       		.uleb128 0x3f
 7800 01d9 19       		.uleb128 0x19
 7801 01da 3C       		.uleb128 0x3c
 7802 01db 19       		.uleb128 0x19
 7803 01dc 00       		.byte	0
 7804 01dd 00       		.byte	0
 7805 01de 1E       		.uleb128 0x1e
 7806 01df 35       		.uleb128 0x35
 7807 01e0 00       		.byte	0
 7808 01e1 49       		.uleb128 0x49
 7809 01e2 13       		.uleb128 0x13
 7810 01e3 00       		.byte	0
 7811 01e4 00       		.byte	0
 7812 01e5 1F       		.uleb128 0x1f
 7813 01e6 34       		.uleb128 0x34
 7814 01e7 00       		.byte	0
 7815 01e8 03       		.uleb128 0x3
 7816 01e9 08       		.uleb128 0x8
 7817 01ea 3A       		.uleb128 0x3a
 7818 01eb 0B       		.uleb128 0xb
 7819 01ec 3B       		.uleb128 0x3b
 7820 01ed 0B       		.uleb128 0xb
 7821 01ee 49       		.uleb128 0x49
 7822 01ef 13       		.uleb128 0x13
 7823 01f0 3F       		.uleb128 0x3f
 7824 01f1 19       		.uleb128 0x19
 7825 01f2 02       		.uleb128 0x2
 7826 01f3 18       		.uleb128 0x18
 7827 01f4 00       		.byte	0
 7828 01f5 00       		.byte	0
 7829 01f6 20       		.uleb128 0x20
 7830 01f7 34       		.uleb128 0x34
 7831 01f8 00       		.byte	0
 7832 01f9 03       		.uleb128 0x3
 7833 01fa 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 161


 7834 01fb 3A       		.uleb128 0x3a
 7835 01fc 0B       		.uleb128 0xb
 7836 01fd 3B       		.uleb128 0x3b
 7837 01fe 0B       		.uleb128 0xb
 7838 01ff 49       		.uleb128 0x49
 7839 0200 13       		.uleb128 0x13
 7840 0201 3F       		.uleb128 0x3f
 7841 0202 19       		.uleb128 0x19
 7842 0203 02       		.uleb128 0x2
 7843 0204 18       		.uleb128 0x18
 7844 0205 00       		.byte	0
 7845 0206 00       		.byte	0
 7846 0207 21       		.uleb128 0x21
 7847 0208 21       		.uleb128 0x21
 7848 0209 00       		.byte	0
 7849 020a 49       		.uleb128 0x49
 7850 020b 13       		.uleb128 0x13
 7851 020c 2F       		.uleb128 0x2f
 7852 020d 05       		.uleb128 0x5
 7853 020e 00       		.byte	0
 7854 020f 00       		.byte	0
 7855 0210 22       		.uleb128 0x22
 7856 0211 34       		.uleb128 0x34
 7857 0212 00       		.byte	0
 7858 0213 03       		.uleb128 0x3
 7859 0214 0E       		.uleb128 0xe
 7860 0215 3A       		.uleb128 0x3a
 7861 0216 0B       		.uleb128 0xb
 7862 0217 3B       		.uleb128 0x3b
 7863 0218 05       		.uleb128 0x5
 7864 0219 49       		.uleb128 0x49
 7865 021a 13       		.uleb128 0x13
 7866 021b 3F       		.uleb128 0x3f
 7867 021c 19       		.uleb128 0x19
 7868 021d 02       		.uleb128 0x2
 7869 021e 18       		.uleb128 0x18
 7870 021f 00       		.byte	0
 7871 0220 00       		.byte	0
 7872 0221 00       		.byte	0
 7873              		.section	.debug_aranges,"",%progbits
 7874 0000 6C010000 		.4byte	0x16c
 7875 0004 0200     		.2byte	0x2
 7876 0006 00000000 		.4byte	.Ldebug_info0
 7877 000a 04       		.byte	0x4
 7878 000b 00       		.byte	0
 7879 000c 0000     		.2byte	0
 7880 000e 0000     		.2byte	0
 7881 0010 00000000 		.4byte	.LFB63
 7882 0014 0C000000 		.4byte	.LFE63-.LFB63
 7883 0018 00000000 		.4byte	.LFB64
 7884 001c 2C000000 		.4byte	.LFE64-.LFB64
 7885 0020 00000000 		.4byte	.LFB65
 7886 0024 AC010000 		.4byte	.LFE65-.LFB65
 7887 0028 00000000 		.4byte	.LFB66
 7888 002c 34010000 		.4byte	.LFE66-.LFB66
 7889 0030 00000000 		.4byte	.LFB67
 7890 0034 20000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 162


 7891 0038 00000000 		.4byte	.LFB68
 7892 003c 28000000 		.4byte	.LFE68-.LFB68
 7893 0040 00000000 		.4byte	.LFB69
 7894 0044 0A000000 		.4byte	.LFE69-.LFB69
 7895 0048 00000000 		.4byte	.LFB70
 7896 004c 28000000 		.4byte	.LFE70-.LFB70
 7897 0050 00000000 		.4byte	.LFB71
 7898 0054 A4070000 		.4byte	.LFE71-.LFB71
 7899 0058 00000000 		.4byte	.LFB72
 7900 005c 60010000 		.4byte	.LFE72-.LFB72
 7901 0060 00000000 		.4byte	.LFB73
 7902 0064 18000000 		.4byte	.LFE73-.LFB73
 7903 0068 00000000 		.4byte	.LFB74
 7904 006c 18000000 		.4byte	.LFE74-.LFB74
 7905 0070 00000000 		.4byte	.LFB75
 7906 0074 54000000 		.4byte	.LFE75-.LFB75
 7907 0078 00000000 		.4byte	.LFB76
 7908 007c F4000000 		.4byte	.LFE76-.LFB76
 7909 0080 00000000 		.4byte	.LFB77
 7910 0084 18000000 		.4byte	.LFE77-.LFB77
 7911 0088 00000000 		.4byte	.LFB78
 7912 008c 18000000 		.4byte	.LFE78-.LFB78
 7913 0090 00000000 		.4byte	.LFB79
 7914 0094 22000000 		.4byte	.LFE79-.LFB79
 7915 0098 00000000 		.4byte	.LFB80
 7916 009c 1C000000 		.4byte	.LFE80-.LFB80
 7917 00a0 00000000 		.4byte	.LFB81
 7918 00a4 34000000 		.4byte	.LFE81-.LFB81
 7919 00a8 00000000 		.4byte	.LFB82
 7920 00ac 38000000 		.4byte	.LFE82-.LFB82
 7921 00b0 00000000 		.4byte	.LFB83
 7922 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7923 00b8 00000000 		.4byte	.LFB84
 7924 00bc 38000000 		.4byte	.LFE84-.LFB84
 7925 00c0 00000000 		.4byte	.LFB85
 7926 00c4 38000000 		.4byte	.LFE85-.LFB85
 7927 00c8 00000000 		.4byte	.LFB86
 7928 00cc 38000000 		.4byte	.LFE86-.LFB86
 7929 00d0 00000000 		.4byte	.LFB87
 7930 00d4 14000000 		.4byte	.LFE87-.LFB87
 7931 00d8 00000000 		.4byte	.LFB88
 7932 00dc 18000000 		.4byte	.LFE88-.LFB88
 7933 00e0 00000000 		.4byte	.LFB89
 7934 00e4 18000000 		.4byte	.LFE89-.LFB89
 7935 00e8 00000000 		.4byte	.LFB90
 7936 00ec 18000000 		.4byte	.LFE90-.LFB90
 7937 00f0 00000000 		.4byte	.LFB91
 7938 00f4 18000000 		.4byte	.LFE91-.LFB91
 7939 00f8 00000000 		.4byte	.LFB92
 7940 00fc B8000000 		.4byte	.LFE92-.LFB92
 7941 0100 00000000 		.4byte	.LFB93
 7942 0104 4C050000 		.4byte	.LFE93-.LFB93
 7943 0108 00000000 		.4byte	.LFB94
 7944 010c 40000000 		.4byte	.LFE94-.LFB94
 7945 0110 00000000 		.4byte	.LFB95
 7946 0114 40000000 		.4byte	.LFE95-.LFB95
 7947 0118 00000000 		.4byte	.LFB96
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 163


 7948 011c 30020000 		.4byte	.LFE96-.LFB96
 7949 0120 00000000 		.4byte	.LFB97
 7950 0124 0C000000 		.4byte	.LFE97-.LFB97
 7951 0128 00000000 		.4byte	.LFB98
 7952 012c 4C010000 		.4byte	.LFE98-.LFB98
 7953 0130 00000000 		.4byte	.LFB99
 7954 0134 0C000000 		.4byte	.LFE99-.LFB99
 7955 0138 00000000 		.4byte	.LFB100
 7956 013c C0000000 		.4byte	.LFE100-.LFB100
 7957 0140 00000000 		.4byte	.LFB101
 7958 0144 B8000000 		.4byte	.LFE101-.LFB101
 7959 0148 00000000 		.4byte	.LFB102
 7960 014c 4A000000 		.4byte	.LFE102-.LFB102
 7961 0150 00000000 		.4byte	.LFB103
 7962 0154 68000000 		.4byte	.LFE103-.LFB103
 7963 0158 00000000 		.4byte	.LFB104
 7964 015c 50000000 		.4byte	.LFE104-.LFB104
 7965 0160 00000000 		.4byte	.LFB105
 7966 0164 0C000000 		.4byte	.LFE105-.LFB105
 7967 0168 00000000 		.4byte	0
 7968 016c 00000000 		.4byte	0
 7969              		.section	.debug_ranges,"",%progbits
 7970              	.Ldebug_ranges0:
 7971 0000 00000000 		.4byte	.LFB63
 7972 0004 0C000000 		.4byte	.LFE63
 7973 0008 00000000 		.4byte	.LFB64
 7974 000c 2C000000 		.4byte	.LFE64
 7975 0010 00000000 		.4byte	.LFB65
 7976 0014 AC010000 		.4byte	.LFE65
 7977 0018 00000000 		.4byte	.LFB66
 7978 001c 34010000 		.4byte	.LFE66
 7979 0020 00000000 		.4byte	.LFB67
 7980 0024 20000000 		.4byte	.LFE67
 7981 0028 00000000 		.4byte	.LFB68
 7982 002c 28000000 		.4byte	.LFE68
 7983 0030 00000000 		.4byte	.LFB69
 7984 0034 0A000000 		.4byte	.LFE69
 7985 0038 00000000 		.4byte	.LFB70
 7986 003c 28000000 		.4byte	.LFE70
 7987 0040 00000000 		.4byte	.LFB71
 7988 0044 A4070000 		.4byte	.LFE71
 7989 0048 00000000 		.4byte	.LFB72
 7990 004c 60010000 		.4byte	.LFE72
 7991 0050 00000000 		.4byte	.LFB73
 7992 0054 18000000 		.4byte	.LFE73
 7993 0058 00000000 		.4byte	.LFB74
 7994 005c 18000000 		.4byte	.LFE74
 7995 0060 00000000 		.4byte	.LFB75
 7996 0064 54000000 		.4byte	.LFE75
 7997 0068 00000000 		.4byte	.LFB76
 7998 006c F4000000 		.4byte	.LFE76
 7999 0070 00000000 		.4byte	.LFB77
 8000 0074 18000000 		.4byte	.LFE77
 8001 0078 00000000 		.4byte	.LFB78
 8002 007c 18000000 		.4byte	.LFE78
 8003 0080 00000000 		.4byte	.LFB79
 8004 0084 22000000 		.4byte	.LFE79
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 164


 8005 0088 00000000 		.4byte	.LFB80
 8006 008c 1C000000 		.4byte	.LFE80
 8007 0090 00000000 		.4byte	.LFB81
 8008 0094 34000000 		.4byte	.LFE81
 8009 0098 00000000 		.4byte	.LFB82
 8010 009c 38000000 		.4byte	.LFE82
 8011 00a0 00000000 		.4byte	.LFB83
 8012 00a4 4C000000 		.4byte	.LFE83
 8013 00a8 00000000 		.4byte	.LFB84
 8014 00ac 38000000 		.4byte	.LFE84
 8015 00b0 00000000 		.4byte	.LFB85
 8016 00b4 38000000 		.4byte	.LFE85
 8017 00b8 00000000 		.4byte	.LFB86
 8018 00bc 38000000 		.4byte	.LFE86
 8019 00c0 00000000 		.4byte	.LFB87
 8020 00c4 14000000 		.4byte	.LFE87
 8021 00c8 00000000 		.4byte	.LFB88
 8022 00cc 18000000 		.4byte	.LFE88
 8023 00d0 00000000 		.4byte	.LFB89
 8024 00d4 18000000 		.4byte	.LFE89
 8025 00d8 00000000 		.4byte	.LFB90
 8026 00dc 18000000 		.4byte	.LFE90
 8027 00e0 00000000 		.4byte	.LFB91
 8028 00e4 18000000 		.4byte	.LFE91
 8029 00e8 00000000 		.4byte	.LFB92
 8030 00ec B8000000 		.4byte	.LFE92
 8031 00f0 00000000 		.4byte	.LFB93
 8032 00f4 4C050000 		.4byte	.LFE93
 8033 00f8 00000000 		.4byte	.LFB94
 8034 00fc 40000000 		.4byte	.LFE94
 8035 0100 00000000 		.4byte	.LFB95
 8036 0104 40000000 		.4byte	.LFE95
 8037 0108 00000000 		.4byte	.LFB96
 8038 010c 30020000 		.4byte	.LFE96
 8039 0110 00000000 		.4byte	.LFB97
 8040 0114 0C000000 		.4byte	.LFE97
 8041 0118 00000000 		.4byte	.LFB98
 8042 011c 4C010000 		.4byte	.LFE98
 8043 0120 00000000 		.4byte	.LFB99
 8044 0124 0C000000 		.4byte	.LFE99
 8045 0128 00000000 		.4byte	.LFB100
 8046 012c C0000000 		.4byte	.LFE100
 8047 0130 00000000 		.4byte	.LFB101
 8048 0134 B8000000 		.4byte	.LFE101
 8049 0138 00000000 		.4byte	.LFB102
 8050 013c 4A000000 		.4byte	.LFE102
 8051 0140 00000000 		.4byte	.LFB103
 8052 0144 68000000 		.4byte	.LFE103
 8053 0148 00000000 		.4byte	.LFB104
 8054 014c 50000000 		.4byte	.LFE104
 8055 0150 00000000 		.4byte	.LFB105
 8056 0154 0C000000 		.4byte	.LFE105
 8057 0158 00000000 		.4byte	0
 8058 015c 00000000 		.4byte	0
 8059              		.section	.debug_line,"",%progbits
 8060              	.Ldebug_line0:
 8061 0000 62080000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 165


 8061      02006701 
 8061      00000201 
 8061      FB0E0D00 
 8061      01010101 
 8062              	.LASF99:
 8063 0000 696E6974 		.ascii	"initTrackU\000"
 8063      54726163 
 8063      6B5500
 8064              	.LASF56:
 8065 000b 67325F73 		.ascii	"g2_speed\000"
 8065      70656564 
 8065      00
 8066              	.LASF104:
 8067 0014 6368616E 		.ascii	"changeToRF\000"
 8067      6765546F 
 8067      524600
 8068              	.LASF37:
 8069 001f 51554144 		.ascii	"QUAD_STOP\000"
 8069      5F53544F 
 8069      5000
 8070              	.LASF63:
 8071 0029 62757474 		.ascii	"button\000"
 8071      6F6E00
 8072              	.LASF130:
 8073 0030 74735F73 		.ascii	"ts_speed\000"
 8073      70656564 
 8073      00
 8074              	.LASF197:
 8075 0039 6C656674 		.ascii	"leftTurnCount\000"
 8075      5475726E 
 8075      436F756E 
 8075      7400
 8076              	.LASF168:
 8077 0047 696E6974 		.ascii	"initial_y_pos\000"
 8077      69616C5F 
 8077      795F706F 
 8077      7300
 8078              	.LASF65:
 8079 0055 6973725F 		.ascii	"isr_deadzone\000"
 8079      64656164 
 8079      7A6F6E65 
 8079      00
 8080              	.LASF144:
 8081 0062 64697265 		.ascii	"direction\000"
 8081      6374696F 
 8081      6E00
 8082              	.LASF189:
 8083 006c 70617468 		.ascii	"path\000"
 8083      00
 8084              	.LASF97:
 8085 0071 696E6974 		.ascii	"initBrake\000"
 8085      4272616B 
 8085      6500
 8086              	.LASF49:
 8087 007b 67305F64 		.ascii	"g0_direction\000"
 8087      69726563 
 8087      74696F6E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 166


 8087      00
 8088              	.LASF61:
 8089 0088 64697374 		.ascii	"distTurned\000"
 8089      5475726E 
 8089      656400
 8090              	.LASF176:
 8091 0093 656E7472 		.ascii	"entry\000"
 8091      7900
 8092              	.LASF9:
 8093 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 8093      206C6F6E 
 8093      6720756E 
 8093      7369676E 
 8093      65642069 
 8094              	.LASF192:
 8095 00b0 726F626F 		.ascii	"robot_direction\000"
 8095      745F6469 
 8095      72656374 
 8095      696F6E00 
 8096              	.LASF137:
 8097 00c0 666C6167 		.ascii	"flag_packet\000"
 8097      5F706163 
 8097      6B657400 
 8098              	.LASF90:
 8099 00cc 7475726E 		.ascii	"turnRight\000"
 8099      52696768 
 8099      7400
 8100              	.LASF46:
 8101 00d6 67305F78 		.ascii	"g0_xpos\000"
 8101      706F7300 
 8102              	.LASF127:
 8103 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8103      52784275 
 8103      66666572 
 8103      00
 8104              	.LASF160:
 8105 00eb 74617267 		.ascii	"target_distance_cm\000"
 8105      65745F64 
 8105      69737461 
 8105      6E63655F 
 8105      636D00
 8106              	.LASF129:
 8107 00fe 74735F75 		.ascii	"ts_update\000"
 8107      70646174 
 8107      6500
 8108              	.LASF35:
 8109 0108 555F5452 		.ascii	"U_TRACK\000"
 8109      41434B00 
 8110              	.LASF40:
 8111 0110 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8111      54524156 
 8111      45525345 
 8111      00
 8112              	.LASF83:
 8113 011d 72696768 		.ascii	"right\000"
 8113      7400
 8114              	.LASF123:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 167


 8115 0123 73656E73 		.ascii	"sensorVals\000"
 8115      6F725661 
 8115      6C7300
 8116              	.LASF8:
 8117 012e 6C6F6E67 		.ascii	"long long int\000"
 8117      206C6F6E 
 8117      6720696E 
 8117      7400
 8118              	.LASF0:
 8119 013c 7369676E 		.ascii	"signed char\000"
 8119      65642063 
 8119      68617200 
 8120              	.LASF108:
 8121 0148 72696768 		.ascii	"rightSpeed\000"
 8121      74537065 
 8121      656400
 8122              	.LASF45:
 8123 0153 726F626F 		.ascii	"robot_orientation\000"
 8123      745F6F72 
 8123      69656E74 
 8123      6174696F 
 8123      6E00
 8124              	.LASF171:
 8125 0165 66726F6E 		.ascii	"frontSensors\000"
 8125      7453656E 
 8125      736F7273 
 8125      00
 8126              	.LASF115:
 8127 0172 74726163 		.ascii	"trackLineU\000"
 8127      6B4C696E 
 8127      655500
 8128              	.LASF132:
 8129 017d 666C6167 		.ascii	"flag_ts_enc\000"
 8129      5F74735F 
 8129      656E6300 
 8130              	.LASF178:
 8131 0189 62756666 		.ascii	"buffer_state\000"
 8131      65725F73 
 8131      74617465 
 8131      00
 8132              	.LASF94:
 8133 0196 696E6974 		.ascii	"initTurnRight\000"
 8133      5475726E 
 8133      52696768 
 8133      7400
 8134              	.LASF154:
 8135 01a4 64656164 		.ascii	"deadzone\000"
 8135      7A6F6E65 
 8135      00
 8136              	.LASF138:
 8137 01ad 666C6167 		.ascii	"flag_KB_string\000"
 8137      5F4B425F 
 8137      73747269 
 8137      6E6700
 8138              	.LASF114:
 8139 01bc 74726163 		.ascii	"trackLineZ\000"
 8139      6B4C696E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 168


 8139      655A00
 8140              	.LASF91:
 8141 01c7 7475726E 		.ascii	"turnLeft\000"
 8141      4C656674 
 8141      00
 8142              	.LASF31:
 8143 01d0 73746174 		.ascii	"state\000"
 8143      6500
 8144              	.LASF4:
 8145 01d6 6C6F6E67 		.ascii	"long int\000"
 8145      20696E74 
 8145      00
 8146              	.LASF30:
 8147 01df 55545552 		.ascii	"UTURN\000"
 8147      4E00
 8148              	.LASF165:
 8149 01e5 71756164 		.ascii	"quad_per_cm\000"
 8149      5F706572 
 8149      5F636D00 
 8150              	.LASF15:
 8151 01f1 75696E74 		.ascii	"uint8\000"
 8151      3800
 8152              	.LASF118:
 8153 01f7 636F6E76 		.ascii	"converted_val\000"
 8153      65727465 
 8153      645F7661 
 8153      6C00
 8154              	.LASF77:
 8155 0205 7365744C 		.ascii	"setLeftDir\000"
 8155      65667444 
 8155      697200
 8156              	.LASF21:
 8157 0210 646F7562 		.ascii	"double\000"
 8157      6C6500
 8158              	.LASF139:
 8159 0217 64617461 		.ascii	"dataready_flag\000"
 8159      72656164 
 8159      795F666C 
 8159      616700
 8160              	.LASF59:
 8161 0226 6164635F 		.ascii	"adc_isr\000"
 8161      69737200 
 8162              	.LASF128:
 8163 022e 74735F65 		.ascii	"ts_enc\000"
 8163      6E6300
 8164              	.LASF136:
 8165 0235 666C6167 		.ascii	"flag_rx\000"
 8165      5F727800 
 8166              	.LASF17:
 8167 023d 75696E74 		.ascii	"uint32\000"
 8167      333200
 8168              	.LASF73:
 8169 0244 6E657874 		.ascii	"nextInstruction\000"
 8169      496E7374 
 8169      72756374 
 8169      696F6E00 
 8170              	.LASF75:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 169


 8171 0254 62797465 		.ascii	"byte_packet\000"
 8171      5F706163 
 8171      6B657400 
 8172              	.LASF175:
 8173 0260 6C696E65 		.ascii	"line\000"
 8173      00
 8174              	.LASF147:
 8175 0265 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 8175      5F63616C 
 8175      635F7768 
 8175      65656C73 
 8175      70656564 
 8176              	.LASF57:
 8177 027a 67325F64 		.ascii	"g2_direction\000"
 8177      69726563 
 8177      74696F6E 
 8177      00
 8178              	.LASF172:
 8179 0287 70726576 		.ascii	"prevVoltage\000"
 8179      566F6C74 
 8179      61676500 
 8180              	.LASF148:
 8181 0293 71756164 		.ascii	"quad_count1\000"
 8181      5F636F75 
 8181      6E743100 
 8182              	.LASF149:
 8183 029f 71756164 		.ascii	"quad_count2\000"
 8183      5F636F75 
 8183      6E743200 
 8184              	.LASF159:
 8185 02ab 72696768 		.ascii	"rightSpeedLimit\000"
 8185      74537065 
 8185      65644C69 
 8185      6D697400 
 8186              	.LASF196:
 8187 02bb 696E7374 		.ascii	"instructionLength\000"
 8187      72756374 
 8187      696F6E4C 
 8187      656E6774 
 8187      6800
 8188              	.LASF39:
 8189 02cd 44455354 		.ascii	"DEST_TEST\000"
 8189      5F544553 
 8189      5400
 8190              	.LASF182:
 8191 02d7 74726163 		.ascii	"track_mode\000"
 8191      6B5F6D6F 
 8191      646500
 8192              	.LASF25:
 8193 02e2 52545552 		.ascii	"RTURN\000"
 8193      4E00
 8194              	.LASF191:
 8195 02e8 64657374 		.ascii	"destination\000"
 8195      696E6174 
 8195      696F6E00 
 8196              	.LASF60:
 8197 02f4 6973725F 		.ascii	"isr_quad1\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 170


 8197      71756164 
 8197      3100
 8198              	.LASF10:
 8199 02fe 756E7369 		.ascii	"unsigned int\000"
 8199      676E6564 
 8199      20696E74 
 8199      00
 8200              	.LASF157:
 8201 030b 72696768 		.ascii	"right_duty_cycle\000"
 8201      745F6475 
 8201      74795F63 
 8201      79636C65 
 8201      00
 8202              	.LASF202:
 8203 031c 64617461 		.ascii	"data_main\000"
 8203      5F6D6169 
 8203      6E00
 8204              	.LASF143:
 8205 0326 6164635F 		.ascii	"adc_result\000"
 8205      72657375 
 8205      6C7400
 8206              	.LASF187:
 8207 0331 73656E73 		.ascii	"sensorsDisabled\000"
 8207      6F727344 
 8207      69736162 
 8207      6C656400 
 8208              	.LASF142:
 8209 0341 666C6167 		.ascii	"flag_receive_ADC\000"
 8209      5F726563 
 8209      65697665 
 8209      5F414443 
 8209      00
 8210              	.LASF7:
 8211 0352 6C6F6E67 		.ascii	"long unsigned int\000"
 8211      20756E73 
 8211      69676E65 
 8211      6420696E 
 8211      7400
 8212              	.LASF98:
 8213 0364 696E6974 		.ascii	"initTrack\000"
 8213      54726163 
 8213      6B00
 8214              	.LASF95:
 8215 036e 696E6974 		.ascii	"initTurnU\000"
 8215      5475726E 
 8215      5500
 8216              	.LASF117:
 8217 0378 7363616C 		.ascii	"scalingFactor\000"
 8217      696E6746 
 8217      6163746F 
 8217      7200
 8218              	.LASF194:
 8219 0386 666F6F64 		.ascii	"food_length\000"
 8219      5F6C656E 
 8219      67746800 
 8220              	.LASF3:
 8221 0392 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 171


 8221      7420756E 
 8221      7369676E 
 8221      65642069 
 8221      6E7400
 8222              	.LASF81:
 8223 03a5 73657453 		.ascii	"setSpeed\000"
 8223      70656564 
 8223      00
 8224              	.LASF18:
 8225 03ae 696E7438 		.ascii	"int8\000"
 8225      00
 8226              	.LASF23:
 8227 03b3 44524956 		.ascii	"DRIVE\000"
 8227      4500
 8228              	.LASF93:
 8229 03b9 696E6974 		.ascii	"initTurnLeft\000"
 8229      5475726E 
 8229      4C656674 
 8229      00
 8230              	.LASF105:
 8231 03c6 6368616E 		.ascii	"changeToBT\000"
 8231      6765546F 
 8231      425400
 8232              	.LASF27:
 8233 03d1 54524143 		.ascii	"TRACKING\000"
 8233      4B494E47 
 8233      00
 8234              	.LASF186:
 8235 03da 696E7374 		.ascii	"instructionCount\000"
 8235      72756374 
 8235      696F6E43 
 8235      6F756E74 
 8235      00
 8236              	.LASF70:
 8237 03eb 6C656674 		.ascii	"leftOn\000"
 8237      4F6E00
 8238              	.LASF124:
 8239 03f2 75736250 		.ascii	"usbPutString\000"
 8239      75745374 
 8239      72696E67 
 8239      00
 8240              	.LASF62:
 8241 03ff 53746F70 		.ascii	"Stop_on_line\000"
 8241      5F6F6E5F 
 8241      6C696E65 
 8241      00
 8242              	.LASF34:
 8243 040c 43555256 		.ascii	"CURVE_TRACK\000"
 8243      455F5452 
 8243      41434B00 
 8244              	.LASF5:
 8245 0418 5F5F696E 		.ascii	"__int32_t\000"
 8245      7433325F 
 8245      7400
 8246              	.LASF36:
 8247 0422 53515541 		.ascii	"SQUARE_TRACK\000"
 8247      52455F54 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 172


 8247      5241434B 
 8247      00
 8248              	.LASF131:
 8249 042f 74735F64 		.ascii	"ts_display\000"
 8249      6973706C 
 8249      617900
 8250              	.LASF126:
 8251 043a 75617274 		.ascii	"uart_set_PWM\000"
 8251      5F736574 
 8251      5F50574D 
 8251      00
 8252              	.LASF198:
 8253 0447 72696768 		.ascii	"rightTurnCount\000"
 8253      74547572 
 8253      6E436F75 
 8253      6E7400
 8254              	.LASF66:
 8255 0456 6973725F 		.ascii	"isr_turn_timer\000"
 8255      7475726E 
 8255      5F74696D 
 8255      657200
 8256              	.LASF111:
 8257 0465 696E7465 		.ascii	"interCalc\000"
 8257      7243616C 
 8257      6300
 8258              	.LASF134:
 8259 046f 666C6167 		.ascii	"flag_ts_speed\000"
 8259      5F74735F 
 8259      73706565 
 8259      6400
 8260              	.LASF41:
 8261 047d 72737369 		.ascii	"rssi\000"
 8261      00
 8262              	.LASF52:
 8263 0482 67315F73 		.ascii	"g1_speed\000"
 8263      70656564 
 8263      00
 8264              	.LASF11:
 8265 048b 73697A65 		.ascii	"sizetype\000"
 8265      74797065 
 8265      00
 8266              	.LASF141:
 8267 0494 666C6167 		.ascii	"flag_print_rf\000"
 8267      5F707269 
 8267      6E745F72 
 8267      6600
 8268              	.LASF179:
 8269 04a2 73797374 		.ascii	"system_state\000"
 8269      656D5F73 
 8269      74617465 
 8269      00
 8270              	.LASF51:
 8271 04af 67315F79 		.ascii	"g1_ypos\000"
 8271      706F7300 
 8272              	.LASF53:
 8273 04b7 67315F64 		.ascii	"g1_direction\000"
 8273      69726563 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 173


 8273      74696F6E 
 8273      00
 8274              	.LASF106:
 8275 04c4 51756164 		.ascii	"Quad_Dec_response\000"
 8275      5F446563 
 8275      5F726573 
 8275      706F6E73 
 8275      6500
 8276              	.LASF24:
 8277 04d6 4C545552 		.ascii	"LTURN\000"
 8277      4E00
 8278              	.LASF169:
 8279 04dc 6272616B 		.ascii	"brakeFlag\000"
 8279      65466C61 
 8279      6700
 8280              	.LASF55:
 8281 04e6 67325F79 		.ascii	"g2_ypos\000"
 8281      706F7300 
 8282              	.LASF119:
 8283 04ee 72657375 		.ascii	"result_str\000"
 8283      6C745F73 
 8283      747200
 8284              	.LASF180:
 8285 04f9 70726576 		.ascii	"prev_movement_state\000"
 8285      5F6D6F76 
 8285      656D656E 
 8285      745F7374 
 8285      61746500 
 8286              	.LASF199:
 8287 050d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8287      4320342E 
 8287      392E3320 
 8287      32303135 
 8287      30333033 
 8288 0540 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8288      20726576 
 8288      6973696F 
 8288      6E203232 
 8288      31323230 
 8289 0573 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8289      66756E63 
 8289      74696F6E 
 8289      2D736563 
 8289      74696F6E 
 8290              	.LASF103:
 8291 059b 42545F72 		.ascii	"BT_rxInt\000"
 8291      78496E74 
 8291      00
 8292              	.LASF162:
 8293 05a4 74617267 		.ascii	"target_distance_quad\000"
 8293      65745F64 
 8293      69737461 
 8293      6E63655F 
 8293      71756164 
 8294              	.LASF140:
 8295 05b9 666C6167 		.ascii	"flag_rf_transmission_active\000"
 8295      5F72665F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 174


 8295      7472616E 
 8295      736D6973 
 8295      73696F6E 
 8296              	.LASF76:
 8297 05d5 73747269 		.ascii	"string_packet\000"
 8297      6E675F70 
 8297      61636B65 
 8297      7400
 8298              	.LASF20:
 8299 05e3 666C6F61 		.ascii	"float\000"
 8299      7400
 8300              	.LASF28:
 8301 05e9 54524143 		.ascii	"TRACKING_U\000"
 8301      4B494E47 
 8301      5F5500
 8302              	.LASF167:
 8303 05f4 696E6974 		.ascii	"initial_x_pos\000"
 8303      69616C5F 
 8303      785F706F 
 8303      7300
 8304              	.LASF89:
 8305 0602 64726976 		.ascii	"driveForwards\000"
 8305      65466F72 
 8305      77617264 
 8305      7300
 8306              	.LASF121:
 8307 0610 7072696E 		.ascii	"printString\000"
 8307      74537472 
 8307      696E6700 
 8308              	.LASF170:
 8309 061c 706F7274 		.ascii	"portOpen\000"
 8309      4F70656E 
 8309      00
 8310              	.LASF78:
 8311 0625 73657452 		.ascii	"setRightDir\000"
 8311      69676874 
 8311      44697200 
 8312              	.LASF150:
 8313 0631 6C617374 		.ascii	"last_quad_count1\000"
 8313      5F717561 
 8313      645F636F 
 8313      756E7431 
 8313      00
 8314              	.LASF151:
 8315 0642 6C617374 		.ascii	"last_quad_count2\000"
 8315      5F717561 
 8315      645F636F 
 8315      756E7432 
 8315      00
 8316              	.LASF29:
 8317 0653 54524143 		.ascii	"TRACKING_SOFT\000"
 8317      4B494E47 
 8317      5F534F46 
 8317      5400
 8318              	.LASF145:
 8319 0661 42494E5F 		.ascii	"BIN_ENABLED\000"
 8319      454E4142 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 175


 8319      4C454400 
 8320              	.LASF13:
 8321 066d 696E7433 		.ascii	"int32_t\000"
 8321      325F7400 
 8322              	.LASF1:
 8323 0675 756E7369 		.ascii	"unsigned char\000"
 8323      676E6564 
 8323      20636861 
 8323      7200
 8324              	.LASF16:
 8325 0683 75696E74 		.ascii	"uint16\000"
 8325      313600
 8326              	.LASF38:
 8327 068a 52465F53 		.ascii	"RF_STOP\000"
 8327      544F5000 
 8328              	.LASF88:
 8329 0692 6272616B 		.ascii	"brakeMotor\000"
 8329      654D6F74 
 8329      6F7200
 8330              	.LASF54:
 8331 069d 67325F78 		.ascii	"g2_xpos\000"
 8331      706F7300 
 8332              	.LASF112:
 8333 06a5 6E657874 		.ascii	"nextSpeed\000"
 8333      53706565 
 8333      6400
 8334              	.LASF2:
 8335 06af 73686F72 		.ascii	"short int\000"
 8335      7420696E 
 8335      7400
 8336              	.LASF33:
 8337 06b9 4E4F5F54 		.ascii	"NO_TRACK\000"
 8337      5241434B 
 8337      00
 8338              	.LASF109:
 8339 06c2 7363616C 		.ascii	"scalingLeft\000"
 8339      696E674C 
 8339      65667400 
 8340              	.LASF79:
 8341 06ce 68616E64 		.ascii	"handle_rx_binary\000"
 8341      6C655F72 
 8341      785F6269 
 8341      6E617279 
 8341      00
 8342              	.LASF101:
 8343 06df 7278496E 		.ascii	"rxInt\000"
 8343      7400
 8344              	.LASF183:
 8345 06e5 62797465 		.ascii	"byteCount\000"
 8345      436F756E 
 8345      7400
 8346              	.LASF64:
 8347 06ef 6973725F 		.ascii	"isr_adcTimer\000"
 8347      61646354 
 8347      696D6572 
 8347      00
 8348              	.LASF113:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 176


 8349 06fc 74726163 		.ascii	"trackLine\000"
 8349      6B4C696E 
 8349      6500
 8350              	.LASF87:
 8351 0706 6272616B 		.ascii	"brakeRight\000"
 8351      65526967 
 8351      687400
 8352              	.LASF135:
 8353 0711 666C6167 		.ascii	"flag_ts_display\000"
 8353      5F74735F 
 8353      64697370 
 8353      6C617900 
 8354              	.LASF26:
 8355 0721 53544F50 		.ascii	"STOPPED\000"
 8355      50454400 
 8356              	.LASF74:
 8357 0729 7061636B 		.ascii	"packet_bytes\000"
 8357      65745F62 
 8357      79746573 
 8357      00
 8358              	.LASF22:
 8359 0736 6C6F6E67 		.ascii	"long double\000"
 8359      20646F75 
 8359      626C6500 
 8360              	.LASF193:
 8361 0742 74726163 		.ascii	"tracked_direction\000"
 8361      6B65645F 
 8361      64697265 
 8361      6374696F 
 8361      6E00
 8362              	.LASF12:
 8363 0754 63686172 		.ascii	"char\000"
 8363      00
 8364              	.LASF32:
 8365 0759 6D6F6465 		.ascii	"mode\000"
 8365      00
 8366              	.LASF195:
 8367 075e 696E7374 		.ascii	"instructions\000"
 8367      72756374 
 8367      696F6E73 
 8367      00
 8368              	.LASF42:
 8369 076b 696E6465 		.ascii	"index\000"
 8369      7800
 8370              	.LASF188:
 8371 0771 666F6F64 		.ascii	"food_list\000"
 8371      5F6C6973 
 8371      7400
 8372              	.LASF68:
 8373 077b 61637469 		.ascii	"actionDebounce\000"
 8373      6F6E4465 
 8373      626F756E 
 8373      636500
 8374              	.LASF107:
 8375 078a 6C656674 		.ascii	"leftSpeed\000"
 8375      53706565 
 8375      6400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 177


 8376              	.LASF6:
 8377 0794 5F5F7569 		.ascii	"__uint32_t\000"
 8377      6E743332 
 8377      5F7400
 8378              	.LASF133:
 8379 079f 666C6167 		.ascii	"flag_ts_update\000"
 8379      5F74735F 
 8379      75706461 
 8379      746500
 8380              	.LASF174:
 8381 07ae 64697370 		.ascii	"displaystring\000"
 8381      6C617973 
 8381      7472696E 
 8381      6700
 8382              	.LASF47:
 8383 07bc 67305F79 		.ascii	"g0_ypos\000"
 8383      706F7300 
 8384              	.LASF158:
 8385 07c4 6C656674 		.ascii	"leftSpeedLimit\000"
 8385      53706565 
 8385      644C696D 
 8385      697400
 8386              	.LASF43:
 8387 07d3 726F626F 		.ascii	"robot_xpos\000"
 8387      745F7870 
 8387      6F7300
 8388              	.LASF92:
 8389 07de 7475726E 		.ascii	"turnU\000"
 8389      5500
 8390              	.LASF184:
 8391 07e4 7061636B 		.ascii	"packet\000"
 8391      657400
 8392              	.LASF85:
 8393 07eb 636F756E 		.ascii	"countsRight\000"
 8393      74735269 
 8393      67687400 
 8394              	.LASF120:
 8395 07f7 7072696E 		.ascii	"print_RF\000"
 8395      745F5246 
 8395      00
 8396              	.LASF86:
 8397 0800 6272616B 		.ascii	"brakeLeft\000"
 8397      654C6566 
 8397      7400
 8398              	.LASF177:
 8399 080a 75736242 		.ascii	"usbBuffer\000"
 8399      75666665 
 8399      7200
 8400              	.LASF50:
 8401 0814 67315F78 		.ascii	"g1_xpos\000"
 8401      706F7300 
 8402              	.LASF102:
 8403 081c 72665F63 		.ascii	"rf_char\000"
 8403      68617200 
 8404              	.LASF166:
 8405 0824 696E6974 		.ascii	"initial_pos_valid\000"
 8405      69616C5F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 178


 8405      706F735F 
 8405      76616C69 
 8405      6400
 8406              	.LASF80:
 8407 0836 72657665 		.ascii	"reverseDirection\000"
 8407      72736544 
 8407      69726563 
 8407      74696F6E 
 8407      00
 8408              	.LASF173:
 8409 0847 70726576 		.ascii	"prevVoltage2\000"
 8409      566F6C74 
 8409      61676532 
 8409      00
 8410              	.LASF96:
 8411 0854 696E6974 		.ascii	"initForward\000"
 8411      466F7277 
 8411      61726400 
 8412              	.LASF14:
 8413 0860 75696E74 		.ascii	"uint32_t\000"
 8413      33325F74 
 8413      00
 8414              	.LASF156:
 8415 0869 6C656674 		.ascii	"left_duty_cycle\000"
 8415      5F647574 
 8415      795F6379 
 8415      636C6500 
 8416              	.LASF72:
 8417 0879 6E657874 		.ascii	"nextStepDist\000"
 8417      53746570 
 8417      44697374 
 8417      00
 8418              	.LASF161:
 8419 0886 61636375 		.ascii	"accum_dist\000"
 8419      6D5F6469 
 8419      737400
 8420              	.LASF58:
 8421 0891 42545F74 		.ascii	"BT_txInt\000"
 8421      78496E74 
 8421      00
 8422              	.LASF181:
 8423 089a 6D6F7665 		.ascii	"movement_state\000"
 8423      6D656E74 
 8423      5F737461 
 8423      746500
 8424              	.LASF71:
 8425 08a9 72696768 		.ascii	"rightOn\000"
 8425      744F6E00 
 8426              	.LASF146:
 8427 08b1 42545F45 		.ascii	"BT_ENABLED\000"
 8427      4E41424C 
 8427      454400
 8428              	.LASF125:
 8429 08bc 75736250 		.ascii	"usbPutChar\000"
 8429      75744368 
 8429      617200
 8430              	.LASF100:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 179


 8431 08c7 696E6974 		.ascii	"inittrackLineZ\000"
 8431      74726163 
 8431      6B4C696E 
 8431      655A00
 8432              	.LASF110:
 8433 08d6 7363616C 		.ascii	"scalingRight\000"
 8433      696E6752 
 8433      69676874 
 8433      00
 8434              	.LASF163:
 8435 08e3 72656163 		.ascii	"reached_target\000"
 8435      6865645F 
 8435      74617267 
 8435      657400
 8436              	.LASF44:
 8437 08f2 726F626F 		.ascii	"robot_ypos\000"
 8437      745F7970 
 8437      6F7300
 8438              	.LASF19:
 8439 08fd 696E7431 		.ascii	"int16\000"
 8439      3600
 8440              	.LASF84:
 8441 0903 636F756E 		.ascii	"countsLeft\000"
 8441      74734C65 
 8441      667400
 8442              	.LASF155:
 8443 090e 73746172 		.ascii	"start_turn_count\000"
 8443      745F7475 
 8443      726E5F63 
 8443      6F756E74 
 8443      00
 8444              	.LASF185:
 8445 091f 73706565 		.ascii	"speed\000"
 8445      6400
 8446              	.LASF164:
 8447 0925 6F766572 		.ascii	"overshot_target\000"
 8447      73686F74 
 8447      5F746172 
 8447      67657400 
 8448              	.LASF69:
 8449 0935 6E657874 		.ascii	"nextStep\000"
 8449      53746570 
 8449      00
 8450              	.LASF200:
 8451 093e 2E5C6D61 		.ascii	".\\main.c\000"
 8451      696E2E63 
 8451      00
 8452              	.LASF152:
 8453 0947 71756164 		.ascii	"quad_diff1\000"
 8453      5F646966 
 8453      663100
 8454              	.LASF153:
 8455 0952 71756164 		.ascii	"quad_diff2\000"
 8455      5F646966 
 8455      663200
 8456              	.LASF190:
 8457 095d 73746172 		.ascii	"start\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc61Sj8z.s 			page 180


 8457      7400
 8458              	.LASF67:
 8459 0963 6D61696E 		.ascii	"main\000"
 8459      00
 8460              	.LASF82:
 8461 0968 6C656674 		.ascii	"left\000"
 8461      00
 8462              	.LASF48:
 8463 096d 67305F73 		.ascii	"g0_speed\000"
 8463      70656564 
 8463      00
 8464              	.LASF201:
 8465 0976 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 8465      73657273 
 8465      5C4C6F67 
 8465      616E5C44 
 8465      65736B74 
 8466 09a3 43533330 		.ascii	"CS301_Class.cydsn\000"
 8466      315F436C 
 8466      6173732E 
 8466      63796473 
 8466      6E00
 8467              	.LASF116:
 8468 09b5 7072696E 		.ascii	"print_ADC\000"
 8468      745F4144 
 8468      4300
 8469              	.LASF122:
 8470 09bf 72656164 		.ascii	"readFrontSensors\000"
 8470      46726F6E 
 8470      7453656E 
 8470      736F7273 
 8470      00
 8471              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
