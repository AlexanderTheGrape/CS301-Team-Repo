ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	start_turn_count
 165              		.align	1
 166              		.type	start_turn_count, %object
 167              		.size	start_turn_count, 2
 168              	start_turn_count:
 169 0024 0000     		.space	2
 170              		.global	left_duty_cycle
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 4


 172              		.type	left_duty_cycle, %object
 173              		.size	left_duty_cycle, 2
 174              	left_duty_cycle:
 175 0026 0000     		.space	2
 176              		.global	right_duty_cycle
 177              		.align	1
 178              		.type	right_duty_cycle, %object
 179              		.size	right_duty_cycle, 2
 180              	right_duty_cycle:
 181 0028 0000     		.space	2
 182              		.global	leftSpeedLimit
 183              		.align	1
 184              		.type	leftSpeedLimit, %object
 185              		.size	leftSpeedLimit, 2
 186              	leftSpeedLimit:
 187 002a 0000     		.space	2
 188              		.global	rightSpeedLimit
 189              		.align	1
 190              		.type	rightSpeedLimit, %object
 191              		.size	rightSpeedLimit, 2
 192              	rightSpeedLimit:
 193 002c 0000     		.space	2
 194              		.global	target_distance_cm
 195              		.data
 196              		.align	1
 197              		.type	target_distance_cm, %object
 198              		.size	target_distance_cm, 2
 199              	target_distance_cm:
 200 0002 6400     		.short	100
 201              		.global	accum_dist
 202              		.bss
 203              		.align	1
 204              		.type	accum_dist, %object
 205              		.size	accum_dist, 2
 206              	accum_dist:
 207 002e 0000     		.space	2
 208              		.global	target_distance_quad
 209              		.align	1
 210              		.type	target_distance_quad, %object
 211              		.size	target_distance_quad, 2
 212              	target_distance_quad:
 213 0030 0000     		.space	2
 214              		.global	quad_per_cm
 215              		.data
 216              		.align	2
 217              		.type	quad_per_cm, %object
 218              		.size	quad_per_cm, 4
 219              	quad_per_cm:
 220 0004 F0A73241 		.word	1093838832
 221              		.global	initial_pos_valid
 222              		.bss
 223              		.type	initial_pos_valid, %object
 224              		.size	initial_pos_valid, 1
 225              	initial_pos_valid:
 226 0032 00       		.space	1
 227              		.global	initial_x_pos
 228 0033 00       		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 5


 229              		.type	initial_x_pos, %object
 230              		.size	initial_x_pos, 2
 231              	initial_x_pos:
 232 0034 0000     		.space	2
 233              		.global	initial_y_pos
 234              		.align	1
 235              		.type	initial_y_pos, %object
 236              		.size	initial_y_pos, 2
 237              	initial_y_pos:
 238 0036 0000     		.space	2
 239              		.comm	brakeFlag,1,1
 240              		.global	portOpen
 241              		.data
 242              		.type	portOpen, %object
 243              		.size	portOpen, 1
 244              	portOpen:
 245 0008 01       		.byte	1
 246              		.comm	prevVoltage,2,2
 247              		.comm	prevVoltage2,2,2
 248              		.global	displaystring
 249 0009 000000   		.align	2
 250              		.type	displaystring, %object
 251              		.size	displaystring, 64
 252              	displaystring:
 253 000c 43533330 		.ascii	"CS301 2016\012\000"
 253      31203230 
 253      31360A00 
 254 0018 00000000 		.space	52
 254      00000000 
 254      00000000 
 254      00000000 
 254      00000000 
 255              		.comm	line,64,4
 256              		.comm	entry,64,4
 257              		.comm	usbBuffer,64,4
 258              		.comm	buffer_state,32,4
 259              		.comm	system_state,32,4
 260              		.global	prev_movement_state
 261              		.type	prev_movement_state, %object
 262              		.size	prev_movement_state, 1
 263              	prev_movement_state:
 264 004c 03       		.byte	3
 265              		.global	movement_state
 266              		.type	movement_state, %object
 267              		.size	movement_state, 1
 268              	movement_state:
 269 004d 03       		.byte	3
 270              		.global	track_mode
 271              		.bss
 272              		.type	track_mode, %object
 273              		.size	track_mode, 1
 274              	track_mode:
 275 0038 00       		.space	1
 276              		.global	byteCount
 277              		.type	byteCount, %object
 278              		.size	byteCount, 1
 279              	byteCount:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 6


 280 0039 00       		.space	1
 281              		.comm	packet,2,4
 282              		.global	speed
 283              		.data
 284 004e 0000     		.align	3
 285              		.type	speed, %object
 286              		.size	speed, 8
 287              	speed:
 288 0050 00000000 		.word	0
 289 0054 00003040 		.word	1076887552
 290              		.global	instructions
 291              		.bss
 292 003a 0000     		.align	2
 293              		.type	instructions, %object
 294              		.size	instructions, 400
 295              	instructions:
 296 003c 00000000 		.space	400
 296      00000000 
 296      00000000 
 296      00000000 
 296      00000000 
 297              		.global	instructionCount
 298              		.align	1
 299              		.type	instructionCount, %object
 300              		.size	instructionCount, 2
 301              	instructionCount:
 302 01cc 0000     		.space	2
 303              		.global	sensorsDisabled
 304              		.type	sensorsDisabled, %object
 305              		.size	sensorsDisabled, 1
 306              	sensorsDisabled:
 307 01ce 00       		.space	1
 308              		.global	path
 309 01cf 00       		.align	2
 310              		.type	path, %object
 311              		.size	path, 1200
 312              	path:
 313 01d0 00000000 		.space	1200
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	start
 315              		.data
 316              		.align	2
 317              		.type	start, %object
 318              		.size	start, 2
 319              	start:
 320 0058 01       		.byte	1
 321 0059 01       		.byte	1
 322              		.global	destination
 323 005a 0000     		.align	2
 324              		.type	destination, %object
 325              		.size	destination, 2
 326              	destination:
 327 005c 0D       		.byte	13
 328 005d 11       		.byte	17
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 7


 329              		.global	map
 330 005e 0000     		.align	2
 331              		.type	map, %object
 332              		.size	map, 285
 333              	map:
 334 0060 01       		.byte	1
 335 0061 01       		.byte	1
 336 0062 01       		.byte	1
 337 0063 01       		.byte	1
 338 0064 01       		.byte	1
 339 0065 01       		.byte	1
 340 0066 01       		.byte	1
 341 0067 01       		.byte	1
 342 0068 01       		.byte	1
 343 0069 01       		.byte	1
 344 006a 01       		.byte	1
 345 006b 01       		.byte	1
 346 006c 01       		.byte	1
 347 006d 01       		.byte	1
 348 006e 01       		.byte	1
 349 006f 01       		.byte	1
 350 0070 01       		.byte	1
 351 0071 01       		.byte	1
 352 0072 01       		.byte	1
 353 0073 01       		.byte	1
 354 0074 00       		.byte	0
 355 0075 00       		.byte	0
 356 0076 00       		.byte	0
 357 0077 00       		.byte	0
 358 0078 00       		.byte	0
 359 0079 01       		.byte	1
 360 007a 00       		.byte	0
 361 007b 01       		.byte	1
 362 007c 00       		.byte	0
 363 007d 00       		.byte	0
 364 007e 00       		.byte	0
 365 007f 00       		.byte	0
 366 0080 00       		.byte	0
 367 0081 00       		.byte	0
 368 0082 00       		.byte	0
 369 0083 00       		.byte	0
 370 0084 00       		.byte	0
 371 0085 01       		.byte	1
 372 0086 01       		.byte	1
 373 0087 01       		.byte	1
 374 0088 01       		.byte	1
 375 0089 01       		.byte	1
 376 008a 01       		.byte	1
 377 008b 00       		.byte	0
 378 008c 01       		.byte	1
 379 008d 00       		.byte	0
 380 008e 01       		.byte	1
 381 008f 00       		.byte	0
 382 0090 01       		.byte	1
 383 0091 00       		.byte	0
 384 0092 01       		.byte	1
 385 0093 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 8


 386 0094 01       		.byte	1
 387 0095 01       		.byte	1
 388 0096 01       		.byte	1
 389 0097 00       		.byte	0
 390 0098 01       		.byte	1
 391 0099 01       		.byte	1
 392 009a 00       		.byte	0
 393 009b 00       		.byte	0
 394 009c 00       		.byte	0
 395 009d 01       		.byte	1
 396 009e 00       		.byte	0
 397 009f 01       		.byte	1
 398 00a0 00       		.byte	0
 399 00a1 00       		.byte	0
 400 00a2 00       		.byte	0
 401 00a3 01       		.byte	1
 402 00a4 00       		.byte	0
 403 00a5 00       		.byte	0
 404 00a6 00       		.byte	0
 405 00a7 00       		.byte	0
 406 00a8 00       		.byte	0
 407 00a9 01       		.byte	1
 408 00aa 00       		.byte	0
 409 00ab 01       		.byte	1
 410 00ac 01       		.byte	1
 411 00ad 00       		.byte	0
 412 00ae 01       		.byte	1
 413 00af 00       		.byte	0
 414 00b0 01       		.byte	1
 415 00b1 00       		.byte	0
 416 00b2 01       		.byte	1
 417 00b3 00       		.byte	0
 418 00b4 01       		.byte	1
 419 00b5 01       		.byte	1
 420 00b6 01       		.byte	1
 421 00b7 01       		.byte	1
 422 00b8 01       		.byte	1
 423 00b9 01       		.byte	1
 424 00ba 01       		.byte	1
 425 00bb 00       		.byte	0
 426 00bc 01       		.byte	1
 427 00bd 00       		.byte	0
 428 00be 01       		.byte	1
 429 00bf 01       		.byte	1
 430 00c0 00       		.byte	0
 431 00c1 01       		.byte	1
 432 00c2 00       		.byte	0
 433 00c3 00       		.byte	0
 434 00c4 00       		.byte	0
 435 00c5 00       		.byte	0
 436 00c6 00       		.byte	0
 437 00c7 00       		.byte	0
 438 00c8 00       		.byte	0
 439 00c9 00       		.byte	0
 440 00ca 00       		.byte	0
 441 00cb 00       		.byte	0
 442 00cc 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 9


 443 00cd 01       		.byte	1
 444 00ce 00       		.byte	0
 445 00cf 01       		.byte	1
 446 00d0 00       		.byte	0
 447 00d1 01       		.byte	1
 448 00d2 01       		.byte	1
 449 00d3 00       		.byte	0
 450 00d4 01       		.byte	1
 451 00d5 01       		.byte	1
 452 00d6 01       		.byte	1
 453 00d7 01       		.byte	1
 454 00d8 01       		.byte	1
 455 00d9 01       		.byte	1
 456 00da 01       		.byte	1
 457 00db 01       		.byte	1
 458 00dc 01       		.byte	1
 459 00dd 00       		.byte	0
 460 00de 01       		.byte	1
 461 00df 00       		.byte	0
 462 00e0 01       		.byte	1
 463 00e1 00       		.byte	0
 464 00e2 01       		.byte	1
 465 00e3 01       		.byte	1
 466 00e4 01       		.byte	1
 467 00e5 01       		.byte	1
 468 00e6 00       		.byte	0
 469 00e7 00       		.byte	0
 470 00e8 00       		.byte	0
 471 00e9 00       		.byte	0
 472 00ea 00       		.byte	0
 473 00eb 00       		.byte	0
 474 00ec 00       		.byte	0
 475 00ed 00       		.byte	0
 476 00ee 00       		.byte	0
 477 00ef 00       		.byte	0
 478 00f0 00       		.byte	0
 479 00f1 01       		.byte	1
 480 00f2 00       		.byte	0
 481 00f3 01       		.byte	1
 482 00f4 00       		.byte	0
 483 00f5 00       		.byte	0
 484 00f6 00       		.byte	0
 485 00f7 01       		.byte	1
 486 00f8 01       		.byte	1
 487 00f9 01       		.byte	1
 488 00fa 01       		.byte	1
 489 00fb 01       		.byte	1
 490 00fc 01       		.byte	1
 491 00fd 01       		.byte	1
 492 00fe 01       		.byte	1
 493 00ff 00       		.byte	0
 494 0100 01       		.byte	1
 495 0101 01       		.byte	1
 496 0102 01       		.byte	1
 497 0103 01       		.byte	1
 498 0104 01       		.byte	1
 499 0105 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 10


 500 0106 01       		.byte	1
 501 0107 01       		.byte	1
 502 0108 01       		.byte	1
 503 0109 00       		.byte	0
 504 010a 01       		.byte	1
 505 010b 01       		.byte	1
 506 010c 00       		.byte	0
 507 010d 00       		.byte	0
 508 010e 00       		.byte	0
 509 010f 00       		.byte	0
 510 0110 00       		.byte	0
 511 0111 00       		.byte	0
 512 0112 00       		.byte	0
 513 0113 00       		.byte	0
 514 0114 00       		.byte	0
 515 0115 00       		.byte	0
 516 0116 00       		.byte	0
 517 0117 01       		.byte	1
 518 0118 00       		.byte	0
 519 0119 00       		.byte	0
 520 011a 00       		.byte	0
 521 011b 01       		.byte	1
 522 011c 00       		.byte	0
 523 011d 01       		.byte	1
 524 011e 01       		.byte	1
 525 011f 00       		.byte	0
 526 0120 01       		.byte	1
 527 0121 01       		.byte	1
 528 0122 01       		.byte	1
 529 0123 01       		.byte	1
 530 0124 01       		.byte	1
 531 0125 00       		.byte	0
 532 0126 01       		.byte	1
 533 0127 01       		.byte	1
 534 0128 01       		.byte	1
 535 0129 00       		.byte	0
 536 012a 01       		.byte	1
 537 012b 00       		.byte	0
 538 012c 01       		.byte	1
 539 012d 00       		.byte	0
 540 012e 01       		.byte	1
 541 012f 00       		.byte	0
 542 0130 01       		.byte	1
 543 0131 01       		.byte	1
 544 0132 00       		.byte	0
 545 0133 00       		.byte	0
 546 0134 00       		.byte	0
 547 0135 00       		.byte	0
 548 0136 00       		.byte	0
 549 0137 01       		.byte	1
 550 0138 00       		.byte	0
 551 0139 00       		.byte	0
 552 013a 00       		.byte	0
 553 013b 01       		.byte	1
 554 013c 00       		.byte	0
 555 013d 00       		.byte	0
 556 013e 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 11


 557 013f 01       		.byte	1
 558 0140 00       		.byte	0
 559 0141 00       		.byte	0
 560 0142 00       		.byte	0
 561 0143 01       		.byte	1
 562 0144 01       		.byte	1
 563 0145 00       		.byte	0
 564 0146 01       		.byte	1
 565 0147 01       		.byte	1
 566 0148 01       		.byte	1
 567 0149 00       		.byte	0
 568 014a 01       		.byte	1
 569 014b 01       		.byte	1
 570 014c 01       		.byte	1
 571 014d 00       		.byte	0
 572 014e 01       		.byte	1
 573 014f 01       		.byte	1
 574 0150 01       		.byte	1
 575 0151 00       		.byte	0
 576 0152 01       		.byte	1
 577 0153 01       		.byte	1
 578 0154 01       		.byte	1
 579 0155 00       		.byte	0
 580 0156 01       		.byte	1
 581 0157 01       		.byte	1
 582 0158 00       		.byte	0
 583 0159 00       		.byte	0
 584 015a 00       		.byte	0
 585 015b 01       		.byte	1
 586 015c 00       		.byte	0
 587 015d 00       		.byte	0
 588 015e 00       		.byte	0
 589 015f 00       		.byte	0
 590 0160 00       		.byte	0
 591 0161 00       		.byte	0
 592 0162 00       		.byte	0
 593 0163 01       		.byte	1
 594 0164 00       		.byte	0
 595 0165 00       		.byte	0
 596 0166 00       		.byte	0
 597 0167 00       		.byte	0
 598 0168 00       		.byte	0
 599 0169 01       		.byte	1
 600 016a 01       		.byte	1
 601 016b 01       		.byte	1
 602 016c 01       		.byte	1
 603 016d 01       		.byte	1
 604 016e 01       		.byte	1
 605 016f 01       		.byte	1
 606 0170 01       		.byte	1
 607 0171 01       		.byte	1
 608 0172 01       		.byte	1
 609 0173 01       		.byte	1
 610 0174 01       		.byte	1
 611 0175 01       		.byte	1
 612 0176 01       		.byte	1
 613 0177 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 12


 614 0178 01       		.byte	1
 615 0179 01       		.byte	1
 616 017a 01       		.byte	1
 617 017b 01       		.byte	1
 618 017c 01       		.byte	1
 619              		.global	food_list
 620 017d 000000   		.align	2
 621              		.type	food_list, %object
 622              		.size	food_list, 12
 623              	food_list:
 624 0180 04       		.byte	4
 625 0181 05       		.byte	5
 626 0182 07       		.byte	7
 627 0183 01       		.byte	1
 628 0184 0B       		.byte	11
 629 0185 05       		.byte	5
 630 0186 0A       		.byte	10
 631 0187 0B       		.byte	11
 632 0188 05       		.byte	5
 633 0189 08       		.byte	8
 634 018a 11       		.byte	17
 635 018b 02       		.byte	2
 636 018c 00000000 		.section	.text.handle_rx_binary,"ax",%progbits
 637              		.align	2
 638              		.global	handle_rx_binary
 639              		.thumb
 640              		.thumb_func
 641              		.type	handle_rx_binary, %function
 642              	handle_rx_binary:
 643              	.LFB63:
 644              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 13


  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** #include "pathfinder.h"
  34:.\main.c      **** //* ========================================
  35:.\main.c      **** void usbPutString(char *s);
  36:.\main.c      **** void usbPutChar(char c);
  37:.\main.c      **** //void handle_usb();
  38:.\main.c      **** //* ========================================
  39:.\main.c      **** 
  40:.\main.c      **** #define QUAD_RATIO 0.99556
  41:.\main.c      **** 
  42:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  43:.\main.c      **** uint16 instructionCount = 0;
  44:.\main.c      **** uint8 sensorsDisabled = 0;
  45:.\main.c      **** 
  46:.\main.c      **** uint8 path[DEFAULT_ARRAY_SIZE][3] = {0};
  47:.\main.c      **** uint8 start[2] = {1, 1};//(y, x) array starts at 0
  48:.\main.c      **** uint8 destination[2] = {13, 17};//(y, x)
  49:.\main.c      **** 
  50:.\main.c      **** uint8 map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  51:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  52:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  53:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  54:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  55:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  56:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  57:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  58:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  59:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  60:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  61:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  62:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  63:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  64:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  65:.\main.c      **** 
  66:.\main.c      **** uint8 food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  67:.\main.c      **** 
  68:.\main.c      **** void changeToRF();
  69:.\main.c      **** void changeToBT();
  70:.\main.c      **** 
  71:.\main.c      **** void handle_rx_binary()
  72:.\main.c      **** {
 645              		.loc 1 72 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 32
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 89B0     		sub	sp, sp, #36
 654              		.cfi_def_cfa_offset 40
 655 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 14


 656              		.cfi_def_cfa_register 7
  73:.\main.c      ****     if(flag_rx == 1)
 657              		.loc 1 73 0
 658 0006 524B     		ldr	r3, .L21
 659 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 660 000a 012B     		cmp	r3, #1
 661 000c 40F09A80 		bne	.L1
 662              	.LBB2:
  74:.\main.c      ****     {    
  75:.\main.c      ****         flag_rx = 0;
 663              		.loc 1 75 0
 664 0010 4F4B     		ldr	r3, .L21
 665 0012 0022     		movs	r2, #0
 666 0014 1A70     		strb	r2, [r3]
  76:.\main.c      ****         
  77:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 667              		.loc 1 77 0
 668 0016 4F4B     		ldr	r3, .L21+4
 669 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 670 001a 1B02     		lsls	r3, r3, #8
 671 001c 9AB2     		uxth	r2, r3
 672 001e 4D4B     		ldr	r3, .L21+4
 673 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 674 0022 9BB2     		uxth	r3, r3
 675 0024 1343     		orrs	r3, r3, r2
 676 0026 9BB2     		uxth	r3, r3
 677 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  78:.\main.c      ****         char byte_packet[12];
  79:.\main.c      ****         char string_packet[12];
  80:.\main.c      ****         
  81:.\main.c      ****         switch(byteCount)
 678              		.loc 1 81 0
 679 002a 4B4B     		ldr	r3, .L21+8
 680 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 681 002e 043B     		subs	r3, r3, #4
 682 0030 1E2B     		cmp	r3, #30
 683 0032 00F28780 		bhi	.L1
 684 0036 01A2     		adr	r2, .L5
 685 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 686              		.p2align 2
 687              	.L5:
 688 003c B9000000 		.word	.L4+1
 689 0040 45010000 		.word	.L1+1
 690 0044 CD000000 		.word	.L6+1
 691 0048 45010000 		.word	.L1+1
 692 004c D5000000 		.word	.L7+1
 693 0050 45010000 		.word	.L1+1
 694 0054 DD000000 		.word	.L8+1
 695 0058 45010000 		.word	.L1+1
 696 005c E5000000 		.word	.L9+1
 697 0060 45010000 		.word	.L1+1
 698 0064 ED000000 		.word	.L10+1
 699 0068 45010000 		.word	.L1+1
 700 006c F5000000 		.word	.L11+1
 701 0070 45010000 		.word	.L1+1
 702 0074 FD000000 		.word	.L12+1
 703 0078 45010000 		.word	.L1+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 15


 704 007c 05010000 		.word	.L13+1
 705 0080 45010000 		.word	.L1+1
 706 0084 0D010000 		.word	.L14+1
 707 0088 45010000 		.word	.L1+1
 708 008c 15010000 		.word	.L15+1
 709 0090 45010000 		.word	.L1+1
 710 0094 1D010000 		.word	.L16+1
 711 0098 45010000 		.word	.L1+1
 712 009c 25010000 		.word	.L17+1
 713 00a0 45010000 		.word	.L1+1
 714 00a4 2D010000 		.word	.L18+1
 715 00a8 45010000 		.word	.L1+1
 716 00ac 35010000 		.word	.L19+1
 717 00b0 45010000 		.word	.L1+1
 718 00b4 3D010000 		.word	.L20+1
 719              		.p2align 1
 720              	.L4:
  82:.\main.c      ****         {
  83:.\main.c      ****             case 4:
  84:.\main.c      ****                 buffer_state.rssi = packet[0];
 721              		.loc 1 84 0
 722 00b8 264B     		ldr	r3, .L21+4
 723 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 724 00bc DAB2     		uxtb	r2, r3
 725 00be 274B     		ldr	r3, .L21+12
 726 00c0 1A70     		strb	r2, [r3]
  85:.\main.c      ****                 buffer_state.index = packet[1];
 727              		.loc 1 85 0
 728 00c2 244B     		ldr	r3, .L21+4
 729 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 730 00c6 254B     		ldr	r3, .L21+12
 731 00c8 5A70     		strb	r2, [r3, #1]
  86:.\main.c      ****             break;
 732              		.loc 1 86 0
 733 00ca 3BE0     		b	.L1
 734              	.L6:
  87:.\main.c      ****             case 6:
  88:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 735              		.loc 1 88 0
 736 00cc FA8B     		ldrh	r2, [r7, #30]
 737 00ce 234B     		ldr	r3, .L21+12
 738 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  89:.\main.c      ****             break;
 739              		.loc 1 89 0
 740 00d2 37E0     		b	.L1
 741              	.L7:
  90:.\main.c      ****             case 8:
  91:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 742              		.loc 1 91 0
 743 00d4 FA8B     		ldrh	r2, [r7, #30]
 744 00d6 214B     		ldr	r3, .L21+12
 745 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  92:.\main.c      ****             break;
 746              		.loc 1 92 0
 747 00da 33E0     		b	.L1
 748              	.L8:
  93:.\main.c      ****             case 10:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 16


  94:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 749              		.loc 1 94 0
 750 00dc FA8B     		ldrh	r2, [r7, #30]
 751 00de 1F4B     		ldr	r3, .L21+12
 752 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  95:.\main.c      ****             break;
 753              		.loc 1 95 0
 754 00e2 2FE0     		b	.L1
 755              	.L9:
  96:.\main.c      ****             case 12:
  97:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 756              		.loc 1 97 0
 757 00e4 FA8B     		ldrh	r2, [r7, #30]
 758 00e6 1D4B     		ldr	r3, .L21+12
 759 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  98:.\main.c      ****             break;
 760              		.loc 1 98 0
 761 00ea 2BE0     		b	.L1
 762              	.L10:
  99:.\main.c      ****             case 14:
 100:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 763              		.loc 1 100 0
 764 00ec FA8B     		ldrh	r2, [r7, #30]
 765 00ee 1B4B     		ldr	r3, .L21+12
 766 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 101:.\main.c      ****             break;
 767              		.loc 1 101 0
 768 00f2 27E0     		b	.L1
 769              	.L11:
 102:.\main.c      ****             case 16:
 103:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 770              		.loc 1 103 0
 771 00f4 FA8B     		ldrh	r2, [r7, #30]
 772 00f6 194B     		ldr	r3, .L21+12
 773 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 104:.\main.c      ****             break;
 774              		.loc 1 104 0
 775 00fa 23E0     		b	.L1
 776              	.L12:
 105:.\main.c      ****             case 18:
 106:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 777              		.loc 1 106 0
 778 00fc FA8B     		ldrh	r2, [r7, #30]
 779 00fe 174B     		ldr	r3, .L21+12
 780 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 107:.\main.c      ****             break;
 781              		.loc 1 107 0
 782 0102 1FE0     		b	.L1
 783              	.L13:
 108:.\main.c      ****             case 20:
 109:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 784              		.loc 1 109 0
 785 0104 FA8B     		ldrh	r2, [r7, #30]
 786 0106 154B     		ldr	r3, .L21+12
 787 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 110:.\main.c      ****             break;
 788              		.loc 1 110 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 17


 789 010a 1BE0     		b	.L1
 790              	.L14:
 111:.\main.c      ****             case 22:
 112:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 791              		.loc 1 112 0
 792 010c FA8B     		ldrh	r2, [r7, #30]
 793 010e 134B     		ldr	r3, .L21+12
 794 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 113:.\main.c      ****             break;
 795              		.loc 1 113 0
 796 0112 17E0     		b	.L1
 797              	.L15:
 114:.\main.c      ****             case 24:
 115:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 798              		.loc 1 115 0
 799 0114 FA8B     		ldrh	r2, [r7, #30]
 800 0116 114B     		ldr	r3, .L21+12
 801 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 116:.\main.c      ****             break;
 802              		.loc 1 116 0
 803 011a 13E0     		b	.L1
 804              	.L16:
 117:.\main.c      ****             case 26:
 118:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 805              		.loc 1 118 0
 806 011c FA8B     		ldrh	r2, [r7, #30]
 807 011e 0F4B     		ldr	r3, .L21+12
 808 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 119:.\main.c      ****             break;
 809              		.loc 1 119 0
 810 0122 0FE0     		b	.L1
 811              	.L17:
 120:.\main.c      ****             case 28:
 121:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 812              		.loc 1 121 0
 813 0124 FA8B     		ldrh	r2, [r7, #30]
 814 0126 0D4B     		ldr	r3, .L21+12
 815 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 122:.\main.c      ****             break;
 816              		.loc 1 122 0
 817 012a 0BE0     		b	.L1
 818              	.L18:
 123:.\main.c      ****             case 30:
 124:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 819              		.loc 1 124 0
 820 012c FA8B     		ldrh	r2, [r7, #30]
 821 012e 0B4B     		ldr	r3, .L21+12
 822 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 125:.\main.c      ****             break;
 823              		.loc 1 125 0
 824 0132 07E0     		b	.L1
 825              	.L19:
 126:.\main.c      ****             case 32:
 127:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 826              		.loc 1 127 0
 827 0134 FA8B     		ldrh	r2, [r7, #30]
 828 0136 094B     		ldr	r3, .L21+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 18


 829 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 128:.\main.c      ****             break;
 830              		.loc 1 128 0
 831 013a 03E0     		b	.L1
 832              	.L20:
 129:.\main.c      ****             case 34:
 130:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 833              		.loc 1 130 0
 834 013c FA8B     		ldrh	r2, [r7, #30]
 835 013e 074B     		ldr	r3, .L21+12
 836 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 131:.\main.c      ****             break;
 837              		.loc 1 131 0
 838 0142 00BF     		nop
 839              	.L1:
 840              	.LBE2:
 132:.\main.c      ****         }
 133:.\main.c      ****     }
 134:.\main.c      **** }
 841              		.loc 1 134 0
 842 0144 2437     		adds	r7, r7, #36
 843              		.cfi_def_cfa_offset 4
 844 0146 BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 0148 5DF8047B 		ldr	r7, [sp], #4
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
 850 014c 7047     		bx	lr
 851              	.L22:
 852 014e 00BF     		.align	2
 853              	.L21:
 854 0150 00000000 		.word	flag_rx
 855 0154 00000000 		.word	packet
 856 0158 00000000 		.word	byteCount
 857 015c 00000000 		.word	buffer_state
 858              		.cfi_endproc
 859              	.LFE63:
 860              		.size	handle_rx_binary, .-handle_rx_binary
 861              		.section	.text.setLeftDir,"ax",%progbits
 862              		.align	2
 863              		.global	setLeftDir
 864              		.thumb
 865              		.thumb_func
 866              		.type	setLeftDir, %function
 867              	setLeftDir:
 868              	.LFB64:
 135:.\main.c      **** 
 136:.\main.c      **** void setLeftDir(uint8 dir)
 137:.\main.c      **** {
 869              		.loc 1 137 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873 0000 80B5     		push	{r7, lr}
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 19


 876              		.cfi_offset 14, -4
 877 0002 82B0     		sub	sp, sp, #8
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              		.cfi_def_cfa_register 7
 881 0006 0346     		mov	r3, r0
 882 0008 FB71     		strb	r3, [r7, #7]
 138:.\main.c      ****     M2_IN2_Write(dir);
 883              		.loc 1 138 0
 884 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 885 000c 1846     		mov	r0, r3
 886 000e FFF7FEFF 		bl	M2_IN2_Write
 139:.\main.c      **** }
 887              		.loc 1 139 0
 888 0012 0837     		adds	r7, r7, #8
 889              		.cfi_def_cfa_offset 8
 890 0014 BD46     		mov	sp, r7
 891              		.cfi_def_cfa_register 13
 892              		@ sp needed
 893 0016 80BD     		pop	{r7, pc}
 894              		.cfi_endproc
 895              	.LFE64:
 896              		.size	setLeftDir, .-setLeftDir
 897              		.section	.text.setRightDir,"ax",%progbits
 898              		.align	2
 899              		.global	setRightDir
 900              		.thumb
 901              		.thumb_func
 902              		.type	setRightDir, %function
 903              	setRightDir:
 904              	.LFB65:
 140:.\main.c      **** 
 141:.\main.c      **** void setRightDir(uint8 dir)
 142:.\main.c      **** {
 905              		.loc 1 142 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 8
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 80B5     		push	{r7, lr}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 82B0     		sub	sp, sp, #8
 914              		.cfi_def_cfa_offset 16
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0006 0346     		mov	r3, r0
 918 0008 FB71     		strb	r3, [r7, #7]
 143:.\main.c      ****     M1_IN2_Write(dir);
 919              		.loc 1 143 0
 920 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 921 000c 1846     		mov	r0, r3
 922 000e FFF7FEFF 		bl	M1_IN2_Write
 144:.\main.c      **** }
 923              		.loc 1 144 0
 924 0012 0837     		adds	r7, r7, #8
 925              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 20


 926 0014 BD46     		mov	sp, r7
 927              		.cfi_def_cfa_register 13
 928              		@ sp needed
 929 0016 80BD     		pop	{r7, pc}
 930              		.cfi_endproc
 931              	.LFE65:
 932              		.size	setRightDir, .-setRightDir
 933              		.section	.rodata
 934              		.align	2
 935              	.LC0:
 936 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 936      2025640D 
 936      0A00
 937              		.section	.text.reverseDirection,"ax",%progbits
 938              		.align	2
 939              		.global	reverseDirection
 940              		.thumb
 941              		.thumb_func
 942              		.type	reverseDirection, %function
 943              	reverseDirection:
 944              	.LFB66:
 145:.\main.c      **** 
 146:.\main.c      **** void reverseDirection()
 147:.\main.c      **** {
 945              		.loc 1 147 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 16
 948              		@ frame_needed = 1, uses_anonymous_args = 0
 949 0000 80B5     		push	{r7, lr}
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953 0002 84B0     		sub	sp, sp, #16
 954              		.cfi_def_cfa_offset 24
 955 0004 00AF     		add	r7, sp, #0
 956              		.cfi_def_cfa_register 7
 148:.\main.c      ****     direction = !direction;
 957              		.loc 1 148 0
 958 0006 114B     		ldr	r3, .L26
 959 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 000a 002B     		cmp	r3, #0
 961 000c 0CBF     		ite	eq
 962 000e 0123     		moveq	r3, #1
 963 0010 0023     		movne	r3, #0
 964 0012 DBB2     		uxtb	r3, r3
 965 0014 1A46     		mov	r2, r3
 966 0016 0D4B     		ldr	r3, .L26
 967 0018 1A70     		strb	r2, [r3]
 149:.\main.c      ****     setLeftDir(direction);
 968              		.loc 1 149 0
 969 001a 0C4B     		ldr	r3, .L26
 970 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 001e 1846     		mov	r0, r3
 972 0020 FFF7FEFF 		bl	setLeftDir
 150:.\main.c      ****     setRightDir(direction);
 973              		.loc 1 150 0
 974 0024 094B     		ldr	r3, .L26
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 21


 975 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 0028 1846     		mov	r0, r3
 977 002a FFF7FEFF 		bl	setRightDir
 151:.\main.c      ****     char mes[16];
 152:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 978              		.loc 1 152 0
 979 002e 074B     		ldr	r3, .L26
 980 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 981 0032 1A46     		mov	r2, r3
 982 0034 3B46     		mov	r3, r7
 983 0036 1846     		mov	r0, r3
 984 0038 0549     		ldr	r1, .L26+4
 985 003a FFF7FEFF 		bl	sprintf
 153:.\main.c      ****     UART_PutString(mes);
 986              		.loc 1 153 0
 987 003e 3B46     		mov	r3, r7
 988 0040 1846     		mov	r0, r3
 989 0042 FFF7FEFF 		bl	UART_PutString
 154:.\main.c      **** }
 990              		.loc 1 154 0
 991 0046 1037     		adds	r7, r7, #16
 992              		.cfi_def_cfa_offset 8
 993 0048 BD46     		mov	sp, r7
 994              		.cfi_def_cfa_register 13
 995              		@ sp needed
 996 004a 80BD     		pop	{r7, pc}
 997              	.L27:
 998              		.align	2
 999              	.L26:
 1000 004c 00000000 		.word	direction
 1001 0050 00000000 		.word	.LC0
 1002              		.cfi_endproc
 1003              	.LFE66:
 1004              		.size	reverseDirection, .-reverseDirection
 1005              		.global	__aeabi_dcmplt
 1006              		.global	__aeabi_dmul
 1007              		.global	__aeabi_d2iz
 1008              		.section	.text.setSpeed,"ax",%progbits
 1009              		.align	2
 1010              		.global	setSpeed
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	setSpeed, %function
 1014              	setSpeed:
 1015              	.LFB67:
 155:.\main.c      **** 
 156:.\main.c      **** void setSpeed(double left, double right){
 1016              		.loc 1 156 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 24
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020 0000 80B5     		push	{r7, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 86B0     		sub	sp, sp, #24
 1025              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 22


 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 0006 C7E90201 		strd	r0, [r7, #8]
 1029 000a C7E90023 		strd	r2, [r7]
 157:.\main.c      ****     if(right < 0.0)
 1030              		.loc 1 157 0
 1031 000e D7E90001 		ldrd	r0, [r7]
 1032 0012 4FF00002 		mov	r2, #0
 1033 0016 4FF00003 		mov	r3, #0
 1034 001a FFF7FEFF 		bl	__aeabi_dcmplt
 1035 001e 0346     		mov	r3, r0
 1036 0020 002B     		cmp	r3, #0
 1037 0022 10D0     		beq	.L37
 158:.\main.c      ****     {
 159:.\main.c      ****         //char mes[16];
 160:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 161:.\main.c      ****        // UART_PutString(mes);
 162:.\main.c      ****         setRightDir(!direction);
 1038              		.loc 1 162 0
 1039 0024 304B     		ldr	r3, .L39+8
 1040 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1041 0028 002B     		cmp	r3, #0
 1042 002a 0CBF     		ite	eq
 1043 002c 0123     		moveq	r3, #1
 1044 002e 0023     		movne	r3, #0
 1045 0030 DBB2     		uxtb	r3, r3
 1046 0032 1846     		mov	r0, r3
 1047 0034 FFF7FEFF 		bl	setRightDir
 163:.\main.c      ****         right = -right;
 1048              		.loc 1 163 0
 1049 0038 3B68     		ldr	r3, [r7]
 1050 003a 3B60     		str	r3, [r7]
 1051 003c 7B68     		ldr	r3, [r7, #4]
 1052 003e 83F00043 		eor	r3, r3, #-2147483648
 1053 0042 7B60     		str	r3, [r7, #4]
 1054 0044 04E0     		b	.L31
 1055              	.L37:
 164:.\main.c      ****     }
 165:.\main.c      ****     else setRightDir(direction);
 1056              		.loc 1 165 0
 1057 0046 284B     		ldr	r3, .L39+8
 1058 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1059 004a 1846     		mov	r0, r3
 1060 004c FFF7FEFF 		bl	setRightDir
 1061              	.L31:
 166:.\main.c      ****     
 167:.\main.c      ****     if(left < 0.0)
 1062              		.loc 1 167 0
 1063 0050 D7E90201 		ldrd	r0, [r7, #8]
 1064 0054 4FF00002 		mov	r2, #0
 1065 0058 4FF00003 		mov	r3, #0
 1066 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1067 0060 0346     		mov	r3, r0
 1068 0062 002B     		cmp	r3, #0
 1069 0064 10D0     		beq	.L38
 168:.\main.c      ****     {
 169:.\main.c      ****        // char mes[16];
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 23


 170:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 171:.\main.c      ****         //UART_PutString(mes);
 172:.\main.c      ****         setLeftDir(!direction);
 1070              		.loc 1 172 0
 1071 0066 204B     		ldr	r3, .L39+8
 1072 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 006a 002B     		cmp	r3, #0
 1074 006c 0CBF     		ite	eq
 1075 006e 0123     		moveq	r3, #1
 1076 0070 0023     		movne	r3, #0
 1077 0072 DBB2     		uxtb	r3, r3
 1078 0074 1846     		mov	r0, r3
 1079 0076 FFF7FEFF 		bl	setLeftDir
 173:.\main.c      ****         left = -left;
 1080              		.loc 1 173 0
 1081 007a BB68     		ldr	r3, [r7, #8]
 1082 007c BB60     		str	r3, [r7, #8]
 1083 007e FB68     		ldr	r3, [r7, #12]
 1084 0080 83F00043 		eor	r3, r3, #-2147483648
 1085 0084 FB60     		str	r3, [r7, #12]
 1086 0086 04E0     		b	.L34
 1087              	.L38:
 174:.\main.c      ****     }
 175:.\main.c      ****     else setLeftDir(direction);
 1088              		.loc 1 175 0
 1089 0088 174B     		ldr	r3, .L39+8
 1090 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1091 008c 1846     		mov	r0, r3
 1092 008e FFF7FEFF 		bl	setLeftDir
 1093              	.L34:
 176:.\main.c      ****     
 177:.\main.c      ****     int16 countsLeft = left*QUAD_RATIO;
 1094              		.loc 1 177 0
 1095 0092 D7E90201 		ldrd	r0, [r7, #8]
 1096 0096 12A3     		adr	r3, .L39
 1097 0098 D3E90023 		ldrd	r2, [r3]
 1098 009c FFF7FEFF 		bl	__aeabi_dmul
 1099 00a0 0246     		mov	r2, r0
 1100 00a2 0B46     		mov	r3, r1
 1101 00a4 1046     		mov	r0, r2
 1102 00a6 1946     		mov	r1, r3
 1103 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 1104 00ac 0346     		mov	r3, r0
 1105 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 178:.\main.c      ****     int16 countsRight = right*QUAD_RATIO;
 1106              		.loc 1 178 0
 1107 00b0 D7E90001 		ldrd	r0, [r7]
 1108 00b4 0AA3     		adr	r3, .L39
 1109 00b6 D3E90023 		ldrd	r2, [r3]
 1110 00ba FFF7FEFF 		bl	__aeabi_dmul
 1111 00be 0246     		mov	r2, r0
 1112 00c0 0B46     		mov	r3, r1
 1113 00c2 1046     		mov	r0, r2
 1114 00c4 1946     		mov	r1, r3
 1115 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 1116 00ca 0346     		mov	r3, r0
 1117 00cc BB82     		strh	r3, [r7, #20]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 24


 179:.\main.c      ****     
 180:.\main.c      ****     leftSpeedLimit = countsRight;
 1118              		.loc 1 180 0
 1119 00ce 074A     		ldr	r2, .L39+12
 1120 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1121 00d2 1380     		strh	r3, [r2]	@ movhi
 181:.\main.c      ****     rightSpeedLimit = countsLeft;
 1122              		.loc 1 181 0
 1123 00d4 064A     		ldr	r2, .L39+16
 1124 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1125 00d8 1380     		strh	r3, [r2]	@ movhi
 182:.\main.c      **** }
 1126              		.loc 1 182 0
 1127 00da 1837     		adds	r7, r7, #24
 1128              		.cfi_def_cfa_offset 8
 1129 00dc BD46     		mov	sp, r7
 1130              		.cfi_def_cfa_register 13
 1131              		@ sp needed
 1132 00de 80BD     		pop	{r7, pc}
 1133              	.L40:
 1134              		.align	3
 1135              	.L39:
 1136 00e0 969526A5 		.word	-1524197994
 1137 00e4 A0DBEF3F 		.word	1072683936
 1138 00e8 00000000 		.word	direction
 1139 00ec 00000000 		.word	leftSpeedLimit
 1140 00f0 00000000 		.word	rightSpeedLimit
 1141              		.cfi_endproc
 1142              	.LFE67:
 1143              		.size	setSpeed, .-setSpeed
 1144 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 1145              		.align	2
 1146              		.global	brakeLeft
 1147              		.thumb
 1148              		.thumb_func
 1149              		.type	brakeLeft, %function
 1150              	brakeLeft:
 1151              	.LFB68:
 183:.\main.c      **** 
 184:.\main.c      **** void brakeLeft()
 185:.\main.c      **** {
 1152              		.loc 1 185 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156 0000 80B5     		push	{r7, lr}
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 186:.\main.c      ****     PWM_1_WriteCompare(0);
 1162              		.loc 1 186 0
 1163 0004 0020     		movs	r0, #0
 1164 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 187:.\main.c      ****     left_duty_cycle = 0;
 1165              		.loc 1 187 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 25


 1166 000a 024B     		ldr	r3, .L42
 1167 000c 0022     		movs	r2, #0
 1168 000e 1A80     		strh	r2, [r3]	@ movhi
 188:.\main.c      **** }
 1169              		.loc 1 188 0
 1170 0010 80BD     		pop	{r7, pc}
 1171              	.L43:
 1172 0012 00BF     		.align	2
 1173              	.L42:
 1174 0014 00000000 		.word	left_duty_cycle
 1175              		.cfi_endproc
 1176              	.LFE68:
 1177              		.size	brakeLeft, .-brakeLeft
 1178              		.section	.text.brakeRight,"ax",%progbits
 1179              		.align	2
 1180              		.global	brakeRight
 1181              		.thumb
 1182              		.thumb_func
 1183              		.type	brakeRight, %function
 1184              	brakeRight:
 1185              	.LFB69:
 189:.\main.c      **** 
 190:.\main.c      **** void brakeRight()
 191:.\main.c      **** {
 1186              		.loc 1 191 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 1, uses_anonymous_args = 0
 1190 0000 80B5     		push	{r7, lr}
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 7, -8
 1193              		.cfi_offset 14, -4
 1194 0002 00AF     		add	r7, sp, #0
 1195              		.cfi_def_cfa_register 7
 192:.\main.c      ****      PWM_2_WriteCompare(0);
 1196              		.loc 1 192 0
 1197 0004 0020     		movs	r0, #0
 1198 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 193:.\main.c      ****      right_duty_cycle = 0;
 1199              		.loc 1 193 0
 1200 000a 024B     		ldr	r3, .L45
 1201 000c 0022     		movs	r2, #0
 1202 000e 1A80     		strh	r2, [r3]	@ movhi
 194:.\main.c      **** }
 1203              		.loc 1 194 0
 1204 0010 80BD     		pop	{r7, pc}
 1205              	.L46:
 1206 0012 00BF     		.align	2
 1207              	.L45:
 1208 0014 00000000 		.word	right_duty_cycle
 1209              		.cfi_endproc
 1210              	.LFE69:
 1211              		.size	brakeRight, .-brakeRight
 1212              		.section	.text.brakeMotor,"ax",%progbits
 1213              		.align	2
 1214              		.global	brakeMotor
 1215              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 26


 1216              		.thumb_func
 1217              		.type	brakeMotor, %function
 1218              	brakeMotor:
 1219              	.LFB70:
 195:.\main.c      **** 
 196:.\main.c      **** void brakeMotor(){
 1220              		.loc 1 196 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 1, uses_anonymous_args = 0
 1224 0000 80B5     		push	{r7, lr}
 1225              		.cfi_def_cfa_offset 8
 1226              		.cfi_offset 7, -8
 1227              		.cfi_offset 14, -4
 1228 0002 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 197:.\main.c      ****     setSpeed(0, 0);
 1230              		.loc 1 197 0
 1231 0004 4FF00000 		mov	r0, #0
 1232 0008 4FF00001 		mov	r1, #0
 1233 000c 4FF00002 		mov	r2, #0
 1234 0010 4FF00003 		mov	r3, #0
 1235 0014 FFF7FEFF 		bl	setSpeed
 198:.\main.c      ****     brakeLeft();
 1236              		.loc 1 198 0
 1237 0018 FFF7FEFF 		bl	brakeLeft
 199:.\main.c      ****     brakeRight();
 1238              		.loc 1 199 0
 1239 001c FFF7FEFF 		bl	brakeRight
 200:.\main.c      **** }
 1240              		.loc 1 200 0
 1241 0020 80BD     		pop	{r7, pc}
 1242              		.cfi_endproc
 1243              	.LFE70:
 1244              		.size	brakeMotor, .-brakeMotor
 1245 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 1246              		.align	2
 1247              		.global	driveForwards
 1248              		.thumb
 1249              		.thumb_func
 1250              		.type	driveForwards, %function
 1251              	driveForwards:
 1252              	.LFB71:
 201:.\main.c      **** 
 202:.\main.c      **** void driveForwards()
 203:.\main.c      **** {
 1253              		.loc 1 203 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 1, uses_anonymous_args = 0
 1257 0000 80B5     		push	{r7, lr}
 1258              		.cfi_def_cfa_offset 8
 1259              		.cfi_offset 7, -8
 1260              		.cfi_offset 14, -4
 1261 0002 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 204:.\main.c      ****     setSpeed(speed, speed);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 27


 1263              		.loc 1 204 0
 1264 0004 044B     		ldr	r3, .L49
 1265 0006 D3E90001 		ldrd	r0, [r3]
 1266 000a 034B     		ldr	r3, .L49
 1267 000c D3E90023 		ldrd	r2, [r3]
 1268 0010 FFF7FEFF 		bl	setSpeed
 205:.\main.c      **** }
 1269              		.loc 1 205 0
 1270 0014 80BD     		pop	{r7, pc}
 1271              	.L50:
 1272 0016 00BF     		.align	2
 1273              	.L49:
 1274 0018 00000000 		.word	speed
 1275              		.cfi_endproc
 1276              	.LFE71:
 1277              		.size	driveForwards, .-driveForwards
 1278              		.global	__aeabi_dadd
 1279              		.section	.text.turnRight,"ax",%progbits
 1280              		.align	2
 1281              		.global	turnRight
 1282              		.thumb
 1283              		.thumb_func
 1284              		.type	turnRight, %function
 1285              	turnRight:
 1286              	.LFB72:
 206:.\main.c      **** 
 207:.\main.c      **** void turnRight()
 208:.\main.c      **** {
 1287              		.loc 1 208 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291 0000 80B5     		push	{r7, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
 209:.\main.c      ****     setSpeed(0,speed*2.0);
 1297              		.loc 1 209 0
 1298 0004 074B     		ldr	r3, .L52
 1299 0006 D3E90023 		ldrd	r2, [r3]
 1300 000a 1046     		mov	r0, r2
 1301 000c 1946     		mov	r1, r3
 1302 000e FFF7FEFF 		bl	__aeabi_dadd
 1303 0012 0246     		mov	r2, r0
 1304 0014 0B46     		mov	r3, r1
 1305 0016 4FF00000 		mov	r0, #0
 1306 001a 4FF00001 		mov	r1, #0
 1307 001e FFF7FEFF 		bl	setSpeed
 210:.\main.c      **** }
 1308              		.loc 1 210 0
 1309 0022 80BD     		pop	{r7, pc}
 1310              	.L53:
 1311              		.align	2
 1312              	.L52:
 1313 0024 00000000 		.word	speed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 28


 1314              		.cfi_endproc
 1315              	.LFE72:
 1316              		.size	turnRight, .-turnRight
 1317              		.section	.text.turnLeft,"ax",%progbits
 1318              		.align	2
 1319              		.global	turnLeft
 1320              		.thumb
 1321              		.thumb_func
 1322              		.type	turnLeft, %function
 1323              	turnLeft:
 1324              	.LFB73:
 211:.\main.c      **** 
 212:.\main.c      **** void turnLeft()
 213:.\main.c      **** {
 1325              		.loc 1 213 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329 0000 80B5     		push	{r7, lr}
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 7, -8
 1332              		.cfi_offset 14, -4
 1333 0002 00AF     		add	r7, sp, #0
 1334              		.cfi_def_cfa_register 7
 214:.\main.c      ****     setSpeed(speed*2.0,0);
 1335              		.loc 1 214 0
 1336 0004 084B     		ldr	r3, .L55
 1337 0006 D3E90023 		ldrd	r2, [r3]
 1338 000a 1046     		mov	r0, r2
 1339 000c 1946     		mov	r1, r3
 1340 000e FFF7FEFF 		bl	__aeabi_dadd
 1341 0012 0246     		mov	r2, r0
 1342 0014 0B46     		mov	r3, r1
 1343 0016 1046     		mov	r0, r2
 1344 0018 1946     		mov	r1, r3
 1345 001a 4FF00002 		mov	r2, #0
 1346 001e 4FF00003 		mov	r3, #0
 1347 0022 FFF7FEFF 		bl	setSpeed
 215:.\main.c      **** }
 1348              		.loc 1 215 0
 1349 0026 80BD     		pop	{r7, pc}
 1350              	.L56:
 1351              		.align	2
 1352              	.L55:
 1353 0028 00000000 		.word	speed
 1354              		.cfi_endproc
 1355              	.LFE73:
 1356              		.size	turnLeft, .-turnLeft
 1357              		.section	.text.initTurnLeft,"ax",%progbits
 1358              		.align	2
 1359              		.global	initTurnLeft
 1360              		.thumb
 1361              		.thumb_func
 1362              		.type	initTurnLeft, %function
 1363              	initTurnLeft:
 1364              	.LFB74:
 216:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 29


 217:.\main.c      **** void initTurnLeft(){
 1365              		.loc 1 217 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369 0000 80B5     		push	{r7, lr}
 1370              		.cfi_def_cfa_offset 8
 1371              		.cfi_offset 7, -8
 1372              		.cfi_offset 14, -4
 1373 0002 00AF     		add	r7, sp, #0
 1374              		.cfi_def_cfa_register 7
 218:.\main.c      ****     Timer_2_Stop();
 1375              		.loc 1 218 0
 1376 0004 FFF7FEFF 		bl	Timer_2_Stop
 219:.\main.c      ****     prev_movement_state = movement_state;
 1377              		.loc 1 219 0
 1378 0008 084B     		ldr	r3, .L58
 1379 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1380 000c 084B     		ldr	r3, .L58+4
 1381 000e 1A70     		strb	r2, [r3]
 220:.\main.c      ****     movement_state = LTURN;
 1382              		.loc 1 220 0
 1383 0010 064B     		ldr	r3, .L58
 1384 0012 0122     		movs	r2, #1
 1385 0014 1A70     		strb	r2, [r3]
 221:.\main.c      ****     brakeLeft();
 1386              		.loc 1 221 0
 1387 0016 FFF7FEFF 		bl	brakeLeft
 222:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1388              		.loc 1 222 0
 1389 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1390 001e 0346     		mov	r3, r0
 1391 0020 1A46     		mov	r2, r3
 1392 0022 044B     		ldr	r3, .L58+8
 1393 0024 1A80     		strh	r2, [r3]	@ movhi
 223:.\main.c      ****     Timer_2_Start();
 1394              		.loc 1 223 0
 1395 0026 FFF7FEFF 		bl	Timer_2_Start
 224:.\main.c      **** }
 1396              		.loc 1 224 0
 1397 002a 80BD     		pop	{r7, pc}
 1398              	.L59:
 1399              		.align	2
 1400              	.L58:
 1401 002c 00000000 		.word	movement_state
 1402 0030 00000000 		.word	prev_movement_state
 1403 0034 00000000 		.word	start_turn_count
 1404              		.cfi_endproc
 1405              	.LFE74:
 1406              		.size	initTurnLeft, .-initTurnLeft
 1407              		.section	.text.initTurnRight,"ax",%progbits
 1408              		.align	2
 1409              		.global	initTurnRight
 1410              		.thumb
 1411              		.thumb_func
 1412              		.type	initTurnRight, %function
 1413              	initTurnRight:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 30


 1414              	.LFB75:
 225:.\main.c      **** 
 226:.\main.c      **** void initTurnRight(){
 1415              		.loc 1 226 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419 0000 80B5     		push	{r7, lr}
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
 227:.\main.c      ****     Timer_2_Stop();
 1425              		.loc 1 227 0
 1426 0004 FFF7FEFF 		bl	Timer_2_Stop
 228:.\main.c      ****     prev_movement_state = movement_state;
 1427              		.loc 1 228 0
 1428 0008 084B     		ldr	r3, .L61
 1429 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1430 000c 084B     		ldr	r3, .L61+4
 1431 000e 1A70     		strb	r2, [r3]
 229:.\main.c      ****     movement_state = RTURN;
 1432              		.loc 1 229 0
 1433 0010 064B     		ldr	r3, .L61
 1434 0012 0222     		movs	r2, #2
 1435 0014 1A70     		strb	r2, [r3]
 230:.\main.c      ****     brakeRight();
 1436              		.loc 1 230 0
 1437 0016 FFF7FEFF 		bl	brakeRight
 231:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1438              		.loc 1 231 0
 1439 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1440 001e 0346     		mov	r3, r0
 1441 0020 1A46     		mov	r2, r3
 1442 0022 044B     		ldr	r3, .L61+8
 1443 0024 1A80     		strh	r2, [r3]	@ movhi
 232:.\main.c      ****     Timer_2_Start();
 1444              		.loc 1 232 0
 1445 0026 FFF7FEFF 		bl	Timer_2_Start
 233:.\main.c      **** }
 1446              		.loc 1 233 0
 1447 002a 80BD     		pop	{r7, pc}
 1448              	.L62:
 1449              		.align	2
 1450              	.L61:
 1451 002c 00000000 		.word	movement_state
 1452 0030 00000000 		.word	prev_movement_state
 1453 0034 00000000 		.word	start_turn_count
 1454              		.cfi_endproc
 1455              	.LFE75:
 1456              		.size	initTurnRight, .-initTurnRight
 1457              		.section	.text.initForward,"ax",%progbits
 1458              		.align	2
 1459              		.global	initForward
 1460              		.thumb
 1461              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 31


 1462              		.type	initForward, %function
 1463              	initForward:
 1464              	.LFB76:
 234:.\main.c      **** 
 235:.\main.c      **** void initForward(){
 1465              		.loc 1 235 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 1, uses_anonymous_args = 0
 1469 0000 80B5     		push	{r7, lr}
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 7, -8
 1472              		.cfi_offset 14, -4
 1473 0002 00AF     		add	r7, sp, #0
 1474              		.cfi_def_cfa_register 7
 236:.\main.c      ****     brakeMotor();
 1475              		.loc 1 236 0
 1476 0004 FFF7FEFF 		bl	brakeMotor
 237:.\main.c      ****     movement_state = DRIVE;
 1477              		.loc 1 237 0
 1478 0008 014B     		ldr	r3, .L64
 1479 000a 0022     		movs	r2, #0
 1480 000c 1A70     		strb	r2, [r3]
 238:.\main.c      **** }
 1481              		.loc 1 238 0
 1482 000e 80BD     		pop	{r7, pc}
 1483              	.L65:
 1484              		.align	2
 1485              	.L64:
 1486 0010 00000000 		.word	movement_state
 1487              		.cfi_endproc
 1488              	.LFE76:
 1489              		.size	initForward, .-initForward
 1490              		.section	.text.initBrake,"ax",%progbits
 1491              		.align	2
 1492              		.global	initBrake
 1493              		.thumb
 1494              		.thumb_func
 1495              		.type	initBrake, %function
 1496              	initBrake:
 1497              	.LFB77:
 239:.\main.c      **** 
 240:.\main.c      **** void initBrake(){
 1498              		.loc 1 240 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503 0000 80B4     		push	{r7}
 1504              		.cfi_def_cfa_offset 4
 1505              		.cfi_offset 7, -4
 1506 0002 00AF     		add	r7, sp, #0
 1507              		.cfi_def_cfa_register 7
 241:.\main.c      ****     movement_state = STOPPED;
 1508              		.loc 1 241 0
 1509 0004 034B     		ldr	r3, .L67
 1510 0006 0322     		movs	r2, #3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 32


 1511 0008 1A70     		strb	r2, [r3]
 242:.\main.c      **** }
 1512              		.loc 1 242 0
 1513 000a BD46     		mov	sp, r7
 1514              		.cfi_def_cfa_register 13
 1515              		@ sp needed
 1516 000c 5DF8047B 		ldr	r7, [sp], #4
 1517              		.cfi_restore 7
 1518              		.cfi_def_cfa_offset 0
 1519 0010 7047     		bx	lr
 1520              	.L68:
 1521 0012 00BF     		.align	2
 1522              	.L67:
 1523 0014 00000000 		.word	movement_state
 1524              		.cfi_endproc
 1525              	.LFE77:
 1526              		.size	initBrake, .-initBrake
 1527              		.section	.text.initTrack,"ax",%progbits
 1528              		.align	2
 1529              		.global	initTrack
 1530              		.thumb
 1531              		.thumb_func
 1532              		.type	initTrack, %function
 1533              	initTrack:
 1534              	.LFB78:
 243:.\main.c      **** 
 244:.\main.c      **** void initTrack()
 245:.\main.c      **** {
 1535              		.loc 1 245 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
 1539              		@ link register save eliminated.
 1540 0000 80B4     		push	{r7}
 1541              		.cfi_def_cfa_offset 4
 1542              		.cfi_offset 7, -4
 1543 0002 00AF     		add	r7, sp, #0
 1544              		.cfi_def_cfa_register 7
 246:.\main.c      ****     movement_state = TRACKING;
 1545              		.loc 1 246 0
 1546 0004 034B     		ldr	r3, .L70
 1547 0006 0422     		movs	r2, #4
 1548 0008 1A70     		strb	r2, [r3]
 247:.\main.c      **** }
 1549              		.loc 1 247 0
 1550 000a BD46     		mov	sp, r7
 1551              		.cfi_def_cfa_register 13
 1552              		@ sp needed
 1553 000c 5DF8047B 		ldr	r7, [sp], #4
 1554              		.cfi_restore 7
 1555              		.cfi_def_cfa_offset 0
 1556 0010 7047     		bx	lr
 1557              	.L71:
 1558 0012 00BF     		.align	2
 1559              	.L70:
 1560 0014 00000000 		.word	movement_state
 1561              		.cfi_endproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 33


 1562              	.LFE78:
 1563              		.size	initTrack, .-initTrack
 1564              		.section	.text.initTrackU,"ax",%progbits
 1565              		.align	2
 1566              		.global	initTrackU
 1567              		.thumb
 1568              		.thumb_func
 1569              		.type	initTrackU, %function
 1570              	initTrackU:
 1571              	.LFB79:
 248:.\main.c      **** 
 249:.\main.c      **** void initTrackU(){
 1572              		.loc 1 249 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576              		@ link register save eliminated.
 1577 0000 80B4     		push	{r7}
 1578              		.cfi_def_cfa_offset 4
 1579              		.cfi_offset 7, -4
 1580 0002 00AF     		add	r7, sp, #0
 1581              		.cfi_def_cfa_register 7
 250:.\main.c      ****     movement_state = TRACKING_U;
 1582              		.loc 1 250 0
 1583 0004 034B     		ldr	r3, .L73
 1584 0006 0522     		movs	r2, #5
 1585 0008 1A70     		strb	r2, [r3]
 251:.\main.c      **** }
 1586              		.loc 1 251 0
 1587 000a BD46     		mov	sp, r7
 1588              		.cfi_def_cfa_register 13
 1589              		@ sp needed
 1590 000c 5DF8047B 		ldr	r7, [sp], #4
 1591              		.cfi_restore 7
 1592              		.cfi_def_cfa_offset 0
 1593 0010 7047     		bx	lr
 1594              	.L74:
 1595 0012 00BF     		.align	2
 1596              	.L73:
 1597 0014 00000000 		.word	movement_state
 1598              		.cfi_endproc
 1599              	.LFE79:
 1600              		.size	initTrackU, .-initTrackU
 1601              		.section	.text.inittrackLineZ,"ax",%progbits
 1602              		.align	2
 1603              		.global	inittrackLineZ
 1604              		.thumb
 1605              		.thumb_func
 1606              		.type	inittrackLineZ, %function
 1607              	inittrackLineZ:
 1608              	.LFB80:
 252:.\main.c      **** 
 253:.\main.c      **** void inittrackLineZ(){
 1609              		.loc 1 253 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 34


 1613              		@ link register save eliminated.
 1614 0000 80B4     		push	{r7}
 1615              		.cfi_def_cfa_offset 4
 1616              		.cfi_offset 7, -4
 1617 0002 00AF     		add	r7, sp, #0
 1618              		.cfi_def_cfa_register 7
 254:.\main.c      ****     movement_state = TRACKING_SOFT;
 1619              		.loc 1 254 0
 1620 0004 034B     		ldr	r3, .L76
 1621 0006 0622     		movs	r2, #6
 1622 0008 1A70     		strb	r2, [r3]
 255:.\main.c      **** }
 1623              		.loc 1 255 0
 1624 000a BD46     		mov	sp, r7
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 000c 5DF8047B 		ldr	r7, [sp], #4
 1628              		.cfi_restore 7
 1629              		.cfi_def_cfa_offset 0
 1630 0010 7047     		bx	lr
 1631              	.L77:
 1632 0012 00BF     		.align	2
 1633              	.L76:
 1634 0014 00000000 		.word	movement_state
 1635              		.cfi_endproc
 1636              	.LFE80:
 1637              		.size	inittrackLineZ, .-inittrackLineZ
 1638              		.section	.text.rxInt,"ax",%progbits
 1639              		.align	2
 1640              		.global	rxInt
 1641              		.thumb
 1642              		.thumb_func
 1643              		.type	rxInt, %function
 1644              	rxInt:
 1645              	.LFB81:
 256:.\main.c      **** 
 257:.\main.c      **** 
 258:.\main.c      **** 
 259:.\main.c      **** //Binary RF Data
 260:.\main.c      **** CY_ISR(rxInt){
 1646              		.loc 1 260 0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 8
 1649              		@ frame_needed = 1, uses_anonymous_args = 0
 1650 0000 B0B5     		push	{r4, r5, r7, lr}
 1651              		.cfi_def_cfa_offset 16
 1652              		.cfi_offset 4, -16
 1653              		.cfi_offset 5, -12
 1654              		.cfi_offset 7, -8
 1655              		.cfi_offset 14, -4
 1656 0002 82B0     		sub	sp, sp, #8
 1657              		.cfi_def_cfa_offset 24
 1658 0004 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
 261:.\main.c      ****     char rf_char = UART_GetChar();
 1660              		.loc 1 261 0
 1661 0006 FFF7FEFF 		bl	UART_GetChar
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 35


 1662 000a 0346     		mov	r3, r0
 1663 000c FB71     		strb	r3, [r7, #7]
 262:.\main.c      ****     if(rf_char == SOP){
 1664              		.loc 1 262 0
 1665 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1666 0010 AA2B     		cmp	r3, #170
 1667 0012 2BD1     		bne	.L79
 263:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 264:.\main.c      ****             if(byteCount == 34)
 1668              		.loc 1 264 0
 1669 0014 224B     		ldr	r3, .L83
 1670 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 0018 222B     		cmp	r3, #34
 1672 001a 20D1     		bne	.L80
 265:.\main.c      ****             {
 266:.\main.c      ****                 system_state = buffer_state;
 1673              		.loc 1 266 0
 1674 001c 214B     		ldr	r3, .L83+4
 1675 001e 224A     		ldr	r2, .L83+8
 1676 0020 1568     		ldr	r5, [r2]	@ unaligned
 1677 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1678 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1679 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1680 0028 1D60     		str	r5, [r3]	@ unaligned
 1681 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1682 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1683 002e D960     		str	r1, [r3, #12]	@ unaligned
 1684 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1685 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1686 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1687 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1688 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1689 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1690 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1691 003e D961     		str	r1, [r3, #28]	@ unaligned
 267:.\main.c      ****                 if(initial_pos_valid == 0)
 1692              		.loc 1 267 0
 1693 0040 1A4B     		ldr	r3, .L83+12
 1694 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1695 0044 002B     		cmp	r3, #0
 1696 0046 0AD1     		bne	.L80
 268:.\main.c      ****                 {
 269:.\main.c      ****                     LED_Write(~LED_Read());
 1697              		.loc 1 269 0
 1698 0048 FFF7FEFF 		bl	LED_Read
 1699 004c 0346     		mov	r3, r0
 1700 004e DB43     		mvns	r3, r3
 1701 0050 DBB2     		uxtb	r3, r3
 1702 0052 1846     		mov	r0, r3
 1703 0054 FFF7FEFF 		bl	LED_Write
 270:.\main.c      ****                     initial_pos_valid = 1;
 1704              		.loc 1 270 0
 1705 0058 144B     		ldr	r3, .L83+12
 1706 005a 0122     		movs	r2, #1
 1707 005c 1A70     		strb	r2, [r3]
 1708              	.L80:
 271:.\main.c      ****                 }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 36


 272:.\main.c      ****             }
 273:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1709              		.loc 1 273 0
 1710 005e 104B     		ldr	r3, .L83
 1711 0060 0222     		movs	r2, #2
 1712 0062 1A70     		strb	r2, [r3]
 274:.\main.c      ****             flag_rx = 0;
 1713              		.loc 1 274 0
 1714 0064 124B     		ldr	r3, .L83+16
 1715 0066 0022     		movs	r2, #0
 1716 0068 1A70     		strb	r2, [r3]
 1717 006a 16E0     		b	.L78
 1718              	.L79:
 275:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 276:.\main.c      ****         }
 277:.\main.c      ****         else
 278:.\main.c      ****         {
 279:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1719              		.loc 1 279 0
 1720 006c 0C4B     		ldr	r3, .L83
 1721 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1722 0070 03F00103 		and	r3, r3, #1
 1723 0074 0F49     		ldr	r1, .L83+20
 1724 0076 FA79     		ldrb	r2, [r7, #7]
 1725 0078 CA54     		strb	r2, [r1, r3]
 280:.\main.c      ****            
 281:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1726              		.loc 1 281 0
 1727 007a 094B     		ldr	r3, .L83
 1728 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 007e 03F00103 		and	r3, r3, #1
 1730 0082 DBB2     		uxtb	r3, r3
 1731 0084 002B     		cmp	r3, #0
 1732 0086 02D0     		beq	.L82
 282:.\main.c      ****             {
 283:.\main.c      ****                 flag_rx = 1;
 1733              		.loc 1 283 0
 1734 0088 094B     		ldr	r3, .L83+16
 1735 008a 0122     		movs	r2, #1
 1736 008c 1A70     		strb	r2, [r3]
 1737              	.L82:
 284:.\main.c      ****             }
 285:.\main.c      ****             byteCount = (byteCount + 1);
 1738              		.loc 1 285 0
 1739 008e 044B     		ldr	r3, .L83
 1740 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1741 0092 0133     		adds	r3, r3, #1
 1742 0094 DAB2     		uxtb	r2, r3
 1743 0096 024B     		ldr	r3, .L83
 1744 0098 1A70     		strb	r2, [r3]
 1745              	.L78:
 286:.\main.c      ****         }
 287:.\main.c      **** }
 1746              		.loc 1 287 0
 1747 009a 0837     		adds	r7, r7, #8
 1748              		.cfi_def_cfa_offset 16
 1749 009c BD46     		mov	sp, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 37


 1750              		.cfi_def_cfa_register 13
 1751              		@ sp needed
 1752 009e B0BD     		pop	{r4, r5, r7, pc}
 1753              	.L84:
 1754              		.align	2
 1755              	.L83:
 1756 00a0 00000000 		.word	byteCount
 1757 00a4 00000000 		.word	system_state
 1758 00a8 00000000 		.word	buffer_state
 1759 00ac 00000000 		.word	initial_pos_valid
 1760 00b0 00000000 		.word	flag_rx
 1761 00b4 00000000 		.word	packet
 1762              		.cfi_endproc
 1763              	.LFE81:
 1764              		.size	rxInt, .-rxInt
 1765              		.global	__aeabi_i2f
 1766              		.global	__aeabi_fmul
 1767              		.global	__aeabi_f2iz
 1768              		.section	.rodata
 1769 000a 0000     		.align	2
 1770              	.LC1:
 1771 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1771      65742071 
 1771      7561643A 
 1771      2025640D 
 1771      0A00
 1772              		.section	.text.BT_rxInt,"ax",%progbits
 1773              		.align	2
 1774              		.global	BT_rxInt
 1775              		.thumb
 1776              		.thumb_func
 1777              		.type	BT_rxInt, %function
 1778              	BT_rxInt:
 1779              	.LFB82:
 288:.\main.c      **** 
 289:.\main.c      **** CY_ISR(BT_rxInt)
 290:.\main.c      **** {
 1780              		.loc 1 290 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 24
 1783              		@ frame_needed = 1, uses_anonymous_args = 0
 1784 0000 80B5     		push	{r7, lr}
 1785              		.cfi_def_cfa_offset 8
 1786              		.cfi_offset 7, -8
 1787              		.cfi_offset 14, -4
 1788 0002 86B0     		sub	sp, sp, #24
 1789              		.cfi_def_cfa_offset 32
 1790 0004 00AF     		add	r7, sp, #0
 1791              		.cfi_def_cfa_register 7
 291:.\main.c      ****     char rf_char = UART_GetChar();
 1792              		.loc 1 291 0
 1793 0006 FFF7FEFF 		bl	UART_GetChar
 1794 000a 0346     		mov	r3, r0
 1795 000c FB75     		strb	r3, [r7, #23]
 292:.\main.c      ****     switch(rf_char){
 1796              		.loc 1 292 0
 1797 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 38


 1798 0010 613B     		subs	r3, r3, #97
 1799 0012 192B     		cmp	r3, #25
 1800 0014 00F2A680 		bhi	.L85
 1801 0018 01A2     		adr	r2, .L88
 1802 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1803 001e 00BF     		.p2align 2
 1804              	.L88:
 1805 0020 89000000 		.word	.L87+1
 1806 0024 65010000 		.word	.L85+1
 1807 0028 65010000 		.word	.L85+1
 1808 002c AD000000 		.word	.L89+1
 1809 0030 65010000 		.word	.L85+1
 1810 0034 B9000000 		.word	.L90+1
 1811 0038 65010000 		.word	.L85+1
 1812 003c 65010000 		.word	.L85+1
 1813 0040 65010000 		.word	.L85+1
 1814 0044 65010000 		.word	.L85+1
 1815 0048 65010000 		.word	.L85+1
 1816 004c 65010000 		.word	.L85+1
 1817 0050 65010000 		.word	.L85+1
 1818 0054 65010000 		.word	.L85+1
 1819 0058 65010000 		.word	.L85+1
 1820 005c 65010000 		.word	.L85+1
 1821 0060 E9000000 		.word	.L91+1
 1822 0064 3F010000 		.word	.L92+1
 1823 0068 A1000000 		.word	.L93+1
 1824 006c C5000000 		.word	.L94+1
 1825 0070 D1000000 		.word	.L95+1
 1826 0074 65010000 		.word	.L85+1
 1827 0078 95000000 		.word	.L96+1
 1828 007c 55010000 		.word	.L97+1
 1829 0080 65010000 		.word	.L85+1
 1830 0084 DD000000 		.word	.L98+1
 1831              		.p2align 1
 1832              	.L87:
 1833              	.LBB3:
 293:.\main.c      ****     case 'a':
 294:.\main.c      ****         initTurnLeft();
 1834              		.loc 1 294 0
 1835 0088 FFF7FEFF 		bl	initTurnLeft
 295:.\main.c      ****         track_mode = NO_TRACK;
 1836              		.loc 1 295 0
 1837 008c 374B     		ldr	r3, .L100
 1838 008e 0022     		movs	r2, #0
 1839 0090 1A70     		strb	r2, [r3]
 296:.\main.c      ****         break;
 1840              		.loc 1 296 0
 1841 0092 67E0     		b	.L85
 1842              	.L96:
 297:.\main.c      ****     case 'w':
 298:.\main.c      ****         initForward();
 1843              		.loc 1 298 0
 1844 0094 FFF7FEFF 		bl	initForward
 299:.\main.c      ****         track_mode = NO_TRACK;
 1845              		.loc 1 299 0
 1846 0098 344B     		ldr	r3, .L100
 1847 009a 0022     		movs	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 39


 1848 009c 1A70     		strb	r2, [r3]
 300:.\main.c      ****         break;
 1849              		.loc 1 300 0
 1850 009e 61E0     		b	.L85
 1851              	.L93:
 301:.\main.c      ****     case 's': 
 302:.\main.c      ****         reverseDirection();
 1852              		.loc 1 302 0
 1853 00a0 FFF7FEFF 		bl	reverseDirection
 303:.\main.c      ****         track_mode = NO_TRACK;
 1854              		.loc 1 303 0
 1855 00a4 314B     		ldr	r3, .L100
 1856 00a6 0022     		movs	r2, #0
 1857 00a8 1A70     		strb	r2, [r3]
 304:.\main.c      ****         break;
 1858              		.loc 1 304 0
 1859 00aa 5BE0     		b	.L85
 1860              	.L89:
 305:.\main.c      ****     case 'd':
 306:.\main.c      ****         initTurnRight();
 1861              		.loc 1 306 0
 1862 00ac FFF7FEFF 		bl	initTurnRight
 307:.\main.c      ****         track_mode = NO_TRACK;
 1863              		.loc 1 307 0
 1864 00b0 2E4B     		ldr	r3, .L100
 1865 00b2 0022     		movs	r2, #0
 1866 00b4 1A70     		strb	r2, [r3]
 308:.\main.c      ****         break;
 1867              		.loc 1 308 0
 1868 00b6 55E0     		b	.L85
 1869              	.L90:
 309:.\main.c      ****     case 'f':
 310:.\main.c      ****         initBrake();
 1870              		.loc 1 310 0
 1871 00b8 FFF7FEFF 		bl	initBrake
 311:.\main.c      ****         track_mode = NO_TRACK;
 1872              		.loc 1 311 0
 1873 00bc 2B4B     		ldr	r3, .L100
 1874 00be 0022     		movs	r2, #0
 1875 00c0 1A70     		strb	r2, [r3]
 312:.\main.c      ****         break;
 1876              		.loc 1 312 0
 1877 00c2 4FE0     		b	.L85
 1878              	.L94:
 313:.\main.c      ****     case('t'):
 314:.\main.c      ****         track_mode = CURVE_TRACK;
 1879              		.loc 1 314 0
 1880 00c4 294B     		ldr	r3, .L100
 1881 00c6 0122     		movs	r2, #1
 1882 00c8 1A70     		strb	r2, [r3]
 315:.\main.c      ****         initTrack();
 1883              		.loc 1 315 0
 1884 00ca FFF7FEFF 		bl	initTrack
 316:.\main.c      ****         break;
 1885              		.loc 1 316 0
 1886 00ce 49E0     		b	.L85
 1887              	.L95:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 40


 317:.\main.c      ****     case('u'):
 318:.\main.c      ****         initTrackU();
 1888              		.loc 1 318 0
 1889 00d0 FFF7FEFF 		bl	initTrackU
 319:.\main.c      ****         track_mode = U_TRACK;
 1890              		.loc 1 319 0
 1891 00d4 254B     		ldr	r3, .L100
 1892 00d6 0222     		movs	r2, #2
 1893 00d8 1A70     		strb	r2, [r3]
 320:.\main.c      ****         break;
 1894              		.loc 1 320 0
 1895 00da 43E0     		b	.L85
 1896              	.L98:
 321:.\main.c      ****     case('z'):
 322:.\main.c      ****         track_mode = SQUARE_TRACK;
 1897              		.loc 1 322 0
 1898 00dc 234B     		ldr	r3, .L100
 1899 00de 0322     		movs	r2, #3
 1900 00e0 1A70     		strb	r2, [r3]
 323:.\main.c      ****         inittrackLineZ();
 1901              		.loc 1 323 0
 1902 00e2 FFF7FEFF 		bl	inittrackLineZ
 324:.\main.c      ****         break;
 1903              		.loc 1 324 0
 1904 00e6 3DE0     		b	.L85
 1905              	.L91:
 325:.\main.c      ****     case('q'):
 326:.\main.c      ****         track_mode = QUAD_STOP;
 1906              		.loc 1 326 0
 1907 00e8 204B     		ldr	r3, .L100
 1908 00ea 0422     		movs	r2, #4
 1909 00ec 1A70     		strb	r2, [r3]
 327:.\main.c      ****         accum_dist = 0;
 1910              		.loc 1 327 0
 1911 00ee 204B     		ldr	r3, .L100+4
 1912 00f0 0022     		movs	r2, #0
 1913 00f2 1A80     		strh	r2, [r3]	@ movhi
 328:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 1914              		.loc 1 328 0
 1915 00f4 1F4B     		ldr	r3, .L100+8
 1916 00f6 1B88     		ldrh	r3, [r3]
 1917 00f8 1BB2     		sxth	r3, r3
 1918 00fa 1846     		mov	r0, r3
 1919 00fc FFF7FEFF 		bl	__aeabi_i2f
 1920 0100 0246     		mov	r2, r0
 1921 0102 1D4B     		ldr	r3, .L100+12
 1922 0104 1B68     		ldr	r3, [r3]	@ float
 1923 0106 1046     		mov	r0, r2
 1924 0108 1946     		mov	r1, r3
 1925 010a FFF7FEFF 		bl	__aeabi_fmul
 1926 010e 0346     		mov	r3, r0
 1927 0110 1846     		mov	r0, r3
 1928 0112 FFF7FEFF 		bl	__aeabi_f2iz
 1929 0116 0346     		mov	r3, r0
 1930 0118 9AB2     		uxth	r2, r3
 1931 011a 184B     		ldr	r3, .L100+16
 1932 011c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 41


 329:.\main.c      ****         char mes[16];
 330:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 1933              		.loc 1 330 0
 1934 011e 174B     		ldr	r3, .L100+16
 1935 0120 1B88     		ldrh	r3, [r3]
 1936 0122 1BB2     		sxth	r3, r3
 1937 0124 3A1D     		adds	r2, r7, #4
 1938 0126 1046     		mov	r0, r2
 1939 0128 1549     		ldr	r1, .L100+20
 1940 012a 1A46     		mov	r2, r3
 1941 012c FFF7FEFF 		bl	sprintf
 331:.\main.c      ****         UART_PutString(mes);
 1942              		.loc 1 331 0
 1943 0130 3B1D     		adds	r3, r7, #4
 1944 0132 1846     		mov	r0, r3
 1945 0134 FFF7FEFF 		bl	UART_PutString
 332:.\main.c      ****         initForward();
 1946              		.loc 1 332 0
 1947 0138 FFF7FEFF 		bl	initForward
 333:.\main.c      ****         break;
 1948              		.loc 1 333 0
 1949 013c 12E0     		b	.L85
 1950              	.L92:
 334:.\main.c      ****     case ('r'):
 335:.\main.c      ****         track_mode = RF_STOP;
 1951              		.loc 1 335 0
 1952 013e 0B4B     		ldr	r3, .L100
 1953 0140 0522     		movs	r2, #5
 1954 0142 1A70     		strb	r2, [r3]
 336:.\main.c      ****         changeToRF();
 1955              		.loc 1 336 0
 1956 0144 FFF7FEFF 		bl	changeToRF
 337:.\main.c      ****         // Make initial position
 338:.\main.c      ****         initial_pos_valid = 0;
 1957              		.loc 1 338 0
 1958 0148 0E4B     		ldr	r3, .L100+24
 1959 014a 0022     		movs	r2, #0
 1960 014c 1A70     		strb	r2, [r3]
 339:.\main.c      ****         initBrake();
 1961              		.loc 1 339 0
 1962 014e FFF7FEFF 		bl	initBrake
 340:.\main.c      ****         break;
 1963              		.loc 1 340 0
 1964 0152 07E0     		b	.L85
 1965              	.L97:
 341:.\main.c      ****     case ('x'):
 342:.\main.c      ****         track_mode = DEST_TEST;
 1966              		.loc 1 342 0
 1967 0154 054B     		ldr	r3, .L100
 1968 0156 0622     		movs	r2, #6
 1969 0158 1A70     		strb	r2, [r3]
 343:.\main.c      ****         generateDirections();
 1970              		.loc 1 343 0
 1971 015a FFF7FEFF 		bl	generateDirections
 344:.\main.c      ****         inittrackLineZ();
 1972              		.loc 1 344 0
 1973 015e FFF7FEFF 		bl	inittrackLineZ
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 42


 345:.\main.c      ****         break;
 1974              		.loc 1 345 0
 1975 0162 00BF     		nop
 1976              	.L85:
 1977              	.LBE3:
 346:.\main.c      ****     }
 347:.\main.c      **** }
 1978              		.loc 1 347 0
 1979 0164 1837     		adds	r7, r7, #24
 1980              		.cfi_def_cfa_offset 8
 1981 0166 BD46     		mov	sp, r7
 1982              		.cfi_def_cfa_register 13
 1983              		@ sp needed
 1984 0168 80BD     		pop	{r7, pc}
 1985              	.L101:
 1986 016a 00BF     		.align	2
 1987              	.L100:
 1988 016c 00000000 		.word	track_mode
 1989 0170 00000000 		.word	accum_dist
 1990 0174 00000000 		.word	target_distance_cm
 1991 0178 00000000 		.word	quad_per_cm
 1992 017c 00000000 		.word	target_distance_quad
 1993 0180 0C000000 		.word	.LC1
 1994 0184 00000000 		.word	initial_pos_valid
 1995              		.cfi_endproc
 1996              	.LFE82:
 1997              		.size	BT_rxInt, .-BT_rxInt
 1998              		.section	.text.BT_txInt,"ax",%progbits
 1999              		.align	2
 2000              		.global	BT_txInt
 2001              		.thumb
 2002              		.thumb_func
 2003              		.type	BT_txInt, %function
 2004              	BT_txInt:
 2005              	.LFB83:
 348:.\main.c      **** 
 349:.\main.c      **** //BT
 350:.\main.c      **** CY_ISR(BT_txInt)
 351:.\main.c      **** {
 2006              		.loc 1 351 0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 0
 2009              		@ frame_needed = 1, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011 0000 80B4     		push	{r7}
 2012              		.cfi_def_cfa_offset 4
 2013              		.cfi_offset 7, -4
 2014 0002 00AF     		add	r7, sp, #0
 2015              		.cfi_def_cfa_register 7
 352:.\main.c      ****     
 353:.\main.c      **** }
 2016              		.loc 1 353 0
 2017 0004 BD46     		mov	sp, r7
 2018              		.cfi_def_cfa_register 13
 2019              		@ sp needed
 2020 0006 5DF8047B 		ldr	r7, [sp], #4
 2021              		.cfi_restore 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 43


 2022              		.cfi_def_cfa_offset 0
 2023 000a 7047     		bx	lr
 2024              		.cfi_endproc
 2025              	.LFE83:
 2026              		.size	BT_txInt, .-BT_txInt
 2027              		.section	.text.adc_isr,"ax",%progbits
 2028              		.align	2
 2029              		.global	adc_isr
 2030              		.thumb
 2031              		.thumb_func
 2032              		.type	adc_isr, %function
 2033              	adc_isr:
 2034              	.LFB84:
 354:.\main.c      **** 
 355:.\main.c      **** //ADC:
 356:.\main.c      **** CY_ISR (adc_isr)
 357:.\main.c      **** {
 2035              		.loc 1 357 0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 0
 2038              		@ frame_needed = 1, uses_anonymous_args = 0
 2039 0000 80B5     		push	{r7, lr}
 2040              		.cfi_def_cfa_offset 8
 2041              		.cfi_offset 7, -8
 2042              		.cfi_offset 14, -4
 2043 0002 00AF     		add	r7, sp, #0
 2044              		.cfi_def_cfa_register 7
 358:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 359:.\main.c      ****     adc_result = ADC_GetResult16();
 2045              		.loc 1 359 0
 2046 0004 FFF7FEFF 		bl	ADC_GetResult16
 2047 0008 0346     		mov	r3, r0
 2048 000a 1A46     		mov	r2, r3
 2049 000c 044B     		ldr	r3, .L104
 2050 000e 1A80     		strh	r2, [r3]	@ movhi
 360:.\main.c      ****     flag_receive_ADC = 1;
 2051              		.loc 1 360 0
 2052 0010 044B     		ldr	r3, .L104+4
 2053 0012 0122     		movs	r2, #1
 2054 0014 1A70     		strb	r2, [r3]
 361:.\main.c      ****     flag_print_rf = 1;
 2055              		.loc 1 361 0
 2056 0016 044B     		ldr	r3, .L104+8
 2057 0018 0122     		movs	r2, #1
 2058 001a 1A70     		strb	r2, [r3]
 362:.\main.c      ****     //LED_Write(~LED_Read());
 363:.\main.c      **** }
 2059              		.loc 1 363 0
 2060 001c 80BD     		pop	{r7, pc}
 2061              	.L105:
 2062 001e 00BF     		.align	2
 2063              	.L104:
 2064 0020 00000000 		.word	adc_result
 2065 0024 00000000 		.word	flag_receive_ADC
 2066 0028 00000000 		.word	flag_print_rf
 2067              		.cfi_endproc
 2068              	.LFE84:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 44


 2069              		.size	adc_isr, .-adc_isr
 2070              		.section	.rodata
 2071 001e 0000     		.align	2
 2072              	.LC2:
 2073 0020 64697374 		.ascii	"dist: %d\015\012\000"
 2073      3A202564 
 2073      0D0A00
 2074              		.global	__aeabi_i2d
 2075              		.global	__aeabi_ddiv
 2076              		.global	__aeabi_dcmple
 2077              		.section	.text.isr_quad1,"ax",%progbits
 2078              		.align	2
 2079              		.global	isr_quad1
 2080              		.thumb
 2081              		.thumb_func
 2082              		.type	isr_quad1, %function
 2083              	isr_quad1:
 2084              	.LFB85:
 364:.\main.c      **** 
 365:.\main.c      **** CY_ISR (isr_quad1)
 366:.\main.c      **** {
 2085              		.loc 1 366 0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 24
 2088              		@ frame_needed = 1, uses_anonymous_args = 0
 2089 0000 B0B5     		push	{r4, r5, r7, lr}
 2090              		.cfi_def_cfa_offset 16
 2091              		.cfi_offset 4, -16
 2092              		.cfi_offset 5, -12
 2093              		.cfi_offset 7, -8
 2094              		.cfi_offset 14, -4
 2095 0002 86B0     		sub	sp, sp, #24
 2096              		.cfi_def_cfa_offset 40
 2097 0004 00AF     		add	r7, sp, #0
 2098              		.cfi_def_cfa_register 7
 367:.\main.c      ****     //LED_Write(~LED_Read());
 368:.\main.c      ****     last_quad_count1 = quad_count1;
 2099              		.loc 1 368 0
 2100 0006 664B     		ldr	r3, .L113
 2101 0008 1A88     		ldrh	r2, [r3]
 2102 000a 664B     		ldr	r3, .L113+4
 2103 000c 1A80     		strh	r2, [r3]	@ movhi
 369:.\main.c      ****     last_quad_count2 = quad_count2;
 2104              		.loc 1 369 0
 2105 000e 664B     		ldr	r3, .L113+8
 2106 0010 1A88     		ldrh	r2, [r3]
 2107 0012 664B     		ldr	r3, .L113+12
 2108 0014 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 2109              		.loc 1 370 0
 2110 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2111 001a 0346     		mov	r3, r0
 2112 001c 1A46     		mov	r2, r3
 2113 001e 604B     		ldr	r3, .L113
 2114 0020 1A80     		strh	r2, [r3]	@ movhi
 371:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 2115              		.loc 1 371 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 45


 2116 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2117 0026 0346     		mov	r3, r0
 2118 0028 1A46     		mov	r2, r3
 2119 002a 5F4B     		ldr	r3, .L113+8
 2120 002c 1A80     		strh	r2, [r3]	@ movhi
 372:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 2121              		.loc 1 372 0
 2122 002e 5C4B     		ldr	r3, .L113
 2123 0030 1B88     		ldrh	r3, [r3]
 2124 0032 9AB2     		uxth	r2, r3
 2125 0034 5B4B     		ldr	r3, .L113+4
 2126 0036 1B88     		ldrh	r3, [r3]
 2127 0038 9BB2     		uxth	r3, r3
 2128 003a D31A     		subs	r3, r2, r3
 2129 003c 9BB2     		uxth	r3, r3
 2130 003e 9AB2     		uxth	r2, r3
 2131 0040 5B4B     		ldr	r3, .L113+16
 2132 0042 1A80     		strh	r2, [r3]	@ movhi
 373:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 2133              		.loc 1 373 0
 2134 0044 584B     		ldr	r3, .L113+8
 2135 0046 1B88     		ldrh	r3, [r3]
 2136 0048 9AB2     		uxth	r2, r3
 2137 004a 584B     		ldr	r3, .L113+12
 2138 004c 1B88     		ldrh	r3, [r3]
 2139 004e 9BB2     		uxth	r3, r3
 2140 0050 D31A     		subs	r3, r2, r3
 2141 0052 9BB2     		uxth	r3, r3
 2142 0054 9AB2     		uxth	r2, r3
 2143 0056 574B     		ldr	r3, .L113+20
 2144 0058 1A80     		strh	r2, [r3]	@ movhi
 374:.\main.c      ****     
 375:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && track_mode 
 2145              		.loc 1 375 0
 2146 005a 514B     		ldr	r3, .L113
 2147 005c 1B88     		ldrh	r3, [r3]
 2148 005e 1BB2     		sxth	r3, r3
 2149 0060 002B     		cmp	r3, #0
 2150 0062 B8BF     		it	lt
 2151 0064 5B42     		rsblt	r3, r3, #0
 2152 0066 40F6B832 		movw	r2, #3000
 2153 006a 9342     		cmp	r3, r2
 2154 006c 17DD     		ble	.L107
 2155              		.loc 1 375 0 is_stmt 0 discriminator 1
 2156 006e 524B     		ldr	r3, .L113+24
 2157 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2158 0072 012B     		cmp	r3, #1
 2159 0074 13D0     		beq	.L107
 2160              		.loc 1 375 0 discriminator 2
 2161 0076 504B     		ldr	r3, .L113+24
 2162 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2163 007a 022B     		cmp	r3, #2
 2164 007c 0FD0     		beq	.L107
 2165              		.loc 1 375 0 discriminator 3
 2166 007e 4F4B     		ldr	r3, .L113+28
 2167 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2168 0082 042B     		cmp	r3, #4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 46


 2169 0084 0BD0     		beq	.L107
 376:.\main.c      ****     {
 377:.\main.c      ****         QuadDec_M1_SetCounter(0);
 2170              		.loc 1 377 0 is_stmt 1
 2171 0086 0020     		movs	r0, #0
 2172 0088 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 378:.\main.c      ****         QuadDec_M2_SetCounter(0);
 2173              		.loc 1 378 0
 2174 008c 0020     		movs	r0, #0
 2175 008e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 379:.\main.c      ****         quad_count1 = 0;
 2176              		.loc 1 379 0
 2177 0092 434B     		ldr	r3, .L113
 2178 0094 0022     		movs	r2, #0
 2179 0096 1A80     		strh	r2, [r3]	@ movhi
 380:.\main.c      ****         quad_count2 = 0;
 2180              		.loc 1 380 0
 2181 0098 434B     		ldr	r3, .L113+8
 2182 009a 0022     		movs	r2, #0
 2183 009c 1A80     		strh	r2, [r3]	@ movhi
 2184              	.L107:
 381:.\main.c      ****     }
 382:.\main.c      **** 
 383:.\main.c      ****     flag_calc_wheelspeed = 1;
 2185              		.loc 1 383 0
 2186 009e 484B     		ldr	r3, .L113+32
 2187 00a0 0122     		movs	r2, #1
 2188 00a2 1A70     		strb	r2, [r3]
 384:.\main.c      ****     
 385:.\main.c      ****     if (track_mode == QUAD_STOP)
 2189              		.loc 1 385 0
 2190 00a4 454B     		ldr	r3, .L113+28
 2191 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 00a8 042B     		cmp	r3, #4
 2193 00aa 2AD1     		bne	.L108
 2194              	.LBB4:
 386:.\main.c      ****     {
 387:.\main.c      ****         accum_dist += quad_diff1;
 2195              		.loc 1 387 0
 2196 00ac 454B     		ldr	r3, .L113+36
 2197 00ae 1B88     		ldrh	r3, [r3]
 2198 00b0 9AB2     		uxth	r2, r3
 2199 00b2 3F4B     		ldr	r3, .L113+16
 2200 00b4 1B88     		ldrh	r3, [r3]
 2201 00b6 9BB2     		uxth	r3, r3
 2202 00b8 1344     		add	r3, r3, r2
 2203 00ba 9BB2     		uxth	r3, r3
 2204 00bc 9AB2     		uxth	r2, r3
 2205 00be 414B     		ldr	r3, .L113+36
 2206 00c0 1A80     		strh	r2, [r3]	@ movhi
 388:.\main.c      ****         char mes[16];
 389:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 2207              		.loc 1 389 0
 2208 00c2 404B     		ldr	r3, .L113+36
 2209 00c4 1B88     		ldrh	r3, [r3]
 2210 00c6 1BB2     		sxth	r3, r3
 2211 00c8 3A46     		mov	r2, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 47


 2212 00ca 1046     		mov	r0, r2
 2213 00cc 3E49     		ldr	r1, .L113+40
 2214 00ce 1A46     		mov	r2, r3
 2215 00d0 FFF7FEFF 		bl	sprintf
 390:.\main.c      ****         UART_PutString(mes);
 2216              		.loc 1 390 0
 2217 00d4 3B46     		mov	r3, r7
 2218 00d6 1846     		mov	r0, r3
 2219 00d8 FFF7FEFF 		bl	UART_PutString
 391:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 2220              		.loc 1 391 0
 2221 00dc 394B     		ldr	r3, .L113+36
 2222 00de 1B88     		ldrh	r3, [r3]
 2223 00e0 1BB2     		sxth	r3, r3
 2224 00e2 83EAE372 		eor	r2, r3, r3, asr #31
 2225 00e6 A2EBE372 		sub	r2, r2, r3, asr #31
 2226 00ea 384B     		ldr	r3, .L113+44
 2227 00ec 1B88     		ldrh	r3, [r3]
 2228 00ee 1BB2     		sxth	r3, r3
 2229 00f0 9A42     		cmp	r2, r3
 2230 00f2 05DB     		blt	.L109
 392:.\main.c      ****         {
 393:.\main.c      ****             initBrake();
 2231              		.loc 1 393 0
 2232 00f4 FFF7FEFF 		bl	initBrake
 394:.\main.c      ****             track_mode = NO_TRACK;
 2233              		.loc 1 394 0
 2234 00f8 304B     		ldr	r3, .L113+28
 2235 00fa 0022     		movs	r2, #0
 2236 00fc 1A70     		strb	r2, [r3]
 2237              	.LBE4:
 2238 00fe 4CE0     		b	.L106
 2239              	.L109:
 2240 0100 4BE0     		b	.L106
 2241              	.L108:
 395:.\main.c      ****         }
 396:.\main.c      ****     } else if (track_mode == RF_STOP)
 2242              		.loc 1 396 0
 2243 0102 2E4B     		ldr	r3, .L113+28
 2244 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2245 0106 052B     		cmp	r3, #5
 2246 0108 47D1     		bne	.L106
 2247              	.LBB5:
 397:.\main.c      ****     { 
 398:.\main.c      ****         // Do pythag
 399:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 2248              		.loc 1 399 0
 2249 010a 314B     		ldr	r3, .L113+48
 2250 010c 5B88     		ldrh	r3, [r3, #2]
 2251 010e 1AB2     		sxth	r2, r3
 2252 0110 304B     		ldr	r3, .L113+52
 2253 0112 1B88     		ldrh	r3, [r3]
 2254 0114 1BB2     		sxth	r3, r3
 2255 0116 D31A     		subs	r3, r2, r3
 2256 0118 1846     		mov	r0, r3
 2257 011a FFF7FEFF 		bl	__aeabi_i2d
 2258 011e 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 48


 2259 0120 0B46     		mov	r3, r1
 2260 0122 1046     		mov	r0, r2
 2261 0124 1946     		mov	r1, r3
 2262 0126 4FF00002 		mov	r2, #0
 2263 012a 2B4B     		ldr	r3, .L113+56
 2264 012c FFF7FEFF 		bl	__aeabi_ddiv
 2265 0130 0246     		mov	r2, r0
 2266 0132 0B46     		mov	r3, r1
 2267 0134 1446     		mov	r4, r2
 2268 0136 1D46     		mov	r5, r3
 2269 0138 254B     		ldr	r3, .L113+48
 2270 013a 9B88     		ldrh	r3, [r3, #4]
 2271 013c 1AB2     		sxth	r2, r3
 2272 013e 274B     		ldr	r3, .L113+60
 2273 0140 1B88     		ldrh	r3, [r3]
 2274 0142 1BB2     		sxth	r3, r3
 2275 0144 D31A     		subs	r3, r2, r3
 2276 0146 1846     		mov	r0, r3
 2277 0148 FFF7FEFF 		bl	__aeabi_i2d
 2278 014c 0246     		mov	r2, r0
 2279 014e 0B46     		mov	r3, r1
 2280 0150 1046     		mov	r0, r2
 2281 0152 1946     		mov	r1, r3
 2282 0154 4FF00002 		mov	r2, #0
 2283 0158 1F4B     		ldr	r3, .L113+56
 2284 015a FFF7FEFF 		bl	__aeabi_ddiv
 2285 015e 0246     		mov	r2, r0
 2286 0160 0B46     		mov	r3, r1
 2287 0162 2046     		mov	r0, r4
 2288 0164 2946     		mov	r1, r5
 2289 0166 FFF7FEFF 		bl	hypot
 2290 016a C7E90401 		strd	r0, [r7, #16]
 400:.\main.c      ****         if (dist >= target_distance_cm)
 2291              		.loc 1 400 0
 2292 016e 1C4B     		ldr	r3, .L113+64
 2293 0170 1B88     		ldrh	r3, [r3]
 2294 0172 1BB2     		sxth	r3, r3
 2295 0174 1846     		mov	r0, r3
 2296 0176 FFF7FEFF 		bl	__aeabi_i2d
 2297 017a 0246     		mov	r2, r0
 2298 017c 0B46     		mov	r3, r1
 2299 017e 1046     		mov	r0, r2
 2300 0180 1946     		mov	r1, r3
 2301 0182 D7E90423 		ldrd	r2, [r7, #16]
 2302 0186 FFF7FEFF 		bl	__aeabi_dcmple
 2303 018a 0346     		mov	r3, r0
 2304 018c 002B     		cmp	r3, #0
 2305 018e 04D0     		beq	.L106
 401:.\main.c      ****         {
 402:.\main.c      ****             initBrake();
 2306              		.loc 1 402 0
 2307 0190 FFF7FEFF 		bl	initBrake
 403:.\main.c      ****             track_mode = NO_TRACK;
 2308              		.loc 1 403 0
 2309 0194 094B     		ldr	r3, .L113+28
 2310 0196 0022     		movs	r2, #0
 2311 0198 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 49


 2312              	.L106:
 2313              	.LBE5:
 404:.\main.c      ****         }
 405:.\main.c      ****     }
 406:.\main.c      ****     
 407:.\main.c      **** }
 2314              		.loc 1 407 0
 2315 019a 1837     		adds	r7, r7, #24
 2316              		.cfi_def_cfa_offset 16
 2317 019c BD46     		mov	sp, r7
 2318              		.cfi_def_cfa_register 13
 2319              		@ sp needed
 2320 019e B0BD     		pop	{r4, r5, r7, pc}
 2321              	.L114:
 2322              		.align	2
 2323              	.L113:
 2324 01a0 00000000 		.word	quad_count1
 2325 01a4 00000000 		.word	last_quad_count1
 2326 01a8 00000000 		.word	quad_count2
 2327 01ac 00000000 		.word	last_quad_count2
 2328 01b0 00000000 		.word	quad_diff1
 2329 01b4 00000000 		.word	quad_diff2
 2330 01b8 00000000 		.word	movement_state
 2331 01bc 00000000 		.word	track_mode
 2332 01c0 00000000 		.word	flag_calc_wheelspeed
 2333 01c4 00000000 		.word	accum_dist
 2334 01c8 20000000 		.word	.LC2
 2335 01cc 00000000 		.word	target_distance_quad
 2336 01d0 00000000 		.word	system_state
 2337 01d4 00000000 		.word	initial_x_pos
 2338 01d8 00001040 		.word	1074790400
 2339 01dc 00000000 		.word	initial_y_pos
 2340 01e0 00000000 		.word	target_distance_cm
 2341              		.cfi_endproc
 2342              	.LFE85:
 2343              		.size	isr_quad1, .-isr_quad1
 2344              		.section	.text.isr_turn_timer,"ax",%progbits
 2345              		.align	2
 2346              		.global	isr_turn_timer
 2347              		.thumb
 2348              		.thumb_func
 2349              		.type	isr_turn_timer, %function
 2350              	isr_turn_timer:
 2351              	.LFB86:
 408:.\main.c      **** 
 409:.\main.c      **** CY_ISR(isr_turn_timer)
 410:.\main.c      **** {
 2352              		.loc 1 410 0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 0
 2355              		@ frame_needed = 1, uses_anonymous_args = 0
 2356 0000 80B5     		push	{r7, lr}
 2357              		.cfi_def_cfa_offset 8
 2358              		.cfi_offset 7, -8
 2359              		.cfi_offset 14, -4
 2360 0002 00AF     		add	r7, sp, #0
 2361              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 50


 411:.\main.c      ****     if(movement_state == LTURN)
 2362              		.loc 1 411 0
 2363 0004 194B     		ldr	r3, .L119
 2364 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2365 0008 012B     		cmp	r3, #1
 2366 000a 15D1     		bne	.L116
 412:.\main.c      ****     {
 413:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 2367              		.loc 1 413 0
 2368 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2369 0010 0346     		mov	r3, r0
 2370 0012 1A46     		mov	r2, r3
 2371 0014 164B     		ldr	r3, .L119+4
 2372 0016 1B88     		ldrh	r3, [r3]
 2373 0018 1BB2     		sxth	r3, r3
 2374 001a D31A     		subs	r3, r2, r3
 2375 001c 002B     		cmp	r3, #0
 2376 001e B8BF     		it	lt
 2377 0020 5B42     		rsblt	r3, r3, #0
 2378 0022 CF2B     		cmp	r3, #207
 2379 0024 21DD     		ble	.L115
 414:.\main.c      ****         {
 415:.\main.c      ****             //movement_state = STOPPED;
 416:.\main.c      ****             brakeMotor();
 2380              		.loc 1 416 0
 2381 0026 FFF7FEFF 		bl	brakeMotor
 417:.\main.c      ****             movement_state = prev_movement_state;
 2382              		.loc 1 417 0
 2383 002a 124B     		ldr	r3, .L119+8
 2384 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2385 002e 0F4B     		ldr	r3, .L119
 2386 0030 1A70     		strb	r2, [r3]
 418:.\main.c      ****             Timer_2_Stop();
 2387              		.loc 1 418 0
 2388 0032 FFF7FEFF 		bl	Timer_2_Stop
 2389 0036 18E0     		b	.L115
 2390              	.L116:
 419:.\main.c      ****         }
 420:.\main.c      ****     }
 421:.\main.c      ****     else if (movement_state == RTURN)
 2391              		.loc 1 421 0
 2392 0038 0C4B     		ldr	r3, .L119
 2393 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2394 003c 022B     		cmp	r3, #2
 2395 003e 14D1     		bne	.L115
 422:.\main.c      ****     {
 423:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2396              		.loc 1 423 0
 2397 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2398 0044 0346     		mov	r3, r0
 2399 0046 1A46     		mov	r2, r3
 2400 0048 094B     		ldr	r3, .L119+4
 2401 004a 1B88     		ldrh	r3, [r3]
 2402 004c 1BB2     		sxth	r3, r3
 2403 004e D31A     		subs	r3, r2, r3
 2404 0050 002B     		cmp	r3, #0
 2405 0052 B8BF     		it	lt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 51


 2406 0054 5B42     		rsblt	r3, r3, #0
 2407 0056 CF2B     		cmp	r3, #207
 2408 0058 07DD     		ble	.L115
 424:.\main.c      ****         {
 425:.\main.c      ****             //movement_state = STOPPED;
 426:.\main.c      ****             brakeMotor();
 2409              		.loc 1 426 0
 2410 005a FFF7FEFF 		bl	brakeMotor
 427:.\main.c      ****             movement_state = prev_movement_state;
 2411              		.loc 1 427 0
 2412 005e 054B     		ldr	r3, .L119+8
 2413 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2414 0062 024B     		ldr	r3, .L119
 2415 0064 1A70     		strb	r2, [r3]
 428:.\main.c      ****             Timer_2_Stop();
 2416              		.loc 1 428 0
 2417 0066 FFF7FEFF 		bl	Timer_2_Stop
 2418              	.L115:
 429:.\main.c      ****         }
 430:.\main.c      ****     }
 431:.\main.c      **** }
 2419              		.loc 1 431 0
 2420 006a 80BD     		pop	{r7, pc}
 2421              	.L120:
 2422              		.align	2
 2423              	.L119:
 2424 006c 00000000 		.word	movement_state
 2425 0070 00000000 		.word	start_turn_count
 2426 0074 00000000 		.word	prev_movement_state
 2427              		.cfi_endproc
 2428              	.LFE86:
 2429              		.size	isr_turn_timer, .-isr_turn_timer
 2430              		.section	.text.Stop_on_line,"ax",%progbits
 2431              		.align	2
 2432              		.global	Stop_on_line
 2433              		.thumb
 2434              		.thumb_func
 2435              		.type	Stop_on_line, %function
 2436              	Stop_on_line:
 2437              	.LFB87:
 432:.\main.c      **** 
 433:.\main.c      **** 
 434:.\main.c      **** CY_ISR (Stop_on_line)
 435:.\main.c      **** {
 2438              		.loc 1 435 0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 0
 2441              		@ frame_needed = 1, uses_anonymous_args = 0
 2442              		@ link register save eliminated.
 2443 0000 80B4     		push	{r7}
 2444              		.cfi_def_cfa_offset 4
 2445              		.cfi_offset 7, -4
 2446 0002 00AF     		add	r7, sp, #0
 2447              		.cfi_def_cfa_register 7
 436:.\main.c      ****     movement_state = STOPPED;
 2448              		.loc 1 436 0
 2449 0004 054B     		ldr	r3, .L123
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 52


 2450 0006 0322     		movs	r2, #3
 2451 0008 1A70     		strb	r2, [r3]
 437:.\main.c      ****     if(movement_state != DRIVE) return;
 2452              		.loc 1 437 0
 2453 000a 044B     		ldr	r3, .L123
 2454 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2455 000e 002B     		cmp	r3, #0
 2456 0010 00D0     		beq	.L121
 2457 0012 00BF     		nop
 2458              	.L121:
 438:.\main.c      ****     //initTurnLeft();
 439:.\main.c      **** }
 2459              		.loc 1 439 0
 2460 0014 BD46     		mov	sp, r7
 2461              		.cfi_def_cfa_register 13
 2462              		@ sp needed
 2463 0016 5DF8047B 		ldr	r7, [sp], #4
 2464              		.cfi_restore 7
 2465              		.cfi_def_cfa_offset 0
 2466 001a 7047     		bx	lr
 2467              	.L124:
 2468              		.align	2
 2469              	.L123:
 2470 001c 00000000 		.word	movement_state
 2471              		.cfi_endproc
 2472              	.LFE87:
 2473              		.size	Stop_on_line, .-Stop_on_line
 2474              		.section	.rodata
 2475 002b 00       		.align	2
 2476              	.LC3:
 2477 002c 53746172 		.ascii	"Starting robot!\015\012\000"
 2477      74696E67 
 2477      20726F62 
 2477      6F74210D 
 2477      0A00
 2478              		.section	.text.button,"ax",%progbits
 2479              		.align	2
 2480              		.global	button
 2481              		.thumb
 2482              		.thumb_func
 2483              		.type	button, %function
 2484              	button:
 2485              	.LFB88:
 440:.\main.c      **** 
 441:.\main.c      **** CY_ISR (button)
 442:.\main.c      **** {
 2486              		.loc 1 442 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 1, uses_anonymous_args = 0
 2490 0000 80B5     		push	{r7, lr}
 2491              		.cfi_def_cfa_offset 8
 2492              		.cfi_offset 7, -8
 2493              		.cfi_offset 14, -4
 2494 0002 00AF     		add	r7, sp, #0
 2495              		.cfi_def_cfa_register 7
 443:.\main.c      ****     if(BT_ENABLED)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 53


 2496              		.loc 1 443 0
 2497 0004 054B     		ldr	r3, .L127
 2498 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2499 0008 002B     		cmp	r3, #0
 2500 000a 02D0     		beq	.L126
 444:.\main.c      ****     {
 445:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2501              		.loc 1 445 0
 2502 000c 0448     		ldr	r0, .L127+4
 2503 000e FFF7FEFF 		bl	UART_PutString
 2504              	.L126:
 446:.\main.c      ****     }
 447:.\main.c      ****     movement_state = DRIVE;
 2505              		.loc 1 447 0
 2506 0012 044B     		ldr	r3, .L127+8
 2507 0014 0022     		movs	r2, #0
 2508 0016 1A70     		strb	r2, [r3]
 448:.\main.c      **** }
 2509              		.loc 1 448 0
 2510 0018 80BD     		pop	{r7, pc}
 2511              	.L128:
 2512 001a 00BF     		.align	2
 2513              	.L127:
 2514 001c 00000000 		.word	BT_ENABLED
 2515 0020 2C000000 		.word	.LC3
 2516 0024 00000000 		.word	movement_state
 2517              		.cfi_endproc
 2518              	.LFE88:
 2519              		.size	button, .-button
 2520              		.section	.text.isr_adcTimer,"ax",%progbits
 2521              		.align	2
 2522              		.global	isr_adcTimer
 2523              		.thumb
 2524              		.thumb_func
 2525              		.type	isr_adcTimer, %function
 2526              	isr_adcTimer:
 2527              	.LFB89:
 449:.\main.c      **** 
 450:.\main.c      **** CY_ISR(isr_adcTimer)
 451:.\main.c      **** {
 2528              		.loc 1 451 0
 2529              		.cfi_startproc
 2530              		@ args = 0, pretend = 0, frame = 0
 2531              		@ frame_needed = 1, uses_anonymous_args = 0
 2532 0000 80B5     		push	{r7, lr}
 2533              		.cfi_def_cfa_offset 8
 2534              		.cfi_offset 7, -8
 2535              		.cfi_offset 14, -4
 2536 0002 00AF     		add	r7, sp, #0
 2537              		.cfi_def_cfa_register 7
 452:.\main.c      ****     ADC_StartConvert();
 2538              		.loc 1 452 0
 2539 0004 FFF7FEFF 		bl	ADC_StartConvert
 453:.\main.c      **** }
 2540              		.loc 1 453 0
 2541 0008 80BD     		pop	{r7, pc}
 2542              		.cfi_endproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 54


 2543              	.LFE89:
 2544              		.size	isr_adcTimer, .-isr_adcTimer
 2545 000a 00BF     		.section	.text.changeToRF,"ax",%progbits
 2546              		.align	2
 2547              		.global	changeToRF
 2548              		.thumb
 2549              		.thumb_func
 2550              		.type	changeToRF, %function
 2551              	changeToRF:
 2552              	.LFB90:
 454:.\main.c      **** 
 455:.\main.c      **** 
 456:.\main.c      **** void changeToRF()
 457:.\main.c      **** {
 2553              		.loc 1 457 0
 2554              		.cfi_startproc
 2555              		@ args = 0, pretend = 0, frame = 0
 2556              		@ frame_needed = 1, uses_anonymous_args = 0
 2557 0000 80B5     		push	{r7, lr}
 2558              		.cfi_def_cfa_offset 8
 2559              		.cfi_offset 7, -8
 2560              		.cfi_offset 14, -4
 2561 0002 00AF     		add	r7, sp, #0
 2562              		.cfi_def_cfa_register 7
 458:.\main.c      ****         //disable BT
 459:.\main.c      ****         BT_ENABLED = 0;
 2563              		.loc 1 459 0
 2564 0004 0B4B     		ldr	r3, .L131
 2565 0006 0022     		movs	r2, #0
 2566 0008 1A70     		strb	r2, [r3]
 460:.\main.c      ****         isrRF_RX_Stop();
 2567              		.loc 1 460 0
 2568 000a FFF7FEFF 		bl	isrRF_RX_Stop
 461:.\main.c      ****         UART_Stop();
 2569              		.loc 1 461 0
 2570 000e FFF7FEFF 		bl	UART_Stop
 462:.\main.c      ****         
 463:.\main.c      ****         //enable RF
 464:.\main.c      ****         BIN_ENABLED = 1;
 2571              		.loc 1 464 0
 2572 0012 094B     		ldr	r3, .L131+4
 2573 0014 0122     		movs	r2, #1
 2574 0016 1A70     		strb	r2, [r3]
 465:.\main.c      ****         UART_clk_SetDividerValue(130);
 2575              		.loc 1 465 0
 2576 0018 8120     		movs	r0, #129
 2577 001a 0121     		movs	r1, #1
 2578 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 466:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 2579              		.loc 1 466 0
 2580 0020 0648     		ldr	r0, .L131+8
 2581 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 467:.\main.c      ****         UART_Start();
 2582              		.loc 1 467 0
 2583 0026 FFF7FEFF 		bl	UART_Start
 468:.\main.c      ****         RF_BT_SELECT_Write(0);
 2584              		.loc 1 468 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 55


 2585 002a 0020     		movs	r0, #0
 2586 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 469:.\main.c      **** }
 2587              		.loc 1 469 0
 2588 0030 80BD     		pop	{r7, pc}
 2589              	.L132:
 2590 0032 00BF     		.align	2
 2591              	.L131:
 2592 0034 00000000 		.word	BT_ENABLED
 2593 0038 00000000 		.word	BIN_ENABLED
 2594 003c 00000000 		.word	rxInt
 2595              		.cfi_endproc
 2596              	.LFE90:
 2597              		.size	changeToRF, .-changeToRF
 2598              		.section	.text.changeToBT,"ax",%progbits
 2599              		.align	2
 2600              		.global	changeToBT
 2601              		.thumb
 2602              		.thumb_func
 2603              		.type	changeToBT, %function
 2604              	changeToBT:
 2605              	.LFB91:
 470:.\main.c      **** 
 471:.\main.c      **** void changeToBT()
 472:.\main.c      **** {
 2606              		.loc 1 472 0
 2607              		.cfi_startproc
 2608              		@ args = 0, pretend = 0, frame = 0
 2609              		@ frame_needed = 1, uses_anonymous_args = 0
 2610 0000 80B5     		push	{r7, lr}
 2611              		.cfi_def_cfa_offset 8
 2612              		.cfi_offset 7, -8
 2613              		.cfi_offset 14, -4
 2614 0002 00AF     		add	r7, sp, #0
 2615              		.cfi_def_cfa_register 7
 473:.\main.c      ****         //disable RF
 474:.\main.c      ****         BIN_ENABLED = 0;
 2616              		.loc 1 474 0
 2617 0004 0B4B     		ldr	r3, .L134
 2618 0006 0022     		movs	r2, #0
 2619 0008 1A70     		strb	r2, [r3]
 475:.\main.c      ****         isrRF_RX_Stop();
 2620              		.loc 1 475 0
 2621 000a FFF7FEFF 		bl	isrRF_RX_Stop
 476:.\main.c      ****         UART_Stop();
 2622              		.loc 1 476 0
 2623 000e FFF7FEFF 		bl	UART_Stop
 477:.\main.c      ****         
 478:.\main.c      ****         //enable BT
 479:.\main.c      ****         BT_ENABLED = 1;
 2624              		.loc 1 479 0
 2625 0012 094B     		ldr	r3, .L134+4
 2626 0014 0122     		movs	r2, #1
 2627 0016 1A70     		strb	r2, [r3]
 480:.\main.c      ****         UART_clk_SetDividerValue(781);
 2628              		.loc 1 480 0
 2629 0018 4FF44370 		mov	r0, #780
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 56


 2630 001c 0121     		movs	r1, #1
 2631 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 481:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2632              		.loc 1 481 0
 2633 0022 0648     		ldr	r0, .L134+8
 2634 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 482:.\main.c      ****         UART_Start();
 2635              		.loc 1 482 0
 2636 0028 FFF7FEFF 		bl	UART_Start
 483:.\main.c      ****         RF_BT_SELECT_Write(1);
 2637              		.loc 1 483 0
 2638 002c 0120     		movs	r0, #1
 2639 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 484:.\main.c      **** }
 2640              		.loc 1 484 0
 2641 0032 80BD     		pop	{r7, pc}
 2642              	.L135:
 2643              		.align	2
 2644              	.L134:
 2645 0034 00000000 		.word	BIN_ENABLED
 2646 0038 00000000 		.word	BT_ENABLED
 2647 003c 00000000 		.word	BT_rxInt
 2648              		.cfi_endproc
 2649              	.LFE91:
 2650              		.size	changeToBT, .-changeToBT
 2651              		.section	.text.Quad_Dec_response,"ax",%progbits
 2652              		.align	2
 2653              		.global	Quad_Dec_response
 2654              		.thumb
 2655              		.thumb_func
 2656              		.type	Quad_Dec_response, %function
 2657              	Quad_Dec_response:
 2658              	.LFB92:
 485:.\main.c      **** 
 486:.\main.c      **** 
 487:.\main.c      **** void Quad_Dec_response()
 488:.\main.c      **** {
 2659              		.loc 1 488 0
 2660              		.cfi_startproc
 2661              		@ args = 0, pretend = 0, frame = 32
 2662              		@ frame_needed = 1, uses_anonymous_args = 0
 2663 0000 B0B5     		push	{r4, r5, r7, lr}
 2664              		.cfi_def_cfa_offset 16
 2665              		.cfi_offset 4, -16
 2666              		.cfi_offset 5, -12
 2667              		.cfi_offset 7, -8
 2668              		.cfi_offset 14, -4
 2669 0002 88B0     		sub	sp, sp, #32
 2670              		.cfi_def_cfa_offset 48
 2671 0004 00AF     		add	r7, sp, #0
 2672              		.cfi_def_cfa_register 7
 489:.\main.c      ****     //Check if the flag has been set
 490:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2673              		.loc 1 490 0
 2674 0006 814B     		ldr	r3, .L144
 2675 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2676 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 57


 2677 000c 00D1     		bne	.L137
 2678 000e FAE0     		b	.L136
 2679              	.L137:
 491:.\main.c      ****     flag_calc_wheelspeed = 0;
 2680              		.loc 1 491 0
 2681 0010 7E4B     		ldr	r3, .L144
 2682 0012 0022     		movs	r2, #0
 2683 0014 1A70     		strb	r2, [r3]
 492:.\main.c      ****     
 493:.\main.c      ****     //char wheel_1_str [64];
 494:.\main.c      ****     //char wheel_2_str [64];
 495:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 496:.\main.c      ****     //usbPutString(wheel_1_str);
 497:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 498:.\main.c      ****     
 499:.\main.c      ****     //usbPutString(wheel_2_str);
 500:.\main.c      ****     
 501:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2684              		.loc 1 501 0
 2685 0016 7E4B     		ldr	r3, .L144+4
 2686 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2687 001a FB81     		strh	r3, [r7, #14]	@ movhi
 502:.\main.c      ****     int16 rightSpeed = quad_diff2;
 2688              		.loc 1 502 0
 2689 001c 7D4B     		ldr	r3, .L144+8
 2690 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2691 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 503:.\main.c      ****     double scalingLeft = 1;
 2692              		.loc 1 503 0
 2693 0022 4FF00002 		mov	r2, #0
 2694 0026 7C4B     		ldr	r3, .L144+12
 2695 0028 C7E90623 		strd	r2, [r7, #24]
 504:.\main.c      ****     double scalingRight = 1;
 2696              		.loc 1 504 0
 2697 002c 4FF00002 		mov	r2, #0
 2698 0030 794B     		ldr	r3, .L144+12
 2699 0032 C7E90423 		strd	r2, [r7, #16]
 505:.\main.c      ****     
 506:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 507:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2700              		.loc 1 507 0
 2701 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2702 003a 002B     		cmp	r3, #0
 2703 003c 0DD1     		bne	.L139
 2704              		.loc 1 507 0 is_stmt 0 discriminator 1
 2705 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2706 0042 002B     		cmp	r3, #0
 2707 0044 09D1     		bne	.L139
 508:.\main.c      ****        //leftSpeed = 3;
 509:.\main.c      ****         scalingLeft = 8;
 2708              		.loc 1 509 0 is_stmt 1
 2709 0046 4FF00002 		mov	r2, #0
 2710 004a 744B     		ldr	r3, .L144+16
 2711 004c C7E90623 		strd	r2, [r7, #24]
 510:.\main.c      ****         scalingRight = 8;
 2712              		.loc 1 510 0
 2713 0050 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 58


 2714 0054 714B     		ldr	r3, .L144+16
 2715 0056 C7E90423 		strd	r2, [r7, #16]
 2716              	.L139:
 511:.\main.c      ****     }
 512:.\main.c      **** 
 513:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2717              		.loc 1 513 0
 2718 005a 714B     		ldr	r3, .L144+20
 2719 005c 1B88     		ldrh	r3, [r3]
 2720 005e 1AB2     		sxth	r2, r3
 2721 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2722 0064 002B     		cmp	r3, #0
 2723 0066 B8BF     		it	lt
 2724 0068 5B42     		rsblt	r3, r3, #0
 2725 006a D31A     		subs	r3, r2, r3
 2726 006c BB60     		str	r3, [r7, #8]
 514:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 2727              		.loc 1 514 0
 2728 006e BB68     		ldr	r3, [r7, #8]
 2729 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2730 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2731 0078 BB68     		ldr	r3, [r7, #8]
 2732 007a 92FBF3F3 		sdiv	r3, r2, r3
 2733 007e 1846     		mov	r0, r3
 2734 0080 FFF7FEFF 		bl	__aeabi_i2d
 2735 0084 0446     		mov	r4, r0
 2736 0086 0D46     		mov	r5, r1
 2737 0088 BB68     		ldr	r3, [r7, #8]
 2738 008a 002B     		cmp	r3, #0
 2739 008c B8BF     		it	lt
 2740 008e 5B42     		rsblt	r3, r3, #0
 2741 0090 1846     		mov	r0, r3
 2742 0092 FFF7FEFF 		bl	__aeabi_i2d
 2743 0096 0246     		mov	r2, r0
 2744 0098 0B46     		mov	r3, r1
 2745 009a 1046     		mov	r0, r2
 2746 009c 1946     		mov	r1, r3
 2747 009e FFF7FEFF 		bl	sqrt
 2748 00a2 0246     		mov	r2, r0
 2749 00a4 0B46     		mov	r3, r1
 2750 00a6 2046     		mov	r0, r4
 2751 00a8 2946     		mov	r1, r5
 2752 00aa FFF7FEFF 		bl	__aeabi_dmul
 2753 00ae 0246     		mov	r2, r0
 2754 00b0 0B46     		mov	r3, r1
 2755 00b2 1046     		mov	r0, r2
 2756 00b4 1946     		mov	r1, r3
 2757 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2758 00ba 0346     		mov	r3, r0
 2759 00bc 7B60     		str	r3, [r7, #4]
 515:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2760              		.loc 1 515 0
 2761 00be 594B     		ldr	r3, .L144+24
 2762 00c0 1B88     		ldrh	r3, [r3]
 2763 00c2 1BB2     		sxth	r3, r3
 2764 00c4 1846     		mov	r0, r3
 2765 00c6 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 59


 2766 00ca 0446     		mov	r4, r0
 2767 00cc 0D46     		mov	r5, r1
 2768 00ce 7868     		ldr	r0, [r7, #4]
 2769 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2770 00d4 0246     		mov	r2, r0
 2771 00d6 0B46     		mov	r3, r1
 2772 00d8 1046     		mov	r0, r2
 2773 00da 1946     		mov	r1, r3
 2774 00dc D7E90623 		ldrd	r2, [r7, #24]
 2775 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2776 00e4 0246     		mov	r2, r0
 2777 00e6 0B46     		mov	r3, r1
 2778 00e8 2046     		mov	r0, r4
 2779 00ea 2946     		mov	r1, r5
 2780 00ec FFF7FEFF 		bl	__aeabi_dadd
 2781 00f0 0246     		mov	r2, r0
 2782 00f2 0B46     		mov	r3, r1
 2783 00f4 1046     		mov	r0, r2
 2784 00f6 1946     		mov	r1, r3
 2785 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2786 00fc 0346     		mov	r3, r0
 2787 00fe 9AB2     		uxth	r2, r3
 2788 0100 484B     		ldr	r3, .L144+24
 2789 0102 1A80     		strh	r2, [r3]	@ movhi
 516:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2790              		.loc 1 516 0
 2791 0104 484B     		ldr	r3, .L144+28
 2792 0106 1B88     		ldrh	r3, [r3]
 2793 0108 1AB2     		sxth	r2, r3
 2794 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2795 010e 002B     		cmp	r3, #0
 2796 0110 B8BF     		it	lt
 2797 0112 5B42     		rsblt	r3, r3, #0
 2798 0114 D31A     		subs	r3, r2, r3
 2799 0116 BB60     		str	r3, [r7, #8]
 517:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2800              		.loc 1 517 0
 2801 0118 BB68     		ldr	r3, [r7, #8]
 2802 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2803 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2804 0122 BB68     		ldr	r3, [r7, #8]
 2805 0124 92FBF3F3 		sdiv	r3, r2, r3
 2806 0128 1846     		mov	r0, r3
 2807 012a FFF7FEFF 		bl	__aeabi_i2d
 2808 012e 0446     		mov	r4, r0
 2809 0130 0D46     		mov	r5, r1
 2810 0132 BB68     		ldr	r3, [r7, #8]
 2811 0134 002B     		cmp	r3, #0
 2812 0136 B8BF     		it	lt
 2813 0138 5B42     		rsblt	r3, r3, #0
 2814 013a 1846     		mov	r0, r3
 2815 013c FFF7FEFF 		bl	__aeabi_i2d
 2816 0140 0246     		mov	r2, r0
 2817 0142 0B46     		mov	r3, r1
 2818 0144 1046     		mov	r0, r2
 2819 0146 1946     		mov	r1, r3
 2820 0148 FFF7FEFF 		bl	sqrt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 60


 2821 014c 0246     		mov	r2, r0
 2822 014e 0B46     		mov	r3, r1
 2823 0150 2046     		mov	r0, r4
 2824 0152 2946     		mov	r1, r5
 2825 0154 FFF7FEFF 		bl	__aeabi_dmul
 2826 0158 0246     		mov	r2, r0
 2827 015a 0B46     		mov	r3, r1
 2828 015c 1046     		mov	r0, r2
 2829 015e 1946     		mov	r1, r3
 2830 0160 FFF7FEFF 		bl	__aeabi_d2iz
 2831 0164 0346     		mov	r3, r0
 2832 0166 7B60     		str	r3, [r7, #4]
 518:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 2833              		.loc 1 518 0
 2834 0168 304B     		ldr	r3, .L144+32
 2835 016a 1B88     		ldrh	r3, [r3]
 2836 016c 1BB2     		sxth	r3, r3
 2837 016e 1846     		mov	r0, r3
 2838 0170 FFF7FEFF 		bl	__aeabi_i2d
 2839 0174 0446     		mov	r4, r0
 2840 0176 0D46     		mov	r5, r1
 2841 0178 7868     		ldr	r0, [r7, #4]
 2842 017a FFF7FEFF 		bl	__aeabi_i2d
 2843 017e 0246     		mov	r2, r0
 2844 0180 0B46     		mov	r3, r1
 2845 0182 1046     		mov	r0, r2
 2846 0184 1946     		mov	r1, r3
 2847 0186 D7E90423 		ldrd	r2, [r7, #16]
 2848 018a FFF7FEFF 		bl	__aeabi_dmul
 2849 018e 0246     		mov	r2, r0
 2850 0190 0B46     		mov	r3, r1
 2851 0192 2046     		mov	r0, r4
 2852 0194 2946     		mov	r1, r5
 2853 0196 FFF7FEFF 		bl	__aeabi_dadd
 2854 019a 0246     		mov	r2, r0
 2855 019c 0B46     		mov	r3, r1
 2856 019e 1046     		mov	r0, r2
 2857 01a0 1946     		mov	r1, r3
 2858 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 2859 01a6 0346     		mov	r3, r0
 2860 01a8 9AB2     		uxth	r2, r3
 2861 01aa 204B     		ldr	r3, .L144+32
 2862 01ac 1A80     		strh	r2, [r3]	@ movhi
 519:.\main.c      ****     
 520:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 2863              		.loc 1 520 0
 2864 01ae 1F4B     		ldr	r3, .L144+32
 2865 01b0 1B88     		ldrh	r3, [r3]
 2866 01b2 1BB2     		sxth	r3, r3
 2867 01b4 002B     		cmp	r3, #0
 2868 01b6 02DA     		bge	.L140
 2869              		.loc 1 520 0 is_stmt 0 discriminator 1
 2870 01b8 1C4B     		ldr	r3, .L144+32
 2871 01ba 0022     		movs	r2, #0
 2872 01bc 1A80     		strh	r2, [r3]	@ movhi
 2873              	.L140:
 521:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 61


 2874              		.loc 1 521 0 is_stmt 1
 2875 01be 194B     		ldr	r3, .L144+24
 2876 01c0 1B88     		ldrh	r3, [r3]
 2877 01c2 1BB2     		sxth	r3, r3
 2878 01c4 002B     		cmp	r3, #0
 2879 01c6 02DA     		bge	.L141
 2880              		.loc 1 521 0 is_stmt 0 discriminator 1
 2881 01c8 164B     		ldr	r3, .L144+24
 2882 01ca 0022     		movs	r2, #0
 2883 01cc 1A80     		strh	r2, [r3]	@ movhi
 2884              	.L141:
 522:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 2885              		.loc 1 522 0 is_stmt 1
 2886 01ce 174B     		ldr	r3, .L144+32
 2887 01d0 1B88     		ldrh	r3, [r3]
 2888 01d2 1BB2     		sxth	r3, r3
 2889 01d4 642B     		cmp	r3, #100
 2890 01d6 02DD     		ble	.L142
 2891              		.loc 1 522 0 is_stmt 0 discriminator 1
 2892 01d8 144B     		ldr	r3, .L144+32
 2893 01da 6422     		movs	r2, #100
 2894 01dc 1A80     		strh	r2, [r3]	@ movhi
 2895              	.L142:
 523:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2896              		.loc 1 523 0 is_stmt 1
 2897 01de 114B     		ldr	r3, .L144+24
 2898 01e0 1B88     		ldrh	r3, [r3]
 2899 01e2 1BB2     		sxth	r3, r3
 2900 01e4 642B     		cmp	r3, #100
 2901 01e6 02DD     		ble	.L143
 2902              		.loc 1 523 0 is_stmt 0 discriminator 1
 2903 01e8 0E4B     		ldr	r3, .L144+24
 2904 01ea 6422     		movs	r2, #100
 2905 01ec 1A80     		strh	r2, [r3]	@ movhi
 2906              	.L143:
 524:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2907              		.loc 1 524 0 is_stmt 1
 2908 01ee 0D4B     		ldr	r3, .L144+24
 2909 01f0 1B88     		ldrh	r3, [r3]
 2910 01f2 DBB2     		uxtb	r3, r3
 2911 01f4 1846     		mov	r0, r3
 2912 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 525:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2913              		.loc 1 525 0
 2914 01fa 0C4B     		ldr	r3, .L144+32
 2915 01fc 1B88     		ldrh	r3, [r3]
 2916 01fe DBB2     		uxtb	r3, r3
 2917 0200 1846     		mov	r0, r3
 2918 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2919              	.L136:
 526:.\main.c      **** }
 2920              		.loc 1 526 0
 2921 0206 2037     		adds	r7, r7, #32
 2922              		.cfi_def_cfa_offset 16
 2923 0208 BD46     		mov	sp, r7
 2924              		.cfi_def_cfa_register 13
 2925              		@ sp needed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 62


 2926 020a B0BD     		pop	{r4, r5, r7, pc}
 2927              	.L145:
 2928              		.align	2
 2929              	.L144:
 2930 020c 00000000 		.word	flag_calc_wheelspeed
 2931 0210 00000000 		.word	quad_diff1
 2932 0214 00000000 		.word	quad_diff2
 2933 0218 0000F03F 		.word	1072693248
 2934 021c 00002040 		.word	1075838976
 2935 0220 00000000 		.word	leftSpeedLimit
 2936 0224 00000000 		.word	left_duty_cycle
 2937 0228 00000000 		.word	rightSpeedLimit
 2938 022c 00000000 		.word	right_duty_cycle
 2939              		.cfi_endproc
 2940              	.LFE92:
 2941              		.size	Quad_Dec_response, .-Quad_Dec_response
 2942              		.section	.text.trackLine,"ax",%progbits
 2943              		.align	2
 2944              		.global	trackLine
 2945              		.thumb
 2946              		.thumb_func
 2947              		.type	trackLine, %function
 2948              	trackLine:
 2949              	.LFB93:
 527:.\main.c      **** 
 528:.\main.c      **** void trackLine()
 529:.\main.c      **** {
 2950              		.loc 1 529 0
 2951              		.cfi_startproc
 2952              		@ args = 0, pretend = 0, frame = 8
 2953              		@ frame_needed = 1, uses_anonymous_args = 0
 2954 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2955              		.cfi_def_cfa_offset 24
 2956              		.cfi_offset 4, -24
 2957              		.cfi_offset 5, -20
 2958              		.cfi_offset 7, -16
 2959              		.cfi_offset 8, -12
 2960              		.cfi_offset 9, -8
 2961              		.cfi_offset 14, -4
 2962 0004 82B0     		sub	sp, sp, #8
 2963              		.cfi_def_cfa_offset 32
 2964 0006 00AF     		add	r7, sp, #0
 2965              		.cfi_def_cfa_register 7
 530:.\main.c      ****     //read the value of the three central-front sensors
 531:.\main.c      ****     
 532:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2966              		.loc 1 532 0
 2967 0008 FFF7FEFF 		bl	NLSens_out_Read
 2968 000c 0346     		mov	r3, r0
 2969 000e FB71     		strb	r3, [r7, #7]
 533:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2970              		.loc 1 533 0
 2971 0010 FFF7FEFF 		bl	NRSens_out_Read
 2972 0014 0346     		mov	r3, r0
 2973 0016 BB71     		strb	r3, [r7, #6]
 534:.\main.c      ****     uint8 mid = MSens_out_Read();
 2974              		.loc 1 534 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 63


 2975 0018 FFF7FEFF 		bl	MSens_out_Read
 2976 001c 0346     		mov	r3, r0
 2977 001e 7B71     		strb	r3, [r7, #5]
 535:.\main.c      ****     //if only the left one, hard left
 536:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 2978              		.loc 1 536 0
 2979 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2980 0022 002B     		cmp	r3, #0
 2981 0024 27D0     		beq	.L147
 2982              		.loc 1 536 0 is_stmt 0 discriminator 1
 2983 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2984 0028 002B     		cmp	r3, #0
 2985 002a 24D1     		bne	.L147
 2986              		.loc 1 536 0 discriminator 2
 2987 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2988 002e 002B     		cmp	r3, #0
 2989 0030 21D1     		bne	.L147
 537:.\main.c      ****     {
 538:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 2990              		.loc 1 538 0 is_stmt 1
 2991 0032 454B     		ldr	r3, .L152
 2992 0034 D3E90023 		ldrd	r2, [r3]
 2993 0038 1046     		mov	r0, r2
 2994 003a 1946     		mov	r1, r3
 2995 003c 4FF00002 		mov	r2, #0
 2996 0040 424B     		ldr	r3, .L152+4
 2997 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2998 0046 0246     		mov	r2, r0
 2999 0048 0B46     		mov	r3, r1
 3000 004a 1446     		mov	r4, r2
 3001 004c 1D46     		mov	r5, r3
 3002 004e 3E4B     		ldr	r3, .L152
 3003 0050 D3E90023 		ldrd	r2, [r3]
 3004 0054 9046     		mov	r8, r2
 3005 0056 83F00049 		eor	r9, r3, #-2147483648
 3006 005a 4046     		mov	r0, r8
 3007 005c 4946     		mov	r1, r9
 3008 005e 4FF00002 		mov	r2, #0
 3009 0062 3A4B     		ldr	r3, .L152+4
 3010 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3011 0068 0246     		mov	r2, r0
 3012 006a 0B46     		mov	r3, r1
 3013 006c 2046     		mov	r0, r4
 3014 006e 2946     		mov	r1, r5
 3015 0070 FFF7FEFF 		bl	setSpeed
 3016 0074 63E0     		b	.L146
 3017              	.L147:
 539:.\main.c      ****     }
 540:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3018              		.loc 1 540 0
 3019 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3020 0078 002B     		cmp	r3, #0
 3021 007a 11D0     		beq	.L149
 3022              		.loc 1 540 0 is_stmt 0 discriminator 1
 3023 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3024 007e 002B     		cmp	r3, #0
 3025 0080 0ED0     		beq	.L149
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 64


 3026              		.loc 1 540 0 discriminator 2
 3027 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3028 0084 002B     		cmp	r3, #0
 3029 0086 0BD1     		bne	.L149
 541:.\main.c      ****     {
 542:.\main.c      ****         setSpeed(speed, 0);
 3030              		.loc 1 542 0 is_stmt 1
 3031 0088 2F4B     		ldr	r3, .L152
 3032 008a D3E90023 		ldrd	r2, [r3]
 3033 008e 1046     		mov	r0, r2
 3034 0090 1946     		mov	r1, r3
 3035 0092 4FF00002 		mov	r2, #0
 3036 0096 4FF00003 		mov	r3, #0
 3037 009a FFF7FEFF 		bl	setSpeed
 3038 009e 4EE0     		b	.L146
 3039              	.L149:
 543:.\main.c      ****     }
 544:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3040              		.loc 1 544 0
 3041 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3042 00a2 002B     		cmp	r3, #0
 3043 00a4 0FD0     		beq	.L150
 3044              		.loc 1 544 0 is_stmt 0 discriminator 1
 3045 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3046 00a8 002B     		cmp	r3, #0
 3047 00aa 0CD0     		beq	.L150
 3048              		.loc 1 544 0 discriminator 2
 3049 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3050 00ae 002B     		cmp	r3, #0
 3051 00b0 09D1     		bne	.L150
 545:.\main.c      ****     {
 546:.\main.c      ****         setSpeed(0, speed);
 3052              		.loc 1 546 0 is_stmt 1
 3053 00b2 254B     		ldr	r3, .L152
 3054 00b4 D3E90023 		ldrd	r2, [r3]
 3055 00b8 4FF00000 		mov	r0, #0
 3056 00bc 4FF00001 		mov	r1, #0
 3057 00c0 FFF7FEFF 		bl	setSpeed
 3058 00c4 3BE0     		b	.L146
 3059              	.L150:
 547:.\main.c      ****     }
 548:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3060              		.loc 1 548 0
 3061 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3062 00c8 002B     		cmp	r3, #0
 3063 00ca 27D0     		beq	.L151
 3064              		.loc 1 548 0 is_stmt 0 discriminator 1
 3065 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3066 00ce 002B     		cmp	r3, #0
 3067 00d0 24D1     		bne	.L151
 3068              		.loc 1 548 0 discriminator 2
 3069 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3070 00d4 002B     		cmp	r3, #0
 3071 00d6 21D1     		bne	.L151
 549:.\main.c      ****     {
 550:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 3072              		.loc 1 550 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 65


 3073 00d8 1B4B     		ldr	r3, .L152
 3074 00da D3E90023 		ldrd	r2, [r3]
 3075 00de 1446     		mov	r4, r2
 3076 00e0 83F00045 		eor	r5, r3, #-2147483648
 3077 00e4 2046     		mov	r0, r4
 3078 00e6 2946     		mov	r1, r5
 3079 00e8 4FF00002 		mov	r2, #0
 3080 00ec 174B     		ldr	r3, .L152+4
 3081 00ee FFF7FEFF 		bl	__aeabi_ddiv
 3082 00f2 0246     		mov	r2, r0
 3083 00f4 0B46     		mov	r3, r1
 3084 00f6 1446     		mov	r4, r2
 3085 00f8 1D46     		mov	r5, r3
 3086 00fa 134B     		ldr	r3, .L152
 3087 00fc D3E90023 		ldrd	r2, [r3]
 3088 0100 1046     		mov	r0, r2
 3089 0102 1946     		mov	r1, r3
 3090 0104 4FF00002 		mov	r2, #0
 3091 0108 104B     		ldr	r3, .L152+4
 3092 010a FFF7FEFF 		bl	__aeabi_ddiv
 3093 010e 0246     		mov	r2, r0
 3094 0110 0B46     		mov	r3, r1
 3095 0112 2046     		mov	r0, r4
 3096 0114 2946     		mov	r1, r5
 3097 0116 FFF7FEFF 		bl	setSpeed
 3098 011a 10E0     		b	.L146
 3099              	.L151:
 551:.\main.c      ****     }
 552:.\main.c      ****     else if (mid && !nr && !nl)
 3100              		.loc 1 552 0
 3101 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3102 011e 002B     		cmp	r3, #0
 3103 0120 0DD0     		beq	.L146
 3104              		.loc 1 552 0 is_stmt 0 discriminator 1
 3105 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3106 0124 002B     		cmp	r3, #0
 3107 0126 0AD1     		bne	.L146
 3108              		.loc 1 552 0 discriminator 2
 3109 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3110 012a 002B     		cmp	r3, #0
 3111 012c 07D1     		bne	.L146
 553:.\main.c      ****     {
 554:.\main.c      ****         setSpeed(speed,speed);
 3112              		.loc 1 554 0 is_stmt 1
 3113 012e 064B     		ldr	r3, .L152
 3114 0130 D3E90001 		ldrd	r0, [r3]
 3115 0134 044B     		ldr	r3, .L152
 3116 0136 D3E90023 		ldrd	r2, [r3]
 3117 013a FFF7FEFF 		bl	setSpeed
 3118              	.L146:
 555:.\main.c      ****     }
 556:.\main.c      ****    // else if (!mid && !nr && !nl)
 557:.\main.c      ****     //{
 558:.\main.c      ****         //setSpeed(0,0);
 559:.\main.c      ****     //}
 560:.\main.c      **** }
 3119              		.loc 1 560 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 66


 3120 013e 0837     		adds	r7, r7, #8
 3121              		.cfi_def_cfa_offset 24
 3122 0140 BD46     		mov	sp, r7
 3123              		.cfi_def_cfa_register 13
 3124              		@ sp needed
 3125 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3126              	.L153:
 3127 0146 00BF     		.align	2
 3128              	.L152:
 3129 0148 00000000 		.word	speed
 3130 014c 0000F83F 		.word	1073217536
 3131              		.cfi_endproc
 3132              	.LFE93:
 3133              		.size	trackLine, .-trackLine
 3134              		.section	.text.trackLineZ,"ax",%progbits
 3135              		.align	2
 3136              		.global	trackLineZ
 3137              		.thumb
 3138              		.thumb_func
 3139              		.type	trackLineZ, %function
 3140              	trackLineZ:
 3141              	.LFB94:
 561:.\main.c      **** 
 562:.\main.c      **** void trackLineZ()
 563:.\main.c      **** {
 3142              		.loc 1 563 0
 3143              		.cfi_startproc
 3144              		@ args = 0, pretend = 0, frame = 8
 3145              		@ frame_needed = 1, uses_anonymous_args = 0
 3146 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3147              		.cfi_def_cfa_offset 24
 3148              		.cfi_offset 4, -24
 3149              		.cfi_offset 5, -20
 3150              		.cfi_offset 7, -16
 3151              		.cfi_offset 8, -12
 3152              		.cfi_offset 9, -8
 3153              		.cfi_offset 14, -4
 3154 0004 82B0     		sub	sp, sp, #8
 3155              		.cfi_def_cfa_offset 32
 3156 0006 00AF     		add	r7, sp, #0
 3157              		.cfi_def_cfa_register 7
 564:.\main.c      ****     //read the value of the three central-front sensors
 565:.\main.c      ****     
 566:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3158              		.loc 1 566 0
 3159 0008 FFF7FEFF 		bl	NLSens_out_Read
 3160 000c 0346     		mov	r3, r0
 3161 000e FB71     		strb	r3, [r7, #7]
 567:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3162              		.loc 1 567 0
 3163 0010 FFF7FEFF 		bl	NRSens_out_Read
 3164 0014 0346     		mov	r3, r0
 3165 0016 BB71     		strb	r3, [r7, #6]
 568:.\main.c      ****     uint8 mid = MSens_out_Read();
 3166              		.loc 1 568 0
 3167 0018 FFF7FEFF 		bl	MSens_out_Read
 3168 001c 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 67


 3169 001e 7B71     		strb	r3, [r7, #5]
 569:.\main.c      ****     //if only the left one, hard left
 570:.\main.c      ****     if(nl && !nr && !mid)
 3170              		.loc 1 570 0
 3171 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3172 0022 002B     		cmp	r3, #0
 3173 0024 27D0     		beq	.L155
 3174              		.loc 1 570 0 is_stmt 0 discriminator 1
 3175 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3176 0028 002B     		cmp	r3, #0
 3177 002a 24D1     		bne	.L155
 3178              		.loc 1 570 0 discriminator 2
 3179 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3180 002e 002B     		cmp	r3, #0
 3181 0030 21D1     		bne	.L155
 571:.\main.c      ****     {
 572:.\main.c      ****         setSpeed(speed / 1.5,-speed / 1.5);
 3182              		.loc 1 572 0 is_stmt 1
 3183 0032 454B     		ldr	r3, .L160
 3184 0034 D3E90023 		ldrd	r2, [r3]
 3185 0038 1046     		mov	r0, r2
 3186 003a 1946     		mov	r1, r3
 3187 003c 4FF00002 		mov	r2, #0
 3188 0040 424B     		ldr	r3, .L160+4
 3189 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3190 0046 0246     		mov	r2, r0
 3191 0048 0B46     		mov	r3, r1
 3192 004a 1446     		mov	r4, r2
 3193 004c 1D46     		mov	r5, r3
 3194 004e 3E4B     		ldr	r3, .L160
 3195 0050 D3E90023 		ldrd	r2, [r3]
 3196 0054 9046     		mov	r8, r2
 3197 0056 83F00049 		eor	r9, r3, #-2147483648
 3198 005a 4046     		mov	r0, r8
 3199 005c 4946     		mov	r1, r9
 3200 005e 4FF00002 		mov	r2, #0
 3201 0062 3A4B     		ldr	r3, .L160+4
 3202 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3203 0068 0246     		mov	r2, r0
 3204 006a 0B46     		mov	r3, r1
 3205 006c 2046     		mov	r0, r4
 3206 006e 2946     		mov	r1, r5
 3207 0070 FFF7FEFF 		bl	setSpeed
 3208 0074 63E0     		b	.L154
 3209              	.L155:
 573:.\main.c      ****     }
 574:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3210              		.loc 1 574 0
 3211 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3212 0078 002B     		cmp	r3, #0
 3213 007a 11D0     		beq	.L157
 3214              		.loc 1 574 0 is_stmt 0 discriminator 1
 3215 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3216 007e 002B     		cmp	r3, #0
 3217 0080 0ED0     		beq	.L157
 3218              		.loc 1 574 0 discriminator 2
 3219 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 68


 3220 0084 002B     		cmp	r3, #0
 3221 0086 0BD1     		bne	.L157
 575:.\main.c      ****     {
 576:.\main.c      ****         setSpeed(speed, 0.0);
 3222              		.loc 1 576 0 is_stmt 1
 3223 0088 2F4B     		ldr	r3, .L160
 3224 008a D3E90023 		ldrd	r2, [r3]
 3225 008e 1046     		mov	r0, r2
 3226 0090 1946     		mov	r1, r3
 3227 0092 4FF00002 		mov	r2, #0
 3228 0096 4FF00003 		mov	r3, #0
 3229 009a FFF7FEFF 		bl	setSpeed
 3230 009e 4EE0     		b	.L154
 3231              	.L157:
 577:.\main.c      ****     }
 578:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3232              		.loc 1 578 0
 3233 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3234 00a2 002B     		cmp	r3, #0
 3235 00a4 0FD0     		beq	.L158
 3236              		.loc 1 578 0 is_stmt 0 discriminator 1
 3237 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3238 00a8 002B     		cmp	r3, #0
 3239 00aa 0CD0     		beq	.L158
 3240              		.loc 1 578 0 discriminator 2
 3241 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3242 00ae 002B     		cmp	r3, #0
 3243 00b0 09D1     		bne	.L158
 579:.\main.c      ****     {
 580:.\main.c      ****         setSpeed(0.0,speed);
 3244              		.loc 1 580 0 is_stmt 1
 3245 00b2 254B     		ldr	r3, .L160
 3246 00b4 D3E90023 		ldrd	r2, [r3]
 3247 00b8 4FF00000 		mov	r0, #0
 3248 00bc 4FF00001 		mov	r1, #0
 3249 00c0 FFF7FEFF 		bl	setSpeed
 3250 00c4 3BE0     		b	.L154
 3251              	.L158:
 581:.\main.c      ****     }
 582:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3252              		.loc 1 582 0
 3253 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3254 00c8 002B     		cmp	r3, #0
 3255 00ca 27D0     		beq	.L159
 3256              		.loc 1 582 0 is_stmt 0 discriminator 1
 3257 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3258 00ce 002B     		cmp	r3, #0
 3259 00d0 24D1     		bne	.L159
 3260              		.loc 1 582 0 discriminator 2
 3261 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3262 00d4 002B     		cmp	r3, #0
 3263 00d6 21D1     		bne	.L159
 583:.\main.c      ****     {
 584:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 3264              		.loc 1 584 0 is_stmt 1
 3265 00d8 1B4B     		ldr	r3, .L160
 3266 00da D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 69


 3267 00de 1446     		mov	r4, r2
 3268 00e0 83F00045 		eor	r5, r3, #-2147483648
 3269 00e4 2046     		mov	r0, r4
 3270 00e6 2946     		mov	r1, r5
 3271 00e8 4FF00002 		mov	r2, #0
 3272 00ec 174B     		ldr	r3, .L160+4
 3273 00ee FFF7FEFF 		bl	__aeabi_ddiv
 3274 00f2 0246     		mov	r2, r0
 3275 00f4 0B46     		mov	r3, r1
 3276 00f6 1446     		mov	r4, r2
 3277 00f8 1D46     		mov	r5, r3
 3278 00fa 134B     		ldr	r3, .L160
 3279 00fc D3E90023 		ldrd	r2, [r3]
 3280 0100 1046     		mov	r0, r2
 3281 0102 1946     		mov	r1, r3
 3282 0104 4FF00002 		mov	r2, #0
 3283 0108 104B     		ldr	r3, .L160+4
 3284 010a FFF7FEFF 		bl	__aeabi_ddiv
 3285 010e 0246     		mov	r2, r0
 3286 0110 0B46     		mov	r3, r1
 3287 0112 2046     		mov	r0, r4
 3288 0114 2946     		mov	r1, r5
 3289 0116 FFF7FEFF 		bl	setSpeed
 3290 011a 10E0     		b	.L154
 3291              	.L159:
 585:.\main.c      ****     }
 586:.\main.c      ****     else if (mid && !nr && !nl)
 3292              		.loc 1 586 0
 3293 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3294 011e 002B     		cmp	r3, #0
 3295 0120 0DD0     		beq	.L154
 3296              		.loc 1 586 0 is_stmt 0 discriminator 1
 3297 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3298 0124 002B     		cmp	r3, #0
 3299 0126 0AD1     		bne	.L154
 3300              		.loc 1 586 0 discriminator 2
 3301 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3302 012a 002B     		cmp	r3, #0
 3303 012c 07D1     		bne	.L154
 587:.\main.c      ****     {
 588:.\main.c      ****         setSpeed(speed,speed);
 3304              		.loc 1 588 0 is_stmt 1
 3305 012e 064B     		ldr	r3, .L160
 3306 0130 D3E90001 		ldrd	r0, [r3]
 3307 0134 044B     		ldr	r3, .L160
 3308 0136 D3E90023 		ldrd	r2, [r3]
 3309 013a FFF7FEFF 		bl	setSpeed
 3310              	.L154:
 589:.\main.c      ****     }
 590:.\main.c      ****    // else if (!mid && !nr && !nl)
 591:.\main.c      ****     //{
 592:.\main.c      ****         //setSpeed(0,0);
 593:.\main.c      ****     //}
 594:.\main.c      **** }
 3311              		.loc 1 594 0
 3312 013e 0837     		adds	r7, r7, #8
 3313              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 70


 3314 0140 BD46     		mov	sp, r7
 3315              		.cfi_def_cfa_register 13
 3316              		@ sp needed
 3317 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3318              	.L161:
 3319 0146 00BF     		.align	2
 3320              	.L160:
 3321 0148 00000000 		.word	speed
 3322 014c 0000F83F 		.word	1073217536
 3323              		.cfi_endproc
 3324              	.LFE94:
 3325              		.size	trackLineZ, .-trackLineZ
 3326              		.section	.text.trackLineU,"ax",%progbits
 3327              		.align	2
 3328              		.global	trackLineU
 3329              		.thumb
 3330              		.thumb_func
 3331              		.type	trackLineU, %function
 3332              	trackLineU:
 3333              	.LFB95:
 595:.\main.c      **** 
 596:.\main.c      **** void trackLineU()
 597:.\main.c      **** {
 3334              		.loc 1 597 0
 3335              		.cfi_startproc
 3336              		@ args = 0, pretend = 0, frame = 8
 3337              		@ frame_needed = 1, uses_anonymous_args = 0
 3338 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3339              		.cfi_def_cfa_offset 24
 3340              		.cfi_offset 4, -24
 3341              		.cfi_offset 5, -20
 3342              		.cfi_offset 7, -16
 3343              		.cfi_offset 8, -12
 3344              		.cfi_offset 9, -8
 3345              		.cfi_offset 14, -4
 3346 0004 82B0     		sub	sp, sp, #8
 3347              		.cfi_def_cfa_offset 32
 3348 0006 00AF     		add	r7, sp, #0
 3349              		.cfi_def_cfa_register 7
 598:.\main.c      ****     //read the value of the three central-front sensors
 599:.\main.c      ****     
 600:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3350              		.loc 1 600 0
 3351 0008 FFF7FEFF 		bl	NLSens_out_Read
 3352 000c 0346     		mov	r3, r0
 3353 000e FB71     		strb	r3, [r7, #7]
 601:.\main.c      ****     uint8 fl = FLSens_out_Read();
 3354              		.loc 1 601 0
 3355 0010 FFF7FEFF 		bl	FLSens_out_Read
 3356 0014 0346     		mov	r3, r0
 3357 0016 BB71     		strb	r3, [r7, #6]
 602:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3358              		.loc 1 602 0
 3359 0018 FFF7FEFF 		bl	NRSens_out_Read
 3360 001c 0346     		mov	r3, r0
 3361 001e 7B71     		strb	r3, [r7, #5]
 603:.\main.c      ****     uint8 fr = FRSens_out_Read();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 71


 3362              		.loc 1 603 0
 3363 0020 FFF7FEFF 		bl	FRSens_out_Read
 3364 0024 0346     		mov	r3, r0
 3365 0026 3B71     		strb	r3, [r7, #4]
 604:.\main.c      ****     uint8 mid = MSens_out_Read();
 3366              		.loc 1 604 0
 3367 0028 FFF7FEFF 		bl	MSens_out_Read
 3368 002c 0346     		mov	r3, r0
 3369 002e FB70     		strb	r3, [r7, #3]
 605:.\main.c      ****     if (fl && mid && fr) // T intersection
 3370              		.loc 1 605 0
 3371 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3372 0032 002B     		cmp	r3, #0
 3373 0034 06D0     		beq	.L163
 3374              		.loc 1 605 0 is_stmt 0 discriminator 1
 3375 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3376 0038 002B     		cmp	r3, #0
 3377 003a 03D0     		beq	.L163
 3378              		.loc 1 605 0 discriminator 2
 3379 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3380 003e 002B     		cmp	r3, #0
 3381 0040 00D0     		beq	.L163
 3382              		.loc 1 605 0
 3383 0042 ACE0     		b	.L162
 3384              	.L163:
 606:.\main.c      ****     {
 607:.\main.c      ****         // not implemented
 608:.\main.c      ****     }
 609:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 3385              		.loc 1 609 0 is_stmt 1
 3386 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3387 0046 002B     		cmp	r3, #0
 3388 0048 0BD0     		beq	.L165
 3389              		.loc 1 609 0 is_stmt 0 discriminator 1
 3390 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3391 004c 002B     		cmp	r3, #0
 3392 004e 08D0     		beq	.L165
 610:.\main.c      ****     {
 611:.\main.c      ****         setSpeed(speed, speed);
 3393              		.loc 1 611 0 is_stmt 1
 3394 0050 554B     		ldr	r3, .L171
 3395 0052 D3E90001 		ldrd	r0, [r3]
 3396 0056 544B     		ldr	r3, .L171
 3397 0058 D3E90023 		ldrd	r2, [r3]
 3398 005c FFF7FEFF 		bl	setSpeed
 3399 0060 9DE0     		b	.L162
 3400              	.L165:
 612:.\main.c      ****     }
 613:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 3401              		.loc 1 613 0
 3402 0062 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3403 0064 002B     		cmp	r3, #0
 3404 0066 0BD0     		beq	.L166
 3405              		.loc 1 613 0 is_stmt 0 discriminator 1
 3406 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3407 006a 002B     		cmp	r3, #0
 3408 006c 08D0     		beq	.L166
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 72


 614:.\main.c      ****     {
 615:.\main.c      ****         setSpeed(speed, speed);
 3409              		.loc 1 615 0 is_stmt 1
 3410 006e 4E4B     		ldr	r3, .L171
 3411 0070 D3E90001 		ldrd	r0, [r3]
 3412 0074 4C4B     		ldr	r3, .L171
 3413 0076 D3E90023 		ldrd	r2, [r3]
 3414 007a FFF7FEFF 		bl	setSpeed
 3415 007e 8EE0     		b	.L162
 3416              	.L166:
 616:.\main.c      ****     }
 617:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 3417              		.loc 1 617 0
 3418 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3419 0082 002B     		cmp	r3, #0
 3420 0084 27D0     		beq	.L167
 3421              		.loc 1 617 0 is_stmt 0 discriminator 1
 3422 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3423 0088 002B     		cmp	r3, #0
 3424 008a 24D1     		bne	.L167
 3425              		.loc 1 617 0 discriminator 2
 3426 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3427 008e 002B     		cmp	r3, #0
 3428 0090 21D1     		bne	.L167
 618:.\main.c      ****     {
 619:.\main.c      ****          setSpeed(speed / 1.5,-speed / 1.5);
 3429              		.loc 1 619 0 is_stmt 1
 3430 0092 454B     		ldr	r3, .L171
 3431 0094 D3E90023 		ldrd	r2, [r3]
 3432 0098 1046     		mov	r0, r2
 3433 009a 1946     		mov	r1, r3
 3434 009c 4FF00002 		mov	r2, #0
 3435 00a0 424B     		ldr	r3, .L171+4
 3436 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 3437 00a6 0246     		mov	r2, r0
 3438 00a8 0B46     		mov	r3, r1
 3439 00aa 1446     		mov	r4, r2
 3440 00ac 1D46     		mov	r5, r3
 3441 00ae 3E4B     		ldr	r3, .L171
 3442 00b0 D3E90023 		ldrd	r2, [r3]
 3443 00b4 9046     		mov	r8, r2
 3444 00b6 83F00049 		eor	r9, r3, #-2147483648
 3445 00ba 4046     		mov	r0, r8
 3446 00bc 4946     		mov	r1, r9
 3447 00be 4FF00002 		mov	r2, #0
 3448 00c2 3A4B     		ldr	r3, .L171+4
 3449 00c4 FFF7FEFF 		bl	__aeabi_ddiv
 3450 00c8 0246     		mov	r2, r0
 3451 00ca 0B46     		mov	r3, r1
 3452 00cc 2046     		mov	r0, r4
 3453 00ce 2946     		mov	r1, r5
 3454 00d0 FFF7FEFF 		bl	setSpeed
 3455 00d4 63E0     		b	.L162
 3456              	.L167:
 620:.\main.c      ****     }
 621:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3457              		.loc 1 621 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 73


 3458 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3459 00d8 002B     		cmp	r3, #0
 3460 00da 11D0     		beq	.L168
 3461              		.loc 1 621 0 is_stmt 0 discriminator 1
 3462 00dc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3463 00de 002B     		cmp	r3, #0
 3464 00e0 0ED0     		beq	.L168
 3465              		.loc 1 621 0 discriminator 2
 3466 00e2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3467 00e4 002B     		cmp	r3, #0
 3468 00e6 0BD1     		bne	.L168
 622:.\main.c      ****     {
 623:.\main.c      ****         setSpeed(speed, 0);
 3469              		.loc 1 623 0 is_stmt 1
 3470 00e8 2F4B     		ldr	r3, .L171
 3471 00ea D3E90023 		ldrd	r2, [r3]
 3472 00ee 1046     		mov	r0, r2
 3473 00f0 1946     		mov	r1, r3
 3474 00f2 4FF00002 		mov	r2, #0
 3475 00f6 4FF00003 		mov	r3, #0
 3476 00fa FFF7FEFF 		bl	setSpeed
 3477 00fe 4EE0     		b	.L162
 3478              	.L168:
 624:.\main.c      ****     }
 625:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3479              		.loc 1 625 0
 3480 0100 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3481 0102 002B     		cmp	r3, #0
 3482 0104 0FD0     		beq	.L169
 3483              		.loc 1 625 0 is_stmt 0 discriminator 1
 3484 0106 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3485 0108 002B     		cmp	r3, #0
 3486 010a 0CD0     		beq	.L169
 3487              		.loc 1 625 0 discriminator 2
 3488 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3489 010e 002B     		cmp	r3, #0
 3490 0110 09D1     		bne	.L169
 626:.\main.c      ****     {
 627:.\main.c      ****         setSpeed(0, speed);
 3491              		.loc 1 627 0 is_stmt 1
 3492 0112 254B     		ldr	r3, .L171
 3493 0114 D3E90023 		ldrd	r2, [r3]
 3494 0118 4FF00000 		mov	r0, #0
 3495 011c 4FF00001 		mov	r1, #0
 3496 0120 FFF7FEFF 		bl	setSpeed
 3497 0124 3BE0     		b	.L162
 3498              	.L169:
 628:.\main.c      ****     }
 629:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3499              		.loc 1 629 0
 3500 0126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3501 0128 002B     		cmp	r3, #0
 3502 012a 27D0     		beq	.L170
 3503              		.loc 1 629 0 is_stmt 0 discriminator 1
 3504 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3505 012e 002B     		cmp	r3, #0
 3506 0130 24D1     		bne	.L170
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 74


 3507              		.loc 1 629 0 discriminator 2
 3508 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3509 0134 002B     		cmp	r3, #0
 3510 0136 21D1     		bne	.L170
 630:.\main.c      ****     {
 631:.\main.c      ****          setSpeed(-speed / 1.5,speed / 1.5);
 3511              		.loc 1 631 0 is_stmt 1
 3512 0138 1B4B     		ldr	r3, .L171
 3513 013a D3E90023 		ldrd	r2, [r3]
 3514 013e 1446     		mov	r4, r2
 3515 0140 83F00045 		eor	r5, r3, #-2147483648
 3516 0144 2046     		mov	r0, r4
 3517 0146 2946     		mov	r1, r5
 3518 0148 4FF00002 		mov	r2, #0
 3519 014c 174B     		ldr	r3, .L171+4
 3520 014e FFF7FEFF 		bl	__aeabi_ddiv
 3521 0152 0246     		mov	r2, r0
 3522 0154 0B46     		mov	r3, r1
 3523 0156 1446     		mov	r4, r2
 3524 0158 1D46     		mov	r5, r3
 3525 015a 134B     		ldr	r3, .L171
 3526 015c D3E90023 		ldrd	r2, [r3]
 3527 0160 1046     		mov	r0, r2
 3528 0162 1946     		mov	r1, r3
 3529 0164 4FF00002 		mov	r2, #0
 3530 0168 104B     		ldr	r3, .L171+4
 3531 016a FFF7FEFF 		bl	__aeabi_ddiv
 3532 016e 0246     		mov	r2, r0
 3533 0170 0B46     		mov	r3, r1
 3534 0172 2046     		mov	r0, r4
 3535 0174 2946     		mov	r1, r5
 3536 0176 FFF7FEFF 		bl	setSpeed
 3537 017a 10E0     		b	.L162
 3538              	.L170:
 632:.\main.c      ****     }
 633:.\main.c      ****     else if (mid && !nr && !nl)
 3539              		.loc 1 633 0
 3540 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3541 017e 002B     		cmp	r3, #0
 3542 0180 0DD0     		beq	.L162
 3543              		.loc 1 633 0 is_stmt 0 discriminator 1
 3544 0182 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3545 0184 002B     		cmp	r3, #0
 3546 0186 0AD1     		bne	.L162
 3547              		.loc 1 633 0 discriminator 2
 3548 0188 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3549 018a 002B     		cmp	r3, #0
 3550 018c 07D1     		bne	.L162
 634:.\main.c      ****     {
 635:.\main.c      ****         setSpeed(speed,speed);
 3551              		.loc 1 635 0 is_stmt 1
 3552 018e 064B     		ldr	r3, .L171
 3553 0190 D3E90001 		ldrd	r0, [r3]
 3554 0194 044B     		ldr	r3, .L171
 3555 0196 D3E90023 		ldrd	r2, [r3]
 3556 019a FFF7FEFF 		bl	setSpeed
 3557              	.L162:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 75


 636:.\main.c      ****     }
 637:.\main.c      ****    // else if (!mid && !nr && !nl)
 638:.\main.c      ****     //{
 639:.\main.c      ****         //setSpeed(0,0);
 640:.\main.c      ****     //}
 641:.\main.c      ****    
 642:.\main.c      **** 
 643:.\main.c      **** }
 3558              		.loc 1 643 0
 3559 019e 0837     		adds	r7, r7, #8
 3560              		.cfi_def_cfa_offset 24
 3561 01a0 BD46     		mov	sp, r7
 3562              		.cfi_def_cfa_register 13
 3563              		@ sp needed
 3564 01a2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3565              	.L172:
 3566 01a6 00BF     		.align	2
 3567              	.L171:
 3568 01a8 00000000 		.word	speed
 3569 01ac 0000F83F 		.word	1073217536
 3570              		.cfi_endproc
 3571              	.LFE95:
 3572              		.size	trackLineU, .-trackLineU
 3573              		.global	__aeabi_fadd
 3574              		.section	.rodata
 3575 003e 0000     		.align	2
 3576              	.LC4:
 3577 0040 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3577      65727920 
 3577      566F6C74 
 3577      6167653A 
 3577      2025646D 
 3578              		.section	.text.print_ADC,"ax",%progbits
 3579              		.align	2
 3580              		.global	print_ADC
 3581              		.thumb
 3582              		.thumb_func
 3583              		.type	print_ADC, %function
 3584              	print_ADC:
 3585              	.LFB96:
 644:.\main.c      **** 
 645:.\main.c      **** void print_ADC()
 646:.\main.c      **** {
 3586              		.loc 1 646 0
 3587              		.cfi_startproc
 3588              		@ args = 0, pretend = 0, frame = 24
 3589              		@ frame_needed = 1, uses_anonymous_args = 0
 3590 0000 80B5     		push	{r7, lr}
 3591              		.cfi_def_cfa_offset 8
 3592              		.cfi_offset 7, -8
 3593              		.cfi_offset 14, -4
 3594 0002 86B0     		sub	sp, sp, #24
 3595              		.cfi_def_cfa_offset 32
 3596 0004 00AF     		add	r7, sp, #0
 3597              		.cfi_def_cfa_register 7
 647:.\main.c      ****    //usbPutString("HII\n");
 648:.\main.c      ****     if(flag_receive_ADC == 1)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 76


 3598              		.loc 1 648 0
 3599 0006 274B     		ldr	r3, .L176
 3600 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3601 000a 012B     		cmp	r3, #1
 3602 000c 46D1     		bne	.L173
 3603              	.LBB6:
 649:.\main.c      ****     {
 650:.\main.c      ****         //usbPutString("AAA\r\n");
 651:.\main.c      ****         flag_receive_ADC = 0;
 3604              		.loc 1 651 0
 3605 000e 254B     		ldr	r3, .L176
 3606 0010 0022     		movs	r2, #0
 3607 0012 1A70     		strb	r2, [r3]
 652:.\main.c      ****         
 653:.\main.c      ****        // int8 channel = ADC_
 654:.\main.c      ****         float scalingFactor = 0.972;
 3608              		.loc 1 654 0
 3609 0014 244B     		ldr	r3, .L176+4
 3610 0016 7B61     		str	r3, [r7, #20]	@ float
 655:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3611              		.loc 1 655 0
 3612 0018 244B     		ldr	r3, .L176+8
 3613 001a 1B88     		ldrh	r3, [r3]
 3614 001c 1BB2     		sxth	r3, r3
 3615 001e 41F28832 		movw	r2, #5000
 3616 0022 02FB03F3 		mul	r3, r2, r3
 3617 0026 002B     		cmp	r3, #0
 3618 0028 01DA     		bge	.L175
 3619 002a 03F6FF73 		addw	r3, r3, #4095
 3620              	.L175:
 3621 002e 1B13     		asrs	r3, r3, #12
 3622 0030 1846     		mov	r0, r3
 3623 0032 FFF7FEFF 		bl	__aeabi_i2f
 3624 0036 0346     		mov	r3, r0
 3625 0038 1846     		mov	r0, r3
 3626 003a 7969     		ldr	r1, [r7, #20]	@ float
 3627 003c FFF7FEFF 		bl	__aeabi_fmul
 3628 0040 0346     		mov	r3, r0
 3629 0042 1846     		mov	r0, r3
 3630 0044 1946     		mov	r1, r3
 3631 0046 FFF7FEFF 		bl	__aeabi_fadd
 3632 004a 0346     		mov	r3, r0
 3633 004c 1846     		mov	r0, r3
 3634 004e FFF7FEFF 		bl	__aeabi_f2iz
 3635 0052 0346     		mov	r3, r0
 3636 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 656:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3637              		.loc 1 656 0
 3638 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3639 005a 154B     		ldr	r3, .L176+12
 3640 005c 1B88     		ldrh	r3, [r3]
 3641 005e 1BB2     		sxth	r3, r3
 3642 0060 1A44     		add	r2, r2, r3
 3643 0062 144B     		ldr	r3, .L176+16
 3644 0064 1B88     		ldrh	r3, [r3]
 3645 0066 1BB2     		sxth	r3, r3
 3646 0068 1344     		add	r3, r3, r2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 77


 3647 006a 134A     		ldr	r2, .L176+20
 3648 006c 82FB0312 		smull	r1, r2, r2, r3
 3649 0070 DB17     		asrs	r3, r3, #31
 3650 0072 D31A     		subs	r3, r2, r3
 3651 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 657:.\main.c      ****         prevVoltage2 = prevVoltage;
 3652              		.loc 1 657 0
 3653 0076 0E4B     		ldr	r3, .L176+12
 3654 0078 1A88     		ldrh	r2, [r3]
 3655 007a 0E4B     		ldr	r3, .L176+16
 3656 007c 1A80     		strh	r2, [r3]	@ movhi
 658:.\main.c      ****         prevVoltage = converted_val;
 3657              		.loc 1 658 0
 3658 007e 0C4A     		ldr	r2, .L176+12
 3659 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3660 0082 1380     		strh	r3, [r2]	@ movhi
 659:.\main.c      ****         
 660:.\main.c      ****         char result_str[16];
 661:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3661              		.loc 1 661 0
 3662 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3663 0088 3A46     		mov	r2, r7
 3664 008a 1046     		mov	r0, r2
 3665 008c 0B49     		ldr	r1, .L176+24
 3666 008e 1A46     		mov	r2, r3
 3667 0090 FFF7FEFF 		bl	sprintf
 662:.\main.c      ****         
 663:.\main.c      ****         usbPutString(result_str);
 3668              		.loc 1 663 0
 3669 0094 3B46     		mov	r3, r7
 3670 0096 1846     		mov	r0, r3
 3671 0098 FFF7FEFF 		bl	usbPutString
 3672              	.L173:
 3673              	.LBE6:
 664:.\main.c      ****     }
 665:.\main.c      **** }
 3674              		.loc 1 665 0
 3675 009c 1837     		adds	r7, r7, #24
 3676              		.cfi_def_cfa_offset 8
 3677 009e BD46     		mov	sp, r7
 3678              		.cfi_def_cfa_register 13
 3679              		@ sp needed
 3680 00a0 80BD     		pop	{r7, pc}
 3681              	.L177:
 3682 00a2 00BF     		.align	2
 3683              	.L176:
 3684 00a4 00000000 		.word	flag_receive_ADC
 3685 00a8 FED4783F 		.word	1064883454
 3686 00ac 00000000 		.word	adc_result
 3687 00b0 00000000 		.word	prevVoltage
 3688 00b4 00000000 		.word	prevVoltage2
 3689 00b8 56555555 		.word	1431655766
 3690 00bc 40000000 		.word	.LC4
 3691              		.cfi_endproc
 3692              	.LFE96:
 3693              		.size	print_ADC, .-print_ADC
 3694              		.section	.rodata
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 78


 3695              		.align	2
 3696              	.LC5:
 3697 0058 52535349 		.ascii	"RSSI:\000"
 3697      3A00
 3698 005e 0000     		.align	2
 3699              	.LC6:
 3700 0060 25640D0A 		.ascii	"%d\015\012\000"
 3700      00
 3701 0065 000000   		.align	2
 3702              	.LC7:
 3703 0068 726F626F 		.ascii	"robot_x:\000"
 3703      745F783A 
 3703      00
 3704 0071 000000   		.align	2
 3705              	.LC8:
 3706 0074 726F626F 		.ascii	"robot_y:\000"
 3706      745F793A 
 3706      00
 3707 007d 000000   		.align	2
 3708              	.LC9:
 3709 0080 726F626F 		.ascii	"robot_dir:\000"
 3709      745F6469 
 3709      723A00
 3710 008b 00       		.section	.text.print_RF,"ax",%progbits
 3711              		.align	2
 3712              		.global	print_RF
 3713              		.thumb
 3714              		.thumb_func
 3715              		.type	print_RF, %function
 3716              	print_RF:
 3717              	.LFB97:
 666:.\main.c      **** 
 667:.\main.c      **** void print_RF()
 668:.\main.c      **** {
 3718              		.loc 1 668 0
 3719              		.cfi_startproc
 3720              		@ args = 0, pretend = 0, frame = 16
 3721              		@ frame_needed = 1, uses_anonymous_args = 0
 3722 0000 80B5     		push	{r7, lr}
 3723              		.cfi_def_cfa_offset 8
 3724              		.cfi_offset 7, -8
 3725              		.cfi_offset 14, -4
 3726 0002 84B0     		sub	sp, sp, #16
 3727              		.cfi_def_cfa_offset 24
 3728 0004 00AF     		add	r7, sp, #0
 3729              		.cfi_def_cfa_register 7
 669:.\main.c      ****     if(flag_print_rf == 1)
 3730              		.loc 1 669 0
 3731 0006 254B     		ldr	r3, .L180
 3732 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3733 000a 012B     		cmp	r3, #1
 3734 000c 42D1     		bne	.L178
 3735              	.LBB7:
 670:.\main.c      ****     {
 671:.\main.c      ****         char printString[16];
 672:.\main.c      ****         flag_print_rf = 0;
 3736              		.loc 1 672 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 79


 3737 000e 234B     		ldr	r3, .L180
 3738 0010 0022     		movs	r2, #0
 3739 0012 1A70     		strb	r2, [r3]
 673:.\main.c      ****         usbPutString("RSSI:");
 3740              		.loc 1 673 0
 3741 0014 2248     		ldr	r0, .L180+4
 3742 0016 FFF7FEFF 		bl	usbPutString
 674:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 3743              		.loc 1 674 0
 3744 001a 224B     		ldr	r3, .L180+8
 3745 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3746 001e 5BB2     		sxtb	r3, r3
 3747 0020 3A46     		mov	r2, r7
 3748 0022 1046     		mov	r0, r2
 3749 0024 2049     		ldr	r1, .L180+12
 3750 0026 1A46     		mov	r2, r3
 3751 0028 FFF7FEFF 		bl	sprintf
 675:.\main.c      ****         usbPutString(printString);
 3752              		.loc 1 675 0
 3753 002c 3B46     		mov	r3, r7
 3754 002e 1846     		mov	r0, r3
 3755 0030 FFF7FEFF 		bl	usbPutString
 676:.\main.c      ****         usbPutString("robot_x:");
 3756              		.loc 1 676 0
 3757 0034 1D48     		ldr	r0, .L180+16
 3758 0036 FFF7FEFF 		bl	usbPutString
 677:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 3759              		.loc 1 677 0
 3760 003a 1A4B     		ldr	r3, .L180+8
 3761 003c 5B88     		ldrh	r3, [r3, #2]
 3762 003e 1BB2     		sxth	r3, r3
 3763 0040 3A46     		mov	r2, r7
 3764 0042 1046     		mov	r0, r2
 3765 0044 1849     		ldr	r1, .L180+12
 3766 0046 1A46     		mov	r2, r3
 3767 0048 FFF7FEFF 		bl	sprintf
 678:.\main.c      ****         usbPutString(printString);
 3768              		.loc 1 678 0
 3769 004c 3B46     		mov	r3, r7
 3770 004e 1846     		mov	r0, r3
 3771 0050 FFF7FEFF 		bl	usbPutString
 679:.\main.c      ****         usbPutString("robot_y:");
 3772              		.loc 1 679 0
 3773 0054 1648     		ldr	r0, .L180+20
 3774 0056 FFF7FEFF 		bl	usbPutString
 680:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3775              		.loc 1 680 0
 3776 005a 124B     		ldr	r3, .L180+8
 3777 005c 9B88     		ldrh	r3, [r3, #4]
 3778 005e 1BB2     		sxth	r3, r3
 3779 0060 3A46     		mov	r2, r7
 3780 0062 1046     		mov	r0, r2
 3781 0064 1049     		ldr	r1, .L180+12
 3782 0066 1A46     		mov	r2, r3
 3783 0068 FFF7FEFF 		bl	sprintf
 681:.\main.c      ****         usbPutString(printString);
 3784              		.loc 1 681 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 80


 3785 006c 3B46     		mov	r3, r7
 3786 006e 1846     		mov	r0, r3
 3787 0070 FFF7FEFF 		bl	usbPutString
 682:.\main.c      ****         usbPutString("robot_dir:");
 3788              		.loc 1 682 0
 3789 0074 0F48     		ldr	r0, .L180+24
 3790 0076 FFF7FEFF 		bl	usbPutString
 683:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3791              		.loc 1 683 0
 3792 007a 0A4B     		ldr	r3, .L180+8
 3793 007c DB88     		ldrh	r3, [r3, #6]
 3794 007e 1BB2     		sxth	r3, r3
 3795 0080 3A46     		mov	r2, r7
 3796 0082 1046     		mov	r0, r2
 3797 0084 0849     		ldr	r1, .L180+12
 3798 0086 1A46     		mov	r2, r3
 3799 0088 FFF7FEFF 		bl	sprintf
 684:.\main.c      ****         usbPutString(printString);
 3800              		.loc 1 684 0
 3801 008c 3B46     		mov	r3, r7
 3802 008e 1846     		mov	r0, r3
 3803 0090 FFF7FEFF 		bl	usbPutString
 3804              	.L178:
 3805              	.LBE7:
 685:.\main.c      ****     }
 686:.\main.c      **** }
 3806              		.loc 1 686 0
 3807 0094 1037     		adds	r7, r7, #16
 3808              		.cfi_def_cfa_offset 8
 3809 0096 BD46     		mov	sp, r7
 3810              		.cfi_def_cfa_register 13
 3811              		@ sp needed
 3812 0098 80BD     		pop	{r7, pc}
 3813              	.L181:
 3814 009a 00BF     		.align	2
 3815              	.L180:
 3816 009c 00000000 		.word	flag_print_rf
 3817 00a0 58000000 		.word	.LC5
 3818 00a4 00000000 		.word	system_state
 3819 00a8 60000000 		.word	.LC6
 3820 00ac 68000000 		.word	.LC7
 3821 00b0 74000000 		.word	.LC8
 3822 00b4 80000000 		.word	.LC9
 3823              		.cfi_endproc
 3824              	.LFE97:
 3825              		.size	print_RF, .-print_RF
 3826              		.section	.text.readFrontSensors,"ax",%progbits
 3827              		.align	2
 3828              		.global	readFrontSensors
 3829              		.thumb
 3830              		.thumb_func
 3831              		.type	readFrontSensors, %function
 3832              	readFrontSensors:
 3833              	.LFB98:
 687:.\main.c      **** 
 688:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 689:.\main.c      **** {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 81


 3834              		.loc 1 689 0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 8
 3837              		@ frame_needed = 1, uses_anonymous_args = 0
 3838 0000 90B5     		push	{r4, r7, lr}
 3839              		.cfi_def_cfa_offset 12
 3840              		.cfi_offset 4, -12
 3841              		.cfi_offset 7, -8
 3842              		.cfi_offset 14, -4
 3843 0002 83B0     		sub	sp, sp, #12
 3844              		.cfi_def_cfa_offset 24
 3845 0004 00AF     		add	r7, sp, #0
 3846              		.cfi_def_cfa_register 7
 3847 0006 7860     		str	r0, [r7, #4]
 690:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3848              		.loc 1 690 0
 3849 0008 FFF7FEFF 		bl	FLSens_out_Read
 3850 000c 0346     		mov	r3, r0
 3851 000e 1A46     		mov	r2, r3
 3852 0010 7B68     		ldr	r3, [r7, #4]
 3853 0012 1A70     		strb	r2, [r3]
 691:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3854              		.loc 1 691 0
 3855 0014 7B68     		ldr	r3, [r7, #4]
 3856 0016 5C1C     		adds	r4, r3, #1
 3857 0018 FFF7FEFF 		bl	NLSens_out_Read
 3858 001c 0346     		mov	r3, r0
 3859 001e 2370     		strb	r3, [r4]
 692:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3860              		.loc 1 692 0
 3861 0020 7B68     		ldr	r3, [r7, #4]
 3862 0022 9C1C     		adds	r4, r3, #2
 3863 0024 FFF7FEFF 		bl	MSens_out_Read
 3864 0028 0346     		mov	r3, r0
 3865 002a 2370     		strb	r3, [r4]
 693:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3866              		.loc 1 693 0
 3867 002c 7B68     		ldr	r3, [r7, #4]
 3868 002e DC1C     		adds	r4, r3, #3
 3869 0030 FFF7FEFF 		bl	NRSens_out_Read
 3870 0034 0346     		mov	r3, r0
 3871 0036 2370     		strb	r3, [r4]
 694:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3872              		.loc 1 694 0
 3873 0038 7B68     		ldr	r3, [r7, #4]
 3874 003a 1C1D     		adds	r4, r3, #4
 3875 003c FFF7FEFF 		bl	FRSens_out_Read
 3876 0040 0346     		mov	r3, r0
 3877 0042 2370     		strb	r3, [r4]
 695:.\main.c      **** }
 3878              		.loc 1 695 0
 3879 0044 0C37     		adds	r7, r7, #12
 3880              		.cfi_def_cfa_offset 12
 3881 0046 BD46     		mov	sp, r7
 3882              		.cfi_def_cfa_register 13
 3883              		@ sp needed
 3884 0048 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 82


 3885              		.cfi_endproc
 3886              	.LFE98:
 3887              		.size	readFrontSensors, .-readFrontSensors
 3888 004a 00BF     		.section	.text.main,"ax",%progbits
 3889              		.align	2
 3890              		.global	main
 3891              		.thumb
 3892              		.thumb_func
 3893              		.type	main, %function
 3894              	main:
 3895              	.LFB99:
 696:.\main.c      **** 
 697:.\main.c      **** int main()
 698:.\main.c      **** {  
 3896              		.loc 1 698 0
 3897              		.cfi_startproc
 3898              		@ args = 0, pretend = 0, frame = 8
 3899              		@ frame_needed = 1, uses_anonymous_args = 0
 3900 0000 80B5     		push	{r7, lr}
 3901              		.cfi_def_cfa_offset 8
 3902              		.cfi_offset 7, -8
 3903              		.cfi_offset 14, -4
 3904 0002 82B0     		sub	sp, sp, #8
 3905              		.cfi_def_cfa_offset 16
 3906 0004 00AF     		add	r7, sp, #0
 3907              		.cfi_def_cfa_register 7
 699:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 700:.\main.c      **** // ----- INITIALIZATIONS ----------
 701:.\main.c      ****     CYGlobalIntEnable;
 3908              		.loc 1 701 0
 3909              	@ 701 ".\main.c" 1
 3910 0006 62B6     		CPSIE   i
 3911              	@ 0 "" 2
 702:.\main.c      ****     if(ENABLE_PWM)
 703:.\main.c      ****     {
 704:.\main.c      ****         PWM_1_Start();// starting the pwm
 3912              		.loc 1 704 0
 3913              		.thumb
 3914 0008 FFF7FEFF 		bl	PWM_1_Start
 705:.\main.c      ****         PWM_2_Start();// starting the pwm
 3915              		.loc 1 705 0
 3916 000c FFF7FEFF 		bl	PWM_2_Start
 706:.\main.c      ****     }
 707:.\main.c      ****     
 708:.\main.c      ****     if(ENABLE_ADC)
 709:.\main.c      ****     {
 710:.\main.c      ****         ADC_Start();
 711:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 712:.\main.c      ****         //ADC_StartConvert();
 713:.\main.c      ****         
 714:.\main.c      ****         //start the ADC timer for software trigger mode
 715:.\main.c      ****         Timer_TS_Start();
 716:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 717:.\main.c      ****     }
 718:.\main.c      ****     
 719:.\main.c      ****     if (ENABLE_QUAD)
 720:.\main.c      ****     {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 83


 721:.\main.c      ****         QuadDec_M1_Start();
 3917              		.loc 1 721 0
 3918 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 722:.\main.c      ****         QuadDec_M2_Start();
 3919              		.loc 1 722 0
 3920 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 723:.\main.c      ****         
 724:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3921              		.loc 1 724 0
 3922 0018 7148     		ldr	r0, .L221
 3923 001a FFF7FEFF 		bl	isr_quad1_StartEx
 725:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3924              		.loc 1 725 0
 3925 001e 7148     		ldr	r0, .L221+4
 3926 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 726:.\main.c      ****         
 727:.\main.c      ****         Timer_1_Start();
 3927              		.loc 1 727 0
 3928 0024 FFF7FEFF 		bl	Timer_1_Start
 728:.\main.c      ****     }
 729:.\main.c      ****     
 730:.\main.c      ****     if(ENABLE_STOP){
 731:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 732:.\main.c      ****         
 733:.\main.c      ****     }
 734:.\main.c      ****     isr_button_StartEx(button);
 3929              		.loc 1 734 0
 3930 0028 6F48     		ldr	r0, .L221+8
 3931 002a FFF7FEFF 		bl	isr_button_StartEx
 735:.\main.c      ****     
 736:.\main.c      **** 
 737:.\main.c      ****     // ------USB SETUP ----------------    
 738:.\main.c      ****     if (USE_USB){    
 739:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3932              		.loc 1 739 0
 3933 002e 0020     		movs	r0, #0
 3934 0030 0121     		movs	r1, #1
 3935 0032 FFF7FEFF 		bl	USBUART_Start
 740:.\main.c      ****         if (USBUART_GetConfiguration())
 3936              		.loc 1 740 0
 3937 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
 3938 003a 0346     		mov	r3, r0
 3939 003c 002B     		cmp	r3, #0
 3940 003e 01D0     		beq	.L184
 741:.\main.c      ****             {
 742:.\main.c      ****                  USBUART_CDC_Init();
 3941              		.loc 1 742 0
 3942 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 3943              	.L184:
 743:.\main.c      ****             }
 744:.\main.c      ****     }
 745:.\main.c      ****     
 746:.\main.c      ****     if(BIN_ENABLED){
 3944              		.loc 1 746 0
 3945 0044 694B     		ldr	r3, .L221+12
 3946 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3947 0048 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 84


 3948 004a 01D0     		beq	.L185
 747:.\main.c      ****         changeToRF();
 3949              		.loc 1 747 0
 3950 004c FFF7FEFF 		bl	changeToRF
 3951              	.L185:
 748:.\main.c      ****     }
 749:.\main.c      ****     
 750:.\main.c      ****     if(BT_ENABLED){
 3952              		.loc 1 750 0
 3953 0050 674B     		ldr	r3, .L221+16
 3954 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3955 0054 002B     		cmp	r3, #0
 3956 0056 01D0     		beq	.L186
 751:.\main.c      ****         changeToBT();
 3957              		.loc 1 751 0
 3958 0058 FFF7FEFF 		bl	changeToBT
 3959              	.L186:
 3960              	.LBB8:
 752:.\main.c      ****     }
 753:.\main.c      ****     
 754:.\main.c      ****     //usbPutString("Started");
 755:.\main.c      ****     for(;;)
 756:.\main.c      ****     {
 757:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 758:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 3961              		.loc 1 758 0
 3962 005c FFF7FEFF 		bl	Quad_Dec_response
 759:.\main.c      ****         if(BIN_ENABLED == 1)
 3963              		.loc 1 759 0
 3964 0060 624B     		ldr	r3, .L221+12
 3965 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3966 0064 012B     		cmp	r3, #1
 3967 0066 03D1     		bne	.L187
 760:.\main.c      ****         {
 761:.\main.c      ****             handle_rx_binary();
 3968              		.loc 1 761 0
 3969 0068 FFF7FEFF 		bl	handle_rx_binary
 762:.\main.c      ****             print_RF();
 3970              		.loc 1 762 0
 3971 006c FFF7FEFF 		bl	print_RF
 3972              	.L187:
 763:.\main.c      ****         }
 764:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 765:.\main.c      ****         
 766:.\main.c      ****         uint8 frontSensors[5];
 767:.\main.c      ****         readFrontSensors(frontSensors);
 3973              		.loc 1 767 0
 3974 0070 3B46     		mov	r3, r7
 3975 0072 1846     		mov	r0, r3
 3976 0074 FFF7FEFF 		bl	readFrontSensors
 768:.\main.c      ****         
 769:.\main.c      ****         switch(track_mode)
 3977              		.loc 1 769 0
 3978 0078 5E4B     		ldr	r3, .L221+20
 3979 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3980 007c 062B     		cmp	r3, #6
 3981 007e 00F28380 		bhi	.L188
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 85


 3982 0082 01A2     		adr	r2, .L190
 3983 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3984              		.p2align 2
 3985              	.L190:
 3986 0088 89010000 		.word	.L188+1
 3987 008c 89010000 		.word	.L188+1
 3988 0090 89010000 		.word	.L188+1
 3989 0094 A5000000 		.word	.L193+1
 3990 0098 89010000 		.word	.L188+1
 3991 009c E1000000 		.word	.L195+1
 3992 00a0 07010000 		.word	.L196+1
 3993              		.p2align 1
 3994              	.L193:
 770:.\main.c      ****         {
 771:.\main.c      ****             case SQUARE_TRACK:
 772:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 3995              		.loc 1 772 0
 3996 00a4 544B     		ldr	r3, .L221+24
 3997 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3998 00a8 012B     		cmp	r3, #1
 3999 00aa 18D0     		beq	.L197
 4000              		.loc 1 772 0 is_stmt 0 discriminator 1
 4001 00ac 524B     		ldr	r3, .L221+24
 4002 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4003 00b0 022B     		cmp	r3, #2
 4004 00b2 14D0     		beq	.L197
 773:.\main.c      ****                 {
 774:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 4005              		.loc 1 774 0 is_stmt 1
 4006 00b4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4007 00b6 012B     		cmp	r3, #1
 4008 00b8 05D1     		bne	.L198
 4009              		.loc 1 774 0 is_stmt 0 discriminator 1
 4010 00ba BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4011 00bc 012B     		cmp	r3, #1
 4012 00be 02D1     		bne	.L198
 775:.\main.c      ****                         initTurnLeft();
 4013              		.loc 1 775 0 is_stmt 1
 4014 00c0 FFF7FEFF 		bl	initTurnLeft
 4015 00c4 0BE0     		b	.L197
 4016              	.L198:
 776:.\main.c      ****                     }
 777:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 4017              		.loc 1 777 0
 4018 00c6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4019 00c8 012B     		cmp	r3, #1
 4020 00ca 05D1     		bne	.L199
 4021              		.loc 1 777 0 is_stmt 0 discriminator 1
 4022 00cc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4023 00ce 012B     		cmp	r3, #1
 4024 00d0 02D1     		bne	.L199
 778:.\main.c      ****                     {
 779:.\main.c      ****                         initTurnRight();
 4025              		.loc 1 779 0 is_stmt 1
 4026 00d2 FFF7FEFF 		bl	initTurnRight
 4027 00d6 02E0     		b	.L197
 4028              	.L199:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 86


 780:.\main.c      ****                     }
 781:.\main.c      ****                     else inittrackLineZ();
 4029              		.loc 1 781 0
 4030 00d8 FFF7FEFF 		bl	inittrackLineZ
 782:.\main.c      ****                 }
 783:.\main.c      ****             break;
 4031              		.loc 1 783 0
 4032 00dc 54E0     		b	.L188
 4033              	.L197:
 4034 00de 53E0     		b	.L188
 4035              	.L195:
 784:.\main.c      ****             case NO_TRACK:
 785:.\main.c      ****             break;
 786:.\main.c      ****             case CURVE_TRACK:
 787:.\main.c      ****             break;
 788:.\main.c      ****             case U_TRACK:
 789:.\main.c      ****             break;
 790:.\main.c      ****             case QUAD_STOP:
 791:.\main.c      ****             break;
 792:.\main.c      ****             case RF_STOP:
 793:.\main.c      ****                 if(initial_pos_valid == 1)
 4036              		.loc 1 793 0
 4037 00e0 464B     		ldr	r3, .L221+28
 4038 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4039 00e4 012B     		cmp	r3, #1
 4040 00e6 0DD1     		bne	.L200
 794:.\main.c      ****                 {
 795:.\main.c      ****                     //changeToBT();
 796:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 797:.\main.c      ****                     //changeToRF();
 798:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 4041              		.loc 1 798 0
 4042 00e8 454B     		ldr	r3, .L221+32
 4043 00ea 5A88     		ldrh	r2, [r3, #2]
 4044 00ec 454B     		ldr	r3, .L221+36
 4045 00ee 1A80     		strh	r2, [r3]	@ movhi
 799:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 4046              		.loc 1 799 0
 4047 00f0 434B     		ldr	r3, .L221+32
 4048 00f2 9A88     		ldrh	r2, [r3, #4]
 4049 00f4 444B     		ldr	r3, .L221+40
 4050 00f6 1A80     		strh	r2, [r3]	@ movhi
 800:.\main.c      ****                     initial_pos_valid = 2;
 4051              		.loc 1 800 0
 4052 00f8 404B     		ldr	r3, .L221+28
 4053 00fa 0222     		movs	r2, #2
 4054 00fc 1A70     		strb	r2, [r3]
 801:.\main.c      ****                     initForward();
 4055              		.loc 1 801 0
 4056 00fe FFF7FEFF 		bl	initForward
 802:.\main.c      ****                 }
 803:.\main.c      ****             break;
 4057              		.loc 1 803 0
 4058 0102 41E0     		b	.L188
 4059              	.L200:
 4060 0104 40E0     		b	.L188
 4061              	.L196:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 87


 804:.\main.c      ****             case DEST_TEST:
 805:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN){
 4062              		.loc 1 805 0
 4063 0106 3C4B     		ldr	r3, .L221+24
 4064 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4065 010a 012B     		cmp	r3, #1
 4066 010c 3BD0     		beq	.L201
 4067              		.loc 1 805 0 is_stmt 0 discriminator 1
 4068 010e 3A4B     		ldr	r3, .L221+24
 4069 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4070 0112 022B     		cmp	r3, #2
 4071 0114 37D0     		beq	.L201
 4072              	.LBB9:
 806:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 807:.\main.c      ****                     char nextStep = instructions[instructionCount];
 4073              		.loc 1 807 0 is_stmt 1
 4074 0116 3D4B     		ldr	r3, .L221+44
 4075 0118 1B88     		ldrh	r3, [r3]
 4076 011a 1A46     		mov	r2, r3
 4077 011c 3C4B     		ldr	r3, .L221+48
 4078 011e 9B5C     		ldrb	r3, [r3, r2]
 4079 0120 FB71     		strb	r3, [r7, #7]
 808:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 4080              		.loc 1 808 0
 4081 0122 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4082 0124 012B     		cmp	r3, #1
 4083 0126 02D1     		bne	.L202
 4084              		.loc 1 808 0 is_stmt 0 discriminator 1
 4085 0128 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4086 012a 012B     		cmp	r3, #1
 4087 012c 05D0     		beq	.L203
 4088              	.L202:
 4089              		.loc 1 808 0 discriminator 3
 4090 012e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4091 0130 012B     		cmp	r3, #1
 4092 0132 22D1     		bne	.L204
 4093              		.loc 1 808 0 discriminator 4
 4094 0134 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4095 0136 012B     		cmp	r3, #1
 4096 0138 1FD1     		bne	.L204
 4097              	.L203:
 809:.\main.c      ****                         if(sensorsDisabled == 0)
 4098              		.loc 1 809 0 is_stmt 1
 4099 013a 364B     		ldr	r3, .L221+52
 4100 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4101 013e 002B     		cmp	r3, #0
 4102 0140 1AD1     		bne	.L205
 810:.\main.c      ****                         {
 811:.\main.c      ****                             sensorsDisabled = 1;
 4103              		.loc 1 811 0
 4104 0142 344B     		ldr	r3, .L221+52
 4105 0144 0122     		movs	r2, #1
 4106 0146 1A70     		strb	r2, [r3]
 812:.\main.c      ****                             switch(nextStep)
 4107              		.loc 1 812 0
 4108 0148 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4109 014a 522B     		cmp	r3, #82
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 88


 4110 014c 0AD0     		beq	.L207
 4111 014e 532B     		cmp	r3, #83
 4112 0150 02D0     		beq	.L208
 4113 0152 4C2B     		cmp	r3, #76
 4114 0154 03D0     		beq	.L209
 813:.\main.c      ****                             {
 814:.\main.c      ****                                 case 'S':
 815:.\main.c      ****                                     inittrackLineZ();
 816:.\main.c      ****                                     //do nothing
 817:.\main.c      ****                                 break;
 818:.\main.c      ****                                 case 'L':
 819:.\main.c      ****                                     initTurnLeft();
 820:.\main.c      ****                                 break;
 821:.\main.c      ****                                 case 'R':
 822:.\main.c      ****                                     initTurnRight();
 823:.\main.c      ****                                 break;
 824:.\main.c      ****                                     
 825:.\main.c      ****                                 default:
 826:.\main.c      ****                                     //do nothing
 827:.\main.c      ****                                     break;
 4115              		.loc 1 827 0
 4116 0156 08E0     		b	.L210
 4117              	.L208:
 815:.\main.c      ****                                     //do nothing
 4118              		.loc 1 815 0
 4119 0158 FFF7FEFF 		bl	inittrackLineZ
 817:.\main.c      ****                                 case 'L':
 4120              		.loc 1 817 0
 4121 015c 05E0     		b	.L210
 4122              	.L209:
 819:.\main.c      ****                                 break;
 4123              		.loc 1 819 0
 4124 015e FFF7FEFF 		bl	initTurnLeft
 820:.\main.c      ****                                 case 'R':
 4125              		.loc 1 820 0
 4126 0162 02E0     		b	.L210
 4127              	.L207:
 822:.\main.c      ****                                 break;
 4128              		.loc 1 822 0
 4129 0164 FFF7FEFF 		bl	initTurnRight
 823:.\main.c      ****                                     
 4130              		.loc 1 823 0
 4131 0168 00BF     		nop
 4132              	.L210:
 828:.\main.c      ****                             }
 829:.\main.c      ****                             instructionCount++;
 4133              		.loc 1 829 0
 4134 016a 284B     		ldr	r3, .L221+44
 4135 016c 1B88     		ldrh	r3, [r3]
 4136 016e 0133     		adds	r3, r3, #1
 4137 0170 9AB2     		uxth	r2, r3
 4138 0172 264B     		ldr	r3, .L221+44
 4139 0174 1A80     		strh	r2, [r3]	@ movhi
 809:.\main.c      ****                         {
 4140              		.loc 1 809 0
 4141 0176 06E0     		b	.L201
 4142              	.L205:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 89


 4143 0178 05E0     		b	.L201
 4144              	.L204:
 830:.\main.c      ****                         }
 831:.\main.c      ****                     }
 832:.\main.c      ****                     else
 833:.\main.c      ****                     {
 834:.\main.c      ****                         inittrackLineZ();
 4145              		.loc 1 834 0
 4146 017a FFF7FEFF 		bl	inittrackLineZ
 835:.\main.c      ****                         sensorsDisabled = 0;
 4147              		.loc 1 835 0
 4148 017e 254B     		ldr	r3, .L221+52
 4149 0180 0022     		movs	r2, #0
 4150 0182 1A70     		strb	r2, [r3]
 4151              	.LBE9:
 836:.\main.c      ****                     }
 837:.\main.c      ****                 }
 838:.\main.c      ****                 break;
 4152              		.loc 1 838 0
 4153 0184 FFE7     		b	.L220
 4154              	.L201:
 4155              	.L220:
 4156 0186 00BF     		nop
 4157              	.L188:
 839:.\main.c      ****         }
 840:.\main.c      ****         
 841:.\main.c      ****         switch(movement_state)
 4158              		.loc 1 841 0
 4159 0188 1B4B     		ldr	r3, .L221+24
 4160 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4161 018c 062B     		cmp	r3, #6
 4162 018e 3FF665AF 		bhi	.L186
 4163 0192 01A2     		adr	r2, .L213
 4164 0194 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4165              		.p2align 2
 4166              	.L213:
 4167 0198 B5010000 		.word	.L212+1
 4168 019c BB010000 		.word	.L214+1
 4169 01a0 C1010000 		.word	.L215+1
 4170 01a4 C7010000 		.word	.L216+1
 4171 01a8 CD010000 		.word	.L217+1
 4172 01ac D3010000 		.word	.L218+1
 4173 01b0 D9010000 		.word	.L219+1
 4174              		.p2align 1
 4175              	.L212:
 842:.\main.c      ****         {
 843:.\main.c      ****             case DRIVE:
 844:.\main.c      ****                 driveForwards();
 4176              		.loc 1 844 0
 4177 01b4 FFF7FEFF 		bl	driveForwards
 845:.\main.c      ****             break;
 4178              		.loc 1 845 0
 4179 01b8 10E0     		b	.L211
 4180              	.L214:
 846:.\main.c      ****             case LTURN:
 847:.\main.c      ****                 turnLeft();
 4181              		.loc 1 847 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 90


 4182 01ba FFF7FEFF 		bl	turnLeft
 848:.\main.c      ****             break;
 4183              		.loc 1 848 0
 4184 01be 0DE0     		b	.L211
 4185              	.L215:
 849:.\main.c      ****             case RTURN:
 850:.\main.c      ****                 turnRight();
 4186              		.loc 1 850 0
 4187 01c0 FFF7FEFF 		bl	turnRight
 851:.\main.c      ****             break;
 4188              		.loc 1 851 0
 4189 01c4 0AE0     		b	.L211
 4190              	.L216:
 852:.\main.c      ****             case STOPPED:
 853:.\main.c      ****                 brakeMotor();
 4191              		.loc 1 853 0
 4192 01c6 FFF7FEFF 		bl	brakeMotor
 854:.\main.c      ****             break;
 4193              		.loc 1 854 0
 4194 01ca 07E0     		b	.L211
 4195              	.L217:
 855:.\main.c      ****             case TRACKING:
 856:.\main.c      ****                 trackLine();
 4196              		.loc 1 856 0
 4197 01cc FFF7FEFF 		bl	trackLine
 857:.\main.c      ****             break;
 4198              		.loc 1 857 0
 4199 01d0 04E0     		b	.L211
 4200              	.L218:
 858:.\main.c      ****             case TRACKING_U:
 859:.\main.c      ****                 trackLineU();
 4201              		.loc 1 859 0
 4202 01d2 FFF7FEFF 		bl	trackLineU
 860:.\main.c      ****             break;
 4203              		.loc 1 860 0
 4204 01d6 01E0     		b	.L211
 4205              	.L219:
 861:.\main.c      ****             case TRACKING_SOFT:
 862:.\main.c      ****                 trackLineZ();
 4206              		.loc 1 862 0
 4207 01d8 FFF7FEFF 		bl	trackLineZ
 4208              	.L211:
 4209              	.LBE8:
 863:.\main.c      ****         }
 864:.\main.c      ****         //handle_usb();        
 865:.\main.c      ****     }   
 4210              		.loc 1 865 0
 4211 01dc 3EE7     		b	.L186
 4212              	.L222:
 4213 01de 00BF     		.align	2
 4214              	.L221:
 4215 01e0 00000000 		.word	isr_quad1
 4216 01e4 00000000 		.word	isr_turn_timer
 4217 01e8 00000000 		.word	button
 4218 01ec 00000000 		.word	BIN_ENABLED
 4219 01f0 00000000 		.word	BT_ENABLED
 4220 01f4 00000000 		.word	track_mode
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 91


 4221 01f8 00000000 		.word	movement_state
 4222 01fc 00000000 		.word	initial_pos_valid
 4223 0200 00000000 		.word	system_state
 4224 0204 00000000 		.word	initial_x_pos
 4225 0208 00000000 		.word	initial_y_pos
 4226 020c 00000000 		.word	instructionCount
 4227 0210 00000000 		.word	instructions
 4228 0214 00000000 		.word	sensorsDisabled
 4229              		.cfi_endproc
 4230              	.LFE99:
 4231              		.size	main, .-main
 4232              		.section	.text.usbPutString,"ax",%progbits
 4233              		.align	2
 4234              		.global	usbPutString
 4235              		.thumb
 4236              		.thumb_func
 4237              		.type	usbPutString, %function
 4238              	usbPutString:
 4239              	.LFB100:
 866:.\main.c      **** }
 867:.\main.c      **** //* ========================================
 868:.\main.c      **** void usbPutString(char *s)
 869:.\main.c      **** {
 4240              		.loc 1 869 0
 4241              		.cfi_startproc
 4242              		@ args = 0, pretend = 0, frame = 16
 4243              		@ frame_needed = 1, uses_anonymous_args = 0
 4244 0000 80B5     		push	{r7, lr}
 4245              		.cfi_def_cfa_offset 8
 4246              		.cfi_offset 7, -8
 4247              		.cfi_offset 14, -4
 4248 0002 84B0     		sub	sp, sp, #16
 4249              		.cfi_def_cfa_offset 24
 4250 0004 00AF     		add	r7, sp, #0
 4251              		.cfi_def_cfa_register 7
 4252 0006 7860     		str	r0, [r7, #4]
 870:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 871:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 872:.\main.c      **** //  length to 62 char (63rd char is a '!')
 873:.\main.c      ****     if (USE_USB && portOpen)    
 4253              		.loc 1 873 0
 4254 0008 154B     		ldr	r3, .L227
 4255 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4256 000c 002B     		cmp	r3, #0
 4257 000e 23D0     		beq	.L223
 4258              	.LBB10:
 874:.\main.c      ****     {
 875:.\main.c      ****             uint32 cnt = 0;
 4259              		.loc 1 875 0
 4260 0010 0023     		movs	r3, #0
 4261 0012 FB60     		str	r3, [r7, #12]
 876:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4262              		.loc 1 876 0
 4263 0014 0AE0     		b	.L225
 4264              	.L226:
 877:.\main.c      ****             {
 878:.\main.c      ****                 cnt++;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 92


 4265              		.loc 1 878 0
 4266 0016 FB68     		ldr	r3, [r7, #12]
 4267 0018 0133     		adds	r3, r3, #1
 4268 001a FB60     		str	r3, [r7, #12]
 879:.\main.c      ****                 if(cnt == 3000000){
 4269              		.loc 1 879 0
 4270 001c FB68     		ldr	r3, [r7, #12]
 4271 001e 114A     		ldr	r2, .L227+4
 4272 0020 9342     		cmp	r3, r2
 4273 0022 03D1     		bne	.L225
 880:.\main.c      ****                     portOpen = 0;
 4274              		.loc 1 880 0
 4275 0024 0E4B     		ldr	r3, .L227
 4276 0026 0022     		movs	r2, #0
 4277 0028 1A70     		strb	r2, [r3]
 881:.\main.c      ****                     return;
 4278              		.loc 1 881 0
 4279 002a 15E0     		b	.L223
 4280              	.L225:
 876:.\main.c      ****             {
 4281              		.loc 1 876 0
 4282 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4283 0030 0346     		mov	r3, r0
 4284 0032 002B     		cmp	r3, #0
 4285 0034 EFD0     		beq	.L226
 882:.\main.c      ****                 }
 883:.\main.c      ****             }
 884:.\main.c      ****             s[63]='\0';
 4286              		.loc 1 884 0
 4287 0036 7B68     		ldr	r3, [r7, #4]
 4288 0038 3F33     		adds	r3, r3, #63
 4289 003a 0022     		movs	r2, #0
 4290 003c 1A70     		strb	r2, [r3]
 885:.\main.c      ****             s[62]='!';
 4291              		.loc 1 885 0
 4292 003e 7B68     		ldr	r3, [r7, #4]
 4293 0040 3E33     		adds	r3, r3, #62
 4294 0042 2122     		movs	r2, #33
 4295 0044 1A70     		strb	r2, [r3]
 886:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4296              		.loc 1 886 0
 4297 0046 7868     		ldr	r0, [r7, #4]
 4298 0048 FFF7FEFF 		bl	strlen
 4299 004c 0346     		mov	r3, r0
 4300 004e 9BB2     		uxth	r3, r3
 4301 0050 7868     		ldr	r0, [r7, #4]
 4302 0052 1946     		mov	r1, r3
 4303 0054 FFF7FEFF 		bl	USBUART_PutData
 4304              	.L223:
 4305              	.LBE10:
 887:.\main.c      ****     }
 888:.\main.c      **** }
 4306              		.loc 1 888 0
 4307 0058 1037     		adds	r7, r7, #16
 4308              		.cfi_def_cfa_offset 8
 4309 005a BD46     		mov	sp, r7
 4310              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 93


 4311              		@ sp needed
 4312 005c 80BD     		pop	{r7, pc}
 4313              	.L228:
 4314 005e 00BF     		.align	2
 4315              	.L227:
 4316 0060 00000000 		.word	portOpen
 4317 0064 C0C62D00 		.word	3000000
 4318              		.cfi_endproc
 4319              	.LFE100:
 4320              		.size	usbPutString, .-usbPutString
 4321              		.section	.text.usbPutChar,"ax",%progbits
 4322              		.align	2
 4323              		.global	usbPutChar
 4324              		.thumb
 4325              		.thumb_func
 4326              		.type	usbPutChar, %function
 4327              	usbPutChar:
 4328              	.LFB101:
 889:.\main.c      **** //* ========================================
 890:.\main.c      **** void usbPutChar(char c)
 891:.\main.c      **** {
 4329              		.loc 1 891 0
 4330              		.cfi_startproc
 4331              		@ args = 0, pretend = 0, frame = 16
 4332              		@ frame_needed = 1, uses_anonymous_args = 0
 4333 0000 80B5     		push	{r7, lr}
 4334              		.cfi_def_cfa_offset 8
 4335              		.cfi_offset 7, -8
 4336              		.cfi_offset 14, -4
 4337 0002 84B0     		sub	sp, sp, #16
 4338              		.cfi_def_cfa_offset 24
 4339 0004 00AF     		add	r7, sp, #0
 4340              		.cfi_def_cfa_register 7
 4341 0006 0346     		mov	r3, r0
 4342 0008 FB71     		strb	r3, [r7, #7]
 892:.\main.c      ****     if (USE_USB && portOpen)    
 4343              		.loc 1 892 0
 4344 000a 0F4B     		ldr	r3, .L233
 4345 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4346 000e 002B     		cmp	r3, #0
 4347 0010 16D0     		beq	.L229
 4348              	.LBB11:
 893:.\main.c      ****     {    
 894:.\main.c      ****         uint32 cnt = 0;
 4349              		.loc 1 894 0
 4350 0012 0023     		movs	r3, #0
 4351 0014 FB60     		str	r3, [r7, #12]
 895:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4352              		.loc 1 895 0
 4353 0016 0AE0     		b	.L231
 4354              	.L232:
 896:.\main.c      ****             cnt++;
 4355              		.loc 1 896 0
 4356 0018 FB68     		ldr	r3, [r7, #12]
 4357 001a 0133     		adds	r3, r3, #1
 4358 001c FB60     		str	r3, [r7, #12]
 897:.\main.c      ****             if(cnt == 3000000){
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 94


 4359              		.loc 1 897 0
 4360 001e FB68     		ldr	r3, [r7, #12]
 4361 0020 0A4A     		ldr	r2, .L233+4
 4362 0022 9342     		cmp	r3, r2
 4363 0024 03D1     		bne	.L231
 898:.\main.c      ****                 portOpen = 0;
 4364              		.loc 1 898 0
 4365 0026 084B     		ldr	r3, .L233
 4366 0028 0022     		movs	r2, #0
 4367 002a 1A70     		strb	r2, [r3]
 899:.\main.c      ****                 return;
 4368              		.loc 1 899 0
 4369 002c 08E0     		b	.L229
 4370              	.L231:
 895:.\main.c      ****             cnt++;
 4371              		.loc 1 895 0
 4372 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4373 0032 0346     		mov	r3, r0
 4374 0034 002B     		cmp	r3, #0
 4375 0036 EFD0     		beq	.L232
 900:.\main.c      ****             }
 901:.\main.c      ****         }
 902:.\main.c      ****         USBUART_PutChar(c);
 4376              		.loc 1 902 0
 4377 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4378 003a 1846     		mov	r0, r3
 4379 003c FFF7FEFF 		bl	USBUART_PutChar
 4380              	.L229:
 4381              	.LBE11:
 903:.\main.c      ****     }    
 904:.\main.c      **** }
 4382              		.loc 1 904 0
 4383 0040 1037     		adds	r7, r7, #16
 4384              		.cfi_def_cfa_offset 8
 4385 0042 BD46     		mov	sp, r7
 4386              		.cfi_def_cfa_register 13
 4387              		@ sp needed
 4388 0044 80BD     		pop	{r7, pc}
 4389              	.L234:
 4390 0046 00BF     		.align	2
 4391              	.L233:
 4392 0048 00000000 		.word	portOpen
 4393 004c C0C62D00 		.word	3000000
 4394              		.cfi_endproc
 4395              	.LFE101:
 4396              		.size	usbPutChar, .-usbPutChar
 4397              		.section	.text.uart_set_PWM,"ax",%progbits
 4398              		.align	2
 4399              		.global	uart_set_PWM
 4400              		.thumb
 4401              		.thumb_func
 4402              		.type	uart_set_PWM, %function
 4403              	uart_set_PWM:
 4404              	.LFB102:
 905:.\main.c      **** //* ========================================
 906:.\main.c      **** 
 907:.\main.c      **** void uart_set_PWM()
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 95


 908:.\main.c      **** {
 4405              		.loc 1 908 0
 4406              		.cfi_startproc
 4407              		@ args = 0, pretend = 0, frame = 8
 4408              		@ frame_needed = 1, uses_anonymous_args = 0
 4409 0000 80B5     		push	{r7, lr}
 4410              		.cfi_def_cfa_offset 8
 4411              		.cfi_offset 7, -8
 4412              		.cfi_offset 14, -4
 4413 0002 82B0     		sub	sp, sp, #8
 4414              		.cfi_def_cfa_offset 16
 4415 0004 00AF     		add	r7, sp, #0
 4416              		.cfi_def_cfa_register 7
 909:.\main.c      ****     uint8 c;
 910:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 4417              		.loc 1 910 0
 4418 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 4419 000a 0346     		mov	r3, r0
 4420 000c 002B     		cmp	r3, #0
 4421 000e 11D0     		beq	.L235
 911:.\main.c      ****        {  
 912:.\main.c      ****             c = USBUART_GetChar();
 4422              		.loc 1 912 0
 4423 0010 FFF7FEFF 		bl	USBUART_GetChar
 4424 0014 0346     		mov	r3, r0
 4425 0016 FB71     		strb	r3, [r7, #7]
 913:.\main.c      ****             
 914:.\main.c      ****             if(c <= 100 && c > 0){
 4426              		.loc 1 914 0
 4427 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4428 001a 642B     		cmp	r3, #100
 4429 001c 0AD8     		bhi	.L235
 4430              		.loc 1 914 0 is_stmt 0 discriminator 1
 4431 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4432 0020 002B     		cmp	r3, #0
 4433 0022 07D0     		beq	.L235
 915:.\main.c      ****                 PWM_1_WriteCompare(c);
 4434              		.loc 1 915 0 is_stmt 1
 4435 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4436 0026 1846     		mov	r0, r3
 4437 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 916:.\main.c      ****                 usbPutString(c);
 4438              		.loc 1 916 0
 4439 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4440 002e 1846     		mov	r0, r3
 4441 0030 FFF7FEFF 		bl	usbPutString
 4442              	.L235:
 917:.\main.c      ****             }
 918:.\main.c      ****        }
 919:.\main.c      **** }
 4443              		.loc 1 919 0
 4444 0034 0837     		adds	r7, r7, #8
 4445              		.cfi_def_cfa_offset 8
 4446 0036 BD46     		mov	sp, r7
 4447              		.cfi_def_cfa_register 13
 4448              		@ sp needed
 4449 0038 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 96


 4450              		.cfi_endproc
 4451              	.LFE102:
 4452              		.size	uart_set_PWM, .-uart_set_PWM
 4453 003a 00BF     		.text
 4454              	.Letext0:
 4455              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4456              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4457              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4458              		.file 5 ".\\vars.h"
 4459              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4460              		.section	.debug_info,"",%progbits
 4461              	.Ldebug_info0:
 4462 0000 380D0000 		.4byte	0xd38
 4463 0004 0400     		.2byte	0x4
 4464 0006 00000000 		.4byte	.Ldebug_abbrev0
 4465 000a 04       		.byte	0x4
 4466 000b 01       		.uleb128 0x1
 4467 000c 24040000 		.4byte	.LASF178
 4468 0010 01       		.byte	0x1
 4469 0011 7F080000 		.4byte	.LASF179
 4470 0015 34020000 		.4byte	.LASF180
 4471 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4472 001d 00000000 		.4byte	0
 4473 0021 00000000 		.4byte	.Ldebug_line0
 4474 0025 02       		.uleb128 0x2
 4475 0026 01       		.byte	0x1
 4476 0027 06       		.byte	0x6
 4477 0028 BA070000 		.4byte	.LASF0
 4478 002c 02       		.uleb128 0x2
 4479 002d 01       		.byte	0x1
 4480 002e 08       		.byte	0x8
 4481 002f 11070000 		.4byte	.LASF1
 4482 0033 02       		.uleb128 0x2
 4483 0034 02       		.byte	0x2
 4484 0035 05       		.byte	0x5
 4485 0036 C6050000 		.4byte	.LASF2
 4486 003a 02       		.uleb128 0x2
 4487 003b 02       		.byte	0x2
 4488 003c 07       		.byte	0x7
 4489 003d C6070000 		.4byte	.LASF3
 4490 0041 03       		.uleb128 0x3
 4491 0042 77000000 		.4byte	.LASF11
 4492 0046 02       		.byte	0x2
 4493 0047 3F       		.byte	0x3f
 4494 0048 4C000000 		.4byte	0x4c
 4495 004c 02       		.uleb128 0x2
 4496 004d 04       		.byte	0x4
 4497 004e 05       		.byte	0x5
 4498 004f F0050000 		.4byte	.LASF4
 4499 0053 02       		.uleb128 0x2
 4500 0054 04       		.byte	0x4
 4501 0055 07       		.byte	0x7
 4502 0056 C8060000 		.4byte	.LASF5
 4503 005a 02       		.uleb128 0x2
 4504 005b 08       		.byte	0x8
 4505 005c 05       		.byte	0x5
 4506 005d EE030000 		.4byte	.LASF6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 97


 4507 0061 02       		.uleb128 0x2
 4508 0062 08       		.byte	0x8
 4509 0063 07       		.byte	0x7
 4510 0064 04020000 		.4byte	.LASF7
 4511 0068 04       		.uleb128 0x4
 4512 0069 04       		.byte	0x4
 4513 006a 05       		.byte	0x5
 4514 006b 696E7400 		.ascii	"int\000"
 4515 006f 02       		.uleb128 0x2
 4516 0070 04       		.byte	0x4
 4517 0071 07       		.byte	0x7
 4518 0072 5F000000 		.4byte	.LASF8
 4519 0076 02       		.uleb128 0x2
 4520 0077 04       		.byte	0x4
 4521 0078 07       		.byte	0x7
 4522 0079 BF060000 		.4byte	.LASF9
 4523 007d 05       		.uleb128 0x5
 4524 007e 04       		.byte	0x4
 4525 007f 83000000 		.4byte	0x83
 4526 0083 02       		.uleb128 0x2
 4527 0084 01       		.byte	0x1
 4528 0085 08       		.byte	0x8
 4529 0086 49030000 		.4byte	.LASF10
 4530 008a 03       		.uleb128 0x3
 4531 008b E6060000 		.4byte	.LASF12
 4532 008f 03       		.byte	0x3
 4533 0090 2C       		.byte	0x2c
 4534 0091 41000000 		.4byte	0x41
 4535 0095 06       		.uleb128 0x6
 4536 0096 12080000 		.4byte	.LASF13
 4537 009a 04       		.byte	0x4
 4538 009b 9201     		.2byte	0x192
 4539 009d 2C000000 		.4byte	0x2c
 4540 00a1 06       		.uleb128 0x6
 4541 00a2 8B030000 		.4byte	.LASF14
 4542 00a6 04       		.byte	0x4
 4543 00a7 9301     		.2byte	0x193
 4544 00a9 3A000000 		.4byte	0x3a
 4545 00ad 06       		.uleb128 0x6
 4546 00ae F5040000 		.4byte	.LASF15
 4547 00b2 04       		.byte	0x4
 4548 00b3 9401     		.2byte	0x194
 4549 00b5 53000000 		.4byte	0x53
 4550 00b9 06       		.uleb128 0x6
 4551 00ba 92030000 		.4byte	.LASF16
 4552 00be 04       		.byte	0x4
 4553 00bf 9501     		.2byte	0x195
 4554 00c1 25000000 		.4byte	0x25
 4555 00c5 06       		.uleb128 0x6
 4556 00c6 81000000 		.4byte	.LASF17
 4557 00ca 04       		.byte	0x4
 4558 00cb 9601     		.2byte	0x196
 4559 00cd 33000000 		.4byte	0x33
 4560 00d1 02       		.uleb128 0x2
 4561 00d2 04       		.byte	0x4
 4562 00d3 04       		.byte	0x4
 4563 00d4 A4010000 		.4byte	.LASF18
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 98


 4564 00d8 02       		.uleb128 0x2
 4565 00d9 08       		.byte	0x8
 4566 00da 04       		.byte	0x4
 4567 00db 18080000 		.4byte	.LASF19
 4568 00df 02       		.uleb128 0x2
 4569 00e0 08       		.byte	0x8
 4570 00e1 04       		.byte	0x4
 4571 00e2 71050000 		.4byte	.LASF20
 4572 00e6 07       		.uleb128 0x7
 4573 00e7 52070000 		.4byte	.LASF28
 4574 00eb 01       		.byte	0x1
 4575 00ec 05       		.byte	0x5
 4576 00ed 5A       		.byte	0x5a
 4577 00ee 1D010000 		.4byte	0x11d
 4578 00f2 08       		.uleb128 0x8
 4579 00f3 C3010000 		.4byte	.LASF21
 4580 00f7 00       		.sleb128 0
 4581 00f8 08       		.uleb128 0x8
 4582 00f9 94000000 		.4byte	.LASF22
 4583 00fd 01       		.sleb128 1
 4584 00fe 08       		.uleb128 0x8
 4585 00ff 0A000000 		.4byte	.LASF23
 4586 0103 02       		.sleb128 2
 4587 0104 08       		.uleb128 0x8
 4588 0105 60050000 		.4byte	.LASF24
 4589 0109 03       		.sleb128 3
 4590 010a 08       		.uleb128 0x8
 4591 010b BC000000 		.4byte	.LASF25
 4592 010f 04       		.sleb128 4
 4593 0110 08       		.uleb128 0x8
 4594 0111 76010000 		.4byte	.LASF26
 4595 0115 05       		.sleb128 5
 4596 0116 08       		.uleb128 0x8
 4597 0117 4A060000 		.4byte	.LASF27
 4598 011b 06       		.sleb128 6
 4599 011c 00       		.byte	0
 4600 011d 07       		.uleb128 0x7
 4601 011e F7000000 		.4byte	.LASF29
 4602 0122 01       		.byte	0x1
 4603 0123 05       		.byte	0x5
 4604 0124 5B       		.byte	0x5b
 4605 0125 54010000 		.4byte	0x154
 4606 0129 08       		.uleb128 0x8
 4607 012a 32060000 		.4byte	.LASF30
 4608 012e 00       		.sleb128 0
 4609 012f 08       		.uleb128 0x8
 4610 0130 B5030000 		.4byte	.LASF31
 4611 0134 01       		.sleb128 1
 4612 0135 08       		.uleb128 0x8
 4613 0136 07060000 		.4byte	.LASF32
 4614 013a 02       		.sleb128 2
 4615 013b 08       		.uleb128 0x8
 4616 013c 30010000 		.4byte	.LASF33
 4617 0140 03       		.sleb128 3
 4618 0141 08       		.uleb128 0x8
 4619 0142 EB070000 		.4byte	.LASF34
 4620 0146 04       		.sleb128 4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 99


 4621 0147 08       		.uleb128 0x8
 4622 0148 30080000 		.4byte	.LASF35
 4623 014c 05       		.sleb128 5
 4624 014d 08       		.uleb128 0x8
 4625 014e 10000000 		.4byte	.LASF36
 4626 0152 06       		.sleb128 6
 4627 0153 00       		.byte	0
 4628 0154 09       		.uleb128 0x9
 4629 0155 15050000 		.4byte	.LASF181
 4630 0159 20       		.byte	0x20
 4631 015a 05       		.byte	0x5
 4632 015b 61       		.byte	0x61
 4633 015c 2D020000 		.4byte	0x22d
 4634 0160 0A       		.uleb128 0xa
 4635 0161 33050000 		.4byte	.LASF37
 4636 0165 05       		.byte	0x5
 4637 0166 62       		.byte	0x62
 4638 0167 B9000000 		.4byte	0xb9
 4639 016b 00       		.byte	0
 4640 016c 0A       		.uleb128 0xa
 4641 016d BD010000 		.4byte	.LASF38
 4642 0171 05       		.byte	0x5
 4643 0172 63       		.byte	0x63
 4644 0173 95000000 		.4byte	0x95
 4645 0177 01       		.byte	0x1
 4646 0178 0A       		.uleb128 0xa
 4647 0179 F5060000 		.4byte	.LASF39
 4648 017d 05       		.byte	0x5
 4649 017e 64       		.byte	0x64
 4650 017f C5000000 		.4byte	0xc5
 4651 0183 02       		.byte	0x2
 4652 0184 0A       		.uleb128 0xa
 4653 0185 1D030000 		.4byte	.LASF40
 4654 0189 05       		.byte	0x5
 4655 018a 65       		.byte	0x65
 4656 018b C5000000 		.4byte	0xc5
 4657 018f 04       		.byte	0x4
 4658 0190 0A       		.uleb128 0xa
 4659 0191 D9070000 		.4byte	.LASF41
 4660 0195 05       		.byte	0x5
 4661 0196 66       		.byte	0x66
 4662 0197 C5000000 		.4byte	0xc5
 4663 019b 06       		.byte	0x6
 4664 019c 0A       		.uleb128 0xa
 4665 019d 52080000 		.4byte	.LASF42
 4666 01a1 05       		.byte	0x5
 4667 01a2 67       		.byte	0x67
 4668 01a3 C5000000 		.4byte	0xc5
 4669 01a7 08       		.byte	0x8
 4670 01a8 0A       		.uleb128 0xa
 4671 01a9 BB040000 		.4byte	.LASF43
 4672 01ad 05       		.byte	0x5
 4673 01ae 68       		.byte	0x68
 4674 01af C5000000 		.4byte	0xc5
 4675 01b3 0A       		.byte	0xa
 4676 01b4 0A       		.uleb128 0xa
 4677 01b5 4E030000 		.4byte	.LASF44
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 100


 4678 01b9 05       		.byte	0x5
 4679 01ba 69       		.byte	0x69
 4680 01bb C5000000 		.4byte	0xc5
 4681 01bf 0C       		.byte	0xc
 4682 01c0 0A       		.uleb128 0xa
 4683 01c1 42050000 		.4byte	.LASF45
 4684 01c5 05       		.byte	0x5
 4685 01c6 6A       		.byte	0x6a
 4686 01c7 C5000000 		.4byte	0xc5
 4687 01cb 0E       		.byte	0xe
 4688 01cc 0A       		.uleb128 0xa
 4689 01cd 09040000 		.4byte	.LASF46
 4690 01d1 05       		.byte	0x5
 4691 01d2 6B       		.byte	0x6b
 4692 01d3 C5000000 		.4byte	0xc5
 4693 01d7 10       		.byte	0x10
 4694 01d8 0A       		.uleb128 0xa
 4695 01d9 7F060000 		.4byte	.LASF47
 4696 01dd 05       		.byte	0x5
 4697 01de 6C       		.byte	0x6c
 4698 01df C5000000 		.4byte	0xc5
 4699 01e3 12       		.byte	0x12
 4700 01e4 0A       		.uleb128 0xa
 4701 01e5 76080000 		.4byte	.LASF48
 4702 01e9 05       		.byte	0x5
 4703 01ea 6D       		.byte	0x6d
 4704 01eb C5000000 		.4byte	0xc5
 4705 01ef 14       		.byte	0x14
 4706 01f0 0A       		.uleb128 0xa
 4707 01f1 97030000 		.4byte	.LASF49
 4708 01f5 05       		.byte	0x5
 4709 01f6 6E       		.byte	0x6e
 4710 01f7 C5000000 		.4byte	0xc5
 4711 01fb 16       		.byte	0x16
 4712 01fc 0A       		.uleb128 0xa
 4713 01fd EF000000 		.4byte	.LASF50
 4714 0201 05       		.byte	0x5
 4715 0202 6F       		.byte	0x6f
 4716 0203 C5000000 		.4byte	0xc5
 4717 0207 18       		.byte	0x18
 4718 0208 0A       		.uleb128 0xa
 4719 0209 83030000 		.4byte	.LASF51
 4720 020d 05       		.byte	0x5
 4721 020e 70       		.byte	0x70
 4722 020f C5000000 		.4byte	0xc5
 4723 0213 1A       		.byte	0x1a
 4724 0214 0A       		.uleb128 0xa
 4725 0215 B2040000 		.4byte	.LASF52
 4726 0219 05       		.byte	0x5
 4727 021a 71       		.byte	0x71
 4728 021b C5000000 		.4byte	0xc5
 4729 021f 1C       		.byte	0x1c
 4730 0220 0A       		.uleb128 0xa
 4731 0221 8D010000 		.4byte	.LASF53
 4732 0225 05       		.byte	0x5
 4733 0226 72       		.byte	0x72
 4734 0227 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 101


 4735 022b 1E       		.byte	0x1e
 4736 022c 00       		.byte	0
 4737 022d 0B       		.uleb128 0xb
 4738 022e 38080000 		.4byte	.LASF59
 4739 0232 01       		.byte	0x1
 4740 0233 47       		.byte	0x47
 4741 0234 00000000 		.4byte	.LFB63
 4742 0238 60010000 		.4byte	.LFE63-.LFB63
 4743 023c 01       		.uleb128 0x1
 4744 023d 9C       		.byte	0x9c
 4745 023e 77020000 		.4byte	0x277
 4746 0242 0C       		.uleb128 0xc
 4747 0243 10000000 		.4byte	.LBB2
 4748 0247 34010000 		.4byte	.LBE2-.LBB2
 4749 024b 0D       		.uleb128 0xd
 4750 024c E2000000 		.4byte	.LASF54
 4751 0250 01       		.byte	0x1
 4752 0251 4D       		.byte	0x4d
 4753 0252 A1000000 		.4byte	0xa1
 4754 0256 02       		.uleb128 0x2
 4755 0257 91       		.byte	0x91
 4756 0258 76       		.sleb128 -10
 4757 0259 0D       		.uleb128 0xd
 4758 025a DA060000 		.4byte	.LASF55
 4759 025e 01       		.byte	0x1
 4760 025f 4E       		.byte	0x4e
 4761 0260 77020000 		.4byte	0x277
 4762 0264 02       		.uleb128 0x2
 4763 0265 91       		.byte	0x91
 4764 0266 68       		.sleb128 -24
 4765 0267 0D       		.uleb128 0xd
 4766 0268 C9010000 		.4byte	.LASF56
 4767 026c 01       		.byte	0x1
 4768 026d 4F       		.byte	0x4f
 4769 026e 77020000 		.4byte	0x277
 4770 0272 02       		.uleb128 0x2
 4771 0273 91       		.byte	0x91
 4772 0274 5C       		.sleb128 -36
 4773 0275 00       		.byte	0
 4774 0276 00       		.byte	0
 4775 0277 0E       		.uleb128 0xe
 4776 0278 83000000 		.4byte	0x83
 4777 027c 87020000 		.4byte	0x287
 4778 0280 0F       		.uleb128 0xf
 4779 0281 76000000 		.4byte	0x76
 4780 0285 0B       		.byte	0xb
 4781 0286 00       		.byte	0
 4782 0287 10       		.uleb128 0x10
 4783 0288 67030000 		.4byte	.LASF57
 4784 028c 01       		.byte	0x1
 4785 028d 88       		.byte	0x88
 4786 028e 00000000 		.4byte	.LFB64
 4787 0292 18000000 		.4byte	.LFE64-.LFB64
 4788 0296 01       		.uleb128 0x1
 4789 0297 9C       		.byte	0x9c
 4790 0298 AB020000 		.4byte	0x2ab
 4791 029c 11       		.uleb128 0x11
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 102


 4792 029d 64697200 		.ascii	"dir\000"
 4793 02a1 01       		.byte	0x1
 4794 02a2 88       		.byte	0x88
 4795 02a3 95000000 		.4byte	0x95
 4796 02a7 02       		.uleb128 0x2
 4797 02a8 91       		.byte	0x91
 4798 02a9 77       		.sleb128 -9
 4799 02aa 00       		.byte	0
 4800 02ab 10       		.uleb128 0x10
 4801 02ac A9030000 		.4byte	.LASF58
 4802 02b0 01       		.byte	0x1
 4803 02b1 8D       		.byte	0x8d
 4804 02b2 00000000 		.4byte	.LFB65
 4805 02b6 18000000 		.4byte	.LFE65-.LFB65
 4806 02ba 01       		.uleb128 0x1
 4807 02bb 9C       		.byte	0x9c
 4808 02bc CF020000 		.4byte	0x2cf
 4809 02c0 11       		.uleb128 0x11
 4810 02c1 64697200 		.ascii	"dir\000"
 4811 02c5 01       		.byte	0x1
 4812 02c6 8D       		.byte	0x8d
 4813 02c7 95000000 		.4byte	0x95
 4814 02cb 02       		.uleb128 0x2
 4815 02cc 91       		.byte	0x91
 4816 02cd 77       		.sleb128 -9
 4817 02ce 00       		.byte	0
 4818 02cf 12       		.uleb128 0x12
 4819 02d0 58070000 		.4byte	.LASF60
 4820 02d4 01       		.byte	0x1
 4821 02d5 92       		.byte	0x92
 4822 02d6 00000000 		.4byte	.LFB66
 4823 02da 54000000 		.4byte	.LFE66-.LFB66
 4824 02de 01       		.uleb128 0x1
 4825 02df 9C       		.byte	0x9c
 4826 02e0 F3020000 		.4byte	0x2f3
 4827 02e4 13       		.uleb128 0x13
 4828 02e5 6D657300 		.ascii	"mes\000"
 4829 02e9 01       		.byte	0x1
 4830 02ea 97       		.byte	0x97
 4831 02eb F3020000 		.4byte	0x2f3
 4832 02ef 02       		.uleb128 0x2
 4833 02f0 91       		.byte	0x91
 4834 02f1 68       		.sleb128 -24
 4835 02f2 00       		.byte	0
 4836 02f3 0E       		.uleb128 0xe
 4837 02f4 83000000 		.4byte	0x83
 4838 02f8 03030000 		.4byte	0x303
 4839 02fc 0F       		.uleb128 0xf
 4840 02fd 76000000 		.4byte	0x76
 4841 0301 0F       		.byte	0xf
 4842 0302 00       		.byte	0
 4843 0303 10       		.uleb128 0x10
 4844 0304 AA010000 		.4byte	.LASF61
 4845 0308 01       		.byte	0x1
 4846 0309 9C       		.byte	0x9c
 4847 030a 00000000 		.4byte	.LFB67
 4848 030e F4000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 103


 4849 0312 01       		.uleb128 0x1
 4850 0313 9C       		.byte	0x9c
 4851 0314 51030000 		.4byte	0x351
 4852 0318 14       		.uleb128 0x14
 4853 0319 58060000 		.4byte	.LASF62
 4854 031d 01       		.byte	0x1
 4855 031e 9C       		.byte	0x9c
 4856 031f D8000000 		.4byte	0xd8
 4857 0323 02       		.uleb128 0x2
 4858 0324 91       		.byte	0x91
 4859 0325 68       		.sleb128 -24
 4860 0326 14       		.uleb128 0x14
 4861 0327 D6030000 		.4byte	.LASF63
 4862 032b 01       		.byte	0x1
 4863 032c 9C       		.byte	0x9c
 4864 032d D8000000 		.4byte	0xd8
 4865 0331 02       		.uleb128 0x2
 4866 0332 91       		.byte	0x91
 4867 0333 60       		.sleb128 -32
 4868 0334 0D       		.uleb128 0xd
 4869 0335 E2010000 		.4byte	.LASF64
 4870 0339 01       		.byte	0x1
 4871 033a B1       		.byte	0xb1
 4872 033b C5000000 		.4byte	0xc5
 4873 033f 02       		.uleb128 0x2
 4874 0340 91       		.byte	0x91
 4875 0341 76       		.sleb128 -10
 4876 0342 0D       		.uleb128 0xd
 4877 0343 09050000 		.4byte	.LASF65
 4878 0347 01       		.byte	0x1
 4879 0348 B2       		.byte	0xb2
 4880 0349 C5000000 		.4byte	0xc5
 4881 034d 02       		.uleb128 0x2
 4882 034e 91       		.byte	0x91
 4883 034f 74       		.sleb128 -12
 4884 0350 00       		.byte	0
 4885 0351 15       		.uleb128 0x15
 4886 0352 69070000 		.4byte	.LASF66
 4887 0356 01       		.byte	0x1
 4888 0357 B8       		.byte	0xb8
 4889 0358 00000000 		.4byte	.LFB68
 4890 035c 18000000 		.4byte	.LFE68-.LFB68
 4891 0360 01       		.uleb128 0x1
 4892 0361 9C       		.byte	0x9c
 4893 0362 15       		.uleb128 0x15
 4894 0363 96080000 		.4byte	.LASF67
 4895 0367 01       		.byte	0x1
 4896 0368 BE       		.byte	0xbe
 4897 0369 00000000 		.4byte	.LFB69
 4898 036d 18000000 		.4byte	.LFE69-.LFB69
 4899 0371 01       		.uleb128 0x1
 4900 0372 9C       		.byte	0x9c
 4901 0373 15       		.uleb128 0x15
 4902 0374 00070000 		.4byte	.LASF68
 4903 0378 01       		.byte	0x1
 4904 0379 C4       		.byte	0xc4
 4905 037a 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 104


 4906 037e 22000000 		.4byte	.LFE70-.LFB70
 4907 0382 01       		.uleb128 0x1
 4908 0383 9C       		.byte	0x9c
 4909 0384 15       		.uleb128 0x15
 4910 0385 ED010000 		.4byte	.LASF69
 4911 0389 01       		.byte	0x1
 4912 038a CA       		.byte	0xca
 4913 038b 00000000 		.4byte	.LFB71
 4914 038f 1C000000 		.4byte	.LFE71-.LFB71
 4915 0393 01       		.uleb128 0x1
 4916 0394 9C       		.byte	0x9c
 4917 0395 15       		.uleb128 0x15
 4918 0396 75060000 		.4byte	.LASF70
 4919 039a 01       		.byte	0x1
 4920 039b CF       		.byte	0xcf
 4921 039c 00000000 		.4byte	.LFB72
 4922 03a0 28000000 		.4byte	.LFE72-.LFB72
 4923 03a4 01       		.uleb128 0x1
 4924 03a5 9C       		.byte	0x9c
 4925 03a6 15       		.uleb128 0x15
 4926 03a7 FB010000 		.4byte	.LASF71
 4927 03ab 01       		.byte	0x1
 4928 03ac D4       		.byte	0xd4
 4929 03ad 00000000 		.4byte	.LFB73
 4930 03b1 2C000000 		.4byte	.LFE73-.LFB73
 4931 03b5 01       		.uleb128 0x1
 4932 03b6 9C       		.byte	0x9c
 4933 03b7 15       		.uleb128 0x15
 4934 03b8 73020000 		.4byte	.LASF72
 4935 03bc 01       		.byte	0x1
 4936 03bd D9       		.byte	0xd9
 4937 03be 00000000 		.4byte	.LFB74
 4938 03c2 38000000 		.4byte	.LFE74-.LFB74
 4939 03c6 01       		.uleb128 0x1
 4940 03c7 9C       		.byte	0x9c
 4941 03c8 15       		.uleb128 0x15
 4942 03c9 F9050000 		.4byte	.LASF73
 4943 03cd 01       		.byte	0x1
 4944 03ce E2       		.byte	0xe2
 4945 03cf 00000000 		.4byte	.LFB75
 4946 03d3 38000000 		.4byte	.LFE75-.LFB75
 4947 03d7 01       		.uleb128 0x1
 4948 03d8 9C       		.byte	0x9c
 4949 03d9 15       		.uleb128 0x15
 4950 03da 81010000 		.4byte	.LASF74
 4951 03de 01       		.byte	0x1
 4952 03df EB       		.byte	0xeb
 4953 03e0 00000000 		.4byte	.LFB76
 4954 03e4 14000000 		.4byte	.LFE76-.LFB76
 4955 03e8 01       		.uleb128 0x1
 4956 03e9 9C       		.byte	0x9c
 4957 03ea 16       		.uleb128 0x16
 4958 03eb 89020000 		.4byte	.LASF75
 4959 03ef 01       		.byte	0x1
 4960 03f0 F0       		.byte	0xf0
 4961 03f1 00000000 		.4byte	.LFB77
 4962 03f5 18000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 105


 4963 03f9 01       		.uleb128 0x1
 4964 03fa 9C       		.byte	0x9c
 4965 03fb 16       		.uleb128 0x16
 4966 03fc 11040000 		.4byte	.LASF76
 4967 0400 01       		.byte	0x1
 4968 0401 F4       		.byte	0xf4
 4969 0402 00000000 		.4byte	.LFB78
 4970 0406 18000000 		.4byte	.LFE78-.LFB78
 4971 040a 01       		.uleb128 0x1
 4972 040b 9C       		.byte	0x9c
 4973 040c 16       		.uleb128 0x16
 4974 040d A1080000 		.4byte	.LASF77
 4975 0411 01       		.byte	0x1
 4976 0412 F9       		.byte	0xf9
 4977 0413 00000000 		.4byte	.LFB79
 4978 0417 18000000 		.4byte	.LFE79-.LFB79
 4979 041b 01       		.uleb128 0x1
 4980 041c 9C       		.byte	0x9c
 4981 041d 16       		.uleb128 0x16
 4982 041e 0E030000 		.4byte	.LASF78
 4983 0422 01       		.byte	0x1
 4984 0423 FD       		.byte	0xfd
 4985 0424 00000000 		.4byte	.LFB80
 4986 0428 18000000 		.4byte	.LFE80-.LFB80
 4987 042c 01       		.uleb128 0x1
 4988 042d 9C       		.byte	0x9c
 4989 042e 17       		.uleb128 0x17
 4990 042f 7D050000 		.4byte	.LASF79
 4991 0433 01       		.byte	0x1
 4992 0434 0401     		.2byte	0x104
 4993 0436 00000000 		.4byte	.LFB81
 4994 043a B8000000 		.4byte	.LFE81-.LFB81
 4995 043e 01       		.uleb128 0x1
 4996 043f 9C       		.byte	0x9c
 4997 0440 54040000 		.4byte	0x454
 4998 0444 18       		.uleb128 0x18
 4999 0445 C3040000 		.4byte	.LASF80
 5000 0449 01       		.byte	0x1
 5001 044a 0501     		.2byte	0x105
 5002 044c 83000000 		.4byte	0x83
 5003 0450 02       		.uleb128 0x2
 5004 0451 91       		.byte	0x91
 5005 0452 6F       		.sleb128 -17
 5006 0453 00       		.byte	0
 5007 0454 17       		.uleb128 0x17
 5008 0455 68050000 		.4byte	.LASF81
 5009 0459 01       		.byte	0x1
 5010 045a 2101     		.2byte	0x121
 5011 045c 00000000 		.4byte	.LFB82
 5012 0460 88010000 		.4byte	.LFE82-.LFB82
 5013 0464 01       		.uleb128 0x1
 5014 0465 9C       		.byte	0x9c
 5015 0466 93040000 		.4byte	0x493
 5016 046a 18       		.uleb128 0x18
 5017 046b C3040000 		.4byte	.LASF80
 5018 046f 01       		.byte	0x1
 5019 0470 2301     		.2byte	0x123
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 106


 5020 0472 83000000 		.4byte	0x83
 5021 0476 02       		.uleb128 0x2
 5022 0477 91       		.byte	0x91
 5023 0478 77       		.sleb128 -9
 5024 0479 0C       		.uleb128 0xc
 5025 047a 88000000 		.4byte	.LBB3
 5026 047e DC000000 		.4byte	.LBE3-.LBB3
 5027 0482 19       		.uleb128 0x19
 5028 0483 6D657300 		.ascii	"mes\000"
 5029 0487 01       		.byte	0x1
 5030 0488 4901     		.2byte	0x149
 5031 048a F3020000 		.4byte	0x2f3
 5032 048e 02       		.uleb128 0x2
 5033 048f 91       		.byte	0x91
 5034 0490 64       		.sleb128 -28
 5035 0491 00       		.byte	0
 5036 0492 00       		.byte	0
 5037 0493 1A       		.uleb128 0x1a
 5038 0494 FA070000 		.4byte	.LASF82
 5039 0498 01       		.byte	0x1
 5040 0499 5E01     		.2byte	0x15e
 5041 049b 00000000 		.4byte	.LFB83
 5042 049f 0C000000 		.4byte	.LFE83-.LFB83
 5043 04a3 01       		.uleb128 0x1
 5044 04a4 9C       		.byte	0x9c
 5045 04a5 1B       		.uleb128 0x1b
 5046 04a6 87060000 		.4byte	.LASF83
 5047 04aa 01       		.byte	0x1
 5048 04ab 6401     		.2byte	0x164
 5049 04ad 00000000 		.4byte	.LFB84
 5050 04b1 2C000000 		.4byte	.LFE84-.LFB84
 5051 04b5 01       		.uleb128 0x1
 5052 04b6 9C       		.byte	0x9c
 5053 04b7 17       		.uleb128 0x17
 5054 04b8 9A010000 		.4byte	.LASF84
 5055 04bc 01       		.byte	0x1
 5056 04bd 6D01     		.2byte	0x16d
 5057 04bf 00000000 		.4byte	.LFB85
 5058 04c3 E4010000 		.4byte	.LFE85-.LFB85
 5059 04c7 01       		.uleb128 0x1
 5060 04c8 9C       		.byte	0x9c
 5061 04c9 04050000 		.4byte	0x504
 5062 04cd 1C       		.uleb128 0x1c
 5063 04ce AC000000 		.4byte	.LBB4
 5064 04d2 52000000 		.4byte	.LBE4-.LBB4
 5065 04d6 EA040000 		.4byte	0x4ea
 5066 04da 19       		.uleb128 0x19
 5067 04db 6D657300 		.ascii	"mes\000"
 5068 04df 01       		.byte	0x1
 5069 04e0 8401     		.2byte	0x184
 5070 04e2 F3020000 		.4byte	0x2f3
 5071 04e6 02       		.uleb128 0x2
 5072 04e7 91       		.byte	0x91
 5073 04e8 58       		.sleb128 -40
 5074 04e9 00       		.byte	0
 5075 04ea 0C       		.uleb128 0xc
 5076 04eb 0A010000 		.4byte	.LBB5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 107


 5077 04ef 90000000 		.4byte	.LBE5-.LBB5
 5078 04f3 18       		.uleb128 0x18
 5079 04f4 0D080000 		.4byte	.LASF85
 5080 04f8 01       		.byte	0x1
 5081 04f9 8F01     		.2byte	0x18f
 5082 04fb D8000000 		.4byte	0xd8
 5083 04ff 02       		.uleb128 0x2
 5084 0500 91       		.byte	0x91
 5085 0501 68       		.sleb128 -24
 5086 0502 00       		.byte	0
 5087 0503 00       		.byte	0
 5088 0504 1B       		.uleb128 0x1b
 5089 0505 59020000 		.4byte	.LASF86
 5090 0509 01       		.byte	0x1
 5091 050a 9901     		.2byte	0x199
 5092 050c 00000000 		.4byte	.LFB86
 5093 0510 78000000 		.4byte	.LFE86-.LFB86
 5094 0514 01       		.uleb128 0x1
 5095 0515 9C       		.byte	0x9c
 5096 0516 1A       		.uleb128 0x1a
 5097 0517 24070000 		.4byte	.LASF87
 5098 051b 01       		.byte	0x1
 5099 051c B201     		.2byte	0x1b2
 5100 051e 00000000 		.4byte	.LFB87
 5101 0522 20000000 		.4byte	.LFE87-.LFB87
 5102 0526 01       		.uleb128 0x1
 5103 0527 9C       		.byte	0x9c
 5104 0528 1B       		.uleb128 0x1b
 5105 0529 D0020000 		.4byte	.LASF88
 5106 052d 01       		.byte	0x1
 5107 052e B901     		.2byte	0x1b9
 5108 0530 00000000 		.4byte	.LFB88
 5109 0534 28000000 		.4byte	.LFE88-.LFB88
 5110 0538 01       		.uleb128 0x1
 5111 0539 9C       		.byte	0x9c
 5112 053a 1B       		.uleb128 0x1b
 5113 053b 9A000000 		.4byte	.LASF89
 5114 053f 01       		.byte	0x1
 5115 0540 C201     		.2byte	0x1c2
 5116 0542 00000000 		.4byte	.LFB89
 5117 0546 0A000000 		.4byte	.LFE89-.LFB89
 5118 054a 01       		.uleb128 0x1
 5119 054b 9C       		.byte	0x9c
 5120 054c 1D       		.uleb128 0x1d
 5121 054d 68020000 		.4byte	.LASF90
 5122 0551 01       		.byte	0x1
 5123 0552 C801     		.2byte	0x1c8
 5124 0554 00000000 		.4byte	.LFB90
 5125 0558 40000000 		.4byte	.LFE90-.LFB90
 5126 055c 01       		.uleb128 0x1
 5127 055d 9C       		.byte	0x9c
 5128 055e 1D       		.uleb128 0x1d
 5129 055f D7010000 		.4byte	.LASF91
 5130 0563 01       		.byte	0x1
 5131 0564 D701     		.2byte	0x1d7
 5132 0566 00000000 		.4byte	.LFB91
 5133 056a 40000000 		.4byte	.LFE91-.LFB91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 108


 5134 056e 01       		.uleb128 0x1
 5135 056f 9C       		.byte	0x9c
 5136 0570 1E       		.uleb128 0x1e
 5137 0571 30000000 		.4byte	.LASF92
 5138 0575 01       		.byte	0x1
 5139 0576 E701     		.2byte	0x1e7
 5140 0578 00000000 		.4byte	.LFB92
 5141 057c 30020000 		.4byte	.LFE92-.LFB92
 5142 0580 01       		.uleb128 0x1
 5143 0581 9C       		.byte	0x9c
 5144 0582 E1050000 		.4byte	0x5e1
 5145 0586 18       		.uleb128 0x18
 5146 0587 B0020000 		.4byte	.LASF93
 5147 058b 01       		.byte	0x1
 5148 058c F501     		.2byte	0x1f5
 5149 058e C5000000 		.4byte	0xc5
 5150 0592 02       		.uleb128 0x2
 5151 0593 91       		.byte	0x91
 5152 0594 5E       		.sleb128 -34
 5153 0595 18       		.uleb128 0x18
 5154 0596 E1040000 		.4byte	.LASF94
 5155 059a 01       		.byte	0x1
 5156 059b F601     		.2byte	0x1f6
 5157 059d C5000000 		.4byte	0xc5
 5158 05a1 02       		.uleb128 0x2
 5159 05a2 91       		.byte	0x91
 5160 05a3 5C       		.sleb128 -36
 5161 05a4 18       		.uleb128 0x18
 5162 05a5 3D030000 		.4byte	.LASF95
 5163 05a9 01       		.byte	0x1
 5164 05aa F701     		.2byte	0x1f7
 5165 05ac D8000000 		.4byte	0xd8
 5166 05b0 02       		.uleb128 0x2
 5167 05b1 91       		.byte	0x91
 5168 05b2 68       		.sleb128 -24
 5169 05b3 18       		.uleb128 0x18
 5170 05b4 5A080000 		.4byte	.LASF96
 5171 05b8 01       		.byte	0x1
 5172 05b9 F801     		.2byte	0x1f8
 5173 05bb D8000000 		.4byte	0xd8
 5174 05bf 02       		.uleb128 0x2
 5175 05c0 91       		.byte	0x91
 5176 05c1 60       		.sleb128 -32
 5177 05c2 18       		.uleb128 0x18
 5178 05c3 C1030000 		.4byte	.LASF97
 5179 05c7 01       		.byte	0x1
 5180 05c8 0102     		.2byte	0x201
 5181 05ca 68000000 		.4byte	0x68
 5182 05ce 02       		.uleb128 0x2
 5183 05cf 91       		.byte	0x91
 5184 05d0 58       		.sleb128 -40
 5185 05d1 18       		.uleb128 0x18
 5186 05d2 03080000 		.4byte	.LASF98
 5187 05d6 01       		.byte	0x1
 5188 05d7 0202     		.2byte	0x202
 5189 05d9 68000000 		.4byte	0x68
 5190 05dd 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 109


 5191 05de 91       		.byte	0x91
 5192 05df 54       		.sleb128 -44
 5193 05e0 00       		.byte	0
 5194 05e1 1E       		.uleb128 0x1e
 5195 05e2 38050000 		.4byte	.LASF99
 5196 05e6 01       		.byte	0x1
 5197 05e7 1002     		.2byte	0x210
 5198 05e9 00000000 		.4byte	.LFB93
 5199 05ed 50010000 		.4byte	.LFE93-.LFB93
 5200 05f1 01       		.uleb128 0x1
 5201 05f2 9C       		.byte	0x9c
 5202 05f3 23060000 		.4byte	0x623
 5203 05f7 19       		.uleb128 0x19
 5204 05f8 6E6C00   		.ascii	"nl\000"
 5205 05fb 01       		.byte	0x1
 5206 05fc 1402     		.2byte	0x214
 5207 05fe 95000000 		.4byte	0x95
 5208 0602 02       		.uleb128 0x2
 5209 0603 91       		.byte	0x91
 5210 0604 67       		.sleb128 -25
 5211 0605 19       		.uleb128 0x19
 5212 0606 6E7200   		.ascii	"nr\000"
 5213 0609 01       		.byte	0x1
 5214 060a 1502     		.2byte	0x215
 5215 060c 95000000 		.4byte	0x95
 5216 0610 02       		.uleb128 0x2
 5217 0611 91       		.byte	0x91
 5218 0612 66       		.sleb128 -26
 5219 0613 19       		.uleb128 0x19
 5220 0614 6D696400 		.ascii	"mid\000"
 5221 0618 01       		.byte	0x1
 5222 0619 1602     		.2byte	0x216
 5223 061b 95000000 		.4byte	0x95
 5224 061f 02       		.uleb128 0x2
 5225 0620 91       		.byte	0x91
 5226 0621 65       		.sleb128 -27
 5227 0622 00       		.byte	0
 5228 0623 1E       		.uleb128 0x1e
 5229 0624 1F010000 		.4byte	.LASF100
 5230 0628 01       		.byte	0x1
 5231 0629 3202     		.2byte	0x232
 5232 062b 00000000 		.4byte	.LFB94
 5233 062f 50010000 		.4byte	.LFE94-.LFB94
 5234 0633 01       		.uleb128 0x1
 5235 0634 9C       		.byte	0x9c
 5236 0635 65060000 		.4byte	0x665
 5237 0639 19       		.uleb128 0x19
 5238 063a 6E6C00   		.ascii	"nl\000"
 5239 063d 01       		.byte	0x1
 5240 063e 3602     		.2byte	0x236
 5241 0640 95000000 		.4byte	0x95
 5242 0644 02       		.uleb128 0x2
 5243 0645 91       		.byte	0x91
 5244 0646 67       		.sleb128 -25
 5245 0647 19       		.uleb128 0x19
 5246 0648 6E7200   		.ascii	"nr\000"
 5247 064b 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 110


 5248 064c 3702     		.2byte	0x237
 5249 064e 95000000 		.4byte	0x95
 5250 0652 02       		.uleb128 0x2
 5251 0653 91       		.byte	0x91
 5252 0654 66       		.sleb128 -26
 5253 0655 19       		.uleb128 0x19
 5254 0656 6D696400 		.ascii	"mid\000"
 5255 065a 01       		.byte	0x1
 5256 065b 3802     		.2byte	0x238
 5257 065d 95000000 		.4byte	0x95
 5258 0661 02       		.uleb128 0x2
 5259 0662 91       		.byte	0x91
 5260 0663 65       		.sleb128 -27
 5261 0664 00       		.byte	0
 5262 0665 1E       		.uleb128 0x1e
 5263 0666 14010000 		.4byte	.LASF101
 5264 066a 01       		.byte	0x1
 5265 066b 5402     		.2byte	0x254
 5266 066d 00000000 		.4byte	.LFB95
 5267 0671 B0010000 		.4byte	.LFE95-.LFB95
 5268 0675 01       		.uleb128 0x1
 5269 0676 9C       		.byte	0x9c
 5270 0677 C3060000 		.4byte	0x6c3
 5271 067b 19       		.uleb128 0x19
 5272 067c 6E6C00   		.ascii	"nl\000"
 5273 067f 01       		.byte	0x1
 5274 0680 5802     		.2byte	0x258
 5275 0682 95000000 		.4byte	0x95
 5276 0686 02       		.uleb128 0x2
 5277 0687 91       		.byte	0x91
 5278 0688 67       		.sleb128 -25
 5279 0689 19       		.uleb128 0x19
 5280 068a 666C00   		.ascii	"fl\000"
 5281 068d 01       		.byte	0x1
 5282 068e 5902     		.2byte	0x259
 5283 0690 95000000 		.4byte	0x95
 5284 0694 02       		.uleb128 0x2
 5285 0695 91       		.byte	0x91
 5286 0696 66       		.sleb128 -26
 5287 0697 19       		.uleb128 0x19
 5288 0698 6E7200   		.ascii	"nr\000"
 5289 069b 01       		.byte	0x1
 5290 069c 5A02     		.2byte	0x25a
 5291 069e 95000000 		.4byte	0x95
 5292 06a2 02       		.uleb128 0x2
 5293 06a3 91       		.byte	0x91
 5294 06a4 65       		.sleb128 -27
 5295 06a5 19       		.uleb128 0x19
 5296 06a6 667200   		.ascii	"fr\000"
 5297 06a9 01       		.byte	0x1
 5298 06aa 5B02     		.2byte	0x25b
 5299 06ac 95000000 		.4byte	0x95
 5300 06b0 02       		.uleb128 0x2
 5301 06b1 91       		.byte	0x91
 5302 06b2 64       		.sleb128 -28
 5303 06b3 19       		.uleb128 0x19
 5304 06b4 6D696400 		.ascii	"mid\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 111


 5305 06b8 01       		.byte	0x1
 5306 06b9 5C02     		.2byte	0x25c
 5307 06bb 95000000 		.4byte	0x95
 5308 06bf 02       		.uleb128 0x2
 5309 06c0 91       		.byte	0x91
 5310 06c1 63       		.sleb128 -29
 5311 06c2 00       		.byte	0
 5312 06c3 1E       		.uleb128 0x1e
 5313 06c4 33030000 		.4byte	.LASF102
 5314 06c8 01       		.byte	0x1
 5315 06c9 8502     		.2byte	0x285
 5316 06cb 00000000 		.4byte	.LFB96
 5317 06cf C0000000 		.4byte	.LFE96-.LFB96
 5318 06d3 01       		.uleb128 0x1
 5319 06d4 9C       		.byte	0x9c
 5320 06d5 11070000 		.4byte	0x711
 5321 06d9 0C       		.uleb128 0xc
 5322 06da 0E000000 		.4byte	.LBB6
 5323 06de 8E000000 		.4byte	.LBE6-.LBB6
 5324 06e2 18       		.uleb128 0x18
 5325 06e3 A2020000 		.4byte	.LASF103
 5326 06e7 01       		.byte	0x1
 5327 06e8 8E02     		.2byte	0x28e
 5328 06ea D1000000 		.4byte	0xd1
 5329 06ee 02       		.uleb128 0x2
 5330 06ef 91       		.byte	0x91
 5331 06f0 74       		.sleb128 -12
 5332 06f1 18       		.uleb128 0x18
 5333 06f2 1F050000 		.4byte	.LASF104
 5334 06f6 01       		.byte	0x1
 5335 06f7 8F02     		.2byte	0x28f
 5336 06f9 C5000000 		.4byte	0xc5
 5337 06fd 02       		.uleb128 0x2
 5338 06fe 91       		.byte	0x91
 5339 06ff 72       		.sleb128 -14
 5340 0700 18       		.uleb128 0x18
 5341 0701 F6020000 		.4byte	.LASF105
 5342 0705 01       		.byte	0x1
 5343 0706 9402     		.2byte	0x294
 5344 0708 F3020000 		.4byte	0x2f3
 5345 070c 02       		.uleb128 0x2
 5346 070d 91       		.byte	0x91
 5347 070e 60       		.sleb128 -32
 5348 070f 00       		.byte	0
 5349 0710 00       		.byte	0
 5350 0711 1E       		.uleb128 0x1e
 5351 0712 49080000 		.4byte	.LASF106
 5352 0716 01       		.byte	0x1
 5353 0717 9B02     		.2byte	0x29b
 5354 0719 00000000 		.4byte	.LFB97
 5355 071d B8000000 		.4byte	.LFE97-.LFB97
 5356 0721 01       		.uleb128 0x1
 5357 0722 9C       		.byte	0x9c
 5358 0723 41070000 		.4byte	0x741
 5359 0727 0C       		.uleb128 0xc
 5360 0728 0E000000 		.4byte	.LBB7
 5361 072c 86000000 		.4byte	.LBE7-.LBB7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 112


 5362 0730 18       		.uleb128 0x18
 5363 0731 1C060000 		.4byte	.LASF107
 5364 0735 01       		.byte	0x1
 5365 0736 9F02     		.2byte	0x29f
 5366 0738 F3020000 		.4byte	0x2f3
 5367 073c 02       		.uleb128 0x2
 5368 073d 91       		.byte	0x91
 5369 073e 68       		.sleb128 -24
 5370 073f 00       		.byte	0
 5371 0740 00       		.byte	0
 5372 0741 17       		.uleb128 0x17
 5373 0742 8F060000 		.4byte	.LASF108
 5374 0746 01       		.byte	0x1
 5375 0747 B002     		.2byte	0x2b0
 5376 0749 00000000 		.4byte	.LFB98
 5377 074d 4A000000 		.4byte	.LFE98-.LFB98
 5378 0751 01       		.uleb128 0x1
 5379 0752 9C       		.byte	0x9c
 5380 0753 67070000 		.4byte	0x767
 5381 0757 1F       		.uleb128 0x1f
 5382 0758 EB020000 		.4byte	.LASF109
 5383 075c 01       		.byte	0x1
 5384 075d B002     		.2byte	0x2b0
 5385 075f 67070000 		.4byte	0x767
 5386 0763 02       		.uleb128 0x2
 5387 0764 91       		.byte	0x91
 5388 0765 6C       		.sleb128 -20
 5389 0766 00       		.byte	0
 5390 0767 05       		.uleb128 0x5
 5391 0768 04       		.byte	0x4
 5392 0769 95000000 		.4byte	0x95
 5393 076d 20       		.uleb128 0x20
 5394 076e F5070000 		.4byte	.LASF110
 5395 0772 01       		.byte	0x1
 5396 0773 B902     		.2byte	0x2b9
 5397 0775 68000000 		.4byte	0x68
 5398 0779 00000000 		.4byte	.LFB99
 5399 077d 18020000 		.4byte	.LFE99-.LFB99
 5400 0781 01       		.uleb128 0x1
 5401 0782 9C       		.byte	0x9c
 5402 0783 BA070000 		.4byte	0x7ba
 5403 0787 0C       		.uleb128 0xc
 5404 0788 5C000000 		.4byte	.LBB8
 5405 078c 80010000 		.4byte	.LBE8-.LBB8
 5406 0790 18       		.uleb128 0x18
 5407 0791 27020000 		.4byte	.LASF111
 5408 0795 01       		.byte	0x1
 5409 0796 FE02     		.2byte	0x2fe
 5410 0798 BA070000 		.4byte	0x7ba
 5411 079c 02       		.uleb128 0x2
 5412 079d 91       		.byte	0x91
 5413 079e 70       		.sleb128 -16
 5414 079f 0C       		.uleb128 0xc
 5415 07a0 16010000 		.4byte	.LBB9
 5416 07a4 6E000000 		.4byte	.LBE9-.LBB9
 5417 07a8 18       		.uleb128 0x18
 5418 07a9 1B040000 		.4byte	.LASF112
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 113


 5419 07ad 01       		.byte	0x1
 5420 07ae 2703     		.2byte	0x327
 5421 07b0 83000000 		.4byte	0x83
 5422 07b4 02       		.uleb128 0x2
 5423 07b5 91       		.byte	0x91
 5424 07b6 77       		.sleb128 -9
 5425 07b7 00       		.byte	0
 5426 07b8 00       		.byte	0
 5427 07b9 00       		.byte	0
 5428 07ba 0E       		.uleb128 0xe
 5429 07bb 95000000 		.4byte	0x95
 5430 07bf CA070000 		.4byte	0x7ca
 5431 07c3 0F       		.uleb128 0xf
 5432 07c4 76000000 		.4byte	0x76
 5433 07c8 04       		.byte	0x4
 5434 07c9 00       		.byte	0
 5435 07ca 17       		.uleb128 0x17
 5436 07cb 68060000 		.4byte	.LASF113
 5437 07cf 01       		.byte	0x1
 5438 07d0 6403     		.2byte	0x364
 5439 07d2 00000000 		.4byte	.LFB100
 5440 07d6 68000000 		.4byte	.LFE100-.LFB100
 5441 07da 01       		.uleb128 0x1
 5442 07db 9C       		.byte	0x9c
 5443 07dc 07080000 		.4byte	0x807
 5444 07e0 21       		.uleb128 0x21
 5445 07e1 7300     		.ascii	"s\000"
 5446 07e3 01       		.byte	0x1
 5447 07e4 6403     		.2byte	0x364
 5448 07e6 7D000000 		.4byte	0x7d
 5449 07ea 02       		.uleb128 0x2
 5450 07eb 91       		.byte	0x91
 5451 07ec 6C       		.sleb128 -20
 5452 07ed 0C       		.uleb128 0xc
 5453 07ee 10000000 		.4byte	.LBB10
 5454 07f2 48000000 		.4byte	.LBE10-.LBB10
 5455 07f6 19       		.uleb128 0x19
 5456 07f7 636E7400 		.ascii	"cnt\000"
 5457 07fb 01       		.byte	0x1
 5458 07fc 6B03     		.2byte	0x36b
 5459 07fe AD000000 		.4byte	0xad
 5460 0802 02       		.uleb128 0x2
 5461 0803 91       		.byte	0x91
 5462 0804 74       		.sleb128 -12
 5463 0805 00       		.byte	0
 5464 0806 00       		.byte	0
 5465 0807 17       		.uleb128 0x17
 5466 0808 AF070000 		.4byte	.LASF114
 5467 080c 01       		.byte	0x1
 5468 080d 7A03     		.2byte	0x37a
 5469 080f 00000000 		.4byte	.LFB101
 5470 0813 50000000 		.4byte	.LFE101-.LFB101
 5471 0817 01       		.uleb128 0x1
 5472 0818 9C       		.byte	0x9c
 5473 0819 44080000 		.4byte	0x844
 5474 081d 21       		.uleb128 0x21
 5475 081e 6300     		.ascii	"c\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 114


 5476 0820 01       		.byte	0x1
 5477 0821 7A03     		.2byte	0x37a
 5478 0823 83000000 		.4byte	0x83
 5479 0827 02       		.uleb128 0x2
 5480 0828 91       		.byte	0x91
 5481 0829 6F       		.sleb128 -17
 5482 082a 0C       		.uleb128 0xc
 5483 082b 12000000 		.4byte	.LBB11
 5484 082f 2E000000 		.4byte	.LBE11-.LBB11
 5485 0833 19       		.uleb128 0x19
 5486 0834 636E7400 		.ascii	"cnt\000"
 5487 0838 01       		.byte	0x1
 5488 0839 7E03     		.2byte	0x37e
 5489 083b AD000000 		.4byte	0xad
 5490 083f 02       		.uleb128 0x2
 5491 0840 91       		.byte	0x91
 5492 0841 74       		.sleb128 -12
 5493 0842 00       		.byte	0
 5494 0843 00       		.byte	0
 5495 0844 1E       		.uleb128 0x1e
 5496 0845 01030000 		.4byte	.LASF115
 5497 0849 01       		.byte	0x1
 5498 084a 8B03     		.2byte	0x38b
 5499 084c 00000000 		.4byte	.LFB102
 5500 0850 3A000000 		.4byte	.LFE102-.LFB102
 5501 0854 01       		.uleb128 0x1
 5502 0855 9C       		.byte	0x9c
 5503 0856 68080000 		.4byte	0x868
 5504 085a 19       		.uleb128 0x19
 5505 085b 6300     		.ascii	"c\000"
 5506 085d 01       		.byte	0x1
 5507 085e 8D03     		.2byte	0x38d
 5508 0860 95000000 		.4byte	0x95
 5509 0864 02       		.uleb128 0x2
 5510 0865 91       		.byte	0x91
 5511 0866 77       		.sleb128 -9
 5512 0867 00       		.byte	0
 5513 0868 22       		.uleb128 0x22
 5514 0869 0F060000 		.4byte	.LASF116
 5515 086d 06       		.byte	0x6
 5516 086e 9606     		.2byte	0x696
 5517 0870 74080000 		.4byte	0x874
 5518 0874 23       		.uleb128 0x23
 5519 0875 8A000000 		.4byte	0x8a
 5520 0879 24       		.uleb128 0x24
 5521 087a 747300   		.ascii	"ts\000"
 5522 087d 05       		.byte	0x5
 5523 087e 10       		.byte	0x10
 5524 087f 95000000 		.4byte	0x95
 5525 0883 05       		.uleb128 0x5
 5526 0884 03       		.byte	0x3
 5527 0885 00000000 		.4byte	ts
 5528 0889 25       		.uleb128 0x25
 5529 088a 31070000 		.4byte	.LASF117
 5530 088e 05       		.byte	0x5
 5531 088f 11       		.byte	0x11
 5532 0890 A1000000 		.4byte	0xa1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 115


 5533 0894 05       		.uleb128 0x5
 5534 0895 03       		.byte	0x3
 5535 0896 00000000 		.4byte	ts_enc
 5536 089a 25       		.uleb128 0x25
 5537 089b 28060000 		.4byte	.LASF118
 5538 089f 05       		.byte	0x5
 5539 08a0 12       		.byte	0x12
 5540 08a1 A1000000 		.4byte	0xa1
 5541 08a5 05       		.uleb128 0x5
 5542 08a6 03       		.byte	0x3
 5543 08a7 00000000 		.4byte	ts_update
 5544 08ab 25       		.uleb128 0x25
 5545 08ac EC040000 		.4byte	.LASF119
 5546 08b0 05       		.byte	0x5
 5547 08b1 13       		.byte	0x13
 5548 08b2 A1000000 		.4byte	0xa1
 5549 08b6 05       		.uleb128 0x5
 5550 08b7 03       		.byte	0x3
 5551 08b8 00000000 		.4byte	ts_speed
 5552 08bc 25       		.uleb128 0x25
 5553 08bd 28030000 		.4byte	.LASF120
 5554 08c1 05       		.byte	0x5
 5555 08c2 14       		.byte	0x14
 5556 08c3 A1000000 		.4byte	0xa1
 5557 08c7 05       		.uleb128 0x5
 5558 08c8 03       		.byte	0x3
 5559 08c9 00000000 		.4byte	ts_display
 5560 08cd 25       		.uleb128 0x25
 5561 08ce BA020000 		.4byte	.LASF121
 5562 08d2 05       		.byte	0x5
 5563 08d3 16       		.byte	0x16
 5564 08d4 95000000 		.4byte	0x95
 5565 08d8 05       		.uleb128 0x5
 5566 08d9 03       		.byte	0x3
 5567 08da 00000000 		.4byte	flag_ts_enc
 5568 08de 25       		.uleb128 0x25
 5569 08df 93020000 		.4byte	.LASF122
 5570 08e3 05       		.byte	0x5
 5571 08e4 17       		.byte	0x17
 5572 08e5 95000000 		.4byte	0x95
 5573 08e9 05       		.uleb128 0x5
 5574 08ea 03       		.byte	0x3
 5575 08eb 00000000 		.4byte	flag_ts_update
 5576 08ef 25       		.uleb128 0x25
 5577 08f0 93050000 		.4byte	.LASF123
 5578 08f4 05       		.byte	0x5
 5579 08f5 18       		.byte	0x18
 5580 08f6 95000000 		.4byte	0x95
 5581 08fa 05       		.uleb128 0x5
 5582 08fb 03       		.byte	0x3
 5583 08fc 00000000 		.4byte	flag_ts_speed
 5584 0900 25       		.uleb128 0x25
 5585 0901 42070000 		.4byte	.LASF124
 5586 0905 05       		.byte	0x5
 5587 0906 19       		.byte	0x19
 5588 0907 95000000 		.4byte	0x95
 5589 090b 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 116


 5590 090c 03       		.byte	0x3
 5591 090d 00000000 		.4byte	flag_ts_display
 5592 0911 25       		.uleb128 0x25
 5593 0912 BE050000 		.4byte	.LASF125
 5594 0916 05       		.byte	0x5
 5595 0917 1C       		.byte	0x1c
 5596 0918 95000000 		.4byte	0x95
 5597 091c 05       		.uleb128 0x5
 5598 091d 03       		.byte	0x3
 5599 091e 00000000 		.4byte	flag_rx
 5600 0922 25       		.uleb128 0x25
 5601 0923 1B020000 		.4byte	.LASF126
 5602 0927 05       		.byte	0x5
 5603 0928 1D       		.byte	0x1d
 5604 0929 95000000 		.4byte	0x95
 5605 092d 05       		.uleb128 0x5
 5606 092e 03       		.byte	0x3
 5607 092f 00000000 		.4byte	flag_packet
 5608 0933 25       		.uleb128 0x25
 5609 0934 67080000 		.4byte	.LASF127
 5610 0938 05       		.byte	0x5
 5611 0939 1E       		.byte	0x1e
 5612 093a 95000000 		.4byte	0x95
 5613 093e 05       		.uleb128 0x5
 5614 093f 03       		.byte	0x3
 5615 0940 00000000 		.4byte	flag_KB_string
 5616 0944 25       		.uleb128 0x25
 5617 0945 A1050000 		.4byte	.LASF128
 5618 0949 05       		.byte	0x5
 5619 094a 20       		.byte	0x20
 5620 094b 95000000 		.4byte	0x95
 5621 094f 05       		.uleb128 0x5
 5622 0950 03       		.byte	0x3
 5623 0951 00000000 		.4byte	dataready_flag
 5624 0955 25       		.uleb128 0x25
 5625 0956 3D010000 		.4byte	.LASF129
 5626 095a 05       		.byte	0x5
 5627 095b 22       		.byte	0x22
 5628 095c 95000000 		.4byte	0x95
 5629 0960 05       		.uleb128 0x5
 5630 0961 03       		.byte	0x3
 5631 0962 00000000 		.4byte	flag_rf_transmission_active
 5632 0966 25       		.uleb128 0x25
 5633 0967 59010000 		.4byte	.LASF130
 5634 096b 05       		.byte	0x5
 5635 096c 23       		.byte	0x23
 5636 096d 95000000 		.4byte	0x95
 5637 0971 05       		.uleb128 0x5
 5638 0972 03       		.byte	0x3
 5639 0973 00000000 		.4byte	flag_print_rf
 5640 0977 25       		.uleb128 0x25
 5641 0978 4F050000 		.4byte	.LASF131
 5642 097c 05       		.byte	0x5
 5643 097d 25       		.byte	0x25
 5644 097e 95000000 		.4byte	0x95
 5645 0982 05       		.uleb128 0x5
 5646 0983 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 117


 5647 0984 00000000 		.4byte	flag_receive_ADC
 5648 0988 25       		.uleb128 0x25
 5649 0989 D0050000 		.4byte	.LASF132
 5650 098d 05       		.byte	0x5
 5651 098e 26       		.byte	0x26
 5652 098f C5000000 		.4byte	0xc5
 5653 0993 05       		.uleb128 0x5
 5654 0994 03       		.byte	0x3
 5655 0995 00000000 		.4byte	adc_result
 5656 0999 25       		.uleb128 0x25
 5657 099a 00000000 		.4byte	.LASF133
 5658 099e 05       		.byte	0x5
 5659 099f 28       		.byte	0x28
 5660 09a0 95000000 		.4byte	0x95
 5661 09a4 05       		.uleb128 0x5
 5662 09a5 03       		.byte	0x3
 5663 09a6 00000000 		.4byte	direction
 5664 09aa 25       		.uleb128 0x25
 5665 09ab D5040000 		.4byte	.LASF134
 5666 09af 05       		.byte	0x5
 5667 09b0 2B       		.byte	0x2b
 5668 09b1 95000000 		.4byte	0x95
 5669 09b5 05       		.uleb128 0x5
 5670 09b6 03       		.byte	0x3
 5671 09b7 00000000 		.4byte	BIN_ENABLED
 5672 09bb 25       		.uleb128 0x25
 5673 09bc CB030000 		.4byte	.LASF135
 5674 09c0 05       		.byte	0x5
 5675 09c1 2D       		.byte	0x2d
 5676 09c2 95000000 		.4byte	0x95
 5677 09c6 05       		.uleb128 0x5
 5678 09c7 03       		.byte	0x3
 5679 09c8 00000000 		.4byte	BT_ENABLED
 5680 09cc 25       		.uleb128 0x25
 5681 09cd DB050000 		.4byte	.LASF136
 5682 09d1 05       		.byte	0x5
 5683 09d2 32       		.byte	0x32
 5684 09d3 95000000 		.4byte	0x95
 5685 09d7 05       		.uleb128 0x5
 5686 09d8 03       		.byte	0x3
 5687 09d9 00000000 		.4byte	flag_calc_wheelspeed
 5688 09dd 25       		.uleb128 0x25
 5689 09de FC000000 		.4byte	.LASF137
 5690 09e2 05       		.byte	0x5
 5691 09e3 33       		.byte	0x33
 5692 09e4 C5000000 		.4byte	0xc5
 5693 09e8 05       		.uleb128 0x5
 5694 09e9 03       		.byte	0x3
 5695 09ea 00000000 		.4byte	quad_count1
 5696 09ee 25       		.uleb128 0x25
 5697 09ef 08010000 		.4byte	.LASF138
 5698 09f3 05       		.byte	0x5
 5699 09f4 34       		.byte	0x34
 5700 09f5 C5000000 		.4byte	0xc5
 5701 09f9 05       		.uleb128 0x5
 5702 09fa 03       		.byte	0x3
 5703 09fb 00000000 		.4byte	quad_count2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 118


 5704 09ff 25       		.uleb128 0x25
 5705 0a00 81070000 		.4byte	.LASF139
 5706 0a04 05       		.byte	0x5
 5707 0a05 35       		.byte	0x35
 5708 0a06 C5000000 		.4byte	0xc5
 5709 0a0a 05       		.uleb128 0x5
 5710 0a0b 03       		.byte	0x3
 5711 0a0c 00000000 		.4byte	last_quad_count1
 5712 0a10 25       		.uleb128 0x25
 5713 0a11 92070000 		.4byte	.LASF140
 5714 0a15 05       		.byte	0x5
 5715 0a16 36       		.byte	0x36
 5716 0a17 C5000000 		.4byte	0xc5
 5717 0a1b 05       		.uleb128 0x5
 5718 0a1c 03       		.byte	0x3
 5719 0a1d 00000000 		.4byte	last_quad_count2
 5720 0a21 25       		.uleb128 0x25
 5721 0a22 1A000000 		.4byte	.LASF141
 5722 0a26 05       		.byte	0x5
 5723 0a27 37       		.byte	0x37
 5724 0a28 C5000000 		.4byte	0xc5
 5725 0a2c 05       		.uleb128 0x5
 5726 0a2d 03       		.byte	0x3
 5727 0a2e 00000000 		.4byte	quad_diff1
 5728 0a32 25       		.uleb128 0x25
 5729 0a33 25000000 		.4byte	.LASF142
 5730 0a37 05       		.byte	0x5
 5731 0a38 38       		.byte	0x38
 5732 0a39 C5000000 		.4byte	0xc5
 5733 0a3d 05       		.uleb128 0x5
 5734 0a3e 03       		.byte	0x3
 5735 0a3f 00000000 		.4byte	quad_diff2
 5736 0a43 25       		.uleb128 0x25
 5737 0a44 4E000000 		.4byte	.LASF143
 5738 0a48 05       		.byte	0x5
 5739 0a49 3B       		.byte	0x3b
 5740 0a4a C5000000 		.4byte	0xc5
 5741 0a4e 05       		.uleb128 0x5
 5742 0a4f 03       		.byte	0x3
 5743 0a50 00000000 		.4byte	start_turn_count
 5744 0a54 25       		.uleb128 0x25
 5745 0a55 83050000 		.4byte	.LASF144
 5746 0a59 05       		.byte	0x5
 5747 0a5a 3E       		.byte	0x3e
 5748 0a5b C5000000 		.4byte	0xc5
 5749 0a5f 05       		.uleb128 0x5
 5750 0a60 03       		.byte	0x3
 5751 0a61 00000000 		.4byte	left_duty_cycle
 5752 0a65 25       		.uleb128 0x25
 5753 0a66 1F080000 		.4byte	.LASF145
 5754 0a6a 05       		.byte	0x5
 5755 0a6b 3F       		.byte	0x3f
 5756 0a6c C5000000 		.4byte	0xc5
 5757 0a70 05       		.uleb128 0x5
 5758 0a71 03       		.byte	0x3
 5759 0a72 00000000 		.4byte	right_duty_cycle
 5760 0a76 25       		.uleb128 0x25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 119


 5761 0a77 3B060000 		.4byte	.LASF146
 5762 0a7b 05       		.byte	0x5
 5763 0a7c 42       		.byte	0x42
 5764 0a7d C5000000 		.4byte	0xc5
 5765 0a81 05       		.uleb128 0x5
 5766 0a82 03       		.byte	0x3
 5767 0a83 00000000 		.4byte	leftSpeedLimit
 5768 0a87 25       		.uleb128 0x25
 5769 0a88 57030000 		.4byte	.LASF147
 5770 0a8c 05       		.byte	0x5
 5771 0a8d 43       		.byte	0x43
 5772 0a8e C5000000 		.4byte	0xc5
 5773 0a92 05       		.uleb128 0x5
 5774 0a93 03       		.byte	0x3
 5775 0a94 00000000 		.4byte	rightSpeedLimit
 5776 0a98 25       		.uleb128 0x25
 5777 0a99 AC060000 		.4byte	.LASF148
 5778 0a9d 05       		.byte	0x5
 5779 0a9e 46       		.byte	0x46
 5780 0a9f C5000000 		.4byte	0xc5
 5781 0aa3 05       		.uleb128 0x5
 5782 0aa4 03       		.byte	0x3
 5783 0aa5 00000000 		.4byte	target_distance_cm
 5784 0aa9 25       		.uleb128 0x25
 5785 0aaa 5D060000 		.4byte	.LASF149
 5786 0aae 05       		.byte	0x5
 5787 0aaf 48       		.byte	0x48
 5788 0ab0 C5000000 		.4byte	0xc5
 5789 0ab4 05       		.uleb128 0x5
 5790 0ab5 03       		.byte	0x3
 5791 0ab6 00000000 		.4byte	accum_dist
 5792 0aba 25       		.uleb128 0x25
 5793 0abb A7000000 		.4byte	.LASF150
 5794 0abf 05       		.byte	0x5
 5795 0ac0 49       		.byte	0x49
 5796 0ac1 C5000000 		.4byte	0xc5
 5797 0ac5 05       		.uleb128 0x5
 5798 0ac6 03       		.byte	0x3
 5799 0ac7 00000000 		.4byte	target_distance_quad
 5800 0acb 25       		.uleb128 0x25
 5801 0acc A0060000 		.4byte	.LASF151
 5802 0ad0 05       		.byte	0x5
 5803 0ad1 4A       		.byte	0x4a
 5804 0ad2 D1000000 		.4byte	0xd1
 5805 0ad6 05       		.uleb128 0x5
 5806 0ad7 03       		.byte	0x3
 5807 0ad8 00000000 		.4byte	quad_per_cm
 5808 0adc 25       		.uleb128 0x25
 5809 0add DC030000 		.4byte	.LASF152
 5810 0ae1 05       		.byte	0x5
 5811 0ae2 4D       		.byte	0x4d
 5812 0ae3 95000000 		.4byte	0x95
 5813 0ae7 05       		.uleb128 0x5
 5814 0ae8 03       		.byte	0x3
 5815 0ae9 00000000 		.4byte	initial_pos_valid
 5816 0aed 25       		.uleb128 0x25
 5817 0aee 88080000 		.4byte	.LASF153
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 120


 5818 0af2 05       		.byte	0x5
 5819 0af3 4E       		.byte	0x4e
 5820 0af4 C5000000 		.4byte	0xc5
 5821 0af8 05       		.uleb128 0x5
 5822 0af9 03       		.byte	0x3
 5823 0afa 00000000 		.4byte	initial_x_pos
 5824 0afe 25       		.uleb128 0x25
 5825 0aff B0050000 		.4byte	.LASF154
 5826 0b03 05       		.byte	0x5
 5827 0b04 4F       		.byte	0x4f
 5828 0b05 C5000000 		.4byte	0xc5
 5829 0b09 05       		.uleb128 0x5
 5830 0b0a 03       		.byte	0x3
 5831 0b0b 00000000 		.4byte	initial_y_pos
 5832 0b0f 25       		.uleb128 0x25
 5833 0b10 38070000 		.4byte	.LASF155
 5834 0b14 05       		.byte	0x5
 5835 0b15 52       		.byte	0x52
 5836 0b16 95000000 		.4byte	0x95
 5837 0b1a 05       		.uleb128 0x5
 5838 0b1b 03       		.byte	0x3
 5839 0b1c 00000000 		.4byte	brakeFlag
 5840 0b20 25       		.uleb128 0x25
 5841 0b21 80020000 		.4byte	.LASF156
 5842 0b25 05       		.byte	0x5
 5843 0b26 53       		.byte	0x53
 5844 0b27 95000000 		.4byte	0x95
 5845 0b2b 05       		.uleb128 0x5
 5846 0b2c 03       		.byte	0x3
 5847 0b2d 00000000 		.4byte	portOpen
 5848 0b31 25       		.uleb128 0x25
 5849 0b32 42000000 		.4byte	.LASF157
 5850 0b36 05       		.byte	0x5
 5851 0b37 56       		.byte	0x56
 5852 0b38 C5000000 		.4byte	0xc5
 5853 0b3c 05       		.uleb128 0x5
 5854 0b3d 03       		.byte	0x3
 5855 0b3e 00000000 		.4byte	prevVoltage
 5856 0b42 25       		.uleb128 0x25
 5857 0b43 C5000000 		.4byte	.LASF158
 5858 0b47 05       		.byte	0x5
 5859 0b48 57       		.byte	0x57
 5860 0b49 C5000000 		.4byte	0xc5
 5861 0b4d 05       		.uleb128 0x5
 5862 0b4e 03       		.byte	0x3
 5863 0b4f 00000000 		.4byte	prevVoltage2
 5864 0b53 0E       		.uleb128 0xe
 5865 0b54 83000000 		.4byte	0x83
 5866 0b58 630B0000 		.4byte	0xb63
 5867 0b5c 0F       		.uleb128 0xf
 5868 0b5d 76000000 		.4byte	0x76
 5869 0b61 3F       		.byte	0x3f
 5870 0b62 00       		.byte	0
 5871 0b63 25       		.uleb128 0x25
 5872 0b64 73070000 		.4byte	.LASF159
 5873 0b68 05       		.byte	0x5
 5874 0b69 5D       		.byte	0x5d
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 121


 5875 0b6a 530B0000 		.4byte	0xb53
 5876 0b6e 05       		.uleb128 0x5
 5877 0b6f 03       		.byte	0x3
 5878 0b70 00000000 		.4byte	displaystring
 5879 0b74 25       		.uleb128 0x25
 5880 0b75 1F070000 		.4byte	.LASF160
 5881 0b79 05       		.byte	0x5
 5882 0b7a 5E       		.byte	0x5e
 5883 0b7b 530B0000 		.4byte	0xb53
 5884 0b7f 05       		.uleb128 0x5
 5885 0b80 03       		.byte	0x3
 5886 0b81 00000000 		.4byte	line
 5887 0b85 25       		.uleb128 0x25
 5888 0b86 0B070000 		.4byte	.LASF161
 5889 0b8a 05       		.byte	0x5
 5890 0b8b 5E       		.byte	0x5e
 5891 0b8c 530B0000 		.4byte	0xb53
 5892 0b90 05       		.uleb128 0x5
 5893 0b91 03       		.byte	0x3
 5894 0b92 00000000 		.4byte	entry
 5895 0b96 0E       		.uleb128 0xe
 5896 0b97 95000000 		.4byte	0x95
 5897 0b9b A60B0000 		.4byte	0xba6
 5898 0b9f 0F       		.uleb128 0xf
 5899 0ba0 76000000 		.4byte	0x76
 5900 0ba4 3F       		.byte	0x3f
 5901 0ba5 00       		.byte	0
 5902 0ba6 25       		.uleb128 0x25
 5903 0ba7 B3010000 		.4byte	.LASF162
 5904 0bab 05       		.byte	0x5
 5905 0bac 5F       		.byte	0x5f
 5906 0bad 960B0000 		.4byte	0xb96
 5907 0bb1 05       		.uleb128 0x5
 5908 0bb2 03       		.byte	0x3
 5909 0bb3 00000000 		.4byte	usbBuffer
 5910 0bb7 25       		.uleb128 0x25
 5911 0bb8 FC030000 		.4byte	.LASF163
 5912 0bbc 05       		.byte	0x5
 5913 0bbd 74       		.byte	0x74
 5914 0bbe 54010000 		.4byte	0x154
 5915 0bc2 05       		.uleb128 0x5
 5916 0bc3 03       		.byte	0x3
 5917 0bc4 00000000 		.4byte	buffer_state
 5918 0bc8 25       		.uleb128 0x25
 5919 0bc9 87000000 		.4byte	.LASF164
 5920 0bcd 05       		.byte	0x5
 5921 0bce 75       		.byte	0x75
 5922 0bcf 54010000 		.4byte	0x154
 5923 0bd3 05       		.uleb128 0x5
 5924 0bd4 03       		.byte	0x3
 5925 0bd5 00000000 		.4byte	system_state
 5926 0bd9 25       		.uleb128 0x25
 5927 0bda D7020000 		.4byte	.LASF165
 5928 0bde 05       		.byte	0x5
 5929 0bdf 77       		.byte	0x77
 5930 0be0 E6000000 		.4byte	0xe6
 5931 0be4 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 122


 5932 0be5 03       		.byte	0x3
 5933 0be6 00000000 		.4byte	prev_movement_state
 5934 0bea 25       		.uleb128 0x25
 5935 0beb 67010000 		.4byte	.LASF166
 5936 0bef 05       		.byte	0x5
 5937 0bf0 78       		.byte	0x78
 5938 0bf1 E6000000 		.4byte	0xe6
 5939 0bf5 05       		.uleb128 0x5
 5940 0bf6 03       		.byte	0x3
 5941 0bf7 00000000 		.4byte	movement_state
 5942 0bfb 25       		.uleb128 0x25
 5943 0bfc 6C000000 		.4byte	.LASF167
 5944 0c00 05       		.byte	0x5
 5945 0c01 79       		.byte	0x79
 5946 0c02 1D010000 		.4byte	0x11d
 5947 0c06 05       		.uleb128 0x5
 5948 0c07 03       		.byte	0x3
 5949 0c08 00000000 		.4byte	track_mode
 5950 0c0c 25       		.uleb128 0x25
 5951 0c0d C6020000 		.4byte	.LASF168
 5952 0c11 05       		.byte	0x5
 5953 0c12 7B       		.byte	0x7b
 5954 0c13 95000000 		.4byte	0x95
 5955 0c17 05       		.uleb128 0x5
 5956 0c18 03       		.byte	0x3
 5957 0c19 00000000 		.4byte	byteCount
 5958 0c1d 0E       		.uleb128 0xe
 5959 0c1e 83000000 		.4byte	0x83
 5960 0c22 2D0C0000 		.4byte	0xc2d
 5961 0c26 0F       		.uleb128 0xf
 5962 0c27 76000000 		.4byte	0x76
 5963 0c2b 01       		.byte	0x1
 5964 0c2c 00       		.byte	0
 5965 0c2d 25       		.uleb128 0x25
 5966 0c2e EE060000 		.4byte	.LASF169
 5967 0c32 05       		.byte	0x5
 5968 0c33 7C       		.byte	0x7c
 5969 0c34 1D0C0000 		.4byte	0xc1d
 5970 0c38 05       		.uleb128 0x5
 5971 0c39 03       		.byte	0x3
 5972 0c3a 00000000 		.4byte	packet
 5973 0c3e 25       		.uleb128 0x25
 5974 0c3f 2A010000 		.4byte	.LASF170
 5975 0c43 05       		.byte	0x5
 5976 0c44 80       		.byte	0x80
 5977 0c45 D8000000 		.4byte	0xd8
 5978 0c49 05       		.uleb128 0x5
 5979 0c4a 03       		.byte	0x3
 5980 0c4b 00000000 		.4byte	speed
 5981 0c4f 25       		.uleb128 0x25
 5982 0c50 72030000 		.4byte	.LASF171
 5983 0c54 01       		.byte	0x1
 5984 0c55 2B       		.byte	0x2b
 5985 0c56 A1000000 		.4byte	0xa1
 5986 0c5a 05       		.uleb128 0x5
 5987 0c5b 03       		.byte	0x3
 5988 0c5c 00000000 		.4byte	instructionCount
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 123


 5989 0c60 25       		.uleb128 0x25
 5990 0c61 D2000000 		.4byte	.LASF172
 5991 0c65 01       		.byte	0x1
 5992 0c66 2C       		.byte	0x2c
 5993 0c67 95000000 		.4byte	0x95
 5994 0c6b 05       		.uleb128 0x5
 5995 0c6c 03       		.byte	0x3
 5996 0c6d 00000000 		.4byte	sensorsDisabled
 5997 0c71 0E       		.uleb128 0xe
 5998 0c72 95000000 		.4byte	0x95
 5999 0c76 870C0000 		.4byte	0xc87
 6000 0c7a 0F       		.uleb128 0xf
 6001 0c7b 76000000 		.4byte	0x76
 6002 0c7f 0E       		.byte	0xe
 6003 0c80 0F       		.uleb128 0xf
 6004 0c81 76000000 		.4byte	0x76
 6005 0c85 12       		.byte	0x12
 6006 0c86 00       		.byte	0
 6007 0c87 24       		.uleb128 0x24
 6008 0c88 6D617000 		.ascii	"map\000"
 6009 0c8c 01       		.byte	0x1
 6010 0c8d 32       		.byte	0x32
 6011 0c8e 710C0000 		.4byte	0xc71
 6012 0c92 05       		.uleb128 0x5
 6013 0c93 03       		.byte	0x3
 6014 0c94 00000000 		.4byte	map
 6015 0c98 0E       		.uleb128 0xe
 6016 0c99 95000000 		.4byte	0x95
 6017 0c9d AE0C0000 		.4byte	0xcae
 6018 0ca1 0F       		.uleb128 0xf
 6019 0ca2 76000000 		.4byte	0x76
 6020 0ca6 05       		.byte	0x5
 6021 0ca7 0F       		.uleb128 0xf
 6022 0ca8 76000000 		.4byte	0x76
 6023 0cac 01       		.byte	0x1
 6024 0cad 00       		.byte	0
 6025 0cae 25       		.uleb128 0x25
 6026 0caf CB040000 		.4byte	.LASF173
 6027 0cb3 01       		.byte	0x1
 6028 0cb4 42       		.byte	0x42
 6029 0cb5 980C0000 		.4byte	0xc98
 6030 0cb9 05       		.uleb128 0x5
 6031 0cba 03       		.byte	0x3
 6032 0cbb 00000000 		.4byte	food_list
 6033 0cbf 0E       		.uleb128 0xe
 6034 0cc0 95000000 		.4byte	0x95
 6035 0cc4 D60C0000 		.4byte	0xcd6
 6036 0cc8 26       		.uleb128 0x26
 6037 0cc9 76000000 		.4byte	0x76
 6038 0ccd 8F01     		.2byte	0x18f
 6039 0ccf 0F       		.uleb128 0xf
 6040 0cd0 76000000 		.4byte	0x76
 6041 0cd4 02       		.byte	0x2
 6042 0cd5 00       		.byte	0
 6043 0cd6 25       		.uleb128 0x25
 6044 0cd7 A4030000 		.4byte	.LASF174
 6045 0cdb 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 124


 6046 0cdc 2E       		.byte	0x2e
 6047 0cdd BF0C0000 		.4byte	0xcbf
 6048 0ce1 05       		.uleb128 0x5
 6049 0ce2 03       		.byte	0x3
 6050 0ce3 00000000 		.4byte	path
 6051 0ce7 0E       		.uleb128 0xe
 6052 0ce8 95000000 		.4byte	0x95
 6053 0cec F70C0000 		.4byte	0xcf7
 6054 0cf0 0F       		.uleb128 0xf
 6055 0cf1 76000000 		.4byte	0x76
 6056 0cf5 01       		.byte	0x1
 6057 0cf6 00       		.byte	0
 6058 0cf7 25       		.uleb128 0x25
 6059 0cf8 2D050000 		.4byte	.LASF175
 6060 0cfc 01       		.byte	0x1
 6061 0cfd 2F       		.byte	0x2f
 6062 0cfe E70C0000 		.4byte	0xce7
 6063 0d02 05       		.uleb128 0x5
 6064 0d03 03       		.byte	0x3
 6065 0d04 00000000 		.4byte	start
 6066 0d08 25       		.uleb128 0x25
 6067 0d09 A3070000 		.4byte	.LASF176
 6068 0d0d 01       		.byte	0x1
 6069 0d0e 30       		.byte	0x30
 6070 0d0f E70C0000 		.4byte	0xce7
 6071 0d13 05       		.uleb128 0x5
 6072 0d14 03       		.byte	0x3
 6073 0d15 00000000 		.4byte	destination
 6074 0d19 0E       		.uleb128 0xe
 6075 0d1a 83000000 		.4byte	0x83
 6076 0d1e 2A0D0000 		.4byte	0xd2a
 6077 0d22 26       		.uleb128 0x26
 6078 0d23 76000000 		.4byte	0x76
 6079 0d27 8F01     		.2byte	0x18f
 6080 0d29 00       		.byte	0
 6081 0d2a 25       		.uleb128 0x25
 6082 0d2b FC040000 		.4byte	.LASF177
 6083 0d2f 01       		.byte	0x1
 6084 0d30 2A       		.byte	0x2a
 6085 0d31 190D0000 		.4byte	0xd19
 6086 0d35 05       		.uleb128 0x5
 6087 0d36 03       		.byte	0x3
 6088 0d37 00000000 		.4byte	instructions
 6089 0d3b 00       		.byte	0
 6090              		.section	.debug_abbrev,"",%progbits
 6091              	.Ldebug_abbrev0:
 6092 0000 01       		.uleb128 0x1
 6093 0001 11       		.uleb128 0x11
 6094 0002 01       		.byte	0x1
 6095 0003 25       		.uleb128 0x25
 6096 0004 0E       		.uleb128 0xe
 6097 0005 13       		.uleb128 0x13
 6098 0006 0B       		.uleb128 0xb
 6099 0007 03       		.uleb128 0x3
 6100 0008 0E       		.uleb128 0xe
 6101 0009 1B       		.uleb128 0x1b
 6102 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 125


 6103 000b 55       		.uleb128 0x55
 6104 000c 17       		.uleb128 0x17
 6105 000d 11       		.uleb128 0x11
 6106 000e 01       		.uleb128 0x1
 6107 000f 10       		.uleb128 0x10
 6108 0010 17       		.uleb128 0x17
 6109 0011 00       		.byte	0
 6110 0012 00       		.byte	0
 6111 0013 02       		.uleb128 0x2
 6112 0014 24       		.uleb128 0x24
 6113 0015 00       		.byte	0
 6114 0016 0B       		.uleb128 0xb
 6115 0017 0B       		.uleb128 0xb
 6116 0018 3E       		.uleb128 0x3e
 6117 0019 0B       		.uleb128 0xb
 6118 001a 03       		.uleb128 0x3
 6119 001b 0E       		.uleb128 0xe
 6120 001c 00       		.byte	0
 6121 001d 00       		.byte	0
 6122 001e 03       		.uleb128 0x3
 6123 001f 16       		.uleb128 0x16
 6124 0020 00       		.byte	0
 6125 0021 03       		.uleb128 0x3
 6126 0022 0E       		.uleb128 0xe
 6127 0023 3A       		.uleb128 0x3a
 6128 0024 0B       		.uleb128 0xb
 6129 0025 3B       		.uleb128 0x3b
 6130 0026 0B       		.uleb128 0xb
 6131 0027 49       		.uleb128 0x49
 6132 0028 13       		.uleb128 0x13
 6133 0029 00       		.byte	0
 6134 002a 00       		.byte	0
 6135 002b 04       		.uleb128 0x4
 6136 002c 24       		.uleb128 0x24
 6137 002d 00       		.byte	0
 6138 002e 0B       		.uleb128 0xb
 6139 002f 0B       		.uleb128 0xb
 6140 0030 3E       		.uleb128 0x3e
 6141 0031 0B       		.uleb128 0xb
 6142 0032 03       		.uleb128 0x3
 6143 0033 08       		.uleb128 0x8
 6144 0034 00       		.byte	0
 6145 0035 00       		.byte	0
 6146 0036 05       		.uleb128 0x5
 6147 0037 0F       		.uleb128 0xf
 6148 0038 00       		.byte	0
 6149 0039 0B       		.uleb128 0xb
 6150 003a 0B       		.uleb128 0xb
 6151 003b 49       		.uleb128 0x49
 6152 003c 13       		.uleb128 0x13
 6153 003d 00       		.byte	0
 6154 003e 00       		.byte	0
 6155 003f 06       		.uleb128 0x6
 6156 0040 16       		.uleb128 0x16
 6157 0041 00       		.byte	0
 6158 0042 03       		.uleb128 0x3
 6159 0043 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 126


 6160 0044 3A       		.uleb128 0x3a
 6161 0045 0B       		.uleb128 0xb
 6162 0046 3B       		.uleb128 0x3b
 6163 0047 05       		.uleb128 0x5
 6164 0048 49       		.uleb128 0x49
 6165 0049 13       		.uleb128 0x13
 6166 004a 00       		.byte	0
 6167 004b 00       		.byte	0
 6168 004c 07       		.uleb128 0x7
 6169 004d 04       		.uleb128 0x4
 6170 004e 01       		.byte	0x1
 6171 004f 03       		.uleb128 0x3
 6172 0050 0E       		.uleb128 0xe
 6173 0051 0B       		.uleb128 0xb
 6174 0052 0B       		.uleb128 0xb
 6175 0053 3A       		.uleb128 0x3a
 6176 0054 0B       		.uleb128 0xb
 6177 0055 3B       		.uleb128 0x3b
 6178 0056 0B       		.uleb128 0xb
 6179 0057 01       		.uleb128 0x1
 6180 0058 13       		.uleb128 0x13
 6181 0059 00       		.byte	0
 6182 005a 00       		.byte	0
 6183 005b 08       		.uleb128 0x8
 6184 005c 28       		.uleb128 0x28
 6185 005d 00       		.byte	0
 6186 005e 03       		.uleb128 0x3
 6187 005f 0E       		.uleb128 0xe
 6188 0060 1C       		.uleb128 0x1c
 6189 0061 0D       		.uleb128 0xd
 6190 0062 00       		.byte	0
 6191 0063 00       		.byte	0
 6192 0064 09       		.uleb128 0x9
 6193 0065 13       		.uleb128 0x13
 6194 0066 01       		.byte	0x1
 6195 0067 03       		.uleb128 0x3
 6196 0068 0E       		.uleb128 0xe
 6197 0069 0B       		.uleb128 0xb
 6198 006a 0B       		.uleb128 0xb
 6199 006b 3A       		.uleb128 0x3a
 6200 006c 0B       		.uleb128 0xb
 6201 006d 3B       		.uleb128 0x3b
 6202 006e 0B       		.uleb128 0xb
 6203 006f 01       		.uleb128 0x1
 6204 0070 13       		.uleb128 0x13
 6205 0071 00       		.byte	0
 6206 0072 00       		.byte	0
 6207 0073 0A       		.uleb128 0xa
 6208 0074 0D       		.uleb128 0xd
 6209 0075 00       		.byte	0
 6210 0076 03       		.uleb128 0x3
 6211 0077 0E       		.uleb128 0xe
 6212 0078 3A       		.uleb128 0x3a
 6213 0079 0B       		.uleb128 0xb
 6214 007a 3B       		.uleb128 0x3b
 6215 007b 0B       		.uleb128 0xb
 6216 007c 49       		.uleb128 0x49
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 127


 6217 007d 13       		.uleb128 0x13
 6218 007e 38       		.uleb128 0x38
 6219 007f 0B       		.uleb128 0xb
 6220 0080 00       		.byte	0
 6221 0081 00       		.byte	0
 6222 0082 0B       		.uleb128 0xb
 6223 0083 2E       		.uleb128 0x2e
 6224 0084 01       		.byte	0x1
 6225 0085 3F       		.uleb128 0x3f
 6226 0086 19       		.uleb128 0x19
 6227 0087 03       		.uleb128 0x3
 6228 0088 0E       		.uleb128 0xe
 6229 0089 3A       		.uleb128 0x3a
 6230 008a 0B       		.uleb128 0xb
 6231 008b 3B       		.uleb128 0x3b
 6232 008c 0B       		.uleb128 0xb
 6233 008d 11       		.uleb128 0x11
 6234 008e 01       		.uleb128 0x1
 6235 008f 12       		.uleb128 0x12
 6236 0090 06       		.uleb128 0x6
 6237 0091 40       		.uleb128 0x40
 6238 0092 18       		.uleb128 0x18
 6239 0093 9742     		.uleb128 0x2117
 6240 0095 19       		.uleb128 0x19
 6241 0096 01       		.uleb128 0x1
 6242 0097 13       		.uleb128 0x13
 6243 0098 00       		.byte	0
 6244 0099 00       		.byte	0
 6245 009a 0C       		.uleb128 0xc
 6246 009b 0B       		.uleb128 0xb
 6247 009c 01       		.byte	0x1
 6248 009d 11       		.uleb128 0x11
 6249 009e 01       		.uleb128 0x1
 6250 009f 12       		.uleb128 0x12
 6251 00a0 06       		.uleb128 0x6
 6252 00a1 00       		.byte	0
 6253 00a2 00       		.byte	0
 6254 00a3 0D       		.uleb128 0xd
 6255 00a4 34       		.uleb128 0x34
 6256 00a5 00       		.byte	0
 6257 00a6 03       		.uleb128 0x3
 6258 00a7 0E       		.uleb128 0xe
 6259 00a8 3A       		.uleb128 0x3a
 6260 00a9 0B       		.uleb128 0xb
 6261 00aa 3B       		.uleb128 0x3b
 6262 00ab 0B       		.uleb128 0xb
 6263 00ac 49       		.uleb128 0x49
 6264 00ad 13       		.uleb128 0x13
 6265 00ae 02       		.uleb128 0x2
 6266 00af 18       		.uleb128 0x18
 6267 00b0 00       		.byte	0
 6268 00b1 00       		.byte	0
 6269 00b2 0E       		.uleb128 0xe
 6270 00b3 01       		.uleb128 0x1
 6271 00b4 01       		.byte	0x1
 6272 00b5 49       		.uleb128 0x49
 6273 00b6 13       		.uleb128 0x13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 128


 6274 00b7 01       		.uleb128 0x1
 6275 00b8 13       		.uleb128 0x13
 6276 00b9 00       		.byte	0
 6277 00ba 00       		.byte	0
 6278 00bb 0F       		.uleb128 0xf
 6279 00bc 21       		.uleb128 0x21
 6280 00bd 00       		.byte	0
 6281 00be 49       		.uleb128 0x49
 6282 00bf 13       		.uleb128 0x13
 6283 00c0 2F       		.uleb128 0x2f
 6284 00c1 0B       		.uleb128 0xb
 6285 00c2 00       		.byte	0
 6286 00c3 00       		.byte	0
 6287 00c4 10       		.uleb128 0x10
 6288 00c5 2E       		.uleb128 0x2e
 6289 00c6 01       		.byte	0x1
 6290 00c7 3F       		.uleb128 0x3f
 6291 00c8 19       		.uleb128 0x19
 6292 00c9 03       		.uleb128 0x3
 6293 00ca 0E       		.uleb128 0xe
 6294 00cb 3A       		.uleb128 0x3a
 6295 00cc 0B       		.uleb128 0xb
 6296 00cd 3B       		.uleb128 0x3b
 6297 00ce 0B       		.uleb128 0xb
 6298 00cf 27       		.uleb128 0x27
 6299 00d0 19       		.uleb128 0x19
 6300 00d1 11       		.uleb128 0x11
 6301 00d2 01       		.uleb128 0x1
 6302 00d3 12       		.uleb128 0x12
 6303 00d4 06       		.uleb128 0x6
 6304 00d5 40       		.uleb128 0x40
 6305 00d6 18       		.uleb128 0x18
 6306 00d7 9642     		.uleb128 0x2116
 6307 00d9 19       		.uleb128 0x19
 6308 00da 01       		.uleb128 0x1
 6309 00db 13       		.uleb128 0x13
 6310 00dc 00       		.byte	0
 6311 00dd 00       		.byte	0
 6312 00de 11       		.uleb128 0x11
 6313 00df 05       		.uleb128 0x5
 6314 00e0 00       		.byte	0
 6315 00e1 03       		.uleb128 0x3
 6316 00e2 08       		.uleb128 0x8
 6317 00e3 3A       		.uleb128 0x3a
 6318 00e4 0B       		.uleb128 0xb
 6319 00e5 3B       		.uleb128 0x3b
 6320 00e6 0B       		.uleb128 0xb
 6321 00e7 49       		.uleb128 0x49
 6322 00e8 13       		.uleb128 0x13
 6323 00e9 02       		.uleb128 0x2
 6324 00ea 18       		.uleb128 0x18
 6325 00eb 00       		.byte	0
 6326 00ec 00       		.byte	0
 6327 00ed 12       		.uleb128 0x12
 6328 00ee 2E       		.uleb128 0x2e
 6329 00ef 01       		.byte	0x1
 6330 00f0 3F       		.uleb128 0x3f
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 129


 6331 00f1 19       		.uleb128 0x19
 6332 00f2 03       		.uleb128 0x3
 6333 00f3 0E       		.uleb128 0xe
 6334 00f4 3A       		.uleb128 0x3a
 6335 00f5 0B       		.uleb128 0xb
 6336 00f6 3B       		.uleb128 0x3b
 6337 00f7 0B       		.uleb128 0xb
 6338 00f8 11       		.uleb128 0x11
 6339 00f9 01       		.uleb128 0x1
 6340 00fa 12       		.uleb128 0x12
 6341 00fb 06       		.uleb128 0x6
 6342 00fc 40       		.uleb128 0x40
 6343 00fd 18       		.uleb128 0x18
 6344 00fe 9642     		.uleb128 0x2116
 6345 0100 19       		.uleb128 0x19
 6346 0101 01       		.uleb128 0x1
 6347 0102 13       		.uleb128 0x13
 6348 0103 00       		.byte	0
 6349 0104 00       		.byte	0
 6350 0105 13       		.uleb128 0x13
 6351 0106 34       		.uleb128 0x34
 6352 0107 00       		.byte	0
 6353 0108 03       		.uleb128 0x3
 6354 0109 08       		.uleb128 0x8
 6355 010a 3A       		.uleb128 0x3a
 6356 010b 0B       		.uleb128 0xb
 6357 010c 3B       		.uleb128 0x3b
 6358 010d 0B       		.uleb128 0xb
 6359 010e 49       		.uleb128 0x49
 6360 010f 13       		.uleb128 0x13
 6361 0110 02       		.uleb128 0x2
 6362 0111 18       		.uleb128 0x18
 6363 0112 00       		.byte	0
 6364 0113 00       		.byte	0
 6365 0114 14       		.uleb128 0x14
 6366 0115 05       		.uleb128 0x5
 6367 0116 00       		.byte	0
 6368 0117 03       		.uleb128 0x3
 6369 0118 0E       		.uleb128 0xe
 6370 0119 3A       		.uleb128 0x3a
 6371 011a 0B       		.uleb128 0xb
 6372 011b 3B       		.uleb128 0x3b
 6373 011c 0B       		.uleb128 0xb
 6374 011d 49       		.uleb128 0x49
 6375 011e 13       		.uleb128 0x13
 6376 011f 02       		.uleb128 0x2
 6377 0120 18       		.uleb128 0x18
 6378 0121 00       		.byte	0
 6379 0122 00       		.byte	0
 6380 0123 15       		.uleb128 0x15
 6381 0124 2E       		.uleb128 0x2e
 6382 0125 00       		.byte	0
 6383 0126 3F       		.uleb128 0x3f
 6384 0127 19       		.uleb128 0x19
 6385 0128 03       		.uleb128 0x3
 6386 0129 0E       		.uleb128 0xe
 6387 012a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 130


 6388 012b 0B       		.uleb128 0xb
 6389 012c 3B       		.uleb128 0x3b
 6390 012d 0B       		.uleb128 0xb
 6391 012e 11       		.uleb128 0x11
 6392 012f 01       		.uleb128 0x1
 6393 0130 12       		.uleb128 0x12
 6394 0131 06       		.uleb128 0x6
 6395 0132 40       		.uleb128 0x40
 6396 0133 18       		.uleb128 0x18
 6397 0134 9642     		.uleb128 0x2116
 6398 0136 19       		.uleb128 0x19
 6399 0137 00       		.byte	0
 6400 0138 00       		.byte	0
 6401 0139 16       		.uleb128 0x16
 6402 013a 2E       		.uleb128 0x2e
 6403 013b 00       		.byte	0
 6404 013c 3F       		.uleb128 0x3f
 6405 013d 19       		.uleb128 0x19
 6406 013e 03       		.uleb128 0x3
 6407 013f 0E       		.uleb128 0xe
 6408 0140 3A       		.uleb128 0x3a
 6409 0141 0B       		.uleb128 0xb
 6410 0142 3B       		.uleb128 0x3b
 6411 0143 0B       		.uleb128 0xb
 6412 0144 11       		.uleb128 0x11
 6413 0145 01       		.uleb128 0x1
 6414 0146 12       		.uleb128 0x12
 6415 0147 06       		.uleb128 0x6
 6416 0148 40       		.uleb128 0x40
 6417 0149 18       		.uleb128 0x18
 6418 014a 9742     		.uleb128 0x2117
 6419 014c 19       		.uleb128 0x19
 6420 014d 00       		.byte	0
 6421 014e 00       		.byte	0
 6422 014f 17       		.uleb128 0x17
 6423 0150 2E       		.uleb128 0x2e
 6424 0151 01       		.byte	0x1
 6425 0152 3F       		.uleb128 0x3f
 6426 0153 19       		.uleb128 0x19
 6427 0154 03       		.uleb128 0x3
 6428 0155 0E       		.uleb128 0xe
 6429 0156 3A       		.uleb128 0x3a
 6430 0157 0B       		.uleb128 0xb
 6431 0158 3B       		.uleb128 0x3b
 6432 0159 05       		.uleb128 0x5
 6433 015a 27       		.uleb128 0x27
 6434 015b 19       		.uleb128 0x19
 6435 015c 11       		.uleb128 0x11
 6436 015d 01       		.uleb128 0x1
 6437 015e 12       		.uleb128 0x12
 6438 015f 06       		.uleb128 0x6
 6439 0160 40       		.uleb128 0x40
 6440 0161 18       		.uleb128 0x18
 6441 0162 9642     		.uleb128 0x2116
 6442 0164 19       		.uleb128 0x19
 6443 0165 01       		.uleb128 0x1
 6444 0166 13       		.uleb128 0x13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 131


 6445 0167 00       		.byte	0
 6446 0168 00       		.byte	0
 6447 0169 18       		.uleb128 0x18
 6448 016a 34       		.uleb128 0x34
 6449 016b 00       		.byte	0
 6450 016c 03       		.uleb128 0x3
 6451 016d 0E       		.uleb128 0xe
 6452 016e 3A       		.uleb128 0x3a
 6453 016f 0B       		.uleb128 0xb
 6454 0170 3B       		.uleb128 0x3b
 6455 0171 05       		.uleb128 0x5
 6456 0172 49       		.uleb128 0x49
 6457 0173 13       		.uleb128 0x13
 6458 0174 02       		.uleb128 0x2
 6459 0175 18       		.uleb128 0x18
 6460 0176 00       		.byte	0
 6461 0177 00       		.byte	0
 6462 0178 19       		.uleb128 0x19
 6463 0179 34       		.uleb128 0x34
 6464 017a 00       		.byte	0
 6465 017b 03       		.uleb128 0x3
 6466 017c 08       		.uleb128 0x8
 6467 017d 3A       		.uleb128 0x3a
 6468 017e 0B       		.uleb128 0xb
 6469 017f 3B       		.uleb128 0x3b
 6470 0180 05       		.uleb128 0x5
 6471 0181 49       		.uleb128 0x49
 6472 0182 13       		.uleb128 0x13
 6473 0183 02       		.uleb128 0x2
 6474 0184 18       		.uleb128 0x18
 6475 0185 00       		.byte	0
 6476 0186 00       		.byte	0
 6477 0187 1A       		.uleb128 0x1a
 6478 0188 2E       		.uleb128 0x2e
 6479 0189 00       		.byte	0
 6480 018a 3F       		.uleb128 0x3f
 6481 018b 19       		.uleb128 0x19
 6482 018c 03       		.uleb128 0x3
 6483 018d 0E       		.uleb128 0xe
 6484 018e 3A       		.uleb128 0x3a
 6485 018f 0B       		.uleb128 0xb
 6486 0190 3B       		.uleb128 0x3b
 6487 0191 05       		.uleb128 0x5
 6488 0192 27       		.uleb128 0x27
 6489 0193 19       		.uleb128 0x19
 6490 0194 11       		.uleb128 0x11
 6491 0195 01       		.uleb128 0x1
 6492 0196 12       		.uleb128 0x12
 6493 0197 06       		.uleb128 0x6
 6494 0198 40       		.uleb128 0x40
 6495 0199 18       		.uleb128 0x18
 6496 019a 9742     		.uleb128 0x2117
 6497 019c 19       		.uleb128 0x19
 6498 019d 00       		.byte	0
 6499 019e 00       		.byte	0
 6500 019f 1B       		.uleb128 0x1b
 6501 01a0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 132


 6502 01a1 00       		.byte	0
 6503 01a2 3F       		.uleb128 0x3f
 6504 01a3 19       		.uleb128 0x19
 6505 01a4 03       		.uleb128 0x3
 6506 01a5 0E       		.uleb128 0xe
 6507 01a6 3A       		.uleb128 0x3a
 6508 01a7 0B       		.uleb128 0xb
 6509 01a8 3B       		.uleb128 0x3b
 6510 01a9 05       		.uleb128 0x5
 6511 01aa 27       		.uleb128 0x27
 6512 01ab 19       		.uleb128 0x19
 6513 01ac 11       		.uleb128 0x11
 6514 01ad 01       		.uleb128 0x1
 6515 01ae 12       		.uleb128 0x12
 6516 01af 06       		.uleb128 0x6
 6517 01b0 40       		.uleb128 0x40
 6518 01b1 18       		.uleb128 0x18
 6519 01b2 9642     		.uleb128 0x2116
 6520 01b4 19       		.uleb128 0x19
 6521 01b5 00       		.byte	0
 6522 01b6 00       		.byte	0
 6523 01b7 1C       		.uleb128 0x1c
 6524 01b8 0B       		.uleb128 0xb
 6525 01b9 01       		.byte	0x1
 6526 01ba 11       		.uleb128 0x11
 6527 01bb 01       		.uleb128 0x1
 6528 01bc 12       		.uleb128 0x12
 6529 01bd 06       		.uleb128 0x6
 6530 01be 01       		.uleb128 0x1
 6531 01bf 13       		.uleb128 0x13
 6532 01c0 00       		.byte	0
 6533 01c1 00       		.byte	0
 6534 01c2 1D       		.uleb128 0x1d
 6535 01c3 2E       		.uleb128 0x2e
 6536 01c4 00       		.byte	0
 6537 01c5 3F       		.uleb128 0x3f
 6538 01c6 19       		.uleb128 0x19
 6539 01c7 03       		.uleb128 0x3
 6540 01c8 0E       		.uleb128 0xe
 6541 01c9 3A       		.uleb128 0x3a
 6542 01ca 0B       		.uleb128 0xb
 6543 01cb 3B       		.uleb128 0x3b
 6544 01cc 05       		.uleb128 0x5
 6545 01cd 11       		.uleb128 0x11
 6546 01ce 01       		.uleb128 0x1
 6547 01cf 12       		.uleb128 0x12
 6548 01d0 06       		.uleb128 0x6
 6549 01d1 40       		.uleb128 0x40
 6550 01d2 18       		.uleb128 0x18
 6551 01d3 9642     		.uleb128 0x2116
 6552 01d5 19       		.uleb128 0x19
 6553 01d6 00       		.byte	0
 6554 01d7 00       		.byte	0
 6555 01d8 1E       		.uleb128 0x1e
 6556 01d9 2E       		.uleb128 0x2e
 6557 01da 01       		.byte	0x1
 6558 01db 3F       		.uleb128 0x3f
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 133


 6559 01dc 19       		.uleb128 0x19
 6560 01dd 03       		.uleb128 0x3
 6561 01de 0E       		.uleb128 0xe
 6562 01df 3A       		.uleb128 0x3a
 6563 01e0 0B       		.uleb128 0xb
 6564 01e1 3B       		.uleb128 0x3b
 6565 01e2 05       		.uleb128 0x5
 6566 01e3 11       		.uleb128 0x11
 6567 01e4 01       		.uleb128 0x1
 6568 01e5 12       		.uleb128 0x12
 6569 01e6 06       		.uleb128 0x6
 6570 01e7 40       		.uleb128 0x40
 6571 01e8 18       		.uleb128 0x18
 6572 01e9 9642     		.uleb128 0x2116
 6573 01eb 19       		.uleb128 0x19
 6574 01ec 01       		.uleb128 0x1
 6575 01ed 13       		.uleb128 0x13
 6576 01ee 00       		.byte	0
 6577 01ef 00       		.byte	0
 6578 01f0 1F       		.uleb128 0x1f
 6579 01f1 05       		.uleb128 0x5
 6580 01f2 00       		.byte	0
 6581 01f3 03       		.uleb128 0x3
 6582 01f4 0E       		.uleb128 0xe
 6583 01f5 3A       		.uleb128 0x3a
 6584 01f6 0B       		.uleb128 0xb
 6585 01f7 3B       		.uleb128 0x3b
 6586 01f8 05       		.uleb128 0x5
 6587 01f9 49       		.uleb128 0x49
 6588 01fa 13       		.uleb128 0x13
 6589 01fb 02       		.uleb128 0x2
 6590 01fc 18       		.uleb128 0x18
 6591 01fd 00       		.byte	0
 6592 01fe 00       		.byte	0
 6593 01ff 20       		.uleb128 0x20
 6594 0200 2E       		.uleb128 0x2e
 6595 0201 01       		.byte	0x1
 6596 0202 3F       		.uleb128 0x3f
 6597 0203 19       		.uleb128 0x19
 6598 0204 03       		.uleb128 0x3
 6599 0205 0E       		.uleb128 0xe
 6600 0206 3A       		.uleb128 0x3a
 6601 0207 0B       		.uleb128 0xb
 6602 0208 3B       		.uleb128 0x3b
 6603 0209 05       		.uleb128 0x5
 6604 020a 49       		.uleb128 0x49
 6605 020b 13       		.uleb128 0x13
 6606 020c 11       		.uleb128 0x11
 6607 020d 01       		.uleb128 0x1
 6608 020e 12       		.uleb128 0x12
 6609 020f 06       		.uleb128 0x6
 6610 0210 40       		.uleb128 0x40
 6611 0211 18       		.uleb128 0x18
 6612 0212 9642     		.uleb128 0x2116
 6613 0214 19       		.uleb128 0x19
 6614 0215 01       		.uleb128 0x1
 6615 0216 13       		.uleb128 0x13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 134


 6616 0217 00       		.byte	0
 6617 0218 00       		.byte	0
 6618 0219 21       		.uleb128 0x21
 6619 021a 05       		.uleb128 0x5
 6620 021b 00       		.byte	0
 6621 021c 03       		.uleb128 0x3
 6622 021d 08       		.uleb128 0x8
 6623 021e 3A       		.uleb128 0x3a
 6624 021f 0B       		.uleb128 0xb
 6625 0220 3B       		.uleb128 0x3b
 6626 0221 05       		.uleb128 0x5
 6627 0222 49       		.uleb128 0x49
 6628 0223 13       		.uleb128 0x13
 6629 0224 02       		.uleb128 0x2
 6630 0225 18       		.uleb128 0x18
 6631 0226 00       		.byte	0
 6632 0227 00       		.byte	0
 6633 0228 22       		.uleb128 0x22
 6634 0229 34       		.uleb128 0x34
 6635 022a 00       		.byte	0
 6636 022b 03       		.uleb128 0x3
 6637 022c 0E       		.uleb128 0xe
 6638 022d 3A       		.uleb128 0x3a
 6639 022e 0B       		.uleb128 0xb
 6640 022f 3B       		.uleb128 0x3b
 6641 0230 05       		.uleb128 0x5
 6642 0231 49       		.uleb128 0x49
 6643 0232 13       		.uleb128 0x13
 6644 0233 3F       		.uleb128 0x3f
 6645 0234 19       		.uleb128 0x19
 6646 0235 3C       		.uleb128 0x3c
 6647 0236 19       		.uleb128 0x19
 6648 0237 00       		.byte	0
 6649 0238 00       		.byte	0
 6650 0239 23       		.uleb128 0x23
 6651 023a 35       		.uleb128 0x35
 6652 023b 00       		.byte	0
 6653 023c 49       		.uleb128 0x49
 6654 023d 13       		.uleb128 0x13
 6655 023e 00       		.byte	0
 6656 023f 00       		.byte	0
 6657 0240 24       		.uleb128 0x24
 6658 0241 34       		.uleb128 0x34
 6659 0242 00       		.byte	0
 6660 0243 03       		.uleb128 0x3
 6661 0244 08       		.uleb128 0x8
 6662 0245 3A       		.uleb128 0x3a
 6663 0246 0B       		.uleb128 0xb
 6664 0247 3B       		.uleb128 0x3b
 6665 0248 0B       		.uleb128 0xb
 6666 0249 49       		.uleb128 0x49
 6667 024a 13       		.uleb128 0x13
 6668 024b 3F       		.uleb128 0x3f
 6669 024c 19       		.uleb128 0x19
 6670 024d 02       		.uleb128 0x2
 6671 024e 18       		.uleb128 0x18
 6672 024f 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 135


 6673 0250 00       		.byte	0
 6674 0251 25       		.uleb128 0x25
 6675 0252 34       		.uleb128 0x34
 6676 0253 00       		.byte	0
 6677 0254 03       		.uleb128 0x3
 6678 0255 0E       		.uleb128 0xe
 6679 0256 3A       		.uleb128 0x3a
 6680 0257 0B       		.uleb128 0xb
 6681 0258 3B       		.uleb128 0x3b
 6682 0259 0B       		.uleb128 0xb
 6683 025a 49       		.uleb128 0x49
 6684 025b 13       		.uleb128 0x13
 6685 025c 3F       		.uleb128 0x3f
 6686 025d 19       		.uleb128 0x19
 6687 025e 02       		.uleb128 0x2
 6688 025f 18       		.uleb128 0x18
 6689 0260 00       		.byte	0
 6690 0261 00       		.byte	0
 6691 0262 26       		.uleb128 0x26
 6692 0263 21       		.uleb128 0x21
 6693 0264 00       		.byte	0
 6694 0265 49       		.uleb128 0x49
 6695 0266 13       		.uleb128 0x13
 6696 0267 2F       		.uleb128 0x2f
 6697 0268 05       		.uleb128 0x5
 6698 0269 00       		.byte	0
 6699 026a 00       		.byte	0
 6700 026b 00       		.byte	0
 6701              		.section	.debug_aranges,"",%progbits
 6702 0000 54010000 		.4byte	0x154
 6703 0004 0200     		.2byte	0x2
 6704 0006 00000000 		.4byte	.Ldebug_info0
 6705 000a 04       		.byte	0x4
 6706 000b 00       		.byte	0
 6707 000c 0000     		.2byte	0
 6708 000e 0000     		.2byte	0
 6709 0010 00000000 		.4byte	.LFB63
 6710 0014 60010000 		.4byte	.LFE63-.LFB63
 6711 0018 00000000 		.4byte	.LFB64
 6712 001c 18000000 		.4byte	.LFE64-.LFB64
 6713 0020 00000000 		.4byte	.LFB65
 6714 0024 18000000 		.4byte	.LFE65-.LFB65
 6715 0028 00000000 		.4byte	.LFB66
 6716 002c 54000000 		.4byte	.LFE66-.LFB66
 6717 0030 00000000 		.4byte	.LFB67
 6718 0034 F4000000 		.4byte	.LFE67-.LFB67
 6719 0038 00000000 		.4byte	.LFB68
 6720 003c 18000000 		.4byte	.LFE68-.LFB68
 6721 0040 00000000 		.4byte	.LFB69
 6722 0044 18000000 		.4byte	.LFE69-.LFB69
 6723 0048 00000000 		.4byte	.LFB70
 6724 004c 22000000 		.4byte	.LFE70-.LFB70
 6725 0050 00000000 		.4byte	.LFB71
 6726 0054 1C000000 		.4byte	.LFE71-.LFB71
 6727 0058 00000000 		.4byte	.LFB72
 6728 005c 28000000 		.4byte	.LFE72-.LFB72
 6729 0060 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 136


 6730 0064 2C000000 		.4byte	.LFE73-.LFB73
 6731 0068 00000000 		.4byte	.LFB74
 6732 006c 38000000 		.4byte	.LFE74-.LFB74
 6733 0070 00000000 		.4byte	.LFB75
 6734 0074 38000000 		.4byte	.LFE75-.LFB75
 6735 0078 00000000 		.4byte	.LFB76
 6736 007c 14000000 		.4byte	.LFE76-.LFB76
 6737 0080 00000000 		.4byte	.LFB77
 6738 0084 18000000 		.4byte	.LFE77-.LFB77
 6739 0088 00000000 		.4byte	.LFB78
 6740 008c 18000000 		.4byte	.LFE78-.LFB78
 6741 0090 00000000 		.4byte	.LFB79
 6742 0094 18000000 		.4byte	.LFE79-.LFB79
 6743 0098 00000000 		.4byte	.LFB80
 6744 009c 18000000 		.4byte	.LFE80-.LFB80
 6745 00a0 00000000 		.4byte	.LFB81
 6746 00a4 B8000000 		.4byte	.LFE81-.LFB81
 6747 00a8 00000000 		.4byte	.LFB82
 6748 00ac 88010000 		.4byte	.LFE82-.LFB82
 6749 00b0 00000000 		.4byte	.LFB83
 6750 00b4 0C000000 		.4byte	.LFE83-.LFB83
 6751 00b8 00000000 		.4byte	.LFB84
 6752 00bc 2C000000 		.4byte	.LFE84-.LFB84
 6753 00c0 00000000 		.4byte	.LFB85
 6754 00c4 E4010000 		.4byte	.LFE85-.LFB85
 6755 00c8 00000000 		.4byte	.LFB86
 6756 00cc 78000000 		.4byte	.LFE86-.LFB86
 6757 00d0 00000000 		.4byte	.LFB87
 6758 00d4 20000000 		.4byte	.LFE87-.LFB87
 6759 00d8 00000000 		.4byte	.LFB88
 6760 00dc 28000000 		.4byte	.LFE88-.LFB88
 6761 00e0 00000000 		.4byte	.LFB89
 6762 00e4 0A000000 		.4byte	.LFE89-.LFB89
 6763 00e8 00000000 		.4byte	.LFB90
 6764 00ec 40000000 		.4byte	.LFE90-.LFB90
 6765 00f0 00000000 		.4byte	.LFB91
 6766 00f4 40000000 		.4byte	.LFE91-.LFB91
 6767 00f8 00000000 		.4byte	.LFB92
 6768 00fc 30020000 		.4byte	.LFE92-.LFB92
 6769 0100 00000000 		.4byte	.LFB93
 6770 0104 50010000 		.4byte	.LFE93-.LFB93
 6771 0108 00000000 		.4byte	.LFB94
 6772 010c 50010000 		.4byte	.LFE94-.LFB94
 6773 0110 00000000 		.4byte	.LFB95
 6774 0114 B0010000 		.4byte	.LFE95-.LFB95
 6775 0118 00000000 		.4byte	.LFB96
 6776 011c C0000000 		.4byte	.LFE96-.LFB96
 6777 0120 00000000 		.4byte	.LFB97
 6778 0124 B8000000 		.4byte	.LFE97-.LFB97
 6779 0128 00000000 		.4byte	.LFB98
 6780 012c 4A000000 		.4byte	.LFE98-.LFB98
 6781 0130 00000000 		.4byte	.LFB99
 6782 0134 18020000 		.4byte	.LFE99-.LFB99
 6783 0138 00000000 		.4byte	.LFB100
 6784 013c 68000000 		.4byte	.LFE100-.LFB100
 6785 0140 00000000 		.4byte	.LFB101
 6786 0144 50000000 		.4byte	.LFE101-.LFB101
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 137


 6787 0148 00000000 		.4byte	.LFB102
 6788 014c 3A000000 		.4byte	.LFE102-.LFB102
 6789 0150 00000000 		.4byte	0
 6790 0154 00000000 		.4byte	0
 6791              		.section	.debug_ranges,"",%progbits
 6792              	.Ldebug_ranges0:
 6793 0000 00000000 		.4byte	.LFB63
 6794 0004 60010000 		.4byte	.LFE63
 6795 0008 00000000 		.4byte	.LFB64
 6796 000c 18000000 		.4byte	.LFE64
 6797 0010 00000000 		.4byte	.LFB65
 6798 0014 18000000 		.4byte	.LFE65
 6799 0018 00000000 		.4byte	.LFB66
 6800 001c 54000000 		.4byte	.LFE66
 6801 0020 00000000 		.4byte	.LFB67
 6802 0024 F4000000 		.4byte	.LFE67
 6803 0028 00000000 		.4byte	.LFB68
 6804 002c 18000000 		.4byte	.LFE68
 6805 0030 00000000 		.4byte	.LFB69
 6806 0034 18000000 		.4byte	.LFE69
 6807 0038 00000000 		.4byte	.LFB70
 6808 003c 22000000 		.4byte	.LFE70
 6809 0040 00000000 		.4byte	.LFB71
 6810 0044 1C000000 		.4byte	.LFE71
 6811 0048 00000000 		.4byte	.LFB72
 6812 004c 28000000 		.4byte	.LFE72
 6813 0050 00000000 		.4byte	.LFB73
 6814 0054 2C000000 		.4byte	.LFE73
 6815 0058 00000000 		.4byte	.LFB74
 6816 005c 38000000 		.4byte	.LFE74
 6817 0060 00000000 		.4byte	.LFB75
 6818 0064 38000000 		.4byte	.LFE75
 6819 0068 00000000 		.4byte	.LFB76
 6820 006c 14000000 		.4byte	.LFE76
 6821 0070 00000000 		.4byte	.LFB77
 6822 0074 18000000 		.4byte	.LFE77
 6823 0078 00000000 		.4byte	.LFB78
 6824 007c 18000000 		.4byte	.LFE78
 6825 0080 00000000 		.4byte	.LFB79
 6826 0084 18000000 		.4byte	.LFE79
 6827 0088 00000000 		.4byte	.LFB80
 6828 008c 18000000 		.4byte	.LFE80
 6829 0090 00000000 		.4byte	.LFB81
 6830 0094 B8000000 		.4byte	.LFE81
 6831 0098 00000000 		.4byte	.LFB82
 6832 009c 88010000 		.4byte	.LFE82
 6833 00a0 00000000 		.4byte	.LFB83
 6834 00a4 0C000000 		.4byte	.LFE83
 6835 00a8 00000000 		.4byte	.LFB84
 6836 00ac 2C000000 		.4byte	.LFE84
 6837 00b0 00000000 		.4byte	.LFB85
 6838 00b4 E4010000 		.4byte	.LFE85
 6839 00b8 00000000 		.4byte	.LFB86
 6840 00bc 78000000 		.4byte	.LFE86
 6841 00c0 00000000 		.4byte	.LFB87
 6842 00c4 20000000 		.4byte	.LFE87
 6843 00c8 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 138


 6844 00cc 28000000 		.4byte	.LFE88
 6845 00d0 00000000 		.4byte	.LFB89
 6846 00d4 0A000000 		.4byte	.LFE89
 6847 00d8 00000000 		.4byte	.LFB90
 6848 00dc 40000000 		.4byte	.LFE90
 6849 00e0 00000000 		.4byte	.LFB91
 6850 00e4 40000000 		.4byte	.LFE91
 6851 00e8 00000000 		.4byte	.LFB92
 6852 00ec 30020000 		.4byte	.LFE92
 6853 00f0 00000000 		.4byte	.LFB93
 6854 00f4 50010000 		.4byte	.LFE93
 6855 00f8 00000000 		.4byte	.LFB94
 6856 00fc 50010000 		.4byte	.LFE94
 6857 0100 00000000 		.4byte	.LFB95
 6858 0104 B0010000 		.4byte	.LFE95
 6859 0108 00000000 		.4byte	.LFB96
 6860 010c C0000000 		.4byte	.LFE96
 6861 0110 00000000 		.4byte	.LFB97
 6862 0114 B8000000 		.4byte	.LFE97
 6863 0118 00000000 		.4byte	.LFB98
 6864 011c 4A000000 		.4byte	.LFE98
 6865 0120 00000000 		.4byte	.LFB99
 6866 0124 18020000 		.4byte	.LFE99
 6867 0128 00000000 		.4byte	.LFB100
 6868 012c 68000000 		.4byte	.LFE100
 6869 0130 00000000 		.4byte	.LFB101
 6870 0134 50000000 		.4byte	.LFE101
 6871 0138 00000000 		.4byte	.LFB102
 6872 013c 3A000000 		.4byte	.LFE102
 6873 0140 00000000 		.4byte	0
 6874 0144 00000000 		.4byte	0
 6875              		.section	.debug_line,"",%progbits
 6876              	.Ldebug_line0:
 6877 0000 EA060000 		.section	.debug_str,"MS",%progbits,1
 6877      02005501 
 6877      00000201 
 6877      FB0E0D00 
 6877      01010101 
 6878              	.LASF133:
 6879 0000 64697265 		.ascii	"direction\000"
 6879      6374696F 
 6879      6E00
 6880              	.LASF23:
 6881 000a 52545552 		.ascii	"RTURN\000"
 6881      4E00
 6882              	.LASF36:
 6883 0010 44455354 		.ascii	"DEST_TEST\000"
 6883      5F544553 
 6883      5400
 6884              	.LASF141:
 6885 001a 71756164 		.ascii	"quad_diff1\000"
 6885      5F646966 
 6885      663100
 6886              	.LASF142:
 6887 0025 71756164 		.ascii	"quad_diff2\000"
 6887      5F646966 
 6887      663200
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 139


 6888              	.LASF92:
 6889 0030 51756164 		.ascii	"Quad_Dec_response\000"
 6889      5F446563 
 6889      5F726573 
 6889      706F6E73 
 6889      6500
 6890              	.LASF157:
 6891 0042 70726576 		.ascii	"prevVoltage\000"
 6891      566F6C74 
 6891      61676500 
 6892              	.LASF143:
 6893 004e 73746172 		.ascii	"start_turn_count\000"
 6893      745F7475 
 6893      726E5F63 
 6893      6F756E74 
 6893      00
 6894              	.LASF8:
 6895 005f 756E7369 		.ascii	"unsigned int\000"
 6895      676E6564 
 6895      20696E74 
 6895      00
 6896              	.LASF167:
 6897 006c 74726163 		.ascii	"track_mode\000"
 6897      6B5F6D6F 
 6897      646500
 6898              	.LASF11:
 6899 0077 5F5F696E 		.ascii	"__int32_t\000"
 6899      7433325F 
 6899      7400
 6900              	.LASF17:
 6901 0081 696E7431 		.ascii	"int16\000"
 6901      3600
 6902              	.LASF164:
 6903 0087 73797374 		.ascii	"system_state\000"
 6903      656D5F73 
 6903      74617465 
 6903      00
 6904              	.LASF22:
 6905 0094 4C545552 		.ascii	"LTURN\000"
 6905      4E00
 6906              	.LASF89:
 6907 009a 6973725F 		.ascii	"isr_adcTimer\000"
 6907      61646354 
 6907      696D6572 
 6907      00
 6908              	.LASF150:
 6909 00a7 74617267 		.ascii	"target_distance_quad\000"
 6909      65745F64 
 6909      69737461 
 6909      6E63655F 
 6909      71756164 
 6910              	.LASF25:
 6911 00bc 54524143 		.ascii	"TRACKING\000"
 6911      4B494E47 
 6911      00
 6912              	.LASF158:
 6913 00c5 70726576 		.ascii	"prevVoltage2\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 140


 6913      566F6C74 
 6913      61676532 
 6913      00
 6914              	.LASF172:
 6915 00d2 73656E73 		.ascii	"sensorsDisabled\000"
 6915      6F727344 
 6915      69736162 
 6915      6C656400 
 6916              	.LASF54:
 6917 00e2 7061636B 		.ascii	"packet_bytes\000"
 6917      65745F62 
 6917      79746573 
 6917      00
 6918              	.LASF50:
 6919 00ef 67325F78 		.ascii	"g2_xpos\000"
 6919      706F7300 
 6920              	.LASF29:
 6921 00f7 6D6F6465 		.ascii	"mode\000"
 6921      00
 6922              	.LASF137:
 6923 00fc 71756164 		.ascii	"quad_count1\000"
 6923      5F636F75 
 6923      6E743100 
 6924              	.LASF138:
 6925 0108 71756164 		.ascii	"quad_count2\000"
 6925      5F636F75 
 6925      6E743200 
 6926              	.LASF101:
 6927 0114 74726163 		.ascii	"trackLineU\000"
 6927      6B4C696E 
 6927      655500
 6928              	.LASF100:
 6929 011f 74726163 		.ascii	"trackLineZ\000"
 6929      6B4C696E 
 6929      655A00
 6930              	.LASF170:
 6931 012a 73706565 		.ascii	"speed\000"
 6931      6400
 6932              	.LASF33:
 6933 0130 53515541 		.ascii	"SQUARE_TRACK\000"
 6933      52455F54 
 6933      5241434B 
 6933      00
 6934              	.LASF129:
 6935 013d 666C6167 		.ascii	"flag_rf_transmission_active\000"
 6935      5F72665F 
 6935      7472616E 
 6935      736D6973 
 6935      73696F6E 
 6936              	.LASF130:
 6937 0159 666C6167 		.ascii	"flag_print_rf\000"
 6937      5F707269 
 6937      6E745F72 
 6937      6600
 6938              	.LASF166:
 6939 0167 6D6F7665 		.ascii	"movement_state\000"
 6939      6D656E74 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 141


 6939      5F737461 
 6939      746500
 6940              	.LASF26:
 6941 0176 54524143 		.ascii	"TRACKING_U\000"
 6941      4B494E47 
 6941      5F5500
 6942              	.LASF74:
 6943 0181 696E6974 		.ascii	"initForward\000"
 6943      466F7277 
 6943      61726400 
 6944              	.LASF53:
 6945 018d 67325F64 		.ascii	"g2_direction\000"
 6945      69726563 
 6945      74696F6E 
 6945      00
 6946              	.LASF84:
 6947 019a 6973725F 		.ascii	"isr_quad1\000"
 6947      71756164 
 6947      3100
 6948              	.LASF18:
 6949 01a4 666C6F61 		.ascii	"float\000"
 6949      7400
 6950              	.LASF61:
 6951 01aa 73657453 		.ascii	"setSpeed\000"
 6951      70656564 
 6951      00
 6952              	.LASF162:
 6953 01b3 75736242 		.ascii	"usbBuffer\000"
 6953      75666665 
 6953      7200
 6954              	.LASF38:
 6955 01bd 696E6465 		.ascii	"index\000"
 6955      7800
 6956              	.LASF21:
 6957 01c3 44524956 		.ascii	"DRIVE\000"
 6957      4500
 6958              	.LASF56:
 6959 01c9 73747269 		.ascii	"string_packet\000"
 6959      6E675F70 
 6959      61636B65 
 6959      7400
 6960              	.LASF91:
 6961 01d7 6368616E 		.ascii	"changeToBT\000"
 6961      6765546F 
 6961      425400
 6962              	.LASF64:
 6963 01e2 636F756E 		.ascii	"countsLeft\000"
 6963      74734C65 
 6963      667400
 6964              	.LASF69:
 6965 01ed 64726976 		.ascii	"driveForwards\000"
 6965      65466F72 
 6965      77617264 
 6965      7300
 6966              	.LASF71:
 6967 01fb 7475726E 		.ascii	"turnLeft\000"
 6967      4C656674 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 142


 6967      00
 6968              	.LASF7:
 6969 0204 6C6F6E67 		.ascii	"long long unsigned int\000"
 6969      206C6F6E 
 6969      6720756E 
 6969      7369676E 
 6969      65642069 
 6970              	.LASF126:
 6971 021b 666C6167 		.ascii	"flag_packet\000"
 6971      5F706163 
 6971      6B657400 
 6972              	.LASF111:
 6973 0227 66726F6E 		.ascii	"frontSensors\000"
 6973      7453656E 
 6973      736F7273 
 6973      00
 6974              	.LASF180:
 6975 0234 443A5C43 		.ascii	"D:\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 6975      53333031 
 6975      2D546561 
 6975      6D2D5265 
 6975      706F5C43 
 6976              	.LASF86:
 6977 0259 6973725F 		.ascii	"isr_turn_timer\000"
 6977      7475726E 
 6977      5F74696D 
 6977      657200
 6978              	.LASF90:
 6979 0268 6368616E 		.ascii	"changeToRF\000"
 6979      6765546F 
 6979      524600
 6980              	.LASF72:
 6981 0273 696E6974 		.ascii	"initTurnLeft\000"
 6981      5475726E 
 6981      4C656674 
 6981      00
 6982              	.LASF156:
 6983 0280 706F7274 		.ascii	"portOpen\000"
 6983      4F70656E 
 6983      00
 6984              	.LASF75:
 6985 0289 696E6974 		.ascii	"initBrake\000"
 6985      4272616B 
 6985      6500
 6986              	.LASF122:
 6987 0293 666C6167 		.ascii	"flag_ts_update\000"
 6987      5F74735F 
 6987      75706461 
 6987      746500
 6988              	.LASF103:
 6989 02a2 7363616C 		.ascii	"scalingFactor\000"
 6989      696E6746 
 6989      6163746F 
 6989      7200
 6990              	.LASF93:
 6991 02b0 6C656674 		.ascii	"leftSpeed\000"
 6991      53706565 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 143


 6991      6400
 6992              	.LASF121:
 6993 02ba 666C6167 		.ascii	"flag_ts_enc\000"
 6993      5F74735F 
 6993      656E6300 
 6994              	.LASF168:
 6995 02c6 62797465 		.ascii	"byteCount\000"
 6995      436F756E 
 6995      7400
 6996              	.LASF88:
 6997 02d0 62757474 		.ascii	"button\000"
 6997      6F6E00
 6998              	.LASF165:
 6999 02d7 70726576 		.ascii	"prev_movement_state\000"
 6999      5F6D6F76 
 6999      656D656E 
 6999      745F7374 
 6999      61746500 
 7000              	.LASF109:
 7001 02eb 73656E73 		.ascii	"sensorVals\000"
 7001      6F725661 
 7001      6C7300
 7002              	.LASF105:
 7003 02f6 72657375 		.ascii	"result_str\000"
 7003      6C745F73 
 7003      747200
 7004              	.LASF115:
 7005 0301 75617274 		.ascii	"uart_set_PWM\000"
 7005      5F736574 
 7005      5F50574D 
 7005      00
 7006              	.LASF78:
 7007 030e 696E6974 		.ascii	"inittrackLineZ\000"
 7007      74726163 
 7007      6B4C696E 
 7007      655A00
 7008              	.LASF40:
 7009 031d 726F626F 		.ascii	"robot_ypos\000"
 7009      745F7970 
 7009      6F7300
 7010              	.LASF120:
 7011 0328 74735F64 		.ascii	"ts_display\000"
 7011      6973706C 
 7011      617900
 7012              	.LASF102:
 7013 0333 7072696E 		.ascii	"print_ADC\000"
 7013      745F4144 
 7013      4300
 7014              	.LASF95:
 7015 033d 7363616C 		.ascii	"scalingLeft\000"
 7015      696E674C 
 7015      65667400 
 7016              	.LASF10:
 7017 0349 63686172 		.ascii	"char\000"
 7017      00
 7018              	.LASF44:
 7019 034e 67305F73 		.ascii	"g0_speed\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 144


 7019      70656564 
 7019      00
 7020              	.LASF147:
 7021 0357 72696768 		.ascii	"rightSpeedLimit\000"
 7021      74537065 
 7021      65644C69 
 7021      6D697400 
 7022              	.LASF57:
 7023 0367 7365744C 		.ascii	"setLeftDir\000"
 7023      65667444 
 7023      697200
 7024              	.LASF171:
 7025 0372 696E7374 		.ascii	"instructionCount\000"
 7025      72756374 
 7025      696F6E43 
 7025      6F756E74 
 7025      00
 7026              	.LASF51:
 7027 0383 67325F79 		.ascii	"g2_ypos\000"
 7027      706F7300 
 7028              	.LASF14:
 7029 038b 75696E74 		.ascii	"uint16\000"
 7029      313600
 7030              	.LASF16:
 7031 0392 696E7438 		.ascii	"int8\000"
 7031      00
 7032              	.LASF49:
 7033 0397 67315F64 		.ascii	"g1_direction\000"
 7033      69726563 
 7033      74696F6E 
 7033      00
 7034              	.LASF174:
 7035 03a4 70617468 		.ascii	"path\000"
 7035      00
 7036              	.LASF58:
 7037 03a9 73657452 		.ascii	"setRightDir\000"
 7037      69676874 
 7037      44697200 
 7038              	.LASF31:
 7039 03b5 43555256 		.ascii	"CURVE_TRACK\000"
 7039      455F5452 
 7039      41434B00 
 7040              	.LASF97:
 7041 03c1 696E7465 		.ascii	"interCalc\000"
 7041      7243616C 
 7041      6300
 7042              	.LASF135:
 7043 03cb 42545F45 		.ascii	"BT_ENABLED\000"
 7043      4E41424C 
 7043      454400
 7044              	.LASF63:
 7045 03d6 72696768 		.ascii	"right\000"
 7045      7400
 7046              	.LASF152:
 7047 03dc 696E6974 		.ascii	"initial_pos_valid\000"
 7047      69616C5F 
 7047      706F735F 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 145


 7047      76616C69 
 7047      6400
 7048              	.LASF6:
 7049 03ee 6C6F6E67 		.ascii	"long long int\000"
 7049      206C6F6E 
 7049      6720696E 
 7049      7400
 7050              	.LASF163:
 7051 03fc 62756666 		.ascii	"buffer_state\000"
 7051      65725F73 
 7051      74617465 
 7051      00
 7052              	.LASF46:
 7053 0409 67315F78 		.ascii	"g1_xpos\000"
 7053      706F7300 
 7054              	.LASF76:
 7055 0411 696E6974 		.ascii	"initTrack\000"
 7055      54726163 
 7055      6B00
 7056              	.LASF112:
 7057 041b 6E657874 		.ascii	"nextStep\000"
 7057      53746570 
 7057      00
 7058              	.LASF178:
 7059 0424 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7059      4320342E 
 7059      392E3320 
 7059      32303135 
 7059      30333033 
 7060 0457 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7060      20726576 
 7060      6973696F 
 7060      6E203232 
 7060      31323230 
 7061 048a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7061      66756E63 
 7061      74696F6E 
 7061      2D736563 
 7061      74696F6E 
 7062              	.LASF52:
 7063 04b2 67325F73 		.ascii	"g2_speed\000"
 7063      70656564 
 7063      00
 7064              	.LASF43:
 7065 04bb 67305F79 		.ascii	"g0_ypos\000"
 7065      706F7300 
 7066              	.LASF80:
 7067 04c3 72665F63 		.ascii	"rf_char\000"
 7067      68617200 
 7068              	.LASF173:
 7069 04cb 666F6F64 		.ascii	"food_list\000"
 7069      5F6C6973 
 7069      7400
 7070              	.LASF134:
 7071 04d5 42494E5F 		.ascii	"BIN_ENABLED\000"
 7071      454E4142 
 7071      4C454400 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 146


 7072              	.LASF94:
 7073 04e1 72696768 		.ascii	"rightSpeed\000"
 7073      74537065 
 7073      656400
 7074              	.LASF119:
 7075 04ec 74735F73 		.ascii	"ts_speed\000"
 7075      70656564 
 7075      00
 7076              	.LASF15:
 7077 04f5 75696E74 		.ascii	"uint32\000"
 7077      333200
 7078              	.LASF177:
 7079 04fc 696E7374 		.ascii	"instructions\000"
 7079      72756374 
 7079      696F6E73 
 7079      00
 7080              	.LASF65:
 7081 0509 636F756E 		.ascii	"countsRight\000"
 7081      74735269 
 7081      67687400 
 7082              	.LASF181:
 7083 0515 64617461 		.ascii	"data_main\000"
 7083      5F6D6169 
 7083      6E00
 7084              	.LASF104:
 7085 051f 636F6E76 		.ascii	"converted_val\000"
 7085      65727465 
 7085      645F7661 
 7085      6C00
 7086              	.LASF175:
 7087 052d 73746172 		.ascii	"start\000"
 7087      7400
 7088              	.LASF37:
 7089 0533 72737369 		.ascii	"rssi\000"
 7089      00
 7090              	.LASF99:
 7091 0538 74726163 		.ascii	"trackLine\000"
 7091      6B4C696E 
 7091      6500
 7092              	.LASF45:
 7093 0542 67305F64 		.ascii	"g0_direction\000"
 7093      69726563 
 7093      74696F6E 
 7093      00
 7094              	.LASF131:
 7095 054f 666C6167 		.ascii	"flag_receive_ADC\000"
 7095      5F726563 
 7095      65697665 
 7095      5F414443 
 7095      00
 7096              	.LASF24:
 7097 0560 53544F50 		.ascii	"STOPPED\000"
 7097      50454400 
 7098              	.LASF81:
 7099 0568 42545F72 		.ascii	"BT_rxInt\000"
 7099      78496E74 
 7099      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 147


 7100              	.LASF20:
 7101 0571 6C6F6E67 		.ascii	"long double\000"
 7101      20646F75 
 7101      626C6500 
 7102              	.LASF79:
 7103 057d 7278496E 		.ascii	"rxInt\000"
 7103      7400
 7104              	.LASF144:
 7105 0583 6C656674 		.ascii	"left_duty_cycle\000"
 7105      5F647574 
 7105      795F6379 
 7105      636C6500 
 7106              	.LASF123:
 7107 0593 666C6167 		.ascii	"flag_ts_speed\000"
 7107      5F74735F 
 7107      73706565 
 7107      6400
 7108              	.LASF128:
 7109 05a1 64617461 		.ascii	"dataready_flag\000"
 7109      72656164 
 7109      795F666C 
 7109      616700
 7110              	.LASF154:
 7111 05b0 696E6974 		.ascii	"initial_y_pos\000"
 7111      69616C5F 
 7111      795F706F 
 7111      7300
 7112              	.LASF125:
 7113 05be 666C6167 		.ascii	"flag_rx\000"
 7113      5F727800 
 7114              	.LASF2:
 7115 05c6 73686F72 		.ascii	"short int\000"
 7115      7420696E 
 7115      7400
 7116              	.LASF132:
 7117 05d0 6164635F 		.ascii	"adc_result\000"
 7117      72657375 
 7117      6C7400
 7118              	.LASF136:
 7119 05db 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7119      5F63616C 
 7119      635F7768 
 7119      65656C73 
 7119      70656564 
 7120              	.LASF4:
 7121 05f0 6C6F6E67 		.ascii	"long int\000"
 7121      20696E74 
 7121      00
 7122              	.LASF73:
 7123 05f9 696E6974 		.ascii	"initTurnRight\000"
 7123      5475726E 
 7123      52696768 
 7123      7400
 7124              	.LASF32:
 7125 0607 555F5452 		.ascii	"U_TRACK\000"
 7125      41434B00 
 7126              	.LASF116:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 148


 7127 060f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7127      52784275 
 7127      66666572 
 7127      00
 7128              	.LASF107:
 7129 061c 7072696E 		.ascii	"printString\000"
 7129      74537472 
 7129      696E6700 
 7130              	.LASF118:
 7131 0628 74735F75 		.ascii	"ts_update\000"
 7131      70646174 
 7131      6500
 7132              	.LASF30:
 7133 0632 4E4F5F54 		.ascii	"NO_TRACK\000"
 7133      5241434B 
 7133      00
 7134              	.LASF146:
 7135 063b 6C656674 		.ascii	"leftSpeedLimit\000"
 7135      53706565 
 7135      644C696D 
 7135      697400
 7136              	.LASF27:
 7137 064a 54524143 		.ascii	"TRACKING_SOFT\000"
 7137      4B494E47 
 7137      5F534F46 
 7137      5400
 7138              	.LASF62:
 7139 0658 6C656674 		.ascii	"left\000"
 7139      00
 7140              	.LASF149:
 7141 065d 61636375 		.ascii	"accum_dist\000"
 7141      6D5F6469 
 7141      737400
 7142              	.LASF113:
 7143 0668 75736250 		.ascii	"usbPutString\000"
 7143      75745374 
 7143      72696E67 
 7143      00
 7144              	.LASF70:
 7145 0675 7475726E 		.ascii	"turnRight\000"
 7145      52696768 
 7145      7400
 7146              	.LASF47:
 7147 067f 67315F79 		.ascii	"g1_ypos\000"
 7147      706F7300 
 7148              	.LASF83:
 7149 0687 6164635F 		.ascii	"adc_isr\000"
 7149      69737200 
 7150              	.LASF108:
 7151 068f 72656164 		.ascii	"readFrontSensors\000"
 7151      46726F6E 
 7151      7453656E 
 7151      736F7273 
 7151      00
 7152              	.LASF151:
 7153 06a0 71756164 		.ascii	"quad_per_cm\000"
 7153      5F706572 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 149


 7153      5F636D00 
 7154              	.LASF148:
 7155 06ac 74617267 		.ascii	"target_distance_cm\000"
 7155      65745F64 
 7155      69737461 
 7155      6E63655F 
 7155      636D00
 7156              	.LASF9:
 7157 06bf 73697A65 		.ascii	"sizetype\000"
 7157      74797065 
 7157      00
 7158              	.LASF5:
 7159 06c8 6C6F6E67 		.ascii	"long unsigned int\000"
 7159      20756E73 
 7159      69676E65 
 7159      6420696E 
 7159      7400
 7160              	.LASF55:
 7161 06da 62797465 		.ascii	"byte_packet\000"
 7161      5F706163 
 7161      6B657400 
 7162              	.LASF12:
 7163 06e6 696E7433 		.ascii	"int32_t\000"
 7163      325F7400 
 7164              	.LASF169:
 7165 06ee 7061636B 		.ascii	"packet\000"
 7165      657400
 7166              	.LASF39:
 7167 06f5 726F626F 		.ascii	"robot_xpos\000"
 7167      745F7870 
 7167      6F7300
 7168              	.LASF68:
 7169 0700 6272616B 		.ascii	"brakeMotor\000"
 7169      654D6F74 
 7169      6F7200
 7170              	.LASF161:
 7171 070b 656E7472 		.ascii	"entry\000"
 7171      7900
 7172              	.LASF1:
 7173 0711 756E7369 		.ascii	"unsigned char\000"
 7173      676E6564 
 7173      20636861 
 7173      7200
 7174              	.LASF160:
 7175 071f 6C696E65 		.ascii	"line\000"
 7175      00
 7176              	.LASF87:
 7177 0724 53746F70 		.ascii	"Stop_on_line\000"
 7177      5F6F6E5F 
 7177      6C696E65 
 7177      00
 7178              	.LASF117:
 7179 0731 74735F65 		.ascii	"ts_enc\000"
 7179      6E6300
 7180              	.LASF155:
 7181 0738 6272616B 		.ascii	"brakeFlag\000"
 7181      65466C61 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 150


 7181      6700
 7182              	.LASF124:
 7183 0742 666C6167 		.ascii	"flag_ts_display\000"
 7183      5F74735F 
 7183      64697370 
 7183      6C617900 
 7184              	.LASF28:
 7185 0752 73746174 		.ascii	"state\000"
 7185      6500
 7186              	.LASF60:
 7187 0758 72657665 		.ascii	"reverseDirection\000"
 7187      72736544 
 7187      69726563 
 7187      74696F6E 
 7187      00
 7188              	.LASF66:
 7189 0769 6272616B 		.ascii	"brakeLeft\000"
 7189      654C6566 
 7189      7400
 7190              	.LASF159:
 7191 0773 64697370 		.ascii	"displaystring\000"
 7191      6C617973 
 7191      7472696E 
 7191      6700
 7192              	.LASF139:
 7193 0781 6C617374 		.ascii	"last_quad_count1\000"
 7193      5F717561 
 7193      645F636F 
 7193      756E7431 
 7193      00
 7194              	.LASF140:
 7195 0792 6C617374 		.ascii	"last_quad_count2\000"
 7195      5F717561 
 7195      645F636F 
 7195      756E7432 
 7195      00
 7196              	.LASF176:
 7197 07a3 64657374 		.ascii	"destination\000"
 7197      696E6174 
 7197      696F6E00 
 7198              	.LASF114:
 7199 07af 75736250 		.ascii	"usbPutChar\000"
 7199      75744368 
 7199      617200
 7200              	.LASF0:
 7201 07ba 7369676E 		.ascii	"signed char\000"
 7201      65642063 
 7201      68617200 
 7202              	.LASF3:
 7203 07c6 73686F72 		.ascii	"short unsigned int\000"
 7203      7420756E 
 7203      7369676E 
 7203      65642069 
 7203      6E7400
 7204              	.LASF41:
 7205 07d9 726F626F 		.ascii	"robot_orientation\000"
 7205      745F6F72 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 151


 7205      69656E74 
 7205      6174696F 
 7205      6E00
 7206              	.LASF34:
 7207 07eb 51554144 		.ascii	"QUAD_STOP\000"
 7207      5F53544F 
 7207      5000
 7208              	.LASF110:
 7209 07f5 6D61696E 		.ascii	"main\000"
 7209      00
 7210              	.LASF82:
 7211 07fa 42545F74 		.ascii	"BT_txInt\000"
 7211      78496E74 
 7211      00
 7212              	.LASF98:
 7213 0803 6E657874 		.ascii	"nextSpeed\000"
 7213      53706565 
 7213      6400
 7214              	.LASF85:
 7215 080d 64697374 		.ascii	"dist\000"
 7215      00
 7216              	.LASF13:
 7217 0812 75696E74 		.ascii	"uint8\000"
 7217      3800
 7218              	.LASF19:
 7219 0818 646F7562 		.ascii	"double\000"
 7219      6C6500
 7220              	.LASF145:
 7221 081f 72696768 		.ascii	"right_duty_cycle\000"
 7221      745F6475 
 7221      74795F63 
 7221      79636C65 
 7221      00
 7222              	.LASF35:
 7223 0830 52465F53 		.ascii	"RF_STOP\000"
 7223      544F5000 
 7224              	.LASF59:
 7225 0838 68616E64 		.ascii	"handle_rx_binary\000"
 7225      6C655F72 
 7225      785F6269 
 7225      6E617279 
 7225      00
 7226              	.LASF106:
 7227 0849 7072696E 		.ascii	"print_RF\000"
 7227      745F5246 
 7227      00
 7228              	.LASF42:
 7229 0852 67305F78 		.ascii	"g0_xpos\000"
 7229      706F7300 
 7230              	.LASF96:
 7231 085a 7363616C 		.ascii	"scalingRight\000"
 7231      696E6752 
 7231      69676874 
 7231      00
 7232              	.LASF127:
 7233 0867 666C6167 		.ascii	"flag_KB_string\000"
 7233      5F4B425F 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccZ0vRkq.s 			page 152


 7233      73747269 
 7233      6E6700
 7234              	.LASF48:
 7235 0876 67315F73 		.ascii	"g1_speed\000"
 7235      70656564 
 7235      00
 7236              	.LASF179:
 7237 087f 2E5C6D61 		.ascii	".\\main.c\000"
 7237      696E2E63 
 7237      00
 7238              	.LASF153:
 7239 0888 696E6974 		.ascii	"initial_x_pos\000"
 7239      69616C5F 
 7239      785F706F 
 7239      7300
 7240              	.LASF67:
 7241 0896 6272616B 		.ascii	"brakeRight\000"
 7241      65526967 
 7241      687400
 7242              	.LASF77:
 7243 08a1 696E6974 		.ascii	"initTrackU\000"
 7243      54726163 
 7243      6B5500
 7244              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
