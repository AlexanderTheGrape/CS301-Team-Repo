ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	start_turn_count
 165              		.align	1
 166              		.type	start_turn_count, %object
 167              		.size	start_turn_count, 2
 168              	start_turn_count:
 169 0024 0000     		.space	2
 170              		.global	left_duty_cycle
 171              		.align	1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 4


 172              		.type	left_duty_cycle, %object
 173              		.size	left_duty_cycle, 2
 174              	left_duty_cycle:
 175 0026 0000     		.space	2
 176              		.global	right_duty_cycle
 177              		.align	1
 178              		.type	right_duty_cycle, %object
 179              		.size	right_duty_cycle, 2
 180              	right_duty_cycle:
 181 0028 0000     		.space	2
 182              		.global	leftSpeedLimit
 183              		.align	1
 184              		.type	leftSpeedLimit, %object
 185              		.size	leftSpeedLimit, 2
 186              	leftSpeedLimit:
 187 002a 0000     		.space	2
 188              		.global	rightSpeedLimit
 189              		.align	1
 190              		.type	rightSpeedLimit, %object
 191              		.size	rightSpeedLimit, 2
 192              	rightSpeedLimit:
 193 002c 0000     		.space	2
 194              		.global	target_distance_cm
 195              		.data
 196              		.align	1
 197              		.type	target_distance_cm, %object
 198              		.size	target_distance_cm, 2
 199              	target_distance_cm:
 200 0002 6400     		.short	100
 201              		.global	accum_dist
 202              		.bss
 203              		.align	1
 204              		.type	accum_dist, %object
 205              		.size	accum_dist, 2
 206              	accum_dist:
 207 002e 0000     		.space	2
 208              		.global	target_distance_quad
 209              		.align	1
 210              		.type	target_distance_quad, %object
 211              		.size	target_distance_quad, 2
 212              	target_distance_quad:
 213 0030 0000     		.space	2
 214              		.global	quad_per_cm
 215              		.data
 216              		.align	2
 217              		.type	quad_per_cm, %object
 218              		.size	quad_per_cm, 4
 219              	quad_per_cm:
 220 0004 F0A73241 		.word	1093838832
 221              		.global	initial_pos_valid
 222              		.bss
 223              		.type	initial_pos_valid, %object
 224              		.size	initial_pos_valid, 1
 225              	initial_pos_valid:
 226 0032 00       		.space	1
 227              		.global	initial_x_pos
 228 0033 00       		.align	1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 5


 229              		.type	initial_x_pos, %object
 230              		.size	initial_x_pos, 2
 231              	initial_x_pos:
 232 0034 0000     		.space	2
 233              		.global	initial_y_pos
 234              		.align	1
 235              		.type	initial_y_pos, %object
 236              		.size	initial_y_pos, 2
 237              	initial_y_pos:
 238 0036 0000     		.space	2
 239              		.comm	brakeFlag,1,1
 240              		.global	portOpen
 241              		.data
 242              		.type	portOpen, %object
 243              		.size	portOpen, 1
 244              	portOpen:
 245 0008 01       		.byte	1
 246              		.comm	prevVoltage,2,2
 247              		.comm	prevVoltage2,2,2
 248              		.global	displaystring
 249 0009 000000   		.align	2
 250              		.type	displaystring, %object
 251              		.size	displaystring, 64
 252              	displaystring:
 253 000c 43533330 		.ascii	"CS301 2016\012\000"
 253      31203230 
 253      31360A00 
 254 0018 00000000 		.space	52
 254      00000000 
 254      00000000 
 254      00000000 
 254      00000000 
 255              		.comm	line,64,4
 256              		.comm	entry,64,4
 257              		.comm	usbBuffer,64,4
 258              		.comm	buffer_state,32,4
 259              		.comm	system_state,32,4
 260              		.global	prev_movement_state
 261              		.type	prev_movement_state, %object
 262              		.size	prev_movement_state, 1
 263              	prev_movement_state:
 264 004c 03       		.byte	3
 265              		.global	movement_state
 266              		.type	movement_state, %object
 267              		.size	movement_state, 1
 268              	movement_state:
 269 004d 03       		.byte	3
 270              		.global	track_mode
 271              		.bss
 272              		.type	track_mode, %object
 273              		.size	track_mode, 1
 274              	track_mode:
 275 0038 00       		.space	1
 276              		.global	byteCount
 277              		.type	byteCount, %object
 278              		.size	byteCount, 1
 279              	byteCount:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 6


 280 0039 00       		.space	1
 281              		.comm	packet,2,4
 282              		.global	speed
 283              		.data
 284 004e 0000     		.align	3
 285              		.type	speed, %object
 286              		.size	speed, 8
 287              	speed:
 288 0050 00000000 		.word	0
 289 0054 00003040 		.word	1076887552
 290              		.section	.text.handle_rx_binary,"ax",%progbits
 291              		.align	2
 292              		.global	handle_rx_binary
 293              		.thumb
 294              		.thumb_func
 295              		.type	handle_rx_binary, %function
 296              	handle_rx_binary:
 297              	.LFB63:
 298              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 7


  39:.\main.c      **** #define QUAD_RATIO 0.99556
  40:.\main.c      **** 
  41:.\main.c      **** void changeToRF();
  42:.\main.c      **** void changeToBT();
  43:.\main.c      **** 
  44:.\main.c      **** void handle_rx_binary()
  45:.\main.c      **** {
 299              		.loc 1 45 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 32
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 89B0     		sub	sp, sp, #36
 308              		.cfi_def_cfa_offset 40
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  46:.\main.c      ****     if(flag_rx == 1)
 311              		.loc 1 46 0
 312 0006 524B     		ldr	r3, .L21
 313 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 314 000a 012B     		cmp	r3, #1
 315 000c 40F09A80 		bne	.L1
 316              	.LBB2:
  47:.\main.c      ****     {    
  48:.\main.c      ****         flag_rx = 0;
 317              		.loc 1 48 0
 318 0010 4F4B     		ldr	r3, .L21
 319 0012 0022     		movs	r2, #0
 320 0014 1A70     		strb	r2, [r3]
  49:.\main.c      ****         
  50:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 321              		.loc 1 50 0
 322 0016 4F4B     		ldr	r3, .L21+4
 323 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 324 001a 1B02     		lsls	r3, r3, #8
 325 001c 9AB2     		uxth	r2, r3
 326 001e 4D4B     		ldr	r3, .L21+4
 327 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 0022 9BB2     		uxth	r3, r3
 329 0024 1343     		orrs	r3, r3, r2
 330 0026 9BB2     		uxth	r3, r3
 331 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  51:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  52:.\main.c      ****         char byte_packet[12];
  53:.\main.c      ****         char string_packet[12];
  54:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  55:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  56:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  57:.\main.c      ****         //usbPutString(string_packet);
  58:.\main.c      ****        // usbPutString(string_packet);
  59:.\main.c      ****        // usbPutChar(' ');
  60:.\main.c      ****         
  61:.\main.c      ****         switch(byteCount)
 332              		.loc 1 61 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 8


 333 002a 4B4B     		ldr	r3, .L21+8
 334 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335 002e 043B     		subs	r3, r3, #4
 336 0030 1E2B     		cmp	r3, #30
 337 0032 00F28780 		bhi	.L1
 338 0036 01A2     		adr	r2, .L5
 339 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 340              		.p2align 2
 341              	.L5:
 342 003c B9000000 		.word	.L4+1
 343 0040 45010000 		.word	.L1+1
 344 0044 CD000000 		.word	.L6+1
 345 0048 45010000 		.word	.L1+1
 346 004c D5000000 		.word	.L7+1
 347 0050 45010000 		.word	.L1+1
 348 0054 DD000000 		.word	.L8+1
 349 0058 45010000 		.word	.L1+1
 350 005c E5000000 		.word	.L9+1
 351 0060 45010000 		.word	.L1+1
 352 0064 ED000000 		.word	.L10+1
 353 0068 45010000 		.word	.L1+1
 354 006c F5000000 		.word	.L11+1
 355 0070 45010000 		.word	.L1+1
 356 0074 FD000000 		.word	.L12+1
 357 0078 45010000 		.word	.L1+1
 358 007c 05010000 		.word	.L13+1
 359 0080 45010000 		.word	.L1+1
 360 0084 0D010000 		.word	.L14+1
 361 0088 45010000 		.word	.L1+1
 362 008c 15010000 		.word	.L15+1
 363 0090 45010000 		.word	.L1+1
 364 0094 1D010000 		.word	.L16+1
 365 0098 45010000 		.word	.L1+1
 366 009c 25010000 		.word	.L17+1
 367 00a0 45010000 		.word	.L1+1
 368 00a4 2D010000 		.word	.L18+1
 369 00a8 45010000 		.word	.L1+1
 370 00ac 35010000 		.word	.L19+1
 371 00b0 45010000 		.word	.L1+1
 372 00b4 3D010000 		.word	.L20+1
 373              		.p2align 1
 374              	.L4:
  62:.\main.c      ****         {
  63:.\main.c      ****             case 4:
  64:.\main.c      ****                 //usbPutString("RSSI:");
  65:.\main.c      ****                 //usbPutString(byte_packet);
  66:.\main.c      ****                 //usbPutString("\r\n");
  67:.\main.c      ****                 buffer_state.rssi = packet[0];
 375              		.loc 1 67 0
 376 00b8 264B     		ldr	r3, .L21+4
 377 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 378 00bc DAB2     		uxtb	r2, r3
 379 00be 274B     		ldr	r3, .L21+12
 380 00c0 1A70     		strb	r2, [r3]
  68:.\main.c      ****                 buffer_state.index = packet[1];
 381              		.loc 1 68 0
 382 00c2 244B     		ldr	r3, .L21+4
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 9


 383 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 384 00c6 254B     		ldr	r3, .L21+12
 385 00c8 5A70     		strb	r2, [r3, #1]
  69:.\main.c      ****             break;
 386              		.loc 1 69 0
 387 00ca 3BE0     		b	.L1
 388              	.L6:
  70:.\main.c      ****             case 6:
  71:.\main.c      ****                 //usbPutString("robot_x:");
  72:.\main.c      ****                 //usbPutString(string_packet);
  73:.\main.c      ****                 //usbPutString("\r\n");
  74:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 389              		.loc 1 74 0
 390 00cc FA8B     		ldrh	r2, [r7, #30]
 391 00ce 234B     		ldr	r3, .L21+12
 392 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  75:.\main.c      ****             break;
 393              		.loc 1 75 0
 394 00d2 37E0     		b	.L1
 395              	.L7:
  76:.\main.c      ****             case 8:
  77:.\main.c      ****                 //usbPutString("robot_y:");
  78:.\main.c      ****                 //usbPutString(string_packet);
  79:.\main.c      ****                 //usbPutString("\r\n");
  80:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 396              		.loc 1 80 0
 397 00d4 FA8B     		ldrh	r2, [r7, #30]
 398 00d6 214B     		ldr	r3, .L21+12
 399 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  81:.\main.c      ****             break;
 400              		.loc 1 81 0
 401 00da 33E0     		b	.L1
 402              	.L8:
  82:.\main.c      ****             case 10:
  83:.\main.c      ****                 //usbPutString("robot_dir:");
  84:.\main.c      ****                 //usbPutString(string_packet);
  85:.\main.c      ****                 //usbPutString("\r\n");
  86:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 403              		.loc 1 86 0
 404 00dc FA8B     		ldrh	r2, [r7, #30]
 405 00de 1F4B     		ldr	r3, .L21+12
 406 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  87:.\main.c      ****             break;
 407              		.loc 1 87 0
 408 00e2 2FE0     		b	.L1
 409              	.L9:
  88:.\main.c      ****             case 12:
  89:.\main.c      ****                 //usbPutString("g0_x:");
  90:.\main.c      ****                 //usbPutString(string_packet);
  91:.\main.c      ****                 //usbPutString("\r\n");
  92:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 410              		.loc 1 92 0
 411 00e4 FA8B     		ldrh	r2, [r7, #30]
 412 00e6 1D4B     		ldr	r3, .L21+12
 413 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  93:.\main.c      ****             break;
 414              		.loc 1 93 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 10


 415 00ea 2BE0     		b	.L1
 416              	.L10:
  94:.\main.c      ****             case 14:
  95:.\main.c      ****                 //usbPutString("g0_y:");
  96:.\main.c      ****                 //usbPutString(string_packet);
  97:.\main.c      ****                 //usbPutString("\r\n");
  98:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 417              		.loc 1 98 0
 418 00ec FA8B     		ldrh	r2, [r7, #30]
 419 00ee 1B4B     		ldr	r3, .L21+12
 420 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  99:.\main.c      ****             break;
 421              		.loc 1 99 0
 422 00f2 27E0     		b	.L1
 423              	.L11:
 100:.\main.c      ****             case 16:
 101:.\main.c      ****                 //usbPutString("g0_speed:");
 102:.\main.c      ****                 //usbPutString(string_packet);
 103:.\main.c      ****                 //usbPutString("\r\n");
 104:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 424              		.loc 1 104 0
 425 00f4 FA8B     		ldrh	r2, [r7, #30]
 426 00f6 194B     		ldr	r3, .L21+12
 427 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 105:.\main.c      ****             break;
 428              		.loc 1 105 0
 429 00fa 23E0     		b	.L1
 430              	.L12:
 106:.\main.c      ****             case 18:
 107:.\main.c      ****                 //usbPutString("g1_dir:");
 108:.\main.c      ****                 //usbPutString(string_packet);
 109:.\main.c      ****                 //usbPutString("\r\n");
 110:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 431              		.loc 1 110 0
 432 00fc FA8B     		ldrh	r2, [r7, #30]
 433 00fe 174B     		ldr	r3, .L21+12
 434 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 111:.\main.c      ****             break;
 435              		.loc 1 111 0
 436 0102 1FE0     		b	.L1
 437              	.L13:
 112:.\main.c      ****             case 20:
 113:.\main.c      ****                 //usbPutString("g1_x:");
 114:.\main.c      ****                 //usbPutString(string_packet);
 115:.\main.c      ****                 //usbPutString("\r\n");
 116:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 438              		.loc 1 116 0
 439 0104 FA8B     		ldrh	r2, [r7, #30]
 440 0106 154B     		ldr	r3, .L21+12
 441 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 117:.\main.c      ****             break;
 442              		.loc 1 117 0
 443 010a 1BE0     		b	.L1
 444              	.L14:
 118:.\main.c      ****             case 22:
 119:.\main.c      ****                 //usbPutString("g1_y:");
 120:.\main.c      ****                 //usbPutString(string_packet);
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 11


 121:.\main.c      ****                 //usbPutString("\r\n");
 122:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 445              		.loc 1 122 0
 446 010c FA8B     		ldrh	r2, [r7, #30]
 447 010e 134B     		ldr	r3, .L21+12
 448 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 123:.\main.c      ****             break;
 449              		.loc 1 123 0
 450 0112 17E0     		b	.L1
 451              	.L15:
 124:.\main.c      ****             case 24:
 125:.\main.c      ****                 //usbPutString("g1_speed:");
 126:.\main.c      ****                 //usbPutString(string_packet);
 127:.\main.c      ****                 //usbPutString("\r\n");
 128:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 452              		.loc 1 128 0
 453 0114 FA8B     		ldrh	r2, [r7, #30]
 454 0116 114B     		ldr	r3, .L21+12
 455 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 129:.\main.c      ****             break;
 456              		.loc 1 129 0
 457 011a 13E0     		b	.L1
 458              	.L16:
 130:.\main.c      ****             case 26:
 131:.\main.c      ****                 //usbPutString("g1_dir:");
 132:.\main.c      ****                 //usbPutString(string_packet);
 133:.\main.c      ****                 //usbPutString("\r\n");
 134:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 459              		.loc 1 134 0
 460 011c FA8B     		ldrh	r2, [r7, #30]
 461 011e 0F4B     		ldr	r3, .L21+12
 462 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 135:.\main.c      ****             break;
 463              		.loc 1 135 0
 464 0122 0FE0     		b	.L1
 465              	.L17:
 136:.\main.c      ****             case 28:
 137:.\main.c      ****                 //usbPutString("g2_x:");
 138:.\main.c      ****                 //usbPutString(string_packet);
 139:.\main.c      ****                 //usbPutString("\r\n");
 140:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 466              		.loc 1 140 0
 467 0124 FA8B     		ldrh	r2, [r7, #30]
 468 0126 0D4B     		ldr	r3, .L21+12
 469 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 141:.\main.c      ****             break;
 470              		.loc 1 141 0
 471 012a 0BE0     		b	.L1
 472              	.L18:
 142:.\main.c      ****             case 30:
 143:.\main.c      ****                 //usbPutString("g2_y:");
 144:.\main.c      ****                 //usbPutString(string_packet);
 145:.\main.c      ****                 //usbPutString("\r\n");
 146:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 473              		.loc 1 146 0
 474 012c FA8B     		ldrh	r2, [r7, #30]
 475 012e 0B4B     		ldr	r3, .L21+12
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 12


 476 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 147:.\main.c      ****             break;
 477              		.loc 1 147 0
 478 0132 07E0     		b	.L1
 479              	.L19:
 148:.\main.c      ****             case 32:
 149:.\main.c      ****                 //usbPutString("g1_speed:");
 150:.\main.c      ****                 //usbPutString(string_packet);
 151:.\main.c      ****                 //usbPutString("\r\n");
 152:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 480              		.loc 1 152 0
 481 0134 FA8B     		ldrh	r2, [r7, #30]
 482 0136 094B     		ldr	r3, .L21+12
 483 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 153:.\main.c      ****             break;
 484              		.loc 1 153 0
 485 013a 03E0     		b	.L1
 486              	.L20:
 154:.\main.c      ****             case 34:
 155:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 487              		.loc 1 155 0
 488 013c FA8B     		ldrh	r2, [r7, #30]
 489 013e 074B     		ldr	r3, .L21+12
 490 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 156:.\main.c      ****                 //usbPutString("g2_dir:");
 157:.\main.c      ****                 //usbPutString(string_packet);
 158:.\main.c      ****                 //usbPutString("\r\n");
 159:.\main.c      ****                 
 160:.\main.c      ****             break;
 491              		.loc 1 160 0
 492 0142 00BF     		nop
 493              	.L1:
 494              	.LBE2:
 161:.\main.c      ****         }
 162:.\main.c      ****     }
 163:.\main.c      **** }
 495              		.loc 1 163 0
 496 0144 2437     		adds	r7, r7, #36
 497              		.cfi_def_cfa_offset 4
 498 0146 BD46     		mov	sp, r7
 499              		.cfi_def_cfa_register 13
 500              		@ sp needed
 501 0148 5DF8047B 		ldr	r7, [sp], #4
 502              		.cfi_restore 7
 503              		.cfi_def_cfa_offset 0
 504 014c 7047     		bx	lr
 505              	.L22:
 506 014e 00BF     		.align	2
 507              	.L21:
 508 0150 00000000 		.word	flag_rx
 509 0154 00000000 		.word	packet
 510 0158 00000000 		.word	byteCount
 511 015c 00000000 		.word	buffer_state
 512              		.cfi_endproc
 513              	.LFE63:
 514              		.size	handle_rx_binary, .-handle_rx_binary
 515              		.section	.text.setLeftDir,"ax",%progbits
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 13


 516              		.align	2
 517              		.global	setLeftDir
 518              		.thumb
 519              		.thumb_func
 520              		.type	setLeftDir, %function
 521              	setLeftDir:
 522              	.LFB64:
 164:.\main.c      **** 
 165:.\main.c      **** 
 166:.\main.c      **** 
 167:.\main.c      **** void setLeftDir(uint8 dir)
 168:.\main.c      **** {
 523              		.loc 1 168 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0000 80B5     		push	{r7, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 82B0     		sub	sp, sp, #8
 532              		.cfi_def_cfa_offset 16
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 0346     		mov	r3, r0
 536 0008 FB71     		strb	r3, [r7, #7]
 169:.\main.c      ****     M2_IN2_Write(dir);
 537              		.loc 1 169 0
 538 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 539 000c 1846     		mov	r0, r3
 540 000e FFF7FEFF 		bl	M2_IN2_Write
 170:.\main.c      **** }
 541              		.loc 1 170 0
 542 0012 0837     		adds	r7, r7, #8
 543              		.cfi_def_cfa_offset 8
 544 0014 BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0016 80BD     		pop	{r7, pc}
 548              		.cfi_endproc
 549              	.LFE64:
 550              		.size	setLeftDir, .-setLeftDir
 551              		.section	.text.setRightDir,"ax",%progbits
 552              		.align	2
 553              		.global	setRightDir
 554              		.thumb
 555              		.thumb_func
 556              		.type	setRightDir, %function
 557              	setRightDir:
 558              	.LFB65:
 171:.\main.c      **** 
 172:.\main.c      **** void setRightDir(uint8 dir)
 173:.\main.c      **** {
 559              		.loc 1 173 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 14


 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 82B0     		sub	sp, sp, #8
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 0346     		mov	r3, r0
 572 0008 FB71     		strb	r3, [r7, #7]
 174:.\main.c      ****     M1_IN2_Write(dir);
 573              		.loc 1 174 0
 574 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 575 000c 1846     		mov	r0, r3
 576 000e FFF7FEFF 		bl	M1_IN2_Write
 175:.\main.c      **** }
 577              		.loc 1 175 0
 578 0012 0837     		adds	r7, r7, #8
 579              		.cfi_def_cfa_offset 8
 580 0014 BD46     		mov	sp, r7
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 0016 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE65:
 586              		.size	setRightDir, .-setRightDir
 587              		.section	.rodata
 588              		.align	2
 589              	.LC0:
 590 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 590      2025640D 
 590      0A00
 591              		.section	.text.reverseDirection,"ax",%progbits
 592              		.align	2
 593              		.global	reverseDirection
 594              		.thumb
 595              		.thumb_func
 596              		.type	reverseDirection, %function
 597              	reverseDirection:
 598              	.LFB66:
 176:.\main.c      **** 
 177:.\main.c      **** void reverseDirection()
 178:.\main.c      **** {
 599              		.loc 1 178 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 16
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603 0000 80B5     		push	{r7, lr}
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 84B0     		sub	sp, sp, #16
 608              		.cfi_def_cfa_offset 24
 609 0004 00AF     		add	r7, sp, #0
 610              		.cfi_def_cfa_register 7
 179:.\main.c      ****     direction = !direction;
 611              		.loc 1 179 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 15


 612 0006 114B     		ldr	r3, .L26
 613 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 000a 002B     		cmp	r3, #0
 615 000c 0CBF     		ite	eq
 616 000e 0123     		moveq	r3, #1
 617 0010 0023     		movne	r3, #0
 618 0012 DBB2     		uxtb	r3, r3
 619 0014 1A46     		mov	r2, r3
 620 0016 0D4B     		ldr	r3, .L26
 621 0018 1A70     		strb	r2, [r3]
 180:.\main.c      ****     setLeftDir(direction);
 622              		.loc 1 180 0
 623 001a 0C4B     		ldr	r3, .L26
 624 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 001e 1846     		mov	r0, r3
 626 0020 FFF7FEFF 		bl	setLeftDir
 181:.\main.c      ****     setRightDir(direction);
 627              		.loc 1 181 0
 628 0024 094B     		ldr	r3, .L26
 629 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 0028 1846     		mov	r0, r3
 631 002a FFF7FEFF 		bl	setRightDir
 182:.\main.c      ****     char mes[16];
 183:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 632              		.loc 1 183 0
 633 002e 074B     		ldr	r3, .L26
 634 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 0032 1A46     		mov	r2, r3
 636 0034 3B46     		mov	r3, r7
 637 0036 1846     		mov	r0, r3
 638 0038 0549     		ldr	r1, .L26+4
 639 003a FFF7FEFF 		bl	sprintf
 184:.\main.c      ****     UART_PutString(mes);
 640              		.loc 1 184 0
 641 003e 3B46     		mov	r3, r7
 642 0040 1846     		mov	r0, r3
 643 0042 FFF7FEFF 		bl	UART_PutString
 185:.\main.c      **** }
 644              		.loc 1 185 0
 645 0046 1037     		adds	r7, r7, #16
 646              		.cfi_def_cfa_offset 8
 647 0048 BD46     		mov	sp, r7
 648              		.cfi_def_cfa_register 13
 649              		@ sp needed
 650 004a 80BD     		pop	{r7, pc}
 651              	.L27:
 652              		.align	2
 653              	.L26:
 654 004c 00000000 		.word	direction
 655 0050 00000000 		.word	.LC0
 656              		.cfi_endproc
 657              	.LFE66:
 658              		.size	reverseDirection, .-reverseDirection
 659              		.global	__aeabi_dcmplt
 660              		.global	__aeabi_dmul
 661              		.global	__aeabi_d2iz
 662              		.section	.text.setSpeed,"ax",%progbits
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 16


 663              		.align	2
 664              		.global	setSpeed
 665              		.thumb
 666              		.thumb_func
 667              		.type	setSpeed, %function
 668              	setSpeed:
 669              	.LFB67:
 186:.\main.c      **** 
 187:.\main.c      **** void setSpeed(double left, double right){
 670              		.loc 1 187 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 24
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674 0000 80B5     		push	{r7, lr}
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 86B0     		sub	sp, sp, #24
 679              		.cfi_def_cfa_offset 32
 680 0004 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 682 0006 C7E90201 		strd	r0, [r7, #8]
 683 000a C7E90023 		strd	r2, [r7]
 188:.\main.c      ****     if(right < 0.0)
 684              		.loc 1 188 0
 685 000e D7E90001 		ldrd	r0, [r7]
 686 0012 4FF00002 		mov	r2, #0
 687 0016 4FF00003 		mov	r3, #0
 688 001a FFF7FEFF 		bl	__aeabi_dcmplt
 689 001e 0346     		mov	r3, r0
 690 0020 002B     		cmp	r3, #0
 691 0022 10D0     		beq	.L37
 189:.\main.c      ****     {
 190:.\main.c      ****         //char mes[16];
 191:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 192:.\main.c      ****        // UART_PutString(mes);
 193:.\main.c      ****         setRightDir(!direction);
 692              		.loc 1 193 0
 693 0024 304B     		ldr	r3, .L39+8
 694 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 695 0028 002B     		cmp	r3, #0
 696 002a 0CBF     		ite	eq
 697 002c 0123     		moveq	r3, #1
 698 002e 0023     		movne	r3, #0
 699 0030 DBB2     		uxtb	r3, r3
 700 0032 1846     		mov	r0, r3
 701 0034 FFF7FEFF 		bl	setRightDir
 194:.\main.c      ****         right = -right;
 702              		.loc 1 194 0
 703 0038 3B68     		ldr	r3, [r7]
 704 003a 3B60     		str	r3, [r7]
 705 003c 7B68     		ldr	r3, [r7, #4]
 706 003e 83F00043 		eor	r3, r3, #-2147483648
 707 0042 7B60     		str	r3, [r7, #4]
 708 0044 04E0     		b	.L31
 709              	.L37:
 195:.\main.c      ****     }
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 17


 196:.\main.c      ****     else setRightDir(direction);
 710              		.loc 1 196 0
 711 0046 284B     		ldr	r3, .L39+8
 712 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 713 004a 1846     		mov	r0, r3
 714 004c FFF7FEFF 		bl	setRightDir
 715              	.L31:
 197:.\main.c      ****     
 198:.\main.c      ****     if(left < 0.0)
 716              		.loc 1 198 0
 717 0050 D7E90201 		ldrd	r0, [r7, #8]
 718 0054 4FF00002 		mov	r2, #0
 719 0058 4FF00003 		mov	r3, #0
 720 005c FFF7FEFF 		bl	__aeabi_dcmplt
 721 0060 0346     		mov	r3, r0
 722 0062 002B     		cmp	r3, #0
 723 0064 10D0     		beq	.L38
 199:.\main.c      ****     {
 200:.\main.c      ****        // char mes[16];
 201:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 202:.\main.c      ****         //UART_PutString(mes);
 203:.\main.c      ****         setLeftDir(!direction);
 724              		.loc 1 203 0
 725 0066 204B     		ldr	r3, .L39+8
 726 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 727 006a 002B     		cmp	r3, #0
 728 006c 0CBF     		ite	eq
 729 006e 0123     		moveq	r3, #1
 730 0070 0023     		movne	r3, #0
 731 0072 DBB2     		uxtb	r3, r3
 732 0074 1846     		mov	r0, r3
 733 0076 FFF7FEFF 		bl	setLeftDir
 204:.\main.c      ****         left = -left;
 734              		.loc 1 204 0
 735 007a BB68     		ldr	r3, [r7, #8]
 736 007c BB60     		str	r3, [r7, #8]
 737 007e FB68     		ldr	r3, [r7, #12]
 738 0080 83F00043 		eor	r3, r3, #-2147483648
 739 0084 FB60     		str	r3, [r7, #12]
 740 0086 04E0     		b	.L34
 741              	.L38:
 205:.\main.c      ****     }
 206:.\main.c      ****     else setLeftDir(direction);
 742              		.loc 1 206 0
 743 0088 174B     		ldr	r3, .L39+8
 744 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 745 008c 1846     		mov	r0, r3
 746 008e FFF7FEFF 		bl	setLeftDir
 747              	.L34:
 207:.\main.c      ****     
 208:.\main.c      ****     int16 countsLeft = left*QUAD_RATIO;
 748              		.loc 1 208 0
 749 0092 D7E90201 		ldrd	r0, [r7, #8]
 750 0096 12A3     		adr	r3, .L39
 751 0098 D3E90023 		ldrd	r2, [r3]
 752 009c FFF7FEFF 		bl	__aeabi_dmul
 753 00a0 0246     		mov	r2, r0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 18


 754 00a2 0B46     		mov	r3, r1
 755 00a4 1046     		mov	r0, r2
 756 00a6 1946     		mov	r1, r3
 757 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 758 00ac 0346     		mov	r3, r0
 759 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 209:.\main.c      ****     int16 countsRight = right*QUAD_RATIO;
 760              		.loc 1 209 0
 761 00b0 D7E90001 		ldrd	r0, [r7]
 762 00b4 0AA3     		adr	r3, .L39
 763 00b6 D3E90023 		ldrd	r2, [r3]
 764 00ba FFF7FEFF 		bl	__aeabi_dmul
 765 00be 0246     		mov	r2, r0
 766 00c0 0B46     		mov	r3, r1
 767 00c2 1046     		mov	r0, r2
 768 00c4 1946     		mov	r1, r3
 769 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 770 00ca 0346     		mov	r3, r0
 771 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 210:.\main.c      ****     
 211:.\main.c      ****     leftSpeedLimit = countsRight;
 772              		.loc 1 211 0
 773 00ce 074A     		ldr	r2, .L39+12
 774 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 775 00d2 1380     		strh	r3, [r2]	@ movhi
 212:.\main.c      ****     rightSpeedLimit = countsLeft;
 776              		.loc 1 212 0
 777 00d4 064A     		ldr	r2, .L39+16
 778 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 779 00d8 1380     		strh	r3, [r2]	@ movhi
 213:.\main.c      **** }
 780              		.loc 1 213 0
 781 00da 1837     		adds	r7, r7, #24
 782              		.cfi_def_cfa_offset 8
 783 00dc BD46     		mov	sp, r7
 784              		.cfi_def_cfa_register 13
 785              		@ sp needed
 786 00de 80BD     		pop	{r7, pc}
 787              	.L40:
 788              		.align	3
 789              	.L39:
 790 00e0 969526A5 		.word	-1524197994
 791 00e4 A0DBEF3F 		.word	1072683936
 792 00e8 00000000 		.word	direction
 793 00ec 00000000 		.word	leftSpeedLimit
 794 00f0 00000000 		.word	rightSpeedLimit
 795              		.cfi_endproc
 796              	.LFE67:
 797              		.size	setSpeed, .-setSpeed
 798 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 799              		.align	2
 800              		.global	brakeLeft
 801              		.thumb
 802              		.thumb_func
 803              		.type	brakeLeft, %function
 804              	brakeLeft:
 805              	.LFB68:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 19


 214:.\main.c      **** 
 215:.\main.c      **** void brakeLeft()
 216:.\main.c      **** {
 806              		.loc 1 216 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810 0000 80B5     		push	{r7, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 217:.\main.c      ****     PWM_1_WriteCompare(0);
 816              		.loc 1 217 0
 817 0004 0020     		movs	r0, #0
 818 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 218:.\main.c      ****     left_duty_cycle = 0;
 819              		.loc 1 218 0
 820 000a 024B     		ldr	r3, .L42
 821 000c 0022     		movs	r2, #0
 822 000e 1A80     		strh	r2, [r3]	@ movhi
 219:.\main.c      **** }
 823              		.loc 1 219 0
 824 0010 80BD     		pop	{r7, pc}
 825              	.L43:
 826 0012 00BF     		.align	2
 827              	.L42:
 828 0014 00000000 		.word	left_duty_cycle
 829              		.cfi_endproc
 830              	.LFE68:
 831              		.size	brakeLeft, .-brakeLeft
 832              		.section	.text.brakeRight,"ax",%progbits
 833              		.align	2
 834              		.global	brakeRight
 835              		.thumb
 836              		.thumb_func
 837              		.type	brakeRight, %function
 838              	brakeRight:
 839              	.LFB69:
 220:.\main.c      **** 
 221:.\main.c      **** void brakeRight()
 222:.\main.c      **** {
 840              		.loc 1 222 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 223:.\main.c      ****      PWM_2_WriteCompare(0);
 850              		.loc 1 223 0
 851 0004 0020     		movs	r0, #0
 852 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 20


 224:.\main.c      ****      right_duty_cycle = 0;
 853              		.loc 1 224 0
 854 000a 024B     		ldr	r3, .L45
 855 000c 0022     		movs	r2, #0
 856 000e 1A80     		strh	r2, [r3]	@ movhi
 225:.\main.c      **** }
 857              		.loc 1 225 0
 858 0010 80BD     		pop	{r7, pc}
 859              	.L46:
 860 0012 00BF     		.align	2
 861              	.L45:
 862 0014 00000000 		.word	right_duty_cycle
 863              		.cfi_endproc
 864              	.LFE69:
 865              		.size	brakeRight, .-brakeRight
 866              		.section	.text.brakeMotor,"ax",%progbits
 867              		.align	2
 868              		.global	brakeMotor
 869              		.thumb
 870              		.thumb_func
 871              		.type	brakeMotor, %function
 872              	brakeMotor:
 873              	.LFB70:
 226:.\main.c      **** 
 227:.\main.c      **** void brakeMotor(){
 874              		.loc 1 227 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 00AF     		add	r7, sp, #0
 883              		.cfi_def_cfa_register 7
 228:.\main.c      ****     setSpeed(0, 0);
 884              		.loc 1 228 0
 885 0004 4FF00000 		mov	r0, #0
 886 0008 4FF00001 		mov	r1, #0
 887 000c 4FF00002 		mov	r2, #0
 888 0010 4FF00003 		mov	r3, #0
 889 0014 FFF7FEFF 		bl	setSpeed
 229:.\main.c      ****     brakeLeft();
 890              		.loc 1 229 0
 891 0018 FFF7FEFF 		bl	brakeLeft
 230:.\main.c      ****     brakeRight();
 892              		.loc 1 230 0
 893 001c FFF7FEFF 		bl	brakeRight
 231:.\main.c      **** }
 894              		.loc 1 231 0
 895 0020 80BD     		pop	{r7, pc}
 896              		.cfi_endproc
 897              	.LFE70:
 898              		.size	brakeMotor, .-brakeMotor
 899 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 900              		.align	2
 901              		.global	driveForwards
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 21


 902              		.thumb
 903              		.thumb_func
 904              		.type	driveForwards, %function
 905              	driveForwards:
 906              	.LFB71:
 232:.\main.c      **** 
 233:.\main.c      **** void driveForwards()
 234:.\main.c      **** {
 907              		.loc 1 234 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 235:.\main.c      ****     setSpeed(speed, speed);
 917              		.loc 1 235 0
 918 0004 044B     		ldr	r3, .L49
 919 0006 D3E90001 		ldrd	r0, [r3]
 920 000a 034B     		ldr	r3, .L49
 921 000c D3E90023 		ldrd	r2, [r3]
 922 0010 FFF7FEFF 		bl	setSpeed
 236:.\main.c      **** }
 923              		.loc 1 236 0
 924 0014 80BD     		pop	{r7, pc}
 925              	.L50:
 926 0016 00BF     		.align	2
 927              	.L49:
 928 0018 00000000 		.word	speed
 929              		.cfi_endproc
 930              	.LFE71:
 931              		.size	driveForwards, .-driveForwards
 932              		.global	__aeabi_dadd
 933              		.section	.text.turnRight,"ax",%progbits
 934              		.align	2
 935              		.global	turnRight
 936              		.thumb
 937              		.thumb_func
 938              		.type	turnRight, %function
 939              	turnRight:
 940              	.LFB72:
 237:.\main.c      **** 
 238:.\main.c      **** void turnRight()
 239:.\main.c      **** {
 941              		.loc 1 239 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945 0000 80B5     		push	{r7, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 7, -8
 948              		.cfi_offset 14, -4
 949 0002 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 22


 240:.\main.c      ****     setSpeed(0,speed*2.0);
 951              		.loc 1 240 0
 952 0004 074B     		ldr	r3, .L52
 953 0006 D3E90023 		ldrd	r2, [r3]
 954 000a 1046     		mov	r0, r2
 955 000c 1946     		mov	r1, r3
 956 000e FFF7FEFF 		bl	__aeabi_dadd
 957 0012 0246     		mov	r2, r0
 958 0014 0B46     		mov	r3, r1
 959 0016 4FF00000 		mov	r0, #0
 960 001a 4FF00001 		mov	r1, #0
 961 001e FFF7FEFF 		bl	setSpeed
 241:.\main.c      **** }
 962              		.loc 1 241 0
 963 0022 80BD     		pop	{r7, pc}
 964              	.L53:
 965              		.align	2
 966              	.L52:
 967 0024 00000000 		.word	speed
 968              		.cfi_endproc
 969              	.LFE72:
 970              		.size	turnRight, .-turnRight
 971              		.section	.text.turnLeft,"ax",%progbits
 972              		.align	2
 973              		.global	turnLeft
 974              		.thumb
 975              		.thumb_func
 976              		.type	turnLeft, %function
 977              	turnLeft:
 978              	.LFB73:
 242:.\main.c      **** 
 243:.\main.c      **** void turnLeft()
 244:.\main.c      **** {
 979              		.loc 1 244 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983 0000 80B5     		push	{r7, lr}
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0002 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 245:.\main.c      ****     setSpeed(speed*2.0,0);
 989              		.loc 1 245 0
 990 0004 084B     		ldr	r3, .L55
 991 0006 D3E90023 		ldrd	r2, [r3]
 992 000a 1046     		mov	r0, r2
 993 000c 1946     		mov	r1, r3
 994 000e FFF7FEFF 		bl	__aeabi_dadd
 995 0012 0246     		mov	r2, r0
 996 0014 0B46     		mov	r3, r1
 997 0016 1046     		mov	r0, r2
 998 0018 1946     		mov	r1, r3
 999 001a 4FF00002 		mov	r2, #0
 1000 001e 4FF00003 		mov	r3, #0
 1001 0022 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 23


 246:.\main.c      **** }
 1002              		.loc 1 246 0
 1003 0026 80BD     		pop	{r7, pc}
 1004              	.L56:
 1005              		.align	2
 1006              	.L55:
 1007 0028 00000000 		.word	speed
 1008              		.cfi_endproc
 1009              	.LFE73:
 1010              		.size	turnLeft, .-turnLeft
 1011              		.section	.text.initTurnLeft,"ax",%progbits
 1012              		.align	2
 1013              		.global	initTurnLeft
 1014              		.thumb
 1015              		.thumb_func
 1016              		.type	initTurnLeft, %function
 1017              	initTurnLeft:
 1018              	.LFB74:
 247:.\main.c      **** 
 248:.\main.c      **** void initTurnLeft(){
 1019              		.loc 1 248 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023 0000 80B5     		push	{r7, lr}
 1024              		.cfi_def_cfa_offset 8
 1025              		.cfi_offset 7, -8
 1026              		.cfi_offset 14, -4
 1027 0002 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 249:.\main.c      ****     Timer_2_Stop();
 1029              		.loc 1 249 0
 1030 0004 FFF7FEFF 		bl	Timer_2_Stop
 250:.\main.c      ****     prev_movement_state = movement_state;
 1031              		.loc 1 250 0
 1032 0008 084B     		ldr	r3, .L58
 1033 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1034 000c 084B     		ldr	r3, .L58+4
 1035 000e 1A70     		strb	r2, [r3]
 251:.\main.c      ****     movement_state = LTURN;
 1036              		.loc 1 251 0
 1037 0010 064B     		ldr	r3, .L58
 1038 0012 0122     		movs	r2, #1
 1039 0014 1A70     		strb	r2, [r3]
 252:.\main.c      ****     brakeLeft();
 1040              		.loc 1 252 0
 1041 0016 FFF7FEFF 		bl	brakeLeft
 253:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1042              		.loc 1 253 0
 1043 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1044 001e 0346     		mov	r3, r0
 1045 0020 1A46     		mov	r2, r3
 1046 0022 044B     		ldr	r3, .L58+8
 1047 0024 1A80     		strh	r2, [r3]	@ movhi
 254:.\main.c      ****     Timer_2_Start();
 1048              		.loc 1 254 0
 1049 0026 FFF7FEFF 		bl	Timer_2_Start
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 24


 255:.\main.c      **** }
 1050              		.loc 1 255 0
 1051 002a 80BD     		pop	{r7, pc}
 1052              	.L59:
 1053              		.align	2
 1054              	.L58:
 1055 002c 00000000 		.word	movement_state
 1056 0030 00000000 		.word	prev_movement_state
 1057 0034 00000000 		.word	start_turn_count
 1058              		.cfi_endproc
 1059              	.LFE74:
 1060              		.size	initTurnLeft, .-initTurnLeft
 1061              		.section	.text.initTurnRight,"ax",%progbits
 1062              		.align	2
 1063              		.global	initTurnRight
 1064              		.thumb
 1065              		.thumb_func
 1066              		.type	initTurnRight, %function
 1067              	initTurnRight:
 1068              	.LFB75:
 256:.\main.c      **** 
 257:.\main.c      **** void initTurnRight(){
 1069              		.loc 1 257 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 80B5     		push	{r7, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 258:.\main.c      ****     Timer_2_Stop();
 1079              		.loc 1 258 0
 1080 0004 FFF7FEFF 		bl	Timer_2_Stop
 259:.\main.c      ****     prev_movement_state = movement_state;
 1081              		.loc 1 259 0
 1082 0008 084B     		ldr	r3, .L61
 1083 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1084 000c 084B     		ldr	r3, .L61+4
 1085 000e 1A70     		strb	r2, [r3]
 260:.\main.c      ****     movement_state = RTURN;
 1086              		.loc 1 260 0
 1087 0010 064B     		ldr	r3, .L61
 1088 0012 0222     		movs	r2, #2
 1089 0014 1A70     		strb	r2, [r3]
 261:.\main.c      ****     brakeRight();
 1090              		.loc 1 261 0
 1091 0016 FFF7FEFF 		bl	brakeRight
 262:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1092              		.loc 1 262 0
 1093 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1094 001e 0346     		mov	r3, r0
 1095 0020 1A46     		mov	r2, r3
 1096 0022 044B     		ldr	r3, .L61+8
 1097 0024 1A80     		strh	r2, [r3]	@ movhi
 263:.\main.c      ****     Timer_2_Start();
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 25


 1098              		.loc 1 263 0
 1099 0026 FFF7FEFF 		bl	Timer_2_Start
 264:.\main.c      **** }
 1100              		.loc 1 264 0
 1101 002a 80BD     		pop	{r7, pc}
 1102              	.L62:
 1103              		.align	2
 1104              	.L61:
 1105 002c 00000000 		.word	movement_state
 1106 0030 00000000 		.word	prev_movement_state
 1107 0034 00000000 		.word	start_turn_count
 1108              		.cfi_endproc
 1109              	.LFE75:
 1110              		.size	initTurnRight, .-initTurnRight
 1111              		.section	.text.initForward,"ax",%progbits
 1112              		.align	2
 1113              		.global	initForward
 1114              		.thumb
 1115              		.thumb_func
 1116              		.type	initForward, %function
 1117              	initForward:
 1118              	.LFB76:
 265:.\main.c      **** 
 266:.\main.c      **** void initForward(){
 1119              		.loc 1 266 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 267:.\main.c      ****     brakeMotor();
 1129              		.loc 1 267 0
 1130 0004 FFF7FEFF 		bl	brakeMotor
 268:.\main.c      ****     movement_state = DRIVE;
 1131              		.loc 1 268 0
 1132 0008 014B     		ldr	r3, .L64
 1133 000a 0022     		movs	r2, #0
 1134 000c 1A70     		strb	r2, [r3]
 269:.\main.c      **** }
 1135              		.loc 1 269 0
 1136 000e 80BD     		pop	{r7, pc}
 1137              	.L65:
 1138              		.align	2
 1139              	.L64:
 1140 0010 00000000 		.word	movement_state
 1141              		.cfi_endproc
 1142              	.LFE76:
 1143              		.size	initForward, .-initForward
 1144              		.section	.text.initBrake,"ax",%progbits
 1145              		.align	2
 1146              		.global	initBrake
 1147              		.thumb
 1148              		.thumb_func
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 26


 1149              		.type	initBrake, %function
 1150              	initBrake:
 1151              	.LFB77:
 270:.\main.c      **** 
 271:.\main.c      **** void initBrake(){
 1152              		.loc 1 271 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157 0000 80B4     		push	{r7}
 1158              		.cfi_def_cfa_offset 4
 1159              		.cfi_offset 7, -4
 1160 0002 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 272:.\main.c      ****     movement_state = STOPPED;
 1162              		.loc 1 272 0
 1163 0004 034B     		ldr	r3, .L67
 1164 0006 0322     		movs	r2, #3
 1165 0008 1A70     		strb	r2, [r3]
 273:.\main.c      **** }
 1166              		.loc 1 273 0
 1167 000a BD46     		mov	sp, r7
 1168              		.cfi_def_cfa_register 13
 1169              		@ sp needed
 1170 000c 5DF8047B 		ldr	r7, [sp], #4
 1171              		.cfi_restore 7
 1172              		.cfi_def_cfa_offset 0
 1173 0010 7047     		bx	lr
 1174              	.L68:
 1175 0012 00BF     		.align	2
 1176              	.L67:
 1177 0014 00000000 		.word	movement_state
 1178              		.cfi_endproc
 1179              	.LFE77:
 1180              		.size	initBrake, .-initBrake
 1181              		.section	.text.initTrack,"ax",%progbits
 1182              		.align	2
 1183              		.global	initTrack
 1184              		.thumb
 1185              		.thumb_func
 1186              		.type	initTrack, %function
 1187              	initTrack:
 1188              	.LFB78:
 274:.\main.c      **** 
 275:.\main.c      **** void initTrack()
 276:.\main.c      **** {
 1189              		.loc 1 276 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194 0000 80B4     		push	{r7}
 1195              		.cfi_def_cfa_offset 4
 1196              		.cfi_offset 7, -4
 1197 0002 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 27


 277:.\main.c      ****     movement_state = TRACKING;
 1199              		.loc 1 277 0
 1200 0004 034B     		ldr	r3, .L70
 1201 0006 0422     		movs	r2, #4
 1202 0008 1A70     		strb	r2, [r3]
 278:.\main.c      **** }
 1203              		.loc 1 278 0
 1204 000a BD46     		mov	sp, r7
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 000c 5DF8047B 		ldr	r7, [sp], #4
 1208              		.cfi_restore 7
 1209              		.cfi_def_cfa_offset 0
 1210 0010 7047     		bx	lr
 1211              	.L71:
 1212 0012 00BF     		.align	2
 1213              	.L70:
 1214 0014 00000000 		.word	movement_state
 1215              		.cfi_endproc
 1216              	.LFE78:
 1217              		.size	initTrack, .-initTrack
 1218              		.section	.text.initTrackU,"ax",%progbits
 1219              		.align	2
 1220              		.global	initTrackU
 1221              		.thumb
 1222              		.thumb_func
 1223              		.type	initTrackU, %function
 1224              	initTrackU:
 1225              	.LFB79:
 279:.\main.c      **** 
 280:.\main.c      **** void initTrackU(){
 1226              		.loc 1 280 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231 0000 80B4     		push	{r7}
 1232              		.cfi_def_cfa_offset 4
 1233              		.cfi_offset 7, -4
 1234 0002 00AF     		add	r7, sp, #0
 1235              		.cfi_def_cfa_register 7
 281:.\main.c      ****     movement_state = TRACKING_U;
 1236              		.loc 1 281 0
 1237 0004 034B     		ldr	r3, .L73
 1238 0006 0522     		movs	r2, #5
 1239 0008 1A70     		strb	r2, [r3]
 282:.\main.c      **** }
 1240              		.loc 1 282 0
 1241 000a BD46     		mov	sp, r7
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 000c 5DF8047B 		ldr	r7, [sp], #4
 1245              		.cfi_restore 7
 1246              		.cfi_def_cfa_offset 0
 1247 0010 7047     		bx	lr
 1248              	.L74:
 1249 0012 00BF     		.align	2
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 28


 1250              	.L73:
 1251 0014 00000000 		.word	movement_state
 1252              		.cfi_endproc
 1253              	.LFE79:
 1254              		.size	initTrackU, .-initTrackU
 1255              		.section	.text.inittrackLineZ,"ax",%progbits
 1256              		.align	2
 1257              		.global	inittrackLineZ
 1258              		.thumb
 1259              		.thumb_func
 1260              		.type	inittrackLineZ, %function
 1261              	inittrackLineZ:
 1262              	.LFB80:
 283:.\main.c      **** 
 284:.\main.c      **** void inittrackLineZ(){
 1263              		.loc 1 284 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268 0000 80B4     		push	{r7}
 1269              		.cfi_def_cfa_offset 4
 1270              		.cfi_offset 7, -4
 1271 0002 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 285:.\main.c      ****     movement_state = TRACKING_SOFT;
 1273              		.loc 1 285 0
 1274 0004 034B     		ldr	r3, .L76
 1275 0006 0622     		movs	r2, #6
 1276 0008 1A70     		strb	r2, [r3]
 286:.\main.c      **** }
 1277              		.loc 1 286 0
 1278 000a BD46     		mov	sp, r7
 1279              		.cfi_def_cfa_register 13
 1280              		@ sp needed
 1281 000c 5DF8047B 		ldr	r7, [sp], #4
 1282              		.cfi_restore 7
 1283              		.cfi_def_cfa_offset 0
 1284 0010 7047     		bx	lr
 1285              	.L77:
 1286 0012 00BF     		.align	2
 1287              	.L76:
 1288 0014 00000000 		.word	movement_state
 1289              		.cfi_endproc
 1290              	.LFE80:
 1291              		.size	inittrackLineZ, .-inittrackLineZ
 1292              		.section	.text.rxInt,"ax",%progbits
 1293              		.align	2
 1294              		.global	rxInt
 1295              		.thumb
 1296              		.thumb_func
 1297              		.type	rxInt, %function
 1298              	rxInt:
 1299              	.LFB81:
 287:.\main.c      **** 
 288:.\main.c      **** 
 289:.\main.c      **** 
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 29


 290:.\main.c      **** //Binary RF Data
 291:.\main.c      **** CY_ISR(rxInt){
 1300              		.loc 1 291 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 8
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 B0B5     		push	{r4, r5, r7, lr}
 1305              		.cfi_def_cfa_offset 16
 1306              		.cfi_offset 4, -16
 1307              		.cfi_offset 5, -12
 1308              		.cfi_offset 7, -8
 1309              		.cfi_offset 14, -4
 1310 0002 82B0     		sub	sp, sp, #8
 1311              		.cfi_def_cfa_offset 24
 1312 0004 00AF     		add	r7, sp, #0
 1313              		.cfi_def_cfa_register 7
 292:.\main.c      ****     char rf_char = UART_GetChar();
 1314              		.loc 1 292 0
 1315 0006 FFF7FEFF 		bl	UART_GetChar
 1316 000a 0346     		mov	r3, r0
 1317 000c FB71     		strb	r3, [r7, #7]
 293:.\main.c      ****     if(rf_char == SOP){
 1318              		.loc 1 293 0
 1319 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1320 0010 AA2B     		cmp	r3, #170
 1321 0012 2BD1     		bne	.L79
 294:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 295:.\main.c      ****             if(byteCount == 34)
 1322              		.loc 1 295 0
 1323 0014 224B     		ldr	r3, .L83
 1324 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0018 222B     		cmp	r3, #34
 1326 001a 20D1     		bne	.L80
 296:.\main.c      ****             {
 297:.\main.c      ****                 system_state = buffer_state;
 1327              		.loc 1 297 0
 1328 001c 214B     		ldr	r3, .L83+4
 1329 001e 224A     		ldr	r2, .L83+8
 1330 0020 1568     		ldr	r5, [r2]	@ unaligned
 1331 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1332 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1333 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1334 0028 1D60     		str	r5, [r3]	@ unaligned
 1335 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1336 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1337 002e D960     		str	r1, [r3, #12]	@ unaligned
 1338 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1339 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1340 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1341 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1342 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1343 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1344 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1345 003e D961     		str	r1, [r3, #28]	@ unaligned
 298:.\main.c      ****                 if(initial_pos_valid == 0)
 1346              		.loc 1 298 0
 1347 0040 1A4B     		ldr	r3, .L83+12
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 30


 1348 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1349 0044 002B     		cmp	r3, #0
 1350 0046 0AD1     		bne	.L80
 299:.\main.c      ****                 {
 300:.\main.c      ****                     LED_Write(~LED_Read());
 1351              		.loc 1 300 0
 1352 0048 FFF7FEFF 		bl	LED_Read
 1353 004c 0346     		mov	r3, r0
 1354 004e DB43     		mvns	r3, r3
 1355 0050 DBB2     		uxtb	r3, r3
 1356 0052 1846     		mov	r0, r3
 1357 0054 FFF7FEFF 		bl	LED_Write
 301:.\main.c      ****                     initial_pos_valid = 1;
 1358              		.loc 1 301 0
 1359 0058 144B     		ldr	r3, .L83+12
 1360 005a 0122     		movs	r2, #1
 1361 005c 1A70     		strb	r2, [r3]
 1362              	.L80:
 302:.\main.c      ****                 }
 303:.\main.c      ****             }
 304:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1363              		.loc 1 304 0
 1364 005e 104B     		ldr	r3, .L83
 1365 0060 0222     		movs	r2, #2
 1366 0062 1A70     		strb	r2, [r3]
 305:.\main.c      ****             flag_rx = 0;
 1367              		.loc 1 305 0
 1368 0064 124B     		ldr	r3, .L83+16
 1369 0066 0022     		movs	r2, #0
 1370 0068 1A70     		strb	r2, [r3]
 1371 006a 16E0     		b	.L78
 1372              	.L79:
 306:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 307:.\main.c      ****         }
 308:.\main.c      ****         else
 309:.\main.c      ****         {
 310:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1373              		.loc 1 310 0
 1374 006c 0C4B     		ldr	r3, .L83
 1375 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 0070 03F00103 		and	r3, r3, #1
 1377 0074 0F49     		ldr	r1, .L83+20
 1378 0076 FA79     		ldrb	r2, [r7, #7]
 1379 0078 CA54     		strb	r2, [r1, r3]
 311:.\main.c      ****            
 312:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1380              		.loc 1 312 0
 1381 007a 094B     		ldr	r3, .L83
 1382 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1383 007e 03F00103 		and	r3, r3, #1
 1384 0082 DBB2     		uxtb	r3, r3
 1385 0084 002B     		cmp	r3, #0
 1386 0086 02D0     		beq	.L82
 313:.\main.c      ****             {
 314:.\main.c      ****                 flag_rx = 1;
 1387              		.loc 1 314 0
 1388 0088 094B     		ldr	r3, .L83+16
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 31


 1389 008a 0122     		movs	r2, #1
 1390 008c 1A70     		strb	r2, [r3]
 1391              	.L82:
 315:.\main.c      ****             }
 316:.\main.c      ****             byteCount = (byteCount + 1);
 1392              		.loc 1 316 0
 1393 008e 044B     		ldr	r3, .L83
 1394 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1395 0092 0133     		adds	r3, r3, #1
 1396 0094 DAB2     		uxtb	r2, r3
 1397 0096 024B     		ldr	r3, .L83
 1398 0098 1A70     		strb	r2, [r3]
 1399              	.L78:
 317:.\main.c      ****         }
 318:.\main.c      **** }
 1400              		.loc 1 318 0
 1401 009a 0837     		adds	r7, r7, #8
 1402              		.cfi_def_cfa_offset 16
 1403 009c BD46     		mov	sp, r7
 1404              		.cfi_def_cfa_register 13
 1405              		@ sp needed
 1406 009e B0BD     		pop	{r4, r5, r7, pc}
 1407              	.L84:
 1408              		.align	2
 1409              	.L83:
 1410 00a0 00000000 		.word	byteCount
 1411 00a4 00000000 		.word	system_state
 1412 00a8 00000000 		.word	buffer_state
 1413 00ac 00000000 		.word	initial_pos_valid
 1414 00b0 00000000 		.word	flag_rx
 1415 00b4 00000000 		.word	packet
 1416              		.cfi_endproc
 1417              	.LFE81:
 1418              		.size	rxInt, .-rxInt
 1419              		.global	__aeabi_i2f
 1420              		.global	__aeabi_fmul
 1421              		.global	__aeabi_f2iz
 1422              		.section	.rodata
 1423 000a 0000     		.align	2
 1424              	.LC1:
 1425 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1425      65742071 
 1425      7561643A 
 1425      2025640D 
 1425      0A00
 1426              		.section	.text.BT_rxInt,"ax",%progbits
 1427              		.align	2
 1428              		.global	BT_rxInt
 1429              		.thumb
 1430              		.thumb_func
 1431              		.type	BT_rxInt, %function
 1432              	BT_rxInt:
 1433              	.LFB82:
 319:.\main.c      **** 
 320:.\main.c      **** CY_ISR(BT_rxInt)
 321:.\main.c      **** {
 1434              		.loc 1 321 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 32


 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 24
 1437              		@ frame_needed = 1, uses_anonymous_args = 0
 1438 0000 80B5     		push	{r7, lr}
 1439              		.cfi_def_cfa_offset 8
 1440              		.cfi_offset 7, -8
 1441              		.cfi_offset 14, -4
 1442 0002 86B0     		sub	sp, sp, #24
 1443              		.cfi_def_cfa_offset 32
 1444 0004 00AF     		add	r7, sp, #0
 1445              		.cfi_def_cfa_register 7
 322:.\main.c      ****     char rf_char = UART_GetChar();
 1446              		.loc 1 322 0
 1447 0006 FFF7FEFF 		bl	UART_GetChar
 1448 000a 0346     		mov	r3, r0
 1449 000c FB75     		strb	r3, [r7, #23]
 323:.\main.c      ****     switch(rf_char){
 1450              		.loc 1 323 0
 1451 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1452 0010 613B     		subs	r3, r3, #97
 1453 0012 192B     		cmp	r3, #25
 1454 0014 00F29E80 		bhi	.L85
 1455 0018 01A2     		adr	r2, .L88
 1456 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1457 001e 00BF     		.p2align 2
 1458              	.L88:
 1459 0020 89000000 		.word	.L87+1
 1460 0024 55010000 		.word	.L85+1
 1461 0028 55010000 		.word	.L85+1
 1462 002c AD000000 		.word	.L89+1
 1463 0030 55010000 		.word	.L85+1
 1464 0034 B9000000 		.word	.L90+1
 1465 0038 55010000 		.word	.L85+1
 1466 003c 55010000 		.word	.L85+1
 1467 0040 55010000 		.word	.L85+1
 1468 0044 55010000 		.word	.L85+1
 1469 0048 55010000 		.word	.L85+1
 1470 004c 55010000 		.word	.L85+1
 1471 0050 55010000 		.word	.L85+1
 1472 0054 55010000 		.word	.L85+1
 1473 0058 55010000 		.word	.L85+1
 1474 005c 55010000 		.word	.L85+1
 1475 0060 E9000000 		.word	.L91+1
 1476 0064 3F010000 		.word	.L92+1
 1477 0068 A1000000 		.word	.L93+1
 1478 006c C5000000 		.word	.L94+1
 1479 0070 D1000000 		.word	.L95+1
 1480 0074 55010000 		.word	.L85+1
 1481 0078 95000000 		.word	.L96+1
 1482 007c 55010000 		.word	.L85+1
 1483 0080 55010000 		.word	.L85+1
 1484 0084 DD000000 		.word	.L97+1
 1485              		.p2align 1
 1486              	.L87:
 1487              	.LBB3:
 324:.\main.c      ****     case 'a':
 325:.\main.c      ****         initTurnLeft();
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 33


 1488              		.loc 1 325 0
 1489 0088 FFF7FEFF 		bl	initTurnLeft
 326:.\main.c      ****         track_mode = NO_TRACK;
 1490              		.loc 1 326 0
 1491 008c 334B     		ldr	r3, .L99
 1492 008e 0022     		movs	r2, #0
 1493 0090 1A70     		strb	r2, [r3]
 327:.\main.c      ****         break;
 1494              		.loc 1 327 0
 1495 0092 5FE0     		b	.L85
 1496              	.L96:
 328:.\main.c      ****     case 'w':
 329:.\main.c      ****         initForward();
 1497              		.loc 1 329 0
 1498 0094 FFF7FEFF 		bl	initForward
 330:.\main.c      ****         track_mode = NO_TRACK;
 1499              		.loc 1 330 0
 1500 0098 304B     		ldr	r3, .L99
 1501 009a 0022     		movs	r2, #0
 1502 009c 1A70     		strb	r2, [r3]
 331:.\main.c      ****         break;
 1503              		.loc 1 331 0
 1504 009e 59E0     		b	.L85
 1505              	.L93:
 332:.\main.c      ****     case 's': 
 333:.\main.c      ****         reverseDirection();
 1506              		.loc 1 333 0
 1507 00a0 FFF7FEFF 		bl	reverseDirection
 334:.\main.c      ****         track_mode = NO_TRACK;
 1508              		.loc 1 334 0
 1509 00a4 2D4B     		ldr	r3, .L99
 1510 00a6 0022     		movs	r2, #0
 1511 00a8 1A70     		strb	r2, [r3]
 335:.\main.c      ****         break;
 1512              		.loc 1 335 0
 1513 00aa 53E0     		b	.L85
 1514              	.L89:
 336:.\main.c      ****     case 'd':
 337:.\main.c      ****         initTurnRight();
 1515              		.loc 1 337 0
 1516 00ac FFF7FEFF 		bl	initTurnRight
 338:.\main.c      ****         track_mode = NO_TRACK;
 1517              		.loc 1 338 0
 1518 00b0 2A4B     		ldr	r3, .L99
 1519 00b2 0022     		movs	r2, #0
 1520 00b4 1A70     		strb	r2, [r3]
 339:.\main.c      ****         break;
 1521              		.loc 1 339 0
 1522 00b6 4DE0     		b	.L85
 1523              	.L90:
 340:.\main.c      ****     case 'f':
 341:.\main.c      ****         initBrake();
 1524              		.loc 1 341 0
 1525 00b8 FFF7FEFF 		bl	initBrake
 342:.\main.c      ****         track_mode = NO_TRACK;
 1526              		.loc 1 342 0
 1527 00bc 274B     		ldr	r3, .L99
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 34


 1528 00be 0022     		movs	r2, #0
 1529 00c0 1A70     		strb	r2, [r3]
 343:.\main.c      ****         break;
 1530              		.loc 1 343 0
 1531 00c2 47E0     		b	.L85
 1532              	.L94:
 344:.\main.c      ****     case('t'):
 345:.\main.c      ****         track_mode = CURVE_TRACK;
 1533              		.loc 1 345 0
 1534 00c4 254B     		ldr	r3, .L99
 1535 00c6 0122     		movs	r2, #1
 1536 00c8 1A70     		strb	r2, [r3]
 346:.\main.c      ****         initTrack();
 1537              		.loc 1 346 0
 1538 00ca FFF7FEFF 		bl	initTrack
 347:.\main.c      ****         break;
 1539              		.loc 1 347 0
 1540 00ce 41E0     		b	.L85
 1541              	.L95:
 348:.\main.c      ****     case('u'):
 349:.\main.c      ****         initTrackU();
 1542              		.loc 1 349 0
 1543 00d0 FFF7FEFF 		bl	initTrackU
 350:.\main.c      ****         track_mode = U_TRACK;
 1544              		.loc 1 350 0
 1545 00d4 214B     		ldr	r3, .L99
 1546 00d6 0222     		movs	r2, #2
 1547 00d8 1A70     		strb	r2, [r3]
 351:.\main.c      ****         break;
 1548              		.loc 1 351 0
 1549 00da 3BE0     		b	.L85
 1550              	.L97:
 352:.\main.c      ****     case('z'):
 353:.\main.c      ****         track_mode = SQUARE_TRACK;
 1551              		.loc 1 353 0
 1552 00dc 1F4B     		ldr	r3, .L99
 1553 00de 0322     		movs	r2, #3
 1554 00e0 1A70     		strb	r2, [r3]
 354:.\main.c      ****         initTrack();
 1555              		.loc 1 354 0
 1556 00e2 FFF7FEFF 		bl	initTrack
 355:.\main.c      ****         break;
 1557              		.loc 1 355 0
 1558 00e6 35E0     		b	.L85
 1559              	.L91:
 356:.\main.c      ****     case('q'):
 357:.\main.c      ****         track_mode = QUAD_STOP;
 1560              		.loc 1 357 0
 1561 00e8 1C4B     		ldr	r3, .L99
 1562 00ea 0422     		movs	r2, #4
 1563 00ec 1A70     		strb	r2, [r3]
 358:.\main.c      ****         accum_dist = 0;
 1564              		.loc 1 358 0
 1565 00ee 1C4B     		ldr	r3, .L99+4
 1566 00f0 0022     		movs	r2, #0
 1567 00f2 1A80     		strh	r2, [r3]	@ movhi
 359:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 35


 1568              		.loc 1 359 0
 1569 00f4 1B4B     		ldr	r3, .L99+8
 1570 00f6 1B88     		ldrh	r3, [r3]
 1571 00f8 1BB2     		sxth	r3, r3
 1572 00fa 1846     		mov	r0, r3
 1573 00fc FFF7FEFF 		bl	__aeabi_i2f
 1574 0100 0246     		mov	r2, r0
 1575 0102 194B     		ldr	r3, .L99+12
 1576 0104 1B68     		ldr	r3, [r3]	@ float
 1577 0106 1046     		mov	r0, r2
 1578 0108 1946     		mov	r1, r3
 1579 010a FFF7FEFF 		bl	__aeabi_fmul
 1580 010e 0346     		mov	r3, r0
 1581 0110 1846     		mov	r0, r3
 1582 0112 FFF7FEFF 		bl	__aeabi_f2iz
 1583 0116 0346     		mov	r3, r0
 1584 0118 9AB2     		uxth	r2, r3
 1585 011a 144B     		ldr	r3, .L99+16
 1586 011c 1A80     		strh	r2, [r3]	@ movhi
 360:.\main.c      ****         char mes[16];
 361:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 1587              		.loc 1 361 0
 1588 011e 134B     		ldr	r3, .L99+16
 1589 0120 1B88     		ldrh	r3, [r3]
 1590 0122 1BB2     		sxth	r3, r3
 1591 0124 3A1D     		adds	r2, r7, #4
 1592 0126 1046     		mov	r0, r2
 1593 0128 1149     		ldr	r1, .L99+20
 1594 012a 1A46     		mov	r2, r3
 1595 012c FFF7FEFF 		bl	sprintf
 362:.\main.c      ****         UART_PutString(mes);
 1596              		.loc 1 362 0
 1597 0130 3B1D     		adds	r3, r7, #4
 1598 0132 1846     		mov	r0, r3
 1599 0134 FFF7FEFF 		bl	UART_PutString
 363:.\main.c      ****         initForward();
 1600              		.loc 1 363 0
 1601 0138 FFF7FEFF 		bl	initForward
 364:.\main.c      ****         break;
 1602              		.loc 1 364 0
 1603 013c 0AE0     		b	.L85
 1604              	.L92:
 365:.\main.c      ****     case ('r'):
 366:.\main.c      ****         track_mode = RF_STOP;
 1605              		.loc 1 366 0
 1606 013e 074B     		ldr	r3, .L99
 1607 0140 0522     		movs	r2, #5
 1608 0142 1A70     		strb	r2, [r3]
 367:.\main.c      ****         changeToRF();
 1609              		.loc 1 367 0
 1610 0144 FFF7FEFF 		bl	changeToRF
 368:.\main.c      ****         // Make initial position
 369:.\main.c      ****         initial_pos_valid = 0;
 1611              		.loc 1 369 0
 1612 0148 0A4B     		ldr	r3, .L99+24
 1613 014a 0022     		movs	r2, #0
 1614 014c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 36


 370:.\main.c      ****         initBrake();
 1615              		.loc 1 370 0
 1616 014e FFF7FEFF 		bl	initBrake
 371:.\main.c      ****         break;
 1617              		.loc 1 371 0
 1618 0152 00BF     		nop
 1619              	.L85:
 1620              	.LBE3:
 372:.\main.c      ****     }
 373:.\main.c      **** }
 1621              		.loc 1 373 0
 1622 0154 1837     		adds	r7, r7, #24
 1623              		.cfi_def_cfa_offset 8
 1624 0156 BD46     		mov	sp, r7
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 0158 80BD     		pop	{r7, pc}
 1628              	.L100:
 1629 015a 00BF     		.align	2
 1630              	.L99:
 1631 015c 00000000 		.word	track_mode
 1632 0160 00000000 		.word	accum_dist
 1633 0164 00000000 		.word	target_distance_cm
 1634 0168 00000000 		.word	quad_per_cm
 1635 016c 00000000 		.word	target_distance_quad
 1636 0170 0C000000 		.word	.LC1
 1637 0174 00000000 		.word	initial_pos_valid
 1638              		.cfi_endproc
 1639              	.LFE82:
 1640              		.size	BT_rxInt, .-BT_rxInt
 1641              		.section	.text.BT_txInt,"ax",%progbits
 1642              		.align	2
 1643              		.global	BT_txInt
 1644              		.thumb
 1645              		.thumb_func
 1646              		.type	BT_txInt, %function
 1647              	BT_txInt:
 1648              	.LFB83:
 374:.\main.c      **** 
 375:.\main.c      **** //BT
 376:.\main.c      **** CY_ISR(BT_txInt)
 377:.\main.c      **** {
 1649              		.loc 1 377 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653              		@ link register save eliminated.
 1654 0000 80B4     		push	{r7}
 1655              		.cfi_def_cfa_offset 4
 1656              		.cfi_offset 7, -4
 1657 0002 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 378:.\main.c      ****     
 379:.\main.c      **** }
 1659              		.loc 1 379 0
 1660 0004 BD46     		mov	sp, r7
 1661              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 37


 1662              		@ sp needed
 1663 0006 5DF8047B 		ldr	r7, [sp], #4
 1664              		.cfi_restore 7
 1665              		.cfi_def_cfa_offset 0
 1666 000a 7047     		bx	lr
 1667              		.cfi_endproc
 1668              	.LFE83:
 1669              		.size	BT_txInt, .-BT_txInt
 1670              		.section	.text.adc_isr,"ax",%progbits
 1671              		.align	2
 1672              		.global	adc_isr
 1673              		.thumb
 1674              		.thumb_func
 1675              		.type	adc_isr, %function
 1676              	adc_isr:
 1677              	.LFB84:
 380:.\main.c      **** 
 381:.\main.c      **** //ADC:
 382:.\main.c      **** CY_ISR (adc_isr)
 383:.\main.c      **** {
 1678              		.loc 1 383 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 0
 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682 0000 80B5     		push	{r7, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 7, -8
 1685              		.cfi_offset 14, -4
 1686 0002 00AF     		add	r7, sp, #0
 1687              		.cfi_def_cfa_register 7
 384:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 385:.\main.c      ****     adc_result = ADC_GetResult16();
 1688              		.loc 1 385 0
 1689 0004 FFF7FEFF 		bl	ADC_GetResult16
 1690 0008 0346     		mov	r3, r0
 1691 000a 1A46     		mov	r2, r3
 1692 000c 044B     		ldr	r3, .L103
 1693 000e 1A80     		strh	r2, [r3]	@ movhi
 386:.\main.c      ****     flag_receive_ADC = 1;
 1694              		.loc 1 386 0
 1695 0010 044B     		ldr	r3, .L103+4
 1696 0012 0122     		movs	r2, #1
 1697 0014 1A70     		strb	r2, [r3]
 387:.\main.c      ****     flag_print_rf = 1;
 1698              		.loc 1 387 0
 1699 0016 044B     		ldr	r3, .L103+8
 1700 0018 0122     		movs	r2, #1
 1701 001a 1A70     		strb	r2, [r3]
 388:.\main.c      ****     //LED_Write(~LED_Read());
 389:.\main.c      **** }
 1702              		.loc 1 389 0
 1703 001c 80BD     		pop	{r7, pc}
 1704              	.L104:
 1705 001e 00BF     		.align	2
 1706              	.L103:
 1707 0020 00000000 		.word	adc_result
 1708 0024 00000000 		.word	flag_receive_ADC
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 38


 1709 0028 00000000 		.word	flag_print_rf
 1710              		.cfi_endproc
 1711              	.LFE84:
 1712              		.size	adc_isr, .-adc_isr
 1713              		.section	.rodata
 1714 001e 0000     		.align	2
 1715              	.LC2:
 1716 0020 64697374 		.ascii	"dist: %d\015\012\000"
 1716      3A202564 
 1716      0D0A00
 1717              		.global	__aeabi_i2d
 1718              		.global	__aeabi_ddiv
 1719              		.global	__aeabi_dcmple
 1720              		.section	.text.isr_quad1,"ax",%progbits
 1721              		.align	2
 1722              		.global	isr_quad1
 1723              		.thumb
 1724              		.thumb_func
 1725              		.type	isr_quad1, %function
 1726              	isr_quad1:
 1727              	.LFB85:
 390:.\main.c      **** 
 391:.\main.c      **** CY_ISR (isr_quad1)
 392:.\main.c      **** {
 1728              		.loc 1 392 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 24
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732 0000 B0B5     		push	{r4, r5, r7, lr}
 1733              		.cfi_def_cfa_offset 16
 1734              		.cfi_offset 4, -16
 1735              		.cfi_offset 5, -12
 1736              		.cfi_offset 7, -8
 1737              		.cfi_offset 14, -4
 1738 0002 86B0     		sub	sp, sp, #24
 1739              		.cfi_def_cfa_offset 40
 1740 0004 00AF     		add	r7, sp, #0
 1741              		.cfi_def_cfa_register 7
 393:.\main.c      ****     //LED_Write(~LED_Read());
 394:.\main.c      ****     last_quad_count1 = quad_count1;
 1742              		.loc 1 394 0
 1743 0006 664B     		ldr	r3, .L112
 1744 0008 1A88     		ldrh	r2, [r3]
 1745 000a 664B     		ldr	r3, .L112+4
 1746 000c 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****     last_quad_count2 = quad_count2;
 1747              		.loc 1 395 0
 1748 000e 664B     		ldr	r3, .L112+8
 1749 0010 1A88     		ldrh	r2, [r3]
 1750 0012 664B     		ldr	r3, .L112+12
 1751 0014 1A80     		strh	r2, [r3]	@ movhi
 396:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1752              		.loc 1 396 0
 1753 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1754 001a 0346     		mov	r3, r0
 1755 001c 1A46     		mov	r2, r3
 1756 001e 604B     		ldr	r3, .L112
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 39


 1757 0020 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1758              		.loc 1 397 0
 1759 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1760 0026 0346     		mov	r3, r0
 1761 0028 1A46     		mov	r2, r3
 1762 002a 5F4B     		ldr	r3, .L112+8
 1763 002c 1A80     		strh	r2, [r3]	@ movhi
 398:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1764              		.loc 1 398 0
 1765 002e 5C4B     		ldr	r3, .L112
 1766 0030 1B88     		ldrh	r3, [r3]
 1767 0032 9AB2     		uxth	r2, r3
 1768 0034 5B4B     		ldr	r3, .L112+4
 1769 0036 1B88     		ldrh	r3, [r3]
 1770 0038 9BB2     		uxth	r3, r3
 1771 003a D31A     		subs	r3, r2, r3
 1772 003c 9BB2     		uxth	r3, r3
 1773 003e 9AB2     		uxth	r2, r3
 1774 0040 5B4B     		ldr	r3, .L112+16
 1775 0042 1A80     		strh	r2, [r3]	@ movhi
 399:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1776              		.loc 1 399 0
 1777 0044 584B     		ldr	r3, .L112+8
 1778 0046 1B88     		ldrh	r3, [r3]
 1779 0048 9AB2     		uxth	r2, r3
 1780 004a 584B     		ldr	r3, .L112+12
 1781 004c 1B88     		ldrh	r3, [r3]
 1782 004e 9BB2     		uxth	r3, r3
 1783 0050 D31A     		subs	r3, r2, r3
 1784 0052 9BB2     		uxth	r3, r3
 1785 0054 9AB2     		uxth	r2, r3
 1786 0056 574B     		ldr	r3, .L112+20
 1787 0058 1A80     		strh	r2, [r3]	@ movhi
 400:.\main.c      ****     
 401:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && track_mode 
 1788              		.loc 1 401 0
 1789 005a 514B     		ldr	r3, .L112
 1790 005c 1B88     		ldrh	r3, [r3]
 1791 005e 1BB2     		sxth	r3, r3
 1792 0060 002B     		cmp	r3, #0
 1793 0062 B8BF     		it	lt
 1794 0064 5B42     		rsblt	r3, r3, #0
 1795 0066 40F6B832 		movw	r2, #3000
 1796 006a 9342     		cmp	r3, r2
 1797 006c 17DD     		ble	.L106
 1798              		.loc 1 401 0 is_stmt 0 discriminator 1
 1799 006e 524B     		ldr	r3, .L112+24
 1800 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0072 012B     		cmp	r3, #1
 1802 0074 13D0     		beq	.L106
 1803              		.loc 1 401 0 discriminator 2
 1804 0076 504B     		ldr	r3, .L112+24
 1805 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1806 007a 022B     		cmp	r3, #2
 1807 007c 0FD0     		beq	.L106
 1808              		.loc 1 401 0 discriminator 3
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 40


 1809 007e 4F4B     		ldr	r3, .L112+28
 1810 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 0082 042B     		cmp	r3, #4
 1812 0084 0BD0     		beq	.L106
 402:.\main.c      ****     {
 403:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1813              		.loc 1 403 0 is_stmt 1
 1814 0086 0020     		movs	r0, #0
 1815 0088 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 404:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1816              		.loc 1 404 0
 1817 008c 0020     		movs	r0, #0
 1818 008e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 405:.\main.c      ****         quad_count1 = 0;
 1819              		.loc 1 405 0
 1820 0092 434B     		ldr	r3, .L112
 1821 0094 0022     		movs	r2, #0
 1822 0096 1A80     		strh	r2, [r3]	@ movhi
 406:.\main.c      ****         quad_count2 = 0;
 1823              		.loc 1 406 0
 1824 0098 434B     		ldr	r3, .L112+8
 1825 009a 0022     		movs	r2, #0
 1826 009c 1A80     		strh	r2, [r3]	@ movhi
 1827              	.L106:
 407:.\main.c      ****     }
 408:.\main.c      **** 
 409:.\main.c      ****     flag_calc_wheelspeed = 1;
 1828              		.loc 1 409 0
 1829 009e 484B     		ldr	r3, .L112+32
 1830 00a0 0122     		movs	r2, #1
 1831 00a2 1A70     		strb	r2, [r3]
 410:.\main.c      ****     
 411:.\main.c      ****     if (track_mode == QUAD_STOP)
 1832              		.loc 1 411 0
 1833 00a4 454B     		ldr	r3, .L112+28
 1834 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 00a8 042B     		cmp	r3, #4
 1836 00aa 2AD1     		bne	.L107
 1837              	.LBB4:
 412:.\main.c      ****     {
 413:.\main.c      ****         accum_dist += quad_diff1;
 1838              		.loc 1 413 0
 1839 00ac 454B     		ldr	r3, .L112+36
 1840 00ae 1B88     		ldrh	r3, [r3]
 1841 00b0 9AB2     		uxth	r2, r3
 1842 00b2 3F4B     		ldr	r3, .L112+16
 1843 00b4 1B88     		ldrh	r3, [r3]
 1844 00b6 9BB2     		uxth	r3, r3
 1845 00b8 1344     		add	r3, r3, r2
 1846 00ba 9BB2     		uxth	r3, r3
 1847 00bc 9AB2     		uxth	r2, r3
 1848 00be 414B     		ldr	r3, .L112+36
 1849 00c0 1A80     		strh	r2, [r3]	@ movhi
 414:.\main.c      ****         char mes[16];
 415:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 1850              		.loc 1 415 0
 1851 00c2 404B     		ldr	r3, .L112+36
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 41


 1852 00c4 1B88     		ldrh	r3, [r3]
 1853 00c6 1BB2     		sxth	r3, r3
 1854 00c8 3A46     		mov	r2, r7
 1855 00ca 1046     		mov	r0, r2
 1856 00cc 3E49     		ldr	r1, .L112+40
 1857 00ce 1A46     		mov	r2, r3
 1858 00d0 FFF7FEFF 		bl	sprintf
 416:.\main.c      ****         UART_PutString(mes);
 1859              		.loc 1 416 0
 1860 00d4 3B46     		mov	r3, r7
 1861 00d6 1846     		mov	r0, r3
 1862 00d8 FFF7FEFF 		bl	UART_PutString
 417:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 1863              		.loc 1 417 0
 1864 00dc 394B     		ldr	r3, .L112+36
 1865 00de 1B88     		ldrh	r3, [r3]
 1866 00e0 1BB2     		sxth	r3, r3
 1867 00e2 83EAE372 		eor	r2, r3, r3, asr #31
 1868 00e6 A2EBE372 		sub	r2, r2, r3, asr #31
 1869 00ea 384B     		ldr	r3, .L112+44
 1870 00ec 1B88     		ldrh	r3, [r3]
 1871 00ee 1BB2     		sxth	r3, r3
 1872 00f0 9A42     		cmp	r2, r3
 1873 00f2 05DB     		blt	.L108
 418:.\main.c      ****         {
 419:.\main.c      ****             initBrake();
 1874              		.loc 1 419 0
 1875 00f4 FFF7FEFF 		bl	initBrake
 420:.\main.c      ****             track_mode = NO_TRACK;
 1876              		.loc 1 420 0
 1877 00f8 304B     		ldr	r3, .L112+28
 1878 00fa 0022     		movs	r2, #0
 1879 00fc 1A70     		strb	r2, [r3]
 1880              	.LBE4:
 1881 00fe 4CE0     		b	.L105
 1882              	.L108:
 1883 0100 4BE0     		b	.L105
 1884              	.L107:
 421:.\main.c      ****         }
 422:.\main.c      ****     } else if (track_mode == RF_STOP)
 1885              		.loc 1 422 0
 1886 0102 2E4B     		ldr	r3, .L112+28
 1887 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1888 0106 052B     		cmp	r3, #5
 1889 0108 47D1     		bne	.L105
 1890              	.LBB5:
 423:.\main.c      ****     { 
 424:.\main.c      ****         // Do pythag
 425:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 1891              		.loc 1 425 0
 1892 010a 314B     		ldr	r3, .L112+48
 1893 010c 5B88     		ldrh	r3, [r3, #2]
 1894 010e 1AB2     		sxth	r2, r3
 1895 0110 304B     		ldr	r3, .L112+52
 1896 0112 1B88     		ldrh	r3, [r3]
 1897 0114 1BB2     		sxth	r3, r3
 1898 0116 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 42


 1899 0118 1846     		mov	r0, r3
 1900 011a FFF7FEFF 		bl	__aeabi_i2d
 1901 011e 0246     		mov	r2, r0
 1902 0120 0B46     		mov	r3, r1
 1903 0122 1046     		mov	r0, r2
 1904 0124 1946     		mov	r1, r3
 1905 0126 4FF00002 		mov	r2, #0
 1906 012a 2B4B     		ldr	r3, .L112+56
 1907 012c FFF7FEFF 		bl	__aeabi_ddiv
 1908 0130 0246     		mov	r2, r0
 1909 0132 0B46     		mov	r3, r1
 1910 0134 1446     		mov	r4, r2
 1911 0136 1D46     		mov	r5, r3
 1912 0138 254B     		ldr	r3, .L112+48
 1913 013a 9B88     		ldrh	r3, [r3, #4]
 1914 013c 1AB2     		sxth	r2, r3
 1915 013e 274B     		ldr	r3, .L112+60
 1916 0140 1B88     		ldrh	r3, [r3]
 1917 0142 1BB2     		sxth	r3, r3
 1918 0144 D31A     		subs	r3, r2, r3
 1919 0146 1846     		mov	r0, r3
 1920 0148 FFF7FEFF 		bl	__aeabi_i2d
 1921 014c 0246     		mov	r2, r0
 1922 014e 0B46     		mov	r3, r1
 1923 0150 1046     		mov	r0, r2
 1924 0152 1946     		mov	r1, r3
 1925 0154 4FF00002 		mov	r2, #0
 1926 0158 1F4B     		ldr	r3, .L112+56
 1927 015a FFF7FEFF 		bl	__aeabi_ddiv
 1928 015e 0246     		mov	r2, r0
 1929 0160 0B46     		mov	r3, r1
 1930 0162 2046     		mov	r0, r4
 1931 0164 2946     		mov	r1, r5
 1932 0166 FFF7FEFF 		bl	hypot
 1933 016a C7E90401 		strd	r0, [r7, #16]
 426:.\main.c      ****         if (dist >= target_distance_cm)
 1934              		.loc 1 426 0
 1935 016e 1C4B     		ldr	r3, .L112+64
 1936 0170 1B88     		ldrh	r3, [r3]
 1937 0172 1BB2     		sxth	r3, r3
 1938 0174 1846     		mov	r0, r3
 1939 0176 FFF7FEFF 		bl	__aeabi_i2d
 1940 017a 0246     		mov	r2, r0
 1941 017c 0B46     		mov	r3, r1
 1942 017e 1046     		mov	r0, r2
 1943 0180 1946     		mov	r1, r3
 1944 0182 D7E90423 		ldrd	r2, [r7, #16]
 1945 0186 FFF7FEFF 		bl	__aeabi_dcmple
 1946 018a 0346     		mov	r3, r0
 1947 018c 002B     		cmp	r3, #0
 1948 018e 04D0     		beq	.L105
 427:.\main.c      ****         {
 428:.\main.c      ****             initBrake();
 1949              		.loc 1 428 0
 1950 0190 FFF7FEFF 		bl	initBrake
 429:.\main.c      ****             track_mode = NO_TRACK;
 1951              		.loc 1 429 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 43


 1952 0194 094B     		ldr	r3, .L112+28
 1953 0196 0022     		movs	r2, #0
 1954 0198 1A70     		strb	r2, [r3]
 1955              	.L105:
 1956              	.LBE5:
 430:.\main.c      ****         }
 431:.\main.c      ****     }
 432:.\main.c      ****     
 433:.\main.c      **** }
 1957              		.loc 1 433 0
 1958 019a 1837     		adds	r7, r7, #24
 1959              		.cfi_def_cfa_offset 16
 1960 019c BD46     		mov	sp, r7
 1961              		.cfi_def_cfa_register 13
 1962              		@ sp needed
 1963 019e B0BD     		pop	{r4, r5, r7, pc}
 1964              	.L113:
 1965              		.align	2
 1966              	.L112:
 1967 01a0 00000000 		.word	quad_count1
 1968 01a4 00000000 		.word	last_quad_count1
 1969 01a8 00000000 		.word	quad_count2
 1970 01ac 00000000 		.word	last_quad_count2
 1971 01b0 00000000 		.word	quad_diff1
 1972 01b4 00000000 		.word	quad_diff2
 1973 01b8 00000000 		.word	movement_state
 1974 01bc 00000000 		.word	track_mode
 1975 01c0 00000000 		.word	flag_calc_wheelspeed
 1976 01c4 00000000 		.word	accum_dist
 1977 01c8 20000000 		.word	.LC2
 1978 01cc 00000000 		.word	target_distance_quad
 1979 01d0 00000000 		.word	system_state
 1980 01d4 00000000 		.word	initial_x_pos
 1981 01d8 00001040 		.word	1074790400
 1982 01dc 00000000 		.word	initial_y_pos
 1983 01e0 00000000 		.word	target_distance_cm
 1984              		.cfi_endproc
 1985              	.LFE85:
 1986              		.size	isr_quad1, .-isr_quad1
 1987              		.section	.text.isr_turn_timer,"ax",%progbits
 1988              		.align	2
 1989              		.global	isr_turn_timer
 1990              		.thumb
 1991              		.thumb_func
 1992              		.type	isr_turn_timer, %function
 1993              	isr_turn_timer:
 1994              	.LFB86:
 434:.\main.c      **** 
 435:.\main.c      **** CY_ISR(isr_turn_timer)
 436:.\main.c      **** {
 1995              		.loc 1 436 0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 0
 1998              		@ frame_needed = 1, uses_anonymous_args = 0
 1999 0000 80B5     		push	{r7, lr}
 2000              		.cfi_def_cfa_offset 8
 2001              		.cfi_offset 7, -8
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 44


 2002              		.cfi_offset 14, -4
 2003 0002 00AF     		add	r7, sp, #0
 2004              		.cfi_def_cfa_register 7
 437:.\main.c      ****     if(movement_state == LTURN)
 2005              		.loc 1 437 0
 2006 0004 194B     		ldr	r3, .L118
 2007 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 0008 012B     		cmp	r3, #1
 2009 000a 15D1     		bne	.L115
 438:.\main.c      ****     {
 439:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 2010              		.loc 1 439 0
 2011 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2012 0010 0346     		mov	r3, r0
 2013 0012 1A46     		mov	r2, r3
 2014 0014 164B     		ldr	r3, .L118+4
 2015 0016 1B88     		ldrh	r3, [r3]
 2016 0018 1BB2     		sxth	r3, r3
 2017 001a D31A     		subs	r3, r2, r3
 2018 001c 002B     		cmp	r3, #0
 2019 001e B8BF     		it	lt
 2020 0020 5B42     		rsblt	r3, r3, #0
 2021 0022 CF2B     		cmp	r3, #207
 2022 0024 21DD     		ble	.L114
 440:.\main.c      ****         {
 441:.\main.c      ****             //movement_state = STOPPED;
 442:.\main.c      ****             brakeMotor();
 2023              		.loc 1 442 0
 2024 0026 FFF7FEFF 		bl	brakeMotor
 443:.\main.c      ****             movement_state = prev_movement_state;
 2025              		.loc 1 443 0
 2026 002a 124B     		ldr	r3, .L118+8
 2027 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2028 002e 0F4B     		ldr	r3, .L118
 2029 0030 1A70     		strb	r2, [r3]
 444:.\main.c      ****             Timer_2_Stop();
 2030              		.loc 1 444 0
 2031 0032 FFF7FEFF 		bl	Timer_2_Stop
 2032 0036 18E0     		b	.L114
 2033              	.L115:
 445:.\main.c      ****         }
 446:.\main.c      ****     }
 447:.\main.c      ****     else if (movement_state == RTURN)
 2034              		.loc 1 447 0
 2035 0038 0C4B     		ldr	r3, .L118
 2036 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2037 003c 022B     		cmp	r3, #2
 2038 003e 14D1     		bne	.L114
 448:.\main.c      ****     {
 449:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2039              		.loc 1 449 0
 2040 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2041 0044 0346     		mov	r3, r0
 2042 0046 1A46     		mov	r2, r3
 2043 0048 094B     		ldr	r3, .L118+4
 2044 004a 1B88     		ldrh	r3, [r3]
 2045 004c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 45


 2046 004e D31A     		subs	r3, r2, r3
 2047 0050 002B     		cmp	r3, #0
 2048 0052 B8BF     		it	lt
 2049 0054 5B42     		rsblt	r3, r3, #0
 2050 0056 CF2B     		cmp	r3, #207
 2051 0058 07DD     		ble	.L114
 450:.\main.c      ****         {
 451:.\main.c      ****             //movement_state = STOPPED;
 452:.\main.c      ****             brakeMotor();
 2052              		.loc 1 452 0
 2053 005a FFF7FEFF 		bl	brakeMotor
 453:.\main.c      ****             movement_state = prev_movement_state;
 2054              		.loc 1 453 0
 2055 005e 054B     		ldr	r3, .L118+8
 2056 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2057 0062 024B     		ldr	r3, .L118
 2058 0064 1A70     		strb	r2, [r3]
 454:.\main.c      ****             Timer_2_Stop();
 2059              		.loc 1 454 0
 2060 0066 FFF7FEFF 		bl	Timer_2_Stop
 2061              	.L114:
 455:.\main.c      ****         }
 456:.\main.c      ****     }
 457:.\main.c      **** }
 2062              		.loc 1 457 0
 2063 006a 80BD     		pop	{r7, pc}
 2064              	.L119:
 2065              		.align	2
 2066              	.L118:
 2067 006c 00000000 		.word	movement_state
 2068 0070 00000000 		.word	start_turn_count
 2069 0074 00000000 		.word	prev_movement_state
 2070              		.cfi_endproc
 2071              	.LFE86:
 2072              		.size	isr_turn_timer, .-isr_turn_timer
 2073              		.section	.text.Stop_on_line,"ax",%progbits
 2074              		.align	2
 2075              		.global	Stop_on_line
 2076              		.thumb
 2077              		.thumb_func
 2078              		.type	Stop_on_line, %function
 2079              	Stop_on_line:
 2080              	.LFB87:
 458:.\main.c      **** 
 459:.\main.c      **** 
 460:.\main.c      **** CY_ISR (Stop_on_line)
 461:.\main.c      **** {
 2081              		.loc 1 461 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 1, uses_anonymous_args = 0
 2085              		@ link register save eliminated.
 2086 0000 80B4     		push	{r7}
 2087              		.cfi_def_cfa_offset 4
 2088              		.cfi_offset 7, -4
 2089 0002 00AF     		add	r7, sp, #0
 2090              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 46


 462:.\main.c      ****     movement_state = STOPPED;
 2091              		.loc 1 462 0
 2092 0004 054B     		ldr	r3, .L122
 2093 0006 0322     		movs	r2, #3
 2094 0008 1A70     		strb	r2, [r3]
 463:.\main.c      ****     if(movement_state != DRIVE) return;
 2095              		.loc 1 463 0
 2096 000a 044B     		ldr	r3, .L122
 2097 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2098 000e 002B     		cmp	r3, #0
 2099 0010 00D0     		beq	.L120
 2100 0012 00BF     		nop
 2101              	.L120:
 464:.\main.c      ****     //initTurnLeft();
 465:.\main.c      **** }
 2102              		.loc 1 465 0
 2103 0014 BD46     		mov	sp, r7
 2104              		.cfi_def_cfa_register 13
 2105              		@ sp needed
 2106 0016 5DF8047B 		ldr	r7, [sp], #4
 2107              		.cfi_restore 7
 2108              		.cfi_def_cfa_offset 0
 2109 001a 7047     		bx	lr
 2110              	.L123:
 2111              		.align	2
 2112              	.L122:
 2113 001c 00000000 		.word	movement_state
 2114              		.cfi_endproc
 2115              	.LFE87:
 2116              		.size	Stop_on_line, .-Stop_on_line
 2117              		.section	.rodata
 2118 002b 00       		.align	2
 2119              	.LC3:
 2120 002c 53746172 		.ascii	"Starting robot!\015\012\000"
 2120      74696E67 
 2120      20726F62 
 2120      6F74210D 
 2120      0A00
 2121              		.section	.text.button,"ax",%progbits
 2122              		.align	2
 2123              		.global	button
 2124              		.thumb
 2125              		.thumb_func
 2126              		.type	button, %function
 2127              	button:
 2128              	.LFB88:
 466:.\main.c      **** 
 467:.\main.c      **** CY_ISR (button)
 468:.\main.c      **** {
 2129              		.loc 1 468 0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 0
 2132              		@ frame_needed = 1, uses_anonymous_args = 0
 2133 0000 80B5     		push	{r7, lr}
 2134              		.cfi_def_cfa_offset 8
 2135              		.cfi_offset 7, -8
 2136              		.cfi_offset 14, -4
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 47


 2137 0002 00AF     		add	r7, sp, #0
 2138              		.cfi_def_cfa_register 7
 469:.\main.c      ****     if(BT_ENABLED)
 2139              		.loc 1 469 0
 2140 0004 054B     		ldr	r3, .L126
 2141 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2142 0008 002B     		cmp	r3, #0
 2143 000a 02D0     		beq	.L125
 470:.\main.c      ****     {
 471:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2144              		.loc 1 471 0
 2145 000c 0448     		ldr	r0, .L126+4
 2146 000e FFF7FEFF 		bl	UART_PutString
 2147              	.L125:
 472:.\main.c      ****     }
 473:.\main.c      ****     movement_state = DRIVE;
 2148              		.loc 1 473 0
 2149 0012 044B     		ldr	r3, .L126+8
 2150 0014 0022     		movs	r2, #0
 2151 0016 1A70     		strb	r2, [r3]
 474:.\main.c      **** }
 2152              		.loc 1 474 0
 2153 0018 80BD     		pop	{r7, pc}
 2154              	.L127:
 2155 001a 00BF     		.align	2
 2156              	.L126:
 2157 001c 00000000 		.word	BT_ENABLED
 2158 0020 2C000000 		.word	.LC3
 2159 0024 00000000 		.word	movement_state
 2160              		.cfi_endproc
 2161              	.LFE88:
 2162              		.size	button, .-button
 2163              		.section	.text.isr_adcTimer,"ax",%progbits
 2164              		.align	2
 2165              		.global	isr_adcTimer
 2166              		.thumb
 2167              		.thumb_func
 2168              		.type	isr_adcTimer, %function
 2169              	isr_adcTimer:
 2170              	.LFB89:
 475:.\main.c      **** 
 476:.\main.c      **** CY_ISR(isr_adcTimer)
 477:.\main.c      **** {
 2171              		.loc 1 477 0
 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 0
 2174              		@ frame_needed = 1, uses_anonymous_args = 0
 2175 0000 80B5     		push	{r7, lr}
 2176              		.cfi_def_cfa_offset 8
 2177              		.cfi_offset 7, -8
 2178              		.cfi_offset 14, -4
 2179 0002 00AF     		add	r7, sp, #0
 2180              		.cfi_def_cfa_register 7
 478:.\main.c      ****     ADC_StartConvert();
 2181              		.loc 1 478 0
 2182 0004 FFF7FEFF 		bl	ADC_StartConvert
 479:.\main.c      **** }
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 48


 2183              		.loc 1 479 0
 2184 0008 80BD     		pop	{r7, pc}
 2185              		.cfi_endproc
 2186              	.LFE89:
 2187              		.size	isr_adcTimer, .-isr_adcTimer
 2188 000a 00BF     		.section	.text.changeToRF,"ax",%progbits
 2189              		.align	2
 2190              		.global	changeToRF
 2191              		.thumb
 2192              		.thumb_func
 2193              		.type	changeToRF, %function
 2194              	changeToRF:
 2195              	.LFB90:
 480:.\main.c      **** 
 481:.\main.c      **** 
 482:.\main.c      **** void changeToRF()
 483:.\main.c      **** {
 2196              		.loc 1 483 0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 1, uses_anonymous_args = 0
 2200 0000 80B5     		push	{r7, lr}
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 7, -8
 2203              		.cfi_offset 14, -4
 2204 0002 00AF     		add	r7, sp, #0
 2205              		.cfi_def_cfa_register 7
 484:.\main.c      ****         //disable BT
 485:.\main.c      ****         BT_ENABLED = 0;
 2206              		.loc 1 485 0
 2207 0004 0B4B     		ldr	r3, .L130
 2208 0006 0022     		movs	r2, #0
 2209 0008 1A70     		strb	r2, [r3]
 486:.\main.c      ****         isrRF_RX_Stop();
 2210              		.loc 1 486 0
 2211 000a FFF7FEFF 		bl	isrRF_RX_Stop
 487:.\main.c      ****         UART_Stop();
 2212              		.loc 1 487 0
 2213 000e FFF7FEFF 		bl	UART_Stop
 488:.\main.c      ****         
 489:.\main.c      ****         //enable RF
 490:.\main.c      ****         BIN_ENABLED = 1;
 2214              		.loc 1 490 0
 2215 0012 094B     		ldr	r3, .L130+4
 2216 0014 0122     		movs	r2, #1
 2217 0016 1A70     		strb	r2, [r3]
 491:.\main.c      ****         UART_clk_SetDividerValue(130);
 2218              		.loc 1 491 0
 2219 0018 8120     		movs	r0, #129
 2220 001a 0121     		movs	r1, #1
 2221 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 492:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 2222              		.loc 1 492 0
 2223 0020 0648     		ldr	r0, .L130+8
 2224 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 493:.\main.c      ****         UART_Start();
 2225              		.loc 1 493 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 49


 2226 0026 FFF7FEFF 		bl	UART_Start
 494:.\main.c      ****         RF_BT_SELECT_Write(0);
 2227              		.loc 1 494 0
 2228 002a 0020     		movs	r0, #0
 2229 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 495:.\main.c      **** }
 2230              		.loc 1 495 0
 2231 0030 80BD     		pop	{r7, pc}
 2232              	.L131:
 2233 0032 00BF     		.align	2
 2234              	.L130:
 2235 0034 00000000 		.word	BT_ENABLED
 2236 0038 00000000 		.word	BIN_ENABLED
 2237 003c 00000000 		.word	rxInt
 2238              		.cfi_endproc
 2239              	.LFE90:
 2240              		.size	changeToRF, .-changeToRF
 2241              		.section	.text.changeToBT,"ax",%progbits
 2242              		.align	2
 2243              		.global	changeToBT
 2244              		.thumb
 2245              		.thumb_func
 2246              		.type	changeToBT, %function
 2247              	changeToBT:
 2248              	.LFB91:
 496:.\main.c      **** 
 497:.\main.c      **** void changeToBT()
 498:.\main.c      **** {
 2249              		.loc 1 498 0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 0
 2252              		@ frame_needed = 1, uses_anonymous_args = 0
 2253 0000 80B5     		push	{r7, lr}
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 7, -8
 2256              		.cfi_offset 14, -4
 2257 0002 00AF     		add	r7, sp, #0
 2258              		.cfi_def_cfa_register 7
 499:.\main.c      ****         //disable RF
 500:.\main.c      ****         BIN_ENABLED = 0;
 2259              		.loc 1 500 0
 2260 0004 0B4B     		ldr	r3, .L133
 2261 0006 0022     		movs	r2, #0
 2262 0008 1A70     		strb	r2, [r3]
 501:.\main.c      ****         isrRF_RX_Stop();
 2263              		.loc 1 501 0
 2264 000a FFF7FEFF 		bl	isrRF_RX_Stop
 502:.\main.c      ****         UART_Stop();
 2265              		.loc 1 502 0
 2266 000e FFF7FEFF 		bl	UART_Stop
 503:.\main.c      ****         
 504:.\main.c      ****         //enable BT
 505:.\main.c      ****         BT_ENABLED = 1;
 2267              		.loc 1 505 0
 2268 0012 094B     		ldr	r3, .L133+4
 2269 0014 0122     		movs	r2, #1
 2270 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 50


 506:.\main.c      ****         UART_clk_SetDividerValue(781);
 2271              		.loc 1 506 0
 2272 0018 4FF44370 		mov	r0, #780
 2273 001c 0121     		movs	r1, #1
 2274 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 507:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2275              		.loc 1 507 0
 2276 0022 0648     		ldr	r0, .L133+8
 2277 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 508:.\main.c      ****         UART_Start();
 2278              		.loc 1 508 0
 2279 0028 FFF7FEFF 		bl	UART_Start
 509:.\main.c      ****         RF_BT_SELECT_Write(1);
 2280              		.loc 1 509 0
 2281 002c 0120     		movs	r0, #1
 2282 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 510:.\main.c      **** }
 2283              		.loc 1 510 0
 2284 0032 80BD     		pop	{r7, pc}
 2285              	.L134:
 2286              		.align	2
 2287              	.L133:
 2288 0034 00000000 		.word	BIN_ENABLED
 2289 0038 00000000 		.word	BT_ENABLED
 2290 003c 00000000 		.word	BT_rxInt
 2291              		.cfi_endproc
 2292              	.LFE91:
 2293              		.size	changeToBT, .-changeToBT
 2294              		.section	.text.Quad_Dec_response,"ax",%progbits
 2295              		.align	2
 2296              		.global	Quad_Dec_response
 2297              		.thumb
 2298              		.thumb_func
 2299              		.type	Quad_Dec_response, %function
 2300              	Quad_Dec_response:
 2301              	.LFB92:
 511:.\main.c      **** 
 512:.\main.c      **** 
 513:.\main.c      **** void Quad_Dec_response()
 514:.\main.c      **** {
 2302              		.loc 1 514 0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 32
 2305              		@ frame_needed = 1, uses_anonymous_args = 0
 2306 0000 B0B5     		push	{r4, r5, r7, lr}
 2307              		.cfi_def_cfa_offset 16
 2308              		.cfi_offset 4, -16
 2309              		.cfi_offset 5, -12
 2310              		.cfi_offset 7, -8
 2311              		.cfi_offset 14, -4
 2312 0002 88B0     		sub	sp, sp, #32
 2313              		.cfi_def_cfa_offset 48
 2314 0004 00AF     		add	r7, sp, #0
 2315              		.cfi_def_cfa_register 7
 515:.\main.c      ****     //Check if the flag has been set
 516:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2316              		.loc 1 516 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 51


 2317 0006 814B     		ldr	r3, .L143
 2318 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2319 000a 002B     		cmp	r3, #0
 2320 000c 00D1     		bne	.L136
 2321 000e FAE0     		b	.L135
 2322              	.L136:
 517:.\main.c      ****     flag_calc_wheelspeed = 0;
 2323              		.loc 1 517 0
 2324 0010 7E4B     		ldr	r3, .L143
 2325 0012 0022     		movs	r2, #0
 2326 0014 1A70     		strb	r2, [r3]
 518:.\main.c      ****     
 519:.\main.c      ****     //char wheel_1_str [64];
 520:.\main.c      ****     //char wheel_2_str [64];
 521:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 522:.\main.c      ****     //usbPutString(wheel_1_str);
 523:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 524:.\main.c      ****     
 525:.\main.c      ****     //usbPutString(wheel_2_str);
 526:.\main.c      ****     
 527:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2327              		.loc 1 527 0
 2328 0016 7E4B     		ldr	r3, .L143+4
 2329 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2330 001a FB81     		strh	r3, [r7, #14]	@ movhi
 528:.\main.c      ****     int16 rightSpeed = quad_diff2;
 2331              		.loc 1 528 0
 2332 001c 7D4B     		ldr	r3, .L143+8
 2333 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2334 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 529:.\main.c      ****     double scalingLeft = 1;
 2335              		.loc 1 529 0
 2336 0022 4FF00002 		mov	r2, #0
 2337 0026 7C4B     		ldr	r3, .L143+12
 2338 0028 C7E90623 		strd	r2, [r7, #24]
 530:.\main.c      ****     double scalingRight = 1;
 2339              		.loc 1 530 0
 2340 002c 4FF00002 		mov	r2, #0
 2341 0030 794B     		ldr	r3, .L143+12
 2342 0032 C7E90423 		strd	r2, [r7, #16]
 531:.\main.c      ****     
 532:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 533:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2343              		.loc 1 533 0
 2344 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2345 003a 002B     		cmp	r3, #0
 2346 003c 0DD1     		bne	.L138
 2347              		.loc 1 533 0 is_stmt 0 discriminator 1
 2348 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2349 0042 002B     		cmp	r3, #0
 2350 0044 09D1     		bne	.L138
 534:.\main.c      ****        //leftSpeed = 3;
 535:.\main.c      ****         scalingLeft = 8;
 2351              		.loc 1 535 0 is_stmt 1
 2352 0046 4FF00002 		mov	r2, #0
 2353 004a 744B     		ldr	r3, .L143+16
 2354 004c C7E90623 		strd	r2, [r7, #24]
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 52


 536:.\main.c      ****         scalingRight = 8;
 2355              		.loc 1 536 0
 2356 0050 4FF00002 		mov	r2, #0
 2357 0054 714B     		ldr	r3, .L143+16
 2358 0056 C7E90423 		strd	r2, [r7, #16]
 2359              	.L138:
 537:.\main.c      ****     }
 538:.\main.c      **** 
 539:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2360              		.loc 1 539 0
 2361 005a 714B     		ldr	r3, .L143+20
 2362 005c 1B88     		ldrh	r3, [r3]
 2363 005e 1AB2     		sxth	r2, r3
 2364 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2365 0064 002B     		cmp	r3, #0
 2366 0066 B8BF     		it	lt
 2367 0068 5B42     		rsblt	r3, r3, #0
 2368 006a D31A     		subs	r3, r2, r3
 2369 006c BB60     		str	r3, [r7, #8]
 540:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 2370              		.loc 1 540 0
 2371 006e BB68     		ldr	r3, [r7, #8]
 2372 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2373 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2374 0078 BB68     		ldr	r3, [r7, #8]
 2375 007a 92FBF3F3 		sdiv	r3, r2, r3
 2376 007e 1846     		mov	r0, r3
 2377 0080 FFF7FEFF 		bl	__aeabi_i2d
 2378 0084 0446     		mov	r4, r0
 2379 0086 0D46     		mov	r5, r1
 2380 0088 BB68     		ldr	r3, [r7, #8]
 2381 008a 002B     		cmp	r3, #0
 2382 008c B8BF     		it	lt
 2383 008e 5B42     		rsblt	r3, r3, #0
 2384 0090 1846     		mov	r0, r3
 2385 0092 FFF7FEFF 		bl	__aeabi_i2d
 2386 0096 0246     		mov	r2, r0
 2387 0098 0B46     		mov	r3, r1
 2388 009a 1046     		mov	r0, r2
 2389 009c 1946     		mov	r1, r3
 2390 009e FFF7FEFF 		bl	sqrt
 2391 00a2 0246     		mov	r2, r0
 2392 00a4 0B46     		mov	r3, r1
 2393 00a6 2046     		mov	r0, r4
 2394 00a8 2946     		mov	r1, r5
 2395 00aa FFF7FEFF 		bl	__aeabi_dmul
 2396 00ae 0246     		mov	r2, r0
 2397 00b0 0B46     		mov	r3, r1
 2398 00b2 1046     		mov	r0, r2
 2399 00b4 1946     		mov	r1, r3
 2400 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2401 00ba 0346     		mov	r3, r0
 2402 00bc 7B60     		str	r3, [r7, #4]
 541:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2403              		.loc 1 541 0
 2404 00be 594B     		ldr	r3, .L143+24
 2405 00c0 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 53


 2406 00c2 1BB2     		sxth	r3, r3
 2407 00c4 1846     		mov	r0, r3
 2408 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2409 00ca 0446     		mov	r4, r0
 2410 00cc 0D46     		mov	r5, r1
 2411 00ce 7868     		ldr	r0, [r7, #4]
 2412 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2413 00d4 0246     		mov	r2, r0
 2414 00d6 0B46     		mov	r3, r1
 2415 00d8 1046     		mov	r0, r2
 2416 00da 1946     		mov	r1, r3
 2417 00dc D7E90623 		ldrd	r2, [r7, #24]
 2418 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2419 00e4 0246     		mov	r2, r0
 2420 00e6 0B46     		mov	r3, r1
 2421 00e8 2046     		mov	r0, r4
 2422 00ea 2946     		mov	r1, r5
 2423 00ec FFF7FEFF 		bl	__aeabi_dadd
 2424 00f0 0246     		mov	r2, r0
 2425 00f2 0B46     		mov	r3, r1
 2426 00f4 1046     		mov	r0, r2
 2427 00f6 1946     		mov	r1, r3
 2428 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2429 00fc 0346     		mov	r3, r0
 2430 00fe 9AB2     		uxth	r2, r3
 2431 0100 484B     		ldr	r3, .L143+24
 2432 0102 1A80     		strh	r2, [r3]	@ movhi
 542:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2433              		.loc 1 542 0
 2434 0104 484B     		ldr	r3, .L143+28
 2435 0106 1B88     		ldrh	r3, [r3]
 2436 0108 1AB2     		sxth	r2, r3
 2437 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2438 010e 002B     		cmp	r3, #0
 2439 0110 B8BF     		it	lt
 2440 0112 5B42     		rsblt	r3, r3, #0
 2441 0114 D31A     		subs	r3, r2, r3
 2442 0116 BB60     		str	r3, [r7, #8]
 543:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2443              		.loc 1 543 0
 2444 0118 BB68     		ldr	r3, [r7, #8]
 2445 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2446 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2447 0122 BB68     		ldr	r3, [r7, #8]
 2448 0124 92FBF3F3 		sdiv	r3, r2, r3
 2449 0128 1846     		mov	r0, r3
 2450 012a FFF7FEFF 		bl	__aeabi_i2d
 2451 012e 0446     		mov	r4, r0
 2452 0130 0D46     		mov	r5, r1
 2453 0132 BB68     		ldr	r3, [r7, #8]
 2454 0134 002B     		cmp	r3, #0
 2455 0136 B8BF     		it	lt
 2456 0138 5B42     		rsblt	r3, r3, #0
 2457 013a 1846     		mov	r0, r3
 2458 013c FFF7FEFF 		bl	__aeabi_i2d
 2459 0140 0246     		mov	r2, r0
 2460 0142 0B46     		mov	r3, r1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 54


 2461 0144 1046     		mov	r0, r2
 2462 0146 1946     		mov	r1, r3
 2463 0148 FFF7FEFF 		bl	sqrt
 2464 014c 0246     		mov	r2, r0
 2465 014e 0B46     		mov	r3, r1
 2466 0150 2046     		mov	r0, r4
 2467 0152 2946     		mov	r1, r5
 2468 0154 FFF7FEFF 		bl	__aeabi_dmul
 2469 0158 0246     		mov	r2, r0
 2470 015a 0B46     		mov	r3, r1
 2471 015c 1046     		mov	r0, r2
 2472 015e 1946     		mov	r1, r3
 2473 0160 FFF7FEFF 		bl	__aeabi_d2iz
 2474 0164 0346     		mov	r3, r0
 2475 0166 7B60     		str	r3, [r7, #4]
 544:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 2476              		.loc 1 544 0
 2477 0168 304B     		ldr	r3, .L143+32
 2478 016a 1B88     		ldrh	r3, [r3]
 2479 016c 1BB2     		sxth	r3, r3
 2480 016e 1846     		mov	r0, r3
 2481 0170 FFF7FEFF 		bl	__aeabi_i2d
 2482 0174 0446     		mov	r4, r0
 2483 0176 0D46     		mov	r5, r1
 2484 0178 7868     		ldr	r0, [r7, #4]
 2485 017a FFF7FEFF 		bl	__aeabi_i2d
 2486 017e 0246     		mov	r2, r0
 2487 0180 0B46     		mov	r3, r1
 2488 0182 1046     		mov	r0, r2
 2489 0184 1946     		mov	r1, r3
 2490 0186 D7E90423 		ldrd	r2, [r7, #16]
 2491 018a FFF7FEFF 		bl	__aeabi_dmul
 2492 018e 0246     		mov	r2, r0
 2493 0190 0B46     		mov	r3, r1
 2494 0192 2046     		mov	r0, r4
 2495 0194 2946     		mov	r1, r5
 2496 0196 FFF7FEFF 		bl	__aeabi_dadd
 2497 019a 0246     		mov	r2, r0
 2498 019c 0B46     		mov	r3, r1
 2499 019e 1046     		mov	r0, r2
 2500 01a0 1946     		mov	r1, r3
 2501 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 2502 01a6 0346     		mov	r3, r0
 2503 01a8 9AB2     		uxth	r2, r3
 2504 01aa 204B     		ldr	r3, .L143+32
 2505 01ac 1A80     		strh	r2, [r3]	@ movhi
 545:.\main.c      ****     
 546:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 2506              		.loc 1 546 0
 2507 01ae 1F4B     		ldr	r3, .L143+32
 2508 01b0 1B88     		ldrh	r3, [r3]
 2509 01b2 1BB2     		sxth	r3, r3
 2510 01b4 002B     		cmp	r3, #0
 2511 01b6 02DA     		bge	.L139
 2512              		.loc 1 546 0 is_stmt 0 discriminator 1
 2513 01b8 1C4B     		ldr	r3, .L143+32
 2514 01ba 0022     		movs	r2, #0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 55


 2515 01bc 1A80     		strh	r2, [r3]	@ movhi
 2516              	.L139:
 547:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 2517              		.loc 1 547 0 is_stmt 1
 2518 01be 194B     		ldr	r3, .L143+24
 2519 01c0 1B88     		ldrh	r3, [r3]
 2520 01c2 1BB2     		sxth	r3, r3
 2521 01c4 002B     		cmp	r3, #0
 2522 01c6 02DA     		bge	.L140
 2523              		.loc 1 547 0 is_stmt 0 discriminator 1
 2524 01c8 164B     		ldr	r3, .L143+24
 2525 01ca 0022     		movs	r2, #0
 2526 01cc 1A80     		strh	r2, [r3]	@ movhi
 2527              	.L140:
 548:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 2528              		.loc 1 548 0 is_stmt 1
 2529 01ce 174B     		ldr	r3, .L143+32
 2530 01d0 1B88     		ldrh	r3, [r3]
 2531 01d2 1BB2     		sxth	r3, r3
 2532 01d4 642B     		cmp	r3, #100
 2533 01d6 02DD     		ble	.L141
 2534              		.loc 1 548 0 is_stmt 0 discriminator 1
 2535 01d8 144B     		ldr	r3, .L143+32
 2536 01da 6422     		movs	r2, #100
 2537 01dc 1A80     		strh	r2, [r3]	@ movhi
 2538              	.L141:
 549:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2539              		.loc 1 549 0 is_stmt 1
 2540 01de 114B     		ldr	r3, .L143+24
 2541 01e0 1B88     		ldrh	r3, [r3]
 2542 01e2 1BB2     		sxth	r3, r3
 2543 01e4 642B     		cmp	r3, #100
 2544 01e6 02DD     		ble	.L142
 2545              		.loc 1 549 0 is_stmt 0 discriminator 1
 2546 01e8 0E4B     		ldr	r3, .L143+24
 2547 01ea 6422     		movs	r2, #100
 2548 01ec 1A80     		strh	r2, [r3]	@ movhi
 2549              	.L142:
 550:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2550              		.loc 1 550 0 is_stmt 1
 2551 01ee 0D4B     		ldr	r3, .L143+24
 2552 01f0 1B88     		ldrh	r3, [r3]
 2553 01f2 DBB2     		uxtb	r3, r3
 2554 01f4 1846     		mov	r0, r3
 2555 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 551:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2556              		.loc 1 551 0
 2557 01fa 0C4B     		ldr	r3, .L143+32
 2558 01fc 1B88     		ldrh	r3, [r3]
 2559 01fe DBB2     		uxtb	r3, r3
 2560 0200 1846     		mov	r0, r3
 2561 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2562              	.L135:
 552:.\main.c      **** }
 2563              		.loc 1 552 0
 2564 0206 2037     		adds	r7, r7, #32
 2565              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 56


 2566 0208 BD46     		mov	sp, r7
 2567              		.cfi_def_cfa_register 13
 2568              		@ sp needed
 2569 020a B0BD     		pop	{r4, r5, r7, pc}
 2570              	.L144:
 2571              		.align	2
 2572              	.L143:
 2573 020c 00000000 		.word	flag_calc_wheelspeed
 2574 0210 00000000 		.word	quad_diff1
 2575 0214 00000000 		.word	quad_diff2
 2576 0218 0000F03F 		.word	1072693248
 2577 021c 00002040 		.word	1075838976
 2578 0220 00000000 		.word	leftSpeedLimit
 2579 0224 00000000 		.word	left_duty_cycle
 2580 0228 00000000 		.word	rightSpeedLimit
 2581 022c 00000000 		.word	right_duty_cycle
 2582              		.cfi_endproc
 2583              	.LFE92:
 2584              		.size	Quad_Dec_response, .-Quad_Dec_response
 2585              		.section	.text.trackLine,"ax",%progbits
 2586              		.align	2
 2587              		.global	trackLine
 2588              		.thumb
 2589              		.thumb_func
 2590              		.type	trackLine, %function
 2591              	trackLine:
 2592              	.LFB93:
 553:.\main.c      **** 
 554:.\main.c      **** void trackLine()
 555:.\main.c      **** {
 2593              		.loc 1 555 0
 2594              		.cfi_startproc
 2595              		@ args = 0, pretend = 0, frame = 8
 2596              		@ frame_needed = 1, uses_anonymous_args = 0
 2597 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2598              		.cfi_def_cfa_offset 24
 2599              		.cfi_offset 4, -24
 2600              		.cfi_offset 5, -20
 2601              		.cfi_offset 7, -16
 2602              		.cfi_offset 8, -12
 2603              		.cfi_offset 9, -8
 2604              		.cfi_offset 14, -4
 2605 0004 82B0     		sub	sp, sp, #8
 2606              		.cfi_def_cfa_offset 32
 2607 0006 00AF     		add	r7, sp, #0
 2608              		.cfi_def_cfa_register 7
 556:.\main.c      ****     //read the value of the three central-front sensors
 557:.\main.c      ****     
 558:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2609              		.loc 1 558 0
 2610 0008 FFF7FEFF 		bl	NLSens_out_Read
 2611 000c 0346     		mov	r3, r0
 2612 000e FB71     		strb	r3, [r7, #7]
 559:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2613              		.loc 1 559 0
 2614 0010 FFF7FEFF 		bl	NRSens_out_Read
 2615 0014 0346     		mov	r3, r0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 57


 2616 0016 BB71     		strb	r3, [r7, #6]
 560:.\main.c      ****     uint8 mid = MSens_out_Read();
 2617              		.loc 1 560 0
 2618 0018 FFF7FEFF 		bl	MSens_out_Read
 2619 001c 0346     		mov	r3, r0
 2620 001e 7B71     		strb	r3, [r7, #5]
 561:.\main.c      ****     //if only the left one, hard left
 562:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 2621              		.loc 1 562 0
 2622 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2623 0022 002B     		cmp	r3, #0
 2624 0024 27D0     		beq	.L146
 2625              		.loc 1 562 0 is_stmt 0 discriminator 1
 2626 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2627 0028 002B     		cmp	r3, #0
 2628 002a 24D1     		bne	.L146
 2629              		.loc 1 562 0 discriminator 2
 2630 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2631 002e 002B     		cmp	r3, #0
 2632 0030 21D1     		bne	.L146
 563:.\main.c      ****     {
 564:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 2633              		.loc 1 564 0 is_stmt 1
 2634 0032 454B     		ldr	r3, .L151
 2635 0034 D3E90023 		ldrd	r2, [r3]
 2636 0038 1046     		mov	r0, r2
 2637 003a 1946     		mov	r1, r3
 2638 003c 4FF00002 		mov	r2, #0
 2639 0040 424B     		ldr	r3, .L151+4
 2640 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2641 0046 0246     		mov	r2, r0
 2642 0048 0B46     		mov	r3, r1
 2643 004a 1446     		mov	r4, r2
 2644 004c 1D46     		mov	r5, r3
 2645 004e 3E4B     		ldr	r3, .L151
 2646 0050 D3E90023 		ldrd	r2, [r3]
 2647 0054 9046     		mov	r8, r2
 2648 0056 83F00049 		eor	r9, r3, #-2147483648
 2649 005a 4046     		mov	r0, r8
 2650 005c 4946     		mov	r1, r9
 2651 005e 4FF00002 		mov	r2, #0
 2652 0062 3A4B     		ldr	r3, .L151+4
 2653 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2654 0068 0246     		mov	r2, r0
 2655 006a 0B46     		mov	r3, r1
 2656 006c 2046     		mov	r0, r4
 2657 006e 2946     		mov	r1, r5
 2658 0070 FFF7FEFF 		bl	setSpeed
 2659 0074 63E0     		b	.L145
 2660              	.L146:
 565:.\main.c      ****     }
 566:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2661              		.loc 1 566 0
 2662 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2663 0078 002B     		cmp	r3, #0
 2664 007a 11D0     		beq	.L148
 2665              		.loc 1 566 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 58


 2666 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2667 007e 002B     		cmp	r3, #0
 2668 0080 0ED0     		beq	.L148
 2669              		.loc 1 566 0 discriminator 2
 2670 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2671 0084 002B     		cmp	r3, #0
 2672 0086 0BD1     		bne	.L148
 567:.\main.c      ****     {
 568:.\main.c      ****         setSpeed(speed, 0);
 2673              		.loc 1 568 0 is_stmt 1
 2674 0088 2F4B     		ldr	r3, .L151
 2675 008a D3E90023 		ldrd	r2, [r3]
 2676 008e 1046     		mov	r0, r2
 2677 0090 1946     		mov	r1, r3
 2678 0092 4FF00002 		mov	r2, #0
 2679 0096 4FF00003 		mov	r3, #0
 2680 009a FFF7FEFF 		bl	setSpeed
 2681 009e 4EE0     		b	.L145
 2682              	.L148:
 569:.\main.c      ****     }
 570:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2683              		.loc 1 570 0
 2684 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2685 00a2 002B     		cmp	r3, #0
 2686 00a4 0FD0     		beq	.L149
 2687              		.loc 1 570 0 is_stmt 0 discriminator 1
 2688 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2689 00a8 002B     		cmp	r3, #0
 2690 00aa 0CD0     		beq	.L149
 2691              		.loc 1 570 0 discriminator 2
 2692 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2693 00ae 002B     		cmp	r3, #0
 2694 00b0 09D1     		bne	.L149
 571:.\main.c      ****     {
 572:.\main.c      ****         setSpeed(0, speed);
 2695              		.loc 1 572 0 is_stmt 1
 2696 00b2 254B     		ldr	r3, .L151
 2697 00b4 D3E90023 		ldrd	r2, [r3]
 2698 00b8 4FF00000 		mov	r0, #0
 2699 00bc 4FF00001 		mov	r1, #0
 2700 00c0 FFF7FEFF 		bl	setSpeed
 2701 00c4 3BE0     		b	.L145
 2702              	.L149:
 573:.\main.c      ****     }
 574:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2703              		.loc 1 574 0
 2704 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2705 00c8 002B     		cmp	r3, #0
 2706 00ca 27D0     		beq	.L150
 2707              		.loc 1 574 0 is_stmt 0 discriminator 1
 2708 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2709 00ce 002B     		cmp	r3, #0
 2710 00d0 24D1     		bne	.L150
 2711              		.loc 1 574 0 discriminator 2
 2712 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2713 00d4 002B     		cmp	r3, #0
 2714 00d6 21D1     		bne	.L150
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 59


 575:.\main.c      ****     {
 576:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 2715              		.loc 1 576 0 is_stmt 1
 2716 00d8 1B4B     		ldr	r3, .L151
 2717 00da D3E90023 		ldrd	r2, [r3]
 2718 00de 1446     		mov	r4, r2
 2719 00e0 83F00045 		eor	r5, r3, #-2147483648
 2720 00e4 2046     		mov	r0, r4
 2721 00e6 2946     		mov	r1, r5
 2722 00e8 4FF00002 		mov	r2, #0
 2723 00ec 174B     		ldr	r3, .L151+4
 2724 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2725 00f2 0246     		mov	r2, r0
 2726 00f4 0B46     		mov	r3, r1
 2727 00f6 1446     		mov	r4, r2
 2728 00f8 1D46     		mov	r5, r3
 2729 00fa 134B     		ldr	r3, .L151
 2730 00fc D3E90023 		ldrd	r2, [r3]
 2731 0100 1046     		mov	r0, r2
 2732 0102 1946     		mov	r1, r3
 2733 0104 4FF00002 		mov	r2, #0
 2734 0108 104B     		ldr	r3, .L151+4
 2735 010a FFF7FEFF 		bl	__aeabi_ddiv
 2736 010e 0246     		mov	r2, r0
 2737 0110 0B46     		mov	r3, r1
 2738 0112 2046     		mov	r0, r4
 2739 0114 2946     		mov	r1, r5
 2740 0116 FFF7FEFF 		bl	setSpeed
 2741 011a 10E0     		b	.L145
 2742              	.L150:
 577:.\main.c      ****     }
 578:.\main.c      ****     else if (mid && !nr && !nl)
 2743              		.loc 1 578 0
 2744 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2745 011e 002B     		cmp	r3, #0
 2746 0120 0DD0     		beq	.L145
 2747              		.loc 1 578 0 is_stmt 0 discriminator 1
 2748 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2749 0124 002B     		cmp	r3, #0
 2750 0126 0AD1     		bne	.L145
 2751              		.loc 1 578 0 discriminator 2
 2752 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2753 012a 002B     		cmp	r3, #0
 2754 012c 07D1     		bne	.L145
 579:.\main.c      ****     {
 580:.\main.c      ****         setSpeed(speed,speed);
 2755              		.loc 1 580 0 is_stmt 1
 2756 012e 064B     		ldr	r3, .L151
 2757 0130 D3E90001 		ldrd	r0, [r3]
 2758 0134 044B     		ldr	r3, .L151
 2759 0136 D3E90023 		ldrd	r2, [r3]
 2760 013a FFF7FEFF 		bl	setSpeed
 2761              	.L145:
 581:.\main.c      ****     }
 582:.\main.c      ****    // else if (!mid && !nr && !nl)
 583:.\main.c      ****     //{
 584:.\main.c      ****         //setSpeed(0,0);
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 60


 585:.\main.c      ****     //}
 586:.\main.c      **** }
 2762              		.loc 1 586 0
 2763 013e 0837     		adds	r7, r7, #8
 2764              		.cfi_def_cfa_offset 24
 2765 0140 BD46     		mov	sp, r7
 2766              		.cfi_def_cfa_register 13
 2767              		@ sp needed
 2768 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2769              	.L152:
 2770 0146 00BF     		.align	2
 2771              	.L151:
 2772 0148 00000000 		.word	speed
 2773 014c 0000F83F 		.word	1073217536
 2774              		.cfi_endproc
 2775              	.LFE93:
 2776              		.size	trackLine, .-trackLine
 2777              		.section	.text.trackLineZ,"ax",%progbits
 2778              		.align	2
 2779              		.global	trackLineZ
 2780              		.thumb
 2781              		.thumb_func
 2782              		.type	trackLineZ, %function
 2783              	trackLineZ:
 2784              	.LFB94:
 587:.\main.c      **** 
 588:.\main.c      **** void trackLineZ()
 589:.\main.c      **** {
 2785              		.loc 1 589 0
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 8
 2788              		@ frame_needed = 1, uses_anonymous_args = 0
 2789 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2790              		.cfi_def_cfa_offset 24
 2791              		.cfi_offset 4, -24
 2792              		.cfi_offset 5, -20
 2793              		.cfi_offset 7, -16
 2794              		.cfi_offset 8, -12
 2795              		.cfi_offset 9, -8
 2796              		.cfi_offset 14, -4
 2797 0004 82B0     		sub	sp, sp, #8
 2798              		.cfi_def_cfa_offset 32
 2799 0006 00AF     		add	r7, sp, #0
 2800              		.cfi_def_cfa_register 7
 590:.\main.c      ****     //read the value of the three central-front sensors
 591:.\main.c      ****     
 592:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2801              		.loc 1 592 0
 2802 0008 FFF7FEFF 		bl	NLSens_out_Read
 2803 000c 0346     		mov	r3, r0
 2804 000e FB71     		strb	r3, [r7, #7]
 593:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2805              		.loc 1 593 0
 2806 0010 FFF7FEFF 		bl	NRSens_out_Read
 2807 0014 0346     		mov	r3, r0
 2808 0016 BB71     		strb	r3, [r7, #6]
 594:.\main.c      ****     uint8 mid = MSens_out_Read();
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 61


 2809              		.loc 1 594 0
 2810 0018 FFF7FEFF 		bl	MSens_out_Read
 2811 001c 0346     		mov	r3, r0
 2812 001e 7B71     		strb	r3, [r7, #5]
 595:.\main.c      ****     //if only the left one, hard left
 596:.\main.c      ****     if(nl && !nr && !mid)
 2813              		.loc 1 596 0
 2814 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2815 0022 002B     		cmp	r3, #0
 2816 0024 27D0     		beq	.L154
 2817              		.loc 1 596 0 is_stmt 0 discriminator 1
 2818 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2819 0028 002B     		cmp	r3, #0
 2820 002a 24D1     		bne	.L154
 2821              		.loc 1 596 0 discriminator 2
 2822 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2823 002e 002B     		cmp	r3, #0
 2824 0030 21D1     		bne	.L154
 597:.\main.c      ****     {
 598:.\main.c      ****         setSpeed(speed / 1.5,-speed / 1.5);
 2825              		.loc 1 598 0 is_stmt 1
 2826 0032 454B     		ldr	r3, .L159
 2827 0034 D3E90023 		ldrd	r2, [r3]
 2828 0038 1046     		mov	r0, r2
 2829 003a 1946     		mov	r1, r3
 2830 003c 4FF00002 		mov	r2, #0
 2831 0040 424B     		ldr	r3, .L159+4
 2832 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2833 0046 0246     		mov	r2, r0
 2834 0048 0B46     		mov	r3, r1
 2835 004a 1446     		mov	r4, r2
 2836 004c 1D46     		mov	r5, r3
 2837 004e 3E4B     		ldr	r3, .L159
 2838 0050 D3E90023 		ldrd	r2, [r3]
 2839 0054 9046     		mov	r8, r2
 2840 0056 83F00049 		eor	r9, r3, #-2147483648
 2841 005a 4046     		mov	r0, r8
 2842 005c 4946     		mov	r1, r9
 2843 005e 4FF00002 		mov	r2, #0
 2844 0062 3A4B     		ldr	r3, .L159+4
 2845 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2846 0068 0246     		mov	r2, r0
 2847 006a 0B46     		mov	r3, r1
 2848 006c 2046     		mov	r0, r4
 2849 006e 2946     		mov	r1, r5
 2850 0070 FFF7FEFF 		bl	setSpeed
 2851 0074 63E0     		b	.L153
 2852              	.L154:
 599:.\main.c      ****     }
 600:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2853              		.loc 1 600 0
 2854 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2855 0078 002B     		cmp	r3, #0
 2856 007a 11D0     		beq	.L156
 2857              		.loc 1 600 0 is_stmt 0 discriminator 1
 2858 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2859 007e 002B     		cmp	r3, #0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 62


 2860 0080 0ED0     		beq	.L156
 2861              		.loc 1 600 0 discriminator 2
 2862 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2863 0084 002B     		cmp	r3, #0
 2864 0086 0BD1     		bne	.L156
 601:.\main.c      ****     {
 602:.\main.c      ****         setSpeed(speed, 0.0);
 2865              		.loc 1 602 0 is_stmt 1
 2866 0088 2F4B     		ldr	r3, .L159
 2867 008a D3E90023 		ldrd	r2, [r3]
 2868 008e 1046     		mov	r0, r2
 2869 0090 1946     		mov	r1, r3
 2870 0092 4FF00002 		mov	r2, #0
 2871 0096 4FF00003 		mov	r3, #0
 2872 009a FFF7FEFF 		bl	setSpeed
 2873 009e 4EE0     		b	.L153
 2874              	.L156:
 603:.\main.c      ****     }
 604:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2875              		.loc 1 604 0
 2876 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2877 00a2 002B     		cmp	r3, #0
 2878 00a4 0FD0     		beq	.L157
 2879              		.loc 1 604 0 is_stmt 0 discriminator 1
 2880 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2881 00a8 002B     		cmp	r3, #0
 2882 00aa 0CD0     		beq	.L157
 2883              		.loc 1 604 0 discriminator 2
 2884 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2885 00ae 002B     		cmp	r3, #0
 2886 00b0 09D1     		bne	.L157
 605:.\main.c      ****     {
 606:.\main.c      ****         setSpeed(0.0,speed);
 2887              		.loc 1 606 0 is_stmt 1
 2888 00b2 254B     		ldr	r3, .L159
 2889 00b4 D3E90023 		ldrd	r2, [r3]
 2890 00b8 4FF00000 		mov	r0, #0
 2891 00bc 4FF00001 		mov	r1, #0
 2892 00c0 FFF7FEFF 		bl	setSpeed
 2893 00c4 3BE0     		b	.L153
 2894              	.L157:
 607:.\main.c      ****     }
 608:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2895              		.loc 1 608 0
 2896 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2897 00c8 002B     		cmp	r3, #0
 2898 00ca 27D0     		beq	.L158
 2899              		.loc 1 608 0 is_stmt 0 discriminator 1
 2900 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2901 00ce 002B     		cmp	r3, #0
 2902 00d0 24D1     		bne	.L158
 2903              		.loc 1 608 0 discriminator 2
 2904 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2905 00d4 002B     		cmp	r3, #0
 2906 00d6 21D1     		bne	.L158
 609:.\main.c      ****     {
 610:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 63


 2907              		.loc 1 610 0 is_stmt 1
 2908 00d8 1B4B     		ldr	r3, .L159
 2909 00da D3E90023 		ldrd	r2, [r3]
 2910 00de 1446     		mov	r4, r2
 2911 00e0 83F00045 		eor	r5, r3, #-2147483648
 2912 00e4 2046     		mov	r0, r4
 2913 00e6 2946     		mov	r1, r5
 2914 00e8 4FF00002 		mov	r2, #0
 2915 00ec 174B     		ldr	r3, .L159+4
 2916 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2917 00f2 0246     		mov	r2, r0
 2918 00f4 0B46     		mov	r3, r1
 2919 00f6 1446     		mov	r4, r2
 2920 00f8 1D46     		mov	r5, r3
 2921 00fa 134B     		ldr	r3, .L159
 2922 00fc D3E90023 		ldrd	r2, [r3]
 2923 0100 1046     		mov	r0, r2
 2924 0102 1946     		mov	r1, r3
 2925 0104 4FF00002 		mov	r2, #0
 2926 0108 104B     		ldr	r3, .L159+4
 2927 010a FFF7FEFF 		bl	__aeabi_ddiv
 2928 010e 0246     		mov	r2, r0
 2929 0110 0B46     		mov	r3, r1
 2930 0112 2046     		mov	r0, r4
 2931 0114 2946     		mov	r1, r5
 2932 0116 FFF7FEFF 		bl	setSpeed
 2933 011a 10E0     		b	.L153
 2934              	.L158:
 611:.\main.c      ****     }
 612:.\main.c      ****     else if (mid && !nr && !nl)
 2935              		.loc 1 612 0
 2936 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2937 011e 002B     		cmp	r3, #0
 2938 0120 0DD0     		beq	.L153
 2939              		.loc 1 612 0 is_stmt 0 discriminator 1
 2940 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2941 0124 002B     		cmp	r3, #0
 2942 0126 0AD1     		bne	.L153
 2943              		.loc 1 612 0 discriminator 2
 2944 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2945 012a 002B     		cmp	r3, #0
 2946 012c 07D1     		bne	.L153
 613:.\main.c      ****     {
 614:.\main.c      ****         setSpeed(speed,speed);
 2947              		.loc 1 614 0 is_stmt 1
 2948 012e 064B     		ldr	r3, .L159
 2949 0130 D3E90001 		ldrd	r0, [r3]
 2950 0134 044B     		ldr	r3, .L159
 2951 0136 D3E90023 		ldrd	r2, [r3]
 2952 013a FFF7FEFF 		bl	setSpeed
 2953              	.L153:
 615:.\main.c      ****     }
 616:.\main.c      ****    // else if (!mid && !nr && !nl)
 617:.\main.c      ****     //{
 618:.\main.c      ****         //setSpeed(0,0);
 619:.\main.c      ****     //}
 620:.\main.c      **** }
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 64


 2954              		.loc 1 620 0
 2955 013e 0837     		adds	r7, r7, #8
 2956              		.cfi_def_cfa_offset 24
 2957 0140 BD46     		mov	sp, r7
 2958              		.cfi_def_cfa_register 13
 2959              		@ sp needed
 2960 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2961              	.L160:
 2962 0146 00BF     		.align	2
 2963              	.L159:
 2964 0148 00000000 		.word	speed
 2965 014c 0000F83F 		.word	1073217536
 2966              		.cfi_endproc
 2967              	.LFE94:
 2968              		.size	trackLineZ, .-trackLineZ
 2969              		.section	.text.trackLineU,"ax",%progbits
 2970              		.align	2
 2971              		.global	trackLineU
 2972              		.thumb
 2973              		.thumb_func
 2974              		.type	trackLineU, %function
 2975              	trackLineU:
 2976              	.LFB95:
 621:.\main.c      **** 
 622:.\main.c      **** void trackLineU()
 623:.\main.c      **** {
 2977              		.loc 1 623 0
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 8
 2980              		@ frame_needed = 1, uses_anonymous_args = 0
 2981 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2982              		.cfi_def_cfa_offset 24
 2983              		.cfi_offset 4, -24
 2984              		.cfi_offset 5, -20
 2985              		.cfi_offset 7, -16
 2986              		.cfi_offset 8, -12
 2987              		.cfi_offset 9, -8
 2988              		.cfi_offset 14, -4
 2989 0004 82B0     		sub	sp, sp, #8
 2990              		.cfi_def_cfa_offset 32
 2991 0006 00AF     		add	r7, sp, #0
 2992              		.cfi_def_cfa_register 7
 624:.\main.c      ****     //read the value of the three central-front sensors
 625:.\main.c      ****     
 626:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2993              		.loc 1 626 0
 2994 0008 FFF7FEFF 		bl	NLSens_out_Read
 2995 000c 0346     		mov	r3, r0
 2996 000e FB71     		strb	r3, [r7, #7]
 627:.\main.c      ****     uint8 fl = FLSens_out_Read();
 2997              		.loc 1 627 0
 2998 0010 FFF7FEFF 		bl	FLSens_out_Read
 2999 0014 0346     		mov	r3, r0
 3000 0016 BB71     		strb	r3, [r7, #6]
 628:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3001              		.loc 1 628 0
 3002 0018 FFF7FEFF 		bl	NRSens_out_Read
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 65


 3003 001c 0346     		mov	r3, r0
 3004 001e 7B71     		strb	r3, [r7, #5]
 629:.\main.c      ****     uint8 fr = FRSens_out_Read();
 3005              		.loc 1 629 0
 3006 0020 FFF7FEFF 		bl	FRSens_out_Read
 3007 0024 0346     		mov	r3, r0
 3008 0026 3B71     		strb	r3, [r7, #4]
 630:.\main.c      ****     uint8 mid = MSens_out_Read();
 3009              		.loc 1 630 0
 3010 0028 FFF7FEFF 		bl	MSens_out_Read
 3011 002c 0346     		mov	r3, r0
 3012 002e FB70     		strb	r3, [r7, #3]
 631:.\main.c      ****     if (fl && mid && fr) // T intersection
 3013              		.loc 1 631 0
 3014 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3015 0032 002B     		cmp	r3, #0
 3016 0034 06D0     		beq	.L162
 3017              		.loc 1 631 0 is_stmt 0 discriminator 1
 3018 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3019 0038 002B     		cmp	r3, #0
 3020 003a 03D0     		beq	.L162
 3021              		.loc 1 631 0 discriminator 2
 3022 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3023 003e 002B     		cmp	r3, #0
 3024 0040 00D0     		beq	.L162
 3025              		.loc 1 631 0
 3026 0042 ACE0     		b	.L161
 3027              	.L162:
 632:.\main.c      ****     {
 633:.\main.c      ****         // not implemented
 634:.\main.c      ****     }
 635:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 3028              		.loc 1 635 0 is_stmt 1
 3029 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3030 0046 002B     		cmp	r3, #0
 3031 0048 0BD0     		beq	.L164
 3032              		.loc 1 635 0 is_stmt 0 discriminator 1
 3033 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3034 004c 002B     		cmp	r3, #0
 3035 004e 08D0     		beq	.L164
 636:.\main.c      ****     {
 637:.\main.c      ****         setSpeed(speed, speed);
 3036              		.loc 1 637 0 is_stmt 1
 3037 0050 554B     		ldr	r3, .L170
 3038 0052 D3E90001 		ldrd	r0, [r3]
 3039 0056 544B     		ldr	r3, .L170
 3040 0058 D3E90023 		ldrd	r2, [r3]
 3041 005c FFF7FEFF 		bl	setSpeed
 3042 0060 9DE0     		b	.L161
 3043              	.L164:
 638:.\main.c      ****     }
 639:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 3044              		.loc 1 639 0
 3045 0062 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3046 0064 002B     		cmp	r3, #0
 3047 0066 0BD0     		beq	.L165
 3048              		.loc 1 639 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 66


 3049 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3050 006a 002B     		cmp	r3, #0
 3051 006c 08D0     		beq	.L165
 640:.\main.c      ****     {
 641:.\main.c      ****         setSpeed(speed, speed);
 3052              		.loc 1 641 0 is_stmt 1
 3053 006e 4E4B     		ldr	r3, .L170
 3054 0070 D3E90001 		ldrd	r0, [r3]
 3055 0074 4C4B     		ldr	r3, .L170
 3056 0076 D3E90023 		ldrd	r2, [r3]
 3057 007a FFF7FEFF 		bl	setSpeed
 3058 007e 8EE0     		b	.L161
 3059              	.L165:
 642:.\main.c      ****     }
 643:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 3060              		.loc 1 643 0
 3061 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3062 0082 002B     		cmp	r3, #0
 3063 0084 27D0     		beq	.L166
 3064              		.loc 1 643 0 is_stmt 0 discriminator 1
 3065 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3066 0088 002B     		cmp	r3, #0
 3067 008a 24D1     		bne	.L166
 3068              		.loc 1 643 0 discriminator 2
 3069 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3070 008e 002B     		cmp	r3, #0
 3071 0090 21D1     		bne	.L166
 644:.\main.c      ****     {
 645:.\main.c      ****          setSpeed(speed / 1.5,-speed / 1.5);
 3072              		.loc 1 645 0 is_stmt 1
 3073 0092 454B     		ldr	r3, .L170
 3074 0094 D3E90023 		ldrd	r2, [r3]
 3075 0098 1046     		mov	r0, r2
 3076 009a 1946     		mov	r1, r3
 3077 009c 4FF00002 		mov	r2, #0
 3078 00a0 424B     		ldr	r3, .L170+4
 3079 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 3080 00a6 0246     		mov	r2, r0
 3081 00a8 0B46     		mov	r3, r1
 3082 00aa 1446     		mov	r4, r2
 3083 00ac 1D46     		mov	r5, r3
 3084 00ae 3E4B     		ldr	r3, .L170
 3085 00b0 D3E90023 		ldrd	r2, [r3]
 3086 00b4 9046     		mov	r8, r2
 3087 00b6 83F00049 		eor	r9, r3, #-2147483648
 3088 00ba 4046     		mov	r0, r8
 3089 00bc 4946     		mov	r1, r9
 3090 00be 4FF00002 		mov	r2, #0
 3091 00c2 3A4B     		ldr	r3, .L170+4
 3092 00c4 FFF7FEFF 		bl	__aeabi_ddiv
 3093 00c8 0246     		mov	r2, r0
 3094 00ca 0B46     		mov	r3, r1
 3095 00cc 2046     		mov	r0, r4
 3096 00ce 2946     		mov	r1, r5
 3097 00d0 FFF7FEFF 		bl	setSpeed
 3098 00d4 63E0     		b	.L161
 3099              	.L166:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 67


 646:.\main.c      ****     }
 647:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3100              		.loc 1 647 0
 3101 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3102 00d8 002B     		cmp	r3, #0
 3103 00da 11D0     		beq	.L167
 3104              		.loc 1 647 0 is_stmt 0 discriminator 1
 3105 00dc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3106 00de 002B     		cmp	r3, #0
 3107 00e0 0ED0     		beq	.L167
 3108              		.loc 1 647 0 discriminator 2
 3109 00e2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3110 00e4 002B     		cmp	r3, #0
 3111 00e6 0BD1     		bne	.L167
 648:.\main.c      ****     {
 649:.\main.c      ****         setSpeed(speed, 0);
 3112              		.loc 1 649 0 is_stmt 1
 3113 00e8 2F4B     		ldr	r3, .L170
 3114 00ea D3E90023 		ldrd	r2, [r3]
 3115 00ee 1046     		mov	r0, r2
 3116 00f0 1946     		mov	r1, r3
 3117 00f2 4FF00002 		mov	r2, #0
 3118 00f6 4FF00003 		mov	r3, #0
 3119 00fa FFF7FEFF 		bl	setSpeed
 3120 00fe 4EE0     		b	.L161
 3121              	.L167:
 650:.\main.c      ****     }
 651:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3122              		.loc 1 651 0
 3123 0100 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3124 0102 002B     		cmp	r3, #0
 3125 0104 0FD0     		beq	.L168
 3126              		.loc 1 651 0 is_stmt 0 discriminator 1
 3127 0106 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3128 0108 002B     		cmp	r3, #0
 3129 010a 0CD0     		beq	.L168
 3130              		.loc 1 651 0 discriminator 2
 3131 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3132 010e 002B     		cmp	r3, #0
 3133 0110 09D1     		bne	.L168
 652:.\main.c      ****     {
 653:.\main.c      ****         setSpeed(0, speed);
 3134              		.loc 1 653 0 is_stmt 1
 3135 0112 254B     		ldr	r3, .L170
 3136 0114 D3E90023 		ldrd	r2, [r3]
 3137 0118 4FF00000 		mov	r0, #0
 3138 011c 4FF00001 		mov	r1, #0
 3139 0120 FFF7FEFF 		bl	setSpeed
 3140 0124 3BE0     		b	.L161
 3141              	.L168:
 654:.\main.c      ****     }
 655:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3142              		.loc 1 655 0
 3143 0126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3144 0128 002B     		cmp	r3, #0
 3145 012a 27D0     		beq	.L169
 3146              		.loc 1 655 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 68


 3147 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3148 012e 002B     		cmp	r3, #0
 3149 0130 24D1     		bne	.L169
 3150              		.loc 1 655 0 discriminator 2
 3151 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3152 0134 002B     		cmp	r3, #0
 3153 0136 21D1     		bne	.L169
 656:.\main.c      ****     {
 657:.\main.c      ****          setSpeed(-speed / 1.5,speed / 1.5);
 3154              		.loc 1 657 0 is_stmt 1
 3155 0138 1B4B     		ldr	r3, .L170
 3156 013a D3E90023 		ldrd	r2, [r3]
 3157 013e 1446     		mov	r4, r2
 3158 0140 83F00045 		eor	r5, r3, #-2147483648
 3159 0144 2046     		mov	r0, r4
 3160 0146 2946     		mov	r1, r5
 3161 0148 4FF00002 		mov	r2, #0
 3162 014c 174B     		ldr	r3, .L170+4
 3163 014e FFF7FEFF 		bl	__aeabi_ddiv
 3164 0152 0246     		mov	r2, r0
 3165 0154 0B46     		mov	r3, r1
 3166 0156 1446     		mov	r4, r2
 3167 0158 1D46     		mov	r5, r3
 3168 015a 134B     		ldr	r3, .L170
 3169 015c D3E90023 		ldrd	r2, [r3]
 3170 0160 1046     		mov	r0, r2
 3171 0162 1946     		mov	r1, r3
 3172 0164 4FF00002 		mov	r2, #0
 3173 0168 104B     		ldr	r3, .L170+4
 3174 016a FFF7FEFF 		bl	__aeabi_ddiv
 3175 016e 0246     		mov	r2, r0
 3176 0170 0B46     		mov	r3, r1
 3177 0172 2046     		mov	r0, r4
 3178 0174 2946     		mov	r1, r5
 3179 0176 FFF7FEFF 		bl	setSpeed
 3180 017a 10E0     		b	.L161
 3181              	.L169:
 658:.\main.c      ****     }
 659:.\main.c      ****     else if (mid && !nr && !nl)
 3182              		.loc 1 659 0
 3183 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3184 017e 002B     		cmp	r3, #0
 3185 0180 0DD0     		beq	.L161
 3186              		.loc 1 659 0 is_stmt 0 discriminator 1
 3187 0182 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3188 0184 002B     		cmp	r3, #0
 3189 0186 0AD1     		bne	.L161
 3190              		.loc 1 659 0 discriminator 2
 3191 0188 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3192 018a 002B     		cmp	r3, #0
 3193 018c 07D1     		bne	.L161
 660:.\main.c      ****     {
 661:.\main.c      ****         setSpeed(speed,speed);
 3194              		.loc 1 661 0 is_stmt 1
 3195 018e 064B     		ldr	r3, .L170
 3196 0190 D3E90001 		ldrd	r0, [r3]
 3197 0194 044B     		ldr	r3, .L170
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 69


 3198 0196 D3E90023 		ldrd	r2, [r3]
 3199 019a FFF7FEFF 		bl	setSpeed
 3200              	.L161:
 662:.\main.c      ****     }
 663:.\main.c      ****    // else if (!mid && !nr && !nl)
 664:.\main.c      ****     //{
 665:.\main.c      ****         //setSpeed(0,0);
 666:.\main.c      ****     //}
 667:.\main.c      ****    
 668:.\main.c      **** 
 669:.\main.c      **** }
 3201              		.loc 1 669 0
 3202 019e 0837     		adds	r7, r7, #8
 3203              		.cfi_def_cfa_offset 24
 3204 01a0 BD46     		mov	sp, r7
 3205              		.cfi_def_cfa_register 13
 3206              		@ sp needed
 3207 01a2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3208              	.L171:
 3209 01a6 00BF     		.align	2
 3210              	.L170:
 3211 01a8 00000000 		.word	speed
 3212 01ac 0000F83F 		.word	1073217536
 3213              		.cfi_endproc
 3214              	.LFE95:
 3215              		.size	trackLineU, .-trackLineU
 3216              		.global	__aeabi_fadd
 3217              		.section	.rodata
 3218 003e 0000     		.align	2
 3219              	.LC4:
 3220 0040 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3220      65727920 
 3220      566F6C74 
 3220      6167653A 
 3220      2025646D 
 3221              		.section	.text.print_ADC,"ax",%progbits
 3222              		.align	2
 3223              		.global	print_ADC
 3224              		.thumb
 3225              		.thumb_func
 3226              		.type	print_ADC, %function
 3227              	print_ADC:
 3228              	.LFB96:
 670:.\main.c      **** 
 671:.\main.c      **** void print_ADC()
 672:.\main.c      **** {
 3229              		.loc 1 672 0
 3230              		.cfi_startproc
 3231              		@ args = 0, pretend = 0, frame = 24
 3232              		@ frame_needed = 1, uses_anonymous_args = 0
 3233 0000 80B5     		push	{r7, lr}
 3234              		.cfi_def_cfa_offset 8
 3235              		.cfi_offset 7, -8
 3236              		.cfi_offset 14, -4
 3237 0002 86B0     		sub	sp, sp, #24
 3238              		.cfi_def_cfa_offset 32
 3239 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 70


 3240              		.cfi_def_cfa_register 7
 673:.\main.c      ****    //usbPutString("HII\n");
 674:.\main.c      ****     if(flag_receive_ADC == 1)
 3241              		.loc 1 674 0
 3242 0006 274B     		ldr	r3, .L175
 3243 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3244 000a 012B     		cmp	r3, #1
 3245 000c 46D1     		bne	.L172
 3246              	.LBB6:
 675:.\main.c      ****     {
 676:.\main.c      ****         //usbPutString("AAA\r\n");
 677:.\main.c      ****         flag_receive_ADC = 0;
 3247              		.loc 1 677 0
 3248 000e 254B     		ldr	r3, .L175
 3249 0010 0022     		movs	r2, #0
 3250 0012 1A70     		strb	r2, [r3]
 678:.\main.c      ****         
 679:.\main.c      ****        // int8 channel = ADC_
 680:.\main.c      ****         float scalingFactor = 0.972;
 3251              		.loc 1 680 0
 3252 0014 244B     		ldr	r3, .L175+4
 3253 0016 7B61     		str	r3, [r7, #20]	@ float
 681:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3254              		.loc 1 681 0
 3255 0018 244B     		ldr	r3, .L175+8
 3256 001a 1B88     		ldrh	r3, [r3]
 3257 001c 1BB2     		sxth	r3, r3
 3258 001e 41F28832 		movw	r2, #5000
 3259 0022 02FB03F3 		mul	r3, r2, r3
 3260 0026 002B     		cmp	r3, #0
 3261 0028 01DA     		bge	.L174
 3262 002a 03F6FF73 		addw	r3, r3, #4095
 3263              	.L174:
 3264 002e 1B13     		asrs	r3, r3, #12
 3265 0030 1846     		mov	r0, r3
 3266 0032 FFF7FEFF 		bl	__aeabi_i2f
 3267 0036 0346     		mov	r3, r0
 3268 0038 1846     		mov	r0, r3
 3269 003a 7969     		ldr	r1, [r7, #20]	@ float
 3270 003c FFF7FEFF 		bl	__aeabi_fmul
 3271 0040 0346     		mov	r3, r0
 3272 0042 1846     		mov	r0, r3
 3273 0044 1946     		mov	r1, r3
 3274 0046 FFF7FEFF 		bl	__aeabi_fadd
 3275 004a 0346     		mov	r3, r0
 3276 004c 1846     		mov	r0, r3
 3277 004e FFF7FEFF 		bl	__aeabi_f2iz
 3278 0052 0346     		mov	r3, r0
 3279 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 682:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3280              		.loc 1 682 0
 3281 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3282 005a 154B     		ldr	r3, .L175+12
 3283 005c 1B88     		ldrh	r3, [r3]
 3284 005e 1BB2     		sxth	r3, r3
 3285 0060 1A44     		add	r2, r2, r3
 3286 0062 144B     		ldr	r3, .L175+16
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 71


 3287 0064 1B88     		ldrh	r3, [r3]
 3288 0066 1BB2     		sxth	r3, r3
 3289 0068 1344     		add	r3, r3, r2
 3290 006a 134A     		ldr	r2, .L175+20
 3291 006c 82FB0312 		smull	r1, r2, r2, r3
 3292 0070 DB17     		asrs	r3, r3, #31
 3293 0072 D31A     		subs	r3, r2, r3
 3294 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 683:.\main.c      ****         prevVoltage2 = prevVoltage;
 3295              		.loc 1 683 0
 3296 0076 0E4B     		ldr	r3, .L175+12
 3297 0078 1A88     		ldrh	r2, [r3]
 3298 007a 0E4B     		ldr	r3, .L175+16
 3299 007c 1A80     		strh	r2, [r3]	@ movhi
 684:.\main.c      ****         prevVoltage = converted_val;
 3300              		.loc 1 684 0
 3301 007e 0C4A     		ldr	r2, .L175+12
 3302 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3303 0082 1380     		strh	r3, [r2]	@ movhi
 685:.\main.c      ****         
 686:.\main.c      ****         char result_str[16];
 687:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3304              		.loc 1 687 0
 3305 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3306 0088 3A46     		mov	r2, r7
 3307 008a 1046     		mov	r0, r2
 3308 008c 0B49     		ldr	r1, .L175+24
 3309 008e 1A46     		mov	r2, r3
 3310 0090 FFF7FEFF 		bl	sprintf
 688:.\main.c      ****         
 689:.\main.c      ****         usbPutString(result_str);
 3311              		.loc 1 689 0
 3312 0094 3B46     		mov	r3, r7
 3313 0096 1846     		mov	r0, r3
 3314 0098 FFF7FEFF 		bl	usbPutString
 3315              	.L172:
 3316              	.LBE6:
 690:.\main.c      ****     }
 691:.\main.c      **** }
 3317              		.loc 1 691 0
 3318 009c 1837     		adds	r7, r7, #24
 3319              		.cfi_def_cfa_offset 8
 3320 009e BD46     		mov	sp, r7
 3321              		.cfi_def_cfa_register 13
 3322              		@ sp needed
 3323 00a0 80BD     		pop	{r7, pc}
 3324              	.L176:
 3325 00a2 00BF     		.align	2
 3326              	.L175:
 3327 00a4 00000000 		.word	flag_receive_ADC
 3328 00a8 FED4783F 		.word	1064883454
 3329 00ac 00000000 		.word	adc_result
 3330 00b0 00000000 		.word	prevVoltage
 3331 00b4 00000000 		.word	prevVoltage2
 3332 00b8 56555555 		.word	1431655766
 3333 00bc 40000000 		.word	.LC4
 3334              		.cfi_endproc
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 72


 3335              	.LFE96:
 3336              		.size	print_ADC, .-print_ADC
 3337              		.section	.rodata
 3338              		.align	2
 3339              	.LC5:
 3340 0058 52535349 		.ascii	"RSSI:\000"
 3340      3A00
 3341 005e 0000     		.align	2
 3342              	.LC6:
 3343 0060 25640D0A 		.ascii	"%d\015\012\000"
 3343      00
 3344 0065 000000   		.align	2
 3345              	.LC7:
 3346 0068 726F626F 		.ascii	"robot_x:\000"
 3346      745F783A 
 3346      00
 3347 0071 000000   		.align	2
 3348              	.LC8:
 3349 0074 726F626F 		.ascii	"robot_y:\000"
 3349      745F793A 
 3349      00
 3350 007d 000000   		.align	2
 3351              	.LC9:
 3352 0080 726F626F 		.ascii	"robot_dir:\000"
 3352      745F6469 
 3352      723A00
 3353 008b 00       		.section	.text.print_RF,"ax",%progbits
 3354              		.align	2
 3355              		.global	print_RF
 3356              		.thumb
 3357              		.thumb_func
 3358              		.type	print_RF, %function
 3359              	print_RF:
 3360              	.LFB97:
 692:.\main.c      **** 
 693:.\main.c      **** void print_RF()
 694:.\main.c      **** {
 3361              		.loc 1 694 0
 3362              		.cfi_startproc
 3363              		@ args = 0, pretend = 0, frame = 16
 3364              		@ frame_needed = 1, uses_anonymous_args = 0
 3365 0000 80B5     		push	{r7, lr}
 3366              		.cfi_def_cfa_offset 8
 3367              		.cfi_offset 7, -8
 3368              		.cfi_offset 14, -4
 3369 0002 84B0     		sub	sp, sp, #16
 3370              		.cfi_def_cfa_offset 24
 3371 0004 00AF     		add	r7, sp, #0
 3372              		.cfi_def_cfa_register 7
 695:.\main.c      ****     if(flag_print_rf == 1)
 3373              		.loc 1 695 0
 3374 0006 254B     		ldr	r3, .L179
 3375 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3376 000a 012B     		cmp	r3, #1
 3377 000c 42D1     		bne	.L177
 3378              	.LBB7:
 696:.\main.c      ****     {
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 73


 697:.\main.c      ****         char printString[16];
 698:.\main.c      ****         flag_print_rf = 0;
 3379              		.loc 1 698 0
 3380 000e 234B     		ldr	r3, .L179
 3381 0010 0022     		movs	r2, #0
 3382 0012 1A70     		strb	r2, [r3]
 699:.\main.c      ****         usbPutString("RSSI:");
 3383              		.loc 1 699 0
 3384 0014 2248     		ldr	r0, .L179+4
 3385 0016 FFF7FEFF 		bl	usbPutString
 700:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 3386              		.loc 1 700 0
 3387 001a 224B     		ldr	r3, .L179+8
 3388 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3389 001e 5BB2     		sxtb	r3, r3
 3390 0020 3A46     		mov	r2, r7
 3391 0022 1046     		mov	r0, r2
 3392 0024 2049     		ldr	r1, .L179+12
 3393 0026 1A46     		mov	r2, r3
 3394 0028 FFF7FEFF 		bl	sprintf
 701:.\main.c      ****         usbPutString(printString);
 3395              		.loc 1 701 0
 3396 002c 3B46     		mov	r3, r7
 3397 002e 1846     		mov	r0, r3
 3398 0030 FFF7FEFF 		bl	usbPutString
 702:.\main.c      ****         usbPutString("robot_x:");
 3399              		.loc 1 702 0
 3400 0034 1D48     		ldr	r0, .L179+16
 3401 0036 FFF7FEFF 		bl	usbPutString
 703:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 3402              		.loc 1 703 0
 3403 003a 1A4B     		ldr	r3, .L179+8
 3404 003c 5B88     		ldrh	r3, [r3, #2]
 3405 003e 1BB2     		sxth	r3, r3
 3406 0040 3A46     		mov	r2, r7
 3407 0042 1046     		mov	r0, r2
 3408 0044 1849     		ldr	r1, .L179+12
 3409 0046 1A46     		mov	r2, r3
 3410 0048 FFF7FEFF 		bl	sprintf
 704:.\main.c      ****         usbPutString(printString);
 3411              		.loc 1 704 0
 3412 004c 3B46     		mov	r3, r7
 3413 004e 1846     		mov	r0, r3
 3414 0050 FFF7FEFF 		bl	usbPutString
 705:.\main.c      ****         usbPutString("robot_y:");
 3415              		.loc 1 705 0
 3416 0054 1648     		ldr	r0, .L179+20
 3417 0056 FFF7FEFF 		bl	usbPutString
 706:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3418              		.loc 1 706 0
 3419 005a 124B     		ldr	r3, .L179+8
 3420 005c 9B88     		ldrh	r3, [r3, #4]
 3421 005e 1BB2     		sxth	r3, r3
 3422 0060 3A46     		mov	r2, r7
 3423 0062 1046     		mov	r0, r2
 3424 0064 1049     		ldr	r1, .L179+12
 3425 0066 1A46     		mov	r2, r3
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 74


 3426 0068 FFF7FEFF 		bl	sprintf
 707:.\main.c      ****         usbPutString(printString);
 3427              		.loc 1 707 0
 3428 006c 3B46     		mov	r3, r7
 3429 006e 1846     		mov	r0, r3
 3430 0070 FFF7FEFF 		bl	usbPutString
 708:.\main.c      ****         usbPutString("robot_dir:");
 3431              		.loc 1 708 0
 3432 0074 0F48     		ldr	r0, .L179+24
 3433 0076 FFF7FEFF 		bl	usbPutString
 709:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3434              		.loc 1 709 0
 3435 007a 0A4B     		ldr	r3, .L179+8
 3436 007c DB88     		ldrh	r3, [r3, #6]
 3437 007e 1BB2     		sxth	r3, r3
 3438 0080 3A46     		mov	r2, r7
 3439 0082 1046     		mov	r0, r2
 3440 0084 0849     		ldr	r1, .L179+12
 3441 0086 1A46     		mov	r2, r3
 3442 0088 FFF7FEFF 		bl	sprintf
 710:.\main.c      ****         usbPutString(printString);
 3443              		.loc 1 710 0
 3444 008c 3B46     		mov	r3, r7
 3445 008e 1846     		mov	r0, r3
 3446 0090 FFF7FEFF 		bl	usbPutString
 3447              	.L177:
 3448              	.LBE7:
 711:.\main.c      ****     }
 712:.\main.c      **** }
 3449              		.loc 1 712 0
 3450 0094 1037     		adds	r7, r7, #16
 3451              		.cfi_def_cfa_offset 8
 3452 0096 BD46     		mov	sp, r7
 3453              		.cfi_def_cfa_register 13
 3454              		@ sp needed
 3455 0098 80BD     		pop	{r7, pc}
 3456              	.L180:
 3457 009a 00BF     		.align	2
 3458              	.L179:
 3459 009c 00000000 		.word	flag_print_rf
 3460 00a0 58000000 		.word	.LC5
 3461 00a4 00000000 		.word	system_state
 3462 00a8 60000000 		.word	.LC6
 3463 00ac 68000000 		.word	.LC7
 3464 00b0 74000000 		.word	.LC8
 3465 00b4 80000000 		.word	.LC9
 3466              		.cfi_endproc
 3467              	.LFE97:
 3468              		.size	print_RF, .-print_RF
 3469              		.section	.text.readFrontSensors,"ax",%progbits
 3470              		.align	2
 3471              		.global	readFrontSensors
 3472              		.thumb
 3473              		.thumb_func
 3474              		.type	readFrontSensors, %function
 3475              	readFrontSensors:
 3476              	.LFB98:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 75


 713:.\main.c      **** 
 714:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 715:.\main.c      **** {
 3477              		.loc 1 715 0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 8
 3480              		@ frame_needed = 1, uses_anonymous_args = 0
 3481 0000 90B5     		push	{r4, r7, lr}
 3482              		.cfi_def_cfa_offset 12
 3483              		.cfi_offset 4, -12
 3484              		.cfi_offset 7, -8
 3485              		.cfi_offset 14, -4
 3486 0002 83B0     		sub	sp, sp, #12
 3487              		.cfi_def_cfa_offset 24
 3488 0004 00AF     		add	r7, sp, #0
 3489              		.cfi_def_cfa_register 7
 3490 0006 7860     		str	r0, [r7, #4]
 716:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3491              		.loc 1 716 0
 3492 0008 FFF7FEFF 		bl	FLSens_out_Read
 3493 000c 0346     		mov	r3, r0
 3494 000e 1A46     		mov	r2, r3
 3495 0010 7B68     		ldr	r3, [r7, #4]
 3496 0012 1A70     		strb	r2, [r3]
 717:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3497              		.loc 1 717 0
 3498 0014 7B68     		ldr	r3, [r7, #4]
 3499 0016 5C1C     		adds	r4, r3, #1
 3500 0018 FFF7FEFF 		bl	NLSens_out_Read
 3501 001c 0346     		mov	r3, r0
 3502 001e 2370     		strb	r3, [r4]
 718:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3503              		.loc 1 718 0
 3504 0020 7B68     		ldr	r3, [r7, #4]
 3505 0022 9C1C     		adds	r4, r3, #2
 3506 0024 FFF7FEFF 		bl	MSens_out_Read
 3507 0028 0346     		mov	r3, r0
 3508 002a 2370     		strb	r3, [r4]
 719:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3509              		.loc 1 719 0
 3510 002c 7B68     		ldr	r3, [r7, #4]
 3511 002e DC1C     		adds	r4, r3, #3
 3512 0030 FFF7FEFF 		bl	NRSens_out_Read
 3513 0034 0346     		mov	r3, r0
 3514 0036 2370     		strb	r3, [r4]
 720:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3515              		.loc 1 720 0
 3516 0038 7B68     		ldr	r3, [r7, #4]
 3517 003a 1C1D     		adds	r4, r3, #4
 3518 003c FFF7FEFF 		bl	FRSens_out_Read
 3519 0040 0346     		mov	r3, r0
 3520 0042 2370     		strb	r3, [r4]
 721:.\main.c      **** }
 3521              		.loc 1 721 0
 3522 0044 0C37     		adds	r7, r7, #12
 3523              		.cfi_def_cfa_offset 12
 3524 0046 BD46     		mov	sp, r7
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 76


 3525              		.cfi_def_cfa_register 13
 3526              		@ sp needed
 3527 0048 90BD     		pop	{r4, r7, pc}
 3528              		.cfi_endproc
 3529              	.LFE98:
 3530              		.size	readFrontSensors, .-readFrontSensors
 3531 004a 00BF     		.section	.text.main,"ax",%progbits
 3532              		.align	2
 3533              		.global	main
 3534              		.thumb
 3535              		.thumb_func
 3536              		.type	main, %function
 3537              	main:
 3538              	.LFB99:
 722:.\main.c      **** 
 723:.\main.c      **** int main()
 724:.\main.c      **** {  
 3539              		.loc 1 724 0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 8
 3542              		@ frame_needed = 1, uses_anonymous_args = 0
 3543 0000 80B5     		push	{r7, lr}
 3544              		.cfi_def_cfa_offset 8
 3545              		.cfi_offset 7, -8
 3546              		.cfi_offset 14, -4
 3547 0002 82B0     		sub	sp, sp, #8
 3548              		.cfi_def_cfa_offset 16
 3549 0004 00AF     		add	r7, sp, #0
 3550              		.cfi_def_cfa_register 7
 725:.\main.c      **** 
 726:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 727:.\main.c      **** // ----- INITIALIZATIONS ----------
 728:.\main.c      ****     CYGlobalIntEnable;
 3551              		.loc 1 728 0
 3552              	@ 728 ".\main.c" 1
 3553 0006 62B6     		CPSIE   i
 3554              	@ 0 "" 2
 729:.\main.c      ****     if(ENABLE_PWM)
 730:.\main.c      ****     {
 731:.\main.c      ****         PWM_1_Start();// starting the pwm
 3555              		.loc 1 731 0
 3556              		.thumb
 3557 0008 FFF7FEFF 		bl	PWM_1_Start
 732:.\main.c      ****         PWM_2_Start();// starting the pwm
 3558              		.loc 1 732 0
 3559 000c FFF7FEFF 		bl	PWM_2_Start
 733:.\main.c      ****     }
 734:.\main.c      ****     
 735:.\main.c      ****     if(ENABLE_ADC)
 736:.\main.c      ****     {
 737:.\main.c      ****         ADC_Start();
 738:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 739:.\main.c      ****         //ADC_StartConvert();
 740:.\main.c      ****         
 741:.\main.c      ****         //start the ADC timer for software trigger mode
 742:.\main.c      ****         Timer_TS_Start();
 743:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 77


 744:.\main.c      ****     }
 745:.\main.c      ****     
 746:.\main.c      ****     if (ENABLE_QUAD)
 747:.\main.c      ****     {
 748:.\main.c      ****         QuadDec_M1_Start();
 3560              		.loc 1 748 0
 3561 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 749:.\main.c      ****         QuadDec_M2_Start();
 3562              		.loc 1 749 0
 3563 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 750:.\main.c      ****         
 751:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3564              		.loc 1 751 0
 3565 0018 4B48     		ldr	r0, .L209
 3566 001a FFF7FEFF 		bl	isr_quad1_StartEx
 752:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3567              		.loc 1 752 0
 3568 001e 4B48     		ldr	r0, .L209+4
 3569 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 753:.\main.c      ****         
 754:.\main.c      ****         Timer_1_Start();
 3570              		.loc 1 754 0
 3571 0024 FFF7FEFF 		bl	Timer_1_Start
 755:.\main.c      ****     }
 756:.\main.c      ****     
 757:.\main.c      ****     if(ENABLE_STOP){
 758:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 759:.\main.c      ****         
 760:.\main.c      ****     }
 761:.\main.c      ****     isr_button_StartEx(button);
 3572              		.loc 1 761 0
 3573 0028 4948     		ldr	r0, .L209+8
 3574 002a FFF7FEFF 		bl	isr_button_StartEx
 762:.\main.c      ****     
 763:.\main.c      **** 
 764:.\main.c      ****     // ------USB SETUP ----------------    
 765:.\main.c      ****     if (USE_USB){    
 766:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3575              		.loc 1 766 0
 3576 002e 0020     		movs	r0, #0
 3577 0030 0121     		movs	r1, #1
 3578 0032 FFF7FEFF 		bl	USBUART_Start
 767:.\main.c      ****         if (USBUART_GetConfiguration())
 3579              		.loc 1 767 0
 3580 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
 3581 003a 0346     		mov	r3, r0
 3582 003c 002B     		cmp	r3, #0
 3583 003e 01D0     		beq	.L183
 768:.\main.c      ****             {
 769:.\main.c      ****                  USBUART_CDC_Init();
 3584              		.loc 1 769 0
 3585 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 3586              	.L183:
 770:.\main.c      ****             }
 771:.\main.c      ****     }
 772:.\main.c      ****     
 773:.\main.c      ****     if(BIN_ENABLED){
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 78


 3587              		.loc 1 773 0
 3588 0044 434B     		ldr	r3, .L209+12
 3589 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3590 0048 002B     		cmp	r3, #0
 3591 004a 01D0     		beq	.L184
 774:.\main.c      ****         changeToRF();
 3592              		.loc 1 774 0
 3593 004c FFF7FEFF 		bl	changeToRF
 3594              	.L184:
 775:.\main.c      ****     }
 776:.\main.c      ****     
 777:.\main.c      ****     if(BT_ENABLED){
 3595              		.loc 1 777 0
 3596 0050 414B     		ldr	r3, .L209+16
 3597 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3598 0054 002B     		cmp	r3, #0
 3599 0056 01D0     		beq	.L185
 778:.\main.c      ****         changeToBT();
 3600              		.loc 1 778 0
 3601 0058 FFF7FEFF 		bl	changeToBT
 3602              	.L185:
 3603              	.LBB8:
 779:.\main.c      ****     }
 780:.\main.c      ****     
 781:.\main.c      ****     //usbPutString("Started");
 782:.\main.c      ****     for(;;)
 783:.\main.c      ****     {
 784:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 785:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 3604              		.loc 1 785 0
 3605 005c FFF7FEFF 		bl	Quad_Dec_response
 786:.\main.c      ****         if(BIN_ENABLED == 1)
 3606              		.loc 1 786 0
 3607 0060 3C4B     		ldr	r3, .L209+12
 3608 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3609 0064 012B     		cmp	r3, #1
 3610 0066 03D1     		bne	.L186
 787:.\main.c      ****         {
 788:.\main.c      ****             handle_rx_binary();
 3611              		.loc 1 788 0
 3612 0068 FFF7FEFF 		bl	handle_rx_binary
 789:.\main.c      ****             print_RF();
 3613              		.loc 1 789 0
 3614 006c FFF7FEFF 		bl	print_RF
 3615              	.L186:
 790:.\main.c      ****         }
 791:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 792:.\main.c      ****         
 793:.\main.c      ****         uint8 frontSensors[5];
 794:.\main.c      ****         readFrontSensors(frontSensors);
 3616              		.loc 1 794 0
 3617 0070 3B46     		mov	r3, r7
 3618 0072 1846     		mov	r0, r3
 3619 0074 FFF7FEFF 		bl	readFrontSensors
 795:.\main.c      ****         
 796:.\main.c      ****         switch(track_mode)
 3620              		.loc 1 796 0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 79


 3621 0078 384B     		ldr	r3, .L209+20
 3622 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3623 007c 052B     		cmp	r3, #5
 3624 007e 38D8     		bhi	.L187
 3625 0080 01A2     		adr	r2, .L189
 3626 0082 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3627 0086 00BF     		.p2align 2
 3628              	.L189:
 3629 0088 F3000000 		.word	.L187+1
 3630 008c F3000000 		.word	.L187+1
 3631 0090 F3000000 		.word	.L187+1
 3632 0094 A1000000 		.word	.L192+1
 3633 0098 F3000000 		.word	.L187+1
 3634 009c CD000000 		.word	.L194+1
 3635              		.p2align 1
 3636              	.L192:
 797:.\main.c      ****         {
 798:.\main.c      ****             case SQUARE_TRACK:
 799:.\main.c      ****                 if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 3637              		.loc 1 799 0
 3638 00a0 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3639 00a2 012B     		cmp	r3, #1
 3640 00a4 05D1     		bne	.L195
 3641              		.loc 1 799 0 is_stmt 0 discriminator 1
 3642 00a6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3643 00a8 012B     		cmp	r3, #1
 3644 00aa 02D1     		bne	.L195
 800:.\main.c      ****                     initTurnLeft();
 3645              		.loc 1 800 0 is_stmt 1
 3646 00ac FFF7FEFF 		bl	initTurnLeft
 3647 00b0 0BE0     		b	.L196
 3648              	.L195:
 801:.\main.c      ****                 }
 802:.\main.c      ****                 else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 3649              		.loc 1 802 0
 3650 00b2 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3651 00b4 012B     		cmp	r3, #1
 3652 00b6 05D1     		bne	.L197
 3653              		.loc 1 802 0 is_stmt 0 discriminator 1
 3654 00b8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3655 00ba 012B     		cmp	r3, #1
 3656 00bc 02D1     		bne	.L197
 803:.\main.c      ****                 {
 804:.\main.c      ****                     initTurnRight();
 3657              		.loc 1 804 0 is_stmt 1
 3658 00be FFF7FEFF 		bl	initTurnRight
 3659 00c2 02E0     		b	.L196
 3660              	.L197:
 805:.\main.c      ****                 }
 806:.\main.c      ****                 else inittrackLineZ();
 3661              		.loc 1 806 0
 3662 00c4 FFF7FEFF 		bl	inittrackLineZ
 807:.\main.c      ****             break;
 3663              		.loc 1 807 0
 3664 00c8 13E0     		b	.L187
 3665              	.L196:
 3666 00ca 12E0     		b	.L187
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 80


 3667              	.L194:
 808:.\main.c      ****             case NO_TRACK:
 809:.\main.c      ****             break;
 810:.\main.c      ****             case CURVE_TRACK:
 811:.\main.c      ****             break;
 812:.\main.c      ****             case U_TRACK:
 813:.\main.c      ****             break;
 814:.\main.c      ****             case QUAD_STOP:
 815:.\main.c      ****             break;
 816:.\main.c      ****             case RF_STOP:
 817:.\main.c      ****                 if(initial_pos_valid == 1)
 3668              		.loc 1 817 0
 3669 00cc 244B     		ldr	r3, .L209+24
 3670 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3671 00d0 012B     		cmp	r3, #1
 3672 00d2 0DD1     		bne	.L198
 818:.\main.c      ****                 {
 819:.\main.c      ****                     //changeToBT();
 820:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 821:.\main.c      ****                     //changeToRF();
 822:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 3673              		.loc 1 822 0
 3674 00d4 234B     		ldr	r3, .L209+28
 3675 00d6 5A88     		ldrh	r2, [r3, #2]
 3676 00d8 234B     		ldr	r3, .L209+32
 3677 00da 1A80     		strh	r2, [r3]	@ movhi
 823:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 3678              		.loc 1 823 0
 3679 00dc 214B     		ldr	r3, .L209+28
 3680 00de 9A88     		ldrh	r2, [r3, #4]
 3681 00e0 224B     		ldr	r3, .L209+36
 3682 00e2 1A80     		strh	r2, [r3]	@ movhi
 824:.\main.c      ****                     initial_pos_valid = 2;
 3683              		.loc 1 824 0
 3684 00e4 1E4B     		ldr	r3, .L209+24
 3685 00e6 0222     		movs	r2, #2
 3686 00e8 1A70     		strb	r2, [r3]
 825:.\main.c      ****                     initForward();
 3687              		.loc 1 825 0
 3688 00ea FFF7FEFF 		bl	initForward
 826:.\main.c      ****                 }
 827:.\main.c      ****             break;
 3689              		.loc 1 827 0
 3690 00ee FFE7     		b	.L208
 3691              	.L198:
 3692              	.L208:
 3693 00f0 00BF     		nop
 3694              	.L187:
 828:.\main.c      ****         }
 829:.\main.c      ****         
 830:.\main.c      ****         switch(movement_state)
 3695              		.loc 1 830 0
 3696 00f2 1F4B     		ldr	r3, .L209+40
 3697 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3698 00f6 062B     		cmp	r3, #6
 3699 00f8 B0D8     		bhi	.L185
 3700 00fa 01A2     		adr	r2, .L201
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 81


 3701 00fc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3702              		.p2align 2
 3703              	.L201:
 3704 0100 1D010000 		.word	.L200+1
 3705 0104 23010000 		.word	.L202+1
 3706 0108 29010000 		.word	.L203+1
 3707 010c 2F010000 		.word	.L204+1
 3708 0110 35010000 		.word	.L205+1
 3709 0114 3B010000 		.word	.L206+1
 3710 0118 41010000 		.word	.L207+1
 3711              		.p2align 1
 3712              	.L200:
 831:.\main.c      ****         {
 832:.\main.c      ****             case DRIVE:
 833:.\main.c      ****                 driveForwards();
 3713              		.loc 1 833 0
 3714 011c FFF7FEFF 		bl	driveForwards
 834:.\main.c      ****             break;
 3715              		.loc 1 834 0
 3716 0120 10E0     		b	.L199
 3717              	.L202:
 835:.\main.c      ****             case LTURN:
 836:.\main.c      ****                 turnLeft();
 3718              		.loc 1 836 0
 3719 0122 FFF7FEFF 		bl	turnLeft
 837:.\main.c      ****             break;
 3720              		.loc 1 837 0
 3721 0126 0DE0     		b	.L199
 3722              	.L203:
 838:.\main.c      ****             case RTURN:
 839:.\main.c      ****                 turnRight();
 3723              		.loc 1 839 0
 3724 0128 FFF7FEFF 		bl	turnRight
 840:.\main.c      ****             break;
 3725              		.loc 1 840 0
 3726 012c 0AE0     		b	.L199
 3727              	.L204:
 841:.\main.c      ****             case STOPPED:
 842:.\main.c      ****                 brakeMotor();
 3728              		.loc 1 842 0
 3729 012e FFF7FEFF 		bl	brakeMotor
 843:.\main.c      ****             break;
 3730              		.loc 1 843 0
 3731 0132 07E0     		b	.L199
 3732              	.L205:
 844:.\main.c      ****             case TRACKING:
 845:.\main.c      ****                 trackLine();
 3733              		.loc 1 845 0
 3734 0134 FFF7FEFF 		bl	trackLine
 846:.\main.c      ****             break;
 3735              		.loc 1 846 0
 3736 0138 04E0     		b	.L199
 3737              	.L206:
 847:.\main.c      ****             case TRACKING_U:
 848:.\main.c      ****                 trackLineU();
 3738              		.loc 1 848 0
 3739 013a FFF7FEFF 		bl	trackLineU
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 82


 849:.\main.c      ****             break;
 3740              		.loc 1 849 0
 3741 013e 01E0     		b	.L199
 3742              	.L207:
 850:.\main.c      ****             case TRACKING_SOFT:
 851:.\main.c      ****                 trackLineZ();
 3743              		.loc 1 851 0
 3744 0140 FFF7FEFF 		bl	trackLineZ
 3745              	.L199:
 3746              	.LBE8:
 852:.\main.c      ****         }
 853:.\main.c      ****         //handle_usb();        
 854:.\main.c      ****     }   
 3747              		.loc 1 854 0
 3748 0144 8AE7     		b	.L185
 3749              	.L210:
 3750 0146 00BF     		.align	2
 3751              	.L209:
 3752 0148 00000000 		.word	isr_quad1
 3753 014c 00000000 		.word	isr_turn_timer
 3754 0150 00000000 		.word	button
 3755 0154 00000000 		.word	BIN_ENABLED
 3756 0158 00000000 		.word	BT_ENABLED
 3757 015c 00000000 		.word	track_mode
 3758 0160 00000000 		.word	initial_pos_valid
 3759 0164 00000000 		.word	system_state
 3760 0168 00000000 		.word	initial_x_pos
 3761 016c 00000000 		.word	initial_y_pos
 3762 0170 00000000 		.word	movement_state
 3763              		.cfi_endproc
 3764              	.LFE99:
 3765              		.size	main, .-main
 3766              		.section	.text.usbPutString,"ax",%progbits
 3767              		.align	2
 3768              		.global	usbPutString
 3769              		.thumb
 3770              		.thumb_func
 3771              		.type	usbPutString, %function
 3772              	usbPutString:
 3773              	.LFB100:
 855:.\main.c      **** }
 856:.\main.c      **** //* ========================================
 857:.\main.c      **** void usbPutString(char *s)
 858:.\main.c      **** {
 3774              		.loc 1 858 0
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 16
 3777              		@ frame_needed = 1, uses_anonymous_args = 0
 3778 0000 80B5     		push	{r7, lr}
 3779              		.cfi_def_cfa_offset 8
 3780              		.cfi_offset 7, -8
 3781              		.cfi_offset 14, -4
 3782 0002 84B0     		sub	sp, sp, #16
 3783              		.cfi_def_cfa_offset 24
 3784 0004 00AF     		add	r7, sp, #0
 3785              		.cfi_def_cfa_register 7
 3786 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 83


 859:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 860:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 861:.\main.c      **** //  length to 62 char (63rd char is a '!')
 862:.\main.c      ****     if (USE_USB && portOpen)    
 3787              		.loc 1 862 0
 3788 0008 154B     		ldr	r3, .L215
 3789 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3790 000c 002B     		cmp	r3, #0
 3791 000e 23D0     		beq	.L211
 3792              	.LBB9:
 863:.\main.c      ****     {
 864:.\main.c      ****             uint32 cnt = 0;
 3793              		.loc 1 864 0
 3794 0010 0023     		movs	r3, #0
 3795 0012 FB60     		str	r3, [r7, #12]
 865:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 3796              		.loc 1 865 0
 3797 0014 0AE0     		b	.L213
 3798              	.L214:
 866:.\main.c      ****             {
 867:.\main.c      ****                 cnt++;
 3799              		.loc 1 867 0
 3800 0016 FB68     		ldr	r3, [r7, #12]
 3801 0018 0133     		adds	r3, r3, #1
 3802 001a FB60     		str	r3, [r7, #12]
 868:.\main.c      ****                 if(cnt == 3000000){
 3803              		.loc 1 868 0
 3804 001c FB68     		ldr	r3, [r7, #12]
 3805 001e 114A     		ldr	r2, .L215+4
 3806 0020 9342     		cmp	r3, r2
 3807 0022 03D1     		bne	.L213
 869:.\main.c      ****                     portOpen = 0;
 3808              		.loc 1 869 0
 3809 0024 0E4B     		ldr	r3, .L215
 3810 0026 0022     		movs	r2, #0
 3811 0028 1A70     		strb	r2, [r3]
 870:.\main.c      ****                     return;
 3812              		.loc 1 870 0
 3813 002a 15E0     		b	.L211
 3814              	.L213:
 865:.\main.c      ****             {
 3815              		.loc 1 865 0
 3816 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 3817 0030 0346     		mov	r3, r0
 3818 0032 002B     		cmp	r3, #0
 3819 0034 EFD0     		beq	.L214
 871:.\main.c      ****                 }
 872:.\main.c      ****             }
 873:.\main.c      ****             s[63]='\0';
 3820              		.loc 1 873 0
 3821 0036 7B68     		ldr	r3, [r7, #4]
 3822 0038 3F33     		adds	r3, r3, #63
 3823 003a 0022     		movs	r2, #0
 3824 003c 1A70     		strb	r2, [r3]
 874:.\main.c      ****             s[62]='!';
 3825              		.loc 1 874 0
 3826 003e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 84


 3827 0040 3E33     		adds	r3, r3, #62
 3828 0042 2122     		movs	r2, #33
 3829 0044 1A70     		strb	r2, [r3]
 875:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 3830              		.loc 1 875 0
 3831 0046 7868     		ldr	r0, [r7, #4]
 3832 0048 FFF7FEFF 		bl	strlen
 3833 004c 0346     		mov	r3, r0
 3834 004e 9BB2     		uxth	r3, r3
 3835 0050 7868     		ldr	r0, [r7, #4]
 3836 0052 1946     		mov	r1, r3
 3837 0054 FFF7FEFF 		bl	USBUART_PutData
 3838              	.L211:
 3839              	.LBE9:
 876:.\main.c      ****     }
 877:.\main.c      **** }
 3840              		.loc 1 877 0
 3841 0058 1037     		adds	r7, r7, #16
 3842              		.cfi_def_cfa_offset 8
 3843 005a BD46     		mov	sp, r7
 3844              		.cfi_def_cfa_register 13
 3845              		@ sp needed
 3846 005c 80BD     		pop	{r7, pc}
 3847              	.L216:
 3848 005e 00BF     		.align	2
 3849              	.L215:
 3850 0060 00000000 		.word	portOpen
 3851 0064 C0C62D00 		.word	3000000
 3852              		.cfi_endproc
 3853              	.LFE100:
 3854              		.size	usbPutString, .-usbPutString
 3855              		.section	.text.usbPutChar,"ax",%progbits
 3856              		.align	2
 3857              		.global	usbPutChar
 3858              		.thumb
 3859              		.thumb_func
 3860              		.type	usbPutChar, %function
 3861              	usbPutChar:
 3862              	.LFB101:
 878:.\main.c      **** //* ========================================
 879:.\main.c      **** void usbPutChar(char c)
 880:.\main.c      **** {
 3863              		.loc 1 880 0
 3864              		.cfi_startproc
 3865              		@ args = 0, pretend = 0, frame = 16
 3866              		@ frame_needed = 1, uses_anonymous_args = 0
 3867 0000 80B5     		push	{r7, lr}
 3868              		.cfi_def_cfa_offset 8
 3869              		.cfi_offset 7, -8
 3870              		.cfi_offset 14, -4
 3871 0002 84B0     		sub	sp, sp, #16
 3872              		.cfi_def_cfa_offset 24
 3873 0004 00AF     		add	r7, sp, #0
 3874              		.cfi_def_cfa_register 7
 3875 0006 0346     		mov	r3, r0
 3876 0008 FB71     		strb	r3, [r7, #7]
 881:.\main.c      ****     if (USE_USB && portOpen)    
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 85


 3877              		.loc 1 881 0
 3878 000a 0F4B     		ldr	r3, .L221
 3879 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3880 000e 002B     		cmp	r3, #0
 3881 0010 16D0     		beq	.L217
 3882              	.LBB10:
 882:.\main.c      ****     {    
 883:.\main.c      ****         uint32 cnt = 0;
 3883              		.loc 1 883 0
 3884 0012 0023     		movs	r3, #0
 3885 0014 FB60     		str	r3, [r7, #12]
 884:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 3886              		.loc 1 884 0
 3887 0016 0AE0     		b	.L219
 3888              	.L220:
 885:.\main.c      ****             cnt++;
 3889              		.loc 1 885 0
 3890 0018 FB68     		ldr	r3, [r7, #12]
 3891 001a 0133     		adds	r3, r3, #1
 3892 001c FB60     		str	r3, [r7, #12]
 886:.\main.c      ****             if(cnt == 3000000){
 3893              		.loc 1 886 0
 3894 001e FB68     		ldr	r3, [r7, #12]
 3895 0020 0A4A     		ldr	r2, .L221+4
 3896 0022 9342     		cmp	r3, r2
 3897 0024 03D1     		bne	.L219
 887:.\main.c      ****                 portOpen = 0;
 3898              		.loc 1 887 0
 3899 0026 084B     		ldr	r3, .L221
 3900 0028 0022     		movs	r2, #0
 3901 002a 1A70     		strb	r2, [r3]
 888:.\main.c      ****                 return;
 3902              		.loc 1 888 0
 3903 002c 08E0     		b	.L217
 3904              	.L219:
 884:.\main.c      ****             cnt++;
 3905              		.loc 1 884 0
 3906 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 3907 0032 0346     		mov	r3, r0
 3908 0034 002B     		cmp	r3, #0
 3909 0036 EFD0     		beq	.L220
 889:.\main.c      ****             }
 890:.\main.c      ****         }
 891:.\main.c      ****         USBUART_PutChar(c);
 3910              		.loc 1 891 0
 3911 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3912 003a 1846     		mov	r0, r3
 3913 003c FFF7FEFF 		bl	USBUART_PutChar
 3914              	.L217:
 3915              	.LBE10:
 892:.\main.c      ****     }    
 893:.\main.c      **** }
 3916              		.loc 1 893 0
 3917 0040 1037     		adds	r7, r7, #16
 3918              		.cfi_def_cfa_offset 8
 3919 0042 BD46     		mov	sp, r7
 3920              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 86


 3921              		@ sp needed
 3922 0044 80BD     		pop	{r7, pc}
 3923              	.L222:
 3924 0046 00BF     		.align	2
 3925              	.L221:
 3926 0048 00000000 		.word	portOpen
 3927 004c C0C62D00 		.word	3000000
 3928              		.cfi_endproc
 3929              	.LFE101:
 3930              		.size	usbPutChar, .-usbPutChar
 3931              		.section	.text.uart_set_PWM,"ax",%progbits
 3932              		.align	2
 3933              		.global	uart_set_PWM
 3934              		.thumb
 3935              		.thumb_func
 3936              		.type	uart_set_PWM, %function
 3937              	uart_set_PWM:
 3938              	.LFB102:
 894:.\main.c      **** //* ========================================
 895:.\main.c      **** 
 896:.\main.c      **** void uart_set_PWM()
 897:.\main.c      **** {
 3939              		.loc 1 897 0
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 8
 3942              		@ frame_needed = 1, uses_anonymous_args = 0
 3943 0000 80B5     		push	{r7, lr}
 3944              		.cfi_def_cfa_offset 8
 3945              		.cfi_offset 7, -8
 3946              		.cfi_offset 14, -4
 3947 0002 82B0     		sub	sp, sp, #8
 3948              		.cfi_def_cfa_offset 16
 3949 0004 00AF     		add	r7, sp, #0
 3950              		.cfi_def_cfa_register 7
 898:.\main.c      ****     uint8 c;
 899:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 3951              		.loc 1 899 0
 3952 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 3953 000a 0346     		mov	r3, r0
 3954 000c 002B     		cmp	r3, #0
 3955 000e 11D0     		beq	.L223
 900:.\main.c      ****        {  
 901:.\main.c      ****             c = USBUART_GetChar();
 3956              		.loc 1 901 0
 3957 0010 FFF7FEFF 		bl	USBUART_GetChar
 3958 0014 0346     		mov	r3, r0
 3959 0016 FB71     		strb	r3, [r7, #7]
 902:.\main.c      ****             
 903:.\main.c      ****             if(c <= 100 && c > 0){
 3960              		.loc 1 903 0
 3961 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3962 001a 642B     		cmp	r3, #100
 3963 001c 0AD8     		bhi	.L223
 3964              		.loc 1 903 0 is_stmt 0 discriminator 1
 3965 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3966 0020 002B     		cmp	r3, #0
 3967 0022 07D0     		beq	.L223
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 87


 904:.\main.c      ****                 PWM_1_WriteCompare(c);
 3968              		.loc 1 904 0 is_stmt 1
 3969 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3970 0026 1846     		mov	r0, r3
 3971 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 905:.\main.c      ****                 usbPutString(c);
 3972              		.loc 1 905 0
 3973 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3974 002e 1846     		mov	r0, r3
 3975 0030 FFF7FEFF 		bl	usbPutString
 3976              	.L223:
 906:.\main.c      ****             }
 907:.\main.c      ****        }
 908:.\main.c      **** }
 3977              		.loc 1 908 0
 3978 0034 0837     		adds	r7, r7, #8
 3979              		.cfi_def_cfa_offset 8
 3980 0036 BD46     		mov	sp, r7
 3981              		.cfi_def_cfa_register 13
 3982              		@ sp needed
 3983 0038 80BD     		pop	{r7, pc}
 3984              		.cfi_endproc
 3985              	.LFE102:
 3986              		.size	uart_set_PWM, .-uart_set_PWM
 3987 003a 00BF     		.text
 3988              	.Letext0:
 3989              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3990              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3991              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3992              		.file 5 ".\\vars.h"
 3993              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 3994              		.section	.debug_info,"",%progbits
 3995              	.Ldebug_info0:
 3996 0000 330C0000 		.4byte	0xc33
 3997 0004 0400     		.2byte	0x4
 3998 0006 00000000 		.4byte	.Ldebug_abbrev0
 3999 000a 04       		.byte	0x4
 4000 000b 01       		.uleb128 0x1
 4001 000c EB030000 		.4byte	.LASF169
 4002 0010 01       		.byte	0x1
 4003 0011 1D080000 		.4byte	.LASF170
 4004 0015 1A020000 		.4byte	.LASF171
 4005 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4006 001d 00000000 		.4byte	0
 4007 0021 00000000 		.4byte	.Ldebug_line0
 4008 0025 02       		.uleb128 0x2
 4009 0026 01       		.byte	0x1
 4010 0027 06       		.byte	0x6
 4011 0028 58070000 		.4byte	.LASF0
 4012 002c 02       		.uleb128 0x2
 4013 002d 01       		.byte	0x1
 4014 002e 08       		.byte	0x8
 4015 002f BB060000 		.4byte	.LASF1
 4016 0033 02       		.uleb128 0x2
 4017 0034 02       		.byte	0x2
 4018 0035 05       		.byte	0x5
 4019 0036 70050000 		.4byte	.LASF2
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 88


 4020 003a 02       		.uleb128 0x2
 4021 003b 02       		.byte	0x2
 4022 003c 07       		.byte	0x7
 4023 003d 64070000 		.4byte	.LASF3
 4024 0041 03       		.uleb128 0x3
 4025 0042 6D000000 		.4byte	.LASF11
 4026 0046 02       		.byte	0x2
 4027 0047 3F       		.byte	0x3f
 4028 0048 4C000000 		.4byte	0x4c
 4029 004c 02       		.uleb128 0x2
 4030 004d 04       		.byte	0x4
 4031 004e 05       		.byte	0x5
 4032 004f 9A050000 		.4byte	.LASF4
 4033 0053 02       		.uleb128 0x2
 4034 0054 04       		.byte	0x4
 4035 0055 07       		.byte	0x7
 4036 0056 72060000 		.4byte	.LASF5
 4037 005a 02       		.uleb128 0x2
 4038 005b 08       		.byte	0x8
 4039 005c 05       		.byte	0x5
 4040 005d BE030000 		.4byte	.LASF6
 4041 0061 02       		.uleb128 0x2
 4042 0062 08       		.byte	0x8
 4043 0063 07       		.byte	0x7
 4044 0064 EA010000 		.4byte	.LASF7
 4045 0068 04       		.uleb128 0x4
 4046 0069 04       		.byte	0x4
 4047 006a 05       		.byte	0x5
 4048 006b 696E7400 		.ascii	"int\000"
 4049 006f 02       		.uleb128 0x2
 4050 0070 04       		.byte	0x4
 4051 0071 07       		.byte	0x7
 4052 0072 55000000 		.4byte	.LASF8
 4053 0076 02       		.uleb128 0x2
 4054 0077 04       		.byte	0x4
 4055 0078 07       		.byte	0x7
 4056 0079 69060000 		.4byte	.LASF9
 4057 007d 05       		.uleb128 0x5
 4058 007e 04       		.byte	0x4
 4059 007f 83000000 		.4byte	0x83
 4060 0083 02       		.uleb128 0x2
 4061 0084 01       		.byte	0x1
 4062 0085 08       		.byte	0x8
 4063 0086 2F030000 		.4byte	.LASF10
 4064 008a 03       		.uleb128 0x3
 4065 008b 90060000 		.4byte	.LASF12
 4066 008f 03       		.byte	0x3
 4067 0090 2C       		.byte	0x2c
 4068 0091 41000000 		.4byte	0x41
 4069 0095 06       		.uleb128 0x6
 4070 0096 B0070000 		.4byte	.LASF13
 4071 009a 04       		.byte	0x4
 4072 009b 9201     		.2byte	0x192
 4073 009d 2C000000 		.4byte	0x2c
 4074 00a1 06       		.uleb128 0x6
 4075 00a2 60030000 		.4byte	.LASF14
 4076 00a6 04       		.byte	0x4
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 89


 4077 00a7 9301     		.2byte	0x193
 4078 00a9 3A000000 		.4byte	0x3a
 4079 00ad 06       		.uleb128 0x6
 4080 00ae B2040000 		.4byte	.LASF15
 4081 00b2 04       		.byte	0x4
 4082 00b3 9401     		.2byte	0x194
 4083 00b5 53000000 		.4byte	0x53
 4084 00b9 06       		.uleb128 0x6
 4085 00ba 67030000 		.4byte	.LASF16
 4086 00be 04       		.byte	0x4
 4087 00bf 9501     		.2byte	0x195
 4088 00c1 25000000 		.4byte	0x25
 4089 00c5 06       		.uleb128 0x6
 4090 00c6 77000000 		.4byte	.LASF17
 4091 00ca 04       		.byte	0x4
 4092 00cb 9601     		.2byte	0x196
 4093 00cd 33000000 		.4byte	0x33
 4094 00d1 02       		.uleb128 0x2
 4095 00d2 04       		.byte	0x4
 4096 00d3 04       		.byte	0x4
 4097 00d4 8A010000 		.4byte	.LASF18
 4098 00d8 02       		.uleb128 0x2
 4099 00d9 08       		.byte	0x8
 4100 00da 04       		.byte	0x4
 4101 00db B6070000 		.4byte	.LASF19
 4102 00df 02       		.uleb128 0x2
 4103 00e0 08       		.byte	0x8
 4104 00e1 04       		.byte	0x4
 4105 00e2 1B050000 		.4byte	.LASF20
 4106 00e6 07       		.uleb128 0x7
 4107 00e7 FC060000 		.4byte	.LASF28
 4108 00eb 01       		.byte	0x1
 4109 00ec 05       		.byte	0x5
 4110 00ed 5A       		.byte	0x5a
 4111 00ee 1D010000 		.4byte	0x11d
 4112 00f2 08       		.uleb128 0x8
 4113 00f3 A9010000 		.4byte	.LASF21
 4114 00f7 00       		.sleb128 0
 4115 00f8 08       		.uleb128 0x8
 4116 00f9 8A000000 		.4byte	.LASF22
 4117 00fd 01       		.sleb128 1
 4118 00fe 08       		.uleb128 0x8
 4119 00ff 0A000000 		.4byte	.LASF23
 4120 0103 02       		.sleb128 2
 4121 0104 08       		.uleb128 0x8
 4122 0105 0A050000 		.4byte	.LASF24
 4123 0109 03       		.sleb128 3
 4124 010a 08       		.uleb128 0x8
 4125 010b B2000000 		.4byte	.LASF25
 4126 010f 04       		.sleb128 4
 4127 0110 08       		.uleb128 0x8
 4128 0111 5C010000 		.4byte	.LASF26
 4129 0115 05       		.sleb128 5
 4130 0116 08       		.uleb128 0x8
 4131 0117 F4050000 		.4byte	.LASF27
 4132 011b 06       		.sleb128 6
 4133 011c 00       		.byte	0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 90


 4134 011d 07       		.uleb128 0x7
 4135 011e DD000000 		.4byte	.LASF29
 4136 0122 01       		.byte	0x1
 4137 0123 05       		.byte	0x5
 4138 0124 5B       		.byte	0x5b
 4139 0125 4E010000 		.4byte	0x14e
 4140 0129 08       		.uleb128 0x8
 4141 012a DC050000 		.4byte	.LASF30
 4142 012e 00       		.sleb128 0
 4143 012f 08       		.uleb128 0x8
 4144 0130 85030000 		.4byte	.LASF31
 4145 0134 01       		.sleb128 1
 4146 0135 08       		.uleb128 0x8
 4147 0136 B1050000 		.4byte	.LASF32
 4148 013a 02       		.sleb128 2
 4149 013b 08       		.uleb128 0x8
 4150 013c 16010000 		.4byte	.LASF33
 4151 0140 03       		.sleb128 3
 4152 0141 08       		.uleb128 0x8
 4153 0142 89070000 		.4byte	.LASF34
 4154 0146 04       		.sleb128 4
 4155 0147 08       		.uleb128 0x8
 4156 0148 CE070000 		.4byte	.LASF35
 4157 014c 05       		.sleb128 5
 4158 014d 00       		.byte	0
 4159 014e 09       		.uleb128 0x9
 4160 014f C5040000 		.4byte	.LASF172
 4161 0153 20       		.byte	0x20
 4162 0154 05       		.byte	0x5
 4163 0155 61       		.byte	0x61
 4164 0156 27020000 		.4byte	0x227
 4165 015a 0A       		.uleb128 0xa
 4166 015b DD040000 		.4byte	.LASF36
 4167 015f 05       		.byte	0x5
 4168 0160 62       		.byte	0x62
 4169 0161 B9000000 		.4byte	0xb9
 4170 0165 00       		.byte	0
 4171 0166 0A       		.uleb128 0xa
 4172 0167 A3010000 		.4byte	.LASF37
 4173 016b 05       		.byte	0x5
 4174 016c 63       		.byte	0x63
 4175 016d 95000000 		.4byte	0x95
 4176 0171 01       		.byte	0x1
 4177 0172 0A       		.uleb128 0xa
 4178 0173 9F060000 		.4byte	.LASF38
 4179 0177 05       		.byte	0x5
 4180 0178 64       		.byte	0x64
 4181 0179 C5000000 		.4byte	0xc5
 4182 017d 02       		.byte	0x2
 4183 017e 0A       		.uleb128 0xa
 4184 017f 03030000 		.4byte	.LASF39
 4185 0183 05       		.byte	0x5
 4186 0184 65       		.byte	0x65
 4187 0185 C5000000 		.4byte	0xc5
 4188 0189 04       		.byte	0x4
 4189 018a 0A       		.uleb128 0xa
 4190 018b 77070000 		.4byte	.LASF40
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 91


 4191 018f 05       		.byte	0x5
 4192 0190 66       		.byte	0x66
 4193 0191 C5000000 		.4byte	0xc5
 4194 0195 06       		.byte	0x6
 4195 0196 0A       		.uleb128 0xa
 4196 0197 F0070000 		.4byte	.LASF41
 4197 019b 05       		.byte	0x5
 4198 019c 67       		.byte	0x67
 4199 019d C5000000 		.4byte	0xc5
 4200 01a1 08       		.byte	0x8
 4201 01a2 0A       		.uleb128 0xa
 4202 01a3 82040000 		.4byte	.LASF42
 4203 01a7 05       		.byte	0x5
 4204 01a8 68       		.byte	0x68
 4205 01a9 C5000000 		.4byte	0xc5
 4206 01ad 0A       		.byte	0xa
 4207 01ae 0A       		.uleb128 0xa
 4208 01af 34030000 		.4byte	.LASF43
 4209 01b3 05       		.byte	0x5
 4210 01b4 69       		.byte	0x69
 4211 01b5 C5000000 		.4byte	0xc5
 4212 01b9 0C       		.byte	0xc
 4213 01ba 0A       		.uleb128 0xa
 4214 01bb EC040000 		.4byte	.LASF44
 4215 01bf 05       		.byte	0x5
 4216 01c0 6A       		.byte	0x6a
 4217 01c1 C5000000 		.4byte	0xc5
 4218 01c5 0E       		.byte	0xe
 4219 01c6 0A       		.uleb128 0xa
 4220 01c7 D9030000 		.4byte	.LASF45
 4221 01cb 05       		.byte	0x5
 4222 01cc 6B       		.byte	0x6b
 4223 01cd C5000000 		.4byte	0xc5
 4224 01d1 10       		.byte	0x10
 4225 01d2 0A       		.uleb128 0xa
 4226 01d3 29060000 		.4byte	.LASF46
 4227 01d7 05       		.byte	0x5
 4228 01d8 6C       		.byte	0x6c
 4229 01d9 C5000000 		.4byte	0xc5
 4230 01dd 12       		.byte	0x12
 4231 01de 0A       		.uleb128 0xa
 4232 01df 14080000 		.4byte	.LASF47
 4233 01e3 05       		.byte	0x5
 4234 01e4 6D       		.byte	0x6d
 4235 01e5 C5000000 		.4byte	0xc5
 4236 01e9 14       		.byte	0x14
 4237 01ea 0A       		.uleb128 0xa
 4238 01eb 6C030000 		.4byte	.LASF48
 4239 01ef 05       		.byte	0x5
 4240 01f0 6E       		.byte	0x6e
 4241 01f1 C5000000 		.4byte	0xc5
 4242 01f5 16       		.byte	0x16
 4243 01f6 0A       		.uleb128 0xa
 4244 01f7 D5000000 		.4byte	.LASF49
 4245 01fb 05       		.byte	0x5
 4246 01fc 6F       		.byte	0x6f
 4247 01fd C5000000 		.4byte	0xc5
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 92


 4248 0201 18       		.byte	0x18
 4249 0202 0A       		.uleb128 0xa
 4250 0203 58030000 		.4byte	.LASF50
 4251 0207 05       		.byte	0x5
 4252 0208 70       		.byte	0x70
 4253 0209 C5000000 		.4byte	0xc5
 4254 020d 1A       		.byte	0x1a
 4255 020e 0A       		.uleb128 0xa
 4256 020f 79040000 		.4byte	.LASF51
 4257 0213 05       		.byte	0x5
 4258 0214 71       		.byte	0x71
 4259 0215 C5000000 		.4byte	0xc5
 4260 0219 1C       		.byte	0x1c
 4261 021a 0A       		.uleb128 0xa
 4262 021b 73010000 		.4byte	.LASF52
 4263 021f 05       		.byte	0x5
 4264 0220 72       		.byte	0x72
 4265 0221 C5000000 		.4byte	0xc5
 4266 0225 1E       		.byte	0x1e
 4267 0226 00       		.byte	0
 4268 0227 0B       		.uleb128 0xb
 4269 0228 D6070000 		.4byte	.LASF58
 4270 022c 01       		.byte	0x1
 4271 022d 2C       		.byte	0x2c
 4272 022e 00000000 		.4byte	.LFB63
 4273 0232 60010000 		.4byte	.LFE63-.LFB63
 4274 0236 01       		.uleb128 0x1
 4275 0237 9C       		.byte	0x9c
 4276 0238 71020000 		.4byte	0x271
 4277 023c 0C       		.uleb128 0xc
 4278 023d 10000000 		.4byte	.LBB2
 4279 0241 34010000 		.4byte	.LBE2-.LBB2
 4280 0245 0D       		.uleb128 0xd
 4281 0246 C8000000 		.4byte	.LASF53
 4282 024a 01       		.byte	0x1
 4283 024b 32       		.byte	0x32
 4284 024c A1000000 		.4byte	0xa1
 4285 0250 02       		.uleb128 0x2
 4286 0251 91       		.byte	0x91
 4287 0252 76       		.sleb128 -10
 4288 0253 0D       		.uleb128 0xd
 4289 0254 84060000 		.4byte	.LASF54
 4290 0258 01       		.byte	0x1
 4291 0259 34       		.byte	0x34
 4292 025a 71020000 		.4byte	0x271
 4293 025e 02       		.uleb128 0x2
 4294 025f 91       		.byte	0x91
 4295 0260 68       		.sleb128 -24
 4296 0261 0D       		.uleb128 0xd
 4297 0262 AF010000 		.4byte	.LASF55
 4298 0266 01       		.byte	0x1
 4299 0267 35       		.byte	0x35
 4300 0268 71020000 		.4byte	0x271
 4301 026c 02       		.uleb128 0x2
 4302 026d 91       		.byte	0x91
 4303 026e 5C       		.sleb128 -36
 4304 026f 00       		.byte	0
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 93


 4305 0270 00       		.byte	0
 4306 0271 0E       		.uleb128 0xe
 4307 0272 83000000 		.4byte	0x83
 4308 0276 81020000 		.4byte	0x281
 4309 027a 0F       		.uleb128 0xf
 4310 027b 76000000 		.4byte	0x76
 4311 027f 0B       		.byte	0xb
 4312 0280 00       		.byte	0
 4313 0281 10       		.uleb128 0x10
 4314 0282 4D030000 		.4byte	.LASF56
 4315 0286 01       		.byte	0x1
 4316 0287 A7       		.byte	0xa7
 4317 0288 00000000 		.4byte	.LFB64
 4318 028c 18000000 		.4byte	.LFE64-.LFB64
 4319 0290 01       		.uleb128 0x1
 4320 0291 9C       		.byte	0x9c
 4321 0292 A5020000 		.4byte	0x2a5
 4322 0296 11       		.uleb128 0x11
 4323 0297 64697200 		.ascii	"dir\000"
 4324 029b 01       		.byte	0x1
 4325 029c A7       		.byte	0xa7
 4326 029d 95000000 		.4byte	0x95
 4327 02a1 02       		.uleb128 0x2
 4328 02a2 91       		.byte	0x91
 4329 02a3 77       		.sleb128 -9
 4330 02a4 00       		.byte	0
 4331 02a5 10       		.uleb128 0x10
 4332 02a6 79030000 		.4byte	.LASF57
 4333 02aa 01       		.byte	0x1
 4334 02ab AC       		.byte	0xac
 4335 02ac 00000000 		.4byte	.LFB65
 4336 02b0 18000000 		.4byte	.LFE65-.LFB65
 4337 02b4 01       		.uleb128 0x1
 4338 02b5 9C       		.byte	0x9c
 4339 02b6 C9020000 		.4byte	0x2c9
 4340 02ba 11       		.uleb128 0x11
 4341 02bb 64697200 		.ascii	"dir\000"
 4342 02bf 01       		.byte	0x1
 4343 02c0 AC       		.byte	0xac
 4344 02c1 95000000 		.4byte	0x95
 4345 02c5 02       		.uleb128 0x2
 4346 02c6 91       		.byte	0x91
 4347 02c7 77       		.sleb128 -9
 4348 02c8 00       		.byte	0
 4349 02c9 12       		.uleb128 0x12
 4350 02ca 02070000 		.4byte	.LASF59
 4351 02ce 01       		.byte	0x1
 4352 02cf B1       		.byte	0xb1
 4353 02d0 00000000 		.4byte	.LFB66
 4354 02d4 54000000 		.4byte	.LFE66-.LFB66
 4355 02d8 01       		.uleb128 0x1
 4356 02d9 9C       		.byte	0x9c
 4357 02da ED020000 		.4byte	0x2ed
 4358 02de 13       		.uleb128 0x13
 4359 02df 6D657300 		.ascii	"mes\000"
 4360 02e3 01       		.byte	0x1
 4361 02e4 B6       		.byte	0xb6
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 94


 4362 02e5 ED020000 		.4byte	0x2ed
 4363 02e9 02       		.uleb128 0x2
 4364 02ea 91       		.byte	0x91
 4365 02eb 68       		.sleb128 -24
 4366 02ec 00       		.byte	0
 4367 02ed 0E       		.uleb128 0xe
 4368 02ee 83000000 		.4byte	0x83
 4369 02f2 FD020000 		.4byte	0x2fd
 4370 02f6 0F       		.uleb128 0xf
 4371 02f7 76000000 		.4byte	0x76
 4372 02fb 0F       		.byte	0xf
 4373 02fc 00       		.byte	0
 4374 02fd 10       		.uleb128 0x10
 4375 02fe 90010000 		.4byte	.LASF60
 4376 0302 01       		.byte	0x1
 4377 0303 BB       		.byte	0xbb
 4378 0304 00000000 		.4byte	.LFB67
 4379 0308 F4000000 		.4byte	.LFE67-.LFB67
 4380 030c 01       		.uleb128 0x1
 4381 030d 9C       		.byte	0x9c
 4382 030e 4B030000 		.4byte	0x34b
 4383 0312 14       		.uleb128 0x14
 4384 0313 02060000 		.4byte	.LASF61
 4385 0317 01       		.byte	0x1
 4386 0318 BB       		.byte	0xbb
 4387 0319 D8000000 		.4byte	0xd8
 4388 031d 02       		.uleb128 0x2
 4389 031e 91       		.byte	0x91
 4390 031f 68       		.sleb128 -24
 4391 0320 14       		.uleb128 0x14
 4392 0321 A6030000 		.4byte	.LASF62
 4393 0325 01       		.byte	0x1
 4394 0326 BB       		.byte	0xbb
 4395 0327 D8000000 		.4byte	0xd8
 4396 032b 02       		.uleb128 0x2
 4397 032c 91       		.byte	0x91
 4398 032d 60       		.sleb128 -32
 4399 032e 0D       		.uleb128 0xd
 4400 032f C8010000 		.4byte	.LASF63
 4401 0333 01       		.byte	0x1
 4402 0334 D0       		.byte	0xd0
 4403 0335 C5000000 		.4byte	0xc5
 4404 0339 02       		.uleb128 0x2
 4405 033a 91       		.byte	0x91
 4406 033b 76       		.sleb128 -10
 4407 033c 0D       		.uleb128 0xd
 4408 033d B9040000 		.4byte	.LASF64
 4409 0341 01       		.byte	0x1
 4410 0342 D1       		.byte	0xd1
 4411 0343 C5000000 		.4byte	0xc5
 4412 0347 02       		.uleb128 0x2
 4413 0348 91       		.byte	0x91
 4414 0349 74       		.sleb128 -12
 4415 034a 00       		.byte	0
 4416 034b 15       		.uleb128 0x15
 4417 034c 13070000 		.4byte	.LASF65
 4418 0350 01       		.byte	0x1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 95


 4419 0351 D7       		.byte	0xd7
 4420 0352 00000000 		.4byte	.LFB68
 4421 0356 18000000 		.4byte	.LFE68-.LFB68
 4422 035a 01       		.uleb128 0x1
 4423 035b 9C       		.byte	0x9c
 4424 035c 15       		.uleb128 0x15
 4425 035d 34080000 		.4byte	.LASF66
 4426 0361 01       		.byte	0x1
 4427 0362 DD       		.byte	0xdd
 4428 0363 00000000 		.4byte	.LFB69
 4429 0367 18000000 		.4byte	.LFE69-.LFB69
 4430 036b 01       		.uleb128 0x1
 4431 036c 9C       		.byte	0x9c
 4432 036d 15       		.uleb128 0x15
 4433 036e AA060000 		.4byte	.LASF67
 4434 0372 01       		.byte	0x1
 4435 0373 E3       		.byte	0xe3
 4436 0374 00000000 		.4byte	.LFB70
 4437 0378 22000000 		.4byte	.LFE70-.LFB70
 4438 037c 01       		.uleb128 0x1
 4439 037d 9C       		.byte	0x9c
 4440 037e 15       		.uleb128 0x15
 4441 037f D3010000 		.4byte	.LASF68
 4442 0383 01       		.byte	0x1
 4443 0384 E9       		.byte	0xe9
 4444 0385 00000000 		.4byte	.LFB71
 4445 0389 1C000000 		.4byte	.LFE71-.LFB71
 4446 038d 01       		.uleb128 0x1
 4447 038e 9C       		.byte	0x9c
 4448 038f 15       		.uleb128 0x15
 4449 0390 1F060000 		.4byte	.LASF69
 4450 0394 01       		.byte	0x1
 4451 0395 EE       		.byte	0xee
 4452 0396 00000000 		.4byte	.LFB72
 4453 039a 28000000 		.4byte	.LFE72-.LFB72
 4454 039e 01       		.uleb128 0x1
 4455 039f 9C       		.byte	0x9c
 4456 03a0 15       		.uleb128 0x15
 4457 03a1 E1010000 		.4byte	.LASF70
 4458 03a5 01       		.byte	0x1
 4459 03a6 F3       		.byte	0xf3
 4460 03a7 00000000 		.4byte	.LFB73
 4461 03ab 2C000000 		.4byte	.LFE73-.LFB73
 4462 03af 01       		.uleb128 0x1
 4463 03b0 9C       		.byte	0x9c
 4464 03b1 15       		.uleb128 0x15
 4465 03b2 59020000 		.4byte	.LASF71
 4466 03b6 01       		.byte	0x1
 4467 03b7 F8       		.byte	0xf8
 4468 03b8 00000000 		.4byte	.LFB74
 4469 03bc 38000000 		.4byte	.LFE74-.LFB74
 4470 03c0 01       		.uleb128 0x1
 4471 03c1 9C       		.byte	0x9c
 4472 03c2 16       		.uleb128 0x16
 4473 03c3 A3050000 		.4byte	.LASF72
 4474 03c7 01       		.byte	0x1
 4475 03c8 0101     		.2byte	0x101
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 96


 4476 03ca 00000000 		.4byte	.LFB75
 4477 03ce 38000000 		.4byte	.LFE75-.LFB75
 4478 03d2 01       		.uleb128 0x1
 4479 03d3 9C       		.byte	0x9c
 4480 03d4 16       		.uleb128 0x16
 4481 03d5 67010000 		.4byte	.LASF73
 4482 03d9 01       		.byte	0x1
 4483 03da 0A01     		.2byte	0x10a
 4484 03dc 00000000 		.4byte	.LFB76
 4485 03e0 14000000 		.4byte	.LFE76-.LFB76
 4486 03e4 01       		.uleb128 0x1
 4487 03e5 9C       		.byte	0x9c
 4488 03e6 17       		.uleb128 0x17
 4489 03e7 6F020000 		.4byte	.LASF74
 4490 03eb 01       		.byte	0x1
 4491 03ec 0F01     		.2byte	0x10f
 4492 03ee 00000000 		.4byte	.LFB77
 4493 03f2 18000000 		.4byte	.LFE77-.LFB77
 4494 03f6 01       		.uleb128 0x1
 4495 03f7 9C       		.byte	0x9c
 4496 03f8 17       		.uleb128 0x17
 4497 03f9 E1030000 		.4byte	.LASF75
 4498 03fd 01       		.byte	0x1
 4499 03fe 1301     		.2byte	0x113
 4500 0400 00000000 		.4byte	.LFB78
 4501 0404 18000000 		.4byte	.LFE78-.LFB78
 4502 0408 01       		.uleb128 0x1
 4503 0409 9C       		.byte	0x9c
 4504 040a 17       		.uleb128 0x17
 4505 040b 3F080000 		.4byte	.LASF76
 4506 040f 01       		.byte	0x1
 4507 0410 1801     		.2byte	0x118
 4508 0412 00000000 		.4byte	.LFB79
 4509 0416 18000000 		.4byte	.LFE79-.LFB79
 4510 041a 01       		.uleb128 0x1
 4511 041b 9C       		.byte	0x9c
 4512 041c 17       		.uleb128 0x17
 4513 041d F4020000 		.4byte	.LASF77
 4514 0421 01       		.byte	0x1
 4515 0422 1C01     		.2byte	0x11c
 4516 0424 00000000 		.4byte	.LFB80
 4517 0428 18000000 		.4byte	.LFE80-.LFB80
 4518 042c 01       		.uleb128 0x1
 4519 042d 9C       		.byte	0x9c
 4520 042e 18       		.uleb128 0x18
 4521 042f 27050000 		.4byte	.LASF78
 4522 0433 01       		.byte	0x1
 4523 0434 2301     		.2byte	0x123
 4524 0436 00000000 		.4byte	.LFB81
 4525 043a B8000000 		.4byte	.LFE81-.LFB81
 4526 043e 01       		.uleb128 0x1
 4527 043f 9C       		.byte	0x9c
 4528 0440 54040000 		.4byte	0x454
 4529 0444 19       		.uleb128 0x19
 4530 0445 8A040000 		.4byte	.LASF79
 4531 0449 01       		.byte	0x1
 4532 044a 2401     		.2byte	0x124
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 97


 4533 044c 83000000 		.4byte	0x83
 4534 0450 02       		.uleb128 0x2
 4535 0451 91       		.byte	0x91
 4536 0452 6F       		.sleb128 -17
 4537 0453 00       		.byte	0
 4538 0454 18       		.uleb128 0x18
 4539 0455 12050000 		.4byte	.LASF80
 4540 0459 01       		.byte	0x1
 4541 045a 4001     		.2byte	0x140
 4542 045c 00000000 		.4byte	.LFB82
 4543 0460 78010000 		.4byte	.LFE82-.LFB82
 4544 0464 01       		.uleb128 0x1
 4545 0465 9C       		.byte	0x9c
 4546 0466 93040000 		.4byte	0x493
 4547 046a 19       		.uleb128 0x19
 4548 046b 8A040000 		.4byte	.LASF79
 4549 046f 01       		.byte	0x1
 4550 0470 4201     		.2byte	0x142
 4551 0472 83000000 		.4byte	0x83
 4552 0476 02       		.uleb128 0x2
 4553 0477 91       		.byte	0x91
 4554 0478 77       		.sleb128 -9
 4555 0479 0C       		.uleb128 0xc
 4556 047a 88000000 		.4byte	.LBB3
 4557 047e CC000000 		.4byte	.LBE3-.LBB3
 4558 0482 1A       		.uleb128 0x1a
 4559 0483 6D657300 		.ascii	"mes\000"
 4560 0487 01       		.byte	0x1
 4561 0488 6801     		.2byte	0x168
 4562 048a ED020000 		.4byte	0x2ed
 4563 048e 02       		.uleb128 0x2
 4564 048f 91       		.byte	0x91
 4565 0490 64       		.sleb128 -28
 4566 0491 00       		.byte	0
 4567 0492 00       		.byte	0
 4568 0493 1B       		.uleb128 0x1b
 4569 0494 98070000 		.4byte	.LASF81
 4570 0498 01       		.byte	0x1
 4571 0499 7801     		.2byte	0x178
 4572 049b 00000000 		.4byte	.LFB83
 4573 049f 0C000000 		.4byte	.LFE83-.LFB83
 4574 04a3 01       		.uleb128 0x1
 4575 04a4 9C       		.byte	0x9c
 4576 04a5 1C       		.uleb128 0x1c
 4577 04a6 31060000 		.4byte	.LASF82
 4578 04aa 01       		.byte	0x1
 4579 04ab 7E01     		.2byte	0x17e
 4580 04ad 00000000 		.4byte	.LFB84
 4581 04b1 2C000000 		.4byte	.LFE84-.LFB84
 4582 04b5 01       		.uleb128 0x1
 4583 04b6 9C       		.byte	0x9c
 4584 04b7 18       		.uleb128 0x18
 4585 04b8 80010000 		.4byte	.LASF83
 4586 04bc 01       		.byte	0x1
 4587 04bd 8701     		.2byte	0x187
 4588 04bf 00000000 		.4byte	.LFB85
 4589 04c3 E4010000 		.4byte	.LFE85-.LFB85
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 98


 4590 04c7 01       		.uleb128 0x1
 4591 04c8 9C       		.byte	0x9c
 4592 04c9 04050000 		.4byte	0x504
 4593 04cd 1D       		.uleb128 0x1d
 4594 04ce AC000000 		.4byte	.LBB4
 4595 04d2 52000000 		.4byte	.LBE4-.LBB4
 4596 04d6 EA040000 		.4byte	0x4ea
 4597 04da 1A       		.uleb128 0x1a
 4598 04db 6D657300 		.ascii	"mes\000"
 4599 04df 01       		.byte	0x1
 4600 04e0 9E01     		.2byte	0x19e
 4601 04e2 ED020000 		.4byte	0x2ed
 4602 04e6 02       		.uleb128 0x2
 4603 04e7 91       		.byte	0x91
 4604 04e8 58       		.sleb128 -40
 4605 04e9 00       		.byte	0
 4606 04ea 0C       		.uleb128 0xc
 4607 04eb 0A010000 		.4byte	.LBB5
 4608 04ef 90000000 		.4byte	.LBE5-.LBB5
 4609 04f3 19       		.uleb128 0x19
 4610 04f4 AB070000 		.4byte	.LASF84
 4611 04f8 01       		.byte	0x1
 4612 04f9 A901     		.2byte	0x1a9
 4613 04fb D8000000 		.4byte	0xd8
 4614 04ff 02       		.uleb128 0x2
 4615 0500 91       		.byte	0x91
 4616 0501 68       		.sleb128 -24
 4617 0502 00       		.byte	0
 4618 0503 00       		.byte	0
 4619 0504 1C       		.uleb128 0x1c
 4620 0505 3F020000 		.4byte	.LASF85
 4621 0509 01       		.byte	0x1
 4622 050a B301     		.2byte	0x1b3
 4623 050c 00000000 		.4byte	.LFB86
 4624 0510 78000000 		.4byte	.LFE86-.LFB86
 4625 0514 01       		.uleb128 0x1
 4626 0515 9C       		.byte	0x9c
 4627 0516 1B       		.uleb128 0x1b
 4628 0517 CE060000 		.4byte	.LASF86
 4629 051b 01       		.byte	0x1
 4630 051c CC01     		.2byte	0x1cc
 4631 051e 00000000 		.4byte	.LFB87
 4632 0522 20000000 		.4byte	.LFE87-.LFB87
 4633 0526 01       		.uleb128 0x1
 4634 0527 9C       		.byte	0x9c
 4635 0528 1C       		.uleb128 0x1c
 4636 0529 B6020000 		.4byte	.LASF87
 4637 052d 01       		.byte	0x1
 4638 052e D301     		.2byte	0x1d3
 4639 0530 00000000 		.4byte	.LFB88
 4640 0534 28000000 		.4byte	.LFE88-.LFB88
 4641 0538 01       		.uleb128 0x1
 4642 0539 9C       		.byte	0x9c
 4643 053a 1C       		.uleb128 0x1c
 4644 053b 90000000 		.4byte	.LASF88
 4645 053f 01       		.byte	0x1
 4646 0540 DC01     		.2byte	0x1dc
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 99


 4647 0542 00000000 		.4byte	.LFB89
 4648 0546 0A000000 		.4byte	.LFE89-.LFB89
 4649 054a 01       		.uleb128 0x1
 4650 054b 9C       		.byte	0x9c
 4651 054c 16       		.uleb128 0x16
 4652 054d 4E020000 		.4byte	.LASF89
 4653 0551 01       		.byte	0x1
 4654 0552 E201     		.2byte	0x1e2
 4655 0554 00000000 		.4byte	.LFB90
 4656 0558 40000000 		.4byte	.LFE90-.LFB90
 4657 055c 01       		.uleb128 0x1
 4658 055d 9C       		.byte	0x9c
 4659 055e 16       		.uleb128 0x16
 4660 055f BD010000 		.4byte	.LASF90
 4661 0563 01       		.byte	0x1
 4662 0564 F101     		.2byte	0x1f1
 4663 0566 00000000 		.4byte	.LFB91
 4664 056a 40000000 		.4byte	.LFE91-.LFB91
 4665 056e 01       		.uleb128 0x1
 4666 056f 9C       		.byte	0x9c
 4667 0570 1E       		.uleb128 0x1e
 4668 0571 26000000 		.4byte	.LASF91
 4669 0575 01       		.byte	0x1
 4670 0576 0102     		.2byte	0x201
 4671 0578 00000000 		.4byte	.LFB92
 4672 057c 30020000 		.4byte	.LFE92-.LFB92
 4673 0580 01       		.uleb128 0x1
 4674 0581 9C       		.byte	0x9c
 4675 0582 E1050000 		.4byte	0x5e1
 4676 0586 19       		.uleb128 0x19
 4677 0587 96020000 		.4byte	.LASF92
 4678 058b 01       		.byte	0x1
 4679 058c 0F02     		.2byte	0x20f
 4680 058e C5000000 		.4byte	0xc5
 4681 0592 02       		.uleb128 0x2
 4682 0593 91       		.byte	0x91
 4683 0594 5E       		.sleb128 -34
 4684 0595 19       		.uleb128 0x19
 4685 0596 9E040000 		.4byte	.LASF93
 4686 059a 01       		.byte	0x1
 4687 059b 1002     		.2byte	0x210
 4688 059d C5000000 		.4byte	0xc5
 4689 05a1 02       		.uleb128 0x2
 4690 05a2 91       		.byte	0x91
 4691 05a3 5C       		.sleb128 -36
 4692 05a4 19       		.uleb128 0x19
 4693 05a5 23030000 		.4byte	.LASF94
 4694 05a9 01       		.byte	0x1
 4695 05aa 1102     		.2byte	0x211
 4696 05ac D8000000 		.4byte	0xd8
 4697 05b0 02       		.uleb128 0x2
 4698 05b1 91       		.byte	0x91
 4699 05b2 68       		.sleb128 -24
 4700 05b3 19       		.uleb128 0x19
 4701 05b4 F8070000 		.4byte	.LASF95
 4702 05b8 01       		.byte	0x1
 4703 05b9 1202     		.2byte	0x212
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 100


 4704 05bb D8000000 		.4byte	0xd8
 4705 05bf 02       		.uleb128 0x2
 4706 05c0 91       		.byte	0x91
 4707 05c1 60       		.sleb128 -32
 4708 05c2 19       		.uleb128 0x19
 4709 05c3 91030000 		.4byte	.LASF96
 4710 05c7 01       		.byte	0x1
 4711 05c8 1B02     		.2byte	0x21b
 4712 05ca 68000000 		.4byte	0x68
 4713 05ce 02       		.uleb128 0x2
 4714 05cf 91       		.byte	0x91
 4715 05d0 58       		.sleb128 -40
 4716 05d1 19       		.uleb128 0x19
 4717 05d2 A1070000 		.4byte	.LASF97
 4718 05d6 01       		.byte	0x1
 4719 05d7 1C02     		.2byte	0x21c
 4720 05d9 68000000 		.4byte	0x68
 4721 05dd 02       		.uleb128 0x2
 4722 05de 91       		.byte	0x91
 4723 05df 54       		.sleb128 -44
 4724 05e0 00       		.byte	0
 4725 05e1 1E       		.uleb128 0x1e
 4726 05e2 E2040000 		.4byte	.LASF98
 4727 05e6 01       		.byte	0x1
 4728 05e7 2A02     		.2byte	0x22a
 4729 05e9 00000000 		.4byte	.LFB93
 4730 05ed 50010000 		.4byte	.LFE93-.LFB93
 4731 05f1 01       		.uleb128 0x1
 4732 05f2 9C       		.byte	0x9c
 4733 05f3 23060000 		.4byte	0x623
 4734 05f7 1A       		.uleb128 0x1a
 4735 05f8 6E6C00   		.ascii	"nl\000"
 4736 05fb 01       		.byte	0x1
 4737 05fc 2E02     		.2byte	0x22e
 4738 05fe 95000000 		.4byte	0x95
 4739 0602 02       		.uleb128 0x2
 4740 0603 91       		.byte	0x91
 4741 0604 67       		.sleb128 -25
 4742 0605 1A       		.uleb128 0x1a
 4743 0606 6E7200   		.ascii	"nr\000"
 4744 0609 01       		.byte	0x1
 4745 060a 2F02     		.2byte	0x22f
 4746 060c 95000000 		.4byte	0x95
 4747 0610 02       		.uleb128 0x2
 4748 0611 91       		.byte	0x91
 4749 0612 66       		.sleb128 -26
 4750 0613 1A       		.uleb128 0x1a
 4751 0614 6D696400 		.ascii	"mid\000"
 4752 0618 01       		.byte	0x1
 4753 0619 3002     		.2byte	0x230
 4754 061b 95000000 		.4byte	0x95
 4755 061f 02       		.uleb128 0x2
 4756 0620 91       		.byte	0x91
 4757 0621 65       		.sleb128 -27
 4758 0622 00       		.byte	0
 4759 0623 1E       		.uleb128 0x1e
 4760 0624 05010000 		.4byte	.LASF99
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 101


 4761 0628 01       		.byte	0x1
 4762 0629 4C02     		.2byte	0x24c
 4763 062b 00000000 		.4byte	.LFB94
 4764 062f 50010000 		.4byte	.LFE94-.LFB94
 4765 0633 01       		.uleb128 0x1
 4766 0634 9C       		.byte	0x9c
 4767 0635 65060000 		.4byte	0x665
 4768 0639 1A       		.uleb128 0x1a
 4769 063a 6E6C00   		.ascii	"nl\000"
 4770 063d 01       		.byte	0x1
 4771 063e 5002     		.2byte	0x250
 4772 0640 95000000 		.4byte	0x95
 4773 0644 02       		.uleb128 0x2
 4774 0645 91       		.byte	0x91
 4775 0646 67       		.sleb128 -25
 4776 0647 1A       		.uleb128 0x1a
 4777 0648 6E7200   		.ascii	"nr\000"
 4778 064b 01       		.byte	0x1
 4779 064c 5102     		.2byte	0x251
 4780 064e 95000000 		.4byte	0x95
 4781 0652 02       		.uleb128 0x2
 4782 0653 91       		.byte	0x91
 4783 0654 66       		.sleb128 -26
 4784 0655 1A       		.uleb128 0x1a
 4785 0656 6D696400 		.ascii	"mid\000"
 4786 065a 01       		.byte	0x1
 4787 065b 5202     		.2byte	0x252
 4788 065d 95000000 		.4byte	0x95
 4789 0661 02       		.uleb128 0x2
 4790 0662 91       		.byte	0x91
 4791 0663 65       		.sleb128 -27
 4792 0664 00       		.byte	0
 4793 0665 1E       		.uleb128 0x1e
 4794 0666 FA000000 		.4byte	.LASF100
 4795 066a 01       		.byte	0x1
 4796 066b 6E02     		.2byte	0x26e
 4797 066d 00000000 		.4byte	.LFB95
 4798 0671 B0010000 		.4byte	.LFE95-.LFB95
 4799 0675 01       		.uleb128 0x1
 4800 0676 9C       		.byte	0x9c
 4801 0677 C3060000 		.4byte	0x6c3
 4802 067b 1A       		.uleb128 0x1a
 4803 067c 6E6C00   		.ascii	"nl\000"
 4804 067f 01       		.byte	0x1
 4805 0680 7202     		.2byte	0x272
 4806 0682 95000000 		.4byte	0x95
 4807 0686 02       		.uleb128 0x2
 4808 0687 91       		.byte	0x91
 4809 0688 67       		.sleb128 -25
 4810 0689 1A       		.uleb128 0x1a
 4811 068a 666C00   		.ascii	"fl\000"
 4812 068d 01       		.byte	0x1
 4813 068e 7302     		.2byte	0x273
 4814 0690 95000000 		.4byte	0x95
 4815 0694 02       		.uleb128 0x2
 4816 0695 91       		.byte	0x91
 4817 0696 66       		.sleb128 -26
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 102


 4818 0697 1A       		.uleb128 0x1a
 4819 0698 6E7200   		.ascii	"nr\000"
 4820 069b 01       		.byte	0x1
 4821 069c 7402     		.2byte	0x274
 4822 069e 95000000 		.4byte	0x95
 4823 06a2 02       		.uleb128 0x2
 4824 06a3 91       		.byte	0x91
 4825 06a4 65       		.sleb128 -27
 4826 06a5 1A       		.uleb128 0x1a
 4827 06a6 667200   		.ascii	"fr\000"
 4828 06a9 01       		.byte	0x1
 4829 06aa 7502     		.2byte	0x275
 4830 06ac 95000000 		.4byte	0x95
 4831 06b0 02       		.uleb128 0x2
 4832 06b1 91       		.byte	0x91
 4833 06b2 64       		.sleb128 -28
 4834 06b3 1A       		.uleb128 0x1a
 4835 06b4 6D696400 		.ascii	"mid\000"
 4836 06b8 01       		.byte	0x1
 4837 06b9 7602     		.2byte	0x276
 4838 06bb 95000000 		.4byte	0x95
 4839 06bf 02       		.uleb128 0x2
 4840 06c0 91       		.byte	0x91
 4841 06c1 63       		.sleb128 -29
 4842 06c2 00       		.byte	0
 4843 06c3 1E       		.uleb128 0x1e
 4844 06c4 19030000 		.4byte	.LASF101
 4845 06c8 01       		.byte	0x1
 4846 06c9 9F02     		.2byte	0x29f
 4847 06cb 00000000 		.4byte	.LFB96
 4848 06cf C0000000 		.4byte	.LFE96-.LFB96
 4849 06d3 01       		.uleb128 0x1
 4850 06d4 9C       		.byte	0x9c
 4851 06d5 11070000 		.4byte	0x711
 4852 06d9 0C       		.uleb128 0xc
 4853 06da 0E000000 		.4byte	.LBB6
 4854 06de 8E000000 		.4byte	.LBE6-.LBB6
 4855 06e2 19       		.uleb128 0x19
 4856 06e3 88020000 		.4byte	.LASF102
 4857 06e7 01       		.byte	0x1
 4858 06e8 A802     		.2byte	0x2a8
 4859 06ea D1000000 		.4byte	0xd1
 4860 06ee 02       		.uleb128 0x2
 4861 06ef 91       		.byte	0x91
 4862 06f0 74       		.sleb128 -12
 4863 06f1 19       		.uleb128 0x19
 4864 06f2 CF040000 		.4byte	.LASF103
 4865 06f6 01       		.byte	0x1
 4866 06f7 A902     		.2byte	0x2a9
 4867 06f9 C5000000 		.4byte	0xc5
 4868 06fd 02       		.uleb128 0x2
 4869 06fe 91       		.byte	0x91
 4870 06ff 72       		.sleb128 -14
 4871 0700 19       		.uleb128 0x19
 4872 0701 DC020000 		.4byte	.LASF104
 4873 0705 01       		.byte	0x1
 4874 0706 AE02     		.2byte	0x2ae
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 103


 4875 0708 ED020000 		.4byte	0x2ed
 4876 070c 02       		.uleb128 0x2
 4877 070d 91       		.byte	0x91
 4878 070e 60       		.sleb128 -32
 4879 070f 00       		.byte	0
 4880 0710 00       		.byte	0
 4881 0711 1E       		.uleb128 0x1e
 4882 0712 E7070000 		.4byte	.LASF105
 4883 0716 01       		.byte	0x1
 4884 0717 B502     		.2byte	0x2b5
 4885 0719 00000000 		.4byte	.LFB97
 4886 071d B8000000 		.4byte	.LFE97-.LFB97
 4887 0721 01       		.uleb128 0x1
 4888 0722 9C       		.byte	0x9c
 4889 0723 41070000 		.4byte	0x741
 4890 0727 0C       		.uleb128 0xc
 4891 0728 0E000000 		.4byte	.LBB7
 4892 072c 86000000 		.4byte	.LBE7-.LBB7
 4893 0730 19       		.uleb128 0x19
 4894 0731 C6050000 		.4byte	.LASF106
 4895 0735 01       		.byte	0x1
 4896 0736 B902     		.2byte	0x2b9
 4897 0738 ED020000 		.4byte	0x2ed
 4898 073c 02       		.uleb128 0x2
 4899 073d 91       		.byte	0x91
 4900 073e 68       		.sleb128 -24
 4901 073f 00       		.byte	0
 4902 0740 00       		.byte	0
 4903 0741 18       		.uleb128 0x18
 4904 0742 39060000 		.4byte	.LASF107
 4905 0746 01       		.byte	0x1
 4906 0747 CA02     		.2byte	0x2ca
 4907 0749 00000000 		.4byte	.LFB98
 4908 074d 4A000000 		.4byte	.LFE98-.LFB98
 4909 0751 01       		.uleb128 0x1
 4910 0752 9C       		.byte	0x9c
 4911 0753 67070000 		.4byte	0x767
 4912 0757 1F       		.uleb128 0x1f
 4913 0758 D1020000 		.4byte	.LASF108
 4914 075c 01       		.byte	0x1
 4915 075d CA02     		.2byte	0x2ca
 4916 075f 67070000 		.4byte	0x767
 4917 0763 02       		.uleb128 0x2
 4918 0764 91       		.byte	0x91
 4919 0765 6C       		.sleb128 -20
 4920 0766 00       		.byte	0
 4921 0767 05       		.uleb128 0x5
 4922 0768 04       		.byte	0x4
 4923 0769 95000000 		.4byte	0x95
 4924 076d 20       		.uleb128 0x20
 4925 076e 93070000 		.4byte	.LASF109
 4926 0772 01       		.byte	0x1
 4927 0773 D302     		.2byte	0x2d3
 4928 0775 68000000 		.4byte	0x68
 4929 0779 00000000 		.4byte	.LFB99
 4930 077d 74010000 		.4byte	.LFE99-.LFB99
 4931 0781 01       		.uleb128 0x1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 104


 4932 0782 9C       		.byte	0x9c
 4933 0783 A1070000 		.4byte	0x7a1
 4934 0787 0C       		.uleb128 0xc
 4935 0788 5C000000 		.4byte	.LBB8
 4936 078c E8000000 		.4byte	.LBE8-.LBB8
 4937 0790 19       		.uleb128 0x19
 4938 0791 0D020000 		.4byte	.LASF110
 4939 0795 01       		.byte	0x1
 4940 0796 1903     		.2byte	0x319
 4941 0798 A1070000 		.4byte	0x7a1
 4942 079c 02       		.uleb128 0x2
 4943 079d 91       		.byte	0x91
 4944 079e 70       		.sleb128 -16
 4945 079f 00       		.byte	0
 4946 07a0 00       		.byte	0
 4947 07a1 0E       		.uleb128 0xe
 4948 07a2 95000000 		.4byte	0x95
 4949 07a6 B1070000 		.4byte	0x7b1
 4950 07aa 0F       		.uleb128 0xf
 4951 07ab 76000000 		.4byte	0x76
 4952 07af 04       		.byte	0x4
 4953 07b0 00       		.byte	0
 4954 07b1 18       		.uleb128 0x18
 4955 07b2 12060000 		.4byte	.LASF111
 4956 07b6 01       		.byte	0x1
 4957 07b7 5903     		.2byte	0x359
 4958 07b9 00000000 		.4byte	.LFB100
 4959 07bd 68000000 		.4byte	.LFE100-.LFB100
 4960 07c1 01       		.uleb128 0x1
 4961 07c2 9C       		.byte	0x9c
 4962 07c3 EE070000 		.4byte	0x7ee
 4963 07c7 21       		.uleb128 0x21
 4964 07c8 7300     		.ascii	"s\000"
 4965 07ca 01       		.byte	0x1
 4966 07cb 5903     		.2byte	0x359
 4967 07cd 7D000000 		.4byte	0x7d
 4968 07d1 02       		.uleb128 0x2
 4969 07d2 91       		.byte	0x91
 4970 07d3 6C       		.sleb128 -20
 4971 07d4 0C       		.uleb128 0xc
 4972 07d5 10000000 		.4byte	.LBB9
 4973 07d9 48000000 		.4byte	.LBE9-.LBB9
 4974 07dd 1A       		.uleb128 0x1a
 4975 07de 636E7400 		.ascii	"cnt\000"
 4976 07e2 01       		.byte	0x1
 4977 07e3 6003     		.2byte	0x360
 4978 07e5 AD000000 		.4byte	0xad
 4979 07e9 02       		.uleb128 0x2
 4980 07ea 91       		.byte	0x91
 4981 07eb 74       		.sleb128 -12
 4982 07ec 00       		.byte	0
 4983 07ed 00       		.byte	0
 4984 07ee 18       		.uleb128 0x18
 4985 07ef 4D070000 		.4byte	.LASF112
 4986 07f3 01       		.byte	0x1
 4987 07f4 6F03     		.2byte	0x36f
 4988 07f6 00000000 		.4byte	.LFB101
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 105


 4989 07fa 50000000 		.4byte	.LFE101-.LFB101
 4990 07fe 01       		.uleb128 0x1
 4991 07ff 9C       		.byte	0x9c
 4992 0800 2B080000 		.4byte	0x82b
 4993 0804 21       		.uleb128 0x21
 4994 0805 6300     		.ascii	"c\000"
 4995 0807 01       		.byte	0x1
 4996 0808 6F03     		.2byte	0x36f
 4997 080a 83000000 		.4byte	0x83
 4998 080e 02       		.uleb128 0x2
 4999 080f 91       		.byte	0x91
 5000 0810 6F       		.sleb128 -17
 5001 0811 0C       		.uleb128 0xc
 5002 0812 12000000 		.4byte	.LBB10
 5003 0816 2E000000 		.4byte	.LBE10-.LBB10
 5004 081a 1A       		.uleb128 0x1a
 5005 081b 636E7400 		.ascii	"cnt\000"
 5006 081f 01       		.byte	0x1
 5007 0820 7303     		.2byte	0x373
 5008 0822 AD000000 		.4byte	0xad
 5009 0826 02       		.uleb128 0x2
 5010 0827 91       		.byte	0x91
 5011 0828 74       		.sleb128 -12
 5012 0829 00       		.byte	0
 5013 082a 00       		.byte	0
 5014 082b 1E       		.uleb128 0x1e
 5015 082c E7020000 		.4byte	.LASF113
 5016 0830 01       		.byte	0x1
 5017 0831 8003     		.2byte	0x380
 5018 0833 00000000 		.4byte	.LFB102
 5019 0837 3A000000 		.4byte	.LFE102-.LFB102
 5020 083b 01       		.uleb128 0x1
 5021 083c 9C       		.byte	0x9c
 5022 083d 4F080000 		.4byte	0x84f
 5023 0841 1A       		.uleb128 0x1a
 5024 0842 6300     		.ascii	"c\000"
 5025 0844 01       		.byte	0x1
 5026 0845 8203     		.2byte	0x382
 5027 0847 95000000 		.4byte	0x95
 5028 084b 02       		.uleb128 0x2
 5029 084c 91       		.byte	0x91
 5030 084d 77       		.sleb128 -9
 5031 084e 00       		.byte	0
 5032 084f 22       		.uleb128 0x22
 5033 0850 B9050000 		.4byte	.LASF114
 5034 0854 06       		.byte	0x6
 5035 0855 9606     		.2byte	0x696
 5036 0857 5B080000 		.4byte	0x85b
 5037 085b 23       		.uleb128 0x23
 5038 085c 8A000000 		.4byte	0x8a
 5039 0860 24       		.uleb128 0x24
 5040 0861 747300   		.ascii	"ts\000"
 5041 0864 05       		.byte	0x5
 5042 0865 10       		.byte	0x10
 5043 0866 95000000 		.4byte	0x95
 5044 086a 05       		.uleb128 0x5
 5045 086b 03       		.byte	0x3
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 106


 5046 086c 00000000 		.4byte	ts
 5047 0870 25       		.uleb128 0x25
 5048 0871 DB060000 		.4byte	.LASF115
 5049 0875 05       		.byte	0x5
 5050 0876 11       		.byte	0x11
 5051 0877 A1000000 		.4byte	0xa1
 5052 087b 05       		.uleb128 0x5
 5053 087c 03       		.byte	0x3
 5054 087d 00000000 		.4byte	ts_enc
 5055 0881 25       		.uleb128 0x25
 5056 0882 D2050000 		.4byte	.LASF116
 5057 0886 05       		.byte	0x5
 5058 0887 12       		.byte	0x12
 5059 0888 A1000000 		.4byte	0xa1
 5060 088c 05       		.uleb128 0x5
 5061 088d 03       		.byte	0x3
 5062 088e 00000000 		.4byte	ts_update
 5063 0892 25       		.uleb128 0x25
 5064 0893 A9040000 		.4byte	.LASF117
 5065 0897 05       		.byte	0x5
 5066 0898 13       		.byte	0x13
 5067 0899 A1000000 		.4byte	0xa1
 5068 089d 05       		.uleb128 0x5
 5069 089e 03       		.byte	0x3
 5070 089f 00000000 		.4byte	ts_speed
 5071 08a3 25       		.uleb128 0x25
 5072 08a4 0E030000 		.4byte	.LASF118
 5073 08a8 05       		.byte	0x5
 5074 08a9 14       		.byte	0x14
 5075 08aa A1000000 		.4byte	0xa1
 5076 08ae 05       		.uleb128 0x5
 5077 08af 03       		.byte	0x3
 5078 08b0 00000000 		.4byte	ts_display
 5079 08b4 25       		.uleb128 0x25
 5080 08b5 A0020000 		.4byte	.LASF119
 5081 08b9 05       		.byte	0x5
 5082 08ba 16       		.byte	0x16
 5083 08bb 95000000 		.4byte	0x95
 5084 08bf 05       		.uleb128 0x5
 5085 08c0 03       		.byte	0x3
 5086 08c1 00000000 		.4byte	flag_ts_enc
 5087 08c5 25       		.uleb128 0x25
 5088 08c6 79020000 		.4byte	.LASF120
 5089 08ca 05       		.byte	0x5
 5090 08cb 17       		.byte	0x17
 5091 08cc 95000000 		.4byte	0x95
 5092 08d0 05       		.uleb128 0x5
 5093 08d1 03       		.byte	0x3
 5094 08d2 00000000 		.4byte	flag_ts_update
 5095 08d6 25       		.uleb128 0x25
 5096 08d7 3D050000 		.4byte	.LASF121
 5097 08db 05       		.byte	0x5
 5098 08dc 18       		.byte	0x18
 5099 08dd 95000000 		.4byte	0x95
 5100 08e1 05       		.uleb128 0x5
 5101 08e2 03       		.byte	0x3
 5102 08e3 00000000 		.4byte	flag_ts_speed
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 107


 5103 08e7 25       		.uleb128 0x25
 5104 08e8 EC060000 		.4byte	.LASF122
 5105 08ec 05       		.byte	0x5
 5106 08ed 19       		.byte	0x19
 5107 08ee 95000000 		.4byte	0x95
 5108 08f2 05       		.uleb128 0x5
 5109 08f3 03       		.byte	0x3
 5110 08f4 00000000 		.4byte	flag_ts_display
 5111 08f8 25       		.uleb128 0x25
 5112 08f9 68050000 		.4byte	.LASF123
 5113 08fd 05       		.byte	0x5
 5114 08fe 1C       		.byte	0x1c
 5115 08ff 95000000 		.4byte	0x95
 5116 0903 05       		.uleb128 0x5
 5117 0904 03       		.byte	0x3
 5118 0905 00000000 		.4byte	flag_rx
 5119 0909 25       		.uleb128 0x25
 5120 090a 01020000 		.4byte	.LASF124
 5121 090e 05       		.byte	0x5
 5122 090f 1D       		.byte	0x1d
 5123 0910 95000000 		.4byte	0x95
 5124 0914 05       		.uleb128 0x5
 5125 0915 03       		.byte	0x3
 5126 0916 00000000 		.4byte	flag_packet
 5127 091a 25       		.uleb128 0x25
 5128 091b 05080000 		.4byte	.LASF125
 5129 091f 05       		.byte	0x5
 5130 0920 1E       		.byte	0x1e
 5131 0921 95000000 		.4byte	0x95
 5132 0925 05       		.uleb128 0x5
 5133 0926 03       		.byte	0x3
 5134 0927 00000000 		.4byte	flag_KB_string
 5135 092b 25       		.uleb128 0x25
 5136 092c 4B050000 		.4byte	.LASF126
 5137 0930 05       		.byte	0x5
 5138 0931 20       		.byte	0x20
 5139 0932 95000000 		.4byte	0x95
 5140 0936 05       		.uleb128 0x5
 5141 0937 03       		.byte	0x3
 5142 0938 00000000 		.4byte	dataready_flag
 5143 093c 25       		.uleb128 0x25
 5144 093d 23010000 		.4byte	.LASF127
 5145 0941 05       		.byte	0x5
 5146 0942 22       		.byte	0x22
 5147 0943 95000000 		.4byte	0x95
 5148 0947 05       		.uleb128 0x5
 5149 0948 03       		.byte	0x3
 5150 0949 00000000 		.4byte	flag_rf_transmission_active
 5151 094d 25       		.uleb128 0x25
 5152 094e 3F010000 		.4byte	.LASF128
 5153 0952 05       		.byte	0x5
 5154 0953 23       		.byte	0x23
 5155 0954 95000000 		.4byte	0x95
 5156 0958 05       		.uleb128 0x5
 5157 0959 03       		.byte	0x3
 5158 095a 00000000 		.4byte	flag_print_rf
 5159 095e 25       		.uleb128 0x25
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 108


 5160 095f F9040000 		.4byte	.LASF129
 5161 0963 05       		.byte	0x5
 5162 0964 25       		.byte	0x25
 5163 0965 95000000 		.4byte	0x95
 5164 0969 05       		.uleb128 0x5
 5165 096a 03       		.byte	0x3
 5166 096b 00000000 		.4byte	flag_receive_ADC
 5167 096f 25       		.uleb128 0x25
 5168 0970 7A050000 		.4byte	.LASF130
 5169 0974 05       		.byte	0x5
 5170 0975 26       		.byte	0x26
 5171 0976 C5000000 		.4byte	0xc5
 5172 097a 05       		.uleb128 0x5
 5173 097b 03       		.byte	0x3
 5174 097c 00000000 		.4byte	adc_result
 5175 0980 25       		.uleb128 0x25
 5176 0981 00000000 		.4byte	.LASF131
 5177 0985 05       		.byte	0x5
 5178 0986 28       		.byte	0x28
 5179 0987 95000000 		.4byte	0x95
 5180 098b 05       		.uleb128 0x5
 5181 098c 03       		.byte	0x3
 5182 098d 00000000 		.4byte	direction
 5183 0991 25       		.uleb128 0x25
 5184 0992 92040000 		.4byte	.LASF132
 5185 0996 05       		.byte	0x5
 5186 0997 2B       		.byte	0x2b
 5187 0998 95000000 		.4byte	0x95
 5188 099c 05       		.uleb128 0x5
 5189 099d 03       		.byte	0x3
 5190 099e 00000000 		.4byte	BIN_ENABLED
 5191 09a2 25       		.uleb128 0x25
 5192 09a3 9B030000 		.4byte	.LASF133
 5193 09a7 05       		.byte	0x5
 5194 09a8 2D       		.byte	0x2d
 5195 09a9 95000000 		.4byte	0x95
 5196 09ad 05       		.uleb128 0x5
 5197 09ae 03       		.byte	0x3
 5198 09af 00000000 		.4byte	BT_ENABLED
 5199 09b3 25       		.uleb128 0x25
 5200 09b4 85050000 		.4byte	.LASF134
 5201 09b8 05       		.byte	0x5
 5202 09b9 32       		.byte	0x32
 5203 09ba 95000000 		.4byte	0x95
 5204 09be 05       		.uleb128 0x5
 5205 09bf 03       		.byte	0x3
 5206 09c0 00000000 		.4byte	flag_calc_wheelspeed
 5207 09c4 25       		.uleb128 0x25
 5208 09c5 E2000000 		.4byte	.LASF135
 5209 09c9 05       		.byte	0x5
 5210 09ca 33       		.byte	0x33
 5211 09cb C5000000 		.4byte	0xc5
 5212 09cf 05       		.uleb128 0x5
 5213 09d0 03       		.byte	0x3
 5214 09d1 00000000 		.4byte	quad_count1
 5215 09d5 25       		.uleb128 0x25
 5216 09d6 EE000000 		.4byte	.LASF136
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 109


 5217 09da 05       		.byte	0x5
 5218 09db 34       		.byte	0x34
 5219 09dc C5000000 		.4byte	0xc5
 5220 09e0 05       		.uleb128 0x5
 5221 09e1 03       		.byte	0x3
 5222 09e2 00000000 		.4byte	quad_count2
 5223 09e6 25       		.uleb128 0x25
 5224 09e7 2B070000 		.4byte	.LASF137
 5225 09eb 05       		.byte	0x5
 5226 09ec 35       		.byte	0x35
 5227 09ed C5000000 		.4byte	0xc5
 5228 09f1 05       		.uleb128 0x5
 5229 09f2 03       		.byte	0x3
 5230 09f3 00000000 		.4byte	last_quad_count1
 5231 09f7 25       		.uleb128 0x25
 5232 09f8 3C070000 		.4byte	.LASF138
 5233 09fc 05       		.byte	0x5
 5234 09fd 36       		.byte	0x36
 5235 09fe C5000000 		.4byte	0xc5
 5236 0a02 05       		.uleb128 0x5
 5237 0a03 03       		.byte	0x3
 5238 0a04 00000000 		.4byte	last_quad_count2
 5239 0a08 25       		.uleb128 0x25
 5240 0a09 10000000 		.4byte	.LASF139
 5241 0a0d 05       		.byte	0x5
 5242 0a0e 37       		.byte	0x37
 5243 0a0f C5000000 		.4byte	0xc5
 5244 0a13 05       		.uleb128 0x5
 5245 0a14 03       		.byte	0x3
 5246 0a15 00000000 		.4byte	quad_diff1
 5247 0a19 25       		.uleb128 0x25
 5248 0a1a 1B000000 		.4byte	.LASF140
 5249 0a1e 05       		.byte	0x5
 5250 0a1f 38       		.byte	0x38
 5251 0a20 C5000000 		.4byte	0xc5
 5252 0a24 05       		.uleb128 0x5
 5253 0a25 03       		.byte	0x3
 5254 0a26 00000000 		.4byte	quad_diff2
 5255 0a2a 25       		.uleb128 0x25
 5256 0a2b 44000000 		.4byte	.LASF141
 5257 0a2f 05       		.byte	0x5
 5258 0a30 3B       		.byte	0x3b
 5259 0a31 C5000000 		.4byte	0xc5
 5260 0a35 05       		.uleb128 0x5
 5261 0a36 03       		.byte	0x3
 5262 0a37 00000000 		.4byte	start_turn_count
 5263 0a3b 25       		.uleb128 0x25
 5264 0a3c 2D050000 		.4byte	.LASF142
 5265 0a40 05       		.byte	0x5
 5266 0a41 3E       		.byte	0x3e
 5267 0a42 C5000000 		.4byte	0xc5
 5268 0a46 05       		.uleb128 0x5
 5269 0a47 03       		.byte	0x3
 5270 0a48 00000000 		.4byte	left_duty_cycle
 5271 0a4c 25       		.uleb128 0x25
 5272 0a4d BD070000 		.4byte	.LASF143
 5273 0a51 05       		.byte	0x5
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 110


 5274 0a52 3F       		.byte	0x3f
 5275 0a53 C5000000 		.4byte	0xc5
 5276 0a57 05       		.uleb128 0x5
 5277 0a58 03       		.byte	0x3
 5278 0a59 00000000 		.4byte	right_duty_cycle
 5279 0a5d 25       		.uleb128 0x25
 5280 0a5e E5050000 		.4byte	.LASF144
 5281 0a62 05       		.byte	0x5
 5282 0a63 42       		.byte	0x42
 5283 0a64 C5000000 		.4byte	0xc5
 5284 0a68 05       		.uleb128 0x5
 5285 0a69 03       		.byte	0x3
 5286 0a6a 00000000 		.4byte	leftSpeedLimit
 5287 0a6e 25       		.uleb128 0x25
 5288 0a6f 3D030000 		.4byte	.LASF145
 5289 0a73 05       		.byte	0x5
 5290 0a74 43       		.byte	0x43
 5291 0a75 C5000000 		.4byte	0xc5
 5292 0a79 05       		.uleb128 0x5
 5293 0a7a 03       		.byte	0x3
 5294 0a7b 00000000 		.4byte	rightSpeedLimit
 5295 0a7f 25       		.uleb128 0x25
 5296 0a80 56060000 		.4byte	.LASF146
 5297 0a84 05       		.byte	0x5
 5298 0a85 46       		.byte	0x46
 5299 0a86 C5000000 		.4byte	0xc5
 5300 0a8a 05       		.uleb128 0x5
 5301 0a8b 03       		.byte	0x3
 5302 0a8c 00000000 		.4byte	target_distance_cm
 5303 0a90 25       		.uleb128 0x25
 5304 0a91 07060000 		.4byte	.LASF147
 5305 0a95 05       		.byte	0x5
 5306 0a96 48       		.byte	0x48
 5307 0a97 C5000000 		.4byte	0xc5
 5308 0a9b 05       		.uleb128 0x5
 5309 0a9c 03       		.byte	0x3
 5310 0a9d 00000000 		.4byte	accum_dist
 5311 0aa1 25       		.uleb128 0x25
 5312 0aa2 9D000000 		.4byte	.LASF148
 5313 0aa6 05       		.byte	0x5
 5314 0aa7 49       		.byte	0x49
 5315 0aa8 C5000000 		.4byte	0xc5
 5316 0aac 05       		.uleb128 0x5
 5317 0aad 03       		.byte	0x3
 5318 0aae 00000000 		.4byte	target_distance_quad
 5319 0ab2 25       		.uleb128 0x25
 5320 0ab3 4A060000 		.4byte	.LASF149
 5321 0ab7 05       		.byte	0x5
 5322 0ab8 4A       		.byte	0x4a
 5323 0ab9 D1000000 		.4byte	0xd1
 5324 0abd 05       		.uleb128 0x5
 5325 0abe 03       		.byte	0x3
 5326 0abf 00000000 		.4byte	quad_per_cm
 5327 0ac3 25       		.uleb128 0x25
 5328 0ac4 AC030000 		.4byte	.LASF150
 5329 0ac8 05       		.byte	0x5
 5330 0ac9 4D       		.byte	0x4d
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 111


 5331 0aca 95000000 		.4byte	0x95
 5332 0ace 05       		.uleb128 0x5
 5333 0acf 03       		.byte	0x3
 5334 0ad0 00000000 		.4byte	initial_pos_valid
 5335 0ad4 25       		.uleb128 0x25
 5336 0ad5 26080000 		.4byte	.LASF151
 5337 0ad9 05       		.byte	0x5
 5338 0ada 4E       		.byte	0x4e
 5339 0adb C5000000 		.4byte	0xc5
 5340 0adf 05       		.uleb128 0x5
 5341 0ae0 03       		.byte	0x3
 5342 0ae1 00000000 		.4byte	initial_x_pos
 5343 0ae5 25       		.uleb128 0x25
 5344 0ae6 5A050000 		.4byte	.LASF152
 5345 0aea 05       		.byte	0x5
 5346 0aeb 4F       		.byte	0x4f
 5347 0aec C5000000 		.4byte	0xc5
 5348 0af0 05       		.uleb128 0x5
 5349 0af1 03       		.byte	0x3
 5350 0af2 00000000 		.4byte	initial_y_pos
 5351 0af6 25       		.uleb128 0x25
 5352 0af7 E2060000 		.4byte	.LASF153
 5353 0afb 05       		.byte	0x5
 5354 0afc 52       		.byte	0x52
 5355 0afd 95000000 		.4byte	0x95
 5356 0b01 05       		.uleb128 0x5
 5357 0b02 03       		.byte	0x3
 5358 0b03 00000000 		.4byte	brakeFlag
 5359 0b07 25       		.uleb128 0x25
 5360 0b08 66020000 		.4byte	.LASF154
 5361 0b0c 05       		.byte	0x5
 5362 0b0d 53       		.byte	0x53
 5363 0b0e 95000000 		.4byte	0x95
 5364 0b12 05       		.uleb128 0x5
 5365 0b13 03       		.byte	0x3
 5366 0b14 00000000 		.4byte	portOpen
 5367 0b18 25       		.uleb128 0x25
 5368 0b19 38000000 		.4byte	.LASF155
 5369 0b1d 05       		.byte	0x5
 5370 0b1e 56       		.byte	0x56
 5371 0b1f C5000000 		.4byte	0xc5
 5372 0b23 05       		.uleb128 0x5
 5373 0b24 03       		.byte	0x3
 5374 0b25 00000000 		.4byte	prevVoltage
 5375 0b29 25       		.uleb128 0x25
 5376 0b2a BB000000 		.4byte	.LASF156
 5377 0b2e 05       		.byte	0x5
 5378 0b2f 57       		.byte	0x57
 5379 0b30 C5000000 		.4byte	0xc5
 5380 0b34 05       		.uleb128 0x5
 5381 0b35 03       		.byte	0x3
 5382 0b36 00000000 		.4byte	prevVoltage2
 5383 0b3a 0E       		.uleb128 0xe
 5384 0b3b 83000000 		.4byte	0x83
 5385 0b3f 4A0B0000 		.4byte	0xb4a
 5386 0b43 0F       		.uleb128 0xf
 5387 0b44 76000000 		.4byte	0x76
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 112


 5388 0b48 3F       		.byte	0x3f
 5389 0b49 00       		.byte	0
 5390 0b4a 25       		.uleb128 0x25
 5391 0b4b 1D070000 		.4byte	.LASF157
 5392 0b4f 05       		.byte	0x5
 5393 0b50 5D       		.byte	0x5d
 5394 0b51 3A0B0000 		.4byte	0xb3a
 5395 0b55 05       		.uleb128 0x5
 5396 0b56 03       		.byte	0x3
 5397 0b57 00000000 		.4byte	displaystring
 5398 0b5b 25       		.uleb128 0x25
 5399 0b5c C9060000 		.4byte	.LASF158
 5400 0b60 05       		.byte	0x5
 5401 0b61 5E       		.byte	0x5e
 5402 0b62 3A0B0000 		.4byte	0xb3a
 5403 0b66 05       		.uleb128 0x5
 5404 0b67 03       		.byte	0x3
 5405 0b68 00000000 		.4byte	line
 5406 0b6c 25       		.uleb128 0x25
 5407 0b6d B5060000 		.4byte	.LASF159
 5408 0b71 05       		.byte	0x5
 5409 0b72 5E       		.byte	0x5e
 5410 0b73 3A0B0000 		.4byte	0xb3a
 5411 0b77 05       		.uleb128 0x5
 5412 0b78 03       		.byte	0x3
 5413 0b79 00000000 		.4byte	entry
 5414 0b7d 0E       		.uleb128 0xe
 5415 0b7e 95000000 		.4byte	0x95
 5416 0b82 8D0B0000 		.4byte	0xb8d
 5417 0b86 0F       		.uleb128 0xf
 5418 0b87 76000000 		.4byte	0x76
 5419 0b8b 3F       		.byte	0x3f
 5420 0b8c 00       		.byte	0
 5421 0b8d 25       		.uleb128 0x25
 5422 0b8e 99010000 		.4byte	.LASF160
 5423 0b92 05       		.byte	0x5
 5424 0b93 5F       		.byte	0x5f
 5425 0b94 7D0B0000 		.4byte	0xb7d
 5426 0b98 05       		.uleb128 0x5
 5427 0b99 03       		.byte	0x3
 5428 0b9a 00000000 		.4byte	usbBuffer
 5429 0b9e 25       		.uleb128 0x25
 5430 0b9f CC030000 		.4byte	.LASF161
 5431 0ba3 05       		.byte	0x5
 5432 0ba4 74       		.byte	0x74
 5433 0ba5 4E010000 		.4byte	0x14e
 5434 0ba9 05       		.uleb128 0x5
 5435 0baa 03       		.byte	0x3
 5436 0bab 00000000 		.4byte	buffer_state
 5437 0baf 25       		.uleb128 0x25
 5438 0bb0 7D000000 		.4byte	.LASF162
 5439 0bb4 05       		.byte	0x5
 5440 0bb5 75       		.byte	0x75
 5441 0bb6 4E010000 		.4byte	0x14e
 5442 0bba 05       		.uleb128 0x5
 5443 0bbb 03       		.byte	0x3
 5444 0bbc 00000000 		.4byte	system_state
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 113


 5445 0bc0 25       		.uleb128 0x25
 5446 0bc1 BD020000 		.4byte	.LASF163
 5447 0bc5 05       		.byte	0x5
 5448 0bc6 77       		.byte	0x77
 5449 0bc7 E6000000 		.4byte	0xe6
 5450 0bcb 05       		.uleb128 0x5
 5451 0bcc 03       		.byte	0x3
 5452 0bcd 00000000 		.4byte	prev_movement_state
 5453 0bd1 25       		.uleb128 0x25
 5454 0bd2 4D010000 		.4byte	.LASF164
 5455 0bd6 05       		.byte	0x5
 5456 0bd7 78       		.byte	0x78
 5457 0bd8 E6000000 		.4byte	0xe6
 5458 0bdc 05       		.uleb128 0x5
 5459 0bdd 03       		.byte	0x3
 5460 0bde 00000000 		.4byte	movement_state
 5461 0be2 25       		.uleb128 0x25
 5462 0be3 62000000 		.4byte	.LASF165
 5463 0be7 05       		.byte	0x5
 5464 0be8 79       		.byte	0x79
 5465 0be9 1D010000 		.4byte	0x11d
 5466 0bed 05       		.uleb128 0x5
 5467 0bee 03       		.byte	0x3
 5468 0bef 00000000 		.4byte	track_mode
 5469 0bf3 25       		.uleb128 0x25
 5470 0bf4 AC020000 		.4byte	.LASF166
 5471 0bf8 05       		.byte	0x5
 5472 0bf9 7B       		.byte	0x7b
 5473 0bfa 95000000 		.4byte	0x95
 5474 0bfe 05       		.uleb128 0x5
 5475 0bff 03       		.byte	0x3
 5476 0c00 00000000 		.4byte	byteCount
 5477 0c04 0E       		.uleb128 0xe
 5478 0c05 83000000 		.4byte	0x83
 5479 0c09 140C0000 		.4byte	0xc14
 5480 0c0d 0F       		.uleb128 0xf
 5481 0c0e 76000000 		.4byte	0x76
 5482 0c12 01       		.byte	0x1
 5483 0c13 00       		.byte	0
 5484 0c14 25       		.uleb128 0x25
 5485 0c15 98060000 		.4byte	.LASF167
 5486 0c19 05       		.byte	0x5
 5487 0c1a 7C       		.byte	0x7c
 5488 0c1b 040C0000 		.4byte	0xc04
 5489 0c1f 05       		.uleb128 0x5
 5490 0c20 03       		.byte	0x3
 5491 0c21 00000000 		.4byte	packet
 5492 0c25 25       		.uleb128 0x25
 5493 0c26 10010000 		.4byte	.LASF168
 5494 0c2a 05       		.byte	0x5
 5495 0c2b 80       		.byte	0x80
 5496 0c2c D8000000 		.4byte	0xd8
 5497 0c30 05       		.uleb128 0x5
 5498 0c31 03       		.byte	0x3
 5499 0c32 00000000 		.4byte	speed
 5500 0c36 00       		.byte	0
 5501              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 114


 5502              	.Ldebug_abbrev0:
 5503 0000 01       		.uleb128 0x1
 5504 0001 11       		.uleb128 0x11
 5505 0002 01       		.byte	0x1
 5506 0003 25       		.uleb128 0x25
 5507 0004 0E       		.uleb128 0xe
 5508 0005 13       		.uleb128 0x13
 5509 0006 0B       		.uleb128 0xb
 5510 0007 03       		.uleb128 0x3
 5511 0008 0E       		.uleb128 0xe
 5512 0009 1B       		.uleb128 0x1b
 5513 000a 0E       		.uleb128 0xe
 5514 000b 55       		.uleb128 0x55
 5515 000c 17       		.uleb128 0x17
 5516 000d 11       		.uleb128 0x11
 5517 000e 01       		.uleb128 0x1
 5518 000f 10       		.uleb128 0x10
 5519 0010 17       		.uleb128 0x17
 5520 0011 00       		.byte	0
 5521 0012 00       		.byte	0
 5522 0013 02       		.uleb128 0x2
 5523 0014 24       		.uleb128 0x24
 5524 0015 00       		.byte	0
 5525 0016 0B       		.uleb128 0xb
 5526 0017 0B       		.uleb128 0xb
 5527 0018 3E       		.uleb128 0x3e
 5528 0019 0B       		.uleb128 0xb
 5529 001a 03       		.uleb128 0x3
 5530 001b 0E       		.uleb128 0xe
 5531 001c 00       		.byte	0
 5532 001d 00       		.byte	0
 5533 001e 03       		.uleb128 0x3
 5534 001f 16       		.uleb128 0x16
 5535 0020 00       		.byte	0
 5536 0021 03       		.uleb128 0x3
 5537 0022 0E       		.uleb128 0xe
 5538 0023 3A       		.uleb128 0x3a
 5539 0024 0B       		.uleb128 0xb
 5540 0025 3B       		.uleb128 0x3b
 5541 0026 0B       		.uleb128 0xb
 5542 0027 49       		.uleb128 0x49
 5543 0028 13       		.uleb128 0x13
 5544 0029 00       		.byte	0
 5545 002a 00       		.byte	0
 5546 002b 04       		.uleb128 0x4
 5547 002c 24       		.uleb128 0x24
 5548 002d 00       		.byte	0
 5549 002e 0B       		.uleb128 0xb
 5550 002f 0B       		.uleb128 0xb
 5551 0030 3E       		.uleb128 0x3e
 5552 0031 0B       		.uleb128 0xb
 5553 0032 03       		.uleb128 0x3
 5554 0033 08       		.uleb128 0x8
 5555 0034 00       		.byte	0
 5556 0035 00       		.byte	0
 5557 0036 05       		.uleb128 0x5
 5558 0037 0F       		.uleb128 0xf
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 115


 5559 0038 00       		.byte	0
 5560 0039 0B       		.uleb128 0xb
 5561 003a 0B       		.uleb128 0xb
 5562 003b 49       		.uleb128 0x49
 5563 003c 13       		.uleb128 0x13
 5564 003d 00       		.byte	0
 5565 003e 00       		.byte	0
 5566 003f 06       		.uleb128 0x6
 5567 0040 16       		.uleb128 0x16
 5568 0041 00       		.byte	0
 5569 0042 03       		.uleb128 0x3
 5570 0043 0E       		.uleb128 0xe
 5571 0044 3A       		.uleb128 0x3a
 5572 0045 0B       		.uleb128 0xb
 5573 0046 3B       		.uleb128 0x3b
 5574 0047 05       		.uleb128 0x5
 5575 0048 49       		.uleb128 0x49
 5576 0049 13       		.uleb128 0x13
 5577 004a 00       		.byte	0
 5578 004b 00       		.byte	0
 5579 004c 07       		.uleb128 0x7
 5580 004d 04       		.uleb128 0x4
 5581 004e 01       		.byte	0x1
 5582 004f 03       		.uleb128 0x3
 5583 0050 0E       		.uleb128 0xe
 5584 0051 0B       		.uleb128 0xb
 5585 0052 0B       		.uleb128 0xb
 5586 0053 3A       		.uleb128 0x3a
 5587 0054 0B       		.uleb128 0xb
 5588 0055 3B       		.uleb128 0x3b
 5589 0056 0B       		.uleb128 0xb
 5590 0057 01       		.uleb128 0x1
 5591 0058 13       		.uleb128 0x13
 5592 0059 00       		.byte	0
 5593 005a 00       		.byte	0
 5594 005b 08       		.uleb128 0x8
 5595 005c 28       		.uleb128 0x28
 5596 005d 00       		.byte	0
 5597 005e 03       		.uleb128 0x3
 5598 005f 0E       		.uleb128 0xe
 5599 0060 1C       		.uleb128 0x1c
 5600 0061 0D       		.uleb128 0xd
 5601 0062 00       		.byte	0
 5602 0063 00       		.byte	0
 5603 0064 09       		.uleb128 0x9
 5604 0065 13       		.uleb128 0x13
 5605 0066 01       		.byte	0x1
 5606 0067 03       		.uleb128 0x3
 5607 0068 0E       		.uleb128 0xe
 5608 0069 0B       		.uleb128 0xb
 5609 006a 0B       		.uleb128 0xb
 5610 006b 3A       		.uleb128 0x3a
 5611 006c 0B       		.uleb128 0xb
 5612 006d 3B       		.uleb128 0x3b
 5613 006e 0B       		.uleb128 0xb
 5614 006f 01       		.uleb128 0x1
 5615 0070 13       		.uleb128 0x13
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 116


 5616 0071 00       		.byte	0
 5617 0072 00       		.byte	0
 5618 0073 0A       		.uleb128 0xa
 5619 0074 0D       		.uleb128 0xd
 5620 0075 00       		.byte	0
 5621 0076 03       		.uleb128 0x3
 5622 0077 0E       		.uleb128 0xe
 5623 0078 3A       		.uleb128 0x3a
 5624 0079 0B       		.uleb128 0xb
 5625 007a 3B       		.uleb128 0x3b
 5626 007b 0B       		.uleb128 0xb
 5627 007c 49       		.uleb128 0x49
 5628 007d 13       		.uleb128 0x13
 5629 007e 38       		.uleb128 0x38
 5630 007f 0B       		.uleb128 0xb
 5631 0080 00       		.byte	0
 5632 0081 00       		.byte	0
 5633 0082 0B       		.uleb128 0xb
 5634 0083 2E       		.uleb128 0x2e
 5635 0084 01       		.byte	0x1
 5636 0085 3F       		.uleb128 0x3f
 5637 0086 19       		.uleb128 0x19
 5638 0087 03       		.uleb128 0x3
 5639 0088 0E       		.uleb128 0xe
 5640 0089 3A       		.uleb128 0x3a
 5641 008a 0B       		.uleb128 0xb
 5642 008b 3B       		.uleb128 0x3b
 5643 008c 0B       		.uleb128 0xb
 5644 008d 11       		.uleb128 0x11
 5645 008e 01       		.uleb128 0x1
 5646 008f 12       		.uleb128 0x12
 5647 0090 06       		.uleb128 0x6
 5648 0091 40       		.uleb128 0x40
 5649 0092 18       		.uleb128 0x18
 5650 0093 9742     		.uleb128 0x2117
 5651 0095 19       		.uleb128 0x19
 5652 0096 01       		.uleb128 0x1
 5653 0097 13       		.uleb128 0x13
 5654 0098 00       		.byte	0
 5655 0099 00       		.byte	0
 5656 009a 0C       		.uleb128 0xc
 5657 009b 0B       		.uleb128 0xb
 5658 009c 01       		.byte	0x1
 5659 009d 11       		.uleb128 0x11
 5660 009e 01       		.uleb128 0x1
 5661 009f 12       		.uleb128 0x12
 5662 00a0 06       		.uleb128 0x6
 5663 00a1 00       		.byte	0
 5664 00a2 00       		.byte	0
 5665 00a3 0D       		.uleb128 0xd
 5666 00a4 34       		.uleb128 0x34
 5667 00a5 00       		.byte	0
 5668 00a6 03       		.uleb128 0x3
 5669 00a7 0E       		.uleb128 0xe
 5670 00a8 3A       		.uleb128 0x3a
 5671 00a9 0B       		.uleb128 0xb
 5672 00aa 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 117


 5673 00ab 0B       		.uleb128 0xb
 5674 00ac 49       		.uleb128 0x49
 5675 00ad 13       		.uleb128 0x13
 5676 00ae 02       		.uleb128 0x2
 5677 00af 18       		.uleb128 0x18
 5678 00b0 00       		.byte	0
 5679 00b1 00       		.byte	0
 5680 00b2 0E       		.uleb128 0xe
 5681 00b3 01       		.uleb128 0x1
 5682 00b4 01       		.byte	0x1
 5683 00b5 49       		.uleb128 0x49
 5684 00b6 13       		.uleb128 0x13
 5685 00b7 01       		.uleb128 0x1
 5686 00b8 13       		.uleb128 0x13
 5687 00b9 00       		.byte	0
 5688 00ba 00       		.byte	0
 5689 00bb 0F       		.uleb128 0xf
 5690 00bc 21       		.uleb128 0x21
 5691 00bd 00       		.byte	0
 5692 00be 49       		.uleb128 0x49
 5693 00bf 13       		.uleb128 0x13
 5694 00c0 2F       		.uleb128 0x2f
 5695 00c1 0B       		.uleb128 0xb
 5696 00c2 00       		.byte	0
 5697 00c3 00       		.byte	0
 5698 00c4 10       		.uleb128 0x10
 5699 00c5 2E       		.uleb128 0x2e
 5700 00c6 01       		.byte	0x1
 5701 00c7 3F       		.uleb128 0x3f
 5702 00c8 19       		.uleb128 0x19
 5703 00c9 03       		.uleb128 0x3
 5704 00ca 0E       		.uleb128 0xe
 5705 00cb 3A       		.uleb128 0x3a
 5706 00cc 0B       		.uleb128 0xb
 5707 00cd 3B       		.uleb128 0x3b
 5708 00ce 0B       		.uleb128 0xb
 5709 00cf 27       		.uleb128 0x27
 5710 00d0 19       		.uleb128 0x19
 5711 00d1 11       		.uleb128 0x11
 5712 00d2 01       		.uleb128 0x1
 5713 00d3 12       		.uleb128 0x12
 5714 00d4 06       		.uleb128 0x6
 5715 00d5 40       		.uleb128 0x40
 5716 00d6 18       		.uleb128 0x18
 5717 00d7 9642     		.uleb128 0x2116
 5718 00d9 19       		.uleb128 0x19
 5719 00da 01       		.uleb128 0x1
 5720 00db 13       		.uleb128 0x13
 5721 00dc 00       		.byte	0
 5722 00dd 00       		.byte	0
 5723 00de 11       		.uleb128 0x11
 5724 00df 05       		.uleb128 0x5
 5725 00e0 00       		.byte	0
 5726 00e1 03       		.uleb128 0x3
 5727 00e2 08       		.uleb128 0x8
 5728 00e3 3A       		.uleb128 0x3a
 5729 00e4 0B       		.uleb128 0xb
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 118


 5730 00e5 3B       		.uleb128 0x3b
 5731 00e6 0B       		.uleb128 0xb
 5732 00e7 49       		.uleb128 0x49
 5733 00e8 13       		.uleb128 0x13
 5734 00e9 02       		.uleb128 0x2
 5735 00ea 18       		.uleb128 0x18
 5736 00eb 00       		.byte	0
 5737 00ec 00       		.byte	0
 5738 00ed 12       		.uleb128 0x12
 5739 00ee 2E       		.uleb128 0x2e
 5740 00ef 01       		.byte	0x1
 5741 00f0 3F       		.uleb128 0x3f
 5742 00f1 19       		.uleb128 0x19
 5743 00f2 03       		.uleb128 0x3
 5744 00f3 0E       		.uleb128 0xe
 5745 00f4 3A       		.uleb128 0x3a
 5746 00f5 0B       		.uleb128 0xb
 5747 00f6 3B       		.uleb128 0x3b
 5748 00f7 0B       		.uleb128 0xb
 5749 00f8 11       		.uleb128 0x11
 5750 00f9 01       		.uleb128 0x1
 5751 00fa 12       		.uleb128 0x12
 5752 00fb 06       		.uleb128 0x6
 5753 00fc 40       		.uleb128 0x40
 5754 00fd 18       		.uleb128 0x18
 5755 00fe 9642     		.uleb128 0x2116
 5756 0100 19       		.uleb128 0x19
 5757 0101 01       		.uleb128 0x1
 5758 0102 13       		.uleb128 0x13
 5759 0103 00       		.byte	0
 5760 0104 00       		.byte	0
 5761 0105 13       		.uleb128 0x13
 5762 0106 34       		.uleb128 0x34
 5763 0107 00       		.byte	0
 5764 0108 03       		.uleb128 0x3
 5765 0109 08       		.uleb128 0x8
 5766 010a 3A       		.uleb128 0x3a
 5767 010b 0B       		.uleb128 0xb
 5768 010c 3B       		.uleb128 0x3b
 5769 010d 0B       		.uleb128 0xb
 5770 010e 49       		.uleb128 0x49
 5771 010f 13       		.uleb128 0x13
 5772 0110 02       		.uleb128 0x2
 5773 0111 18       		.uleb128 0x18
 5774 0112 00       		.byte	0
 5775 0113 00       		.byte	0
 5776 0114 14       		.uleb128 0x14
 5777 0115 05       		.uleb128 0x5
 5778 0116 00       		.byte	0
 5779 0117 03       		.uleb128 0x3
 5780 0118 0E       		.uleb128 0xe
 5781 0119 3A       		.uleb128 0x3a
 5782 011a 0B       		.uleb128 0xb
 5783 011b 3B       		.uleb128 0x3b
 5784 011c 0B       		.uleb128 0xb
 5785 011d 49       		.uleb128 0x49
 5786 011e 13       		.uleb128 0x13
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 119


 5787 011f 02       		.uleb128 0x2
 5788 0120 18       		.uleb128 0x18
 5789 0121 00       		.byte	0
 5790 0122 00       		.byte	0
 5791 0123 15       		.uleb128 0x15
 5792 0124 2E       		.uleb128 0x2e
 5793 0125 00       		.byte	0
 5794 0126 3F       		.uleb128 0x3f
 5795 0127 19       		.uleb128 0x19
 5796 0128 03       		.uleb128 0x3
 5797 0129 0E       		.uleb128 0xe
 5798 012a 3A       		.uleb128 0x3a
 5799 012b 0B       		.uleb128 0xb
 5800 012c 3B       		.uleb128 0x3b
 5801 012d 0B       		.uleb128 0xb
 5802 012e 11       		.uleb128 0x11
 5803 012f 01       		.uleb128 0x1
 5804 0130 12       		.uleb128 0x12
 5805 0131 06       		.uleb128 0x6
 5806 0132 40       		.uleb128 0x40
 5807 0133 18       		.uleb128 0x18
 5808 0134 9642     		.uleb128 0x2116
 5809 0136 19       		.uleb128 0x19
 5810 0137 00       		.byte	0
 5811 0138 00       		.byte	0
 5812 0139 16       		.uleb128 0x16
 5813 013a 2E       		.uleb128 0x2e
 5814 013b 00       		.byte	0
 5815 013c 3F       		.uleb128 0x3f
 5816 013d 19       		.uleb128 0x19
 5817 013e 03       		.uleb128 0x3
 5818 013f 0E       		.uleb128 0xe
 5819 0140 3A       		.uleb128 0x3a
 5820 0141 0B       		.uleb128 0xb
 5821 0142 3B       		.uleb128 0x3b
 5822 0143 05       		.uleb128 0x5
 5823 0144 11       		.uleb128 0x11
 5824 0145 01       		.uleb128 0x1
 5825 0146 12       		.uleb128 0x12
 5826 0147 06       		.uleb128 0x6
 5827 0148 40       		.uleb128 0x40
 5828 0149 18       		.uleb128 0x18
 5829 014a 9642     		.uleb128 0x2116
 5830 014c 19       		.uleb128 0x19
 5831 014d 00       		.byte	0
 5832 014e 00       		.byte	0
 5833 014f 17       		.uleb128 0x17
 5834 0150 2E       		.uleb128 0x2e
 5835 0151 00       		.byte	0
 5836 0152 3F       		.uleb128 0x3f
 5837 0153 19       		.uleb128 0x19
 5838 0154 03       		.uleb128 0x3
 5839 0155 0E       		.uleb128 0xe
 5840 0156 3A       		.uleb128 0x3a
 5841 0157 0B       		.uleb128 0xb
 5842 0158 3B       		.uleb128 0x3b
 5843 0159 05       		.uleb128 0x5
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 120


 5844 015a 11       		.uleb128 0x11
 5845 015b 01       		.uleb128 0x1
 5846 015c 12       		.uleb128 0x12
 5847 015d 06       		.uleb128 0x6
 5848 015e 40       		.uleb128 0x40
 5849 015f 18       		.uleb128 0x18
 5850 0160 9742     		.uleb128 0x2117
 5851 0162 19       		.uleb128 0x19
 5852 0163 00       		.byte	0
 5853 0164 00       		.byte	0
 5854 0165 18       		.uleb128 0x18
 5855 0166 2E       		.uleb128 0x2e
 5856 0167 01       		.byte	0x1
 5857 0168 3F       		.uleb128 0x3f
 5858 0169 19       		.uleb128 0x19
 5859 016a 03       		.uleb128 0x3
 5860 016b 0E       		.uleb128 0xe
 5861 016c 3A       		.uleb128 0x3a
 5862 016d 0B       		.uleb128 0xb
 5863 016e 3B       		.uleb128 0x3b
 5864 016f 05       		.uleb128 0x5
 5865 0170 27       		.uleb128 0x27
 5866 0171 19       		.uleb128 0x19
 5867 0172 11       		.uleb128 0x11
 5868 0173 01       		.uleb128 0x1
 5869 0174 12       		.uleb128 0x12
 5870 0175 06       		.uleb128 0x6
 5871 0176 40       		.uleb128 0x40
 5872 0177 18       		.uleb128 0x18
 5873 0178 9642     		.uleb128 0x2116
 5874 017a 19       		.uleb128 0x19
 5875 017b 01       		.uleb128 0x1
 5876 017c 13       		.uleb128 0x13
 5877 017d 00       		.byte	0
 5878 017e 00       		.byte	0
 5879 017f 19       		.uleb128 0x19
 5880 0180 34       		.uleb128 0x34
 5881 0181 00       		.byte	0
 5882 0182 03       		.uleb128 0x3
 5883 0183 0E       		.uleb128 0xe
 5884 0184 3A       		.uleb128 0x3a
 5885 0185 0B       		.uleb128 0xb
 5886 0186 3B       		.uleb128 0x3b
 5887 0187 05       		.uleb128 0x5
 5888 0188 49       		.uleb128 0x49
 5889 0189 13       		.uleb128 0x13
 5890 018a 02       		.uleb128 0x2
 5891 018b 18       		.uleb128 0x18
 5892 018c 00       		.byte	0
 5893 018d 00       		.byte	0
 5894 018e 1A       		.uleb128 0x1a
 5895 018f 34       		.uleb128 0x34
 5896 0190 00       		.byte	0
 5897 0191 03       		.uleb128 0x3
 5898 0192 08       		.uleb128 0x8
 5899 0193 3A       		.uleb128 0x3a
 5900 0194 0B       		.uleb128 0xb
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 121


 5901 0195 3B       		.uleb128 0x3b
 5902 0196 05       		.uleb128 0x5
 5903 0197 49       		.uleb128 0x49
 5904 0198 13       		.uleb128 0x13
 5905 0199 02       		.uleb128 0x2
 5906 019a 18       		.uleb128 0x18
 5907 019b 00       		.byte	0
 5908 019c 00       		.byte	0
 5909 019d 1B       		.uleb128 0x1b
 5910 019e 2E       		.uleb128 0x2e
 5911 019f 00       		.byte	0
 5912 01a0 3F       		.uleb128 0x3f
 5913 01a1 19       		.uleb128 0x19
 5914 01a2 03       		.uleb128 0x3
 5915 01a3 0E       		.uleb128 0xe
 5916 01a4 3A       		.uleb128 0x3a
 5917 01a5 0B       		.uleb128 0xb
 5918 01a6 3B       		.uleb128 0x3b
 5919 01a7 05       		.uleb128 0x5
 5920 01a8 27       		.uleb128 0x27
 5921 01a9 19       		.uleb128 0x19
 5922 01aa 11       		.uleb128 0x11
 5923 01ab 01       		.uleb128 0x1
 5924 01ac 12       		.uleb128 0x12
 5925 01ad 06       		.uleb128 0x6
 5926 01ae 40       		.uleb128 0x40
 5927 01af 18       		.uleb128 0x18
 5928 01b0 9742     		.uleb128 0x2117
 5929 01b2 19       		.uleb128 0x19
 5930 01b3 00       		.byte	0
 5931 01b4 00       		.byte	0
 5932 01b5 1C       		.uleb128 0x1c
 5933 01b6 2E       		.uleb128 0x2e
 5934 01b7 00       		.byte	0
 5935 01b8 3F       		.uleb128 0x3f
 5936 01b9 19       		.uleb128 0x19
 5937 01ba 03       		.uleb128 0x3
 5938 01bb 0E       		.uleb128 0xe
 5939 01bc 3A       		.uleb128 0x3a
 5940 01bd 0B       		.uleb128 0xb
 5941 01be 3B       		.uleb128 0x3b
 5942 01bf 05       		.uleb128 0x5
 5943 01c0 27       		.uleb128 0x27
 5944 01c1 19       		.uleb128 0x19
 5945 01c2 11       		.uleb128 0x11
 5946 01c3 01       		.uleb128 0x1
 5947 01c4 12       		.uleb128 0x12
 5948 01c5 06       		.uleb128 0x6
 5949 01c6 40       		.uleb128 0x40
 5950 01c7 18       		.uleb128 0x18
 5951 01c8 9642     		.uleb128 0x2116
 5952 01ca 19       		.uleb128 0x19
 5953 01cb 00       		.byte	0
 5954 01cc 00       		.byte	0
 5955 01cd 1D       		.uleb128 0x1d
 5956 01ce 0B       		.uleb128 0xb
 5957 01cf 01       		.byte	0x1
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 122


 5958 01d0 11       		.uleb128 0x11
 5959 01d1 01       		.uleb128 0x1
 5960 01d2 12       		.uleb128 0x12
 5961 01d3 06       		.uleb128 0x6
 5962 01d4 01       		.uleb128 0x1
 5963 01d5 13       		.uleb128 0x13
 5964 01d6 00       		.byte	0
 5965 01d7 00       		.byte	0
 5966 01d8 1E       		.uleb128 0x1e
 5967 01d9 2E       		.uleb128 0x2e
 5968 01da 01       		.byte	0x1
 5969 01db 3F       		.uleb128 0x3f
 5970 01dc 19       		.uleb128 0x19
 5971 01dd 03       		.uleb128 0x3
 5972 01de 0E       		.uleb128 0xe
 5973 01df 3A       		.uleb128 0x3a
 5974 01e0 0B       		.uleb128 0xb
 5975 01e1 3B       		.uleb128 0x3b
 5976 01e2 05       		.uleb128 0x5
 5977 01e3 11       		.uleb128 0x11
 5978 01e4 01       		.uleb128 0x1
 5979 01e5 12       		.uleb128 0x12
 5980 01e6 06       		.uleb128 0x6
 5981 01e7 40       		.uleb128 0x40
 5982 01e8 18       		.uleb128 0x18
 5983 01e9 9642     		.uleb128 0x2116
 5984 01eb 19       		.uleb128 0x19
 5985 01ec 01       		.uleb128 0x1
 5986 01ed 13       		.uleb128 0x13
 5987 01ee 00       		.byte	0
 5988 01ef 00       		.byte	0
 5989 01f0 1F       		.uleb128 0x1f
 5990 01f1 05       		.uleb128 0x5
 5991 01f2 00       		.byte	0
 5992 01f3 03       		.uleb128 0x3
 5993 01f4 0E       		.uleb128 0xe
 5994 01f5 3A       		.uleb128 0x3a
 5995 01f6 0B       		.uleb128 0xb
 5996 01f7 3B       		.uleb128 0x3b
 5997 01f8 05       		.uleb128 0x5
 5998 01f9 49       		.uleb128 0x49
 5999 01fa 13       		.uleb128 0x13
 6000 01fb 02       		.uleb128 0x2
 6001 01fc 18       		.uleb128 0x18
 6002 01fd 00       		.byte	0
 6003 01fe 00       		.byte	0
 6004 01ff 20       		.uleb128 0x20
 6005 0200 2E       		.uleb128 0x2e
 6006 0201 01       		.byte	0x1
 6007 0202 3F       		.uleb128 0x3f
 6008 0203 19       		.uleb128 0x19
 6009 0204 03       		.uleb128 0x3
 6010 0205 0E       		.uleb128 0xe
 6011 0206 3A       		.uleb128 0x3a
 6012 0207 0B       		.uleb128 0xb
 6013 0208 3B       		.uleb128 0x3b
 6014 0209 05       		.uleb128 0x5
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 123


 6015 020a 49       		.uleb128 0x49
 6016 020b 13       		.uleb128 0x13
 6017 020c 11       		.uleb128 0x11
 6018 020d 01       		.uleb128 0x1
 6019 020e 12       		.uleb128 0x12
 6020 020f 06       		.uleb128 0x6
 6021 0210 40       		.uleb128 0x40
 6022 0211 18       		.uleb128 0x18
 6023 0212 9642     		.uleb128 0x2116
 6024 0214 19       		.uleb128 0x19
 6025 0215 01       		.uleb128 0x1
 6026 0216 13       		.uleb128 0x13
 6027 0217 00       		.byte	0
 6028 0218 00       		.byte	0
 6029 0219 21       		.uleb128 0x21
 6030 021a 05       		.uleb128 0x5
 6031 021b 00       		.byte	0
 6032 021c 03       		.uleb128 0x3
 6033 021d 08       		.uleb128 0x8
 6034 021e 3A       		.uleb128 0x3a
 6035 021f 0B       		.uleb128 0xb
 6036 0220 3B       		.uleb128 0x3b
 6037 0221 05       		.uleb128 0x5
 6038 0222 49       		.uleb128 0x49
 6039 0223 13       		.uleb128 0x13
 6040 0224 02       		.uleb128 0x2
 6041 0225 18       		.uleb128 0x18
 6042 0226 00       		.byte	0
 6043 0227 00       		.byte	0
 6044 0228 22       		.uleb128 0x22
 6045 0229 34       		.uleb128 0x34
 6046 022a 00       		.byte	0
 6047 022b 03       		.uleb128 0x3
 6048 022c 0E       		.uleb128 0xe
 6049 022d 3A       		.uleb128 0x3a
 6050 022e 0B       		.uleb128 0xb
 6051 022f 3B       		.uleb128 0x3b
 6052 0230 05       		.uleb128 0x5
 6053 0231 49       		.uleb128 0x49
 6054 0232 13       		.uleb128 0x13
 6055 0233 3F       		.uleb128 0x3f
 6056 0234 19       		.uleb128 0x19
 6057 0235 3C       		.uleb128 0x3c
 6058 0236 19       		.uleb128 0x19
 6059 0237 00       		.byte	0
 6060 0238 00       		.byte	0
 6061 0239 23       		.uleb128 0x23
 6062 023a 35       		.uleb128 0x35
 6063 023b 00       		.byte	0
 6064 023c 49       		.uleb128 0x49
 6065 023d 13       		.uleb128 0x13
 6066 023e 00       		.byte	0
 6067 023f 00       		.byte	0
 6068 0240 24       		.uleb128 0x24
 6069 0241 34       		.uleb128 0x34
 6070 0242 00       		.byte	0
 6071 0243 03       		.uleb128 0x3
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 124


 6072 0244 08       		.uleb128 0x8
 6073 0245 3A       		.uleb128 0x3a
 6074 0246 0B       		.uleb128 0xb
 6075 0247 3B       		.uleb128 0x3b
 6076 0248 0B       		.uleb128 0xb
 6077 0249 49       		.uleb128 0x49
 6078 024a 13       		.uleb128 0x13
 6079 024b 3F       		.uleb128 0x3f
 6080 024c 19       		.uleb128 0x19
 6081 024d 02       		.uleb128 0x2
 6082 024e 18       		.uleb128 0x18
 6083 024f 00       		.byte	0
 6084 0250 00       		.byte	0
 6085 0251 25       		.uleb128 0x25
 6086 0252 34       		.uleb128 0x34
 6087 0253 00       		.byte	0
 6088 0254 03       		.uleb128 0x3
 6089 0255 0E       		.uleb128 0xe
 6090 0256 3A       		.uleb128 0x3a
 6091 0257 0B       		.uleb128 0xb
 6092 0258 3B       		.uleb128 0x3b
 6093 0259 0B       		.uleb128 0xb
 6094 025a 49       		.uleb128 0x49
 6095 025b 13       		.uleb128 0x13
 6096 025c 3F       		.uleb128 0x3f
 6097 025d 19       		.uleb128 0x19
 6098 025e 02       		.uleb128 0x2
 6099 025f 18       		.uleb128 0x18
 6100 0260 00       		.byte	0
 6101 0261 00       		.byte	0
 6102 0262 00       		.byte	0
 6103              		.section	.debug_aranges,"",%progbits
 6104 0000 54010000 		.4byte	0x154
 6105 0004 0200     		.2byte	0x2
 6106 0006 00000000 		.4byte	.Ldebug_info0
 6107 000a 04       		.byte	0x4
 6108 000b 00       		.byte	0
 6109 000c 0000     		.2byte	0
 6110 000e 0000     		.2byte	0
 6111 0010 00000000 		.4byte	.LFB63
 6112 0014 60010000 		.4byte	.LFE63-.LFB63
 6113 0018 00000000 		.4byte	.LFB64
 6114 001c 18000000 		.4byte	.LFE64-.LFB64
 6115 0020 00000000 		.4byte	.LFB65
 6116 0024 18000000 		.4byte	.LFE65-.LFB65
 6117 0028 00000000 		.4byte	.LFB66
 6118 002c 54000000 		.4byte	.LFE66-.LFB66
 6119 0030 00000000 		.4byte	.LFB67
 6120 0034 F4000000 		.4byte	.LFE67-.LFB67
 6121 0038 00000000 		.4byte	.LFB68
 6122 003c 18000000 		.4byte	.LFE68-.LFB68
 6123 0040 00000000 		.4byte	.LFB69
 6124 0044 18000000 		.4byte	.LFE69-.LFB69
 6125 0048 00000000 		.4byte	.LFB70
 6126 004c 22000000 		.4byte	.LFE70-.LFB70
 6127 0050 00000000 		.4byte	.LFB71
 6128 0054 1C000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 125


 6129 0058 00000000 		.4byte	.LFB72
 6130 005c 28000000 		.4byte	.LFE72-.LFB72
 6131 0060 00000000 		.4byte	.LFB73
 6132 0064 2C000000 		.4byte	.LFE73-.LFB73
 6133 0068 00000000 		.4byte	.LFB74
 6134 006c 38000000 		.4byte	.LFE74-.LFB74
 6135 0070 00000000 		.4byte	.LFB75
 6136 0074 38000000 		.4byte	.LFE75-.LFB75
 6137 0078 00000000 		.4byte	.LFB76
 6138 007c 14000000 		.4byte	.LFE76-.LFB76
 6139 0080 00000000 		.4byte	.LFB77
 6140 0084 18000000 		.4byte	.LFE77-.LFB77
 6141 0088 00000000 		.4byte	.LFB78
 6142 008c 18000000 		.4byte	.LFE78-.LFB78
 6143 0090 00000000 		.4byte	.LFB79
 6144 0094 18000000 		.4byte	.LFE79-.LFB79
 6145 0098 00000000 		.4byte	.LFB80
 6146 009c 18000000 		.4byte	.LFE80-.LFB80
 6147 00a0 00000000 		.4byte	.LFB81
 6148 00a4 B8000000 		.4byte	.LFE81-.LFB81
 6149 00a8 00000000 		.4byte	.LFB82
 6150 00ac 78010000 		.4byte	.LFE82-.LFB82
 6151 00b0 00000000 		.4byte	.LFB83
 6152 00b4 0C000000 		.4byte	.LFE83-.LFB83
 6153 00b8 00000000 		.4byte	.LFB84
 6154 00bc 2C000000 		.4byte	.LFE84-.LFB84
 6155 00c0 00000000 		.4byte	.LFB85
 6156 00c4 E4010000 		.4byte	.LFE85-.LFB85
 6157 00c8 00000000 		.4byte	.LFB86
 6158 00cc 78000000 		.4byte	.LFE86-.LFB86
 6159 00d0 00000000 		.4byte	.LFB87
 6160 00d4 20000000 		.4byte	.LFE87-.LFB87
 6161 00d8 00000000 		.4byte	.LFB88
 6162 00dc 28000000 		.4byte	.LFE88-.LFB88
 6163 00e0 00000000 		.4byte	.LFB89
 6164 00e4 0A000000 		.4byte	.LFE89-.LFB89
 6165 00e8 00000000 		.4byte	.LFB90
 6166 00ec 40000000 		.4byte	.LFE90-.LFB90
 6167 00f0 00000000 		.4byte	.LFB91
 6168 00f4 40000000 		.4byte	.LFE91-.LFB91
 6169 00f8 00000000 		.4byte	.LFB92
 6170 00fc 30020000 		.4byte	.LFE92-.LFB92
 6171 0100 00000000 		.4byte	.LFB93
 6172 0104 50010000 		.4byte	.LFE93-.LFB93
 6173 0108 00000000 		.4byte	.LFB94
 6174 010c 50010000 		.4byte	.LFE94-.LFB94
 6175 0110 00000000 		.4byte	.LFB95
 6176 0114 B0010000 		.4byte	.LFE95-.LFB95
 6177 0118 00000000 		.4byte	.LFB96
 6178 011c C0000000 		.4byte	.LFE96-.LFB96
 6179 0120 00000000 		.4byte	.LFB97
 6180 0124 B8000000 		.4byte	.LFE97-.LFB97
 6181 0128 00000000 		.4byte	.LFB98
 6182 012c 4A000000 		.4byte	.LFE98-.LFB98
 6183 0130 00000000 		.4byte	.LFB99
 6184 0134 74010000 		.4byte	.LFE99-.LFB99
 6185 0138 00000000 		.4byte	.LFB100
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 126


 6186 013c 68000000 		.4byte	.LFE100-.LFB100
 6187 0140 00000000 		.4byte	.LFB101
 6188 0144 50000000 		.4byte	.LFE101-.LFB101
 6189 0148 00000000 		.4byte	.LFB102
 6190 014c 3A000000 		.4byte	.LFE102-.LFB102
 6191 0150 00000000 		.4byte	0
 6192 0154 00000000 		.4byte	0
 6193              		.section	.debug_ranges,"",%progbits
 6194              	.Ldebug_ranges0:
 6195 0000 00000000 		.4byte	.LFB63
 6196 0004 60010000 		.4byte	.LFE63
 6197 0008 00000000 		.4byte	.LFB64
 6198 000c 18000000 		.4byte	.LFE64
 6199 0010 00000000 		.4byte	.LFB65
 6200 0014 18000000 		.4byte	.LFE65
 6201 0018 00000000 		.4byte	.LFB66
 6202 001c 54000000 		.4byte	.LFE66
 6203 0020 00000000 		.4byte	.LFB67
 6204 0024 F4000000 		.4byte	.LFE67
 6205 0028 00000000 		.4byte	.LFB68
 6206 002c 18000000 		.4byte	.LFE68
 6207 0030 00000000 		.4byte	.LFB69
 6208 0034 18000000 		.4byte	.LFE69
 6209 0038 00000000 		.4byte	.LFB70
 6210 003c 22000000 		.4byte	.LFE70
 6211 0040 00000000 		.4byte	.LFB71
 6212 0044 1C000000 		.4byte	.LFE71
 6213 0048 00000000 		.4byte	.LFB72
 6214 004c 28000000 		.4byte	.LFE72
 6215 0050 00000000 		.4byte	.LFB73
 6216 0054 2C000000 		.4byte	.LFE73
 6217 0058 00000000 		.4byte	.LFB74
 6218 005c 38000000 		.4byte	.LFE74
 6219 0060 00000000 		.4byte	.LFB75
 6220 0064 38000000 		.4byte	.LFE75
 6221 0068 00000000 		.4byte	.LFB76
 6222 006c 14000000 		.4byte	.LFE76
 6223 0070 00000000 		.4byte	.LFB77
 6224 0074 18000000 		.4byte	.LFE77
 6225 0078 00000000 		.4byte	.LFB78
 6226 007c 18000000 		.4byte	.LFE78
 6227 0080 00000000 		.4byte	.LFB79
 6228 0084 18000000 		.4byte	.LFE79
 6229 0088 00000000 		.4byte	.LFB80
 6230 008c 18000000 		.4byte	.LFE80
 6231 0090 00000000 		.4byte	.LFB81
 6232 0094 B8000000 		.4byte	.LFE81
 6233 0098 00000000 		.4byte	.LFB82
 6234 009c 78010000 		.4byte	.LFE82
 6235 00a0 00000000 		.4byte	.LFB83
 6236 00a4 0C000000 		.4byte	.LFE83
 6237 00a8 00000000 		.4byte	.LFB84
 6238 00ac 2C000000 		.4byte	.LFE84
 6239 00b0 00000000 		.4byte	.LFB85
 6240 00b4 E4010000 		.4byte	.LFE85
 6241 00b8 00000000 		.4byte	.LFB86
 6242 00bc 78000000 		.4byte	.LFE86
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 127


 6243 00c0 00000000 		.4byte	.LFB87
 6244 00c4 20000000 		.4byte	.LFE87
 6245 00c8 00000000 		.4byte	.LFB88
 6246 00cc 28000000 		.4byte	.LFE88
 6247 00d0 00000000 		.4byte	.LFB89
 6248 00d4 0A000000 		.4byte	.LFE89
 6249 00d8 00000000 		.4byte	.LFB90
 6250 00dc 40000000 		.4byte	.LFE90
 6251 00e0 00000000 		.4byte	.LFB91
 6252 00e4 40000000 		.4byte	.LFE91
 6253 00e8 00000000 		.4byte	.LFB92
 6254 00ec 30020000 		.4byte	.LFE92
 6255 00f0 00000000 		.4byte	.LFB93
 6256 00f4 50010000 		.4byte	.LFE93
 6257 00f8 00000000 		.4byte	.LFB94
 6258 00fc 50010000 		.4byte	.LFE94
 6259 0100 00000000 		.4byte	.LFB95
 6260 0104 B0010000 		.4byte	.LFE95
 6261 0108 00000000 		.4byte	.LFB96
 6262 010c C0000000 		.4byte	.LFE96
 6263 0110 00000000 		.4byte	.LFB97
 6264 0114 B8000000 		.4byte	.LFE97
 6265 0118 00000000 		.4byte	.LFB98
 6266 011c 4A000000 		.4byte	.LFE98
 6267 0120 00000000 		.4byte	.LFB99
 6268 0124 74010000 		.4byte	.LFE99
 6269 0128 00000000 		.4byte	.LFB100
 6270 012c 68000000 		.4byte	.LFE100
 6271 0130 00000000 		.4byte	.LFB101
 6272 0134 50000000 		.4byte	.LFE101
 6273 0138 00000000 		.4byte	.LFB102
 6274 013c 3A000000 		.4byte	.LFE102
 6275 0140 00000000 		.4byte	0
 6276 0144 00000000 		.4byte	0
 6277              		.section	.debug_line,"",%progbits
 6278              	.Ldebug_line0:
 6279 0000 AD060000 		.section	.debug_str,"MS",%progbits,1
 6279      02005501 
 6279      00000201 
 6279      FB0E0D00 
 6279      01010101 
 6280              	.LASF131:
 6281 0000 64697265 		.ascii	"direction\000"
 6281      6374696F 
 6281      6E00
 6282              	.LASF23:
 6283 000a 52545552 		.ascii	"RTURN\000"
 6283      4E00
 6284              	.LASF139:
 6285 0010 71756164 		.ascii	"quad_diff1\000"
 6285      5F646966 
 6285      663100
 6286              	.LASF140:
 6287 001b 71756164 		.ascii	"quad_diff2\000"
 6287      5F646966 
 6287      663200
 6288              	.LASF91:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 128


 6289 0026 51756164 		.ascii	"Quad_Dec_response\000"
 6289      5F446563 
 6289      5F726573 
 6289      706F6E73 
 6289      6500
 6290              	.LASF155:
 6291 0038 70726576 		.ascii	"prevVoltage\000"
 6291      566F6C74 
 6291      61676500 
 6292              	.LASF141:
 6293 0044 73746172 		.ascii	"start_turn_count\000"
 6293      745F7475 
 6293      726E5F63 
 6293      6F756E74 
 6293      00
 6294              	.LASF8:
 6295 0055 756E7369 		.ascii	"unsigned int\000"
 6295      676E6564 
 6295      20696E74 
 6295      00
 6296              	.LASF165:
 6297 0062 74726163 		.ascii	"track_mode\000"
 6297      6B5F6D6F 
 6297      646500
 6298              	.LASF11:
 6299 006d 5F5F696E 		.ascii	"__int32_t\000"
 6299      7433325F 
 6299      7400
 6300              	.LASF17:
 6301 0077 696E7431 		.ascii	"int16\000"
 6301      3600
 6302              	.LASF162:
 6303 007d 73797374 		.ascii	"system_state\000"
 6303      656D5F73 
 6303      74617465 
 6303      00
 6304              	.LASF22:
 6305 008a 4C545552 		.ascii	"LTURN\000"
 6305      4E00
 6306              	.LASF88:
 6307 0090 6973725F 		.ascii	"isr_adcTimer\000"
 6307      61646354 
 6307      696D6572 
 6307      00
 6308              	.LASF148:
 6309 009d 74617267 		.ascii	"target_distance_quad\000"
 6309      65745F64 
 6309      69737461 
 6309      6E63655F 
 6309      71756164 
 6310              	.LASF25:
 6311 00b2 54524143 		.ascii	"TRACKING\000"
 6311      4B494E47 
 6311      00
 6312              	.LASF156:
 6313 00bb 70726576 		.ascii	"prevVoltage2\000"
 6313      566F6C74 
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 129


 6313      61676532 
 6313      00
 6314              	.LASF53:
 6315 00c8 7061636B 		.ascii	"packet_bytes\000"
 6315      65745F62 
 6315      79746573 
 6315      00
 6316              	.LASF49:
 6317 00d5 67325F78 		.ascii	"g2_xpos\000"
 6317      706F7300 
 6318              	.LASF29:
 6319 00dd 6D6F6465 		.ascii	"mode\000"
 6319      00
 6320              	.LASF135:
 6321 00e2 71756164 		.ascii	"quad_count1\000"
 6321      5F636F75 
 6321      6E743100 
 6322              	.LASF136:
 6323 00ee 71756164 		.ascii	"quad_count2\000"
 6323      5F636F75 
 6323      6E743200 
 6324              	.LASF100:
 6325 00fa 74726163 		.ascii	"trackLineU\000"
 6325      6B4C696E 
 6325      655500
 6326              	.LASF99:
 6327 0105 74726163 		.ascii	"trackLineZ\000"
 6327      6B4C696E 
 6327      655A00
 6328              	.LASF168:
 6329 0110 73706565 		.ascii	"speed\000"
 6329      6400
 6330              	.LASF33:
 6331 0116 53515541 		.ascii	"SQUARE_TRACK\000"
 6331      52455F54 
 6331      5241434B 
 6331      00
 6332              	.LASF127:
 6333 0123 666C6167 		.ascii	"flag_rf_transmission_active\000"
 6333      5F72665F 
 6333      7472616E 
 6333      736D6973 
 6333      73696F6E 
 6334              	.LASF128:
 6335 013f 666C6167 		.ascii	"flag_print_rf\000"
 6335      5F707269 
 6335      6E745F72 
 6335      6600
 6336              	.LASF164:
 6337 014d 6D6F7665 		.ascii	"movement_state\000"
 6337      6D656E74 
 6337      5F737461 
 6337      746500
 6338              	.LASF26:
 6339 015c 54524143 		.ascii	"TRACKING_U\000"
 6339      4B494E47 
 6339      5F5500
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 130


 6340              	.LASF73:
 6341 0167 696E6974 		.ascii	"initForward\000"
 6341      466F7277 
 6341      61726400 
 6342              	.LASF52:
 6343 0173 67325F64 		.ascii	"g2_direction\000"
 6343      69726563 
 6343      74696F6E 
 6343      00
 6344              	.LASF83:
 6345 0180 6973725F 		.ascii	"isr_quad1\000"
 6345      71756164 
 6345      3100
 6346              	.LASF18:
 6347 018a 666C6F61 		.ascii	"float\000"
 6347      7400
 6348              	.LASF60:
 6349 0190 73657453 		.ascii	"setSpeed\000"
 6349      70656564 
 6349      00
 6350              	.LASF160:
 6351 0199 75736242 		.ascii	"usbBuffer\000"
 6351      75666665 
 6351      7200
 6352              	.LASF37:
 6353 01a3 696E6465 		.ascii	"index\000"
 6353      7800
 6354              	.LASF21:
 6355 01a9 44524956 		.ascii	"DRIVE\000"
 6355      4500
 6356              	.LASF55:
 6357 01af 73747269 		.ascii	"string_packet\000"
 6357      6E675F70 
 6357      61636B65 
 6357      7400
 6358              	.LASF90:
 6359 01bd 6368616E 		.ascii	"changeToBT\000"
 6359      6765546F 
 6359      425400
 6360              	.LASF63:
 6361 01c8 636F756E 		.ascii	"countsLeft\000"
 6361      74734C65 
 6361      667400
 6362              	.LASF68:
 6363 01d3 64726976 		.ascii	"driveForwards\000"
 6363      65466F72 
 6363      77617264 
 6363      7300
 6364              	.LASF70:
 6365 01e1 7475726E 		.ascii	"turnLeft\000"
 6365      4C656674 
 6365      00
 6366              	.LASF7:
 6367 01ea 6C6F6E67 		.ascii	"long long unsigned int\000"
 6367      206C6F6E 
 6367      6720756E 
 6367      7369676E 
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 131


 6367      65642069 
 6368              	.LASF124:
 6369 0201 666C6167 		.ascii	"flag_packet\000"
 6369      5F706163 
 6369      6B657400 
 6370              	.LASF110:
 6371 020d 66726F6E 		.ascii	"frontSensors\000"
 6371      7453656E 
 6371      736F7273 
 6371      00
 6372              	.LASF171:
 6373 021a 443A5C43 		.ascii	"D:\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 6373      53333031 
 6373      2D546561 
 6373      6D2D5265 
 6373      706F5C43 
 6374              	.LASF85:
 6375 023f 6973725F 		.ascii	"isr_turn_timer\000"
 6375      7475726E 
 6375      5F74696D 
 6375      657200
 6376              	.LASF89:
 6377 024e 6368616E 		.ascii	"changeToRF\000"
 6377      6765546F 
 6377      524600
 6378              	.LASF71:
 6379 0259 696E6974 		.ascii	"initTurnLeft\000"
 6379      5475726E 
 6379      4C656674 
 6379      00
 6380              	.LASF154:
 6381 0266 706F7274 		.ascii	"portOpen\000"
 6381      4F70656E 
 6381      00
 6382              	.LASF74:
 6383 026f 696E6974 		.ascii	"initBrake\000"
 6383      4272616B 
 6383      6500
 6384              	.LASF120:
 6385 0279 666C6167 		.ascii	"flag_ts_update\000"
 6385      5F74735F 
 6385      75706461 
 6385      746500
 6386              	.LASF102:
 6387 0288 7363616C 		.ascii	"scalingFactor\000"
 6387      696E6746 
 6387      6163746F 
 6387      7200
 6388              	.LASF92:
 6389 0296 6C656674 		.ascii	"leftSpeed\000"
 6389      53706565 
 6389      6400
 6390              	.LASF119:
 6391 02a0 666C6167 		.ascii	"flag_ts_enc\000"
 6391      5F74735F 
 6391      656E6300 
 6392              	.LASF166:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 132


 6393 02ac 62797465 		.ascii	"byteCount\000"
 6393      436F756E 
 6393      7400
 6394              	.LASF87:
 6395 02b6 62757474 		.ascii	"button\000"
 6395      6F6E00
 6396              	.LASF163:
 6397 02bd 70726576 		.ascii	"prev_movement_state\000"
 6397      5F6D6F76 
 6397      656D656E 
 6397      745F7374 
 6397      61746500 
 6398              	.LASF108:
 6399 02d1 73656E73 		.ascii	"sensorVals\000"
 6399      6F725661 
 6399      6C7300
 6400              	.LASF104:
 6401 02dc 72657375 		.ascii	"result_str\000"
 6401      6C745F73 
 6401      747200
 6402              	.LASF113:
 6403 02e7 75617274 		.ascii	"uart_set_PWM\000"
 6403      5F736574 
 6403      5F50574D 
 6403      00
 6404              	.LASF77:
 6405 02f4 696E6974 		.ascii	"inittrackLineZ\000"
 6405      74726163 
 6405      6B4C696E 
 6405      655A00
 6406              	.LASF39:
 6407 0303 726F626F 		.ascii	"robot_ypos\000"
 6407      745F7970 
 6407      6F7300
 6408              	.LASF118:
 6409 030e 74735F64 		.ascii	"ts_display\000"
 6409      6973706C 
 6409      617900
 6410              	.LASF101:
 6411 0319 7072696E 		.ascii	"print_ADC\000"
 6411      745F4144 
 6411      4300
 6412              	.LASF94:
 6413 0323 7363616C 		.ascii	"scalingLeft\000"
 6413      696E674C 
 6413      65667400 
 6414              	.LASF10:
 6415 032f 63686172 		.ascii	"char\000"
 6415      00
 6416              	.LASF43:
 6417 0334 67305F73 		.ascii	"g0_speed\000"
 6417      70656564 
 6417      00
 6418              	.LASF145:
 6419 033d 72696768 		.ascii	"rightSpeedLimit\000"
 6419      74537065 
 6419      65644C69 
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 133


 6419      6D697400 
 6420              	.LASF56:
 6421 034d 7365744C 		.ascii	"setLeftDir\000"
 6421      65667444 
 6421      697200
 6422              	.LASF50:
 6423 0358 67325F79 		.ascii	"g2_ypos\000"
 6423      706F7300 
 6424              	.LASF14:
 6425 0360 75696E74 		.ascii	"uint16\000"
 6425      313600
 6426              	.LASF16:
 6427 0367 696E7438 		.ascii	"int8\000"
 6427      00
 6428              	.LASF48:
 6429 036c 67315F64 		.ascii	"g1_direction\000"
 6429      69726563 
 6429      74696F6E 
 6429      00
 6430              	.LASF57:
 6431 0379 73657452 		.ascii	"setRightDir\000"
 6431      69676874 
 6431      44697200 
 6432              	.LASF31:
 6433 0385 43555256 		.ascii	"CURVE_TRACK\000"
 6433      455F5452 
 6433      41434B00 
 6434              	.LASF96:
 6435 0391 696E7465 		.ascii	"interCalc\000"
 6435      7243616C 
 6435      6300
 6436              	.LASF133:
 6437 039b 42545F45 		.ascii	"BT_ENABLED\000"
 6437      4E41424C 
 6437      454400
 6438              	.LASF62:
 6439 03a6 72696768 		.ascii	"right\000"
 6439      7400
 6440              	.LASF150:
 6441 03ac 696E6974 		.ascii	"initial_pos_valid\000"
 6441      69616C5F 
 6441      706F735F 
 6441      76616C69 
 6441      6400
 6442              	.LASF6:
 6443 03be 6C6F6E67 		.ascii	"long long int\000"
 6443      206C6F6E 
 6443      6720696E 
 6443      7400
 6444              	.LASF161:
 6445 03cc 62756666 		.ascii	"buffer_state\000"
 6445      65725F73 
 6445      74617465 
 6445      00
 6446              	.LASF45:
 6447 03d9 67315F78 		.ascii	"g1_xpos\000"
 6447      706F7300 
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 134


 6448              	.LASF75:
 6449 03e1 696E6974 		.ascii	"initTrack\000"
 6449      54726163 
 6449      6B00
 6450              	.LASF169:
 6451 03eb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6451      4320342E 
 6451      392E3320 
 6451      32303135 
 6451      30333033 
 6452 041e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 6452      20726576 
 6452      6973696F 
 6452      6E203232 
 6452      31323230 
 6453 0451 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6453      66756E63 
 6453      74696F6E 
 6453      2D736563 
 6453      74696F6E 
 6454              	.LASF51:
 6455 0479 67325F73 		.ascii	"g2_speed\000"
 6455      70656564 
 6455      00
 6456              	.LASF42:
 6457 0482 67305F79 		.ascii	"g0_ypos\000"
 6457      706F7300 
 6458              	.LASF79:
 6459 048a 72665F63 		.ascii	"rf_char\000"
 6459      68617200 
 6460              	.LASF132:
 6461 0492 42494E5F 		.ascii	"BIN_ENABLED\000"
 6461      454E4142 
 6461      4C454400 
 6462              	.LASF93:
 6463 049e 72696768 		.ascii	"rightSpeed\000"
 6463      74537065 
 6463      656400
 6464              	.LASF117:
 6465 04a9 74735F73 		.ascii	"ts_speed\000"
 6465      70656564 
 6465      00
 6466              	.LASF15:
 6467 04b2 75696E74 		.ascii	"uint32\000"
 6467      333200
 6468              	.LASF64:
 6469 04b9 636F756E 		.ascii	"countsRight\000"
 6469      74735269 
 6469      67687400 
 6470              	.LASF172:
 6471 04c5 64617461 		.ascii	"data_main\000"
 6471      5F6D6169 
 6471      6E00
 6472              	.LASF103:
 6473 04cf 636F6E76 		.ascii	"converted_val\000"
 6473      65727465 
 6473      645F7661 
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 135


 6473      6C00
 6474              	.LASF36:
 6475 04dd 72737369 		.ascii	"rssi\000"
 6475      00
 6476              	.LASF98:
 6477 04e2 74726163 		.ascii	"trackLine\000"
 6477      6B4C696E 
 6477      6500
 6478              	.LASF44:
 6479 04ec 67305F64 		.ascii	"g0_direction\000"
 6479      69726563 
 6479      74696F6E 
 6479      00
 6480              	.LASF129:
 6481 04f9 666C6167 		.ascii	"flag_receive_ADC\000"
 6481      5F726563 
 6481      65697665 
 6481      5F414443 
 6481      00
 6482              	.LASF24:
 6483 050a 53544F50 		.ascii	"STOPPED\000"
 6483      50454400 
 6484              	.LASF80:
 6485 0512 42545F72 		.ascii	"BT_rxInt\000"
 6485      78496E74 
 6485      00
 6486              	.LASF20:
 6487 051b 6C6F6E67 		.ascii	"long double\000"
 6487      20646F75 
 6487      626C6500 
 6488              	.LASF78:
 6489 0527 7278496E 		.ascii	"rxInt\000"
 6489      7400
 6490              	.LASF142:
 6491 052d 6C656674 		.ascii	"left_duty_cycle\000"
 6491      5F647574 
 6491      795F6379 
 6491      636C6500 
 6492              	.LASF121:
 6493 053d 666C6167 		.ascii	"flag_ts_speed\000"
 6493      5F74735F 
 6493      73706565 
 6493      6400
 6494              	.LASF126:
 6495 054b 64617461 		.ascii	"dataready_flag\000"
 6495      72656164 
 6495      795F666C 
 6495      616700
 6496              	.LASF152:
 6497 055a 696E6974 		.ascii	"initial_y_pos\000"
 6497      69616C5F 
 6497      795F706F 
 6497      7300
 6498              	.LASF123:
 6499 0568 666C6167 		.ascii	"flag_rx\000"
 6499      5F727800 
 6500              	.LASF2:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 136


 6501 0570 73686F72 		.ascii	"short int\000"
 6501      7420696E 
 6501      7400
 6502              	.LASF130:
 6503 057a 6164635F 		.ascii	"adc_result\000"
 6503      72657375 
 6503      6C7400
 6504              	.LASF134:
 6505 0585 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 6505      5F63616C 
 6505      635F7768 
 6505      65656C73 
 6505      70656564 
 6506              	.LASF4:
 6507 059a 6C6F6E67 		.ascii	"long int\000"
 6507      20696E74 
 6507      00
 6508              	.LASF72:
 6509 05a3 696E6974 		.ascii	"initTurnRight\000"
 6509      5475726E 
 6509      52696768 
 6509      7400
 6510              	.LASF32:
 6511 05b1 555F5452 		.ascii	"U_TRACK\000"
 6511      41434B00 
 6512              	.LASF114:
 6513 05b9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6513      52784275 
 6513      66666572 
 6513      00
 6514              	.LASF106:
 6515 05c6 7072696E 		.ascii	"printString\000"
 6515      74537472 
 6515      696E6700 
 6516              	.LASF116:
 6517 05d2 74735F75 		.ascii	"ts_update\000"
 6517      70646174 
 6517      6500
 6518              	.LASF30:
 6519 05dc 4E4F5F54 		.ascii	"NO_TRACK\000"
 6519      5241434B 
 6519      00
 6520              	.LASF144:
 6521 05e5 6C656674 		.ascii	"leftSpeedLimit\000"
 6521      53706565 
 6521      644C696D 
 6521      697400
 6522              	.LASF27:
 6523 05f4 54524143 		.ascii	"TRACKING_SOFT\000"
 6523      4B494E47 
 6523      5F534F46 
 6523      5400
 6524              	.LASF61:
 6525 0602 6C656674 		.ascii	"left\000"
 6525      00
 6526              	.LASF147:
 6527 0607 61636375 		.ascii	"accum_dist\000"
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 137


 6527      6D5F6469 
 6527      737400
 6528              	.LASF111:
 6529 0612 75736250 		.ascii	"usbPutString\000"
 6529      75745374 
 6529      72696E67 
 6529      00
 6530              	.LASF69:
 6531 061f 7475726E 		.ascii	"turnRight\000"
 6531      52696768 
 6531      7400
 6532              	.LASF46:
 6533 0629 67315F79 		.ascii	"g1_ypos\000"
 6533      706F7300 
 6534              	.LASF82:
 6535 0631 6164635F 		.ascii	"adc_isr\000"
 6535      69737200 
 6536              	.LASF107:
 6537 0639 72656164 		.ascii	"readFrontSensors\000"
 6537      46726F6E 
 6537      7453656E 
 6537      736F7273 
 6537      00
 6538              	.LASF149:
 6539 064a 71756164 		.ascii	"quad_per_cm\000"
 6539      5F706572 
 6539      5F636D00 
 6540              	.LASF146:
 6541 0656 74617267 		.ascii	"target_distance_cm\000"
 6541      65745F64 
 6541      69737461 
 6541      6E63655F 
 6541      636D00
 6542              	.LASF9:
 6543 0669 73697A65 		.ascii	"sizetype\000"
 6543      74797065 
 6543      00
 6544              	.LASF5:
 6545 0672 6C6F6E67 		.ascii	"long unsigned int\000"
 6545      20756E73 
 6545      69676E65 
 6545      6420696E 
 6545      7400
 6546              	.LASF54:
 6547 0684 62797465 		.ascii	"byte_packet\000"
 6547      5F706163 
 6547      6B657400 
 6548              	.LASF12:
 6549 0690 696E7433 		.ascii	"int32_t\000"
 6549      325F7400 
 6550              	.LASF167:
 6551 0698 7061636B 		.ascii	"packet\000"
 6551      657400
 6552              	.LASF38:
 6553 069f 726F626F 		.ascii	"robot_xpos\000"
 6553      745F7870 
 6553      6F7300
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 138


 6554              	.LASF67:
 6555 06aa 6272616B 		.ascii	"brakeMotor\000"
 6555      654D6F74 
 6555      6F7200
 6556              	.LASF159:
 6557 06b5 656E7472 		.ascii	"entry\000"
 6557      7900
 6558              	.LASF1:
 6559 06bb 756E7369 		.ascii	"unsigned char\000"
 6559      676E6564 
 6559      20636861 
 6559      7200
 6560              	.LASF158:
 6561 06c9 6C696E65 		.ascii	"line\000"
 6561      00
 6562              	.LASF86:
 6563 06ce 53746F70 		.ascii	"Stop_on_line\000"
 6563      5F6F6E5F 
 6563      6C696E65 
 6563      00
 6564              	.LASF115:
 6565 06db 74735F65 		.ascii	"ts_enc\000"
 6565      6E6300
 6566              	.LASF153:
 6567 06e2 6272616B 		.ascii	"brakeFlag\000"
 6567      65466C61 
 6567      6700
 6568              	.LASF122:
 6569 06ec 666C6167 		.ascii	"flag_ts_display\000"
 6569      5F74735F 
 6569      64697370 
 6569      6C617900 
 6570              	.LASF28:
 6571 06fc 73746174 		.ascii	"state\000"
 6571      6500
 6572              	.LASF59:
 6573 0702 72657665 		.ascii	"reverseDirection\000"
 6573      72736544 
 6573      69726563 
 6573      74696F6E 
 6573      00
 6574              	.LASF65:
 6575 0713 6272616B 		.ascii	"brakeLeft\000"
 6575      654C6566 
 6575      7400
 6576              	.LASF157:
 6577 071d 64697370 		.ascii	"displaystring\000"
 6577      6C617973 
 6577      7472696E 
 6577      6700
 6578              	.LASF137:
 6579 072b 6C617374 		.ascii	"last_quad_count1\000"
 6579      5F717561 
 6579      645F636F 
 6579      756E7431 
 6579      00
 6580              	.LASF138:
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 139


 6581 073c 6C617374 		.ascii	"last_quad_count2\000"
 6581      5F717561 
 6581      645F636F 
 6581      756E7432 
 6581      00
 6582              	.LASF112:
 6583 074d 75736250 		.ascii	"usbPutChar\000"
 6583      75744368 
 6583      617200
 6584              	.LASF0:
 6585 0758 7369676E 		.ascii	"signed char\000"
 6585      65642063 
 6585      68617200 
 6586              	.LASF3:
 6587 0764 73686F72 		.ascii	"short unsigned int\000"
 6587      7420756E 
 6587      7369676E 
 6587      65642069 
 6587      6E7400
 6588              	.LASF40:
 6589 0777 726F626F 		.ascii	"robot_orientation\000"
 6589      745F6F72 
 6589      69656E74 
 6589      6174696F 
 6589      6E00
 6590              	.LASF34:
 6591 0789 51554144 		.ascii	"QUAD_STOP\000"
 6591      5F53544F 
 6591      5000
 6592              	.LASF109:
 6593 0793 6D61696E 		.ascii	"main\000"
 6593      00
 6594              	.LASF81:
 6595 0798 42545F74 		.ascii	"BT_txInt\000"
 6595      78496E74 
 6595      00
 6596              	.LASF97:
 6597 07a1 6E657874 		.ascii	"nextSpeed\000"
 6597      53706565 
 6597      6400
 6598              	.LASF84:
 6599 07ab 64697374 		.ascii	"dist\000"
 6599      00
 6600              	.LASF13:
 6601 07b0 75696E74 		.ascii	"uint8\000"
 6601      3800
 6602              	.LASF19:
 6603 07b6 646F7562 		.ascii	"double\000"
 6603      6C6500
 6604              	.LASF143:
 6605 07bd 72696768 		.ascii	"right_duty_cycle\000"
 6605      745F6475 
 6605      74795F63 
 6605      79636C65 
 6605      00
 6606              	.LASF35:
 6607 07ce 52465F53 		.ascii	"RF_STOP\000"
ARM GAS  C:\Users\bwil410\AppData\Local\Temp\ccK1T8jb.s 			page 140


 6607      544F5000 
 6608              	.LASF58:
 6609 07d6 68616E64 		.ascii	"handle_rx_binary\000"
 6609      6C655F72 
 6609      785F6269 
 6609      6E617279 
 6609      00
 6610              	.LASF105:
 6611 07e7 7072696E 		.ascii	"print_RF\000"
 6611      745F5246 
 6611      00
 6612              	.LASF41:
 6613 07f0 67305F78 		.ascii	"g0_xpos\000"
 6613      706F7300 
 6614              	.LASF95:
 6615 07f8 7363616C 		.ascii	"scalingRight\000"
 6615      696E6752 
 6615      69676874 
 6615      00
 6616              	.LASF125:
 6617 0805 666C6167 		.ascii	"flag_KB_string\000"
 6617      5F4B425F 
 6617      73747269 
 6617      6E6700
 6618              	.LASF47:
 6619 0814 67315F73 		.ascii	"g1_speed\000"
 6619      70656564 
 6619      00
 6620              	.LASF170:
 6621 081d 2E5C6D61 		.ascii	".\\main.c\000"
 6621      696E2E63 
 6621      00
 6622              	.LASF151:
 6623 0826 696E6974 		.ascii	"initial_x_pos\000"
 6623      69616C5F 
 6623      785F706F 
 6623      7300
 6624              	.LASF66:
 6625 0834 6272616B 		.ascii	"brakeRight\000"
 6625      65526967 
 6625      687400
 6626              	.LASF76:
 6627 083f 696E6974 		.ascii	"initTrackU\000"
 6627      54726163 
 6627      6B5500
 6628              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
