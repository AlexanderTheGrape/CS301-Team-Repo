ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	prevVoltage,2,2
 262              		.comm	prevVoltage2,2,2
 263              		.global	displaystring
 264 0009 000000   		.align	2
 265              		.type	displaystring, %object
 266              		.size	displaystring, 64
 267              	displaystring:
 268 000c 43533330 		.ascii	"CS301 2016\012\000"
 268      31203230 
 268      31360A00 
 269 0018 00000000 		.space	52
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.comm	line,64,4
 271              		.comm	entry,64,4
 272              		.comm	usbBuffer,64,4
 273              		.comm	buffer_state,32,4
 274              		.comm	system_state,32,4
 275              		.global	prev_movement_state
 276              		.type	prev_movement_state, %object
 277              		.size	prev_movement_state, 1
 278              	prev_movement_state:
 279 004c 03       		.byte	3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 6


 280              		.global	movement_state
 281              		.type	movement_state, %object
 282              		.size	movement_state, 1
 283              	movement_state:
 284 004d 03       		.byte	3
 285              		.global	track_mode
 286              		.bss
 287              		.type	track_mode, %object
 288              		.size	track_mode, 1
 289              	track_mode:
 290 003c 00       		.space	1
 291              		.global	byteCount
 292              		.type	byteCount, %object
 293              		.size	byteCount, 1
 294              	byteCount:
 295 003d 00       		.space	1
 296              		.comm	packet,2,4
 297              		.global	speed
 298              		.data
 299 004e 0000     		.align	3
 300              		.type	speed, %object
 301              		.size	speed, 8
 302              	speed:
 303 0050 00000000 		.word	0
 304 0054 00002E40 		.word	1076756480
 305              		.comm	tracked_direction,4,4
 306              		.global	instructions
 307              		.bss
 308 003e 0000     		.align	2
 309              		.type	instructions, %object
 310              		.size	instructions, 800
 311              	instructions:
 312 0040 00000000 		.space	800
 312      00000000 
 312      00000000 
 312      00000000 
 312      00000000 
 313              		.global	instructionCount
 314              		.align	1
 315              		.type	instructionCount, %object
 316              		.size	instructionCount, 2
 317              	instructionCount:
 318 0360 0000     		.space	2
 319              		.global	instructionLength
 320              		.align	1
 321              		.type	instructionLength, %object
 322              		.size	instructionLength, 2
 323              	instructionLength:
 324 0362 0000     		.space	2
 325              		.global	sensorsDisabled
 326              		.align	2
 327              		.type	sensorsDisabled, %object
 328              		.size	sensorsDisabled, 4
 329              	sensorsDisabled:
 330 0364 00000000 		.space	4
 331              		.global	robot_direction
 332              		.data
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 7


 333              		.align	2
 334              		.type	robot_direction, %object
 335              		.size	robot_direction, 4
 336              	robot_direction:
 337 0058 02000000 		.word	2
 338              		.global	path
 339              		.bss
 340              		.align	2
 341              		.type	path, %object
 342              		.size	path, 9600
 343              	path:
 344 0368 00000000 		.space	9600
 344      00000000 
 344      00000000 
 344      00000000 
 344      00000000 
 345              		.global	start
 346              		.data
 347              		.align	2
 348              		.type	start, %object
 349              		.size	start, 8
 350              	start:
 351 005c 01000000 		.word	1
 352 0060 01000000 		.word	1
 353              		.global	destination
 354              		.align	2
 355              		.type	destination, %object
 356              		.size	destination, 8
 357              	destination:
 358 0064 0D000000 		.word	13
 359 0068 0B000000 		.word	11
 360              		.global	map
 361              		.align	2
 362              		.type	map, %object
 363              		.size	map, 1140
 364              	map:
 365 006c 01000000 		.word	1
 366 0070 01000000 		.word	1
 367 0074 01000000 		.word	1
 368 0078 01000000 		.word	1
 369 007c 01000000 		.word	1
 370 0080 01000000 		.word	1
 371 0084 01000000 		.word	1
 372 0088 01000000 		.word	1
 373 008c 01000000 		.word	1
 374 0090 01000000 		.word	1
 375 0094 01000000 		.word	1
 376 0098 01000000 		.word	1
 377 009c 01000000 		.word	1
 378 00a0 01000000 		.word	1
 379 00a4 01000000 		.word	1
 380 00a8 01000000 		.word	1
 381 00ac 01000000 		.word	1
 382 00b0 01000000 		.word	1
 383 00b4 01000000 		.word	1
 384 00b8 01000000 		.word	1
 385 00bc 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 8


 386 00c0 00000000 		.word	0
 387 00c4 00000000 		.word	0
 388 00c8 00000000 		.word	0
 389 00cc 00000000 		.word	0
 390 00d0 01000000 		.word	1
 391 00d4 00000000 		.word	0
 392 00d8 01000000 		.word	1
 393 00dc 00000000 		.word	0
 394 00e0 00000000 		.word	0
 395 00e4 00000000 		.word	0
 396 00e8 00000000 		.word	0
 397 00ec 00000000 		.word	0
 398 00f0 00000000 		.word	0
 399 00f4 00000000 		.word	0
 400 00f8 00000000 		.word	0
 401 00fc 00000000 		.word	0
 402 0100 01000000 		.word	1
 403 0104 01000000 		.word	1
 404 0108 01000000 		.word	1
 405 010c 01000000 		.word	1
 406 0110 01000000 		.word	1
 407 0114 01000000 		.word	1
 408 0118 00000000 		.word	0
 409 011c 01000000 		.word	1
 410 0120 00000000 		.word	0
 411 0124 01000000 		.word	1
 412 0128 00000000 		.word	0
 413 012c 01000000 		.word	1
 414 0130 00000000 		.word	0
 415 0134 01000000 		.word	1
 416 0138 01000000 		.word	1
 417 013c 01000000 		.word	1
 418 0140 01000000 		.word	1
 419 0144 01000000 		.word	1
 420 0148 00000000 		.word	0
 421 014c 01000000 		.word	1
 422 0150 01000000 		.word	1
 423 0154 00000000 		.word	0
 424 0158 00000000 		.word	0
 425 015c 00000000 		.word	0
 426 0160 01000000 		.word	1
 427 0164 00000000 		.word	0
 428 0168 01000000 		.word	1
 429 016c 00000000 		.word	0
 430 0170 00000000 		.word	0
 431 0174 00000000 		.word	0
 432 0178 01000000 		.word	1
 433 017c 00000000 		.word	0
 434 0180 00000000 		.word	0
 435 0184 00000000 		.word	0
 436 0188 00000000 		.word	0
 437 018c 00000000 		.word	0
 438 0190 01000000 		.word	1
 439 0194 00000000 		.word	0
 440 0198 01000000 		.word	1
 441 019c 01000000 		.word	1
 442 01a0 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 9


 443 01a4 01000000 		.word	1
 444 01a8 00000000 		.word	0
 445 01ac 01000000 		.word	1
 446 01b0 00000000 		.word	0
 447 01b4 01000000 		.word	1
 448 01b8 00000000 		.word	0
 449 01bc 01000000 		.word	1
 450 01c0 01000000 		.word	1
 451 01c4 01000000 		.word	1
 452 01c8 01000000 		.word	1
 453 01cc 01000000 		.word	1
 454 01d0 01000000 		.word	1
 455 01d4 01000000 		.word	1
 456 01d8 00000000 		.word	0
 457 01dc 01000000 		.word	1
 458 01e0 00000000 		.word	0
 459 01e4 01000000 		.word	1
 460 01e8 01000000 		.word	1
 461 01ec 00000000 		.word	0
 462 01f0 01000000 		.word	1
 463 01f4 00000000 		.word	0
 464 01f8 00000000 		.word	0
 465 01fc 00000000 		.word	0
 466 0200 00000000 		.word	0
 467 0204 00000000 		.word	0
 468 0208 00000000 		.word	0
 469 020c 00000000 		.word	0
 470 0210 00000000 		.word	0
 471 0214 00000000 		.word	0
 472 0218 00000000 		.word	0
 473 021c 00000000 		.word	0
 474 0220 01000000 		.word	1
 475 0224 00000000 		.word	0
 476 0228 01000000 		.word	1
 477 022c 00000000 		.word	0
 478 0230 01000000 		.word	1
 479 0234 01000000 		.word	1
 480 0238 00000000 		.word	0
 481 023c 01000000 		.word	1
 482 0240 01000000 		.word	1
 483 0244 01000000 		.word	1
 484 0248 01000000 		.word	1
 485 024c 01000000 		.word	1
 486 0250 01000000 		.word	1
 487 0254 01000000 		.word	1
 488 0258 01000000 		.word	1
 489 025c 01000000 		.word	1
 490 0260 00000000 		.word	0
 491 0264 01000000 		.word	1
 492 0268 00000000 		.word	0
 493 026c 01000000 		.word	1
 494 0270 00000000 		.word	0
 495 0274 01000000 		.word	1
 496 0278 01000000 		.word	1
 497 027c 01000000 		.word	1
 498 0280 01000000 		.word	1
 499 0284 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 10


 500 0288 00000000 		.word	0
 501 028c 00000000 		.word	0
 502 0290 00000000 		.word	0
 503 0294 00000000 		.word	0
 504 0298 00000000 		.word	0
 505 029c 00000000 		.word	0
 506 02a0 00000000 		.word	0
 507 02a4 00000000 		.word	0
 508 02a8 00000000 		.word	0
 509 02ac 00000000 		.word	0
 510 02b0 01000000 		.word	1
 511 02b4 00000000 		.word	0
 512 02b8 01000000 		.word	1
 513 02bc 00000000 		.word	0
 514 02c0 00000000 		.word	0
 515 02c4 00000000 		.word	0
 516 02c8 01000000 		.word	1
 517 02cc 01000000 		.word	1
 518 02d0 01000000 		.word	1
 519 02d4 01000000 		.word	1
 520 02d8 01000000 		.word	1
 521 02dc 01000000 		.word	1
 522 02e0 01000000 		.word	1
 523 02e4 01000000 		.word	1
 524 02e8 00000000 		.word	0
 525 02ec 01000000 		.word	1
 526 02f0 01000000 		.word	1
 527 02f4 01000000 		.word	1
 528 02f8 01000000 		.word	1
 529 02fc 01000000 		.word	1
 530 0300 00000000 		.word	0
 531 0304 01000000 		.word	1
 532 0308 01000000 		.word	1
 533 030c 01000000 		.word	1
 534 0310 00000000 		.word	0
 535 0314 01000000 		.word	1
 536 0318 01000000 		.word	1
 537 031c 00000000 		.word	0
 538 0320 00000000 		.word	0
 539 0324 00000000 		.word	0
 540 0328 00000000 		.word	0
 541 032c 00000000 		.word	0
 542 0330 00000000 		.word	0
 543 0334 00000000 		.word	0
 544 0338 00000000 		.word	0
 545 033c 00000000 		.word	0
 546 0340 00000000 		.word	0
 547 0344 00000000 		.word	0
 548 0348 01000000 		.word	1
 549 034c 00000000 		.word	0
 550 0350 00000000 		.word	0
 551 0354 00000000 		.word	0
 552 0358 01000000 		.word	1
 553 035c 00000000 		.word	0
 554 0360 01000000 		.word	1
 555 0364 01000000 		.word	1
 556 0368 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 11


 557 036c 01000000 		.word	1
 558 0370 01000000 		.word	1
 559 0374 01000000 		.word	1
 560 0378 01000000 		.word	1
 561 037c 01000000 		.word	1
 562 0380 00000000 		.word	0
 563 0384 01000000 		.word	1
 564 0388 01000000 		.word	1
 565 038c 01000000 		.word	1
 566 0390 00000000 		.word	0
 567 0394 01000000 		.word	1
 568 0398 00000000 		.word	0
 569 039c 01000000 		.word	1
 570 03a0 00000000 		.word	0
 571 03a4 01000000 		.word	1
 572 03a8 00000000 		.word	0
 573 03ac 01000000 		.word	1
 574 03b0 01000000 		.word	1
 575 03b4 00000000 		.word	0
 576 03b8 00000000 		.word	0
 577 03bc 00000000 		.word	0
 578 03c0 00000000 		.word	0
 579 03c4 00000000 		.word	0
 580 03c8 01000000 		.word	1
 581 03cc 00000000 		.word	0
 582 03d0 00000000 		.word	0
 583 03d4 00000000 		.word	0
 584 03d8 01000000 		.word	1
 585 03dc 00000000 		.word	0
 586 03e0 00000000 		.word	0
 587 03e4 00000000 		.word	0
 588 03e8 01000000 		.word	1
 589 03ec 00000000 		.word	0
 590 03f0 00000000 		.word	0
 591 03f4 00000000 		.word	0
 592 03f8 01000000 		.word	1
 593 03fc 01000000 		.word	1
 594 0400 00000000 		.word	0
 595 0404 01000000 		.word	1
 596 0408 01000000 		.word	1
 597 040c 01000000 		.word	1
 598 0410 00000000 		.word	0
 599 0414 01000000 		.word	1
 600 0418 01000000 		.word	1
 601 041c 01000000 		.word	1
 602 0420 00000000 		.word	0
 603 0424 01000000 		.word	1
 604 0428 01000000 		.word	1
 605 042c 01000000 		.word	1
 606 0430 00000000 		.word	0
 607 0434 01000000 		.word	1
 608 0438 01000000 		.word	1
 609 043c 01000000 		.word	1
 610 0440 00000000 		.word	0
 611 0444 01000000 		.word	1
 612 0448 01000000 		.word	1
 613 044c 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 12


 614 0450 00000000 		.word	0
 615 0454 00000000 		.word	0
 616 0458 01000000 		.word	1
 617 045c 00000000 		.word	0
 618 0460 00000000 		.word	0
 619 0464 00000000 		.word	0
 620 0468 00000000 		.word	0
 621 046c 00000000 		.word	0
 622 0470 00000000 		.word	0
 623 0474 00000000 		.word	0
 624 0478 01000000 		.word	1
 625 047c 00000000 		.word	0
 626 0480 00000000 		.word	0
 627 0484 00000000 		.word	0
 628 0488 00000000 		.word	0
 629 048c 00000000 		.word	0
 630 0490 01000000 		.word	1
 631 0494 01000000 		.word	1
 632 0498 01000000 		.word	1
 633 049c 01000000 		.word	1
 634 04a0 01000000 		.word	1
 635 04a4 01000000 		.word	1
 636 04a8 01000000 		.word	1
 637 04ac 01000000 		.word	1
 638 04b0 01000000 		.word	1
 639 04b4 01000000 		.word	1
 640 04b8 01000000 		.word	1
 641 04bc 01000000 		.word	1
 642 04c0 01000000 		.word	1
 643 04c4 01000000 		.word	1
 644 04c8 01000000 		.word	1
 645 04cc 01000000 		.word	1
 646 04d0 01000000 		.word	1
 647 04d4 01000000 		.word	1
 648 04d8 01000000 		.word	1
 649 04dc 01000000 		.word	1
 650              		.global	food_list
 651              		.align	2
 652              		.type	food_list, %object
 653              		.size	food_list, 48
 654              	food_list:
 655 04e0 05000000 		.word	5
 656 04e4 0A000000 		.word	10
 657 04e8 05000000 		.word	5
 658 04ec 03000000 		.word	3
 659 04f0 0D000000 		.word	13
 660 04f4 02000000 		.word	2
 661 04f8 00000000 		.space	24
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.global	food_length
 663              		.align	2
 664              		.type	food_length, %object
 665              		.size	food_length, 4
 666              	food_length:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 13


 667 0510 03000000 		.word	3
 668 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 669              		.align	2
 670              		.global	BT_txInt
 671              		.thumb
 672              		.thumb_func
 673              		.type	BT_txInt, %function
 674              	BT_txInt:
 675              	.LFB63:
 676              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 50
  29:.\main.c      **** 
  30:.\main.c      **** #define U_DEADZONE 90000
  31:.\main.c      **** #define TURN_DEADZONE 50000
  32:.\main.c      **** #define S_DEADZONE 10000
  33:.\main.c      **** #define QUAD_PER_UNIT 145
  34:.\main.c      **** 
  35:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  36:.\main.c      **** uint16 instructionCount = 0;
  37:.\main.c      **** uint16 instructionLength = 0;
  38:.\main.c      **** uint32_t sensorsDisabled = 0;
  39:.\main.c      **** 
  40:.\main.c      **** uint32_t robot_direction = 2;
  41:.\main.c      **** 
  42:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  43:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  44:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  45:.\main.c      **** 
  46:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  47:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 14


  48:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  49:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  50:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  51:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  52:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  53:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  54:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  55:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  56:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  57:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  58:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  59:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  60:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  61:.\main.c      **** 
  62:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  63:.\main.c      **** //first number is the y coord, second is x
  64:.\main.c      **** //first number is row, second column
  65:.\main.c      **** 
  66:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  67:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  68:.\main.c      **** //uint8 food_list[6][2]= {{10,1},{1,13},{9,7},{16,13},{17,1}};
  69:.\main.c      **** uint32_t food_length = 3;
  70:.\main.c      **** 
  71:.\main.c      **** void changeToRF();
  72:.\main.c      **** void changeToBT();
  73:.\main.c      **** void brakeMotor();
  74:.\main.c      **** void driveForwards();
  75:.\main.c      **** void initTurnLeft();
  76:.\main.c      **** void initTurnRight();
  77:.\main.c      **** void inittrackLineZ();
  78:.\main.c      **** void trackLineU();
  79:.\main.c      **** void trackLine();
  80:.\main.c      **** void trackLineZ();
  81:.\main.c      **** void initTrackU();
  82:.\main.c      **** void turnLeft();
  83:.\main.c      **** void turnRight();
  84:.\main.c      **** void initForward();
  85:.\main.c      **** void initTurnU();
  86:.\main.c      **** void turnU();
  87:.\main.c      **** void initBrake();
  88:.\main.c      **** void print_ADC();
  89:.\main.c      **** void Quad_Dec_response();
  90:.\main.c      **** void handle_rx_binary();
  91:.\main.c      **** void readFrontSensors();
  92:.\main.c      **** void print_RF();
  93:.\main.c      **** 
  94:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  95:.\main.c      **** //BT
  96:.\main.c      **** CY_ISR(BT_txInt)
  97:.\main.c      **** {
 677              		.loc 1 97 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 15


 684              		.cfi_offset 7, -4
 685 0002 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
  98:.\main.c      ****     
  99:.\main.c      **** }
 687              		.loc 1 99 0
 688 0004 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0006 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 000a 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE63:
 697              		.size	BT_txInt, .-BT_txInt
 698              		.section	.text.adc_isr,"ax",%progbits
 699              		.align	2
 700              		.global	adc_isr
 701              		.thumb
 702              		.thumb_func
 703              		.type	adc_isr, %function
 704              	adc_isr:
 705              	.LFB64:
 100:.\main.c      **** 
 101:.\main.c      **** //ADC:
 102:.\main.c      **** CY_ISR (adc_isr)
 103:.\main.c      **** {
 706              		.loc 1 103 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 104:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 105:.\main.c      ****     adc_result = ADC_GetResult16();
 716              		.loc 1 105 0
 717 0004 FFF7FEFF 		bl	ADC_GetResult16
 718 0008 0346     		mov	r3, r0
 719 000a 1A46     		mov	r2, r3
 720 000c 044B     		ldr	r3, .L3
 721 000e 1A80     		strh	r2, [r3]	@ movhi
 106:.\main.c      ****     flag_receive_ADC = 1;
 722              		.loc 1 106 0
 723 0010 044B     		ldr	r3, .L3+4
 724 0012 0122     		movs	r2, #1
 725 0014 1A70     		strb	r2, [r3]
 107:.\main.c      ****     flag_print_rf = 1;
 726              		.loc 1 107 0
 727 0016 044B     		ldr	r3, .L3+8
 728 0018 0122     		movs	r2, #1
 729 001a 1A70     		strb	r2, [r3]
 108:.\main.c      ****     //LED_Write(~LED_Read());
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 16


 109:.\main.c      **** }
 730              		.loc 1 109 0
 731 001c 80BD     		pop	{r7, pc}
 732              	.L4:
 733 001e 00BF     		.align	2
 734              	.L3:
 735 0020 00000000 		.word	adc_result
 736 0024 00000000 		.word	flag_receive_ADC
 737 0028 00000000 		.word	flag_print_rf
 738              		.cfi_endproc
 739              	.LFE64:
 740              		.size	adc_isr, .-adc_isr
 741              		.global	__aeabi_i2d
 742              		.global	__aeabi_dsub
 743              		.global	__aeabi_dcmpge
 744              		.global	__aeabi_dadd
 745              		.section	.text.isr_quad1,"ax",%progbits
 746              		.align	2
 747              		.global	isr_quad1
 748              		.thumb
 749              		.thumb_func
 750              		.type	isr_quad1, %function
 751              	isr_quad1:
 752              	.LFB65:
 110:.\main.c      **** 
 111:.\main.c      **** CY_ISR (isr_quad1)
 112:.\main.c      **** {
 753              		.loc 1 112 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 B0B5     		push	{r4, r5, r7, lr}
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 4, -16
 760              		.cfi_offset 5, -12
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 113:.\main.c      ****     //LED_Write(~LED_Read());
 114:.\main.c      ****     last_quad_count1 = quad_count1;
 765              		.loc 1 114 0
 766 0004 584B     		ldr	r3, .L13+8
 767 0006 1A88     		ldrh	r2, [r3]
 768 0008 584B     		ldr	r3, .L13+12
 769 000a 1A80     		strh	r2, [r3]	@ movhi
 115:.\main.c      ****     last_quad_count2 = quad_count2;
 770              		.loc 1 115 0
 771 000c 584B     		ldr	r3, .L13+16
 772 000e 1A88     		ldrh	r2, [r3]
 773 0010 584B     		ldr	r3, .L13+20
 774 0012 1A80     		strh	r2, [r3]	@ movhi
 116:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 775              		.loc 1 116 0
 776 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 777 0018 0346     		mov	r3, r0
 778 001a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 17


 779 001c 524B     		ldr	r3, .L13+8
 780 001e 1A80     		strh	r2, [r3]	@ movhi
 117:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 781              		.loc 1 117 0
 782 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 783 0024 0346     		mov	r3, r0
 784 0026 1A46     		mov	r2, r3
 785 0028 514B     		ldr	r3, .L13+16
 786 002a 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 787              		.loc 1 118 0
 788 002c 4E4B     		ldr	r3, .L13+8
 789 002e 1B88     		ldrh	r3, [r3]
 790 0030 9AB2     		uxth	r2, r3
 791 0032 4E4B     		ldr	r3, .L13+12
 792 0034 1B88     		ldrh	r3, [r3]
 793 0036 9BB2     		uxth	r3, r3
 794 0038 D31A     		subs	r3, r2, r3
 795 003a 9BB2     		uxth	r3, r3
 796 003c 9AB2     		uxth	r2, r3
 797 003e 4E4B     		ldr	r3, .L13+24
 798 0040 1A80     		strh	r2, [r3]	@ movhi
 119:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 799              		.loc 1 119 0
 800 0042 4B4B     		ldr	r3, .L13+16
 801 0044 1B88     		ldrh	r3, [r3]
 802 0046 9AB2     		uxth	r2, r3
 803 0048 4A4B     		ldr	r3, .L13+20
 804 004a 1B88     		ldrh	r3, [r3]
 805 004c 9BB2     		uxth	r3, r3
 806 004e D31A     		subs	r3, r2, r3
 807 0050 9BB2     		uxth	r3, r3
 808 0052 9AB2     		uxth	r2, r3
 809 0054 494B     		ldr	r3, .L13+28
 810 0056 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****     
 121:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 811              		.loc 1 121 0
 812 0058 434B     		ldr	r3, .L13+8
 813 005a 1B88     		ldrh	r3, [r3]
 814 005c 1BB2     		sxth	r3, r3
 815 005e 002B     		cmp	r3, #0
 816 0060 B8BF     		it	lt
 817 0062 5B42     		rsblt	r3, r3, #0
 818 0064 40F6B832 		movw	r2, #3000
 819 0068 9342     		cmp	r3, r2
 820 006a 17DD     		ble	.L6
 821              		.loc 1 121 0 is_stmt 0 discriminator 1
 822 006c 444B     		ldr	r3, .L13+32
 823 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 824 0070 012B     		cmp	r3, #1
 825 0072 13D0     		beq	.L6
 826              		.loc 1 121 0 discriminator 2
 827 0074 424B     		ldr	r3, .L13+32
 828 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829 0078 022B     		cmp	r3, #2
 830 007a 0FD0     		beq	.L6
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 18


 831              		.loc 1 121 0 discriminator 3
 832 007c 404B     		ldr	r3, .L13+32
 833 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 0080 072B     		cmp	r3, #7
 835 0082 0BD0     		beq	.L6
 122:.\main.c      ****     {
 123:.\main.c      ****         QuadDec_M1_SetCounter(0);
 836              		.loc 1 123 0 is_stmt 1
 837 0084 0020     		movs	r0, #0
 838 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 124:.\main.c      ****         QuadDec_M2_SetCounter(0);
 839              		.loc 1 124 0
 840 008a 0020     		movs	r0, #0
 841 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 125:.\main.c      ****         quad_count1 = 0;
 842              		.loc 1 125 0
 843 0090 354B     		ldr	r3, .L13+8
 844 0092 0022     		movs	r2, #0
 845 0094 1A80     		strh	r2, [r3]	@ movhi
 126:.\main.c      ****         quad_count2 = 0;
 846              		.loc 1 126 0
 847 0096 364B     		ldr	r3, .L13+16
 848 0098 0022     		movs	r2, #0
 849 009a 1A80     		strh	r2, [r3]	@ movhi
 850              	.L6:
 127:.\main.c      ****     }
 128:.\main.c      **** 
 129:.\main.c      ****     flag_calc_wheelspeed = 1;
 851              		.loc 1 129 0
 852 009c 394B     		ldr	r3, .L13+36
 853 009e 0122     		movs	r2, #1
 854 00a0 1A70     		strb	r2, [r3]
 130:.\main.c      ****     
 131:.\main.c      ****     if(track_mode == DEST_TEST)
 855              		.loc 1 131 0
 856 00a2 394B     		ldr	r3, .L13+40
 857 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 858 00a6 062B     		cmp	r3, #6
 859 00a8 56D1     		bne	.L5
 132:.\main.c      ****     {
 133:.\main.c      ****         //track the distance
 134:.\main.c      ****         accum_dist += quad_diff1;
 860              		.loc 1 134 0
 861 00aa 384B     		ldr	r3, .L13+44
 862 00ac 1B88     		ldrh	r3, [r3]
 863 00ae 9AB2     		uxth	r2, r3
 864 00b0 314B     		ldr	r3, .L13+24
 865 00b2 1B88     		ldrh	r3, [r3]
 866 00b4 9BB2     		uxth	r3, r3
 867 00b6 1344     		add	r3, r3, r2
 868 00b8 9BB2     		uxth	r3, r3
 869 00ba 9AB2     		uxth	r2, r3
 870 00bc 334B     		ldr	r3, .L13+44
 871 00be 1A80     		strh	r2, [r3]	@ movhi
 135:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT * 0.5))
 872              		.loc 1 135 0
 873 00c0 324B     		ldr	r3, .L13+44
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 19


 874 00c2 1B88     		ldrh	r3, [r3]
 875 00c4 1BB2     		sxth	r3, r3
 876 00c6 002B     		cmp	r3, #0
 877 00c8 B8BF     		it	lt
 878 00ca 5B42     		rsblt	r3, r3, #0
 879 00cc 1846     		mov	r0, r3
 880 00ce FFF7FEFF 		bl	__aeabi_i2d
 881 00d2 0446     		mov	r4, r0
 882 00d4 0D46     		mov	r5, r1
 883 00d6 2E4B     		ldr	r3, .L13+48
 884 00d8 1B88     		ldrh	r3, [r3]
 885 00da 1BB2     		sxth	r3, r3
 886 00dc 1846     		mov	r0, r3
 887 00de FFF7FEFF 		bl	__aeabi_i2d
 888 00e2 0246     		mov	r2, r0
 889 00e4 0B46     		mov	r3, r1
 890 00e6 1046     		mov	r0, r2
 891 00e8 1946     		mov	r1, r3
 892 00ea 1DA3     		adr	r3, .L13
 893 00ec D3E90023 		ldrd	r2, [r3]
 894 00f0 FFF7FEFF 		bl	__aeabi_dsub
 895 00f4 0246     		mov	r2, r0
 896 00f6 0B46     		mov	r3, r1
 897 00f8 2046     		mov	r0, r4
 898 00fa 2946     		mov	r1, r5
 899 00fc FFF7FEFF 		bl	__aeabi_dcmpge
 900 0100 0346     		mov	r3, r0
 901 0102 002B     		cmp	r3, #0
 902 0104 02D0     		beq	.L8
 136:.\main.c      ****         {
 137:.\main.c      ****             reached_target = 1;
 903              		.loc 1 137 0
 904 0106 234B     		ldr	r3, .L13+52
 905 0108 0122     		movs	r2, #1
 906 010a 1A70     		strb	r2, [r3]
 907              	.L8:
 138:.\main.c      ****         }
 139:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5))
 908              		.loc 1 139 0
 909 010c 1F4B     		ldr	r3, .L13+44
 910 010e 1B88     		ldrh	r3, [r3]
 911 0110 1BB2     		sxth	r3, r3
 912 0112 002B     		cmp	r3, #0
 913 0114 B8BF     		it	lt
 914 0116 5B42     		rsblt	r3, r3, #0
 915 0118 1846     		mov	r0, r3
 916 011a FFF7FEFF 		bl	__aeabi_i2d
 917 011e 0446     		mov	r4, r0
 918 0120 0D46     		mov	r5, r1
 919 0122 1B4B     		ldr	r3, .L13+48
 920 0124 1B88     		ldrh	r3, [r3]
 921 0126 1BB2     		sxth	r3, r3
 922 0128 1846     		mov	r0, r3
 923 012a FFF7FEFF 		bl	__aeabi_i2d
 924 012e 0246     		mov	r2, r0
 925 0130 0B46     		mov	r3, r1
 926 0132 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 20


 927 0134 1946     		mov	r1, r3
 928 0136 0AA3     		adr	r3, .L13
 929 0138 D3E90023 		ldrd	r2, [r3]
 930 013c FFF7FEFF 		bl	__aeabi_dadd
 931 0140 0246     		mov	r2, r0
 932 0142 0B46     		mov	r3, r1
 933 0144 2046     		mov	r0, r4
 934 0146 2946     		mov	r1, r5
 935 0148 FFF7FEFF 		bl	__aeabi_dcmpge
 936 014c 0346     		mov	r3, r0
 937 014e 002B     		cmp	r3, #0
 938 0150 02D0     		beq	.L5
 140:.\main.c      ****         {
 141:.\main.c      ****             overshot_target = 1;
 939              		.loc 1 141 0
 940 0152 114B     		ldr	r3, .L13+56
 941 0154 0122     		movs	r2, #1
 942 0156 1A70     		strb	r2, [r3]
 943              	.L5:
 142:.\main.c      ****         }
 143:.\main.c      ****     }
 144:.\main.c      **** //    if (track_mode == QUAD_STOP)
 145:.\main.c      **** //    {
 146:.\main.c      **** //        accum_dist += quad_diff1;
 147:.\main.c      **** //        char mes[16];
 148:.\main.c      **** //        sprintf(mes, "dist: %d\r\n", accum_dist);
 149:.\main.c      **** //        UART_PutString(mes);
 150:.\main.c      **** //        if(abs(accum_dist) >= target_distance_quad)
 151:.\main.c      **** //        {
 152:.\main.c      **** //            initBrake();
 153:.\main.c      **** //            track_mode = NO_TRACK;
 154:.\main.c      **** //        }
 155:.\main.c      **** //    } else if (track_mode == RF_STOP)
 156:.\main.c      **** //    { 
 157:.\main.c      **** //        // Do pythag
 158:.\main.c      **** //        double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_sta
 159:.\main.c      **** //        if (dist >= target_distance_cm)
 160:.\main.c      **** //        {
 161:.\main.c      **** //            initBrake();
 162:.\main.c      **** //            track_mode = NO_TRACK;
 163:.\main.c      **** //        }
 164:.\main.c      **** //    }
 165:.\main.c      **** }
 944              		.loc 1 165 0
 945 0158 B0BD     		pop	{r4, r5, r7, pc}
 946              	.L14:
 947 015a 00BFAFF3 		.align	3
 947      0080
 948              	.L13:
 949 0160 00000000 		.word	0
 950 0164 00205240 		.word	1079123968
 951 0168 00000000 		.word	quad_count1
 952 016c 00000000 		.word	last_quad_count1
 953 0170 00000000 		.word	quad_count2
 954 0174 00000000 		.word	last_quad_count2
 955 0178 00000000 		.word	quad_diff1
 956 017c 00000000 		.word	quad_diff2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 21


 957 0180 00000000 		.word	movement_state
 958 0184 00000000 		.word	flag_calc_wheelspeed
 959 0188 00000000 		.word	track_mode
 960 018c 00000000 		.word	accum_dist
 961 0190 00000000 		.word	target_distance_quad
 962 0194 00000000 		.word	reached_target
 963 0198 00000000 		.word	overshot_target
 964              		.cfi_endproc
 965              	.LFE65:
 966              		.size	isr_quad1, .-isr_quad1
 967 019c AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 968              		.align	2
 969              		.global	isr_turn_timer
 970              		.thumb
 971              		.thumb_func
 972              		.type	isr_turn_timer, %function
 973              	isr_turn_timer:
 974              	.LFB66:
 166:.\main.c      **** 
 167:.\main.c      **** CY_ISR(isr_turn_timer)
 168:.\main.c      **** {
 975              		.loc 1 168 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979 0000 80B5     		push	{r7, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 00AF     		add	r7, sp, #0
 984              		.cfi_def_cfa_register 7
 169:.\main.c      ****     if(movement_state == LTURN)
 985              		.loc 1 169 0
 986 0004 264B     		ldr	r3, .L21
 987 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 988 0008 012B     		cmp	r3, #1
 989 000a 15D1     		bne	.L16
 170:.\main.c      ****     {
 171:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 990              		.loc 1 171 0
 991 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 992 0010 0346     		mov	r3, r0
 993 0012 1A46     		mov	r2, r3
 994 0014 234B     		ldr	r3, .L21+4
 995 0016 1B88     		ldrh	r3, [r3]
 996 0018 1BB2     		sxth	r3, r3
 997 001a D31A     		subs	r3, r2, r3
 998 001c 002B     		cmp	r3, #0
 999 001e B8BF     		it	lt
 1000 0020 5B42     		rsblt	r3, r3, #0
 1001 0022 CF2B     		cmp	r3, #207
 1002 0024 3BDD     		ble	.L15
 172:.\main.c      ****         {
 173:.\main.c      ****             //movement_state = STOPPED;
 174:.\main.c      ****             brakeMotor();
 1003              		.loc 1 174 0
 1004 0026 FFF7FEFF 		bl	brakeMotor
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 22


 175:.\main.c      ****             movement_state = prev_movement_state;
 1005              		.loc 1 175 0
 1006 002a 1F4B     		ldr	r3, .L21+8
 1007 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1008 002e 1C4B     		ldr	r3, .L21
 1009 0030 1A70     		strb	r2, [r3]
 176:.\main.c      ****             Timer_2_Stop();
 1010              		.loc 1 176 0
 1011 0032 FFF7FEFF 		bl	Timer_2_Stop
 1012 0036 32E0     		b	.L15
 1013              	.L16:
 177:.\main.c      ****         }
 178:.\main.c      ****     }
 179:.\main.c      ****     else if (movement_state == RTURN)
 1014              		.loc 1 179 0
 1015 0038 194B     		ldr	r3, .L21
 1016 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 003c 022B     		cmp	r3, #2
 1018 003e 15D1     		bne	.L19
 180:.\main.c      ****     {
 181:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1019              		.loc 1 181 0
 1020 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1021 0044 0346     		mov	r3, r0
 1022 0046 1A46     		mov	r2, r3
 1023 0048 164B     		ldr	r3, .L21+4
 1024 004a 1B88     		ldrh	r3, [r3]
 1025 004c 1BB2     		sxth	r3, r3
 1026 004e D31A     		subs	r3, r2, r3
 1027 0050 002B     		cmp	r3, #0
 1028 0052 B8BF     		it	lt
 1029 0054 5B42     		rsblt	r3, r3, #0
 1030 0056 CF2B     		cmp	r3, #207
 1031 0058 21DD     		ble	.L15
 182:.\main.c      ****         {
 183:.\main.c      ****             //movement_state = STOPPED;
 184:.\main.c      ****             brakeMotor();
 1032              		.loc 1 184 0
 1033 005a FFF7FEFF 		bl	brakeMotor
 185:.\main.c      ****             movement_state = prev_movement_state;
 1034              		.loc 1 185 0
 1035 005e 124B     		ldr	r3, .L21+8
 1036 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1037 0062 0F4B     		ldr	r3, .L21
 1038 0064 1A70     		strb	r2, [r3]
 186:.\main.c      ****             Timer_2_Stop();
 1039              		.loc 1 186 0
 1040 0066 FFF7FEFF 		bl	Timer_2_Stop
 1041 006a 18E0     		b	.L15
 1042              	.L19:
 187:.\main.c      ****         }
 188:.\main.c      ****     }
 189:.\main.c      ****     else if (movement_state == UTURN)
 1043              		.loc 1 189 0
 1044 006c 0C4B     		ldr	r3, .L21
 1045 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1046 0070 072B     		cmp	r3, #7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 23


 1047 0072 14D1     		bne	.L15
 190:.\main.c      ****     {
 191:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1048              		.loc 1 191 0
 1049 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1050 0078 0346     		mov	r3, r0
 1051 007a 1A46     		mov	r2, r3
 1052 007c 094B     		ldr	r3, .L21+4
 1053 007e 1B88     		ldrh	r3, [r3]
 1054 0080 1BB2     		sxth	r3, r3
 1055 0082 D31A     		subs	r3, r2, r3
 1056 0084 002B     		cmp	r3, #0
 1057 0086 B8BF     		it	lt
 1058 0088 5B42     		rsblt	r3, r3, #0
 1059 008a CF2B     		cmp	r3, #207
 1060 008c 07DD     		ble	.L15
 192:.\main.c      ****         {
 193:.\main.c      ****             //movement_state = STOPPED;
 194:.\main.c      ****             brakeMotor();
 1061              		.loc 1 194 0
 1062 008e FFF7FEFF 		bl	brakeMotor
 195:.\main.c      ****             movement_state = prev_movement_state;
 1063              		.loc 1 195 0
 1064 0092 054B     		ldr	r3, .L21+8
 1065 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1066 0096 024B     		ldr	r3, .L21
 1067 0098 1A70     		strb	r2, [r3]
 196:.\main.c      ****             Timer_2_Stop();
 1068              		.loc 1 196 0
 1069 009a FFF7FEFF 		bl	Timer_2_Stop
 1070              	.L15:
 197:.\main.c      ****         }
 198:.\main.c      ****     }
 199:.\main.c      **** }
 1071              		.loc 1 199 0
 1072 009e 80BD     		pop	{r7, pc}
 1073              	.L22:
 1074              		.align	2
 1075              	.L21:
 1076 00a0 00000000 		.word	movement_state
 1077 00a4 00000000 		.word	start_turn_count
 1078 00a8 00000000 		.word	prev_movement_state
 1079              		.cfi_endproc
 1080              	.LFE66:
 1081              		.size	isr_turn_timer, .-isr_turn_timer
 1082              		.section	.text.Stop_on_line,"ax",%progbits
 1083              		.align	2
 1084              		.global	Stop_on_line
 1085              		.thumb
 1086              		.thumb_func
 1087              		.type	Stop_on_line, %function
 1088              	Stop_on_line:
 1089              	.LFB67:
 200:.\main.c      **** 
 201:.\main.c      **** 
 202:.\main.c      **** CY_ISR (Stop_on_line)
 203:.\main.c      **** {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 24


 1090              		.loc 1 203 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 1095 0000 80B4     		push	{r7}
 1096              		.cfi_def_cfa_offset 4
 1097              		.cfi_offset 7, -4
 1098 0002 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 204:.\main.c      ****     movement_state = STOPPED;
 1100              		.loc 1 204 0
 1101 0004 054B     		ldr	r3, .L25
 1102 0006 0322     		movs	r2, #3
 1103 0008 1A70     		strb	r2, [r3]
 205:.\main.c      ****     if(movement_state != DRIVE) return;
 1104              		.loc 1 205 0
 1105 000a 044B     		ldr	r3, .L25
 1106 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 000e 002B     		cmp	r3, #0
 1108 0010 00D0     		beq	.L23
 1109 0012 00BF     		nop
 1110              	.L23:
 206:.\main.c      ****     //initTurnLeft();
 207:.\main.c      **** }
 1111              		.loc 1 207 0
 1112 0014 BD46     		mov	sp, r7
 1113              		.cfi_def_cfa_register 13
 1114              		@ sp needed
 1115 0016 5DF8047B 		ldr	r7, [sp], #4
 1116              		.cfi_restore 7
 1117              		.cfi_def_cfa_offset 0
 1118 001a 7047     		bx	lr
 1119              	.L26:
 1120              		.align	2
 1121              	.L25:
 1122 001c 00000000 		.word	movement_state
 1123              		.cfi_endproc
 1124              	.LFE67:
 1125              		.size	Stop_on_line, .-Stop_on_line
 1126              		.section	.rodata
 1127              		.align	2
 1128              	.LC0:
 1129 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1129      74696E67 
 1129      20726F62 
 1129      6F74210D 
 1129      0A00
 1130              		.section	.text.button,"ax",%progbits
 1131              		.align	2
 1132              		.global	button
 1133              		.thumb
 1134              		.thumb_func
 1135              		.type	button, %function
 1136              	button:
 1137              	.LFB68:
 208:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 25


 209:.\main.c      **** CY_ISR (button)
 210:.\main.c      **** {
 1138              		.loc 1 210 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142 0000 80B5     		push	{r7, lr}
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 00AF     		add	r7, sp, #0
 1147              		.cfi_def_cfa_register 7
 211:.\main.c      ****     if(BT_ENABLED)
 1148              		.loc 1 211 0
 1149 0004 054B     		ldr	r3, .L29
 1150 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1151 0008 002B     		cmp	r3, #0
 1152 000a 02D0     		beq	.L28
 212:.\main.c      ****     {
 213:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1153              		.loc 1 213 0
 1154 000c 0448     		ldr	r0, .L29+4
 1155 000e FFF7FEFF 		bl	UART_PutString
 1156              	.L28:
 214:.\main.c      ****     }
 215:.\main.c      ****     movement_state = DRIVE;
 1157              		.loc 1 215 0
 1158 0012 044B     		ldr	r3, .L29+8
 1159 0014 0022     		movs	r2, #0
 1160 0016 1A70     		strb	r2, [r3]
 216:.\main.c      **** }
 1161              		.loc 1 216 0
 1162 0018 80BD     		pop	{r7, pc}
 1163              	.L30:
 1164 001a 00BF     		.align	2
 1165              	.L29:
 1166 001c 00000000 		.word	BT_ENABLED
 1167 0020 00000000 		.word	.LC0
 1168 0024 00000000 		.word	movement_state
 1169              		.cfi_endproc
 1170              	.LFE68:
 1171              		.size	button, .-button
 1172              		.section	.text.isr_adcTimer,"ax",%progbits
 1173              		.align	2
 1174              		.global	isr_adcTimer
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	isr_adcTimer, %function
 1178              	isr_adcTimer:
 1179              	.LFB69:
 217:.\main.c      **** 
 218:.\main.c      **** CY_ISR(isr_adcTimer)
 219:.\main.c      **** {
 1180              		.loc 1 219 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 26


 1184 0000 80B5     		push	{r7, lr}
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 7, -8
 1187              		.cfi_offset 14, -4
 1188 0002 00AF     		add	r7, sp, #0
 1189              		.cfi_def_cfa_register 7
 220:.\main.c      ****     ADC_StartConvert();
 1190              		.loc 1 220 0
 1191 0004 FFF7FEFF 		bl	ADC_StartConvert
 221:.\main.c      **** }
 1192              		.loc 1 221 0
 1193 0008 80BD     		pop	{r7, pc}
 1194              		.cfi_endproc
 1195              	.LFE69:
 1196              		.size	isr_adcTimer, .-isr_adcTimer
 1197 000a 00BF     		.section	.rodata
 1198 0012 0000     		.align	2
 1199              	.LC1:
 1200 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1200      7A6F6E65 
 1200      206C6566 
 1200      740D0A00 
 1201              		.section	.text.isr_deadzone,"ax",%progbits
 1202              		.align	2
 1203              		.global	isr_deadzone
 1204              		.thumb
 1205              		.thumb_func
 1206              		.type	isr_deadzone, %function
 1207              	isr_deadzone:
 1208              	.LFB70:
 222:.\main.c      **** 
 223:.\main.c      **** CY_ISR(isr_deadzone)
 224:.\main.c      **** {
 1209              		.loc 1 224 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 1, uses_anonymous_args = 0
 1213 0000 80B5     		push	{r7, lr}
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 00AF     		add	r7, sp, #0
 1218              		.cfi_def_cfa_register 7
 225:.\main.c      ****     sensorsDisabled = 0;
 1219              		.loc 1 225 0
 1220 0004 054B     		ldr	r3, .L33
 1221 0006 0022     		movs	r2, #0
 1222 0008 1A60     		str	r2, [r3]
 226:.\main.c      ****     deadzone = 0;
 1223              		.loc 1 226 0
 1224 000a 054B     		ldr	r3, .L33+4
 1225 000c 0022     		movs	r2, #0
 1226 000e 1A70     		strb	r2, [r3]
 227:.\main.c      ****     Timer_Deadzone_Stop();
 1227              		.loc 1 227 0
 1228 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 228:.\main.c      ****     UART_PutString("Deadzone left\r\n");
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 27


 1229              		.loc 1 228 0
 1230 0014 0348     		ldr	r0, .L33+8
 1231 0016 FFF7FEFF 		bl	UART_PutString
 229:.\main.c      **** }
 1232              		.loc 1 229 0
 1233 001a 80BD     		pop	{r7, pc}
 1234              	.L34:
 1235              		.align	2
 1236              	.L33:
 1237 001c 00000000 		.word	sensorsDisabled
 1238 0020 00000000 		.word	deadzone
 1239 0024 14000000 		.word	.LC1
 1240              		.cfi_endproc
 1241              	.LFE70:
 1242              		.size	isr_deadzone, .-isr_deadzone
 1243              		.section	.rodata
 1244              		.align	2
 1245              	.LC2:
 1246 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1246      20747261 
 1246      76656C3A 
 1246      2025640D 
 1246      0A00
 1247 0036 0000     		.align	2
 1248              	.LC3:
 1249 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1249      67657265 
 1249      64206174 
 1249      20696E74 
 1249      65727365 
 1250 0055 000000   		.align	2
 1251              	.LC4:
 1252 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1252      7A6F6E65 
 1252      20656E74 
 1252      65726564 
 1252      210D0A00 
 1253              		.align	2
 1254              	.LC5:
 1255 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1255      65742064 
 1255      6973743A 
 1255      2025640D 
 1255      0A00
 1256 007e 0000     		.align	2
 1257              	.LC6:
 1258 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1258      67657265 
 1258      64206174 
 1258      20776869 
 1258      7465206C 
 1259              		.align	2
 1260              	.LC7:
 1261 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1261      67657265 
 1261      64206174 
 1261      20717561 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 28


 1261      6420636F 
 1262              		.section	.text.main,"ax",%progbits
 1263              		.align	2
 1264              		.global	main
 1265              		.thumb
 1266              		.thumb_func
 1267              		.type	main, %function
 1268              	main:
 1269              	.LFB71:
 230:.\main.c      **** 
 231:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 232:.\main.c      **** 
 233:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 234:.\main.c      **** int main()
 235:.\main.c      **** {  
 1270              		.loc 1 235 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 64
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274 0000 80B5     		push	{r7, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 7, -8
 1277              		.cfi_offset 14, -4
 1278 0002 90B0     		sub	sp, sp, #64
 1279              		.cfi_def_cfa_offset 72
 1280 0004 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
 236:.\main.c      **** 
 237:.\main.c      **** // ----- INITIALIZATIONS ----------
 238:.\main.c      ****     CYGlobalIntEnable;
 1282              		.loc 1 238 0
 1283              	@ 238 ".\main.c" 1
 1284 0006 62B6     		CPSIE   i
 1285              	@ 0 "" 2
 239:.\main.c      ****     if(ENABLE_PWM)
 240:.\main.c      ****     {
 241:.\main.c      ****         PWM_1_Start();// starting the pwm
 1286              		.loc 1 241 0
 1287              		.thumb
 1288 0008 FFF7FEFF 		bl	PWM_1_Start
 242:.\main.c      ****         PWM_2_Start();// starting the pwm
 1289              		.loc 1 242 0
 1290 000c FFF7FEFF 		bl	PWM_2_Start
 243:.\main.c      ****     }
 244:.\main.c      ****     
 245:.\main.c      ****     if(ENABLE_ADC)
 246:.\main.c      ****     {
 247:.\main.c      ****         ADC_Start();
 248:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 249:.\main.c      ****         //ADC_StartConvert();
 250:.\main.c      ****         
 251:.\main.c      ****         //start the ADC timer for software trigger mode
 252:.\main.c      ****         Timer_TS_Start();
 253:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 254:.\main.c      ****     }
 255:.\main.c      ****     
 256:.\main.c      ****     if (ENABLE_QUAD)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 29


 257:.\main.c      ****     {
 258:.\main.c      ****         QuadDec_M1_Start();
 1291              		.loc 1 258 0
 1292 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 259:.\main.c      ****         QuadDec_M2_Start();
 1293              		.loc 1 259 0
 1294 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 260:.\main.c      ****         
 261:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1295              		.loc 1 261 0
 1296 0018 AD48     		ldr	r0, .L100
 1297 001a FFF7FEFF 		bl	isr_quad1_StartEx
 262:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1298              		.loc 1 262 0
 1299 001e AD48     		ldr	r0, .L100+4
 1300 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 263:.\main.c      ****         
 264:.\main.c      ****         Timer_1_Start();
 1301              		.loc 1 264 0
 1302 0024 FFF7FEFF 		bl	Timer_1_Start
 265:.\main.c      ****     }
 266:.\main.c      ****     
 267:.\main.c      ****     if(ENABLE_STOP){
 268:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 269:.\main.c      ****         
 270:.\main.c      ****     }
 271:.\main.c      ****     isr_button_StartEx(button);
 1303              		.loc 1 271 0
 1304 0028 AB48     		ldr	r0, .L100+8
 1305 002a FFF7FEFF 		bl	isr_button_StartEx
 272:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1306              		.loc 1 272 0
 1307 002e AB48     		ldr	r0, .L100+12
 1308 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 273:.\main.c      **** 
 274:.\main.c      ****     // ------USB SETUP ----------------    
 275:.\main.c      ****     if (USE_USB){    
 276:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1309              		.loc 1 276 0
 1310 0034 0020     		movs	r0, #0
 1311 0036 0121     		movs	r1, #1
 1312 0038 FFF7FEFF 		bl	USBUART_Start
 277:.\main.c      ****         if (USBUART_GetConfiguration())
 1313              		.loc 1 277 0
 1314 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1315 0040 0346     		mov	r3, r0
 1316 0042 002B     		cmp	r3, #0
 1317 0044 01D0     		beq	.L36
 278:.\main.c      ****             {
 279:.\main.c      ****                  USBUART_CDC_Init();
 1318              		.loc 1 279 0
 1319 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1320              	.L36:
 280:.\main.c      ****             }
 281:.\main.c      ****     }
 282:.\main.c      ****     
 283:.\main.c      ****     if(BIN_ENABLED){
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 30


 1321              		.loc 1 283 0
 1322 004a A54B     		ldr	r3, .L100+16
 1323 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1324 004e 002B     		cmp	r3, #0
 1325 0050 01D0     		beq	.L37
 284:.\main.c      ****         changeToRF();
 1326              		.loc 1 284 0
 1327 0052 FFF7FEFF 		bl	changeToRF
 1328              	.L37:
 285:.\main.c      ****     }
 286:.\main.c      ****     
 287:.\main.c      ****     if(BT_ENABLED){
 1329              		.loc 1 287 0
 1330 0056 A34B     		ldr	r3, .L100+20
 1331 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 005a 002B     		cmp	r3, #0
 1333 005c 01D0     		beq	.L38
 288:.\main.c      ****         changeToBT();
 1334              		.loc 1 288 0
 1335 005e FFF7FEFF 		bl	changeToBT
 1336              	.L38:
 289:.\main.c      ****     }
 290:.\main.c      ****     
 291:.\main.c      ****     uint16 actionDebounce = 0;
 1337              		.loc 1 291 0
 1338 0062 0023     		movs	r3, #0
 1339 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1340              	.L96:
 1341              	.LBB2:
 292:.\main.c      ****     
 293:.\main.c      ****     //usbPutString("Started");
 294:.\main.c      ****     for(;;)
 295:.\main.c      ****     {
 296:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 297:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1342              		.loc 1 297 0
 1343 0066 FFF7FEFF 		bl	Quad_Dec_response
 298:.\main.c      ****         if(BIN_ENABLED == 1)
 1344              		.loc 1 298 0
 1345 006a 9D4B     		ldr	r3, .L100+16
 1346 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1347 006e 012B     		cmp	r3, #1
 1348 0070 03D1     		bne	.L39
 299:.\main.c      ****         {
 300:.\main.c      ****             handle_rx_binary();
 1349              		.loc 1 300 0
 1350 0072 FFF7FEFF 		bl	handle_rx_binary
 301:.\main.c      ****             print_RF();
 1351              		.loc 1 301 0
 1352 0076 FFF7FEFF 		bl	print_RF
 1353              	.L39:
 302:.\main.c      ****         }
 303:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 304:.\main.c      ****         
 305:.\main.c      ****         uint8 frontSensors[5];
 306:.\main.c      ****         readFrontSensors(frontSensors);
 1354              		.loc 1 306 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 31


 1355 007a 07F13403 		add	r3, r7, #52
 1356 007e 1846     		mov	r0, r3
 1357 0080 FFF7FEFF 		bl	readFrontSensors
 307:.\main.c      ****         
 308:.\main.c      ****         switch(track_mode)
 1358              		.loc 1 308 0
 1359 0084 984B     		ldr	r3, .L100+24
 1360 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1361 0088 072B     		cmp	r3, #7
 1362 008a 00F2EA82 		bhi	.L40
 1363 008e 01A2     		adr	r2, .L42
 1364 0090 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1365              		.p2align 2
 1366              	.L42:
 1367 0094 63060000 		.word	.L40+1
 1368 0098 63060000 		.word	.L40+1
 1369 009c 63060000 		.word	.L40+1
 1370 00a0 B5000000 		.word	.L45+1
 1371 00a4 63060000 		.word	.L40+1
 1372 00a8 F9000000 		.word	.L47+1
 1373 00ac 1F010000 		.word	.L48+1
 1374 00b0 1F010000 		.word	.L48+1
 1375              		.p2align 1
 1376              	.L45:
 309:.\main.c      ****         {
 310:.\main.c      ****             case SQUARE_TRACK:
 311:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1377              		.loc 1 311 0
 1378 00b4 8D4B     		ldr	r3, .L100+28
 1379 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 00b8 012B     		cmp	r3, #1
 1381 00ba 1CD0     		beq	.L49
 1382              		.loc 1 311 0 is_stmt 0 discriminator 1
 1383 00bc 8B4B     		ldr	r3, .L100+28
 1384 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1385 00c0 022B     		cmp	r3, #2
 1386 00c2 18D0     		beq	.L49
 312:.\main.c      ****                 {
 313:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1387              		.loc 1 313 0 is_stmt 1
 1388 00c4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1389 00c8 012B     		cmp	r3, #1
 1390 00ca 06D1     		bne	.L50
 1391              		.loc 1 313 0 is_stmt 0 discriminator 1
 1392 00cc 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1393 00d0 012B     		cmp	r3, #1
 1394 00d2 02D1     		bne	.L50
 314:.\main.c      ****                         initTurnLeft();
 1395              		.loc 1 314 0 is_stmt 1
 1396 00d4 FFF7FEFF 		bl	initTurnLeft
 1397 00d8 0DE0     		b	.L49
 1398              	.L50:
 315:.\main.c      ****                     }
 316:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1399              		.loc 1 316 0
 1400 00da 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1401 00de 012B     		cmp	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 32


 1402 00e0 06D1     		bne	.L51
 1403              		.loc 1 316 0 is_stmt 0 discriminator 1
 1404 00e2 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1405 00e6 012B     		cmp	r3, #1
 1406 00e8 02D1     		bne	.L51
 317:.\main.c      ****                     {
 318:.\main.c      ****                         initTurnRight();
 1407              		.loc 1 318 0 is_stmt 1
 1408 00ea FFF7FEFF 		bl	initTurnRight
 1409 00ee 02E0     		b	.L49
 1410              	.L51:
 319:.\main.c      ****                     }
 320:.\main.c      ****                     else inittrackLineZ();
 1411              		.loc 1 320 0
 1412 00f0 FFF7FEFF 		bl	inittrackLineZ
 321:.\main.c      ****                 }
 322:.\main.c      ****             break;
 1413              		.loc 1 322 0
 1414 00f4 B5E2     		b	.L40
 1415              	.L49:
 1416 00f6 B4E2     		b	.L40
 1417              	.L47:
 323:.\main.c      ****             case NO_TRACK:
 324:.\main.c      ****             break;
 325:.\main.c      ****             case CURVE_TRACK:
 326:.\main.c      ****             break;
 327:.\main.c      ****             case U_TRACK:
 328:.\main.c      ****             break;
 329:.\main.c      ****             case QUAD_STOP:
 330:.\main.c      ****             break;
 331:.\main.c      ****             case RF_STOP:
 332:.\main.c      ****                 if(initial_pos_valid == 1)
 1418              		.loc 1 332 0
 1419 00f8 7D4B     		ldr	r3, .L100+32
 1420 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1421 00fc 012B     		cmp	r3, #1
 1422 00fe 0DD1     		bne	.L52
 333:.\main.c      ****                 {
 334:.\main.c      ****                     //changeToBT();
 335:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 336:.\main.c      ****                     //changeToRF();
 337:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1423              		.loc 1 337 0
 1424 0100 7C4B     		ldr	r3, .L100+36
 1425 0102 5A88     		ldrh	r2, [r3, #2]
 1426 0104 7C4B     		ldr	r3, .L100+40
 1427 0106 1A80     		strh	r2, [r3]	@ movhi
 338:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1428              		.loc 1 338 0
 1429 0108 7A4B     		ldr	r3, .L100+36
 1430 010a 9A88     		ldrh	r2, [r3, #4]
 1431 010c 7B4B     		ldr	r3, .L100+44
 1432 010e 1A80     		strh	r2, [r3]	@ movhi
 339:.\main.c      ****                     initial_pos_valid = 2;
 1433              		.loc 1 339 0
 1434 0110 774B     		ldr	r3, .L100+32
 1435 0112 0222     		movs	r2, #2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 33


 1436 0114 1A70     		strb	r2, [r3]
 340:.\main.c      ****                     initForward();
 1437              		.loc 1 340 0
 1438 0116 FFF7FEFF 		bl	initForward
 341:.\main.c      ****                 }
 342:.\main.c      ****             break;
 1439              		.loc 1 342 0
 1440 011a A2E2     		b	.L40
 1441              	.L52:
 1442 011c A1E2     		b	.L40
 1443              	.L48:
 343:.\main.c      ****             case MAP_TRAVERSE:
 344:.\main.c      ****             case DEST_TEST:
 345:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1444              		.loc 1 345 0
 1445 011e 734B     		ldr	r3, .L100+28
 1446 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 0122 012B     		cmp	r3, #1
 1448 0124 00F09C82 		beq	.L53
 1449              		.loc 1 345 0 is_stmt 0 discriminator 1
 1450 0128 704B     		ldr	r3, .L100+28
 1451 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1452 012c 022B     		cmp	r3, #2
 1453 012e 00F09782 		beq	.L53
 1454              		.loc 1 345 0 discriminator 2
 1455 0132 6E4B     		ldr	r3, .L100+28
 1456 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1457 0136 072B     		cmp	r3, #7
 1458 0138 00F09282 		beq	.L53
 1459              	.LBB3:
 346:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 347:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1460              		.loc 1 347 0 is_stmt 1
 1461 013c 704B     		ldr	r3, .L100+48
 1462 013e 1B88     		ldrh	r3, [r3]
 1463 0140 1A46     		mov	r2, r3
 1464 0142 704B     		ldr	r3, .L100+52
 1465 0144 9B5C     		ldrb	r3, [r3, r2]
 1466 0146 87F83D30 		strb	r3, [r7, #61]
 348:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1467              		.loc 1 348 0
 1468 014a 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1469 014e 012B     		cmp	r3, #1
 1470 0150 03D1     		bne	.L54
 1471              		.loc 1 348 0 is_stmt 0 discriminator 1
 1472 0152 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1473 0156 012B     		cmp	r3, #1
 1474 0158 09D0     		beq	.L55
 1475              	.L54:
 1476              		.loc 1 348 0 discriminator 3
 1477 015a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1478 015e 012B     		cmp	r3, #1
 1479 0160 40F00E81 		bne	.L56
 1480              		.loc 1 348 0 discriminator 4
 1481 0164 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1482 0168 012B     		cmp	r3, #1
 1483 016a 40F00981 		bne	.L56
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 34


 1484              	.L55:
 349:.\main.c      ****                         if(sensorsDisabled == 0)
 1485              		.loc 1 349 0 is_stmt 1
 1486 016e 664B     		ldr	r3, .L100+56
 1487 0170 1B68     		ldr	r3, [r3]
 1488 0172 002B     		cmp	r3, #0
 1489 0174 40F00381 		bne	.L57
 350:.\main.c      ****                         {
 351:.\main.c      ****                             actionDebounce++;
 1490              		.loc 1 351 0
 1491 0178 FB8F     		ldrh	r3, [r7, #62]
 1492 017a 0133     		adds	r3, r3, #1
 1493 017c FB87     		strh	r3, [r7, #62]	@ movhi
 352:.\main.c      ****                             if(actionDebounce >= 800)
 1494              		.loc 1 352 0
 1495 017e FB8F     		ldrh	r3, [r7, #62]
 1496 0180 B3F5487F 		cmp	r3, #800
 1497 0184 C0F0FB80 		bcc	.L57
 1498              	.LBB4:
 353:.\main.c      ****                             {
 354:.\main.c      ****                                 char mes[16];
 355:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1499              		.loc 1 355 0
 1500 0188 604B     		ldr	r3, .L100+60
 1501 018a 1B88     		ldrh	r3, [r3]
 1502 018c 1BB2     		sxth	r3, r3
 1503 018e 07F12402 		add	r2, r7, #36
 1504 0192 1046     		mov	r0, r2
 1505 0194 5E49     		ldr	r1, .L100+64
 1506 0196 1A46     		mov	r2, r3
 1507 0198 FFF7FEFF 		bl	sprintf
 356:.\main.c      ****                                  UART_PutString(mes);
 1508              		.loc 1 356 0
 1509 019c 07F12403 		add	r3, r7, #36
 1510 01a0 1846     		mov	r0, r3
 1511 01a2 FFF7FEFF 		bl	UART_PutString
 357:.\main.c      ****                             if(reached_target == 1)
 1512              		.loc 1 357 0
 1513 01a6 5B4B     		ldr	r3, .L100+68
 1514 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515 01aa 012B     		cmp	r3, #1
 1516 01ac 40F0E780 		bne	.L57
 1517              	.LBB5:
 358:.\main.c      ****                             {
 359:.\main.c      ****                                 if(nextStep == 'D')
 1518              		.loc 1 359 0
 1519 01b0 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1520 01b4 442B     		cmp	r3, #68
 1521 01b6 0CD1     		bne	.L59
 360:.\main.c      ****                                 {
 361:.\main.c      ****                                     instructionCount += 2;
 1522              		.loc 1 361 0
 1523 01b8 514B     		ldr	r3, .L100+48
 1524 01ba 1B88     		ldrh	r3, [r3]
 1525 01bc 0233     		adds	r3, r3, #2
 1526 01be 9AB2     		uxth	r2, r3
 1527 01c0 4F4B     		ldr	r3, .L100+48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 35


 1528 01c2 1A80     		strh	r2, [r3]	@ movhi
 362:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1529              		.loc 1 362 0
 1530 01c4 4E4B     		ldr	r3, .L100+48
 1531 01c6 1B88     		ldrh	r3, [r3]
 1532 01c8 1A46     		mov	r2, r3
 1533 01ca 4E4B     		ldr	r3, .L100+52
 1534 01cc 9B5C     		ldrb	r3, [r3, r2]
 1535 01ce 87F83D30 		strb	r3, [r7, #61]
 1536              	.L59:
 363:.\main.c      ****                                 }
 364:.\main.c      ****                                 
 365:.\main.c      ****                                 sensorsDisabled = 1;
 1537              		.loc 1 365 0
 1538 01d2 4D4B     		ldr	r3, .L100+56
 1539 01d4 0122     		movs	r2, #1
 1540 01d6 1A60     		str	r2, [r3]
 366:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1541              		.loc 1 366 0
 1542 01d8 4F48     		ldr	r0, .L100+72
 1543 01da FFF7FEFF 		bl	UART_PutString
 367:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1544              		.loc 1 367 0
 1545 01de 4F48     		ldr	r0, .L100+76
 1546 01e0 FFF7FEFF 		bl	UART_PutString
 368:.\main.c      ****                                 deadzone = 1;
 1547              		.loc 1 368 0
 1548 01e4 4E4B     		ldr	r3, .L100+80
 1549 01e6 0122     		movs	r2, #1
 1550 01e8 1A70     		strb	r2, [r3]
 369:.\main.c      ****                                 
 370:.\main.c      ****                                 accum_dist = 0;
 1551              		.loc 1 370 0
 1552 01ea 484B     		ldr	r3, .L100+60
 1553 01ec 0022     		movs	r2, #0
 1554 01ee 1A80     		strh	r2, [r3]	@ movhi
 371:.\main.c      ****                                 uint8 nextStepDist;
 372:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1555              		.loc 1 372 0
 1556 01f0 434B     		ldr	r3, .L100+48
 1557 01f2 1B88     		ldrh	r3, [r3]
 1558 01f4 1A46     		mov	r2, r3
 1559 01f6 4B4B     		ldr	r3, .L100+84
 1560 01f8 1B88     		ldrh	r3, [r3]
 1561 01fa 053B     		subs	r3, r3, #5
 1562 01fc 9A42     		cmp	r2, r3
 1563 01fe 07DC     		bgt	.L60
 1564              		.loc 1 372 0 is_stmt 0 discriminator 1
 1565 0200 3F4B     		ldr	r3, .L100+48
 1566 0202 1B88     		ldrh	r3, [r3]
 1567 0204 0333     		adds	r3, r3, #3
 1568 0206 3F4A     		ldr	r2, .L100+52
 1569 0208 D35C     		ldrb	r3, [r2, r3]
 1570 020a 87F83C30 		strb	r3, [r7, #60]
 1571 020e 02E0     		b	.L61
 1572              	.L60:
 373:.\main.c      ****                                 else nextStepDist = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 36


 1573              		.loc 1 373 0 is_stmt 1
 1574 0210 0023     		movs	r3, #0
 1575 0212 87F83C30 		strb	r3, [r7, #60]
 1576              	.L61:
 374:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-1);
 1577              		.loc 1 374 0
 1578 0216 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1579 021a 013B     		subs	r3, r3, #1
 1580 021c 9BB2     		uxth	r3, r3
 1581 021e 1A46     		mov	r2, r3	@ movhi
 1582 0220 D200     		lsls	r2, r2, #3
 1583 0222 1A44     		add	r2, r2, r3
 1584 0224 1201     		lsls	r2, r2, #4
 1585 0226 1344     		add	r3, r3, r2
 1586 0228 9BB2     		uxth	r3, r3
 1587 022a 9AB2     		uxth	r2, r3
 1588 022c 3E4B     		ldr	r3, .L100+88
 1589 022e 1A80     		strh	r2, [r3]	@ movhi
 375:.\main.c      ****                                 
 376:.\main.c      ****                                 
 377:.\main.c      ****                                 
 378:.\main.c      ****                                 switch(nextStep)
 1590              		.loc 1 378 0
 1591 0230 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1592 0234 4C3B     		subs	r3, r3, #76
 1593 0236 092B     		cmp	r3, #9
 1594 0238 7AD8     		bhi	.L97
 1595 023a 01A2     		adr	r2, .L64
 1596 023c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1597              		.p2align 2
 1598              	.L64:
 1599 0240 77020000 		.word	.L63+1
 1600 0244 31030000 		.word	.L97+1
 1601 0248 31030000 		.word	.L97+1
 1602 024c 31030000 		.word	.L97+1
 1603 0250 31030000 		.word	.L97+1
 1604 0254 31030000 		.word	.L97+1
 1605 0258 95020000 		.word	.L65+1
 1606 025c 69020000 		.word	.L66+1
 1607 0260 31030000 		.word	.L97+1
 1608 0264 B3020000 		.word	.L67+1
 1609              		.p2align 1
 1610              	.L66:
 379:.\main.c      ****                                 {
 380:.\main.c      ****                                     case 'S':
 381:.\main.c      ****                                         inittrackLineZ();
 1611              		.loc 1 381 0
 1612 0268 FFF7FEFF 		bl	inittrackLineZ
 382:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1613              		.loc 1 382 0
 1614 026c 42F21070 		movw	r0, #10000
 1615 0270 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 383:.\main.c      ****                                         //do nothing
 384:.\main.c      ****                                     break;
 1616              		.loc 1 384 0
 1617 0274 5DE0     		b	.L68
 1618              	.L63:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 37


 385:.\main.c      ****                                     case 'L':
 386:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 387:.\main.c      ****                                         initTurnLeft();
 1619              		.loc 1 387 0
 1620 0276 FFF7FEFF 		bl	initTurnLeft
 388:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1621              		.loc 1 388 0
 1622 027a 4CF25030 		movw	r0, #50000
 1623 027e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 389:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1624              		.loc 1 389 0
 1625 0282 294B     		ldr	r3, .L100+88
 1626 0284 1B88     		ldrh	r3, [r3]
 1627 0286 9BB2     		uxth	r3, r3
 1628 0288 323B     		subs	r3, r3, #50
 1629 028a 9BB2     		uxth	r3, r3
 1630 028c 9AB2     		uxth	r2, r3
 1631 028e 264B     		ldr	r3, .L100+88
 1632 0290 1A80     		strh	r2, [r3]	@ movhi
 390:.\main.c      ****                                     break;
 1633              		.loc 1 390 0
 1634 0292 4EE0     		b	.L68
 1635              	.L65:
 391:.\main.c      ****                                     case 'R':
 392:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 393:.\main.c      ****                                         initTurnRight();
 1636              		.loc 1 393 0
 1637 0294 FFF7FEFF 		bl	initTurnRight
 394:.\main.c      ****                                         target_distance_quad += (208 - TURN_OFFSET);
 1638              		.loc 1 394 0
 1639 0298 234B     		ldr	r3, .L100+88
 1640 029a 1B88     		ldrh	r3, [r3]
 1641 029c 9BB2     		uxth	r3, r3
 1642 029e 9E33     		adds	r3, r3, #158
 1643 02a0 9BB2     		uxth	r3, r3
 1644 02a2 9AB2     		uxth	r2, r3
 1645 02a4 204B     		ldr	r3, .L100+88
 1646 02a6 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1647              		.loc 1 395 0
 1648 02a8 4CF25030 		movw	r0, #50000
 1649 02ac FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 396:.\main.c      ****                                     break;
 1650              		.loc 1 396 0
 1651 02b0 3FE0     		b	.L68
 1652              	.L67:
 397:.\main.c      ****                                     case 'U':
 398:.\main.c      ****                                         // Direction not tracked any more
 399:.\main.c      ****                                         initTurnU();
 1653              		.loc 1 399 0
 1654 02b2 FFF7FEFF 		bl	initTurnU
 400:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1655              		.loc 1 400 0
 1656 02b6 1D48     		ldr	r0, .L100+92
 1657 02b8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 401:.\main.c      ****                                         target_distance_quad += 208;
 1658              		.loc 1 401 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 38


 1659 02bc 1A4B     		ldr	r3, .L100+88
 1660 02be 1B88     		ldrh	r3, [r3]
 1661 02c0 9BB2     		uxth	r3, r3
 1662 02c2 D033     		adds	r3, r3, #208
 1663 02c4 9BB2     		uxth	r3, r3
 1664 02c6 9AB2     		uxth	r2, r3
 1665 02c8 174B     		ldr	r3, .L100+88
 1666 02ca 1A80     		strh	r2, [r3]	@ movhi
 402:.\main.c      ****                                     break;
 1667              		.loc 1 402 0
 1668 02cc 31E0     		b	.L68
 1669              	.L101:
 1670 02ce 00BF     		.align	2
 1671              	.L100:
 1672 02d0 00000000 		.word	isr_quad1
 1673 02d4 00000000 		.word	isr_turn_timer
 1674 02d8 00000000 		.word	button
 1675 02dc 00000000 		.word	isr_deadzone
 1676 02e0 00000000 		.word	BIN_ENABLED
 1677 02e4 00000000 		.word	BT_ENABLED
 1678 02e8 00000000 		.word	track_mode
 1679 02ec 00000000 		.word	movement_state
 1680 02f0 00000000 		.word	initial_pos_valid
 1681 02f4 00000000 		.word	system_state
 1682 02f8 00000000 		.word	initial_x_pos
 1683 02fc 00000000 		.word	initial_y_pos
 1684 0300 00000000 		.word	instructionCount
 1685 0304 00000000 		.word	instructions
 1686 0308 00000000 		.word	sensorsDisabled
 1687 030c 00000000 		.word	accum_dist
 1688 0310 24000000 		.word	.LC2
 1689 0314 00000000 		.word	reached_target
 1690 0318 38000000 		.word	.LC3
 1691 031c 58000000 		.word	.LC4
 1692 0320 00000000 		.word	deadzone
 1693 0324 00000000 		.word	instructionLength
 1694 0328 00000000 		.word	target_distance_quad
 1695 032c 905F0100 		.word	90000
 1696              	.L97:
 403:.\main.c      ****                                     
 404:.\main.c      ****                                     default:
 405:.\main.c      ****                                         //do nothing
 406:.\main.c      ****                                         break;
 1697              		.loc 1 406 0
 1698 0330 00BF     		nop
 1699              	.L68:
 407:.\main.c      ****                                 }
 408:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1700              		.loc 1 408 0
 1701 0332 AC4B     		ldr	r3, .L102
 1702 0334 1B88     		ldrh	r3, [r3]
 1703 0336 1BB2     		sxth	r3, r3
 1704 0338 07F12402 		add	r2, r7, #36
 1705 033c 1046     		mov	r0, r2
 1706 033e AA49     		ldr	r1, .L102+4
 1707 0340 1A46     		mov	r2, r3
 1708 0342 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 39


 409:.\main.c      ****                                  UART_PutString(mes);
 1709              		.loc 1 409 0
 1710 0346 07F12403 		add	r3, r7, #36
 1711 034a 1846     		mov	r0, r3
 1712 034c FFF7FEFF 		bl	UART_PutString
 410:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1713              		.loc 1 410 0
 1714 0350 A44B     		ldr	r3, .L102
 1715 0352 1B88     		ldrh	r3, [r3]
 1716 0354 1BB2     		sxth	r3, r3
 1717 0356 002B     		cmp	r3, #0
 1718 0358 02DA     		bge	.L69
 1719              		.loc 1 410 0 is_stmt 0 discriminator 1
 1720 035a A24B     		ldr	r3, .L102
 1721 035c 0022     		movs	r2, #0
 1722 035e 1A80     		strh	r2, [r3]	@ movhi
 1723              	.L69:
 411:.\main.c      ****                                 Timer_Deadzone_Start();
 1724              		.loc 1 411 0 is_stmt 1
 1725 0360 FFF7FEFF 		bl	Timer_Deadzone_Start
 412:.\main.c      ****                                 reached_target = 0;
 1726              		.loc 1 412 0
 1727 0364 A14B     		ldr	r3, .L102+8
 1728 0366 0022     		movs	r2, #0
 1729 0368 1A70     		strb	r2, [r3]
 413:.\main.c      ****                                 overshot_target = 0;
 1730              		.loc 1 413 0
 1731 036a A14B     		ldr	r3, .L102+12
 1732 036c 0022     		movs	r2, #0
 1733 036e 1A70     		strb	r2, [r3]
 414:.\main.c      ****                                 instructionCount += 2;
 1734              		.loc 1 414 0
 1735 0370 A04B     		ldr	r3, .L102+16
 1736 0372 1B88     		ldrh	r3, [r3]
 1737 0374 0233     		adds	r3, r3, #2
 1738 0376 9AB2     		uxth	r2, r3
 1739 0378 9E4B     		ldr	r3, .L102+16
 1740 037a 1A80     		strh	r2, [r3]	@ movhi
 1741              	.LBE5:
 1742              	.LBE4:
 349:.\main.c      ****                         {
 1743              		.loc 1 349 0
 1744 037c 70E1     		b	.L53
 1745              	.L57:
 349:.\main.c      ****                         {
 1746              		.loc 1 349 0 is_stmt 0 discriminator 1
 1747 037e 6FE1     		b	.L53
 1748              	.L56:
 415:.\main.c      ****                             }
 416:.\main.c      ****                             }
 417:.\main.c      ****                         }
 418:.\main.c      ****                     }
 419:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1749              		.loc 1 419 0 is_stmt 1
 1750 0380 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1751 0384 002B     		cmp	r3, #0
 1752 0386 40F08B80 		bne	.L70
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 40


 1753              		.loc 1 419 0 is_stmt 0 discriminator 1
 1754 038a 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1755 038e 002B     		cmp	r3, #0
 1756 0390 40F08680 		bne	.L70
 1757              		.loc 1 419 0 discriminator 2
 1758 0394 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1759 0398 002B     		cmp	r3, #0
 1760 039a 40F08180 		bne	.L70
 1761              		.loc 1 419 0 discriminator 3
 1762 039e 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1763 03a2 002B     		cmp	r3, #0
 1764 03a4 7CD1     		bne	.L70
 1765              		.loc 1 419 0 discriminator 4
 1766 03a6 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1767 03aa 002B     		cmp	r3, #0
 1768 03ac 78D1     		bne	.L70
 1769              		.loc 1 419 0 discriminator 5
 1770 03ae 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1771 03b2 552B     		cmp	r3, #85
 1772 03b4 74D1     		bne	.L70
 420:.\main.c      ****                     {
 421:.\main.c      ****                         if(sensorsDisabled == 0)
 1773              		.loc 1 421 0 is_stmt 1
 1774 03b6 904B     		ldr	r3, .L102+20
 1775 03b8 1B68     		ldr	r3, [r3]
 1776 03ba 002B     		cmp	r3, #0
 1777 03bc 6FD1     		bne	.L71
 422:.\main.c      ****                         {
 423:.\main.c      ****                                 
 424:.\main.c      ****                                 actionDebounce++;
 1778              		.loc 1 424 0
 1779 03be FB8F     		ldrh	r3, [r7, #62]
 1780 03c0 0133     		adds	r3, r3, #1
 1781 03c2 FB87     		strh	r3, [r7, #62]	@ movhi
 425:.\main.c      ****                                 if(actionDebounce >= 3000)
 1782              		.loc 1 425 0
 1783 03c4 FB8F     		ldrh	r3, [r7, #62]
 1784 03c6 40F6B732 		movw	r2, #2999
 1785 03ca 9342     		cmp	r3, r2
 1786 03cc 67D9     		bls	.L71
 426:.\main.c      ****                                 {
 427:.\main.c      ****                                     if(reached_target == 1)
 1787              		.loc 1 427 0
 1788 03ce 874B     		ldr	r3, .L102+8
 1789 03d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1790 03d2 012B     		cmp	r3, #1
 1791 03d4 63D1     		bne	.L71
 1792              	.LBB6:
 428:.\main.c      ****                                     {
 429:.\main.c      ****                                 char mes[16];
 430:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1793              		.loc 1 430 0
 1794 03d6 894B     		ldr	r3, .L102+24
 1795 03d8 1B88     		ldrh	r3, [r3]
 1796 03da 1BB2     		sxth	r3, r3
 1797 03dc 07F11402 		add	r2, r7, #20
 1798 03e0 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 41


 1799 03e2 8749     		ldr	r1, .L102+28
 1800 03e4 1A46     		mov	r2, r3
 1801 03e6 FFF7FEFF 		bl	sprintf
 431:.\main.c      ****                                  UART_PutString(mes);
 1802              		.loc 1 431 0
 1803 03ea 07F11403 		add	r3, r7, #20
 1804 03ee 1846     		mov	r0, r3
 1805 03f0 FFF7FEFF 		bl	UART_PutString
 432:.\main.c      ****                                      accum_dist = 0;
 1806              		.loc 1 432 0
 1807 03f4 814B     		ldr	r3, .L102+24
 1808 03f6 0022     		movs	r2, #0
 1809 03f8 1A80     		strh	r2, [r3]	@ movhi
 433:.\main.c      ****                                 uint8 nextStepDist;
 434:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1810              		.loc 1 434 0
 1811 03fa 7E4B     		ldr	r3, .L102+16
 1812 03fc 1B88     		ldrh	r3, [r3]
 1813 03fe 1A46     		mov	r2, r3
 1814 0400 804B     		ldr	r3, .L102+32
 1815 0402 1B88     		ldrh	r3, [r3]
 1816 0404 053B     		subs	r3, r3, #5
 1817 0406 9A42     		cmp	r2, r3
 1818 0408 07DC     		bgt	.L72
 1819              		.loc 1 434 0 is_stmt 0 discriminator 1
 1820 040a 7A4B     		ldr	r3, .L102+16
 1821 040c 1B88     		ldrh	r3, [r3]
 1822 040e 0333     		adds	r3, r3, #3
 1823 0410 7D4A     		ldr	r2, .L102+36
 1824 0412 D35C     		ldrb	r3, [r2, r3]
 1825 0414 87F83B30 		strb	r3, [r7, #59]
 1826 0418 02E0     		b	.L73
 1827              	.L72:
 435:.\main.c      ****                                 else nextStepDist = 0;
 1828              		.loc 1 435 0 is_stmt 1
 1829 041a 0023     		movs	r3, #0
 1830 041c 87F83B30 		strb	r3, [r7, #59]
 1831              	.L73:
 436:.\main.c      ****                                 
 437:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-1);
 1832              		.loc 1 437 0
 1833 0420 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1834 0424 013B     		subs	r3, r3, #1
 1835 0426 9BB2     		uxth	r3, r3
 1836 0428 1A46     		mov	r2, r3	@ movhi
 1837 042a D200     		lsls	r2, r2, #3
 1838 042c 1A44     		add	r2, r2, r3
 1839 042e 1201     		lsls	r2, r2, #4
 1840 0430 1344     		add	r3, r3, r2
 1841 0432 9BB2     		uxth	r3, r3
 1842 0434 9AB2     		uxth	r2, r3
 1843 0436 6B4B     		ldr	r3, .L102
 1844 0438 1A80     		strh	r2, [r3]	@ movhi
 438:.\main.c      ****                                 target_distance_quad += 208;
 1845              		.loc 1 438 0
 1846 043a 6A4B     		ldr	r3, .L102
 1847 043c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 42


 1848 043e 9BB2     		uxth	r3, r3
 1849 0440 D033     		adds	r3, r3, #208
 1850 0442 9BB2     		uxth	r3, r3
 1851 0444 9AB2     		uxth	r2, r3
 1852 0446 674B     		ldr	r3, .L102
 1853 0448 1A80     		strh	r2, [r3]	@ movhi
 439:.\main.c      ****                                 
 440:.\main.c      ****                                     UART_PutString("Triggered at white light \r\n");
 1854              		.loc 1 440 0
 1855 044a 7048     		ldr	r0, .L102+40
 1856 044c FFF7FEFF 		bl	UART_PutString
 441:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1857              		.loc 1 441 0
 1858 0450 6F48     		ldr	r0, .L102+44
 1859 0452 FFF7FEFF 		bl	UART_PutString
 442:.\main.c      ****                                     deadzone = 1;
 1860              		.loc 1 442 0
 1861 0456 6F4B     		ldr	r3, .L102+48
 1862 0458 0122     		movs	r2, #1
 1863 045a 1A70     		strb	r2, [r3]
 443:.\main.c      ****                                     Timer_Deadzone_WriteCounter(U_DEADZONE);
 1864              		.loc 1 443 0
 1865 045c 6E48     		ldr	r0, .L102+52
 1866 045e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 444:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 1867              		.loc 1 444 0
 1868 0462 604B     		ldr	r3, .L102
 1869 0464 1B88     		ldrh	r3, [r3]
 1870 0466 1BB2     		sxth	r3, r3
 1871 0468 002B     		cmp	r3, #0
 1872 046a 02DA     		bge	.L74
 1873              		.loc 1 444 0 is_stmt 0 discriminator 1
 1874 046c 5D4B     		ldr	r3, .L102
 1875 046e 0022     		movs	r2, #0
 1876 0470 1A80     		strh	r2, [r3]	@ movhi
 1877              	.L74:
 445:.\main.c      ****                                     Timer_Deadzone_Start();
 1878              		.loc 1 445 0 is_stmt 1
 1879 0472 FFF7FEFF 		bl	Timer_Deadzone_Start
 446:.\main.c      ****                                     actionDebounce = 0;
 1880              		.loc 1 446 0
 1881 0476 0023     		movs	r3, #0
 1882 0478 FB87     		strh	r3, [r7, #62]	@ movhi
 447:.\main.c      ****                                     sensorsDisabled = 1;
 1883              		.loc 1 447 0
 1884 047a 5F4B     		ldr	r3, .L102+20
 1885 047c 0122     		movs	r2, #1
 1886 047e 1A60     		str	r2, [r3]
 448:.\main.c      ****                                     initTurnU();
 1887              		.loc 1 448 0
 1888 0480 FFF7FEFF 		bl	initTurnU
 449:.\main.c      ****                                     reached_target = 0;
 1889              		.loc 1 449 0
 1890 0484 594B     		ldr	r3, .L102+8
 1891 0486 0022     		movs	r2, #0
 1892 0488 1A70     		strb	r2, [r3]
 450:.\main.c      ****                                     overshot_target = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 43


 1893              		.loc 1 450 0
 1894 048a 594B     		ldr	r3, .L102+12
 1895 048c 0022     		movs	r2, #0
 1896 048e 1A70     		strb	r2, [r3]
 451:.\main.c      ****                                     instructionCount += 2;
 1897              		.loc 1 451 0
 1898 0490 584B     		ldr	r3, .L102+16
 1899 0492 1B88     		ldrh	r3, [r3]
 1900 0494 0233     		adds	r3, r3, #2
 1901 0496 9AB2     		uxth	r2, r3
 1902 0498 564B     		ldr	r3, .L102+16
 1903 049a 1A80     		strh	r2, [r3]	@ movhi
 1904              	.LBE6:
 421:.\main.c      ****                         {
 1905              		.loc 1 421 0
 1906 049c E0E0     		b	.L53
 1907              	.L71:
 421:.\main.c      ****                         {
 1908              		.loc 1 421 0 is_stmt 0 discriminator 3
 1909 049e DFE0     		b	.L53
 1910              	.L70:
 452:.\main.c      ****                                 }
 453:.\main.c      ****                             }
 454:.\main.c      ****                         }
 455:.\main.c      ****                     }
 456:.\main.c      ****                     else if (overshot_target == 1 && nextStep == 'D')
 1911              		.loc 1 456 0 is_stmt 1
 1912 04a0 534B     		ldr	r3, .L102+12
 1913 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1914 04a4 012B     		cmp	r3, #1
 1915 04a6 40F0D680 		bne	.L75
 1916              		.loc 1 456 0 is_stmt 0 discriminator 1
 1917 04aa 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1918 04ae 442B     		cmp	r3, #68
 1919 04b0 40F0D180 		bne	.L75
 1920              	.LBB7:
 457:.\main.c      ****                     {
 458:.\main.c      ****                         
 459:.\main.c      ****                                 instructionCount += 2;
 1921              		.loc 1 459 0 is_stmt 1
 1922 04b4 4F4B     		ldr	r3, .L102+16
 1923 04b6 1B88     		ldrh	r3, [r3]
 1924 04b8 0233     		adds	r3, r3, #2
 1925 04ba 9AB2     		uxth	r2, r3
 1926 04bc 4D4B     		ldr	r3, .L102+16
 1927 04be 1A80     		strh	r2, [r3]	@ movhi
 460:.\main.c      ****                                 nextStep = instructions[instructionCount]; 
 1928              		.loc 1 460 0
 1929 04c0 4C4B     		ldr	r3, .L102+16
 1930 04c2 1B88     		ldrh	r3, [r3]
 1931 04c4 1A46     		mov	r2, r3
 1932 04c6 504B     		ldr	r3, .L102+36
 1933 04c8 9B5C     		ldrb	r3, [r3, r2]
 1934 04ca 87F83D30 		strb	r3, [r7, #61]
 461:.\main.c      ****                                 char mes[16];
 462:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1935              		.loc 1 462 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 44


 1936 04ce 4B4B     		ldr	r3, .L102+24
 1937 04d0 1B88     		ldrh	r3, [r3]
 1938 04d2 1BB2     		sxth	r3, r3
 1939 04d4 3A1D     		adds	r2, r7, #4
 1940 04d6 1046     		mov	r0, r2
 1941 04d8 4949     		ldr	r1, .L102+28
 1942 04da 1A46     		mov	r2, r3
 1943 04dc FFF7FEFF 		bl	sprintf
 463:.\main.c      ****                                  UART_PutString(mes);
 1944              		.loc 1 463 0
 1945 04e0 3B1D     		adds	r3, r7, #4
 1946 04e2 1846     		mov	r0, r3
 1947 04e4 FFF7FEFF 		bl	UART_PutString
 464:.\main.c      ****                                  accum_dist = 0;
 1948              		.loc 1 464 0
 1949 04e8 444B     		ldr	r3, .L102+24
 1950 04ea 0022     		movs	r2, #0
 1951 04ec 1A80     		strh	r2, [r3]	@ movhi
 465:.\main.c      ****                                 uint8 nextStepDist;
 466:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1952              		.loc 1 466 0
 1953 04ee 414B     		ldr	r3, .L102+16
 1954 04f0 1B88     		ldrh	r3, [r3]
 1955 04f2 1A46     		mov	r2, r3
 1956 04f4 434B     		ldr	r3, .L102+32
 1957 04f6 1B88     		ldrh	r3, [r3]
 1958 04f8 053B     		subs	r3, r3, #5
 1959 04fa 9A42     		cmp	r2, r3
 1960 04fc 07DC     		bgt	.L76
 1961              		.loc 1 466 0 is_stmt 0 discriminator 1
 1962 04fe 3D4B     		ldr	r3, .L102+16
 1963 0500 1B88     		ldrh	r3, [r3]
 1964 0502 0333     		adds	r3, r3, #3
 1965 0504 404A     		ldr	r2, .L102+36
 1966 0506 D35C     		ldrb	r3, [r2, r3]
 1967 0508 87F83A30 		strb	r3, [r7, #58]
 1968 050c 02E0     		b	.L77
 1969              	.L76:
 467:.\main.c      ****                                 else nextStepDist = 0;
 1970              		.loc 1 467 0 is_stmt 1
 1971 050e 0023     		movs	r3, #0
 1972 0510 87F83A30 		strb	r3, [r7, #58]
 1973              	.L77:
 468:.\main.c      ****                                 
 469:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-1);
 1974              		.loc 1 469 0
 1975 0514 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 1976 0518 013B     		subs	r3, r3, #1
 1977 051a 9BB2     		uxth	r3, r3
 1978 051c 1A46     		mov	r2, r3	@ movhi
 1979 051e D200     		lsls	r2, r2, #3
 1980 0520 1A44     		add	r2, r2, r3
 1981 0522 1201     		lsls	r2, r2, #4
 1982 0524 1344     		add	r3, r3, r2
 1983 0526 9BB2     		uxth	r3, r3
 1984 0528 9AB2     		uxth	r2, r3
 1985 052a 2E4B     		ldr	r3, .L102
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 45


 1986 052c 1A80     		strh	r2, [r3]	@ movhi
 470:.\main.c      ****                                 
 471:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 1987              		.loc 1 471 0
 1988 052e 3B48     		ldr	r0, .L102+56
 1989 0530 FFF7FEFF 		bl	UART_PutString
 472:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1990              		.loc 1 472 0
 1991 0534 3648     		ldr	r0, .L102+44
 1992 0536 FFF7FEFF 		bl	UART_PutString
 473:.\main.c      ****                                     
 474:.\main.c      ****                                     
 475:.\main.c      ****                                     actionDebounce = 0;
 1993              		.loc 1 475 0
 1994 053a 0023     		movs	r3, #0
 1995 053c FB87     		strh	r3, [r7, #62]	@ movhi
 476:.\main.c      ****                                     sensorsDisabled = 1;
 1996              		.loc 1 476 0
 1997 053e 2E4B     		ldr	r3, .L102+20
 1998 0540 0122     		movs	r2, #1
 1999 0542 1A60     		str	r2, [r3]
 477:.\main.c      ****                                     
 478:.\main.c      ****                                      switch(nextStep)
 2000              		.loc 1 478 0
 2001 0544 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2002 0548 4C3B     		subs	r3, r3, #76
 2003 054a 092B     		cmp	r3, #9
 2004 054c 68D8     		bhi	.L98
 2005 054e 01A2     		adr	r2, .L80
 2006 0550 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2007              		.p2align 2
 2008              	.L80:
 2009 0554 8B050000 		.word	.L79+1
 2010 0558 21060000 		.word	.L98+1
 2011 055c 21060000 		.word	.L98+1
 2012 0560 21060000 		.word	.L98+1
 2013 0564 21060000 		.word	.L98+1
 2014 0568 21060000 		.word	.L98+1
 2015 056c A9050000 		.word	.L81+1
 2016 0570 7D050000 		.word	.L82+1
 2017 0574 21060000 		.word	.L98+1
 2018 0578 C7050000 		.word	.L83+1
 2019              		.p2align 1
 2020              	.L82:
 479:.\main.c      ****                                 {
 480:.\main.c      ****                                     case 'S':
 481:.\main.c      ****                                         inittrackLineZ();
 2021              		.loc 1 481 0
 2022 057c FFF7FEFF 		bl	inittrackLineZ
 482:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 2023              		.loc 1 482 0
 2024 0580 42F21070 		movw	r0, #10000
 2025 0584 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 483:.\main.c      ****                                         //do nothing
 484:.\main.c      ****                                     break;
 2026              		.loc 1 484 0
 2027 0588 4BE0     		b	.L84
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 46


 2028              	.L79:
 485:.\main.c      ****                                     case 'L':
 486:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 487:.\main.c      ****                                         initTurnLeft();
 2029              		.loc 1 487 0
 2030 058a FFF7FEFF 		bl	initTurnLeft
 488:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2031              		.loc 1 488 0
 2032 058e 4CF25030 		movw	r0, #50000
 2033 0592 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 489:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2034              		.loc 1 489 0
 2035 0596 134B     		ldr	r3, .L102
 2036 0598 1B88     		ldrh	r3, [r3]
 2037 059a 9BB2     		uxth	r3, r3
 2038 059c 323B     		subs	r3, r3, #50
 2039 059e 9BB2     		uxth	r3, r3
 2040 05a0 9AB2     		uxth	r2, r3
 2041 05a2 104B     		ldr	r3, .L102
 2042 05a4 1A80     		strh	r2, [r3]	@ movhi
 490:.\main.c      ****                                     break;
 2043              		.loc 1 490 0
 2044 05a6 3CE0     		b	.L84
 2045              	.L81:
 491:.\main.c      ****                                     case 'R':
 492:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 493:.\main.c      ****                                         initTurnRight();
 2046              		.loc 1 493 0
 2047 05a8 FFF7FEFF 		bl	initTurnRight
 494:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2048              		.loc 1 494 0
 2049 05ac 4CF25030 		movw	r0, #50000
 2050 05b0 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 495:.\main.c      ****                                         target_distance_quad += (208 - TURN_OFFSET);
 2051              		.loc 1 495 0
 2052 05b4 0B4B     		ldr	r3, .L102
 2053 05b6 1B88     		ldrh	r3, [r3]
 2054 05b8 9BB2     		uxth	r3, r3
 2055 05ba 9E33     		adds	r3, r3, #158
 2056 05bc 9BB2     		uxth	r3, r3
 2057 05be 9AB2     		uxth	r2, r3
 2058 05c0 084B     		ldr	r3, .L102
 2059 05c2 1A80     		strh	r2, [r3]	@ movhi
 496:.\main.c      ****                                         
 497:.\main.c      ****                                     break;
 2060              		.loc 1 497 0
 2061 05c4 2DE0     		b	.L84
 2062              	.L83:
 498:.\main.c      ****                                     case 'U':
 499:.\main.c      ****                                         // Direction not tracked any more
 500:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2063              		.loc 1 500 0
 2064 05c6 1448     		ldr	r0, .L102+52
 2065 05c8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 501:.\main.c      ****                                         initTurnU();
 2066              		.loc 1 501 0
 2067 05cc FFF7FEFF 		bl	initTurnU
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 47


 502:.\main.c      ****                                         target_distance_quad += 208;
 2068              		.loc 1 502 0
 2069 05d0 044B     		ldr	r3, .L102
 2070 05d2 1B88     		ldrh	r3, [r3]
 2071 05d4 9BB2     		uxth	r3, r3
 2072 05d6 D033     		adds	r3, r3, #208
 2073 05d8 9BB2     		uxth	r3, r3
 2074 05da 9AB2     		uxth	r2, r3
 2075 05dc 014B     		ldr	r3, .L102
 2076 05de 1A80     		strh	r2, [r3]	@ movhi
 503:.\main.c      ****                                     break;
 2077              		.loc 1 503 0
 2078 05e0 1FE0     		b	.L84
 2079              	.L103:
 2080 05e2 00BF     		.align	2
 2081              	.L102:
 2082 05e4 00000000 		.word	target_distance_quad
 2083 05e8 6C000000 		.word	.LC5
 2084 05ec 00000000 		.word	reached_target
 2085 05f0 00000000 		.word	overshot_target
 2086 05f4 00000000 		.word	instructionCount
 2087 05f8 00000000 		.word	sensorsDisabled
 2088 05fc 00000000 		.word	accum_dist
 2089 0600 24000000 		.word	.LC2
 2090 0604 00000000 		.word	instructionLength
 2091 0608 00000000 		.word	instructions
 2092 060c 80000000 		.word	.LC6
 2093 0610 58000000 		.word	.LC4
 2094 0614 00000000 		.word	deadzone
 2095 0618 905F0100 		.word	90000
 2096 061c 9C000000 		.word	.LC7
 2097              	.L98:
 504:.\main.c      ****                                     default:
 505:.\main.c      ****                                         //do nothing
 506:.\main.c      ****                                         break;
 2098              		.loc 1 506 0
 2099 0620 00BF     		nop
 2100              	.L84:
 507:.\main.c      ****                                 }
 508:.\main.c      ****                                     
 509:.\main.c      ****                                     reached_target = 0;
 2101              		.loc 1 509 0
 2102 0622 284B     		ldr	r3, .L104
 2103 0624 0022     		movs	r2, #0
 2104 0626 1A70     		strb	r2, [r3]
 510:.\main.c      ****                                     overshot_target = 0;
 2105              		.loc 1 510 0
 2106 0628 274B     		ldr	r3, .L104+4
 2107 062a 0022     		movs	r2, #0
 2108 062c 1A70     		strb	r2, [r3]
 511:.\main.c      ****                                     instructionCount += 2;
 2109              		.loc 1 511 0
 2110 062e 274B     		ldr	r3, .L104+8
 2111 0630 1B88     		ldrh	r3, [r3]
 2112 0632 0233     		adds	r3, r3, #2
 2113 0634 9AB2     		uxth	r2, r3
 2114 0636 254B     		ldr	r3, .L104+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 48


 2115 0638 1A80     		strh	r2, [r3]	@ movhi
 512:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2116              		.loc 1 512 0
 2117 063a 254B     		ldr	r3, .L104+12
 2118 063c 1B88     		ldrh	r3, [r3]
 2119 063e 1BB2     		sxth	r3, r3
 2120 0640 002B     		cmp	r3, #0
 2121 0642 02DA     		bge	.L85
 2122              		.loc 1 512 0 is_stmt 0 discriminator 1
 2123 0644 224B     		ldr	r3, .L104+12
 2124 0646 0022     		movs	r2, #0
 2125 0648 1A80     		strh	r2, [r3]	@ movhi
 2126              	.L85:
 513:.\main.c      ****                                     Timer_Deadzone_Start();
 2127              		.loc 1 513 0 is_stmt 1 discriminator 5
 2128 064a FFF7FEFF 		bl	Timer_Deadzone_Start
 514:.\main.c      ****                                     deadzone = 1;
 2129              		.loc 1 514 0 discriminator 5
 2130 064e 214B     		ldr	r3, .L104+16
 2131 0650 0122     		movs	r2, #1
 2132 0652 1A70     		strb	r2, [r3]
 2133              	.LBE7:
 457:.\main.c      ****                         
 2134              		.loc 1 457 0 discriminator 5
 2135 0654 04E0     		b	.L53
 2136              	.L75:
 515:.\main.c      ****                     }
 516:.\main.c      ****                     else
 517:.\main.c      ****                     {
 518:.\main.c      ****                         inittrackLineZ();
 2137              		.loc 1 518 0
 2138 0656 FFF7FEFF 		bl	inittrackLineZ
 519:.\main.c      ****                         actionDebounce = 0;
 2139              		.loc 1 519 0
 2140 065a 0023     		movs	r3, #0
 2141 065c FB87     		strh	r3, [r7, #62]	@ movhi
 2142              	.LBE3:
 520:.\main.c      ****                     }
 521:.\main.c      ****                 }
 522:.\main.c      ****                 break;
 2143              		.loc 1 522 0
 2144 065e FFE7     		b	.L99
 2145              	.L53:
 2146              	.L99:
 2147 0660 00BF     		nop
 2148              	.L40:
 523:.\main.c      ****         }
 524:.\main.c      ****         
 525:.\main.c      ****         switch(movement_state)
 2149              		.loc 1 525 0
 2150 0662 1D4B     		ldr	r3, .L104+20
 2151 0664 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2152 0666 072B     		cmp	r3, #7
 2153 0668 3FF6FDAC 		bhi	.L96
 2154 066c 01A2     		adr	r2, .L88
 2155 066e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2156 0672 00BF     		.p2align 2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 49


 2157              	.L88:
 2158 0674 95060000 		.word	.L87+1
 2159 0678 9B060000 		.word	.L89+1
 2160 067c A1060000 		.word	.L90+1
 2161 0680 AD060000 		.word	.L91+1
 2162 0684 B3060000 		.word	.L92+1
 2163 0688 B9060000 		.word	.L93+1
 2164 068c BF060000 		.word	.L94+1
 2165 0690 A7060000 		.word	.L95+1
 2166              		.p2align 1
 2167              	.L87:
 526:.\main.c      ****         {
 527:.\main.c      ****             case DRIVE:
 528:.\main.c      ****                 driveForwards();
 2168              		.loc 1 528 0
 2169 0694 FFF7FEFF 		bl	driveForwards
 529:.\main.c      ****             break;
 2170              		.loc 1 529 0
 2171 0698 13E0     		b	.L86
 2172              	.L89:
 530:.\main.c      ****             case LTURN:
 531:.\main.c      ****                 turnLeft();
 2173              		.loc 1 531 0
 2174 069a FFF7FEFF 		bl	turnLeft
 532:.\main.c      ****             break;
 2175              		.loc 1 532 0
 2176 069e 10E0     		b	.L86
 2177              	.L90:
 533:.\main.c      ****             case RTURN:
 534:.\main.c      ****                 turnRight();
 2178              		.loc 1 534 0
 2179 06a0 FFF7FEFF 		bl	turnRight
 535:.\main.c      ****             break;
 2180              		.loc 1 535 0
 2181 06a4 0DE0     		b	.L86
 2182              	.L95:
 536:.\main.c      ****             case UTURN:
 537:.\main.c      ****                 turnU();
 2183              		.loc 1 537 0
 2184 06a6 FFF7FEFF 		bl	turnU
 538:.\main.c      ****             break;
 2185              		.loc 1 538 0
 2186 06aa 0AE0     		b	.L86
 2187              	.L91:
 539:.\main.c      ****             case STOPPED:
 540:.\main.c      ****                 brakeMotor();
 2188              		.loc 1 540 0
 2189 06ac FFF7FEFF 		bl	brakeMotor
 541:.\main.c      ****             break;
 2190              		.loc 1 541 0
 2191 06b0 07E0     		b	.L86
 2192              	.L92:
 542:.\main.c      ****             case TRACKING:
 543:.\main.c      ****                 trackLine();
 2193              		.loc 1 543 0
 2194 06b2 FFF7FEFF 		bl	trackLine
 544:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 50


 2195              		.loc 1 544 0
 2196 06b6 04E0     		b	.L86
 2197              	.L93:
 545:.\main.c      ****             case TRACKING_U:
 546:.\main.c      ****                 trackLineU();
 2198              		.loc 1 546 0
 2199 06b8 FFF7FEFF 		bl	trackLineU
 547:.\main.c      ****             break;
 2200              		.loc 1 547 0
 2201 06bc 01E0     		b	.L86
 2202              	.L94:
 548:.\main.c      ****             case TRACKING_SOFT:
 549:.\main.c      ****                 trackLineZ();
 2203              		.loc 1 549 0
 2204 06be FFF7FEFF 		bl	trackLineZ
 2205              	.L86:
 2206              	.LBE2:
 550:.\main.c      ****         }      
 551:.\main.c      ****     }   
 2207              		.loc 1 551 0
 2208 06c2 D0E4     		b	.L96
 2209              	.L105:
 2210              		.align	2
 2211              	.L104:
 2212 06c4 00000000 		.word	reached_target
 2213 06c8 00000000 		.word	overshot_target
 2214 06cc 00000000 		.word	instructionCount
 2215 06d0 00000000 		.word	target_distance_quad
 2216 06d4 00000000 		.word	deadzone
 2217 06d8 00000000 		.word	movement_state
 2218              		.cfi_endproc
 2219              	.LFE71:
 2220              		.size	main, .-main
 2221              		.section	.text.handle_rx_binary,"ax",%progbits
 2222              		.align	2
 2223              		.global	handle_rx_binary
 2224              		.thumb
 2225              		.thumb_func
 2226              		.type	handle_rx_binary, %function
 2227              	handle_rx_binary:
 2228              	.LFB72:
 552:.\main.c      **** }
 553:.\main.c      **** 
 554:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 555:.\main.c      **** 
 556:.\main.c      **** void handle_rx_binary()
 557:.\main.c      **** {
 2229              		.loc 1 557 0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 32
 2232              		@ frame_needed = 1, uses_anonymous_args = 0
 2233              		@ link register save eliminated.
 2234 0000 80B4     		push	{r7}
 2235              		.cfi_def_cfa_offset 4
 2236              		.cfi_offset 7, -4
 2237 0002 89B0     		sub	sp, sp, #36
 2238              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 51


 2239 0004 00AF     		add	r7, sp, #0
 2240              		.cfi_def_cfa_register 7
 558:.\main.c      ****     if(flag_rx == 1)
 2241              		.loc 1 558 0
 2242 0006 524B     		ldr	r3, .L126
 2243 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2244 000a 012B     		cmp	r3, #1
 2245 000c 40F09A80 		bne	.L106
 2246              	.LBB8:
 559:.\main.c      ****     {    
 560:.\main.c      ****         flag_rx = 0;
 2247              		.loc 1 560 0
 2248 0010 4F4B     		ldr	r3, .L126
 2249 0012 0022     		movs	r2, #0
 2250 0014 1A70     		strb	r2, [r3]
 561:.\main.c      ****         
 562:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2251              		.loc 1 562 0
 2252 0016 4F4B     		ldr	r3, .L126+4
 2253 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2254 001a 1B02     		lsls	r3, r3, #8
 2255 001c 9AB2     		uxth	r2, r3
 2256 001e 4D4B     		ldr	r3, .L126+4
 2257 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2258 0022 9BB2     		uxth	r3, r3
 2259 0024 1343     		orrs	r3, r3, r2
 2260 0026 9BB2     		uxth	r3, r3
 2261 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 563:.\main.c      ****         char byte_packet[12];
 564:.\main.c      ****         char string_packet[12];
 565:.\main.c      ****         
 566:.\main.c      ****         switch(byteCount)
 2262              		.loc 1 566 0
 2263 002a 4B4B     		ldr	r3, .L126+8
 2264 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2265 002e 043B     		subs	r3, r3, #4
 2266 0030 1E2B     		cmp	r3, #30
 2267 0032 00F28780 		bhi	.L106
 2268 0036 01A2     		adr	r2, .L110
 2269 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2270              		.p2align 2
 2271              	.L110:
 2272 003c B9000000 		.word	.L109+1
 2273 0040 45010000 		.word	.L106+1
 2274 0044 CD000000 		.word	.L111+1
 2275 0048 45010000 		.word	.L106+1
 2276 004c D5000000 		.word	.L112+1
 2277 0050 45010000 		.word	.L106+1
 2278 0054 DD000000 		.word	.L113+1
 2279 0058 45010000 		.word	.L106+1
 2280 005c E5000000 		.word	.L114+1
 2281 0060 45010000 		.word	.L106+1
 2282 0064 ED000000 		.word	.L115+1
 2283 0068 45010000 		.word	.L106+1
 2284 006c F5000000 		.word	.L116+1
 2285 0070 45010000 		.word	.L106+1
 2286 0074 FD000000 		.word	.L117+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 52


 2287 0078 45010000 		.word	.L106+1
 2288 007c 05010000 		.word	.L118+1
 2289 0080 45010000 		.word	.L106+1
 2290 0084 0D010000 		.word	.L119+1
 2291 0088 45010000 		.word	.L106+1
 2292 008c 15010000 		.word	.L120+1
 2293 0090 45010000 		.word	.L106+1
 2294 0094 1D010000 		.word	.L121+1
 2295 0098 45010000 		.word	.L106+1
 2296 009c 25010000 		.word	.L122+1
 2297 00a0 45010000 		.word	.L106+1
 2298 00a4 2D010000 		.word	.L123+1
 2299 00a8 45010000 		.word	.L106+1
 2300 00ac 35010000 		.word	.L124+1
 2301 00b0 45010000 		.word	.L106+1
 2302 00b4 3D010000 		.word	.L125+1
 2303              		.p2align 1
 2304              	.L109:
 567:.\main.c      ****         {
 568:.\main.c      ****             case 4:
 569:.\main.c      ****                 buffer_state.rssi = packet[0];
 2305              		.loc 1 569 0
 2306 00b8 264B     		ldr	r3, .L126+4
 2307 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2308 00bc DAB2     		uxtb	r2, r3
 2309 00be 274B     		ldr	r3, .L126+12
 2310 00c0 1A70     		strb	r2, [r3]
 570:.\main.c      ****                 buffer_state.index = packet[1];
 2311              		.loc 1 570 0
 2312 00c2 244B     		ldr	r3, .L126+4
 2313 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2314 00c6 254B     		ldr	r3, .L126+12
 2315 00c8 5A70     		strb	r2, [r3, #1]
 571:.\main.c      ****             break;
 2316              		.loc 1 571 0
 2317 00ca 3BE0     		b	.L106
 2318              	.L111:
 572:.\main.c      ****             case 6:
 573:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2319              		.loc 1 573 0
 2320 00cc FA8B     		ldrh	r2, [r7, #30]
 2321 00ce 234B     		ldr	r3, .L126+12
 2322 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 574:.\main.c      ****             break;
 2323              		.loc 1 574 0
 2324 00d2 37E0     		b	.L106
 2325              	.L112:
 575:.\main.c      ****             case 8:
 576:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2326              		.loc 1 576 0
 2327 00d4 FA8B     		ldrh	r2, [r7, #30]
 2328 00d6 214B     		ldr	r3, .L126+12
 2329 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 577:.\main.c      ****             break;
 2330              		.loc 1 577 0
 2331 00da 33E0     		b	.L106
 2332              	.L113:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 53


 578:.\main.c      ****             case 10:
 579:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2333              		.loc 1 579 0
 2334 00dc FA8B     		ldrh	r2, [r7, #30]
 2335 00de 1F4B     		ldr	r3, .L126+12
 2336 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 580:.\main.c      ****             break;
 2337              		.loc 1 580 0
 2338 00e2 2FE0     		b	.L106
 2339              	.L114:
 581:.\main.c      ****             case 12:
 582:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2340              		.loc 1 582 0
 2341 00e4 FA8B     		ldrh	r2, [r7, #30]
 2342 00e6 1D4B     		ldr	r3, .L126+12
 2343 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 583:.\main.c      ****             break;
 2344              		.loc 1 583 0
 2345 00ea 2BE0     		b	.L106
 2346              	.L115:
 584:.\main.c      ****             case 14:
 585:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2347              		.loc 1 585 0
 2348 00ec FA8B     		ldrh	r2, [r7, #30]
 2349 00ee 1B4B     		ldr	r3, .L126+12
 2350 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 586:.\main.c      ****             break;
 2351              		.loc 1 586 0
 2352 00f2 27E0     		b	.L106
 2353              	.L116:
 587:.\main.c      ****             case 16:
 588:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2354              		.loc 1 588 0
 2355 00f4 FA8B     		ldrh	r2, [r7, #30]
 2356 00f6 194B     		ldr	r3, .L126+12
 2357 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 589:.\main.c      ****             break;
 2358              		.loc 1 589 0
 2359 00fa 23E0     		b	.L106
 2360              	.L117:
 590:.\main.c      ****             case 18:
 591:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2361              		.loc 1 591 0
 2362 00fc FA8B     		ldrh	r2, [r7, #30]
 2363 00fe 174B     		ldr	r3, .L126+12
 2364 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 592:.\main.c      ****             break;
 2365              		.loc 1 592 0
 2366 0102 1FE0     		b	.L106
 2367              	.L118:
 593:.\main.c      ****             case 20:
 594:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2368              		.loc 1 594 0
 2369 0104 FA8B     		ldrh	r2, [r7, #30]
 2370 0106 154B     		ldr	r3, .L126+12
 2371 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 595:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 54


 2372              		.loc 1 595 0
 2373 010a 1BE0     		b	.L106
 2374              	.L119:
 596:.\main.c      ****             case 22:
 597:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2375              		.loc 1 597 0
 2376 010c FA8B     		ldrh	r2, [r7, #30]
 2377 010e 134B     		ldr	r3, .L126+12
 2378 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 598:.\main.c      ****             break;
 2379              		.loc 1 598 0
 2380 0112 17E0     		b	.L106
 2381              	.L120:
 599:.\main.c      ****             case 24:
 600:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2382              		.loc 1 600 0
 2383 0114 FA8B     		ldrh	r2, [r7, #30]
 2384 0116 114B     		ldr	r3, .L126+12
 2385 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 601:.\main.c      ****             break;
 2386              		.loc 1 601 0
 2387 011a 13E0     		b	.L106
 2388              	.L121:
 602:.\main.c      ****             case 26:
 603:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2389              		.loc 1 603 0
 2390 011c FA8B     		ldrh	r2, [r7, #30]
 2391 011e 0F4B     		ldr	r3, .L126+12
 2392 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 604:.\main.c      ****             break;
 2393              		.loc 1 604 0
 2394 0122 0FE0     		b	.L106
 2395              	.L122:
 605:.\main.c      ****             case 28:
 606:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2396              		.loc 1 606 0
 2397 0124 FA8B     		ldrh	r2, [r7, #30]
 2398 0126 0D4B     		ldr	r3, .L126+12
 2399 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 607:.\main.c      ****             break;
 2400              		.loc 1 607 0
 2401 012a 0BE0     		b	.L106
 2402              	.L123:
 608:.\main.c      ****             case 30:
 609:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2403              		.loc 1 609 0
 2404 012c FA8B     		ldrh	r2, [r7, #30]
 2405 012e 0B4B     		ldr	r3, .L126+12
 2406 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 610:.\main.c      ****             break;
 2407              		.loc 1 610 0
 2408 0132 07E0     		b	.L106
 2409              	.L124:
 611:.\main.c      ****             case 32:
 612:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2410              		.loc 1 612 0
 2411 0134 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 55


 2412 0136 094B     		ldr	r3, .L126+12
 2413 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 613:.\main.c      ****             break;
 2414              		.loc 1 613 0
 2415 013a 03E0     		b	.L106
 2416              	.L125:
 614:.\main.c      ****             case 34:
 615:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2417              		.loc 1 615 0
 2418 013c FA8B     		ldrh	r2, [r7, #30]
 2419 013e 074B     		ldr	r3, .L126+12
 2420 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 616:.\main.c      ****             break;
 2421              		.loc 1 616 0
 2422 0142 00BF     		nop
 2423              	.L106:
 2424              	.LBE8:
 617:.\main.c      ****         }
 618:.\main.c      ****     }
 619:.\main.c      **** }
 2425              		.loc 1 619 0
 2426 0144 2437     		adds	r7, r7, #36
 2427              		.cfi_def_cfa_offset 4
 2428 0146 BD46     		mov	sp, r7
 2429              		.cfi_def_cfa_register 13
 2430              		@ sp needed
 2431 0148 5DF8047B 		ldr	r7, [sp], #4
 2432              		.cfi_restore 7
 2433              		.cfi_def_cfa_offset 0
 2434 014c 7047     		bx	lr
 2435              	.L127:
 2436 014e 00BF     		.align	2
 2437              	.L126:
 2438 0150 00000000 		.word	flag_rx
 2439 0154 00000000 		.word	packet
 2440 0158 00000000 		.word	byteCount
 2441 015c 00000000 		.word	buffer_state
 2442              		.cfi_endproc
 2443              	.LFE72:
 2444              		.size	handle_rx_binary, .-handle_rx_binary
 2445              		.section	.text.setLeftDir,"ax",%progbits
 2446              		.align	2
 2447              		.global	setLeftDir
 2448              		.thumb
 2449              		.thumb_func
 2450              		.type	setLeftDir, %function
 2451              	setLeftDir:
 2452              	.LFB73:
 620:.\main.c      **** 
 621:.\main.c      **** void setLeftDir(uint8 dir)
 622:.\main.c      **** {
 2453              		.loc 1 622 0
 2454              		.cfi_startproc
 2455              		@ args = 0, pretend = 0, frame = 8
 2456              		@ frame_needed = 1, uses_anonymous_args = 0
 2457 0000 80B5     		push	{r7, lr}
 2458              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 56


 2459              		.cfi_offset 7, -8
 2460              		.cfi_offset 14, -4
 2461 0002 82B0     		sub	sp, sp, #8
 2462              		.cfi_def_cfa_offset 16
 2463 0004 00AF     		add	r7, sp, #0
 2464              		.cfi_def_cfa_register 7
 2465 0006 0346     		mov	r3, r0
 2466 0008 FB71     		strb	r3, [r7, #7]
 623:.\main.c      ****     M2_IN2_Write(dir);
 2467              		.loc 1 623 0
 2468 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2469 000c 1846     		mov	r0, r3
 2470 000e FFF7FEFF 		bl	M2_IN2_Write
 624:.\main.c      **** }
 2471              		.loc 1 624 0
 2472 0012 0837     		adds	r7, r7, #8
 2473              		.cfi_def_cfa_offset 8
 2474 0014 BD46     		mov	sp, r7
 2475              		.cfi_def_cfa_register 13
 2476              		@ sp needed
 2477 0016 80BD     		pop	{r7, pc}
 2478              		.cfi_endproc
 2479              	.LFE73:
 2480              		.size	setLeftDir, .-setLeftDir
 2481              		.section	.text.setRightDir,"ax",%progbits
 2482              		.align	2
 2483              		.global	setRightDir
 2484              		.thumb
 2485              		.thumb_func
 2486              		.type	setRightDir, %function
 2487              	setRightDir:
 2488              	.LFB74:
 625:.\main.c      **** 
 626:.\main.c      **** void setRightDir(uint8 dir)
 627:.\main.c      **** {
 2489              		.loc 1 627 0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 8
 2492              		@ frame_needed = 1, uses_anonymous_args = 0
 2493 0000 80B5     		push	{r7, lr}
 2494              		.cfi_def_cfa_offset 8
 2495              		.cfi_offset 7, -8
 2496              		.cfi_offset 14, -4
 2497 0002 82B0     		sub	sp, sp, #8
 2498              		.cfi_def_cfa_offset 16
 2499 0004 00AF     		add	r7, sp, #0
 2500              		.cfi_def_cfa_register 7
 2501 0006 0346     		mov	r3, r0
 2502 0008 FB71     		strb	r3, [r7, #7]
 628:.\main.c      ****     M1_IN2_Write(dir);
 2503              		.loc 1 628 0
 2504 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2505 000c 1846     		mov	r0, r3
 2506 000e FFF7FEFF 		bl	M1_IN2_Write
 629:.\main.c      **** }
 2507              		.loc 1 629 0
 2508 0012 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 57


 2509              		.cfi_def_cfa_offset 8
 2510 0014 BD46     		mov	sp, r7
 2511              		.cfi_def_cfa_register 13
 2512              		@ sp needed
 2513 0016 80BD     		pop	{r7, pc}
 2514              		.cfi_endproc
 2515              	.LFE74:
 2516              		.size	setRightDir, .-setRightDir
 2517              		.section	.rodata
 2518 00b7 00       		.align	2
 2519              	.LC8:
 2520 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2520      2025640D 
 2520      0A00
 2521              		.section	.text.reverseDirection,"ax",%progbits
 2522              		.align	2
 2523              		.global	reverseDirection
 2524              		.thumb
 2525              		.thumb_func
 2526              		.type	reverseDirection, %function
 2527              	reverseDirection:
 2528              	.LFB75:
 630:.\main.c      **** 
 631:.\main.c      **** void reverseDirection()
 632:.\main.c      **** {
 2529              		.loc 1 632 0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 16
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533 0000 80B5     		push	{r7, lr}
 2534              		.cfi_def_cfa_offset 8
 2535              		.cfi_offset 7, -8
 2536              		.cfi_offset 14, -4
 2537 0002 84B0     		sub	sp, sp, #16
 2538              		.cfi_def_cfa_offset 24
 2539 0004 00AF     		add	r7, sp, #0
 2540              		.cfi_def_cfa_register 7
 633:.\main.c      ****     direction = !direction;
 2541              		.loc 1 633 0
 2542 0006 114B     		ldr	r3, .L131
 2543 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2544 000a 002B     		cmp	r3, #0
 2545 000c 0CBF     		ite	eq
 2546 000e 0123     		moveq	r3, #1
 2547 0010 0023     		movne	r3, #0
 2548 0012 DBB2     		uxtb	r3, r3
 2549 0014 1A46     		mov	r2, r3
 2550 0016 0D4B     		ldr	r3, .L131
 2551 0018 1A70     		strb	r2, [r3]
 634:.\main.c      ****     setLeftDir(direction);
 2552              		.loc 1 634 0
 2553 001a 0C4B     		ldr	r3, .L131
 2554 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2555 001e 1846     		mov	r0, r3
 2556 0020 FFF7FEFF 		bl	setLeftDir
 635:.\main.c      ****     setRightDir(direction);
 2557              		.loc 1 635 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 58


 2558 0024 094B     		ldr	r3, .L131
 2559 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2560 0028 1846     		mov	r0, r3
 2561 002a FFF7FEFF 		bl	setRightDir
 636:.\main.c      ****     char mes[16];
 637:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2562              		.loc 1 637 0
 2563 002e 074B     		ldr	r3, .L131
 2564 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2565 0032 1A46     		mov	r2, r3
 2566 0034 3B46     		mov	r3, r7
 2567 0036 1846     		mov	r0, r3
 2568 0038 0549     		ldr	r1, .L131+4
 2569 003a FFF7FEFF 		bl	sprintf
 638:.\main.c      ****     UART_PutString(mes);
 2570              		.loc 1 638 0
 2571 003e 3B46     		mov	r3, r7
 2572 0040 1846     		mov	r0, r3
 2573 0042 FFF7FEFF 		bl	UART_PutString
 639:.\main.c      **** }
 2574              		.loc 1 639 0
 2575 0046 1037     		adds	r7, r7, #16
 2576              		.cfi_def_cfa_offset 8
 2577 0048 BD46     		mov	sp, r7
 2578              		.cfi_def_cfa_register 13
 2579              		@ sp needed
 2580 004a 80BD     		pop	{r7, pc}
 2581              	.L132:
 2582              		.align	2
 2583              	.L131:
 2584 004c 00000000 		.word	direction
 2585 0050 B8000000 		.word	.LC8
 2586              		.cfi_endproc
 2587              	.LFE75:
 2588              		.size	reverseDirection, .-reverseDirection
 2589              		.global	__aeabi_dcmplt
 2590              		.global	__aeabi_ddiv
 2591              		.global	__aeabi_d2iz
 2592              		.section	.text.setSpeed,"ax",%progbits
 2593              		.align	2
 2594              		.global	setSpeed
 2595              		.thumb
 2596              		.thumb_func
 2597              		.type	setSpeed, %function
 2598              	setSpeed:
 2599              	.LFB76:
 640:.\main.c      **** 
 641:.\main.c      **** void setSpeed(double left, double right){
 2600              		.loc 1 641 0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 24
 2603              		@ frame_needed = 1, uses_anonymous_args = 0
 2604 0000 80B5     		push	{r7, lr}
 2605              		.cfi_def_cfa_offset 8
 2606              		.cfi_offset 7, -8
 2607              		.cfi_offset 14, -4
 2608 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 59


 2609              		.cfi_def_cfa_offset 32
 2610 0004 00AF     		add	r7, sp, #0
 2611              		.cfi_def_cfa_register 7
 2612 0006 C7E90201 		strd	r0, [r7, #8]
 2613 000a C7E90023 		strd	r2, [r7]
 642:.\main.c      ****     if(right < 0.0)
 2614              		.loc 1 642 0
 2615 000e D7E90001 		ldrd	r0, [r7]
 2616 0012 4FF00002 		mov	r2, #0
 2617 0016 4FF00003 		mov	r3, #0
 2618 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2619 001e 0346     		mov	r3, r0
 2620 0020 002B     		cmp	r3, #0
 2621 0022 10D0     		beq	.L142
 643:.\main.c      ****     {
 644:.\main.c      ****         //char mes[16];
 645:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 646:.\main.c      ****        // UART_PutString(mes);
 647:.\main.c      ****         setRightDir(!direction);
 2622              		.loc 1 647 0
 2623 0024 304B     		ldr	r3, .L144+8
 2624 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2625 0028 002B     		cmp	r3, #0
 2626 002a 0CBF     		ite	eq
 2627 002c 0123     		moveq	r3, #1
 2628 002e 0023     		movne	r3, #0
 2629 0030 DBB2     		uxtb	r3, r3
 2630 0032 1846     		mov	r0, r3
 2631 0034 FFF7FEFF 		bl	setRightDir
 648:.\main.c      ****         right = -right;
 2632              		.loc 1 648 0
 2633 0038 3B68     		ldr	r3, [r7]
 2634 003a 3B60     		str	r3, [r7]
 2635 003c 7B68     		ldr	r3, [r7, #4]
 2636 003e 83F00043 		eor	r3, r3, #-2147483648
 2637 0042 7B60     		str	r3, [r7, #4]
 2638 0044 04E0     		b	.L136
 2639              	.L142:
 649:.\main.c      ****     }
 650:.\main.c      ****     else setRightDir(direction);
 2640              		.loc 1 650 0
 2641 0046 284B     		ldr	r3, .L144+8
 2642 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2643 004a 1846     		mov	r0, r3
 2644 004c FFF7FEFF 		bl	setRightDir
 2645              	.L136:
 651:.\main.c      ****     
 652:.\main.c      ****     if(left < 0.0)
 2646              		.loc 1 652 0
 2647 0050 D7E90201 		ldrd	r0, [r7, #8]
 2648 0054 4FF00002 		mov	r2, #0
 2649 0058 4FF00003 		mov	r3, #0
 2650 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2651 0060 0346     		mov	r3, r0
 2652 0062 002B     		cmp	r3, #0
 2653 0064 10D0     		beq	.L143
 653:.\main.c      ****     {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 60


 654:.\main.c      ****        // char mes[16];
 655:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 656:.\main.c      ****         //UART_PutString(mes);
 657:.\main.c      ****         setLeftDir(!direction);
 2654              		.loc 1 657 0
 2655 0066 204B     		ldr	r3, .L144+8
 2656 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2657 006a 002B     		cmp	r3, #0
 2658 006c 0CBF     		ite	eq
 2659 006e 0123     		moveq	r3, #1
 2660 0070 0023     		movne	r3, #0
 2661 0072 DBB2     		uxtb	r3, r3
 2662 0074 1846     		mov	r0, r3
 2663 0076 FFF7FEFF 		bl	setLeftDir
 658:.\main.c      ****         left = -left;
 2664              		.loc 1 658 0
 2665 007a BB68     		ldr	r3, [r7, #8]
 2666 007c BB60     		str	r3, [r7, #8]
 2667 007e FB68     		ldr	r3, [r7, #12]
 2668 0080 83F00043 		eor	r3, r3, #-2147483648
 2669 0084 FB60     		str	r3, [r7, #12]
 2670 0086 04E0     		b	.L139
 2671              	.L143:
 659:.\main.c      ****     }
 660:.\main.c      ****     else setLeftDir(direction);
 2672              		.loc 1 660 0
 2673 0088 174B     		ldr	r3, .L144+8
 2674 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2675 008c 1846     		mov	r0, r3
 2676 008e FFF7FEFF 		bl	setLeftDir
 2677              	.L139:
 661:.\main.c      ****     
 662:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2678              		.loc 1 662 0
 2679 0092 D7E90201 		ldrd	r0, [r7, #8]
 2680 0096 12A3     		adr	r3, .L144
 2681 0098 D3E90023 		ldrd	r2, [r3]
 2682 009c FFF7FEFF 		bl	__aeabi_ddiv
 2683 00a0 0246     		mov	r2, r0
 2684 00a2 0B46     		mov	r3, r1
 2685 00a4 1046     		mov	r0, r2
 2686 00a6 1946     		mov	r1, r3
 2687 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2688 00ac 0346     		mov	r3, r0
 2689 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 663:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2690              		.loc 1 663 0
 2691 00b0 D7E90001 		ldrd	r0, [r7]
 2692 00b4 0AA3     		adr	r3, .L144
 2693 00b6 D3E90023 		ldrd	r2, [r3]
 2694 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2695 00be 0246     		mov	r2, r0
 2696 00c0 0B46     		mov	r3, r1
 2697 00c2 1046     		mov	r0, r2
 2698 00c4 1946     		mov	r1, r3
 2699 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2700 00ca 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 61


 2701 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 664:.\main.c      ****     
 665:.\main.c      ****     leftSpeedLimit = countsRight;
 2702              		.loc 1 665 0
 2703 00ce 074A     		ldr	r2, .L144+12
 2704 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2705 00d2 1380     		strh	r3, [r2]	@ movhi
 666:.\main.c      ****     rightSpeedLimit = countsLeft;
 2706              		.loc 1 666 0
 2707 00d4 064A     		ldr	r2, .L144+16
 2708 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2709 00d8 1380     		strh	r3, [r2]	@ movhi
 667:.\main.c      **** }
 2710              		.loc 1 667 0
 2711 00da 1837     		adds	r7, r7, #24
 2712              		.cfi_def_cfa_offset 8
 2713 00dc BD46     		mov	sp, r7
 2714              		.cfi_def_cfa_register 13
 2715              		@ sp needed
 2716 00de 80BD     		pop	{r7, pc}
 2717              	.L145:
 2718              		.align	3
 2719              	.L144:
 2720 00e0 969526A5 		.word	-1524197994
 2721 00e4 A0DBEF3F 		.word	1072683936
 2722 00e8 00000000 		.word	direction
 2723 00ec 00000000 		.word	leftSpeedLimit
 2724 00f0 00000000 		.word	rightSpeedLimit
 2725              		.cfi_endproc
 2726              	.LFE76:
 2727              		.size	setSpeed, .-setSpeed
 2728 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2729              		.align	2
 2730              		.global	brakeLeft
 2731              		.thumb
 2732              		.thumb_func
 2733              		.type	brakeLeft, %function
 2734              	brakeLeft:
 2735              	.LFB77:
 668:.\main.c      **** 
 669:.\main.c      **** void brakeLeft()
 670:.\main.c      **** {
 2736              		.loc 1 670 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 0
 2739              		@ frame_needed = 1, uses_anonymous_args = 0
 2740 0000 80B5     		push	{r7, lr}
 2741              		.cfi_def_cfa_offset 8
 2742              		.cfi_offset 7, -8
 2743              		.cfi_offset 14, -4
 2744 0002 00AF     		add	r7, sp, #0
 2745              		.cfi_def_cfa_register 7
 671:.\main.c      ****     PWM_1_WriteCompare(0);
 2746              		.loc 1 671 0
 2747 0004 0020     		movs	r0, #0
 2748 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 672:.\main.c      ****     left_duty_cycle = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 62


 2749              		.loc 1 672 0
 2750 000a 024B     		ldr	r3, .L147
 2751 000c 0022     		movs	r2, #0
 2752 000e 1A80     		strh	r2, [r3]	@ movhi
 673:.\main.c      **** }
 2753              		.loc 1 673 0
 2754 0010 80BD     		pop	{r7, pc}
 2755              	.L148:
 2756 0012 00BF     		.align	2
 2757              	.L147:
 2758 0014 00000000 		.word	left_duty_cycle
 2759              		.cfi_endproc
 2760              	.LFE77:
 2761              		.size	brakeLeft, .-brakeLeft
 2762              		.section	.text.brakeRight,"ax",%progbits
 2763              		.align	2
 2764              		.global	brakeRight
 2765              		.thumb
 2766              		.thumb_func
 2767              		.type	brakeRight, %function
 2768              	brakeRight:
 2769              	.LFB78:
 674:.\main.c      **** 
 675:.\main.c      **** void brakeRight()
 676:.\main.c      **** {
 2770              		.loc 1 676 0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 1, uses_anonymous_args = 0
 2774 0000 80B5     		push	{r7, lr}
 2775              		.cfi_def_cfa_offset 8
 2776              		.cfi_offset 7, -8
 2777              		.cfi_offset 14, -4
 2778 0002 00AF     		add	r7, sp, #0
 2779              		.cfi_def_cfa_register 7
 677:.\main.c      ****      PWM_2_WriteCompare(0);
 2780              		.loc 1 677 0
 2781 0004 0020     		movs	r0, #0
 2782 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 678:.\main.c      ****      right_duty_cycle = 0;
 2783              		.loc 1 678 0
 2784 000a 024B     		ldr	r3, .L150
 2785 000c 0022     		movs	r2, #0
 2786 000e 1A80     		strh	r2, [r3]	@ movhi
 679:.\main.c      **** }
 2787              		.loc 1 679 0
 2788 0010 80BD     		pop	{r7, pc}
 2789              	.L151:
 2790 0012 00BF     		.align	2
 2791              	.L150:
 2792 0014 00000000 		.word	right_duty_cycle
 2793              		.cfi_endproc
 2794              	.LFE78:
 2795              		.size	brakeRight, .-brakeRight
 2796              		.section	.text.brakeMotor,"ax",%progbits
 2797              		.align	2
 2798              		.global	brakeMotor
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 63


 2799              		.thumb
 2800              		.thumb_func
 2801              		.type	brakeMotor, %function
 2802              	brakeMotor:
 2803              	.LFB79:
 680:.\main.c      **** 
 681:.\main.c      **** void brakeMotor(){
 2804              		.loc 1 681 0
 2805              		.cfi_startproc
 2806              		@ args = 0, pretend = 0, frame = 0
 2807              		@ frame_needed = 1, uses_anonymous_args = 0
 2808 0000 80B5     		push	{r7, lr}
 2809              		.cfi_def_cfa_offset 8
 2810              		.cfi_offset 7, -8
 2811              		.cfi_offset 14, -4
 2812 0002 00AF     		add	r7, sp, #0
 2813              		.cfi_def_cfa_register 7
 682:.\main.c      ****     setSpeed(0, 0);
 2814              		.loc 1 682 0
 2815 0004 4FF00000 		mov	r0, #0
 2816 0008 4FF00001 		mov	r1, #0
 2817 000c 4FF00002 		mov	r2, #0
 2818 0010 4FF00003 		mov	r3, #0
 2819 0014 FFF7FEFF 		bl	setSpeed
 683:.\main.c      ****     brakeLeft();
 2820              		.loc 1 683 0
 2821 0018 FFF7FEFF 		bl	brakeLeft
 684:.\main.c      ****     brakeRight();
 2822              		.loc 1 684 0
 2823 001c FFF7FEFF 		bl	brakeRight
 685:.\main.c      **** }
 2824              		.loc 1 685 0
 2825 0020 80BD     		pop	{r7, pc}
 2826              		.cfi_endproc
 2827              	.LFE79:
 2828              		.size	brakeMotor, .-brakeMotor
 2829 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2830              		.align	2
 2831              		.global	driveForwards
 2832              		.thumb
 2833              		.thumb_func
 2834              		.type	driveForwards, %function
 2835              	driveForwards:
 2836              	.LFB80:
 686:.\main.c      **** 
 687:.\main.c      **** void driveForwards()
 688:.\main.c      **** {
 2837              		.loc 1 688 0
 2838              		.cfi_startproc
 2839              		@ args = 0, pretend = 0, frame = 0
 2840              		@ frame_needed = 1, uses_anonymous_args = 0
 2841 0000 80B5     		push	{r7, lr}
 2842              		.cfi_def_cfa_offset 8
 2843              		.cfi_offset 7, -8
 2844              		.cfi_offset 14, -4
 2845 0002 00AF     		add	r7, sp, #0
 2846              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 64


 689:.\main.c      ****     setSpeed(speed, speed);
 2847              		.loc 1 689 0
 2848 0004 044B     		ldr	r3, .L154
 2849 0006 D3E90001 		ldrd	r0, [r3]
 2850 000a 034B     		ldr	r3, .L154
 2851 000c D3E90023 		ldrd	r2, [r3]
 2852 0010 FFF7FEFF 		bl	setSpeed
 690:.\main.c      **** }
 2853              		.loc 1 690 0
 2854 0014 80BD     		pop	{r7, pc}
 2855              	.L155:
 2856 0016 00BF     		.align	2
 2857              	.L154:
 2858 0018 00000000 		.word	speed
 2859              		.cfi_endproc
 2860              	.LFE80:
 2861              		.size	driveForwards, .-driveForwards
 2862              		.section	.text.turnRight,"ax",%progbits
 2863              		.align	2
 2864              		.global	turnRight
 2865              		.thumb
 2866              		.thumb_func
 2867              		.type	turnRight, %function
 2868              	turnRight:
 2869              	.LFB81:
 691:.\main.c      **** 
 692:.\main.c      **** void turnRight()
 693:.\main.c      **** {
 2870              		.loc 1 693 0
 2871              		.cfi_startproc
 2872              		@ args = 0, pretend = 0, frame = 0
 2873              		@ frame_needed = 1, uses_anonymous_args = 0
 2874 0000 80B5     		push	{r7, lr}
 2875              		.cfi_def_cfa_offset 8
 2876              		.cfi_offset 7, -8
 2877              		.cfi_offset 14, -4
 2878 0002 00AF     		add	r7, sp, #0
 2879              		.cfi_def_cfa_register 7
 694:.\main.c      ****     setSpeed(0,speed*2.0);
 2880              		.loc 1 694 0
 2881 0004 074B     		ldr	r3, .L157
 2882 0006 D3E90023 		ldrd	r2, [r3]
 2883 000a 1046     		mov	r0, r2
 2884 000c 1946     		mov	r1, r3
 2885 000e FFF7FEFF 		bl	__aeabi_dadd
 2886 0012 0246     		mov	r2, r0
 2887 0014 0B46     		mov	r3, r1
 2888 0016 4FF00000 		mov	r0, #0
 2889 001a 4FF00001 		mov	r1, #0
 2890 001e FFF7FEFF 		bl	setSpeed
 695:.\main.c      **** }
 2891              		.loc 1 695 0
 2892 0022 80BD     		pop	{r7, pc}
 2893              	.L158:
 2894              		.align	2
 2895              	.L157:
 2896 0024 00000000 		.word	speed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 65


 2897              		.cfi_endproc
 2898              	.LFE81:
 2899              		.size	turnRight, .-turnRight
 2900              		.section	.text.turnLeft,"ax",%progbits
 2901              		.align	2
 2902              		.global	turnLeft
 2903              		.thumb
 2904              		.thumb_func
 2905              		.type	turnLeft, %function
 2906              	turnLeft:
 2907              	.LFB82:
 696:.\main.c      **** 
 697:.\main.c      **** void turnLeft()
 698:.\main.c      **** {
 2908              		.loc 1 698 0
 2909              		.cfi_startproc
 2910              		@ args = 0, pretend = 0, frame = 0
 2911              		@ frame_needed = 1, uses_anonymous_args = 0
 2912 0000 80B5     		push	{r7, lr}
 2913              		.cfi_def_cfa_offset 8
 2914              		.cfi_offset 7, -8
 2915              		.cfi_offset 14, -4
 2916 0002 00AF     		add	r7, sp, #0
 2917              		.cfi_def_cfa_register 7
 699:.\main.c      ****     setSpeed(speed*2.0,0);
 2918              		.loc 1 699 0
 2919 0004 084B     		ldr	r3, .L160
 2920 0006 D3E90023 		ldrd	r2, [r3]
 2921 000a 1046     		mov	r0, r2
 2922 000c 1946     		mov	r1, r3
 2923 000e FFF7FEFF 		bl	__aeabi_dadd
 2924 0012 0246     		mov	r2, r0
 2925 0014 0B46     		mov	r3, r1
 2926 0016 1046     		mov	r0, r2
 2927 0018 1946     		mov	r1, r3
 2928 001a 4FF00002 		mov	r2, #0
 2929 001e 4FF00003 		mov	r3, #0
 2930 0022 FFF7FEFF 		bl	setSpeed
 700:.\main.c      **** }
 2931              		.loc 1 700 0
 2932 0026 80BD     		pop	{r7, pc}
 2933              	.L161:
 2934              		.align	2
 2935              	.L160:
 2936 0028 00000000 		.word	speed
 2937              		.cfi_endproc
 2938              	.LFE82:
 2939              		.size	turnLeft, .-turnLeft
 2940              		.section	.text.turnU,"ax",%progbits
 2941              		.align	2
 2942              		.global	turnU
 2943              		.thumb
 2944              		.thumb_func
 2945              		.type	turnU, %function
 2946              	turnU:
 2947              	.LFB83:
 701:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 66


 702:.\main.c      **** void turnU()
 703:.\main.c      **** {
 2948              		.loc 1 703 0
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 0
 2951              		@ frame_needed = 1, uses_anonymous_args = 0
 2952 0000 B0B5     		push	{r4, r5, r7, lr}
 2953              		.cfi_def_cfa_offset 16
 2954              		.cfi_offset 4, -16
 2955              		.cfi_offset 5, -12
 2956              		.cfi_offset 7, -8
 2957              		.cfi_offset 14, -4
 2958 0002 00AF     		add	r7, sp, #0
 2959              		.cfi_def_cfa_register 7
 704:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 2960              		.loc 1 704 0
 2961 0004 0E4B     		ldr	r3, .L163
 2962 0006 D3E90023 		ldrd	r2, [r3]
 2963 000a 1446     		mov	r4, r2
 2964 000c 83F00045 		eor	r5, r3, #-2147483648
 2965 0010 2046     		mov	r0, r4
 2966 0012 2946     		mov	r1, r5
 2967 0014 2246     		mov	r2, r4
 2968 0016 2B46     		mov	r3, r5
 2969 0018 FFF7FEFF 		bl	__aeabi_dadd
 2970 001c 0246     		mov	r2, r0
 2971 001e 0B46     		mov	r3, r1
 2972 0020 1446     		mov	r4, r2
 2973 0022 1D46     		mov	r5, r3
 2974 0024 064B     		ldr	r3, .L163
 2975 0026 D3E90023 		ldrd	r2, [r3]
 2976 002a 1046     		mov	r0, r2
 2977 002c 1946     		mov	r1, r3
 2978 002e FFF7FEFF 		bl	__aeabi_dadd
 2979 0032 0246     		mov	r2, r0
 2980 0034 0B46     		mov	r3, r1
 2981 0036 2046     		mov	r0, r4
 2982 0038 2946     		mov	r1, r5
 2983 003a FFF7FEFF 		bl	setSpeed
 705:.\main.c      **** }
 2984              		.loc 1 705 0
 2985 003e B0BD     		pop	{r4, r5, r7, pc}
 2986              	.L164:
 2987              		.align	2
 2988              	.L163:
 2989 0040 00000000 		.word	speed
 2990              		.cfi_endproc
 2991              	.LFE83:
 2992              		.size	turnU, .-turnU
 2993              		.section	.text.initTurnLeft,"ax",%progbits
 2994              		.align	2
 2995              		.global	initTurnLeft
 2996              		.thumb
 2997              		.thumb_func
 2998              		.type	initTurnLeft, %function
 2999              	initTurnLeft:
 3000              	.LFB84:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 67


 706:.\main.c      **** 
 707:.\main.c      **** void initTurnLeft(){
 3001              		.loc 1 707 0
 3002              		.cfi_startproc
 3003              		@ args = 0, pretend = 0, frame = 0
 3004              		@ frame_needed = 1, uses_anonymous_args = 0
 3005 0000 80B5     		push	{r7, lr}
 3006              		.cfi_def_cfa_offset 8
 3007              		.cfi_offset 7, -8
 3008              		.cfi_offset 14, -4
 3009 0002 00AF     		add	r7, sp, #0
 3010              		.cfi_def_cfa_register 7
 708:.\main.c      ****     Timer_2_Stop();
 3011              		.loc 1 708 0
 3012 0004 FFF7FEFF 		bl	Timer_2_Stop
 709:.\main.c      ****     prev_movement_state = movement_state;
 3013              		.loc 1 709 0
 3014 0008 084B     		ldr	r3, .L166
 3015 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3016 000c 084B     		ldr	r3, .L166+4
 3017 000e 1A70     		strb	r2, [r3]
 710:.\main.c      ****     movement_state = LTURN;
 3018              		.loc 1 710 0
 3019 0010 064B     		ldr	r3, .L166
 3020 0012 0122     		movs	r2, #1
 3021 0014 1A70     		strb	r2, [r3]
 711:.\main.c      ****     brakeLeft();
 3022              		.loc 1 711 0
 3023 0016 FFF7FEFF 		bl	brakeLeft
 712:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3024              		.loc 1 712 0
 3025 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3026 001e 0346     		mov	r3, r0
 3027 0020 1A46     		mov	r2, r3
 3028 0022 044B     		ldr	r3, .L166+8
 3029 0024 1A80     		strh	r2, [r3]	@ movhi
 713:.\main.c      ****     Timer_2_Start();
 3030              		.loc 1 713 0
 3031 0026 FFF7FEFF 		bl	Timer_2_Start
 714:.\main.c      **** }
 3032              		.loc 1 714 0
 3033 002a 80BD     		pop	{r7, pc}
 3034              	.L167:
 3035              		.align	2
 3036              	.L166:
 3037 002c 00000000 		.word	movement_state
 3038 0030 00000000 		.word	prev_movement_state
 3039 0034 00000000 		.word	start_turn_count
 3040              		.cfi_endproc
 3041              	.LFE84:
 3042              		.size	initTurnLeft, .-initTurnLeft
 3043              		.section	.text.initTurnRight,"ax",%progbits
 3044              		.align	2
 3045              		.global	initTurnRight
 3046              		.thumb
 3047              		.thumb_func
 3048              		.type	initTurnRight, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 68


 3049              	initTurnRight:
 3050              	.LFB85:
 715:.\main.c      **** 
 716:.\main.c      **** void initTurnRight(){
 3051              		.loc 1 716 0
 3052              		.cfi_startproc
 3053              		@ args = 0, pretend = 0, frame = 0
 3054              		@ frame_needed = 1, uses_anonymous_args = 0
 3055 0000 80B5     		push	{r7, lr}
 3056              		.cfi_def_cfa_offset 8
 3057              		.cfi_offset 7, -8
 3058              		.cfi_offset 14, -4
 3059 0002 00AF     		add	r7, sp, #0
 3060              		.cfi_def_cfa_register 7
 717:.\main.c      ****     Timer_2_Stop();
 3061              		.loc 1 717 0
 3062 0004 FFF7FEFF 		bl	Timer_2_Stop
 718:.\main.c      ****     prev_movement_state = movement_state;
 3063              		.loc 1 718 0
 3064 0008 084B     		ldr	r3, .L169
 3065 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3066 000c 084B     		ldr	r3, .L169+4
 3067 000e 1A70     		strb	r2, [r3]
 719:.\main.c      ****     movement_state = RTURN;
 3068              		.loc 1 719 0
 3069 0010 064B     		ldr	r3, .L169
 3070 0012 0222     		movs	r2, #2
 3071 0014 1A70     		strb	r2, [r3]
 720:.\main.c      ****     brakeRight();
 3072              		.loc 1 720 0
 3073 0016 FFF7FEFF 		bl	brakeRight
 721:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3074              		.loc 1 721 0
 3075 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3076 001e 0346     		mov	r3, r0
 3077 0020 1A46     		mov	r2, r3
 3078 0022 044B     		ldr	r3, .L169+8
 3079 0024 1A80     		strh	r2, [r3]	@ movhi
 722:.\main.c      ****     Timer_2_Start();
 3080              		.loc 1 722 0
 3081 0026 FFF7FEFF 		bl	Timer_2_Start
 723:.\main.c      **** }
 3082              		.loc 1 723 0
 3083 002a 80BD     		pop	{r7, pc}
 3084              	.L170:
 3085              		.align	2
 3086              	.L169:
 3087 002c 00000000 		.word	movement_state
 3088 0030 00000000 		.word	prev_movement_state
 3089 0034 00000000 		.word	start_turn_count
 3090              		.cfi_endproc
 3091              	.LFE85:
 3092              		.size	initTurnRight, .-initTurnRight
 3093              		.section	.text.initTurnU,"ax",%progbits
 3094              		.align	2
 3095              		.global	initTurnU
 3096              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 69


 3097              		.thumb_func
 3098              		.type	initTurnU, %function
 3099              	initTurnU:
 3100              	.LFB86:
 724:.\main.c      **** 
 725:.\main.c      **** void initTurnU(){
 3101              		.loc 1 725 0
 3102              		.cfi_startproc
 3103              		@ args = 0, pretend = 0, frame = 0
 3104              		@ frame_needed = 1, uses_anonymous_args = 0
 3105 0000 80B5     		push	{r7, lr}
 3106              		.cfi_def_cfa_offset 8
 3107              		.cfi_offset 7, -8
 3108              		.cfi_offset 14, -4
 3109 0002 00AF     		add	r7, sp, #0
 3110              		.cfi_def_cfa_register 7
 726:.\main.c      ****     Timer_2_Stop();
 3111              		.loc 1 726 0
 3112 0004 FFF7FEFF 		bl	Timer_2_Stop
 727:.\main.c      ****     prev_movement_state = movement_state;
 3113              		.loc 1 727 0
 3114 0008 084B     		ldr	r3, .L172
 3115 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3116 000c 084B     		ldr	r3, .L172+4
 3117 000e 1A70     		strb	r2, [r3]
 728:.\main.c      ****     movement_state = UTURN;
 3118              		.loc 1 728 0
 3119 0010 064B     		ldr	r3, .L172
 3120 0012 0722     		movs	r2, #7
 3121 0014 1A70     		strb	r2, [r3]
 729:.\main.c      ****     brakeMotor();
 3122              		.loc 1 729 0
 3123 0016 FFF7FEFF 		bl	brakeMotor
 730:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3124              		.loc 1 730 0
 3125 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3126 001e 0346     		mov	r3, r0
 3127 0020 1A46     		mov	r2, r3
 3128 0022 044B     		ldr	r3, .L172+8
 3129 0024 1A80     		strh	r2, [r3]	@ movhi
 731:.\main.c      ****     Timer_2_Start();
 3130              		.loc 1 731 0
 3131 0026 FFF7FEFF 		bl	Timer_2_Start
 732:.\main.c      **** }
 3132              		.loc 1 732 0
 3133 002a 80BD     		pop	{r7, pc}
 3134              	.L173:
 3135              		.align	2
 3136              	.L172:
 3137 002c 00000000 		.word	movement_state
 3138 0030 00000000 		.word	prev_movement_state
 3139 0034 00000000 		.word	start_turn_count
 3140              		.cfi_endproc
 3141              	.LFE86:
 3142              		.size	initTurnU, .-initTurnU
 3143              		.section	.text.initForward,"ax",%progbits
 3144              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 70


 3145              		.global	initForward
 3146              		.thumb
 3147              		.thumb_func
 3148              		.type	initForward, %function
 3149              	initForward:
 3150              	.LFB87:
 733:.\main.c      **** 
 734:.\main.c      **** void initForward(){
 3151              		.loc 1 734 0
 3152              		.cfi_startproc
 3153              		@ args = 0, pretend = 0, frame = 0
 3154              		@ frame_needed = 1, uses_anonymous_args = 0
 3155 0000 80B5     		push	{r7, lr}
 3156              		.cfi_def_cfa_offset 8
 3157              		.cfi_offset 7, -8
 3158              		.cfi_offset 14, -4
 3159 0002 00AF     		add	r7, sp, #0
 3160              		.cfi_def_cfa_register 7
 735:.\main.c      ****     brakeMotor();
 3161              		.loc 1 735 0
 3162 0004 FFF7FEFF 		bl	brakeMotor
 736:.\main.c      ****     movement_state = DRIVE;
 3163              		.loc 1 736 0
 3164 0008 014B     		ldr	r3, .L175
 3165 000a 0022     		movs	r2, #0
 3166 000c 1A70     		strb	r2, [r3]
 737:.\main.c      **** }
 3167              		.loc 1 737 0
 3168 000e 80BD     		pop	{r7, pc}
 3169              	.L176:
 3170              		.align	2
 3171              	.L175:
 3172 0010 00000000 		.word	movement_state
 3173              		.cfi_endproc
 3174              	.LFE87:
 3175              		.size	initForward, .-initForward
 3176              		.section	.text.initBrake,"ax",%progbits
 3177              		.align	2
 3178              		.global	initBrake
 3179              		.thumb
 3180              		.thumb_func
 3181              		.type	initBrake, %function
 3182              	initBrake:
 3183              	.LFB88:
 738:.\main.c      **** 
 739:.\main.c      **** void initBrake(){
 3184              		.loc 1 739 0
 3185              		.cfi_startproc
 3186              		@ args = 0, pretend = 0, frame = 0
 3187              		@ frame_needed = 1, uses_anonymous_args = 0
 3188              		@ link register save eliminated.
 3189 0000 80B4     		push	{r7}
 3190              		.cfi_def_cfa_offset 4
 3191              		.cfi_offset 7, -4
 3192 0002 00AF     		add	r7, sp, #0
 3193              		.cfi_def_cfa_register 7
 740:.\main.c      ****     movement_state = STOPPED;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 71


 3194              		.loc 1 740 0
 3195 0004 034B     		ldr	r3, .L178
 3196 0006 0322     		movs	r2, #3
 3197 0008 1A70     		strb	r2, [r3]
 741:.\main.c      **** }
 3198              		.loc 1 741 0
 3199 000a BD46     		mov	sp, r7
 3200              		.cfi_def_cfa_register 13
 3201              		@ sp needed
 3202 000c 5DF8047B 		ldr	r7, [sp], #4
 3203              		.cfi_restore 7
 3204              		.cfi_def_cfa_offset 0
 3205 0010 7047     		bx	lr
 3206              	.L179:
 3207 0012 00BF     		.align	2
 3208              	.L178:
 3209 0014 00000000 		.word	movement_state
 3210              		.cfi_endproc
 3211              	.LFE88:
 3212              		.size	initBrake, .-initBrake
 3213              		.section	.text.initTrack,"ax",%progbits
 3214              		.align	2
 3215              		.global	initTrack
 3216              		.thumb
 3217              		.thumb_func
 3218              		.type	initTrack, %function
 3219              	initTrack:
 3220              	.LFB89:
 742:.\main.c      **** 
 743:.\main.c      **** void initTrack()
 744:.\main.c      **** {
 3221              		.loc 1 744 0
 3222              		.cfi_startproc
 3223              		@ args = 0, pretend = 0, frame = 0
 3224              		@ frame_needed = 1, uses_anonymous_args = 0
 3225              		@ link register save eliminated.
 3226 0000 80B4     		push	{r7}
 3227              		.cfi_def_cfa_offset 4
 3228              		.cfi_offset 7, -4
 3229 0002 00AF     		add	r7, sp, #0
 3230              		.cfi_def_cfa_register 7
 745:.\main.c      ****     movement_state = TRACKING;
 3231              		.loc 1 745 0
 3232 0004 034B     		ldr	r3, .L181
 3233 0006 0422     		movs	r2, #4
 3234 0008 1A70     		strb	r2, [r3]
 746:.\main.c      **** }
 3235              		.loc 1 746 0
 3236 000a BD46     		mov	sp, r7
 3237              		.cfi_def_cfa_register 13
 3238              		@ sp needed
 3239 000c 5DF8047B 		ldr	r7, [sp], #4
 3240              		.cfi_restore 7
 3241              		.cfi_def_cfa_offset 0
 3242 0010 7047     		bx	lr
 3243              	.L182:
 3244 0012 00BF     		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 72


 3245              	.L181:
 3246 0014 00000000 		.word	movement_state
 3247              		.cfi_endproc
 3248              	.LFE89:
 3249              		.size	initTrack, .-initTrack
 3250              		.section	.text.initTrackU,"ax",%progbits
 3251              		.align	2
 3252              		.global	initTrackU
 3253              		.thumb
 3254              		.thumb_func
 3255              		.type	initTrackU, %function
 3256              	initTrackU:
 3257              	.LFB90:
 747:.\main.c      **** 
 748:.\main.c      **** void initTrackU(){
 3258              		.loc 1 748 0
 3259              		.cfi_startproc
 3260              		@ args = 0, pretend = 0, frame = 0
 3261              		@ frame_needed = 1, uses_anonymous_args = 0
 3262              		@ link register save eliminated.
 3263 0000 80B4     		push	{r7}
 3264              		.cfi_def_cfa_offset 4
 3265              		.cfi_offset 7, -4
 3266 0002 00AF     		add	r7, sp, #0
 3267              		.cfi_def_cfa_register 7
 749:.\main.c      ****     movement_state = TRACKING_U;
 3268              		.loc 1 749 0
 3269 0004 034B     		ldr	r3, .L184
 3270 0006 0522     		movs	r2, #5
 3271 0008 1A70     		strb	r2, [r3]
 750:.\main.c      **** }
 3272              		.loc 1 750 0
 3273 000a BD46     		mov	sp, r7
 3274              		.cfi_def_cfa_register 13
 3275              		@ sp needed
 3276 000c 5DF8047B 		ldr	r7, [sp], #4
 3277              		.cfi_restore 7
 3278              		.cfi_def_cfa_offset 0
 3279 0010 7047     		bx	lr
 3280              	.L185:
 3281 0012 00BF     		.align	2
 3282              	.L184:
 3283 0014 00000000 		.word	movement_state
 3284              		.cfi_endproc
 3285              	.LFE90:
 3286              		.size	initTrackU, .-initTrackU
 3287              		.section	.text.inittrackLineZ,"ax",%progbits
 3288              		.align	2
 3289              		.global	inittrackLineZ
 3290              		.thumb
 3291              		.thumb_func
 3292              		.type	inittrackLineZ, %function
 3293              	inittrackLineZ:
 3294              	.LFB91:
 751:.\main.c      **** 
 752:.\main.c      **** void inittrackLineZ(){
 3295              		.loc 1 752 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 73


 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 0
 3298              		@ frame_needed = 1, uses_anonymous_args = 0
 3299              		@ link register save eliminated.
 3300 0000 80B4     		push	{r7}
 3301              		.cfi_def_cfa_offset 4
 3302              		.cfi_offset 7, -4
 3303 0002 00AF     		add	r7, sp, #0
 3304              		.cfi_def_cfa_register 7
 753:.\main.c      ****     movement_state = TRACKING_SOFT;
 3305              		.loc 1 753 0
 3306 0004 034B     		ldr	r3, .L187
 3307 0006 0622     		movs	r2, #6
 3308 0008 1A70     		strb	r2, [r3]
 754:.\main.c      **** }
 3309              		.loc 1 754 0
 3310 000a BD46     		mov	sp, r7
 3311              		.cfi_def_cfa_register 13
 3312              		@ sp needed
 3313 000c 5DF8047B 		ldr	r7, [sp], #4
 3314              		.cfi_restore 7
 3315              		.cfi_def_cfa_offset 0
 3316 0010 7047     		bx	lr
 3317              	.L188:
 3318 0012 00BF     		.align	2
 3319              	.L187:
 3320 0014 00000000 		.word	movement_state
 3321              		.cfi_endproc
 3322              	.LFE91:
 3323              		.size	inittrackLineZ, .-inittrackLineZ
 3324              		.section	.text.rxInt,"ax",%progbits
 3325              		.align	2
 3326              		.global	rxInt
 3327              		.thumb
 3328              		.thumb_func
 3329              		.type	rxInt, %function
 3330              	rxInt:
 3331              	.LFB92:
 755:.\main.c      **** 
 756:.\main.c      **** 
 757:.\main.c      **** 
 758:.\main.c      **** //Binary RF Data
 759:.\main.c      **** CY_ISR(rxInt){
 3332              		.loc 1 759 0
 3333              		.cfi_startproc
 3334              		@ args = 0, pretend = 0, frame = 8
 3335              		@ frame_needed = 1, uses_anonymous_args = 0
 3336 0000 B0B5     		push	{r4, r5, r7, lr}
 3337              		.cfi_def_cfa_offset 16
 3338              		.cfi_offset 4, -16
 3339              		.cfi_offset 5, -12
 3340              		.cfi_offset 7, -8
 3341              		.cfi_offset 14, -4
 3342 0002 82B0     		sub	sp, sp, #8
 3343              		.cfi_def_cfa_offset 24
 3344 0004 00AF     		add	r7, sp, #0
 3345              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 74


 760:.\main.c      ****     char rf_char = UART_GetChar();
 3346              		.loc 1 760 0
 3347 0006 FFF7FEFF 		bl	UART_GetChar
 3348 000a 0346     		mov	r3, r0
 3349 000c FB71     		strb	r3, [r7, #7]
 761:.\main.c      ****     if(rf_char == SOP){
 3350              		.loc 1 761 0
 3351 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3352 0010 AA2B     		cmp	r3, #170
 3353 0012 2BD1     		bne	.L190
 762:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 763:.\main.c      ****             if(byteCount == 34)
 3354              		.loc 1 763 0
 3355 0014 224B     		ldr	r3, .L194
 3356 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3357 0018 222B     		cmp	r3, #34
 3358 001a 20D1     		bne	.L191
 764:.\main.c      ****             {
 765:.\main.c      ****                 system_state = buffer_state;
 3359              		.loc 1 765 0
 3360 001c 214B     		ldr	r3, .L194+4
 3361 001e 224A     		ldr	r2, .L194+8
 3362 0020 1568     		ldr	r5, [r2]	@ unaligned
 3363 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3364 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3365 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3366 0028 1D60     		str	r5, [r3]	@ unaligned
 3367 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3368 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3369 002e D960     		str	r1, [r3, #12]	@ unaligned
 3370 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3371 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3372 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3373 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3374 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3375 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3376 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3377 003e D961     		str	r1, [r3, #28]	@ unaligned
 766:.\main.c      ****                 if(initial_pos_valid == 0)
 3378              		.loc 1 766 0
 3379 0040 1A4B     		ldr	r3, .L194+12
 3380 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3381 0044 002B     		cmp	r3, #0
 3382 0046 0AD1     		bne	.L191
 767:.\main.c      ****                 {
 768:.\main.c      ****                     LED_Write(~LED_Read());
 3383              		.loc 1 768 0
 3384 0048 FFF7FEFF 		bl	LED_Read
 3385 004c 0346     		mov	r3, r0
 3386 004e DB43     		mvns	r3, r3
 3387 0050 DBB2     		uxtb	r3, r3
 3388 0052 1846     		mov	r0, r3
 3389 0054 FFF7FEFF 		bl	LED_Write
 769:.\main.c      ****                     initial_pos_valid = 1;
 3390              		.loc 1 769 0
 3391 0058 144B     		ldr	r3, .L194+12
 3392 005a 0122     		movs	r2, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 75


 3393 005c 1A70     		strb	r2, [r3]
 3394              	.L191:
 770:.\main.c      ****                 }
 771:.\main.c      ****             }
 772:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3395              		.loc 1 772 0
 3396 005e 104B     		ldr	r3, .L194
 3397 0060 0222     		movs	r2, #2
 3398 0062 1A70     		strb	r2, [r3]
 773:.\main.c      ****             flag_rx = 0;
 3399              		.loc 1 773 0
 3400 0064 124B     		ldr	r3, .L194+16
 3401 0066 0022     		movs	r2, #0
 3402 0068 1A70     		strb	r2, [r3]
 3403 006a 16E0     		b	.L189
 3404              	.L190:
 774:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 775:.\main.c      ****         }
 776:.\main.c      ****         else
 777:.\main.c      ****         {
 778:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3405              		.loc 1 778 0
 3406 006c 0C4B     		ldr	r3, .L194
 3407 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3408 0070 03F00103 		and	r3, r3, #1
 3409 0074 0F49     		ldr	r1, .L194+20
 3410 0076 FA79     		ldrb	r2, [r7, #7]
 3411 0078 CA54     		strb	r2, [r1, r3]
 779:.\main.c      ****            
 780:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3412              		.loc 1 780 0
 3413 007a 094B     		ldr	r3, .L194
 3414 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3415 007e 03F00103 		and	r3, r3, #1
 3416 0082 DBB2     		uxtb	r3, r3
 3417 0084 002B     		cmp	r3, #0
 3418 0086 02D0     		beq	.L193
 781:.\main.c      ****             {
 782:.\main.c      ****                 flag_rx = 1;
 3419              		.loc 1 782 0
 3420 0088 094B     		ldr	r3, .L194+16
 3421 008a 0122     		movs	r2, #1
 3422 008c 1A70     		strb	r2, [r3]
 3423              	.L193:
 783:.\main.c      ****             }
 784:.\main.c      ****             byteCount = (byteCount + 1);
 3424              		.loc 1 784 0
 3425 008e 044B     		ldr	r3, .L194
 3426 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3427 0092 0133     		adds	r3, r3, #1
 3428 0094 DAB2     		uxtb	r2, r3
 3429 0096 024B     		ldr	r3, .L194
 3430 0098 1A70     		strb	r2, [r3]
 3431              	.L189:
 785:.\main.c      ****         }
 786:.\main.c      **** }
 3432              		.loc 1 786 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 76


 3433 009a 0837     		adds	r7, r7, #8
 3434              		.cfi_def_cfa_offset 16
 3435 009c BD46     		mov	sp, r7
 3436              		.cfi_def_cfa_register 13
 3437              		@ sp needed
 3438 009e B0BD     		pop	{r4, r5, r7, pc}
 3439              	.L195:
 3440              		.align	2
 3441              	.L194:
 3442 00a0 00000000 		.word	byteCount
 3443 00a4 00000000 		.word	system_state
 3444 00a8 00000000 		.word	buffer_state
 3445 00ac 00000000 		.word	initial_pos_valid
 3446 00b0 00000000 		.word	flag_rx
 3447 00b4 00000000 		.word	packet
 3448              		.cfi_endproc
 3449              	.LFE92:
 3450              		.size	rxInt, .-rxInt
 3451              		.global	__aeabi_i2f
 3452              		.global	__aeabi_fmul
 3453              		.global	__aeabi_f2iz
 3454              		.section	.rodata
 3455 00c2 0000     		.align	2
 3456              	.LC9:
 3457 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3457      65742071 
 3457      7561643A 
 3457      2025640D 
 3457      0A00
 3458 00d6 0000     		.align	2
 3459              	.LC10:
 3460 00d8 0D0A00   		.ascii	"\015\012\000"
 3461              		.section	.text.BT_rxInt,"ax",%progbits
 3462              		.align	2
 3463              		.global	BT_rxInt
 3464              		.thumb
 3465              		.thumb_func
 3466              		.type	BT_rxInt, %function
 3467              	BT_rxInt:
 3468              	.LFB93:
 787:.\main.c      **** 
 788:.\main.c      **** CY_ISR(BT_rxInt)
 789:.\main.c      **** {
 3469              		.loc 1 789 0
 3470              		.cfi_startproc
 3471              		@ args = 0, pretend = 0, frame = 32
 3472              		@ frame_needed = 1, uses_anonymous_args = 0
 3473 0000 80B5     		push	{r7, lr}
 3474              		.cfi_def_cfa_offset 8
 3475              		.cfi_offset 7, -8
 3476              		.cfi_offset 14, -4
 3477 0002 88B0     		sub	sp, sp, #32
 3478              		.cfi_def_cfa_offset 40
 3479 0004 00AF     		add	r7, sp, #0
 3480              		.cfi_def_cfa_register 7
 790:.\main.c      ****     char rf_char = UART_GetChar();
 3481              		.loc 1 790 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 77


 3482 0006 FFF7FEFF 		bl	UART_GetChar
 3483 000a 0346     		mov	r3, r0
 3484 000c FB75     		strb	r3, [r7, #23]
 791:.\main.c      ****     switch(rf_char){
 3485              		.loc 1 791 0
 3486 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3487 0010 313B     		subs	r3, r3, #49
 3488 0012 492B     		cmp	r3, #73
 3489 0014 00F26B81 		bhi	.L196
 3490 0018 01A2     		adr	r2, .L199
 3491 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3492 001e 00BF     		.p2align 2
 3493              	.L199:
 3494 0020 83020000 		.word	.L198+1
 3495 0024 15020000 		.word	.L200+1
 3496 0028 EF020000 		.word	.L196+1
 3497 002c EF020000 		.word	.L196+1
 3498 0030 EF020000 		.word	.L196+1
 3499 0034 EF020000 		.word	.L196+1
 3500 0038 EF020000 		.word	.L196+1
 3501 003c EF020000 		.word	.L196+1
 3502 0040 EF020000 		.word	.L196+1
 3503 0044 EF020000 		.word	.L196+1
 3504 0048 EF020000 		.word	.L196+1
 3505 004c EF020000 		.word	.L196+1
 3506 0050 EF020000 		.word	.L196+1
 3507 0054 EF020000 		.word	.L196+1
 3508 0058 EF020000 		.word	.L196+1
 3509 005c EF020000 		.word	.L196+1
 3510 0060 EF020000 		.word	.L196+1
 3511 0064 EF020000 		.word	.L196+1
 3512 0068 EF020000 		.word	.L196+1
 3513 006c EF020000 		.word	.L196+1
 3514 0070 EF020000 		.word	.L196+1
 3515 0074 EF020000 		.word	.L196+1
 3516 0078 EF020000 		.word	.L196+1
 3517 007c EF020000 		.word	.L196+1
 3518 0080 EF020000 		.word	.L196+1
 3519 0084 EF020000 		.word	.L196+1
 3520 0088 EF020000 		.word	.L196+1
 3521 008c EF020000 		.word	.L196+1
 3522 0090 EF020000 		.word	.L196+1
 3523 0094 EF020000 		.word	.L196+1
 3524 0098 EF020000 		.word	.L196+1
 3525 009c EF020000 		.word	.L196+1
 3526 00a0 EF020000 		.word	.L196+1
 3527 00a4 EF020000 		.word	.L196+1
 3528 00a8 EF020000 		.word	.L196+1
 3529 00ac EF020000 		.word	.L196+1
 3530 00b0 EF020000 		.word	.L196+1
 3531 00b4 EF020000 		.word	.L196+1
 3532 00b8 EF020000 		.word	.L196+1
 3533 00bc EF020000 		.word	.L196+1
 3534 00c0 EF020000 		.word	.L196+1
 3535 00c4 EF020000 		.word	.L196+1
 3536 00c8 EF020000 		.word	.L196+1
 3537 00cc EF020000 		.word	.L196+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 78


 3538 00d0 EF020000 		.word	.L196+1
 3539 00d4 EF020000 		.word	.L196+1
 3540 00d8 EF020000 		.word	.L196+1
 3541 00dc EF020000 		.word	.L196+1
 3542 00e0 49010000 		.word	.L201+1
 3543 00e4 EF020000 		.word	.L196+1
 3544 00e8 EF020000 		.word	.L196+1
 3545 00ec 6D010000 		.word	.L202+1
 3546 00f0 EF020000 		.word	.L196+1
 3547 00f4 79010000 		.word	.L203+1
 3548 00f8 EF020000 		.word	.L196+1
 3549 00fc EF020000 		.word	.L196+1
 3550 0100 EF020000 		.word	.L196+1
 3551 0104 EF020000 		.word	.L196+1
 3552 0108 EF020000 		.word	.L196+1
 3553 010c EF020000 		.word	.L196+1
 3554 0110 EF020000 		.word	.L196+1
 3555 0114 EF020000 		.word	.L196+1
 3556 0118 EF020000 		.word	.L196+1
 3557 011c EF020000 		.word	.L196+1
 3558 0120 A9010000 		.word	.L204+1
 3559 0124 FF010000 		.word	.L205+1
 3560 0128 61010000 		.word	.L206+1
 3561 012c 85010000 		.word	.L207+1
 3562 0130 91010000 		.word	.L208+1
 3563 0134 EF020000 		.word	.L196+1
 3564 0138 55010000 		.word	.L209+1
 3565 013c EF020000 		.word	.L196+1
 3566 0140 EF020000 		.word	.L196+1
 3567 0144 9D010000 		.word	.L210+1
 3568              		.p2align 1
 3569              	.L201:
 3570              	.LBB9:
 792:.\main.c      ****     case 'a':
 793:.\main.c      ****         initTurnLeft();
 3571              		.loc 1 793 0
 3572 0148 FFF7FEFF 		bl	initTurnLeft
 794:.\main.c      ****         track_mode = NO_TRACK;
 3573              		.loc 1 794 0
 3574 014c 694B     		ldr	r3, .L220
 3575 014e 0022     		movs	r2, #0
 3576 0150 1A70     		strb	r2, [r3]
 795:.\main.c      ****         break;
 3577              		.loc 1 795 0
 3578 0152 CCE0     		b	.L196
 3579              	.L209:
 796:.\main.c      ****     case 'w':
 797:.\main.c      ****         initForward();
 3580              		.loc 1 797 0
 3581 0154 FFF7FEFF 		bl	initForward
 798:.\main.c      ****         track_mode = NO_TRACK;
 3582              		.loc 1 798 0
 3583 0158 664B     		ldr	r3, .L220
 3584 015a 0022     		movs	r2, #0
 3585 015c 1A70     		strb	r2, [r3]
 799:.\main.c      ****         break;
 3586              		.loc 1 799 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 79


 3587 015e C6E0     		b	.L196
 3588              	.L206:
 800:.\main.c      ****     case 's': 
 801:.\main.c      ****         reverseDirection();
 3589              		.loc 1 801 0
 3590 0160 FFF7FEFF 		bl	reverseDirection
 802:.\main.c      ****         track_mode = NO_TRACK;
 3591              		.loc 1 802 0
 3592 0164 634B     		ldr	r3, .L220
 3593 0166 0022     		movs	r2, #0
 3594 0168 1A70     		strb	r2, [r3]
 803:.\main.c      ****         break;
 3595              		.loc 1 803 0
 3596 016a C0E0     		b	.L196
 3597              	.L202:
 804:.\main.c      ****     case 'd':
 805:.\main.c      ****         initTurnRight();
 3598              		.loc 1 805 0
 3599 016c FFF7FEFF 		bl	initTurnRight
 806:.\main.c      ****         track_mode = NO_TRACK;
 3600              		.loc 1 806 0
 3601 0170 604B     		ldr	r3, .L220
 3602 0172 0022     		movs	r2, #0
 3603 0174 1A70     		strb	r2, [r3]
 807:.\main.c      ****         break;
 3604              		.loc 1 807 0
 3605 0176 BAE0     		b	.L196
 3606              	.L203:
 808:.\main.c      ****     case 'f':
 809:.\main.c      ****         initBrake();
 3607              		.loc 1 809 0
 3608 0178 FFF7FEFF 		bl	initBrake
 810:.\main.c      ****         track_mode = NO_TRACK;
 3609              		.loc 1 810 0
 3610 017c 5D4B     		ldr	r3, .L220
 3611 017e 0022     		movs	r2, #0
 3612 0180 1A70     		strb	r2, [r3]
 811:.\main.c      ****         break;
 3613              		.loc 1 811 0
 3614 0182 B4E0     		b	.L196
 3615              	.L207:
 812:.\main.c      ****     case('t'):
 813:.\main.c      ****         track_mode = CURVE_TRACK;
 3616              		.loc 1 813 0
 3617 0184 5B4B     		ldr	r3, .L220
 3618 0186 0122     		movs	r2, #1
 3619 0188 1A70     		strb	r2, [r3]
 814:.\main.c      ****         initTrack();
 3620              		.loc 1 814 0
 3621 018a FFF7FEFF 		bl	initTrack
 815:.\main.c      ****         break;
 3622              		.loc 1 815 0
 3623 018e AEE0     		b	.L196
 3624              	.L208:
 816:.\main.c      ****     case('u'):
 817:.\main.c      ****         initTrackU();
 3625              		.loc 1 817 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 80


 3626 0190 FFF7FEFF 		bl	initTrackU
 818:.\main.c      ****         track_mode = U_TRACK;
 3627              		.loc 1 818 0
 3628 0194 574B     		ldr	r3, .L220
 3629 0196 0222     		movs	r2, #2
 3630 0198 1A70     		strb	r2, [r3]
 819:.\main.c      ****         break;
 3631              		.loc 1 819 0
 3632 019a A8E0     		b	.L196
 3633              	.L210:
 820:.\main.c      ****     case('z'):
 821:.\main.c      ****         track_mode = SQUARE_TRACK;
 3634              		.loc 1 821 0
 3635 019c 554B     		ldr	r3, .L220
 3636 019e 0322     		movs	r2, #3
 3637 01a0 1A70     		strb	r2, [r3]
 822:.\main.c      ****         inittrackLineZ();
 3638              		.loc 1 822 0
 3639 01a2 FFF7FEFF 		bl	inittrackLineZ
 823:.\main.c      ****         break;
 3640              		.loc 1 823 0
 3641 01a6 A2E0     		b	.L196
 3642              	.L204:
 824:.\main.c      ****     case('q'):
 825:.\main.c      ****         track_mode = QUAD_STOP;
 3643              		.loc 1 825 0
 3644 01a8 524B     		ldr	r3, .L220
 3645 01aa 0422     		movs	r2, #4
 3646 01ac 1A70     		strb	r2, [r3]
 826:.\main.c      ****         accum_dist = 0;
 3647              		.loc 1 826 0
 3648 01ae 524B     		ldr	r3, .L220+4
 3649 01b0 0022     		movs	r2, #0
 3650 01b2 1A80     		strh	r2, [r3]	@ movhi
 827:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3651              		.loc 1 827 0
 3652 01b4 514B     		ldr	r3, .L220+8
 3653 01b6 1B88     		ldrh	r3, [r3]
 3654 01b8 1BB2     		sxth	r3, r3
 3655 01ba 1846     		mov	r0, r3
 3656 01bc FFF7FEFF 		bl	__aeabi_i2f
 3657 01c0 0246     		mov	r2, r0
 3658 01c2 4F4B     		ldr	r3, .L220+12
 3659 01c4 1B68     		ldr	r3, [r3]	@ float
 3660 01c6 1046     		mov	r0, r2
 3661 01c8 1946     		mov	r1, r3
 3662 01ca FFF7FEFF 		bl	__aeabi_fmul
 3663 01ce 0346     		mov	r3, r0
 3664 01d0 1846     		mov	r0, r3
 3665 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3666 01d6 0346     		mov	r3, r0
 3667 01d8 9AB2     		uxth	r2, r3
 3668 01da 4A4B     		ldr	r3, .L220+16
 3669 01dc 1A80     		strh	r2, [r3]	@ movhi
 828:.\main.c      ****         char mes[16];
 829:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3670              		.loc 1 829 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 81


 3671 01de 494B     		ldr	r3, .L220+16
 3672 01e0 1B88     		ldrh	r3, [r3]
 3673 01e2 1BB2     		sxth	r3, r3
 3674 01e4 3A1D     		adds	r2, r7, #4
 3675 01e6 1046     		mov	r0, r2
 3676 01e8 4749     		ldr	r1, .L220+20
 3677 01ea 1A46     		mov	r2, r3
 3678 01ec FFF7FEFF 		bl	sprintf
 830:.\main.c      ****         UART_PutString(mes);
 3679              		.loc 1 830 0
 3680 01f0 3B1D     		adds	r3, r7, #4
 3681 01f2 1846     		mov	r0, r3
 3682 01f4 FFF7FEFF 		bl	UART_PutString
 831:.\main.c      ****         initForward();
 3683              		.loc 1 831 0
 3684 01f8 FFF7FEFF 		bl	initForward
 832:.\main.c      ****         break;
 3685              		.loc 1 832 0
 3686 01fc 77E0     		b	.L196
 3687              	.L205:
 833:.\main.c      ****     case ('r'):
 834:.\main.c      ****         track_mode = RF_STOP;
 3688              		.loc 1 834 0
 3689 01fe 3D4B     		ldr	r3, .L220
 3690 0200 0522     		movs	r2, #5
 3691 0202 1A70     		strb	r2, [r3]
 835:.\main.c      ****         changeToRF();
 3692              		.loc 1 835 0
 3693 0204 FFF7FEFF 		bl	changeToRF
 836:.\main.c      ****         // Make initial position
 837:.\main.c      ****         initial_pos_valid = 0;
 3694              		.loc 1 837 0
 3695 0208 404B     		ldr	r3, .L220+24
 3696 020a 0022     		movs	r2, #0
 3697 020c 1A70     		strb	r2, [r3]
 838:.\main.c      ****         initBrake();
 3698              		.loc 1 838 0
 3699 020e FFF7FEFF 		bl	initBrake
 839:.\main.c      ****         break;
 3700              		.loc 1 839 0
 3701 0212 6CE0     		b	.L196
 3702              	.L200:
 840:.\main.c      ****     case ('2'):
 841:.\main.c      ****         track_mode = DEST_TEST;
 3703              		.loc 1 841 0
 3704 0214 374B     		ldr	r3, .L220
 3705 0216 0622     		movs	r2, #6
 3706 0218 1A70     		strb	r2, [r3]
 842:.\main.c      ****         tracked_direction = robot_direction;
 3707              		.loc 1 842 0
 3708 021a 3D4B     		ldr	r3, .L220+28
 3709 021c 1B68     		ldr	r3, [r3]
 3710 021e 3D4A     		ldr	r2, .L220+32
 3711 0220 1360     		str	r3, [r2]
 843:.\main.c      ****         instructionLength = generateDirections();
 3712              		.loc 1 843 0
 3713 0222 FFF7FEFF 		bl	generateDirections
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 82


 3714 0226 0346     		mov	r3, r0
 3715 0228 9AB2     		uxth	r2, r3
 3716 022a 3B4B     		ldr	r3, .L220+36
 3717 022c 1A80     		strh	r2, [r3]	@ movhi
 844:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 845:.\main.c      ****         //char message[128];
 846:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 847:.\main.c      ****         int i = 0;
 3718              		.loc 1 847 0
 3719 022e 0023     		movs	r3, #0
 3720 0230 FB61     		str	r3, [r7, #28]
 848:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3721              		.loc 1 848 0
 3722 0232 0023     		movs	r3, #0
 3723 0234 FB61     		str	r3, [r7, #28]
 3724 0236 18E0     		b	.L212
 3725              	.L215:
 849:.\main.c      ****         {
 850:.\main.c      ****             if(i%2 == 0)
 3726              		.loc 1 850 0
 3727 0238 FB69     		ldr	r3, [r7, #28]
 3728 023a 03F00103 		and	r3, r3, #1
 3729 023e 002B     		cmp	r3, #0
 3730 0240 07D1     		bne	.L213
 851:.\main.c      ****             {
 852:.\main.c      ****                 UART_PutChar(instructions[i]);
 3731              		.loc 1 852 0
 3732 0242 364A     		ldr	r2, .L220+40
 3733 0244 FB69     		ldr	r3, [r7, #28]
 3734 0246 1344     		add	r3, r3, r2
 3735 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3736 024a 1846     		mov	r0, r3
 3737 024c FFF7FEFF 		bl	UART_PutChar
 3738 0250 08E0     		b	.L214
 3739              	.L213:
 853:.\main.c      ****             }
 854:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3740              		.loc 1 854 0
 3741 0252 324A     		ldr	r2, .L220+40
 3742 0254 FB69     		ldr	r3, [r7, #28]
 3743 0256 1344     		add	r3, r3, r2
 3744 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3745 025a 3033     		adds	r3, r3, #48
 3746 025c DBB2     		uxtb	r3, r3
 3747 025e 1846     		mov	r0, r3
 3748 0260 FFF7FEFF 		bl	UART_PutChar
 3749              	.L214:
 848:.\main.c      ****         {
 3750              		.loc 1 848 0 discriminator 2
 3751 0264 FB69     		ldr	r3, [r7, #28]
 3752 0266 0133     		adds	r3, r3, #1
 3753 0268 FB61     		str	r3, [r7, #28]
 3754              	.L212:
 848:.\main.c      ****         {
 3755              		.loc 1 848 0 is_stmt 0 discriminator 1
 3756 026a 2B4B     		ldr	r3, .L220+36
 3757 026c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 83


 3758 026e 1A46     		mov	r2, r3
 3759 0270 FB69     		ldr	r3, [r7, #28]
 3760 0272 9A42     		cmp	r2, r3
 3761 0274 E0DC     		bgt	.L215
 855:.\main.c      **** 
 856:.\main.c      ****         }
 857:.\main.c      ****         
 858:.\main.c      ****         UART_PutString("\r\n");
 3762              		.loc 1 858 0 is_stmt 1
 3763 0276 2A48     		ldr	r0, .L220+44
 3764 0278 FFF7FEFF 		bl	UART_PutString
 859:.\main.c      **** 
 860:.\main.c      ****         inittrackLineZ();
 3765              		.loc 1 860 0
 3766 027c FFF7FEFF 		bl	inittrackLineZ
 861:.\main.c      ****         break;
 3767              		.loc 1 861 0
 3768 0280 35E0     		b	.L196
 3769              	.L198:
 862:.\main.c      ****         case ('1'):
 863:.\main.c      ****         track_mode = DEST_TEST;
 3770              		.loc 1 863 0
 3771 0282 1C4B     		ldr	r3, .L220
 3772 0284 0622     		movs	r2, #6
 3773 0286 1A70     		strb	r2, [r3]
 864:.\main.c      ****         tracked_direction = robot_direction;
 3774              		.loc 1 864 0
 3775 0288 214B     		ldr	r3, .L220+28
 3776 028a 1B68     		ldr	r3, [r3]
 3777 028c 214A     		ldr	r2, .L220+32
 3778 028e 1360     		str	r3, [r2]
 865:.\main.c      ****         //instructionLength = generateDirections();
 866:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3779              		.loc 1 866 0
 3780 0290 FFF7FEFF 		bl	generateEntireMapDirections
 3781 0294 0346     		mov	r3, r0
 3782 0296 9AB2     		uxth	r2, r3
 3783 0298 1F4B     		ldr	r3, .L220+36
 3784 029a 1A80     		strh	r2, [r3]	@ movhi
 867:.\main.c      ****         //char message[128];
 868:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 869:.\main.c      ****         //instructionCount = instructionLength - 22;
 870:.\main.c      ****         int x;
 871:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 3785              		.loc 1 871 0
 3786 029c 214B     		ldr	r3, .L220+48
 3787 029e 1B88     		ldrh	r3, [r3]
 3788 02a0 BB61     		str	r3, [r7, #24]
 3789 02a2 18E0     		b	.L216
 3790              	.L219:
 872:.\main.c      ****         {
 873:.\main.c      ****             if(x%2 == 0)
 3791              		.loc 1 873 0
 3792 02a4 BB69     		ldr	r3, [r7, #24]
 3793 02a6 03F00103 		and	r3, r3, #1
 3794 02aa 002B     		cmp	r3, #0
 3795 02ac 07D1     		bne	.L217
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 84


 874:.\main.c      ****             {
 875:.\main.c      ****                 UART_PutChar(instructions[x]);
 3796              		.loc 1 875 0
 3797 02ae 1B4A     		ldr	r2, .L220+40
 3798 02b0 BB69     		ldr	r3, [r7, #24]
 3799 02b2 1344     		add	r3, r3, r2
 3800 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3801 02b6 1846     		mov	r0, r3
 3802 02b8 FFF7FEFF 		bl	UART_PutChar
 3803 02bc 08E0     		b	.L218
 3804              	.L217:
 876:.\main.c      ****             }
 877:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 3805              		.loc 1 877 0
 3806 02be 174A     		ldr	r2, .L220+40
 3807 02c0 BB69     		ldr	r3, [r7, #24]
 3808 02c2 1344     		add	r3, r3, r2
 3809 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3810 02c6 3033     		adds	r3, r3, #48
 3811 02c8 DBB2     		uxtb	r3, r3
 3812 02ca 1846     		mov	r0, r3
 3813 02cc FFF7FEFF 		bl	UART_PutChar
 3814              	.L218:
 871:.\main.c      ****         {
 3815              		.loc 1 871 0 discriminator 2
 3816 02d0 BB69     		ldr	r3, [r7, #24]
 3817 02d2 0133     		adds	r3, r3, #1
 3818 02d4 BB61     		str	r3, [r7, #24]
 3819              	.L216:
 871:.\main.c      ****         {
 3820              		.loc 1 871 0 is_stmt 0 discriminator 1
 3821 02d6 104B     		ldr	r3, .L220+36
 3822 02d8 1B88     		ldrh	r3, [r3]
 3823 02da 1A46     		mov	r2, r3
 3824 02dc BB69     		ldr	r3, [r7, #24]
 3825 02de 9A42     		cmp	r2, r3
 3826 02e0 E0DC     		bgt	.L219
 878:.\main.c      **** 
 879:.\main.c      ****         }
 880:.\main.c      ****         
 881:.\main.c      ****         UART_PutString("\r\n");
 3827              		.loc 1 881 0 is_stmt 1
 3828 02e2 0F48     		ldr	r0, .L220+44
 3829 02e4 FFF7FEFF 		bl	UART_PutString
 882:.\main.c      **** 
 883:.\main.c      ****         inittrackLineZ();
 3830              		.loc 1 883 0
 3831 02e8 FFF7FEFF 		bl	inittrackLineZ
 884:.\main.c      ****         break;
 3832              		.loc 1 884 0
 3833 02ec 00BF     		nop
 3834              	.L196:
 3835              	.LBE9:
 885:.\main.c      ****     }
 886:.\main.c      **** }
 3836              		.loc 1 886 0
 3837 02ee 2037     		adds	r7, r7, #32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 85


 3838              		.cfi_def_cfa_offset 8
 3839 02f0 BD46     		mov	sp, r7
 3840              		.cfi_def_cfa_register 13
 3841              		@ sp needed
 3842 02f2 80BD     		pop	{r7, pc}
 3843              	.L221:
 3844              		.align	2
 3845              	.L220:
 3846 02f4 00000000 		.word	track_mode
 3847 02f8 00000000 		.word	accum_dist
 3848 02fc 00000000 		.word	target_distance_cm
 3849 0300 00000000 		.word	quad_per_cm
 3850 0304 00000000 		.word	target_distance_quad
 3851 0308 C4000000 		.word	.LC9
 3852 030c 00000000 		.word	initial_pos_valid
 3853 0310 00000000 		.word	robot_direction
 3854 0314 00000000 		.word	tracked_direction
 3855 0318 00000000 		.word	instructionLength
 3856 031c 00000000 		.word	instructions
 3857 0320 D8000000 		.word	.LC10
 3858 0324 00000000 		.word	instructionCount
 3859              		.cfi_endproc
 3860              	.LFE93:
 3861              		.size	BT_rxInt, .-BT_rxInt
 3862              		.section	.text.changeToRF,"ax",%progbits
 3863              		.align	2
 3864              		.global	changeToRF
 3865              		.thumb
 3866              		.thumb_func
 3867              		.type	changeToRF, %function
 3868              	changeToRF:
 3869              	.LFB94:
 887:.\main.c      **** 
 888:.\main.c      **** 
 889:.\main.c      **** void changeToRF()
 890:.\main.c      **** {
 3870              		.loc 1 890 0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 0
 3873              		@ frame_needed = 1, uses_anonymous_args = 0
 3874 0000 80B5     		push	{r7, lr}
 3875              		.cfi_def_cfa_offset 8
 3876              		.cfi_offset 7, -8
 3877              		.cfi_offset 14, -4
 3878 0002 00AF     		add	r7, sp, #0
 3879              		.cfi_def_cfa_register 7
 891:.\main.c      ****         //disable BT
 892:.\main.c      ****         BT_ENABLED = 0;
 3880              		.loc 1 892 0
 3881 0004 0B4B     		ldr	r3, .L223
 3882 0006 0022     		movs	r2, #0
 3883 0008 1A70     		strb	r2, [r3]
 893:.\main.c      ****         isrRF_RX_Stop();
 3884              		.loc 1 893 0
 3885 000a FFF7FEFF 		bl	isrRF_RX_Stop
 894:.\main.c      ****         UART_Stop();
 3886              		.loc 1 894 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 86


 3887 000e FFF7FEFF 		bl	UART_Stop
 895:.\main.c      ****         
 896:.\main.c      ****         //enable RF
 897:.\main.c      ****         BIN_ENABLED = 1;
 3888              		.loc 1 897 0
 3889 0012 094B     		ldr	r3, .L223+4
 3890 0014 0122     		movs	r2, #1
 3891 0016 1A70     		strb	r2, [r3]
 898:.\main.c      ****         UART_clk_SetDividerValue(130);
 3892              		.loc 1 898 0
 3893 0018 8120     		movs	r0, #129
 3894 001a 0121     		movs	r1, #1
 3895 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 899:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 3896              		.loc 1 899 0
 3897 0020 0648     		ldr	r0, .L223+8
 3898 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 900:.\main.c      ****         UART_Start();
 3899              		.loc 1 900 0
 3900 0026 FFF7FEFF 		bl	UART_Start
 901:.\main.c      ****         RF_BT_SELECT_Write(0);
 3901              		.loc 1 901 0
 3902 002a 0020     		movs	r0, #0
 3903 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 902:.\main.c      **** }
 3904              		.loc 1 902 0
 3905 0030 80BD     		pop	{r7, pc}
 3906              	.L224:
 3907 0032 00BF     		.align	2
 3908              	.L223:
 3909 0034 00000000 		.word	BT_ENABLED
 3910 0038 00000000 		.word	BIN_ENABLED
 3911 003c 00000000 		.word	rxInt
 3912              		.cfi_endproc
 3913              	.LFE94:
 3914              		.size	changeToRF, .-changeToRF
 3915              		.section	.text.changeToBT,"ax",%progbits
 3916              		.align	2
 3917              		.global	changeToBT
 3918              		.thumb
 3919              		.thumb_func
 3920              		.type	changeToBT, %function
 3921              	changeToBT:
 3922              	.LFB95:
 903:.\main.c      **** 
 904:.\main.c      **** void changeToBT()
 905:.\main.c      **** {
 3923              		.loc 1 905 0
 3924              		.cfi_startproc
 3925              		@ args = 0, pretend = 0, frame = 0
 3926              		@ frame_needed = 1, uses_anonymous_args = 0
 3927 0000 80B5     		push	{r7, lr}
 3928              		.cfi_def_cfa_offset 8
 3929              		.cfi_offset 7, -8
 3930              		.cfi_offset 14, -4
 3931 0002 00AF     		add	r7, sp, #0
 3932              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 87


 906:.\main.c      ****         //disable RF
 907:.\main.c      ****         BIN_ENABLED = 0;
 3933              		.loc 1 907 0
 3934 0004 0B4B     		ldr	r3, .L226
 3935 0006 0022     		movs	r2, #0
 3936 0008 1A70     		strb	r2, [r3]
 908:.\main.c      ****         isrRF_RX_Stop();
 3937              		.loc 1 908 0
 3938 000a FFF7FEFF 		bl	isrRF_RX_Stop
 909:.\main.c      ****         UART_Stop();
 3939              		.loc 1 909 0
 3940 000e FFF7FEFF 		bl	UART_Stop
 910:.\main.c      ****         
 911:.\main.c      ****         //enable BT
 912:.\main.c      ****         BT_ENABLED = 1;
 3941              		.loc 1 912 0
 3942 0012 094B     		ldr	r3, .L226+4
 3943 0014 0122     		movs	r2, #1
 3944 0016 1A70     		strb	r2, [r3]
 913:.\main.c      ****         UART_clk_SetDividerValue(781);
 3945              		.loc 1 913 0
 3946 0018 4FF44370 		mov	r0, #780
 3947 001c 0121     		movs	r1, #1
 3948 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 914:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3949              		.loc 1 914 0
 3950 0022 0648     		ldr	r0, .L226+8
 3951 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 915:.\main.c      ****         UART_Start();
 3952              		.loc 1 915 0
 3953 0028 FFF7FEFF 		bl	UART_Start
 916:.\main.c      ****         RF_BT_SELECT_Write(1);
 3954              		.loc 1 916 0
 3955 002c 0120     		movs	r0, #1
 3956 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 917:.\main.c      **** }
 3957              		.loc 1 917 0
 3958 0032 80BD     		pop	{r7, pc}
 3959              	.L227:
 3960              		.align	2
 3961              	.L226:
 3962 0034 00000000 		.word	BIN_ENABLED
 3963 0038 00000000 		.word	BT_ENABLED
 3964 003c 00000000 		.word	BT_rxInt
 3965              		.cfi_endproc
 3966              	.LFE95:
 3967              		.size	changeToBT, .-changeToBT
 3968              		.global	__aeabi_dmul
 3969              		.section	.text.Quad_Dec_response,"ax",%progbits
 3970              		.align	2
 3971              		.global	Quad_Dec_response
 3972              		.thumb
 3973              		.thumb_func
 3974              		.type	Quad_Dec_response, %function
 3975              	Quad_Dec_response:
 3976              	.LFB96:
 918:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 88


 919:.\main.c      **** 
 920:.\main.c      **** void Quad_Dec_response()
 921:.\main.c      **** {
 3977              		.loc 1 921 0
 3978              		.cfi_startproc
 3979              		@ args = 0, pretend = 0, frame = 32
 3980              		@ frame_needed = 1, uses_anonymous_args = 0
 3981 0000 B0B5     		push	{r4, r5, r7, lr}
 3982              		.cfi_def_cfa_offset 16
 3983              		.cfi_offset 4, -16
 3984              		.cfi_offset 5, -12
 3985              		.cfi_offset 7, -8
 3986              		.cfi_offset 14, -4
 3987 0002 88B0     		sub	sp, sp, #32
 3988              		.cfi_def_cfa_offset 48
 3989 0004 00AF     		add	r7, sp, #0
 3990              		.cfi_def_cfa_register 7
 922:.\main.c      ****     //Check if the flag has been set
 923:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 3991              		.loc 1 923 0
 3992 0006 824B     		ldr	r3, .L236
 3993 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3994 000a 002B     		cmp	r3, #0
 3995 000c 00D1     		bne	.L229
 3996 000e FCE0     		b	.L228
 3997              	.L229:
 924:.\main.c      ****     flag_calc_wheelspeed = 0;
 3998              		.loc 1 924 0
 3999 0010 7F4B     		ldr	r3, .L236
 4000 0012 0022     		movs	r2, #0
 4001 0014 1A70     		strb	r2, [r3]
 925:.\main.c      ****     
 926:.\main.c      ****     //char wheel_1_str [64];
 927:.\main.c      ****     //char wheel_2_str [64];
 928:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 929:.\main.c      ****     //usbPutString(wheel_1_str);
 930:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 931:.\main.c      ****     
 932:.\main.c      ****     //usbPutString(wheel_2_str);
 933:.\main.c      ****     
 934:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4002              		.loc 1 934 0
 4003 0016 7F4B     		ldr	r3, .L236+4
 4004 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4005 001a FB81     		strh	r3, [r7, #14]	@ movhi
 935:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4006              		.loc 1 935 0
 4007 001c 7E4B     		ldr	r3, .L236+8
 4008 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4009 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 936:.\main.c      ****     double scalingLeft = 1;
 4010              		.loc 1 936 0
 4011 0022 4FF00002 		mov	r2, #0
 4012 0026 7D4B     		ldr	r3, .L236+12
 4013 0028 C7E90623 		strd	r2, [r7, #24]
 937:.\main.c      ****     double scalingRight = 1;
 4014              		.loc 1 937 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 89


 4015 002c 4FF00002 		mov	r2, #0
 4016 0030 7A4B     		ldr	r3, .L236+12
 4017 0032 C7E90423 		strd	r2, [r7, #16]
 938:.\main.c      ****     
 939:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 940:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4018              		.loc 1 940 0
 4019 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4020 003a 002B     		cmp	r3, #0
 4021 003c 0FD1     		bne	.L231
 4022              		.loc 1 940 0 is_stmt 0 discriminator 1
 4023 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4024 0042 002B     		cmp	r3, #0
 4025 0044 0BD1     		bne	.L231
 941:.\main.c      ****        //leftSpeed = 3;
 942:.\main.c      ****         scalingLeft = 2;
 4026              		.loc 1 942 0 is_stmt 1
 4027 0046 4FF00002 		mov	r2, #0
 4028 004a 4FF08043 		mov	r3, #1073741824
 4029 004e C7E90623 		strd	r2, [r7, #24]
 943:.\main.c      ****         scalingRight = 2;
 4030              		.loc 1 943 0
 4031 0052 4FF00002 		mov	r2, #0
 4032 0056 4FF08043 		mov	r3, #1073741824
 4033 005a C7E90423 		strd	r2, [r7, #16]
 4034              	.L231:
 944:.\main.c      ****     }
 945:.\main.c      **** 
 946:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4035              		.loc 1 946 0
 4036 005e 704B     		ldr	r3, .L236+16
 4037 0060 1B88     		ldrh	r3, [r3]
 4038 0062 1AB2     		sxth	r2, r3
 4039 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4040 0068 002B     		cmp	r3, #0
 4041 006a B8BF     		it	lt
 4042 006c 5B42     		rsblt	r3, r3, #0
 4043 006e D31A     		subs	r3, r2, r3
 4044 0070 BB60     		str	r3, [r7, #8]
 947:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4045              		.loc 1 947 0
 4046 0072 BB68     		ldr	r3, [r7, #8]
 4047 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4048 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4049 007c BB68     		ldr	r3, [r7, #8]
 4050 007e 92FBF3F3 		sdiv	r3, r2, r3
 4051 0082 1846     		mov	r0, r3
 4052 0084 FFF7FEFF 		bl	__aeabi_i2d
 4053 0088 0446     		mov	r4, r0
 4054 008a 0D46     		mov	r5, r1
 4055 008c BB68     		ldr	r3, [r7, #8]
 4056 008e 002B     		cmp	r3, #0
 4057 0090 B8BF     		it	lt
 4058 0092 5B42     		rsblt	r3, r3, #0
 4059 0094 1846     		mov	r0, r3
 4060 0096 FFF7FEFF 		bl	__aeabi_i2d
 4061 009a 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 90


 4062 009c 0B46     		mov	r3, r1
 4063 009e 1046     		mov	r0, r2
 4064 00a0 1946     		mov	r1, r3
 4065 00a2 FFF7FEFF 		bl	sqrt
 4066 00a6 0246     		mov	r2, r0
 4067 00a8 0B46     		mov	r3, r1
 4068 00aa 2046     		mov	r0, r4
 4069 00ac 2946     		mov	r1, r5
 4070 00ae FFF7FEFF 		bl	__aeabi_dmul
 4071 00b2 0246     		mov	r2, r0
 4072 00b4 0B46     		mov	r3, r1
 4073 00b6 1046     		mov	r0, r2
 4074 00b8 1946     		mov	r1, r3
 4075 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4076 00be 0346     		mov	r3, r0
 4077 00c0 7B60     		str	r3, [r7, #4]
 948:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4078              		.loc 1 948 0
 4079 00c2 584B     		ldr	r3, .L236+20
 4080 00c4 1B88     		ldrh	r3, [r3]
 4081 00c6 1BB2     		sxth	r3, r3
 4082 00c8 1846     		mov	r0, r3
 4083 00ca FFF7FEFF 		bl	__aeabi_i2d
 4084 00ce 0446     		mov	r4, r0
 4085 00d0 0D46     		mov	r5, r1
 4086 00d2 7868     		ldr	r0, [r7, #4]
 4087 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4088 00d8 0246     		mov	r2, r0
 4089 00da 0B46     		mov	r3, r1
 4090 00dc 1046     		mov	r0, r2
 4091 00de 1946     		mov	r1, r3
 4092 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4093 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4094 00e8 0246     		mov	r2, r0
 4095 00ea 0B46     		mov	r3, r1
 4096 00ec 2046     		mov	r0, r4
 4097 00ee 2946     		mov	r1, r5
 4098 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4099 00f4 0246     		mov	r2, r0
 4100 00f6 0B46     		mov	r3, r1
 4101 00f8 1046     		mov	r0, r2
 4102 00fa 1946     		mov	r1, r3
 4103 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4104 0100 0346     		mov	r3, r0
 4105 0102 9AB2     		uxth	r2, r3
 4106 0104 474B     		ldr	r3, .L236+20
 4107 0106 1A80     		strh	r2, [r3]	@ movhi
 949:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4108              		.loc 1 949 0
 4109 0108 474B     		ldr	r3, .L236+24
 4110 010a 1B88     		ldrh	r3, [r3]
 4111 010c 1AB2     		sxth	r2, r3
 4112 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4113 0112 002B     		cmp	r3, #0
 4114 0114 B8BF     		it	lt
 4115 0116 5B42     		rsblt	r3, r3, #0
 4116 0118 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 91


 4117 011a BB60     		str	r3, [r7, #8]
 950:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4118              		.loc 1 950 0
 4119 011c BB68     		ldr	r3, [r7, #8]
 4120 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4121 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4122 0126 BB68     		ldr	r3, [r7, #8]
 4123 0128 92FBF3F3 		sdiv	r3, r2, r3
 4124 012c 1846     		mov	r0, r3
 4125 012e FFF7FEFF 		bl	__aeabi_i2d
 4126 0132 0446     		mov	r4, r0
 4127 0134 0D46     		mov	r5, r1
 4128 0136 BB68     		ldr	r3, [r7, #8]
 4129 0138 002B     		cmp	r3, #0
 4130 013a B8BF     		it	lt
 4131 013c 5B42     		rsblt	r3, r3, #0
 4132 013e 1846     		mov	r0, r3
 4133 0140 FFF7FEFF 		bl	__aeabi_i2d
 4134 0144 0246     		mov	r2, r0
 4135 0146 0B46     		mov	r3, r1
 4136 0148 1046     		mov	r0, r2
 4137 014a 1946     		mov	r1, r3
 4138 014c FFF7FEFF 		bl	sqrt
 4139 0150 0246     		mov	r2, r0
 4140 0152 0B46     		mov	r3, r1
 4141 0154 2046     		mov	r0, r4
 4142 0156 2946     		mov	r1, r5
 4143 0158 FFF7FEFF 		bl	__aeabi_dmul
 4144 015c 0246     		mov	r2, r0
 4145 015e 0B46     		mov	r3, r1
 4146 0160 1046     		mov	r0, r2
 4147 0162 1946     		mov	r1, r3
 4148 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4149 0168 0346     		mov	r3, r0
 4150 016a 7B60     		str	r3, [r7, #4]
 951:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4151              		.loc 1 951 0
 4152 016c 2F4B     		ldr	r3, .L236+28
 4153 016e 1B88     		ldrh	r3, [r3]
 4154 0170 1BB2     		sxth	r3, r3
 4155 0172 1846     		mov	r0, r3
 4156 0174 FFF7FEFF 		bl	__aeabi_i2d
 4157 0178 0446     		mov	r4, r0
 4158 017a 0D46     		mov	r5, r1
 4159 017c 7868     		ldr	r0, [r7, #4]
 4160 017e FFF7FEFF 		bl	__aeabi_i2d
 4161 0182 0246     		mov	r2, r0
 4162 0184 0B46     		mov	r3, r1
 4163 0186 1046     		mov	r0, r2
 4164 0188 1946     		mov	r1, r3
 4165 018a D7E90423 		ldrd	r2, [r7, #16]
 4166 018e FFF7FEFF 		bl	__aeabi_dmul
 4167 0192 0246     		mov	r2, r0
 4168 0194 0B46     		mov	r3, r1
 4169 0196 2046     		mov	r0, r4
 4170 0198 2946     		mov	r1, r5
 4171 019a FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 92


 4172 019e 0246     		mov	r2, r0
 4173 01a0 0B46     		mov	r3, r1
 4174 01a2 1046     		mov	r0, r2
 4175 01a4 1946     		mov	r1, r3
 4176 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4177 01aa 0346     		mov	r3, r0
 4178 01ac 9AB2     		uxth	r2, r3
 4179 01ae 1F4B     		ldr	r3, .L236+28
 4180 01b0 1A80     		strh	r2, [r3]	@ movhi
 952:.\main.c      ****     
 953:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4181              		.loc 1 953 0
 4182 01b2 1E4B     		ldr	r3, .L236+28
 4183 01b4 1B88     		ldrh	r3, [r3]
 4184 01b6 1BB2     		sxth	r3, r3
 4185 01b8 002B     		cmp	r3, #0
 4186 01ba 02DA     		bge	.L232
 4187              		.loc 1 953 0 is_stmt 0 discriminator 1
 4188 01bc 1B4B     		ldr	r3, .L236+28
 4189 01be 0022     		movs	r2, #0
 4190 01c0 1A80     		strh	r2, [r3]	@ movhi
 4191              	.L232:
 954:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4192              		.loc 1 954 0 is_stmt 1
 4193 01c2 184B     		ldr	r3, .L236+20
 4194 01c4 1B88     		ldrh	r3, [r3]
 4195 01c6 1BB2     		sxth	r3, r3
 4196 01c8 002B     		cmp	r3, #0
 4197 01ca 02DA     		bge	.L233
 4198              		.loc 1 954 0 is_stmt 0 discriminator 1
 4199 01cc 154B     		ldr	r3, .L236+20
 4200 01ce 0022     		movs	r2, #0
 4201 01d0 1A80     		strh	r2, [r3]	@ movhi
 4202              	.L233:
 955:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4203              		.loc 1 955 0 is_stmt 1
 4204 01d2 164B     		ldr	r3, .L236+28
 4205 01d4 1B88     		ldrh	r3, [r3]
 4206 01d6 1BB2     		sxth	r3, r3
 4207 01d8 642B     		cmp	r3, #100
 4208 01da 02DD     		ble	.L234
 4209              		.loc 1 955 0 is_stmt 0 discriminator 1
 4210 01dc 134B     		ldr	r3, .L236+28
 4211 01de 6422     		movs	r2, #100
 4212 01e0 1A80     		strh	r2, [r3]	@ movhi
 4213              	.L234:
 956:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4214              		.loc 1 956 0 is_stmt 1
 4215 01e2 104B     		ldr	r3, .L236+20
 4216 01e4 1B88     		ldrh	r3, [r3]
 4217 01e6 1BB2     		sxth	r3, r3
 4218 01e8 642B     		cmp	r3, #100
 4219 01ea 02DD     		ble	.L235
 4220              		.loc 1 956 0 is_stmt 0 discriminator 1
 4221 01ec 0D4B     		ldr	r3, .L236+20
 4222 01ee 6422     		movs	r2, #100
 4223 01f0 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 93


 4224              	.L235:
 957:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4225              		.loc 1 957 0 is_stmt 1
 4226 01f2 0C4B     		ldr	r3, .L236+20
 4227 01f4 1B88     		ldrh	r3, [r3]
 4228 01f6 DBB2     		uxtb	r3, r3
 4229 01f8 1846     		mov	r0, r3
 4230 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 958:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4231              		.loc 1 958 0
 4232 01fe 0B4B     		ldr	r3, .L236+28
 4233 0200 1B88     		ldrh	r3, [r3]
 4234 0202 DBB2     		uxtb	r3, r3
 4235 0204 1846     		mov	r0, r3
 4236 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4237              	.L228:
 959:.\main.c      **** }
 4238              		.loc 1 959 0
 4239 020a 2037     		adds	r7, r7, #32
 4240              		.cfi_def_cfa_offset 16
 4241 020c BD46     		mov	sp, r7
 4242              		.cfi_def_cfa_register 13
 4243              		@ sp needed
 4244 020e B0BD     		pop	{r4, r5, r7, pc}
 4245              	.L237:
 4246              		.align	2
 4247              	.L236:
 4248 0210 00000000 		.word	flag_calc_wheelspeed
 4249 0214 00000000 		.word	quad_diff1
 4250 0218 00000000 		.word	quad_diff2
 4251 021c 0000F03F 		.word	1072693248
 4252 0220 00000000 		.word	leftSpeedLimit
 4253 0224 00000000 		.word	left_duty_cycle
 4254 0228 00000000 		.word	rightSpeedLimit
 4255 022c 00000000 		.word	right_duty_cycle
 4256              		.cfi_endproc
 4257              	.LFE96:
 4258              		.size	Quad_Dec_response, .-Quad_Dec_response
 4259              		.section	.text.trackLine,"ax",%progbits
 4260              		.align	2
 4261              		.global	trackLine
 4262              		.thumb
 4263              		.thumb_func
 4264              		.type	trackLine, %function
 4265              	trackLine:
 4266              	.LFB97:
 960:.\main.c      **** 
 961:.\main.c      **** void trackLine()
 962:.\main.c      **** {
 4267              		.loc 1 962 0
 4268              		.cfi_startproc
 4269              		@ args = 0, pretend = 0, frame = 0
 4270              		@ frame_needed = 1, uses_anonymous_args = 0
 4271              		@ link register save eliminated.
 4272 0000 80B4     		push	{r7}
 4273              		.cfi_def_cfa_offset 4
 4274              		.cfi_offset 7, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 94


 4275 0002 00AF     		add	r7, sp, #0
 4276              		.cfi_def_cfa_register 7
 963:.\main.c      ****  //removed from implementation
 964:.\main.c      **** }
 4277              		.loc 1 964 0
 4278 0004 BD46     		mov	sp, r7
 4279              		.cfi_def_cfa_register 13
 4280              		@ sp needed
 4281 0006 5DF8047B 		ldr	r7, [sp], #4
 4282              		.cfi_restore 7
 4283              		.cfi_def_cfa_offset 0
 4284 000a 7047     		bx	lr
 4285              		.cfi_endproc
 4286              	.LFE97:
 4287              		.size	trackLine, .-trackLine
 4288              		.global	leftTurnCount
 4289              		.bss
 4290              		.align	1
 4291              		.type	leftTurnCount, %object
 4292              		.size	leftTurnCount, 2
 4293              	leftTurnCount:
 4294 28e8 0000     		.space	2
 4295              		.global	rightTurnCount
 4296              		.align	1
 4297              		.type	rightTurnCount, %object
 4298              		.size	rightTurnCount, 2
 4299              	rightTurnCount:
 4300 28ea 0000     		.space	2
 4301              		.section	.text.trackLineZ,"ax",%progbits
 4302              		.align	2
 4303              		.global	trackLineZ
 4304              		.thumb
 4305              		.thumb_func
 4306              		.type	trackLineZ, %function
 4307              	trackLineZ:
 4308              	.LFB98:
 965:.\main.c      **** uint16 leftTurnCount = 0;
 966:.\main.c      **** uint16 rightTurnCount = 0;
 967:.\main.c      **** void trackLineZ()
 968:.\main.c      **** {
 4309              		.loc 1 968 0
 4310              		.cfi_startproc
 4311              		@ args = 0, pretend = 0, frame = 8
 4312              		@ frame_needed = 1, uses_anonymous_args = 0
 4313 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4314              		.cfi_def_cfa_offset 24
 4315              		.cfi_offset 4, -24
 4316              		.cfi_offset 5, -20
 4317              		.cfi_offset 7, -16
 4318              		.cfi_offset 8, -12
 4319              		.cfi_offset 9, -8
 4320              		.cfi_offset 14, -4
 4321 0004 82B0     		sub	sp, sp, #8
 4322              		.cfi_def_cfa_offset 32
 4323 0006 00AF     		add	r7, sp, #0
 4324              		.cfi_def_cfa_register 7
 969:.\main.c      ****     //read the value of the three central-front sensors
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 95


 970:.\main.c      ****     
 971:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4325              		.loc 1 971 0
 4326 0008 FFF7FEFF 		bl	NLSens_out_Read
 4327 000c 0346     		mov	r3, r0
 4328 000e FB71     		strb	r3, [r7, #7]
 972:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4329              		.loc 1 972 0
 4330 0010 FFF7FEFF 		bl	NRSens_out_Read
 4331 0014 0346     		mov	r3, r0
 4332 0016 BB71     		strb	r3, [r7, #6]
 973:.\main.c      ****     uint8 mid = MSens_out_Read();
 4333              		.loc 1 973 0
 4334 0018 FFF7FEFF 		bl	MSens_out_Read
 4335 001c 0346     		mov	r3, r0
 4336 001e 7B71     		strb	r3, [r7, #5]
 974:.\main.c      ****     
 975:.\main.c      ****         //if only the left one, hard left
 976:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4337              		.loc 1 976 0
 4338 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4339 0022 002B     		cmp	r3, #0
 4340 0024 27D0     		beq	.L240
 4341              		.loc 1 976 0 is_stmt 0 discriminator 1
 4342 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4343 0028 002B     		cmp	r3, #0
 4344 002a 24D1     		bne	.L240
 4345              		.loc 1 976 0 discriminator 2
 4346 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4347 002e 002B     		cmp	r3, #0
 4348 0030 21D1     		bne	.L240
 977:.\main.c      ****     {
 978:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4349              		.loc 1 978 0 is_stmt 1
 4350 0032 454B     		ldr	r3, .L245+8
 4351 0034 D3E90023 		ldrd	r2, [r3]
 4352 0038 1046     		mov	r0, r2
 4353 003a 1946     		mov	r1, r3
 4354 003c 40A3     		adr	r3, .L245
 4355 003e D3E90023 		ldrd	r2, [r3]
 4356 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4357 0046 0246     		mov	r2, r0
 4358 0048 0B46     		mov	r3, r1
 4359 004a 1446     		mov	r4, r2
 4360 004c 1D46     		mov	r5, r3
 4361 004e 3E4B     		ldr	r3, .L245+8
 4362 0050 D3E90023 		ldrd	r2, [r3]
 4363 0054 9046     		mov	r8, r2
 4364 0056 83F00049 		eor	r9, r3, #-2147483648
 4365 005a 4046     		mov	r0, r8
 4366 005c 4946     		mov	r1, r9
 4367 005e 38A3     		adr	r3, .L245
 4368 0060 D3E90023 		ldrd	r2, [r3]
 4369 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4370 0068 0246     		mov	r2, r0
 4371 006a 0B46     		mov	r3, r1
 4372 006c 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 96


 4373 006e 2946     		mov	r1, r5
 4374 0070 FFF7FEFF 		bl	setSpeed
 4375 0074 5FE0     		b	.L239
 4376              	.L240:
 979:.\main.c      ****     }
 980:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4377              		.loc 1 980 0
 4378 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4379 0078 002B     		cmp	r3, #0
 4380 007a 0ED0     		beq	.L242
 4381              		.loc 1 980 0 is_stmt 0 discriminator 1
 4382 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4383 007e 002B     		cmp	r3, #0
 4384 0080 0BD0     		beq	.L242
 4385              		.loc 1 980 0 discriminator 2
 4386 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4387 0084 002B     		cmp	r3, #0
 4388 0086 08D1     		bne	.L242
 981:.\main.c      ****     {
 982:.\main.c      ****         setSpeed(speed,speed);
 4389              		.loc 1 982 0 is_stmt 1
 4390 0088 2F4B     		ldr	r3, .L245+8
 4391 008a D3E90001 		ldrd	r0, [r3]
 4392 008e 2E4B     		ldr	r3, .L245+8
 4393 0090 D3E90023 		ldrd	r2, [r3]
 4394 0094 FFF7FEFF 		bl	setSpeed
 4395 0098 4DE0     		b	.L239
 4396              	.L242:
 983:.\main.c      ****     }
 984:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4397              		.loc 1 984 0
 4398 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4399 009c 002B     		cmp	r3, #0
 4400 009e 0ED0     		beq	.L243
 4401              		.loc 1 984 0 is_stmt 0 discriminator 1
 4402 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4403 00a2 002B     		cmp	r3, #0
 4404 00a4 0BD0     		beq	.L243
 4405              		.loc 1 984 0 discriminator 2
 4406 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4407 00a8 002B     		cmp	r3, #0
 4408 00aa 08D1     		bne	.L243
 985:.\main.c      ****     {
 986:.\main.c      ****         setSpeed(speed ,speed);
 4409              		.loc 1 986 0 is_stmt 1
 4410 00ac 264B     		ldr	r3, .L245+8
 4411 00ae D3E90001 		ldrd	r0, [r3]
 4412 00b2 254B     		ldr	r3, .L245+8
 4413 00b4 D3E90023 		ldrd	r2, [r3]
 4414 00b8 FFF7FEFF 		bl	setSpeed
 4415 00bc 3BE0     		b	.L239
 4416              	.L243:
 987:.\main.c      ****     }
 988:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4417              		.loc 1 988 0
 4418 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4419 00c0 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 97


 4420 00c2 27D0     		beq	.L244
 4421              		.loc 1 988 0 is_stmt 0 discriminator 1
 4422 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4423 00c6 002B     		cmp	r3, #0
 4424 00c8 24D1     		bne	.L244
 4425              		.loc 1 988 0 discriminator 2
 4426 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4427 00cc 002B     		cmp	r3, #0
 4428 00ce 21D1     		bne	.L244
 989:.\main.c      ****     {
 990:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4429              		.loc 1 990 0 is_stmt 1
 4430 00d0 1D4B     		ldr	r3, .L245+8
 4431 00d2 D3E90023 		ldrd	r2, [r3]
 4432 00d6 1446     		mov	r4, r2
 4433 00d8 83F00045 		eor	r5, r3, #-2147483648
 4434 00dc 2046     		mov	r0, r4
 4435 00de 2946     		mov	r1, r5
 4436 00e0 17A3     		adr	r3, .L245
 4437 00e2 D3E90023 		ldrd	r2, [r3]
 4438 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4439 00ea 0246     		mov	r2, r0
 4440 00ec 0B46     		mov	r3, r1
 4441 00ee 1446     		mov	r4, r2
 4442 00f0 1D46     		mov	r5, r3
 4443 00f2 154B     		ldr	r3, .L245+8
 4444 00f4 D3E90023 		ldrd	r2, [r3]
 4445 00f8 1046     		mov	r0, r2
 4446 00fa 1946     		mov	r1, r3
 4447 00fc 10A3     		adr	r3, .L245
 4448 00fe D3E90023 		ldrd	r2, [r3]
 4449 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4450 0106 0246     		mov	r2, r0
 4451 0108 0B46     		mov	r3, r1
 4452 010a 2046     		mov	r0, r4
 4453 010c 2946     		mov	r1, r5
 4454 010e FFF7FEFF 		bl	setSpeed
 4455 0112 10E0     		b	.L239
 4456              	.L244:
 991:.\main.c      ****     }
 992:.\main.c      ****     else if (mid && !nr && !nl)
 4457              		.loc 1 992 0
 4458 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4459 0116 002B     		cmp	r3, #0
 4460 0118 0DD0     		beq	.L239
 4461              		.loc 1 992 0 is_stmt 0 discriminator 1
 4462 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4463 011c 002B     		cmp	r3, #0
 4464 011e 0AD1     		bne	.L239
 4465              		.loc 1 992 0 discriminator 2
 4466 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4467 0122 002B     		cmp	r3, #0
 4468 0124 07D1     		bne	.L239
 993:.\main.c      ****     {
 994:.\main.c      ****         setSpeed(speed,speed);
 4469              		.loc 1 994 0 is_stmt 1
 4470 0126 084B     		ldr	r3, .L245+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 98


 4471 0128 D3E90001 		ldrd	r0, [r3]
 4472 012c 064B     		ldr	r3, .L245+8
 4473 012e D3E90023 		ldrd	r2, [r3]
 4474 0132 FFF7FEFF 		bl	setSpeed
 4475              	.L239:
 995:.\main.c      ****     }
 996:.\main.c      **** }
 4476              		.loc 1 996 0
 4477 0136 0837     		adds	r7, r7, #8
 4478              		.cfi_def_cfa_offset 24
 4479 0138 BD46     		mov	sp, r7
 4480              		.cfi_def_cfa_register 13
 4481              		@ sp needed
 4482 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4483              	.L246:
 4484 013e 00BF     		.align	3
 4485              	.L245:
 4486 0140 9A999999 		.word	-1717986918
 4487 0144 9999F93F 		.word	1073322393
 4488 0148 00000000 		.word	speed
 4489              		.cfi_endproc
 4490              	.LFE98:
 4491              		.size	trackLineZ, .-trackLineZ
 4492 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4493              		.align	2
 4494              		.global	trackLineU
 4495              		.thumb
 4496              		.thumb_func
 4497              		.type	trackLineU, %function
 4498              	trackLineU:
 4499              	.LFB99:
 997:.\main.c      **** 
 998:.\main.c      **** 
 999:.\main.c      **** void trackLineU()
1000:.\main.c      **** { 
 4500              		.loc 1 1000 0
 4501              		.cfi_startproc
 4502              		@ args = 0, pretend = 0, frame = 0
 4503              		@ frame_needed = 1, uses_anonymous_args = 0
 4504              		@ link register save eliminated.
 4505 0000 80B4     		push	{r7}
 4506              		.cfi_def_cfa_offset 4
 4507              		.cfi_offset 7, -4
 4508 0002 00AF     		add	r7, sp, #0
 4509              		.cfi_def_cfa_register 7
1001:.\main.c      **** //removed from final implementation
1002:.\main.c      **** }
 4510              		.loc 1 1002 0
 4511 0004 BD46     		mov	sp, r7
 4512              		.cfi_def_cfa_register 13
 4513              		@ sp needed
 4514 0006 5DF8047B 		ldr	r7, [sp], #4
 4515              		.cfi_restore 7
 4516              		.cfi_def_cfa_offset 0
 4517 000a 7047     		bx	lr
 4518              		.cfi_endproc
 4519              	.LFE99:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 99


 4520              		.size	trackLineU, .-trackLineU
 4521              		.global	__aeabi_fadd
 4522              		.section	.rodata
 4523 00db 00       		.align	2
 4524              	.LC11:
 4525 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4525      65727920 
 4525      566F6C74 
 4525      6167653A 
 4525      2025646D 
 4526              		.section	.text.print_ADC,"ax",%progbits
 4527              		.align	2
 4528              		.global	print_ADC
 4529              		.thumb
 4530              		.thumb_func
 4531              		.type	print_ADC, %function
 4532              	print_ADC:
 4533              	.LFB100:
1003:.\main.c      **** 
1004:.\main.c      **** void print_ADC()
1005:.\main.c      **** {
 4534              		.loc 1 1005 0
 4535              		.cfi_startproc
 4536              		@ args = 0, pretend = 0, frame = 24
 4537              		@ frame_needed = 1, uses_anonymous_args = 0
 4538 0000 80B5     		push	{r7, lr}
 4539              		.cfi_def_cfa_offset 8
 4540              		.cfi_offset 7, -8
 4541              		.cfi_offset 14, -4
 4542 0002 86B0     		sub	sp, sp, #24
 4543              		.cfi_def_cfa_offset 32
 4544 0004 00AF     		add	r7, sp, #0
 4545              		.cfi_def_cfa_register 7
1006:.\main.c      ****    //usbPutString("HII\n");
1007:.\main.c      ****     if(flag_receive_ADC == 1)
 4546              		.loc 1 1007 0
 4547 0006 274B     		ldr	r3, .L251
 4548 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4549 000a 012B     		cmp	r3, #1
 4550 000c 46D1     		bne	.L248
 4551              	.LBB10:
1008:.\main.c      ****     {
1009:.\main.c      ****         //usbPutString("AAA\r\n");
1010:.\main.c      ****         flag_receive_ADC = 0;
 4552              		.loc 1 1010 0
 4553 000e 254B     		ldr	r3, .L251
 4554 0010 0022     		movs	r2, #0
 4555 0012 1A70     		strb	r2, [r3]
1011:.\main.c      ****         
1012:.\main.c      ****        // int8 channel = ADC_
1013:.\main.c      ****         float scalingFactor = 0.972;
 4556              		.loc 1 1013 0
 4557 0014 244B     		ldr	r3, .L251+4
 4558 0016 7B61     		str	r3, [r7, #20]	@ float
1014:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4559              		.loc 1 1014 0
 4560 0018 244B     		ldr	r3, .L251+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 100


 4561 001a 1B88     		ldrh	r3, [r3]
 4562 001c 1BB2     		sxth	r3, r3
 4563 001e 41F28832 		movw	r2, #5000
 4564 0022 02FB03F3 		mul	r3, r2, r3
 4565 0026 002B     		cmp	r3, #0
 4566 0028 01DA     		bge	.L250
 4567 002a 03F6FF73 		addw	r3, r3, #4095
 4568              	.L250:
 4569 002e 1B13     		asrs	r3, r3, #12
 4570 0030 1846     		mov	r0, r3
 4571 0032 FFF7FEFF 		bl	__aeabi_i2f
 4572 0036 0346     		mov	r3, r0
 4573 0038 1846     		mov	r0, r3
 4574 003a 7969     		ldr	r1, [r7, #20]	@ float
 4575 003c FFF7FEFF 		bl	__aeabi_fmul
 4576 0040 0346     		mov	r3, r0
 4577 0042 1846     		mov	r0, r3
 4578 0044 1946     		mov	r1, r3
 4579 0046 FFF7FEFF 		bl	__aeabi_fadd
 4580 004a 0346     		mov	r3, r0
 4581 004c 1846     		mov	r0, r3
 4582 004e FFF7FEFF 		bl	__aeabi_f2iz
 4583 0052 0346     		mov	r3, r0
 4584 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1015:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4585              		.loc 1 1015 0
 4586 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4587 005a 154B     		ldr	r3, .L251+12
 4588 005c 1B88     		ldrh	r3, [r3]
 4589 005e 1BB2     		sxth	r3, r3
 4590 0060 1A44     		add	r2, r2, r3
 4591 0062 144B     		ldr	r3, .L251+16
 4592 0064 1B88     		ldrh	r3, [r3]
 4593 0066 1BB2     		sxth	r3, r3
 4594 0068 1344     		add	r3, r3, r2
 4595 006a 134A     		ldr	r2, .L251+20
 4596 006c 82FB0312 		smull	r1, r2, r2, r3
 4597 0070 DB17     		asrs	r3, r3, #31
 4598 0072 D31A     		subs	r3, r2, r3
 4599 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1016:.\main.c      ****         prevVoltage2 = prevVoltage;
 4600              		.loc 1 1016 0
 4601 0076 0E4B     		ldr	r3, .L251+12
 4602 0078 1A88     		ldrh	r2, [r3]
 4603 007a 0E4B     		ldr	r3, .L251+16
 4604 007c 1A80     		strh	r2, [r3]	@ movhi
1017:.\main.c      ****         prevVoltage = converted_val;
 4605              		.loc 1 1017 0
 4606 007e 0C4A     		ldr	r2, .L251+12
 4607 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4608 0082 1380     		strh	r3, [r2]	@ movhi
1018:.\main.c      ****         
1019:.\main.c      ****         char result_str[16];
1020:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4609              		.loc 1 1020 0
 4610 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4611 0088 3A46     		mov	r2, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 101


 4612 008a 1046     		mov	r0, r2
 4613 008c 0B49     		ldr	r1, .L251+24
 4614 008e 1A46     		mov	r2, r3
 4615 0090 FFF7FEFF 		bl	sprintf
1021:.\main.c      ****         
1022:.\main.c      ****         usbPutString(result_str);
 4616              		.loc 1 1022 0
 4617 0094 3B46     		mov	r3, r7
 4618 0096 1846     		mov	r0, r3
 4619 0098 FFF7FEFF 		bl	usbPutString
 4620              	.L248:
 4621              	.LBE10:
1023:.\main.c      ****     }
1024:.\main.c      **** }
 4622              		.loc 1 1024 0
 4623 009c 1837     		adds	r7, r7, #24
 4624              		.cfi_def_cfa_offset 8
 4625 009e BD46     		mov	sp, r7
 4626              		.cfi_def_cfa_register 13
 4627              		@ sp needed
 4628 00a0 80BD     		pop	{r7, pc}
 4629              	.L252:
 4630 00a2 00BF     		.align	2
 4631              	.L251:
 4632 00a4 00000000 		.word	flag_receive_ADC
 4633 00a8 FED4783F 		.word	1064883454
 4634 00ac 00000000 		.word	adc_result
 4635 00b0 00000000 		.word	prevVoltage
 4636 00b4 00000000 		.word	prevVoltage2
 4637 00b8 56555555 		.word	1431655766
 4638 00bc DC000000 		.word	.LC11
 4639              		.cfi_endproc
 4640              	.LFE100:
 4641              		.size	print_ADC, .-print_ADC
 4642              		.section	.rodata
 4643              		.align	2
 4644              	.LC12:
 4645 00f4 52535349 		.ascii	"RSSI:\000"
 4645      3A00
 4646 00fa 0000     		.align	2
 4647              	.LC13:
 4648 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4648      00
 4649 0101 000000   		.align	2
 4650              	.LC14:
 4651 0104 726F626F 		.ascii	"robot_x:\000"
 4651      745F783A 
 4651      00
 4652 010d 000000   		.align	2
 4653              	.LC15:
 4654 0110 726F626F 		.ascii	"robot_y:\000"
 4654      745F793A 
 4654      00
 4655 0119 000000   		.align	2
 4656              	.LC16:
 4657 011c 726F626F 		.ascii	"robot_dir:\000"
 4657      745F6469 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 102


 4657      723A00
 4658 0127 00       		.section	.text.print_RF,"ax",%progbits
 4659              		.align	2
 4660              		.global	print_RF
 4661              		.thumb
 4662              		.thumb_func
 4663              		.type	print_RF, %function
 4664              	print_RF:
 4665              	.LFB101:
1025:.\main.c      **** 
1026:.\main.c      **** void print_RF()
1027:.\main.c      **** {
 4666              		.loc 1 1027 0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 16
 4669              		@ frame_needed = 1, uses_anonymous_args = 0
 4670 0000 80B5     		push	{r7, lr}
 4671              		.cfi_def_cfa_offset 8
 4672              		.cfi_offset 7, -8
 4673              		.cfi_offset 14, -4
 4674 0002 84B0     		sub	sp, sp, #16
 4675              		.cfi_def_cfa_offset 24
 4676 0004 00AF     		add	r7, sp, #0
 4677              		.cfi_def_cfa_register 7
1028:.\main.c      ****     if(flag_print_rf == 1)
 4678              		.loc 1 1028 0
 4679 0006 254B     		ldr	r3, .L255
 4680 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4681 000a 012B     		cmp	r3, #1
 4682 000c 42D1     		bne	.L253
 4683              	.LBB11:
1029:.\main.c      ****     {
1030:.\main.c      ****         char printString[16];
1031:.\main.c      ****         flag_print_rf = 0;
 4684              		.loc 1 1031 0
 4685 000e 234B     		ldr	r3, .L255
 4686 0010 0022     		movs	r2, #0
 4687 0012 1A70     		strb	r2, [r3]
1032:.\main.c      ****         usbPutString("RSSI:");
 4688              		.loc 1 1032 0
 4689 0014 2248     		ldr	r0, .L255+4
 4690 0016 FFF7FEFF 		bl	usbPutString
1033:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4691              		.loc 1 1033 0
 4692 001a 224B     		ldr	r3, .L255+8
 4693 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4694 001e 5BB2     		sxtb	r3, r3
 4695 0020 3A46     		mov	r2, r7
 4696 0022 1046     		mov	r0, r2
 4697 0024 2049     		ldr	r1, .L255+12
 4698 0026 1A46     		mov	r2, r3
 4699 0028 FFF7FEFF 		bl	sprintf
1034:.\main.c      ****         usbPutString(printString);
 4700              		.loc 1 1034 0
 4701 002c 3B46     		mov	r3, r7
 4702 002e 1846     		mov	r0, r3
 4703 0030 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 103


1035:.\main.c      ****         usbPutString("robot_x:");
 4704              		.loc 1 1035 0
 4705 0034 1D48     		ldr	r0, .L255+16
 4706 0036 FFF7FEFF 		bl	usbPutString
1036:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4707              		.loc 1 1036 0
 4708 003a 1A4B     		ldr	r3, .L255+8
 4709 003c 5B88     		ldrh	r3, [r3, #2]
 4710 003e 1BB2     		sxth	r3, r3
 4711 0040 3A46     		mov	r2, r7
 4712 0042 1046     		mov	r0, r2
 4713 0044 1849     		ldr	r1, .L255+12
 4714 0046 1A46     		mov	r2, r3
 4715 0048 FFF7FEFF 		bl	sprintf
1037:.\main.c      ****         usbPutString(printString);
 4716              		.loc 1 1037 0
 4717 004c 3B46     		mov	r3, r7
 4718 004e 1846     		mov	r0, r3
 4719 0050 FFF7FEFF 		bl	usbPutString
1038:.\main.c      ****         usbPutString("robot_y:");
 4720              		.loc 1 1038 0
 4721 0054 1648     		ldr	r0, .L255+20
 4722 0056 FFF7FEFF 		bl	usbPutString
1039:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4723              		.loc 1 1039 0
 4724 005a 124B     		ldr	r3, .L255+8
 4725 005c 9B88     		ldrh	r3, [r3, #4]
 4726 005e 1BB2     		sxth	r3, r3
 4727 0060 3A46     		mov	r2, r7
 4728 0062 1046     		mov	r0, r2
 4729 0064 1049     		ldr	r1, .L255+12
 4730 0066 1A46     		mov	r2, r3
 4731 0068 FFF7FEFF 		bl	sprintf
1040:.\main.c      ****         usbPutString(printString);
 4732              		.loc 1 1040 0
 4733 006c 3B46     		mov	r3, r7
 4734 006e 1846     		mov	r0, r3
 4735 0070 FFF7FEFF 		bl	usbPutString
1041:.\main.c      ****         usbPutString("robot_dir:");
 4736              		.loc 1 1041 0
 4737 0074 0F48     		ldr	r0, .L255+24
 4738 0076 FFF7FEFF 		bl	usbPutString
1042:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4739              		.loc 1 1042 0
 4740 007a 0A4B     		ldr	r3, .L255+8
 4741 007c DB88     		ldrh	r3, [r3, #6]
 4742 007e 1BB2     		sxth	r3, r3
 4743 0080 3A46     		mov	r2, r7
 4744 0082 1046     		mov	r0, r2
 4745 0084 0849     		ldr	r1, .L255+12
 4746 0086 1A46     		mov	r2, r3
 4747 0088 FFF7FEFF 		bl	sprintf
1043:.\main.c      ****         usbPutString(printString);
 4748              		.loc 1 1043 0
 4749 008c 3B46     		mov	r3, r7
 4750 008e 1846     		mov	r0, r3
 4751 0090 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 104


 4752              	.L253:
 4753              	.LBE11:
1044:.\main.c      ****     }
1045:.\main.c      **** }
 4754              		.loc 1 1045 0
 4755 0094 1037     		adds	r7, r7, #16
 4756              		.cfi_def_cfa_offset 8
 4757 0096 BD46     		mov	sp, r7
 4758              		.cfi_def_cfa_register 13
 4759              		@ sp needed
 4760 0098 80BD     		pop	{r7, pc}
 4761              	.L256:
 4762 009a 00BF     		.align	2
 4763              	.L255:
 4764 009c 00000000 		.word	flag_print_rf
 4765 00a0 F4000000 		.word	.LC12
 4766 00a4 00000000 		.word	system_state
 4767 00a8 FC000000 		.word	.LC13
 4768 00ac 04010000 		.word	.LC14
 4769 00b0 10010000 		.word	.LC15
 4770 00b4 1C010000 		.word	.LC16
 4771              		.cfi_endproc
 4772              	.LFE101:
 4773              		.size	print_RF, .-print_RF
 4774              		.section	.text.readFrontSensors,"ax",%progbits
 4775              		.align	2
 4776              		.global	readFrontSensors
 4777              		.thumb
 4778              		.thumb_func
 4779              		.type	readFrontSensors, %function
 4780              	readFrontSensors:
 4781              	.LFB102:
1046:.\main.c      **** 
1047:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1048:.\main.c      **** {
 4782              		.loc 1 1048 0
 4783              		.cfi_startproc
 4784              		@ args = 0, pretend = 0, frame = 8
 4785              		@ frame_needed = 1, uses_anonymous_args = 0
 4786 0000 90B5     		push	{r4, r7, lr}
 4787              		.cfi_def_cfa_offset 12
 4788              		.cfi_offset 4, -12
 4789              		.cfi_offset 7, -8
 4790              		.cfi_offset 14, -4
 4791 0002 83B0     		sub	sp, sp, #12
 4792              		.cfi_def_cfa_offset 24
 4793 0004 00AF     		add	r7, sp, #0
 4794              		.cfi_def_cfa_register 7
 4795 0006 7860     		str	r0, [r7, #4]
1049:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4796              		.loc 1 1049 0
 4797 0008 FFF7FEFF 		bl	FLSens_out_Read
 4798 000c 0346     		mov	r3, r0
 4799 000e 1A46     		mov	r2, r3
 4800 0010 7B68     		ldr	r3, [r7, #4]
 4801 0012 1A70     		strb	r2, [r3]
1050:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 105


 4802              		.loc 1 1050 0
 4803 0014 7B68     		ldr	r3, [r7, #4]
 4804 0016 5C1C     		adds	r4, r3, #1
 4805 0018 FFF7FEFF 		bl	NLSens_out_Read
 4806 001c 0346     		mov	r3, r0
 4807 001e 2370     		strb	r3, [r4]
1051:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4808              		.loc 1 1051 0
 4809 0020 7B68     		ldr	r3, [r7, #4]
 4810 0022 9C1C     		adds	r4, r3, #2
 4811 0024 FFF7FEFF 		bl	MSens_out_Read
 4812 0028 0346     		mov	r3, r0
 4813 002a 2370     		strb	r3, [r4]
1052:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4814              		.loc 1 1052 0
 4815 002c 7B68     		ldr	r3, [r7, #4]
 4816 002e DC1C     		adds	r4, r3, #3
 4817 0030 FFF7FEFF 		bl	NRSens_out_Read
 4818 0034 0346     		mov	r3, r0
 4819 0036 2370     		strb	r3, [r4]
1053:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4820              		.loc 1 1053 0
 4821 0038 7B68     		ldr	r3, [r7, #4]
 4822 003a 1C1D     		adds	r4, r3, #4
 4823 003c FFF7FEFF 		bl	FRSens_out_Read
 4824 0040 0346     		mov	r3, r0
 4825 0042 2370     		strb	r3, [r4]
1054:.\main.c      **** }
 4826              		.loc 1 1054 0
 4827 0044 0C37     		adds	r7, r7, #12
 4828              		.cfi_def_cfa_offset 12
 4829 0046 BD46     		mov	sp, r7
 4830              		.cfi_def_cfa_register 13
 4831              		@ sp needed
 4832 0048 90BD     		pop	{r4, r7, pc}
 4833              		.cfi_endproc
 4834              	.LFE102:
 4835              		.size	readFrontSensors, .-readFrontSensors
 4836 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4837              		.align	2
 4838              		.global	usbPutString
 4839              		.thumb
 4840              		.thumb_func
 4841              		.type	usbPutString, %function
 4842              	usbPutString:
 4843              	.LFB103:
1055:.\main.c      **** 
1056:.\main.c      **** 
1057:.\main.c      **** //* ========================================
1058:.\main.c      **** void usbPutString(char *s)
1059:.\main.c      **** {
 4844              		.loc 1 1059 0
 4845              		.cfi_startproc
 4846              		@ args = 0, pretend = 0, frame = 16
 4847              		@ frame_needed = 1, uses_anonymous_args = 0
 4848 0000 80B5     		push	{r7, lr}
 4849              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 106


 4850              		.cfi_offset 7, -8
 4851              		.cfi_offset 14, -4
 4852 0002 84B0     		sub	sp, sp, #16
 4853              		.cfi_def_cfa_offset 24
 4854 0004 00AF     		add	r7, sp, #0
 4855              		.cfi_def_cfa_register 7
 4856 0006 7860     		str	r0, [r7, #4]
1060:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1061:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1062:.\main.c      **** //  length to 62 char (63rd char is a '!')
1063:.\main.c      ****     if (USE_USB && portOpen)
 4857              		.loc 1 1063 0
 4858 0008 154B     		ldr	r3, .L262
 4859 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4860 000c 002B     		cmp	r3, #0
 4861 000e 23D0     		beq	.L258
 4862              	.LBB12:
1064:.\main.c      ****     {
1065:.\main.c      ****             uint32 cnt = 0;
 4863              		.loc 1 1065 0
 4864 0010 0023     		movs	r3, #0
 4865 0012 FB60     		str	r3, [r7, #12]
1066:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4866              		.loc 1 1066 0
 4867 0014 0AE0     		b	.L260
 4868              	.L261:
1067:.\main.c      ****             {
1068:.\main.c      ****                 cnt++;
 4869              		.loc 1 1068 0
 4870 0016 FB68     		ldr	r3, [r7, #12]
 4871 0018 0133     		adds	r3, r3, #1
 4872 001a FB60     		str	r3, [r7, #12]
1069:.\main.c      ****                 if(cnt == 3000000){
 4873              		.loc 1 1069 0
 4874 001c FB68     		ldr	r3, [r7, #12]
 4875 001e 114A     		ldr	r2, .L262+4
 4876 0020 9342     		cmp	r3, r2
 4877 0022 03D1     		bne	.L260
1070:.\main.c      ****                     portOpen = 0;
 4878              		.loc 1 1070 0
 4879 0024 0E4B     		ldr	r3, .L262
 4880 0026 0022     		movs	r2, #0
 4881 0028 1A70     		strb	r2, [r3]
1071:.\main.c      ****                     return;
 4882              		.loc 1 1071 0
 4883 002a 15E0     		b	.L258
 4884              	.L260:
1066:.\main.c      ****             {
 4885              		.loc 1 1066 0
 4886 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4887 0030 0346     		mov	r3, r0
 4888 0032 002B     		cmp	r3, #0
 4889 0034 EFD0     		beq	.L261
1072:.\main.c      ****                 }
1073:.\main.c      ****             }
1074:.\main.c      ****             s[63]='\0';
 4890              		.loc 1 1074 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 107


 4891 0036 7B68     		ldr	r3, [r7, #4]
 4892 0038 3F33     		adds	r3, r3, #63
 4893 003a 0022     		movs	r2, #0
 4894 003c 1A70     		strb	r2, [r3]
1075:.\main.c      ****             s[62]='!';
 4895              		.loc 1 1075 0
 4896 003e 7B68     		ldr	r3, [r7, #4]
 4897 0040 3E33     		adds	r3, r3, #62
 4898 0042 2122     		movs	r2, #33
 4899 0044 1A70     		strb	r2, [r3]
1076:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4900              		.loc 1 1076 0
 4901 0046 7868     		ldr	r0, [r7, #4]
 4902 0048 FFF7FEFF 		bl	strlen
 4903 004c 0346     		mov	r3, r0
 4904 004e 9BB2     		uxth	r3, r3
 4905 0050 7868     		ldr	r0, [r7, #4]
 4906 0052 1946     		mov	r1, r3
 4907 0054 FFF7FEFF 		bl	USBUART_PutData
 4908              	.L258:
 4909              	.LBE12:
1077:.\main.c      ****     }
1078:.\main.c      **** }
 4910              		.loc 1 1078 0
 4911 0058 1037     		adds	r7, r7, #16
 4912              		.cfi_def_cfa_offset 8
 4913 005a BD46     		mov	sp, r7
 4914              		.cfi_def_cfa_register 13
 4915              		@ sp needed
 4916 005c 80BD     		pop	{r7, pc}
 4917              	.L263:
 4918 005e 00BF     		.align	2
 4919              	.L262:
 4920 0060 00000000 		.word	portOpen
 4921 0064 C0C62D00 		.word	3000000
 4922              		.cfi_endproc
 4923              	.LFE103:
 4924              		.size	usbPutString, .-usbPutString
 4925              		.section	.text.usbPutChar,"ax",%progbits
 4926              		.align	2
 4927              		.global	usbPutChar
 4928              		.thumb
 4929              		.thumb_func
 4930              		.type	usbPutChar, %function
 4931              	usbPutChar:
 4932              	.LFB104:
1079:.\main.c      **** //* ========================================
1080:.\main.c      **** void usbPutChar(char c)
1081:.\main.c      **** {
 4933              		.loc 1 1081 0
 4934              		.cfi_startproc
 4935              		@ args = 0, pretend = 0, frame = 16
 4936              		@ frame_needed = 1, uses_anonymous_args = 0
 4937 0000 80B5     		push	{r7, lr}
 4938              		.cfi_def_cfa_offset 8
 4939              		.cfi_offset 7, -8
 4940              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 108


 4941 0002 84B0     		sub	sp, sp, #16
 4942              		.cfi_def_cfa_offset 24
 4943 0004 00AF     		add	r7, sp, #0
 4944              		.cfi_def_cfa_register 7
 4945 0006 0346     		mov	r3, r0
 4946 0008 FB71     		strb	r3, [r7, #7]
1082:.\main.c      ****     if (USE_USB && portOpen)    
 4947              		.loc 1 1082 0
 4948 000a 0F4B     		ldr	r3, .L268
 4949 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4950 000e 002B     		cmp	r3, #0
 4951 0010 16D0     		beq	.L264
 4952              	.LBB13:
1083:.\main.c      ****     {    
1084:.\main.c      ****         uint32 cnt = 0;
 4953              		.loc 1 1084 0
 4954 0012 0023     		movs	r3, #0
 4955 0014 FB60     		str	r3, [r7, #12]
1085:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4956              		.loc 1 1085 0
 4957 0016 0AE0     		b	.L266
 4958              	.L267:
1086:.\main.c      ****             cnt++;
 4959              		.loc 1 1086 0
 4960 0018 FB68     		ldr	r3, [r7, #12]
 4961 001a 0133     		adds	r3, r3, #1
 4962 001c FB60     		str	r3, [r7, #12]
1087:.\main.c      ****             if(cnt == 3000000){
 4963              		.loc 1 1087 0
 4964 001e FB68     		ldr	r3, [r7, #12]
 4965 0020 0A4A     		ldr	r2, .L268+4
 4966 0022 9342     		cmp	r3, r2
 4967 0024 03D1     		bne	.L266
1088:.\main.c      ****                 portOpen = 0;
 4968              		.loc 1 1088 0
 4969 0026 084B     		ldr	r3, .L268
 4970 0028 0022     		movs	r2, #0
 4971 002a 1A70     		strb	r2, [r3]
1089:.\main.c      ****                 return;
 4972              		.loc 1 1089 0
 4973 002c 08E0     		b	.L264
 4974              	.L266:
1085:.\main.c      ****             cnt++;
 4975              		.loc 1 1085 0
 4976 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4977 0032 0346     		mov	r3, r0
 4978 0034 002B     		cmp	r3, #0
 4979 0036 EFD0     		beq	.L267
1090:.\main.c      ****             }
1091:.\main.c      ****         }
1092:.\main.c      ****         USBUART_PutChar(c);
 4980              		.loc 1 1092 0
 4981 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4982 003a 1846     		mov	r0, r3
 4983 003c FFF7FEFF 		bl	USBUART_PutChar
 4984              	.L264:
 4985              	.LBE13:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 109


1093:.\main.c      ****     }    
1094:.\main.c      **** }
 4986              		.loc 1 1094 0
 4987 0040 1037     		adds	r7, r7, #16
 4988              		.cfi_def_cfa_offset 8
 4989 0042 BD46     		mov	sp, r7
 4990              		.cfi_def_cfa_register 13
 4991              		@ sp needed
 4992 0044 80BD     		pop	{r7, pc}
 4993              	.L269:
 4994 0046 00BF     		.align	2
 4995              	.L268:
 4996 0048 00000000 		.word	portOpen
 4997 004c C0C62D00 		.word	3000000
 4998              		.cfi_endproc
 4999              	.LFE104:
 5000              		.size	usbPutChar, .-usbPutChar
 5001              		.section	.text.uart_set_PWM,"ax",%progbits
 5002              		.align	2
 5003              		.global	uart_set_PWM
 5004              		.thumb
 5005              		.thumb_func
 5006              		.type	uart_set_PWM, %function
 5007              	uart_set_PWM:
 5008              	.LFB105:
1095:.\main.c      **** //* ========================================
1096:.\main.c      **** 
1097:.\main.c      **** void uart_set_PWM()
1098:.\main.c      **** {
 5009              		.loc 1 1098 0
 5010              		.cfi_startproc
 5011              		@ args = 0, pretend = 0, frame = 0
 5012              		@ frame_needed = 1, uses_anonymous_args = 0
 5013              		@ link register save eliminated.
 5014 0000 80B4     		push	{r7}
 5015              		.cfi_def_cfa_offset 4
 5016              		.cfi_offset 7, -4
 5017 0002 00AF     		add	r7, sp, #0
 5018              		.cfi_def_cfa_register 7
1099:.\main.c      ****     //removed from final implementation
1100:.\main.c      **** }
 5019              		.loc 1 1100 0
 5020 0004 BD46     		mov	sp, r7
 5021              		.cfi_def_cfa_register 13
 5022              		@ sp needed
 5023 0006 5DF8047B 		ldr	r7, [sp], #4
 5024              		.cfi_restore 7
 5025              		.cfi_def_cfa_offset 0
 5026 000a 7047     		bx	lr
 5027              		.cfi_endproc
 5028              	.LFE105:
 5029              		.size	uart_set_PWM, .-uart_set_PWM
 5030              		.text
 5031              	.Letext0:
 5032              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5033              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5034              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 110


 5035              		.file 5 ".\\vars.h"
 5036              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5037              		.file 7 ".\\pathfinder.h"
 5038              		.section	.debug_info,"",%progbits
 5039              	.Ldebug_info0:
 5040 0000 290E0000 		.4byte	0xe29
 5041 0004 0400     		.2byte	0x4
 5042 0006 00000000 		.4byte	.Ldebug_abbrev0
 5043 000a 04       		.byte	0x4
 5044 000b 01       		.uleb128 0x1
 5045 000c 9B040000 		.4byte	.LASF195
 5046 0010 01       		.byte	0x1
 5047 0011 79090000 		.4byte	.LASF196
 5048 0015 1C000000 		.4byte	.LASF197
 5049 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5050 001d 00000000 		.4byte	0
 5051 0021 00000000 		.4byte	.Ldebug_line0
 5052 0025 02       		.uleb128 0x2
 5053 0026 01       		.byte	0x1
 5054 0027 06       		.byte	0x6
 5055 0028 B3080000 		.4byte	.LASF0
 5056 002c 02       		.uleb128 0x2
 5057 002d 01       		.byte	0x1
 5058 002e 08       		.byte	0x8
 5059 002f F0070000 		.4byte	.LASF1
 5060 0033 02       		.uleb128 0x2
 5061 0034 02       		.byte	0x2
 5062 0035 05       		.byte	0x5
 5063 0036 51060000 		.4byte	.LASF2
 5064 003a 02       		.uleb128 0x2
 5065 003b 02       		.byte	0x2
 5066 003c 07       		.byte	0x7
 5067 003d BF080000 		.4byte	.LASF3
 5068 0041 03       		.uleb128 0x3
 5069 0042 D7000000 		.4byte	.LASF5
 5070 0046 02       		.byte	0x2
 5071 0047 3F       		.byte	0x3f
 5072 0048 4C000000 		.4byte	0x4c
 5073 004c 02       		.uleb128 0x2
 5074 004d 04       		.byte	0x4
 5075 004e 05       		.byte	0x5
 5076 004f 85060000 		.4byte	.LASF4
 5077 0053 03       		.uleb128 0x3
 5078 0054 FE070000 		.4byte	.LASF6
 5079 0058 02       		.byte	0x2
 5080 0059 41       		.byte	0x41
 5081 005a 5E000000 		.4byte	0x5e
 5082 005e 02       		.uleb128 0x2
 5083 005f 04       		.byte	0x4
 5084 0060 07       		.byte	0x7
 5085 0061 89070000 		.4byte	.LASF7
 5086 0065 02       		.uleb128 0x2
 5087 0066 08       		.byte	0x8
 5088 0067 05       		.byte	0x5
 5089 0068 65040000 		.4byte	.LASF8
 5090 006c 02       		.uleb128 0x2
 5091 006d 08       		.byte	0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 111


 5092 006e 07       		.byte	0x7
 5093 006f 7E020000 		.4byte	.LASF9
 5094 0073 04       		.uleb128 0x4
 5095 0074 04       		.byte	0x4
 5096 0075 05       		.byte	0x5
 5097 0076 696E7400 		.ascii	"int\000"
 5098 007a 02       		.uleb128 0x2
 5099 007b 04       		.byte	0x4
 5100 007c 07       		.byte	0x7
 5101 007d BF000000 		.4byte	.LASF10
 5102 0081 02       		.uleb128 0x2
 5103 0082 04       		.byte	0x4
 5104 0083 07       		.byte	0x7
 5105 0084 80070000 		.4byte	.LASF11
 5106 0088 05       		.uleb128 0x5
 5107 0089 04       		.byte	0x4
 5108 008a 8E000000 		.4byte	0x8e
 5109 008e 02       		.uleb128 0x2
 5110 008f 01       		.byte	0x1
 5111 0090 08       		.byte	0x8
 5112 0091 AD030000 		.4byte	.LASF12
 5113 0095 03       		.uleb128 0x3
 5114 0096 A7070000 		.4byte	.LASF13
 5115 009a 03       		.byte	0x3
 5116 009b 2C       		.byte	0x2c
 5117 009c 41000000 		.4byte	0x41
 5118 00a0 03       		.uleb128 0x3
 5119 00a1 FE010000 		.4byte	.LASF14
 5120 00a5 03       		.byte	0x3
 5121 00a6 2D       		.byte	0x2d
 5122 00a7 53000000 		.4byte	0x53
 5123 00ab 06       		.uleb128 0x6
 5124 00ac 06090000 		.4byte	.LASF15
 5125 00b0 04       		.byte	0x4
 5126 00b1 9201     		.2byte	0x192
 5127 00b3 2C000000 		.4byte	0x2c
 5128 00b7 06       		.uleb128 0x6
 5129 00b8 F5030000 		.4byte	.LASF16
 5130 00bc 04       		.byte	0x4
 5131 00bd 9301     		.2byte	0x193
 5132 00bf 3A000000 		.4byte	0x3a
 5133 00c3 06       		.uleb128 0x6
 5134 00c4 6C050000 		.4byte	.LASF17
 5135 00c8 04       		.byte	0x4
 5136 00c9 9401     		.2byte	0x194
 5137 00cb 5E000000 		.4byte	0x5e
 5138 00cf 06       		.uleb128 0x6
 5139 00d0 FC030000 		.4byte	.LASF18
 5140 00d4 04       		.byte	0x4
 5141 00d5 9501     		.2byte	0x195
 5142 00d7 25000000 		.4byte	0x25
 5143 00db 06       		.uleb128 0x6
 5144 00dc E1000000 		.4byte	.LASF19
 5145 00e0 04       		.byte	0x4
 5146 00e1 9601     		.2byte	0x196
 5147 00e3 33000000 		.4byte	0x33
 5148 00e7 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 112


 5149 00e8 04       		.byte	0x4
 5150 00e9 04       		.byte	0x4
 5151 00ea 1E020000 		.4byte	.LASF20
 5152 00ee 02       		.uleb128 0x2
 5153 00ef 08       		.byte	0x8
 5154 00f0 04       		.byte	0x4
 5155 00f1 0C090000 		.4byte	.LASF21
 5156 00f5 07       		.uleb128 0x7
 5157 00f6 A0000000 		.4byte	0xa0
 5158 00fa 05010000 		.4byte	0x105
 5159 00fe 08       		.uleb128 0x8
 5160 00ff 81000000 		.4byte	0x81
 5161 0103 01       		.byte	0x1
 5162 0104 00       		.byte	0
 5163 0105 02       		.uleb128 0x2
 5164 0106 08       		.byte	0x8
 5165 0107 04       		.byte	0x4
 5166 0108 E8050000 		.4byte	.LASF22
 5167 010c 09       		.uleb128 0x9
 5168 010d 4B080000 		.4byte	.LASF31
 5169 0111 01       		.byte	0x1
 5170 0112 05       		.byte	0x5
 5171 0113 5D       		.byte	0x5d
 5172 0114 49010000 		.4byte	0x149
 5173 0118 0A       		.uleb128 0xa
 5174 0119 3D020000 		.4byte	.LASF23
 5175 011d 00       		.sleb128 0
 5176 011e 0A       		.uleb128 0xa
 5177 011f F4000000 		.4byte	.LASF24
 5178 0123 01       		.sleb128 1
 5179 0124 0A       		.uleb128 0xa
 5180 0125 5B000000 		.4byte	.LASF25
 5181 0129 02       		.sleb128 2
 5182 012a 0A       		.uleb128 0xa
 5183 012b D7050000 		.4byte	.LASF26
 5184 012f 03       		.sleb128 3
 5185 0130 0A       		.uleb128 0xa
 5186 0131 0F010000 		.4byte	.LASF27
 5187 0135 04       		.sleb128 4
 5188 0136 0A       		.uleb128 0xa
 5189 0137 E7010000 		.4byte	.LASF28
 5190 013b 05       		.sleb128 5
 5191 013c 0A       		.uleb128 0xa
 5192 013d FB060000 		.4byte	.LASF29
 5193 0141 06       		.sleb128 6
 5194 0142 0A       		.uleb128 0xa
 5195 0143 46090000 		.4byte	.LASF30
 5196 0147 07       		.sleb128 7
 5197 0148 00       		.byte	0
 5198 0149 09       		.uleb128 0x9
 5199 014a 4A010000 		.4byte	.LASF32
 5200 014e 01       		.byte	0x1
 5201 014f 05       		.byte	0x5
 5202 0150 5E       		.byte	0x5e
 5203 0151 86010000 		.4byte	0x186
 5204 0155 0A       		.uleb128 0xa
 5205 0156 CD060000 		.4byte	.LASF33
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 113


 5206 015a 00       		.sleb128 0
 5207 015b 0A       		.uleb128 0xa
 5208 015c 2C040000 		.4byte	.LASF34
 5209 0160 01       		.sleb128 1
 5210 0161 0A       		.uleb128 0xa
 5211 0162 9C060000 		.4byte	.LASF35
 5212 0166 02       		.sleb128 2
 5213 0167 0A       		.uleb128 0xa
 5214 0168 A1010000 		.4byte	.LASF36
 5215 016c 03       		.sleb128 3
 5216 016d 0A       		.uleb128 0xa
 5217 016e E4080000 		.4byte	.LASF37
 5218 0172 04       		.sleb128 4
 5219 0173 0A       		.uleb128 0xa
 5220 0174 24090000 		.4byte	.LASF38
 5221 0178 05       		.sleb128 5
 5222 0179 0A       		.uleb128 0xa
 5223 017a 70000000 		.4byte	.LASF39
 5224 017e 06       		.sleb128 6
 5225 017f 0A       		.uleb128 0xa
 5226 0180 EE060000 		.4byte	.LASF40
 5227 0184 07       		.sleb128 7
 5228 0185 00       		.byte	0
 5229 0186 0B       		.uleb128 0xb
 5230 0187 8C050000 		.4byte	.LASF198
 5231 018b 20       		.byte	0x20
 5232 018c 05       		.byte	0x5
 5233 018d 64       		.byte	0x64
 5234 018e 5F020000 		.4byte	0x25f
 5235 0192 0C       		.uleb128 0xc
 5236 0193 AA050000 		.4byte	.LASF41
 5237 0197 05       		.byte	0x5
 5238 0198 65       		.byte	0x65
 5239 0199 CF000000 		.4byte	0xcf
 5240 019d 00       		.byte	0
 5241 019e 0C       		.uleb128 0xc
 5242 019f 37020000 		.4byte	.LASF42
 5243 01a3 05       		.byte	0x5
 5244 01a4 66       		.byte	0x66
 5245 01a5 AB000000 		.4byte	0xab
 5246 01a9 01       		.byte	0x1
 5247 01aa 0C       		.uleb128 0xc
 5248 01ab C8070000 		.4byte	.LASF43
 5249 01af 05       		.byte	0x5
 5250 01b0 67       		.byte	0x67
 5251 01b1 DB000000 		.4byte	0xdb
 5252 01b5 02       		.byte	0x2
 5253 01b6 0C       		.uleb128 0xc
 5254 01b7 81030000 		.4byte	.LASF44
 5255 01bb 05       		.byte	0x5
 5256 01bc 68       		.byte	0x68
 5257 01bd DB000000 		.4byte	0xdb
 5258 01c1 04       		.byte	0x4
 5259 01c2 0C       		.uleb128 0xc
 5260 01c3 D2080000 		.4byte	.LASF45
 5261 01c7 05       		.byte	0x5
 5262 01c8 69       		.byte	0x69
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 114


 5263 01c9 DB000000 		.4byte	0xdb
 5264 01cd 06       		.byte	0x6
 5265 01ce 0C       		.uleb128 0xc
 5266 01cf 4C090000 		.4byte	.LASF46
 5267 01d3 05       		.byte	0x5
 5268 01d4 6A       		.byte	0x6a
 5269 01d5 DB000000 		.4byte	0xdb
 5270 01d9 08       		.byte	0x8
 5271 01da 0C       		.uleb128 0xc
 5272 01db 32050000 		.4byte	.LASF47
 5273 01df 05       		.byte	0x5
 5274 01e0 6B       		.byte	0x6b
 5275 01e1 DB000000 		.4byte	0xdb
 5276 01e5 0A       		.byte	0xa
 5277 01e6 0C       		.uleb128 0xc
 5278 01e7 B2030000 		.4byte	.LASF48
 5279 01eb 05       		.byte	0x5
 5280 01ec 6C       		.byte	0x6c
 5281 01ed DB000000 		.4byte	0xdb
 5282 01f1 0C       		.byte	0xc
 5283 01f2 0C       		.uleb128 0xc
 5284 01f3 B9050000 		.4byte	.LASF49
 5285 01f7 05       		.byte	0x5
 5286 01f8 6D       		.byte	0x6d
 5287 01f9 DB000000 		.4byte	0xdb
 5288 01fd 0E       		.byte	0xe
 5289 01fe 0C       		.uleb128 0xc
 5290 01ff 80040000 		.4byte	.LASF50
 5291 0203 05       		.byte	0x5
 5292 0204 6E       		.byte	0x6e
 5293 0205 DB000000 		.4byte	0xdb
 5294 0209 10       		.byte	0x10
 5295 020a 0C       		.uleb128 0xc
 5296 020b 40070000 		.4byte	.LASF51
 5297 020f 05       		.byte	0x5
 5298 0210 6F       		.byte	0x6f
 5299 0211 DB000000 		.4byte	0xdb
 5300 0215 12       		.byte	0x12
 5301 0216 0C       		.uleb128 0xc
 5302 0217 70090000 		.4byte	.LASF52
 5303 021b 05       		.byte	0x5
 5304 021c 70       		.byte	0x70
 5305 021d DB000000 		.4byte	0xdb
 5306 0221 14       		.byte	0x14
 5307 0222 0C       		.uleb128 0xc
 5308 0223 0E040000 		.4byte	.LASF53
 5309 0227 05       		.byte	0x5
 5310 0228 71       		.byte	0x71
 5311 0229 DB000000 		.4byte	0xdb
 5312 022d 16       		.byte	0x16
 5313 022e 0C       		.uleb128 0xc
 5314 022f 42010000 		.4byte	.LASF54
 5315 0233 05       		.byte	0x5
 5316 0234 72       		.byte	0x72
 5317 0235 DB000000 		.4byte	0xdb
 5318 0239 18       		.byte	0x18
 5319 023a 0C       		.uleb128 0xc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 115


 5320 023b ED030000 		.4byte	.LASF55
 5321 023f 05       		.byte	0x5
 5322 0240 73       		.byte	0x73
 5323 0241 DB000000 		.4byte	0xdb
 5324 0245 1A       		.byte	0x1a
 5325 0246 0C       		.uleb128 0xc
 5326 0247 29050000 		.4byte	.LASF56
 5327 024b 05       		.byte	0x5
 5328 024c 74       		.byte	0x74
 5329 024d DB000000 		.4byte	0xdb
 5330 0251 1C       		.byte	0x1c
 5331 0252 0C       		.uleb128 0xc
 5332 0253 07020000 		.4byte	.LASF57
 5333 0257 05       		.byte	0x5
 5334 0258 75       		.byte	0x75
 5335 0259 DB000000 		.4byte	0xdb
 5336 025d 1E       		.byte	0x1e
 5337 025e 00       		.byte	0
 5338 025f 0D       		.uleb128 0xd
 5339 0260 F3080000 		.4byte	.LASF58
 5340 0264 01       		.byte	0x1
 5341 0265 60       		.byte	0x60
 5342 0266 00000000 		.4byte	.LFB63
 5343 026a 0C000000 		.4byte	.LFE63-.LFB63
 5344 026e 01       		.uleb128 0x1
 5345 026f 9C       		.byte	0x9c
 5346 0270 0E       		.uleb128 0xe
 5347 0271 48070000 		.4byte	.LASF59
 5348 0275 01       		.byte	0x1
 5349 0276 66       		.byte	0x66
 5350 0277 00000000 		.4byte	.LFB64
 5351 027b 2C000000 		.4byte	.LFE64-.LFB64
 5352 027f 01       		.uleb128 0x1
 5353 0280 9C       		.byte	0x9c
 5354 0281 0E       		.uleb128 0xe
 5355 0282 14020000 		.4byte	.LASF60
 5356 0286 01       		.byte	0x1
 5357 0287 6F       		.byte	0x6f
 5358 0288 00000000 		.4byte	.LFB65
 5359 028c 9C010000 		.4byte	.LFE65-.LFB65
 5360 0290 01       		.uleb128 0x1
 5361 0291 9C       		.byte	0x9c
 5362 0292 0E       		.uleb128 0xe
 5363 0293 AE020000 		.4byte	.LASF61
 5364 0297 01       		.byte	0x1
 5365 0298 A7       		.byte	0xa7
 5366 0299 00000000 		.4byte	.LFB66
 5367 029d AC000000 		.4byte	.LFE66-.LFB66
 5368 02a1 01       		.uleb128 0x1
 5369 02a2 9C       		.byte	0x9c
 5370 02a3 0D       		.uleb128 0xd
 5371 02a4 1D080000 		.4byte	.LASF62
 5372 02a8 01       		.byte	0x1
 5373 02a9 CA       		.byte	0xca
 5374 02aa 00000000 		.4byte	.LFB67
 5375 02ae 20000000 		.4byte	.LFE67-.LFB67
 5376 02b2 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 116


 5377 02b3 9C       		.byte	0x9c
 5378 02b4 0E       		.uleb128 0xe
 5379 02b5 34030000 		.4byte	.LASF63
 5380 02b9 01       		.byte	0x1
 5381 02ba D1       		.byte	0xd1
 5382 02bb 00000000 		.4byte	.LFB68
 5383 02bf 28000000 		.4byte	.LFE68-.LFB68
 5384 02c3 01       		.uleb128 0x1
 5385 02c4 9C       		.byte	0x9c
 5386 02c5 0E       		.uleb128 0xe
 5387 02c6 F4050000 		.4byte	.LASF64
 5388 02ca 01       		.byte	0x1
 5389 02cb DA       		.byte	0xda
 5390 02cc 00000000 		.4byte	.LFB69
 5391 02d0 0A000000 		.4byte	.LFE69-.LFB69
 5392 02d4 01       		.uleb128 0x1
 5393 02d5 9C       		.byte	0x9c
 5394 02d6 0E       		.uleb128 0xe
 5395 02d7 11060000 		.4byte	.LASF65
 5396 02db 01       		.byte	0x1
 5397 02dc DF       		.byte	0xdf
 5398 02dd 00000000 		.4byte	.LFB70
 5399 02e1 28000000 		.4byte	.LFE70-.LFB70
 5400 02e5 01       		.uleb128 0x1
 5401 02e6 9C       		.byte	0x9c
 5402 02e7 0F       		.uleb128 0xf
 5403 02e8 EE080000 		.4byte	.LASF73
 5404 02ec 01       		.byte	0x1
 5405 02ed EA       		.byte	0xea
 5406 02ee 73000000 		.4byte	0x73
 5407 02f2 00000000 		.4byte	.LFB71
 5408 02f6 DC060000 		.4byte	.LFE71-.LFB71
 5409 02fa 01       		.uleb128 0x1
 5410 02fb 9C       		.byte	0x9c
 5411 02fc CD030000 		.4byte	0x3cd
 5412 0300 10       		.uleb128 0x10
 5413 0301 25030000 		.4byte	.LASF66
 5414 0305 01       		.byte	0x1
 5415 0306 2301     		.2byte	0x123
 5416 0308 B7000000 		.4byte	0xb7
 5417 030c 02       		.uleb128 0x2
 5418 030d 91       		.byte	0x91
 5419 030e 76       		.sleb128 -10
 5420 030f 11       		.uleb128 0x11
 5421 0310 66000000 		.4byte	.LBB2
 5422 0314 5C060000 		.4byte	.LBE2-.LBB2
 5423 0318 10       		.uleb128 0x10
 5424 0319 A1020000 		.4byte	.LASF67
 5425 031d 01       		.byte	0x1
 5426 031e 3101     		.2byte	0x131
 5427 0320 CD030000 		.4byte	0x3cd
 5428 0324 02       		.uleb128 0x2
 5429 0325 91       		.byte	0x91
 5430 0326 6C       		.sleb128 -20
 5431 0327 11       		.uleb128 0x11
 5432 0328 3C010000 		.4byte	.LBB3
 5433 032c 22050000 		.4byte	.LBE3-.LBB3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 117


 5434 0330 10       		.uleb128 0x10
 5435 0331 92040000 		.4byte	.LASF68
 5436 0335 01       		.byte	0x1
 5437 0336 5B01     		.2byte	0x15b
 5438 0338 8E000000 		.4byte	0x8e
 5439 033c 02       		.uleb128 0x2
 5440 033d 91       		.byte	0x91
 5441 033e 75       		.sleb128 -11
 5442 033f 12       		.uleb128 0x12
 5443 0340 88010000 		.4byte	.LBB4
 5444 0344 F4010000 		.4byte	.LBE4-.LBB4
 5445 0348 75030000 		.4byte	0x375
 5446 034c 13       		.uleb128 0x13
 5447 034d 6D657300 		.ascii	"mes\000"
 5448 0351 01       		.byte	0x1
 5449 0352 6201     		.2byte	0x162
 5450 0354 DD030000 		.4byte	0x3dd
 5451 0358 02       		.uleb128 0x2
 5452 0359 91       		.byte	0x91
 5453 035a 5C       		.sleb128 -36
 5454 035b 11       		.uleb128 0x11
 5455 035c B0010000 		.4byte	.LBB5
 5456 0360 CC010000 		.4byte	.LBE5-.LBB5
 5457 0364 10       		.uleb128 0x10
 5458 0365 01040000 		.4byte	.LASF69
 5459 0369 01       		.byte	0x1
 5460 036a 7301     		.2byte	0x173
 5461 036c AB000000 		.4byte	0xab
 5462 0370 02       		.uleb128 0x2
 5463 0371 91       		.byte	0x91
 5464 0372 74       		.sleb128 -12
 5465 0373 00       		.byte	0
 5466 0374 00       		.byte	0
 5467 0375 12       		.uleb128 0x12
 5468 0376 D6030000 		.4byte	.LBB6
 5469 037a C6000000 		.4byte	.LBE6-.LBB6
 5470 037e A1030000 		.4byte	0x3a1
 5471 0382 13       		.uleb128 0x13
 5472 0383 6D657300 		.ascii	"mes\000"
 5473 0387 01       		.byte	0x1
 5474 0388 AD01     		.2byte	0x1ad
 5475 038a DD030000 		.4byte	0x3dd
 5476 038e 02       		.uleb128 0x2
 5477 038f 91       		.byte	0x91
 5478 0390 4C       		.sleb128 -52
 5479 0391 10       		.uleb128 0x10
 5480 0392 01040000 		.4byte	.LASF69
 5481 0396 01       		.byte	0x1
 5482 0397 B101     		.2byte	0x1b1
 5483 0399 AB000000 		.4byte	0xab
 5484 039d 02       		.uleb128 0x2
 5485 039e 91       		.byte	0x91
 5486 039f 73       		.sleb128 -13
 5487 03a0 00       		.byte	0
 5488 03a1 11       		.uleb128 0x11
 5489 03a2 B4040000 		.4byte	.LBB7
 5490 03a6 A0010000 		.4byte	.LBE7-.LBB7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 118


 5491 03aa 13       		.uleb128 0x13
 5492 03ab 6D657300 		.ascii	"mes\000"
 5493 03af 01       		.byte	0x1
 5494 03b0 CD01     		.2byte	0x1cd
 5495 03b2 DD030000 		.4byte	0x3dd
 5496 03b6 03       		.uleb128 0x3
 5497 03b7 91       		.byte	0x91
 5498 03b8 BC7F     		.sleb128 -68
 5499 03ba 10       		.uleb128 0x10
 5500 03bb 01040000 		.4byte	.LASF69
 5501 03bf 01       		.byte	0x1
 5502 03c0 D101     		.2byte	0x1d1
 5503 03c2 AB000000 		.4byte	0xab
 5504 03c6 02       		.uleb128 0x2
 5505 03c7 91       		.byte	0x91
 5506 03c8 72       		.sleb128 -14
 5507 03c9 00       		.byte	0
 5508 03ca 00       		.byte	0
 5509 03cb 00       		.byte	0
 5510 03cc 00       		.byte	0
 5511 03cd 07       		.uleb128 0x7
 5512 03ce AB000000 		.4byte	0xab
 5513 03d2 DD030000 		.4byte	0x3dd
 5514 03d6 08       		.uleb128 0x8
 5515 03d7 81000000 		.4byte	0x81
 5516 03db 04       		.byte	0x4
 5517 03dc 00       		.byte	0
 5518 03dd 07       		.uleb128 0x7
 5519 03de 8E000000 		.4byte	0x8e
 5520 03e2 ED030000 		.4byte	0x3ed
 5521 03e6 08       		.uleb128 0x8
 5522 03e7 81000000 		.4byte	0x81
 5523 03eb 0F       		.byte	0xf
 5524 03ec 00       		.byte	0
 5525 03ed 14       		.uleb128 0x14
 5526 03ee 2C090000 		.4byte	.LASF76
 5527 03f2 01       		.byte	0x1
 5528 03f3 2C02     		.2byte	0x22c
 5529 03f5 00000000 		.4byte	.LFB72
 5530 03f9 60010000 		.4byte	.LFE72-.LFB72
 5531 03fd 01       		.uleb128 0x1
 5532 03fe 9C       		.byte	0x9c
 5533 03ff 3B040000 		.4byte	0x43b
 5534 0403 11       		.uleb128 0x11
 5535 0404 10000000 		.4byte	.LBB8
 5536 0408 34010000 		.4byte	.LBE8-.LBB8
 5537 040c 10       		.uleb128 0x10
 5538 040d 35010000 		.4byte	.LASF70
 5539 0411 01       		.byte	0x1
 5540 0412 3202     		.2byte	0x232
 5541 0414 B7000000 		.4byte	0xb7
 5542 0418 02       		.uleb128 0x2
 5543 0419 91       		.byte	0x91
 5544 041a 76       		.sleb128 -10
 5545 041b 10       		.uleb128 0x10
 5546 041c 9B070000 		.4byte	.LASF71
 5547 0420 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 119


 5548 0421 3302     		.2byte	0x233
 5549 0423 3B040000 		.4byte	0x43b
 5550 0427 02       		.uleb128 0x2
 5551 0428 91       		.byte	0x91
 5552 0429 68       		.sleb128 -24
 5553 042a 10       		.uleb128 0x10
 5554 042b 43020000 		.4byte	.LASF72
 5555 042f 01       		.byte	0x1
 5556 0430 3402     		.2byte	0x234
 5557 0432 3B040000 		.4byte	0x43b
 5558 0436 02       		.uleb128 0x2
 5559 0437 91       		.byte	0x91
 5560 0438 5C       		.sleb128 -36
 5561 0439 00       		.byte	0
 5562 043a 00       		.byte	0
 5563 043b 07       		.uleb128 0x7
 5564 043c 8E000000 		.4byte	0x8e
 5565 0440 4B040000 		.4byte	0x44b
 5566 0444 08       		.uleb128 0x8
 5567 0445 81000000 		.4byte	0x81
 5568 0449 0B       		.byte	0xb
 5569 044a 00       		.byte	0
 5570 044b 15       		.uleb128 0x15
 5571 044c CB030000 		.4byte	.LASF74
 5572 0450 01       		.byte	0x1
 5573 0451 6D02     		.2byte	0x26d
 5574 0453 00000000 		.4byte	.LFB73
 5575 0457 18000000 		.4byte	.LFE73-.LFB73
 5576 045b 01       		.uleb128 0x1
 5577 045c 9C       		.byte	0x9c
 5578 045d 71040000 		.4byte	0x471
 5579 0461 16       		.uleb128 0x16
 5580 0462 64697200 		.ascii	"dir\000"
 5581 0466 01       		.byte	0x1
 5582 0467 6D02     		.2byte	0x26d
 5583 0469 AB000000 		.4byte	0xab
 5584 046d 02       		.uleb128 0x2
 5585 046e 91       		.byte	0x91
 5586 046f 77       		.sleb128 -9
 5587 0470 00       		.byte	0
 5588 0471 15       		.uleb128 0x15
 5589 0472 20040000 		.4byte	.LASF75
 5590 0476 01       		.byte	0x1
 5591 0477 7202     		.2byte	0x272
 5592 0479 00000000 		.4byte	.LFB74
 5593 047d 18000000 		.4byte	.LFE74-.LFB74
 5594 0481 01       		.uleb128 0x1
 5595 0482 9C       		.byte	0x9c
 5596 0483 97040000 		.4byte	0x497
 5597 0487 16       		.uleb128 0x16
 5598 0488 64697200 		.ascii	"dir\000"
 5599 048c 01       		.byte	0x1
 5600 048d 7202     		.2byte	0x272
 5601 048f AB000000 		.4byte	0xab
 5602 0493 02       		.uleb128 0x2
 5603 0494 91       		.byte	0x91
 5604 0495 77       		.sleb128 -9
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 120


 5605 0496 00       		.byte	0
 5606 0497 17       		.uleb128 0x17
 5607 0498 51080000 		.4byte	.LASF77
 5608 049c 01       		.byte	0x1
 5609 049d 7702     		.2byte	0x277
 5610 049f 00000000 		.4byte	.LFB75
 5611 04a3 54000000 		.4byte	.LFE75-.LFB75
 5612 04a7 01       		.uleb128 0x1
 5613 04a8 9C       		.byte	0x9c
 5614 04a9 BD040000 		.4byte	0x4bd
 5615 04ad 13       		.uleb128 0x13
 5616 04ae 6D657300 		.ascii	"mes\000"
 5617 04b2 01       		.byte	0x1
 5618 04b3 7C02     		.2byte	0x27c
 5619 04b5 DD030000 		.4byte	0x3dd
 5620 04b9 02       		.uleb128 0x2
 5621 04ba 91       		.byte	0x91
 5622 04bb 68       		.sleb128 -24
 5623 04bc 00       		.byte	0
 5624 04bd 15       		.uleb128 0x15
 5625 04be 24020000 		.4byte	.LASF78
 5626 04c2 01       		.byte	0x1
 5627 04c3 8102     		.2byte	0x281
 5628 04c5 00000000 		.4byte	.LFB76
 5629 04c9 F4000000 		.4byte	.LFE76-.LFB76
 5630 04cd 01       		.uleb128 0x1
 5631 04ce 9C       		.byte	0x9c
 5632 04cf 10050000 		.4byte	0x510
 5633 04d3 18       		.uleb128 0x18
 5634 04d4 19070000 		.4byte	.LASF79
 5635 04d8 01       		.byte	0x1
 5636 04d9 8102     		.2byte	0x281
 5637 04db EE000000 		.4byte	0xee
 5638 04df 02       		.uleb128 0x2
 5639 04e0 91       		.byte	0x91
 5640 04e1 68       		.sleb128 -24
 5641 04e2 18       		.uleb128 0x18
 5642 04e3 4D040000 		.4byte	.LASF80
 5643 04e7 01       		.byte	0x1
 5644 04e8 8102     		.2byte	0x281
 5645 04ea EE000000 		.4byte	0xee
 5646 04ee 02       		.uleb128 0x2
 5647 04ef 91       		.byte	0x91
 5648 04f0 60       		.sleb128 -32
 5649 04f1 10       		.uleb128 0x10
 5650 04f2 5C020000 		.4byte	.LASF81
 5651 04f6 01       		.byte	0x1
 5652 04f7 9602     		.2byte	0x296
 5653 04f9 DB000000 		.4byte	0xdb
 5654 04fd 02       		.uleb128 0x2
 5655 04fe 91       		.byte	0x91
 5656 04ff 76       		.sleb128 -10
 5657 0500 10       		.uleb128 0x10
 5658 0501 80050000 		.4byte	.LASF82
 5659 0505 01       		.byte	0x1
 5660 0506 9702     		.2byte	0x297
 5661 0508 DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 121


 5662 050c 02       		.uleb128 0x2
 5663 050d 91       		.byte	0x91
 5664 050e 74       		.sleb128 -12
 5665 050f 00       		.byte	0
 5666 0510 19       		.uleb128 0x19
 5667 0511 62080000 		.4byte	.LASF83
 5668 0515 01       		.byte	0x1
 5669 0516 9D02     		.2byte	0x29d
 5670 0518 00000000 		.4byte	.LFB77
 5671 051c 18000000 		.4byte	.LFE77-.LFB77
 5672 0520 01       		.uleb128 0x1
 5673 0521 9C       		.byte	0x9c
 5674 0522 19       		.uleb128 0x19
 5675 0523 90090000 		.4byte	.LASF84
 5676 0527 01       		.byte	0x1
 5677 0528 A302     		.2byte	0x2a3
 5678 052a 00000000 		.4byte	.LFB78
 5679 052e 18000000 		.4byte	.LFE78-.LFB78
 5680 0532 01       		.uleb128 0x1
 5681 0533 9C       		.byte	0x9c
 5682 0534 19       		.uleb128 0x19
 5683 0535 D3070000 		.4byte	.LASF85
 5684 0539 01       		.byte	0x1
 5685 053a A902     		.2byte	0x2a9
 5686 053c 00000000 		.4byte	.LFB79
 5687 0540 22000000 		.4byte	.LFE79-.LFB79
 5688 0544 01       		.uleb128 0x1
 5689 0545 9C       		.byte	0x9c
 5690 0546 19       		.uleb128 0x19
 5691 0547 67020000 		.4byte	.LASF86
 5692 054b 01       		.byte	0x1
 5693 054c AF02     		.2byte	0x2af
 5694 054e 00000000 		.4byte	.LFB80
 5695 0552 1C000000 		.4byte	.LFE80-.LFB80
 5696 0556 01       		.uleb128 0x1
 5697 0557 9C       		.byte	0x9c
 5698 0558 19       		.uleb128 0x19
 5699 0559 36070000 		.4byte	.LASF87
 5700 055d 01       		.byte	0x1
 5701 055e B402     		.2byte	0x2b4
 5702 0560 00000000 		.4byte	.LFB81
 5703 0564 28000000 		.4byte	.LFE81-.LFB81
 5704 0568 01       		.uleb128 0x1
 5705 0569 9C       		.byte	0x9c
 5706 056a 19       		.uleb128 0x19
 5707 056b 75020000 		.4byte	.LASF88
 5708 056f 01       		.byte	0x1
 5709 0570 B902     		.2byte	0x2b9
 5710 0572 00000000 		.4byte	.LFB82
 5711 0576 2C000000 		.4byte	.LFE82-.LFB82
 5712 057a 01       		.uleb128 0x1
 5713 057b 9C       		.byte	0x9c
 5714 057c 19       		.uleb128 0x19
 5715 057d E7030000 		.4byte	.LASF89
 5716 0581 01       		.byte	0x1
 5717 0582 BE02     		.2byte	0x2be
 5718 0584 00000000 		.4byte	.LFB83
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 122


 5719 0588 44000000 		.4byte	.LFE83-.LFB83
 5720 058c 01       		.uleb128 0x1
 5721 058d 9C       		.byte	0x9c
 5722 058e 19       		.uleb128 0x19
 5723 058f C8020000 		.4byte	.LASF90
 5724 0593 01       		.byte	0x1
 5725 0594 C302     		.2byte	0x2c3
 5726 0596 00000000 		.4byte	.LFB84
 5727 059a 38000000 		.4byte	.LFE84-.LFB84
 5728 059e 01       		.uleb128 0x1
 5729 059f 9C       		.byte	0x9c
 5730 05a0 19       		.uleb128 0x19
 5731 05a1 8E060000 		.4byte	.LASF91
 5732 05a5 01       		.byte	0x1
 5733 05a6 CC02     		.2byte	0x2cc
 5734 05a8 00000000 		.4byte	.LFB85
 5735 05ac 38000000 		.4byte	.LFE85-.LFB85
 5736 05b0 01       		.uleb128 0x1
 5737 05b1 9C       		.byte	0x9c
 5738 05b2 19       		.uleb128 0x19
 5739 05b3 66060000 		.4byte	.LASF92
 5740 05b7 01       		.byte	0x1
 5741 05b8 D502     		.2byte	0x2d5
 5742 05ba 00000000 		.4byte	.LFB86
 5743 05be 38000000 		.4byte	.LFE86-.LFB86
 5744 05c2 01       		.uleb128 0x1
 5745 05c3 9C       		.byte	0x9c
 5746 05c4 19       		.uleb128 0x19
 5747 05c5 F2010000 		.4byte	.LASF93
 5748 05c9 01       		.byte	0x1
 5749 05ca DE02     		.2byte	0x2de
 5750 05cc 00000000 		.4byte	.LFB87
 5751 05d0 14000000 		.4byte	.LFE87-.LFB87
 5752 05d4 01       		.uleb128 0x1
 5753 05d5 9C       		.byte	0x9c
 5754 05d6 1A       		.uleb128 0x1a
 5755 05d7 DE020000 		.4byte	.LASF94
 5756 05db 01       		.byte	0x1
 5757 05dc E302     		.2byte	0x2e3
 5758 05de 00000000 		.4byte	.LFB88
 5759 05e2 18000000 		.4byte	.LFE88-.LFB88
 5760 05e6 01       		.uleb128 0x1
 5761 05e7 9C       		.byte	0x9c
 5762 05e8 1A       		.uleb128 0x1a
 5763 05e9 88040000 		.4byte	.LASF95
 5764 05ed 01       		.byte	0x1
 5765 05ee E702     		.2byte	0x2e7
 5766 05f0 00000000 		.4byte	.LFB89
 5767 05f4 18000000 		.4byte	.LFE89-.LFB89
 5768 05f8 01       		.uleb128 0x1
 5769 05f9 9C       		.byte	0x9c
 5770 05fa 1A       		.uleb128 0x1a
 5771 05fb 9B090000 		.4byte	.LASF96
 5772 05ff 01       		.byte	0x1
 5773 0600 EC02     		.2byte	0x2ec
 5774 0602 00000000 		.4byte	.LFB90
 5775 0606 18000000 		.4byte	.LFE90-.LFB90
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 123


 5776 060a 01       		.uleb128 0x1
 5777 060b 9C       		.byte	0x9c
 5778 060c 1A       		.uleb128 0x1a
 5779 060d 72030000 		.4byte	.LASF97
 5780 0611 01       		.byte	0x1
 5781 0612 F002     		.2byte	0x2f0
 5782 0614 00000000 		.4byte	.LFB91
 5783 0618 18000000 		.4byte	.LFE91-.LFB91
 5784 061c 01       		.uleb128 0x1
 5785 061d 9C       		.byte	0x9c
 5786 061e 15       		.uleb128 0x15
 5787 061f BD060000 		.4byte	.LASF98
 5788 0623 01       		.byte	0x1
 5789 0624 F702     		.2byte	0x2f7
 5790 0626 00000000 		.4byte	.LFB92
 5791 062a B8000000 		.4byte	.LFE92-.LFB92
 5792 062e 01       		.uleb128 0x1
 5793 062f 9C       		.byte	0x9c
 5794 0630 44060000 		.4byte	0x644
 5795 0634 10       		.uleb128 0x10
 5796 0635 3A050000 		.4byte	.LASF99
 5797 0639 01       		.byte	0x1
 5798 063a F802     		.2byte	0x2f8
 5799 063c 8E000000 		.4byte	0x8e
 5800 0640 02       		.uleb128 0x2
 5801 0641 91       		.byte	0x91
 5802 0642 6F       		.sleb128 -17
 5803 0643 00       		.byte	0
 5804 0644 15       		.uleb128 0x15
 5805 0645 DF050000 		.4byte	.LASF100
 5806 0649 01       		.byte	0x1
 5807 064a 1403     		.2byte	0x314
 5808 064c 00000000 		.4byte	.LFB93
 5809 0650 28030000 		.4byte	.LFE93-.LFB93
 5810 0654 01       		.uleb128 0x1
 5811 0655 9C       		.byte	0x9c
 5812 0656 9D060000 		.4byte	0x69d
 5813 065a 10       		.uleb128 0x10
 5814 065b 3A050000 		.4byte	.LASF99
 5815 065f 01       		.byte	0x1
 5816 0660 1603     		.2byte	0x316
 5817 0662 8E000000 		.4byte	0x8e
 5818 0666 02       		.uleb128 0x2
 5819 0667 91       		.byte	0x91
 5820 0668 6F       		.sleb128 -17
 5821 0669 11       		.uleb128 0x11
 5822 066a 48010000 		.4byte	.LBB9
 5823 066e A6010000 		.4byte	.LBE9-.LBB9
 5824 0672 13       		.uleb128 0x13
 5825 0673 6D657300 		.ascii	"mes\000"
 5826 0677 01       		.byte	0x1
 5827 0678 3C03     		.2byte	0x33c
 5828 067a DD030000 		.4byte	0x3dd
 5829 067e 02       		.uleb128 0x2
 5830 067f 91       		.byte	0x91
 5831 0680 5C       		.sleb128 -36
 5832 0681 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 124


 5833 0682 6900     		.ascii	"i\000"
 5834 0684 01       		.byte	0x1
 5835 0685 4F03     		.2byte	0x34f
 5836 0687 73000000 		.4byte	0x73
 5837 068b 02       		.uleb128 0x2
 5838 068c 91       		.byte	0x91
 5839 068d 74       		.sleb128 -12
 5840 068e 13       		.uleb128 0x13
 5841 068f 7800     		.ascii	"x\000"
 5842 0691 01       		.byte	0x1
 5843 0692 6603     		.2byte	0x366
 5844 0694 73000000 		.4byte	0x73
 5845 0698 02       		.uleb128 0x2
 5846 0699 91       		.byte	0x91
 5847 069a 70       		.sleb128 -16
 5848 069b 00       		.byte	0
 5849 069c 00       		.byte	0
 5850 069d 19       		.uleb128 0x19
 5851 069e BD020000 		.4byte	.LASF101
 5852 06a2 01       		.byte	0x1
 5853 06a3 7903     		.2byte	0x379
 5854 06a5 00000000 		.4byte	.LFB94
 5855 06a9 40000000 		.4byte	.LFE94-.LFB94
 5856 06ad 01       		.uleb128 0x1
 5857 06ae 9C       		.byte	0x9c
 5858 06af 19       		.uleb128 0x19
 5859 06b0 51020000 		.4byte	.LASF102
 5860 06b4 01       		.byte	0x1
 5861 06b5 8803     		.2byte	0x388
 5862 06b7 00000000 		.4byte	.LFB95
 5863 06bb 40000000 		.4byte	.LFE95-.LFB95
 5864 06bf 01       		.uleb128 0x1
 5865 06c0 9C       		.byte	0x9c
 5866 06c1 17       		.uleb128 0x17
 5867 06c2 90000000 		.4byte	.LASF103
 5868 06c6 01       		.byte	0x1
 5869 06c7 9803     		.2byte	0x398
 5870 06c9 00000000 		.4byte	.LFB96
 5871 06cd 30020000 		.4byte	.LFE96-.LFB96
 5872 06d1 01       		.uleb128 0x1
 5873 06d2 9C       		.byte	0x9c
 5874 06d3 32070000 		.4byte	0x732
 5875 06d7 10       		.uleb128 0x10
 5876 06d8 05030000 		.4byte	.LASF104
 5877 06dc 01       		.byte	0x1
 5878 06dd A603     		.2byte	0x3a6
 5879 06df DB000000 		.4byte	0xdb
 5880 06e3 02       		.uleb128 0x2
 5881 06e4 91       		.byte	0x91
 5882 06e5 5E       		.sleb128 -34
 5883 06e6 10       		.uleb128 0x10
 5884 06e7 58050000 		.4byte	.LASF105
 5885 06eb 01       		.byte	0x1
 5886 06ec A703     		.2byte	0x3a7
 5887 06ee DB000000 		.4byte	0xdb
 5888 06f2 02       		.uleb128 0x2
 5889 06f3 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 125


 5890 06f4 5C       		.sleb128 -36
 5891 06f5 10       		.uleb128 0x10
 5892 06f6 A1030000 		.4byte	.LASF106
 5893 06fa 01       		.byte	0x1
 5894 06fb A803     		.2byte	0x3a8
 5895 06fd EE000000 		.4byte	0xee
 5896 0701 02       		.uleb128 0x2
 5897 0702 91       		.byte	0x91
 5898 0703 68       		.sleb128 -24
 5899 0704 10       		.uleb128 0x10
 5900 0705 54090000 		.4byte	.LASF107
 5901 0709 01       		.byte	0x1
 5902 070a A903     		.2byte	0x3a9
 5903 070c EE000000 		.4byte	0xee
 5904 0710 02       		.uleb128 0x2
 5905 0711 91       		.byte	0x91
 5906 0712 60       		.sleb128 -32
 5907 0713 10       		.uleb128 0x10
 5908 0714 38040000 		.4byte	.LASF108
 5909 0718 01       		.byte	0x1
 5910 0719 B203     		.2byte	0x3b2
 5911 071b 73000000 		.4byte	0x73
 5912 071f 02       		.uleb128 0x2
 5913 0720 91       		.byte	0x91
 5914 0721 58       		.sleb128 -40
 5915 0722 10       		.uleb128 0x10
 5916 0723 FC080000 		.4byte	.LASF109
 5917 0727 01       		.byte	0x1
 5918 0728 B303     		.2byte	0x3b3
 5919 072a 73000000 		.4byte	0x73
 5920 072e 02       		.uleb128 0x2
 5921 072f 91       		.byte	0x91
 5922 0730 54       		.sleb128 -44
 5923 0731 00       		.byte	0
 5924 0732 1A       		.uleb128 0x1a
 5925 0733 AF050000 		.4byte	.LASF110
 5926 0737 01       		.byte	0x1
 5927 0738 C103     		.2byte	0x3c1
 5928 073a 00000000 		.4byte	.LFB97
 5929 073e 0C000000 		.4byte	.LFE97-.LFB97
 5930 0742 01       		.uleb128 0x1
 5931 0743 9C       		.byte	0x9c
 5932 0744 17       		.uleb128 0x17
 5933 0745 82010000 		.4byte	.LASF111
 5934 0749 01       		.byte	0x1
 5935 074a C703     		.2byte	0x3c7
 5936 074c 00000000 		.4byte	.LFB98
 5937 0750 4C010000 		.4byte	.LFE98-.LFB98
 5938 0754 01       		.uleb128 0x1
 5939 0755 9C       		.byte	0x9c
 5940 0756 86070000 		.4byte	0x786
 5941 075a 13       		.uleb128 0x13
 5942 075b 6E6C00   		.ascii	"nl\000"
 5943 075e 01       		.byte	0x1
 5944 075f CB03     		.2byte	0x3cb
 5945 0761 AB000000 		.4byte	0xab
 5946 0765 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 126


 5947 0766 91       		.byte	0x91
 5948 0767 67       		.sleb128 -25
 5949 0768 13       		.uleb128 0x13
 5950 0769 6E7200   		.ascii	"nr\000"
 5951 076c 01       		.byte	0x1
 5952 076d CC03     		.2byte	0x3cc
 5953 076f AB000000 		.4byte	0xab
 5954 0773 02       		.uleb128 0x2
 5955 0774 91       		.byte	0x91
 5956 0775 66       		.sleb128 -26
 5957 0776 13       		.uleb128 0x13
 5958 0777 6D696400 		.ascii	"mid\000"
 5959 077b 01       		.byte	0x1
 5960 077c CD03     		.2byte	0x3cd
 5961 077e AB000000 		.4byte	0xab
 5962 0782 02       		.uleb128 0x2
 5963 0783 91       		.byte	0x91
 5964 0784 65       		.sleb128 -27
 5965 0785 00       		.byte	0
 5966 0786 1A       		.uleb128 0x1a
 5967 0787 67010000 		.4byte	.LASF112
 5968 078b 01       		.byte	0x1
 5969 078c E703     		.2byte	0x3e7
 5970 078e 00000000 		.4byte	.LFB99
 5971 0792 0C000000 		.4byte	.LFE99-.LFB99
 5972 0796 01       		.uleb128 0x1
 5973 0797 9C       		.byte	0x9c
 5974 0798 17       		.uleb128 0x17
 5975 0799 97030000 		.4byte	.LASF113
 5976 079d 01       		.byte	0x1
 5977 079e EC03     		.2byte	0x3ec
 5978 07a0 00000000 		.4byte	.LFB100
 5979 07a4 C0000000 		.4byte	.LFE100-.LFB100
 5980 07a8 01       		.uleb128 0x1
 5981 07a9 9C       		.byte	0x9c
 5982 07aa E6070000 		.4byte	0x7e6
 5983 07ae 11       		.uleb128 0x11
 5984 07af 0E000000 		.4byte	.LBB10
 5985 07b3 8E000000 		.4byte	.LBE10-.LBB10
 5986 07b7 10       		.uleb128 0x10
 5987 07b8 F7020000 		.4byte	.LASF114
 5988 07bc 01       		.byte	0x1
 5989 07bd F503     		.2byte	0x3f5
 5990 07bf E7000000 		.4byte	0xe7
 5991 07c3 02       		.uleb128 0x2
 5992 07c4 91       		.byte	0x91
 5993 07c5 74       		.sleb128 -12
 5994 07c6 10       		.uleb128 0x10
 5995 07c7 96050000 		.4byte	.LASF115
 5996 07cb 01       		.byte	0x1
 5997 07cc F603     		.2byte	0x3f6
 5998 07ce DB000000 		.4byte	0xdb
 5999 07d2 02       		.uleb128 0x2
 6000 07d3 91       		.byte	0x91
 6001 07d4 72       		.sleb128 -14
 6002 07d5 10       		.uleb128 0x10
 6003 07d6 5A030000 		.4byte	.LASF116
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 127


 6004 07da 01       		.byte	0x1
 6005 07db FB03     		.2byte	0x3fb
 6006 07dd DD030000 		.4byte	0x3dd
 6007 07e1 02       		.uleb128 0x2
 6008 07e2 91       		.byte	0x91
 6009 07e3 60       		.sleb128 -32
 6010 07e4 00       		.byte	0
 6011 07e5 00       		.byte	0
 6012 07e6 17       		.uleb128 0x17
 6013 07e7 3D090000 		.4byte	.LASF117
 6014 07eb 01       		.byte	0x1
 6015 07ec 0204     		.2byte	0x402
 6016 07ee 00000000 		.4byte	.LFB101
 6017 07f2 B8000000 		.4byte	.LFE101-.LFB101
 6018 07f6 01       		.uleb128 0x1
 6019 07f7 9C       		.byte	0x9c
 6020 07f8 16080000 		.4byte	0x816
 6021 07fc 11       		.uleb128 0x11
 6022 07fd 0E000000 		.4byte	.LBB11
 6023 0801 86000000 		.4byte	.LBE11-.LBB11
 6024 0805 10       		.uleb128 0x10
 6025 0806 B1060000 		.4byte	.LASF118
 6026 080a 01       		.byte	0x1
 6027 080b 0604     		.2byte	0x406
 6028 080d DD030000 		.4byte	0x3dd
 6029 0811 02       		.uleb128 0x2
 6030 0812 91       		.byte	0x91
 6031 0813 68       		.sleb128 -24
 6032 0814 00       		.byte	0
 6033 0815 00       		.byte	0
 6034 0816 15       		.uleb128 0x15
 6035 0817 50070000 		.4byte	.LASF119
 6036 081b 01       		.byte	0x1
 6037 081c 1704     		.2byte	0x417
 6038 081e 00000000 		.4byte	.LFB102
 6039 0822 4A000000 		.4byte	.LFE102-.LFB102
 6040 0826 01       		.uleb128 0x1
 6041 0827 9C       		.byte	0x9c
 6042 0828 3C080000 		.4byte	0x83c
 6043 082c 18       		.uleb128 0x18
 6044 082d 4F030000 		.4byte	.LASF120
 6045 0831 01       		.byte	0x1
 6046 0832 1704     		.2byte	0x417
 6047 0834 3C080000 		.4byte	0x83c
 6048 0838 02       		.uleb128 0x2
 6049 0839 91       		.byte	0x91
 6050 083a 6C       		.sleb128 -20
 6051 083b 00       		.byte	0
 6052 083c 05       		.uleb128 0x5
 6053 083d 04       		.byte	0x4
 6054 083e AB000000 		.4byte	0xab
 6055 0842 15       		.uleb128 0x15
 6056 0843 29070000 		.4byte	.LASF121
 6057 0847 01       		.byte	0x1
 6058 0848 2204     		.2byte	0x422
 6059 084a 00000000 		.4byte	.LFB103
 6060 084e 68000000 		.4byte	.LFE103-.LFB103
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 128


 6061 0852 01       		.uleb128 0x1
 6062 0853 9C       		.byte	0x9c
 6063 0854 7F080000 		.4byte	0x87f
 6064 0858 16       		.uleb128 0x16
 6065 0859 7300     		.ascii	"s\000"
 6066 085b 01       		.byte	0x1
 6067 085c 2204     		.2byte	0x422
 6068 085e 88000000 		.4byte	0x88
 6069 0862 02       		.uleb128 0x2
 6070 0863 91       		.byte	0x91
 6071 0864 6C       		.sleb128 -20
 6072 0865 11       		.uleb128 0x11
 6073 0866 10000000 		.4byte	.LBB12
 6074 086a 48000000 		.4byte	.LBE12-.LBB12
 6075 086e 13       		.uleb128 0x13
 6076 086f 636E7400 		.ascii	"cnt\000"
 6077 0873 01       		.byte	0x1
 6078 0874 2904     		.2byte	0x429
 6079 0876 C3000000 		.4byte	0xc3
 6080 087a 02       		.uleb128 0x2
 6081 087b 91       		.byte	0x91
 6082 087c 74       		.sleb128 -12
 6083 087d 00       		.byte	0
 6084 087e 00       		.byte	0
 6085 087f 15       		.uleb128 0x15
 6086 0880 A8080000 		.4byte	.LASF122
 6087 0884 01       		.byte	0x1
 6088 0885 3804     		.2byte	0x438
 6089 0887 00000000 		.4byte	.LFB104
 6090 088b 50000000 		.4byte	.LFE104-.LFB104
 6091 088f 01       		.uleb128 0x1
 6092 0890 9C       		.byte	0x9c
 6093 0891 BC080000 		.4byte	0x8bc
 6094 0895 16       		.uleb128 0x16
 6095 0896 6300     		.ascii	"c\000"
 6096 0898 01       		.byte	0x1
 6097 0899 3804     		.2byte	0x438
 6098 089b 8E000000 		.4byte	0x8e
 6099 089f 02       		.uleb128 0x2
 6100 08a0 91       		.byte	0x91
 6101 08a1 6F       		.sleb128 -17
 6102 08a2 11       		.uleb128 0x11
 6103 08a3 12000000 		.4byte	.LBB13
 6104 08a7 2E000000 		.4byte	.LBE13-.LBB13
 6105 08ab 13       		.uleb128 0x13
 6106 08ac 636E7400 		.ascii	"cnt\000"
 6107 08b0 01       		.byte	0x1
 6108 08b1 3C04     		.2byte	0x43c
 6109 08b3 C3000000 		.4byte	0xc3
 6110 08b7 02       		.uleb128 0x2
 6111 08b8 91       		.byte	0x91
 6112 08b9 74       		.sleb128 -12
 6113 08ba 00       		.byte	0
 6114 08bb 00       		.byte	0
 6115 08bc 1A       		.uleb128 0x1a
 6116 08bd 65030000 		.4byte	.LASF123
 6117 08c1 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 129


 6118 08c2 4904     		.2byte	0x449
 6119 08c4 00000000 		.4byte	.LFB105
 6120 08c8 0C000000 		.4byte	.LFE105-.LFB105
 6121 08cc 01       		.uleb128 0x1
 6122 08cd 9C       		.byte	0x9c
 6123 08ce 1B       		.uleb128 0x1b
 6124 08cf A4060000 		.4byte	.LASF124
 6125 08d3 06       		.byte	0x6
 6126 08d4 9606     		.2byte	0x696
 6127 08d6 DA080000 		.4byte	0x8da
 6128 08da 1C       		.uleb128 0x1c
 6129 08db 95000000 		.4byte	0x95
 6130 08df 1D       		.uleb128 0x1d
 6131 08e0 747300   		.ascii	"ts\000"
 6132 08e3 05       		.byte	0x5
 6133 08e4 10       		.byte	0x10
 6134 08e5 AB000000 		.4byte	0xab
 6135 08e9 05       		.uleb128 0x5
 6136 08ea 03       		.byte	0x3
 6137 08eb 00000000 		.4byte	ts
 6138 08ef 1E       		.uleb128 0x1e
 6139 08f0 2A080000 		.4byte	.LASF125
 6140 08f4 05       		.byte	0x5
 6141 08f5 11       		.byte	0x11
 6142 08f6 B7000000 		.4byte	0xb7
 6143 08fa 05       		.uleb128 0x5
 6144 08fb 03       		.byte	0x3
 6145 08fc 00000000 		.4byte	ts_enc
 6146 0900 1E       		.uleb128 0x1e
 6147 0901 C3060000 		.4byte	.LASF126
 6148 0905 05       		.byte	0x5
 6149 0906 12       		.byte	0x12
 6150 0907 B7000000 		.4byte	0xb7
 6151 090b 05       		.uleb128 0x5
 6152 090c 03       		.byte	0x3
 6153 090d 00000000 		.4byte	ts_update
 6154 0911 1E       		.uleb128 0x1e
 6155 0912 63050000 		.4byte	.LASF127
 6156 0916 05       		.byte	0x5
 6157 0917 13       		.byte	0x13
 6158 0918 B7000000 		.4byte	0xb7
 6159 091c 05       		.uleb128 0x5
 6160 091d 03       		.byte	0x3
 6161 091e 00000000 		.4byte	ts_speed
 6162 0922 1E       		.uleb128 0x1e
 6163 0923 8C030000 		.4byte	.LASF128
 6164 0927 05       		.byte	0x5
 6165 0928 14       		.byte	0x14
 6166 0929 B7000000 		.4byte	0xb7
 6167 092d 05       		.uleb128 0x5
 6168 092e 03       		.byte	0x3
 6169 092f 00000000 		.4byte	ts_display
 6170 0933 1E       		.uleb128 0x1e
 6171 0934 0F030000 		.4byte	.LASF129
 6172 0938 05       		.byte	0x5
 6173 0939 16       		.byte	0x16
 6174 093a AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 130


 6175 093e 05       		.uleb128 0x5
 6176 093f 03       		.byte	0x3
 6177 0940 00000000 		.4byte	flag_ts_enc
 6178 0944 1E       		.uleb128 0x1e
 6179 0945 E8020000 		.4byte	.LASF130
 6180 0949 05       		.byte	0x5
 6181 094a 17       		.byte	0x17
 6182 094b AB000000 		.4byte	0xab
 6183 094f 05       		.uleb128 0x5
 6184 0950 03       		.byte	0x3
 6185 0951 00000000 		.4byte	flag_ts_update
 6186 0955 1E       		.uleb128 0x1e
 6187 0956 1E060000 		.4byte	.LASF131
 6188 095a 05       		.byte	0x5
 6189 095b 18       		.byte	0x18
 6190 095c AB000000 		.4byte	0xab
 6191 0960 05       		.uleb128 0x5
 6192 0961 03       		.byte	0x3
 6193 0962 00000000 		.4byte	flag_ts_speed
 6194 0966 1E       		.uleb128 0x1e
 6195 0967 3B080000 		.4byte	.LASF132
 6196 096b 05       		.byte	0x5
 6197 096c 19       		.byte	0x19
 6198 096d AB000000 		.4byte	0xab
 6199 0971 05       		.uleb128 0x5
 6200 0972 03       		.byte	0x3
 6201 0973 00000000 		.4byte	flag_ts_display
 6202 0977 1E       		.uleb128 0x1e
 6203 0978 49060000 		.4byte	.LASF133
 6204 097c 05       		.byte	0x5
 6205 097d 1C       		.byte	0x1c
 6206 097e AB000000 		.4byte	0xab
 6207 0982 05       		.uleb128 0x5
 6208 0983 03       		.byte	0x3
 6209 0984 00000000 		.4byte	flag_rx
 6210 0988 1E       		.uleb128 0x1e
 6211 0989 95020000 		.4byte	.LASF134
 6212 098d 05       		.byte	0x5
 6213 098e 1D       		.byte	0x1d
 6214 098f AB000000 		.4byte	0xab
 6215 0993 05       		.uleb128 0x5
 6216 0994 03       		.byte	0x3
 6217 0995 00000000 		.4byte	flag_packet
 6218 0999 1E       		.uleb128 0x1e
 6219 099a 61090000 		.4byte	.LASF135
 6220 099e 05       		.byte	0x5
 6221 099f 1E       		.byte	0x1e
 6222 09a0 AB000000 		.4byte	0xab
 6223 09a4 05       		.uleb128 0x5
 6224 09a5 03       		.byte	0x3
 6225 09a6 00000000 		.4byte	flag_KB_string
 6226 09aa 1E       		.uleb128 0x1e
 6227 09ab 2C060000 		.4byte	.LASF136
 6228 09af 05       		.byte	0x5
 6229 09b0 20       		.byte	0x20
 6230 09b1 AB000000 		.4byte	0xab
 6231 09b5 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 131


 6232 09b6 03       		.byte	0x3
 6233 09b7 00000000 		.4byte	dataready_flag
 6234 09bb 1E       		.uleb128 0x1e
 6235 09bc AE010000 		.4byte	.LASF137
 6236 09c0 05       		.byte	0x5
 6237 09c1 22       		.byte	0x22
 6238 09c2 AB000000 		.4byte	0xab
 6239 09c6 05       		.uleb128 0x5
 6240 09c7 03       		.byte	0x3
 6241 09c8 00000000 		.4byte	flag_rf_transmission_active
 6242 09cc 1E       		.uleb128 0x1e
 6243 09cd CA010000 		.4byte	.LASF138
 6244 09d1 05       		.byte	0x5
 6245 09d2 23       		.byte	0x23
 6246 09d3 AB000000 		.4byte	0xab
 6247 09d7 05       		.uleb128 0x5
 6248 09d8 03       		.byte	0x3
 6249 09d9 00000000 		.4byte	flag_print_rf
 6250 09dd 1E       		.uleb128 0x1e
 6251 09de C6050000 		.4byte	.LASF139
 6252 09e2 05       		.byte	0x5
 6253 09e3 25       		.byte	0x25
 6254 09e4 AB000000 		.4byte	0xab
 6255 09e8 05       		.uleb128 0x5
 6256 09e9 03       		.byte	0x3
 6257 09ea 00000000 		.4byte	flag_receive_ADC
 6258 09ee 1E       		.uleb128 0x1e
 6259 09ef 5B060000 		.4byte	.LASF140
 6260 09f3 05       		.byte	0x5
 6261 09f4 26       		.byte	0x26
 6262 09f5 DB000000 		.4byte	0xdb
 6263 09f9 05       		.uleb128 0x5
 6264 09fa 03       		.byte	0x3
 6265 09fb 00000000 		.4byte	adc_result
 6266 09ff 1E       		.uleb128 0x1e
 6267 0a00 00000000 		.4byte	.LASF141
 6268 0a04 05       		.byte	0x5
 6269 0a05 28       		.byte	0x28
 6270 0a06 AB000000 		.4byte	0xab
 6271 0a0a 05       		.uleb128 0x5
 6272 0a0b 03       		.byte	0x3
 6273 0a0c 00000000 		.4byte	direction
 6274 0a10 1E       		.uleb128 0x1e
 6275 0a11 4C050000 		.4byte	.LASF142
 6276 0a15 05       		.byte	0x5
 6277 0a16 2B       		.byte	0x2b
 6278 0a17 AB000000 		.4byte	0xab
 6279 0a1b 05       		.uleb128 0x5
 6280 0a1c 03       		.byte	0x3
 6281 0a1d 00000000 		.4byte	BIN_ENABLED
 6282 0a21 1E       		.uleb128 0x1e
 6283 0a22 42040000 		.4byte	.LASF143
 6284 0a26 05       		.byte	0x5
 6285 0a27 2D       		.byte	0x2d
 6286 0a28 AB000000 		.4byte	0xab
 6287 0a2c 05       		.uleb128 0x5
 6288 0a2d 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 132


 6289 0a2e 00000000 		.4byte	BT_ENABLED
 6290 0a32 1E       		.uleb128 0x1e
 6291 0a33 70060000 		.4byte	.LASF144
 6292 0a37 05       		.byte	0x5
 6293 0a38 32       		.byte	0x32
 6294 0a39 AB000000 		.4byte	0xab
 6295 0a3d 05       		.uleb128 0x5
 6296 0a3e 03       		.byte	0x3
 6297 0a3f 00000000 		.4byte	flag_calc_wheelspeed
 6298 0a43 1E       		.uleb128 0x1e
 6299 0a44 4F010000 		.4byte	.LASF145
 6300 0a48 05       		.byte	0x5
 6301 0a49 33       		.byte	0x33
 6302 0a4a DB000000 		.4byte	0xdb
 6303 0a4e 05       		.uleb128 0x5
 6304 0a4f 03       		.byte	0x3
 6305 0a50 00000000 		.4byte	quad_count1
 6306 0a54 1E       		.uleb128 0x1e
 6307 0a55 5B010000 		.4byte	.LASF146
 6308 0a59 05       		.byte	0x5
 6309 0a5a 34       		.byte	0x34
 6310 0a5b DB000000 		.4byte	0xdb
 6311 0a5f 05       		.uleb128 0x5
 6312 0a60 03       		.byte	0x3
 6313 0a61 00000000 		.4byte	quad_count2
 6314 0a65 1E       		.uleb128 0x1e
 6315 0a66 7A080000 		.4byte	.LASF147
 6316 0a6a 05       		.byte	0x5
 6317 0a6b 35       		.byte	0x35
 6318 0a6c DB000000 		.4byte	0xdb
 6319 0a70 05       		.uleb128 0x5
 6320 0a71 03       		.byte	0x3
 6321 0a72 00000000 		.4byte	last_quad_count1
 6322 0a76 1E       		.uleb128 0x1e
 6323 0a77 8B080000 		.4byte	.LASF148
 6324 0a7b 05       		.byte	0x5
 6325 0a7c 36       		.byte	0x36
 6326 0a7d DB000000 		.4byte	0xdb
 6327 0a81 05       		.uleb128 0x5
 6328 0a82 03       		.byte	0x3
 6329 0a83 00000000 		.4byte	last_quad_count2
 6330 0a87 1E       		.uleb128 0x1e
 6331 0a88 7A000000 		.4byte	.LASF149
 6332 0a8c 05       		.byte	0x5
 6333 0a8d 37       		.byte	0x37
 6334 0a8e DB000000 		.4byte	0xdb
 6335 0a92 05       		.uleb128 0x5
 6336 0a93 03       		.byte	0x3
 6337 0a94 00000000 		.4byte	quad_diff1
 6338 0a98 1E       		.uleb128 0x1e
 6339 0a99 85000000 		.4byte	.LASF150
 6340 0a9d 05       		.byte	0x5
 6341 0a9e 38       		.byte	0x38
 6342 0a9f DB000000 		.4byte	0xdb
 6343 0aa3 05       		.uleb128 0x5
 6344 0aa4 03       		.byte	0x3
 6345 0aa5 00000000 		.4byte	quad_diff2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 133


 6346 0aa9 1E       		.uleb128 0x1e
 6347 0aaa D6060000 		.4byte	.LASF151
 6348 0aae 05       		.byte	0x5
 6349 0aaf 39       		.byte	0x39
 6350 0ab0 AB000000 		.4byte	0xab
 6351 0ab4 05       		.uleb128 0x5
 6352 0ab5 03       		.byte	0x3
 6353 0ab6 00000000 		.4byte	deadzone
 6354 0aba 1E       		.uleb128 0x1e
 6355 0abb AE000000 		.4byte	.LASF152
 6356 0abf 05       		.byte	0x5
 6357 0ac0 3C       		.byte	0x3c
 6358 0ac1 DB000000 		.4byte	0xdb
 6359 0ac5 05       		.uleb128 0x5
 6360 0ac6 03       		.byte	0x3
 6361 0ac7 00000000 		.4byte	start_turn_count
 6362 0acb 1E       		.uleb128 0x1e
 6363 0acc 01060000 		.4byte	.LASF153
 6364 0ad0 05       		.byte	0x5
 6365 0ad1 3F       		.byte	0x3f
 6366 0ad2 DB000000 		.4byte	0xdb
 6367 0ad6 05       		.uleb128 0x5
 6368 0ad7 03       		.byte	0x3
 6369 0ad8 00000000 		.4byte	left_duty_cycle
 6370 0adc 1E       		.uleb128 0x1e
 6371 0add 13090000 		.4byte	.LASF154
 6372 0ae1 05       		.byte	0x5
 6373 0ae2 40       		.byte	0x40
 6374 0ae3 DB000000 		.4byte	0xdb
 6375 0ae7 05       		.uleb128 0x5
 6376 0ae8 03       		.byte	0x3
 6377 0ae9 00000000 		.4byte	right_duty_cycle
 6378 0aed 1E       		.uleb128 0x1e
 6379 0aee DF060000 		.4byte	.LASF155
 6380 0af2 05       		.byte	0x5
 6381 0af3 43       		.byte	0x43
 6382 0af4 DB000000 		.4byte	0xdb
 6383 0af8 05       		.uleb128 0x5
 6384 0af9 03       		.byte	0x3
 6385 0afa 00000000 		.4byte	leftSpeedLimit
 6386 0afe 1E       		.uleb128 0x1e
 6387 0aff BB030000 		.4byte	.LASF156
 6388 0b03 05       		.byte	0x5
 6389 0b04 44       		.byte	0x44
 6390 0b05 DB000000 		.4byte	0xdb
 6391 0b09 05       		.uleb128 0x5
 6392 0b0a 03       		.byte	0x3
 6393 0b0b 00000000 		.4byte	rightSpeedLimit
 6394 0b0f 1E       		.uleb128 0x1e
 6395 0b10 6D070000 		.4byte	.LASF157
 6396 0b14 05       		.byte	0x5
 6397 0b15 47       		.byte	0x47
 6398 0b16 DB000000 		.4byte	0xdb
 6399 0b1a 05       		.uleb128 0x5
 6400 0b1b 03       		.byte	0x3
 6401 0b1c 00000000 		.4byte	target_distance_cm
 6402 0b20 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 134


 6403 0b21 1E070000 		.4byte	.LASF158
 6404 0b25 05       		.byte	0x5
 6405 0b26 49       		.byte	0x49
 6406 0b27 DB000000 		.4byte	0xdb
 6407 0b2b 05       		.uleb128 0x5
 6408 0b2c 03       		.byte	0x3
 6409 0b2d 00000000 		.4byte	accum_dist
 6410 0b31 1E       		.uleb128 0x1e
 6411 0b32 FA000000 		.4byte	.LASF159
 6412 0b36 05       		.byte	0x5
 6413 0b37 4A       		.byte	0x4a
 6414 0b38 DB000000 		.4byte	0xdb
 6415 0b3c 05       		.uleb128 0x5
 6416 0b3d 03       		.byte	0x3
 6417 0b3e 00000000 		.4byte	target_distance_quad
 6418 0b42 1E       		.uleb128 0x1e
 6419 0b43 0E080000 		.4byte	.LASF160
 6420 0b47 05       		.byte	0x5
 6421 0b48 4B       		.byte	0x4b
 6422 0b49 AB000000 		.4byte	0xab
 6423 0b4d 05       		.uleb128 0x5
 6424 0b4e 03       		.byte	0x3
 6425 0b4f 00000000 		.4byte	reached_target
 6426 0b53 1E       		.uleb128 0x1e
 6427 0b54 09070000 		.4byte	.LASF161
 6428 0b58 05       		.byte	0x5
 6429 0b59 4C       		.byte	0x4c
 6430 0b5a AB000000 		.4byte	0xab
 6431 0b5e 05       		.uleb128 0x5
 6432 0b5f 03       		.byte	0x3
 6433 0b60 00000000 		.4byte	overshot_target
 6434 0b64 1E       		.uleb128 0x1e
 6435 0b65 61070000 		.4byte	.LASF162
 6436 0b69 05       		.byte	0x5
 6437 0b6a 4D       		.byte	0x4d
 6438 0b6b E7000000 		.4byte	0xe7
 6439 0b6f 05       		.uleb128 0x5
 6440 0b70 03       		.byte	0x3
 6441 0b71 00000000 		.4byte	quad_per_cm
 6442 0b75 1E       		.uleb128 0x1e
 6443 0b76 53040000 		.4byte	.LASF163
 6444 0b7a 05       		.byte	0x5
 6445 0b7b 50       		.byte	0x50
 6446 0b7c AB000000 		.4byte	0xab
 6447 0b80 05       		.uleb128 0x5
 6448 0b81 03       		.byte	0x3
 6449 0b82 00000000 		.4byte	initial_pos_valid
 6450 0b86 1E       		.uleb128 0x1e
 6451 0b87 82090000 		.4byte	.LASF164
 6452 0b8b 05       		.byte	0x5
 6453 0b8c 51       		.byte	0x51
 6454 0b8d DB000000 		.4byte	0xdb
 6455 0b91 05       		.uleb128 0x5
 6456 0b92 03       		.byte	0x3
 6457 0b93 00000000 		.4byte	initial_x_pos
 6458 0b97 1E       		.uleb128 0x1e
 6459 0b98 3B060000 		.4byte	.LASF165
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 135


 6460 0b9c 05       		.byte	0x5
 6461 0b9d 52       		.byte	0x52
 6462 0b9e DB000000 		.4byte	0xdb
 6463 0ba2 05       		.uleb128 0x5
 6464 0ba3 03       		.byte	0x3
 6465 0ba4 00000000 		.4byte	initial_y_pos
 6466 0ba8 1E       		.uleb128 0x1e
 6467 0ba9 31080000 		.4byte	.LASF166
 6468 0bad 05       		.byte	0x5
 6469 0bae 55       		.byte	0x55
 6470 0baf AB000000 		.4byte	0xab
 6471 0bb3 05       		.uleb128 0x5
 6472 0bb4 03       		.byte	0x3
 6473 0bb5 00000000 		.4byte	brakeFlag
 6474 0bb9 1E       		.uleb128 0x1e
 6475 0bba D5020000 		.4byte	.LASF167
 6476 0bbe 05       		.byte	0x5
 6477 0bbf 56       		.byte	0x56
 6478 0bc0 AB000000 		.4byte	0xab
 6479 0bc4 05       		.uleb128 0x5
 6480 0bc5 03       		.byte	0x3
 6481 0bc6 00000000 		.4byte	portOpen
 6482 0bca 1E       		.uleb128 0x1e
 6483 0bcb A2000000 		.4byte	.LASF168
 6484 0bcf 05       		.byte	0x5
 6485 0bd0 59       		.byte	0x59
 6486 0bd1 DB000000 		.4byte	0xdb
 6487 0bd5 05       		.uleb128 0x5
 6488 0bd6 03       		.byte	0x3
 6489 0bd7 00000000 		.4byte	prevVoltage
 6490 0bdb 1E       		.uleb128 0x1e
 6491 0bdc 18010000 		.4byte	.LASF169
 6492 0be0 05       		.byte	0x5
 6493 0be1 5A       		.byte	0x5a
 6494 0be2 DB000000 		.4byte	0xdb
 6495 0be6 05       		.uleb128 0x5
 6496 0be7 03       		.byte	0x3
 6497 0be8 00000000 		.4byte	prevVoltage2
 6498 0bec 07       		.uleb128 0x7
 6499 0bed 8E000000 		.4byte	0x8e
 6500 0bf1 FC0B0000 		.4byte	0xbfc
 6501 0bf5 08       		.uleb128 0x8
 6502 0bf6 81000000 		.4byte	0x81
 6503 0bfa 3F       		.byte	0x3f
 6504 0bfb 00       		.byte	0
 6505 0bfc 1E       		.uleb128 0x1e
 6506 0bfd 6C080000 		.4byte	.LASF170
 6507 0c01 05       		.byte	0x5
 6508 0c02 60       		.byte	0x60
 6509 0c03 EC0B0000 		.4byte	0xbec
 6510 0c07 05       		.uleb128 0x5
 6511 0c08 03       		.byte	0x3
 6512 0c09 00000000 		.4byte	displaystring
 6513 0c0d 1E       		.uleb128 0x1e
 6514 0c0e 09080000 		.4byte	.LASF171
 6515 0c12 05       		.byte	0x5
 6516 0c13 61       		.byte	0x61
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 136


 6517 0c14 EC0B0000 		.4byte	0xbec
 6518 0c18 05       		.uleb128 0x5
 6519 0c19 03       		.byte	0x3
 6520 0c1a 00000000 		.4byte	line
 6521 0c1e 1E       		.uleb128 0x1e
 6522 0c1f EA070000 		.4byte	.LASF172
 6523 0c23 05       		.byte	0x5
 6524 0c24 61       		.byte	0x61
 6525 0c25 EC0B0000 		.4byte	0xbec
 6526 0c29 05       		.uleb128 0x5
 6527 0c2a 03       		.byte	0x3
 6528 0c2b 00000000 		.4byte	entry
 6529 0c2f 07       		.uleb128 0x7
 6530 0c30 AB000000 		.4byte	0xab
 6531 0c34 3F0C0000 		.4byte	0xc3f
 6532 0c38 08       		.uleb128 0x8
 6533 0c39 81000000 		.4byte	0x81
 6534 0c3d 3F       		.byte	0x3f
 6535 0c3e 00       		.byte	0
 6536 0c3f 1E       		.uleb128 0x1e
 6537 0c40 2D020000 		.4byte	.LASF173
 6538 0c44 05       		.byte	0x5
 6539 0c45 62       		.byte	0x62
 6540 0c46 2F0C0000 		.4byte	0xc2f
 6541 0c4a 05       		.uleb128 0x5
 6542 0c4b 03       		.byte	0x3
 6543 0c4c 00000000 		.4byte	usbBuffer
 6544 0c50 1E       		.uleb128 0x1e
 6545 0c51 73040000 		.4byte	.LASF174
 6546 0c55 05       		.byte	0x5
 6547 0c56 77       		.byte	0x77
 6548 0c57 86010000 		.4byte	0x186
 6549 0c5b 05       		.uleb128 0x5
 6550 0c5c 03       		.byte	0x3
 6551 0c5d 00000000 		.4byte	buffer_state
 6552 0c61 1E       		.uleb128 0x1e
 6553 0c62 E7000000 		.4byte	.LASF175
 6554 0c66 05       		.byte	0x5
 6555 0c67 78       		.byte	0x78
 6556 0c68 86010000 		.4byte	0x186
 6557 0c6c 05       		.uleb128 0x5
 6558 0c6d 03       		.byte	0x3
 6559 0c6e 00000000 		.4byte	system_state
 6560 0c72 1E       		.uleb128 0x1e
 6561 0c73 3B030000 		.4byte	.LASF176
 6562 0c77 05       		.byte	0x5
 6563 0c78 7A       		.byte	0x7a
 6564 0c79 0C010000 		.4byte	0x10c
 6565 0c7d 05       		.uleb128 0x5
 6566 0c7e 03       		.byte	0x3
 6567 0c7f 00000000 		.4byte	prev_movement_state
 6568 0c83 1E       		.uleb128 0x1e
 6569 0c84 D8010000 		.4byte	.LASF177
 6570 0c88 05       		.byte	0x5
 6571 0c89 7B       		.byte	0x7b
 6572 0c8a 0C010000 		.4byte	0x10c
 6573 0c8e 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 137


 6574 0c8f 03       		.byte	0x3
 6575 0c90 00000000 		.4byte	movement_state
 6576 0c94 1E       		.uleb128 0x1e
 6577 0c95 CC000000 		.4byte	.LASF178
 6578 0c99 05       		.byte	0x5
 6579 0c9a 7C       		.byte	0x7c
 6580 0c9b 49010000 		.4byte	0x149
 6581 0c9f 05       		.uleb128 0x5
 6582 0ca0 03       		.byte	0x3
 6583 0ca1 00000000 		.4byte	track_mode
 6584 0ca5 1E       		.uleb128 0x1e
 6585 0ca6 1B030000 		.4byte	.LASF179
 6586 0caa 05       		.byte	0x5
 6587 0cab 7E       		.byte	0x7e
 6588 0cac AB000000 		.4byte	0xab
 6589 0cb0 05       		.uleb128 0x5
 6590 0cb1 03       		.byte	0x3
 6591 0cb2 00000000 		.4byte	byteCount
 6592 0cb6 07       		.uleb128 0x7
 6593 0cb7 8E000000 		.4byte	0x8e
 6594 0cbb C60C0000 		.4byte	0xcc6
 6595 0cbf 08       		.uleb128 0x8
 6596 0cc0 81000000 		.4byte	0x81
 6597 0cc4 01       		.byte	0x1
 6598 0cc5 00       		.byte	0
 6599 0cc6 1E       		.uleb128 0x1e
 6600 0cc7 AF070000 		.4byte	.LASF180
 6601 0ccb 05       		.byte	0x5
 6602 0ccc 7F       		.byte	0x7f
 6603 0ccd B60C0000 		.4byte	0xcb6
 6604 0cd1 05       		.uleb128 0x5
 6605 0cd2 03       		.byte	0x3
 6606 0cd3 00000000 		.4byte	packet
 6607 0cd7 1E       		.uleb128 0x1e
 6608 0cd8 9B010000 		.4byte	.LASF181
 6609 0cdc 05       		.byte	0x5
 6610 0cdd 83       		.byte	0x83
 6611 0cde EE000000 		.4byte	0xee
 6612 0ce2 05       		.uleb128 0x5
 6613 0ce3 03       		.byte	0x3
 6614 0ce4 00000000 		.4byte	speed
 6615 0ce8 1E       		.uleb128 0x1e
 6616 0ce9 D6030000 		.4byte	.LASF182
 6617 0ced 01       		.byte	0x1
 6618 0cee 24       		.byte	0x24
 6619 0cef B7000000 		.4byte	0xb7
 6620 0cf3 05       		.uleb128 0x5
 6621 0cf4 03       		.byte	0x3
 6622 0cf5 00000000 		.4byte	instructionCount
 6623 0cf9 1E       		.uleb128 0x1e
 6624 0cfa 25010000 		.4byte	.LASF183
 6625 0cfe 01       		.byte	0x1
 6626 0cff 26       		.byte	0x26
 6627 0d00 A0000000 		.4byte	0xa0
 6628 0d04 05       		.uleb128 0x5
 6629 0d05 03       		.byte	0x3
 6630 0d06 00000000 		.4byte	sensorsDisabled
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 138


 6631 0d0a 07       		.uleb128 0x7
 6632 0d0b A0000000 		.4byte	0xa0
 6633 0d0f 200D0000 		.4byte	0xd20
 6634 0d13 08       		.uleb128 0x8
 6635 0d14 81000000 		.4byte	0x81
 6636 0d18 0E       		.byte	0xe
 6637 0d19 08       		.uleb128 0x8
 6638 0d1a 81000000 		.4byte	0x81
 6639 0d1e 12       		.byte	0x12
 6640 0d1f 00       		.byte	0
 6641 0d20 1D       		.uleb128 0x1d
 6642 0d21 6D617000 		.ascii	"map\000"
 6643 0d25 01       		.byte	0x1
 6644 0d26 2E       		.byte	0x2e
 6645 0d27 0A0D0000 		.4byte	0xd0a
 6646 0d2b 05       		.uleb128 0x5
 6647 0d2c 03       		.byte	0x3
 6648 0d2d 00000000 		.4byte	map
 6649 0d31 07       		.uleb128 0x7
 6650 0d32 A0000000 		.4byte	0xa0
 6651 0d36 470D0000 		.4byte	0xd47
 6652 0d3a 08       		.uleb128 0x8
 6653 0d3b 81000000 		.4byte	0x81
 6654 0d3f 05       		.byte	0x5
 6655 0d40 08       		.uleb128 0x8
 6656 0d41 81000000 		.4byte	0x81
 6657 0d45 01       		.byte	0x1
 6658 0d46 00       		.byte	0
 6659 0d47 1E       		.uleb128 0x1e
 6660 0d48 42050000 		.4byte	.LASF184
 6661 0d4c 01       		.byte	0x1
 6662 0d4d 43       		.byte	0x43
 6663 0d4e 310D0000 		.4byte	0xd31
 6664 0d52 05       		.uleb128 0x5
 6665 0d53 03       		.byte	0x3
 6666 0d54 00000000 		.4byte	food_list
 6667 0d58 07       		.uleb128 0x7
 6668 0d59 A0000000 		.4byte	0xa0
 6669 0d5d 6F0D0000 		.4byte	0xd6f
 6670 0d61 1F       		.uleb128 0x1f
 6671 0d62 81000000 		.4byte	0x81
 6672 0d66 1F03     		.2byte	0x31f
 6673 0d68 08       		.uleb128 0x8
 6674 0d69 81000000 		.4byte	0x81
 6675 0d6d 02       		.byte	0x2
 6676 0d6e 00       		.byte	0
 6677 0d6f 1E       		.uleb128 0x1e
 6678 0d70 1B040000 		.4byte	.LASF185
 6679 0d74 01       		.byte	0x1
 6680 0d75 2A       		.byte	0x2a
 6681 0d76 580D0000 		.4byte	0xd58
 6682 0d7a 05       		.uleb128 0x5
 6683 0d7b 03       		.byte	0x3
 6684 0d7c 00000000 		.4byte	path
 6685 0d80 1E       		.uleb128 0x1e
 6686 0d81 A4050000 		.4byte	.LASF186
 6687 0d85 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 139


 6688 0d86 2B       		.byte	0x2b
 6689 0d87 F5000000 		.4byte	0xf5
 6690 0d8b 05       		.uleb128 0x5
 6691 0d8c 03       		.byte	0x3
 6692 0d8d 00000000 		.4byte	start
 6693 0d91 1E       		.uleb128 0x1e
 6694 0d92 9C080000 		.4byte	.LASF187
 6695 0d96 01       		.byte	0x1
 6696 0d97 2C       		.byte	0x2c
 6697 0d98 F5000000 		.4byte	0xf5
 6698 0d9c 05       		.uleb128 0x5
 6699 0d9d 03       		.byte	0x3
 6700 0d9e 00000000 		.4byte	destination
 6701 0da2 1E       		.uleb128 0x1e
 6702 0da3 72010000 		.4byte	.LASF188
 6703 0da7 01       		.byte	0x1
 6704 0da8 28       		.byte	0x28
 6705 0da9 A0000000 		.4byte	0xa0
 6706 0dad 05       		.uleb128 0x5
 6707 0dae 03       		.byte	0x3
 6708 0daf 00000000 		.4byte	robot_direction
 6709 0db3 1E       		.uleb128 0x1e
 6710 0db4 0A000000 		.4byte	.LASF189
 6711 0db8 07       		.byte	0x7
 6712 0db9 22       		.byte	0x22
 6713 0dba A0000000 		.4byte	0xa0
 6714 0dbe 05       		.uleb128 0x5
 6715 0dbf 03       		.byte	0x3
 6716 0dc0 00000000 		.4byte	tracked_direction
 6717 0dc4 1E       		.uleb128 0x1e
 6718 0dc5 DE070000 		.4byte	.LASF190
 6719 0dc9 01       		.byte	0x1
 6720 0dca 45       		.byte	0x45
 6721 0dcb A0000000 		.4byte	0xa0
 6722 0dcf 05       		.uleb128 0x5
 6723 0dd0 03       		.byte	0x3
 6724 0dd1 00000000 		.4byte	food_length
 6725 0dd5 07       		.uleb128 0x7
 6726 0dd6 8E000000 		.4byte	0x8e
 6727 0dda E60D0000 		.4byte	0xde6
 6728 0dde 1F       		.uleb128 0x1f
 6729 0ddf 81000000 		.4byte	0x81
 6730 0de3 1F03     		.2byte	0x31f
 6731 0de5 00       		.byte	0
 6732 0de6 1E       		.uleb128 0x1e
 6733 0de7 73050000 		.4byte	.LASF191
 6734 0deb 01       		.byte	0x1
 6735 0dec 23       		.byte	0x23
 6736 0ded D50D0000 		.4byte	0xdd5
 6737 0df1 05       		.uleb128 0x5
 6738 0df2 03       		.byte	0x3
 6739 0df3 00000000 		.4byte	instructions
 6740 0df7 1E       		.uleb128 0x1e
 6741 0df8 B6070000 		.4byte	.LASF192
 6742 0dfc 01       		.byte	0x1
 6743 0dfd 25       		.byte	0x25
 6744 0dfe B7000000 		.4byte	0xb7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 140


 6745 0e02 05       		.uleb128 0x5
 6746 0e03 03       		.byte	0x3
 6747 0e04 00000000 		.4byte	instructionLength
 6748 0e08 20       		.uleb128 0x20
 6749 0e09 8D010000 		.4byte	.LASF193
 6750 0e0d 01       		.byte	0x1
 6751 0e0e C503     		.2byte	0x3c5
 6752 0e10 B7000000 		.4byte	0xb7
 6753 0e14 05       		.uleb128 0x5
 6754 0e15 03       		.byte	0x3
 6755 0e16 00000000 		.4byte	leftTurnCount
 6756 0e1a 20       		.uleb128 0x20
 6757 0e1b 61000000 		.4byte	.LASF194
 6758 0e1f 01       		.byte	0x1
 6759 0e20 C603     		.2byte	0x3c6
 6760 0e22 B7000000 		.4byte	0xb7
 6761 0e26 05       		.uleb128 0x5
 6762 0e27 03       		.byte	0x3
 6763 0e28 00000000 		.4byte	rightTurnCount
 6764 0e2c 00       		.byte	0
 6765              		.section	.debug_abbrev,"",%progbits
 6766              	.Ldebug_abbrev0:
 6767 0000 01       		.uleb128 0x1
 6768 0001 11       		.uleb128 0x11
 6769 0002 01       		.byte	0x1
 6770 0003 25       		.uleb128 0x25
 6771 0004 0E       		.uleb128 0xe
 6772 0005 13       		.uleb128 0x13
 6773 0006 0B       		.uleb128 0xb
 6774 0007 03       		.uleb128 0x3
 6775 0008 0E       		.uleb128 0xe
 6776 0009 1B       		.uleb128 0x1b
 6777 000a 0E       		.uleb128 0xe
 6778 000b 55       		.uleb128 0x55
 6779 000c 17       		.uleb128 0x17
 6780 000d 11       		.uleb128 0x11
 6781 000e 01       		.uleb128 0x1
 6782 000f 10       		.uleb128 0x10
 6783 0010 17       		.uleb128 0x17
 6784 0011 00       		.byte	0
 6785 0012 00       		.byte	0
 6786 0013 02       		.uleb128 0x2
 6787 0014 24       		.uleb128 0x24
 6788 0015 00       		.byte	0
 6789 0016 0B       		.uleb128 0xb
 6790 0017 0B       		.uleb128 0xb
 6791 0018 3E       		.uleb128 0x3e
 6792 0019 0B       		.uleb128 0xb
 6793 001a 03       		.uleb128 0x3
 6794 001b 0E       		.uleb128 0xe
 6795 001c 00       		.byte	0
 6796 001d 00       		.byte	0
 6797 001e 03       		.uleb128 0x3
 6798 001f 16       		.uleb128 0x16
 6799 0020 00       		.byte	0
 6800 0021 03       		.uleb128 0x3
 6801 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 141


 6802 0023 3A       		.uleb128 0x3a
 6803 0024 0B       		.uleb128 0xb
 6804 0025 3B       		.uleb128 0x3b
 6805 0026 0B       		.uleb128 0xb
 6806 0027 49       		.uleb128 0x49
 6807 0028 13       		.uleb128 0x13
 6808 0029 00       		.byte	0
 6809 002a 00       		.byte	0
 6810 002b 04       		.uleb128 0x4
 6811 002c 24       		.uleb128 0x24
 6812 002d 00       		.byte	0
 6813 002e 0B       		.uleb128 0xb
 6814 002f 0B       		.uleb128 0xb
 6815 0030 3E       		.uleb128 0x3e
 6816 0031 0B       		.uleb128 0xb
 6817 0032 03       		.uleb128 0x3
 6818 0033 08       		.uleb128 0x8
 6819 0034 00       		.byte	0
 6820 0035 00       		.byte	0
 6821 0036 05       		.uleb128 0x5
 6822 0037 0F       		.uleb128 0xf
 6823 0038 00       		.byte	0
 6824 0039 0B       		.uleb128 0xb
 6825 003a 0B       		.uleb128 0xb
 6826 003b 49       		.uleb128 0x49
 6827 003c 13       		.uleb128 0x13
 6828 003d 00       		.byte	0
 6829 003e 00       		.byte	0
 6830 003f 06       		.uleb128 0x6
 6831 0040 16       		.uleb128 0x16
 6832 0041 00       		.byte	0
 6833 0042 03       		.uleb128 0x3
 6834 0043 0E       		.uleb128 0xe
 6835 0044 3A       		.uleb128 0x3a
 6836 0045 0B       		.uleb128 0xb
 6837 0046 3B       		.uleb128 0x3b
 6838 0047 05       		.uleb128 0x5
 6839 0048 49       		.uleb128 0x49
 6840 0049 13       		.uleb128 0x13
 6841 004a 00       		.byte	0
 6842 004b 00       		.byte	0
 6843 004c 07       		.uleb128 0x7
 6844 004d 01       		.uleb128 0x1
 6845 004e 01       		.byte	0x1
 6846 004f 49       		.uleb128 0x49
 6847 0050 13       		.uleb128 0x13
 6848 0051 01       		.uleb128 0x1
 6849 0052 13       		.uleb128 0x13
 6850 0053 00       		.byte	0
 6851 0054 00       		.byte	0
 6852 0055 08       		.uleb128 0x8
 6853 0056 21       		.uleb128 0x21
 6854 0057 00       		.byte	0
 6855 0058 49       		.uleb128 0x49
 6856 0059 13       		.uleb128 0x13
 6857 005a 2F       		.uleb128 0x2f
 6858 005b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 142


 6859 005c 00       		.byte	0
 6860 005d 00       		.byte	0
 6861 005e 09       		.uleb128 0x9
 6862 005f 04       		.uleb128 0x4
 6863 0060 01       		.byte	0x1
 6864 0061 03       		.uleb128 0x3
 6865 0062 0E       		.uleb128 0xe
 6866 0063 0B       		.uleb128 0xb
 6867 0064 0B       		.uleb128 0xb
 6868 0065 3A       		.uleb128 0x3a
 6869 0066 0B       		.uleb128 0xb
 6870 0067 3B       		.uleb128 0x3b
 6871 0068 0B       		.uleb128 0xb
 6872 0069 01       		.uleb128 0x1
 6873 006a 13       		.uleb128 0x13
 6874 006b 00       		.byte	0
 6875 006c 00       		.byte	0
 6876 006d 0A       		.uleb128 0xa
 6877 006e 28       		.uleb128 0x28
 6878 006f 00       		.byte	0
 6879 0070 03       		.uleb128 0x3
 6880 0071 0E       		.uleb128 0xe
 6881 0072 1C       		.uleb128 0x1c
 6882 0073 0D       		.uleb128 0xd
 6883 0074 00       		.byte	0
 6884 0075 00       		.byte	0
 6885 0076 0B       		.uleb128 0xb
 6886 0077 13       		.uleb128 0x13
 6887 0078 01       		.byte	0x1
 6888 0079 03       		.uleb128 0x3
 6889 007a 0E       		.uleb128 0xe
 6890 007b 0B       		.uleb128 0xb
 6891 007c 0B       		.uleb128 0xb
 6892 007d 3A       		.uleb128 0x3a
 6893 007e 0B       		.uleb128 0xb
 6894 007f 3B       		.uleb128 0x3b
 6895 0080 0B       		.uleb128 0xb
 6896 0081 01       		.uleb128 0x1
 6897 0082 13       		.uleb128 0x13
 6898 0083 00       		.byte	0
 6899 0084 00       		.byte	0
 6900 0085 0C       		.uleb128 0xc
 6901 0086 0D       		.uleb128 0xd
 6902 0087 00       		.byte	0
 6903 0088 03       		.uleb128 0x3
 6904 0089 0E       		.uleb128 0xe
 6905 008a 3A       		.uleb128 0x3a
 6906 008b 0B       		.uleb128 0xb
 6907 008c 3B       		.uleb128 0x3b
 6908 008d 0B       		.uleb128 0xb
 6909 008e 49       		.uleb128 0x49
 6910 008f 13       		.uleb128 0x13
 6911 0090 38       		.uleb128 0x38
 6912 0091 0B       		.uleb128 0xb
 6913 0092 00       		.byte	0
 6914 0093 00       		.byte	0
 6915 0094 0D       		.uleb128 0xd
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 143


 6916 0095 2E       		.uleb128 0x2e
 6917 0096 00       		.byte	0
 6918 0097 3F       		.uleb128 0x3f
 6919 0098 19       		.uleb128 0x19
 6920 0099 03       		.uleb128 0x3
 6921 009a 0E       		.uleb128 0xe
 6922 009b 3A       		.uleb128 0x3a
 6923 009c 0B       		.uleb128 0xb
 6924 009d 3B       		.uleb128 0x3b
 6925 009e 0B       		.uleb128 0xb
 6926 009f 27       		.uleb128 0x27
 6927 00a0 19       		.uleb128 0x19
 6928 00a1 11       		.uleb128 0x11
 6929 00a2 01       		.uleb128 0x1
 6930 00a3 12       		.uleb128 0x12
 6931 00a4 06       		.uleb128 0x6
 6932 00a5 40       		.uleb128 0x40
 6933 00a6 18       		.uleb128 0x18
 6934 00a7 9742     		.uleb128 0x2117
 6935 00a9 19       		.uleb128 0x19
 6936 00aa 00       		.byte	0
 6937 00ab 00       		.byte	0
 6938 00ac 0E       		.uleb128 0xe
 6939 00ad 2E       		.uleb128 0x2e
 6940 00ae 00       		.byte	0
 6941 00af 3F       		.uleb128 0x3f
 6942 00b0 19       		.uleb128 0x19
 6943 00b1 03       		.uleb128 0x3
 6944 00b2 0E       		.uleb128 0xe
 6945 00b3 3A       		.uleb128 0x3a
 6946 00b4 0B       		.uleb128 0xb
 6947 00b5 3B       		.uleb128 0x3b
 6948 00b6 0B       		.uleb128 0xb
 6949 00b7 27       		.uleb128 0x27
 6950 00b8 19       		.uleb128 0x19
 6951 00b9 11       		.uleb128 0x11
 6952 00ba 01       		.uleb128 0x1
 6953 00bb 12       		.uleb128 0x12
 6954 00bc 06       		.uleb128 0x6
 6955 00bd 40       		.uleb128 0x40
 6956 00be 18       		.uleb128 0x18
 6957 00bf 9642     		.uleb128 0x2116
 6958 00c1 19       		.uleb128 0x19
 6959 00c2 00       		.byte	0
 6960 00c3 00       		.byte	0
 6961 00c4 0F       		.uleb128 0xf
 6962 00c5 2E       		.uleb128 0x2e
 6963 00c6 01       		.byte	0x1
 6964 00c7 3F       		.uleb128 0x3f
 6965 00c8 19       		.uleb128 0x19
 6966 00c9 03       		.uleb128 0x3
 6967 00ca 0E       		.uleb128 0xe
 6968 00cb 3A       		.uleb128 0x3a
 6969 00cc 0B       		.uleb128 0xb
 6970 00cd 3B       		.uleb128 0x3b
 6971 00ce 0B       		.uleb128 0xb
 6972 00cf 49       		.uleb128 0x49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 144


 6973 00d0 13       		.uleb128 0x13
 6974 00d1 11       		.uleb128 0x11
 6975 00d2 01       		.uleb128 0x1
 6976 00d3 12       		.uleb128 0x12
 6977 00d4 06       		.uleb128 0x6
 6978 00d5 40       		.uleb128 0x40
 6979 00d6 18       		.uleb128 0x18
 6980 00d7 9642     		.uleb128 0x2116
 6981 00d9 19       		.uleb128 0x19
 6982 00da 01       		.uleb128 0x1
 6983 00db 13       		.uleb128 0x13
 6984 00dc 00       		.byte	0
 6985 00dd 00       		.byte	0
 6986 00de 10       		.uleb128 0x10
 6987 00df 34       		.uleb128 0x34
 6988 00e0 00       		.byte	0
 6989 00e1 03       		.uleb128 0x3
 6990 00e2 0E       		.uleb128 0xe
 6991 00e3 3A       		.uleb128 0x3a
 6992 00e4 0B       		.uleb128 0xb
 6993 00e5 3B       		.uleb128 0x3b
 6994 00e6 05       		.uleb128 0x5
 6995 00e7 49       		.uleb128 0x49
 6996 00e8 13       		.uleb128 0x13
 6997 00e9 02       		.uleb128 0x2
 6998 00ea 18       		.uleb128 0x18
 6999 00eb 00       		.byte	0
 7000 00ec 00       		.byte	0
 7001 00ed 11       		.uleb128 0x11
 7002 00ee 0B       		.uleb128 0xb
 7003 00ef 01       		.byte	0x1
 7004 00f0 11       		.uleb128 0x11
 7005 00f1 01       		.uleb128 0x1
 7006 00f2 12       		.uleb128 0x12
 7007 00f3 06       		.uleb128 0x6
 7008 00f4 00       		.byte	0
 7009 00f5 00       		.byte	0
 7010 00f6 12       		.uleb128 0x12
 7011 00f7 0B       		.uleb128 0xb
 7012 00f8 01       		.byte	0x1
 7013 00f9 11       		.uleb128 0x11
 7014 00fa 01       		.uleb128 0x1
 7015 00fb 12       		.uleb128 0x12
 7016 00fc 06       		.uleb128 0x6
 7017 00fd 01       		.uleb128 0x1
 7018 00fe 13       		.uleb128 0x13
 7019 00ff 00       		.byte	0
 7020 0100 00       		.byte	0
 7021 0101 13       		.uleb128 0x13
 7022 0102 34       		.uleb128 0x34
 7023 0103 00       		.byte	0
 7024 0104 03       		.uleb128 0x3
 7025 0105 08       		.uleb128 0x8
 7026 0106 3A       		.uleb128 0x3a
 7027 0107 0B       		.uleb128 0xb
 7028 0108 3B       		.uleb128 0x3b
 7029 0109 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 145


 7030 010a 49       		.uleb128 0x49
 7031 010b 13       		.uleb128 0x13
 7032 010c 02       		.uleb128 0x2
 7033 010d 18       		.uleb128 0x18
 7034 010e 00       		.byte	0
 7035 010f 00       		.byte	0
 7036 0110 14       		.uleb128 0x14
 7037 0111 2E       		.uleb128 0x2e
 7038 0112 01       		.byte	0x1
 7039 0113 3F       		.uleb128 0x3f
 7040 0114 19       		.uleb128 0x19
 7041 0115 03       		.uleb128 0x3
 7042 0116 0E       		.uleb128 0xe
 7043 0117 3A       		.uleb128 0x3a
 7044 0118 0B       		.uleb128 0xb
 7045 0119 3B       		.uleb128 0x3b
 7046 011a 05       		.uleb128 0x5
 7047 011b 11       		.uleb128 0x11
 7048 011c 01       		.uleb128 0x1
 7049 011d 12       		.uleb128 0x12
 7050 011e 06       		.uleb128 0x6
 7051 011f 40       		.uleb128 0x40
 7052 0120 18       		.uleb128 0x18
 7053 0121 9742     		.uleb128 0x2117
 7054 0123 19       		.uleb128 0x19
 7055 0124 01       		.uleb128 0x1
 7056 0125 13       		.uleb128 0x13
 7057 0126 00       		.byte	0
 7058 0127 00       		.byte	0
 7059 0128 15       		.uleb128 0x15
 7060 0129 2E       		.uleb128 0x2e
 7061 012a 01       		.byte	0x1
 7062 012b 3F       		.uleb128 0x3f
 7063 012c 19       		.uleb128 0x19
 7064 012d 03       		.uleb128 0x3
 7065 012e 0E       		.uleb128 0xe
 7066 012f 3A       		.uleb128 0x3a
 7067 0130 0B       		.uleb128 0xb
 7068 0131 3B       		.uleb128 0x3b
 7069 0132 05       		.uleb128 0x5
 7070 0133 27       		.uleb128 0x27
 7071 0134 19       		.uleb128 0x19
 7072 0135 11       		.uleb128 0x11
 7073 0136 01       		.uleb128 0x1
 7074 0137 12       		.uleb128 0x12
 7075 0138 06       		.uleb128 0x6
 7076 0139 40       		.uleb128 0x40
 7077 013a 18       		.uleb128 0x18
 7078 013b 9642     		.uleb128 0x2116
 7079 013d 19       		.uleb128 0x19
 7080 013e 01       		.uleb128 0x1
 7081 013f 13       		.uleb128 0x13
 7082 0140 00       		.byte	0
 7083 0141 00       		.byte	0
 7084 0142 16       		.uleb128 0x16
 7085 0143 05       		.uleb128 0x5
 7086 0144 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 146


 7087 0145 03       		.uleb128 0x3
 7088 0146 08       		.uleb128 0x8
 7089 0147 3A       		.uleb128 0x3a
 7090 0148 0B       		.uleb128 0xb
 7091 0149 3B       		.uleb128 0x3b
 7092 014a 05       		.uleb128 0x5
 7093 014b 49       		.uleb128 0x49
 7094 014c 13       		.uleb128 0x13
 7095 014d 02       		.uleb128 0x2
 7096 014e 18       		.uleb128 0x18
 7097 014f 00       		.byte	0
 7098 0150 00       		.byte	0
 7099 0151 17       		.uleb128 0x17
 7100 0152 2E       		.uleb128 0x2e
 7101 0153 01       		.byte	0x1
 7102 0154 3F       		.uleb128 0x3f
 7103 0155 19       		.uleb128 0x19
 7104 0156 03       		.uleb128 0x3
 7105 0157 0E       		.uleb128 0xe
 7106 0158 3A       		.uleb128 0x3a
 7107 0159 0B       		.uleb128 0xb
 7108 015a 3B       		.uleb128 0x3b
 7109 015b 05       		.uleb128 0x5
 7110 015c 11       		.uleb128 0x11
 7111 015d 01       		.uleb128 0x1
 7112 015e 12       		.uleb128 0x12
 7113 015f 06       		.uleb128 0x6
 7114 0160 40       		.uleb128 0x40
 7115 0161 18       		.uleb128 0x18
 7116 0162 9642     		.uleb128 0x2116
 7117 0164 19       		.uleb128 0x19
 7118 0165 01       		.uleb128 0x1
 7119 0166 13       		.uleb128 0x13
 7120 0167 00       		.byte	0
 7121 0168 00       		.byte	0
 7122 0169 18       		.uleb128 0x18
 7123 016a 05       		.uleb128 0x5
 7124 016b 00       		.byte	0
 7125 016c 03       		.uleb128 0x3
 7126 016d 0E       		.uleb128 0xe
 7127 016e 3A       		.uleb128 0x3a
 7128 016f 0B       		.uleb128 0xb
 7129 0170 3B       		.uleb128 0x3b
 7130 0171 05       		.uleb128 0x5
 7131 0172 49       		.uleb128 0x49
 7132 0173 13       		.uleb128 0x13
 7133 0174 02       		.uleb128 0x2
 7134 0175 18       		.uleb128 0x18
 7135 0176 00       		.byte	0
 7136 0177 00       		.byte	0
 7137 0178 19       		.uleb128 0x19
 7138 0179 2E       		.uleb128 0x2e
 7139 017a 00       		.byte	0
 7140 017b 3F       		.uleb128 0x3f
 7141 017c 19       		.uleb128 0x19
 7142 017d 03       		.uleb128 0x3
 7143 017e 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 147


 7144 017f 3A       		.uleb128 0x3a
 7145 0180 0B       		.uleb128 0xb
 7146 0181 3B       		.uleb128 0x3b
 7147 0182 05       		.uleb128 0x5
 7148 0183 11       		.uleb128 0x11
 7149 0184 01       		.uleb128 0x1
 7150 0185 12       		.uleb128 0x12
 7151 0186 06       		.uleb128 0x6
 7152 0187 40       		.uleb128 0x40
 7153 0188 18       		.uleb128 0x18
 7154 0189 9642     		.uleb128 0x2116
 7155 018b 19       		.uleb128 0x19
 7156 018c 00       		.byte	0
 7157 018d 00       		.byte	0
 7158 018e 1A       		.uleb128 0x1a
 7159 018f 2E       		.uleb128 0x2e
 7160 0190 00       		.byte	0
 7161 0191 3F       		.uleb128 0x3f
 7162 0192 19       		.uleb128 0x19
 7163 0193 03       		.uleb128 0x3
 7164 0194 0E       		.uleb128 0xe
 7165 0195 3A       		.uleb128 0x3a
 7166 0196 0B       		.uleb128 0xb
 7167 0197 3B       		.uleb128 0x3b
 7168 0198 05       		.uleb128 0x5
 7169 0199 11       		.uleb128 0x11
 7170 019a 01       		.uleb128 0x1
 7171 019b 12       		.uleb128 0x12
 7172 019c 06       		.uleb128 0x6
 7173 019d 40       		.uleb128 0x40
 7174 019e 18       		.uleb128 0x18
 7175 019f 9742     		.uleb128 0x2117
 7176 01a1 19       		.uleb128 0x19
 7177 01a2 00       		.byte	0
 7178 01a3 00       		.byte	0
 7179 01a4 1B       		.uleb128 0x1b
 7180 01a5 34       		.uleb128 0x34
 7181 01a6 00       		.byte	0
 7182 01a7 03       		.uleb128 0x3
 7183 01a8 0E       		.uleb128 0xe
 7184 01a9 3A       		.uleb128 0x3a
 7185 01aa 0B       		.uleb128 0xb
 7186 01ab 3B       		.uleb128 0x3b
 7187 01ac 05       		.uleb128 0x5
 7188 01ad 49       		.uleb128 0x49
 7189 01ae 13       		.uleb128 0x13
 7190 01af 3F       		.uleb128 0x3f
 7191 01b0 19       		.uleb128 0x19
 7192 01b1 3C       		.uleb128 0x3c
 7193 01b2 19       		.uleb128 0x19
 7194 01b3 00       		.byte	0
 7195 01b4 00       		.byte	0
 7196 01b5 1C       		.uleb128 0x1c
 7197 01b6 35       		.uleb128 0x35
 7198 01b7 00       		.byte	0
 7199 01b8 49       		.uleb128 0x49
 7200 01b9 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 148


 7201 01ba 00       		.byte	0
 7202 01bb 00       		.byte	0
 7203 01bc 1D       		.uleb128 0x1d
 7204 01bd 34       		.uleb128 0x34
 7205 01be 00       		.byte	0
 7206 01bf 03       		.uleb128 0x3
 7207 01c0 08       		.uleb128 0x8
 7208 01c1 3A       		.uleb128 0x3a
 7209 01c2 0B       		.uleb128 0xb
 7210 01c3 3B       		.uleb128 0x3b
 7211 01c4 0B       		.uleb128 0xb
 7212 01c5 49       		.uleb128 0x49
 7213 01c6 13       		.uleb128 0x13
 7214 01c7 3F       		.uleb128 0x3f
 7215 01c8 19       		.uleb128 0x19
 7216 01c9 02       		.uleb128 0x2
 7217 01ca 18       		.uleb128 0x18
 7218 01cb 00       		.byte	0
 7219 01cc 00       		.byte	0
 7220 01cd 1E       		.uleb128 0x1e
 7221 01ce 34       		.uleb128 0x34
 7222 01cf 00       		.byte	0
 7223 01d0 03       		.uleb128 0x3
 7224 01d1 0E       		.uleb128 0xe
 7225 01d2 3A       		.uleb128 0x3a
 7226 01d3 0B       		.uleb128 0xb
 7227 01d4 3B       		.uleb128 0x3b
 7228 01d5 0B       		.uleb128 0xb
 7229 01d6 49       		.uleb128 0x49
 7230 01d7 13       		.uleb128 0x13
 7231 01d8 3F       		.uleb128 0x3f
 7232 01d9 19       		.uleb128 0x19
 7233 01da 02       		.uleb128 0x2
 7234 01db 18       		.uleb128 0x18
 7235 01dc 00       		.byte	0
 7236 01dd 00       		.byte	0
 7237 01de 1F       		.uleb128 0x1f
 7238 01df 21       		.uleb128 0x21
 7239 01e0 00       		.byte	0
 7240 01e1 49       		.uleb128 0x49
 7241 01e2 13       		.uleb128 0x13
 7242 01e3 2F       		.uleb128 0x2f
 7243 01e4 05       		.uleb128 0x5
 7244 01e5 00       		.byte	0
 7245 01e6 00       		.byte	0
 7246 01e7 20       		.uleb128 0x20
 7247 01e8 34       		.uleb128 0x34
 7248 01e9 00       		.byte	0
 7249 01ea 03       		.uleb128 0x3
 7250 01eb 0E       		.uleb128 0xe
 7251 01ec 3A       		.uleb128 0x3a
 7252 01ed 0B       		.uleb128 0xb
 7253 01ee 3B       		.uleb128 0x3b
 7254 01ef 05       		.uleb128 0x5
 7255 01f0 49       		.uleb128 0x49
 7256 01f1 13       		.uleb128 0x13
 7257 01f2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 149


 7258 01f3 19       		.uleb128 0x19
 7259 01f4 02       		.uleb128 0x2
 7260 01f5 18       		.uleb128 0x18
 7261 01f6 00       		.byte	0
 7262 01f7 00       		.byte	0
 7263 01f8 00       		.byte	0
 7264              		.section	.debug_aranges,"",%progbits
 7265 0000 6C010000 		.4byte	0x16c
 7266 0004 0200     		.2byte	0x2
 7267 0006 00000000 		.4byte	.Ldebug_info0
 7268 000a 04       		.byte	0x4
 7269 000b 00       		.byte	0
 7270 000c 0000     		.2byte	0
 7271 000e 0000     		.2byte	0
 7272 0010 00000000 		.4byte	.LFB63
 7273 0014 0C000000 		.4byte	.LFE63-.LFB63
 7274 0018 00000000 		.4byte	.LFB64
 7275 001c 2C000000 		.4byte	.LFE64-.LFB64
 7276 0020 00000000 		.4byte	.LFB65
 7277 0024 9C010000 		.4byte	.LFE65-.LFB65
 7278 0028 00000000 		.4byte	.LFB66
 7279 002c AC000000 		.4byte	.LFE66-.LFB66
 7280 0030 00000000 		.4byte	.LFB67
 7281 0034 20000000 		.4byte	.LFE67-.LFB67
 7282 0038 00000000 		.4byte	.LFB68
 7283 003c 28000000 		.4byte	.LFE68-.LFB68
 7284 0040 00000000 		.4byte	.LFB69
 7285 0044 0A000000 		.4byte	.LFE69-.LFB69
 7286 0048 00000000 		.4byte	.LFB70
 7287 004c 28000000 		.4byte	.LFE70-.LFB70
 7288 0050 00000000 		.4byte	.LFB71
 7289 0054 DC060000 		.4byte	.LFE71-.LFB71
 7290 0058 00000000 		.4byte	.LFB72
 7291 005c 60010000 		.4byte	.LFE72-.LFB72
 7292 0060 00000000 		.4byte	.LFB73
 7293 0064 18000000 		.4byte	.LFE73-.LFB73
 7294 0068 00000000 		.4byte	.LFB74
 7295 006c 18000000 		.4byte	.LFE74-.LFB74
 7296 0070 00000000 		.4byte	.LFB75
 7297 0074 54000000 		.4byte	.LFE75-.LFB75
 7298 0078 00000000 		.4byte	.LFB76
 7299 007c F4000000 		.4byte	.LFE76-.LFB76
 7300 0080 00000000 		.4byte	.LFB77
 7301 0084 18000000 		.4byte	.LFE77-.LFB77
 7302 0088 00000000 		.4byte	.LFB78
 7303 008c 18000000 		.4byte	.LFE78-.LFB78
 7304 0090 00000000 		.4byte	.LFB79
 7305 0094 22000000 		.4byte	.LFE79-.LFB79
 7306 0098 00000000 		.4byte	.LFB80
 7307 009c 1C000000 		.4byte	.LFE80-.LFB80
 7308 00a0 00000000 		.4byte	.LFB81
 7309 00a4 28000000 		.4byte	.LFE81-.LFB81
 7310 00a8 00000000 		.4byte	.LFB82
 7311 00ac 2C000000 		.4byte	.LFE82-.LFB82
 7312 00b0 00000000 		.4byte	.LFB83
 7313 00b4 44000000 		.4byte	.LFE83-.LFB83
 7314 00b8 00000000 		.4byte	.LFB84
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 150


 7315 00bc 38000000 		.4byte	.LFE84-.LFB84
 7316 00c0 00000000 		.4byte	.LFB85
 7317 00c4 38000000 		.4byte	.LFE85-.LFB85
 7318 00c8 00000000 		.4byte	.LFB86
 7319 00cc 38000000 		.4byte	.LFE86-.LFB86
 7320 00d0 00000000 		.4byte	.LFB87
 7321 00d4 14000000 		.4byte	.LFE87-.LFB87
 7322 00d8 00000000 		.4byte	.LFB88
 7323 00dc 18000000 		.4byte	.LFE88-.LFB88
 7324 00e0 00000000 		.4byte	.LFB89
 7325 00e4 18000000 		.4byte	.LFE89-.LFB89
 7326 00e8 00000000 		.4byte	.LFB90
 7327 00ec 18000000 		.4byte	.LFE90-.LFB90
 7328 00f0 00000000 		.4byte	.LFB91
 7329 00f4 18000000 		.4byte	.LFE91-.LFB91
 7330 00f8 00000000 		.4byte	.LFB92
 7331 00fc B8000000 		.4byte	.LFE92-.LFB92
 7332 0100 00000000 		.4byte	.LFB93
 7333 0104 28030000 		.4byte	.LFE93-.LFB93
 7334 0108 00000000 		.4byte	.LFB94
 7335 010c 40000000 		.4byte	.LFE94-.LFB94
 7336 0110 00000000 		.4byte	.LFB95
 7337 0114 40000000 		.4byte	.LFE95-.LFB95
 7338 0118 00000000 		.4byte	.LFB96
 7339 011c 30020000 		.4byte	.LFE96-.LFB96
 7340 0120 00000000 		.4byte	.LFB97
 7341 0124 0C000000 		.4byte	.LFE97-.LFB97
 7342 0128 00000000 		.4byte	.LFB98
 7343 012c 4C010000 		.4byte	.LFE98-.LFB98
 7344 0130 00000000 		.4byte	.LFB99
 7345 0134 0C000000 		.4byte	.LFE99-.LFB99
 7346 0138 00000000 		.4byte	.LFB100
 7347 013c C0000000 		.4byte	.LFE100-.LFB100
 7348 0140 00000000 		.4byte	.LFB101
 7349 0144 B8000000 		.4byte	.LFE101-.LFB101
 7350 0148 00000000 		.4byte	.LFB102
 7351 014c 4A000000 		.4byte	.LFE102-.LFB102
 7352 0150 00000000 		.4byte	.LFB103
 7353 0154 68000000 		.4byte	.LFE103-.LFB103
 7354 0158 00000000 		.4byte	.LFB104
 7355 015c 50000000 		.4byte	.LFE104-.LFB104
 7356 0160 00000000 		.4byte	.LFB105
 7357 0164 0C000000 		.4byte	.LFE105-.LFB105
 7358 0168 00000000 		.4byte	0
 7359 016c 00000000 		.4byte	0
 7360              		.section	.debug_ranges,"",%progbits
 7361              	.Ldebug_ranges0:
 7362 0000 00000000 		.4byte	.LFB63
 7363 0004 0C000000 		.4byte	.LFE63
 7364 0008 00000000 		.4byte	.LFB64
 7365 000c 2C000000 		.4byte	.LFE64
 7366 0010 00000000 		.4byte	.LFB65
 7367 0014 9C010000 		.4byte	.LFE65
 7368 0018 00000000 		.4byte	.LFB66
 7369 001c AC000000 		.4byte	.LFE66
 7370 0020 00000000 		.4byte	.LFB67
 7371 0024 20000000 		.4byte	.LFE67
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 151


 7372 0028 00000000 		.4byte	.LFB68
 7373 002c 28000000 		.4byte	.LFE68
 7374 0030 00000000 		.4byte	.LFB69
 7375 0034 0A000000 		.4byte	.LFE69
 7376 0038 00000000 		.4byte	.LFB70
 7377 003c 28000000 		.4byte	.LFE70
 7378 0040 00000000 		.4byte	.LFB71
 7379 0044 DC060000 		.4byte	.LFE71
 7380 0048 00000000 		.4byte	.LFB72
 7381 004c 60010000 		.4byte	.LFE72
 7382 0050 00000000 		.4byte	.LFB73
 7383 0054 18000000 		.4byte	.LFE73
 7384 0058 00000000 		.4byte	.LFB74
 7385 005c 18000000 		.4byte	.LFE74
 7386 0060 00000000 		.4byte	.LFB75
 7387 0064 54000000 		.4byte	.LFE75
 7388 0068 00000000 		.4byte	.LFB76
 7389 006c F4000000 		.4byte	.LFE76
 7390 0070 00000000 		.4byte	.LFB77
 7391 0074 18000000 		.4byte	.LFE77
 7392 0078 00000000 		.4byte	.LFB78
 7393 007c 18000000 		.4byte	.LFE78
 7394 0080 00000000 		.4byte	.LFB79
 7395 0084 22000000 		.4byte	.LFE79
 7396 0088 00000000 		.4byte	.LFB80
 7397 008c 1C000000 		.4byte	.LFE80
 7398 0090 00000000 		.4byte	.LFB81
 7399 0094 28000000 		.4byte	.LFE81
 7400 0098 00000000 		.4byte	.LFB82
 7401 009c 2C000000 		.4byte	.LFE82
 7402 00a0 00000000 		.4byte	.LFB83
 7403 00a4 44000000 		.4byte	.LFE83
 7404 00a8 00000000 		.4byte	.LFB84
 7405 00ac 38000000 		.4byte	.LFE84
 7406 00b0 00000000 		.4byte	.LFB85
 7407 00b4 38000000 		.4byte	.LFE85
 7408 00b8 00000000 		.4byte	.LFB86
 7409 00bc 38000000 		.4byte	.LFE86
 7410 00c0 00000000 		.4byte	.LFB87
 7411 00c4 14000000 		.4byte	.LFE87
 7412 00c8 00000000 		.4byte	.LFB88
 7413 00cc 18000000 		.4byte	.LFE88
 7414 00d0 00000000 		.4byte	.LFB89
 7415 00d4 18000000 		.4byte	.LFE89
 7416 00d8 00000000 		.4byte	.LFB90
 7417 00dc 18000000 		.4byte	.LFE90
 7418 00e0 00000000 		.4byte	.LFB91
 7419 00e4 18000000 		.4byte	.LFE91
 7420 00e8 00000000 		.4byte	.LFB92
 7421 00ec B8000000 		.4byte	.LFE92
 7422 00f0 00000000 		.4byte	.LFB93
 7423 00f4 28030000 		.4byte	.LFE93
 7424 00f8 00000000 		.4byte	.LFB94
 7425 00fc 40000000 		.4byte	.LFE94
 7426 0100 00000000 		.4byte	.LFB95
 7427 0104 40000000 		.4byte	.LFE95
 7428 0108 00000000 		.4byte	.LFB96
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 152


 7429 010c 30020000 		.4byte	.LFE96
 7430 0110 00000000 		.4byte	.LFB97
 7431 0114 0C000000 		.4byte	.LFE97
 7432 0118 00000000 		.4byte	.LFB98
 7433 011c 4C010000 		.4byte	.LFE98
 7434 0120 00000000 		.4byte	.LFB99
 7435 0124 0C000000 		.4byte	.LFE99
 7436 0128 00000000 		.4byte	.LFB100
 7437 012c C0000000 		.4byte	.LFE100
 7438 0130 00000000 		.4byte	.LFB101
 7439 0134 B8000000 		.4byte	.LFE101
 7440 0138 00000000 		.4byte	.LFB102
 7441 013c 4A000000 		.4byte	.LFE102
 7442 0140 00000000 		.4byte	.LFB103
 7443 0144 68000000 		.4byte	.LFE103
 7444 0148 00000000 		.4byte	.LFB104
 7445 014c 50000000 		.4byte	.LFE104
 7446 0150 00000000 		.4byte	.LFB105
 7447 0154 0C000000 		.4byte	.LFE105
 7448 0158 00000000 		.4byte	0
 7449 015c 00000000 		.4byte	0
 7450              		.section	.debug_line,"",%progbits
 7451              	.Ldebug_line0:
 7452 0000 7D070000 		.section	.debug_str,"MS",%progbits,1
 7452      02006701 
 7452      00000201 
 7452      FB0E0D00 
 7452      01010101 
 7453              	.LASF141:
 7454 0000 64697265 		.ascii	"direction\000"
 7454      6374696F 
 7454      6E00
 7455              	.LASF189:
 7456 000a 74726163 		.ascii	"tracked_direction\000"
 7456      6B65645F 
 7456      64697265 
 7456      6374696F 
 7456      6E00
 7457              	.LASF197:
 7458 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7458      73657273 
 7458      5C4C6F67 
 7458      616E5C44 
 7458      65736B74 
 7459 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7459      315F436C 
 7459      6173732E 
 7459      63796473 
 7459      6E00
 7460              	.LASF25:
 7461 005b 52545552 		.ascii	"RTURN\000"
 7461      4E00
 7462              	.LASF194:
 7463 0061 72696768 		.ascii	"rightTurnCount\000"
 7463      74547572 
 7463      6E436F75 
 7463      6E7400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 153


 7464              	.LASF39:
 7465 0070 44455354 		.ascii	"DEST_TEST\000"
 7465      5F544553 
 7465      5400
 7466              	.LASF149:
 7467 007a 71756164 		.ascii	"quad_diff1\000"
 7467      5F646966 
 7467      663100
 7468              	.LASF150:
 7469 0085 71756164 		.ascii	"quad_diff2\000"
 7469      5F646966 
 7469      663200
 7470              	.LASF103:
 7471 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7471      5F446563 
 7471      5F726573 
 7471      706F6E73 
 7471      6500
 7472              	.LASF168:
 7473 00a2 70726576 		.ascii	"prevVoltage\000"
 7473      566F6C74 
 7473      61676500 
 7474              	.LASF152:
 7475 00ae 73746172 		.ascii	"start_turn_count\000"
 7475      745F7475 
 7475      726E5F63 
 7475      6F756E74 
 7475      00
 7476              	.LASF10:
 7477 00bf 756E7369 		.ascii	"unsigned int\000"
 7477      676E6564 
 7477      20696E74 
 7477      00
 7478              	.LASF178:
 7479 00cc 74726163 		.ascii	"track_mode\000"
 7479      6B5F6D6F 
 7479      646500
 7480              	.LASF5:
 7481 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7481      7433325F 
 7481      7400
 7482              	.LASF19:
 7483 00e1 696E7431 		.ascii	"int16\000"
 7483      3600
 7484              	.LASF175:
 7485 00e7 73797374 		.ascii	"system_state\000"
 7485      656D5F73 
 7485      74617465 
 7485      00
 7486              	.LASF24:
 7487 00f4 4C545552 		.ascii	"LTURN\000"
 7487      4E00
 7488              	.LASF159:
 7489 00fa 74617267 		.ascii	"target_distance_quad\000"
 7489      65745F64 
 7489      69737461 
 7489      6E63655F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 154


 7489      71756164 
 7490              	.LASF27:
 7491 010f 54524143 		.ascii	"TRACKING\000"
 7491      4B494E47 
 7491      00
 7492              	.LASF169:
 7493 0118 70726576 		.ascii	"prevVoltage2\000"
 7493      566F6C74 
 7493      61676532 
 7493      00
 7494              	.LASF183:
 7495 0125 73656E73 		.ascii	"sensorsDisabled\000"
 7495      6F727344 
 7495      69736162 
 7495      6C656400 
 7496              	.LASF70:
 7497 0135 7061636B 		.ascii	"packet_bytes\000"
 7497      65745F62 
 7497      79746573 
 7497      00
 7498              	.LASF54:
 7499 0142 67325F78 		.ascii	"g2_xpos\000"
 7499      706F7300 
 7500              	.LASF32:
 7501 014a 6D6F6465 		.ascii	"mode\000"
 7501      00
 7502              	.LASF145:
 7503 014f 71756164 		.ascii	"quad_count1\000"
 7503      5F636F75 
 7503      6E743100 
 7504              	.LASF146:
 7505 015b 71756164 		.ascii	"quad_count2\000"
 7505      5F636F75 
 7505      6E743200 
 7506              	.LASF112:
 7507 0167 74726163 		.ascii	"trackLineU\000"
 7507      6B4C696E 
 7507      655500
 7508              	.LASF188:
 7509 0172 726F626F 		.ascii	"robot_direction\000"
 7509      745F6469 
 7509      72656374 
 7509      696F6E00 
 7510              	.LASF111:
 7511 0182 74726163 		.ascii	"trackLineZ\000"
 7511      6B4C696E 
 7511      655A00
 7512              	.LASF193:
 7513 018d 6C656674 		.ascii	"leftTurnCount\000"
 7513      5475726E 
 7513      436F756E 
 7513      7400
 7514              	.LASF181:
 7515 019b 73706565 		.ascii	"speed\000"
 7515      6400
 7516              	.LASF36:
 7517 01a1 53515541 		.ascii	"SQUARE_TRACK\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 155


 7517      52455F54 
 7517      5241434B 
 7517      00
 7518              	.LASF137:
 7519 01ae 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7519      5F72665F 
 7519      7472616E 
 7519      736D6973 
 7519      73696F6E 
 7520              	.LASF138:
 7521 01ca 666C6167 		.ascii	"flag_print_rf\000"
 7521      5F707269 
 7521      6E745F72 
 7521      6600
 7522              	.LASF177:
 7523 01d8 6D6F7665 		.ascii	"movement_state\000"
 7523      6D656E74 
 7523      5F737461 
 7523      746500
 7524              	.LASF28:
 7525 01e7 54524143 		.ascii	"TRACKING_U\000"
 7525      4B494E47 
 7525      5F5500
 7526              	.LASF93:
 7527 01f2 696E6974 		.ascii	"initForward\000"
 7527      466F7277 
 7527      61726400 
 7528              	.LASF14:
 7529 01fe 75696E74 		.ascii	"uint32_t\000"
 7529      33325F74 
 7529      00
 7530              	.LASF57:
 7531 0207 67325F64 		.ascii	"g2_direction\000"
 7531      69726563 
 7531      74696F6E 
 7531      00
 7532              	.LASF60:
 7533 0214 6973725F 		.ascii	"isr_quad1\000"
 7533      71756164 
 7533      3100
 7534              	.LASF20:
 7535 021e 666C6F61 		.ascii	"float\000"
 7535      7400
 7536              	.LASF78:
 7537 0224 73657453 		.ascii	"setSpeed\000"
 7537      70656564 
 7537      00
 7538              	.LASF173:
 7539 022d 75736242 		.ascii	"usbBuffer\000"
 7539      75666665 
 7539      7200
 7540              	.LASF42:
 7541 0237 696E6465 		.ascii	"index\000"
 7541      7800
 7542              	.LASF23:
 7543 023d 44524956 		.ascii	"DRIVE\000"
 7543      4500
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 156


 7544              	.LASF72:
 7545 0243 73747269 		.ascii	"string_packet\000"
 7545      6E675F70 
 7545      61636B65 
 7545      7400
 7546              	.LASF102:
 7547 0251 6368616E 		.ascii	"changeToBT\000"
 7547      6765546F 
 7547      425400
 7548              	.LASF81:
 7549 025c 636F756E 		.ascii	"countsLeft\000"
 7549      74734C65 
 7549      667400
 7550              	.LASF86:
 7551 0267 64726976 		.ascii	"driveForwards\000"
 7551      65466F72 
 7551      77617264 
 7551      7300
 7552              	.LASF88:
 7553 0275 7475726E 		.ascii	"turnLeft\000"
 7553      4C656674 
 7553      00
 7554              	.LASF9:
 7555 027e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7555      206C6F6E 
 7555      6720756E 
 7555      7369676E 
 7555      65642069 
 7556              	.LASF134:
 7557 0295 666C6167 		.ascii	"flag_packet\000"
 7557      5F706163 
 7557      6B657400 
 7558              	.LASF67:
 7559 02a1 66726F6E 		.ascii	"frontSensors\000"
 7559      7453656E 
 7559      736F7273 
 7559      00
 7560              	.LASF61:
 7561 02ae 6973725F 		.ascii	"isr_turn_timer\000"
 7561      7475726E 
 7561      5F74696D 
 7561      657200
 7562              	.LASF101:
 7563 02bd 6368616E 		.ascii	"changeToRF\000"
 7563      6765546F 
 7563      524600
 7564              	.LASF90:
 7565 02c8 696E6974 		.ascii	"initTurnLeft\000"
 7565      5475726E 
 7565      4C656674 
 7565      00
 7566              	.LASF167:
 7567 02d5 706F7274 		.ascii	"portOpen\000"
 7567      4F70656E 
 7567      00
 7568              	.LASF94:
 7569 02de 696E6974 		.ascii	"initBrake\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 157


 7569      4272616B 
 7569      6500
 7570              	.LASF130:
 7571 02e8 666C6167 		.ascii	"flag_ts_update\000"
 7571      5F74735F 
 7571      75706461 
 7571      746500
 7572              	.LASF114:
 7573 02f7 7363616C 		.ascii	"scalingFactor\000"
 7573      696E6746 
 7573      6163746F 
 7573      7200
 7574              	.LASF104:
 7575 0305 6C656674 		.ascii	"leftSpeed\000"
 7575      53706565 
 7575      6400
 7576              	.LASF129:
 7577 030f 666C6167 		.ascii	"flag_ts_enc\000"
 7577      5F74735F 
 7577      656E6300 
 7578              	.LASF179:
 7579 031b 62797465 		.ascii	"byteCount\000"
 7579      436F756E 
 7579      7400
 7580              	.LASF66:
 7581 0325 61637469 		.ascii	"actionDebounce\000"
 7581      6F6E4465 
 7581      626F756E 
 7581      636500
 7582              	.LASF63:
 7583 0334 62757474 		.ascii	"button\000"
 7583      6F6E00
 7584              	.LASF176:
 7585 033b 70726576 		.ascii	"prev_movement_state\000"
 7585      5F6D6F76 
 7585      656D656E 
 7585      745F7374 
 7585      61746500 
 7586              	.LASF120:
 7587 034f 73656E73 		.ascii	"sensorVals\000"
 7587      6F725661 
 7587      6C7300
 7588              	.LASF116:
 7589 035a 72657375 		.ascii	"result_str\000"
 7589      6C745F73 
 7589      747200
 7590              	.LASF123:
 7591 0365 75617274 		.ascii	"uart_set_PWM\000"
 7591      5F736574 
 7591      5F50574D 
 7591      00
 7592              	.LASF97:
 7593 0372 696E6974 		.ascii	"inittrackLineZ\000"
 7593      74726163 
 7593      6B4C696E 
 7593      655A00
 7594              	.LASF44:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 158


 7595 0381 726F626F 		.ascii	"robot_ypos\000"
 7595      745F7970 
 7595      6F7300
 7596              	.LASF128:
 7597 038c 74735F64 		.ascii	"ts_display\000"
 7597      6973706C 
 7597      617900
 7598              	.LASF113:
 7599 0397 7072696E 		.ascii	"print_ADC\000"
 7599      745F4144 
 7599      4300
 7600              	.LASF106:
 7601 03a1 7363616C 		.ascii	"scalingLeft\000"
 7601      696E674C 
 7601      65667400 
 7602              	.LASF12:
 7603 03ad 63686172 		.ascii	"char\000"
 7603      00
 7604              	.LASF48:
 7605 03b2 67305F73 		.ascii	"g0_speed\000"
 7605      70656564 
 7605      00
 7606              	.LASF156:
 7607 03bb 72696768 		.ascii	"rightSpeedLimit\000"
 7607      74537065 
 7607      65644C69 
 7607      6D697400 
 7608              	.LASF74:
 7609 03cb 7365744C 		.ascii	"setLeftDir\000"
 7609      65667444 
 7609      697200
 7610              	.LASF182:
 7611 03d6 696E7374 		.ascii	"instructionCount\000"
 7611      72756374 
 7611      696F6E43 
 7611      6F756E74 
 7611      00
 7612              	.LASF89:
 7613 03e7 7475726E 		.ascii	"turnU\000"
 7613      5500
 7614              	.LASF55:
 7615 03ed 67325F79 		.ascii	"g2_ypos\000"
 7615      706F7300 
 7616              	.LASF16:
 7617 03f5 75696E74 		.ascii	"uint16\000"
 7617      313600
 7618              	.LASF18:
 7619 03fc 696E7438 		.ascii	"int8\000"
 7619      00
 7620              	.LASF69:
 7621 0401 6E657874 		.ascii	"nextStepDist\000"
 7621      53746570 
 7621      44697374 
 7621      00
 7622              	.LASF53:
 7623 040e 67315F64 		.ascii	"g1_direction\000"
 7623      69726563 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 159


 7623      74696F6E 
 7623      00
 7624              	.LASF185:
 7625 041b 70617468 		.ascii	"path\000"
 7625      00
 7626              	.LASF75:
 7627 0420 73657452 		.ascii	"setRightDir\000"
 7627      69676874 
 7627      44697200 
 7628              	.LASF34:
 7629 042c 43555256 		.ascii	"CURVE_TRACK\000"
 7629      455F5452 
 7629      41434B00 
 7630              	.LASF108:
 7631 0438 696E7465 		.ascii	"interCalc\000"
 7631      7243616C 
 7631      6300
 7632              	.LASF143:
 7633 0442 42545F45 		.ascii	"BT_ENABLED\000"
 7633      4E41424C 
 7633      454400
 7634              	.LASF80:
 7635 044d 72696768 		.ascii	"right\000"
 7635      7400
 7636              	.LASF163:
 7637 0453 696E6974 		.ascii	"initial_pos_valid\000"
 7637      69616C5F 
 7637      706F735F 
 7637      76616C69 
 7637      6400
 7638              	.LASF8:
 7639 0465 6C6F6E67 		.ascii	"long long int\000"
 7639      206C6F6E 
 7639      6720696E 
 7639      7400
 7640              	.LASF174:
 7641 0473 62756666 		.ascii	"buffer_state\000"
 7641      65725F73 
 7641      74617465 
 7641      00
 7642              	.LASF50:
 7643 0480 67315F78 		.ascii	"g1_xpos\000"
 7643      706F7300 
 7644              	.LASF95:
 7645 0488 696E6974 		.ascii	"initTrack\000"
 7645      54726163 
 7645      6B00
 7646              	.LASF68:
 7647 0492 6E657874 		.ascii	"nextStep\000"
 7647      53746570 
 7647      00
 7648              	.LASF195:
 7649 049b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7649      4320342E 
 7649      392E3320 
 7649      32303135 
 7649      30333033 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 160


 7650 04ce 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7650      20726576 
 7650      6973696F 
 7650      6E203232 
 7650      31323230 
 7651 0501 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7651      66756E63 
 7651      74696F6E 
 7651      2D736563 
 7651      74696F6E 
 7652              	.LASF56:
 7653 0529 67325F73 		.ascii	"g2_speed\000"
 7653      70656564 
 7653      00
 7654              	.LASF47:
 7655 0532 67305F79 		.ascii	"g0_ypos\000"
 7655      706F7300 
 7656              	.LASF99:
 7657 053a 72665F63 		.ascii	"rf_char\000"
 7657      68617200 
 7658              	.LASF184:
 7659 0542 666F6F64 		.ascii	"food_list\000"
 7659      5F6C6973 
 7659      7400
 7660              	.LASF142:
 7661 054c 42494E5F 		.ascii	"BIN_ENABLED\000"
 7661      454E4142 
 7661      4C454400 
 7662              	.LASF105:
 7663 0558 72696768 		.ascii	"rightSpeed\000"
 7663      74537065 
 7663      656400
 7664              	.LASF127:
 7665 0563 74735F73 		.ascii	"ts_speed\000"
 7665      70656564 
 7665      00
 7666              	.LASF17:
 7667 056c 75696E74 		.ascii	"uint32\000"
 7667      333200
 7668              	.LASF191:
 7669 0573 696E7374 		.ascii	"instructions\000"
 7669      72756374 
 7669      696F6E73 
 7669      00
 7670              	.LASF82:
 7671 0580 636F756E 		.ascii	"countsRight\000"
 7671      74735269 
 7671      67687400 
 7672              	.LASF198:
 7673 058c 64617461 		.ascii	"data_main\000"
 7673      5F6D6169 
 7673      6E00
 7674              	.LASF115:
 7675 0596 636F6E76 		.ascii	"converted_val\000"
 7675      65727465 
 7675      645F7661 
 7675      6C00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 161


 7676              	.LASF186:
 7677 05a4 73746172 		.ascii	"start\000"
 7677      7400
 7678              	.LASF41:
 7679 05aa 72737369 		.ascii	"rssi\000"
 7679      00
 7680              	.LASF110:
 7681 05af 74726163 		.ascii	"trackLine\000"
 7681      6B4C696E 
 7681      6500
 7682              	.LASF49:
 7683 05b9 67305F64 		.ascii	"g0_direction\000"
 7683      69726563 
 7683      74696F6E 
 7683      00
 7684              	.LASF139:
 7685 05c6 666C6167 		.ascii	"flag_receive_ADC\000"
 7685      5F726563 
 7685      65697665 
 7685      5F414443 
 7685      00
 7686              	.LASF26:
 7687 05d7 53544F50 		.ascii	"STOPPED\000"
 7687      50454400 
 7688              	.LASF100:
 7689 05df 42545F72 		.ascii	"BT_rxInt\000"
 7689      78496E74 
 7689      00
 7690              	.LASF22:
 7691 05e8 6C6F6E67 		.ascii	"long double\000"
 7691      20646F75 
 7691      626C6500 
 7692              	.LASF64:
 7693 05f4 6973725F 		.ascii	"isr_adcTimer\000"
 7693      61646354 
 7693      696D6572 
 7693      00
 7694              	.LASF153:
 7695 0601 6C656674 		.ascii	"left_duty_cycle\000"
 7695      5F647574 
 7695      795F6379 
 7695      636C6500 
 7696              	.LASF65:
 7697 0611 6973725F 		.ascii	"isr_deadzone\000"
 7697      64656164 
 7697      7A6F6E65 
 7697      00
 7698              	.LASF131:
 7699 061e 666C6167 		.ascii	"flag_ts_speed\000"
 7699      5F74735F 
 7699      73706565 
 7699      6400
 7700              	.LASF136:
 7701 062c 64617461 		.ascii	"dataready_flag\000"
 7701      72656164 
 7701      795F666C 
 7701      616700
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 162


 7702              	.LASF165:
 7703 063b 696E6974 		.ascii	"initial_y_pos\000"
 7703      69616C5F 
 7703      795F706F 
 7703      7300
 7704              	.LASF133:
 7705 0649 666C6167 		.ascii	"flag_rx\000"
 7705      5F727800 
 7706              	.LASF2:
 7707 0651 73686F72 		.ascii	"short int\000"
 7707      7420696E 
 7707      7400
 7708              	.LASF140:
 7709 065b 6164635F 		.ascii	"adc_result\000"
 7709      72657375 
 7709      6C7400
 7710              	.LASF92:
 7711 0666 696E6974 		.ascii	"initTurnU\000"
 7711      5475726E 
 7711      5500
 7712              	.LASF144:
 7713 0670 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7713      5F63616C 
 7713      635F7768 
 7713      65656C73 
 7713      70656564 
 7714              	.LASF4:
 7715 0685 6C6F6E67 		.ascii	"long int\000"
 7715      20696E74 
 7715      00
 7716              	.LASF91:
 7717 068e 696E6974 		.ascii	"initTurnRight\000"
 7717      5475726E 
 7717      52696768 
 7717      7400
 7718              	.LASF35:
 7719 069c 555F5452 		.ascii	"U_TRACK\000"
 7719      41434B00 
 7720              	.LASF124:
 7721 06a4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7721      52784275 
 7721      66666572 
 7721      00
 7722              	.LASF118:
 7723 06b1 7072696E 		.ascii	"printString\000"
 7723      74537472 
 7723      696E6700 
 7724              	.LASF98:
 7725 06bd 7278496E 		.ascii	"rxInt\000"
 7725      7400
 7726              	.LASF126:
 7727 06c3 74735F75 		.ascii	"ts_update\000"
 7727      70646174 
 7727      6500
 7728              	.LASF33:
 7729 06cd 4E4F5F54 		.ascii	"NO_TRACK\000"
 7729      5241434B 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 163


 7729      00
 7730              	.LASF151:
 7731 06d6 64656164 		.ascii	"deadzone\000"
 7731      7A6F6E65 
 7731      00
 7732              	.LASF155:
 7733 06df 6C656674 		.ascii	"leftSpeedLimit\000"
 7733      53706565 
 7733      644C696D 
 7733      697400
 7734              	.LASF40:
 7735 06ee 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7735      54524156 
 7735      45525345 
 7735      00
 7736              	.LASF29:
 7737 06fb 54524143 		.ascii	"TRACKING_SOFT\000"
 7737      4B494E47 
 7737      5F534F46 
 7737      5400
 7738              	.LASF161:
 7739 0709 6F766572 		.ascii	"overshot_target\000"
 7739      73686F74 
 7739      5F746172 
 7739      67657400 
 7740              	.LASF79:
 7741 0719 6C656674 		.ascii	"left\000"
 7741      00
 7742              	.LASF158:
 7743 071e 61636375 		.ascii	"accum_dist\000"
 7743      6D5F6469 
 7743      737400
 7744              	.LASF121:
 7745 0729 75736250 		.ascii	"usbPutString\000"
 7745      75745374 
 7745      72696E67 
 7745      00
 7746              	.LASF87:
 7747 0736 7475726E 		.ascii	"turnRight\000"
 7747      52696768 
 7747      7400
 7748              	.LASF51:
 7749 0740 67315F79 		.ascii	"g1_ypos\000"
 7749      706F7300 
 7750              	.LASF59:
 7751 0748 6164635F 		.ascii	"adc_isr\000"
 7751      69737200 
 7752              	.LASF119:
 7753 0750 72656164 		.ascii	"readFrontSensors\000"
 7753      46726F6E 
 7753      7453656E 
 7753      736F7273 
 7753      00
 7754              	.LASF162:
 7755 0761 71756164 		.ascii	"quad_per_cm\000"
 7755      5F706572 
 7755      5F636D00 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 164


 7756              	.LASF157:
 7757 076d 74617267 		.ascii	"target_distance_cm\000"
 7757      65745F64 
 7757      69737461 
 7757      6E63655F 
 7757      636D00
 7758              	.LASF11:
 7759 0780 73697A65 		.ascii	"sizetype\000"
 7759      74797065 
 7759      00
 7760              	.LASF7:
 7761 0789 6C6F6E67 		.ascii	"long unsigned int\000"
 7761      20756E73 
 7761      69676E65 
 7761      6420696E 
 7761      7400
 7762              	.LASF71:
 7763 079b 62797465 		.ascii	"byte_packet\000"
 7763      5F706163 
 7763      6B657400 
 7764              	.LASF13:
 7765 07a7 696E7433 		.ascii	"int32_t\000"
 7765      325F7400 
 7766              	.LASF180:
 7767 07af 7061636B 		.ascii	"packet\000"
 7767      657400
 7768              	.LASF192:
 7769 07b6 696E7374 		.ascii	"instructionLength\000"
 7769      72756374 
 7769      696F6E4C 
 7769      656E6774 
 7769      6800
 7770              	.LASF43:
 7771 07c8 726F626F 		.ascii	"robot_xpos\000"
 7771      745F7870 
 7771      6F7300
 7772              	.LASF85:
 7773 07d3 6272616B 		.ascii	"brakeMotor\000"
 7773      654D6F74 
 7773      6F7200
 7774              	.LASF190:
 7775 07de 666F6F64 		.ascii	"food_length\000"
 7775      5F6C656E 
 7775      67746800 
 7776              	.LASF172:
 7777 07ea 656E7472 		.ascii	"entry\000"
 7777      7900
 7778              	.LASF1:
 7779 07f0 756E7369 		.ascii	"unsigned char\000"
 7779      676E6564 
 7779      20636861 
 7779      7200
 7780              	.LASF6:
 7781 07fe 5F5F7569 		.ascii	"__uint32_t\000"
 7781      6E743332 
 7781      5F7400
 7782              	.LASF171:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 165


 7783 0809 6C696E65 		.ascii	"line\000"
 7783      00
 7784              	.LASF160:
 7785 080e 72656163 		.ascii	"reached_target\000"
 7785      6865645F 
 7785      74617267 
 7785      657400
 7786              	.LASF62:
 7787 081d 53746F70 		.ascii	"Stop_on_line\000"
 7787      5F6F6E5F 
 7787      6C696E65 
 7787      00
 7788              	.LASF125:
 7789 082a 74735F65 		.ascii	"ts_enc\000"
 7789      6E6300
 7790              	.LASF166:
 7791 0831 6272616B 		.ascii	"brakeFlag\000"
 7791      65466C61 
 7791      6700
 7792              	.LASF132:
 7793 083b 666C6167 		.ascii	"flag_ts_display\000"
 7793      5F74735F 
 7793      64697370 
 7793      6C617900 
 7794              	.LASF31:
 7795 084b 73746174 		.ascii	"state\000"
 7795      6500
 7796              	.LASF77:
 7797 0851 72657665 		.ascii	"reverseDirection\000"
 7797      72736544 
 7797      69726563 
 7797      74696F6E 
 7797      00
 7798              	.LASF83:
 7799 0862 6272616B 		.ascii	"brakeLeft\000"
 7799      654C6566 
 7799      7400
 7800              	.LASF170:
 7801 086c 64697370 		.ascii	"displaystring\000"
 7801      6C617973 
 7801      7472696E 
 7801      6700
 7802              	.LASF147:
 7803 087a 6C617374 		.ascii	"last_quad_count1\000"
 7803      5F717561 
 7803      645F636F 
 7803      756E7431 
 7803      00
 7804              	.LASF148:
 7805 088b 6C617374 		.ascii	"last_quad_count2\000"
 7805      5F717561 
 7805      645F636F 
 7805      756E7432 
 7805      00
 7806              	.LASF187:
 7807 089c 64657374 		.ascii	"destination\000"
 7807      696E6174 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 166


 7807      696F6E00 
 7808              	.LASF122:
 7809 08a8 75736250 		.ascii	"usbPutChar\000"
 7809      75744368 
 7809      617200
 7810              	.LASF0:
 7811 08b3 7369676E 		.ascii	"signed char\000"
 7811      65642063 
 7811      68617200 
 7812              	.LASF3:
 7813 08bf 73686F72 		.ascii	"short unsigned int\000"
 7813      7420756E 
 7813      7369676E 
 7813      65642069 
 7813      6E7400
 7814              	.LASF45:
 7815 08d2 726F626F 		.ascii	"robot_orientation\000"
 7815      745F6F72 
 7815      69656E74 
 7815      6174696F 
 7815      6E00
 7816              	.LASF37:
 7817 08e4 51554144 		.ascii	"QUAD_STOP\000"
 7817      5F53544F 
 7817      5000
 7818              	.LASF73:
 7819 08ee 6D61696E 		.ascii	"main\000"
 7819      00
 7820              	.LASF58:
 7821 08f3 42545F74 		.ascii	"BT_txInt\000"
 7821      78496E74 
 7821      00
 7822              	.LASF109:
 7823 08fc 6E657874 		.ascii	"nextSpeed\000"
 7823      53706565 
 7823      6400
 7824              	.LASF15:
 7825 0906 75696E74 		.ascii	"uint8\000"
 7825      3800
 7826              	.LASF21:
 7827 090c 646F7562 		.ascii	"double\000"
 7827      6C6500
 7828              	.LASF154:
 7829 0913 72696768 		.ascii	"right_duty_cycle\000"
 7829      745F6475 
 7829      74795F63 
 7829      79636C65 
 7829      00
 7830              	.LASF38:
 7831 0924 52465F53 		.ascii	"RF_STOP\000"
 7831      544F5000 
 7832              	.LASF76:
 7833 092c 68616E64 		.ascii	"handle_rx_binary\000"
 7833      6C655F72 
 7833      785F6269 
 7833      6E617279 
 7833      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccfoTPqH.s 			page 167


 7834              	.LASF117:
 7835 093d 7072696E 		.ascii	"print_RF\000"
 7835      745F5246 
 7835      00
 7836              	.LASF30:
 7837 0946 55545552 		.ascii	"UTURN\000"
 7837      4E00
 7838              	.LASF46:
 7839 094c 67305F78 		.ascii	"g0_xpos\000"
 7839      706F7300 
 7840              	.LASF107:
 7841 0954 7363616C 		.ascii	"scalingRight\000"
 7841      696E6752 
 7841      69676874 
 7841      00
 7842              	.LASF135:
 7843 0961 666C6167 		.ascii	"flag_KB_string\000"
 7843      5F4B425F 
 7843      73747269 
 7843      6E6700
 7844              	.LASF52:
 7845 0970 67315F73 		.ascii	"g1_speed\000"
 7845      70656564 
 7845      00
 7846              	.LASF196:
 7847 0979 2E5C6D61 		.ascii	".\\main.c\000"
 7847      696E2E63 
 7847      00
 7848              	.LASF164:
 7849 0982 696E6974 		.ascii	"initial_x_pos\000"
 7849      69616C5F 
 7849      785F706F 
 7849      7300
 7850              	.LASF84:
 7851 0990 6272616B 		.ascii	"brakeRight\000"
 7851      65526967 
 7851      687400
 7852              	.LASF96:
 7853 099b 696E6974 		.ascii	"initTrackU\000"
 7853      54726163 
 7853      6B5500
 7854              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
