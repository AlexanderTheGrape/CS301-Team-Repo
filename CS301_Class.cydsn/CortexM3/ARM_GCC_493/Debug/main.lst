ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	prevVoltage,2,2
 263              		.comm	prevVoltage2,2,2
 264              		.global	displaystring
 265 0009 000000   		.align	2
 266              		.type	displaystring, %object
 267              		.size	displaystring, 64
 268              	displaystring:
 269 000c 43533330 		.ascii	"CS301 2016\012\000"
 269      31203230 
 269      31360A00 
 270 0018 00000000 		.space	52
 270      00000000 
 270      00000000 
 270      00000000 
 270      00000000 
 271              		.comm	line,64,4
 272              		.comm	entry,64,4
 273              		.comm	usbBuffer,64,4
 274              		.comm	buffer_state,32,4
 275              		.comm	system_state,32,4
 276              		.global	prev_movement_state
 277              		.type	prev_movement_state, %object
 278              		.size	prev_movement_state, 1
 279              	prev_movement_state:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 6


 280 004c 03       		.byte	3
 281              		.global	movement_state
 282              		.type	movement_state, %object
 283              		.size	movement_state, 1
 284              	movement_state:
 285 004d 03       		.byte	3
 286              		.global	track_mode
 287              		.bss
 288              		.type	track_mode, %object
 289              		.size	track_mode, 1
 290              	track_mode:
 291 003c 00       		.space	1
 292              		.global	byteCount
 293              		.type	byteCount, %object
 294              		.size	byteCount, 1
 295              	byteCount:
 296 003d 00       		.space	1
 297              		.comm	packet,2,4
 298              		.global	speed
 299              		.data
 300 004e 0000     		.align	3
 301              		.type	speed, %object
 302              		.size	speed, 8
 303              	speed:
 304 0050 00000000 		.word	0
 305 0054 00002E40 		.word	1076756480
 306              		.comm	tracked_direction,4,4
 307              		.global	instructions
 308              		.bss
 309 003e 0000     		.align	2
 310              		.type	instructions, %object
 311              		.size	instructions, 800
 312              	instructions:
 313 0040 00000000 		.space	800
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	instructionCount
 315              		.align	1
 316              		.type	instructionCount, %object
 317              		.size	instructionCount, 2
 318              	instructionCount:
 319 0360 0000     		.space	2
 320              		.global	instructionLength
 321              		.align	1
 322              		.type	instructionLength, %object
 323              		.size	instructionLength, 2
 324              	instructionLength:
 325 0362 0000     		.space	2
 326              		.global	sensorsDisabled
 327              		.align	2
 328              		.type	sensorsDisabled, %object
 329              		.size	sensorsDisabled, 4
 330              	sensorsDisabled:
 331 0364 00000000 		.space	4
 332              		.global	robot_direction
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 7


 333              		.data
 334              		.align	2
 335              		.type	robot_direction, %object
 336              		.size	robot_direction, 4
 337              	robot_direction:
 338 0058 02000000 		.word	2
 339              		.global	path
 340              		.bss
 341              		.align	2
 342              		.type	path, %object
 343              		.size	path, 9600
 344              	path:
 345 0368 00000000 		.space	9600
 345      00000000 
 345      00000000 
 345      00000000 
 345      00000000 
 346              		.global	start
 347              		.data
 348              		.align	2
 349              		.type	start, %object
 350              		.size	start, 8
 351              	start:
 352 005c 01000000 		.word	1
 353 0060 01000000 		.word	1
 354              		.global	destination
 355              		.align	2
 356              		.type	destination, %object
 357              		.size	destination, 8
 358              	destination:
 359 0064 0D000000 		.word	13
 360 0068 0B000000 		.word	11
 361              		.global	map
 362              		.align	2
 363              		.type	map, %object
 364              		.size	map, 1140
 365              	map:
 366 006c 01000000 		.word	1
 367 0070 01000000 		.word	1
 368 0074 01000000 		.word	1
 369 0078 01000000 		.word	1
 370 007c 01000000 		.word	1
 371 0080 01000000 		.word	1
 372 0084 01000000 		.word	1
 373 0088 01000000 		.word	1
 374 008c 01000000 		.word	1
 375 0090 01000000 		.word	1
 376 0094 01000000 		.word	1
 377 0098 01000000 		.word	1
 378 009c 01000000 		.word	1
 379 00a0 01000000 		.word	1
 380 00a4 01000000 		.word	1
 381 00a8 01000000 		.word	1
 382 00ac 01000000 		.word	1
 383 00b0 01000000 		.word	1
 384 00b4 01000000 		.word	1
 385 00b8 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 8


 386 00bc 00000000 		.word	0
 387 00c0 00000000 		.word	0
 388 00c4 00000000 		.word	0
 389 00c8 00000000 		.word	0
 390 00cc 00000000 		.word	0
 391 00d0 01000000 		.word	1
 392 00d4 00000000 		.word	0
 393 00d8 01000000 		.word	1
 394 00dc 00000000 		.word	0
 395 00e0 00000000 		.word	0
 396 00e4 00000000 		.word	0
 397 00e8 00000000 		.word	0
 398 00ec 00000000 		.word	0
 399 00f0 00000000 		.word	0
 400 00f4 00000000 		.word	0
 401 00f8 00000000 		.word	0
 402 00fc 00000000 		.word	0
 403 0100 01000000 		.word	1
 404 0104 01000000 		.word	1
 405 0108 01000000 		.word	1
 406 010c 01000000 		.word	1
 407 0110 01000000 		.word	1
 408 0114 01000000 		.word	1
 409 0118 00000000 		.word	0
 410 011c 01000000 		.word	1
 411 0120 00000000 		.word	0
 412 0124 01000000 		.word	1
 413 0128 00000000 		.word	0
 414 012c 01000000 		.word	1
 415 0130 00000000 		.word	0
 416 0134 01000000 		.word	1
 417 0138 01000000 		.word	1
 418 013c 01000000 		.word	1
 419 0140 01000000 		.word	1
 420 0144 01000000 		.word	1
 421 0148 00000000 		.word	0
 422 014c 01000000 		.word	1
 423 0150 01000000 		.word	1
 424 0154 00000000 		.word	0
 425 0158 00000000 		.word	0
 426 015c 00000000 		.word	0
 427 0160 01000000 		.word	1
 428 0164 00000000 		.word	0
 429 0168 01000000 		.word	1
 430 016c 00000000 		.word	0
 431 0170 00000000 		.word	0
 432 0174 00000000 		.word	0
 433 0178 01000000 		.word	1
 434 017c 00000000 		.word	0
 435 0180 00000000 		.word	0
 436 0184 00000000 		.word	0
 437 0188 00000000 		.word	0
 438 018c 00000000 		.word	0
 439 0190 01000000 		.word	1
 440 0194 00000000 		.word	0
 441 0198 01000000 		.word	1
 442 019c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 9


 443 01a0 00000000 		.word	0
 444 01a4 01000000 		.word	1
 445 01a8 00000000 		.word	0
 446 01ac 01000000 		.word	1
 447 01b0 00000000 		.word	0
 448 01b4 01000000 		.word	1
 449 01b8 00000000 		.word	0
 450 01bc 01000000 		.word	1
 451 01c0 01000000 		.word	1
 452 01c4 01000000 		.word	1
 453 01c8 01000000 		.word	1
 454 01cc 01000000 		.word	1
 455 01d0 01000000 		.word	1
 456 01d4 01000000 		.word	1
 457 01d8 00000000 		.word	0
 458 01dc 01000000 		.word	1
 459 01e0 00000000 		.word	0
 460 01e4 01000000 		.word	1
 461 01e8 01000000 		.word	1
 462 01ec 00000000 		.word	0
 463 01f0 01000000 		.word	1
 464 01f4 00000000 		.word	0
 465 01f8 00000000 		.word	0
 466 01fc 00000000 		.word	0
 467 0200 00000000 		.word	0
 468 0204 00000000 		.word	0
 469 0208 00000000 		.word	0
 470 020c 00000000 		.word	0
 471 0210 00000000 		.word	0
 472 0214 00000000 		.word	0
 473 0218 00000000 		.word	0
 474 021c 00000000 		.word	0
 475 0220 01000000 		.word	1
 476 0224 00000000 		.word	0
 477 0228 01000000 		.word	1
 478 022c 00000000 		.word	0
 479 0230 01000000 		.word	1
 480 0234 01000000 		.word	1
 481 0238 00000000 		.word	0
 482 023c 01000000 		.word	1
 483 0240 01000000 		.word	1
 484 0244 01000000 		.word	1
 485 0248 01000000 		.word	1
 486 024c 01000000 		.word	1
 487 0250 01000000 		.word	1
 488 0254 01000000 		.word	1
 489 0258 01000000 		.word	1
 490 025c 01000000 		.word	1
 491 0260 00000000 		.word	0
 492 0264 01000000 		.word	1
 493 0268 00000000 		.word	0
 494 026c 01000000 		.word	1
 495 0270 00000000 		.word	0
 496 0274 01000000 		.word	1
 497 0278 01000000 		.word	1
 498 027c 01000000 		.word	1
 499 0280 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 10


 500 0284 00000000 		.word	0
 501 0288 00000000 		.word	0
 502 028c 00000000 		.word	0
 503 0290 00000000 		.word	0
 504 0294 00000000 		.word	0
 505 0298 00000000 		.word	0
 506 029c 00000000 		.word	0
 507 02a0 00000000 		.word	0
 508 02a4 00000000 		.word	0
 509 02a8 00000000 		.word	0
 510 02ac 00000000 		.word	0
 511 02b0 01000000 		.word	1
 512 02b4 00000000 		.word	0
 513 02b8 01000000 		.word	1
 514 02bc 00000000 		.word	0
 515 02c0 00000000 		.word	0
 516 02c4 00000000 		.word	0
 517 02c8 01000000 		.word	1
 518 02cc 01000000 		.word	1
 519 02d0 01000000 		.word	1
 520 02d4 01000000 		.word	1
 521 02d8 01000000 		.word	1
 522 02dc 01000000 		.word	1
 523 02e0 01000000 		.word	1
 524 02e4 01000000 		.word	1
 525 02e8 00000000 		.word	0
 526 02ec 01000000 		.word	1
 527 02f0 01000000 		.word	1
 528 02f4 01000000 		.word	1
 529 02f8 01000000 		.word	1
 530 02fc 01000000 		.word	1
 531 0300 00000000 		.word	0
 532 0304 01000000 		.word	1
 533 0308 01000000 		.word	1
 534 030c 01000000 		.word	1
 535 0310 00000000 		.word	0
 536 0314 01000000 		.word	1
 537 0318 01000000 		.word	1
 538 031c 00000000 		.word	0
 539 0320 00000000 		.word	0
 540 0324 00000000 		.word	0
 541 0328 00000000 		.word	0
 542 032c 00000000 		.word	0
 543 0330 00000000 		.word	0
 544 0334 00000000 		.word	0
 545 0338 00000000 		.word	0
 546 033c 00000000 		.word	0
 547 0340 00000000 		.word	0
 548 0344 00000000 		.word	0
 549 0348 01000000 		.word	1
 550 034c 00000000 		.word	0
 551 0350 00000000 		.word	0
 552 0354 00000000 		.word	0
 553 0358 01000000 		.word	1
 554 035c 00000000 		.word	0
 555 0360 01000000 		.word	1
 556 0364 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 11


 557 0368 00000000 		.word	0
 558 036c 01000000 		.word	1
 559 0370 01000000 		.word	1
 560 0374 01000000 		.word	1
 561 0378 01000000 		.word	1
 562 037c 01000000 		.word	1
 563 0380 00000000 		.word	0
 564 0384 01000000 		.word	1
 565 0388 01000000 		.word	1
 566 038c 01000000 		.word	1
 567 0390 00000000 		.word	0
 568 0394 01000000 		.word	1
 569 0398 00000000 		.word	0
 570 039c 01000000 		.word	1
 571 03a0 00000000 		.word	0
 572 03a4 01000000 		.word	1
 573 03a8 00000000 		.word	0
 574 03ac 01000000 		.word	1
 575 03b0 01000000 		.word	1
 576 03b4 00000000 		.word	0
 577 03b8 00000000 		.word	0
 578 03bc 00000000 		.word	0
 579 03c0 00000000 		.word	0
 580 03c4 00000000 		.word	0
 581 03c8 01000000 		.word	1
 582 03cc 00000000 		.word	0
 583 03d0 00000000 		.word	0
 584 03d4 00000000 		.word	0
 585 03d8 01000000 		.word	1
 586 03dc 00000000 		.word	0
 587 03e0 00000000 		.word	0
 588 03e4 00000000 		.word	0
 589 03e8 01000000 		.word	1
 590 03ec 00000000 		.word	0
 591 03f0 00000000 		.word	0
 592 03f4 00000000 		.word	0
 593 03f8 01000000 		.word	1
 594 03fc 01000000 		.word	1
 595 0400 00000000 		.word	0
 596 0404 01000000 		.word	1
 597 0408 01000000 		.word	1
 598 040c 01000000 		.word	1
 599 0410 00000000 		.word	0
 600 0414 01000000 		.word	1
 601 0418 01000000 		.word	1
 602 041c 01000000 		.word	1
 603 0420 00000000 		.word	0
 604 0424 01000000 		.word	1
 605 0428 01000000 		.word	1
 606 042c 01000000 		.word	1
 607 0430 00000000 		.word	0
 608 0434 01000000 		.word	1
 609 0438 01000000 		.word	1
 610 043c 01000000 		.word	1
 611 0440 00000000 		.word	0
 612 0444 01000000 		.word	1
 613 0448 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 12


 614 044c 00000000 		.word	0
 615 0450 00000000 		.word	0
 616 0454 00000000 		.word	0
 617 0458 01000000 		.word	1
 618 045c 00000000 		.word	0
 619 0460 00000000 		.word	0
 620 0464 00000000 		.word	0
 621 0468 00000000 		.word	0
 622 046c 00000000 		.word	0
 623 0470 00000000 		.word	0
 624 0474 00000000 		.word	0
 625 0478 01000000 		.word	1
 626 047c 00000000 		.word	0
 627 0480 00000000 		.word	0
 628 0484 00000000 		.word	0
 629 0488 00000000 		.word	0
 630 048c 00000000 		.word	0
 631 0490 01000000 		.word	1
 632 0494 01000000 		.word	1
 633 0498 01000000 		.word	1
 634 049c 01000000 		.word	1
 635 04a0 01000000 		.word	1
 636 04a4 01000000 		.word	1
 637 04a8 01000000 		.word	1
 638 04ac 01000000 		.word	1
 639 04b0 01000000 		.word	1
 640 04b4 01000000 		.word	1
 641 04b8 01000000 		.word	1
 642 04bc 01000000 		.word	1
 643 04c0 01000000 		.word	1
 644 04c4 01000000 		.word	1
 645 04c8 01000000 		.word	1
 646 04cc 01000000 		.word	1
 647 04d0 01000000 		.word	1
 648 04d4 01000000 		.word	1
 649 04d8 01000000 		.word	1
 650 04dc 01000000 		.word	1
 651              		.global	food_list
 652              		.align	2
 653              		.type	food_list, %object
 654              		.size	food_list, 48
 655              	food_list:
 656 04e0 05000000 		.word	5
 657 04e4 09000000 		.word	9
 658 04e8 05000000 		.word	5
 659 04ec 03000000 		.word	3
 660 04f0 0D000000 		.word	13
 661 04f4 02000000 		.word	2
 662 04f8 00000000 		.space	24
 662      00000000 
 662      00000000 
 662      00000000 
 662      00000000 
 663              		.global	food_length
 664              		.align	2
 665              		.type	food_length, %object
 666              		.size	food_length, 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 13


 667              	food_length:
 668 0510 03000000 		.word	3
 669 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 670              		.align	2
 671              		.global	BT_txInt
 672              		.thumb
 673              		.thumb_func
 674              		.type	BT_txInt, %function
 675              	BT_txInt:
 676              	.LFB63:
 677              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 134
  29:.\main.c      **** #define U_OFFSET 93
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 140
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t robot_direction = 2;
  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  46:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 14


  47:.\main.c      **** 
  48:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  65:.\main.c      **** //first number is the y coord, second is x
  66:.\main.c      **** //first number is row, second column
  67:.\main.c      **** 
  68:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  69:.\main.c      **** uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}};
  70:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}};
  71:.\main.c      **** uint32_t food_length = 3;
  72:.\main.c      **** 
  73:.\main.c      **** void changeToRF();
  74:.\main.c      **** void changeToBT();
  75:.\main.c      **** void brakeMotor();
  76:.\main.c      **** void driveForwards();
  77:.\main.c      **** void initTurnLeft();
  78:.\main.c      **** void initTurnRight();
  79:.\main.c      **** void inittrackLineZ();
  80:.\main.c      **** void trackLineU();
  81:.\main.c      **** void trackLine();
  82:.\main.c      **** void trackLineZ();
  83:.\main.c      **** void initTrackU();
  84:.\main.c      **** void turnLeft();
  85:.\main.c      **** void turnRight();
  86:.\main.c      **** void initForward();
  87:.\main.c      **** void initTurnU();
  88:.\main.c      **** void turnU();
  89:.\main.c      **** void initBrake();
  90:.\main.c      **** void print_ADC();
  91:.\main.c      **** void Quad_Dec_response();
  92:.\main.c      **** void handle_rx_binary();
  93:.\main.c      **** void readFrontSensors();
  94:.\main.c      **** void print_RF();
  95:.\main.c      **** 
  96:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  97:.\main.c      **** //BT
  98:.\main.c      **** CY_ISR(BT_txInt)
  99:.\main.c      **** {
 678              		.loc 1 99 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 15


 682              		@ link register save eliminated.
 683 0000 80B4     		push	{r7}
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 100:.\main.c      ****     
 101:.\main.c      **** }
 688              		.loc 1 101 0
 689 0004 BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0006 5DF8047B 		ldr	r7, [sp], #4
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 000a 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE63:
 698              		.size	BT_txInt, .-BT_txInt
 699              		.section	.text.adc_isr,"ax",%progbits
 700              		.align	2
 701              		.global	adc_isr
 702              		.thumb
 703              		.thumb_func
 704              		.type	adc_isr, %function
 705              	adc_isr:
 706              	.LFB64:
 102:.\main.c      **** 
 103:.\main.c      **** //ADC:
 104:.\main.c      **** CY_ISR (adc_isr)
 105:.\main.c      **** {
 707              		.loc 1 105 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 106:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 107:.\main.c      ****     adc_result = ADC_GetResult16();
 717              		.loc 1 107 0
 718 0004 FFF7FEFF 		bl	ADC_GetResult16
 719 0008 0346     		mov	r3, r0
 720 000a 1A46     		mov	r2, r3
 721 000c 044B     		ldr	r3, .L3
 722 000e 1A80     		strh	r2, [r3]	@ movhi
 108:.\main.c      ****     flag_receive_ADC = 1;
 723              		.loc 1 108 0
 724 0010 044B     		ldr	r3, .L3+4
 725 0012 0122     		movs	r2, #1
 726 0014 1A70     		strb	r2, [r3]
 109:.\main.c      ****     flag_print_rf = 1;
 727              		.loc 1 109 0
 728 0016 044B     		ldr	r3, .L3+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 16


 729 0018 0122     		movs	r2, #1
 730 001a 1A70     		strb	r2, [r3]
 110:.\main.c      ****     //LED_Write(~LED_Read());
 111:.\main.c      **** }
 731              		.loc 1 111 0
 732 001c 80BD     		pop	{r7, pc}
 733              	.L4:
 734 001e 00BF     		.align	2
 735              	.L3:
 736 0020 00000000 		.word	adc_result
 737 0024 00000000 		.word	flag_receive_ADC
 738 0028 00000000 		.word	flag_print_rf
 739              		.cfi_endproc
 740              	.LFE64:
 741              		.size	adc_isr, .-adc_isr
 742              		.global	__aeabi_i2d
 743              		.global	__aeabi_dsub
 744              		.global	__aeabi_dcmpge
 745              		.global	__aeabi_dadd
 746              		.section	.text.isr_quad1,"ax",%progbits
 747              		.align	2
 748              		.global	isr_quad1
 749              		.thumb
 750              		.thumb_func
 751              		.type	isr_quad1, %function
 752              	isr_quad1:
 753              	.LFB65:
 112:.\main.c      **** 
 113:.\main.c      **** CY_ISR (isr_quad1)
 114:.\main.c      **** {
 754              		.loc 1 114 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 B0B5     		push	{r4, r5, r7, lr}
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 4, -16
 761              		.cfi_offset 5, -12
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 115:.\main.c      ****     
 116:.\main.c      ****     //LED_Write(~LED_Read());
 117:.\main.c      ****     last_quad_count1 = quad_count1;
 766              		.loc 1 117 0
 767 0004 574B     		ldr	r3, .L13
 768 0006 1A88     		ldrh	r2, [r3]
 769 0008 574B     		ldr	r3, .L13+4
 770 000a 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****     last_quad_count2 = quad_count2;
 771              		.loc 1 118 0
 772 000c 574B     		ldr	r3, .L13+8
 773 000e 1A88     		ldrh	r2, [r3]
 774 0010 574B     		ldr	r3, .L13+12
 775 0012 1A80     		strh	r2, [r3]	@ movhi
 119:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 17


 776              		.loc 1 119 0
 777 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 778 0018 0346     		mov	r3, r0
 779 001a 1A46     		mov	r2, r3
 780 001c 514B     		ldr	r3, .L13
 781 001e 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 782              		.loc 1 120 0
 783 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 784 0024 0346     		mov	r3, r0
 785 0026 1A46     		mov	r2, r3
 786 0028 504B     		ldr	r3, .L13+8
 787 002a 1A80     		strh	r2, [r3]	@ movhi
 121:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 788              		.loc 1 121 0
 789 002c 4D4B     		ldr	r3, .L13
 790 002e 1B88     		ldrh	r3, [r3]
 791 0030 9AB2     		uxth	r2, r3
 792 0032 4D4B     		ldr	r3, .L13+4
 793 0034 1B88     		ldrh	r3, [r3]
 794 0036 9BB2     		uxth	r3, r3
 795 0038 D31A     		subs	r3, r2, r3
 796 003a 9BB2     		uxth	r3, r3
 797 003c 9AB2     		uxth	r2, r3
 798 003e 4D4B     		ldr	r3, .L13+16
 799 0040 1A80     		strh	r2, [r3]	@ movhi
 122:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 800              		.loc 1 122 0
 801 0042 4A4B     		ldr	r3, .L13+8
 802 0044 1B88     		ldrh	r3, [r3]
 803 0046 9AB2     		uxth	r2, r3
 804 0048 494B     		ldr	r3, .L13+12
 805 004a 1B88     		ldrh	r3, [r3]
 806 004c 9BB2     		uxth	r3, r3
 807 004e D31A     		subs	r3, r2, r3
 808 0050 9BB2     		uxth	r3, r3
 809 0052 9AB2     		uxth	r2, r3
 810 0054 484B     		ldr	r3, .L13+20
 811 0056 1A80     		strh	r2, [r3]	@ movhi
 123:.\main.c      ****     
 124:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 812              		.loc 1 124 0
 813 0058 424B     		ldr	r3, .L13
 814 005a 1B88     		ldrh	r3, [r3]
 815 005c 1BB2     		sxth	r3, r3
 816 005e 002B     		cmp	r3, #0
 817 0060 B8BF     		it	lt
 818 0062 5B42     		rsblt	r3, r3, #0
 819 0064 40F6B832 		movw	r2, #3000
 820 0068 9342     		cmp	r3, r2
 821 006a 17DD     		ble	.L6
 822              		.loc 1 124 0 is_stmt 0 discriminator 1
 823 006c 434B     		ldr	r3, .L13+24
 824 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 0070 012B     		cmp	r3, #1
 826 0072 13D0     		beq	.L6
 827              		.loc 1 124 0 discriminator 2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 18


 828 0074 414B     		ldr	r3, .L13+24
 829 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0078 022B     		cmp	r3, #2
 831 007a 0FD0     		beq	.L6
 832              		.loc 1 124 0 discriminator 3
 833 007c 3F4B     		ldr	r3, .L13+24
 834 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 0080 072B     		cmp	r3, #7
 836 0082 0BD0     		beq	.L6
 125:.\main.c      ****     {
 126:.\main.c      ****         QuadDec_M1_SetCounter(0);
 837              		.loc 1 126 0 is_stmt 1
 838 0084 0020     		movs	r0, #0
 839 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 127:.\main.c      ****         QuadDec_M2_SetCounter(0);
 840              		.loc 1 127 0
 841 008a 0020     		movs	r0, #0
 842 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 128:.\main.c      ****         quad_count1 = 0;
 843              		.loc 1 128 0
 844 0090 344B     		ldr	r3, .L13
 845 0092 0022     		movs	r2, #0
 846 0094 1A80     		strh	r2, [r3]	@ movhi
 129:.\main.c      ****         quad_count2 = 0;
 847              		.loc 1 129 0
 848 0096 354B     		ldr	r3, .L13+8
 849 0098 0022     		movs	r2, #0
 850 009a 1A80     		strh	r2, [r3]	@ movhi
 851              	.L6:
 130:.\main.c      ****     }
 131:.\main.c      **** 
 132:.\main.c      ****     flag_calc_wheelspeed = 1;
 852              		.loc 1 132 0
 853 009c 384B     		ldr	r3, .L13+28
 854 009e 0122     		movs	r2, #1
 855 00a0 1A70     		strb	r2, [r3]
 133:.\main.c      ****     
 134:.\main.c      ****     
 135:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 856              		.loc 1 135 0
 857 00a2 384B     		ldr	r3, .L13+32
 858 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 00a6 062B     		cmp	r3, #6
 860 00a8 5AD1     		bne	.L5
 861              		.loc 1 135 0 is_stmt 0 discriminator 1
 862 00aa 344B     		ldr	r3, .L13+24
 863 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 00ae 062B     		cmp	r3, #6
 865 00b0 56D1     		bne	.L5
 136:.\main.c      ****     {
 137:.\main.c      ****         //track the distance
 138:.\main.c      ****         accum_dist += quad_diff1;
 866              		.loc 1 138 0 is_stmt 1
 867 00b2 354B     		ldr	r3, .L13+36
 868 00b4 1B88     		ldrh	r3, [r3]
 869 00b6 9AB2     		uxth	r2, r3
 870 00b8 2E4B     		ldr	r3, .L13+16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 19


 871 00ba 1B88     		ldrh	r3, [r3]
 872 00bc 9BB2     		uxth	r3, r3
 873 00be 1344     		add	r3, r3, r2
 874 00c0 9BB2     		uxth	r3, r3
 875 00c2 9AB2     		uxth	r2, r3
 876 00c4 304B     		ldr	r3, .L13+36
 877 00c6 1A80     		strh	r2, [r3]	@ movhi
 139:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 878              		.loc 1 139 0
 879 00c8 2F4B     		ldr	r3, .L13+36
 880 00ca 1B88     		ldrh	r3, [r3]
 881 00cc 1BB2     		sxth	r3, r3
 882 00ce 002B     		cmp	r3, #0
 883 00d0 B8BF     		it	lt
 884 00d2 5B42     		rsblt	r3, r3, #0
 885 00d4 1846     		mov	r0, r3
 886 00d6 FFF7FEFF 		bl	__aeabi_i2d
 887 00da 0446     		mov	r4, r0
 888 00dc 0D46     		mov	r5, r1
 889 00de 2B4B     		ldr	r3, .L13+40
 890 00e0 1B88     		ldrh	r3, [r3]
 891 00e2 1BB2     		sxth	r3, r3
 892 00e4 1846     		mov	r0, r3
 893 00e6 FFF7FEFF 		bl	__aeabi_i2d
 894 00ea 0246     		mov	r2, r0
 895 00ec 0B46     		mov	r3, r1
 896 00ee 1046     		mov	r0, r2
 897 00f0 1946     		mov	r1, r3
 898 00f2 4FF00002 		mov	r2, #0
 899 00f6 264B     		ldr	r3, .L13+44
 900 00f8 FFF7FEFF 		bl	__aeabi_dsub
 901 00fc 0246     		mov	r2, r0
 902 00fe 0B46     		mov	r3, r1
 903 0100 2046     		mov	r0, r4
 904 0102 2946     		mov	r1, r5
 905 0104 FFF7FEFF 		bl	__aeabi_dcmpge
 906 0108 0346     		mov	r3, r0
 907 010a 002B     		cmp	r3, #0
 908 010c 02D0     		beq	.L8
 140:.\main.c      ****         {
 141:.\main.c      ****             reached_target = 1;
 909              		.loc 1 141 0
 910 010e 214B     		ldr	r3, .L13+48
 911 0110 0122     		movs	r2, #1
 912 0112 1A70     		strb	r2, [r3]
 913              	.L8:
 142:.\main.c      ****         }
 143:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5))
 914              		.loc 1 143 0
 915 0114 1C4B     		ldr	r3, .L13+36
 916 0116 1B88     		ldrh	r3, [r3]
 917 0118 1BB2     		sxth	r3, r3
 918 011a 002B     		cmp	r3, #0
 919 011c B8BF     		it	lt
 920 011e 5B42     		rsblt	r3, r3, #0
 921 0120 1846     		mov	r0, r3
 922 0122 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 20


 923 0126 0446     		mov	r4, r0
 924 0128 0D46     		mov	r5, r1
 925 012a 184B     		ldr	r3, .L13+40
 926 012c 1B88     		ldrh	r3, [r3]
 927 012e 1BB2     		sxth	r3, r3
 928 0130 1846     		mov	r0, r3
 929 0132 FFF7FEFF 		bl	__aeabi_i2d
 930 0136 0246     		mov	r2, r0
 931 0138 0B46     		mov	r3, r1
 932 013a 1046     		mov	r0, r2
 933 013c 1946     		mov	r1, r3
 934 013e 4FF00002 		mov	r2, #0
 935 0142 134B     		ldr	r3, .L13+44
 936 0144 FFF7FEFF 		bl	__aeabi_dadd
 937 0148 0246     		mov	r2, r0
 938 014a 0B46     		mov	r3, r1
 939 014c 2046     		mov	r0, r4
 940 014e 2946     		mov	r1, r5
 941 0150 FFF7FEFF 		bl	__aeabi_dcmpge
 942 0154 0346     		mov	r3, r0
 943 0156 002B     		cmp	r3, #0
 944 0158 02D0     		beq	.L5
 144:.\main.c      ****         {
 145:.\main.c      ****             overshot_target = 1;
 945              		.loc 1 145 0
 946 015a 0F4B     		ldr	r3, .L13+52
 947 015c 0122     		movs	r2, #1
 948 015e 1A70     		strb	r2, [r3]
 949              	.L5:
 146:.\main.c      ****         }
 147:.\main.c      ****     }
 148:.\main.c      **** }
 950              		.loc 1 148 0
 951 0160 B0BD     		pop	{r4, r5, r7, pc}
 952              	.L14:
 953 0162 00BF     		.align	2
 954              	.L13:
 955 0164 00000000 		.word	quad_count1
 956 0168 00000000 		.word	last_quad_count1
 957 016c 00000000 		.word	quad_count2
 958 0170 00000000 		.word	last_quad_count2
 959 0174 00000000 		.word	quad_diff1
 960 0178 00000000 		.word	quad_diff2
 961 017c 00000000 		.word	movement_state
 962 0180 00000000 		.word	flag_calc_wheelspeed
 963 0184 00000000 		.word	track_mode
 964 0188 00000000 		.word	accum_dist
 965 018c 00000000 		.word	target_distance_quad
 966 0190 00805140 		.word	1079083008
 967 0194 00000000 		.word	reached_target
 968 0198 00000000 		.word	overshot_target
 969              		.cfi_endproc
 970              	.LFE65:
 971              		.size	isr_quad1, .-isr_quad1
 972              		.section	.text.isr_turn_timer,"ax",%progbits
 973              		.align	2
 974              		.global	isr_turn_timer
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 21


 975              		.thumb
 976              		.thumb_func
 977              		.type	isr_turn_timer, %function
 978              	isr_turn_timer:
 979              	.LFB66:
 149:.\main.c      **** 
 150:.\main.c      **** CY_ISR(isr_turn_timer)
 151:.\main.c      **** {
 980              		.loc 1 151 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 82B0     		sub	sp, sp, #8
 989              		.cfi_def_cfa_offset 16
 990 0004 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 152:.\main.c      ****     if(movement_state == LTURN)
 992              		.loc 1 152 0
 993 0006 464B     		ldr	r3, .L23
 994 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 995 000a 012B     		cmp	r3, #1
 996 000c 33D1     		bne	.L16
 997              	.LBB2:
 153:.\main.c      ****     {
 154:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 998              		.loc 1 154 0
 999 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1000 0012 0346     		mov	r3, r0
 1001 0014 1A46     		mov	r2, r3
 1002 0016 434B     		ldr	r3, .L23+4
 1003 0018 1B88     		ldrh	r3, [r3]
 1004 001a 1BB2     		sxth	r3, r3
 1005 001c D31A     		subs	r3, r2, r3
 1006 001e 002B     		cmp	r3, #0
 1007 0020 B8BF     		it	lt
 1008 0022 5B42     		rsblt	r3, r3, #0
 1009 0024 404A     		ldr	r2, .L23+8
 1010 0026 82FB0312 		smull	r1, r2, r2, r3
 1011 002a 1112     		asrs	r1, r2, #8
 1012 002c DA17     		asrs	r2, r3, #31
 1013 002e 8A1A     		subs	r2, r1, r2
 1014 0030 4FF45071 		mov	r1, #832
 1015 0034 01FB02F2 		mul	r2, r1, r2
 1016 0038 9A1A     		subs	r2, r3, r2
 1017 003a 1346     		mov	r3, r2	@ movhi
 1018 003c FB80     		strh	r3, [r7, #6]	@ movhi
 155:.\main.c      ****   
 156:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1019              		.loc 1 156 0
 1020 003e FB88     		ldrh	r3, [r7, #6]
 1021 0040 B82B     		cmp	r3, #184
 1022 0042 17D9     		bls	.L17
 1023              		.loc 1 156 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 22


 1024 0044 FB88     		ldrh	r3, [r7, #6]
 1025 0046 E02B     		cmp	r3, #224
 1026 0048 14D8     		bhi	.L17
 1027              		.loc 1 156 0 discriminator 2
 1028 004a 384B     		ldr	r3, .L23+12
 1029 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1030 004e 012B     		cmp	r3, #1
 1031 0050 07D0     		beq	.L18
 1032              		.loc 1 156 0 discriminator 3
 1033 0052 364B     		ldr	r3, .L23+12
 1034 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1035 0056 012B     		cmp	r3, #1
 1036 0058 03D0     		beq	.L18
 1037              		.loc 1 156 0 discriminator 4
 1038 005a 344B     		ldr	r3, .L23+12
 1039 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1040 005e 012B     		cmp	r3, #1
 1041 0060 08D1     		bne	.L17
 1042              	.L18:
 157:.\main.c      ****         {
 158:.\main.c      ****             //movement_state = STOPPED;
 159:.\main.c      ****             brakeMotor();
 1043              		.loc 1 159 0 is_stmt 1
 1044 0062 FFF7FEFF 		bl	brakeMotor
 160:.\main.c      ****             movement_state = prev_movement_state;
 1045              		.loc 1 160 0
 1046 0066 324B     		ldr	r3, .L23+16
 1047 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1048 006a 2D4B     		ldr	r3, .L23
 1049 006c 1A70     		strb	r2, [r3]
 161:.\main.c      ****             Timer_2_Stop();
 1050              		.loc 1 161 0
 1051 006e FFF7FEFF 		bl	Timer_2_Stop
 1052              	.LBE2:
 1053 0072 51E0     		b	.L15
 1054              	.L17:
 1055 0074 50E0     		b	.L15
 1056              	.L16:
 162:.\main.c      ****         }
 163:.\main.c      ****     }
 164:.\main.c      ****     else if (movement_state == RTURN)
 1057              		.loc 1 164 0
 1058 0076 2A4B     		ldr	r3, .L23
 1059 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 007a 022B     		cmp	r3, #2
 1061 007c 33D1     		bne	.L20
 1062              	.LBB3:
 165:.\main.c      ****     {
 166:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1063              		.loc 1 166 0
 1064 007e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1065 0082 0346     		mov	r3, r0
 1066 0084 1A46     		mov	r2, r3
 1067 0086 274B     		ldr	r3, .L23+4
 1068 0088 1B88     		ldrh	r3, [r3]
 1069 008a 1BB2     		sxth	r3, r3
 1070 008c D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 23


 1071 008e 002B     		cmp	r3, #0
 1072 0090 B8BF     		it	lt
 1073 0092 5B42     		rsblt	r3, r3, #0
 1074 0094 244A     		ldr	r2, .L23+8
 1075 0096 82FB0312 		smull	r1, r2, r2, r3
 1076 009a 1112     		asrs	r1, r2, #8
 1077 009c DA17     		asrs	r2, r3, #31
 1078 009e 8A1A     		subs	r2, r1, r2
 1079 00a0 4FF45071 		mov	r1, #832
 1080 00a4 01FB02F2 		mul	r2, r1, r2
 1081 00a8 9A1A     		subs	r2, r3, r2
 1082 00aa 1346     		mov	r3, r2	@ movhi
 1083 00ac BB80     		strh	r3, [r7, #4]	@ movhi
 167:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1084              		.loc 1 167 0
 1085 00ae BB88     		ldrh	r3, [r7, #4]
 1086 00b0 B82B     		cmp	r3, #184
 1087 00b2 17D9     		bls	.L21
 1088              		.loc 1 167 0 is_stmt 0 discriminator 1
 1089 00b4 BB88     		ldrh	r3, [r7, #4]
 1090 00b6 E02B     		cmp	r3, #224
 1091 00b8 14D8     		bhi	.L21
 1092              		.loc 1 167 0 discriminator 2
 1093 00ba 1C4B     		ldr	r3, .L23+12
 1094 00bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1095 00be 012B     		cmp	r3, #1
 1096 00c0 07D0     		beq	.L22
 1097              		.loc 1 167 0 discriminator 3
 1098 00c2 1A4B     		ldr	r3, .L23+12
 1099 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1100 00c6 012B     		cmp	r3, #1
 1101 00c8 03D0     		beq	.L22
 1102              		.loc 1 167 0 discriminator 4
 1103 00ca 184B     		ldr	r3, .L23+12
 1104 00cc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1105 00ce 012B     		cmp	r3, #1
 1106 00d0 08D1     		bne	.L21
 1107              	.L22:
 168:.\main.c      ****         {
 169:.\main.c      ****             //movement_state = STOPPED;
 170:.\main.c      ****             brakeMotor();
 1108              		.loc 1 170 0 is_stmt 1
 1109 00d2 FFF7FEFF 		bl	brakeMotor
 171:.\main.c      ****             movement_state = prev_movement_state;
 1110              		.loc 1 171 0
 1111 00d6 164B     		ldr	r3, .L23+16
 1112 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1113 00da 114B     		ldr	r3, .L23
 1114 00dc 1A70     		strb	r2, [r3]
 172:.\main.c      ****             Timer_2_Stop();
 1115              		.loc 1 172 0
 1116 00de FFF7FEFF 		bl	Timer_2_Stop
 1117              	.LBE3:
 1118 00e2 19E0     		b	.L15
 1119              	.L21:
 1120 00e4 18E0     		b	.L15
 1121              	.L20:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 24


 173:.\main.c      ****         }
 174:.\main.c      ****     }
 175:.\main.c      ****     else if (movement_state == UTURN)
 1122              		.loc 1 175 0
 1123 00e6 0E4B     		ldr	r3, .L23
 1124 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 00ea 072B     		cmp	r3, #7
 1126 00ec 14D1     		bne	.L15
 176:.\main.c      ****     {
 177:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1127              		.loc 1 177 0
 1128 00ee FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1129 00f2 0346     		mov	r3, r0
 1130 00f4 1A46     		mov	r2, r3
 1131 00f6 0B4B     		ldr	r3, .L23+4
 1132 00f8 1B88     		ldrh	r3, [r3]
 1133 00fa 1BB2     		sxth	r3, r3
 1134 00fc D31A     		subs	r3, r2, r3
 1135 00fe 002B     		cmp	r3, #0
 1136 0100 B8BF     		it	lt
 1137 0102 5B42     		rsblt	r3, r3, #0
 1138 0104 CF2B     		cmp	r3, #207
 1139 0106 07DD     		ble	.L15
 178:.\main.c      ****         {
 179:.\main.c      ****             //movement_state = STOPPED;
 180:.\main.c      ****             brakeMotor();
 1140              		.loc 1 180 0
 1141 0108 FFF7FEFF 		bl	brakeMotor
 181:.\main.c      ****             movement_state = prev_movement_state;
 1142              		.loc 1 181 0
 1143 010c 084B     		ldr	r3, .L23+16
 1144 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1145 0110 034B     		ldr	r3, .L23
 1146 0112 1A70     		strb	r2, [r3]
 182:.\main.c      ****             Timer_2_Stop();
 1147              		.loc 1 182 0
 1148 0114 FFF7FEFF 		bl	Timer_2_Stop
 1149              	.L15:
 183:.\main.c      ****         }
 184:.\main.c      ****     }
 185:.\main.c      **** }
 1150              		.loc 1 185 0
 1151 0118 0837     		adds	r7, r7, #8
 1152              		.cfi_def_cfa_offset 8
 1153 011a BD46     		mov	sp, r7
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 011c 80BD     		pop	{r7, pc}
 1157              	.L24:
 1158 011e 00BF     		.align	2
 1159              	.L23:
 1160 0120 00000000 		.word	movement_state
 1161 0124 00000000 		.word	start_turn_count
 1162 0128 4FECC44E 		.word	1321528399
 1163 012c 00000000 		.word	frontSensors
 1164 0130 00000000 		.word	prev_movement_state
 1165              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 25


 1166              	.LFE66:
 1167              		.size	isr_turn_timer, .-isr_turn_timer
 1168              		.section	.text.Stop_on_line,"ax",%progbits
 1169              		.align	2
 1170              		.global	Stop_on_line
 1171              		.thumb
 1172              		.thumb_func
 1173              		.type	Stop_on_line, %function
 1174              	Stop_on_line:
 1175              	.LFB67:
 186:.\main.c      **** 
 187:.\main.c      **** 
 188:.\main.c      **** CY_ISR (Stop_on_line)
 189:.\main.c      **** {
 1176              		.loc 1 189 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 1, uses_anonymous_args = 0
 1180              		@ link register save eliminated.
 1181 0000 80B4     		push	{r7}
 1182              		.cfi_def_cfa_offset 4
 1183              		.cfi_offset 7, -4
 1184 0002 00AF     		add	r7, sp, #0
 1185              		.cfi_def_cfa_register 7
 190:.\main.c      ****     movement_state = STOPPED;
 1186              		.loc 1 190 0
 1187 0004 054B     		ldr	r3, .L27
 1188 0006 0322     		movs	r2, #3
 1189 0008 1A70     		strb	r2, [r3]
 191:.\main.c      ****     if(movement_state != DRIVE) return;
 1190              		.loc 1 191 0
 1191 000a 044B     		ldr	r3, .L27
 1192 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 000e 002B     		cmp	r3, #0
 1194 0010 00D0     		beq	.L25
 1195 0012 00BF     		nop
 1196              	.L25:
 192:.\main.c      ****     //initTurnLeft();
 193:.\main.c      **** }
 1197              		.loc 1 193 0
 1198 0014 BD46     		mov	sp, r7
 1199              		.cfi_def_cfa_register 13
 1200              		@ sp needed
 1201 0016 5DF8047B 		ldr	r7, [sp], #4
 1202              		.cfi_restore 7
 1203              		.cfi_def_cfa_offset 0
 1204 001a 7047     		bx	lr
 1205              	.L28:
 1206              		.align	2
 1207              	.L27:
 1208 001c 00000000 		.word	movement_state
 1209              		.cfi_endproc
 1210              	.LFE67:
 1211              		.size	Stop_on_line, .-Stop_on_line
 1212              		.section	.rodata
 1213              		.align	2
 1214              	.LC0:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 26


 1215 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1215      74696E67 
 1215      20726F62 
 1215      6F74210D 
 1215      0A00
 1216              		.section	.text.button,"ax",%progbits
 1217              		.align	2
 1218              		.global	button
 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	button, %function
 1222              	button:
 1223              	.LFB68:
 194:.\main.c      **** 
 195:.\main.c      **** CY_ISR (button)
 196:.\main.c      **** {
 1224              		.loc 1 196 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 1, uses_anonymous_args = 0
 1228 0000 80B5     		push	{r7, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 197:.\main.c      ****     if(BT_ENABLED)
 1234              		.loc 1 197 0
 1235 0004 054B     		ldr	r3, .L31
 1236 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 0008 002B     		cmp	r3, #0
 1238 000a 02D0     		beq	.L30
 198:.\main.c      ****     {
 199:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1239              		.loc 1 199 0
 1240 000c 0448     		ldr	r0, .L31+4
 1241 000e FFF7FEFF 		bl	UART_PutString
 1242              	.L30:
 200:.\main.c      ****     }
 201:.\main.c      ****     movement_state = DRIVE;
 1243              		.loc 1 201 0
 1244 0012 044B     		ldr	r3, .L31+8
 1245 0014 0022     		movs	r2, #0
 1246 0016 1A70     		strb	r2, [r3]
 202:.\main.c      **** }
 1247              		.loc 1 202 0
 1248 0018 80BD     		pop	{r7, pc}
 1249              	.L32:
 1250 001a 00BF     		.align	2
 1251              	.L31:
 1252 001c 00000000 		.word	BT_ENABLED
 1253 0020 00000000 		.word	.LC0
 1254 0024 00000000 		.word	movement_state
 1255              		.cfi_endproc
 1256              	.LFE68:
 1257              		.size	button, .-button
 1258              		.section	.text.isr_adcTimer,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 27


 1259              		.align	2
 1260              		.global	isr_adcTimer
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	isr_adcTimer, %function
 1264              	isr_adcTimer:
 1265              	.LFB69:
 203:.\main.c      **** 
 204:.\main.c      **** CY_ISR(isr_adcTimer)
 205:.\main.c      **** {
 1266              		.loc 1 205 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 206:.\main.c      ****     ADC_StartConvert();
 1276              		.loc 1 206 0
 1277 0004 FFF7FEFF 		bl	ADC_StartConvert
 207:.\main.c      **** }
 1278              		.loc 1 207 0
 1279 0008 80BD     		pop	{r7, pc}
 1280              		.cfi_endproc
 1281              	.LFE69:
 1282              		.size	isr_adcTimer, .-isr_adcTimer
 1283 000a 00BF     		.section	.rodata
 1284 0012 0000     		.align	2
 1285              	.LC1:
 1286 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1286      7A6F6E65 
 1286      206C6566 
 1286      740D0A00 
 1287              		.section	.text.isr_deadzone,"ax",%progbits
 1288              		.align	2
 1289              		.global	isr_deadzone
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	isr_deadzone, %function
 1293              	isr_deadzone:
 1294              	.LFB70:
 208:.\main.c      **** 
 209:.\main.c      **** CY_ISR(isr_deadzone)
 210:.\main.c      **** {
 1295              		.loc 1 210 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 80B5     		push	{r7, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 0002 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 28


 211:.\main.c      ****     sensorsDisabled = 0;
 1305              		.loc 1 211 0
 1306 0004 054B     		ldr	r3, .L35
 1307 0006 0022     		movs	r2, #0
 1308 0008 1A60     		str	r2, [r3]
 212:.\main.c      ****     deadzone = 0;
 1309              		.loc 1 212 0
 1310 000a 054B     		ldr	r3, .L35+4
 1311 000c 0022     		movs	r2, #0
 1312 000e 1A70     		strb	r2, [r3]
 213:.\main.c      ****     Timer_Deadzone_Stop();
 1313              		.loc 1 213 0
 1314 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 214:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1315              		.loc 1 214 0
 1316 0014 0348     		ldr	r0, .L35+8
 1317 0016 FFF7FEFF 		bl	UART_PutString
 215:.\main.c      **** }
 1318              		.loc 1 215 0
 1319 001a 80BD     		pop	{r7, pc}
 1320              	.L36:
 1321              		.align	2
 1322              	.L35:
 1323 001c 00000000 		.word	sensorsDisabled
 1324 0020 00000000 		.word	deadzone
 1325 0024 14000000 		.word	.LC1
 1326              		.cfi_endproc
 1327              	.LFE70:
 1328              		.size	isr_deadzone, .-isr_deadzone
 1329              		.section	.rodata
 1330              		.align	2
 1331              	.LC2:
 1332 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1332      20747261 
 1332      76656C3A 
 1332      2025640D 
 1332      0A00
 1333 0036 0000     		.align	2
 1334              	.LC3:
 1335 0038 54726967 		.ascii	"Trigger intersection\015\012\000"
 1335      67657220 
 1335      696E7465 
 1335      72736563 
 1335      74696F6E 
 1336 004f 00       		.align	2
 1337              	.LC4:
 1338 0050 44656164 		.ascii	"Deadzone enter\015\012\000"
 1338      7A6F6E65 
 1338      20656E74 
 1338      65720D0A 
 1338      00
 1339 0061 000000   		.align	2
 1340              	.LC5:
 1341 0064 54617267 		.ascii	"Target dist: %d\015\012\000"
 1341      65742064 
 1341      6973743A 
 1341      2025640D 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 29


 1341      0A00
 1342 0076 0000     		.align	2
 1343              	.LC6:
 1344 0078 696E7374 		.ascii	"instr count:%d\015\012\000"
 1344      7220636F 
 1344      756E743A 
 1344      25640D0A 
 1344      00
 1345 0089 000000   		.align	2
 1346              	.LC7:
 1347 008c 54726967 		.ascii	"Trigger white light\015\012\000"
 1347      67657220 
 1347      77686974 
 1347      65206C69 
 1347      6768740D 
 1348 00a2 0000     		.align	2
 1349              	.LC8:
 1350 00a4 54726967 		.ascii	"Trigger quad\015\012\000"
 1350      67657220 
 1350      71756164 
 1350      0D0A00
 1351              		.section	.text.main,"ax",%progbits
 1352              		.align	2
 1353              		.global	main
 1354              		.thumb
 1355              		.thumb_func
 1356              		.type	main, %function
 1357              	main:
 1358              	.LFB71:
 216:.\main.c      **** 
 217:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 218:.\main.c      **** 
 219:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 220:.\main.c      **** int main()
 221:.\main.c      **** {  
 1359              		.loc 1 221 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 64
 1362              		@ frame_needed = 1, uses_anonymous_args = 0
 1363 0000 80B5     		push	{r7, lr}
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 90B0     		sub	sp, sp, #64
 1368              		.cfi_def_cfa_offset 72
 1369 0004 00AF     		add	r7, sp, #0
 1370              		.cfi_def_cfa_register 7
 222:.\main.c      **** 
 223:.\main.c      **** // ----- INITIALIZATIONS ----------
 224:.\main.c      ****     CYGlobalIntEnable;
 1371              		.loc 1 224 0
 1372              	@ 224 ".\main.c" 1
 1373 0006 62B6     		CPSIE   i
 1374              	@ 0 "" 2
 225:.\main.c      ****     if(ENABLE_PWM)
 226:.\main.c      ****     {
 227:.\main.c      ****         PWM_1_Start();// starting the pwm
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 30


 1375              		.loc 1 227 0
 1376              		.thumb
 1377 0008 FFF7FEFF 		bl	PWM_1_Start
 228:.\main.c      ****         PWM_2_Start();// starting the pwm
 1378              		.loc 1 228 0
 1379 000c FFF7FEFF 		bl	PWM_2_Start
 229:.\main.c      ****     }
 230:.\main.c      ****     
 231:.\main.c      ****     if(ENABLE_ADC)
 232:.\main.c      ****     {
 233:.\main.c      ****         ADC_Start();
 234:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 235:.\main.c      ****         //ADC_StartConvert();
 236:.\main.c      ****         
 237:.\main.c      ****         //start the ADC timer for software trigger mode
 238:.\main.c      ****         Timer_TS_Start();
 239:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 240:.\main.c      ****     }
 241:.\main.c      ****     
 242:.\main.c      ****     if (ENABLE_QUAD)
 243:.\main.c      ****     {
 244:.\main.c      ****         QuadDec_M1_Start();
 1380              		.loc 1 244 0
 1381 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 245:.\main.c      ****         QuadDec_M2_Start();
 1382              		.loc 1 245 0
 1383 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 246:.\main.c      ****         
 247:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1384              		.loc 1 247 0
 1385 0018 B348     		ldr	r0, .L102
 1386 001a FFF7FEFF 		bl	isr_quad1_StartEx
 248:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1387              		.loc 1 248 0
 1388 001e B348     		ldr	r0, .L102+4
 1389 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 249:.\main.c      ****         
 250:.\main.c      ****         Timer_1_Start();
 1390              		.loc 1 250 0
 1391 0024 FFF7FEFF 		bl	Timer_1_Start
 251:.\main.c      ****     }
 252:.\main.c      ****     
 253:.\main.c      ****     if(ENABLE_STOP){
 254:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 255:.\main.c      ****         
 256:.\main.c      ****     }
 257:.\main.c      ****     isr_button_StartEx(button);
 1392              		.loc 1 257 0
 1393 0028 B148     		ldr	r0, .L102+8
 1394 002a FFF7FEFF 		bl	isr_button_StartEx
 258:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1395              		.loc 1 258 0
 1396 002e B148     		ldr	r0, .L102+12
 1397 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 259:.\main.c      **** 
 260:.\main.c      ****     // ------USB SETUP ----------------    
 261:.\main.c      ****     if (USE_USB){    
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 31


 262:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1398              		.loc 1 262 0
 1399 0034 0020     		movs	r0, #0
 1400 0036 0121     		movs	r1, #1
 1401 0038 FFF7FEFF 		bl	USBUART_Start
 263:.\main.c      ****         if (USBUART_GetConfiguration())
 1402              		.loc 1 263 0
 1403 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1404 0040 0346     		mov	r3, r0
 1405 0042 002B     		cmp	r3, #0
 1406 0044 01D0     		beq	.L38
 264:.\main.c      ****             {
 265:.\main.c      ****                  USBUART_CDC_Init();
 1407              		.loc 1 265 0
 1408 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1409              	.L38:
 266:.\main.c      ****             }
 267:.\main.c      ****     }
 268:.\main.c      ****     
 269:.\main.c      ****     if(BIN_ENABLED){
 1410              		.loc 1 269 0
 1411 004a AB4B     		ldr	r3, .L102+16
 1412 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 004e 002B     		cmp	r3, #0
 1414 0050 01D0     		beq	.L39
 270:.\main.c      ****         changeToRF();
 1415              		.loc 1 270 0
 1416 0052 FFF7FEFF 		bl	changeToRF
 1417              	.L39:
 271:.\main.c      ****     }
 272:.\main.c      ****     
 273:.\main.c      ****     if(BT_ENABLED){
 1418              		.loc 1 273 0
 1419 0056 A94B     		ldr	r3, .L102+20
 1420 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1421 005a 002B     		cmp	r3, #0
 1422 005c 01D0     		beq	.L40
 274:.\main.c      ****         changeToBT();
 1423              		.loc 1 274 0
 1424 005e FFF7FEFF 		bl	changeToBT
 1425              	.L40:
 275:.\main.c      ****     }
 276:.\main.c      ****     
 277:.\main.c      ****     uint16 actionDebounce = 0;
 1426              		.loc 1 277 0
 1427 0062 0023     		movs	r3, #0
 1428 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1429              	.L99:
 278:.\main.c      ****     
 279:.\main.c      ****     //usbPutString("Started");
 280:.\main.c      ****     for(;;)
 281:.\main.c      ****     {
 282:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 283:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1430              		.loc 1 283 0
 1431 0066 FFF7FEFF 		bl	Quad_Dec_response
 284:.\main.c      ****         if(BIN_ENABLED == 1)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 32


 1432              		.loc 1 284 0
 1433 006a A34B     		ldr	r3, .L102+16
 1434 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1435 006e 012B     		cmp	r3, #1
 1436 0070 03D1     		bne	.L41
 285:.\main.c      ****         {
 286:.\main.c      ****             handle_rx_binary();
 1437              		.loc 1 286 0
 1438 0072 FFF7FEFF 		bl	handle_rx_binary
 287:.\main.c      ****             print_RF();
 1439              		.loc 1 287 0
 1440 0076 FFF7FEFF 		bl	print_RF
 1441              	.L41:
 288:.\main.c      ****         }
 289:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 290:.\main.c      ****        
 291:.\main.c      ****         readFrontSensors(frontSensors);
 1442              		.loc 1 291 0
 1443 007a A148     		ldr	r0, .L102+24
 1444 007c FFF7FEFF 		bl	readFrontSensors
 292:.\main.c      ****         
 293:.\main.c      ****         switch(track_mode)
 1445              		.loc 1 293 0
 1446 0080 A04B     		ldr	r3, .L102+28
 1447 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0084 072B     		cmp	r3, #7
 1449 0086 00F22C83 		bhi	.L42
 1450 008a 01A2     		adr	r2, .L44
 1451 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1452              		.p2align 2
 1453              	.L44:
 1454 0090 E3060000 		.word	.L42+1
 1455 0094 E3060000 		.word	.L42+1
 1456 0098 E3060000 		.word	.L42+1
 1457 009c B1000000 		.word	.L47+1
 1458 00a0 E3060000 		.word	.L42+1
 1459 00a4 F5000000 		.word	.L49+1
 1460 00a8 1B010000 		.word	.L50+1
 1461 00ac 1B010000 		.word	.L50+1
 1462              		.p2align 1
 1463              	.L47:
 294:.\main.c      ****         {
 295:.\main.c      ****             case SQUARE_TRACK:
 296:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1464              		.loc 1 296 0
 1465 00b0 954B     		ldr	r3, .L102+32
 1466 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 00b4 012B     		cmp	r3, #1
 1468 00b6 1CD0     		beq	.L51
 1469              		.loc 1 296 0 is_stmt 0 discriminator 1
 1470 00b8 934B     		ldr	r3, .L102+32
 1471 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1472 00bc 022B     		cmp	r3, #2
 1473 00be 18D0     		beq	.L51
 297:.\main.c      ****                 {
 298:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1474              		.loc 1 298 0 is_stmt 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 33


 1475 00c0 8F4B     		ldr	r3, .L102+24
 1476 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1477 00c4 012B     		cmp	r3, #1
 1478 00c6 06D1     		bne	.L52
 1479              		.loc 1 298 0 is_stmt 0 discriminator 1
 1480 00c8 8D4B     		ldr	r3, .L102+24
 1481 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1482 00cc 012B     		cmp	r3, #1
 1483 00ce 02D1     		bne	.L52
 299:.\main.c      ****                         initTurnLeft();
 1484              		.loc 1 299 0 is_stmt 1
 1485 00d0 FFF7FEFF 		bl	initTurnLeft
 1486 00d4 0DE0     		b	.L51
 1487              	.L52:
 300:.\main.c      ****                     }
 301:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1488              		.loc 1 301 0
 1489 00d6 8A4B     		ldr	r3, .L102+24
 1490 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1491 00da 012B     		cmp	r3, #1
 1492 00dc 06D1     		bne	.L53
 1493              		.loc 1 301 0 is_stmt 0 discriminator 1
 1494 00de 884B     		ldr	r3, .L102+24
 1495 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1496 00e2 012B     		cmp	r3, #1
 1497 00e4 02D1     		bne	.L53
 302:.\main.c      ****                     {
 303:.\main.c      ****                         initTurnRight();
 1498              		.loc 1 303 0 is_stmt 1
 1499 00e6 FFF7FEFF 		bl	initTurnRight
 1500 00ea 02E0     		b	.L51
 1501              	.L53:
 304:.\main.c      ****                     }
 305:.\main.c      ****                     else inittrackLineZ();
 1502              		.loc 1 305 0
 1503 00ec FFF7FEFF 		bl	inittrackLineZ
 306:.\main.c      ****                 }
 307:.\main.c      ****             break;
 1504              		.loc 1 307 0
 1505 00f0 F7E2     		b	.L42
 1506              	.L51:
 1507 00f2 F6E2     		b	.L42
 1508              	.L49:
 308:.\main.c      ****             case NO_TRACK:
 309:.\main.c      ****             break;
 310:.\main.c      ****             case CURVE_TRACK:
 311:.\main.c      ****             break;
 312:.\main.c      ****             case U_TRACK:
 313:.\main.c      ****             break;
 314:.\main.c      ****             case QUAD_STOP:
 315:.\main.c      ****             break;
 316:.\main.c      ****             case RF_STOP:
 317:.\main.c      ****                 if(initial_pos_valid == 1)
 1509              		.loc 1 317 0
 1510 00f4 854B     		ldr	r3, .L102+36
 1511 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1512 00f8 012B     		cmp	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 34


 1513 00fa 0DD1     		bne	.L54
 318:.\main.c      ****                 {
 319:.\main.c      ****                     //changeToBT();
 320:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 321:.\main.c      ****                     //changeToRF();
 322:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1514              		.loc 1 322 0
 1515 00fc 844B     		ldr	r3, .L102+40
 1516 00fe 5A88     		ldrh	r2, [r3, #2]
 1517 0100 844B     		ldr	r3, .L102+44
 1518 0102 1A80     		strh	r2, [r3]	@ movhi
 323:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1519              		.loc 1 323 0
 1520 0104 824B     		ldr	r3, .L102+40
 1521 0106 9A88     		ldrh	r2, [r3, #4]
 1522 0108 834B     		ldr	r3, .L102+48
 1523 010a 1A80     		strh	r2, [r3]	@ movhi
 324:.\main.c      ****                     initial_pos_valid = 2;
 1524              		.loc 1 324 0
 1525 010c 7F4B     		ldr	r3, .L102+36
 1526 010e 0222     		movs	r2, #2
 1527 0110 1A70     		strb	r2, [r3]
 325:.\main.c      ****                     initForward();
 1528              		.loc 1 325 0
 1529 0112 FFF7FEFF 		bl	initForward
 326:.\main.c      ****                 }
 327:.\main.c      ****             break;
 1530              		.loc 1 327 0
 1531 0116 E4E2     		b	.L42
 1532              	.L54:
 1533 0118 E3E2     		b	.L42
 1534              	.L50:
 328:.\main.c      ****             case MAP_TRAVERSE:
 329:.\main.c      ****             case DEST_TEST:
 330:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1535              		.loc 1 330 0
 1536 011a 7B4B     		ldr	r3, .L102+32
 1537 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 011e 012B     		cmp	r3, #1
 1539 0120 00F0DE82 		beq	.L55
 1540              		.loc 1 330 0 is_stmt 0 discriminator 1
 1541 0124 784B     		ldr	r3, .L102+32
 1542 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1543 0128 022B     		cmp	r3, #2
 1544 012a 00F0D982 		beq	.L55
 1545              		.loc 1 330 0 discriminator 2
 1546 012e 764B     		ldr	r3, .L102+32
 1547 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 0132 072B     		cmp	r3, #7
 1549 0134 00F0D482 		beq	.L55
 1550              	.LBB4:
 331:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 332:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1551              		.loc 1 332 0 is_stmt 1
 1552 0138 784B     		ldr	r3, .L102+52
 1553 013a 1B88     		ldrh	r3, [r3]
 1554 013c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 35


 1555 013e 784B     		ldr	r3, .L102+56
 1556 0140 9B5C     		ldrb	r3, [r3, r2]
 1557 0142 87F83D30 		strb	r3, [r7, #61]
 333:.\main.c      ****                     uint8 leftOn = frontSensors[0] && frontSensors[2];
 1558              		.loc 1 333 0
 1559 0146 6E4B     		ldr	r3, .L102+24
 1560 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1561 014a 002B     		cmp	r3, #0
 1562 014c 05D0     		beq	.L56
 1563              		.loc 1 333 0 is_stmt 0 discriminator 1
 1564 014e 6C4B     		ldr	r3, .L102+24
 1565 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1566 0152 002B     		cmp	r3, #0
 1567 0154 01D0     		beq	.L56
 1568              		.loc 1 333 0 discriminator 3
 1569 0156 0123     		movs	r3, #1
 1570 0158 00E0     		b	.L57
 1571              	.L56:
 1572              		.loc 1 333 0 discriminator 4
 1573 015a 0023     		movs	r3, #0
 1574              	.L57:
 1575              		.loc 1 333 0 discriminator 6
 1576 015c 87F83930 		strb	r3, [r7, #57]
 334:.\main.c      ****                     uint8 rightOn = frontSensors[4] && frontSensors[2];
 1577              		.loc 1 334 0 is_stmt 1 discriminator 6
 1578 0160 674B     		ldr	r3, .L102+24
 1579 0162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1580 0164 002B     		cmp	r3, #0
 1581 0166 05D0     		beq	.L58
 1582              		.loc 1 334 0 is_stmt 0 discriminator 1
 1583 0168 654B     		ldr	r3, .L102+24
 1584 016a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1585 016c 002B     		cmp	r3, #0
 1586 016e 01D0     		beq	.L58
 1587              		.loc 1 334 0 discriminator 3
 1588 0170 0123     		movs	r3, #1
 1589 0172 00E0     		b	.L59
 1590              	.L58:
 1591              		.loc 1 334 0 discriminator 4
 1592 0174 0023     		movs	r3, #0
 1593              	.L59:
 1594              		.loc 1 334 0 discriminator 6
 1595 0176 87F83830 		strb	r3, [r7, #56]
 335:.\main.c      ****                     if((leftOn && (nextStep != 'R')) || (rightOn && (nextStep != 'L'))){ //intersec
 1596              		.loc 1 335 0 is_stmt 1 discriminator 6
 1597 017a 97F83930 		ldrb	r3, [r7, #57]	@ zero_extendqisi2
 1598 017e 002B     		cmp	r3, #0
 1599 0180 03D0     		beq	.L60
 1600              		.loc 1 335 0 is_stmt 0 discriminator 1
 1601 0182 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1602 0186 522B     		cmp	r3, #82
 1603 0188 09D1     		bne	.L61
 1604              	.L60:
 1605              		.loc 1 335 0 discriminator 3
 1606 018a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1607 018e 002B     		cmp	r3, #0
 1608 0190 00F01E81 		beq	.L62
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 36


 1609              		.loc 1 335 0 discriminator 4
 1610 0194 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1611 0198 4C2B     		cmp	r3, #76
 1612 019a 00F01981 		beq	.L62
 1613              	.L61:
 336:.\main.c      ****                         if(sensorsDisabled == 0)
 1614              		.loc 1 336 0 is_stmt 1
 1615 019e 614B     		ldr	r3, .L102+60
 1616 01a0 1B68     		ldr	r3, [r3]
 1617 01a2 002B     		cmp	r3, #0
 1618 01a4 40F01381 		bne	.L63
 337:.\main.c      ****                         {
 338:.\main.c      ****                             actionDebounce++;
 1619              		.loc 1 338 0
 1620 01a8 FB8F     		ldrh	r3, [r7, #62]
 1621 01aa 0133     		adds	r3, r3, #1
 1622 01ac FB87     		strh	r3, [r7, #62]	@ movhi
 339:.\main.c      ****                             if(actionDebounce >= 500)
 1623              		.loc 1 339 0
 1624 01ae FB8F     		ldrh	r3, [r7, #62]
 1625 01b0 B3F5FA7F 		cmp	r3, #500
 1626 01b4 C0F00B81 		bcc	.L63
 1627              	.LBB5:
 340:.\main.c      ****                             {
 341:.\main.c      ****                                 char mes[16];
 342:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1628              		.loc 1 342 0
 1629 01b8 5B4B     		ldr	r3, .L102+64
 1630 01ba 1B88     		ldrh	r3, [r3]
 1631 01bc 1BB2     		sxth	r3, r3
 1632 01be 07F12402 		add	r2, r7, #36
 1633 01c2 1046     		mov	r0, r2
 1634 01c4 5949     		ldr	r1, .L102+68
 1635 01c6 1A46     		mov	r2, r3
 1636 01c8 FFF7FEFF 		bl	sprintf
 343:.\main.c      ****                                  UART_PutString(mes);
 1637              		.loc 1 343 0
 1638 01cc 07F12403 		add	r3, r7, #36
 1639 01d0 1846     		mov	r0, r3
 1640 01d2 FFF7FEFF 		bl	UART_PutString
 344:.\main.c      ****                             if(reached_target == 1)
 1641              		.loc 1 344 0
 1642 01d6 564B     		ldr	r3, .L102+72
 1643 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1644 01da 012B     		cmp	r3, #1
 1645 01dc 40F0F780 		bne	.L63
 1646              	.LBB6:
 345:.\main.c      ****                             {
 346:.\main.c      ****                                 if(nextStep == 'D')
 1647              		.loc 1 346 0
 1648 01e0 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1649 01e4 442B     		cmp	r3, #68
 1650 01e6 0CD1     		bne	.L65
 347:.\main.c      ****                                 {
 348:.\main.c      ****                                     instructionCount += 2;
 1651              		.loc 1 348 0
 1652 01e8 4C4B     		ldr	r3, .L102+52
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 37


 1653 01ea 1B88     		ldrh	r3, [r3]
 1654 01ec 0233     		adds	r3, r3, #2
 1655 01ee 9AB2     		uxth	r2, r3
 1656 01f0 4A4B     		ldr	r3, .L102+52
 1657 01f2 1A80     		strh	r2, [r3]	@ movhi
 349:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1658              		.loc 1 349 0
 1659 01f4 494B     		ldr	r3, .L102+52
 1660 01f6 1B88     		ldrh	r3, [r3]
 1661 01f8 1A46     		mov	r2, r3
 1662 01fa 494B     		ldr	r3, .L102+56
 1663 01fc 9B5C     		ldrb	r3, [r3, r2]
 1664 01fe 87F83D30 		strb	r3, [r7, #61]
 1665              	.L65:
 350:.\main.c      ****                                 }
 351:.\main.c      ****                                 
 352:.\main.c      ****                                 sensorsDisabled = 1;
 1666              		.loc 1 352 0
 1667 0202 484B     		ldr	r3, .L102+60
 1668 0204 0122     		movs	r2, #1
 1669 0206 1A60     		str	r2, [r3]
 353:.\main.c      ****                                 UART_PutString("Trigger intersection\r\n");
 1670              		.loc 1 353 0
 1671 0208 4A48     		ldr	r0, .L102+76
 1672 020a FFF7FEFF 		bl	UART_PutString
 354:.\main.c      ****                                 UART_PutString("Deadzone enter\r\n");
 1673              		.loc 1 354 0
 1674 020e 4A48     		ldr	r0, .L102+80
 1675 0210 FFF7FEFF 		bl	UART_PutString
 355:.\main.c      ****                                 deadzone = 1;
 1676              		.loc 1 355 0
 1677 0214 494B     		ldr	r3, .L102+84
 1678 0216 0122     		movs	r2, #1
 1679 0218 1A70     		strb	r2, [r3]
 356:.\main.c      ****                                 
 357:.\main.c      ****                                 accum_dist = 0;
 1680              		.loc 1 357 0
 1681 021a 434B     		ldr	r3, .L102+64
 1682 021c 0022     		movs	r2, #0
 1683 021e 1A80     		strh	r2, [r3]	@ movhi
 358:.\main.c      ****                                 uint8 nextStepDist;
 359:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1684              		.loc 1 359 0
 1685 0220 3E4B     		ldr	r3, .L102+52
 1686 0222 1B88     		ldrh	r3, [r3]
 1687 0224 1A46     		mov	r2, r3
 1688 0226 464B     		ldr	r3, .L102+88
 1689 0228 1B88     		ldrh	r3, [r3]
 1690 022a 053B     		subs	r3, r3, #5
 1691 022c 9A42     		cmp	r2, r3
 1692 022e 07DC     		bgt	.L66
 1693              		.loc 1 359 0 is_stmt 0 discriminator 1
 1694 0230 3A4B     		ldr	r3, .L102+52
 1695 0232 1B88     		ldrh	r3, [r3]
 1696 0234 0333     		adds	r3, r3, #3
 1697 0236 3A4A     		ldr	r2, .L102+56
 1698 0238 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 38


 1699 023a 87F83C30 		strb	r3, [r7, #60]
 1700 023e 02E0     		b	.L67
 1701              	.L66:
 360:.\main.c      ****                                 else nextStepDist = 0;
 1702              		.loc 1 360 0 is_stmt 1
 1703 0240 0023     		movs	r3, #0
 1704 0242 87F83C30 		strb	r3, [r7, #60]
 1705              	.L67:
 361:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1706              		.loc 1 361 0
 1707 0246 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1708 024a 9BB2     		uxth	r3, r3
 1709 024c 1A46     		mov	r2, r3	@ movhi
 1710 024e 9200     		lsls	r2, r2, #2
 1711 0250 1344     		add	r3, r3, r2
 1712 0252 1A46     		mov	r2, r3	@ movhi
 1713 0254 D200     		lsls	r2, r2, #3
 1714 0256 D31A     		subs	r3, r2, r3
 1715 0258 9B00     		lsls	r3, r3, #2
 1716 025a 9BB2     		uxth	r3, r3
 1717 025c 9AB2     		uxth	r2, r3
 1718 025e 394B     		ldr	r3, .L102+92
 1719 0260 1A80     		strh	r2, [r3]	@ movhi
 362:.\main.c      ****                                 
 363:.\main.c      ****                                 
 364:.\main.c      ****                                 
 365:.\main.c      ****                                 switch(nextStep)
 1720              		.loc 1 365 0
 1721 0262 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1722 0266 4C3B     		subs	r3, r3, #76
 1723 0268 092B     		cmp	r3, #9
 1724 026a 7BD8     		bhi	.L100
 1725 026c 01A2     		adr	r2, .L70
 1726 026e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1727 0272 00BF     		.p2align 2
 1728              	.L70:
 1729 0274 AB020000 		.word	.L69+1
 1730 0278 65030000 		.word	.L100+1
 1731 027c 65030000 		.word	.L100+1
 1732 0280 65030000 		.word	.L100+1
 1733 0284 65030000 		.word	.L100+1
 1734 0288 65030000 		.word	.L100+1
 1735 028c C9020000 		.word	.L71+1
 1736 0290 9D020000 		.word	.L72+1
 1737 0294 65030000 		.word	.L100+1
 1738 0298 49030000 		.word	.L73+1
 1739              		.p2align 1
 1740              	.L72:
 366:.\main.c      ****                                 {
 367:.\main.c      ****                                     case 'S':
 368:.\main.c      ****                                         inittrackLineZ();
 1741              		.loc 1 368 0
 1742 029c FFF7FEFF 		bl	inittrackLineZ
 369:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1743              		.loc 1 369 0
 1744 02a0 42F21070 		movw	r0, #10000
 1745 02a4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 39


 370:.\main.c      ****                                         //do nothing
 371:.\main.c      ****                                     break;
 1746              		.loc 1 371 0
 1747 02a8 5DE0     		b	.L74
 1748              	.L69:
 372:.\main.c      ****                                     case 'L':
 373:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 374:.\main.c      ****                                         initTurnLeft();
 1749              		.loc 1 374 0
 1750 02aa FFF7FEFF 		bl	initTurnLeft
 375:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1751              		.loc 1 375 0
 1752 02ae 4CF25030 		movw	r0, #50000
 1753 02b2 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 376:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1754              		.loc 1 376 0
 1755 02b6 234B     		ldr	r3, .L102+92
 1756 02b8 1B88     		ldrh	r3, [r3]
 1757 02ba 9BB2     		uxth	r3, r3
 1758 02bc 863B     		subs	r3, r3, #134
 1759 02be 9BB2     		uxth	r3, r3
 1760 02c0 9AB2     		uxth	r2, r3
 1761 02c2 204B     		ldr	r3, .L102+92
 1762 02c4 1A80     		strh	r2, [r3]	@ movhi
 377:.\main.c      ****                                     break;
 1763              		.loc 1 377 0
 1764 02c6 4EE0     		b	.L74
 1765              	.L71:
 378:.\main.c      ****                                     case 'R':
 379:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 380:.\main.c      ****                                         initTurnRight();
 1766              		.loc 1 380 0
 1767 02c8 FFF7FEFF 		bl	initTurnRight
 381:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1768              		.loc 1 381 0
 1769 02cc 1D4B     		ldr	r3, .L102+92
 1770 02ce 1B88     		ldrh	r3, [r3]
 1771 02d0 9BB2     		uxth	r3, r3
 1772 02d2 863B     		subs	r3, r3, #134
 1773 02d4 9BB2     		uxth	r3, r3
 1774 02d6 9AB2     		uxth	r2, r3
 1775 02d8 1A4B     		ldr	r3, .L102+92
 1776 02da 1A80     		strh	r2, [r3]	@ movhi
 382:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 383:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1777              		.loc 1 383 0
 1778 02dc 4CF25030 		movw	r0, #50000
 1779 02e0 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 384:.\main.c      ****                                     break;
 1780              		.loc 1 384 0
 1781 02e4 3FE0     		b	.L74
 1782              	.L103:
 1783 02e6 00BF     		.align	2
 1784              	.L102:
 1785 02e8 00000000 		.word	isr_quad1
 1786 02ec 00000000 		.word	isr_turn_timer
 1787 02f0 00000000 		.word	button
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 40


 1788 02f4 00000000 		.word	isr_deadzone
 1789 02f8 00000000 		.word	BIN_ENABLED
 1790 02fc 00000000 		.word	BT_ENABLED
 1791 0300 00000000 		.word	frontSensors
 1792 0304 00000000 		.word	track_mode
 1793 0308 00000000 		.word	movement_state
 1794 030c 00000000 		.word	initial_pos_valid
 1795 0310 00000000 		.word	system_state
 1796 0314 00000000 		.word	initial_x_pos
 1797 0318 00000000 		.word	initial_y_pos
 1798 031c 00000000 		.word	instructionCount
 1799 0320 00000000 		.word	instructions
 1800 0324 00000000 		.word	sensorsDisabled
 1801 0328 00000000 		.word	accum_dist
 1802 032c 24000000 		.word	.LC2
 1803 0330 00000000 		.word	reached_target
 1804 0334 38000000 		.word	.LC3
 1805 0338 50000000 		.word	.LC4
 1806 033c 00000000 		.word	deadzone
 1807 0340 00000000 		.word	instructionLength
 1808 0344 00000000 		.word	target_distance_quad
 1809              	.L73:
 385:.\main.c      ****                                     case 'U':
 386:.\main.c      ****                                         // Direction not tracked any more
 387:.\main.c      ****                                         initTurnU();
 1810              		.loc 1 387 0
 1811 0348 FFF7FEFF 		bl	initTurnU
 388:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1812              		.loc 1 388 0
 1813 034c A448     		ldr	r0, .L104
 1814 034e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 389:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 1815              		.loc 1 389 0
 1816 0352 A44B     		ldr	r3, .L104+4
 1817 0354 1B88     		ldrh	r3, [r3]
 1818 0356 9BB2     		uxth	r3, r3
 1819 0358 5D3B     		subs	r3, r3, #93
 1820 035a 9BB2     		uxth	r3, r3
 1821 035c 9AB2     		uxth	r2, r3
 1822 035e A14B     		ldr	r3, .L104+4
 1823 0360 1A80     		strh	r2, [r3]	@ movhi
 390:.\main.c      ****                                         //target_distance_quad += 208;
 391:.\main.c      ****                                     break;
 1824              		.loc 1 391 0
 1825 0362 00E0     		b	.L74
 1826              	.L100:
 392:.\main.c      ****                                     
 393:.\main.c      ****                                     default:
 394:.\main.c      ****                                         //do nothing
 395:.\main.c      ****                                         break;
 1827              		.loc 1 395 0
 1828 0364 00BF     		nop
 1829              	.L74:
 396:.\main.c      ****                                 }
 397:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1830              		.loc 1 397 0
 1831 0366 9F4B     		ldr	r3, .L104+4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 41


 1832 0368 1B88     		ldrh	r3, [r3]
 1833 036a 1BB2     		sxth	r3, r3
 1834 036c 002B     		cmp	r3, #0
 1835 036e 02DA     		bge	.L75
 1836              		.loc 1 397 0 is_stmt 0 discriminator 1
 1837 0370 9C4B     		ldr	r3, .L104+4
 1838 0372 0022     		movs	r2, #0
 1839 0374 1A80     		strh	r2, [r3]	@ movhi
 1840              	.L75:
 398:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1841              		.loc 1 398 0 is_stmt 1
 1842 0376 9B4B     		ldr	r3, .L104+4
 1843 0378 1B88     		ldrh	r3, [r3]
 1844 037a 1BB2     		sxth	r3, r3
 1845 037c 07F12402 		add	r2, r7, #36
 1846 0380 1046     		mov	r0, r2
 1847 0382 9949     		ldr	r1, .L104+8
 1848 0384 1A46     		mov	r2, r3
 1849 0386 FFF7FEFF 		bl	sprintf
 399:.\main.c      ****                                  UART_PutString(mes);
 1850              		.loc 1 399 0
 1851 038a 07F12403 		add	r3, r7, #36
 1852 038e 1846     		mov	r0, r3
 1853 0390 FFF7FEFF 		bl	UART_PutString
 400:.\main.c      ****                                 
 401:.\main.c      ****                                 Timer_Deadzone_Start();
 1854              		.loc 1 401 0
 1855 0394 FFF7FEFF 		bl	Timer_Deadzone_Start
 402:.\main.c      ****                                 reached_target = 0;
 1856              		.loc 1 402 0
 1857 0398 944B     		ldr	r3, .L104+12
 1858 039a 0022     		movs	r2, #0
 1859 039c 1A70     		strb	r2, [r3]
 403:.\main.c      ****                                 overshot_target = 0;
 1860              		.loc 1 403 0
 1861 039e 944B     		ldr	r3, .L104+16
 1862 03a0 0022     		movs	r2, #0
 1863 03a2 1A70     		strb	r2, [r3]
 404:.\main.c      ****                                 instructionCount += 2;
 1864              		.loc 1 404 0
 1865 03a4 934B     		ldr	r3, .L104+20
 1866 03a6 1B88     		ldrh	r3, [r3]
 1867 03a8 0233     		adds	r3, r3, #2
 1868 03aa 9AB2     		uxth	r2, r3
 1869 03ac 914B     		ldr	r3, .L104+20
 1870 03ae 1A80     		strh	r2, [r3]	@ movhi
 405:.\main.c      ****                                 sprintf(mes, "instr count:%d\r\n", instructionCount);
 1871              		.loc 1 405 0
 1872 03b0 904B     		ldr	r3, .L104+20
 1873 03b2 1B88     		ldrh	r3, [r3]
 1874 03b4 1A46     		mov	r2, r3
 1875 03b6 07F12403 		add	r3, r7, #36
 1876 03ba 1846     		mov	r0, r3
 1877 03bc 8E49     		ldr	r1, .L104+24
 1878 03be FFF7FEFF 		bl	sprintf
 406:.\main.c      ****                                 UART_PutString(mes);
 1879              		.loc 1 406 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 42


 1880 03c2 07F12403 		add	r3, r7, #36
 1881 03c6 1846     		mov	r0, r3
 1882 03c8 FFF7FEFF 		bl	UART_PutString
 1883              	.LBE6:
 1884              	.LBE5:
 336:.\main.c      ****                         {
 1885              		.loc 1 336 0
 1886 03cc 88E1     		b	.L55
 1887              	.L63:
 336:.\main.c      ****                         {
 1888              		.loc 1 336 0 is_stmt 0 discriminator 1
 1889 03ce 87E1     		b	.L55
 1890              	.L62:
 407:.\main.c      ****                                 
 408:.\main.c      ****                             }
 409:.\main.c      ****                             }
 410:.\main.c      ****                         }
 411:.\main.c      ****                     }
 412:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1891              		.loc 1 412 0 is_stmt 1
 1892 03d0 8A4B     		ldr	r3, .L104+28
 1893 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1894 03d4 002B     		cmp	r3, #0
 1895 03d6 40F0D480 		bne	.L76
 1896              		.loc 1 412 0 is_stmt 0 discriminator 1
 1897 03da 884B     		ldr	r3, .L104+28
 1898 03dc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1899 03de 002B     		cmp	r3, #0
 1900 03e0 40F0CF80 		bne	.L76
 1901              		.loc 1 412 0 discriminator 2
 1902 03e4 854B     		ldr	r3, .L104+28
 1903 03e6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1904 03e8 002B     		cmp	r3, #0
 1905 03ea 40F0CA80 		bne	.L76
 1906              		.loc 1 412 0 discriminator 3
 1907 03ee 834B     		ldr	r3, .L104+28
 1908 03f0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1909 03f2 002B     		cmp	r3, #0
 1910 03f4 40F0C580 		bne	.L76
 1911              		.loc 1 412 0 discriminator 4
 1912 03f8 804B     		ldr	r3, .L104+28
 1913 03fa 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1914 03fc 002B     		cmp	r3, #0
 1915 03fe 40F0C080 		bne	.L76
 1916              		.loc 1 412 0 discriminator 5
 1917 0402 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1918 0406 552B     		cmp	r3, #85
 1919 0408 04D0     		beq	.L77
 1920              		.loc 1 412 0 discriminator 6
 1921 040a 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1922 040e 442B     		cmp	r3, #68
 1923 0410 40F0B780 		bne	.L76
 1924              	.L77:
 413:.\main.c      ****                     {
 414:.\main.c      ****                         if(sensorsDisabled == 0)
 1925              		.loc 1 414 0 is_stmt 1
 1926 0414 7A4B     		ldr	r3, .L104+32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 43


 1927 0416 1B68     		ldr	r3, [r3]
 1928 0418 002B     		cmp	r3, #0
 1929 041a 40F0B180 		bne	.L78
 415:.\main.c      ****                         {
 416:.\main.c      ****                                 if(nextStep == 'D')
 1930              		.loc 1 416 0
 1931 041e 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1932 0422 442B     		cmp	r3, #68
 1933 0424 17D1     		bne	.L79
 1934              	.LBB7:
 417:.\main.c      ****                                 {
 418:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1935              		.loc 1 418 0
 1936 0426 734B     		ldr	r3, .L104+20
 1937 0428 1B88     		ldrh	r3, [r3]
 1938 042a 0233     		adds	r3, r3, #2
 1939 042c 754A     		ldr	r2, .L104+36
 1940 042e D35C     		ldrb	r3, [r2, r3]
 1941 0430 87F83730 		strb	r3, [r7, #55]
 419:.\main.c      ****                                     if(nextInstruction == 'U')
 1942              		.loc 1 419 0
 1943 0434 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1944 0438 552B     		cmp	r3, #85
 1945 043a 0CD1     		bne	.L79
 420:.\main.c      ****                                     {
 421:.\main.c      ****                                         instructionCount += 2;
 1946              		.loc 1 421 0
 1947 043c 6D4B     		ldr	r3, .L104+20
 1948 043e 1B88     		ldrh	r3, [r3]
 1949 0440 0233     		adds	r3, r3, #2
 1950 0442 9AB2     		uxth	r2, r3
 1951 0444 6B4B     		ldr	r3, .L104+20
 1952 0446 1A80     		strh	r2, [r3]	@ movhi
 422:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1953              		.loc 1 422 0
 1954 0448 6A4B     		ldr	r3, .L104+20
 1955 044a 1B88     		ldrh	r3, [r3]
 1956 044c 1A46     		mov	r2, r3
 1957 044e 6D4B     		ldr	r3, .L104+36
 1958 0450 9B5C     		ldrb	r3, [r3, r2]
 1959 0452 87F83D30 		strb	r3, [r7, #61]
 1960              	.L79:
 1961              	.LBE7:
 423:.\main.c      ****                                     }
 424:.\main.c      ****                                 }
 425:.\main.c      ****                                 
 426:.\main.c      ****                                 if(nextStep == 'U')
 1962              		.loc 1 426 0
 1963 0456 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1964 045a 552B     		cmp	r3, #85
 1965 045c 40F09080 		bne	.L78
 427:.\main.c      ****                                 {
 428:.\main.c      ****                                     actionDebounce++;
 1966              		.loc 1 428 0
 1967 0460 FB8F     		ldrh	r3, [r7, #62]
 1968 0462 0133     		adds	r3, r3, #1
 1969 0464 FB87     		strh	r3, [r7, #62]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 44


 429:.\main.c      ****                                     if(actionDebounce >= 2600)
 1970              		.loc 1 429 0
 1971 0466 FB8F     		ldrh	r3, [r7, #62]
 1972 0468 40F62722 		movw	r2, #2599
 1973 046c 9342     		cmp	r3, r2
 1974 046e 40F28780 		bls	.L78
 430:.\main.c      ****                                     {
 431:.\main.c      ****                                         if(reached_target == 1)
 1975              		.loc 1 431 0
 1976 0472 5E4B     		ldr	r3, .L104+12
 1977 0474 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 0476 012B     		cmp	r3, #1
 1979 0478 40F08280 		bne	.L78
 1980              	.LBB8:
 432:.\main.c      ****                                         {
 433:.\main.c      ****                                     char mes[16];
 434:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1981              		.loc 1 434 0
 1982 047c 624B     		ldr	r3, .L104+40
 1983 047e 1B88     		ldrh	r3, [r3]
 1984 0480 1BB2     		sxth	r3, r3
 1985 0482 07F11402 		add	r2, r7, #20
 1986 0486 1046     		mov	r0, r2
 1987 0488 6049     		ldr	r1, .L104+44
 1988 048a 1A46     		mov	r2, r3
 1989 048c FFF7FEFF 		bl	sprintf
 435:.\main.c      ****                                      UART_PutString(mes);
 1990              		.loc 1 435 0
 1991 0490 07F11403 		add	r3, r7, #20
 1992 0494 1846     		mov	r0, r3
 1993 0496 FFF7FEFF 		bl	UART_PutString
 436:.\main.c      ****                                          accum_dist = 0;
 1994              		.loc 1 436 0
 1995 049a 5B4B     		ldr	r3, .L104+40
 1996 049c 0022     		movs	r2, #0
 1997 049e 1A80     		strh	r2, [r3]	@ movhi
 437:.\main.c      ****                                     uint8 nextStepDist;
 438:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 1998              		.loc 1 438 0
 1999 04a0 544B     		ldr	r3, .L104+20
 2000 04a2 1B88     		ldrh	r3, [r3]
 2001 04a4 1A46     		mov	r2, r3
 2002 04a6 5A4B     		ldr	r3, .L104+48
 2003 04a8 1B88     		ldrh	r3, [r3]
 2004 04aa 053B     		subs	r3, r3, #5
 2005 04ac 9A42     		cmp	r2, r3
 2006 04ae 07DC     		bgt	.L80
 2007              		.loc 1 438 0 is_stmt 0 discriminator 1
 2008 04b0 504B     		ldr	r3, .L104+20
 2009 04b2 1B88     		ldrh	r3, [r3]
 2010 04b4 0333     		adds	r3, r3, #3
 2011 04b6 534A     		ldr	r2, .L104+36
 2012 04b8 D35C     		ldrb	r3, [r2, r3]
 2013 04ba 87F83B30 		strb	r3, [r7, #59]
 2014 04be 02E0     		b	.L81
 2015              	.L80:
 439:.\main.c      ****                                     else nextStepDist = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 45


 2016              		.loc 1 439 0 is_stmt 1
 2017 04c0 0023     		movs	r3, #0
 2018 04c2 87F83B30 		strb	r3, [r7, #59]
 2019              	.L81:
 440:.\main.c      ****                                     
 441:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2020              		.loc 1 441 0
 2021 04c6 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 2022 04ca 9BB2     		uxth	r3, r3
 2023 04cc 1A46     		mov	r2, r3	@ movhi
 2024 04ce 9200     		lsls	r2, r2, #2
 2025 04d0 1344     		add	r3, r3, r2
 2026 04d2 1A46     		mov	r2, r3	@ movhi
 2027 04d4 D200     		lsls	r2, r2, #3
 2028 04d6 D31A     		subs	r3, r2, r3
 2029 04d8 9B00     		lsls	r3, r3, #2
 2030 04da 9BB2     		uxth	r3, r3
 2031 04dc 9AB2     		uxth	r2, r3
 2032 04de 414B     		ldr	r3, .L104+4
 2033 04e0 1A80     		strh	r2, [r3]	@ movhi
 442:.\main.c      ****                                     target_distance_quad -= U_OFFSET;
 2034              		.loc 1 442 0
 2035 04e2 404B     		ldr	r3, .L104+4
 2036 04e4 1B88     		ldrh	r3, [r3]
 2037 04e6 9BB2     		uxth	r3, r3
 2038 04e8 5D3B     		subs	r3, r3, #93
 2039 04ea 9BB2     		uxth	r3, r3
 2040 04ec 9AB2     		uxth	r2, r3
 2041 04ee 3D4B     		ldr	r3, .L104+4
 2042 04f0 1A80     		strh	r2, [r3]	@ movhi
 443:.\main.c      ****                                     //target_distance_quad += 208;
 444:.\main.c      ****                                     
 445:.\main.c      ****                                         UART_PutString("Trigger white light\r\n");
 2043              		.loc 1 445 0
 2044 04f2 4848     		ldr	r0, .L104+52
 2045 04f4 FFF7FEFF 		bl	UART_PutString
 446:.\main.c      ****                                         UART_PutString("Deadzone enter\r\n");
 2046              		.loc 1 446 0
 2047 04f8 4748     		ldr	r0, .L104+56
 2048 04fa FFF7FEFF 		bl	UART_PutString
 447:.\main.c      ****                                         
 448:.\main.c      ****                                         deadzone = 1;
 2049              		.loc 1 448 0
 2050 04fe 474B     		ldr	r3, .L104+60
 2051 0500 0122     		movs	r2, #1
 2052 0502 1A70     		strb	r2, [r3]
 449:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2053              		.loc 1 449 0
 2054 0504 3648     		ldr	r0, .L104
 2055 0506 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 450:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 2056              		.loc 1 450 0
 2057 050a 364B     		ldr	r3, .L104+4
 2058 050c 1B88     		ldrh	r3, [r3]
 2059 050e 1BB2     		sxth	r3, r3
 2060 0510 002B     		cmp	r3, #0
 2061 0512 02DA     		bge	.L82
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 46


 2062              		.loc 1 450 0 is_stmt 0 discriminator 1
 2063 0514 334B     		ldr	r3, .L104+4
 2064 0516 0022     		movs	r2, #0
 2065 0518 1A80     		strh	r2, [r3]	@ movhi
 2066              	.L82:
 451:.\main.c      ****                                         Timer_Deadzone_Start();
 2067              		.loc 1 451 0 is_stmt 1
 2068 051a FFF7FEFF 		bl	Timer_Deadzone_Start
 452:.\main.c      ****                                         actionDebounce = 0;
 2069              		.loc 1 452 0
 2070 051e 0023     		movs	r3, #0
 2071 0520 FB87     		strh	r3, [r7, #62]	@ movhi
 453:.\main.c      ****                                         sensorsDisabled = 1;
 2072              		.loc 1 453 0
 2073 0522 374B     		ldr	r3, .L104+32
 2074 0524 0122     		movs	r2, #1
 2075 0526 1A60     		str	r2, [r3]
 454:.\main.c      ****                                         initTurnU();
 2076              		.loc 1 454 0
 2077 0528 FFF7FEFF 		bl	initTurnU
 455:.\main.c      ****                                         reached_target = 0;
 2078              		.loc 1 455 0
 2079 052c 2F4B     		ldr	r3, .L104+12
 2080 052e 0022     		movs	r2, #0
 2081 0530 1A70     		strb	r2, [r3]
 456:.\main.c      ****                                         overshot_target = 0;
 2082              		.loc 1 456 0
 2083 0532 2F4B     		ldr	r3, .L104+16
 2084 0534 0022     		movs	r2, #0
 2085 0536 1A70     		strb	r2, [r3]
 457:.\main.c      ****                                         instructionCount += 2;
 2086              		.loc 1 457 0
 2087 0538 2E4B     		ldr	r3, .L104+20
 2088 053a 1B88     		ldrh	r3, [r3]
 2089 053c 0233     		adds	r3, r3, #2
 2090 053e 9AB2     		uxth	r2, r3
 2091 0540 2C4B     		ldr	r3, .L104+20
 2092 0542 1A80     		strh	r2, [r3]	@ movhi
 458:.\main.c      ****                                         
 459:.\main.c      ****                                         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2093              		.loc 1 459 0
 2094 0544 274B     		ldr	r3, .L104+4
 2095 0546 1B88     		ldrh	r3, [r3]
 2096 0548 1BB2     		sxth	r3, r3
 2097 054a 07F11402 		add	r2, r7, #20
 2098 054e 1046     		mov	r0, r2
 2099 0550 2549     		ldr	r1, .L104+8
 2100 0552 1A46     		mov	r2, r3
 2101 0554 FFF7FEFF 		bl	sprintf
 460:.\main.c      ****                                         UART_PutString(mes);
 2102              		.loc 1 460 0
 2103 0558 07F11403 		add	r3, r7, #20
 2104 055c 1846     		mov	r0, r3
 2105 055e FFF7FEFF 		bl	UART_PutString
 461:.\main.c      ****                                         sprintf(mes, "instr count:%d\r\n", instructionCount);
 2106              		.loc 1 461 0
 2107 0562 244B     		ldr	r3, .L104+20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 47


 2108 0564 1B88     		ldrh	r3, [r3]
 2109 0566 1A46     		mov	r2, r3
 2110 0568 07F11403 		add	r3, r7, #20
 2111 056c 1846     		mov	r0, r3
 2112 056e 2249     		ldr	r1, .L104+24
 2113 0570 FFF7FEFF 		bl	sprintf
 462:.\main.c      ****                                         UART_PutString(mes);
 2114              		.loc 1 462 0
 2115 0574 07F11403 		add	r3, r7, #20
 2116 0578 1846     		mov	r0, r3
 2117 057a FFF7FEFF 		bl	UART_PutString
 2118              	.LBE8:
 414:.\main.c      ****                         {
 2119              		.loc 1 414 0
 2120 057e AFE0     		b	.L55
 2121              	.L78:
 414:.\main.c      ****                         {
 2122              		.loc 1 414 0 is_stmt 0 discriminator 3
 2123 0580 AEE0     		b	.L55
 2124              	.L76:
 463:.\main.c      ****                                 }
 464:.\main.c      ****                                 }
 465:.\main.c      ****                             }
 466:.\main.c      ****                         }
 467:.\main.c      ****                     }
 468:.\main.c      ****                     else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U'))
 2125              		.loc 1 468 0 is_stmt 1
 2126 0582 1B4B     		ldr	r3, .L104+16
 2127 0584 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2128 0586 012B     		cmp	r3, #1
 2129 0588 40F0A580 		bne	.L83
 2130              		.loc 1 468 0 is_stmt 0 discriminator 1
 2131 058c 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2132 0590 442B     		cmp	r3, #68
 2133 0592 04D0     		beq	.L84
 2134              		.loc 1 468 0 discriminator 2
 2135 0594 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2136 0598 552B     		cmp	r3, #85
 2137 059a 40F09C80 		bne	.L83
 2138              	.L84:
 2139              	.LBB9:
 469:.\main.c      ****                     {
 470:.\main.c      ****                         
 471:.\main.c      ****                                 //instructionCount += 2;
 472:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 473:.\main.c      ****                                 char mes[16];
 474:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2140              		.loc 1 474 0 is_stmt 1
 2141 059e 1A4B     		ldr	r3, .L104+40
 2142 05a0 1B88     		ldrh	r3, [r3]
 2143 05a2 1BB2     		sxth	r3, r3
 2144 05a4 3A1D     		adds	r2, r7, #4
 2145 05a6 1046     		mov	r0, r2
 2146 05a8 1849     		ldr	r1, .L104+44
 2147 05aa 1A46     		mov	r2, r3
 2148 05ac FFF7FEFF 		bl	sprintf
 475:.\main.c      ****                                  UART_PutString(mes);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 48


 2149              		.loc 1 475 0
 2150 05b0 3B1D     		adds	r3, r7, #4
 2151 05b2 1846     		mov	r0, r3
 2152 05b4 FFF7FEFF 		bl	UART_PutString
 476:.\main.c      ****                                  accum_dist = 0;
 2153              		.loc 1 476 0
 2154 05b8 134B     		ldr	r3, .L104+40
 2155 05ba 0022     		movs	r2, #0
 2156 05bc 1A80     		strh	r2, [r3]	@ movhi
 477:.\main.c      ****                                 uint8 nextStepDist;
 478:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2157              		.loc 1 478 0
 2158 05be 0D4B     		ldr	r3, .L104+20
 2159 05c0 1B88     		ldrh	r3, [r3]
 2160 05c2 1A46     		mov	r2, r3
 2161 05c4 124B     		ldr	r3, .L104+48
 2162 05c6 1B88     		ldrh	r3, [r3]
 2163 05c8 053B     		subs	r3, r3, #5
 2164 05ca 9A42     		cmp	r2, r3
 2165 05cc 28DC     		bgt	.L85
 2166              		.loc 1 478 0 is_stmt 0 discriminator 1
 2167 05ce 094B     		ldr	r3, .L104+20
 2168 05d0 1B88     		ldrh	r3, [r3]
 2169 05d2 0333     		adds	r3, r3, #3
 2170 05d4 0B4A     		ldr	r2, .L104+36
 2171 05d6 D35C     		ldrb	r3, [r2, r3]
 2172 05d8 87F83A30 		strb	r3, [r7, #58]
 2173 05dc 23E0     		b	.L86
 2174              	.L105:
 2175 05de 00BF     		.align	2
 2176              	.L104:
 2177 05e0 905F0100 		.word	90000
 2178 05e4 00000000 		.word	target_distance_quad
 2179 05e8 64000000 		.word	.LC5
 2180 05ec 00000000 		.word	reached_target
 2181 05f0 00000000 		.word	overshot_target
 2182 05f4 00000000 		.word	instructionCount
 2183 05f8 78000000 		.word	.LC6
 2184 05fc 00000000 		.word	frontSensors
 2185 0600 00000000 		.word	sensorsDisabled
 2186 0604 00000000 		.word	instructions
 2187 0608 00000000 		.word	accum_dist
 2188 060c 24000000 		.word	.LC2
 2189 0610 00000000 		.word	instructionLength
 2190 0614 8C000000 		.word	.LC7
 2191 0618 50000000 		.word	.LC4
 2192 061c 00000000 		.word	deadzone
 2193              	.L85:
 479:.\main.c      ****                                 else nextStepDist = 0;
 2194              		.loc 1 479 0 is_stmt 1
 2195 0620 0023     		movs	r3, #0
 2196 0622 87F83A30 		strb	r3, [r7, #58]
 2197              	.L86:
 480:.\main.c      ****                                 
 481:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2198              		.loc 1 481 0
 2199 0626 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 49


 2200 062a 9BB2     		uxth	r3, r3
 2201 062c 1A46     		mov	r2, r3	@ movhi
 2202 062e 9200     		lsls	r2, r2, #2
 2203 0630 1344     		add	r3, r3, r2
 2204 0632 1A46     		mov	r2, r3	@ movhi
 2205 0634 D200     		lsls	r2, r2, #3
 2206 0636 D31A     		subs	r3, r2, r3
 2207 0638 9B00     		lsls	r3, r3, #2
 2208 063a 9BB2     		uxth	r3, r3
 2209 063c 9AB2     		uxth	r2, r3
 2210 063e 414B     		ldr	r3, .L106
 2211 0640 1A80     		strh	r2, [r3]	@ movhi
 482:.\main.c      ****                                 target_distance_quad -= U_OFFSET;
 2212              		.loc 1 482 0
 2213 0642 404B     		ldr	r3, .L106
 2214 0644 1B88     		ldrh	r3, [r3]
 2215 0646 9BB2     		uxth	r3, r3
 2216 0648 5D3B     		subs	r3, r3, #93
 2217 064a 9BB2     		uxth	r3, r3
 2218 064c 9AB2     		uxth	r2, r3
 2219 064e 3D4B     		ldr	r3, .L106
 2220 0650 1A80     		strh	r2, [r3]	@ movhi
 483:.\main.c      ****                                 
 484:.\main.c      ****                                     UART_PutString("Trigger quad\r\n");
 2221              		.loc 1 484 0
 2222 0652 3D48     		ldr	r0, .L106+4
 2223 0654 FFF7FEFF 		bl	UART_PutString
 485:.\main.c      ****                                     if(nextStep == 'U')
 2224              		.loc 1 485 0
 2225 0658 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 2226 065c 552B     		cmp	r3, #85
 2227 065e 0CD1     		bne	.L87
 486:.\main.c      ****                                     {
 487:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2228              		.loc 1 487 0
 2229 0660 3A48     		ldr	r0, .L106+8
 2230 0662 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 488:.\main.c      ****                                         initTurnU();
 2231              		.loc 1 488 0
 2232 0666 FFF7FEFF 		bl	initTurnU
 489:.\main.c      ****                                         //target_distance_quad += 208;
 490:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2233              		.loc 1 490 0
 2234 066a 364B     		ldr	r3, .L106
 2235 066c 1B88     		ldrh	r3, [r3]
 2236 066e 9BB2     		uxth	r3, r3
 2237 0670 863B     		subs	r3, r3, #134
 2238 0672 9BB2     		uxth	r3, r3
 2239 0674 9AB2     		uxth	r2, r3
 2240 0676 334B     		ldr	r3, .L106
 2241 0678 1A80     		strh	r2, [r3]	@ movhi
 2242              	.L87:
 491:.\main.c      ****                                     }
 492:.\main.c      ****                                     else if (nextStep == 'D')
 493:.\main.c      ****                                     {
 494:.\main.c      ****                                         //do nothing
 495:.\main.c      ****                                     }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 50


 496:.\main.c      **** //                                    UART_PutString("Deadzone entered!\r\n");
 497:.\main.c      **** //                                    
 498:.\main.c      **** //                                    
 499:.\main.c      **** //                                    actionDebounce = 0;
 500:.\main.c      **** //                                    sensorsDisabled = 1;
 501:.\main.c      **** //                                    
 502:.\main.c      **** //                                     switch(nextStep)
 503:.\main.c      **** //                                {
 504:.\main.c      **** //                                    case 'S':
 505:.\main.c      **** //                                        inittrackLineZ();
 506:.\main.c      **** //                                         Timer_Deadzone_WriteCounter(S_DEADZONE);
 507:.\main.c      **** //                                        //do nothing
 508:.\main.c      **** //                                    break;
 509:.\main.c      **** //                                    case 'L':
 510:.\main.c      **** //                                        //if(tracked_direction == 1) tracked_direction = 4; else 
 511:.\main.c      **** //                                        initTurnLeft();
 512:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 513:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 514:.\main.c      **** //                                    break;
 515:.\main.c      **** //                                    case 'R':
 516:.\main.c      **** //                                        //if(tracked_direction == 4) tracked_direction = 1; else 
 517:.\main.c      **** //                                        initTurnRight();
 518:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 519:.\main.c      **** //                                        //target_distance_quad += (208 - TURN_OFFSET);
 520:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 521:.\main.c      **** //                                        
 522:.\main.c      **** //                                    break;
 523:.\main.c      **** //                                    case 'U':
 524:.\main.c      **** //                                        // Direction not tracked any more
 525:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(U_DEADZONE);
 526:.\main.c      **** //                                        initTurnU();
 527:.\main.c      **** //                                        //target_distance_quad += 208;
 528:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 529:.\main.c      **** //                                    break;
 530:.\main.c      **** //                                    default:
 531:.\main.c      **** //                                        //do nothing
 532:.\main.c      **** //                                        break;
 533:.\main.c      **** //                                }
 534:.\main.c      **** //                                    
 535:.\main.c      ****                                     reached_target = 0;
 2243              		.loc 1 535 0
 2244 067a 354B     		ldr	r3, .L106+12
 2245 067c 0022     		movs	r2, #0
 2246 067e 1A70     		strb	r2, [r3]
 536:.\main.c      ****                                     overshot_target = 0;
 2247              		.loc 1 536 0
 2248 0680 344B     		ldr	r3, .L106+16
 2249 0682 0022     		movs	r2, #0
 2250 0684 1A70     		strb	r2, [r3]
 537:.\main.c      ****                                     instructionCount += 2;
 2251              		.loc 1 537 0
 2252 0686 344B     		ldr	r3, .L106+20
 2253 0688 1B88     		ldrh	r3, [r3]
 2254 068a 0233     		adds	r3, r3, #2
 2255 068c 9AB2     		uxth	r2, r3
 2256 068e 324B     		ldr	r3, .L106+20
 2257 0690 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 51


 538:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2258              		.loc 1 538 0
 2259 0692 2C4B     		ldr	r3, .L106
 2260 0694 1B88     		ldrh	r3, [r3]
 2261 0696 1BB2     		sxth	r3, r3
 2262 0698 002B     		cmp	r3, #0
 2263 069a 02DA     		bge	.L88
 2264              		.loc 1 538 0 is_stmt 0 discriminator 1
 2265 069c 294B     		ldr	r3, .L106
 2266 069e 0022     		movs	r2, #0
 2267 06a0 1A80     		strh	r2, [r3]	@ movhi
 2268              	.L88:
 539:.\main.c      ****                                     //Timer_Deadzone_Start();
 540:.\main.c      ****                                     //deadzone = 1;
 541:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2269              		.loc 1 541 0 is_stmt 1 discriminator 5
 2270 06a2 284B     		ldr	r3, .L106
 2271 06a4 1B88     		ldrh	r3, [r3]
 2272 06a6 1BB2     		sxth	r3, r3
 2273 06a8 3A1D     		adds	r2, r7, #4
 2274 06aa 1046     		mov	r0, r2
 2275 06ac 2B49     		ldr	r1, .L106+24
 2276 06ae 1A46     		mov	r2, r3
 2277 06b0 FFF7FEFF 		bl	sprintf
 542:.\main.c      ****                                     UART_PutString(mes);
 2278              		.loc 1 542 0 discriminator 5
 2279 06b4 3B1D     		adds	r3, r7, #4
 2280 06b6 1846     		mov	r0, r3
 2281 06b8 FFF7FEFF 		bl	UART_PutString
 543:.\main.c      ****                                     sprintf(mes, "instr count:%d\r\n", instructionCount);
 2282              		.loc 1 543 0 discriminator 5
 2283 06bc 264B     		ldr	r3, .L106+20
 2284 06be 1B88     		ldrh	r3, [r3]
 2285 06c0 1A46     		mov	r2, r3
 2286 06c2 3B1D     		adds	r3, r7, #4
 2287 06c4 1846     		mov	r0, r3
 2288 06c6 2649     		ldr	r1, .L106+28
 2289 06c8 FFF7FEFF 		bl	sprintf
 544:.\main.c      ****                                     UART_PutString(mes);
 2290              		.loc 1 544 0 discriminator 5
 2291 06cc 3B1D     		adds	r3, r7, #4
 2292 06ce 1846     		mov	r0, r3
 2293 06d0 FFF7FEFF 		bl	UART_PutString
 2294              	.LBE9:
 469:.\main.c      ****                         
 2295              		.loc 1 469 0 discriminator 5
 2296 06d4 04E0     		b	.L55
 2297              	.L83:
 545:.\main.c      ****                     }
 546:.\main.c      ****                     else
 547:.\main.c      ****                     {
 548:.\main.c      ****                         inittrackLineZ();
 2298              		.loc 1 548 0
 2299 06d6 FFF7FEFF 		bl	inittrackLineZ
 549:.\main.c      ****                         actionDebounce = 0;
 2300              		.loc 1 549 0
 2301 06da 0023     		movs	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 52


 2302 06dc FB87     		strh	r3, [r7, #62]	@ movhi
 2303              	.LBE4:
 550:.\main.c      ****                     }
 551:.\main.c      ****                 }
 552:.\main.c      ****                 break;
 2304              		.loc 1 552 0
 2305 06de FFE7     		b	.L101
 2306              	.L55:
 2307              	.L101:
 2308 06e0 00BF     		nop
 2309              	.L42:
 553:.\main.c      ****         }
 554:.\main.c      ****         
 555:.\main.c      ****         switch(movement_state)
 2310              		.loc 1 555 0
 2311 06e2 204B     		ldr	r3, .L106+32
 2312 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2313 06e6 072B     		cmp	r3, #7
 2314 06e8 3FF6BDAC 		bhi	.L99
 2315 06ec 01A2     		adr	r2, .L91
 2316 06ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2317 06f2 00BF     		.p2align 2
 2318              	.L91:
 2319 06f4 15070000 		.word	.L90+1
 2320 06f8 1B070000 		.word	.L92+1
 2321 06fc 21070000 		.word	.L93+1
 2322 0700 2D070000 		.word	.L94+1
 2323 0704 33070000 		.word	.L95+1
 2324 0708 39070000 		.word	.L96+1
 2325 070c 3F070000 		.word	.L97+1
 2326 0710 27070000 		.word	.L98+1
 2327              		.p2align 1
 2328              	.L90:
 556:.\main.c      ****         {
 557:.\main.c      ****             case DRIVE:
 558:.\main.c      ****                 driveForwards();
 2329              		.loc 1 558 0
 2330 0714 FFF7FEFF 		bl	driveForwards
 559:.\main.c      ****             break;
 2331              		.loc 1 559 0
 2332 0718 13E0     		b	.L89
 2333              	.L92:
 560:.\main.c      ****             case LTURN:
 561:.\main.c      ****                 turnLeft();
 2334              		.loc 1 561 0
 2335 071a FFF7FEFF 		bl	turnLeft
 562:.\main.c      ****             break;
 2336              		.loc 1 562 0
 2337 071e 10E0     		b	.L89
 2338              	.L93:
 563:.\main.c      ****             case RTURN:
 564:.\main.c      ****                 turnRight();
 2339              		.loc 1 564 0
 2340 0720 FFF7FEFF 		bl	turnRight
 565:.\main.c      ****             break;
 2341              		.loc 1 565 0
 2342 0724 0DE0     		b	.L89
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 53


 2343              	.L98:
 566:.\main.c      ****             case UTURN:
 567:.\main.c      ****                 turnU();
 2344              		.loc 1 567 0
 2345 0726 FFF7FEFF 		bl	turnU
 568:.\main.c      ****             break;
 2346              		.loc 1 568 0
 2347 072a 0AE0     		b	.L89
 2348              	.L94:
 569:.\main.c      ****             case STOPPED:
 570:.\main.c      ****                 brakeMotor();
 2349              		.loc 1 570 0
 2350 072c FFF7FEFF 		bl	brakeMotor
 571:.\main.c      ****             break;
 2351              		.loc 1 571 0
 2352 0730 07E0     		b	.L89
 2353              	.L95:
 572:.\main.c      ****             case TRACKING:
 573:.\main.c      ****                 trackLine();
 2354              		.loc 1 573 0
 2355 0732 FFF7FEFF 		bl	trackLine
 574:.\main.c      ****             break;
 2356              		.loc 1 574 0
 2357 0736 04E0     		b	.L89
 2358              	.L96:
 575:.\main.c      ****             case TRACKING_U:
 576:.\main.c      ****                 trackLineU();
 2359              		.loc 1 576 0
 2360 0738 FFF7FEFF 		bl	trackLineU
 577:.\main.c      ****             break;
 2361              		.loc 1 577 0
 2362 073c 01E0     		b	.L89
 2363              	.L97:
 578:.\main.c      ****             case TRACKING_SOFT:
 579:.\main.c      ****                 trackLineZ();
 2364              		.loc 1 579 0
 2365 073e FFF7FEFF 		bl	trackLineZ
 2366              	.L89:
 580:.\main.c      ****         }      
 581:.\main.c      ****     }   
 2367              		.loc 1 581 0
 2368 0742 90E4     		b	.L99
 2369              	.L107:
 2370              		.align	2
 2371              	.L106:
 2372 0744 00000000 		.word	target_distance_quad
 2373 0748 A4000000 		.word	.LC8
 2374 074c 905F0100 		.word	90000
 2375 0750 00000000 		.word	reached_target
 2376 0754 00000000 		.word	overshot_target
 2377 0758 00000000 		.word	instructionCount
 2378 075c 64000000 		.word	.LC5
 2379 0760 78000000 		.word	.LC6
 2380 0764 00000000 		.word	movement_state
 2381              		.cfi_endproc
 2382              	.LFE71:
 2383              		.size	main, .-main
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 54


 2384              		.section	.text.handle_rx_binary,"ax",%progbits
 2385              		.align	2
 2386              		.global	handle_rx_binary
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	handle_rx_binary, %function
 2390              	handle_rx_binary:
 2391              	.LFB72:
 582:.\main.c      **** }
 583:.\main.c      **** 
 584:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 585:.\main.c      **** 
 586:.\main.c      **** void handle_rx_binary()
 587:.\main.c      **** {
 2392              		.loc 1 587 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 32
 2395              		@ frame_needed = 1, uses_anonymous_args = 0
 2396              		@ link register save eliminated.
 2397 0000 80B4     		push	{r7}
 2398              		.cfi_def_cfa_offset 4
 2399              		.cfi_offset 7, -4
 2400 0002 89B0     		sub	sp, sp, #36
 2401              		.cfi_def_cfa_offset 40
 2402 0004 00AF     		add	r7, sp, #0
 2403              		.cfi_def_cfa_register 7
 588:.\main.c      ****     if(flag_rx == 1)
 2404              		.loc 1 588 0
 2405 0006 524B     		ldr	r3, .L128
 2406 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2407 000a 012B     		cmp	r3, #1
 2408 000c 40F09A80 		bne	.L108
 2409              	.LBB10:
 589:.\main.c      ****     {    
 590:.\main.c      ****         flag_rx = 0;
 2410              		.loc 1 590 0
 2411 0010 4F4B     		ldr	r3, .L128
 2412 0012 0022     		movs	r2, #0
 2413 0014 1A70     		strb	r2, [r3]
 591:.\main.c      ****         
 592:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2414              		.loc 1 592 0
 2415 0016 4F4B     		ldr	r3, .L128+4
 2416 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2417 001a 1B02     		lsls	r3, r3, #8
 2418 001c 9AB2     		uxth	r2, r3
 2419 001e 4D4B     		ldr	r3, .L128+4
 2420 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2421 0022 9BB2     		uxth	r3, r3
 2422 0024 1343     		orrs	r3, r3, r2
 2423 0026 9BB2     		uxth	r3, r3
 2424 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 593:.\main.c      ****         char byte_packet[12];
 594:.\main.c      ****         char string_packet[12];
 595:.\main.c      ****         
 596:.\main.c      ****         switch(byteCount)
 2425              		.loc 1 596 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 55


 2426 002a 4B4B     		ldr	r3, .L128+8
 2427 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2428 002e 043B     		subs	r3, r3, #4
 2429 0030 1E2B     		cmp	r3, #30
 2430 0032 00F28780 		bhi	.L108
 2431 0036 01A2     		adr	r2, .L112
 2432 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2433              		.p2align 2
 2434              	.L112:
 2435 003c B9000000 		.word	.L111+1
 2436 0040 45010000 		.word	.L108+1
 2437 0044 CD000000 		.word	.L113+1
 2438 0048 45010000 		.word	.L108+1
 2439 004c D5000000 		.word	.L114+1
 2440 0050 45010000 		.word	.L108+1
 2441 0054 DD000000 		.word	.L115+1
 2442 0058 45010000 		.word	.L108+1
 2443 005c E5000000 		.word	.L116+1
 2444 0060 45010000 		.word	.L108+1
 2445 0064 ED000000 		.word	.L117+1
 2446 0068 45010000 		.word	.L108+1
 2447 006c F5000000 		.word	.L118+1
 2448 0070 45010000 		.word	.L108+1
 2449 0074 FD000000 		.word	.L119+1
 2450 0078 45010000 		.word	.L108+1
 2451 007c 05010000 		.word	.L120+1
 2452 0080 45010000 		.word	.L108+1
 2453 0084 0D010000 		.word	.L121+1
 2454 0088 45010000 		.word	.L108+1
 2455 008c 15010000 		.word	.L122+1
 2456 0090 45010000 		.word	.L108+1
 2457 0094 1D010000 		.word	.L123+1
 2458 0098 45010000 		.word	.L108+1
 2459 009c 25010000 		.word	.L124+1
 2460 00a0 45010000 		.word	.L108+1
 2461 00a4 2D010000 		.word	.L125+1
 2462 00a8 45010000 		.word	.L108+1
 2463 00ac 35010000 		.word	.L126+1
 2464 00b0 45010000 		.word	.L108+1
 2465 00b4 3D010000 		.word	.L127+1
 2466              		.p2align 1
 2467              	.L111:
 597:.\main.c      ****         {
 598:.\main.c      ****             case 4:
 599:.\main.c      ****                 buffer_state.rssi = packet[0];
 2468              		.loc 1 599 0
 2469 00b8 264B     		ldr	r3, .L128+4
 2470 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2471 00bc DAB2     		uxtb	r2, r3
 2472 00be 274B     		ldr	r3, .L128+12
 2473 00c0 1A70     		strb	r2, [r3]
 600:.\main.c      ****                 buffer_state.index = packet[1];
 2474              		.loc 1 600 0
 2475 00c2 244B     		ldr	r3, .L128+4
 2476 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2477 00c6 254B     		ldr	r3, .L128+12
 2478 00c8 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 56


 601:.\main.c      ****             break;
 2479              		.loc 1 601 0
 2480 00ca 3BE0     		b	.L108
 2481              	.L113:
 602:.\main.c      ****             case 6:
 603:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2482              		.loc 1 603 0
 2483 00cc FA8B     		ldrh	r2, [r7, #30]
 2484 00ce 234B     		ldr	r3, .L128+12
 2485 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 604:.\main.c      ****             break;
 2486              		.loc 1 604 0
 2487 00d2 37E0     		b	.L108
 2488              	.L114:
 605:.\main.c      ****             case 8:
 606:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2489              		.loc 1 606 0
 2490 00d4 FA8B     		ldrh	r2, [r7, #30]
 2491 00d6 214B     		ldr	r3, .L128+12
 2492 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 607:.\main.c      ****             break;
 2493              		.loc 1 607 0
 2494 00da 33E0     		b	.L108
 2495              	.L115:
 608:.\main.c      ****             case 10:
 609:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2496              		.loc 1 609 0
 2497 00dc FA8B     		ldrh	r2, [r7, #30]
 2498 00de 1F4B     		ldr	r3, .L128+12
 2499 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 610:.\main.c      ****             break;
 2500              		.loc 1 610 0
 2501 00e2 2FE0     		b	.L108
 2502              	.L116:
 611:.\main.c      ****             case 12:
 612:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2503              		.loc 1 612 0
 2504 00e4 FA8B     		ldrh	r2, [r7, #30]
 2505 00e6 1D4B     		ldr	r3, .L128+12
 2506 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 613:.\main.c      ****             break;
 2507              		.loc 1 613 0
 2508 00ea 2BE0     		b	.L108
 2509              	.L117:
 614:.\main.c      ****             case 14:
 615:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2510              		.loc 1 615 0
 2511 00ec FA8B     		ldrh	r2, [r7, #30]
 2512 00ee 1B4B     		ldr	r3, .L128+12
 2513 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 616:.\main.c      ****             break;
 2514              		.loc 1 616 0
 2515 00f2 27E0     		b	.L108
 2516              	.L118:
 617:.\main.c      ****             case 16:
 618:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2517              		.loc 1 618 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 57


 2518 00f4 FA8B     		ldrh	r2, [r7, #30]
 2519 00f6 194B     		ldr	r3, .L128+12
 2520 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 619:.\main.c      ****             break;
 2521              		.loc 1 619 0
 2522 00fa 23E0     		b	.L108
 2523              	.L119:
 620:.\main.c      ****             case 18:
 621:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2524              		.loc 1 621 0
 2525 00fc FA8B     		ldrh	r2, [r7, #30]
 2526 00fe 174B     		ldr	r3, .L128+12
 2527 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 622:.\main.c      ****             break;
 2528              		.loc 1 622 0
 2529 0102 1FE0     		b	.L108
 2530              	.L120:
 623:.\main.c      ****             case 20:
 624:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2531              		.loc 1 624 0
 2532 0104 FA8B     		ldrh	r2, [r7, #30]
 2533 0106 154B     		ldr	r3, .L128+12
 2534 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 625:.\main.c      ****             break;
 2535              		.loc 1 625 0
 2536 010a 1BE0     		b	.L108
 2537              	.L121:
 626:.\main.c      ****             case 22:
 627:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2538              		.loc 1 627 0
 2539 010c FA8B     		ldrh	r2, [r7, #30]
 2540 010e 134B     		ldr	r3, .L128+12
 2541 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 628:.\main.c      ****             break;
 2542              		.loc 1 628 0
 2543 0112 17E0     		b	.L108
 2544              	.L122:
 629:.\main.c      ****             case 24:
 630:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2545              		.loc 1 630 0
 2546 0114 FA8B     		ldrh	r2, [r7, #30]
 2547 0116 114B     		ldr	r3, .L128+12
 2548 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 631:.\main.c      ****             break;
 2549              		.loc 1 631 0
 2550 011a 13E0     		b	.L108
 2551              	.L123:
 632:.\main.c      ****             case 26:
 633:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2552              		.loc 1 633 0
 2553 011c FA8B     		ldrh	r2, [r7, #30]
 2554 011e 0F4B     		ldr	r3, .L128+12
 2555 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 634:.\main.c      ****             break;
 2556              		.loc 1 634 0
 2557 0122 0FE0     		b	.L108
 2558              	.L124:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 58


 635:.\main.c      ****             case 28:
 636:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2559              		.loc 1 636 0
 2560 0124 FA8B     		ldrh	r2, [r7, #30]
 2561 0126 0D4B     		ldr	r3, .L128+12
 2562 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 637:.\main.c      ****             break;
 2563              		.loc 1 637 0
 2564 012a 0BE0     		b	.L108
 2565              	.L125:
 638:.\main.c      ****             case 30:
 639:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2566              		.loc 1 639 0
 2567 012c FA8B     		ldrh	r2, [r7, #30]
 2568 012e 0B4B     		ldr	r3, .L128+12
 2569 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 640:.\main.c      ****             break;
 2570              		.loc 1 640 0
 2571 0132 07E0     		b	.L108
 2572              	.L126:
 641:.\main.c      ****             case 32:
 642:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2573              		.loc 1 642 0
 2574 0134 FA8B     		ldrh	r2, [r7, #30]
 2575 0136 094B     		ldr	r3, .L128+12
 2576 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 643:.\main.c      ****             break;
 2577              		.loc 1 643 0
 2578 013a 03E0     		b	.L108
 2579              	.L127:
 644:.\main.c      ****             case 34:
 645:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2580              		.loc 1 645 0
 2581 013c FA8B     		ldrh	r2, [r7, #30]
 2582 013e 074B     		ldr	r3, .L128+12
 2583 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 646:.\main.c      ****             break;
 2584              		.loc 1 646 0
 2585 0142 00BF     		nop
 2586              	.L108:
 2587              	.LBE10:
 647:.\main.c      ****         }
 648:.\main.c      ****     }
 649:.\main.c      **** }
 2588              		.loc 1 649 0
 2589 0144 2437     		adds	r7, r7, #36
 2590              		.cfi_def_cfa_offset 4
 2591 0146 BD46     		mov	sp, r7
 2592              		.cfi_def_cfa_register 13
 2593              		@ sp needed
 2594 0148 5DF8047B 		ldr	r7, [sp], #4
 2595              		.cfi_restore 7
 2596              		.cfi_def_cfa_offset 0
 2597 014c 7047     		bx	lr
 2598              	.L129:
 2599 014e 00BF     		.align	2
 2600              	.L128:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 59


 2601 0150 00000000 		.word	flag_rx
 2602 0154 00000000 		.word	packet
 2603 0158 00000000 		.word	byteCount
 2604 015c 00000000 		.word	buffer_state
 2605              		.cfi_endproc
 2606              	.LFE72:
 2607              		.size	handle_rx_binary, .-handle_rx_binary
 2608              		.section	.text.setLeftDir,"ax",%progbits
 2609              		.align	2
 2610              		.global	setLeftDir
 2611              		.thumb
 2612              		.thumb_func
 2613              		.type	setLeftDir, %function
 2614              	setLeftDir:
 2615              	.LFB73:
 650:.\main.c      **** 
 651:.\main.c      **** void setLeftDir(uint8 dir)
 652:.\main.c      **** {
 2616              		.loc 1 652 0
 2617              		.cfi_startproc
 2618              		@ args = 0, pretend = 0, frame = 8
 2619              		@ frame_needed = 1, uses_anonymous_args = 0
 2620 0000 80B5     		push	{r7, lr}
 2621              		.cfi_def_cfa_offset 8
 2622              		.cfi_offset 7, -8
 2623              		.cfi_offset 14, -4
 2624 0002 82B0     		sub	sp, sp, #8
 2625              		.cfi_def_cfa_offset 16
 2626 0004 00AF     		add	r7, sp, #0
 2627              		.cfi_def_cfa_register 7
 2628 0006 0346     		mov	r3, r0
 2629 0008 FB71     		strb	r3, [r7, #7]
 653:.\main.c      ****     M2_IN2_Write(dir);
 2630              		.loc 1 653 0
 2631 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2632 000c 1846     		mov	r0, r3
 2633 000e FFF7FEFF 		bl	M2_IN2_Write
 654:.\main.c      **** }
 2634              		.loc 1 654 0
 2635 0012 0837     		adds	r7, r7, #8
 2636              		.cfi_def_cfa_offset 8
 2637 0014 BD46     		mov	sp, r7
 2638              		.cfi_def_cfa_register 13
 2639              		@ sp needed
 2640 0016 80BD     		pop	{r7, pc}
 2641              		.cfi_endproc
 2642              	.LFE73:
 2643              		.size	setLeftDir, .-setLeftDir
 2644              		.section	.text.setRightDir,"ax",%progbits
 2645              		.align	2
 2646              		.global	setRightDir
 2647              		.thumb
 2648              		.thumb_func
 2649              		.type	setRightDir, %function
 2650              	setRightDir:
 2651              	.LFB74:
 655:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 60


 656:.\main.c      **** void setRightDir(uint8 dir)
 657:.\main.c      **** {
 2652              		.loc 1 657 0
 2653              		.cfi_startproc
 2654              		@ args = 0, pretend = 0, frame = 8
 2655              		@ frame_needed = 1, uses_anonymous_args = 0
 2656 0000 80B5     		push	{r7, lr}
 2657              		.cfi_def_cfa_offset 8
 2658              		.cfi_offset 7, -8
 2659              		.cfi_offset 14, -4
 2660 0002 82B0     		sub	sp, sp, #8
 2661              		.cfi_def_cfa_offset 16
 2662 0004 00AF     		add	r7, sp, #0
 2663              		.cfi_def_cfa_register 7
 2664 0006 0346     		mov	r3, r0
 2665 0008 FB71     		strb	r3, [r7, #7]
 658:.\main.c      ****     M1_IN2_Write(dir);
 2666              		.loc 1 658 0
 2667 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2668 000c 1846     		mov	r0, r3
 2669 000e FFF7FEFF 		bl	M1_IN2_Write
 659:.\main.c      **** }
 2670              		.loc 1 659 0
 2671 0012 0837     		adds	r7, r7, #8
 2672              		.cfi_def_cfa_offset 8
 2673 0014 BD46     		mov	sp, r7
 2674              		.cfi_def_cfa_register 13
 2675              		@ sp needed
 2676 0016 80BD     		pop	{r7, pc}
 2677              		.cfi_endproc
 2678              	.LFE74:
 2679              		.size	setRightDir, .-setRightDir
 2680              		.section	.rodata
 2681 00b3 00       		.align	2
 2682              	.LC9:
 2683 00b4 6469723A 		.ascii	"dir: %d\015\012\000"
 2683      2025640D 
 2683      0A00
 2684              		.section	.text.reverseDirection,"ax",%progbits
 2685              		.align	2
 2686              		.global	reverseDirection
 2687              		.thumb
 2688              		.thumb_func
 2689              		.type	reverseDirection, %function
 2690              	reverseDirection:
 2691              	.LFB75:
 660:.\main.c      **** 
 661:.\main.c      **** void reverseDirection()
 662:.\main.c      **** {
 2692              		.loc 1 662 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 16
 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696 0000 80B5     		push	{r7, lr}
 2697              		.cfi_def_cfa_offset 8
 2698              		.cfi_offset 7, -8
 2699              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 61


 2700 0002 84B0     		sub	sp, sp, #16
 2701              		.cfi_def_cfa_offset 24
 2702 0004 00AF     		add	r7, sp, #0
 2703              		.cfi_def_cfa_register 7
 663:.\main.c      ****     direction = !direction;
 2704              		.loc 1 663 0
 2705 0006 114B     		ldr	r3, .L133
 2706 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2707 000a 002B     		cmp	r3, #0
 2708 000c 0CBF     		ite	eq
 2709 000e 0123     		moveq	r3, #1
 2710 0010 0023     		movne	r3, #0
 2711 0012 DBB2     		uxtb	r3, r3
 2712 0014 1A46     		mov	r2, r3
 2713 0016 0D4B     		ldr	r3, .L133
 2714 0018 1A70     		strb	r2, [r3]
 664:.\main.c      ****     setLeftDir(direction);
 2715              		.loc 1 664 0
 2716 001a 0C4B     		ldr	r3, .L133
 2717 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2718 001e 1846     		mov	r0, r3
 2719 0020 FFF7FEFF 		bl	setLeftDir
 665:.\main.c      ****     setRightDir(direction);
 2720              		.loc 1 665 0
 2721 0024 094B     		ldr	r3, .L133
 2722 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 0028 1846     		mov	r0, r3
 2724 002a FFF7FEFF 		bl	setRightDir
 666:.\main.c      ****     char mes[16];
 667:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2725              		.loc 1 667 0
 2726 002e 074B     		ldr	r3, .L133
 2727 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2728 0032 1A46     		mov	r2, r3
 2729 0034 3B46     		mov	r3, r7
 2730 0036 1846     		mov	r0, r3
 2731 0038 0549     		ldr	r1, .L133+4
 2732 003a FFF7FEFF 		bl	sprintf
 668:.\main.c      ****     UART_PutString(mes);
 2733              		.loc 1 668 0
 2734 003e 3B46     		mov	r3, r7
 2735 0040 1846     		mov	r0, r3
 2736 0042 FFF7FEFF 		bl	UART_PutString
 669:.\main.c      **** }
 2737              		.loc 1 669 0
 2738 0046 1037     		adds	r7, r7, #16
 2739              		.cfi_def_cfa_offset 8
 2740 0048 BD46     		mov	sp, r7
 2741              		.cfi_def_cfa_register 13
 2742              		@ sp needed
 2743 004a 80BD     		pop	{r7, pc}
 2744              	.L134:
 2745              		.align	2
 2746              	.L133:
 2747 004c 00000000 		.word	direction
 2748 0050 B4000000 		.word	.LC9
 2749              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 62


 2750              	.LFE75:
 2751              		.size	reverseDirection, .-reverseDirection
 2752              		.global	__aeabi_dcmplt
 2753              		.global	__aeabi_ddiv
 2754              		.global	__aeabi_d2iz
 2755              		.section	.text.setSpeed,"ax",%progbits
 2756              		.align	2
 2757              		.global	setSpeed
 2758              		.thumb
 2759              		.thumb_func
 2760              		.type	setSpeed, %function
 2761              	setSpeed:
 2762              	.LFB76:
 670:.\main.c      **** 
 671:.\main.c      **** void setSpeed(double left, double right){
 2763              		.loc 1 671 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 24
 2766              		@ frame_needed = 1, uses_anonymous_args = 0
 2767 0000 80B5     		push	{r7, lr}
 2768              		.cfi_def_cfa_offset 8
 2769              		.cfi_offset 7, -8
 2770              		.cfi_offset 14, -4
 2771 0002 86B0     		sub	sp, sp, #24
 2772              		.cfi_def_cfa_offset 32
 2773 0004 00AF     		add	r7, sp, #0
 2774              		.cfi_def_cfa_register 7
 2775 0006 C7E90201 		strd	r0, [r7, #8]
 2776 000a C7E90023 		strd	r2, [r7]
 672:.\main.c      ****     if(right < 0.0)
 2777              		.loc 1 672 0
 2778 000e D7E90001 		ldrd	r0, [r7]
 2779 0012 4FF00002 		mov	r2, #0
 2780 0016 4FF00003 		mov	r3, #0
 2781 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2782 001e 0346     		mov	r3, r0
 2783 0020 002B     		cmp	r3, #0
 2784 0022 10D0     		beq	.L144
 673:.\main.c      ****     {
 674:.\main.c      ****         //char mes[16];
 675:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 676:.\main.c      ****        // UART_PutString(mes);
 677:.\main.c      ****         setRightDir(!direction);
 2785              		.loc 1 677 0
 2786 0024 304B     		ldr	r3, .L146+8
 2787 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2788 0028 002B     		cmp	r3, #0
 2789 002a 0CBF     		ite	eq
 2790 002c 0123     		moveq	r3, #1
 2791 002e 0023     		movne	r3, #0
 2792 0030 DBB2     		uxtb	r3, r3
 2793 0032 1846     		mov	r0, r3
 2794 0034 FFF7FEFF 		bl	setRightDir
 678:.\main.c      ****         right = -right;
 2795              		.loc 1 678 0
 2796 0038 3B68     		ldr	r3, [r7]
 2797 003a 3B60     		str	r3, [r7]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 63


 2798 003c 7B68     		ldr	r3, [r7, #4]
 2799 003e 83F00043 		eor	r3, r3, #-2147483648
 2800 0042 7B60     		str	r3, [r7, #4]
 2801 0044 04E0     		b	.L138
 2802              	.L144:
 679:.\main.c      ****     }
 680:.\main.c      ****     else setRightDir(direction);
 2803              		.loc 1 680 0
 2804 0046 284B     		ldr	r3, .L146+8
 2805 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2806 004a 1846     		mov	r0, r3
 2807 004c FFF7FEFF 		bl	setRightDir
 2808              	.L138:
 681:.\main.c      ****     
 682:.\main.c      ****     if(left < 0.0)
 2809              		.loc 1 682 0
 2810 0050 D7E90201 		ldrd	r0, [r7, #8]
 2811 0054 4FF00002 		mov	r2, #0
 2812 0058 4FF00003 		mov	r3, #0
 2813 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2814 0060 0346     		mov	r3, r0
 2815 0062 002B     		cmp	r3, #0
 2816 0064 10D0     		beq	.L145
 683:.\main.c      ****     {
 684:.\main.c      ****        // char mes[16];
 685:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 686:.\main.c      ****         //UART_PutString(mes);
 687:.\main.c      ****         setLeftDir(!direction);
 2817              		.loc 1 687 0
 2818 0066 204B     		ldr	r3, .L146+8
 2819 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2820 006a 002B     		cmp	r3, #0
 2821 006c 0CBF     		ite	eq
 2822 006e 0123     		moveq	r3, #1
 2823 0070 0023     		movne	r3, #0
 2824 0072 DBB2     		uxtb	r3, r3
 2825 0074 1846     		mov	r0, r3
 2826 0076 FFF7FEFF 		bl	setLeftDir
 688:.\main.c      ****         left = -left;
 2827              		.loc 1 688 0
 2828 007a BB68     		ldr	r3, [r7, #8]
 2829 007c BB60     		str	r3, [r7, #8]
 2830 007e FB68     		ldr	r3, [r7, #12]
 2831 0080 83F00043 		eor	r3, r3, #-2147483648
 2832 0084 FB60     		str	r3, [r7, #12]
 2833 0086 04E0     		b	.L141
 2834              	.L145:
 689:.\main.c      ****     }
 690:.\main.c      ****     else setLeftDir(direction);
 2835              		.loc 1 690 0
 2836 0088 174B     		ldr	r3, .L146+8
 2837 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2838 008c 1846     		mov	r0, r3
 2839 008e FFF7FEFF 		bl	setLeftDir
 2840              	.L141:
 691:.\main.c      ****     
 692:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 64


 2841              		.loc 1 692 0
 2842 0092 D7E90201 		ldrd	r0, [r7, #8]
 2843 0096 12A3     		adr	r3, .L146
 2844 0098 D3E90023 		ldrd	r2, [r3]
 2845 009c FFF7FEFF 		bl	__aeabi_ddiv
 2846 00a0 0246     		mov	r2, r0
 2847 00a2 0B46     		mov	r3, r1
 2848 00a4 1046     		mov	r0, r2
 2849 00a6 1946     		mov	r1, r3
 2850 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2851 00ac 0346     		mov	r3, r0
 2852 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 693:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2853              		.loc 1 693 0
 2854 00b0 D7E90001 		ldrd	r0, [r7]
 2855 00b4 0AA3     		adr	r3, .L146
 2856 00b6 D3E90023 		ldrd	r2, [r3]
 2857 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2858 00be 0246     		mov	r2, r0
 2859 00c0 0B46     		mov	r3, r1
 2860 00c2 1046     		mov	r0, r2
 2861 00c4 1946     		mov	r1, r3
 2862 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2863 00ca 0346     		mov	r3, r0
 2864 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 694:.\main.c      ****     
 695:.\main.c      ****     leftSpeedLimit = countsRight;
 2865              		.loc 1 695 0
 2866 00ce 074A     		ldr	r2, .L146+12
 2867 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2868 00d2 1380     		strh	r3, [r2]	@ movhi
 696:.\main.c      ****     rightSpeedLimit = countsLeft;
 2869              		.loc 1 696 0
 2870 00d4 064A     		ldr	r2, .L146+16
 2871 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2872 00d8 1380     		strh	r3, [r2]	@ movhi
 697:.\main.c      **** }
 2873              		.loc 1 697 0
 2874 00da 1837     		adds	r7, r7, #24
 2875              		.cfi_def_cfa_offset 8
 2876 00dc BD46     		mov	sp, r7
 2877              		.cfi_def_cfa_register 13
 2878              		@ sp needed
 2879 00de 80BD     		pop	{r7, pc}
 2880              	.L147:
 2881              		.align	3
 2882              	.L146:
 2883 00e0 969526A5 		.word	-1524197994
 2884 00e4 A0DBEF3F 		.word	1072683936
 2885 00e8 00000000 		.word	direction
 2886 00ec 00000000 		.word	leftSpeedLimit
 2887 00f0 00000000 		.word	rightSpeedLimit
 2888              		.cfi_endproc
 2889              	.LFE76:
 2890              		.size	setSpeed, .-setSpeed
 2891 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2892              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 65


 2893              		.global	brakeLeft
 2894              		.thumb
 2895              		.thumb_func
 2896              		.type	brakeLeft, %function
 2897              	brakeLeft:
 2898              	.LFB77:
 698:.\main.c      **** 
 699:.\main.c      **** void brakeLeft()
 700:.\main.c      **** {
 2899              		.loc 1 700 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 0
 2902              		@ frame_needed = 1, uses_anonymous_args = 0
 2903 0000 80B5     		push	{r7, lr}
 2904              		.cfi_def_cfa_offset 8
 2905              		.cfi_offset 7, -8
 2906              		.cfi_offset 14, -4
 2907 0002 00AF     		add	r7, sp, #0
 2908              		.cfi_def_cfa_register 7
 701:.\main.c      ****     PWM_1_WriteCompare(0);
 2909              		.loc 1 701 0
 2910 0004 0020     		movs	r0, #0
 2911 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 702:.\main.c      ****     left_duty_cycle = 0;
 2912              		.loc 1 702 0
 2913 000a 024B     		ldr	r3, .L149
 2914 000c 0022     		movs	r2, #0
 2915 000e 1A80     		strh	r2, [r3]	@ movhi
 703:.\main.c      **** }
 2916              		.loc 1 703 0
 2917 0010 80BD     		pop	{r7, pc}
 2918              	.L150:
 2919 0012 00BF     		.align	2
 2920              	.L149:
 2921 0014 00000000 		.word	left_duty_cycle
 2922              		.cfi_endproc
 2923              	.LFE77:
 2924              		.size	brakeLeft, .-brakeLeft
 2925              		.section	.text.brakeRight,"ax",%progbits
 2926              		.align	2
 2927              		.global	brakeRight
 2928              		.thumb
 2929              		.thumb_func
 2930              		.type	brakeRight, %function
 2931              	brakeRight:
 2932              	.LFB78:
 704:.\main.c      **** 
 705:.\main.c      **** void brakeRight()
 706:.\main.c      **** {
 2933              		.loc 1 706 0
 2934              		.cfi_startproc
 2935              		@ args = 0, pretend = 0, frame = 0
 2936              		@ frame_needed = 1, uses_anonymous_args = 0
 2937 0000 80B5     		push	{r7, lr}
 2938              		.cfi_def_cfa_offset 8
 2939              		.cfi_offset 7, -8
 2940              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 66


 2941 0002 00AF     		add	r7, sp, #0
 2942              		.cfi_def_cfa_register 7
 707:.\main.c      ****      PWM_2_WriteCompare(0);
 2943              		.loc 1 707 0
 2944 0004 0020     		movs	r0, #0
 2945 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 708:.\main.c      ****      right_duty_cycle = 0;
 2946              		.loc 1 708 0
 2947 000a 024B     		ldr	r3, .L152
 2948 000c 0022     		movs	r2, #0
 2949 000e 1A80     		strh	r2, [r3]	@ movhi
 709:.\main.c      **** }
 2950              		.loc 1 709 0
 2951 0010 80BD     		pop	{r7, pc}
 2952              	.L153:
 2953 0012 00BF     		.align	2
 2954              	.L152:
 2955 0014 00000000 		.word	right_duty_cycle
 2956              		.cfi_endproc
 2957              	.LFE78:
 2958              		.size	brakeRight, .-brakeRight
 2959              		.section	.text.brakeMotor,"ax",%progbits
 2960              		.align	2
 2961              		.global	brakeMotor
 2962              		.thumb
 2963              		.thumb_func
 2964              		.type	brakeMotor, %function
 2965              	brakeMotor:
 2966              	.LFB79:
 710:.\main.c      **** 
 711:.\main.c      **** void brakeMotor(){
 2967              		.loc 1 711 0
 2968              		.cfi_startproc
 2969              		@ args = 0, pretend = 0, frame = 0
 2970              		@ frame_needed = 1, uses_anonymous_args = 0
 2971 0000 80B5     		push	{r7, lr}
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 7, -8
 2974              		.cfi_offset 14, -4
 2975 0002 00AF     		add	r7, sp, #0
 2976              		.cfi_def_cfa_register 7
 712:.\main.c      ****     setSpeed(0, 0);
 2977              		.loc 1 712 0
 2978 0004 4FF00000 		mov	r0, #0
 2979 0008 4FF00001 		mov	r1, #0
 2980 000c 4FF00002 		mov	r2, #0
 2981 0010 4FF00003 		mov	r3, #0
 2982 0014 FFF7FEFF 		bl	setSpeed
 713:.\main.c      ****     brakeLeft();
 2983              		.loc 1 713 0
 2984 0018 FFF7FEFF 		bl	brakeLeft
 714:.\main.c      ****     brakeRight();
 2985              		.loc 1 714 0
 2986 001c FFF7FEFF 		bl	brakeRight
 715:.\main.c      **** }
 2987              		.loc 1 715 0
 2988 0020 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 67


 2989              		.cfi_endproc
 2990              	.LFE79:
 2991              		.size	brakeMotor, .-brakeMotor
 2992 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2993              		.align	2
 2994              		.global	driveForwards
 2995              		.thumb
 2996              		.thumb_func
 2997              		.type	driveForwards, %function
 2998              	driveForwards:
 2999              	.LFB80:
 716:.\main.c      **** 
 717:.\main.c      **** void driveForwards()
 718:.\main.c      **** {
 3000              		.loc 1 718 0
 3001              		.cfi_startproc
 3002              		@ args = 0, pretend = 0, frame = 0
 3003              		@ frame_needed = 1, uses_anonymous_args = 0
 3004 0000 80B5     		push	{r7, lr}
 3005              		.cfi_def_cfa_offset 8
 3006              		.cfi_offset 7, -8
 3007              		.cfi_offset 14, -4
 3008 0002 00AF     		add	r7, sp, #0
 3009              		.cfi_def_cfa_register 7
 719:.\main.c      ****     setSpeed(speed, speed);
 3010              		.loc 1 719 0
 3011 0004 044B     		ldr	r3, .L156
 3012 0006 D3E90001 		ldrd	r0, [r3]
 3013 000a 034B     		ldr	r3, .L156
 3014 000c D3E90023 		ldrd	r2, [r3]
 3015 0010 FFF7FEFF 		bl	setSpeed
 720:.\main.c      **** }
 3016              		.loc 1 720 0
 3017 0014 80BD     		pop	{r7, pc}
 3018              	.L157:
 3019 0016 00BF     		.align	2
 3020              	.L156:
 3021 0018 00000000 		.word	speed
 3022              		.cfi_endproc
 3023              	.LFE80:
 3024              		.size	driveForwards, .-driveForwards
 3025              		.global	__aeabi_dmul
 3026              		.section	.text.turnRight,"ax",%progbits
 3027              		.align	2
 3028              		.global	turnRight
 3029              		.thumb
 3030              		.thumb_func
 3031              		.type	turnRight, %function
 3032              	turnRight:
 3033              	.LFB81:
 721:.\main.c      **** 
 722:.\main.c      **** void turnRight()
 723:.\main.c      **** {
 3034              		.loc 1 723 0
 3035              		.cfi_startproc
 3036              		@ args = 0, pretend = 0, frame = 0
 3037              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 68


 3038 0000 80B5     		push	{r7, lr}
 3039              		.cfi_def_cfa_offset 8
 3040              		.cfi_offset 7, -8
 3041              		.cfi_offset 14, -4
 3042 0002 00AF     		add	r7, sp, #0
 3043              		.cfi_def_cfa_register 7
 724:.\main.c      ****     setSpeed(0,speed * 1.5);
 3044              		.loc 1 724 0
 3045 0004 094B     		ldr	r3, .L159
 3046 0006 D3E90023 		ldrd	r2, [r3]
 3047 000a 1046     		mov	r0, r2
 3048 000c 1946     		mov	r1, r3
 3049 000e 4FF00002 		mov	r2, #0
 3050 0012 074B     		ldr	r3, .L159+4
 3051 0014 FFF7FEFF 		bl	__aeabi_dmul
 3052 0018 0246     		mov	r2, r0
 3053 001a 0B46     		mov	r3, r1
 3054 001c 4FF00000 		mov	r0, #0
 3055 0020 4FF00001 		mov	r1, #0
 3056 0024 FFF7FEFF 		bl	setSpeed
 725:.\main.c      **** }
 3057              		.loc 1 725 0
 3058 0028 80BD     		pop	{r7, pc}
 3059              	.L160:
 3060 002a 00BF     		.align	2
 3061              	.L159:
 3062 002c 00000000 		.word	speed
 3063 0030 0000F83F 		.word	1073217536
 3064              		.cfi_endproc
 3065              	.LFE81:
 3066              		.size	turnRight, .-turnRight
 3067              		.section	.text.turnLeft,"ax",%progbits
 3068              		.align	2
 3069              		.global	turnLeft
 3070              		.thumb
 3071              		.thumb_func
 3072              		.type	turnLeft, %function
 3073              	turnLeft:
 3074              	.LFB82:
 726:.\main.c      **** 
 727:.\main.c      **** void turnLeft()
 728:.\main.c      **** {
 3075              		.loc 1 728 0
 3076              		.cfi_startproc
 3077              		@ args = 0, pretend = 0, frame = 0
 3078              		@ frame_needed = 1, uses_anonymous_args = 0
 3079 0000 80B5     		push	{r7, lr}
 3080              		.cfi_def_cfa_offset 8
 3081              		.cfi_offset 7, -8
 3082              		.cfi_offset 14, -4
 3083 0002 00AF     		add	r7, sp, #0
 3084              		.cfi_def_cfa_register 7
 729:.\main.c      ****     setSpeed(speed * 1.5,0);
 3085              		.loc 1 729 0
 3086 0004 0A4B     		ldr	r3, .L162
 3087 0006 D3E90023 		ldrd	r2, [r3]
 3088 000a 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 69


 3089 000c 1946     		mov	r1, r3
 3090 000e 4FF00002 		mov	r2, #0
 3091 0012 084B     		ldr	r3, .L162+4
 3092 0014 FFF7FEFF 		bl	__aeabi_dmul
 3093 0018 0246     		mov	r2, r0
 3094 001a 0B46     		mov	r3, r1
 3095 001c 1046     		mov	r0, r2
 3096 001e 1946     		mov	r1, r3
 3097 0020 4FF00002 		mov	r2, #0
 3098 0024 4FF00003 		mov	r3, #0
 3099 0028 FFF7FEFF 		bl	setSpeed
 730:.\main.c      **** }
 3100              		.loc 1 730 0
 3101 002c 80BD     		pop	{r7, pc}
 3102              	.L163:
 3103 002e 00BF     		.align	2
 3104              	.L162:
 3105 0030 00000000 		.word	speed
 3106 0034 0000F83F 		.word	1073217536
 3107              		.cfi_endproc
 3108              	.LFE82:
 3109              		.size	turnLeft, .-turnLeft
 3110              		.section	.text.turnU,"ax",%progbits
 3111              		.align	2
 3112              		.global	turnU
 3113              		.thumb
 3114              		.thumb_func
 3115              		.type	turnU, %function
 3116              	turnU:
 3117              	.LFB83:
 731:.\main.c      **** 
 732:.\main.c      **** void turnU()
 733:.\main.c      **** {
 3118              		.loc 1 733 0
 3119              		.cfi_startproc
 3120              		@ args = 0, pretend = 0, frame = 0
 3121              		@ frame_needed = 1, uses_anonymous_args = 0
 3122 0000 B0B5     		push	{r4, r5, r7, lr}
 3123              		.cfi_def_cfa_offset 16
 3124              		.cfi_offset 4, -16
 3125              		.cfi_offset 5, -12
 3126              		.cfi_offset 7, -8
 3127              		.cfi_offset 14, -4
 3128 0002 00AF     		add	r7, sp, #0
 3129              		.cfi_def_cfa_register 7
 734:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3130              		.loc 1 734 0
 3131 0004 0F4B     		ldr	r3, .L165
 3132 0006 D3E90023 		ldrd	r2, [r3]
 3133 000a 1046     		mov	r0, r2
 3134 000c 83F00041 		eor	r1, r3, #-2147483648
 3135 0010 4FF00002 		mov	r2, #0
 3136 0014 0C4B     		ldr	r3, .L165+4
 3137 0016 FFF7FEFF 		bl	__aeabi_dmul
 3138 001a 0246     		mov	r2, r0
 3139 001c 0B46     		mov	r3, r1
 3140 001e 1446     		mov	r4, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 70


 3141 0020 1D46     		mov	r5, r3
 3142 0022 084B     		ldr	r3, .L165
 3143 0024 D3E90023 		ldrd	r2, [r3]
 3144 0028 1046     		mov	r0, r2
 3145 002a 1946     		mov	r1, r3
 3146 002c 4FF00002 		mov	r2, #0
 3147 0030 054B     		ldr	r3, .L165+4
 3148 0032 FFF7FEFF 		bl	__aeabi_dmul
 3149 0036 0246     		mov	r2, r0
 3150 0038 0B46     		mov	r3, r1
 3151 003a 2046     		mov	r0, r4
 3152 003c 2946     		mov	r1, r5
 3153 003e FFF7FEFF 		bl	setSpeed
 735:.\main.c      **** }
 3154              		.loc 1 735 0
 3155 0042 B0BD     		pop	{r4, r5, r7, pc}
 3156              	.L166:
 3157              		.align	2
 3158              	.L165:
 3159 0044 00000000 		.word	speed
 3160 0048 0000F83F 		.word	1073217536
 3161              		.cfi_endproc
 3162              	.LFE83:
 3163              		.size	turnU, .-turnU
 3164              		.section	.text.initTurnLeft,"ax",%progbits
 3165              		.align	2
 3166              		.global	initTurnLeft
 3167              		.thumb
 3168              		.thumb_func
 3169              		.type	initTurnLeft, %function
 3170              	initTurnLeft:
 3171              	.LFB84:
 736:.\main.c      **** 
 737:.\main.c      **** void initTurnLeft(){
 3172              		.loc 1 737 0
 3173              		.cfi_startproc
 3174              		@ args = 0, pretend = 0, frame = 0
 3175              		@ frame_needed = 1, uses_anonymous_args = 0
 3176 0000 80B5     		push	{r7, lr}
 3177              		.cfi_def_cfa_offset 8
 3178              		.cfi_offset 7, -8
 3179              		.cfi_offset 14, -4
 3180 0002 00AF     		add	r7, sp, #0
 3181              		.cfi_def_cfa_register 7
 738:.\main.c      ****     Timer_2_Stop();
 3182              		.loc 1 738 0
 3183 0004 FFF7FEFF 		bl	Timer_2_Stop
 739:.\main.c      ****     prev_movement_state = movement_state;
 3184              		.loc 1 739 0
 3185 0008 084B     		ldr	r3, .L168
 3186 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3187 000c 084B     		ldr	r3, .L168+4
 3188 000e 1A70     		strb	r2, [r3]
 740:.\main.c      ****     movement_state = LTURN;
 3189              		.loc 1 740 0
 3190 0010 064B     		ldr	r3, .L168
 3191 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 71


 3192 0014 1A70     		strb	r2, [r3]
 741:.\main.c      ****     brakeLeft();
 3193              		.loc 1 741 0
 3194 0016 FFF7FEFF 		bl	brakeLeft
 742:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3195              		.loc 1 742 0
 3196 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3197 001e 0346     		mov	r3, r0
 3198 0020 1A46     		mov	r2, r3
 3199 0022 044B     		ldr	r3, .L168+8
 3200 0024 1A80     		strh	r2, [r3]	@ movhi
 743:.\main.c      ****     Timer_2_Start();
 3201              		.loc 1 743 0
 3202 0026 FFF7FEFF 		bl	Timer_2_Start
 744:.\main.c      **** }
 3203              		.loc 1 744 0
 3204 002a 80BD     		pop	{r7, pc}
 3205              	.L169:
 3206              		.align	2
 3207              	.L168:
 3208 002c 00000000 		.word	movement_state
 3209 0030 00000000 		.word	prev_movement_state
 3210 0034 00000000 		.word	start_turn_count
 3211              		.cfi_endproc
 3212              	.LFE84:
 3213              		.size	initTurnLeft, .-initTurnLeft
 3214              		.section	.text.initTurnRight,"ax",%progbits
 3215              		.align	2
 3216              		.global	initTurnRight
 3217              		.thumb
 3218              		.thumb_func
 3219              		.type	initTurnRight, %function
 3220              	initTurnRight:
 3221              	.LFB85:
 745:.\main.c      **** 
 746:.\main.c      **** void initTurnRight(){
 3222              		.loc 1 746 0
 3223              		.cfi_startproc
 3224              		@ args = 0, pretend = 0, frame = 0
 3225              		@ frame_needed = 1, uses_anonymous_args = 0
 3226 0000 80B5     		push	{r7, lr}
 3227              		.cfi_def_cfa_offset 8
 3228              		.cfi_offset 7, -8
 3229              		.cfi_offset 14, -4
 3230 0002 00AF     		add	r7, sp, #0
 3231              		.cfi_def_cfa_register 7
 747:.\main.c      ****     Timer_2_Stop();
 3232              		.loc 1 747 0
 3233 0004 FFF7FEFF 		bl	Timer_2_Stop
 748:.\main.c      ****     prev_movement_state = movement_state;
 3234              		.loc 1 748 0
 3235 0008 084B     		ldr	r3, .L171
 3236 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3237 000c 084B     		ldr	r3, .L171+4
 3238 000e 1A70     		strb	r2, [r3]
 749:.\main.c      ****     movement_state = RTURN;
 3239              		.loc 1 749 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 72


 3240 0010 064B     		ldr	r3, .L171
 3241 0012 0222     		movs	r2, #2
 3242 0014 1A70     		strb	r2, [r3]
 750:.\main.c      ****     brakeRight();
 3243              		.loc 1 750 0
 3244 0016 FFF7FEFF 		bl	brakeRight
 751:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3245              		.loc 1 751 0
 3246 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3247 001e 0346     		mov	r3, r0
 3248 0020 1A46     		mov	r2, r3
 3249 0022 044B     		ldr	r3, .L171+8
 3250 0024 1A80     		strh	r2, [r3]	@ movhi
 752:.\main.c      ****     Timer_2_Start();
 3251              		.loc 1 752 0
 3252 0026 FFF7FEFF 		bl	Timer_2_Start
 753:.\main.c      **** }
 3253              		.loc 1 753 0
 3254 002a 80BD     		pop	{r7, pc}
 3255              	.L172:
 3256              		.align	2
 3257              	.L171:
 3258 002c 00000000 		.word	movement_state
 3259 0030 00000000 		.word	prev_movement_state
 3260 0034 00000000 		.word	start_turn_count
 3261              		.cfi_endproc
 3262              	.LFE85:
 3263              		.size	initTurnRight, .-initTurnRight
 3264              		.section	.text.initTurnU,"ax",%progbits
 3265              		.align	2
 3266              		.global	initTurnU
 3267              		.thumb
 3268              		.thumb_func
 3269              		.type	initTurnU, %function
 3270              	initTurnU:
 3271              	.LFB86:
 754:.\main.c      **** 
 755:.\main.c      **** void initTurnU(){
 3272              		.loc 1 755 0
 3273              		.cfi_startproc
 3274              		@ args = 0, pretend = 0, frame = 0
 3275              		@ frame_needed = 1, uses_anonymous_args = 0
 3276 0000 80B5     		push	{r7, lr}
 3277              		.cfi_def_cfa_offset 8
 3278              		.cfi_offset 7, -8
 3279              		.cfi_offset 14, -4
 3280 0002 00AF     		add	r7, sp, #0
 3281              		.cfi_def_cfa_register 7
 756:.\main.c      ****     Timer_2_Stop();
 3282              		.loc 1 756 0
 3283 0004 FFF7FEFF 		bl	Timer_2_Stop
 757:.\main.c      ****     prev_movement_state = movement_state;
 3284              		.loc 1 757 0
 3285 0008 084B     		ldr	r3, .L174
 3286 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3287 000c 084B     		ldr	r3, .L174+4
 3288 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 73


 758:.\main.c      ****     movement_state = UTURN;
 3289              		.loc 1 758 0
 3290 0010 064B     		ldr	r3, .L174
 3291 0012 0722     		movs	r2, #7
 3292 0014 1A70     		strb	r2, [r3]
 759:.\main.c      ****     brakeMotor();
 3293              		.loc 1 759 0
 3294 0016 FFF7FEFF 		bl	brakeMotor
 760:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3295              		.loc 1 760 0
 3296 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3297 001e 0346     		mov	r3, r0
 3298 0020 1A46     		mov	r2, r3
 3299 0022 044B     		ldr	r3, .L174+8
 3300 0024 1A80     		strh	r2, [r3]	@ movhi
 761:.\main.c      ****     Timer_2_Start();
 3301              		.loc 1 761 0
 3302 0026 FFF7FEFF 		bl	Timer_2_Start
 762:.\main.c      **** }
 3303              		.loc 1 762 0
 3304 002a 80BD     		pop	{r7, pc}
 3305              	.L175:
 3306              		.align	2
 3307              	.L174:
 3308 002c 00000000 		.word	movement_state
 3309 0030 00000000 		.word	prev_movement_state
 3310 0034 00000000 		.word	start_turn_count
 3311              		.cfi_endproc
 3312              	.LFE86:
 3313              		.size	initTurnU, .-initTurnU
 3314              		.section	.text.initForward,"ax",%progbits
 3315              		.align	2
 3316              		.global	initForward
 3317              		.thumb
 3318              		.thumb_func
 3319              		.type	initForward, %function
 3320              	initForward:
 3321              	.LFB87:
 763:.\main.c      **** 
 764:.\main.c      **** void initForward(){
 3322              		.loc 1 764 0
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 0
 3325              		@ frame_needed = 1, uses_anonymous_args = 0
 3326 0000 80B5     		push	{r7, lr}
 3327              		.cfi_def_cfa_offset 8
 3328              		.cfi_offset 7, -8
 3329              		.cfi_offset 14, -4
 3330 0002 00AF     		add	r7, sp, #0
 3331              		.cfi_def_cfa_register 7
 765:.\main.c      ****     brakeMotor();
 3332              		.loc 1 765 0
 3333 0004 FFF7FEFF 		bl	brakeMotor
 766:.\main.c      ****     movement_state = DRIVE;
 3334              		.loc 1 766 0
 3335 0008 014B     		ldr	r3, .L177
 3336 000a 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 74


 3337 000c 1A70     		strb	r2, [r3]
 767:.\main.c      **** }
 3338              		.loc 1 767 0
 3339 000e 80BD     		pop	{r7, pc}
 3340              	.L178:
 3341              		.align	2
 3342              	.L177:
 3343 0010 00000000 		.word	movement_state
 3344              		.cfi_endproc
 3345              	.LFE87:
 3346              		.size	initForward, .-initForward
 3347              		.section	.text.initBrake,"ax",%progbits
 3348              		.align	2
 3349              		.global	initBrake
 3350              		.thumb
 3351              		.thumb_func
 3352              		.type	initBrake, %function
 3353              	initBrake:
 3354              	.LFB88:
 768:.\main.c      **** 
 769:.\main.c      **** void initBrake(){
 3355              		.loc 1 769 0
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 1, uses_anonymous_args = 0
 3359              		@ link register save eliminated.
 3360 0000 80B4     		push	{r7}
 3361              		.cfi_def_cfa_offset 4
 3362              		.cfi_offset 7, -4
 3363 0002 00AF     		add	r7, sp, #0
 3364              		.cfi_def_cfa_register 7
 770:.\main.c      ****     movement_state = STOPPED;
 3365              		.loc 1 770 0
 3366 0004 034B     		ldr	r3, .L180
 3367 0006 0322     		movs	r2, #3
 3368 0008 1A70     		strb	r2, [r3]
 771:.\main.c      **** }
 3369              		.loc 1 771 0
 3370 000a BD46     		mov	sp, r7
 3371              		.cfi_def_cfa_register 13
 3372              		@ sp needed
 3373 000c 5DF8047B 		ldr	r7, [sp], #4
 3374              		.cfi_restore 7
 3375              		.cfi_def_cfa_offset 0
 3376 0010 7047     		bx	lr
 3377              	.L181:
 3378 0012 00BF     		.align	2
 3379              	.L180:
 3380 0014 00000000 		.word	movement_state
 3381              		.cfi_endproc
 3382              	.LFE88:
 3383              		.size	initBrake, .-initBrake
 3384              		.section	.text.initTrack,"ax",%progbits
 3385              		.align	2
 3386              		.global	initTrack
 3387              		.thumb
 3388              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 75


 3389              		.type	initTrack, %function
 3390              	initTrack:
 3391              	.LFB89:
 772:.\main.c      **** 
 773:.\main.c      **** void initTrack()
 774:.\main.c      **** {
 3392              		.loc 1 774 0
 3393              		.cfi_startproc
 3394              		@ args = 0, pretend = 0, frame = 0
 3395              		@ frame_needed = 1, uses_anonymous_args = 0
 3396              		@ link register save eliminated.
 3397 0000 80B4     		push	{r7}
 3398              		.cfi_def_cfa_offset 4
 3399              		.cfi_offset 7, -4
 3400 0002 00AF     		add	r7, sp, #0
 3401              		.cfi_def_cfa_register 7
 775:.\main.c      ****     movement_state = TRACKING;
 3402              		.loc 1 775 0
 3403 0004 034B     		ldr	r3, .L183
 3404 0006 0422     		movs	r2, #4
 3405 0008 1A70     		strb	r2, [r3]
 776:.\main.c      **** }
 3406              		.loc 1 776 0
 3407 000a BD46     		mov	sp, r7
 3408              		.cfi_def_cfa_register 13
 3409              		@ sp needed
 3410 000c 5DF8047B 		ldr	r7, [sp], #4
 3411              		.cfi_restore 7
 3412              		.cfi_def_cfa_offset 0
 3413 0010 7047     		bx	lr
 3414              	.L184:
 3415 0012 00BF     		.align	2
 3416              	.L183:
 3417 0014 00000000 		.word	movement_state
 3418              		.cfi_endproc
 3419              	.LFE89:
 3420              		.size	initTrack, .-initTrack
 3421              		.section	.text.initTrackU,"ax",%progbits
 3422              		.align	2
 3423              		.global	initTrackU
 3424              		.thumb
 3425              		.thumb_func
 3426              		.type	initTrackU, %function
 3427              	initTrackU:
 3428              	.LFB90:
 777:.\main.c      **** 
 778:.\main.c      **** void initTrackU(){
 3429              		.loc 1 778 0
 3430              		.cfi_startproc
 3431              		@ args = 0, pretend = 0, frame = 0
 3432              		@ frame_needed = 1, uses_anonymous_args = 0
 3433              		@ link register save eliminated.
 3434 0000 80B4     		push	{r7}
 3435              		.cfi_def_cfa_offset 4
 3436              		.cfi_offset 7, -4
 3437 0002 00AF     		add	r7, sp, #0
 3438              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 76


 779:.\main.c      ****     movement_state = TRACKING_U;
 3439              		.loc 1 779 0
 3440 0004 034B     		ldr	r3, .L186
 3441 0006 0522     		movs	r2, #5
 3442 0008 1A70     		strb	r2, [r3]
 780:.\main.c      **** }
 3443              		.loc 1 780 0
 3444 000a BD46     		mov	sp, r7
 3445              		.cfi_def_cfa_register 13
 3446              		@ sp needed
 3447 000c 5DF8047B 		ldr	r7, [sp], #4
 3448              		.cfi_restore 7
 3449              		.cfi_def_cfa_offset 0
 3450 0010 7047     		bx	lr
 3451              	.L187:
 3452 0012 00BF     		.align	2
 3453              	.L186:
 3454 0014 00000000 		.word	movement_state
 3455              		.cfi_endproc
 3456              	.LFE90:
 3457              		.size	initTrackU, .-initTrackU
 3458              		.section	.text.inittrackLineZ,"ax",%progbits
 3459              		.align	2
 3460              		.global	inittrackLineZ
 3461              		.thumb
 3462              		.thumb_func
 3463              		.type	inittrackLineZ, %function
 3464              	inittrackLineZ:
 3465              	.LFB91:
 781:.\main.c      **** 
 782:.\main.c      **** void inittrackLineZ(){
 3466              		.loc 1 782 0
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 0
 3469              		@ frame_needed = 1, uses_anonymous_args = 0
 3470              		@ link register save eliminated.
 3471 0000 80B4     		push	{r7}
 3472              		.cfi_def_cfa_offset 4
 3473              		.cfi_offset 7, -4
 3474 0002 00AF     		add	r7, sp, #0
 3475              		.cfi_def_cfa_register 7
 783:.\main.c      ****     movement_state = TRACKING_SOFT;
 3476              		.loc 1 783 0
 3477 0004 034B     		ldr	r3, .L189
 3478 0006 0622     		movs	r2, #6
 3479 0008 1A70     		strb	r2, [r3]
 784:.\main.c      **** }
 3480              		.loc 1 784 0
 3481 000a BD46     		mov	sp, r7
 3482              		.cfi_def_cfa_register 13
 3483              		@ sp needed
 3484 000c 5DF8047B 		ldr	r7, [sp], #4
 3485              		.cfi_restore 7
 3486              		.cfi_def_cfa_offset 0
 3487 0010 7047     		bx	lr
 3488              	.L190:
 3489 0012 00BF     		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 77


 3490              	.L189:
 3491 0014 00000000 		.word	movement_state
 3492              		.cfi_endproc
 3493              	.LFE91:
 3494              		.size	inittrackLineZ, .-inittrackLineZ
 3495              		.section	.text.rxInt,"ax",%progbits
 3496              		.align	2
 3497              		.global	rxInt
 3498              		.thumb
 3499              		.thumb_func
 3500              		.type	rxInt, %function
 3501              	rxInt:
 3502              	.LFB92:
 785:.\main.c      **** 
 786:.\main.c      **** 
 787:.\main.c      **** 
 788:.\main.c      **** //Binary RF Data
 789:.\main.c      **** CY_ISR(rxInt){
 3503              		.loc 1 789 0
 3504              		.cfi_startproc
 3505              		@ args = 0, pretend = 0, frame = 8
 3506              		@ frame_needed = 1, uses_anonymous_args = 0
 3507 0000 B0B5     		push	{r4, r5, r7, lr}
 3508              		.cfi_def_cfa_offset 16
 3509              		.cfi_offset 4, -16
 3510              		.cfi_offset 5, -12
 3511              		.cfi_offset 7, -8
 3512              		.cfi_offset 14, -4
 3513 0002 82B0     		sub	sp, sp, #8
 3514              		.cfi_def_cfa_offset 24
 3515 0004 00AF     		add	r7, sp, #0
 3516              		.cfi_def_cfa_register 7
 790:.\main.c      ****     char rf_char = UART_GetChar();
 3517              		.loc 1 790 0
 3518 0006 FFF7FEFF 		bl	UART_GetChar
 3519 000a 0346     		mov	r3, r0
 3520 000c FB71     		strb	r3, [r7, #7]
 791:.\main.c      ****     if(rf_char == SOP){
 3521              		.loc 1 791 0
 3522 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3523 0010 AA2B     		cmp	r3, #170
 3524 0012 2BD1     		bne	.L192
 792:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 793:.\main.c      ****             if(byteCount == 34)
 3525              		.loc 1 793 0
 3526 0014 224B     		ldr	r3, .L196
 3527 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3528 0018 222B     		cmp	r3, #34
 3529 001a 20D1     		bne	.L193
 794:.\main.c      ****             {
 795:.\main.c      ****                 system_state = buffer_state;
 3530              		.loc 1 795 0
 3531 001c 214B     		ldr	r3, .L196+4
 3532 001e 224A     		ldr	r2, .L196+8
 3533 0020 1568     		ldr	r5, [r2]	@ unaligned
 3534 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3535 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 78


 3536 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3537 0028 1D60     		str	r5, [r3]	@ unaligned
 3538 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3539 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3540 002e D960     		str	r1, [r3, #12]	@ unaligned
 3541 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3542 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3543 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3544 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3545 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3546 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3547 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3548 003e D961     		str	r1, [r3, #28]	@ unaligned
 796:.\main.c      ****                 if(initial_pos_valid == 0)
 3549              		.loc 1 796 0
 3550 0040 1A4B     		ldr	r3, .L196+12
 3551 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3552 0044 002B     		cmp	r3, #0
 3553 0046 0AD1     		bne	.L193
 797:.\main.c      ****                 {
 798:.\main.c      ****                     LED_Write(~LED_Read());
 3554              		.loc 1 798 0
 3555 0048 FFF7FEFF 		bl	LED_Read
 3556 004c 0346     		mov	r3, r0
 3557 004e DB43     		mvns	r3, r3
 3558 0050 DBB2     		uxtb	r3, r3
 3559 0052 1846     		mov	r0, r3
 3560 0054 FFF7FEFF 		bl	LED_Write
 799:.\main.c      ****                     initial_pos_valid = 1;
 3561              		.loc 1 799 0
 3562 0058 144B     		ldr	r3, .L196+12
 3563 005a 0122     		movs	r2, #1
 3564 005c 1A70     		strb	r2, [r3]
 3565              	.L193:
 800:.\main.c      ****                 }
 801:.\main.c      ****             }
 802:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3566              		.loc 1 802 0
 3567 005e 104B     		ldr	r3, .L196
 3568 0060 0222     		movs	r2, #2
 3569 0062 1A70     		strb	r2, [r3]
 803:.\main.c      ****             flag_rx = 0;
 3570              		.loc 1 803 0
 3571 0064 124B     		ldr	r3, .L196+16
 3572 0066 0022     		movs	r2, #0
 3573 0068 1A70     		strb	r2, [r3]
 3574 006a 16E0     		b	.L191
 3575              	.L192:
 804:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 805:.\main.c      ****         }
 806:.\main.c      ****         else
 807:.\main.c      ****         {
 808:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3576              		.loc 1 808 0
 3577 006c 0C4B     		ldr	r3, .L196
 3578 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3579 0070 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 79


 3580 0074 0F49     		ldr	r1, .L196+20
 3581 0076 FA79     		ldrb	r2, [r7, #7]
 3582 0078 CA54     		strb	r2, [r1, r3]
 809:.\main.c      ****            
 810:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3583              		.loc 1 810 0
 3584 007a 094B     		ldr	r3, .L196
 3585 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3586 007e 03F00103 		and	r3, r3, #1
 3587 0082 DBB2     		uxtb	r3, r3
 3588 0084 002B     		cmp	r3, #0
 3589 0086 02D0     		beq	.L195
 811:.\main.c      ****             {
 812:.\main.c      ****                 flag_rx = 1;
 3590              		.loc 1 812 0
 3591 0088 094B     		ldr	r3, .L196+16
 3592 008a 0122     		movs	r2, #1
 3593 008c 1A70     		strb	r2, [r3]
 3594              	.L195:
 813:.\main.c      ****             }
 814:.\main.c      ****             byteCount = (byteCount + 1);
 3595              		.loc 1 814 0
 3596 008e 044B     		ldr	r3, .L196
 3597 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3598 0092 0133     		adds	r3, r3, #1
 3599 0094 DAB2     		uxtb	r2, r3
 3600 0096 024B     		ldr	r3, .L196
 3601 0098 1A70     		strb	r2, [r3]
 3602              	.L191:
 815:.\main.c      ****         }
 816:.\main.c      **** }
 3603              		.loc 1 816 0
 3604 009a 0837     		adds	r7, r7, #8
 3605              		.cfi_def_cfa_offset 16
 3606 009c BD46     		mov	sp, r7
 3607              		.cfi_def_cfa_register 13
 3608              		@ sp needed
 3609 009e B0BD     		pop	{r4, r5, r7, pc}
 3610              	.L197:
 3611              		.align	2
 3612              	.L196:
 3613 00a0 00000000 		.word	byteCount
 3614 00a4 00000000 		.word	system_state
 3615 00a8 00000000 		.word	buffer_state
 3616 00ac 00000000 		.word	initial_pos_valid
 3617 00b0 00000000 		.word	flag_rx
 3618 00b4 00000000 		.word	packet
 3619              		.cfi_endproc
 3620              	.LFE92:
 3621              		.size	rxInt, .-rxInt
 3622              		.global	__aeabi_i2f
 3623              		.global	__aeabi_fmul
 3624              		.global	__aeabi_f2iz
 3625              		.section	.rodata
 3626 00be 0000     		.align	2
 3627              	.LC10:
 3628 00c0 74617267 		.ascii	"target quad: %d\015\012\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 80


 3628      65742071 
 3628      7561643A 
 3628      2025640D 
 3628      0A00
 3629 00d2 0000     		.align	2
 3630              	.LC11:
 3631 00d4 72656365 		.ascii	"received: \000"
 3631      69766564 
 3631      3A2000
 3632 00df 00       		.align	2
 3633              	.LC12:
 3634 00e0 0D0A00   		.ascii	"\015\012\000"
 3635 00e3 00       		.align	2
 3636              	.LC13:
 3637 00e4 73746172 		.ascii	"starting from instruction %d\015\012\000"
 3637      74696E67 
 3637      2066726F 
 3637      6D20696E 
 3637      73747275 
 3638              		.section	.text.BT_rxInt,"ax",%progbits
 3639              		.align	2
 3640              		.global	BT_rxInt
 3641              		.thumb
 3642              		.thumb_func
 3643              		.type	BT_rxInt, %function
 3644              	BT_rxInt:
 3645              	.LFB93:
 817:.\main.c      **** 
 818:.\main.c      **** CY_ISR(BT_rxInt)
 819:.\main.c      **** {
 3646              		.loc 1 819 0
 3647              		.cfi_startproc
 3648              		@ args = 0, pretend = 0, frame = 32
 3649              		@ frame_needed = 1, uses_anonymous_args = 0
 3650 0000 80B5     		push	{r7, lr}
 3651              		.cfi_def_cfa_offset 8
 3652              		.cfi_offset 7, -8
 3653              		.cfi_offset 14, -4
 3654 0002 88B0     		sub	sp, sp, #32
 3655              		.cfi_def_cfa_offset 40
 3656 0004 00AF     		add	r7, sp, #0
 3657              		.cfi_def_cfa_register 7
 820:.\main.c      ****     char rf_char = UART_GetChar();
 3658              		.loc 1 820 0
 3659 0006 FFF7FEFF 		bl	UART_GetChar
 3660 000a 0346     		mov	r3, r0
 3661 000c FB77     		strb	r3, [r7, #31]
 821:.\main.c      ****     switch(rf_char){
 3662              		.loc 1 821 0
 3663 000e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3664 0010 313B     		subs	r3, r3, #49
 3665 0012 492B     		cmp	r3, #73
 3666 0014 00F26E82 		bhi	.L198
 3667 0018 01A2     		adr	r2, .L201
 3668 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3669 001e 00BF     		.p2align 2
 3670              	.L201:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 81


 3671 0020 5F030000 		.word	.L200+1
 3672 0024 15020000 		.word	.L202+1
 3673 0028 F5040000 		.word	.L198+1
 3674 002c F5040000 		.word	.L198+1
 3675 0030 F5040000 		.word	.L198+1
 3676 0034 F5040000 		.word	.L198+1
 3677 0038 F5040000 		.word	.L198+1
 3678 003c F5040000 		.word	.L198+1
 3679 0040 F5040000 		.word	.L198+1
 3680 0044 F5040000 		.word	.L198+1
 3681 0048 F5040000 		.word	.L198+1
 3682 004c F5040000 		.word	.L198+1
 3683 0050 F5040000 		.word	.L198+1
 3684 0054 F5040000 		.word	.L198+1
 3685 0058 F5040000 		.word	.L198+1
 3686 005c F5040000 		.word	.L198+1
 3687 0060 F5040000 		.word	.L198+1
 3688 0064 F5040000 		.word	.L198+1
 3689 0068 F5040000 		.word	.L198+1
 3690 006c F5040000 		.word	.L198+1
 3691 0070 F5040000 		.word	.L198+1
 3692 0074 F5040000 		.word	.L198+1
 3693 0078 F5040000 		.word	.L198+1
 3694 007c F5040000 		.word	.L198+1
 3695 0080 F5040000 		.word	.L198+1
 3696 0084 F5040000 		.word	.L198+1
 3697 0088 F5040000 		.word	.L198+1
 3698 008c F5040000 		.word	.L198+1
 3699 0090 F5040000 		.word	.L198+1
 3700 0094 F5040000 		.word	.L198+1
 3701 0098 F5040000 		.word	.L198+1
 3702 009c F5040000 		.word	.L198+1
 3703 00a0 F5040000 		.word	.L198+1
 3704 00a4 F5040000 		.word	.L198+1
 3705 00a8 F5040000 		.word	.L198+1
 3706 00ac F5040000 		.word	.L198+1
 3707 00b0 F5040000 		.word	.L198+1
 3708 00b4 F5040000 		.word	.L198+1
 3709 00b8 F5040000 		.word	.L198+1
 3710 00bc F5040000 		.word	.L198+1
 3711 00c0 F5040000 		.word	.L198+1
 3712 00c4 F5040000 		.word	.L198+1
 3713 00c8 F5040000 		.word	.L198+1
 3714 00cc F5040000 		.word	.L198+1
 3715 00d0 F5040000 		.word	.L198+1
 3716 00d4 F5040000 		.word	.L198+1
 3717 00d8 F5040000 		.word	.L198+1
 3718 00dc F5040000 		.word	.L198+1
 3719 00e0 49010000 		.word	.L203+1
 3720 00e4 F5040000 		.word	.L198+1
 3721 00e8 F5040000 		.word	.L198+1
 3722 00ec 6D010000 		.word	.L204+1
 3723 00f0 F5040000 		.word	.L198+1
 3724 00f4 79010000 		.word	.L205+1
 3725 00f8 F5040000 		.word	.L198+1
 3726 00fc F5040000 		.word	.L198+1
 3727 0100 F5040000 		.word	.L198+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 82


 3728 0104 F5040000 		.word	.L198+1
 3729 0108 F5040000 		.word	.L198+1
 3730 010c F5040000 		.word	.L198+1
 3731 0110 F5040000 		.word	.L198+1
 3732 0114 F5040000 		.word	.L198+1
 3733 0118 F5040000 		.word	.L198+1
 3734 011c F5040000 		.word	.L198+1
 3735 0120 A9010000 		.word	.L206+1
 3736 0124 FF010000 		.word	.L207+1
 3737 0128 61010000 		.word	.L208+1
 3738 012c 85010000 		.word	.L209+1
 3739 0130 91010000 		.word	.L210+1
 3740 0134 F5040000 		.word	.L198+1
 3741 0138 55010000 		.word	.L211+1
 3742 013c F5040000 		.word	.L198+1
 3743 0140 F5040000 		.word	.L198+1
 3744 0144 9D010000 		.word	.L212+1
 3745              		.p2align 1
 3746              	.L203:
 3747              	.LBB11:
 822:.\main.c      ****     case 'a':
 823:.\main.c      ****         initTurnLeft();
 3748              		.loc 1 823 0
 3749 0148 FFF7FEFF 		bl	initTurnLeft
 824:.\main.c      ****         track_mode = NO_TRACK;
 3750              		.loc 1 824 0
 3751 014c 974B     		ldr	r3, .L230
 3752 014e 0022     		movs	r2, #0
 3753 0150 1A70     		strb	r2, [r3]
 825:.\main.c      ****         break;
 3754              		.loc 1 825 0
 3755 0152 CFE1     		b	.L198
 3756              	.L211:
 826:.\main.c      ****     case 'w':
 827:.\main.c      ****         initForward();
 3757              		.loc 1 827 0
 3758 0154 FFF7FEFF 		bl	initForward
 828:.\main.c      ****         track_mode = NO_TRACK;
 3759              		.loc 1 828 0
 3760 0158 944B     		ldr	r3, .L230
 3761 015a 0022     		movs	r2, #0
 3762 015c 1A70     		strb	r2, [r3]
 829:.\main.c      ****         break;
 3763              		.loc 1 829 0
 3764 015e C9E1     		b	.L198
 3765              	.L208:
 830:.\main.c      ****     case 's': 
 831:.\main.c      ****         reverseDirection();
 3766              		.loc 1 831 0
 3767 0160 FFF7FEFF 		bl	reverseDirection
 832:.\main.c      ****         track_mode = NO_TRACK;
 3768              		.loc 1 832 0
 3769 0164 914B     		ldr	r3, .L230
 3770 0166 0022     		movs	r2, #0
 3771 0168 1A70     		strb	r2, [r3]
 833:.\main.c      ****         break;
 3772              		.loc 1 833 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 83


 3773 016a C3E1     		b	.L198
 3774              	.L204:
 834:.\main.c      ****     case 'd':
 835:.\main.c      ****         initTurnRight();
 3775              		.loc 1 835 0
 3776 016c FFF7FEFF 		bl	initTurnRight
 836:.\main.c      ****         track_mode = NO_TRACK;
 3777              		.loc 1 836 0
 3778 0170 8E4B     		ldr	r3, .L230
 3779 0172 0022     		movs	r2, #0
 3780 0174 1A70     		strb	r2, [r3]
 837:.\main.c      ****         break;
 3781              		.loc 1 837 0
 3782 0176 BDE1     		b	.L198
 3783              	.L205:
 838:.\main.c      ****     case 'f':
 839:.\main.c      ****         initBrake();
 3784              		.loc 1 839 0
 3785 0178 FFF7FEFF 		bl	initBrake
 840:.\main.c      ****         track_mode = NO_TRACK;
 3786              		.loc 1 840 0
 3787 017c 8B4B     		ldr	r3, .L230
 3788 017e 0022     		movs	r2, #0
 3789 0180 1A70     		strb	r2, [r3]
 841:.\main.c      ****         break;
 3790              		.loc 1 841 0
 3791 0182 B7E1     		b	.L198
 3792              	.L209:
 842:.\main.c      ****     case('t'):
 843:.\main.c      ****         track_mode = CURVE_TRACK;
 3793              		.loc 1 843 0
 3794 0184 894B     		ldr	r3, .L230
 3795 0186 0122     		movs	r2, #1
 3796 0188 1A70     		strb	r2, [r3]
 844:.\main.c      ****         initTrack();
 3797              		.loc 1 844 0
 3798 018a FFF7FEFF 		bl	initTrack
 845:.\main.c      ****         break;
 3799              		.loc 1 845 0
 3800 018e B1E1     		b	.L198
 3801              	.L210:
 846:.\main.c      ****     case('u'):
 847:.\main.c      ****         initTrackU();
 3802              		.loc 1 847 0
 3803 0190 FFF7FEFF 		bl	initTrackU
 848:.\main.c      ****         track_mode = U_TRACK;
 3804              		.loc 1 848 0
 3805 0194 854B     		ldr	r3, .L230
 3806 0196 0222     		movs	r2, #2
 3807 0198 1A70     		strb	r2, [r3]
 849:.\main.c      ****         break;
 3808              		.loc 1 849 0
 3809 019a ABE1     		b	.L198
 3810              	.L212:
 850:.\main.c      ****     case('z'):
 851:.\main.c      ****         track_mode = SQUARE_TRACK;
 3811              		.loc 1 851 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 84


 3812 019c 834B     		ldr	r3, .L230
 3813 019e 0322     		movs	r2, #3
 3814 01a0 1A70     		strb	r2, [r3]
 852:.\main.c      ****         inittrackLineZ();
 3815              		.loc 1 852 0
 3816 01a2 FFF7FEFF 		bl	inittrackLineZ
 853:.\main.c      ****         break;
 3817              		.loc 1 853 0
 3818 01a6 A5E1     		b	.L198
 3819              	.L206:
 854:.\main.c      ****     case('q'):
 855:.\main.c      ****         track_mode = QUAD_STOP;
 3820              		.loc 1 855 0
 3821 01a8 804B     		ldr	r3, .L230
 3822 01aa 0422     		movs	r2, #4
 3823 01ac 1A70     		strb	r2, [r3]
 856:.\main.c      ****         accum_dist = 0;
 3824              		.loc 1 856 0
 3825 01ae 804B     		ldr	r3, .L230+4
 3826 01b0 0022     		movs	r2, #0
 3827 01b2 1A80     		strh	r2, [r3]	@ movhi
 857:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3828              		.loc 1 857 0
 3829 01b4 7F4B     		ldr	r3, .L230+8
 3830 01b6 1B88     		ldrh	r3, [r3]
 3831 01b8 1BB2     		sxth	r3, r3
 3832 01ba 1846     		mov	r0, r3
 3833 01bc FFF7FEFF 		bl	__aeabi_i2f
 3834 01c0 0246     		mov	r2, r0
 3835 01c2 7D4B     		ldr	r3, .L230+12
 3836 01c4 1B68     		ldr	r3, [r3]	@ float
 3837 01c6 1046     		mov	r0, r2
 3838 01c8 1946     		mov	r1, r3
 3839 01ca FFF7FEFF 		bl	__aeabi_fmul
 3840 01ce 0346     		mov	r3, r0
 3841 01d0 1846     		mov	r0, r3
 3842 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3843 01d6 0346     		mov	r3, r0
 3844 01d8 9AB2     		uxth	r2, r3
 3845 01da 784B     		ldr	r3, .L230+16
 3846 01dc 1A80     		strh	r2, [r3]	@ movhi
 858:.\main.c      ****         char mes[16];
 859:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3847              		.loc 1 859 0
 3848 01de 774B     		ldr	r3, .L230+16
 3849 01e0 1B88     		ldrh	r3, [r3]
 3850 01e2 1BB2     		sxth	r3, r3
 3851 01e4 3A46     		mov	r2, r7
 3852 01e6 1046     		mov	r0, r2
 3853 01e8 7549     		ldr	r1, .L230+20
 3854 01ea 1A46     		mov	r2, r3
 3855 01ec FFF7FEFF 		bl	sprintf
 860:.\main.c      ****         UART_PutString(mes);
 3856              		.loc 1 860 0
 3857 01f0 3B46     		mov	r3, r7
 3858 01f2 1846     		mov	r0, r3
 3859 01f4 FFF7FEFF 		bl	UART_PutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 85


 861:.\main.c      ****         initForward();
 3860              		.loc 1 861 0
 3861 01f8 FFF7FEFF 		bl	initForward
 862:.\main.c      ****         break;
 3862              		.loc 1 862 0
 3863 01fc 7AE1     		b	.L198
 3864              	.L207:
 863:.\main.c      ****     case ('r'):
 864:.\main.c      ****         track_mode = RF_STOP;
 3865              		.loc 1 864 0
 3866 01fe 6B4B     		ldr	r3, .L230
 3867 0200 0522     		movs	r2, #5
 3868 0202 1A70     		strb	r2, [r3]
 865:.\main.c      ****         changeToRF();
 3869              		.loc 1 865 0
 3870 0204 FFF7FEFF 		bl	changeToRF
 866:.\main.c      ****         // Make initial position
 867:.\main.c      ****         initial_pos_valid = 0;
 3871              		.loc 1 867 0
 3872 0208 6E4B     		ldr	r3, .L230+24
 3873 020a 0022     		movs	r2, #0
 3874 020c 1A70     		strb	r2, [r3]
 868:.\main.c      ****         initBrake();
 3875              		.loc 1 868 0
 3876 020e FFF7FEFF 		bl	initBrake
 869:.\main.c      ****         break;
 3877              		.loc 1 869 0
 3878 0212 6FE1     		b	.L198
 3879              	.L202:
 870:.\main.c      ****     case ('2'):
 871:.\main.c      ****         track_mode = DEST_TEST;
 3880              		.loc 1 871 0
 3881 0214 654B     		ldr	r3, .L230
 3882 0216 0622     		movs	r2, #6
 3883 0218 1A70     		strb	r2, [r3]
 872:.\main.c      ****         tracked_direction = robot_direction;
 3884              		.loc 1 872 0
 3885 021a 6B4B     		ldr	r3, .L230+28
 3886 021c 1B68     		ldr	r3, [r3]
 3887 021e 6B4A     		ldr	r2, .L230+32
 3888 0220 1360     		str	r3, [r2]
 873:.\main.c      ****         instructionLength = generateDirections();
 3889              		.loc 1 873 0
 3890 0222 FFF7FEFF 		bl	generateDirections
 3891 0226 0346     		mov	r3, r0
 3892 0228 9AB2     		uxth	r2, r3
 3893 022a 694B     		ldr	r3, .L230+36
 3894 022c 1A80     		strh	r2, [r3]	@ movhi
 874:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 875:.\main.c      ****         //char message[128];
 876:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 877:.\main.c      ****         
 878:.\main.c      ****         last_quad_count1 = 0;
 3895              		.loc 1 878 0
 3896 022e 694B     		ldr	r3, .L230+40
 3897 0230 0022     		movs	r2, #0
 3898 0232 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 86


 879:.\main.c      ****         last_quad_count2 = 0;
 3899              		.loc 1 879 0
 3900 0234 684B     		ldr	r3, .L230+44
 3901 0236 0022     		movs	r2, #0
 3902 0238 1A80     		strh	r2, [r3]	@ movhi
 880:.\main.c      ****         QuadDec_M1_SetCounter(0);
 3903              		.loc 1 880 0
 3904 023a 0020     		movs	r0, #0
 3905 023c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 881:.\main.c      ****         QuadDec_M2_SetCounter(0);
 3906              		.loc 1 881 0
 3907 0240 0020     		movs	r0, #0
 3908 0242 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 882:.\main.c      ****         instructionCount = 0;
 3909              		.loc 1 882 0
 3910 0246 654B     		ldr	r3, .L230+48
 3911 0248 0022     		movs	r2, #0
 3912 024a 1A80     		strh	r2, [r3]	@ movhi
 883:.\main.c      ****         isrRF_RX_Disable();
 3913              		.loc 1 883 0
 3914 024c FFF7FEFF 		bl	isrRF_RX_Disable
 884:.\main.c      ****         while(rf_char != 'F')
 3915              		.loc 1 884 0
 3916 0250 26E0     		b	.L214
 3917              	.L217:
 885:.\main.c      ****         {
 886:.\main.c      ****             rf_char = UART_GetChar();
 3918              		.loc 1 886 0
 3919 0252 FFF7FEFF 		bl	UART_GetChar
 3920 0256 0346     		mov	r3, r0
 3921 0258 FB77     		strb	r3, [r7, #31]
 887:.\main.c      ****             if(rf_char == 'F') break;
 3922              		.loc 1 887 0
 3923 025a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3924 025c 462B     		cmp	r3, #70
 3925 025e 00D1     		bne	.L215
 3926 0260 21E0     		b	.L216
 3927              	.L215:
 888:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 3928              		.loc 1 888 0
 3929 0262 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3930 0264 2F2B     		cmp	r3, #47
 3931 0266 1BD9     		bls	.L214
 3932              		.loc 1 888 0 is_stmt 0 discriminator 1
 3933 0268 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3934 026a 392B     		cmp	r3, #57
 3935 026c 18D8     		bhi	.L214
 889:.\main.c      ****             {
 890:.\main.c      ****                 UART_PutString("received: ");
 3936              		.loc 1 890 0 is_stmt 1
 3937 026e 5C48     		ldr	r0, .L230+52
 3938 0270 FFF7FEFF 		bl	UART_PutString
 891:.\main.c      ****                 UART_PutChar(rf_char);
 3939              		.loc 1 891 0
 3940 0274 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3941 0276 1846     		mov	r0, r3
 3942 0278 FFF7FEFF 		bl	UART_PutChar
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 87


 892:.\main.c      ****                 UART_PutString("\r\n");
 3943              		.loc 1 892 0
 3944 027c 5948     		ldr	r0, .L230+56
 3945 027e FFF7FEFF 		bl	UART_PutString
 893:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 3946              		.loc 1 893 0
 3947 0282 564B     		ldr	r3, .L230+48
 3948 0284 1B88     		ldrh	r3, [r3]
 3949 0286 1A46     		mov	r2, r3	@ movhi
 3950 0288 9200     		lsls	r2, r2, #2
 3951 028a 1344     		add	r3, r3, r2
 3952 028c 5B00     		lsls	r3, r3, #1
 3953 028e 9AB2     		uxth	r2, r3
 3954 0290 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3955 0292 9BB2     		uxth	r3, r3
 3956 0294 1344     		add	r3, r3, r2
 3957 0296 9BB2     		uxth	r3, r3
 3958 0298 303B     		subs	r3, r3, #48
 3959 029a 9AB2     		uxth	r2, r3
 3960 029c 4F4B     		ldr	r3, .L230+48
 3961 029e 1A80     		strh	r2, [r3]	@ movhi
 3962              	.L214:
 884:.\main.c      ****         {
 3963              		.loc 1 884 0
 3964 02a0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3965 02a2 462B     		cmp	r3, #70
 3966 02a4 D5D1     		bne	.L217
 3967              	.L216:
 894:.\main.c      ****             }
 895:.\main.c      ****             
 896:.\main.c      ****         }
 897:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3968              		.loc 1 897 0
 3969 02a6 5048     		ldr	r0, .L230+60
 3970 02a8 FFF7FEFF 		bl	isrRF_RX_StartEx
 898:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 3971              		.loc 1 898 0
 3972 02ac 4B4B     		ldr	r3, .L230+48
 3973 02ae 1B88     		ldrh	r3, [r3]
 3974 02b0 1A46     		mov	r2, r3
 3975 02b2 3B46     		mov	r3, r7
 3976 02b4 1846     		mov	r0, r3
 3977 02b6 4D49     		ldr	r1, .L230+64
 3978 02b8 FFF7FEFF 		bl	sprintf
 899:.\main.c      ****         UART_PutString(mes);
 3979              		.loc 1 899 0
 3980 02bc 3B46     		mov	r3, r7
 3981 02be 1846     		mov	r0, r3
 3982 02c0 FFF7FEFF 		bl	UART_PutString
 900:.\main.c      ****         
 901:.\main.c      ****         int i;
 902:.\main.c      ****         for(i = instructionCount;i < instructionLength; i++)
 3983              		.loc 1 902 0
 3984 02c4 454B     		ldr	r3, .L230+48
 3985 02c6 1B88     		ldrh	r3, [r3]
 3986 02c8 BB61     		str	r3, [r7, #24]
 3987 02ca 18E0     		b	.L218
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 88


 3988              	.L221:
 903:.\main.c      ****         {
 904:.\main.c      ****             if(i%2 == 0)
 3989              		.loc 1 904 0
 3990 02cc BB69     		ldr	r3, [r7, #24]
 3991 02ce 03F00103 		and	r3, r3, #1
 3992 02d2 002B     		cmp	r3, #0
 3993 02d4 07D1     		bne	.L219
 905:.\main.c      ****             {
 906:.\main.c      ****                 UART_PutChar(instructions[i]);
 3994              		.loc 1 906 0
 3995 02d6 464A     		ldr	r2, .L230+68
 3996 02d8 BB69     		ldr	r3, [r7, #24]
 3997 02da 1344     		add	r3, r3, r2
 3998 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 02de 1846     		mov	r0, r3
 4000 02e0 FFF7FEFF 		bl	UART_PutChar
 4001 02e4 08E0     		b	.L220
 4002              	.L219:
 907:.\main.c      ****             }
 908:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 4003              		.loc 1 908 0
 4004 02e6 424A     		ldr	r2, .L230+68
 4005 02e8 BB69     		ldr	r3, [r7, #24]
 4006 02ea 1344     		add	r3, r3, r2
 4007 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4008 02ee 3033     		adds	r3, r3, #48
 4009 02f0 DBB2     		uxtb	r3, r3
 4010 02f2 1846     		mov	r0, r3
 4011 02f4 FFF7FEFF 		bl	UART_PutChar
 4012              	.L220:
 902:.\main.c      ****         {
 4013              		.loc 1 902 0 discriminator 2
 4014 02f8 BB69     		ldr	r3, [r7, #24]
 4015 02fa 0133     		adds	r3, r3, #1
 4016 02fc BB61     		str	r3, [r7, #24]
 4017              	.L218:
 902:.\main.c      ****         {
 4018              		.loc 1 902 0 is_stmt 0 discriminator 1
 4019 02fe 344B     		ldr	r3, .L230+36
 4020 0300 1B88     		ldrh	r3, [r3]
 4021 0302 1A46     		mov	r2, r3
 4022 0304 BB69     		ldr	r3, [r7, #24]
 4023 0306 9A42     		cmp	r2, r3
 4024 0308 E0DC     		bgt	.L221
 909:.\main.c      **** 
 910:.\main.c      ****         }
 911:.\main.c      ****         
 912:.\main.c      ****         UART_PutString("\r\n");
 4025              		.loc 1 912 0 is_stmt 1
 4026 030a 3648     		ldr	r0, .L230+56
 4027 030c FFF7FEFF 		bl	UART_PutString
 913:.\main.c      ****         
 914:.\main.c      ****         char nextStep = instructions[instructionCount];
 4028              		.loc 1 914 0
 4029 0310 324B     		ldr	r3, .L230+48
 4030 0312 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 89


 4031 0314 1A46     		mov	r2, r3
 4032 0316 364B     		ldr	r3, .L230+68
 4033 0318 9B5C     		ldrb	r3, [r3, r2]
 4034 031a FB74     		strb	r3, [r7, #19]
 915:.\main.c      ****         
 916:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 4035              		.loc 1 916 0
 4036 031c 2F4B     		ldr	r3, .L230+48
 4037 031e 1B88     		ldrh	r3, [r3]
 4038 0320 0133     		adds	r3, r3, #1
 4039 0322 334A     		ldr	r2, .L230+68
 4040 0324 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4041 0326 9BB2     		uxth	r3, r3
 4042 0328 1A46     		mov	r2, r3	@ movhi
 4043 032a 9200     		lsls	r2, r2, #2
 4044 032c 1344     		add	r3, r3, r2
 4045 032e 1A46     		mov	r2, r3	@ movhi
 4046 0330 D200     		lsls	r2, r2, #3
 4047 0332 D31A     		subs	r3, r2, r3
 4048 0334 9B00     		lsls	r3, r3, #2
 4049 0336 9BB2     		uxth	r3, r3
 4050 0338 9AB2     		uxth	r2, r3
 4051 033a 204B     		ldr	r3, .L230+16
 4052 033c 1A80     		strh	r2, [r3]	@ movhi
 917:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4053              		.loc 1 917 0
 4054 033e 1F4B     		ldr	r3, .L230+16
 4055 0340 1B88     		ldrh	r3, [r3]
 4056 0342 1BB2     		sxth	r3, r3
 4057 0344 3A46     		mov	r2, r7
 4058 0346 1046     		mov	r0, r2
 4059 0348 2A49     		ldr	r1, .L230+72
 4060 034a 1A46     		mov	r2, r3
 4061 034c FFF7FEFF 		bl	sprintf
 918:.\main.c      ****         UART_PutString(mes);
 4062              		.loc 1 918 0
 4063 0350 3B46     		mov	r3, r7
 4064 0352 1846     		mov	r0, r3
 4065 0354 FFF7FEFF 		bl	UART_PutString
 919:.\main.c      ****         inittrackLineZ();
 4066              		.loc 1 919 0
 4067 0358 FFF7FEFF 		bl	inittrackLineZ
 920:.\main.c      ****         break;
 4068              		.loc 1 920 0
 4069 035c CAE0     		b	.L198
 4070              	.L200:
 921:.\main.c      ****     case ('1'):
 922:.\main.c      ****         track_mode = DEST_TEST;
 4071              		.loc 1 922 0
 4072 035e 134B     		ldr	r3, .L230
 4073 0360 0622     		movs	r2, #6
 4074 0362 1A70     		strb	r2, [r3]
 923:.\main.c      ****         tracked_direction = robot_direction;
 4075              		.loc 1 923 0
 4076 0364 184B     		ldr	r3, .L230+28
 4077 0366 1B68     		ldr	r3, [r3]
 4078 0368 184A     		ldr	r2, .L230+32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 90


 4079 036a 1360     		str	r3, [r2]
 924:.\main.c      ****         //instructionLength = generateDirections();
 925:.\main.c      ****         instructionLength = generateEntireMapDirections();
 4080              		.loc 1 925 0
 4081 036c FFF7FEFF 		bl	generateEntireMapDirections
 4082 0370 0346     		mov	r3, r0
 4083 0372 9AB2     		uxth	r2, r3
 4084 0374 164B     		ldr	r3, .L230+36
 4085 0376 1A80     		strh	r2, [r3]	@ movhi
 926:.\main.c      ****         //char message[128];
 927:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 928:.\main.c      ****         instructionCount = 0;
 4086              		.loc 1 928 0
 4087 0378 184B     		ldr	r3, .L230+48
 4088 037a 0022     		movs	r2, #0
 4089 037c 1A80     		strh	r2, [r3]	@ movhi
 929:.\main.c      ****         QuadDec_M1_SetCounter(0);
 4090              		.loc 1 929 0
 4091 037e 0020     		movs	r0, #0
 4092 0380 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 930:.\main.c      ****         QuadDec_M2_SetCounter(0);
 4093              		.loc 1 930 0
 4094 0384 0020     		movs	r0, #0
 4095 0386 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 931:.\main.c      ****         last_quad_count1 = 0;
 4096              		.loc 1 931 0
 4097 038a 124B     		ldr	r3, .L230+40
 4098 038c 0022     		movs	r2, #0
 4099 038e 1A80     		strh	r2, [r3]	@ movhi
 932:.\main.c      ****         last_quad_count2 = 0;
 4100              		.loc 1 932 0
 4101 0390 114B     		ldr	r3, .L230+44
 4102 0392 0022     		movs	r2, #0
 4103 0394 1A80     		strh	r2, [r3]	@ movhi
 933:.\main.c      ****         isrRF_RX_Disable();
 4104              		.loc 1 933 0
 4105 0396 FFF7FEFF 		bl	isrRF_RX_Disable
 934:.\main.c      ****         while(rf_char != 'F')
 4106              		.loc 1 934 0
 4107 039a 4CE0     		b	.L222
 4108              	.L225:
 935:.\main.c      ****         {
 936:.\main.c      ****             rf_char = UART_GetChar();
 4109              		.loc 1 936 0
 4110 039c FFF7FEFF 		bl	UART_GetChar
 4111 03a0 0346     		mov	r3, r0
 4112 03a2 FB77     		strb	r3, [r7, #31]
 937:.\main.c      ****             if(rf_char == 'F') break;
 4113              		.loc 1 937 0
 4114 03a4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4115 03a6 462B     		cmp	r3, #70
 4116 03a8 26D1     		bne	.L223
 4117 03aa 47E0     		b	.L224
 4118              	.L231:
 4119              		.align	2
 4120              	.L230:
 4121 03ac 00000000 		.word	track_mode
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 91


 4122 03b0 00000000 		.word	accum_dist
 4123 03b4 00000000 		.word	target_distance_cm
 4124 03b8 00000000 		.word	quad_per_cm
 4125 03bc 00000000 		.word	target_distance_quad
 4126 03c0 C0000000 		.word	.LC10
 4127 03c4 00000000 		.word	initial_pos_valid
 4128 03c8 00000000 		.word	robot_direction
 4129 03cc 00000000 		.word	tracked_direction
 4130 03d0 00000000 		.word	instructionLength
 4131 03d4 00000000 		.word	last_quad_count1
 4132 03d8 00000000 		.word	last_quad_count2
 4133 03dc 00000000 		.word	instructionCount
 4134 03e0 D4000000 		.word	.LC11
 4135 03e4 E0000000 		.word	.LC12
 4136 03e8 00000000 		.word	BT_rxInt
 4137 03ec E4000000 		.word	.LC13
 4138 03f0 00000000 		.word	instructions
 4139 03f4 64000000 		.word	.LC5
 4140              	.L223:
 938:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 4141              		.loc 1 938 0
 4142 03f8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4143 03fa 2F2B     		cmp	r3, #47
 4144 03fc 1BD9     		bls	.L222
 4145              		.loc 1 938 0 is_stmt 0 discriminator 1
 4146 03fe FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4147 0400 392B     		cmp	r3, #57
 4148 0402 18D8     		bhi	.L222
 939:.\main.c      ****             {
 940:.\main.c      ****                 UART_PutString("received: ");
 4149              		.loc 1 940 0 is_stmt 1
 4150 0404 3D48     		ldr	r0, .L232
 4151 0406 FFF7FEFF 		bl	UART_PutString
 941:.\main.c      ****                 UART_PutChar(rf_char);
 4152              		.loc 1 941 0
 4153 040a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4154 040c 1846     		mov	r0, r3
 4155 040e FFF7FEFF 		bl	UART_PutChar
 942:.\main.c      ****                 UART_PutString("\r\n");
 4156              		.loc 1 942 0
 4157 0412 3B48     		ldr	r0, .L232+4
 4158 0414 FFF7FEFF 		bl	UART_PutString
 943:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4159              		.loc 1 943 0
 4160 0418 3A4B     		ldr	r3, .L232+8
 4161 041a 1B88     		ldrh	r3, [r3]
 4162 041c 1A46     		mov	r2, r3	@ movhi
 4163 041e 9200     		lsls	r2, r2, #2
 4164 0420 1344     		add	r3, r3, r2
 4165 0422 5B00     		lsls	r3, r3, #1
 4166 0424 9AB2     		uxth	r2, r3
 4167 0426 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4168 0428 9BB2     		uxth	r3, r3
 4169 042a 1344     		add	r3, r3, r2
 4170 042c 9BB2     		uxth	r3, r3
 4171 042e 303B     		subs	r3, r3, #48
 4172 0430 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 92


 4173 0432 344B     		ldr	r3, .L232+8
 4174 0434 1A80     		strh	r2, [r3]	@ movhi
 4175              	.L222:
 934:.\main.c      ****         {
 4176              		.loc 1 934 0
 4177 0436 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4178 0438 462B     		cmp	r3, #70
 4179 043a AFD1     		bne	.L225
 4180              	.L224:
 944:.\main.c      ****             }
 945:.\main.c      ****             
 946:.\main.c      ****         }
 947:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4181              		.loc 1 947 0
 4182 043c 3248     		ldr	r0, .L232+12
 4183 043e FFF7FEFF 		bl	isrRF_RX_StartEx
 948:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4184              		.loc 1 948 0
 4185 0442 304B     		ldr	r3, .L232+8
 4186 0444 1B88     		ldrh	r3, [r3]
 4187 0446 1A46     		mov	r2, r3
 4188 0448 3B46     		mov	r3, r7
 4189 044a 1846     		mov	r0, r3
 4190 044c 2F49     		ldr	r1, .L232+16
 4191 044e FFF7FEFF 		bl	sprintf
 949:.\main.c      ****         UART_PutString(mes);
 4192              		.loc 1 949 0
 4193 0452 3B46     		mov	r3, r7
 4194 0454 1846     		mov	r0, r3
 4195 0456 FFF7FEFF 		bl	UART_PutString
 950:.\main.c      ****         //instructionCount = instructionLength - 22;
 951:.\main.c      ****         int x;
 952:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 4196              		.loc 1 952 0
 4197 045a 2A4B     		ldr	r3, .L232+8
 4198 045c 1B88     		ldrh	r3, [r3]
 4199 045e 7B61     		str	r3, [r7, #20]
 4200 0460 18E0     		b	.L226
 4201              	.L229:
 953:.\main.c      ****         {
 954:.\main.c      ****             if(x%2 == 0)
 4202              		.loc 1 954 0
 4203 0462 7B69     		ldr	r3, [r7, #20]
 4204 0464 03F00103 		and	r3, r3, #1
 4205 0468 002B     		cmp	r3, #0
 4206 046a 07D1     		bne	.L227
 955:.\main.c      ****             {
 956:.\main.c      ****                 UART_PutChar(instructions[x]);
 4207              		.loc 1 956 0
 4208 046c 284A     		ldr	r2, .L232+20
 4209 046e 7B69     		ldr	r3, [r7, #20]
 4210 0470 1344     		add	r3, r3, r2
 4211 0472 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4212 0474 1846     		mov	r0, r3
 4213 0476 FFF7FEFF 		bl	UART_PutChar
 4214 047a 08E0     		b	.L228
 4215              	.L227:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 93


 957:.\main.c      ****             }
 958:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 4216              		.loc 1 958 0
 4217 047c 244A     		ldr	r2, .L232+20
 4218 047e 7B69     		ldr	r3, [r7, #20]
 4219 0480 1344     		add	r3, r3, r2
 4220 0482 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4221 0484 3033     		adds	r3, r3, #48
 4222 0486 DBB2     		uxtb	r3, r3
 4223 0488 1846     		mov	r0, r3
 4224 048a FFF7FEFF 		bl	UART_PutChar
 4225              	.L228:
 952:.\main.c      ****         {
 4226              		.loc 1 952 0 discriminator 2
 4227 048e 7B69     		ldr	r3, [r7, #20]
 4228 0490 0133     		adds	r3, r3, #1
 4229 0492 7B61     		str	r3, [r7, #20]
 4230              	.L226:
 952:.\main.c      ****         {
 4231              		.loc 1 952 0 is_stmt 0 discriminator 1
 4232 0494 1F4B     		ldr	r3, .L232+24
 4233 0496 1B88     		ldrh	r3, [r3]
 4234 0498 1A46     		mov	r2, r3
 4235 049a 7B69     		ldr	r3, [r7, #20]
 4236 049c 9A42     		cmp	r2, r3
 4237 049e E0DC     		bgt	.L229
 959:.\main.c      **** 
 960:.\main.c      ****         }
 961:.\main.c      ****         
 962:.\main.c      ****         UART_PutString("\r\n");
 4238              		.loc 1 962 0 is_stmt 1
 4239 04a0 1748     		ldr	r0, .L232+4
 4240 04a2 FFF7FEFF 		bl	UART_PutString
 963:.\main.c      **** 
 964:.\main.c      ****         nextStep = instructions[instructionCount];
 4241              		.loc 1 964 0
 4242 04a6 174B     		ldr	r3, .L232+8
 4243 04a8 1B88     		ldrh	r3, [r3]
 4244 04aa 1A46     		mov	r2, r3
 4245 04ac 184B     		ldr	r3, .L232+20
 4246 04ae 9B5C     		ldrb	r3, [r3, r2]
 4247 04b0 FB74     		strb	r3, [r7, #19]
 965:.\main.c      ****         
 966:.\main.c      ****         
 967:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 4248              		.loc 1 967 0
 4249 04b2 144B     		ldr	r3, .L232+8
 4250 04b4 1B88     		ldrh	r3, [r3]
 4251 04b6 0133     		adds	r3, r3, #1
 4252 04b8 154A     		ldr	r2, .L232+20
 4253 04ba D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4254 04bc 9BB2     		uxth	r3, r3
 4255 04be 1A46     		mov	r2, r3	@ movhi
 4256 04c0 9200     		lsls	r2, r2, #2
 4257 04c2 1344     		add	r3, r3, r2
 4258 04c4 1A46     		mov	r2, r3	@ movhi
 4259 04c6 D200     		lsls	r2, r2, #3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 94


 4260 04c8 D31A     		subs	r3, r2, r3
 4261 04ca 9B00     		lsls	r3, r3, #2
 4262 04cc 9BB2     		uxth	r3, r3
 4263 04ce 9AB2     		uxth	r2, r3
 4264 04d0 114B     		ldr	r3, .L232+28
 4265 04d2 1A80     		strh	r2, [r3]	@ movhi
 968:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4266              		.loc 1 968 0
 4267 04d4 104B     		ldr	r3, .L232+28
 4268 04d6 1B88     		ldrh	r3, [r3]
 4269 04d8 1BB2     		sxth	r3, r3
 4270 04da 3A46     		mov	r2, r7
 4271 04dc 1046     		mov	r0, r2
 4272 04de 0F49     		ldr	r1, .L232+32
 4273 04e0 1A46     		mov	r2, r3
 4274 04e2 FFF7FEFF 		bl	sprintf
 969:.\main.c      ****         UART_PutString(mes);
 4275              		.loc 1 969 0
 4276 04e6 3B46     		mov	r3, r7
 4277 04e8 1846     		mov	r0, r3
 4278 04ea FFF7FEFF 		bl	UART_PutString
 970:.\main.c      ****         inittrackLineZ();
 4279              		.loc 1 970 0
 4280 04ee FFF7FEFF 		bl	inittrackLineZ
 971:.\main.c      ****         break;
 4281              		.loc 1 971 0
 4282 04f2 00BF     		nop
 4283              	.L198:
 4284              	.LBE11:
 972:.\main.c      ****     }
 973:.\main.c      **** }
 4285              		.loc 1 973 0
 4286 04f4 2037     		adds	r7, r7, #32
 4287              		.cfi_def_cfa_offset 8
 4288 04f6 BD46     		mov	sp, r7
 4289              		.cfi_def_cfa_register 13
 4290              		@ sp needed
 4291 04f8 80BD     		pop	{r7, pc}
 4292              	.L233:
 4293 04fa 00BF     		.align	2
 4294              	.L232:
 4295 04fc D4000000 		.word	.LC11
 4296 0500 E0000000 		.word	.LC12
 4297 0504 00000000 		.word	instructionCount
 4298 0508 00000000 		.word	BT_rxInt
 4299 050c E4000000 		.word	.LC13
 4300 0510 00000000 		.word	instructions
 4301 0514 00000000 		.word	instructionLength
 4302 0518 00000000 		.word	target_distance_quad
 4303 051c 64000000 		.word	.LC5
 4304              		.cfi_endproc
 4305              	.LFE93:
 4306              		.size	BT_rxInt, .-BT_rxInt
 4307              		.section	.text.changeToRF,"ax",%progbits
 4308              		.align	2
 4309              		.global	changeToRF
 4310              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 95


 4311              		.thumb_func
 4312              		.type	changeToRF, %function
 4313              	changeToRF:
 4314              	.LFB94:
 974:.\main.c      **** 
 975:.\main.c      **** 
 976:.\main.c      **** void changeToRF()
 977:.\main.c      **** {
 4315              		.loc 1 977 0
 4316              		.cfi_startproc
 4317              		@ args = 0, pretend = 0, frame = 0
 4318              		@ frame_needed = 1, uses_anonymous_args = 0
 4319 0000 80B5     		push	{r7, lr}
 4320              		.cfi_def_cfa_offset 8
 4321              		.cfi_offset 7, -8
 4322              		.cfi_offset 14, -4
 4323 0002 00AF     		add	r7, sp, #0
 4324              		.cfi_def_cfa_register 7
 978:.\main.c      ****         //disable BT
 979:.\main.c      ****         BT_ENABLED = 0;
 4325              		.loc 1 979 0
 4326 0004 0B4B     		ldr	r3, .L235
 4327 0006 0022     		movs	r2, #0
 4328 0008 1A70     		strb	r2, [r3]
 980:.\main.c      ****         isrRF_RX_Stop();
 4329              		.loc 1 980 0
 4330 000a FFF7FEFF 		bl	isrRF_RX_Stop
 981:.\main.c      ****         UART_Stop();
 4331              		.loc 1 981 0
 4332 000e FFF7FEFF 		bl	UART_Stop
 982:.\main.c      ****         
 983:.\main.c      ****         //enable RF
 984:.\main.c      ****         BIN_ENABLED = 1;
 4333              		.loc 1 984 0
 4334 0012 094B     		ldr	r3, .L235+4
 4335 0014 0122     		movs	r2, #1
 4336 0016 1A70     		strb	r2, [r3]
 985:.\main.c      ****         UART_clk_SetDividerValue(130);
 4337              		.loc 1 985 0
 4338 0018 8120     		movs	r0, #129
 4339 001a 0121     		movs	r1, #1
 4340 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 986:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4341              		.loc 1 986 0
 4342 0020 0648     		ldr	r0, .L235+8
 4343 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 987:.\main.c      ****         UART_Start();
 4344              		.loc 1 987 0
 4345 0026 FFF7FEFF 		bl	UART_Start
 988:.\main.c      ****         RF_BT_SELECT_Write(0);
 4346              		.loc 1 988 0
 4347 002a 0020     		movs	r0, #0
 4348 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 989:.\main.c      **** }
 4349              		.loc 1 989 0
 4350 0030 80BD     		pop	{r7, pc}
 4351              	.L236:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 96


 4352 0032 00BF     		.align	2
 4353              	.L235:
 4354 0034 00000000 		.word	BT_ENABLED
 4355 0038 00000000 		.word	BIN_ENABLED
 4356 003c 00000000 		.word	rxInt
 4357              		.cfi_endproc
 4358              	.LFE94:
 4359              		.size	changeToRF, .-changeToRF
 4360              		.section	.text.changeToBT,"ax",%progbits
 4361              		.align	2
 4362              		.global	changeToBT
 4363              		.thumb
 4364              		.thumb_func
 4365              		.type	changeToBT, %function
 4366              	changeToBT:
 4367              	.LFB95:
 990:.\main.c      **** 
 991:.\main.c      **** void changeToBT()
 992:.\main.c      **** {
 4368              		.loc 1 992 0
 4369              		.cfi_startproc
 4370              		@ args = 0, pretend = 0, frame = 0
 4371              		@ frame_needed = 1, uses_anonymous_args = 0
 4372 0000 80B5     		push	{r7, lr}
 4373              		.cfi_def_cfa_offset 8
 4374              		.cfi_offset 7, -8
 4375              		.cfi_offset 14, -4
 4376 0002 00AF     		add	r7, sp, #0
 4377              		.cfi_def_cfa_register 7
 993:.\main.c      ****         //disable RF
 994:.\main.c      ****         BIN_ENABLED = 0;
 4378              		.loc 1 994 0
 4379 0004 0B4B     		ldr	r3, .L238
 4380 0006 0022     		movs	r2, #0
 4381 0008 1A70     		strb	r2, [r3]
 995:.\main.c      ****         isrRF_RX_Stop();
 4382              		.loc 1 995 0
 4383 000a FFF7FEFF 		bl	isrRF_RX_Stop
 996:.\main.c      ****         UART_Stop();
 4384              		.loc 1 996 0
 4385 000e FFF7FEFF 		bl	UART_Stop
 997:.\main.c      ****         
 998:.\main.c      ****         //enable BT
 999:.\main.c      ****         BT_ENABLED = 1;
 4386              		.loc 1 999 0
 4387 0012 094B     		ldr	r3, .L238+4
 4388 0014 0122     		movs	r2, #1
 4389 0016 1A70     		strb	r2, [r3]
1000:.\main.c      ****         UART_clk_SetDividerValue(781);
 4390              		.loc 1 1000 0
 4391 0018 4FF44370 		mov	r0, #780
 4392 001c 0121     		movs	r1, #1
 4393 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
1001:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4394              		.loc 1 1001 0
 4395 0022 0648     		ldr	r0, .L238+8
 4396 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 97


1002:.\main.c      ****         UART_Start();
 4397              		.loc 1 1002 0
 4398 0028 FFF7FEFF 		bl	UART_Start
1003:.\main.c      ****         RF_BT_SELECT_Write(1);
 4399              		.loc 1 1003 0
 4400 002c 0120     		movs	r0, #1
 4401 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
1004:.\main.c      **** }
 4402              		.loc 1 1004 0
 4403 0032 80BD     		pop	{r7, pc}
 4404              	.L239:
 4405              		.align	2
 4406              	.L238:
 4407 0034 00000000 		.word	BIN_ENABLED
 4408 0038 00000000 		.word	BT_ENABLED
 4409 003c 00000000 		.word	BT_rxInt
 4410              		.cfi_endproc
 4411              	.LFE95:
 4412              		.size	changeToBT, .-changeToBT
 4413              		.section	.text.Quad_Dec_response,"ax",%progbits
 4414              		.align	2
 4415              		.global	Quad_Dec_response
 4416              		.thumb
 4417              		.thumb_func
 4418              		.type	Quad_Dec_response, %function
 4419              	Quad_Dec_response:
 4420              	.LFB96:
1005:.\main.c      **** 
1006:.\main.c      **** 
1007:.\main.c      **** void Quad_Dec_response()
1008:.\main.c      **** {
 4421              		.loc 1 1008 0
 4422              		.cfi_startproc
 4423              		@ args = 0, pretend = 0, frame = 32
 4424              		@ frame_needed = 1, uses_anonymous_args = 0
 4425 0000 B0B5     		push	{r4, r5, r7, lr}
 4426              		.cfi_def_cfa_offset 16
 4427              		.cfi_offset 4, -16
 4428              		.cfi_offset 5, -12
 4429              		.cfi_offset 7, -8
 4430              		.cfi_offset 14, -4
 4431 0002 88B0     		sub	sp, sp, #32
 4432              		.cfi_def_cfa_offset 48
 4433 0004 00AF     		add	r7, sp, #0
 4434              		.cfi_def_cfa_register 7
1009:.\main.c      ****     //Check if the flag has been set
1010:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4435              		.loc 1 1010 0
 4436 0006 824B     		ldr	r3, .L248
 4437 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4438 000a 002B     		cmp	r3, #0
 4439 000c 00D1     		bne	.L241
 4440 000e FCE0     		b	.L240
 4441              	.L241:
1011:.\main.c      ****     flag_calc_wheelspeed = 0;
 4442              		.loc 1 1011 0
 4443 0010 7F4B     		ldr	r3, .L248
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 98


 4444 0012 0022     		movs	r2, #0
 4445 0014 1A70     		strb	r2, [r3]
1012:.\main.c      ****     
1013:.\main.c      ****     //char wheel_1_str [64];
1014:.\main.c      ****     //char wheel_2_str [64];
1015:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
1016:.\main.c      ****     //usbPutString(wheel_1_str);
1017:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
1018:.\main.c      ****     
1019:.\main.c      ****     //usbPutString(wheel_2_str);
1020:.\main.c      ****     
1021:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4446              		.loc 1 1021 0
 4447 0016 7F4B     		ldr	r3, .L248+4
 4448 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4449 001a FB81     		strh	r3, [r7, #14]	@ movhi
1022:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4450              		.loc 1 1022 0
 4451 001c 7E4B     		ldr	r3, .L248+8
 4452 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4453 0020 BB81     		strh	r3, [r7, #12]	@ movhi
1023:.\main.c      ****     double scalingLeft = 1;
 4454              		.loc 1 1023 0
 4455 0022 4FF00002 		mov	r2, #0
 4456 0026 7D4B     		ldr	r3, .L248+12
 4457 0028 C7E90623 		strd	r2, [r7, #24]
1024:.\main.c      ****     double scalingRight = 1;
 4458              		.loc 1 1024 0
 4459 002c 4FF00002 		mov	r2, #0
 4460 0030 7A4B     		ldr	r3, .L248+12
 4461 0032 C7E90423 		strd	r2, [r7, #16]
1025:.\main.c      ****     
1026:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
1027:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4462              		.loc 1 1027 0
 4463 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4464 003a 002B     		cmp	r3, #0
 4465 003c 0FD1     		bne	.L243
 4466              		.loc 1 1027 0 is_stmt 0 discriminator 1
 4467 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4468 0042 002B     		cmp	r3, #0
 4469 0044 0BD1     		bne	.L243
1028:.\main.c      ****        //leftSpeed = 3;
1029:.\main.c      ****         scalingLeft = 2;
 4470              		.loc 1 1029 0 is_stmt 1
 4471 0046 4FF00002 		mov	r2, #0
 4472 004a 4FF08043 		mov	r3, #1073741824
 4473 004e C7E90623 		strd	r2, [r7, #24]
1030:.\main.c      ****         scalingRight = 2;
 4474              		.loc 1 1030 0
 4475 0052 4FF00002 		mov	r2, #0
 4476 0056 4FF08043 		mov	r3, #1073741824
 4477 005a C7E90423 		strd	r2, [r7, #16]
 4478              	.L243:
1031:.\main.c      ****     }
1032:.\main.c      **** 
1033:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 99


 4479              		.loc 1 1033 0
 4480 005e 704B     		ldr	r3, .L248+16
 4481 0060 1B88     		ldrh	r3, [r3]
 4482 0062 1AB2     		sxth	r2, r3
 4483 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4484 0068 002B     		cmp	r3, #0
 4485 006a B8BF     		it	lt
 4486 006c 5B42     		rsblt	r3, r3, #0
 4487 006e D31A     		subs	r3, r2, r3
 4488 0070 BB60     		str	r3, [r7, #8]
1034:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4489              		.loc 1 1034 0
 4490 0072 BB68     		ldr	r3, [r7, #8]
 4491 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4492 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4493 007c BB68     		ldr	r3, [r7, #8]
 4494 007e 92FBF3F3 		sdiv	r3, r2, r3
 4495 0082 1846     		mov	r0, r3
 4496 0084 FFF7FEFF 		bl	__aeabi_i2d
 4497 0088 0446     		mov	r4, r0
 4498 008a 0D46     		mov	r5, r1
 4499 008c BB68     		ldr	r3, [r7, #8]
 4500 008e 002B     		cmp	r3, #0
 4501 0090 B8BF     		it	lt
 4502 0092 5B42     		rsblt	r3, r3, #0
 4503 0094 1846     		mov	r0, r3
 4504 0096 FFF7FEFF 		bl	__aeabi_i2d
 4505 009a 0246     		mov	r2, r0
 4506 009c 0B46     		mov	r3, r1
 4507 009e 1046     		mov	r0, r2
 4508 00a0 1946     		mov	r1, r3
 4509 00a2 FFF7FEFF 		bl	sqrt
 4510 00a6 0246     		mov	r2, r0
 4511 00a8 0B46     		mov	r3, r1
 4512 00aa 2046     		mov	r0, r4
 4513 00ac 2946     		mov	r1, r5
 4514 00ae FFF7FEFF 		bl	__aeabi_dmul
 4515 00b2 0246     		mov	r2, r0
 4516 00b4 0B46     		mov	r3, r1
 4517 00b6 1046     		mov	r0, r2
 4518 00b8 1946     		mov	r1, r3
 4519 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4520 00be 0346     		mov	r3, r0
 4521 00c0 7B60     		str	r3, [r7, #4]
1035:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4522              		.loc 1 1035 0
 4523 00c2 584B     		ldr	r3, .L248+20
 4524 00c4 1B88     		ldrh	r3, [r3]
 4525 00c6 1BB2     		sxth	r3, r3
 4526 00c8 1846     		mov	r0, r3
 4527 00ca FFF7FEFF 		bl	__aeabi_i2d
 4528 00ce 0446     		mov	r4, r0
 4529 00d0 0D46     		mov	r5, r1
 4530 00d2 7868     		ldr	r0, [r7, #4]
 4531 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4532 00d8 0246     		mov	r2, r0
 4533 00da 0B46     		mov	r3, r1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 100


 4534 00dc 1046     		mov	r0, r2
 4535 00de 1946     		mov	r1, r3
 4536 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4537 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4538 00e8 0246     		mov	r2, r0
 4539 00ea 0B46     		mov	r3, r1
 4540 00ec 2046     		mov	r0, r4
 4541 00ee 2946     		mov	r1, r5
 4542 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4543 00f4 0246     		mov	r2, r0
 4544 00f6 0B46     		mov	r3, r1
 4545 00f8 1046     		mov	r0, r2
 4546 00fa 1946     		mov	r1, r3
 4547 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4548 0100 0346     		mov	r3, r0
 4549 0102 9AB2     		uxth	r2, r3
 4550 0104 474B     		ldr	r3, .L248+20
 4551 0106 1A80     		strh	r2, [r3]	@ movhi
1036:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4552              		.loc 1 1036 0
 4553 0108 474B     		ldr	r3, .L248+24
 4554 010a 1B88     		ldrh	r3, [r3]
 4555 010c 1AB2     		sxth	r2, r3
 4556 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4557 0112 002B     		cmp	r3, #0
 4558 0114 B8BF     		it	lt
 4559 0116 5B42     		rsblt	r3, r3, #0
 4560 0118 D31A     		subs	r3, r2, r3
 4561 011a BB60     		str	r3, [r7, #8]
1037:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4562              		.loc 1 1037 0
 4563 011c BB68     		ldr	r3, [r7, #8]
 4564 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4565 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4566 0126 BB68     		ldr	r3, [r7, #8]
 4567 0128 92FBF3F3 		sdiv	r3, r2, r3
 4568 012c 1846     		mov	r0, r3
 4569 012e FFF7FEFF 		bl	__aeabi_i2d
 4570 0132 0446     		mov	r4, r0
 4571 0134 0D46     		mov	r5, r1
 4572 0136 BB68     		ldr	r3, [r7, #8]
 4573 0138 002B     		cmp	r3, #0
 4574 013a B8BF     		it	lt
 4575 013c 5B42     		rsblt	r3, r3, #0
 4576 013e 1846     		mov	r0, r3
 4577 0140 FFF7FEFF 		bl	__aeabi_i2d
 4578 0144 0246     		mov	r2, r0
 4579 0146 0B46     		mov	r3, r1
 4580 0148 1046     		mov	r0, r2
 4581 014a 1946     		mov	r1, r3
 4582 014c FFF7FEFF 		bl	sqrt
 4583 0150 0246     		mov	r2, r0
 4584 0152 0B46     		mov	r3, r1
 4585 0154 2046     		mov	r0, r4
 4586 0156 2946     		mov	r1, r5
 4587 0158 FFF7FEFF 		bl	__aeabi_dmul
 4588 015c 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 101


 4589 015e 0B46     		mov	r3, r1
 4590 0160 1046     		mov	r0, r2
 4591 0162 1946     		mov	r1, r3
 4592 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4593 0168 0346     		mov	r3, r0
 4594 016a 7B60     		str	r3, [r7, #4]
1038:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4595              		.loc 1 1038 0
 4596 016c 2F4B     		ldr	r3, .L248+28
 4597 016e 1B88     		ldrh	r3, [r3]
 4598 0170 1BB2     		sxth	r3, r3
 4599 0172 1846     		mov	r0, r3
 4600 0174 FFF7FEFF 		bl	__aeabi_i2d
 4601 0178 0446     		mov	r4, r0
 4602 017a 0D46     		mov	r5, r1
 4603 017c 7868     		ldr	r0, [r7, #4]
 4604 017e FFF7FEFF 		bl	__aeabi_i2d
 4605 0182 0246     		mov	r2, r0
 4606 0184 0B46     		mov	r3, r1
 4607 0186 1046     		mov	r0, r2
 4608 0188 1946     		mov	r1, r3
 4609 018a D7E90423 		ldrd	r2, [r7, #16]
 4610 018e FFF7FEFF 		bl	__aeabi_dmul
 4611 0192 0246     		mov	r2, r0
 4612 0194 0B46     		mov	r3, r1
 4613 0196 2046     		mov	r0, r4
 4614 0198 2946     		mov	r1, r5
 4615 019a FFF7FEFF 		bl	__aeabi_dadd
 4616 019e 0246     		mov	r2, r0
 4617 01a0 0B46     		mov	r3, r1
 4618 01a2 1046     		mov	r0, r2
 4619 01a4 1946     		mov	r1, r3
 4620 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4621 01aa 0346     		mov	r3, r0
 4622 01ac 9AB2     		uxth	r2, r3
 4623 01ae 1F4B     		ldr	r3, .L248+28
 4624 01b0 1A80     		strh	r2, [r3]	@ movhi
1039:.\main.c      ****     
1040:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4625              		.loc 1 1040 0
 4626 01b2 1E4B     		ldr	r3, .L248+28
 4627 01b4 1B88     		ldrh	r3, [r3]
 4628 01b6 1BB2     		sxth	r3, r3
 4629 01b8 002B     		cmp	r3, #0
 4630 01ba 02DA     		bge	.L244
 4631              		.loc 1 1040 0 is_stmt 0 discriminator 1
 4632 01bc 1B4B     		ldr	r3, .L248+28
 4633 01be 0022     		movs	r2, #0
 4634 01c0 1A80     		strh	r2, [r3]	@ movhi
 4635              	.L244:
1041:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4636              		.loc 1 1041 0 is_stmt 1
 4637 01c2 184B     		ldr	r3, .L248+20
 4638 01c4 1B88     		ldrh	r3, [r3]
 4639 01c6 1BB2     		sxth	r3, r3
 4640 01c8 002B     		cmp	r3, #0
 4641 01ca 02DA     		bge	.L245
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 102


 4642              		.loc 1 1041 0 is_stmt 0 discriminator 1
 4643 01cc 154B     		ldr	r3, .L248+20
 4644 01ce 0022     		movs	r2, #0
 4645 01d0 1A80     		strh	r2, [r3]	@ movhi
 4646              	.L245:
1042:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4647              		.loc 1 1042 0 is_stmt 1
 4648 01d2 164B     		ldr	r3, .L248+28
 4649 01d4 1B88     		ldrh	r3, [r3]
 4650 01d6 1BB2     		sxth	r3, r3
 4651 01d8 642B     		cmp	r3, #100
 4652 01da 02DD     		ble	.L246
 4653              		.loc 1 1042 0 is_stmt 0 discriminator 1
 4654 01dc 134B     		ldr	r3, .L248+28
 4655 01de 6422     		movs	r2, #100
 4656 01e0 1A80     		strh	r2, [r3]	@ movhi
 4657              	.L246:
1043:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4658              		.loc 1 1043 0 is_stmt 1
 4659 01e2 104B     		ldr	r3, .L248+20
 4660 01e4 1B88     		ldrh	r3, [r3]
 4661 01e6 1BB2     		sxth	r3, r3
 4662 01e8 642B     		cmp	r3, #100
 4663 01ea 02DD     		ble	.L247
 4664              		.loc 1 1043 0 is_stmt 0 discriminator 1
 4665 01ec 0D4B     		ldr	r3, .L248+20
 4666 01ee 6422     		movs	r2, #100
 4667 01f0 1A80     		strh	r2, [r3]	@ movhi
 4668              	.L247:
1044:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4669              		.loc 1 1044 0 is_stmt 1
 4670 01f2 0C4B     		ldr	r3, .L248+20
 4671 01f4 1B88     		ldrh	r3, [r3]
 4672 01f6 DBB2     		uxtb	r3, r3
 4673 01f8 1846     		mov	r0, r3
 4674 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
1045:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4675              		.loc 1 1045 0
 4676 01fe 0B4B     		ldr	r3, .L248+28
 4677 0200 1B88     		ldrh	r3, [r3]
 4678 0202 DBB2     		uxtb	r3, r3
 4679 0204 1846     		mov	r0, r3
 4680 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4681              	.L240:
1046:.\main.c      **** }
 4682              		.loc 1 1046 0
 4683 020a 2037     		adds	r7, r7, #32
 4684              		.cfi_def_cfa_offset 16
 4685 020c BD46     		mov	sp, r7
 4686              		.cfi_def_cfa_register 13
 4687              		@ sp needed
 4688 020e B0BD     		pop	{r4, r5, r7, pc}
 4689              	.L249:
 4690              		.align	2
 4691              	.L248:
 4692 0210 00000000 		.word	flag_calc_wheelspeed
 4693 0214 00000000 		.word	quad_diff1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 103


 4694 0218 00000000 		.word	quad_diff2
 4695 021c 0000F03F 		.word	1072693248
 4696 0220 00000000 		.word	leftSpeedLimit
 4697 0224 00000000 		.word	left_duty_cycle
 4698 0228 00000000 		.word	rightSpeedLimit
 4699 022c 00000000 		.word	right_duty_cycle
 4700              		.cfi_endproc
 4701              	.LFE96:
 4702              		.size	Quad_Dec_response, .-Quad_Dec_response
 4703              		.section	.text.trackLine,"ax",%progbits
 4704              		.align	2
 4705              		.global	trackLine
 4706              		.thumb
 4707              		.thumb_func
 4708              		.type	trackLine, %function
 4709              	trackLine:
 4710              	.LFB97:
1047:.\main.c      **** 
1048:.\main.c      **** void trackLine()
1049:.\main.c      **** {
 4711              		.loc 1 1049 0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 0
 4714              		@ frame_needed = 1, uses_anonymous_args = 0
 4715              		@ link register save eliminated.
 4716 0000 80B4     		push	{r7}
 4717              		.cfi_def_cfa_offset 4
 4718              		.cfi_offset 7, -4
 4719 0002 00AF     		add	r7, sp, #0
 4720              		.cfi_def_cfa_register 7
1050:.\main.c      ****  //removed from implementation
1051:.\main.c      **** }
 4721              		.loc 1 1051 0
 4722 0004 BD46     		mov	sp, r7
 4723              		.cfi_def_cfa_register 13
 4724              		@ sp needed
 4725 0006 5DF8047B 		ldr	r7, [sp], #4
 4726              		.cfi_restore 7
 4727              		.cfi_def_cfa_offset 0
 4728 000a 7047     		bx	lr
 4729              		.cfi_endproc
 4730              	.LFE97:
 4731              		.size	trackLine, .-trackLine
 4732              		.global	leftTurnCount
 4733              		.bss
 4734              		.align	1
 4735              		.type	leftTurnCount, %object
 4736              		.size	leftTurnCount, 2
 4737              	leftTurnCount:
 4738 28e8 0000     		.space	2
 4739              		.global	rightTurnCount
 4740              		.align	1
 4741              		.type	rightTurnCount, %object
 4742              		.size	rightTurnCount, 2
 4743              	rightTurnCount:
 4744 28ea 0000     		.space	2
 4745              		.section	.text.trackLineZ,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 104


 4746              		.align	2
 4747              		.global	trackLineZ
 4748              		.thumb
 4749              		.thumb_func
 4750              		.type	trackLineZ, %function
 4751              	trackLineZ:
 4752              	.LFB98:
1052:.\main.c      **** uint16 leftTurnCount = 0;
1053:.\main.c      **** uint16 rightTurnCount = 0;
1054:.\main.c      **** void trackLineZ()
1055:.\main.c      **** {
 4753              		.loc 1 1055 0
 4754              		.cfi_startproc
 4755              		@ args = 0, pretend = 0, frame = 8
 4756              		@ frame_needed = 1, uses_anonymous_args = 0
 4757 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4758              		.cfi_def_cfa_offset 24
 4759              		.cfi_offset 4, -24
 4760              		.cfi_offset 5, -20
 4761              		.cfi_offset 7, -16
 4762              		.cfi_offset 8, -12
 4763              		.cfi_offset 9, -8
 4764              		.cfi_offset 14, -4
 4765 0004 82B0     		sub	sp, sp, #8
 4766              		.cfi_def_cfa_offset 32
 4767 0006 00AF     		add	r7, sp, #0
 4768              		.cfi_def_cfa_register 7
1056:.\main.c      ****     //read the value of the three central-front sensors
1057:.\main.c      ****     
1058:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4769              		.loc 1 1058 0
 4770 0008 FFF7FEFF 		bl	NLSens_out_Read
 4771 000c 0346     		mov	r3, r0
 4772 000e FB71     		strb	r3, [r7, #7]
1059:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4773              		.loc 1 1059 0
 4774 0010 FFF7FEFF 		bl	NRSens_out_Read
 4775 0014 0346     		mov	r3, r0
 4776 0016 BB71     		strb	r3, [r7, #6]
1060:.\main.c      ****     uint8 mid = MSens_out_Read();
 4777              		.loc 1 1060 0
 4778 0018 FFF7FEFF 		bl	MSens_out_Read
 4779 001c 0346     		mov	r3, r0
 4780 001e 7B71     		strb	r3, [r7, #5]
1061:.\main.c      ****     
1062:.\main.c      ****         //if only the left one, hard left
1063:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4781              		.loc 1 1063 0
 4782 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4783 0022 002B     		cmp	r3, #0
 4784 0024 27D0     		beq	.L252
 4785              		.loc 1 1063 0 is_stmt 0 discriminator 1
 4786 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4787 0028 002B     		cmp	r3, #0
 4788 002a 24D1     		bne	.L252
 4789              		.loc 1 1063 0 discriminator 2
 4790 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 105


 4791 002e 002B     		cmp	r3, #0
 4792 0030 21D1     		bne	.L252
1064:.\main.c      ****     {
1065:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4793              		.loc 1 1065 0 is_stmt 1
 4794 0032 454B     		ldr	r3, .L257+8
 4795 0034 D3E90023 		ldrd	r2, [r3]
 4796 0038 1046     		mov	r0, r2
 4797 003a 1946     		mov	r1, r3
 4798 003c 40A3     		adr	r3, .L257
 4799 003e D3E90023 		ldrd	r2, [r3]
 4800 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4801 0046 0246     		mov	r2, r0
 4802 0048 0B46     		mov	r3, r1
 4803 004a 1446     		mov	r4, r2
 4804 004c 1D46     		mov	r5, r3
 4805 004e 3E4B     		ldr	r3, .L257+8
 4806 0050 D3E90023 		ldrd	r2, [r3]
 4807 0054 9046     		mov	r8, r2
 4808 0056 83F00049 		eor	r9, r3, #-2147483648
 4809 005a 4046     		mov	r0, r8
 4810 005c 4946     		mov	r1, r9
 4811 005e 38A3     		adr	r3, .L257
 4812 0060 D3E90023 		ldrd	r2, [r3]
 4813 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4814 0068 0246     		mov	r2, r0
 4815 006a 0B46     		mov	r3, r1
 4816 006c 2046     		mov	r0, r4
 4817 006e 2946     		mov	r1, r5
 4818 0070 FFF7FEFF 		bl	setSpeed
 4819 0074 5FE0     		b	.L251
 4820              	.L252:
1066:.\main.c      ****     }
1067:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4821              		.loc 1 1067 0
 4822 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4823 0078 002B     		cmp	r3, #0
 4824 007a 0ED0     		beq	.L254
 4825              		.loc 1 1067 0 is_stmt 0 discriminator 1
 4826 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4827 007e 002B     		cmp	r3, #0
 4828 0080 0BD0     		beq	.L254
 4829              		.loc 1 1067 0 discriminator 2
 4830 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4831 0084 002B     		cmp	r3, #0
 4832 0086 08D1     		bne	.L254
1068:.\main.c      ****     {
1069:.\main.c      ****         setSpeed(speed,speed);
 4833              		.loc 1 1069 0 is_stmt 1
 4834 0088 2F4B     		ldr	r3, .L257+8
 4835 008a D3E90001 		ldrd	r0, [r3]
 4836 008e 2E4B     		ldr	r3, .L257+8
 4837 0090 D3E90023 		ldrd	r2, [r3]
 4838 0094 FFF7FEFF 		bl	setSpeed
 4839 0098 4DE0     		b	.L251
 4840              	.L254:
1070:.\main.c      ****     }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 106


1071:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4841              		.loc 1 1071 0
 4842 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4843 009c 002B     		cmp	r3, #0
 4844 009e 0ED0     		beq	.L255
 4845              		.loc 1 1071 0 is_stmt 0 discriminator 1
 4846 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4847 00a2 002B     		cmp	r3, #0
 4848 00a4 0BD0     		beq	.L255
 4849              		.loc 1 1071 0 discriminator 2
 4850 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4851 00a8 002B     		cmp	r3, #0
 4852 00aa 08D1     		bne	.L255
1072:.\main.c      ****     {
1073:.\main.c      ****         setSpeed(speed ,speed);
 4853              		.loc 1 1073 0 is_stmt 1
 4854 00ac 264B     		ldr	r3, .L257+8
 4855 00ae D3E90001 		ldrd	r0, [r3]
 4856 00b2 254B     		ldr	r3, .L257+8
 4857 00b4 D3E90023 		ldrd	r2, [r3]
 4858 00b8 FFF7FEFF 		bl	setSpeed
 4859 00bc 3BE0     		b	.L251
 4860              	.L255:
1074:.\main.c      ****     }
1075:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4861              		.loc 1 1075 0
 4862 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4863 00c0 002B     		cmp	r3, #0
 4864 00c2 27D0     		beq	.L256
 4865              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4866 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4867 00c6 002B     		cmp	r3, #0
 4868 00c8 24D1     		bne	.L256
 4869              		.loc 1 1075 0 discriminator 2
 4870 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4871 00cc 002B     		cmp	r3, #0
 4872 00ce 21D1     		bne	.L256
1076:.\main.c      ****     {
1077:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4873              		.loc 1 1077 0 is_stmt 1
 4874 00d0 1D4B     		ldr	r3, .L257+8
 4875 00d2 D3E90023 		ldrd	r2, [r3]
 4876 00d6 1446     		mov	r4, r2
 4877 00d8 83F00045 		eor	r5, r3, #-2147483648
 4878 00dc 2046     		mov	r0, r4
 4879 00de 2946     		mov	r1, r5
 4880 00e0 17A3     		adr	r3, .L257
 4881 00e2 D3E90023 		ldrd	r2, [r3]
 4882 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4883 00ea 0246     		mov	r2, r0
 4884 00ec 0B46     		mov	r3, r1
 4885 00ee 1446     		mov	r4, r2
 4886 00f0 1D46     		mov	r5, r3
 4887 00f2 154B     		ldr	r3, .L257+8
 4888 00f4 D3E90023 		ldrd	r2, [r3]
 4889 00f8 1046     		mov	r0, r2
 4890 00fa 1946     		mov	r1, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 107


 4891 00fc 10A3     		adr	r3, .L257
 4892 00fe D3E90023 		ldrd	r2, [r3]
 4893 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4894 0106 0246     		mov	r2, r0
 4895 0108 0B46     		mov	r3, r1
 4896 010a 2046     		mov	r0, r4
 4897 010c 2946     		mov	r1, r5
 4898 010e FFF7FEFF 		bl	setSpeed
 4899 0112 10E0     		b	.L251
 4900              	.L256:
1078:.\main.c      ****     }
1079:.\main.c      ****     else if (mid && !nr && !nl)
 4901              		.loc 1 1079 0
 4902 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4903 0116 002B     		cmp	r3, #0
 4904 0118 0DD0     		beq	.L251
 4905              		.loc 1 1079 0 is_stmt 0 discriminator 1
 4906 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4907 011c 002B     		cmp	r3, #0
 4908 011e 0AD1     		bne	.L251
 4909              		.loc 1 1079 0 discriminator 2
 4910 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4911 0122 002B     		cmp	r3, #0
 4912 0124 07D1     		bne	.L251
1080:.\main.c      ****     {
1081:.\main.c      ****         setSpeed(speed,speed);
 4913              		.loc 1 1081 0 is_stmt 1
 4914 0126 084B     		ldr	r3, .L257+8
 4915 0128 D3E90001 		ldrd	r0, [r3]
 4916 012c 064B     		ldr	r3, .L257+8
 4917 012e D3E90023 		ldrd	r2, [r3]
 4918 0132 FFF7FEFF 		bl	setSpeed
 4919              	.L251:
1082:.\main.c      ****     }
1083:.\main.c      **** }
 4920              		.loc 1 1083 0
 4921 0136 0837     		adds	r7, r7, #8
 4922              		.cfi_def_cfa_offset 24
 4923 0138 BD46     		mov	sp, r7
 4924              		.cfi_def_cfa_register 13
 4925              		@ sp needed
 4926 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4927              	.L258:
 4928 013e 00BF     		.align	3
 4929              	.L257:
 4930 0140 9A999999 		.word	-1717986918
 4931 0144 9999F93F 		.word	1073322393
 4932 0148 00000000 		.word	speed
 4933              		.cfi_endproc
 4934              	.LFE98:
 4935              		.size	trackLineZ, .-trackLineZ
 4936 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4937              		.align	2
 4938              		.global	trackLineU
 4939              		.thumb
 4940              		.thumb_func
 4941              		.type	trackLineU, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 108


 4942              	trackLineU:
 4943              	.LFB99:
1084:.\main.c      **** 
1085:.\main.c      **** 
1086:.\main.c      **** void trackLineU()
1087:.\main.c      **** { 
 4944              		.loc 1 1087 0
 4945              		.cfi_startproc
 4946              		@ args = 0, pretend = 0, frame = 0
 4947              		@ frame_needed = 1, uses_anonymous_args = 0
 4948              		@ link register save eliminated.
 4949 0000 80B4     		push	{r7}
 4950              		.cfi_def_cfa_offset 4
 4951              		.cfi_offset 7, -4
 4952 0002 00AF     		add	r7, sp, #0
 4953              		.cfi_def_cfa_register 7
1088:.\main.c      **** //removed from final implementation
1089:.\main.c      **** }
 4954              		.loc 1 1089 0
 4955 0004 BD46     		mov	sp, r7
 4956              		.cfi_def_cfa_register 13
 4957              		@ sp needed
 4958 0006 5DF8047B 		ldr	r7, [sp], #4
 4959              		.cfi_restore 7
 4960              		.cfi_def_cfa_offset 0
 4961 000a 7047     		bx	lr
 4962              		.cfi_endproc
 4963              	.LFE99:
 4964              		.size	trackLineU, .-trackLineU
 4965              		.global	__aeabi_fadd
 4966              		.section	.rodata
 4967 0103 00       		.align	2
 4968              	.LC14:
 4969 0104 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4969      65727920 
 4969      566F6C74 
 4969      6167653A 
 4969      2025646D 
 4970              		.section	.text.print_ADC,"ax",%progbits
 4971              		.align	2
 4972              		.global	print_ADC
 4973              		.thumb
 4974              		.thumb_func
 4975              		.type	print_ADC, %function
 4976              	print_ADC:
 4977              	.LFB100:
1090:.\main.c      **** 
1091:.\main.c      **** void print_ADC()
1092:.\main.c      **** {
 4978              		.loc 1 1092 0
 4979              		.cfi_startproc
 4980              		@ args = 0, pretend = 0, frame = 24
 4981              		@ frame_needed = 1, uses_anonymous_args = 0
 4982 0000 80B5     		push	{r7, lr}
 4983              		.cfi_def_cfa_offset 8
 4984              		.cfi_offset 7, -8
 4985              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 109


 4986 0002 86B0     		sub	sp, sp, #24
 4987              		.cfi_def_cfa_offset 32
 4988 0004 00AF     		add	r7, sp, #0
 4989              		.cfi_def_cfa_register 7
1093:.\main.c      ****    //usbPutString("HII\n");
1094:.\main.c      ****     if(flag_receive_ADC == 1)
 4990              		.loc 1 1094 0
 4991 0006 274B     		ldr	r3, .L263
 4992 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4993 000a 012B     		cmp	r3, #1
 4994 000c 46D1     		bne	.L260
 4995              	.LBB12:
1095:.\main.c      ****     {
1096:.\main.c      ****         //usbPutString("AAA\r\n");
1097:.\main.c      ****         flag_receive_ADC = 0;
 4996              		.loc 1 1097 0
 4997 000e 254B     		ldr	r3, .L263
 4998 0010 0022     		movs	r2, #0
 4999 0012 1A70     		strb	r2, [r3]
1098:.\main.c      ****         
1099:.\main.c      ****        // int8 channel = ADC_
1100:.\main.c      ****         float scalingFactor = 0.972;
 5000              		.loc 1 1100 0
 5001 0014 244B     		ldr	r3, .L263+4
 5002 0016 7B61     		str	r3, [r7, #20]	@ float
1101:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 5003              		.loc 1 1101 0
 5004 0018 244B     		ldr	r3, .L263+8
 5005 001a 1B88     		ldrh	r3, [r3]
 5006 001c 1BB2     		sxth	r3, r3
 5007 001e 41F28832 		movw	r2, #5000
 5008 0022 02FB03F3 		mul	r3, r2, r3
 5009 0026 002B     		cmp	r3, #0
 5010 0028 01DA     		bge	.L262
 5011 002a 03F6FF73 		addw	r3, r3, #4095
 5012              	.L262:
 5013 002e 1B13     		asrs	r3, r3, #12
 5014 0030 1846     		mov	r0, r3
 5015 0032 FFF7FEFF 		bl	__aeabi_i2f
 5016 0036 0346     		mov	r3, r0
 5017 0038 1846     		mov	r0, r3
 5018 003a 7969     		ldr	r1, [r7, #20]	@ float
 5019 003c FFF7FEFF 		bl	__aeabi_fmul
 5020 0040 0346     		mov	r3, r0
 5021 0042 1846     		mov	r0, r3
 5022 0044 1946     		mov	r1, r3
 5023 0046 FFF7FEFF 		bl	__aeabi_fadd
 5024 004a 0346     		mov	r3, r0
 5025 004c 1846     		mov	r0, r3
 5026 004e FFF7FEFF 		bl	__aeabi_f2iz
 5027 0052 0346     		mov	r3, r0
 5028 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1102:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 5029              		.loc 1 1102 0
 5030 0056 B7F91220 		ldrsh	r2, [r7, #18]
 5031 005a 154B     		ldr	r3, .L263+12
 5032 005c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 110


 5033 005e 1BB2     		sxth	r3, r3
 5034 0060 1A44     		add	r2, r2, r3
 5035 0062 144B     		ldr	r3, .L263+16
 5036 0064 1B88     		ldrh	r3, [r3]
 5037 0066 1BB2     		sxth	r3, r3
 5038 0068 1344     		add	r3, r3, r2
 5039 006a 134A     		ldr	r2, .L263+20
 5040 006c 82FB0312 		smull	r1, r2, r2, r3
 5041 0070 DB17     		asrs	r3, r3, #31
 5042 0072 D31A     		subs	r3, r2, r3
 5043 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1103:.\main.c      ****         prevVoltage2 = prevVoltage;
 5044              		.loc 1 1103 0
 5045 0076 0E4B     		ldr	r3, .L263+12
 5046 0078 1A88     		ldrh	r2, [r3]
 5047 007a 0E4B     		ldr	r3, .L263+16
 5048 007c 1A80     		strh	r2, [r3]	@ movhi
1104:.\main.c      ****         prevVoltage = converted_val;
 5049              		.loc 1 1104 0
 5050 007e 0C4A     		ldr	r2, .L263+12
 5051 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5052 0082 1380     		strh	r3, [r2]	@ movhi
1105:.\main.c      ****         
1106:.\main.c      ****         char result_str[16];
1107:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 5053              		.loc 1 1107 0
 5054 0084 B7F91230 		ldrsh	r3, [r7, #18]
 5055 0088 3A46     		mov	r2, r7
 5056 008a 1046     		mov	r0, r2
 5057 008c 0B49     		ldr	r1, .L263+24
 5058 008e 1A46     		mov	r2, r3
 5059 0090 FFF7FEFF 		bl	sprintf
1108:.\main.c      ****         
1109:.\main.c      ****         usbPutString(result_str);
 5060              		.loc 1 1109 0
 5061 0094 3B46     		mov	r3, r7
 5062 0096 1846     		mov	r0, r3
 5063 0098 FFF7FEFF 		bl	usbPutString
 5064              	.L260:
 5065              	.LBE12:
1110:.\main.c      ****     }
1111:.\main.c      **** }
 5066              		.loc 1 1111 0
 5067 009c 1837     		adds	r7, r7, #24
 5068              		.cfi_def_cfa_offset 8
 5069 009e BD46     		mov	sp, r7
 5070              		.cfi_def_cfa_register 13
 5071              		@ sp needed
 5072 00a0 80BD     		pop	{r7, pc}
 5073              	.L264:
 5074 00a2 00BF     		.align	2
 5075              	.L263:
 5076 00a4 00000000 		.word	flag_receive_ADC
 5077 00a8 FED4783F 		.word	1064883454
 5078 00ac 00000000 		.word	adc_result
 5079 00b0 00000000 		.word	prevVoltage
 5080 00b4 00000000 		.word	prevVoltage2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 111


 5081 00b8 56555555 		.word	1431655766
 5082 00bc 04010000 		.word	.LC14
 5083              		.cfi_endproc
 5084              	.LFE100:
 5085              		.size	print_ADC, .-print_ADC
 5086              		.section	.rodata
 5087              		.align	2
 5088              	.LC15:
 5089 011c 52535349 		.ascii	"RSSI:\000"
 5089      3A00
 5090 0122 0000     		.align	2
 5091              	.LC16:
 5092 0124 25640D0A 		.ascii	"%d\015\012\000"
 5092      00
 5093 0129 000000   		.align	2
 5094              	.LC17:
 5095 012c 726F626F 		.ascii	"robot_x:\000"
 5095      745F783A 
 5095      00
 5096 0135 000000   		.align	2
 5097              	.LC18:
 5098 0138 726F626F 		.ascii	"robot_y:\000"
 5098      745F793A 
 5098      00
 5099 0141 000000   		.align	2
 5100              	.LC19:
 5101 0144 726F626F 		.ascii	"robot_dir:\000"
 5101      745F6469 
 5101      723A00
 5102 014f 00       		.section	.text.print_RF,"ax",%progbits
 5103              		.align	2
 5104              		.global	print_RF
 5105              		.thumb
 5106              		.thumb_func
 5107              		.type	print_RF, %function
 5108              	print_RF:
 5109              	.LFB101:
1112:.\main.c      **** 
1113:.\main.c      **** void print_RF()
1114:.\main.c      **** {
 5110              		.loc 1 1114 0
 5111              		.cfi_startproc
 5112              		@ args = 0, pretend = 0, frame = 16
 5113              		@ frame_needed = 1, uses_anonymous_args = 0
 5114 0000 80B5     		push	{r7, lr}
 5115              		.cfi_def_cfa_offset 8
 5116              		.cfi_offset 7, -8
 5117              		.cfi_offset 14, -4
 5118 0002 84B0     		sub	sp, sp, #16
 5119              		.cfi_def_cfa_offset 24
 5120 0004 00AF     		add	r7, sp, #0
 5121              		.cfi_def_cfa_register 7
1115:.\main.c      ****     if(flag_print_rf == 1)
 5122              		.loc 1 1115 0
 5123 0006 254B     		ldr	r3, .L267
 5124 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5125 000a 012B     		cmp	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 112


 5126 000c 42D1     		bne	.L265
 5127              	.LBB13:
1116:.\main.c      ****     {
1117:.\main.c      ****         char printString[16];
1118:.\main.c      ****         flag_print_rf = 0;
 5128              		.loc 1 1118 0
 5129 000e 234B     		ldr	r3, .L267
 5130 0010 0022     		movs	r2, #0
 5131 0012 1A70     		strb	r2, [r3]
1119:.\main.c      ****         usbPutString("RSSI:");
 5132              		.loc 1 1119 0
 5133 0014 2248     		ldr	r0, .L267+4
 5134 0016 FFF7FEFF 		bl	usbPutString
1120:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 5135              		.loc 1 1120 0
 5136 001a 224B     		ldr	r3, .L267+8
 5137 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5138 001e 5BB2     		sxtb	r3, r3
 5139 0020 3A46     		mov	r2, r7
 5140 0022 1046     		mov	r0, r2
 5141 0024 2049     		ldr	r1, .L267+12
 5142 0026 1A46     		mov	r2, r3
 5143 0028 FFF7FEFF 		bl	sprintf
1121:.\main.c      ****         usbPutString(printString);
 5144              		.loc 1 1121 0
 5145 002c 3B46     		mov	r3, r7
 5146 002e 1846     		mov	r0, r3
 5147 0030 FFF7FEFF 		bl	usbPutString
1122:.\main.c      ****         usbPutString("robot_x:");
 5148              		.loc 1 1122 0
 5149 0034 1D48     		ldr	r0, .L267+16
 5150 0036 FFF7FEFF 		bl	usbPutString
1123:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 5151              		.loc 1 1123 0
 5152 003a 1A4B     		ldr	r3, .L267+8
 5153 003c 5B88     		ldrh	r3, [r3, #2]
 5154 003e 1BB2     		sxth	r3, r3
 5155 0040 3A46     		mov	r2, r7
 5156 0042 1046     		mov	r0, r2
 5157 0044 1849     		ldr	r1, .L267+12
 5158 0046 1A46     		mov	r2, r3
 5159 0048 FFF7FEFF 		bl	sprintf
1124:.\main.c      ****         usbPutString(printString);
 5160              		.loc 1 1124 0
 5161 004c 3B46     		mov	r3, r7
 5162 004e 1846     		mov	r0, r3
 5163 0050 FFF7FEFF 		bl	usbPutString
1125:.\main.c      ****         usbPutString("robot_y:");
 5164              		.loc 1 1125 0
 5165 0054 1648     		ldr	r0, .L267+20
 5166 0056 FFF7FEFF 		bl	usbPutString
1126:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 5167              		.loc 1 1126 0
 5168 005a 124B     		ldr	r3, .L267+8
 5169 005c 9B88     		ldrh	r3, [r3, #4]
 5170 005e 1BB2     		sxth	r3, r3
 5171 0060 3A46     		mov	r2, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 113


 5172 0062 1046     		mov	r0, r2
 5173 0064 1049     		ldr	r1, .L267+12
 5174 0066 1A46     		mov	r2, r3
 5175 0068 FFF7FEFF 		bl	sprintf
1127:.\main.c      ****         usbPutString(printString);
 5176              		.loc 1 1127 0
 5177 006c 3B46     		mov	r3, r7
 5178 006e 1846     		mov	r0, r3
 5179 0070 FFF7FEFF 		bl	usbPutString
1128:.\main.c      ****         usbPutString("robot_dir:");
 5180              		.loc 1 1128 0
 5181 0074 0F48     		ldr	r0, .L267+24
 5182 0076 FFF7FEFF 		bl	usbPutString
1129:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 5183              		.loc 1 1129 0
 5184 007a 0A4B     		ldr	r3, .L267+8
 5185 007c DB88     		ldrh	r3, [r3, #6]
 5186 007e 1BB2     		sxth	r3, r3
 5187 0080 3A46     		mov	r2, r7
 5188 0082 1046     		mov	r0, r2
 5189 0084 0849     		ldr	r1, .L267+12
 5190 0086 1A46     		mov	r2, r3
 5191 0088 FFF7FEFF 		bl	sprintf
1130:.\main.c      ****         usbPutString(printString);
 5192              		.loc 1 1130 0
 5193 008c 3B46     		mov	r3, r7
 5194 008e 1846     		mov	r0, r3
 5195 0090 FFF7FEFF 		bl	usbPutString
 5196              	.L265:
 5197              	.LBE13:
1131:.\main.c      ****     }
1132:.\main.c      **** }
 5198              		.loc 1 1132 0
 5199 0094 1037     		adds	r7, r7, #16
 5200              		.cfi_def_cfa_offset 8
 5201 0096 BD46     		mov	sp, r7
 5202              		.cfi_def_cfa_register 13
 5203              		@ sp needed
 5204 0098 80BD     		pop	{r7, pc}
 5205              	.L268:
 5206 009a 00BF     		.align	2
 5207              	.L267:
 5208 009c 00000000 		.word	flag_print_rf
 5209 00a0 1C010000 		.word	.LC15
 5210 00a4 00000000 		.word	system_state
 5211 00a8 24010000 		.word	.LC16
 5212 00ac 2C010000 		.word	.LC17
 5213 00b0 38010000 		.word	.LC18
 5214 00b4 44010000 		.word	.LC19
 5215              		.cfi_endproc
 5216              	.LFE101:
 5217              		.size	print_RF, .-print_RF
 5218              		.section	.text.readFrontSensors,"ax",%progbits
 5219              		.align	2
 5220              		.global	readFrontSensors
 5221              		.thumb
 5222              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 114


 5223              		.type	readFrontSensors, %function
 5224              	readFrontSensors:
 5225              	.LFB102:
1133:.\main.c      **** 
1134:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1135:.\main.c      **** {
 5226              		.loc 1 1135 0
 5227              		.cfi_startproc
 5228              		@ args = 0, pretend = 0, frame = 8
 5229              		@ frame_needed = 1, uses_anonymous_args = 0
 5230 0000 90B5     		push	{r4, r7, lr}
 5231              		.cfi_def_cfa_offset 12
 5232              		.cfi_offset 4, -12
 5233              		.cfi_offset 7, -8
 5234              		.cfi_offset 14, -4
 5235 0002 83B0     		sub	sp, sp, #12
 5236              		.cfi_def_cfa_offset 24
 5237 0004 00AF     		add	r7, sp, #0
 5238              		.cfi_def_cfa_register 7
 5239 0006 7860     		str	r0, [r7, #4]
1136:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 5240              		.loc 1 1136 0
 5241 0008 FFF7FEFF 		bl	FLSens_out_Read
 5242 000c 0346     		mov	r3, r0
 5243 000e 1A46     		mov	r2, r3
 5244 0010 7B68     		ldr	r3, [r7, #4]
 5245 0012 1A70     		strb	r2, [r3]
1137:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 5246              		.loc 1 1137 0
 5247 0014 7B68     		ldr	r3, [r7, #4]
 5248 0016 5C1C     		adds	r4, r3, #1
 5249 0018 FFF7FEFF 		bl	NLSens_out_Read
 5250 001c 0346     		mov	r3, r0
 5251 001e 2370     		strb	r3, [r4]
1138:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 5252              		.loc 1 1138 0
 5253 0020 7B68     		ldr	r3, [r7, #4]
 5254 0022 9C1C     		adds	r4, r3, #2
 5255 0024 FFF7FEFF 		bl	MSens_out_Read
 5256 0028 0346     		mov	r3, r0
 5257 002a 2370     		strb	r3, [r4]
1139:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 5258              		.loc 1 1139 0
 5259 002c 7B68     		ldr	r3, [r7, #4]
 5260 002e DC1C     		adds	r4, r3, #3
 5261 0030 FFF7FEFF 		bl	NRSens_out_Read
 5262 0034 0346     		mov	r3, r0
 5263 0036 2370     		strb	r3, [r4]
1140:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5264              		.loc 1 1140 0
 5265 0038 7B68     		ldr	r3, [r7, #4]
 5266 003a 1C1D     		adds	r4, r3, #4
 5267 003c FFF7FEFF 		bl	FRSens_out_Read
 5268 0040 0346     		mov	r3, r0
 5269 0042 2370     		strb	r3, [r4]
1141:.\main.c      **** }
 5270              		.loc 1 1141 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 115


 5271 0044 0C37     		adds	r7, r7, #12
 5272              		.cfi_def_cfa_offset 12
 5273 0046 BD46     		mov	sp, r7
 5274              		.cfi_def_cfa_register 13
 5275              		@ sp needed
 5276 0048 90BD     		pop	{r4, r7, pc}
 5277              		.cfi_endproc
 5278              	.LFE102:
 5279              		.size	readFrontSensors, .-readFrontSensors
 5280 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5281              		.align	2
 5282              		.global	usbPutString
 5283              		.thumb
 5284              		.thumb_func
 5285              		.type	usbPutString, %function
 5286              	usbPutString:
 5287              	.LFB103:
1142:.\main.c      **** 
1143:.\main.c      **** 
1144:.\main.c      **** //* ========================================
1145:.\main.c      **** void usbPutString(char *s)
1146:.\main.c      **** {
 5288              		.loc 1 1146 0
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 16
 5291              		@ frame_needed = 1, uses_anonymous_args = 0
 5292 0000 80B5     		push	{r7, lr}
 5293              		.cfi_def_cfa_offset 8
 5294              		.cfi_offset 7, -8
 5295              		.cfi_offset 14, -4
 5296 0002 84B0     		sub	sp, sp, #16
 5297              		.cfi_def_cfa_offset 24
 5298 0004 00AF     		add	r7, sp, #0
 5299              		.cfi_def_cfa_register 7
 5300 0006 7860     		str	r0, [r7, #4]
1147:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1148:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1149:.\main.c      **** //  length to 62 char (63rd char is a '!')
1150:.\main.c      ****     if (USE_USB && portOpen)
 5301              		.loc 1 1150 0
 5302 0008 154B     		ldr	r3, .L274
 5303 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5304 000c 002B     		cmp	r3, #0
 5305 000e 23D0     		beq	.L270
 5306              	.LBB14:
1151:.\main.c      ****     {
1152:.\main.c      ****             uint32 cnt = 0;
 5307              		.loc 1 1152 0
 5308 0010 0023     		movs	r3, #0
 5309 0012 FB60     		str	r3, [r7, #12]
1153:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5310              		.loc 1 1153 0
 5311 0014 0AE0     		b	.L272
 5312              	.L273:
1154:.\main.c      ****             {
1155:.\main.c      ****                 cnt++;
 5313              		.loc 1 1155 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 116


 5314 0016 FB68     		ldr	r3, [r7, #12]
 5315 0018 0133     		adds	r3, r3, #1
 5316 001a FB60     		str	r3, [r7, #12]
1156:.\main.c      ****                 if(cnt == 3000000){
 5317              		.loc 1 1156 0
 5318 001c FB68     		ldr	r3, [r7, #12]
 5319 001e 114A     		ldr	r2, .L274+4
 5320 0020 9342     		cmp	r3, r2
 5321 0022 03D1     		bne	.L272
1157:.\main.c      ****                     portOpen = 0;
 5322              		.loc 1 1157 0
 5323 0024 0E4B     		ldr	r3, .L274
 5324 0026 0022     		movs	r2, #0
 5325 0028 1A70     		strb	r2, [r3]
1158:.\main.c      ****                     return;
 5326              		.loc 1 1158 0
 5327 002a 15E0     		b	.L270
 5328              	.L272:
1153:.\main.c      ****             {
 5329              		.loc 1 1153 0
 5330 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5331 0030 0346     		mov	r3, r0
 5332 0032 002B     		cmp	r3, #0
 5333 0034 EFD0     		beq	.L273
1159:.\main.c      ****                 }
1160:.\main.c      ****             }
1161:.\main.c      ****             s[63]='\0';
 5334              		.loc 1 1161 0
 5335 0036 7B68     		ldr	r3, [r7, #4]
 5336 0038 3F33     		adds	r3, r3, #63
 5337 003a 0022     		movs	r2, #0
 5338 003c 1A70     		strb	r2, [r3]
1162:.\main.c      ****             s[62]='!';
 5339              		.loc 1 1162 0
 5340 003e 7B68     		ldr	r3, [r7, #4]
 5341 0040 3E33     		adds	r3, r3, #62
 5342 0042 2122     		movs	r2, #33
 5343 0044 1A70     		strb	r2, [r3]
1163:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5344              		.loc 1 1163 0
 5345 0046 7868     		ldr	r0, [r7, #4]
 5346 0048 FFF7FEFF 		bl	strlen
 5347 004c 0346     		mov	r3, r0
 5348 004e 9BB2     		uxth	r3, r3
 5349 0050 7868     		ldr	r0, [r7, #4]
 5350 0052 1946     		mov	r1, r3
 5351 0054 FFF7FEFF 		bl	USBUART_PutData
 5352              	.L270:
 5353              	.LBE14:
1164:.\main.c      ****     }
1165:.\main.c      **** }
 5354              		.loc 1 1165 0
 5355 0058 1037     		adds	r7, r7, #16
 5356              		.cfi_def_cfa_offset 8
 5357 005a BD46     		mov	sp, r7
 5358              		.cfi_def_cfa_register 13
 5359              		@ sp needed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 117


 5360 005c 80BD     		pop	{r7, pc}
 5361              	.L275:
 5362 005e 00BF     		.align	2
 5363              	.L274:
 5364 0060 00000000 		.word	portOpen
 5365 0064 C0C62D00 		.word	3000000
 5366              		.cfi_endproc
 5367              	.LFE103:
 5368              		.size	usbPutString, .-usbPutString
 5369              		.section	.text.usbPutChar,"ax",%progbits
 5370              		.align	2
 5371              		.global	usbPutChar
 5372              		.thumb
 5373              		.thumb_func
 5374              		.type	usbPutChar, %function
 5375              	usbPutChar:
 5376              	.LFB104:
1166:.\main.c      **** //* ========================================
1167:.\main.c      **** void usbPutChar(char c)
1168:.\main.c      **** {
 5377              		.loc 1 1168 0
 5378              		.cfi_startproc
 5379              		@ args = 0, pretend = 0, frame = 16
 5380              		@ frame_needed = 1, uses_anonymous_args = 0
 5381 0000 80B5     		push	{r7, lr}
 5382              		.cfi_def_cfa_offset 8
 5383              		.cfi_offset 7, -8
 5384              		.cfi_offset 14, -4
 5385 0002 84B0     		sub	sp, sp, #16
 5386              		.cfi_def_cfa_offset 24
 5387 0004 00AF     		add	r7, sp, #0
 5388              		.cfi_def_cfa_register 7
 5389 0006 0346     		mov	r3, r0
 5390 0008 FB71     		strb	r3, [r7, #7]
1169:.\main.c      ****     if (USE_USB && portOpen)    
 5391              		.loc 1 1169 0
 5392 000a 0F4B     		ldr	r3, .L280
 5393 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5394 000e 002B     		cmp	r3, #0
 5395 0010 16D0     		beq	.L276
 5396              	.LBB15:
1170:.\main.c      ****     {    
1171:.\main.c      ****         uint32 cnt = 0;
 5397              		.loc 1 1171 0
 5398 0012 0023     		movs	r3, #0
 5399 0014 FB60     		str	r3, [r7, #12]
1172:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5400              		.loc 1 1172 0
 5401 0016 0AE0     		b	.L278
 5402              	.L279:
1173:.\main.c      ****             cnt++;
 5403              		.loc 1 1173 0
 5404 0018 FB68     		ldr	r3, [r7, #12]
 5405 001a 0133     		adds	r3, r3, #1
 5406 001c FB60     		str	r3, [r7, #12]
1174:.\main.c      ****             if(cnt == 3000000){
 5407              		.loc 1 1174 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 118


 5408 001e FB68     		ldr	r3, [r7, #12]
 5409 0020 0A4A     		ldr	r2, .L280+4
 5410 0022 9342     		cmp	r3, r2
 5411 0024 03D1     		bne	.L278
1175:.\main.c      ****                 portOpen = 0;
 5412              		.loc 1 1175 0
 5413 0026 084B     		ldr	r3, .L280
 5414 0028 0022     		movs	r2, #0
 5415 002a 1A70     		strb	r2, [r3]
1176:.\main.c      ****                 return;
 5416              		.loc 1 1176 0
 5417 002c 08E0     		b	.L276
 5418              	.L278:
1172:.\main.c      ****             cnt++;
 5419              		.loc 1 1172 0
 5420 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5421 0032 0346     		mov	r3, r0
 5422 0034 002B     		cmp	r3, #0
 5423 0036 EFD0     		beq	.L279
1177:.\main.c      ****             }
1178:.\main.c      ****         }
1179:.\main.c      ****         USBUART_PutChar(c);
 5424              		.loc 1 1179 0
 5425 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5426 003a 1846     		mov	r0, r3
 5427 003c FFF7FEFF 		bl	USBUART_PutChar
 5428              	.L276:
 5429              	.LBE15:
1180:.\main.c      ****     }    
1181:.\main.c      **** }
 5430              		.loc 1 1181 0
 5431 0040 1037     		adds	r7, r7, #16
 5432              		.cfi_def_cfa_offset 8
 5433 0042 BD46     		mov	sp, r7
 5434              		.cfi_def_cfa_register 13
 5435              		@ sp needed
 5436 0044 80BD     		pop	{r7, pc}
 5437              	.L281:
 5438 0046 00BF     		.align	2
 5439              	.L280:
 5440 0048 00000000 		.word	portOpen
 5441 004c C0C62D00 		.word	3000000
 5442              		.cfi_endproc
 5443              	.LFE104:
 5444              		.size	usbPutChar, .-usbPutChar
 5445              		.section	.text.uart_set_PWM,"ax",%progbits
 5446              		.align	2
 5447              		.global	uart_set_PWM
 5448              		.thumb
 5449              		.thumb_func
 5450              		.type	uart_set_PWM, %function
 5451              	uart_set_PWM:
 5452              	.LFB105:
1182:.\main.c      **** //* ========================================
1183:.\main.c      **** 
1184:.\main.c      **** void uart_set_PWM()
1185:.\main.c      **** {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 119


 5453              		.loc 1 1185 0
 5454              		.cfi_startproc
 5455              		@ args = 0, pretend = 0, frame = 0
 5456              		@ frame_needed = 1, uses_anonymous_args = 0
 5457              		@ link register save eliminated.
 5458 0000 80B4     		push	{r7}
 5459              		.cfi_def_cfa_offset 4
 5460              		.cfi_offset 7, -4
 5461 0002 00AF     		add	r7, sp, #0
 5462              		.cfi_def_cfa_register 7
1186:.\main.c      ****     //removed from final implementation
1187:.\main.c      **** }
 5463              		.loc 1 1187 0
 5464 0004 BD46     		mov	sp, r7
 5465              		.cfi_def_cfa_register 13
 5466              		@ sp needed
 5467 0006 5DF8047B 		ldr	r7, [sp], #4
 5468              		.cfi_restore 7
 5469              		.cfi_def_cfa_offset 0
 5470 000a 7047     		bx	lr
 5471              		.cfi_endproc
 5472              	.LFE105:
 5473              		.size	uart_set_PWM, .-uart_set_PWM
 5474              		.text
 5475              	.Letext0:
 5476              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5477              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5478              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5479              		.file 5 ".\\vars.h"
 5480              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5481              		.file 7 ".\\pathfinder.h"
 5482              		.section	.debug_info,"",%progbits
 5483              	.Ldebug_info0:
 5484 0000 A40E0000 		.4byte	0xea4
 5485 0004 0400     		.2byte	0x4
 5486 0006 00000000 		.4byte	.Ldebug_abbrev0
 5487 000a 04       		.byte	0x4
 5488 000b 01       		.uleb128 0x1
 5489 000c 0D050000 		.4byte	.LASF199
 5490 0010 01       		.byte	0x1
 5491 0011 3E090000 		.4byte	.LASF200
 5492 0015 76090000 		.4byte	.LASF201
 5493 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5494 001d 00000000 		.4byte	0
 5495 0021 00000000 		.4byte	.Ldebug_line0
 5496 0025 02       		.uleb128 0x2
 5497 0026 01       		.byte	0x1
 5498 0027 06       		.byte	0x6
 5499 0028 3C010000 		.4byte	.LASF0
 5500 002c 02       		.uleb128 0x2
 5501 002d 01       		.byte	0x1
 5502 002e 08       		.byte	0x8
 5503 002f 75060000 		.4byte	.LASF1
 5504 0033 02       		.uleb128 0x2
 5505 0034 02       		.byte	0x2
 5506 0035 05       		.byte	0x5
 5507 0036 AF060000 		.4byte	.LASF2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 120


 5508 003a 02       		.uleb128 0x2
 5509 003b 02       		.byte	0x2
 5510 003c 07       		.byte	0x7
 5511 003d 92030000 		.4byte	.LASF3
 5512 0041 03       		.uleb128 0x3
 5513 0042 18040000 		.4byte	.LASF5
 5514 0046 02       		.byte	0x2
 5515 0047 3F       		.byte	0x3f
 5516 0048 4C000000 		.4byte	0x4c
 5517 004c 02       		.uleb128 0x2
 5518 004d 04       		.byte	0x4
 5519 004e 05       		.byte	0x5
 5520 004f D6010000 		.4byte	.LASF4
 5521 0053 03       		.uleb128 0x3
 5522 0054 94070000 		.4byte	.LASF6
 5523 0058 02       		.byte	0x2
 5524 0059 41       		.byte	0x41
 5525 005a 5E000000 		.4byte	0x5e
 5526 005e 02       		.uleb128 0x2
 5527 005f 04       		.byte	0x4
 5528 0060 07       		.byte	0x7
 5529 0061 52030000 		.4byte	.LASF7
 5530 0065 02       		.uleb128 0x2
 5531 0066 08       		.byte	0x8
 5532 0067 05       		.byte	0x5
 5533 0068 2E010000 		.4byte	.LASF8
 5534 006c 02       		.uleb128 0x2
 5535 006d 08       		.byte	0x8
 5536 006e 07       		.byte	0x7
 5537 006f 99000000 		.4byte	.LASF9
 5538 0073 04       		.uleb128 0x4
 5539 0074 04       		.byte	0x4
 5540 0075 05       		.byte	0x5
 5541 0076 696E7400 		.ascii	"int\000"
 5542 007a 02       		.uleb128 0x2
 5543 007b 04       		.byte	0x4
 5544 007c 07       		.byte	0x7
 5545 007d FE020000 		.4byte	.LASF10
 5546 0081 02       		.uleb128 0x2
 5547 0082 04       		.byte	0x4
 5548 0083 07       		.byte	0x7
 5549 0084 8B040000 		.4byte	.LASF11
 5550 0088 05       		.uleb128 0x5
 5551 0089 04       		.byte	0x4
 5552 008a 8E000000 		.4byte	0x8e
 5553 008e 02       		.uleb128 0x2
 5554 008f 01       		.byte	0x1
 5555 0090 08       		.byte	0x8
 5556 0091 54070000 		.4byte	.LASF12
 5557 0095 03       		.uleb128 0x3
 5558 0096 6D060000 		.4byte	.LASF13
 5559 009a 03       		.byte	0x3
 5560 009b 2C       		.byte	0x2c
 5561 009c 41000000 		.4byte	0x41
 5562 00a0 03       		.uleb128 0x3
 5563 00a1 60080000 		.4byte	.LASF14
 5564 00a5 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 121


 5565 00a6 2D       		.byte	0x2d
 5566 00a7 53000000 		.4byte	0x53
 5567 00ab 06       		.uleb128 0x6
 5568 00ac F1010000 		.4byte	.LASF15
 5569 00b0 04       		.byte	0x4
 5570 00b1 9201     		.2byte	0x192
 5571 00b3 2C000000 		.4byte	0x2c
 5572 00b7 06       		.uleb128 0x6
 5573 00b8 83060000 		.4byte	.LASF16
 5574 00bc 04       		.byte	0x4
 5575 00bd 9301     		.2byte	0x193
 5576 00bf 3A000000 		.4byte	0x3a
 5577 00c3 06       		.uleb128 0x6
 5578 00c4 3D020000 		.4byte	.LASF17
 5579 00c8 04       		.byte	0x4
 5580 00c9 9401     		.2byte	0x194
 5581 00cb 5E000000 		.4byte	0x5e
 5582 00cf 06       		.uleb128 0x6
 5583 00d0 AE030000 		.4byte	.LASF18
 5584 00d4 04       		.byte	0x4
 5585 00d5 9501     		.2byte	0x195
 5586 00d7 25000000 		.4byte	0x25
 5587 00db 06       		.uleb128 0x6
 5588 00dc FD080000 		.4byte	.LASF19
 5589 00e0 04       		.byte	0x4
 5590 00e1 9601     		.2byte	0x196
 5591 00e3 33000000 		.4byte	0x33
 5592 00e7 02       		.uleb128 0x2
 5593 00e8 04       		.byte	0x4
 5594 00e9 04       		.byte	0x4
 5595 00ea E3050000 		.4byte	.LASF20
 5596 00ee 02       		.uleb128 0x2
 5597 00ef 08       		.byte	0x8
 5598 00f0 04       		.byte	0x4
 5599 00f1 10020000 		.4byte	.LASF21
 5600 00f5 07       		.uleb128 0x7
 5601 00f6 A0000000 		.4byte	0xa0
 5602 00fa 05010000 		.4byte	0x105
 5603 00fe 08       		.uleb128 0x8
 5604 00ff 81000000 		.4byte	0x81
 5605 0103 01       		.byte	0x1
 5606 0104 00       		.byte	0
 5607 0105 02       		.uleb128 0x2
 5608 0106 08       		.byte	0x8
 5609 0107 04       		.byte	0x4
 5610 0108 36070000 		.4byte	.LASF22
 5611 010c 09       		.uleb128 0x9
 5612 010d D0010000 		.4byte	.LASF31
 5613 0111 01       		.byte	0x1
 5614 0112 05       		.byte	0x5
 5615 0113 61       		.byte	0x61
 5616 0114 49010000 		.4byte	0x149
 5617 0118 0A       		.uleb128 0xa
 5618 0119 B3030000 		.4byte	.LASF23
 5619 011d 00       		.sleb128 0
 5620 011e 0A       		.uleb128 0xa
 5621 011f D6040000 		.4byte	.LASF24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 122


 5622 0123 01       		.sleb128 1
 5623 0124 0A       		.uleb128 0xa
 5624 0125 E2020000 		.4byte	.LASF25
 5625 0129 02       		.sleb128 2
 5626 012a 0A       		.uleb128 0xa
 5627 012b 21070000 		.4byte	.LASF26
 5628 012f 03       		.sleb128 3
 5629 0130 0A       		.uleb128 0xa
 5630 0131 D1030000 		.4byte	.LASF27
 5631 0135 04       		.sleb128 4
 5632 0136 0A       		.uleb128 0xa
 5633 0137 E9050000 		.4byte	.LASF28
 5634 013b 05       		.sleb128 5
 5635 013c 0A       		.uleb128 0xa
 5636 013d 53060000 		.4byte	.LASF29
 5637 0141 06       		.sleb128 6
 5638 0142 0A       		.uleb128 0xa
 5639 0143 DF010000 		.4byte	.LASF30
 5640 0147 07       		.sleb128 7
 5641 0148 00       		.byte	0
 5642 0149 09       		.uleb128 0x9
 5643 014a 59070000 		.4byte	.LASF32
 5644 014e 01       		.byte	0x1
 5645 014f 05       		.byte	0x5
 5646 0150 62       		.byte	0x62
 5647 0151 86010000 		.4byte	0x186
 5648 0155 0A       		.uleb128 0xa
 5649 0156 B9060000 		.4byte	.LASF33
 5650 015a 00       		.sleb128 0
 5651 015b 0A       		.uleb128 0xa
 5652 015c 0C040000 		.4byte	.LASF34
 5653 0160 01       		.sleb128 1
 5654 0161 0A       		.uleb128 0xa
 5655 0162 08010000 		.4byte	.LASF35
 5656 0166 02       		.sleb128 2
 5657 0167 0A       		.uleb128 0xa
 5658 0168 22040000 		.4byte	.LASF36
 5659 016c 03       		.sleb128 3
 5660 016d 0A       		.uleb128 0xa
 5661 016e 1F000000 		.4byte	.LASF37
 5662 0172 04       		.sleb128 4
 5663 0173 0A       		.uleb128 0xa
 5664 0174 8A060000 		.4byte	.LASF38
 5665 0178 05       		.sleb128 5
 5666 0179 0A       		.uleb128 0xa
 5667 017a CD020000 		.4byte	.LASF39
 5668 017e 06       		.sleb128 6
 5669 017f 0A       		.uleb128 0xa
 5670 0180 10010000 		.4byte	.LASF40
 5671 0184 07       		.sleb128 7
 5672 0185 00       		.byte	0
 5673 0186 0B       		.uleb128 0xb
 5674 0187 1C030000 		.4byte	.LASF202
 5675 018b 20       		.byte	0x20
 5676 018c 05       		.byte	0x5
 5677 018d 68       		.byte	0x68
 5678 018e 5F020000 		.4byte	0x25f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 123


 5679 0192 0C       		.uleb128 0xc
 5680 0193 7D040000 		.4byte	.LASF41
 5681 0197 05       		.byte	0x5
 5682 0198 69       		.byte	0x69
 5683 0199 CF000000 		.4byte	0xcf
 5684 019d 00       		.byte	0
 5685 019e 0C       		.uleb128 0xc
 5686 019f 6B070000 		.4byte	.LASF42
 5687 01a3 05       		.byte	0x5
 5688 01a4 6A       		.byte	0x6a
 5689 01a5 AB000000 		.4byte	0xab
 5690 01a9 01       		.byte	0x1
 5691 01aa 0C       		.uleb128 0xc
 5692 01ab D3070000 		.4byte	.LASF43
 5693 01af 05       		.byte	0x5
 5694 01b0 6B       		.byte	0x6b
 5695 01b1 DB000000 		.4byte	0xdb
 5696 01b5 02       		.byte	0x2
 5697 01b6 0C       		.uleb128 0xc
 5698 01b7 F2080000 		.4byte	.LASF44
 5699 01bb 05       		.byte	0x5
 5700 01bc 6C       		.byte	0x6c
 5701 01bd DB000000 		.4byte	0xdb
 5702 01c1 04       		.byte	0x4
 5703 01c2 0C       		.uleb128 0xc
 5704 01c3 53010000 		.4byte	.LASF45
 5705 01c7 05       		.byte	0x5
 5706 01c8 6D       		.byte	0x6d
 5707 01c9 DB000000 		.4byte	0xdb
 5708 01cd 06       		.byte	0x6
 5709 01ce 0C       		.uleb128 0xc
 5710 01cf D6000000 		.4byte	.LASF46
 5711 01d3 05       		.byte	0x5
 5712 01d4 6E       		.byte	0x6e
 5713 01d5 DB000000 		.4byte	0xdb
 5714 01d9 08       		.byte	0x8
 5715 01da 0C       		.uleb128 0xc
 5716 01db BC070000 		.4byte	.LASF47
 5717 01df 05       		.byte	0x5
 5718 01e0 6F       		.byte	0x6f
 5719 01e1 DB000000 		.4byte	0xdb
 5720 01e5 0A       		.byte	0xa
 5721 01e6 0C       		.uleb128 0xc
 5722 01e7 6D090000 		.4byte	.LASF48
 5723 01eb 05       		.byte	0x5
 5724 01ec 70       		.byte	0x70
 5725 01ed DB000000 		.4byte	0xdb
 5726 01f1 0C       		.byte	0xc
 5727 01f2 0C       		.uleb128 0xc
 5728 01f3 7B000000 		.4byte	.LASF49
 5729 01f7 05       		.byte	0x5
 5730 01f8 71       		.byte	0x71
 5731 01f9 DB000000 		.4byte	0xdb
 5732 01fd 0E       		.byte	0xe
 5733 01fe 0C       		.uleb128 0xc
 5734 01ff 14080000 		.4byte	.LASF50
 5735 0203 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 124


 5736 0204 72       		.byte	0x72
 5737 0205 DB000000 		.4byte	0xdb
 5738 0209 10       		.byte	0x10
 5739 020a 0C       		.uleb128 0xc
 5740 020b AF040000 		.4byte	.LASF51
 5741 020f 05       		.byte	0x5
 5742 0210 73       		.byte	0x73
 5743 0211 DB000000 		.4byte	0xdb
 5744 0215 12       		.byte	0x12
 5745 0216 0C       		.uleb128 0xc
 5746 0217 82040000 		.4byte	.LASF52
 5747 021b 05       		.byte	0x5
 5748 021c 74       		.byte	0x74
 5749 021d DB000000 		.4byte	0xdb
 5750 0221 14       		.byte	0x14
 5751 0222 0C       		.uleb128 0xc
 5752 0223 B7040000 		.4byte	.LASF53
 5753 0227 05       		.byte	0x5
 5754 0228 75       		.byte	0x75
 5755 0229 DB000000 		.4byte	0xdb
 5756 022d 16       		.byte	0x16
 5757 022e 0C       		.uleb128 0xc
 5758 022f 9D060000 		.4byte	.LASF54
 5759 0233 05       		.byte	0x5
 5760 0234 76       		.byte	0x76
 5761 0235 DB000000 		.4byte	0xdb
 5762 0239 18       		.byte	0x18
 5763 023a 0C       		.uleb128 0xc
 5764 023b E6040000 		.4byte	.LASF55
 5765 023f 05       		.byte	0x5
 5766 0240 77       		.byte	0x77
 5767 0241 DB000000 		.4byte	0xdb
 5768 0245 1A       		.byte	0x1a
 5769 0246 0C       		.uleb128 0xc
 5770 0247 0B000000 		.4byte	.LASF56
 5771 024b 05       		.byte	0x5
 5772 024c 78       		.byte	0x78
 5773 024d DB000000 		.4byte	0xdb
 5774 0251 1C       		.byte	0x1c
 5775 0252 0C       		.uleb128 0xc
 5776 0253 7A020000 		.4byte	.LASF57
 5777 0257 05       		.byte	0x5
 5778 0258 79       		.byte	0x79
 5779 0259 DB000000 		.4byte	0xdb
 5780 025d 1E       		.byte	0x1e
 5781 025e 00       		.byte	0
 5782 025f 0D       		.uleb128 0xd
 5783 0260 91080000 		.4byte	.LASF58
 5784 0264 01       		.byte	0x1
 5785 0265 62       		.byte	0x62
 5786 0266 00000000 		.4byte	.LFB63
 5787 026a 0C000000 		.4byte	.LFE63-.LFB63
 5788 026e 01       		.uleb128 0x1
 5789 026f 9C       		.byte	0x9c
 5790 0270 0E       		.uleb128 0xe
 5791 0271 26020000 		.4byte	.LASF59
 5792 0275 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 125


 5793 0276 68       		.byte	0x68
 5794 0277 00000000 		.4byte	.LFB64
 5795 027b 2C000000 		.4byte	.LFE64-.LFB64
 5796 027f 01       		.uleb128 0x1
 5797 0280 9C       		.byte	0x9c
 5798 0281 0E       		.uleb128 0xe
 5799 0282 F4020000 		.4byte	.LASF60
 5800 0286 01       		.byte	0x1
 5801 0287 71       		.byte	0x71
 5802 0288 00000000 		.4byte	.LFB65
 5803 028c 9C010000 		.4byte	.LFE65-.LFB65
 5804 0290 01       		.uleb128 0x1
 5805 0291 9C       		.byte	0x9c
 5806 0292 0F       		.uleb128 0xf
 5807 0293 56040000 		.4byte	.LASF66
 5808 0297 01       		.byte	0x1
 5809 0298 96       		.byte	0x96
 5810 0299 00000000 		.4byte	.LFB66
 5811 029d 34010000 		.4byte	.LFE66-.LFB66
 5812 02a1 01       		.uleb128 0x1
 5813 02a2 9C       		.byte	0x9c
 5814 02a3 DC020000 		.4byte	0x2dc
 5815 02a7 10       		.uleb128 0x10
 5816 02a8 0E000000 		.4byte	.LBB2
 5817 02ac 64000000 		.4byte	.LBE2-.LBB2
 5818 02b0 C3020000 		.4byte	0x2c3
 5819 02b4 11       		.uleb128 0x11
 5820 02b5 88000000 		.4byte	.LASF61
 5821 02b9 01       		.byte	0x1
 5822 02ba 9A       		.byte	0x9a
 5823 02bb B7000000 		.4byte	0xb7
 5824 02bf 02       		.uleb128 0x2
 5825 02c0 91       		.byte	0x91
 5826 02c1 76       		.sleb128 -10
 5827 02c2 00       		.byte	0
 5828 02c3 12       		.uleb128 0x12
 5829 02c4 7E000000 		.4byte	.LBB3
 5830 02c8 64000000 		.4byte	.LBE3-.LBB3
 5831 02cc 11       		.uleb128 0x11
 5832 02cd 88000000 		.4byte	.LASF61
 5833 02d1 01       		.byte	0x1
 5834 02d2 A6       		.byte	0xa6
 5835 02d3 B7000000 		.4byte	0xb7
 5836 02d7 02       		.uleb128 0x2
 5837 02d8 91       		.byte	0x91
 5838 02d9 74       		.sleb128 -12
 5839 02da 00       		.byte	0
 5840 02db 00       		.byte	0
 5841 02dc 0D       		.uleb128 0xd
 5842 02dd FF030000 		.4byte	.LASF62
 5843 02e1 01       		.byte	0x1
 5844 02e2 BC       		.byte	0xbc
 5845 02e3 00000000 		.4byte	.LFB67
 5846 02e7 20000000 		.4byte	.LFE67-.LFB67
 5847 02eb 01       		.uleb128 0x1
 5848 02ec 9C       		.byte	0x9c
 5849 02ed 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 126


 5850 02ee 29000000 		.4byte	.LASF63
 5851 02f2 01       		.byte	0x1
 5852 02f3 C3       		.byte	0xc3
 5853 02f4 00000000 		.4byte	.LFB68
 5854 02f8 28000000 		.4byte	.LFE68-.LFB68
 5855 02fc 01       		.uleb128 0x1
 5856 02fd 9C       		.byte	0x9c
 5857 02fe 0E       		.uleb128 0xe
 5858 02ff EF060000 		.4byte	.LASF64
 5859 0303 01       		.byte	0x1
 5860 0304 CC       		.byte	0xcc
 5861 0305 00000000 		.4byte	.LFB69
 5862 0309 0A000000 		.4byte	.LFE69-.LFB69
 5863 030d 01       		.uleb128 0x1
 5864 030e 9C       		.byte	0x9c
 5865 030f 0E       		.uleb128 0xe
 5866 0310 55000000 		.4byte	.LASF65
 5867 0314 01       		.byte	0x1
 5868 0315 D1       		.byte	0xd1
 5869 0316 00000000 		.4byte	.LFB70
 5870 031a 28000000 		.4byte	.LFE70-.LFB70
 5871 031e 01       		.uleb128 0x1
 5872 031f 9C       		.byte	0x9c
 5873 0320 13       		.uleb128 0x13
 5874 0321 63090000 		.4byte	.LASF67
 5875 0325 01       		.byte	0x1
 5876 0326 DC       		.byte	0xdc
 5877 0327 73000000 		.4byte	0x73
 5878 032b 00000000 		.4byte	.LFB71
 5879 032f 68070000 		.4byte	.LFE71-.LFB71
 5880 0333 01       		.uleb128 0x1
 5881 0334 9C       		.byte	0x9c
 5882 0335 28040000 		.4byte	0x428
 5883 0339 14       		.uleb128 0x14
 5884 033a 7B070000 		.4byte	.LASF68
 5885 033e 01       		.byte	0x1
 5886 033f 1501     		.2byte	0x115
 5887 0341 B7000000 		.4byte	0xb7
 5888 0345 02       		.uleb128 0x2
 5889 0346 91       		.byte	0x91
 5890 0347 76       		.sleb128 -10
 5891 0348 12       		.uleb128 0x12
 5892 0349 38010000 		.4byte	.LBB4
 5893 034d A6050000 		.4byte	.LBE4-.LBB4
 5894 0351 14       		.uleb128 0x14
 5895 0352 35090000 		.4byte	.LASF69
 5896 0356 01       		.byte	0x1
 5897 0357 4C01     		.2byte	0x14c
 5898 0359 8E000000 		.4byte	0x8e
 5899 035d 02       		.uleb128 0x2
 5900 035e 91       		.byte	0x91
 5901 035f 75       		.sleb128 -11
 5902 0360 14       		.uleb128 0x14
 5903 0361 EB030000 		.4byte	.LASF70
 5904 0365 01       		.byte	0x1
 5905 0366 4D01     		.2byte	0x14d
 5906 0368 AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 127


 5907 036c 02       		.uleb128 0x2
 5908 036d 91       		.byte	0x91
 5909 036e 71       		.sleb128 -15
 5910 036f 14       		.uleb128 0x14
 5911 0370 A9080000 		.4byte	.LASF71
 5912 0374 01       		.byte	0x1
 5913 0375 4E01     		.2byte	0x14e
 5914 0377 AB000000 		.4byte	0xab
 5915 037b 02       		.uleb128 0x2
 5916 037c 91       		.byte	0x91
 5917 037d 70       		.sleb128 -16
 5918 037e 10       		.uleb128 0x10
 5919 037f B8010000 		.4byte	.LBB5
 5920 0383 14020000 		.4byte	.LBE5-.LBB5
 5921 0387 B4030000 		.4byte	0x3b4
 5922 038b 15       		.uleb128 0x15
 5923 038c 6D657300 		.ascii	"mes\000"
 5924 0390 01       		.byte	0x1
 5925 0391 5501     		.2byte	0x155
 5926 0393 28040000 		.4byte	0x428
 5927 0397 02       		.uleb128 0x2
 5928 0398 91       		.byte	0x91
 5929 0399 5C       		.sleb128 -36
 5930 039a 12       		.uleb128 0x12
 5931 039b E0010000 		.4byte	.LBB6
 5932 039f EC010000 		.4byte	.LBE6-.LBB6
 5933 03a3 14       		.uleb128 0x14
 5934 03a4 79080000 		.4byte	.LASF72
 5935 03a8 01       		.byte	0x1
 5936 03a9 6601     		.2byte	0x166
 5937 03ab AB000000 		.4byte	0xab
 5938 03af 02       		.uleb128 0x2
 5939 03b0 91       		.byte	0x91
 5940 03b1 74       		.sleb128 -12
 5941 03b2 00       		.byte	0
 5942 03b3 00       		.byte	0
 5943 03b4 10       		.uleb128 0x10
 5944 03b5 26040000 		.4byte	.LBB7
 5945 03b9 30000000 		.4byte	.LBE7-.LBB7
 5946 03bd D1030000 		.4byte	0x3d1
 5947 03c1 14       		.uleb128 0x14
 5948 03c2 44020000 		.4byte	.LASF73
 5949 03c6 01       		.byte	0x1
 5950 03c7 A201     		.2byte	0x1a2
 5951 03c9 8E000000 		.4byte	0x8e
 5952 03cd 02       		.uleb128 0x2
 5953 03ce 91       		.byte	0x91
 5954 03cf 6F       		.sleb128 -17
 5955 03d0 00       		.byte	0
 5956 03d1 10       		.uleb128 0x10
 5957 03d2 7C040000 		.4byte	.LBB8
 5958 03d6 02010000 		.4byte	.LBE8-.LBB8
 5959 03da FD030000 		.4byte	0x3fd
 5960 03de 15       		.uleb128 0x15
 5961 03df 6D657300 		.ascii	"mes\000"
 5962 03e3 01       		.byte	0x1
 5963 03e4 B101     		.2byte	0x1b1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 128


 5964 03e6 28040000 		.4byte	0x428
 5965 03ea 02       		.uleb128 0x2
 5966 03eb 91       		.byte	0x91
 5967 03ec 4C       		.sleb128 -52
 5968 03ed 14       		.uleb128 0x14
 5969 03ee 79080000 		.4byte	.LASF72
 5970 03f2 01       		.byte	0x1
 5971 03f3 B501     		.2byte	0x1b5
 5972 03f5 AB000000 		.4byte	0xab
 5973 03f9 02       		.uleb128 0x2
 5974 03fa 91       		.byte	0x91
 5975 03fb 73       		.sleb128 -13
 5976 03fc 00       		.byte	0
 5977 03fd 12       		.uleb128 0x12
 5978 03fe 9E050000 		.4byte	.LBB9
 5979 0402 36010000 		.4byte	.LBE9-.LBB9
 5980 0406 15       		.uleb128 0x15
 5981 0407 6D657300 		.ascii	"mes\000"
 5982 040b 01       		.byte	0x1
 5983 040c D901     		.2byte	0x1d9
 5984 040e 28040000 		.4byte	0x428
 5985 0412 03       		.uleb128 0x3
 5986 0413 91       		.byte	0x91
 5987 0414 BC7F     		.sleb128 -68
 5988 0416 14       		.uleb128 0x14
 5989 0417 79080000 		.4byte	.LASF72
 5990 041b 01       		.byte	0x1
 5991 041c DD01     		.2byte	0x1dd
 5992 041e AB000000 		.4byte	0xab
 5993 0422 02       		.uleb128 0x2
 5994 0423 91       		.byte	0x91
 5995 0424 72       		.sleb128 -14
 5996 0425 00       		.byte	0
 5997 0426 00       		.byte	0
 5998 0427 00       		.byte	0
 5999 0428 07       		.uleb128 0x7
 6000 0429 8E000000 		.4byte	0x8e
 6001 042d 38040000 		.4byte	0x438
 6002 0431 08       		.uleb128 0x8
 6003 0432 81000000 		.4byte	0x81
 6004 0436 0F       		.byte	0xf
 6005 0437 00       		.byte	0
 6006 0438 16       		.uleb128 0x16
 6007 0439 CE060000 		.4byte	.LASF79
 6008 043d 01       		.byte	0x1
 6009 043e 4A02     		.2byte	0x24a
 6010 0440 00000000 		.4byte	.LFB72
 6011 0444 60010000 		.4byte	.LFE72-.LFB72
 6012 0448 01       		.uleb128 0x1
 6013 0449 9C       		.byte	0x9c
 6014 044a 86040000 		.4byte	0x486
 6015 044e 12       		.uleb128 0x12
 6016 044f 10000000 		.4byte	.LBB10
 6017 0453 34010000 		.4byte	.LBE10-.LBB10
 6018 0457 14       		.uleb128 0x14
 6019 0458 29070000 		.4byte	.LASF74
 6020 045c 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 129


 6021 045d 5002     		.2byte	0x250
 6022 045f B7000000 		.4byte	0xb7
 6023 0463 02       		.uleb128 0x2
 6024 0464 91       		.byte	0x91
 6025 0465 76       		.sleb128 -10
 6026 0466 14       		.uleb128 0x14
 6027 0467 54020000 		.4byte	.LASF75
 6028 046b 01       		.byte	0x1
 6029 046c 5102     		.2byte	0x251
 6030 046e 86040000 		.4byte	0x486
 6031 0472 02       		.uleb128 0x2
 6032 0473 91       		.byte	0x91
 6033 0474 68       		.sleb128 -24
 6034 0475 14       		.uleb128 0x14
 6035 0476 D5050000 		.4byte	.LASF76
 6036 047a 01       		.byte	0x1
 6037 047b 5202     		.2byte	0x252
 6038 047d 86040000 		.4byte	0x486
 6039 0481 02       		.uleb128 0x2
 6040 0482 91       		.byte	0x91
 6041 0483 5C       		.sleb128 -36
 6042 0484 00       		.byte	0
 6043 0485 00       		.byte	0
 6044 0486 07       		.uleb128 0x7
 6045 0487 8E000000 		.4byte	0x8e
 6046 048b 96040000 		.4byte	0x496
 6047 048f 08       		.uleb128 0x8
 6048 0490 81000000 		.4byte	0x81
 6049 0494 0B       		.byte	0xb
 6050 0495 00       		.byte	0
 6051 0496 17       		.uleb128 0x17
 6052 0497 05020000 		.4byte	.LASF77
 6053 049b 01       		.byte	0x1
 6054 049c 8B02     		.2byte	0x28b
 6055 049e 00000000 		.4byte	.LFB73
 6056 04a2 18000000 		.4byte	.LFE73-.LFB73
 6057 04a6 01       		.uleb128 0x1
 6058 04a7 9C       		.byte	0x9c
 6059 04a8 BC040000 		.4byte	0x4bc
 6060 04ac 18       		.uleb128 0x18
 6061 04ad 64697200 		.ascii	"dir\000"
 6062 04b1 01       		.byte	0x1
 6063 04b2 8B02     		.2byte	0x28b
 6064 04b4 AB000000 		.4byte	0xab
 6065 04b8 02       		.uleb128 0x2
 6066 04b9 91       		.byte	0x91
 6067 04ba 77       		.sleb128 -9
 6068 04bb 00       		.byte	0
 6069 04bc 17       		.uleb128 0x17
 6070 04bd 25060000 		.4byte	.LASF78
 6071 04c1 01       		.byte	0x1
 6072 04c2 9002     		.2byte	0x290
 6073 04c4 00000000 		.4byte	.LFB74
 6074 04c8 18000000 		.4byte	.LFE74-.LFB74
 6075 04cc 01       		.uleb128 0x1
 6076 04cd 9C       		.byte	0x9c
 6077 04ce E2040000 		.4byte	0x4e2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 130


 6078 04d2 18       		.uleb128 0x18
 6079 04d3 64697200 		.ascii	"dir\000"
 6080 04d7 01       		.byte	0x1
 6081 04d8 9002     		.2byte	0x290
 6082 04da AB000000 		.4byte	0xab
 6083 04de 02       		.uleb128 0x2
 6084 04df 91       		.byte	0x91
 6085 04e0 77       		.sleb128 -9
 6086 04e1 00       		.byte	0
 6087 04e2 19       		.uleb128 0x19
 6088 04e3 36080000 		.4byte	.LASF80
 6089 04e7 01       		.byte	0x1
 6090 04e8 9502     		.2byte	0x295
 6091 04ea 00000000 		.4byte	.LFB75
 6092 04ee 54000000 		.4byte	.LFE75-.LFB75
 6093 04f2 01       		.uleb128 0x1
 6094 04f3 9C       		.byte	0x9c
 6095 04f4 08050000 		.4byte	0x508
 6096 04f8 15       		.uleb128 0x15
 6097 04f9 6D657300 		.ascii	"mes\000"
 6098 04fd 01       		.byte	0x1
 6099 04fe 9A02     		.2byte	0x29a
 6100 0500 28040000 		.4byte	0x428
 6101 0504 02       		.uleb128 0x2
 6102 0505 91       		.byte	0x91
 6103 0506 68       		.sleb128 -24
 6104 0507 00       		.byte	0
 6105 0508 17       		.uleb128 0x17
 6106 0509 A5030000 		.4byte	.LASF81
 6107 050d 01       		.byte	0x1
 6108 050e 9F02     		.2byte	0x29f
 6109 0510 00000000 		.4byte	.LFB76
 6110 0514 F4000000 		.4byte	.LFE76-.LFB76
 6111 0518 01       		.uleb128 0x1
 6112 0519 9C       		.byte	0x9c
 6113 051a 5B050000 		.4byte	0x55b
 6114 051e 1A       		.uleb128 0x1a
 6115 051f 68090000 		.4byte	.LASF82
 6116 0523 01       		.byte	0x1
 6117 0524 9F02     		.2byte	0x29f
 6118 0526 EE000000 		.4byte	0xee
 6119 052a 02       		.uleb128 0x2
 6120 052b 91       		.byte	0x91
 6121 052c 68       		.sleb128 -24
 6122 052d 1A       		.uleb128 0x1a
 6123 052e 1D010000 		.4byte	.LASF83
 6124 0532 01       		.byte	0x1
 6125 0533 9F02     		.2byte	0x29f
 6126 0535 EE000000 		.4byte	0xee
 6127 0539 02       		.uleb128 0x2
 6128 053a 91       		.byte	0x91
 6129 053b 60       		.sleb128 -32
 6130 053c 14       		.uleb128 0x14
 6131 053d 03090000 		.4byte	.LASF84
 6132 0541 01       		.byte	0x1
 6133 0542 B402     		.2byte	0x2b4
 6134 0544 DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 131


 6135 0548 02       		.uleb128 0x2
 6136 0549 91       		.byte	0x91
 6137 054a 76       		.sleb128 -10
 6138 054b 14       		.uleb128 0x14
 6139 054c EB070000 		.4byte	.LASF85
 6140 0550 01       		.byte	0x1
 6141 0551 B502     		.2byte	0x2b5
 6142 0553 DB000000 		.4byte	0xdb
 6143 0557 02       		.uleb128 0x2
 6144 0558 91       		.byte	0x91
 6145 0559 74       		.sleb128 -12
 6146 055a 00       		.byte	0
 6147 055b 1B       		.uleb128 0x1b
 6148 055c 00080000 		.4byte	.LASF86
 6149 0560 01       		.byte	0x1
 6150 0561 BB02     		.2byte	0x2bb
 6151 0563 00000000 		.4byte	.LFB77
 6152 0567 18000000 		.4byte	.LFE77-.LFB77
 6153 056b 01       		.uleb128 0x1
 6154 056c 9C       		.byte	0x9c
 6155 056d 1B       		.uleb128 0x1b
 6156 056e 06070000 		.4byte	.LASF87
 6157 0572 01       		.byte	0x1
 6158 0573 C102     		.2byte	0x2c1
 6159 0575 00000000 		.4byte	.LFB78
 6160 0579 18000000 		.4byte	.LFE78-.LFB78
 6161 057d 01       		.uleb128 0x1
 6162 057e 9C       		.byte	0x9c
 6163 057f 1B       		.uleb128 0x1b
 6164 0580 92060000 		.4byte	.LASF88
 6165 0584 01       		.byte	0x1
 6166 0585 C702     		.2byte	0x2c7
 6167 0587 00000000 		.4byte	.LFB79
 6168 058b 22000000 		.4byte	.LFE79-.LFB79
 6169 058f 01       		.uleb128 0x1
 6170 0590 9C       		.byte	0x9c
 6171 0591 1B       		.uleb128 0x1b
 6172 0592 02060000 		.4byte	.LASF89
 6173 0596 01       		.byte	0x1
 6174 0597 CD02     		.2byte	0x2cd
 6175 0599 00000000 		.4byte	.LFB80
 6176 059d 1C000000 		.4byte	.LFE80-.LFB80
 6177 05a1 01       		.uleb128 0x1
 6178 05a2 9C       		.byte	0x9c
 6179 05a3 1B       		.uleb128 0x1b
 6180 05a4 CC000000 		.4byte	.LASF90
 6181 05a8 01       		.byte	0x1
 6182 05a9 D202     		.2byte	0x2d2
 6183 05ab 00000000 		.4byte	.LFB81
 6184 05af 34000000 		.4byte	.LFE81-.LFB81
 6185 05b3 01       		.uleb128 0x1
 6186 05b4 9C       		.byte	0x9c
 6187 05b5 1B       		.uleb128 0x1b
 6188 05b6 C7010000 		.4byte	.LASF91
 6189 05ba 01       		.byte	0x1
 6190 05bb D702     		.2byte	0x2d7
 6191 05bd 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 132


 6192 05c1 38000000 		.4byte	.LFE82-.LFB82
 6193 05c5 01       		.uleb128 0x1
 6194 05c6 9C       		.byte	0x9c
 6195 05c7 1B       		.uleb128 0x1b
 6196 05c8 DE070000 		.4byte	.LASF92
 6197 05cc 01       		.byte	0x1
 6198 05cd DC02     		.2byte	0x2dc
 6199 05cf 00000000 		.4byte	.LFB83
 6200 05d3 4C000000 		.4byte	.LFE83-.LFB83
 6201 05d7 01       		.uleb128 0x1
 6202 05d8 9C       		.byte	0x9c
 6203 05d9 1B       		.uleb128 0x1b
 6204 05da B9030000 		.4byte	.LASF93
 6205 05de 01       		.byte	0x1
 6206 05df E102     		.2byte	0x2e1
 6207 05e1 00000000 		.4byte	.LFB84
 6208 05e5 38000000 		.4byte	.LFE84-.LFB84
 6209 05e9 01       		.uleb128 0x1
 6210 05ea 9C       		.byte	0x9c
 6211 05eb 1B       		.uleb128 0x1b
 6212 05ec 96010000 		.4byte	.LASF94
 6213 05f0 01       		.byte	0x1
 6214 05f1 EA02     		.2byte	0x2ea
 6215 05f3 00000000 		.4byte	.LFB85
 6216 05f7 38000000 		.4byte	.LFE85-.LFB85
 6217 05fb 01       		.uleb128 0x1
 6218 05fc 9C       		.byte	0x9c
 6219 05fd 1B       		.uleb128 0x1b
 6220 05fe 6E030000 		.4byte	.LASF95
 6221 0602 01       		.byte	0x1
 6222 0603 F302     		.2byte	0x2f3
 6223 0605 00000000 		.4byte	.LFB86
 6224 0609 38000000 		.4byte	.LFE86-.LFB86
 6225 060d 01       		.uleb128 0x1
 6226 060e 9C       		.byte	0x9c
 6227 060f 1B       		.uleb128 0x1b
 6228 0610 54080000 		.4byte	.LASF96
 6229 0614 01       		.byte	0x1
 6230 0615 FC02     		.2byte	0x2fc
 6231 0617 00000000 		.4byte	.LFB87
 6232 061b 14000000 		.4byte	.LFE87-.LFB87
 6233 061f 01       		.uleb128 0x1
 6234 0620 9C       		.byte	0x9c
 6235 0621 1C       		.uleb128 0x1c
 6236 0622 71000000 		.4byte	.LASF97
 6237 0626 01       		.byte	0x1
 6238 0627 0103     		.2byte	0x301
 6239 0629 00000000 		.4byte	.LFB88
 6240 062d 18000000 		.4byte	.LFE88-.LFB88
 6241 0631 01       		.uleb128 0x1
 6242 0632 9C       		.byte	0x9c
 6243 0633 1C       		.uleb128 0x1c
 6244 0634 64030000 		.4byte	.LASF98
 6245 0638 01       		.byte	0x1
 6246 0639 0503     		.2byte	0x305
 6247 063b 00000000 		.4byte	.LFB89
 6248 063f 18000000 		.4byte	.LFE89-.LFB89
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 133


 6249 0643 01       		.uleb128 0x1
 6250 0644 9C       		.byte	0x9c
 6251 0645 1C       		.uleb128 0x1c
 6252 0646 00000000 		.4byte	.LASF99
 6253 064a 01       		.byte	0x1
 6254 064b 0A03     		.2byte	0x30a
 6255 064d 00000000 		.4byte	.LFB90
 6256 0651 18000000 		.4byte	.LFE90-.LFB90
 6257 0655 01       		.uleb128 0x1
 6258 0656 9C       		.byte	0x9c
 6259 0657 1C       		.uleb128 0x1c
 6260 0658 C7080000 		.4byte	.LASF100
 6261 065c 01       		.byte	0x1
 6262 065d 0E03     		.2byte	0x30e
 6263 065f 00000000 		.4byte	.LFB91
 6264 0663 18000000 		.4byte	.LFE91-.LFB91
 6265 0667 01       		.uleb128 0x1
 6266 0668 9C       		.byte	0x9c
 6267 0669 17       		.uleb128 0x17
 6268 066a DF060000 		.4byte	.LASF101
 6269 066e 01       		.byte	0x1
 6270 066f 1503     		.2byte	0x315
 6271 0671 00000000 		.4byte	.LFB92
 6272 0675 B8000000 		.4byte	.LFE92-.LFB92
 6273 0679 01       		.uleb128 0x1
 6274 067a 9C       		.byte	0x9c
 6275 067b 8F060000 		.4byte	0x68f
 6276 067f 14       		.uleb128 0x14
 6277 0680 1C080000 		.4byte	.LASF102
 6278 0684 01       		.byte	0x1
 6279 0685 1603     		.2byte	0x316
 6280 0687 8E000000 		.4byte	0x8e
 6281 068b 02       		.uleb128 0x2
 6282 068c 91       		.byte	0x91
 6283 068d 6F       		.sleb128 -17
 6284 068e 00       		.byte	0
 6285 068f 17       		.uleb128 0x17
 6286 0690 9B050000 		.4byte	.LASF103
 6287 0694 01       		.byte	0x1
 6288 0695 3203     		.2byte	0x332
 6289 0697 00000000 		.4byte	.LFB93
 6290 069b 20050000 		.4byte	.LFE93-.LFB93
 6291 069f 01       		.uleb128 0x1
 6292 06a0 9C       		.byte	0x9c
 6293 06a1 F7060000 		.4byte	0x6f7
 6294 06a5 14       		.uleb128 0x14
 6295 06a6 1C080000 		.4byte	.LASF102
 6296 06aa 01       		.byte	0x1
 6297 06ab 3403     		.2byte	0x334
 6298 06ad 8E000000 		.4byte	0x8e
 6299 06b1 02       		.uleb128 0x2
 6300 06b2 91       		.byte	0x91
 6301 06b3 77       		.sleb128 -9
 6302 06b4 12       		.uleb128 0x12
 6303 06b5 48010000 		.4byte	.LBB11
 6304 06b9 AC030000 		.4byte	.LBE11-.LBB11
 6305 06bd 15       		.uleb128 0x15
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 134


 6306 06be 6D657300 		.ascii	"mes\000"
 6307 06c2 01       		.byte	0x1
 6308 06c3 5A03     		.2byte	0x35a
 6309 06c5 28040000 		.4byte	0x428
 6310 06c9 02       		.uleb128 0x2
 6311 06ca 91       		.byte	0x91
 6312 06cb 58       		.sleb128 -40
 6313 06cc 15       		.uleb128 0x15
 6314 06cd 6900     		.ascii	"i\000"
 6315 06cf 01       		.byte	0x1
 6316 06d0 8503     		.2byte	0x385
 6317 06d2 73000000 		.4byte	0x73
 6318 06d6 02       		.uleb128 0x2
 6319 06d7 91       		.byte	0x91
 6320 06d8 70       		.sleb128 -16
 6321 06d9 14       		.uleb128 0x14
 6322 06da 35090000 		.4byte	.LASF69
 6323 06de 01       		.byte	0x1
 6324 06df 9203     		.2byte	0x392
 6325 06e1 8E000000 		.4byte	0x8e
 6326 06e5 02       		.uleb128 0x2
 6327 06e6 91       		.byte	0x91
 6328 06e7 6B       		.sleb128 -21
 6329 06e8 15       		.uleb128 0x15
 6330 06e9 7800     		.ascii	"x\000"
 6331 06eb 01       		.byte	0x1
 6332 06ec B703     		.2byte	0x3b7
 6333 06ee 73000000 		.4byte	0x73
 6334 06f2 02       		.uleb128 0x2
 6335 06f3 91       		.byte	0x91
 6336 06f4 6C       		.sleb128 -20
 6337 06f5 00       		.byte	0
 6338 06f6 00       		.byte	0
 6339 06f7 1B       		.uleb128 0x1b
 6340 06f8 14000000 		.4byte	.LASF104
 6341 06fc 01       		.byte	0x1
 6342 06fd D003     		.2byte	0x3d0
 6343 06ff 00000000 		.4byte	.LFB94
 6344 0703 40000000 		.4byte	.LFE94-.LFB94
 6345 0707 01       		.uleb128 0x1
 6346 0708 9C       		.byte	0x9c
 6347 0709 1B       		.uleb128 0x1b
 6348 070a C6030000 		.4byte	.LASF105
 6349 070e 01       		.byte	0x1
 6350 070f DF03     		.2byte	0x3df
 6351 0711 00000000 		.4byte	.LFB95
 6352 0715 40000000 		.4byte	.LFE95-.LFB95
 6353 0719 01       		.uleb128 0x1
 6354 071a 9C       		.byte	0x9c
 6355 071b 19       		.uleb128 0x19
 6356 071c C4040000 		.4byte	.LASF106
 6357 0720 01       		.byte	0x1
 6358 0721 EF03     		.2byte	0x3ef
 6359 0723 00000000 		.4byte	.LFB96
 6360 0727 30020000 		.4byte	.LFE96-.LFB96
 6361 072b 01       		.uleb128 0x1
 6362 072c 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 135


 6363 072d 8C070000 		.4byte	0x78c
 6364 0731 14       		.uleb128 0x14
 6365 0732 8A070000 		.4byte	.LASF107
 6366 0736 01       		.byte	0x1
 6367 0737 FD03     		.2byte	0x3fd
 6368 0739 DB000000 		.4byte	0xdb
 6369 073d 02       		.uleb128 0x2
 6370 073e 91       		.byte	0x91
 6371 073f 5E       		.sleb128 -34
 6372 0740 14       		.uleb128 0x14
 6373 0741 48010000 		.4byte	.LASF108
 6374 0745 01       		.byte	0x1
 6375 0746 FE03     		.2byte	0x3fe
 6376 0748 DB000000 		.4byte	0xdb
 6377 074c 02       		.uleb128 0x2
 6378 074d 91       		.byte	0x91
 6379 074e 5C       		.sleb128 -36
 6380 074f 14       		.uleb128 0x14
 6381 0750 C2060000 		.4byte	.LASF109
 6382 0754 01       		.byte	0x1
 6383 0755 FF03     		.2byte	0x3ff
 6384 0757 EE000000 		.4byte	0xee
 6385 075b 02       		.uleb128 0x2
 6386 075c 91       		.byte	0x91
 6387 075d 68       		.sleb128 -24
 6388 075e 14       		.uleb128 0x14
 6389 075f D6080000 		.4byte	.LASF110
 6390 0763 01       		.byte	0x1
 6391 0764 0004     		.2byte	0x400
 6392 0766 EE000000 		.4byte	0xee
 6393 076a 02       		.uleb128 0x2
 6394 076b 91       		.byte	0x91
 6395 076c 60       		.sleb128 -32
 6396 076d 14       		.uleb128 0x14
 6397 076e 65040000 		.4byte	.LASF111
 6398 0772 01       		.byte	0x1
 6399 0773 0904     		.2byte	0x409
 6400 0775 73000000 		.4byte	0x73
 6401 0779 02       		.uleb128 0x2
 6402 077a 91       		.byte	0x91
 6403 077b 58       		.sleb128 -40
 6404 077c 14       		.uleb128 0x14
 6405 077d A5060000 		.4byte	.LASF112
 6406 0781 01       		.byte	0x1
 6407 0782 0A04     		.2byte	0x40a
 6408 0784 73000000 		.4byte	0x73
 6409 0788 02       		.uleb128 0x2
 6410 0789 91       		.byte	0x91
 6411 078a 54       		.sleb128 -44
 6412 078b 00       		.byte	0
 6413 078c 1C       		.uleb128 0x1c
 6414 078d FC060000 		.4byte	.LASF113
 6415 0791 01       		.byte	0x1
 6416 0792 1804     		.2byte	0x418
 6417 0794 00000000 		.4byte	.LFB97
 6418 0798 0C000000 		.4byte	.LFE97-.LFB97
 6419 079c 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 136


 6420 079d 9C       		.byte	0x9c
 6421 079e 19       		.uleb128 0x19
 6422 079f BC010000 		.4byte	.LASF114
 6423 07a3 01       		.byte	0x1
 6424 07a4 1E04     		.2byte	0x41e
 6425 07a6 00000000 		.4byte	.LFB98
 6426 07aa 4C010000 		.4byte	.LFE98-.LFB98
 6427 07ae 01       		.uleb128 0x1
 6428 07af 9C       		.byte	0x9c
 6429 07b0 E0070000 		.4byte	0x7e0
 6430 07b4 15       		.uleb128 0x15
 6431 07b5 6E6C00   		.ascii	"nl\000"
 6432 07b8 01       		.byte	0x1
 6433 07b9 2204     		.2byte	0x422
 6434 07bb AB000000 		.4byte	0xab
 6435 07bf 02       		.uleb128 0x2
 6436 07c0 91       		.byte	0x91
 6437 07c1 67       		.sleb128 -25
 6438 07c2 15       		.uleb128 0x15
 6439 07c3 6E7200   		.ascii	"nr\000"
 6440 07c6 01       		.byte	0x1
 6441 07c7 2304     		.2byte	0x423
 6442 07c9 AB000000 		.4byte	0xab
 6443 07cd 02       		.uleb128 0x2
 6444 07ce 91       		.byte	0x91
 6445 07cf 66       		.sleb128 -26
 6446 07d0 15       		.uleb128 0x15
 6447 07d1 6D696400 		.ascii	"mid\000"
 6448 07d5 01       		.byte	0x1
 6449 07d6 2404     		.2byte	0x424
 6450 07d8 AB000000 		.4byte	0xab
 6451 07dc 02       		.uleb128 0x2
 6452 07dd 91       		.byte	0x91
 6453 07de 65       		.sleb128 -27
 6454 07df 00       		.byte	0
 6455 07e0 1C       		.uleb128 0x1c
 6456 07e1 72010000 		.4byte	.LASF115
 6457 07e5 01       		.byte	0x1
 6458 07e6 3E04     		.2byte	0x43e
 6459 07e8 00000000 		.4byte	.LFB99
 6460 07ec 0C000000 		.4byte	.LFE99-.LFB99
 6461 07f0 01       		.uleb128 0x1
 6462 07f1 9C       		.byte	0x9c
 6463 07f2 19       		.uleb128 0x19
 6464 07f3 B5090000 		.4byte	.LASF116
 6465 07f7 01       		.byte	0x1
 6466 07f8 4304     		.2byte	0x443
 6467 07fa 00000000 		.4byte	.LFB100
 6468 07fe C0000000 		.4byte	.LFE100-.LFB100
 6469 0802 01       		.uleb128 0x1
 6470 0803 9C       		.byte	0x9c
 6471 0804 40080000 		.4byte	0x840
 6472 0808 12       		.uleb128 0x12
 6473 0809 0E000000 		.4byte	.LBB12
 6474 080d 8E000000 		.4byte	.LBE12-.LBB12
 6475 0811 14       		.uleb128 0x14
 6476 0812 78030000 		.4byte	.LASF117
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 137


 6477 0816 01       		.byte	0x1
 6478 0817 4C04     		.2byte	0x44c
 6479 0819 E7000000 		.4byte	0xe7
 6480 081d 02       		.uleb128 0x2
 6481 081e 91       		.byte	0x91
 6482 081f 74       		.sleb128 -12
 6483 0820 14       		.uleb128 0x14
 6484 0821 F7010000 		.4byte	.LASF118
 6485 0825 01       		.byte	0x1
 6486 0826 4D04     		.2byte	0x44d
 6487 0828 DB000000 		.4byte	0xdb
 6488 082c 02       		.uleb128 0x2
 6489 082d 91       		.byte	0x91
 6490 082e 72       		.sleb128 -14
 6491 082f 14       		.uleb128 0x14
 6492 0830 EE040000 		.4byte	.LASF119
 6493 0834 01       		.byte	0x1
 6494 0835 5204     		.2byte	0x452
 6495 0837 28040000 		.4byte	0x428
 6496 083b 02       		.uleb128 0x2
 6497 083c 91       		.byte	0x91
 6498 083d 60       		.sleb128 -32
 6499 083e 00       		.byte	0
 6500 083f 00       		.byte	0
 6501 0840 19       		.uleb128 0x19
 6502 0841 F7070000 		.4byte	.LASF120
 6503 0845 01       		.byte	0x1
 6504 0846 5904     		.2byte	0x459
 6505 0848 00000000 		.4byte	.LFB101
 6506 084c B8000000 		.4byte	.LFE101-.LFB101
 6507 0850 01       		.uleb128 0x1
 6508 0851 9C       		.byte	0x9c
 6509 0852 70080000 		.4byte	0x870
 6510 0856 12       		.uleb128 0x12
 6511 0857 0E000000 		.4byte	.LBB13
 6512 085b 86000000 		.4byte	.LBE13-.LBB13
 6513 085f 14       		.uleb128 0x14
 6514 0860 10060000 		.4byte	.LASF121
 6515 0864 01       		.byte	0x1
 6516 0865 5D04     		.2byte	0x45d
 6517 0867 28040000 		.4byte	0x428
 6518 086b 02       		.uleb128 0x2
 6519 086c 91       		.byte	0x91
 6520 086d 68       		.sleb128 -24
 6521 086e 00       		.byte	0
 6522 086f 00       		.byte	0
 6523 0870 17       		.uleb128 0x17
 6524 0871 BF090000 		.4byte	.LASF122
 6525 0875 01       		.byte	0x1
 6526 0876 6E04     		.2byte	0x46e
 6527 0878 00000000 		.4byte	.LFB102
 6528 087c 4A000000 		.4byte	.LFE102-.LFB102
 6529 0880 01       		.uleb128 0x1
 6530 0881 9C       		.byte	0x9c
 6531 0882 96080000 		.4byte	0x896
 6532 0886 1A       		.uleb128 0x1a
 6533 0887 23010000 		.4byte	.LASF123
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 138


 6534 088b 01       		.byte	0x1
 6535 088c 6E04     		.2byte	0x46e
 6536 088e 96080000 		.4byte	0x896
 6537 0892 02       		.uleb128 0x2
 6538 0893 91       		.byte	0x91
 6539 0894 6C       		.sleb128 -20
 6540 0895 00       		.byte	0
 6541 0896 05       		.uleb128 0x5
 6542 0897 04       		.byte	0x4
 6543 0898 AB000000 		.4byte	0xab
 6544 089c 17       		.uleb128 0x17
 6545 089d F2030000 		.4byte	.LASF124
 6546 08a1 01       		.byte	0x1
 6547 08a2 7904     		.2byte	0x479
 6548 08a4 00000000 		.4byte	.LFB103
 6549 08a8 68000000 		.4byte	.LFE103-.LFB103
 6550 08ac 01       		.uleb128 0x1
 6551 08ad 9C       		.byte	0x9c
 6552 08ae D9080000 		.4byte	0x8d9
 6553 08b2 18       		.uleb128 0x18
 6554 08b3 7300     		.ascii	"s\000"
 6555 08b5 01       		.byte	0x1
 6556 08b6 7904     		.2byte	0x479
 6557 08b8 88000000 		.4byte	0x88
 6558 08bc 02       		.uleb128 0x2
 6559 08bd 91       		.byte	0x91
 6560 08be 6C       		.sleb128 -20
 6561 08bf 12       		.uleb128 0x12
 6562 08c0 10000000 		.4byte	.LBB14
 6563 08c4 48000000 		.4byte	.LBE14-.LBB14
 6564 08c8 15       		.uleb128 0x15
 6565 08c9 636E7400 		.ascii	"cnt\000"
 6566 08cd 01       		.byte	0x1
 6567 08ce 8004     		.2byte	0x480
 6568 08d0 C3000000 		.4byte	0xc3
 6569 08d4 02       		.uleb128 0x2
 6570 08d5 91       		.byte	0x91
 6571 08d6 74       		.sleb128 -12
 6572 08d7 00       		.byte	0
 6573 08d8 00       		.byte	0
 6574 08d9 17       		.uleb128 0x17
 6575 08da BC080000 		.4byte	.LASF125
 6576 08de 01       		.byte	0x1
 6577 08df 8F04     		.2byte	0x48f
 6578 08e1 00000000 		.4byte	.LFB104
 6579 08e5 50000000 		.4byte	.LFE104-.LFB104
 6580 08e9 01       		.uleb128 0x1
 6581 08ea 9C       		.byte	0x9c
 6582 08eb 16090000 		.4byte	0x916
 6583 08ef 18       		.uleb128 0x18
 6584 08f0 6300     		.ascii	"c\000"
 6585 08f2 01       		.byte	0x1
 6586 08f3 8F04     		.2byte	0x48f
 6587 08f5 8E000000 		.4byte	0x8e
 6588 08f9 02       		.uleb128 0x2
 6589 08fa 91       		.byte	0x91
 6590 08fb 6F       		.sleb128 -17
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 139


 6591 08fc 12       		.uleb128 0x12
 6592 08fd 12000000 		.4byte	.LBB15
 6593 0901 2E000000 		.4byte	.LBE15-.LBB15
 6594 0905 15       		.uleb128 0x15
 6595 0906 636E7400 		.ascii	"cnt\000"
 6596 090a 01       		.byte	0x1
 6597 090b 9304     		.2byte	0x493
 6598 090d C3000000 		.4byte	0xc3
 6599 0911 02       		.uleb128 0x2
 6600 0912 91       		.byte	0x91
 6601 0913 74       		.sleb128 -12
 6602 0914 00       		.byte	0
 6603 0915 00       		.byte	0
 6604 0916 1C       		.uleb128 0x1c
 6605 0917 3A040000 		.4byte	.LASF126
 6606 091b 01       		.byte	0x1
 6607 091c A004     		.2byte	0x4a0
 6608 091e 00000000 		.4byte	.LFB105
 6609 0922 0C000000 		.4byte	.LFE105-.LFB105
 6610 0926 01       		.uleb128 0x1
 6611 0927 9C       		.byte	0x9c
 6612 0928 1D       		.uleb128 0x1d
 6613 0929 DE000000 		.4byte	.LASF127
 6614 092d 06       		.byte	0x6
 6615 092e 9606     		.2byte	0x696
 6616 0930 34090000 		.4byte	0x934
 6617 0934 1E       		.uleb128 0x1e
 6618 0935 95000000 		.4byte	0x95
 6619 0939 1F       		.uleb128 0x1f
 6620 093a 747300   		.ascii	"ts\000"
 6621 093d 05       		.byte	0x5
 6622 093e 10       		.byte	0x10
 6623 093f AB000000 		.4byte	0xab
 6624 0943 05       		.uleb128 0x5
 6625 0944 03       		.byte	0x3
 6626 0945 00000000 		.4byte	ts
 6627 0949 20       		.uleb128 0x20
 6628 094a 2E020000 		.4byte	.LASF128
 6629 094e 05       		.byte	0x5
 6630 094f 11       		.byte	0x11
 6631 0950 B7000000 		.4byte	0xb7
 6632 0954 05       		.uleb128 0x5
 6633 0955 03       		.byte	0x3
 6634 0956 00000000 		.4byte	ts_enc
 6635 095a 20       		.uleb128 0x20
 6636 095b FE000000 		.4byte	.LASF129
 6637 095f 05       		.byte	0x5
 6638 0960 12       		.byte	0x12
 6639 0961 B7000000 		.4byte	0xb7
 6640 0965 05       		.uleb128 0x5
 6641 0966 03       		.byte	0x3
 6642 0967 00000000 		.4byte	ts_update
 6643 096b 20       		.uleb128 0x20
 6644 096c 30000000 		.4byte	.LASF130
 6645 0970 05       		.byte	0x5
 6646 0971 13       		.byte	0x13
 6647 0972 B7000000 		.4byte	0xb7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 140


 6648 0976 05       		.uleb128 0x5
 6649 0977 03       		.byte	0x3
 6650 0978 00000000 		.4byte	ts_speed
 6651 097c 20       		.uleb128 0x20
 6652 097d 2F040000 		.4byte	.LASF131
 6653 0981 05       		.byte	0x5
 6654 0982 14       		.byte	0x14
 6655 0983 B7000000 		.4byte	0xb7
 6656 0987 05       		.uleb128 0x5
 6657 0988 03       		.byte	0x3
 6658 0989 00000000 		.4byte	ts_display
 6659 098d 20       		.uleb128 0x20
 6660 098e 7D010000 		.4byte	.LASF132
 6661 0992 05       		.byte	0x5
 6662 0993 16       		.byte	0x16
 6663 0994 AB000000 		.4byte	0xab
 6664 0998 05       		.uleb128 0x5
 6665 0999 03       		.byte	0x3
 6666 099a 00000000 		.4byte	flag_ts_enc
 6667 099e 20       		.uleb128 0x20
 6668 099f 9F070000 		.4byte	.LASF133
 6669 09a3 05       		.byte	0x5
 6670 09a4 17       		.byte	0x17
 6671 09a5 AB000000 		.4byte	0xab
 6672 09a9 05       		.uleb128 0x5
 6673 09aa 03       		.byte	0x3
 6674 09ab 00000000 		.4byte	flag_ts_update
 6675 09af 20       		.uleb128 0x20
 6676 09b0 6F040000 		.4byte	.LASF134
 6677 09b4 05       		.byte	0x5
 6678 09b5 18       		.byte	0x18
 6679 09b6 AB000000 		.4byte	0xab
 6680 09ba 05       		.uleb128 0x5
 6681 09bb 03       		.byte	0x3
 6682 09bc 00000000 		.4byte	flag_ts_speed
 6683 09c0 20       		.uleb128 0x20
 6684 09c1 11070000 		.4byte	.LASF135
 6685 09c5 05       		.byte	0x5
 6686 09c6 19       		.byte	0x19
 6687 09c7 AB000000 		.4byte	0xab
 6688 09cb 05       		.uleb128 0x5
 6689 09cc 03       		.byte	0x3
 6690 09cd 00000000 		.4byte	flag_ts_display
 6691 09d1 20       		.uleb128 0x20
 6692 09d2 35020000 		.4byte	.LASF136
 6693 09d6 05       		.byte	0x5
 6694 09d7 1C       		.byte	0x1c
 6695 09d8 AB000000 		.4byte	0xab
 6696 09dc 05       		.uleb128 0x5
 6697 09dd 03       		.byte	0x3
 6698 09de 00000000 		.4byte	flag_rx
 6699 09e2 20       		.uleb128 0x20
 6700 09e3 C0000000 		.4byte	.LASF137
 6701 09e7 05       		.byte	0x5
 6702 09e8 1D       		.byte	0x1d
 6703 09e9 AB000000 		.4byte	0xab
 6704 09ed 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 141


 6705 09ee 03       		.byte	0x3
 6706 09ef 00000000 		.4byte	flag_packet
 6707 09f3 20       		.uleb128 0x20
 6708 09f4 AD010000 		.4byte	.LASF138
 6709 09f8 05       		.byte	0x5
 6710 09f9 1E       		.byte	0x1e
 6711 09fa AB000000 		.4byte	0xab
 6712 09fe 05       		.uleb128 0x5
 6713 09ff 03       		.byte	0x3
 6714 0a00 00000000 		.4byte	flag_KB_string
 6715 0a04 20       		.uleb128 0x20
 6716 0a05 17020000 		.4byte	.LASF139
 6717 0a09 05       		.byte	0x5
 6718 0a0a 20       		.byte	0x20
 6719 0a0b AB000000 		.4byte	0xab
 6720 0a0f 05       		.uleb128 0x5
 6721 0a10 03       		.byte	0x3
 6722 0a11 00000000 		.4byte	dataready_flag
 6723 0a15 20       		.uleb128 0x20
 6724 0a16 B9050000 		.4byte	.LASF140
 6725 0a1a 05       		.byte	0x5
 6726 0a1b 22       		.byte	0x22
 6727 0a1c AB000000 		.4byte	0xab
 6728 0a20 05       		.uleb128 0x5
 6729 0a21 03       		.byte	0x3
 6730 0a22 00000000 		.4byte	flag_rf_transmission_active
 6731 0a26 20       		.uleb128 0x20
 6732 0a27 94040000 		.4byte	.LASF141
 6733 0a2b 05       		.byte	0x5
 6734 0a2c 23       		.byte	0x23
 6735 0a2d AB000000 		.4byte	0xab
 6736 0a31 05       		.uleb128 0x5
 6737 0a32 03       		.byte	0x3
 6738 0a33 00000000 		.4byte	flag_print_rf
 6739 0a37 20       		.uleb128 0x20
 6740 0a38 41030000 		.4byte	.LASF142
 6741 0a3c 05       		.byte	0x5
 6742 0a3d 25       		.byte	0x25
 6743 0a3e AB000000 		.4byte	0xab
 6744 0a42 05       		.uleb128 0x5
 6745 0a43 03       		.byte	0x3
 6746 0a44 00000000 		.4byte	flag_receive_ADC
 6747 0a48 20       		.uleb128 0x20
 6748 0a49 26030000 		.4byte	.LASF143
 6749 0a4d 05       		.byte	0x5
 6750 0a4e 26       		.byte	0x26
 6751 0a4f DB000000 		.4byte	0xdb
 6752 0a53 05       		.uleb128 0x5
 6753 0a54 03       		.byte	0x3
 6754 0a55 00000000 		.4byte	adc_result
 6755 0a59 20       		.uleb128 0x20
 6756 0a5a 62000000 		.4byte	.LASF144
 6757 0a5e 05       		.byte	0x5
 6758 0a5f 28       		.byte	0x28
 6759 0a60 AB000000 		.4byte	0xab
 6760 0a64 05       		.uleb128 0x5
 6761 0a65 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 142


 6762 0a66 00000000 		.4byte	direction
 6763 0a6a 20       		.uleb128 0x20
 6764 0a6b 61060000 		.4byte	.LASF145
 6765 0a6f 05       		.byte	0x5
 6766 0a70 2B       		.byte	0x2b
 6767 0a71 AB000000 		.4byte	0xab
 6768 0a75 05       		.uleb128 0x5
 6769 0a76 03       		.byte	0x3
 6770 0a77 00000000 		.4byte	BIN_ENABLED
 6771 0a7b 20       		.uleb128 0x20
 6772 0a7c B1080000 		.4byte	.LASF146
 6773 0a80 05       		.byte	0x5
 6774 0a81 2D       		.byte	0x2d
 6775 0a82 AB000000 		.4byte	0xab
 6776 0a86 05       		.uleb128 0x5
 6777 0a87 03       		.byte	0x3
 6778 0a88 00000000 		.4byte	BT_ENABLED
 6779 0a8c 20       		.uleb128 0x20
 6780 0a8d 65020000 		.4byte	.LASF147
 6781 0a91 05       		.byte	0x5
 6782 0a92 32       		.byte	0x32
 6783 0a93 AB000000 		.4byte	0xab
 6784 0a97 05       		.uleb128 0x5
 6785 0a98 03       		.byte	0x3
 6786 0a99 00000000 		.4byte	flag_calc_wheelspeed
 6787 0a9d 20       		.uleb128 0x20
 6788 0a9e 93020000 		.4byte	.LASF148
 6789 0aa2 05       		.byte	0x5
 6790 0aa3 33       		.byte	0x33
 6791 0aa4 DB000000 		.4byte	0xdb
 6792 0aa8 05       		.uleb128 0x5
 6793 0aa9 03       		.byte	0x3
 6794 0aaa 00000000 		.4byte	quad_count1
 6795 0aae 20       		.uleb128 0x20
 6796 0aaf 9F020000 		.4byte	.LASF149
 6797 0ab3 05       		.byte	0x5
 6798 0ab4 34       		.byte	0x34
 6799 0ab5 DB000000 		.4byte	0xdb
 6800 0ab9 05       		.uleb128 0x5
 6801 0aba 03       		.byte	0x3
 6802 0abb 00000000 		.4byte	quad_count2
 6803 0abf 20       		.uleb128 0x20
 6804 0ac0 31060000 		.4byte	.LASF150
 6805 0ac4 05       		.byte	0x5
 6806 0ac5 35       		.byte	0x35
 6807 0ac6 DB000000 		.4byte	0xdb
 6808 0aca 05       		.uleb128 0x5
 6809 0acb 03       		.byte	0x3
 6810 0acc 00000000 		.4byte	last_quad_count1
 6811 0ad0 20       		.uleb128 0x20
 6812 0ad1 42060000 		.4byte	.LASF151
 6813 0ad5 05       		.byte	0x5
 6814 0ad6 36       		.byte	0x36
 6815 0ad7 DB000000 		.4byte	0xdb
 6816 0adb 05       		.uleb128 0x5
 6817 0adc 03       		.byte	0x3
 6818 0add 00000000 		.4byte	last_quad_count2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 143


 6819 0ae1 20       		.uleb128 0x20
 6820 0ae2 47090000 		.4byte	.LASF152
 6821 0ae6 05       		.byte	0x5
 6822 0ae7 37       		.byte	0x37
 6823 0ae8 DB000000 		.4byte	0xdb
 6824 0aec 05       		.uleb128 0x5
 6825 0aed 03       		.byte	0x3
 6826 0aee 00000000 		.4byte	quad_diff1
 6827 0af2 20       		.uleb128 0x20
 6828 0af3 52090000 		.4byte	.LASF153
 6829 0af7 05       		.byte	0x5
 6830 0af8 38       		.byte	0x38
 6831 0af9 DB000000 		.4byte	0xdb
 6832 0afd 05       		.uleb128 0x5
 6833 0afe 03       		.byte	0x3
 6834 0aff 00000000 		.4byte	quad_diff2
 6835 0b03 20       		.uleb128 0x20
 6836 0b04 A4010000 		.4byte	.LASF154
 6837 0b08 05       		.byte	0x5
 6838 0b09 39       		.byte	0x39
 6839 0b0a AB000000 		.4byte	0xab
 6840 0b0e 05       		.uleb128 0x5
 6841 0b0f 03       		.byte	0x3
 6842 0b10 00000000 		.4byte	deadzone
 6843 0b14 20       		.uleb128 0x20
 6844 0b15 0E090000 		.4byte	.LASF155
 6845 0b19 05       		.byte	0x5
 6846 0b1a 3C       		.byte	0x3c
 6847 0b1b DB000000 		.4byte	0xdb
 6848 0b1f 05       		.uleb128 0x5
 6849 0b20 03       		.byte	0x3
 6850 0b21 00000000 		.4byte	start_turn_count
 6851 0b25 20       		.uleb128 0x20
 6852 0b26 69080000 		.4byte	.LASF156
 6853 0b2a 05       		.byte	0x5
 6854 0b2b 3F       		.byte	0x3f
 6855 0b2c DB000000 		.4byte	0xdb
 6856 0b30 05       		.uleb128 0x5
 6857 0b31 03       		.byte	0x3
 6858 0b32 00000000 		.4byte	left_duty_cycle
 6859 0b36 20       		.uleb128 0x20
 6860 0b37 0B030000 		.4byte	.LASF157
 6861 0b3b 05       		.byte	0x5
 6862 0b3c 40       		.byte	0x40
 6863 0b3d DB000000 		.4byte	0xdb
 6864 0b41 05       		.uleb128 0x5
 6865 0b42 03       		.byte	0x3
 6866 0b43 00000000 		.4byte	right_duty_cycle
 6867 0b47 20       		.uleb128 0x20
 6868 0b48 C4070000 		.4byte	.LASF158
 6869 0b4c 05       		.byte	0x5
 6870 0b4d 43       		.byte	0x43
 6871 0b4e DB000000 		.4byte	0xdb
 6872 0b52 05       		.uleb128 0x5
 6873 0b53 03       		.byte	0x3
 6874 0b54 00000000 		.4byte	leftSpeedLimit
 6875 0b58 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 144


 6876 0b59 AB020000 		.4byte	.LASF159
 6877 0b5d 05       		.byte	0x5
 6878 0b5e 44       		.byte	0x44
 6879 0b5f DB000000 		.4byte	0xdb
 6880 0b63 05       		.uleb128 0x5
 6881 0b64 03       		.byte	0x3
 6882 0b65 00000000 		.4byte	rightSpeedLimit
 6883 0b69 20       		.uleb128 0x20
 6884 0b6a EB000000 		.4byte	.LASF160
 6885 0b6e 05       		.byte	0x5
 6886 0b6f 47       		.byte	0x47
 6887 0b70 DB000000 		.4byte	0xdb
 6888 0b74 05       		.uleb128 0x5
 6889 0b75 03       		.byte	0x3
 6890 0b76 00000000 		.4byte	target_distance_cm
 6891 0b7a 20       		.uleb128 0x20
 6892 0b7b 86080000 		.4byte	.LASF161
 6893 0b7f 05       		.byte	0x5
 6894 0b80 49       		.byte	0x49
 6895 0b81 DB000000 		.4byte	0xdb
 6896 0b85 05       		.uleb128 0x5
 6897 0b86 03       		.byte	0x3
 6898 0b87 00000000 		.4byte	accum_dist
 6899 0b8b 20       		.uleb128 0x20
 6900 0b8c A4050000 		.4byte	.LASF162
 6901 0b90 05       		.byte	0x5
 6902 0b91 4A       		.byte	0x4a
 6903 0b92 DB000000 		.4byte	0xdb
 6904 0b96 05       		.uleb128 0x5
 6905 0b97 03       		.byte	0x3
 6906 0b98 00000000 		.4byte	target_distance_quad
 6907 0b9c 20       		.uleb128 0x20
 6908 0b9d E3080000 		.4byte	.LASF163
 6909 0ba1 05       		.byte	0x5
 6910 0ba2 4B       		.byte	0x4b
 6911 0ba3 AB000000 		.4byte	0xab
 6912 0ba7 05       		.uleb128 0x5
 6913 0ba8 03       		.byte	0x3
 6914 0ba9 00000000 		.4byte	reached_target
 6915 0bad 20       		.uleb128 0x20
 6916 0bae 25090000 		.4byte	.LASF164
 6917 0bb2 05       		.byte	0x5
 6918 0bb3 4C       		.byte	0x4c
 6919 0bb4 AB000000 		.4byte	0xab
 6920 0bb8 05       		.uleb128 0x5
 6921 0bb9 03       		.byte	0x3
 6922 0bba 00000000 		.4byte	overshot_target
 6923 0bbe 20       		.uleb128 0x20
 6924 0bbf E5010000 		.4byte	.LASF165
 6925 0bc3 05       		.byte	0x5
 6926 0bc4 4D       		.byte	0x4d
 6927 0bc5 E7000000 		.4byte	0xe7
 6928 0bc9 05       		.uleb128 0x5
 6929 0bca 03       		.byte	0x3
 6930 0bcb 00000000 		.4byte	quad_per_cm
 6931 0bcf 20       		.uleb128 0x20
 6932 0bd0 24080000 		.4byte	.LASF166
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 145


 6933 0bd4 05       		.byte	0x5
 6934 0bd5 50       		.byte	0x50
 6935 0bd6 AB000000 		.4byte	0xab
 6936 0bda 05       		.uleb128 0x5
 6937 0bdb 03       		.byte	0x3
 6938 0bdc 00000000 		.4byte	initial_pos_valid
 6939 0be0 20       		.uleb128 0x20
 6940 0be1 F4050000 		.4byte	.LASF167
 6941 0be5 05       		.byte	0x5
 6942 0be6 51       		.byte	0x51
 6943 0be7 DB000000 		.4byte	0xdb
 6944 0beb 05       		.uleb128 0x5
 6945 0bec 03       		.byte	0x3
 6946 0bed 00000000 		.4byte	initial_x_pos
 6947 0bf1 20       		.uleb128 0x20
 6948 0bf2 47000000 		.4byte	.LASF168
 6949 0bf6 05       		.byte	0x5
 6950 0bf7 52       		.byte	0x52
 6951 0bf8 DB000000 		.4byte	0xdb
 6952 0bfc 05       		.uleb128 0x5
 6953 0bfd 03       		.byte	0x3
 6954 0bfe 00000000 		.4byte	initial_y_pos
 6955 0c02 20       		.uleb128 0x20
 6956 0c03 DC040000 		.4byte	.LASF169
 6957 0c07 05       		.byte	0x5
 6958 0c08 55       		.byte	0x55
 6959 0c09 AB000000 		.4byte	0xab
 6960 0c0d 05       		.uleb128 0x5
 6961 0c0e 03       		.byte	0x3
 6962 0c0f 00000000 		.4byte	brakeFlag
 6963 0c13 20       		.uleb128 0x20
 6964 0c14 1C060000 		.4byte	.LASF170
 6965 0c18 05       		.byte	0x5
 6966 0c19 56       		.byte	0x56
 6967 0c1a AB000000 		.4byte	0xab
 6968 0c1e 05       		.uleb128 0x5
 6969 0c1f 03       		.byte	0x3
 6970 0c20 00000000 		.4byte	portOpen
 6971 0c24 07       		.uleb128 0x7
 6972 0c25 AB000000 		.4byte	0xab
 6973 0c29 340C0000 		.4byte	0xc34
 6974 0c2d 08       		.uleb128 0x8
 6975 0c2e 81000000 		.4byte	0x81
 6976 0c32 04       		.byte	0x4
 6977 0c33 00       		.byte	0
 6978 0c34 20       		.uleb128 0x20
 6979 0c35 65010000 		.4byte	.LASF171
 6980 0c39 05       		.byte	0x5
 6981 0c3a 59       		.byte	0x59
 6982 0c3b 240C0000 		.4byte	0xc24
 6983 0c3f 05       		.uleb128 0x5
 6984 0c40 03       		.byte	0x3
 6985 0c41 00000000 		.4byte	frontSensors
 6986 0c45 20       		.uleb128 0x20
 6987 0c46 87020000 		.4byte	.LASF172
 6988 0c4a 05       		.byte	0x5
 6989 0c4b 5D       		.byte	0x5d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 146


 6990 0c4c DB000000 		.4byte	0xdb
 6991 0c50 05       		.uleb128 0x5
 6992 0c51 03       		.byte	0x3
 6993 0c52 00000000 		.4byte	prevVoltage
 6994 0c56 20       		.uleb128 0x20
 6995 0c57 47080000 		.4byte	.LASF173
 6996 0c5b 05       		.byte	0x5
 6997 0c5c 5E       		.byte	0x5e
 6998 0c5d DB000000 		.4byte	0xdb
 6999 0c61 05       		.uleb128 0x5
 7000 0c62 03       		.byte	0x3
 7001 0c63 00000000 		.4byte	prevVoltage2
 7002 0c67 07       		.uleb128 0x7
 7003 0c68 8E000000 		.4byte	0x8e
 7004 0c6c 770C0000 		.4byte	0xc77
 7005 0c70 08       		.uleb128 0x8
 7006 0c71 81000000 		.4byte	0x81
 7007 0c75 3F       		.byte	0x3f
 7008 0c76 00       		.byte	0
 7009 0c77 20       		.uleb128 0x20
 7010 0c78 AE070000 		.4byte	.LASF174
 7011 0c7c 05       		.byte	0x5
 7012 0c7d 64       		.byte	0x64
 7013 0c7e 670C0000 		.4byte	0xc67
 7014 0c82 05       		.uleb128 0x5
 7015 0c83 03       		.byte	0x3
 7016 0c84 00000000 		.4byte	displaystring
 7017 0c88 20       		.uleb128 0x20
 7018 0c89 60020000 		.4byte	.LASF175
 7019 0c8d 05       		.byte	0x5
 7020 0c8e 65       		.byte	0x65
 7021 0c8f 670C0000 		.4byte	0xc67
 7022 0c93 05       		.uleb128 0x5
 7023 0c94 03       		.byte	0x3
 7024 0c95 00000000 		.4byte	line
 7025 0c99 20       		.uleb128 0x20
 7026 0c9a 93000000 		.4byte	.LASF176
 7027 0c9e 05       		.byte	0x5
 7028 0c9f 65       		.byte	0x65
 7029 0ca0 670C0000 		.4byte	0xc67
 7030 0ca4 05       		.uleb128 0x5
 7031 0ca5 03       		.byte	0x3
 7032 0ca6 00000000 		.4byte	entry
 7033 0caa 07       		.uleb128 0x7
 7034 0cab AB000000 		.4byte	0xab
 7035 0caf BA0C0000 		.4byte	0xcba
 7036 0cb3 08       		.uleb128 0x8
 7037 0cb4 81000000 		.4byte	0x81
 7038 0cb8 3F       		.byte	0x3f
 7039 0cb9 00       		.byte	0
 7040 0cba 20       		.uleb128 0x20
 7041 0cbb 0A080000 		.4byte	.LASF177
 7042 0cbf 05       		.byte	0x5
 7043 0cc0 66       		.byte	0x66
 7044 0cc1 AA0C0000 		.4byte	0xcaa
 7045 0cc5 05       		.uleb128 0x5
 7046 0cc6 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 147


 7047 0cc7 00000000 		.4byte	usbBuffer
 7048 0ccb 20       		.uleb128 0x20
 7049 0ccc 89010000 		.4byte	.LASF178
 7050 0cd0 05       		.byte	0x5
 7051 0cd1 7B       		.byte	0x7b
 7052 0cd2 86010000 		.4byte	0x186
 7053 0cd6 05       		.uleb128 0x5
 7054 0cd7 03       		.byte	0x3
 7055 0cd8 00000000 		.4byte	buffer_state
 7056 0cdc 20       		.uleb128 0x20
 7057 0cdd A2040000 		.4byte	.LASF179
 7058 0ce1 05       		.byte	0x5
 7059 0ce2 7C       		.byte	0x7c
 7060 0ce3 86010000 		.4byte	0x186
 7061 0ce7 05       		.uleb128 0x5
 7062 0ce8 03       		.byte	0x3
 7063 0ce9 00000000 		.4byte	system_state
 7064 0ced 20       		.uleb128 0x20
 7065 0cee F9040000 		.4byte	.LASF180
 7066 0cf2 05       		.byte	0x5
 7067 0cf3 7E       		.byte	0x7e
 7068 0cf4 0C010000 		.4byte	0x10c
 7069 0cf8 05       		.uleb128 0x5
 7070 0cf9 03       		.byte	0x3
 7071 0cfa 00000000 		.4byte	prev_movement_state
 7072 0cfe 20       		.uleb128 0x20
 7073 0cff 9A080000 		.4byte	.LASF181
 7074 0d03 05       		.byte	0x5
 7075 0d04 7F       		.byte	0x7f
 7076 0d05 0C010000 		.4byte	0x10c
 7077 0d09 05       		.uleb128 0x5
 7078 0d0a 03       		.byte	0x3
 7079 0d0b 00000000 		.4byte	movement_state
 7080 0d0f 20       		.uleb128 0x20
 7081 0d10 D7020000 		.4byte	.LASF182
 7082 0d14 05       		.byte	0x5
 7083 0d15 80       		.byte	0x80
 7084 0d16 49010000 		.4byte	0x149
 7085 0d1a 05       		.uleb128 0x5
 7086 0d1b 03       		.byte	0x3
 7087 0d1c 00000000 		.4byte	track_mode
 7088 0d20 20       		.uleb128 0x20
 7089 0d21 E5060000 		.4byte	.LASF183
 7090 0d25 05       		.byte	0x5
 7091 0d26 82       		.byte	0x82
 7092 0d27 AB000000 		.4byte	0xab
 7093 0d2b 05       		.uleb128 0x5
 7094 0d2c 03       		.byte	0x3
 7095 0d2d 00000000 		.4byte	byteCount
 7096 0d31 07       		.uleb128 0x7
 7097 0d32 8E000000 		.4byte	0x8e
 7098 0d36 410D0000 		.4byte	0xd41
 7099 0d3a 08       		.uleb128 0x8
 7100 0d3b 81000000 		.4byte	0x81
 7101 0d3f 01       		.byte	0x1
 7102 0d40 00       		.byte	0
 7103 0d41 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 148


 7104 0d42 E4070000 		.4byte	.LASF184
 7105 0d46 05       		.byte	0x5
 7106 0d47 83       		.byte	0x83
 7107 0d48 310D0000 		.4byte	0xd31
 7108 0d4c 05       		.uleb128 0x5
 7109 0d4d 03       		.byte	0x3
 7110 0d4e 00000000 		.4byte	packet
 7111 0d52 20       		.uleb128 0x20
 7112 0d53 1F090000 		.4byte	.LASF185
 7113 0d57 05       		.byte	0x5
 7114 0d58 87       		.byte	0x87
 7115 0d59 EE000000 		.4byte	0xee
 7116 0d5d 05       		.uleb128 0x5
 7117 0d5e 03       		.byte	0x3
 7118 0d5f 00000000 		.4byte	speed
 7119 0d63 20       		.uleb128 0x20
 7120 0d64 DA030000 		.4byte	.LASF186
 7121 0d68 01       		.byte	0x1
 7122 0d69 25       		.byte	0x25
 7123 0d6a B7000000 		.4byte	0xb7
 7124 0d6e 05       		.uleb128 0x5
 7125 0d6f 03       		.byte	0x3
 7126 0d70 00000000 		.4byte	instructionCount
 7127 0d74 20       		.uleb128 0x20
 7128 0d75 31030000 		.4byte	.LASF187
 7129 0d79 01       		.byte	0x1
 7130 0d7a 27       		.byte	0x27
 7131 0d7b A0000000 		.4byte	0xa0
 7132 0d7f 05       		.uleb128 0x5
 7133 0d80 03       		.byte	0x3
 7134 0d81 00000000 		.4byte	sensorsDisabled
 7135 0d85 07       		.uleb128 0x7
 7136 0d86 A0000000 		.4byte	0xa0
 7137 0d8a 9B0D0000 		.4byte	0xd9b
 7138 0d8e 08       		.uleb128 0x8
 7139 0d8f 81000000 		.4byte	0x81
 7140 0d93 0E       		.byte	0xe
 7141 0d94 08       		.uleb128 0x8
 7142 0d95 81000000 		.4byte	0x81
 7143 0d99 12       		.byte	0x12
 7144 0d9a 00       		.byte	0
 7145 0d9b 1F       		.uleb128 0x1f
 7146 0d9c 6D617000 		.ascii	"map\000"
 7147 0da0 01       		.byte	0x1
 7148 0da1 30       		.byte	0x30
 7149 0da2 850D0000 		.4byte	0xd85
 7150 0da6 05       		.uleb128 0x5
 7151 0da7 03       		.byte	0x3
 7152 0da8 00000000 		.4byte	map
 7153 0dac 07       		.uleb128 0x7
 7154 0dad A0000000 		.4byte	0xa0
 7155 0db1 C20D0000 		.4byte	0xdc2
 7156 0db5 08       		.uleb128 0x8
 7157 0db6 81000000 		.4byte	0x81
 7158 0dba 05       		.byte	0x5
 7159 0dbb 08       		.uleb128 0x8
 7160 0dbc 81000000 		.4byte	0x81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 149


 7161 0dc0 01       		.byte	0x1
 7162 0dc1 00       		.byte	0
 7163 0dc2 20       		.uleb128 0x20
 7164 0dc3 71070000 		.4byte	.LASF188
 7165 0dc7 01       		.byte	0x1
 7166 0dc8 45       		.byte	0x45
 7167 0dc9 AC0D0000 		.4byte	0xdac
 7168 0dcd 05       		.uleb128 0x5
 7169 0dce 03       		.byte	0x3
 7170 0dcf 00000000 		.4byte	food_list
 7171 0dd3 07       		.uleb128 0x7
 7172 0dd4 A0000000 		.4byte	0xa0
 7173 0dd8 EA0D0000 		.4byte	0xdea
 7174 0ddc 21       		.uleb128 0x21
 7175 0ddd 81000000 		.4byte	0x81
 7176 0de1 1F03     		.2byte	0x31f
 7177 0de3 08       		.uleb128 0x8
 7178 0de4 81000000 		.4byte	0x81
 7179 0de8 02       		.byte	0x2
 7180 0de9 00       		.byte	0
 7181 0dea 20       		.uleb128 0x20
 7182 0deb 6C000000 		.4byte	.LASF189
 7183 0def 01       		.byte	0x1
 7184 0df0 2B       		.byte	0x2b
 7185 0df1 D30D0000 		.4byte	0xdd3
 7186 0df5 05       		.uleb128 0x5
 7187 0df6 03       		.byte	0x3
 7188 0df7 00000000 		.4byte	path
 7189 0dfb 20       		.uleb128 0x20
 7190 0dfc 5D090000 		.4byte	.LASF190
 7191 0e00 01       		.byte	0x1
 7192 0e01 2C       		.byte	0x2c
 7193 0e02 F5000000 		.4byte	0xf5
 7194 0e06 05       		.uleb128 0x5
 7195 0e07 03       		.byte	0x3
 7196 0e08 00000000 		.4byte	start
 7197 0e0c 20       		.uleb128 0x20
 7198 0e0d E8020000 		.4byte	.LASF191
 7199 0e11 01       		.byte	0x1
 7200 0e12 2D       		.byte	0x2d
 7201 0e13 F5000000 		.4byte	0xf5
 7202 0e17 05       		.uleb128 0x5
 7203 0e18 03       		.byte	0x3
 7204 0e19 00000000 		.4byte	destination
 7205 0e1d 20       		.uleb128 0x20
 7206 0e1e B0000000 		.4byte	.LASF192
 7207 0e22 01       		.byte	0x1
 7208 0e23 29       		.byte	0x29
 7209 0e24 A0000000 		.4byte	0xa0
 7210 0e28 05       		.uleb128 0x5
 7211 0e29 03       		.byte	0x3
 7212 0e2a 00000000 		.4byte	robot_direction
 7213 0e2e 20       		.uleb128 0x20
 7214 0e2f 42070000 		.4byte	.LASF193
 7215 0e33 07       		.byte	0x7
 7216 0e34 22       		.byte	0x22
 7217 0e35 A0000000 		.4byte	0xa0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 150


 7218 0e39 05       		.uleb128 0x5
 7219 0e3a 03       		.byte	0x3
 7220 0e3b 00000000 		.4byte	tracked_direction
 7221 0e3f 20       		.uleb128 0x20
 7222 0e40 86030000 		.4byte	.LASF194
 7223 0e44 01       		.byte	0x1
 7224 0e45 47       		.byte	0x47
 7225 0e46 A0000000 		.4byte	0xa0
 7226 0e4a 05       		.uleb128 0x5
 7227 0e4b 03       		.byte	0x3
 7228 0e4c 00000000 		.4byte	food_length
 7229 0e50 07       		.uleb128 0x7
 7230 0e51 8E000000 		.4byte	0x8e
 7231 0e55 610E0000 		.4byte	0xe61
 7232 0e59 21       		.uleb128 0x21
 7233 0e5a 81000000 		.4byte	0x81
 7234 0e5e 1F03     		.2byte	0x31f
 7235 0e60 00       		.byte	0
 7236 0e61 20       		.uleb128 0x20
 7237 0e62 5E070000 		.4byte	.LASF195
 7238 0e66 01       		.byte	0x1
 7239 0e67 24       		.byte	0x24
 7240 0e68 500E0000 		.4byte	0xe50
 7241 0e6c 05       		.uleb128 0x5
 7242 0e6d 03       		.byte	0x3
 7243 0e6e 00000000 		.4byte	instructions
 7244 0e72 20       		.uleb128 0x20
 7245 0e73 BB020000 		.4byte	.LASF196
 7246 0e77 01       		.byte	0x1
 7247 0e78 26       		.byte	0x26
 7248 0e79 B7000000 		.4byte	0xb7
 7249 0e7d 05       		.uleb128 0x5
 7250 0e7e 03       		.byte	0x3
 7251 0e7f 00000000 		.4byte	instructionLength
 7252 0e83 22       		.uleb128 0x22
 7253 0e84 39000000 		.4byte	.LASF197
 7254 0e88 01       		.byte	0x1
 7255 0e89 1C04     		.2byte	0x41c
 7256 0e8b B7000000 		.4byte	0xb7
 7257 0e8f 05       		.uleb128 0x5
 7258 0e90 03       		.byte	0x3
 7259 0e91 00000000 		.4byte	leftTurnCount
 7260 0e95 22       		.uleb128 0x22
 7261 0e96 47040000 		.4byte	.LASF198
 7262 0e9a 01       		.byte	0x1
 7263 0e9b 1D04     		.2byte	0x41d
 7264 0e9d B7000000 		.4byte	0xb7
 7265 0ea1 05       		.uleb128 0x5
 7266 0ea2 03       		.byte	0x3
 7267 0ea3 00000000 		.4byte	rightTurnCount
 7268 0ea7 00       		.byte	0
 7269              		.section	.debug_abbrev,"",%progbits
 7270              	.Ldebug_abbrev0:
 7271 0000 01       		.uleb128 0x1
 7272 0001 11       		.uleb128 0x11
 7273 0002 01       		.byte	0x1
 7274 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 151


 7275 0004 0E       		.uleb128 0xe
 7276 0005 13       		.uleb128 0x13
 7277 0006 0B       		.uleb128 0xb
 7278 0007 03       		.uleb128 0x3
 7279 0008 0E       		.uleb128 0xe
 7280 0009 1B       		.uleb128 0x1b
 7281 000a 0E       		.uleb128 0xe
 7282 000b 55       		.uleb128 0x55
 7283 000c 17       		.uleb128 0x17
 7284 000d 11       		.uleb128 0x11
 7285 000e 01       		.uleb128 0x1
 7286 000f 10       		.uleb128 0x10
 7287 0010 17       		.uleb128 0x17
 7288 0011 00       		.byte	0
 7289 0012 00       		.byte	0
 7290 0013 02       		.uleb128 0x2
 7291 0014 24       		.uleb128 0x24
 7292 0015 00       		.byte	0
 7293 0016 0B       		.uleb128 0xb
 7294 0017 0B       		.uleb128 0xb
 7295 0018 3E       		.uleb128 0x3e
 7296 0019 0B       		.uleb128 0xb
 7297 001a 03       		.uleb128 0x3
 7298 001b 0E       		.uleb128 0xe
 7299 001c 00       		.byte	0
 7300 001d 00       		.byte	0
 7301 001e 03       		.uleb128 0x3
 7302 001f 16       		.uleb128 0x16
 7303 0020 00       		.byte	0
 7304 0021 03       		.uleb128 0x3
 7305 0022 0E       		.uleb128 0xe
 7306 0023 3A       		.uleb128 0x3a
 7307 0024 0B       		.uleb128 0xb
 7308 0025 3B       		.uleb128 0x3b
 7309 0026 0B       		.uleb128 0xb
 7310 0027 49       		.uleb128 0x49
 7311 0028 13       		.uleb128 0x13
 7312 0029 00       		.byte	0
 7313 002a 00       		.byte	0
 7314 002b 04       		.uleb128 0x4
 7315 002c 24       		.uleb128 0x24
 7316 002d 00       		.byte	0
 7317 002e 0B       		.uleb128 0xb
 7318 002f 0B       		.uleb128 0xb
 7319 0030 3E       		.uleb128 0x3e
 7320 0031 0B       		.uleb128 0xb
 7321 0032 03       		.uleb128 0x3
 7322 0033 08       		.uleb128 0x8
 7323 0034 00       		.byte	0
 7324 0035 00       		.byte	0
 7325 0036 05       		.uleb128 0x5
 7326 0037 0F       		.uleb128 0xf
 7327 0038 00       		.byte	0
 7328 0039 0B       		.uleb128 0xb
 7329 003a 0B       		.uleb128 0xb
 7330 003b 49       		.uleb128 0x49
 7331 003c 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 152


 7332 003d 00       		.byte	0
 7333 003e 00       		.byte	0
 7334 003f 06       		.uleb128 0x6
 7335 0040 16       		.uleb128 0x16
 7336 0041 00       		.byte	0
 7337 0042 03       		.uleb128 0x3
 7338 0043 0E       		.uleb128 0xe
 7339 0044 3A       		.uleb128 0x3a
 7340 0045 0B       		.uleb128 0xb
 7341 0046 3B       		.uleb128 0x3b
 7342 0047 05       		.uleb128 0x5
 7343 0048 49       		.uleb128 0x49
 7344 0049 13       		.uleb128 0x13
 7345 004a 00       		.byte	0
 7346 004b 00       		.byte	0
 7347 004c 07       		.uleb128 0x7
 7348 004d 01       		.uleb128 0x1
 7349 004e 01       		.byte	0x1
 7350 004f 49       		.uleb128 0x49
 7351 0050 13       		.uleb128 0x13
 7352 0051 01       		.uleb128 0x1
 7353 0052 13       		.uleb128 0x13
 7354 0053 00       		.byte	0
 7355 0054 00       		.byte	0
 7356 0055 08       		.uleb128 0x8
 7357 0056 21       		.uleb128 0x21
 7358 0057 00       		.byte	0
 7359 0058 49       		.uleb128 0x49
 7360 0059 13       		.uleb128 0x13
 7361 005a 2F       		.uleb128 0x2f
 7362 005b 0B       		.uleb128 0xb
 7363 005c 00       		.byte	0
 7364 005d 00       		.byte	0
 7365 005e 09       		.uleb128 0x9
 7366 005f 04       		.uleb128 0x4
 7367 0060 01       		.byte	0x1
 7368 0061 03       		.uleb128 0x3
 7369 0062 0E       		.uleb128 0xe
 7370 0063 0B       		.uleb128 0xb
 7371 0064 0B       		.uleb128 0xb
 7372 0065 3A       		.uleb128 0x3a
 7373 0066 0B       		.uleb128 0xb
 7374 0067 3B       		.uleb128 0x3b
 7375 0068 0B       		.uleb128 0xb
 7376 0069 01       		.uleb128 0x1
 7377 006a 13       		.uleb128 0x13
 7378 006b 00       		.byte	0
 7379 006c 00       		.byte	0
 7380 006d 0A       		.uleb128 0xa
 7381 006e 28       		.uleb128 0x28
 7382 006f 00       		.byte	0
 7383 0070 03       		.uleb128 0x3
 7384 0071 0E       		.uleb128 0xe
 7385 0072 1C       		.uleb128 0x1c
 7386 0073 0D       		.uleb128 0xd
 7387 0074 00       		.byte	0
 7388 0075 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 153


 7389 0076 0B       		.uleb128 0xb
 7390 0077 13       		.uleb128 0x13
 7391 0078 01       		.byte	0x1
 7392 0079 03       		.uleb128 0x3
 7393 007a 0E       		.uleb128 0xe
 7394 007b 0B       		.uleb128 0xb
 7395 007c 0B       		.uleb128 0xb
 7396 007d 3A       		.uleb128 0x3a
 7397 007e 0B       		.uleb128 0xb
 7398 007f 3B       		.uleb128 0x3b
 7399 0080 0B       		.uleb128 0xb
 7400 0081 01       		.uleb128 0x1
 7401 0082 13       		.uleb128 0x13
 7402 0083 00       		.byte	0
 7403 0084 00       		.byte	0
 7404 0085 0C       		.uleb128 0xc
 7405 0086 0D       		.uleb128 0xd
 7406 0087 00       		.byte	0
 7407 0088 03       		.uleb128 0x3
 7408 0089 0E       		.uleb128 0xe
 7409 008a 3A       		.uleb128 0x3a
 7410 008b 0B       		.uleb128 0xb
 7411 008c 3B       		.uleb128 0x3b
 7412 008d 0B       		.uleb128 0xb
 7413 008e 49       		.uleb128 0x49
 7414 008f 13       		.uleb128 0x13
 7415 0090 38       		.uleb128 0x38
 7416 0091 0B       		.uleb128 0xb
 7417 0092 00       		.byte	0
 7418 0093 00       		.byte	0
 7419 0094 0D       		.uleb128 0xd
 7420 0095 2E       		.uleb128 0x2e
 7421 0096 00       		.byte	0
 7422 0097 3F       		.uleb128 0x3f
 7423 0098 19       		.uleb128 0x19
 7424 0099 03       		.uleb128 0x3
 7425 009a 0E       		.uleb128 0xe
 7426 009b 3A       		.uleb128 0x3a
 7427 009c 0B       		.uleb128 0xb
 7428 009d 3B       		.uleb128 0x3b
 7429 009e 0B       		.uleb128 0xb
 7430 009f 27       		.uleb128 0x27
 7431 00a0 19       		.uleb128 0x19
 7432 00a1 11       		.uleb128 0x11
 7433 00a2 01       		.uleb128 0x1
 7434 00a3 12       		.uleb128 0x12
 7435 00a4 06       		.uleb128 0x6
 7436 00a5 40       		.uleb128 0x40
 7437 00a6 18       		.uleb128 0x18
 7438 00a7 9742     		.uleb128 0x2117
 7439 00a9 19       		.uleb128 0x19
 7440 00aa 00       		.byte	0
 7441 00ab 00       		.byte	0
 7442 00ac 0E       		.uleb128 0xe
 7443 00ad 2E       		.uleb128 0x2e
 7444 00ae 00       		.byte	0
 7445 00af 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 154


 7446 00b0 19       		.uleb128 0x19
 7447 00b1 03       		.uleb128 0x3
 7448 00b2 0E       		.uleb128 0xe
 7449 00b3 3A       		.uleb128 0x3a
 7450 00b4 0B       		.uleb128 0xb
 7451 00b5 3B       		.uleb128 0x3b
 7452 00b6 0B       		.uleb128 0xb
 7453 00b7 27       		.uleb128 0x27
 7454 00b8 19       		.uleb128 0x19
 7455 00b9 11       		.uleb128 0x11
 7456 00ba 01       		.uleb128 0x1
 7457 00bb 12       		.uleb128 0x12
 7458 00bc 06       		.uleb128 0x6
 7459 00bd 40       		.uleb128 0x40
 7460 00be 18       		.uleb128 0x18
 7461 00bf 9642     		.uleb128 0x2116
 7462 00c1 19       		.uleb128 0x19
 7463 00c2 00       		.byte	0
 7464 00c3 00       		.byte	0
 7465 00c4 0F       		.uleb128 0xf
 7466 00c5 2E       		.uleb128 0x2e
 7467 00c6 01       		.byte	0x1
 7468 00c7 3F       		.uleb128 0x3f
 7469 00c8 19       		.uleb128 0x19
 7470 00c9 03       		.uleb128 0x3
 7471 00ca 0E       		.uleb128 0xe
 7472 00cb 3A       		.uleb128 0x3a
 7473 00cc 0B       		.uleb128 0xb
 7474 00cd 3B       		.uleb128 0x3b
 7475 00ce 0B       		.uleb128 0xb
 7476 00cf 27       		.uleb128 0x27
 7477 00d0 19       		.uleb128 0x19
 7478 00d1 11       		.uleb128 0x11
 7479 00d2 01       		.uleb128 0x1
 7480 00d3 12       		.uleb128 0x12
 7481 00d4 06       		.uleb128 0x6
 7482 00d5 40       		.uleb128 0x40
 7483 00d6 18       		.uleb128 0x18
 7484 00d7 9642     		.uleb128 0x2116
 7485 00d9 19       		.uleb128 0x19
 7486 00da 01       		.uleb128 0x1
 7487 00db 13       		.uleb128 0x13
 7488 00dc 00       		.byte	0
 7489 00dd 00       		.byte	0
 7490 00de 10       		.uleb128 0x10
 7491 00df 0B       		.uleb128 0xb
 7492 00e0 01       		.byte	0x1
 7493 00e1 11       		.uleb128 0x11
 7494 00e2 01       		.uleb128 0x1
 7495 00e3 12       		.uleb128 0x12
 7496 00e4 06       		.uleb128 0x6
 7497 00e5 01       		.uleb128 0x1
 7498 00e6 13       		.uleb128 0x13
 7499 00e7 00       		.byte	0
 7500 00e8 00       		.byte	0
 7501 00e9 11       		.uleb128 0x11
 7502 00ea 34       		.uleb128 0x34
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 155


 7503 00eb 00       		.byte	0
 7504 00ec 03       		.uleb128 0x3
 7505 00ed 0E       		.uleb128 0xe
 7506 00ee 3A       		.uleb128 0x3a
 7507 00ef 0B       		.uleb128 0xb
 7508 00f0 3B       		.uleb128 0x3b
 7509 00f1 0B       		.uleb128 0xb
 7510 00f2 49       		.uleb128 0x49
 7511 00f3 13       		.uleb128 0x13
 7512 00f4 02       		.uleb128 0x2
 7513 00f5 18       		.uleb128 0x18
 7514 00f6 00       		.byte	0
 7515 00f7 00       		.byte	0
 7516 00f8 12       		.uleb128 0x12
 7517 00f9 0B       		.uleb128 0xb
 7518 00fa 01       		.byte	0x1
 7519 00fb 11       		.uleb128 0x11
 7520 00fc 01       		.uleb128 0x1
 7521 00fd 12       		.uleb128 0x12
 7522 00fe 06       		.uleb128 0x6
 7523 00ff 00       		.byte	0
 7524 0100 00       		.byte	0
 7525 0101 13       		.uleb128 0x13
 7526 0102 2E       		.uleb128 0x2e
 7527 0103 01       		.byte	0x1
 7528 0104 3F       		.uleb128 0x3f
 7529 0105 19       		.uleb128 0x19
 7530 0106 03       		.uleb128 0x3
 7531 0107 0E       		.uleb128 0xe
 7532 0108 3A       		.uleb128 0x3a
 7533 0109 0B       		.uleb128 0xb
 7534 010a 3B       		.uleb128 0x3b
 7535 010b 0B       		.uleb128 0xb
 7536 010c 49       		.uleb128 0x49
 7537 010d 13       		.uleb128 0x13
 7538 010e 11       		.uleb128 0x11
 7539 010f 01       		.uleb128 0x1
 7540 0110 12       		.uleb128 0x12
 7541 0111 06       		.uleb128 0x6
 7542 0112 40       		.uleb128 0x40
 7543 0113 18       		.uleb128 0x18
 7544 0114 9642     		.uleb128 0x2116
 7545 0116 19       		.uleb128 0x19
 7546 0117 01       		.uleb128 0x1
 7547 0118 13       		.uleb128 0x13
 7548 0119 00       		.byte	0
 7549 011a 00       		.byte	0
 7550 011b 14       		.uleb128 0x14
 7551 011c 34       		.uleb128 0x34
 7552 011d 00       		.byte	0
 7553 011e 03       		.uleb128 0x3
 7554 011f 0E       		.uleb128 0xe
 7555 0120 3A       		.uleb128 0x3a
 7556 0121 0B       		.uleb128 0xb
 7557 0122 3B       		.uleb128 0x3b
 7558 0123 05       		.uleb128 0x5
 7559 0124 49       		.uleb128 0x49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 156


 7560 0125 13       		.uleb128 0x13
 7561 0126 02       		.uleb128 0x2
 7562 0127 18       		.uleb128 0x18
 7563 0128 00       		.byte	0
 7564 0129 00       		.byte	0
 7565 012a 15       		.uleb128 0x15
 7566 012b 34       		.uleb128 0x34
 7567 012c 00       		.byte	0
 7568 012d 03       		.uleb128 0x3
 7569 012e 08       		.uleb128 0x8
 7570 012f 3A       		.uleb128 0x3a
 7571 0130 0B       		.uleb128 0xb
 7572 0131 3B       		.uleb128 0x3b
 7573 0132 05       		.uleb128 0x5
 7574 0133 49       		.uleb128 0x49
 7575 0134 13       		.uleb128 0x13
 7576 0135 02       		.uleb128 0x2
 7577 0136 18       		.uleb128 0x18
 7578 0137 00       		.byte	0
 7579 0138 00       		.byte	0
 7580 0139 16       		.uleb128 0x16
 7581 013a 2E       		.uleb128 0x2e
 7582 013b 01       		.byte	0x1
 7583 013c 3F       		.uleb128 0x3f
 7584 013d 19       		.uleb128 0x19
 7585 013e 03       		.uleb128 0x3
 7586 013f 0E       		.uleb128 0xe
 7587 0140 3A       		.uleb128 0x3a
 7588 0141 0B       		.uleb128 0xb
 7589 0142 3B       		.uleb128 0x3b
 7590 0143 05       		.uleb128 0x5
 7591 0144 11       		.uleb128 0x11
 7592 0145 01       		.uleb128 0x1
 7593 0146 12       		.uleb128 0x12
 7594 0147 06       		.uleb128 0x6
 7595 0148 40       		.uleb128 0x40
 7596 0149 18       		.uleb128 0x18
 7597 014a 9742     		.uleb128 0x2117
 7598 014c 19       		.uleb128 0x19
 7599 014d 01       		.uleb128 0x1
 7600 014e 13       		.uleb128 0x13
 7601 014f 00       		.byte	0
 7602 0150 00       		.byte	0
 7603 0151 17       		.uleb128 0x17
 7604 0152 2E       		.uleb128 0x2e
 7605 0153 01       		.byte	0x1
 7606 0154 3F       		.uleb128 0x3f
 7607 0155 19       		.uleb128 0x19
 7608 0156 03       		.uleb128 0x3
 7609 0157 0E       		.uleb128 0xe
 7610 0158 3A       		.uleb128 0x3a
 7611 0159 0B       		.uleb128 0xb
 7612 015a 3B       		.uleb128 0x3b
 7613 015b 05       		.uleb128 0x5
 7614 015c 27       		.uleb128 0x27
 7615 015d 19       		.uleb128 0x19
 7616 015e 11       		.uleb128 0x11
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 157


 7617 015f 01       		.uleb128 0x1
 7618 0160 12       		.uleb128 0x12
 7619 0161 06       		.uleb128 0x6
 7620 0162 40       		.uleb128 0x40
 7621 0163 18       		.uleb128 0x18
 7622 0164 9642     		.uleb128 0x2116
 7623 0166 19       		.uleb128 0x19
 7624 0167 01       		.uleb128 0x1
 7625 0168 13       		.uleb128 0x13
 7626 0169 00       		.byte	0
 7627 016a 00       		.byte	0
 7628 016b 18       		.uleb128 0x18
 7629 016c 05       		.uleb128 0x5
 7630 016d 00       		.byte	0
 7631 016e 03       		.uleb128 0x3
 7632 016f 08       		.uleb128 0x8
 7633 0170 3A       		.uleb128 0x3a
 7634 0171 0B       		.uleb128 0xb
 7635 0172 3B       		.uleb128 0x3b
 7636 0173 05       		.uleb128 0x5
 7637 0174 49       		.uleb128 0x49
 7638 0175 13       		.uleb128 0x13
 7639 0176 02       		.uleb128 0x2
 7640 0177 18       		.uleb128 0x18
 7641 0178 00       		.byte	0
 7642 0179 00       		.byte	0
 7643 017a 19       		.uleb128 0x19
 7644 017b 2E       		.uleb128 0x2e
 7645 017c 01       		.byte	0x1
 7646 017d 3F       		.uleb128 0x3f
 7647 017e 19       		.uleb128 0x19
 7648 017f 03       		.uleb128 0x3
 7649 0180 0E       		.uleb128 0xe
 7650 0181 3A       		.uleb128 0x3a
 7651 0182 0B       		.uleb128 0xb
 7652 0183 3B       		.uleb128 0x3b
 7653 0184 05       		.uleb128 0x5
 7654 0185 11       		.uleb128 0x11
 7655 0186 01       		.uleb128 0x1
 7656 0187 12       		.uleb128 0x12
 7657 0188 06       		.uleb128 0x6
 7658 0189 40       		.uleb128 0x40
 7659 018a 18       		.uleb128 0x18
 7660 018b 9642     		.uleb128 0x2116
 7661 018d 19       		.uleb128 0x19
 7662 018e 01       		.uleb128 0x1
 7663 018f 13       		.uleb128 0x13
 7664 0190 00       		.byte	0
 7665 0191 00       		.byte	0
 7666 0192 1A       		.uleb128 0x1a
 7667 0193 05       		.uleb128 0x5
 7668 0194 00       		.byte	0
 7669 0195 03       		.uleb128 0x3
 7670 0196 0E       		.uleb128 0xe
 7671 0197 3A       		.uleb128 0x3a
 7672 0198 0B       		.uleb128 0xb
 7673 0199 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 158


 7674 019a 05       		.uleb128 0x5
 7675 019b 49       		.uleb128 0x49
 7676 019c 13       		.uleb128 0x13
 7677 019d 02       		.uleb128 0x2
 7678 019e 18       		.uleb128 0x18
 7679 019f 00       		.byte	0
 7680 01a0 00       		.byte	0
 7681 01a1 1B       		.uleb128 0x1b
 7682 01a2 2E       		.uleb128 0x2e
 7683 01a3 00       		.byte	0
 7684 01a4 3F       		.uleb128 0x3f
 7685 01a5 19       		.uleb128 0x19
 7686 01a6 03       		.uleb128 0x3
 7687 01a7 0E       		.uleb128 0xe
 7688 01a8 3A       		.uleb128 0x3a
 7689 01a9 0B       		.uleb128 0xb
 7690 01aa 3B       		.uleb128 0x3b
 7691 01ab 05       		.uleb128 0x5
 7692 01ac 11       		.uleb128 0x11
 7693 01ad 01       		.uleb128 0x1
 7694 01ae 12       		.uleb128 0x12
 7695 01af 06       		.uleb128 0x6
 7696 01b0 40       		.uleb128 0x40
 7697 01b1 18       		.uleb128 0x18
 7698 01b2 9642     		.uleb128 0x2116
 7699 01b4 19       		.uleb128 0x19
 7700 01b5 00       		.byte	0
 7701 01b6 00       		.byte	0
 7702 01b7 1C       		.uleb128 0x1c
 7703 01b8 2E       		.uleb128 0x2e
 7704 01b9 00       		.byte	0
 7705 01ba 3F       		.uleb128 0x3f
 7706 01bb 19       		.uleb128 0x19
 7707 01bc 03       		.uleb128 0x3
 7708 01bd 0E       		.uleb128 0xe
 7709 01be 3A       		.uleb128 0x3a
 7710 01bf 0B       		.uleb128 0xb
 7711 01c0 3B       		.uleb128 0x3b
 7712 01c1 05       		.uleb128 0x5
 7713 01c2 11       		.uleb128 0x11
 7714 01c3 01       		.uleb128 0x1
 7715 01c4 12       		.uleb128 0x12
 7716 01c5 06       		.uleb128 0x6
 7717 01c6 40       		.uleb128 0x40
 7718 01c7 18       		.uleb128 0x18
 7719 01c8 9742     		.uleb128 0x2117
 7720 01ca 19       		.uleb128 0x19
 7721 01cb 00       		.byte	0
 7722 01cc 00       		.byte	0
 7723 01cd 1D       		.uleb128 0x1d
 7724 01ce 34       		.uleb128 0x34
 7725 01cf 00       		.byte	0
 7726 01d0 03       		.uleb128 0x3
 7727 01d1 0E       		.uleb128 0xe
 7728 01d2 3A       		.uleb128 0x3a
 7729 01d3 0B       		.uleb128 0xb
 7730 01d4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 159


 7731 01d5 05       		.uleb128 0x5
 7732 01d6 49       		.uleb128 0x49
 7733 01d7 13       		.uleb128 0x13
 7734 01d8 3F       		.uleb128 0x3f
 7735 01d9 19       		.uleb128 0x19
 7736 01da 3C       		.uleb128 0x3c
 7737 01db 19       		.uleb128 0x19
 7738 01dc 00       		.byte	0
 7739 01dd 00       		.byte	0
 7740 01de 1E       		.uleb128 0x1e
 7741 01df 35       		.uleb128 0x35
 7742 01e0 00       		.byte	0
 7743 01e1 49       		.uleb128 0x49
 7744 01e2 13       		.uleb128 0x13
 7745 01e3 00       		.byte	0
 7746 01e4 00       		.byte	0
 7747 01e5 1F       		.uleb128 0x1f
 7748 01e6 34       		.uleb128 0x34
 7749 01e7 00       		.byte	0
 7750 01e8 03       		.uleb128 0x3
 7751 01e9 08       		.uleb128 0x8
 7752 01ea 3A       		.uleb128 0x3a
 7753 01eb 0B       		.uleb128 0xb
 7754 01ec 3B       		.uleb128 0x3b
 7755 01ed 0B       		.uleb128 0xb
 7756 01ee 49       		.uleb128 0x49
 7757 01ef 13       		.uleb128 0x13
 7758 01f0 3F       		.uleb128 0x3f
 7759 01f1 19       		.uleb128 0x19
 7760 01f2 02       		.uleb128 0x2
 7761 01f3 18       		.uleb128 0x18
 7762 01f4 00       		.byte	0
 7763 01f5 00       		.byte	0
 7764 01f6 20       		.uleb128 0x20
 7765 01f7 34       		.uleb128 0x34
 7766 01f8 00       		.byte	0
 7767 01f9 03       		.uleb128 0x3
 7768 01fa 0E       		.uleb128 0xe
 7769 01fb 3A       		.uleb128 0x3a
 7770 01fc 0B       		.uleb128 0xb
 7771 01fd 3B       		.uleb128 0x3b
 7772 01fe 0B       		.uleb128 0xb
 7773 01ff 49       		.uleb128 0x49
 7774 0200 13       		.uleb128 0x13
 7775 0201 3F       		.uleb128 0x3f
 7776 0202 19       		.uleb128 0x19
 7777 0203 02       		.uleb128 0x2
 7778 0204 18       		.uleb128 0x18
 7779 0205 00       		.byte	0
 7780 0206 00       		.byte	0
 7781 0207 21       		.uleb128 0x21
 7782 0208 21       		.uleb128 0x21
 7783 0209 00       		.byte	0
 7784 020a 49       		.uleb128 0x49
 7785 020b 13       		.uleb128 0x13
 7786 020c 2F       		.uleb128 0x2f
 7787 020d 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 160


 7788 020e 00       		.byte	0
 7789 020f 00       		.byte	0
 7790 0210 22       		.uleb128 0x22
 7791 0211 34       		.uleb128 0x34
 7792 0212 00       		.byte	0
 7793 0213 03       		.uleb128 0x3
 7794 0214 0E       		.uleb128 0xe
 7795 0215 3A       		.uleb128 0x3a
 7796 0216 0B       		.uleb128 0xb
 7797 0217 3B       		.uleb128 0x3b
 7798 0218 05       		.uleb128 0x5
 7799 0219 49       		.uleb128 0x49
 7800 021a 13       		.uleb128 0x13
 7801 021b 3F       		.uleb128 0x3f
 7802 021c 19       		.uleb128 0x19
 7803 021d 02       		.uleb128 0x2
 7804 021e 18       		.uleb128 0x18
 7805 021f 00       		.byte	0
 7806 0220 00       		.byte	0
 7807 0221 00       		.byte	0
 7808              		.section	.debug_aranges,"",%progbits
 7809 0000 6C010000 		.4byte	0x16c
 7810 0004 0200     		.2byte	0x2
 7811 0006 00000000 		.4byte	.Ldebug_info0
 7812 000a 04       		.byte	0x4
 7813 000b 00       		.byte	0
 7814 000c 0000     		.2byte	0
 7815 000e 0000     		.2byte	0
 7816 0010 00000000 		.4byte	.LFB63
 7817 0014 0C000000 		.4byte	.LFE63-.LFB63
 7818 0018 00000000 		.4byte	.LFB64
 7819 001c 2C000000 		.4byte	.LFE64-.LFB64
 7820 0020 00000000 		.4byte	.LFB65
 7821 0024 9C010000 		.4byte	.LFE65-.LFB65
 7822 0028 00000000 		.4byte	.LFB66
 7823 002c 34010000 		.4byte	.LFE66-.LFB66
 7824 0030 00000000 		.4byte	.LFB67
 7825 0034 20000000 		.4byte	.LFE67-.LFB67
 7826 0038 00000000 		.4byte	.LFB68
 7827 003c 28000000 		.4byte	.LFE68-.LFB68
 7828 0040 00000000 		.4byte	.LFB69
 7829 0044 0A000000 		.4byte	.LFE69-.LFB69
 7830 0048 00000000 		.4byte	.LFB70
 7831 004c 28000000 		.4byte	.LFE70-.LFB70
 7832 0050 00000000 		.4byte	.LFB71
 7833 0054 68070000 		.4byte	.LFE71-.LFB71
 7834 0058 00000000 		.4byte	.LFB72
 7835 005c 60010000 		.4byte	.LFE72-.LFB72
 7836 0060 00000000 		.4byte	.LFB73
 7837 0064 18000000 		.4byte	.LFE73-.LFB73
 7838 0068 00000000 		.4byte	.LFB74
 7839 006c 18000000 		.4byte	.LFE74-.LFB74
 7840 0070 00000000 		.4byte	.LFB75
 7841 0074 54000000 		.4byte	.LFE75-.LFB75
 7842 0078 00000000 		.4byte	.LFB76
 7843 007c F4000000 		.4byte	.LFE76-.LFB76
 7844 0080 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 161


 7845 0084 18000000 		.4byte	.LFE77-.LFB77
 7846 0088 00000000 		.4byte	.LFB78
 7847 008c 18000000 		.4byte	.LFE78-.LFB78
 7848 0090 00000000 		.4byte	.LFB79
 7849 0094 22000000 		.4byte	.LFE79-.LFB79
 7850 0098 00000000 		.4byte	.LFB80
 7851 009c 1C000000 		.4byte	.LFE80-.LFB80
 7852 00a0 00000000 		.4byte	.LFB81
 7853 00a4 34000000 		.4byte	.LFE81-.LFB81
 7854 00a8 00000000 		.4byte	.LFB82
 7855 00ac 38000000 		.4byte	.LFE82-.LFB82
 7856 00b0 00000000 		.4byte	.LFB83
 7857 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7858 00b8 00000000 		.4byte	.LFB84
 7859 00bc 38000000 		.4byte	.LFE84-.LFB84
 7860 00c0 00000000 		.4byte	.LFB85
 7861 00c4 38000000 		.4byte	.LFE85-.LFB85
 7862 00c8 00000000 		.4byte	.LFB86
 7863 00cc 38000000 		.4byte	.LFE86-.LFB86
 7864 00d0 00000000 		.4byte	.LFB87
 7865 00d4 14000000 		.4byte	.LFE87-.LFB87
 7866 00d8 00000000 		.4byte	.LFB88
 7867 00dc 18000000 		.4byte	.LFE88-.LFB88
 7868 00e0 00000000 		.4byte	.LFB89
 7869 00e4 18000000 		.4byte	.LFE89-.LFB89
 7870 00e8 00000000 		.4byte	.LFB90
 7871 00ec 18000000 		.4byte	.LFE90-.LFB90
 7872 00f0 00000000 		.4byte	.LFB91
 7873 00f4 18000000 		.4byte	.LFE91-.LFB91
 7874 00f8 00000000 		.4byte	.LFB92
 7875 00fc B8000000 		.4byte	.LFE92-.LFB92
 7876 0100 00000000 		.4byte	.LFB93
 7877 0104 20050000 		.4byte	.LFE93-.LFB93
 7878 0108 00000000 		.4byte	.LFB94
 7879 010c 40000000 		.4byte	.LFE94-.LFB94
 7880 0110 00000000 		.4byte	.LFB95
 7881 0114 40000000 		.4byte	.LFE95-.LFB95
 7882 0118 00000000 		.4byte	.LFB96
 7883 011c 30020000 		.4byte	.LFE96-.LFB96
 7884 0120 00000000 		.4byte	.LFB97
 7885 0124 0C000000 		.4byte	.LFE97-.LFB97
 7886 0128 00000000 		.4byte	.LFB98
 7887 012c 4C010000 		.4byte	.LFE98-.LFB98
 7888 0130 00000000 		.4byte	.LFB99
 7889 0134 0C000000 		.4byte	.LFE99-.LFB99
 7890 0138 00000000 		.4byte	.LFB100
 7891 013c C0000000 		.4byte	.LFE100-.LFB100
 7892 0140 00000000 		.4byte	.LFB101
 7893 0144 B8000000 		.4byte	.LFE101-.LFB101
 7894 0148 00000000 		.4byte	.LFB102
 7895 014c 4A000000 		.4byte	.LFE102-.LFB102
 7896 0150 00000000 		.4byte	.LFB103
 7897 0154 68000000 		.4byte	.LFE103-.LFB103
 7898 0158 00000000 		.4byte	.LFB104
 7899 015c 50000000 		.4byte	.LFE104-.LFB104
 7900 0160 00000000 		.4byte	.LFB105
 7901 0164 0C000000 		.4byte	.LFE105-.LFB105
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 162


 7902 0168 00000000 		.4byte	0
 7903 016c 00000000 		.4byte	0
 7904              		.section	.debug_ranges,"",%progbits
 7905              	.Ldebug_ranges0:
 7906 0000 00000000 		.4byte	.LFB63
 7907 0004 0C000000 		.4byte	.LFE63
 7908 0008 00000000 		.4byte	.LFB64
 7909 000c 2C000000 		.4byte	.LFE64
 7910 0010 00000000 		.4byte	.LFB65
 7911 0014 9C010000 		.4byte	.LFE65
 7912 0018 00000000 		.4byte	.LFB66
 7913 001c 34010000 		.4byte	.LFE66
 7914 0020 00000000 		.4byte	.LFB67
 7915 0024 20000000 		.4byte	.LFE67
 7916 0028 00000000 		.4byte	.LFB68
 7917 002c 28000000 		.4byte	.LFE68
 7918 0030 00000000 		.4byte	.LFB69
 7919 0034 0A000000 		.4byte	.LFE69
 7920 0038 00000000 		.4byte	.LFB70
 7921 003c 28000000 		.4byte	.LFE70
 7922 0040 00000000 		.4byte	.LFB71
 7923 0044 68070000 		.4byte	.LFE71
 7924 0048 00000000 		.4byte	.LFB72
 7925 004c 60010000 		.4byte	.LFE72
 7926 0050 00000000 		.4byte	.LFB73
 7927 0054 18000000 		.4byte	.LFE73
 7928 0058 00000000 		.4byte	.LFB74
 7929 005c 18000000 		.4byte	.LFE74
 7930 0060 00000000 		.4byte	.LFB75
 7931 0064 54000000 		.4byte	.LFE75
 7932 0068 00000000 		.4byte	.LFB76
 7933 006c F4000000 		.4byte	.LFE76
 7934 0070 00000000 		.4byte	.LFB77
 7935 0074 18000000 		.4byte	.LFE77
 7936 0078 00000000 		.4byte	.LFB78
 7937 007c 18000000 		.4byte	.LFE78
 7938 0080 00000000 		.4byte	.LFB79
 7939 0084 22000000 		.4byte	.LFE79
 7940 0088 00000000 		.4byte	.LFB80
 7941 008c 1C000000 		.4byte	.LFE80
 7942 0090 00000000 		.4byte	.LFB81
 7943 0094 34000000 		.4byte	.LFE81
 7944 0098 00000000 		.4byte	.LFB82
 7945 009c 38000000 		.4byte	.LFE82
 7946 00a0 00000000 		.4byte	.LFB83
 7947 00a4 4C000000 		.4byte	.LFE83
 7948 00a8 00000000 		.4byte	.LFB84
 7949 00ac 38000000 		.4byte	.LFE84
 7950 00b0 00000000 		.4byte	.LFB85
 7951 00b4 38000000 		.4byte	.LFE85
 7952 00b8 00000000 		.4byte	.LFB86
 7953 00bc 38000000 		.4byte	.LFE86
 7954 00c0 00000000 		.4byte	.LFB87
 7955 00c4 14000000 		.4byte	.LFE87
 7956 00c8 00000000 		.4byte	.LFB88
 7957 00cc 18000000 		.4byte	.LFE88
 7958 00d0 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 163


 7959 00d4 18000000 		.4byte	.LFE89
 7960 00d8 00000000 		.4byte	.LFB90
 7961 00dc 18000000 		.4byte	.LFE90
 7962 00e0 00000000 		.4byte	.LFB91
 7963 00e4 18000000 		.4byte	.LFE91
 7964 00e8 00000000 		.4byte	.LFB92
 7965 00ec B8000000 		.4byte	.LFE92
 7966 00f0 00000000 		.4byte	.LFB93
 7967 00f4 20050000 		.4byte	.LFE93
 7968 00f8 00000000 		.4byte	.LFB94
 7969 00fc 40000000 		.4byte	.LFE94
 7970 0100 00000000 		.4byte	.LFB95
 7971 0104 40000000 		.4byte	.LFE95
 7972 0108 00000000 		.4byte	.LFB96
 7973 010c 30020000 		.4byte	.LFE96
 7974 0110 00000000 		.4byte	.LFB97
 7975 0114 0C000000 		.4byte	.LFE97
 7976 0118 00000000 		.4byte	.LFB98
 7977 011c 4C010000 		.4byte	.LFE98
 7978 0120 00000000 		.4byte	.LFB99
 7979 0124 0C000000 		.4byte	.LFE99
 7980 0128 00000000 		.4byte	.LFB100
 7981 012c C0000000 		.4byte	.LFE100
 7982 0130 00000000 		.4byte	.LFB101
 7983 0134 B8000000 		.4byte	.LFE101
 7984 0138 00000000 		.4byte	.LFB102
 7985 013c 4A000000 		.4byte	.LFE102
 7986 0140 00000000 		.4byte	.LFB103
 7987 0144 68000000 		.4byte	.LFE103
 7988 0148 00000000 		.4byte	.LFB104
 7989 014c 50000000 		.4byte	.LFE104
 7990 0150 00000000 		.4byte	.LFB105
 7991 0154 0C000000 		.4byte	.LFE105
 7992 0158 00000000 		.4byte	0
 7993 015c 00000000 		.4byte	0
 7994              		.section	.debug_line,"",%progbits
 7995              	.Ldebug_line0:
 7996 0000 41080000 		.section	.debug_str,"MS",%progbits,1
 7996      02006701 
 7996      00000201 
 7996      FB0E0D00 
 7996      01010101 
 7997              	.LASF99:
 7998 0000 696E6974 		.ascii	"initTrackU\000"
 7998      54726163 
 7998      6B5500
 7999              	.LASF56:
 8000 000b 67325F73 		.ascii	"g2_speed\000"
 8000      70656564 
 8000      00
 8001              	.LASF104:
 8002 0014 6368616E 		.ascii	"changeToRF\000"
 8002      6765546F 
 8002      524600
 8003              	.LASF37:
 8004 001f 51554144 		.ascii	"QUAD_STOP\000"
 8004      5F53544F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 164


 8004      5000
 8005              	.LASF63:
 8006 0029 62757474 		.ascii	"button\000"
 8006      6F6E00
 8007              	.LASF130:
 8008 0030 74735F73 		.ascii	"ts_speed\000"
 8008      70656564 
 8008      00
 8009              	.LASF197:
 8010 0039 6C656674 		.ascii	"leftTurnCount\000"
 8010      5475726E 
 8010      436F756E 
 8010      7400
 8011              	.LASF168:
 8012 0047 696E6974 		.ascii	"initial_y_pos\000"
 8012      69616C5F 
 8012      795F706F 
 8012      7300
 8013              	.LASF65:
 8014 0055 6973725F 		.ascii	"isr_deadzone\000"
 8014      64656164 
 8014      7A6F6E65 
 8014      00
 8015              	.LASF144:
 8016 0062 64697265 		.ascii	"direction\000"
 8016      6374696F 
 8016      6E00
 8017              	.LASF189:
 8018 006c 70617468 		.ascii	"path\000"
 8018      00
 8019              	.LASF97:
 8020 0071 696E6974 		.ascii	"initBrake\000"
 8020      4272616B 
 8020      6500
 8021              	.LASF49:
 8022 007b 67305F64 		.ascii	"g0_direction\000"
 8022      69726563 
 8022      74696F6E 
 8022      00
 8023              	.LASF61:
 8024 0088 64697374 		.ascii	"distTurned\000"
 8024      5475726E 
 8024      656400
 8025              	.LASF176:
 8026 0093 656E7472 		.ascii	"entry\000"
 8026      7900
 8027              	.LASF9:
 8028 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 8028      206C6F6E 
 8028      6720756E 
 8028      7369676E 
 8028      65642069 
 8029              	.LASF192:
 8030 00b0 726F626F 		.ascii	"robot_direction\000"
 8030      745F6469 
 8030      72656374 
 8030      696F6E00 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 165


 8031              	.LASF137:
 8032 00c0 666C6167 		.ascii	"flag_packet\000"
 8032      5F706163 
 8032      6B657400 
 8033              	.LASF90:
 8034 00cc 7475726E 		.ascii	"turnRight\000"
 8034      52696768 
 8034      7400
 8035              	.LASF46:
 8036 00d6 67305F78 		.ascii	"g0_xpos\000"
 8036      706F7300 
 8037              	.LASF127:
 8038 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8038      52784275 
 8038      66666572 
 8038      00
 8039              	.LASF160:
 8040 00eb 74617267 		.ascii	"target_distance_cm\000"
 8040      65745F64 
 8040      69737461 
 8040      6E63655F 
 8040      636D00
 8041              	.LASF129:
 8042 00fe 74735F75 		.ascii	"ts_update\000"
 8042      70646174 
 8042      6500
 8043              	.LASF35:
 8044 0108 555F5452 		.ascii	"U_TRACK\000"
 8044      41434B00 
 8045              	.LASF40:
 8046 0110 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8046      54524156 
 8046      45525345 
 8046      00
 8047              	.LASF83:
 8048 011d 72696768 		.ascii	"right\000"
 8048      7400
 8049              	.LASF123:
 8050 0123 73656E73 		.ascii	"sensorVals\000"
 8050      6F725661 
 8050      6C7300
 8051              	.LASF8:
 8052 012e 6C6F6E67 		.ascii	"long long int\000"
 8052      206C6F6E 
 8052      6720696E 
 8052      7400
 8053              	.LASF0:
 8054 013c 7369676E 		.ascii	"signed char\000"
 8054      65642063 
 8054      68617200 
 8055              	.LASF108:
 8056 0148 72696768 		.ascii	"rightSpeed\000"
 8056      74537065 
 8056      656400
 8057              	.LASF45:
 8058 0153 726F626F 		.ascii	"robot_orientation\000"
 8058      745F6F72 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 166


 8058      69656E74 
 8058      6174696F 
 8058      6E00
 8059              	.LASF171:
 8060 0165 66726F6E 		.ascii	"frontSensors\000"
 8060      7453656E 
 8060      736F7273 
 8060      00
 8061              	.LASF115:
 8062 0172 74726163 		.ascii	"trackLineU\000"
 8062      6B4C696E 
 8062      655500
 8063              	.LASF132:
 8064 017d 666C6167 		.ascii	"flag_ts_enc\000"
 8064      5F74735F 
 8064      656E6300 
 8065              	.LASF178:
 8066 0189 62756666 		.ascii	"buffer_state\000"
 8066      65725F73 
 8066      74617465 
 8066      00
 8067              	.LASF94:
 8068 0196 696E6974 		.ascii	"initTurnRight\000"
 8068      5475726E 
 8068      52696768 
 8068      7400
 8069              	.LASF154:
 8070 01a4 64656164 		.ascii	"deadzone\000"
 8070      7A6F6E65 
 8070      00
 8071              	.LASF138:
 8072 01ad 666C6167 		.ascii	"flag_KB_string\000"
 8072      5F4B425F 
 8072      73747269 
 8072      6E6700
 8073              	.LASF114:
 8074 01bc 74726163 		.ascii	"trackLineZ\000"
 8074      6B4C696E 
 8074      655A00
 8075              	.LASF91:
 8076 01c7 7475726E 		.ascii	"turnLeft\000"
 8076      4C656674 
 8076      00
 8077              	.LASF31:
 8078 01d0 73746174 		.ascii	"state\000"
 8078      6500
 8079              	.LASF4:
 8080 01d6 6C6F6E67 		.ascii	"long int\000"
 8080      20696E74 
 8080      00
 8081              	.LASF30:
 8082 01df 55545552 		.ascii	"UTURN\000"
 8082      4E00
 8083              	.LASF165:
 8084 01e5 71756164 		.ascii	"quad_per_cm\000"
 8084      5F706572 
 8084      5F636D00 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 167


 8085              	.LASF15:
 8086 01f1 75696E74 		.ascii	"uint8\000"
 8086      3800
 8087              	.LASF118:
 8088 01f7 636F6E76 		.ascii	"converted_val\000"
 8088      65727465 
 8088      645F7661 
 8088      6C00
 8089              	.LASF77:
 8090 0205 7365744C 		.ascii	"setLeftDir\000"
 8090      65667444 
 8090      697200
 8091              	.LASF21:
 8092 0210 646F7562 		.ascii	"double\000"
 8092      6C6500
 8093              	.LASF139:
 8094 0217 64617461 		.ascii	"dataready_flag\000"
 8094      72656164 
 8094      795F666C 
 8094      616700
 8095              	.LASF59:
 8096 0226 6164635F 		.ascii	"adc_isr\000"
 8096      69737200 
 8097              	.LASF128:
 8098 022e 74735F65 		.ascii	"ts_enc\000"
 8098      6E6300
 8099              	.LASF136:
 8100 0235 666C6167 		.ascii	"flag_rx\000"
 8100      5F727800 
 8101              	.LASF17:
 8102 023d 75696E74 		.ascii	"uint32\000"
 8102      333200
 8103              	.LASF73:
 8104 0244 6E657874 		.ascii	"nextInstruction\000"
 8104      496E7374 
 8104      72756374 
 8104      696F6E00 
 8105              	.LASF75:
 8106 0254 62797465 		.ascii	"byte_packet\000"
 8106      5F706163 
 8106      6B657400 
 8107              	.LASF175:
 8108 0260 6C696E65 		.ascii	"line\000"
 8108      00
 8109              	.LASF147:
 8110 0265 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 8110      5F63616C 
 8110      635F7768 
 8110      65656C73 
 8110      70656564 
 8111              	.LASF57:
 8112 027a 67325F64 		.ascii	"g2_direction\000"
 8112      69726563 
 8112      74696F6E 
 8112      00
 8113              	.LASF172:
 8114 0287 70726576 		.ascii	"prevVoltage\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 168


 8114      566F6C74 
 8114      61676500 
 8115              	.LASF148:
 8116 0293 71756164 		.ascii	"quad_count1\000"
 8116      5F636F75 
 8116      6E743100 
 8117              	.LASF149:
 8118 029f 71756164 		.ascii	"quad_count2\000"
 8118      5F636F75 
 8118      6E743200 
 8119              	.LASF159:
 8120 02ab 72696768 		.ascii	"rightSpeedLimit\000"
 8120      74537065 
 8120      65644C69 
 8120      6D697400 
 8121              	.LASF196:
 8122 02bb 696E7374 		.ascii	"instructionLength\000"
 8122      72756374 
 8122      696F6E4C 
 8122      656E6774 
 8122      6800
 8123              	.LASF39:
 8124 02cd 44455354 		.ascii	"DEST_TEST\000"
 8124      5F544553 
 8124      5400
 8125              	.LASF182:
 8126 02d7 74726163 		.ascii	"track_mode\000"
 8126      6B5F6D6F 
 8126      646500
 8127              	.LASF25:
 8128 02e2 52545552 		.ascii	"RTURN\000"
 8128      4E00
 8129              	.LASF191:
 8130 02e8 64657374 		.ascii	"destination\000"
 8130      696E6174 
 8130      696F6E00 
 8131              	.LASF60:
 8132 02f4 6973725F 		.ascii	"isr_quad1\000"
 8132      71756164 
 8132      3100
 8133              	.LASF10:
 8134 02fe 756E7369 		.ascii	"unsigned int\000"
 8134      676E6564 
 8134      20696E74 
 8134      00
 8135              	.LASF157:
 8136 030b 72696768 		.ascii	"right_duty_cycle\000"
 8136      745F6475 
 8136      74795F63 
 8136      79636C65 
 8136      00
 8137              	.LASF202:
 8138 031c 64617461 		.ascii	"data_main\000"
 8138      5F6D6169 
 8138      6E00
 8139              	.LASF143:
 8140 0326 6164635F 		.ascii	"adc_result\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 169


 8140      72657375 
 8140      6C7400
 8141              	.LASF187:
 8142 0331 73656E73 		.ascii	"sensorsDisabled\000"
 8142      6F727344 
 8142      69736162 
 8142      6C656400 
 8143              	.LASF142:
 8144 0341 666C6167 		.ascii	"flag_receive_ADC\000"
 8144      5F726563 
 8144      65697665 
 8144      5F414443 
 8144      00
 8145              	.LASF7:
 8146 0352 6C6F6E67 		.ascii	"long unsigned int\000"
 8146      20756E73 
 8146      69676E65 
 8146      6420696E 
 8146      7400
 8147              	.LASF98:
 8148 0364 696E6974 		.ascii	"initTrack\000"
 8148      54726163 
 8148      6B00
 8149              	.LASF95:
 8150 036e 696E6974 		.ascii	"initTurnU\000"
 8150      5475726E 
 8150      5500
 8151              	.LASF117:
 8152 0378 7363616C 		.ascii	"scalingFactor\000"
 8152      696E6746 
 8152      6163746F 
 8152      7200
 8153              	.LASF194:
 8154 0386 666F6F64 		.ascii	"food_length\000"
 8154      5F6C656E 
 8154      67746800 
 8155              	.LASF3:
 8156 0392 73686F72 		.ascii	"short unsigned int\000"
 8156      7420756E 
 8156      7369676E 
 8156      65642069 
 8156      6E7400
 8157              	.LASF81:
 8158 03a5 73657453 		.ascii	"setSpeed\000"
 8158      70656564 
 8158      00
 8159              	.LASF18:
 8160 03ae 696E7438 		.ascii	"int8\000"
 8160      00
 8161              	.LASF23:
 8162 03b3 44524956 		.ascii	"DRIVE\000"
 8162      4500
 8163              	.LASF93:
 8164 03b9 696E6974 		.ascii	"initTurnLeft\000"
 8164      5475726E 
 8164      4C656674 
 8164      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 170


 8165              	.LASF105:
 8166 03c6 6368616E 		.ascii	"changeToBT\000"
 8166      6765546F 
 8166      425400
 8167              	.LASF27:
 8168 03d1 54524143 		.ascii	"TRACKING\000"
 8168      4B494E47 
 8168      00
 8169              	.LASF186:
 8170 03da 696E7374 		.ascii	"instructionCount\000"
 8170      72756374 
 8170      696F6E43 
 8170      6F756E74 
 8170      00
 8171              	.LASF70:
 8172 03eb 6C656674 		.ascii	"leftOn\000"
 8172      4F6E00
 8173              	.LASF124:
 8174 03f2 75736250 		.ascii	"usbPutString\000"
 8174      75745374 
 8174      72696E67 
 8174      00
 8175              	.LASF62:
 8176 03ff 53746F70 		.ascii	"Stop_on_line\000"
 8176      5F6F6E5F 
 8176      6C696E65 
 8176      00
 8177              	.LASF34:
 8178 040c 43555256 		.ascii	"CURVE_TRACK\000"
 8178      455F5452 
 8178      41434B00 
 8179              	.LASF5:
 8180 0418 5F5F696E 		.ascii	"__int32_t\000"
 8180      7433325F 
 8180      7400
 8181              	.LASF36:
 8182 0422 53515541 		.ascii	"SQUARE_TRACK\000"
 8182      52455F54 
 8182      5241434B 
 8182      00
 8183              	.LASF131:
 8184 042f 74735F64 		.ascii	"ts_display\000"
 8184      6973706C 
 8184      617900
 8185              	.LASF126:
 8186 043a 75617274 		.ascii	"uart_set_PWM\000"
 8186      5F736574 
 8186      5F50574D 
 8186      00
 8187              	.LASF198:
 8188 0447 72696768 		.ascii	"rightTurnCount\000"
 8188      74547572 
 8188      6E436F75 
 8188      6E7400
 8189              	.LASF66:
 8190 0456 6973725F 		.ascii	"isr_turn_timer\000"
 8190      7475726E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 171


 8190      5F74696D 
 8190      657200
 8191              	.LASF111:
 8192 0465 696E7465 		.ascii	"interCalc\000"
 8192      7243616C 
 8192      6300
 8193              	.LASF134:
 8194 046f 666C6167 		.ascii	"flag_ts_speed\000"
 8194      5F74735F 
 8194      73706565 
 8194      6400
 8195              	.LASF41:
 8196 047d 72737369 		.ascii	"rssi\000"
 8196      00
 8197              	.LASF52:
 8198 0482 67315F73 		.ascii	"g1_speed\000"
 8198      70656564 
 8198      00
 8199              	.LASF11:
 8200 048b 73697A65 		.ascii	"sizetype\000"
 8200      74797065 
 8200      00
 8201              	.LASF141:
 8202 0494 666C6167 		.ascii	"flag_print_rf\000"
 8202      5F707269 
 8202      6E745F72 
 8202      6600
 8203              	.LASF179:
 8204 04a2 73797374 		.ascii	"system_state\000"
 8204      656D5F73 
 8204      74617465 
 8204      00
 8205              	.LASF51:
 8206 04af 67315F79 		.ascii	"g1_ypos\000"
 8206      706F7300 
 8207              	.LASF53:
 8208 04b7 67315F64 		.ascii	"g1_direction\000"
 8208      69726563 
 8208      74696F6E 
 8208      00
 8209              	.LASF106:
 8210 04c4 51756164 		.ascii	"Quad_Dec_response\000"
 8210      5F446563 
 8210      5F726573 
 8210      706F6E73 
 8210      6500
 8211              	.LASF24:
 8212 04d6 4C545552 		.ascii	"LTURN\000"
 8212      4E00
 8213              	.LASF169:
 8214 04dc 6272616B 		.ascii	"brakeFlag\000"
 8214      65466C61 
 8214      6700
 8215              	.LASF55:
 8216 04e6 67325F79 		.ascii	"g2_ypos\000"
 8216      706F7300 
 8217              	.LASF119:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 172


 8218 04ee 72657375 		.ascii	"result_str\000"
 8218      6C745F73 
 8218      747200
 8219              	.LASF180:
 8220 04f9 70726576 		.ascii	"prev_movement_state\000"
 8220      5F6D6F76 
 8220      656D656E 
 8220      745F7374 
 8220      61746500 
 8221              	.LASF199:
 8222 050d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8222      4320342E 
 8222      392E3320 
 8222      32303135 
 8222      30333033 
 8223 0540 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8223      20726576 
 8223      6973696F 
 8223      6E203232 
 8223      31323230 
 8224 0573 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8224      66756E63 
 8224      74696F6E 
 8224      2D736563 
 8224      74696F6E 
 8225              	.LASF103:
 8226 059b 42545F72 		.ascii	"BT_rxInt\000"
 8226      78496E74 
 8226      00
 8227              	.LASF162:
 8228 05a4 74617267 		.ascii	"target_distance_quad\000"
 8228      65745F64 
 8228      69737461 
 8228      6E63655F 
 8228      71756164 
 8229              	.LASF140:
 8230 05b9 666C6167 		.ascii	"flag_rf_transmission_active\000"
 8230      5F72665F 
 8230      7472616E 
 8230      736D6973 
 8230      73696F6E 
 8231              	.LASF76:
 8232 05d5 73747269 		.ascii	"string_packet\000"
 8232      6E675F70 
 8232      61636B65 
 8232      7400
 8233              	.LASF20:
 8234 05e3 666C6F61 		.ascii	"float\000"
 8234      7400
 8235              	.LASF28:
 8236 05e9 54524143 		.ascii	"TRACKING_U\000"
 8236      4B494E47 
 8236      5F5500
 8237              	.LASF167:
 8238 05f4 696E6974 		.ascii	"initial_x_pos\000"
 8238      69616C5F 
 8238      785F706F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 173


 8238      7300
 8239              	.LASF89:
 8240 0602 64726976 		.ascii	"driveForwards\000"
 8240      65466F72 
 8240      77617264 
 8240      7300
 8241              	.LASF121:
 8242 0610 7072696E 		.ascii	"printString\000"
 8242      74537472 
 8242      696E6700 
 8243              	.LASF170:
 8244 061c 706F7274 		.ascii	"portOpen\000"
 8244      4F70656E 
 8244      00
 8245              	.LASF78:
 8246 0625 73657452 		.ascii	"setRightDir\000"
 8246      69676874 
 8246      44697200 
 8247              	.LASF150:
 8248 0631 6C617374 		.ascii	"last_quad_count1\000"
 8248      5F717561 
 8248      645F636F 
 8248      756E7431 
 8248      00
 8249              	.LASF151:
 8250 0642 6C617374 		.ascii	"last_quad_count2\000"
 8250      5F717561 
 8250      645F636F 
 8250      756E7432 
 8250      00
 8251              	.LASF29:
 8252 0653 54524143 		.ascii	"TRACKING_SOFT\000"
 8252      4B494E47 
 8252      5F534F46 
 8252      5400
 8253              	.LASF145:
 8254 0661 42494E5F 		.ascii	"BIN_ENABLED\000"
 8254      454E4142 
 8254      4C454400 
 8255              	.LASF13:
 8256 066d 696E7433 		.ascii	"int32_t\000"
 8256      325F7400 
 8257              	.LASF1:
 8258 0675 756E7369 		.ascii	"unsigned char\000"
 8258      676E6564 
 8258      20636861 
 8258      7200
 8259              	.LASF16:
 8260 0683 75696E74 		.ascii	"uint16\000"
 8260      313600
 8261              	.LASF38:
 8262 068a 52465F53 		.ascii	"RF_STOP\000"
 8262      544F5000 
 8263              	.LASF88:
 8264 0692 6272616B 		.ascii	"brakeMotor\000"
 8264      654D6F74 
 8264      6F7200
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 174


 8265              	.LASF54:
 8266 069d 67325F78 		.ascii	"g2_xpos\000"
 8266      706F7300 
 8267              	.LASF112:
 8268 06a5 6E657874 		.ascii	"nextSpeed\000"
 8268      53706565 
 8268      6400
 8269              	.LASF2:
 8270 06af 73686F72 		.ascii	"short int\000"
 8270      7420696E 
 8270      7400
 8271              	.LASF33:
 8272 06b9 4E4F5F54 		.ascii	"NO_TRACK\000"
 8272      5241434B 
 8272      00
 8273              	.LASF109:
 8274 06c2 7363616C 		.ascii	"scalingLeft\000"
 8274      696E674C 
 8274      65667400 
 8275              	.LASF79:
 8276 06ce 68616E64 		.ascii	"handle_rx_binary\000"
 8276      6C655F72 
 8276      785F6269 
 8276      6E617279 
 8276      00
 8277              	.LASF101:
 8278 06df 7278496E 		.ascii	"rxInt\000"
 8278      7400
 8279              	.LASF183:
 8280 06e5 62797465 		.ascii	"byteCount\000"
 8280      436F756E 
 8280      7400
 8281              	.LASF64:
 8282 06ef 6973725F 		.ascii	"isr_adcTimer\000"
 8282      61646354 
 8282      696D6572 
 8282      00
 8283              	.LASF113:
 8284 06fc 74726163 		.ascii	"trackLine\000"
 8284      6B4C696E 
 8284      6500
 8285              	.LASF87:
 8286 0706 6272616B 		.ascii	"brakeRight\000"
 8286      65526967 
 8286      687400
 8287              	.LASF135:
 8288 0711 666C6167 		.ascii	"flag_ts_display\000"
 8288      5F74735F 
 8288      64697370 
 8288      6C617900 
 8289              	.LASF26:
 8290 0721 53544F50 		.ascii	"STOPPED\000"
 8290      50454400 
 8291              	.LASF74:
 8292 0729 7061636B 		.ascii	"packet_bytes\000"
 8292      65745F62 
 8292      79746573 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 175


 8292      00
 8293              	.LASF22:
 8294 0736 6C6F6E67 		.ascii	"long double\000"
 8294      20646F75 
 8294      626C6500 
 8295              	.LASF193:
 8296 0742 74726163 		.ascii	"tracked_direction\000"
 8296      6B65645F 
 8296      64697265 
 8296      6374696F 
 8296      6E00
 8297              	.LASF12:
 8298 0754 63686172 		.ascii	"char\000"
 8298      00
 8299              	.LASF32:
 8300 0759 6D6F6465 		.ascii	"mode\000"
 8300      00
 8301              	.LASF195:
 8302 075e 696E7374 		.ascii	"instructions\000"
 8302      72756374 
 8302      696F6E73 
 8302      00
 8303              	.LASF42:
 8304 076b 696E6465 		.ascii	"index\000"
 8304      7800
 8305              	.LASF188:
 8306 0771 666F6F64 		.ascii	"food_list\000"
 8306      5F6C6973 
 8306      7400
 8307              	.LASF68:
 8308 077b 61637469 		.ascii	"actionDebounce\000"
 8308      6F6E4465 
 8308      626F756E 
 8308      636500
 8309              	.LASF107:
 8310 078a 6C656674 		.ascii	"leftSpeed\000"
 8310      53706565 
 8310      6400
 8311              	.LASF6:
 8312 0794 5F5F7569 		.ascii	"__uint32_t\000"
 8312      6E743332 
 8312      5F7400
 8313              	.LASF133:
 8314 079f 666C6167 		.ascii	"flag_ts_update\000"
 8314      5F74735F 
 8314      75706461 
 8314      746500
 8315              	.LASF174:
 8316 07ae 64697370 		.ascii	"displaystring\000"
 8316      6C617973 
 8316      7472696E 
 8316      6700
 8317              	.LASF47:
 8318 07bc 67305F79 		.ascii	"g0_ypos\000"
 8318      706F7300 
 8319              	.LASF158:
 8320 07c4 6C656674 		.ascii	"leftSpeedLimit\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 176


 8320      53706565 
 8320      644C696D 
 8320      697400
 8321              	.LASF43:
 8322 07d3 726F626F 		.ascii	"robot_xpos\000"
 8322      745F7870 
 8322      6F7300
 8323              	.LASF92:
 8324 07de 7475726E 		.ascii	"turnU\000"
 8324      5500
 8325              	.LASF184:
 8326 07e4 7061636B 		.ascii	"packet\000"
 8326      657400
 8327              	.LASF85:
 8328 07eb 636F756E 		.ascii	"countsRight\000"
 8328      74735269 
 8328      67687400 
 8329              	.LASF120:
 8330 07f7 7072696E 		.ascii	"print_RF\000"
 8330      745F5246 
 8330      00
 8331              	.LASF86:
 8332 0800 6272616B 		.ascii	"brakeLeft\000"
 8332      654C6566 
 8332      7400
 8333              	.LASF177:
 8334 080a 75736242 		.ascii	"usbBuffer\000"
 8334      75666665 
 8334      7200
 8335              	.LASF50:
 8336 0814 67315F78 		.ascii	"g1_xpos\000"
 8336      706F7300 
 8337              	.LASF102:
 8338 081c 72665F63 		.ascii	"rf_char\000"
 8338      68617200 
 8339              	.LASF166:
 8340 0824 696E6974 		.ascii	"initial_pos_valid\000"
 8340      69616C5F 
 8340      706F735F 
 8340      76616C69 
 8340      6400
 8341              	.LASF80:
 8342 0836 72657665 		.ascii	"reverseDirection\000"
 8342      72736544 
 8342      69726563 
 8342      74696F6E 
 8342      00
 8343              	.LASF173:
 8344 0847 70726576 		.ascii	"prevVoltage2\000"
 8344      566F6C74 
 8344      61676532 
 8344      00
 8345              	.LASF96:
 8346 0854 696E6974 		.ascii	"initForward\000"
 8346      466F7277 
 8346      61726400 
 8347              	.LASF14:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 177


 8348 0860 75696E74 		.ascii	"uint32_t\000"
 8348      33325F74 
 8348      00
 8349              	.LASF156:
 8350 0869 6C656674 		.ascii	"left_duty_cycle\000"
 8350      5F647574 
 8350      795F6379 
 8350      636C6500 
 8351              	.LASF72:
 8352 0879 6E657874 		.ascii	"nextStepDist\000"
 8352      53746570 
 8352      44697374 
 8352      00
 8353              	.LASF161:
 8354 0886 61636375 		.ascii	"accum_dist\000"
 8354      6D5F6469 
 8354      737400
 8355              	.LASF58:
 8356 0891 42545F74 		.ascii	"BT_txInt\000"
 8356      78496E74 
 8356      00
 8357              	.LASF181:
 8358 089a 6D6F7665 		.ascii	"movement_state\000"
 8358      6D656E74 
 8358      5F737461 
 8358      746500
 8359              	.LASF71:
 8360 08a9 72696768 		.ascii	"rightOn\000"
 8360      744F6E00 
 8361              	.LASF146:
 8362 08b1 42545F45 		.ascii	"BT_ENABLED\000"
 8362      4E41424C 
 8362      454400
 8363              	.LASF125:
 8364 08bc 75736250 		.ascii	"usbPutChar\000"
 8364      75744368 
 8364      617200
 8365              	.LASF100:
 8366 08c7 696E6974 		.ascii	"inittrackLineZ\000"
 8366      74726163 
 8366      6B4C696E 
 8366      655A00
 8367              	.LASF110:
 8368 08d6 7363616C 		.ascii	"scalingRight\000"
 8368      696E6752 
 8368      69676874 
 8368      00
 8369              	.LASF163:
 8370 08e3 72656163 		.ascii	"reached_target\000"
 8370      6865645F 
 8370      74617267 
 8370      657400
 8371              	.LASF44:
 8372 08f2 726F626F 		.ascii	"robot_ypos\000"
 8372      745F7970 
 8372      6F7300
 8373              	.LASF19:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 178


 8374 08fd 696E7431 		.ascii	"int16\000"
 8374      3600
 8375              	.LASF84:
 8376 0903 636F756E 		.ascii	"countsLeft\000"
 8376      74734C65 
 8376      667400
 8377              	.LASF155:
 8378 090e 73746172 		.ascii	"start_turn_count\000"
 8378      745F7475 
 8378      726E5F63 
 8378      6F756E74 
 8378      00
 8379              	.LASF185:
 8380 091f 73706565 		.ascii	"speed\000"
 8380      6400
 8381              	.LASF164:
 8382 0925 6F766572 		.ascii	"overshot_target\000"
 8382      73686F74 
 8382      5F746172 
 8382      67657400 
 8383              	.LASF69:
 8384 0935 6E657874 		.ascii	"nextStep\000"
 8384      53746570 
 8384      00
 8385              	.LASF200:
 8386 093e 2E5C6D61 		.ascii	".\\main.c\000"
 8386      696E2E63 
 8386      00
 8387              	.LASF152:
 8388 0947 71756164 		.ascii	"quad_diff1\000"
 8388      5F646966 
 8388      663100
 8389              	.LASF153:
 8390 0952 71756164 		.ascii	"quad_diff2\000"
 8390      5F646966 
 8390      663200
 8391              	.LASF190:
 8392 095d 73746172 		.ascii	"start\000"
 8392      7400
 8393              	.LASF67:
 8394 0963 6D61696E 		.ascii	"main\000"
 8394      00
 8395              	.LASF82:
 8396 0968 6C656674 		.ascii	"left\000"
 8396      00
 8397              	.LASF48:
 8398 096d 67305F73 		.ascii	"g0_speed\000"
 8398      70656564 
 8398      00
 8399              	.LASF201:
 8400 0976 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 8400      73657273 
 8400      5C4C6F67 
 8400      616E5C44 
 8400      65736B74 
 8401 09a3 43533330 		.ascii	"CS301_Class.cydsn\000"
 8401      315F436C 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccDLpxIZ.s 			page 179


 8401      6173732E 
 8401      63796473 
 8401      6E00
 8402              	.LASF116:
 8403 09b5 7072696E 		.ascii	"print_ADC\000"
 8403      745F4144 
 8403      4300
 8404              	.LASF122:
 8405 09bf 72656164 		.ascii	"readFrontSensors\000"
 8405      46726F6E 
 8405      7453656E 
 8405      736F7273 
 8405      00
 8406              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
