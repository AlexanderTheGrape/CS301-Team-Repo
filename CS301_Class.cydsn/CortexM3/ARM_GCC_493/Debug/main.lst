ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	movement_state
 204              		.type	movement_state, %object
 205              		.size	movement_state, 1
 206              	movement_state:
 207 0044 03       		.byte	3
 208              		.global	byteCount
 209 0045 000000   		.bss
 210              		.type	byteCount, %object
 211              		.size	byteCount, 1
 212              	byteCount:
 213 002c 00       		.space	1
 214              		.comm	packet,2,4
 215 002d 00       		.section	.text.handle_rx_binary,"ax",%progbits
 216              		.align	2
 217              		.global	handle_rx_binary
 218              		.thumb
 219              		.thumb_func
 220              		.type	handle_rx_binary, %function
 221              	handle_rx_binary:
 222              	.LFB63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 5


 223              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** 
  40:.\main.c      **** void handle_rx_binary()
  41:.\main.c      **** {
 224              		.loc 1 41 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 89B0     		sub	sp, sp, #36
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  42:.\main.c      ****     if(flag_rx == 1)
 236              		.loc 1 42 0
 237 0006 524B     		ldr	r3, .L21
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 6


 238 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 000a 012B     		cmp	r3, #1
 240 000c 40F09A80 		bne	.L1
 241              	.LBB2:
  43:.\main.c      ****     {    
  44:.\main.c      ****         flag_rx = 0;
 242              		.loc 1 44 0
 243 0010 4F4B     		ldr	r3, .L21
 244 0012 0022     		movs	r2, #0
 245 0014 1A70     		strb	r2, [r3]
  45:.\main.c      ****         
  46:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 246              		.loc 1 46 0
 247 0016 4F4B     		ldr	r3, .L21+4
 248 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 249 001a 1B02     		lsls	r3, r3, #8
 250 001c 9AB2     		uxth	r2, r3
 251 001e 4D4B     		ldr	r3, .L21+4
 252 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0022 9BB2     		uxth	r3, r3
 254 0024 1343     		orrs	r3, r3, r2
 255 0026 9BB2     		uxth	r3, r3
 256 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  47:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  48:.\main.c      ****         char byte_packet[12];
  49:.\main.c      ****         char string_packet[12];
  50:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  51:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  52:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  53:.\main.c      ****         //usbPutString(string_packet);
  54:.\main.c      ****        // usbPutString(string_packet);
  55:.\main.c      ****        // usbPutChar(' ');
  56:.\main.c      ****         
  57:.\main.c      ****         switch(byteCount)
 257              		.loc 1 57 0
 258 002a 4B4B     		ldr	r3, .L21+8
 259 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 002e 043B     		subs	r3, r3, #4
 261 0030 1E2B     		cmp	r3, #30
 262 0032 00F28780 		bhi	.L1
 263 0036 01A2     		adr	r2, .L5
 264 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265              		.p2align 2
 266              	.L5:
 267 003c B9000000 		.word	.L4+1
 268 0040 45010000 		.word	.L1+1
 269 0044 CD000000 		.word	.L6+1
 270 0048 45010000 		.word	.L1+1
 271 004c D5000000 		.word	.L7+1
 272 0050 45010000 		.word	.L1+1
 273 0054 DD000000 		.word	.L8+1
 274 0058 45010000 		.word	.L1+1
 275 005c E5000000 		.word	.L9+1
 276 0060 45010000 		.word	.L1+1
 277 0064 ED000000 		.word	.L10+1
 278 0068 45010000 		.word	.L1+1
 279 006c F5000000 		.word	.L11+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 7


 280 0070 45010000 		.word	.L1+1
 281 0074 FD000000 		.word	.L12+1
 282 0078 45010000 		.word	.L1+1
 283 007c 05010000 		.word	.L13+1
 284 0080 45010000 		.word	.L1+1
 285 0084 0D010000 		.word	.L14+1
 286 0088 45010000 		.word	.L1+1
 287 008c 15010000 		.word	.L15+1
 288 0090 45010000 		.word	.L1+1
 289 0094 1D010000 		.word	.L16+1
 290 0098 45010000 		.word	.L1+1
 291 009c 25010000 		.word	.L17+1
 292 00a0 45010000 		.word	.L1+1
 293 00a4 2D010000 		.word	.L18+1
 294 00a8 45010000 		.word	.L1+1
 295 00ac 35010000 		.word	.L19+1
 296 00b0 45010000 		.word	.L1+1
 297 00b4 3D010000 		.word	.L20+1
 298              		.p2align 1
 299              	.L4:
  58:.\main.c      ****         {
  59:.\main.c      ****             case 4:
  60:.\main.c      ****                 //usbPutString("RSSI:");
  61:.\main.c      ****                 //usbPutString(byte_packet);
  62:.\main.c      ****                 //usbPutString("\r\n");
  63:.\main.c      ****                 buffer_state.rssi = packet[0];
 300              		.loc 1 63 0
 301 00b8 264B     		ldr	r3, .L21+4
 302 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00bc DAB2     		uxtb	r2, r3
 304 00be 274B     		ldr	r3, .L21+12
 305 00c0 1A70     		strb	r2, [r3]
  64:.\main.c      ****                 buffer_state.index = packet[1];
 306              		.loc 1 64 0
 307 00c2 244B     		ldr	r3, .L21+4
 308 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 309 00c6 254B     		ldr	r3, .L21+12
 310 00c8 5A70     		strb	r2, [r3, #1]
  65:.\main.c      ****             break;
 311              		.loc 1 65 0
 312 00ca 3BE0     		b	.L1
 313              	.L6:
  66:.\main.c      ****             case 6:
  67:.\main.c      ****                 //usbPutString("robot_x:");
  68:.\main.c      ****                 //usbPutString(string_packet);
  69:.\main.c      ****                 //usbPutString("\r\n");
  70:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 314              		.loc 1 70 0
 315 00cc FA8B     		ldrh	r2, [r7, #30]
 316 00ce 234B     		ldr	r3, .L21+12
 317 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  71:.\main.c      ****             break;
 318              		.loc 1 71 0
 319 00d2 37E0     		b	.L1
 320              	.L7:
  72:.\main.c      ****             case 8:
  73:.\main.c      ****                 //usbPutString("robot_y:");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 8


  74:.\main.c      ****                 //usbPutString(string_packet);
  75:.\main.c      ****                 //usbPutString("\r\n");
  76:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 321              		.loc 1 76 0
 322 00d4 FA8B     		ldrh	r2, [r7, #30]
 323 00d6 214B     		ldr	r3, .L21+12
 324 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  77:.\main.c      ****             break;
 325              		.loc 1 77 0
 326 00da 33E0     		b	.L1
 327              	.L8:
  78:.\main.c      ****             case 10:
  79:.\main.c      ****                 //usbPutString("robot_dir:");
  80:.\main.c      ****                 //usbPutString(string_packet);
  81:.\main.c      ****                 //usbPutString("\r\n");
  82:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 328              		.loc 1 82 0
 329 00dc FA8B     		ldrh	r2, [r7, #30]
 330 00de 1F4B     		ldr	r3, .L21+12
 331 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  83:.\main.c      ****             break;
 332              		.loc 1 83 0
 333 00e2 2FE0     		b	.L1
 334              	.L9:
  84:.\main.c      ****             case 12:
  85:.\main.c      ****                 //usbPutString("g0_x:");
  86:.\main.c      ****                 //usbPutString(string_packet);
  87:.\main.c      ****                 //usbPutString("\r\n");
  88:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 335              		.loc 1 88 0
 336 00e4 FA8B     		ldrh	r2, [r7, #30]
 337 00e6 1D4B     		ldr	r3, .L21+12
 338 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  89:.\main.c      ****             break;
 339              		.loc 1 89 0
 340 00ea 2BE0     		b	.L1
 341              	.L10:
  90:.\main.c      ****             case 14:
  91:.\main.c      ****                 //usbPutString("g0_y:");
  92:.\main.c      ****                 //usbPutString(string_packet);
  93:.\main.c      ****                 //usbPutString("\r\n");
  94:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 342              		.loc 1 94 0
 343 00ec FA8B     		ldrh	r2, [r7, #30]
 344 00ee 1B4B     		ldr	r3, .L21+12
 345 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  95:.\main.c      ****             break;
 346              		.loc 1 95 0
 347 00f2 27E0     		b	.L1
 348              	.L11:
  96:.\main.c      ****             case 16:
  97:.\main.c      ****                 //usbPutString("g0_speed:");
  98:.\main.c      ****                 //usbPutString(string_packet);
  99:.\main.c      ****                 //usbPutString("\r\n");
 100:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 349              		.loc 1 100 0
 350 00f4 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 9


 351 00f6 194B     		ldr	r3, .L21+12
 352 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 101:.\main.c      ****             break;
 353              		.loc 1 101 0
 354 00fa 23E0     		b	.L1
 355              	.L12:
 102:.\main.c      ****             case 18:
 103:.\main.c      ****                 //usbPutString("g1_dir:");
 104:.\main.c      ****                 //usbPutString(string_packet);
 105:.\main.c      ****                 //usbPutString("\r\n");
 106:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 356              		.loc 1 106 0
 357 00fc FA8B     		ldrh	r2, [r7, #30]
 358 00fe 174B     		ldr	r3, .L21+12
 359 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 107:.\main.c      ****             break;
 360              		.loc 1 107 0
 361 0102 1FE0     		b	.L1
 362              	.L13:
 108:.\main.c      ****             case 20:
 109:.\main.c      ****                 //usbPutString("g1_x:");
 110:.\main.c      ****                 //usbPutString(string_packet);
 111:.\main.c      ****                 //usbPutString("\r\n");
 112:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 363              		.loc 1 112 0
 364 0104 FA8B     		ldrh	r2, [r7, #30]
 365 0106 154B     		ldr	r3, .L21+12
 366 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 113:.\main.c      ****             break;
 367              		.loc 1 113 0
 368 010a 1BE0     		b	.L1
 369              	.L14:
 114:.\main.c      ****             case 22:
 115:.\main.c      ****                 //usbPutString("g1_y:");
 116:.\main.c      ****                 //usbPutString(string_packet);
 117:.\main.c      ****                 //usbPutString("\r\n");
 118:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 370              		.loc 1 118 0
 371 010c FA8B     		ldrh	r2, [r7, #30]
 372 010e 134B     		ldr	r3, .L21+12
 373 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 119:.\main.c      ****             break;
 374              		.loc 1 119 0
 375 0112 17E0     		b	.L1
 376              	.L15:
 120:.\main.c      ****             case 24:
 121:.\main.c      ****                 //usbPutString("g1_speed:");
 122:.\main.c      ****                 //usbPutString(string_packet);
 123:.\main.c      ****                 //usbPutString("\r\n");
 124:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 377              		.loc 1 124 0
 378 0114 FA8B     		ldrh	r2, [r7, #30]
 379 0116 114B     		ldr	r3, .L21+12
 380 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 125:.\main.c      ****             break;
 381              		.loc 1 125 0
 382 011a 13E0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 10


 383              	.L16:
 126:.\main.c      ****             case 26:
 127:.\main.c      ****                 //usbPutString("g1_dir:");
 128:.\main.c      ****                 //usbPutString(string_packet);
 129:.\main.c      ****                 //usbPutString("\r\n");
 130:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 384              		.loc 1 130 0
 385 011c FA8B     		ldrh	r2, [r7, #30]
 386 011e 0F4B     		ldr	r3, .L21+12
 387 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 131:.\main.c      ****             break;
 388              		.loc 1 131 0
 389 0122 0FE0     		b	.L1
 390              	.L17:
 132:.\main.c      ****             case 28:
 133:.\main.c      ****                 //usbPutString("g2_x:");
 134:.\main.c      ****                 //usbPutString(string_packet);
 135:.\main.c      ****                 //usbPutString("\r\n");
 136:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 391              		.loc 1 136 0
 392 0124 FA8B     		ldrh	r2, [r7, #30]
 393 0126 0D4B     		ldr	r3, .L21+12
 394 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 137:.\main.c      ****             break;
 395              		.loc 1 137 0
 396 012a 0BE0     		b	.L1
 397              	.L18:
 138:.\main.c      ****             case 30:
 139:.\main.c      ****                 //usbPutString("g2_y:");
 140:.\main.c      ****                 //usbPutString(string_packet);
 141:.\main.c      ****                 //usbPutString("\r\n");
 142:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 398              		.loc 1 142 0
 399 012c FA8B     		ldrh	r2, [r7, #30]
 400 012e 0B4B     		ldr	r3, .L21+12
 401 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 143:.\main.c      ****             break;
 402              		.loc 1 143 0
 403 0132 07E0     		b	.L1
 404              	.L19:
 144:.\main.c      ****             case 32:
 145:.\main.c      ****                 //usbPutString("g1_speed:");
 146:.\main.c      ****                 //usbPutString(string_packet);
 147:.\main.c      ****                 //usbPutString("\r\n");
 148:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 405              		.loc 1 148 0
 406 0134 FA8B     		ldrh	r2, [r7, #30]
 407 0136 094B     		ldr	r3, .L21+12
 408 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 149:.\main.c      ****             break;
 409              		.loc 1 149 0
 410 013a 03E0     		b	.L1
 411              	.L20:
 150:.\main.c      ****             case 34:
 151:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 412              		.loc 1 151 0
 413 013c FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 11


 414 013e 074B     		ldr	r3, .L21+12
 415 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 152:.\main.c      ****                 //usbPutString("g2_dir:");
 153:.\main.c      ****                 //usbPutString(string_packet);
 154:.\main.c      ****                 //usbPutString("\r\n");
 155:.\main.c      ****                 
 156:.\main.c      ****             break;
 416              		.loc 1 156 0
 417 0142 00BF     		nop
 418              	.L1:
 419              	.LBE2:
 157:.\main.c      ****         }
 158:.\main.c      ****     }
 159:.\main.c      **** }
 420              		.loc 1 159 0
 421 0144 2437     		adds	r7, r7, #36
 422              		.cfi_def_cfa_offset 4
 423 0146 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0148 5DF8047B 		ldr	r7, [sp], #4
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 014c 7047     		bx	lr
 430              	.L22:
 431 014e 00BF     		.align	2
 432              	.L21:
 433 0150 00000000 		.word	flag_rx
 434 0154 00000000 		.word	packet
 435 0158 00000000 		.word	byteCount
 436 015c 00000000 		.word	buffer_state
 437              		.cfi_endproc
 438              	.LFE63:
 439              		.size	handle_rx_binary, .-handle_rx_binary
 440              		.section	.text.setSpeed,"ax",%progbits
 441              		.align	2
 442              		.global	setSpeed
 443              		.thumb
 444              		.thumb_func
 445              		.type	setSpeed, %function
 446              	setSpeed:
 447              	.LFB64:
 160:.\main.c      **** 
 161:.\main.c      **** void setSpeed(int right, int left){
 448              		.loc 1 161 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 0002 83B0     		sub	sp, sp, #12
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 12


 461 0008 3960     		str	r1, [r7]
 162:.\main.c      ****     leftSpeedLimit = right;
 462              		.loc 1 162 0
 463 000a 7B68     		ldr	r3, [r7, #4]
 464 000c 9AB2     		uxth	r2, r3
 465 000e 054B     		ldr	r3, .L24
 466 0010 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****     rightSpeedLimit = left;
 467              		.loc 1 163 0
 468 0012 3B68     		ldr	r3, [r7]
 469 0014 9AB2     		uxth	r2, r3
 470 0016 044B     		ldr	r3, .L24+4
 471 0018 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      **** }
 472              		.loc 1 164 0
 473 001a 0C37     		adds	r7, r7, #12
 474              		.cfi_def_cfa_offset 4
 475 001c BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 001e 5DF8047B 		ldr	r7, [sp], #4
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 0022 7047     		bx	lr
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0024 00000000 		.word	leftSpeedLimit
 486 0028 00000000 		.word	rightSpeedLimit
 487              		.cfi_endproc
 488              	.LFE64:
 489              		.size	setSpeed, .-setSpeed
 490              		.section	.text.brakeLeft,"ax",%progbits
 491              		.align	2
 492              		.global	brakeLeft
 493              		.thumb
 494              		.thumb_func
 495              		.type	brakeLeft, %function
 496              	brakeLeft:
 497              	.LFB65:
 165:.\main.c      **** 
 166:.\main.c      **** void brakeLeft()
 167:.\main.c      **** {
 498              		.loc 1 167 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 168:.\main.c      ****     PWM_1_WriteCompare(0);
 508              		.loc 1 168 0
 509 0004 0020     		movs	r0, #0
 510 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 13


 169:.\main.c      ****     left_duty_cycle = 0;
 511              		.loc 1 169 0
 512 000a 024B     		ldr	r3, .L27
 513 000c 0022     		movs	r2, #0
 514 000e 1A80     		strh	r2, [r3]	@ movhi
 170:.\main.c      **** }
 515              		.loc 1 170 0
 516 0010 80BD     		pop	{r7, pc}
 517              	.L28:
 518 0012 00BF     		.align	2
 519              	.L27:
 520 0014 00000000 		.word	left_duty_cycle
 521              		.cfi_endproc
 522              	.LFE65:
 523              		.size	brakeLeft, .-brakeLeft
 524              		.section	.text.brakeRight,"ax",%progbits
 525              		.align	2
 526              		.global	brakeRight
 527              		.thumb
 528              		.thumb_func
 529              		.type	brakeRight, %function
 530              	brakeRight:
 531              	.LFB66:
 171:.\main.c      **** 
 172:.\main.c      **** void brakeRight()
 173:.\main.c      **** {
 532              		.loc 1 173 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 174:.\main.c      ****      PWM_2_WriteCompare(0);
 542              		.loc 1 174 0
 543 0004 0020     		movs	r0, #0
 544 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 175:.\main.c      ****      right_duty_cycle = 0;
 545              		.loc 1 175 0
 546 000a 024B     		ldr	r3, .L30
 547 000c 0022     		movs	r2, #0
 548 000e 1A80     		strh	r2, [r3]	@ movhi
 176:.\main.c      **** }
 549              		.loc 1 176 0
 550 0010 80BD     		pop	{r7, pc}
 551              	.L31:
 552 0012 00BF     		.align	2
 553              	.L30:
 554 0014 00000000 		.word	right_duty_cycle
 555              		.cfi_endproc
 556              	.LFE66:
 557              		.size	brakeRight, .-brakeRight
 558              		.section	.text.brakeMotor,"ax",%progbits
 559              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 14


 560              		.global	brakeMotor
 561              		.thumb
 562              		.thumb_func
 563              		.type	brakeMotor, %function
 564              	brakeMotor:
 565              	.LFB67:
 177:.\main.c      **** 
 178:.\main.c      **** void brakeMotor(){
 566              		.loc 1 178 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 00AF     		add	r7, sp, #0
 575              		.cfi_def_cfa_register 7
 179:.\main.c      ****     setSpeed(0, 0);
 576              		.loc 1 179 0
 577 0004 0020     		movs	r0, #0
 578 0006 0021     		movs	r1, #0
 579 0008 FFF7FEFF 		bl	setSpeed
 180:.\main.c      ****     brakeLeft();
 580              		.loc 1 180 0
 581 000c FFF7FEFF 		bl	brakeLeft
 181:.\main.c      ****     brakeRight();
 582              		.loc 1 181 0
 583 0010 FFF7FEFF 		bl	brakeRight
 182:.\main.c      **** }
 584              		.loc 1 182 0
 585 0014 80BD     		pop	{r7, pc}
 586              		.cfi_endproc
 587              	.LFE67:
 588              		.size	brakeMotor, .-brakeMotor
 589 0016 00BF     		.section	.text.driveForwards,"ax",%progbits
 590              		.align	2
 591              		.global	driveForwards
 592              		.thumb
 593              		.thumb_func
 594              		.type	driveForwards, %function
 595              	driveForwards:
 596              	.LFB68:
 183:.\main.c      **** 
 184:.\main.c      **** 
 185:.\main.c      **** void driveForwards()
 186:.\main.c      **** {
 597              		.loc 1 186 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 15


 187:.\main.c      ****     setSpeed(20, 20);
 607              		.loc 1 187 0
 608 0004 1420     		movs	r0, #20
 609 0006 1421     		movs	r1, #20
 610 0008 FFF7FEFF 		bl	setSpeed
 188:.\main.c      **** }
 611              		.loc 1 188 0
 612 000c 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE68:
 615              		.size	driveForwards, .-driveForwards
 616 000e 00BF     		.section	.text.turnLeft,"ax",%progbits
 617              		.align	2
 618              		.global	turnLeft
 619              		.thumb
 620              		.thumb_func
 621              		.type	turnLeft, %function
 622              	turnLeft:
 623              	.LFB69:
 189:.\main.c      **** 
 190:.\main.c      **** void turnLeft()
 191:.\main.c      **** {
 624              		.loc 1 191 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 192:.\main.c      ****     setSpeed(0,20);
 634              		.loc 1 192 0
 635 0004 0020     		movs	r0, #0
 636 0006 1421     		movs	r1, #20
 637 0008 FFF7FEFF 		bl	setSpeed
 193:.\main.c      **** }
 638              		.loc 1 193 0
 639 000c 80BD     		pop	{r7, pc}
 640              		.cfi_endproc
 641              	.LFE69:
 642              		.size	turnLeft, .-turnLeft
 643 000e 00BF     		.section	.text.turnRight,"ax",%progbits
 644              		.align	2
 645              		.global	turnRight
 646              		.thumb
 647              		.thumb_func
 648              		.type	turnRight, %function
 649              	turnRight:
 650              	.LFB70:
 194:.\main.c      **** 
 195:.\main.c      **** void turnRight()
 196:.\main.c      **** {
 651              		.loc 1 196 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 16


 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 197:.\main.c      ****     setSpeed(20,0);
 661              		.loc 1 197 0
 662 0004 1420     		movs	r0, #20
 663 0006 0021     		movs	r1, #0
 664 0008 FFF7FEFF 		bl	setSpeed
 198:.\main.c      **** }
 665              		.loc 1 198 0
 666 000c 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE70:
 669              		.size	turnRight, .-turnRight
 670 000e 00BF     		.section	.text.initTurnLeft,"ax",%progbits
 671              		.align	2
 672              		.global	initTurnLeft
 673              		.thumb
 674              		.thumb_func
 675              		.type	initTurnLeft, %function
 676              	initTurnLeft:
 677              	.LFB71:
 199:.\main.c      **** 
 200:.\main.c      **** void initTurnLeft(){
 678              		.loc 1 200 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 201:.\main.c      ****     Timer_2_Stop();
 688              		.loc 1 201 0
 689 0004 FFF7FEFF 		bl	Timer_2_Stop
 202:.\main.c      ****     movement_state = LTURN;
 690              		.loc 1 202 0
 691 0008 064B     		ldr	r3, .L37
 692 000a 0122     		movs	r2, #1
 693 000c 1A70     		strb	r2, [r3]
 203:.\main.c      ****     brakeLeft();
 694              		.loc 1 203 0
 695 000e FFF7FEFF 		bl	brakeLeft
 204:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 696              		.loc 1 204 0
 697 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 698 0016 0346     		mov	r3, r0
 699 0018 1A46     		mov	r2, r3
 700 001a 034B     		ldr	r3, .L37+4
 701 001c 1A80     		strh	r2, [r3]	@ movhi
 205:.\main.c      ****     Timer_2_Start();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 17


 702              		.loc 1 205 0
 703 001e FFF7FEFF 		bl	Timer_2_Start
 206:.\main.c      **** }
 704              		.loc 1 206 0
 705 0022 80BD     		pop	{r7, pc}
 706              	.L38:
 707              		.align	2
 708              	.L37:
 709 0024 00000000 		.word	movement_state
 710 0028 00000000 		.word	start_turn_count
 711              		.cfi_endproc
 712              	.LFE71:
 713              		.size	initTurnLeft, .-initTurnLeft
 714              		.section	.text.initTurnRight,"ax",%progbits
 715              		.align	2
 716              		.global	initTurnRight
 717              		.thumb
 718              		.thumb_func
 719              		.type	initTurnRight, %function
 720              	initTurnRight:
 721              	.LFB72:
 207:.\main.c      **** 
 208:.\main.c      **** void initTurnRight(){
 722              		.loc 1 208 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726 0000 80B5     		push	{r7, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 00AF     		add	r7, sp, #0
 731              		.cfi_def_cfa_register 7
 209:.\main.c      ****     Timer_2_Stop();
 732              		.loc 1 209 0
 733 0004 FFF7FEFF 		bl	Timer_2_Stop
 210:.\main.c      ****     movement_state = RTURN;
 734              		.loc 1 210 0
 735 0008 064B     		ldr	r3, .L40
 736 000a 0222     		movs	r2, #2
 737 000c 1A70     		strb	r2, [r3]
 211:.\main.c      ****     brakeRight();
 738              		.loc 1 211 0
 739 000e FFF7FEFF 		bl	brakeRight
 212:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 740              		.loc 1 212 0
 741 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 742 0016 0346     		mov	r3, r0
 743 0018 1A46     		mov	r2, r3
 744 001a 034B     		ldr	r3, .L40+4
 745 001c 1A80     		strh	r2, [r3]	@ movhi
 213:.\main.c      ****     Timer_2_Start();
 746              		.loc 1 213 0
 747 001e FFF7FEFF 		bl	Timer_2_Start
 214:.\main.c      **** }
 748              		.loc 1 214 0
 749 0022 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 18


 750              	.L41:
 751              		.align	2
 752              	.L40:
 753 0024 00000000 		.word	movement_state
 754 0028 00000000 		.word	start_turn_count
 755              		.cfi_endproc
 756              	.LFE72:
 757              		.size	initTurnRight, .-initTurnRight
 758              		.section	.text.initForward,"ax",%progbits
 759              		.align	2
 760              		.global	initForward
 761              		.thumb
 762              		.thumb_func
 763              		.type	initForward, %function
 764              	initForward:
 765              	.LFB73:
 215:.\main.c      **** 
 216:.\main.c      **** void initForward(){
 766              		.loc 1 216 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 217:.\main.c      ****     brakeMotor();
 776              		.loc 1 217 0
 777 0004 FFF7FEFF 		bl	brakeMotor
 218:.\main.c      ****     movement_state = DRIVE;
 778              		.loc 1 218 0
 779 0008 014B     		ldr	r3, .L43
 780 000a 0022     		movs	r2, #0
 781 000c 1A70     		strb	r2, [r3]
 219:.\main.c      **** }
 782              		.loc 1 219 0
 783 000e 80BD     		pop	{r7, pc}
 784              	.L44:
 785              		.align	2
 786              	.L43:
 787 0010 00000000 		.word	movement_state
 788              		.cfi_endproc
 789              	.LFE73:
 790              		.size	initForward, .-initForward
 791              		.section	.text.initBrake,"ax",%progbits
 792              		.align	2
 793              		.global	initBrake
 794              		.thumb
 795              		.thumb_func
 796              		.type	initBrake, %function
 797              	initBrake:
 798              	.LFB74:
 220:.\main.c      **** 
 221:.\main.c      **** void initBrake(){
 799              		.loc 1 221 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 19


 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
 222:.\main.c      ****     movement_state = STOPPED;
 809              		.loc 1 222 0
 810 0004 034B     		ldr	r3, .L46
 811 0006 0322     		movs	r2, #3
 812 0008 1A70     		strb	r2, [r3]
 223:.\main.c      **** }
 813              		.loc 1 223 0
 814 000a BD46     		mov	sp, r7
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 000c 5DF8047B 		ldr	r7, [sp], #4
 818              		.cfi_restore 7
 819              		.cfi_def_cfa_offset 0
 820 0010 7047     		bx	lr
 821              	.L47:
 822 0012 00BF     		.align	2
 823              	.L46:
 824 0014 00000000 		.word	movement_state
 825              		.cfi_endproc
 826              	.LFE74:
 827              		.size	initBrake, .-initBrake
 828              		.section	.text.reverseDirection,"ax",%progbits
 829              		.align	2
 830              		.global	reverseDirection
 831              		.thumb
 832              		.thumb_func
 833              		.type	reverseDirection, %function
 834              	reverseDirection:
 835              	.LFB75:
 224:.\main.c      **** 
 225:.\main.c      **** void reverseDirection()
 226:.\main.c      **** {
 836              		.loc 1 226 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840 0000 80B5     		push	{r7, lr}
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 00AF     		add	r7, sp, #0
 845              		.cfi_def_cfa_register 7
 227:.\main.c      ****     direction = !direction;
 846              		.loc 1 227 0
 847 0004 0A4B     		ldr	r3, .L49
 848 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0008 002B     		cmp	r3, #0
 850 000a 0CBF     		ite	eq
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 20


 851 000c 0123     		moveq	r3, #1
 852 000e 0023     		movne	r3, #0
 853 0010 DBB2     		uxtb	r3, r3
 854 0012 1A46     		mov	r2, r3
 855 0014 064B     		ldr	r3, .L49
 856 0016 1A70     		strb	r2, [r3]
 228:.\main.c      ****     M1_IN2_Write(direction);
 857              		.loc 1 228 0
 858 0018 054B     		ldr	r3, .L49
 859 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 001c 1846     		mov	r0, r3
 861 001e FFF7FEFF 		bl	M1_IN2_Write
 229:.\main.c      ****     M2_IN2_Write(direction);
 862              		.loc 1 229 0
 863 0022 034B     		ldr	r3, .L49
 864 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 0026 1846     		mov	r0, r3
 866 0028 FFF7FEFF 		bl	M2_IN2_Write
 230:.\main.c      **** }
 867              		.loc 1 230 0
 868 002c 80BD     		pop	{r7, pc}
 869              	.L50:
 870 002e 00BF     		.align	2
 871              	.L49:
 872 0030 00000000 		.word	direction
 873              		.cfi_endproc
 874              	.LFE75:
 875              		.size	reverseDirection, .-reverseDirection
 876              		.section	.text.rxInt,"ax",%progbits
 877              		.align	2
 878              		.global	rxInt
 879              		.thumb
 880              		.thumb_func
 881              		.type	rxInt, %function
 882              	rxInt:
 883              	.LFB76:
 231:.\main.c      **** 
 232:.\main.c      **** //Binary RF Data
 233:.\main.c      **** CY_ISR(rxInt){
 884              		.loc 1 233 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 8
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 B0B5     		push	{r4, r5, r7, lr}
 889              		.cfi_def_cfa_offset 16
 890              		.cfi_offset 4, -16
 891              		.cfi_offset 5, -12
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 24
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 234:.\main.c      ****     char rf_char = UART_GetChar();
 898              		.loc 1 234 0
 899 0006 FFF7FEFF 		bl	UART_GetChar
 900 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 21


 901 000c FB71     		strb	r3, [r7, #7]
 235:.\main.c      ****     if(rf_char == SOP){
 902              		.loc 1 235 0
 903 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 904 0010 AA2B     		cmp	r3, #170
 905 0012 1CD1     		bne	.L52
 236:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 237:.\main.c      ****             if(byteCount == 34)
 906              		.loc 1 237 0
 907 0014 1B4B     		ldr	r3, .L56
 908 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 0018 222B     		cmp	r3, #34
 910 001a 11D1     		bne	.L53
 238:.\main.c      ****             {
 239:.\main.c      ****                 system_state = buffer_state;
 911              		.loc 1 239 0
 912 001c 1A4B     		ldr	r3, .L56+4
 913 001e 1B4A     		ldr	r2, .L56+8
 914 0020 1568     		ldr	r5, [r2]	@ unaligned
 915 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 916 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 917 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 918 0028 1D60     		str	r5, [r3]	@ unaligned
 919 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 920 002c 9860     		str	r0, [r3, #8]	@ unaligned
 921 002e D960     		str	r1, [r3, #12]	@ unaligned
 922 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 923 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 924 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 925 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 926 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 927 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 928 003c 9861     		str	r0, [r3, #24]	@ unaligned
 929 003e D961     		str	r1, [r3, #28]	@ unaligned
 930              	.L53:
 240:.\main.c      ****             }
 241:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 931              		.loc 1 241 0
 932 0040 104B     		ldr	r3, .L56
 933 0042 0222     		movs	r2, #2
 934 0044 1A70     		strb	r2, [r3]
 242:.\main.c      ****             flag_rx = 0;
 935              		.loc 1 242 0
 936 0046 124B     		ldr	r3, .L56+12
 937 0048 0022     		movs	r2, #0
 938 004a 1A70     		strb	r2, [r3]
 939 004c 16E0     		b	.L51
 940              	.L52:
 243:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 244:.\main.c      ****         }
 245:.\main.c      ****         else
 246:.\main.c      ****         {
 247:.\main.c      ****             packet[byteCount % 2] = rf_char;
 941              		.loc 1 247 0
 942 004e 0D4B     		ldr	r3, .L56
 943 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944 0052 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 22


 945 0056 0F49     		ldr	r1, .L56+16
 946 0058 FA79     		ldrb	r2, [r7, #7]
 947 005a CA54     		strb	r2, [r1, r3]
 248:.\main.c      ****            
 249:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 948              		.loc 1 249 0
 949 005c 094B     		ldr	r3, .L56
 950 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 0060 03F00103 		and	r3, r3, #1
 952 0064 DBB2     		uxtb	r3, r3
 953 0066 002B     		cmp	r3, #0
 954 0068 02D0     		beq	.L55
 250:.\main.c      ****             {
 251:.\main.c      ****                 flag_rx = 1;
 955              		.loc 1 251 0
 956 006a 094B     		ldr	r3, .L56+12
 957 006c 0122     		movs	r2, #1
 958 006e 1A70     		strb	r2, [r3]
 959              	.L55:
 252:.\main.c      ****             }
 253:.\main.c      ****             byteCount = (byteCount + 1);
 960              		.loc 1 253 0
 961 0070 044B     		ldr	r3, .L56
 962 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 0074 0133     		adds	r3, r3, #1
 964 0076 DAB2     		uxtb	r2, r3
 965 0078 024B     		ldr	r3, .L56
 966 007a 1A70     		strb	r2, [r3]
 967              	.L51:
 254:.\main.c      ****         }
 255:.\main.c      **** }
 968              		.loc 1 255 0
 969 007c 0837     		adds	r7, r7, #8
 970              		.cfi_def_cfa_offset 16
 971 007e BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0080 B0BD     		pop	{r4, r5, r7, pc}
 975              	.L57:
 976 0082 00BF     		.align	2
 977              	.L56:
 978 0084 00000000 		.word	byteCount
 979 0088 00000000 		.word	system_state
 980 008c 00000000 		.word	buffer_state
 981 0090 00000000 		.word	flag_rx
 982 0094 00000000 		.word	packet
 983              		.cfi_endproc
 984              	.LFE76:
 985              		.size	rxInt, .-rxInt
 986              		.section	.text.BT_rxInt,"ax",%progbits
 987              		.align	2
 988              		.global	BT_rxInt
 989              		.thumb
 990              		.thumb_func
 991              		.type	BT_rxInt, %function
 992              	BT_rxInt:
 993              	.LFB77:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 23


 256:.\main.c      **** 
 257:.\main.c      **** CY_ISR(BT_rxInt)
 258:.\main.c      **** {
 994              		.loc 1 258 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 259:.\main.c      ****     char rf_char = UART_GetChar();
 1006              		.loc 1 259 0
 1007 0006 FFF7FEFF 		bl	UART_GetChar
 1008 000a 0346     		mov	r3, r0
 1009 000c FB71     		strb	r3, [r7, #7]
 260:.\main.c      ****     switch(rf_char){
 1010              		.loc 1 260 0
 1011 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1012 0010 613B     		subs	r3, r3, #97
 1013 0012 162B     		cmp	r3, #22
 1014 0014 3FD8     		bhi	.L58
 1015 0016 01A2     		adr	r2, .L61
 1016 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1017              		.p2align 2
 1018              	.L61:
 1019 001c 79000000 		.word	.L60+1
 1020 0020 97000000 		.word	.L58+1
 1021 0024 97000000 		.word	.L58+1
 1022 0028 8B000000 		.word	.L62+1
 1023 002c 97000000 		.word	.L58+1
 1024 0030 91000000 		.word	.L63+1
 1025 0034 97000000 		.word	.L58+1
 1026 0038 97000000 		.word	.L58+1
 1027 003c 97000000 		.word	.L58+1
 1028 0040 97000000 		.word	.L58+1
 1029 0044 97000000 		.word	.L58+1
 1030 0048 97000000 		.word	.L58+1
 1031 004c 97000000 		.word	.L58+1
 1032 0050 97000000 		.word	.L58+1
 1033 0054 97000000 		.word	.L58+1
 1034 0058 97000000 		.word	.L58+1
 1035 005c 97000000 		.word	.L58+1
 1036 0060 97000000 		.word	.L58+1
 1037 0064 85000000 		.word	.L64+1
 1038 0068 97000000 		.word	.L58+1
 1039 006c 97000000 		.word	.L58+1
 1040 0070 97000000 		.word	.L58+1
 1041 0074 7F000000 		.word	.L65+1
 1042              		.p2align 1
 1043              	.L60:
 261:.\main.c      ****     case 'a':
 262:.\main.c      ****         initTurnLeft();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 24


 1044              		.loc 1 262 0
 1045 0078 FFF7FEFF 		bl	initTurnLeft
 263:.\main.c      ****         break;
 1046              		.loc 1 263 0
 1047 007c 0BE0     		b	.L58
 1048              	.L65:
 264:.\main.c      ****     case 'w':
 265:.\main.c      ****         initForward();
 1049              		.loc 1 265 0
 1050 007e FFF7FEFF 		bl	initForward
 266:.\main.c      ****         break;
 1051              		.loc 1 266 0
 1052 0082 08E0     		b	.L58
 1053              	.L64:
 267:.\main.c      ****     case 's': 
 268:.\main.c      ****         reverseDirection();
 1054              		.loc 1 268 0
 1055 0084 FFF7FEFF 		bl	reverseDirection
 269:.\main.c      ****         break;
 1056              		.loc 1 269 0
 1057 0088 05E0     		b	.L58
 1058              	.L62:
 270:.\main.c      ****     case 'd':
 271:.\main.c      ****         initTurnRight();
 1059              		.loc 1 271 0
 1060 008a FFF7FEFF 		bl	initTurnRight
 272:.\main.c      ****         break;
 1061              		.loc 1 272 0
 1062 008e 02E0     		b	.L58
 1063              	.L63:
 273:.\main.c      ****     case 'f':
 274:.\main.c      ****         initBrake();
 1064              		.loc 1 274 0
 1065 0090 FFF7FEFF 		bl	initBrake
 275:.\main.c      ****         break;
 1066              		.loc 1 275 0
 1067 0094 00BF     		nop
 1068              	.L58:
 276:.\main.c      ****     }
 277:.\main.c      **** }
 1069              		.loc 1 277 0
 1070 0096 0837     		adds	r7, r7, #8
 1071              		.cfi_def_cfa_offset 8
 1072 0098 BD46     		mov	sp, r7
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 009a 80BD     		pop	{r7, pc}
 1076              		.cfi_endproc
 1077              	.LFE77:
 1078              		.size	BT_rxInt, .-BT_rxInt
 1079              		.section	.text.BT_txInt,"ax",%progbits
 1080              		.align	2
 1081              		.global	BT_txInt
 1082              		.thumb
 1083              		.thumb_func
 1084              		.type	BT_txInt, %function
 1085              	BT_txInt:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 25


 1086              	.LFB78:
 278:.\main.c      **** 
 279:.\main.c      **** //BT
 280:.\main.c      **** CY_ISR(BT_txInt)
 281:.\main.c      **** {
 1087              		.loc 1 281 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 1, uses_anonymous_args = 0
 1091              		@ link register save eliminated.
 1092 0000 80B4     		push	{r7}
 1093              		.cfi_def_cfa_offset 4
 1094              		.cfi_offset 7, -4
 1095 0002 00AF     		add	r7, sp, #0
 1096              		.cfi_def_cfa_register 7
 282:.\main.c      ****     
 283:.\main.c      **** }
 1097              		.loc 1 283 0
 1098 0004 BD46     		mov	sp, r7
 1099              		.cfi_def_cfa_register 13
 1100              		@ sp needed
 1101 0006 5DF8047B 		ldr	r7, [sp], #4
 1102              		.cfi_restore 7
 1103              		.cfi_def_cfa_offset 0
 1104 000a 7047     		bx	lr
 1105              		.cfi_endproc
 1106              	.LFE78:
 1107              		.size	BT_txInt, .-BT_txInt
 1108              		.section	.text.adc_isr,"ax",%progbits
 1109              		.align	2
 1110              		.global	adc_isr
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	adc_isr, %function
 1114              	adc_isr:
 1115              	.LFB79:
 284:.\main.c      **** 
 285:.\main.c      **** //ADC:
 286:.\main.c      **** CY_ISR (adc_isr)
 287:.\main.c      **** {
 1116              		.loc 1 287 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 00AF     		add	r7, sp, #0
 1125              		.cfi_def_cfa_register 7
 288:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 289:.\main.c      ****     adc_result = ADC_GetResult16();
 1126              		.loc 1 289 0
 1127 0004 FFF7FEFF 		bl	ADC_GetResult16
 1128 0008 0346     		mov	r3, r0
 1129 000a 1A46     		mov	r2, r3
 1130 000c 044B     		ldr	r3, .L68
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 26


 1131 000e 1A80     		strh	r2, [r3]	@ movhi
 290:.\main.c      ****     flag_receive_ADC = 1;
 1132              		.loc 1 290 0
 1133 0010 044B     		ldr	r3, .L68+4
 1134 0012 0122     		movs	r2, #1
 1135 0014 1A70     		strb	r2, [r3]
 291:.\main.c      ****     flag_print_rf = 1;
 1136              		.loc 1 291 0
 1137 0016 044B     		ldr	r3, .L68+8
 1138 0018 0122     		movs	r2, #1
 1139 001a 1A70     		strb	r2, [r3]
 292:.\main.c      ****     //LED_Write(~LED_Read());
 293:.\main.c      **** }
 1140              		.loc 1 293 0
 1141 001c 80BD     		pop	{r7, pc}
 1142              	.L69:
 1143 001e 00BF     		.align	2
 1144              	.L68:
 1145 0020 00000000 		.word	adc_result
 1146 0024 00000000 		.word	flag_receive_ADC
 1147 0028 00000000 		.word	flag_print_rf
 1148              		.cfi_endproc
 1149              	.LFE79:
 1150              		.size	adc_isr, .-adc_isr
 1151              		.section	.text.isr_quad1,"ax",%progbits
 1152              		.align	2
 1153              		.global	isr_quad1
 1154              		.thumb
 1155              		.thumb_func
 1156              		.type	isr_quad1, %function
 1157              	isr_quad1:
 1158              	.LFB80:
 294:.\main.c      **** 
 295:.\main.c      **** CY_ISR (isr_quad1)
 296:.\main.c      **** {
 1159              		.loc 1 296 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 1, uses_anonymous_args = 0
 1163 0000 80B5     		push	{r7, lr}
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 297:.\main.c      ****     //LED_Write(~LED_Read());
 298:.\main.c      ****     last_quad_count1 = quad_count1;
 1169              		.loc 1 298 0
 1170 0004 244B     		ldr	r3, .L72
 1171 0006 1A88     		ldrh	r2, [r3]
 1172 0008 244B     		ldr	r3, .L72+4
 1173 000a 1A80     		strh	r2, [r3]	@ movhi
 299:.\main.c      ****     last_quad_count2 = quad_count2;
 1174              		.loc 1 299 0
 1175 000c 244B     		ldr	r3, .L72+8
 1176 000e 1A88     		ldrh	r2, [r3]
 1177 0010 244B     		ldr	r3, .L72+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 27


 1178 0012 1A80     		strh	r2, [r3]	@ movhi
 300:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1179              		.loc 1 300 0
 1180 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1181 0018 0346     		mov	r3, r0
 1182 001a 1A46     		mov	r2, r3
 1183 001c 1E4B     		ldr	r3, .L72
 1184 001e 1A80     		strh	r2, [r3]	@ movhi
 301:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1185              		.loc 1 301 0
 1186 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1187 0024 0346     		mov	r3, r0
 1188 0026 1A46     		mov	r2, r3
 1189 0028 1D4B     		ldr	r3, .L72+8
 1190 002a 1A80     		strh	r2, [r3]	@ movhi
 302:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1191              		.loc 1 302 0
 1192 002c 1A4B     		ldr	r3, .L72
 1193 002e 1B88     		ldrh	r3, [r3]
 1194 0030 9AB2     		uxth	r2, r3
 1195 0032 1A4B     		ldr	r3, .L72+4
 1196 0034 1B88     		ldrh	r3, [r3]
 1197 0036 9BB2     		uxth	r3, r3
 1198 0038 D31A     		subs	r3, r2, r3
 1199 003a 9BB2     		uxth	r3, r3
 1200 003c 9AB2     		uxth	r2, r3
 1201 003e 1A4B     		ldr	r3, .L72+16
 1202 0040 1A80     		strh	r2, [r3]	@ movhi
 303:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1203              		.loc 1 303 0
 1204 0042 174B     		ldr	r3, .L72+8
 1205 0044 1B88     		ldrh	r3, [r3]
 1206 0046 9AB2     		uxth	r2, r3
 1207 0048 164B     		ldr	r3, .L72+12
 1208 004a 1B88     		ldrh	r3, [r3]
 1209 004c 9BB2     		uxth	r3, r3
 1210 004e D31A     		subs	r3, r2, r3
 1211 0050 9BB2     		uxth	r3, r3
 1212 0052 9AB2     		uxth	r2, r3
 1213 0054 154B     		ldr	r3, .L72+20
 1214 0056 1A80     		strh	r2, [r3]	@ movhi
 304:.\main.c      ****     
 305:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1215              		.loc 1 305 0
 1216 0058 0F4B     		ldr	r3, .L72
 1217 005a 1B88     		ldrh	r3, [r3]
 1218 005c 1BB2     		sxth	r3, r3
 1219 005e 40F6B832 		movw	r2, #3000
 1220 0062 9342     		cmp	r3, r2
 1221 0064 13DD     		ble	.L71
 1222              		.loc 1 305 0 is_stmt 0 discriminator 1
 1223 0066 124B     		ldr	r3, .L72+24
 1224 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 006a 012B     		cmp	r3, #1
 1226 006c 0FD0     		beq	.L71
 1227              		.loc 1 305 0 discriminator 2
 1228 006e 104B     		ldr	r3, .L72+24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 28


 1229 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0072 022B     		cmp	r3, #2
 1231 0074 0BD0     		beq	.L71
 306:.\main.c      ****     {
 307:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1232              		.loc 1 307 0 is_stmt 1
 1233 0076 0020     		movs	r0, #0
 1234 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 308:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1235              		.loc 1 308 0
 1236 007c 0020     		movs	r0, #0
 1237 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 309:.\main.c      ****         quad_count1 = 0;
 1238              		.loc 1 309 0
 1239 0082 054B     		ldr	r3, .L72
 1240 0084 0022     		movs	r2, #0
 1241 0086 1A80     		strh	r2, [r3]	@ movhi
 310:.\main.c      ****         quad_count2 = 0;
 1242              		.loc 1 310 0
 1243 0088 054B     		ldr	r3, .L72+8
 1244 008a 0022     		movs	r2, #0
 1245 008c 1A80     		strh	r2, [r3]	@ movhi
 1246              	.L71:
 311:.\main.c      ****     }
 312:.\main.c      **** 
 313:.\main.c      ****     flag_calc_wheelspeed = 1;
 1247              		.loc 1 313 0
 1248 008e 094B     		ldr	r3, .L72+28
 1249 0090 0122     		movs	r2, #1
 1250 0092 1A70     		strb	r2, [r3]
 314:.\main.c      **** }
 1251              		.loc 1 314 0
 1252 0094 80BD     		pop	{r7, pc}
 1253              	.L73:
 1254 0096 00BF     		.align	2
 1255              	.L72:
 1256 0098 00000000 		.word	quad_count1
 1257 009c 00000000 		.word	last_quad_count1
 1258 00a0 00000000 		.word	quad_count2
 1259 00a4 00000000 		.word	last_quad_count2
 1260 00a8 00000000 		.word	quad_diff1
 1261 00ac 00000000 		.word	quad_diff2
 1262 00b0 00000000 		.word	movement_state
 1263 00b4 00000000 		.word	flag_calc_wheelspeed
 1264              		.cfi_endproc
 1265              	.LFE80:
 1266              		.size	isr_quad1, .-isr_quad1
 1267              		.section	.text.isr_turn_timer,"ax",%progbits
 1268              		.align	2
 1269              		.global	isr_turn_timer
 1270              		.thumb
 1271              		.thumb_func
 1272              		.type	isr_turn_timer, %function
 1273              	isr_turn_timer:
 1274              	.LFB81:
 315:.\main.c      **** 
 316:.\main.c      **** CY_ISR(isr_turn_timer)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 29


 317:.\main.c      **** {
 1275              		.loc 1 317 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              		.cfi_def_cfa_offset 8
 1281              		.cfi_offset 7, -8
 1282              		.cfi_offset 14, -4
 1283 0002 00AF     		add	r7, sp, #0
 1284              		.cfi_def_cfa_register 7
 318:.\main.c      ****     if(movement_state == LTURN)
 1285              		.loc 1 318 0
 1286 0004 184B     		ldr	r3, .L78
 1287 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1288 0008 012B     		cmp	r3, #1
 1289 000a 14D1     		bne	.L75
 319:.\main.c      ****     {
 320:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1290              		.loc 1 320 0
 1291 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1292 0010 0346     		mov	r3, r0
 1293 0012 1A46     		mov	r2, r3
 1294 0014 154B     		ldr	r3, .L78+4
 1295 0016 1B88     		ldrh	r3, [r3]
 1296 0018 1BB2     		sxth	r3, r3
 1297 001a D31A     		subs	r3, r2, r3
 1298 001c 002B     		cmp	r3, #0
 1299 001e B8BF     		it	lt
 1300 0020 5B42     		rsblt	r3, r3, #0
 1301 0022 CF2B     		cmp	r3, #207
 1302 0024 1FDD     		ble	.L74
 321:.\main.c      ****         {
 322:.\main.c      ****             //movement_state = STOPPED;
 323:.\main.c      ****             brakeMotor();
 1303              		.loc 1 323 0
 1304 0026 FFF7FEFF 		bl	brakeMotor
 324:.\main.c      ****             movement_state = DRIVE;
 1305              		.loc 1 324 0
 1306 002a 0F4B     		ldr	r3, .L78
 1307 002c 0022     		movs	r2, #0
 1308 002e 1A70     		strb	r2, [r3]
 325:.\main.c      ****             Timer_2_Stop();
 1309              		.loc 1 325 0
 1310 0030 FFF7FEFF 		bl	Timer_2_Stop
 1311 0034 17E0     		b	.L74
 1312              	.L75:
 326:.\main.c      ****         }
 327:.\main.c      ****     }
 328:.\main.c      ****     else if (movement_state == RTURN)
 1313              		.loc 1 328 0
 1314 0036 0C4B     		ldr	r3, .L78
 1315 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 003a 022B     		cmp	r3, #2
 1317 003c 13D1     		bne	.L74
 329:.\main.c      ****     {
 330:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 30


 1318              		.loc 1 330 0
 1319 003e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1320 0042 0346     		mov	r3, r0
 1321 0044 1A46     		mov	r2, r3
 1322 0046 094B     		ldr	r3, .L78+4
 1323 0048 1B88     		ldrh	r3, [r3]
 1324 004a 1BB2     		sxth	r3, r3
 1325 004c D31A     		subs	r3, r2, r3
 1326 004e 002B     		cmp	r3, #0
 1327 0050 B8BF     		it	lt
 1328 0052 5B42     		rsblt	r3, r3, #0
 1329 0054 CF2B     		cmp	r3, #207
 1330 0056 06DD     		ble	.L74
 331:.\main.c      ****         {
 332:.\main.c      ****             //movement_state = STOPPED;
 333:.\main.c      ****             brakeMotor();
 1331              		.loc 1 333 0
 1332 0058 FFF7FEFF 		bl	brakeMotor
 334:.\main.c      ****             movement_state = DRIVE;
 1333              		.loc 1 334 0
 1334 005c 024B     		ldr	r3, .L78
 1335 005e 0022     		movs	r2, #0
 1336 0060 1A70     		strb	r2, [r3]
 335:.\main.c      ****             Timer_2_Stop();
 1337              		.loc 1 335 0
 1338 0062 FFF7FEFF 		bl	Timer_2_Stop
 1339              	.L74:
 336:.\main.c      ****         }
 337:.\main.c      ****     }
 338:.\main.c      **** }
 1340              		.loc 1 338 0
 1341 0066 80BD     		pop	{r7, pc}
 1342              	.L79:
 1343              		.align	2
 1344              	.L78:
 1345 0068 00000000 		.word	movement_state
 1346 006c 00000000 		.word	start_turn_count
 1347              		.cfi_endproc
 1348              	.LFE81:
 1349              		.size	isr_turn_timer, .-isr_turn_timer
 1350              		.section	.text.Stop_on_line,"ax",%progbits
 1351              		.align	2
 1352              		.global	Stop_on_line
 1353              		.thumb
 1354              		.thumb_func
 1355              		.type	Stop_on_line, %function
 1356              	Stop_on_line:
 1357              	.LFB82:
 339:.\main.c      **** 
 340:.\main.c      **** 
 341:.\main.c      **** CY_ISR (Stop_on_line)
 342:.\main.c      **** {
 1358              		.loc 1 342 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362              		@ link register save eliminated.
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 31


 1363 0000 80B4     		push	{r7}
 1364              		.cfi_def_cfa_offset 4
 1365              		.cfi_offset 7, -4
 1366 0002 00AF     		add	r7, sp, #0
 1367              		.cfi_def_cfa_register 7
 343:.\main.c      ****     //movement_state = STOPPED;
 344:.\main.c      ****     if(movement_state != DRIVE) return;
 1368              		.loc 1 344 0
 1369 0004 044B     		ldr	r3, .L82
 1370 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 0008 002B     		cmp	r3, #0
 1372 000a 00D0     		beq	.L80
 1373 000c 00BF     		nop
 1374              	.L80:
 345:.\main.c      ****     //initTurnLeft();
 346:.\main.c      **** }
 1375              		.loc 1 346 0
 1376 000e BD46     		mov	sp, r7
 1377              		.cfi_def_cfa_register 13
 1378              		@ sp needed
 1379 0010 5DF8047B 		ldr	r7, [sp], #4
 1380              		.cfi_restore 7
 1381              		.cfi_def_cfa_offset 0
 1382 0014 7047     		bx	lr
 1383              	.L83:
 1384 0016 00BF     		.align	2
 1385              	.L82:
 1386 0018 00000000 		.word	movement_state
 1387              		.cfi_endproc
 1388              	.LFE82:
 1389              		.size	Stop_on_line, .-Stop_on_line
 1390              		.section	.rodata
 1391              		.align	2
 1392              	.LC0:
 1393 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1393      74696E67 
 1393      20726F62 
 1393      6F74210D 
 1393      0A00
 1394              		.section	.text.button,"ax",%progbits
 1395              		.align	2
 1396              		.global	button
 1397              		.thumb
 1398              		.thumb_func
 1399              		.type	button, %function
 1400              	button:
 1401              	.LFB83:
 347:.\main.c      **** 
 348:.\main.c      **** CY_ISR (button)
 349:.\main.c      **** {
 1402              		.loc 1 349 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406 0000 80B5     		push	{r7, lr}
 1407              		.cfi_def_cfa_offset 8
 1408              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 32


 1409              		.cfi_offset 14, -4
 1410 0002 00AF     		add	r7, sp, #0
 1411              		.cfi_def_cfa_register 7
 350:.\main.c      ****     if(BT_ENABLED)
 351:.\main.c      ****     {
 352:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1412              		.loc 1 352 0
 1413 0004 0348     		ldr	r0, .L85
 1414 0006 FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****     }
 354:.\main.c      ****     movement_state = DRIVE;
 1415              		.loc 1 354 0
 1416 000a 034B     		ldr	r3, .L85+4
 1417 000c 0022     		movs	r2, #0
 1418 000e 1A70     		strb	r2, [r3]
 355:.\main.c      **** }
 1419              		.loc 1 355 0
 1420 0010 80BD     		pop	{r7, pc}
 1421              	.L86:
 1422 0012 00BF     		.align	2
 1423              	.L85:
 1424 0014 00000000 		.word	.LC0
 1425 0018 00000000 		.word	movement_state
 1426              		.cfi_endproc
 1427              	.LFE83:
 1428              		.size	button, .-button
 1429              		.section	.text.isr_adcTimer,"ax",%progbits
 1430              		.align	2
 1431              		.global	isr_adcTimer
 1432              		.thumb
 1433              		.thumb_func
 1434              		.type	isr_adcTimer, %function
 1435              	isr_adcTimer:
 1436              	.LFB84:
 356:.\main.c      **** 
 357:.\main.c      **** CY_ISR(isr_adcTimer)
 358:.\main.c      **** {
 1437              		.loc 1 358 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 1, uses_anonymous_args = 0
 1441 0000 80B5     		push	{r7, lr}
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 7, -8
 1444              		.cfi_offset 14, -4
 1445 0002 00AF     		add	r7, sp, #0
 1446              		.cfi_def_cfa_register 7
 359:.\main.c      ****     ADC_StartConvert();
 1447              		.loc 1 359 0
 1448 0004 FFF7FEFF 		bl	ADC_StartConvert
 360:.\main.c      **** }
 1449              		.loc 1 360 0
 1450 0008 80BD     		pop	{r7, pc}
 1451              		.cfi_endproc
 1452              	.LFE84:
 1453              		.size	isr_adcTimer, .-isr_adcTimer
 1454 000a 00BF     		.section	.rodata
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 33


 1455 0012 0000     		.align	2
 1456              	.LC1:
 1457 0014 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
 1457      20636F75 
 1457      6E742031 
 1457      2069733A 
 1457      2025640A 
 1458 002a 0000     		.align	2
 1459              	.LC2:
 1460 002c 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 1460      20636F75 
 1460      6E742032 
 1460      2069733A 
 1460      2025640A 
 1461              		.global	__aeabi_i2d
 1462              		.global	__aeabi_dmul
 1463              		.global	__aeabi_d2iz
 1464              		.section	.text.Quad_Dec_response,"ax",%progbits
 1465              		.align	2
 1466              		.global	Quad_Dec_response
 1467              		.thumb
 1468              		.thumb_func
 1469              		.type	Quad_Dec_response, %function
 1470              	Quad_Dec_response:
 1471              	.LFB85:
 361:.\main.c      **** 
 362:.\main.c      **** void Quad_Dec_response()
 363:.\main.c      **** {
 1472              		.loc 1 363 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 144
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 B0B5     		push	{r4, r5, r7, lr}
 1477              		.cfi_def_cfa_offset 16
 1478              		.cfi_offset 4, -16
 1479              		.cfi_offset 5, -12
 1480              		.cfi_offset 7, -8
 1481              		.cfi_offset 14, -4
 1482 0002 A4B0     		sub	sp, sp, #144
 1483              		.cfi_def_cfa_offset 160
 1484 0004 00AF     		add	r7, sp, #0
 1485              		.cfi_def_cfa_register 7
 364:.\main.c      ****     //Check if the flag has been set
 365:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1486              		.loc 1 365 0
 1487 0006 6B4B     		ldr	r3, .L95
 1488 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 000a 002B     		cmp	r3, #0
 1490 000c 00F0CE80 		beq	.L88
 366:.\main.c      ****     flag_calc_wheelspeed = 0;
 1491              		.loc 1 366 0
 1492 0010 684B     		ldr	r3, .L95
 1493 0012 0022     		movs	r2, #0
 1494 0014 1A70     		strb	r2, [r3]
 367:.\main.c      ****     
 368:.\main.c      ****     char wheel_1_str [64];
 369:.\main.c      ****     char wheel_2_str [64];
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 34


 370:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 1495              		.loc 1 370 0
 1496 0016 684B     		ldr	r3, .L95+4
 1497 0018 1B88     		ldrh	r3, [r3]
 1498 001a 1BB2     		sxth	r3, r3
 1499 001c 07F14402 		add	r2, r7, #68
 1500 0020 1046     		mov	r0, r2
 1501 0022 6649     		ldr	r1, .L95+8
 1502 0024 1A46     		mov	r2, r3
 1503 0026 FFF7FEFF 		bl	sprintf
 371:.\main.c      ****     //usbPutString(wheel_1_str);
 372:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 1504              		.loc 1 372 0
 1505 002a 654B     		ldr	r3, .L95+12
 1506 002c 1B88     		ldrh	r3, [r3]
 1507 002e 1BB2     		sxth	r3, r3
 1508 0030 3A1D     		adds	r2, r7, #4
 1509 0032 1046     		mov	r0, r2
 1510 0034 6349     		ldr	r1, .L95+16
 1511 0036 1A46     		mov	r2, r3
 1512 0038 FFF7FEFF 		bl	sprintf
 373:.\main.c      ****     
 374:.\main.c      ****     //usbPutString(wheel_2_str);
 375:.\main.c      ****     
 376:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1513              		.loc 1 376 0
 1514 003c 5E4B     		ldr	r3, .L95+4
 1515 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1516 0040 A7F88E30 		strh	r3, [r7, #142]	@ movhi
 377:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1517              		.loc 1 377 0
 1518 0044 5E4B     		ldr	r3, .L95+12
 1519 0046 1B88     		ldrh	r3, [r3]	@ movhi
 1520 0048 A7F88C30 		strh	r3, [r7, #140]	@ movhi
 378:.\main.c      **** 
 379:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1521              		.loc 1 379 0
 1522 004c 5E4B     		ldr	r3, .L95+20
 1523 004e 1B88     		ldrh	r3, [r3]
 1524 0050 1AB2     		sxth	r2, r3
 1525 0052 B7F98E30 		ldrsh	r3, [r7, #142]
 1526 0056 002B     		cmp	r3, #0
 1527 0058 B8BF     		it	lt
 1528 005a 5B42     		rsblt	r3, r3, #0
 1529 005c D31A     		subs	r3, r2, r3
 1530 005e C7F88830 		str	r3, [r7, #136]
 380:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1531              		.loc 1 380 0
 1532 0062 D7F88830 		ldr	r3, [r7, #136]
 1533 0066 83EAE372 		eor	r2, r3, r3, asr #31
 1534 006a A2EBE372 		sub	r2, r2, r3, asr #31
 1535 006e D7F88830 		ldr	r3, [r7, #136]
 1536 0072 92FBF3F3 		sdiv	r3, r2, r3
 1537 0076 1846     		mov	r0, r3
 1538 0078 FFF7FEFF 		bl	__aeabi_i2d
 1539 007c 0446     		mov	r4, r0
 1540 007e 0D46     		mov	r5, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 35


 1541 0080 D7F88830 		ldr	r3, [r7, #136]
 1542 0084 002B     		cmp	r3, #0
 1543 0086 B8BF     		it	lt
 1544 0088 5B42     		rsblt	r3, r3, #0
 1545 008a 1846     		mov	r0, r3
 1546 008c FFF7FEFF 		bl	__aeabi_i2d
 1547 0090 0246     		mov	r2, r0
 1548 0092 0B46     		mov	r3, r1
 1549 0094 1046     		mov	r0, r2
 1550 0096 1946     		mov	r1, r3
 1551 0098 FFF7FEFF 		bl	sqrt
 1552 009c 0246     		mov	r2, r0
 1553 009e 0B46     		mov	r3, r1
 1554 00a0 2046     		mov	r0, r4
 1555 00a2 2946     		mov	r1, r5
 1556 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1557 00a8 0246     		mov	r2, r0
 1558 00aa 0B46     		mov	r3, r1
 1559 00ac 1046     		mov	r0, r2
 1560 00ae 1946     		mov	r1, r3
 1561 00b0 FFF7FEFF 		bl	__aeabi_d2iz
 1562 00b4 0346     		mov	r3, r0
 1563 00b6 C7F88430 		str	r3, [r7, #132]
 381:.\main.c      ****     left_duty_cycle = left_duty_cycle + nextSpeed;
 1564              		.loc 1 381 0
 1565 00ba D7F88430 		ldr	r3, [r7, #132]
 1566 00be 9AB2     		uxth	r2, r3
 1567 00c0 424B     		ldr	r3, .L95+24
 1568 00c2 1B88     		ldrh	r3, [r3]
 1569 00c4 9BB2     		uxth	r3, r3
 1570 00c6 1344     		add	r3, r3, r2
 1571 00c8 9BB2     		uxth	r3, r3
 1572 00ca 9AB2     		uxth	r2, r3
 1573 00cc 3F4B     		ldr	r3, .L95+24
 1574 00ce 1A80     		strh	r2, [r3]	@ movhi
 382:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 1575              		.loc 1 382 0
 1576 00d0 3F4B     		ldr	r3, .L95+28
 1577 00d2 1B88     		ldrh	r3, [r3]
 1578 00d4 1AB2     		sxth	r2, r3
 1579 00d6 B7F98C30 		ldrsh	r3, [r7, #140]
 1580 00da 002B     		cmp	r3, #0
 1581 00dc B8BF     		it	lt
 1582 00de 5B42     		rsblt	r3, r3, #0
 1583 00e0 D31A     		subs	r3, r2, r3
 1584 00e2 C7F88830 		str	r3, [r7, #136]
 383:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1585              		.loc 1 383 0
 1586 00e6 D7F88830 		ldr	r3, [r7, #136]
 1587 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 1588 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 1589 00f2 D7F88830 		ldr	r3, [r7, #136]
 1590 00f6 92FBF3F3 		sdiv	r3, r2, r3
 1591 00fa 1846     		mov	r0, r3
 1592 00fc FFF7FEFF 		bl	__aeabi_i2d
 1593 0100 0446     		mov	r4, r0
 1594 0102 0D46     		mov	r5, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 36


 1595 0104 D7F88830 		ldr	r3, [r7, #136]
 1596 0108 002B     		cmp	r3, #0
 1597 010a B8BF     		it	lt
 1598 010c 5B42     		rsblt	r3, r3, #0
 1599 010e 1846     		mov	r0, r3
 1600 0110 FFF7FEFF 		bl	__aeabi_i2d
 1601 0114 0246     		mov	r2, r0
 1602 0116 0B46     		mov	r3, r1
 1603 0118 1046     		mov	r0, r2
 1604 011a 1946     		mov	r1, r3
 1605 011c FFF7FEFF 		bl	sqrt
 1606 0120 0246     		mov	r2, r0
 1607 0122 0B46     		mov	r3, r1
 1608 0124 2046     		mov	r0, r4
 1609 0126 2946     		mov	r1, r5
 1610 0128 FFF7FEFF 		bl	__aeabi_dmul
 1611 012c 0246     		mov	r2, r0
 1612 012e 0B46     		mov	r3, r1
 1613 0130 1046     		mov	r0, r2
 1614 0132 1946     		mov	r1, r3
 1615 0134 FFF7FEFF 		bl	__aeabi_d2iz
 1616 0138 0346     		mov	r3, r0
 1617 013a C7F88430 		str	r3, [r7, #132]
 384:.\main.c      ****     right_duty_cycle = right_duty_cycle + nextSpeed;
 1618              		.loc 1 384 0
 1619 013e D7F88430 		ldr	r3, [r7, #132]
 1620 0142 9AB2     		uxth	r2, r3
 1621 0144 234B     		ldr	r3, .L95+32
 1622 0146 1B88     		ldrh	r3, [r3]
 1623 0148 9BB2     		uxth	r3, r3
 1624 014a 1344     		add	r3, r3, r2
 1625 014c 9BB2     		uxth	r3, r3
 1626 014e 9AB2     		uxth	r2, r3
 1627 0150 204B     		ldr	r3, .L95+32
 1628 0152 1A80     		strh	r2, [r3]	@ movhi
 385:.\main.c      ****     
 386:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1629              		.loc 1 386 0
 1630 0154 1F4B     		ldr	r3, .L95+32
 1631 0156 1B88     		ldrh	r3, [r3]
 1632 0158 1BB2     		sxth	r3, r3
 1633 015a 002B     		cmp	r3, #0
 1634 015c 02DA     		bge	.L91
 1635              		.loc 1 386 0 is_stmt 0 discriminator 1
 1636 015e 1D4B     		ldr	r3, .L95+32
 1637 0160 0022     		movs	r2, #0
 1638 0162 1A80     		strh	r2, [r3]	@ movhi
 1639              	.L91:
 387:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1640              		.loc 1 387 0 is_stmt 1
 1641 0164 194B     		ldr	r3, .L95+24
 1642 0166 1B88     		ldrh	r3, [r3]
 1643 0168 1BB2     		sxth	r3, r3
 1644 016a 002B     		cmp	r3, #0
 1645 016c 02DA     		bge	.L92
 1646              		.loc 1 387 0 is_stmt 0 discriminator 1
 1647 016e 174B     		ldr	r3, .L95+24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 37


 1648 0170 0022     		movs	r2, #0
 1649 0172 1A80     		strh	r2, [r3]	@ movhi
 1650              	.L92:
 388:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1651              		.loc 1 388 0 is_stmt 1
 1652 0174 174B     		ldr	r3, .L95+32
 1653 0176 1B88     		ldrh	r3, [r3]
 1654 0178 1BB2     		sxth	r3, r3
 1655 017a 642B     		cmp	r3, #100
 1656 017c 02DD     		ble	.L93
 1657              		.loc 1 388 0 is_stmt 0 discriminator 1
 1658 017e 154B     		ldr	r3, .L95+32
 1659 0180 6422     		movs	r2, #100
 1660 0182 1A80     		strh	r2, [r3]	@ movhi
 1661              	.L93:
 389:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 1662              		.loc 1 389 0 is_stmt 1
 1663 0184 114B     		ldr	r3, .L95+24
 1664 0186 1B88     		ldrh	r3, [r3]
 1665 0188 1BB2     		sxth	r3, r3
 1666 018a 642B     		cmp	r3, #100
 1667 018c 02DD     		ble	.L94
 1668              		.loc 1 389 0 is_stmt 0 discriminator 1
 1669 018e 0F4B     		ldr	r3, .L95+24
 1670 0190 6422     		movs	r2, #100
 1671 0192 1A80     		strh	r2, [r3]	@ movhi
 1672              	.L94:
 390:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 1673              		.loc 1 390 0 is_stmt 1
 1674 0194 0D4B     		ldr	r3, .L95+24
 1675 0196 1B88     		ldrh	r3, [r3]
 1676 0198 DBB2     		uxtb	r3, r3
 1677 019a 1846     		mov	r0, r3
 1678 019c FFF7FEFF 		bl	PWM_1_WriteCompare
 391:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 1679              		.loc 1 391 0
 1680 01a0 0C4B     		ldr	r3, .L95+32
 1681 01a2 1B88     		ldrh	r3, [r3]
 1682 01a4 DBB2     		uxtb	r3, r3
 1683 01a6 1846     		mov	r0, r3
 1684 01a8 FFF7FEFF 		bl	PWM_2_WriteCompare
 1685              	.L88:
 392:.\main.c      **** }
 1686              		.loc 1 392 0
 1687 01ac 9037     		adds	r7, r7, #144
 1688              		.cfi_def_cfa_offset 16
 1689 01ae BD46     		mov	sp, r7
 1690              		.cfi_def_cfa_register 13
 1691              		@ sp needed
 1692 01b0 B0BD     		pop	{r4, r5, r7, pc}
 1693              	.L96:
 1694 01b2 00BF     		.align	2
 1695              	.L95:
 1696 01b4 00000000 		.word	flag_calc_wheelspeed
 1697 01b8 00000000 		.word	quad_diff1
 1698 01bc 14000000 		.word	.LC1
 1699 01c0 00000000 		.word	quad_diff2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 38


 1700 01c4 2C000000 		.word	.LC2
 1701 01c8 00000000 		.word	leftSpeedLimit
 1702 01cc 00000000 		.word	left_duty_cycle
 1703 01d0 00000000 		.word	rightSpeedLimit
 1704 01d4 00000000 		.word	right_duty_cycle
 1705              		.cfi_endproc
 1706              	.LFE85:
 1707              		.size	Quad_Dec_response, .-Quad_Dec_response
 1708              		.global	__aeabi_i2f
 1709              		.global	__aeabi_fmul
 1710              		.global	__aeabi_fadd
 1711              		.global	__aeabi_f2iz
 1712              		.section	.rodata
 1713 0042 0000     		.align	2
 1714              	.LC3:
 1715 0044 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 1715      65727920 
 1715      566F6C74 
 1715      6167653A 
 1715      2025646D 
 1716              		.section	.text.print_ADC,"ax",%progbits
 1717              		.align	2
 1718              		.global	print_ADC
 1719              		.thumb
 1720              		.thumb_func
 1721              		.type	print_ADC, %function
 1722              	print_ADC:
 1723              	.LFB86:
 393:.\main.c      **** 
 394:.\main.c      **** void print_ADC()
 395:.\main.c      **** {
 1724              		.loc 1 395 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 24
 1727              		@ frame_needed = 1, uses_anonymous_args = 0
 1728 0000 80B5     		push	{r7, lr}
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 7, -8
 1731              		.cfi_offset 14, -4
 1732 0002 86B0     		sub	sp, sp, #24
 1733              		.cfi_def_cfa_offset 32
 1734 0004 00AF     		add	r7, sp, #0
 1735              		.cfi_def_cfa_register 7
 396:.\main.c      ****    //usbPutString("HII\n");
 397:.\main.c      ****     if(flag_receive_ADC == 1)
 1736              		.loc 1 397 0
 1737 0006 274B     		ldr	r3, .L100
 1738 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1739 000a 012B     		cmp	r3, #1
 1740 000c 46D1     		bne	.L97
 1741              	.LBB3:
 398:.\main.c      ****     {
 399:.\main.c      ****         //usbPutString("AAA\r\n");
 400:.\main.c      ****         flag_receive_ADC = 0;
 1742              		.loc 1 400 0
 1743 000e 254B     		ldr	r3, .L100
 1744 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 39


 1745 0012 1A70     		strb	r2, [r3]
 401:.\main.c      ****         
 402:.\main.c      ****        // int8 channel = ADC_
 403:.\main.c      ****         float scalingFactor = 0.972;
 1746              		.loc 1 403 0
 1747 0014 244B     		ldr	r3, .L100+4
 1748 0016 7B61     		str	r3, [r7, #20]	@ float
 404:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 1749              		.loc 1 404 0
 1750 0018 244B     		ldr	r3, .L100+8
 1751 001a 1B88     		ldrh	r3, [r3]
 1752 001c 1BB2     		sxth	r3, r3
 1753 001e 41F28832 		movw	r2, #5000
 1754 0022 02FB03F3 		mul	r3, r2, r3
 1755 0026 002B     		cmp	r3, #0
 1756 0028 01DA     		bge	.L99
 1757 002a 03F6FF73 		addw	r3, r3, #4095
 1758              	.L99:
 1759 002e 1B13     		asrs	r3, r3, #12
 1760 0030 1846     		mov	r0, r3
 1761 0032 FFF7FEFF 		bl	__aeabi_i2f
 1762 0036 0346     		mov	r3, r0
 1763 0038 1846     		mov	r0, r3
 1764 003a 7969     		ldr	r1, [r7, #20]	@ float
 1765 003c FFF7FEFF 		bl	__aeabi_fmul
 1766 0040 0346     		mov	r3, r0
 1767 0042 1846     		mov	r0, r3
 1768 0044 1946     		mov	r1, r3
 1769 0046 FFF7FEFF 		bl	__aeabi_fadd
 1770 004a 0346     		mov	r3, r0
 1771 004c 1846     		mov	r0, r3
 1772 004e FFF7FEFF 		bl	__aeabi_f2iz
 1773 0052 0346     		mov	r3, r0
 1774 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 405:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 1775              		.loc 1 405 0
 1776 0056 B7F91220 		ldrsh	r2, [r7, #18]
 1777 005a 154B     		ldr	r3, .L100+12
 1778 005c 1B88     		ldrh	r3, [r3]
 1779 005e 1BB2     		sxth	r3, r3
 1780 0060 1A44     		add	r2, r2, r3
 1781 0062 144B     		ldr	r3, .L100+16
 1782 0064 1B88     		ldrh	r3, [r3]
 1783 0066 1BB2     		sxth	r3, r3
 1784 0068 1344     		add	r3, r3, r2
 1785 006a 134A     		ldr	r2, .L100+20
 1786 006c 82FB0312 		smull	r1, r2, r2, r3
 1787 0070 DB17     		asrs	r3, r3, #31
 1788 0072 D31A     		subs	r3, r2, r3
 1789 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 406:.\main.c      ****         prevVoltage2 = prevVoltage;
 1790              		.loc 1 406 0
 1791 0076 0E4B     		ldr	r3, .L100+12
 1792 0078 1A88     		ldrh	r2, [r3]
 1793 007a 0E4B     		ldr	r3, .L100+16
 1794 007c 1A80     		strh	r2, [r3]	@ movhi
 407:.\main.c      ****         prevVoltage = converted_val;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 40


 1795              		.loc 1 407 0
 1796 007e 0C4A     		ldr	r2, .L100+12
 1797 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1798 0082 1380     		strh	r3, [r2]	@ movhi
 408:.\main.c      ****         
 409:.\main.c      ****         char result_str[16];
 410:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 1799              		.loc 1 410 0
 1800 0084 B7F91230 		ldrsh	r3, [r7, #18]
 1801 0088 3A46     		mov	r2, r7
 1802 008a 1046     		mov	r0, r2
 1803 008c 0B49     		ldr	r1, .L100+24
 1804 008e 1A46     		mov	r2, r3
 1805 0090 FFF7FEFF 		bl	sprintf
 411:.\main.c      ****         
 412:.\main.c      ****         usbPutString(result_str);
 1806              		.loc 1 412 0
 1807 0094 3B46     		mov	r3, r7
 1808 0096 1846     		mov	r0, r3
 1809 0098 FFF7FEFF 		bl	usbPutString
 1810              	.L97:
 1811              	.LBE3:
 413:.\main.c      ****     }
 414:.\main.c      **** }
 1812              		.loc 1 414 0
 1813 009c 1837     		adds	r7, r7, #24
 1814              		.cfi_def_cfa_offset 8
 1815 009e BD46     		mov	sp, r7
 1816              		.cfi_def_cfa_register 13
 1817              		@ sp needed
 1818 00a0 80BD     		pop	{r7, pc}
 1819              	.L101:
 1820 00a2 00BF     		.align	2
 1821              	.L100:
 1822 00a4 00000000 		.word	flag_receive_ADC
 1823 00a8 FED4783F 		.word	1064883454
 1824 00ac 00000000 		.word	adc_result
 1825 00b0 00000000 		.word	prevVoltage
 1826 00b4 00000000 		.word	prevVoltage2
 1827 00b8 56555555 		.word	1431655766
 1828 00bc 44000000 		.word	.LC3
 1829              		.cfi_endproc
 1830              	.LFE86:
 1831              		.size	print_ADC, .-print_ADC
 1832              		.section	.rodata
 1833              		.align	2
 1834              	.LC4:
 1835 005c 52535349 		.ascii	"RSSI:\000"
 1835      3A00
 1836 0062 0000     		.align	2
 1837              	.LC5:
 1838 0064 25640D0A 		.ascii	"%d\015\012\000"
 1838      00
 1839 0069 000000   		.align	2
 1840              	.LC6:
 1841 006c 726F626F 		.ascii	"robot_x:\000"
 1841      745F783A 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 41


 1841      00
 1842 0075 000000   		.align	2
 1843              	.LC7:
 1844 0078 726F626F 		.ascii	"robot_y:\000"
 1844      745F793A 
 1844      00
 1845 0081 000000   		.align	2
 1846              	.LC8:
 1847 0084 726F626F 		.ascii	"robot_dir:\000"
 1847      745F6469 
 1847      723A00
 1848 008f 00       		.section	.text.print_RF,"ax",%progbits
 1849              		.align	2
 1850              		.global	print_RF
 1851              		.thumb
 1852              		.thumb_func
 1853              		.type	print_RF, %function
 1854              	print_RF:
 1855              	.LFB87:
 415:.\main.c      **** 
 416:.\main.c      **** void print_RF()
 417:.\main.c      **** {
 1856              		.loc 1 417 0
 1857              		.cfi_startproc
 1858              		@ args = 0, pretend = 0, frame = 16
 1859              		@ frame_needed = 1, uses_anonymous_args = 0
 1860 0000 80B5     		push	{r7, lr}
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 7, -8
 1863              		.cfi_offset 14, -4
 1864 0002 84B0     		sub	sp, sp, #16
 1865              		.cfi_def_cfa_offset 24
 1866 0004 00AF     		add	r7, sp, #0
 1867              		.cfi_def_cfa_register 7
 418:.\main.c      ****     if(flag_print_rf == 1)
 1868              		.loc 1 418 0
 1869 0006 254B     		ldr	r3, .L104
 1870 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1871 000a 012B     		cmp	r3, #1
 1872 000c 42D1     		bne	.L102
 1873              	.LBB4:
 419:.\main.c      ****     {
 420:.\main.c      ****         char printString[16];
 421:.\main.c      ****         flag_print_rf = 0;
 1874              		.loc 1 421 0
 1875 000e 234B     		ldr	r3, .L104
 1876 0010 0022     		movs	r2, #0
 1877 0012 1A70     		strb	r2, [r3]
 422:.\main.c      ****         usbPutString("RSSI:");
 1878              		.loc 1 422 0
 1879 0014 2248     		ldr	r0, .L104+4
 1880 0016 FFF7FEFF 		bl	usbPutString
 423:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 1881              		.loc 1 423 0
 1882 001a 224B     		ldr	r3, .L104+8
 1883 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 001e 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 42


 1885 0020 3A46     		mov	r2, r7
 1886 0022 1046     		mov	r0, r2
 1887 0024 2049     		ldr	r1, .L104+12
 1888 0026 1A46     		mov	r2, r3
 1889 0028 FFF7FEFF 		bl	sprintf
 424:.\main.c      ****         usbPutString(printString);
 1890              		.loc 1 424 0
 1891 002c 3B46     		mov	r3, r7
 1892 002e 1846     		mov	r0, r3
 1893 0030 FFF7FEFF 		bl	usbPutString
 425:.\main.c      ****         usbPutString("robot_x:");
 1894              		.loc 1 425 0
 1895 0034 1D48     		ldr	r0, .L104+16
 1896 0036 FFF7FEFF 		bl	usbPutString
 426:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 1897              		.loc 1 426 0
 1898 003a 1A4B     		ldr	r3, .L104+8
 1899 003c 5B88     		ldrh	r3, [r3, #2]
 1900 003e 1BB2     		sxth	r3, r3
 1901 0040 3A46     		mov	r2, r7
 1902 0042 1046     		mov	r0, r2
 1903 0044 1849     		ldr	r1, .L104+12
 1904 0046 1A46     		mov	r2, r3
 1905 0048 FFF7FEFF 		bl	sprintf
 427:.\main.c      ****         usbPutString(printString);
 1906              		.loc 1 427 0
 1907 004c 3B46     		mov	r3, r7
 1908 004e 1846     		mov	r0, r3
 1909 0050 FFF7FEFF 		bl	usbPutString
 428:.\main.c      ****         usbPutString("robot_y:");
 1910              		.loc 1 428 0
 1911 0054 1648     		ldr	r0, .L104+20
 1912 0056 FFF7FEFF 		bl	usbPutString
 429:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 1913              		.loc 1 429 0
 1914 005a 124B     		ldr	r3, .L104+8
 1915 005c 9B88     		ldrh	r3, [r3, #4]
 1916 005e 1BB2     		sxth	r3, r3
 1917 0060 3A46     		mov	r2, r7
 1918 0062 1046     		mov	r0, r2
 1919 0064 1049     		ldr	r1, .L104+12
 1920 0066 1A46     		mov	r2, r3
 1921 0068 FFF7FEFF 		bl	sprintf
 430:.\main.c      ****         usbPutString(printString);
 1922              		.loc 1 430 0
 1923 006c 3B46     		mov	r3, r7
 1924 006e 1846     		mov	r0, r3
 1925 0070 FFF7FEFF 		bl	usbPutString
 431:.\main.c      ****         usbPutString("robot_dir:");
 1926              		.loc 1 431 0
 1927 0074 0F48     		ldr	r0, .L104+24
 1928 0076 FFF7FEFF 		bl	usbPutString
 432:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 1929              		.loc 1 432 0
 1930 007a 0A4B     		ldr	r3, .L104+8
 1931 007c DB88     		ldrh	r3, [r3, #6]
 1932 007e 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 43


 1933 0080 3A46     		mov	r2, r7
 1934 0082 1046     		mov	r0, r2
 1935 0084 0849     		ldr	r1, .L104+12
 1936 0086 1A46     		mov	r2, r3
 1937 0088 FFF7FEFF 		bl	sprintf
 433:.\main.c      ****         usbPutString(printString);
 1938              		.loc 1 433 0
 1939 008c 3B46     		mov	r3, r7
 1940 008e 1846     		mov	r0, r3
 1941 0090 FFF7FEFF 		bl	usbPutString
 1942              	.L102:
 1943              	.LBE4:
 434:.\main.c      ****     }
 435:.\main.c      **** }
 1944              		.loc 1 435 0
 1945 0094 1037     		adds	r7, r7, #16
 1946              		.cfi_def_cfa_offset 8
 1947 0096 BD46     		mov	sp, r7
 1948              		.cfi_def_cfa_register 13
 1949              		@ sp needed
 1950 0098 80BD     		pop	{r7, pc}
 1951              	.L105:
 1952 009a 00BF     		.align	2
 1953              	.L104:
 1954 009c 00000000 		.word	flag_print_rf
 1955 00a0 5C000000 		.word	.LC4
 1956 00a4 00000000 		.word	system_state
 1957 00a8 64000000 		.word	.LC5
 1958 00ac 6C000000 		.word	.LC6
 1959 00b0 78000000 		.word	.LC7
 1960 00b4 84000000 		.word	.LC8
 1961              		.cfi_endproc
 1962              	.LFE87:
 1963              		.size	print_RF, .-print_RF
 1964              		.section	.text.main,"ax",%progbits
 1965              		.align	2
 1966              		.global	main
 1967              		.thumb
 1968              		.thumb_func
 1969              		.type	main, %function
 1970              	main:
 1971              	.LFB88:
 436:.\main.c      **** 
 437:.\main.c      **** int main()
 438:.\main.c      **** {  
 1972              		.loc 1 438 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 0
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976 0000 80B5     		push	{r7, lr}
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 7, -8
 1979              		.cfi_offset 14, -4
 1980 0002 00AF     		add	r7, sp, #0
 1981              		.cfi_def_cfa_register 7
 439:.\main.c      **** 
 440:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 44


 441:.\main.c      **** // ----- INITIALIZATIONS ----------
 442:.\main.c      ****     CYGlobalIntEnable;
 1982              		.loc 1 442 0
 1983              	@ 442 ".\main.c" 1
 1984 0004 62B6     		CPSIE   i
 1985              	@ 0 "" 2
 443:.\main.c      ****     if(ENABLE_PWM)
 444:.\main.c      ****     {
 445:.\main.c      ****         PWM_1_Start();// starting the pwm
 1986              		.loc 1 445 0
 1987              		.thumb
 1988 0006 FFF7FEFF 		bl	PWM_1_Start
 446:.\main.c      ****         PWM_2_Start();// starting the pwm
 1989              		.loc 1 446 0
 1990 000a FFF7FEFF 		bl	PWM_2_Start
 447:.\main.c      ****     }
 448:.\main.c      ****     
 449:.\main.c      ****     if(ENABLE_ADC)
 450:.\main.c      ****     {
 451:.\main.c      ****         ADC_Start();
 452:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 453:.\main.c      ****         //ADC_StartConvert();
 454:.\main.c      ****         
 455:.\main.c      ****         //start the ADC timer for software trigger mode
 456:.\main.c      ****         Timer_TS_Start();
 457:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 458:.\main.c      ****     }
 459:.\main.c      ****     
 460:.\main.c      ****     if (ENABLE_QUAD)
 461:.\main.c      ****     {
 462:.\main.c      ****         QuadDec_M1_Start();
 1991              		.loc 1 462 0
 1992 000e FFF7FEFF 		bl	QuadDec_M1_Start
 463:.\main.c      ****         QuadDec_M2_Start();
 1993              		.loc 1 463 0
 1994 0012 FFF7FEFF 		bl	QuadDec_M2_Start
 464:.\main.c      ****         
 465:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1995              		.loc 1 465 0
 1996 0016 2248     		ldr	r0, .L116
 1997 0018 FFF7FEFF 		bl	isr_quad1_StartEx
 466:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1998              		.loc 1 466 0
 1999 001c 2148     		ldr	r0, .L116+4
 2000 001e FFF7FEFF 		bl	isr_turn_count_StartEx
 467:.\main.c      ****         
 468:.\main.c      ****         Timer_1_Start();
 2001              		.loc 1 468 0
 2002 0022 FFF7FEFF 		bl	Timer_1_Start
 469:.\main.c      ****     }
 470:.\main.c      ****     
 471:.\main.c      ****     if(ENABLE_STOP){
 472:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 2003              		.loc 1 472 0
 2004 0026 2048     		ldr	r0, .L116+8
 2005 0028 FFF7FEFF 		bl	isr_OnLine_StartEx
 473:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 45


 474:.\main.c      ****     isr_button_StartEx(button);
 2006              		.loc 1 474 0
 2007 002c 1F48     		ldr	r0, .L116+12
 2008 002e FFF7FEFF 		bl	isr_button_StartEx
 475:.\main.c      **** 
 476:.\main.c      ****     // ------USB SETUP ----------------    
 477:.\main.c      ****     if (USE_USB){    
 478:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 2009              		.loc 1 478 0
 2010 0032 0020     		movs	r0, #0
 2011 0034 0121     		movs	r1, #1
 2012 0036 FFF7FEFF 		bl	USBUART_Start
 479:.\main.c      ****         if (USBUART_GetConfiguration())
 2013              		.loc 1 479 0
 2014 003a FFF7FEFF 		bl	USBUART_GetConfiguration
 2015 003e 0346     		mov	r3, r0
 2016 0040 002B     		cmp	r3, #0
 2017 0042 01D0     		beq	.L115
 480:.\main.c      ****             {
 481:.\main.c      ****                  USBUART_CDC_Init();
 2018              		.loc 1 481 0
 2019 0044 FFF7FEFF 		bl	USBUART_CDC_Init
 2020              	.L115:
 482:.\main.c      ****             }
 483:.\main.c      ****     }
 484:.\main.c      ****     
 485:.\main.c      ****     if(BIN_ENABLED){
 486:.\main.c      ****         UART_clk_SetDividerValue(130);
 487:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 488:.\main.c      ****         UART_Start();
 489:.\main.c      ****         RF_BT_SELECT_Write(0);
 490:.\main.c      ****     }
 491:.\main.c      ****     
 492:.\main.c      ****     if(BT_ENABLED){
 493:.\main.c      ****         UART_clk_SetDividerValue(781);
 2021              		.loc 1 493 0
 2022 0048 4FF44370 		mov	r0, #780
 2023 004c 0121     		movs	r1, #1
 2024 004e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 494:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2025              		.loc 1 494 0
 2026 0052 1748     		ldr	r0, .L116+16
 2027 0054 FFF7FEFF 		bl	isrRF_RX_StartEx
 495:.\main.c      ****         UART_Start();
 2028              		.loc 1 495 0
 2029 0058 FFF7FEFF 		bl	UART_Start
 496:.\main.c      ****         RF_BT_SELECT_Write(1);
 2030              		.loc 1 496 0
 2031 005c 0120     		movs	r0, #1
 2032 005e FFF7FEFF 		bl	RF_BT_SELECT_Write
 2033              	.L114:
 497:.\main.c      ****     }
 498:.\main.c      ****     
 499:.\main.c      ****     //usbPutString("Started");
 500:.\main.c      ****     for(;;)
 501:.\main.c      ****     {
 502:.\main.c      ****         if(ENABLE_ADC) print_ADC();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 46


 503:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 2034              		.loc 1 503 0
 2035 0062 FFF7FEFF 		bl	Quad_Dec_response
 504:.\main.c      ****         if(BIN_ENABLED == 1)
 505:.\main.c      ****         {
 506:.\main.c      ****             handle_rx_binary();
 507:.\main.c      ****             print_RF();
 508:.\main.c      ****         }
 509:.\main.c      ****         
 510:.\main.c      ****         switch(movement_state)
 2036              		.loc 1 510 0
 2037 0066 134B     		ldr	r3, .L116+20
 2038 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2039 006a 032B     		cmp	r3, #3
 2040 006c F9D8     		bhi	.L114
 2041 006e 01A2     		adr	r2, .L110
 2042 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2043              		.p2align 2
 2044              	.L110:
 2045 0074 85000000 		.word	.L109+1
 2046 0078 8B000000 		.word	.L111+1
 2047 007c 91000000 		.word	.L112+1
 2048 0080 97000000 		.word	.L113+1
 2049              		.p2align 1
 2050              	.L109:
 511:.\main.c      ****         {
 512:.\main.c      ****             case DRIVE:
 513:.\main.c      ****                 driveForwards();
 2051              		.loc 1 513 0
 2052 0084 FFF7FEFF 		bl	driveForwards
 514:.\main.c      ****             break;
 2053              		.loc 1 514 0
 2054 0088 08E0     		b	.L108
 2055              	.L111:
 515:.\main.c      ****             case LTURN:
 516:.\main.c      ****                 turnLeft();
 2056              		.loc 1 516 0
 2057 008a FFF7FEFF 		bl	turnLeft
 517:.\main.c      ****             break;
 2058              		.loc 1 517 0
 2059 008e 05E0     		b	.L108
 2060              	.L112:
 518:.\main.c      ****             case RTURN:
 519:.\main.c      ****                 turnRight();
 2061              		.loc 1 519 0
 2062 0090 FFF7FEFF 		bl	turnRight
 520:.\main.c      ****             break;
 2063              		.loc 1 520 0
 2064 0094 02E0     		b	.L108
 2065              	.L113:
 521:.\main.c      ****             case STOPPED:
 522:.\main.c      ****                 brakeMotor();
 2066              		.loc 1 522 0
 2067 0096 FFF7FEFF 		bl	brakeMotor
 523:.\main.c      ****             break;
 2068              		.loc 1 523 0
 2069 009a 00BF     		nop
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 47


 2070              	.L108:
 524:.\main.c      ****         }
 525:.\main.c      ****         //handle_usb();        
 526:.\main.c      ****     }   
 2071              		.loc 1 526 0
 2072 009c E1E7     		b	.L114
 2073              	.L117:
 2074 009e 00BF     		.align	2
 2075              	.L116:
 2076 00a0 00000000 		.word	isr_quad1
 2077 00a4 00000000 		.word	isr_turn_timer
 2078 00a8 00000000 		.word	Stop_on_line
 2079 00ac 00000000 		.word	button
 2080 00b0 00000000 		.word	BT_rxInt
 2081 00b4 00000000 		.word	movement_state
 2082              		.cfi_endproc
 2083              	.LFE88:
 2084              		.size	main, .-main
 2085              		.section	.text.usbPutString,"ax",%progbits
 2086              		.align	2
 2087              		.global	usbPutString
 2088              		.thumb
 2089              		.thumb_func
 2090              		.type	usbPutString, %function
 2091              	usbPutString:
 2092              	.LFB89:
 527:.\main.c      **** }
 528:.\main.c      **** //* ========================================
 529:.\main.c      **** void usbPutString(char *s)
 530:.\main.c      **** {
 2093              		.loc 1 530 0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 16
 2096              		@ frame_needed = 1, uses_anonymous_args = 0
 2097 0000 80B5     		push	{r7, lr}
 2098              		.cfi_def_cfa_offset 8
 2099              		.cfi_offset 7, -8
 2100              		.cfi_offset 14, -4
 2101 0002 84B0     		sub	sp, sp, #16
 2102              		.cfi_def_cfa_offset 24
 2103 0004 00AF     		add	r7, sp, #0
 2104              		.cfi_def_cfa_register 7
 2105 0006 7860     		str	r0, [r7, #4]
 531:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 532:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 533:.\main.c      **** //  length to 62 char (63rd char is a '!')
 534:.\main.c      ****     if (USE_USB && portOpen)    
 2106              		.loc 1 534 0
 2107 0008 154B     		ldr	r3, .L122
 2108 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2109 000c 002B     		cmp	r3, #0
 2110 000e 23D0     		beq	.L118
 2111              	.LBB5:
 535:.\main.c      ****     {
 536:.\main.c      ****             uint32 cnt = 0;
 2112              		.loc 1 536 0
 2113 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 48


 2114 0012 FB60     		str	r3, [r7, #12]
 537:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 2115              		.loc 1 537 0
 2116 0014 0AE0     		b	.L120
 2117              	.L121:
 538:.\main.c      ****             {
 539:.\main.c      ****                 cnt++;
 2118              		.loc 1 539 0
 2119 0016 FB68     		ldr	r3, [r7, #12]
 2120 0018 0133     		adds	r3, r3, #1
 2121 001a FB60     		str	r3, [r7, #12]
 540:.\main.c      ****                 if(cnt == 3000000){
 2122              		.loc 1 540 0
 2123 001c FB68     		ldr	r3, [r7, #12]
 2124 001e 114A     		ldr	r2, .L122+4
 2125 0020 9342     		cmp	r3, r2
 2126 0022 03D1     		bne	.L120
 541:.\main.c      ****                     portOpen = 0;
 2127              		.loc 1 541 0
 2128 0024 0E4B     		ldr	r3, .L122
 2129 0026 0022     		movs	r2, #0
 2130 0028 1A70     		strb	r2, [r3]
 542:.\main.c      ****                     return;
 2131              		.loc 1 542 0
 2132 002a 15E0     		b	.L118
 2133              	.L120:
 537:.\main.c      ****             {
 2134              		.loc 1 537 0
 2135 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 2136 0030 0346     		mov	r3, r0
 2137 0032 002B     		cmp	r3, #0
 2138 0034 EFD0     		beq	.L121
 543:.\main.c      ****                 }
 544:.\main.c      ****             }
 545:.\main.c      ****             s[63]='\0';
 2139              		.loc 1 545 0
 2140 0036 7B68     		ldr	r3, [r7, #4]
 2141 0038 3F33     		adds	r3, r3, #63
 2142 003a 0022     		movs	r2, #0
 2143 003c 1A70     		strb	r2, [r3]
 546:.\main.c      ****             s[62]='!';
 2144              		.loc 1 546 0
 2145 003e 7B68     		ldr	r3, [r7, #4]
 2146 0040 3E33     		adds	r3, r3, #62
 2147 0042 2122     		movs	r2, #33
 2148 0044 1A70     		strb	r2, [r3]
 547:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 2149              		.loc 1 547 0
 2150 0046 7868     		ldr	r0, [r7, #4]
 2151 0048 FFF7FEFF 		bl	strlen
 2152 004c 0346     		mov	r3, r0
 2153 004e 9BB2     		uxth	r3, r3
 2154 0050 7868     		ldr	r0, [r7, #4]
 2155 0052 1946     		mov	r1, r3
 2156 0054 FFF7FEFF 		bl	USBUART_PutData
 2157              	.L118:
 2158              	.LBE5:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 49


 548:.\main.c      ****     }
 549:.\main.c      **** }
 2159              		.loc 1 549 0
 2160 0058 1037     		adds	r7, r7, #16
 2161              		.cfi_def_cfa_offset 8
 2162 005a BD46     		mov	sp, r7
 2163              		.cfi_def_cfa_register 13
 2164              		@ sp needed
 2165 005c 80BD     		pop	{r7, pc}
 2166              	.L123:
 2167 005e 00BF     		.align	2
 2168              	.L122:
 2169 0060 00000000 		.word	portOpen
 2170 0064 C0C62D00 		.word	3000000
 2171              		.cfi_endproc
 2172              	.LFE89:
 2173              		.size	usbPutString, .-usbPutString
 2174              		.section	.text.usbPutChar,"ax",%progbits
 2175              		.align	2
 2176              		.global	usbPutChar
 2177              		.thumb
 2178              		.thumb_func
 2179              		.type	usbPutChar, %function
 2180              	usbPutChar:
 2181              	.LFB90:
 550:.\main.c      **** //* ========================================
 551:.\main.c      **** void usbPutChar(char c)
 552:.\main.c      **** {
 2182              		.loc 1 552 0
 2183              		.cfi_startproc
 2184              		@ args = 0, pretend = 0, frame = 16
 2185              		@ frame_needed = 1, uses_anonymous_args = 0
 2186 0000 80B5     		push	{r7, lr}
 2187              		.cfi_def_cfa_offset 8
 2188              		.cfi_offset 7, -8
 2189              		.cfi_offset 14, -4
 2190 0002 84B0     		sub	sp, sp, #16
 2191              		.cfi_def_cfa_offset 24
 2192 0004 00AF     		add	r7, sp, #0
 2193              		.cfi_def_cfa_register 7
 2194 0006 0346     		mov	r3, r0
 2195 0008 FB71     		strb	r3, [r7, #7]
 553:.\main.c      ****     if (USE_USB && portOpen)    
 2196              		.loc 1 553 0
 2197 000a 0F4B     		ldr	r3, .L128
 2198 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2199 000e 002B     		cmp	r3, #0
 2200 0010 16D0     		beq	.L124
 2201              	.LBB6:
 554:.\main.c      ****     {    
 555:.\main.c      ****         uint32 cnt = 0;
 2202              		.loc 1 555 0
 2203 0012 0023     		movs	r3, #0
 2204 0014 FB60     		str	r3, [r7, #12]
 556:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 2205              		.loc 1 556 0
 2206 0016 0AE0     		b	.L126
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 50


 2207              	.L127:
 557:.\main.c      ****             cnt++;
 2208              		.loc 1 557 0
 2209 0018 FB68     		ldr	r3, [r7, #12]
 2210 001a 0133     		adds	r3, r3, #1
 2211 001c FB60     		str	r3, [r7, #12]
 558:.\main.c      ****             if(cnt == 3000000){
 2212              		.loc 1 558 0
 2213 001e FB68     		ldr	r3, [r7, #12]
 2214 0020 0A4A     		ldr	r2, .L128+4
 2215 0022 9342     		cmp	r3, r2
 2216 0024 03D1     		bne	.L126
 559:.\main.c      ****                 portOpen = 0;
 2217              		.loc 1 559 0
 2218 0026 084B     		ldr	r3, .L128
 2219 0028 0022     		movs	r2, #0
 2220 002a 1A70     		strb	r2, [r3]
 560:.\main.c      ****                 return;
 2221              		.loc 1 560 0
 2222 002c 08E0     		b	.L124
 2223              	.L126:
 556:.\main.c      ****             cnt++;
 2224              		.loc 1 556 0
 2225 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 2226 0032 0346     		mov	r3, r0
 2227 0034 002B     		cmp	r3, #0
 2228 0036 EFD0     		beq	.L127
 561:.\main.c      ****             }
 562:.\main.c      ****         }
 563:.\main.c      ****         USBUART_PutChar(c);
 2229              		.loc 1 563 0
 2230 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2231 003a 1846     		mov	r0, r3
 2232 003c FFF7FEFF 		bl	USBUART_PutChar
 2233              	.L124:
 2234              	.LBE6:
 564:.\main.c      ****     }    
 565:.\main.c      **** }
 2235              		.loc 1 565 0
 2236 0040 1037     		adds	r7, r7, #16
 2237              		.cfi_def_cfa_offset 8
 2238 0042 BD46     		mov	sp, r7
 2239              		.cfi_def_cfa_register 13
 2240              		@ sp needed
 2241 0044 80BD     		pop	{r7, pc}
 2242              	.L129:
 2243 0046 00BF     		.align	2
 2244              	.L128:
 2245 0048 00000000 		.word	portOpen
 2246 004c C0C62D00 		.word	3000000
 2247              		.cfi_endproc
 2248              	.LFE90:
 2249              		.size	usbPutChar, .-usbPutChar
 2250              		.section	.text.uart_set_PWM,"ax",%progbits
 2251              		.align	2
 2252              		.global	uart_set_PWM
 2253              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 51


 2254              		.thumb_func
 2255              		.type	uart_set_PWM, %function
 2256              	uart_set_PWM:
 2257              	.LFB91:
 566:.\main.c      **** //* ========================================
 567:.\main.c      **** 
 568:.\main.c      **** void uart_set_PWM()
 569:.\main.c      **** {
 2258              		.loc 1 569 0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 8
 2261              		@ frame_needed = 1, uses_anonymous_args = 0
 2262 0000 80B5     		push	{r7, lr}
 2263              		.cfi_def_cfa_offset 8
 2264              		.cfi_offset 7, -8
 2265              		.cfi_offset 14, -4
 2266 0002 82B0     		sub	sp, sp, #8
 2267              		.cfi_def_cfa_offset 16
 2268 0004 00AF     		add	r7, sp, #0
 2269              		.cfi_def_cfa_register 7
 570:.\main.c      ****     uint8 c;
 571:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 2270              		.loc 1 571 0
 2271 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 2272 000a 0346     		mov	r3, r0
 2273 000c 002B     		cmp	r3, #0
 2274 000e 11D0     		beq	.L130
 572:.\main.c      ****        {  
 573:.\main.c      ****             c = USBUART_GetChar();
 2275              		.loc 1 573 0
 2276 0010 FFF7FEFF 		bl	USBUART_GetChar
 2277 0014 0346     		mov	r3, r0
 2278 0016 FB71     		strb	r3, [r7, #7]
 574:.\main.c      ****             
 575:.\main.c      ****             if(c <= 100 && c > 0){
 2279              		.loc 1 575 0
 2280 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2281 001a 642B     		cmp	r3, #100
 2282 001c 0AD8     		bhi	.L130
 2283              		.loc 1 575 0 is_stmt 0 discriminator 1
 2284 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2285 0020 002B     		cmp	r3, #0
 2286 0022 07D0     		beq	.L130
 576:.\main.c      ****                 PWM_1_WriteCompare(c);
 2287              		.loc 1 576 0 is_stmt 1
 2288 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2289 0026 1846     		mov	r0, r3
 2290 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 577:.\main.c      ****                 usbPutString(c);
 2291              		.loc 1 577 0
 2292 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2293 002e 1846     		mov	r0, r3
 2294 0030 FFF7FEFF 		bl	usbPutString
 2295              	.L130:
 578:.\main.c      ****             }
 579:.\main.c      ****        }
 580:.\main.c      **** }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 52


 2296              		.loc 1 580 0
 2297 0034 0837     		adds	r7, r7, #8
 2298              		.cfi_def_cfa_offset 8
 2299 0036 BD46     		mov	sp, r7
 2300              		.cfi_def_cfa_register 13
 2301              		@ sp needed
 2302 0038 80BD     		pop	{r7, pc}
 2303              		.cfi_endproc
 2304              	.LFE91:
 2305              		.size	uart_set_PWM, .-uart_set_PWM
 2306 003a 00BF     		.text
 2307              	.Letext0:
 2308              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2309              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2310              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2311              		.file 5 ".\\vars.h"
 2312              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2313              		.section	.debug_info,"",%progbits
 2314              	.Ldebug_info0:
 2315 0000 C0080000 		.4byte	0x8c0
 2316 0004 0400     		.2byte	0x4
 2317 0006 00000000 		.4byte	.Ldebug_abbrev0
 2318 000a 04       		.byte	0x4
 2319 000b 01       		.uleb128 0x1
 2320 000c CF020000 		.4byte	.LASF130
 2321 0010 01       		.byte	0x1
 2322 0011 77060000 		.4byte	.LASF131
 2323 0015 25060000 		.4byte	.LASF132
 2324 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2325 001d 00000000 		.4byte	0
 2326 0021 00000000 		.4byte	.Ldebug_line0
 2327 0025 02       		.uleb128 0x2
 2328 0026 01       		.byte	0x1
 2329 0027 06       		.byte	0x6
 2330 0028 AD050000 		.4byte	.LASF0
 2331 002c 02       		.uleb128 0x2
 2332 002d 01       		.byte	0x1
 2333 002e 08       		.byte	0x8
 2334 002f 10050000 		.4byte	.LASF1
 2335 0033 02       		.uleb128 0x2
 2336 0034 02       		.byte	0x2
 2337 0035 05       		.byte	0x5
 2338 0036 24040000 		.4byte	.LASF2
 2339 003a 02       		.uleb128 0x2
 2340 003b 02       		.byte	0x2
 2341 003c 07       		.byte	0x7
 2342 003d B9050000 		.4byte	.LASF3
 2343 0041 03       		.uleb128 0x3
 2344 0042 6E000000 		.4byte	.LASF11
 2345 0046 02       		.byte	0x2
 2346 0047 3F       		.byte	0x3f
 2347 0048 4C000000 		.4byte	0x4c
 2348 004c 02       		.uleb128 0x2
 2349 004d 04       		.byte	0x4
 2350 004e 05       		.byte	0x5
 2351 004f 4E040000 		.4byte	.LASF4
 2352 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 53


 2353 0054 04       		.byte	0x4
 2354 0055 07       		.byte	0x7
 2355 0056 C7040000 		.4byte	.LASF5
 2356 005a 02       		.uleb128 0x2
 2357 005b 08       		.byte	0x8
 2358 005c 05       		.byte	0x5
 2359 005d AC020000 		.4byte	.LASF6
 2360 0061 02       		.uleb128 0x2
 2361 0062 08       		.byte	0x8
 2362 0063 07       		.byte	0x7
 2363 0064 8B010000 		.4byte	.LASF7
 2364 0068 04       		.uleb128 0x4
 2365 0069 04       		.byte	0x4
 2366 006a 05       		.byte	0x5
 2367 006b 696E7400 		.ascii	"int\000"
 2368 006f 02       		.uleb128 0x2
 2369 0070 04       		.byte	0x4
 2370 0071 07       		.byte	0x7
 2371 0072 61000000 		.4byte	.LASF8
 2372 0076 02       		.uleb128 0x2
 2373 0077 04       		.byte	0x4
 2374 0078 07       		.byte	0x7
 2375 0079 BE040000 		.4byte	.LASF9
 2376 007d 05       		.uleb128 0x5
 2377 007e 04       		.byte	0x4
 2378 007f 83000000 		.4byte	0x83
 2379 0083 02       		.uleb128 0x2
 2380 0084 01       		.byte	0x1
 2381 0085 08       		.byte	0x8
 2382 0086 65020000 		.4byte	.LASF10
 2383 008a 03       		.uleb128 0x3
 2384 008b E5040000 		.4byte	.LASF12
 2385 008f 03       		.byte	0x3
 2386 0090 2C       		.byte	0x2c
 2387 0091 41000000 		.4byte	0x41
 2388 0095 06       		.uleb128 0x6
 2389 0096 F6050000 		.4byte	.LASF13
 2390 009a 04       		.byte	0x4
 2391 009b 9201     		.2byte	0x192
 2392 009d 2C000000 		.4byte	0x2c
 2393 00a1 06       		.uleb128 0x6
 2394 00a2 83020000 		.4byte	.LASF14
 2395 00a6 04       		.byte	0x4
 2396 00a7 9301     		.2byte	0x193
 2397 00a9 3A000000 		.4byte	0x3a
 2398 00ad 06       		.uleb128 0x6
 2399 00ae 8A030000 		.4byte	.LASF15
 2400 00b2 04       		.byte	0x4
 2401 00b3 9401     		.2byte	0x194
 2402 00b5 53000000 		.4byte	0x53
 2403 00b9 06       		.uleb128 0x6
 2404 00ba 8A020000 		.4byte	.LASF16
 2405 00be 04       		.byte	0x4
 2406 00bf 9501     		.2byte	0x195
 2407 00c1 25000000 		.4byte	0x25
 2408 00c5 06       		.uleb128 0x6
 2409 00c6 78000000 		.4byte	.LASF17
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 54


 2410 00ca 04       		.byte	0x4
 2411 00cb 9601     		.2byte	0x196
 2412 00cd 33000000 		.4byte	0x33
 2413 00d1 02       		.uleb128 0x2
 2414 00d2 04       		.byte	0x4
 2415 00d3 04       		.byte	0x4
 2416 00d4 41010000 		.4byte	.LASF18
 2417 00d8 02       		.uleb128 0x2
 2418 00d9 08       		.byte	0x8
 2419 00da 04       		.byte	0x4
 2420 00db FC050000 		.4byte	.LASF19
 2421 00df 02       		.uleb128 0x2
 2422 00e0 08       		.byte	0x8
 2423 00e1 04       		.byte	0x4
 2424 00e2 DD030000 		.4byte	.LASF20
 2425 00e6 07       		.uleb128 0x7
 2426 00e7 51050000 		.4byte	.LASF133
 2427 00eb 01       		.byte	0x1
 2428 00ec 05       		.byte	0x5
 2429 00ed 48       		.byte	0x48
 2430 00ee 0B010000 		.4byte	0x10b
 2431 00f2 08       		.uleb128 0x8
 2432 00f3 60010000 		.4byte	.LASF21
 2433 00f7 00       		.sleb128 0
 2434 00f8 08       		.uleb128 0x8
 2435 00f9 8B000000 		.4byte	.LASF22
 2436 00fd 01       		.sleb128 1
 2437 00fe 08       		.uleb128 0x8
 2438 00ff 0A000000 		.4byte	.LASF23
 2439 0103 02       		.sleb128 2
 2440 0104 08       		.uleb128 0x8
 2441 0105 CC030000 		.4byte	.LASF24
 2442 0109 03       		.sleb128 3
 2443 010a 00       		.byte	0
 2444 010b 09       		.uleb128 0x9
 2445 010c 91030000 		.4byte	.LASF134
 2446 0110 20       		.byte	0x20
 2447 0111 05       		.byte	0x5
 2448 0112 4F       		.byte	0x4f
 2449 0113 E4010000 		.4byte	0x1e4
 2450 0117 0A       		.uleb128 0xa
 2451 0118 A9030000 		.4byte	.LASF25
 2452 011c 05       		.byte	0x5
 2453 011d 50       		.byte	0x50
 2454 011e B9000000 		.4byte	0xb9
 2455 0122 00       		.byte	0
 2456 0123 0A       		.uleb128 0xa
 2457 0124 5A010000 		.4byte	.LASF26
 2458 0128 05       		.byte	0x5
 2459 0129 51       		.byte	0x51
 2460 012a 95000000 		.4byte	0x95
 2461 012e 01       		.byte	0x1
 2462 012f 0A       		.uleb128 0xa
 2463 0130 F4040000 		.4byte	.LASF27
 2464 0134 05       		.byte	0x5
 2465 0135 52       		.byte	0x52
 2466 0136 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 55


 2467 013a 02       		.byte	0x2
 2468 013b 0A       		.uleb128 0xa
 2469 013c 39020000 		.4byte	.LASF28
 2470 0140 05       		.byte	0x5
 2471 0141 53       		.byte	0x53
 2472 0142 C5000000 		.4byte	0xc5
 2473 0146 04       		.byte	0x4
 2474 0147 0A       		.uleb128 0xa
 2475 0148 CC050000 		.4byte	.LASF29
 2476 014c 05       		.byte	0x5
 2477 014d 54       		.byte	0x54
 2478 014e C5000000 		.4byte	0xc5
 2479 0152 06       		.byte	0x6
 2480 0153 0A       		.uleb128 0xa
 2481 0154 57060000 		.4byte	.LASF30
 2482 0158 05       		.byte	0x5
 2483 0159 55       		.byte	0x55
 2484 015a C5000000 		.4byte	0xc5
 2485 015e 08       		.byte	0x8
 2486 015f 0A       		.uleb128 0xa
 2487 0160 66030000 		.4byte	.LASF31
 2488 0164 05       		.byte	0x5
 2489 0165 56       		.byte	0x56
 2490 0166 C5000000 		.4byte	0xc5
 2491 016a 0A       		.byte	0xa
 2492 016b 0A       		.uleb128 0xa
 2493 016c 6A020000 		.4byte	.LASF32
 2494 0170 05       		.byte	0x5
 2495 0171 57       		.byte	0x57
 2496 0172 C5000000 		.4byte	0xc5
 2497 0176 0C       		.byte	0xc
 2498 0177 0A       		.uleb128 0xa
 2499 0178 AE030000 		.4byte	.LASF33
 2500 017c 05       		.byte	0x5
 2501 017d 58       		.byte	0x58
 2502 017e C5000000 		.4byte	0xc5
 2503 0182 0E       		.byte	0xe
 2504 0183 0A       		.uleb128 0xa
 2505 0184 C7020000 		.4byte	.LASF34
 2506 0188 05       		.byte	0x5
 2507 0189 59       		.byte	0x59
 2508 018a C5000000 		.4byte	0xc5
 2509 018e 10       		.byte	0x10
 2510 018f 0A       		.uleb128 0xa
 2511 0190 AE040000 		.4byte	.LASF35
 2512 0194 05       		.byte	0x5
 2513 0195 5A       		.byte	0x5a
 2514 0196 C5000000 		.4byte	0xc5
 2515 019a 12       		.byte	0x12
 2516 019b 0A       		.uleb128 0xa
 2517 019c 6E060000 		.4byte	.LASF36
 2518 01a0 05       		.byte	0x5
 2519 01a1 5B       		.byte	0x5b
 2520 01a2 C5000000 		.4byte	0xc5
 2521 01a6 14       		.byte	0x14
 2522 01a7 0A       		.uleb128 0xa
 2523 01a8 8F020000 		.4byte	.LASF37
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 56


 2524 01ac 05       		.byte	0x5
 2525 01ad 5C       		.byte	0x5c
 2526 01ae C5000000 		.4byte	0xc5
 2527 01b2 16       		.byte	0x16
 2528 01b3 0A       		.uleb128 0xa
 2529 01b4 B8000000 		.4byte	.LASF38
 2530 01b8 05       		.byte	0x5
 2531 01b9 5D       		.byte	0x5d
 2532 01ba C5000000 		.4byte	0xc5
 2533 01be 18       		.byte	0x18
 2534 01bf 0A       		.uleb128 0xa
 2535 01c0 97040000 		.4byte	.LASF39
 2536 01c4 05       		.byte	0x5
 2537 01c5 5E       		.byte	0x5e
 2538 01c6 C5000000 		.4byte	0xc5
 2539 01ca 1A       		.byte	0x1a
 2540 01cb 0A       		.uleb128 0xa
 2541 01cc 5D030000 		.4byte	.LASF40
 2542 01d0 05       		.byte	0x5
 2543 01d1 5F       		.byte	0x5f
 2544 01d2 C5000000 		.4byte	0xc5
 2545 01d6 1C       		.byte	0x1c
 2546 01d7 0A       		.uleb128 0xa
 2547 01d8 2A010000 		.4byte	.LASF41
 2548 01dc 05       		.byte	0x5
 2549 01dd 60       		.byte	0x60
 2550 01de C5000000 		.4byte	0xc5
 2551 01e2 1E       		.byte	0x1e
 2552 01e3 00       		.byte	0
 2553 01e4 0B       		.uleb128 0xb
 2554 01e5 14060000 		.4byte	.LASF69
 2555 01e9 01       		.byte	0x1
 2556 01ea 28       		.byte	0x28
 2557 01eb 00000000 		.4byte	.LFB63
 2558 01ef 60010000 		.4byte	.LFE63-.LFB63
 2559 01f3 01       		.uleb128 0x1
 2560 01f4 9C       		.byte	0x9c
 2561 01f5 2E020000 		.4byte	0x22e
 2562 01f9 0C       		.uleb128 0xc
 2563 01fa 10000000 		.4byte	.LBB2
 2564 01fe 34010000 		.4byte	.LBE2-.LBB2
 2565 0202 0D       		.uleb128 0xd
 2566 0203 AB000000 		.4byte	.LASF42
 2567 0207 01       		.byte	0x1
 2568 0208 2E       		.byte	0x2e
 2569 0209 A1000000 		.4byte	0xa1
 2570 020d 02       		.uleb128 0x2
 2571 020e 91       		.byte	0x91
 2572 020f 76       		.sleb128 -10
 2573 0210 0D       		.uleb128 0xd
 2574 0211 D9040000 		.4byte	.LASF43
 2575 0215 01       		.byte	0x1
 2576 0216 30       		.byte	0x30
 2577 0217 2E020000 		.4byte	0x22e
 2578 021b 02       		.uleb128 0x2
 2579 021c 91       		.byte	0x91
 2580 021d 68       		.sleb128 -24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 57


 2581 021e 0D       		.uleb128 0xd
 2582 021f 66010000 		.4byte	.LASF44
 2583 0223 01       		.byte	0x1
 2584 0224 31       		.byte	0x31
 2585 0225 2E020000 		.4byte	0x22e
 2586 0229 02       		.uleb128 0x2
 2587 022a 91       		.byte	0x91
 2588 022b 5C       		.sleb128 -36
 2589 022c 00       		.byte	0
 2590 022d 00       		.byte	0
 2591 022e 0E       		.uleb128 0xe
 2592 022f 83000000 		.4byte	0x83
 2593 0233 3E020000 		.4byte	0x23e
 2594 0237 0F       		.uleb128 0xf
 2595 0238 76000000 		.4byte	0x76
 2596 023c 0B       		.byte	0xb
 2597 023d 00       		.byte	0
 2598 023e 10       		.uleb128 0x10
 2599 023f 47010000 		.4byte	.LASF58
 2600 0243 01       		.byte	0x1
 2601 0244 A1       		.byte	0xa1
 2602 0245 00000000 		.4byte	.LFB64
 2603 0249 2C000000 		.4byte	.LFE64-.LFB64
 2604 024d 01       		.uleb128 0x1
 2605 024e 9C       		.byte	0x9c
 2606 024f 70020000 		.4byte	0x270
 2607 0253 11       		.uleb128 0x11
 2608 0254 A6020000 		.4byte	.LASF45
 2609 0258 01       		.byte	0x1
 2610 0259 A1       		.byte	0xa1
 2611 025a 68000000 		.4byte	0x68
 2612 025e 02       		.uleb128 0x2
 2613 025f 91       		.byte	0x91
 2614 0260 74       		.sleb128 -12
 2615 0261 11       		.uleb128 0x11
 2616 0262 9F040000 		.4byte	.LASF46
 2617 0266 01       		.byte	0x1
 2618 0267 A1       		.byte	0xa1
 2619 0268 68000000 		.4byte	0x68
 2620 026c 02       		.uleb128 0x2
 2621 026d 91       		.byte	0x91
 2622 026e 70       		.sleb128 -16
 2623 026f 00       		.byte	0
 2624 0270 12       		.uleb128 0x12
 2625 0271 68050000 		.4byte	.LASF47
 2626 0275 01       		.byte	0x1
 2627 0276 A6       		.byte	0xa6
 2628 0277 00000000 		.4byte	.LFB65
 2629 027b 18000000 		.4byte	.LFE65-.LFB65
 2630 027f 01       		.uleb128 0x1
 2631 0280 9C       		.byte	0x9c
 2632 0281 12       		.uleb128 0x12
 2633 0282 80060000 		.4byte	.LASF48
 2634 0286 01       		.byte	0x1
 2635 0287 AC       		.byte	0xac
 2636 0288 00000000 		.4byte	.LFB66
 2637 028c 18000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 58


 2638 0290 01       		.uleb128 0x1
 2639 0291 9C       		.byte	0x9c
 2640 0292 12       		.uleb128 0x12
 2641 0293 FF040000 		.4byte	.LASF49
 2642 0297 01       		.byte	0x1
 2643 0298 B2       		.byte	0xb2
 2644 0299 00000000 		.4byte	.LFB67
 2645 029d 16000000 		.4byte	.LFE67-.LFB67
 2646 02a1 01       		.uleb128 0x1
 2647 02a2 9C       		.byte	0x9c
 2648 02a3 12       		.uleb128 0x12
 2649 02a4 74010000 		.4byte	.LASF50
 2650 02a8 01       		.byte	0x1
 2651 02a9 B9       		.byte	0xb9
 2652 02aa 00000000 		.4byte	.LFB68
 2653 02ae 0E000000 		.4byte	.LFE68-.LFB68
 2654 02b2 01       		.uleb128 0x1
 2655 02b3 9C       		.byte	0x9c
 2656 02b4 12       		.uleb128 0x12
 2657 02b5 82010000 		.4byte	.LASF51
 2658 02b9 01       		.byte	0x1
 2659 02ba BE       		.byte	0xbe
 2660 02bb 00000000 		.4byte	.LFB69
 2661 02bf 0E000000 		.4byte	.LFE69-.LFB69
 2662 02c3 01       		.uleb128 0x1
 2663 02c4 9C       		.byte	0x9c
 2664 02c5 12       		.uleb128 0x12
 2665 02c6 A4040000 		.4byte	.LASF52
 2666 02ca 01       		.byte	0x1
 2667 02cb C3       		.byte	0xc3
 2668 02cc 00000000 		.4byte	.LFB70
 2669 02d0 0E000000 		.4byte	.LFE70-.LFB70
 2670 02d4 01       		.uleb128 0x1
 2671 02d5 9C       		.byte	0x9c
 2672 02d6 12       		.uleb128 0x12
 2673 02d7 BD010000 		.4byte	.LASF53
 2674 02db 01       		.byte	0x1
 2675 02dc C8       		.byte	0xc8
 2676 02dd 00000000 		.4byte	.LFB71
 2677 02e1 2C000000 		.4byte	.LFE71-.LFB71
 2678 02e5 01       		.uleb128 0x1
 2679 02e6 9C       		.byte	0x9c
 2680 02e7 12       		.uleb128 0x12
 2681 02e8 57040000 		.4byte	.LASF54
 2682 02ec 01       		.byte	0x1
 2683 02ed D0       		.byte	0xd0
 2684 02ee 00000000 		.4byte	.LFB72
 2685 02f2 2C000000 		.4byte	.LFE72-.LFB72
 2686 02f6 01       		.uleb128 0x1
 2687 02f7 9C       		.byte	0x9c
 2688 02f8 12       		.uleb128 0x12
 2689 02f9 1E010000 		.4byte	.LASF55
 2690 02fd 01       		.byte	0x1
 2691 02fe D8       		.byte	0xd8
 2692 02ff 00000000 		.4byte	.LFB73
 2693 0303 14000000 		.4byte	.LFE73-.LFB73
 2694 0307 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 59


 2695 0308 9C       		.byte	0x9c
 2696 0309 13       		.uleb128 0x13
 2697 030a D3010000 		.4byte	.LASF56
 2698 030e 01       		.byte	0x1
 2699 030f DD       		.byte	0xdd
 2700 0310 00000000 		.4byte	.LFB74
 2701 0314 18000000 		.4byte	.LFE74-.LFB74
 2702 0318 01       		.uleb128 0x1
 2703 0319 9C       		.byte	0x9c
 2704 031a 12       		.uleb128 0x12
 2705 031b 57050000 		.4byte	.LASF57
 2706 031f 01       		.byte	0x1
 2707 0320 E1       		.byte	0xe1
 2708 0321 00000000 		.4byte	.LFB75
 2709 0325 34000000 		.4byte	.LFE75-.LFB75
 2710 0329 01       		.uleb128 0x1
 2711 032a 9C       		.byte	0x9c
 2712 032b 14       		.uleb128 0x14
 2713 032c E9030000 		.4byte	.LASF59
 2714 0330 01       		.byte	0x1
 2715 0331 E9       		.byte	0xe9
 2716 0332 00000000 		.4byte	.LFB76
 2717 0336 98000000 		.4byte	.LFE76-.LFB76
 2718 033a 01       		.uleb128 0x1
 2719 033b 9C       		.byte	0x9c
 2720 033c 4F030000 		.4byte	0x34f
 2721 0340 0D       		.uleb128 0xd
 2722 0341 6E030000 		.4byte	.LASF60
 2723 0345 01       		.byte	0x1
 2724 0346 EA       		.byte	0xea
 2725 0347 83000000 		.4byte	0x83
 2726 034b 02       		.uleb128 0x2
 2727 034c 91       		.byte	0x91
 2728 034d 6F       		.sleb128 -17
 2729 034e 00       		.byte	0
 2730 034f 15       		.uleb128 0x15
 2731 0350 D4030000 		.4byte	.LASF61
 2732 0354 01       		.byte	0x1
 2733 0355 0101     		.2byte	0x101
 2734 0357 00000000 		.4byte	.LFB77
 2735 035b 9C000000 		.4byte	.LFE77-.LFB77
 2736 035f 01       		.uleb128 0x1
 2737 0360 9C       		.byte	0x9c
 2738 0361 75030000 		.4byte	0x375
 2739 0365 16       		.uleb128 0x16
 2740 0366 6E030000 		.4byte	.LASF60
 2741 036a 01       		.byte	0x1
 2742 036b 0301     		.2byte	0x103
 2743 036d 83000000 		.4byte	0x83
 2744 0371 02       		.uleb128 0x2
 2745 0372 91       		.byte	0x91
 2746 0373 77       		.sleb128 -9
 2747 0374 00       		.byte	0
 2748 0375 17       		.uleb128 0x17
 2749 0376 E3050000 		.4byte	.LASF62
 2750 037a 01       		.byte	0x1
 2751 037b 1801     		.2byte	0x118
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 60


 2752 037d 00000000 		.4byte	.LFB78
 2753 0381 0C000000 		.4byte	.LFE78-.LFB78
 2754 0385 01       		.uleb128 0x1
 2755 0386 9C       		.byte	0x9c
 2756 0387 18       		.uleb128 0x18
 2757 0388 B6040000 		.4byte	.LASF63
 2758 038c 01       		.byte	0x1
 2759 038d 1E01     		.2byte	0x11e
 2760 038f 00000000 		.4byte	.LFB79
 2761 0393 2C000000 		.4byte	.LFE79-.LFB79
 2762 0397 01       		.uleb128 0x1
 2763 0398 9C       		.byte	0x9c
 2764 0399 18       		.uleb128 0x18
 2765 039a 37010000 		.4byte	.LASF64
 2766 039e 01       		.byte	0x1
 2767 039f 2701     		.2byte	0x127
 2768 03a1 00000000 		.4byte	.LFB80
 2769 03a5 B8000000 		.4byte	.LFE80-.LFB80
 2770 03a9 01       		.uleb128 0x1
 2771 03aa 9C       		.byte	0x9c
 2772 03ab 18       		.uleb128 0x18
 2773 03ac AE010000 		.4byte	.LASF65
 2774 03b0 01       		.byte	0x1
 2775 03b1 3C01     		.2byte	0x13c
 2776 03b3 00000000 		.4byte	.LFB81
 2777 03b7 70000000 		.4byte	.LFE81-.LFB81
 2778 03bb 01       		.uleb128 0x1
 2779 03bc 9C       		.byte	0x9c
 2780 03bd 17       		.uleb128 0x17
 2781 03be 23050000 		.4byte	.LASF66
 2782 03c2 01       		.byte	0x1
 2783 03c3 5501     		.2byte	0x155
 2784 03c5 00000000 		.4byte	.LFB82
 2785 03c9 1C000000 		.4byte	.LFE82-.LFB82
 2786 03cd 01       		.uleb128 0x1
 2787 03ce 9C       		.byte	0x9c
 2788 03cf 18       		.uleb128 0x18
 2789 03d0 1A020000 		.4byte	.LASF67
 2790 03d4 01       		.byte	0x1
 2791 03d5 5C01     		.2byte	0x15c
 2792 03d7 00000000 		.4byte	.LFB83
 2793 03db 1C000000 		.4byte	.LFE83-.LFB83
 2794 03df 01       		.uleb128 0x1
 2795 03e0 9C       		.byte	0x9c
 2796 03e1 18       		.uleb128 0x18
 2797 03e2 91000000 		.4byte	.LASF68
 2798 03e6 01       		.byte	0x1
 2799 03e7 6501     		.2byte	0x165
 2800 03e9 00000000 		.4byte	.LFB84
 2801 03ed 0A000000 		.4byte	.LFE84-.LFB84
 2802 03f1 01       		.uleb128 0x1
 2803 03f2 9C       		.byte	0x9c
 2804 03f3 19       		.uleb128 0x19
 2805 03f4 32000000 		.4byte	.LASF70
 2806 03f8 01       		.byte	0x1
 2807 03f9 6A01     		.2byte	0x16a
 2808 03fb 00000000 		.4byte	.LFB85
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 61


 2809 03ff D8010000 		.4byte	.LFE85-.LFB85
 2810 0403 01       		.uleb128 0x1
 2811 0404 9C       		.byte	0x9c
 2812 0405 66040000 		.4byte	0x466
 2813 0409 16       		.uleb128 0x16
 2814 040a 59020000 		.4byte	.LASF71
 2815 040e 01       		.byte	0x1
 2816 040f 7001     		.2byte	0x170
 2817 0411 66040000 		.4byte	0x466
 2818 0415 03       		.uleb128 0x3
 2819 0416 91       		.byte	0x91
 2820 0417 A47F     		.sleb128 -92
 2821 0419 16       		.uleb128 0x16
 2822 041a 26000000 		.4byte	.LASF72
 2823 041e 01       		.byte	0x1
 2824 041f 7101     		.2byte	0x171
 2825 0421 66040000 		.4byte	0x466
 2826 0425 03       		.uleb128 0x3
 2827 0426 91       		.byte	0x91
 2828 0427 E47E     		.sleb128 -156
 2829 0429 16       		.uleb128 0x16
 2830 042a FA010000 		.4byte	.LASF73
 2831 042e 01       		.byte	0x1
 2832 042f 7801     		.2byte	0x178
 2833 0431 C5000000 		.4byte	0xc5
 2834 0435 02       		.uleb128 0x2
 2835 0436 91       		.byte	0x91
 2836 0437 6E       		.sleb128 -18
 2837 0438 16       		.uleb128 0x16
 2838 0439 76030000 		.4byte	.LASF74
 2839 043d 01       		.byte	0x1
 2840 043e 7901     		.2byte	0x179
 2841 0440 C5000000 		.4byte	0xc5
 2842 0444 02       		.uleb128 0x2
 2843 0445 91       		.byte	0x91
 2844 0446 6C       		.sleb128 -20
 2845 0447 16       		.uleb128 0x16
 2846 0448 9C020000 		.4byte	.LASF75
 2847 044c 01       		.byte	0x1
 2848 044d 7B01     		.2byte	0x17b
 2849 044f 68000000 		.4byte	0x68
 2850 0453 02       		.uleb128 0x2
 2851 0454 91       		.byte	0x91
 2852 0455 68       		.sleb128 -24
 2853 0456 16       		.uleb128 0x16
 2854 0457 EC050000 		.4byte	.LASF76
 2855 045b 01       		.byte	0x1
 2856 045c 7C01     		.2byte	0x17c
 2857 045e 68000000 		.4byte	0x68
 2858 0462 02       		.uleb128 0x2
 2859 0463 91       		.byte	0x91
 2860 0464 64       		.sleb128 -28
 2861 0465 00       		.byte	0
 2862 0466 0E       		.uleb128 0xe
 2863 0467 83000000 		.4byte	0x83
 2864 046b 76040000 		.4byte	0x476
 2865 046f 0F       		.uleb128 0xf
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 62


 2866 0470 76000000 		.4byte	0x76
 2867 0474 3F       		.byte	0x3f
 2868 0475 00       		.byte	0
 2869 0476 19       		.uleb128 0x19
 2870 0477 4F020000 		.4byte	.LASF77
 2871 047b 01       		.byte	0x1
 2872 047c 8A01     		.2byte	0x18a
 2873 047e 00000000 		.4byte	.LFB86
 2874 0482 C0000000 		.4byte	.LFE86-.LFB86
 2875 0486 01       		.uleb128 0x1
 2876 0487 9C       		.byte	0x9c
 2877 0488 C4040000 		.4byte	0x4c4
 2878 048c 0C       		.uleb128 0xc
 2879 048d 0E000000 		.4byte	.LBB3
 2880 0491 8E000000 		.4byte	.LBE3-.LBB3
 2881 0495 16       		.uleb128 0x16
 2882 0496 EC010000 		.4byte	.LASF78
 2883 049a 01       		.byte	0x1
 2884 049b 9301     		.2byte	0x193
 2885 049d D1000000 		.4byte	0xd1
 2886 04a1 02       		.uleb128 0x2
 2887 04a2 91       		.byte	0x91
 2888 04a3 74       		.sleb128 -12
 2889 04a4 16       		.uleb128 0x16
 2890 04a5 9B030000 		.4byte	.LASF79
 2891 04a9 01       		.byte	0x1
 2892 04aa 9401     		.2byte	0x194
 2893 04ac C5000000 		.4byte	0xc5
 2894 04b0 02       		.uleb128 0x2
 2895 04b1 91       		.byte	0x91
 2896 04b2 72       		.sleb128 -14
 2897 04b3 16       		.uleb128 0x16
 2898 04b4 21020000 		.4byte	.LASF80
 2899 04b8 01       		.byte	0x1
 2900 04b9 9901     		.2byte	0x199
 2901 04bb C4040000 		.4byte	0x4c4
 2902 04bf 02       		.uleb128 0x2
 2903 04c0 91       		.byte	0x91
 2904 04c1 60       		.sleb128 -32
 2905 04c2 00       		.byte	0
 2906 04c3 00       		.byte	0
 2907 04c4 0E       		.uleb128 0xe
 2908 04c5 83000000 		.4byte	0x83
 2909 04c9 D4040000 		.4byte	0x4d4
 2910 04cd 0F       		.uleb128 0xf
 2911 04ce 76000000 		.4byte	0x76
 2912 04d2 0F       		.byte	0xf
 2913 04d3 00       		.byte	0
 2914 04d4 19       		.uleb128 0x19
 2915 04d5 4E060000 		.4byte	.LASF81
 2916 04d9 01       		.byte	0x1
 2917 04da A001     		.2byte	0x1a0
 2918 04dc 00000000 		.4byte	.LFB87
 2919 04e0 B8000000 		.4byte	.LFE87-.LFB87
 2920 04e4 01       		.uleb128 0x1
 2921 04e5 9C       		.byte	0x9c
 2922 04e6 04050000 		.4byte	0x504
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 63


 2923 04ea 0C       		.uleb128 0xc
 2924 04eb 0E000000 		.4byte	.LBB4
 2925 04ef 86000000 		.4byte	.LBE4-.LBB4
 2926 04f3 16       		.uleb128 0x16
 2927 04f4 72040000 		.4byte	.LASF82
 2928 04f8 01       		.byte	0x1
 2929 04f9 A401     		.2byte	0x1a4
 2930 04fb C4040000 		.4byte	0x4c4
 2931 04ff 02       		.uleb128 0x2
 2932 0500 91       		.byte	0x91
 2933 0501 68       		.sleb128 -24
 2934 0502 00       		.byte	0
 2935 0503 00       		.byte	0
 2936 0504 1A       		.uleb128 0x1a
 2937 0505 DE050000 		.4byte	.LASF83
 2938 0509 01       		.byte	0x1
 2939 050a B501     		.2byte	0x1b5
 2940 050c 68000000 		.4byte	0x68
 2941 0510 00000000 		.4byte	.LFB88
 2942 0514 B8000000 		.4byte	.LFE88-.LFB88
 2943 0518 01       		.uleb128 0x1
 2944 0519 9C       		.byte	0x9c
 2945 051a 15       		.uleb128 0x15
 2946 051b 11010000 		.4byte	.LASF84
 2947 051f 01       		.byte	0x1
 2948 0520 1102     		.2byte	0x211
 2949 0522 00000000 		.4byte	.LFB89
 2950 0526 68000000 		.4byte	.LFE89-.LFB89
 2951 052a 01       		.uleb128 0x1
 2952 052b 9C       		.byte	0x9c
 2953 052c 57050000 		.4byte	0x557
 2954 0530 1B       		.uleb128 0x1b
 2955 0531 7300     		.ascii	"s\000"
 2956 0533 01       		.byte	0x1
 2957 0534 1102     		.2byte	0x211
 2958 0536 7D000000 		.4byte	0x7d
 2959 053a 02       		.uleb128 0x2
 2960 053b 91       		.byte	0x91
 2961 053c 6C       		.sleb128 -20
 2962 053d 0C       		.uleb128 0xc
 2963 053e 10000000 		.4byte	.LBB5
 2964 0542 48000000 		.4byte	.LBE5-.LBB5
 2965 0546 1C       		.uleb128 0x1c
 2966 0547 636E7400 		.ascii	"cnt\000"
 2967 054b 01       		.byte	0x1
 2968 054c 1802     		.2byte	0x218
 2969 054e AD000000 		.4byte	0xad
 2970 0552 02       		.uleb128 0x2
 2971 0553 91       		.byte	0x91
 2972 0554 74       		.sleb128 -12
 2973 0555 00       		.byte	0
 2974 0556 00       		.byte	0
 2975 0557 15       		.uleb128 0x15
 2976 0558 A2050000 		.4byte	.LASF85
 2977 055c 01       		.byte	0x1
 2978 055d 2702     		.2byte	0x227
 2979 055f 00000000 		.4byte	.LFB90
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 64


 2980 0563 50000000 		.4byte	.LFE90-.LFB90
 2981 0567 01       		.uleb128 0x1
 2982 0568 9C       		.byte	0x9c
 2983 0569 94050000 		.4byte	0x594
 2984 056d 1B       		.uleb128 0x1b
 2985 056e 6300     		.ascii	"c\000"
 2986 0570 01       		.byte	0x1
 2987 0571 2702     		.2byte	0x227
 2988 0573 83000000 		.4byte	0x83
 2989 0577 02       		.uleb128 0x2
 2990 0578 91       		.byte	0x91
 2991 0579 6F       		.sleb128 -17
 2992 057a 0C       		.uleb128 0xc
 2993 057b 12000000 		.4byte	.LBB6
 2994 057f 2E000000 		.4byte	.LBE6-.LBB6
 2995 0583 1C       		.uleb128 0x1c
 2996 0584 636E7400 		.ascii	"cnt\000"
 2997 0588 01       		.byte	0x1
 2998 0589 2B02     		.2byte	0x22b
 2999 058b AD000000 		.4byte	0xad
 3000 058f 02       		.uleb128 0x2
 3001 0590 91       		.byte	0x91
 3002 0591 74       		.sleb128 -12
 3003 0592 00       		.byte	0
 3004 0593 00       		.byte	0
 3005 0594 19       		.uleb128 0x19
 3006 0595 2C020000 		.4byte	.LASF86
 3007 0599 01       		.byte	0x1
 3008 059a 3802     		.2byte	0x238
 3009 059c 00000000 		.4byte	.LFB91
 3010 05a0 3A000000 		.4byte	.LFE91-.LFB91
 3011 05a4 01       		.uleb128 0x1
 3012 05a5 9C       		.byte	0x9c
 3013 05a6 B8050000 		.4byte	0x5b8
 3014 05aa 1C       		.uleb128 0x1c
 3015 05ab 6300     		.ascii	"c\000"
 3016 05ad 01       		.byte	0x1
 3017 05ae 3A02     		.2byte	0x23a
 3018 05b0 95000000 		.4byte	0x95
 3019 05b4 02       		.uleb128 0x2
 3020 05b5 91       		.byte	0x91
 3021 05b6 77       		.sleb128 -9
 3022 05b7 00       		.byte	0
 3023 05b8 1D       		.uleb128 0x1d
 3024 05b9 65040000 		.4byte	.LASF87
 3025 05bd 06       		.byte	0x6
 3026 05be 9606     		.2byte	0x696
 3027 05c0 C4050000 		.4byte	0x5c4
 3028 05c4 1E       		.uleb128 0x1e
 3029 05c5 8A000000 		.4byte	0x8a
 3030 05c9 1F       		.uleb128 0x1f
 3031 05ca 747300   		.ascii	"ts\000"
 3032 05cd 05       		.byte	0x5
 3033 05ce 10       		.byte	0x10
 3034 05cf 95000000 		.4byte	0x95
 3035 05d3 05       		.uleb128 0x5
 3036 05d4 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 65


 3037 05d5 00000000 		.4byte	ts
 3038 05d9 20       		.uleb128 0x20
 3039 05da 30050000 		.4byte	.LASF88
 3040 05de 05       		.byte	0x5
 3041 05df 11       		.byte	0x11
 3042 05e0 A1000000 		.4byte	0xa1
 3043 05e4 05       		.uleb128 0x5
 3044 05e5 03       		.byte	0x3
 3045 05e6 00000000 		.4byte	ts_enc
 3046 05ea 20       		.uleb128 0x20
 3047 05eb 7E040000 		.4byte	.LASF89
 3048 05ef 05       		.byte	0x5
 3049 05f0 12       		.byte	0x12
 3050 05f1 A1000000 		.4byte	0xa1
 3051 05f5 05       		.uleb128 0x5
 3052 05f6 03       		.byte	0x3
 3053 05f7 00000000 		.4byte	ts_update
 3054 05fb 20       		.uleb128 0x20
 3055 05fc 81030000 		.4byte	.LASF90
 3056 0600 05       		.byte	0x5
 3057 0601 13       		.byte	0x13
 3058 0602 A1000000 		.4byte	0xa1
 3059 0606 05       		.uleb128 0x5
 3060 0607 03       		.byte	0x3
 3061 0608 00000000 		.4byte	ts_speed
 3062 060c 20       		.uleb128 0x20
 3063 060d 44020000 		.4byte	.LASF91
 3064 0611 05       		.byte	0x5
 3065 0612 14       		.byte	0x14
 3066 0613 A1000000 		.4byte	0xa1
 3067 0617 05       		.uleb128 0x5
 3068 0618 03       		.byte	0x3
 3069 0619 00000000 		.4byte	ts_display
 3070 061d 20       		.uleb128 0x20
 3071 061e 04020000 		.4byte	.LASF92
 3072 0622 05       		.byte	0x5
 3073 0623 16       		.byte	0x16
 3074 0624 95000000 		.4byte	0x95
 3075 0628 05       		.uleb128 0x5
 3076 0629 03       		.byte	0x3
 3077 062a 00000000 		.4byte	flag_ts_enc
 3078 062e 20       		.uleb128 0x20
 3079 062f DD010000 		.4byte	.LASF93
 3080 0633 05       		.byte	0x5
 3081 0634 17       		.byte	0x17
 3082 0635 95000000 		.4byte	0x95
 3083 0639 05       		.uleb128 0x5
 3084 063a 03       		.byte	0x3
 3085 063b 00000000 		.4byte	flag_ts_update
 3086 063f 20       		.uleb128 0x20
 3087 0640 FF030000 		.4byte	.LASF94
 3088 0644 05       		.byte	0x5
 3089 0645 18       		.byte	0x18
 3090 0646 95000000 		.4byte	0x95
 3091 064a 05       		.uleb128 0x5
 3092 064b 03       		.byte	0x3
 3093 064c 00000000 		.4byte	flag_ts_speed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 66


 3094 0650 20       		.uleb128 0x20
 3095 0651 41050000 		.4byte	.LASF95
 3096 0655 05       		.byte	0x5
 3097 0656 19       		.byte	0x19
 3098 0657 95000000 		.4byte	0x95
 3099 065b 05       		.uleb128 0x5
 3100 065c 03       		.byte	0x3
 3101 065d 00000000 		.4byte	flag_ts_display
 3102 0661 20       		.uleb128 0x20
 3103 0662 1C040000 		.4byte	.LASF96
 3104 0666 05       		.byte	0x5
 3105 0667 1C       		.byte	0x1c
 3106 0668 95000000 		.4byte	0x95
 3107 066c 05       		.uleb128 0x5
 3108 066d 03       		.byte	0x3
 3109 066e 00000000 		.4byte	flag_rx
 3110 0672 20       		.uleb128 0x20
 3111 0673 A2010000 		.4byte	.LASF97
 3112 0677 05       		.byte	0x5
 3113 0678 1D       		.byte	0x1d
 3114 0679 95000000 		.4byte	0x95
 3115 067d 05       		.uleb128 0x5
 3116 067e 03       		.byte	0x3
 3117 067f 00000000 		.4byte	flag_packet
 3118 0683 20       		.uleb128 0x20
 3119 0684 5F060000 		.4byte	.LASF98
 3120 0688 05       		.byte	0x5
 3121 0689 1E       		.byte	0x1e
 3122 068a 95000000 		.4byte	0x95
 3123 068e 05       		.uleb128 0x5
 3124 068f 03       		.byte	0x3
 3125 0690 00000000 		.4byte	flag_KB_string
 3126 0694 20       		.uleb128 0x20
 3127 0695 0D040000 		.4byte	.LASF99
 3128 0699 05       		.byte	0x5
 3129 069a 20       		.byte	0x20
 3130 069b 95000000 		.4byte	0x95
 3131 069f 05       		.uleb128 0x5
 3132 06a0 03       		.byte	0x3
 3133 06a1 00000000 		.4byte	dataready_flag
 3134 06a5 20       		.uleb128 0x20
 3135 06a6 D8000000 		.4byte	.LASF100
 3136 06aa 05       		.byte	0x5
 3137 06ab 22       		.byte	0x22
 3138 06ac 95000000 		.4byte	0x95
 3139 06b0 05       		.uleb128 0x5
 3140 06b1 03       		.byte	0x3
 3141 06b2 00000000 		.4byte	flag_rf_transmission_active
 3142 06b6 20       		.uleb128 0x20
 3143 06b7 F4000000 		.4byte	.LASF101
 3144 06bb 05       		.byte	0x5
 3145 06bc 23       		.byte	0x23
 3146 06bd 95000000 		.4byte	0x95
 3147 06c1 05       		.uleb128 0x5
 3148 06c2 03       		.byte	0x3
 3149 06c3 00000000 		.4byte	flag_print_rf
 3150 06c7 20       		.uleb128 0x20
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 67


 3151 06c8 BB030000 		.4byte	.LASF102
 3152 06cc 05       		.byte	0x5
 3153 06cd 25       		.byte	0x25
 3154 06ce 95000000 		.4byte	0x95
 3155 06d2 05       		.uleb128 0x5
 3156 06d3 03       		.byte	0x3
 3157 06d4 00000000 		.4byte	flag_receive_ADC
 3158 06d8 20       		.uleb128 0x20
 3159 06d9 2E040000 		.4byte	.LASF103
 3160 06dd 05       		.byte	0x5
 3161 06de 26       		.byte	0x26
 3162 06df C5000000 		.4byte	0xc5
 3163 06e3 05       		.uleb128 0x5
 3164 06e4 03       		.byte	0x3
 3165 06e5 00000000 		.4byte	adc_result
 3166 06e9 20       		.uleb128 0x20
 3167 06ea 00000000 		.4byte	.LASF104
 3168 06ee 05       		.byte	0x5
 3169 06ef 28       		.byte	0x28
 3170 06f0 95000000 		.4byte	0x95
 3171 06f4 05       		.uleb128 0x5
 3172 06f5 03       		.byte	0x3
 3173 06f6 00000000 		.4byte	direction
 3174 06fa 20       		.uleb128 0x20
 3175 06fb 39040000 		.4byte	.LASF105
 3176 06ff 05       		.byte	0x5
 3177 0700 2C       		.byte	0x2c
 3178 0701 95000000 		.4byte	0x95
 3179 0705 05       		.uleb128 0x5
 3180 0706 03       		.byte	0x3
 3181 0707 00000000 		.4byte	flag_calc_wheelspeed
 3182 070b 20       		.uleb128 0x20
 3183 070c C0000000 		.4byte	.LASF106
 3184 0710 05       		.byte	0x5
 3185 0711 2D       		.byte	0x2d
 3186 0712 C5000000 		.4byte	0xc5
 3187 0716 05       		.uleb128 0x5
 3188 0717 03       		.byte	0x3
 3189 0718 00000000 		.4byte	quad_count1
 3190 071c 20       		.uleb128 0x20
 3191 071d CC000000 		.4byte	.LASF107
 3192 0721 05       		.byte	0x5
 3193 0722 2E       		.byte	0x2e
 3194 0723 C5000000 		.4byte	0xc5
 3195 0727 05       		.uleb128 0x5
 3196 0728 03       		.byte	0x3
 3197 0729 00000000 		.4byte	quad_count2
 3198 072d 20       		.uleb128 0x20
 3199 072e 80050000 		.4byte	.LASF108
 3200 0732 05       		.byte	0x5
 3201 0733 2F       		.byte	0x2f
 3202 0734 C5000000 		.4byte	0xc5
 3203 0738 05       		.uleb128 0x5
 3204 0739 03       		.byte	0x3
 3205 073a 00000000 		.4byte	last_quad_count1
 3206 073e 20       		.uleb128 0x20
 3207 073f 91050000 		.4byte	.LASF109
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 68


 3208 0743 05       		.byte	0x5
 3209 0744 30       		.byte	0x30
 3210 0745 C5000000 		.4byte	0xc5
 3211 0749 05       		.uleb128 0x5
 3212 074a 03       		.byte	0x3
 3213 074b 00000000 		.4byte	last_quad_count2
 3214 074f 20       		.uleb128 0x20
 3215 0750 10000000 		.4byte	.LASF110
 3216 0754 05       		.byte	0x5
 3217 0755 31       		.byte	0x31
 3218 0756 C5000000 		.4byte	0xc5
 3219 075a 05       		.uleb128 0x5
 3220 075b 03       		.byte	0x3
 3221 075c 00000000 		.4byte	quad_diff1
 3222 0760 20       		.uleb128 0x20
 3223 0761 1B000000 		.4byte	.LASF111
 3224 0765 05       		.byte	0x5
 3225 0766 32       		.byte	0x32
 3226 0767 C5000000 		.4byte	0xc5
 3227 076b 05       		.uleb128 0x5
 3228 076c 03       		.byte	0x3
 3229 076d 00000000 		.4byte	quad_diff2
 3230 0771 20       		.uleb128 0x20
 3231 0772 50000000 		.4byte	.LASF112
 3232 0776 05       		.byte	0x5
 3233 0777 35       		.byte	0x35
 3234 0778 C5000000 		.4byte	0xc5
 3235 077c 05       		.uleb128 0x5
 3236 077d 03       		.byte	0x3
 3237 077e 00000000 		.4byte	start_turn_count
 3238 0782 20       		.uleb128 0x20
 3239 0783 EF030000 		.4byte	.LASF113
 3240 0787 05       		.byte	0x5
 3241 0788 38       		.byte	0x38
 3242 0789 C5000000 		.4byte	0xc5
 3243 078d 05       		.uleb128 0x5
 3244 078e 03       		.byte	0x3
 3245 078f 00000000 		.4byte	left_duty_cycle
 3246 0793 20       		.uleb128 0x20
 3247 0794 03060000 		.4byte	.LASF114
 3248 0798 05       		.byte	0x5
 3249 0799 39       		.byte	0x39
 3250 079a C5000000 		.4byte	0xc5
 3251 079e 05       		.uleb128 0x5
 3252 079f 03       		.byte	0x3
 3253 07a0 00000000 		.4byte	right_duty_cycle
 3254 07a4 20       		.uleb128 0x20
 3255 07a5 88040000 		.4byte	.LASF115
 3256 07a9 05       		.byte	0x5
 3257 07aa 3C       		.byte	0x3c
 3258 07ab C5000000 		.4byte	0xc5
 3259 07af 05       		.uleb128 0x5
 3260 07b0 03       		.byte	0x3
 3261 07b1 00000000 		.4byte	leftSpeedLimit
 3262 07b5 20       		.uleb128 0x20
 3263 07b6 73020000 		.4byte	.LASF116
 3264 07ba 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 69


 3265 07bb 3D       		.byte	0x3d
 3266 07bc C5000000 		.4byte	0xc5
 3267 07c0 05       		.uleb128 0x5
 3268 07c1 03       		.byte	0x3
 3269 07c2 00000000 		.4byte	rightSpeedLimit
 3270 07c6 20       		.uleb128 0x20
 3271 07c7 37050000 		.4byte	.LASF117
 3272 07cb 05       		.byte	0x5
 3273 07cc 40       		.byte	0x40
 3274 07cd 95000000 		.4byte	0x95
 3275 07d1 05       		.uleb128 0x5
 3276 07d2 03       		.byte	0x3
 3277 07d3 00000000 		.4byte	brakeFlag
 3278 07d7 20       		.uleb128 0x20
 3279 07d8 CA010000 		.4byte	.LASF118
 3280 07dc 05       		.byte	0x5
 3281 07dd 41       		.byte	0x41
 3282 07de 95000000 		.4byte	0x95
 3283 07e2 05       		.uleb128 0x5
 3284 07e3 03       		.byte	0x3
 3285 07e4 00000000 		.4byte	portOpen
 3286 07e8 20       		.uleb128 0x20
 3287 07e9 44000000 		.4byte	.LASF119
 3288 07ed 05       		.byte	0x5
 3289 07ee 44       		.byte	0x44
 3290 07ef C5000000 		.4byte	0xc5
 3291 07f3 05       		.uleb128 0x5
 3292 07f4 03       		.byte	0x3
 3293 07f5 00000000 		.4byte	prevVoltage
 3294 07f9 20       		.uleb128 0x20
 3295 07fa 9E000000 		.4byte	.LASF120
 3296 07fe 05       		.byte	0x5
 3297 07ff 45       		.byte	0x45
 3298 0800 C5000000 		.4byte	0xc5
 3299 0804 05       		.uleb128 0x5
 3300 0805 03       		.byte	0x3
 3301 0806 00000000 		.4byte	prevVoltage2
 3302 080a 20       		.uleb128 0x20
 3303 080b 72050000 		.4byte	.LASF121
 3304 080f 05       		.byte	0x5
 3305 0810 4B       		.byte	0x4b
 3306 0811 66040000 		.4byte	0x466
 3307 0815 05       		.uleb128 0x5
 3308 0816 03       		.byte	0x3
 3309 0817 00000000 		.4byte	displaystring
 3310 081b 20       		.uleb128 0x20
 3311 081c 1E050000 		.4byte	.LASF122
 3312 0820 05       		.byte	0x5
 3313 0821 4C       		.byte	0x4c
 3314 0822 66040000 		.4byte	0x466
 3315 0826 05       		.uleb128 0x5
 3316 0827 03       		.byte	0x3
 3317 0828 00000000 		.4byte	line
 3318 082c 20       		.uleb128 0x20
 3319 082d 0A050000 		.4byte	.LASF123
 3320 0831 05       		.byte	0x5
 3321 0832 4C       		.byte	0x4c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 70


 3322 0833 66040000 		.4byte	0x466
 3323 0837 05       		.uleb128 0x5
 3324 0838 03       		.byte	0x3
 3325 0839 00000000 		.4byte	entry
 3326 083d 0E       		.uleb128 0xe
 3327 083e 95000000 		.4byte	0x95
 3328 0842 4D080000 		.4byte	0x84d
 3329 0846 0F       		.uleb128 0xf
 3330 0847 76000000 		.4byte	0x76
 3331 084b 3F       		.byte	0x3f
 3332 084c 00       		.byte	0
 3333 084d 20       		.uleb128 0x20
 3334 084e 50010000 		.4byte	.LASF124
 3335 0852 05       		.byte	0x5
 3336 0853 4D       		.byte	0x4d
 3337 0854 3D080000 		.4byte	0x83d
 3338 0858 05       		.uleb128 0x5
 3339 0859 03       		.byte	0x3
 3340 085a 00000000 		.4byte	usbBuffer
 3341 085e 20       		.uleb128 0x20
 3342 085f BA020000 		.4byte	.LASF125
 3343 0863 05       		.byte	0x5
 3344 0864 62       		.byte	0x62
 3345 0865 0B010000 		.4byte	0x10b
 3346 0869 05       		.uleb128 0x5
 3347 086a 03       		.byte	0x3
 3348 086b 00000000 		.4byte	buffer_state
 3349 086f 20       		.uleb128 0x20
 3350 0870 7E000000 		.4byte	.LASF126
 3351 0874 05       		.byte	0x5
 3352 0875 63       		.byte	0x63
 3353 0876 0B010000 		.4byte	0x10b
 3354 087a 05       		.uleb128 0x5
 3355 087b 03       		.byte	0x3
 3356 087c 00000000 		.4byte	system_state
 3357 0880 20       		.uleb128 0x20
 3358 0881 02010000 		.4byte	.LASF127
 3359 0885 05       		.byte	0x5
 3360 0886 65       		.byte	0x65
 3361 0887 E6000000 		.4byte	0xe6
 3362 088b 05       		.uleb128 0x5
 3363 088c 03       		.byte	0x3
 3364 088d 00000000 		.4byte	movement_state
 3365 0891 20       		.uleb128 0x20
 3366 0892 10020000 		.4byte	.LASF128
 3367 0896 05       		.byte	0x5
 3368 0897 67       		.byte	0x67
 3369 0898 95000000 		.4byte	0x95
 3370 089c 05       		.uleb128 0x5
 3371 089d 03       		.byte	0x3
 3372 089e 00000000 		.4byte	byteCount
 3373 08a2 0E       		.uleb128 0xe
 3374 08a3 83000000 		.4byte	0x83
 3375 08a7 B2080000 		.4byte	0x8b2
 3376 08ab 0F       		.uleb128 0xf
 3377 08ac 76000000 		.4byte	0x76
 3378 08b0 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 71


 3379 08b1 00       		.byte	0
 3380 08b2 20       		.uleb128 0x20
 3381 08b3 ED040000 		.4byte	.LASF129
 3382 08b7 05       		.byte	0x5
 3383 08b8 68       		.byte	0x68
 3384 08b9 A2080000 		.4byte	0x8a2
 3385 08bd 05       		.uleb128 0x5
 3386 08be 03       		.byte	0x3
 3387 08bf 00000000 		.4byte	packet
 3388 08c3 00       		.byte	0
 3389              		.section	.debug_abbrev,"",%progbits
 3390              	.Ldebug_abbrev0:
 3391 0000 01       		.uleb128 0x1
 3392 0001 11       		.uleb128 0x11
 3393 0002 01       		.byte	0x1
 3394 0003 25       		.uleb128 0x25
 3395 0004 0E       		.uleb128 0xe
 3396 0005 13       		.uleb128 0x13
 3397 0006 0B       		.uleb128 0xb
 3398 0007 03       		.uleb128 0x3
 3399 0008 0E       		.uleb128 0xe
 3400 0009 1B       		.uleb128 0x1b
 3401 000a 0E       		.uleb128 0xe
 3402 000b 55       		.uleb128 0x55
 3403 000c 17       		.uleb128 0x17
 3404 000d 11       		.uleb128 0x11
 3405 000e 01       		.uleb128 0x1
 3406 000f 10       		.uleb128 0x10
 3407 0010 17       		.uleb128 0x17
 3408 0011 00       		.byte	0
 3409 0012 00       		.byte	0
 3410 0013 02       		.uleb128 0x2
 3411 0014 24       		.uleb128 0x24
 3412 0015 00       		.byte	0
 3413 0016 0B       		.uleb128 0xb
 3414 0017 0B       		.uleb128 0xb
 3415 0018 3E       		.uleb128 0x3e
 3416 0019 0B       		.uleb128 0xb
 3417 001a 03       		.uleb128 0x3
 3418 001b 0E       		.uleb128 0xe
 3419 001c 00       		.byte	0
 3420 001d 00       		.byte	0
 3421 001e 03       		.uleb128 0x3
 3422 001f 16       		.uleb128 0x16
 3423 0020 00       		.byte	0
 3424 0021 03       		.uleb128 0x3
 3425 0022 0E       		.uleb128 0xe
 3426 0023 3A       		.uleb128 0x3a
 3427 0024 0B       		.uleb128 0xb
 3428 0025 3B       		.uleb128 0x3b
 3429 0026 0B       		.uleb128 0xb
 3430 0027 49       		.uleb128 0x49
 3431 0028 13       		.uleb128 0x13
 3432 0029 00       		.byte	0
 3433 002a 00       		.byte	0
 3434 002b 04       		.uleb128 0x4
 3435 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 72


 3436 002d 00       		.byte	0
 3437 002e 0B       		.uleb128 0xb
 3438 002f 0B       		.uleb128 0xb
 3439 0030 3E       		.uleb128 0x3e
 3440 0031 0B       		.uleb128 0xb
 3441 0032 03       		.uleb128 0x3
 3442 0033 08       		.uleb128 0x8
 3443 0034 00       		.byte	0
 3444 0035 00       		.byte	0
 3445 0036 05       		.uleb128 0x5
 3446 0037 0F       		.uleb128 0xf
 3447 0038 00       		.byte	0
 3448 0039 0B       		.uleb128 0xb
 3449 003a 0B       		.uleb128 0xb
 3450 003b 49       		.uleb128 0x49
 3451 003c 13       		.uleb128 0x13
 3452 003d 00       		.byte	0
 3453 003e 00       		.byte	0
 3454 003f 06       		.uleb128 0x6
 3455 0040 16       		.uleb128 0x16
 3456 0041 00       		.byte	0
 3457 0042 03       		.uleb128 0x3
 3458 0043 0E       		.uleb128 0xe
 3459 0044 3A       		.uleb128 0x3a
 3460 0045 0B       		.uleb128 0xb
 3461 0046 3B       		.uleb128 0x3b
 3462 0047 05       		.uleb128 0x5
 3463 0048 49       		.uleb128 0x49
 3464 0049 13       		.uleb128 0x13
 3465 004a 00       		.byte	0
 3466 004b 00       		.byte	0
 3467 004c 07       		.uleb128 0x7
 3468 004d 04       		.uleb128 0x4
 3469 004e 01       		.byte	0x1
 3470 004f 03       		.uleb128 0x3
 3471 0050 0E       		.uleb128 0xe
 3472 0051 0B       		.uleb128 0xb
 3473 0052 0B       		.uleb128 0xb
 3474 0053 3A       		.uleb128 0x3a
 3475 0054 0B       		.uleb128 0xb
 3476 0055 3B       		.uleb128 0x3b
 3477 0056 0B       		.uleb128 0xb
 3478 0057 01       		.uleb128 0x1
 3479 0058 13       		.uleb128 0x13
 3480 0059 00       		.byte	0
 3481 005a 00       		.byte	0
 3482 005b 08       		.uleb128 0x8
 3483 005c 28       		.uleb128 0x28
 3484 005d 00       		.byte	0
 3485 005e 03       		.uleb128 0x3
 3486 005f 0E       		.uleb128 0xe
 3487 0060 1C       		.uleb128 0x1c
 3488 0061 0D       		.uleb128 0xd
 3489 0062 00       		.byte	0
 3490 0063 00       		.byte	0
 3491 0064 09       		.uleb128 0x9
 3492 0065 13       		.uleb128 0x13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 73


 3493 0066 01       		.byte	0x1
 3494 0067 03       		.uleb128 0x3
 3495 0068 0E       		.uleb128 0xe
 3496 0069 0B       		.uleb128 0xb
 3497 006a 0B       		.uleb128 0xb
 3498 006b 3A       		.uleb128 0x3a
 3499 006c 0B       		.uleb128 0xb
 3500 006d 3B       		.uleb128 0x3b
 3501 006e 0B       		.uleb128 0xb
 3502 006f 01       		.uleb128 0x1
 3503 0070 13       		.uleb128 0x13
 3504 0071 00       		.byte	0
 3505 0072 00       		.byte	0
 3506 0073 0A       		.uleb128 0xa
 3507 0074 0D       		.uleb128 0xd
 3508 0075 00       		.byte	0
 3509 0076 03       		.uleb128 0x3
 3510 0077 0E       		.uleb128 0xe
 3511 0078 3A       		.uleb128 0x3a
 3512 0079 0B       		.uleb128 0xb
 3513 007a 3B       		.uleb128 0x3b
 3514 007b 0B       		.uleb128 0xb
 3515 007c 49       		.uleb128 0x49
 3516 007d 13       		.uleb128 0x13
 3517 007e 38       		.uleb128 0x38
 3518 007f 0B       		.uleb128 0xb
 3519 0080 00       		.byte	0
 3520 0081 00       		.byte	0
 3521 0082 0B       		.uleb128 0xb
 3522 0083 2E       		.uleb128 0x2e
 3523 0084 01       		.byte	0x1
 3524 0085 3F       		.uleb128 0x3f
 3525 0086 19       		.uleb128 0x19
 3526 0087 03       		.uleb128 0x3
 3527 0088 0E       		.uleb128 0xe
 3528 0089 3A       		.uleb128 0x3a
 3529 008a 0B       		.uleb128 0xb
 3530 008b 3B       		.uleb128 0x3b
 3531 008c 0B       		.uleb128 0xb
 3532 008d 11       		.uleb128 0x11
 3533 008e 01       		.uleb128 0x1
 3534 008f 12       		.uleb128 0x12
 3535 0090 06       		.uleb128 0x6
 3536 0091 40       		.uleb128 0x40
 3537 0092 18       		.uleb128 0x18
 3538 0093 9742     		.uleb128 0x2117
 3539 0095 19       		.uleb128 0x19
 3540 0096 01       		.uleb128 0x1
 3541 0097 13       		.uleb128 0x13
 3542 0098 00       		.byte	0
 3543 0099 00       		.byte	0
 3544 009a 0C       		.uleb128 0xc
 3545 009b 0B       		.uleb128 0xb
 3546 009c 01       		.byte	0x1
 3547 009d 11       		.uleb128 0x11
 3548 009e 01       		.uleb128 0x1
 3549 009f 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 74


 3550 00a0 06       		.uleb128 0x6
 3551 00a1 00       		.byte	0
 3552 00a2 00       		.byte	0
 3553 00a3 0D       		.uleb128 0xd
 3554 00a4 34       		.uleb128 0x34
 3555 00a5 00       		.byte	0
 3556 00a6 03       		.uleb128 0x3
 3557 00a7 0E       		.uleb128 0xe
 3558 00a8 3A       		.uleb128 0x3a
 3559 00a9 0B       		.uleb128 0xb
 3560 00aa 3B       		.uleb128 0x3b
 3561 00ab 0B       		.uleb128 0xb
 3562 00ac 49       		.uleb128 0x49
 3563 00ad 13       		.uleb128 0x13
 3564 00ae 02       		.uleb128 0x2
 3565 00af 18       		.uleb128 0x18
 3566 00b0 00       		.byte	0
 3567 00b1 00       		.byte	0
 3568 00b2 0E       		.uleb128 0xe
 3569 00b3 01       		.uleb128 0x1
 3570 00b4 01       		.byte	0x1
 3571 00b5 49       		.uleb128 0x49
 3572 00b6 13       		.uleb128 0x13
 3573 00b7 01       		.uleb128 0x1
 3574 00b8 13       		.uleb128 0x13
 3575 00b9 00       		.byte	0
 3576 00ba 00       		.byte	0
 3577 00bb 0F       		.uleb128 0xf
 3578 00bc 21       		.uleb128 0x21
 3579 00bd 00       		.byte	0
 3580 00be 49       		.uleb128 0x49
 3581 00bf 13       		.uleb128 0x13
 3582 00c0 2F       		.uleb128 0x2f
 3583 00c1 0B       		.uleb128 0xb
 3584 00c2 00       		.byte	0
 3585 00c3 00       		.byte	0
 3586 00c4 10       		.uleb128 0x10
 3587 00c5 2E       		.uleb128 0x2e
 3588 00c6 01       		.byte	0x1
 3589 00c7 3F       		.uleb128 0x3f
 3590 00c8 19       		.uleb128 0x19
 3591 00c9 03       		.uleb128 0x3
 3592 00ca 0E       		.uleb128 0xe
 3593 00cb 3A       		.uleb128 0x3a
 3594 00cc 0B       		.uleb128 0xb
 3595 00cd 3B       		.uleb128 0x3b
 3596 00ce 0B       		.uleb128 0xb
 3597 00cf 27       		.uleb128 0x27
 3598 00d0 19       		.uleb128 0x19
 3599 00d1 11       		.uleb128 0x11
 3600 00d2 01       		.uleb128 0x1
 3601 00d3 12       		.uleb128 0x12
 3602 00d4 06       		.uleb128 0x6
 3603 00d5 40       		.uleb128 0x40
 3604 00d6 18       		.uleb128 0x18
 3605 00d7 9742     		.uleb128 0x2117
 3606 00d9 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 75


 3607 00da 01       		.uleb128 0x1
 3608 00db 13       		.uleb128 0x13
 3609 00dc 00       		.byte	0
 3610 00dd 00       		.byte	0
 3611 00de 11       		.uleb128 0x11
 3612 00df 05       		.uleb128 0x5
 3613 00e0 00       		.byte	0
 3614 00e1 03       		.uleb128 0x3
 3615 00e2 0E       		.uleb128 0xe
 3616 00e3 3A       		.uleb128 0x3a
 3617 00e4 0B       		.uleb128 0xb
 3618 00e5 3B       		.uleb128 0x3b
 3619 00e6 0B       		.uleb128 0xb
 3620 00e7 49       		.uleb128 0x49
 3621 00e8 13       		.uleb128 0x13
 3622 00e9 02       		.uleb128 0x2
 3623 00ea 18       		.uleb128 0x18
 3624 00eb 00       		.byte	0
 3625 00ec 00       		.byte	0
 3626 00ed 12       		.uleb128 0x12
 3627 00ee 2E       		.uleb128 0x2e
 3628 00ef 00       		.byte	0
 3629 00f0 3F       		.uleb128 0x3f
 3630 00f1 19       		.uleb128 0x19
 3631 00f2 03       		.uleb128 0x3
 3632 00f3 0E       		.uleb128 0xe
 3633 00f4 3A       		.uleb128 0x3a
 3634 00f5 0B       		.uleb128 0xb
 3635 00f6 3B       		.uleb128 0x3b
 3636 00f7 0B       		.uleb128 0xb
 3637 00f8 11       		.uleb128 0x11
 3638 00f9 01       		.uleb128 0x1
 3639 00fa 12       		.uleb128 0x12
 3640 00fb 06       		.uleb128 0x6
 3641 00fc 40       		.uleb128 0x40
 3642 00fd 18       		.uleb128 0x18
 3643 00fe 9642     		.uleb128 0x2116
 3644 0100 19       		.uleb128 0x19
 3645 0101 00       		.byte	0
 3646 0102 00       		.byte	0
 3647 0103 13       		.uleb128 0x13
 3648 0104 2E       		.uleb128 0x2e
 3649 0105 00       		.byte	0
 3650 0106 3F       		.uleb128 0x3f
 3651 0107 19       		.uleb128 0x19
 3652 0108 03       		.uleb128 0x3
 3653 0109 0E       		.uleb128 0xe
 3654 010a 3A       		.uleb128 0x3a
 3655 010b 0B       		.uleb128 0xb
 3656 010c 3B       		.uleb128 0x3b
 3657 010d 0B       		.uleb128 0xb
 3658 010e 11       		.uleb128 0x11
 3659 010f 01       		.uleb128 0x1
 3660 0110 12       		.uleb128 0x12
 3661 0111 06       		.uleb128 0x6
 3662 0112 40       		.uleb128 0x40
 3663 0113 18       		.uleb128 0x18
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 76


 3664 0114 9742     		.uleb128 0x2117
 3665 0116 19       		.uleb128 0x19
 3666 0117 00       		.byte	0
 3667 0118 00       		.byte	0
 3668 0119 14       		.uleb128 0x14
 3669 011a 2E       		.uleb128 0x2e
 3670 011b 01       		.byte	0x1
 3671 011c 3F       		.uleb128 0x3f
 3672 011d 19       		.uleb128 0x19
 3673 011e 03       		.uleb128 0x3
 3674 011f 0E       		.uleb128 0xe
 3675 0120 3A       		.uleb128 0x3a
 3676 0121 0B       		.uleb128 0xb
 3677 0122 3B       		.uleb128 0x3b
 3678 0123 0B       		.uleb128 0xb
 3679 0124 27       		.uleb128 0x27
 3680 0125 19       		.uleb128 0x19
 3681 0126 11       		.uleb128 0x11
 3682 0127 01       		.uleb128 0x1
 3683 0128 12       		.uleb128 0x12
 3684 0129 06       		.uleb128 0x6
 3685 012a 40       		.uleb128 0x40
 3686 012b 18       		.uleb128 0x18
 3687 012c 9642     		.uleb128 0x2116
 3688 012e 19       		.uleb128 0x19
 3689 012f 01       		.uleb128 0x1
 3690 0130 13       		.uleb128 0x13
 3691 0131 00       		.byte	0
 3692 0132 00       		.byte	0
 3693 0133 15       		.uleb128 0x15
 3694 0134 2E       		.uleb128 0x2e
 3695 0135 01       		.byte	0x1
 3696 0136 3F       		.uleb128 0x3f
 3697 0137 19       		.uleb128 0x19
 3698 0138 03       		.uleb128 0x3
 3699 0139 0E       		.uleb128 0xe
 3700 013a 3A       		.uleb128 0x3a
 3701 013b 0B       		.uleb128 0xb
 3702 013c 3B       		.uleb128 0x3b
 3703 013d 05       		.uleb128 0x5
 3704 013e 27       		.uleb128 0x27
 3705 013f 19       		.uleb128 0x19
 3706 0140 11       		.uleb128 0x11
 3707 0141 01       		.uleb128 0x1
 3708 0142 12       		.uleb128 0x12
 3709 0143 06       		.uleb128 0x6
 3710 0144 40       		.uleb128 0x40
 3711 0145 18       		.uleb128 0x18
 3712 0146 9642     		.uleb128 0x2116
 3713 0148 19       		.uleb128 0x19
 3714 0149 01       		.uleb128 0x1
 3715 014a 13       		.uleb128 0x13
 3716 014b 00       		.byte	0
 3717 014c 00       		.byte	0
 3718 014d 16       		.uleb128 0x16
 3719 014e 34       		.uleb128 0x34
 3720 014f 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 77


 3721 0150 03       		.uleb128 0x3
 3722 0151 0E       		.uleb128 0xe
 3723 0152 3A       		.uleb128 0x3a
 3724 0153 0B       		.uleb128 0xb
 3725 0154 3B       		.uleb128 0x3b
 3726 0155 05       		.uleb128 0x5
 3727 0156 49       		.uleb128 0x49
 3728 0157 13       		.uleb128 0x13
 3729 0158 02       		.uleb128 0x2
 3730 0159 18       		.uleb128 0x18
 3731 015a 00       		.byte	0
 3732 015b 00       		.byte	0
 3733 015c 17       		.uleb128 0x17
 3734 015d 2E       		.uleb128 0x2e
 3735 015e 00       		.byte	0
 3736 015f 3F       		.uleb128 0x3f
 3737 0160 19       		.uleb128 0x19
 3738 0161 03       		.uleb128 0x3
 3739 0162 0E       		.uleb128 0xe
 3740 0163 3A       		.uleb128 0x3a
 3741 0164 0B       		.uleb128 0xb
 3742 0165 3B       		.uleb128 0x3b
 3743 0166 05       		.uleb128 0x5
 3744 0167 27       		.uleb128 0x27
 3745 0168 19       		.uleb128 0x19
 3746 0169 11       		.uleb128 0x11
 3747 016a 01       		.uleb128 0x1
 3748 016b 12       		.uleb128 0x12
 3749 016c 06       		.uleb128 0x6
 3750 016d 40       		.uleb128 0x40
 3751 016e 18       		.uleb128 0x18
 3752 016f 9742     		.uleb128 0x2117
 3753 0171 19       		.uleb128 0x19
 3754 0172 00       		.byte	0
 3755 0173 00       		.byte	0
 3756 0174 18       		.uleb128 0x18
 3757 0175 2E       		.uleb128 0x2e
 3758 0176 00       		.byte	0
 3759 0177 3F       		.uleb128 0x3f
 3760 0178 19       		.uleb128 0x19
 3761 0179 03       		.uleb128 0x3
 3762 017a 0E       		.uleb128 0xe
 3763 017b 3A       		.uleb128 0x3a
 3764 017c 0B       		.uleb128 0xb
 3765 017d 3B       		.uleb128 0x3b
 3766 017e 05       		.uleb128 0x5
 3767 017f 27       		.uleb128 0x27
 3768 0180 19       		.uleb128 0x19
 3769 0181 11       		.uleb128 0x11
 3770 0182 01       		.uleb128 0x1
 3771 0183 12       		.uleb128 0x12
 3772 0184 06       		.uleb128 0x6
 3773 0185 40       		.uleb128 0x40
 3774 0186 18       		.uleb128 0x18
 3775 0187 9642     		.uleb128 0x2116
 3776 0189 19       		.uleb128 0x19
 3777 018a 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 78


 3778 018b 00       		.byte	0
 3779 018c 19       		.uleb128 0x19
 3780 018d 2E       		.uleb128 0x2e
 3781 018e 01       		.byte	0x1
 3782 018f 3F       		.uleb128 0x3f
 3783 0190 19       		.uleb128 0x19
 3784 0191 03       		.uleb128 0x3
 3785 0192 0E       		.uleb128 0xe
 3786 0193 3A       		.uleb128 0x3a
 3787 0194 0B       		.uleb128 0xb
 3788 0195 3B       		.uleb128 0x3b
 3789 0196 05       		.uleb128 0x5
 3790 0197 11       		.uleb128 0x11
 3791 0198 01       		.uleb128 0x1
 3792 0199 12       		.uleb128 0x12
 3793 019a 06       		.uleb128 0x6
 3794 019b 40       		.uleb128 0x40
 3795 019c 18       		.uleb128 0x18
 3796 019d 9642     		.uleb128 0x2116
 3797 019f 19       		.uleb128 0x19
 3798 01a0 01       		.uleb128 0x1
 3799 01a1 13       		.uleb128 0x13
 3800 01a2 00       		.byte	0
 3801 01a3 00       		.byte	0
 3802 01a4 1A       		.uleb128 0x1a
 3803 01a5 2E       		.uleb128 0x2e
 3804 01a6 00       		.byte	0
 3805 01a7 3F       		.uleb128 0x3f
 3806 01a8 19       		.uleb128 0x19
 3807 01a9 03       		.uleb128 0x3
 3808 01aa 0E       		.uleb128 0xe
 3809 01ab 3A       		.uleb128 0x3a
 3810 01ac 0B       		.uleb128 0xb
 3811 01ad 3B       		.uleb128 0x3b
 3812 01ae 05       		.uleb128 0x5
 3813 01af 49       		.uleb128 0x49
 3814 01b0 13       		.uleb128 0x13
 3815 01b1 11       		.uleb128 0x11
 3816 01b2 01       		.uleb128 0x1
 3817 01b3 12       		.uleb128 0x12
 3818 01b4 06       		.uleb128 0x6
 3819 01b5 40       		.uleb128 0x40
 3820 01b6 18       		.uleb128 0x18
 3821 01b7 9642     		.uleb128 0x2116
 3822 01b9 19       		.uleb128 0x19
 3823 01ba 00       		.byte	0
 3824 01bb 00       		.byte	0
 3825 01bc 1B       		.uleb128 0x1b
 3826 01bd 05       		.uleb128 0x5
 3827 01be 00       		.byte	0
 3828 01bf 03       		.uleb128 0x3
 3829 01c0 08       		.uleb128 0x8
 3830 01c1 3A       		.uleb128 0x3a
 3831 01c2 0B       		.uleb128 0xb
 3832 01c3 3B       		.uleb128 0x3b
 3833 01c4 05       		.uleb128 0x5
 3834 01c5 49       		.uleb128 0x49
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 79


 3835 01c6 13       		.uleb128 0x13
 3836 01c7 02       		.uleb128 0x2
 3837 01c8 18       		.uleb128 0x18
 3838 01c9 00       		.byte	0
 3839 01ca 00       		.byte	0
 3840 01cb 1C       		.uleb128 0x1c
 3841 01cc 34       		.uleb128 0x34
 3842 01cd 00       		.byte	0
 3843 01ce 03       		.uleb128 0x3
 3844 01cf 08       		.uleb128 0x8
 3845 01d0 3A       		.uleb128 0x3a
 3846 01d1 0B       		.uleb128 0xb
 3847 01d2 3B       		.uleb128 0x3b
 3848 01d3 05       		.uleb128 0x5
 3849 01d4 49       		.uleb128 0x49
 3850 01d5 13       		.uleb128 0x13
 3851 01d6 02       		.uleb128 0x2
 3852 01d7 18       		.uleb128 0x18
 3853 01d8 00       		.byte	0
 3854 01d9 00       		.byte	0
 3855 01da 1D       		.uleb128 0x1d
 3856 01db 34       		.uleb128 0x34
 3857 01dc 00       		.byte	0
 3858 01dd 03       		.uleb128 0x3
 3859 01de 0E       		.uleb128 0xe
 3860 01df 3A       		.uleb128 0x3a
 3861 01e0 0B       		.uleb128 0xb
 3862 01e1 3B       		.uleb128 0x3b
 3863 01e2 05       		.uleb128 0x5
 3864 01e3 49       		.uleb128 0x49
 3865 01e4 13       		.uleb128 0x13
 3866 01e5 3F       		.uleb128 0x3f
 3867 01e6 19       		.uleb128 0x19
 3868 01e7 3C       		.uleb128 0x3c
 3869 01e8 19       		.uleb128 0x19
 3870 01e9 00       		.byte	0
 3871 01ea 00       		.byte	0
 3872 01eb 1E       		.uleb128 0x1e
 3873 01ec 35       		.uleb128 0x35
 3874 01ed 00       		.byte	0
 3875 01ee 49       		.uleb128 0x49
 3876 01ef 13       		.uleb128 0x13
 3877 01f0 00       		.byte	0
 3878 01f1 00       		.byte	0
 3879 01f2 1F       		.uleb128 0x1f
 3880 01f3 34       		.uleb128 0x34
 3881 01f4 00       		.byte	0
 3882 01f5 03       		.uleb128 0x3
 3883 01f6 08       		.uleb128 0x8
 3884 01f7 3A       		.uleb128 0x3a
 3885 01f8 0B       		.uleb128 0xb
 3886 01f9 3B       		.uleb128 0x3b
 3887 01fa 0B       		.uleb128 0xb
 3888 01fb 49       		.uleb128 0x49
 3889 01fc 13       		.uleb128 0x13
 3890 01fd 3F       		.uleb128 0x3f
 3891 01fe 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 80


 3892 01ff 02       		.uleb128 0x2
 3893 0200 18       		.uleb128 0x18
 3894 0201 00       		.byte	0
 3895 0202 00       		.byte	0
 3896 0203 20       		.uleb128 0x20
 3897 0204 34       		.uleb128 0x34
 3898 0205 00       		.byte	0
 3899 0206 03       		.uleb128 0x3
 3900 0207 0E       		.uleb128 0xe
 3901 0208 3A       		.uleb128 0x3a
 3902 0209 0B       		.uleb128 0xb
 3903 020a 3B       		.uleb128 0x3b
 3904 020b 0B       		.uleb128 0xb
 3905 020c 49       		.uleb128 0x49
 3906 020d 13       		.uleb128 0x13
 3907 020e 3F       		.uleb128 0x3f
 3908 020f 19       		.uleb128 0x19
 3909 0210 02       		.uleb128 0x2
 3910 0211 18       		.uleb128 0x18
 3911 0212 00       		.byte	0
 3912 0213 00       		.byte	0
 3913 0214 00       		.byte	0
 3914              		.section	.debug_aranges,"",%progbits
 3915 0000 FC000000 		.4byte	0xfc
 3916 0004 0200     		.2byte	0x2
 3917 0006 00000000 		.4byte	.Ldebug_info0
 3918 000a 04       		.byte	0x4
 3919 000b 00       		.byte	0
 3920 000c 0000     		.2byte	0
 3921 000e 0000     		.2byte	0
 3922 0010 00000000 		.4byte	.LFB63
 3923 0014 60010000 		.4byte	.LFE63-.LFB63
 3924 0018 00000000 		.4byte	.LFB64
 3925 001c 2C000000 		.4byte	.LFE64-.LFB64
 3926 0020 00000000 		.4byte	.LFB65
 3927 0024 18000000 		.4byte	.LFE65-.LFB65
 3928 0028 00000000 		.4byte	.LFB66
 3929 002c 18000000 		.4byte	.LFE66-.LFB66
 3930 0030 00000000 		.4byte	.LFB67
 3931 0034 16000000 		.4byte	.LFE67-.LFB67
 3932 0038 00000000 		.4byte	.LFB68
 3933 003c 0E000000 		.4byte	.LFE68-.LFB68
 3934 0040 00000000 		.4byte	.LFB69
 3935 0044 0E000000 		.4byte	.LFE69-.LFB69
 3936 0048 00000000 		.4byte	.LFB70
 3937 004c 0E000000 		.4byte	.LFE70-.LFB70
 3938 0050 00000000 		.4byte	.LFB71
 3939 0054 2C000000 		.4byte	.LFE71-.LFB71
 3940 0058 00000000 		.4byte	.LFB72
 3941 005c 2C000000 		.4byte	.LFE72-.LFB72
 3942 0060 00000000 		.4byte	.LFB73
 3943 0064 14000000 		.4byte	.LFE73-.LFB73
 3944 0068 00000000 		.4byte	.LFB74
 3945 006c 18000000 		.4byte	.LFE74-.LFB74
 3946 0070 00000000 		.4byte	.LFB75
 3947 0074 34000000 		.4byte	.LFE75-.LFB75
 3948 0078 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 81


 3949 007c 98000000 		.4byte	.LFE76-.LFB76
 3950 0080 00000000 		.4byte	.LFB77
 3951 0084 9C000000 		.4byte	.LFE77-.LFB77
 3952 0088 00000000 		.4byte	.LFB78
 3953 008c 0C000000 		.4byte	.LFE78-.LFB78
 3954 0090 00000000 		.4byte	.LFB79
 3955 0094 2C000000 		.4byte	.LFE79-.LFB79
 3956 0098 00000000 		.4byte	.LFB80
 3957 009c B8000000 		.4byte	.LFE80-.LFB80
 3958 00a0 00000000 		.4byte	.LFB81
 3959 00a4 70000000 		.4byte	.LFE81-.LFB81
 3960 00a8 00000000 		.4byte	.LFB82
 3961 00ac 1C000000 		.4byte	.LFE82-.LFB82
 3962 00b0 00000000 		.4byte	.LFB83
 3963 00b4 1C000000 		.4byte	.LFE83-.LFB83
 3964 00b8 00000000 		.4byte	.LFB84
 3965 00bc 0A000000 		.4byte	.LFE84-.LFB84
 3966 00c0 00000000 		.4byte	.LFB85
 3967 00c4 D8010000 		.4byte	.LFE85-.LFB85
 3968 00c8 00000000 		.4byte	.LFB86
 3969 00cc C0000000 		.4byte	.LFE86-.LFB86
 3970 00d0 00000000 		.4byte	.LFB87
 3971 00d4 B8000000 		.4byte	.LFE87-.LFB87
 3972 00d8 00000000 		.4byte	.LFB88
 3973 00dc B8000000 		.4byte	.LFE88-.LFB88
 3974 00e0 00000000 		.4byte	.LFB89
 3975 00e4 68000000 		.4byte	.LFE89-.LFB89
 3976 00e8 00000000 		.4byte	.LFB90
 3977 00ec 50000000 		.4byte	.LFE90-.LFB90
 3978 00f0 00000000 		.4byte	.LFB91
 3979 00f4 3A000000 		.4byte	.LFE91-.LFB91
 3980 00f8 00000000 		.4byte	0
 3981 00fc 00000000 		.4byte	0
 3982              		.section	.debug_ranges,"",%progbits
 3983              	.Ldebug_ranges0:
 3984 0000 00000000 		.4byte	.LFB63
 3985 0004 60010000 		.4byte	.LFE63
 3986 0008 00000000 		.4byte	.LFB64
 3987 000c 2C000000 		.4byte	.LFE64
 3988 0010 00000000 		.4byte	.LFB65
 3989 0014 18000000 		.4byte	.LFE65
 3990 0018 00000000 		.4byte	.LFB66
 3991 001c 18000000 		.4byte	.LFE66
 3992 0020 00000000 		.4byte	.LFB67
 3993 0024 16000000 		.4byte	.LFE67
 3994 0028 00000000 		.4byte	.LFB68
 3995 002c 0E000000 		.4byte	.LFE68
 3996 0030 00000000 		.4byte	.LFB69
 3997 0034 0E000000 		.4byte	.LFE69
 3998 0038 00000000 		.4byte	.LFB70
 3999 003c 0E000000 		.4byte	.LFE70
 4000 0040 00000000 		.4byte	.LFB71
 4001 0044 2C000000 		.4byte	.LFE71
 4002 0048 00000000 		.4byte	.LFB72
 4003 004c 2C000000 		.4byte	.LFE72
 4004 0050 00000000 		.4byte	.LFB73
 4005 0054 14000000 		.4byte	.LFE73
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 82


 4006 0058 00000000 		.4byte	.LFB74
 4007 005c 18000000 		.4byte	.LFE74
 4008 0060 00000000 		.4byte	.LFB75
 4009 0064 34000000 		.4byte	.LFE75
 4010 0068 00000000 		.4byte	.LFB76
 4011 006c 98000000 		.4byte	.LFE76
 4012 0070 00000000 		.4byte	.LFB77
 4013 0074 9C000000 		.4byte	.LFE77
 4014 0078 00000000 		.4byte	.LFB78
 4015 007c 0C000000 		.4byte	.LFE78
 4016 0080 00000000 		.4byte	.LFB79
 4017 0084 2C000000 		.4byte	.LFE79
 4018 0088 00000000 		.4byte	.LFB80
 4019 008c B8000000 		.4byte	.LFE80
 4020 0090 00000000 		.4byte	.LFB81
 4021 0094 70000000 		.4byte	.LFE81
 4022 0098 00000000 		.4byte	.LFB82
 4023 009c 1C000000 		.4byte	.LFE82
 4024 00a0 00000000 		.4byte	.LFB83
 4025 00a4 1C000000 		.4byte	.LFE83
 4026 00a8 00000000 		.4byte	.LFB84
 4027 00ac 0A000000 		.4byte	.LFE84
 4028 00b0 00000000 		.4byte	.LFB85
 4029 00b4 D8010000 		.4byte	.LFE85
 4030 00b8 00000000 		.4byte	.LFB86
 4031 00bc C0000000 		.4byte	.LFE86
 4032 00c0 00000000 		.4byte	.LFB87
 4033 00c4 B8000000 		.4byte	.LFE87
 4034 00c8 00000000 		.4byte	.LFB88
 4035 00cc B8000000 		.4byte	.LFE88
 4036 00d0 00000000 		.4byte	.LFB89
 4037 00d4 68000000 		.4byte	.LFE89
 4038 00d8 00000000 		.4byte	.LFB90
 4039 00dc 50000000 		.4byte	.LFE90
 4040 00e0 00000000 		.4byte	.LFB91
 4041 00e4 3A000000 		.4byte	.LFE91
 4042 00e8 00000000 		.4byte	0
 4043 00ec 00000000 		.4byte	0
 4044              		.section	.debug_line,"",%progbits
 4045              	.Ldebug_line0:
 4046 0000 57040000 		.section	.debug_str,"MS",%progbits,1
 4046      02005501 
 4046      00000201 
 4046      FB0E0D00 
 4046      01010101 
 4047              	.LASF104:
 4048 0000 64697265 		.ascii	"direction\000"
 4048      6374696F 
 4048      6E00
 4049              	.LASF23:
 4050 000a 52545552 		.ascii	"RTURN\000"
 4050      4E00
 4051              	.LASF110:
 4052 0010 71756164 		.ascii	"quad_diff1\000"
 4052      5F646966 
 4052      663100
 4053              	.LASF111:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 83


 4054 001b 71756164 		.ascii	"quad_diff2\000"
 4054      5F646966 
 4054      663200
 4055              	.LASF72:
 4056 0026 77686565 		.ascii	"wheel_2_str\000"
 4056      6C5F325F 
 4056      73747200 
 4057              	.LASF70:
 4058 0032 51756164 		.ascii	"Quad_Dec_response\000"
 4058      5F446563 
 4058      5F726573 
 4058      706F6E73 
 4058      6500
 4059              	.LASF119:
 4060 0044 70726576 		.ascii	"prevVoltage\000"
 4060      566F6C74 
 4060      61676500 
 4061              	.LASF112:
 4062 0050 73746172 		.ascii	"start_turn_count\000"
 4062      745F7475 
 4062      726E5F63 
 4062      6F756E74 
 4062      00
 4063              	.LASF8:
 4064 0061 756E7369 		.ascii	"unsigned int\000"
 4064      676E6564 
 4064      20696E74 
 4064      00
 4065              	.LASF11:
 4066 006e 5F5F696E 		.ascii	"__int32_t\000"
 4066      7433325F 
 4066      7400
 4067              	.LASF17:
 4068 0078 696E7431 		.ascii	"int16\000"
 4068      3600
 4069              	.LASF126:
 4070 007e 73797374 		.ascii	"system_state\000"
 4070      656D5F73 
 4070      74617465 
 4070      00
 4071              	.LASF22:
 4072 008b 4C545552 		.ascii	"LTURN\000"
 4072      4E00
 4073              	.LASF68:
 4074 0091 6973725F 		.ascii	"isr_adcTimer\000"
 4074      61646354 
 4074      696D6572 
 4074      00
 4075              	.LASF120:
 4076 009e 70726576 		.ascii	"prevVoltage2\000"
 4076      566F6C74 
 4076      61676532 
 4076      00
 4077              	.LASF42:
 4078 00ab 7061636B 		.ascii	"packet_bytes\000"
 4078      65745F62 
 4078      79746573 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 84


 4078      00
 4079              	.LASF38:
 4080 00b8 67325F78 		.ascii	"g2_xpos\000"
 4080      706F7300 
 4081              	.LASF106:
 4082 00c0 71756164 		.ascii	"quad_count1\000"
 4082      5F636F75 
 4082      6E743100 
 4083              	.LASF107:
 4084 00cc 71756164 		.ascii	"quad_count2\000"
 4084      5F636F75 
 4084      6E743200 
 4085              	.LASF100:
 4086 00d8 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4086      5F72665F 
 4086      7472616E 
 4086      736D6973 
 4086      73696F6E 
 4087              	.LASF101:
 4088 00f4 666C6167 		.ascii	"flag_print_rf\000"
 4088      5F707269 
 4088      6E745F72 
 4088      6600
 4089              	.LASF127:
 4090 0102 6D6F7665 		.ascii	"movement_state\000"
 4090      6D656E74 
 4090      5F737461 
 4090      746500
 4091              	.LASF84:
 4092 0111 75736250 		.ascii	"usbPutString\000"
 4092      75745374 
 4092      72696E67 
 4092      00
 4093              	.LASF55:
 4094 011e 696E6974 		.ascii	"initForward\000"
 4094      466F7277 
 4094      61726400 
 4095              	.LASF41:
 4096 012a 67325F64 		.ascii	"g2_direction\000"
 4096      69726563 
 4096      74696F6E 
 4096      00
 4097              	.LASF64:
 4098 0137 6973725F 		.ascii	"isr_quad1\000"
 4098      71756164 
 4098      3100
 4099              	.LASF18:
 4100 0141 666C6F61 		.ascii	"float\000"
 4100      7400
 4101              	.LASF58:
 4102 0147 73657453 		.ascii	"setSpeed\000"
 4102      70656564 
 4102      00
 4103              	.LASF124:
 4104 0150 75736242 		.ascii	"usbBuffer\000"
 4104      75666665 
 4104      7200
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 85


 4105              	.LASF26:
 4106 015a 696E6465 		.ascii	"index\000"
 4106      7800
 4107              	.LASF21:
 4108 0160 44524956 		.ascii	"DRIVE\000"
 4108      4500
 4109              	.LASF44:
 4110 0166 73747269 		.ascii	"string_packet\000"
 4110      6E675F70 
 4110      61636B65 
 4110      7400
 4111              	.LASF50:
 4112 0174 64726976 		.ascii	"driveForwards\000"
 4112      65466F72 
 4112      77617264 
 4112      7300
 4113              	.LASF51:
 4114 0182 7475726E 		.ascii	"turnLeft\000"
 4114      4C656674 
 4114      00
 4115              	.LASF7:
 4116 018b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4116      206C6F6E 
 4116      6720756E 
 4116      7369676E 
 4116      65642069 
 4117              	.LASF97:
 4118 01a2 666C6167 		.ascii	"flag_packet\000"
 4118      5F706163 
 4118      6B657400 
 4119              	.LASF65:
 4120 01ae 6973725F 		.ascii	"isr_turn_timer\000"
 4120      7475726E 
 4120      5F74696D 
 4120      657200
 4121              	.LASF53:
 4122 01bd 696E6974 		.ascii	"initTurnLeft\000"
 4122      5475726E 
 4122      4C656674 
 4122      00
 4123              	.LASF118:
 4124 01ca 706F7274 		.ascii	"portOpen\000"
 4124      4F70656E 
 4124      00
 4125              	.LASF56:
 4126 01d3 696E6974 		.ascii	"initBrake\000"
 4126      4272616B 
 4126      6500
 4127              	.LASF93:
 4128 01dd 666C6167 		.ascii	"flag_ts_update\000"
 4128      5F74735F 
 4128      75706461 
 4128      746500
 4129              	.LASF78:
 4130 01ec 7363616C 		.ascii	"scalingFactor\000"
 4130      696E6746 
 4130      6163746F 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 86


 4130      7200
 4131              	.LASF73:
 4132 01fa 6C656674 		.ascii	"leftSpeed\000"
 4132      53706565 
 4132      6400
 4133              	.LASF92:
 4134 0204 666C6167 		.ascii	"flag_ts_enc\000"
 4134      5F74735F 
 4134      656E6300 
 4135              	.LASF128:
 4136 0210 62797465 		.ascii	"byteCount\000"
 4136      436F756E 
 4136      7400
 4137              	.LASF67:
 4138 021a 62757474 		.ascii	"button\000"
 4138      6F6E00
 4139              	.LASF80:
 4140 0221 72657375 		.ascii	"result_str\000"
 4140      6C745F73 
 4140      747200
 4141              	.LASF86:
 4142 022c 75617274 		.ascii	"uart_set_PWM\000"
 4142      5F736574 
 4142      5F50574D 
 4142      00
 4143              	.LASF28:
 4144 0239 726F626F 		.ascii	"robot_ypos\000"
 4144      745F7970 
 4144      6F7300
 4145              	.LASF91:
 4146 0244 74735F64 		.ascii	"ts_display\000"
 4146      6973706C 
 4146      617900
 4147              	.LASF77:
 4148 024f 7072696E 		.ascii	"print_ADC\000"
 4148      745F4144 
 4148      4300
 4149              	.LASF71:
 4150 0259 77686565 		.ascii	"wheel_1_str\000"
 4150      6C5F315F 
 4150      73747200 
 4151              	.LASF10:
 4152 0265 63686172 		.ascii	"char\000"
 4152      00
 4153              	.LASF32:
 4154 026a 67305F73 		.ascii	"g0_speed\000"
 4154      70656564 
 4154      00
 4155              	.LASF116:
 4156 0273 72696768 		.ascii	"rightSpeedLimit\000"
 4156      74537065 
 4156      65644C69 
 4156      6D697400 
 4157              	.LASF14:
 4158 0283 75696E74 		.ascii	"uint16\000"
 4158      313600
 4159              	.LASF16:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 87


 4160 028a 696E7438 		.ascii	"int8\000"
 4160      00
 4161              	.LASF37:
 4162 028f 67315F64 		.ascii	"g1_direction\000"
 4162      69726563 
 4162      74696F6E 
 4162      00
 4163              	.LASF75:
 4164 029c 696E7465 		.ascii	"interCalc\000"
 4164      7243616C 
 4164      6300
 4165              	.LASF45:
 4166 02a6 72696768 		.ascii	"right\000"
 4166      7400
 4167              	.LASF6:
 4168 02ac 6C6F6E67 		.ascii	"long long int\000"
 4168      206C6F6E 
 4168      6720696E 
 4168      7400
 4169              	.LASF125:
 4170 02ba 62756666 		.ascii	"buffer_state\000"
 4170      65725F73 
 4170      74617465 
 4170      00
 4171              	.LASF34:
 4172 02c7 67315F78 		.ascii	"g1_xpos\000"
 4172      706F7300 
 4173              	.LASF130:
 4174 02cf 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4174      4320342E 
 4174      392E3320 
 4174      32303135 
 4174      30333033 
 4175 0302 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4175      20726576 
 4175      6973696F 
 4175      6E203232 
 4175      31323230 
 4176 0335 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4176      66756E63 
 4176      74696F6E 
 4176      2D736563 
 4176      74696F6E 
 4177              	.LASF40:
 4178 035d 67325F73 		.ascii	"g2_speed\000"
 4178      70656564 
 4178      00
 4179              	.LASF31:
 4180 0366 67305F79 		.ascii	"g0_ypos\000"
 4180      706F7300 
 4181              	.LASF60:
 4182 036e 72665F63 		.ascii	"rf_char\000"
 4182      68617200 
 4183              	.LASF74:
 4184 0376 72696768 		.ascii	"rightSpeed\000"
 4184      74537065 
 4184      656400
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 88


 4185              	.LASF90:
 4186 0381 74735F73 		.ascii	"ts_speed\000"
 4186      70656564 
 4186      00
 4187              	.LASF15:
 4188 038a 75696E74 		.ascii	"uint32\000"
 4188      333200
 4189              	.LASF134:
 4190 0391 64617461 		.ascii	"data_main\000"
 4190      5F6D6169 
 4190      6E00
 4191              	.LASF79:
 4192 039b 636F6E76 		.ascii	"converted_val\000"
 4192      65727465 
 4192      645F7661 
 4192      6C00
 4193              	.LASF25:
 4194 03a9 72737369 		.ascii	"rssi\000"
 4194      00
 4195              	.LASF33:
 4196 03ae 67305F64 		.ascii	"g0_direction\000"
 4196      69726563 
 4196      74696F6E 
 4196      00
 4197              	.LASF102:
 4198 03bb 666C6167 		.ascii	"flag_receive_ADC\000"
 4198      5F726563 
 4198      65697665 
 4198      5F414443 
 4198      00
 4199              	.LASF24:
 4200 03cc 53544F50 		.ascii	"STOPPED\000"
 4200      50454400 
 4201              	.LASF61:
 4202 03d4 42545F72 		.ascii	"BT_rxInt\000"
 4202      78496E74 
 4202      00
 4203              	.LASF20:
 4204 03dd 6C6F6E67 		.ascii	"long double\000"
 4204      20646F75 
 4204      626C6500 
 4205              	.LASF59:
 4206 03e9 7278496E 		.ascii	"rxInt\000"
 4206      7400
 4207              	.LASF113:
 4208 03ef 6C656674 		.ascii	"left_duty_cycle\000"
 4208      5F647574 
 4208      795F6379 
 4208      636C6500 
 4209              	.LASF94:
 4210 03ff 666C6167 		.ascii	"flag_ts_speed\000"
 4210      5F74735F 
 4210      73706565 
 4210      6400
 4211              	.LASF99:
 4212 040d 64617461 		.ascii	"dataready_flag\000"
 4212      72656164 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 89


 4212      795F666C 
 4212      616700
 4213              	.LASF96:
 4214 041c 666C6167 		.ascii	"flag_rx\000"
 4214      5F727800 
 4215              	.LASF2:
 4216 0424 73686F72 		.ascii	"short int\000"
 4216      7420696E 
 4216      7400
 4217              	.LASF103:
 4218 042e 6164635F 		.ascii	"adc_result\000"
 4218      72657375 
 4218      6C7400
 4219              	.LASF105:
 4220 0439 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 4220      5F63616C 
 4220      635F7768 
 4220      65656C73 
 4220      70656564 
 4221              	.LASF4:
 4222 044e 6C6F6E67 		.ascii	"long int\000"
 4222      20696E74 
 4222      00
 4223              	.LASF54:
 4224 0457 696E6974 		.ascii	"initTurnRight\000"
 4224      5475726E 
 4224      52696768 
 4224      7400
 4225              	.LASF87:
 4226 0465 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4226      52784275 
 4226      66666572 
 4226      00
 4227              	.LASF82:
 4228 0472 7072696E 		.ascii	"printString\000"
 4228      74537472 
 4228      696E6700 
 4229              	.LASF89:
 4230 047e 74735F75 		.ascii	"ts_update\000"
 4230      70646174 
 4230      6500
 4231              	.LASF115:
 4232 0488 6C656674 		.ascii	"leftSpeedLimit\000"
 4232      53706565 
 4232      644C696D 
 4232      697400
 4233              	.LASF39:
 4234 0497 67325F79 		.ascii	"g2_ypos\000"
 4234      706F7300 
 4235              	.LASF46:
 4236 049f 6C656674 		.ascii	"left\000"
 4236      00
 4237              	.LASF52:
 4238 04a4 7475726E 		.ascii	"turnRight\000"
 4238      52696768 
 4238      7400
 4239              	.LASF35:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 90


 4240 04ae 67315F79 		.ascii	"g1_ypos\000"
 4240      706F7300 
 4241              	.LASF63:
 4242 04b6 6164635F 		.ascii	"adc_isr\000"
 4242      69737200 
 4243              	.LASF9:
 4244 04be 73697A65 		.ascii	"sizetype\000"
 4244      74797065 
 4244      00
 4245              	.LASF5:
 4246 04c7 6C6F6E67 		.ascii	"long unsigned int\000"
 4246      20756E73 
 4246      69676E65 
 4246      6420696E 
 4246      7400
 4247              	.LASF43:
 4248 04d9 62797465 		.ascii	"byte_packet\000"
 4248      5F706163 
 4248      6B657400 
 4249              	.LASF12:
 4250 04e5 696E7433 		.ascii	"int32_t\000"
 4250      325F7400 
 4251              	.LASF129:
 4252 04ed 7061636B 		.ascii	"packet\000"
 4252      657400
 4253              	.LASF27:
 4254 04f4 726F626F 		.ascii	"robot_xpos\000"
 4254      745F7870 
 4254      6F7300
 4255              	.LASF49:
 4256 04ff 6272616B 		.ascii	"brakeMotor\000"
 4256      654D6F74 
 4256      6F7200
 4257              	.LASF123:
 4258 050a 656E7472 		.ascii	"entry\000"
 4258      7900
 4259              	.LASF1:
 4260 0510 756E7369 		.ascii	"unsigned char\000"
 4260      676E6564 
 4260      20636861 
 4260      7200
 4261              	.LASF122:
 4262 051e 6C696E65 		.ascii	"line\000"
 4262      00
 4263              	.LASF66:
 4264 0523 53746F70 		.ascii	"Stop_on_line\000"
 4264      5F6F6E5F 
 4264      6C696E65 
 4264      00
 4265              	.LASF88:
 4266 0530 74735F65 		.ascii	"ts_enc\000"
 4266      6E6300
 4267              	.LASF117:
 4268 0537 6272616B 		.ascii	"brakeFlag\000"
 4268      65466C61 
 4268      6700
 4269              	.LASF95:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 91


 4270 0541 666C6167 		.ascii	"flag_ts_display\000"
 4270      5F74735F 
 4270      64697370 
 4270      6C617900 
 4271              	.LASF133:
 4272 0551 73746174 		.ascii	"state\000"
 4272      6500
 4273              	.LASF57:
 4274 0557 72657665 		.ascii	"reverseDirection\000"
 4274      72736544 
 4274      69726563 
 4274      74696F6E 
 4274      00
 4275              	.LASF47:
 4276 0568 6272616B 		.ascii	"brakeLeft\000"
 4276      654C6566 
 4276      7400
 4277              	.LASF121:
 4278 0572 64697370 		.ascii	"displaystring\000"
 4278      6C617973 
 4278      7472696E 
 4278      6700
 4279              	.LASF108:
 4280 0580 6C617374 		.ascii	"last_quad_count1\000"
 4280      5F717561 
 4280      645F636F 
 4280      756E7431 
 4280      00
 4281              	.LASF109:
 4282 0591 6C617374 		.ascii	"last_quad_count2\000"
 4282      5F717561 
 4282      645F636F 
 4282      756E7432 
 4282      00
 4283              	.LASF85:
 4284 05a2 75736250 		.ascii	"usbPutChar\000"
 4284      75744368 
 4284      617200
 4285              	.LASF0:
 4286 05ad 7369676E 		.ascii	"signed char\000"
 4286      65642063 
 4286      68617200 
 4287              	.LASF3:
 4288 05b9 73686F72 		.ascii	"short unsigned int\000"
 4288      7420756E 
 4288      7369676E 
 4288      65642069 
 4288      6E7400
 4289              	.LASF29:
 4290 05cc 726F626F 		.ascii	"robot_orientation\000"
 4290      745F6F72 
 4290      69656E74 
 4290      6174696F 
 4290      6E00
 4291              	.LASF83:
 4292 05de 6D61696E 		.ascii	"main\000"
 4292      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 92


 4293              	.LASF62:
 4294 05e3 42545F74 		.ascii	"BT_txInt\000"
 4294      78496E74 
 4294      00
 4295              	.LASF76:
 4296 05ec 6E657874 		.ascii	"nextSpeed\000"
 4296      53706565 
 4296      6400
 4297              	.LASF13:
 4298 05f6 75696E74 		.ascii	"uint8\000"
 4298      3800
 4299              	.LASF19:
 4300 05fc 646F7562 		.ascii	"double\000"
 4300      6C6500
 4301              	.LASF114:
 4302 0603 72696768 		.ascii	"right_duty_cycle\000"
 4302      745F6475 
 4302      74795F63 
 4302      79636C65 
 4302      00
 4303              	.LASF69:
 4304 0614 68616E64 		.ascii	"handle_rx_binary\000"
 4304      6C655F72 
 4304      785F6269 
 4304      6E617279 
 4304      00
 4305              	.LASF132:
 4306 0625 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 4306      70315C43 
 4306      53333031 
 4306      2D546561 
 4306      6D2D5265 
 4307              	.LASF81:
 4308 064e 7072696E 		.ascii	"print_RF\000"
 4308      745F5246 
 4308      00
 4309              	.LASF30:
 4310 0657 67305F78 		.ascii	"g0_xpos\000"
 4310      706F7300 
 4311              	.LASF98:
 4312 065f 666C6167 		.ascii	"flag_KB_string\000"
 4312      5F4B425F 
 4312      73747269 
 4312      6E6700
 4313              	.LASF36:
 4314 066e 67315F73 		.ascii	"g1_speed\000"
 4314      70656564 
 4314      00
 4315              	.LASF131:
 4316 0677 2E5C6D61 		.ascii	".\\main.c\000"
 4316      696E2E63 
 4316      00
 4317              	.LASF48:
 4318 0680 6272616B 		.ascii	"brakeRight\000"
 4318      65526967 
 4318      687400
 4319              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccVQcWn1.s 			page 93


