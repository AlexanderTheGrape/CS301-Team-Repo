ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	prev_movement_state
 204              		.type	prev_movement_state, %object
 205              		.size	prev_movement_state, 1
 206              	prev_movement_state:
 207 0044 03       		.byte	3
 208              		.global	movement_state
 209              		.type	movement_state, %object
 210              		.size	movement_state, 1
 211              	movement_state:
 212 0045 03       		.byte	3
 213              		.global	track_mode
 214              		.bss
 215              		.type	track_mode, %object
 216              		.size	track_mode, 1
 217              	track_mode:
 218 002c 00       		.space	1
 219              		.global	byteCount
 220              		.type	byteCount, %object
 221              		.size	byteCount, 1
 222              	byteCount:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 5


 223 002d 00       		.space	1
 224              		.comm	packet,2,4
 225              		.global	speed
 226              		.data
 227 0046 0000     		.align	3
 228              		.type	speed, %object
 229              		.size	speed, 8
 230              	speed:
 231 0048 00000000 		.word	0
 232 004c 00003040 		.word	1076887552
 233              		.section	.text.handle_rx_binary,"ax",%progbits
 234              		.align	2
 235              		.global	handle_rx_binary
 236              		.thumb
 237              		.thumb_func
 238              		.type	handle_rx_binary, %function
 239              	handle_rx_binary:
 240              	.LFB63:
 241              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 6


  39:.\main.c      **** #define QUAD_RATIO 0.99556
  40:.\main.c      **** 
  41:.\main.c      **** void handle_rx_binary()
  42:.\main.c      **** {
 242              		.loc 1 42 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 32
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 80B4     		push	{r7}
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 7, -4
 250 0002 89B0     		sub	sp, sp, #36
 251              		.cfi_def_cfa_offset 40
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
  43:.\main.c      ****     if(flag_rx == 1)
 254              		.loc 1 43 0
 255 0006 524B     		ldr	r3, .L21
 256 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 257 000a 012B     		cmp	r3, #1
 258 000c 40F09A80 		bne	.L1
 259              	.LBB2:
  44:.\main.c      ****     {    
  45:.\main.c      ****         flag_rx = 0;
 260              		.loc 1 45 0
 261 0010 4F4B     		ldr	r3, .L21
 262 0012 0022     		movs	r2, #0
 263 0014 1A70     		strb	r2, [r3]
  46:.\main.c      ****         
  47:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 264              		.loc 1 47 0
 265 0016 4F4B     		ldr	r3, .L21+4
 266 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 267 001a 1B02     		lsls	r3, r3, #8
 268 001c 9AB2     		uxth	r2, r3
 269 001e 4D4B     		ldr	r3, .L21+4
 270 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 271 0022 9BB2     		uxth	r3, r3
 272 0024 1343     		orrs	r3, r3, r2
 273 0026 9BB2     		uxth	r3, r3
 274 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  48:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  49:.\main.c      ****         char byte_packet[12];
  50:.\main.c      ****         char string_packet[12];
  51:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  52:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  53:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  54:.\main.c      ****         //usbPutString(string_packet);
  55:.\main.c      ****        // usbPutString(string_packet);
  56:.\main.c      ****        // usbPutChar(' ');
  57:.\main.c      ****         
  58:.\main.c      ****         switch(byteCount)
 275              		.loc 1 58 0
 276 002a 4B4B     		ldr	r3, .L21+8
 277 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 278 002e 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 7


 279 0030 1E2B     		cmp	r3, #30
 280 0032 00F28780 		bhi	.L1
 281 0036 01A2     		adr	r2, .L5
 282 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 283              		.p2align 2
 284              	.L5:
 285 003c B9000000 		.word	.L4+1
 286 0040 45010000 		.word	.L1+1
 287 0044 CD000000 		.word	.L6+1
 288 0048 45010000 		.word	.L1+1
 289 004c D5000000 		.word	.L7+1
 290 0050 45010000 		.word	.L1+1
 291 0054 DD000000 		.word	.L8+1
 292 0058 45010000 		.word	.L1+1
 293 005c E5000000 		.word	.L9+1
 294 0060 45010000 		.word	.L1+1
 295 0064 ED000000 		.word	.L10+1
 296 0068 45010000 		.word	.L1+1
 297 006c F5000000 		.word	.L11+1
 298 0070 45010000 		.word	.L1+1
 299 0074 FD000000 		.word	.L12+1
 300 0078 45010000 		.word	.L1+1
 301 007c 05010000 		.word	.L13+1
 302 0080 45010000 		.word	.L1+1
 303 0084 0D010000 		.word	.L14+1
 304 0088 45010000 		.word	.L1+1
 305 008c 15010000 		.word	.L15+1
 306 0090 45010000 		.word	.L1+1
 307 0094 1D010000 		.word	.L16+1
 308 0098 45010000 		.word	.L1+1
 309 009c 25010000 		.word	.L17+1
 310 00a0 45010000 		.word	.L1+1
 311 00a4 2D010000 		.word	.L18+1
 312 00a8 45010000 		.word	.L1+1
 313 00ac 35010000 		.word	.L19+1
 314 00b0 45010000 		.word	.L1+1
 315 00b4 3D010000 		.word	.L20+1
 316              		.p2align 1
 317              	.L4:
  59:.\main.c      ****         {
  60:.\main.c      ****             case 4:
  61:.\main.c      ****                 //usbPutString("RSSI:");
  62:.\main.c      ****                 //usbPutString(byte_packet);
  63:.\main.c      ****                 //usbPutString("\r\n");
  64:.\main.c      ****                 buffer_state.rssi = packet[0];
 318              		.loc 1 64 0
 319 00b8 264B     		ldr	r3, .L21+4
 320 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 321 00bc DAB2     		uxtb	r2, r3
 322 00be 274B     		ldr	r3, .L21+12
 323 00c0 1A70     		strb	r2, [r3]
  65:.\main.c      ****                 buffer_state.index = packet[1];
 324              		.loc 1 65 0
 325 00c2 244B     		ldr	r3, .L21+4
 326 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 327 00c6 254B     		ldr	r3, .L21+12
 328 00c8 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 8


  66:.\main.c      ****             break;
 329              		.loc 1 66 0
 330 00ca 3BE0     		b	.L1
 331              	.L6:
  67:.\main.c      ****             case 6:
  68:.\main.c      ****                 //usbPutString("robot_x:");
  69:.\main.c      ****                 //usbPutString(string_packet);
  70:.\main.c      ****                 //usbPutString("\r\n");
  71:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 332              		.loc 1 71 0
 333 00cc FA8B     		ldrh	r2, [r7, #30]
 334 00ce 234B     		ldr	r3, .L21+12
 335 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  72:.\main.c      ****             break;
 336              		.loc 1 72 0
 337 00d2 37E0     		b	.L1
 338              	.L7:
  73:.\main.c      ****             case 8:
  74:.\main.c      ****                 //usbPutString("robot_y:");
  75:.\main.c      ****                 //usbPutString(string_packet);
  76:.\main.c      ****                 //usbPutString("\r\n");
  77:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 339              		.loc 1 77 0
 340 00d4 FA8B     		ldrh	r2, [r7, #30]
 341 00d6 214B     		ldr	r3, .L21+12
 342 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  78:.\main.c      ****             break;
 343              		.loc 1 78 0
 344 00da 33E0     		b	.L1
 345              	.L8:
  79:.\main.c      ****             case 10:
  80:.\main.c      ****                 //usbPutString("robot_dir:");
  81:.\main.c      ****                 //usbPutString(string_packet);
  82:.\main.c      ****                 //usbPutString("\r\n");
  83:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 346              		.loc 1 83 0
 347 00dc FA8B     		ldrh	r2, [r7, #30]
 348 00de 1F4B     		ldr	r3, .L21+12
 349 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  84:.\main.c      ****             break;
 350              		.loc 1 84 0
 351 00e2 2FE0     		b	.L1
 352              	.L9:
  85:.\main.c      ****             case 12:
  86:.\main.c      ****                 //usbPutString("g0_x:");
  87:.\main.c      ****                 //usbPutString(string_packet);
  88:.\main.c      ****                 //usbPutString("\r\n");
  89:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 353              		.loc 1 89 0
 354 00e4 FA8B     		ldrh	r2, [r7, #30]
 355 00e6 1D4B     		ldr	r3, .L21+12
 356 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  90:.\main.c      ****             break;
 357              		.loc 1 90 0
 358 00ea 2BE0     		b	.L1
 359              	.L10:
  91:.\main.c      ****             case 14:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 9


  92:.\main.c      ****                 //usbPutString("g0_y:");
  93:.\main.c      ****                 //usbPutString(string_packet);
  94:.\main.c      ****                 //usbPutString("\r\n");
  95:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 360              		.loc 1 95 0
 361 00ec FA8B     		ldrh	r2, [r7, #30]
 362 00ee 1B4B     		ldr	r3, .L21+12
 363 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  96:.\main.c      ****             break;
 364              		.loc 1 96 0
 365 00f2 27E0     		b	.L1
 366              	.L11:
  97:.\main.c      ****             case 16:
  98:.\main.c      ****                 //usbPutString("g0_speed:");
  99:.\main.c      ****                 //usbPutString(string_packet);
 100:.\main.c      ****                 //usbPutString("\r\n");
 101:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 367              		.loc 1 101 0
 368 00f4 FA8B     		ldrh	r2, [r7, #30]
 369 00f6 194B     		ldr	r3, .L21+12
 370 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 102:.\main.c      ****             break;
 371              		.loc 1 102 0
 372 00fa 23E0     		b	.L1
 373              	.L12:
 103:.\main.c      ****             case 18:
 104:.\main.c      ****                 //usbPutString("g1_dir:");
 105:.\main.c      ****                 //usbPutString(string_packet);
 106:.\main.c      ****                 //usbPutString("\r\n");
 107:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 374              		.loc 1 107 0
 375 00fc FA8B     		ldrh	r2, [r7, #30]
 376 00fe 174B     		ldr	r3, .L21+12
 377 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 108:.\main.c      ****             break;
 378              		.loc 1 108 0
 379 0102 1FE0     		b	.L1
 380              	.L13:
 109:.\main.c      ****             case 20:
 110:.\main.c      ****                 //usbPutString("g1_x:");
 111:.\main.c      ****                 //usbPutString(string_packet);
 112:.\main.c      ****                 //usbPutString("\r\n");
 113:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 381              		.loc 1 113 0
 382 0104 FA8B     		ldrh	r2, [r7, #30]
 383 0106 154B     		ldr	r3, .L21+12
 384 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 114:.\main.c      ****             break;
 385              		.loc 1 114 0
 386 010a 1BE0     		b	.L1
 387              	.L14:
 115:.\main.c      ****             case 22:
 116:.\main.c      ****                 //usbPutString("g1_y:");
 117:.\main.c      ****                 //usbPutString(string_packet);
 118:.\main.c      ****                 //usbPutString("\r\n");
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 388              		.loc 1 119 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 10


 389 010c FA8B     		ldrh	r2, [r7, #30]
 390 010e 134B     		ldr	r3, .L21+12
 391 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 392              		.loc 1 120 0
 393 0112 17E0     		b	.L1
 394              	.L15:
 121:.\main.c      ****             case 24:
 122:.\main.c      ****                 //usbPutString("g1_speed:");
 123:.\main.c      ****                 //usbPutString(string_packet);
 124:.\main.c      ****                 //usbPutString("\r\n");
 125:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 395              		.loc 1 125 0
 396 0114 FA8B     		ldrh	r2, [r7, #30]
 397 0116 114B     		ldr	r3, .L21+12
 398 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 126:.\main.c      ****             break;
 399              		.loc 1 126 0
 400 011a 13E0     		b	.L1
 401              	.L16:
 127:.\main.c      ****             case 26:
 128:.\main.c      ****                 //usbPutString("g1_dir:");
 129:.\main.c      ****                 //usbPutString(string_packet);
 130:.\main.c      ****                 //usbPutString("\r\n");
 131:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 402              		.loc 1 131 0
 403 011c FA8B     		ldrh	r2, [r7, #30]
 404 011e 0F4B     		ldr	r3, .L21+12
 405 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 132:.\main.c      ****             break;
 406              		.loc 1 132 0
 407 0122 0FE0     		b	.L1
 408              	.L17:
 133:.\main.c      ****             case 28:
 134:.\main.c      ****                 //usbPutString("g2_x:");
 135:.\main.c      ****                 //usbPutString(string_packet);
 136:.\main.c      ****                 //usbPutString("\r\n");
 137:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 409              		.loc 1 137 0
 410 0124 FA8B     		ldrh	r2, [r7, #30]
 411 0126 0D4B     		ldr	r3, .L21+12
 412 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 138:.\main.c      ****             break;
 413              		.loc 1 138 0
 414 012a 0BE0     		b	.L1
 415              	.L18:
 139:.\main.c      ****             case 30:
 140:.\main.c      ****                 //usbPutString("g2_y:");
 141:.\main.c      ****                 //usbPutString(string_packet);
 142:.\main.c      ****                 //usbPutString("\r\n");
 143:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 416              		.loc 1 143 0
 417 012c FA8B     		ldrh	r2, [r7, #30]
 418 012e 0B4B     		ldr	r3, .L21+12
 419 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 144:.\main.c      ****             break;
 420              		.loc 1 144 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 11


 421 0132 07E0     		b	.L1
 422              	.L19:
 145:.\main.c      ****             case 32:
 146:.\main.c      ****                 //usbPutString("g1_speed:");
 147:.\main.c      ****                 //usbPutString(string_packet);
 148:.\main.c      ****                 //usbPutString("\r\n");
 149:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 423              		.loc 1 149 0
 424 0134 FA8B     		ldrh	r2, [r7, #30]
 425 0136 094B     		ldr	r3, .L21+12
 426 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 150:.\main.c      ****             break;
 427              		.loc 1 150 0
 428 013a 03E0     		b	.L1
 429              	.L20:
 151:.\main.c      ****             case 34:
 152:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 430              		.loc 1 152 0
 431 013c FA8B     		ldrh	r2, [r7, #30]
 432 013e 074B     		ldr	r3, .L21+12
 433 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 153:.\main.c      ****                 //usbPutString("g2_dir:");
 154:.\main.c      ****                 //usbPutString(string_packet);
 155:.\main.c      ****                 //usbPutString("\r\n");
 156:.\main.c      ****                 
 157:.\main.c      ****             break;
 434              		.loc 1 157 0
 435 0142 00BF     		nop
 436              	.L1:
 437              	.LBE2:
 158:.\main.c      ****         }
 159:.\main.c      ****     }
 160:.\main.c      **** }
 438              		.loc 1 160 0
 439 0144 2437     		adds	r7, r7, #36
 440              		.cfi_def_cfa_offset 4
 441 0146 BD46     		mov	sp, r7
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 0148 5DF8047B 		ldr	r7, [sp], #4
 445              		.cfi_restore 7
 446              		.cfi_def_cfa_offset 0
 447 014c 7047     		bx	lr
 448              	.L22:
 449 014e 00BF     		.align	2
 450              	.L21:
 451 0150 00000000 		.word	flag_rx
 452 0154 00000000 		.word	packet
 453 0158 00000000 		.word	byteCount
 454 015c 00000000 		.word	buffer_state
 455              		.cfi_endproc
 456              	.LFE63:
 457              		.size	handle_rx_binary, .-handle_rx_binary
 458              		.section	.text.setLeftDir,"ax",%progbits
 459              		.align	2
 460              		.global	setLeftDir
 461              		.thumb
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 12


 462              		.thumb_func
 463              		.type	setLeftDir, %function
 464              	setLeftDir:
 465              	.LFB64:
 161:.\main.c      **** 
 162:.\main.c      **** 
 163:.\main.c      **** 
 164:.\main.c      **** void setLeftDir(uint8 dir)
 165:.\main.c      **** {
 466              		.loc 1 165 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 82B0     		sub	sp, sp, #8
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 478 0006 0346     		mov	r3, r0
 479 0008 FB71     		strb	r3, [r7, #7]
 166:.\main.c      ****     M2_IN2_Write(dir);
 480              		.loc 1 166 0
 481 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 482 000c 1846     		mov	r0, r3
 483 000e FFF7FEFF 		bl	M2_IN2_Write
 167:.\main.c      **** }
 484              		.loc 1 167 0
 485 0012 0837     		adds	r7, r7, #8
 486              		.cfi_def_cfa_offset 8
 487 0014 BD46     		mov	sp, r7
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 0016 80BD     		pop	{r7, pc}
 491              		.cfi_endproc
 492              	.LFE64:
 493              		.size	setLeftDir, .-setLeftDir
 494              		.section	.text.setRightDir,"ax",%progbits
 495              		.align	2
 496              		.global	setRightDir
 497              		.thumb
 498              		.thumb_func
 499              		.type	setRightDir, %function
 500              	setRightDir:
 501              	.LFB65:
 168:.\main.c      **** 
 169:.\main.c      **** void setRightDir(uint8 dir)
 170:.\main.c      **** {
 502              		.loc 1 170 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 8
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 7, -8
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 13


 509              		.cfi_offset 14, -4
 510 0002 82B0     		sub	sp, sp, #8
 511              		.cfi_def_cfa_offset 16
 512 0004 00AF     		add	r7, sp, #0
 513              		.cfi_def_cfa_register 7
 514 0006 0346     		mov	r3, r0
 515 0008 FB71     		strb	r3, [r7, #7]
 171:.\main.c      ****     M1_IN2_Write(dir);
 516              		.loc 1 171 0
 517 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 518 000c 1846     		mov	r0, r3
 519 000e FFF7FEFF 		bl	M1_IN2_Write
 172:.\main.c      **** }
 520              		.loc 1 172 0
 521 0012 0837     		adds	r7, r7, #8
 522              		.cfi_def_cfa_offset 8
 523 0014 BD46     		mov	sp, r7
 524              		.cfi_def_cfa_register 13
 525              		@ sp needed
 526 0016 80BD     		pop	{r7, pc}
 527              		.cfi_endproc
 528              	.LFE65:
 529              		.size	setRightDir, .-setRightDir
 530              		.section	.rodata
 531              		.align	2
 532              	.LC0:
 533 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 533      2025640D 
 533      0A00
 534              		.section	.text.reverseDirection,"ax",%progbits
 535              		.align	2
 536              		.global	reverseDirection
 537              		.thumb
 538              		.thumb_func
 539              		.type	reverseDirection, %function
 540              	reverseDirection:
 541              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** void reverseDirection()
 175:.\main.c      **** {
 542              		.loc 1 175 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 16
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 80B5     		push	{r7, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 84B0     		sub	sp, sp, #16
 551              		.cfi_def_cfa_offset 24
 552 0004 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 176:.\main.c      ****     direction = !direction;
 554              		.loc 1 176 0
 555 0006 114B     		ldr	r3, .L26
 556 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 14


 558 000c 0CBF     		ite	eq
 559 000e 0123     		moveq	r3, #1
 560 0010 0023     		movne	r3, #0
 561 0012 DBB2     		uxtb	r3, r3
 562 0014 1A46     		mov	r2, r3
 563 0016 0D4B     		ldr	r3, .L26
 564 0018 1A70     		strb	r2, [r3]
 177:.\main.c      ****     setLeftDir(direction);
 565              		.loc 1 177 0
 566 001a 0C4B     		ldr	r3, .L26
 567 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 568 001e 1846     		mov	r0, r3
 569 0020 FFF7FEFF 		bl	setLeftDir
 178:.\main.c      ****     setRightDir(direction);
 570              		.loc 1 178 0
 571 0024 094B     		ldr	r3, .L26
 572 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 573 0028 1846     		mov	r0, r3
 574 002a FFF7FEFF 		bl	setRightDir
 179:.\main.c      ****     char mes[16];
 180:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 575              		.loc 1 180 0
 576 002e 074B     		ldr	r3, .L26
 577 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 578 0032 1A46     		mov	r2, r3
 579 0034 3B46     		mov	r3, r7
 580 0036 1846     		mov	r0, r3
 581 0038 0549     		ldr	r1, .L26+4
 582 003a FFF7FEFF 		bl	sprintf
 181:.\main.c      ****     UART_PutString(mes);
 583              		.loc 1 181 0
 584 003e 3B46     		mov	r3, r7
 585 0040 1846     		mov	r0, r3
 586 0042 FFF7FEFF 		bl	UART_PutString
 182:.\main.c      **** }
 587              		.loc 1 182 0
 588 0046 1037     		adds	r7, r7, #16
 589              		.cfi_def_cfa_offset 8
 590 0048 BD46     		mov	sp, r7
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 004a 80BD     		pop	{r7, pc}
 594              	.L27:
 595              		.align	2
 596              	.L26:
 597 004c 00000000 		.word	direction
 598 0050 00000000 		.word	.LC0
 599              		.cfi_endproc
 600              	.LFE66:
 601              		.size	reverseDirection, .-reverseDirection
 602              		.global	__aeabi_dcmplt
 603              		.global	__aeabi_dmul
 604              		.global	__aeabi_d2iz
 605              		.section	.text.setSpeed,"ax",%progbits
 606              		.align	2
 607              		.global	setSpeed
 608              		.thumb
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 15


 609              		.thumb_func
 610              		.type	setSpeed, %function
 611              	setSpeed:
 612              	.LFB67:
 183:.\main.c      **** 
 184:.\main.c      **** void setSpeed(double left, double right){
 613              		.loc 1 184 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 24
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617 0000 80B5     		push	{r7, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 86B0     		sub	sp, sp, #24
 622              		.cfi_def_cfa_offset 32
 623 0004 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 625 0006 C7E90201 		strd	r0, [r7, #8]
 626 000a C7E90023 		strd	r2, [r7]
 185:.\main.c      ****     if(right < 0.0)
 627              		.loc 1 185 0
 628 000e D7E90001 		ldrd	r0, [r7]
 629 0012 4FF00002 		mov	r2, #0
 630 0016 4FF00003 		mov	r3, #0
 631 001a FFF7FEFF 		bl	__aeabi_dcmplt
 632 001e 0346     		mov	r3, r0
 633 0020 002B     		cmp	r3, #0
 634 0022 10D0     		beq	.L37
 186:.\main.c      ****     {
 187:.\main.c      ****         //char mes[16];
 188:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 189:.\main.c      ****        // UART_PutString(mes);
 190:.\main.c      ****         setRightDir(!direction);
 635              		.loc 1 190 0
 636 0024 304B     		ldr	r3, .L39+8
 637 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 0028 002B     		cmp	r3, #0
 639 002a 0CBF     		ite	eq
 640 002c 0123     		moveq	r3, #1
 641 002e 0023     		movne	r3, #0
 642 0030 DBB2     		uxtb	r3, r3
 643 0032 1846     		mov	r0, r3
 644 0034 FFF7FEFF 		bl	setRightDir
 191:.\main.c      ****         right = -right;
 645              		.loc 1 191 0
 646 0038 3B68     		ldr	r3, [r7]
 647 003a 3B60     		str	r3, [r7]
 648 003c 7B68     		ldr	r3, [r7, #4]
 649 003e 83F00043 		eor	r3, r3, #-2147483648
 650 0042 7B60     		str	r3, [r7, #4]
 651 0044 04E0     		b	.L31
 652              	.L37:
 192:.\main.c      ****     }
 193:.\main.c      ****     else setRightDir(direction);
 653              		.loc 1 193 0
 654 0046 284B     		ldr	r3, .L39+8
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 16


 655 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656 004a 1846     		mov	r0, r3
 657 004c FFF7FEFF 		bl	setRightDir
 658              	.L31:
 194:.\main.c      ****     
 195:.\main.c      ****     if(left < 0.0)
 659              		.loc 1 195 0
 660 0050 D7E90201 		ldrd	r0, [r7, #8]
 661 0054 4FF00002 		mov	r2, #0
 662 0058 4FF00003 		mov	r3, #0
 663 005c FFF7FEFF 		bl	__aeabi_dcmplt
 664 0060 0346     		mov	r3, r0
 665 0062 002B     		cmp	r3, #0
 666 0064 10D0     		beq	.L38
 196:.\main.c      ****     {
 197:.\main.c      ****        // char mes[16];
 198:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 199:.\main.c      ****         //UART_PutString(mes);
 200:.\main.c      ****         setLeftDir(!direction);
 667              		.loc 1 200 0
 668 0066 204B     		ldr	r3, .L39+8
 669 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 670 006a 002B     		cmp	r3, #0
 671 006c 0CBF     		ite	eq
 672 006e 0123     		moveq	r3, #1
 673 0070 0023     		movne	r3, #0
 674 0072 DBB2     		uxtb	r3, r3
 675 0074 1846     		mov	r0, r3
 676 0076 FFF7FEFF 		bl	setLeftDir
 201:.\main.c      ****         left = -left;
 677              		.loc 1 201 0
 678 007a BB68     		ldr	r3, [r7, #8]
 679 007c BB60     		str	r3, [r7, #8]
 680 007e FB68     		ldr	r3, [r7, #12]
 681 0080 83F00043 		eor	r3, r3, #-2147483648
 682 0084 FB60     		str	r3, [r7, #12]
 683 0086 04E0     		b	.L34
 684              	.L38:
 202:.\main.c      ****     }
 203:.\main.c      ****     else setLeftDir(direction);
 685              		.loc 1 203 0
 686 0088 174B     		ldr	r3, .L39+8
 687 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 688 008c 1846     		mov	r0, r3
 689 008e FFF7FEFF 		bl	setLeftDir
 690              	.L34:
 204:.\main.c      ****     
 205:.\main.c      ****     int16 countsLeft = left*QUAD_RATIO;
 691              		.loc 1 205 0
 692 0092 D7E90201 		ldrd	r0, [r7, #8]
 693 0096 12A3     		adr	r3, .L39
 694 0098 D3E90023 		ldrd	r2, [r3]
 695 009c FFF7FEFF 		bl	__aeabi_dmul
 696 00a0 0246     		mov	r2, r0
 697 00a2 0B46     		mov	r3, r1
 698 00a4 1046     		mov	r0, r2
 699 00a6 1946     		mov	r1, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 17


 700 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 701 00ac 0346     		mov	r3, r0
 702 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 206:.\main.c      ****     int16 countsRight = right*QUAD_RATIO;
 703              		.loc 1 206 0
 704 00b0 D7E90001 		ldrd	r0, [r7]
 705 00b4 0AA3     		adr	r3, .L39
 706 00b6 D3E90023 		ldrd	r2, [r3]
 707 00ba FFF7FEFF 		bl	__aeabi_dmul
 708 00be 0246     		mov	r2, r0
 709 00c0 0B46     		mov	r3, r1
 710 00c2 1046     		mov	r0, r2
 711 00c4 1946     		mov	r1, r3
 712 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 713 00ca 0346     		mov	r3, r0
 714 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 207:.\main.c      ****     
 208:.\main.c      ****     leftSpeedLimit = countsRight;
 715              		.loc 1 208 0
 716 00ce 074A     		ldr	r2, .L39+12
 717 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 718 00d2 1380     		strh	r3, [r2]	@ movhi
 209:.\main.c      ****     rightSpeedLimit = countsLeft;
 719              		.loc 1 209 0
 720 00d4 064A     		ldr	r2, .L39+16
 721 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 722 00d8 1380     		strh	r3, [r2]	@ movhi
 210:.\main.c      **** }
 723              		.loc 1 210 0
 724 00da 1837     		adds	r7, r7, #24
 725              		.cfi_def_cfa_offset 8
 726 00dc BD46     		mov	sp, r7
 727              		.cfi_def_cfa_register 13
 728              		@ sp needed
 729 00de 80BD     		pop	{r7, pc}
 730              	.L40:
 731              		.align	3
 732              	.L39:
 733 00e0 969526A5 		.word	-1524197994
 734 00e4 A0DBEF3F 		.word	1072683936
 735 00e8 00000000 		.word	direction
 736 00ec 00000000 		.word	leftSpeedLimit
 737 00f0 00000000 		.word	rightSpeedLimit
 738              		.cfi_endproc
 739              	.LFE67:
 740              		.size	setSpeed, .-setSpeed
 741 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 742              		.align	2
 743              		.global	brakeLeft
 744              		.thumb
 745              		.thumb_func
 746              		.type	brakeLeft, %function
 747              	brakeLeft:
 748              	.LFB68:
 211:.\main.c      **** 
 212:.\main.c      **** void brakeLeft()
 213:.\main.c      **** {
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 18


 749              		.loc 1 213 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753 0000 80B5     		push	{r7, lr}
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 00AF     		add	r7, sp, #0
 758              		.cfi_def_cfa_register 7
 214:.\main.c      ****     PWM_1_WriteCompare(0);
 759              		.loc 1 214 0
 760 0004 0020     		movs	r0, #0
 761 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 215:.\main.c      ****     left_duty_cycle = 0;
 762              		.loc 1 215 0
 763 000a 024B     		ldr	r3, .L42
 764 000c 0022     		movs	r2, #0
 765 000e 1A80     		strh	r2, [r3]	@ movhi
 216:.\main.c      **** }
 766              		.loc 1 216 0
 767 0010 80BD     		pop	{r7, pc}
 768              	.L43:
 769 0012 00BF     		.align	2
 770              	.L42:
 771 0014 00000000 		.word	left_duty_cycle
 772              		.cfi_endproc
 773              	.LFE68:
 774              		.size	brakeLeft, .-brakeLeft
 775              		.section	.text.brakeRight,"ax",%progbits
 776              		.align	2
 777              		.global	brakeRight
 778              		.thumb
 779              		.thumb_func
 780              		.type	brakeRight, %function
 781              	brakeRight:
 782              	.LFB69:
 217:.\main.c      **** 
 218:.\main.c      **** void brakeRight()
 219:.\main.c      **** {
 783              		.loc 1 219 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787 0000 80B5     		push	{r7, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 00AF     		add	r7, sp, #0
 792              		.cfi_def_cfa_register 7
 220:.\main.c      ****      PWM_2_WriteCompare(0);
 793              		.loc 1 220 0
 794 0004 0020     		movs	r0, #0
 795 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 221:.\main.c      ****      right_duty_cycle = 0;
 796              		.loc 1 221 0
 797 000a 024B     		ldr	r3, .L45
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 19


 798 000c 0022     		movs	r2, #0
 799 000e 1A80     		strh	r2, [r3]	@ movhi
 222:.\main.c      **** }
 800              		.loc 1 222 0
 801 0010 80BD     		pop	{r7, pc}
 802              	.L46:
 803 0012 00BF     		.align	2
 804              	.L45:
 805 0014 00000000 		.word	right_duty_cycle
 806              		.cfi_endproc
 807              	.LFE69:
 808              		.size	brakeRight, .-brakeRight
 809              		.section	.text.brakeMotor,"ax",%progbits
 810              		.align	2
 811              		.global	brakeMotor
 812              		.thumb
 813              		.thumb_func
 814              		.type	brakeMotor, %function
 815              	brakeMotor:
 816              	.LFB70:
 223:.\main.c      **** 
 224:.\main.c      **** void brakeMotor(){
 817              		.loc 1 224 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 1, uses_anonymous_args = 0
 821 0000 80B5     		push	{r7, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 00AF     		add	r7, sp, #0
 826              		.cfi_def_cfa_register 7
 225:.\main.c      ****     setSpeed(0, 0);
 827              		.loc 1 225 0
 828 0004 4FF00000 		mov	r0, #0
 829 0008 4FF00001 		mov	r1, #0
 830 000c 4FF00002 		mov	r2, #0
 831 0010 4FF00003 		mov	r3, #0
 832 0014 FFF7FEFF 		bl	setSpeed
 226:.\main.c      ****     brakeLeft();
 833              		.loc 1 226 0
 834 0018 FFF7FEFF 		bl	brakeLeft
 227:.\main.c      ****     brakeRight();
 835              		.loc 1 227 0
 836 001c FFF7FEFF 		bl	brakeRight
 228:.\main.c      **** }
 837              		.loc 1 228 0
 838 0020 80BD     		pop	{r7, pc}
 839              		.cfi_endproc
 840              	.LFE70:
 841              		.size	brakeMotor, .-brakeMotor
 842 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 843              		.align	2
 844              		.global	driveForwards
 845              		.thumb
 846              		.thumb_func
 847              		.type	driveForwards, %function
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 20


 848              	driveForwards:
 849              	.LFB71:
 229:.\main.c      **** 
 230:.\main.c      **** 
 231:.\main.c      **** void driveForwards()
 232:.\main.c      **** {
 850              		.loc 1 232 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 00AF     		add	r7, sp, #0
 859              		.cfi_def_cfa_register 7
 233:.\main.c      ****     setSpeed(speed, speed);
 860              		.loc 1 233 0
 861 0004 044B     		ldr	r3, .L49
 862 0006 D3E90001 		ldrd	r0, [r3]
 863 000a 034B     		ldr	r3, .L49
 864 000c D3E90023 		ldrd	r2, [r3]
 865 0010 FFF7FEFF 		bl	setSpeed
 234:.\main.c      **** }
 866              		.loc 1 234 0
 867 0014 80BD     		pop	{r7, pc}
 868              	.L50:
 869 0016 00BF     		.align	2
 870              	.L49:
 871 0018 00000000 		.word	speed
 872              		.cfi_endproc
 873              	.LFE71:
 874              		.size	driveForwards, .-driveForwards
 875              		.global	__aeabi_dadd
 876              		.section	.text.turnRight,"ax",%progbits
 877              		.align	2
 878              		.global	turnRight
 879              		.thumb
 880              		.thumb_func
 881              		.type	turnRight, %function
 882              	turnRight:
 883              	.LFB72:
 235:.\main.c      **** 
 236:.\main.c      **** void turnRight()
 237:.\main.c      **** {
 884              		.loc 1 237 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 80B5     		push	{r7, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 238:.\main.c      ****     setSpeed(0,speed*2.0);
 894              		.loc 1 238 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 21


 895 0004 074B     		ldr	r3, .L52
 896 0006 D3E90023 		ldrd	r2, [r3]
 897 000a 1046     		mov	r0, r2
 898 000c 1946     		mov	r1, r3
 899 000e FFF7FEFF 		bl	__aeabi_dadd
 900 0012 0246     		mov	r2, r0
 901 0014 0B46     		mov	r3, r1
 902 0016 4FF00000 		mov	r0, #0
 903 001a 4FF00001 		mov	r1, #0
 904 001e FFF7FEFF 		bl	setSpeed
 239:.\main.c      **** }
 905              		.loc 1 239 0
 906 0022 80BD     		pop	{r7, pc}
 907              	.L53:
 908              		.align	2
 909              	.L52:
 910 0024 00000000 		.word	speed
 911              		.cfi_endproc
 912              	.LFE72:
 913              		.size	turnRight, .-turnRight
 914              		.section	.text.turnLeft,"ax",%progbits
 915              		.align	2
 916              		.global	turnLeft
 917              		.thumb
 918              		.thumb_func
 919              		.type	turnLeft, %function
 920              	turnLeft:
 921              	.LFB73:
 240:.\main.c      **** 
 241:.\main.c      **** void turnLeft()
 242:.\main.c      **** {
 922              		.loc 1 242 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 1, uses_anonymous_args = 0
 926 0000 80B5     		push	{r7, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
 243:.\main.c      ****     setSpeed(speed*2.0,0);
 932              		.loc 1 243 0
 933 0004 084B     		ldr	r3, .L55
 934 0006 D3E90023 		ldrd	r2, [r3]
 935 000a 1046     		mov	r0, r2
 936 000c 1946     		mov	r1, r3
 937 000e FFF7FEFF 		bl	__aeabi_dadd
 938 0012 0246     		mov	r2, r0
 939 0014 0B46     		mov	r3, r1
 940 0016 1046     		mov	r0, r2
 941 0018 1946     		mov	r1, r3
 942 001a 4FF00002 		mov	r2, #0
 943 001e 4FF00003 		mov	r3, #0
 944 0022 FFF7FEFF 		bl	setSpeed
 244:.\main.c      **** }
 945              		.loc 1 244 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 22


 946 0026 80BD     		pop	{r7, pc}
 947              	.L56:
 948              		.align	2
 949              	.L55:
 950 0028 00000000 		.word	speed
 951              		.cfi_endproc
 952              	.LFE73:
 953              		.size	turnLeft, .-turnLeft
 954              		.section	.text.initTurnLeft,"ax",%progbits
 955              		.align	2
 956              		.global	initTurnLeft
 957              		.thumb
 958              		.thumb_func
 959              		.type	initTurnLeft, %function
 960              	initTurnLeft:
 961              	.LFB74:
 245:.\main.c      **** 
 246:.\main.c      **** void initTurnLeft(){
 962              		.loc 1 246 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 00AF     		add	r7, sp, #0
 971              		.cfi_def_cfa_register 7
 247:.\main.c      ****     Timer_2_Stop();
 972              		.loc 1 247 0
 973 0004 FFF7FEFF 		bl	Timer_2_Stop
 248:.\main.c      ****     prev_movement_state = movement_state;
 974              		.loc 1 248 0
 975 0008 084B     		ldr	r3, .L58
 976 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 977 000c 084B     		ldr	r3, .L58+4
 978 000e 1A70     		strb	r2, [r3]
 249:.\main.c      ****     movement_state = LTURN;
 979              		.loc 1 249 0
 980 0010 064B     		ldr	r3, .L58
 981 0012 0122     		movs	r2, #1
 982 0014 1A70     		strb	r2, [r3]
 250:.\main.c      ****     brakeLeft();
 983              		.loc 1 250 0
 984 0016 FFF7FEFF 		bl	brakeLeft
 251:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 985              		.loc 1 251 0
 986 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 987 001e 0346     		mov	r3, r0
 988 0020 1A46     		mov	r2, r3
 989 0022 044B     		ldr	r3, .L58+8
 990 0024 1A80     		strh	r2, [r3]	@ movhi
 252:.\main.c      ****     Timer_2_Start();
 991              		.loc 1 252 0
 992 0026 FFF7FEFF 		bl	Timer_2_Start
 253:.\main.c      **** }
 993              		.loc 1 253 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 23


 994 002a 80BD     		pop	{r7, pc}
 995              	.L59:
 996              		.align	2
 997              	.L58:
 998 002c 00000000 		.word	movement_state
 999 0030 00000000 		.word	prev_movement_state
 1000 0034 00000000 		.word	start_turn_count
 1001              		.cfi_endproc
 1002              	.LFE74:
 1003              		.size	initTurnLeft, .-initTurnLeft
 1004              		.section	.text.initTurnRight,"ax",%progbits
 1005              		.align	2
 1006              		.global	initTurnRight
 1007              		.thumb
 1008              		.thumb_func
 1009              		.type	initTurnRight, %function
 1010              	initTurnRight:
 1011              	.LFB75:
 254:.\main.c      **** 
 255:.\main.c      **** void initTurnRight(){
 1012              		.loc 1 255 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 1, uses_anonymous_args = 0
 1016 0000 80B5     		push	{r7, lr}
 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 7, -8
 1019              		.cfi_offset 14, -4
 1020 0002 00AF     		add	r7, sp, #0
 1021              		.cfi_def_cfa_register 7
 256:.\main.c      ****     Timer_2_Stop();
 1022              		.loc 1 256 0
 1023 0004 FFF7FEFF 		bl	Timer_2_Stop
 257:.\main.c      ****     prev_movement_state = movement_state;
 1024              		.loc 1 257 0
 1025 0008 084B     		ldr	r3, .L61
 1026 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1027 000c 084B     		ldr	r3, .L61+4
 1028 000e 1A70     		strb	r2, [r3]
 258:.\main.c      ****     movement_state = RTURN;
 1029              		.loc 1 258 0
 1030 0010 064B     		ldr	r3, .L61
 1031 0012 0222     		movs	r2, #2
 1032 0014 1A70     		strb	r2, [r3]
 259:.\main.c      ****     brakeRight();
 1033              		.loc 1 259 0
 1034 0016 FFF7FEFF 		bl	brakeRight
 260:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1035              		.loc 1 260 0
 1036 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1037 001e 0346     		mov	r3, r0
 1038 0020 1A46     		mov	r2, r3
 1039 0022 044B     		ldr	r3, .L61+8
 1040 0024 1A80     		strh	r2, [r3]	@ movhi
 261:.\main.c      ****     Timer_2_Start();
 1041              		.loc 1 261 0
 1042 0026 FFF7FEFF 		bl	Timer_2_Start
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 24


 262:.\main.c      **** }
 1043              		.loc 1 262 0
 1044 002a 80BD     		pop	{r7, pc}
 1045              	.L62:
 1046              		.align	2
 1047              	.L61:
 1048 002c 00000000 		.word	movement_state
 1049 0030 00000000 		.word	prev_movement_state
 1050 0034 00000000 		.word	start_turn_count
 1051              		.cfi_endproc
 1052              	.LFE75:
 1053              		.size	initTurnRight, .-initTurnRight
 1054              		.section	.text.initForward,"ax",%progbits
 1055              		.align	2
 1056              		.global	initForward
 1057              		.thumb
 1058              		.thumb_func
 1059              		.type	initForward, %function
 1060              	initForward:
 1061              	.LFB76:
 263:.\main.c      **** 
 264:.\main.c      **** void initForward(){
 1062              		.loc 1 264 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 1, uses_anonymous_args = 0
 1066 0000 80B5     		push	{r7, lr}
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 7, -8
 1069              		.cfi_offset 14, -4
 1070 0002 00AF     		add	r7, sp, #0
 1071              		.cfi_def_cfa_register 7
 265:.\main.c      ****     brakeMotor();
 1072              		.loc 1 265 0
 1073 0004 FFF7FEFF 		bl	brakeMotor
 266:.\main.c      ****     movement_state = DRIVE;
 1074              		.loc 1 266 0
 1075 0008 014B     		ldr	r3, .L64
 1076 000a 0022     		movs	r2, #0
 1077 000c 1A70     		strb	r2, [r3]
 267:.\main.c      **** }
 1078              		.loc 1 267 0
 1079 000e 80BD     		pop	{r7, pc}
 1080              	.L65:
 1081              		.align	2
 1082              	.L64:
 1083 0010 00000000 		.word	movement_state
 1084              		.cfi_endproc
 1085              	.LFE76:
 1086              		.size	initForward, .-initForward
 1087              		.section	.text.initBrake,"ax",%progbits
 1088              		.align	2
 1089              		.global	initBrake
 1090              		.thumb
 1091              		.thumb_func
 1092              		.type	initBrake, %function
 1093              	initBrake:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 25


 1094              	.LFB77:
 268:.\main.c      **** 
 269:.\main.c      **** void initBrake(){
 1095              		.loc 1 269 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099              		@ link register save eliminated.
 1100 0000 80B4     		push	{r7}
 1101              		.cfi_def_cfa_offset 4
 1102              		.cfi_offset 7, -4
 1103 0002 00AF     		add	r7, sp, #0
 1104              		.cfi_def_cfa_register 7
 270:.\main.c      ****     movement_state = STOPPED;
 1105              		.loc 1 270 0
 1106 0004 034B     		ldr	r3, .L67
 1107 0006 0322     		movs	r2, #3
 1108 0008 1A70     		strb	r2, [r3]
 271:.\main.c      **** }
 1109              		.loc 1 271 0
 1110 000a BD46     		mov	sp, r7
 1111              		.cfi_def_cfa_register 13
 1112              		@ sp needed
 1113 000c 5DF8047B 		ldr	r7, [sp], #4
 1114              		.cfi_restore 7
 1115              		.cfi_def_cfa_offset 0
 1116 0010 7047     		bx	lr
 1117              	.L68:
 1118 0012 00BF     		.align	2
 1119              	.L67:
 1120 0014 00000000 		.word	movement_state
 1121              		.cfi_endproc
 1122              	.LFE77:
 1123              		.size	initBrake, .-initBrake
 1124              		.section	.text.initTrack,"ax",%progbits
 1125              		.align	2
 1126              		.global	initTrack
 1127              		.thumb
 1128              		.thumb_func
 1129              		.type	initTrack, %function
 1130              	initTrack:
 1131              	.LFB78:
 272:.\main.c      **** 
 273:.\main.c      **** void initTrack()
 274:.\main.c      **** {
 1132              		.loc 1 274 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 1, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 1137 0000 80B4     		push	{r7}
 1138              		.cfi_def_cfa_offset 4
 1139              		.cfi_offset 7, -4
 1140 0002 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING;
 1142              		.loc 1 275 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 26


 1143 0004 034B     		ldr	r3, .L70
 1144 0006 0422     		movs	r2, #4
 1145 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1146              		.loc 1 276 0
 1147 000a BD46     		mov	sp, r7
 1148              		.cfi_def_cfa_register 13
 1149              		@ sp needed
 1150 000c 5DF8047B 		ldr	r7, [sp], #4
 1151              		.cfi_restore 7
 1152              		.cfi_def_cfa_offset 0
 1153 0010 7047     		bx	lr
 1154              	.L71:
 1155 0012 00BF     		.align	2
 1156              	.L70:
 1157 0014 00000000 		.word	movement_state
 1158              		.cfi_endproc
 1159              	.LFE78:
 1160              		.size	initTrack, .-initTrack
 1161              		.section	.text.initTrackU,"ax",%progbits
 1162              		.align	2
 1163              		.global	initTrackU
 1164              		.thumb
 1165              		.thumb_func
 1166              		.type	initTrackU, %function
 1167              	initTrackU:
 1168              	.LFB79:
 277:.\main.c      **** 
 278:.\main.c      **** void initTrackU(){
 1169              		.loc 1 278 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 1174 0000 80B4     		push	{r7}
 1175              		.cfi_def_cfa_offset 4
 1176              		.cfi_offset 7, -4
 1177 0002 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 279:.\main.c      ****     movement_state = TRACKING_U;
 1179              		.loc 1 279 0
 1180 0004 034B     		ldr	r3, .L73
 1181 0006 0522     		movs	r2, #5
 1182 0008 1A70     		strb	r2, [r3]
 280:.\main.c      **** }
 1183              		.loc 1 280 0
 1184 000a BD46     		mov	sp, r7
 1185              		.cfi_def_cfa_register 13
 1186              		@ sp needed
 1187 000c 5DF8047B 		ldr	r7, [sp], #4
 1188              		.cfi_restore 7
 1189              		.cfi_def_cfa_offset 0
 1190 0010 7047     		bx	lr
 1191              	.L74:
 1192 0012 00BF     		.align	2
 1193              	.L73:
 1194 0014 00000000 		.word	movement_state
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 27


 1195              		.cfi_endproc
 1196              	.LFE79:
 1197              		.size	initTrackU, .-initTrackU
 1198              		.section	.text.inittrackLineZ,"ax",%progbits
 1199              		.align	2
 1200              		.global	inittrackLineZ
 1201              		.thumb
 1202              		.thumb_func
 1203              		.type	inittrackLineZ, %function
 1204              	inittrackLineZ:
 1205              	.LFB80:
 281:.\main.c      **** 
 282:.\main.c      **** void inittrackLineZ(){
 1206              		.loc 1 282 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 0000 80B4     		push	{r7}
 1212              		.cfi_def_cfa_offset 4
 1213              		.cfi_offset 7, -4
 1214 0002 00AF     		add	r7, sp, #0
 1215              		.cfi_def_cfa_register 7
 283:.\main.c      ****     movement_state = TRACKING_SOFT;
 1216              		.loc 1 283 0
 1217 0004 034B     		ldr	r3, .L76
 1218 0006 0622     		movs	r2, #6
 1219 0008 1A70     		strb	r2, [r3]
 284:.\main.c      **** }
 1220              		.loc 1 284 0
 1221 000a BD46     		mov	sp, r7
 1222              		.cfi_def_cfa_register 13
 1223              		@ sp needed
 1224 000c 5DF8047B 		ldr	r7, [sp], #4
 1225              		.cfi_restore 7
 1226              		.cfi_def_cfa_offset 0
 1227 0010 7047     		bx	lr
 1228              	.L77:
 1229 0012 00BF     		.align	2
 1230              	.L76:
 1231 0014 00000000 		.word	movement_state
 1232              		.cfi_endproc
 1233              	.LFE80:
 1234              		.size	inittrackLineZ, .-inittrackLineZ
 1235              		.section	.text.rxInt,"ax",%progbits
 1236              		.align	2
 1237              		.global	rxInt
 1238              		.thumb
 1239              		.thumb_func
 1240              		.type	rxInt, %function
 1241              	rxInt:
 1242              	.LFB81:
 285:.\main.c      **** 
 286:.\main.c      **** //Binary RF Data
 287:.\main.c      **** CY_ISR(rxInt){
 1243              		.loc 1 287 0
 1244              		.cfi_startproc
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 28


 1245              		@ args = 0, pretend = 0, frame = 8
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 B0B5     		push	{r4, r5, r7, lr}
 1248              		.cfi_def_cfa_offset 16
 1249              		.cfi_offset 4, -16
 1250              		.cfi_offset 5, -12
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 82B0     		sub	sp, sp, #8
 1254              		.cfi_def_cfa_offset 24
 1255 0004 00AF     		add	r7, sp, #0
 1256              		.cfi_def_cfa_register 7
 288:.\main.c      ****     char rf_char = UART_GetChar();
 1257              		.loc 1 288 0
 1258 0006 FFF7FEFF 		bl	UART_GetChar
 1259 000a 0346     		mov	r3, r0
 1260 000c FB71     		strb	r3, [r7, #7]
 289:.\main.c      ****     if(rf_char == SOP){
 1261              		.loc 1 289 0
 1262 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1263 0010 AA2B     		cmp	r3, #170
 1264 0012 1CD1     		bne	.L79
 290:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 291:.\main.c      ****             if(byteCount == 34)
 1265              		.loc 1 291 0
 1266 0014 1B4B     		ldr	r3, .L83
 1267 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 0018 222B     		cmp	r3, #34
 1269 001a 11D1     		bne	.L80
 292:.\main.c      ****             {
 293:.\main.c      ****                 system_state = buffer_state;
 1270              		.loc 1 293 0
 1271 001c 1A4B     		ldr	r3, .L83+4
 1272 001e 1B4A     		ldr	r2, .L83+8
 1273 0020 1568     		ldr	r5, [r2]	@ unaligned
 1274 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1275 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1276 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1277 0028 1D60     		str	r5, [r3]	@ unaligned
 1278 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1279 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1280 002e D960     		str	r1, [r3, #12]	@ unaligned
 1281 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1282 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1283 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1284 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1285 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1286 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1287 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1288 003e D961     		str	r1, [r3, #28]	@ unaligned
 1289              	.L80:
 294:.\main.c      ****             }
 295:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1290              		.loc 1 295 0
 1291 0040 104B     		ldr	r3, .L83
 1292 0042 0222     		movs	r2, #2
 1293 0044 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 29


 296:.\main.c      ****             flag_rx = 0;
 1294              		.loc 1 296 0
 1295 0046 124B     		ldr	r3, .L83+12
 1296 0048 0022     		movs	r2, #0
 1297 004a 1A70     		strb	r2, [r3]
 1298 004c 16E0     		b	.L78
 1299              	.L79:
 297:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 298:.\main.c      ****         }
 299:.\main.c      ****         else
 300:.\main.c      ****         {
 301:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1300              		.loc 1 301 0
 1301 004e 0D4B     		ldr	r3, .L83
 1302 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1303 0052 03F00103 		and	r3, r3, #1
 1304 0056 0F49     		ldr	r1, .L83+16
 1305 0058 FA79     		ldrb	r2, [r7, #7]
 1306 005a CA54     		strb	r2, [r1, r3]
 302:.\main.c      ****            
 303:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1307              		.loc 1 303 0
 1308 005c 094B     		ldr	r3, .L83
 1309 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0060 03F00103 		and	r3, r3, #1
 1311 0064 DBB2     		uxtb	r3, r3
 1312 0066 002B     		cmp	r3, #0
 1313 0068 02D0     		beq	.L82
 304:.\main.c      ****             {
 305:.\main.c      ****                 flag_rx = 1;
 1314              		.loc 1 305 0
 1315 006a 094B     		ldr	r3, .L83+12
 1316 006c 0122     		movs	r2, #1
 1317 006e 1A70     		strb	r2, [r3]
 1318              	.L82:
 306:.\main.c      ****             }
 307:.\main.c      ****             byteCount = (byteCount + 1);
 1319              		.loc 1 307 0
 1320 0070 044B     		ldr	r3, .L83
 1321 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1322 0074 0133     		adds	r3, r3, #1
 1323 0076 DAB2     		uxtb	r2, r3
 1324 0078 024B     		ldr	r3, .L83
 1325 007a 1A70     		strb	r2, [r3]
 1326              	.L78:
 308:.\main.c      ****         }
 309:.\main.c      **** }
 1327              		.loc 1 309 0
 1328 007c 0837     		adds	r7, r7, #8
 1329              		.cfi_def_cfa_offset 16
 1330 007e BD46     		mov	sp, r7
 1331              		.cfi_def_cfa_register 13
 1332              		@ sp needed
 1333 0080 B0BD     		pop	{r4, r5, r7, pc}
 1334              	.L84:
 1335 0082 00BF     		.align	2
 1336              	.L83:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 30


 1337 0084 00000000 		.word	byteCount
 1338 0088 00000000 		.word	system_state
 1339 008c 00000000 		.word	buffer_state
 1340 0090 00000000 		.word	flag_rx
 1341 0094 00000000 		.word	packet
 1342              		.cfi_endproc
 1343              	.LFE81:
 1344              		.size	rxInt, .-rxInt
 1345              		.section	.text.BT_rxInt,"ax",%progbits
 1346              		.align	2
 1347              		.global	BT_rxInt
 1348              		.thumb
 1349              		.thumb_func
 1350              		.type	BT_rxInt, %function
 1351              	BT_rxInt:
 1352              	.LFB82:
 310:.\main.c      **** 
 311:.\main.c      **** CY_ISR(BT_rxInt)
 312:.\main.c      **** {
 1353              		.loc 1 312 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 8
 1356              		@ frame_needed = 1, uses_anonymous_args = 0
 1357 0000 80B5     		push	{r7, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 7, -8
 1360              		.cfi_offset 14, -4
 1361 0002 82B0     		sub	sp, sp, #8
 1362              		.cfi_def_cfa_offset 16
 1363 0004 00AF     		add	r7, sp, #0
 1364              		.cfi_def_cfa_register 7
 313:.\main.c      ****     char rf_char = UART_GetChar();
 1365              		.loc 1 313 0
 1366 0006 FFF7FEFF 		bl	UART_GetChar
 1367 000a 0346     		mov	r3, r0
 1368 000c FB71     		strb	r3, [r7, #7]
 314:.\main.c      ****     switch(rf_char){
 1369              		.loc 1 314 0
 1370 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1371 0010 613B     		subs	r3, r3, #97
 1372 0012 192B     		cmp	r3, #25
 1373 0014 66D8     		bhi	.L85
 1374 0016 01A2     		adr	r2, .L88
 1375 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1376              		.p2align 2
 1377              	.L88:
 1378 001c 85000000 		.word	.L87+1
 1379 0020 E5000000 		.word	.L85+1
 1380 0024 E5000000 		.word	.L85+1
 1381 0028 A9000000 		.word	.L89+1
 1382 002c E5000000 		.word	.L85+1
 1383 0030 B5000000 		.word	.L90+1
 1384 0034 E5000000 		.word	.L85+1
 1385 0038 E5000000 		.word	.L85+1
 1386 003c E5000000 		.word	.L85+1
 1387 0040 E5000000 		.word	.L85+1
 1388 0044 E5000000 		.word	.L85+1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 31


 1389 0048 E5000000 		.word	.L85+1
 1390 004c E5000000 		.word	.L85+1
 1391 0050 E5000000 		.word	.L85+1
 1392 0054 E5000000 		.word	.L85+1
 1393 0058 E5000000 		.word	.L85+1
 1394 005c E5000000 		.word	.L85+1
 1395 0060 E5000000 		.word	.L85+1
 1396 0064 9D000000 		.word	.L91+1
 1397 0068 C1000000 		.word	.L92+1
 1398 006c CD000000 		.word	.L93+1
 1399 0070 E5000000 		.word	.L85+1
 1400 0074 91000000 		.word	.L94+1
 1401 0078 E5000000 		.word	.L85+1
 1402 007c E5000000 		.word	.L85+1
 1403 0080 D9000000 		.word	.L95+1
 1404              		.p2align 1
 1405              	.L87:
 315:.\main.c      ****     case 'a':
 316:.\main.c      ****         initTurnLeft();
 1406              		.loc 1 316 0
 1407 0084 FFF7FEFF 		bl	initTurnLeft
 317:.\main.c      ****         track_mode = NO_TRACK;
 1408              		.loc 1 317 0
 1409 0088 184B     		ldr	r3, .L96
 1410 008a 0022     		movs	r2, #0
 1411 008c 1A70     		strb	r2, [r3]
 318:.\main.c      ****         break;
 1412              		.loc 1 318 0
 1413 008e 29E0     		b	.L85
 1414              	.L94:
 319:.\main.c      ****     case 'w':
 320:.\main.c      ****         initForward();
 1415              		.loc 1 320 0
 1416 0090 FFF7FEFF 		bl	initForward
 321:.\main.c      ****         track_mode = NO_TRACK;
 1417              		.loc 1 321 0
 1418 0094 154B     		ldr	r3, .L96
 1419 0096 0022     		movs	r2, #0
 1420 0098 1A70     		strb	r2, [r3]
 322:.\main.c      ****         break;
 1421              		.loc 1 322 0
 1422 009a 23E0     		b	.L85
 1423              	.L91:
 323:.\main.c      ****     case 's': 
 324:.\main.c      ****         reverseDirection();
 1424              		.loc 1 324 0
 1425 009c FFF7FEFF 		bl	reverseDirection
 325:.\main.c      ****         track_mode = NO_TRACK;
 1426              		.loc 1 325 0
 1427 00a0 124B     		ldr	r3, .L96
 1428 00a2 0022     		movs	r2, #0
 1429 00a4 1A70     		strb	r2, [r3]
 326:.\main.c      ****         break;
 1430              		.loc 1 326 0
 1431 00a6 1DE0     		b	.L85
 1432              	.L89:
 327:.\main.c      ****     case 'd':
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 32


 328:.\main.c      ****         initTurnRight();
 1433              		.loc 1 328 0
 1434 00a8 FFF7FEFF 		bl	initTurnRight
 329:.\main.c      ****         track_mode = NO_TRACK;
 1435              		.loc 1 329 0
 1436 00ac 0F4B     		ldr	r3, .L96
 1437 00ae 0022     		movs	r2, #0
 1438 00b0 1A70     		strb	r2, [r3]
 330:.\main.c      ****         break;
 1439              		.loc 1 330 0
 1440 00b2 17E0     		b	.L85
 1441              	.L90:
 331:.\main.c      ****     case 'f':
 332:.\main.c      ****         initBrake();
 1442              		.loc 1 332 0
 1443 00b4 FFF7FEFF 		bl	initBrake
 333:.\main.c      ****         track_mode = NO_TRACK;
 1444              		.loc 1 333 0
 1445 00b8 0C4B     		ldr	r3, .L96
 1446 00ba 0022     		movs	r2, #0
 1447 00bc 1A70     		strb	r2, [r3]
 334:.\main.c      ****         break;
 1448              		.loc 1 334 0
 1449 00be 11E0     		b	.L85
 1450              	.L92:
 335:.\main.c      ****     case('t'):
 336:.\main.c      ****         track_mode = CURVE_TRACK;
 1451              		.loc 1 336 0
 1452 00c0 0A4B     		ldr	r3, .L96
 1453 00c2 0122     		movs	r2, #1
 1454 00c4 1A70     		strb	r2, [r3]
 337:.\main.c      ****         initTrack();
 1455              		.loc 1 337 0
 1456 00c6 FFF7FEFF 		bl	initTrack
 338:.\main.c      ****         break;
 1457              		.loc 1 338 0
 1458 00ca 0BE0     		b	.L85
 1459              	.L93:
 339:.\main.c      ****     case('u'):
 340:.\main.c      ****         initTrackU();
 1460              		.loc 1 340 0
 1461 00cc FFF7FEFF 		bl	initTrackU
 341:.\main.c      ****         track_mode = U_TRACK;
 1462              		.loc 1 341 0
 1463 00d0 064B     		ldr	r3, .L96
 1464 00d2 0222     		movs	r2, #2
 1465 00d4 1A70     		strb	r2, [r3]
 342:.\main.c      ****         break;
 1466              		.loc 1 342 0
 1467 00d6 05E0     		b	.L85
 1468              	.L95:
 343:.\main.c      ****     case('z'):
 344:.\main.c      ****         track_mode = SQUARE_TRACK;
 1469              		.loc 1 344 0
 1470 00d8 044B     		ldr	r3, .L96
 1471 00da 0322     		movs	r2, #3
 1472 00dc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 33


 345:.\main.c      ****         initTrack();
 1473              		.loc 1 345 0
 1474 00de FFF7FEFF 		bl	initTrack
 346:.\main.c      ****         break;
 1475              		.loc 1 346 0
 1476 00e2 00BF     		nop
 1477              	.L85:
 347:.\main.c      ****     }
 348:.\main.c      **** }
 1478              		.loc 1 348 0
 1479 00e4 0837     		adds	r7, r7, #8
 1480              		.cfi_def_cfa_offset 8
 1481 00e6 BD46     		mov	sp, r7
 1482              		.cfi_def_cfa_register 13
 1483              		@ sp needed
 1484 00e8 80BD     		pop	{r7, pc}
 1485              	.L97:
 1486 00ea 00BF     		.align	2
 1487              	.L96:
 1488 00ec 00000000 		.word	track_mode
 1489              		.cfi_endproc
 1490              	.LFE82:
 1491              		.size	BT_rxInt, .-BT_rxInt
 1492              		.section	.text.BT_txInt,"ax",%progbits
 1493              		.align	2
 1494              		.global	BT_txInt
 1495              		.thumb
 1496              		.thumb_func
 1497              		.type	BT_txInt, %function
 1498              	BT_txInt:
 1499              	.LFB83:
 349:.\main.c      **** 
 350:.\main.c      **** //BT
 351:.\main.c      **** CY_ISR(BT_txInt)
 352:.\main.c      **** {
 1500              		.loc 1 352 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 1, uses_anonymous_args = 0
 1504              		@ link register save eliminated.
 1505 0000 80B4     		push	{r7}
 1506              		.cfi_def_cfa_offset 4
 1507              		.cfi_offset 7, -4
 1508 0002 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
 353:.\main.c      ****     
 354:.\main.c      **** }
 1510              		.loc 1 354 0
 1511 0004 BD46     		mov	sp, r7
 1512              		.cfi_def_cfa_register 13
 1513              		@ sp needed
 1514 0006 5DF8047B 		ldr	r7, [sp], #4
 1515              		.cfi_restore 7
 1516              		.cfi_def_cfa_offset 0
 1517 000a 7047     		bx	lr
 1518              		.cfi_endproc
 1519              	.LFE83:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 34


 1520              		.size	BT_txInt, .-BT_txInt
 1521              		.section	.text.adc_isr,"ax",%progbits
 1522              		.align	2
 1523              		.global	adc_isr
 1524              		.thumb
 1525              		.thumb_func
 1526              		.type	adc_isr, %function
 1527              	adc_isr:
 1528              	.LFB84:
 355:.\main.c      **** 
 356:.\main.c      **** //ADC:
 357:.\main.c      **** CY_ISR (adc_isr)
 358:.\main.c      **** {
 1529              		.loc 1 358 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533 0000 80B5     		push	{r7, lr}
 1534              		.cfi_def_cfa_offset 8
 1535              		.cfi_offset 7, -8
 1536              		.cfi_offset 14, -4
 1537 0002 00AF     		add	r7, sp, #0
 1538              		.cfi_def_cfa_register 7
 359:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 360:.\main.c      ****     adc_result = ADC_GetResult16();
 1539              		.loc 1 360 0
 1540 0004 FFF7FEFF 		bl	ADC_GetResult16
 1541 0008 0346     		mov	r3, r0
 1542 000a 1A46     		mov	r2, r3
 1543 000c 044B     		ldr	r3, .L100
 1544 000e 1A80     		strh	r2, [r3]	@ movhi
 361:.\main.c      ****     flag_receive_ADC = 1;
 1545              		.loc 1 361 0
 1546 0010 044B     		ldr	r3, .L100+4
 1547 0012 0122     		movs	r2, #1
 1548 0014 1A70     		strb	r2, [r3]
 362:.\main.c      ****     flag_print_rf = 1;
 1549              		.loc 1 362 0
 1550 0016 044B     		ldr	r3, .L100+8
 1551 0018 0122     		movs	r2, #1
 1552 001a 1A70     		strb	r2, [r3]
 363:.\main.c      ****     //LED_Write(~LED_Read());
 364:.\main.c      **** }
 1553              		.loc 1 364 0
 1554 001c 80BD     		pop	{r7, pc}
 1555              	.L101:
 1556 001e 00BF     		.align	2
 1557              	.L100:
 1558 0020 00000000 		.word	adc_result
 1559 0024 00000000 		.word	flag_receive_ADC
 1560 0028 00000000 		.word	flag_print_rf
 1561              		.cfi_endproc
 1562              	.LFE84:
 1563              		.size	adc_isr, .-adc_isr
 1564              		.section	.text.isr_quad1,"ax",%progbits
 1565              		.align	2
 1566              		.global	isr_quad1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 35


 1567              		.thumb
 1568              		.thumb_func
 1569              		.type	isr_quad1, %function
 1570              	isr_quad1:
 1571              	.LFB85:
 365:.\main.c      **** 
 366:.\main.c      **** CY_ISR (isr_quad1)
 367:.\main.c      **** {
 1572              		.loc 1 367 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576 0000 80B5     		push	{r7, lr}
 1577              		.cfi_def_cfa_offset 8
 1578              		.cfi_offset 7, -8
 1579              		.cfi_offset 14, -4
 1580 0002 00AF     		add	r7, sp, #0
 1581              		.cfi_def_cfa_register 7
 368:.\main.c      ****     //LED_Write(~LED_Read());
 369:.\main.c      ****     last_quad_count1 = quad_count1;
 1582              		.loc 1 369 0
 1583 0004 244B     		ldr	r3, .L104
 1584 0006 1A88     		ldrh	r2, [r3]
 1585 0008 244B     		ldr	r3, .L104+4
 1586 000a 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****     last_quad_count2 = quad_count2;
 1587              		.loc 1 370 0
 1588 000c 244B     		ldr	r3, .L104+8
 1589 000e 1A88     		ldrh	r2, [r3]
 1590 0010 244B     		ldr	r3, .L104+12
 1591 0012 1A80     		strh	r2, [r3]	@ movhi
 371:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1592              		.loc 1 371 0
 1593 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1594 0018 0346     		mov	r3, r0
 1595 001a 1A46     		mov	r2, r3
 1596 001c 1E4B     		ldr	r3, .L104
 1597 001e 1A80     		strh	r2, [r3]	@ movhi
 372:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1598              		.loc 1 372 0
 1599 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1600 0024 0346     		mov	r3, r0
 1601 0026 1A46     		mov	r2, r3
 1602 0028 1D4B     		ldr	r3, .L104+8
 1603 002a 1A80     		strh	r2, [r3]	@ movhi
 373:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1604              		.loc 1 373 0
 1605 002c 1A4B     		ldr	r3, .L104
 1606 002e 1B88     		ldrh	r3, [r3]
 1607 0030 9AB2     		uxth	r2, r3
 1608 0032 1A4B     		ldr	r3, .L104+4
 1609 0034 1B88     		ldrh	r3, [r3]
 1610 0036 9BB2     		uxth	r3, r3
 1611 0038 D31A     		subs	r3, r2, r3
 1612 003a 9BB2     		uxth	r3, r3
 1613 003c 9AB2     		uxth	r2, r3
 1614 003e 1A4B     		ldr	r3, .L104+16
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 36


 1615 0040 1A80     		strh	r2, [r3]	@ movhi
 374:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1616              		.loc 1 374 0
 1617 0042 174B     		ldr	r3, .L104+8
 1618 0044 1B88     		ldrh	r3, [r3]
 1619 0046 9AB2     		uxth	r2, r3
 1620 0048 164B     		ldr	r3, .L104+12
 1621 004a 1B88     		ldrh	r3, [r3]
 1622 004c 9BB2     		uxth	r3, r3
 1623 004e D31A     		subs	r3, r2, r3
 1624 0050 9BB2     		uxth	r3, r3
 1625 0052 9AB2     		uxth	r2, r3
 1626 0054 154B     		ldr	r3, .L104+20
 1627 0056 1A80     		strh	r2, [r3]	@ movhi
 375:.\main.c      ****     
 376:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1628              		.loc 1 376 0
 1629 0058 0F4B     		ldr	r3, .L104
 1630 005a 1B88     		ldrh	r3, [r3]
 1631 005c 1BB2     		sxth	r3, r3
 1632 005e 40F6B832 		movw	r2, #3000
 1633 0062 9342     		cmp	r3, r2
 1634 0064 13DD     		ble	.L103
 1635              		.loc 1 376 0 is_stmt 0 discriminator 1
 1636 0066 124B     		ldr	r3, .L104+24
 1637 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 006a 012B     		cmp	r3, #1
 1639 006c 0FD0     		beq	.L103
 1640              		.loc 1 376 0 discriminator 2
 1641 006e 104B     		ldr	r3, .L104+24
 1642 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1643 0072 022B     		cmp	r3, #2
 1644 0074 0BD0     		beq	.L103
 377:.\main.c      ****     {
 378:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1645              		.loc 1 378 0 is_stmt 1
 1646 0076 0020     		movs	r0, #0
 1647 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 379:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1648              		.loc 1 379 0
 1649 007c 0020     		movs	r0, #0
 1650 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 380:.\main.c      ****         quad_count1 = 0;
 1651              		.loc 1 380 0
 1652 0082 054B     		ldr	r3, .L104
 1653 0084 0022     		movs	r2, #0
 1654 0086 1A80     		strh	r2, [r3]	@ movhi
 381:.\main.c      ****         quad_count2 = 0;
 1655              		.loc 1 381 0
 1656 0088 054B     		ldr	r3, .L104+8
 1657 008a 0022     		movs	r2, #0
 1658 008c 1A80     		strh	r2, [r3]	@ movhi
 1659              	.L103:
 382:.\main.c      ****     }
 383:.\main.c      **** 
 384:.\main.c      ****     flag_calc_wheelspeed = 1;
 1660              		.loc 1 384 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 37


 1661 008e 094B     		ldr	r3, .L104+28
 1662 0090 0122     		movs	r2, #1
 1663 0092 1A70     		strb	r2, [r3]
 385:.\main.c      **** }
 1664              		.loc 1 385 0
 1665 0094 80BD     		pop	{r7, pc}
 1666              	.L105:
 1667 0096 00BF     		.align	2
 1668              	.L104:
 1669 0098 00000000 		.word	quad_count1
 1670 009c 00000000 		.word	last_quad_count1
 1671 00a0 00000000 		.word	quad_count2
 1672 00a4 00000000 		.word	last_quad_count2
 1673 00a8 00000000 		.word	quad_diff1
 1674 00ac 00000000 		.word	quad_diff2
 1675 00b0 00000000 		.word	movement_state
 1676 00b4 00000000 		.word	flag_calc_wheelspeed
 1677              		.cfi_endproc
 1678              	.LFE85:
 1679              		.size	isr_quad1, .-isr_quad1
 1680              		.section	.text.isr_turn_timer,"ax",%progbits
 1681              		.align	2
 1682              		.global	isr_turn_timer
 1683              		.thumb
 1684              		.thumb_func
 1685              		.type	isr_turn_timer, %function
 1686              	isr_turn_timer:
 1687              	.LFB86:
 386:.\main.c      **** 
 387:.\main.c      **** CY_ISR(isr_turn_timer)
 388:.\main.c      **** {
 1688              		.loc 1 388 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 80B5     		push	{r7, lr}
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
 389:.\main.c      ****     if(movement_state == LTURN)
 1698              		.loc 1 389 0
 1699 0004 194B     		ldr	r3, .L110
 1700 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1701 0008 012B     		cmp	r3, #1
 1702 000a 15D1     		bne	.L107
 390:.\main.c      ****     {
 391:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1703              		.loc 1 391 0
 1704 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1705 0010 0346     		mov	r3, r0
 1706 0012 1A46     		mov	r2, r3
 1707 0014 164B     		ldr	r3, .L110+4
 1708 0016 1B88     		ldrh	r3, [r3]
 1709 0018 1BB2     		sxth	r3, r3
 1710 001a D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 38


 1711 001c 002B     		cmp	r3, #0
 1712 001e B8BF     		it	lt
 1713 0020 5B42     		rsblt	r3, r3, #0
 1714 0022 CF2B     		cmp	r3, #207
 1715 0024 21DD     		ble	.L106
 392:.\main.c      ****         {
 393:.\main.c      ****             //movement_state = STOPPED;
 394:.\main.c      ****             brakeMotor();
 1716              		.loc 1 394 0
 1717 0026 FFF7FEFF 		bl	brakeMotor
 395:.\main.c      ****             movement_state = prev_movement_state;
 1718              		.loc 1 395 0
 1719 002a 124B     		ldr	r3, .L110+8
 1720 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1721 002e 0F4B     		ldr	r3, .L110
 1722 0030 1A70     		strb	r2, [r3]
 396:.\main.c      ****             Timer_2_Stop();
 1723              		.loc 1 396 0
 1724 0032 FFF7FEFF 		bl	Timer_2_Stop
 1725 0036 18E0     		b	.L106
 1726              	.L107:
 397:.\main.c      ****         }
 398:.\main.c      ****     }
 399:.\main.c      ****     else if (movement_state == RTURN)
 1727              		.loc 1 399 0
 1728 0038 0C4B     		ldr	r3, .L110
 1729 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1730 003c 022B     		cmp	r3, #2
 1731 003e 14D1     		bne	.L106
 400:.\main.c      ****     {
 401:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1732              		.loc 1 401 0
 1733 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1734 0044 0346     		mov	r3, r0
 1735 0046 1A46     		mov	r2, r3
 1736 0048 094B     		ldr	r3, .L110+4
 1737 004a 1B88     		ldrh	r3, [r3]
 1738 004c 1BB2     		sxth	r3, r3
 1739 004e D31A     		subs	r3, r2, r3
 1740 0050 002B     		cmp	r3, #0
 1741 0052 B8BF     		it	lt
 1742 0054 5B42     		rsblt	r3, r3, #0
 1743 0056 CF2B     		cmp	r3, #207
 1744 0058 07DD     		ble	.L106
 402:.\main.c      ****         {
 403:.\main.c      ****             //movement_state = STOPPED;
 404:.\main.c      ****             brakeMotor();
 1745              		.loc 1 404 0
 1746 005a FFF7FEFF 		bl	brakeMotor
 405:.\main.c      ****             movement_state = prev_movement_state;
 1747              		.loc 1 405 0
 1748 005e 054B     		ldr	r3, .L110+8
 1749 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1750 0062 024B     		ldr	r3, .L110
 1751 0064 1A70     		strb	r2, [r3]
 406:.\main.c      ****             Timer_2_Stop();
 1752              		.loc 1 406 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 39


 1753 0066 FFF7FEFF 		bl	Timer_2_Stop
 1754              	.L106:
 407:.\main.c      ****         }
 408:.\main.c      ****     }
 409:.\main.c      **** }
 1755              		.loc 1 409 0
 1756 006a 80BD     		pop	{r7, pc}
 1757              	.L111:
 1758              		.align	2
 1759              	.L110:
 1760 006c 00000000 		.word	movement_state
 1761 0070 00000000 		.word	start_turn_count
 1762 0074 00000000 		.word	prev_movement_state
 1763              		.cfi_endproc
 1764              	.LFE86:
 1765              		.size	isr_turn_timer, .-isr_turn_timer
 1766              		.section	.text.Stop_on_line,"ax",%progbits
 1767              		.align	2
 1768              		.global	Stop_on_line
 1769              		.thumb
 1770              		.thumb_func
 1771              		.type	Stop_on_line, %function
 1772              	Stop_on_line:
 1773              	.LFB87:
 410:.\main.c      **** 
 411:.\main.c      **** 
 412:.\main.c      **** CY_ISR (Stop_on_line)
 413:.\main.c      **** {
 1774              		.loc 1 413 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 1, uses_anonymous_args = 0
 1778              		@ link register save eliminated.
 1779 0000 80B4     		push	{r7}
 1780              		.cfi_def_cfa_offset 4
 1781              		.cfi_offset 7, -4
 1782 0002 00AF     		add	r7, sp, #0
 1783              		.cfi_def_cfa_register 7
 414:.\main.c      ****     movement_state = STOPPED;
 1784              		.loc 1 414 0
 1785 0004 054B     		ldr	r3, .L114
 1786 0006 0322     		movs	r2, #3
 1787 0008 1A70     		strb	r2, [r3]
 415:.\main.c      ****     if(movement_state != DRIVE) return;
 1788              		.loc 1 415 0
 1789 000a 044B     		ldr	r3, .L114
 1790 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1791 000e 002B     		cmp	r3, #0
 1792 0010 00D0     		beq	.L112
 1793 0012 00BF     		nop
 1794              	.L112:
 416:.\main.c      ****     //initTurnLeft();
 417:.\main.c      **** }
 1795              		.loc 1 417 0
 1796 0014 BD46     		mov	sp, r7
 1797              		.cfi_def_cfa_register 13
 1798              		@ sp needed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 40


 1799 0016 5DF8047B 		ldr	r7, [sp], #4
 1800              		.cfi_restore 7
 1801              		.cfi_def_cfa_offset 0
 1802 001a 7047     		bx	lr
 1803              	.L115:
 1804              		.align	2
 1805              	.L114:
 1806 001c 00000000 		.word	movement_state
 1807              		.cfi_endproc
 1808              	.LFE87:
 1809              		.size	Stop_on_line, .-Stop_on_line
 1810              		.section	.rodata
 1811 000a 0000     		.align	2
 1812              	.LC1:
 1813 000c 53746172 		.ascii	"Starting robot!\015\012\000"
 1813      74696E67 
 1813      20726F62 
 1813      6F74210D 
 1813      0A00
 1814              		.section	.text.button,"ax",%progbits
 1815              		.align	2
 1816              		.global	button
 1817              		.thumb
 1818              		.thumb_func
 1819              		.type	button, %function
 1820              	button:
 1821              	.LFB88:
 418:.\main.c      **** 
 419:.\main.c      **** CY_ISR (button)
 420:.\main.c      **** {
 1822              		.loc 1 420 0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 1, uses_anonymous_args = 0
 1826 0000 80B5     		push	{r7, lr}
 1827              		.cfi_def_cfa_offset 8
 1828              		.cfi_offset 7, -8
 1829              		.cfi_offset 14, -4
 1830 0002 00AF     		add	r7, sp, #0
 1831              		.cfi_def_cfa_register 7
 421:.\main.c      ****     if(BT_ENABLED)
 422:.\main.c      ****     {
 423:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1832              		.loc 1 423 0
 1833 0004 0348     		ldr	r0, .L117
 1834 0006 FFF7FEFF 		bl	UART_PutString
 424:.\main.c      ****     }
 425:.\main.c      ****     movement_state = DRIVE;
 1835              		.loc 1 425 0
 1836 000a 034B     		ldr	r3, .L117+4
 1837 000c 0022     		movs	r2, #0
 1838 000e 1A70     		strb	r2, [r3]
 426:.\main.c      **** }
 1839              		.loc 1 426 0
 1840 0010 80BD     		pop	{r7, pc}
 1841              	.L118:
 1842 0012 00BF     		.align	2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 41


 1843              	.L117:
 1844 0014 0C000000 		.word	.LC1
 1845 0018 00000000 		.word	movement_state
 1846              		.cfi_endproc
 1847              	.LFE88:
 1848              		.size	button, .-button
 1849              		.section	.text.isr_adcTimer,"ax",%progbits
 1850              		.align	2
 1851              		.global	isr_adcTimer
 1852              		.thumb
 1853              		.thumb_func
 1854              		.type	isr_adcTimer, %function
 1855              	isr_adcTimer:
 1856              	.LFB89:
 427:.\main.c      **** 
 428:.\main.c      **** CY_ISR(isr_adcTimer)
 429:.\main.c      **** {
 1857              		.loc 1 429 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 1, uses_anonymous_args = 0
 1861 0000 80B5     		push	{r7, lr}
 1862              		.cfi_def_cfa_offset 8
 1863              		.cfi_offset 7, -8
 1864              		.cfi_offset 14, -4
 1865 0002 00AF     		add	r7, sp, #0
 1866              		.cfi_def_cfa_register 7
 430:.\main.c      ****     ADC_StartConvert();
 1867              		.loc 1 430 0
 1868 0004 FFF7FEFF 		bl	ADC_StartConvert
 431:.\main.c      **** }
 1869              		.loc 1 431 0
 1870 0008 80BD     		pop	{r7, pc}
 1871              		.cfi_endproc
 1872              	.LFE89:
 1873              		.size	isr_adcTimer, .-isr_adcTimer
 1874              		.global	__aeabi_i2d
 1875 000a 00BF     		.section	.text.Quad_Dec_response,"ax",%progbits
 1876              		.align	2
 1877              		.global	Quad_Dec_response
 1878              		.thumb
 1879              		.thumb_func
 1880              		.type	Quad_Dec_response, %function
 1881              	Quad_Dec_response:
 1882              	.LFB90:
 432:.\main.c      **** 
 433:.\main.c      **** void Quad_Dec_response()
 434:.\main.c      **** {
 1883              		.loc 1 434 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 32
 1886              		@ frame_needed = 1, uses_anonymous_args = 0
 1887 0000 B0B5     		push	{r4, r5, r7, lr}
 1888              		.cfi_def_cfa_offset 16
 1889              		.cfi_offset 4, -16
 1890              		.cfi_offset 5, -12
 1891              		.cfi_offset 7, -8
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 42


 1892              		.cfi_offset 14, -4
 1893 0002 88B0     		sub	sp, sp, #32
 1894              		.cfi_def_cfa_offset 48
 1895 0004 00AF     		add	r7, sp, #0
 1896              		.cfi_def_cfa_register 7
 435:.\main.c      ****     //Check if the flag has been set
 436:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1897              		.loc 1 436 0
 1898 0006 814B     		ldr	r3, .L128
 1899 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1900 000a 002B     		cmp	r3, #0
 1901 000c 00D1     		bne	.L121
 1902 000e FAE0     		b	.L120
 1903              	.L121:
 437:.\main.c      ****     flag_calc_wheelspeed = 0;
 1904              		.loc 1 437 0
 1905 0010 7E4B     		ldr	r3, .L128
 1906 0012 0022     		movs	r2, #0
 1907 0014 1A70     		strb	r2, [r3]
 438:.\main.c      ****     
 439:.\main.c      ****     //char wheel_1_str [64];
 440:.\main.c      ****     //char wheel_2_str [64];
 441:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 442:.\main.c      ****     //usbPutString(wheel_1_str);
 443:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 444:.\main.c      ****     
 445:.\main.c      ****     //usbPutString(wheel_2_str);
 446:.\main.c      ****     
 447:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1908              		.loc 1 447 0
 1909 0016 7E4B     		ldr	r3, .L128+4
 1910 0018 1B88     		ldrh	r3, [r3]	@ movhi
 1911 001a FB81     		strh	r3, [r7, #14]	@ movhi
 448:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1912              		.loc 1 448 0
 1913 001c 7D4B     		ldr	r3, .L128+8
 1914 001e 1B88     		ldrh	r3, [r3]	@ movhi
 1915 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 449:.\main.c      ****     double scalingLeft = 1;
 1916              		.loc 1 449 0
 1917 0022 4FF00002 		mov	r2, #0
 1918 0026 7C4B     		ldr	r3, .L128+12
 1919 0028 C7E90623 		strd	r2, [r7, #24]
 450:.\main.c      ****     double scalingRight = 1;
 1920              		.loc 1 450 0
 1921 002c 4FF00002 		mov	r2, #0
 1922 0030 794B     		ldr	r3, .L128+12
 1923 0032 C7E90423 		strd	r2, [r7, #16]
 451:.\main.c      ****     
 452:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 453:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 1924              		.loc 1 453 0
 1925 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 1926 003a 002B     		cmp	r3, #0
 1927 003c 0DD1     		bne	.L123
 1928              		.loc 1 453 0 is_stmt 0 discriminator 1
 1929 003e B7F90C30 		ldrsh	r3, [r7, #12]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 43


 1930 0042 002B     		cmp	r3, #0
 1931 0044 09D1     		bne	.L123
 454:.\main.c      ****        //leftSpeed = 3;
 455:.\main.c      ****         scalingLeft = 8;
 1932              		.loc 1 455 0 is_stmt 1
 1933 0046 4FF00002 		mov	r2, #0
 1934 004a 744B     		ldr	r3, .L128+16
 1935 004c C7E90623 		strd	r2, [r7, #24]
 456:.\main.c      ****         scalingRight = 8;
 1936              		.loc 1 456 0
 1937 0050 4FF00002 		mov	r2, #0
 1938 0054 714B     		ldr	r3, .L128+16
 1939 0056 C7E90423 		strd	r2, [r7, #16]
 1940              	.L123:
 457:.\main.c      ****     }
 458:.\main.c      **** 
 459:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1941              		.loc 1 459 0
 1942 005a 714B     		ldr	r3, .L128+20
 1943 005c 1B88     		ldrh	r3, [r3]
 1944 005e 1AB2     		sxth	r2, r3
 1945 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 1946 0064 002B     		cmp	r3, #0
 1947 0066 B8BF     		it	lt
 1948 0068 5B42     		rsblt	r3, r3, #0
 1949 006a D31A     		subs	r3, r2, r3
 1950 006c BB60     		str	r3, [r7, #8]
 460:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 1951              		.loc 1 460 0
 1952 006e BB68     		ldr	r3, [r7, #8]
 1953 0070 83EAE372 		eor	r2, r3, r3, asr #31
 1954 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 1955 0078 BB68     		ldr	r3, [r7, #8]
 1956 007a 92FBF3F3 		sdiv	r3, r2, r3
 1957 007e 1846     		mov	r0, r3
 1958 0080 FFF7FEFF 		bl	__aeabi_i2d
 1959 0084 0446     		mov	r4, r0
 1960 0086 0D46     		mov	r5, r1
 1961 0088 BB68     		ldr	r3, [r7, #8]
 1962 008a 002B     		cmp	r3, #0
 1963 008c B8BF     		it	lt
 1964 008e 5B42     		rsblt	r3, r3, #0
 1965 0090 1846     		mov	r0, r3
 1966 0092 FFF7FEFF 		bl	__aeabi_i2d
 1967 0096 0246     		mov	r2, r0
 1968 0098 0B46     		mov	r3, r1
 1969 009a 1046     		mov	r0, r2
 1970 009c 1946     		mov	r1, r3
 1971 009e FFF7FEFF 		bl	sqrt
 1972 00a2 0246     		mov	r2, r0
 1973 00a4 0B46     		mov	r3, r1
 1974 00a6 2046     		mov	r0, r4
 1975 00a8 2946     		mov	r1, r5
 1976 00aa FFF7FEFF 		bl	__aeabi_dmul
 1977 00ae 0246     		mov	r2, r0
 1978 00b0 0B46     		mov	r3, r1
 1979 00b2 1046     		mov	r0, r2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 44


 1980 00b4 1946     		mov	r1, r3
 1981 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 1982 00ba 0346     		mov	r3, r0
 1983 00bc 7B60     		str	r3, [r7, #4]
 461:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 1984              		.loc 1 461 0
 1985 00be 594B     		ldr	r3, .L128+24
 1986 00c0 1B88     		ldrh	r3, [r3]
 1987 00c2 1BB2     		sxth	r3, r3
 1988 00c4 1846     		mov	r0, r3
 1989 00c6 FFF7FEFF 		bl	__aeabi_i2d
 1990 00ca 0446     		mov	r4, r0
 1991 00cc 0D46     		mov	r5, r1
 1992 00ce 7868     		ldr	r0, [r7, #4]
 1993 00d0 FFF7FEFF 		bl	__aeabi_i2d
 1994 00d4 0246     		mov	r2, r0
 1995 00d6 0B46     		mov	r3, r1
 1996 00d8 1046     		mov	r0, r2
 1997 00da 1946     		mov	r1, r3
 1998 00dc D7E90623 		ldrd	r2, [r7, #24]
 1999 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2000 00e4 0246     		mov	r2, r0
 2001 00e6 0B46     		mov	r3, r1
 2002 00e8 2046     		mov	r0, r4
 2003 00ea 2946     		mov	r1, r5
 2004 00ec FFF7FEFF 		bl	__aeabi_dadd
 2005 00f0 0246     		mov	r2, r0
 2006 00f2 0B46     		mov	r3, r1
 2007 00f4 1046     		mov	r0, r2
 2008 00f6 1946     		mov	r1, r3
 2009 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2010 00fc 0346     		mov	r3, r0
 2011 00fe 9AB2     		uxth	r2, r3
 2012 0100 484B     		ldr	r3, .L128+24
 2013 0102 1A80     		strh	r2, [r3]	@ movhi
 462:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2014              		.loc 1 462 0
 2015 0104 484B     		ldr	r3, .L128+28
 2016 0106 1B88     		ldrh	r3, [r3]
 2017 0108 1AB2     		sxth	r2, r3
 2018 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2019 010e 002B     		cmp	r3, #0
 2020 0110 B8BF     		it	lt
 2021 0112 5B42     		rsblt	r3, r3, #0
 2022 0114 D31A     		subs	r3, r2, r3
 2023 0116 BB60     		str	r3, [r7, #8]
 463:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2024              		.loc 1 463 0
 2025 0118 BB68     		ldr	r3, [r7, #8]
 2026 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2027 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2028 0122 BB68     		ldr	r3, [r7, #8]
 2029 0124 92FBF3F3 		sdiv	r3, r2, r3
 2030 0128 1846     		mov	r0, r3
 2031 012a FFF7FEFF 		bl	__aeabi_i2d
 2032 012e 0446     		mov	r4, r0
 2033 0130 0D46     		mov	r5, r1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 45


 2034 0132 BB68     		ldr	r3, [r7, #8]
 2035 0134 002B     		cmp	r3, #0
 2036 0136 B8BF     		it	lt
 2037 0138 5B42     		rsblt	r3, r3, #0
 2038 013a 1846     		mov	r0, r3
 2039 013c FFF7FEFF 		bl	__aeabi_i2d
 2040 0140 0246     		mov	r2, r0
 2041 0142 0B46     		mov	r3, r1
 2042 0144 1046     		mov	r0, r2
 2043 0146 1946     		mov	r1, r3
 2044 0148 FFF7FEFF 		bl	sqrt
 2045 014c 0246     		mov	r2, r0
 2046 014e 0B46     		mov	r3, r1
 2047 0150 2046     		mov	r0, r4
 2048 0152 2946     		mov	r1, r5
 2049 0154 FFF7FEFF 		bl	__aeabi_dmul
 2050 0158 0246     		mov	r2, r0
 2051 015a 0B46     		mov	r3, r1
 2052 015c 1046     		mov	r0, r2
 2053 015e 1946     		mov	r1, r3
 2054 0160 FFF7FEFF 		bl	__aeabi_d2iz
 2055 0164 0346     		mov	r3, r0
 2056 0166 7B60     		str	r3, [r7, #4]
 464:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 2057              		.loc 1 464 0
 2058 0168 304B     		ldr	r3, .L128+32
 2059 016a 1B88     		ldrh	r3, [r3]
 2060 016c 1BB2     		sxth	r3, r3
 2061 016e 1846     		mov	r0, r3
 2062 0170 FFF7FEFF 		bl	__aeabi_i2d
 2063 0174 0446     		mov	r4, r0
 2064 0176 0D46     		mov	r5, r1
 2065 0178 7868     		ldr	r0, [r7, #4]
 2066 017a FFF7FEFF 		bl	__aeabi_i2d
 2067 017e 0246     		mov	r2, r0
 2068 0180 0B46     		mov	r3, r1
 2069 0182 1046     		mov	r0, r2
 2070 0184 1946     		mov	r1, r3
 2071 0186 D7E90423 		ldrd	r2, [r7, #16]
 2072 018a FFF7FEFF 		bl	__aeabi_dmul
 2073 018e 0246     		mov	r2, r0
 2074 0190 0B46     		mov	r3, r1
 2075 0192 2046     		mov	r0, r4
 2076 0194 2946     		mov	r1, r5
 2077 0196 FFF7FEFF 		bl	__aeabi_dadd
 2078 019a 0246     		mov	r2, r0
 2079 019c 0B46     		mov	r3, r1
 2080 019e 1046     		mov	r0, r2
 2081 01a0 1946     		mov	r1, r3
 2082 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 2083 01a6 0346     		mov	r3, r0
 2084 01a8 9AB2     		uxth	r2, r3
 2085 01aa 204B     		ldr	r3, .L128+32
 2086 01ac 1A80     		strh	r2, [r3]	@ movhi
 465:.\main.c      ****     
 466:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 2087              		.loc 1 466 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 46


 2088 01ae 1F4B     		ldr	r3, .L128+32
 2089 01b0 1B88     		ldrh	r3, [r3]
 2090 01b2 1BB2     		sxth	r3, r3
 2091 01b4 002B     		cmp	r3, #0
 2092 01b6 02DA     		bge	.L124
 2093              		.loc 1 466 0 is_stmt 0 discriminator 1
 2094 01b8 1C4B     		ldr	r3, .L128+32
 2095 01ba 0022     		movs	r2, #0
 2096 01bc 1A80     		strh	r2, [r3]	@ movhi
 2097              	.L124:
 467:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 2098              		.loc 1 467 0 is_stmt 1
 2099 01be 194B     		ldr	r3, .L128+24
 2100 01c0 1B88     		ldrh	r3, [r3]
 2101 01c2 1BB2     		sxth	r3, r3
 2102 01c4 002B     		cmp	r3, #0
 2103 01c6 02DA     		bge	.L125
 2104              		.loc 1 467 0 is_stmt 0 discriminator 1
 2105 01c8 164B     		ldr	r3, .L128+24
 2106 01ca 0022     		movs	r2, #0
 2107 01cc 1A80     		strh	r2, [r3]	@ movhi
 2108              	.L125:
 468:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 2109              		.loc 1 468 0 is_stmt 1
 2110 01ce 174B     		ldr	r3, .L128+32
 2111 01d0 1B88     		ldrh	r3, [r3]
 2112 01d2 1BB2     		sxth	r3, r3
 2113 01d4 642B     		cmp	r3, #100
 2114 01d6 02DD     		ble	.L126
 2115              		.loc 1 468 0 is_stmt 0 discriminator 1
 2116 01d8 144B     		ldr	r3, .L128+32
 2117 01da 6422     		movs	r2, #100
 2118 01dc 1A80     		strh	r2, [r3]	@ movhi
 2119              	.L126:
 469:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2120              		.loc 1 469 0 is_stmt 1
 2121 01de 114B     		ldr	r3, .L128+24
 2122 01e0 1B88     		ldrh	r3, [r3]
 2123 01e2 1BB2     		sxth	r3, r3
 2124 01e4 642B     		cmp	r3, #100
 2125 01e6 02DD     		ble	.L127
 2126              		.loc 1 469 0 is_stmt 0 discriminator 1
 2127 01e8 0E4B     		ldr	r3, .L128+24
 2128 01ea 6422     		movs	r2, #100
 2129 01ec 1A80     		strh	r2, [r3]	@ movhi
 2130              	.L127:
 470:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2131              		.loc 1 470 0 is_stmt 1
 2132 01ee 0D4B     		ldr	r3, .L128+24
 2133 01f0 1B88     		ldrh	r3, [r3]
 2134 01f2 DBB2     		uxtb	r3, r3
 2135 01f4 1846     		mov	r0, r3
 2136 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 471:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2137              		.loc 1 471 0
 2138 01fa 0C4B     		ldr	r3, .L128+32
 2139 01fc 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 47


 2140 01fe DBB2     		uxtb	r3, r3
 2141 0200 1846     		mov	r0, r3
 2142 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2143              	.L120:
 472:.\main.c      **** }
 2144              		.loc 1 472 0
 2145 0206 2037     		adds	r7, r7, #32
 2146              		.cfi_def_cfa_offset 16
 2147 0208 BD46     		mov	sp, r7
 2148              		.cfi_def_cfa_register 13
 2149              		@ sp needed
 2150 020a B0BD     		pop	{r4, r5, r7, pc}
 2151              	.L129:
 2152              		.align	2
 2153              	.L128:
 2154 020c 00000000 		.word	flag_calc_wheelspeed
 2155 0210 00000000 		.word	quad_diff1
 2156 0214 00000000 		.word	quad_diff2
 2157 0218 0000F03F 		.word	1072693248
 2158 021c 00002040 		.word	1075838976
 2159 0220 00000000 		.word	leftSpeedLimit
 2160 0224 00000000 		.word	left_duty_cycle
 2161 0228 00000000 		.word	rightSpeedLimit
 2162 022c 00000000 		.word	right_duty_cycle
 2163              		.cfi_endproc
 2164              	.LFE90:
 2165              		.size	Quad_Dec_response, .-Quad_Dec_response
 2166              		.global	__aeabi_ddiv
 2167              		.section	.text.trackLine,"ax",%progbits
 2168              		.align	2
 2169              		.global	trackLine
 2170              		.thumb
 2171              		.thumb_func
 2172              		.type	trackLine, %function
 2173              	trackLine:
 2174              	.LFB91:
 473:.\main.c      **** 
 474:.\main.c      **** void trackLine()
 475:.\main.c      **** {
 2175              		.loc 1 475 0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 8
 2178              		@ frame_needed = 1, uses_anonymous_args = 0
 2179 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2180              		.cfi_def_cfa_offset 24
 2181              		.cfi_offset 4, -24
 2182              		.cfi_offset 5, -20
 2183              		.cfi_offset 7, -16
 2184              		.cfi_offset 8, -12
 2185              		.cfi_offset 9, -8
 2186              		.cfi_offset 14, -4
 2187 0004 82B0     		sub	sp, sp, #8
 2188              		.cfi_def_cfa_offset 32
 2189 0006 00AF     		add	r7, sp, #0
 2190              		.cfi_def_cfa_register 7
 476:.\main.c      ****     //read the value of the three central-front sensors
 477:.\main.c      ****     
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 48


 478:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2191              		.loc 1 478 0
 2192 0008 FFF7FEFF 		bl	NLSens_out_Read
 2193 000c 0346     		mov	r3, r0
 2194 000e FB71     		strb	r3, [r7, #7]
 479:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2195              		.loc 1 479 0
 2196 0010 FFF7FEFF 		bl	NRSens_out_Read
 2197 0014 0346     		mov	r3, r0
 2198 0016 BB71     		strb	r3, [r7, #6]
 480:.\main.c      ****     uint8 mid = MSens_out_Read();
 2199              		.loc 1 480 0
 2200 0018 FFF7FEFF 		bl	MSens_out_Read
 2201 001c 0346     		mov	r3, r0
 2202 001e 7B71     		strb	r3, [r7, #5]
 481:.\main.c      ****     //if only the left one, hard left
 482:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 2203              		.loc 1 482 0
 2204 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2205 0022 002B     		cmp	r3, #0
 2206 0024 27D0     		beq	.L131
 2207              		.loc 1 482 0 is_stmt 0 discriminator 1
 2208 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2209 0028 002B     		cmp	r3, #0
 2210 002a 24D1     		bne	.L131
 2211              		.loc 1 482 0 discriminator 2
 2212 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2213 002e 002B     		cmp	r3, #0
 2214 0030 21D1     		bne	.L131
 483:.\main.c      ****     {
 484:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 2215              		.loc 1 484 0 is_stmt 1
 2216 0032 454B     		ldr	r3, .L136
 2217 0034 D3E90023 		ldrd	r2, [r3]
 2218 0038 1046     		mov	r0, r2
 2219 003a 1946     		mov	r1, r3
 2220 003c 4FF00002 		mov	r2, #0
 2221 0040 424B     		ldr	r3, .L136+4
 2222 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2223 0046 0246     		mov	r2, r0
 2224 0048 0B46     		mov	r3, r1
 2225 004a 1446     		mov	r4, r2
 2226 004c 1D46     		mov	r5, r3
 2227 004e 3E4B     		ldr	r3, .L136
 2228 0050 D3E90023 		ldrd	r2, [r3]
 2229 0054 9046     		mov	r8, r2
 2230 0056 83F00049 		eor	r9, r3, #-2147483648
 2231 005a 4046     		mov	r0, r8
 2232 005c 4946     		mov	r1, r9
 2233 005e 4FF00002 		mov	r2, #0
 2234 0062 3A4B     		ldr	r3, .L136+4
 2235 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2236 0068 0246     		mov	r2, r0
 2237 006a 0B46     		mov	r3, r1
 2238 006c 2046     		mov	r0, r4
 2239 006e 2946     		mov	r1, r5
 2240 0070 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 49


 2241 0074 63E0     		b	.L130
 2242              	.L131:
 485:.\main.c      ****     }
 486:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2243              		.loc 1 486 0
 2244 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2245 0078 002B     		cmp	r3, #0
 2246 007a 11D0     		beq	.L133
 2247              		.loc 1 486 0 is_stmt 0 discriminator 1
 2248 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2249 007e 002B     		cmp	r3, #0
 2250 0080 0ED0     		beq	.L133
 2251              		.loc 1 486 0 discriminator 2
 2252 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2253 0084 002B     		cmp	r3, #0
 2254 0086 0BD1     		bne	.L133
 487:.\main.c      ****     {
 488:.\main.c      ****         setSpeed(speed, 0);
 2255              		.loc 1 488 0 is_stmt 1
 2256 0088 2F4B     		ldr	r3, .L136
 2257 008a D3E90023 		ldrd	r2, [r3]
 2258 008e 1046     		mov	r0, r2
 2259 0090 1946     		mov	r1, r3
 2260 0092 4FF00002 		mov	r2, #0
 2261 0096 4FF00003 		mov	r3, #0
 2262 009a FFF7FEFF 		bl	setSpeed
 2263 009e 4EE0     		b	.L130
 2264              	.L133:
 489:.\main.c      ****     }
 490:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2265              		.loc 1 490 0
 2266 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2267 00a2 002B     		cmp	r3, #0
 2268 00a4 0FD0     		beq	.L134
 2269              		.loc 1 490 0 is_stmt 0 discriminator 1
 2270 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2271 00a8 002B     		cmp	r3, #0
 2272 00aa 0CD0     		beq	.L134
 2273              		.loc 1 490 0 discriminator 2
 2274 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2275 00ae 002B     		cmp	r3, #0
 2276 00b0 09D1     		bne	.L134
 491:.\main.c      ****     {
 492:.\main.c      ****         setSpeed(0, speed);
 2277              		.loc 1 492 0 is_stmt 1
 2278 00b2 254B     		ldr	r3, .L136
 2279 00b4 D3E90023 		ldrd	r2, [r3]
 2280 00b8 4FF00000 		mov	r0, #0
 2281 00bc 4FF00001 		mov	r1, #0
 2282 00c0 FFF7FEFF 		bl	setSpeed
 2283 00c4 3BE0     		b	.L130
 2284              	.L134:
 493:.\main.c      ****     }
 494:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2285              		.loc 1 494 0
 2286 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2287 00c8 002B     		cmp	r3, #0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 50


 2288 00ca 27D0     		beq	.L135
 2289              		.loc 1 494 0 is_stmt 0 discriminator 1
 2290 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2291 00ce 002B     		cmp	r3, #0
 2292 00d0 24D1     		bne	.L135
 2293              		.loc 1 494 0 discriminator 2
 2294 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2295 00d4 002B     		cmp	r3, #0
 2296 00d6 21D1     		bne	.L135
 495:.\main.c      ****     {
 496:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 2297              		.loc 1 496 0 is_stmt 1
 2298 00d8 1B4B     		ldr	r3, .L136
 2299 00da D3E90023 		ldrd	r2, [r3]
 2300 00de 1446     		mov	r4, r2
 2301 00e0 83F00045 		eor	r5, r3, #-2147483648
 2302 00e4 2046     		mov	r0, r4
 2303 00e6 2946     		mov	r1, r5
 2304 00e8 4FF00002 		mov	r2, #0
 2305 00ec 174B     		ldr	r3, .L136+4
 2306 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2307 00f2 0246     		mov	r2, r0
 2308 00f4 0B46     		mov	r3, r1
 2309 00f6 1446     		mov	r4, r2
 2310 00f8 1D46     		mov	r5, r3
 2311 00fa 134B     		ldr	r3, .L136
 2312 00fc D3E90023 		ldrd	r2, [r3]
 2313 0100 1046     		mov	r0, r2
 2314 0102 1946     		mov	r1, r3
 2315 0104 4FF00002 		mov	r2, #0
 2316 0108 104B     		ldr	r3, .L136+4
 2317 010a FFF7FEFF 		bl	__aeabi_ddiv
 2318 010e 0246     		mov	r2, r0
 2319 0110 0B46     		mov	r3, r1
 2320 0112 2046     		mov	r0, r4
 2321 0114 2946     		mov	r1, r5
 2322 0116 FFF7FEFF 		bl	setSpeed
 2323 011a 10E0     		b	.L130
 2324              	.L135:
 497:.\main.c      ****     }
 498:.\main.c      ****     else if (mid && !nr && !nl)
 2325              		.loc 1 498 0
 2326 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2327 011e 002B     		cmp	r3, #0
 2328 0120 0DD0     		beq	.L130
 2329              		.loc 1 498 0 is_stmt 0 discriminator 1
 2330 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2331 0124 002B     		cmp	r3, #0
 2332 0126 0AD1     		bne	.L130
 2333              		.loc 1 498 0 discriminator 2
 2334 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2335 012a 002B     		cmp	r3, #0
 2336 012c 07D1     		bne	.L130
 499:.\main.c      ****     {
 500:.\main.c      ****         setSpeed(speed,speed);
 2337              		.loc 1 500 0 is_stmt 1
 2338 012e 064B     		ldr	r3, .L136
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 51


 2339 0130 D3E90001 		ldrd	r0, [r3]
 2340 0134 044B     		ldr	r3, .L136
 2341 0136 D3E90023 		ldrd	r2, [r3]
 2342 013a FFF7FEFF 		bl	setSpeed
 2343              	.L130:
 501:.\main.c      ****     }
 502:.\main.c      ****    // else if (!mid && !nr && !nl)
 503:.\main.c      ****     //{
 504:.\main.c      ****         //setSpeed(0,0);
 505:.\main.c      ****     //}
 506:.\main.c      **** }
 2344              		.loc 1 506 0
 2345 013e 0837     		adds	r7, r7, #8
 2346              		.cfi_def_cfa_offset 24
 2347 0140 BD46     		mov	sp, r7
 2348              		.cfi_def_cfa_register 13
 2349              		@ sp needed
 2350 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2351              	.L137:
 2352 0146 00BF     		.align	2
 2353              	.L136:
 2354 0148 00000000 		.word	speed
 2355 014c 0000F83F 		.word	1073217536
 2356              		.cfi_endproc
 2357              	.LFE91:
 2358              		.size	trackLine, .-trackLine
 2359              		.section	.text.trackLineZ,"ax",%progbits
 2360              		.align	2
 2361              		.global	trackLineZ
 2362              		.thumb
 2363              		.thumb_func
 2364              		.type	trackLineZ, %function
 2365              	trackLineZ:
 2366              	.LFB92:
 507:.\main.c      **** 
 508:.\main.c      **** void trackLineZ()
 509:.\main.c      **** {
 2367              		.loc 1 509 0
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 8
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2372              		.cfi_def_cfa_offset 24
 2373              		.cfi_offset 4, -24
 2374              		.cfi_offset 5, -20
 2375              		.cfi_offset 7, -16
 2376              		.cfi_offset 8, -12
 2377              		.cfi_offset 9, -8
 2378              		.cfi_offset 14, -4
 2379 0004 82B0     		sub	sp, sp, #8
 2380              		.cfi_def_cfa_offset 32
 2381 0006 00AF     		add	r7, sp, #0
 2382              		.cfi_def_cfa_register 7
 510:.\main.c      ****     //read the value of the three central-front sensors
 511:.\main.c      ****     
 512:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2383              		.loc 1 512 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 52


 2384 0008 FFF7FEFF 		bl	NLSens_out_Read
 2385 000c 0346     		mov	r3, r0
 2386 000e FB71     		strb	r3, [r7, #7]
 513:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2387              		.loc 1 513 0
 2388 0010 FFF7FEFF 		bl	NRSens_out_Read
 2389 0014 0346     		mov	r3, r0
 2390 0016 BB71     		strb	r3, [r7, #6]
 514:.\main.c      ****     uint8 mid = MSens_out_Read();
 2391              		.loc 1 514 0
 2392 0018 FFF7FEFF 		bl	MSens_out_Read
 2393 001c 0346     		mov	r3, r0
 2394 001e 7B71     		strb	r3, [r7, #5]
 515:.\main.c      ****     //if only the left one, hard left
 516:.\main.c      ****     if(nl && !nr && !mid)
 2395              		.loc 1 516 0
 2396 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2397 0022 002B     		cmp	r3, #0
 2398 0024 27D0     		beq	.L139
 2399              		.loc 1 516 0 is_stmt 0 discriminator 1
 2400 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2401 0028 002B     		cmp	r3, #0
 2402 002a 24D1     		bne	.L139
 2403              		.loc 1 516 0 discriminator 2
 2404 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2405 002e 002B     		cmp	r3, #0
 2406 0030 21D1     		bne	.L139
 517:.\main.c      ****     {
 518:.\main.c      ****         setSpeed(speed / 1.5,-speed / 1.5);
 2407              		.loc 1 518 0 is_stmt 1
 2408 0032 454B     		ldr	r3, .L144
 2409 0034 D3E90023 		ldrd	r2, [r3]
 2410 0038 1046     		mov	r0, r2
 2411 003a 1946     		mov	r1, r3
 2412 003c 4FF00002 		mov	r2, #0
 2413 0040 424B     		ldr	r3, .L144+4
 2414 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2415 0046 0246     		mov	r2, r0
 2416 0048 0B46     		mov	r3, r1
 2417 004a 1446     		mov	r4, r2
 2418 004c 1D46     		mov	r5, r3
 2419 004e 3E4B     		ldr	r3, .L144
 2420 0050 D3E90023 		ldrd	r2, [r3]
 2421 0054 9046     		mov	r8, r2
 2422 0056 83F00049 		eor	r9, r3, #-2147483648
 2423 005a 4046     		mov	r0, r8
 2424 005c 4946     		mov	r1, r9
 2425 005e 4FF00002 		mov	r2, #0
 2426 0062 3A4B     		ldr	r3, .L144+4
 2427 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2428 0068 0246     		mov	r2, r0
 2429 006a 0B46     		mov	r3, r1
 2430 006c 2046     		mov	r0, r4
 2431 006e 2946     		mov	r1, r5
 2432 0070 FFF7FEFF 		bl	setSpeed
 2433 0074 63E0     		b	.L138
 2434              	.L139:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 53


 519:.\main.c      ****     }
 520:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2435              		.loc 1 520 0
 2436 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2437 0078 002B     		cmp	r3, #0
 2438 007a 11D0     		beq	.L141
 2439              		.loc 1 520 0 is_stmt 0 discriminator 1
 2440 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2441 007e 002B     		cmp	r3, #0
 2442 0080 0ED0     		beq	.L141
 2443              		.loc 1 520 0 discriminator 2
 2444 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2445 0084 002B     		cmp	r3, #0
 2446 0086 0BD1     		bne	.L141
 521:.\main.c      ****     {
 522:.\main.c      ****         setSpeed(speed, 0.0);
 2447              		.loc 1 522 0 is_stmt 1
 2448 0088 2F4B     		ldr	r3, .L144
 2449 008a D3E90023 		ldrd	r2, [r3]
 2450 008e 1046     		mov	r0, r2
 2451 0090 1946     		mov	r1, r3
 2452 0092 4FF00002 		mov	r2, #0
 2453 0096 4FF00003 		mov	r3, #0
 2454 009a FFF7FEFF 		bl	setSpeed
 2455 009e 4EE0     		b	.L138
 2456              	.L141:
 523:.\main.c      ****     }
 524:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2457              		.loc 1 524 0
 2458 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2459 00a2 002B     		cmp	r3, #0
 2460 00a4 0FD0     		beq	.L142
 2461              		.loc 1 524 0 is_stmt 0 discriminator 1
 2462 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2463 00a8 002B     		cmp	r3, #0
 2464 00aa 0CD0     		beq	.L142
 2465              		.loc 1 524 0 discriminator 2
 2466 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2467 00ae 002B     		cmp	r3, #0
 2468 00b0 09D1     		bne	.L142
 525:.\main.c      ****     {
 526:.\main.c      ****         setSpeed(0.0,speed);
 2469              		.loc 1 526 0 is_stmt 1
 2470 00b2 254B     		ldr	r3, .L144
 2471 00b4 D3E90023 		ldrd	r2, [r3]
 2472 00b8 4FF00000 		mov	r0, #0
 2473 00bc 4FF00001 		mov	r1, #0
 2474 00c0 FFF7FEFF 		bl	setSpeed
 2475 00c4 3BE0     		b	.L138
 2476              	.L142:
 527:.\main.c      ****     }
 528:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2477              		.loc 1 528 0
 2478 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2479 00c8 002B     		cmp	r3, #0
 2480 00ca 27D0     		beq	.L143
 2481              		.loc 1 528 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 54


 2482 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2483 00ce 002B     		cmp	r3, #0
 2484 00d0 24D1     		bne	.L143
 2485              		.loc 1 528 0 discriminator 2
 2486 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2487 00d4 002B     		cmp	r3, #0
 2488 00d6 21D1     		bne	.L143
 529:.\main.c      ****     {
 530:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 2489              		.loc 1 530 0 is_stmt 1
 2490 00d8 1B4B     		ldr	r3, .L144
 2491 00da D3E90023 		ldrd	r2, [r3]
 2492 00de 1446     		mov	r4, r2
 2493 00e0 83F00045 		eor	r5, r3, #-2147483648
 2494 00e4 2046     		mov	r0, r4
 2495 00e6 2946     		mov	r1, r5
 2496 00e8 4FF00002 		mov	r2, #0
 2497 00ec 174B     		ldr	r3, .L144+4
 2498 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2499 00f2 0246     		mov	r2, r0
 2500 00f4 0B46     		mov	r3, r1
 2501 00f6 1446     		mov	r4, r2
 2502 00f8 1D46     		mov	r5, r3
 2503 00fa 134B     		ldr	r3, .L144
 2504 00fc D3E90023 		ldrd	r2, [r3]
 2505 0100 1046     		mov	r0, r2
 2506 0102 1946     		mov	r1, r3
 2507 0104 4FF00002 		mov	r2, #0
 2508 0108 104B     		ldr	r3, .L144+4
 2509 010a FFF7FEFF 		bl	__aeabi_ddiv
 2510 010e 0246     		mov	r2, r0
 2511 0110 0B46     		mov	r3, r1
 2512 0112 2046     		mov	r0, r4
 2513 0114 2946     		mov	r1, r5
 2514 0116 FFF7FEFF 		bl	setSpeed
 2515 011a 10E0     		b	.L138
 2516              	.L143:
 531:.\main.c      ****     }
 532:.\main.c      ****     else if (mid && !nr && !nl)
 2517              		.loc 1 532 0
 2518 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2519 011e 002B     		cmp	r3, #0
 2520 0120 0DD0     		beq	.L138
 2521              		.loc 1 532 0 is_stmt 0 discriminator 1
 2522 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2523 0124 002B     		cmp	r3, #0
 2524 0126 0AD1     		bne	.L138
 2525              		.loc 1 532 0 discriminator 2
 2526 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2527 012a 002B     		cmp	r3, #0
 2528 012c 07D1     		bne	.L138
 533:.\main.c      ****     {
 534:.\main.c      ****         setSpeed(speed,speed);
 2529              		.loc 1 534 0 is_stmt 1
 2530 012e 064B     		ldr	r3, .L144
 2531 0130 D3E90001 		ldrd	r0, [r3]
 2532 0134 044B     		ldr	r3, .L144
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 55


 2533 0136 D3E90023 		ldrd	r2, [r3]
 2534 013a FFF7FEFF 		bl	setSpeed
 2535              	.L138:
 535:.\main.c      ****     }
 536:.\main.c      ****    // else if (!mid && !nr && !nl)
 537:.\main.c      ****     //{
 538:.\main.c      ****         //setSpeed(0,0);
 539:.\main.c      ****     //}
 540:.\main.c      **** }
 2536              		.loc 1 540 0
 2537 013e 0837     		adds	r7, r7, #8
 2538              		.cfi_def_cfa_offset 24
 2539 0140 BD46     		mov	sp, r7
 2540              		.cfi_def_cfa_register 13
 2541              		@ sp needed
 2542 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2543              	.L145:
 2544 0146 00BF     		.align	2
 2545              	.L144:
 2546 0148 00000000 		.word	speed
 2547 014c 0000F83F 		.word	1073217536
 2548              		.cfi_endproc
 2549              	.LFE92:
 2550              		.size	trackLineZ, .-trackLineZ
 2551              		.section	.text.trackLineU,"ax",%progbits
 2552              		.align	2
 2553              		.global	trackLineU
 2554              		.thumb
 2555              		.thumb_func
 2556              		.type	trackLineU, %function
 2557              	trackLineU:
 2558              	.LFB93:
 541:.\main.c      **** 
 542:.\main.c      **** void trackLineU()
 543:.\main.c      **** {
 2559              		.loc 1 543 0
 2560              		.cfi_startproc
 2561              		@ args = 0, pretend = 0, frame = 8
 2562              		@ frame_needed = 1, uses_anonymous_args = 0
 2563 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2564              		.cfi_def_cfa_offset 24
 2565              		.cfi_offset 4, -24
 2566              		.cfi_offset 5, -20
 2567              		.cfi_offset 7, -16
 2568              		.cfi_offset 8, -12
 2569              		.cfi_offset 9, -8
 2570              		.cfi_offset 14, -4
 2571 0004 82B0     		sub	sp, sp, #8
 2572              		.cfi_def_cfa_offset 32
 2573 0006 00AF     		add	r7, sp, #0
 2574              		.cfi_def_cfa_register 7
 544:.\main.c      ****     //read the value of the three central-front sensors
 545:.\main.c      ****     
 546:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2575              		.loc 1 546 0
 2576 0008 FFF7FEFF 		bl	NLSens_out_Read
 2577 000c 0346     		mov	r3, r0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 56


 2578 000e FB71     		strb	r3, [r7, #7]
 547:.\main.c      ****     uint8 fl = FLSens_out_Read();
 2579              		.loc 1 547 0
 2580 0010 FFF7FEFF 		bl	FLSens_out_Read
 2581 0014 0346     		mov	r3, r0
 2582 0016 BB71     		strb	r3, [r7, #6]
 548:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2583              		.loc 1 548 0
 2584 0018 FFF7FEFF 		bl	NRSens_out_Read
 2585 001c 0346     		mov	r3, r0
 2586 001e 7B71     		strb	r3, [r7, #5]
 549:.\main.c      ****     uint8 fr = FRSens_out_Read();
 2587              		.loc 1 549 0
 2588 0020 FFF7FEFF 		bl	FRSens_out_Read
 2589 0024 0346     		mov	r3, r0
 2590 0026 3B71     		strb	r3, [r7, #4]
 550:.\main.c      ****     uint8 mid = MSens_out_Read();
 2591              		.loc 1 550 0
 2592 0028 FFF7FEFF 		bl	MSens_out_Read
 2593 002c 0346     		mov	r3, r0
 2594 002e FB70     		strb	r3, [r7, #3]
 551:.\main.c      ****     if (fl && mid && fr) // T intersection
 2595              		.loc 1 551 0
 2596 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2597 0032 002B     		cmp	r3, #0
 2598 0034 06D0     		beq	.L147
 2599              		.loc 1 551 0 is_stmt 0 discriminator 1
 2600 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2601 0038 002B     		cmp	r3, #0
 2602 003a 03D0     		beq	.L147
 2603              		.loc 1 551 0 discriminator 2
 2604 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2605 003e 002B     		cmp	r3, #0
 2606 0040 00D0     		beq	.L147
 2607              		.loc 1 551 0
 2608 0042 ACE0     		b	.L146
 2609              	.L147:
 552:.\main.c      ****     {
 553:.\main.c      ****         // not implemented
 554:.\main.c      ****     }
 555:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 2610              		.loc 1 555 0 is_stmt 1
 2611 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2612 0046 002B     		cmp	r3, #0
 2613 0048 0BD0     		beq	.L149
 2614              		.loc 1 555 0 is_stmt 0 discriminator 1
 2615 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2616 004c 002B     		cmp	r3, #0
 2617 004e 08D0     		beq	.L149
 556:.\main.c      ****     {
 557:.\main.c      ****         setSpeed(speed, speed);
 2618              		.loc 1 557 0 is_stmt 1
 2619 0050 554B     		ldr	r3, .L155
 2620 0052 D3E90001 		ldrd	r0, [r3]
 2621 0056 544B     		ldr	r3, .L155
 2622 0058 D3E90023 		ldrd	r2, [r3]
 2623 005c FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 57


 2624 0060 9DE0     		b	.L146
 2625              	.L149:
 558:.\main.c      ****     }
 559:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 2626              		.loc 1 559 0
 2627 0062 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2628 0064 002B     		cmp	r3, #0
 2629 0066 0BD0     		beq	.L150
 2630              		.loc 1 559 0 is_stmt 0 discriminator 1
 2631 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2632 006a 002B     		cmp	r3, #0
 2633 006c 08D0     		beq	.L150
 560:.\main.c      ****     {
 561:.\main.c      ****         setSpeed(speed, speed);
 2634              		.loc 1 561 0 is_stmt 1
 2635 006e 4E4B     		ldr	r3, .L155
 2636 0070 D3E90001 		ldrd	r0, [r3]
 2637 0074 4C4B     		ldr	r3, .L155
 2638 0076 D3E90023 		ldrd	r2, [r3]
 2639 007a FFF7FEFF 		bl	setSpeed
 2640 007e 8EE0     		b	.L146
 2641              	.L150:
 562:.\main.c      ****     }
 563:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 2642              		.loc 1 563 0
 2643 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2644 0082 002B     		cmp	r3, #0
 2645 0084 27D0     		beq	.L151
 2646              		.loc 1 563 0 is_stmt 0 discriminator 1
 2647 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2648 0088 002B     		cmp	r3, #0
 2649 008a 24D1     		bne	.L151
 2650              		.loc 1 563 0 discriminator 2
 2651 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2652 008e 002B     		cmp	r3, #0
 2653 0090 21D1     		bne	.L151
 564:.\main.c      ****     {
 565:.\main.c      ****          setSpeed(speed / 1.5,-speed / 1.5);
 2654              		.loc 1 565 0 is_stmt 1
 2655 0092 454B     		ldr	r3, .L155
 2656 0094 D3E90023 		ldrd	r2, [r3]
 2657 0098 1046     		mov	r0, r2
 2658 009a 1946     		mov	r1, r3
 2659 009c 4FF00002 		mov	r2, #0
 2660 00a0 424B     		ldr	r3, .L155+4
 2661 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 2662 00a6 0246     		mov	r2, r0
 2663 00a8 0B46     		mov	r3, r1
 2664 00aa 1446     		mov	r4, r2
 2665 00ac 1D46     		mov	r5, r3
 2666 00ae 3E4B     		ldr	r3, .L155
 2667 00b0 D3E90023 		ldrd	r2, [r3]
 2668 00b4 9046     		mov	r8, r2
 2669 00b6 83F00049 		eor	r9, r3, #-2147483648
 2670 00ba 4046     		mov	r0, r8
 2671 00bc 4946     		mov	r1, r9
 2672 00be 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 58


 2673 00c2 3A4B     		ldr	r3, .L155+4
 2674 00c4 FFF7FEFF 		bl	__aeabi_ddiv
 2675 00c8 0246     		mov	r2, r0
 2676 00ca 0B46     		mov	r3, r1
 2677 00cc 2046     		mov	r0, r4
 2678 00ce 2946     		mov	r1, r5
 2679 00d0 FFF7FEFF 		bl	setSpeed
 2680 00d4 63E0     		b	.L146
 2681              	.L151:
 566:.\main.c      ****     }
 567:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2682              		.loc 1 567 0
 2683 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2684 00d8 002B     		cmp	r3, #0
 2685 00da 11D0     		beq	.L152
 2686              		.loc 1 567 0 is_stmt 0 discriminator 1
 2687 00dc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2688 00de 002B     		cmp	r3, #0
 2689 00e0 0ED0     		beq	.L152
 2690              		.loc 1 567 0 discriminator 2
 2691 00e2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2692 00e4 002B     		cmp	r3, #0
 2693 00e6 0BD1     		bne	.L152
 568:.\main.c      ****     {
 569:.\main.c      ****         setSpeed(speed, 0);
 2694              		.loc 1 569 0 is_stmt 1
 2695 00e8 2F4B     		ldr	r3, .L155
 2696 00ea D3E90023 		ldrd	r2, [r3]
 2697 00ee 1046     		mov	r0, r2
 2698 00f0 1946     		mov	r1, r3
 2699 00f2 4FF00002 		mov	r2, #0
 2700 00f6 4FF00003 		mov	r3, #0
 2701 00fa FFF7FEFF 		bl	setSpeed
 2702 00fe 4EE0     		b	.L146
 2703              	.L152:
 570:.\main.c      ****     }
 571:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2704              		.loc 1 571 0
 2705 0100 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2706 0102 002B     		cmp	r3, #0
 2707 0104 0FD0     		beq	.L153
 2708              		.loc 1 571 0 is_stmt 0 discriminator 1
 2709 0106 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2710 0108 002B     		cmp	r3, #0
 2711 010a 0CD0     		beq	.L153
 2712              		.loc 1 571 0 discriminator 2
 2713 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2714 010e 002B     		cmp	r3, #0
 2715 0110 09D1     		bne	.L153
 572:.\main.c      ****     {
 573:.\main.c      ****         setSpeed(0, speed);
 2716              		.loc 1 573 0 is_stmt 1
 2717 0112 254B     		ldr	r3, .L155
 2718 0114 D3E90023 		ldrd	r2, [r3]
 2719 0118 4FF00000 		mov	r0, #0
 2720 011c 4FF00001 		mov	r1, #0
 2721 0120 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 59


 2722 0124 3BE0     		b	.L146
 2723              	.L153:
 574:.\main.c      ****     }
 575:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2724              		.loc 1 575 0
 2725 0126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2726 0128 002B     		cmp	r3, #0
 2727 012a 27D0     		beq	.L154
 2728              		.loc 1 575 0 is_stmt 0 discriminator 1
 2729 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2730 012e 002B     		cmp	r3, #0
 2731 0130 24D1     		bne	.L154
 2732              		.loc 1 575 0 discriminator 2
 2733 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2734 0134 002B     		cmp	r3, #0
 2735 0136 21D1     		bne	.L154
 576:.\main.c      ****     {
 577:.\main.c      ****          setSpeed(-speed / 1.5,speed / 1.5);
 2736              		.loc 1 577 0 is_stmt 1
 2737 0138 1B4B     		ldr	r3, .L155
 2738 013a D3E90023 		ldrd	r2, [r3]
 2739 013e 1446     		mov	r4, r2
 2740 0140 83F00045 		eor	r5, r3, #-2147483648
 2741 0144 2046     		mov	r0, r4
 2742 0146 2946     		mov	r1, r5
 2743 0148 4FF00002 		mov	r2, #0
 2744 014c 174B     		ldr	r3, .L155+4
 2745 014e FFF7FEFF 		bl	__aeabi_ddiv
 2746 0152 0246     		mov	r2, r0
 2747 0154 0B46     		mov	r3, r1
 2748 0156 1446     		mov	r4, r2
 2749 0158 1D46     		mov	r5, r3
 2750 015a 134B     		ldr	r3, .L155
 2751 015c D3E90023 		ldrd	r2, [r3]
 2752 0160 1046     		mov	r0, r2
 2753 0162 1946     		mov	r1, r3
 2754 0164 4FF00002 		mov	r2, #0
 2755 0168 104B     		ldr	r3, .L155+4
 2756 016a FFF7FEFF 		bl	__aeabi_ddiv
 2757 016e 0246     		mov	r2, r0
 2758 0170 0B46     		mov	r3, r1
 2759 0172 2046     		mov	r0, r4
 2760 0174 2946     		mov	r1, r5
 2761 0176 FFF7FEFF 		bl	setSpeed
 2762 017a 10E0     		b	.L146
 2763              	.L154:
 578:.\main.c      ****     }
 579:.\main.c      ****     else if (mid && !nr && !nl)
 2764              		.loc 1 579 0
 2765 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2766 017e 002B     		cmp	r3, #0
 2767 0180 0DD0     		beq	.L146
 2768              		.loc 1 579 0 is_stmt 0 discriminator 1
 2769 0182 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2770 0184 002B     		cmp	r3, #0
 2771 0186 0AD1     		bne	.L146
 2772              		.loc 1 579 0 discriminator 2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 60


 2773 0188 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2774 018a 002B     		cmp	r3, #0
 2775 018c 07D1     		bne	.L146
 580:.\main.c      ****     {
 581:.\main.c      ****         setSpeed(speed,speed);
 2776              		.loc 1 581 0 is_stmt 1
 2777 018e 064B     		ldr	r3, .L155
 2778 0190 D3E90001 		ldrd	r0, [r3]
 2779 0194 044B     		ldr	r3, .L155
 2780 0196 D3E90023 		ldrd	r2, [r3]
 2781 019a FFF7FEFF 		bl	setSpeed
 2782              	.L146:
 582:.\main.c      ****     }
 583:.\main.c      ****    // else if (!mid && !nr && !nl)
 584:.\main.c      ****     //{
 585:.\main.c      ****         //setSpeed(0,0);
 586:.\main.c      ****     //}
 587:.\main.c      ****    
 588:.\main.c      **** 
 589:.\main.c      **** }
 2783              		.loc 1 589 0
 2784 019e 0837     		adds	r7, r7, #8
 2785              		.cfi_def_cfa_offset 24
 2786 01a0 BD46     		mov	sp, r7
 2787              		.cfi_def_cfa_register 13
 2788              		@ sp needed
 2789 01a2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2790              	.L156:
 2791 01a6 00BF     		.align	2
 2792              	.L155:
 2793 01a8 00000000 		.word	speed
 2794 01ac 0000F83F 		.word	1073217536
 2795              		.cfi_endproc
 2796              	.LFE93:
 2797              		.size	trackLineU, .-trackLineU
 2798              		.global	__aeabi_i2f
 2799              		.global	__aeabi_fmul
 2800              		.global	__aeabi_fadd
 2801              		.global	__aeabi_f2iz
 2802              		.section	.rodata
 2803 001e 0000     		.align	2
 2804              	.LC2:
 2805 0020 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 2805      65727920 
 2805      566F6C74 
 2805      6167653A 
 2805      2025646D 
 2806              		.section	.text.print_ADC,"ax",%progbits
 2807              		.align	2
 2808              		.global	print_ADC
 2809              		.thumb
 2810              		.thumb_func
 2811              		.type	print_ADC, %function
 2812              	print_ADC:
 2813              	.LFB94:
 590:.\main.c      **** 
 591:.\main.c      **** void print_ADC()
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 61


 592:.\main.c      **** {
 2814              		.loc 1 592 0
 2815              		.cfi_startproc
 2816              		@ args = 0, pretend = 0, frame = 24
 2817              		@ frame_needed = 1, uses_anonymous_args = 0
 2818 0000 80B5     		push	{r7, lr}
 2819              		.cfi_def_cfa_offset 8
 2820              		.cfi_offset 7, -8
 2821              		.cfi_offset 14, -4
 2822 0002 86B0     		sub	sp, sp, #24
 2823              		.cfi_def_cfa_offset 32
 2824 0004 00AF     		add	r7, sp, #0
 2825              		.cfi_def_cfa_register 7
 593:.\main.c      ****    //usbPutString("HII\n");
 594:.\main.c      ****     if(flag_receive_ADC == 1)
 2826              		.loc 1 594 0
 2827 0006 274B     		ldr	r3, .L160
 2828 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2829 000a 012B     		cmp	r3, #1
 2830 000c 46D1     		bne	.L157
 2831              	.LBB3:
 595:.\main.c      ****     {
 596:.\main.c      ****         //usbPutString("AAA\r\n");
 597:.\main.c      ****         flag_receive_ADC = 0;
 2832              		.loc 1 597 0
 2833 000e 254B     		ldr	r3, .L160
 2834 0010 0022     		movs	r2, #0
 2835 0012 1A70     		strb	r2, [r3]
 598:.\main.c      ****         
 599:.\main.c      ****        // int8 channel = ADC_
 600:.\main.c      ****         float scalingFactor = 0.972;
 2836              		.loc 1 600 0
 2837 0014 244B     		ldr	r3, .L160+4
 2838 0016 7B61     		str	r3, [r7, #20]	@ float
 601:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 2839              		.loc 1 601 0
 2840 0018 244B     		ldr	r3, .L160+8
 2841 001a 1B88     		ldrh	r3, [r3]
 2842 001c 1BB2     		sxth	r3, r3
 2843 001e 41F28832 		movw	r2, #5000
 2844 0022 02FB03F3 		mul	r3, r2, r3
 2845 0026 002B     		cmp	r3, #0
 2846 0028 01DA     		bge	.L159
 2847 002a 03F6FF73 		addw	r3, r3, #4095
 2848              	.L159:
 2849 002e 1B13     		asrs	r3, r3, #12
 2850 0030 1846     		mov	r0, r3
 2851 0032 FFF7FEFF 		bl	__aeabi_i2f
 2852 0036 0346     		mov	r3, r0
 2853 0038 1846     		mov	r0, r3
 2854 003a 7969     		ldr	r1, [r7, #20]	@ float
 2855 003c FFF7FEFF 		bl	__aeabi_fmul
 2856 0040 0346     		mov	r3, r0
 2857 0042 1846     		mov	r0, r3
 2858 0044 1946     		mov	r1, r3
 2859 0046 FFF7FEFF 		bl	__aeabi_fadd
 2860 004a 0346     		mov	r3, r0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 62


 2861 004c 1846     		mov	r0, r3
 2862 004e FFF7FEFF 		bl	__aeabi_f2iz
 2863 0052 0346     		mov	r3, r0
 2864 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 602:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 2865              		.loc 1 602 0
 2866 0056 B7F91220 		ldrsh	r2, [r7, #18]
 2867 005a 154B     		ldr	r3, .L160+12
 2868 005c 1B88     		ldrh	r3, [r3]
 2869 005e 1BB2     		sxth	r3, r3
 2870 0060 1A44     		add	r2, r2, r3
 2871 0062 144B     		ldr	r3, .L160+16
 2872 0064 1B88     		ldrh	r3, [r3]
 2873 0066 1BB2     		sxth	r3, r3
 2874 0068 1344     		add	r3, r3, r2
 2875 006a 134A     		ldr	r2, .L160+20
 2876 006c 82FB0312 		smull	r1, r2, r2, r3
 2877 0070 DB17     		asrs	r3, r3, #31
 2878 0072 D31A     		subs	r3, r2, r3
 2879 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 603:.\main.c      ****         prevVoltage2 = prevVoltage;
 2880              		.loc 1 603 0
 2881 0076 0E4B     		ldr	r3, .L160+12
 2882 0078 1A88     		ldrh	r2, [r3]
 2883 007a 0E4B     		ldr	r3, .L160+16
 2884 007c 1A80     		strh	r2, [r3]	@ movhi
 604:.\main.c      ****         prevVoltage = converted_val;
 2885              		.loc 1 604 0
 2886 007e 0C4A     		ldr	r2, .L160+12
 2887 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 2888 0082 1380     		strh	r3, [r2]	@ movhi
 605:.\main.c      ****         
 606:.\main.c      ****         char result_str[16];
 607:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 2889              		.loc 1 607 0
 2890 0084 B7F91230 		ldrsh	r3, [r7, #18]
 2891 0088 3A46     		mov	r2, r7
 2892 008a 1046     		mov	r0, r2
 2893 008c 0B49     		ldr	r1, .L160+24
 2894 008e 1A46     		mov	r2, r3
 2895 0090 FFF7FEFF 		bl	sprintf
 608:.\main.c      ****         
 609:.\main.c      ****         usbPutString(result_str);
 2896              		.loc 1 609 0
 2897 0094 3B46     		mov	r3, r7
 2898 0096 1846     		mov	r0, r3
 2899 0098 FFF7FEFF 		bl	usbPutString
 2900              	.L157:
 2901              	.LBE3:
 610:.\main.c      ****     }
 611:.\main.c      **** }
 2902              		.loc 1 611 0
 2903 009c 1837     		adds	r7, r7, #24
 2904              		.cfi_def_cfa_offset 8
 2905 009e BD46     		mov	sp, r7
 2906              		.cfi_def_cfa_register 13
 2907              		@ sp needed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 63


 2908 00a0 80BD     		pop	{r7, pc}
 2909              	.L161:
 2910 00a2 00BF     		.align	2
 2911              	.L160:
 2912 00a4 00000000 		.word	flag_receive_ADC
 2913 00a8 FED4783F 		.word	1064883454
 2914 00ac 00000000 		.word	adc_result
 2915 00b0 00000000 		.word	prevVoltage
 2916 00b4 00000000 		.word	prevVoltage2
 2917 00b8 56555555 		.word	1431655766
 2918 00bc 20000000 		.word	.LC2
 2919              		.cfi_endproc
 2920              	.LFE94:
 2921              		.size	print_ADC, .-print_ADC
 2922              		.section	.rodata
 2923              		.align	2
 2924              	.LC3:
 2925 0038 52535349 		.ascii	"RSSI:\000"
 2925      3A00
 2926 003e 0000     		.align	2
 2927              	.LC4:
 2928 0040 25640D0A 		.ascii	"%d\015\012\000"
 2928      00
 2929 0045 000000   		.align	2
 2930              	.LC5:
 2931 0048 726F626F 		.ascii	"robot_x:\000"
 2931      745F783A 
 2931      00
 2932 0051 000000   		.align	2
 2933              	.LC6:
 2934 0054 726F626F 		.ascii	"robot_y:\000"
 2934      745F793A 
 2934      00
 2935 005d 000000   		.align	2
 2936              	.LC7:
 2937 0060 726F626F 		.ascii	"robot_dir:\000"
 2937      745F6469 
 2937      723A00
 2938 006b 00       		.section	.text.print_RF,"ax",%progbits
 2939              		.align	2
 2940              		.global	print_RF
 2941              		.thumb
 2942              		.thumb_func
 2943              		.type	print_RF, %function
 2944              	print_RF:
 2945              	.LFB95:
 612:.\main.c      **** 
 613:.\main.c      **** void print_RF()
 614:.\main.c      **** {
 2946              		.loc 1 614 0
 2947              		.cfi_startproc
 2948              		@ args = 0, pretend = 0, frame = 16
 2949              		@ frame_needed = 1, uses_anonymous_args = 0
 2950 0000 80B5     		push	{r7, lr}
 2951              		.cfi_def_cfa_offset 8
 2952              		.cfi_offset 7, -8
 2953              		.cfi_offset 14, -4
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 64


 2954 0002 84B0     		sub	sp, sp, #16
 2955              		.cfi_def_cfa_offset 24
 2956 0004 00AF     		add	r7, sp, #0
 2957              		.cfi_def_cfa_register 7
 615:.\main.c      ****     if(flag_print_rf == 1)
 2958              		.loc 1 615 0
 2959 0006 254B     		ldr	r3, .L164
 2960 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2961 000a 012B     		cmp	r3, #1
 2962 000c 42D1     		bne	.L162
 2963              	.LBB4:
 616:.\main.c      ****     {
 617:.\main.c      ****         char printString[16];
 618:.\main.c      ****         flag_print_rf = 0;
 2964              		.loc 1 618 0
 2965 000e 234B     		ldr	r3, .L164
 2966 0010 0022     		movs	r2, #0
 2967 0012 1A70     		strb	r2, [r3]
 619:.\main.c      ****         usbPutString("RSSI:");
 2968              		.loc 1 619 0
 2969 0014 2248     		ldr	r0, .L164+4
 2970 0016 FFF7FEFF 		bl	usbPutString
 620:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 2971              		.loc 1 620 0
 2972 001a 224B     		ldr	r3, .L164+8
 2973 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2974 001e 5BB2     		sxtb	r3, r3
 2975 0020 3A46     		mov	r2, r7
 2976 0022 1046     		mov	r0, r2
 2977 0024 2049     		ldr	r1, .L164+12
 2978 0026 1A46     		mov	r2, r3
 2979 0028 FFF7FEFF 		bl	sprintf
 621:.\main.c      ****         usbPutString(printString);
 2980              		.loc 1 621 0
 2981 002c 3B46     		mov	r3, r7
 2982 002e 1846     		mov	r0, r3
 2983 0030 FFF7FEFF 		bl	usbPutString
 622:.\main.c      ****         usbPutString("robot_x:");
 2984              		.loc 1 622 0
 2985 0034 1D48     		ldr	r0, .L164+16
 2986 0036 FFF7FEFF 		bl	usbPutString
 623:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 2987              		.loc 1 623 0
 2988 003a 1A4B     		ldr	r3, .L164+8
 2989 003c 5B88     		ldrh	r3, [r3, #2]
 2990 003e 1BB2     		sxth	r3, r3
 2991 0040 3A46     		mov	r2, r7
 2992 0042 1046     		mov	r0, r2
 2993 0044 1849     		ldr	r1, .L164+12
 2994 0046 1A46     		mov	r2, r3
 2995 0048 FFF7FEFF 		bl	sprintf
 624:.\main.c      ****         usbPutString(printString);
 2996              		.loc 1 624 0
 2997 004c 3B46     		mov	r3, r7
 2998 004e 1846     		mov	r0, r3
 2999 0050 FFF7FEFF 		bl	usbPutString
 625:.\main.c      ****         usbPutString("robot_y:");
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 65


 3000              		.loc 1 625 0
 3001 0054 1648     		ldr	r0, .L164+20
 3002 0056 FFF7FEFF 		bl	usbPutString
 626:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3003              		.loc 1 626 0
 3004 005a 124B     		ldr	r3, .L164+8
 3005 005c 9B88     		ldrh	r3, [r3, #4]
 3006 005e 1BB2     		sxth	r3, r3
 3007 0060 3A46     		mov	r2, r7
 3008 0062 1046     		mov	r0, r2
 3009 0064 1049     		ldr	r1, .L164+12
 3010 0066 1A46     		mov	r2, r3
 3011 0068 FFF7FEFF 		bl	sprintf
 627:.\main.c      ****         usbPutString(printString);
 3012              		.loc 1 627 0
 3013 006c 3B46     		mov	r3, r7
 3014 006e 1846     		mov	r0, r3
 3015 0070 FFF7FEFF 		bl	usbPutString
 628:.\main.c      ****         usbPutString("robot_dir:");
 3016              		.loc 1 628 0
 3017 0074 0F48     		ldr	r0, .L164+24
 3018 0076 FFF7FEFF 		bl	usbPutString
 629:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3019              		.loc 1 629 0
 3020 007a 0A4B     		ldr	r3, .L164+8
 3021 007c DB88     		ldrh	r3, [r3, #6]
 3022 007e 1BB2     		sxth	r3, r3
 3023 0080 3A46     		mov	r2, r7
 3024 0082 1046     		mov	r0, r2
 3025 0084 0849     		ldr	r1, .L164+12
 3026 0086 1A46     		mov	r2, r3
 3027 0088 FFF7FEFF 		bl	sprintf
 630:.\main.c      ****         usbPutString(printString);
 3028              		.loc 1 630 0
 3029 008c 3B46     		mov	r3, r7
 3030 008e 1846     		mov	r0, r3
 3031 0090 FFF7FEFF 		bl	usbPutString
 3032              	.L162:
 3033              	.LBE4:
 631:.\main.c      ****     }
 632:.\main.c      **** }
 3034              		.loc 1 632 0
 3035 0094 1037     		adds	r7, r7, #16
 3036              		.cfi_def_cfa_offset 8
 3037 0096 BD46     		mov	sp, r7
 3038              		.cfi_def_cfa_register 13
 3039              		@ sp needed
 3040 0098 80BD     		pop	{r7, pc}
 3041              	.L165:
 3042 009a 00BF     		.align	2
 3043              	.L164:
 3044 009c 00000000 		.word	flag_print_rf
 3045 00a0 38000000 		.word	.LC3
 3046 00a4 00000000 		.word	system_state
 3047 00a8 40000000 		.word	.LC4
 3048 00ac 48000000 		.word	.LC5
 3049 00b0 54000000 		.word	.LC6
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 66


 3050 00b4 60000000 		.word	.LC7
 3051              		.cfi_endproc
 3052              	.LFE95:
 3053              		.size	print_RF, .-print_RF
 3054              		.section	.text.readFrontSensors,"ax",%progbits
 3055              		.align	2
 3056              		.global	readFrontSensors
 3057              		.thumb
 3058              		.thumb_func
 3059              		.type	readFrontSensors, %function
 3060              	readFrontSensors:
 3061              	.LFB96:
 633:.\main.c      **** 
 634:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 635:.\main.c      **** {
 3062              		.loc 1 635 0
 3063              		.cfi_startproc
 3064              		@ args = 0, pretend = 0, frame = 8
 3065              		@ frame_needed = 1, uses_anonymous_args = 0
 3066 0000 90B5     		push	{r4, r7, lr}
 3067              		.cfi_def_cfa_offset 12
 3068              		.cfi_offset 4, -12
 3069              		.cfi_offset 7, -8
 3070              		.cfi_offset 14, -4
 3071 0002 83B0     		sub	sp, sp, #12
 3072              		.cfi_def_cfa_offset 24
 3073 0004 00AF     		add	r7, sp, #0
 3074              		.cfi_def_cfa_register 7
 3075 0006 7860     		str	r0, [r7, #4]
 636:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3076              		.loc 1 636 0
 3077 0008 FFF7FEFF 		bl	FLSens_out_Read
 3078 000c 0346     		mov	r3, r0
 3079 000e 1A46     		mov	r2, r3
 3080 0010 7B68     		ldr	r3, [r7, #4]
 3081 0012 1A70     		strb	r2, [r3]
 637:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3082              		.loc 1 637 0
 3083 0014 7B68     		ldr	r3, [r7, #4]
 3084 0016 5C1C     		adds	r4, r3, #1
 3085 0018 FFF7FEFF 		bl	NLSens_out_Read
 3086 001c 0346     		mov	r3, r0
 3087 001e 2370     		strb	r3, [r4]
 638:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3088              		.loc 1 638 0
 3089 0020 7B68     		ldr	r3, [r7, #4]
 3090 0022 9C1C     		adds	r4, r3, #2
 3091 0024 FFF7FEFF 		bl	MSens_out_Read
 3092 0028 0346     		mov	r3, r0
 3093 002a 2370     		strb	r3, [r4]
 639:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3094              		.loc 1 639 0
 3095 002c 7B68     		ldr	r3, [r7, #4]
 3096 002e DC1C     		adds	r4, r3, #3
 3097 0030 FFF7FEFF 		bl	NRSens_out_Read
 3098 0034 0346     		mov	r3, r0
 3099 0036 2370     		strb	r3, [r4]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 67


 640:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3100              		.loc 1 640 0
 3101 0038 7B68     		ldr	r3, [r7, #4]
 3102 003a 1C1D     		adds	r4, r3, #4
 3103 003c FFF7FEFF 		bl	FRSens_out_Read
 3104 0040 0346     		mov	r3, r0
 3105 0042 2370     		strb	r3, [r4]
 641:.\main.c      **** }
 3106              		.loc 1 641 0
 3107 0044 0C37     		adds	r7, r7, #12
 3108              		.cfi_def_cfa_offset 12
 3109 0046 BD46     		mov	sp, r7
 3110              		.cfi_def_cfa_register 13
 3111              		@ sp needed
 3112 0048 90BD     		pop	{r4, r7, pc}
 3113              		.cfi_endproc
 3114              	.LFE96:
 3115              		.size	readFrontSensors, .-readFrontSensors
 3116 004a 00BF     		.section	.text.main,"ax",%progbits
 3117              		.align	2
 3118              		.global	main
 3119              		.thumb
 3120              		.thumb_func
 3121              		.type	main, %function
 3122              	main:
 3123              	.LFB97:
 642:.\main.c      **** 
 643:.\main.c      **** int main()
 644:.\main.c      **** {  
 3124              		.loc 1 644 0
 3125              		.cfi_startproc
 3126              		@ args = 0, pretend = 0, frame = 8
 3127              		@ frame_needed = 1, uses_anonymous_args = 0
 3128 0000 80B5     		push	{r7, lr}
 3129              		.cfi_def_cfa_offset 8
 3130              		.cfi_offset 7, -8
 3131              		.cfi_offset 14, -4
 3132 0002 82B0     		sub	sp, sp, #8
 3133              		.cfi_def_cfa_offset 16
 3134 0004 00AF     		add	r7, sp, #0
 3135              		.cfi_def_cfa_register 7
 645:.\main.c      **** 
 646:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 647:.\main.c      **** // ----- INITIALIZATIONS ----------
 648:.\main.c      ****     CYGlobalIntEnable;
 3136              		.loc 1 648 0
 3137              	@ 648 ".\main.c" 1
 3138 0006 62B6     		CPSIE   i
 3139              	@ 0 "" 2
 649:.\main.c      ****     if(ENABLE_PWM)
 650:.\main.c      ****     {
 651:.\main.c      ****         PWM_1_Start();// starting the pwm
 3140              		.loc 1 651 0
 3141              		.thumb
 3142 0008 FFF7FEFF 		bl	PWM_1_Start
 652:.\main.c      ****         PWM_2_Start();// starting the pwm
 3143              		.loc 1 652 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 68


 3144 000c FFF7FEFF 		bl	PWM_2_Start
 653:.\main.c      ****     }
 654:.\main.c      ****     
 655:.\main.c      ****     if(ENABLE_ADC)
 656:.\main.c      ****     {
 657:.\main.c      ****         ADC_Start();
 658:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 659:.\main.c      ****         //ADC_StartConvert();
 660:.\main.c      ****         
 661:.\main.c      ****         //start the ADC timer for software trigger mode
 662:.\main.c      ****         Timer_TS_Start();
 663:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 664:.\main.c      ****     }
 665:.\main.c      ****     
 666:.\main.c      ****     if (ENABLE_QUAD)
 667:.\main.c      ****     {
 668:.\main.c      ****         QuadDec_M1_Start();
 3145              		.loc 1 668 0
 3146 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 669:.\main.c      ****         QuadDec_M2_Start();
 3147              		.loc 1 669 0
 3148 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 670:.\main.c      ****         
 671:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3149              		.loc 1 671 0
 3150 0018 3C48     		ldr	r0, .L190
 3151 001a FFF7FEFF 		bl	isr_quad1_StartEx
 672:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3152              		.loc 1 672 0
 3153 001e 3C48     		ldr	r0, .L190+4
 3154 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 673:.\main.c      ****         
 674:.\main.c      ****         Timer_1_Start();
 3155              		.loc 1 674 0
 3156 0024 FFF7FEFF 		bl	Timer_1_Start
 675:.\main.c      ****     }
 676:.\main.c      ****     
 677:.\main.c      ****     if(ENABLE_STOP){
 678:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 679:.\main.c      ****         
 680:.\main.c      ****     }
 681:.\main.c      ****     isr_button_StartEx(button);
 3157              		.loc 1 681 0
 3158 0028 3A48     		ldr	r0, .L190+8
 3159 002a FFF7FEFF 		bl	isr_button_StartEx
 682:.\main.c      ****     
 683:.\main.c      **** 
 684:.\main.c      ****     // ------USB SETUP ----------------    
 685:.\main.c      ****     if (USE_USB){    
 686:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3160              		.loc 1 686 0
 3161 002e 0020     		movs	r0, #0
 3162 0030 0121     		movs	r1, #1
 3163 0032 FFF7FEFF 		bl	USBUART_Start
 687:.\main.c      ****         if (USBUART_GetConfiguration())
 3164              		.loc 1 687 0
 3165 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 69


 3166 003a 0346     		mov	r3, r0
 3167 003c 002B     		cmp	r3, #0
 3168 003e 01D0     		beq	.L188
 688:.\main.c      ****             {
 689:.\main.c      ****                  USBUART_CDC_Init();
 3169              		.loc 1 689 0
 3170 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 3171              	.L188:
 690:.\main.c      ****             }
 691:.\main.c      ****     }
 692:.\main.c      ****     
 693:.\main.c      ****     if(BIN_ENABLED){
 694:.\main.c      ****         UART_clk_SetDividerValue(130);
 695:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 696:.\main.c      ****         UART_Start();
 697:.\main.c      ****         RF_BT_SELECT_Write(0);
 698:.\main.c      ****     }
 699:.\main.c      ****     
 700:.\main.c      ****     if(BT_ENABLED){
 701:.\main.c      ****         UART_clk_SetDividerValue(781);
 3172              		.loc 1 701 0
 3173 0044 4FF44370 		mov	r0, #780
 3174 0048 0121     		movs	r1, #1
 3175 004a FFF7FEFF 		bl	UART_clk_SetDividerRegister
 702:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3176              		.loc 1 702 0
 3177 004e 3248     		ldr	r0, .L190+12
 3178 0050 FFF7FEFF 		bl	isrRF_RX_StartEx
 703:.\main.c      ****         UART_Start();
 3179              		.loc 1 703 0
 3180 0054 FFF7FEFF 		bl	UART_Start
 704:.\main.c      ****         RF_BT_SELECT_Write(1);
 3181              		.loc 1 704 0
 3182 0058 0120     		movs	r0, #1
 3183 005a FFF7FEFF 		bl	RF_BT_SELECT_Write
 3184              	.L187:
 3185              	.LBB5:
 705:.\main.c      ****     }
 706:.\main.c      ****     
 707:.\main.c      ****     //usbPutString("Started");
 708:.\main.c      ****     for(;;)
 709:.\main.c      ****     {
 710:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 711:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 3186              		.loc 1 711 0
 3187 005e FFF7FEFF 		bl	Quad_Dec_response
 712:.\main.c      ****         if(BIN_ENABLED == 1)
 713:.\main.c      ****         {
 714:.\main.c      ****             handle_rx_binary();
 715:.\main.c      ****             print_RF();
 716:.\main.c      ****         }
 717:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 718:.\main.c      ****         
 719:.\main.c      ****         uint8 frontSensors[5];
 720:.\main.c      ****         readFrontSensors(frontSensors);
 3188              		.loc 1 720 0
 3189 0062 3B46     		mov	r3, r7
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 70


 3190 0064 1846     		mov	r0, r3
 3191 0066 FFF7FEFF 		bl	readFrontSensors
 721:.\main.c      ****         
 722:.\main.c      ****         switch(track_mode)
 3192              		.loc 1 722 0
 3193 006a 2C4B     		ldr	r3, .L190+16
 3194 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3195 006e 032B     		cmp	r3, #3
 3196 0070 20D8     		bhi	.L169
 3197 0072 01A2     		adr	r2, .L171
 3198 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3199              		.p2align 2
 3200              	.L171:
 3201 0078 B5000000 		.word	.L169+1
 3202 007c B5000000 		.word	.L169+1
 3203 0080 B5000000 		.word	.L169+1
 3204 0084 89000000 		.word	.L174+1
 3205              		.p2align 1
 3206              	.L174:
 723:.\main.c      ****         {
 724:.\main.c      ****             case SQUARE_TRACK:
 725:.\main.c      ****                 if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 3207              		.loc 1 725 0
 3208 0088 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3209 008a 012B     		cmp	r3, #1
 3210 008c 05D1     		bne	.L175
 3211              		.loc 1 725 0 is_stmt 0 discriminator 1
 3212 008e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3213 0090 012B     		cmp	r3, #1
 3214 0092 02D1     		bne	.L175
 726:.\main.c      ****                     initTurnLeft();
 3215              		.loc 1 726 0 is_stmt 1
 3216 0094 FFF7FEFF 		bl	initTurnLeft
 3217 0098 0BE0     		b	.L176
 3218              	.L175:
 727:.\main.c      ****                 }
 728:.\main.c      ****                 else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 3219              		.loc 1 728 0
 3220 009a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3221 009c 012B     		cmp	r3, #1
 3222 009e 05D1     		bne	.L177
 3223              		.loc 1 728 0 is_stmt 0 discriminator 1
 3224 00a0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3225 00a2 012B     		cmp	r3, #1
 3226 00a4 02D1     		bne	.L177
 729:.\main.c      ****                 {
 730:.\main.c      ****                     initTurnRight();
 3227              		.loc 1 730 0 is_stmt 1
 3228 00a6 FFF7FEFF 		bl	initTurnRight
 3229 00aa 02E0     		b	.L176
 3230              	.L177:
 731:.\main.c      ****                 }
 732:.\main.c      ****                 else inittrackLineZ();
 3231              		.loc 1 732 0
 3232 00ac FFF7FEFF 		bl	inittrackLineZ
 733:.\main.c      ****             break;
 3233              		.loc 1 733 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 71


 3234 00b0 FFE7     		b	.L189
 3235              	.L176:
 3236              	.L189:
 3237 00b2 00BF     		nop
 3238              	.L169:
 734:.\main.c      ****             case NO_TRACK:
 735:.\main.c      ****             break;
 736:.\main.c      ****             case CURVE_TRACK:
 737:.\main.c      ****             break;
 738:.\main.c      ****             case U_TRACK:
 739:.\main.c      ****             break;
 740:.\main.c      ****         }
 741:.\main.c      ****         
 742:.\main.c      ****         switch(movement_state)
 3239              		.loc 1 742 0
 3240 00b4 1A4B     		ldr	r3, .L190+20
 3241 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3242 00b8 062B     		cmp	r3, #6
 3243 00ba D0D8     		bhi	.L187
 3244 00bc 01A2     		adr	r2, .L180
 3245 00be 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3246 00c2 00BF     		.p2align 2
 3247              	.L180:
 3248 00c4 E1000000 		.word	.L179+1
 3249 00c8 E7000000 		.word	.L181+1
 3250 00cc ED000000 		.word	.L182+1
 3251 00d0 F3000000 		.word	.L183+1
 3252 00d4 F9000000 		.word	.L184+1
 3253 00d8 FF000000 		.word	.L185+1
 3254 00dc 05010000 		.word	.L186+1
 3255              		.p2align 1
 3256              	.L179:
 743:.\main.c      ****         {
 744:.\main.c      ****             case DRIVE:
 745:.\main.c      ****                 driveForwards();
 3257              		.loc 1 745 0
 3258 00e0 FFF7FEFF 		bl	driveForwards
 746:.\main.c      ****             break;
 3259              		.loc 1 746 0
 3260 00e4 10E0     		b	.L178
 3261              	.L181:
 747:.\main.c      ****             case LTURN:
 748:.\main.c      ****                 turnLeft();
 3262              		.loc 1 748 0
 3263 00e6 FFF7FEFF 		bl	turnLeft
 749:.\main.c      ****             break;
 3264              		.loc 1 749 0
 3265 00ea 0DE0     		b	.L178
 3266              	.L182:
 750:.\main.c      ****             case RTURN:
 751:.\main.c      ****                 turnRight();
 3267              		.loc 1 751 0
 3268 00ec FFF7FEFF 		bl	turnRight
 752:.\main.c      ****             break;
 3269              		.loc 1 752 0
 3270 00f0 0AE0     		b	.L178
 3271              	.L183:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 72


 753:.\main.c      ****             case STOPPED:
 754:.\main.c      ****                 brakeMotor();
 3272              		.loc 1 754 0
 3273 00f2 FFF7FEFF 		bl	brakeMotor
 755:.\main.c      ****             break;
 3274              		.loc 1 755 0
 3275 00f6 07E0     		b	.L178
 3276              	.L184:
 756:.\main.c      ****             case TRACKING:
 757:.\main.c      ****                 trackLine();
 3277              		.loc 1 757 0
 3278 00f8 FFF7FEFF 		bl	trackLine
 758:.\main.c      ****             break;
 3279              		.loc 1 758 0
 3280 00fc 04E0     		b	.L178
 3281              	.L185:
 759:.\main.c      ****             case TRACKING_U:
 760:.\main.c      ****                 trackLineU();
 3282              		.loc 1 760 0
 3283 00fe FFF7FEFF 		bl	trackLineU
 761:.\main.c      ****             break;
 3284              		.loc 1 761 0
 3285 0102 01E0     		b	.L178
 3286              	.L186:
 762:.\main.c      ****             case TRACKING_SOFT:
 763:.\main.c      ****                 trackLineZ();
 3287              		.loc 1 763 0
 3288 0104 FFF7FEFF 		bl	trackLineZ
 3289              	.L178:
 3290              	.LBE5:
 764:.\main.c      ****         }
 765:.\main.c      ****         //handle_usb();        
 766:.\main.c      ****     }   
 3291              		.loc 1 766 0
 3292 0108 A9E7     		b	.L187
 3293              	.L191:
 3294 010a 00BF     		.align	2
 3295              	.L190:
 3296 010c 00000000 		.word	isr_quad1
 3297 0110 00000000 		.word	isr_turn_timer
 3298 0114 00000000 		.word	button
 3299 0118 00000000 		.word	BT_rxInt
 3300 011c 00000000 		.word	track_mode
 3301 0120 00000000 		.word	movement_state
 3302              		.cfi_endproc
 3303              	.LFE97:
 3304              		.size	main, .-main
 3305              		.section	.text.usbPutString,"ax",%progbits
 3306              		.align	2
 3307              		.global	usbPutString
 3308              		.thumb
 3309              		.thumb_func
 3310              		.type	usbPutString, %function
 3311              	usbPutString:
 3312              	.LFB98:
 767:.\main.c      **** }
 768:.\main.c      **** //* ========================================
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 73


 769:.\main.c      **** void usbPutString(char *s)
 770:.\main.c      **** {
 3313              		.loc 1 770 0
 3314              		.cfi_startproc
 3315              		@ args = 0, pretend = 0, frame = 16
 3316              		@ frame_needed = 1, uses_anonymous_args = 0
 3317 0000 80B5     		push	{r7, lr}
 3318              		.cfi_def_cfa_offset 8
 3319              		.cfi_offset 7, -8
 3320              		.cfi_offset 14, -4
 3321 0002 84B0     		sub	sp, sp, #16
 3322              		.cfi_def_cfa_offset 24
 3323 0004 00AF     		add	r7, sp, #0
 3324              		.cfi_def_cfa_register 7
 3325 0006 7860     		str	r0, [r7, #4]
 771:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 772:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 773:.\main.c      **** //  length to 62 char (63rd char is a '!')
 774:.\main.c      ****     if (USE_USB && portOpen)    
 3326              		.loc 1 774 0
 3327 0008 154B     		ldr	r3, .L196
 3328 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3329 000c 002B     		cmp	r3, #0
 3330 000e 23D0     		beq	.L192
 3331              	.LBB6:
 775:.\main.c      ****     {
 776:.\main.c      ****             uint32 cnt = 0;
 3332              		.loc 1 776 0
 3333 0010 0023     		movs	r3, #0
 3334 0012 FB60     		str	r3, [r7, #12]
 777:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 3335              		.loc 1 777 0
 3336 0014 0AE0     		b	.L194
 3337              	.L195:
 778:.\main.c      ****             {
 779:.\main.c      ****                 cnt++;
 3338              		.loc 1 779 0
 3339 0016 FB68     		ldr	r3, [r7, #12]
 3340 0018 0133     		adds	r3, r3, #1
 3341 001a FB60     		str	r3, [r7, #12]
 780:.\main.c      ****                 if(cnt == 3000000){
 3342              		.loc 1 780 0
 3343 001c FB68     		ldr	r3, [r7, #12]
 3344 001e 114A     		ldr	r2, .L196+4
 3345 0020 9342     		cmp	r3, r2
 3346 0022 03D1     		bne	.L194
 781:.\main.c      ****                     portOpen = 0;
 3347              		.loc 1 781 0
 3348 0024 0E4B     		ldr	r3, .L196
 3349 0026 0022     		movs	r2, #0
 3350 0028 1A70     		strb	r2, [r3]
 782:.\main.c      ****                     return;
 3351              		.loc 1 782 0
 3352 002a 15E0     		b	.L192
 3353              	.L194:
 777:.\main.c      ****             {
 3354              		.loc 1 777 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 74


 3355 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 3356 0030 0346     		mov	r3, r0
 3357 0032 002B     		cmp	r3, #0
 3358 0034 EFD0     		beq	.L195
 783:.\main.c      ****                 }
 784:.\main.c      ****             }
 785:.\main.c      ****             s[63]='\0';
 3359              		.loc 1 785 0
 3360 0036 7B68     		ldr	r3, [r7, #4]
 3361 0038 3F33     		adds	r3, r3, #63
 3362 003a 0022     		movs	r2, #0
 3363 003c 1A70     		strb	r2, [r3]
 786:.\main.c      ****             s[62]='!';
 3364              		.loc 1 786 0
 3365 003e 7B68     		ldr	r3, [r7, #4]
 3366 0040 3E33     		adds	r3, r3, #62
 3367 0042 2122     		movs	r2, #33
 3368 0044 1A70     		strb	r2, [r3]
 787:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 3369              		.loc 1 787 0
 3370 0046 7868     		ldr	r0, [r7, #4]
 3371 0048 FFF7FEFF 		bl	strlen
 3372 004c 0346     		mov	r3, r0
 3373 004e 9BB2     		uxth	r3, r3
 3374 0050 7868     		ldr	r0, [r7, #4]
 3375 0052 1946     		mov	r1, r3
 3376 0054 FFF7FEFF 		bl	USBUART_PutData
 3377              	.L192:
 3378              	.LBE6:
 788:.\main.c      ****     }
 789:.\main.c      **** }
 3379              		.loc 1 789 0
 3380 0058 1037     		adds	r7, r7, #16
 3381              		.cfi_def_cfa_offset 8
 3382 005a BD46     		mov	sp, r7
 3383              		.cfi_def_cfa_register 13
 3384              		@ sp needed
 3385 005c 80BD     		pop	{r7, pc}
 3386              	.L197:
 3387 005e 00BF     		.align	2
 3388              	.L196:
 3389 0060 00000000 		.word	portOpen
 3390 0064 C0C62D00 		.word	3000000
 3391              		.cfi_endproc
 3392              	.LFE98:
 3393              		.size	usbPutString, .-usbPutString
 3394              		.section	.text.usbPutChar,"ax",%progbits
 3395              		.align	2
 3396              		.global	usbPutChar
 3397              		.thumb
 3398              		.thumb_func
 3399              		.type	usbPutChar, %function
 3400              	usbPutChar:
 3401              	.LFB99:
 790:.\main.c      **** //* ========================================
 791:.\main.c      **** void usbPutChar(char c)
 792:.\main.c      **** {
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 75


 3402              		.loc 1 792 0
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 16
 3405              		@ frame_needed = 1, uses_anonymous_args = 0
 3406 0000 80B5     		push	{r7, lr}
 3407              		.cfi_def_cfa_offset 8
 3408              		.cfi_offset 7, -8
 3409              		.cfi_offset 14, -4
 3410 0002 84B0     		sub	sp, sp, #16
 3411              		.cfi_def_cfa_offset 24
 3412 0004 00AF     		add	r7, sp, #0
 3413              		.cfi_def_cfa_register 7
 3414 0006 0346     		mov	r3, r0
 3415 0008 FB71     		strb	r3, [r7, #7]
 793:.\main.c      ****     if (USE_USB && portOpen)    
 3416              		.loc 1 793 0
 3417 000a 0F4B     		ldr	r3, .L202
 3418 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3419 000e 002B     		cmp	r3, #0
 3420 0010 16D0     		beq	.L198
 3421              	.LBB7:
 794:.\main.c      ****     {    
 795:.\main.c      ****         uint32 cnt = 0;
 3422              		.loc 1 795 0
 3423 0012 0023     		movs	r3, #0
 3424 0014 FB60     		str	r3, [r7, #12]
 796:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 3425              		.loc 1 796 0
 3426 0016 0AE0     		b	.L200
 3427              	.L201:
 797:.\main.c      ****             cnt++;
 3428              		.loc 1 797 0
 3429 0018 FB68     		ldr	r3, [r7, #12]
 3430 001a 0133     		adds	r3, r3, #1
 3431 001c FB60     		str	r3, [r7, #12]
 798:.\main.c      ****             if(cnt == 3000000){
 3432              		.loc 1 798 0
 3433 001e FB68     		ldr	r3, [r7, #12]
 3434 0020 0A4A     		ldr	r2, .L202+4
 3435 0022 9342     		cmp	r3, r2
 3436 0024 03D1     		bne	.L200
 799:.\main.c      ****                 portOpen = 0;
 3437              		.loc 1 799 0
 3438 0026 084B     		ldr	r3, .L202
 3439 0028 0022     		movs	r2, #0
 3440 002a 1A70     		strb	r2, [r3]
 800:.\main.c      ****                 return;
 3441              		.loc 1 800 0
 3442 002c 08E0     		b	.L198
 3443              	.L200:
 796:.\main.c      ****             cnt++;
 3444              		.loc 1 796 0
 3445 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 3446 0032 0346     		mov	r3, r0
 3447 0034 002B     		cmp	r3, #0
 3448 0036 EFD0     		beq	.L201
 801:.\main.c      ****             }
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 76


 802:.\main.c      ****         }
 803:.\main.c      ****         USBUART_PutChar(c);
 3449              		.loc 1 803 0
 3450 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3451 003a 1846     		mov	r0, r3
 3452 003c FFF7FEFF 		bl	USBUART_PutChar
 3453              	.L198:
 3454              	.LBE7:
 804:.\main.c      ****     }    
 805:.\main.c      **** }
 3455              		.loc 1 805 0
 3456 0040 1037     		adds	r7, r7, #16
 3457              		.cfi_def_cfa_offset 8
 3458 0042 BD46     		mov	sp, r7
 3459              		.cfi_def_cfa_register 13
 3460              		@ sp needed
 3461 0044 80BD     		pop	{r7, pc}
 3462              	.L203:
 3463 0046 00BF     		.align	2
 3464              	.L202:
 3465 0048 00000000 		.word	portOpen
 3466 004c C0C62D00 		.word	3000000
 3467              		.cfi_endproc
 3468              	.LFE99:
 3469              		.size	usbPutChar, .-usbPutChar
 3470              		.section	.text.uart_set_PWM,"ax",%progbits
 3471              		.align	2
 3472              		.global	uart_set_PWM
 3473              		.thumb
 3474              		.thumb_func
 3475              		.type	uart_set_PWM, %function
 3476              	uart_set_PWM:
 3477              	.LFB100:
 806:.\main.c      **** //* ========================================
 807:.\main.c      **** 
 808:.\main.c      **** void uart_set_PWM()
 809:.\main.c      **** {
 3478              		.loc 1 809 0
 3479              		.cfi_startproc
 3480              		@ args = 0, pretend = 0, frame = 8
 3481              		@ frame_needed = 1, uses_anonymous_args = 0
 3482 0000 80B5     		push	{r7, lr}
 3483              		.cfi_def_cfa_offset 8
 3484              		.cfi_offset 7, -8
 3485              		.cfi_offset 14, -4
 3486 0002 82B0     		sub	sp, sp, #8
 3487              		.cfi_def_cfa_offset 16
 3488 0004 00AF     		add	r7, sp, #0
 3489              		.cfi_def_cfa_register 7
 810:.\main.c      ****     uint8 c;
 811:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 3490              		.loc 1 811 0
 3491 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 3492 000a 0346     		mov	r3, r0
 3493 000c 002B     		cmp	r3, #0
 3494 000e 11D0     		beq	.L204
 812:.\main.c      ****        {  
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 77


 813:.\main.c      ****             c = USBUART_GetChar();
 3495              		.loc 1 813 0
 3496 0010 FFF7FEFF 		bl	USBUART_GetChar
 3497 0014 0346     		mov	r3, r0
 3498 0016 FB71     		strb	r3, [r7, #7]
 814:.\main.c      ****             
 815:.\main.c      ****             if(c <= 100 && c > 0){
 3499              		.loc 1 815 0
 3500 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3501 001a 642B     		cmp	r3, #100
 3502 001c 0AD8     		bhi	.L204
 3503              		.loc 1 815 0 is_stmt 0 discriminator 1
 3504 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3505 0020 002B     		cmp	r3, #0
 3506 0022 07D0     		beq	.L204
 816:.\main.c      ****                 PWM_1_WriteCompare(c);
 3507              		.loc 1 816 0 is_stmt 1
 3508 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3509 0026 1846     		mov	r0, r3
 3510 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 817:.\main.c      ****                 usbPutString(c);
 3511              		.loc 1 817 0
 3512 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3513 002e 1846     		mov	r0, r3
 3514 0030 FFF7FEFF 		bl	usbPutString
 3515              	.L204:
 818:.\main.c      ****             }
 819:.\main.c      ****        }
 820:.\main.c      **** }
 3516              		.loc 1 820 0
 3517 0034 0837     		adds	r7, r7, #8
 3518              		.cfi_def_cfa_offset 8
 3519 0036 BD46     		mov	sp, r7
 3520              		.cfi_def_cfa_register 13
 3521              		@ sp needed
 3522 0038 80BD     		pop	{r7, pc}
 3523              		.cfi_endproc
 3524              	.LFE100:
 3525              		.size	uart_set_PWM, .-uart_set_PWM
 3526 003a 00BF     		.text
 3527              	.Letext0:
 3528              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3529              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3530              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3531              		.file 5 ".\\vars.h"
 3532              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 3533              		.section	.debug_info,"",%progbits
 3534              	.Ldebug_info0:
 3535 0000 150B0000 		.4byte	0xb15
 3536 0004 0400     		.2byte	0x4
 3537 0006 00000000 		.4byte	.Ldebug_abbrev0
 3538 000a 04       		.byte	0x4
 3539 000b 01       		.uleb128 0x1
 3540 000c 88030000 		.4byte	.LASF155
 3541 0010 01       		.byte	0x1
 3542 0011 7E070000 		.4byte	.LASF156
 3543 0015 1F070000 		.4byte	.LASF157
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 78


 3544 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3545 001d 00000000 		.4byte	0
 3546 0021 00000000 		.4byte	.Ldebug_line0
 3547 0025 02       		.uleb128 0x2
 3548 0026 01       		.byte	0x1
 3549 0027 06       		.byte	0x6
 3550 0028 A7060000 		.4byte	.LASF0
 3551 002c 02       		.uleb128 0x2
 3552 002d 01       		.byte	0x1
 3553 002e 08       		.byte	0x8
 3554 002f 0A060000 		.4byte	.LASF1
 3555 0033 02       		.uleb128 0x2
 3556 0034 02       		.byte	0x2
 3557 0035 05       		.byte	0x5
 3558 0036 E9040000 		.4byte	.LASF2
 3559 003a 02       		.uleb128 0x2
 3560 003b 02       		.byte	0x2
 3561 003c 07       		.byte	0x7
 3562 003d B3060000 		.4byte	.LASF3
 3563 0041 03       		.uleb128 0x3
 3564 0042 6D000000 		.4byte	.LASF11
 3565 0046 02       		.byte	0x2
 3566 0047 3F       		.byte	0x3f
 3567 0048 4C000000 		.4byte	0x4c
 3568 004c 02       		.uleb128 0x2
 3569 004d 04       		.byte	0x4
 3570 004e 05       		.byte	0x5
 3571 004f 13050000 		.4byte	.LASF4
 3572 0053 02       		.uleb128 0x2
 3573 0054 04       		.byte	0x4
 3574 0055 07       		.byte	0x7
 3575 0056 C1050000 		.4byte	.LASF5
 3576 005a 02       		.uleb128 0x2
 3577 005b 08       		.byte	0x8
 3578 005c 05       		.byte	0x5
 3579 005d 5B030000 		.4byte	.LASF6
 3580 0061 02       		.uleb128 0x2
 3581 0062 08       		.byte	0x8
 3582 0063 07       		.byte	0x7
 3583 0064 CA010000 		.4byte	.LASF7
 3584 0068 04       		.uleb128 0x4
 3585 0069 04       		.byte	0x4
 3586 006a 05       		.byte	0x5
 3587 006b 696E7400 		.ascii	"int\000"
 3588 006f 02       		.uleb128 0x2
 3589 0070 04       		.byte	0x4
 3590 0071 07       		.byte	0x7
 3591 0072 55000000 		.4byte	.LASF8
 3592 0076 02       		.uleb128 0x2
 3593 0077 04       		.byte	0x4
 3594 0078 07       		.byte	0x7
 3595 0079 B8050000 		.4byte	.LASF9
 3596 007d 05       		.uleb128 0x5
 3597 007e 04       		.byte	0x4
 3598 007f 83000000 		.4byte	0x83
 3599 0083 02       		.uleb128 0x2
 3600 0084 01       		.byte	0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 79


 3601 0085 08       		.byte	0x8
 3602 0086 E9020000 		.4byte	.LASF10
 3603 008a 03       		.uleb128 0x3
 3604 008b DF050000 		.4byte	.LASF12
 3605 008f 03       		.byte	0x3
 3606 0090 2C       		.byte	0x2c
 3607 0091 41000000 		.4byte	0x41
 3608 0095 06       		.uleb128 0x6
 3609 0096 F0060000 		.4byte	.LASF13
 3610 009a 04       		.byte	0x4
 3611 009b 9201     		.2byte	0x192
 3612 009d 2C000000 		.4byte	0x2c
 3613 00a1 06       		.uleb128 0x6
 3614 00a2 1A030000 		.4byte	.LASF14
 3615 00a6 04       		.byte	0x4
 3616 00a7 9301     		.2byte	0x193
 3617 00a9 3A000000 		.4byte	0x3a
 3618 00ad 06       		.uleb128 0x6
 3619 00ae 43040000 		.4byte	.LASF15
 3620 00b2 04       		.byte	0x4
 3621 00b3 9401     		.2byte	0x194
 3622 00b5 53000000 		.4byte	0x53
 3623 00b9 06       		.uleb128 0x6
 3624 00ba 21030000 		.4byte	.LASF16
 3625 00be 04       		.byte	0x4
 3626 00bf 9501     		.2byte	0x195
 3627 00c1 25000000 		.4byte	0x25
 3628 00c5 06       		.uleb128 0x6
 3629 00c6 77000000 		.4byte	.LASF17
 3630 00ca 04       		.byte	0x4
 3631 00cb 9601     		.2byte	0x196
 3632 00cd 33000000 		.4byte	0x33
 3633 00d1 02       		.uleb128 0x2
 3634 00d2 04       		.byte	0x4
 3635 00d3 04       		.byte	0x4
 3636 00d4 75010000 		.4byte	.LASF18
 3637 00d8 02       		.uleb128 0x2
 3638 00d9 08       		.byte	0x8
 3639 00da 04       		.byte	0x4
 3640 00db F6060000 		.4byte	.LASF19
 3641 00df 02       		.uleb128 0x2
 3642 00e0 08       		.byte	0x8
 3643 00e1 04       		.byte	0x4
 3644 00e2 A2040000 		.4byte	.LASF20
 3645 00e6 07       		.uleb128 0x7
 3646 00e7 4B060000 		.4byte	.LASF28
 3647 00eb 01       		.byte	0x1
 3648 00ec 05       		.byte	0x5
 3649 00ed 48       		.byte	0x48
 3650 00ee 1D010000 		.4byte	0x11d
 3651 00f2 08       		.uleb128 0x8
 3652 00f3 94010000 		.4byte	.LASF21
 3653 00f7 00       		.sleb128 0
 3654 00f8 08       		.uleb128 0x8
 3655 00f9 8A000000 		.4byte	.LASF22
 3656 00fd 01       		.sleb128 1
 3657 00fe 08       		.uleb128 0x8
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 80


 3658 00ff 0A000000 		.4byte	.LASF23
 3659 0103 02       		.sleb128 2
 3660 0104 08       		.uleb128 0x8
 3661 0105 91040000 		.4byte	.LASF24
 3662 0109 03       		.sleb128 3
 3663 010a 08       		.uleb128 0x8
 3664 010b 9D000000 		.4byte	.LASF25
 3665 010f 04       		.sleb128 4
 3666 0110 08       		.uleb128 0x8
 3667 0111 47010000 		.4byte	.LASF26
 3668 0115 05       		.sleb128 5
 3669 0116 08       		.uleb128 0x8
 3670 0117 6D050000 		.4byte	.LASF27
 3671 011b 06       		.sleb128 6
 3672 011c 00       		.byte	0
 3673 011d 07       		.uleb128 0x7
 3674 011e C8000000 		.4byte	.LASF29
 3675 0122 01       		.byte	0x1
 3676 0123 05       		.byte	0x5
 3677 0124 49       		.byte	0x49
 3678 0125 42010000 		.4byte	0x142
 3679 0129 08       		.uleb128 0x8
 3680 012a 55050000 		.4byte	.LASF30
 3681 012e 00       		.sleb128 0
 3682 012f 08       		.uleb128 0x8
 3683 0130 3F030000 		.4byte	.LASF31
 3684 0134 01       		.sleb128 1
 3685 0135 08       		.uleb128 0x8
 3686 0136 2A050000 		.4byte	.LASF32
 3687 013a 02       		.sleb128 2
 3688 013b 08       		.uleb128 0x8
 3689 013c 01010000 		.4byte	.LASF33
 3690 0140 03       		.sleb128 3
 3691 0141 00       		.byte	0
 3692 0142 09       		.uleb128 0x9
 3693 0143 56040000 		.4byte	.LASF158
 3694 0147 20       		.byte	0x20
 3695 0148 05       		.byte	0x5
 3696 0149 4F       		.byte	0x4f
 3697 014a 1B020000 		.4byte	0x21b
 3698 014e 0A       		.uleb128 0xa
 3699 014f 6E040000 		.4byte	.LASF34
 3700 0153 05       		.byte	0x5
 3701 0154 50       		.byte	0x50
 3702 0155 B9000000 		.4byte	0xb9
 3703 0159 00       		.byte	0
 3704 015a 0A       		.uleb128 0xa
 3705 015b 8E010000 		.4byte	.LASF35
 3706 015f 05       		.byte	0x5
 3707 0160 51       		.byte	0x51
 3708 0161 95000000 		.4byte	0x95
 3709 0165 01       		.byte	0x1
 3710 0166 0A       		.uleb128 0xa
 3711 0167 EE050000 		.4byte	.LASF36
 3712 016b 05       		.byte	0x5
 3713 016c 52       		.byte	0x52
 3714 016d C5000000 		.4byte	0xc5
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 81


 3715 0171 02       		.byte	0x2
 3716 0172 0A       		.uleb128 0xa
 3717 0173 BD020000 		.4byte	.LASF37
 3718 0177 05       		.byte	0x5
 3719 0178 53       		.byte	0x53
 3720 0179 C5000000 		.4byte	0xc5
 3721 017d 04       		.byte	0x4
 3722 017e 0A       		.uleb128 0xa
 3723 017f C6060000 		.4byte	.LASF38
 3724 0183 05       		.byte	0x5
 3725 0184 54       		.byte	0x54
 3726 0185 C5000000 		.4byte	0xc5
 3727 0189 06       		.byte	0x6
 3728 018a 0A       		.uleb128 0xa
 3729 018b 51070000 		.4byte	.LASF39
 3730 018f 05       		.byte	0x5
 3731 0190 55       		.byte	0x55
 3732 0191 C5000000 		.4byte	0xc5
 3733 0195 08       		.byte	0x8
 3734 0196 0A       		.uleb128 0xa
 3735 0197 1F040000 		.4byte	.LASF40
 3736 019b 05       		.byte	0x5
 3737 019c 56       		.byte	0x56
 3738 019d C5000000 		.4byte	0xc5
 3739 01a1 0A       		.byte	0xa
 3740 01a2 0A       		.uleb128 0xa
 3741 01a3 EE020000 		.4byte	.LASF41
 3742 01a7 05       		.byte	0x5
 3743 01a8 57       		.byte	0x57
 3744 01a9 C5000000 		.4byte	0xc5
 3745 01ad 0C       		.byte	0xc
 3746 01ae 0A       		.uleb128 0xa
 3747 01af 73040000 		.4byte	.LASF42
 3748 01b3 05       		.byte	0x5
 3749 01b4 58       		.byte	0x58
 3750 01b5 C5000000 		.4byte	0xc5
 3751 01b9 0E       		.byte	0xe
 3752 01ba 0A       		.uleb128 0xa
 3753 01bb 76030000 		.4byte	.LASF43
 3754 01bf 05       		.byte	0x5
 3755 01c0 59       		.byte	0x59
 3756 01c1 C5000000 		.4byte	0xc5
 3757 01c5 10       		.byte	0x10
 3758 01c6 0A       		.uleb128 0xa
 3759 01c7 97050000 		.4byte	.LASF44
 3760 01cb 05       		.byte	0x5
 3761 01cc 5A       		.byte	0x5a
 3762 01cd C5000000 		.4byte	0xc5
 3763 01d1 12       		.byte	0x12
 3764 01d2 0A       		.uleb128 0xa
 3765 01d3 75070000 		.4byte	.LASF45
 3766 01d7 05       		.byte	0x5
 3767 01d8 5B       		.byte	0x5b
 3768 01d9 C5000000 		.4byte	0xc5
 3769 01dd 14       		.byte	0x14
 3770 01de 0A       		.uleb128 0xa
 3771 01df 26030000 		.4byte	.LASF46
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 82


 3772 01e3 05       		.byte	0x5
 3773 01e4 5C       		.byte	0x5c
 3774 01e5 C5000000 		.4byte	0xc5
 3775 01e9 16       		.byte	0x16
 3776 01ea 0A       		.uleb128 0xa
 3777 01eb C0000000 		.4byte	.LASF47
 3778 01ef 05       		.byte	0x5
 3779 01f0 5D       		.byte	0x5d
 3780 01f1 C5000000 		.4byte	0xc5
 3781 01f5 18       		.byte	0x18
 3782 01f6 0A       		.uleb128 0xa
 3783 01f7 12030000 		.4byte	.LASF48
 3784 01fb 05       		.byte	0x5
 3785 01fc 5E       		.byte	0x5e
 3786 01fd C5000000 		.4byte	0xc5
 3787 0201 1A       		.byte	0x1a
 3788 0202 0A       		.uleb128 0xa
 3789 0203 16040000 		.4byte	.LASF49
 3790 0207 05       		.byte	0x5
 3791 0208 5F       		.byte	0x5f
 3792 0209 C5000000 		.4byte	0xc5
 3793 020d 1C       		.byte	0x1c
 3794 020e 0A       		.uleb128 0xa
 3795 020f 5E010000 		.4byte	.LASF50
 3796 0213 05       		.byte	0x5
 3797 0214 60       		.byte	0x60
 3798 0215 C5000000 		.4byte	0xc5
 3799 0219 1E       		.byte	0x1e
 3800 021a 00       		.byte	0
 3801 021b 0B       		.uleb128 0xb
 3802 021c 0E070000 		.4byte	.LASF56
 3803 0220 01       		.byte	0x1
 3804 0221 29       		.byte	0x29
 3805 0222 00000000 		.4byte	.LFB63
 3806 0226 60010000 		.4byte	.LFE63-.LFB63
 3807 022a 01       		.uleb128 0x1
 3808 022b 9C       		.byte	0x9c
 3809 022c 65020000 		.4byte	0x265
 3810 0230 0C       		.uleb128 0xc
 3811 0231 10000000 		.4byte	.LBB2
 3812 0235 34010000 		.4byte	.LBE2-.LBB2
 3813 0239 0D       		.uleb128 0xd
 3814 023a B3000000 		.4byte	.LASF51
 3815 023e 01       		.byte	0x1
 3816 023f 2F       		.byte	0x2f
 3817 0240 A1000000 		.4byte	0xa1
 3818 0244 02       		.uleb128 0x2
 3819 0245 91       		.byte	0x91
 3820 0246 76       		.sleb128 -10
 3821 0247 0D       		.uleb128 0xd
 3822 0248 D3050000 		.4byte	.LASF52
 3823 024c 01       		.byte	0x1
 3824 024d 31       		.byte	0x31
 3825 024e 65020000 		.4byte	0x265
 3826 0252 02       		.uleb128 0x2
 3827 0253 91       		.byte	0x91
 3828 0254 68       		.sleb128 -24
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 83


 3829 0255 0D       		.uleb128 0xd
 3830 0256 9A010000 		.4byte	.LASF53
 3831 025a 01       		.byte	0x1
 3832 025b 32       		.byte	0x32
 3833 025c 65020000 		.4byte	0x265
 3834 0260 02       		.uleb128 0x2
 3835 0261 91       		.byte	0x91
 3836 0262 5C       		.sleb128 -36
 3837 0263 00       		.byte	0
 3838 0264 00       		.byte	0
 3839 0265 0E       		.uleb128 0xe
 3840 0266 83000000 		.4byte	0x83
 3841 026a 75020000 		.4byte	0x275
 3842 026e 0F       		.uleb128 0xf
 3843 026f 76000000 		.4byte	0x76
 3844 0273 0B       		.byte	0xb
 3845 0274 00       		.byte	0
 3846 0275 10       		.uleb128 0x10
 3847 0276 07030000 		.4byte	.LASF54
 3848 027a 01       		.byte	0x1
 3849 027b A4       		.byte	0xa4
 3850 027c 00000000 		.4byte	.LFB64
 3851 0280 18000000 		.4byte	.LFE64-.LFB64
 3852 0284 01       		.uleb128 0x1
 3853 0285 9C       		.byte	0x9c
 3854 0286 99020000 		.4byte	0x299
 3855 028a 11       		.uleb128 0x11
 3856 028b 64697200 		.ascii	"dir\000"
 3857 028f 01       		.byte	0x1
 3858 0290 A4       		.byte	0xa4
 3859 0291 95000000 		.4byte	0x95
 3860 0295 02       		.uleb128 0x2
 3861 0296 91       		.byte	0x91
 3862 0297 77       		.sleb128 -9
 3863 0298 00       		.byte	0
 3864 0299 10       		.uleb128 0x10
 3865 029a 33030000 		.4byte	.LASF55
 3866 029e 01       		.byte	0x1
 3867 029f A9       		.byte	0xa9
 3868 02a0 00000000 		.4byte	.LFB65
 3869 02a4 18000000 		.4byte	.LFE65-.LFB65
 3870 02a8 01       		.uleb128 0x1
 3871 02a9 9C       		.byte	0x9c
 3872 02aa BD020000 		.4byte	0x2bd
 3873 02ae 11       		.uleb128 0x11
 3874 02af 64697200 		.ascii	"dir\000"
 3875 02b3 01       		.byte	0x1
 3876 02b4 A9       		.byte	0xa9
 3877 02b5 95000000 		.4byte	0x95
 3878 02b9 02       		.uleb128 0x2
 3879 02ba 91       		.byte	0x91
 3880 02bb 77       		.sleb128 -9
 3881 02bc 00       		.byte	0
 3882 02bd 12       		.uleb128 0x12
 3883 02be 51060000 		.4byte	.LASF57
 3884 02c2 01       		.byte	0x1
 3885 02c3 AE       		.byte	0xae
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 84


 3886 02c4 00000000 		.4byte	.LFB66
 3887 02c8 54000000 		.4byte	.LFE66-.LFB66
 3888 02cc 01       		.uleb128 0x1
 3889 02cd 9C       		.byte	0x9c
 3890 02ce E1020000 		.4byte	0x2e1
 3891 02d2 13       		.uleb128 0x13
 3892 02d3 6D657300 		.ascii	"mes\000"
 3893 02d7 01       		.byte	0x1
 3894 02d8 B3       		.byte	0xb3
 3895 02d9 E1020000 		.4byte	0x2e1
 3896 02dd 02       		.uleb128 0x2
 3897 02de 91       		.byte	0x91
 3898 02df 68       		.sleb128 -24
 3899 02e0 00       		.byte	0
 3900 02e1 0E       		.uleb128 0xe
 3901 02e2 83000000 		.4byte	0x83
 3902 02e6 F1020000 		.4byte	0x2f1
 3903 02ea 0F       		.uleb128 0xf
 3904 02eb 76000000 		.4byte	0x76
 3905 02ef 0F       		.byte	0xf
 3906 02f0 00       		.byte	0
 3907 02f1 10       		.uleb128 0x10
 3908 02f2 7B010000 		.4byte	.LASF58
 3909 02f6 01       		.byte	0x1
 3910 02f7 B8       		.byte	0xb8
 3911 02f8 00000000 		.4byte	.LFB67
 3912 02fc F4000000 		.4byte	.LFE67-.LFB67
 3913 0300 01       		.uleb128 0x1
 3914 0301 9C       		.byte	0x9c
 3915 0302 3F030000 		.4byte	0x33f
 3916 0306 14       		.uleb128 0x14
 3917 0307 7B050000 		.4byte	.LASF59
 3918 030b 01       		.byte	0x1
 3919 030c B8       		.byte	0xb8
 3920 030d D8000000 		.4byte	0xd8
 3921 0311 02       		.uleb128 0x2
 3922 0312 91       		.byte	0x91
 3923 0313 68       		.sleb128 -24
 3924 0314 14       		.uleb128 0x14
 3925 0315 55030000 		.4byte	.LASF60
 3926 0319 01       		.byte	0x1
 3927 031a B8       		.byte	0xb8
 3928 031b D8000000 		.4byte	0xd8
 3929 031f 02       		.uleb128 0x2
 3930 0320 91       		.byte	0x91
 3931 0321 60       		.sleb128 -32
 3932 0322 0D       		.uleb128 0xd
 3933 0323 A8010000 		.4byte	.LASF61
 3934 0327 01       		.byte	0x1
 3935 0328 CD       		.byte	0xcd
 3936 0329 C5000000 		.4byte	0xc5
 3937 032d 02       		.uleb128 0x2
 3938 032e 91       		.byte	0x91
 3939 032f 76       		.sleb128 -10
 3940 0330 0D       		.uleb128 0xd
 3941 0331 4A040000 		.4byte	.LASF62
 3942 0335 01       		.byte	0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 85


 3943 0336 CE       		.byte	0xce
 3944 0337 C5000000 		.4byte	0xc5
 3945 033b 02       		.uleb128 0x2
 3946 033c 91       		.byte	0x91
 3947 033d 74       		.sleb128 -12
 3948 033e 00       		.byte	0
 3949 033f 15       		.uleb128 0x15
 3950 0340 62060000 		.4byte	.LASF63
 3951 0344 01       		.byte	0x1
 3952 0345 D4       		.byte	0xd4
 3953 0346 00000000 		.4byte	.LFB68
 3954 034a 18000000 		.4byte	.LFE68-.LFB68
 3955 034e 01       		.uleb128 0x1
 3956 034f 9C       		.byte	0x9c
 3957 0350 15       		.uleb128 0x15
 3958 0351 87070000 		.4byte	.LASF64
 3959 0355 01       		.byte	0x1
 3960 0356 DA       		.byte	0xda
 3961 0357 00000000 		.4byte	.LFB69
 3962 035b 18000000 		.4byte	.LFE69-.LFB69
 3963 035f 01       		.uleb128 0x1
 3964 0360 9C       		.byte	0x9c
 3965 0361 15       		.uleb128 0x15
 3966 0362 F9050000 		.4byte	.LASF65
 3967 0366 01       		.byte	0x1
 3968 0367 E0       		.byte	0xe0
 3969 0368 00000000 		.4byte	.LFB70
 3970 036c 22000000 		.4byte	.LFE70-.LFB70
 3971 0370 01       		.uleb128 0x1
 3972 0371 9C       		.byte	0x9c
 3973 0372 15       		.uleb128 0x15
 3974 0373 B3010000 		.4byte	.LASF66
 3975 0377 01       		.byte	0x1
 3976 0378 E7       		.byte	0xe7
 3977 0379 00000000 		.4byte	.LFB71
 3978 037d 1C000000 		.4byte	.LFE71-.LFB71
 3979 0381 01       		.uleb128 0x1
 3980 0382 9C       		.byte	0x9c
 3981 0383 15       		.uleb128 0x15
 3982 0384 8D050000 		.4byte	.LASF67
 3983 0388 01       		.byte	0x1
 3984 0389 EC       		.byte	0xec
 3985 038a 00000000 		.4byte	.LFB72
 3986 038e 28000000 		.4byte	.LFE72-.LFB72
 3987 0392 01       		.uleb128 0x1
 3988 0393 9C       		.byte	0x9c
 3989 0394 15       		.uleb128 0x15
 3990 0395 C1010000 		.4byte	.LASF68
 3991 0399 01       		.byte	0x1
 3992 039a F1       		.byte	0xf1
 3993 039b 00000000 		.4byte	.LFB73
 3994 039f 2C000000 		.4byte	.LFE73-.LFB73
 3995 03a3 01       		.uleb128 0x1
 3996 03a4 9C       		.byte	0x9c
 3997 03a5 15       		.uleb128 0x15
 3998 03a6 13020000 		.4byte	.LASF69
 3999 03aa 01       		.byte	0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 86


 4000 03ab F6       		.byte	0xf6
 4001 03ac 00000000 		.4byte	.LFB74
 4002 03b0 38000000 		.4byte	.LFE74-.LFB74
 4003 03b4 01       		.uleb128 0x1
 4004 03b5 9C       		.byte	0x9c
 4005 03b6 15       		.uleb128 0x15
 4006 03b7 1C050000 		.4byte	.LASF70
 4007 03bb 01       		.byte	0x1
 4008 03bc FF       		.byte	0xff
 4009 03bd 00000000 		.4byte	.LFB75
 4010 03c1 38000000 		.4byte	.LFE75-.LFB75
 4011 03c5 01       		.uleb128 0x1
 4012 03c6 9C       		.byte	0x9c
 4013 03c7 16       		.uleb128 0x16
 4014 03c8 52010000 		.4byte	.LASF71
 4015 03cc 01       		.byte	0x1
 4016 03cd 0801     		.2byte	0x108
 4017 03cf 00000000 		.4byte	.LFB76
 4018 03d3 14000000 		.4byte	.LFE76-.LFB76
 4019 03d7 01       		.uleb128 0x1
 4020 03d8 9C       		.byte	0x9c
 4021 03d9 17       		.uleb128 0x17
 4022 03da 29020000 		.4byte	.LASF72
 4023 03de 01       		.byte	0x1
 4024 03df 0D01     		.2byte	0x10d
 4025 03e1 00000000 		.4byte	.LFB77
 4026 03e5 18000000 		.4byte	.LFE77-.LFB77
 4027 03e9 01       		.uleb128 0x1
 4028 03ea 9C       		.byte	0x9c
 4029 03eb 17       		.uleb128 0x17
 4030 03ec 7E030000 		.4byte	.LASF73
 4031 03f0 01       		.byte	0x1
 4032 03f1 1101     		.2byte	0x111
 4033 03f3 00000000 		.4byte	.LFB78
 4034 03f7 18000000 		.4byte	.LFE78-.LFB78
 4035 03fb 01       		.uleb128 0x1
 4036 03fc 9C       		.byte	0x9c
 4037 03fd 17       		.uleb128 0x17
 4038 03fe 92070000 		.4byte	.LASF74
 4039 0402 01       		.byte	0x1
 4040 0403 1601     		.2byte	0x116
 4041 0405 00000000 		.4byte	.LFB79
 4042 0409 18000000 		.4byte	.LFE79-.LFB79
 4043 040d 01       		.uleb128 0x1
 4044 040e 9C       		.byte	0x9c
 4045 040f 17       		.uleb128 0x17
 4046 0410 AE020000 		.4byte	.LASF75
 4047 0414 01       		.byte	0x1
 4048 0415 1A01     		.2byte	0x11a
 4049 0417 00000000 		.4byte	.LFB80
 4050 041b 18000000 		.4byte	.LFE80-.LFB80
 4051 041f 01       		.uleb128 0x1
 4052 0420 9C       		.byte	0x9c
 4053 0421 18       		.uleb128 0x18
 4054 0422 AE040000 		.4byte	.LASF76
 4055 0426 01       		.byte	0x1
 4056 0427 1F01     		.2byte	0x11f
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 87


 4057 0429 00000000 		.4byte	.LFB81
 4058 042d 98000000 		.4byte	.LFE81-.LFB81
 4059 0431 01       		.uleb128 0x1
 4060 0432 9C       		.byte	0x9c
 4061 0433 47040000 		.4byte	0x447
 4062 0437 19       		.uleb128 0x19
 4063 0438 27040000 		.4byte	.LASF77
 4064 043c 01       		.byte	0x1
 4065 043d 2001     		.2byte	0x120
 4066 043f 83000000 		.4byte	0x83
 4067 0443 02       		.uleb128 0x2
 4068 0444 91       		.byte	0x91
 4069 0445 6F       		.sleb128 -17
 4070 0446 00       		.byte	0
 4071 0447 18       		.uleb128 0x18
 4072 0448 99040000 		.4byte	.LASF78
 4073 044c 01       		.byte	0x1
 4074 044d 3701     		.2byte	0x137
 4075 044f 00000000 		.4byte	.LFB82
 4076 0453 F0000000 		.4byte	.LFE82-.LFB82
 4077 0457 01       		.uleb128 0x1
 4078 0458 9C       		.byte	0x9c
 4079 0459 6D040000 		.4byte	0x46d
 4080 045d 19       		.uleb128 0x19
 4081 045e 27040000 		.4byte	.LASF77
 4082 0462 01       		.byte	0x1
 4083 0463 3901     		.2byte	0x139
 4084 0465 83000000 		.4byte	0x83
 4085 0469 02       		.uleb128 0x2
 4086 046a 91       		.byte	0x91
 4087 046b 77       		.sleb128 -9
 4088 046c 00       		.byte	0
 4089 046d 1A       		.uleb128 0x1a
 4090 046e DD060000 		.4byte	.LASF79
 4091 0472 01       		.byte	0x1
 4092 0473 5F01     		.2byte	0x15f
 4093 0475 00000000 		.4byte	.LFB83
 4094 0479 0C000000 		.4byte	.LFE83-.LFB83
 4095 047d 01       		.uleb128 0x1
 4096 047e 9C       		.byte	0x9c
 4097 047f 1B       		.uleb128 0x1b
 4098 0480 9F050000 		.4byte	.LASF80
 4099 0484 01       		.byte	0x1
 4100 0485 6501     		.2byte	0x165
 4101 0487 00000000 		.4byte	.LFB84
 4102 048b 2C000000 		.4byte	.LFE84-.LFB84
 4103 048f 01       		.uleb128 0x1
 4104 0490 9C       		.byte	0x9c
 4105 0491 1B       		.uleb128 0x1b
 4106 0492 6B010000 		.4byte	.LASF81
 4107 0496 01       		.byte	0x1
 4108 0497 6E01     		.2byte	0x16e
 4109 0499 00000000 		.4byte	.LFB85
 4110 049d B8000000 		.4byte	.LFE85-.LFB85
 4111 04a1 01       		.uleb128 0x1
 4112 04a2 9C       		.byte	0x9c
 4113 04a3 1B       		.uleb128 0x1b
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 88


 4114 04a4 FA010000 		.4byte	.LASF82
 4115 04a8 01       		.byte	0x1
 4116 04a9 8301     		.2byte	0x183
 4117 04ab 00000000 		.4byte	.LFB86
 4118 04af 78000000 		.4byte	.LFE86-.LFB86
 4119 04b3 01       		.uleb128 0x1
 4120 04b4 9C       		.byte	0x9c
 4121 04b5 1A       		.uleb128 0x1a
 4122 04b6 1D060000 		.4byte	.LASF83
 4123 04ba 01       		.byte	0x1
 4124 04bb 9C01     		.2byte	0x19c
 4125 04bd 00000000 		.4byte	.LFB87
 4126 04c1 20000000 		.4byte	.LFE87-.LFB87
 4127 04c5 01       		.uleb128 0x1
 4128 04c6 9C       		.byte	0x9c
 4129 04c7 1B       		.uleb128 0x1b
 4130 04c8 70020000 		.4byte	.LASF84
 4131 04cc 01       		.byte	0x1
 4132 04cd A301     		.2byte	0x1a3
 4133 04cf 00000000 		.4byte	.LFB88
 4134 04d3 1C000000 		.4byte	.LFE88-.LFB88
 4135 04d7 01       		.uleb128 0x1
 4136 04d8 9C       		.byte	0x9c
 4137 04d9 1B       		.uleb128 0x1b
 4138 04da 90000000 		.4byte	.LASF85
 4139 04de 01       		.byte	0x1
 4140 04df AC01     		.2byte	0x1ac
 4141 04e1 00000000 		.4byte	.LFB89
 4142 04e5 0A000000 		.4byte	.LFE89-.LFB89
 4143 04e9 01       		.uleb128 0x1
 4144 04ea 9C       		.byte	0x9c
 4145 04eb 1C       		.uleb128 0x1c
 4146 04ec 26000000 		.4byte	.LASF86
 4147 04f0 01       		.byte	0x1
 4148 04f1 B101     		.2byte	0x1b1
 4149 04f3 00000000 		.4byte	.LFB90
 4150 04f7 30020000 		.4byte	.LFE90-.LFB90
 4151 04fb 01       		.uleb128 0x1
 4152 04fc 9C       		.byte	0x9c
 4153 04fd 5C050000 		.4byte	0x55c
 4154 0501 19       		.uleb128 0x19
 4155 0502 50020000 		.4byte	.LASF87
 4156 0506 01       		.byte	0x1
 4157 0507 BF01     		.2byte	0x1bf
 4158 0509 C5000000 		.4byte	0xc5
 4159 050d 02       		.uleb128 0x2
 4160 050e 91       		.byte	0x91
 4161 050f 5E       		.sleb128 -34
 4162 0510 19       		.uleb128 0x19
 4163 0511 2F040000 		.4byte	.LASF88
 4164 0515 01       		.byte	0x1
 4165 0516 C001     		.2byte	0x1c0
 4166 0518 C5000000 		.4byte	0xc5
 4167 051c 02       		.uleb128 0x2
 4168 051d 91       		.byte	0x91
 4169 051e 5C       		.sleb128 -36
 4170 051f 19       		.uleb128 0x19
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 89


 4171 0520 DD020000 		.4byte	.LASF89
 4172 0524 01       		.byte	0x1
 4173 0525 C101     		.2byte	0x1c1
 4174 0527 D8000000 		.4byte	0xd8
 4175 052b 02       		.uleb128 0x2
 4176 052c 91       		.byte	0x91
 4177 052d 68       		.sleb128 -24
 4178 052e 19       		.uleb128 0x19
 4179 052f 59070000 		.4byte	.LASF90
 4180 0533 01       		.byte	0x1
 4181 0534 C201     		.2byte	0x1c2
 4182 0536 D8000000 		.4byte	0xd8
 4183 053a 02       		.uleb128 0x2
 4184 053b 91       		.byte	0x91
 4185 053c 60       		.sleb128 -32
 4186 053d 19       		.uleb128 0x19
 4187 053e 4B030000 		.4byte	.LASF91
 4188 0542 01       		.byte	0x1
 4189 0543 CB01     		.2byte	0x1cb
 4190 0545 68000000 		.4byte	0x68
 4191 0549 02       		.uleb128 0x2
 4192 054a 91       		.byte	0x91
 4193 054b 58       		.sleb128 -40
 4194 054c 19       		.uleb128 0x19
 4195 054d E6060000 		.4byte	.LASF92
 4196 0551 01       		.byte	0x1
 4197 0552 CC01     		.2byte	0x1cc
 4198 0554 68000000 		.4byte	0x68
 4199 0558 02       		.uleb128 0x2
 4200 0559 91       		.byte	0x91
 4201 055a 54       		.sleb128 -44
 4202 055b 00       		.byte	0
 4203 055c 1C       		.uleb128 0x1c
 4204 055d 09020000 		.4byte	.LASF93
 4205 0561 01       		.byte	0x1
 4206 0562 DA01     		.2byte	0x1da
 4207 0564 00000000 		.4byte	.LFB91
 4208 0568 50010000 		.4byte	.LFE91-.LFB91
 4209 056c 01       		.uleb128 0x1
 4210 056d 9C       		.byte	0x9c
 4211 056e 9E050000 		.4byte	0x59e
 4212 0572 1D       		.uleb128 0x1d
 4213 0573 6E6C00   		.ascii	"nl\000"
 4214 0576 01       		.byte	0x1
 4215 0577 DE01     		.2byte	0x1de
 4216 0579 95000000 		.4byte	0x95
 4217 057d 02       		.uleb128 0x2
 4218 057e 91       		.byte	0x91
 4219 057f 67       		.sleb128 -25
 4220 0580 1D       		.uleb128 0x1d
 4221 0581 6E7200   		.ascii	"nr\000"
 4222 0584 01       		.byte	0x1
 4223 0585 DF01     		.2byte	0x1df
 4224 0587 95000000 		.4byte	0x95
 4225 058b 02       		.uleb128 0x2
 4226 058c 91       		.byte	0x91
 4227 058d 66       		.sleb128 -26
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 90


 4228 058e 1D       		.uleb128 0x1d
 4229 058f 6D696400 		.ascii	"mid\000"
 4230 0593 01       		.byte	0x1
 4231 0594 E001     		.2byte	0x1e0
 4232 0596 95000000 		.4byte	0x95
 4233 059a 02       		.uleb128 0x2
 4234 059b 91       		.byte	0x91
 4235 059c 65       		.sleb128 -27
 4236 059d 00       		.byte	0
 4237 059e 1C       		.uleb128 0x1c
 4238 059f F0000000 		.4byte	.LASF94
 4239 05a3 01       		.byte	0x1
 4240 05a4 FC01     		.2byte	0x1fc
 4241 05a6 00000000 		.4byte	.LFB92
 4242 05aa 50010000 		.4byte	.LFE92-.LFB92
 4243 05ae 01       		.uleb128 0x1
 4244 05af 9C       		.byte	0x9c
 4245 05b0 E0050000 		.4byte	0x5e0
 4246 05b4 1D       		.uleb128 0x1d
 4247 05b5 6E6C00   		.ascii	"nl\000"
 4248 05b8 01       		.byte	0x1
 4249 05b9 0002     		.2byte	0x200
 4250 05bb 95000000 		.4byte	0x95
 4251 05bf 02       		.uleb128 0x2
 4252 05c0 91       		.byte	0x91
 4253 05c1 67       		.sleb128 -25
 4254 05c2 1D       		.uleb128 0x1d
 4255 05c3 6E7200   		.ascii	"nr\000"
 4256 05c6 01       		.byte	0x1
 4257 05c7 0102     		.2byte	0x201
 4258 05c9 95000000 		.4byte	0x95
 4259 05cd 02       		.uleb128 0x2
 4260 05ce 91       		.byte	0x91
 4261 05cf 66       		.sleb128 -26
 4262 05d0 1D       		.uleb128 0x1d
 4263 05d1 6D696400 		.ascii	"mid\000"
 4264 05d5 01       		.byte	0x1
 4265 05d6 0202     		.2byte	0x202
 4266 05d8 95000000 		.4byte	0x95
 4267 05dc 02       		.uleb128 0x2
 4268 05dd 91       		.byte	0x91
 4269 05de 65       		.sleb128 -27
 4270 05df 00       		.byte	0
 4271 05e0 1C       		.uleb128 0x1c
 4272 05e1 E5000000 		.4byte	.LASF95
 4273 05e5 01       		.byte	0x1
 4274 05e6 1E02     		.2byte	0x21e
 4275 05e8 00000000 		.4byte	.LFB93
 4276 05ec B0010000 		.4byte	.LFE93-.LFB93
 4277 05f0 01       		.uleb128 0x1
 4278 05f1 9C       		.byte	0x9c
 4279 05f2 3E060000 		.4byte	0x63e
 4280 05f6 1D       		.uleb128 0x1d
 4281 05f7 6E6C00   		.ascii	"nl\000"
 4282 05fa 01       		.byte	0x1
 4283 05fb 2202     		.2byte	0x222
 4284 05fd 95000000 		.4byte	0x95
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 91


 4285 0601 02       		.uleb128 0x2
 4286 0602 91       		.byte	0x91
 4287 0603 67       		.sleb128 -25
 4288 0604 1D       		.uleb128 0x1d
 4289 0605 666C00   		.ascii	"fl\000"
 4290 0608 01       		.byte	0x1
 4291 0609 2302     		.2byte	0x223
 4292 060b 95000000 		.4byte	0x95
 4293 060f 02       		.uleb128 0x2
 4294 0610 91       		.byte	0x91
 4295 0611 66       		.sleb128 -26
 4296 0612 1D       		.uleb128 0x1d
 4297 0613 6E7200   		.ascii	"nr\000"
 4298 0616 01       		.byte	0x1
 4299 0617 2402     		.2byte	0x224
 4300 0619 95000000 		.4byte	0x95
 4301 061d 02       		.uleb128 0x2
 4302 061e 91       		.byte	0x91
 4303 061f 65       		.sleb128 -27
 4304 0620 1D       		.uleb128 0x1d
 4305 0621 667200   		.ascii	"fr\000"
 4306 0624 01       		.byte	0x1
 4307 0625 2502     		.2byte	0x225
 4308 0627 95000000 		.4byte	0x95
 4309 062b 02       		.uleb128 0x2
 4310 062c 91       		.byte	0x91
 4311 062d 64       		.sleb128 -28
 4312 062e 1D       		.uleb128 0x1d
 4313 062f 6D696400 		.ascii	"mid\000"
 4314 0633 01       		.byte	0x1
 4315 0634 2602     		.2byte	0x226
 4316 0636 95000000 		.4byte	0x95
 4317 063a 02       		.uleb128 0x2
 4318 063b 91       		.byte	0x91
 4319 063c 63       		.sleb128 -29
 4320 063d 00       		.byte	0
 4321 063e 1C       		.uleb128 0x1c
 4322 063f D3020000 		.4byte	.LASF96
 4323 0643 01       		.byte	0x1
 4324 0644 4F02     		.2byte	0x24f
 4325 0646 00000000 		.4byte	.LFB94
 4326 064a C0000000 		.4byte	.LFE94-.LFB94
 4327 064e 01       		.uleb128 0x1
 4328 064f 9C       		.byte	0x9c
 4329 0650 8C060000 		.4byte	0x68c
 4330 0654 0C       		.uleb128 0xc
 4331 0655 0E000000 		.4byte	.LBB3
 4332 0659 8E000000 		.4byte	.LBE3-.LBB3
 4333 065d 19       		.uleb128 0x19
 4334 065e 42020000 		.4byte	.LASF97
 4335 0662 01       		.byte	0x1
 4336 0663 5802     		.2byte	0x258
 4337 0665 D1000000 		.4byte	0xd1
 4338 0669 02       		.uleb128 0x2
 4339 066a 91       		.byte	0x91
 4340 066b 74       		.sleb128 -12
 4341 066c 19       		.uleb128 0x19
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 92


 4342 066d 60040000 		.4byte	.LASF98
 4343 0671 01       		.byte	0x1
 4344 0672 5902     		.2byte	0x259
 4345 0674 C5000000 		.4byte	0xc5
 4346 0678 02       		.uleb128 0x2
 4347 0679 91       		.byte	0x91
 4348 067a 72       		.sleb128 -14
 4349 067b 19       		.uleb128 0x19
 4350 067c 96020000 		.4byte	.LASF99
 4351 0680 01       		.byte	0x1
 4352 0681 5E02     		.2byte	0x25e
 4353 0683 E1020000 		.4byte	0x2e1
 4354 0687 02       		.uleb128 0x2
 4355 0688 91       		.byte	0x91
 4356 0689 60       		.sleb128 -32
 4357 068a 00       		.byte	0
 4358 068b 00       		.byte	0
 4359 068c 1C       		.uleb128 0x1c
 4360 068d 48070000 		.4byte	.LASF100
 4361 0691 01       		.byte	0x1
 4362 0692 6502     		.2byte	0x265
 4363 0694 00000000 		.4byte	.LFB95
 4364 0698 B8000000 		.4byte	.LFE95-.LFB95
 4365 069c 01       		.uleb128 0x1
 4366 069d 9C       		.byte	0x9c
 4367 069e BC060000 		.4byte	0x6bc
 4368 06a2 0C       		.uleb128 0xc
 4369 06a3 0E000000 		.4byte	.LBB4
 4370 06a7 86000000 		.4byte	.LBE4-.LBB4
 4371 06ab 19       		.uleb128 0x19
 4372 06ac 3F050000 		.4byte	.LASF101
 4373 06b0 01       		.byte	0x1
 4374 06b1 6902     		.2byte	0x269
 4375 06b3 E1020000 		.4byte	0x2e1
 4376 06b7 02       		.uleb128 0x2
 4377 06b8 91       		.byte	0x91
 4378 06b9 68       		.sleb128 -24
 4379 06ba 00       		.byte	0
 4380 06bb 00       		.byte	0
 4381 06bc 18       		.uleb128 0x18
 4382 06bd A7050000 		.4byte	.LASF102
 4383 06c1 01       		.byte	0x1
 4384 06c2 7A02     		.2byte	0x27a
 4385 06c4 00000000 		.4byte	.LFB96
 4386 06c8 4A000000 		.4byte	.LFE96-.LFB96
 4387 06cc 01       		.uleb128 0x1
 4388 06cd 9C       		.byte	0x9c
 4389 06ce E2060000 		.4byte	0x6e2
 4390 06d2 1E       		.uleb128 0x1e
 4391 06d3 8B020000 		.4byte	.LASF103
 4392 06d7 01       		.byte	0x1
 4393 06d8 7A02     		.2byte	0x27a
 4394 06da E2060000 		.4byte	0x6e2
 4395 06de 02       		.uleb128 0x2
 4396 06df 91       		.byte	0x91
 4397 06e0 6C       		.sleb128 -20
 4398 06e1 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 93


 4399 06e2 05       		.uleb128 0x5
 4400 06e3 04       		.byte	0x4
 4401 06e4 95000000 		.4byte	0x95
 4402 06e8 1F       		.uleb128 0x1f
 4403 06e9 D8060000 		.4byte	.LASF104
 4404 06ed 01       		.byte	0x1
 4405 06ee 8302     		.2byte	0x283
 4406 06f0 68000000 		.4byte	0x68
 4407 06f4 00000000 		.4byte	.LFB97
 4408 06f8 24010000 		.4byte	.LFE97-.LFB97
 4409 06fc 01       		.uleb128 0x1
 4410 06fd 9C       		.byte	0x9c
 4411 06fe 1C070000 		.4byte	0x71c
 4412 0702 0C       		.uleb128 0xc
 4413 0703 5E000000 		.4byte	.LBB5
 4414 0707 AA000000 		.4byte	.LBE5-.LBB5
 4415 070b 19       		.uleb128 0x19
 4416 070c ED010000 		.4byte	.LASF105
 4417 0710 01       		.byte	0x1
 4418 0711 CF02     		.2byte	0x2cf
 4419 0713 1C070000 		.4byte	0x71c
 4420 0717 02       		.uleb128 0x2
 4421 0718 91       		.byte	0x91
 4422 0719 70       		.sleb128 -16
 4423 071a 00       		.byte	0
 4424 071b 00       		.byte	0
 4425 071c 0E       		.uleb128 0xe
 4426 071d 95000000 		.4byte	0x95
 4427 0721 2C070000 		.4byte	0x72c
 4428 0725 0F       		.uleb128 0xf
 4429 0726 76000000 		.4byte	0x76
 4430 072a 04       		.byte	0x4
 4431 072b 00       		.byte	0
 4432 072c 18       		.uleb128 0x18
 4433 072d 80050000 		.4byte	.LASF106
 4434 0731 01       		.byte	0x1
 4435 0732 0103     		.2byte	0x301
 4436 0734 00000000 		.4byte	.LFB98
 4437 0738 68000000 		.4byte	.LFE98-.LFB98
 4438 073c 01       		.uleb128 0x1
 4439 073d 9C       		.byte	0x9c
 4440 073e 69070000 		.4byte	0x769
 4441 0742 20       		.uleb128 0x20
 4442 0743 7300     		.ascii	"s\000"
 4443 0745 01       		.byte	0x1
 4444 0746 0103     		.2byte	0x301
 4445 0748 7D000000 		.4byte	0x7d
 4446 074c 02       		.uleb128 0x2
 4447 074d 91       		.byte	0x91
 4448 074e 6C       		.sleb128 -20
 4449 074f 0C       		.uleb128 0xc
 4450 0750 10000000 		.4byte	.LBB6
 4451 0754 48000000 		.4byte	.LBE6-.LBB6
 4452 0758 1D       		.uleb128 0x1d
 4453 0759 636E7400 		.ascii	"cnt\000"
 4454 075d 01       		.byte	0x1
 4455 075e 0803     		.2byte	0x308
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 94


 4456 0760 AD000000 		.4byte	0xad
 4457 0764 02       		.uleb128 0x2
 4458 0765 91       		.byte	0x91
 4459 0766 74       		.sleb128 -12
 4460 0767 00       		.byte	0
 4461 0768 00       		.byte	0
 4462 0769 18       		.uleb128 0x18
 4463 076a 9C060000 		.4byte	.LASF107
 4464 076e 01       		.byte	0x1
 4465 076f 1703     		.2byte	0x317
 4466 0771 00000000 		.4byte	.LFB99
 4467 0775 50000000 		.4byte	.LFE99-.LFB99
 4468 0779 01       		.uleb128 0x1
 4469 077a 9C       		.byte	0x9c
 4470 077b A6070000 		.4byte	0x7a6
 4471 077f 20       		.uleb128 0x20
 4472 0780 6300     		.ascii	"c\000"
 4473 0782 01       		.byte	0x1
 4474 0783 1703     		.2byte	0x317
 4475 0785 83000000 		.4byte	0x83
 4476 0789 02       		.uleb128 0x2
 4477 078a 91       		.byte	0x91
 4478 078b 6F       		.sleb128 -17
 4479 078c 0C       		.uleb128 0xc
 4480 078d 12000000 		.4byte	.LBB7
 4481 0791 2E000000 		.4byte	.LBE7-.LBB7
 4482 0795 1D       		.uleb128 0x1d
 4483 0796 636E7400 		.ascii	"cnt\000"
 4484 079a 01       		.byte	0x1
 4485 079b 1B03     		.2byte	0x31b
 4486 079d AD000000 		.4byte	0xad
 4487 07a1 02       		.uleb128 0x2
 4488 07a2 91       		.byte	0x91
 4489 07a3 74       		.sleb128 -12
 4490 07a4 00       		.byte	0
 4491 07a5 00       		.byte	0
 4492 07a6 1C       		.uleb128 0x1c
 4493 07a7 A1020000 		.4byte	.LASF108
 4494 07ab 01       		.byte	0x1
 4495 07ac 2803     		.2byte	0x328
 4496 07ae 00000000 		.4byte	.LFB100
 4497 07b2 3A000000 		.4byte	.LFE100-.LFB100
 4498 07b6 01       		.uleb128 0x1
 4499 07b7 9C       		.byte	0x9c
 4500 07b8 CA070000 		.4byte	0x7ca
 4501 07bc 1D       		.uleb128 0x1d
 4502 07bd 6300     		.ascii	"c\000"
 4503 07bf 01       		.byte	0x1
 4504 07c0 2A03     		.2byte	0x32a
 4505 07c2 95000000 		.4byte	0x95
 4506 07c6 02       		.uleb128 0x2
 4507 07c7 91       		.byte	0x91
 4508 07c8 77       		.sleb128 -9
 4509 07c9 00       		.byte	0
 4510 07ca 21       		.uleb128 0x21
 4511 07cb 32050000 		.4byte	.LASF109
 4512 07cf 06       		.byte	0x6
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 95


 4513 07d0 9606     		.2byte	0x696
 4514 07d2 D6070000 		.4byte	0x7d6
 4515 07d6 22       		.uleb128 0x22
 4516 07d7 8A000000 		.4byte	0x8a
 4517 07db 23       		.uleb128 0x23
 4518 07dc 747300   		.ascii	"ts\000"
 4519 07df 05       		.byte	0x5
 4520 07e0 10       		.byte	0x10
 4521 07e1 95000000 		.4byte	0x95
 4522 07e5 05       		.uleb128 0x5
 4523 07e6 03       		.byte	0x3
 4524 07e7 00000000 		.4byte	ts
 4525 07eb 24       		.uleb128 0x24
 4526 07ec 2A060000 		.4byte	.LASF110
 4527 07f0 05       		.byte	0x5
 4528 07f1 11       		.byte	0x11
 4529 07f2 A1000000 		.4byte	0xa1
 4530 07f6 05       		.uleb128 0x5
 4531 07f7 03       		.byte	0x3
 4532 07f8 00000000 		.4byte	ts_enc
 4533 07fc 24       		.uleb128 0x24
 4534 07fd 4B050000 		.4byte	.LASF111
 4535 0801 05       		.byte	0x5
 4536 0802 12       		.byte	0x12
 4537 0803 A1000000 		.4byte	0xa1
 4538 0807 05       		.uleb128 0x5
 4539 0808 03       		.byte	0x3
 4540 0809 00000000 		.4byte	ts_update
 4541 080d 24       		.uleb128 0x24
 4542 080e 3A040000 		.4byte	.LASF112
 4543 0812 05       		.byte	0x5
 4544 0813 13       		.byte	0x13
 4545 0814 A1000000 		.4byte	0xa1
 4546 0818 05       		.uleb128 0x5
 4547 0819 03       		.byte	0x3
 4548 081a 00000000 		.4byte	ts_speed
 4549 081e 24       		.uleb128 0x24
 4550 081f C8020000 		.4byte	.LASF113
 4551 0823 05       		.byte	0x5
 4552 0824 14       		.byte	0x14
 4553 0825 A1000000 		.4byte	0xa1
 4554 0829 05       		.uleb128 0x5
 4555 082a 03       		.byte	0x3
 4556 082b 00000000 		.4byte	ts_display
 4557 082f 24       		.uleb128 0x24
 4558 0830 5A020000 		.4byte	.LASF114
 4559 0834 05       		.byte	0x5
 4560 0835 16       		.byte	0x16
 4561 0836 95000000 		.4byte	0x95
 4562 083a 05       		.uleb128 0x5
 4563 083b 03       		.byte	0x3
 4564 083c 00000000 		.4byte	flag_ts_enc
 4565 0840 24       		.uleb128 0x24
 4566 0841 33020000 		.4byte	.LASF115
 4567 0845 05       		.byte	0x5
 4568 0846 17       		.byte	0x17
 4569 0847 95000000 		.4byte	0x95
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 96


 4570 084b 05       		.uleb128 0x5
 4571 084c 03       		.byte	0x3
 4572 084d 00000000 		.4byte	flag_ts_update
 4573 0851 24       		.uleb128 0x24
 4574 0852 C4040000 		.4byte	.LASF116
 4575 0856 05       		.byte	0x5
 4576 0857 18       		.byte	0x18
 4577 0858 95000000 		.4byte	0x95
 4578 085c 05       		.uleb128 0x5
 4579 085d 03       		.byte	0x3
 4580 085e 00000000 		.4byte	flag_ts_speed
 4581 0862 24       		.uleb128 0x24
 4582 0863 3B060000 		.4byte	.LASF117
 4583 0867 05       		.byte	0x5
 4584 0868 19       		.byte	0x19
 4585 0869 95000000 		.4byte	0x95
 4586 086d 05       		.uleb128 0x5
 4587 086e 03       		.byte	0x3
 4588 086f 00000000 		.4byte	flag_ts_display
 4589 0873 24       		.uleb128 0x24
 4590 0874 E1040000 		.4byte	.LASF118
 4591 0878 05       		.byte	0x5
 4592 0879 1C       		.byte	0x1c
 4593 087a 95000000 		.4byte	0x95
 4594 087e 05       		.uleb128 0x5
 4595 087f 03       		.byte	0x3
 4596 0880 00000000 		.4byte	flag_rx
 4597 0884 24       		.uleb128 0x24
 4598 0885 E1010000 		.4byte	.LASF119
 4599 0889 05       		.byte	0x5
 4600 088a 1D       		.byte	0x1d
 4601 088b 95000000 		.4byte	0x95
 4602 088f 05       		.uleb128 0x5
 4603 0890 03       		.byte	0x3
 4604 0891 00000000 		.4byte	flag_packet
 4605 0895 24       		.uleb128 0x24
 4606 0896 66070000 		.4byte	.LASF120
 4607 089a 05       		.byte	0x5
 4608 089b 1E       		.byte	0x1e
 4609 089c 95000000 		.4byte	0x95
 4610 08a0 05       		.uleb128 0x5
 4611 08a1 03       		.byte	0x3
 4612 08a2 00000000 		.4byte	flag_KB_string
 4613 08a6 24       		.uleb128 0x24
 4614 08a7 D2040000 		.4byte	.LASF121
 4615 08ab 05       		.byte	0x5
 4616 08ac 20       		.byte	0x20
 4617 08ad 95000000 		.4byte	0x95
 4618 08b1 05       		.uleb128 0x5
 4619 08b2 03       		.byte	0x3
 4620 08b3 00000000 		.4byte	dataready_flag
 4621 08b7 24       		.uleb128 0x24
 4622 08b8 0E010000 		.4byte	.LASF122
 4623 08bc 05       		.byte	0x5
 4624 08bd 22       		.byte	0x22
 4625 08be 95000000 		.4byte	0x95
 4626 08c2 05       		.uleb128 0x5
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 97


 4627 08c3 03       		.byte	0x3
 4628 08c4 00000000 		.4byte	flag_rf_transmission_active
 4629 08c8 24       		.uleb128 0x24
 4630 08c9 2A010000 		.4byte	.LASF123
 4631 08cd 05       		.byte	0x5
 4632 08ce 23       		.byte	0x23
 4633 08cf 95000000 		.4byte	0x95
 4634 08d3 05       		.uleb128 0x5
 4635 08d4 03       		.byte	0x3
 4636 08d5 00000000 		.4byte	flag_print_rf
 4637 08d9 24       		.uleb128 0x24
 4638 08da 80040000 		.4byte	.LASF124
 4639 08de 05       		.byte	0x5
 4640 08df 25       		.byte	0x25
 4641 08e0 95000000 		.4byte	0x95
 4642 08e4 05       		.uleb128 0x5
 4643 08e5 03       		.byte	0x3
 4644 08e6 00000000 		.4byte	flag_receive_ADC
 4645 08ea 24       		.uleb128 0x24
 4646 08eb F3040000 		.4byte	.LASF125
 4647 08ef 05       		.byte	0x5
 4648 08f0 26       		.byte	0x26
 4649 08f1 C5000000 		.4byte	0xc5
 4650 08f5 05       		.uleb128 0x5
 4651 08f6 03       		.byte	0x3
 4652 08f7 00000000 		.4byte	adc_result
 4653 08fb 24       		.uleb128 0x24
 4654 08fc 00000000 		.4byte	.LASF126
 4655 0900 05       		.byte	0x5
 4656 0901 28       		.byte	0x28
 4657 0902 95000000 		.4byte	0x95
 4658 0906 05       		.uleb128 0x5
 4659 0907 03       		.byte	0x3
 4660 0908 00000000 		.4byte	direction
 4661 090c 24       		.uleb128 0x24
 4662 090d FE040000 		.4byte	.LASF127
 4663 0911 05       		.byte	0x5
 4664 0912 2C       		.byte	0x2c
 4665 0913 95000000 		.4byte	0x95
 4666 0917 05       		.uleb128 0x5
 4667 0918 03       		.byte	0x3
 4668 0919 00000000 		.4byte	flag_calc_wheelspeed
 4669 091d 24       		.uleb128 0x24
 4670 091e CD000000 		.4byte	.LASF128
 4671 0922 05       		.byte	0x5
 4672 0923 2D       		.byte	0x2d
 4673 0924 C5000000 		.4byte	0xc5
 4674 0928 05       		.uleb128 0x5
 4675 0929 03       		.byte	0x3
 4676 092a 00000000 		.4byte	quad_count1
 4677 092e 24       		.uleb128 0x24
 4678 092f D9000000 		.4byte	.LASF129
 4679 0933 05       		.byte	0x5
 4680 0934 2E       		.byte	0x2e
 4681 0935 C5000000 		.4byte	0xc5
 4682 0939 05       		.uleb128 0x5
 4683 093a 03       		.byte	0x3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 98


 4684 093b 00000000 		.4byte	quad_count2
 4685 093f 24       		.uleb128 0x24
 4686 0940 7A060000 		.4byte	.LASF130
 4687 0944 05       		.byte	0x5
 4688 0945 2F       		.byte	0x2f
 4689 0946 C5000000 		.4byte	0xc5
 4690 094a 05       		.uleb128 0x5
 4691 094b 03       		.byte	0x3
 4692 094c 00000000 		.4byte	last_quad_count1
 4693 0950 24       		.uleb128 0x24
 4694 0951 8B060000 		.4byte	.LASF131
 4695 0955 05       		.byte	0x5
 4696 0956 30       		.byte	0x30
 4697 0957 C5000000 		.4byte	0xc5
 4698 095b 05       		.uleb128 0x5
 4699 095c 03       		.byte	0x3
 4700 095d 00000000 		.4byte	last_quad_count2
 4701 0961 24       		.uleb128 0x24
 4702 0962 10000000 		.4byte	.LASF132
 4703 0966 05       		.byte	0x5
 4704 0967 31       		.byte	0x31
 4705 0968 C5000000 		.4byte	0xc5
 4706 096c 05       		.uleb128 0x5
 4707 096d 03       		.byte	0x3
 4708 096e 00000000 		.4byte	quad_diff1
 4709 0972 24       		.uleb128 0x24
 4710 0973 1B000000 		.4byte	.LASF133
 4711 0977 05       		.byte	0x5
 4712 0978 32       		.byte	0x32
 4713 0979 C5000000 		.4byte	0xc5
 4714 097d 05       		.uleb128 0x5
 4715 097e 03       		.byte	0x3
 4716 097f 00000000 		.4byte	quad_diff2
 4717 0983 24       		.uleb128 0x24
 4718 0984 44000000 		.4byte	.LASF134
 4719 0988 05       		.byte	0x5
 4720 0989 35       		.byte	0x35
 4721 098a C5000000 		.4byte	0xc5
 4722 098e 05       		.uleb128 0x5
 4723 098f 03       		.byte	0x3
 4724 0990 00000000 		.4byte	start_turn_count
 4725 0994 24       		.uleb128 0x24
 4726 0995 B4040000 		.4byte	.LASF135
 4727 0999 05       		.byte	0x5
 4728 099a 38       		.byte	0x38
 4729 099b C5000000 		.4byte	0xc5
 4730 099f 05       		.uleb128 0x5
 4731 09a0 03       		.byte	0x3
 4732 09a1 00000000 		.4byte	left_duty_cycle
 4733 09a5 24       		.uleb128 0x24
 4734 09a6 FD060000 		.4byte	.LASF136
 4735 09aa 05       		.byte	0x5
 4736 09ab 39       		.byte	0x39
 4737 09ac C5000000 		.4byte	0xc5
 4738 09b0 05       		.uleb128 0x5
 4739 09b1 03       		.byte	0x3
 4740 09b2 00000000 		.4byte	right_duty_cycle
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 99


 4741 09b6 24       		.uleb128 0x24
 4742 09b7 5E050000 		.4byte	.LASF137
 4743 09bb 05       		.byte	0x5
 4744 09bc 3C       		.byte	0x3c
 4745 09bd C5000000 		.4byte	0xc5
 4746 09c1 05       		.uleb128 0x5
 4747 09c2 03       		.byte	0x3
 4748 09c3 00000000 		.4byte	leftSpeedLimit
 4749 09c7 24       		.uleb128 0x24
 4750 09c8 F7020000 		.4byte	.LASF138
 4751 09cc 05       		.byte	0x5
 4752 09cd 3D       		.byte	0x3d
 4753 09ce C5000000 		.4byte	0xc5
 4754 09d2 05       		.uleb128 0x5
 4755 09d3 03       		.byte	0x3
 4756 09d4 00000000 		.4byte	rightSpeedLimit
 4757 09d8 24       		.uleb128 0x24
 4758 09d9 31060000 		.4byte	.LASF139
 4759 09dd 05       		.byte	0x5
 4760 09de 40       		.byte	0x40
 4761 09df 95000000 		.4byte	0x95
 4762 09e3 05       		.uleb128 0x5
 4763 09e4 03       		.byte	0x3
 4764 09e5 00000000 		.4byte	brakeFlag
 4765 09e9 24       		.uleb128 0x24
 4766 09ea 20020000 		.4byte	.LASF140
 4767 09ee 05       		.byte	0x5
 4768 09ef 41       		.byte	0x41
 4769 09f0 95000000 		.4byte	0x95
 4770 09f4 05       		.uleb128 0x5
 4771 09f5 03       		.byte	0x3
 4772 09f6 00000000 		.4byte	portOpen
 4773 09fa 24       		.uleb128 0x24
 4774 09fb 38000000 		.4byte	.LASF141
 4775 09ff 05       		.byte	0x5
 4776 0a00 44       		.byte	0x44
 4777 0a01 C5000000 		.4byte	0xc5
 4778 0a05 05       		.uleb128 0x5
 4779 0a06 03       		.byte	0x3
 4780 0a07 00000000 		.4byte	prevVoltage
 4781 0a0b 24       		.uleb128 0x24
 4782 0a0c A6000000 		.4byte	.LASF142
 4783 0a10 05       		.byte	0x5
 4784 0a11 45       		.byte	0x45
 4785 0a12 C5000000 		.4byte	0xc5
 4786 0a16 05       		.uleb128 0x5
 4787 0a17 03       		.byte	0x3
 4788 0a18 00000000 		.4byte	prevVoltage2
 4789 0a1c 0E       		.uleb128 0xe
 4790 0a1d 83000000 		.4byte	0x83
 4791 0a21 2C0A0000 		.4byte	0xa2c
 4792 0a25 0F       		.uleb128 0xf
 4793 0a26 76000000 		.4byte	0x76
 4794 0a2a 3F       		.byte	0x3f
 4795 0a2b 00       		.byte	0
 4796 0a2c 24       		.uleb128 0x24
 4797 0a2d 6C060000 		.4byte	.LASF143
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 100


 4798 0a31 05       		.byte	0x5
 4799 0a32 4B       		.byte	0x4b
 4800 0a33 1C0A0000 		.4byte	0xa1c
 4801 0a37 05       		.uleb128 0x5
 4802 0a38 03       		.byte	0x3
 4803 0a39 00000000 		.4byte	displaystring
 4804 0a3d 24       		.uleb128 0x24
 4805 0a3e 18060000 		.4byte	.LASF144
 4806 0a42 05       		.byte	0x5
 4807 0a43 4C       		.byte	0x4c
 4808 0a44 1C0A0000 		.4byte	0xa1c
 4809 0a48 05       		.uleb128 0x5
 4810 0a49 03       		.byte	0x3
 4811 0a4a 00000000 		.4byte	line
 4812 0a4e 24       		.uleb128 0x24
 4813 0a4f 04060000 		.4byte	.LASF145
 4814 0a53 05       		.byte	0x5
 4815 0a54 4C       		.byte	0x4c
 4816 0a55 1C0A0000 		.4byte	0xa1c
 4817 0a59 05       		.uleb128 0x5
 4818 0a5a 03       		.byte	0x3
 4819 0a5b 00000000 		.4byte	entry
 4820 0a5f 0E       		.uleb128 0xe
 4821 0a60 95000000 		.4byte	0x95
 4822 0a64 6F0A0000 		.4byte	0xa6f
 4823 0a68 0F       		.uleb128 0xf
 4824 0a69 76000000 		.4byte	0x76
 4825 0a6d 3F       		.byte	0x3f
 4826 0a6e 00       		.byte	0
 4827 0a6f 24       		.uleb128 0x24
 4828 0a70 84010000 		.4byte	.LASF146
 4829 0a74 05       		.byte	0x5
 4830 0a75 4D       		.byte	0x4d
 4831 0a76 5F0A0000 		.4byte	0xa5f
 4832 0a7a 05       		.uleb128 0x5
 4833 0a7b 03       		.byte	0x3
 4834 0a7c 00000000 		.4byte	usbBuffer
 4835 0a80 24       		.uleb128 0x24
 4836 0a81 69030000 		.4byte	.LASF147
 4837 0a85 05       		.byte	0x5
 4838 0a86 62       		.byte	0x62
 4839 0a87 42010000 		.4byte	0x142
 4840 0a8b 05       		.uleb128 0x5
 4841 0a8c 03       		.byte	0x3
 4842 0a8d 00000000 		.4byte	buffer_state
 4843 0a91 24       		.uleb128 0x24
 4844 0a92 7D000000 		.4byte	.LASF148
 4845 0a96 05       		.byte	0x5
 4846 0a97 63       		.byte	0x63
 4847 0a98 42010000 		.4byte	0x142
 4848 0a9c 05       		.uleb128 0x5
 4849 0a9d 03       		.byte	0x3
 4850 0a9e 00000000 		.4byte	system_state
 4851 0aa2 24       		.uleb128 0x24
 4852 0aa3 77020000 		.4byte	.LASF149
 4853 0aa7 05       		.byte	0x5
 4854 0aa8 65       		.byte	0x65
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 101


 4855 0aa9 E6000000 		.4byte	0xe6
 4856 0aad 05       		.uleb128 0x5
 4857 0aae 03       		.byte	0x3
 4858 0aaf 00000000 		.4byte	prev_movement_state
 4859 0ab3 24       		.uleb128 0x24
 4860 0ab4 38010000 		.4byte	.LASF150
 4861 0ab8 05       		.byte	0x5
 4862 0ab9 66       		.byte	0x66
 4863 0aba E6000000 		.4byte	0xe6
 4864 0abe 05       		.uleb128 0x5
 4865 0abf 03       		.byte	0x3
 4866 0ac0 00000000 		.4byte	movement_state
 4867 0ac4 24       		.uleb128 0x24
 4868 0ac5 62000000 		.4byte	.LASF151
 4869 0ac9 05       		.byte	0x5
 4870 0aca 67       		.byte	0x67
 4871 0acb 1D010000 		.4byte	0x11d
 4872 0acf 05       		.uleb128 0x5
 4873 0ad0 03       		.byte	0x3
 4874 0ad1 00000000 		.4byte	track_mode
 4875 0ad5 24       		.uleb128 0x24
 4876 0ad6 66020000 		.4byte	.LASF152
 4877 0ada 05       		.byte	0x5
 4878 0adb 69       		.byte	0x69
 4879 0adc 95000000 		.4byte	0x95
 4880 0ae0 05       		.uleb128 0x5
 4881 0ae1 03       		.byte	0x3
 4882 0ae2 00000000 		.4byte	byteCount
 4883 0ae6 0E       		.uleb128 0xe
 4884 0ae7 83000000 		.4byte	0x83
 4885 0aeb F60A0000 		.4byte	0xaf6
 4886 0aef 0F       		.uleb128 0xf
 4887 0af0 76000000 		.4byte	0x76
 4888 0af4 01       		.byte	0x1
 4889 0af5 00       		.byte	0
 4890 0af6 24       		.uleb128 0x24
 4891 0af7 E7050000 		.4byte	.LASF153
 4892 0afb 05       		.byte	0x5
 4893 0afc 6A       		.byte	0x6a
 4894 0afd E60A0000 		.4byte	0xae6
 4895 0b01 05       		.uleb128 0x5
 4896 0b02 03       		.byte	0x3
 4897 0b03 00000000 		.4byte	packet
 4898 0b07 24       		.uleb128 0x24
 4899 0b08 FB000000 		.4byte	.LASF154
 4900 0b0c 05       		.byte	0x5
 4901 0b0d 6D       		.byte	0x6d
 4902 0b0e D8000000 		.4byte	0xd8
 4903 0b12 05       		.uleb128 0x5
 4904 0b13 03       		.byte	0x3
 4905 0b14 00000000 		.4byte	speed
 4906 0b18 00       		.byte	0
 4907              		.section	.debug_abbrev,"",%progbits
 4908              	.Ldebug_abbrev0:
 4909 0000 01       		.uleb128 0x1
 4910 0001 11       		.uleb128 0x11
 4911 0002 01       		.byte	0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 102


 4912 0003 25       		.uleb128 0x25
 4913 0004 0E       		.uleb128 0xe
 4914 0005 13       		.uleb128 0x13
 4915 0006 0B       		.uleb128 0xb
 4916 0007 03       		.uleb128 0x3
 4917 0008 0E       		.uleb128 0xe
 4918 0009 1B       		.uleb128 0x1b
 4919 000a 0E       		.uleb128 0xe
 4920 000b 55       		.uleb128 0x55
 4921 000c 17       		.uleb128 0x17
 4922 000d 11       		.uleb128 0x11
 4923 000e 01       		.uleb128 0x1
 4924 000f 10       		.uleb128 0x10
 4925 0010 17       		.uleb128 0x17
 4926 0011 00       		.byte	0
 4927 0012 00       		.byte	0
 4928 0013 02       		.uleb128 0x2
 4929 0014 24       		.uleb128 0x24
 4930 0015 00       		.byte	0
 4931 0016 0B       		.uleb128 0xb
 4932 0017 0B       		.uleb128 0xb
 4933 0018 3E       		.uleb128 0x3e
 4934 0019 0B       		.uleb128 0xb
 4935 001a 03       		.uleb128 0x3
 4936 001b 0E       		.uleb128 0xe
 4937 001c 00       		.byte	0
 4938 001d 00       		.byte	0
 4939 001e 03       		.uleb128 0x3
 4940 001f 16       		.uleb128 0x16
 4941 0020 00       		.byte	0
 4942 0021 03       		.uleb128 0x3
 4943 0022 0E       		.uleb128 0xe
 4944 0023 3A       		.uleb128 0x3a
 4945 0024 0B       		.uleb128 0xb
 4946 0025 3B       		.uleb128 0x3b
 4947 0026 0B       		.uleb128 0xb
 4948 0027 49       		.uleb128 0x49
 4949 0028 13       		.uleb128 0x13
 4950 0029 00       		.byte	0
 4951 002a 00       		.byte	0
 4952 002b 04       		.uleb128 0x4
 4953 002c 24       		.uleb128 0x24
 4954 002d 00       		.byte	0
 4955 002e 0B       		.uleb128 0xb
 4956 002f 0B       		.uleb128 0xb
 4957 0030 3E       		.uleb128 0x3e
 4958 0031 0B       		.uleb128 0xb
 4959 0032 03       		.uleb128 0x3
 4960 0033 08       		.uleb128 0x8
 4961 0034 00       		.byte	0
 4962 0035 00       		.byte	0
 4963 0036 05       		.uleb128 0x5
 4964 0037 0F       		.uleb128 0xf
 4965 0038 00       		.byte	0
 4966 0039 0B       		.uleb128 0xb
 4967 003a 0B       		.uleb128 0xb
 4968 003b 49       		.uleb128 0x49
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 103


 4969 003c 13       		.uleb128 0x13
 4970 003d 00       		.byte	0
 4971 003e 00       		.byte	0
 4972 003f 06       		.uleb128 0x6
 4973 0040 16       		.uleb128 0x16
 4974 0041 00       		.byte	0
 4975 0042 03       		.uleb128 0x3
 4976 0043 0E       		.uleb128 0xe
 4977 0044 3A       		.uleb128 0x3a
 4978 0045 0B       		.uleb128 0xb
 4979 0046 3B       		.uleb128 0x3b
 4980 0047 05       		.uleb128 0x5
 4981 0048 49       		.uleb128 0x49
 4982 0049 13       		.uleb128 0x13
 4983 004a 00       		.byte	0
 4984 004b 00       		.byte	0
 4985 004c 07       		.uleb128 0x7
 4986 004d 04       		.uleb128 0x4
 4987 004e 01       		.byte	0x1
 4988 004f 03       		.uleb128 0x3
 4989 0050 0E       		.uleb128 0xe
 4990 0051 0B       		.uleb128 0xb
 4991 0052 0B       		.uleb128 0xb
 4992 0053 3A       		.uleb128 0x3a
 4993 0054 0B       		.uleb128 0xb
 4994 0055 3B       		.uleb128 0x3b
 4995 0056 0B       		.uleb128 0xb
 4996 0057 01       		.uleb128 0x1
 4997 0058 13       		.uleb128 0x13
 4998 0059 00       		.byte	0
 4999 005a 00       		.byte	0
 5000 005b 08       		.uleb128 0x8
 5001 005c 28       		.uleb128 0x28
 5002 005d 00       		.byte	0
 5003 005e 03       		.uleb128 0x3
 5004 005f 0E       		.uleb128 0xe
 5005 0060 1C       		.uleb128 0x1c
 5006 0061 0D       		.uleb128 0xd
 5007 0062 00       		.byte	0
 5008 0063 00       		.byte	0
 5009 0064 09       		.uleb128 0x9
 5010 0065 13       		.uleb128 0x13
 5011 0066 01       		.byte	0x1
 5012 0067 03       		.uleb128 0x3
 5013 0068 0E       		.uleb128 0xe
 5014 0069 0B       		.uleb128 0xb
 5015 006a 0B       		.uleb128 0xb
 5016 006b 3A       		.uleb128 0x3a
 5017 006c 0B       		.uleb128 0xb
 5018 006d 3B       		.uleb128 0x3b
 5019 006e 0B       		.uleb128 0xb
 5020 006f 01       		.uleb128 0x1
 5021 0070 13       		.uleb128 0x13
 5022 0071 00       		.byte	0
 5023 0072 00       		.byte	0
 5024 0073 0A       		.uleb128 0xa
 5025 0074 0D       		.uleb128 0xd
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 104


 5026 0075 00       		.byte	0
 5027 0076 03       		.uleb128 0x3
 5028 0077 0E       		.uleb128 0xe
 5029 0078 3A       		.uleb128 0x3a
 5030 0079 0B       		.uleb128 0xb
 5031 007a 3B       		.uleb128 0x3b
 5032 007b 0B       		.uleb128 0xb
 5033 007c 49       		.uleb128 0x49
 5034 007d 13       		.uleb128 0x13
 5035 007e 38       		.uleb128 0x38
 5036 007f 0B       		.uleb128 0xb
 5037 0080 00       		.byte	0
 5038 0081 00       		.byte	0
 5039 0082 0B       		.uleb128 0xb
 5040 0083 2E       		.uleb128 0x2e
 5041 0084 01       		.byte	0x1
 5042 0085 3F       		.uleb128 0x3f
 5043 0086 19       		.uleb128 0x19
 5044 0087 03       		.uleb128 0x3
 5045 0088 0E       		.uleb128 0xe
 5046 0089 3A       		.uleb128 0x3a
 5047 008a 0B       		.uleb128 0xb
 5048 008b 3B       		.uleb128 0x3b
 5049 008c 0B       		.uleb128 0xb
 5050 008d 11       		.uleb128 0x11
 5051 008e 01       		.uleb128 0x1
 5052 008f 12       		.uleb128 0x12
 5053 0090 06       		.uleb128 0x6
 5054 0091 40       		.uleb128 0x40
 5055 0092 18       		.uleb128 0x18
 5056 0093 9742     		.uleb128 0x2117
 5057 0095 19       		.uleb128 0x19
 5058 0096 01       		.uleb128 0x1
 5059 0097 13       		.uleb128 0x13
 5060 0098 00       		.byte	0
 5061 0099 00       		.byte	0
 5062 009a 0C       		.uleb128 0xc
 5063 009b 0B       		.uleb128 0xb
 5064 009c 01       		.byte	0x1
 5065 009d 11       		.uleb128 0x11
 5066 009e 01       		.uleb128 0x1
 5067 009f 12       		.uleb128 0x12
 5068 00a0 06       		.uleb128 0x6
 5069 00a1 00       		.byte	0
 5070 00a2 00       		.byte	0
 5071 00a3 0D       		.uleb128 0xd
 5072 00a4 34       		.uleb128 0x34
 5073 00a5 00       		.byte	0
 5074 00a6 03       		.uleb128 0x3
 5075 00a7 0E       		.uleb128 0xe
 5076 00a8 3A       		.uleb128 0x3a
 5077 00a9 0B       		.uleb128 0xb
 5078 00aa 3B       		.uleb128 0x3b
 5079 00ab 0B       		.uleb128 0xb
 5080 00ac 49       		.uleb128 0x49
 5081 00ad 13       		.uleb128 0x13
 5082 00ae 02       		.uleb128 0x2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 105


 5083 00af 18       		.uleb128 0x18
 5084 00b0 00       		.byte	0
 5085 00b1 00       		.byte	0
 5086 00b2 0E       		.uleb128 0xe
 5087 00b3 01       		.uleb128 0x1
 5088 00b4 01       		.byte	0x1
 5089 00b5 49       		.uleb128 0x49
 5090 00b6 13       		.uleb128 0x13
 5091 00b7 01       		.uleb128 0x1
 5092 00b8 13       		.uleb128 0x13
 5093 00b9 00       		.byte	0
 5094 00ba 00       		.byte	0
 5095 00bb 0F       		.uleb128 0xf
 5096 00bc 21       		.uleb128 0x21
 5097 00bd 00       		.byte	0
 5098 00be 49       		.uleb128 0x49
 5099 00bf 13       		.uleb128 0x13
 5100 00c0 2F       		.uleb128 0x2f
 5101 00c1 0B       		.uleb128 0xb
 5102 00c2 00       		.byte	0
 5103 00c3 00       		.byte	0
 5104 00c4 10       		.uleb128 0x10
 5105 00c5 2E       		.uleb128 0x2e
 5106 00c6 01       		.byte	0x1
 5107 00c7 3F       		.uleb128 0x3f
 5108 00c8 19       		.uleb128 0x19
 5109 00c9 03       		.uleb128 0x3
 5110 00ca 0E       		.uleb128 0xe
 5111 00cb 3A       		.uleb128 0x3a
 5112 00cc 0B       		.uleb128 0xb
 5113 00cd 3B       		.uleb128 0x3b
 5114 00ce 0B       		.uleb128 0xb
 5115 00cf 27       		.uleb128 0x27
 5116 00d0 19       		.uleb128 0x19
 5117 00d1 11       		.uleb128 0x11
 5118 00d2 01       		.uleb128 0x1
 5119 00d3 12       		.uleb128 0x12
 5120 00d4 06       		.uleb128 0x6
 5121 00d5 40       		.uleb128 0x40
 5122 00d6 18       		.uleb128 0x18
 5123 00d7 9642     		.uleb128 0x2116
 5124 00d9 19       		.uleb128 0x19
 5125 00da 01       		.uleb128 0x1
 5126 00db 13       		.uleb128 0x13
 5127 00dc 00       		.byte	0
 5128 00dd 00       		.byte	0
 5129 00de 11       		.uleb128 0x11
 5130 00df 05       		.uleb128 0x5
 5131 00e0 00       		.byte	0
 5132 00e1 03       		.uleb128 0x3
 5133 00e2 08       		.uleb128 0x8
 5134 00e3 3A       		.uleb128 0x3a
 5135 00e4 0B       		.uleb128 0xb
 5136 00e5 3B       		.uleb128 0x3b
 5137 00e6 0B       		.uleb128 0xb
 5138 00e7 49       		.uleb128 0x49
 5139 00e8 13       		.uleb128 0x13
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 106


 5140 00e9 02       		.uleb128 0x2
 5141 00ea 18       		.uleb128 0x18
 5142 00eb 00       		.byte	0
 5143 00ec 00       		.byte	0
 5144 00ed 12       		.uleb128 0x12
 5145 00ee 2E       		.uleb128 0x2e
 5146 00ef 01       		.byte	0x1
 5147 00f0 3F       		.uleb128 0x3f
 5148 00f1 19       		.uleb128 0x19
 5149 00f2 03       		.uleb128 0x3
 5150 00f3 0E       		.uleb128 0xe
 5151 00f4 3A       		.uleb128 0x3a
 5152 00f5 0B       		.uleb128 0xb
 5153 00f6 3B       		.uleb128 0x3b
 5154 00f7 0B       		.uleb128 0xb
 5155 00f8 11       		.uleb128 0x11
 5156 00f9 01       		.uleb128 0x1
 5157 00fa 12       		.uleb128 0x12
 5158 00fb 06       		.uleb128 0x6
 5159 00fc 40       		.uleb128 0x40
 5160 00fd 18       		.uleb128 0x18
 5161 00fe 9642     		.uleb128 0x2116
 5162 0100 19       		.uleb128 0x19
 5163 0101 01       		.uleb128 0x1
 5164 0102 13       		.uleb128 0x13
 5165 0103 00       		.byte	0
 5166 0104 00       		.byte	0
 5167 0105 13       		.uleb128 0x13
 5168 0106 34       		.uleb128 0x34
 5169 0107 00       		.byte	0
 5170 0108 03       		.uleb128 0x3
 5171 0109 08       		.uleb128 0x8
 5172 010a 3A       		.uleb128 0x3a
 5173 010b 0B       		.uleb128 0xb
 5174 010c 3B       		.uleb128 0x3b
 5175 010d 0B       		.uleb128 0xb
 5176 010e 49       		.uleb128 0x49
 5177 010f 13       		.uleb128 0x13
 5178 0110 02       		.uleb128 0x2
 5179 0111 18       		.uleb128 0x18
 5180 0112 00       		.byte	0
 5181 0113 00       		.byte	0
 5182 0114 14       		.uleb128 0x14
 5183 0115 05       		.uleb128 0x5
 5184 0116 00       		.byte	0
 5185 0117 03       		.uleb128 0x3
 5186 0118 0E       		.uleb128 0xe
 5187 0119 3A       		.uleb128 0x3a
 5188 011a 0B       		.uleb128 0xb
 5189 011b 3B       		.uleb128 0x3b
 5190 011c 0B       		.uleb128 0xb
 5191 011d 49       		.uleb128 0x49
 5192 011e 13       		.uleb128 0x13
 5193 011f 02       		.uleb128 0x2
 5194 0120 18       		.uleb128 0x18
 5195 0121 00       		.byte	0
 5196 0122 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 107


 5197 0123 15       		.uleb128 0x15
 5198 0124 2E       		.uleb128 0x2e
 5199 0125 00       		.byte	0
 5200 0126 3F       		.uleb128 0x3f
 5201 0127 19       		.uleb128 0x19
 5202 0128 03       		.uleb128 0x3
 5203 0129 0E       		.uleb128 0xe
 5204 012a 3A       		.uleb128 0x3a
 5205 012b 0B       		.uleb128 0xb
 5206 012c 3B       		.uleb128 0x3b
 5207 012d 0B       		.uleb128 0xb
 5208 012e 11       		.uleb128 0x11
 5209 012f 01       		.uleb128 0x1
 5210 0130 12       		.uleb128 0x12
 5211 0131 06       		.uleb128 0x6
 5212 0132 40       		.uleb128 0x40
 5213 0133 18       		.uleb128 0x18
 5214 0134 9642     		.uleb128 0x2116
 5215 0136 19       		.uleb128 0x19
 5216 0137 00       		.byte	0
 5217 0138 00       		.byte	0
 5218 0139 16       		.uleb128 0x16
 5219 013a 2E       		.uleb128 0x2e
 5220 013b 00       		.byte	0
 5221 013c 3F       		.uleb128 0x3f
 5222 013d 19       		.uleb128 0x19
 5223 013e 03       		.uleb128 0x3
 5224 013f 0E       		.uleb128 0xe
 5225 0140 3A       		.uleb128 0x3a
 5226 0141 0B       		.uleb128 0xb
 5227 0142 3B       		.uleb128 0x3b
 5228 0143 05       		.uleb128 0x5
 5229 0144 11       		.uleb128 0x11
 5230 0145 01       		.uleb128 0x1
 5231 0146 12       		.uleb128 0x12
 5232 0147 06       		.uleb128 0x6
 5233 0148 40       		.uleb128 0x40
 5234 0149 18       		.uleb128 0x18
 5235 014a 9642     		.uleb128 0x2116
 5236 014c 19       		.uleb128 0x19
 5237 014d 00       		.byte	0
 5238 014e 00       		.byte	0
 5239 014f 17       		.uleb128 0x17
 5240 0150 2E       		.uleb128 0x2e
 5241 0151 00       		.byte	0
 5242 0152 3F       		.uleb128 0x3f
 5243 0153 19       		.uleb128 0x19
 5244 0154 03       		.uleb128 0x3
 5245 0155 0E       		.uleb128 0xe
 5246 0156 3A       		.uleb128 0x3a
 5247 0157 0B       		.uleb128 0xb
 5248 0158 3B       		.uleb128 0x3b
 5249 0159 05       		.uleb128 0x5
 5250 015a 11       		.uleb128 0x11
 5251 015b 01       		.uleb128 0x1
 5252 015c 12       		.uleb128 0x12
 5253 015d 06       		.uleb128 0x6
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 108


 5254 015e 40       		.uleb128 0x40
 5255 015f 18       		.uleb128 0x18
 5256 0160 9742     		.uleb128 0x2117
 5257 0162 19       		.uleb128 0x19
 5258 0163 00       		.byte	0
 5259 0164 00       		.byte	0
 5260 0165 18       		.uleb128 0x18
 5261 0166 2E       		.uleb128 0x2e
 5262 0167 01       		.byte	0x1
 5263 0168 3F       		.uleb128 0x3f
 5264 0169 19       		.uleb128 0x19
 5265 016a 03       		.uleb128 0x3
 5266 016b 0E       		.uleb128 0xe
 5267 016c 3A       		.uleb128 0x3a
 5268 016d 0B       		.uleb128 0xb
 5269 016e 3B       		.uleb128 0x3b
 5270 016f 05       		.uleb128 0x5
 5271 0170 27       		.uleb128 0x27
 5272 0171 19       		.uleb128 0x19
 5273 0172 11       		.uleb128 0x11
 5274 0173 01       		.uleb128 0x1
 5275 0174 12       		.uleb128 0x12
 5276 0175 06       		.uleb128 0x6
 5277 0176 40       		.uleb128 0x40
 5278 0177 18       		.uleb128 0x18
 5279 0178 9642     		.uleb128 0x2116
 5280 017a 19       		.uleb128 0x19
 5281 017b 01       		.uleb128 0x1
 5282 017c 13       		.uleb128 0x13
 5283 017d 00       		.byte	0
 5284 017e 00       		.byte	0
 5285 017f 19       		.uleb128 0x19
 5286 0180 34       		.uleb128 0x34
 5287 0181 00       		.byte	0
 5288 0182 03       		.uleb128 0x3
 5289 0183 0E       		.uleb128 0xe
 5290 0184 3A       		.uleb128 0x3a
 5291 0185 0B       		.uleb128 0xb
 5292 0186 3B       		.uleb128 0x3b
 5293 0187 05       		.uleb128 0x5
 5294 0188 49       		.uleb128 0x49
 5295 0189 13       		.uleb128 0x13
 5296 018a 02       		.uleb128 0x2
 5297 018b 18       		.uleb128 0x18
 5298 018c 00       		.byte	0
 5299 018d 00       		.byte	0
 5300 018e 1A       		.uleb128 0x1a
 5301 018f 2E       		.uleb128 0x2e
 5302 0190 00       		.byte	0
 5303 0191 3F       		.uleb128 0x3f
 5304 0192 19       		.uleb128 0x19
 5305 0193 03       		.uleb128 0x3
 5306 0194 0E       		.uleb128 0xe
 5307 0195 3A       		.uleb128 0x3a
 5308 0196 0B       		.uleb128 0xb
 5309 0197 3B       		.uleb128 0x3b
 5310 0198 05       		.uleb128 0x5
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 109


 5311 0199 27       		.uleb128 0x27
 5312 019a 19       		.uleb128 0x19
 5313 019b 11       		.uleb128 0x11
 5314 019c 01       		.uleb128 0x1
 5315 019d 12       		.uleb128 0x12
 5316 019e 06       		.uleb128 0x6
 5317 019f 40       		.uleb128 0x40
 5318 01a0 18       		.uleb128 0x18
 5319 01a1 9742     		.uleb128 0x2117
 5320 01a3 19       		.uleb128 0x19
 5321 01a4 00       		.byte	0
 5322 01a5 00       		.byte	0
 5323 01a6 1B       		.uleb128 0x1b
 5324 01a7 2E       		.uleb128 0x2e
 5325 01a8 00       		.byte	0
 5326 01a9 3F       		.uleb128 0x3f
 5327 01aa 19       		.uleb128 0x19
 5328 01ab 03       		.uleb128 0x3
 5329 01ac 0E       		.uleb128 0xe
 5330 01ad 3A       		.uleb128 0x3a
 5331 01ae 0B       		.uleb128 0xb
 5332 01af 3B       		.uleb128 0x3b
 5333 01b0 05       		.uleb128 0x5
 5334 01b1 27       		.uleb128 0x27
 5335 01b2 19       		.uleb128 0x19
 5336 01b3 11       		.uleb128 0x11
 5337 01b4 01       		.uleb128 0x1
 5338 01b5 12       		.uleb128 0x12
 5339 01b6 06       		.uleb128 0x6
 5340 01b7 40       		.uleb128 0x40
 5341 01b8 18       		.uleb128 0x18
 5342 01b9 9642     		.uleb128 0x2116
 5343 01bb 19       		.uleb128 0x19
 5344 01bc 00       		.byte	0
 5345 01bd 00       		.byte	0
 5346 01be 1C       		.uleb128 0x1c
 5347 01bf 2E       		.uleb128 0x2e
 5348 01c0 01       		.byte	0x1
 5349 01c1 3F       		.uleb128 0x3f
 5350 01c2 19       		.uleb128 0x19
 5351 01c3 03       		.uleb128 0x3
 5352 01c4 0E       		.uleb128 0xe
 5353 01c5 3A       		.uleb128 0x3a
 5354 01c6 0B       		.uleb128 0xb
 5355 01c7 3B       		.uleb128 0x3b
 5356 01c8 05       		.uleb128 0x5
 5357 01c9 11       		.uleb128 0x11
 5358 01ca 01       		.uleb128 0x1
 5359 01cb 12       		.uleb128 0x12
 5360 01cc 06       		.uleb128 0x6
 5361 01cd 40       		.uleb128 0x40
 5362 01ce 18       		.uleb128 0x18
 5363 01cf 9642     		.uleb128 0x2116
 5364 01d1 19       		.uleb128 0x19
 5365 01d2 01       		.uleb128 0x1
 5366 01d3 13       		.uleb128 0x13
 5367 01d4 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 110


 5368 01d5 00       		.byte	0
 5369 01d6 1D       		.uleb128 0x1d
 5370 01d7 34       		.uleb128 0x34
 5371 01d8 00       		.byte	0
 5372 01d9 03       		.uleb128 0x3
 5373 01da 08       		.uleb128 0x8
 5374 01db 3A       		.uleb128 0x3a
 5375 01dc 0B       		.uleb128 0xb
 5376 01dd 3B       		.uleb128 0x3b
 5377 01de 05       		.uleb128 0x5
 5378 01df 49       		.uleb128 0x49
 5379 01e0 13       		.uleb128 0x13
 5380 01e1 02       		.uleb128 0x2
 5381 01e2 18       		.uleb128 0x18
 5382 01e3 00       		.byte	0
 5383 01e4 00       		.byte	0
 5384 01e5 1E       		.uleb128 0x1e
 5385 01e6 05       		.uleb128 0x5
 5386 01e7 00       		.byte	0
 5387 01e8 03       		.uleb128 0x3
 5388 01e9 0E       		.uleb128 0xe
 5389 01ea 3A       		.uleb128 0x3a
 5390 01eb 0B       		.uleb128 0xb
 5391 01ec 3B       		.uleb128 0x3b
 5392 01ed 05       		.uleb128 0x5
 5393 01ee 49       		.uleb128 0x49
 5394 01ef 13       		.uleb128 0x13
 5395 01f0 02       		.uleb128 0x2
 5396 01f1 18       		.uleb128 0x18
 5397 01f2 00       		.byte	0
 5398 01f3 00       		.byte	0
 5399 01f4 1F       		.uleb128 0x1f
 5400 01f5 2E       		.uleb128 0x2e
 5401 01f6 01       		.byte	0x1
 5402 01f7 3F       		.uleb128 0x3f
 5403 01f8 19       		.uleb128 0x19
 5404 01f9 03       		.uleb128 0x3
 5405 01fa 0E       		.uleb128 0xe
 5406 01fb 3A       		.uleb128 0x3a
 5407 01fc 0B       		.uleb128 0xb
 5408 01fd 3B       		.uleb128 0x3b
 5409 01fe 05       		.uleb128 0x5
 5410 01ff 49       		.uleb128 0x49
 5411 0200 13       		.uleb128 0x13
 5412 0201 11       		.uleb128 0x11
 5413 0202 01       		.uleb128 0x1
 5414 0203 12       		.uleb128 0x12
 5415 0204 06       		.uleb128 0x6
 5416 0205 40       		.uleb128 0x40
 5417 0206 18       		.uleb128 0x18
 5418 0207 9642     		.uleb128 0x2116
 5419 0209 19       		.uleb128 0x19
 5420 020a 01       		.uleb128 0x1
 5421 020b 13       		.uleb128 0x13
 5422 020c 00       		.byte	0
 5423 020d 00       		.byte	0
 5424 020e 20       		.uleb128 0x20
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 111


 5425 020f 05       		.uleb128 0x5
 5426 0210 00       		.byte	0
 5427 0211 03       		.uleb128 0x3
 5428 0212 08       		.uleb128 0x8
 5429 0213 3A       		.uleb128 0x3a
 5430 0214 0B       		.uleb128 0xb
 5431 0215 3B       		.uleb128 0x3b
 5432 0216 05       		.uleb128 0x5
 5433 0217 49       		.uleb128 0x49
 5434 0218 13       		.uleb128 0x13
 5435 0219 02       		.uleb128 0x2
 5436 021a 18       		.uleb128 0x18
 5437 021b 00       		.byte	0
 5438 021c 00       		.byte	0
 5439 021d 21       		.uleb128 0x21
 5440 021e 34       		.uleb128 0x34
 5441 021f 00       		.byte	0
 5442 0220 03       		.uleb128 0x3
 5443 0221 0E       		.uleb128 0xe
 5444 0222 3A       		.uleb128 0x3a
 5445 0223 0B       		.uleb128 0xb
 5446 0224 3B       		.uleb128 0x3b
 5447 0225 05       		.uleb128 0x5
 5448 0226 49       		.uleb128 0x49
 5449 0227 13       		.uleb128 0x13
 5450 0228 3F       		.uleb128 0x3f
 5451 0229 19       		.uleb128 0x19
 5452 022a 3C       		.uleb128 0x3c
 5453 022b 19       		.uleb128 0x19
 5454 022c 00       		.byte	0
 5455 022d 00       		.byte	0
 5456 022e 22       		.uleb128 0x22
 5457 022f 35       		.uleb128 0x35
 5458 0230 00       		.byte	0
 5459 0231 49       		.uleb128 0x49
 5460 0232 13       		.uleb128 0x13
 5461 0233 00       		.byte	0
 5462 0234 00       		.byte	0
 5463 0235 23       		.uleb128 0x23
 5464 0236 34       		.uleb128 0x34
 5465 0237 00       		.byte	0
 5466 0238 03       		.uleb128 0x3
 5467 0239 08       		.uleb128 0x8
 5468 023a 3A       		.uleb128 0x3a
 5469 023b 0B       		.uleb128 0xb
 5470 023c 3B       		.uleb128 0x3b
 5471 023d 0B       		.uleb128 0xb
 5472 023e 49       		.uleb128 0x49
 5473 023f 13       		.uleb128 0x13
 5474 0240 3F       		.uleb128 0x3f
 5475 0241 19       		.uleb128 0x19
 5476 0242 02       		.uleb128 0x2
 5477 0243 18       		.uleb128 0x18
 5478 0244 00       		.byte	0
 5479 0245 00       		.byte	0
 5480 0246 24       		.uleb128 0x24
 5481 0247 34       		.uleb128 0x34
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 112


 5482 0248 00       		.byte	0
 5483 0249 03       		.uleb128 0x3
 5484 024a 0E       		.uleb128 0xe
 5485 024b 3A       		.uleb128 0x3a
 5486 024c 0B       		.uleb128 0xb
 5487 024d 3B       		.uleb128 0x3b
 5488 024e 0B       		.uleb128 0xb
 5489 024f 49       		.uleb128 0x49
 5490 0250 13       		.uleb128 0x13
 5491 0251 3F       		.uleb128 0x3f
 5492 0252 19       		.uleb128 0x19
 5493 0253 02       		.uleb128 0x2
 5494 0254 18       		.uleb128 0x18
 5495 0255 00       		.byte	0
 5496 0256 00       		.byte	0
 5497 0257 00       		.byte	0
 5498              		.section	.debug_aranges,"",%progbits
 5499 0000 44010000 		.4byte	0x144
 5500 0004 0200     		.2byte	0x2
 5501 0006 00000000 		.4byte	.Ldebug_info0
 5502 000a 04       		.byte	0x4
 5503 000b 00       		.byte	0
 5504 000c 0000     		.2byte	0
 5505 000e 0000     		.2byte	0
 5506 0010 00000000 		.4byte	.LFB63
 5507 0014 60010000 		.4byte	.LFE63-.LFB63
 5508 0018 00000000 		.4byte	.LFB64
 5509 001c 18000000 		.4byte	.LFE64-.LFB64
 5510 0020 00000000 		.4byte	.LFB65
 5511 0024 18000000 		.4byte	.LFE65-.LFB65
 5512 0028 00000000 		.4byte	.LFB66
 5513 002c 54000000 		.4byte	.LFE66-.LFB66
 5514 0030 00000000 		.4byte	.LFB67
 5515 0034 F4000000 		.4byte	.LFE67-.LFB67
 5516 0038 00000000 		.4byte	.LFB68
 5517 003c 18000000 		.4byte	.LFE68-.LFB68
 5518 0040 00000000 		.4byte	.LFB69
 5519 0044 18000000 		.4byte	.LFE69-.LFB69
 5520 0048 00000000 		.4byte	.LFB70
 5521 004c 22000000 		.4byte	.LFE70-.LFB70
 5522 0050 00000000 		.4byte	.LFB71
 5523 0054 1C000000 		.4byte	.LFE71-.LFB71
 5524 0058 00000000 		.4byte	.LFB72
 5525 005c 28000000 		.4byte	.LFE72-.LFB72
 5526 0060 00000000 		.4byte	.LFB73
 5527 0064 2C000000 		.4byte	.LFE73-.LFB73
 5528 0068 00000000 		.4byte	.LFB74
 5529 006c 38000000 		.4byte	.LFE74-.LFB74
 5530 0070 00000000 		.4byte	.LFB75
 5531 0074 38000000 		.4byte	.LFE75-.LFB75
 5532 0078 00000000 		.4byte	.LFB76
 5533 007c 14000000 		.4byte	.LFE76-.LFB76
 5534 0080 00000000 		.4byte	.LFB77
 5535 0084 18000000 		.4byte	.LFE77-.LFB77
 5536 0088 00000000 		.4byte	.LFB78
 5537 008c 18000000 		.4byte	.LFE78-.LFB78
 5538 0090 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 113


 5539 0094 18000000 		.4byte	.LFE79-.LFB79
 5540 0098 00000000 		.4byte	.LFB80
 5541 009c 18000000 		.4byte	.LFE80-.LFB80
 5542 00a0 00000000 		.4byte	.LFB81
 5543 00a4 98000000 		.4byte	.LFE81-.LFB81
 5544 00a8 00000000 		.4byte	.LFB82
 5545 00ac F0000000 		.4byte	.LFE82-.LFB82
 5546 00b0 00000000 		.4byte	.LFB83
 5547 00b4 0C000000 		.4byte	.LFE83-.LFB83
 5548 00b8 00000000 		.4byte	.LFB84
 5549 00bc 2C000000 		.4byte	.LFE84-.LFB84
 5550 00c0 00000000 		.4byte	.LFB85
 5551 00c4 B8000000 		.4byte	.LFE85-.LFB85
 5552 00c8 00000000 		.4byte	.LFB86
 5553 00cc 78000000 		.4byte	.LFE86-.LFB86
 5554 00d0 00000000 		.4byte	.LFB87
 5555 00d4 20000000 		.4byte	.LFE87-.LFB87
 5556 00d8 00000000 		.4byte	.LFB88
 5557 00dc 1C000000 		.4byte	.LFE88-.LFB88
 5558 00e0 00000000 		.4byte	.LFB89
 5559 00e4 0A000000 		.4byte	.LFE89-.LFB89
 5560 00e8 00000000 		.4byte	.LFB90
 5561 00ec 30020000 		.4byte	.LFE90-.LFB90
 5562 00f0 00000000 		.4byte	.LFB91
 5563 00f4 50010000 		.4byte	.LFE91-.LFB91
 5564 00f8 00000000 		.4byte	.LFB92
 5565 00fc 50010000 		.4byte	.LFE92-.LFB92
 5566 0100 00000000 		.4byte	.LFB93
 5567 0104 B0010000 		.4byte	.LFE93-.LFB93
 5568 0108 00000000 		.4byte	.LFB94
 5569 010c C0000000 		.4byte	.LFE94-.LFB94
 5570 0110 00000000 		.4byte	.LFB95
 5571 0114 B8000000 		.4byte	.LFE95-.LFB95
 5572 0118 00000000 		.4byte	.LFB96
 5573 011c 4A000000 		.4byte	.LFE96-.LFB96
 5574 0120 00000000 		.4byte	.LFB97
 5575 0124 24010000 		.4byte	.LFE97-.LFB97
 5576 0128 00000000 		.4byte	.LFB98
 5577 012c 68000000 		.4byte	.LFE98-.LFB98
 5578 0130 00000000 		.4byte	.LFB99
 5579 0134 50000000 		.4byte	.LFE99-.LFB99
 5580 0138 00000000 		.4byte	.LFB100
 5581 013c 3A000000 		.4byte	.LFE100-.LFB100
 5582 0140 00000000 		.4byte	0
 5583 0144 00000000 		.4byte	0
 5584              		.section	.debug_ranges,"",%progbits
 5585              	.Ldebug_ranges0:
 5586 0000 00000000 		.4byte	.LFB63
 5587 0004 60010000 		.4byte	.LFE63
 5588 0008 00000000 		.4byte	.LFB64
 5589 000c 18000000 		.4byte	.LFE64
 5590 0010 00000000 		.4byte	.LFB65
 5591 0014 18000000 		.4byte	.LFE65
 5592 0018 00000000 		.4byte	.LFB66
 5593 001c 54000000 		.4byte	.LFE66
 5594 0020 00000000 		.4byte	.LFB67
 5595 0024 F4000000 		.4byte	.LFE67
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 114


 5596 0028 00000000 		.4byte	.LFB68
 5597 002c 18000000 		.4byte	.LFE68
 5598 0030 00000000 		.4byte	.LFB69
 5599 0034 18000000 		.4byte	.LFE69
 5600 0038 00000000 		.4byte	.LFB70
 5601 003c 22000000 		.4byte	.LFE70
 5602 0040 00000000 		.4byte	.LFB71
 5603 0044 1C000000 		.4byte	.LFE71
 5604 0048 00000000 		.4byte	.LFB72
 5605 004c 28000000 		.4byte	.LFE72
 5606 0050 00000000 		.4byte	.LFB73
 5607 0054 2C000000 		.4byte	.LFE73
 5608 0058 00000000 		.4byte	.LFB74
 5609 005c 38000000 		.4byte	.LFE74
 5610 0060 00000000 		.4byte	.LFB75
 5611 0064 38000000 		.4byte	.LFE75
 5612 0068 00000000 		.4byte	.LFB76
 5613 006c 14000000 		.4byte	.LFE76
 5614 0070 00000000 		.4byte	.LFB77
 5615 0074 18000000 		.4byte	.LFE77
 5616 0078 00000000 		.4byte	.LFB78
 5617 007c 18000000 		.4byte	.LFE78
 5618 0080 00000000 		.4byte	.LFB79
 5619 0084 18000000 		.4byte	.LFE79
 5620 0088 00000000 		.4byte	.LFB80
 5621 008c 18000000 		.4byte	.LFE80
 5622 0090 00000000 		.4byte	.LFB81
 5623 0094 98000000 		.4byte	.LFE81
 5624 0098 00000000 		.4byte	.LFB82
 5625 009c F0000000 		.4byte	.LFE82
 5626 00a0 00000000 		.4byte	.LFB83
 5627 00a4 0C000000 		.4byte	.LFE83
 5628 00a8 00000000 		.4byte	.LFB84
 5629 00ac 2C000000 		.4byte	.LFE84
 5630 00b0 00000000 		.4byte	.LFB85
 5631 00b4 B8000000 		.4byte	.LFE85
 5632 00b8 00000000 		.4byte	.LFB86
 5633 00bc 78000000 		.4byte	.LFE86
 5634 00c0 00000000 		.4byte	.LFB87
 5635 00c4 20000000 		.4byte	.LFE87
 5636 00c8 00000000 		.4byte	.LFB88
 5637 00cc 1C000000 		.4byte	.LFE88
 5638 00d0 00000000 		.4byte	.LFB89
 5639 00d4 0A000000 		.4byte	.LFE89
 5640 00d8 00000000 		.4byte	.LFB90
 5641 00dc 30020000 		.4byte	.LFE90
 5642 00e0 00000000 		.4byte	.LFB91
 5643 00e4 50010000 		.4byte	.LFE91
 5644 00e8 00000000 		.4byte	.LFB92
 5645 00ec 50010000 		.4byte	.LFE92
 5646 00f0 00000000 		.4byte	.LFB93
 5647 00f4 B0010000 		.4byte	.LFE93
 5648 00f8 00000000 		.4byte	.LFB94
 5649 00fc C0000000 		.4byte	.LFE94
 5650 0100 00000000 		.4byte	.LFB95
 5651 0104 B8000000 		.4byte	.LFE95
 5652 0108 00000000 		.4byte	.LFB96
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 115


 5653 010c 4A000000 		.4byte	.LFE96
 5654 0110 00000000 		.4byte	.LFB97
 5655 0114 24010000 		.4byte	.LFE97
 5656 0118 00000000 		.4byte	.LFB98
 5657 011c 68000000 		.4byte	.LFE98
 5658 0120 00000000 		.4byte	.LFB99
 5659 0124 50000000 		.4byte	.LFE99
 5660 0128 00000000 		.4byte	.LFB100
 5661 012c 3A000000 		.4byte	.LFE100
 5662 0130 00000000 		.4byte	0
 5663 0134 00000000 		.4byte	0
 5664              		.section	.debug_line,"",%progbits
 5665              	.Ldebug_line0:
 5666 0000 50060000 		.section	.debug_str,"MS",%progbits,1
 5666      02005501 
 5666      00000201 
 5666      FB0E0D00 
 5666      01010101 
 5667              	.LASF126:
 5668 0000 64697265 		.ascii	"direction\000"
 5668      6374696F 
 5668      6E00
 5669              	.LASF23:
 5670 000a 52545552 		.ascii	"RTURN\000"
 5670      4E00
 5671              	.LASF132:
 5672 0010 71756164 		.ascii	"quad_diff1\000"
 5672      5F646966 
 5672      663100
 5673              	.LASF133:
 5674 001b 71756164 		.ascii	"quad_diff2\000"
 5674      5F646966 
 5674      663200
 5675              	.LASF86:
 5676 0026 51756164 		.ascii	"Quad_Dec_response\000"
 5676      5F446563 
 5676      5F726573 
 5676      706F6E73 
 5676      6500
 5677              	.LASF141:
 5678 0038 70726576 		.ascii	"prevVoltage\000"
 5678      566F6C74 
 5678      61676500 
 5679              	.LASF134:
 5680 0044 73746172 		.ascii	"start_turn_count\000"
 5680      745F7475 
 5680      726E5F63 
 5680      6F756E74 
 5680      00
 5681              	.LASF8:
 5682 0055 756E7369 		.ascii	"unsigned int\000"
 5682      676E6564 
 5682      20696E74 
 5682      00
 5683              	.LASF151:
 5684 0062 74726163 		.ascii	"track_mode\000"
 5684      6B5F6D6F 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 116


 5684      646500
 5685              	.LASF11:
 5686 006d 5F5F696E 		.ascii	"__int32_t\000"
 5686      7433325F 
 5686      7400
 5687              	.LASF17:
 5688 0077 696E7431 		.ascii	"int16\000"
 5688      3600
 5689              	.LASF148:
 5690 007d 73797374 		.ascii	"system_state\000"
 5690      656D5F73 
 5690      74617465 
 5690      00
 5691              	.LASF22:
 5692 008a 4C545552 		.ascii	"LTURN\000"
 5692      4E00
 5693              	.LASF85:
 5694 0090 6973725F 		.ascii	"isr_adcTimer\000"
 5694      61646354 
 5694      696D6572 
 5694      00
 5695              	.LASF25:
 5696 009d 54524143 		.ascii	"TRACKING\000"
 5696      4B494E47 
 5696      00
 5697              	.LASF142:
 5698 00a6 70726576 		.ascii	"prevVoltage2\000"
 5698      566F6C74 
 5698      61676532 
 5698      00
 5699              	.LASF51:
 5700 00b3 7061636B 		.ascii	"packet_bytes\000"
 5700      65745F62 
 5700      79746573 
 5700      00
 5701              	.LASF47:
 5702 00c0 67325F78 		.ascii	"g2_xpos\000"
 5702      706F7300 
 5703              	.LASF29:
 5704 00c8 6D6F6465 		.ascii	"mode\000"
 5704      00
 5705              	.LASF128:
 5706 00cd 71756164 		.ascii	"quad_count1\000"
 5706      5F636F75 
 5706      6E743100 
 5707              	.LASF129:
 5708 00d9 71756164 		.ascii	"quad_count2\000"
 5708      5F636F75 
 5708      6E743200 
 5709              	.LASF95:
 5710 00e5 74726163 		.ascii	"trackLineU\000"
 5710      6B4C696E 
 5710      655500
 5711              	.LASF94:
 5712 00f0 74726163 		.ascii	"trackLineZ\000"
 5712      6B4C696E 
 5712      655A00
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 117


 5713              	.LASF154:
 5714 00fb 73706565 		.ascii	"speed\000"
 5714      6400
 5715              	.LASF33:
 5716 0101 53515541 		.ascii	"SQUARE_TRACK\000"
 5716      52455F54 
 5716      5241434B 
 5716      00
 5717              	.LASF122:
 5718 010e 666C6167 		.ascii	"flag_rf_transmission_active\000"
 5718      5F72665F 
 5718      7472616E 
 5718      736D6973 
 5718      73696F6E 
 5719              	.LASF123:
 5720 012a 666C6167 		.ascii	"flag_print_rf\000"
 5720      5F707269 
 5720      6E745F72 
 5720      6600
 5721              	.LASF150:
 5722 0138 6D6F7665 		.ascii	"movement_state\000"
 5722      6D656E74 
 5722      5F737461 
 5722      746500
 5723              	.LASF26:
 5724 0147 54524143 		.ascii	"TRACKING_U\000"
 5724      4B494E47 
 5724      5F5500
 5725              	.LASF71:
 5726 0152 696E6974 		.ascii	"initForward\000"
 5726      466F7277 
 5726      61726400 
 5727              	.LASF50:
 5728 015e 67325F64 		.ascii	"g2_direction\000"
 5728      69726563 
 5728      74696F6E 
 5728      00
 5729              	.LASF81:
 5730 016b 6973725F 		.ascii	"isr_quad1\000"
 5730      71756164 
 5730      3100
 5731              	.LASF18:
 5732 0175 666C6F61 		.ascii	"float\000"
 5732      7400
 5733              	.LASF58:
 5734 017b 73657453 		.ascii	"setSpeed\000"
 5734      70656564 
 5734      00
 5735              	.LASF146:
 5736 0184 75736242 		.ascii	"usbBuffer\000"
 5736      75666665 
 5736      7200
 5737              	.LASF35:
 5738 018e 696E6465 		.ascii	"index\000"
 5738      7800
 5739              	.LASF21:
 5740 0194 44524956 		.ascii	"DRIVE\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 118


 5740      4500
 5741              	.LASF53:
 5742 019a 73747269 		.ascii	"string_packet\000"
 5742      6E675F70 
 5742      61636B65 
 5742      7400
 5743              	.LASF61:
 5744 01a8 636F756E 		.ascii	"countsLeft\000"
 5744      74734C65 
 5744      667400
 5745              	.LASF66:
 5746 01b3 64726976 		.ascii	"driveForwards\000"
 5746      65466F72 
 5746      77617264 
 5746      7300
 5747              	.LASF68:
 5748 01c1 7475726E 		.ascii	"turnLeft\000"
 5748      4C656674 
 5748      00
 5749              	.LASF7:
 5750 01ca 6C6F6E67 		.ascii	"long long unsigned int\000"
 5750      206C6F6E 
 5750      6720756E 
 5750      7369676E 
 5750      65642069 
 5751              	.LASF119:
 5752 01e1 666C6167 		.ascii	"flag_packet\000"
 5752      5F706163 
 5752      6B657400 
 5753              	.LASF105:
 5754 01ed 66726F6E 		.ascii	"frontSensors\000"
 5754      7453656E 
 5754      736F7273 
 5754      00
 5755              	.LASF82:
 5756 01fa 6973725F 		.ascii	"isr_turn_timer\000"
 5756      7475726E 
 5756      5F74696D 
 5756      657200
 5757              	.LASF93:
 5758 0209 74726163 		.ascii	"trackLine\000"
 5758      6B4C696E 
 5758      6500
 5759              	.LASF69:
 5760 0213 696E6974 		.ascii	"initTurnLeft\000"
 5760      5475726E 
 5760      4C656674 
 5760      00
 5761              	.LASF140:
 5762 0220 706F7274 		.ascii	"portOpen\000"
 5762      4F70656E 
 5762      00
 5763              	.LASF72:
 5764 0229 696E6974 		.ascii	"initBrake\000"
 5764      4272616B 
 5764      6500
 5765              	.LASF115:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 119


 5766 0233 666C6167 		.ascii	"flag_ts_update\000"
 5766      5F74735F 
 5766      75706461 
 5766      746500
 5767              	.LASF97:
 5768 0242 7363616C 		.ascii	"scalingFactor\000"
 5768      696E6746 
 5768      6163746F 
 5768      7200
 5769              	.LASF87:
 5770 0250 6C656674 		.ascii	"leftSpeed\000"
 5770      53706565 
 5770      6400
 5771              	.LASF114:
 5772 025a 666C6167 		.ascii	"flag_ts_enc\000"
 5772      5F74735F 
 5772      656E6300 
 5773              	.LASF152:
 5774 0266 62797465 		.ascii	"byteCount\000"
 5774      436F756E 
 5774      7400
 5775              	.LASF84:
 5776 0270 62757474 		.ascii	"button\000"
 5776      6F6E00
 5777              	.LASF149:
 5778 0277 70726576 		.ascii	"prev_movement_state\000"
 5778      5F6D6F76 
 5778      656D656E 
 5778      745F7374 
 5778      61746500 
 5779              	.LASF103:
 5780 028b 73656E73 		.ascii	"sensorVals\000"
 5780      6F725661 
 5780      6C7300
 5781              	.LASF99:
 5782 0296 72657375 		.ascii	"result_str\000"
 5782      6C745F73 
 5782      747200
 5783              	.LASF108:
 5784 02a1 75617274 		.ascii	"uart_set_PWM\000"
 5784      5F736574 
 5784      5F50574D 
 5784      00
 5785              	.LASF75:
 5786 02ae 696E6974 		.ascii	"inittrackLineZ\000"
 5786      74726163 
 5786      6B4C696E 
 5786      655A00
 5787              	.LASF37:
 5788 02bd 726F626F 		.ascii	"robot_ypos\000"
 5788      745F7970 
 5788      6F7300
 5789              	.LASF113:
 5790 02c8 74735F64 		.ascii	"ts_display\000"
 5790      6973706C 
 5790      617900
 5791              	.LASF96:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 120


 5792 02d3 7072696E 		.ascii	"print_ADC\000"
 5792      745F4144 
 5792      4300
 5793              	.LASF89:
 5794 02dd 7363616C 		.ascii	"scalingLeft\000"
 5794      696E674C 
 5794      65667400 
 5795              	.LASF10:
 5796 02e9 63686172 		.ascii	"char\000"
 5796      00
 5797              	.LASF41:
 5798 02ee 67305F73 		.ascii	"g0_speed\000"
 5798      70656564 
 5798      00
 5799              	.LASF138:
 5800 02f7 72696768 		.ascii	"rightSpeedLimit\000"
 5800      74537065 
 5800      65644C69 
 5800      6D697400 
 5801              	.LASF54:
 5802 0307 7365744C 		.ascii	"setLeftDir\000"
 5802      65667444 
 5802      697200
 5803              	.LASF48:
 5804 0312 67325F79 		.ascii	"g2_ypos\000"
 5804      706F7300 
 5805              	.LASF14:
 5806 031a 75696E74 		.ascii	"uint16\000"
 5806      313600
 5807              	.LASF16:
 5808 0321 696E7438 		.ascii	"int8\000"
 5808      00
 5809              	.LASF46:
 5810 0326 67315F64 		.ascii	"g1_direction\000"
 5810      69726563 
 5810      74696F6E 
 5810      00
 5811              	.LASF55:
 5812 0333 73657452 		.ascii	"setRightDir\000"
 5812      69676874 
 5812      44697200 
 5813              	.LASF31:
 5814 033f 43555256 		.ascii	"CURVE_TRACK\000"
 5814      455F5452 
 5814      41434B00 
 5815              	.LASF91:
 5816 034b 696E7465 		.ascii	"interCalc\000"
 5816      7243616C 
 5816      6300
 5817              	.LASF60:
 5818 0355 72696768 		.ascii	"right\000"
 5818      7400
 5819              	.LASF6:
 5820 035b 6C6F6E67 		.ascii	"long long int\000"
 5820      206C6F6E 
 5820      6720696E 
 5820      7400
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 121


 5821              	.LASF147:
 5822 0369 62756666 		.ascii	"buffer_state\000"
 5822      65725F73 
 5822      74617465 
 5822      00
 5823              	.LASF43:
 5824 0376 67315F78 		.ascii	"g1_xpos\000"
 5824      706F7300 
 5825              	.LASF73:
 5826 037e 696E6974 		.ascii	"initTrack\000"
 5826      54726163 
 5826      6B00
 5827              	.LASF155:
 5828 0388 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5828      4320342E 
 5828      392E3320 
 5828      32303135 
 5828      30333033 
 5829 03bb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 5829      20726576 
 5829      6973696F 
 5829      6E203232 
 5829      31323230 
 5830 03ee 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5830      66756E63 
 5830      74696F6E 
 5830      2D736563 
 5830      74696F6E 
 5831              	.LASF49:
 5832 0416 67325F73 		.ascii	"g2_speed\000"
 5832      70656564 
 5832      00
 5833              	.LASF40:
 5834 041f 67305F79 		.ascii	"g0_ypos\000"
 5834      706F7300 
 5835              	.LASF77:
 5836 0427 72665F63 		.ascii	"rf_char\000"
 5836      68617200 
 5837              	.LASF88:
 5838 042f 72696768 		.ascii	"rightSpeed\000"
 5838      74537065 
 5838      656400
 5839              	.LASF112:
 5840 043a 74735F73 		.ascii	"ts_speed\000"
 5840      70656564 
 5840      00
 5841              	.LASF15:
 5842 0443 75696E74 		.ascii	"uint32\000"
 5842      333200
 5843              	.LASF62:
 5844 044a 636F756E 		.ascii	"countsRight\000"
 5844      74735269 
 5844      67687400 
 5845              	.LASF158:
 5846 0456 64617461 		.ascii	"data_main\000"
 5846      5F6D6169 
 5846      6E00
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 122


 5847              	.LASF98:
 5848 0460 636F6E76 		.ascii	"converted_val\000"
 5848      65727465 
 5848      645F7661 
 5848      6C00
 5849              	.LASF34:
 5850 046e 72737369 		.ascii	"rssi\000"
 5850      00
 5851              	.LASF42:
 5852 0473 67305F64 		.ascii	"g0_direction\000"
 5852      69726563 
 5852      74696F6E 
 5852      00
 5853              	.LASF124:
 5854 0480 666C6167 		.ascii	"flag_receive_ADC\000"
 5854      5F726563 
 5854      65697665 
 5854      5F414443 
 5854      00
 5855              	.LASF24:
 5856 0491 53544F50 		.ascii	"STOPPED\000"
 5856      50454400 
 5857              	.LASF78:
 5858 0499 42545F72 		.ascii	"BT_rxInt\000"
 5858      78496E74 
 5858      00
 5859              	.LASF20:
 5860 04a2 6C6F6E67 		.ascii	"long double\000"
 5860      20646F75 
 5860      626C6500 
 5861              	.LASF76:
 5862 04ae 7278496E 		.ascii	"rxInt\000"
 5862      7400
 5863              	.LASF135:
 5864 04b4 6C656674 		.ascii	"left_duty_cycle\000"
 5864      5F647574 
 5864      795F6379 
 5864      636C6500 
 5865              	.LASF116:
 5866 04c4 666C6167 		.ascii	"flag_ts_speed\000"
 5866      5F74735F 
 5866      73706565 
 5866      6400
 5867              	.LASF121:
 5868 04d2 64617461 		.ascii	"dataready_flag\000"
 5868      72656164 
 5868      795F666C 
 5868      616700
 5869              	.LASF118:
 5870 04e1 666C6167 		.ascii	"flag_rx\000"
 5870      5F727800 
 5871              	.LASF2:
 5872 04e9 73686F72 		.ascii	"short int\000"
 5872      7420696E 
 5872      7400
 5873              	.LASF125:
 5874 04f3 6164635F 		.ascii	"adc_result\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 123


 5874      72657375 
 5874      6C7400
 5875              	.LASF127:
 5876 04fe 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 5876      5F63616C 
 5876      635F7768 
 5876      65656C73 
 5876      70656564 
 5877              	.LASF4:
 5878 0513 6C6F6E67 		.ascii	"long int\000"
 5878      20696E74 
 5878      00
 5879              	.LASF70:
 5880 051c 696E6974 		.ascii	"initTurnRight\000"
 5880      5475726E 
 5880      52696768 
 5880      7400
 5881              	.LASF32:
 5882 052a 555F5452 		.ascii	"U_TRACK\000"
 5882      41434B00 
 5883              	.LASF109:
 5884 0532 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5884      52784275 
 5884      66666572 
 5884      00
 5885              	.LASF101:
 5886 053f 7072696E 		.ascii	"printString\000"
 5886      74537472 
 5886      696E6700 
 5887              	.LASF111:
 5888 054b 74735F75 		.ascii	"ts_update\000"
 5888      70646174 
 5888      6500
 5889              	.LASF30:
 5890 0555 4E4F5F54 		.ascii	"NO_TRACK\000"
 5890      5241434B 
 5890      00
 5891              	.LASF137:
 5892 055e 6C656674 		.ascii	"leftSpeedLimit\000"
 5892      53706565 
 5892      644C696D 
 5892      697400
 5893              	.LASF27:
 5894 056d 54524143 		.ascii	"TRACKING_SOFT\000"
 5894      4B494E47 
 5894      5F534F46 
 5894      5400
 5895              	.LASF59:
 5896 057b 6C656674 		.ascii	"left\000"
 5896      00
 5897              	.LASF106:
 5898 0580 75736250 		.ascii	"usbPutString\000"
 5898      75745374 
 5898      72696E67 
 5898      00
 5899              	.LASF67:
 5900 058d 7475726E 		.ascii	"turnRight\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 124


 5900      52696768 
 5900      7400
 5901              	.LASF44:
 5902 0597 67315F79 		.ascii	"g1_ypos\000"
 5902      706F7300 
 5903              	.LASF80:
 5904 059f 6164635F 		.ascii	"adc_isr\000"
 5904      69737200 
 5905              	.LASF102:
 5906 05a7 72656164 		.ascii	"readFrontSensors\000"
 5906      46726F6E 
 5906      7453656E 
 5906      736F7273 
 5906      00
 5907              	.LASF9:
 5908 05b8 73697A65 		.ascii	"sizetype\000"
 5908      74797065 
 5908      00
 5909              	.LASF5:
 5910 05c1 6C6F6E67 		.ascii	"long unsigned int\000"
 5910      20756E73 
 5910      69676E65 
 5910      6420696E 
 5910      7400
 5911              	.LASF52:
 5912 05d3 62797465 		.ascii	"byte_packet\000"
 5912      5F706163 
 5912      6B657400 
 5913              	.LASF12:
 5914 05df 696E7433 		.ascii	"int32_t\000"
 5914      325F7400 
 5915              	.LASF153:
 5916 05e7 7061636B 		.ascii	"packet\000"
 5916      657400
 5917              	.LASF36:
 5918 05ee 726F626F 		.ascii	"robot_xpos\000"
 5918      745F7870 
 5918      6F7300
 5919              	.LASF65:
 5920 05f9 6272616B 		.ascii	"brakeMotor\000"
 5920      654D6F74 
 5920      6F7200
 5921              	.LASF145:
 5922 0604 656E7472 		.ascii	"entry\000"
 5922      7900
 5923              	.LASF1:
 5924 060a 756E7369 		.ascii	"unsigned char\000"
 5924      676E6564 
 5924      20636861 
 5924      7200
 5925              	.LASF144:
 5926 0618 6C696E65 		.ascii	"line\000"
 5926      00
 5927              	.LASF83:
 5928 061d 53746F70 		.ascii	"Stop_on_line\000"
 5928      5F6F6E5F 
 5928      6C696E65 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 125


 5928      00
 5929              	.LASF110:
 5930 062a 74735F65 		.ascii	"ts_enc\000"
 5930      6E6300
 5931              	.LASF139:
 5932 0631 6272616B 		.ascii	"brakeFlag\000"
 5932      65466C61 
 5932      6700
 5933              	.LASF117:
 5934 063b 666C6167 		.ascii	"flag_ts_display\000"
 5934      5F74735F 
 5934      64697370 
 5934      6C617900 
 5935              	.LASF28:
 5936 064b 73746174 		.ascii	"state\000"
 5936      6500
 5937              	.LASF57:
 5938 0651 72657665 		.ascii	"reverseDirection\000"
 5938      72736544 
 5938      69726563 
 5938      74696F6E 
 5938      00
 5939              	.LASF63:
 5940 0662 6272616B 		.ascii	"brakeLeft\000"
 5940      654C6566 
 5940      7400
 5941              	.LASF143:
 5942 066c 64697370 		.ascii	"displaystring\000"
 5942      6C617973 
 5942      7472696E 
 5942      6700
 5943              	.LASF130:
 5944 067a 6C617374 		.ascii	"last_quad_count1\000"
 5944      5F717561 
 5944      645F636F 
 5944      756E7431 
 5944      00
 5945              	.LASF131:
 5946 068b 6C617374 		.ascii	"last_quad_count2\000"
 5946      5F717561 
 5946      645F636F 
 5946      756E7432 
 5946      00
 5947              	.LASF107:
 5948 069c 75736250 		.ascii	"usbPutChar\000"
 5948      75744368 
 5948      617200
 5949              	.LASF0:
 5950 06a7 7369676E 		.ascii	"signed char\000"
 5950      65642063 
 5950      68617200 
 5951              	.LASF3:
 5952 06b3 73686F72 		.ascii	"short unsigned int\000"
 5952      7420756E 
 5952      7369676E 
 5952      65642069 
 5952      6E7400
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 126


 5953              	.LASF38:
 5954 06c6 726F626F 		.ascii	"robot_orientation\000"
 5954      745F6F72 
 5954      69656E74 
 5954      6174696F 
 5954      6E00
 5955              	.LASF104:
 5956 06d8 6D61696E 		.ascii	"main\000"
 5956      00
 5957              	.LASF79:
 5958 06dd 42545F74 		.ascii	"BT_txInt\000"
 5958      78496E74 
 5958      00
 5959              	.LASF92:
 5960 06e6 6E657874 		.ascii	"nextSpeed\000"
 5960      53706565 
 5960      6400
 5961              	.LASF13:
 5962 06f0 75696E74 		.ascii	"uint8\000"
 5962      3800
 5963              	.LASF19:
 5964 06f6 646F7562 		.ascii	"double\000"
 5964      6C6500
 5965              	.LASF136:
 5966 06fd 72696768 		.ascii	"right_duty_cycle\000"
 5966      745F6475 
 5966      74795F63 
 5966      79636C65 
 5966      00
 5967              	.LASF56:
 5968 070e 68616E64 		.ascii	"handle_rx_binary\000"
 5968      6C655F72 
 5968      785F6269 
 5968      6E617279 
 5968      00
 5969              	.LASF157:
 5970 071f 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 5970      70315C43 
 5970      53333031 
 5970      2D546561 
 5970      6D2D5265 
 5971              	.LASF100:
 5972 0748 7072696E 		.ascii	"print_RF\000"
 5972      745F5246 
 5972      00
 5973              	.LASF39:
 5974 0751 67305F78 		.ascii	"g0_xpos\000"
 5974      706F7300 
 5975              	.LASF90:
 5976 0759 7363616C 		.ascii	"scalingRight\000"
 5976      696E6752 
 5976      69676874 
 5976      00
 5977              	.LASF120:
 5978 0766 666C6167 		.ascii	"flag_KB_string\000"
 5978      5F4B425F 
 5978      73747269 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccoFFVNd.s 			page 127


 5978      6E6700
 5979              	.LASF45:
 5980 0775 67315F73 		.ascii	"g1_speed\000"
 5980      70656564 
 5980      00
 5981              	.LASF156:
 5982 077e 2E5C6D61 		.ascii	".\\main.c\000"
 5982      696E2E63 
 5982      00
 5983              	.LASF64:
 5984 0787 6272616B 		.ascii	"brakeRight\000"
 5984      65526967 
 5984      687400
 5985              	.LASF74:
 5986 0792 696E6974 		.ascii	"initTrackU\000"
 5986      54726163 
 5986      6B5500
 5987              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
