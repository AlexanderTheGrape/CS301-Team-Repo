ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	prevVoltage,2,2
 263              		.comm	prevVoltage2,2,2
 264              		.global	displaystring
 265 0009 000000   		.align	2
 266              		.type	displaystring, %object
 267              		.size	displaystring, 64
 268              	displaystring:
 269 000c 43533330 		.ascii	"CS301 2016\012\000"
 269      31203230 
 269      31360A00 
 270 0018 00000000 		.space	52
 270      00000000 
 270      00000000 
 270      00000000 
 270      00000000 
 271              		.comm	line,64,4
 272              		.comm	entry,64,4
 273              		.comm	usbBuffer,64,4
 274              		.comm	buffer_state,32,4
 275              		.comm	system_state,32,4
 276              		.global	prev_movement_state
 277              		.type	prev_movement_state, %object
 278              		.size	prev_movement_state, 1
 279              	prev_movement_state:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 6


 280 004c 03       		.byte	3
 281              		.global	movement_state
 282              		.type	movement_state, %object
 283              		.size	movement_state, 1
 284              	movement_state:
 285 004d 03       		.byte	3
 286              		.global	track_mode
 287              		.bss
 288              		.type	track_mode, %object
 289              		.size	track_mode, 1
 290              	track_mode:
 291 003c 00       		.space	1
 292              		.global	byteCount
 293              		.type	byteCount, %object
 294              		.size	byteCount, 1
 295              	byteCount:
 296 003d 00       		.space	1
 297              		.comm	packet,2,4
 298              		.global	speed
 299              		.data
 300 004e 0000     		.align	3
 301              		.type	speed, %object
 302              		.size	speed, 8
 303              	speed:
 304 0050 00000000 		.word	0
 305 0054 00002E40 		.word	1076756480
 306              		.comm	tracked_direction,4,4
 307              		.global	instructions
 308              		.bss
 309 003e 0000     		.align	2
 310              		.type	instructions, %object
 311              		.size	instructions, 800
 312              	instructions:
 313 0040 00000000 		.space	800
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	instructionCount
 315              		.align	1
 316              		.type	instructionCount, %object
 317              		.size	instructionCount, 2
 318              	instructionCount:
 319 0360 0000     		.space	2
 320              		.global	instructionLength
 321              		.align	1
 322              		.type	instructionLength, %object
 323              		.size	instructionLength, 2
 324              	instructionLength:
 325 0362 0000     		.space	2
 326              		.global	sensorsDisabled
 327              		.align	2
 328              		.type	sensorsDisabled, %object
 329              		.size	sensorsDisabled, 4
 330              	sensorsDisabled:
 331 0364 00000000 		.space	4
 332              		.global	robot_direction
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 7


 333              		.data
 334              		.align	2
 335              		.type	robot_direction, %object
 336              		.size	robot_direction, 4
 337              	robot_direction:
 338 0058 02000000 		.word	2
 339              		.global	path
 340              		.bss
 341              		.align	2
 342              		.type	path, %object
 343              		.size	path, 9600
 344              	path:
 345 0368 00000000 		.space	9600
 345      00000000 
 345      00000000 
 345      00000000 
 345      00000000 
 346              		.global	start
 347              		.data
 348              		.align	2
 349              		.type	start, %object
 350              		.size	start, 8
 351              	start:
 352 005c 01000000 		.word	1
 353 0060 01000000 		.word	1
 354              		.global	destination
 355              		.align	2
 356              		.type	destination, %object
 357              		.size	destination, 8
 358              	destination:
 359 0064 0D000000 		.word	13
 360 0068 0B000000 		.word	11
 361              		.global	map
 362              		.align	2
 363              		.type	map, %object
 364              		.size	map, 1140
 365              	map:
 366 006c 01000000 		.word	1
 367 0070 01000000 		.word	1
 368 0074 01000000 		.word	1
 369 0078 01000000 		.word	1
 370 007c 01000000 		.word	1
 371 0080 01000000 		.word	1
 372 0084 01000000 		.word	1
 373 0088 01000000 		.word	1
 374 008c 01000000 		.word	1
 375 0090 01000000 		.word	1
 376 0094 01000000 		.word	1
 377 0098 01000000 		.word	1
 378 009c 01000000 		.word	1
 379 00a0 01000000 		.word	1
 380 00a4 01000000 		.word	1
 381 00a8 01000000 		.word	1
 382 00ac 01000000 		.word	1
 383 00b0 01000000 		.word	1
 384 00b4 01000000 		.word	1
 385 00b8 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 8


 386 00bc 00000000 		.word	0
 387 00c0 00000000 		.word	0
 388 00c4 00000000 		.word	0
 389 00c8 00000000 		.word	0
 390 00cc 00000000 		.word	0
 391 00d0 01000000 		.word	1
 392 00d4 00000000 		.word	0
 393 00d8 01000000 		.word	1
 394 00dc 00000000 		.word	0
 395 00e0 00000000 		.word	0
 396 00e4 00000000 		.word	0
 397 00e8 00000000 		.word	0
 398 00ec 00000000 		.word	0
 399 00f0 00000000 		.word	0
 400 00f4 00000000 		.word	0
 401 00f8 00000000 		.word	0
 402 00fc 00000000 		.word	0
 403 0100 01000000 		.word	1
 404 0104 01000000 		.word	1
 405 0108 01000000 		.word	1
 406 010c 01000000 		.word	1
 407 0110 01000000 		.word	1
 408 0114 01000000 		.word	1
 409 0118 00000000 		.word	0
 410 011c 01000000 		.word	1
 411 0120 00000000 		.word	0
 412 0124 01000000 		.word	1
 413 0128 00000000 		.word	0
 414 012c 01000000 		.word	1
 415 0130 00000000 		.word	0
 416 0134 01000000 		.word	1
 417 0138 01000000 		.word	1
 418 013c 01000000 		.word	1
 419 0140 01000000 		.word	1
 420 0144 01000000 		.word	1
 421 0148 00000000 		.word	0
 422 014c 01000000 		.word	1
 423 0150 01000000 		.word	1
 424 0154 00000000 		.word	0
 425 0158 00000000 		.word	0
 426 015c 00000000 		.word	0
 427 0160 01000000 		.word	1
 428 0164 00000000 		.word	0
 429 0168 01000000 		.word	1
 430 016c 00000000 		.word	0
 431 0170 00000000 		.word	0
 432 0174 00000000 		.word	0
 433 0178 01000000 		.word	1
 434 017c 00000000 		.word	0
 435 0180 00000000 		.word	0
 436 0184 00000000 		.word	0
 437 0188 00000000 		.word	0
 438 018c 00000000 		.word	0
 439 0190 01000000 		.word	1
 440 0194 00000000 		.word	0
 441 0198 01000000 		.word	1
 442 019c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 9


 443 01a0 00000000 		.word	0
 444 01a4 01000000 		.word	1
 445 01a8 00000000 		.word	0
 446 01ac 01000000 		.word	1
 447 01b0 00000000 		.word	0
 448 01b4 01000000 		.word	1
 449 01b8 00000000 		.word	0
 450 01bc 01000000 		.word	1
 451 01c0 01000000 		.word	1
 452 01c4 01000000 		.word	1
 453 01c8 01000000 		.word	1
 454 01cc 01000000 		.word	1
 455 01d0 01000000 		.word	1
 456 01d4 01000000 		.word	1
 457 01d8 00000000 		.word	0
 458 01dc 01000000 		.word	1
 459 01e0 00000000 		.word	0
 460 01e4 01000000 		.word	1
 461 01e8 01000000 		.word	1
 462 01ec 00000000 		.word	0
 463 01f0 01000000 		.word	1
 464 01f4 00000000 		.word	0
 465 01f8 00000000 		.word	0
 466 01fc 00000000 		.word	0
 467 0200 00000000 		.word	0
 468 0204 00000000 		.word	0
 469 0208 00000000 		.word	0
 470 020c 00000000 		.word	0
 471 0210 00000000 		.word	0
 472 0214 00000000 		.word	0
 473 0218 00000000 		.word	0
 474 021c 00000000 		.word	0
 475 0220 01000000 		.word	1
 476 0224 00000000 		.word	0
 477 0228 01000000 		.word	1
 478 022c 00000000 		.word	0
 479 0230 01000000 		.word	1
 480 0234 01000000 		.word	1
 481 0238 00000000 		.word	0
 482 023c 01000000 		.word	1
 483 0240 01000000 		.word	1
 484 0244 01000000 		.word	1
 485 0248 01000000 		.word	1
 486 024c 01000000 		.word	1
 487 0250 01000000 		.word	1
 488 0254 01000000 		.word	1
 489 0258 01000000 		.word	1
 490 025c 01000000 		.word	1
 491 0260 00000000 		.word	0
 492 0264 01000000 		.word	1
 493 0268 00000000 		.word	0
 494 026c 01000000 		.word	1
 495 0270 00000000 		.word	0
 496 0274 01000000 		.word	1
 497 0278 01000000 		.word	1
 498 027c 01000000 		.word	1
 499 0280 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 10


 500 0284 00000000 		.word	0
 501 0288 00000000 		.word	0
 502 028c 00000000 		.word	0
 503 0290 00000000 		.word	0
 504 0294 00000000 		.word	0
 505 0298 00000000 		.word	0
 506 029c 00000000 		.word	0
 507 02a0 00000000 		.word	0
 508 02a4 00000000 		.word	0
 509 02a8 00000000 		.word	0
 510 02ac 00000000 		.word	0
 511 02b0 01000000 		.word	1
 512 02b4 00000000 		.word	0
 513 02b8 01000000 		.word	1
 514 02bc 00000000 		.word	0
 515 02c0 00000000 		.word	0
 516 02c4 00000000 		.word	0
 517 02c8 01000000 		.word	1
 518 02cc 01000000 		.word	1
 519 02d0 01000000 		.word	1
 520 02d4 01000000 		.word	1
 521 02d8 01000000 		.word	1
 522 02dc 01000000 		.word	1
 523 02e0 01000000 		.word	1
 524 02e4 01000000 		.word	1
 525 02e8 00000000 		.word	0
 526 02ec 01000000 		.word	1
 527 02f0 01000000 		.word	1
 528 02f4 01000000 		.word	1
 529 02f8 01000000 		.word	1
 530 02fc 01000000 		.word	1
 531 0300 00000000 		.word	0
 532 0304 01000000 		.word	1
 533 0308 01000000 		.word	1
 534 030c 01000000 		.word	1
 535 0310 00000000 		.word	0
 536 0314 01000000 		.word	1
 537 0318 01000000 		.word	1
 538 031c 00000000 		.word	0
 539 0320 00000000 		.word	0
 540 0324 00000000 		.word	0
 541 0328 00000000 		.word	0
 542 032c 00000000 		.word	0
 543 0330 00000000 		.word	0
 544 0334 00000000 		.word	0
 545 0338 00000000 		.word	0
 546 033c 00000000 		.word	0
 547 0340 00000000 		.word	0
 548 0344 00000000 		.word	0
 549 0348 01000000 		.word	1
 550 034c 00000000 		.word	0
 551 0350 00000000 		.word	0
 552 0354 00000000 		.word	0
 553 0358 01000000 		.word	1
 554 035c 00000000 		.word	0
 555 0360 01000000 		.word	1
 556 0364 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 11


 557 0368 00000000 		.word	0
 558 036c 01000000 		.word	1
 559 0370 01000000 		.word	1
 560 0374 01000000 		.word	1
 561 0378 01000000 		.word	1
 562 037c 01000000 		.word	1
 563 0380 00000000 		.word	0
 564 0384 01000000 		.word	1
 565 0388 01000000 		.word	1
 566 038c 01000000 		.word	1
 567 0390 00000000 		.word	0
 568 0394 01000000 		.word	1
 569 0398 00000000 		.word	0
 570 039c 01000000 		.word	1
 571 03a0 00000000 		.word	0
 572 03a4 01000000 		.word	1
 573 03a8 00000000 		.word	0
 574 03ac 01000000 		.word	1
 575 03b0 01000000 		.word	1
 576 03b4 00000000 		.word	0
 577 03b8 00000000 		.word	0
 578 03bc 00000000 		.word	0
 579 03c0 00000000 		.word	0
 580 03c4 00000000 		.word	0
 581 03c8 01000000 		.word	1
 582 03cc 00000000 		.word	0
 583 03d0 00000000 		.word	0
 584 03d4 00000000 		.word	0
 585 03d8 01000000 		.word	1
 586 03dc 00000000 		.word	0
 587 03e0 00000000 		.word	0
 588 03e4 00000000 		.word	0
 589 03e8 01000000 		.word	1
 590 03ec 00000000 		.word	0
 591 03f0 00000000 		.word	0
 592 03f4 00000000 		.word	0
 593 03f8 01000000 		.word	1
 594 03fc 01000000 		.word	1
 595 0400 00000000 		.word	0
 596 0404 01000000 		.word	1
 597 0408 01000000 		.word	1
 598 040c 01000000 		.word	1
 599 0410 00000000 		.word	0
 600 0414 01000000 		.word	1
 601 0418 01000000 		.word	1
 602 041c 01000000 		.word	1
 603 0420 00000000 		.word	0
 604 0424 01000000 		.word	1
 605 0428 01000000 		.word	1
 606 042c 01000000 		.word	1
 607 0430 00000000 		.word	0
 608 0434 01000000 		.word	1
 609 0438 01000000 		.word	1
 610 043c 01000000 		.word	1
 611 0440 00000000 		.word	0
 612 0444 01000000 		.word	1
 613 0448 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 12


 614 044c 00000000 		.word	0
 615 0450 00000000 		.word	0
 616 0454 00000000 		.word	0
 617 0458 01000000 		.word	1
 618 045c 00000000 		.word	0
 619 0460 00000000 		.word	0
 620 0464 00000000 		.word	0
 621 0468 00000000 		.word	0
 622 046c 00000000 		.word	0
 623 0470 00000000 		.word	0
 624 0474 00000000 		.word	0
 625 0478 01000000 		.word	1
 626 047c 00000000 		.word	0
 627 0480 00000000 		.word	0
 628 0484 00000000 		.word	0
 629 0488 00000000 		.word	0
 630 048c 00000000 		.word	0
 631 0490 01000000 		.word	1
 632 0494 01000000 		.word	1
 633 0498 01000000 		.word	1
 634 049c 01000000 		.word	1
 635 04a0 01000000 		.word	1
 636 04a4 01000000 		.word	1
 637 04a8 01000000 		.word	1
 638 04ac 01000000 		.word	1
 639 04b0 01000000 		.word	1
 640 04b4 01000000 		.word	1
 641 04b8 01000000 		.word	1
 642 04bc 01000000 		.word	1
 643 04c0 01000000 		.word	1
 644 04c4 01000000 		.word	1
 645 04c8 01000000 		.word	1
 646 04cc 01000000 		.word	1
 647 04d0 01000000 		.word	1
 648 04d4 01000000 		.word	1
 649 04d8 01000000 		.word	1
 650 04dc 01000000 		.word	1
 651              		.global	food_list
 652              		.align	2
 653              		.type	food_list, %object
 654              		.size	food_list, 48
 655              	food_list:
 656 04e0 05000000 		.word	5
 657 04e4 0A000000 		.word	10
 658 04e8 05000000 		.word	5
 659 04ec 03000000 		.word	3
 660 04f0 0D000000 		.word	13
 661 04f4 02000000 		.word	2
 662 04f8 00000000 		.space	24
 662      00000000 
 662      00000000 
 662      00000000 
 662      00000000 
 663              		.global	food_length
 664              		.align	2
 665              		.type	food_length, %object
 666              		.size	food_length, 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 13


 667              	food_length:
 668 0510 03000000 		.word	3
 669 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 670              		.align	2
 671              		.global	BT_txInt
 672              		.thumb
 673              		.thumb_func
 674              		.type	BT_txInt, %function
 675              	BT_txInt:
 676              	.LFB63:
 677              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 134
  29:.\main.c      **** 
  30:.\main.c      **** #define U_DEADZONE 90000
  31:.\main.c      **** #define TURN_DEADZONE 50000
  32:.\main.c      **** #define S_DEADZONE 10000
  33:.\main.c      **** #define QUAD_PER_UNIT 142
  34:.\main.c      **** 
  35:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  36:.\main.c      **** uint16 instructionCount = 0;
  37:.\main.c      **** uint16 instructionLength = 0;
  38:.\main.c      **** uint32_t sensorsDisabled = 0;
  39:.\main.c      **** 
  40:.\main.c      **** uint32_t robot_direction = 2;
  41:.\main.c      **** 
  42:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  43:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  44:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  45:.\main.c      **** 
  46:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 14


  47:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  48:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  49:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  50:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  51:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  52:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  53:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  54:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  56:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  57:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  58:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  59:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  60:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  61:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  62:.\main.c      **** 
  63:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  64:.\main.c      **** //first number is the y coord, second is x
  65:.\main.c      **** //first number is row, second column
  66:.\main.c      **** 
  67:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  68:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  69:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}};
  70:.\main.c      **** uint32_t food_length = 3;
  71:.\main.c      **** 
  72:.\main.c      **** void changeToRF();
  73:.\main.c      **** void changeToBT();
  74:.\main.c      **** void brakeMotor();
  75:.\main.c      **** void driveForwards();
  76:.\main.c      **** void initTurnLeft();
  77:.\main.c      **** void initTurnRight();
  78:.\main.c      **** void inittrackLineZ();
  79:.\main.c      **** void trackLineU();
  80:.\main.c      **** void trackLine();
  81:.\main.c      **** void trackLineZ();
  82:.\main.c      **** void initTrackU();
  83:.\main.c      **** void turnLeft();
  84:.\main.c      **** void turnRight();
  85:.\main.c      **** void initForward();
  86:.\main.c      **** void initTurnU();
  87:.\main.c      **** void turnU();
  88:.\main.c      **** void initBrake();
  89:.\main.c      **** void print_ADC();
  90:.\main.c      **** void Quad_Dec_response();
  91:.\main.c      **** void handle_rx_binary();
  92:.\main.c      **** void readFrontSensors();
  93:.\main.c      **** void print_RF();
  94:.\main.c      **** 
  95:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  96:.\main.c      **** //BT
  97:.\main.c      **** CY_ISR(BT_txInt)
  98:.\main.c      **** {
 678              		.loc 1 98 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682              		@ link register save eliminated.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 15


 683 0000 80B4     		push	{r7}
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
  99:.\main.c      ****     
 100:.\main.c      **** }
 688              		.loc 1 100 0
 689 0004 BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0006 5DF8047B 		ldr	r7, [sp], #4
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 000a 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE63:
 698              		.size	BT_txInt, .-BT_txInt
 699              		.section	.text.adc_isr,"ax",%progbits
 700              		.align	2
 701              		.global	adc_isr
 702              		.thumb
 703              		.thumb_func
 704              		.type	adc_isr, %function
 705              	adc_isr:
 706              	.LFB64:
 101:.\main.c      **** 
 102:.\main.c      **** //ADC:
 103:.\main.c      **** CY_ISR (adc_isr)
 104:.\main.c      **** {
 707              		.loc 1 104 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 105:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 106:.\main.c      ****     adc_result = ADC_GetResult16();
 717              		.loc 1 106 0
 718 0004 FFF7FEFF 		bl	ADC_GetResult16
 719 0008 0346     		mov	r3, r0
 720 000a 1A46     		mov	r2, r3
 721 000c 044B     		ldr	r3, .L3
 722 000e 1A80     		strh	r2, [r3]	@ movhi
 107:.\main.c      ****     flag_receive_ADC = 1;
 723              		.loc 1 107 0
 724 0010 044B     		ldr	r3, .L3+4
 725 0012 0122     		movs	r2, #1
 726 0014 1A70     		strb	r2, [r3]
 108:.\main.c      ****     flag_print_rf = 1;
 727              		.loc 1 108 0
 728 0016 044B     		ldr	r3, .L3+8
 729 0018 0122     		movs	r2, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 16


 730 001a 1A70     		strb	r2, [r3]
 109:.\main.c      ****     //LED_Write(~LED_Read());
 110:.\main.c      **** }
 731              		.loc 1 110 0
 732 001c 80BD     		pop	{r7, pc}
 733              	.L4:
 734 001e 00BF     		.align	2
 735              	.L3:
 736 0020 00000000 		.word	adc_result
 737 0024 00000000 		.word	flag_receive_ADC
 738 0028 00000000 		.word	flag_print_rf
 739              		.cfi_endproc
 740              	.LFE64:
 741              		.size	adc_isr, .-adc_isr
 742              		.global	__aeabi_i2d
 743              		.global	__aeabi_dsub
 744              		.global	__aeabi_dcmpge
 745              		.global	__aeabi_dadd
 746              		.section	.text.isr_quad1,"ax",%progbits
 747              		.align	2
 748              		.global	isr_quad1
 749              		.thumb
 750              		.thumb_func
 751              		.type	isr_quad1, %function
 752              	isr_quad1:
 753              	.LFB65:
 111:.\main.c      **** 
 112:.\main.c      **** CY_ISR (isr_quad1)
 113:.\main.c      **** {
 754              		.loc 1 113 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 B0B5     		push	{r4, r5, r7, lr}
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 4, -16
 761              		.cfi_offset 5, -12
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 114:.\main.c      ****     
 115:.\main.c      ****     //LED_Write(~LED_Read());
 116:.\main.c      ****     last_quad_count1 = quad_count1;
 766              		.loc 1 116 0
 767 0004 5A4B     		ldr	r3, .L13+8
 768 0006 1A88     		ldrh	r2, [r3]
 769 0008 5A4B     		ldr	r3, .L13+12
 770 000a 1A80     		strh	r2, [r3]	@ movhi
 117:.\main.c      ****     last_quad_count2 = quad_count2;
 771              		.loc 1 117 0
 772 000c 5A4B     		ldr	r3, .L13+16
 773 000e 1A88     		ldrh	r2, [r3]
 774 0010 5A4B     		ldr	r3, .L13+20
 775 0012 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 776              		.loc 1 118 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 17


 777 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 778 0018 0346     		mov	r3, r0
 779 001a 1A46     		mov	r2, r3
 780 001c 544B     		ldr	r3, .L13+8
 781 001e 1A80     		strh	r2, [r3]	@ movhi
 119:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 782              		.loc 1 119 0
 783 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 784 0024 0346     		mov	r3, r0
 785 0026 1A46     		mov	r2, r3
 786 0028 534B     		ldr	r3, .L13+16
 787 002a 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 788              		.loc 1 120 0
 789 002c 504B     		ldr	r3, .L13+8
 790 002e 1B88     		ldrh	r3, [r3]
 791 0030 9AB2     		uxth	r2, r3
 792 0032 504B     		ldr	r3, .L13+12
 793 0034 1B88     		ldrh	r3, [r3]
 794 0036 9BB2     		uxth	r3, r3
 795 0038 D31A     		subs	r3, r2, r3
 796 003a 9BB2     		uxth	r3, r3
 797 003c 9AB2     		uxth	r2, r3
 798 003e 504B     		ldr	r3, .L13+24
 799 0040 1A80     		strh	r2, [r3]	@ movhi
 121:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 800              		.loc 1 121 0
 801 0042 4D4B     		ldr	r3, .L13+16
 802 0044 1B88     		ldrh	r3, [r3]
 803 0046 9AB2     		uxth	r2, r3
 804 0048 4C4B     		ldr	r3, .L13+20
 805 004a 1B88     		ldrh	r3, [r3]
 806 004c 9BB2     		uxth	r3, r3
 807 004e D31A     		subs	r3, r2, r3
 808 0050 9BB2     		uxth	r3, r3
 809 0052 9AB2     		uxth	r2, r3
 810 0054 4B4B     		ldr	r3, .L13+28
 811 0056 1A80     		strh	r2, [r3]	@ movhi
 122:.\main.c      ****     
 123:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 812              		.loc 1 123 0
 813 0058 454B     		ldr	r3, .L13+8
 814 005a 1B88     		ldrh	r3, [r3]
 815 005c 1BB2     		sxth	r3, r3
 816 005e 002B     		cmp	r3, #0
 817 0060 B8BF     		it	lt
 818 0062 5B42     		rsblt	r3, r3, #0
 819 0064 40F6B832 		movw	r2, #3000
 820 0068 9342     		cmp	r3, r2
 821 006a 17DD     		ble	.L6
 822              		.loc 1 123 0 is_stmt 0 discriminator 1
 823 006c 464B     		ldr	r3, .L13+32
 824 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 0070 012B     		cmp	r3, #1
 826 0072 13D0     		beq	.L6
 827              		.loc 1 123 0 discriminator 2
 828 0074 444B     		ldr	r3, .L13+32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 18


 829 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0078 022B     		cmp	r3, #2
 831 007a 0FD0     		beq	.L6
 832              		.loc 1 123 0 discriminator 3
 833 007c 424B     		ldr	r3, .L13+32
 834 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 0080 072B     		cmp	r3, #7
 836 0082 0BD0     		beq	.L6
 124:.\main.c      ****     {
 125:.\main.c      ****         QuadDec_M1_SetCounter(0);
 837              		.loc 1 125 0 is_stmt 1
 838 0084 0020     		movs	r0, #0
 839 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 126:.\main.c      ****         QuadDec_M2_SetCounter(0);
 840              		.loc 1 126 0
 841 008a 0020     		movs	r0, #0
 842 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 127:.\main.c      ****         quad_count1 = 0;
 843              		.loc 1 127 0
 844 0090 374B     		ldr	r3, .L13+8
 845 0092 0022     		movs	r2, #0
 846 0094 1A80     		strh	r2, [r3]	@ movhi
 128:.\main.c      ****         quad_count2 = 0;
 847              		.loc 1 128 0
 848 0096 384B     		ldr	r3, .L13+16
 849 0098 0022     		movs	r2, #0
 850 009a 1A80     		strh	r2, [r3]	@ movhi
 851              	.L6:
 129:.\main.c      ****     }
 130:.\main.c      **** 
 131:.\main.c      ****     flag_calc_wheelspeed = 1;
 852              		.loc 1 131 0
 853 009c 3B4B     		ldr	r3, .L13+36
 854 009e 0122     		movs	r2, #1
 855 00a0 1A70     		strb	r2, [r3]
 132:.\main.c      ****     
 133:.\main.c      ****     
 134:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 856              		.loc 1 134 0
 857 00a2 3B4B     		ldr	r3, .L13+40
 858 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 00a6 062B     		cmp	r3, #6
 860 00a8 5AD1     		bne	.L5
 861              		.loc 1 134 0 is_stmt 0 discriminator 1
 862 00aa 374B     		ldr	r3, .L13+32
 863 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 00ae 062B     		cmp	r3, #6
 865 00b0 56D1     		bne	.L5
 135:.\main.c      ****     {
 136:.\main.c      ****         //track the distance
 137:.\main.c      ****         accum_dist += quad_diff1;
 866              		.loc 1 137 0 is_stmt 1
 867 00b2 384B     		ldr	r3, .L13+44
 868 00b4 1B88     		ldrh	r3, [r3]
 869 00b6 9AB2     		uxth	r2, r3
 870 00b8 314B     		ldr	r3, .L13+24
 871 00ba 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 19


 872 00bc 9BB2     		uxth	r3, r3
 873 00be 1344     		add	r3, r3, r2
 874 00c0 9BB2     		uxth	r3, r3
 875 00c2 9AB2     		uxth	r2, r3
 876 00c4 334B     		ldr	r3, .L13+44
 877 00c6 1A80     		strh	r2, [r3]	@ movhi
 138:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 878              		.loc 1 138 0
 879 00c8 324B     		ldr	r3, .L13+44
 880 00ca 1B88     		ldrh	r3, [r3]
 881 00cc 1BB2     		sxth	r3, r3
 882 00ce 002B     		cmp	r3, #0
 883 00d0 B8BF     		it	lt
 884 00d2 5B42     		rsblt	r3, r3, #0
 885 00d4 1846     		mov	r0, r3
 886 00d6 FFF7FEFF 		bl	__aeabi_i2d
 887 00da 0446     		mov	r4, r0
 888 00dc 0D46     		mov	r5, r1
 889 00de 2E4B     		ldr	r3, .L13+48
 890 00e0 1B88     		ldrh	r3, [r3]
 891 00e2 1BB2     		sxth	r3, r3
 892 00e4 1846     		mov	r0, r3
 893 00e6 FFF7FEFF 		bl	__aeabi_i2d
 894 00ea 0246     		mov	r2, r0
 895 00ec 0B46     		mov	r3, r1
 896 00ee 1046     		mov	r0, r2
 897 00f0 1946     		mov	r1, r3
 898 00f2 1DA3     		adr	r3, .L13
 899 00f4 D3E90023 		ldrd	r2, [r3]
 900 00f8 FFF7FEFF 		bl	__aeabi_dsub
 901 00fc 0246     		mov	r2, r0
 902 00fe 0B46     		mov	r3, r1
 903 0100 2046     		mov	r0, r4
 904 0102 2946     		mov	r1, r5
 905 0104 FFF7FEFF 		bl	__aeabi_dcmpge
 906 0108 0346     		mov	r3, r0
 907 010a 002B     		cmp	r3, #0
 908 010c 02D0     		beq	.L8
 139:.\main.c      ****         {
 140:.\main.c      ****             reached_target = 1;
 909              		.loc 1 140 0
 910 010e 234B     		ldr	r3, .L13+52
 911 0110 0122     		movs	r2, #1
 912 0112 1A70     		strb	r2, [r3]
 913              	.L8:
 141:.\main.c      ****         }
 142:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5))
 914              		.loc 1 142 0
 915 0114 1F4B     		ldr	r3, .L13+44
 916 0116 1B88     		ldrh	r3, [r3]
 917 0118 1BB2     		sxth	r3, r3
 918 011a 002B     		cmp	r3, #0
 919 011c B8BF     		it	lt
 920 011e 5B42     		rsblt	r3, r3, #0
 921 0120 1846     		mov	r0, r3
 922 0122 FFF7FEFF 		bl	__aeabi_i2d
 923 0126 0446     		mov	r4, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 20


 924 0128 0D46     		mov	r5, r1
 925 012a 1B4B     		ldr	r3, .L13+48
 926 012c 1B88     		ldrh	r3, [r3]
 927 012e 1BB2     		sxth	r3, r3
 928 0130 1846     		mov	r0, r3
 929 0132 FFF7FEFF 		bl	__aeabi_i2d
 930 0136 0246     		mov	r2, r0
 931 0138 0B46     		mov	r3, r1
 932 013a 1046     		mov	r0, r2
 933 013c 1946     		mov	r1, r3
 934 013e 0AA3     		adr	r3, .L13
 935 0140 D3E90023 		ldrd	r2, [r3]
 936 0144 FFF7FEFF 		bl	__aeabi_dadd
 937 0148 0246     		mov	r2, r0
 938 014a 0B46     		mov	r3, r1
 939 014c 2046     		mov	r0, r4
 940 014e 2946     		mov	r1, r5
 941 0150 FFF7FEFF 		bl	__aeabi_dcmpge
 942 0154 0346     		mov	r3, r0
 943 0156 002B     		cmp	r3, #0
 944 0158 02D0     		beq	.L5
 143:.\main.c      ****         {
 144:.\main.c      ****             overshot_target = 1;
 945              		.loc 1 144 0
 946 015a 114B     		ldr	r3, .L13+56
 947 015c 0122     		movs	r2, #1
 948 015e 1A70     		strb	r2, [r3]
 949              	.L5:
 145:.\main.c      ****         }
 146:.\main.c      ****     }
 147:.\main.c      **** }
 950              		.loc 1 147 0
 951 0160 B0BD     		pop	{r4, r5, r7, pc}
 952              	.L14:
 953 0162 00BFAFF3 		.align	3
 953      0080
 954              	.L13:
 955 0168 00000000 		.word	0
 956 016c 00C05140 		.word	1079099392
 957 0170 00000000 		.word	quad_count1
 958 0174 00000000 		.word	last_quad_count1
 959 0178 00000000 		.word	quad_count2
 960 017c 00000000 		.word	last_quad_count2
 961 0180 00000000 		.word	quad_diff1
 962 0184 00000000 		.word	quad_diff2
 963 0188 00000000 		.word	movement_state
 964 018c 00000000 		.word	flag_calc_wheelspeed
 965 0190 00000000 		.word	track_mode
 966 0194 00000000 		.word	accum_dist
 967 0198 00000000 		.word	target_distance_quad
 968 019c 00000000 		.word	reached_target
 969 01a0 00000000 		.word	overshot_target
 970              		.cfi_endproc
 971              	.LFE65:
 972              		.size	isr_quad1, .-isr_quad1
 973 01a4 AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 974              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 21


 975              		.global	isr_turn_timer
 976              		.thumb
 977              		.thumb_func
 978              		.type	isr_turn_timer, %function
 979              	isr_turn_timer:
 980              	.LFB66:
 148:.\main.c      **** 
 149:.\main.c      **** CY_ISR(isr_turn_timer)
 150:.\main.c      **** {
 981              		.loc 1 150 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 8
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985 0000 80B5     		push	{r7, lr}
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 82B0     		sub	sp, sp, #8
 990              		.cfi_def_cfa_offset 16
 991 0004 00AF     		add	r7, sp, #0
 992              		.cfi_def_cfa_register 7
 151:.\main.c      ****     if(movement_state == LTURN)
 993              		.loc 1 151 0
 994 0006 464B     		ldr	r3, .L23
 995 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 996 000a 012B     		cmp	r3, #1
 997 000c 33D1     		bne	.L16
 998              	.LBB2:
 152:.\main.c      ****     {
 153:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 999              		.loc 1 153 0
 1000 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1001 0012 0346     		mov	r3, r0
 1002 0014 1A46     		mov	r2, r3
 1003 0016 434B     		ldr	r3, .L23+4
 1004 0018 1B88     		ldrh	r3, [r3]
 1005 001a 1BB2     		sxth	r3, r3
 1006 001c D31A     		subs	r3, r2, r3
 1007 001e 002B     		cmp	r3, #0
 1008 0020 B8BF     		it	lt
 1009 0022 5B42     		rsblt	r3, r3, #0
 1010 0024 404A     		ldr	r2, .L23+8
 1011 0026 82FB0312 		smull	r1, r2, r2, r3
 1012 002a 1112     		asrs	r1, r2, #8
 1013 002c DA17     		asrs	r2, r3, #31
 1014 002e 8A1A     		subs	r2, r1, r2
 1015 0030 4FF45071 		mov	r1, #832
 1016 0034 01FB02F2 		mul	r2, r1, r2
 1017 0038 9A1A     		subs	r2, r3, r2
 1018 003a 1346     		mov	r3, r2	@ movhi
 1019 003c FB80     		strh	r3, [r7, #6]	@ movhi
 154:.\main.c      ****   
 155:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1020              		.loc 1 155 0
 1021 003e FB88     		ldrh	r3, [r7, #6]
 1022 0040 B82B     		cmp	r3, #184
 1023 0042 17D9     		bls	.L17
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 22


 1024              		.loc 1 155 0 is_stmt 0 discriminator 1
 1025 0044 FB88     		ldrh	r3, [r7, #6]
 1026 0046 E02B     		cmp	r3, #224
 1027 0048 14D8     		bhi	.L17
 1028              		.loc 1 155 0 discriminator 2
 1029 004a 384B     		ldr	r3, .L23+12
 1030 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1031 004e 012B     		cmp	r3, #1
 1032 0050 07D0     		beq	.L18
 1033              		.loc 1 155 0 discriminator 3
 1034 0052 364B     		ldr	r3, .L23+12
 1035 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1036 0056 012B     		cmp	r3, #1
 1037 0058 03D0     		beq	.L18
 1038              		.loc 1 155 0 discriminator 4
 1039 005a 344B     		ldr	r3, .L23+12
 1040 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1041 005e 012B     		cmp	r3, #1
 1042 0060 08D1     		bne	.L17
 1043              	.L18:
 156:.\main.c      ****         {
 157:.\main.c      ****             //movement_state = STOPPED;
 158:.\main.c      ****             brakeMotor();
 1044              		.loc 1 158 0 is_stmt 1
 1045 0062 FFF7FEFF 		bl	brakeMotor
 159:.\main.c      ****             movement_state = prev_movement_state;
 1046              		.loc 1 159 0
 1047 0066 324B     		ldr	r3, .L23+16
 1048 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1049 006a 2D4B     		ldr	r3, .L23
 1050 006c 1A70     		strb	r2, [r3]
 160:.\main.c      ****             Timer_2_Stop();
 1051              		.loc 1 160 0
 1052 006e FFF7FEFF 		bl	Timer_2_Stop
 1053              	.LBE2:
 1054 0072 51E0     		b	.L15
 1055              	.L17:
 1056 0074 50E0     		b	.L15
 1057              	.L16:
 161:.\main.c      ****         }
 162:.\main.c      ****     }
 163:.\main.c      ****     else if (movement_state == RTURN)
 1058              		.loc 1 163 0
 1059 0076 2A4B     		ldr	r3, .L23
 1060 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 007a 022B     		cmp	r3, #2
 1062 007c 33D1     		bne	.L20
 1063              	.LBB3:
 164:.\main.c      ****     {
 165:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1064              		.loc 1 165 0
 1065 007e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1066 0082 0346     		mov	r3, r0
 1067 0084 1A46     		mov	r2, r3
 1068 0086 274B     		ldr	r3, .L23+4
 1069 0088 1B88     		ldrh	r3, [r3]
 1070 008a 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 23


 1071 008c D31A     		subs	r3, r2, r3
 1072 008e 002B     		cmp	r3, #0
 1073 0090 B8BF     		it	lt
 1074 0092 5B42     		rsblt	r3, r3, #0
 1075 0094 244A     		ldr	r2, .L23+8
 1076 0096 82FB0312 		smull	r1, r2, r2, r3
 1077 009a 1112     		asrs	r1, r2, #8
 1078 009c DA17     		asrs	r2, r3, #31
 1079 009e 8A1A     		subs	r2, r1, r2
 1080 00a0 4FF45071 		mov	r1, #832
 1081 00a4 01FB02F2 		mul	r2, r1, r2
 1082 00a8 9A1A     		subs	r2, r3, r2
 1083 00aa 1346     		mov	r3, r2	@ movhi
 1084 00ac BB80     		strh	r3, [r7, #4]	@ movhi
 166:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1085              		.loc 1 166 0
 1086 00ae BB88     		ldrh	r3, [r7, #4]
 1087 00b0 B82B     		cmp	r3, #184
 1088 00b2 17D9     		bls	.L21
 1089              		.loc 1 166 0 is_stmt 0 discriminator 1
 1090 00b4 BB88     		ldrh	r3, [r7, #4]
 1091 00b6 E02B     		cmp	r3, #224
 1092 00b8 14D8     		bhi	.L21
 1093              		.loc 1 166 0 discriminator 2
 1094 00ba 1C4B     		ldr	r3, .L23+12
 1095 00bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1096 00be 012B     		cmp	r3, #1
 1097 00c0 07D0     		beq	.L22
 1098              		.loc 1 166 0 discriminator 3
 1099 00c2 1A4B     		ldr	r3, .L23+12
 1100 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1101 00c6 012B     		cmp	r3, #1
 1102 00c8 03D0     		beq	.L22
 1103              		.loc 1 166 0 discriminator 4
 1104 00ca 184B     		ldr	r3, .L23+12
 1105 00cc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1106 00ce 012B     		cmp	r3, #1
 1107 00d0 08D1     		bne	.L21
 1108              	.L22:
 167:.\main.c      ****         {
 168:.\main.c      ****             //movement_state = STOPPED;
 169:.\main.c      ****             brakeMotor();
 1109              		.loc 1 169 0 is_stmt 1
 1110 00d2 FFF7FEFF 		bl	brakeMotor
 170:.\main.c      ****             movement_state = prev_movement_state;
 1111              		.loc 1 170 0
 1112 00d6 164B     		ldr	r3, .L23+16
 1113 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1114 00da 114B     		ldr	r3, .L23
 1115 00dc 1A70     		strb	r2, [r3]
 171:.\main.c      ****             Timer_2_Stop();
 1116              		.loc 1 171 0
 1117 00de FFF7FEFF 		bl	Timer_2_Stop
 1118              	.LBE3:
 1119 00e2 19E0     		b	.L15
 1120              	.L21:
 1121 00e4 18E0     		b	.L15
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 24


 1122              	.L20:
 172:.\main.c      ****         }
 173:.\main.c      ****     }
 174:.\main.c      ****     else if (movement_state == UTURN)
 1123              		.loc 1 174 0
 1124 00e6 0E4B     		ldr	r3, .L23
 1125 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 00ea 072B     		cmp	r3, #7
 1127 00ec 14D1     		bne	.L15
 175:.\main.c      ****     {
 176:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1128              		.loc 1 176 0
 1129 00ee FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1130 00f2 0346     		mov	r3, r0
 1131 00f4 1A46     		mov	r2, r3
 1132 00f6 0B4B     		ldr	r3, .L23+4
 1133 00f8 1B88     		ldrh	r3, [r3]
 1134 00fa 1BB2     		sxth	r3, r3
 1135 00fc D31A     		subs	r3, r2, r3
 1136 00fe 002B     		cmp	r3, #0
 1137 0100 B8BF     		it	lt
 1138 0102 5B42     		rsblt	r3, r3, #0
 1139 0104 CF2B     		cmp	r3, #207
 1140 0106 07DD     		ble	.L15
 177:.\main.c      ****         {
 178:.\main.c      ****             //movement_state = STOPPED;
 179:.\main.c      ****             brakeMotor();
 1141              		.loc 1 179 0
 1142 0108 FFF7FEFF 		bl	brakeMotor
 180:.\main.c      ****             movement_state = prev_movement_state;
 1143              		.loc 1 180 0
 1144 010c 084B     		ldr	r3, .L23+16
 1145 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1146 0110 034B     		ldr	r3, .L23
 1147 0112 1A70     		strb	r2, [r3]
 181:.\main.c      ****             Timer_2_Stop();
 1148              		.loc 1 181 0
 1149 0114 FFF7FEFF 		bl	Timer_2_Stop
 1150              	.L15:
 182:.\main.c      ****         }
 183:.\main.c      ****     }
 184:.\main.c      **** }
 1151              		.loc 1 184 0
 1152 0118 0837     		adds	r7, r7, #8
 1153              		.cfi_def_cfa_offset 8
 1154 011a BD46     		mov	sp, r7
 1155              		.cfi_def_cfa_register 13
 1156              		@ sp needed
 1157 011c 80BD     		pop	{r7, pc}
 1158              	.L24:
 1159 011e 00BF     		.align	2
 1160              	.L23:
 1161 0120 00000000 		.word	movement_state
 1162 0124 00000000 		.word	start_turn_count
 1163 0128 4FECC44E 		.word	1321528399
 1164 012c 00000000 		.word	frontSensors
 1165 0130 00000000 		.word	prev_movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 25


 1166              		.cfi_endproc
 1167              	.LFE66:
 1168              		.size	isr_turn_timer, .-isr_turn_timer
 1169              		.section	.text.Stop_on_line,"ax",%progbits
 1170              		.align	2
 1171              		.global	Stop_on_line
 1172              		.thumb
 1173              		.thumb_func
 1174              		.type	Stop_on_line, %function
 1175              	Stop_on_line:
 1176              	.LFB67:
 185:.\main.c      **** 
 186:.\main.c      **** 
 187:.\main.c      **** CY_ISR (Stop_on_line)
 188:.\main.c      **** {
 1177              		.loc 1 188 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182 0000 80B4     		push	{r7}
 1183              		.cfi_def_cfa_offset 4
 1184              		.cfi_offset 7, -4
 1185 0002 00AF     		add	r7, sp, #0
 1186              		.cfi_def_cfa_register 7
 189:.\main.c      ****     movement_state = STOPPED;
 1187              		.loc 1 189 0
 1188 0004 054B     		ldr	r3, .L27
 1189 0006 0322     		movs	r2, #3
 1190 0008 1A70     		strb	r2, [r3]
 190:.\main.c      ****     if(movement_state != DRIVE) return;
 1191              		.loc 1 190 0
 1192 000a 044B     		ldr	r3, .L27
 1193 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1194 000e 002B     		cmp	r3, #0
 1195 0010 00D0     		beq	.L25
 1196 0012 00BF     		nop
 1197              	.L25:
 191:.\main.c      ****     //initTurnLeft();
 192:.\main.c      **** }
 1198              		.loc 1 192 0
 1199 0014 BD46     		mov	sp, r7
 1200              		.cfi_def_cfa_register 13
 1201              		@ sp needed
 1202 0016 5DF8047B 		ldr	r7, [sp], #4
 1203              		.cfi_restore 7
 1204              		.cfi_def_cfa_offset 0
 1205 001a 7047     		bx	lr
 1206              	.L28:
 1207              		.align	2
 1208              	.L27:
 1209 001c 00000000 		.word	movement_state
 1210              		.cfi_endproc
 1211              	.LFE67:
 1212              		.size	Stop_on_line, .-Stop_on_line
 1213              		.section	.rodata
 1214              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 26


 1215              	.LC0:
 1216 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1216      74696E67 
 1216      20726F62 
 1216      6F74210D 
 1216      0A00
 1217              		.section	.text.button,"ax",%progbits
 1218              		.align	2
 1219              		.global	button
 1220              		.thumb
 1221              		.thumb_func
 1222              		.type	button, %function
 1223              	button:
 1224              	.LFB68:
 193:.\main.c      **** 
 194:.\main.c      **** CY_ISR (button)
 195:.\main.c      **** {
 1225              		.loc 1 195 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 1, uses_anonymous_args = 0
 1229 0000 80B5     		push	{r7, lr}
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 7, -8
 1232              		.cfi_offset 14, -4
 1233 0002 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 196:.\main.c      ****     if(BT_ENABLED)
 1235              		.loc 1 196 0
 1236 0004 054B     		ldr	r3, .L31
 1237 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 0008 002B     		cmp	r3, #0
 1239 000a 02D0     		beq	.L30
 197:.\main.c      ****     {
 198:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1240              		.loc 1 198 0
 1241 000c 0448     		ldr	r0, .L31+4
 1242 000e FFF7FEFF 		bl	UART_PutString
 1243              	.L30:
 199:.\main.c      ****     }
 200:.\main.c      ****     movement_state = DRIVE;
 1244              		.loc 1 200 0
 1245 0012 044B     		ldr	r3, .L31+8
 1246 0014 0022     		movs	r2, #0
 1247 0016 1A70     		strb	r2, [r3]
 201:.\main.c      **** }
 1248              		.loc 1 201 0
 1249 0018 80BD     		pop	{r7, pc}
 1250              	.L32:
 1251 001a 00BF     		.align	2
 1252              	.L31:
 1253 001c 00000000 		.word	BT_ENABLED
 1254 0020 00000000 		.word	.LC0
 1255 0024 00000000 		.word	movement_state
 1256              		.cfi_endproc
 1257              	.LFE68:
 1258              		.size	button, .-button
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 27


 1259              		.section	.text.isr_adcTimer,"ax",%progbits
 1260              		.align	2
 1261              		.global	isr_adcTimer
 1262              		.thumb
 1263              		.thumb_func
 1264              		.type	isr_adcTimer, %function
 1265              	isr_adcTimer:
 1266              	.LFB69:
 202:.\main.c      **** 
 203:.\main.c      **** CY_ISR(isr_adcTimer)
 204:.\main.c      **** {
 1267              		.loc 1 204 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271 0000 80B5     		push	{r7, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 7, -8
 1274              		.cfi_offset 14, -4
 1275 0002 00AF     		add	r7, sp, #0
 1276              		.cfi_def_cfa_register 7
 205:.\main.c      ****     ADC_StartConvert();
 1277              		.loc 1 205 0
 1278 0004 FFF7FEFF 		bl	ADC_StartConvert
 206:.\main.c      **** }
 1279              		.loc 1 206 0
 1280 0008 80BD     		pop	{r7, pc}
 1281              		.cfi_endproc
 1282              	.LFE69:
 1283              		.size	isr_adcTimer, .-isr_adcTimer
 1284 000a 00BF     		.section	.rodata
 1285 0012 0000     		.align	2
 1286              	.LC1:
 1287 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1287      7A6F6E65 
 1287      206C6566 
 1287      740D0A00 
 1288              		.section	.text.isr_deadzone,"ax",%progbits
 1289              		.align	2
 1290              		.global	isr_deadzone
 1291              		.thumb
 1292              		.thumb_func
 1293              		.type	isr_deadzone, %function
 1294              	isr_deadzone:
 1295              	.LFB70:
 207:.\main.c      **** 
 208:.\main.c      **** CY_ISR(isr_deadzone)
 209:.\main.c      **** {
 1296              		.loc 1 209 0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 1, uses_anonymous_args = 0
 1300 0000 80B5     		push	{r7, lr}
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 28


 1305              		.cfi_def_cfa_register 7
 210:.\main.c      ****     sensorsDisabled = 0;
 1306              		.loc 1 210 0
 1307 0004 054B     		ldr	r3, .L35
 1308 0006 0022     		movs	r2, #0
 1309 0008 1A60     		str	r2, [r3]
 211:.\main.c      ****     deadzone = 0;
 1310              		.loc 1 211 0
 1311 000a 054B     		ldr	r3, .L35+4
 1312 000c 0022     		movs	r2, #0
 1313 000e 1A70     		strb	r2, [r3]
 212:.\main.c      ****     Timer_Deadzone_Stop();
 1314              		.loc 1 212 0
 1315 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 213:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1316              		.loc 1 213 0
 1317 0014 0348     		ldr	r0, .L35+8
 1318 0016 FFF7FEFF 		bl	UART_PutString
 214:.\main.c      **** }
 1319              		.loc 1 214 0
 1320 001a 80BD     		pop	{r7, pc}
 1321              	.L36:
 1322              		.align	2
 1323              	.L35:
 1324 001c 00000000 		.word	sensorsDisabled
 1325 0020 00000000 		.word	deadzone
 1326 0024 14000000 		.word	.LC1
 1327              		.cfi_endproc
 1328              	.LFE70:
 1329              		.size	isr_deadzone, .-isr_deadzone
 1330              		.section	.rodata
 1331              		.align	2
 1332              	.LC2:
 1333 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1333      20747261 
 1333      76656C3A 
 1333      2025640D 
 1333      0A00
 1334 0036 0000     		.align	2
 1335              	.LC3:
 1336 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1336      67657265 
 1336      64206174 
 1336      20696E74 
 1336      65727365 
 1337 0055 000000   		.align	2
 1338              	.LC4:
 1339 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1339      7A6F6E65 
 1339      20656E74 
 1339      65726564 
 1339      210D0A00 
 1340              		.align	2
 1341              	.LC5:
 1342 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1342      65742064 
 1342      6973743A 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 29


 1342      2025640D 
 1342      0A00
 1343 007e 0000     		.align	2
 1344              	.LC6:
 1345 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1345      67657265 
 1345      64206174 
 1345      20776869 
 1345      7465206C 
 1346              		.align	2
 1347              	.LC7:
 1348 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1348      67657265 
 1348      64206174 
 1348      20717561 
 1348      6420636F 
 1349              		.section	.text.main,"ax",%progbits
 1350              		.align	2
 1351              		.global	main
 1352              		.thumb
 1353              		.thumb_func
 1354              		.type	main, %function
 1355              	main:
 1356              	.LFB71:
 215:.\main.c      **** 
 216:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 217:.\main.c      **** 
 218:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 219:.\main.c      **** int main()
 220:.\main.c      **** {  
 1357              		.loc 1 220 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 56
 1360              		@ frame_needed = 1, uses_anonymous_args = 0
 1361 0000 80B5     		push	{r7, lr}
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 7, -8
 1364              		.cfi_offset 14, -4
 1365 0002 8EB0     		sub	sp, sp, #56
 1366              		.cfi_def_cfa_offset 64
 1367 0004 00AF     		add	r7, sp, #0
 1368              		.cfi_def_cfa_register 7
 221:.\main.c      **** 
 222:.\main.c      **** // ----- INITIALIZATIONS ----------
 223:.\main.c      ****     CYGlobalIntEnable;
 1369              		.loc 1 223 0
 1370              	@ 223 ".\main.c" 1
 1371 0006 62B6     		CPSIE   i
 1372              	@ 0 "" 2
 224:.\main.c      ****     if(ENABLE_PWM)
 225:.\main.c      ****     {
 226:.\main.c      ****         PWM_1_Start();// starting the pwm
 1373              		.loc 1 226 0
 1374              		.thumb
 1375 0008 FFF7FEFF 		bl	PWM_1_Start
 227:.\main.c      ****         PWM_2_Start();// starting the pwm
 1376              		.loc 1 227 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 30


 1377 000c FFF7FEFF 		bl	PWM_2_Start
 228:.\main.c      ****     }
 229:.\main.c      ****     
 230:.\main.c      ****     if(ENABLE_ADC)
 231:.\main.c      ****     {
 232:.\main.c      ****         ADC_Start();
 233:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 234:.\main.c      ****         //ADC_StartConvert();
 235:.\main.c      ****         
 236:.\main.c      ****         //start the ADC timer for software trigger mode
 237:.\main.c      ****         Timer_TS_Start();
 238:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 239:.\main.c      ****     }
 240:.\main.c      ****     
 241:.\main.c      ****     if (ENABLE_QUAD)
 242:.\main.c      ****     {
 243:.\main.c      ****         QuadDec_M1_Start();
 1378              		.loc 1 243 0
 1379 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 244:.\main.c      ****         QuadDec_M2_Start();
 1380              		.loc 1 244 0
 1381 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 245:.\main.c      ****         
 246:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1382              		.loc 1 246 0
 1383 0018 A848     		ldr	r0, .L98
 1384 001a FFF7FEFF 		bl	isr_quad1_StartEx
 247:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1385              		.loc 1 247 0
 1386 001e A848     		ldr	r0, .L98+4
 1387 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 248:.\main.c      ****         
 249:.\main.c      ****         Timer_1_Start();
 1388              		.loc 1 249 0
 1389 0024 FFF7FEFF 		bl	Timer_1_Start
 250:.\main.c      ****     }
 251:.\main.c      ****     
 252:.\main.c      ****     if(ENABLE_STOP){
 253:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 254:.\main.c      ****         
 255:.\main.c      ****     }
 256:.\main.c      ****     isr_button_StartEx(button);
 1390              		.loc 1 256 0
 1391 0028 A648     		ldr	r0, .L98+8
 1392 002a FFF7FEFF 		bl	isr_button_StartEx
 257:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1393              		.loc 1 257 0
 1394 002e A648     		ldr	r0, .L98+12
 1395 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 258:.\main.c      **** 
 259:.\main.c      ****     // ------USB SETUP ----------------    
 260:.\main.c      ****     if (USE_USB){    
 261:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1396              		.loc 1 261 0
 1397 0034 0020     		movs	r0, #0
 1398 0036 0121     		movs	r1, #1
 1399 0038 FFF7FEFF 		bl	USBUART_Start
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 31


 262:.\main.c      ****         if (USBUART_GetConfiguration())
 1400              		.loc 1 262 0
 1401 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1402 0040 0346     		mov	r3, r0
 1403 0042 002B     		cmp	r3, #0
 1404 0044 01D0     		beq	.L38
 263:.\main.c      ****             {
 264:.\main.c      ****                  USBUART_CDC_Init();
 1405              		.loc 1 264 0
 1406 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1407              	.L38:
 265:.\main.c      ****             }
 266:.\main.c      ****     }
 267:.\main.c      ****     
 268:.\main.c      ****     if(BIN_ENABLED){
 1408              		.loc 1 268 0
 1409 004a A04B     		ldr	r3, .L98+16
 1410 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1411 004e 002B     		cmp	r3, #0
 1412 0050 01D0     		beq	.L39
 269:.\main.c      ****         changeToRF();
 1413              		.loc 1 269 0
 1414 0052 FFF7FEFF 		bl	changeToRF
 1415              	.L39:
 270:.\main.c      ****     }
 271:.\main.c      ****     
 272:.\main.c      ****     if(BT_ENABLED){
 1416              		.loc 1 272 0
 1417 0056 9E4B     		ldr	r3, .L98+20
 1418 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1419 005a 002B     		cmp	r3, #0
 1420 005c 01D0     		beq	.L40
 273:.\main.c      ****         changeToBT();
 1421              		.loc 1 273 0
 1422 005e FFF7FEFF 		bl	changeToBT
 1423              	.L40:
 274:.\main.c      ****     }
 275:.\main.c      ****     
 276:.\main.c      ****     uint16 actionDebounce = 0;
 1424              		.loc 1 276 0
 1425 0062 0023     		movs	r3, #0
 1426 0064 FB86     		strh	r3, [r7, #54]	@ movhi
 1427              	.L95:
 277:.\main.c      ****     
 278:.\main.c      ****     //usbPutString("Started");
 279:.\main.c      ****     for(;;)
 280:.\main.c      ****     {
 281:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 282:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1428              		.loc 1 282 0
 1429 0066 FFF7FEFF 		bl	Quad_Dec_response
 283:.\main.c      ****         if(BIN_ENABLED == 1)
 1430              		.loc 1 283 0
 1431 006a 984B     		ldr	r3, .L98+16
 1432 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1433 006e 012B     		cmp	r3, #1
 1434 0070 03D1     		bne	.L41
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 32


 284:.\main.c      ****         {
 285:.\main.c      ****             handle_rx_binary();
 1435              		.loc 1 285 0
 1436 0072 FFF7FEFF 		bl	handle_rx_binary
 286:.\main.c      ****             print_RF();
 1437              		.loc 1 286 0
 1438 0076 FFF7FEFF 		bl	print_RF
 1439              	.L41:
 287:.\main.c      ****         }
 288:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 289:.\main.c      ****        
 290:.\main.c      ****         readFrontSensors(frontSensors);
 1440              		.loc 1 290 0
 1441 007a 9648     		ldr	r0, .L98+24
 1442 007c FFF7FEFF 		bl	readFrontSensors
 291:.\main.c      ****         
 292:.\main.c      ****         switch(track_mode)
 1443              		.loc 1 292 0
 1444 0080 954B     		ldr	r3, .L98+28
 1445 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1446 0084 072B     		cmp	r3, #7
 1447 0086 00F2CA82 		bhi	.L42
 1448 008a 01A2     		adr	r2, .L44
 1449 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1450              		.p2align 2
 1451              	.L44:
 1452 0090 1F060000 		.word	.L42+1
 1453 0094 1F060000 		.word	.L42+1
 1454 0098 1F060000 		.word	.L42+1
 1455 009c B1000000 		.word	.L47+1
 1456 00a0 1F060000 		.word	.L42+1
 1457 00a4 F5000000 		.word	.L49+1
 1458 00a8 1B010000 		.word	.L50+1
 1459 00ac 1B010000 		.word	.L50+1
 1460              		.p2align 1
 1461              	.L47:
 293:.\main.c      ****         {
 294:.\main.c      ****             case SQUARE_TRACK:
 295:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1462              		.loc 1 295 0
 1463 00b0 8A4B     		ldr	r3, .L98+32
 1464 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 00b4 012B     		cmp	r3, #1
 1466 00b6 1CD0     		beq	.L51
 1467              		.loc 1 295 0 is_stmt 0 discriminator 1
 1468 00b8 884B     		ldr	r3, .L98+32
 1469 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1470 00bc 022B     		cmp	r3, #2
 1471 00be 18D0     		beq	.L51
 296:.\main.c      ****                 {
 297:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1472              		.loc 1 297 0 is_stmt 1
 1473 00c0 844B     		ldr	r3, .L98+24
 1474 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1475 00c4 012B     		cmp	r3, #1
 1476 00c6 06D1     		bne	.L52
 1477              		.loc 1 297 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 33


 1478 00c8 824B     		ldr	r3, .L98+24
 1479 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1480 00cc 012B     		cmp	r3, #1
 1481 00ce 02D1     		bne	.L52
 298:.\main.c      ****                         initTurnLeft();
 1482              		.loc 1 298 0 is_stmt 1
 1483 00d0 FFF7FEFF 		bl	initTurnLeft
 1484 00d4 0DE0     		b	.L51
 1485              	.L52:
 299:.\main.c      ****                     }
 300:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1486              		.loc 1 300 0
 1487 00d6 7F4B     		ldr	r3, .L98+24
 1488 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1489 00da 012B     		cmp	r3, #1
 1490 00dc 06D1     		bne	.L53
 1491              		.loc 1 300 0 is_stmt 0 discriminator 1
 1492 00de 7D4B     		ldr	r3, .L98+24
 1493 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1494 00e2 012B     		cmp	r3, #1
 1495 00e4 02D1     		bne	.L53
 301:.\main.c      ****                     {
 302:.\main.c      ****                         initTurnRight();
 1496              		.loc 1 302 0 is_stmt 1
 1497 00e6 FFF7FEFF 		bl	initTurnRight
 1498 00ea 02E0     		b	.L51
 1499              	.L53:
 303:.\main.c      ****                     }
 304:.\main.c      ****                     else inittrackLineZ();
 1500              		.loc 1 304 0
 1501 00ec FFF7FEFF 		bl	inittrackLineZ
 305:.\main.c      ****                 }
 306:.\main.c      ****             break;
 1502              		.loc 1 306 0
 1503 00f0 95E2     		b	.L42
 1504              	.L51:
 1505 00f2 94E2     		b	.L42
 1506              	.L49:
 307:.\main.c      ****             case NO_TRACK:
 308:.\main.c      ****             break;
 309:.\main.c      ****             case CURVE_TRACK:
 310:.\main.c      ****             break;
 311:.\main.c      ****             case U_TRACK:
 312:.\main.c      ****             break;
 313:.\main.c      ****             case QUAD_STOP:
 314:.\main.c      ****             break;
 315:.\main.c      ****             case RF_STOP:
 316:.\main.c      ****                 if(initial_pos_valid == 1)
 1507              		.loc 1 316 0
 1508 00f4 7A4B     		ldr	r3, .L98+36
 1509 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1510 00f8 012B     		cmp	r3, #1
 1511 00fa 0DD1     		bne	.L54
 317:.\main.c      ****                 {
 318:.\main.c      ****                     //changeToBT();
 319:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 320:.\main.c      ****                     //changeToRF();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 34


 321:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1512              		.loc 1 321 0
 1513 00fc 794B     		ldr	r3, .L98+40
 1514 00fe 5A88     		ldrh	r2, [r3, #2]
 1515 0100 794B     		ldr	r3, .L98+44
 1516 0102 1A80     		strh	r2, [r3]	@ movhi
 322:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1517              		.loc 1 322 0
 1518 0104 774B     		ldr	r3, .L98+40
 1519 0106 9A88     		ldrh	r2, [r3, #4]
 1520 0108 784B     		ldr	r3, .L98+48
 1521 010a 1A80     		strh	r2, [r3]	@ movhi
 323:.\main.c      ****                     initial_pos_valid = 2;
 1522              		.loc 1 323 0
 1523 010c 744B     		ldr	r3, .L98+36
 1524 010e 0222     		movs	r2, #2
 1525 0110 1A70     		strb	r2, [r3]
 324:.\main.c      ****                     initForward();
 1526              		.loc 1 324 0
 1527 0112 FFF7FEFF 		bl	initForward
 325:.\main.c      ****                 }
 326:.\main.c      ****             break;
 1528              		.loc 1 326 0
 1529 0116 82E2     		b	.L42
 1530              	.L54:
 1531 0118 81E2     		b	.L42
 1532              	.L50:
 327:.\main.c      ****             case MAP_TRAVERSE:
 328:.\main.c      ****             case DEST_TEST:
 329:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1533              		.loc 1 329 0
 1534 011a 704B     		ldr	r3, .L98+32
 1535 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 011e 012B     		cmp	r3, #1
 1537 0120 00F07C82 		beq	.L55
 1538              		.loc 1 329 0 is_stmt 0 discriminator 1
 1539 0124 6D4B     		ldr	r3, .L98+32
 1540 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1541 0128 022B     		cmp	r3, #2
 1542 012a 00F07782 		beq	.L55
 1543              		.loc 1 329 0 discriminator 2
 1544 012e 6B4B     		ldr	r3, .L98+32
 1545 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 0132 072B     		cmp	r3, #7
 1547 0134 00F07282 		beq	.L55
 1548              	.LBB4:
 330:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 331:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1549              		.loc 1 331 0 is_stmt 1
 1550 0138 6D4B     		ldr	r3, .L98+52
 1551 013a 1B88     		ldrh	r3, [r3]
 1552 013c 1A46     		mov	r2, r3
 1553 013e 6D4B     		ldr	r3, .L98+56
 1554 0140 9B5C     		ldrb	r3, [r3, r2]
 1555 0142 87F83530 		strb	r3, [r7, #53]
 332:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1556              		.loc 1 332 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 35


 1557 0146 634B     		ldr	r3, .L98+24
 1558 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 014a 012B     		cmp	r3, #1
 1560 014c 03D1     		bne	.L56
 1561              		.loc 1 332 0 is_stmt 0 discriminator 1
 1562 014e 614B     		ldr	r3, .L98+24
 1563 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1564 0152 012B     		cmp	r3, #1
 1565 0154 09D0     		beq	.L57
 1566              	.L56:
 1567              		.loc 1 332 0 discriminator 3
 1568 0156 5F4B     		ldr	r3, .L98+24
 1569 0158 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1570 015a 012B     		cmp	r3, #1
 1571 015c 40F00881 		bne	.L58
 1572              		.loc 1 332 0 discriminator 4
 1573 0160 5C4B     		ldr	r3, .L98+24
 1574 0162 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1575 0164 012B     		cmp	r3, #1
 1576 0166 40F00381 		bne	.L58
 1577              	.L57:
 333:.\main.c      ****                         if(sensorsDisabled == 0)
 1578              		.loc 1 333 0 is_stmt 1
 1579 016a 634B     		ldr	r3, .L98+60
 1580 016c 1B68     		ldr	r3, [r3]
 1581 016e 002B     		cmp	r3, #0
 1582 0170 40F0FD80 		bne	.L59
 334:.\main.c      ****                         {
 335:.\main.c      ****                             actionDebounce++;
 1583              		.loc 1 335 0
 1584 0174 FB8E     		ldrh	r3, [r7, #54]
 1585 0176 0133     		adds	r3, r3, #1
 1586 0178 FB86     		strh	r3, [r7, #54]	@ movhi
 336:.\main.c      ****                             if(actionDebounce >= 500)
 1587              		.loc 1 336 0
 1588 017a FB8E     		ldrh	r3, [r7, #54]
 1589 017c B3F5FA7F 		cmp	r3, #500
 1590 0180 C0F0F580 		bcc	.L59
 1591              	.LBB5:
 337:.\main.c      ****                             {
 338:.\main.c      ****                                 char mes[16];
 339:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1592              		.loc 1 339 0
 1593 0184 5D4B     		ldr	r3, .L98+64
 1594 0186 1B88     		ldrh	r3, [r3]
 1595 0188 1BB2     		sxth	r3, r3
 1596 018a 07F12002 		add	r2, r7, #32
 1597 018e 1046     		mov	r0, r2
 1598 0190 5B49     		ldr	r1, .L98+68
 1599 0192 1A46     		mov	r2, r3
 1600 0194 FFF7FEFF 		bl	sprintf
 340:.\main.c      ****                                  UART_PutString(mes);
 1601              		.loc 1 340 0
 1602 0198 07F12003 		add	r3, r7, #32
 1603 019c 1846     		mov	r0, r3
 1604 019e FFF7FEFF 		bl	UART_PutString
 341:.\main.c      ****                             if(reached_target == 1)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 36


 1605              		.loc 1 341 0
 1606 01a2 584B     		ldr	r3, .L98+72
 1607 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1608 01a6 012B     		cmp	r3, #1
 1609 01a8 40F0E180 		bne	.L59
 1610              	.LBB6:
 342:.\main.c      ****                             {
 343:.\main.c      ****                                 if(nextStep == 'D')
 1611              		.loc 1 343 0
 1612 01ac 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1613 01b0 442B     		cmp	r3, #68
 1614 01b2 0CD1     		bne	.L61
 344:.\main.c      ****                                 {
 345:.\main.c      ****                                     instructionCount += 2;
 1615              		.loc 1 345 0
 1616 01b4 4E4B     		ldr	r3, .L98+52
 1617 01b6 1B88     		ldrh	r3, [r3]
 1618 01b8 0233     		adds	r3, r3, #2
 1619 01ba 9AB2     		uxth	r2, r3
 1620 01bc 4C4B     		ldr	r3, .L98+52
 1621 01be 1A80     		strh	r2, [r3]	@ movhi
 346:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1622              		.loc 1 346 0
 1623 01c0 4B4B     		ldr	r3, .L98+52
 1624 01c2 1B88     		ldrh	r3, [r3]
 1625 01c4 1A46     		mov	r2, r3
 1626 01c6 4B4B     		ldr	r3, .L98+56
 1627 01c8 9B5C     		ldrb	r3, [r3, r2]
 1628 01ca 87F83530 		strb	r3, [r7, #53]
 1629              	.L61:
 347:.\main.c      ****                                 }
 348:.\main.c      ****                                 
 349:.\main.c      ****                                 sensorsDisabled = 1;
 1630              		.loc 1 349 0
 1631 01ce 4A4B     		ldr	r3, .L98+60
 1632 01d0 0122     		movs	r2, #1
 1633 01d2 1A60     		str	r2, [r3]
 350:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1634              		.loc 1 350 0
 1635 01d4 4C48     		ldr	r0, .L98+76
 1636 01d6 FFF7FEFF 		bl	UART_PutString
 351:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1637              		.loc 1 351 0
 1638 01da 4C48     		ldr	r0, .L98+80
 1639 01dc FFF7FEFF 		bl	UART_PutString
 352:.\main.c      ****                                 deadzone = 1;
 1640              		.loc 1 352 0
 1641 01e0 4B4B     		ldr	r3, .L98+84
 1642 01e2 0122     		movs	r2, #1
 1643 01e4 1A70     		strb	r2, [r3]
 353:.\main.c      ****                                 
 354:.\main.c      ****                                 accum_dist = 0;
 1644              		.loc 1 354 0
 1645 01e6 454B     		ldr	r3, .L98+64
 1646 01e8 0022     		movs	r2, #0
 1647 01ea 1A80     		strh	r2, [r3]	@ movhi
 355:.\main.c      ****                                 uint8 nextStepDist;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 37


 356:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1648              		.loc 1 356 0
 1649 01ec 404B     		ldr	r3, .L98+52
 1650 01ee 1B88     		ldrh	r3, [r3]
 1651 01f0 1A46     		mov	r2, r3
 1652 01f2 484B     		ldr	r3, .L98+88
 1653 01f4 1B88     		ldrh	r3, [r3]
 1654 01f6 053B     		subs	r3, r3, #5
 1655 01f8 9A42     		cmp	r2, r3
 1656 01fa 07DC     		bgt	.L62
 1657              		.loc 1 356 0 is_stmt 0 discriminator 1
 1658 01fc 3C4B     		ldr	r3, .L98+52
 1659 01fe 1B88     		ldrh	r3, [r3]
 1660 0200 0333     		adds	r3, r3, #3
 1661 0202 3C4A     		ldr	r2, .L98+56
 1662 0204 D35C     		ldrb	r3, [r2, r3]
 1663 0206 87F83430 		strb	r3, [r7, #52]
 1664 020a 02E0     		b	.L63
 1665              	.L62:
 357:.\main.c      ****                                 else nextStepDist = 0;
 1666              		.loc 1 357 0 is_stmt 1
 1667 020c 0023     		movs	r3, #0
 1668 020e 87F83430 		strb	r3, [r7, #52]
 1669              	.L63:
 358:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1670              		.loc 1 358 0
 1671 0212 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1672 0216 9BB2     		uxth	r3, r3
 1673 0218 1A46     		mov	r2, r3	@ movhi
 1674 021a D200     		lsls	r2, r2, #3
 1675 021c 1A44     		add	r2, r2, r3
 1676 021e D200     		lsls	r2, r2, #3
 1677 0220 D31A     		subs	r3, r2, r3
 1678 0222 5B00     		lsls	r3, r3, #1
 1679 0224 9BB2     		uxth	r3, r3
 1680 0226 9AB2     		uxth	r2, r3
 1681 0228 3B4B     		ldr	r3, .L98+92
 1682 022a 1A80     		strh	r2, [r3]	@ movhi
 359:.\main.c      ****                                 
 360:.\main.c      ****                                 
 361:.\main.c      ****                                 
 362:.\main.c      ****                                 switch(nextStep)
 1683              		.loc 1 362 0
 1684 022c 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1685 0230 4C3B     		subs	r3, r3, #76
 1686 0232 092B     		cmp	r3, #9
 1687 0234 74D8     		bhi	.L96
 1688 0236 01A2     		adr	r2, .L66
 1689 0238 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1690              		.p2align 2
 1691              	.L66:
 1692 023c 73020000 		.word	.L65+1
 1693 0240 21030000 		.word	.L96+1
 1694 0244 21030000 		.word	.L96+1
 1695 0248 21030000 		.word	.L96+1
 1696 024c 21030000 		.word	.L96+1
 1697 0250 21030000 		.word	.L96+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 38


 1698 0254 91020000 		.word	.L67+1
 1699 0258 65020000 		.word	.L68+1
 1700 025c 21030000 		.word	.L96+1
 1701 0260 AF020000 		.word	.L69+1
 1702              		.p2align 1
 1703              	.L68:
 363:.\main.c      ****                                 {
 364:.\main.c      ****                                     case 'S':
 365:.\main.c      ****                                         inittrackLineZ();
 1704              		.loc 1 365 0
 1705 0264 FFF7FEFF 		bl	inittrackLineZ
 366:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1706              		.loc 1 366 0
 1707 0268 42F21070 		movw	r0, #10000
 1708 026c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 367:.\main.c      ****                                         //do nothing
 368:.\main.c      ****                                     break;
 1709              		.loc 1 368 0
 1710 0270 57E0     		b	.L70
 1711              	.L65:
 369:.\main.c      ****                                     case 'L':
 370:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 371:.\main.c      ****                                         initTurnLeft();
 1712              		.loc 1 371 0
 1713 0272 FFF7FEFF 		bl	initTurnLeft
 372:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1714              		.loc 1 372 0
 1715 0276 4CF25030 		movw	r0, #50000
 1716 027a FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 373:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1717              		.loc 1 373 0
 1718 027e 264B     		ldr	r3, .L98+92
 1719 0280 1B88     		ldrh	r3, [r3]
 1720 0282 9BB2     		uxth	r3, r3
 1721 0284 863B     		subs	r3, r3, #134
 1722 0286 9BB2     		uxth	r3, r3
 1723 0288 9AB2     		uxth	r2, r3
 1724 028a 234B     		ldr	r3, .L98+92
 1725 028c 1A80     		strh	r2, [r3]	@ movhi
 374:.\main.c      ****                                     break;
 1726              		.loc 1 374 0
 1727 028e 48E0     		b	.L70
 1728              	.L67:
 375:.\main.c      ****                                     case 'R':
 376:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 377:.\main.c      ****                                         initTurnRight();
 1729              		.loc 1 377 0
 1730 0290 FFF7FEFF 		bl	initTurnRight
 378:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1731              		.loc 1 378 0
 1732 0294 204B     		ldr	r3, .L98+92
 1733 0296 1B88     		ldrh	r3, [r3]
 1734 0298 9BB2     		uxth	r3, r3
 1735 029a 863B     		subs	r3, r3, #134
 1736 029c 9BB2     		uxth	r3, r3
 1737 029e 9AB2     		uxth	r2, r3
 1738 02a0 1D4B     		ldr	r3, .L98+92
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 39


 1739 02a2 1A80     		strh	r2, [r3]	@ movhi
 379:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 380:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1740              		.loc 1 380 0
 1741 02a4 4CF25030 		movw	r0, #50000
 1742 02a8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 381:.\main.c      ****                                     break;
 1743              		.loc 1 381 0
 1744 02ac 39E0     		b	.L70
 1745              	.L69:
 382:.\main.c      ****                                     case 'U':
 383:.\main.c      ****                                         // Direction not tracked any more
 384:.\main.c      ****                                         initTurnU();
 1746              		.loc 1 384 0
 1747 02ae FFF7FEFF 		bl	initTurnU
 385:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1748              		.loc 1 385 0
 1749 02b2 1A48     		ldr	r0, .L98+96
 1750 02b4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 386:.\main.c      ****                                         //target_distance_quad += 208;
 387:.\main.c      ****                                     break;
 1751              		.loc 1 387 0
 1752 02b8 33E0     		b	.L70
 1753              	.L99:
 1754 02ba 00BF     		.align	2
 1755              	.L98:
 1756 02bc 00000000 		.word	isr_quad1
 1757 02c0 00000000 		.word	isr_turn_timer
 1758 02c4 00000000 		.word	button
 1759 02c8 00000000 		.word	isr_deadzone
 1760 02cc 00000000 		.word	BIN_ENABLED
 1761 02d0 00000000 		.word	BT_ENABLED
 1762 02d4 00000000 		.word	frontSensors
 1763 02d8 00000000 		.word	track_mode
 1764 02dc 00000000 		.word	movement_state
 1765 02e0 00000000 		.word	initial_pos_valid
 1766 02e4 00000000 		.word	system_state
 1767 02e8 00000000 		.word	initial_x_pos
 1768 02ec 00000000 		.word	initial_y_pos
 1769 02f0 00000000 		.word	instructionCount
 1770 02f4 00000000 		.word	instructions
 1771 02f8 00000000 		.word	sensorsDisabled
 1772 02fc 00000000 		.word	accum_dist
 1773 0300 24000000 		.word	.LC2
 1774 0304 00000000 		.word	reached_target
 1775 0308 38000000 		.word	.LC3
 1776 030c 58000000 		.word	.LC4
 1777 0310 00000000 		.word	deadzone
 1778 0314 00000000 		.word	instructionLength
 1779 0318 00000000 		.word	target_distance_quad
 1780 031c 905F0100 		.word	90000
 1781              	.L96:
 388:.\main.c      ****                                     
 389:.\main.c      ****                                     default:
 390:.\main.c      ****                                         //do nothing
 391:.\main.c      ****                                         break;
 1782              		.loc 1 391 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 40


 1783 0320 00BF     		nop
 1784              	.L70:
 392:.\main.c      ****                                 }
 393:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1785              		.loc 1 393 0
 1786 0322 AE4B     		ldr	r3, .L100
 1787 0324 1B88     		ldrh	r3, [r3]
 1788 0326 1BB2     		sxth	r3, r3
 1789 0328 002B     		cmp	r3, #0
 1790 032a 02DA     		bge	.L71
 1791              		.loc 1 393 0 is_stmt 0 discriminator 1
 1792 032c AB4B     		ldr	r3, .L100
 1793 032e 0022     		movs	r2, #0
 1794 0330 1A80     		strh	r2, [r3]	@ movhi
 1795              	.L71:
 394:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1796              		.loc 1 394 0 is_stmt 1
 1797 0332 AA4B     		ldr	r3, .L100
 1798 0334 1B88     		ldrh	r3, [r3]
 1799 0336 1BB2     		sxth	r3, r3
 1800 0338 07F12002 		add	r2, r7, #32
 1801 033c 1046     		mov	r0, r2
 1802 033e A849     		ldr	r1, .L100+4
 1803 0340 1A46     		mov	r2, r3
 1804 0342 FFF7FEFF 		bl	sprintf
 395:.\main.c      ****                                  UART_PutString(mes);
 1805              		.loc 1 395 0
 1806 0346 07F12003 		add	r3, r7, #32
 1807 034a 1846     		mov	r0, r3
 1808 034c FFF7FEFF 		bl	UART_PutString
 396:.\main.c      ****                                 Timer_Deadzone_Start();
 1809              		.loc 1 396 0
 1810 0350 FFF7FEFF 		bl	Timer_Deadzone_Start
 397:.\main.c      ****                                 reached_target = 0;
 1811              		.loc 1 397 0
 1812 0354 A34B     		ldr	r3, .L100+8
 1813 0356 0022     		movs	r2, #0
 1814 0358 1A70     		strb	r2, [r3]
 398:.\main.c      ****                                 overshot_target = 0;
 1815              		.loc 1 398 0
 1816 035a A34B     		ldr	r3, .L100+12
 1817 035c 0022     		movs	r2, #0
 1818 035e 1A70     		strb	r2, [r3]
 399:.\main.c      ****                                 instructionCount += 2;
 1819              		.loc 1 399 0
 1820 0360 A24B     		ldr	r3, .L100+16
 1821 0362 1B88     		ldrh	r3, [r3]
 1822 0364 0233     		adds	r3, r3, #2
 1823 0366 9AB2     		uxth	r2, r3
 1824 0368 A04B     		ldr	r3, .L100+16
 1825 036a 1A80     		strh	r2, [r3]	@ movhi
 1826              	.LBE6:
 1827              	.LBE5:
 333:.\main.c      ****                         {
 1828              		.loc 1 333 0
 1829 036c 56E1     		b	.L55
 1830              	.L59:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 41


 333:.\main.c      ****                         {
 1831              		.loc 1 333 0 is_stmt 0 discriminator 1
 1832 036e 55E1     		b	.L55
 1833              	.L58:
 400:.\main.c      ****                             }
 401:.\main.c      ****                             }
 402:.\main.c      ****                         }
 403:.\main.c      ****                     }
 404:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1834              		.loc 1 404 0 is_stmt 1
 1835 0370 9F4B     		ldr	r3, .L100+20
 1836 0372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1837 0374 002B     		cmp	r3, #0
 1838 0376 40F0BA80 		bne	.L72
 1839              		.loc 1 404 0 is_stmt 0 discriminator 1
 1840 037a 9D4B     		ldr	r3, .L100+20
 1841 037c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1842 037e 002B     		cmp	r3, #0
 1843 0380 40F0B580 		bne	.L72
 1844              		.loc 1 404 0 discriminator 2
 1845 0384 9A4B     		ldr	r3, .L100+20
 1846 0386 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1847 0388 002B     		cmp	r3, #0
 1848 038a 40F0B080 		bne	.L72
 1849              		.loc 1 404 0 discriminator 3
 1850 038e 984B     		ldr	r3, .L100+20
 1851 0390 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1852 0392 002B     		cmp	r3, #0
 1853 0394 40F0AB80 		bne	.L72
 1854              		.loc 1 404 0 discriminator 4
 1855 0398 954B     		ldr	r3, .L100+20
 1856 039a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1857 039c 002B     		cmp	r3, #0
 1858 039e 40F0A680 		bne	.L72
 1859              		.loc 1 404 0 discriminator 5
 1860 03a2 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1861 03a6 552B     		cmp	r3, #85
 1862 03a8 04D0     		beq	.L73
 1863              		.loc 1 404 0 discriminator 6
 1864 03aa 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1865 03ae 442B     		cmp	r3, #68
 1866 03b0 40F09D80 		bne	.L72
 1867              	.L73:
 405:.\main.c      ****                     {
 406:.\main.c      ****                         if(sensorsDisabled == 0)
 1868              		.loc 1 406 0 is_stmt 1
 1869 03b4 8F4B     		ldr	r3, .L100+24
 1870 03b6 1B68     		ldr	r3, [r3]
 1871 03b8 002B     		cmp	r3, #0
 1872 03ba 40F09780 		bne	.L74
 407:.\main.c      ****                         {
 408:.\main.c      ****                                 if(nextStep == 'D')
 1873              		.loc 1 408 0
 1874 03be 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1875 03c2 442B     		cmp	r3, #68
 1876 03c4 17D1     		bne	.L75
 1877              	.LBB7:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 42


 409:.\main.c      ****                                 {
 410:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1878              		.loc 1 410 0
 1879 03c6 894B     		ldr	r3, .L100+16
 1880 03c8 1B88     		ldrh	r3, [r3]
 1881 03ca 0233     		adds	r3, r3, #2
 1882 03cc 8A4A     		ldr	r2, .L100+28
 1883 03ce D35C     		ldrb	r3, [r2, r3]
 1884 03d0 87F83130 		strb	r3, [r7, #49]
 411:.\main.c      ****                                     if(nextInstruction == 'U')
 1885              		.loc 1 411 0
 1886 03d4 97F83130 		ldrb	r3, [r7, #49]	@ zero_extendqisi2
 1887 03d8 552B     		cmp	r3, #85
 1888 03da 0CD1     		bne	.L75
 412:.\main.c      ****                                     {
 413:.\main.c      ****                                         instructionCount += 2;
 1889              		.loc 1 413 0
 1890 03dc 834B     		ldr	r3, .L100+16
 1891 03de 1B88     		ldrh	r3, [r3]
 1892 03e0 0233     		adds	r3, r3, #2
 1893 03e2 9AB2     		uxth	r2, r3
 1894 03e4 814B     		ldr	r3, .L100+16
 1895 03e6 1A80     		strh	r2, [r3]	@ movhi
 414:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1896              		.loc 1 414 0
 1897 03e8 804B     		ldr	r3, .L100+16
 1898 03ea 1B88     		ldrh	r3, [r3]
 1899 03ec 1A46     		mov	r2, r3
 1900 03ee 824B     		ldr	r3, .L100+28
 1901 03f0 9B5C     		ldrb	r3, [r3, r2]
 1902 03f2 87F83530 		strb	r3, [r7, #53]
 1903              	.L75:
 1904              	.LBE7:
 415:.\main.c      ****                                     }
 416:.\main.c      ****                                 }
 417:.\main.c      ****                                 
 418:.\main.c      ****                                 if(nextStep == 'U')
 1905              		.loc 1 418 0
 1906 03f6 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1907 03fa 552B     		cmp	r3, #85
 1908 03fc 76D1     		bne	.L74
 419:.\main.c      ****                                 {
 420:.\main.c      ****                                     actionDebounce++;
 1909              		.loc 1 420 0
 1910 03fe FB8E     		ldrh	r3, [r7, #54]
 1911 0400 0133     		adds	r3, r3, #1
 1912 0402 FB86     		strh	r3, [r7, #54]	@ movhi
 421:.\main.c      ****                                     if(actionDebounce >= 2600)
 1913              		.loc 1 421 0
 1914 0404 FB8E     		ldrh	r3, [r7, #54]
 1915 0406 40F62722 		movw	r2, #2599
 1916 040a 9342     		cmp	r3, r2
 1917 040c 6ED9     		bls	.L74
 422:.\main.c      ****                                     {
 423:.\main.c      ****                                         if(reached_target == 1)
 1918              		.loc 1 423 0
 1919 040e 754B     		ldr	r3, .L100+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 43


 1920 0410 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1921 0412 012B     		cmp	r3, #1
 1922 0414 6AD1     		bne	.L74
 1923              	.LBB8:
 424:.\main.c      ****                                         {
 425:.\main.c      ****                                     char mes[16];
 426:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1924              		.loc 1 426 0
 1925 0416 794B     		ldr	r3, .L100+32
 1926 0418 1B88     		ldrh	r3, [r3]
 1927 041a 1BB2     		sxth	r3, r3
 1928 041c 07F11002 		add	r2, r7, #16
 1929 0420 1046     		mov	r0, r2
 1930 0422 7749     		ldr	r1, .L100+36
 1931 0424 1A46     		mov	r2, r3
 1932 0426 FFF7FEFF 		bl	sprintf
 427:.\main.c      ****                                      UART_PutString(mes);
 1933              		.loc 1 427 0
 1934 042a 07F11003 		add	r3, r7, #16
 1935 042e 1846     		mov	r0, r3
 1936 0430 FFF7FEFF 		bl	UART_PutString
 428:.\main.c      ****                                          accum_dist = 0;
 1937              		.loc 1 428 0
 1938 0434 714B     		ldr	r3, .L100+32
 1939 0436 0022     		movs	r2, #0
 1940 0438 1A80     		strh	r2, [r3]	@ movhi
 429:.\main.c      ****                                     uint8 nextStepDist;
 430:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 1941              		.loc 1 430 0
 1942 043a 6C4B     		ldr	r3, .L100+16
 1943 043c 1B88     		ldrh	r3, [r3]
 1944 043e 1A46     		mov	r2, r3
 1945 0440 704B     		ldr	r3, .L100+40
 1946 0442 1B88     		ldrh	r3, [r3]
 1947 0444 053B     		subs	r3, r3, #5
 1948 0446 9A42     		cmp	r2, r3
 1949 0448 07DC     		bgt	.L76
 1950              		.loc 1 430 0 is_stmt 0 discriminator 1
 1951 044a 684B     		ldr	r3, .L100+16
 1952 044c 1B88     		ldrh	r3, [r3]
 1953 044e 0333     		adds	r3, r3, #3
 1954 0450 694A     		ldr	r2, .L100+28
 1955 0452 D35C     		ldrb	r3, [r2, r3]
 1956 0454 87F83330 		strb	r3, [r7, #51]
 1957 0458 02E0     		b	.L77
 1958              	.L76:
 431:.\main.c      ****                                     else nextStepDist = 0;
 1959              		.loc 1 431 0 is_stmt 1
 1960 045a 0023     		movs	r3, #0
 1961 045c 87F83330 		strb	r3, [r7, #51]
 1962              	.L77:
 432:.\main.c      ****                                     
 433:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1963              		.loc 1 433 0
 1964 0460 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1965 0464 9BB2     		uxth	r3, r3
 1966 0466 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 44


 1967 0468 D200     		lsls	r2, r2, #3
 1968 046a 1A44     		add	r2, r2, r3
 1969 046c D200     		lsls	r2, r2, #3
 1970 046e D31A     		subs	r3, r2, r3
 1971 0470 5B00     		lsls	r3, r3, #1
 1972 0472 9BB2     		uxth	r3, r3
 1973 0474 9AB2     		uxth	r2, r3
 1974 0476 594B     		ldr	r3, .L100
 1975 0478 1A80     		strh	r2, [r3]	@ movhi
 434:.\main.c      ****                                     //target_distance_quad += 208;
 435:.\main.c      ****                                     
 436:.\main.c      ****                                         UART_PutString("Triggered at white light \r\n");
 1976              		.loc 1 436 0
 1977 047a 6348     		ldr	r0, .L100+44
 1978 047c FFF7FEFF 		bl	UART_PutString
 437:.\main.c      ****                                         UART_PutString("Deadzone entered!\r\n");
 1979              		.loc 1 437 0
 1980 0480 6248     		ldr	r0, .L100+48
 1981 0482 FFF7FEFF 		bl	UART_PutString
 438:.\main.c      ****                                         
 439:.\main.c      ****                                         deadzone = 1;
 1982              		.loc 1 439 0
 1983 0486 624B     		ldr	r3, .L100+52
 1984 0488 0122     		movs	r2, #1
 1985 048a 1A70     		strb	r2, [r3]
 440:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1986              		.loc 1 440 0
 1987 048c 6148     		ldr	r0, .L100+56
 1988 048e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 441:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 1989              		.loc 1 441 0
 1990 0492 524B     		ldr	r3, .L100
 1991 0494 1B88     		ldrh	r3, [r3]
 1992 0496 1BB2     		sxth	r3, r3
 1993 0498 002B     		cmp	r3, #0
 1994 049a 02DA     		bge	.L78
 1995              		.loc 1 441 0 is_stmt 0 discriminator 1
 1996 049c 4F4B     		ldr	r3, .L100
 1997 049e 0022     		movs	r2, #0
 1998 04a0 1A80     		strh	r2, [r3]	@ movhi
 1999              	.L78:
 442:.\main.c      ****                                         Timer_Deadzone_Start();
 2000              		.loc 1 442 0 is_stmt 1
 2001 04a2 FFF7FEFF 		bl	Timer_Deadzone_Start
 443:.\main.c      ****                                         actionDebounce = 0;
 2002              		.loc 1 443 0
 2003 04a6 0023     		movs	r3, #0
 2004 04a8 FB86     		strh	r3, [r7, #54]	@ movhi
 444:.\main.c      ****                                         sensorsDisabled = 1;
 2005              		.loc 1 444 0
 2006 04aa 524B     		ldr	r3, .L100+24
 2007 04ac 0122     		movs	r2, #1
 2008 04ae 1A60     		str	r2, [r3]
 445:.\main.c      ****                                         initTurnU();
 2009              		.loc 1 445 0
 2010 04b0 FFF7FEFF 		bl	initTurnU
 446:.\main.c      ****                                         reached_target = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 45


 2011              		.loc 1 446 0
 2012 04b4 4B4B     		ldr	r3, .L100+8
 2013 04b6 0022     		movs	r2, #0
 2014 04b8 1A70     		strb	r2, [r3]
 447:.\main.c      ****                                         overshot_target = 0;
 2015              		.loc 1 447 0
 2016 04ba 4B4B     		ldr	r3, .L100+12
 2017 04bc 0022     		movs	r2, #0
 2018 04be 1A70     		strb	r2, [r3]
 448:.\main.c      ****                                         instructionCount += 2;
 2019              		.loc 1 448 0
 2020 04c0 4A4B     		ldr	r3, .L100+16
 2021 04c2 1B88     		ldrh	r3, [r3]
 2022 04c4 0233     		adds	r3, r3, #2
 2023 04c6 9AB2     		uxth	r2, r3
 2024 04c8 484B     		ldr	r3, .L100+16
 2025 04ca 1A80     		strh	r2, [r3]	@ movhi
 449:.\main.c      ****                                         
 450:.\main.c      ****                                         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2026              		.loc 1 450 0
 2027 04cc 434B     		ldr	r3, .L100
 2028 04ce 1B88     		ldrh	r3, [r3]
 2029 04d0 1BB2     		sxth	r3, r3
 2030 04d2 07F11002 		add	r2, r7, #16
 2031 04d6 1046     		mov	r0, r2
 2032 04d8 4149     		ldr	r1, .L100+4
 2033 04da 1A46     		mov	r2, r3
 2034 04dc FFF7FEFF 		bl	sprintf
 451:.\main.c      ****                                         UART_PutString(mes);
 2035              		.loc 1 451 0
 2036 04e0 07F11003 		add	r3, r7, #16
 2037 04e4 1846     		mov	r0, r3
 2038 04e6 FFF7FEFF 		bl	UART_PutString
 2039              	.LBE8:
 406:.\main.c      ****                         {
 2040              		.loc 1 406 0
 2041 04ea 97E0     		b	.L55
 2042              	.L74:
 406:.\main.c      ****                         {
 2043              		.loc 1 406 0 is_stmt 0 discriminator 3
 2044 04ec 96E0     		b	.L55
 2045              	.L72:
 452:.\main.c      ****                                 }
 453:.\main.c      ****                                 }
 454:.\main.c      ****                             }
 455:.\main.c      ****                         }
 456:.\main.c      ****                     }
 457:.\main.c      ****                     else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U'))
 2046              		.loc 1 457 0 is_stmt 1
 2047 04ee 3E4B     		ldr	r3, .L100+12
 2048 04f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2049 04f2 012B     		cmp	r3, #1
 2050 04f4 6DD1     		bne	.L79
 2051              		.loc 1 457 0 is_stmt 0 discriminator 1
 2052 04f6 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2053 04fa 442B     		cmp	r3, #68
 2054 04fc 03D0     		beq	.L80
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 46


 2055              		.loc 1 457 0 discriminator 2
 2056 04fe 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2057 0502 552B     		cmp	r3, #85
 2058 0504 65D1     		bne	.L79
 2059              	.L80:
 2060              	.LBB9:
 458:.\main.c      ****                     {
 459:.\main.c      ****                         
 460:.\main.c      ****                                 //instructionCount += 2;
 461:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 462:.\main.c      ****                                 char mes[16];
 463:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2061              		.loc 1 463 0 is_stmt 1
 2062 0506 3D4B     		ldr	r3, .L100+32
 2063 0508 1B88     		ldrh	r3, [r3]
 2064 050a 1BB2     		sxth	r3, r3
 2065 050c 3A46     		mov	r2, r7
 2066 050e 1046     		mov	r0, r2
 2067 0510 3B49     		ldr	r1, .L100+36
 2068 0512 1A46     		mov	r2, r3
 2069 0514 FFF7FEFF 		bl	sprintf
 464:.\main.c      ****                                  UART_PutString(mes);
 2070              		.loc 1 464 0
 2071 0518 3B46     		mov	r3, r7
 2072 051a 1846     		mov	r0, r3
 2073 051c FFF7FEFF 		bl	UART_PutString
 465:.\main.c      ****                                  accum_dist = 0;
 2074              		.loc 1 465 0
 2075 0520 364B     		ldr	r3, .L100+32
 2076 0522 0022     		movs	r2, #0
 2077 0524 1A80     		strh	r2, [r3]	@ movhi
 466:.\main.c      ****                                 uint8 nextStepDist;
 467:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2078              		.loc 1 467 0
 2079 0526 314B     		ldr	r3, .L100+16
 2080 0528 1B88     		ldrh	r3, [r3]
 2081 052a 1A46     		mov	r2, r3
 2082 052c 354B     		ldr	r3, .L100+40
 2083 052e 1B88     		ldrh	r3, [r3]
 2084 0530 053B     		subs	r3, r3, #5
 2085 0532 9A42     		cmp	r2, r3
 2086 0534 07DC     		bgt	.L81
 2087              		.loc 1 467 0 is_stmt 0 discriminator 1
 2088 0536 2D4B     		ldr	r3, .L100+16
 2089 0538 1B88     		ldrh	r3, [r3]
 2090 053a 0333     		adds	r3, r3, #3
 2091 053c 2E4A     		ldr	r2, .L100+28
 2092 053e D35C     		ldrb	r3, [r2, r3]
 2093 0540 87F83230 		strb	r3, [r7, #50]
 2094 0544 02E0     		b	.L82
 2095              	.L81:
 468:.\main.c      ****                                 else nextStepDist = 0;
 2096              		.loc 1 468 0 is_stmt 1
 2097 0546 0023     		movs	r3, #0
 2098 0548 87F83230 		strb	r3, [r7, #50]
 2099              	.L82:
 469:.\main.c      ****                                 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 47


 470:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2100              		.loc 1 470 0
 2101 054c 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 2102 0550 9BB2     		uxth	r3, r3
 2103 0552 1A46     		mov	r2, r3	@ movhi
 2104 0554 D200     		lsls	r2, r2, #3
 2105 0556 1A44     		add	r2, r2, r3
 2106 0558 D200     		lsls	r2, r2, #3
 2107 055a D31A     		subs	r3, r2, r3
 2108 055c 5B00     		lsls	r3, r3, #1
 2109 055e 9BB2     		uxth	r3, r3
 2110 0560 9AB2     		uxth	r2, r3
 2111 0562 1E4B     		ldr	r3, .L100
 2112 0564 1A80     		strh	r2, [r3]	@ movhi
 471:.\main.c      ****                                 
 472:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 2113              		.loc 1 472 0
 2114 0566 2C48     		ldr	r0, .L100+60
 2115 0568 FFF7FEFF 		bl	UART_PutString
 473:.\main.c      ****                                     if(nextStep == 'U')
 2116              		.loc 1 473 0
 2117 056c 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2118 0570 552B     		cmp	r3, #85
 2119 0572 0CD1     		bne	.L83
 474:.\main.c      ****                                     {
 475:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2120              		.loc 1 475 0
 2121 0574 2748     		ldr	r0, .L100+56
 2122 0576 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 476:.\main.c      ****                                         initTurnU();
 2123              		.loc 1 476 0
 2124 057a FFF7FEFF 		bl	initTurnU
 477:.\main.c      ****                                         //target_distance_quad += 208;
 478:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2125              		.loc 1 478 0
 2126 057e 174B     		ldr	r3, .L100
 2127 0580 1B88     		ldrh	r3, [r3]
 2128 0582 9BB2     		uxth	r3, r3
 2129 0584 863B     		subs	r3, r3, #134
 2130 0586 9BB2     		uxth	r3, r3
 2131 0588 9AB2     		uxth	r2, r3
 2132 058a 144B     		ldr	r3, .L100
 2133 058c 1A80     		strh	r2, [r3]	@ movhi
 2134              	.L83:
 479:.\main.c      ****                                     }
 480:.\main.c      ****                                     else if (nextStep == 'D')
 481:.\main.c      ****                                     {
 482:.\main.c      ****                                         //do nothing
 483:.\main.c      ****                                     }
 484:.\main.c      **** //                                    UART_PutString("Deadzone entered!\r\n");
 485:.\main.c      **** //                                    
 486:.\main.c      **** //                                    
 487:.\main.c      **** //                                    actionDebounce = 0;
 488:.\main.c      **** //                                    sensorsDisabled = 1;
 489:.\main.c      **** //                                    
 490:.\main.c      **** //                                     switch(nextStep)
 491:.\main.c      **** //                                {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 48


 492:.\main.c      **** //                                    case 'S':
 493:.\main.c      **** //                                        inittrackLineZ();
 494:.\main.c      **** //                                         Timer_Deadzone_WriteCounter(S_DEADZONE);
 495:.\main.c      **** //                                        //do nothing
 496:.\main.c      **** //                                    break;
 497:.\main.c      **** //                                    case 'L':
 498:.\main.c      **** //                                        //if(tracked_direction == 1) tracked_direction = 4; else 
 499:.\main.c      **** //                                        initTurnLeft();
 500:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 501:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 502:.\main.c      **** //                                    break;
 503:.\main.c      **** //                                    case 'R':
 504:.\main.c      **** //                                        //if(tracked_direction == 4) tracked_direction = 1; else 
 505:.\main.c      **** //                                        initTurnRight();
 506:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 507:.\main.c      **** //                                        //target_distance_quad += (208 - TURN_OFFSET);
 508:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 509:.\main.c      **** //                                        
 510:.\main.c      **** //                                    break;
 511:.\main.c      **** //                                    case 'U':
 512:.\main.c      **** //                                        // Direction not tracked any more
 513:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(U_DEADZONE);
 514:.\main.c      **** //                                        initTurnU();
 515:.\main.c      **** //                                        //target_distance_quad += 208;
 516:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 517:.\main.c      **** //                                    break;
 518:.\main.c      **** //                                    default:
 519:.\main.c      **** //                                        //do nothing
 520:.\main.c      **** //                                        break;
 521:.\main.c      **** //                                }
 522:.\main.c      **** //                                    
 523:.\main.c      ****                                     reached_target = 0;
 2135              		.loc 1 523 0
 2136 058e 154B     		ldr	r3, .L100+8
 2137 0590 0022     		movs	r2, #0
 2138 0592 1A70     		strb	r2, [r3]
 524:.\main.c      ****                                     overshot_target = 0;
 2139              		.loc 1 524 0
 2140 0594 144B     		ldr	r3, .L100+12
 2141 0596 0022     		movs	r2, #0
 2142 0598 1A70     		strb	r2, [r3]
 525:.\main.c      ****                                     instructionCount += 2;
 2143              		.loc 1 525 0
 2144 059a 144B     		ldr	r3, .L100+16
 2145 059c 1B88     		ldrh	r3, [r3]
 2146 059e 0233     		adds	r3, r3, #2
 2147 05a0 9AB2     		uxth	r2, r3
 2148 05a2 124B     		ldr	r3, .L100+16
 2149 05a4 1A80     		strh	r2, [r3]	@ movhi
 526:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2150              		.loc 1 526 0
 2151 05a6 0D4B     		ldr	r3, .L100
 2152 05a8 1B88     		ldrh	r3, [r3]
 2153 05aa 1BB2     		sxth	r3, r3
 2154 05ac 002B     		cmp	r3, #0
 2155 05ae 02DA     		bge	.L84
 2156              		.loc 1 526 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 49


 2157 05b0 0A4B     		ldr	r3, .L100
 2158 05b2 0022     		movs	r2, #0
 2159 05b4 1A80     		strh	r2, [r3]	@ movhi
 2160              	.L84:
 527:.\main.c      ****                                     //Timer_Deadzone_Start();
 528:.\main.c      ****                                     //deadzone = 1;
 529:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2161              		.loc 1 529 0 is_stmt 1 discriminator 5
 2162 05b6 094B     		ldr	r3, .L100
 2163 05b8 1B88     		ldrh	r3, [r3]
 2164 05ba 1BB2     		sxth	r3, r3
 2165 05bc 3A46     		mov	r2, r7
 2166 05be 1046     		mov	r0, r2
 2167 05c0 0749     		ldr	r1, .L100+4
 2168 05c2 1A46     		mov	r2, r3
 2169 05c4 FFF7FEFF 		bl	sprintf
 530:.\main.c      ****                                     UART_PutString(mes);
 2170              		.loc 1 530 0 discriminator 5
 2171 05c8 3B46     		mov	r3, r7
 2172 05ca 1846     		mov	r0, r3
 2173 05cc FFF7FEFF 		bl	UART_PutString
 2174              	.LBE9:
 458:.\main.c      ****                         
 2175              		.loc 1 458 0 discriminator 5
 2176 05d0 24E0     		b	.L55
 2177              	.L79:
 531:.\main.c      ****                     }
 532:.\main.c      ****                     else
 533:.\main.c      ****                     {
 534:.\main.c      ****                         inittrackLineZ();
 2178              		.loc 1 534 0
 2179 05d2 FFF7FEFF 		bl	inittrackLineZ
 535:.\main.c      ****                         actionDebounce = 0;
 2180              		.loc 1 535 0
 2181 05d6 0023     		movs	r3, #0
 2182 05d8 FB86     		strh	r3, [r7, #54]	@ movhi
 2183              	.LBE4:
 536:.\main.c      ****                     }
 537:.\main.c      ****                 }
 538:.\main.c      ****                 break;
 2184              		.loc 1 538 0
 2185 05da 1FE0     		b	.L97
 2186              	.L101:
 2187              		.align	2
 2188              	.L100:
 2189 05dc 00000000 		.word	target_distance_quad
 2190 05e0 6C000000 		.word	.LC5
 2191 05e4 00000000 		.word	reached_target
 2192 05e8 00000000 		.word	overshot_target
 2193 05ec 00000000 		.word	instructionCount
 2194 05f0 00000000 		.word	frontSensors
 2195 05f4 00000000 		.word	sensorsDisabled
 2196 05f8 00000000 		.word	instructions
 2197 05fc 00000000 		.word	accum_dist
 2198 0600 24000000 		.word	.LC2
 2199 0604 00000000 		.word	instructionLength
 2200 0608 80000000 		.word	.LC6
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 50


 2201 060c 58000000 		.word	.LC4
 2202 0610 00000000 		.word	deadzone
 2203 0614 905F0100 		.word	90000
 2204 0618 9C000000 		.word	.LC7
 2205              	.L55:
 2206              	.L97:
 2207 061c 00BF     		nop
 2208              	.L42:
 539:.\main.c      ****         }
 540:.\main.c      ****         
 541:.\main.c      ****         switch(movement_state)
 2209              		.loc 1 541 0
 2210 061e 184B     		ldr	r3, .L102
 2211 0620 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 0622 072B     		cmp	r3, #7
 2213 0624 3FF61FAD 		bhi	.L95
 2214 0628 01A2     		adr	r2, .L87
 2215 062a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2216 062e 00BF     		.p2align 2
 2217              	.L87:
 2218 0630 51060000 		.word	.L86+1
 2219 0634 57060000 		.word	.L88+1
 2220 0638 5D060000 		.word	.L89+1
 2221 063c 69060000 		.word	.L90+1
 2222 0640 6F060000 		.word	.L91+1
 2223 0644 75060000 		.word	.L92+1
 2224 0648 7B060000 		.word	.L93+1
 2225 064c 63060000 		.word	.L94+1
 2226              		.p2align 1
 2227              	.L86:
 542:.\main.c      ****         {
 543:.\main.c      ****             case DRIVE:
 544:.\main.c      ****                 driveForwards();
 2228              		.loc 1 544 0
 2229 0650 FFF7FEFF 		bl	driveForwards
 545:.\main.c      ****             break;
 2230              		.loc 1 545 0
 2231 0654 13E0     		b	.L85
 2232              	.L88:
 546:.\main.c      ****             case LTURN:
 547:.\main.c      ****                 turnLeft();
 2233              		.loc 1 547 0
 2234 0656 FFF7FEFF 		bl	turnLeft
 548:.\main.c      ****             break;
 2235              		.loc 1 548 0
 2236 065a 10E0     		b	.L85
 2237              	.L89:
 549:.\main.c      ****             case RTURN:
 550:.\main.c      ****                 turnRight();
 2238              		.loc 1 550 0
 2239 065c FFF7FEFF 		bl	turnRight
 551:.\main.c      ****             break;
 2240              		.loc 1 551 0
 2241 0660 0DE0     		b	.L85
 2242              	.L94:
 552:.\main.c      ****             case UTURN:
 553:.\main.c      ****                 turnU();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 51


 2243              		.loc 1 553 0
 2244 0662 FFF7FEFF 		bl	turnU
 554:.\main.c      ****             break;
 2245              		.loc 1 554 0
 2246 0666 0AE0     		b	.L85
 2247              	.L90:
 555:.\main.c      ****             case STOPPED:
 556:.\main.c      ****                 brakeMotor();
 2248              		.loc 1 556 0
 2249 0668 FFF7FEFF 		bl	brakeMotor
 557:.\main.c      ****             break;
 2250              		.loc 1 557 0
 2251 066c 07E0     		b	.L85
 2252              	.L91:
 558:.\main.c      ****             case TRACKING:
 559:.\main.c      ****                 trackLine();
 2253              		.loc 1 559 0
 2254 066e FFF7FEFF 		bl	trackLine
 560:.\main.c      ****             break;
 2255              		.loc 1 560 0
 2256 0672 04E0     		b	.L85
 2257              	.L92:
 561:.\main.c      ****             case TRACKING_U:
 562:.\main.c      ****                 trackLineU();
 2258              		.loc 1 562 0
 2259 0674 FFF7FEFF 		bl	trackLineU
 563:.\main.c      ****             break;
 2260              		.loc 1 563 0
 2261 0678 01E0     		b	.L85
 2262              	.L93:
 564:.\main.c      ****             case TRACKING_SOFT:
 565:.\main.c      ****                 trackLineZ();
 2263              		.loc 1 565 0
 2264 067a FFF7FEFF 		bl	trackLineZ
 2265              	.L85:
 566:.\main.c      ****         }      
 567:.\main.c      ****     }   
 2266              		.loc 1 567 0
 2267 067e F2E4     		b	.L95
 2268              	.L103:
 2269              		.align	2
 2270              	.L102:
 2271 0680 00000000 		.word	movement_state
 2272              		.cfi_endproc
 2273              	.LFE71:
 2274              		.size	main, .-main
 2275              		.section	.text.handle_rx_binary,"ax",%progbits
 2276              		.align	2
 2277              		.global	handle_rx_binary
 2278              		.thumb
 2279              		.thumb_func
 2280              		.type	handle_rx_binary, %function
 2281              	handle_rx_binary:
 2282              	.LFB72:
 568:.\main.c      **** }
 569:.\main.c      **** 
 570:.\main.c      **** /*-------------------------------------------------------------------------------------------------
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 52


 571:.\main.c      **** 
 572:.\main.c      **** void handle_rx_binary()
 573:.\main.c      **** {
 2283              		.loc 1 573 0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 32
 2286              		@ frame_needed = 1, uses_anonymous_args = 0
 2287              		@ link register save eliminated.
 2288 0000 80B4     		push	{r7}
 2289              		.cfi_def_cfa_offset 4
 2290              		.cfi_offset 7, -4
 2291 0002 89B0     		sub	sp, sp, #36
 2292              		.cfi_def_cfa_offset 40
 2293 0004 00AF     		add	r7, sp, #0
 2294              		.cfi_def_cfa_register 7
 574:.\main.c      ****     if(flag_rx == 1)
 2295              		.loc 1 574 0
 2296 0006 524B     		ldr	r3, .L124
 2297 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2298 000a 012B     		cmp	r3, #1
 2299 000c 40F09A80 		bne	.L104
 2300              	.LBB10:
 575:.\main.c      ****     {    
 576:.\main.c      ****         flag_rx = 0;
 2301              		.loc 1 576 0
 2302 0010 4F4B     		ldr	r3, .L124
 2303 0012 0022     		movs	r2, #0
 2304 0014 1A70     		strb	r2, [r3]
 577:.\main.c      ****         
 578:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2305              		.loc 1 578 0
 2306 0016 4F4B     		ldr	r3, .L124+4
 2307 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2308 001a 1B02     		lsls	r3, r3, #8
 2309 001c 9AB2     		uxth	r2, r3
 2310 001e 4D4B     		ldr	r3, .L124+4
 2311 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2312 0022 9BB2     		uxth	r3, r3
 2313 0024 1343     		orrs	r3, r3, r2
 2314 0026 9BB2     		uxth	r3, r3
 2315 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 579:.\main.c      ****         char byte_packet[12];
 580:.\main.c      ****         char string_packet[12];
 581:.\main.c      ****         
 582:.\main.c      ****         switch(byteCount)
 2316              		.loc 1 582 0
 2317 002a 4B4B     		ldr	r3, .L124+8
 2318 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2319 002e 043B     		subs	r3, r3, #4
 2320 0030 1E2B     		cmp	r3, #30
 2321 0032 00F28780 		bhi	.L104
 2322 0036 01A2     		adr	r2, .L108
 2323 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2324              		.p2align 2
 2325              	.L108:
 2326 003c B9000000 		.word	.L107+1
 2327 0040 45010000 		.word	.L104+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 53


 2328 0044 CD000000 		.word	.L109+1
 2329 0048 45010000 		.word	.L104+1
 2330 004c D5000000 		.word	.L110+1
 2331 0050 45010000 		.word	.L104+1
 2332 0054 DD000000 		.word	.L111+1
 2333 0058 45010000 		.word	.L104+1
 2334 005c E5000000 		.word	.L112+1
 2335 0060 45010000 		.word	.L104+1
 2336 0064 ED000000 		.word	.L113+1
 2337 0068 45010000 		.word	.L104+1
 2338 006c F5000000 		.word	.L114+1
 2339 0070 45010000 		.word	.L104+1
 2340 0074 FD000000 		.word	.L115+1
 2341 0078 45010000 		.word	.L104+1
 2342 007c 05010000 		.word	.L116+1
 2343 0080 45010000 		.word	.L104+1
 2344 0084 0D010000 		.word	.L117+1
 2345 0088 45010000 		.word	.L104+1
 2346 008c 15010000 		.word	.L118+1
 2347 0090 45010000 		.word	.L104+1
 2348 0094 1D010000 		.word	.L119+1
 2349 0098 45010000 		.word	.L104+1
 2350 009c 25010000 		.word	.L120+1
 2351 00a0 45010000 		.word	.L104+1
 2352 00a4 2D010000 		.word	.L121+1
 2353 00a8 45010000 		.word	.L104+1
 2354 00ac 35010000 		.word	.L122+1
 2355 00b0 45010000 		.word	.L104+1
 2356 00b4 3D010000 		.word	.L123+1
 2357              		.p2align 1
 2358              	.L107:
 583:.\main.c      ****         {
 584:.\main.c      ****             case 4:
 585:.\main.c      ****                 buffer_state.rssi = packet[0];
 2359              		.loc 1 585 0
 2360 00b8 264B     		ldr	r3, .L124+4
 2361 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362 00bc DAB2     		uxtb	r2, r3
 2363 00be 274B     		ldr	r3, .L124+12
 2364 00c0 1A70     		strb	r2, [r3]
 586:.\main.c      ****                 buffer_state.index = packet[1];
 2365              		.loc 1 586 0
 2366 00c2 244B     		ldr	r3, .L124+4
 2367 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2368 00c6 254B     		ldr	r3, .L124+12
 2369 00c8 5A70     		strb	r2, [r3, #1]
 587:.\main.c      ****             break;
 2370              		.loc 1 587 0
 2371 00ca 3BE0     		b	.L104
 2372              	.L109:
 588:.\main.c      ****             case 6:
 589:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2373              		.loc 1 589 0
 2374 00cc FA8B     		ldrh	r2, [r7, #30]
 2375 00ce 234B     		ldr	r3, .L124+12
 2376 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 590:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 54


 2377              		.loc 1 590 0
 2378 00d2 37E0     		b	.L104
 2379              	.L110:
 591:.\main.c      ****             case 8:
 592:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2380              		.loc 1 592 0
 2381 00d4 FA8B     		ldrh	r2, [r7, #30]
 2382 00d6 214B     		ldr	r3, .L124+12
 2383 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 593:.\main.c      ****             break;
 2384              		.loc 1 593 0
 2385 00da 33E0     		b	.L104
 2386              	.L111:
 594:.\main.c      ****             case 10:
 595:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2387              		.loc 1 595 0
 2388 00dc FA8B     		ldrh	r2, [r7, #30]
 2389 00de 1F4B     		ldr	r3, .L124+12
 2390 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 596:.\main.c      ****             break;
 2391              		.loc 1 596 0
 2392 00e2 2FE0     		b	.L104
 2393              	.L112:
 597:.\main.c      ****             case 12:
 598:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2394              		.loc 1 598 0
 2395 00e4 FA8B     		ldrh	r2, [r7, #30]
 2396 00e6 1D4B     		ldr	r3, .L124+12
 2397 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 599:.\main.c      ****             break;
 2398              		.loc 1 599 0
 2399 00ea 2BE0     		b	.L104
 2400              	.L113:
 600:.\main.c      ****             case 14:
 601:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2401              		.loc 1 601 0
 2402 00ec FA8B     		ldrh	r2, [r7, #30]
 2403 00ee 1B4B     		ldr	r3, .L124+12
 2404 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 602:.\main.c      ****             break;
 2405              		.loc 1 602 0
 2406 00f2 27E0     		b	.L104
 2407              	.L114:
 603:.\main.c      ****             case 16:
 604:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2408              		.loc 1 604 0
 2409 00f4 FA8B     		ldrh	r2, [r7, #30]
 2410 00f6 194B     		ldr	r3, .L124+12
 2411 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 605:.\main.c      ****             break;
 2412              		.loc 1 605 0
 2413 00fa 23E0     		b	.L104
 2414              	.L115:
 606:.\main.c      ****             case 18:
 607:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2415              		.loc 1 607 0
 2416 00fc FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 55


 2417 00fe 174B     		ldr	r3, .L124+12
 2418 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 608:.\main.c      ****             break;
 2419              		.loc 1 608 0
 2420 0102 1FE0     		b	.L104
 2421              	.L116:
 609:.\main.c      ****             case 20:
 610:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2422              		.loc 1 610 0
 2423 0104 FA8B     		ldrh	r2, [r7, #30]
 2424 0106 154B     		ldr	r3, .L124+12
 2425 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 611:.\main.c      ****             break;
 2426              		.loc 1 611 0
 2427 010a 1BE0     		b	.L104
 2428              	.L117:
 612:.\main.c      ****             case 22:
 613:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2429              		.loc 1 613 0
 2430 010c FA8B     		ldrh	r2, [r7, #30]
 2431 010e 134B     		ldr	r3, .L124+12
 2432 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 614:.\main.c      ****             break;
 2433              		.loc 1 614 0
 2434 0112 17E0     		b	.L104
 2435              	.L118:
 615:.\main.c      ****             case 24:
 616:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2436              		.loc 1 616 0
 2437 0114 FA8B     		ldrh	r2, [r7, #30]
 2438 0116 114B     		ldr	r3, .L124+12
 2439 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 617:.\main.c      ****             break;
 2440              		.loc 1 617 0
 2441 011a 13E0     		b	.L104
 2442              	.L119:
 618:.\main.c      ****             case 26:
 619:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2443              		.loc 1 619 0
 2444 011c FA8B     		ldrh	r2, [r7, #30]
 2445 011e 0F4B     		ldr	r3, .L124+12
 2446 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 620:.\main.c      ****             break;
 2447              		.loc 1 620 0
 2448 0122 0FE0     		b	.L104
 2449              	.L120:
 621:.\main.c      ****             case 28:
 622:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2450              		.loc 1 622 0
 2451 0124 FA8B     		ldrh	r2, [r7, #30]
 2452 0126 0D4B     		ldr	r3, .L124+12
 2453 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 623:.\main.c      ****             break;
 2454              		.loc 1 623 0
 2455 012a 0BE0     		b	.L104
 2456              	.L121:
 624:.\main.c      ****             case 30:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 56


 625:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2457              		.loc 1 625 0
 2458 012c FA8B     		ldrh	r2, [r7, #30]
 2459 012e 0B4B     		ldr	r3, .L124+12
 2460 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 626:.\main.c      ****             break;
 2461              		.loc 1 626 0
 2462 0132 07E0     		b	.L104
 2463              	.L122:
 627:.\main.c      ****             case 32:
 628:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2464              		.loc 1 628 0
 2465 0134 FA8B     		ldrh	r2, [r7, #30]
 2466 0136 094B     		ldr	r3, .L124+12
 2467 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 629:.\main.c      ****             break;
 2468              		.loc 1 629 0
 2469 013a 03E0     		b	.L104
 2470              	.L123:
 630:.\main.c      ****             case 34:
 631:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2471              		.loc 1 631 0
 2472 013c FA8B     		ldrh	r2, [r7, #30]
 2473 013e 074B     		ldr	r3, .L124+12
 2474 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 632:.\main.c      ****             break;
 2475              		.loc 1 632 0
 2476 0142 00BF     		nop
 2477              	.L104:
 2478              	.LBE10:
 633:.\main.c      ****         }
 634:.\main.c      ****     }
 635:.\main.c      **** }
 2479              		.loc 1 635 0
 2480 0144 2437     		adds	r7, r7, #36
 2481              		.cfi_def_cfa_offset 4
 2482 0146 BD46     		mov	sp, r7
 2483              		.cfi_def_cfa_register 13
 2484              		@ sp needed
 2485 0148 5DF8047B 		ldr	r7, [sp], #4
 2486              		.cfi_restore 7
 2487              		.cfi_def_cfa_offset 0
 2488 014c 7047     		bx	lr
 2489              	.L125:
 2490 014e 00BF     		.align	2
 2491              	.L124:
 2492 0150 00000000 		.word	flag_rx
 2493 0154 00000000 		.word	packet
 2494 0158 00000000 		.word	byteCount
 2495 015c 00000000 		.word	buffer_state
 2496              		.cfi_endproc
 2497              	.LFE72:
 2498              		.size	handle_rx_binary, .-handle_rx_binary
 2499              		.section	.text.setLeftDir,"ax",%progbits
 2500              		.align	2
 2501              		.global	setLeftDir
 2502              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 57


 2503              		.thumb_func
 2504              		.type	setLeftDir, %function
 2505              	setLeftDir:
 2506              	.LFB73:
 636:.\main.c      **** 
 637:.\main.c      **** void setLeftDir(uint8 dir)
 638:.\main.c      **** {
 2507              		.loc 1 638 0
 2508              		.cfi_startproc
 2509              		@ args = 0, pretend = 0, frame = 8
 2510              		@ frame_needed = 1, uses_anonymous_args = 0
 2511 0000 80B5     		push	{r7, lr}
 2512              		.cfi_def_cfa_offset 8
 2513              		.cfi_offset 7, -8
 2514              		.cfi_offset 14, -4
 2515 0002 82B0     		sub	sp, sp, #8
 2516              		.cfi_def_cfa_offset 16
 2517 0004 00AF     		add	r7, sp, #0
 2518              		.cfi_def_cfa_register 7
 2519 0006 0346     		mov	r3, r0
 2520 0008 FB71     		strb	r3, [r7, #7]
 639:.\main.c      ****     M2_IN2_Write(dir);
 2521              		.loc 1 639 0
 2522 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2523 000c 1846     		mov	r0, r3
 2524 000e FFF7FEFF 		bl	M2_IN2_Write
 640:.\main.c      **** }
 2525              		.loc 1 640 0
 2526 0012 0837     		adds	r7, r7, #8
 2527              		.cfi_def_cfa_offset 8
 2528 0014 BD46     		mov	sp, r7
 2529              		.cfi_def_cfa_register 13
 2530              		@ sp needed
 2531 0016 80BD     		pop	{r7, pc}
 2532              		.cfi_endproc
 2533              	.LFE73:
 2534              		.size	setLeftDir, .-setLeftDir
 2535              		.section	.text.setRightDir,"ax",%progbits
 2536              		.align	2
 2537              		.global	setRightDir
 2538              		.thumb
 2539              		.thumb_func
 2540              		.type	setRightDir, %function
 2541              	setRightDir:
 2542              	.LFB74:
 641:.\main.c      **** 
 642:.\main.c      **** void setRightDir(uint8 dir)
 643:.\main.c      **** {
 2543              		.loc 1 643 0
 2544              		.cfi_startproc
 2545              		@ args = 0, pretend = 0, frame = 8
 2546              		@ frame_needed = 1, uses_anonymous_args = 0
 2547 0000 80B5     		push	{r7, lr}
 2548              		.cfi_def_cfa_offset 8
 2549              		.cfi_offset 7, -8
 2550              		.cfi_offset 14, -4
 2551 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 58


 2552              		.cfi_def_cfa_offset 16
 2553 0004 00AF     		add	r7, sp, #0
 2554              		.cfi_def_cfa_register 7
 2555 0006 0346     		mov	r3, r0
 2556 0008 FB71     		strb	r3, [r7, #7]
 644:.\main.c      ****     M1_IN2_Write(dir);
 2557              		.loc 1 644 0
 2558 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2559 000c 1846     		mov	r0, r3
 2560 000e FFF7FEFF 		bl	M1_IN2_Write
 645:.\main.c      **** }
 2561              		.loc 1 645 0
 2562 0012 0837     		adds	r7, r7, #8
 2563              		.cfi_def_cfa_offset 8
 2564 0014 BD46     		mov	sp, r7
 2565              		.cfi_def_cfa_register 13
 2566              		@ sp needed
 2567 0016 80BD     		pop	{r7, pc}
 2568              		.cfi_endproc
 2569              	.LFE74:
 2570              		.size	setRightDir, .-setRightDir
 2571              		.section	.rodata
 2572 00b7 00       		.align	2
 2573              	.LC8:
 2574 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2574      2025640D 
 2574      0A00
 2575              		.section	.text.reverseDirection,"ax",%progbits
 2576              		.align	2
 2577              		.global	reverseDirection
 2578              		.thumb
 2579              		.thumb_func
 2580              		.type	reverseDirection, %function
 2581              	reverseDirection:
 2582              	.LFB75:
 646:.\main.c      **** 
 647:.\main.c      **** void reverseDirection()
 648:.\main.c      **** {
 2583              		.loc 1 648 0
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 16
 2586              		@ frame_needed = 1, uses_anonymous_args = 0
 2587 0000 80B5     		push	{r7, lr}
 2588              		.cfi_def_cfa_offset 8
 2589              		.cfi_offset 7, -8
 2590              		.cfi_offset 14, -4
 2591 0002 84B0     		sub	sp, sp, #16
 2592              		.cfi_def_cfa_offset 24
 2593 0004 00AF     		add	r7, sp, #0
 2594              		.cfi_def_cfa_register 7
 649:.\main.c      ****     direction = !direction;
 2595              		.loc 1 649 0
 2596 0006 114B     		ldr	r3, .L129
 2597 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2598 000a 002B     		cmp	r3, #0
 2599 000c 0CBF     		ite	eq
 2600 000e 0123     		moveq	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 59


 2601 0010 0023     		movne	r3, #0
 2602 0012 DBB2     		uxtb	r3, r3
 2603 0014 1A46     		mov	r2, r3
 2604 0016 0D4B     		ldr	r3, .L129
 2605 0018 1A70     		strb	r2, [r3]
 650:.\main.c      ****     setLeftDir(direction);
 2606              		.loc 1 650 0
 2607 001a 0C4B     		ldr	r3, .L129
 2608 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2609 001e 1846     		mov	r0, r3
 2610 0020 FFF7FEFF 		bl	setLeftDir
 651:.\main.c      ****     setRightDir(direction);
 2611              		.loc 1 651 0
 2612 0024 094B     		ldr	r3, .L129
 2613 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2614 0028 1846     		mov	r0, r3
 2615 002a FFF7FEFF 		bl	setRightDir
 652:.\main.c      ****     char mes[16];
 653:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2616              		.loc 1 653 0
 2617 002e 074B     		ldr	r3, .L129
 2618 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2619 0032 1A46     		mov	r2, r3
 2620 0034 3B46     		mov	r3, r7
 2621 0036 1846     		mov	r0, r3
 2622 0038 0549     		ldr	r1, .L129+4
 2623 003a FFF7FEFF 		bl	sprintf
 654:.\main.c      ****     UART_PutString(mes);
 2624              		.loc 1 654 0
 2625 003e 3B46     		mov	r3, r7
 2626 0040 1846     		mov	r0, r3
 2627 0042 FFF7FEFF 		bl	UART_PutString
 655:.\main.c      **** }
 2628              		.loc 1 655 0
 2629 0046 1037     		adds	r7, r7, #16
 2630              		.cfi_def_cfa_offset 8
 2631 0048 BD46     		mov	sp, r7
 2632              		.cfi_def_cfa_register 13
 2633              		@ sp needed
 2634 004a 80BD     		pop	{r7, pc}
 2635              	.L130:
 2636              		.align	2
 2637              	.L129:
 2638 004c 00000000 		.word	direction
 2639 0050 B8000000 		.word	.LC8
 2640              		.cfi_endproc
 2641              	.LFE75:
 2642              		.size	reverseDirection, .-reverseDirection
 2643              		.global	__aeabi_dcmplt
 2644              		.global	__aeabi_ddiv
 2645              		.global	__aeabi_d2iz
 2646              		.section	.text.setSpeed,"ax",%progbits
 2647              		.align	2
 2648              		.global	setSpeed
 2649              		.thumb
 2650              		.thumb_func
 2651              		.type	setSpeed, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 60


 2652              	setSpeed:
 2653              	.LFB76:
 656:.\main.c      **** 
 657:.\main.c      **** void setSpeed(double left, double right){
 2654              		.loc 1 657 0
 2655              		.cfi_startproc
 2656              		@ args = 0, pretend = 0, frame = 24
 2657              		@ frame_needed = 1, uses_anonymous_args = 0
 2658 0000 80B5     		push	{r7, lr}
 2659              		.cfi_def_cfa_offset 8
 2660              		.cfi_offset 7, -8
 2661              		.cfi_offset 14, -4
 2662 0002 86B0     		sub	sp, sp, #24
 2663              		.cfi_def_cfa_offset 32
 2664 0004 00AF     		add	r7, sp, #0
 2665              		.cfi_def_cfa_register 7
 2666 0006 C7E90201 		strd	r0, [r7, #8]
 2667 000a C7E90023 		strd	r2, [r7]
 658:.\main.c      ****     if(right < 0.0)
 2668              		.loc 1 658 0
 2669 000e D7E90001 		ldrd	r0, [r7]
 2670 0012 4FF00002 		mov	r2, #0
 2671 0016 4FF00003 		mov	r3, #0
 2672 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2673 001e 0346     		mov	r3, r0
 2674 0020 002B     		cmp	r3, #0
 2675 0022 10D0     		beq	.L140
 659:.\main.c      ****     {
 660:.\main.c      ****         //char mes[16];
 661:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 662:.\main.c      ****        // UART_PutString(mes);
 663:.\main.c      ****         setRightDir(!direction);
 2676              		.loc 1 663 0
 2677 0024 304B     		ldr	r3, .L142+8
 2678 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2679 0028 002B     		cmp	r3, #0
 2680 002a 0CBF     		ite	eq
 2681 002c 0123     		moveq	r3, #1
 2682 002e 0023     		movne	r3, #0
 2683 0030 DBB2     		uxtb	r3, r3
 2684 0032 1846     		mov	r0, r3
 2685 0034 FFF7FEFF 		bl	setRightDir
 664:.\main.c      ****         right = -right;
 2686              		.loc 1 664 0
 2687 0038 3B68     		ldr	r3, [r7]
 2688 003a 3B60     		str	r3, [r7]
 2689 003c 7B68     		ldr	r3, [r7, #4]
 2690 003e 83F00043 		eor	r3, r3, #-2147483648
 2691 0042 7B60     		str	r3, [r7, #4]
 2692 0044 04E0     		b	.L134
 2693              	.L140:
 665:.\main.c      ****     }
 666:.\main.c      ****     else setRightDir(direction);
 2694              		.loc 1 666 0
 2695 0046 284B     		ldr	r3, .L142+8
 2696 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2697 004a 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 61


 2698 004c FFF7FEFF 		bl	setRightDir
 2699              	.L134:
 667:.\main.c      ****     
 668:.\main.c      ****     if(left < 0.0)
 2700              		.loc 1 668 0
 2701 0050 D7E90201 		ldrd	r0, [r7, #8]
 2702 0054 4FF00002 		mov	r2, #0
 2703 0058 4FF00003 		mov	r3, #0
 2704 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2705 0060 0346     		mov	r3, r0
 2706 0062 002B     		cmp	r3, #0
 2707 0064 10D0     		beq	.L141
 669:.\main.c      ****     {
 670:.\main.c      ****        // char mes[16];
 671:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 672:.\main.c      ****         //UART_PutString(mes);
 673:.\main.c      ****         setLeftDir(!direction);
 2708              		.loc 1 673 0
 2709 0066 204B     		ldr	r3, .L142+8
 2710 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2711 006a 002B     		cmp	r3, #0
 2712 006c 0CBF     		ite	eq
 2713 006e 0123     		moveq	r3, #1
 2714 0070 0023     		movne	r3, #0
 2715 0072 DBB2     		uxtb	r3, r3
 2716 0074 1846     		mov	r0, r3
 2717 0076 FFF7FEFF 		bl	setLeftDir
 674:.\main.c      ****         left = -left;
 2718              		.loc 1 674 0
 2719 007a BB68     		ldr	r3, [r7, #8]
 2720 007c BB60     		str	r3, [r7, #8]
 2721 007e FB68     		ldr	r3, [r7, #12]
 2722 0080 83F00043 		eor	r3, r3, #-2147483648
 2723 0084 FB60     		str	r3, [r7, #12]
 2724 0086 04E0     		b	.L137
 2725              	.L141:
 675:.\main.c      ****     }
 676:.\main.c      ****     else setLeftDir(direction);
 2726              		.loc 1 676 0
 2727 0088 174B     		ldr	r3, .L142+8
 2728 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2729 008c 1846     		mov	r0, r3
 2730 008e FFF7FEFF 		bl	setLeftDir
 2731              	.L137:
 677:.\main.c      ****     
 678:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2732              		.loc 1 678 0
 2733 0092 D7E90201 		ldrd	r0, [r7, #8]
 2734 0096 12A3     		adr	r3, .L142
 2735 0098 D3E90023 		ldrd	r2, [r3]
 2736 009c FFF7FEFF 		bl	__aeabi_ddiv
 2737 00a0 0246     		mov	r2, r0
 2738 00a2 0B46     		mov	r3, r1
 2739 00a4 1046     		mov	r0, r2
 2740 00a6 1946     		mov	r1, r3
 2741 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2742 00ac 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 62


 2743 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 679:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2744              		.loc 1 679 0
 2745 00b0 D7E90001 		ldrd	r0, [r7]
 2746 00b4 0AA3     		adr	r3, .L142
 2747 00b6 D3E90023 		ldrd	r2, [r3]
 2748 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2749 00be 0246     		mov	r2, r0
 2750 00c0 0B46     		mov	r3, r1
 2751 00c2 1046     		mov	r0, r2
 2752 00c4 1946     		mov	r1, r3
 2753 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2754 00ca 0346     		mov	r3, r0
 2755 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 680:.\main.c      ****     
 681:.\main.c      ****     leftSpeedLimit = countsRight;
 2756              		.loc 1 681 0
 2757 00ce 074A     		ldr	r2, .L142+12
 2758 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2759 00d2 1380     		strh	r3, [r2]	@ movhi
 682:.\main.c      ****     rightSpeedLimit = countsLeft;
 2760              		.loc 1 682 0
 2761 00d4 064A     		ldr	r2, .L142+16
 2762 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2763 00d8 1380     		strh	r3, [r2]	@ movhi
 683:.\main.c      **** }
 2764              		.loc 1 683 0
 2765 00da 1837     		adds	r7, r7, #24
 2766              		.cfi_def_cfa_offset 8
 2767 00dc BD46     		mov	sp, r7
 2768              		.cfi_def_cfa_register 13
 2769              		@ sp needed
 2770 00de 80BD     		pop	{r7, pc}
 2771              	.L143:
 2772              		.align	3
 2773              	.L142:
 2774 00e0 969526A5 		.word	-1524197994
 2775 00e4 A0DBEF3F 		.word	1072683936
 2776 00e8 00000000 		.word	direction
 2777 00ec 00000000 		.word	leftSpeedLimit
 2778 00f0 00000000 		.word	rightSpeedLimit
 2779              		.cfi_endproc
 2780              	.LFE76:
 2781              		.size	setSpeed, .-setSpeed
 2782 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2783              		.align	2
 2784              		.global	brakeLeft
 2785              		.thumb
 2786              		.thumb_func
 2787              		.type	brakeLeft, %function
 2788              	brakeLeft:
 2789              	.LFB77:
 684:.\main.c      **** 
 685:.\main.c      **** void brakeLeft()
 686:.\main.c      **** {
 2790              		.loc 1 686 0
 2791              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 63


 2792              		@ args = 0, pretend = 0, frame = 0
 2793              		@ frame_needed = 1, uses_anonymous_args = 0
 2794 0000 80B5     		push	{r7, lr}
 2795              		.cfi_def_cfa_offset 8
 2796              		.cfi_offset 7, -8
 2797              		.cfi_offset 14, -4
 2798 0002 00AF     		add	r7, sp, #0
 2799              		.cfi_def_cfa_register 7
 687:.\main.c      ****     PWM_1_WriteCompare(0);
 2800              		.loc 1 687 0
 2801 0004 0020     		movs	r0, #0
 2802 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 688:.\main.c      ****     left_duty_cycle = 0;
 2803              		.loc 1 688 0
 2804 000a 024B     		ldr	r3, .L145
 2805 000c 0022     		movs	r2, #0
 2806 000e 1A80     		strh	r2, [r3]	@ movhi
 689:.\main.c      **** }
 2807              		.loc 1 689 0
 2808 0010 80BD     		pop	{r7, pc}
 2809              	.L146:
 2810 0012 00BF     		.align	2
 2811              	.L145:
 2812 0014 00000000 		.word	left_duty_cycle
 2813              		.cfi_endproc
 2814              	.LFE77:
 2815              		.size	brakeLeft, .-brakeLeft
 2816              		.section	.text.brakeRight,"ax",%progbits
 2817              		.align	2
 2818              		.global	brakeRight
 2819              		.thumb
 2820              		.thumb_func
 2821              		.type	brakeRight, %function
 2822              	brakeRight:
 2823              	.LFB78:
 690:.\main.c      **** 
 691:.\main.c      **** void brakeRight()
 692:.\main.c      **** {
 2824              		.loc 1 692 0
 2825              		.cfi_startproc
 2826              		@ args = 0, pretend = 0, frame = 0
 2827              		@ frame_needed = 1, uses_anonymous_args = 0
 2828 0000 80B5     		push	{r7, lr}
 2829              		.cfi_def_cfa_offset 8
 2830              		.cfi_offset 7, -8
 2831              		.cfi_offset 14, -4
 2832 0002 00AF     		add	r7, sp, #0
 2833              		.cfi_def_cfa_register 7
 693:.\main.c      ****      PWM_2_WriteCompare(0);
 2834              		.loc 1 693 0
 2835 0004 0020     		movs	r0, #0
 2836 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 694:.\main.c      ****      right_duty_cycle = 0;
 2837              		.loc 1 694 0
 2838 000a 024B     		ldr	r3, .L148
 2839 000c 0022     		movs	r2, #0
 2840 000e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 64


 695:.\main.c      **** }
 2841              		.loc 1 695 0
 2842 0010 80BD     		pop	{r7, pc}
 2843              	.L149:
 2844 0012 00BF     		.align	2
 2845              	.L148:
 2846 0014 00000000 		.word	right_duty_cycle
 2847              		.cfi_endproc
 2848              	.LFE78:
 2849              		.size	brakeRight, .-brakeRight
 2850              		.section	.text.brakeMotor,"ax",%progbits
 2851              		.align	2
 2852              		.global	brakeMotor
 2853              		.thumb
 2854              		.thumb_func
 2855              		.type	brakeMotor, %function
 2856              	brakeMotor:
 2857              	.LFB79:
 696:.\main.c      **** 
 697:.\main.c      **** void brakeMotor(){
 2858              		.loc 1 697 0
 2859              		.cfi_startproc
 2860              		@ args = 0, pretend = 0, frame = 0
 2861              		@ frame_needed = 1, uses_anonymous_args = 0
 2862 0000 80B5     		push	{r7, lr}
 2863              		.cfi_def_cfa_offset 8
 2864              		.cfi_offset 7, -8
 2865              		.cfi_offset 14, -4
 2866 0002 00AF     		add	r7, sp, #0
 2867              		.cfi_def_cfa_register 7
 698:.\main.c      ****     setSpeed(0, 0);
 2868              		.loc 1 698 0
 2869 0004 4FF00000 		mov	r0, #0
 2870 0008 4FF00001 		mov	r1, #0
 2871 000c 4FF00002 		mov	r2, #0
 2872 0010 4FF00003 		mov	r3, #0
 2873 0014 FFF7FEFF 		bl	setSpeed
 699:.\main.c      ****     brakeLeft();
 2874              		.loc 1 699 0
 2875 0018 FFF7FEFF 		bl	brakeLeft
 700:.\main.c      ****     brakeRight();
 2876              		.loc 1 700 0
 2877 001c FFF7FEFF 		bl	brakeRight
 701:.\main.c      **** }
 2878              		.loc 1 701 0
 2879 0020 80BD     		pop	{r7, pc}
 2880              		.cfi_endproc
 2881              	.LFE79:
 2882              		.size	brakeMotor, .-brakeMotor
 2883 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2884              		.align	2
 2885              		.global	driveForwards
 2886              		.thumb
 2887              		.thumb_func
 2888              		.type	driveForwards, %function
 2889              	driveForwards:
 2890              	.LFB80:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 65


 702:.\main.c      **** 
 703:.\main.c      **** void driveForwards()
 704:.\main.c      **** {
 2891              		.loc 1 704 0
 2892              		.cfi_startproc
 2893              		@ args = 0, pretend = 0, frame = 0
 2894              		@ frame_needed = 1, uses_anonymous_args = 0
 2895 0000 80B5     		push	{r7, lr}
 2896              		.cfi_def_cfa_offset 8
 2897              		.cfi_offset 7, -8
 2898              		.cfi_offset 14, -4
 2899 0002 00AF     		add	r7, sp, #0
 2900              		.cfi_def_cfa_register 7
 705:.\main.c      ****     setSpeed(speed, speed);
 2901              		.loc 1 705 0
 2902 0004 044B     		ldr	r3, .L152
 2903 0006 D3E90001 		ldrd	r0, [r3]
 2904 000a 034B     		ldr	r3, .L152
 2905 000c D3E90023 		ldrd	r2, [r3]
 2906 0010 FFF7FEFF 		bl	setSpeed
 706:.\main.c      **** }
 2907              		.loc 1 706 0
 2908 0014 80BD     		pop	{r7, pc}
 2909              	.L153:
 2910 0016 00BF     		.align	2
 2911              	.L152:
 2912 0018 00000000 		.word	speed
 2913              		.cfi_endproc
 2914              	.LFE80:
 2915              		.size	driveForwards, .-driveForwards
 2916              		.global	__aeabi_dmul
 2917              		.section	.text.turnRight,"ax",%progbits
 2918              		.align	2
 2919              		.global	turnRight
 2920              		.thumb
 2921              		.thumb_func
 2922              		.type	turnRight, %function
 2923              	turnRight:
 2924              	.LFB81:
 707:.\main.c      **** 
 708:.\main.c      **** void turnRight()
 709:.\main.c      **** {
 2925              		.loc 1 709 0
 2926              		.cfi_startproc
 2927              		@ args = 0, pretend = 0, frame = 0
 2928              		@ frame_needed = 1, uses_anonymous_args = 0
 2929 0000 80B5     		push	{r7, lr}
 2930              		.cfi_def_cfa_offset 8
 2931              		.cfi_offset 7, -8
 2932              		.cfi_offset 14, -4
 2933 0002 00AF     		add	r7, sp, #0
 2934              		.cfi_def_cfa_register 7
 710:.\main.c      ****     setSpeed(0,speed * 1.5);
 2935              		.loc 1 710 0
 2936 0004 094B     		ldr	r3, .L155
 2937 0006 D3E90023 		ldrd	r2, [r3]
 2938 000a 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 66


 2939 000c 1946     		mov	r1, r3
 2940 000e 4FF00002 		mov	r2, #0
 2941 0012 074B     		ldr	r3, .L155+4
 2942 0014 FFF7FEFF 		bl	__aeabi_dmul
 2943 0018 0246     		mov	r2, r0
 2944 001a 0B46     		mov	r3, r1
 2945 001c 4FF00000 		mov	r0, #0
 2946 0020 4FF00001 		mov	r1, #0
 2947 0024 FFF7FEFF 		bl	setSpeed
 711:.\main.c      **** }
 2948              		.loc 1 711 0
 2949 0028 80BD     		pop	{r7, pc}
 2950              	.L156:
 2951 002a 00BF     		.align	2
 2952              	.L155:
 2953 002c 00000000 		.word	speed
 2954 0030 0000F83F 		.word	1073217536
 2955              		.cfi_endproc
 2956              	.LFE81:
 2957              		.size	turnRight, .-turnRight
 2958              		.section	.text.turnLeft,"ax",%progbits
 2959              		.align	2
 2960              		.global	turnLeft
 2961              		.thumb
 2962              		.thumb_func
 2963              		.type	turnLeft, %function
 2964              	turnLeft:
 2965              	.LFB82:
 712:.\main.c      **** 
 713:.\main.c      **** void turnLeft()
 714:.\main.c      **** {
 2966              		.loc 1 714 0
 2967              		.cfi_startproc
 2968              		@ args = 0, pretend = 0, frame = 0
 2969              		@ frame_needed = 1, uses_anonymous_args = 0
 2970 0000 80B5     		push	{r7, lr}
 2971              		.cfi_def_cfa_offset 8
 2972              		.cfi_offset 7, -8
 2973              		.cfi_offset 14, -4
 2974 0002 00AF     		add	r7, sp, #0
 2975              		.cfi_def_cfa_register 7
 715:.\main.c      ****     setSpeed(speed * 1.5,0);
 2976              		.loc 1 715 0
 2977 0004 0A4B     		ldr	r3, .L158
 2978 0006 D3E90023 		ldrd	r2, [r3]
 2979 000a 1046     		mov	r0, r2
 2980 000c 1946     		mov	r1, r3
 2981 000e 4FF00002 		mov	r2, #0
 2982 0012 084B     		ldr	r3, .L158+4
 2983 0014 FFF7FEFF 		bl	__aeabi_dmul
 2984 0018 0246     		mov	r2, r0
 2985 001a 0B46     		mov	r3, r1
 2986 001c 1046     		mov	r0, r2
 2987 001e 1946     		mov	r1, r3
 2988 0020 4FF00002 		mov	r2, #0
 2989 0024 4FF00003 		mov	r3, #0
 2990 0028 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 67


 716:.\main.c      **** }
 2991              		.loc 1 716 0
 2992 002c 80BD     		pop	{r7, pc}
 2993              	.L159:
 2994 002e 00BF     		.align	2
 2995              	.L158:
 2996 0030 00000000 		.word	speed
 2997 0034 0000F83F 		.word	1073217536
 2998              		.cfi_endproc
 2999              	.LFE82:
 3000              		.size	turnLeft, .-turnLeft
 3001              		.section	.text.turnU,"ax",%progbits
 3002              		.align	2
 3003              		.global	turnU
 3004              		.thumb
 3005              		.thumb_func
 3006              		.type	turnU, %function
 3007              	turnU:
 3008              	.LFB83:
 717:.\main.c      **** 
 718:.\main.c      **** void turnU()
 719:.\main.c      **** {
 3009              		.loc 1 719 0
 3010              		.cfi_startproc
 3011              		@ args = 0, pretend = 0, frame = 0
 3012              		@ frame_needed = 1, uses_anonymous_args = 0
 3013 0000 B0B5     		push	{r4, r5, r7, lr}
 3014              		.cfi_def_cfa_offset 16
 3015              		.cfi_offset 4, -16
 3016              		.cfi_offset 5, -12
 3017              		.cfi_offset 7, -8
 3018              		.cfi_offset 14, -4
 3019 0002 00AF     		add	r7, sp, #0
 3020              		.cfi_def_cfa_register 7
 720:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3021              		.loc 1 720 0
 3022 0004 0F4B     		ldr	r3, .L161
 3023 0006 D3E90023 		ldrd	r2, [r3]
 3024 000a 1046     		mov	r0, r2
 3025 000c 83F00041 		eor	r1, r3, #-2147483648
 3026 0010 4FF00002 		mov	r2, #0
 3027 0014 0C4B     		ldr	r3, .L161+4
 3028 0016 FFF7FEFF 		bl	__aeabi_dmul
 3029 001a 0246     		mov	r2, r0
 3030 001c 0B46     		mov	r3, r1
 3031 001e 1446     		mov	r4, r2
 3032 0020 1D46     		mov	r5, r3
 3033 0022 084B     		ldr	r3, .L161
 3034 0024 D3E90023 		ldrd	r2, [r3]
 3035 0028 1046     		mov	r0, r2
 3036 002a 1946     		mov	r1, r3
 3037 002c 4FF00002 		mov	r2, #0
 3038 0030 054B     		ldr	r3, .L161+4
 3039 0032 FFF7FEFF 		bl	__aeabi_dmul
 3040 0036 0246     		mov	r2, r0
 3041 0038 0B46     		mov	r3, r1
 3042 003a 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 68


 3043 003c 2946     		mov	r1, r5
 3044 003e FFF7FEFF 		bl	setSpeed
 721:.\main.c      **** }
 3045              		.loc 1 721 0
 3046 0042 B0BD     		pop	{r4, r5, r7, pc}
 3047              	.L162:
 3048              		.align	2
 3049              	.L161:
 3050 0044 00000000 		.word	speed
 3051 0048 0000F83F 		.word	1073217536
 3052              		.cfi_endproc
 3053              	.LFE83:
 3054              		.size	turnU, .-turnU
 3055              		.section	.text.initTurnLeft,"ax",%progbits
 3056              		.align	2
 3057              		.global	initTurnLeft
 3058              		.thumb
 3059              		.thumb_func
 3060              		.type	initTurnLeft, %function
 3061              	initTurnLeft:
 3062              	.LFB84:
 722:.\main.c      **** 
 723:.\main.c      **** void initTurnLeft(){
 3063              		.loc 1 723 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 1, uses_anonymous_args = 0
 3067 0000 80B5     		push	{r7, lr}
 3068              		.cfi_def_cfa_offset 8
 3069              		.cfi_offset 7, -8
 3070              		.cfi_offset 14, -4
 3071 0002 00AF     		add	r7, sp, #0
 3072              		.cfi_def_cfa_register 7
 724:.\main.c      ****     Timer_2_Stop();
 3073              		.loc 1 724 0
 3074 0004 FFF7FEFF 		bl	Timer_2_Stop
 725:.\main.c      ****     prev_movement_state = movement_state;
 3075              		.loc 1 725 0
 3076 0008 084B     		ldr	r3, .L164
 3077 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3078 000c 084B     		ldr	r3, .L164+4
 3079 000e 1A70     		strb	r2, [r3]
 726:.\main.c      ****     movement_state = LTURN;
 3080              		.loc 1 726 0
 3081 0010 064B     		ldr	r3, .L164
 3082 0012 0122     		movs	r2, #1
 3083 0014 1A70     		strb	r2, [r3]
 727:.\main.c      ****     brakeLeft();
 3084              		.loc 1 727 0
 3085 0016 FFF7FEFF 		bl	brakeLeft
 728:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3086              		.loc 1 728 0
 3087 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3088 001e 0346     		mov	r3, r0
 3089 0020 1A46     		mov	r2, r3
 3090 0022 044B     		ldr	r3, .L164+8
 3091 0024 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 69


 729:.\main.c      ****     Timer_2_Start();
 3092              		.loc 1 729 0
 3093 0026 FFF7FEFF 		bl	Timer_2_Start
 730:.\main.c      **** }
 3094              		.loc 1 730 0
 3095 002a 80BD     		pop	{r7, pc}
 3096              	.L165:
 3097              		.align	2
 3098              	.L164:
 3099 002c 00000000 		.word	movement_state
 3100 0030 00000000 		.word	prev_movement_state
 3101 0034 00000000 		.word	start_turn_count
 3102              		.cfi_endproc
 3103              	.LFE84:
 3104              		.size	initTurnLeft, .-initTurnLeft
 3105              		.section	.text.initTurnRight,"ax",%progbits
 3106              		.align	2
 3107              		.global	initTurnRight
 3108              		.thumb
 3109              		.thumb_func
 3110              		.type	initTurnRight, %function
 3111              	initTurnRight:
 3112              	.LFB85:
 731:.\main.c      **** 
 732:.\main.c      **** void initTurnRight(){
 3113              		.loc 1 732 0
 3114              		.cfi_startproc
 3115              		@ args = 0, pretend = 0, frame = 0
 3116              		@ frame_needed = 1, uses_anonymous_args = 0
 3117 0000 80B5     		push	{r7, lr}
 3118              		.cfi_def_cfa_offset 8
 3119              		.cfi_offset 7, -8
 3120              		.cfi_offset 14, -4
 3121 0002 00AF     		add	r7, sp, #0
 3122              		.cfi_def_cfa_register 7
 733:.\main.c      ****     Timer_2_Stop();
 3123              		.loc 1 733 0
 3124 0004 FFF7FEFF 		bl	Timer_2_Stop
 734:.\main.c      ****     prev_movement_state = movement_state;
 3125              		.loc 1 734 0
 3126 0008 084B     		ldr	r3, .L167
 3127 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3128 000c 084B     		ldr	r3, .L167+4
 3129 000e 1A70     		strb	r2, [r3]
 735:.\main.c      ****     movement_state = RTURN;
 3130              		.loc 1 735 0
 3131 0010 064B     		ldr	r3, .L167
 3132 0012 0222     		movs	r2, #2
 3133 0014 1A70     		strb	r2, [r3]
 736:.\main.c      ****     brakeRight();
 3134              		.loc 1 736 0
 3135 0016 FFF7FEFF 		bl	brakeRight
 737:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3136              		.loc 1 737 0
 3137 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3138 001e 0346     		mov	r3, r0
 3139 0020 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 70


 3140 0022 044B     		ldr	r3, .L167+8
 3141 0024 1A80     		strh	r2, [r3]	@ movhi
 738:.\main.c      ****     Timer_2_Start();
 3142              		.loc 1 738 0
 3143 0026 FFF7FEFF 		bl	Timer_2_Start
 739:.\main.c      **** }
 3144              		.loc 1 739 0
 3145 002a 80BD     		pop	{r7, pc}
 3146              	.L168:
 3147              		.align	2
 3148              	.L167:
 3149 002c 00000000 		.word	movement_state
 3150 0030 00000000 		.word	prev_movement_state
 3151 0034 00000000 		.word	start_turn_count
 3152              		.cfi_endproc
 3153              	.LFE85:
 3154              		.size	initTurnRight, .-initTurnRight
 3155              		.section	.text.initTurnU,"ax",%progbits
 3156              		.align	2
 3157              		.global	initTurnU
 3158              		.thumb
 3159              		.thumb_func
 3160              		.type	initTurnU, %function
 3161              	initTurnU:
 3162              	.LFB86:
 740:.\main.c      **** 
 741:.\main.c      **** void initTurnU(){
 3163              		.loc 1 741 0
 3164              		.cfi_startproc
 3165              		@ args = 0, pretend = 0, frame = 0
 3166              		@ frame_needed = 1, uses_anonymous_args = 0
 3167 0000 80B5     		push	{r7, lr}
 3168              		.cfi_def_cfa_offset 8
 3169              		.cfi_offset 7, -8
 3170              		.cfi_offset 14, -4
 3171 0002 00AF     		add	r7, sp, #0
 3172              		.cfi_def_cfa_register 7
 742:.\main.c      ****     Timer_2_Stop();
 3173              		.loc 1 742 0
 3174 0004 FFF7FEFF 		bl	Timer_2_Stop
 743:.\main.c      ****     prev_movement_state = movement_state;
 3175              		.loc 1 743 0
 3176 0008 084B     		ldr	r3, .L170
 3177 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3178 000c 084B     		ldr	r3, .L170+4
 3179 000e 1A70     		strb	r2, [r3]
 744:.\main.c      ****     movement_state = UTURN;
 3180              		.loc 1 744 0
 3181 0010 064B     		ldr	r3, .L170
 3182 0012 0722     		movs	r2, #7
 3183 0014 1A70     		strb	r2, [r3]
 745:.\main.c      ****     brakeMotor();
 3184              		.loc 1 745 0
 3185 0016 FFF7FEFF 		bl	brakeMotor
 746:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3186              		.loc 1 746 0
 3187 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 71


 3188 001e 0346     		mov	r3, r0
 3189 0020 1A46     		mov	r2, r3
 3190 0022 044B     		ldr	r3, .L170+8
 3191 0024 1A80     		strh	r2, [r3]	@ movhi
 747:.\main.c      ****     Timer_2_Start();
 3192              		.loc 1 747 0
 3193 0026 FFF7FEFF 		bl	Timer_2_Start
 748:.\main.c      **** }
 3194              		.loc 1 748 0
 3195 002a 80BD     		pop	{r7, pc}
 3196              	.L171:
 3197              		.align	2
 3198              	.L170:
 3199 002c 00000000 		.word	movement_state
 3200 0030 00000000 		.word	prev_movement_state
 3201 0034 00000000 		.word	start_turn_count
 3202              		.cfi_endproc
 3203              	.LFE86:
 3204              		.size	initTurnU, .-initTurnU
 3205              		.section	.text.initForward,"ax",%progbits
 3206              		.align	2
 3207              		.global	initForward
 3208              		.thumb
 3209              		.thumb_func
 3210              		.type	initForward, %function
 3211              	initForward:
 3212              	.LFB87:
 749:.\main.c      **** 
 750:.\main.c      **** void initForward(){
 3213              		.loc 1 750 0
 3214              		.cfi_startproc
 3215              		@ args = 0, pretend = 0, frame = 0
 3216              		@ frame_needed = 1, uses_anonymous_args = 0
 3217 0000 80B5     		push	{r7, lr}
 3218              		.cfi_def_cfa_offset 8
 3219              		.cfi_offset 7, -8
 3220              		.cfi_offset 14, -4
 3221 0002 00AF     		add	r7, sp, #0
 3222              		.cfi_def_cfa_register 7
 751:.\main.c      ****     brakeMotor();
 3223              		.loc 1 751 0
 3224 0004 FFF7FEFF 		bl	brakeMotor
 752:.\main.c      ****     movement_state = DRIVE;
 3225              		.loc 1 752 0
 3226 0008 014B     		ldr	r3, .L173
 3227 000a 0022     		movs	r2, #0
 3228 000c 1A70     		strb	r2, [r3]
 753:.\main.c      **** }
 3229              		.loc 1 753 0
 3230 000e 80BD     		pop	{r7, pc}
 3231              	.L174:
 3232              		.align	2
 3233              	.L173:
 3234 0010 00000000 		.word	movement_state
 3235              		.cfi_endproc
 3236              	.LFE87:
 3237              		.size	initForward, .-initForward
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 72


 3238              		.section	.text.initBrake,"ax",%progbits
 3239              		.align	2
 3240              		.global	initBrake
 3241              		.thumb
 3242              		.thumb_func
 3243              		.type	initBrake, %function
 3244              	initBrake:
 3245              	.LFB88:
 754:.\main.c      **** 
 755:.\main.c      **** void initBrake(){
 3246              		.loc 1 755 0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 0
 3249              		@ frame_needed = 1, uses_anonymous_args = 0
 3250              		@ link register save eliminated.
 3251 0000 80B4     		push	{r7}
 3252              		.cfi_def_cfa_offset 4
 3253              		.cfi_offset 7, -4
 3254 0002 00AF     		add	r7, sp, #0
 3255              		.cfi_def_cfa_register 7
 756:.\main.c      ****     movement_state = STOPPED;
 3256              		.loc 1 756 0
 3257 0004 034B     		ldr	r3, .L176
 3258 0006 0322     		movs	r2, #3
 3259 0008 1A70     		strb	r2, [r3]
 757:.\main.c      **** }
 3260              		.loc 1 757 0
 3261 000a BD46     		mov	sp, r7
 3262              		.cfi_def_cfa_register 13
 3263              		@ sp needed
 3264 000c 5DF8047B 		ldr	r7, [sp], #4
 3265              		.cfi_restore 7
 3266              		.cfi_def_cfa_offset 0
 3267 0010 7047     		bx	lr
 3268              	.L177:
 3269 0012 00BF     		.align	2
 3270              	.L176:
 3271 0014 00000000 		.word	movement_state
 3272              		.cfi_endproc
 3273              	.LFE88:
 3274              		.size	initBrake, .-initBrake
 3275              		.section	.text.initTrack,"ax",%progbits
 3276              		.align	2
 3277              		.global	initTrack
 3278              		.thumb
 3279              		.thumb_func
 3280              		.type	initTrack, %function
 3281              	initTrack:
 3282              	.LFB89:
 758:.\main.c      **** 
 759:.\main.c      **** void initTrack()
 760:.\main.c      **** {
 3283              		.loc 1 760 0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 0
 3286              		@ frame_needed = 1, uses_anonymous_args = 0
 3287              		@ link register save eliminated.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 73


 3288 0000 80B4     		push	{r7}
 3289              		.cfi_def_cfa_offset 4
 3290              		.cfi_offset 7, -4
 3291 0002 00AF     		add	r7, sp, #0
 3292              		.cfi_def_cfa_register 7
 761:.\main.c      ****     movement_state = TRACKING;
 3293              		.loc 1 761 0
 3294 0004 034B     		ldr	r3, .L179
 3295 0006 0422     		movs	r2, #4
 3296 0008 1A70     		strb	r2, [r3]
 762:.\main.c      **** }
 3297              		.loc 1 762 0
 3298 000a BD46     		mov	sp, r7
 3299              		.cfi_def_cfa_register 13
 3300              		@ sp needed
 3301 000c 5DF8047B 		ldr	r7, [sp], #4
 3302              		.cfi_restore 7
 3303              		.cfi_def_cfa_offset 0
 3304 0010 7047     		bx	lr
 3305              	.L180:
 3306 0012 00BF     		.align	2
 3307              	.L179:
 3308 0014 00000000 		.word	movement_state
 3309              		.cfi_endproc
 3310              	.LFE89:
 3311              		.size	initTrack, .-initTrack
 3312              		.section	.text.initTrackU,"ax",%progbits
 3313              		.align	2
 3314              		.global	initTrackU
 3315              		.thumb
 3316              		.thumb_func
 3317              		.type	initTrackU, %function
 3318              	initTrackU:
 3319              	.LFB90:
 763:.\main.c      **** 
 764:.\main.c      **** void initTrackU(){
 3320              		.loc 1 764 0
 3321              		.cfi_startproc
 3322              		@ args = 0, pretend = 0, frame = 0
 3323              		@ frame_needed = 1, uses_anonymous_args = 0
 3324              		@ link register save eliminated.
 3325 0000 80B4     		push	{r7}
 3326              		.cfi_def_cfa_offset 4
 3327              		.cfi_offset 7, -4
 3328 0002 00AF     		add	r7, sp, #0
 3329              		.cfi_def_cfa_register 7
 765:.\main.c      ****     movement_state = TRACKING_U;
 3330              		.loc 1 765 0
 3331 0004 034B     		ldr	r3, .L182
 3332 0006 0522     		movs	r2, #5
 3333 0008 1A70     		strb	r2, [r3]
 766:.\main.c      **** }
 3334              		.loc 1 766 0
 3335 000a BD46     		mov	sp, r7
 3336              		.cfi_def_cfa_register 13
 3337              		@ sp needed
 3338 000c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 74


 3339              		.cfi_restore 7
 3340              		.cfi_def_cfa_offset 0
 3341 0010 7047     		bx	lr
 3342              	.L183:
 3343 0012 00BF     		.align	2
 3344              	.L182:
 3345 0014 00000000 		.word	movement_state
 3346              		.cfi_endproc
 3347              	.LFE90:
 3348              		.size	initTrackU, .-initTrackU
 3349              		.section	.text.inittrackLineZ,"ax",%progbits
 3350              		.align	2
 3351              		.global	inittrackLineZ
 3352              		.thumb
 3353              		.thumb_func
 3354              		.type	inittrackLineZ, %function
 3355              	inittrackLineZ:
 3356              	.LFB91:
 767:.\main.c      **** 
 768:.\main.c      **** void inittrackLineZ(){
 3357              		.loc 1 768 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 1, uses_anonymous_args = 0
 3361              		@ link register save eliminated.
 3362 0000 80B4     		push	{r7}
 3363              		.cfi_def_cfa_offset 4
 3364              		.cfi_offset 7, -4
 3365 0002 00AF     		add	r7, sp, #0
 3366              		.cfi_def_cfa_register 7
 769:.\main.c      ****     movement_state = TRACKING_SOFT;
 3367              		.loc 1 769 0
 3368 0004 034B     		ldr	r3, .L185
 3369 0006 0622     		movs	r2, #6
 3370 0008 1A70     		strb	r2, [r3]
 770:.\main.c      **** }
 3371              		.loc 1 770 0
 3372 000a BD46     		mov	sp, r7
 3373              		.cfi_def_cfa_register 13
 3374              		@ sp needed
 3375 000c 5DF8047B 		ldr	r7, [sp], #4
 3376              		.cfi_restore 7
 3377              		.cfi_def_cfa_offset 0
 3378 0010 7047     		bx	lr
 3379              	.L186:
 3380 0012 00BF     		.align	2
 3381              	.L185:
 3382 0014 00000000 		.word	movement_state
 3383              		.cfi_endproc
 3384              	.LFE91:
 3385              		.size	inittrackLineZ, .-inittrackLineZ
 3386              		.section	.text.rxInt,"ax",%progbits
 3387              		.align	2
 3388              		.global	rxInt
 3389              		.thumb
 3390              		.thumb_func
 3391              		.type	rxInt, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 75


 3392              	rxInt:
 3393              	.LFB92:
 771:.\main.c      **** 
 772:.\main.c      **** 
 773:.\main.c      **** 
 774:.\main.c      **** //Binary RF Data
 775:.\main.c      **** CY_ISR(rxInt){
 3394              		.loc 1 775 0
 3395              		.cfi_startproc
 3396              		@ args = 0, pretend = 0, frame = 8
 3397              		@ frame_needed = 1, uses_anonymous_args = 0
 3398 0000 B0B5     		push	{r4, r5, r7, lr}
 3399              		.cfi_def_cfa_offset 16
 3400              		.cfi_offset 4, -16
 3401              		.cfi_offset 5, -12
 3402              		.cfi_offset 7, -8
 3403              		.cfi_offset 14, -4
 3404 0002 82B0     		sub	sp, sp, #8
 3405              		.cfi_def_cfa_offset 24
 3406 0004 00AF     		add	r7, sp, #0
 3407              		.cfi_def_cfa_register 7
 776:.\main.c      ****     char rf_char = UART_GetChar();
 3408              		.loc 1 776 0
 3409 0006 FFF7FEFF 		bl	UART_GetChar
 3410 000a 0346     		mov	r3, r0
 3411 000c FB71     		strb	r3, [r7, #7]
 777:.\main.c      ****     if(rf_char == SOP){
 3412              		.loc 1 777 0
 3413 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3414 0010 AA2B     		cmp	r3, #170
 3415 0012 2BD1     		bne	.L188
 778:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 779:.\main.c      ****             if(byteCount == 34)
 3416              		.loc 1 779 0
 3417 0014 224B     		ldr	r3, .L192
 3418 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3419 0018 222B     		cmp	r3, #34
 3420 001a 20D1     		bne	.L189
 780:.\main.c      ****             {
 781:.\main.c      ****                 system_state = buffer_state;
 3421              		.loc 1 781 0
 3422 001c 214B     		ldr	r3, .L192+4
 3423 001e 224A     		ldr	r2, .L192+8
 3424 0020 1568     		ldr	r5, [r2]	@ unaligned
 3425 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3426 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3427 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3428 0028 1D60     		str	r5, [r3]	@ unaligned
 3429 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3430 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3431 002e D960     		str	r1, [r3, #12]	@ unaligned
 3432 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3433 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3434 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3435 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3436 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3437 003a 5C61     		str	r4, [r3, #20]	@ unaligned
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 76


 3438 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3439 003e D961     		str	r1, [r3, #28]	@ unaligned
 782:.\main.c      ****                 if(initial_pos_valid == 0)
 3440              		.loc 1 782 0
 3441 0040 1A4B     		ldr	r3, .L192+12
 3442 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3443 0044 002B     		cmp	r3, #0
 3444 0046 0AD1     		bne	.L189
 783:.\main.c      ****                 {
 784:.\main.c      ****                     LED_Write(~LED_Read());
 3445              		.loc 1 784 0
 3446 0048 FFF7FEFF 		bl	LED_Read
 3447 004c 0346     		mov	r3, r0
 3448 004e DB43     		mvns	r3, r3
 3449 0050 DBB2     		uxtb	r3, r3
 3450 0052 1846     		mov	r0, r3
 3451 0054 FFF7FEFF 		bl	LED_Write
 785:.\main.c      ****                     initial_pos_valid = 1;
 3452              		.loc 1 785 0
 3453 0058 144B     		ldr	r3, .L192+12
 3454 005a 0122     		movs	r2, #1
 3455 005c 1A70     		strb	r2, [r3]
 3456              	.L189:
 786:.\main.c      ****                 }
 787:.\main.c      ****             }
 788:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3457              		.loc 1 788 0
 3458 005e 104B     		ldr	r3, .L192
 3459 0060 0222     		movs	r2, #2
 3460 0062 1A70     		strb	r2, [r3]
 789:.\main.c      ****             flag_rx = 0;
 3461              		.loc 1 789 0
 3462 0064 124B     		ldr	r3, .L192+16
 3463 0066 0022     		movs	r2, #0
 3464 0068 1A70     		strb	r2, [r3]
 3465 006a 16E0     		b	.L187
 3466              	.L188:
 790:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 791:.\main.c      ****         }
 792:.\main.c      ****         else
 793:.\main.c      ****         {
 794:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3467              		.loc 1 794 0
 3468 006c 0C4B     		ldr	r3, .L192
 3469 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3470 0070 03F00103 		and	r3, r3, #1
 3471 0074 0F49     		ldr	r1, .L192+20
 3472 0076 FA79     		ldrb	r2, [r7, #7]
 3473 0078 CA54     		strb	r2, [r1, r3]
 795:.\main.c      ****            
 796:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3474              		.loc 1 796 0
 3475 007a 094B     		ldr	r3, .L192
 3476 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3477 007e 03F00103 		and	r3, r3, #1
 3478 0082 DBB2     		uxtb	r3, r3
 3479 0084 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 77


 3480 0086 02D0     		beq	.L191
 797:.\main.c      ****             {
 798:.\main.c      ****                 flag_rx = 1;
 3481              		.loc 1 798 0
 3482 0088 094B     		ldr	r3, .L192+16
 3483 008a 0122     		movs	r2, #1
 3484 008c 1A70     		strb	r2, [r3]
 3485              	.L191:
 799:.\main.c      ****             }
 800:.\main.c      ****             byteCount = (byteCount + 1);
 3486              		.loc 1 800 0
 3487 008e 044B     		ldr	r3, .L192
 3488 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3489 0092 0133     		adds	r3, r3, #1
 3490 0094 DAB2     		uxtb	r2, r3
 3491 0096 024B     		ldr	r3, .L192
 3492 0098 1A70     		strb	r2, [r3]
 3493              	.L187:
 801:.\main.c      ****         }
 802:.\main.c      **** }
 3494              		.loc 1 802 0
 3495 009a 0837     		adds	r7, r7, #8
 3496              		.cfi_def_cfa_offset 16
 3497 009c BD46     		mov	sp, r7
 3498              		.cfi_def_cfa_register 13
 3499              		@ sp needed
 3500 009e B0BD     		pop	{r4, r5, r7, pc}
 3501              	.L193:
 3502              		.align	2
 3503              	.L192:
 3504 00a0 00000000 		.word	byteCount
 3505 00a4 00000000 		.word	system_state
 3506 00a8 00000000 		.word	buffer_state
 3507 00ac 00000000 		.word	initial_pos_valid
 3508 00b0 00000000 		.word	flag_rx
 3509 00b4 00000000 		.word	packet
 3510              		.cfi_endproc
 3511              	.LFE92:
 3512              		.size	rxInt, .-rxInt
 3513              		.global	__aeabi_i2f
 3514              		.global	__aeabi_fmul
 3515              		.global	__aeabi_f2iz
 3516              		.section	.rodata
 3517 00c2 0000     		.align	2
 3518              	.LC9:
 3519 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3519      65742071 
 3519      7561643A 
 3519      2025640D 
 3519      0A00
 3520 00d6 0000     		.align	2
 3521              	.LC10:
 3522 00d8 0D0A00   		.ascii	"\015\012\000"
 3523              		.section	.text.BT_rxInt,"ax",%progbits
 3524              		.align	2
 3525              		.global	BT_rxInt
 3526              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 78


 3527              		.thumb_func
 3528              		.type	BT_rxInt, %function
 3529              	BT_rxInt:
 3530              	.LFB93:
 803:.\main.c      **** 
 804:.\main.c      **** CY_ISR(BT_rxInt)
 805:.\main.c      **** {
 3531              		.loc 1 805 0
 3532              		.cfi_startproc
 3533              		@ args = 0, pretend = 0, frame = 32
 3534              		@ frame_needed = 1, uses_anonymous_args = 0
 3535 0000 80B5     		push	{r7, lr}
 3536              		.cfi_def_cfa_offset 8
 3537              		.cfi_offset 7, -8
 3538              		.cfi_offset 14, -4
 3539 0002 88B0     		sub	sp, sp, #32
 3540              		.cfi_def_cfa_offset 40
 3541 0004 00AF     		add	r7, sp, #0
 3542              		.cfi_def_cfa_register 7
 806:.\main.c      ****     char rf_char = UART_GetChar();
 3543              		.loc 1 806 0
 3544 0006 FFF7FEFF 		bl	UART_GetChar
 3545 000a 0346     		mov	r3, r0
 3546 000c FB75     		strb	r3, [r7, #23]
 807:.\main.c      ****     switch(rf_char){
 3547              		.loc 1 807 0
 3548 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3549 0010 313B     		subs	r3, r3, #49
 3550 0012 492B     		cmp	r3, #73
 3551 0014 00F2B081 		bhi	.L194
 3552 0018 01A2     		adr	r2, .L197
 3553 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3554 001e 00BF     		.p2align 2
 3555              	.L197:
 3556 0020 C1020000 		.word	.L196+1
 3557 0024 15020000 		.word	.L198+1
 3558 0028 79030000 		.word	.L194+1
 3559 002c 79030000 		.word	.L194+1
 3560 0030 79030000 		.word	.L194+1
 3561 0034 79030000 		.word	.L194+1
 3562 0038 79030000 		.word	.L194+1
 3563 003c 79030000 		.word	.L194+1
 3564 0040 79030000 		.word	.L194+1
 3565 0044 79030000 		.word	.L194+1
 3566 0048 79030000 		.word	.L194+1
 3567 004c 79030000 		.word	.L194+1
 3568 0050 79030000 		.word	.L194+1
 3569 0054 79030000 		.word	.L194+1
 3570 0058 79030000 		.word	.L194+1
 3571 005c 79030000 		.word	.L194+1
 3572 0060 79030000 		.word	.L194+1
 3573 0064 79030000 		.word	.L194+1
 3574 0068 79030000 		.word	.L194+1
 3575 006c 79030000 		.word	.L194+1
 3576 0070 79030000 		.word	.L194+1
 3577 0074 79030000 		.word	.L194+1
 3578 0078 79030000 		.word	.L194+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 79


 3579 007c 79030000 		.word	.L194+1
 3580 0080 79030000 		.word	.L194+1
 3581 0084 79030000 		.word	.L194+1
 3582 0088 79030000 		.word	.L194+1
 3583 008c 79030000 		.word	.L194+1
 3584 0090 79030000 		.word	.L194+1
 3585 0094 79030000 		.word	.L194+1
 3586 0098 79030000 		.word	.L194+1
 3587 009c 79030000 		.word	.L194+1
 3588 00a0 79030000 		.word	.L194+1
 3589 00a4 79030000 		.word	.L194+1
 3590 00a8 79030000 		.word	.L194+1
 3591 00ac 79030000 		.word	.L194+1
 3592 00b0 79030000 		.word	.L194+1
 3593 00b4 79030000 		.word	.L194+1
 3594 00b8 79030000 		.word	.L194+1
 3595 00bc 79030000 		.word	.L194+1
 3596 00c0 79030000 		.word	.L194+1
 3597 00c4 79030000 		.word	.L194+1
 3598 00c8 79030000 		.word	.L194+1
 3599 00cc 79030000 		.word	.L194+1
 3600 00d0 79030000 		.word	.L194+1
 3601 00d4 79030000 		.word	.L194+1
 3602 00d8 79030000 		.word	.L194+1
 3603 00dc 79030000 		.word	.L194+1
 3604 00e0 49010000 		.word	.L199+1
 3605 00e4 79030000 		.word	.L194+1
 3606 00e8 79030000 		.word	.L194+1
 3607 00ec 6D010000 		.word	.L200+1
 3608 00f0 79030000 		.word	.L194+1
 3609 00f4 79010000 		.word	.L201+1
 3610 00f8 79030000 		.word	.L194+1
 3611 00fc 79030000 		.word	.L194+1
 3612 0100 79030000 		.word	.L194+1
 3613 0104 79030000 		.word	.L194+1
 3614 0108 79030000 		.word	.L194+1
 3615 010c 79030000 		.word	.L194+1
 3616 0110 79030000 		.word	.L194+1
 3617 0114 79030000 		.word	.L194+1
 3618 0118 79030000 		.word	.L194+1
 3619 011c 79030000 		.word	.L194+1
 3620 0120 A9010000 		.word	.L202+1
 3621 0124 FF010000 		.word	.L203+1
 3622 0128 61010000 		.word	.L204+1
 3623 012c 85010000 		.word	.L205+1
 3624 0130 91010000 		.word	.L206+1
 3625 0134 79030000 		.word	.L194+1
 3626 0138 55010000 		.word	.L207+1
 3627 013c 79030000 		.word	.L194+1
 3628 0140 79030000 		.word	.L194+1
 3629 0144 9D010000 		.word	.L208+1
 3630              		.p2align 1
 3631              	.L199:
 3632              	.LBB11:
 808:.\main.c      ****     case 'a':
 809:.\main.c      ****         initTurnLeft();
 3633              		.loc 1 809 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 80


 3634 0148 FFF7FEFF 		bl	initTurnLeft
 810:.\main.c      ****         track_mode = NO_TRACK;
 3635              		.loc 1 810 0
 3636 014c 8C4B     		ldr	r3, .L218
 3637 014e 0022     		movs	r2, #0
 3638 0150 1A70     		strb	r2, [r3]
 811:.\main.c      ****         break;
 3639              		.loc 1 811 0
 3640 0152 11E1     		b	.L194
 3641              	.L207:
 812:.\main.c      ****     case 'w':
 813:.\main.c      ****         initForward();
 3642              		.loc 1 813 0
 3643 0154 FFF7FEFF 		bl	initForward
 814:.\main.c      ****         track_mode = NO_TRACK;
 3644              		.loc 1 814 0
 3645 0158 894B     		ldr	r3, .L218
 3646 015a 0022     		movs	r2, #0
 3647 015c 1A70     		strb	r2, [r3]
 815:.\main.c      ****         break;
 3648              		.loc 1 815 0
 3649 015e 0BE1     		b	.L194
 3650              	.L204:
 816:.\main.c      ****     case 's': 
 817:.\main.c      ****         reverseDirection();
 3651              		.loc 1 817 0
 3652 0160 FFF7FEFF 		bl	reverseDirection
 818:.\main.c      ****         track_mode = NO_TRACK;
 3653              		.loc 1 818 0
 3654 0164 864B     		ldr	r3, .L218
 3655 0166 0022     		movs	r2, #0
 3656 0168 1A70     		strb	r2, [r3]
 819:.\main.c      ****         break;
 3657              		.loc 1 819 0
 3658 016a 05E1     		b	.L194
 3659              	.L200:
 820:.\main.c      ****     case 'd':
 821:.\main.c      ****         initTurnRight();
 3660              		.loc 1 821 0
 3661 016c FFF7FEFF 		bl	initTurnRight
 822:.\main.c      ****         track_mode = NO_TRACK;
 3662              		.loc 1 822 0
 3663 0170 834B     		ldr	r3, .L218
 3664 0172 0022     		movs	r2, #0
 3665 0174 1A70     		strb	r2, [r3]
 823:.\main.c      ****         break;
 3666              		.loc 1 823 0
 3667 0176 FFE0     		b	.L194
 3668              	.L201:
 824:.\main.c      ****     case 'f':
 825:.\main.c      ****         initBrake();
 3669              		.loc 1 825 0
 3670 0178 FFF7FEFF 		bl	initBrake
 826:.\main.c      ****         track_mode = NO_TRACK;
 3671              		.loc 1 826 0
 3672 017c 804B     		ldr	r3, .L218
 3673 017e 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 81


 3674 0180 1A70     		strb	r2, [r3]
 827:.\main.c      ****         break;
 3675              		.loc 1 827 0
 3676 0182 F9E0     		b	.L194
 3677              	.L205:
 828:.\main.c      ****     case('t'):
 829:.\main.c      ****         track_mode = CURVE_TRACK;
 3678              		.loc 1 829 0
 3679 0184 7E4B     		ldr	r3, .L218
 3680 0186 0122     		movs	r2, #1
 3681 0188 1A70     		strb	r2, [r3]
 830:.\main.c      ****         initTrack();
 3682              		.loc 1 830 0
 3683 018a FFF7FEFF 		bl	initTrack
 831:.\main.c      ****         break;
 3684              		.loc 1 831 0
 3685 018e F3E0     		b	.L194
 3686              	.L206:
 832:.\main.c      ****     case('u'):
 833:.\main.c      ****         initTrackU();
 3687              		.loc 1 833 0
 3688 0190 FFF7FEFF 		bl	initTrackU
 834:.\main.c      ****         track_mode = U_TRACK;
 3689              		.loc 1 834 0
 3690 0194 7A4B     		ldr	r3, .L218
 3691 0196 0222     		movs	r2, #2
 3692 0198 1A70     		strb	r2, [r3]
 835:.\main.c      ****         break;
 3693              		.loc 1 835 0
 3694 019a EDE0     		b	.L194
 3695              	.L208:
 836:.\main.c      ****     case('z'):
 837:.\main.c      ****         track_mode = SQUARE_TRACK;
 3696              		.loc 1 837 0
 3697 019c 784B     		ldr	r3, .L218
 3698 019e 0322     		movs	r2, #3
 3699 01a0 1A70     		strb	r2, [r3]
 838:.\main.c      ****         inittrackLineZ();
 3700              		.loc 1 838 0
 3701 01a2 FFF7FEFF 		bl	inittrackLineZ
 839:.\main.c      ****         break;
 3702              		.loc 1 839 0
 3703 01a6 E7E0     		b	.L194
 3704              	.L202:
 840:.\main.c      ****     case('q'):
 841:.\main.c      ****         track_mode = QUAD_STOP;
 3705              		.loc 1 841 0
 3706 01a8 754B     		ldr	r3, .L218
 3707 01aa 0422     		movs	r2, #4
 3708 01ac 1A70     		strb	r2, [r3]
 842:.\main.c      ****         accum_dist = 0;
 3709              		.loc 1 842 0
 3710 01ae 754B     		ldr	r3, .L218+4
 3711 01b0 0022     		movs	r2, #0
 3712 01b2 1A80     		strh	r2, [r3]	@ movhi
 843:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3713              		.loc 1 843 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 82


 3714 01b4 744B     		ldr	r3, .L218+8
 3715 01b6 1B88     		ldrh	r3, [r3]
 3716 01b8 1BB2     		sxth	r3, r3
 3717 01ba 1846     		mov	r0, r3
 3718 01bc FFF7FEFF 		bl	__aeabi_i2f
 3719 01c0 0246     		mov	r2, r0
 3720 01c2 724B     		ldr	r3, .L218+12
 3721 01c4 1B68     		ldr	r3, [r3]	@ float
 3722 01c6 1046     		mov	r0, r2
 3723 01c8 1946     		mov	r1, r3
 3724 01ca FFF7FEFF 		bl	__aeabi_fmul
 3725 01ce 0346     		mov	r3, r0
 3726 01d0 1846     		mov	r0, r3
 3727 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3728 01d6 0346     		mov	r3, r0
 3729 01d8 9AB2     		uxth	r2, r3
 3730 01da 6D4B     		ldr	r3, .L218+16
 3731 01dc 1A80     		strh	r2, [r3]	@ movhi
 844:.\main.c      ****         char mes[16];
 845:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3732              		.loc 1 845 0
 3733 01de 6C4B     		ldr	r3, .L218+16
 3734 01e0 1B88     		ldrh	r3, [r3]
 3735 01e2 1BB2     		sxth	r3, r3
 3736 01e4 3A1D     		adds	r2, r7, #4
 3737 01e6 1046     		mov	r0, r2
 3738 01e8 6A49     		ldr	r1, .L218+20
 3739 01ea 1A46     		mov	r2, r3
 3740 01ec FFF7FEFF 		bl	sprintf
 846:.\main.c      ****         UART_PutString(mes);
 3741              		.loc 1 846 0
 3742 01f0 3B1D     		adds	r3, r7, #4
 3743 01f2 1846     		mov	r0, r3
 3744 01f4 FFF7FEFF 		bl	UART_PutString
 847:.\main.c      ****         initForward();
 3745              		.loc 1 847 0
 3746 01f8 FFF7FEFF 		bl	initForward
 848:.\main.c      ****         break;
 3747              		.loc 1 848 0
 3748 01fc BCE0     		b	.L194
 3749              	.L203:
 849:.\main.c      ****     case ('r'):
 850:.\main.c      ****         track_mode = RF_STOP;
 3750              		.loc 1 850 0
 3751 01fe 604B     		ldr	r3, .L218
 3752 0200 0522     		movs	r2, #5
 3753 0202 1A70     		strb	r2, [r3]
 851:.\main.c      ****         changeToRF();
 3754              		.loc 1 851 0
 3755 0204 FFF7FEFF 		bl	changeToRF
 852:.\main.c      ****         // Make initial position
 853:.\main.c      ****         initial_pos_valid = 0;
 3756              		.loc 1 853 0
 3757 0208 634B     		ldr	r3, .L218+24
 3758 020a 0022     		movs	r2, #0
 3759 020c 1A70     		strb	r2, [r3]
 854:.\main.c      ****         initBrake();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 83


 3760              		.loc 1 854 0
 3761 020e FFF7FEFF 		bl	initBrake
 855:.\main.c      ****         break;
 3762              		.loc 1 855 0
 3763 0212 B1E0     		b	.L194
 3764              	.L198:
 856:.\main.c      ****     case ('2'):
 857:.\main.c      ****         track_mode = DEST_TEST;
 3765              		.loc 1 857 0
 3766 0214 5A4B     		ldr	r3, .L218
 3767 0216 0622     		movs	r2, #6
 3768 0218 1A70     		strb	r2, [r3]
 858:.\main.c      ****         tracked_direction = robot_direction;
 3769              		.loc 1 858 0
 3770 021a 604B     		ldr	r3, .L218+28
 3771 021c 1B68     		ldr	r3, [r3]
 3772 021e 604A     		ldr	r2, .L218+32
 3773 0220 1360     		str	r3, [r2]
 859:.\main.c      ****         instructionLength = generateDirections();
 3774              		.loc 1 859 0
 3775 0222 FFF7FEFF 		bl	generateDirections
 3776 0226 0346     		mov	r3, r0
 3777 0228 9AB2     		uxth	r2, r3
 3778 022a 5E4B     		ldr	r3, .L218+36
 3779 022c 1A80     		strh	r2, [r3]	@ movhi
 860:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 861:.\main.c      ****         //char message[128];
 862:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 863:.\main.c      ****         int i = 0;
 3780              		.loc 1 863 0
 3781 022e 0023     		movs	r3, #0
 3782 0230 FB61     		str	r3, [r7, #28]
 864:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3783              		.loc 1 864 0
 3784 0232 0023     		movs	r3, #0
 3785 0234 FB61     		str	r3, [r7, #28]
 3786 0236 18E0     		b	.L210
 3787              	.L213:
 865:.\main.c      ****         {
 866:.\main.c      ****             if(i%2 == 0)
 3788              		.loc 1 866 0
 3789 0238 FB69     		ldr	r3, [r7, #28]
 3790 023a 03F00103 		and	r3, r3, #1
 3791 023e 002B     		cmp	r3, #0
 3792 0240 07D1     		bne	.L211
 867:.\main.c      ****             {
 868:.\main.c      ****                 UART_PutChar(instructions[i]);
 3793              		.loc 1 868 0
 3794 0242 594A     		ldr	r2, .L218+40
 3795 0244 FB69     		ldr	r3, [r7, #28]
 3796 0246 1344     		add	r3, r3, r2
 3797 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3798 024a 1846     		mov	r0, r3
 3799 024c FFF7FEFF 		bl	UART_PutChar
 3800 0250 08E0     		b	.L212
 3801              	.L211:
 869:.\main.c      ****             }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 84


 870:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3802              		.loc 1 870 0
 3803 0252 554A     		ldr	r2, .L218+40
 3804 0254 FB69     		ldr	r3, [r7, #28]
 3805 0256 1344     		add	r3, r3, r2
 3806 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3807 025a 3033     		adds	r3, r3, #48
 3808 025c DBB2     		uxtb	r3, r3
 3809 025e 1846     		mov	r0, r3
 3810 0260 FFF7FEFF 		bl	UART_PutChar
 3811              	.L212:
 864:.\main.c      ****         {
 3812              		.loc 1 864 0 discriminator 2
 3813 0264 FB69     		ldr	r3, [r7, #28]
 3814 0266 0133     		adds	r3, r3, #1
 3815 0268 FB61     		str	r3, [r7, #28]
 3816              	.L210:
 864:.\main.c      ****         {
 3817              		.loc 1 864 0 is_stmt 0 discriminator 1
 3818 026a 4E4B     		ldr	r3, .L218+36
 3819 026c 1B88     		ldrh	r3, [r3]
 3820 026e 1A46     		mov	r2, r3
 3821 0270 FB69     		ldr	r3, [r7, #28]
 3822 0272 9A42     		cmp	r2, r3
 3823 0274 E0DC     		bgt	.L213
 871:.\main.c      **** 
 872:.\main.c      ****         }
 873:.\main.c      ****         
 874:.\main.c      ****         UART_PutString("\r\n");
 3824              		.loc 1 874 0 is_stmt 1
 3825 0276 4D48     		ldr	r0, .L218+44
 3826 0278 FFF7FEFF 		bl	UART_PutString
 875:.\main.c      ****         
 876:.\main.c      ****         char nextStep = instructions[instructionCount];
 3827              		.loc 1 876 0
 3828 027c 4C4B     		ldr	r3, .L218+48
 3829 027e 1B88     		ldrh	r3, [r3]
 3830 0280 1A46     		mov	r2, r3
 3831 0282 494B     		ldr	r3, .L218+40
 3832 0284 9B5C     		ldrb	r3, [r3, r2]
 3833 0286 BB75     		strb	r3, [r7, #22]
 877:.\main.c      ****         
 878:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 3834              		.loc 1 878 0
 3835 0288 494B     		ldr	r3, .L218+48
 3836 028a 1B88     		ldrh	r3, [r3]
 3837 028c 0133     		adds	r3, r3, #1
 3838 028e 464A     		ldr	r2, .L218+40
 3839 0290 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3840 0292 9BB2     		uxth	r3, r3
 3841 0294 1A46     		mov	r2, r3	@ movhi
 3842 0296 D200     		lsls	r2, r2, #3
 3843 0298 1A44     		add	r2, r2, r3
 3844 029a D200     		lsls	r2, r2, #3
 3845 029c D31A     		subs	r3, r2, r3
 3846 029e 5B00     		lsls	r3, r3, #1
 3847 02a0 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 85


 3848 02a2 9AB2     		uxth	r2, r3
 3849 02a4 3A4B     		ldr	r3, .L218+16
 3850 02a6 1A80     		strh	r2, [r3]	@ movhi
 879:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 3851              		.loc 1 879 0
 3852 02a8 394B     		ldr	r3, .L218+16
 3853 02aa 1B88     		ldrh	r3, [r3]
 3854 02ac 1BB2     		sxth	r3, r3
 3855 02ae 3A1D     		adds	r2, r7, #4
 3856 02b0 1046     		mov	r0, r2
 3857 02b2 4049     		ldr	r1, .L218+52
 3858 02b4 1A46     		mov	r2, r3
 3859 02b6 FFF7FEFF 		bl	sprintf
 880:.\main.c      **** 
 881:.\main.c      ****         inittrackLineZ();
 3860              		.loc 1 881 0
 3861 02ba FFF7FEFF 		bl	inittrackLineZ
 882:.\main.c      ****         break;
 3862              		.loc 1 882 0
 3863 02be 5BE0     		b	.L194
 3864              	.L196:
 883:.\main.c      ****         case ('1'):
 884:.\main.c      ****         track_mode = DEST_TEST;
 3865              		.loc 1 884 0
 3866 02c0 2F4B     		ldr	r3, .L218
 3867 02c2 0622     		movs	r2, #6
 3868 02c4 1A70     		strb	r2, [r3]
 885:.\main.c      ****         tracked_direction = robot_direction;
 3869              		.loc 1 885 0
 3870 02c6 354B     		ldr	r3, .L218+28
 3871 02c8 1B68     		ldr	r3, [r3]
 3872 02ca 354A     		ldr	r2, .L218+32
 3873 02cc 1360     		str	r3, [r2]
 886:.\main.c      ****         //instructionLength = generateDirections();
 887:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3874              		.loc 1 887 0
 3875 02ce FFF7FEFF 		bl	generateEntireMapDirections
 3876 02d2 0346     		mov	r3, r0
 3877 02d4 9AB2     		uxth	r2, r3
 3878 02d6 334B     		ldr	r3, .L218+36
 3879 02d8 1A80     		strh	r2, [r3]	@ movhi
 888:.\main.c      ****         //char message[128];
 889:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 890:.\main.c      ****         instructionCount = 17*2;
 3880              		.loc 1 890 0
 3881 02da 354B     		ldr	r3, .L218+48
 3882 02dc 2222     		movs	r2, #34
 3883 02de 1A80     		strh	r2, [r3]	@ movhi
 891:.\main.c      ****         int x;
 892:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 3884              		.loc 1 892 0
 3885 02e0 334B     		ldr	r3, .L218+48
 3886 02e2 1B88     		ldrh	r3, [r3]
 3887 02e4 BB61     		str	r3, [r7, #24]
 3888 02e6 18E0     		b	.L214
 3889              	.L217:
 893:.\main.c      ****         {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 86


 894:.\main.c      ****             if(x%2 == 0)
 3890              		.loc 1 894 0
 3891 02e8 BB69     		ldr	r3, [r7, #24]
 3892 02ea 03F00103 		and	r3, r3, #1
 3893 02ee 002B     		cmp	r3, #0
 3894 02f0 07D1     		bne	.L215
 895:.\main.c      ****             {
 896:.\main.c      ****                 UART_PutChar(instructions[x]);
 3895              		.loc 1 896 0
 3896 02f2 2D4A     		ldr	r2, .L218+40
 3897 02f4 BB69     		ldr	r3, [r7, #24]
 3898 02f6 1344     		add	r3, r3, r2
 3899 02f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3900 02fa 1846     		mov	r0, r3
 3901 02fc FFF7FEFF 		bl	UART_PutChar
 3902 0300 08E0     		b	.L216
 3903              	.L215:
 897:.\main.c      ****             }
 898:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 3904              		.loc 1 898 0
 3905 0302 294A     		ldr	r2, .L218+40
 3906 0304 BB69     		ldr	r3, [r7, #24]
 3907 0306 1344     		add	r3, r3, r2
 3908 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3909 030a 3033     		adds	r3, r3, #48
 3910 030c DBB2     		uxtb	r3, r3
 3911 030e 1846     		mov	r0, r3
 3912 0310 FFF7FEFF 		bl	UART_PutChar
 3913              	.L216:
 892:.\main.c      ****         {
 3914              		.loc 1 892 0 discriminator 2
 3915 0314 BB69     		ldr	r3, [r7, #24]
 3916 0316 0133     		adds	r3, r3, #1
 3917 0318 BB61     		str	r3, [r7, #24]
 3918              	.L214:
 892:.\main.c      ****         {
 3919              		.loc 1 892 0 is_stmt 0 discriminator 1
 3920 031a 224B     		ldr	r3, .L218+36
 3921 031c 1B88     		ldrh	r3, [r3]
 3922 031e 1A46     		mov	r2, r3
 3923 0320 BB69     		ldr	r3, [r7, #24]
 3924 0322 9A42     		cmp	r2, r3
 3925 0324 E0DC     		bgt	.L217
 899:.\main.c      **** 
 900:.\main.c      ****         }
 901:.\main.c      ****         
 902:.\main.c      ****         UART_PutString("\r\n");
 3926              		.loc 1 902 0 is_stmt 1
 3927 0326 2148     		ldr	r0, .L218+44
 3928 0328 FFF7FEFF 		bl	UART_PutString
 903:.\main.c      **** 
 904:.\main.c      ****         nextStep = instructions[instructionCount];
 3929              		.loc 1 904 0
 3930 032c 204B     		ldr	r3, .L218+48
 3931 032e 1B88     		ldrh	r3, [r3]
 3932 0330 1A46     		mov	r2, r3
 3933 0332 1D4B     		ldr	r3, .L218+40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 87


 3934 0334 9B5C     		ldrb	r3, [r3, r2]
 3935 0336 BB75     		strb	r3, [r7, #22]
 905:.\main.c      ****         
 906:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 3936              		.loc 1 906 0
 3937 0338 1D4B     		ldr	r3, .L218+48
 3938 033a 1B88     		ldrh	r3, [r3]
 3939 033c 0133     		adds	r3, r3, #1
 3940 033e 1A4A     		ldr	r2, .L218+40
 3941 0340 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3942 0342 9BB2     		uxth	r3, r3
 3943 0344 1A46     		mov	r2, r3	@ movhi
 3944 0346 D200     		lsls	r2, r2, #3
 3945 0348 1A44     		add	r2, r2, r3
 3946 034a D200     		lsls	r2, r2, #3
 3947 034c D31A     		subs	r3, r2, r3
 3948 034e 5B00     		lsls	r3, r3, #1
 3949 0350 9BB2     		uxth	r3, r3
 3950 0352 9AB2     		uxth	r2, r3
 3951 0354 0E4B     		ldr	r3, .L218+16
 3952 0356 1A80     		strh	r2, [r3]	@ movhi
 907:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 3953              		.loc 1 907 0
 3954 0358 0D4B     		ldr	r3, .L218+16
 3955 035a 1B88     		ldrh	r3, [r3]
 3956 035c 1BB2     		sxth	r3, r3
 3957 035e 3A1D     		adds	r2, r7, #4
 3958 0360 1046     		mov	r0, r2
 3959 0362 1449     		ldr	r1, .L218+52
 3960 0364 1A46     		mov	r2, r3
 3961 0366 FFF7FEFF 		bl	sprintf
 908:.\main.c      ****         UART_PutString(mes);
 3962              		.loc 1 908 0
 3963 036a 3B1D     		adds	r3, r7, #4
 3964 036c 1846     		mov	r0, r3
 3965 036e FFF7FEFF 		bl	UART_PutString
 909:.\main.c      ****         inittrackLineZ();
 3966              		.loc 1 909 0
 3967 0372 FFF7FEFF 		bl	inittrackLineZ
 910:.\main.c      ****         break;
 3968              		.loc 1 910 0
 3969 0376 00BF     		nop
 3970              	.L194:
 3971              	.LBE11:
 911:.\main.c      ****     }
 912:.\main.c      **** }
 3972              		.loc 1 912 0
 3973 0378 2037     		adds	r7, r7, #32
 3974              		.cfi_def_cfa_offset 8
 3975 037a BD46     		mov	sp, r7
 3976              		.cfi_def_cfa_register 13
 3977              		@ sp needed
 3978 037c 80BD     		pop	{r7, pc}
 3979              	.L219:
 3980 037e 00BF     		.align	2
 3981              	.L218:
 3982 0380 00000000 		.word	track_mode
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 88


 3983 0384 00000000 		.word	accum_dist
 3984 0388 00000000 		.word	target_distance_cm
 3985 038c 00000000 		.word	quad_per_cm
 3986 0390 00000000 		.word	target_distance_quad
 3987 0394 C4000000 		.word	.LC9
 3988 0398 00000000 		.word	initial_pos_valid
 3989 039c 00000000 		.word	robot_direction
 3990 03a0 00000000 		.word	tracked_direction
 3991 03a4 00000000 		.word	instructionLength
 3992 03a8 00000000 		.word	instructions
 3993 03ac D8000000 		.word	.LC10
 3994 03b0 00000000 		.word	instructionCount
 3995 03b4 6C000000 		.word	.LC5
 3996              		.cfi_endproc
 3997              	.LFE93:
 3998              		.size	BT_rxInt, .-BT_rxInt
 3999              		.section	.text.changeToRF,"ax",%progbits
 4000              		.align	2
 4001              		.global	changeToRF
 4002              		.thumb
 4003              		.thumb_func
 4004              		.type	changeToRF, %function
 4005              	changeToRF:
 4006              	.LFB94:
 913:.\main.c      **** 
 914:.\main.c      **** 
 915:.\main.c      **** void changeToRF()
 916:.\main.c      **** {
 4007              		.loc 1 916 0
 4008              		.cfi_startproc
 4009              		@ args = 0, pretend = 0, frame = 0
 4010              		@ frame_needed = 1, uses_anonymous_args = 0
 4011 0000 80B5     		push	{r7, lr}
 4012              		.cfi_def_cfa_offset 8
 4013              		.cfi_offset 7, -8
 4014              		.cfi_offset 14, -4
 4015 0002 00AF     		add	r7, sp, #0
 4016              		.cfi_def_cfa_register 7
 917:.\main.c      ****         //disable BT
 918:.\main.c      ****         BT_ENABLED = 0;
 4017              		.loc 1 918 0
 4018 0004 0B4B     		ldr	r3, .L221
 4019 0006 0022     		movs	r2, #0
 4020 0008 1A70     		strb	r2, [r3]
 919:.\main.c      ****         isrRF_RX_Stop();
 4021              		.loc 1 919 0
 4022 000a FFF7FEFF 		bl	isrRF_RX_Stop
 920:.\main.c      ****         UART_Stop();
 4023              		.loc 1 920 0
 4024 000e FFF7FEFF 		bl	UART_Stop
 921:.\main.c      ****         
 922:.\main.c      ****         //enable RF
 923:.\main.c      ****         BIN_ENABLED = 1;
 4025              		.loc 1 923 0
 4026 0012 094B     		ldr	r3, .L221+4
 4027 0014 0122     		movs	r2, #1
 4028 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 89


 924:.\main.c      ****         UART_clk_SetDividerValue(130);
 4029              		.loc 1 924 0
 4030 0018 8120     		movs	r0, #129
 4031 001a 0121     		movs	r1, #1
 4032 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 925:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4033              		.loc 1 925 0
 4034 0020 0648     		ldr	r0, .L221+8
 4035 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 926:.\main.c      ****         UART_Start();
 4036              		.loc 1 926 0
 4037 0026 FFF7FEFF 		bl	UART_Start
 927:.\main.c      ****         RF_BT_SELECT_Write(0);
 4038              		.loc 1 927 0
 4039 002a 0020     		movs	r0, #0
 4040 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 928:.\main.c      **** }
 4041              		.loc 1 928 0
 4042 0030 80BD     		pop	{r7, pc}
 4043              	.L222:
 4044 0032 00BF     		.align	2
 4045              	.L221:
 4046 0034 00000000 		.word	BT_ENABLED
 4047 0038 00000000 		.word	BIN_ENABLED
 4048 003c 00000000 		.word	rxInt
 4049              		.cfi_endproc
 4050              	.LFE94:
 4051              		.size	changeToRF, .-changeToRF
 4052              		.section	.text.changeToBT,"ax",%progbits
 4053              		.align	2
 4054              		.global	changeToBT
 4055              		.thumb
 4056              		.thumb_func
 4057              		.type	changeToBT, %function
 4058              	changeToBT:
 4059              	.LFB95:
 929:.\main.c      **** 
 930:.\main.c      **** void changeToBT()
 931:.\main.c      **** {
 4060              		.loc 1 931 0
 4061              		.cfi_startproc
 4062              		@ args = 0, pretend = 0, frame = 0
 4063              		@ frame_needed = 1, uses_anonymous_args = 0
 4064 0000 80B5     		push	{r7, lr}
 4065              		.cfi_def_cfa_offset 8
 4066              		.cfi_offset 7, -8
 4067              		.cfi_offset 14, -4
 4068 0002 00AF     		add	r7, sp, #0
 4069              		.cfi_def_cfa_register 7
 932:.\main.c      ****         //disable RF
 933:.\main.c      ****         BIN_ENABLED = 0;
 4070              		.loc 1 933 0
 4071 0004 0B4B     		ldr	r3, .L224
 4072 0006 0022     		movs	r2, #0
 4073 0008 1A70     		strb	r2, [r3]
 934:.\main.c      ****         isrRF_RX_Stop();
 4074              		.loc 1 934 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 90


 4075 000a FFF7FEFF 		bl	isrRF_RX_Stop
 935:.\main.c      ****         UART_Stop();
 4076              		.loc 1 935 0
 4077 000e FFF7FEFF 		bl	UART_Stop
 936:.\main.c      ****         
 937:.\main.c      ****         //enable BT
 938:.\main.c      ****         BT_ENABLED = 1;
 4078              		.loc 1 938 0
 4079 0012 094B     		ldr	r3, .L224+4
 4080 0014 0122     		movs	r2, #1
 4081 0016 1A70     		strb	r2, [r3]
 939:.\main.c      ****         UART_clk_SetDividerValue(781);
 4082              		.loc 1 939 0
 4083 0018 4FF44370 		mov	r0, #780
 4084 001c 0121     		movs	r1, #1
 4085 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 940:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4086              		.loc 1 940 0
 4087 0022 0648     		ldr	r0, .L224+8
 4088 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 941:.\main.c      ****         UART_Start();
 4089              		.loc 1 941 0
 4090 0028 FFF7FEFF 		bl	UART_Start
 942:.\main.c      ****         RF_BT_SELECT_Write(1);
 4091              		.loc 1 942 0
 4092 002c 0120     		movs	r0, #1
 4093 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 943:.\main.c      **** }
 4094              		.loc 1 943 0
 4095 0032 80BD     		pop	{r7, pc}
 4096              	.L225:
 4097              		.align	2
 4098              	.L224:
 4099 0034 00000000 		.word	BIN_ENABLED
 4100 0038 00000000 		.word	BT_ENABLED
 4101 003c 00000000 		.word	BT_rxInt
 4102              		.cfi_endproc
 4103              	.LFE95:
 4104              		.size	changeToBT, .-changeToBT
 4105              		.section	.text.Quad_Dec_response,"ax",%progbits
 4106              		.align	2
 4107              		.global	Quad_Dec_response
 4108              		.thumb
 4109              		.thumb_func
 4110              		.type	Quad_Dec_response, %function
 4111              	Quad_Dec_response:
 4112              	.LFB96:
 944:.\main.c      **** 
 945:.\main.c      **** 
 946:.\main.c      **** void Quad_Dec_response()
 947:.\main.c      **** {
 4113              		.loc 1 947 0
 4114              		.cfi_startproc
 4115              		@ args = 0, pretend = 0, frame = 32
 4116              		@ frame_needed = 1, uses_anonymous_args = 0
 4117 0000 B0B5     		push	{r4, r5, r7, lr}
 4118              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 91


 4119              		.cfi_offset 4, -16
 4120              		.cfi_offset 5, -12
 4121              		.cfi_offset 7, -8
 4122              		.cfi_offset 14, -4
 4123 0002 88B0     		sub	sp, sp, #32
 4124              		.cfi_def_cfa_offset 48
 4125 0004 00AF     		add	r7, sp, #0
 4126              		.cfi_def_cfa_register 7
 948:.\main.c      ****     //Check if the flag has been set
 949:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4127              		.loc 1 949 0
 4128 0006 824B     		ldr	r3, .L234
 4129 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4130 000a 002B     		cmp	r3, #0
 4131 000c 00D1     		bne	.L227
 4132 000e FCE0     		b	.L226
 4133              	.L227:
 950:.\main.c      ****     flag_calc_wheelspeed = 0;
 4134              		.loc 1 950 0
 4135 0010 7F4B     		ldr	r3, .L234
 4136 0012 0022     		movs	r2, #0
 4137 0014 1A70     		strb	r2, [r3]
 951:.\main.c      ****     
 952:.\main.c      ****     //char wheel_1_str [64];
 953:.\main.c      ****     //char wheel_2_str [64];
 954:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 955:.\main.c      ****     //usbPutString(wheel_1_str);
 956:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 957:.\main.c      ****     
 958:.\main.c      ****     //usbPutString(wheel_2_str);
 959:.\main.c      ****     
 960:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4138              		.loc 1 960 0
 4139 0016 7F4B     		ldr	r3, .L234+4
 4140 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4141 001a FB81     		strh	r3, [r7, #14]	@ movhi
 961:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4142              		.loc 1 961 0
 4143 001c 7E4B     		ldr	r3, .L234+8
 4144 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4145 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 962:.\main.c      ****     double scalingLeft = 1;
 4146              		.loc 1 962 0
 4147 0022 4FF00002 		mov	r2, #0
 4148 0026 7D4B     		ldr	r3, .L234+12
 4149 0028 C7E90623 		strd	r2, [r7, #24]
 963:.\main.c      ****     double scalingRight = 1;
 4150              		.loc 1 963 0
 4151 002c 4FF00002 		mov	r2, #0
 4152 0030 7A4B     		ldr	r3, .L234+12
 4153 0032 C7E90423 		strd	r2, [r7, #16]
 964:.\main.c      ****     
 965:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 966:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4154              		.loc 1 966 0
 4155 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4156 003a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 92


 4157 003c 0FD1     		bne	.L229
 4158              		.loc 1 966 0 is_stmt 0 discriminator 1
 4159 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4160 0042 002B     		cmp	r3, #0
 4161 0044 0BD1     		bne	.L229
 967:.\main.c      ****        //leftSpeed = 3;
 968:.\main.c      ****         scalingLeft = 2;
 4162              		.loc 1 968 0 is_stmt 1
 4163 0046 4FF00002 		mov	r2, #0
 4164 004a 4FF08043 		mov	r3, #1073741824
 4165 004e C7E90623 		strd	r2, [r7, #24]
 969:.\main.c      ****         scalingRight = 2;
 4166              		.loc 1 969 0
 4167 0052 4FF00002 		mov	r2, #0
 4168 0056 4FF08043 		mov	r3, #1073741824
 4169 005a C7E90423 		strd	r2, [r7, #16]
 4170              	.L229:
 970:.\main.c      ****     }
 971:.\main.c      **** 
 972:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4171              		.loc 1 972 0
 4172 005e 704B     		ldr	r3, .L234+16
 4173 0060 1B88     		ldrh	r3, [r3]
 4174 0062 1AB2     		sxth	r2, r3
 4175 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4176 0068 002B     		cmp	r3, #0
 4177 006a B8BF     		it	lt
 4178 006c 5B42     		rsblt	r3, r3, #0
 4179 006e D31A     		subs	r3, r2, r3
 4180 0070 BB60     		str	r3, [r7, #8]
 973:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4181              		.loc 1 973 0
 4182 0072 BB68     		ldr	r3, [r7, #8]
 4183 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4184 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4185 007c BB68     		ldr	r3, [r7, #8]
 4186 007e 92FBF3F3 		sdiv	r3, r2, r3
 4187 0082 1846     		mov	r0, r3
 4188 0084 FFF7FEFF 		bl	__aeabi_i2d
 4189 0088 0446     		mov	r4, r0
 4190 008a 0D46     		mov	r5, r1
 4191 008c BB68     		ldr	r3, [r7, #8]
 4192 008e 002B     		cmp	r3, #0
 4193 0090 B8BF     		it	lt
 4194 0092 5B42     		rsblt	r3, r3, #0
 4195 0094 1846     		mov	r0, r3
 4196 0096 FFF7FEFF 		bl	__aeabi_i2d
 4197 009a 0246     		mov	r2, r0
 4198 009c 0B46     		mov	r3, r1
 4199 009e 1046     		mov	r0, r2
 4200 00a0 1946     		mov	r1, r3
 4201 00a2 FFF7FEFF 		bl	sqrt
 4202 00a6 0246     		mov	r2, r0
 4203 00a8 0B46     		mov	r3, r1
 4204 00aa 2046     		mov	r0, r4
 4205 00ac 2946     		mov	r1, r5
 4206 00ae FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 93


 4207 00b2 0246     		mov	r2, r0
 4208 00b4 0B46     		mov	r3, r1
 4209 00b6 1046     		mov	r0, r2
 4210 00b8 1946     		mov	r1, r3
 4211 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4212 00be 0346     		mov	r3, r0
 4213 00c0 7B60     		str	r3, [r7, #4]
 974:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4214              		.loc 1 974 0
 4215 00c2 584B     		ldr	r3, .L234+20
 4216 00c4 1B88     		ldrh	r3, [r3]
 4217 00c6 1BB2     		sxth	r3, r3
 4218 00c8 1846     		mov	r0, r3
 4219 00ca FFF7FEFF 		bl	__aeabi_i2d
 4220 00ce 0446     		mov	r4, r0
 4221 00d0 0D46     		mov	r5, r1
 4222 00d2 7868     		ldr	r0, [r7, #4]
 4223 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4224 00d8 0246     		mov	r2, r0
 4225 00da 0B46     		mov	r3, r1
 4226 00dc 1046     		mov	r0, r2
 4227 00de 1946     		mov	r1, r3
 4228 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4229 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4230 00e8 0246     		mov	r2, r0
 4231 00ea 0B46     		mov	r3, r1
 4232 00ec 2046     		mov	r0, r4
 4233 00ee 2946     		mov	r1, r5
 4234 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4235 00f4 0246     		mov	r2, r0
 4236 00f6 0B46     		mov	r3, r1
 4237 00f8 1046     		mov	r0, r2
 4238 00fa 1946     		mov	r1, r3
 4239 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4240 0100 0346     		mov	r3, r0
 4241 0102 9AB2     		uxth	r2, r3
 4242 0104 474B     		ldr	r3, .L234+20
 4243 0106 1A80     		strh	r2, [r3]	@ movhi
 975:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4244              		.loc 1 975 0
 4245 0108 474B     		ldr	r3, .L234+24
 4246 010a 1B88     		ldrh	r3, [r3]
 4247 010c 1AB2     		sxth	r2, r3
 4248 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4249 0112 002B     		cmp	r3, #0
 4250 0114 B8BF     		it	lt
 4251 0116 5B42     		rsblt	r3, r3, #0
 4252 0118 D31A     		subs	r3, r2, r3
 4253 011a BB60     		str	r3, [r7, #8]
 976:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4254              		.loc 1 976 0
 4255 011c BB68     		ldr	r3, [r7, #8]
 4256 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4257 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4258 0126 BB68     		ldr	r3, [r7, #8]
 4259 0128 92FBF3F3 		sdiv	r3, r2, r3
 4260 012c 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 94


 4261 012e FFF7FEFF 		bl	__aeabi_i2d
 4262 0132 0446     		mov	r4, r0
 4263 0134 0D46     		mov	r5, r1
 4264 0136 BB68     		ldr	r3, [r7, #8]
 4265 0138 002B     		cmp	r3, #0
 4266 013a B8BF     		it	lt
 4267 013c 5B42     		rsblt	r3, r3, #0
 4268 013e 1846     		mov	r0, r3
 4269 0140 FFF7FEFF 		bl	__aeabi_i2d
 4270 0144 0246     		mov	r2, r0
 4271 0146 0B46     		mov	r3, r1
 4272 0148 1046     		mov	r0, r2
 4273 014a 1946     		mov	r1, r3
 4274 014c FFF7FEFF 		bl	sqrt
 4275 0150 0246     		mov	r2, r0
 4276 0152 0B46     		mov	r3, r1
 4277 0154 2046     		mov	r0, r4
 4278 0156 2946     		mov	r1, r5
 4279 0158 FFF7FEFF 		bl	__aeabi_dmul
 4280 015c 0246     		mov	r2, r0
 4281 015e 0B46     		mov	r3, r1
 4282 0160 1046     		mov	r0, r2
 4283 0162 1946     		mov	r1, r3
 4284 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4285 0168 0346     		mov	r3, r0
 4286 016a 7B60     		str	r3, [r7, #4]
 977:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4287              		.loc 1 977 0
 4288 016c 2F4B     		ldr	r3, .L234+28
 4289 016e 1B88     		ldrh	r3, [r3]
 4290 0170 1BB2     		sxth	r3, r3
 4291 0172 1846     		mov	r0, r3
 4292 0174 FFF7FEFF 		bl	__aeabi_i2d
 4293 0178 0446     		mov	r4, r0
 4294 017a 0D46     		mov	r5, r1
 4295 017c 7868     		ldr	r0, [r7, #4]
 4296 017e FFF7FEFF 		bl	__aeabi_i2d
 4297 0182 0246     		mov	r2, r0
 4298 0184 0B46     		mov	r3, r1
 4299 0186 1046     		mov	r0, r2
 4300 0188 1946     		mov	r1, r3
 4301 018a D7E90423 		ldrd	r2, [r7, #16]
 4302 018e FFF7FEFF 		bl	__aeabi_dmul
 4303 0192 0246     		mov	r2, r0
 4304 0194 0B46     		mov	r3, r1
 4305 0196 2046     		mov	r0, r4
 4306 0198 2946     		mov	r1, r5
 4307 019a FFF7FEFF 		bl	__aeabi_dadd
 4308 019e 0246     		mov	r2, r0
 4309 01a0 0B46     		mov	r3, r1
 4310 01a2 1046     		mov	r0, r2
 4311 01a4 1946     		mov	r1, r3
 4312 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4313 01aa 0346     		mov	r3, r0
 4314 01ac 9AB2     		uxth	r2, r3
 4315 01ae 1F4B     		ldr	r3, .L234+28
 4316 01b0 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 95


 978:.\main.c      ****     
 979:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4317              		.loc 1 979 0
 4318 01b2 1E4B     		ldr	r3, .L234+28
 4319 01b4 1B88     		ldrh	r3, [r3]
 4320 01b6 1BB2     		sxth	r3, r3
 4321 01b8 002B     		cmp	r3, #0
 4322 01ba 02DA     		bge	.L230
 4323              		.loc 1 979 0 is_stmt 0 discriminator 1
 4324 01bc 1B4B     		ldr	r3, .L234+28
 4325 01be 0022     		movs	r2, #0
 4326 01c0 1A80     		strh	r2, [r3]	@ movhi
 4327              	.L230:
 980:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4328              		.loc 1 980 0 is_stmt 1
 4329 01c2 184B     		ldr	r3, .L234+20
 4330 01c4 1B88     		ldrh	r3, [r3]
 4331 01c6 1BB2     		sxth	r3, r3
 4332 01c8 002B     		cmp	r3, #0
 4333 01ca 02DA     		bge	.L231
 4334              		.loc 1 980 0 is_stmt 0 discriminator 1
 4335 01cc 154B     		ldr	r3, .L234+20
 4336 01ce 0022     		movs	r2, #0
 4337 01d0 1A80     		strh	r2, [r3]	@ movhi
 4338              	.L231:
 981:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4339              		.loc 1 981 0 is_stmt 1
 4340 01d2 164B     		ldr	r3, .L234+28
 4341 01d4 1B88     		ldrh	r3, [r3]
 4342 01d6 1BB2     		sxth	r3, r3
 4343 01d8 642B     		cmp	r3, #100
 4344 01da 02DD     		ble	.L232
 4345              		.loc 1 981 0 is_stmt 0 discriminator 1
 4346 01dc 134B     		ldr	r3, .L234+28
 4347 01de 6422     		movs	r2, #100
 4348 01e0 1A80     		strh	r2, [r3]	@ movhi
 4349              	.L232:
 982:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4350              		.loc 1 982 0 is_stmt 1
 4351 01e2 104B     		ldr	r3, .L234+20
 4352 01e4 1B88     		ldrh	r3, [r3]
 4353 01e6 1BB2     		sxth	r3, r3
 4354 01e8 642B     		cmp	r3, #100
 4355 01ea 02DD     		ble	.L233
 4356              		.loc 1 982 0 is_stmt 0 discriminator 1
 4357 01ec 0D4B     		ldr	r3, .L234+20
 4358 01ee 6422     		movs	r2, #100
 4359 01f0 1A80     		strh	r2, [r3]	@ movhi
 4360              	.L233:
 983:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4361              		.loc 1 983 0 is_stmt 1
 4362 01f2 0C4B     		ldr	r3, .L234+20
 4363 01f4 1B88     		ldrh	r3, [r3]
 4364 01f6 DBB2     		uxtb	r3, r3
 4365 01f8 1846     		mov	r0, r3
 4366 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 984:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 96


 4367              		.loc 1 984 0
 4368 01fe 0B4B     		ldr	r3, .L234+28
 4369 0200 1B88     		ldrh	r3, [r3]
 4370 0202 DBB2     		uxtb	r3, r3
 4371 0204 1846     		mov	r0, r3
 4372 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4373              	.L226:
 985:.\main.c      **** }
 4374              		.loc 1 985 0
 4375 020a 2037     		adds	r7, r7, #32
 4376              		.cfi_def_cfa_offset 16
 4377 020c BD46     		mov	sp, r7
 4378              		.cfi_def_cfa_register 13
 4379              		@ sp needed
 4380 020e B0BD     		pop	{r4, r5, r7, pc}
 4381              	.L235:
 4382              		.align	2
 4383              	.L234:
 4384 0210 00000000 		.word	flag_calc_wheelspeed
 4385 0214 00000000 		.word	quad_diff1
 4386 0218 00000000 		.word	quad_diff2
 4387 021c 0000F03F 		.word	1072693248
 4388 0220 00000000 		.word	leftSpeedLimit
 4389 0224 00000000 		.word	left_duty_cycle
 4390 0228 00000000 		.word	rightSpeedLimit
 4391 022c 00000000 		.word	right_duty_cycle
 4392              		.cfi_endproc
 4393              	.LFE96:
 4394              		.size	Quad_Dec_response, .-Quad_Dec_response
 4395              		.section	.text.trackLine,"ax",%progbits
 4396              		.align	2
 4397              		.global	trackLine
 4398              		.thumb
 4399              		.thumb_func
 4400              		.type	trackLine, %function
 4401              	trackLine:
 4402              	.LFB97:
 986:.\main.c      **** 
 987:.\main.c      **** void trackLine()
 988:.\main.c      **** {
 4403              		.loc 1 988 0
 4404              		.cfi_startproc
 4405              		@ args = 0, pretend = 0, frame = 0
 4406              		@ frame_needed = 1, uses_anonymous_args = 0
 4407              		@ link register save eliminated.
 4408 0000 80B4     		push	{r7}
 4409              		.cfi_def_cfa_offset 4
 4410              		.cfi_offset 7, -4
 4411 0002 00AF     		add	r7, sp, #0
 4412              		.cfi_def_cfa_register 7
 989:.\main.c      ****  //removed from implementation
 990:.\main.c      **** }
 4413              		.loc 1 990 0
 4414 0004 BD46     		mov	sp, r7
 4415              		.cfi_def_cfa_register 13
 4416              		@ sp needed
 4417 0006 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 97


 4418              		.cfi_restore 7
 4419              		.cfi_def_cfa_offset 0
 4420 000a 7047     		bx	lr
 4421              		.cfi_endproc
 4422              	.LFE97:
 4423              		.size	trackLine, .-trackLine
 4424              		.global	leftTurnCount
 4425              		.bss
 4426              		.align	1
 4427              		.type	leftTurnCount, %object
 4428              		.size	leftTurnCount, 2
 4429              	leftTurnCount:
 4430 28e8 0000     		.space	2
 4431              		.global	rightTurnCount
 4432              		.align	1
 4433              		.type	rightTurnCount, %object
 4434              		.size	rightTurnCount, 2
 4435              	rightTurnCount:
 4436 28ea 0000     		.space	2
 4437              		.section	.text.trackLineZ,"ax",%progbits
 4438              		.align	2
 4439              		.global	trackLineZ
 4440              		.thumb
 4441              		.thumb_func
 4442              		.type	trackLineZ, %function
 4443              	trackLineZ:
 4444              	.LFB98:
 991:.\main.c      **** uint16 leftTurnCount = 0;
 992:.\main.c      **** uint16 rightTurnCount = 0;
 993:.\main.c      **** void trackLineZ()
 994:.\main.c      **** {
 4445              		.loc 1 994 0
 4446              		.cfi_startproc
 4447              		@ args = 0, pretend = 0, frame = 8
 4448              		@ frame_needed = 1, uses_anonymous_args = 0
 4449 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4450              		.cfi_def_cfa_offset 24
 4451              		.cfi_offset 4, -24
 4452              		.cfi_offset 5, -20
 4453              		.cfi_offset 7, -16
 4454              		.cfi_offset 8, -12
 4455              		.cfi_offset 9, -8
 4456              		.cfi_offset 14, -4
 4457 0004 82B0     		sub	sp, sp, #8
 4458              		.cfi_def_cfa_offset 32
 4459 0006 00AF     		add	r7, sp, #0
 4460              		.cfi_def_cfa_register 7
 995:.\main.c      ****     //read the value of the three central-front sensors
 996:.\main.c      ****     
 997:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4461              		.loc 1 997 0
 4462 0008 FFF7FEFF 		bl	NLSens_out_Read
 4463 000c 0346     		mov	r3, r0
 4464 000e FB71     		strb	r3, [r7, #7]
 998:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4465              		.loc 1 998 0
 4466 0010 FFF7FEFF 		bl	NRSens_out_Read
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 98


 4467 0014 0346     		mov	r3, r0
 4468 0016 BB71     		strb	r3, [r7, #6]
 999:.\main.c      ****     uint8 mid = MSens_out_Read();
 4469              		.loc 1 999 0
 4470 0018 FFF7FEFF 		bl	MSens_out_Read
 4471 001c 0346     		mov	r3, r0
 4472 001e 7B71     		strb	r3, [r7, #5]
1000:.\main.c      ****     
1001:.\main.c      ****         //if only the left one, hard left
1002:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4473              		.loc 1 1002 0
 4474 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4475 0022 002B     		cmp	r3, #0
 4476 0024 27D0     		beq	.L238
 4477              		.loc 1 1002 0 is_stmt 0 discriminator 1
 4478 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4479 0028 002B     		cmp	r3, #0
 4480 002a 24D1     		bne	.L238
 4481              		.loc 1 1002 0 discriminator 2
 4482 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4483 002e 002B     		cmp	r3, #0
 4484 0030 21D1     		bne	.L238
1003:.\main.c      ****     {
1004:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4485              		.loc 1 1004 0 is_stmt 1
 4486 0032 454B     		ldr	r3, .L243+8
 4487 0034 D3E90023 		ldrd	r2, [r3]
 4488 0038 1046     		mov	r0, r2
 4489 003a 1946     		mov	r1, r3
 4490 003c 40A3     		adr	r3, .L243
 4491 003e D3E90023 		ldrd	r2, [r3]
 4492 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4493 0046 0246     		mov	r2, r0
 4494 0048 0B46     		mov	r3, r1
 4495 004a 1446     		mov	r4, r2
 4496 004c 1D46     		mov	r5, r3
 4497 004e 3E4B     		ldr	r3, .L243+8
 4498 0050 D3E90023 		ldrd	r2, [r3]
 4499 0054 9046     		mov	r8, r2
 4500 0056 83F00049 		eor	r9, r3, #-2147483648
 4501 005a 4046     		mov	r0, r8
 4502 005c 4946     		mov	r1, r9
 4503 005e 38A3     		adr	r3, .L243
 4504 0060 D3E90023 		ldrd	r2, [r3]
 4505 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4506 0068 0246     		mov	r2, r0
 4507 006a 0B46     		mov	r3, r1
 4508 006c 2046     		mov	r0, r4
 4509 006e 2946     		mov	r1, r5
 4510 0070 FFF7FEFF 		bl	setSpeed
 4511 0074 5FE0     		b	.L237
 4512              	.L238:
1005:.\main.c      ****     }
1006:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4513              		.loc 1 1006 0
 4514 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4515 0078 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 99


 4516 007a 0ED0     		beq	.L240
 4517              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4518 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4519 007e 002B     		cmp	r3, #0
 4520 0080 0BD0     		beq	.L240
 4521              		.loc 1 1006 0 discriminator 2
 4522 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4523 0084 002B     		cmp	r3, #0
 4524 0086 08D1     		bne	.L240
1007:.\main.c      ****     {
1008:.\main.c      ****         setSpeed(speed,speed);
 4525              		.loc 1 1008 0 is_stmt 1
 4526 0088 2F4B     		ldr	r3, .L243+8
 4527 008a D3E90001 		ldrd	r0, [r3]
 4528 008e 2E4B     		ldr	r3, .L243+8
 4529 0090 D3E90023 		ldrd	r2, [r3]
 4530 0094 FFF7FEFF 		bl	setSpeed
 4531 0098 4DE0     		b	.L237
 4532              	.L240:
1009:.\main.c      ****     }
1010:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4533              		.loc 1 1010 0
 4534 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4535 009c 002B     		cmp	r3, #0
 4536 009e 0ED0     		beq	.L241
 4537              		.loc 1 1010 0 is_stmt 0 discriminator 1
 4538 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4539 00a2 002B     		cmp	r3, #0
 4540 00a4 0BD0     		beq	.L241
 4541              		.loc 1 1010 0 discriminator 2
 4542 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4543 00a8 002B     		cmp	r3, #0
 4544 00aa 08D1     		bne	.L241
1011:.\main.c      ****     {
1012:.\main.c      ****         setSpeed(speed ,speed);
 4545              		.loc 1 1012 0 is_stmt 1
 4546 00ac 264B     		ldr	r3, .L243+8
 4547 00ae D3E90001 		ldrd	r0, [r3]
 4548 00b2 254B     		ldr	r3, .L243+8
 4549 00b4 D3E90023 		ldrd	r2, [r3]
 4550 00b8 FFF7FEFF 		bl	setSpeed
 4551 00bc 3BE0     		b	.L237
 4552              	.L241:
1013:.\main.c      ****     }
1014:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4553              		.loc 1 1014 0
 4554 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4555 00c0 002B     		cmp	r3, #0
 4556 00c2 27D0     		beq	.L242
 4557              		.loc 1 1014 0 is_stmt 0 discriminator 1
 4558 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4559 00c6 002B     		cmp	r3, #0
 4560 00c8 24D1     		bne	.L242
 4561              		.loc 1 1014 0 discriminator 2
 4562 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4563 00cc 002B     		cmp	r3, #0
 4564 00ce 21D1     		bne	.L242
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 100


1015:.\main.c      ****     {
1016:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4565              		.loc 1 1016 0 is_stmt 1
 4566 00d0 1D4B     		ldr	r3, .L243+8
 4567 00d2 D3E90023 		ldrd	r2, [r3]
 4568 00d6 1446     		mov	r4, r2
 4569 00d8 83F00045 		eor	r5, r3, #-2147483648
 4570 00dc 2046     		mov	r0, r4
 4571 00de 2946     		mov	r1, r5
 4572 00e0 17A3     		adr	r3, .L243
 4573 00e2 D3E90023 		ldrd	r2, [r3]
 4574 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4575 00ea 0246     		mov	r2, r0
 4576 00ec 0B46     		mov	r3, r1
 4577 00ee 1446     		mov	r4, r2
 4578 00f0 1D46     		mov	r5, r3
 4579 00f2 154B     		ldr	r3, .L243+8
 4580 00f4 D3E90023 		ldrd	r2, [r3]
 4581 00f8 1046     		mov	r0, r2
 4582 00fa 1946     		mov	r1, r3
 4583 00fc 10A3     		adr	r3, .L243
 4584 00fe D3E90023 		ldrd	r2, [r3]
 4585 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4586 0106 0246     		mov	r2, r0
 4587 0108 0B46     		mov	r3, r1
 4588 010a 2046     		mov	r0, r4
 4589 010c 2946     		mov	r1, r5
 4590 010e FFF7FEFF 		bl	setSpeed
 4591 0112 10E0     		b	.L237
 4592              	.L242:
1017:.\main.c      ****     }
1018:.\main.c      ****     else if (mid && !nr && !nl)
 4593              		.loc 1 1018 0
 4594 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4595 0116 002B     		cmp	r3, #0
 4596 0118 0DD0     		beq	.L237
 4597              		.loc 1 1018 0 is_stmt 0 discriminator 1
 4598 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4599 011c 002B     		cmp	r3, #0
 4600 011e 0AD1     		bne	.L237
 4601              		.loc 1 1018 0 discriminator 2
 4602 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4603 0122 002B     		cmp	r3, #0
 4604 0124 07D1     		bne	.L237
1019:.\main.c      ****     {
1020:.\main.c      ****         setSpeed(speed,speed);
 4605              		.loc 1 1020 0 is_stmt 1
 4606 0126 084B     		ldr	r3, .L243+8
 4607 0128 D3E90001 		ldrd	r0, [r3]
 4608 012c 064B     		ldr	r3, .L243+8
 4609 012e D3E90023 		ldrd	r2, [r3]
 4610 0132 FFF7FEFF 		bl	setSpeed
 4611              	.L237:
1021:.\main.c      ****     }
1022:.\main.c      **** }
 4612              		.loc 1 1022 0
 4613 0136 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 101


 4614              		.cfi_def_cfa_offset 24
 4615 0138 BD46     		mov	sp, r7
 4616              		.cfi_def_cfa_register 13
 4617              		@ sp needed
 4618 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4619              	.L244:
 4620 013e 00BF     		.align	3
 4621              	.L243:
 4622 0140 9A999999 		.word	-1717986918
 4623 0144 9999F93F 		.word	1073322393
 4624 0148 00000000 		.word	speed
 4625              		.cfi_endproc
 4626              	.LFE98:
 4627              		.size	trackLineZ, .-trackLineZ
 4628 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4629              		.align	2
 4630              		.global	trackLineU
 4631              		.thumb
 4632              		.thumb_func
 4633              		.type	trackLineU, %function
 4634              	trackLineU:
 4635              	.LFB99:
1023:.\main.c      **** 
1024:.\main.c      **** 
1025:.\main.c      **** void trackLineU()
1026:.\main.c      **** { 
 4636              		.loc 1 1026 0
 4637              		.cfi_startproc
 4638              		@ args = 0, pretend = 0, frame = 0
 4639              		@ frame_needed = 1, uses_anonymous_args = 0
 4640              		@ link register save eliminated.
 4641 0000 80B4     		push	{r7}
 4642              		.cfi_def_cfa_offset 4
 4643              		.cfi_offset 7, -4
 4644 0002 00AF     		add	r7, sp, #0
 4645              		.cfi_def_cfa_register 7
1027:.\main.c      **** //removed from final implementation
1028:.\main.c      **** }
 4646              		.loc 1 1028 0
 4647 0004 BD46     		mov	sp, r7
 4648              		.cfi_def_cfa_register 13
 4649              		@ sp needed
 4650 0006 5DF8047B 		ldr	r7, [sp], #4
 4651              		.cfi_restore 7
 4652              		.cfi_def_cfa_offset 0
 4653 000a 7047     		bx	lr
 4654              		.cfi_endproc
 4655              	.LFE99:
 4656              		.size	trackLineU, .-trackLineU
 4657              		.global	__aeabi_fadd
 4658              		.section	.rodata
 4659 00db 00       		.align	2
 4660              	.LC11:
 4661 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4661      65727920 
 4661      566F6C74 
 4661      6167653A 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 102


 4661      2025646D 
 4662              		.section	.text.print_ADC,"ax",%progbits
 4663              		.align	2
 4664              		.global	print_ADC
 4665              		.thumb
 4666              		.thumb_func
 4667              		.type	print_ADC, %function
 4668              	print_ADC:
 4669              	.LFB100:
1029:.\main.c      **** 
1030:.\main.c      **** void print_ADC()
1031:.\main.c      **** {
 4670              		.loc 1 1031 0
 4671              		.cfi_startproc
 4672              		@ args = 0, pretend = 0, frame = 24
 4673              		@ frame_needed = 1, uses_anonymous_args = 0
 4674 0000 80B5     		push	{r7, lr}
 4675              		.cfi_def_cfa_offset 8
 4676              		.cfi_offset 7, -8
 4677              		.cfi_offset 14, -4
 4678 0002 86B0     		sub	sp, sp, #24
 4679              		.cfi_def_cfa_offset 32
 4680 0004 00AF     		add	r7, sp, #0
 4681              		.cfi_def_cfa_register 7
1032:.\main.c      ****    //usbPutString("HII\n");
1033:.\main.c      ****     if(flag_receive_ADC == 1)
 4682              		.loc 1 1033 0
 4683 0006 274B     		ldr	r3, .L249
 4684 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4685 000a 012B     		cmp	r3, #1
 4686 000c 46D1     		bne	.L246
 4687              	.LBB12:
1034:.\main.c      ****     {
1035:.\main.c      ****         //usbPutString("AAA\r\n");
1036:.\main.c      ****         flag_receive_ADC = 0;
 4688              		.loc 1 1036 0
 4689 000e 254B     		ldr	r3, .L249
 4690 0010 0022     		movs	r2, #0
 4691 0012 1A70     		strb	r2, [r3]
1037:.\main.c      ****         
1038:.\main.c      ****        // int8 channel = ADC_
1039:.\main.c      ****         float scalingFactor = 0.972;
 4692              		.loc 1 1039 0
 4693 0014 244B     		ldr	r3, .L249+4
 4694 0016 7B61     		str	r3, [r7, #20]	@ float
1040:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4695              		.loc 1 1040 0
 4696 0018 244B     		ldr	r3, .L249+8
 4697 001a 1B88     		ldrh	r3, [r3]
 4698 001c 1BB2     		sxth	r3, r3
 4699 001e 41F28832 		movw	r2, #5000
 4700 0022 02FB03F3 		mul	r3, r2, r3
 4701 0026 002B     		cmp	r3, #0
 4702 0028 01DA     		bge	.L248
 4703 002a 03F6FF73 		addw	r3, r3, #4095
 4704              	.L248:
 4705 002e 1B13     		asrs	r3, r3, #12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 103


 4706 0030 1846     		mov	r0, r3
 4707 0032 FFF7FEFF 		bl	__aeabi_i2f
 4708 0036 0346     		mov	r3, r0
 4709 0038 1846     		mov	r0, r3
 4710 003a 7969     		ldr	r1, [r7, #20]	@ float
 4711 003c FFF7FEFF 		bl	__aeabi_fmul
 4712 0040 0346     		mov	r3, r0
 4713 0042 1846     		mov	r0, r3
 4714 0044 1946     		mov	r1, r3
 4715 0046 FFF7FEFF 		bl	__aeabi_fadd
 4716 004a 0346     		mov	r3, r0
 4717 004c 1846     		mov	r0, r3
 4718 004e FFF7FEFF 		bl	__aeabi_f2iz
 4719 0052 0346     		mov	r3, r0
 4720 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1041:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4721              		.loc 1 1041 0
 4722 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4723 005a 154B     		ldr	r3, .L249+12
 4724 005c 1B88     		ldrh	r3, [r3]
 4725 005e 1BB2     		sxth	r3, r3
 4726 0060 1A44     		add	r2, r2, r3
 4727 0062 144B     		ldr	r3, .L249+16
 4728 0064 1B88     		ldrh	r3, [r3]
 4729 0066 1BB2     		sxth	r3, r3
 4730 0068 1344     		add	r3, r3, r2
 4731 006a 134A     		ldr	r2, .L249+20
 4732 006c 82FB0312 		smull	r1, r2, r2, r3
 4733 0070 DB17     		asrs	r3, r3, #31
 4734 0072 D31A     		subs	r3, r2, r3
 4735 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1042:.\main.c      ****         prevVoltage2 = prevVoltage;
 4736              		.loc 1 1042 0
 4737 0076 0E4B     		ldr	r3, .L249+12
 4738 0078 1A88     		ldrh	r2, [r3]
 4739 007a 0E4B     		ldr	r3, .L249+16
 4740 007c 1A80     		strh	r2, [r3]	@ movhi
1043:.\main.c      ****         prevVoltage = converted_val;
 4741              		.loc 1 1043 0
 4742 007e 0C4A     		ldr	r2, .L249+12
 4743 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4744 0082 1380     		strh	r3, [r2]	@ movhi
1044:.\main.c      ****         
1045:.\main.c      ****         char result_str[16];
1046:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4745              		.loc 1 1046 0
 4746 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4747 0088 3A46     		mov	r2, r7
 4748 008a 1046     		mov	r0, r2
 4749 008c 0B49     		ldr	r1, .L249+24
 4750 008e 1A46     		mov	r2, r3
 4751 0090 FFF7FEFF 		bl	sprintf
1047:.\main.c      ****         
1048:.\main.c      ****         usbPutString(result_str);
 4752              		.loc 1 1048 0
 4753 0094 3B46     		mov	r3, r7
 4754 0096 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 104


 4755 0098 FFF7FEFF 		bl	usbPutString
 4756              	.L246:
 4757              	.LBE12:
1049:.\main.c      ****     }
1050:.\main.c      **** }
 4758              		.loc 1 1050 0
 4759 009c 1837     		adds	r7, r7, #24
 4760              		.cfi_def_cfa_offset 8
 4761 009e BD46     		mov	sp, r7
 4762              		.cfi_def_cfa_register 13
 4763              		@ sp needed
 4764 00a0 80BD     		pop	{r7, pc}
 4765              	.L250:
 4766 00a2 00BF     		.align	2
 4767              	.L249:
 4768 00a4 00000000 		.word	flag_receive_ADC
 4769 00a8 FED4783F 		.word	1064883454
 4770 00ac 00000000 		.word	adc_result
 4771 00b0 00000000 		.word	prevVoltage
 4772 00b4 00000000 		.word	prevVoltage2
 4773 00b8 56555555 		.word	1431655766
 4774 00bc DC000000 		.word	.LC11
 4775              		.cfi_endproc
 4776              	.LFE100:
 4777              		.size	print_ADC, .-print_ADC
 4778              		.section	.rodata
 4779              		.align	2
 4780              	.LC12:
 4781 00f4 52535349 		.ascii	"RSSI:\000"
 4781      3A00
 4782 00fa 0000     		.align	2
 4783              	.LC13:
 4784 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4784      00
 4785 0101 000000   		.align	2
 4786              	.LC14:
 4787 0104 726F626F 		.ascii	"robot_x:\000"
 4787      745F783A 
 4787      00
 4788 010d 000000   		.align	2
 4789              	.LC15:
 4790 0110 726F626F 		.ascii	"robot_y:\000"
 4790      745F793A 
 4790      00
 4791 0119 000000   		.align	2
 4792              	.LC16:
 4793 011c 726F626F 		.ascii	"robot_dir:\000"
 4793      745F6469 
 4793      723A00
 4794 0127 00       		.section	.text.print_RF,"ax",%progbits
 4795              		.align	2
 4796              		.global	print_RF
 4797              		.thumb
 4798              		.thumb_func
 4799              		.type	print_RF, %function
 4800              	print_RF:
 4801              	.LFB101:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 105


1051:.\main.c      **** 
1052:.\main.c      **** void print_RF()
1053:.\main.c      **** {
 4802              		.loc 1 1053 0
 4803              		.cfi_startproc
 4804              		@ args = 0, pretend = 0, frame = 16
 4805              		@ frame_needed = 1, uses_anonymous_args = 0
 4806 0000 80B5     		push	{r7, lr}
 4807              		.cfi_def_cfa_offset 8
 4808              		.cfi_offset 7, -8
 4809              		.cfi_offset 14, -4
 4810 0002 84B0     		sub	sp, sp, #16
 4811              		.cfi_def_cfa_offset 24
 4812 0004 00AF     		add	r7, sp, #0
 4813              		.cfi_def_cfa_register 7
1054:.\main.c      ****     if(flag_print_rf == 1)
 4814              		.loc 1 1054 0
 4815 0006 254B     		ldr	r3, .L253
 4816 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4817 000a 012B     		cmp	r3, #1
 4818 000c 42D1     		bne	.L251
 4819              	.LBB13:
1055:.\main.c      ****     {
1056:.\main.c      ****         char printString[16];
1057:.\main.c      ****         flag_print_rf = 0;
 4820              		.loc 1 1057 0
 4821 000e 234B     		ldr	r3, .L253
 4822 0010 0022     		movs	r2, #0
 4823 0012 1A70     		strb	r2, [r3]
1058:.\main.c      ****         usbPutString("RSSI:");
 4824              		.loc 1 1058 0
 4825 0014 2248     		ldr	r0, .L253+4
 4826 0016 FFF7FEFF 		bl	usbPutString
1059:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4827              		.loc 1 1059 0
 4828 001a 224B     		ldr	r3, .L253+8
 4829 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4830 001e 5BB2     		sxtb	r3, r3
 4831 0020 3A46     		mov	r2, r7
 4832 0022 1046     		mov	r0, r2
 4833 0024 2049     		ldr	r1, .L253+12
 4834 0026 1A46     		mov	r2, r3
 4835 0028 FFF7FEFF 		bl	sprintf
1060:.\main.c      ****         usbPutString(printString);
 4836              		.loc 1 1060 0
 4837 002c 3B46     		mov	r3, r7
 4838 002e 1846     		mov	r0, r3
 4839 0030 FFF7FEFF 		bl	usbPutString
1061:.\main.c      ****         usbPutString("robot_x:");
 4840              		.loc 1 1061 0
 4841 0034 1D48     		ldr	r0, .L253+16
 4842 0036 FFF7FEFF 		bl	usbPutString
1062:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4843              		.loc 1 1062 0
 4844 003a 1A4B     		ldr	r3, .L253+8
 4845 003c 5B88     		ldrh	r3, [r3, #2]
 4846 003e 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 106


 4847 0040 3A46     		mov	r2, r7
 4848 0042 1046     		mov	r0, r2
 4849 0044 1849     		ldr	r1, .L253+12
 4850 0046 1A46     		mov	r2, r3
 4851 0048 FFF7FEFF 		bl	sprintf
1063:.\main.c      ****         usbPutString(printString);
 4852              		.loc 1 1063 0
 4853 004c 3B46     		mov	r3, r7
 4854 004e 1846     		mov	r0, r3
 4855 0050 FFF7FEFF 		bl	usbPutString
1064:.\main.c      ****         usbPutString("robot_y:");
 4856              		.loc 1 1064 0
 4857 0054 1648     		ldr	r0, .L253+20
 4858 0056 FFF7FEFF 		bl	usbPutString
1065:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4859              		.loc 1 1065 0
 4860 005a 124B     		ldr	r3, .L253+8
 4861 005c 9B88     		ldrh	r3, [r3, #4]
 4862 005e 1BB2     		sxth	r3, r3
 4863 0060 3A46     		mov	r2, r7
 4864 0062 1046     		mov	r0, r2
 4865 0064 1049     		ldr	r1, .L253+12
 4866 0066 1A46     		mov	r2, r3
 4867 0068 FFF7FEFF 		bl	sprintf
1066:.\main.c      ****         usbPutString(printString);
 4868              		.loc 1 1066 0
 4869 006c 3B46     		mov	r3, r7
 4870 006e 1846     		mov	r0, r3
 4871 0070 FFF7FEFF 		bl	usbPutString
1067:.\main.c      ****         usbPutString("robot_dir:");
 4872              		.loc 1 1067 0
 4873 0074 0F48     		ldr	r0, .L253+24
 4874 0076 FFF7FEFF 		bl	usbPutString
1068:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4875              		.loc 1 1068 0
 4876 007a 0A4B     		ldr	r3, .L253+8
 4877 007c DB88     		ldrh	r3, [r3, #6]
 4878 007e 1BB2     		sxth	r3, r3
 4879 0080 3A46     		mov	r2, r7
 4880 0082 1046     		mov	r0, r2
 4881 0084 0849     		ldr	r1, .L253+12
 4882 0086 1A46     		mov	r2, r3
 4883 0088 FFF7FEFF 		bl	sprintf
1069:.\main.c      ****         usbPutString(printString);
 4884              		.loc 1 1069 0
 4885 008c 3B46     		mov	r3, r7
 4886 008e 1846     		mov	r0, r3
 4887 0090 FFF7FEFF 		bl	usbPutString
 4888              	.L251:
 4889              	.LBE13:
1070:.\main.c      ****     }
1071:.\main.c      **** }
 4890              		.loc 1 1071 0
 4891 0094 1037     		adds	r7, r7, #16
 4892              		.cfi_def_cfa_offset 8
 4893 0096 BD46     		mov	sp, r7
 4894              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 107


 4895              		@ sp needed
 4896 0098 80BD     		pop	{r7, pc}
 4897              	.L254:
 4898 009a 00BF     		.align	2
 4899              	.L253:
 4900 009c 00000000 		.word	flag_print_rf
 4901 00a0 F4000000 		.word	.LC12
 4902 00a4 00000000 		.word	system_state
 4903 00a8 FC000000 		.word	.LC13
 4904 00ac 04010000 		.word	.LC14
 4905 00b0 10010000 		.word	.LC15
 4906 00b4 1C010000 		.word	.LC16
 4907              		.cfi_endproc
 4908              	.LFE101:
 4909              		.size	print_RF, .-print_RF
 4910              		.section	.text.readFrontSensors,"ax",%progbits
 4911              		.align	2
 4912              		.global	readFrontSensors
 4913              		.thumb
 4914              		.thumb_func
 4915              		.type	readFrontSensors, %function
 4916              	readFrontSensors:
 4917              	.LFB102:
1072:.\main.c      **** 
1073:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1074:.\main.c      **** {
 4918              		.loc 1 1074 0
 4919              		.cfi_startproc
 4920              		@ args = 0, pretend = 0, frame = 8
 4921              		@ frame_needed = 1, uses_anonymous_args = 0
 4922 0000 90B5     		push	{r4, r7, lr}
 4923              		.cfi_def_cfa_offset 12
 4924              		.cfi_offset 4, -12
 4925              		.cfi_offset 7, -8
 4926              		.cfi_offset 14, -4
 4927 0002 83B0     		sub	sp, sp, #12
 4928              		.cfi_def_cfa_offset 24
 4929 0004 00AF     		add	r7, sp, #0
 4930              		.cfi_def_cfa_register 7
 4931 0006 7860     		str	r0, [r7, #4]
1075:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4932              		.loc 1 1075 0
 4933 0008 FFF7FEFF 		bl	FLSens_out_Read
 4934 000c 0346     		mov	r3, r0
 4935 000e 1A46     		mov	r2, r3
 4936 0010 7B68     		ldr	r3, [r7, #4]
 4937 0012 1A70     		strb	r2, [r3]
1076:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4938              		.loc 1 1076 0
 4939 0014 7B68     		ldr	r3, [r7, #4]
 4940 0016 5C1C     		adds	r4, r3, #1
 4941 0018 FFF7FEFF 		bl	NLSens_out_Read
 4942 001c 0346     		mov	r3, r0
 4943 001e 2370     		strb	r3, [r4]
1077:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4944              		.loc 1 1077 0
 4945 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 108


 4946 0022 9C1C     		adds	r4, r3, #2
 4947 0024 FFF7FEFF 		bl	MSens_out_Read
 4948 0028 0346     		mov	r3, r0
 4949 002a 2370     		strb	r3, [r4]
1078:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4950              		.loc 1 1078 0
 4951 002c 7B68     		ldr	r3, [r7, #4]
 4952 002e DC1C     		adds	r4, r3, #3
 4953 0030 FFF7FEFF 		bl	NRSens_out_Read
 4954 0034 0346     		mov	r3, r0
 4955 0036 2370     		strb	r3, [r4]
1079:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4956              		.loc 1 1079 0
 4957 0038 7B68     		ldr	r3, [r7, #4]
 4958 003a 1C1D     		adds	r4, r3, #4
 4959 003c FFF7FEFF 		bl	FRSens_out_Read
 4960 0040 0346     		mov	r3, r0
 4961 0042 2370     		strb	r3, [r4]
1080:.\main.c      **** }
 4962              		.loc 1 1080 0
 4963 0044 0C37     		adds	r7, r7, #12
 4964              		.cfi_def_cfa_offset 12
 4965 0046 BD46     		mov	sp, r7
 4966              		.cfi_def_cfa_register 13
 4967              		@ sp needed
 4968 0048 90BD     		pop	{r4, r7, pc}
 4969              		.cfi_endproc
 4970              	.LFE102:
 4971              		.size	readFrontSensors, .-readFrontSensors
 4972 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4973              		.align	2
 4974              		.global	usbPutString
 4975              		.thumb
 4976              		.thumb_func
 4977              		.type	usbPutString, %function
 4978              	usbPutString:
 4979              	.LFB103:
1081:.\main.c      **** 
1082:.\main.c      **** 
1083:.\main.c      **** //* ========================================
1084:.\main.c      **** void usbPutString(char *s)
1085:.\main.c      **** {
 4980              		.loc 1 1085 0
 4981              		.cfi_startproc
 4982              		@ args = 0, pretend = 0, frame = 16
 4983              		@ frame_needed = 1, uses_anonymous_args = 0
 4984 0000 80B5     		push	{r7, lr}
 4985              		.cfi_def_cfa_offset 8
 4986              		.cfi_offset 7, -8
 4987              		.cfi_offset 14, -4
 4988 0002 84B0     		sub	sp, sp, #16
 4989              		.cfi_def_cfa_offset 24
 4990 0004 00AF     		add	r7, sp, #0
 4991              		.cfi_def_cfa_register 7
 4992 0006 7860     		str	r0, [r7, #4]
1086:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1087:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 109


1088:.\main.c      **** //  length to 62 char (63rd char is a '!')
1089:.\main.c      ****     if (USE_USB && portOpen)
 4993              		.loc 1 1089 0
 4994 0008 154B     		ldr	r3, .L260
 4995 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4996 000c 002B     		cmp	r3, #0
 4997 000e 23D0     		beq	.L256
 4998              	.LBB14:
1090:.\main.c      ****     {
1091:.\main.c      ****             uint32 cnt = 0;
 4999              		.loc 1 1091 0
 5000 0010 0023     		movs	r3, #0
 5001 0012 FB60     		str	r3, [r7, #12]
1092:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5002              		.loc 1 1092 0
 5003 0014 0AE0     		b	.L258
 5004              	.L259:
1093:.\main.c      ****             {
1094:.\main.c      ****                 cnt++;
 5005              		.loc 1 1094 0
 5006 0016 FB68     		ldr	r3, [r7, #12]
 5007 0018 0133     		adds	r3, r3, #1
 5008 001a FB60     		str	r3, [r7, #12]
1095:.\main.c      ****                 if(cnt == 3000000){
 5009              		.loc 1 1095 0
 5010 001c FB68     		ldr	r3, [r7, #12]
 5011 001e 114A     		ldr	r2, .L260+4
 5012 0020 9342     		cmp	r3, r2
 5013 0022 03D1     		bne	.L258
1096:.\main.c      ****                     portOpen = 0;
 5014              		.loc 1 1096 0
 5015 0024 0E4B     		ldr	r3, .L260
 5016 0026 0022     		movs	r2, #0
 5017 0028 1A70     		strb	r2, [r3]
1097:.\main.c      ****                     return;
 5018              		.loc 1 1097 0
 5019 002a 15E0     		b	.L256
 5020              	.L258:
1092:.\main.c      ****             {
 5021              		.loc 1 1092 0
 5022 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5023 0030 0346     		mov	r3, r0
 5024 0032 002B     		cmp	r3, #0
 5025 0034 EFD0     		beq	.L259
1098:.\main.c      ****                 }
1099:.\main.c      ****             }
1100:.\main.c      ****             s[63]='\0';
 5026              		.loc 1 1100 0
 5027 0036 7B68     		ldr	r3, [r7, #4]
 5028 0038 3F33     		adds	r3, r3, #63
 5029 003a 0022     		movs	r2, #0
 5030 003c 1A70     		strb	r2, [r3]
1101:.\main.c      ****             s[62]='!';
 5031              		.loc 1 1101 0
 5032 003e 7B68     		ldr	r3, [r7, #4]
 5033 0040 3E33     		adds	r3, r3, #62
 5034 0042 2122     		movs	r2, #33
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 110


 5035 0044 1A70     		strb	r2, [r3]
1102:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5036              		.loc 1 1102 0
 5037 0046 7868     		ldr	r0, [r7, #4]
 5038 0048 FFF7FEFF 		bl	strlen
 5039 004c 0346     		mov	r3, r0
 5040 004e 9BB2     		uxth	r3, r3
 5041 0050 7868     		ldr	r0, [r7, #4]
 5042 0052 1946     		mov	r1, r3
 5043 0054 FFF7FEFF 		bl	USBUART_PutData
 5044              	.L256:
 5045              	.LBE14:
1103:.\main.c      ****     }
1104:.\main.c      **** }
 5046              		.loc 1 1104 0
 5047 0058 1037     		adds	r7, r7, #16
 5048              		.cfi_def_cfa_offset 8
 5049 005a BD46     		mov	sp, r7
 5050              		.cfi_def_cfa_register 13
 5051              		@ sp needed
 5052 005c 80BD     		pop	{r7, pc}
 5053              	.L261:
 5054 005e 00BF     		.align	2
 5055              	.L260:
 5056 0060 00000000 		.word	portOpen
 5057 0064 C0C62D00 		.word	3000000
 5058              		.cfi_endproc
 5059              	.LFE103:
 5060              		.size	usbPutString, .-usbPutString
 5061              		.section	.text.usbPutChar,"ax",%progbits
 5062              		.align	2
 5063              		.global	usbPutChar
 5064              		.thumb
 5065              		.thumb_func
 5066              		.type	usbPutChar, %function
 5067              	usbPutChar:
 5068              	.LFB104:
1105:.\main.c      **** //* ========================================
1106:.\main.c      **** void usbPutChar(char c)
1107:.\main.c      **** {
 5069              		.loc 1 1107 0
 5070              		.cfi_startproc
 5071              		@ args = 0, pretend = 0, frame = 16
 5072              		@ frame_needed = 1, uses_anonymous_args = 0
 5073 0000 80B5     		push	{r7, lr}
 5074              		.cfi_def_cfa_offset 8
 5075              		.cfi_offset 7, -8
 5076              		.cfi_offset 14, -4
 5077 0002 84B0     		sub	sp, sp, #16
 5078              		.cfi_def_cfa_offset 24
 5079 0004 00AF     		add	r7, sp, #0
 5080              		.cfi_def_cfa_register 7
 5081 0006 0346     		mov	r3, r0
 5082 0008 FB71     		strb	r3, [r7, #7]
1108:.\main.c      ****     if (USE_USB && portOpen)    
 5083              		.loc 1 1108 0
 5084 000a 0F4B     		ldr	r3, .L266
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 111


 5085 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5086 000e 002B     		cmp	r3, #0
 5087 0010 16D0     		beq	.L262
 5088              	.LBB15:
1109:.\main.c      ****     {    
1110:.\main.c      ****         uint32 cnt = 0;
 5089              		.loc 1 1110 0
 5090 0012 0023     		movs	r3, #0
 5091 0014 FB60     		str	r3, [r7, #12]
1111:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5092              		.loc 1 1111 0
 5093 0016 0AE0     		b	.L264
 5094              	.L265:
1112:.\main.c      ****             cnt++;
 5095              		.loc 1 1112 0
 5096 0018 FB68     		ldr	r3, [r7, #12]
 5097 001a 0133     		adds	r3, r3, #1
 5098 001c FB60     		str	r3, [r7, #12]
1113:.\main.c      ****             if(cnt == 3000000){
 5099              		.loc 1 1113 0
 5100 001e FB68     		ldr	r3, [r7, #12]
 5101 0020 0A4A     		ldr	r2, .L266+4
 5102 0022 9342     		cmp	r3, r2
 5103 0024 03D1     		bne	.L264
1114:.\main.c      ****                 portOpen = 0;
 5104              		.loc 1 1114 0
 5105 0026 084B     		ldr	r3, .L266
 5106 0028 0022     		movs	r2, #0
 5107 002a 1A70     		strb	r2, [r3]
1115:.\main.c      ****                 return;
 5108              		.loc 1 1115 0
 5109 002c 08E0     		b	.L262
 5110              	.L264:
1111:.\main.c      ****             cnt++;
 5111              		.loc 1 1111 0
 5112 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5113 0032 0346     		mov	r3, r0
 5114 0034 002B     		cmp	r3, #0
 5115 0036 EFD0     		beq	.L265
1116:.\main.c      ****             }
1117:.\main.c      ****         }
1118:.\main.c      ****         USBUART_PutChar(c);
 5116              		.loc 1 1118 0
 5117 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5118 003a 1846     		mov	r0, r3
 5119 003c FFF7FEFF 		bl	USBUART_PutChar
 5120              	.L262:
 5121              	.LBE15:
1119:.\main.c      ****     }    
1120:.\main.c      **** }
 5122              		.loc 1 1120 0
 5123 0040 1037     		adds	r7, r7, #16
 5124              		.cfi_def_cfa_offset 8
 5125 0042 BD46     		mov	sp, r7
 5126              		.cfi_def_cfa_register 13
 5127              		@ sp needed
 5128 0044 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 112


 5129              	.L267:
 5130 0046 00BF     		.align	2
 5131              	.L266:
 5132 0048 00000000 		.word	portOpen
 5133 004c C0C62D00 		.word	3000000
 5134              		.cfi_endproc
 5135              	.LFE104:
 5136              		.size	usbPutChar, .-usbPutChar
 5137              		.section	.text.uart_set_PWM,"ax",%progbits
 5138              		.align	2
 5139              		.global	uart_set_PWM
 5140              		.thumb
 5141              		.thumb_func
 5142              		.type	uart_set_PWM, %function
 5143              	uart_set_PWM:
 5144              	.LFB105:
1121:.\main.c      **** //* ========================================
1122:.\main.c      **** 
1123:.\main.c      **** void uart_set_PWM()
1124:.\main.c      **** {
 5145              		.loc 1 1124 0
 5146              		.cfi_startproc
 5147              		@ args = 0, pretend = 0, frame = 0
 5148              		@ frame_needed = 1, uses_anonymous_args = 0
 5149              		@ link register save eliminated.
 5150 0000 80B4     		push	{r7}
 5151              		.cfi_def_cfa_offset 4
 5152              		.cfi_offset 7, -4
 5153 0002 00AF     		add	r7, sp, #0
 5154              		.cfi_def_cfa_register 7
1125:.\main.c      ****     //removed from final implementation
1126:.\main.c      **** }
 5155              		.loc 1 1126 0
 5156 0004 BD46     		mov	sp, r7
 5157              		.cfi_def_cfa_register 13
 5158              		@ sp needed
 5159 0006 5DF8047B 		ldr	r7, [sp], #4
 5160              		.cfi_restore 7
 5161              		.cfi_def_cfa_offset 0
 5162 000a 7047     		bx	lr
 5163              		.cfi_endproc
 5164              	.LFE105:
 5165              		.size	uart_set_PWM, .-uart_set_PWM
 5166              		.text
 5167              	.Letext0:
 5168              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5169              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5170              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5171              		.file 5 ".\\vars.h"
 5172              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5173              		.file 7 ".\\pathfinder.h"
 5174              		.section	.debug_info,"",%progbits
 5175              	.Ldebug_info0:
 5176 0000 850E0000 		.4byte	0xe85
 5177 0004 0400     		.2byte	0x4
 5178 0006 00000000 		.4byte	.Ldebug_abbrev0
 5179 000a 04       		.byte	0x4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 113


 5180 000b 01       		.uleb128 0x1
 5181 000c B6040000 		.4byte	.LASF197
 5182 0010 01       		.byte	0x1
 5183 0011 94090000 		.4byte	.LASF198
 5184 0015 1C000000 		.4byte	.LASF199
 5185 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5186 001d 00000000 		.4byte	0
 5187 0021 00000000 		.4byte	.Ldebug_line0
 5188 0025 02       		.uleb128 0x2
 5189 0026 01       		.byte	0x1
 5190 0027 06       		.byte	0x6
 5191 0028 CE080000 		.4byte	.LASF0
 5192 002c 02       		.uleb128 0x2
 5193 002d 01       		.byte	0x1
 5194 002e 08       		.byte	0x8
 5195 002f 0B080000 		.4byte	.LASF1
 5196 0033 02       		.uleb128 0x2
 5197 0034 02       		.byte	0x2
 5198 0035 05       		.byte	0x5
 5199 0036 6C060000 		.4byte	.LASF2
 5200 003a 02       		.uleb128 0x2
 5201 003b 02       		.byte	0x2
 5202 003c 07       		.byte	0x7
 5203 003d DA080000 		.4byte	.LASF3
 5204 0041 03       		.uleb128 0x3
 5205 0042 D7000000 		.4byte	.LASF5
 5206 0046 02       		.byte	0x2
 5207 0047 3F       		.byte	0x3f
 5208 0048 4C000000 		.4byte	0x4c
 5209 004c 02       		.uleb128 0x2
 5210 004d 04       		.byte	0x4
 5211 004e 05       		.byte	0x5
 5212 004f A0060000 		.4byte	.LASF4
 5213 0053 03       		.uleb128 0x3
 5214 0054 19080000 		.4byte	.LASF6
 5215 0058 02       		.byte	0x2
 5216 0059 41       		.byte	0x41
 5217 005a 5E000000 		.4byte	0x5e
 5218 005e 02       		.uleb128 0x2
 5219 005f 04       		.byte	0x4
 5220 0060 07       		.byte	0x7
 5221 0061 A4070000 		.4byte	.LASF7
 5222 0065 02       		.uleb128 0x2
 5223 0066 08       		.byte	0x8
 5224 0067 05       		.byte	0x5
 5225 0068 80040000 		.4byte	.LASF8
 5226 006c 02       		.uleb128 0x2
 5227 006d 08       		.byte	0x8
 5228 006e 07       		.byte	0x7
 5229 006f 8E020000 		.4byte	.LASF9
 5230 0073 04       		.uleb128 0x4
 5231 0074 04       		.byte	0x4
 5232 0075 05       		.byte	0x5
 5233 0076 696E7400 		.ascii	"int\000"
 5234 007a 02       		.uleb128 0x2
 5235 007b 04       		.byte	0x4
 5236 007c 07       		.byte	0x7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 114


 5237 007d BF000000 		.4byte	.LASF10
 5238 0081 02       		.uleb128 0x2
 5239 0082 04       		.byte	0x4
 5240 0083 07       		.byte	0x7
 5241 0084 9B070000 		.4byte	.LASF11
 5242 0088 05       		.uleb128 0x5
 5243 0089 04       		.byte	0x4
 5244 008a 8E000000 		.4byte	0x8e
 5245 008e 02       		.uleb128 0x2
 5246 008f 01       		.byte	0x1
 5247 0090 08       		.byte	0x8
 5248 0091 BD030000 		.4byte	.LASF12
 5249 0095 03       		.uleb128 0x3
 5250 0096 C2070000 		.4byte	.LASF13
 5251 009a 03       		.byte	0x3
 5252 009b 2C       		.byte	0x2c
 5253 009c 41000000 		.4byte	0x41
 5254 00a0 03       		.uleb128 0x3
 5255 00a1 0E020000 		.4byte	.LASF14
 5256 00a5 03       		.byte	0x3
 5257 00a6 2D       		.byte	0x2d
 5258 00a7 53000000 		.4byte	0x53
 5259 00ab 06       		.uleb128 0x6
 5260 00ac 21090000 		.4byte	.LASF15
 5261 00b0 04       		.byte	0x4
 5262 00b1 9201     		.2byte	0x192
 5263 00b3 2C000000 		.4byte	0x2c
 5264 00b7 06       		.uleb128 0x6
 5265 00b8 10040000 		.4byte	.LASF16
 5266 00bc 04       		.byte	0x4
 5267 00bd 9301     		.2byte	0x193
 5268 00bf 3A000000 		.4byte	0x3a
 5269 00c3 06       		.uleb128 0x6
 5270 00c4 87050000 		.4byte	.LASF17
 5271 00c8 04       		.byte	0x4
 5272 00c9 9401     		.2byte	0x194
 5273 00cb 5E000000 		.4byte	0x5e
 5274 00cf 06       		.uleb128 0x6
 5275 00d0 17040000 		.4byte	.LASF18
 5276 00d4 04       		.byte	0x4
 5277 00d5 9501     		.2byte	0x195
 5278 00d7 25000000 		.4byte	0x25
 5279 00db 06       		.uleb128 0x6
 5280 00dc E1000000 		.4byte	.LASF19
 5281 00e0 04       		.byte	0x4
 5282 00e1 9601     		.2byte	0x196
 5283 00e3 33000000 		.4byte	0x33
 5284 00e7 02       		.uleb128 0x2
 5285 00e8 04       		.byte	0x4
 5286 00e9 04       		.byte	0x4
 5287 00ea 2E020000 		.4byte	.LASF20
 5288 00ee 02       		.uleb128 0x2
 5289 00ef 08       		.byte	0x8
 5290 00f0 04       		.byte	0x4
 5291 00f1 27090000 		.4byte	.LASF21
 5292 00f5 07       		.uleb128 0x7
 5293 00f6 A0000000 		.4byte	0xa0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 115


 5294 00fa 05010000 		.4byte	0x105
 5295 00fe 08       		.uleb128 0x8
 5296 00ff 81000000 		.4byte	0x81
 5297 0103 01       		.byte	0x1
 5298 0104 00       		.byte	0
 5299 0105 02       		.uleb128 0x2
 5300 0106 08       		.byte	0x8
 5301 0107 04       		.byte	0x4
 5302 0108 03060000 		.4byte	.LASF22
 5303 010c 09       		.uleb128 0x9
 5304 010d 66080000 		.4byte	.LASF31
 5305 0111 01       		.byte	0x1
 5306 0112 05       		.byte	0x5
 5307 0113 61       		.byte	0x61
 5308 0114 49010000 		.4byte	0x149
 5309 0118 0A       		.uleb128 0xa
 5310 0119 4D020000 		.4byte	.LASF23
 5311 011d 00       		.sleb128 0
 5312 011e 0A       		.uleb128 0xa
 5313 011f F4000000 		.4byte	.LASF24
 5314 0123 01       		.sleb128 1
 5315 0124 0A       		.uleb128 0xa
 5316 0125 5B000000 		.4byte	.LASF25
 5317 0129 02       		.sleb128 2
 5318 012a 0A       		.uleb128 0xa
 5319 012b F2050000 		.4byte	.LASF26
 5320 012f 03       		.sleb128 3
 5321 0130 0A       		.uleb128 0xa
 5322 0131 1F010000 		.4byte	.LASF27
 5323 0135 04       		.sleb128 4
 5324 0136 0A       		.uleb128 0xa
 5325 0137 F7010000 		.4byte	.LASF28
 5326 013b 05       		.sleb128 5
 5327 013c 0A       		.uleb128 0xa
 5328 013d 16070000 		.4byte	.LASF29
 5329 0141 06       		.sleb128 6
 5330 0142 0A       		.uleb128 0xa
 5331 0143 61090000 		.4byte	.LASF30
 5332 0147 07       		.sleb128 7
 5333 0148 00       		.byte	0
 5334 0149 09       		.uleb128 0x9
 5335 014a 5A010000 		.4byte	.LASF32
 5336 014e 01       		.byte	0x1
 5337 014f 05       		.byte	0x5
 5338 0150 62       		.byte	0x62
 5339 0151 86010000 		.4byte	0x186
 5340 0155 0A       		.uleb128 0xa
 5341 0156 E8060000 		.4byte	.LASF33
 5342 015a 00       		.sleb128 0
 5343 015b 0A       		.uleb128 0xa
 5344 015c 47040000 		.4byte	.LASF34
 5345 0160 01       		.sleb128 1
 5346 0161 0A       		.uleb128 0xa
 5347 0162 B7060000 		.4byte	.LASF35
 5348 0166 02       		.sleb128 2
 5349 0167 0A       		.uleb128 0xa
 5350 0168 B1010000 		.4byte	.LASF36
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 116


 5351 016c 03       		.sleb128 3
 5352 016d 0A       		.uleb128 0xa
 5353 016e FF080000 		.4byte	.LASF37
 5354 0172 04       		.sleb128 4
 5355 0173 0A       		.uleb128 0xa
 5356 0174 3F090000 		.4byte	.LASF38
 5357 0178 05       		.sleb128 5
 5358 0179 0A       		.uleb128 0xa
 5359 017a 70000000 		.4byte	.LASF39
 5360 017e 06       		.sleb128 6
 5361 017f 0A       		.uleb128 0xa
 5362 0180 09070000 		.4byte	.LASF40
 5363 0184 07       		.sleb128 7
 5364 0185 00       		.byte	0
 5365 0186 0B       		.uleb128 0xb
 5366 0187 A7050000 		.4byte	.LASF200
 5367 018b 20       		.byte	0x20
 5368 018c 05       		.byte	0x5
 5369 018d 68       		.byte	0x68
 5370 018e 5F020000 		.4byte	0x25f
 5371 0192 0C       		.uleb128 0xc
 5372 0193 C5050000 		.4byte	.LASF41
 5373 0197 05       		.byte	0x5
 5374 0198 69       		.byte	0x69
 5375 0199 CF000000 		.4byte	0xcf
 5376 019d 00       		.byte	0
 5377 019e 0C       		.uleb128 0xc
 5378 019f 47020000 		.4byte	.LASF42
 5379 01a3 05       		.byte	0x5
 5380 01a4 6A       		.byte	0x6a
 5381 01a5 AB000000 		.4byte	0xab
 5382 01a9 01       		.byte	0x1
 5383 01aa 0C       		.uleb128 0xc
 5384 01ab E3070000 		.4byte	.LASF43
 5385 01af 05       		.byte	0x5
 5386 01b0 6B       		.byte	0x6b
 5387 01b1 DB000000 		.4byte	0xdb
 5388 01b5 02       		.byte	0x2
 5389 01b6 0C       		.uleb128 0xc
 5390 01b7 91030000 		.4byte	.LASF44
 5391 01bb 05       		.byte	0x5
 5392 01bc 6C       		.byte	0x6c
 5393 01bd DB000000 		.4byte	0xdb
 5394 01c1 04       		.byte	0x4
 5395 01c2 0C       		.uleb128 0xc
 5396 01c3 ED080000 		.4byte	.LASF45
 5397 01c7 05       		.byte	0x5
 5398 01c8 6D       		.byte	0x6d
 5399 01c9 DB000000 		.4byte	0xdb
 5400 01cd 06       		.byte	0x6
 5401 01ce 0C       		.uleb128 0xc
 5402 01cf 67090000 		.4byte	.LASF46
 5403 01d3 05       		.byte	0x5
 5404 01d4 6E       		.byte	0x6e
 5405 01d5 DB000000 		.4byte	0xdb
 5406 01d9 08       		.byte	0x8
 5407 01da 0C       		.uleb128 0xc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 117


 5408 01db 4D050000 		.4byte	.LASF47
 5409 01df 05       		.byte	0x5
 5410 01e0 6F       		.byte	0x6f
 5411 01e1 DB000000 		.4byte	0xdb
 5412 01e5 0A       		.byte	0xa
 5413 01e6 0C       		.uleb128 0xc
 5414 01e7 C2030000 		.4byte	.LASF48
 5415 01eb 05       		.byte	0x5
 5416 01ec 70       		.byte	0x70
 5417 01ed DB000000 		.4byte	0xdb
 5418 01f1 0C       		.byte	0xc
 5419 01f2 0C       		.uleb128 0xc
 5420 01f3 D4050000 		.4byte	.LASF49
 5421 01f7 05       		.byte	0x5
 5422 01f8 71       		.byte	0x71
 5423 01f9 DB000000 		.4byte	0xdb
 5424 01fd 0E       		.byte	0xe
 5425 01fe 0C       		.uleb128 0xc
 5426 01ff 9B040000 		.4byte	.LASF50
 5427 0203 05       		.byte	0x5
 5428 0204 72       		.byte	0x72
 5429 0205 DB000000 		.4byte	0xdb
 5430 0209 10       		.byte	0x10
 5431 020a 0C       		.uleb128 0xc
 5432 020b 5B070000 		.4byte	.LASF51
 5433 020f 05       		.byte	0x5
 5434 0210 73       		.byte	0x73
 5435 0211 DB000000 		.4byte	0xdb
 5436 0215 12       		.byte	0x12
 5437 0216 0C       		.uleb128 0xc
 5438 0217 8B090000 		.4byte	.LASF52
 5439 021b 05       		.byte	0x5
 5440 021c 74       		.byte	0x74
 5441 021d DB000000 		.4byte	0xdb
 5442 0221 14       		.byte	0x14
 5443 0222 0C       		.uleb128 0xc
 5444 0223 29040000 		.4byte	.LASF53
 5445 0227 05       		.byte	0x5
 5446 0228 75       		.byte	0x75
 5447 0229 DB000000 		.4byte	0xdb
 5448 022d 16       		.byte	0x16
 5449 022e 0C       		.uleb128 0xc
 5450 022f 52010000 		.4byte	.LASF54
 5451 0233 05       		.byte	0x5
 5452 0234 76       		.byte	0x76
 5453 0235 DB000000 		.4byte	0xdb
 5454 0239 18       		.byte	0x18
 5455 023a 0C       		.uleb128 0xc
 5456 023b FD030000 		.4byte	.LASF55
 5457 023f 05       		.byte	0x5
 5458 0240 77       		.byte	0x77
 5459 0241 DB000000 		.4byte	0xdb
 5460 0245 1A       		.byte	0x1a
 5461 0246 0C       		.uleb128 0xc
 5462 0247 44050000 		.4byte	.LASF56
 5463 024b 05       		.byte	0x5
 5464 024c 78       		.byte	0x78
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 118


 5465 024d DB000000 		.4byte	0xdb
 5466 0251 1C       		.byte	0x1c
 5467 0252 0C       		.uleb128 0xc
 5468 0253 17020000 		.4byte	.LASF57
 5469 0257 05       		.byte	0x5
 5470 0258 79       		.byte	0x79
 5471 0259 DB000000 		.4byte	0xdb
 5472 025d 1E       		.byte	0x1e
 5473 025e 00       		.byte	0
 5474 025f 0D       		.uleb128 0xd
 5475 0260 0E090000 		.4byte	.LASF58
 5476 0264 01       		.byte	0x1
 5477 0265 61       		.byte	0x61
 5478 0266 00000000 		.4byte	.LFB63
 5479 026a 0C000000 		.4byte	.LFE63-.LFB63
 5480 026e 01       		.uleb128 0x1
 5481 026f 9C       		.byte	0x9c
 5482 0270 0E       		.uleb128 0xe
 5483 0271 63070000 		.4byte	.LASF59
 5484 0275 01       		.byte	0x1
 5485 0276 67       		.byte	0x67
 5486 0277 00000000 		.4byte	.LFB64
 5487 027b 2C000000 		.4byte	.LFE64-.LFB64
 5488 027f 01       		.uleb128 0x1
 5489 0280 9C       		.byte	0x9c
 5490 0281 0E       		.uleb128 0xe
 5491 0282 24020000 		.4byte	.LASF60
 5492 0286 01       		.byte	0x1
 5493 0287 70       		.byte	0x70
 5494 0288 00000000 		.4byte	.LFB65
 5495 028c A4010000 		.4byte	.LFE65-.LFB65
 5496 0290 01       		.uleb128 0x1
 5497 0291 9C       		.byte	0x9c
 5498 0292 0F       		.uleb128 0xf
 5499 0293 BE020000 		.4byte	.LASF66
 5500 0297 01       		.byte	0x1
 5501 0298 95       		.byte	0x95
 5502 0299 00000000 		.4byte	.LFB66
 5503 029d 34010000 		.4byte	.LFE66-.LFB66
 5504 02a1 01       		.uleb128 0x1
 5505 02a2 9C       		.byte	0x9c
 5506 02a3 DC020000 		.4byte	0x2dc
 5507 02a7 10       		.uleb128 0x10
 5508 02a8 0E000000 		.4byte	.LBB2
 5509 02ac 64000000 		.4byte	.LBE2-.LBB2
 5510 02b0 C3020000 		.4byte	0x2c3
 5511 02b4 11       		.uleb128 0x11
 5512 02b5 05040000 		.4byte	.LASF61
 5513 02b9 01       		.byte	0x1
 5514 02ba 99       		.byte	0x99
 5515 02bb B7000000 		.4byte	0xb7
 5516 02bf 02       		.uleb128 0x2
 5517 02c0 91       		.byte	0x91
 5518 02c1 76       		.sleb128 -10
 5519 02c2 00       		.byte	0
 5520 02c3 12       		.uleb128 0x12
 5521 02c4 7E000000 		.4byte	.LBB3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 119


 5522 02c8 64000000 		.4byte	.LBE3-.LBB3
 5523 02cc 11       		.uleb128 0x11
 5524 02cd 05040000 		.4byte	.LASF61
 5525 02d1 01       		.byte	0x1
 5526 02d2 A5       		.byte	0xa5
 5527 02d3 B7000000 		.4byte	0xb7
 5528 02d7 02       		.uleb128 0x2
 5529 02d8 91       		.byte	0x91
 5530 02d9 74       		.sleb128 -12
 5531 02da 00       		.byte	0
 5532 02db 00       		.byte	0
 5533 02dc 0D       		.uleb128 0xd
 5534 02dd 38080000 		.4byte	.LASF62
 5535 02e1 01       		.byte	0x1
 5536 02e2 BB       		.byte	0xbb
 5537 02e3 00000000 		.4byte	.LFB67
 5538 02e7 20000000 		.4byte	.LFE67-.LFB67
 5539 02eb 01       		.uleb128 0x1
 5540 02ec 9C       		.byte	0x9c
 5541 02ed 0E       		.uleb128 0xe
 5542 02ee 44030000 		.4byte	.LASF63
 5543 02f2 01       		.byte	0x1
 5544 02f3 C2       		.byte	0xc2
 5545 02f4 00000000 		.4byte	.LFB68
 5546 02f8 28000000 		.4byte	.LFE68-.LFB68
 5547 02fc 01       		.uleb128 0x1
 5548 02fd 9C       		.byte	0x9c
 5549 02fe 0E       		.uleb128 0xe
 5550 02ff 0F060000 		.4byte	.LASF64
 5551 0303 01       		.byte	0x1
 5552 0304 CB       		.byte	0xcb
 5553 0305 00000000 		.4byte	.LFB69
 5554 0309 0A000000 		.4byte	.LFE69-.LFB69
 5555 030d 01       		.uleb128 0x1
 5556 030e 9C       		.byte	0x9c
 5557 030f 0E       		.uleb128 0xe
 5558 0310 2C060000 		.4byte	.LASF65
 5559 0314 01       		.byte	0x1
 5560 0315 D0       		.byte	0xd0
 5561 0316 00000000 		.4byte	.LFB70
 5562 031a 28000000 		.4byte	.LFE70-.LFB70
 5563 031e 01       		.uleb128 0x1
 5564 031f 9C       		.byte	0x9c
 5565 0320 13       		.uleb128 0x13
 5566 0321 09090000 		.4byte	.LASF67
 5567 0325 01       		.byte	0x1
 5568 0326 DB       		.byte	0xdb
 5569 0327 73000000 		.4byte	0x73
 5570 032b 00000000 		.4byte	.LFB71
 5571 032f 84060000 		.4byte	.LFE71-.LFB71
 5572 0333 01       		.uleb128 0x1
 5573 0334 9C       		.byte	0x9c
 5574 0335 09040000 		.4byte	0x409
 5575 0339 14       		.uleb128 0x14
 5576 033a 35030000 		.4byte	.LASF68
 5577 033e 01       		.byte	0x1
 5578 033f 1401     		.2byte	0x114
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 120


 5579 0341 B7000000 		.4byte	0xb7
 5580 0345 02       		.uleb128 0x2
 5581 0346 91       		.byte	0x91
 5582 0347 76       		.sleb128 -10
 5583 0348 12       		.uleb128 0x12
 5584 0349 38010000 		.4byte	.LBB4
 5585 034d A2040000 		.4byte	.LBE4-.LBB4
 5586 0351 14       		.uleb128 0x14
 5587 0352 AD040000 		.4byte	.LASF69
 5588 0356 01       		.byte	0x1
 5589 0357 4B01     		.2byte	0x14b
 5590 0359 8E000000 		.4byte	0x8e
 5591 035d 02       		.uleb128 0x2
 5592 035e 91       		.byte	0x91
 5593 035f 75       		.sleb128 -11
 5594 0360 10       		.uleb128 0x10
 5595 0361 84010000 		.4byte	.LBB5
 5596 0365 E8010000 		.4byte	.LBE5-.LBB5
 5597 0369 96030000 		.4byte	0x396
 5598 036d 15       		.uleb128 0x15
 5599 036e 6D657300 		.ascii	"mes\000"
 5600 0372 01       		.byte	0x1
 5601 0373 5201     		.2byte	0x152
 5602 0375 09040000 		.4byte	0x409
 5603 0379 02       		.uleb128 0x2
 5604 037a 91       		.byte	0x91
 5605 037b 60       		.sleb128 -32
 5606 037c 12       		.uleb128 0x12
 5607 037d AC010000 		.4byte	.LBB6
 5608 0381 C0010000 		.4byte	.LBE6-.LBB6
 5609 0385 14       		.uleb128 0x14
 5610 0386 1C040000 		.4byte	.LASF70
 5611 038a 01       		.byte	0x1
 5612 038b 6301     		.2byte	0x163
 5613 038d AB000000 		.4byte	0xab
 5614 0391 02       		.uleb128 0x2
 5615 0392 91       		.byte	0x91
 5616 0393 74       		.sleb128 -12
 5617 0394 00       		.byte	0
 5618 0395 00       		.byte	0
 5619 0396 10       		.uleb128 0x10
 5620 0397 C6030000 		.4byte	.LBB7
 5621 039b 30000000 		.4byte	.LBE7-.LBB7
 5622 039f B3030000 		.4byte	0x3b3
 5623 03a3 14       		.uleb128 0x14
 5624 03a4 FA000000 		.4byte	.LASF71
 5625 03a8 01       		.byte	0x1
 5626 03a9 9A01     		.2byte	0x19a
 5627 03ab 8E000000 		.4byte	0x8e
 5628 03af 02       		.uleb128 0x2
 5629 03b0 91       		.byte	0x91
 5630 03b1 71       		.sleb128 -15
 5631 03b2 00       		.byte	0
 5632 03b3 10       		.uleb128 0x10
 5633 03b4 16040000 		.4byte	.LBB8
 5634 03b8 D4000000 		.4byte	.LBE8-.LBB8
 5635 03bc DF030000 		.4byte	0x3df
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 121


 5636 03c0 15       		.uleb128 0x15
 5637 03c1 6D657300 		.ascii	"mes\000"
 5638 03c5 01       		.byte	0x1
 5639 03c6 A901     		.2byte	0x1a9
 5640 03c8 09040000 		.4byte	0x409
 5641 03cc 02       		.uleb128 0x2
 5642 03cd 91       		.byte	0x91
 5643 03ce 50       		.sleb128 -48
 5644 03cf 14       		.uleb128 0x14
 5645 03d0 1C040000 		.4byte	.LASF70
 5646 03d4 01       		.byte	0x1
 5647 03d5 AD01     		.2byte	0x1ad
 5648 03d7 AB000000 		.4byte	0xab
 5649 03db 02       		.uleb128 0x2
 5650 03dc 91       		.byte	0x91
 5651 03dd 73       		.sleb128 -13
 5652 03de 00       		.byte	0
 5653 03df 12       		.uleb128 0x12
 5654 03e0 06050000 		.4byte	.LBB9
 5655 03e4 CA000000 		.4byte	.LBE9-.LBB9
 5656 03e8 15       		.uleb128 0x15
 5657 03e9 6D657300 		.ascii	"mes\000"
 5658 03ed 01       		.byte	0x1
 5659 03ee CE01     		.2byte	0x1ce
 5660 03f0 09040000 		.4byte	0x409
 5661 03f4 02       		.uleb128 0x2
 5662 03f5 91       		.byte	0x91
 5663 03f6 40       		.sleb128 -64
 5664 03f7 14       		.uleb128 0x14
 5665 03f8 1C040000 		.4byte	.LASF70
 5666 03fc 01       		.byte	0x1
 5667 03fd D201     		.2byte	0x1d2
 5668 03ff AB000000 		.4byte	0xab
 5669 0403 02       		.uleb128 0x2
 5670 0404 91       		.byte	0x91
 5671 0405 72       		.sleb128 -14
 5672 0406 00       		.byte	0
 5673 0407 00       		.byte	0
 5674 0408 00       		.byte	0
 5675 0409 07       		.uleb128 0x7
 5676 040a 8E000000 		.4byte	0x8e
 5677 040e 19040000 		.4byte	0x419
 5678 0412 08       		.uleb128 0x8
 5679 0413 81000000 		.4byte	0x81
 5680 0417 0F       		.byte	0xf
 5681 0418 00       		.byte	0
 5682 0419 16       		.uleb128 0x16
 5683 041a 47090000 		.4byte	.LASF77
 5684 041e 01       		.byte	0x1
 5685 041f 3C02     		.2byte	0x23c
 5686 0421 00000000 		.4byte	.LFB72
 5687 0425 60010000 		.4byte	.LFE72-.LFB72
 5688 0429 01       		.uleb128 0x1
 5689 042a 9C       		.byte	0x9c
 5690 042b 67040000 		.4byte	0x467
 5691 042f 12       		.uleb128 0x12
 5692 0430 10000000 		.4byte	.LBB10
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 122


 5693 0434 34010000 		.4byte	.LBE10-.LBB10
 5694 0438 14       		.uleb128 0x14
 5695 0439 45010000 		.4byte	.LASF72
 5696 043d 01       		.byte	0x1
 5697 043e 4202     		.2byte	0x242
 5698 0440 B7000000 		.4byte	0xb7
 5699 0444 02       		.uleb128 0x2
 5700 0445 91       		.byte	0x91
 5701 0446 76       		.sleb128 -10
 5702 0447 14       		.uleb128 0x14
 5703 0448 B6070000 		.4byte	.LASF73
 5704 044c 01       		.byte	0x1
 5705 044d 4302     		.2byte	0x243
 5706 044f 67040000 		.4byte	0x467
 5707 0453 02       		.uleb128 0x2
 5708 0454 91       		.byte	0x91
 5709 0455 68       		.sleb128 -24
 5710 0456 14       		.uleb128 0x14
 5711 0457 53020000 		.4byte	.LASF74
 5712 045b 01       		.byte	0x1
 5713 045c 4402     		.2byte	0x244
 5714 045e 67040000 		.4byte	0x467
 5715 0462 02       		.uleb128 0x2
 5716 0463 91       		.byte	0x91
 5717 0464 5C       		.sleb128 -36
 5718 0465 00       		.byte	0
 5719 0466 00       		.byte	0
 5720 0467 07       		.uleb128 0x7
 5721 0468 8E000000 		.4byte	0x8e
 5722 046c 77040000 		.4byte	0x477
 5723 0470 08       		.uleb128 0x8
 5724 0471 81000000 		.4byte	0x81
 5725 0475 0B       		.byte	0xb
 5726 0476 00       		.byte	0
 5727 0477 17       		.uleb128 0x17
 5728 0478 DB030000 		.4byte	.LASF75
 5729 047c 01       		.byte	0x1
 5730 047d 7D02     		.2byte	0x27d
 5731 047f 00000000 		.4byte	.LFB73
 5732 0483 18000000 		.4byte	.LFE73-.LFB73
 5733 0487 01       		.uleb128 0x1
 5734 0488 9C       		.byte	0x9c
 5735 0489 9D040000 		.4byte	0x49d
 5736 048d 18       		.uleb128 0x18
 5737 048e 64697200 		.ascii	"dir\000"
 5738 0492 01       		.byte	0x1
 5739 0493 7D02     		.2byte	0x27d
 5740 0495 AB000000 		.4byte	0xab
 5741 0499 02       		.uleb128 0x2
 5742 049a 91       		.byte	0x91
 5743 049b 77       		.sleb128 -9
 5744 049c 00       		.byte	0
 5745 049d 17       		.uleb128 0x17
 5746 049e 3B040000 		.4byte	.LASF76
 5747 04a2 01       		.byte	0x1
 5748 04a3 8202     		.2byte	0x282
 5749 04a5 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 123


 5750 04a9 18000000 		.4byte	.LFE74-.LFB74
 5751 04ad 01       		.uleb128 0x1
 5752 04ae 9C       		.byte	0x9c
 5753 04af C3040000 		.4byte	0x4c3
 5754 04b3 18       		.uleb128 0x18
 5755 04b4 64697200 		.ascii	"dir\000"
 5756 04b8 01       		.byte	0x1
 5757 04b9 8202     		.2byte	0x282
 5758 04bb AB000000 		.4byte	0xab
 5759 04bf 02       		.uleb128 0x2
 5760 04c0 91       		.byte	0x91
 5761 04c1 77       		.sleb128 -9
 5762 04c2 00       		.byte	0
 5763 04c3 19       		.uleb128 0x19
 5764 04c4 6C080000 		.4byte	.LASF78
 5765 04c8 01       		.byte	0x1
 5766 04c9 8702     		.2byte	0x287
 5767 04cb 00000000 		.4byte	.LFB75
 5768 04cf 54000000 		.4byte	.LFE75-.LFB75
 5769 04d3 01       		.uleb128 0x1
 5770 04d4 9C       		.byte	0x9c
 5771 04d5 E9040000 		.4byte	0x4e9
 5772 04d9 15       		.uleb128 0x15
 5773 04da 6D657300 		.ascii	"mes\000"
 5774 04de 01       		.byte	0x1
 5775 04df 8C02     		.2byte	0x28c
 5776 04e1 09040000 		.4byte	0x409
 5777 04e5 02       		.uleb128 0x2
 5778 04e6 91       		.byte	0x91
 5779 04e7 68       		.sleb128 -24
 5780 04e8 00       		.byte	0
 5781 04e9 17       		.uleb128 0x17
 5782 04ea 34020000 		.4byte	.LASF79
 5783 04ee 01       		.byte	0x1
 5784 04ef 9102     		.2byte	0x291
 5785 04f1 00000000 		.4byte	.LFB76
 5786 04f5 F4000000 		.4byte	.LFE76-.LFB76
 5787 04f9 01       		.uleb128 0x1
 5788 04fa 9C       		.byte	0x9c
 5789 04fb 3C050000 		.4byte	0x53c
 5790 04ff 1A       		.uleb128 0x1a
 5791 0500 34070000 		.4byte	.LASF80
 5792 0504 01       		.byte	0x1
 5793 0505 9102     		.2byte	0x291
 5794 0507 EE000000 		.4byte	0xee
 5795 050b 02       		.uleb128 0x2
 5796 050c 91       		.byte	0x91
 5797 050d 68       		.sleb128 -24
 5798 050e 1A       		.uleb128 0x1a
 5799 050f 68040000 		.4byte	.LASF81
 5800 0513 01       		.byte	0x1
 5801 0514 9102     		.2byte	0x291
 5802 0516 EE000000 		.4byte	0xee
 5803 051a 02       		.uleb128 0x2
 5804 051b 91       		.byte	0x91
 5805 051c 60       		.sleb128 -32
 5806 051d 14       		.uleb128 0x14
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 124


 5807 051e 6C020000 		.4byte	.LASF82
 5808 0522 01       		.byte	0x1
 5809 0523 A602     		.2byte	0x2a6
 5810 0525 DB000000 		.4byte	0xdb
 5811 0529 02       		.uleb128 0x2
 5812 052a 91       		.byte	0x91
 5813 052b 76       		.sleb128 -10
 5814 052c 14       		.uleb128 0x14
 5815 052d 9B050000 		.4byte	.LASF83
 5816 0531 01       		.byte	0x1
 5817 0532 A702     		.2byte	0x2a7
 5818 0534 DB000000 		.4byte	0xdb
 5819 0538 02       		.uleb128 0x2
 5820 0539 91       		.byte	0x91
 5821 053a 74       		.sleb128 -12
 5822 053b 00       		.byte	0
 5823 053c 1B       		.uleb128 0x1b
 5824 053d 7D080000 		.4byte	.LASF84
 5825 0541 01       		.byte	0x1
 5826 0542 AD02     		.2byte	0x2ad
 5827 0544 00000000 		.4byte	.LFB77
 5828 0548 18000000 		.4byte	.LFE77-.LFB77
 5829 054c 01       		.uleb128 0x1
 5830 054d 9C       		.byte	0x9c
 5831 054e 1B       		.uleb128 0x1b
 5832 054f AB090000 		.4byte	.LASF85
 5833 0553 01       		.byte	0x1
 5834 0554 B302     		.2byte	0x2b3
 5835 0556 00000000 		.4byte	.LFB78
 5836 055a 18000000 		.4byte	.LFE78-.LFB78
 5837 055e 01       		.uleb128 0x1
 5838 055f 9C       		.byte	0x9c
 5839 0560 1B       		.uleb128 0x1b
 5840 0561 EE070000 		.4byte	.LASF86
 5841 0565 01       		.byte	0x1
 5842 0566 B902     		.2byte	0x2b9
 5843 0568 00000000 		.4byte	.LFB79
 5844 056c 22000000 		.4byte	.LFE79-.LFB79
 5845 0570 01       		.uleb128 0x1
 5846 0571 9C       		.byte	0x9c
 5847 0572 1B       		.uleb128 0x1b
 5848 0573 77020000 		.4byte	.LASF87
 5849 0577 01       		.byte	0x1
 5850 0578 BF02     		.2byte	0x2bf
 5851 057a 00000000 		.4byte	.LFB80
 5852 057e 1C000000 		.4byte	.LFE80-.LFB80
 5853 0582 01       		.uleb128 0x1
 5854 0583 9C       		.byte	0x9c
 5855 0584 1B       		.uleb128 0x1b
 5856 0585 51070000 		.4byte	.LASF88
 5857 0589 01       		.byte	0x1
 5858 058a C402     		.2byte	0x2c4
 5859 058c 00000000 		.4byte	.LFB81
 5860 0590 34000000 		.4byte	.LFE81-.LFB81
 5861 0594 01       		.uleb128 0x1
 5862 0595 9C       		.byte	0x9c
 5863 0596 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 125


 5864 0597 85020000 		.4byte	.LASF89
 5865 059b 01       		.byte	0x1
 5866 059c C902     		.2byte	0x2c9
 5867 059e 00000000 		.4byte	.LFB82
 5868 05a2 38000000 		.4byte	.LFE82-.LFB82
 5869 05a6 01       		.uleb128 0x1
 5870 05a7 9C       		.byte	0x9c
 5871 05a8 1B       		.uleb128 0x1b
 5872 05a9 F7030000 		.4byte	.LASF90
 5873 05ad 01       		.byte	0x1
 5874 05ae CE02     		.2byte	0x2ce
 5875 05b0 00000000 		.4byte	.LFB83
 5876 05b4 4C000000 		.4byte	.LFE83-.LFB83
 5877 05b8 01       		.uleb128 0x1
 5878 05b9 9C       		.byte	0x9c
 5879 05ba 1B       		.uleb128 0x1b
 5880 05bb D8020000 		.4byte	.LASF91
 5881 05bf 01       		.byte	0x1
 5882 05c0 D302     		.2byte	0x2d3
 5883 05c2 00000000 		.4byte	.LFB84
 5884 05c6 38000000 		.4byte	.LFE84-.LFB84
 5885 05ca 01       		.uleb128 0x1
 5886 05cb 9C       		.byte	0x9c
 5887 05cc 1B       		.uleb128 0x1b
 5888 05cd A9060000 		.4byte	.LASF92
 5889 05d1 01       		.byte	0x1
 5890 05d2 DC02     		.2byte	0x2dc
 5891 05d4 00000000 		.4byte	.LFB85
 5892 05d8 38000000 		.4byte	.LFE85-.LFB85
 5893 05dc 01       		.uleb128 0x1
 5894 05dd 9C       		.byte	0x9c
 5895 05de 1B       		.uleb128 0x1b
 5896 05df 81060000 		.4byte	.LASF93
 5897 05e3 01       		.byte	0x1
 5898 05e4 E502     		.2byte	0x2e5
 5899 05e6 00000000 		.4byte	.LFB86
 5900 05ea 38000000 		.4byte	.LFE86-.LFB86
 5901 05ee 01       		.uleb128 0x1
 5902 05ef 9C       		.byte	0x9c
 5903 05f0 1B       		.uleb128 0x1b
 5904 05f1 02020000 		.4byte	.LASF94
 5905 05f5 01       		.byte	0x1
 5906 05f6 EE02     		.2byte	0x2ee
 5907 05f8 00000000 		.4byte	.LFB87
 5908 05fc 14000000 		.4byte	.LFE87-.LFB87
 5909 0600 01       		.uleb128 0x1
 5910 0601 9C       		.byte	0x9c
 5911 0602 1C       		.uleb128 0x1c
 5912 0603 EE020000 		.4byte	.LASF95
 5913 0607 01       		.byte	0x1
 5914 0608 F302     		.2byte	0x2f3
 5915 060a 00000000 		.4byte	.LFB88
 5916 060e 18000000 		.4byte	.LFE88-.LFB88
 5917 0612 01       		.uleb128 0x1
 5918 0613 9C       		.byte	0x9c
 5919 0614 1C       		.uleb128 0x1c
 5920 0615 A3040000 		.4byte	.LASF96
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 126


 5921 0619 01       		.byte	0x1
 5922 061a F702     		.2byte	0x2f7
 5923 061c 00000000 		.4byte	.LFB89
 5924 0620 18000000 		.4byte	.LFE89-.LFB89
 5925 0624 01       		.uleb128 0x1
 5926 0625 9C       		.byte	0x9c
 5927 0626 1C       		.uleb128 0x1c
 5928 0627 B6090000 		.4byte	.LASF97
 5929 062b 01       		.byte	0x1
 5930 062c FC02     		.2byte	0x2fc
 5931 062e 00000000 		.4byte	.LFB90
 5932 0632 18000000 		.4byte	.LFE90-.LFB90
 5933 0636 01       		.uleb128 0x1
 5934 0637 9C       		.byte	0x9c
 5935 0638 1C       		.uleb128 0x1c
 5936 0639 82030000 		.4byte	.LASF98
 5937 063d 01       		.byte	0x1
 5938 063e 0003     		.2byte	0x300
 5939 0640 00000000 		.4byte	.LFB91
 5940 0644 18000000 		.4byte	.LFE91-.LFB91
 5941 0648 01       		.uleb128 0x1
 5942 0649 9C       		.byte	0x9c
 5943 064a 17       		.uleb128 0x17
 5944 064b D8060000 		.4byte	.LASF99
 5945 064f 01       		.byte	0x1
 5946 0650 0703     		.2byte	0x307
 5947 0652 00000000 		.4byte	.LFB92
 5948 0656 B8000000 		.4byte	.LFE92-.LFB92
 5949 065a 01       		.uleb128 0x1
 5950 065b 9C       		.byte	0x9c
 5951 065c 70060000 		.4byte	0x670
 5952 0660 14       		.uleb128 0x14
 5953 0661 55050000 		.4byte	.LASF100
 5954 0665 01       		.byte	0x1
 5955 0666 0803     		.2byte	0x308
 5956 0668 8E000000 		.4byte	0x8e
 5957 066c 02       		.uleb128 0x2
 5958 066d 91       		.byte	0x91
 5959 066e 6F       		.sleb128 -17
 5960 066f 00       		.byte	0
 5961 0670 17       		.uleb128 0x17
 5962 0671 FA050000 		.4byte	.LASF101
 5963 0675 01       		.byte	0x1
 5964 0676 2403     		.2byte	0x324
 5965 0678 00000000 		.4byte	.LFB93
 5966 067c B8030000 		.4byte	.LFE93-.LFB93
 5967 0680 01       		.uleb128 0x1
 5968 0681 9C       		.byte	0x9c
 5969 0682 D8060000 		.4byte	0x6d8
 5970 0686 14       		.uleb128 0x14
 5971 0687 55050000 		.4byte	.LASF100
 5972 068b 01       		.byte	0x1
 5973 068c 2603     		.2byte	0x326
 5974 068e 8E000000 		.4byte	0x8e
 5975 0692 02       		.uleb128 0x2
 5976 0693 91       		.byte	0x91
 5977 0694 6F       		.sleb128 -17
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 127


 5978 0695 12       		.uleb128 0x12
 5979 0696 48010000 		.4byte	.LBB11
 5980 069a 30020000 		.4byte	.LBE11-.LBB11
 5981 069e 15       		.uleb128 0x15
 5982 069f 6D657300 		.ascii	"mes\000"
 5983 06a3 01       		.byte	0x1
 5984 06a4 4C03     		.2byte	0x34c
 5985 06a6 09040000 		.4byte	0x409
 5986 06aa 02       		.uleb128 0x2
 5987 06ab 91       		.byte	0x91
 5988 06ac 5C       		.sleb128 -36
 5989 06ad 15       		.uleb128 0x15
 5990 06ae 6900     		.ascii	"i\000"
 5991 06b0 01       		.byte	0x1
 5992 06b1 5F03     		.2byte	0x35f
 5993 06b3 73000000 		.4byte	0x73
 5994 06b7 02       		.uleb128 0x2
 5995 06b8 91       		.byte	0x91
 5996 06b9 74       		.sleb128 -12
 5997 06ba 14       		.uleb128 0x14
 5998 06bb AD040000 		.4byte	.LASF69
 5999 06bf 01       		.byte	0x1
 6000 06c0 6C03     		.2byte	0x36c
 6001 06c2 8E000000 		.4byte	0x8e
 6002 06c6 02       		.uleb128 0x2
 6003 06c7 91       		.byte	0x91
 6004 06c8 6E       		.sleb128 -18
 6005 06c9 15       		.uleb128 0x15
 6006 06ca 7800     		.ascii	"x\000"
 6007 06cc 01       		.byte	0x1
 6008 06cd 7B03     		.2byte	0x37b
 6009 06cf 73000000 		.4byte	0x73
 6010 06d3 02       		.uleb128 0x2
 6011 06d4 91       		.byte	0x91
 6012 06d5 70       		.sleb128 -16
 6013 06d6 00       		.byte	0
 6014 06d7 00       		.byte	0
 6015 06d8 1B       		.uleb128 0x1b
 6016 06d9 CD020000 		.4byte	.LASF102
 6017 06dd 01       		.byte	0x1
 6018 06de 9303     		.2byte	0x393
 6019 06e0 00000000 		.4byte	.LFB94
 6020 06e4 40000000 		.4byte	.LFE94-.LFB94
 6021 06e8 01       		.uleb128 0x1
 6022 06e9 9C       		.byte	0x9c
 6023 06ea 1B       		.uleb128 0x1b
 6024 06eb 61020000 		.4byte	.LASF103
 6025 06ef 01       		.byte	0x1
 6026 06f0 A203     		.2byte	0x3a2
 6027 06f2 00000000 		.4byte	.LFB95
 6028 06f6 40000000 		.4byte	.LFE95-.LFB95
 6029 06fa 01       		.uleb128 0x1
 6030 06fb 9C       		.byte	0x9c
 6031 06fc 19       		.uleb128 0x19
 6032 06fd 90000000 		.4byte	.LASF104
 6033 0701 01       		.byte	0x1
 6034 0702 B203     		.2byte	0x3b2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 128


 6035 0704 00000000 		.4byte	.LFB96
 6036 0708 30020000 		.4byte	.LFE96-.LFB96
 6037 070c 01       		.uleb128 0x1
 6038 070d 9C       		.byte	0x9c
 6039 070e 6D070000 		.4byte	0x76d
 6040 0712 14       		.uleb128 0x14
 6041 0713 15030000 		.4byte	.LASF105
 6042 0717 01       		.byte	0x1
 6043 0718 C003     		.2byte	0x3c0
 6044 071a DB000000 		.4byte	0xdb
 6045 071e 02       		.uleb128 0x2
 6046 071f 91       		.byte	0x91
 6047 0720 5E       		.sleb128 -34
 6048 0721 14       		.uleb128 0x14
 6049 0722 73050000 		.4byte	.LASF106
 6050 0726 01       		.byte	0x1
 6051 0727 C103     		.2byte	0x3c1
 6052 0729 DB000000 		.4byte	0xdb
 6053 072d 02       		.uleb128 0x2
 6054 072e 91       		.byte	0x91
 6055 072f 5C       		.sleb128 -36
 6056 0730 14       		.uleb128 0x14
 6057 0731 B1030000 		.4byte	.LASF107
 6058 0735 01       		.byte	0x1
 6059 0736 C203     		.2byte	0x3c2
 6060 0738 EE000000 		.4byte	0xee
 6061 073c 02       		.uleb128 0x2
 6062 073d 91       		.byte	0x91
 6063 073e 68       		.sleb128 -24
 6064 073f 14       		.uleb128 0x14
 6065 0740 6F090000 		.4byte	.LASF108
 6066 0744 01       		.byte	0x1
 6067 0745 C303     		.2byte	0x3c3
 6068 0747 EE000000 		.4byte	0xee
 6069 074b 02       		.uleb128 0x2
 6070 074c 91       		.byte	0x91
 6071 074d 60       		.sleb128 -32
 6072 074e 14       		.uleb128 0x14
 6073 074f 53040000 		.4byte	.LASF109
 6074 0753 01       		.byte	0x1
 6075 0754 CC03     		.2byte	0x3cc
 6076 0756 73000000 		.4byte	0x73
 6077 075a 02       		.uleb128 0x2
 6078 075b 91       		.byte	0x91
 6079 075c 58       		.sleb128 -40
 6080 075d 14       		.uleb128 0x14
 6081 075e 17090000 		.4byte	.LASF110
 6082 0762 01       		.byte	0x1
 6083 0763 CD03     		.2byte	0x3cd
 6084 0765 73000000 		.4byte	0x73
 6085 0769 02       		.uleb128 0x2
 6086 076a 91       		.byte	0x91
 6087 076b 54       		.sleb128 -44
 6088 076c 00       		.byte	0
 6089 076d 1C       		.uleb128 0x1c
 6090 076e CA050000 		.4byte	.LASF111
 6091 0772 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 129


 6092 0773 DB03     		.2byte	0x3db
 6093 0775 00000000 		.4byte	.LFB97
 6094 0779 0C000000 		.4byte	.LFE97-.LFB97
 6095 077d 01       		.uleb128 0x1
 6096 077e 9C       		.byte	0x9c
 6097 077f 19       		.uleb128 0x19
 6098 0780 92010000 		.4byte	.LASF112
 6099 0784 01       		.byte	0x1
 6100 0785 E103     		.2byte	0x3e1
 6101 0787 00000000 		.4byte	.LFB98
 6102 078b 4C010000 		.4byte	.LFE98-.LFB98
 6103 078f 01       		.uleb128 0x1
 6104 0790 9C       		.byte	0x9c
 6105 0791 C1070000 		.4byte	0x7c1
 6106 0795 15       		.uleb128 0x15
 6107 0796 6E6C00   		.ascii	"nl\000"
 6108 0799 01       		.byte	0x1
 6109 079a E503     		.2byte	0x3e5
 6110 079c AB000000 		.4byte	0xab
 6111 07a0 02       		.uleb128 0x2
 6112 07a1 91       		.byte	0x91
 6113 07a2 67       		.sleb128 -25
 6114 07a3 15       		.uleb128 0x15
 6115 07a4 6E7200   		.ascii	"nr\000"
 6116 07a7 01       		.byte	0x1
 6117 07a8 E603     		.2byte	0x3e6
 6118 07aa AB000000 		.4byte	0xab
 6119 07ae 02       		.uleb128 0x2
 6120 07af 91       		.byte	0x91
 6121 07b0 66       		.sleb128 -26
 6122 07b1 15       		.uleb128 0x15
 6123 07b2 6D696400 		.ascii	"mid\000"
 6124 07b6 01       		.byte	0x1
 6125 07b7 E703     		.2byte	0x3e7
 6126 07b9 AB000000 		.4byte	0xab
 6127 07bd 02       		.uleb128 0x2
 6128 07be 91       		.byte	0x91
 6129 07bf 65       		.sleb128 -27
 6130 07c0 00       		.byte	0
 6131 07c1 1C       		.uleb128 0x1c
 6132 07c2 77010000 		.4byte	.LASF113
 6133 07c6 01       		.byte	0x1
 6134 07c7 0104     		.2byte	0x401
 6135 07c9 00000000 		.4byte	.LFB99
 6136 07cd 0C000000 		.4byte	.LFE99-.LFB99
 6137 07d1 01       		.uleb128 0x1
 6138 07d2 9C       		.byte	0x9c
 6139 07d3 19       		.uleb128 0x19
 6140 07d4 A7030000 		.4byte	.LASF114
 6141 07d8 01       		.byte	0x1
 6142 07d9 0604     		.2byte	0x406
 6143 07db 00000000 		.4byte	.LFB100
 6144 07df C0000000 		.4byte	.LFE100-.LFB100
 6145 07e3 01       		.uleb128 0x1
 6146 07e4 9C       		.byte	0x9c
 6147 07e5 21080000 		.4byte	0x821
 6148 07e9 12       		.uleb128 0x12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 130


 6149 07ea 0E000000 		.4byte	.LBB12
 6150 07ee 8E000000 		.4byte	.LBE12-.LBB12
 6151 07f2 14       		.uleb128 0x14
 6152 07f3 07030000 		.4byte	.LASF115
 6153 07f7 01       		.byte	0x1
 6154 07f8 0F04     		.2byte	0x40f
 6155 07fa E7000000 		.4byte	0xe7
 6156 07fe 02       		.uleb128 0x2
 6157 07ff 91       		.byte	0x91
 6158 0800 74       		.sleb128 -12
 6159 0801 14       		.uleb128 0x14
 6160 0802 B1050000 		.4byte	.LASF116
 6161 0806 01       		.byte	0x1
 6162 0807 1004     		.2byte	0x410
 6163 0809 DB000000 		.4byte	0xdb
 6164 080d 02       		.uleb128 0x2
 6165 080e 91       		.byte	0x91
 6166 080f 72       		.sleb128 -14
 6167 0810 14       		.uleb128 0x14
 6168 0811 6A030000 		.4byte	.LASF117
 6169 0815 01       		.byte	0x1
 6170 0816 1504     		.2byte	0x415
 6171 0818 09040000 		.4byte	0x409
 6172 081c 02       		.uleb128 0x2
 6173 081d 91       		.byte	0x91
 6174 081e 60       		.sleb128 -32
 6175 081f 00       		.byte	0
 6176 0820 00       		.byte	0
 6177 0821 19       		.uleb128 0x19
 6178 0822 58090000 		.4byte	.LASF118
 6179 0826 01       		.byte	0x1
 6180 0827 1C04     		.2byte	0x41c
 6181 0829 00000000 		.4byte	.LFB101
 6182 082d B8000000 		.4byte	.LFE101-.LFB101
 6183 0831 01       		.uleb128 0x1
 6184 0832 9C       		.byte	0x9c
 6185 0833 51080000 		.4byte	0x851
 6186 0837 12       		.uleb128 0x12
 6187 0838 0E000000 		.4byte	.LBB13
 6188 083c 86000000 		.4byte	.LBE13-.LBB13
 6189 0840 14       		.uleb128 0x14
 6190 0841 CC060000 		.4byte	.LASF119
 6191 0845 01       		.byte	0x1
 6192 0846 2004     		.2byte	0x420
 6193 0848 09040000 		.4byte	0x409
 6194 084c 02       		.uleb128 0x2
 6195 084d 91       		.byte	0x91
 6196 084e 68       		.sleb128 -24
 6197 084f 00       		.byte	0
 6198 0850 00       		.byte	0
 6199 0851 17       		.uleb128 0x17
 6200 0852 6B070000 		.4byte	.LASF120
 6201 0856 01       		.byte	0x1
 6202 0857 3104     		.2byte	0x431
 6203 0859 00000000 		.4byte	.LFB102
 6204 085d 4A000000 		.4byte	.LFE102-.LFB102
 6205 0861 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 131


 6206 0862 9C       		.byte	0x9c
 6207 0863 77080000 		.4byte	0x877
 6208 0867 1A       		.uleb128 0x1a
 6209 0868 5F030000 		.4byte	.LASF121
 6210 086c 01       		.byte	0x1
 6211 086d 3104     		.2byte	0x431
 6212 086f 77080000 		.4byte	0x877
 6213 0873 02       		.uleb128 0x2
 6214 0874 91       		.byte	0x91
 6215 0875 6C       		.sleb128 -20
 6216 0876 00       		.byte	0
 6217 0877 05       		.uleb128 0x5
 6218 0878 04       		.byte	0x4
 6219 0879 AB000000 		.4byte	0xab
 6220 087d 17       		.uleb128 0x17
 6221 087e 44070000 		.4byte	.LASF122
 6222 0882 01       		.byte	0x1
 6223 0883 3C04     		.2byte	0x43c
 6224 0885 00000000 		.4byte	.LFB103
 6225 0889 68000000 		.4byte	.LFE103-.LFB103
 6226 088d 01       		.uleb128 0x1
 6227 088e 9C       		.byte	0x9c
 6228 088f BA080000 		.4byte	0x8ba
 6229 0893 18       		.uleb128 0x18
 6230 0894 7300     		.ascii	"s\000"
 6231 0896 01       		.byte	0x1
 6232 0897 3C04     		.2byte	0x43c
 6233 0899 88000000 		.4byte	0x88
 6234 089d 02       		.uleb128 0x2
 6235 089e 91       		.byte	0x91
 6236 089f 6C       		.sleb128 -20
 6237 08a0 12       		.uleb128 0x12
 6238 08a1 10000000 		.4byte	.LBB14
 6239 08a5 48000000 		.4byte	.LBE14-.LBB14
 6240 08a9 15       		.uleb128 0x15
 6241 08aa 636E7400 		.ascii	"cnt\000"
 6242 08ae 01       		.byte	0x1
 6243 08af 4304     		.2byte	0x443
 6244 08b1 C3000000 		.4byte	0xc3
 6245 08b5 02       		.uleb128 0x2
 6246 08b6 91       		.byte	0x91
 6247 08b7 74       		.sleb128 -12
 6248 08b8 00       		.byte	0
 6249 08b9 00       		.byte	0
 6250 08ba 17       		.uleb128 0x17
 6251 08bb C3080000 		.4byte	.LASF123
 6252 08bf 01       		.byte	0x1
 6253 08c0 5204     		.2byte	0x452
 6254 08c2 00000000 		.4byte	.LFB104
 6255 08c6 50000000 		.4byte	.LFE104-.LFB104
 6256 08ca 01       		.uleb128 0x1
 6257 08cb 9C       		.byte	0x9c
 6258 08cc F7080000 		.4byte	0x8f7
 6259 08d0 18       		.uleb128 0x18
 6260 08d1 6300     		.ascii	"c\000"
 6261 08d3 01       		.byte	0x1
 6262 08d4 5204     		.2byte	0x452
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 132


 6263 08d6 8E000000 		.4byte	0x8e
 6264 08da 02       		.uleb128 0x2
 6265 08db 91       		.byte	0x91
 6266 08dc 6F       		.sleb128 -17
 6267 08dd 12       		.uleb128 0x12
 6268 08de 12000000 		.4byte	.LBB15
 6269 08e2 2E000000 		.4byte	.LBE15-.LBB15
 6270 08e6 15       		.uleb128 0x15
 6271 08e7 636E7400 		.ascii	"cnt\000"
 6272 08eb 01       		.byte	0x1
 6273 08ec 5604     		.2byte	0x456
 6274 08ee C3000000 		.4byte	0xc3
 6275 08f2 02       		.uleb128 0x2
 6276 08f3 91       		.byte	0x91
 6277 08f4 74       		.sleb128 -12
 6278 08f5 00       		.byte	0
 6279 08f6 00       		.byte	0
 6280 08f7 1C       		.uleb128 0x1c
 6281 08f8 75030000 		.4byte	.LASF124
 6282 08fc 01       		.byte	0x1
 6283 08fd 6304     		.2byte	0x463
 6284 08ff 00000000 		.4byte	.LFB105
 6285 0903 0C000000 		.4byte	.LFE105-.LFB105
 6286 0907 01       		.uleb128 0x1
 6287 0908 9C       		.byte	0x9c
 6288 0909 1D       		.uleb128 0x1d
 6289 090a BF060000 		.4byte	.LASF125
 6290 090e 06       		.byte	0x6
 6291 090f 9606     		.2byte	0x696
 6292 0911 15090000 		.4byte	0x915
 6293 0915 1E       		.uleb128 0x1e
 6294 0916 95000000 		.4byte	0x95
 6295 091a 1F       		.uleb128 0x1f
 6296 091b 747300   		.ascii	"ts\000"
 6297 091e 05       		.byte	0x5
 6298 091f 10       		.byte	0x10
 6299 0920 AB000000 		.4byte	0xab
 6300 0924 05       		.uleb128 0x5
 6301 0925 03       		.byte	0x3
 6302 0926 00000000 		.4byte	ts
 6303 092a 20       		.uleb128 0x20
 6304 092b 45080000 		.4byte	.LASF126
 6305 092f 05       		.byte	0x5
 6306 0930 11       		.byte	0x11
 6307 0931 B7000000 		.4byte	0xb7
 6308 0935 05       		.uleb128 0x5
 6309 0936 03       		.byte	0x3
 6310 0937 00000000 		.4byte	ts_enc
 6311 093b 20       		.uleb128 0x20
 6312 093c DE060000 		.4byte	.LASF127
 6313 0940 05       		.byte	0x5
 6314 0941 12       		.byte	0x12
 6315 0942 B7000000 		.4byte	0xb7
 6316 0946 05       		.uleb128 0x5
 6317 0947 03       		.byte	0x3
 6318 0948 00000000 		.4byte	ts_update
 6319 094c 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 133


 6320 094d 7E050000 		.4byte	.LASF128
 6321 0951 05       		.byte	0x5
 6322 0952 13       		.byte	0x13
 6323 0953 B7000000 		.4byte	0xb7
 6324 0957 05       		.uleb128 0x5
 6325 0958 03       		.byte	0x3
 6326 0959 00000000 		.4byte	ts_speed
 6327 095d 20       		.uleb128 0x20
 6328 095e 9C030000 		.4byte	.LASF129
 6329 0962 05       		.byte	0x5
 6330 0963 14       		.byte	0x14
 6331 0964 B7000000 		.4byte	0xb7
 6332 0968 05       		.uleb128 0x5
 6333 0969 03       		.byte	0x3
 6334 096a 00000000 		.4byte	ts_display
 6335 096e 20       		.uleb128 0x20
 6336 096f 1F030000 		.4byte	.LASF130
 6337 0973 05       		.byte	0x5
 6338 0974 16       		.byte	0x16
 6339 0975 AB000000 		.4byte	0xab
 6340 0979 05       		.uleb128 0x5
 6341 097a 03       		.byte	0x3
 6342 097b 00000000 		.4byte	flag_ts_enc
 6343 097f 20       		.uleb128 0x20
 6344 0980 F8020000 		.4byte	.LASF131
 6345 0984 05       		.byte	0x5
 6346 0985 17       		.byte	0x17
 6347 0986 AB000000 		.4byte	0xab
 6348 098a 05       		.uleb128 0x5
 6349 098b 03       		.byte	0x3
 6350 098c 00000000 		.4byte	flag_ts_update
 6351 0990 20       		.uleb128 0x20
 6352 0991 39060000 		.4byte	.LASF132
 6353 0995 05       		.byte	0x5
 6354 0996 18       		.byte	0x18
 6355 0997 AB000000 		.4byte	0xab
 6356 099b 05       		.uleb128 0x5
 6357 099c 03       		.byte	0x3
 6358 099d 00000000 		.4byte	flag_ts_speed
 6359 09a1 20       		.uleb128 0x20
 6360 09a2 56080000 		.4byte	.LASF133
 6361 09a6 05       		.byte	0x5
 6362 09a7 19       		.byte	0x19
 6363 09a8 AB000000 		.4byte	0xab
 6364 09ac 05       		.uleb128 0x5
 6365 09ad 03       		.byte	0x3
 6366 09ae 00000000 		.4byte	flag_ts_display
 6367 09b2 20       		.uleb128 0x20
 6368 09b3 64060000 		.4byte	.LASF134
 6369 09b7 05       		.byte	0x5
 6370 09b8 1C       		.byte	0x1c
 6371 09b9 AB000000 		.4byte	0xab
 6372 09bd 05       		.uleb128 0x5
 6373 09be 03       		.byte	0x3
 6374 09bf 00000000 		.4byte	flag_rx
 6375 09c3 20       		.uleb128 0x20
 6376 09c4 A5020000 		.4byte	.LASF135
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 134


 6377 09c8 05       		.byte	0x5
 6378 09c9 1D       		.byte	0x1d
 6379 09ca AB000000 		.4byte	0xab
 6380 09ce 05       		.uleb128 0x5
 6381 09cf 03       		.byte	0x3
 6382 09d0 00000000 		.4byte	flag_packet
 6383 09d4 20       		.uleb128 0x20
 6384 09d5 7C090000 		.4byte	.LASF136
 6385 09d9 05       		.byte	0x5
 6386 09da 1E       		.byte	0x1e
 6387 09db AB000000 		.4byte	0xab
 6388 09df 05       		.uleb128 0x5
 6389 09e0 03       		.byte	0x3
 6390 09e1 00000000 		.4byte	flag_KB_string
 6391 09e5 20       		.uleb128 0x20
 6392 09e6 47060000 		.4byte	.LASF137
 6393 09ea 05       		.byte	0x5
 6394 09eb 20       		.byte	0x20
 6395 09ec AB000000 		.4byte	0xab
 6396 09f0 05       		.uleb128 0x5
 6397 09f1 03       		.byte	0x3
 6398 09f2 00000000 		.4byte	dataready_flag
 6399 09f6 20       		.uleb128 0x20
 6400 09f7 BE010000 		.4byte	.LASF138
 6401 09fb 05       		.byte	0x5
 6402 09fc 22       		.byte	0x22
 6403 09fd AB000000 		.4byte	0xab
 6404 0a01 05       		.uleb128 0x5
 6405 0a02 03       		.byte	0x3
 6406 0a03 00000000 		.4byte	flag_rf_transmission_active
 6407 0a07 20       		.uleb128 0x20
 6408 0a08 DA010000 		.4byte	.LASF139
 6409 0a0c 05       		.byte	0x5
 6410 0a0d 23       		.byte	0x23
 6411 0a0e AB000000 		.4byte	0xab
 6412 0a12 05       		.uleb128 0x5
 6413 0a13 03       		.byte	0x3
 6414 0a14 00000000 		.4byte	flag_print_rf
 6415 0a18 20       		.uleb128 0x20
 6416 0a19 E1050000 		.4byte	.LASF140
 6417 0a1d 05       		.byte	0x5
 6418 0a1e 25       		.byte	0x25
 6419 0a1f AB000000 		.4byte	0xab
 6420 0a23 05       		.uleb128 0x5
 6421 0a24 03       		.byte	0x3
 6422 0a25 00000000 		.4byte	flag_receive_ADC
 6423 0a29 20       		.uleb128 0x20
 6424 0a2a 76060000 		.4byte	.LASF141
 6425 0a2e 05       		.byte	0x5
 6426 0a2f 26       		.byte	0x26
 6427 0a30 DB000000 		.4byte	0xdb
 6428 0a34 05       		.uleb128 0x5
 6429 0a35 03       		.byte	0x3
 6430 0a36 00000000 		.4byte	adc_result
 6431 0a3a 20       		.uleb128 0x20
 6432 0a3b 00000000 		.4byte	.LASF142
 6433 0a3f 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 135


 6434 0a40 28       		.byte	0x28
 6435 0a41 AB000000 		.4byte	0xab
 6436 0a45 05       		.uleb128 0x5
 6437 0a46 03       		.byte	0x3
 6438 0a47 00000000 		.4byte	direction
 6439 0a4b 20       		.uleb128 0x20
 6440 0a4c 67050000 		.4byte	.LASF143
 6441 0a50 05       		.byte	0x5
 6442 0a51 2B       		.byte	0x2b
 6443 0a52 AB000000 		.4byte	0xab
 6444 0a56 05       		.uleb128 0x5
 6445 0a57 03       		.byte	0x3
 6446 0a58 00000000 		.4byte	BIN_ENABLED
 6447 0a5c 20       		.uleb128 0x20
 6448 0a5d 5D040000 		.4byte	.LASF144
 6449 0a61 05       		.byte	0x5
 6450 0a62 2D       		.byte	0x2d
 6451 0a63 AB000000 		.4byte	0xab
 6452 0a67 05       		.uleb128 0x5
 6453 0a68 03       		.byte	0x3
 6454 0a69 00000000 		.4byte	BT_ENABLED
 6455 0a6d 20       		.uleb128 0x20
 6456 0a6e 8B060000 		.4byte	.LASF145
 6457 0a72 05       		.byte	0x5
 6458 0a73 32       		.byte	0x32
 6459 0a74 AB000000 		.4byte	0xab
 6460 0a78 05       		.uleb128 0x5
 6461 0a79 03       		.byte	0x3
 6462 0a7a 00000000 		.4byte	flag_calc_wheelspeed
 6463 0a7e 20       		.uleb128 0x20
 6464 0a7f 5F010000 		.4byte	.LASF146
 6465 0a83 05       		.byte	0x5
 6466 0a84 33       		.byte	0x33
 6467 0a85 DB000000 		.4byte	0xdb
 6468 0a89 05       		.uleb128 0x5
 6469 0a8a 03       		.byte	0x3
 6470 0a8b 00000000 		.4byte	quad_count1
 6471 0a8f 20       		.uleb128 0x20
 6472 0a90 6B010000 		.4byte	.LASF147
 6473 0a94 05       		.byte	0x5
 6474 0a95 34       		.byte	0x34
 6475 0a96 DB000000 		.4byte	0xdb
 6476 0a9a 05       		.uleb128 0x5
 6477 0a9b 03       		.byte	0x3
 6478 0a9c 00000000 		.4byte	quad_count2
 6479 0aa0 20       		.uleb128 0x20
 6480 0aa1 95080000 		.4byte	.LASF148
 6481 0aa5 05       		.byte	0x5
 6482 0aa6 35       		.byte	0x35
 6483 0aa7 DB000000 		.4byte	0xdb
 6484 0aab 05       		.uleb128 0x5
 6485 0aac 03       		.byte	0x3
 6486 0aad 00000000 		.4byte	last_quad_count1
 6487 0ab1 20       		.uleb128 0x20
 6488 0ab2 A6080000 		.4byte	.LASF149
 6489 0ab6 05       		.byte	0x5
 6490 0ab7 36       		.byte	0x36
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 136


 6491 0ab8 DB000000 		.4byte	0xdb
 6492 0abc 05       		.uleb128 0x5
 6493 0abd 03       		.byte	0x3
 6494 0abe 00000000 		.4byte	last_quad_count2
 6495 0ac2 20       		.uleb128 0x20
 6496 0ac3 7A000000 		.4byte	.LASF150
 6497 0ac7 05       		.byte	0x5
 6498 0ac8 37       		.byte	0x37
 6499 0ac9 DB000000 		.4byte	0xdb
 6500 0acd 05       		.uleb128 0x5
 6501 0ace 03       		.byte	0x3
 6502 0acf 00000000 		.4byte	quad_diff1
 6503 0ad3 20       		.uleb128 0x20
 6504 0ad4 85000000 		.4byte	.LASF151
 6505 0ad8 05       		.byte	0x5
 6506 0ad9 38       		.byte	0x38
 6507 0ada DB000000 		.4byte	0xdb
 6508 0ade 05       		.uleb128 0x5
 6509 0adf 03       		.byte	0x3
 6510 0ae0 00000000 		.4byte	quad_diff2
 6511 0ae4 20       		.uleb128 0x20
 6512 0ae5 F1060000 		.4byte	.LASF152
 6513 0ae9 05       		.byte	0x5
 6514 0aea 39       		.byte	0x39
 6515 0aeb AB000000 		.4byte	0xab
 6516 0aef 05       		.uleb128 0x5
 6517 0af0 03       		.byte	0x3
 6518 0af1 00000000 		.4byte	deadzone
 6519 0af5 20       		.uleb128 0x20
 6520 0af6 AE000000 		.4byte	.LASF153
 6521 0afa 05       		.byte	0x5
 6522 0afb 3C       		.byte	0x3c
 6523 0afc DB000000 		.4byte	0xdb
 6524 0b00 05       		.uleb128 0x5
 6525 0b01 03       		.byte	0x3
 6526 0b02 00000000 		.4byte	start_turn_count
 6527 0b06 20       		.uleb128 0x20
 6528 0b07 1C060000 		.4byte	.LASF154
 6529 0b0b 05       		.byte	0x5
 6530 0b0c 3F       		.byte	0x3f
 6531 0b0d DB000000 		.4byte	0xdb
 6532 0b11 05       		.uleb128 0x5
 6533 0b12 03       		.byte	0x3
 6534 0b13 00000000 		.4byte	left_duty_cycle
 6535 0b17 20       		.uleb128 0x20
 6536 0b18 2E090000 		.4byte	.LASF155
 6537 0b1c 05       		.byte	0x5
 6538 0b1d 40       		.byte	0x40
 6539 0b1e DB000000 		.4byte	0xdb
 6540 0b22 05       		.uleb128 0x5
 6541 0b23 03       		.byte	0x3
 6542 0b24 00000000 		.4byte	right_duty_cycle
 6543 0b28 20       		.uleb128 0x20
 6544 0b29 FA060000 		.4byte	.LASF156
 6545 0b2d 05       		.byte	0x5
 6546 0b2e 43       		.byte	0x43
 6547 0b2f DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 137


 6548 0b33 05       		.uleb128 0x5
 6549 0b34 03       		.byte	0x3
 6550 0b35 00000000 		.4byte	leftSpeedLimit
 6551 0b39 20       		.uleb128 0x20
 6552 0b3a CB030000 		.4byte	.LASF157
 6553 0b3e 05       		.byte	0x5
 6554 0b3f 44       		.byte	0x44
 6555 0b40 DB000000 		.4byte	0xdb
 6556 0b44 05       		.uleb128 0x5
 6557 0b45 03       		.byte	0x3
 6558 0b46 00000000 		.4byte	rightSpeedLimit
 6559 0b4a 20       		.uleb128 0x20
 6560 0b4b 88070000 		.4byte	.LASF158
 6561 0b4f 05       		.byte	0x5
 6562 0b50 47       		.byte	0x47
 6563 0b51 DB000000 		.4byte	0xdb
 6564 0b55 05       		.uleb128 0x5
 6565 0b56 03       		.byte	0x3
 6566 0b57 00000000 		.4byte	target_distance_cm
 6567 0b5b 20       		.uleb128 0x20
 6568 0b5c 39070000 		.4byte	.LASF159
 6569 0b60 05       		.byte	0x5
 6570 0b61 49       		.byte	0x49
 6571 0b62 DB000000 		.4byte	0xdb
 6572 0b66 05       		.uleb128 0x5
 6573 0b67 03       		.byte	0x3
 6574 0b68 00000000 		.4byte	accum_dist
 6575 0b6c 20       		.uleb128 0x20
 6576 0b6d 0A010000 		.4byte	.LASF160
 6577 0b71 05       		.byte	0x5
 6578 0b72 4A       		.byte	0x4a
 6579 0b73 DB000000 		.4byte	0xdb
 6580 0b77 05       		.uleb128 0x5
 6581 0b78 03       		.byte	0x3
 6582 0b79 00000000 		.4byte	target_distance_quad
 6583 0b7d 20       		.uleb128 0x20
 6584 0b7e 29080000 		.4byte	.LASF161
 6585 0b82 05       		.byte	0x5
 6586 0b83 4B       		.byte	0x4b
 6587 0b84 AB000000 		.4byte	0xab
 6588 0b88 05       		.uleb128 0x5
 6589 0b89 03       		.byte	0x3
 6590 0b8a 00000000 		.4byte	reached_target
 6591 0b8e 20       		.uleb128 0x20
 6592 0b8f 24070000 		.4byte	.LASF162
 6593 0b93 05       		.byte	0x5
 6594 0b94 4C       		.byte	0x4c
 6595 0b95 AB000000 		.4byte	0xab
 6596 0b99 05       		.uleb128 0x5
 6597 0b9a 03       		.byte	0x3
 6598 0b9b 00000000 		.4byte	overshot_target
 6599 0b9f 20       		.uleb128 0x20
 6600 0ba0 7C070000 		.4byte	.LASF163
 6601 0ba4 05       		.byte	0x5
 6602 0ba5 4D       		.byte	0x4d
 6603 0ba6 E7000000 		.4byte	0xe7
 6604 0baa 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 138


 6605 0bab 03       		.byte	0x3
 6606 0bac 00000000 		.4byte	quad_per_cm
 6607 0bb0 20       		.uleb128 0x20
 6608 0bb1 6E040000 		.4byte	.LASF164
 6609 0bb5 05       		.byte	0x5
 6610 0bb6 50       		.byte	0x50
 6611 0bb7 AB000000 		.4byte	0xab
 6612 0bbb 05       		.uleb128 0x5
 6613 0bbc 03       		.byte	0x3
 6614 0bbd 00000000 		.4byte	initial_pos_valid
 6615 0bc1 20       		.uleb128 0x20
 6616 0bc2 9D090000 		.4byte	.LASF165
 6617 0bc6 05       		.byte	0x5
 6618 0bc7 51       		.byte	0x51
 6619 0bc8 DB000000 		.4byte	0xdb
 6620 0bcc 05       		.uleb128 0x5
 6621 0bcd 03       		.byte	0x3
 6622 0bce 00000000 		.4byte	initial_x_pos
 6623 0bd2 20       		.uleb128 0x20
 6624 0bd3 56060000 		.4byte	.LASF166
 6625 0bd7 05       		.byte	0x5
 6626 0bd8 52       		.byte	0x52
 6627 0bd9 DB000000 		.4byte	0xdb
 6628 0bdd 05       		.uleb128 0x5
 6629 0bde 03       		.byte	0x3
 6630 0bdf 00000000 		.4byte	initial_y_pos
 6631 0be3 20       		.uleb128 0x20
 6632 0be4 4C080000 		.4byte	.LASF167
 6633 0be8 05       		.byte	0x5
 6634 0be9 55       		.byte	0x55
 6635 0bea AB000000 		.4byte	0xab
 6636 0bee 05       		.uleb128 0x5
 6637 0bef 03       		.byte	0x3
 6638 0bf0 00000000 		.4byte	brakeFlag
 6639 0bf4 20       		.uleb128 0x20
 6640 0bf5 E5020000 		.4byte	.LASF168
 6641 0bf9 05       		.byte	0x5
 6642 0bfa 56       		.byte	0x56
 6643 0bfb AB000000 		.4byte	0xab
 6644 0bff 05       		.uleb128 0x5
 6645 0c00 03       		.byte	0x3
 6646 0c01 00000000 		.4byte	portOpen
 6647 0c05 07       		.uleb128 0x7
 6648 0c06 AB000000 		.4byte	0xab
 6649 0c0a 150C0000 		.4byte	0xc15
 6650 0c0e 08       		.uleb128 0x8
 6651 0c0f 81000000 		.4byte	0x81
 6652 0c13 04       		.byte	0x4
 6653 0c14 00       		.byte	0
 6654 0c15 20       		.uleb128 0x20
 6655 0c16 B1020000 		.4byte	.LASF169
 6656 0c1a 05       		.byte	0x5
 6657 0c1b 59       		.byte	0x59
 6658 0c1c 050C0000 		.4byte	0xc05
 6659 0c20 05       		.uleb128 0x5
 6660 0c21 03       		.byte	0x3
 6661 0c22 00000000 		.4byte	frontSensors
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 139


 6662 0c26 20       		.uleb128 0x20
 6663 0c27 A2000000 		.4byte	.LASF170
 6664 0c2b 05       		.byte	0x5
 6665 0c2c 5D       		.byte	0x5d
 6666 0c2d DB000000 		.4byte	0xdb
 6667 0c31 05       		.uleb128 0x5
 6668 0c32 03       		.byte	0x3
 6669 0c33 00000000 		.4byte	prevVoltage
 6670 0c37 20       		.uleb128 0x20
 6671 0c38 28010000 		.4byte	.LASF171
 6672 0c3c 05       		.byte	0x5
 6673 0c3d 5E       		.byte	0x5e
 6674 0c3e DB000000 		.4byte	0xdb
 6675 0c42 05       		.uleb128 0x5
 6676 0c43 03       		.byte	0x3
 6677 0c44 00000000 		.4byte	prevVoltage2
 6678 0c48 07       		.uleb128 0x7
 6679 0c49 8E000000 		.4byte	0x8e
 6680 0c4d 580C0000 		.4byte	0xc58
 6681 0c51 08       		.uleb128 0x8
 6682 0c52 81000000 		.4byte	0x81
 6683 0c56 3F       		.byte	0x3f
 6684 0c57 00       		.byte	0
 6685 0c58 20       		.uleb128 0x20
 6686 0c59 87080000 		.4byte	.LASF172
 6687 0c5d 05       		.byte	0x5
 6688 0c5e 64       		.byte	0x64
 6689 0c5f 480C0000 		.4byte	0xc48
 6690 0c63 05       		.uleb128 0x5
 6691 0c64 03       		.byte	0x3
 6692 0c65 00000000 		.4byte	displaystring
 6693 0c69 20       		.uleb128 0x20
 6694 0c6a 24080000 		.4byte	.LASF173
 6695 0c6e 05       		.byte	0x5
 6696 0c6f 65       		.byte	0x65
 6697 0c70 480C0000 		.4byte	0xc48
 6698 0c74 05       		.uleb128 0x5
 6699 0c75 03       		.byte	0x3
 6700 0c76 00000000 		.4byte	line
 6701 0c7a 20       		.uleb128 0x20
 6702 0c7b 05080000 		.4byte	.LASF174
 6703 0c7f 05       		.byte	0x5
 6704 0c80 65       		.byte	0x65
 6705 0c81 480C0000 		.4byte	0xc48
 6706 0c85 05       		.uleb128 0x5
 6707 0c86 03       		.byte	0x3
 6708 0c87 00000000 		.4byte	entry
 6709 0c8b 07       		.uleb128 0x7
 6710 0c8c AB000000 		.4byte	0xab
 6711 0c90 9B0C0000 		.4byte	0xc9b
 6712 0c94 08       		.uleb128 0x8
 6713 0c95 81000000 		.4byte	0x81
 6714 0c99 3F       		.byte	0x3f
 6715 0c9a 00       		.byte	0
 6716 0c9b 20       		.uleb128 0x20
 6717 0c9c 3D020000 		.4byte	.LASF175
 6718 0ca0 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 140


 6719 0ca1 66       		.byte	0x66
 6720 0ca2 8B0C0000 		.4byte	0xc8b
 6721 0ca6 05       		.uleb128 0x5
 6722 0ca7 03       		.byte	0x3
 6723 0ca8 00000000 		.4byte	usbBuffer
 6724 0cac 20       		.uleb128 0x20
 6725 0cad 8E040000 		.4byte	.LASF176
 6726 0cb1 05       		.byte	0x5
 6727 0cb2 7B       		.byte	0x7b
 6728 0cb3 86010000 		.4byte	0x186
 6729 0cb7 05       		.uleb128 0x5
 6730 0cb8 03       		.byte	0x3
 6731 0cb9 00000000 		.4byte	buffer_state
 6732 0cbd 20       		.uleb128 0x20
 6733 0cbe E7000000 		.4byte	.LASF177
 6734 0cc2 05       		.byte	0x5
 6735 0cc3 7C       		.byte	0x7c
 6736 0cc4 86010000 		.4byte	0x186
 6737 0cc8 05       		.uleb128 0x5
 6738 0cc9 03       		.byte	0x3
 6739 0cca 00000000 		.4byte	system_state
 6740 0cce 20       		.uleb128 0x20
 6741 0ccf 4B030000 		.4byte	.LASF178
 6742 0cd3 05       		.byte	0x5
 6743 0cd4 7E       		.byte	0x7e
 6744 0cd5 0C010000 		.4byte	0x10c
 6745 0cd9 05       		.uleb128 0x5
 6746 0cda 03       		.byte	0x3
 6747 0cdb 00000000 		.4byte	prev_movement_state
 6748 0cdf 20       		.uleb128 0x20
 6749 0ce0 E8010000 		.4byte	.LASF179
 6750 0ce4 05       		.byte	0x5
 6751 0ce5 7F       		.byte	0x7f
 6752 0ce6 0C010000 		.4byte	0x10c
 6753 0cea 05       		.uleb128 0x5
 6754 0ceb 03       		.byte	0x3
 6755 0cec 00000000 		.4byte	movement_state
 6756 0cf0 20       		.uleb128 0x20
 6757 0cf1 CC000000 		.4byte	.LASF180
 6758 0cf5 05       		.byte	0x5
 6759 0cf6 80       		.byte	0x80
 6760 0cf7 49010000 		.4byte	0x149
 6761 0cfb 05       		.uleb128 0x5
 6762 0cfc 03       		.byte	0x3
 6763 0cfd 00000000 		.4byte	track_mode
 6764 0d01 20       		.uleb128 0x20
 6765 0d02 2B030000 		.4byte	.LASF181
 6766 0d06 05       		.byte	0x5
 6767 0d07 82       		.byte	0x82
 6768 0d08 AB000000 		.4byte	0xab
 6769 0d0c 05       		.uleb128 0x5
 6770 0d0d 03       		.byte	0x3
 6771 0d0e 00000000 		.4byte	byteCount
 6772 0d12 07       		.uleb128 0x7
 6773 0d13 8E000000 		.4byte	0x8e
 6774 0d17 220D0000 		.4byte	0xd22
 6775 0d1b 08       		.uleb128 0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 141


 6776 0d1c 81000000 		.4byte	0x81
 6777 0d20 01       		.byte	0x1
 6778 0d21 00       		.byte	0
 6779 0d22 20       		.uleb128 0x20
 6780 0d23 CA070000 		.4byte	.LASF182
 6781 0d27 05       		.byte	0x5
 6782 0d28 83       		.byte	0x83
 6783 0d29 120D0000 		.4byte	0xd12
 6784 0d2d 05       		.uleb128 0x5
 6785 0d2e 03       		.byte	0x3
 6786 0d2f 00000000 		.4byte	packet
 6787 0d33 20       		.uleb128 0x20
 6788 0d34 AB010000 		.4byte	.LASF183
 6789 0d38 05       		.byte	0x5
 6790 0d39 87       		.byte	0x87
 6791 0d3a EE000000 		.4byte	0xee
 6792 0d3e 05       		.uleb128 0x5
 6793 0d3f 03       		.byte	0x3
 6794 0d40 00000000 		.4byte	speed
 6795 0d44 20       		.uleb128 0x20
 6796 0d45 E6030000 		.4byte	.LASF184
 6797 0d49 01       		.byte	0x1
 6798 0d4a 24       		.byte	0x24
 6799 0d4b B7000000 		.4byte	0xb7
 6800 0d4f 05       		.uleb128 0x5
 6801 0d50 03       		.byte	0x3
 6802 0d51 00000000 		.4byte	instructionCount
 6803 0d55 20       		.uleb128 0x20
 6804 0d56 35010000 		.4byte	.LASF185
 6805 0d5a 01       		.byte	0x1
 6806 0d5b 26       		.byte	0x26
 6807 0d5c A0000000 		.4byte	0xa0
 6808 0d60 05       		.uleb128 0x5
 6809 0d61 03       		.byte	0x3
 6810 0d62 00000000 		.4byte	sensorsDisabled
 6811 0d66 07       		.uleb128 0x7
 6812 0d67 A0000000 		.4byte	0xa0
 6813 0d6b 7C0D0000 		.4byte	0xd7c
 6814 0d6f 08       		.uleb128 0x8
 6815 0d70 81000000 		.4byte	0x81
 6816 0d74 0E       		.byte	0xe
 6817 0d75 08       		.uleb128 0x8
 6818 0d76 81000000 		.4byte	0x81
 6819 0d7a 12       		.byte	0x12
 6820 0d7b 00       		.byte	0
 6821 0d7c 1F       		.uleb128 0x1f
 6822 0d7d 6D617000 		.ascii	"map\000"
 6823 0d81 01       		.byte	0x1
 6824 0d82 2F       		.byte	0x2f
 6825 0d83 660D0000 		.4byte	0xd66
 6826 0d87 05       		.uleb128 0x5
 6827 0d88 03       		.byte	0x3
 6828 0d89 00000000 		.4byte	map
 6829 0d8d 07       		.uleb128 0x7
 6830 0d8e A0000000 		.4byte	0xa0
 6831 0d92 A30D0000 		.4byte	0xda3
 6832 0d96 08       		.uleb128 0x8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 142


 6833 0d97 81000000 		.4byte	0x81
 6834 0d9b 05       		.byte	0x5
 6835 0d9c 08       		.uleb128 0x8
 6836 0d9d 81000000 		.4byte	0x81
 6837 0da1 01       		.byte	0x1
 6838 0da2 00       		.byte	0
 6839 0da3 20       		.uleb128 0x20
 6840 0da4 5D050000 		.4byte	.LASF186
 6841 0da8 01       		.byte	0x1
 6842 0da9 44       		.byte	0x44
 6843 0daa 8D0D0000 		.4byte	0xd8d
 6844 0dae 05       		.uleb128 0x5
 6845 0daf 03       		.byte	0x3
 6846 0db0 00000000 		.4byte	food_list
 6847 0db4 07       		.uleb128 0x7
 6848 0db5 A0000000 		.4byte	0xa0
 6849 0db9 CB0D0000 		.4byte	0xdcb
 6850 0dbd 21       		.uleb128 0x21
 6851 0dbe 81000000 		.4byte	0x81
 6852 0dc2 1F03     		.2byte	0x31f
 6853 0dc4 08       		.uleb128 0x8
 6854 0dc5 81000000 		.4byte	0x81
 6855 0dc9 02       		.byte	0x2
 6856 0dca 00       		.byte	0
 6857 0dcb 20       		.uleb128 0x20
 6858 0dcc 36040000 		.4byte	.LASF187
 6859 0dd0 01       		.byte	0x1
 6860 0dd1 2A       		.byte	0x2a
 6861 0dd2 B40D0000 		.4byte	0xdb4
 6862 0dd6 05       		.uleb128 0x5
 6863 0dd7 03       		.byte	0x3
 6864 0dd8 00000000 		.4byte	path
 6865 0ddc 20       		.uleb128 0x20
 6866 0ddd BF050000 		.4byte	.LASF188
 6867 0de1 01       		.byte	0x1
 6868 0de2 2B       		.byte	0x2b
 6869 0de3 F5000000 		.4byte	0xf5
 6870 0de7 05       		.uleb128 0x5
 6871 0de8 03       		.byte	0x3
 6872 0de9 00000000 		.4byte	start
 6873 0ded 20       		.uleb128 0x20
 6874 0dee B7080000 		.4byte	.LASF189
 6875 0df2 01       		.byte	0x1
 6876 0df3 2C       		.byte	0x2c
 6877 0df4 F5000000 		.4byte	0xf5
 6878 0df8 05       		.uleb128 0x5
 6879 0df9 03       		.byte	0x3
 6880 0dfa 00000000 		.4byte	destination
 6881 0dfe 20       		.uleb128 0x20
 6882 0dff 82010000 		.4byte	.LASF190
 6883 0e03 01       		.byte	0x1
 6884 0e04 28       		.byte	0x28
 6885 0e05 A0000000 		.4byte	0xa0
 6886 0e09 05       		.uleb128 0x5
 6887 0e0a 03       		.byte	0x3
 6888 0e0b 00000000 		.4byte	robot_direction
 6889 0e0f 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 143


 6890 0e10 0A000000 		.4byte	.LASF191
 6891 0e14 07       		.byte	0x7
 6892 0e15 22       		.byte	0x22
 6893 0e16 A0000000 		.4byte	0xa0
 6894 0e1a 05       		.uleb128 0x5
 6895 0e1b 03       		.byte	0x3
 6896 0e1c 00000000 		.4byte	tracked_direction
 6897 0e20 20       		.uleb128 0x20
 6898 0e21 F9070000 		.4byte	.LASF192
 6899 0e25 01       		.byte	0x1
 6900 0e26 46       		.byte	0x46
 6901 0e27 A0000000 		.4byte	0xa0
 6902 0e2b 05       		.uleb128 0x5
 6903 0e2c 03       		.byte	0x3
 6904 0e2d 00000000 		.4byte	food_length
 6905 0e31 07       		.uleb128 0x7
 6906 0e32 8E000000 		.4byte	0x8e
 6907 0e36 420E0000 		.4byte	0xe42
 6908 0e3a 21       		.uleb128 0x21
 6909 0e3b 81000000 		.4byte	0x81
 6910 0e3f 1F03     		.2byte	0x31f
 6911 0e41 00       		.byte	0
 6912 0e42 20       		.uleb128 0x20
 6913 0e43 8E050000 		.4byte	.LASF193
 6914 0e47 01       		.byte	0x1
 6915 0e48 23       		.byte	0x23
 6916 0e49 310E0000 		.4byte	0xe31
 6917 0e4d 05       		.uleb128 0x5
 6918 0e4e 03       		.byte	0x3
 6919 0e4f 00000000 		.4byte	instructions
 6920 0e53 20       		.uleb128 0x20
 6921 0e54 D1070000 		.4byte	.LASF194
 6922 0e58 01       		.byte	0x1
 6923 0e59 25       		.byte	0x25
 6924 0e5a B7000000 		.4byte	0xb7
 6925 0e5e 05       		.uleb128 0x5
 6926 0e5f 03       		.byte	0x3
 6927 0e60 00000000 		.4byte	instructionLength
 6928 0e64 22       		.uleb128 0x22
 6929 0e65 9D010000 		.4byte	.LASF195
 6930 0e69 01       		.byte	0x1
 6931 0e6a DF03     		.2byte	0x3df
 6932 0e6c B7000000 		.4byte	0xb7
 6933 0e70 05       		.uleb128 0x5
 6934 0e71 03       		.byte	0x3
 6935 0e72 00000000 		.4byte	leftTurnCount
 6936 0e76 22       		.uleb128 0x22
 6937 0e77 61000000 		.4byte	.LASF196
 6938 0e7b 01       		.byte	0x1
 6939 0e7c E003     		.2byte	0x3e0
 6940 0e7e B7000000 		.4byte	0xb7
 6941 0e82 05       		.uleb128 0x5
 6942 0e83 03       		.byte	0x3
 6943 0e84 00000000 		.4byte	rightTurnCount
 6944 0e88 00       		.byte	0
 6945              		.section	.debug_abbrev,"",%progbits
 6946              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 144


 6947 0000 01       		.uleb128 0x1
 6948 0001 11       		.uleb128 0x11
 6949 0002 01       		.byte	0x1
 6950 0003 25       		.uleb128 0x25
 6951 0004 0E       		.uleb128 0xe
 6952 0005 13       		.uleb128 0x13
 6953 0006 0B       		.uleb128 0xb
 6954 0007 03       		.uleb128 0x3
 6955 0008 0E       		.uleb128 0xe
 6956 0009 1B       		.uleb128 0x1b
 6957 000a 0E       		.uleb128 0xe
 6958 000b 55       		.uleb128 0x55
 6959 000c 17       		.uleb128 0x17
 6960 000d 11       		.uleb128 0x11
 6961 000e 01       		.uleb128 0x1
 6962 000f 10       		.uleb128 0x10
 6963 0010 17       		.uleb128 0x17
 6964 0011 00       		.byte	0
 6965 0012 00       		.byte	0
 6966 0013 02       		.uleb128 0x2
 6967 0014 24       		.uleb128 0x24
 6968 0015 00       		.byte	0
 6969 0016 0B       		.uleb128 0xb
 6970 0017 0B       		.uleb128 0xb
 6971 0018 3E       		.uleb128 0x3e
 6972 0019 0B       		.uleb128 0xb
 6973 001a 03       		.uleb128 0x3
 6974 001b 0E       		.uleb128 0xe
 6975 001c 00       		.byte	0
 6976 001d 00       		.byte	0
 6977 001e 03       		.uleb128 0x3
 6978 001f 16       		.uleb128 0x16
 6979 0020 00       		.byte	0
 6980 0021 03       		.uleb128 0x3
 6981 0022 0E       		.uleb128 0xe
 6982 0023 3A       		.uleb128 0x3a
 6983 0024 0B       		.uleb128 0xb
 6984 0025 3B       		.uleb128 0x3b
 6985 0026 0B       		.uleb128 0xb
 6986 0027 49       		.uleb128 0x49
 6987 0028 13       		.uleb128 0x13
 6988 0029 00       		.byte	0
 6989 002a 00       		.byte	0
 6990 002b 04       		.uleb128 0x4
 6991 002c 24       		.uleb128 0x24
 6992 002d 00       		.byte	0
 6993 002e 0B       		.uleb128 0xb
 6994 002f 0B       		.uleb128 0xb
 6995 0030 3E       		.uleb128 0x3e
 6996 0031 0B       		.uleb128 0xb
 6997 0032 03       		.uleb128 0x3
 6998 0033 08       		.uleb128 0x8
 6999 0034 00       		.byte	0
 7000 0035 00       		.byte	0
 7001 0036 05       		.uleb128 0x5
 7002 0037 0F       		.uleb128 0xf
 7003 0038 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 145


 7004 0039 0B       		.uleb128 0xb
 7005 003a 0B       		.uleb128 0xb
 7006 003b 49       		.uleb128 0x49
 7007 003c 13       		.uleb128 0x13
 7008 003d 00       		.byte	0
 7009 003e 00       		.byte	0
 7010 003f 06       		.uleb128 0x6
 7011 0040 16       		.uleb128 0x16
 7012 0041 00       		.byte	0
 7013 0042 03       		.uleb128 0x3
 7014 0043 0E       		.uleb128 0xe
 7015 0044 3A       		.uleb128 0x3a
 7016 0045 0B       		.uleb128 0xb
 7017 0046 3B       		.uleb128 0x3b
 7018 0047 05       		.uleb128 0x5
 7019 0048 49       		.uleb128 0x49
 7020 0049 13       		.uleb128 0x13
 7021 004a 00       		.byte	0
 7022 004b 00       		.byte	0
 7023 004c 07       		.uleb128 0x7
 7024 004d 01       		.uleb128 0x1
 7025 004e 01       		.byte	0x1
 7026 004f 49       		.uleb128 0x49
 7027 0050 13       		.uleb128 0x13
 7028 0051 01       		.uleb128 0x1
 7029 0052 13       		.uleb128 0x13
 7030 0053 00       		.byte	0
 7031 0054 00       		.byte	0
 7032 0055 08       		.uleb128 0x8
 7033 0056 21       		.uleb128 0x21
 7034 0057 00       		.byte	0
 7035 0058 49       		.uleb128 0x49
 7036 0059 13       		.uleb128 0x13
 7037 005a 2F       		.uleb128 0x2f
 7038 005b 0B       		.uleb128 0xb
 7039 005c 00       		.byte	0
 7040 005d 00       		.byte	0
 7041 005e 09       		.uleb128 0x9
 7042 005f 04       		.uleb128 0x4
 7043 0060 01       		.byte	0x1
 7044 0061 03       		.uleb128 0x3
 7045 0062 0E       		.uleb128 0xe
 7046 0063 0B       		.uleb128 0xb
 7047 0064 0B       		.uleb128 0xb
 7048 0065 3A       		.uleb128 0x3a
 7049 0066 0B       		.uleb128 0xb
 7050 0067 3B       		.uleb128 0x3b
 7051 0068 0B       		.uleb128 0xb
 7052 0069 01       		.uleb128 0x1
 7053 006a 13       		.uleb128 0x13
 7054 006b 00       		.byte	0
 7055 006c 00       		.byte	0
 7056 006d 0A       		.uleb128 0xa
 7057 006e 28       		.uleb128 0x28
 7058 006f 00       		.byte	0
 7059 0070 03       		.uleb128 0x3
 7060 0071 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 146


 7061 0072 1C       		.uleb128 0x1c
 7062 0073 0D       		.uleb128 0xd
 7063 0074 00       		.byte	0
 7064 0075 00       		.byte	0
 7065 0076 0B       		.uleb128 0xb
 7066 0077 13       		.uleb128 0x13
 7067 0078 01       		.byte	0x1
 7068 0079 03       		.uleb128 0x3
 7069 007a 0E       		.uleb128 0xe
 7070 007b 0B       		.uleb128 0xb
 7071 007c 0B       		.uleb128 0xb
 7072 007d 3A       		.uleb128 0x3a
 7073 007e 0B       		.uleb128 0xb
 7074 007f 3B       		.uleb128 0x3b
 7075 0080 0B       		.uleb128 0xb
 7076 0081 01       		.uleb128 0x1
 7077 0082 13       		.uleb128 0x13
 7078 0083 00       		.byte	0
 7079 0084 00       		.byte	0
 7080 0085 0C       		.uleb128 0xc
 7081 0086 0D       		.uleb128 0xd
 7082 0087 00       		.byte	0
 7083 0088 03       		.uleb128 0x3
 7084 0089 0E       		.uleb128 0xe
 7085 008a 3A       		.uleb128 0x3a
 7086 008b 0B       		.uleb128 0xb
 7087 008c 3B       		.uleb128 0x3b
 7088 008d 0B       		.uleb128 0xb
 7089 008e 49       		.uleb128 0x49
 7090 008f 13       		.uleb128 0x13
 7091 0090 38       		.uleb128 0x38
 7092 0091 0B       		.uleb128 0xb
 7093 0092 00       		.byte	0
 7094 0093 00       		.byte	0
 7095 0094 0D       		.uleb128 0xd
 7096 0095 2E       		.uleb128 0x2e
 7097 0096 00       		.byte	0
 7098 0097 3F       		.uleb128 0x3f
 7099 0098 19       		.uleb128 0x19
 7100 0099 03       		.uleb128 0x3
 7101 009a 0E       		.uleb128 0xe
 7102 009b 3A       		.uleb128 0x3a
 7103 009c 0B       		.uleb128 0xb
 7104 009d 3B       		.uleb128 0x3b
 7105 009e 0B       		.uleb128 0xb
 7106 009f 27       		.uleb128 0x27
 7107 00a0 19       		.uleb128 0x19
 7108 00a1 11       		.uleb128 0x11
 7109 00a2 01       		.uleb128 0x1
 7110 00a3 12       		.uleb128 0x12
 7111 00a4 06       		.uleb128 0x6
 7112 00a5 40       		.uleb128 0x40
 7113 00a6 18       		.uleb128 0x18
 7114 00a7 9742     		.uleb128 0x2117
 7115 00a9 19       		.uleb128 0x19
 7116 00aa 00       		.byte	0
 7117 00ab 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 147


 7118 00ac 0E       		.uleb128 0xe
 7119 00ad 2E       		.uleb128 0x2e
 7120 00ae 00       		.byte	0
 7121 00af 3F       		.uleb128 0x3f
 7122 00b0 19       		.uleb128 0x19
 7123 00b1 03       		.uleb128 0x3
 7124 00b2 0E       		.uleb128 0xe
 7125 00b3 3A       		.uleb128 0x3a
 7126 00b4 0B       		.uleb128 0xb
 7127 00b5 3B       		.uleb128 0x3b
 7128 00b6 0B       		.uleb128 0xb
 7129 00b7 27       		.uleb128 0x27
 7130 00b8 19       		.uleb128 0x19
 7131 00b9 11       		.uleb128 0x11
 7132 00ba 01       		.uleb128 0x1
 7133 00bb 12       		.uleb128 0x12
 7134 00bc 06       		.uleb128 0x6
 7135 00bd 40       		.uleb128 0x40
 7136 00be 18       		.uleb128 0x18
 7137 00bf 9642     		.uleb128 0x2116
 7138 00c1 19       		.uleb128 0x19
 7139 00c2 00       		.byte	0
 7140 00c3 00       		.byte	0
 7141 00c4 0F       		.uleb128 0xf
 7142 00c5 2E       		.uleb128 0x2e
 7143 00c6 01       		.byte	0x1
 7144 00c7 3F       		.uleb128 0x3f
 7145 00c8 19       		.uleb128 0x19
 7146 00c9 03       		.uleb128 0x3
 7147 00ca 0E       		.uleb128 0xe
 7148 00cb 3A       		.uleb128 0x3a
 7149 00cc 0B       		.uleb128 0xb
 7150 00cd 3B       		.uleb128 0x3b
 7151 00ce 0B       		.uleb128 0xb
 7152 00cf 27       		.uleb128 0x27
 7153 00d0 19       		.uleb128 0x19
 7154 00d1 11       		.uleb128 0x11
 7155 00d2 01       		.uleb128 0x1
 7156 00d3 12       		.uleb128 0x12
 7157 00d4 06       		.uleb128 0x6
 7158 00d5 40       		.uleb128 0x40
 7159 00d6 18       		.uleb128 0x18
 7160 00d7 9642     		.uleb128 0x2116
 7161 00d9 19       		.uleb128 0x19
 7162 00da 01       		.uleb128 0x1
 7163 00db 13       		.uleb128 0x13
 7164 00dc 00       		.byte	0
 7165 00dd 00       		.byte	0
 7166 00de 10       		.uleb128 0x10
 7167 00df 0B       		.uleb128 0xb
 7168 00e0 01       		.byte	0x1
 7169 00e1 11       		.uleb128 0x11
 7170 00e2 01       		.uleb128 0x1
 7171 00e3 12       		.uleb128 0x12
 7172 00e4 06       		.uleb128 0x6
 7173 00e5 01       		.uleb128 0x1
 7174 00e6 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 148


 7175 00e7 00       		.byte	0
 7176 00e8 00       		.byte	0
 7177 00e9 11       		.uleb128 0x11
 7178 00ea 34       		.uleb128 0x34
 7179 00eb 00       		.byte	0
 7180 00ec 03       		.uleb128 0x3
 7181 00ed 0E       		.uleb128 0xe
 7182 00ee 3A       		.uleb128 0x3a
 7183 00ef 0B       		.uleb128 0xb
 7184 00f0 3B       		.uleb128 0x3b
 7185 00f1 0B       		.uleb128 0xb
 7186 00f2 49       		.uleb128 0x49
 7187 00f3 13       		.uleb128 0x13
 7188 00f4 02       		.uleb128 0x2
 7189 00f5 18       		.uleb128 0x18
 7190 00f6 00       		.byte	0
 7191 00f7 00       		.byte	0
 7192 00f8 12       		.uleb128 0x12
 7193 00f9 0B       		.uleb128 0xb
 7194 00fa 01       		.byte	0x1
 7195 00fb 11       		.uleb128 0x11
 7196 00fc 01       		.uleb128 0x1
 7197 00fd 12       		.uleb128 0x12
 7198 00fe 06       		.uleb128 0x6
 7199 00ff 00       		.byte	0
 7200 0100 00       		.byte	0
 7201 0101 13       		.uleb128 0x13
 7202 0102 2E       		.uleb128 0x2e
 7203 0103 01       		.byte	0x1
 7204 0104 3F       		.uleb128 0x3f
 7205 0105 19       		.uleb128 0x19
 7206 0106 03       		.uleb128 0x3
 7207 0107 0E       		.uleb128 0xe
 7208 0108 3A       		.uleb128 0x3a
 7209 0109 0B       		.uleb128 0xb
 7210 010a 3B       		.uleb128 0x3b
 7211 010b 0B       		.uleb128 0xb
 7212 010c 49       		.uleb128 0x49
 7213 010d 13       		.uleb128 0x13
 7214 010e 11       		.uleb128 0x11
 7215 010f 01       		.uleb128 0x1
 7216 0110 12       		.uleb128 0x12
 7217 0111 06       		.uleb128 0x6
 7218 0112 40       		.uleb128 0x40
 7219 0113 18       		.uleb128 0x18
 7220 0114 9642     		.uleb128 0x2116
 7221 0116 19       		.uleb128 0x19
 7222 0117 01       		.uleb128 0x1
 7223 0118 13       		.uleb128 0x13
 7224 0119 00       		.byte	0
 7225 011a 00       		.byte	0
 7226 011b 14       		.uleb128 0x14
 7227 011c 34       		.uleb128 0x34
 7228 011d 00       		.byte	0
 7229 011e 03       		.uleb128 0x3
 7230 011f 0E       		.uleb128 0xe
 7231 0120 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 149


 7232 0121 0B       		.uleb128 0xb
 7233 0122 3B       		.uleb128 0x3b
 7234 0123 05       		.uleb128 0x5
 7235 0124 49       		.uleb128 0x49
 7236 0125 13       		.uleb128 0x13
 7237 0126 02       		.uleb128 0x2
 7238 0127 18       		.uleb128 0x18
 7239 0128 00       		.byte	0
 7240 0129 00       		.byte	0
 7241 012a 15       		.uleb128 0x15
 7242 012b 34       		.uleb128 0x34
 7243 012c 00       		.byte	0
 7244 012d 03       		.uleb128 0x3
 7245 012e 08       		.uleb128 0x8
 7246 012f 3A       		.uleb128 0x3a
 7247 0130 0B       		.uleb128 0xb
 7248 0131 3B       		.uleb128 0x3b
 7249 0132 05       		.uleb128 0x5
 7250 0133 49       		.uleb128 0x49
 7251 0134 13       		.uleb128 0x13
 7252 0135 02       		.uleb128 0x2
 7253 0136 18       		.uleb128 0x18
 7254 0137 00       		.byte	0
 7255 0138 00       		.byte	0
 7256 0139 16       		.uleb128 0x16
 7257 013a 2E       		.uleb128 0x2e
 7258 013b 01       		.byte	0x1
 7259 013c 3F       		.uleb128 0x3f
 7260 013d 19       		.uleb128 0x19
 7261 013e 03       		.uleb128 0x3
 7262 013f 0E       		.uleb128 0xe
 7263 0140 3A       		.uleb128 0x3a
 7264 0141 0B       		.uleb128 0xb
 7265 0142 3B       		.uleb128 0x3b
 7266 0143 05       		.uleb128 0x5
 7267 0144 11       		.uleb128 0x11
 7268 0145 01       		.uleb128 0x1
 7269 0146 12       		.uleb128 0x12
 7270 0147 06       		.uleb128 0x6
 7271 0148 40       		.uleb128 0x40
 7272 0149 18       		.uleb128 0x18
 7273 014a 9742     		.uleb128 0x2117
 7274 014c 19       		.uleb128 0x19
 7275 014d 01       		.uleb128 0x1
 7276 014e 13       		.uleb128 0x13
 7277 014f 00       		.byte	0
 7278 0150 00       		.byte	0
 7279 0151 17       		.uleb128 0x17
 7280 0152 2E       		.uleb128 0x2e
 7281 0153 01       		.byte	0x1
 7282 0154 3F       		.uleb128 0x3f
 7283 0155 19       		.uleb128 0x19
 7284 0156 03       		.uleb128 0x3
 7285 0157 0E       		.uleb128 0xe
 7286 0158 3A       		.uleb128 0x3a
 7287 0159 0B       		.uleb128 0xb
 7288 015a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 150


 7289 015b 05       		.uleb128 0x5
 7290 015c 27       		.uleb128 0x27
 7291 015d 19       		.uleb128 0x19
 7292 015e 11       		.uleb128 0x11
 7293 015f 01       		.uleb128 0x1
 7294 0160 12       		.uleb128 0x12
 7295 0161 06       		.uleb128 0x6
 7296 0162 40       		.uleb128 0x40
 7297 0163 18       		.uleb128 0x18
 7298 0164 9642     		.uleb128 0x2116
 7299 0166 19       		.uleb128 0x19
 7300 0167 01       		.uleb128 0x1
 7301 0168 13       		.uleb128 0x13
 7302 0169 00       		.byte	0
 7303 016a 00       		.byte	0
 7304 016b 18       		.uleb128 0x18
 7305 016c 05       		.uleb128 0x5
 7306 016d 00       		.byte	0
 7307 016e 03       		.uleb128 0x3
 7308 016f 08       		.uleb128 0x8
 7309 0170 3A       		.uleb128 0x3a
 7310 0171 0B       		.uleb128 0xb
 7311 0172 3B       		.uleb128 0x3b
 7312 0173 05       		.uleb128 0x5
 7313 0174 49       		.uleb128 0x49
 7314 0175 13       		.uleb128 0x13
 7315 0176 02       		.uleb128 0x2
 7316 0177 18       		.uleb128 0x18
 7317 0178 00       		.byte	0
 7318 0179 00       		.byte	0
 7319 017a 19       		.uleb128 0x19
 7320 017b 2E       		.uleb128 0x2e
 7321 017c 01       		.byte	0x1
 7322 017d 3F       		.uleb128 0x3f
 7323 017e 19       		.uleb128 0x19
 7324 017f 03       		.uleb128 0x3
 7325 0180 0E       		.uleb128 0xe
 7326 0181 3A       		.uleb128 0x3a
 7327 0182 0B       		.uleb128 0xb
 7328 0183 3B       		.uleb128 0x3b
 7329 0184 05       		.uleb128 0x5
 7330 0185 11       		.uleb128 0x11
 7331 0186 01       		.uleb128 0x1
 7332 0187 12       		.uleb128 0x12
 7333 0188 06       		.uleb128 0x6
 7334 0189 40       		.uleb128 0x40
 7335 018a 18       		.uleb128 0x18
 7336 018b 9642     		.uleb128 0x2116
 7337 018d 19       		.uleb128 0x19
 7338 018e 01       		.uleb128 0x1
 7339 018f 13       		.uleb128 0x13
 7340 0190 00       		.byte	0
 7341 0191 00       		.byte	0
 7342 0192 1A       		.uleb128 0x1a
 7343 0193 05       		.uleb128 0x5
 7344 0194 00       		.byte	0
 7345 0195 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 151


 7346 0196 0E       		.uleb128 0xe
 7347 0197 3A       		.uleb128 0x3a
 7348 0198 0B       		.uleb128 0xb
 7349 0199 3B       		.uleb128 0x3b
 7350 019a 05       		.uleb128 0x5
 7351 019b 49       		.uleb128 0x49
 7352 019c 13       		.uleb128 0x13
 7353 019d 02       		.uleb128 0x2
 7354 019e 18       		.uleb128 0x18
 7355 019f 00       		.byte	0
 7356 01a0 00       		.byte	0
 7357 01a1 1B       		.uleb128 0x1b
 7358 01a2 2E       		.uleb128 0x2e
 7359 01a3 00       		.byte	0
 7360 01a4 3F       		.uleb128 0x3f
 7361 01a5 19       		.uleb128 0x19
 7362 01a6 03       		.uleb128 0x3
 7363 01a7 0E       		.uleb128 0xe
 7364 01a8 3A       		.uleb128 0x3a
 7365 01a9 0B       		.uleb128 0xb
 7366 01aa 3B       		.uleb128 0x3b
 7367 01ab 05       		.uleb128 0x5
 7368 01ac 11       		.uleb128 0x11
 7369 01ad 01       		.uleb128 0x1
 7370 01ae 12       		.uleb128 0x12
 7371 01af 06       		.uleb128 0x6
 7372 01b0 40       		.uleb128 0x40
 7373 01b1 18       		.uleb128 0x18
 7374 01b2 9642     		.uleb128 0x2116
 7375 01b4 19       		.uleb128 0x19
 7376 01b5 00       		.byte	0
 7377 01b6 00       		.byte	0
 7378 01b7 1C       		.uleb128 0x1c
 7379 01b8 2E       		.uleb128 0x2e
 7380 01b9 00       		.byte	0
 7381 01ba 3F       		.uleb128 0x3f
 7382 01bb 19       		.uleb128 0x19
 7383 01bc 03       		.uleb128 0x3
 7384 01bd 0E       		.uleb128 0xe
 7385 01be 3A       		.uleb128 0x3a
 7386 01bf 0B       		.uleb128 0xb
 7387 01c0 3B       		.uleb128 0x3b
 7388 01c1 05       		.uleb128 0x5
 7389 01c2 11       		.uleb128 0x11
 7390 01c3 01       		.uleb128 0x1
 7391 01c4 12       		.uleb128 0x12
 7392 01c5 06       		.uleb128 0x6
 7393 01c6 40       		.uleb128 0x40
 7394 01c7 18       		.uleb128 0x18
 7395 01c8 9742     		.uleb128 0x2117
 7396 01ca 19       		.uleb128 0x19
 7397 01cb 00       		.byte	0
 7398 01cc 00       		.byte	0
 7399 01cd 1D       		.uleb128 0x1d
 7400 01ce 34       		.uleb128 0x34
 7401 01cf 00       		.byte	0
 7402 01d0 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 152


 7403 01d1 0E       		.uleb128 0xe
 7404 01d2 3A       		.uleb128 0x3a
 7405 01d3 0B       		.uleb128 0xb
 7406 01d4 3B       		.uleb128 0x3b
 7407 01d5 05       		.uleb128 0x5
 7408 01d6 49       		.uleb128 0x49
 7409 01d7 13       		.uleb128 0x13
 7410 01d8 3F       		.uleb128 0x3f
 7411 01d9 19       		.uleb128 0x19
 7412 01da 3C       		.uleb128 0x3c
 7413 01db 19       		.uleb128 0x19
 7414 01dc 00       		.byte	0
 7415 01dd 00       		.byte	0
 7416 01de 1E       		.uleb128 0x1e
 7417 01df 35       		.uleb128 0x35
 7418 01e0 00       		.byte	0
 7419 01e1 49       		.uleb128 0x49
 7420 01e2 13       		.uleb128 0x13
 7421 01e3 00       		.byte	0
 7422 01e4 00       		.byte	0
 7423 01e5 1F       		.uleb128 0x1f
 7424 01e6 34       		.uleb128 0x34
 7425 01e7 00       		.byte	0
 7426 01e8 03       		.uleb128 0x3
 7427 01e9 08       		.uleb128 0x8
 7428 01ea 3A       		.uleb128 0x3a
 7429 01eb 0B       		.uleb128 0xb
 7430 01ec 3B       		.uleb128 0x3b
 7431 01ed 0B       		.uleb128 0xb
 7432 01ee 49       		.uleb128 0x49
 7433 01ef 13       		.uleb128 0x13
 7434 01f0 3F       		.uleb128 0x3f
 7435 01f1 19       		.uleb128 0x19
 7436 01f2 02       		.uleb128 0x2
 7437 01f3 18       		.uleb128 0x18
 7438 01f4 00       		.byte	0
 7439 01f5 00       		.byte	0
 7440 01f6 20       		.uleb128 0x20
 7441 01f7 34       		.uleb128 0x34
 7442 01f8 00       		.byte	0
 7443 01f9 03       		.uleb128 0x3
 7444 01fa 0E       		.uleb128 0xe
 7445 01fb 3A       		.uleb128 0x3a
 7446 01fc 0B       		.uleb128 0xb
 7447 01fd 3B       		.uleb128 0x3b
 7448 01fe 0B       		.uleb128 0xb
 7449 01ff 49       		.uleb128 0x49
 7450 0200 13       		.uleb128 0x13
 7451 0201 3F       		.uleb128 0x3f
 7452 0202 19       		.uleb128 0x19
 7453 0203 02       		.uleb128 0x2
 7454 0204 18       		.uleb128 0x18
 7455 0205 00       		.byte	0
 7456 0206 00       		.byte	0
 7457 0207 21       		.uleb128 0x21
 7458 0208 21       		.uleb128 0x21
 7459 0209 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 153


 7460 020a 49       		.uleb128 0x49
 7461 020b 13       		.uleb128 0x13
 7462 020c 2F       		.uleb128 0x2f
 7463 020d 05       		.uleb128 0x5
 7464 020e 00       		.byte	0
 7465 020f 00       		.byte	0
 7466 0210 22       		.uleb128 0x22
 7467 0211 34       		.uleb128 0x34
 7468 0212 00       		.byte	0
 7469 0213 03       		.uleb128 0x3
 7470 0214 0E       		.uleb128 0xe
 7471 0215 3A       		.uleb128 0x3a
 7472 0216 0B       		.uleb128 0xb
 7473 0217 3B       		.uleb128 0x3b
 7474 0218 05       		.uleb128 0x5
 7475 0219 49       		.uleb128 0x49
 7476 021a 13       		.uleb128 0x13
 7477 021b 3F       		.uleb128 0x3f
 7478 021c 19       		.uleb128 0x19
 7479 021d 02       		.uleb128 0x2
 7480 021e 18       		.uleb128 0x18
 7481 021f 00       		.byte	0
 7482 0220 00       		.byte	0
 7483 0221 00       		.byte	0
 7484              		.section	.debug_aranges,"",%progbits
 7485 0000 6C010000 		.4byte	0x16c
 7486 0004 0200     		.2byte	0x2
 7487 0006 00000000 		.4byte	.Ldebug_info0
 7488 000a 04       		.byte	0x4
 7489 000b 00       		.byte	0
 7490 000c 0000     		.2byte	0
 7491 000e 0000     		.2byte	0
 7492 0010 00000000 		.4byte	.LFB63
 7493 0014 0C000000 		.4byte	.LFE63-.LFB63
 7494 0018 00000000 		.4byte	.LFB64
 7495 001c 2C000000 		.4byte	.LFE64-.LFB64
 7496 0020 00000000 		.4byte	.LFB65
 7497 0024 A4010000 		.4byte	.LFE65-.LFB65
 7498 0028 00000000 		.4byte	.LFB66
 7499 002c 34010000 		.4byte	.LFE66-.LFB66
 7500 0030 00000000 		.4byte	.LFB67
 7501 0034 20000000 		.4byte	.LFE67-.LFB67
 7502 0038 00000000 		.4byte	.LFB68
 7503 003c 28000000 		.4byte	.LFE68-.LFB68
 7504 0040 00000000 		.4byte	.LFB69
 7505 0044 0A000000 		.4byte	.LFE69-.LFB69
 7506 0048 00000000 		.4byte	.LFB70
 7507 004c 28000000 		.4byte	.LFE70-.LFB70
 7508 0050 00000000 		.4byte	.LFB71
 7509 0054 84060000 		.4byte	.LFE71-.LFB71
 7510 0058 00000000 		.4byte	.LFB72
 7511 005c 60010000 		.4byte	.LFE72-.LFB72
 7512 0060 00000000 		.4byte	.LFB73
 7513 0064 18000000 		.4byte	.LFE73-.LFB73
 7514 0068 00000000 		.4byte	.LFB74
 7515 006c 18000000 		.4byte	.LFE74-.LFB74
 7516 0070 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 154


 7517 0074 54000000 		.4byte	.LFE75-.LFB75
 7518 0078 00000000 		.4byte	.LFB76
 7519 007c F4000000 		.4byte	.LFE76-.LFB76
 7520 0080 00000000 		.4byte	.LFB77
 7521 0084 18000000 		.4byte	.LFE77-.LFB77
 7522 0088 00000000 		.4byte	.LFB78
 7523 008c 18000000 		.4byte	.LFE78-.LFB78
 7524 0090 00000000 		.4byte	.LFB79
 7525 0094 22000000 		.4byte	.LFE79-.LFB79
 7526 0098 00000000 		.4byte	.LFB80
 7527 009c 1C000000 		.4byte	.LFE80-.LFB80
 7528 00a0 00000000 		.4byte	.LFB81
 7529 00a4 34000000 		.4byte	.LFE81-.LFB81
 7530 00a8 00000000 		.4byte	.LFB82
 7531 00ac 38000000 		.4byte	.LFE82-.LFB82
 7532 00b0 00000000 		.4byte	.LFB83
 7533 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7534 00b8 00000000 		.4byte	.LFB84
 7535 00bc 38000000 		.4byte	.LFE84-.LFB84
 7536 00c0 00000000 		.4byte	.LFB85
 7537 00c4 38000000 		.4byte	.LFE85-.LFB85
 7538 00c8 00000000 		.4byte	.LFB86
 7539 00cc 38000000 		.4byte	.LFE86-.LFB86
 7540 00d0 00000000 		.4byte	.LFB87
 7541 00d4 14000000 		.4byte	.LFE87-.LFB87
 7542 00d8 00000000 		.4byte	.LFB88
 7543 00dc 18000000 		.4byte	.LFE88-.LFB88
 7544 00e0 00000000 		.4byte	.LFB89
 7545 00e4 18000000 		.4byte	.LFE89-.LFB89
 7546 00e8 00000000 		.4byte	.LFB90
 7547 00ec 18000000 		.4byte	.LFE90-.LFB90
 7548 00f0 00000000 		.4byte	.LFB91
 7549 00f4 18000000 		.4byte	.LFE91-.LFB91
 7550 00f8 00000000 		.4byte	.LFB92
 7551 00fc B8000000 		.4byte	.LFE92-.LFB92
 7552 0100 00000000 		.4byte	.LFB93
 7553 0104 B8030000 		.4byte	.LFE93-.LFB93
 7554 0108 00000000 		.4byte	.LFB94
 7555 010c 40000000 		.4byte	.LFE94-.LFB94
 7556 0110 00000000 		.4byte	.LFB95
 7557 0114 40000000 		.4byte	.LFE95-.LFB95
 7558 0118 00000000 		.4byte	.LFB96
 7559 011c 30020000 		.4byte	.LFE96-.LFB96
 7560 0120 00000000 		.4byte	.LFB97
 7561 0124 0C000000 		.4byte	.LFE97-.LFB97
 7562 0128 00000000 		.4byte	.LFB98
 7563 012c 4C010000 		.4byte	.LFE98-.LFB98
 7564 0130 00000000 		.4byte	.LFB99
 7565 0134 0C000000 		.4byte	.LFE99-.LFB99
 7566 0138 00000000 		.4byte	.LFB100
 7567 013c C0000000 		.4byte	.LFE100-.LFB100
 7568 0140 00000000 		.4byte	.LFB101
 7569 0144 B8000000 		.4byte	.LFE101-.LFB101
 7570 0148 00000000 		.4byte	.LFB102
 7571 014c 4A000000 		.4byte	.LFE102-.LFB102
 7572 0150 00000000 		.4byte	.LFB103
 7573 0154 68000000 		.4byte	.LFE103-.LFB103
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 155


 7574 0158 00000000 		.4byte	.LFB104
 7575 015c 50000000 		.4byte	.LFE104-.LFB104
 7576 0160 00000000 		.4byte	.LFB105
 7577 0164 0C000000 		.4byte	.LFE105-.LFB105
 7578 0168 00000000 		.4byte	0
 7579 016c 00000000 		.4byte	0
 7580              		.section	.debug_ranges,"",%progbits
 7581              	.Ldebug_ranges0:
 7582 0000 00000000 		.4byte	.LFB63
 7583 0004 0C000000 		.4byte	.LFE63
 7584 0008 00000000 		.4byte	.LFB64
 7585 000c 2C000000 		.4byte	.LFE64
 7586 0010 00000000 		.4byte	.LFB65
 7587 0014 A4010000 		.4byte	.LFE65
 7588 0018 00000000 		.4byte	.LFB66
 7589 001c 34010000 		.4byte	.LFE66
 7590 0020 00000000 		.4byte	.LFB67
 7591 0024 20000000 		.4byte	.LFE67
 7592 0028 00000000 		.4byte	.LFB68
 7593 002c 28000000 		.4byte	.LFE68
 7594 0030 00000000 		.4byte	.LFB69
 7595 0034 0A000000 		.4byte	.LFE69
 7596 0038 00000000 		.4byte	.LFB70
 7597 003c 28000000 		.4byte	.LFE70
 7598 0040 00000000 		.4byte	.LFB71
 7599 0044 84060000 		.4byte	.LFE71
 7600 0048 00000000 		.4byte	.LFB72
 7601 004c 60010000 		.4byte	.LFE72
 7602 0050 00000000 		.4byte	.LFB73
 7603 0054 18000000 		.4byte	.LFE73
 7604 0058 00000000 		.4byte	.LFB74
 7605 005c 18000000 		.4byte	.LFE74
 7606 0060 00000000 		.4byte	.LFB75
 7607 0064 54000000 		.4byte	.LFE75
 7608 0068 00000000 		.4byte	.LFB76
 7609 006c F4000000 		.4byte	.LFE76
 7610 0070 00000000 		.4byte	.LFB77
 7611 0074 18000000 		.4byte	.LFE77
 7612 0078 00000000 		.4byte	.LFB78
 7613 007c 18000000 		.4byte	.LFE78
 7614 0080 00000000 		.4byte	.LFB79
 7615 0084 22000000 		.4byte	.LFE79
 7616 0088 00000000 		.4byte	.LFB80
 7617 008c 1C000000 		.4byte	.LFE80
 7618 0090 00000000 		.4byte	.LFB81
 7619 0094 34000000 		.4byte	.LFE81
 7620 0098 00000000 		.4byte	.LFB82
 7621 009c 38000000 		.4byte	.LFE82
 7622 00a0 00000000 		.4byte	.LFB83
 7623 00a4 4C000000 		.4byte	.LFE83
 7624 00a8 00000000 		.4byte	.LFB84
 7625 00ac 38000000 		.4byte	.LFE84
 7626 00b0 00000000 		.4byte	.LFB85
 7627 00b4 38000000 		.4byte	.LFE85
 7628 00b8 00000000 		.4byte	.LFB86
 7629 00bc 38000000 		.4byte	.LFE86
 7630 00c0 00000000 		.4byte	.LFB87
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 156


 7631 00c4 14000000 		.4byte	.LFE87
 7632 00c8 00000000 		.4byte	.LFB88
 7633 00cc 18000000 		.4byte	.LFE88
 7634 00d0 00000000 		.4byte	.LFB89
 7635 00d4 18000000 		.4byte	.LFE89
 7636 00d8 00000000 		.4byte	.LFB90
 7637 00dc 18000000 		.4byte	.LFE90
 7638 00e0 00000000 		.4byte	.LFB91
 7639 00e4 18000000 		.4byte	.LFE91
 7640 00e8 00000000 		.4byte	.LFB92
 7641 00ec B8000000 		.4byte	.LFE92
 7642 00f0 00000000 		.4byte	.LFB93
 7643 00f4 B8030000 		.4byte	.LFE93
 7644 00f8 00000000 		.4byte	.LFB94
 7645 00fc 40000000 		.4byte	.LFE94
 7646 0100 00000000 		.4byte	.LFB95
 7647 0104 40000000 		.4byte	.LFE95
 7648 0108 00000000 		.4byte	.LFB96
 7649 010c 30020000 		.4byte	.LFE96
 7650 0110 00000000 		.4byte	.LFB97
 7651 0114 0C000000 		.4byte	.LFE97
 7652 0118 00000000 		.4byte	.LFB98
 7653 011c 4C010000 		.4byte	.LFE98
 7654 0120 00000000 		.4byte	.LFB99
 7655 0124 0C000000 		.4byte	.LFE99
 7656 0128 00000000 		.4byte	.LFB100
 7657 012c C0000000 		.4byte	.LFE100
 7658 0130 00000000 		.4byte	.LFB101
 7659 0134 B8000000 		.4byte	.LFE101
 7660 0138 00000000 		.4byte	.LFB102
 7661 013c 4A000000 		.4byte	.LFE102
 7662 0140 00000000 		.4byte	.LFB103
 7663 0144 68000000 		.4byte	.LFE103
 7664 0148 00000000 		.4byte	.LFB104
 7665 014c 50000000 		.4byte	.LFE104
 7666 0150 00000000 		.4byte	.LFB105
 7667 0154 0C000000 		.4byte	.LFE105
 7668 0158 00000000 		.4byte	0
 7669 015c 00000000 		.4byte	0
 7670              		.section	.debug_line,"",%progbits
 7671              	.Ldebug_line0:
 7672 0000 BD070000 		.section	.debug_str,"MS",%progbits,1
 7672      02006701 
 7672      00000201 
 7672      FB0E0D00 
 7672      01010101 
 7673              	.LASF142:
 7674 0000 64697265 		.ascii	"direction\000"
 7674      6374696F 
 7674      6E00
 7675              	.LASF191:
 7676 000a 74726163 		.ascii	"tracked_direction\000"
 7676      6B65645F 
 7676      64697265 
 7676      6374696F 
 7676      6E00
 7677              	.LASF199:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 157


 7678 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7678      73657273 
 7678      5C4C6F67 
 7678      616E5C44 
 7678      65736B74 
 7679 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7679      315F436C 
 7679      6173732E 
 7679      63796473 
 7679      6E00
 7680              	.LASF25:
 7681 005b 52545552 		.ascii	"RTURN\000"
 7681      4E00
 7682              	.LASF196:
 7683 0061 72696768 		.ascii	"rightTurnCount\000"
 7683      74547572 
 7683      6E436F75 
 7683      6E7400
 7684              	.LASF39:
 7685 0070 44455354 		.ascii	"DEST_TEST\000"
 7685      5F544553 
 7685      5400
 7686              	.LASF150:
 7687 007a 71756164 		.ascii	"quad_diff1\000"
 7687      5F646966 
 7687      663100
 7688              	.LASF151:
 7689 0085 71756164 		.ascii	"quad_diff2\000"
 7689      5F646966 
 7689      663200
 7690              	.LASF104:
 7691 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7691      5F446563 
 7691      5F726573 
 7691      706F6E73 
 7691      6500
 7692              	.LASF170:
 7693 00a2 70726576 		.ascii	"prevVoltage\000"
 7693      566F6C74 
 7693      61676500 
 7694              	.LASF153:
 7695 00ae 73746172 		.ascii	"start_turn_count\000"
 7695      745F7475 
 7695      726E5F63 
 7695      6F756E74 
 7695      00
 7696              	.LASF10:
 7697 00bf 756E7369 		.ascii	"unsigned int\000"
 7697      676E6564 
 7697      20696E74 
 7697      00
 7698              	.LASF180:
 7699 00cc 74726163 		.ascii	"track_mode\000"
 7699      6B5F6D6F 
 7699      646500
 7700              	.LASF5:
 7701 00d7 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 158


 7701      7433325F 
 7701      7400
 7702              	.LASF19:
 7703 00e1 696E7431 		.ascii	"int16\000"
 7703      3600
 7704              	.LASF177:
 7705 00e7 73797374 		.ascii	"system_state\000"
 7705      656D5F73 
 7705      74617465 
 7705      00
 7706              	.LASF24:
 7707 00f4 4C545552 		.ascii	"LTURN\000"
 7707      4E00
 7708              	.LASF71:
 7709 00fa 6E657874 		.ascii	"nextInstruction\000"
 7709      496E7374 
 7709      72756374 
 7709      696F6E00 
 7710              	.LASF160:
 7711 010a 74617267 		.ascii	"target_distance_quad\000"
 7711      65745F64 
 7711      69737461 
 7711      6E63655F 
 7711      71756164 
 7712              	.LASF27:
 7713 011f 54524143 		.ascii	"TRACKING\000"
 7713      4B494E47 
 7713      00
 7714              	.LASF171:
 7715 0128 70726576 		.ascii	"prevVoltage2\000"
 7715      566F6C74 
 7715      61676532 
 7715      00
 7716              	.LASF185:
 7717 0135 73656E73 		.ascii	"sensorsDisabled\000"
 7717      6F727344 
 7717      69736162 
 7717      6C656400 
 7718              	.LASF72:
 7719 0145 7061636B 		.ascii	"packet_bytes\000"
 7719      65745F62 
 7719      79746573 
 7719      00
 7720              	.LASF54:
 7721 0152 67325F78 		.ascii	"g2_xpos\000"
 7721      706F7300 
 7722              	.LASF32:
 7723 015a 6D6F6465 		.ascii	"mode\000"
 7723      00
 7724              	.LASF146:
 7725 015f 71756164 		.ascii	"quad_count1\000"
 7725      5F636F75 
 7725      6E743100 
 7726              	.LASF147:
 7727 016b 71756164 		.ascii	"quad_count2\000"
 7727      5F636F75 
 7727      6E743200 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 159


 7728              	.LASF113:
 7729 0177 74726163 		.ascii	"trackLineU\000"
 7729      6B4C696E 
 7729      655500
 7730              	.LASF190:
 7731 0182 726F626F 		.ascii	"robot_direction\000"
 7731      745F6469 
 7731      72656374 
 7731      696F6E00 
 7732              	.LASF112:
 7733 0192 74726163 		.ascii	"trackLineZ\000"
 7733      6B4C696E 
 7733      655A00
 7734              	.LASF195:
 7735 019d 6C656674 		.ascii	"leftTurnCount\000"
 7735      5475726E 
 7735      436F756E 
 7735      7400
 7736              	.LASF183:
 7737 01ab 73706565 		.ascii	"speed\000"
 7737      6400
 7738              	.LASF36:
 7739 01b1 53515541 		.ascii	"SQUARE_TRACK\000"
 7739      52455F54 
 7739      5241434B 
 7739      00
 7740              	.LASF138:
 7741 01be 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7741      5F72665F 
 7741      7472616E 
 7741      736D6973 
 7741      73696F6E 
 7742              	.LASF139:
 7743 01da 666C6167 		.ascii	"flag_print_rf\000"
 7743      5F707269 
 7743      6E745F72 
 7743      6600
 7744              	.LASF179:
 7745 01e8 6D6F7665 		.ascii	"movement_state\000"
 7745      6D656E74 
 7745      5F737461 
 7745      746500
 7746              	.LASF28:
 7747 01f7 54524143 		.ascii	"TRACKING_U\000"
 7747      4B494E47 
 7747      5F5500
 7748              	.LASF94:
 7749 0202 696E6974 		.ascii	"initForward\000"
 7749      466F7277 
 7749      61726400 
 7750              	.LASF14:
 7751 020e 75696E74 		.ascii	"uint32_t\000"
 7751      33325F74 
 7751      00
 7752              	.LASF57:
 7753 0217 67325F64 		.ascii	"g2_direction\000"
 7753      69726563 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 160


 7753      74696F6E 
 7753      00
 7754              	.LASF60:
 7755 0224 6973725F 		.ascii	"isr_quad1\000"
 7755      71756164 
 7755      3100
 7756              	.LASF20:
 7757 022e 666C6F61 		.ascii	"float\000"
 7757      7400
 7758              	.LASF79:
 7759 0234 73657453 		.ascii	"setSpeed\000"
 7759      70656564 
 7759      00
 7760              	.LASF175:
 7761 023d 75736242 		.ascii	"usbBuffer\000"
 7761      75666665 
 7761      7200
 7762              	.LASF42:
 7763 0247 696E6465 		.ascii	"index\000"
 7763      7800
 7764              	.LASF23:
 7765 024d 44524956 		.ascii	"DRIVE\000"
 7765      4500
 7766              	.LASF74:
 7767 0253 73747269 		.ascii	"string_packet\000"
 7767      6E675F70 
 7767      61636B65 
 7767      7400
 7768              	.LASF103:
 7769 0261 6368616E 		.ascii	"changeToBT\000"
 7769      6765546F 
 7769      425400
 7770              	.LASF82:
 7771 026c 636F756E 		.ascii	"countsLeft\000"
 7771      74734C65 
 7771      667400
 7772              	.LASF87:
 7773 0277 64726976 		.ascii	"driveForwards\000"
 7773      65466F72 
 7773      77617264 
 7773      7300
 7774              	.LASF89:
 7775 0285 7475726E 		.ascii	"turnLeft\000"
 7775      4C656674 
 7775      00
 7776              	.LASF9:
 7777 028e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7777      206C6F6E 
 7777      6720756E 
 7777      7369676E 
 7777      65642069 
 7778              	.LASF135:
 7779 02a5 666C6167 		.ascii	"flag_packet\000"
 7779      5F706163 
 7779      6B657400 
 7780              	.LASF169:
 7781 02b1 66726F6E 		.ascii	"frontSensors\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 161


 7781      7453656E 
 7781      736F7273 
 7781      00
 7782              	.LASF66:
 7783 02be 6973725F 		.ascii	"isr_turn_timer\000"
 7783      7475726E 
 7783      5F74696D 
 7783      657200
 7784              	.LASF102:
 7785 02cd 6368616E 		.ascii	"changeToRF\000"
 7785      6765546F 
 7785      524600
 7786              	.LASF91:
 7787 02d8 696E6974 		.ascii	"initTurnLeft\000"
 7787      5475726E 
 7787      4C656674 
 7787      00
 7788              	.LASF168:
 7789 02e5 706F7274 		.ascii	"portOpen\000"
 7789      4F70656E 
 7789      00
 7790              	.LASF95:
 7791 02ee 696E6974 		.ascii	"initBrake\000"
 7791      4272616B 
 7791      6500
 7792              	.LASF131:
 7793 02f8 666C6167 		.ascii	"flag_ts_update\000"
 7793      5F74735F 
 7793      75706461 
 7793      746500
 7794              	.LASF115:
 7795 0307 7363616C 		.ascii	"scalingFactor\000"
 7795      696E6746 
 7795      6163746F 
 7795      7200
 7796              	.LASF105:
 7797 0315 6C656674 		.ascii	"leftSpeed\000"
 7797      53706565 
 7797      6400
 7798              	.LASF130:
 7799 031f 666C6167 		.ascii	"flag_ts_enc\000"
 7799      5F74735F 
 7799      656E6300 
 7800              	.LASF181:
 7801 032b 62797465 		.ascii	"byteCount\000"
 7801      436F756E 
 7801      7400
 7802              	.LASF68:
 7803 0335 61637469 		.ascii	"actionDebounce\000"
 7803      6F6E4465 
 7803      626F756E 
 7803      636500
 7804              	.LASF63:
 7805 0344 62757474 		.ascii	"button\000"
 7805      6F6E00
 7806              	.LASF178:
 7807 034b 70726576 		.ascii	"prev_movement_state\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 162


 7807      5F6D6F76 
 7807      656D656E 
 7807      745F7374 
 7807      61746500 
 7808              	.LASF121:
 7809 035f 73656E73 		.ascii	"sensorVals\000"
 7809      6F725661 
 7809      6C7300
 7810              	.LASF117:
 7811 036a 72657375 		.ascii	"result_str\000"
 7811      6C745F73 
 7811      747200
 7812              	.LASF124:
 7813 0375 75617274 		.ascii	"uart_set_PWM\000"
 7813      5F736574 
 7813      5F50574D 
 7813      00
 7814              	.LASF98:
 7815 0382 696E6974 		.ascii	"inittrackLineZ\000"
 7815      74726163 
 7815      6B4C696E 
 7815      655A00
 7816              	.LASF44:
 7817 0391 726F626F 		.ascii	"robot_ypos\000"
 7817      745F7970 
 7817      6F7300
 7818              	.LASF129:
 7819 039c 74735F64 		.ascii	"ts_display\000"
 7819      6973706C 
 7819      617900
 7820              	.LASF114:
 7821 03a7 7072696E 		.ascii	"print_ADC\000"
 7821      745F4144 
 7821      4300
 7822              	.LASF107:
 7823 03b1 7363616C 		.ascii	"scalingLeft\000"
 7823      696E674C 
 7823      65667400 
 7824              	.LASF12:
 7825 03bd 63686172 		.ascii	"char\000"
 7825      00
 7826              	.LASF48:
 7827 03c2 67305F73 		.ascii	"g0_speed\000"
 7827      70656564 
 7827      00
 7828              	.LASF157:
 7829 03cb 72696768 		.ascii	"rightSpeedLimit\000"
 7829      74537065 
 7829      65644C69 
 7829      6D697400 
 7830              	.LASF75:
 7831 03db 7365744C 		.ascii	"setLeftDir\000"
 7831      65667444 
 7831      697200
 7832              	.LASF184:
 7833 03e6 696E7374 		.ascii	"instructionCount\000"
 7833      72756374 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 163


 7833      696F6E43 
 7833      6F756E74 
 7833      00
 7834              	.LASF90:
 7835 03f7 7475726E 		.ascii	"turnU\000"
 7835      5500
 7836              	.LASF55:
 7837 03fd 67325F79 		.ascii	"g2_ypos\000"
 7837      706F7300 
 7838              	.LASF61:
 7839 0405 64697374 		.ascii	"distTurned\000"
 7839      5475726E 
 7839      656400
 7840              	.LASF16:
 7841 0410 75696E74 		.ascii	"uint16\000"
 7841      313600
 7842              	.LASF18:
 7843 0417 696E7438 		.ascii	"int8\000"
 7843      00
 7844              	.LASF70:
 7845 041c 6E657874 		.ascii	"nextStepDist\000"
 7845      53746570 
 7845      44697374 
 7845      00
 7846              	.LASF53:
 7847 0429 67315F64 		.ascii	"g1_direction\000"
 7847      69726563 
 7847      74696F6E 
 7847      00
 7848              	.LASF187:
 7849 0436 70617468 		.ascii	"path\000"
 7849      00
 7850              	.LASF76:
 7851 043b 73657452 		.ascii	"setRightDir\000"
 7851      69676874 
 7851      44697200 
 7852              	.LASF34:
 7853 0447 43555256 		.ascii	"CURVE_TRACK\000"
 7853      455F5452 
 7853      41434B00 
 7854              	.LASF109:
 7855 0453 696E7465 		.ascii	"interCalc\000"
 7855      7243616C 
 7855      6300
 7856              	.LASF144:
 7857 045d 42545F45 		.ascii	"BT_ENABLED\000"
 7857      4E41424C 
 7857      454400
 7858              	.LASF81:
 7859 0468 72696768 		.ascii	"right\000"
 7859      7400
 7860              	.LASF164:
 7861 046e 696E6974 		.ascii	"initial_pos_valid\000"
 7861      69616C5F 
 7861      706F735F 
 7861      76616C69 
 7861      6400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 164


 7862              	.LASF8:
 7863 0480 6C6F6E67 		.ascii	"long long int\000"
 7863      206C6F6E 
 7863      6720696E 
 7863      7400
 7864              	.LASF176:
 7865 048e 62756666 		.ascii	"buffer_state\000"
 7865      65725F73 
 7865      74617465 
 7865      00
 7866              	.LASF50:
 7867 049b 67315F78 		.ascii	"g1_xpos\000"
 7867      706F7300 
 7868              	.LASF96:
 7869 04a3 696E6974 		.ascii	"initTrack\000"
 7869      54726163 
 7869      6B00
 7870              	.LASF69:
 7871 04ad 6E657874 		.ascii	"nextStep\000"
 7871      53746570 
 7871      00
 7872              	.LASF197:
 7873 04b6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7873      4320342E 
 7873      392E3320 
 7873      32303135 
 7873      30333033 
 7874 04e9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7874      20726576 
 7874      6973696F 
 7874      6E203232 
 7874      31323230 
 7875 051c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7875      66756E63 
 7875      74696F6E 
 7875      2D736563 
 7875      74696F6E 
 7876              	.LASF56:
 7877 0544 67325F73 		.ascii	"g2_speed\000"
 7877      70656564 
 7877      00
 7878              	.LASF47:
 7879 054d 67305F79 		.ascii	"g0_ypos\000"
 7879      706F7300 
 7880              	.LASF100:
 7881 0555 72665F63 		.ascii	"rf_char\000"
 7881      68617200 
 7882              	.LASF186:
 7883 055d 666F6F64 		.ascii	"food_list\000"
 7883      5F6C6973 
 7883      7400
 7884              	.LASF143:
 7885 0567 42494E5F 		.ascii	"BIN_ENABLED\000"
 7885      454E4142 
 7885      4C454400 
 7886              	.LASF106:
 7887 0573 72696768 		.ascii	"rightSpeed\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 165


 7887      74537065 
 7887      656400
 7888              	.LASF128:
 7889 057e 74735F73 		.ascii	"ts_speed\000"
 7889      70656564 
 7889      00
 7890              	.LASF17:
 7891 0587 75696E74 		.ascii	"uint32\000"
 7891      333200
 7892              	.LASF193:
 7893 058e 696E7374 		.ascii	"instructions\000"
 7893      72756374 
 7893      696F6E73 
 7893      00
 7894              	.LASF83:
 7895 059b 636F756E 		.ascii	"countsRight\000"
 7895      74735269 
 7895      67687400 
 7896              	.LASF200:
 7897 05a7 64617461 		.ascii	"data_main\000"
 7897      5F6D6169 
 7897      6E00
 7898              	.LASF116:
 7899 05b1 636F6E76 		.ascii	"converted_val\000"
 7899      65727465 
 7899      645F7661 
 7899      6C00
 7900              	.LASF188:
 7901 05bf 73746172 		.ascii	"start\000"
 7901      7400
 7902              	.LASF41:
 7903 05c5 72737369 		.ascii	"rssi\000"
 7903      00
 7904              	.LASF111:
 7905 05ca 74726163 		.ascii	"trackLine\000"
 7905      6B4C696E 
 7905      6500
 7906              	.LASF49:
 7907 05d4 67305F64 		.ascii	"g0_direction\000"
 7907      69726563 
 7907      74696F6E 
 7907      00
 7908              	.LASF140:
 7909 05e1 666C6167 		.ascii	"flag_receive_ADC\000"
 7909      5F726563 
 7909      65697665 
 7909      5F414443 
 7909      00
 7910              	.LASF26:
 7911 05f2 53544F50 		.ascii	"STOPPED\000"
 7911      50454400 
 7912              	.LASF101:
 7913 05fa 42545F72 		.ascii	"BT_rxInt\000"
 7913      78496E74 
 7913      00
 7914              	.LASF22:
 7915 0603 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 166


 7915      20646F75 
 7915      626C6500 
 7916              	.LASF64:
 7917 060f 6973725F 		.ascii	"isr_adcTimer\000"
 7917      61646354 
 7917      696D6572 
 7917      00
 7918              	.LASF154:
 7919 061c 6C656674 		.ascii	"left_duty_cycle\000"
 7919      5F647574 
 7919      795F6379 
 7919      636C6500 
 7920              	.LASF65:
 7921 062c 6973725F 		.ascii	"isr_deadzone\000"
 7921      64656164 
 7921      7A6F6E65 
 7921      00
 7922              	.LASF132:
 7923 0639 666C6167 		.ascii	"flag_ts_speed\000"
 7923      5F74735F 
 7923      73706565 
 7923      6400
 7924              	.LASF137:
 7925 0647 64617461 		.ascii	"dataready_flag\000"
 7925      72656164 
 7925      795F666C 
 7925      616700
 7926              	.LASF166:
 7927 0656 696E6974 		.ascii	"initial_y_pos\000"
 7927      69616C5F 
 7927      795F706F 
 7927      7300
 7928              	.LASF134:
 7929 0664 666C6167 		.ascii	"flag_rx\000"
 7929      5F727800 
 7930              	.LASF2:
 7931 066c 73686F72 		.ascii	"short int\000"
 7931      7420696E 
 7931      7400
 7932              	.LASF141:
 7933 0676 6164635F 		.ascii	"adc_result\000"
 7933      72657375 
 7933      6C7400
 7934              	.LASF93:
 7935 0681 696E6974 		.ascii	"initTurnU\000"
 7935      5475726E 
 7935      5500
 7936              	.LASF145:
 7937 068b 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7937      5F63616C 
 7937      635F7768 
 7937      65656C73 
 7937      70656564 
 7938              	.LASF4:
 7939 06a0 6C6F6E67 		.ascii	"long int\000"
 7939      20696E74 
 7939      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 167


 7940              	.LASF92:
 7941 06a9 696E6974 		.ascii	"initTurnRight\000"
 7941      5475726E 
 7941      52696768 
 7941      7400
 7942              	.LASF35:
 7943 06b7 555F5452 		.ascii	"U_TRACK\000"
 7943      41434B00 
 7944              	.LASF125:
 7945 06bf 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7945      52784275 
 7945      66666572 
 7945      00
 7946              	.LASF119:
 7947 06cc 7072696E 		.ascii	"printString\000"
 7947      74537472 
 7947      696E6700 
 7948              	.LASF99:
 7949 06d8 7278496E 		.ascii	"rxInt\000"
 7949      7400
 7950              	.LASF127:
 7951 06de 74735F75 		.ascii	"ts_update\000"
 7951      70646174 
 7951      6500
 7952              	.LASF33:
 7953 06e8 4E4F5F54 		.ascii	"NO_TRACK\000"
 7953      5241434B 
 7953      00
 7954              	.LASF152:
 7955 06f1 64656164 		.ascii	"deadzone\000"
 7955      7A6F6E65 
 7955      00
 7956              	.LASF156:
 7957 06fa 6C656674 		.ascii	"leftSpeedLimit\000"
 7957      53706565 
 7957      644C696D 
 7957      697400
 7958              	.LASF40:
 7959 0709 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7959      54524156 
 7959      45525345 
 7959      00
 7960              	.LASF29:
 7961 0716 54524143 		.ascii	"TRACKING_SOFT\000"
 7961      4B494E47 
 7961      5F534F46 
 7961      5400
 7962              	.LASF162:
 7963 0724 6F766572 		.ascii	"overshot_target\000"
 7963      73686F74 
 7963      5F746172 
 7963      67657400 
 7964              	.LASF80:
 7965 0734 6C656674 		.ascii	"left\000"
 7965      00
 7966              	.LASF159:
 7967 0739 61636375 		.ascii	"accum_dist\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 168


 7967      6D5F6469 
 7967      737400
 7968              	.LASF122:
 7969 0744 75736250 		.ascii	"usbPutString\000"
 7969      75745374 
 7969      72696E67 
 7969      00
 7970              	.LASF88:
 7971 0751 7475726E 		.ascii	"turnRight\000"
 7971      52696768 
 7971      7400
 7972              	.LASF51:
 7973 075b 67315F79 		.ascii	"g1_ypos\000"
 7973      706F7300 
 7974              	.LASF59:
 7975 0763 6164635F 		.ascii	"adc_isr\000"
 7975      69737200 
 7976              	.LASF120:
 7977 076b 72656164 		.ascii	"readFrontSensors\000"
 7977      46726F6E 
 7977      7453656E 
 7977      736F7273 
 7977      00
 7978              	.LASF163:
 7979 077c 71756164 		.ascii	"quad_per_cm\000"
 7979      5F706572 
 7979      5F636D00 
 7980              	.LASF158:
 7981 0788 74617267 		.ascii	"target_distance_cm\000"
 7981      65745F64 
 7981      69737461 
 7981      6E63655F 
 7981      636D00
 7982              	.LASF11:
 7983 079b 73697A65 		.ascii	"sizetype\000"
 7983      74797065 
 7983      00
 7984              	.LASF7:
 7985 07a4 6C6F6E67 		.ascii	"long unsigned int\000"
 7985      20756E73 
 7985      69676E65 
 7985      6420696E 
 7985      7400
 7986              	.LASF73:
 7987 07b6 62797465 		.ascii	"byte_packet\000"
 7987      5F706163 
 7987      6B657400 
 7988              	.LASF13:
 7989 07c2 696E7433 		.ascii	"int32_t\000"
 7989      325F7400 
 7990              	.LASF182:
 7991 07ca 7061636B 		.ascii	"packet\000"
 7991      657400
 7992              	.LASF194:
 7993 07d1 696E7374 		.ascii	"instructionLength\000"
 7993      72756374 
 7993      696F6E4C 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 169


 7993      656E6774 
 7993      6800
 7994              	.LASF43:
 7995 07e3 726F626F 		.ascii	"robot_xpos\000"
 7995      745F7870 
 7995      6F7300
 7996              	.LASF86:
 7997 07ee 6272616B 		.ascii	"brakeMotor\000"
 7997      654D6F74 
 7997      6F7200
 7998              	.LASF192:
 7999 07f9 666F6F64 		.ascii	"food_length\000"
 7999      5F6C656E 
 7999      67746800 
 8000              	.LASF174:
 8001 0805 656E7472 		.ascii	"entry\000"
 8001      7900
 8002              	.LASF1:
 8003 080b 756E7369 		.ascii	"unsigned char\000"
 8003      676E6564 
 8003      20636861 
 8003      7200
 8004              	.LASF6:
 8005 0819 5F5F7569 		.ascii	"__uint32_t\000"
 8005      6E743332 
 8005      5F7400
 8006              	.LASF173:
 8007 0824 6C696E65 		.ascii	"line\000"
 8007      00
 8008              	.LASF161:
 8009 0829 72656163 		.ascii	"reached_target\000"
 8009      6865645F 
 8009      74617267 
 8009      657400
 8010              	.LASF62:
 8011 0838 53746F70 		.ascii	"Stop_on_line\000"
 8011      5F6F6E5F 
 8011      6C696E65 
 8011      00
 8012              	.LASF126:
 8013 0845 74735F65 		.ascii	"ts_enc\000"
 8013      6E6300
 8014              	.LASF167:
 8015 084c 6272616B 		.ascii	"brakeFlag\000"
 8015      65466C61 
 8015      6700
 8016              	.LASF133:
 8017 0856 666C6167 		.ascii	"flag_ts_display\000"
 8017      5F74735F 
 8017      64697370 
 8017      6C617900 
 8018              	.LASF31:
 8019 0866 73746174 		.ascii	"state\000"
 8019      6500
 8020              	.LASF78:
 8021 086c 72657665 		.ascii	"reverseDirection\000"
 8021      72736544 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 170


 8021      69726563 
 8021      74696F6E 
 8021      00
 8022              	.LASF84:
 8023 087d 6272616B 		.ascii	"brakeLeft\000"
 8023      654C6566 
 8023      7400
 8024              	.LASF172:
 8025 0887 64697370 		.ascii	"displaystring\000"
 8025      6C617973 
 8025      7472696E 
 8025      6700
 8026              	.LASF148:
 8027 0895 6C617374 		.ascii	"last_quad_count1\000"
 8027      5F717561 
 8027      645F636F 
 8027      756E7431 
 8027      00
 8028              	.LASF149:
 8029 08a6 6C617374 		.ascii	"last_quad_count2\000"
 8029      5F717561 
 8029      645F636F 
 8029      756E7432 
 8029      00
 8030              	.LASF189:
 8031 08b7 64657374 		.ascii	"destination\000"
 8031      696E6174 
 8031      696F6E00 
 8032              	.LASF123:
 8033 08c3 75736250 		.ascii	"usbPutChar\000"
 8033      75744368 
 8033      617200
 8034              	.LASF0:
 8035 08ce 7369676E 		.ascii	"signed char\000"
 8035      65642063 
 8035      68617200 
 8036              	.LASF3:
 8037 08da 73686F72 		.ascii	"short unsigned int\000"
 8037      7420756E 
 8037      7369676E 
 8037      65642069 
 8037      6E7400
 8038              	.LASF45:
 8039 08ed 726F626F 		.ascii	"robot_orientation\000"
 8039      745F6F72 
 8039      69656E74 
 8039      6174696F 
 8039      6E00
 8040              	.LASF37:
 8041 08ff 51554144 		.ascii	"QUAD_STOP\000"
 8041      5F53544F 
 8041      5000
 8042              	.LASF67:
 8043 0909 6D61696E 		.ascii	"main\000"
 8043      00
 8044              	.LASF58:
 8045 090e 42545F74 		.ascii	"BT_txInt\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 171


 8045      78496E74 
 8045      00
 8046              	.LASF110:
 8047 0917 6E657874 		.ascii	"nextSpeed\000"
 8047      53706565 
 8047      6400
 8048              	.LASF15:
 8049 0921 75696E74 		.ascii	"uint8\000"
 8049      3800
 8050              	.LASF21:
 8051 0927 646F7562 		.ascii	"double\000"
 8051      6C6500
 8052              	.LASF155:
 8053 092e 72696768 		.ascii	"right_duty_cycle\000"
 8053      745F6475 
 8053      74795F63 
 8053      79636C65 
 8053      00
 8054              	.LASF38:
 8055 093f 52465F53 		.ascii	"RF_STOP\000"
 8055      544F5000 
 8056              	.LASF77:
 8057 0947 68616E64 		.ascii	"handle_rx_binary\000"
 8057      6C655F72 
 8057      785F6269 
 8057      6E617279 
 8057      00
 8058              	.LASF118:
 8059 0958 7072696E 		.ascii	"print_RF\000"
 8059      745F5246 
 8059      00
 8060              	.LASF30:
 8061 0961 55545552 		.ascii	"UTURN\000"
 8061      4E00
 8062              	.LASF46:
 8063 0967 67305F78 		.ascii	"g0_xpos\000"
 8063      706F7300 
 8064              	.LASF108:
 8065 096f 7363616C 		.ascii	"scalingRight\000"
 8065      696E6752 
 8065      69676874 
 8065      00
 8066              	.LASF136:
 8067 097c 666C6167 		.ascii	"flag_KB_string\000"
 8067      5F4B425F 
 8067      73747269 
 8067      6E6700
 8068              	.LASF52:
 8069 098b 67315F73 		.ascii	"g1_speed\000"
 8069      70656564 
 8069      00
 8070              	.LASF198:
 8071 0994 2E5C6D61 		.ascii	".\\main.c\000"
 8071      696E2E63 
 8071      00
 8072              	.LASF165:
 8073 099d 696E6974 		.ascii	"initial_x_pos\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIU6180.s 			page 172


 8073      69616C5F 
 8073      785F706F 
 8073      7300
 8074              	.LASF85:
 8075 09ab 6272616B 		.ascii	"brakeRight\000"
 8075      65526967 
 8075      687400
 8076              	.LASF97:
 8077 09b6 696E6974 		.ascii	"initTrackU\000"
 8077      54726163 
 8077      6B5500
 8078              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
