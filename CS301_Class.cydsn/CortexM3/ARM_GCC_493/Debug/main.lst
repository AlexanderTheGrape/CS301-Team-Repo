ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	prev_movement_state
 204              		.type	prev_movement_state, %object
 205              		.size	prev_movement_state, 1
 206              	prev_movement_state:
 207 0044 03       		.byte	3
 208              		.global	movement_state
 209              		.type	movement_state, %object
 210              		.size	movement_state, 1
 211              	movement_state:
 212 0045 03       		.byte	3
 213              		.global	track_mode
 214 0046 0000     		.bss
 215              		.type	track_mode, %object
 216              		.size	track_mode, 1
 217              	track_mode:
 218 002c 00       		.space	1
 219              		.global	byteCount
 220              		.type	byteCount, %object
 221              		.size	byteCount, 1
 222              	byteCount:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 5


 223 002d 00       		.space	1
 224              		.comm	packet,2,4
 225              		.section	.text.handle_rx_binary,"ax",%progbits
 226              		.align	2
 227              		.global	handle_rx_binary
 228              		.thumb
 229              		.thumb_func
 230              		.type	handle_rx_binary, %function
 231              	handle_rx_binary:
 232              	.LFB63:
 233              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** #define QUAD_RATIO 0.99556
  40:.\main.c      **** 
  41:.\main.c      **** void handle_rx_binary()
  42:.\main.c      **** {
 234              		.loc 1 42 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 32
 237              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 6


 238              		@ link register save eliminated.
 239 0000 80B4     		push	{r7}
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 89B0     		sub	sp, sp, #36
 243              		.cfi_def_cfa_offset 40
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
  43:.\main.c      ****     if(flag_rx == 1)
 246              		.loc 1 43 0
 247 0006 524B     		ldr	r3, .L21
 248 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 249 000a 012B     		cmp	r3, #1
 250 000c 40F09A80 		bne	.L1
 251              	.LBB2:
  44:.\main.c      ****     {    
  45:.\main.c      ****         flag_rx = 0;
 252              		.loc 1 45 0
 253 0010 4F4B     		ldr	r3, .L21
 254 0012 0022     		movs	r2, #0
 255 0014 1A70     		strb	r2, [r3]
  46:.\main.c      ****         
  47:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 256              		.loc 1 47 0
 257 0016 4F4B     		ldr	r3, .L21+4
 258 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 259 001a 1B02     		lsls	r3, r3, #8
 260 001c 9AB2     		uxth	r2, r3
 261 001e 4D4B     		ldr	r3, .L21+4
 262 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263 0022 9BB2     		uxth	r3, r3
 264 0024 1343     		orrs	r3, r3, r2
 265 0026 9BB2     		uxth	r3, r3
 266 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  48:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  49:.\main.c      ****         char byte_packet[12];
  50:.\main.c      ****         char string_packet[12];
  51:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  52:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  53:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  54:.\main.c      ****         //usbPutString(string_packet);
  55:.\main.c      ****        // usbPutString(string_packet);
  56:.\main.c      ****        // usbPutChar(' ');
  57:.\main.c      ****         
  58:.\main.c      ****         switch(byteCount)
 267              		.loc 1 58 0
 268 002a 4B4B     		ldr	r3, .L21+8
 269 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 002e 043B     		subs	r3, r3, #4
 271 0030 1E2B     		cmp	r3, #30
 272 0032 00F28780 		bhi	.L1
 273 0036 01A2     		adr	r2, .L5
 274 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 275              		.p2align 2
 276              	.L5:
 277 003c B9000000 		.word	.L4+1
 278 0040 45010000 		.word	.L1+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 7


 279 0044 CD000000 		.word	.L6+1
 280 0048 45010000 		.word	.L1+1
 281 004c D5000000 		.word	.L7+1
 282 0050 45010000 		.word	.L1+1
 283 0054 DD000000 		.word	.L8+1
 284 0058 45010000 		.word	.L1+1
 285 005c E5000000 		.word	.L9+1
 286 0060 45010000 		.word	.L1+1
 287 0064 ED000000 		.word	.L10+1
 288 0068 45010000 		.word	.L1+1
 289 006c F5000000 		.word	.L11+1
 290 0070 45010000 		.word	.L1+1
 291 0074 FD000000 		.word	.L12+1
 292 0078 45010000 		.word	.L1+1
 293 007c 05010000 		.word	.L13+1
 294 0080 45010000 		.word	.L1+1
 295 0084 0D010000 		.word	.L14+1
 296 0088 45010000 		.word	.L1+1
 297 008c 15010000 		.word	.L15+1
 298 0090 45010000 		.word	.L1+1
 299 0094 1D010000 		.word	.L16+1
 300 0098 45010000 		.word	.L1+1
 301 009c 25010000 		.word	.L17+1
 302 00a0 45010000 		.word	.L1+1
 303 00a4 2D010000 		.word	.L18+1
 304 00a8 45010000 		.word	.L1+1
 305 00ac 35010000 		.word	.L19+1
 306 00b0 45010000 		.word	.L1+1
 307 00b4 3D010000 		.word	.L20+1
 308              		.p2align 1
 309              	.L4:
  59:.\main.c      ****         {
  60:.\main.c      ****             case 4:
  61:.\main.c      ****                 //usbPutString("RSSI:");
  62:.\main.c      ****                 //usbPutString(byte_packet);
  63:.\main.c      ****                 //usbPutString("\r\n");
  64:.\main.c      ****                 buffer_state.rssi = packet[0];
 310              		.loc 1 64 0
 311 00b8 264B     		ldr	r3, .L21+4
 312 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 00bc DAB2     		uxtb	r2, r3
 314 00be 274B     		ldr	r3, .L21+12
 315 00c0 1A70     		strb	r2, [r3]
  65:.\main.c      ****                 buffer_state.index = packet[1];
 316              		.loc 1 65 0
 317 00c2 244B     		ldr	r3, .L21+4
 318 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 319 00c6 254B     		ldr	r3, .L21+12
 320 00c8 5A70     		strb	r2, [r3, #1]
  66:.\main.c      ****             break;
 321              		.loc 1 66 0
 322 00ca 3BE0     		b	.L1
 323              	.L6:
  67:.\main.c      ****             case 6:
  68:.\main.c      ****                 //usbPutString("robot_x:");
  69:.\main.c      ****                 //usbPutString(string_packet);
  70:.\main.c      ****                 //usbPutString("\r\n");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 8


  71:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 324              		.loc 1 71 0
 325 00cc FA8B     		ldrh	r2, [r7, #30]
 326 00ce 234B     		ldr	r3, .L21+12
 327 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  72:.\main.c      ****             break;
 328              		.loc 1 72 0
 329 00d2 37E0     		b	.L1
 330              	.L7:
  73:.\main.c      ****             case 8:
  74:.\main.c      ****                 //usbPutString("robot_y:");
  75:.\main.c      ****                 //usbPutString(string_packet);
  76:.\main.c      ****                 //usbPutString("\r\n");
  77:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 331              		.loc 1 77 0
 332 00d4 FA8B     		ldrh	r2, [r7, #30]
 333 00d6 214B     		ldr	r3, .L21+12
 334 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  78:.\main.c      ****             break;
 335              		.loc 1 78 0
 336 00da 33E0     		b	.L1
 337              	.L8:
  79:.\main.c      ****             case 10:
  80:.\main.c      ****                 //usbPutString("robot_dir:");
  81:.\main.c      ****                 //usbPutString(string_packet);
  82:.\main.c      ****                 //usbPutString("\r\n");
  83:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 338              		.loc 1 83 0
 339 00dc FA8B     		ldrh	r2, [r7, #30]
 340 00de 1F4B     		ldr	r3, .L21+12
 341 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  84:.\main.c      ****             break;
 342              		.loc 1 84 0
 343 00e2 2FE0     		b	.L1
 344              	.L9:
  85:.\main.c      ****             case 12:
  86:.\main.c      ****                 //usbPutString("g0_x:");
  87:.\main.c      ****                 //usbPutString(string_packet);
  88:.\main.c      ****                 //usbPutString("\r\n");
  89:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 345              		.loc 1 89 0
 346 00e4 FA8B     		ldrh	r2, [r7, #30]
 347 00e6 1D4B     		ldr	r3, .L21+12
 348 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  90:.\main.c      ****             break;
 349              		.loc 1 90 0
 350 00ea 2BE0     		b	.L1
 351              	.L10:
  91:.\main.c      ****             case 14:
  92:.\main.c      ****                 //usbPutString("g0_y:");
  93:.\main.c      ****                 //usbPutString(string_packet);
  94:.\main.c      ****                 //usbPutString("\r\n");
  95:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 352              		.loc 1 95 0
 353 00ec FA8B     		ldrh	r2, [r7, #30]
 354 00ee 1B4B     		ldr	r3, .L21+12
 355 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 9


  96:.\main.c      ****             break;
 356              		.loc 1 96 0
 357 00f2 27E0     		b	.L1
 358              	.L11:
  97:.\main.c      ****             case 16:
  98:.\main.c      ****                 //usbPutString("g0_speed:");
  99:.\main.c      ****                 //usbPutString(string_packet);
 100:.\main.c      ****                 //usbPutString("\r\n");
 101:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 359              		.loc 1 101 0
 360 00f4 FA8B     		ldrh	r2, [r7, #30]
 361 00f6 194B     		ldr	r3, .L21+12
 362 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 102:.\main.c      ****             break;
 363              		.loc 1 102 0
 364 00fa 23E0     		b	.L1
 365              	.L12:
 103:.\main.c      ****             case 18:
 104:.\main.c      ****                 //usbPutString("g1_dir:");
 105:.\main.c      ****                 //usbPutString(string_packet);
 106:.\main.c      ****                 //usbPutString("\r\n");
 107:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 366              		.loc 1 107 0
 367 00fc FA8B     		ldrh	r2, [r7, #30]
 368 00fe 174B     		ldr	r3, .L21+12
 369 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 108:.\main.c      ****             break;
 370              		.loc 1 108 0
 371 0102 1FE0     		b	.L1
 372              	.L13:
 109:.\main.c      ****             case 20:
 110:.\main.c      ****                 //usbPutString("g1_x:");
 111:.\main.c      ****                 //usbPutString(string_packet);
 112:.\main.c      ****                 //usbPutString("\r\n");
 113:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 373              		.loc 1 113 0
 374 0104 FA8B     		ldrh	r2, [r7, #30]
 375 0106 154B     		ldr	r3, .L21+12
 376 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 114:.\main.c      ****             break;
 377              		.loc 1 114 0
 378 010a 1BE0     		b	.L1
 379              	.L14:
 115:.\main.c      ****             case 22:
 116:.\main.c      ****                 //usbPutString("g1_y:");
 117:.\main.c      ****                 //usbPutString(string_packet);
 118:.\main.c      ****                 //usbPutString("\r\n");
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 380              		.loc 1 119 0
 381 010c FA8B     		ldrh	r2, [r7, #30]
 382 010e 134B     		ldr	r3, .L21+12
 383 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 384              		.loc 1 120 0
 385 0112 17E0     		b	.L1
 386              	.L15:
 121:.\main.c      ****             case 24:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 10


 122:.\main.c      ****                 //usbPutString("g1_speed:");
 123:.\main.c      ****                 //usbPutString(string_packet);
 124:.\main.c      ****                 //usbPutString("\r\n");
 125:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 387              		.loc 1 125 0
 388 0114 FA8B     		ldrh	r2, [r7, #30]
 389 0116 114B     		ldr	r3, .L21+12
 390 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 126:.\main.c      ****             break;
 391              		.loc 1 126 0
 392 011a 13E0     		b	.L1
 393              	.L16:
 127:.\main.c      ****             case 26:
 128:.\main.c      ****                 //usbPutString("g1_dir:");
 129:.\main.c      ****                 //usbPutString(string_packet);
 130:.\main.c      ****                 //usbPutString("\r\n");
 131:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 394              		.loc 1 131 0
 395 011c FA8B     		ldrh	r2, [r7, #30]
 396 011e 0F4B     		ldr	r3, .L21+12
 397 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 132:.\main.c      ****             break;
 398              		.loc 1 132 0
 399 0122 0FE0     		b	.L1
 400              	.L17:
 133:.\main.c      ****             case 28:
 134:.\main.c      ****                 //usbPutString("g2_x:");
 135:.\main.c      ****                 //usbPutString(string_packet);
 136:.\main.c      ****                 //usbPutString("\r\n");
 137:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 401              		.loc 1 137 0
 402 0124 FA8B     		ldrh	r2, [r7, #30]
 403 0126 0D4B     		ldr	r3, .L21+12
 404 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 138:.\main.c      ****             break;
 405              		.loc 1 138 0
 406 012a 0BE0     		b	.L1
 407              	.L18:
 139:.\main.c      ****             case 30:
 140:.\main.c      ****                 //usbPutString("g2_y:");
 141:.\main.c      ****                 //usbPutString(string_packet);
 142:.\main.c      ****                 //usbPutString("\r\n");
 143:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 408              		.loc 1 143 0
 409 012c FA8B     		ldrh	r2, [r7, #30]
 410 012e 0B4B     		ldr	r3, .L21+12
 411 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 144:.\main.c      ****             break;
 412              		.loc 1 144 0
 413 0132 07E0     		b	.L1
 414              	.L19:
 145:.\main.c      ****             case 32:
 146:.\main.c      ****                 //usbPutString("g1_speed:");
 147:.\main.c      ****                 //usbPutString(string_packet);
 148:.\main.c      ****                 //usbPutString("\r\n");
 149:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 415              		.loc 1 149 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 11


 416 0134 FA8B     		ldrh	r2, [r7, #30]
 417 0136 094B     		ldr	r3, .L21+12
 418 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 150:.\main.c      ****             break;
 419              		.loc 1 150 0
 420 013a 03E0     		b	.L1
 421              	.L20:
 151:.\main.c      ****             case 34:
 152:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 422              		.loc 1 152 0
 423 013c FA8B     		ldrh	r2, [r7, #30]
 424 013e 074B     		ldr	r3, .L21+12
 425 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 153:.\main.c      ****                 //usbPutString("g2_dir:");
 154:.\main.c      ****                 //usbPutString(string_packet);
 155:.\main.c      ****                 //usbPutString("\r\n");
 156:.\main.c      ****                 
 157:.\main.c      ****             break;
 426              		.loc 1 157 0
 427 0142 00BF     		nop
 428              	.L1:
 429              	.LBE2:
 158:.\main.c      ****         }
 159:.\main.c      ****     }
 160:.\main.c      **** }
 430              		.loc 1 160 0
 431 0144 2437     		adds	r7, r7, #36
 432              		.cfi_def_cfa_offset 4
 433 0146 BD46     		mov	sp, r7
 434              		.cfi_def_cfa_register 13
 435              		@ sp needed
 436 0148 5DF8047B 		ldr	r7, [sp], #4
 437              		.cfi_restore 7
 438              		.cfi_def_cfa_offset 0
 439 014c 7047     		bx	lr
 440              	.L22:
 441 014e 00BF     		.align	2
 442              	.L21:
 443 0150 00000000 		.word	flag_rx
 444 0154 00000000 		.word	packet
 445 0158 00000000 		.word	byteCount
 446 015c 00000000 		.word	buffer_state
 447              		.cfi_endproc
 448              	.LFE63:
 449              		.size	handle_rx_binary, .-handle_rx_binary
 450              		.section	.text.setLeftDir,"ax",%progbits
 451              		.align	2
 452              		.global	setLeftDir
 453              		.thumb
 454              		.thumb_func
 455              		.type	setLeftDir, %function
 456              	setLeftDir:
 457              	.LFB64:
 161:.\main.c      **** 
 162:.\main.c      **** 
 163:.\main.c      **** 
 164:.\main.c      **** void setLeftDir(uint8 dir)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 12


 165:.\main.c      **** {
 458              		.loc 1 165 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 82B0     		sub	sp, sp, #8
 467              		.cfi_def_cfa_offset 16
 468 0004 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 470 0006 0346     		mov	r3, r0
 471 0008 FB71     		strb	r3, [r7, #7]
 166:.\main.c      ****     M2_IN2_Write(dir);
 472              		.loc 1 166 0
 473 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 474 000c 1846     		mov	r0, r3
 475 000e FFF7FEFF 		bl	M2_IN2_Write
 167:.\main.c      **** }
 476              		.loc 1 167 0
 477 0012 0837     		adds	r7, r7, #8
 478              		.cfi_def_cfa_offset 8
 479 0014 BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0016 80BD     		pop	{r7, pc}
 483              		.cfi_endproc
 484              	.LFE64:
 485              		.size	setLeftDir, .-setLeftDir
 486              		.section	.text.setRightDir,"ax",%progbits
 487              		.align	2
 488              		.global	setRightDir
 489              		.thumb
 490              		.thumb_func
 491              		.type	setRightDir, %function
 492              	setRightDir:
 493              	.LFB65:
 168:.\main.c      **** 
 169:.\main.c      **** void setRightDir(uint8 dir)
 170:.\main.c      **** {
 494              		.loc 1 170 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 82B0     		sub	sp, sp, #8
 503              		.cfi_def_cfa_offset 16
 504 0004 00AF     		add	r7, sp, #0
 505              		.cfi_def_cfa_register 7
 506 0006 0346     		mov	r3, r0
 507 0008 FB71     		strb	r3, [r7, #7]
 171:.\main.c      ****     M1_IN2_Write(dir);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 13


 508              		.loc 1 171 0
 509 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 510 000c 1846     		mov	r0, r3
 511 000e FFF7FEFF 		bl	M1_IN2_Write
 172:.\main.c      **** }
 512              		.loc 1 172 0
 513 0012 0837     		adds	r7, r7, #8
 514              		.cfi_def_cfa_offset 8
 515 0014 BD46     		mov	sp, r7
 516              		.cfi_def_cfa_register 13
 517              		@ sp needed
 518 0016 80BD     		pop	{r7, pc}
 519              		.cfi_endproc
 520              	.LFE65:
 521              		.size	setRightDir, .-setRightDir
 522              		.section	.rodata
 523              		.align	2
 524              	.LC0:
 525 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 525      2025640D 
 525      0A00
 526              		.section	.text.reverseDirection,"ax",%progbits
 527              		.align	2
 528              		.global	reverseDirection
 529              		.thumb
 530              		.thumb_func
 531              		.type	reverseDirection, %function
 532              	reverseDirection:
 533              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** void reverseDirection()
 175:.\main.c      **** {
 534              		.loc 1 175 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538 0000 80B5     		push	{r7, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 84B0     		sub	sp, sp, #16
 543              		.cfi_def_cfa_offset 24
 544 0004 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 176:.\main.c      ****     direction = !direction;
 546              		.loc 1 176 0
 547 0006 114B     		ldr	r3, .L26
 548 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 549 000a 002B     		cmp	r3, #0
 550 000c 0CBF     		ite	eq
 551 000e 0123     		moveq	r3, #1
 552 0010 0023     		movne	r3, #0
 553 0012 DBB2     		uxtb	r3, r3
 554 0014 1A46     		mov	r2, r3
 555 0016 0D4B     		ldr	r3, .L26
 556 0018 1A70     		strb	r2, [r3]
 177:.\main.c      ****     setLeftDir(direction);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 14


 557              		.loc 1 177 0
 558 001a 0C4B     		ldr	r3, .L26
 559 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 560 001e 1846     		mov	r0, r3
 561 0020 FFF7FEFF 		bl	setLeftDir
 178:.\main.c      ****     setRightDir(direction);
 562              		.loc 1 178 0
 563 0024 094B     		ldr	r3, .L26
 564 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 565 0028 1846     		mov	r0, r3
 566 002a FFF7FEFF 		bl	setRightDir
 179:.\main.c      ****     char mes[16];
 180:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 567              		.loc 1 180 0
 568 002e 074B     		ldr	r3, .L26
 569 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 570 0032 1A46     		mov	r2, r3
 571 0034 3B46     		mov	r3, r7
 572 0036 1846     		mov	r0, r3
 573 0038 0549     		ldr	r1, .L26+4
 574 003a FFF7FEFF 		bl	sprintf
 181:.\main.c      ****     UART_PutString(mes);
 575              		.loc 1 181 0
 576 003e 3B46     		mov	r3, r7
 577 0040 1846     		mov	r0, r3
 578 0042 FFF7FEFF 		bl	UART_PutString
 182:.\main.c      **** }
 579              		.loc 1 182 0
 580 0046 1037     		adds	r7, r7, #16
 581              		.cfi_def_cfa_offset 8
 582 0048 BD46     		mov	sp, r7
 583              		.cfi_def_cfa_register 13
 584              		@ sp needed
 585 004a 80BD     		pop	{r7, pc}
 586              	.L27:
 587              		.align	2
 588              	.L26:
 589 004c 00000000 		.word	direction
 590 0050 00000000 		.word	.LC0
 591              		.cfi_endproc
 592              	.LFE66:
 593              		.size	reverseDirection, .-reverseDirection
 594              		.global	__aeabi_dcmplt
 595              		.section	.rodata
 596 000a 0000     		.align	2
 597              	.LC1:
 598 000c 72696768 		.ascii	"right dir: %d\015\012\000"
 598      74206469 
 598      723A2025 
 598      640D0A00 
 599              		.align	2
 600              	.LC2:
 601 001c 6C656674 		.ascii	"left dir: %d\015\012\000"
 601      20646972 
 601      3A202564 
 601      0D0A00
 602              		.global	__aeabi_dmul
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 15


 603              		.global	__aeabi_d2uiz
 604              		.section	.text.setSpeed,"ax",%progbits
 605              		.align	2
 606              		.global	setSpeed
 607              		.thumb
 608              		.thumb_func
 609              		.type	setSpeed, %function
 610              	setSpeed:
 611              	.LFB67:
 183:.\main.c      **** 
 184:.\main.c      **** void setSpeed(double right, double left){
 612              		.loc 1 184 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 56
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 8EB0     		sub	sp, sp, #56
 621              		.cfi_def_cfa_offset 64
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 C7E90201 		strd	r0, [r7, #8]
 625 000a C7E90023 		strd	r2, [r7]
 185:.\main.c      ****     if(right < 0)
 626              		.loc 1 185 0
 627 000e D7E90201 		ldrd	r0, [r7, #8]
 628 0012 4FF00002 		mov	r2, #0
 629 0016 4FF00003 		mov	r3, #0
 630 001a FFF7FEFF 		bl	__aeabi_dcmplt
 631 001e 0346     		mov	r3, r0
 632 0020 002B     		cmp	r3, #0
 633 0022 23D0     		beq	.L37
 634              	.LBB3:
 186:.\main.c      ****     {
 187:.\main.c      ****         char mes[16];
 188:.\main.c      ****         sprintf(mes, "right dir: %d\r\n", !direction);
 635              		.loc 1 188 0
 636 0024 464B     		ldr	r3, .L39+8
 637 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 0028 002B     		cmp	r3, #0
 639 002a 0CBF     		ite	eq
 640 002c 0123     		moveq	r3, #1
 641 002e 0023     		movne	r3, #0
 642 0030 DBB2     		uxtb	r3, r3
 643 0032 1A46     		mov	r2, r3
 644 0034 07F12403 		add	r3, r7, #36
 645 0038 1846     		mov	r0, r3
 646 003a 4249     		ldr	r1, .L39+12
 647 003c FFF7FEFF 		bl	sprintf
 189:.\main.c      ****         UART_PutString(mes);
 648              		.loc 1 189 0
 649 0040 07F12403 		add	r3, r7, #36
 650 0044 1846     		mov	r0, r3
 651 0046 FFF7FEFF 		bl	UART_PutString
 190:.\main.c      ****         setRightDir(!direction);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 16


 652              		.loc 1 190 0
 653 004a 3D4B     		ldr	r3, .L39+8
 654 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 004e 002B     		cmp	r3, #0
 656 0050 0CBF     		ite	eq
 657 0052 0123     		moveq	r3, #1
 658 0054 0023     		movne	r3, #0
 659 0056 DBB2     		uxtb	r3, r3
 660 0058 1846     		mov	r0, r3
 661 005a FFF7FEFF 		bl	setRightDir
 191:.\main.c      ****         right = -right;
 662              		.loc 1 191 0
 663 005e BB68     		ldr	r3, [r7, #8]
 664 0060 BB60     		str	r3, [r7, #8]
 665 0062 FB68     		ldr	r3, [r7, #12]
 666 0064 83F00043 		eor	r3, r3, #-2147483648
 667 0068 FB60     		str	r3, [r7, #12]
 668              	.LBE3:
 669 006a 04E0     		b	.L31
 670              	.L37:
 192:.\main.c      ****     }
 193:.\main.c      ****     else setRightDir(direction);
 671              		.loc 1 193 0
 672 006c 344B     		ldr	r3, .L39+8
 673 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 674 0070 1846     		mov	r0, r3
 675 0072 FFF7FEFF 		bl	setRightDir
 676              	.L31:
 194:.\main.c      ****     
 195:.\main.c      ****     if(left < 0)
 677              		.loc 1 195 0
 678 0076 D7E90001 		ldrd	r0, [r7]
 679 007a 4FF00002 		mov	r2, #0
 680 007e 4FF00003 		mov	r3, #0
 681 0082 FFF7FEFF 		bl	__aeabi_dcmplt
 682 0086 0346     		mov	r3, r0
 683 0088 002B     		cmp	r3, #0
 684 008a 23D0     		beq	.L38
 685              	.LBB4:
 196:.\main.c      ****     {
 197:.\main.c      ****         char mes[16];
 198:.\main.c      ****         sprintf(mes, "left dir: %d\r\n", !direction);
 686              		.loc 1 198 0
 687 008c 2C4B     		ldr	r3, .L39+8
 688 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 689 0090 002B     		cmp	r3, #0
 690 0092 0CBF     		ite	eq
 691 0094 0123     		moveq	r3, #1
 692 0096 0023     		movne	r3, #0
 693 0098 DBB2     		uxtb	r3, r3
 694 009a 1A46     		mov	r2, r3
 695 009c 07F11403 		add	r3, r7, #20
 696 00a0 1846     		mov	r0, r3
 697 00a2 2949     		ldr	r1, .L39+16
 698 00a4 FFF7FEFF 		bl	sprintf
 199:.\main.c      ****         UART_PutString(mes);
 699              		.loc 1 199 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 17


 700 00a8 07F11403 		add	r3, r7, #20
 701 00ac 1846     		mov	r0, r3
 702 00ae FFF7FEFF 		bl	UART_PutString
 200:.\main.c      ****         setLeftDir(!direction);
 703              		.loc 1 200 0
 704 00b2 234B     		ldr	r3, .L39+8
 705 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 706 00b6 002B     		cmp	r3, #0
 707 00b8 0CBF     		ite	eq
 708 00ba 0123     		moveq	r3, #1
 709 00bc 0023     		movne	r3, #0
 710 00be DBB2     		uxtb	r3, r3
 711 00c0 1846     		mov	r0, r3
 712 00c2 FFF7FEFF 		bl	setLeftDir
 201:.\main.c      ****         left = -left;
 713              		.loc 1 201 0
 714 00c6 3B68     		ldr	r3, [r7]
 715 00c8 3B60     		str	r3, [r7]
 716 00ca 7B68     		ldr	r3, [r7, #4]
 717 00cc 83F00043 		eor	r3, r3, #-2147483648
 718 00d0 7B60     		str	r3, [r7, #4]
 719              	.LBE4:
 720 00d2 04E0     		b	.L34
 721              	.L38:
 202:.\main.c      ****     }
 203:.\main.c      ****     else setLeftDir(direction);
 722              		.loc 1 203 0
 723 00d4 1A4B     		ldr	r3, .L39+8
 724 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 725 00d8 1846     		mov	r0, r3
 726 00da FFF7FEFF 		bl	setLeftDir
 727              	.L34:
 204:.\main.c      ****     
 205:.\main.c      ****     uint8 countsLeft = left*QUAD_RATIO;
 728              		.loc 1 205 0
 729 00de D7E90001 		ldrd	r0, [r7]
 730 00e2 15A3     		adr	r3, .L39
 731 00e4 D3E90023 		ldrd	r2, [r3]
 732 00e8 FFF7FEFF 		bl	__aeabi_dmul
 733 00ec 0246     		mov	r2, r0
 734 00ee 0B46     		mov	r3, r1
 735 00f0 1046     		mov	r0, r2
 736 00f2 1946     		mov	r1, r3
 737 00f4 FFF7FEFF 		bl	__aeabi_d2uiz
 738 00f8 0346     		mov	r3, r0
 739 00fa 87F83730 		strb	r3, [r7, #55]
 206:.\main.c      ****     uint8 countsRight = right*QUAD_RATIO;
 740              		.loc 1 206 0
 741 00fe D7E90201 		ldrd	r0, [r7, #8]
 742 0102 0DA3     		adr	r3, .L39
 743 0104 D3E90023 		ldrd	r2, [r3]
 744 0108 FFF7FEFF 		bl	__aeabi_dmul
 745 010c 0246     		mov	r2, r0
 746 010e 0B46     		mov	r3, r1
 747 0110 1046     		mov	r0, r2
 748 0112 1946     		mov	r1, r3
 749 0114 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 18


 750 0118 0346     		mov	r3, r0
 751 011a 87F83630 		strb	r3, [r7, #54]
 207:.\main.c      ****     
 208:.\main.c      ****     leftSpeedLimit = countsRight;
 752              		.loc 1 208 0
 753 011e 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 754 0122 9AB2     		uxth	r2, r3
 755 0124 094B     		ldr	r3, .L39+20
 756 0126 1A80     		strh	r2, [r3]	@ movhi
 209:.\main.c      ****     rightSpeedLimit = countsLeft;
 757              		.loc 1 209 0
 758 0128 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 759 012c 9AB2     		uxth	r2, r3
 760 012e 084B     		ldr	r3, .L39+24
 761 0130 1A80     		strh	r2, [r3]	@ movhi
 210:.\main.c      **** }
 762              		.loc 1 210 0
 763 0132 3837     		adds	r7, r7, #56
 764              		.cfi_def_cfa_offset 8
 765 0134 BD46     		mov	sp, r7
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 0136 80BD     		pop	{r7, pc}
 769              	.L40:
 770              		.align	3
 771              	.L39:
 772 0138 969526A5 		.word	-1524197994
 773 013c A0DBEF3F 		.word	1072683936
 774 0140 00000000 		.word	direction
 775 0144 0C000000 		.word	.LC1
 776 0148 1C000000 		.word	.LC2
 777 014c 00000000 		.word	leftSpeedLimit
 778 0150 00000000 		.word	rightSpeedLimit
 779              		.cfi_endproc
 780              	.LFE67:
 781              		.size	setSpeed, .-setSpeed
 782 0154 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 783              		.align	2
 784              		.global	brakeLeft
 785              		.thumb
 786              		.thumb_func
 787              		.type	brakeLeft, %function
 788              	brakeLeft:
 789              	.LFB68:
 211:.\main.c      **** 
 212:.\main.c      **** void brakeLeft()
 213:.\main.c      **** {
 790              		.loc 1 213 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794 0000 80B5     		push	{r7, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 00AF     		add	r7, sp, #0
 799              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 19


 214:.\main.c      ****     PWM_1_WriteCompare(0);
 800              		.loc 1 214 0
 801 0004 0020     		movs	r0, #0
 802 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 215:.\main.c      ****     left_duty_cycle = 0;
 803              		.loc 1 215 0
 804 000a 024B     		ldr	r3, .L42
 805 000c 0022     		movs	r2, #0
 806 000e 1A80     		strh	r2, [r3]	@ movhi
 216:.\main.c      **** }
 807              		.loc 1 216 0
 808 0010 80BD     		pop	{r7, pc}
 809              	.L43:
 810 0012 00BF     		.align	2
 811              	.L42:
 812 0014 00000000 		.word	left_duty_cycle
 813              		.cfi_endproc
 814              	.LFE68:
 815              		.size	brakeLeft, .-brakeLeft
 816              		.section	.text.brakeRight,"ax",%progbits
 817              		.align	2
 818              		.global	brakeRight
 819              		.thumb
 820              		.thumb_func
 821              		.type	brakeRight, %function
 822              	brakeRight:
 823              	.LFB69:
 217:.\main.c      **** 
 218:.\main.c      **** void brakeRight()
 219:.\main.c      **** {
 824              		.loc 1 219 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828 0000 80B5     		push	{r7, lr}
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0002 00AF     		add	r7, sp, #0
 833              		.cfi_def_cfa_register 7
 220:.\main.c      ****      PWM_2_WriteCompare(0);
 834              		.loc 1 220 0
 835 0004 0020     		movs	r0, #0
 836 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 221:.\main.c      ****      right_duty_cycle = 0;
 837              		.loc 1 221 0
 838 000a 024B     		ldr	r3, .L45
 839 000c 0022     		movs	r2, #0
 840 000e 1A80     		strh	r2, [r3]	@ movhi
 222:.\main.c      **** }
 841              		.loc 1 222 0
 842 0010 80BD     		pop	{r7, pc}
 843              	.L46:
 844 0012 00BF     		.align	2
 845              	.L45:
 846 0014 00000000 		.word	right_duty_cycle
 847              		.cfi_endproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 20


 848              	.LFE69:
 849              		.size	brakeRight, .-brakeRight
 850              		.section	.text.brakeMotor,"ax",%progbits
 851              		.align	2
 852              		.global	brakeMotor
 853              		.thumb
 854              		.thumb_func
 855              		.type	brakeMotor, %function
 856              	brakeMotor:
 857              	.LFB70:
 223:.\main.c      **** 
 224:.\main.c      **** void brakeMotor(){
 858              		.loc 1 224 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 225:.\main.c      ****     setSpeed(0, 0);
 868              		.loc 1 225 0
 869 0004 4FF00000 		mov	r0, #0
 870 0008 4FF00001 		mov	r1, #0
 871 000c 4FF00002 		mov	r2, #0
 872 0010 4FF00003 		mov	r3, #0
 873 0014 FFF7FEFF 		bl	setSpeed
 226:.\main.c      ****     brakeLeft();
 874              		.loc 1 226 0
 875 0018 FFF7FEFF 		bl	brakeLeft
 227:.\main.c      ****     brakeRight();
 876              		.loc 1 227 0
 877 001c FFF7FEFF 		bl	brakeRight
 228:.\main.c      **** }
 878              		.loc 1 228 0
 879 0020 80BD     		pop	{r7, pc}
 880              		.cfi_endproc
 881              	.LFE70:
 882              		.size	brakeMotor, .-brakeMotor
 883 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 884              		.align	2
 885              		.global	driveForwards
 886              		.thumb
 887              		.thumb_func
 888              		.type	driveForwards, %function
 889              	driveForwards:
 890              	.LFB71:
 229:.\main.c      **** 
 230:.\main.c      **** 
 231:.\main.c      **** void driveForwards()
 232:.\main.c      **** {
 891              		.loc 1 232 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 21


 895 0000 80B5     		push	{r7, lr}
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 233:.\main.c      ****     setSpeed(20, 20);
 901              		.loc 1 233 0
 902 0004 4FF00000 		mov	r0, #0
 903 0008 0349     		ldr	r1, .L49
 904 000a 4FF00002 		mov	r2, #0
 905 000e 024B     		ldr	r3, .L49
 906 0010 FFF7FEFF 		bl	setSpeed
 234:.\main.c      **** }
 907              		.loc 1 234 0
 908 0014 80BD     		pop	{r7, pc}
 909              	.L50:
 910 0016 00BF     		.align	2
 911              	.L49:
 912 0018 00003440 		.word	1077149696
 913              		.cfi_endproc
 914              	.LFE71:
 915              		.size	driveForwards, .-driveForwards
 916              		.section	.text.turnLeft,"ax",%progbits
 917              		.align	2
 918              		.global	turnLeft
 919              		.thumb
 920              		.thumb_func
 921              		.type	turnLeft, %function
 922              	turnLeft:
 923              	.LFB72:
 235:.\main.c      **** 
 236:.\main.c      **** void turnLeft()
 237:.\main.c      **** {
 924              		.loc 1 237 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 238:.\main.c      ****     setSpeed(0,20);
 934              		.loc 1 238 0
 935 0004 4FF00000 		mov	r0, #0
 936 0008 4FF00001 		mov	r1, #0
 937 000c 4FF00002 		mov	r2, #0
 938 0010 014B     		ldr	r3, .L52
 939 0012 FFF7FEFF 		bl	setSpeed
 239:.\main.c      **** }
 940              		.loc 1 239 0
 941 0016 80BD     		pop	{r7, pc}
 942              	.L53:
 943              		.align	2
 944              	.L52:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 22


 945 0018 00003440 		.word	1077149696
 946              		.cfi_endproc
 947              	.LFE72:
 948              		.size	turnLeft, .-turnLeft
 949              		.section	.text.turnRight,"ax",%progbits
 950              		.align	2
 951              		.global	turnRight
 952              		.thumb
 953              		.thumb_func
 954              		.type	turnRight, %function
 955              	turnRight:
 956              	.LFB73:
 240:.\main.c      **** 
 241:.\main.c      **** void turnRight()
 242:.\main.c      **** {
 957              		.loc 1 242 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 243:.\main.c      ****     setSpeed(20,0);
 967              		.loc 1 243 0
 968 0004 4FF00000 		mov	r0, #0
 969 0008 0349     		ldr	r1, .L55
 970 000a 4FF00002 		mov	r2, #0
 971 000e 4FF00003 		mov	r3, #0
 972 0012 FFF7FEFF 		bl	setSpeed
 244:.\main.c      **** }
 973              		.loc 1 244 0
 974 0016 80BD     		pop	{r7, pc}
 975              	.L56:
 976              		.align	2
 977              	.L55:
 978 0018 00003440 		.word	1077149696
 979              		.cfi_endproc
 980              	.LFE73:
 981              		.size	turnRight, .-turnRight
 982              		.section	.text.initTurnLeft,"ax",%progbits
 983              		.align	2
 984              		.global	initTurnLeft
 985              		.thumb
 986              		.thumb_func
 987              		.type	initTurnLeft, %function
 988              	initTurnLeft:
 989              	.LFB74:
 245:.\main.c      **** 
 246:.\main.c      **** void initTurnLeft(){
 990              		.loc 1 246 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 23


 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
 247:.\main.c      ****     Timer_2_Stop();
 1000              		.loc 1 247 0
 1001 0004 FFF7FEFF 		bl	Timer_2_Stop
 248:.\main.c      ****     prev_movement_state = movement_state;
 1002              		.loc 1 248 0
 1003 0008 084B     		ldr	r3, .L58
 1004 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1005 000c 084B     		ldr	r3, .L58+4
 1006 000e 1A70     		strb	r2, [r3]
 249:.\main.c      ****     movement_state = LTURN;
 1007              		.loc 1 249 0
 1008 0010 064B     		ldr	r3, .L58
 1009 0012 0122     		movs	r2, #1
 1010 0014 1A70     		strb	r2, [r3]
 250:.\main.c      ****     brakeLeft();
 1011              		.loc 1 250 0
 1012 0016 FFF7FEFF 		bl	brakeLeft
 251:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1013              		.loc 1 251 0
 1014 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1015 001e 0346     		mov	r3, r0
 1016 0020 1A46     		mov	r2, r3
 1017 0022 044B     		ldr	r3, .L58+8
 1018 0024 1A80     		strh	r2, [r3]	@ movhi
 252:.\main.c      ****     Timer_2_Start();
 1019              		.loc 1 252 0
 1020 0026 FFF7FEFF 		bl	Timer_2_Start
 253:.\main.c      **** }
 1021              		.loc 1 253 0
 1022 002a 80BD     		pop	{r7, pc}
 1023              	.L59:
 1024              		.align	2
 1025              	.L58:
 1026 002c 00000000 		.word	movement_state
 1027 0030 00000000 		.word	prev_movement_state
 1028 0034 00000000 		.word	start_turn_count
 1029              		.cfi_endproc
 1030              	.LFE74:
 1031              		.size	initTurnLeft, .-initTurnLeft
 1032              		.section	.text.initTurnRight,"ax",%progbits
 1033              		.align	2
 1034              		.global	initTurnRight
 1035              		.thumb
 1036              		.thumb_func
 1037              		.type	initTurnRight, %function
 1038              	initTurnRight:
 1039              	.LFB75:
 254:.\main.c      **** 
 255:.\main.c      **** void initTurnRight(){
 1040              		.loc 1 255 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 24


 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044 0000 80B5     		push	{r7, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 256:.\main.c      ****     Timer_2_Stop();
 1050              		.loc 1 256 0
 1051 0004 FFF7FEFF 		bl	Timer_2_Stop
 257:.\main.c      ****     prev_movement_state = movement_state;
 1052              		.loc 1 257 0
 1053 0008 084B     		ldr	r3, .L61
 1054 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1055 000c 084B     		ldr	r3, .L61+4
 1056 000e 1A70     		strb	r2, [r3]
 258:.\main.c      ****     movement_state = RTURN;
 1057              		.loc 1 258 0
 1058 0010 064B     		ldr	r3, .L61
 1059 0012 0222     		movs	r2, #2
 1060 0014 1A70     		strb	r2, [r3]
 259:.\main.c      ****     brakeRight();
 1061              		.loc 1 259 0
 1062 0016 FFF7FEFF 		bl	brakeRight
 260:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1063              		.loc 1 260 0
 1064 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1065 001e 0346     		mov	r3, r0
 1066 0020 1A46     		mov	r2, r3
 1067 0022 044B     		ldr	r3, .L61+8
 1068 0024 1A80     		strh	r2, [r3]	@ movhi
 261:.\main.c      ****     Timer_2_Start();
 1069              		.loc 1 261 0
 1070 0026 FFF7FEFF 		bl	Timer_2_Start
 262:.\main.c      **** }
 1071              		.loc 1 262 0
 1072 002a 80BD     		pop	{r7, pc}
 1073              	.L62:
 1074              		.align	2
 1075              	.L61:
 1076 002c 00000000 		.word	movement_state
 1077 0030 00000000 		.word	prev_movement_state
 1078 0034 00000000 		.word	start_turn_count
 1079              		.cfi_endproc
 1080              	.LFE75:
 1081              		.size	initTurnRight, .-initTurnRight
 1082              		.section	.text.initForward,"ax",%progbits
 1083              		.align	2
 1084              		.global	initForward
 1085              		.thumb
 1086              		.thumb_func
 1087              		.type	initForward, %function
 1088              	initForward:
 1089              	.LFB76:
 263:.\main.c      **** 
 264:.\main.c      **** void initForward(){
 1090              		.loc 1 264 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 25


 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094 0000 80B5     		push	{r7, lr}
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 265:.\main.c      ****     brakeMotor();
 1100              		.loc 1 265 0
 1101 0004 FFF7FEFF 		bl	brakeMotor
 266:.\main.c      ****     movement_state = DRIVE;
 1102              		.loc 1 266 0
 1103 0008 014B     		ldr	r3, .L64
 1104 000a 0022     		movs	r2, #0
 1105 000c 1A70     		strb	r2, [r3]
 267:.\main.c      **** }
 1106              		.loc 1 267 0
 1107 000e 80BD     		pop	{r7, pc}
 1108              	.L65:
 1109              		.align	2
 1110              	.L64:
 1111 0010 00000000 		.word	movement_state
 1112              		.cfi_endproc
 1113              	.LFE76:
 1114              		.size	initForward, .-initForward
 1115              		.section	.text.initBrake,"ax",%progbits
 1116              		.align	2
 1117              		.global	initBrake
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	initBrake, %function
 1121              	initBrake:
 1122              	.LFB77:
 268:.\main.c      **** 
 269:.\main.c      **** void initBrake(){
 1123              		.loc 1 269 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128 0000 80B4     		push	{r7}
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 00AF     		add	r7, sp, #0
 1132              		.cfi_def_cfa_register 7
 270:.\main.c      ****     movement_state = STOPPED;
 1133              		.loc 1 270 0
 1134 0004 034B     		ldr	r3, .L67
 1135 0006 0322     		movs	r2, #3
 1136 0008 1A70     		strb	r2, [r3]
 271:.\main.c      **** }
 1137              		.loc 1 271 0
 1138 000a BD46     		mov	sp, r7
 1139              		.cfi_def_cfa_register 13
 1140              		@ sp needed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 26


 1141 000c 5DF8047B 		ldr	r7, [sp], #4
 1142              		.cfi_restore 7
 1143              		.cfi_def_cfa_offset 0
 1144 0010 7047     		bx	lr
 1145              	.L68:
 1146 0012 00BF     		.align	2
 1147              	.L67:
 1148 0014 00000000 		.word	movement_state
 1149              		.cfi_endproc
 1150              	.LFE77:
 1151              		.size	initBrake, .-initBrake
 1152              		.section	.text.initTrack,"ax",%progbits
 1153              		.align	2
 1154              		.global	initTrack
 1155              		.thumb
 1156              		.thumb_func
 1157              		.type	initTrack, %function
 1158              	initTrack:
 1159              	.LFB78:
 272:.\main.c      **** 
 273:.\main.c      **** void initTrack()
 274:.\main.c      **** {
 1160              		.loc 1 274 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164              		@ link register save eliminated.
 1165 0000 80B4     		push	{r7}
 1166              		.cfi_def_cfa_offset 4
 1167              		.cfi_offset 7, -4
 1168 0002 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING;
 1170              		.loc 1 275 0
 1171 0004 034B     		ldr	r3, .L70
 1172 0006 0422     		movs	r2, #4
 1173 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1174              		.loc 1 276 0
 1175 000a BD46     		mov	sp, r7
 1176              		.cfi_def_cfa_register 13
 1177              		@ sp needed
 1178 000c 5DF8047B 		ldr	r7, [sp], #4
 1179              		.cfi_restore 7
 1180              		.cfi_def_cfa_offset 0
 1181 0010 7047     		bx	lr
 1182              	.L71:
 1183 0012 00BF     		.align	2
 1184              	.L70:
 1185 0014 00000000 		.word	movement_state
 1186              		.cfi_endproc
 1187              	.LFE78:
 1188              		.size	initTrack, .-initTrack
 1189              		.section	.text.initTrackU,"ax",%progbits
 1190              		.align	2
 1191              		.global	initTrackU
 1192              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 27


 1193              		.thumb_func
 1194              		.type	initTrackU, %function
 1195              	initTrackU:
 1196              	.LFB79:
 277:.\main.c      **** 
 278:.\main.c      **** void initTrackU(){
 1197              		.loc 1 278 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 1202 0000 80B4     		push	{r7}
 1203              		.cfi_def_cfa_offset 4
 1204              		.cfi_offset 7, -4
 1205 0002 00AF     		add	r7, sp, #0
 1206              		.cfi_def_cfa_register 7
 279:.\main.c      ****     movement_state = TRACKING_U;
 1207              		.loc 1 279 0
 1208 0004 034B     		ldr	r3, .L73
 1209 0006 0522     		movs	r2, #5
 1210 0008 1A70     		strb	r2, [r3]
 280:.\main.c      **** }
 1211              		.loc 1 280 0
 1212 000a BD46     		mov	sp, r7
 1213              		.cfi_def_cfa_register 13
 1214              		@ sp needed
 1215 000c 5DF8047B 		ldr	r7, [sp], #4
 1216              		.cfi_restore 7
 1217              		.cfi_def_cfa_offset 0
 1218 0010 7047     		bx	lr
 1219              	.L74:
 1220 0012 00BF     		.align	2
 1221              	.L73:
 1222 0014 00000000 		.word	movement_state
 1223              		.cfi_endproc
 1224              	.LFE79:
 1225              		.size	initTrackU, .-initTrackU
 1226              		.section	.text.initTrackLineSoft,"ax",%progbits
 1227              		.align	2
 1228              		.global	initTrackLineSoft
 1229              		.thumb
 1230              		.thumb_func
 1231              		.type	initTrackLineSoft, %function
 1232              	initTrackLineSoft:
 1233              	.LFB80:
 281:.\main.c      **** 
 282:.\main.c      **** void initTrackLineSoft(){
 1234              		.loc 1 282 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 1239 0000 80B4     		push	{r7}
 1240              		.cfi_def_cfa_offset 4
 1241              		.cfi_offset 7, -4
 1242 0002 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 28


 283:.\main.c      ****     movement_state = TRACKING_SOFT;
 1244              		.loc 1 283 0
 1245 0004 034B     		ldr	r3, .L76
 1246 0006 0622     		movs	r2, #6
 1247 0008 1A70     		strb	r2, [r3]
 284:.\main.c      **** }
 1248              		.loc 1 284 0
 1249 000a BD46     		mov	sp, r7
 1250              		.cfi_def_cfa_register 13
 1251              		@ sp needed
 1252 000c 5DF8047B 		ldr	r7, [sp], #4
 1253              		.cfi_restore 7
 1254              		.cfi_def_cfa_offset 0
 1255 0010 7047     		bx	lr
 1256              	.L77:
 1257 0012 00BF     		.align	2
 1258              	.L76:
 1259 0014 00000000 		.word	movement_state
 1260              		.cfi_endproc
 1261              	.LFE80:
 1262              		.size	initTrackLineSoft, .-initTrackLineSoft
 1263              		.section	.text.rxInt,"ax",%progbits
 1264              		.align	2
 1265              		.global	rxInt
 1266              		.thumb
 1267              		.thumb_func
 1268              		.type	rxInt, %function
 1269              	rxInt:
 1270              	.LFB81:
 285:.\main.c      **** 
 286:.\main.c      **** //Binary RF Data
 287:.\main.c      **** CY_ISR(rxInt){
 1271              		.loc 1 287 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 8
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 B0B5     		push	{r4, r5, r7, lr}
 1276              		.cfi_def_cfa_offset 16
 1277              		.cfi_offset 4, -16
 1278              		.cfi_offset 5, -12
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 82B0     		sub	sp, sp, #8
 1282              		.cfi_def_cfa_offset 24
 1283 0004 00AF     		add	r7, sp, #0
 1284              		.cfi_def_cfa_register 7
 288:.\main.c      ****     char rf_char = UART_GetChar();
 1285              		.loc 1 288 0
 1286 0006 FFF7FEFF 		bl	UART_GetChar
 1287 000a 0346     		mov	r3, r0
 1288 000c FB71     		strb	r3, [r7, #7]
 289:.\main.c      ****     if(rf_char == SOP){
 1289              		.loc 1 289 0
 1290 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1291 0010 AA2B     		cmp	r3, #170
 1292 0012 1CD1     		bne	.L79
 290:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 29


 291:.\main.c      ****             if(byteCount == 34)
 1293              		.loc 1 291 0
 1294 0014 1B4B     		ldr	r3, .L83
 1295 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1296 0018 222B     		cmp	r3, #34
 1297 001a 11D1     		bne	.L80
 292:.\main.c      ****             {
 293:.\main.c      ****                 system_state = buffer_state;
 1298              		.loc 1 293 0
 1299 001c 1A4B     		ldr	r3, .L83+4
 1300 001e 1B4A     		ldr	r2, .L83+8
 1301 0020 1568     		ldr	r5, [r2]	@ unaligned
 1302 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1303 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1304 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1305 0028 1D60     		str	r5, [r3]	@ unaligned
 1306 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1307 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1308 002e D960     		str	r1, [r3, #12]	@ unaligned
 1309 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1310 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1311 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1312 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1313 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1314 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1315 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1316 003e D961     		str	r1, [r3, #28]	@ unaligned
 1317              	.L80:
 294:.\main.c      ****             }
 295:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1318              		.loc 1 295 0
 1319 0040 104B     		ldr	r3, .L83
 1320 0042 0222     		movs	r2, #2
 1321 0044 1A70     		strb	r2, [r3]
 296:.\main.c      ****             flag_rx = 0;
 1322              		.loc 1 296 0
 1323 0046 124B     		ldr	r3, .L83+12
 1324 0048 0022     		movs	r2, #0
 1325 004a 1A70     		strb	r2, [r3]
 1326 004c 16E0     		b	.L78
 1327              	.L79:
 297:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 298:.\main.c      ****         }
 299:.\main.c      ****         else
 300:.\main.c      ****         {
 301:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1328              		.loc 1 301 0
 1329 004e 0D4B     		ldr	r3, .L83
 1330 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1331 0052 03F00103 		and	r3, r3, #1
 1332 0056 0F49     		ldr	r1, .L83+16
 1333 0058 FA79     		ldrb	r2, [r7, #7]
 1334 005a CA54     		strb	r2, [r1, r3]
 302:.\main.c      ****            
 303:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1335              		.loc 1 303 0
 1336 005c 094B     		ldr	r3, .L83
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 30


 1337 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1338 0060 03F00103 		and	r3, r3, #1
 1339 0064 DBB2     		uxtb	r3, r3
 1340 0066 002B     		cmp	r3, #0
 1341 0068 02D0     		beq	.L82
 304:.\main.c      ****             {
 305:.\main.c      ****                 flag_rx = 1;
 1342              		.loc 1 305 0
 1343 006a 094B     		ldr	r3, .L83+12
 1344 006c 0122     		movs	r2, #1
 1345 006e 1A70     		strb	r2, [r3]
 1346              	.L82:
 306:.\main.c      ****             }
 307:.\main.c      ****             byteCount = (byteCount + 1);
 1347              		.loc 1 307 0
 1348 0070 044B     		ldr	r3, .L83
 1349 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 0074 0133     		adds	r3, r3, #1
 1351 0076 DAB2     		uxtb	r2, r3
 1352 0078 024B     		ldr	r3, .L83
 1353 007a 1A70     		strb	r2, [r3]
 1354              	.L78:
 308:.\main.c      ****         }
 309:.\main.c      **** }
 1355              		.loc 1 309 0
 1356 007c 0837     		adds	r7, r7, #8
 1357              		.cfi_def_cfa_offset 16
 1358 007e BD46     		mov	sp, r7
 1359              		.cfi_def_cfa_register 13
 1360              		@ sp needed
 1361 0080 B0BD     		pop	{r4, r5, r7, pc}
 1362              	.L84:
 1363 0082 00BF     		.align	2
 1364              	.L83:
 1365 0084 00000000 		.word	byteCount
 1366 0088 00000000 		.word	system_state
 1367 008c 00000000 		.word	buffer_state
 1368 0090 00000000 		.word	flag_rx
 1369 0094 00000000 		.word	packet
 1370              		.cfi_endproc
 1371              	.LFE81:
 1372              		.size	rxInt, .-rxInt
 1373              		.section	.text.BT_rxInt,"ax",%progbits
 1374              		.align	2
 1375              		.global	BT_rxInt
 1376              		.thumb
 1377              		.thumb_func
 1378              		.type	BT_rxInt, %function
 1379              	BT_rxInt:
 1380              	.LFB82:
 310:.\main.c      **** 
 311:.\main.c      **** CY_ISR(BT_rxInt)
 312:.\main.c      **** {
 1381              		.loc 1 312 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 8
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 31


 1385 0000 80B5     		push	{r7, lr}
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 82B0     		sub	sp, sp, #8
 1390              		.cfi_def_cfa_offset 16
 1391 0004 00AF     		add	r7, sp, #0
 1392              		.cfi_def_cfa_register 7
 313:.\main.c      ****     char rf_char = UART_GetChar();
 1393              		.loc 1 313 0
 1394 0006 FFF7FEFF 		bl	UART_GetChar
 1395 000a 0346     		mov	r3, r0
 1396 000c FB71     		strb	r3, [r7, #7]
 314:.\main.c      ****     switch(rf_char){
 1397              		.loc 1 314 0
 1398 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1399 0010 613B     		subs	r3, r3, #97
 1400 0012 192B     		cmp	r3, #25
 1401 0014 66D8     		bhi	.L85
 1402 0016 01A2     		adr	r2, .L88
 1403 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1404              		.p2align 2
 1405              	.L88:
 1406 001c 85000000 		.word	.L87+1
 1407 0020 E5000000 		.word	.L85+1
 1408 0024 E5000000 		.word	.L85+1
 1409 0028 A9000000 		.word	.L89+1
 1410 002c E5000000 		.word	.L85+1
 1411 0030 B5000000 		.word	.L90+1
 1412 0034 E5000000 		.word	.L85+1
 1413 0038 E5000000 		.word	.L85+1
 1414 003c E5000000 		.word	.L85+1
 1415 0040 E5000000 		.word	.L85+1
 1416 0044 E5000000 		.word	.L85+1
 1417 0048 E5000000 		.word	.L85+1
 1418 004c E5000000 		.word	.L85+1
 1419 0050 E5000000 		.word	.L85+1
 1420 0054 E5000000 		.word	.L85+1
 1421 0058 E5000000 		.word	.L85+1
 1422 005c E5000000 		.word	.L85+1
 1423 0060 E5000000 		.word	.L85+1
 1424 0064 9D000000 		.word	.L91+1
 1425 0068 C1000000 		.word	.L92+1
 1426 006c CD000000 		.word	.L93+1
 1427 0070 E5000000 		.word	.L85+1
 1428 0074 91000000 		.word	.L94+1
 1429 0078 E5000000 		.word	.L85+1
 1430 007c E5000000 		.word	.L85+1
 1431 0080 D9000000 		.word	.L95+1
 1432              		.p2align 1
 1433              	.L87:
 315:.\main.c      ****     case 'a':
 316:.\main.c      ****         initTurnLeft();
 1434              		.loc 1 316 0
 1435 0084 FFF7FEFF 		bl	initTurnLeft
 317:.\main.c      ****         track_mode = NO_TRACK;
 1436              		.loc 1 317 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 32


 1437 0088 184B     		ldr	r3, .L96
 1438 008a 0022     		movs	r2, #0
 1439 008c 1A70     		strb	r2, [r3]
 318:.\main.c      ****         break;
 1440              		.loc 1 318 0
 1441 008e 29E0     		b	.L85
 1442              	.L94:
 319:.\main.c      ****     case 'w':
 320:.\main.c      ****         initForward();
 1443              		.loc 1 320 0
 1444 0090 FFF7FEFF 		bl	initForward
 321:.\main.c      ****         track_mode = NO_TRACK;
 1445              		.loc 1 321 0
 1446 0094 154B     		ldr	r3, .L96
 1447 0096 0022     		movs	r2, #0
 1448 0098 1A70     		strb	r2, [r3]
 322:.\main.c      ****         break;
 1449              		.loc 1 322 0
 1450 009a 23E0     		b	.L85
 1451              	.L91:
 323:.\main.c      ****     case 's': 
 324:.\main.c      ****         reverseDirection();
 1452              		.loc 1 324 0
 1453 009c FFF7FEFF 		bl	reverseDirection
 325:.\main.c      ****         track_mode = NO_TRACK;
 1454              		.loc 1 325 0
 1455 00a0 124B     		ldr	r3, .L96
 1456 00a2 0022     		movs	r2, #0
 1457 00a4 1A70     		strb	r2, [r3]
 326:.\main.c      ****         break;
 1458              		.loc 1 326 0
 1459 00a6 1DE0     		b	.L85
 1460              	.L89:
 327:.\main.c      ****     case 'd':
 328:.\main.c      ****         initTurnRight();
 1461              		.loc 1 328 0
 1462 00a8 FFF7FEFF 		bl	initTurnRight
 329:.\main.c      ****         track_mode = NO_TRACK;
 1463              		.loc 1 329 0
 1464 00ac 0F4B     		ldr	r3, .L96
 1465 00ae 0022     		movs	r2, #0
 1466 00b0 1A70     		strb	r2, [r3]
 330:.\main.c      ****         break;
 1467              		.loc 1 330 0
 1468 00b2 17E0     		b	.L85
 1469              	.L90:
 331:.\main.c      ****     case 'f':
 332:.\main.c      ****         initBrake();
 1470              		.loc 1 332 0
 1471 00b4 FFF7FEFF 		bl	initBrake
 333:.\main.c      ****         track_mode = NO_TRACK;
 1472              		.loc 1 333 0
 1473 00b8 0C4B     		ldr	r3, .L96
 1474 00ba 0022     		movs	r2, #0
 1475 00bc 1A70     		strb	r2, [r3]
 334:.\main.c      ****         break;
 1476              		.loc 1 334 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 33


 1477 00be 11E0     		b	.L85
 1478              	.L92:
 335:.\main.c      ****     case('t'):
 336:.\main.c      ****         track_mode = CURVE_TRACK;
 1479              		.loc 1 336 0
 1480 00c0 0A4B     		ldr	r3, .L96
 1481 00c2 0122     		movs	r2, #1
 1482 00c4 1A70     		strb	r2, [r3]
 337:.\main.c      ****         initTrack();
 1483              		.loc 1 337 0
 1484 00c6 FFF7FEFF 		bl	initTrack
 338:.\main.c      ****         break;
 1485              		.loc 1 338 0
 1486 00ca 0BE0     		b	.L85
 1487              	.L93:
 339:.\main.c      ****     case('u'):
 340:.\main.c      ****         initTrackU();
 1488              		.loc 1 340 0
 1489 00cc FFF7FEFF 		bl	initTrackU
 341:.\main.c      ****         track_mode = U_TRACK;
 1490              		.loc 1 341 0
 1491 00d0 064B     		ldr	r3, .L96
 1492 00d2 0222     		movs	r2, #2
 1493 00d4 1A70     		strb	r2, [r3]
 342:.\main.c      ****         break;
 1494              		.loc 1 342 0
 1495 00d6 05E0     		b	.L85
 1496              	.L95:
 343:.\main.c      ****     case('z'):
 344:.\main.c      ****         track_mode = SQUARE_TRACK;
 1497              		.loc 1 344 0
 1498 00d8 044B     		ldr	r3, .L96
 1499 00da 0322     		movs	r2, #3
 1500 00dc 1A70     		strb	r2, [r3]
 345:.\main.c      ****         initTrack();
 1501              		.loc 1 345 0
 1502 00de FFF7FEFF 		bl	initTrack
 346:.\main.c      ****         break;
 1503              		.loc 1 346 0
 1504 00e2 00BF     		nop
 1505              	.L85:
 347:.\main.c      ****     }
 348:.\main.c      **** }
 1506              		.loc 1 348 0
 1507 00e4 0837     		adds	r7, r7, #8
 1508              		.cfi_def_cfa_offset 8
 1509 00e6 BD46     		mov	sp, r7
 1510              		.cfi_def_cfa_register 13
 1511              		@ sp needed
 1512 00e8 80BD     		pop	{r7, pc}
 1513              	.L97:
 1514 00ea 00BF     		.align	2
 1515              	.L96:
 1516 00ec 00000000 		.word	track_mode
 1517              		.cfi_endproc
 1518              	.LFE82:
 1519              		.size	BT_rxInt, .-BT_rxInt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 34


 1520              		.section	.text.BT_txInt,"ax",%progbits
 1521              		.align	2
 1522              		.global	BT_txInt
 1523              		.thumb
 1524              		.thumb_func
 1525              		.type	BT_txInt, %function
 1526              	BT_txInt:
 1527              	.LFB83:
 349:.\main.c      **** 
 350:.\main.c      **** //BT
 351:.\main.c      **** CY_ISR(BT_txInt)
 352:.\main.c      **** {
 1528              		.loc 1 352 0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 1, uses_anonymous_args = 0
 1532              		@ link register save eliminated.
 1533 0000 80B4     		push	{r7}
 1534              		.cfi_def_cfa_offset 4
 1535              		.cfi_offset 7, -4
 1536 0002 00AF     		add	r7, sp, #0
 1537              		.cfi_def_cfa_register 7
 353:.\main.c      ****     
 354:.\main.c      **** }
 1538              		.loc 1 354 0
 1539 0004 BD46     		mov	sp, r7
 1540              		.cfi_def_cfa_register 13
 1541              		@ sp needed
 1542 0006 5DF8047B 		ldr	r7, [sp], #4
 1543              		.cfi_restore 7
 1544              		.cfi_def_cfa_offset 0
 1545 000a 7047     		bx	lr
 1546              		.cfi_endproc
 1547              	.LFE83:
 1548              		.size	BT_txInt, .-BT_txInt
 1549              		.section	.text.adc_isr,"ax",%progbits
 1550              		.align	2
 1551              		.global	adc_isr
 1552              		.thumb
 1553              		.thumb_func
 1554              		.type	adc_isr, %function
 1555              	adc_isr:
 1556              	.LFB84:
 355:.\main.c      **** 
 356:.\main.c      **** //ADC:
 357:.\main.c      **** CY_ISR (adc_isr)
 358:.\main.c      **** {
 1557              		.loc 1 358 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 1, uses_anonymous_args = 0
 1561 0000 80B5     		push	{r7, lr}
 1562              		.cfi_def_cfa_offset 8
 1563              		.cfi_offset 7, -8
 1564              		.cfi_offset 14, -4
 1565 0002 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 35


 359:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 360:.\main.c      ****     adc_result = ADC_GetResult16();
 1567              		.loc 1 360 0
 1568 0004 FFF7FEFF 		bl	ADC_GetResult16
 1569 0008 0346     		mov	r3, r0
 1570 000a 1A46     		mov	r2, r3
 1571 000c 044B     		ldr	r3, .L100
 1572 000e 1A80     		strh	r2, [r3]	@ movhi
 361:.\main.c      ****     flag_receive_ADC = 1;
 1573              		.loc 1 361 0
 1574 0010 044B     		ldr	r3, .L100+4
 1575 0012 0122     		movs	r2, #1
 1576 0014 1A70     		strb	r2, [r3]
 362:.\main.c      ****     flag_print_rf = 1;
 1577              		.loc 1 362 0
 1578 0016 044B     		ldr	r3, .L100+8
 1579 0018 0122     		movs	r2, #1
 1580 001a 1A70     		strb	r2, [r3]
 363:.\main.c      ****     //LED_Write(~LED_Read());
 364:.\main.c      **** }
 1581              		.loc 1 364 0
 1582 001c 80BD     		pop	{r7, pc}
 1583              	.L101:
 1584 001e 00BF     		.align	2
 1585              	.L100:
 1586 0020 00000000 		.word	adc_result
 1587 0024 00000000 		.word	flag_receive_ADC
 1588 0028 00000000 		.word	flag_print_rf
 1589              		.cfi_endproc
 1590              	.LFE84:
 1591              		.size	adc_isr, .-adc_isr
 1592              		.section	.text.isr_quad1,"ax",%progbits
 1593              		.align	2
 1594              		.global	isr_quad1
 1595              		.thumb
 1596              		.thumb_func
 1597              		.type	isr_quad1, %function
 1598              	isr_quad1:
 1599              	.LFB85:
 365:.\main.c      **** 
 366:.\main.c      **** CY_ISR (isr_quad1)
 367:.\main.c      **** {
 1600              		.loc 1 367 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604 0000 80B5     		push	{r7, lr}
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 7, -8
 1607              		.cfi_offset 14, -4
 1608 0002 00AF     		add	r7, sp, #0
 1609              		.cfi_def_cfa_register 7
 368:.\main.c      ****     //LED_Write(~LED_Read());
 369:.\main.c      ****     last_quad_count1 = quad_count1;
 1610              		.loc 1 369 0
 1611 0004 244B     		ldr	r3, .L104
 1612 0006 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 36


 1613 0008 244B     		ldr	r3, .L104+4
 1614 000a 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****     last_quad_count2 = quad_count2;
 1615              		.loc 1 370 0
 1616 000c 244B     		ldr	r3, .L104+8
 1617 000e 1A88     		ldrh	r2, [r3]
 1618 0010 244B     		ldr	r3, .L104+12
 1619 0012 1A80     		strh	r2, [r3]	@ movhi
 371:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1620              		.loc 1 371 0
 1621 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1622 0018 0346     		mov	r3, r0
 1623 001a 1A46     		mov	r2, r3
 1624 001c 1E4B     		ldr	r3, .L104
 1625 001e 1A80     		strh	r2, [r3]	@ movhi
 372:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1626              		.loc 1 372 0
 1627 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1628 0024 0346     		mov	r3, r0
 1629 0026 1A46     		mov	r2, r3
 1630 0028 1D4B     		ldr	r3, .L104+8
 1631 002a 1A80     		strh	r2, [r3]	@ movhi
 373:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1632              		.loc 1 373 0
 1633 002c 1A4B     		ldr	r3, .L104
 1634 002e 1B88     		ldrh	r3, [r3]
 1635 0030 9AB2     		uxth	r2, r3
 1636 0032 1A4B     		ldr	r3, .L104+4
 1637 0034 1B88     		ldrh	r3, [r3]
 1638 0036 9BB2     		uxth	r3, r3
 1639 0038 D31A     		subs	r3, r2, r3
 1640 003a 9BB2     		uxth	r3, r3
 1641 003c 9AB2     		uxth	r2, r3
 1642 003e 1A4B     		ldr	r3, .L104+16
 1643 0040 1A80     		strh	r2, [r3]	@ movhi
 374:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1644              		.loc 1 374 0
 1645 0042 174B     		ldr	r3, .L104+8
 1646 0044 1B88     		ldrh	r3, [r3]
 1647 0046 9AB2     		uxth	r2, r3
 1648 0048 164B     		ldr	r3, .L104+12
 1649 004a 1B88     		ldrh	r3, [r3]
 1650 004c 9BB2     		uxth	r3, r3
 1651 004e D31A     		subs	r3, r2, r3
 1652 0050 9BB2     		uxth	r3, r3
 1653 0052 9AB2     		uxth	r2, r3
 1654 0054 154B     		ldr	r3, .L104+20
 1655 0056 1A80     		strh	r2, [r3]	@ movhi
 375:.\main.c      ****     
 376:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1656              		.loc 1 376 0
 1657 0058 0F4B     		ldr	r3, .L104
 1658 005a 1B88     		ldrh	r3, [r3]
 1659 005c 1BB2     		sxth	r3, r3
 1660 005e 40F6B832 		movw	r2, #3000
 1661 0062 9342     		cmp	r3, r2
 1662 0064 13DD     		ble	.L103
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 37


 1663              		.loc 1 376 0 is_stmt 0 discriminator 1
 1664 0066 124B     		ldr	r3, .L104+24
 1665 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1666 006a 012B     		cmp	r3, #1
 1667 006c 0FD0     		beq	.L103
 1668              		.loc 1 376 0 discriminator 2
 1669 006e 104B     		ldr	r3, .L104+24
 1670 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 0072 022B     		cmp	r3, #2
 1672 0074 0BD0     		beq	.L103
 377:.\main.c      ****     {
 378:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1673              		.loc 1 378 0 is_stmt 1
 1674 0076 0020     		movs	r0, #0
 1675 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 379:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1676              		.loc 1 379 0
 1677 007c 0020     		movs	r0, #0
 1678 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 380:.\main.c      ****         quad_count1 = 0;
 1679              		.loc 1 380 0
 1680 0082 054B     		ldr	r3, .L104
 1681 0084 0022     		movs	r2, #0
 1682 0086 1A80     		strh	r2, [r3]	@ movhi
 381:.\main.c      ****         quad_count2 = 0;
 1683              		.loc 1 381 0
 1684 0088 054B     		ldr	r3, .L104+8
 1685 008a 0022     		movs	r2, #0
 1686 008c 1A80     		strh	r2, [r3]	@ movhi
 1687              	.L103:
 382:.\main.c      ****     }
 383:.\main.c      **** 
 384:.\main.c      ****     flag_calc_wheelspeed = 1;
 1688              		.loc 1 384 0
 1689 008e 094B     		ldr	r3, .L104+28
 1690 0090 0122     		movs	r2, #1
 1691 0092 1A70     		strb	r2, [r3]
 385:.\main.c      **** }
 1692              		.loc 1 385 0
 1693 0094 80BD     		pop	{r7, pc}
 1694              	.L105:
 1695 0096 00BF     		.align	2
 1696              	.L104:
 1697 0098 00000000 		.word	quad_count1
 1698 009c 00000000 		.word	last_quad_count1
 1699 00a0 00000000 		.word	quad_count2
 1700 00a4 00000000 		.word	last_quad_count2
 1701 00a8 00000000 		.word	quad_diff1
 1702 00ac 00000000 		.word	quad_diff2
 1703 00b0 00000000 		.word	movement_state
 1704 00b4 00000000 		.word	flag_calc_wheelspeed
 1705              		.cfi_endproc
 1706              	.LFE85:
 1707              		.size	isr_quad1, .-isr_quad1
 1708              		.section	.text.isr_turn_timer,"ax",%progbits
 1709              		.align	2
 1710              		.global	isr_turn_timer
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 38


 1711              		.thumb
 1712              		.thumb_func
 1713              		.type	isr_turn_timer, %function
 1714              	isr_turn_timer:
 1715              	.LFB86:
 386:.\main.c      **** 
 387:.\main.c      **** CY_ISR(isr_turn_timer)
 388:.\main.c      **** {
 1716              		.loc 1 388 0
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 1, uses_anonymous_args = 0
 1720 0000 80B5     		push	{r7, lr}
 1721              		.cfi_def_cfa_offset 8
 1722              		.cfi_offset 7, -8
 1723              		.cfi_offset 14, -4
 1724 0002 00AF     		add	r7, sp, #0
 1725              		.cfi_def_cfa_register 7
 389:.\main.c      ****     if(movement_state == LTURN)
 1726              		.loc 1 389 0
 1727 0004 194B     		ldr	r3, .L110
 1728 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1729 0008 012B     		cmp	r3, #1
 1730 000a 15D1     		bne	.L107
 390:.\main.c      ****     {
 391:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1731              		.loc 1 391 0
 1732 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1733 0010 0346     		mov	r3, r0
 1734 0012 1A46     		mov	r2, r3
 1735 0014 164B     		ldr	r3, .L110+4
 1736 0016 1B88     		ldrh	r3, [r3]
 1737 0018 1BB2     		sxth	r3, r3
 1738 001a D31A     		subs	r3, r2, r3
 1739 001c 002B     		cmp	r3, #0
 1740 001e B8BF     		it	lt
 1741 0020 5B42     		rsblt	r3, r3, #0
 1742 0022 CF2B     		cmp	r3, #207
 1743 0024 21DD     		ble	.L106
 392:.\main.c      ****         {
 393:.\main.c      ****             //movement_state = STOPPED;
 394:.\main.c      ****             brakeMotor();
 1744              		.loc 1 394 0
 1745 0026 FFF7FEFF 		bl	brakeMotor
 395:.\main.c      ****             movement_state = prev_movement_state;
 1746              		.loc 1 395 0
 1747 002a 124B     		ldr	r3, .L110+8
 1748 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1749 002e 0F4B     		ldr	r3, .L110
 1750 0030 1A70     		strb	r2, [r3]
 396:.\main.c      ****             Timer_2_Stop();
 1751              		.loc 1 396 0
 1752 0032 FFF7FEFF 		bl	Timer_2_Stop
 1753 0036 18E0     		b	.L106
 1754              	.L107:
 397:.\main.c      ****         }
 398:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 39


 399:.\main.c      ****     else if (movement_state == RTURN)
 1755              		.loc 1 399 0
 1756 0038 0C4B     		ldr	r3, .L110
 1757 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1758 003c 022B     		cmp	r3, #2
 1759 003e 14D1     		bne	.L106
 400:.\main.c      ****     {
 401:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1760              		.loc 1 401 0
 1761 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1762 0044 0346     		mov	r3, r0
 1763 0046 1A46     		mov	r2, r3
 1764 0048 094B     		ldr	r3, .L110+4
 1765 004a 1B88     		ldrh	r3, [r3]
 1766 004c 1BB2     		sxth	r3, r3
 1767 004e D31A     		subs	r3, r2, r3
 1768 0050 002B     		cmp	r3, #0
 1769 0052 B8BF     		it	lt
 1770 0054 5B42     		rsblt	r3, r3, #0
 1771 0056 CF2B     		cmp	r3, #207
 1772 0058 07DD     		ble	.L106
 402:.\main.c      ****         {
 403:.\main.c      ****             //movement_state = STOPPED;
 404:.\main.c      ****             brakeMotor();
 1773              		.loc 1 404 0
 1774 005a FFF7FEFF 		bl	brakeMotor
 405:.\main.c      ****             movement_state = prev_movement_state;
 1775              		.loc 1 405 0
 1776 005e 054B     		ldr	r3, .L110+8
 1777 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1778 0062 024B     		ldr	r3, .L110
 1779 0064 1A70     		strb	r2, [r3]
 406:.\main.c      ****             Timer_2_Stop();
 1780              		.loc 1 406 0
 1781 0066 FFF7FEFF 		bl	Timer_2_Stop
 1782              	.L106:
 407:.\main.c      ****         }
 408:.\main.c      ****     }
 409:.\main.c      **** }
 1783              		.loc 1 409 0
 1784 006a 80BD     		pop	{r7, pc}
 1785              	.L111:
 1786              		.align	2
 1787              	.L110:
 1788 006c 00000000 		.word	movement_state
 1789 0070 00000000 		.word	start_turn_count
 1790 0074 00000000 		.word	prev_movement_state
 1791              		.cfi_endproc
 1792              	.LFE86:
 1793              		.size	isr_turn_timer, .-isr_turn_timer
 1794              		.section	.text.Stop_on_line,"ax",%progbits
 1795              		.align	2
 1796              		.global	Stop_on_line
 1797              		.thumb
 1798              		.thumb_func
 1799              		.type	Stop_on_line, %function
 1800              	Stop_on_line:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 40


 1801              	.LFB87:
 410:.\main.c      **** 
 411:.\main.c      **** 
 412:.\main.c      **** CY_ISR (Stop_on_line)
 413:.\main.c      **** {
 1802              		.loc 1 413 0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 1, uses_anonymous_args = 0
 1806              		@ link register save eliminated.
 1807 0000 80B4     		push	{r7}
 1808              		.cfi_def_cfa_offset 4
 1809              		.cfi_offset 7, -4
 1810 0002 00AF     		add	r7, sp, #0
 1811              		.cfi_def_cfa_register 7
 414:.\main.c      ****     movement_state = STOPPED;
 1812              		.loc 1 414 0
 1813 0004 054B     		ldr	r3, .L114
 1814 0006 0322     		movs	r2, #3
 1815 0008 1A70     		strb	r2, [r3]
 415:.\main.c      ****     if(movement_state != DRIVE) return;
 1816              		.loc 1 415 0
 1817 000a 044B     		ldr	r3, .L114
 1818 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1819 000e 002B     		cmp	r3, #0
 1820 0010 00D0     		beq	.L112
 1821 0012 00BF     		nop
 1822              	.L112:
 416:.\main.c      ****     //initTurnLeft();
 417:.\main.c      **** }
 1823              		.loc 1 417 0
 1824 0014 BD46     		mov	sp, r7
 1825              		.cfi_def_cfa_register 13
 1826              		@ sp needed
 1827 0016 5DF8047B 		ldr	r7, [sp], #4
 1828              		.cfi_restore 7
 1829              		.cfi_def_cfa_offset 0
 1830 001a 7047     		bx	lr
 1831              	.L115:
 1832              		.align	2
 1833              	.L114:
 1834 001c 00000000 		.word	movement_state
 1835              		.cfi_endproc
 1836              	.LFE87:
 1837              		.size	Stop_on_line, .-Stop_on_line
 1838              		.section	.rodata
 1839 002b 00       		.align	2
 1840              	.LC3:
 1841 002c 53746172 		.ascii	"Starting robot!\015\012\000"
 1841      74696E67 
 1841      20726F62 
 1841      6F74210D 
 1841      0A00
 1842              		.section	.text.button,"ax",%progbits
 1843              		.align	2
 1844              		.global	button
 1845              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 41


 1846              		.thumb_func
 1847              		.type	button, %function
 1848              	button:
 1849              	.LFB88:
 418:.\main.c      **** 
 419:.\main.c      **** CY_ISR (button)
 420:.\main.c      **** {
 1850              		.loc 1 420 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 1, uses_anonymous_args = 0
 1854 0000 80B5     		push	{r7, lr}
 1855              		.cfi_def_cfa_offset 8
 1856              		.cfi_offset 7, -8
 1857              		.cfi_offset 14, -4
 1858 0002 00AF     		add	r7, sp, #0
 1859              		.cfi_def_cfa_register 7
 421:.\main.c      ****     if(BT_ENABLED)
 422:.\main.c      ****     {
 423:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1860              		.loc 1 423 0
 1861 0004 0348     		ldr	r0, .L117
 1862 0006 FFF7FEFF 		bl	UART_PutString
 424:.\main.c      ****     }
 425:.\main.c      ****     movement_state = DRIVE;
 1863              		.loc 1 425 0
 1864 000a 034B     		ldr	r3, .L117+4
 1865 000c 0022     		movs	r2, #0
 1866 000e 1A70     		strb	r2, [r3]
 426:.\main.c      **** }
 1867              		.loc 1 426 0
 1868 0010 80BD     		pop	{r7, pc}
 1869              	.L118:
 1870 0012 00BF     		.align	2
 1871              	.L117:
 1872 0014 2C000000 		.word	.LC3
 1873 0018 00000000 		.word	movement_state
 1874              		.cfi_endproc
 1875              	.LFE88:
 1876              		.size	button, .-button
 1877              		.section	.text.isr_adcTimer,"ax",%progbits
 1878              		.align	2
 1879              		.global	isr_adcTimer
 1880              		.thumb
 1881              		.thumb_func
 1882              		.type	isr_adcTimer, %function
 1883              	isr_adcTimer:
 1884              	.LFB89:
 427:.\main.c      **** 
 428:.\main.c      **** CY_ISR(isr_adcTimer)
 429:.\main.c      **** {
 1885              		.loc 1 429 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 1, uses_anonymous_args = 0
 1889 0000 80B5     		push	{r7, lr}
 1890              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 42


 1891              		.cfi_offset 7, -8
 1892              		.cfi_offset 14, -4
 1893 0002 00AF     		add	r7, sp, #0
 1894              		.cfi_def_cfa_register 7
 430:.\main.c      ****     ADC_StartConvert();
 1895              		.loc 1 430 0
 1896 0004 FFF7FEFF 		bl	ADC_StartConvert
 431:.\main.c      **** }
 1897              		.loc 1 431 0
 1898 0008 80BD     		pop	{r7, pc}
 1899              		.cfi_endproc
 1900              	.LFE89:
 1901              		.size	isr_adcTimer, .-isr_adcTimer
 1902              		.global	__aeabi_i2d
 1903              		.global	__aeabi_d2iz
 1904              		.global	__aeabi_dadd
 1905 000a 00BF     		.section	.text.Quad_Dec_response,"ax",%progbits
 1906              		.align	2
 1907              		.global	Quad_Dec_response
 1908              		.thumb
 1909              		.thumb_func
 1910              		.type	Quad_Dec_response, %function
 1911              	Quad_Dec_response:
 1912              	.LFB90:
 432:.\main.c      **** 
 433:.\main.c      **** void Quad_Dec_response()
 434:.\main.c      **** {
 1913              		.loc 1 434 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 32
 1916              		@ frame_needed = 1, uses_anonymous_args = 0
 1917 0000 B0B5     		push	{r4, r5, r7, lr}
 1918              		.cfi_def_cfa_offset 16
 1919              		.cfi_offset 4, -16
 1920              		.cfi_offset 5, -12
 1921              		.cfi_offset 7, -8
 1922              		.cfi_offset 14, -4
 1923 0002 88B0     		sub	sp, sp, #32
 1924              		.cfi_def_cfa_offset 48
 1925 0004 00AF     		add	r7, sp, #0
 1926              		.cfi_def_cfa_register 7
 435:.\main.c      ****     //Check if the flag has been set
 436:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1927              		.loc 1 436 0
 1928 0006 814B     		ldr	r3, .L128
 1929 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1930 000a 002B     		cmp	r3, #0
 1931 000c 00D1     		bne	.L121
 1932 000e FAE0     		b	.L120
 1933              	.L121:
 437:.\main.c      ****     flag_calc_wheelspeed = 0;
 1934              		.loc 1 437 0
 1935 0010 7E4B     		ldr	r3, .L128
 1936 0012 0022     		movs	r2, #0
 1937 0014 1A70     		strb	r2, [r3]
 438:.\main.c      ****     
 439:.\main.c      ****     //char wheel_1_str [64];
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 43


 440:.\main.c      ****     //char wheel_2_str [64];
 441:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 442:.\main.c      ****     //usbPutString(wheel_1_str);
 443:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 444:.\main.c      ****     
 445:.\main.c      ****     //usbPutString(wheel_2_str);
 446:.\main.c      ****     
 447:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1938              		.loc 1 447 0
 1939 0016 7E4B     		ldr	r3, .L128+4
 1940 0018 1B88     		ldrh	r3, [r3]	@ movhi
 1941 001a FB81     		strh	r3, [r7, #14]	@ movhi
 448:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1942              		.loc 1 448 0
 1943 001c 7D4B     		ldr	r3, .L128+8
 1944 001e 1B88     		ldrh	r3, [r3]	@ movhi
 1945 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 449:.\main.c      ****     double scalingLeft = 1;
 1946              		.loc 1 449 0
 1947 0022 4FF00002 		mov	r2, #0
 1948 0026 7C4B     		ldr	r3, .L128+12
 1949 0028 C7E90623 		strd	r2, [r7, #24]
 450:.\main.c      ****     double scalingRight = 1;
 1950              		.loc 1 450 0
 1951 002c 4FF00002 		mov	r2, #0
 1952 0030 794B     		ldr	r3, .L128+12
 1953 0032 C7E90423 		strd	r2, [r7, #16]
 451:.\main.c      ****     
 452:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 453:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 1954              		.loc 1 453 0
 1955 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 1956 003a 002B     		cmp	r3, #0
 1957 003c 0DD1     		bne	.L123
 1958              		.loc 1 453 0 is_stmt 0 discriminator 1
 1959 003e B7F90C30 		ldrsh	r3, [r7, #12]
 1960 0042 002B     		cmp	r3, #0
 1961 0044 09D1     		bne	.L123
 454:.\main.c      ****        //leftSpeed = 3;
 455:.\main.c      ****         scalingLeft = 8;
 1962              		.loc 1 455 0 is_stmt 1
 1963 0046 4FF00002 		mov	r2, #0
 1964 004a 744B     		ldr	r3, .L128+16
 1965 004c C7E90623 		strd	r2, [r7, #24]
 456:.\main.c      ****         scalingRight = 8;
 1966              		.loc 1 456 0
 1967 0050 4FF00002 		mov	r2, #0
 1968 0054 714B     		ldr	r3, .L128+16
 1969 0056 C7E90423 		strd	r2, [r7, #16]
 1970              	.L123:
 457:.\main.c      ****     }
 458:.\main.c      **** 
 459:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1971              		.loc 1 459 0
 1972 005a 714B     		ldr	r3, .L128+20
 1973 005c 1B88     		ldrh	r3, [r3]
 1974 005e 1AB2     		sxth	r2, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 44


 1975 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 1976 0064 002B     		cmp	r3, #0
 1977 0066 B8BF     		it	lt
 1978 0068 5B42     		rsblt	r3, r3, #0
 1979 006a D31A     		subs	r3, r2, r3
 1980 006c BB60     		str	r3, [r7, #8]
 460:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 1981              		.loc 1 460 0
 1982 006e BB68     		ldr	r3, [r7, #8]
 1983 0070 83EAE372 		eor	r2, r3, r3, asr #31
 1984 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 1985 0078 BB68     		ldr	r3, [r7, #8]
 1986 007a 92FBF3F3 		sdiv	r3, r2, r3
 1987 007e 1846     		mov	r0, r3
 1988 0080 FFF7FEFF 		bl	__aeabi_i2d
 1989 0084 0446     		mov	r4, r0
 1990 0086 0D46     		mov	r5, r1
 1991 0088 BB68     		ldr	r3, [r7, #8]
 1992 008a 002B     		cmp	r3, #0
 1993 008c B8BF     		it	lt
 1994 008e 5B42     		rsblt	r3, r3, #0
 1995 0090 1846     		mov	r0, r3
 1996 0092 FFF7FEFF 		bl	__aeabi_i2d
 1997 0096 0246     		mov	r2, r0
 1998 0098 0B46     		mov	r3, r1
 1999 009a 1046     		mov	r0, r2
 2000 009c 1946     		mov	r1, r3
 2001 009e FFF7FEFF 		bl	sqrt
 2002 00a2 0246     		mov	r2, r0
 2003 00a4 0B46     		mov	r3, r1
 2004 00a6 2046     		mov	r0, r4
 2005 00a8 2946     		mov	r1, r5
 2006 00aa FFF7FEFF 		bl	__aeabi_dmul
 2007 00ae 0246     		mov	r2, r0
 2008 00b0 0B46     		mov	r3, r1
 2009 00b2 1046     		mov	r0, r2
 2010 00b4 1946     		mov	r1, r3
 2011 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2012 00ba 0346     		mov	r3, r0
 2013 00bc 7B60     		str	r3, [r7, #4]
 461:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2014              		.loc 1 461 0
 2015 00be 594B     		ldr	r3, .L128+24
 2016 00c0 1B88     		ldrh	r3, [r3]
 2017 00c2 1BB2     		sxth	r3, r3
 2018 00c4 1846     		mov	r0, r3
 2019 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2020 00ca 0446     		mov	r4, r0
 2021 00cc 0D46     		mov	r5, r1
 2022 00ce 7868     		ldr	r0, [r7, #4]
 2023 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2024 00d4 0246     		mov	r2, r0
 2025 00d6 0B46     		mov	r3, r1
 2026 00d8 1046     		mov	r0, r2
 2027 00da 1946     		mov	r1, r3
 2028 00dc D7E90623 		ldrd	r2, [r7, #24]
 2029 00e0 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 45


 2030 00e4 0246     		mov	r2, r0
 2031 00e6 0B46     		mov	r3, r1
 2032 00e8 2046     		mov	r0, r4
 2033 00ea 2946     		mov	r1, r5
 2034 00ec FFF7FEFF 		bl	__aeabi_dadd
 2035 00f0 0246     		mov	r2, r0
 2036 00f2 0B46     		mov	r3, r1
 2037 00f4 1046     		mov	r0, r2
 2038 00f6 1946     		mov	r1, r3
 2039 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2040 00fc 0346     		mov	r3, r0
 2041 00fe 9AB2     		uxth	r2, r3
 2042 0100 484B     		ldr	r3, .L128+24
 2043 0102 1A80     		strh	r2, [r3]	@ movhi
 462:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2044              		.loc 1 462 0
 2045 0104 484B     		ldr	r3, .L128+28
 2046 0106 1B88     		ldrh	r3, [r3]
 2047 0108 1AB2     		sxth	r2, r3
 2048 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2049 010e 002B     		cmp	r3, #0
 2050 0110 B8BF     		it	lt
 2051 0112 5B42     		rsblt	r3, r3, #0
 2052 0114 D31A     		subs	r3, r2, r3
 2053 0116 BB60     		str	r3, [r7, #8]
 463:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2054              		.loc 1 463 0
 2055 0118 BB68     		ldr	r3, [r7, #8]
 2056 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2057 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2058 0122 BB68     		ldr	r3, [r7, #8]
 2059 0124 92FBF3F3 		sdiv	r3, r2, r3
 2060 0128 1846     		mov	r0, r3
 2061 012a FFF7FEFF 		bl	__aeabi_i2d
 2062 012e 0446     		mov	r4, r0
 2063 0130 0D46     		mov	r5, r1
 2064 0132 BB68     		ldr	r3, [r7, #8]
 2065 0134 002B     		cmp	r3, #0
 2066 0136 B8BF     		it	lt
 2067 0138 5B42     		rsblt	r3, r3, #0
 2068 013a 1846     		mov	r0, r3
 2069 013c FFF7FEFF 		bl	__aeabi_i2d
 2070 0140 0246     		mov	r2, r0
 2071 0142 0B46     		mov	r3, r1
 2072 0144 1046     		mov	r0, r2
 2073 0146 1946     		mov	r1, r3
 2074 0148 FFF7FEFF 		bl	sqrt
 2075 014c 0246     		mov	r2, r0
 2076 014e 0B46     		mov	r3, r1
 2077 0150 2046     		mov	r0, r4
 2078 0152 2946     		mov	r1, r5
 2079 0154 FFF7FEFF 		bl	__aeabi_dmul
 2080 0158 0246     		mov	r2, r0
 2081 015a 0B46     		mov	r3, r1
 2082 015c 1046     		mov	r0, r2
 2083 015e 1946     		mov	r1, r3
 2084 0160 FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 46


 2085 0164 0346     		mov	r3, r0
 2086 0166 7B60     		str	r3, [r7, #4]
 464:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 2087              		.loc 1 464 0
 2088 0168 304B     		ldr	r3, .L128+32
 2089 016a 1B88     		ldrh	r3, [r3]
 2090 016c 1BB2     		sxth	r3, r3
 2091 016e 1846     		mov	r0, r3
 2092 0170 FFF7FEFF 		bl	__aeabi_i2d
 2093 0174 0446     		mov	r4, r0
 2094 0176 0D46     		mov	r5, r1
 2095 0178 7868     		ldr	r0, [r7, #4]
 2096 017a FFF7FEFF 		bl	__aeabi_i2d
 2097 017e 0246     		mov	r2, r0
 2098 0180 0B46     		mov	r3, r1
 2099 0182 1046     		mov	r0, r2
 2100 0184 1946     		mov	r1, r3
 2101 0186 D7E90423 		ldrd	r2, [r7, #16]
 2102 018a FFF7FEFF 		bl	__aeabi_dmul
 2103 018e 0246     		mov	r2, r0
 2104 0190 0B46     		mov	r3, r1
 2105 0192 2046     		mov	r0, r4
 2106 0194 2946     		mov	r1, r5
 2107 0196 FFF7FEFF 		bl	__aeabi_dadd
 2108 019a 0246     		mov	r2, r0
 2109 019c 0B46     		mov	r3, r1
 2110 019e 1046     		mov	r0, r2
 2111 01a0 1946     		mov	r1, r3
 2112 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 2113 01a6 0346     		mov	r3, r0
 2114 01a8 9AB2     		uxth	r2, r3
 2115 01aa 204B     		ldr	r3, .L128+32
 2116 01ac 1A80     		strh	r2, [r3]	@ movhi
 465:.\main.c      ****     
 466:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 2117              		.loc 1 466 0
 2118 01ae 1F4B     		ldr	r3, .L128+32
 2119 01b0 1B88     		ldrh	r3, [r3]
 2120 01b2 1BB2     		sxth	r3, r3
 2121 01b4 002B     		cmp	r3, #0
 2122 01b6 02DA     		bge	.L124
 2123              		.loc 1 466 0 is_stmt 0 discriminator 1
 2124 01b8 1C4B     		ldr	r3, .L128+32
 2125 01ba 0022     		movs	r2, #0
 2126 01bc 1A80     		strh	r2, [r3]	@ movhi
 2127              	.L124:
 467:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 2128              		.loc 1 467 0 is_stmt 1
 2129 01be 194B     		ldr	r3, .L128+24
 2130 01c0 1B88     		ldrh	r3, [r3]
 2131 01c2 1BB2     		sxth	r3, r3
 2132 01c4 002B     		cmp	r3, #0
 2133 01c6 02DA     		bge	.L125
 2134              		.loc 1 467 0 is_stmt 0 discriminator 1
 2135 01c8 164B     		ldr	r3, .L128+24
 2136 01ca 0022     		movs	r2, #0
 2137 01cc 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 47


 2138              	.L125:
 468:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 2139              		.loc 1 468 0 is_stmt 1
 2140 01ce 174B     		ldr	r3, .L128+32
 2141 01d0 1B88     		ldrh	r3, [r3]
 2142 01d2 1BB2     		sxth	r3, r3
 2143 01d4 642B     		cmp	r3, #100
 2144 01d6 02DD     		ble	.L126
 2145              		.loc 1 468 0 is_stmt 0 discriminator 1
 2146 01d8 144B     		ldr	r3, .L128+32
 2147 01da 6422     		movs	r2, #100
 2148 01dc 1A80     		strh	r2, [r3]	@ movhi
 2149              	.L126:
 469:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2150              		.loc 1 469 0 is_stmt 1
 2151 01de 114B     		ldr	r3, .L128+24
 2152 01e0 1B88     		ldrh	r3, [r3]
 2153 01e2 1BB2     		sxth	r3, r3
 2154 01e4 642B     		cmp	r3, #100
 2155 01e6 02DD     		ble	.L127
 2156              		.loc 1 469 0 is_stmt 0 discriminator 1
 2157 01e8 0E4B     		ldr	r3, .L128+24
 2158 01ea 6422     		movs	r2, #100
 2159 01ec 1A80     		strh	r2, [r3]	@ movhi
 2160              	.L127:
 470:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2161              		.loc 1 470 0 is_stmt 1
 2162 01ee 0D4B     		ldr	r3, .L128+24
 2163 01f0 1B88     		ldrh	r3, [r3]
 2164 01f2 DBB2     		uxtb	r3, r3
 2165 01f4 1846     		mov	r0, r3
 2166 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 471:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2167              		.loc 1 471 0
 2168 01fa 0C4B     		ldr	r3, .L128+32
 2169 01fc 1B88     		ldrh	r3, [r3]
 2170 01fe DBB2     		uxtb	r3, r3
 2171 0200 1846     		mov	r0, r3
 2172 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2173              	.L120:
 472:.\main.c      **** }
 2174              		.loc 1 472 0
 2175 0206 2037     		adds	r7, r7, #32
 2176              		.cfi_def_cfa_offset 16
 2177 0208 BD46     		mov	sp, r7
 2178              		.cfi_def_cfa_register 13
 2179              		@ sp needed
 2180 020a B0BD     		pop	{r4, r5, r7, pc}
 2181              	.L129:
 2182              		.align	2
 2183              	.L128:
 2184 020c 00000000 		.word	flag_calc_wheelspeed
 2185 0210 00000000 		.word	quad_diff1
 2186 0214 00000000 		.word	quad_diff2
 2187 0218 0000F03F 		.word	1072693248
 2188 021c 00002040 		.word	1075838976
 2189 0220 00000000 		.word	leftSpeedLimit
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 48


 2190 0224 00000000 		.word	left_duty_cycle
 2191 0228 00000000 		.word	rightSpeedLimit
 2192 022c 00000000 		.word	right_duty_cycle
 2193              		.cfi_endproc
 2194              	.LFE90:
 2195              		.size	Quad_Dec_response, .-Quad_Dec_response
 2196              		.section	.text.trackLine,"ax",%progbits
 2197              		.align	2
 2198              		.global	trackLine
 2199              		.thumb
 2200              		.thumb_func
 2201              		.type	trackLine, %function
 2202              	trackLine:
 2203              	.LFB91:
 473:.\main.c      **** 
 474:.\main.c      **** void trackLine()
 475:.\main.c      **** {
 2204              		.loc 1 475 0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 8
 2207              		@ frame_needed = 1, uses_anonymous_args = 0
 2208 0000 80B5     		push	{r7, lr}
 2209              		.cfi_def_cfa_offset 8
 2210              		.cfi_offset 7, -8
 2211              		.cfi_offset 14, -4
 2212 0002 82B0     		sub	sp, sp, #8
 2213              		.cfi_def_cfa_offset 16
 2214 0004 00AF     		add	r7, sp, #0
 2215              		.cfi_def_cfa_register 7
 476:.\main.c      ****     //read the value of the three central-front sensors
 477:.\main.c      ****     
 478:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2216              		.loc 1 478 0
 2217 0006 FFF7FEFF 		bl	NLSens_out_Read
 2218 000a 0346     		mov	r3, r0
 2219 000c FB71     		strb	r3, [r7, #7]
 479:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2220              		.loc 1 479 0
 2221 000e FFF7FEFF 		bl	NRSens_out_Read
 2222 0012 0346     		mov	r3, r0
 2223 0014 BB71     		strb	r3, [r7, #6]
 480:.\main.c      ****     uint8 mid = MSens_out_Read();
 2224              		.loc 1 480 0
 2225 0016 FFF7FEFF 		bl	MSens_out_Read
 2226 001a 0346     		mov	r3, r0
 2227 001c 7B71     		strb	r3, [r7, #5]
 481:.\main.c      ****     //if only the left one, hard left
 482:.\main.c      ****     if(nl && !nr && !mid)
 2228              		.loc 1 482 0
 2229 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2230 0020 002B     		cmp	r3, #0
 2231 0022 0ED0     		beq	.L131
 2232              		.loc 1 482 0 is_stmt 0 discriminator 1
 2233 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2234 0026 002B     		cmp	r3, #0
 2235 0028 0BD1     		bne	.L131
 2236              		.loc 1 482 0 discriminator 2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 49


 2237 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2238 002c 002B     		cmp	r3, #0
 2239 002e 08D1     		bne	.L131
 483:.\main.c      ****     {
 484:.\main.c      ****         setSpeed(-10,15);
 2240              		.loc 1 484 0 is_stmt 1
 2241 0030 4FF00000 		mov	r0, #0
 2242 0034 2949     		ldr	r1, .L136
 2243 0036 4FF00002 		mov	r2, #0
 2244 003a 294B     		ldr	r3, .L136+4
 2245 003c FFF7FEFF 		bl	setSpeed
 2246 0040 48E0     		b	.L130
 2247              	.L131:
 485:.\main.c      ****     }
 486:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2248              		.loc 1 486 0
 2249 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2250 0044 002B     		cmp	r3, #0
 2251 0046 0FD0     		beq	.L133
 2252              		.loc 1 486 0 is_stmt 0 discriminator 1
 2253 0048 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2254 004a 002B     		cmp	r3, #0
 2255 004c 0CD0     		beq	.L133
 2256              		.loc 1 486 0 discriminator 2
 2257 004e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2258 0050 002B     		cmp	r3, #0
 2259 0052 09D1     		bne	.L133
 487:.\main.c      ****     {
 488:.\main.c      ****         setSpeed(0,15);
 2260              		.loc 1 488 0 is_stmt 1
 2261 0054 4FF00000 		mov	r0, #0
 2262 0058 4FF00001 		mov	r1, #0
 2263 005c 4FF00002 		mov	r2, #0
 2264 0060 1F4B     		ldr	r3, .L136+4
 2265 0062 FFF7FEFF 		bl	setSpeed
 2266 0066 35E0     		b	.L130
 2267              	.L133:
 489:.\main.c      ****     }
 490:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2268              		.loc 1 490 0
 2269 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2270 006a 002B     		cmp	r3, #0
 2271 006c 0FD0     		beq	.L134
 2272              		.loc 1 490 0 is_stmt 0 discriminator 1
 2273 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2274 0070 002B     		cmp	r3, #0
 2275 0072 0CD0     		beq	.L134
 2276              		.loc 1 490 0 discriminator 2
 2277 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2278 0076 002B     		cmp	r3, #0
 2279 0078 09D1     		bne	.L134
 491:.\main.c      ****     {
 492:.\main.c      ****         setSpeed(15,0);
 2280              		.loc 1 492 0 is_stmt 1
 2281 007a 4FF00000 		mov	r0, #0
 2282 007e 1849     		ldr	r1, .L136+4
 2283 0080 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 50


 2284 0084 4FF00003 		mov	r3, #0
 2285 0088 FFF7FEFF 		bl	setSpeed
 2286 008c 22E0     		b	.L130
 2287              	.L134:
 493:.\main.c      ****     }
 494:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2288              		.loc 1 494 0
 2289 008e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2290 0090 002B     		cmp	r3, #0
 2291 0092 0ED0     		beq	.L135
 2292              		.loc 1 494 0 is_stmt 0 discriminator 1
 2293 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2294 0096 002B     		cmp	r3, #0
 2295 0098 0BD1     		bne	.L135
 2296              		.loc 1 494 0 discriminator 2
 2297 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2298 009c 002B     		cmp	r3, #0
 2299 009e 08D1     		bne	.L135
 495:.\main.c      ****     {
 496:.\main.c      ****         setSpeed(15,-10);
 2300              		.loc 1 496 0 is_stmt 1
 2301 00a0 4FF00000 		mov	r0, #0
 2302 00a4 0E49     		ldr	r1, .L136+4
 2303 00a6 4FF00002 		mov	r2, #0
 2304 00aa 0C4B     		ldr	r3, .L136
 2305 00ac FFF7FEFF 		bl	setSpeed
 2306 00b0 10E0     		b	.L130
 2307              	.L135:
 497:.\main.c      ****     }
 498:.\main.c      ****     else if (mid && !nr && !nl)
 2308              		.loc 1 498 0
 2309 00b2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2310 00b4 002B     		cmp	r3, #0
 2311 00b6 0DD0     		beq	.L130
 2312              		.loc 1 498 0 is_stmt 0 discriminator 1
 2313 00b8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2314 00ba 002B     		cmp	r3, #0
 2315 00bc 0AD1     		bne	.L130
 2316              		.loc 1 498 0 discriminator 2
 2317 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2318 00c0 002B     		cmp	r3, #0
 2319 00c2 07D1     		bne	.L130
 499:.\main.c      ****     {
 500:.\main.c      ****         setSpeed(10,10);
 2320              		.loc 1 500 0 is_stmt 1
 2321 00c4 4FF00000 		mov	r0, #0
 2322 00c8 0649     		ldr	r1, .L136+8
 2323 00ca 4FF00002 		mov	r2, #0
 2324 00ce 054B     		ldr	r3, .L136+8
 2325 00d0 FFF7FEFF 		bl	setSpeed
 2326              	.L130:
 501:.\main.c      ****     }
 502:.\main.c      ****    // else if (!mid && !nr && !nl)
 503:.\main.c      ****     //{
 504:.\main.c      ****         //setSpeed(0,0);
 505:.\main.c      ****     //}
 506:.\main.c      **** }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 51


 2327              		.loc 1 506 0
 2328 00d4 0837     		adds	r7, r7, #8
 2329              		.cfi_def_cfa_offset 8
 2330 00d6 BD46     		mov	sp, r7
 2331              		.cfi_def_cfa_register 13
 2332              		@ sp needed
 2333 00d8 80BD     		pop	{r7, pc}
 2334              	.L137:
 2335 00da 00BF     		.align	2
 2336              	.L136:
 2337 00dc 000024C0 		.word	-1071382528
 2338 00e0 00002E40 		.word	1076756480
 2339 00e4 00002440 		.word	1076101120
 2340              		.cfi_endproc
 2341              	.LFE91:
 2342              		.size	trackLine, .-trackLine
 2343              		.section	.text.trackLineSoft,"ax",%progbits
 2344              		.align	2
 2345              		.global	trackLineSoft
 2346              		.thumb
 2347              		.thumb_func
 2348              		.type	trackLineSoft, %function
 2349              	trackLineSoft:
 2350              	.LFB92:
 507:.\main.c      **** 
 508:.\main.c      **** void trackLineSoft()
 509:.\main.c      **** {
 2351              		.loc 1 509 0
 2352              		.cfi_startproc
 2353              		@ args = 0, pretend = 0, frame = 8
 2354              		@ frame_needed = 1, uses_anonymous_args = 0
 2355 0000 80B5     		push	{r7, lr}
 2356              		.cfi_def_cfa_offset 8
 2357              		.cfi_offset 7, -8
 2358              		.cfi_offset 14, -4
 2359 0002 82B0     		sub	sp, sp, #8
 2360              		.cfi_def_cfa_offset 16
 2361 0004 00AF     		add	r7, sp, #0
 2362              		.cfi_def_cfa_register 7
 510:.\main.c      ****     //read the value of the three central-front sensors
 511:.\main.c      ****     
 512:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2363              		.loc 1 512 0
 2364 0006 FFF7FEFF 		bl	NLSens_out_Read
 2365 000a 0346     		mov	r3, r0
 2366 000c FB71     		strb	r3, [r7, #7]
 513:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2367              		.loc 1 513 0
 2368 000e FFF7FEFF 		bl	NRSens_out_Read
 2369 0012 0346     		mov	r3, r0
 2370 0014 BB71     		strb	r3, [r7, #6]
 514:.\main.c      ****     uint8 mid = MSens_out_Read();
 2371              		.loc 1 514 0
 2372 0016 FFF7FEFF 		bl	MSens_out_Read
 2373 001a 0346     		mov	r3, r0
 2374 001c 7B71     		strb	r3, [r7, #5]
 515:.\main.c      ****     //if only the left one, hard left
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 52


 516:.\main.c      ****     if(nl && !nr && !mid)
 2375              		.loc 1 516 0
 2376 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2377 0020 002B     		cmp	r3, #0
 2378 0022 0ED0     		beq	.L139
 2379              		.loc 1 516 0 is_stmt 0 discriminator 1
 2380 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2381 0026 002B     		cmp	r3, #0
 2382 0028 0BD1     		bne	.L139
 2383              		.loc 1 516 0 discriminator 2
 2384 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2385 002c 002B     		cmp	r3, #0
 2386 002e 08D1     		bne	.L139
 517:.\main.c      ****     {
 518:.\main.c      ****         setSpeed(-15,15);
 2387              		.loc 1 518 0 is_stmt 1
 2388 0030 4FF00000 		mov	r0, #0
 2389 0034 2949     		ldr	r1, .L144
 2390 0036 4FF00002 		mov	r2, #0
 2391 003a 294B     		ldr	r3, .L144+4
 2392 003c FFF7FEFF 		bl	setSpeed
 2393 0040 48E0     		b	.L138
 2394              	.L139:
 519:.\main.c      ****     }
 520:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2395              		.loc 1 520 0
 2396 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2397 0044 002B     		cmp	r3, #0
 2398 0046 0FD0     		beq	.L141
 2399              		.loc 1 520 0 is_stmt 0 discriminator 1
 2400 0048 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2401 004a 002B     		cmp	r3, #0
 2402 004c 0CD0     		beq	.L141
 2403              		.loc 1 520 0 discriminator 2
 2404 004e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2405 0050 002B     		cmp	r3, #0
 2406 0052 09D1     		bne	.L141
 521:.\main.c      ****     {
 522:.\main.c      ****         setSpeed(0,15);
 2407              		.loc 1 522 0 is_stmt 1
 2408 0054 4FF00000 		mov	r0, #0
 2409 0058 4FF00001 		mov	r1, #0
 2410 005c 4FF00002 		mov	r2, #0
 2411 0060 1F4B     		ldr	r3, .L144+4
 2412 0062 FFF7FEFF 		bl	setSpeed
 2413 0066 35E0     		b	.L138
 2414              	.L141:
 523:.\main.c      ****     }
 524:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2415              		.loc 1 524 0
 2416 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2417 006a 002B     		cmp	r3, #0
 2418 006c 0FD0     		beq	.L142
 2419              		.loc 1 524 0 is_stmt 0 discriminator 1
 2420 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2421 0070 002B     		cmp	r3, #0
 2422 0072 0CD0     		beq	.L142
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 53


 2423              		.loc 1 524 0 discriminator 2
 2424 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2425 0076 002B     		cmp	r3, #0
 2426 0078 09D1     		bne	.L142
 525:.\main.c      ****     {
 526:.\main.c      ****         setSpeed(15,0);
 2427              		.loc 1 526 0 is_stmt 1
 2428 007a 4FF00000 		mov	r0, #0
 2429 007e 1849     		ldr	r1, .L144+4
 2430 0080 4FF00002 		mov	r2, #0
 2431 0084 4FF00003 		mov	r3, #0
 2432 0088 FFF7FEFF 		bl	setSpeed
 2433 008c 22E0     		b	.L138
 2434              	.L142:
 527:.\main.c      ****     }
 528:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2435              		.loc 1 528 0
 2436 008e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2437 0090 002B     		cmp	r3, #0
 2438 0092 0ED0     		beq	.L143
 2439              		.loc 1 528 0 is_stmt 0 discriminator 1
 2440 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2441 0096 002B     		cmp	r3, #0
 2442 0098 0BD1     		bne	.L143
 2443              		.loc 1 528 0 discriminator 2
 2444 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2445 009c 002B     		cmp	r3, #0
 2446 009e 08D1     		bne	.L143
 529:.\main.c      ****     {
 530:.\main.c      ****         setSpeed(15,-15);
 2447              		.loc 1 530 0 is_stmt 1
 2448 00a0 4FF00000 		mov	r0, #0
 2449 00a4 0E49     		ldr	r1, .L144+4
 2450 00a6 4FF00002 		mov	r2, #0
 2451 00aa 0C4B     		ldr	r3, .L144
 2452 00ac FFF7FEFF 		bl	setSpeed
 2453 00b0 10E0     		b	.L138
 2454              	.L143:
 531:.\main.c      ****     }
 532:.\main.c      ****     else if (mid && !nr && !nl)
 2455              		.loc 1 532 0
 2456 00b2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2457 00b4 002B     		cmp	r3, #0
 2458 00b6 0DD0     		beq	.L138
 2459              		.loc 1 532 0 is_stmt 0 discriminator 1
 2460 00b8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2461 00ba 002B     		cmp	r3, #0
 2462 00bc 0AD1     		bne	.L138
 2463              		.loc 1 532 0 discriminator 2
 2464 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2465 00c0 002B     		cmp	r3, #0
 2466 00c2 07D1     		bne	.L138
 533:.\main.c      ****     {
 534:.\main.c      ****         setSpeed(10,10);
 2467              		.loc 1 534 0 is_stmt 1
 2468 00c4 4FF00000 		mov	r0, #0
 2469 00c8 0649     		ldr	r1, .L144+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 54


 2470 00ca 4FF00002 		mov	r2, #0
 2471 00ce 054B     		ldr	r3, .L144+8
 2472 00d0 FFF7FEFF 		bl	setSpeed
 2473              	.L138:
 535:.\main.c      ****     }
 536:.\main.c      ****    // else if (!mid && !nr && !nl)
 537:.\main.c      ****     //{
 538:.\main.c      ****         //setSpeed(0,0);
 539:.\main.c      ****     //}
 540:.\main.c      **** }
 2474              		.loc 1 540 0
 2475 00d4 0837     		adds	r7, r7, #8
 2476              		.cfi_def_cfa_offset 8
 2477 00d6 BD46     		mov	sp, r7
 2478              		.cfi_def_cfa_register 13
 2479              		@ sp needed
 2480 00d8 80BD     		pop	{r7, pc}
 2481              	.L145:
 2482 00da 00BF     		.align	2
 2483              	.L144:
 2484 00dc 00002EC0 		.word	-1070727168
 2485 00e0 00002E40 		.word	1076756480
 2486 00e4 00002440 		.word	1076101120
 2487              		.cfi_endproc
 2488              	.LFE92:
 2489              		.size	trackLineSoft, .-trackLineSoft
 2490              		.section	.text.trackLineU,"ax",%progbits
 2491              		.align	2
 2492              		.global	trackLineU
 2493              		.thumb
 2494              		.thumb_func
 2495              		.type	trackLineU, %function
 2496              	trackLineU:
 2497              	.LFB93:
 541:.\main.c      **** 
 542:.\main.c      **** void trackLineU()
 543:.\main.c      **** {
 2498              		.loc 1 543 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 8
 2501              		@ frame_needed = 1, uses_anonymous_args = 0
 2502 0000 80B5     		push	{r7, lr}
 2503              		.cfi_def_cfa_offset 8
 2504              		.cfi_offset 7, -8
 2505              		.cfi_offset 14, -4
 2506 0002 82B0     		sub	sp, sp, #8
 2507              		.cfi_def_cfa_offset 16
 2508 0004 00AF     		add	r7, sp, #0
 2509              		.cfi_def_cfa_register 7
 544:.\main.c      ****     //read the value of the three central-front sensors
 545:.\main.c      ****     
 546:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2510              		.loc 1 546 0
 2511 0006 FFF7FEFF 		bl	NLSens_out_Read
 2512 000a 0346     		mov	r3, r0
 2513 000c FB71     		strb	r3, [r7, #7]
 547:.\main.c      ****     uint8 fl = FLSens_out_Read();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 55


 2514              		.loc 1 547 0
 2515 000e FFF7FEFF 		bl	FLSens_out_Read
 2516 0012 0346     		mov	r3, r0
 2517 0014 BB71     		strb	r3, [r7, #6]
 548:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2518              		.loc 1 548 0
 2519 0016 FFF7FEFF 		bl	NRSens_out_Read
 2520 001a 0346     		mov	r3, r0
 2521 001c 7B71     		strb	r3, [r7, #5]
 549:.\main.c      ****     uint8 fr = FRSens_out_Read();
 2522              		.loc 1 549 0
 2523 001e FFF7FEFF 		bl	FRSens_out_Read
 2524 0022 0346     		mov	r3, r0
 2525 0024 3B71     		strb	r3, [r7, #4]
 550:.\main.c      ****     uint8 mid = MSens_out_Read();
 2526              		.loc 1 550 0
 2527 0026 FFF7FEFF 		bl	MSens_out_Read
 2528 002a 0346     		mov	r3, r0
 2529 002c FB70     		strb	r3, [r7, #3]
 551:.\main.c      ****     if (fl && mid && fr) // T intersection
 2530              		.loc 1 551 0
 2531 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2532 0030 002B     		cmp	r3, #0
 2533 0032 06D0     		beq	.L147
 2534              		.loc 1 551 0 is_stmt 0 discriminator 1
 2535 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2536 0036 002B     		cmp	r3, #0
 2537 0038 03D0     		beq	.L147
 2538              		.loc 1 551 0 discriminator 2
 2539 003a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2540 003c 002B     		cmp	r3, #0
 2541 003e 00D0     		beq	.L147
 2542              		.loc 1 551 0
 2543 0040 78E0     		b	.L146
 2544              	.L147:
 552:.\main.c      ****     {
 553:.\main.c      ****         // not implemented
 554:.\main.c      ****     }
 555:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 2545              		.loc 1 555 0 is_stmt 1
 2546 0042 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2547 0044 002B     		cmp	r3, #0
 2548 0046 0BD0     		beq	.L149
 2549              		.loc 1 555 0 is_stmt 0 discriminator 1
 2550 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2551 004a 002B     		cmp	r3, #0
 2552 004c 08D0     		beq	.L149
 556:.\main.c      ****     {
 557:.\main.c      ****         setSpeed(15, 15);
 2553              		.loc 1 557 0 is_stmt 1
 2554 004e 4FF00000 		mov	r0, #0
 2555 0052 3A49     		ldr	r1, .L155
 2556 0054 4FF00002 		mov	r2, #0
 2557 0058 384B     		ldr	r3, .L155
 2558 005a FFF7FEFF 		bl	setSpeed
 2559 005e 69E0     		b	.L146
 2560              	.L149:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 56


 558:.\main.c      ****     }
 559:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 2561              		.loc 1 559 0
 2562 0060 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2563 0062 002B     		cmp	r3, #0
 2564 0064 0BD0     		beq	.L150
 2565              		.loc 1 559 0 is_stmt 0 discriminator 1
 2566 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2567 0068 002B     		cmp	r3, #0
 2568 006a 08D0     		beq	.L150
 560:.\main.c      ****     {
 561:.\main.c      ****         setSpeed(15, 15);
 2569              		.loc 1 561 0 is_stmt 1
 2570 006c 4FF00000 		mov	r0, #0
 2571 0070 3249     		ldr	r1, .L155
 2572 0072 4FF00002 		mov	r2, #0
 2573 0076 314B     		ldr	r3, .L155
 2574 0078 FFF7FEFF 		bl	setSpeed
 2575 007c 5AE0     		b	.L146
 2576              	.L150:
 562:.\main.c      ****     }
 563:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 2577              		.loc 1 563 0
 2578 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2579 0080 002B     		cmp	r3, #0
 2580 0082 0ED0     		beq	.L151
 2581              		.loc 1 563 0 is_stmt 0 discriminator 1
 2582 0084 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2583 0086 002B     		cmp	r3, #0
 2584 0088 0BD1     		bne	.L151
 2585              		.loc 1 563 0 discriminator 2
 2586 008a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2587 008c 002B     		cmp	r3, #0
 2588 008e 08D1     		bne	.L151
 564:.\main.c      ****     {
 565:.\main.c      ****         setSpeed(-10,15);
 2589              		.loc 1 565 0 is_stmt 1
 2590 0090 4FF00000 		mov	r0, #0
 2591 0094 2A49     		ldr	r1, .L155+4
 2592 0096 4FF00002 		mov	r2, #0
 2593 009a 284B     		ldr	r3, .L155
 2594 009c FFF7FEFF 		bl	setSpeed
 2595 00a0 48E0     		b	.L146
 2596              	.L151:
 566:.\main.c      ****     }
 567:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2597              		.loc 1 567 0
 2598 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2599 00a4 002B     		cmp	r3, #0
 2600 00a6 0FD0     		beq	.L152
 2601              		.loc 1 567 0 is_stmt 0 discriminator 1
 2602 00a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2603 00aa 002B     		cmp	r3, #0
 2604 00ac 0CD0     		beq	.L152
 2605              		.loc 1 567 0 discriminator 2
 2606 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2607 00b0 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 57


 2608 00b2 09D1     		bne	.L152
 568:.\main.c      ****     {
 569:.\main.c      ****         setSpeed(0,15);
 2609              		.loc 1 569 0 is_stmt 1
 2610 00b4 4FF00000 		mov	r0, #0
 2611 00b8 4FF00001 		mov	r1, #0
 2612 00bc 4FF00002 		mov	r2, #0
 2613 00c0 1E4B     		ldr	r3, .L155
 2614 00c2 FFF7FEFF 		bl	setSpeed
 2615 00c6 35E0     		b	.L146
 2616              	.L152:
 570:.\main.c      ****     }
 571:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2617              		.loc 1 571 0
 2618 00c8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2619 00ca 002B     		cmp	r3, #0
 2620 00cc 0FD0     		beq	.L153
 2621              		.loc 1 571 0 is_stmt 0 discriminator 1
 2622 00ce FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2623 00d0 002B     		cmp	r3, #0
 2624 00d2 0CD0     		beq	.L153
 2625              		.loc 1 571 0 discriminator 2
 2626 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2627 00d6 002B     		cmp	r3, #0
 2628 00d8 09D1     		bne	.L153
 572:.\main.c      ****     {
 573:.\main.c      ****         setSpeed(15,0);
 2629              		.loc 1 573 0 is_stmt 1
 2630 00da 4FF00000 		mov	r0, #0
 2631 00de 1749     		ldr	r1, .L155
 2632 00e0 4FF00002 		mov	r2, #0
 2633 00e4 4FF00003 		mov	r3, #0
 2634 00e8 FFF7FEFF 		bl	setSpeed
 2635 00ec 22E0     		b	.L146
 2636              	.L153:
 574:.\main.c      ****     }
 575:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2637              		.loc 1 575 0
 2638 00ee 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2639 00f0 002B     		cmp	r3, #0
 2640 00f2 0ED0     		beq	.L154
 2641              		.loc 1 575 0 is_stmt 0 discriminator 1
 2642 00f4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2643 00f6 002B     		cmp	r3, #0
 2644 00f8 0BD1     		bne	.L154
 2645              		.loc 1 575 0 discriminator 2
 2646 00fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2647 00fc 002B     		cmp	r3, #0
 2648 00fe 08D1     		bne	.L154
 576:.\main.c      ****     {
 577:.\main.c      ****         setSpeed(15,-10);
 2649              		.loc 1 577 0 is_stmt 1
 2650 0100 4FF00000 		mov	r0, #0
 2651 0104 0D49     		ldr	r1, .L155
 2652 0106 4FF00002 		mov	r2, #0
 2653 010a 0D4B     		ldr	r3, .L155+4
 2654 010c FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 58


 2655 0110 10E0     		b	.L146
 2656              	.L154:
 578:.\main.c      ****     }
 579:.\main.c      ****     else if (mid && !nr && !nl)
 2657              		.loc 1 579 0
 2658 0112 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2659 0114 002B     		cmp	r3, #0
 2660 0116 0DD0     		beq	.L146
 2661              		.loc 1 579 0 is_stmt 0 discriminator 1
 2662 0118 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2663 011a 002B     		cmp	r3, #0
 2664 011c 0AD1     		bne	.L146
 2665              		.loc 1 579 0 discriminator 2
 2666 011e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2667 0120 002B     		cmp	r3, #0
 2668 0122 07D1     		bne	.L146
 580:.\main.c      ****     {
 581:.\main.c      ****         setSpeed(10,10);
 2669              		.loc 1 581 0 is_stmt 1
 2670 0124 4FF00000 		mov	r0, #0
 2671 0128 0649     		ldr	r1, .L155+8
 2672 012a 4FF00002 		mov	r2, #0
 2673 012e 054B     		ldr	r3, .L155+8
 2674 0130 FFF7FEFF 		bl	setSpeed
 2675              	.L146:
 582:.\main.c      ****     }
 583:.\main.c      ****    // else if (!mid && !nr && !nl)
 584:.\main.c      ****     //{
 585:.\main.c      ****         //setSpeed(0,0);
 586:.\main.c      ****     //}
 587:.\main.c      ****    
 588:.\main.c      **** 
 589:.\main.c      **** }
 2676              		.loc 1 589 0
 2677 0134 0837     		adds	r7, r7, #8
 2678              		.cfi_def_cfa_offset 8
 2679 0136 BD46     		mov	sp, r7
 2680              		.cfi_def_cfa_register 13
 2681              		@ sp needed
 2682 0138 80BD     		pop	{r7, pc}
 2683              	.L156:
 2684 013a 00BF     		.align	2
 2685              	.L155:
 2686 013c 00002E40 		.word	1076756480
 2687 0140 000024C0 		.word	-1071382528
 2688 0144 00002440 		.word	1076101120
 2689              		.cfi_endproc
 2690              	.LFE93:
 2691              		.size	trackLineU, .-trackLineU
 2692              		.global	__aeabi_i2f
 2693              		.global	__aeabi_fmul
 2694              		.global	__aeabi_fadd
 2695              		.global	__aeabi_f2iz
 2696              		.section	.rodata
 2697 003e 0000     		.align	2
 2698              	.LC4:
 2699 0040 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 59


 2699      65727920 
 2699      566F6C74 
 2699      6167653A 
 2699      2025646D 
 2700              		.section	.text.print_ADC,"ax",%progbits
 2701              		.align	2
 2702              		.global	print_ADC
 2703              		.thumb
 2704              		.thumb_func
 2705              		.type	print_ADC, %function
 2706              	print_ADC:
 2707              	.LFB94:
 590:.\main.c      **** 
 591:.\main.c      **** void print_ADC()
 592:.\main.c      **** {
 2708              		.loc 1 592 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 24
 2711              		@ frame_needed = 1, uses_anonymous_args = 0
 2712 0000 80B5     		push	{r7, lr}
 2713              		.cfi_def_cfa_offset 8
 2714              		.cfi_offset 7, -8
 2715              		.cfi_offset 14, -4
 2716 0002 86B0     		sub	sp, sp, #24
 2717              		.cfi_def_cfa_offset 32
 2718 0004 00AF     		add	r7, sp, #0
 2719              		.cfi_def_cfa_register 7
 593:.\main.c      ****    //usbPutString("HII\n");
 594:.\main.c      ****     if(flag_receive_ADC == 1)
 2720              		.loc 1 594 0
 2721 0006 274B     		ldr	r3, .L160
 2722 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 000a 012B     		cmp	r3, #1
 2724 000c 46D1     		bne	.L157
 2725              	.LBB5:
 595:.\main.c      ****     {
 596:.\main.c      ****         //usbPutString("AAA\r\n");
 597:.\main.c      ****         flag_receive_ADC = 0;
 2726              		.loc 1 597 0
 2727 000e 254B     		ldr	r3, .L160
 2728 0010 0022     		movs	r2, #0
 2729 0012 1A70     		strb	r2, [r3]
 598:.\main.c      ****         
 599:.\main.c      ****        // int8 channel = ADC_
 600:.\main.c      ****         float scalingFactor = 0.972;
 2730              		.loc 1 600 0
 2731 0014 244B     		ldr	r3, .L160+4
 2732 0016 7B61     		str	r3, [r7, #20]	@ float
 601:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 2733              		.loc 1 601 0
 2734 0018 244B     		ldr	r3, .L160+8
 2735 001a 1B88     		ldrh	r3, [r3]
 2736 001c 1BB2     		sxth	r3, r3
 2737 001e 41F28832 		movw	r2, #5000
 2738 0022 02FB03F3 		mul	r3, r2, r3
 2739 0026 002B     		cmp	r3, #0
 2740 0028 01DA     		bge	.L159
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 60


 2741 002a 03F6FF73 		addw	r3, r3, #4095
 2742              	.L159:
 2743 002e 1B13     		asrs	r3, r3, #12
 2744 0030 1846     		mov	r0, r3
 2745 0032 FFF7FEFF 		bl	__aeabi_i2f
 2746 0036 0346     		mov	r3, r0
 2747 0038 1846     		mov	r0, r3
 2748 003a 7969     		ldr	r1, [r7, #20]	@ float
 2749 003c FFF7FEFF 		bl	__aeabi_fmul
 2750 0040 0346     		mov	r3, r0
 2751 0042 1846     		mov	r0, r3
 2752 0044 1946     		mov	r1, r3
 2753 0046 FFF7FEFF 		bl	__aeabi_fadd
 2754 004a 0346     		mov	r3, r0
 2755 004c 1846     		mov	r0, r3
 2756 004e FFF7FEFF 		bl	__aeabi_f2iz
 2757 0052 0346     		mov	r3, r0
 2758 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 602:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 2759              		.loc 1 602 0
 2760 0056 B7F91220 		ldrsh	r2, [r7, #18]
 2761 005a 154B     		ldr	r3, .L160+12
 2762 005c 1B88     		ldrh	r3, [r3]
 2763 005e 1BB2     		sxth	r3, r3
 2764 0060 1A44     		add	r2, r2, r3
 2765 0062 144B     		ldr	r3, .L160+16
 2766 0064 1B88     		ldrh	r3, [r3]
 2767 0066 1BB2     		sxth	r3, r3
 2768 0068 1344     		add	r3, r3, r2
 2769 006a 134A     		ldr	r2, .L160+20
 2770 006c 82FB0312 		smull	r1, r2, r2, r3
 2771 0070 DB17     		asrs	r3, r3, #31
 2772 0072 D31A     		subs	r3, r2, r3
 2773 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 603:.\main.c      ****         prevVoltage2 = prevVoltage;
 2774              		.loc 1 603 0
 2775 0076 0E4B     		ldr	r3, .L160+12
 2776 0078 1A88     		ldrh	r2, [r3]
 2777 007a 0E4B     		ldr	r3, .L160+16
 2778 007c 1A80     		strh	r2, [r3]	@ movhi
 604:.\main.c      ****         prevVoltage = converted_val;
 2779              		.loc 1 604 0
 2780 007e 0C4A     		ldr	r2, .L160+12
 2781 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 2782 0082 1380     		strh	r3, [r2]	@ movhi
 605:.\main.c      ****         
 606:.\main.c      ****         char result_str[16];
 607:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 2783              		.loc 1 607 0
 2784 0084 B7F91230 		ldrsh	r3, [r7, #18]
 2785 0088 3A46     		mov	r2, r7
 2786 008a 1046     		mov	r0, r2
 2787 008c 0B49     		ldr	r1, .L160+24
 2788 008e 1A46     		mov	r2, r3
 2789 0090 FFF7FEFF 		bl	sprintf
 608:.\main.c      ****         
 609:.\main.c      ****         usbPutString(result_str);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 61


 2790              		.loc 1 609 0
 2791 0094 3B46     		mov	r3, r7
 2792 0096 1846     		mov	r0, r3
 2793 0098 FFF7FEFF 		bl	usbPutString
 2794              	.L157:
 2795              	.LBE5:
 610:.\main.c      ****     }
 611:.\main.c      **** }
 2796              		.loc 1 611 0
 2797 009c 1837     		adds	r7, r7, #24
 2798              		.cfi_def_cfa_offset 8
 2799 009e BD46     		mov	sp, r7
 2800              		.cfi_def_cfa_register 13
 2801              		@ sp needed
 2802 00a0 80BD     		pop	{r7, pc}
 2803              	.L161:
 2804 00a2 00BF     		.align	2
 2805              	.L160:
 2806 00a4 00000000 		.word	flag_receive_ADC
 2807 00a8 FED4783F 		.word	1064883454
 2808 00ac 00000000 		.word	adc_result
 2809 00b0 00000000 		.word	prevVoltage
 2810 00b4 00000000 		.word	prevVoltage2
 2811 00b8 56555555 		.word	1431655766
 2812 00bc 40000000 		.word	.LC4
 2813              		.cfi_endproc
 2814              	.LFE94:
 2815              		.size	print_ADC, .-print_ADC
 2816              		.section	.rodata
 2817              		.align	2
 2818              	.LC5:
 2819 0058 52535349 		.ascii	"RSSI:\000"
 2819      3A00
 2820 005e 0000     		.align	2
 2821              	.LC6:
 2822 0060 25640D0A 		.ascii	"%d\015\012\000"
 2822      00
 2823 0065 000000   		.align	2
 2824              	.LC7:
 2825 0068 726F626F 		.ascii	"robot_x:\000"
 2825      745F783A 
 2825      00
 2826 0071 000000   		.align	2
 2827              	.LC8:
 2828 0074 726F626F 		.ascii	"robot_y:\000"
 2828      745F793A 
 2828      00
 2829 007d 000000   		.align	2
 2830              	.LC9:
 2831 0080 726F626F 		.ascii	"robot_dir:\000"
 2831      745F6469 
 2831      723A00
 2832 008b 00       		.section	.text.print_RF,"ax",%progbits
 2833              		.align	2
 2834              		.global	print_RF
 2835              		.thumb
 2836              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 62


 2837              		.type	print_RF, %function
 2838              	print_RF:
 2839              	.LFB95:
 612:.\main.c      **** 
 613:.\main.c      **** void print_RF()
 614:.\main.c      **** {
 2840              		.loc 1 614 0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 16
 2843              		@ frame_needed = 1, uses_anonymous_args = 0
 2844 0000 80B5     		push	{r7, lr}
 2845              		.cfi_def_cfa_offset 8
 2846              		.cfi_offset 7, -8
 2847              		.cfi_offset 14, -4
 2848 0002 84B0     		sub	sp, sp, #16
 2849              		.cfi_def_cfa_offset 24
 2850 0004 00AF     		add	r7, sp, #0
 2851              		.cfi_def_cfa_register 7
 615:.\main.c      ****     if(flag_print_rf == 1)
 2852              		.loc 1 615 0
 2853 0006 254B     		ldr	r3, .L164
 2854 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2855 000a 012B     		cmp	r3, #1
 2856 000c 42D1     		bne	.L162
 2857              	.LBB6:
 616:.\main.c      ****     {
 617:.\main.c      ****         char printString[16];
 618:.\main.c      ****         flag_print_rf = 0;
 2858              		.loc 1 618 0
 2859 000e 234B     		ldr	r3, .L164
 2860 0010 0022     		movs	r2, #0
 2861 0012 1A70     		strb	r2, [r3]
 619:.\main.c      ****         usbPutString("RSSI:");
 2862              		.loc 1 619 0
 2863 0014 2248     		ldr	r0, .L164+4
 2864 0016 FFF7FEFF 		bl	usbPutString
 620:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 2865              		.loc 1 620 0
 2866 001a 224B     		ldr	r3, .L164+8
 2867 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 001e 5BB2     		sxtb	r3, r3
 2869 0020 3A46     		mov	r2, r7
 2870 0022 1046     		mov	r0, r2
 2871 0024 2049     		ldr	r1, .L164+12
 2872 0026 1A46     		mov	r2, r3
 2873 0028 FFF7FEFF 		bl	sprintf
 621:.\main.c      ****         usbPutString(printString);
 2874              		.loc 1 621 0
 2875 002c 3B46     		mov	r3, r7
 2876 002e 1846     		mov	r0, r3
 2877 0030 FFF7FEFF 		bl	usbPutString
 622:.\main.c      ****         usbPutString("robot_x:");
 2878              		.loc 1 622 0
 2879 0034 1D48     		ldr	r0, .L164+16
 2880 0036 FFF7FEFF 		bl	usbPutString
 623:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 2881              		.loc 1 623 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 63


 2882 003a 1A4B     		ldr	r3, .L164+8
 2883 003c 5B88     		ldrh	r3, [r3, #2]
 2884 003e 1BB2     		sxth	r3, r3
 2885 0040 3A46     		mov	r2, r7
 2886 0042 1046     		mov	r0, r2
 2887 0044 1849     		ldr	r1, .L164+12
 2888 0046 1A46     		mov	r2, r3
 2889 0048 FFF7FEFF 		bl	sprintf
 624:.\main.c      ****         usbPutString(printString);
 2890              		.loc 1 624 0
 2891 004c 3B46     		mov	r3, r7
 2892 004e 1846     		mov	r0, r3
 2893 0050 FFF7FEFF 		bl	usbPutString
 625:.\main.c      ****         usbPutString("robot_y:");
 2894              		.loc 1 625 0
 2895 0054 1648     		ldr	r0, .L164+20
 2896 0056 FFF7FEFF 		bl	usbPutString
 626:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 2897              		.loc 1 626 0
 2898 005a 124B     		ldr	r3, .L164+8
 2899 005c 9B88     		ldrh	r3, [r3, #4]
 2900 005e 1BB2     		sxth	r3, r3
 2901 0060 3A46     		mov	r2, r7
 2902 0062 1046     		mov	r0, r2
 2903 0064 1049     		ldr	r1, .L164+12
 2904 0066 1A46     		mov	r2, r3
 2905 0068 FFF7FEFF 		bl	sprintf
 627:.\main.c      ****         usbPutString(printString);
 2906              		.loc 1 627 0
 2907 006c 3B46     		mov	r3, r7
 2908 006e 1846     		mov	r0, r3
 2909 0070 FFF7FEFF 		bl	usbPutString
 628:.\main.c      ****         usbPutString("robot_dir:");
 2910              		.loc 1 628 0
 2911 0074 0F48     		ldr	r0, .L164+24
 2912 0076 FFF7FEFF 		bl	usbPutString
 629:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 2913              		.loc 1 629 0
 2914 007a 0A4B     		ldr	r3, .L164+8
 2915 007c DB88     		ldrh	r3, [r3, #6]
 2916 007e 1BB2     		sxth	r3, r3
 2917 0080 3A46     		mov	r2, r7
 2918 0082 1046     		mov	r0, r2
 2919 0084 0849     		ldr	r1, .L164+12
 2920 0086 1A46     		mov	r2, r3
 2921 0088 FFF7FEFF 		bl	sprintf
 630:.\main.c      ****         usbPutString(printString);
 2922              		.loc 1 630 0
 2923 008c 3B46     		mov	r3, r7
 2924 008e 1846     		mov	r0, r3
 2925 0090 FFF7FEFF 		bl	usbPutString
 2926              	.L162:
 2927              	.LBE6:
 631:.\main.c      ****     }
 632:.\main.c      **** }
 2928              		.loc 1 632 0
 2929 0094 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 64


 2930              		.cfi_def_cfa_offset 8
 2931 0096 BD46     		mov	sp, r7
 2932              		.cfi_def_cfa_register 13
 2933              		@ sp needed
 2934 0098 80BD     		pop	{r7, pc}
 2935              	.L165:
 2936 009a 00BF     		.align	2
 2937              	.L164:
 2938 009c 00000000 		.word	flag_print_rf
 2939 00a0 58000000 		.word	.LC5
 2940 00a4 00000000 		.word	system_state
 2941 00a8 60000000 		.word	.LC6
 2942 00ac 68000000 		.word	.LC7
 2943 00b0 74000000 		.word	.LC8
 2944 00b4 80000000 		.word	.LC9
 2945              		.cfi_endproc
 2946              	.LFE95:
 2947              		.size	print_RF, .-print_RF
 2948              		.section	.text.readFrontSensors,"ax",%progbits
 2949              		.align	2
 2950              		.global	readFrontSensors
 2951              		.thumb
 2952              		.thumb_func
 2953              		.type	readFrontSensors, %function
 2954              	readFrontSensors:
 2955              	.LFB96:
 633:.\main.c      **** 
 634:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 635:.\main.c      **** {
 2956              		.loc 1 635 0
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 8
 2959              		@ frame_needed = 1, uses_anonymous_args = 0
 2960 0000 90B5     		push	{r4, r7, lr}
 2961              		.cfi_def_cfa_offset 12
 2962              		.cfi_offset 4, -12
 2963              		.cfi_offset 7, -8
 2964              		.cfi_offset 14, -4
 2965 0002 83B0     		sub	sp, sp, #12
 2966              		.cfi_def_cfa_offset 24
 2967 0004 00AF     		add	r7, sp, #0
 2968              		.cfi_def_cfa_register 7
 2969 0006 7860     		str	r0, [r7, #4]
 636:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 2970              		.loc 1 636 0
 2971 0008 FFF7FEFF 		bl	FLSens_out_Read
 2972 000c 0346     		mov	r3, r0
 2973 000e 1A46     		mov	r2, r3
 2974 0010 7B68     		ldr	r3, [r7, #4]
 2975 0012 1A70     		strb	r2, [r3]
 637:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 2976              		.loc 1 637 0
 2977 0014 7B68     		ldr	r3, [r7, #4]
 2978 0016 5C1C     		adds	r4, r3, #1
 2979 0018 FFF7FEFF 		bl	NLSens_out_Read
 2980 001c 0346     		mov	r3, r0
 2981 001e 2370     		strb	r3, [r4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 65


 638:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 2982              		.loc 1 638 0
 2983 0020 7B68     		ldr	r3, [r7, #4]
 2984 0022 9C1C     		adds	r4, r3, #2
 2985 0024 FFF7FEFF 		bl	MSens_out_Read
 2986 0028 0346     		mov	r3, r0
 2987 002a 2370     		strb	r3, [r4]
 639:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 2988              		.loc 1 639 0
 2989 002c 7B68     		ldr	r3, [r7, #4]
 2990 002e DC1C     		adds	r4, r3, #3
 2991 0030 FFF7FEFF 		bl	NRSens_out_Read
 2992 0034 0346     		mov	r3, r0
 2993 0036 2370     		strb	r3, [r4]
 640:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 2994              		.loc 1 640 0
 2995 0038 7B68     		ldr	r3, [r7, #4]
 2996 003a 1C1D     		adds	r4, r3, #4
 2997 003c FFF7FEFF 		bl	FRSens_out_Read
 2998 0040 0346     		mov	r3, r0
 2999 0042 2370     		strb	r3, [r4]
 641:.\main.c      **** }
 3000              		.loc 1 641 0
 3001 0044 0C37     		adds	r7, r7, #12
 3002              		.cfi_def_cfa_offset 12
 3003 0046 BD46     		mov	sp, r7
 3004              		.cfi_def_cfa_register 13
 3005              		@ sp needed
 3006 0048 90BD     		pop	{r4, r7, pc}
 3007              		.cfi_endproc
 3008              	.LFE96:
 3009              		.size	readFrontSensors, .-readFrontSensors
 3010 004a 00BF     		.section	.text.main,"ax",%progbits
 3011              		.align	2
 3012              		.global	main
 3013              		.thumb
 3014              		.thumb_func
 3015              		.type	main, %function
 3016              	main:
 3017              	.LFB97:
 642:.\main.c      **** 
 643:.\main.c      **** int main()
 644:.\main.c      **** {  
 3018              		.loc 1 644 0
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 8
 3021              		@ frame_needed = 1, uses_anonymous_args = 0
 3022 0000 80B5     		push	{r7, lr}
 3023              		.cfi_def_cfa_offset 8
 3024              		.cfi_offset 7, -8
 3025              		.cfi_offset 14, -4
 3026 0002 82B0     		sub	sp, sp, #8
 3027              		.cfi_def_cfa_offset 16
 3028 0004 00AF     		add	r7, sp, #0
 3029              		.cfi_def_cfa_register 7
 645:.\main.c      **** 
 646:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 66


 647:.\main.c      **** // ----- INITIALIZATIONS ----------
 648:.\main.c      ****     CYGlobalIntEnable;
 3030              		.loc 1 648 0
 3031              	@ 648 ".\main.c" 1
 3032 0006 62B6     		CPSIE   i
 3033              	@ 0 "" 2
 649:.\main.c      ****     if(ENABLE_PWM)
 650:.\main.c      ****     {
 651:.\main.c      ****         PWM_1_Start();// starting the pwm
 3034              		.loc 1 651 0
 3035              		.thumb
 3036 0008 FFF7FEFF 		bl	PWM_1_Start
 652:.\main.c      ****         PWM_2_Start();// starting the pwm
 3037              		.loc 1 652 0
 3038 000c FFF7FEFF 		bl	PWM_2_Start
 653:.\main.c      ****     }
 654:.\main.c      ****     
 655:.\main.c      ****     if(ENABLE_ADC)
 656:.\main.c      ****     {
 657:.\main.c      ****         ADC_Start();
 658:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 659:.\main.c      ****         //ADC_StartConvert();
 660:.\main.c      ****         
 661:.\main.c      ****         //start the ADC timer for software trigger mode
 662:.\main.c      ****         Timer_TS_Start();
 663:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 664:.\main.c      ****     }
 665:.\main.c      ****     
 666:.\main.c      ****     if (ENABLE_QUAD)
 667:.\main.c      ****     {
 668:.\main.c      ****         QuadDec_M1_Start();
 3039              		.loc 1 668 0
 3040 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 669:.\main.c      ****         QuadDec_M2_Start();
 3041              		.loc 1 669 0
 3042 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 670:.\main.c      ****         
 671:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3043              		.loc 1 671 0
 3044 0018 3C48     		ldr	r0, .L190
 3045 001a FFF7FEFF 		bl	isr_quad1_StartEx
 672:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3046              		.loc 1 672 0
 3047 001e 3C48     		ldr	r0, .L190+4
 3048 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 673:.\main.c      ****         
 674:.\main.c      ****         Timer_1_Start();
 3049              		.loc 1 674 0
 3050 0024 FFF7FEFF 		bl	Timer_1_Start
 675:.\main.c      ****     }
 676:.\main.c      ****     
 677:.\main.c      ****     if(ENABLE_STOP){
 678:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 679:.\main.c      ****         
 680:.\main.c      ****     }
 681:.\main.c      ****     isr_button_StartEx(button);
 3051              		.loc 1 681 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 67


 3052 0028 3A48     		ldr	r0, .L190+8
 3053 002a FFF7FEFF 		bl	isr_button_StartEx
 682:.\main.c      ****     
 683:.\main.c      **** 
 684:.\main.c      ****     // ------USB SETUP ----------------    
 685:.\main.c      ****     if (USE_USB){    
 686:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3054              		.loc 1 686 0
 3055 002e 0020     		movs	r0, #0
 3056 0030 0121     		movs	r1, #1
 3057 0032 FFF7FEFF 		bl	USBUART_Start
 687:.\main.c      ****         if (USBUART_GetConfiguration())
 3058              		.loc 1 687 0
 3059 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
 3060 003a 0346     		mov	r3, r0
 3061 003c 002B     		cmp	r3, #0
 3062 003e 01D0     		beq	.L188
 688:.\main.c      ****             {
 689:.\main.c      ****                  USBUART_CDC_Init();
 3063              		.loc 1 689 0
 3064 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 3065              	.L188:
 690:.\main.c      ****             }
 691:.\main.c      ****     }
 692:.\main.c      ****     
 693:.\main.c      ****     if(BIN_ENABLED){
 694:.\main.c      ****         UART_clk_SetDividerValue(130);
 695:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 696:.\main.c      ****         UART_Start();
 697:.\main.c      ****         RF_BT_SELECT_Write(0);
 698:.\main.c      ****     }
 699:.\main.c      ****     
 700:.\main.c      ****     if(BT_ENABLED){
 701:.\main.c      ****         UART_clk_SetDividerValue(781);
 3066              		.loc 1 701 0
 3067 0044 4FF44370 		mov	r0, #780
 3068 0048 0121     		movs	r1, #1
 3069 004a FFF7FEFF 		bl	UART_clk_SetDividerRegister
 702:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3070              		.loc 1 702 0
 3071 004e 3248     		ldr	r0, .L190+12
 3072 0050 FFF7FEFF 		bl	isrRF_RX_StartEx
 703:.\main.c      ****         UART_Start();
 3073              		.loc 1 703 0
 3074 0054 FFF7FEFF 		bl	UART_Start
 704:.\main.c      ****         RF_BT_SELECT_Write(1);
 3075              		.loc 1 704 0
 3076 0058 0120     		movs	r0, #1
 3077 005a FFF7FEFF 		bl	RF_BT_SELECT_Write
 3078              	.L187:
 3079              	.LBB7:
 705:.\main.c      ****     }
 706:.\main.c      ****     
 707:.\main.c      ****     //usbPutString("Started");
 708:.\main.c      ****     for(;;)
 709:.\main.c      ****     {
 710:.\main.c      ****         if(ENABLE_ADC) print_ADC();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 68


 711:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 3080              		.loc 1 711 0
 3081 005e FFF7FEFF 		bl	Quad_Dec_response
 712:.\main.c      ****         if(BIN_ENABLED == 1)
 713:.\main.c      ****         {
 714:.\main.c      ****             handle_rx_binary();
 715:.\main.c      ****             print_RF();
 716:.\main.c      ****         }
 717:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 718:.\main.c      ****         
 719:.\main.c      ****         uint8 frontSensors[5];
 720:.\main.c      ****         readFrontSensors(frontSensors);
 3082              		.loc 1 720 0
 3083 0062 3B46     		mov	r3, r7
 3084 0064 1846     		mov	r0, r3
 3085 0066 FFF7FEFF 		bl	readFrontSensors
 721:.\main.c      ****         
 722:.\main.c      ****         switch(track_mode)
 3086              		.loc 1 722 0
 3087 006a 2C4B     		ldr	r3, .L190+16
 3088 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3089 006e 032B     		cmp	r3, #3
 3090 0070 20D8     		bhi	.L169
 3091 0072 01A2     		adr	r2, .L171
 3092 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3093              		.p2align 2
 3094              	.L171:
 3095 0078 B5000000 		.word	.L169+1
 3096 007c B5000000 		.word	.L169+1
 3097 0080 B5000000 		.word	.L169+1
 3098 0084 89000000 		.word	.L174+1
 3099              		.p2align 1
 3100              	.L174:
 723:.\main.c      ****         {
 724:.\main.c      ****             case SQUARE_TRACK:
 725:.\main.c      ****                 if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 3101              		.loc 1 725 0
 3102 0088 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3103 008a 012B     		cmp	r3, #1
 3104 008c 05D1     		bne	.L175
 3105              		.loc 1 725 0 is_stmt 0 discriminator 1
 3106 008e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3107 0090 012B     		cmp	r3, #1
 3108 0092 02D1     		bne	.L175
 726:.\main.c      ****                     initTurnLeft();
 3109              		.loc 1 726 0 is_stmt 1
 3110 0094 FFF7FEFF 		bl	initTurnLeft
 3111 0098 0BE0     		b	.L176
 3112              	.L175:
 727:.\main.c      ****                 }
 728:.\main.c      ****                 else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 3113              		.loc 1 728 0
 3114 009a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3115 009c 012B     		cmp	r3, #1
 3116 009e 05D1     		bne	.L177
 3117              		.loc 1 728 0 is_stmt 0 discriminator 1
 3118 00a0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 69


 3119 00a2 012B     		cmp	r3, #1
 3120 00a4 02D1     		bne	.L177
 729:.\main.c      ****                 {
 730:.\main.c      ****                     initTurnRight();
 3121              		.loc 1 730 0 is_stmt 1
 3122 00a6 FFF7FEFF 		bl	initTurnRight
 3123 00aa 02E0     		b	.L176
 3124              	.L177:
 731:.\main.c      ****                 }
 732:.\main.c      ****                 else initTrackLineSoft();
 3125              		.loc 1 732 0
 3126 00ac FFF7FEFF 		bl	initTrackLineSoft
 733:.\main.c      ****             break;
 3127              		.loc 1 733 0
 3128 00b0 FFE7     		b	.L189
 3129              	.L176:
 3130              	.L189:
 3131 00b2 00BF     		nop
 3132              	.L169:
 734:.\main.c      ****             case NO_TRACK:
 735:.\main.c      ****             break;
 736:.\main.c      ****             case CURVE_TRACK:
 737:.\main.c      ****             break;
 738:.\main.c      ****             case U_TRACK:
 739:.\main.c      ****             break;
 740:.\main.c      ****         }
 741:.\main.c      ****         
 742:.\main.c      ****         switch(movement_state)
 3133              		.loc 1 742 0
 3134 00b4 1A4B     		ldr	r3, .L190+20
 3135 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3136 00b8 062B     		cmp	r3, #6
 3137 00ba D0D8     		bhi	.L187
 3138 00bc 01A2     		adr	r2, .L180
 3139 00be 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3140 00c2 00BF     		.p2align 2
 3141              	.L180:
 3142 00c4 E1000000 		.word	.L179+1
 3143 00c8 E7000000 		.word	.L181+1
 3144 00cc ED000000 		.word	.L182+1
 3145 00d0 F3000000 		.word	.L183+1
 3146 00d4 F9000000 		.word	.L184+1
 3147 00d8 FF000000 		.word	.L185+1
 3148 00dc 05010000 		.word	.L186+1
 3149              		.p2align 1
 3150              	.L179:
 743:.\main.c      ****         {
 744:.\main.c      ****             case DRIVE:
 745:.\main.c      ****                 driveForwards();
 3151              		.loc 1 745 0
 3152 00e0 FFF7FEFF 		bl	driveForwards
 746:.\main.c      ****             break;
 3153              		.loc 1 746 0
 3154 00e4 10E0     		b	.L178
 3155              	.L181:
 747:.\main.c      ****             case LTURN:
 748:.\main.c      ****                 turnLeft();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 70


 3156              		.loc 1 748 0
 3157 00e6 FFF7FEFF 		bl	turnLeft
 749:.\main.c      ****             break;
 3158              		.loc 1 749 0
 3159 00ea 0DE0     		b	.L178
 3160              	.L182:
 750:.\main.c      ****             case RTURN:
 751:.\main.c      ****                 turnRight();
 3161              		.loc 1 751 0
 3162 00ec FFF7FEFF 		bl	turnRight
 752:.\main.c      ****             break;
 3163              		.loc 1 752 0
 3164 00f0 0AE0     		b	.L178
 3165              	.L183:
 753:.\main.c      ****             case STOPPED:
 754:.\main.c      ****                 brakeMotor();
 3166              		.loc 1 754 0
 3167 00f2 FFF7FEFF 		bl	brakeMotor
 755:.\main.c      ****             break;
 3168              		.loc 1 755 0
 3169 00f6 07E0     		b	.L178
 3170              	.L184:
 756:.\main.c      ****             case TRACKING:
 757:.\main.c      ****                 trackLine();
 3171              		.loc 1 757 0
 3172 00f8 FFF7FEFF 		bl	trackLine
 758:.\main.c      ****             break;
 3173              		.loc 1 758 0
 3174 00fc 04E0     		b	.L178
 3175              	.L185:
 759:.\main.c      ****             case TRACKING_U:
 760:.\main.c      ****                 trackLineU();
 3176              		.loc 1 760 0
 3177 00fe FFF7FEFF 		bl	trackLineU
 761:.\main.c      ****             break;
 3178              		.loc 1 761 0
 3179 0102 01E0     		b	.L178
 3180              	.L186:
 762:.\main.c      ****             case TRACKING_SOFT:
 763:.\main.c      ****                 trackLineSoft();
 3181              		.loc 1 763 0
 3182 0104 FFF7FEFF 		bl	trackLineSoft
 3183              	.L178:
 3184              	.LBE7:
 764:.\main.c      ****         }
 765:.\main.c      ****         //handle_usb();        
 766:.\main.c      ****     }   
 3185              		.loc 1 766 0
 3186 0108 A9E7     		b	.L187
 3187              	.L191:
 3188 010a 00BF     		.align	2
 3189              	.L190:
 3190 010c 00000000 		.word	isr_quad1
 3191 0110 00000000 		.word	isr_turn_timer
 3192 0114 00000000 		.word	button
 3193 0118 00000000 		.word	BT_rxInt
 3194 011c 00000000 		.word	track_mode
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 71


 3195 0120 00000000 		.word	movement_state
 3196              		.cfi_endproc
 3197              	.LFE97:
 3198              		.size	main, .-main
 3199              		.section	.text.usbPutString,"ax",%progbits
 3200              		.align	2
 3201              		.global	usbPutString
 3202              		.thumb
 3203              		.thumb_func
 3204              		.type	usbPutString, %function
 3205              	usbPutString:
 3206              	.LFB98:
 767:.\main.c      **** }
 768:.\main.c      **** //* ========================================
 769:.\main.c      **** void usbPutString(char *s)
 770:.\main.c      **** {
 3207              		.loc 1 770 0
 3208              		.cfi_startproc
 3209              		@ args = 0, pretend = 0, frame = 16
 3210              		@ frame_needed = 1, uses_anonymous_args = 0
 3211 0000 80B5     		push	{r7, lr}
 3212              		.cfi_def_cfa_offset 8
 3213              		.cfi_offset 7, -8
 3214              		.cfi_offset 14, -4
 3215 0002 84B0     		sub	sp, sp, #16
 3216              		.cfi_def_cfa_offset 24
 3217 0004 00AF     		add	r7, sp, #0
 3218              		.cfi_def_cfa_register 7
 3219 0006 7860     		str	r0, [r7, #4]
 771:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 772:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 773:.\main.c      **** //  length to 62 char (63rd char is a '!')
 774:.\main.c      ****     if (USE_USB && portOpen)    
 3220              		.loc 1 774 0
 3221 0008 154B     		ldr	r3, .L196
 3222 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3223 000c 002B     		cmp	r3, #0
 3224 000e 23D0     		beq	.L192
 3225              	.LBB8:
 775:.\main.c      ****     {
 776:.\main.c      ****             uint32 cnt = 0;
 3226              		.loc 1 776 0
 3227 0010 0023     		movs	r3, #0
 3228 0012 FB60     		str	r3, [r7, #12]
 777:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 3229              		.loc 1 777 0
 3230 0014 0AE0     		b	.L194
 3231              	.L195:
 778:.\main.c      ****             {
 779:.\main.c      ****                 cnt++;
 3232              		.loc 1 779 0
 3233 0016 FB68     		ldr	r3, [r7, #12]
 3234 0018 0133     		adds	r3, r3, #1
 3235 001a FB60     		str	r3, [r7, #12]
 780:.\main.c      ****                 if(cnt == 3000000){
 3236              		.loc 1 780 0
 3237 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 72


 3238 001e 114A     		ldr	r2, .L196+4
 3239 0020 9342     		cmp	r3, r2
 3240 0022 03D1     		bne	.L194
 781:.\main.c      ****                     portOpen = 0;
 3241              		.loc 1 781 0
 3242 0024 0E4B     		ldr	r3, .L196
 3243 0026 0022     		movs	r2, #0
 3244 0028 1A70     		strb	r2, [r3]
 782:.\main.c      ****                     return;
 3245              		.loc 1 782 0
 3246 002a 15E0     		b	.L192
 3247              	.L194:
 777:.\main.c      ****             {
 3248              		.loc 1 777 0
 3249 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 3250 0030 0346     		mov	r3, r0
 3251 0032 002B     		cmp	r3, #0
 3252 0034 EFD0     		beq	.L195
 783:.\main.c      ****                 }
 784:.\main.c      ****             }
 785:.\main.c      ****             s[63]='\0';
 3253              		.loc 1 785 0
 3254 0036 7B68     		ldr	r3, [r7, #4]
 3255 0038 3F33     		adds	r3, r3, #63
 3256 003a 0022     		movs	r2, #0
 3257 003c 1A70     		strb	r2, [r3]
 786:.\main.c      ****             s[62]='!';
 3258              		.loc 1 786 0
 3259 003e 7B68     		ldr	r3, [r7, #4]
 3260 0040 3E33     		adds	r3, r3, #62
 3261 0042 2122     		movs	r2, #33
 3262 0044 1A70     		strb	r2, [r3]
 787:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 3263              		.loc 1 787 0
 3264 0046 7868     		ldr	r0, [r7, #4]
 3265 0048 FFF7FEFF 		bl	strlen
 3266 004c 0346     		mov	r3, r0
 3267 004e 9BB2     		uxth	r3, r3
 3268 0050 7868     		ldr	r0, [r7, #4]
 3269 0052 1946     		mov	r1, r3
 3270 0054 FFF7FEFF 		bl	USBUART_PutData
 3271              	.L192:
 3272              	.LBE8:
 788:.\main.c      ****     }
 789:.\main.c      **** }
 3273              		.loc 1 789 0
 3274 0058 1037     		adds	r7, r7, #16
 3275              		.cfi_def_cfa_offset 8
 3276 005a BD46     		mov	sp, r7
 3277              		.cfi_def_cfa_register 13
 3278              		@ sp needed
 3279 005c 80BD     		pop	{r7, pc}
 3280              	.L197:
 3281 005e 00BF     		.align	2
 3282              	.L196:
 3283 0060 00000000 		.word	portOpen
 3284 0064 C0C62D00 		.word	3000000
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 73


 3285              		.cfi_endproc
 3286              	.LFE98:
 3287              		.size	usbPutString, .-usbPutString
 3288              		.section	.text.usbPutChar,"ax",%progbits
 3289              		.align	2
 3290              		.global	usbPutChar
 3291              		.thumb
 3292              		.thumb_func
 3293              		.type	usbPutChar, %function
 3294              	usbPutChar:
 3295              	.LFB99:
 790:.\main.c      **** //* ========================================
 791:.\main.c      **** void usbPutChar(char c)
 792:.\main.c      **** {
 3296              		.loc 1 792 0
 3297              		.cfi_startproc
 3298              		@ args = 0, pretend = 0, frame = 16
 3299              		@ frame_needed = 1, uses_anonymous_args = 0
 3300 0000 80B5     		push	{r7, lr}
 3301              		.cfi_def_cfa_offset 8
 3302              		.cfi_offset 7, -8
 3303              		.cfi_offset 14, -4
 3304 0002 84B0     		sub	sp, sp, #16
 3305              		.cfi_def_cfa_offset 24
 3306 0004 00AF     		add	r7, sp, #0
 3307              		.cfi_def_cfa_register 7
 3308 0006 0346     		mov	r3, r0
 3309 0008 FB71     		strb	r3, [r7, #7]
 793:.\main.c      ****     if (USE_USB && portOpen)    
 3310              		.loc 1 793 0
 3311 000a 0F4B     		ldr	r3, .L202
 3312 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3313 000e 002B     		cmp	r3, #0
 3314 0010 16D0     		beq	.L198
 3315              	.LBB9:
 794:.\main.c      ****     {    
 795:.\main.c      ****         uint32 cnt = 0;
 3316              		.loc 1 795 0
 3317 0012 0023     		movs	r3, #0
 3318 0014 FB60     		str	r3, [r7, #12]
 796:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 3319              		.loc 1 796 0
 3320 0016 0AE0     		b	.L200
 3321              	.L201:
 797:.\main.c      ****             cnt++;
 3322              		.loc 1 797 0
 3323 0018 FB68     		ldr	r3, [r7, #12]
 3324 001a 0133     		adds	r3, r3, #1
 3325 001c FB60     		str	r3, [r7, #12]
 798:.\main.c      ****             if(cnt == 3000000){
 3326              		.loc 1 798 0
 3327 001e FB68     		ldr	r3, [r7, #12]
 3328 0020 0A4A     		ldr	r2, .L202+4
 3329 0022 9342     		cmp	r3, r2
 3330 0024 03D1     		bne	.L200
 799:.\main.c      ****                 portOpen = 0;
 3331              		.loc 1 799 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 74


 3332 0026 084B     		ldr	r3, .L202
 3333 0028 0022     		movs	r2, #0
 3334 002a 1A70     		strb	r2, [r3]
 800:.\main.c      ****                 return;
 3335              		.loc 1 800 0
 3336 002c 08E0     		b	.L198
 3337              	.L200:
 796:.\main.c      ****             cnt++;
 3338              		.loc 1 796 0
 3339 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 3340 0032 0346     		mov	r3, r0
 3341 0034 002B     		cmp	r3, #0
 3342 0036 EFD0     		beq	.L201
 801:.\main.c      ****             }
 802:.\main.c      ****         }
 803:.\main.c      ****         USBUART_PutChar(c);
 3343              		.loc 1 803 0
 3344 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3345 003a 1846     		mov	r0, r3
 3346 003c FFF7FEFF 		bl	USBUART_PutChar
 3347              	.L198:
 3348              	.LBE9:
 804:.\main.c      ****     }    
 805:.\main.c      **** }
 3349              		.loc 1 805 0
 3350 0040 1037     		adds	r7, r7, #16
 3351              		.cfi_def_cfa_offset 8
 3352 0042 BD46     		mov	sp, r7
 3353              		.cfi_def_cfa_register 13
 3354              		@ sp needed
 3355 0044 80BD     		pop	{r7, pc}
 3356              	.L203:
 3357 0046 00BF     		.align	2
 3358              	.L202:
 3359 0048 00000000 		.word	portOpen
 3360 004c C0C62D00 		.word	3000000
 3361              		.cfi_endproc
 3362              	.LFE99:
 3363              		.size	usbPutChar, .-usbPutChar
 3364              		.section	.text.uart_set_PWM,"ax",%progbits
 3365              		.align	2
 3366              		.global	uart_set_PWM
 3367              		.thumb
 3368              		.thumb_func
 3369              		.type	uart_set_PWM, %function
 3370              	uart_set_PWM:
 3371              	.LFB100:
 806:.\main.c      **** //* ========================================
 807:.\main.c      **** 
 808:.\main.c      **** void uart_set_PWM()
 809:.\main.c      **** {
 3372              		.loc 1 809 0
 3373              		.cfi_startproc
 3374              		@ args = 0, pretend = 0, frame = 8
 3375              		@ frame_needed = 1, uses_anonymous_args = 0
 3376 0000 80B5     		push	{r7, lr}
 3377              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 75


 3378              		.cfi_offset 7, -8
 3379              		.cfi_offset 14, -4
 3380 0002 82B0     		sub	sp, sp, #8
 3381              		.cfi_def_cfa_offset 16
 3382 0004 00AF     		add	r7, sp, #0
 3383              		.cfi_def_cfa_register 7
 810:.\main.c      ****     uint8 c;
 811:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 3384              		.loc 1 811 0
 3385 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 3386 000a 0346     		mov	r3, r0
 3387 000c 002B     		cmp	r3, #0
 3388 000e 11D0     		beq	.L204
 812:.\main.c      ****        {  
 813:.\main.c      ****             c = USBUART_GetChar();
 3389              		.loc 1 813 0
 3390 0010 FFF7FEFF 		bl	USBUART_GetChar
 3391 0014 0346     		mov	r3, r0
 3392 0016 FB71     		strb	r3, [r7, #7]
 814:.\main.c      ****             
 815:.\main.c      ****             if(c <= 100 && c > 0){
 3393              		.loc 1 815 0
 3394 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3395 001a 642B     		cmp	r3, #100
 3396 001c 0AD8     		bhi	.L204
 3397              		.loc 1 815 0 is_stmt 0 discriminator 1
 3398 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3399 0020 002B     		cmp	r3, #0
 3400 0022 07D0     		beq	.L204
 816:.\main.c      ****                 PWM_1_WriteCompare(c);
 3401              		.loc 1 816 0 is_stmt 1
 3402 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3403 0026 1846     		mov	r0, r3
 3404 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 817:.\main.c      ****                 usbPutString(c);
 3405              		.loc 1 817 0
 3406 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3407 002e 1846     		mov	r0, r3
 3408 0030 FFF7FEFF 		bl	usbPutString
 3409              	.L204:
 818:.\main.c      ****             }
 819:.\main.c      ****        }
 820:.\main.c      **** }
 3410              		.loc 1 820 0
 3411 0034 0837     		adds	r7, r7, #8
 3412              		.cfi_def_cfa_offset 8
 3413 0036 BD46     		mov	sp, r7
 3414              		.cfi_def_cfa_register 13
 3415              		@ sp needed
 3416 0038 80BD     		pop	{r7, pc}
 3417              		.cfi_endproc
 3418              	.LFE100:
 3419              		.size	uart_set_PWM, .-uart_set_PWM
 3420 003a 00BF     		.text
 3421              	.Letext0:
 3422              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3423              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 76


 3424              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3425              		.file 5 ".\\vars.h"
 3426              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 3427              		.section	.debug_info,"",%progbits
 3428              	.Ldebug_info0:
 3429 0000 380B0000 		.4byte	0xb38
 3430 0004 0400     		.2byte	0x4
 3431 0006 00000000 		.4byte	.Ldebug_abbrev0
 3432 000a 04       		.byte	0x4
 3433 000b 01       		.uleb128 0x1
 3434 000c 88030000 		.4byte	.LASF154
 3435 0010 01       		.byte	0x1
 3436 0011 7E070000 		.4byte	.LASF155
 3437 0015 1F070000 		.4byte	.LASF156
 3438 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3439 001d 00000000 		.4byte	0
 3440 0021 00000000 		.4byte	.Ldebug_line0
 3441 0025 02       		.uleb128 0x2
 3442 0026 01       		.byte	0x1
 3443 0027 06       		.byte	0x6
 3444 0028 A7060000 		.4byte	.LASF0
 3445 002c 02       		.uleb128 0x2
 3446 002d 01       		.byte	0x1
 3447 002e 08       		.byte	0x8
 3448 002f 0A060000 		.4byte	.LASF1
 3449 0033 02       		.uleb128 0x2
 3450 0034 02       		.byte	0x2
 3451 0035 05       		.byte	0x5
 3452 0036 E9040000 		.4byte	.LASF2
 3453 003a 02       		.uleb128 0x2
 3454 003b 02       		.byte	0x2
 3455 003c 07       		.byte	0x7
 3456 003d B3060000 		.4byte	.LASF3
 3457 0041 03       		.uleb128 0x3
 3458 0042 6D000000 		.4byte	.LASF11
 3459 0046 02       		.byte	0x2
 3460 0047 3F       		.byte	0x3f
 3461 0048 4C000000 		.4byte	0x4c
 3462 004c 02       		.uleb128 0x2
 3463 004d 04       		.byte	0x4
 3464 004e 05       		.byte	0x5
 3465 004f 13050000 		.4byte	.LASF4
 3466 0053 02       		.uleb128 0x2
 3467 0054 04       		.byte	0x4
 3468 0055 07       		.byte	0x7
 3469 0056 C1050000 		.4byte	.LASF5
 3470 005a 02       		.uleb128 0x2
 3471 005b 08       		.byte	0x8
 3472 005c 05       		.byte	0x5
 3473 005d 5B030000 		.4byte	.LASF6
 3474 0061 02       		.uleb128 0x2
 3475 0062 08       		.byte	0x8
 3476 0063 07       		.byte	0x7
 3477 0064 CB010000 		.4byte	.LASF7
 3478 0068 04       		.uleb128 0x4
 3479 0069 04       		.byte	0x4
 3480 006a 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 77


 3481 006b 696E7400 		.ascii	"int\000"
 3482 006f 02       		.uleb128 0x2
 3483 0070 04       		.byte	0x4
 3484 0071 07       		.byte	0x7
 3485 0072 55000000 		.4byte	.LASF8
 3486 0076 02       		.uleb128 0x2
 3487 0077 04       		.byte	0x4
 3488 0078 07       		.byte	0x7
 3489 0079 B8050000 		.4byte	.LASF9
 3490 007d 05       		.uleb128 0x5
 3491 007e 04       		.byte	0x4
 3492 007f 83000000 		.4byte	0x83
 3493 0083 02       		.uleb128 0x2
 3494 0084 01       		.byte	0x1
 3495 0085 08       		.byte	0x8
 3496 0086 E9020000 		.4byte	.LASF10
 3497 008a 03       		.uleb128 0x3
 3498 008b DF050000 		.4byte	.LASF12
 3499 008f 03       		.byte	0x3
 3500 0090 2C       		.byte	0x2c
 3501 0091 41000000 		.4byte	0x41
 3502 0095 06       		.uleb128 0x6
 3503 0096 F0060000 		.4byte	.LASF13
 3504 009a 04       		.byte	0x4
 3505 009b 9201     		.2byte	0x192
 3506 009d 2C000000 		.4byte	0x2c
 3507 00a1 06       		.uleb128 0x6
 3508 00a2 1A030000 		.4byte	.LASF14
 3509 00a6 04       		.byte	0x4
 3510 00a7 9301     		.2byte	0x193
 3511 00a9 3A000000 		.4byte	0x3a
 3512 00ad 06       		.uleb128 0x6
 3513 00ae 43040000 		.4byte	.LASF15
 3514 00b2 04       		.byte	0x4
 3515 00b3 9401     		.2byte	0x194
 3516 00b5 53000000 		.4byte	0x53
 3517 00b9 06       		.uleb128 0x6
 3518 00ba 21030000 		.4byte	.LASF16
 3519 00be 04       		.byte	0x4
 3520 00bf 9501     		.2byte	0x195
 3521 00c1 25000000 		.4byte	0x25
 3522 00c5 06       		.uleb128 0x6
 3523 00c6 77000000 		.4byte	.LASF17
 3524 00ca 04       		.byte	0x4
 3525 00cb 9601     		.2byte	0x196
 3526 00cd 33000000 		.4byte	0x33
 3527 00d1 02       		.uleb128 0x2
 3528 00d2 04       		.byte	0x4
 3529 00d3 04       		.byte	0x4
 3530 00d4 64010000 		.4byte	.LASF18
 3531 00d8 02       		.uleb128 0x2
 3532 00d9 08       		.byte	0x8
 3533 00da 04       		.byte	0x4
 3534 00db F6060000 		.4byte	.LASF19
 3535 00df 02       		.uleb128 0x2
 3536 00e0 08       		.byte	0x8
 3537 00e1 04       		.byte	0x4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 78


 3538 00e2 A2040000 		.4byte	.LASF20
 3539 00e6 07       		.uleb128 0x7
 3540 00e7 4B060000 		.4byte	.LASF28
 3541 00eb 01       		.byte	0x1
 3542 00ec 05       		.byte	0x5
 3543 00ed 48       		.byte	0x48
 3544 00ee 1D010000 		.4byte	0x11d
 3545 00f2 08       		.uleb128 0x8
 3546 00f3 83010000 		.4byte	.LASF21
 3547 00f7 00       		.sleb128 0
 3548 00f8 08       		.uleb128 0x8
 3549 00f9 8A000000 		.4byte	.LASF22
 3550 00fd 01       		.sleb128 1
 3551 00fe 08       		.uleb128 0x8
 3552 00ff 0A000000 		.4byte	.LASF23
 3553 0103 02       		.sleb128 2
 3554 0104 08       		.uleb128 0x8
 3555 0105 91040000 		.4byte	.LASF24
 3556 0109 03       		.sleb128 3
 3557 010a 08       		.uleb128 0x8
 3558 010b 9D000000 		.4byte	.LASF25
 3559 010f 04       		.sleb128 4
 3560 0110 08       		.uleb128 0x8
 3561 0111 36010000 		.4byte	.LASF26
 3562 0115 05       		.sleb128 5
 3563 0116 08       		.uleb128 0x8
 3564 0117 6D050000 		.4byte	.LASF27
 3565 011b 06       		.sleb128 6
 3566 011c 00       		.byte	0
 3567 011d 07       		.uleb128 0x7
 3568 011e C8000000 		.4byte	.LASF29
 3569 0122 01       		.byte	0x1
 3570 0123 05       		.byte	0x5
 3571 0124 49       		.byte	0x49
 3572 0125 42010000 		.4byte	0x142
 3573 0129 08       		.uleb128 0x8
 3574 012a 55050000 		.4byte	.LASF30
 3575 012e 00       		.sleb128 0
 3576 012f 08       		.uleb128 0x8
 3577 0130 3F030000 		.4byte	.LASF31
 3578 0134 01       		.sleb128 1
 3579 0135 08       		.uleb128 0x8
 3580 0136 2A050000 		.4byte	.LASF32
 3581 013a 02       		.sleb128 2
 3582 013b 08       		.uleb128 0x8
 3583 013c F0000000 		.4byte	.LASF33
 3584 0140 03       		.sleb128 3
 3585 0141 00       		.byte	0
 3586 0142 09       		.uleb128 0x9
 3587 0143 56040000 		.4byte	.LASF157
 3588 0147 20       		.byte	0x20
 3589 0148 05       		.byte	0x5
 3590 0149 4F       		.byte	0x4f
 3591 014a 1B020000 		.4byte	0x21b
 3592 014e 0A       		.uleb128 0xa
 3593 014f 6E040000 		.4byte	.LASF34
 3594 0153 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 79


 3595 0154 50       		.byte	0x50
 3596 0155 B9000000 		.4byte	0xb9
 3597 0159 00       		.byte	0
 3598 015a 0A       		.uleb128 0xa
 3599 015b 7D010000 		.4byte	.LASF35
 3600 015f 05       		.byte	0x5
 3601 0160 51       		.byte	0x51
 3602 0161 95000000 		.4byte	0x95
 3603 0165 01       		.byte	0x1
 3604 0166 0A       		.uleb128 0xa
 3605 0167 EE050000 		.4byte	.LASF36
 3606 016b 05       		.byte	0x5
 3607 016c 52       		.byte	0x52
 3608 016d C5000000 		.4byte	0xc5
 3609 0171 02       		.byte	0x2
 3610 0172 0A       		.uleb128 0xa
 3611 0173 BD020000 		.4byte	.LASF37
 3612 0177 05       		.byte	0x5
 3613 0178 53       		.byte	0x53
 3614 0179 C5000000 		.4byte	0xc5
 3615 017d 04       		.byte	0x4
 3616 017e 0A       		.uleb128 0xa
 3617 017f C6060000 		.4byte	.LASF38
 3618 0183 05       		.byte	0x5
 3619 0184 54       		.byte	0x54
 3620 0185 C5000000 		.4byte	0xc5
 3621 0189 06       		.byte	0x6
 3622 018a 0A       		.uleb128 0xa
 3623 018b 51070000 		.4byte	.LASF39
 3624 018f 05       		.byte	0x5
 3625 0190 55       		.byte	0x55
 3626 0191 C5000000 		.4byte	0xc5
 3627 0195 08       		.byte	0x8
 3628 0196 0A       		.uleb128 0xa
 3629 0197 1F040000 		.4byte	.LASF40
 3630 019b 05       		.byte	0x5
 3631 019c 56       		.byte	0x56
 3632 019d C5000000 		.4byte	0xc5
 3633 01a1 0A       		.byte	0xa
 3634 01a2 0A       		.uleb128 0xa
 3635 01a3 EE020000 		.4byte	.LASF41
 3636 01a7 05       		.byte	0x5
 3637 01a8 57       		.byte	0x57
 3638 01a9 C5000000 		.4byte	0xc5
 3639 01ad 0C       		.byte	0xc
 3640 01ae 0A       		.uleb128 0xa
 3641 01af 73040000 		.4byte	.LASF42
 3642 01b3 05       		.byte	0x5
 3643 01b4 58       		.byte	0x58
 3644 01b5 C5000000 		.4byte	0xc5
 3645 01b9 0E       		.byte	0xe
 3646 01ba 0A       		.uleb128 0xa
 3647 01bb 76030000 		.4byte	.LASF43
 3648 01bf 05       		.byte	0x5
 3649 01c0 59       		.byte	0x59
 3650 01c1 C5000000 		.4byte	0xc5
 3651 01c5 10       		.byte	0x10
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 80


 3652 01c6 0A       		.uleb128 0xa
 3653 01c7 97050000 		.4byte	.LASF44
 3654 01cb 05       		.byte	0x5
 3655 01cc 5A       		.byte	0x5a
 3656 01cd C5000000 		.4byte	0xc5
 3657 01d1 12       		.byte	0x12
 3658 01d2 0A       		.uleb128 0xa
 3659 01d3 75070000 		.4byte	.LASF45
 3660 01d7 05       		.byte	0x5
 3661 01d8 5B       		.byte	0x5b
 3662 01d9 C5000000 		.4byte	0xc5
 3663 01dd 14       		.byte	0x14
 3664 01de 0A       		.uleb128 0xa
 3665 01df 26030000 		.4byte	.LASF46
 3666 01e3 05       		.byte	0x5
 3667 01e4 5C       		.byte	0x5c
 3668 01e5 C5000000 		.4byte	0xc5
 3669 01e9 16       		.byte	0x16
 3670 01ea 0A       		.uleb128 0xa
 3671 01eb C0000000 		.4byte	.LASF47
 3672 01ef 05       		.byte	0x5
 3673 01f0 5D       		.byte	0x5d
 3674 01f1 C5000000 		.4byte	0xc5
 3675 01f5 18       		.byte	0x18
 3676 01f6 0A       		.uleb128 0xa
 3677 01f7 12030000 		.4byte	.LASF48
 3678 01fb 05       		.byte	0x5
 3679 01fc 5E       		.byte	0x5e
 3680 01fd C5000000 		.4byte	0xc5
 3681 0201 1A       		.byte	0x1a
 3682 0202 0A       		.uleb128 0xa
 3683 0203 16040000 		.4byte	.LASF49
 3684 0207 05       		.byte	0x5
 3685 0208 5F       		.byte	0x5f
 3686 0209 C5000000 		.4byte	0xc5
 3687 020d 1C       		.byte	0x1c
 3688 020e 0A       		.uleb128 0xa
 3689 020f 4D010000 		.4byte	.LASF50
 3690 0213 05       		.byte	0x5
 3691 0214 60       		.byte	0x60
 3692 0215 C5000000 		.4byte	0xc5
 3693 0219 1E       		.byte	0x1e
 3694 021a 00       		.byte	0
 3695 021b 0B       		.uleb128 0xb
 3696 021c 0E070000 		.4byte	.LASF56
 3697 0220 01       		.byte	0x1
 3698 0221 29       		.byte	0x29
 3699 0222 00000000 		.4byte	.LFB63
 3700 0226 60010000 		.4byte	.LFE63-.LFB63
 3701 022a 01       		.uleb128 0x1
 3702 022b 9C       		.byte	0x9c
 3703 022c 65020000 		.4byte	0x265
 3704 0230 0C       		.uleb128 0xc
 3705 0231 10000000 		.4byte	.LBB2
 3706 0235 34010000 		.4byte	.LBE2-.LBB2
 3707 0239 0D       		.uleb128 0xd
 3708 023a B3000000 		.4byte	.LASF51
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 81


 3709 023e 01       		.byte	0x1
 3710 023f 2F       		.byte	0x2f
 3711 0240 A1000000 		.4byte	0xa1
 3712 0244 02       		.uleb128 0x2
 3713 0245 91       		.byte	0x91
 3714 0246 76       		.sleb128 -10
 3715 0247 0D       		.uleb128 0xd
 3716 0248 D3050000 		.4byte	.LASF52
 3717 024c 01       		.byte	0x1
 3718 024d 31       		.byte	0x31
 3719 024e 65020000 		.4byte	0x265
 3720 0252 02       		.uleb128 0x2
 3721 0253 91       		.byte	0x91
 3722 0254 68       		.sleb128 -24
 3723 0255 0D       		.uleb128 0xd
 3724 0256 89010000 		.4byte	.LASF53
 3725 025a 01       		.byte	0x1
 3726 025b 32       		.byte	0x32
 3727 025c 65020000 		.4byte	0x265
 3728 0260 02       		.uleb128 0x2
 3729 0261 91       		.byte	0x91
 3730 0262 5C       		.sleb128 -36
 3731 0263 00       		.byte	0
 3732 0264 00       		.byte	0
 3733 0265 0E       		.uleb128 0xe
 3734 0266 83000000 		.4byte	0x83
 3735 026a 75020000 		.4byte	0x275
 3736 026e 0F       		.uleb128 0xf
 3737 026f 76000000 		.4byte	0x76
 3738 0273 0B       		.byte	0xb
 3739 0274 00       		.byte	0
 3740 0275 10       		.uleb128 0x10
 3741 0276 07030000 		.4byte	.LASF54
 3742 027a 01       		.byte	0x1
 3743 027b A4       		.byte	0xa4
 3744 027c 00000000 		.4byte	.LFB64
 3745 0280 18000000 		.4byte	.LFE64-.LFB64
 3746 0284 01       		.uleb128 0x1
 3747 0285 9C       		.byte	0x9c
 3748 0286 99020000 		.4byte	0x299
 3749 028a 11       		.uleb128 0x11
 3750 028b 64697200 		.ascii	"dir\000"
 3751 028f 01       		.byte	0x1
 3752 0290 A4       		.byte	0xa4
 3753 0291 95000000 		.4byte	0x95
 3754 0295 02       		.uleb128 0x2
 3755 0296 91       		.byte	0x91
 3756 0297 77       		.sleb128 -9
 3757 0298 00       		.byte	0
 3758 0299 10       		.uleb128 0x10
 3759 029a 33030000 		.4byte	.LASF55
 3760 029e 01       		.byte	0x1
 3761 029f A9       		.byte	0xa9
 3762 02a0 00000000 		.4byte	.LFB65
 3763 02a4 18000000 		.4byte	.LFE65-.LFB65
 3764 02a8 01       		.uleb128 0x1
 3765 02a9 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 82


 3766 02aa BD020000 		.4byte	0x2bd
 3767 02ae 11       		.uleb128 0x11
 3768 02af 64697200 		.ascii	"dir\000"
 3769 02b3 01       		.byte	0x1
 3770 02b4 A9       		.byte	0xa9
 3771 02b5 95000000 		.4byte	0x95
 3772 02b9 02       		.uleb128 0x2
 3773 02ba 91       		.byte	0x91
 3774 02bb 77       		.sleb128 -9
 3775 02bc 00       		.byte	0
 3776 02bd 12       		.uleb128 0x12
 3777 02be 51060000 		.4byte	.LASF57
 3778 02c2 01       		.byte	0x1
 3779 02c3 AE       		.byte	0xae
 3780 02c4 00000000 		.4byte	.LFB66
 3781 02c8 54000000 		.4byte	.LFE66-.LFB66
 3782 02cc 01       		.uleb128 0x1
 3783 02cd 9C       		.byte	0x9c
 3784 02ce E1020000 		.4byte	0x2e1
 3785 02d2 13       		.uleb128 0x13
 3786 02d3 6D657300 		.ascii	"mes\000"
 3787 02d7 01       		.byte	0x1
 3788 02d8 B3       		.byte	0xb3
 3789 02d9 E1020000 		.4byte	0x2e1
 3790 02dd 02       		.uleb128 0x2
 3791 02de 91       		.byte	0x91
 3792 02df 68       		.sleb128 -24
 3793 02e0 00       		.byte	0
 3794 02e1 0E       		.uleb128 0xe
 3795 02e2 83000000 		.4byte	0x83
 3796 02e6 F1020000 		.4byte	0x2f1
 3797 02ea 0F       		.uleb128 0xf
 3798 02eb 76000000 		.4byte	0x76
 3799 02ef 0F       		.byte	0xf
 3800 02f0 00       		.byte	0
 3801 02f1 10       		.uleb128 0x10
 3802 02f2 6A010000 		.4byte	.LASF58
 3803 02f6 01       		.byte	0x1
 3804 02f7 B8       		.byte	0xb8
 3805 02f8 00000000 		.4byte	.LFB67
 3806 02fc 54010000 		.4byte	.LFE67-.LFB67
 3807 0300 01       		.uleb128 0x1
 3808 0301 9C       		.byte	0x9c
 3809 0302 73030000 		.4byte	0x373
 3810 0306 14       		.uleb128 0x14
 3811 0307 55030000 		.4byte	.LASF59
 3812 030b 01       		.byte	0x1
 3813 030c B8       		.byte	0xb8
 3814 030d D8000000 		.4byte	0xd8
 3815 0311 02       		.uleb128 0x2
 3816 0312 91       		.byte	0x91
 3817 0313 48       		.sleb128 -56
 3818 0314 14       		.uleb128 0x14
 3819 0315 7B050000 		.4byte	.LASF60
 3820 0319 01       		.byte	0x1
 3821 031a B8       		.byte	0xb8
 3822 031b D8000000 		.4byte	0xd8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 83


 3823 031f 02       		.uleb128 0x2
 3824 0320 91       		.byte	0x91
 3825 0321 40       		.sleb128 -64
 3826 0322 0D       		.uleb128 0xd
 3827 0323 97010000 		.4byte	.LASF61
 3828 0327 01       		.byte	0x1
 3829 0328 CD       		.byte	0xcd
 3830 0329 95000000 		.4byte	0x95
 3831 032d 02       		.uleb128 0x2
 3832 032e 91       		.byte	0x91
 3833 032f 77       		.sleb128 -9
 3834 0330 0D       		.uleb128 0xd
 3835 0331 4A040000 		.4byte	.LASF62
 3836 0335 01       		.byte	0x1
 3837 0336 CE       		.byte	0xce
 3838 0337 95000000 		.4byte	0x95
 3839 033b 02       		.uleb128 0x2
 3840 033c 91       		.byte	0x91
 3841 033d 76       		.sleb128 -10
 3842 033e 15       		.uleb128 0x15
 3843 033f 24000000 		.4byte	.LBB3
 3844 0343 46000000 		.4byte	.LBE3-.LBB3
 3845 0347 5A030000 		.4byte	0x35a
 3846 034b 13       		.uleb128 0x13
 3847 034c 6D657300 		.ascii	"mes\000"
 3848 0350 01       		.byte	0x1
 3849 0351 BB       		.byte	0xbb
 3850 0352 E1020000 		.4byte	0x2e1
 3851 0356 02       		.uleb128 0x2
 3852 0357 91       		.byte	0x91
 3853 0358 64       		.sleb128 -28
 3854 0359 00       		.byte	0
 3855 035a 0C       		.uleb128 0xc
 3856 035b 8C000000 		.4byte	.LBB4
 3857 035f 46000000 		.4byte	.LBE4-.LBB4
 3858 0363 13       		.uleb128 0x13
 3859 0364 6D657300 		.ascii	"mes\000"
 3860 0368 01       		.byte	0x1
 3861 0369 C5       		.byte	0xc5
 3862 036a E1020000 		.4byte	0x2e1
 3863 036e 02       		.uleb128 0x2
 3864 036f 91       		.byte	0x91
 3865 0370 54       		.sleb128 -44
 3866 0371 00       		.byte	0
 3867 0372 00       		.byte	0
 3868 0373 16       		.uleb128 0x16
 3869 0374 62060000 		.4byte	.LASF63
 3870 0378 01       		.byte	0x1
 3871 0379 D4       		.byte	0xd4
 3872 037a 00000000 		.4byte	.LFB68
 3873 037e 18000000 		.4byte	.LFE68-.LFB68
 3874 0382 01       		.uleb128 0x1
 3875 0383 9C       		.byte	0x9c
 3876 0384 16       		.uleb128 0x16
 3877 0385 87070000 		.4byte	.LASF64
 3878 0389 01       		.byte	0x1
 3879 038a DA       		.byte	0xda
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 84


 3880 038b 00000000 		.4byte	.LFB69
 3881 038f 18000000 		.4byte	.LFE69-.LFB69
 3882 0393 01       		.uleb128 0x1
 3883 0394 9C       		.byte	0x9c
 3884 0395 16       		.uleb128 0x16
 3885 0396 F9050000 		.4byte	.LASF65
 3886 039a 01       		.byte	0x1
 3887 039b E0       		.byte	0xe0
 3888 039c 00000000 		.4byte	.LFB70
 3889 03a0 22000000 		.4byte	.LFE70-.LFB70
 3890 03a4 01       		.uleb128 0x1
 3891 03a5 9C       		.byte	0x9c
 3892 03a6 16       		.uleb128 0x16
 3893 03a7 B4010000 		.4byte	.LASF66
 3894 03ab 01       		.byte	0x1
 3895 03ac E7       		.byte	0xe7
 3896 03ad 00000000 		.4byte	.LFB71
 3897 03b1 1C000000 		.4byte	.LFE71-.LFB71
 3898 03b5 01       		.uleb128 0x1
 3899 03b6 9C       		.byte	0x9c
 3900 03b7 16       		.uleb128 0x16
 3901 03b8 C2010000 		.4byte	.LASF67
 3902 03bc 01       		.byte	0x1
 3903 03bd EC       		.byte	0xec
 3904 03be 00000000 		.4byte	.LFB72
 3905 03c2 1C000000 		.4byte	.LFE72-.LFB72
 3906 03c6 01       		.uleb128 0x1
 3907 03c7 9C       		.byte	0x9c
 3908 03c8 16       		.uleb128 0x16
 3909 03c9 8D050000 		.4byte	.LASF68
 3910 03cd 01       		.byte	0x1
 3911 03ce F1       		.byte	0xf1
 3912 03cf 00000000 		.4byte	.LFB73
 3913 03d3 1C000000 		.4byte	.LFE73-.LFB73
 3914 03d7 01       		.uleb128 0x1
 3915 03d8 9C       		.byte	0x9c
 3916 03d9 16       		.uleb128 0x16
 3917 03da 22020000 		.4byte	.LASF69
 3918 03de 01       		.byte	0x1
 3919 03df F6       		.byte	0xf6
 3920 03e0 00000000 		.4byte	.LFB74
 3921 03e4 38000000 		.4byte	.LFE74-.LFB74
 3922 03e8 01       		.uleb128 0x1
 3923 03e9 9C       		.byte	0x9c
 3924 03ea 16       		.uleb128 0x16
 3925 03eb 1C050000 		.4byte	.LASF70
 3926 03ef 01       		.byte	0x1
 3927 03f0 FF       		.byte	0xff
 3928 03f1 00000000 		.4byte	.LFB75
 3929 03f5 38000000 		.4byte	.LFE75-.LFB75
 3930 03f9 01       		.uleb128 0x1
 3931 03fa 9C       		.byte	0x9c
 3932 03fb 17       		.uleb128 0x17
 3933 03fc 41010000 		.4byte	.LASF71
 3934 0400 01       		.byte	0x1
 3935 0401 0801     		.2byte	0x108
 3936 0403 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 85


 3937 0407 14000000 		.4byte	.LFE76-.LFB76
 3938 040b 01       		.uleb128 0x1
 3939 040c 9C       		.byte	0x9c
 3940 040d 18       		.uleb128 0x18
 3941 040e 38020000 		.4byte	.LASF72
 3942 0412 01       		.byte	0x1
 3943 0413 0D01     		.2byte	0x10d
 3944 0415 00000000 		.4byte	.LFB77
 3945 0419 18000000 		.4byte	.LFE77-.LFB77
 3946 041d 01       		.uleb128 0x1
 3947 041e 9C       		.byte	0x9c
 3948 041f 18       		.uleb128 0x18
 3949 0420 7E030000 		.4byte	.LASF73
 3950 0424 01       		.byte	0x1
 3951 0425 1101     		.2byte	0x111
 3952 0427 00000000 		.4byte	.LFB78
 3953 042b 18000000 		.4byte	.LFE78-.LFB78
 3954 042f 01       		.uleb128 0x1
 3955 0430 9C       		.byte	0x9c
 3956 0431 18       		.uleb128 0x18
 3957 0432 92070000 		.4byte	.LASF74
 3958 0436 01       		.byte	0x1
 3959 0437 1601     		.2byte	0x116
 3960 0439 00000000 		.4byte	.LFB79
 3961 043d 18000000 		.4byte	.LFE79-.LFB79
 3962 0441 01       		.uleb128 0x1
 3963 0442 9C       		.byte	0x9c
 3964 0443 18       		.uleb128 0x18
 3965 0444 A2010000 		.4byte	.LASF75
 3966 0448 01       		.byte	0x1
 3967 0449 1A01     		.2byte	0x11a
 3968 044b 00000000 		.4byte	.LFB80
 3969 044f 18000000 		.4byte	.LFE80-.LFB80
 3970 0453 01       		.uleb128 0x1
 3971 0454 9C       		.byte	0x9c
 3972 0455 19       		.uleb128 0x19
 3973 0456 AE040000 		.4byte	.LASF76
 3974 045a 01       		.byte	0x1
 3975 045b 1F01     		.2byte	0x11f
 3976 045d 00000000 		.4byte	.LFB81
 3977 0461 98000000 		.4byte	.LFE81-.LFB81
 3978 0465 01       		.uleb128 0x1
 3979 0466 9C       		.byte	0x9c
 3980 0467 7B040000 		.4byte	0x47b
 3981 046b 1A       		.uleb128 0x1a
 3982 046c 27040000 		.4byte	.LASF77
 3983 0470 01       		.byte	0x1
 3984 0471 2001     		.2byte	0x120
 3985 0473 83000000 		.4byte	0x83
 3986 0477 02       		.uleb128 0x2
 3987 0478 91       		.byte	0x91
 3988 0479 6F       		.sleb128 -17
 3989 047a 00       		.byte	0
 3990 047b 19       		.uleb128 0x19
 3991 047c 99040000 		.4byte	.LASF78
 3992 0480 01       		.byte	0x1
 3993 0481 3701     		.2byte	0x137
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 86


 3994 0483 00000000 		.4byte	.LFB82
 3995 0487 F0000000 		.4byte	.LFE82-.LFB82
 3996 048b 01       		.uleb128 0x1
 3997 048c 9C       		.byte	0x9c
 3998 048d A1040000 		.4byte	0x4a1
 3999 0491 1A       		.uleb128 0x1a
 4000 0492 27040000 		.4byte	.LASF77
 4001 0496 01       		.byte	0x1
 4002 0497 3901     		.2byte	0x139
 4003 0499 83000000 		.4byte	0x83
 4004 049d 02       		.uleb128 0x2
 4005 049e 91       		.byte	0x91
 4006 049f 77       		.sleb128 -9
 4007 04a0 00       		.byte	0
 4008 04a1 1B       		.uleb128 0x1b
 4009 04a2 DD060000 		.4byte	.LASF79
 4010 04a6 01       		.byte	0x1
 4011 04a7 5F01     		.2byte	0x15f
 4012 04a9 00000000 		.4byte	.LFB83
 4013 04ad 0C000000 		.4byte	.LFE83-.LFB83
 4014 04b1 01       		.uleb128 0x1
 4015 04b2 9C       		.byte	0x9c
 4016 04b3 1C       		.uleb128 0x1c
 4017 04b4 9F050000 		.4byte	.LASF80
 4018 04b8 01       		.byte	0x1
 4019 04b9 6501     		.2byte	0x165
 4020 04bb 00000000 		.4byte	.LFB84
 4021 04bf 2C000000 		.4byte	.LFE84-.LFB84
 4022 04c3 01       		.uleb128 0x1
 4023 04c4 9C       		.byte	0x9c
 4024 04c5 1C       		.uleb128 0x1c
 4025 04c6 5A010000 		.4byte	.LASF81
 4026 04ca 01       		.byte	0x1
 4027 04cb 6E01     		.2byte	0x16e
 4028 04cd 00000000 		.4byte	.LFB85
 4029 04d1 B8000000 		.4byte	.LFE85-.LFB85
 4030 04d5 01       		.uleb128 0x1
 4031 04d6 9C       		.byte	0x9c
 4032 04d7 1C       		.uleb128 0x1c
 4033 04d8 FB010000 		.4byte	.LASF82
 4034 04dc 01       		.byte	0x1
 4035 04dd 8301     		.2byte	0x183
 4036 04df 00000000 		.4byte	.LFB86
 4037 04e3 78000000 		.4byte	.LFE86-.LFB86
 4038 04e7 01       		.uleb128 0x1
 4039 04e8 9C       		.byte	0x9c
 4040 04e9 1B       		.uleb128 0x1b
 4041 04ea 1D060000 		.4byte	.LASF83
 4042 04ee 01       		.byte	0x1
 4043 04ef 9C01     		.2byte	0x19c
 4044 04f1 00000000 		.4byte	.LFB87
 4045 04f5 20000000 		.4byte	.LFE87-.LFB87
 4046 04f9 01       		.uleb128 0x1
 4047 04fa 9C       		.byte	0x9c
 4048 04fb 1C       		.uleb128 0x1c
 4049 04fc 7F020000 		.4byte	.LASF84
 4050 0500 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 87


 4051 0501 A301     		.2byte	0x1a3
 4052 0503 00000000 		.4byte	.LFB88
 4053 0507 1C000000 		.4byte	.LFE88-.LFB88
 4054 050b 01       		.uleb128 0x1
 4055 050c 9C       		.byte	0x9c
 4056 050d 1C       		.uleb128 0x1c
 4057 050e 90000000 		.4byte	.LASF85
 4058 0512 01       		.byte	0x1
 4059 0513 AC01     		.2byte	0x1ac
 4060 0515 00000000 		.4byte	.LFB89
 4061 0519 0A000000 		.4byte	.LFE89-.LFB89
 4062 051d 01       		.uleb128 0x1
 4063 051e 9C       		.byte	0x9c
 4064 051f 1D       		.uleb128 0x1d
 4065 0520 26000000 		.4byte	.LASF86
 4066 0524 01       		.byte	0x1
 4067 0525 B101     		.2byte	0x1b1
 4068 0527 00000000 		.4byte	.LFB90
 4069 052b 30020000 		.4byte	.LFE90-.LFB90
 4070 052f 01       		.uleb128 0x1
 4071 0530 9C       		.byte	0x9c
 4072 0531 90050000 		.4byte	0x590
 4073 0535 1A       		.uleb128 0x1a
 4074 0536 5F020000 		.4byte	.LASF87
 4075 053a 01       		.byte	0x1
 4076 053b BF01     		.2byte	0x1bf
 4077 053d C5000000 		.4byte	0xc5
 4078 0541 02       		.uleb128 0x2
 4079 0542 91       		.byte	0x91
 4080 0543 5E       		.sleb128 -34
 4081 0544 1A       		.uleb128 0x1a
 4082 0545 2F040000 		.4byte	.LASF88
 4083 0549 01       		.byte	0x1
 4084 054a C001     		.2byte	0x1c0
 4085 054c C5000000 		.4byte	0xc5
 4086 0550 02       		.uleb128 0x2
 4087 0551 91       		.byte	0x91
 4088 0552 5C       		.sleb128 -36
 4089 0553 1A       		.uleb128 0x1a
 4090 0554 DD020000 		.4byte	.LASF89
 4091 0558 01       		.byte	0x1
 4092 0559 C101     		.2byte	0x1c1
 4093 055b D8000000 		.4byte	0xd8
 4094 055f 02       		.uleb128 0x2
 4095 0560 91       		.byte	0x91
 4096 0561 68       		.sleb128 -24
 4097 0562 1A       		.uleb128 0x1a
 4098 0563 59070000 		.4byte	.LASF90
 4099 0567 01       		.byte	0x1
 4100 0568 C201     		.2byte	0x1c2
 4101 056a D8000000 		.4byte	0xd8
 4102 056e 02       		.uleb128 0x2
 4103 056f 91       		.byte	0x91
 4104 0570 60       		.sleb128 -32
 4105 0571 1A       		.uleb128 0x1a
 4106 0572 4B030000 		.4byte	.LASF91
 4107 0576 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 88


 4108 0577 CB01     		.2byte	0x1cb
 4109 0579 68000000 		.4byte	0x68
 4110 057d 02       		.uleb128 0x2
 4111 057e 91       		.byte	0x91
 4112 057f 58       		.sleb128 -40
 4113 0580 1A       		.uleb128 0x1a
 4114 0581 E6060000 		.4byte	.LASF92
 4115 0585 01       		.byte	0x1
 4116 0586 CC01     		.2byte	0x1cc
 4117 0588 68000000 		.4byte	0x68
 4118 058c 02       		.uleb128 0x2
 4119 058d 91       		.byte	0x91
 4120 058e 54       		.sleb128 -44
 4121 058f 00       		.byte	0
 4122 0590 1D       		.uleb128 0x1d
 4123 0591 0A020000 		.4byte	.LASF93
 4124 0595 01       		.byte	0x1
 4125 0596 DA01     		.2byte	0x1da
 4126 0598 00000000 		.4byte	.LFB91
 4127 059c E8000000 		.4byte	.LFE91-.LFB91
 4128 05a0 01       		.uleb128 0x1
 4129 05a1 9C       		.byte	0x9c
 4130 05a2 D2050000 		.4byte	0x5d2
 4131 05a6 1E       		.uleb128 0x1e
 4132 05a7 6E6C00   		.ascii	"nl\000"
 4133 05aa 01       		.byte	0x1
 4134 05ab DE01     		.2byte	0x1de
 4135 05ad 95000000 		.4byte	0x95
 4136 05b1 02       		.uleb128 0x2
 4137 05b2 91       		.byte	0x91
 4138 05b3 77       		.sleb128 -9
 4139 05b4 1E       		.uleb128 0x1e
 4140 05b5 6E7200   		.ascii	"nr\000"
 4141 05b8 01       		.byte	0x1
 4142 05b9 DF01     		.2byte	0x1df
 4143 05bb 95000000 		.4byte	0x95
 4144 05bf 02       		.uleb128 0x2
 4145 05c0 91       		.byte	0x91
 4146 05c1 76       		.sleb128 -10
 4147 05c2 1E       		.uleb128 0x1e
 4148 05c3 6D696400 		.ascii	"mid\000"
 4149 05c7 01       		.byte	0x1
 4150 05c8 E001     		.2byte	0x1e0
 4151 05ca 95000000 		.4byte	0x95
 4152 05ce 02       		.uleb128 0x2
 4153 05cf 91       		.byte	0x91
 4154 05d0 75       		.sleb128 -11
 4155 05d1 00       		.byte	0
 4156 05d2 1D       		.uleb128 0x1d
 4157 05d3 14020000 		.4byte	.LASF94
 4158 05d7 01       		.byte	0x1
 4159 05d8 FC01     		.2byte	0x1fc
 4160 05da 00000000 		.4byte	.LFB92
 4161 05de E8000000 		.4byte	.LFE92-.LFB92
 4162 05e2 01       		.uleb128 0x1
 4163 05e3 9C       		.byte	0x9c
 4164 05e4 14060000 		.4byte	0x614
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 89


 4165 05e8 1E       		.uleb128 0x1e
 4166 05e9 6E6C00   		.ascii	"nl\000"
 4167 05ec 01       		.byte	0x1
 4168 05ed 0002     		.2byte	0x200
 4169 05ef 95000000 		.4byte	0x95
 4170 05f3 02       		.uleb128 0x2
 4171 05f4 91       		.byte	0x91
 4172 05f5 77       		.sleb128 -9
 4173 05f6 1E       		.uleb128 0x1e
 4174 05f7 6E7200   		.ascii	"nr\000"
 4175 05fa 01       		.byte	0x1
 4176 05fb 0102     		.2byte	0x201
 4177 05fd 95000000 		.4byte	0x95
 4178 0601 02       		.uleb128 0x2
 4179 0602 91       		.byte	0x91
 4180 0603 76       		.sleb128 -10
 4181 0604 1E       		.uleb128 0x1e
 4182 0605 6D696400 		.ascii	"mid\000"
 4183 0609 01       		.byte	0x1
 4184 060a 0202     		.2byte	0x202
 4185 060c 95000000 		.4byte	0x95
 4186 0610 02       		.uleb128 0x2
 4187 0611 91       		.byte	0x91
 4188 0612 75       		.sleb128 -11
 4189 0613 00       		.byte	0
 4190 0614 1D       		.uleb128 0x1d
 4191 0615 E5000000 		.4byte	.LASF95
 4192 0619 01       		.byte	0x1
 4193 061a 1E02     		.2byte	0x21e
 4194 061c 00000000 		.4byte	.LFB93
 4195 0620 48010000 		.4byte	.LFE93-.LFB93
 4196 0624 01       		.uleb128 0x1
 4197 0625 9C       		.byte	0x9c
 4198 0626 72060000 		.4byte	0x672
 4199 062a 1E       		.uleb128 0x1e
 4200 062b 6E6C00   		.ascii	"nl\000"
 4201 062e 01       		.byte	0x1
 4202 062f 2202     		.2byte	0x222
 4203 0631 95000000 		.4byte	0x95
 4204 0635 02       		.uleb128 0x2
 4205 0636 91       		.byte	0x91
 4206 0637 77       		.sleb128 -9
 4207 0638 1E       		.uleb128 0x1e
 4208 0639 666C00   		.ascii	"fl\000"
 4209 063c 01       		.byte	0x1
 4210 063d 2302     		.2byte	0x223
 4211 063f 95000000 		.4byte	0x95
 4212 0643 02       		.uleb128 0x2
 4213 0644 91       		.byte	0x91
 4214 0645 76       		.sleb128 -10
 4215 0646 1E       		.uleb128 0x1e
 4216 0647 6E7200   		.ascii	"nr\000"
 4217 064a 01       		.byte	0x1
 4218 064b 2402     		.2byte	0x224
 4219 064d 95000000 		.4byte	0x95
 4220 0651 02       		.uleb128 0x2
 4221 0652 91       		.byte	0x91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 90


 4222 0653 75       		.sleb128 -11
 4223 0654 1E       		.uleb128 0x1e
 4224 0655 667200   		.ascii	"fr\000"
 4225 0658 01       		.byte	0x1
 4226 0659 2502     		.2byte	0x225
 4227 065b 95000000 		.4byte	0x95
 4228 065f 02       		.uleb128 0x2
 4229 0660 91       		.byte	0x91
 4230 0661 74       		.sleb128 -12
 4231 0662 1E       		.uleb128 0x1e
 4232 0663 6D696400 		.ascii	"mid\000"
 4233 0667 01       		.byte	0x1
 4234 0668 2602     		.2byte	0x226
 4235 066a 95000000 		.4byte	0x95
 4236 066e 02       		.uleb128 0x2
 4237 066f 91       		.byte	0x91
 4238 0670 73       		.sleb128 -13
 4239 0671 00       		.byte	0
 4240 0672 1D       		.uleb128 0x1d
 4241 0673 D3020000 		.4byte	.LASF96
 4242 0677 01       		.byte	0x1
 4243 0678 4F02     		.2byte	0x24f
 4244 067a 00000000 		.4byte	.LFB94
 4245 067e C0000000 		.4byte	.LFE94-.LFB94
 4246 0682 01       		.uleb128 0x1
 4247 0683 9C       		.byte	0x9c
 4248 0684 C0060000 		.4byte	0x6c0
 4249 0688 0C       		.uleb128 0xc
 4250 0689 0E000000 		.4byte	.LBB5
 4251 068d 8E000000 		.4byte	.LBE5-.LBB5
 4252 0691 1A       		.uleb128 0x1a
 4253 0692 51020000 		.4byte	.LASF97
 4254 0696 01       		.byte	0x1
 4255 0697 5802     		.2byte	0x258
 4256 0699 D1000000 		.4byte	0xd1
 4257 069d 02       		.uleb128 0x2
 4258 069e 91       		.byte	0x91
 4259 069f 74       		.sleb128 -12
 4260 06a0 1A       		.uleb128 0x1a
 4261 06a1 60040000 		.4byte	.LASF98
 4262 06a5 01       		.byte	0x1
 4263 06a6 5902     		.2byte	0x259
 4264 06a8 C5000000 		.4byte	0xc5
 4265 06ac 02       		.uleb128 0x2
 4266 06ad 91       		.byte	0x91
 4267 06ae 72       		.sleb128 -14
 4268 06af 1A       		.uleb128 0x1a
 4269 06b0 A5020000 		.4byte	.LASF99
 4270 06b4 01       		.byte	0x1
 4271 06b5 5E02     		.2byte	0x25e
 4272 06b7 E1020000 		.4byte	0x2e1
 4273 06bb 02       		.uleb128 0x2
 4274 06bc 91       		.byte	0x91
 4275 06bd 60       		.sleb128 -32
 4276 06be 00       		.byte	0
 4277 06bf 00       		.byte	0
 4278 06c0 1D       		.uleb128 0x1d
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 91


 4279 06c1 48070000 		.4byte	.LASF100
 4280 06c5 01       		.byte	0x1
 4281 06c6 6502     		.2byte	0x265
 4282 06c8 00000000 		.4byte	.LFB95
 4283 06cc B8000000 		.4byte	.LFE95-.LFB95
 4284 06d0 01       		.uleb128 0x1
 4285 06d1 9C       		.byte	0x9c
 4286 06d2 F0060000 		.4byte	0x6f0
 4287 06d6 0C       		.uleb128 0xc
 4288 06d7 0E000000 		.4byte	.LBB6
 4289 06db 86000000 		.4byte	.LBE6-.LBB6
 4290 06df 1A       		.uleb128 0x1a
 4291 06e0 3F050000 		.4byte	.LASF101
 4292 06e4 01       		.byte	0x1
 4293 06e5 6902     		.2byte	0x269
 4294 06e7 E1020000 		.4byte	0x2e1
 4295 06eb 02       		.uleb128 0x2
 4296 06ec 91       		.byte	0x91
 4297 06ed 68       		.sleb128 -24
 4298 06ee 00       		.byte	0
 4299 06ef 00       		.byte	0
 4300 06f0 19       		.uleb128 0x19
 4301 06f1 A7050000 		.4byte	.LASF102
 4302 06f5 01       		.byte	0x1
 4303 06f6 7A02     		.2byte	0x27a
 4304 06f8 00000000 		.4byte	.LFB96
 4305 06fc 4A000000 		.4byte	.LFE96-.LFB96
 4306 0700 01       		.uleb128 0x1
 4307 0701 9C       		.byte	0x9c
 4308 0702 16070000 		.4byte	0x716
 4309 0706 1F       		.uleb128 0x1f
 4310 0707 9A020000 		.4byte	.LASF103
 4311 070b 01       		.byte	0x1
 4312 070c 7A02     		.2byte	0x27a
 4313 070e 16070000 		.4byte	0x716
 4314 0712 02       		.uleb128 0x2
 4315 0713 91       		.byte	0x91
 4316 0714 6C       		.sleb128 -20
 4317 0715 00       		.byte	0
 4318 0716 05       		.uleb128 0x5
 4319 0717 04       		.byte	0x4
 4320 0718 95000000 		.4byte	0x95
 4321 071c 20       		.uleb128 0x20
 4322 071d D8060000 		.4byte	.LASF104
 4323 0721 01       		.byte	0x1
 4324 0722 8302     		.2byte	0x283
 4325 0724 68000000 		.4byte	0x68
 4326 0728 00000000 		.4byte	.LFB97
 4327 072c 24010000 		.4byte	.LFE97-.LFB97
 4328 0730 01       		.uleb128 0x1
 4329 0731 9C       		.byte	0x9c
 4330 0732 50070000 		.4byte	0x750
 4331 0736 0C       		.uleb128 0xc
 4332 0737 5E000000 		.4byte	.LBB7
 4333 073b AA000000 		.4byte	.LBE7-.LBB7
 4334 073f 1A       		.uleb128 0x1a
 4335 0740 EE010000 		.4byte	.LASF105
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 92


 4336 0744 01       		.byte	0x1
 4337 0745 CF02     		.2byte	0x2cf
 4338 0747 50070000 		.4byte	0x750
 4339 074b 02       		.uleb128 0x2
 4340 074c 91       		.byte	0x91
 4341 074d 70       		.sleb128 -16
 4342 074e 00       		.byte	0
 4343 074f 00       		.byte	0
 4344 0750 0E       		.uleb128 0xe
 4345 0751 95000000 		.4byte	0x95
 4346 0755 60070000 		.4byte	0x760
 4347 0759 0F       		.uleb128 0xf
 4348 075a 76000000 		.4byte	0x76
 4349 075e 04       		.byte	0x4
 4350 075f 00       		.byte	0
 4351 0760 19       		.uleb128 0x19
 4352 0761 80050000 		.4byte	.LASF106
 4353 0765 01       		.byte	0x1
 4354 0766 0103     		.2byte	0x301
 4355 0768 00000000 		.4byte	.LFB98
 4356 076c 68000000 		.4byte	.LFE98-.LFB98
 4357 0770 01       		.uleb128 0x1
 4358 0771 9C       		.byte	0x9c
 4359 0772 9D070000 		.4byte	0x79d
 4360 0776 21       		.uleb128 0x21
 4361 0777 7300     		.ascii	"s\000"
 4362 0779 01       		.byte	0x1
 4363 077a 0103     		.2byte	0x301
 4364 077c 7D000000 		.4byte	0x7d
 4365 0780 02       		.uleb128 0x2
 4366 0781 91       		.byte	0x91
 4367 0782 6C       		.sleb128 -20
 4368 0783 0C       		.uleb128 0xc
 4369 0784 10000000 		.4byte	.LBB8
 4370 0788 48000000 		.4byte	.LBE8-.LBB8
 4371 078c 1E       		.uleb128 0x1e
 4372 078d 636E7400 		.ascii	"cnt\000"
 4373 0791 01       		.byte	0x1
 4374 0792 0803     		.2byte	0x308
 4375 0794 AD000000 		.4byte	0xad
 4376 0798 02       		.uleb128 0x2
 4377 0799 91       		.byte	0x91
 4378 079a 74       		.sleb128 -12
 4379 079b 00       		.byte	0
 4380 079c 00       		.byte	0
 4381 079d 19       		.uleb128 0x19
 4382 079e 9C060000 		.4byte	.LASF107
 4383 07a2 01       		.byte	0x1
 4384 07a3 1703     		.2byte	0x317
 4385 07a5 00000000 		.4byte	.LFB99
 4386 07a9 50000000 		.4byte	.LFE99-.LFB99
 4387 07ad 01       		.uleb128 0x1
 4388 07ae 9C       		.byte	0x9c
 4389 07af DA070000 		.4byte	0x7da
 4390 07b3 21       		.uleb128 0x21
 4391 07b4 6300     		.ascii	"c\000"
 4392 07b6 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 93


 4393 07b7 1703     		.2byte	0x317
 4394 07b9 83000000 		.4byte	0x83
 4395 07bd 02       		.uleb128 0x2
 4396 07be 91       		.byte	0x91
 4397 07bf 6F       		.sleb128 -17
 4398 07c0 0C       		.uleb128 0xc
 4399 07c1 12000000 		.4byte	.LBB9
 4400 07c5 2E000000 		.4byte	.LBE9-.LBB9
 4401 07c9 1E       		.uleb128 0x1e
 4402 07ca 636E7400 		.ascii	"cnt\000"
 4403 07ce 01       		.byte	0x1
 4404 07cf 1B03     		.2byte	0x31b
 4405 07d1 AD000000 		.4byte	0xad
 4406 07d5 02       		.uleb128 0x2
 4407 07d6 91       		.byte	0x91
 4408 07d7 74       		.sleb128 -12
 4409 07d8 00       		.byte	0
 4410 07d9 00       		.byte	0
 4411 07da 1D       		.uleb128 0x1d
 4412 07db B0020000 		.4byte	.LASF108
 4413 07df 01       		.byte	0x1
 4414 07e0 2803     		.2byte	0x328
 4415 07e2 00000000 		.4byte	.LFB100
 4416 07e6 3A000000 		.4byte	.LFE100-.LFB100
 4417 07ea 01       		.uleb128 0x1
 4418 07eb 9C       		.byte	0x9c
 4419 07ec FE070000 		.4byte	0x7fe
 4420 07f0 1E       		.uleb128 0x1e
 4421 07f1 6300     		.ascii	"c\000"
 4422 07f3 01       		.byte	0x1
 4423 07f4 2A03     		.2byte	0x32a
 4424 07f6 95000000 		.4byte	0x95
 4425 07fa 02       		.uleb128 0x2
 4426 07fb 91       		.byte	0x91
 4427 07fc 77       		.sleb128 -9
 4428 07fd 00       		.byte	0
 4429 07fe 22       		.uleb128 0x22
 4430 07ff 32050000 		.4byte	.LASF109
 4431 0803 06       		.byte	0x6
 4432 0804 9606     		.2byte	0x696
 4433 0806 0A080000 		.4byte	0x80a
 4434 080a 23       		.uleb128 0x23
 4435 080b 8A000000 		.4byte	0x8a
 4436 080f 24       		.uleb128 0x24
 4437 0810 747300   		.ascii	"ts\000"
 4438 0813 05       		.byte	0x5
 4439 0814 10       		.byte	0x10
 4440 0815 95000000 		.4byte	0x95
 4441 0819 05       		.uleb128 0x5
 4442 081a 03       		.byte	0x3
 4443 081b 00000000 		.4byte	ts
 4444 081f 25       		.uleb128 0x25
 4445 0820 2A060000 		.4byte	.LASF110
 4446 0824 05       		.byte	0x5
 4447 0825 11       		.byte	0x11
 4448 0826 A1000000 		.4byte	0xa1
 4449 082a 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 94


 4450 082b 03       		.byte	0x3
 4451 082c 00000000 		.4byte	ts_enc
 4452 0830 25       		.uleb128 0x25
 4453 0831 4B050000 		.4byte	.LASF111
 4454 0835 05       		.byte	0x5
 4455 0836 12       		.byte	0x12
 4456 0837 A1000000 		.4byte	0xa1
 4457 083b 05       		.uleb128 0x5
 4458 083c 03       		.byte	0x3
 4459 083d 00000000 		.4byte	ts_update
 4460 0841 25       		.uleb128 0x25
 4461 0842 3A040000 		.4byte	.LASF112
 4462 0846 05       		.byte	0x5
 4463 0847 13       		.byte	0x13
 4464 0848 A1000000 		.4byte	0xa1
 4465 084c 05       		.uleb128 0x5
 4466 084d 03       		.byte	0x3
 4467 084e 00000000 		.4byte	ts_speed
 4468 0852 25       		.uleb128 0x25
 4469 0853 C8020000 		.4byte	.LASF113
 4470 0857 05       		.byte	0x5
 4471 0858 14       		.byte	0x14
 4472 0859 A1000000 		.4byte	0xa1
 4473 085d 05       		.uleb128 0x5
 4474 085e 03       		.byte	0x3
 4475 085f 00000000 		.4byte	ts_display
 4476 0863 25       		.uleb128 0x25
 4477 0864 69020000 		.4byte	.LASF114
 4478 0868 05       		.byte	0x5
 4479 0869 16       		.byte	0x16
 4480 086a 95000000 		.4byte	0x95
 4481 086e 05       		.uleb128 0x5
 4482 086f 03       		.byte	0x3
 4483 0870 00000000 		.4byte	flag_ts_enc
 4484 0874 25       		.uleb128 0x25
 4485 0875 42020000 		.4byte	.LASF115
 4486 0879 05       		.byte	0x5
 4487 087a 17       		.byte	0x17
 4488 087b 95000000 		.4byte	0x95
 4489 087f 05       		.uleb128 0x5
 4490 0880 03       		.byte	0x3
 4491 0881 00000000 		.4byte	flag_ts_update
 4492 0885 25       		.uleb128 0x25
 4493 0886 C4040000 		.4byte	.LASF116
 4494 088a 05       		.byte	0x5
 4495 088b 18       		.byte	0x18
 4496 088c 95000000 		.4byte	0x95
 4497 0890 05       		.uleb128 0x5
 4498 0891 03       		.byte	0x3
 4499 0892 00000000 		.4byte	flag_ts_speed
 4500 0896 25       		.uleb128 0x25
 4501 0897 3B060000 		.4byte	.LASF117
 4502 089b 05       		.byte	0x5
 4503 089c 19       		.byte	0x19
 4504 089d 95000000 		.4byte	0x95
 4505 08a1 05       		.uleb128 0x5
 4506 08a2 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 95


 4507 08a3 00000000 		.4byte	flag_ts_display
 4508 08a7 25       		.uleb128 0x25
 4509 08a8 E1040000 		.4byte	.LASF118
 4510 08ac 05       		.byte	0x5
 4511 08ad 1C       		.byte	0x1c
 4512 08ae 95000000 		.4byte	0x95
 4513 08b2 05       		.uleb128 0x5
 4514 08b3 03       		.byte	0x3
 4515 08b4 00000000 		.4byte	flag_rx
 4516 08b8 25       		.uleb128 0x25
 4517 08b9 E2010000 		.4byte	.LASF119
 4518 08bd 05       		.byte	0x5
 4519 08be 1D       		.byte	0x1d
 4520 08bf 95000000 		.4byte	0x95
 4521 08c3 05       		.uleb128 0x5
 4522 08c4 03       		.byte	0x3
 4523 08c5 00000000 		.4byte	flag_packet
 4524 08c9 25       		.uleb128 0x25
 4525 08ca 66070000 		.4byte	.LASF120
 4526 08ce 05       		.byte	0x5
 4527 08cf 1E       		.byte	0x1e
 4528 08d0 95000000 		.4byte	0x95
 4529 08d4 05       		.uleb128 0x5
 4530 08d5 03       		.byte	0x3
 4531 08d6 00000000 		.4byte	flag_KB_string
 4532 08da 25       		.uleb128 0x25
 4533 08db D2040000 		.4byte	.LASF121
 4534 08df 05       		.byte	0x5
 4535 08e0 20       		.byte	0x20
 4536 08e1 95000000 		.4byte	0x95
 4537 08e5 05       		.uleb128 0x5
 4538 08e6 03       		.byte	0x3
 4539 08e7 00000000 		.4byte	dataready_flag
 4540 08eb 25       		.uleb128 0x25
 4541 08ec FD000000 		.4byte	.LASF122
 4542 08f0 05       		.byte	0x5
 4543 08f1 22       		.byte	0x22
 4544 08f2 95000000 		.4byte	0x95
 4545 08f6 05       		.uleb128 0x5
 4546 08f7 03       		.byte	0x3
 4547 08f8 00000000 		.4byte	flag_rf_transmission_active
 4548 08fc 25       		.uleb128 0x25
 4549 08fd 19010000 		.4byte	.LASF123
 4550 0901 05       		.byte	0x5
 4551 0902 23       		.byte	0x23
 4552 0903 95000000 		.4byte	0x95
 4553 0907 05       		.uleb128 0x5
 4554 0908 03       		.byte	0x3
 4555 0909 00000000 		.4byte	flag_print_rf
 4556 090d 25       		.uleb128 0x25
 4557 090e 80040000 		.4byte	.LASF124
 4558 0912 05       		.byte	0x5
 4559 0913 25       		.byte	0x25
 4560 0914 95000000 		.4byte	0x95
 4561 0918 05       		.uleb128 0x5
 4562 0919 03       		.byte	0x3
 4563 091a 00000000 		.4byte	flag_receive_ADC
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 96


 4564 091e 25       		.uleb128 0x25
 4565 091f F3040000 		.4byte	.LASF125
 4566 0923 05       		.byte	0x5
 4567 0924 26       		.byte	0x26
 4568 0925 C5000000 		.4byte	0xc5
 4569 0929 05       		.uleb128 0x5
 4570 092a 03       		.byte	0x3
 4571 092b 00000000 		.4byte	adc_result
 4572 092f 25       		.uleb128 0x25
 4573 0930 00000000 		.4byte	.LASF126
 4574 0934 05       		.byte	0x5
 4575 0935 28       		.byte	0x28
 4576 0936 95000000 		.4byte	0x95
 4577 093a 05       		.uleb128 0x5
 4578 093b 03       		.byte	0x3
 4579 093c 00000000 		.4byte	direction
 4580 0940 25       		.uleb128 0x25
 4581 0941 FE040000 		.4byte	.LASF127
 4582 0945 05       		.byte	0x5
 4583 0946 2C       		.byte	0x2c
 4584 0947 95000000 		.4byte	0x95
 4585 094b 05       		.uleb128 0x5
 4586 094c 03       		.byte	0x3
 4587 094d 00000000 		.4byte	flag_calc_wheelspeed
 4588 0951 25       		.uleb128 0x25
 4589 0952 CD000000 		.4byte	.LASF128
 4590 0956 05       		.byte	0x5
 4591 0957 2D       		.byte	0x2d
 4592 0958 C5000000 		.4byte	0xc5
 4593 095c 05       		.uleb128 0x5
 4594 095d 03       		.byte	0x3
 4595 095e 00000000 		.4byte	quad_count1
 4596 0962 25       		.uleb128 0x25
 4597 0963 D9000000 		.4byte	.LASF129
 4598 0967 05       		.byte	0x5
 4599 0968 2E       		.byte	0x2e
 4600 0969 C5000000 		.4byte	0xc5
 4601 096d 05       		.uleb128 0x5
 4602 096e 03       		.byte	0x3
 4603 096f 00000000 		.4byte	quad_count2
 4604 0973 25       		.uleb128 0x25
 4605 0974 7A060000 		.4byte	.LASF130
 4606 0978 05       		.byte	0x5
 4607 0979 2F       		.byte	0x2f
 4608 097a C5000000 		.4byte	0xc5
 4609 097e 05       		.uleb128 0x5
 4610 097f 03       		.byte	0x3
 4611 0980 00000000 		.4byte	last_quad_count1
 4612 0984 25       		.uleb128 0x25
 4613 0985 8B060000 		.4byte	.LASF131
 4614 0989 05       		.byte	0x5
 4615 098a 30       		.byte	0x30
 4616 098b C5000000 		.4byte	0xc5
 4617 098f 05       		.uleb128 0x5
 4618 0990 03       		.byte	0x3
 4619 0991 00000000 		.4byte	last_quad_count2
 4620 0995 25       		.uleb128 0x25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 97


 4621 0996 10000000 		.4byte	.LASF132
 4622 099a 05       		.byte	0x5
 4623 099b 31       		.byte	0x31
 4624 099c C5000000 		.4byte	0xc5
 4625 09a0 05       		.uleb128 0x5
 4626 09a1 03       		.byte	0x3
 4627 09a2 00000000 		.4byte	quad_diff1
 4628 09a6 25       		.uleb128 0x25
 4629 09a7 1B000000 		.4byte	.LASF133
 4630 09ab 05       		.byte	0x5
 4631 09ac 32       		.byte	0x32
 4632 09ad C5000000 		.4byte	0xc5
 4633 09b1 05       		.uleb128 0x5
 4634 09b2 03       		.byte	0x3
 4635 09b3 00000000 		.4byte	quad_diff2
 4636 09b7 25       		.uleb128 0x25
 4637 09b8 44000000 		.4byte	.LASF134
 4638 09bc 05       		.byte	0x5
 4639 09bd 35       		.byte	0x35
 4640 09be C5000000 		.4byte	0xc5
 4641 09c2 05       		.uleb128 0x5
 4642 09c3 03       		.byte	0x3
 4643 09c4 00000000 		.4byte	start_turn_count
 4644 09c8 25       		.uleb128 0x25
 4645 09c9 B4040000 		.4byte	.LASF135
 4646 09cd 05       		.byte	0x5
 4647 09ce 38       		.byte	0x38
 4648 09cf C5000000 		.4byte	0xc5
 4649 09d3 05       		.uleb128 0x5
 4650 09d4 03       		.byte	0x3
 4651 09d5 00000000 		.4byte	left_duty_cycle
 4652 09d9 25       		.uleb128 0x25
 4653 09da FD060000 		.4byte	.LASF136
 4654 09de 05       		.byte	0x5
 4655 09df 39       		.byte	0x39
 4656 09e0 C5000000 		.4byte	0xc5
 4657 09e4 05       		.uleb128 0x5
 4658 09e5 03       		.byte	0x3
 4659 09e6 00000000 		.4byte	right_duty_cycle
 4660 09ea 25       		.uleb128 0x25
 4661 09eb 5E050000 		.4byte	.LASF137
 4662 09ef 05       		.byte	0x5
 4663 09f0 3C       		.byte	0x3c
 4664 09f1 C5000000 		.4byte	0xc5
 4665 09f5 05       		.uleb128 0x5
 4666 09f6 03       		.byte	0x3
 4667 09f7 00000000 		.4byte	leftSpeedLimit
 4668 09fb 25       		.uleb128 0x25
 4669 09fc F7020000 		.4byte	.LASF138
 4670 0a00 05       		.byte	0x5
 4671 0a01 3D       		.byte	0x3d
 4672 0a02 C5000000 		.4byte	0xc5
 4673 0a06 05       		.uleb128 0x5
 4674 0a07 03       		.byte	0x3
 4675 0a08 00000000 		.4byte	rightSpeedLimit
 4676 0a0c 25       		.uleb128 0x25
 4677 0a0d 31060000 		.4byte	.LASF139
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 98


 4678 0a11 05       		.byte	0x5
 4679 0a12 40       		.byte	0x40
 4680 0a13 95000000 		.4byte	0x95
 4681 0a17 05       		.uleb128 0x5
 4682 0a18 03       		.byte	0x3
 4683 0a19 00000000 		.4byte	brakeFlag
 4684 0a1d 25       		.uleb128 0x25
 4685 0a1e 2F020000 		.4byte	.LASF140
 4686 0a22 05       		.byte	0x5
 4687 0a23 41       		.byte	0x41
 4688 0a24 95000000 		.4byte	0x95
 4689 0a28 05       		.uleb128 0x5
 4690 0a29 03       		.byte	0x3
 4691 0a2a 00000000 		.4byte	portOpen
 4692 0a2e 25       		.uleb128 0x25
 4693 0a2f 38000000 		.4byte	.LASF141
 4694 0a33 05       		.byte	0x5
 4695 0a34 44       		.byte	0x44
 4696 0a35 C5000000 		.4byte	0xc5
 4697 0a39 05       		.uleb128 0x5
 4698 0a3a 03       		.byte	0x3
 4699 0a3b 00000000 		.4byte	prevVoltage
 4700 0a3f 25       		.uleb128 0x25
 4701 0a40 A6000000 		.4byte	.LASF142
 4702 0a44 05       		.byte	0x5
 4703 0a45 45       		.byte	0x45
 4704 0a46 C5000000 		.4byte	0xc5
 4705 0a4a 05       		.uleb128 0x5
 4706 0a4b 03       		.byte	0x3
 4707 0a4c 00000000 		.4byte	prevVoltage2
 4708 0a50 0E       		.uleb128 0xe
 4709 0a51 83000000 		.4byte	0x83
 4710 0a55 600A0000 		.4byte	0xa60
 4711 0a59 0F       		.uleb128 0xf
 4712 0a5a 76000000 		.4byte	0x76
 4713 0a5e 3F       		.byte	0x3f
 4714 0a5f 00       		.byte	0
 4715 0a60 25       		.uleb128 0x25
 4716 0a61 6C060000 		.4byte	.LASF143
 4717 0a65 05       		.byte	0x5
 4718 0a66 4B       		.byte	0x4b
 4719 0a67 500A0000 		.4byte	0xa50
 4720 0a6b 05       		.uleb128 0x5
 4721 0a6c 03       		.byte	0x3
 4722 0a6d 00000000 		.4byte	displaystring
 4723 0a71 25       		.uleb128 0x25
 4724 0a72 18060000 		.4byte	.LASF144
 4725 0a76 05       		.byte	0x5
 4726 0a77 4C       		.byte	0x4c
 4727 0a78 500A0000 		.4byte	0xa50
 4728 0a7c 05       		.uleb128 0x5
 4729 0a7d 03       		.byte	0x3
 4730 0a7e 00000000 		.4byte	line
 4731 0a82 25       		.uleb128 0x25
 4732 0a83 04060000 		.4byte	.LASF145
 4733 0a87 05       		.byte	0x5
 4734 0a88 4C       		.byte	0x4c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 99


 4735 0a89 500A0000 		.4byte	0xa50
 4736 0a8d 05       		.uleb128 0x5
 4737 0a8e 03       		.byte	0x3
 4738 0a8f 00000000 		.4byte	entry
 4739 0a93 0E       		.uleb128 0xe
 4740 0a94 95000000 		.4byte	0x95
 4741 0a98 A30A0000 		.4byte	0xaa3
 4742 0a9c 0F       		.uleb128 0xf
 4743 0a9d 76000000 		.4byte	0x76
 4744 0aa1 3F       		.byte	0x3f
 4745 0aa2 00       		.byte	0
 4746 0aa3 25       		.uleb128 0x25
 4747 0aa4 73010000 		.4byte	.LASF146
 4748 0aa8 05       		.byte	0x5
 4749 0aa9 4D       		.byte	0x4d
 4750 0aaa 930A0000 		.4byte	0xa93
 4751 0aae 05       		.uleb128 0x5
 4752 0aaf 03       		.byte	0x3
 4753 0ab0 00000000 		.4byte	usbBuffer
 4754 0ab4 25       		.uleb128 0x25
 4755 0ab5 69030000 		.4byte	.LASF147
 4756 0ab9 05       		.byte	0x5
 4757 0aba 62       		.byte	0x62
 4758 0abb 42010000 		.4byte	0x142
 4759 0abf 05       		.uleb128 0x5
 4760 0ac0 03       		.byte	0x3
 4761 0ac1 00000000 		.4byte	buffer_state
 4762 0ac5 25       		.uleb128 0x25
 4763 0ac6 7D000000 		.4byte	.LASF148
 4764 0aca 05       		.byte	0x5
 4765 0acb 63       		.byte	0x63
 4766 0acc 42010000 		.4byte	0x142
 4767 0ad0 05       		.uleb128 0x5
 4768 0ad1 03       		.byte	0x3
 4769 0ad2 00000000 		.4byte	system_state
 4770 0ad6 25       		.uleb128 0x25
 4771 0ad7 86020000 		.4byte	.LASF149
 4772 0adb 05       		.byte	0x5
 4773 0adc 65       		.byte	0x65
 4774 0add E6000000 		.4byte	0xe6
 4775 0ae1 05       		.uleb128 0x5
 4776 0ae2 03       		.byte	0x3
 4777 0ae3 00000000 		.4byte	prev_movement_state
 4778 0ae7 25       		.uleb128 0x25
 4779 0ae8 27010000 		.4byte	.LASF150
 4780 0aec 05       		.byte	0x5
 4781 0aed 66       		.byte	0x66
 4782 0aee E6000000 		.4byte	0xe6
 4783 0af2 05       		.uleb128 0x5
 4784 0af3 03       		.byte	0x3
 4785 0af4 00000000 		.4byte	movement_state
 4786 0af8 25       		.uleb128 0x25
 4787 0af9 62000000 		.4byte	.LASF151
 4788 0afd 05       		.byte	0x5
 4789 0afe 67       		.byte	0x67
 4790 0aff 1D010000 		.4byte	0x11d
 4791 0b03 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 100


 4792 0b04 03       		.byte	0x3
 4793 0b05 00000000 		.4byte	track_mode
 4794 0b09 25       		.uleb128 0x25
 4795 0b0a 75020000 		.4byte	.LASF152
 4796 0b0e 05       		.byte	0x5
 4797 0b0f 69       		.byte	0x69
 4798 0b10 95000000 		.4byte	0x95
 4799 0b14 05       		.uleb128 0x5
 4800 0b15 03       		.byte	0x3
 4801 0b16 00000000 		.4byte	byteCount
 4802 0b1a 0E       		.uleb128 0xe
 4803 0b1b 83000000 		.4byte	0x83
 4804 0b1f 2A0B0000 		.4byte	0xb2a
 4805 0b23 0F       		.uleb128 0xf
 4806 0b24 76000000 		.4byte	0x76
 4807 0b28 01       		.byte	0x1
 4808 0b29 00       		.byte	0
 4809 0b2a 25       		.uleb128 0x25
 4810 0b2b E7050000 		.4byte	.LASF153
 4811 0b2f 05       		.byte	0x5
 4812 0b30 6A       		.byte	0x6a
 4813 0b31 1A0B0000 		.4byte	0xb1a
 4814 0b35 05       		.uleb128 0x5
 4815 0b36 03       		.byte	0x3
 4816 0b37 00000000 		.4byte	packet
 4817 0b3b 00       		.byte	0
 4818              		.section	.debug_abbrev,"",%progbits
 4819              	.Ldebug_abbrev0:
 4820 0000 01       		.uleb128 0x1
 4821 0001 11       		.uleb128 0x11
 4822 0002 01       		.byte	0x1
 4823 0003 25       		.uleb128 0x25
 4824 0004 0E       		.uleb128 0xe
 4825 0005 13       		.uleb128 0x13
 4826 0006 0B       		.uleb128 0xb
 4827 0007 03       		.uleb128 0x3
 4828 0008 0E       		.uleb128 0xe
 4829 0009 1B       		.uleb128 0x1b
 4830 000a 0E       		.uleb128 0xe
 4831 000b 55       		.uleb128 0x55
 4832 000c 17       		.uleb128 0x17
 4833 000d 11       		.uleb128 0x11
 4834 000e 01       		.uleb128 0x1
 4835 000f 10       		.uleb128 0x10
 4836 0010 17       		.uleb128 0x17
 4837 0011 00       		.byte	0
 4838 0012 00       		.byte	0
 4839 0013 02       		.uleb128 0x2
 4840 0014 24       		.uleb128 0x24
 4841 0015 00       		.byte	0
 4842 0016 0B       		.uleb128 0xb
 4843 0017 0B       		.uleb128 0xb
 4844 0018 3E       		.uleb128 0x3e
 4845 0019 0B       		.uleb128 0xb
 4846 001a 03       		.uleb128 0x3
 4847 001b 0E       		.uleb128 0xe
 4848 001c 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 101


 4849 001d 00       		.byte	0
 4850 001e 03       		.uleb128 0x3
 4851 001f 16       		.uleb128 0x16
 4852 0020 00       		.byte	0
 4853 0021 03       		.uleb128 0x3
 4854 0022 0E       		.uleb128 0xe
 4855 0023 3A       		.uleb128 0x3a
 4856 0024 0B       		.uleb128 0xb
 4857 0025 3B       		.uleb128 0x3b
 4858 0026 0B       		.uleb128 0xb
 4859 0027 49       		.uleb128 0x49
 4860 0028 13       		.uleb128 0x13
 4861 0029 00       		.byte	0
 4862 002a 00       		.byte	0
 4863 002b 04       		.uleb128 0x4
 4864 002c 24       		.uleb128 0x24
 4865 002d 00       		.byte	0
 4866 002e 0B       		.uleb128 0xb
 4867 002f 0B       		.uleb128 0xb
 4868 0030 3E       		.uleb128 0x3e
 4869 0031 0B       		.uleb128 0xb
 4870 0032 03       		.uleb128 0x3
 4871 0033 08       		.uleb128 0x8
 4872 0034 00       		.byte	0
 4873 0035 00       		.byte	0
 4874 0036 05       		.uleb128 0x5
 4875 0037 0F       		.uleb128 0xf
 4876 0038 00       		.byte	0
 4877 0039 0B       		.uleb128 0xb
 4878 003a 0B       		.uleb128 0xb
 4879 003b 49       		.uleb128 0x49
 4880 003c 13       		.uleb128 0x13
 4881 003d 00       		.byte	0
 4882 003e 00       		.byte	0
 4883 003f 06       		.uleb128 0x6
 4884 0040 16       		.uleb128 0x16
 4885 0041 00       		.byte	0
 4886 0042 03       		.uleb128 0x3
 4887 0043 0E       		.uleb128 0xe
 4888 0044 3A       		.uleb128 0x3a
 4889 0045 0B       		.uleb128 0xb
 4890 0046 3B       		.uleb128 0x3b
 4891 0047 05       		.uleb128 0x5
 4892 0048 49       		.uleb128 0x49
 4893 0049 13       		.uleb128 0x13
 4894 004a 00       		.byte	0
 4895 004b 00       		.byte	0
 4896 004c 07       		.uleb128 0x7
 4897 004d 04       		.uleb128 0x4
 4898 004e 01       		.byte	0x1
 4899 004f 03       		.uleb128 0x3
 4900 0050 0E       		.uleb128 0xe
 4901 0051 0B       		.uleb128 0xb
 4902 0052 0B       		.uleb128 0xb
 4903 0053 3A       		.uleb128 0x3a
 4904 0054 0B       		.uleb128 0xb
 4905 0055 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 102


 4906 0056 0B       		.uleb128 0xb
 4907 0057 01       		.uleb128 0x1
 4908 0058 13       		.uleb128 0x13
 4909 0059 00       		.byte	0
 4910 005a 00       		.byte	0
 4911 005b 08       		.uleb128 0x8
 4912 005c 28       		.uleb128 0x28
 4913 005d 00       		.byte	0
 4914 005e 03       		.uleb128 0x3
 4915 005f 0E       		.uleb128 0xe
 4916 0060 1C       		.uleb128 0x1c
 4917 0061 0D       		.uleb128 0xd
 4918 0062 00       		.byte	0
 4919 0063 00       		.byte	0
 4920 0064 09       		.uleb128 0x9
 4921 0065 13       		.uleb128 0x13
 4922 0066 01       		.byte	0x1
 4923 0067 03       		.uleb128 0x3
 4924 0068 0E       		.uleb128 0xe
 4925 0069 0B       		.uleb128 0xb
 4926 006a 0B       		.uleb128 0xb
 4927 006b 3A       		.uleb128 0x3a
 4928 006c 0B       		.uleb128 0xb
 4929 006d 3B       		.uleb128 0x3b
 4930 006e 0B       		.uleb128 0xb
 4931 006f 01       		.uleb128 0x1
 4932 0070 13       		.uleb128 0x13
 4933 0071 00       		.byte	0
 4934 0072 00       		.byte	0
 4935 0073 0A       		.uleb128 0xa
 4936 0074 0D       		.uleb128 0xd
 4937 0075 00       		.byte	0
 4938 0076 03       		.uleb128 0x3
 4939 0077 0E       		.uleb128 0xe
 4940 0078 3A       		.uleb128 0x3a
 4941 0079 0B       		.uleb128 0xb
 4942 007a 3B       		.uleb128 0x3b
 4943 007b 0B       		.uleb128 0xb
 4944 007c 49       		.uleb128 0x49
 4945 007d 13       		.uleb128 0x13
 4946 007e 38       		.uleb128 0x38
 4947 007f 0B       		.uleb128 0xb
 4948 0080 00       		.byte	0
 4949 0081 00       		.byte	0
 4950 0082 0B       		.uleb128 0xb
 4951 0083 2E       		.uleb128 0x2e
 4952 0084 01       		.byte	0x1
 4953 0085 3F       		.uleb128 0x3f
 4954 0086 19       		.uleb128 0x19
 4955 0087 03       		.uleb128 0x3
 4956 0088 0E       		.uleb128 0xe
 4957 0089 3A       		.uleb128 0x3a
 4958 008a 0B       		.uleb128 0xb
 4959 008b 3B       		.uleb128 0x3b
 4960 008c 0B       		.uleb128 0xb
 4961 008d 11       		.uleb128 0x11
 4962 008e 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 103


 4963 008f 12       		.uleb128 0x12
 4964 0090 06       		.uleb128 0x6
 4965 0091 40       		.uleb128 0x40
 4966 0092 18       		.uleb128 0x18
 4967 0093 9742     		.uleb128 0x2117
 4968 0095 19       		.uleb128 0x19
 4969 0096 01       		.uleb128 0x1
 4970 0097 13       		.uleb128 0x13
 4971 0098 00       		.byte	0
 4972 0099 00       		.byte	0
 4973 009a 0C       		.uleb128 0xc
 4974 009b 0B       		.uleb128 0xb
 4975 009c 01       		.byte	0x1
 4976 009d 11       		.uleb128 0x11
 4977 009e 01       		.uleb128 0x1
 4978 009f 12       		.uleb128 0x12
 4979 00a0 06       		.uleb128 0x6
 4980 00a1 00       		.byte	0
 4981 00a2 00       		.byte	0
 4982 00a3 0D       		.uleb128 0xd
 4983 00a4 34       		.uleb128 0x34
 4984 00a5 00       		.byte	0
 4985 00a6 03       		.uleb128 0x3
 4986 00a7 0E       		.uleb128 0xe
 4987 00a8 3A       		.uleb128 0x3a
 4988 00a9 0B       		.uleb128 0xb
 4989 00aa 3B       		.uleb128 0x3b
 4990 00ab 0B       		.uleb128 0xb
 4991 00ac 49       		.uleb128 0x49
 4992 00ad 13       		.uleb128 0x13
 4993 00ae 02       		.uleb128 0x2
 4994 00af 18       		.uleb128 0x18
 4995 00b0 00       		.byte	0
 4996 00b1 00       		.byte	0
 4997 00b2 0E       		.uleb128 0xe
 4998 00b3 01       		.uleb128 0x1
 4999 00b4 01       		.byte	0x1
 5000 00b5 49       		.uleb128 0x49
 5001 00b6 13       		.uleb128 0x13
 5002 00b7 01       		.uleb128 0x1
 5003 00b8 13       		.uleb128 0x13
 5004 00b9 00       		.byte	0
 5005 00ba 00       		.byte	0
 5006 00bb 0F       		.uleb128 0xf
 5007 00bc 21       		.uleb128 0x21
 5008 00bd 00       		.byte	0
 5009 00be 49       		.uleb128 0x49
 5010 00bf 13       		.uleb128 0x13
 5011 00c0 2F       		.uleb128 0x2f
 5012 00c1 0B       		.uleb128 0xb
 5013 00c2 00       		.byte	0
 5014 00c3 00       		.byte	0
 5015 00c4 10       		.uleb128 0x10
 5016 00c5 2E       		.uleb128 0x2e
 5017 00c6 01       		.byte	0x1
 5018 00c7 3F       		.uleb128 0x3f
 5019 00c8 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 104


 5020 00c9 03       		.uleb128 0x3
 5021 00ca 0E       		.uleb128 0xe
 5022 00cb 3A       		.uleb128 0x3a
 5023 00cc 0B       		.uleb128 0xb
 5024 00cd 3B       		.uleb128 0x3b
 5025 00ce 0B       		.uleb128 0xb
 5026 00cf 27       		.uleb128 0x27
 5027 00d0 19       		.uleb128 0x19
 5028 00d1 11       		.uleb128 0x11
 5029 00d2 01       		.uleb128 0x1
 5030 00d3 12       		.uleb128 0x12
 5031 00d4 06       		.uleb128 0x6
 5032 00d5 40       		.uleb128 0x40
 5033 00d6 18       		.uleb128 0x18
 5034 00d7 9642     		.uleb128 0x2116
 5035 00d9 19       		.uleb128 0x19
 5036 00da 01       		.uleb128 0x1
 5037 00db 13       		.uleb128 0x13
 5038 00dc 00       		.byte	0
 5039 00dd 00       		.byte	0
 5040 00de 11       		.uleb128 0x11
 5041 00df 05       		.uleb128 0x5
 5042 00e0 00       		.byte	0
 5043 00e1 03       		.uleb128 0x3
 5044 00e2 08       		.uleb128 0x8
 5045 00e3 3A       		.uleb128 0x3a
 5046 00e4 0B       		.uleb128 0xb
 5047 00e5 3B       		.uleb128 0x3b
 5048 00e6 0B       		.uleb128 0xb
 5049 00e7 49       		.uleb128 0x49
 5050 00e8 13       		.uleb128 0x13
 5051 00e9 02       		.uleb128 0x2
 5052 00ea 18       		.uleb128 0x18
 5053 00eb 00       		.byte	0
 5054 00ec 00       		.byte	0
 5055 00ed 12       		.uleb128 0x12
 5056 00ee 2E       		.uleb128 0x2e
 5057 00ef 01       		.byte	0x1
 5058 00f0 3F       		.uleb128 0x3f
 5059 00f1 19       		.uleb128 0x19
 5060 00f2 03       		.uleb128 0x3
 5061 00f3 0E       		.uleb128 0xe
 5062 00f4 3A       		.uleb128 0x3a
 5063 00f5 0B       		.uleb128 0xb
 5064 00f6 3B       		.uleb128 0x3b
 5065 00f7 0B       		.uleb128 0xb
 5066 00f8 11       		.uleb128 0x11
 5067 00f9 01       		.uleb128 0x1
 5068 00fa 12       		.uleb128 0x12
 5069 00fb 06       		.uleb128 0x6
 5070 00fc 40       		.uleb128 0x40
 5071 00fd 18       		.uleb128 0x18
 5072 00fe 9642     		.uleb128 0x2116
 5073 0100 19       		.uleb128 0x19
 5074 0101 01       		.uleb128 0x1
 5075 0102 13       		.uleb128 0x13
 5076 0103 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 105


 5077 0104 00       		.byte	0
 5078 0105 13       		.uleb128 0x13
 5079 0106 34       		.uleb128 0x34
 5080 0107 00       		.byte	0
 5081 0108 03       		.uleb128 0x3
 5082 0109 08       		.uleb128 0x8
 5083 010a 3A       		.uleb128 0x3a
 5084 010b 0B       		.uleb128 0xb
 5085 010c 3B       		.uleb128 0x3b
 5086 010d 0B       		.uleb128 0xb
 5087 010e 49       		.uleb128 0x49
 5088 010f 13       		.uleb128 0x13
 5089 0110 02       		.uleb128 0x2
 5090 0111 18       		.uleb128 0x18
 5091 0112 00       		.byte	0
 5092 0113 00       		.byte	0
 5093 0114 14       		.uleb128 0x14
 5094 0115 05       		.uleb128 0x5
 5095 0116 00       		.byte	0
 5096 0117 03       		.uleb128 0x3
 5097 0118 0E       		.uleb128 0xe
 5098 0119 3A       		.uleb128 0x3a
 5099 011a 0B       		.uleb128 0xb
 5100 011b 3B       		.uleb128 0x3b
 5101 011c 0B       		.uleb128 0xb
 5102 011d 49       		.uleb128 0x49
 5103 011e 13       		.uleb128 0x13
 5104 011f 02       		.uleb128 0x2
 5105 0120 18       		.uleb128 0x18
 5106 0121 00       		.byte	0
 5107 0122 00       		.byte	0
 5108 0123 15       		.uleb128 0x15
 5109 0124 0B       		.uleb128 0xb
 5110 0125 01       		.byte	0x1
 5111 0126 11       		.uleb128 0x11
 5112 0127 01       		.uleb128 0x1
 5113 0128 12       		.uleb128 0x12
 5114 0129 06       		.uleb128 0x6
 5115 012a 01       		.uleb128 0x1
 5116 012b 13       		.uleb128 0x13
 5117 012c 00       		.byte	0
 5118 012d 00       		.byte	0
 5119 012e 16       		.uleb128 0x16
 5120 012f 2E       		.uleb128 0x2e
 5121 0130 00       		.byte	0
 5122 0131 3F       		.uleb128 0x3f
 5123 0132 19       		.uleb128 0x19
 5124 0133 03       		.uleb128 0x3
 5125 0134 0E       		.uleb128 0xe
 5126 0135 3A       		.uleb128 0x3a
 5127 0136 0B       		.uleb128 0xb
 5128 0137 3B       		.uleb128 0x3b
 5129 0138 0B       		.uleb128 0xb
 5130 0139 11       		.uleb128 0x11
 5131 013a 01       		.uleb128 0x1
 5132 013b 12       		.uleb128 0x12
 5133 013c 06       		.uleb128 0x6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 106


 5134 013d 40       		.uleb128 0x40
 5135 013e 18       		.uleb128 0x18
 5136 013f 9642     		.uleb128 0x2116
 5137 0141 19       		.uleb128 0x19
 5138 0142 00       		.byte	0
 5139 0143 00       		.byte	0
 5140 0144 17       		.uleb128 0x17
 5141 0145 2E       		.uleb128 0x2e
 5142 0146 00       		.byte	0
 5143 0147 3F       		.uleb128 0x3f
 5144 0148 19       		.uleb128 0x19
 5145 0149 03       		.uleb128 0x3
 5146 014a 0E       		.uleb128 0xe
 5147 014b 3A       		.uleb128 0x3a
 5148 014c 0B       		.uleb128 0xb
 5149 014d 3B       		.uleb128 0x3b
 5150 014e 05       		.uleb128 0x5
 5151 014f 11       		.uleb128 0x11
 5152 0150 01       		.uleb128 0x1
 5153 0151 12       		.uleb128 0x12
 5154 0152 06       		.uleb128 0x6
 5155 0153 40       		.uleb128 0x40
 5156 0154 18       		.uleb128 0x18
 5157 0155 9642     		.uleb128 0x2116
 5158 0157 19       		.uleb128 0x19
 5159 0158 00       		.byte	0
 5160 0159 00       		.byte	0
 5161 015a 18       		.uleb128 0x18
 5162 015b 2E       		.uleb128 0x2e
 5163 015c 00       		.byte	0
 5164 015d 3F       		.uleb128 0x3f
 5165 015e 19       		.uleb128 0x19
 5166 015f 03       		.uleb128 0x3
 5167 0160 0E       		.uleb128 0xe
 5168 0161 3A       		.uleb128 0x3a
 5169 0162 0B       		.uleb128 0xb
 5170 0163 3B       		.uleb128 0x3b
 5171 0164 05       		.uleb128 0x5
 5172 0165 11       		.uleb128 0x11
 5173 0166 01       		.uleb128 0x1
 5174 0167 12       		.uleb128 0x12
 5175 0168 06       		.uleb128 0x6
 5176 0169 40       		.uleb128 0x40
 5177 016a 18       		.uleb128 0x18
 5178 016b 9742     		.uleb128 0x2117
 5179 016d 19       		.uleb128 0x19
 5180 016e 00       		.byte	0
 5181 016f 00       		.byte	0
 5182 0170 19       		.uleb128 0x19
 5183 0171 2E       		.uleb128 0x2e
 5184 0172 01       		.byte	0x1
 5185 0173 3F       		.uleb128 0x3f
 5186 0174 19       		.uleb128 0x19
 5187 0175 03       		.uleb128 0x3
 5188 0176 0E       		.uleb128 0xe
 5189 0177 3A       		.uleb128 0x3a
 5190 0178 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 107


 5191 0179 3B       		.uleb128 0x3b
 5192 017a 05       		.uleb128 0x5
 5193 017b 27       		.uleb128 0x27
 5194 017c 19       		.uleb128 0x19
 5195 017d 11       		.uleb128 0x11
 5196 017e 01       		.uleb128 0x1
 5197 017f 12       		.uleb128 0x12
 5198 0180 06       		.uleb128 0x6
 5199 0181 40       		.uleb128 0x40
 5200 0182 18       		.uleb128 0x18
 5201 0183 9642     		.uleb128 0x2116
 5202 0185 19       		.uleb128 0x19
 5203 0186 01       		.uleb128 0x1
 5204 0187 13       		.uleb128 0x13
 5205 0188 00       		.byte	0
 5206 0189 00       		.byte	0
 5207 018a 1A       		.uleb128 0x1a
 5208 018b 34       		.uleb128 0x34
 5209 018c 00       		.byte	0
 5210 018d 03       		.uleb128 0x3
 5211 018e 0E       		.uleb128 0xe
 5212 018f 3A       		.uleb128 0x3a
 5213 0190 0B       		.uleb128 0xb
 5214 0191 3B       		.uleb128 0x3b
 5215 0192 05       		.uleb128 0x5
 5216 0193 49       		.uleb128 0x49
 5217 0194 13       		.uleb128 0x13
 5218 0195 02       		.uleb128 0x2
 5219 0196 18       		.uleb128 0x18
 5220 0197 00       		.byte	0
 5221 0198 00       		.byte	0
 5222 0199 1B       		.uleb128 0x1b
 5223 019a 2E       		.uleb128 0x2e
 5224 019b 00       		.byte	0
 5225 019c 3F       		.uleb128 0x3f
 5226 019d 19       		.uleb128 0x19
 5227 019e 03       		.uleb128 0x3
 5228 019f 0E       		.uleb128 0xe
 5229 01a0 3A       		.uleb128 0x3a
 5230 01a1 0B       		.uleb128 0xb
 5231 01a2 3B       		.uleb128 0x3b
 5232 01a3 05       		.uleb128 0x5
 5233 01a4 27       		.uleb128 0x27
 5234 01a5 19       		.uleb128 0x19
 5235 01a6 11       		.uleb128 0x11
 5236 01a7 01       		.uleb128 0x1
 5237 01a8 12       		.uleb128 0x12
 5238 01a9 06       		.uleb128 0x6
 5239 01aa 40       		.uleb128 0x40
 5240 01ab 18       		.uleb128 0x18
 5241 01ac 9742     		.uleb128 0x2117
 5242 01ae 19       		.uleb128 0x19
 5243 01af 00       		.byte	0
 5244 01b0 00       		.byte	0
 5245 01b1 1C       		.uleb128 0x1c
 5246 01b2 2E       		.uleb128 0x2e
 5247 01b3 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 108


 5248 01b4 3F       		.uleb128 0x3f
 5249 01b5 19       		.uleb128 0x19
 5250 01b6 03       		.uleb128 0x3
 5251 01b7 0E       		.uleb128 0xe
 5252 01b8 3A       		.uleb128 0x3a
 5253 01b9 0B       		.uleb128 0xb
 5254 01ba 3B       		.uleb128 0x3b
 5255 01bb 05       		.uleb128 0x5
 5256 01bc 27       		.uleb128 0x27
 5257 01bd 19       		.uleb128 0x19
 5258 01be 11       		.uleb128 0x11
 5259 01bf 01       		.uleb128 0x1
 5260 01c0 12       		.uleb128 0x12
 5261 01c1 06       		.uleb128 0x6
 5262 01c2 40       		.uleb128 0x40
 5263 01c3 18       		.uleb128 0x18
 5264 01c4 9642     		.uleb128 0x2116
 5265 01c6 19       		.uleb128 0x19
 5266 01c7 00       		.byte	0
 5267 01c8 00       		.byte	0
 5268 01c9 1D       		.uleb128 0x1d
 5269 01ca 2E       		.uleb128 0x2e
 5270 01cb 01       		.byte	0x1
 5271 01cc 3F       		.uleb128 0x3f
 5272 01cd 19       		.uleb128 0x19
 5273 01ce 03       		.uleb128 0x3
 5274 01cf 0E       		.uleb128 0xe
 5275 01d0 3A       		.uleb128 0x3a
 5276 01d1 0B       		.uleb128 0xb
 5277 01d2 3B       		.uleb128 0x3b
 5278 01d3 05       		.uleb128 0x5
 5279 01d4 11       		.uleb128 0x11
 5280 01d5 01       		.uleb128 0x1
 5281 01d6 12       		.uleb128 0x12
 5282 01d7 06       		.uleb128 0x6
 5283 01d8 40       		.uleb128 0x40
 5284 01d9 18       		.uleb128 0x18
 5285 01da 9642     		.uleb128 0x2116
 5286 01dc 19       		.uleb128 0x19
 5287 01dd 01       		.uleb128 0x1
 5288 01de 13       		.uleb128 0x13
 5289 01df 00       		.byte	0
 5290 01e0 00       		.byte	0
 5291 01e1 1E       		.uleb128 0x1e
 5292 01e2 34       		.uleb128 0x34
 5293 01e3 00       		.byte	0
 5294 01e4 03       		.uleb128 0x3
 5295 01e5 08       		.uleb128 0x8
 5296 01e6 3A       		.uleb128 0x3a
 5297 01e7 0B       		.uleb128 0xb
 5298 01e8 3B       		.uleb128 0x3b
 5299 01e9 05       		.uleb128 0x5
 5300 01ea 49       		.uleb128 0x49
 5301 01eb 13       		.uleb128 0x13
 5302 01ec 02       		.uleb128 0x2
 5303 01ed 18       		.uleb128 0x18
 5304 01ee 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 109


 5305 01ef 00       		.byte	0
 5306 01f0 1F       		.uleb128 0x1f
 5307 01f1 05       		.uleb128 0x5
 5308 01f2 00       		.byte	0
 5309 01f3 03       		.uleb128 0x3
 5310 01f4 0E       		.uleb128 0xe
 5311 01f5 3A       		.uleb128 0x3a
 5312 01f6 0B       		.uleb128 0xb
 5313 01f7 3B       		.uleb128 0x3b
 5314 01f8 05       		.uleb128 0x5
 5315 01f9 49       		.uleb128 0x49
 5316 01fa 13       		.uleb128 0x13
 5317 01fb 02       		.uleb128 0x2
 5318 01fc 18       		.uleb128 0x18
 5319 01fd 00       		.byte	0
 5320 01fe 00       		.byte	0
 5321 01ff 20       		.uleb128 0x20
 5322 0200 2E       		.uleb128 0x2e
 5323 0201 01       		.byte	0x1
 5324 0202 3F       		.uleb128 0x3f
 5325 0203 19       		.uleb128 0x19
 5326 0204 03       		.uleb128 0x3
 5327 0205 0E       		.uleb128 0xe
 5328 0206 3A       		.uleb128 0x3a
 5329 0207 0B       		.uleb128 0xb
 5330 0208 3B       		.uleb128 0x3b
 5331 0209 05       		.uleb128 0x5
 5332 020a 49       		.uleb128 0x49
 5333 020b 13       		.uleb128 0x13
 5334 020c 11       		.uleb128 0x11
 5335 020d 01       		.uleb128 0x1
 5336 020e 12       		.uleb128 0x12
 5337 020f 06       		.uleb128 0x6
 5338 0210 40       		.uleb128 0x40
 5339 0211 18       		.uleb128 0x18
 5340 0212 9642     		.uleb128 0x2116
 5341 0214 19       		.uleb128 0x19
 5342 0215 01       		.uleb128 0x1
 5343 0216 13       		.uleb128 0x13
 5344 0217 00       		.byte	0
 5345 0218 00       		.byte	0
 5346 0219 21       		.uleb128 0x21
 5347 021a 05       		.uleb128 0x5
 5348 021b 00       		.byte	0
 5349 021c 03       		.uleb128 0x3
 5350 021d 08       		.uleb128 0x8
 5351 021e 3A       		.uleb128 0x3a
 5352 021f 0B       		.uleb128 0xb
 5353 0220 3B       		.uleb128 0x3b
 5354 0221 05       		.uleb128 0x5
 5355 0222 49       		.uleb128 0x49
 5356 0223 13       		.uleb128 0x13
 5357 0224 02       		.uleb128 0x2
 5358 0225 18       		.uleb128 0x18
 5359 0226 00       		.byte	0
 5360 0227 00       		.byte	0
 5361 0228 22       		.uleb128 0x22
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 110


 5362 0229 34       		.uleb128 0x34
 5363 022a 00       		.byte	0
 5364 022b 03       		.uleb128 0x3
 5365 022c 0E       		.uleb128 0xe
 5366 022d 3A       		.uleb128 0x3a
 5367 022e 0B       		.uleb128 0xb
 5368 022f 3B       		.uleb128 0x3b
 5369 0230 05       		.uleb128 0x5
 5370 0231 49       		.uleb128 0x49
 5371 0232 13       		.uleb128 0x13
 5372 0233 3F       		.uleb128 0x3f
 5373 0234 19       		.uleb128 0x19
 5374 0235 3C       		.uleb128 0x3c
 5375 0236 19       		.uleb128 0x19
 5376 0237 00       		.byte	0
 5377 0238 00       		.byte	0
 5378 0239 23       		.uleb128 0x23
 5379 023a 35       		.uleb128 0x35
 5380 023b 00       		.byte	0
 5381 023c 49       		.uleb128 0x49
 5382 023d 13       		.uleb128 0x13
 5383 023e 00       		.byte	0
 5384 023f 00       		.byte	0
 5385 0240 24       		.uleb128 0x24
 5386 0241 34       		.uleb128 0x34
 5387 0242 00       		.byte	0
 5388 0243 03       		.uleb128 0x3
 5389 0244 08       		.uleb128 0x8
 5390 0245 3A       		.uleb128 0x3a
 5391 0246 0B       		.uleb128 0xb
 5392 0247 3B       		.uleb128 0x3b
 5393 0248 0B       		.uleb128 0xb
 5394 0249 49       		.uleb128 0x49
 5395 024a 13       		.uleb128 0x13
 5396 024b 3F       		.uleb128 0x3f
 5397 024c 19       		.uleb128 0x19
 5398 024d 02       		.uleb128 0x2
 5399 024e 18       		.uleb128 0x18
 5400 024f 00       		.byte	0
 5401 0250 00       		.byte	0
 5402 0251 25       		.uleb128 0x25
 5403 0252 34       		.uleb128 0x34
 5404 0253 00       		.byte	0
 5405 0254 03       		.uleb128 0x3
 5406 0255 0E       		.uleb128 0xe
 5407 0256 3A       		.uleb128 0x3a
 5408 0257 0B       		.uleb128 0xb
 5409 0258 3B       		.uleb128 0x3b
 5410 0259 0B       		.uleb128 0xb
 5411 025a 49       		.uleb128 0x49
 5412 025b 13       		.uleb128 0x13
 5413 025c 3F       		.uleb128 0x3f
 5414 025d 19       		.uleb128 0x19
 5415 025e 02       		.uleb128 0x2
 5416 025f 18       		.uleb128 0x18
 5417 0260 00       		.byte	0
 5418 0261 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 111


 5419 0262 00       		.byte	0
 5420              		.section	.debug_aranges,"",%progbits
 5421 0000 44010000 		.4byte	0x144
 5422 0004 0200     		.2byte	0x2
 5423 0006 00000000 		.4byte	.Ldebug_info0
 5424 000a 04       		.byte	0x4
 5425 000b 00       		.byte	0
 5426 000c 0000     		.2byte	0
 5427 000e 0000     		.2byte	0
 5428 0010 00000000 		.4byte	.LFB63
 5429 0014 60010000 		.4byte	.LFE63-.LFB63
 5430 0018 00000000 		.4byte	.LFB64
 5431 001c 18000000 		.4byte	.LFE64-.LFB64
 5432 0020 00000000 		.4byte	.LFB65
 5433 0024 18000000 		.4byte	.LFE65-.LFB65
 5434 0028 00000000 		.4byte	.LFB66
 5435 002c 54000000 		.4byte	.LFE66-.LFB66
 5436 0030 00000000 		.4byte	.LFB67
 5437 0034 54010000 		.4byte	.LFE67-.LFB67
 5438 0038 00000000 		.4byte	.LFB68
 5439 003c 18000000 		.4byte	.LFE68-.LFB68
 5440 0040 00000000 		.4byte	.LFB69
 5441 0044 18000000 		.4byte	.LFE69-.LFB69
 5442 0048 00000000 		.4byte	.LFB70
 5443 004c 22000000 		.4byte	.LFE70-.LFB70
 5444 0050 00000000 		.4byte	.LFB71
 5445 0054 1C000000 		.4byte	.LFE71-.LFB71
 5446 0058 00000000 		.4byte	.LFB72
 5447 005c 1C000000 		.4byte	.LFE72-.LFB72
 5448 0060 00000000 		.4byte	.LFB73
 5449 0064 1C000000 		.4byte	.LFE73-.LFB73
 5450 0068 00000000 		.4byte	.LFB74
 5451 006c 38000000 		.4byte	.LFE74-.LFB74
 5452 0070 00000000 		.4byte	.LFB75
 5453 0074 38000000 		.4byte	.LFE75-.LFB75
 5454 0078 00000000 		.4byte	.LFB76
 5455 007c 14000000 		.4byte	.LFE76-.LFB76
 5456 0080 00000000 		.4byte	.LFB77
 5457 0084 18000000 		.4byte	.LFE77-.LFB77
 5458 0088 00000000 		.4byte	.LFB78
 5459 008c 18000000 		.4byte	.LFE78-.LFB78
 5460 0090 00000000 		.4byte	.LFB79
 5461 0094 18000000 		.4byte	.LFE79-.LFB79
 5462 0098 00000000 		.4byte	.LFB80
 5463 009c 18000000 		.4byte	.LFE80-.LFB80
 5464 00a0 00000000 		.4byte	.LFB81
 5465 00a4 98000000 		.4byte	.LFE81-.LFB81
 5466 00a8 00000000 		.4byte	.LFB82
 5467 00ac F0000000 		.4byte	.LFE82-.LFB82
 5468 00b0 00000000 		.4byte	.LFB83
 5469 00b4 0C000000 		.4byte	.LFE83-.LFB83
 5470 00b8 00000000 		.4byte	.LFB84
 5471 00bc 2C000000 		.4byte	.LFE84-.LFB84
 5472 00c0 00000000 		.4byte	.LFB85
 5473 00c4 B8000000 		.4byte	.LFE85-.LFB85
 5474 00c8 00000000 		.4byte	.LFB86
 5475 00cc 78000000 		.4byte	.LFE86-.LFB86
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 112


 5476 00d0 00000000 		.4byte	.LFB87
 5477 00d4 20000000 		.4byte	.LFE87-.LFB87
 5478 00d8 00000000 		.4byte	.LFB88
 5479 00dc 1C000000 		.4byte	.LFE88-.LFB88
 5480 00e0 00000000 		.4byte	.LFB89
 5481 00e4 0A000000 		.4byte	.LFE89-.LFB89
 5482 00e8 00000000 		.4byte	.LFB90
 5483 00ec 30020000 		.4byte	.LFE90-.LFB90
 5484 00f0 00000000 		.4byte	.LFB91
 5485 00f4 E8000000 		.4byte	.LFE91-.LFB91
 5486 00f8 00000000 		.4byte	.LFB92
 5487 00fc E8000000 		.4byte	.LFE92-.LFB92
 5488 0100 00000000 		.4byte	.LFB93
 5489 0104 48010000 		.4byte	.LFE93-.LFB93
 5490 0108 00000000 		.4byte	.LFB94
 5491 010c C0000000 		.4byte	.LFE94-.LFB94
 5492 0110 00000000 		.4byte	.LFB95
 5493 0114 B8000000 		.4byte	.LFE95-.LFB95
 5494 0118 00000000 		.4byte	.LFB96
 5495 011c 4A000000 		.4byte	.LFE96-.LFB96
 5496 0120 00000000 		.4byte	.LFB97
 5497 0124 24010000 		.4byte	.LFE97-.LFB97
 5498 0128 00000000 		.4byte	.LFB98
 5499 012c 68000000 		.4byte	.LFE98-.LFB98
 5500 0130 00000000 		.4byte	.LFB99
 5501 0134 50000000 		.4byte	.LFE99-.LFB99
 5502 0138 00000000 		.4byte	.LFB100
 5503 013c 3A000000 		.4byte	.LFE100-.LFB100
 5504 0140 00000000 		.4byte	0
 5505 0144 00000000 		.4byte	0
 5506              		.section	.debug_ranges,"",%progbits
 5507              	.Ldebug_ranges0:
 5508 0000 00000000 		.4byte	.LFB63
 5509 0004 60010000 		.4byte	.LFE63
 5510 0008 00000000 		.4byte	.LFB64
 5511 000c 18000000 		.4byte	.LFE64
 5512 0010 00000000 		.4byte	.LFB65
 5513 0014 18000000 		.4byte	.LFE65
 5514 0018 00000000 		.4byte	.LFB66
 5515 001c 54000000 		.4byte	.LFE66
 5516 0020 00000000 		.4byte	.LFB67
 5517 0024 54010000 		.4byte	.LFE67
 5518 0028 00000000 		.4byte	.LFB68
 5519 002c 18000000 		.4byte	.LFE68
 5520 0030 00000000 		.4byte	.LFB69
 5521 0034 18000000 		.4byte	.LFE69
 5522 0038 00000000 		.4byte	.LFB70
 5523 003c 22000000 		.4byte	.LFE70
 5524 0040 00000000 		.4byte	.LFB71
 5525 0044 1C000000 		.4byte	.LFE71
 5526 0048 00000000 		.4byte	.LFB72
 5527 004c 1C000000 		.4byte	.LFE72
 5528 0050 00000000 		.4byte	.LFB73
 5529 0054 1C000000 		.4byte	.LFE73
 5530 0058 00000000 		.4byte	.LFB74
 5531 005c 38000000 		.4byte	.LFE74
 5532 0060 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 113


 5533 0064 38000000 		.4byte	.LFE75
 5534 0068 00000000 		.4byte	.LFB76
 5535 006c 14000000 		.4byte	.LFE76
 5536 0070 00000000 		.4byte	.LFB77
 5537 0074 18000000 		.4byte	.LFE77
 5538 0078 00000000 		.4byte	.LFB78
 5539 007c 18000000 		.4byte	.LFE78
 5540 0080 00000000 		.4byte	.LFB79
 5541 0084 18000000 		.4byte	.LFE79
 5542 0088 00000000 		.4byte	.LFB80
 5543 008c 18000000 		.4byte	.LFE80
 5544 0090 00000000 		.4byte	.LFB81
 5545 0094 98000000 		.4byte	.LFE81
 5546 0098 00000000 		.4byte	.LFB82
 5547 009c F0000000 		.4byte	.LFE82
 5548 00a0 00000000 		.4byte	.LFB83
 5549 00a4 0C000000 		.4byte	.LFE83
 5550 00a8 00000000 		.4byte	.LFB84
 5551 00ac 2C000000 		.4byte	.LFE84
 5552 00b0 00000000 		.4byte	.LFB85
 5553 00b4 B8000000 		.4byte	.LFE85
 5554 00b8 00000000 		.4byte	.LFB86
 5555 00bc 78000000 		.4byte	.LFE86
 5556 00c0 00000000 		.4byte	.LFB87
 5557 00c4 20000000 		.4byte	.LFE87
 5558 00c8 00000000 		.4byte	.LFB88
 5559 00cc 1C000000 		.4byte	.LFE88
 5560 00d0 00000000 		.4byte	.LFB89
 5561 00d4 0A000000 		.4byte	.LFE89
 5562 00d8 00000000 		.4byte	.LFB90
 5563 00dc 30020000 		.4byte	.LFE90
 5564 00e0 00000000 		.4byte	.LFB91
 5565 00e4 E8000000 		.4byte	.LFE91
 5566 00e8 00000000 		.4byte	.LFB92
 5567 00ec E8000000 		.4byte	.LFE92
 5568 00f0 00000000 		.4byte	.LFB93
 5569 00f4 48010000 		.4byte	.LFE93
 5570 00f8 00000000 		.4byte	.LFB94
 5571 00fc C0000000 		.4byte	.LFE94
 5572 0100 00000000 		.4byte	.LFB95
 5573 0104 B8000000 		.4byte	.LFE95
 5574 0108 00000000 		.4byte	.LFB96
 5575 010c 4A000000 		.4byte	.LFE96
 5576 0110 00000000 		.4byte	.LFB97
 5577 0114 24010000 		.4byte	.LFE97
 5578 0118 00000000 		.4byte	.LFB98
 5579 011c 68000000 		.4byte	.LFE98
 5580 0120 00000000 		.4byte	.LFB99
 5581 0124 50000000 		.4byte	.LFE99
 5582 0128 00000000 		.4byte	.LFB100
 5583 012c 3A000000 		.4byte	.LFE100
 5584 0130 00000000 		.4byte	0
 5585 0134 00000000 		.4byte	0
 5586              		.section	.debug_line,"",%progbits
 5587              	.Ldebug_line0:
 5588 0000 46060000 		.section	.debug_str,"MS",%progbits,1
 5588      02005501 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 114


 5588      00000201 
 5588      FB0E0D00 
 5588      01010101 
 5589              	.LASF126:
 5590 0000 64697265 		.ascii	"direction\000"
 5590      6374696F 
 5590      6E00
 5591              	.LASF23:
 5592 000a 52545552 		.ascii	"RTURN\000"
 5592      4E00
 5593              	.LASF132:
 5594 0010 71756164 		.ascii	"quad_diff1\000"
 5594      5F646966 
 5594      663100
 5595              	.LASF133:
 5596 001b 71756164 		.ascii	"quad_diff2\000"
 5596      5F646966 
 5596      663200
 5597              	.LASF86:
 5598 0026 51756164 		.ascii	"Quad_Dec_response\000"
 5598      5F446563 
 5598      5F726573 
 5598      706F6E73 
 5598      6500
 5599              	.LASF141:
 5600 0038 70726576 		.ascii	"prevVoltage\000"
 5600      566F6C74 
 5600      61676500 
 5601              	.LASF134:
 5602 0044 73746172 		.ascii	"start_turn_count\000"
 5602      745F7475 
 5602      726E5F63 
 5602      6F756E74 
 5602      00
 5603              	.LASF8:
 5604 0055 756E7369 		.ascii	"unsigned int\000"
 5604      676E6564 
 5604      20696E74 
 5604      00
 5605              	.LASF151:
 5606 0062 74726163 		.ascii	"track_mode\000"
 5606      6B5F6D6F 
 5606      646500
 5607              	.LASF11:
 5608 006d 5F5F696E 		.ascii	"__int32_t\000"
 5608      7433325F 
 5608      7400
 5609              	.LASF17:
 5610 0077 696E7431 		.ascii	"int16\000"
 5610      3600
 5611              	.LASF148:
 5612 007d 73797374 		.ascii	"system_state\000"
 5612      656D5F73 
 5612      74617465 
 5612      00
 5613              	.LASF22:
 5614 008a 4C545552 		.ascii	"LTURN\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 115


 5614      4E00
 5615              	.LASF85:
 5616 0090 6973725F 		.ascii	"isr_adcTimer\000"
 5616      61646354 
 5616      696D6572 
 5616      00
 5617              	.LASF25:
 5618 009d 54524143 		.ascii	"TRACKING\000"
 5618      4B494E47 
 5618      00
 5619              	.LASF142:
 5620 00a6 70726576 		.ascii	"prevVoltage2\000"
 5620      566F6C74 
 5620      61676532 
 5620      00
 5621              	.LASF51:
 5622 00b3 7061636B 		.ascii	"packet_bytes\000"
 5622      65745F62 
 5622      79746573 
 5622      00
 5623              	.LASF47:
 5624 00c0 67325F78 		.ascii	"g2_xpos\000"
 5624      706F7300 
 5625              	.LASF29:
 5626 00c8 6D6F6465 		.ascii	"mode\000"
 5626      00
 5627              	.LASF128:
 5628 00cd 71756164 		.ascii	"quad_count1\000"
 5628      5F636F75 
 5628      6E743100 
 5629              	.LASF129:
 5630 00d9 71756164 		.ascii	"quad_count2\000"
 5630      5F636F75 
 5630      6E743200 
 5631              	.LASF95:
 5632 00e5 74726163 		.ascii	"trackLineU\000"
 5632      6B4C696E 
 5632      655500
 5633              	.LASF33:
 5634 00f0 53515541 		.ascii	"SQUARE_TRACK\000"
 5634      52455F54 
 5634      5241434B 
 5634      00
 5635              	.LASF122:
 5636 00fd 666C6167 		.ascii	"flag_rf_transmission_active\000"
 5636      5F72665F 
 5636      7472616E 
 5636      736D6973 
 5636      73696F6E 
 5637              	.LASF123:
 5638 0119 666C6167 		.ascii	"flag_print_rf\000"
 5638      5F707269 
 5638      6E745F72 
 5638      6600
 5639              	.LASF150:
 5640 0127 6D6F7665 		.ascii	"movement_state\000"
 5640      6D656E74 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 116


 5640      5F737461 
 5640      746500
 5641              	.LASF26:
 5642 0136 54524143 		.ascii	"TRACKING_U\000"
 5642      4B494E47 
 5642      5F5500
 5643              	.LASF71:
 5644 0141 696E6974 		.ascii	"initForward\000"
 5644      466F7277 
 5644      61726400 
 5645              	.LASF50:
 5646 014d 67325F64 		.ascii	"g2_direction\000"
 5646      69726563 
 5646      74696F6E 
 5646      00
 5647              	.LASF81:
 5648 015a 6973725F 		.ascii	"isr_quad1\000"
 5648      71756164 
 5648      3100
 5649              	.LASF18:
 5650 0164 666C6F61 		.ascii	"float\000"
 5650      7400
 5651              	.LASF58:
 5652 016a 73657453 		.ascii	"setSpeed\000"
 5652      70656564 
 5652      00
 5653              	.LASF146:
 5654 0173 75736242 		.ascii	"usbBuffer\000"
 5654      75666665 
 5654      7200
 5655              	.LASF35:
 5656 017d 696E6465 		.ascii	"index\000"
 5656      7800
 5657              	.LASF21:
 5658 0183 44524956 		.ascii	"DRIVE\000"
 5658      4500
 5659              	.LASF53:
 5660 0189 73747269 		.ascii	"string_packet\000"
 5660      6E675F70 
 5660      61636B65 
 5660      7400
 5661              	.LASF61:
 5662 0197 636F756E 		.ascii	"countsLeft\000"
 5662      74734C65 
 5662      667400
 5663              	.LASF75:
 5664 01a2 696E6974 		.ascii	"initTrackLineSoft\000"
 5664      54726163 
 5664      6B4C696E 
 5664      65536F66 
 5664      7400
 5665              	.LASF66:
 5666 01b4 64726976 		.ascii	"driveForwards\000"
 5666      65466F72 
 5666      77617264 
 5666      7300
 5667              	.LASF67:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 117


 5668 01c2 7475726E 		.ascii	"turnLeft\000"
 5668      4C656674 
 5668      00
 5669              	.LASF7:
 5670 01cb 6C6F6E67 		.ascii	"long long unsigned int\000"
 5670      206C6F6E 
 5670      6720756E 
 5670      7369676E 
 5670      65642069 
 5671              	.LASF119:
 5672 01e2 666C6167 		.ascii	"flag_packet\000"
 5672      5F706163 
 5672      6B657400 
 5673              	.LASF105:
 5674 01ee 66726F6E 		.ascii	"frontSensors\000"
 5674      7453656E 
 5674      736F7273 
 5674      00
 5675              	.LASF82:
 5676 01fb 6973725F 		.ascii	"isr_turn_timer\000"
 5676      7475726E 
 5676      5F74696D 
 5676      657200
 5677              	.LASF93:
 5678 020a 74726163 		.ascii	"trackLine\000"
 5678      6B4C696E 
 5678      6500
 5679              	.LASF94:
 5680 0214 74726163 		.ascii	"trackLineSoft\000"
 5680      6B4C696E 
 5680      65536F66 
 5680      7400
 5681              	.LASF69:
 5682 0222 696E6974 		.ascii	"initTurnLeft\000"
 5682      5475726E 
 5682      4C656674 
 5682      00
 5683              	.LASF140:
 5684 022f 706F7274 		.ascii	"portOpen\000"
 5684      4F70656E 
 5684      00
 5685              	.LASF72:
 5686 0238 696E6974 		.ascii	"initBrake\000"
 5686      4272616B 
 5686      6500
 5687              	.LASF115:
 5688 0242 666C6167 		.ascii	"flag_ts_update\000"
 5688      5F74735F 
 5688      75706461 
 5688      746500
 5689              	.LASF97:
 5690 0251 7363616C 		.ascii	"scalingFactor\000"
 5690      696E6746 
 5690      6163746F 
 5690      7200
 5691              	.LASF87:
 5692 025f 6C656674 		.ascii	"leftSpeed\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 118


 5692      53706565 
 5692      6400
 5693              	.LASF114:
 5694 0269 666C6167 		.ascii	"flag_ts_enc\000"
 5694      5F74735F 
 5694      656E6300 
 5695              	.LASF152:
 5696 0275 62797465 		.ascii	"byteCount\000"
 5696      436F756E 
 5696      7400
 5697              	.LASF84:
 5698 027f 62757474 		.ascii	"button\000"
 5698      6F6E00
 5699              	.LASF149:
 5700 0286 70726576 		.ascii	"prev_movement_state\000"
 5700      5F6D6F76 
 5700      656D656E 
 5700      745F7374 
 5700      61746500 
 5701              	.LASF103:
 5702 029a 73656E73 		.ascii	"sensorVals\000"
 5702      6F725661 
 5702      6C7300
 5703              	.LASF99:
 5704 02a5 72657375 		.ascii	"result_str\000"
 5704      6C745F73 
 5704      747200
 5705              	.LASF108:
 5706 02b0 75617274 		.ascii	"uart_set_PWM\000"
 5706      5F736574 
 5706      5F50574D 
 5706      00
 5707              	.LASF37:
 5708 02bd 726F626F 		.ascii	"robot_ypos\000"
 5708      745F7970 
 5708      6F7300
 5709              	.LASF113:
 5710 02c8 74735F64 		.ascii	"ts_display\000"
 5710      6973706C 
 5710      617900
 5711              	.LASF96:
 5712 02d3 7072696E 		.ascii	"print_ADC\000"
 5712      745F4144 
 5712      4300
 5713              	.LASF89:
 5714 02dd 7363616C 		.ascii	"scalingLeft\000"
 5714      696E674C 
 5714      65667400 
 5715              	.LASF10:
 5716 02e9 63686172 		.ascii	"char\000"
 5716      00
 5717              	.LASF41:
 5718 02ee 67305F73 		.ascii	"g0_speed\000"
 5718      70656564 
 5718      00
 5719              	.LASF138:
 5720 02f7 72696768 		.ascii	"rightSpeedLimit\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 119


 5720      74537065 
 5720      65644C69 
 5720      6D697400 
 5721              	.LASF54:
 5722 0307 7365744C 		.ascii	"setLeftDir\000"
 5722      65667444 
 5722      697200
 5723              	.LASF48:
 5724 0312 67325F79 		.ascii	"g2_ypos\000"
 5724      706F7300 
 5725              	.LASF14:
 5726 031a 75696E74 		.ascii	"uint16\000"
 5726      313600
 5727              	.LASF16:
 5728 0321 696E7438 		.ascii	"int8\000"
 5728      00
 5729              	.LASF46:
 5730 0326 67315F64 		.ascii	"g1_direction\000"
 5730      69726563 
 5730      74696F6E 
 5730      00
 5731              	.LASF55:
 5732 0333 73657452 		.ascii	"setRightDir\000"
 5732      69676874 
 5732      44697200 
 5733              	.LASF31:
 5734 033f 43555256 		.ascii	"CURVE_TRACK\000"
 5734      455F5452 
 5734      41434B00 
 5735              	.LASF91:
 5736 034b 696E7465 		.ascii	"interCalc\000"
 5736      7243616C 
 5736      6300
 5737              	.LASF59:
 5738 0355 72696768 		.ascii	"right\000"
 5738      7400
 5739              	.LASF6:
 5740 035b 6C6F6E67 		.ascii	"long long int\000"
 5740      206C6F6E 
 5740      6720696E 
 5740      7400
 5741              	.LASF147:
 5742 0369 62756666 		.ascii	"buffer_state\000"
 5742      65725F73 
 5742      74617465 
 5742      00
 5743              	.LASF43:
 5744 0376 67315F78 		.ascii	"g1_xpos\000"
 5744      706F7300 
 5745              	.LASF73:
 5746 037e 696E6974 		.ascii	"initTrack\000"
 5746      54726163 
 5746      6B00
 5747              	.LASF154:
 5748 0388 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5748      4320342E 
 5748      392E3320 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 120


 5748      32303135 
 5748      30333033 
 5749 03bb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 5749      20726576 
 5749      6973696F 
 5749      6E203232 
 5749      31323230 
 5750 03ee 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5750      66756E63 
 5750      74696F6E 
 5750      2D736563 
 5750      74696F6E 
 5751              	.LASF49:
 5752 0416 67325F73 		.ascii	"g2_speed\000"
 5752      70656564 
 5752      00
 5753              	.LASF40:
 5754 041f 67305F79 		.ascii	"g0_ypos\000"
 5754      706F7300 
 5755              	.LASF77:
 5756 0427 72665F63 		.ascii	"rf_char\000"
 5756      68617200 
 5757              	.LASF88:
 5758 042f 72696768 		.ascii	"rightSpeed\000"
 5758      74537065 
 5758      656400
 5759              	.LASF112:
 5760 043a 74735F73 		.ascii	"ts_speed\000"
 5760      70656564 
 5760      00
 5761              	.LASF15:
 5762 0443 75696E74 		.ascii	"uint32\000"
 5762      333200
 5763              	.LASF62:
 5764 044a 636F756E 		.ascii	"countsRight\000"
 5764      74735269 
 5764      67687400 
 5765              	.LASF157:
 5766 0456 64617461 		.ascii	"data_main\000"
 5766      5F6D6169 
 5766      6E00
 5767              	.LASF98:
 5768 0460 636F6E76 		.ascii	"converted_val\000"
 5768      65727465 
 5768      645F7661 
 5768      6C00
 5769              	.LASF34:
 5770 046e 72737369 		.ascii	"rssi\000"
 5770      00
 5771              	.LASF42:
 5772 0473 67305F64 		.ascii	"g0_direction\000"
 5772      69726563 
 5772      74696F6E 
 5772      00
 5773              	.LASF124:
 5774 0480 666C6167 		.ascii	"flag_receive_ADC\000"
 5774      5F726563 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 121


 5774      65697665 
 5774      5F414443 
 5774      00
 5775              	.LASF24:
 5776 0491 53544F50 		.ascii	"STOPPED\000"
 5776      50454400 
 5777              	.LASF78:
 5778 0499 42545F72 		.ascii	"BT_rxInt\000"
 5778      78496E74 
 5778      00
 5779              	.LASF20:
 5780 04a2 6C6F6E67 		.ascii	"long double\000"
 5780      20646F75 
 5780      626C6500 
 5781              	.LASF76:
 5782 04ae 7278496E 		.ascii	"rxInt\000"
 5782      7400
 5783              	.LASF135:
 5784 04b4 6C656674 		.ascii	"left_duty_cycle\000"
 5784      5F647574 
 5784      795F6379 
 5784      636C6500 
 5785              	.LASF116:
 5786 04c4 666C6167 		.ascii	"flag_ts_speed\000"
 5786      5F74735F 
 5786      73706565 
 5786      6400
 5787              	.LASF121:
 5788 04d2 64617461 		.ascii	"dataready_flag\000"
 5788      72656164 
 5788      795F666C 
 5788      616700
 5789              	.LASF118:
 5790 04e1 666C6167 		.ascii	"flag_rx\000"
 5790      5F727800 
 5791              	.LASF2:
 5792 04e9 73686F72 		.ascii	"short int\000"
 5792      7420696E 
 5792      7400
 5793              	.LASF125:
 5794 04f3 6164635F 		.ascii	"adc_result\000"
 5794      72657375 
 5794      6C7400
 5795              	.LASF127:
 5796 04fe 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 5796      5F63616C 
 5796      635F7768 
 5796      65656C73 
 5796      70656564 
 5797              	.LASF4:
 5798 0513 6C6F6E67 		.ascii	"long int\000"
 5798      20696E74 
 5798      00
 5799              	.LASF70:
 5800 051c 696E6974 		.ascii	"initTurnRight\000"
 5800      5475726E 
 5800      52696768 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 122


 5800      7400
 5801              	.LASF32:
 5802 052a 555F5452 		.ascii	"U_TRACK\000"
 5802      41434B00 
 5803              	.LASF109:
 5804 0532 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5804      52784275 
 5804      66666572 
 5804      00
 5805              	.LASF101:
 5806 053f 7072696E 		.ascii	"printString\000"
 5806      74537472 
 5806      696E6700 
 5807              	.LASF111:
 5808 054b 74735F75 		.ascii	"ts_update\000"
 5808      70646174 
 5808      6500
 5809              	.LASF30:
 5810 0555 4E4F5F54 		.ascii	"NO_TRACK\000"
 5810      5241434B 
 5810      00
 5811              	.LASF137:
 5812 055e 6C656674 		.ascii	"leftSpeedLimit\000"
 5812      53706565 
 5812      644C696D 
 5812      697400
 5813              	.LASF27:
 5814 056d 54524143 		.ascii	"TRACKING_SOFT\000"
 5814      4B494E47 
 5814      5F534F46 
 5814      5400
 5815              	.LASF60:
 5816 057b 6C656674 		.ascii	"left\000"
 5816      00
 5817              	.LASF106:
 5818 0580 75736250 		.ascii	"usbPutString\000"
 5818      75745374 
 5818      72696E67 
 5818      00
 5819              	.LASF68:
 5820 058d 7475726E 		.ascii	"turnRight\000"
 5820      52696768 
 5820      7400
 5821              	.LASF44:
 5822 0597 67315F79 		.ascii	"g1_ypos\000"
 5822      706F7300 
 5823              	.LASF80:
 5824 059f 6164635F 		.ascii	"adc_isr\000"
 5824      69737200 
 5825              	.LASF102:
 5826 05a7 72656164 		.ascii	"readFrontSensors\000"
 5826      46726F6E 
 5826      7453656E 
 5826      736F7273 
 5826      00
 5827              	.LASF9:
 5828 05b8 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 123


 5828      74797065 
 5828      00
 5829              	.LASF5:
 5830 05c1 6C6F6E67 		.ascii	"long unsigned int\000"
 5830      20756E73 
 5830      69676E65 
 5830      6420696E 
 5830      7400
 5831              	.LASF52:
 5832 05d3 62797465 		.ascii	"byte_packet\000"
 5832      5F706163 
 5832      6B657400 
 5833              	.LASF12:
 5834 05df 696E7433 		.ascii	"int32_t\000"
 5834      325F7400 
 5835              	.LASF153:
 5836 05e7 7061636B 		.ascii	"packet\000"
 5836      657400
 5837              	.LASF36:
 5838 05ee 726F626F 		.ascii	"robot_xpos\000"
 5838      745F7870 
 5838      6F7300
 5839              	.LASF65:
 5840 05f9 6272616B 		.ascii	"brakeMotor\000"
 5840      654D6F74 
 5840      6F7200
 5841              	.LASF145:
 5842 0604 656E7472 		.ascii	"entry\000"
 5842      7900
 5843              	.LASF1:
 5844 060a 756E7369 		.ascii	"unsigned char\000"
 5844      676E6564 
 5844      20636861 
 5844      7200
 5845              	.LASF144:
 5846 0618 6C696E65 		.ascii	"line\000"
 5846      00
 5847              	.LASF83:
 5848 061d 53746F70 		.ascii	"Stop_on_line\000"
 5848      5F6F6E5F 
 5848      6C696E65 
 5848      00
 5849              	.LASF110:
 5850 062a 74735F65 		.ascii	"ts_enc\000"
 5850      6E6300
 5851              	.LASF139:
 5852 0631 6272616B 		.ascii	"brakeFlag\000"
 5852      65466C61 
 5852      6700
 5853              	.LASF117:
 5854 063b 666C6167 		.ascii	"flag_ts_display\000"
 5854      5F74735F 
 5854      64697370 
 5854      6C617900 
 5855              	.LASF28:
 5856 064b 73746174 		.ascii	"state\000"
 5856      6500
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 124


 5857              	.LASF57:
 5858 0651 72657665 		.ascii	"reverseDirection\000"
 5858      72736544 
 5858      69726563 
 5858      74696F6E 
 5858      00
 5859              	.LASF63:
 5860 0662 6272616B 		.ascii	"brakeLeft\000"
 5860      654C6566 
 5860      7400
 5861              	.LASF143:
 5862 066c 64697370 		.ascii	"displaystring\000"
 5862      6C617973 
 5862      7472696E 
 5862      6700
 5863              	.LASF130:
 5864 067a 6C617374 		.ascii	"last_quad_count1\000"
 5864      5F717561 
 5864      645F636F 
 5864      756E7431 
 5864      00
 5865              	.LASF131:
 5866 068b 6C617374 		.ascii	"last_quad_count2\000"
 5866      5F717561 
 5866      645F636F 
 5866      756E7432 
 5866      00
 5867              	.LASF107:
 5868 069c 75736250 		.ascii	"usbPutChar\000"
 5868      75744368 
 5868      617200
 5869              	.LASF0:
 5870 06a7 7369676E 		.ascii	"signed char\000"
 5870      65642063 
 5870      68617200 
 5871              	.LASF3:
 5872 06b3 73686F72 		.ascii	"short unsigned int\000"
 5872      7420756E 
 5872      7369676E 
 5872      65642069 
 5872      6E7400
 5873              	.LASF38:
 5874 06c6 726F626F 		.ascii	"robot_orientation\000"
 5874      745F6F72 
 5874      69656E74 
 5874      6174696F 
 5874      6E00
 5875              	.LASF104:
 5876 06d8 6D61696E 		.ascii	"main\000"
 5876      00
 5877              	.LASF79:
 5878 06dd 42545F74 		.ascii	"BT_txInt\000"
 5878      78496E74 
 5878      00
 5879              	.LASF92:
 5880 06e6 6E657874 		.ascii	"nextSpeed\000"
 5880      53706565 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 125


 5880      6400
 5881              	.LASF13:
 5882 06f0 75696E74 		.ascii	"uint8\000"
 5882      3800
 5883              	.LASF19:
 5884 06f6 646F7562 		.ascii	"double\000"
 5884      6C6500
 5885              	.LASF136:
 5886 06fd 72696768 		.ascii	"right_duty_cycle\000"
 5886      745F6475 
 5886      74795F63 
 5886      79636C65 
 5886      00
 5887              	.LASF56:
 5888 070e 68616E64 		.ascii	"handle_rx_binary\000"
 5888      6C655F72 
 5888      785F6269 
 5888      6E617279 
 5888      00
 5889              	.LASF156:
 5890 071f 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 5890      70315C43 
 5890      53333031 
 5890      2D546561 
 5890      6D2D5265 
 5891              	.LASF100:
 5892 0748 7072696E 		.ascii	"print_RF\000"
 5892      745F5246 
 5892      00
 5893              	.LASF39:
 5894 0751 67305F78 		.ascii	"g0_xpos\000"
 5894      706F7300 
 5895              	.LASF90:
 5896 0759 7363616C 		.ascii	"scalingRight\000"
 5896      696E6752 
 5896      69676874 
 5896      00
 5897              	.LASF120:
 5898 0766 666C6167 		.ascii	"flag_KB_string\000"
 5898      5F4B425F 
 5898      73747269 
 5898      6E6700
 5899              	.LASF45:
 5900 0775 67315F73 		.ascii	"g1_speed\000"
 5900      70656564 
 5900      00
 5901              	.LASF155:
 5902 077e 2E5C6D61 		.ascii	".\\main.c\000"
 5902      696E2E63 
 5902      00
 5903              	.LASF64:
 5904 0787 6272616B 		.ascii	"brakeRight\000"
 5904      65526967 
 5904      687400
 5905              	.LASF74:
 5906 0792 696E6974 		.ascii	"initTrackU\000"
 5906      54726163 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cchNU9jw.s 			page 126


 5906      6B5500
 5907              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
