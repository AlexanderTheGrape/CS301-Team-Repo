ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	prevVoltage,2,2
 263              		.comm	prevVoltage2,2,2
 264              		.global	displaystring
 265 0009 000000   		.align	2
 266              		.type	displaystring, %object
 267              		.size	displaystring, 64
 268              	displaystring:
 269 000c 43533330 		.ascii	"CS301 2016\012\000"
 269      31203230 
 269      31360A00 
 270 0018 00000000 		.space	52
 270      00000000 
 270      00000000 
 270      00000000 
 270      00000000 
 271              		.comm	line,64,4
 272              		.comm	entry,64,4
 273              		.comm	usbBuffer,64,4
 274              		.comm	buffer_state,32,4
 275              		.comm	system_state,32,4
 276              		.global	prev_movement_state
 277              		.type	prev_movement_state, %object
 278              		.size	prev_movement_state, 1
 279              	prev_movement_state:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 6


 280 004c 03       		.byte	3
 281              		.global	movement_state
 282              		.type	movement_state, %object
 283              		.size	movement_state, 1
 284              	movement_state:
 285 004d 03       		.byte	3
 286              		.global	track_mode
 287              		.bss
 288              		.type	track_mode, %object
 289              		.size	track_mode, 1
 290              	track_mode:
 291 003c 00       		.space	1
 292              		.global	byteCount
 293              		.type	byteCount, %object
 294              		.size	byteCount, 1
 295              	byteCount:
 296 003d 00       		.space	1
 297              		.comm	packet,2,4
 298              		.global	speed
 299              		.data
 300 004e 0000     		.align	3
 301              		.type	speed, %object
 302              		.size	speed, 8
 303              	speed:
 304 0050 00000000 		.word	0
 305 0054 00002E40 		.word	1076756480
 306              		.comm	tracked_direction,4,4
 307              		.global	instructions
 308              		.bss
 309 003e 0000     		.align	2
 310              		.type	instructions, %object
 311              		.size	instructions, 800
 312              	instructions:
 313 0040 00000000 		.space	800
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	instructionCount
 315              		.align	1
 316              		.type	instructionCount, %object
 317              		.size	instructionCount, 2
 318              	instructionCount:
 319 0360 0000     		.space	2
 320              		.global	instructionLength
 321              		.align	1
 322              		.type	instructionLength, %object
 323              		.size	instructionLength, 2
 324              	instructionLength:
 325 0362 0000     		.space	2
 326              		.global	sensorsDisabled
 327              		.align	2
 328              		.type	sensorsDisabled, %object
 329              		.size	sensorsDisabled, 4
 330              	sensorsDisabled:
 331 0364 00000000 		.space	4
 332              		.global	robot_direction
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 7


 333              		.data
 334              		.align	2
 335              		.type	robot_direction, %object
 336              		.size	robot_direction, 4
 337              	robot_direction:
 338 0058 02000000 		.word	2
 339              		.global	path
 340              		.bss
 341              		.align	2
 342              		.type	path, %object
 343              		.size	path, 9600
 344              	path:
 345 0368 00000000 		.space	9600
 345      00000000 
 345      00000000 
 345      00000000 
 345      00000000 
 346              		.global	start
 347              		.data
 348              		.align	2
 349              		.type	start, %object
 350              		.size	start, 8
 351              	start:
 352 005c 01000000 		.word	1
 353 0060 01000000 		.word	1
 354              		.global	destination
 355              		.align	2
 356              		.type	destination, %object
 357              		.size	destination, 8
 358              	destination:
 359 0064 0D000000 		.word	13
 360 0068 0B000000 		.word	11
 361              		.global	map
 362              		.align	2
 363              		.type	map, %object
 364              		.size	map, 1140
 365              	map:
 366 006c 01000000 		.word	1
 367 0070 01000000 		.word	1
 368 0074 01000000 		.word	1
 369 0078 01000000 		.word	1
 370 007c 01000000 		.word	1
 371 0080 01000000 		.word	1
 372 0084 01000000 		.word	1
 373 0088 01000000 		.word	1
 374 008c 01000000 		.word	1
 375 0090 01000000 		.word	1
 376 0094 01000000 		.word	1
 377 0098 01000000 		.word	1
 378 009c 01000000 		.word	1
 379 00a0 01000000 		.word	1
 380 00a4 01000000 		.word	1
 381 00a8 01000000 		.word	1
 382 00ac 01000000 		.word	1
 383 00b0 01000000 		.word	1
 384 00b4 01000000 		.word	1
 385 00b8 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 8


 386 00bc 00000000 		.word	0
 387 00c0 00000000 		.word	0
 388 00c4 00000000 		.word	0
 389 00c8 00000000 		.word	0
 390 00cc 00000000 		.word	0
 391 00d0 01000000 		.word	1
 392 00d4 00000000 		.word	0
 393 00d8 01000000 		.word	1
 394 00dc 00000000 		.word	0
 395 00e0 00000000 		.word	0
 396 00e4 00000000 		.word	0
 397 00e8 00000000 		.word	0
 398 00ec 00000000 		.word	0
 399 00f0 00000000 		.word	0
 400 00f4 00000000 		.word	0
 401 00f8 00000000 		.word	0
 402 00fc 00000000 		.word	0
 403 0100 01000000 		.word	1
 404 0104 01000000 		.word	1
 405 0108 01000000 		.word	1
 406 010c 01000000 		.word	1
 407 0110 01000000 		.word	1
 408 0114 01000000 		.word	1
 409 0118 00000000 		.word	0
 410 011c 01000000 		.word	1
 411 0120 00000000 		.word	0
 412 0124 01000000 		.word	1
 413 0128 00000000 		.word	0
 414 012c 01000000 		.word	1
 415 0130 00000000 		.word	0
 416 0134 01000000 		.word	1
 417 0138 01000000 		.word	1
 418 013c 01000000 		.word	1
 419 0140 01000000 		.word	1
 420 0144 01000000 		.word	1
 421 0148 00000000 		.word	0
 422 014c 01000000 		.word	1
 423 0150 01000000 		.word	1
 424 0154 00000000 		.word	0
 425 0158 00000000 		.word	0
 426 015c 00000000 		.word	0
 427 0160 01000000 		.word	1
 428 0164 00000000 		.word	0
 429 0168 01000000 		.word	1
 430 016c 00000000 		.word	0
 431 0170 00000000 		.word	0
 432 0174 00000000 		.word	0
 433 0178 01000000 		.word	1
 434 017c 00000000 		.word	0
 435 0180 00000000 		.word	0
 436 0184 00000000 		.word	0
 437 0188 00000000 		.word	0
 438 018c 00000000 		.word	0
 439 0190 01000000 		.word	1
 440 0194 00000000 		.word	0
 441 0198 01000000 		.word	1
 442 019c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 9


 443 01a0 00000000 		.word	0
 444 01a4 01000000 		.word	1
 445 01a8 00000000 		.word	0
 446 01ac 01000000 		.word	1
 447 01b0 00000000 		.word	0
 448 01b4 01000000 		.word	1
 449 01b8 00000000 		.word	0
 450 01bc 01000000 		.word	1
 451 01c0 01000000 		.word	1
 452 01c4 01000000 		.word	1
 453 01c8 01000000 		.word	1
 454 01cc 01000000 		.word	1
 455 01d0 01000000 		.word	1
 456 01d4 01000000 		.word	1
 457 01d8 00000000 		.word	0
 458 01dc 01000000 		.word	1
 459 01e0 00000000 		.word	0
 460 01e4 01000000 		.word	1
 461 01e8 01000000 		.word	1
 462 01ec 00000000 		.word	0
 463 01f0 01000000 		.word	1
 464 01f4 00000000 		.word	0
 465 01f8 00000000 		.word	0
 466 01fc 00000000 		.word	0
 467 0200 00000000 		.word	0
 468 0204 00000000 		.word	0
 469 0208 00000000 		.word	0
 470 020c 00000000 		.word	0
 471 0210 00000000 		.word	0
 472 0214 00000000 		.word	0
 473 0218 00000000 		.word	0
 474 021c 00000000 		.word	0
 475 0220 01000000 		.word	1
 476 0224 00000000 		.word	0
 477 0228 01000000 		.word	1
 478 022c 00000000 		.word	0
 479 0230 01000000 		.word	1
 480 0234 01000000 		.word	1
 481 0238 00000000 		.word	0
 482 023c 01000000 		.word	1
 483 0240 01000000 		.word	1
 484 0244 01000000 		.word	1
 485 0248 01000000 		.word	1
 486 024c 01000000 		.word	1
 487 0250 01000000 		.word	1
 488 0254 01000000 		.word	1
 489 0258 01000000 		.word	1
 490 025c 01000000 		.word	1
 491 0260 00000000 		.word	0
 492 0264 01000000 		.word	1
 493 0268 00000000 		.word	0
 494 026c 01000000 		.word	1
 495 0270 00000000 		.word	0
 496 0274 01000000 		.word	1
 497 0278 01000000 		.word	1
 498 027c 01000000 		.word	1
 499 0280 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 10


 500 0284 00000000 		.word	0
 501 0288 00000000 		.word	0
 502 028c 00000000 		.word	0
 503 0290 00000000 		.word	0
 504 0294 00000000 		.word	0
 505 0298 00000000 		.word	0
 506 029c 00000000 		.word	0
 507 02a0 00000000 		.word	0
 508 02a4 00000000 		.word	0
 509 02a8 00000000 		.word	0
 510 02ac 00000000 		.word	0
 511 02b0 01000000 		.word	1
 512 02b4 00000000 		.word	0
 513 02b8 01000000 		.word	1
 514 02bc 00000000 		.word	0
 515 02c0 00000000 		.word	0
 516 02c4 00000000 		.word	0
 517 02c8 01000000 		.word	1
 518 02cc 01000000 		.word	1
 519 02d0 01000000 		.word	1
 520 02d4 01000000 		.word	1
 521 02d8 01000000 		.word	1
 522 02dc 01000000 		.word	1
 523 02e0 01000000 		.word	1
 524 02e4 01000000 		.word	1
 525 02e8 00000000 		.word	0
 526 02ec 01000000 		.word	1
 527 02f0 01000000 		.word	1
 528 02f4 01000000 		.word	1
 529 02f8 01000000 		.word	1
 530 02fc 01000000 		.word	1
 531 0300 00000000 		.word	0
 532 0304 01000000 		.word	1
 533 0308 01000000 		.word	1
 534 030c 01000000 		.word	1
 535 0310 00000000 		.word	0
 536 0314 01000000 		.word	1
 537 0318 01000000 		.word	1
 538 031c 00000000 		.word	0
 539 0320 00000000 		.word	0
 540 0324 00000000 		.word	0
 541 0328 00000000 		.word	0
 542 032c 00000000 		.word	0
 543 0330 00000000 		.word	0
 544 0334 00000000 		.word	0
 545 0338 00000000 		.word	0
 546 033c 00000000 		.word	0
 547 0340 00000000 		.word	0
 548 0344 00000000 		.word	0
 549 0348 01000000 		.word	1
 550 034c 00000000 		.word	0
 551 0350 00000000 		.word	0
 552 0354 00000000 		.word	0
 553 0358 01000000 		.word	1
 554 035c 00000000 		.word	0
 555 0360 01000000 		.word	1
 556 0364 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 11


 557 0368 00000000 		.word	0
 558 036c 01000000 		.word	1
 559 0370 01000000 		.word	1
 560 0374 01000000 		.word	1
 561 0378 01000000 		.word	1
 562 037c 01000000 		.word	1
 563 0380 00000000 		.word	0
 564 0384 01000000 		.word	1
 565 0388 01000000 		.word	1
 566 038c 01000000 		.word	1
 567 0390 00000000 		.word	0
 568 0394 01000000 		.word	1
 569 0398 00000000 		.word	0
 570 039c 01000000 		.word	1
 571 03a0 00000000 		.word	0
 572 03a4 01000000 		.word	1
 573 03a8 00000000 		.word	0
 574 03ac 01000000 		.word	1
 575 03b0 01000000 		.word	1
 576 03b4 00000000 		.word	0
 577 03b8 00000000 		.word	0
 578 03bc 00000000 		.word	0
 579 03c0 00000000 		.word	0
 580 03c4 00000000 		.word	0
 581 03c8 01000000 		.word	1
 582 03cc 00000000 		.word	0
 583 03d0 00000000 		.word	0
 584 03d4 00000000 		.word	0
 585 03d8 01000000 		.word	1
 586 03dc 00000000 		.word	0
 587 03e0 00000000 		.word	0
 588 03e4 00000000 		.word	0
 589 03e8 01000000 		.word	1
 590 03ec 00000000 		.word	0
 591 03f0 00000000 		.word	0
 592 03f4 00000000 		.word	0
 593 03f8 01000000 		.word	1
 594 03fc 01000000 		.word	1
 595 0400 00000000 		.word	0
 596 0404 01000000 		.word	1
 597 0408 01000000 		.word	1
 598 040c 01000000 		.word	1
 599 0410 00000000 		.word	0
 600 0414 01000000 		.word	1
 601 0418 01000000 		.word	1
 602 041c 01000000 		.word	1
 603 0420 00000000 		.word	0
 604 0424 01000000 		.word	1
 605 0428 01000000 		.word	1
 606 042c 01000000 		.word	1
 607 0430 00000000 		.word	0
 608 0434 01000000 		.word	1
 609 0438 01000000 		.word	1
 610 043c 01000000 		.word	1
 611 0440 00000000 		.word	0
 612 0444 01000000 		.word	1
 613 0448 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 12


 614 044c 00000000 		.word	0
 615 0450 00000000 		.word	0
 616 0454 00000000 		.word	0
 617 0458 01000000 		.word	1
 618 045c 00000000 		.word	0
 619 0460 00000000 		.word	0
 620 0464 00000000 		.word	0
 621 0468 00000000 		.word	0
 622 046c 00000000 		.word	0
 623 0470 00000000 		.word	0
 624 0474 00000000 		.word	0
 625 0478 01000000 		.word	1
 626 047c 00000000 		.word	0
 627 0480 00000000 		.word	0
 628 0484 00000000 		.word	0
 629 0488 00000000 		.word	0
 630 048c 00000000 		.word	0
 631 0490 01000000 		.word	1
 632 0494 01000000 		.word	1
 633 0498 01000000 		.word	1
 634 049c 01000000 		.word	1
 635 04a0 01000000 		.word	1
 636 04a4 01000000 		.word	1
 637 04a8 01000000 		.word	1
 638 04ac 01000000 		.word	1
 639 04b0 01000000 		.word	1
 640 04b4 01000000 		.word	1
 641 04b8 01000000 		.word	1
 642 04bc 01000000 		.word	1
 643 04c0 01000000 		.word	1
 644 04c4 01000000 		.word	1
 645 04c8 01000000 		.word	1
 646 04cc 01000000 		.word	1
 647 04d0 01000000 		.word	1
 648 04d4 01000000 		.word	1
 649 04d8 01000000 		.word	1
 650 04dc 01000000 		.word	1
 651              		.global	food_list
 652              		.align	2
 653              		.type	food_list, %object
 654              		.size	food_list, 48
 655              	food_list:
 656 04e0 05000000 		.word	5
 657 04e4 0A000000 		.word	10
 658 04e8 05000000 		.word	5
 659 04ec 03000000 		.word	3
 660 04f0 0D000000 		.word	13
 661 04f4 02000000 		.word	2
 662 04f8 00000000 		.space	24
 662      00000000 
 662      00000000 
 662      00000000 
 662      00000000 
 663              		.global	food_length
 664              		.align	2
 665              		.type	food_length, %object
 666              		.size	food_length, 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 13


 667              	food_length:
 668 0510 03000000 		.word	3
 669 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 670              		.align	2
 671              		.global	BT_txInt
 672              		.thumb
 673              		.thumb_func
 674              		.type	BT_txInt, %function
 675              	BT_txInt:
 676              	.LFB63:
 677              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 134
  29:.\main.c      **** 
  30:.\main.c      **** #define U_DEADZONE 90000
  31:.\main.c      **** #define TURN_DEADZONE 50000
  32:.\main.c      **** #define S_DEADZONE 10000
  33:.\main.c      **** #define QUAD_PER_UNIT 142
  34:.\main.c      **** 
  35:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  36:.\main.c      **** uint16 instructionCount = 0;
  37:.\main.c      **** uint16 instructionLength = 0;
  38:.\main.c      **** uint32_t sensorsDisabled = 0;
  39:.\main.c      **** 
  40:.\main.c      **** uint32_t robot_direction = 2;
  41:.\main.c      **** 
  42:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  43:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  44:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  45:.\main.c      **** 
  46:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 14


  47:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  48:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  49:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  50:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  51:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  52:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  53:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  54:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  56:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  57:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  58:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  59:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  60:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  61:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  62:.\main.c      **** 
  63:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  64:.\main.c      **** //first number is the y coord, second is x
  65:.\main.c      **** //first number is row, second column
  66:.\main.c      **** 
  67:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  68:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  69:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}};
  70:.\main.c      **** uint32_t food_length = 3;
  71:.\main.c      **** 
  72:.\main.c      **** void changeToRF();
  73:.\main.c      **** void changeToBT();
  74:.\main.c      **** void brakeMotor();
  75:.\main.c      **** void driveForwards();
  76:.\main.c      **** void initTurnLeft();
  77:.\main.c      **** void initTurnRight();
  78:.\main.c      **** void inittrackLineZ();
  79:.\main.c      **** void trackLineU();
  80:.\main.c      **** void trackLine();
  81:.\main.c      **** void trackLineZ();
  82:.\main.c      **** void initTrackU();
  83:.\main.c      **** void turnLeft();
  84:.\main.c      **** void turnRight();
  85:.\main.c      **** void initForward();
  86:.\main.c      **** void initTurnU();
  87:.\main.c      **** void turnU();
  88:.\main.c      **** void initBrake();
  89:.\main.c      **** void print_ADC();
  90:.\main.c      **** void Quad_Dec_response();
  91:.\main.c      **** void handle_rx_binary();
  92:.\main.c      **** void readFrontSensors();
  93:.\main.c      **** void print_RF();
  94:.\main.c      **** 
  95:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  96:.\main.c      **** //BT
  97:.\main.c      **** CY_ISR(BT_txInt)
  98:.\main.c      **** {
 678              		.loc 1 98 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682              		@ link register save eliminated.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 15


 683 0000 80B4     		push	{r7}
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
  99:.\main.c      ****     
 100:.\main.c      **** }
 688              		.loc 1 100 0
 689 0004 BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0006 5DF8047B 		ldr	r7, [sp], #4
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 000a 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE63:
 698              		.size	BT_txInt, .-BT_txInt
 699              		.section	.text.adc_isr,"ax",%progbits
 700              		.align	2
 701              		.global	adc_isr
 702              		.thumb
 703              		.thumb_func
 704              		.type	adc_isr, %function
 705              	adc_isr:
 706              	.LFB64:
 101:.\main.c      **** 
 102:.\main.c      **** //ADC:
 103:.\main.c      **** CY_ISR (adc_isr)
 104:.\main.c      **** {
 707              		.loc 1 104 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 105:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 106:.\main.c      ****     adc_result = ADC_GetResult16();
 717              		.loc 1 106 0
 718 0004 FFF7FEFF 		bl	ADC_GetResult16
 719 0008 0346     		mov	r3, r0
 720 000a 1A46     		mov	r2, r3
 721 000c 044B     		ldr	r3, .L3
 722 000e 1A80     		strh	r2, [r3]	@ movhi
 107:.\main.c      ****     flag_receive_ADC = 1;
 723              		.loc 1 107 0
 724 0010 044B     		ldr	r3, .L3+4
 725 0012 0122     		movs	r2, #1
 726 0014 1A70     		strb	r2, [r3]
 108:.\main.c      ****     flag_print_rf = 1;
 727              		.loc 1 108 0
 728 0016 044B     		ldr	r3, .L3+8
 729 0018 0122     		movs	r2, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 16


 730 001a 1A70     		strb	r2, [r3]
 109:.\main.c      ****     //LED_Write(~LED_Read());
 110:.\main.c      **** }
 731              		.loc 1 110 0
 732 001c 80BD     		pop	{r7, pc}
 733              	.L4:
 734 001e 00BF     		.align	2
 735              	.L3:
 736 0020 00000000 		.word	adc_result
 737 0024 00000000 		.word	flag_receive_ADC
 738 0028 00000000 		.word	flag_print_rf
 739              		.cfi_endproc
 740              	.LFE64:
 741              		.size	adc_isr, .-adc_isr
 742              		.global	__aeabi_i2d
 743              		.global	__aeabi_dsub
 744              		.global	__aeabi_dcmpge
 745              		.global	__aeabi_dadd
 746              		.section	.text.isr_quad1,"ax",%progbits
 747              		.align	2
 748              		.global	isr_quad1
 749              		.thumb
 750              		.thumb_func
 751              		.type	isr_quad1, %function
 752              	isr_quad1:
 753              	.LFB65:
 111:.\main.c      **** 
 112:.\main.c      **** CY_ISR (isr_quad1)
 113:.\main.c      **** {
 754              		.loc 1 113 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 B0B5     		push	{r4, r5, r7, lr}
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 4, -16
 761              		.cfi_offset 5, -12
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 114:.\main.c      ****     
 115:.\main.c      ****     //LED_Write(~LED_Read());
 116:.\main.c      ****     last_quad_count1 = quad_count1;
 766              		.loc 1 116 0
 767 0004 5A4B     		ldr	r3, .L13+8
 768 0006 1A88     		ldrh	r2, [r3]
 769 0008 5A4B     		ldr	r3, .L13+12
 770 000a 1A80     		strh	r2, [r3]	@ movhi
 117:.\main.c      ****     last_quad_count2 = quad_count2;
 771              		.loc 1 117 0
 772 000c 5A4B     		ldr	r3, .L13+16
 773 000e 1A88     		ldrh	r2, [r3]
 774 0010 5A4B     		ldr	r3, .L13+20
 775 0012 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 776              		.loc 1 118 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 17


 777 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 778 0018 0346     		mov	r3, r0
 779 001a 1A46     		mov	r2, r3
 780 001c 544B     		ldr	r3, .L13+8
 781 001e 1A80     		strh	r2, [r3]	@ movhi
 119:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 782              		.loc 1 119 0
 783 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 784 0024 0346     		mov	r3, r0
 785 0026 1A46     		mov	r2, r3
 786 0028 534B     		ldr	r3, .L13+16
 787 002a 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 788              		.loc 1 120 0
 789 002c 504B     		ldr	r3, .L13+8
 790 002e 1B88     		ldrh	r3, [r3]
 791 0030 9AB2     		uxth	r2, r3
 792 0032 504B     		ldr	r3, .L13+12
 793 0034 1B88     		ldrh	r3, [r3]
 794 0036 9BB2     		uxth	r3, r3
 795 0038 D31A     		subs	r3, r2, r3
 796 003a 9BB2     		uxth	r3, r3
 797 003c 9AB2     		uxth	r2, r3
 798 003e 504B     		ldr	r3, .L13+24
 799 0040 1A80     		strh	r2, [r3]	@ movhi
 121:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 800              		.loc 1 121 0
 801 0042 4D4B     		ldr	r3, .L13+16
 802 0044 1B88     		ldrh	r3, [r3]
 803 0046 9AB2     		uxth	r2, r3
 804 0048 4C4B     		ldr	r3, .L13+20
 805 004a 1B88     		ldrh	r3, [r3]
 806 004c 9BB2     		uxth	r3, r3
 807 004e D31A     		subs	r3, r2, r3
 808 0050 9BB2     		uxth	r3, r3
 809 0052 9AB2     		uxth	r2, r3
 810 0054 4B4B     		ldr	r3, .L13+28
 811 0056 1A80     		strh	r2, [r3]	@ movhi
 122:.\main.c      ****     
 123:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 812              		.loc 1 123 0
 813 0058 454B     		ldr	r3, .L13+8
 814 005a 1B88     		ldrh	r3, [r3]
 815 005c 1BB2     		sxth	r3, r3
 816 005e 002B     		cmp	r3, #0
 817 0060 B8BF     		it	lt
 818 0062 5B42     		rsblt	r3, r3, #0
 819 0064 40F6B832 		movw	r2, #3000
 820 0068 9342     		cmp	r3, r2
 821 006a 17DD     		ble	.L6
 822              		.loc 1 123 0 is_stmt 0 discriminator 1
 823 006c 464B     		ldr	r3, .L13+32
 824 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 0070 012B     		cmp	r3, #1
 826 0072 13D0     		beq	.L6
 827              		.loc 1 123 0 discriminator 2
 828 0074 444B     		ldr	r3, .L13+32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 18


 829 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0078 022B     		cmp	r3, #2
 831 007a 0FD0     		beq	.L6
 832              		.loc 1 123 0 discriminator 3
 833 007c 424B     		ldr	r3, .L13+32
 834 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 0080 072B     		cmp	r3, #7
 836 0082 0BD0     		beq	.L6
 124:.\main.c      ****     {
 125:.\main.c      ****         QuadDec_M1_SetCounter(0);
 837              		.loc 1 125 0 is_stmt 1
 838 0084 0020     		movs	r0, #0
 839 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 126:.\main.c      ****         QuadDec_M2_SetCounter(0);
 840              		.loc 1 126 0
 841 008a 0020     		movs	r0, #0
 842 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 127:.\main.c      ****         quad_count1 = 0;
 843              		.loc 1 127 0
 844 0090 374B     		ldr	r3, .L13+8
 845 0092 0022     		movs	r2, #0
 846 0094 1A80     		strh	r2, [r3]	@ movhi
 128:.\main.c      ****         quad_count2 = 0;
 847              		.loc 1 128 0
 848 0096 384B     		ldr	r3, .L13+16
 849 0098 0022     		movs	r2, #0
 850 009a 1A80     		strh	r2, [r3]	@ movhi
 851              	.L6:
 129:.\main.c      ****     }
 130:.\main.c      **** 
 131:.\main.c      ****     flag_calc_wheelspeed = 1;
 852              		.loc 1 131 0
 853 009c 3B4B     		ldr	r3, .L13+36
 854 009e 0122     		movs	r2, #1
 855 00a0 1A70     		strb	r2, [r3]
 132:.\main.c      ****     
 133:.\main.c      ****     
 134:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 856              		.loc 1 134 0
 857 00a2 3B4B     		ldr	r3, .L13+40
 858 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 00a6 062B     		cmp	r3, #6
 860 00a8 5AD1     		bne	.L5
 861              		.loc 1 134 0 is_stmt 0 discriminator 1
 862 00aa 374B     		ldr	r3, .L13+32
 863 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 00ae 062B     		cmp	r3, #6
 865 00b0 56D1     		bne	.L5
 135:.\main.c      ****     {
 136:.\main.c      ****         //track the distance
 137:.\main.c      ****         accum_dist += quad_diff1;
 866              		.loc 1 137 0 is_stmt 1
 867 00b2 384B     		ldr	r3, .L13+44
 868 00b4 1B88     		ldrh	r3, [r3]
 869 00b6 9AB2     		uxth	r2, r3
 870 00b8 314B     		ldr	r3, .L13+24
 871 00ba 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 19


 872 00bc 9BB2     		uxth	r3, r3
 873 00be 1344     		add	r3, r3, r2
 874 00c0 9BB2     		uxth	r3, r3
 875 00c2 9AB2     		uxth	r2, r3
 876 00c4 334B     		ldr	r3, .L13+44
 877 00c6 1A80     		strh	r2, [r3]	@ movhi
 138:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 878              		.loc 1 138 0
 879 00c8 324B     		ldr	r3, .L13+44
 880 00ca 1B88     		ldrh	r3, [r3]
 881 00cc 1BB2     		sxth	r3, r3
 882 00ce 002B     		cmp	r3, #0
 883 00d0 B8BF     		it	lt
 884 00d2 5B42     		rsblt	r3, r3, #0
 885 00d4 1846     		mov	r0, r3
 886 00d6 FFF7FEFF 		bl	__aeabi_i2d
 887 00da 0446     		mov	r4, r0
 888 00dc 0D46     		mov	r5, r1
 889 00de 2E4B     		ldr	r3, .L13+48
 890 00e0 1B88     		ldrh	r3, [r3]
 891 00e2 1BB2     		sxth	r3, r3
 892 00e4 1846     		mov	r0, r3
 893 00e6 FFF7FEFF 		bl	__aeabi_i2d
 894 00ea 0246     		mov	r2, r0
 895 00ec 0B46     		mov	r3, r1
 896 00ee 1046     		mov	r0, r2
 897 00f0 1946     		mov	r1, r3
 898 00f2 1DA3     		adr	r3, .L13
 899 00f4 D3E90023 		ldrd	r2, [r3]
 900 00f8 FFF7FEFF 		bl	__aeabi_dsub
 901 00fc 0246     		mov	r2, r0
 902 00fe 0B46     		mov	r3, r1
 903 0100 2046     		mov	r0, r4
 904 0102 2946     		mov	r1, r5
 905 0104 FFF7FEFF 		bl	__aeabi_dcmpge
 906 0108 0346     		mov	r3, r0
 907 010a 002B     		cmp	r3, #0
 908 010c 02D0     		beq	.L8
 139:.\main.c      ****         {
 140:.\main.c      ****             reached_target = 1;
 909              		.loc 1 140 0
 910 010e 234B     		ldr	r3, .L13+52
 911 0110 0122     		movs	r2, #1
 912 0112 1A70     		strb	r2, [r3]
 913              	.L8:
 141:.\main.c      ****         }
 142:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5))
 914              		.loc 1 142 0
 915 0114 1F4B     		ldr	r3, .L13+44
 916 0116 1B88     		ldrh	r3, [r3]
 917 0118 1BB2     		sxth	r3, r3
 918 011a 002B     		cmp	r3, #0
 919 011c B8BF     		it	lt
 920 011e 5B42     		rsblt	r3, r3, #0
 921 0120 1846     		mov	r0, r3
 922 0122 FFF7FEFF 		bl	__aeabi_i2d
 923 0126 0446     		mov	r4, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 20


 924 0128 0D46     		mov	r5, r1
 925 012a 1B4B     		ldr	r3, .L13+48
 926 012c 1B88     		ldrh	r3, [r3]
 927 012e 1BB2     		sxth	r3, r3
 928 0130 1846     		mov	r0, r3
 929 0132 FFF7FEFF 		bl	__aeabi_i2d
 930 0136 0246     		mov	r2, r0
 931 0138 0B46     		mov	r3, r1
 932 013a 1046     		mov	r0, r2
 933 013c 1946     		mov	r1, r3
 934 013e 0AA3     		adr	r3, .L13
 935 0140 D3E90023 		ldrd	r2, [r3]
 936 0144 FFF7FEFF 		bl	__aeabi_dadd
 937 0148 0246     		mov	r2, r0
 938 014a 0B46     		mov	r3, r1
 939 014c 2046     		mov	r0, r4
 940 014e 2946     		mov	r1, r5
 941 0150 FFF7FEFF 		bl	__aeabi_dcmpge
 942 0154 0346     		mov	r3, r0
 943 0156 002B     		cmp	r3, #0
 944 0158 02D0     		beq	.L5
 143:.\main.c      ****         {
 144:.\main.c      ****             overshot_target = 1;
 945              		.loc 1 144 0
 946 015a 114B     		ldr	r3, .L13+56
 947 015c 0122     		movs	r2, #1
 948 015e 1A70     		strb	r2, [r3]
 949              	.L5:
 145:.\main.c      ****         }
 146:.\main.c      ****     }
 147:.\main.c      **** }
 950              		.loc 1 147 0
 951 0160 B0BD     		pop	{r4, r5, r7, pc}
 952              	.L14:
 953 0162 00BFAFF3 		.align	3
 953      0080
 954              	.L13:
 955 0168 00000000 		.word	0
 956 016c 00C05140 		.word	1079099392
 957 0170 00000000 		.word	quad_count1
 958 0174 00000000 		.word	last_quad_count1
 959 0178 00000000 		.word	quad_count2
 960 017c 00000000 		.word	last_quad_count2
 961 0180 00000000 		.word	quad_diff1
 962 0184 00000000 		.word	quad_diff2
 963 0188 00000000 		.word	movement_state
 964 018c 00000000 		.word	flag_calc_wheelspeed
 965 0190 00000000 		.word	track_mode
 966 0194 00000000 		.word	accum_dist
 967 0198 00000000 		.word	target_distance_quad
 968 019c 00000000 		.word	reached_target
 969 01a0 00000000 		.word	overshot_target
 970              		.cfi_endproc
 971              	.LFE65:
 972              		.size	isr_quad1, .-isr_quad1
 973 01a4 AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 974              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 21


 975              		.global	isr_turn_timer
 976              		.thumb
 977              		.thumb_func
 978              		.type	isr_turn_timer, %function
 979              	isr_turn_timer:
 980              	.LFB66:
 148:.\main.c      **** 
 149:.\main.c      **** CY_ISR(isr_turn_timer)
 150:.\main.c      **** {
 981              		.loc 1 150 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 8
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985 0000 80B5     		push	{r7, lr}
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 82B0     		sub	sp, sp, #8
 990              		.cfi_def_cfa_offset 16
 991 0004 00AF     		add	r7, sp, #0
 992              		.cfi_def_cfa_register 7
 151:.\main.c      ****     if(movement_state == LTURN)
 993              		.loc 1 151 0
 994 0006 3E4B     		ldr	r3, .L21
 995 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 996 000a 012B     		cmp	r3, #1
 997 000c 2BD1     		bne	.L16
 998              	.LBB2:
 152:.\main.c      ****     {
 153:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 999              		.loc 1 153 0
 1000 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1001 0012 0346     		mov	r3, r0
 1002 0014 1A46     		mov	r2, r3
 1003 0016 3B4B     		ldr	r3, .L21+4
 1004 0018 1B88     		ldrh	r3, [r3]
 1005 001a 1BB2     		sxth	r3, r3
 1006 001c D31A     		subs	r3, r2, r3
 1007 001e 002B     		cmp	r3, #0
 1008 0020 B8BF     		it	lt
 1009 0022 5B42     		rsblt	r3, r3, #0
 1010 0024 384A     		ldr	r2, .L21+8
 1011 0026 82FB0312 		smull	r1, r2, r2, r3
 1012 002a 1112     		asrs	r1, r2, #8
 1013 002c DA17     		asrs	r2, r3, #31
 1014 002e 8A1A     		subs	r2, r1, r2
 1015 0030 4FF45071 		mov	r1, #832
 1016 0034 01FB02F2 		mul	r2, r1, r2
 1017 0038 9A1A     		subs	r2, r3, r2
 1018 003a 1346     		mov	r3, r2	@ movhi
 1019 003c FB80     		strh	r3, [r7, #6]	@ movhi
 154:.\main.c      ****   
 155:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && frontSensors[2] == 1)
 1020              		.loc 1 155 0
 1021 003e FB88     		ldrh	r3, [r7, #6]
 1022 0040 B82B     		cmp	r3, #184
 1023 0042 0FD9     		bls	.L17
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 22


 1024              		.loc 1 155 0 is_stmt 0 discriminator 1
 1025 0044 FB88     		ldrh	r3, [r7, #6]
 1026 0046 E02B     		cmp	r3, #224
 1027 0048 0CD8     		bhi	.L17
 1028              		.loc 1 155 0 discriminator 2
 1029 004a 304B     		ldr	r3, .L21+12
 1030 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1031 004e 012B     		cmp	r3, #1
 1032 0050 08D1     		bne	.L17
 156:.\main.c      ****         {
 157:.\main.c      ****             //movement_state = STOPPED;
 158:.\main.c      ****             brakeMotor();
 1033              		.loc 1 158 0 is_stmt 1
 1034 0052 FFF7FEFF 		bl	brakeMotor
 159:.\main.c      ****             movement_state = prev_movement_state;
 1035              		.loc 1 159 0
 1036 0056 2E4B     		ldr	r3, .L21+16
 1037 0058 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 005a 294B     		ldr	r3, .L21
 1039 005c 1A70     		strb	r2, [r3]
 160:.\main.c      ****             Timer_2_Stop();
 1040              		.loc 1 160 0
 1041 005e FFF7FEFF 		bl	Timer_2_Stop
 1042              	.LBE2:
 1043 0062 49E0     		b	.L15
 1044              	.L17:
 1045 0064 48E0     		b	.L15
 1046              	.L16:
 161:.\main.c      ****         }
 162:.\main.c      ****     }
 163:.\main.c      ****     else if (movement_state == RTURN)
 1047              		.loc 1 163 0
 1048 0066 264B     		ldr	r3, .L21
 1049 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1050 006a 022B     		cmp	r3, #2
 1051 006c 2BD1     		bne	.L19
 1052              	.LBB3:
 164:.\main.c      ****     {
 165:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1053              		.loc 1 165 0
 1054 006e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1055 0072 0346     		mov	r3, r0
 1056 0074 1A46     		mov	r2, r3
 1057 0076 234B     		ldr	r3, .L21+4
 1058 0078 1B88     		ldrh	r3, [r3]
 1059 007a 1BB2     		sxth	r3, r3
 1060 007c D31A     		subs	r3, r2, r3
 1061 007e 002B     		cmp	r3, #0
 1062 0080 B8BF     		it	lt
 1063 0082 5B42     		rsblt	r3, r3, #0
 1064 0084 204A     		ldr	r2, .L21+8
 1065 0086 82FB0312 		smull	r1, r2, r2, r3
 1066 008a 1112     		asrs	r1, r2, #8
 1067 008c DA17     		asrs	r2, r3, #31
 1068 008e 8A1A     		subs	r2, r1, r2
 1069 0090 4FF45071 		mov	r1, #832
 1070 0094 01FB02F2 		mul	r2, r1, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 23


 1071 0098 9A1A     		subs	r2, r3, r2
 1072 009a 1346     		mov	r3, r2	@ movhi
 1073 009c BB80     		strh	r3, [r7, #4]	@ movhi
 166:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && frontSensors[2] == 1)
 1074              		.loc 1 166 0
 1075 009e BB88     		ldrh	r3, [r7, #4]
 1076 00a0 B82B     		cmp	r3, #184
 1077 00a2 0FD9     		bls	.L20
 1078              		.loc 1 166 0 is_stmt 0 discriminator 1
 1079 00a4 BB88     		ldrh	r3, [r7, #4]
 1080 00a6 E02B     		cmp	r3, #224
 1081 00a8 0CD8     		bhi	.L20
 1082              		.loc 1 166 0 discriminator 2
 1083 00aa 184B     		ldr	r3, .L21+12
 1084 00ac 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1085 00ae 012B     		cmp	r3, #1
 1086 00b0 08D1     		bne	.L20
 167:.\main.c      ****         {
 168:.\main.c      ****             //movement_state = STOPPED;
 169:.\main.c      ****             brakeMotor();
 1087              		.loc 1 169 0 is_stmt 1
 1088 00b2 FFF7FEFF 		bl	brakeMotor
 170:.\main.c      ****             movement_state = prev_movement_state;
 1089              		.loc 1 170 0
 1090 00b6 164B     		ldr	r3, .L21+16
 1091 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1092 00ba 114B     		ldr	r3, .L21
 1093 00bc 1A70     		strb	r2, [r3]
 171:.\main.c      ****             Timer_2_Stop();
 1094              		.loc 1 171 0
 1095 00be FFF7FEFF 		bl	Timer_2_Stop
 1096              	.LBE3:
 1097 00c2 19E0     		b	.L15
 1098              	.L20:
 1099 00c4 18E0     		b	.L15
 1100              	.L19:
 172:.\main.c      ****         }
 173:.\main.c      ****     }
 174:.\main.c      ****     else if (movement_state == UTURN)
 1101              		.loc 1 174 0
 1102 00c6 0E4B     		ldr	r3, .L21
 1103 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 00ca 072B     		cmp	r3, #7
 1105 00cc 14D1     		bne	.L15
 175:.\main.c      ****     {
 176:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1106              		.loc 1 176 0
 1107 00ce FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1108 00d2 0346     		mov	r3, r0
 1109 00d4 1A46     		mov	r2, r3
 1110 00d6 0B4B     		ldr	r3, .L21+4
 1111 00d8 1B88     		ldrh	r3, [r3]
 1112 00da 1BB2     		sxth	r3, r3
 1113 00dc D31A     		subs	r3, r2, r3
 1114 00de 002B     		cmp	r3, #0
 1115 00e0 B8BF     		it	lt
 1116 00e2 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 24


 1117 00e4 CF2B     		cmp	r3, #207
 1118 00e6 07DD     		ble	.L15
 177:.\main.c      ****         {
 178:.\main.c      ****             //movement_state = STOPPED;
 179:.\main.c      ****             brakeMotor();
 1119              		.loc 1 179 0
 1120 00e8 FFF7FEFF 		bl	brakeMotor
 180:.\main.c      ****             movement_state = prev_movement_state;
 1121              		.loc 1 180 0
 1122 00ec 084B     		ldr	r3, .L21+16
 1123 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1124 00f0 034B     		ldr	r3, .L21
 1125 00f2 1A70     		strb	r2, [r3]
 181:.\main.c      ****             Timer_2_Stop();
 1126              		.loc 1 181 0
 1127 00f4 FFF7FEFF 		bl	Timer_2_Stop
 1128              	.L15:
 182:.\main.c      ****         }
 183:.\main.c      ****     }
 184:.\main.c      **** }
 1129              		.loc 1 184 0
 1130 00f8 0837     		adds	r7, r7, #8
 1131              		.cfi_def_cfa_offset 8
 1132 00fa BD46     		mov	sp, r7
 1133              		.cfi_def_cfa_register 13
 1134              		@ sp needed
 1135 00fc 80BD     		pop	{r7, pc}
 1136              	.L22:
 1137 00fe 00BF     		.align	2
 1138              	.L21:
 1139 0100 00000000 		.word	movement_state
 1140 0104 00000000 		.word	start_turn_count
 1141 0108 4FECC44E 		.word	1321528399
 1142 010c 00000000 		.word	frontSensors
 1143 0110 00000000 		.word	prev_movement_state
 1144              		.cfi_endproc
 1145              	.LFE66:
 1146              		.size	isr_turn_timer, .-isr_turn_timer
 1147              		.section	.text.Stop_on_line,"ax",%progbits
 1148              		.align	2
 1149              		.global	Stop_on_line
 1150              		.thumb
 1151              		.thumb_func
 1152              		.type	Stop_on_line, %function
 1153              	Stop_on_line:
 1154              	.LFB67:
 185:.\main.c      **** 
 186:.\main.c      **** 
 187:.\main.c      **** CY_ISR (Stop_on_line)
 188:.\main.c      **** {
 1155              		.loc 1 188 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 0000 80B4     		push	{r7}
 1161              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 25


 1162              		.cfi_offset 7, -4
 1163 0002 00AF     		add	r7, sp, #0
 1164              		.cfi_def_cfa_register 7
 189:.\main.c      ****     movement_state = STOPPED;
 1165              		.loc 1 189 0
 1166 0004 054B     		ldr	r3, .L25
 1167 0006 0322     		movs	r2, #3
 1168 0008 1A70     		strb	r2, [r3]
 190:.\main.c      ****     if(movement_state != DRIVE) return;
 1169              		.loc 1 190 0
 1170 000a 044B     		ldr	r3, .L25
 1171 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1172 000e 002B     		cmp	r3, #0
 1173 0010 00D0     		beq	.L23
 1174 0012 00BF     		nop
 1175              	.L23:
 191:.\main.c      ****     //initTurnLeft();
 192:.\main.c      **** }
 1176              		.loc 1 192 0
 1177 0014 BD46     		mov	sp, r7
 1178              		.cfi_def_cfa_register 13
 1179              		@ sp needed
 1180 0016 5DF8047B 		ldr	r7, [sp], #4
 1181              		.cfi_restore 7
 1182              		.cfi_def_cfa_offset 0
 1183 001a 7047     		bx	lr
 1184              	.L26:
 1185              		.align	2
 1186              	.L25:
 1187 001c 00000000 		.word	movement_state
 1188              		.cfi_endproc
 1189              	.LFE67:
 1190              		.size	Stop_on_line, .-Stop_on_line
 1191              		.section	.rodata
 1192              		.align	2
 1193              	.LC0:
 1194 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1194      74696E67 
 1194      20726F62 
 1194      6F74210D 
 1194      0A00
 1195              		.section	.text.button,"ax",%progbits
 1196              		.align	2
 1197              		.global	button
 1198              		.thumb
 1199              		.thumb_func
 1200              		.type	button, %function
 1201              	button:
 1202              	.LFB68:
 193:.\main.c      **** 
 194:.\main.c      **** CY_ISR (button)
 195:.\main.c      **** {
 1203              		.loc 1 195 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 1, uses_anonymous_args = 0
 1207 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 26


 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 00AF     		add	r7, sp, #0
 1212              		.cfi_def_cfa_register 7
 196:.\main.c      ****     if(BT_ENABLED)
 1213              		.loc 1 196 0
 1214 0004 054B     		ldr	r3, .L29
 1215 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1216 0008 002B     		cmp	r3, #0
 1217 000a 02D0     		beq	.L28
 197:.\main.c      ****     {
 198:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1218              		.loc 1 198 0
 1219 000c 0448     		ldr	r0, .L29+4
 1220 000e FFF7FEFF 		bl	UART_PutString
 1221              	.L28:
 199:.\main.c      ****     }
 200:.\main.c      ****     movement_state = DRIVE;
 1222              		.loc 1 200 0
 1223 0012 044B     		ldr	r3, .L29+8
 1224 0014 0022     		movs	r2, #0
 1225 0016 1A70     		strb	r2, [r3]
 201:.\main.c      **** }
 1226              		.loc 1 201 0
 1227 0018 80BD     		pop	{r7, pc}
 1228              	.L30:
 1229 001a 00BF     		.align	2
 1230              	.L29:
 1231 001c 00000000 		.word	BT_ENABLED
 1232 0020 00000000 		.word	.LC0
 1233 0024 00000000 		.word	movement_state
 1234              		.cfi_endproc
 1235              	.LFE68:
 1236              		.size	button, .-button
 1237              		.section	.text.isr_adcTimer,"ax",%progbits
 1238              		.align	2
 1239              		.global	isr_adcTimer
 1240              		.thumb
 1241              		.thumb_func
 1242              		.type	isr_adcTimer, %function
 1243              	isr_adcTimer:
 1244              	.LFB69:
 202:.\main.c      **** 
 203:.\main.c      **** CY_ISR(isr_adcTimer)
 204:.\main.c      **** {
 1245              		.loc 1 204 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 1, uses_anonymous_args = 0
 1249 0000 80B5     		push	{r7, lr}
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 205:.\main.c      ****     ADC_StartConvert();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 27


 1255              		.loc 1 205 0
 1256 0004 FFF7FEFF 		bl	ADC_StartConvert
 206:.\main.c      **** }
 1257              		.loc 1 206 0
 1258 0008 80BD     		pop	{r7, pc}
 1259              		.cfi_endproc
 1260              	.LFE69:
 1261              		.size	isr_adcTimer, .-isr_adcTimer
 1262 000a 00BF     		.section	.rodata
 1263 0012 0000     		.align	2
 1264              	.LC1:
 1265 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1265      7A6F6E65 
 1265      206C6566 
 1265      740D0A00 
 1266              		.section	.text.isr_deadzone,"ax",%progbits
 1267              		.align	2
 1268              		.global	isr_deadzone
 1269              		.thumb
 1270              		.thumb_func
 1271              		.type	isr_deadzone, %function
 1272              	isr_deadzone:
 1273              	.LFB70:
 207:.\main.c      **** 
 208:.\main.c      **** CY_ISR(isr_deadzone)
 209:.\main.c      **** {
 1274              		.loc 1 209 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 1, uses_anonymous_args = 0
 1278 0000 80B5     		push	{r7, lr}
 1279              		.cfi_def_cfa_offset 8
 1280              		.cfi_offset 7, -8
 1281              		.cfi_offset 14, -4
 1282 0002 00AF     		add	r7, sp, #0
 1283              		.cfi_def_cfa_register 7
 210:.\main.c      ****     sensorsDisabled = 0;
 1284              		.loc 1 210 0
 1285 0004 054B     		ldr	r3, .L33
 1286 0006 0022     		movs	r2, #0
 1287 0008 1A60     		str	r2, [r3]
 211:.\main.c      ****     deadzone = 0;
 1288              		.loc 1 211 0
 1289 000a 054B     		ldr	r3, .L33+4
 1290 000c 0022     		movs	r2, #0
 1291 000e 1A70     		strb	r2, [r3]
 212:.\main.c      ****     Timer_Deadzone_Stop();
 1292              		.loc 1 212 0
 1293 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 213:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1294              		.loc 1 213 0
 1295 0014 0348     		ldr	r0, .L33+8
 1296 0016 FFF7FEFF 		bl	UART_PutString
 214:.\main.c      **** }
 1297              		.loc 1 214 0
 1298 001a 80BD     		pop	{r7, pc}
 1299              	.L34:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 28


 1300              		.align	2
 1301              	.L33:
 1302 001c 00000000 		.word	sensorsDisabled
 1303 0020 00000000 		.word	deadzone
 1304 0024 14000000 		.word	.LC1
 1305              		.cfi_endproc
 1306              	.LFE70:
 1307              		.size	isr_deadzone, .-isr_deadzone
 1308              		.section	.rodata
 1309              		.align	2
 1310              	.LC2:
 1311 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1311      20747261 
 1311      76656C3A 
 1311      2025640D 
 1311      0A00
 1312 0036 0000     		.align	2
 1313              	.LC3:
 1314 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1314      67657265 
 1314      64206174 
 1314      20696E74 
 1314      65727365 
 1315 0055 000000   		.align	2
 1316              	.LC4:
 1317 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1317      7A6F6E65 
 1317      20656E74 
 1317      65726564 
 1317      210D0A00 
 1318              		.align	2
 1319              	.LC5:
 1320 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1320      65742064 
 1320      6973743A 
 1320      2025640D 
 1320      0A00
 1321 007e 0000     		.align	2
 1322              	.LC6:
 1323 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1323      67657265 
 1323      64206174 
 1323      20776869 
 1323      7465206C 
 1324              		.align	2
 1325              	.LC7:
 1326 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1326      67657265 
 1326      64206174 
 1326      20717561 
 1326      6420636F 
 1327              		.section	.text.main,"ax",%progbits
 1328              		.align	2
 1329              		.global	main
 1330              		.thumb
 1331              		.thumb_func
 1332              		.type	main, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 29


 1333              	main:
 1334              	.LFB71:
 215:.\main.c      **** 
 216:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 217:.\main.c      **** 
 218:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 219:.\main.c      **** int main()
 220:.\main.c      **** {  
 1335              		.loc 1 220 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 56
 1338              		@ frame_needed = 1, uses_anonymous_args = 0
 1339 0000 80B5     		push	{r7, lr}
 1340              		.cfi_def_cfa_offset 8
 1341              		.cfi_offset 7, -8
 1342              		.cfi_offset 14, -4
 1343 0002 8EB0     		sub	sp, sp, #56
 1344              		.cfi_def_cfa_offset 64
 1345 0004 00AF     		add	r7, sp, #0
 1346              		.cfi_def_cfa_register 7
 221:.\main.c      **** 
 222:.\main.c      **** // ----- INITIALIZATIONS ----------
 223:.\main.c      ****     CYGlobalIntEnable;
 1347              		.loc 1 223 0
 1348              	@ 223 ".\main.c" 1
 1349 0006 62B6     		CPSIE   i
 1350              	@ 0 "" 2
 224:.\main.c      ****     if(ENABLE_PWM)
 225:.\main.c      ****     {
 226:.\main.c      ****         PWM_1_Start();// starting the pwm
 1351              		.loc 1 226 0
 1352              		.thumb
 1353 0008 FFF7FEFF 		bl	PWM_1_Start
 227:.\main.c      ****         PWM_2_Start();// starting the pwm
 1354              		.loc 1 227 0
 1355 000c FFF7FEFF 		bl	PWM_2_Start
 228:.\main.c      ****     }
 229:.\main.c      ****     
 230:.\main.c      ****     if(ENABLE_ADC)
 231:.\main.c      ****     {
 232:.\main.c      ****         ADC_Start();
 233:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 234:.\main.c      ****         //ADC_StartConvert();
 235:.\main.c      ****         
 236:.\main.c      ****         //start the ADC timer for software trigger mode
 237:.\main.c      ****         Timer_TS_Start();
 238:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 239:.\main.c      ****     }
 240:.\main.c      ****     
 241:.\main.c      ****     if (ENABLE_QUAD)
 242:.\main.c      ****     {
 243:.\main.c      ****         QuadDec_M1_Start();
 1356              		.loc 1 243 0
 1357 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 244:.\main.c      ****         QuadDec_M2_Start();
 1358              		.loc 1 244 0
 1359 0014 FFF7FEFF 		bl	QuadDec_M2_Start
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 30


 245:.\main.c      ****         
 246:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1360              		.loc 1 246 0
 1361 0018 A848     		ldr	r0, .L102
 1362 001a FFF7FEFF 		bl	isr_quad1_StartEx
 247:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1363              		.loc 1 247 0
 1364 001e A848     		ldr	r0, .L102+4
 1365 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 248:.\main.c      ****         
 249:.\main.c      ****         Timer_1_Start();
 1366              		.loc 1 249 0
 1367 0024 FFF7FEFF 		bl	Timer_1_Start
 250:.\main.c      ****     }
 251:.\main.c      ****     
 252:.\main.c      ****     if(ENABLE_STOP){
 253:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 254:.\main.c      ****         
 255:.\main.c      ****     }
 256:.\main.c      ****     isr_button_StartEx(button);
 1368              		.loc 1 256 0
 1369 0028 A648     		ldr	r0, .L102+8
 1370 002a FFF7FEFF 		bl	isr_button_StartEx
 257:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1371              		.loc 1 257 0
 1372 002e A648     		ldr	r0, .L102+12
 1373 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 258:.\main.c      **** 
 259:.\main.c      ****     // ------USB SETUP ----------------    
 260:.\main.c      ****     if (USE_USB){    
 261:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1374              		.loc 1 261 0
 1375 0034 0020     		movs	r0, #0
 1376 0036 0121     		movs	r1, #1
 1377 0038 FFF7FEFF 		bl	USBUART_Start
 262:.\main.c      ****         if (USBUART_GetConfiguration())
 1378              		.loc 1 262 0
 1379 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1380 0040 0346     		mov	r3, r0
 1381 0042 002B     		cmp	r3, #0
 1382 0044 01D0     		beq	.L36
 263:.\main.c      ****             {
 264:.\main.c      ****                  USBUART_CDC_Init();
 1383              		.loc 1 264 0
 1384 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1385              	.L36:
 265:.\main.c      ****             }
 266:.\main.c      ****     }
 267:.\main.c      ****     
 268:.\main.c      ****     if(BIN_ENABLED){
 1386              		.loc 1 268 0
 1387 004a A04B     		ldr	r3, .L102+16
 1388 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389 004e 002B     		cmp	r3, #0
 1390 0050 01D0     		beq	.L37
 269:.\main.c      ****         changeToRF();
 1391              		.loc 1 269 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 31


 1392 0052 FFF7FEFF 		bl	changeToRF
 1393              	.L37:
 270:.\main.c      ****     }
 271:.\main.c      ****     
 272:.\main.c      ****     if(BT_ENABLED){
 1394              		.loc 1 272 0
 1395 0056 9E4B     		ldr	r3, .L102+20
 1396 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 005a 002B     		cmp	r3, #0
 1398 005c 01D0     		beq	.L38
 273:.\main.c      ****         changeToBT();
 1399              		.loc 1 273 0
 1400 005e FFF7FEFF 		bl	changeToBT
 1401              	.L38:
 274:.\main.c      ****     }
 275:.\main.c      ****     
 276:.\main.c      ****     uint16 actionDebounce = 0;
 1402              		.loc 1 276 0
 1403 0062 0023     		movs	r3, #0
 1404 0064 FB86     		strh	r3, [r7, #54]	@ movhi
 1405              	.L98:
 277:.\main.c      ****     
 278:.\main.c      ****     //usbPutString("Started");
 279:.\main.c      ****     for(;;)
 280:.\main.c      ****     {
 281:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 282:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1406              		.loc 1 282 0
 1407 0066 FFF7FEFF 		bl	Quad_Dec_response
 283:.\main.c      ****         if(BIN_ENABLED == 1)
 1408              		.loc 1 283 0
 1409 006a 984B     		ldr	r3, .L102+16
 1410 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1411 006e 012B     		cmp	r3, #1
 1412 0070 03D1     		bne	.L39
 284:.\main.c      ****         {
 285:.\main.c      ****             handle_rx_binary();
 1413              		.loc 1 285 0
 1414 0072 FFF7FEFF 		bl	handle_rx_binary
 286:.\main.c      ****             print_RF();
 1415              		.loc 1 286 0
 1416 0076 FFF7FEFF 		bl	print_RF
 1417              	.L39:
 287:.\main.c      ****         }
 288:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 289:.\main.c      ****        
 290:.\main.c      ****         readFrontSensors(frontSensors);
 1418              		.loc 1 290 0
 1419 007a 9648     		ldr	r0, .L102+24
 1420 007c FFF7FEFF 		bl	readFrontSensors
 291:.\main.c      ****         
 292:.\main.c      ****         switch(track_mode)
 1421              		.loc 1 292 0
 1422 0080 954B     		ldr	r3, .L102+28
 1423 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1424 0084 072B     		cmp	r3, #7
 1425 0086 00F22383 		bhi	.L40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 32


 1426 008a 01A2     		adr	r2, .L42
 1427 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1428              		.p2align 2
 1429              	.L42:
 1430 0090 D1060000 		.word	.L40+1
 1431 0094 D1060000 		.word	.L40+1
 1432 0098 D1060000 		.word	.L40+1
 1433 009c B1000000 		.word	.L45+1
 1434 00a0 D1060000 		.word	.L40+1
 1435 00a4 F5000000 		.word	.L47+1
 1436 00a8 1B010000 		.word	.L48+1
 1437 00ac 1B010000 		.word	.L48+1
 1438              		.p2align 1
 1439              	.L45:
 293:.\main.c      ****         {
 294:.\main.c      ****             case SQUARE_TRACK:
 295:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1440              		.loc 1 295 0
 1441 00b0 8A4B     		ldr	r3, .L102+32
 1442 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1443 00b4 012B     		cmp	r3, #1
 1444 00b6 1CD0     		beq	.L49
 1445              		.loc 1 295 0 is_stmt 0 discriminator 1
 1446 00b8 884B     		ldr	r3, .L102+32
 1447 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 00bc 022B     		cmp	r3, #2
 1449 00be 18D0     		beq	.L49
 296:.\main.c      ****                 {
 297:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1450              		.loc 1 297 0 is_stmt 1
 1451 00c0 844B     		ldr	r3, .L102+24
 1452 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 00c4 012B     		cmp	r3, #1
 1454 00c6 06D1     		bne	.L50
 1455              		.loc 1 297 0 is_stmt 0 discriminator 1
 1456 00c8 824B     		ldr	r3, .L102+24
 1457 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1458 00cc 012B     		cmp	r3, #1
 1459 00ce 02D1     		bne	.L50
 298:.\main.c      ****                         initTurnLeft();
 1460              		.loc 1 298 0 is_stmt 1
 1461 00d0 FFF7FEFF 		bl	initTurnLeft
 1462 00d4 0DE0     		b	.L49
 1463              	.L50:
 299:.\main.c      ****                     }
 300:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1464              		.loc 1 300 0
 1465 00d6 7F4B     		ldr	r3, .L102+24
 1466 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1467 00da 012B     		cmp	r3, #1
 1468 00dc 06D1     		bne	.L51
 1469              		.loc 1 300 0 is_stmt 0 discriminator 1
 1470 00de 7D4B     		ldr	r3, .L102+24
 1471 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1472 00e2 012B     		cmp	r3, #1
 1473 00e4 02D1     		bne	.L51
 301:.\main.c      ****                     {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 33


 302:.\main.c      ****                         initTurnRight();
 1474              		.loc 1 302 0 is_stmt 1
 1475 00e6 FFF7FEFF 		bl	initTurnRight
 1476 00ea 02E0     		b	.L49
 1477              	.L51:
 303:.\main.c      ****                     }
 304:.\main.c      ****                     else inittrackLineZ();
 1478              		.loc 1 304 0
 1479 00ec FFF7FEFF 		bl	inittrackLineZ
 305:.\main.c      ****                 }
 306:.\main.c      ****             break;
 1480              		.loc 1 306 0
 1481 00f0 EEE2     		b	.L40
 1482              	.L49:
 1483 00f2 EDE2     		b	.L40
 1484              	.L47:
 307:.\main.c      ****             case NO_TRACK:
 308:.\main.c      ****             break;
 309:.\main.c      ****             case CURVE_TRACK:
 310:.\main.c      ****             break;
 311:.\main.c      ****             case U_TRACK:
 312:.\main.c      ****             break;
 313:.\main.c      ****             case QUAD_STOP:
 314:.\main.c      ****             break;
 315:.\main.c      ****             case RF_STOP:
 316:.\main.c      ****                 if(initial_pos_valid == 1)
 1485              		.loc 1 316 0
 1486 00f4 7A4B     		ldr	r3, .L102+36
 1487 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1488 00f8 012B     		cmp	r3, #1
 1489 00fa 0DD1     		bne	.L52
 317:.\main.c      ****                 {
 318:.\main.c      ****                     //changeToBT();
 319:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 320:.\main.c      ****                     //changeToRF();
 321:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1490              		.loc 1 321 0
 1491 00fc 794B     		ldr	r3, .L102+40
 1492 00fe 5A88     		ldrh	r2, [r3, #2]
 1493 0100 794B     		ldr	r3, .L102+44
 1494 0102 1A80     		strh	r2, [r3]	@ movhi
 322:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1495              		.loc 1 322 0
 1496 0104 774B     		ldr	r3, .L102+40
 1497 0106 9A88     		ldrh	r2, [r3, #4]
 1498 0108 784B     		ldr	r3, .L102+48
 1499 010a 1A80     		strh	r2, [r3]	@ movhi
 323:.\main.c      ****                     initial_pos_valid = 2;
 1500              		.loc 1 323 0
 1501 010c 744B     		ldr	r3, .L102+36
 1502 010e 0222     		movs	r2, #2
 1503 0110 1A70     		strb	r2, [r3]
 324:.\main.c      ****                     initForward();
 1504              		.loc 1 324 0
 1505 0112 FFF7FEFF 		bl	initForward
 325:.\main.c      ****                 }
 326:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 34


 1506              		.loc 1 326 0
 1507 0116 DBE2     		b	.L40
 1508              	.L52:
 1509 0118 DAE2     		b	.L40
 1510              	.L48:
 327:.\main.c      ****             case MAP_TRAVERSE:
 328:.\main.c      ****             case DEST_TEST:
 329:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1511              		.loc 1 329 0
 1512 011a 704B     		ldr	r3, .L102+32
 1513 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1514 011e 012B     		cmp	r3, #1
 1515 0120 00F0D582 		beq	.L53
 1516              		.loc 1 329 0 is_stmt 0 discriminator 1
 1517 0124 6D4B     		ldr	r3, .L102+32
 1518 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 0128 022B     		cmp	r3, #2
 1520 012a 00F0D082 		beq	.L53
 1521              		.loc 1 329 0 discriminator 2
 1522 012e 6B4B     		ldr	r3, .L102+32
 1523 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1524 0132 072B     		cmp	r3, #7
 1525 0134 00F0CB82 		beq	.L53
 1526              	.LBB4:
 330:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 331:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1527              		.loc 1 331 0 is_stmt 1
 1528 0138 6D4B     		ldr	r3, .L102+52
 1529 013a 1B88     		ldrh	r3, [r3]
 1530 013c 1A46     		mov	r2, r3
 1531 013e 6D4B     		ldr	r3, .L102+56
 1532 0140 9B5C     		ldrb	r3, [r3, r2]
 1533 0142 87F83530 		strb	r3, [r7, #53]
 332:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1534              		.loc 1 332 0
 1535 0146 634B     		ldr	r3, .L102+24
 1536 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1537 014a 012B     		cmp	r3, #1
 1538 014c 03D1     		bne	.L54
 1539              		.loc 1 332 0 is_stmt 0 discriminator 1
 1540 014e 614B     		ldr	r3, .L102+24
 1541 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1542 0152 012B     		cmp	r3, #1
 1543 0154 09D0     		beq	.L55
 1544              	.L54:
 1545              		.loc 1 332 0 discriminator 3
 1546 0156 5F4B     		ldr	r3, .L102+24
 1547 0158 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1548 015a 012B     		cmp	r3, #1
 1549 015c 40F00881 		bne	.L56
 1550              		.loc 1 332 0 discriminator 4
 1551 0160 5C4B     		ldr	r3, .L102+24
 1552 0162 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1553 0164 012B     		cmp	r3, #1
 1554 0166 40F00381 		bne	.L56
 1555              	.L55:
 333:.\main.c      ****                         if(sensorsDisabled == 0)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 35


 1556              		.loc 1 333 0 is_stmt 1
 1557 016a 634B     		ldr	r3, .L102+60
 1558 016c 1B68     		ldr	r3, [r3]
 1559 016e 002B     		cmp	r3, #0
 1560 0170 40F0FD80 		bne	.L57
 334:.\main.c      ****                         {
 335:.\main.c      ****                             actionDebounce++;
 1561              		.loc 1 335 0
 1562 0174 FB8E     		ldrh	r3, [r7, #54]
 1563 0176 0133     		adds	r3, r3, #1
 1564 0178 FB86     		strh	r3, [r7, #54]	@ movhi
 336:.\main.c      ****                             if(actionDebounce >= 500)
 1565              		.loc 1 336 0
 1566 017a FB8E     		ldrh	r3, [r7, #54]
 1567 017c B3F5FA7F 		cmp	r3, #500
 1568 0180 C0F0F580 		bcc	.L57
 1569              	.LBB5:
 337:.\main.c      ****                             {
 338:.\main.c      ****                                 char mes[16];
 339:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1570              		.loc 1 339 0
 1571 0184 5D4B     		ldr	r3, .L102+64
 1572 0186 1B88     		ldrh	r3, [r3]
 1573 0188 1BB2     		sxth	r3, r3
 1574 018a 07F12002 		add	r2, r7, #32
 1575 018e 1046     		mov	r0, r2
 1576 0190 5B49     		ldr	r1, .L102+68
 1577 0192 1A46     		mov	r2, r3
 1578 0194 FFF7FEFF 		bl	sprintf
 340:.\main.c      ****                                  UART_PutString(mes);
 1579              		.loc 1 340 0
 1580 0198 07F12003 		add	r3, r7, #32
 1581 019c 1846     		mov	r0, r3
 1582 019e FFF7FEFF 		bl	UART_PutString
 341:.\main.c      ****                             if(reached_target == 1)
 1583              		.loc 1 341 0
 1584 01a2 584B     		ldr	r3, .L102+72
 1585 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 01a6 012B     		cmp	r3, #1
 1587 01a8 40F0E180 		bne	.L57
 1588              	.LBB6:
 342:.\main.c      ****                             {
 343:.\main.c      ****                                 if(nextStep == 'D')
 1589              		.loc 1 343 0
 1590 01ac 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1591 01b0 442B     		cmp	r3, #68
 1592 01b2 0CD1     		bne	.L59
 344:.\main.c      ****                                 {
 345:.\main.c      ****                                     instructionCount += 2;
 1593              		.loc 1 345 0
 1594 01b4 4E4B     		ldr	r3, .L102+52
 1595 01b6 1B88     		ldrh	r3, [r3]
 1596 01b8 0233     		adds	r3, r3, #2
 1597 01ba 9AB2     		uxth	r2, r3
 1598 01bc 4C4B     		ldr	r3, .L102+52
 1599 01be 1A80     		strh	r2, [r3]	@ movhi
 346:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 36


 1600              		.loc 1 346 0
 1601 01c0 4B4B     		ldr	r3, .L102+52
 1602 01c2 1B88     		ldrh	r3, [r3]
 1603 01c4 1A46     		mov	r2, r3
 1604 01c6 4B4B     		ldr	r3, .L102+56
 1605 01c8 9B5C     		ldrb	r3, [r3, r2]
 1606 01ca 87F83530 		strb	r3, [r7, #53]
 1607              	.L59:
 347:.\main.c      ****                                 }
 348:.\main.c      ****                                 
 349:.\main.c      ****                                 sensorsDisabled = 1;
 1608              		.loc 1 349 0
 1609 01ce 4A4B     		ldr	r3, .L102+60
 1610 01d0 0122     		movs	r2, #1
 1611 01d2 1A60     		str	r2, [r3]
 350:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1612              		.loc 1 350 0
 1613 01d4 4C48     		ldr	r0, .L102+76
 1614 01d6 FFF7FEFF 		bl	UART_PutString
 351:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1615              		.loc 1 351 0
 1616 01da 4C48     		ldr	r0, .L102+80
 1617 01dc FFF7FEFF 		bl	UART_PutString
 352:.\main.c      ****                                 deadzone = 1;
 1618              		.loc 1 352 0
 1619 01e0 4B4B     		ldr	r3, .L102+84
 1620 01e2 0122     		movs	r2, #1
 1621 01e4 1A70     		strb	r2, [r3]
 353:.\main.c      ****                                 
 354:.\main.c      ****                                 accum_dist = 0;
 1622              		.loc 1 354 0
 1623 01e6 454B     		ldr	r3, .L102+64
 1624 01e8 0022     		movs	r2, #0
 1625 01ea 1A80     		strh	r2, [r3]	@ movhi
 355:.\main.c      ****                                 uint8 nextStepDist;
 356:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1626              		.loc 1 356 0
 1627 01ec 404B     		ldr	r3, .L102+52
 1628 01ee 1B88     		ldrh	r3, [r3]
 1629 01f0 1A46     		mov	r2, r3
 1630 01f2 484B     		ldr	r3, .L102+88
 1631 01f4 1B88     		ldrh	r3, [r3]
 1632 01f6 053B     		subs	r3, r3, #5
 1633 01f8 9A42     		cmp	r2, r3
 1634 01fa 07DC     		bgt	.L60
 1635              		.loc 1 356 0 is_stmt 0 discriminator 1
 1636 01fc 3C4B     		ldr	r3, .L102+52
 1637 01fe 1B88     		ldrh	r3, [r3]
 1638 0200 0333     		adds	r3, r3, #3
 1639 0202 3C4A     		ldr	r2, .L102+56
 1640 0204 D35C     		ldrb	r3, [r2, r3]
 1641 0206 87F83430 		strb	r3, [r7, #52]
 1642 020a 02E0     		b	.L61
 1643              	.L60:
 357:.\main.c      ****                                 else nextStepDist = 0;
 1644              		.loc 1 357 0 is_stmt 1
 1645 020c 0023     		movs	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 37


 1646 020e 87F83430 		strb	r3, [r7, #52]
 1647              	.L61:
 358:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1648              		.loc 1 358 0
 1649 0212 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1650 0216 9BB2     		uxth	r3, r3
 1651 0218 1A46     		mov	r2, r3	@ movhi
 1652 021a D200     		lsls	r2, r2, #3
 1653 021c 1A44     		add	r2, r2, r3
 1654 021e D200     		lsls	r2, r2, #3
 1655 0220 D31A     		subs	r3, r2, r3
 1656 0222 5B00     		lsls	r3, r3, #1
 1657 0224 9BB2     		uxth	r3, r3
 1658 0226 9AB2     		uxth	r2, r3
 1659 0228 3B4B     		ldr	r3, .L102+92
 1660 022a 1A80     		strh	r2, [r3]	@ movhi
 359:.\main.c      ****                                 
 360:.\main.c      ****                                 
 361:.\main.c      ****                                 
 362:.\main.c      ****                                 switch(nextStep)
 1661              		.loc 1 362 0
 1662 022c 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1663 0230 4C3B     		subs	r3, r3, #76
 1664 0232 092B     		cmp	r3, #9
 1665 0234 74D8     		bhi	.L99
 1666 0236 01A2     		adr	r2, .L64
 1667 0238 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1668              		.p2align 2
 1669              	.L64:
 1670 023c 73020000 		.word	.L63+1
 1671 0240 21030000 		.word	.L99+1
 1672 0244 21030000 		.word	.L99+1
 1673 0248 21030000 		.word	.L99+1
 1674 024c 21030000 		.word	.L99+1
 1675 0250 21030000 		.word	.L99+1
 1676 0254 91020000 		.word	.L65+1
 1677 0258 65020000 		.word	.L66+1
 1678 025c 21030000 		.word	.L99+1
 1679 0260 AF020000 		.word	.L67+1
 1680              		.p2align 1
 1681              	.L66:
 363:.\main.c      ****                                 {
 364:.\main.c      ****                                     case 'S':
 365:.\main.c      ****                                         inittrackLineZ();
 1682              		.loc 1 365 0
 1683 0264 FFF7FEFF 		bl	inittrackLineZ
 366:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1684              		.loc 1 366 0
 1685 0268 42F21070 		movw	r0, #10000
 1686 026c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 367:.\main.c      ****                                         //do nothing
 368:.\main.c      ****                                     break;
 1687              		.loc 1 368 0
 1688 0270 57E0     		b	.L68
 1689              	.L63:
 369:.\main.c      ****                                     case 'L':
 370:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 38


 371:.\main.c      ****                                         initTurnLeft();
 1690              		.loc 1 371 0
 1691 0272 FFF7FEFF 		bl	initTurnLeft
 372:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1692              		.loc 1 372 0
 1693 0276 4CF25030 		movw	r0, #50000
 1694 027a FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 373:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1695              		.loc 1 373 0
 1696 027e 264B     		ldr	r3, .L102+92
 1697 0280 1B88     		ldrh	r3, [r3]
 1698 0282 9BB2     		uxth	r3, r3
 1699 0284 863B     		subs	r3, r3, #134
 1700 0286 9BB2     		uxth	r3, r3
 1701 0288 9AB2     		uxth	r2, r3
 1702 028a 234B     		ldr	r3, .L102+92
 1703 028c 1A80     		strh	r2, [r3]	@ movhi
 374:.\main.c      ****                                     break;
 1704              		.loc 1 374 0
 1705 028e 48E0     		b	.L68
 1706              	.L65:
 375:.\main.c      ****                                     case 'R':
 376:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 377:.\main.c      ****                                         initTurnRight();
 1707              		.loc 1 377 0
 1708 0290 FFF7FEFF 		bl	initTurnRight
 378:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1709              		.loc 1 378 0
 1710 0294 204B     		ldr	r3, .L102+92
 1711 0296 1B88     		ldrh	r3, [r3]
 1712 0298 9BB2     		uxth	r3, r3
 1713 029a 863B     		subs	r3, r3, #134
 1714 029c 9BB2     		uxth	r3, r3
 1715 029e 9AB2     		uxth	r2, r3
 1716 02a0 1D4B     		ldr	r3, .L102+92
 1717 02a2 1A80     		strh	r2, [r3]	@ movhi
 379:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 380:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1718              		.loc 1 380 0
 1719 02a4 4CF25030 		movw	r0, #50000
 1720 02a8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 381:.\main.c      ****                                     break;
 1721              		.loc 1 381 0
 1722 02ac 39E0     		b	.L68
 1723              	.L67:
 382:.\main.c      ****                                     case 'U':
 383:.\main.c      ****                                         // Direction not tracked any more
 384:.\main.c      ****                                         initTurnU();
 1724              		.loc 1 384 0
 1725 02ae FFF7FEFF 		bl	initTurnU
 385:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1726              		.loc 1 385 0
 1727 02b2 1A48     		ldr	r0, .L102+96
 1728 02b4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 386:.\main.c      ****                                         //target_distance_quad += 208;
 387:.\main.c      ****                                     break;
 1729              		.loc 1 387 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 39


 1730 02b8 33E0     		b	.L68
 1731              	.L103:
 1732 02ba 00BF     		.align	2
 1733              	.L102:
 1734 02bc 00000000 		.word	isr_quad1
 1735 02c0 00000000 		.word	isr_turn_timer
 1736 02c4 00000000 		.word	button
 1737 02c8 00000000 		.word	isr_deadzone
 1738 02cc 00000000 		.word	BIN_ENABLED
 1739 02d0 00000000 		.word	BT_ENABLED
 1740 02d4 00000000 		.word	frontSensors
 1741 02d8 00000000 		.word	track_mode
 1742 02dc 00000000 		.word	movement_state
 1743 02e0 00000000 		.word	initial_pos_valid
 1744 02e4 00000000 		.word	system_state
 1745 02e8 00000000 		.word	initial_x_pos
 1746 02ec 00000000 		.word	initial_y_pos
 1747 02f0 00000000 		.word	instructionCount
 1748 02f4 00000000 		.word	instructions
 1749 02f8 00000000 		.word	sensorsDisabled
 1750 02fc 00000000 		.word	accum_dist
 1751 0300 24000000 		.word	.LC2
 1752 0304 00000000 		.word	reached_target
 1753 0308 38000000 		.word	.LC3
 1754 030c 58000000 		.word	.LC4
 1755 0310 00000000 		.word	deadzone
 1756 0314 00000000 		.word	instructionLength
 1757 0318 00000000 		.word	target_distance_quad
 1758 031c 905F0100 		.word	90000
 1759              	.L99:
 388:.\main.c      ****                                     
 389:.\main.c      ****                                     default:
 390:.\main.c      ****                                         //do nothing
 391:.\main.c      ****                                         break;
 1760              		.loc 1 391 0
 1761 0320 00BF     		nop
 1762              	.L68:
 392:.\main.c      ****                                 }
 393:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1763              		.loc 1 393 0
 1764 0322 AE4B     		ldr	r3, .L104
 1765 0324 1B88     		ldrh	r3, [r3]
 1766 0326 1BB2     		sxth	r3, r3
 1767 0328 002B     		cmp	r3, #0
 1768 032a 02DA     		bge	.L69
 1769              		.loc 1 393 0 is_stmt 0 discriminator 1
 1770 032c AB4B     		ldr	r3, .L104
 1771 032e 0022     		movs	r2, #0
 1772 0330 1A80     		strh	r2, [r3]	@ movhi
 1773              	.L69:
 394:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1774              		.loc 1 394 0 is_stmt 1
 1775 0332 AA4B     		ldr	r3, .L104
 1776 0334 1B88     		ldrh	r3, [r3]
 1777 0336 1BB2     		sxth	r3, r3
 1778 0338 07F12002 		add	r2, r7, #32
 1779 033c 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 40


 1780 033e A849     		ldr	r1, .L104+4
 1781 0340 1A46     		mov	r2, r3
 1782 0342 FFF7FEFF 		bl	sprintf
 395:.\main.c      ****                                  UART_PutString(mes);
 1783              		.loc 1 395 0
 1784 0346 07F12003 		add	r3, r7, #32
 1785 034a 1846     		mov	r0, r3
 1786 034c FFF7FEFF 		bl	UART_PutString
 396:.\main.c      ****                                 Timer_Deadzone_Start();
 1787              		.loc 1 396 0
 1788 0350 FFF7FEFF 		bl	Timer_Deadzone_Start
 397:.\main.c      ****                                 reached_target = 0;
 1789              		.loc 1 397 0
 1790 0354 A34B     		ldr	r3, .L104+8
 1791 0356 0022     		movs	r2, #0
 1792 0358 1A70     		strb	r2, [r3]
 398:.\main.c      ****                                 overshot_target = 0;
 1793              		.loc 1 398 0
 1794 035a A34B     		ldr	r3, .L104+12
 1795 035c 0022     		movs	r2, #0
 1796 035e 1A70     		strb	r2, [r3]
 399:.\main.c      ****                                 instructionCount += 2;
 1797              		.loc 1 399 0
 1798 0360 A24B     		ldr	r3, .L104+16
 1799 0362 1B88     		ldrh	r3, [r3]
 1800 0364 0233     		adds	r3, r3, #2
 1801 0366 9AB2     		uxth	r2, r3
 1802 0368 A04B     		ldr	r3, .L104+16
 1803 036a 1A80     		strh	r2, [r3]	@ movhi
 1804              	.LBE6:
 1805              	.LBE5:
 333:.\main.c      ****                         {
 1806              		.loc 1 333 0
 1807 036c AFE1     		b	.L53
 1808              	.L57:
 333:.\main.c      ****                         {
 1809              		.loc 1 333 0 is_stmt 0 discriminator 1
 1810 036e AEE1     		b	.L53
 1811              	.L56:
 400:.\main.c      ****                             }
 401:.\main.c      ****                             }
 402:.\main.c      ****                         }
 403:.\main.c      ****                     }
 404:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1812              		.loc 1 404 0 is_stmt 1
 1813 0370 9F4B     		ldr	r3, .L104+20
 1814 0372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1815 0374 002B     		cmp	r3, #0
 1816 0376 40F0BA80 		bne	.L70
 1817              		.loc 1 404 0 is_stmt 0 discriminator 1
 1818 037a 9D4B     		ldr	r3, .L104+20
 1819 037c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1820 037e 002B     		cmp	r3, #0
 1821 0380 40F0B580 		bne	.L70
 1822              		.loc 1 404 0 discriminator 2
 1823 0384 9A4B     		ldr	r3, .L104+20
 1824 0386 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 41


 1825 0388 002B     		cmp	r3, #0
 1826 038a 40F0B080 		bne	.L70
 1827              		.loc 1 404 0 discriminator 3
 1828 038e 984B     		ldr	r3, .L104+20
 1829 0390 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1830 0392 002B     		cmp	r3, #0
 1831 0394 40F0AB80 		bne	.L70
 1832              		.loc 1 404 0 discriminator 4
 1833 0398 954B     		ldr	r3, .L104+20
 1834 039a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1835 039c 002B     		cmp	r3, #0
 1836 039e 40F0A680 		bne	.L70
 1837              		.loc 1 404 0 discriminator 5
 1838 03a2 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1839 03a6 552B     		cmp	r3, #85
 1840 03a8 04D0     		beq	.L71
 1841              		.loc 1 404 0 discriminator 6
 1842 03aa 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1843 03ae 442B     		cmp	r3, #68
 1844 03b0 40F09D80 		bne	.L70
 1845              	.L71:
 405:.\main.c      ****                     {
 406:.\main.c      ****                         if(sensorsDisabled == 0)
 1846              		.loc 1 406 0 is_stmt 1
 1847 03b4 8F4B     		ldr	r3, .L104+24
 1848 03b6 1B68     		ldr	r3, [r3]
 1849 03b8 002B     		cmp	r3, #0
 1850 03ba 40F09780 		bne	.L72
 407:.\main.c      ****                         {
 408:.\main.c      ****                                 if(nextStep == 'D')
 1851              		.loc 1 408 0
 1852 03be 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1853 03c2 442B     		cmp	r3, #68
 1854 03c4 17D1     		bne	.L73
 1855              	.LBB7:
 409:.\main.c      ****                                 {
 410:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1856              		.loc 1 410 0
 1857 03c6 894B     		ldr	r3, .L104+16
 1858 03c8 1B88     		ldrh	r3, [r3]
 1859 03ca 0233     		adds	r3, r3, #2
 1860 03cc 8A4A     		ldr	r2, .L104+28
 1861 03ce D35C     		ldrb	r3, [r2, r3]
 1862 03d0 87F83130 		strb	r3, [r7, #49]
 411:.\main.c      ****                                     if(nextInstruction == 'U')
 1863              		.loc 1 411 0
 1864 03d4 97F83130 		ldrb	r3, [r7, #49]	@ zero_extendqisi2
 1865 03d8 552B     		cmp	r3, #85
 1866 03da 0CD1     		bne	.L73
 412:.\main.c      ****                                     {
 413:.\main.c      ****                                         instructionCount += 2;
 1867              		.loc 1 413 0
 1868 03dc 834B     		ldr	r3, .L104+16
 1869 03de 1B88     		ldrh	r3, [r3]
 1870 03e0 0233     		adds	r3, r3, #2
 1871 03e2 9AB2     		uxth	r2, r3
 1872 03e4 814B     		ldr	r3, .L104+16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 42


 1873 03e6 1A80     		strh	r2, [r3]	@ movhi
 414:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1874              		.loc 1 414 0
 1875 03e8 804B     		ldr	r3, .L104+16
 1876 03ea 1B88     		ldrh	r3, [r3]
 1877 03ec 1A46     		mov	r2, r3
 1878 03ee 824B     		ldr	r3, .L104+28
 1879 03f0 9B5C     		ldrb	r3, [r3, r2]
 1880 03f2 87F83530 		strb	r3, [r7, #53]
 1881              	.L73:
 1882              	.LBE7:
 415:.\main.c      ****                                     }
 416:.\main.c      ****                                 }
 417:.\main.c      ****                                 
 418:.\main.c      ****                                 if(nextStep == 'U')
 1883              		.loc 1 418 0
 1884 03f6 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1885 03fa 552B     		cmp	r3, #85
 1886 03fc 76D1     		bne	.L72
 419:.\main.c      ****                                 {
 420:.\main.c      ****                                     actionDebounce++;
 1887              		.loc 1 420 0
 1888 03fe FB8E     		ldrh	r3, [r7, #54]
 1889 0400 0133     		adds	r3, r3, #1
 1890 0402 FB86     		strh	r3, [r7, #54]	@ movhi
 421:.\main.c      ****                                     if(actionDebounce >= 2600)
 1891              		.loc 1 421 0
 1892 0404 FB8E     		ldrh	r3, [r7, #54]
 1893 0406 40F62722 		movw	r2, #2599
 1894 040a 9342     		cmp	r3, r2
 1895 040c 6ED9     		bls	.L72
 422:.\main.c      ****                                     {
 423:.\main.c      ****                                         if(reached_target == 1)
 1896              		.loc 1 423 0
 1897 040e 754B     		ldr	r3, .L104+8
 1898 0410 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1899 0412 012B     		cmp	r3, #1
 1900 0414 6AD1     		bne	.L72
 1901              	.LBB8:
 424:.\main.c      ****                                         {
 425:.\main.c      ****                                     char mes[16];
 426:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1902              		.loc 1 426 0
 1903 0416 794B     		ldr	r3, .L104+32
 1904 0418 1B88     		ldrh	r3, [r3]
 1905 041a 1BB2     		sxth	r3, r3
 1906 041c 07F11002 		add	r2, r7, #16
 1907 0420 1046     		mov	r0, r2
 1908 0422 7749     		ldr	r1, .L104+36
 1909 0424 1A46     		mov	r2, r3
 1910 0426 FFF7FEFF 		bl	sprintf
 427:.\main.c      ****                                      UART_PutString(mes);
 1911              		.loc 1 427 0
 1912 042a 07F11003 		add	r3, r7, #16
 1913 042e 1846     		mov	r0, r3
 1914 0430 FFF7FEFF 		bl	UART_PutString
 428:.\main.c      ****                                          accum_dist = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 43


 1915              		.loc 1 428 0
 1916 0434 714B     		ldr	r3, .L104+32
 1917 0436 0022     		movs	r2, #0
 1918 0438 1A80     		strh	r2, [r3]	@ movhi
 429:.\main.c      ****                                     uint8 nextStepDist;
 430:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 1919              		.loc 1 430 0
 1920 043a 6C4B     		ldr	r3, .L104+16
 1921 043c 1B88     		ldrh	r3, [r3]
 1922 043e 1A46     		mov	r2, r3
 1923 0440 704B     		ldr	r3, .L104+40
 1924 0442 1B88     		ldrh	r3, [r3]
 1925 0444 053B     		subs	r3, r3, #5
 1926 0446 9A42     		cmp	r2, r3
 1927 0448 07DC     		bgt	.L74
 1928              		.loc 1 430 0 is_stmt 0 discriminator 1
 1929 044a 684B     		ldr	r3, .L104+16
 1930 044c 1B88     		ldrh	r3, [r3]
 1931 044e 0333     		adds	r3, r3, #3
 1932 0450 694A     		ldr	r2, .L104+28
 1933 0452 D35C     		ldrb	r3, [r2, r3]
 1934 0454 87F83330 		strb	r3, [r7, #51]
 1935 0458 02E0     		b	.L75
 1936              	.L74:
 431:.\main.c      ****                                     else nextStepDist = 0;
 1937              		.loc 1 431 0 is_stmt 1
 1938 045a 0023     		movs	r3, #0
 1939 045c 87F83330 		strb	r3, [r7, #51]
 1940              	.L75:
 432:.\main.c      ****                                     
 433:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1941              		.loc 1 433 0
 1942 0460 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1943 0464 9BB2     		uxth	r3, r3
 1944 0466 1A46     		mov	r2, r3	@ movhi
 1945 0468 D200     		lsls	r2, r2, #3
 1946 046a 1A44     		add	r2, r2, r3
 1947 046c D200     		lsls	r2, r2, #3
 1948 046e D31A     		subs	r3, r2, r3
 1949 0470 5B00     		lsls	r3, r3, #1
 1950 0472 9BB2     		uxth	r3, r3
 1951 0474 9AB2     		uxth	r2, r3
 1952 0476 594B     		ldr	r3, .L104
 1953 0478 1A80     		strh	r2, [r3]	@ movhi
 434:.\main.c      ****                                     //target_distance_quad += 208;
 435:.\main.c      ****                                     
 436:.\main.c      ****                                         UART_PutString("Triggered at white light \r\n");
 1954              		.loc 1 436 0
 1955 047a 6348     		ldr	r0, .L104+44
 1956 047c FFF7FEFF 		bl	UART_PutString
 437:.\main.c      ****                                         UART_PutString("Deadzone entered!\r\n");
 1957              		.loc 1 437 0
 1958 0480 6248     		ldr	r0, .L104+48
 1959 0482 FFF7FEFF 		bl	UART_PutString
 438:.\main.c      ****                                         
 439:.\main.c      ****                                         deadzone = 1;
 1960              		.loc 1 439 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 44


 1961 0486 624B     		ldr	r3, .L104+52
 1962 0488 0122     		movs	r2, #1
 1963 048a 1A70     		strb	r2, [r3]
 440:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1964              		.loc 1 440 0
 1965 048c 6148     		ldr	r0, .L104+56
 1966 048e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 441:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 1967              		.loc 1 441 0
 1968 0492 524B     		ldr	r3, .L104
 1969 0494 1B88     		ldrh	r3, [r3]
 1970 0496 1BB2     		sxth	r3, r3
 1971 0498 002B     		cmp	r3, #0
 1972 049a 02DA     		bge	.L76
 1973              		.loc 1 441 0 is_stmt 0 discriminator 1
 1974 049c 4F4B     		ldr	r3, .L104
 1975 049e 0022     		movs	r2, #0
 1976 04a0 1A80     		strh	r2, [r3]	@ movhi
 1977              	.L76:
 442:.\main.c      ****                                         Timer_Deadzone_Start();
 1978              		.loc 1 442 0 is_stmt 1
 1979 04a2 FFF7FEFF 		bl	Timer_Deadzone_Start
 443:.\main.c      ****                                         actionDebounce = 0;
 1980              		.loc 1 443 0
 1981 04a6 0023     		movs	r3, #0
 1982 04a8 FB86     		strh	r3, [r7, #54]	@ movhi
 444:.\main.c      ****                                         sensorsDisabled = 1;
 1983              		.loc 1 444 0
 1984 04aa 524B     		ldr	r3, .L104+24
 1985 04ac 0122     		movs	r2, #1
 1986 04ae 1A60     		str	r2, [r3]
 445:.\main.c      ****                                         initTurnU();
 1987              		.loc 1 445 0
 1988 04b0 FFF7FEFF 		bl	initTurnU
 446:.\main.c      ****                                         reached_target = 0;
 1989              		.loc 1 446 0
 1990 04b4 4B4B     		ldr	r3, .L104+8
 1991 04b6 0022     		movs	r2, #0
 1992 04b8 1A70     		strb	r2, [r3]
 447:.\main.c      ****                                         overshot_target = 0;
 1993              		.loc 1 447 0
 1994 04ba 4B4B     		ldr	r3, .L104+12
 1995 04bc 0022     		movs	r2, #0
 1996 04be 1A70     		strb	r2, [r3]
 448:.\main.c      ****                                         instructionCount += 2;
 1997              		.loc 1 448 0
 1998 04c0 4A4B     		ldr	r3, .L104+16
 1999 04c2 1B88     		ldrh	r3, [r3]
 2000 04c4 0233     		adds	r3, r3, #2
 2001 04c6 9AB2     		uxth	r2, r3
 2002 04c8 484B     		ldr	r3, .L104+16
 2003 04ca 1A80     		strh	r2, [r3]	@ movhi
 449:.\main.c      ****                                         
 450:.\main.c      ****                                         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2004              		.loc 1 450 0
 2005 04cc 434B     		ldr	r3, .L104
 2006 04ce 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 45


 2007 04d0 1BB2     		sxth	r3, r3
 2008 04d2 07F11002 		add	r2, r7, #16
 2009 04d6 1046     		mov	r0, r2
 2010 04d8 4149     		ldr	r1, .L104+4
 2011 04da 1A46     		mov	r2, r3
 2012 04dc FFF7FEFF 		bl	sprintf
 451:.\main.c      ****                                         UART_PutString(mes);
 2013              		.loc 1 451 0
 2014 04e0 07F11003 		add	r3, r7, #16
 2015 04e4 1846     		mov	r0, r3
 2016 04e6 FFF7FEFF 		bl	UART_PutString
 2017              	.LBE8:
 406:.\main.c      ****                         {
 2018              		.loc 1 406 0
 2019 04ea F0E0     		b	.L53
 2020              	.L72:
 406:.\main.c      ****                         {
 2021              		.loc 1 406 0 is_stmt 0 discriminator 3
 2022 04ec EFE0     		b	.L53
 2023              	.L70:
 452:.\main.c      ****                                 }
 453:.\main.c      ****                                 }
 454:.\main.c      ****                             }
 455:.\main.c      ****                         }
 456:.\main.c      ****                     }
 457:.\main.c      ****                     else if (overshot_target == 1 && nextStep == 'D')
 2024              		.loc 1 457 0 is_stmt 1
 2025 04ee 3E4B     		ldr	r3, .L104+12
 2026 04f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2027 04f2 012B     		cmp	r3, #1
 2028 04f4 40F0E680 		bne	.L77
 2029              		.loc 1 457 0 is_stmt 0 discriminator 1
 2030 04f8 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2031 04fc 442B     		cmp	r3, #68
 2032 04fe 40F0E180 		bne	.L77
 2033              	.LBB9:
 458:.\main.c      ****                     {
 459:.\main.c      ****                         
 460:.\main.c      ****                                 instructionCount += 2;
 2034              		.loc 1 460 0 is_stmt 1
 2035 0502 3A4B     		ldr	r3, .L104+16
 2036 0504 1B88     		ldrh	r3, [r3]
 2037 0506 0233     		adds	r3, r3, #2
 2038 0508 9AB2     		uxth	r2, r3
 2039 050a 384B     		ldr	r3, .L104+16
 2040 050c 1A80     		strh	r2, [r3]	@ movhi
 461:.\main.c      ****                                 nextStep = instructions[instructionCount]; 
 2041              		.loc 1 461 0
 2042 050e 374B     		ldr	r3, .L104+16
 2043 0510 1B88     		ldrh	r3, [r3]
 2044 0512 1A46     		mov	r2, r3
 2045 0514 384B     		ldr	r3, .L104+28
 2046 0516 9B5C     		ldrb	r3, [r3, r2]
 2047 0518 87F83530 		strb	r3, [r7, #53]
 462:.\main.c      ****                                 char mes[16];
 463:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2048              		.loc 1 463 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 46


 2049 051c 374B     		ldr	r3, .L104+32
 2050 051e 1B88     		ldrh	r3, [r3]
 2051 0520 1BB2     		sxth	r3, r3
 2052 0522 3A46     		mov	r2, r7
 2053 0524 1046     		mov	r0, r2
 2054 0526 3649     		ldr	r1, .L104+36
 2055 0528 1A46     		mov	r2, r3
 2056 052a FFF7FEFF 		bl	sprintf
 464:.\main.c      ****                                  UART_PutString(mes);
 2057              		.loc 1 464 0
 2058 052e 3B46     		mov	r3, r7
 2059 0530 1846     		mov	r0, r3
 2060 0532 FFF7FEFF 		bl	UART_PutString
 465:.\main.c      ****                                  accum_dist = 0;
 2061              		.loc 1 465 0
 2062 0536 314B     		ldr	r3, .L104+32
 2063 0538 0022     		movs	r2, #0
 2064 053a 1A80     		strh	r2, [r3]	@ movhi
 466:.\main.c      ****                                 uint8 nextStepDist;
 467:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2065              		.loc 1 467 0
 2066 053c 2B4B     		ldr	r3, .L104+16
 2067 053e 1B88     		ldrh	r3, [r3]
 2068 0540 1A46     		mov	r2, r3
 2069 0542 304B     		ldr	r3, .L104+40
 2070 0544 1B88     		ldrh	r3, [r3]
 2071 0546 053B     		subs	r3, r3, #5
 2072 0548 9A42     		cmp	r2, r3
 2073 054a 07DC     		bgt	.L78
 2074              		.loc 1 467 0 is_stmt 0 discriminator 1
 2075 054c 274B     		ldr	r3, .L104+16
 2076 054e 1B88     		ldrh	r3, [r3]
 2077 0550 0333     		adds	r3, r3, #3
 2078 0552 294A     		ldr	r2, .L104+28
 2079 0554 D35C     		ldrb	r3, [r2, r3]
 2080 0556 87F83230 		strb	r3, [r7, #50]
 2081 055a 02E0     		b	.L79
 2082              	.L78:
 468:.\main.c      ****                                 else nextStepDist = 0;
 2083              		.loc 1 468 0 is_stmt 1
 2084 055c 0023     		movs	r3, #0
 2085 055e 87F83230 		strb	r3, [r7, #50]
 2086              	.L79:
 469:.\main.c      ****                                 
 470:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2087              		.loc 1 470 0
 2088 0562 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 2089 0566 9BB2     		uxth	r3, r3
 2090 0568 1A46     		mov	r2, r3	@ movhi
 2091 056a D200     		lsls	r2, r2, #3
 2092 056c 1A44     		add	r2, r2, r3
 2093 056e D200     		lsls	r2, r2, #3
 2094 0570 D31A     		subs	r3, r2, r3
 2095 0572 5B00     		lsls	r3, r3, #1
 2096 0574 9BB2     		uxth	r3, r3
 2097 0576 9AB2     		uxth	r2, r3
 2098 0578 184B     		ldr	r3, .L104
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 47


 2099 057a 1A80     		strh	r2, [r3]	@ movhi
 471:.\main.c      ****                                 
 472:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 2100              		.loc 1 472 0
 2101 057c 2648     		ldr	r0, .L104+60
 2102 057e FFF7FEFF 		bl	UART_PutString
 473:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 2103              		.loc 1 473 0
 2104 0582 2248     		ldr	r0, .L104+48
 2105 0584 FFF7FEFF 		bl	UART_PutString
 474:.\main.c      ****                                     
 475:.\main.c      ****                                     
 476:.\main.c      ****                                     actionDebounce = 0;
 2106              		.loc 1 476 0
 2107 0588 0023     		movs	r3, #0
 2108 058a FB86     		strh	r3, [r7, #54]	@ movhi
 477:.\main.c      ****                                     sensorsDisabled = 1;
 2109              		.loc 1 477 0
 2110 058c 194B     		ldr	r3, .L104+24
 2111 058e 0122     		movs	r2, #1
 2112 0590 1A60     		str	r2, [r3]
 478:.\main.c      ****                                     
 479:.\main.c      ****                                      switch(nextStep)
 2113              		.loc 1 479 0
 2114 0592 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2115 0596 4C3B     		subs	r3, r3, #76
 2116 0598 092B     		cmp	r3, #9
 2117 059a 6BD8     		bhi	.L100
 2118 059c 01A2     		adr	r2, .L82
 2119 059e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2120 05a2 00BF     		.p2align 2
 2121              	.L82:
 2122 05a4 1D060000 		.word	.L81+1
 2123 05a8 75060000 		.word	.L100+1
 2124 05ac 75060000 		.word	.L100+1
 2125 05b0 75060000 		.word	.L100+1
 2126 05b4 75060000 		.word	.L100+1
 2127 05b8 75060000 		.word	.L100+1
 2128 05bc 3B060000 		.word	.L83+1
 2129 05c0 CD050000 		.word	.L84+1
 2130 05c4 75060000 		.word	.L100+1
 2131 05c8 59060000 		.word	.L85+1
 2132              		.p2align 1
 2133              	.L84:
 480:.\main.c      ****                                 {
 481:.\main.c      ****                                     case 'S':
 482:.\main.c      ****                                         inittrackLineZ();
 2134              		.loc 1 482 0
 2135 05cc FFF7FEFF 		bl	inittrackLineZ
 483:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 2136              		.loc 1 483 0
 2137 05d0 42F21070 		movw	r0, #10000
 2138 05d4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 484:.\main.c      ****                                         //do nothing
 485:.\main.c      ****                                     break;
 2139              		.loc 1 485 0
 2140 05d8 4DE0     		b	.L86
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 48


 2141              	.L105:
 2142 05da 00BF     		.align	2
 2143              	.L104:
 2144 05dc 00000000 		.word	target_distance_quad
 2145 05e0 6C000000 		.word	.LC5
 2146 05e4 00000000 		.word	reached_target
 2147 05e8 00000000 		.word	overshot_target
 2148 05ec 00000000 		.word	instructionCount
 2149 05f0 00000000 		.word	frontSensors
 2150 05f4 00000000 		.word	sensorsDisabled
 2151 05f8 00000000 		.word	instructions
 2152 05fc 00000000 		.word	accum_dist
 2153 0600 24000000 		.word	.LC2
 2154 0604 00000000 		.word	instructionLength
 2155 0608 80000000 		.word	.LC6
 2156 060c 58000000 		.word	.LC4
 2157 0610 00000000 		.word	deadzone
 2158 0614 905F0100 		.word	90000
 2159 0618 9C000000 		.word	.LC7
 2160              	.L81:
 486:.\main.c      ****                                     case 'L':
 487:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 488:.\main.c      ****                                         initTurnLeft();
 2161              		.loc 1 488 0
 2162 061c FFF7FEFF 		bl	initTurnLeft
 489:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2163              		.loc 1 489 0
 2164 0620 4CF25030 		movw	r0, #50000
 2165 0624 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 490:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2166              		.loc 1 490 0
 2167 0628 414B     		ldr	r3, .L106
 2168 062a 1B88     		ldrh	r3, [r3]
 2169 062c 9BB2     		uxth	r3, r3
 2170 062e 863B     		subs	r3, r3, #134
 2171 0630 9BB2     		uxth	r3, r3
 2172 0632 9AB2     		uxth	r2, r3
 2173 0634 3E4B     		ldr	r3, .L106
 2174 0636 1A80     		strh	r2, [r3]	@ movhi
 491:.\main.c      ****                                     break;
 2175              		.loc 1 491 0
 2176 0638 1DE0     		b	.L86
 2177              	.L83:
 492:.\main.c      ****                                     case 'R':
 493:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 494:.\main.c      ****                                         initTurnRight();
 2178              		.loc 1 494 0
 2179 063a FFF7FEFF 		bl	initTurnRight
 495:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2180              		.loc 1 495 0
 2181 063e 4CF25030 		movw	r0, #50000
 2182 0642 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 496:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 497:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2183              		.loc 1 497 0
 2184 0646 3A4B     		ldr	r3, .L106
 2185 0648 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 49


 2186 064a 9BB2     		uxth	r3, r3
 2187 064c 863B     		subs	r3, r3, #134
 2188 064e 9BB2     		uxth	r3, r3
 2189 0650 9AB2     		uxth	r2, r3
 2190 0652 374B     		ldr	r3, .L106
 2191 0654 1A80     		strh	r2, [r3]	@ movhi
 498:.\main.c      ****                                         
 499:.\main.c      ****                                     break;
 2192              		.loc 1 499 0
 2193 0656 0EE0     		b	.L86
 2194              	.L85:
 500:.\main.c      ****                                     case 'U':
 501:.\main.c      ****                                         // Direction not tracked any more
 502:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2195              		.loc 1 502 0
 2196 0658 3648     		ldr	r0, .L106+4
 2197 065a FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 503:.\main.c      ****                                         initTurnU();
 2198              		.loc 1 503 0
 2199 065e FFF7FEFF 		bl	initTurnU
 504:.\main.c      ****                                         //target_distance_quad += 208;
 505:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2200              		.loc 1 505 0
 2201 0662 334B     		ldr	r3, .L106
 2202 0664 1B88     		ldrh	r3, [r3]
 2203 0666 9BB2     		uxth	r3, r3
 2204 0668 863B     		subs	r3, r3, #134
 2205 066a 9BB2     		uxth	r3, r3
 2206 066c 9AB2     		uxth	r2, r3
 2207 066e 304B     		ldr	r3, .L106
 2208 0670 1A80     		strh	r2, [r3]	@ movhi
 506:.\main.c      ****                                     break;
 2209              		.loc 1 506 0
 2210 0672 00E0     		b	.L86
 2211              	.L100:
 507:.\main.c      ****                                     default:
 508:.\main.c      ****                                         //do nothing
 509:.\main.c      ****                                         break;
 2212              		.loc 1 509 0
 2213 0674 00BF     		nop
 2214              	.L86:
 510:.\main.c      ****                                 }
 511:.\main.c      ****                                     
 512:.\main.c      ****                                     reached_target = 0;
 2215              		.loc 1 512 0
 2216 0676 304B     		ldr	r3, .L106+8
 2217 0678 0022     		movs	r2, #0
 2218 067a 1A70     		strb	r2, [r3]
 513:.\main.c      ****                                     overshot_target = 0;
 2219              		.loc 1 513 0
 2220 067c 2F4B     		ldr	r3, .L106+12
 2221 067e 0022     		movs	r2, #0
 2222 0680 1A70     		strb	r2, [r3]
 514:.\main.c      ****                                     instructionCount += 2;
 2223              		.loc 1 514 0
 2224 0682 2F4B     		ldr	r3, .L106+16
 2225 0684 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 50


 2226 0686 0233     		adds	r3, r3, #2
 2227 0688 9AB2     		uxth	r2, r3
 2228 068a 2D4B     		ldr	r3, .L106+16
 2229 068c 1A80     		strh	r2, [r3]	@ movhi
 515:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2230              		.loc 1 515 0
 2231 068e 284B     		ldr	r3, .L106
 2232 0690 1B88     		ldrh	r3, [r3]
 2233 0692 1BB2     		sxth	r3, r3
 2234 0694 002B     		cmp	r3, #0
 2235 0696 02DA     		bge	.L87
 2236              		.loc 1 515 0 is_stmt 0 discriminator 1
 2237 0698 254B     		ldr	r3, .L106
 2238 069a 0022     		movs	r2, #0
 2239 069c 1A80     		strh	r2, [r3]	@ movhi
 2240              	.L87:
 516:.\main.c      ****                                     Timer_Deadzone_Start();
 2241              		.loc 1 516 0 is_stmt 1 discriminator 5
 2242 069e FFF7FEFF 		bl	Timer_Deadzone_Start
 517:.\main.c      ****                                     deadzone = 1;
 2243              		.loc 1 517 0 discriminator 5
 2244 06a2 284B     		ldr	r3, .L106+20
 2245 06a4 0122     		movs	r2, #1
 2246 06a6 1A70     		strb	r2, [r3]
 518:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2247              		.loc 1 518 0 discriminator 5
 2248 06a8 214B     		ldr	r3, .L106
 2249 06aa 1B88     		ldrh	r3, [r3]
 2250 06ac 1BB2     		sxth	r3, r3
 2251 06ae 3A46     		mov	r2, r7
 2252 06b0 1046     		mov	r0, r2
 2253 06b2 2549     		ldr	r1, .L106+24
 2254 06b4 1A46     		mov	r2, r3
 2255 06b6 FFF7FEFF 		bl	sprintf
 519:.\main.c      ****                                     UART_PutString(mes);
 2256              		.loc 1 519 0 discriminator 5
 2257 06ba 3B46     		mov	r3, r7
 2258 06bc 1846     		mov	r0, r3
 2259 06be FFF7FEFF 		bl	UART_PutString
 2260              	.LBE9:
 458:.\main.c      ****                         
 2261              		.loc 1 458 0 discriminator 5
 2262 06c2 04E0     		b	.L53
 2263              	.L77:
 520:.\main.c      ****                     }
 521:.\main.c      ****                     else
 522:.\main.c      ****                     {
 523:.\main.c      ****                         inittrackLineZ();
 2264              		.loc 1 523 0
 2265 06c4 FFF7FEFF 		bl	inittrackLineZ
 524:.\main.c      ****                         actionDebounce = 0;
 2266              		.loc 1 524 0
 2267 06c8 0023     		movs	r3, #0
 2268 06ca FB86     		strh	r3, [r7, #54]	@ movhi
 2269              	.LBE4:
 525:.\main.c      ****                     }
 526:.\main.c      ****                 }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 51


 527:.\main.c      ****                 break;
 2270              		.loc 1 527 0
 2271 06cc FFE7     		b	.L101
 2272              	.L53:
 2273              	.L101:
 2274 06ce 00BF     		nop
 2275              	.L40:
 528:.\main.c      ****         }
 529:.\main.c      ****         
 530:.\main.c      ****         switch(movement_state)
 2276              		.loc 1 530 0
 2277 06d0 1E4B     		ldr	r3, .L106+28
 2278 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2279 06d4 072B     		cmp	r3, #7
 2280 06d6 3FF6C6AC 		bhi	.L98
 2281 06da 01A2     		adr	r2, .L90
 2282 06dc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2283              		.p2align 2
 2284              	.L90:
 2285 06e0 01070000 		.word	.L89+1
 2286 06e4 07070000 		.word	.L91+1
 2287 06e8 0D070000 		.word	.L92+1
 2288 06ec 19070000 		.word	.L93+1
 2289 06f0 1F070000 		.word	.L94+1
 2290 06f4 25070000 		.word	.L95+1
 2291 06f8 2B070000 		.word	.L96+1
 2292 06fc 13070000 		.word	.L97+1
 2293              		.p2align 1
 2294              	.L89:
 531:.\main.c      ****         {
 532:.\main.c      ****             case DRIVE:
 533:.\main.c      ****                 driveForwards();
 2295              		.loc 1 533 0
 2296 0700 FFF7FEFF 		bl	driveForwards
 534:.\main.c      ****             break;
 2297              		.loc 1 534 0
 2298 0704 13E0     		b	.L88
 2299              	.L91:
 535:.\main.c      ****             case LTURN:
 536:.\main.c      ****                 turnLeft();
 2300              		.loc 1 536 0
 2301 0706 FFF7FEFF 		bl	turnLeft
 537:.\main.c      ****             break;
 2302              		.loc 1 537 0
 2303 070a 10E0     		b	.L88
 2304              	.L92:
 538:.\main.c      ****             case RTURN:
 539:.\main.c      ****                 turnRight();
 2305              		.loc 1 539 0
 2306 070c FFF7FEFF 		bl	turnRight
 540:.\main.c      ****             break;
 2307              		.loc 1 540 0
 2308 0710 0DE0     		b	.L88
 2309              	.L97:
 541:.\main.c      ****             case UTURN:
 542:.\main.c      ****                 turnU();
 2310              		.loc 1 542 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 52


 2311 0712 FFF7FEFF 		bl	turnU
 543:.\main.c      ****             break;
 2312              		.loc 1 543 0
 2313 0716 0AE0     		b	.L88
 2314              	.L93:
 544:.\main.c      ****             case STOPPED:
 545:.\main.c      ****                 brakeMotor();
 2315              		.loc 1 545 0
 2316 0718 FFF7FEFF 		bl	brakeMotor
 546:.\main.c      ****             break;
 2317              		.loc 1 546 0
 2318 071c 07E0     		b	.L88
 2319              	.L94:
 547:.\main.c      ****             case TRACKING:
 548:.\main.c      ****                 trackLine();
 2320              		.loc 1 548 0
 2321 071e FFF7FEFF 		bl	trackLine
 549:.\main.c      ****             break;
 2322              		.loc 1 549 0
 2323 0722 04E0     		b	.L88
 2324              	.L95:
 550:.\main.c      ****             case TRACKING_U:
 551:.\main.c      ****                 trackLineU();
 2325              		.loc 1 551 0
 2326 0724 FFF7FEFF 		bl	trackLineU
 552:.\main.c      ****             break;
 2327              		.loc 1 552 0
 2328 0728 01E0     		b	.L88
 2329              	.L96:
 553:.\main.c      ****             case TRACKING_SOFT:
 554:.\main.c      ****                 trackLineZ();
 2330              		.loc 1 554 0
 2331 072a FFF7FEFF 		bl	trackLineZ
 2332              	.L88:
 555:.\main.c      ****         }      
 556:.\main.c      ****     }   
 2333              		.loc 1 556 0
 2334 072e 9AE4     		b	.L98
 2335              	.L107:
 2336              		.align	2
 2337              	.L106:
 2338 0730 00000000 		.word	target_distance_quad
 2339 0734 905F0100 		.word	90000
 2340 0738 00000000 		.word	reached_target
 2341 073c 00000000 		.word	overshot_target
 2342 0740 00000000 		.word	instructionCount
 2343 0744 00000000 		.word	deadzone
 2344 0748 6C000000 		.word	.LC5
 2345 074c 00000000 		.word	movement_state
 2346              		.cfi_endproc
 2347              	.LFE71:
 2348              		.size	main, .-main
 2349              		.section	.text.handle_rx_binary,"ax",%progbits
 2350              		.align	2
 2351              		.global	handle_rx_binary
 2352              		.thumb
 2353              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 53


 2354              		.type	handle_rx_binary, %function
 2355              	handle_rx_binary:
 2356              	.LFB72:
 557:.\main.c      **** }
 558:.\main.c      **** 
 559:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 560:.\main.c      **** 
 561:.\main.c      **** void handle_rx_binary()
 562:.\main.c      **** {
 2357              		.loc 1 562 0
 2358              		.cfi_startproc
 2359              		@ args = 0, pretend = 0, frame = 32
 2360              		@ frame_needed = 1, uses_anonymous_args = 0
 2361              		@ link register save eliminated.
 2362 0000 80B4     		push	{r7}
 2363              		.cfi_def_cfa_offset 4
 2364              		.cfi_offset 7, -4
 2365 0002 89B0     		sub	sp, sp, #36
 2366              		.cfi_def_cfa_offset 40
 2367 0004 00AF     		add	r7, sp, #0
 2368              		.cfi_def_cfa_register 7
 563:.\main.c      ****     if(flag_rx == 1)
 2369              		.loc 1 563 0
 2370 0006 524B     		ldr	r3, .L128
 2371 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372 000a 012B     		cmp	r3, #1
 2373 000c 40F09A80 		bne	.L108
 2374              	.LBB10:
 564:.\main.c      ****     {    
 565:.\main.c      ****         flag_rx = 0;
 2375              		.loc 1 565 0
 2376 0010 4F4B     		ldr	r3, .L128
 2377 0012 0022     		movs	r2, #0
 2378 0014 1A70     		strb	r2, [r3]
 566:.\main.c      ****         
 567:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2379              		.loc 1 567 0
 2380 0016 4F4B     		ldr	r3, .L128+4
 2381 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2382 001a 1B02     		lsls	r3, r3, #8
 2383 001c 9AB2     		uxth	r2, r3
 2384 001e 4D4B     		ldr	r3, .L128+4
 2385 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2386 0022 9BB2     		uxth	r3, r3
 2387 0024 1343     		orrs	r3, r3, r2
 2388 0026 9BB2     		uxth	r3, r3
 2389 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 568:.\main.c      ****         char byte_packet[12];
 569:.\main.c      ****         char string_packet[12];
 570:.\main.c      ****         
 571:.\main.c      ****         switch(byteCount)
 2390              		.loc 1 571 0
 2391 002a 4B4B     		ldr	r3, .L128+8
 2392 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2393 002e 043B     		subs	r3, r3, #4
 2394 0030 1E2B     		cmp	r3, #30
 2395 0032 00F28780 		bhi	.L108
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 54


 2396 0036 01A2     		adr	r2, .L112
 2397 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2398              		.p2align 2
 2399              	.L112:
 2400 003c B9000000 		.word	.L111+1
 2401 0040 45010000 		.word	.L108+1
 2402 0044 CD000000 		.word	.L113+1
 2403 0048 45010000 		.word	.L108+1
 2404 004c D5000000 		.word	.L114+1
 2405 0050 45010000 		.word	.L108+1
 2406 0054 DD000000 		.word	.L115+1
 2407 0058 45010000 		.word	.L108+1
 2408 005c E5000000 		.word	.L116+1
 2409 0060 45010000 		.word	.L108+1
 2410 0064 ED000000 		.word	.L117+1
 2411 0068 45010000 		.word	.L108+1
 2412 006c F5000000 		.word	.L118+1
 2413 0070 45010000 		.word	.L108+1
 2414 0074 FD000000 		.word	.L119+1
 2415 0078 45010000 		.word	.L108+1
 2416 007c 05010000 		.word	.L120+1
 2417 0080 45010000 		.word	.L108+1
 2418 0084 0D010000 		.word	.L121+1
 2419 0088 45010000 		.word	.L108+1
 2420 008c 15010000 		.word	.L122+1
 2421 0090 45010000 		.word	.L108+1
 2422 0094 1D010000 		.word	.L123+1
 2423 0098 45010000 		.word	.L108+1
 2424 009c 25010000 		.word	.L124+1
 2425 00a0 45010000 		.word	.L108+1
 2426 00a4 2D010000 		.word	.L125+1
 2427 00a8 45010000 		.word	.L108+1
 2428 00ac 35010000 		.word	.L126+1
 2429 00b0 45010000 		.word	.L108+1
 2430 00b4 3D010000 		.word	.L127+1
 2431              		.p2align 1
 2432              	.L111:
 572:.\main.c      ****         {
 573:.\main.c      ****             case 4:
 574:.\main.c      ****                 buffer_state.rssi = packet[0];
 2433              		.loc 1 574 0
 2434 00b8 264B     		ldr	r3, .L128+4
 2435 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2436 00bc DAB2     		uxtb	r2, r3
 2437 00be 274B     		ldr	r3, .L128+12
 2438 00c0 1A70     		strb	r2, [r3]
 575:.\main.c      ****                 buffer_state.index = packet[1];
 2439              		.loc 1 575 0
 2440 00c2 244B     		ldr	r3, .L128+4
 2441 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2442 00c6 254B     		ldr	r3, .L128+12
 2443 00c8 5A70     		strb	r2, [r3, #1]
 576:.\main.c      ****             break;
 2444              		.loc 1 576 0
 2445 00ca 3BE0     		b	.L108
 2446              	.L113:
 577:.\main.c      ****             case 6:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 55


 578:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2447              		.loc 1 578 0
 2448 00cc FA8B     		ldrh	r2, [r7, #30]
 2449 00ce 234B     		ldr	r3, .L128+12
 2450 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 579:.\main.c      ****             break;
 2451              		.loc 1 579 0
 2452 00d2 37E0     		b	.L108
 2453              	.L114:
 580:.\main.c      ****             case 8:
 581:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2454              		.loc 1 581 0
 2455 00d4 FA8B     		ldrh	r2, [r7, #30]
 2456 00d6 214B     		ldr	r3, .L128+12
 2457 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 582:.\main.c      ****             break;
 2458              		.loc 1 582 0
 2459 00da 33E0     		b	.L108
 2460              	.L115:
 583:.\main.c      ****             case 10:
 584:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2461              		.loc 1 584 0
 2462 00dc FA8B     		ldrh	r2, [r7, #30]
 2463 00de 1F4B     		ldr	r3, .L128+12
 2464 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 585:.\main.c      ****             break;
 2465              		.loc 1 585 0
 2466 00e2 2FE0     		b	.L108
 2467              	.L116:
 586:.\main.c      ****             case 12:
 587:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2468              		.loc 1 587 0
 2469 00e4 FA8B     		ldrh	r2, [r7, #30]
 2470 00e6 1D4B     		ldr	r3, .L128+12
 2471 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 588:.\main.c      ****             break;
 2472              		.loc 1 588 0
 2473 00ea 2BE0     		b	.L108
 2474              	.L117:
 589:.\main.c      ****             case 14:
 590:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2475              		.loc 1 590 0
 2476 00ec FA8B     		ldrh	r2, [r7, #30]
 2477 00ee 1B4B     		ldr	r3, .L128+12
 2478 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 591:.\main.c      ****             break;
 2479              		.loc 1 591 0
 2480 00f2 27E0     		b	.L108
 2481              	.L118:
 592:.\main.c      ****             case 16:
 593:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2482              		.loc 1 593 0
 2483 00f4 FA8B     		ldrh	r2, [r7, #30]
 2484 00f6 194B     		ldr	r3, .L128+12
 2485 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 594:.\main.c      ****             break;
 2486              		.loc 1 594 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 56


 2487 00fa 23E0     		b	.L108
 2488              	.L119:
 595:.\main.c      ****             case 18:
 596:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2489              		.loc 1 596 0
 2490 00fc FA8B     		ldrh	r2, [r7, #30]
 2491 00fe 174B     		ldr	r3, .L128+12
 2492 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 597:.\main.c      ****             break;
 2493              		.loc 1 597 0
 2494 0102 1FE0     		b	.L108
 2495              	.L120:
 598:.\main.c      ****             case 20:
 599:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2496              		.loc 1 599 0
 2497 0104 FA8B     		ldrh	r2, [r7, #30]
 2498 0106 154B     		ldr	r3, .L128+12
 2499 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 600:.\main.c      ****             break;
 2500              		.loc 1 600 0
 2501 010a 1BE0     		b	.L108
 2502              	.L121:
 601:.\main.c      ****             case 22:
 602:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2503              		.loc 1 602 0
 2504 010c FA8B     		ldrh	r2, [r7, #30]
 2505 010e 134B     		ldr	r3, .L128+12
 2506 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 603:.\main.c      ****             break;
 2507              		.loc 1 603 0
 2508 0112 17E0     		b	.L108
 2509              	.L122:
 604:.\main.c      ****             case 24:
 605:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2510              		.loc 1 605 0
 2511 0114 FA8B     		ldrh	r2, [r7, #30]
 2512 0116 114B     		ldr	r3, .L128+12
 2513 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 606:.\main.c      ****             break;
 2514              		.loc 1 606 0
 2515 011a 13E0     		b	.L108
 2516              	.L123:
 607:.\main.c      ****             case 26:
 608:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2517              		.loc 1 608 0
 2518 011c FA8B     		ldrh	r2, [r7, #30]
 2519 011e 0F4B     		ldr	r3, .L128+12
 2520 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 609:.\main.c      ****             break;
 2521              		.loc 1 609 0
 2522 0122 0FE0     		b	.L108
 2523              	.L124:
 610:.\main.c      ****             case 28:
 611:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2524              		.loc 1 611 0
 2525 0124 FA8B     		ldrh	r2, [r7, #30]
 2526 0126 0D4B     		ldr	r3, .L128+12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 57


 2527 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 612:.\main.c      ****             break;
 2528              		.loc 1 612 0
 2529 012a 0BE0     		b	.L108
 2530              	.L125:
 613:.\main.c      ****             case 30:
 614:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2531              		.loc 1 614 0
 2532 012c FA8B     		ldrh	r2, [r7, #30]
 2533 012e 0B4B     		ldr	r3, .L128+12
 2534 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 615:.\main.c      ****             break;
 2535              		.loc 1 615 0
 2536 0132 07E0     		b	.L108
 2537              	.L126:
 616:.\main.c      ****             case 32:
 617:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2538              		.loc 1 617 0
 2539 0134 FA8B     		ldrh	r2, [r7, #30]
 2540 0136 094B     		ldr	r3, .L128+12
 2541 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 618:.\main.c      ****             break;
 2542              		.loc 1 618 0
 2543 013a 03E0     		b	.L108
 2544              	.L127:
 619:.\main.c      ****             case 34:
 620:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2545              		.loc 1 620 0
 2546 013c FA8B     		ldrh	r2, [r7, #30]
 2547 013e 074B     		ldr	r3, .L128+12
 2548 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 621:.\main.c      ****             break;
 2549              		.loc 1 621 0
 2550 0142 00BF     		nop
 2551              	.L108:
 2552              	.LBE10:
 622:.\main.c      ****         }
 623:.\main.c      ****     }
 624:.\main.c      **** }
 2553              		.loc 1 624 0
 2554 0144 2437     		adds	r7, r7, #36
 2555              		.cfi_def_cfa_offset 4
 2556 0146 BD46     		mov	sp, r7
 2557              		.cfi_def_cfa_register 13
 2558              		@ sp needed
 2559 0148 5DF8047B 		ldr	r7, [sp], #4
 2560              		.cfi_restore 7
 2561              		.cfi_def_cfa_offset 0
 2562 014c 7047     		bx	lr
 2563              	.L129:
 2564 014e 00BF     		.align	2
 2565              	.L128:
 2566 0150 00000000 		.word	flag_rx
 2567 0154 00000000 		.word	packet
 2568 0158 00000000 		.word	byteCount
 2569 015c 00000000 		.word	buffer_state
 2570              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 58


 2571              	.LFE72:
 2572              		.size	handle_rx_binary, .-handle_rx_binary
 2573              		.section	.text.setLeftDir,"ax",%progbits
 2574              		.align	2
 2575              		.global	setLeftDir
 2576              		.thumb
 2577              		.thumb_func
 2578              		.type	setLeftDir, %function
 2579              	setLeftDir:
 2580              	.LFB73:
 625:.\main.c      **** 
 626:.\main.c      **** void setLeftDir(uint8 dir)
 627:.\main.c      **** {
 2581              		.loc 1 627 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 8
 2584              		@ frame_needed = 1, uses_anonymous_args = 0
 2585 0000 80B5     		push	{r7, lr}
 2586              		.cfi_def_cfa_offset 8
 2587              		.cfi_offset 7, -8
 2588              		.cfi_offset 14, -4
 2589 0002 82B0     		sub	sp, sp, #8
 2590              		.cfi_def_cfa_offset 16
 2591 0004 00AF     		add	r7, sp, #0
 2592              		.cfi_def_cfa_register 7
 2593 0006 0346     		mov	r3, r0
 2594 0008 FB71     		strb	r3, [r7, #7]
 628:.\main.c      ****     M2_IN2_Write(dir);
 2595              		.loc 1 628 0
 2596 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2597 000c 1846     		mov	r0, r3
 2598 000e FFF7FEFF 		bl	M2_IN2_Write
 629:.\main.c      **** }
 2599              		.loc 1 629 0
 2600 0012 0837     		adds	r7, r7, #8
 2601              		.cfi_def_cfa_offset 8
 2602 0014 BD46     		mov	sp, r7
 2603              		.cfi_def_cfa_register 13
 2604              		@ sp needed
 2605 0016 80BD     		pop	{r7, pc}
 2606              		.cfi_endproc
 2607              	.LFE73:
 2608              		.size	setLeftDir, .-setLeftDir
 2609              		.section	.text.setRightDir,"ax",%progbits
 2610              		.align	2
 2611              		.global	setRightDir
 2612              		.thumb
 2613              		.thumb_func
 2614              		.type	setRightDir, %function
 2615              	setRightDir:
 2616              	.LFB74:
 630:.\main.c      **** 
 631:.\main.c      **** void setRightDir(uint8 dir)
 632:.\main.c      **** {
 2617              		.loc 1 632 0
 2618              		.cfi_startproc
 2619              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 59


 2620              		@ frame_needed = 1, uses_anonymous_args = 0
 2621 0000 80B5     		push	{r7, lr}
 2622              		.cfi_def_cfa_offset 8
 2623              		.cfi_offset 7, -8
 2624              		.cfi_offset 14, -4
 2625 0002 82B0     		sub	sp, sp, #8
 2626              		.cfi_def_cfa_offset 16
 2627 0004 00AF     		add	r7, sp, #0
 2628              		.cfi_def_cfa_register 7
 2629 0006 0346     		mov	r3, r0
 2630 0008 FB71     		strb	r3, [r7, #7]
 633:.\main.c      ****     M1_IN2_Write(dir);
 2631              		.loc 1 633 0
 2632 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2633 000c 1846     		mov	r0, r3
 2634 000e FFF7FEFF 		bl	M1_IN2_Write
 634:.\main.c      **** }
 2635              		.loc 1 634 0
 2636 0012 0837     		adds	r7, r7, #8
 2637              		.cfi_def_cfa_offset 8
 2638 0014 BD46     		mov	sp, r7
 2639              		.cfi_def_cfa_register 13
 2640              		@ sp needed
 2641 0016 80BD     		pop	{r7, pc}
 2642              		.cfi_endproc
 2643              	.LFE74:
 2644              		.size	setRightDir, .-setRightDir
 2645              		.section	.rodata
 2646 00b7 00       		.align	2
 2647              	.LC8:
 2648 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2648      2025640D 
 2648      0A00
 2649              		.section	.text.reverseDirection,"ax",%progbits
 2650              		.align	2
 2651              		.global	reverseDirection
 2652              		.thumb
 2653              		.thumb_func
 2654              		.type	reverseDirection, %function
 2655              	reverseDirection:
 2656              	.LFB75:
 635:.\main.c      **** 
 636:.\main.c      **** void reverseDirection()
 637:.\main.c      **** {
 2657              		.loc 1 637 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 16
 2660              		@ frame_needed = 1, uses_anonymous_args = 0
 2661 0000 80B5     		push	{r7, lr}
 2662              		.cfi_def_cfa_offset 8
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 84B0     		sub	sp, sp, #16
 2666              		.cfi_def_cfa_offset 24
 2667 0004 00AF     		add	r7, sp, #0
 2668              		.cfi_def_cfa_register 7
 638:.\main.c      ****     direction = !direction;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 60


 2669              		.loc 1 638 0
 2670 0006 114B     		ldr	r3, .L133
 2671 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2672 000a 002B     		cmp	r3, #0
 2673 000c 0CBF     		ite	eq
 2674 000e 0123     		moveq	r3, #1
 2675 0010 0023     		movne	r3, #0
 2676 0012 DBB2     		uxtb	r3, r3
 2677 0014 1A46     		mov	r2, r3
 2678 0016 0D4B     		ldr	r3, .L133
 2679 0018 1A70     		strb	r2, [r3]
 639:.\main.c      ****     setLeftDir(direction);
 2680              		.loc 1 639 0
 2681 001a 0C4B     		ldr	r3, .L133
 2682 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2683 001e 1846     		mov	r0, r3
 2684 0020 FFF7FEFF 		bl	setLeftDir
 640:.\main.c      ****     setRightDir(direction);
 2685              		.loc 1 640 0
 2686 0024 094B     		ldr	r3, .L133
 2687 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2688 0028 1846     		mov	r0, r3
 2689 002a FFF7FEFF 		bl	setRightDir
 641:.\main.c      ****     char mes[16];
 642:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2690              		.loc 1 642 0
 2691 002e 074B     		ldr	r3, .L133
 2692 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 0032 1A46     		mov	r2, r3
 2694 0034 3B46     		mov	r3, r7
 2695 0036 1846     		mov	r0, r3
 2696 0038 0549     		ldr	r1, .L133+4
 2697 003a FFF7FEFF 		bl	sprintf
 643:.\main.c      ****     UART_PutString(mes);
 2698              		.loc 1 643 0
 2699 003e 3B46     		mov	r3, r7
 2700 0040 1846     		mov	r0, r3
 2701 0042 FFF7FEFF 		bl	UART_PutString
 644:.\main.c      **** }
 2702              		.loc 1 644 0
 2703 0046 1037     		adds	r7, r7, #16
 2704              		.cfi_def_cfa_offset 8
 2705 0048 BD46     		mov	sp, r7
 2706              		.cfi_def_cfa_register 13
 2707              		@ sp needed
 2708 004a 80BD     		pop	{r7, pc}
 2709              	.L134:
 2710              		.align	2
 2711              	.L133:
 2712 004c 00000000 		.word	direction
 2713 0050 B8000000 		.word	.LC8
 2714              		.cfi_endproc
 2715              	.LFE75:
 2716              		.size	reverseDirection, .-reverseDirection
 2717              		.global	__aeabi_dcmplt
 2718              		.global	__aeabi_ddiv
 2719              		.global	__aeabi_d2iz
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 61


 2720              		.section	.text.setSpeed,"ax",%progbits
 2721              		.align	2
 2722              		.global	setSpeed
 2723              		.thumb
 2724              		.thumb_func
 2725              		.type	setSpeed, %function
 2726              	setSpeed:
 2727              	.LFB76:
 645:.\main.c      **** 
 646:.\main.c      **** void setSpeed(double left, double right){
 2728              		.loc 1 646 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 24
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 86B0     		sub	sp, sp, #24
 2737              		.cfi_def_cfa_offset 32
 2738 0004 00AF     		add	r7, sp, #0
 2739              		.cfi_def_cfa_register 7
 2740 0006 C7E90201 		strd	r0, [r7, #8]
 2741 000a C7E90023 		strd	r2, [r7]
 647:.\main.c      ****     if(right < 0.0)
 2742              		.loc 1 647 0
 2743 000e D7E90001 		ldrd	r0, [r7]
 2744 0012 4FF00002 		mov	r2, #0
 2745 0016 4FF00003 		mov	r3, #0
 2746 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2747 001e 0346     		mov	r3, r0
 2748 0020 002B     		cmp	r3, #0
 2749 0022 10D0     		beq	.L144
 648:.\main.c      ****     {
 649:.\main.c      ****         //char mes[16];
 650:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 651:.\main.c      ****        // UART_PutString(mes);
 652:.\main.c      ****         setRightDir(!direction);
 2750              		.loc 1 652 0
 2751 0024 304B     		ldr	r3, .L146+8
 2752 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2753 0028 002B     		cmp	r3, #0
 2754 002a 0CBF     		ite	eq
 2755 002c 0123     		moveq	r3, #1
 2756 002e 0023     		movne	r3, #0
 2757 0030 DBB2     		uxtb	r3, r3
 2758 0032 1846     		mov	r0, r3
 2759 0034 FFF7FEFF 		bl	setRightDir
 653:.\main.c      ****         right = -right;
 2760              		.loc 1 653 0
 2761 0038 3B68     		ldr	r3, [r7]
 2762 003a 3B60     		str	r3, [r7]
 2763 003c 7B68     		ldr	r3, [r7, #4]
 2764 003e 83F00043 		eor	r3, r3, #-2147483648
 2765 0042 7B60     		str	r3, [r7, #4]
 2766 0044 04E0     		b	.L138
 2767              	.L144:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 62


 654:.\main.c      ****     }
 655:.\main.c      ****     else setRightDir(direction);
 2768              		.loc 1 655 0
 2769 0046 284B     		ldr	r3, .L146+8
 2770 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2771 004a 1846     		mov	r0, r3
 2772 004c FFF7FEFF 		bl	setRightDir
 2773              	.L138:
 656:.\main.c      ****     
 657:.\main.c      ****     if(left < 0.0)
 2774              		.loc 1 657 0
 2775 0050 D7E90201 		ldrd	r0, [r7, #8]
 2776 0054 4FF00002 		mov	r2, #0
 2777 0058 4FF00003 		mov	r3, #0
 2778 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2779 0060 0346     		mov	r3, r0
 2780 0062 002B     		cmp	r3, #0
 2781 0064 10D0     		beq	.L145
 658:.\main.c      ****     {
 659:.\main.c      ****        // char mes[16];
 660:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 661:.\main.c      ****         //UART_PutString(mes);
 662:.\main.c      ****         setLeftDir(!direction);
 2782              		.loc 1 662 0
 2783 0066 204B     		ldr	r3, .L146+8
 2784 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2785 006a 002B     		cmp	r3, #0
 2786 006c 0CBF     		ite	eq
 2787 006e 0123     		moveq	r3, #1
 2788 0070 0023     		movne	r3, #0
 2789 0072 DBB2     		uxtb	r3, r3
 2790 0074 1846     		mov	r0, r3
 2791 0076 FFF7FEFF 		bl	setLeftDir
 663:.\main.c      ****         left = -left;
 2792              		.loc 1 663 0
 2793 007a BB68     		ldr	r3, [r7, #8]
 2794 007c BB60     		str	r3, [r7, #8]
 2795 007e FB68     		ldr	r3, [r7, #12]
 2796 0080 83F00043 		eor	r3, r3, #-2147483648
 2797 0084 FB60     		str	r3, [r7, #12]
 2798 0086 04E0     		b	.L141
 2799              	.L145:
 664:.\main.c      ****     }
 665:.\main.c      ****     else setLeftDir(direction);
 2800              		.loc 1 665 0
 2801 0088 174B     		ldr	r3, .L146+8
 2802 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2803 008c 1846     		mov	r0, r3
 2804 008e FFF7FEFF 		bl	setLeftDir
 2805              	.L141:
 666:.\main.c      ****     
 667:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2806              		.loc 1 667 0
 2807 0092 D7E90201 		ldrd	r0, [r7, #8]
 2808 0096 12A3     		adr	r3, .L146
 2809 0098 D3E90023 		ldrd	r2, [r3]
 2810 009c FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 63


 2811 00a0 0246     		mov	r2, r0
 2812 00a2 0B46     		mov	r3, r1
 2813 00a4 1046     		mov	r0, r2
 2814 00a6 1946     		mov	r1, r3
 2815 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2816 00ac 0346     		mov	r3, r0
 2817 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 668:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2818              		.loc 1 668 0
 2819 00b0 D7E90001 		ldrd	r0, [r7]
 2820 00b4 0AA3     		adr	r3, .L146
 2821 00b6 D3E90023 		ldrd	r2, [r3]
 2822 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2823 00be 0246     		mov	r2, r0
 2824 00c0 0B46     		mov	r3, r1
 2825 00c2 1046     		mov	r0, r2
 2826 00c4 1946     		mov	r1, r3
 2827 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2828 00ca 0346     		mov	r3, r0
 2829 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 669:.\main.c      ****     
 670:.\main.c      ****     leftSpeedLimit = countsRight;
 2830              		.loc 1 670 0
 2831 00ce 074A     		ldr	r2, .L146+12
 2832 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2833 00d2 1380     		strh	r3, [r2]	@ movhi
 671:.\main.c      ****     rightSpeedLimit = countsLeft;
 2834              		.loc 1 671 0
 2835 00d4 064A     		ldr	r2, .L146+16
 2836 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2837 00d8 1380     		strh	r3, [r2]	@ movhi
 672:.\main.c      **** }
 2838              		.loc 1 672 0
 2839 00da 1837     		adds	r7, r7, #24
 2840              		.cfi_def_cfa_offset 8
 2841 00dc BD46     		mov	sp, r7
 2842              		.cfi_def_cfa_register 13
 2843              		@ sp needed
 2844 00de 80BD     		pop	{r7, pc}
 2845              	.L147:
 2846              		.align	3
 2847              	.L146:
 2848 00e0 969526A5 		.word	-1524197994
 2849 00e4 A0DBEF3F 		.word	1072683936
 2850 00e8 00000000 		.word	direction
 2851 00ec 00000000 		.word	leftSpeedLimit
 2852 00f0 00000000 		.word	rightSpeedLimit
 2853              		.cfi_endproc
 2854              	.LFE76:
 2855              		.size	setSpeed, .-setSpeed
 2856 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2857              		.align	2
 2858              		.global	brakeLeft
 2859              		.thumb
 2860              		.thumb_func
 2861              		.type	brakeLeft, %function
 2862              	brakeLeft:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 64


 2863              	.LFB77:
 673:.\main.c      **** 
 674:.\main.c      **** void brakeLeft()
 675:.\main.c      **** {
 2864              		.loc 1 675 0
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 0
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868 0000 80B5     		push	{r7, lr}
 2869              		.cfi_def_cfa_offset 8
 2870              		.cfi_offset 7, -8
 2871              		.cfi_offset 14, -4
 2872 0002 00AF     		add	r7, sp, #0
 2873              		.cfi_def_cfa_register 7
 676:.\main.c      ****     PWM_1_WriteCompare(0);
 2874              		.loc 1 676 0
 2875 0004 0020     		movs	r0, #0
 2876 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 677:.\main.c      ****     left_duty_cycle = 0;
 2877              		.loc 1 677 0
 2878 000a 024B     		ldr	r3, .L149
 2879 000c 0022     		movs	r2, #0
 2880 000e 1A80     		strh	r2, [r3]	@ movhi
 678:.\main.c      **** }
 2881              		.loc 1 678 0
 2882 0010 80BD     		pop	{r7, pc}
 2883              	.L150:
 2884 0012 00BF     		.align	2
 2885              	.L149:
 2886 0014 00000000 		.word	left_duty_cycle
 2887              		.cfi_endproc
 2888              	.LFE77:
 2889              		.size	brakeLeft, .-brakeLeft
 2890              		.section	.text.brakeRight,"ax",%progbits
 2891              		.align	2
 2892              		.global	brakeRight
 2893              		.thumb
 2894              		.thumb_func
 2895              		.type	brakeRight, %function
 2896              	brakeRight:
 2897              	.LFB78:
 679:.\main.c      **** 
 680:.\main.c      **** void brakeRight()
 681:.\main.c      **** {
 2898              		.loc 1 681 0
 2899              		.cfi_startproc
 2900              		@ args = 0, pretend = 0, frame = 0
 2901              		@ frame_needed = 1, uses_anonymous_args = 0
 2902 0000 80B5     		push	{r7, lr}
 2903              		.cfi_def_cfa_offset 8
 2904              		.cfi_offset 7, -8
 2905              		.cfi_offset 14, -4
 2906 0002 00AF     		add	r7, sp, #0
 2907              		.cfi_def_cfa_register 7
 682:.\main.c      ****      PWM_2_WriteCompare(0);
 2908              		.loc 1 682 0
 2909 0004 0020     		movs	r0, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 65


 2910 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 683:.\main.c      ****      right_duty_cycle = 0;
 2911              		.loc 1 683 0
 2912 000a 024B     		ldr	r3, .L152
 2913 000c 0022     		movs	r2, #0
 2914 000e 1A80     		strh	r2, [r3]	@ movhi
 684:.\main.c      **** }
 2915              		.loc 1 684 0
 2916 0010 80BD     		pop	{r7, pc}
 2917              	.L153:
 2918 0012 00BF     		.align	2
 2919              	.L152:
 2920 0014 00000000 		.word	right_duty_cycle
 2921              		.cfi_endproc
 2922              	.LFE78:
 2923              		.size	brakeRight, .-brakeRight
 2924              		.section	.text.brakeMotor,"ax",%progbits
 2925              		.align	2
 2926              		.global	brakeMotor
 2927              		.thumb
 2928              		.thumb_func
 2929              		.type	brakeMotor, %function
 2930              	brakeMotor:
 2931              	.LFB79:
 685:.\main.c      **** 
 686:.\main.c      **** void brakeMotor(){
 2932              		.loc 1 686 0
 2933              		.cfi_startproc
 2934              		@ args = 0, pretend = 0, frame = 0
 2935              		@ frame_needed = 1, uses_anonymous_args = 0
 2936 0000 80B5     		push	{r7, lr}
 2937              		.cfi_def_cfa_offset 8
 2938              		.cfi_offset 7, -8
 2939              		.cfi_offset 14, -4
 2940 0002 00AF     		add	r7, sp, #0
 2941              		.cfi_def_cfa_register 7
 687:.\main.c      ****     setSpeed(0, 0);
 2942              		.loc 1 687 0
 2943 0004 4FF00000 		mov	r0, #0
 2944 0008 4FF00001 		mov	r1, #0
 2945 000c 4FF00002 		mov	r2, #0
 2946 0010 4FF00003 		mov	r3, #0
 2947 0014 FFF7FEFF 		bl	setSpeed
 688:.\main.c      ****     brakeLeft();
 2948              		.loc 1 688 0
 2949 0018 FFF7FEFF 		bl	brakeLeft
 689:.\main.c      ****     brakeRight();
 2950              		.loc 1 689 0
 2951 001c FFF7FEFF 		bl	brakeRight
 690:.\main.c      **** }
 2952              		.loc 1 690 0
 2953 0020 80BD     		pop	{r7, pc}
 2954              		.cfi_endproc
 2955              	.LFE79:
 2956              		.size	brakeMotor, .-brakeMotor
 2957 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2958              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 66


 2959              		.global	driveForwards
 2960              		.thumb
 2961              		.thumb_func
 2962              		.type	driveForwards, %function
 2963              	driveForwards:
 2964              	.LFB80:
 691:.\main.c      **** 
 692:.\main.c      **** void driveForwards()
 693:.\main.c      **** {
 2965              		.loc 1 693 0
 2966              		.cfi_startproc
 2967              		@ args = 0, pretend = 0, frame = 0
 2968              		@ frame_needed = 1, uses_anonymous_args = 0
 2969 0000 80B5     		push	{r7, lr}
 2970              		.cfi_def_cfa_offset 8
 2971              		.cfi_offset 7, -8
 2972              		.cfi_offset 14, -4
 2973 0002 00AF     		add	r7, sp, #0
 2974              		.cfi_def_cfa_register 7
 694:.\main.c      ****     setSpeed(speed, speed);
 2975              		.loc 1 694 0
 2976 0004 044B     		ldr	r3, .L156
 2977 0006 D3E90001 		ldrd	r0, [r3]
 2978 000a 034B     		ldr	r3, .L156
 2979 000c D3E90023 		ldrd	r2, [r3]
 2980 0010 FFF7FEFF 		bl	setSpeed
 695:.\main.c      **** }
 2981              		.loc 1 695 0
 2982 0014 80BD     		pop	{r7, pc}
 2983              	.L157:
 2984 0016 00BF     		.align	2
 2985              	.L156:
 2986 0018 00000000 		.word	speed
 2987              		.cfi_endproc
 2988              	.LFE80:
 2989              		.size	driveForwards, .-driveForwards
 2990              		.global	__aeabi_dmul
 2991              		.section	.text.turnRight,"ax",%progbits
 2992              		.align	2
 2993              		.global	turnRight
 2994              		.thumb
 2995              		.thumb_func
 2996              		.type	turnRight, %function
 2997              	turnRight:
 2998              	.LFB81:
 696:.\main.c      **** 
 697:.\main.c      **** void turnRight()
 698:.\main.c      **** {
 2999              		.loc 1 698 0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 1, uses_anonymous_args = 0
 3003 0000 80B5     		push	{r7, lr}
 3004              		.cfi_def_cfa_offset 8
 3005              		.cfi_offset 7, -8
 3006              		.cfi_offset 14, -4
 3007 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 67


 3008              		.cfi_def_cfa_register 7
 699:.\main.c      ****     setSpeed(0,speed * 1.5);
 3009              		.loc 1 699 0
 3010 0004 094B     		ldr	r3, .L159
 3011 0006 D3E90023 		ldrd	r2, [r3]
 3012 000a 1046     		mov	r0, r2
 3013 000c 1946     		mov	r1, r3
 3014 000e 4FF00002 		mov	r2, #0
 3015 0012 074B     		ldr	r3, .L159+4
 3016 0014 FFF7FEFF 		bl	__aeabi_dmul
 3017 0018 0246     		mov	r2, r0
 3018 001a 0B46     		mov	r3, r1
 3019 001c 4FF00000 		mov	r0, #0
 3020 0020 4FF00001 		mov	r1, #0
 3021 0024 FFF7FEFF 		bl	setSpeed
 700:.\main.c      **** }
 3022              		.loc 1 700 0
 3023 0028 80BD     		pop	{r7, pc}
 3024              	.L160:
 3025 002a 00BF     		.align	2
 3026              	.L159:
 3027 002c 00000000 		.word	speed
 3028 0030 0000F83F 		.word	1073217536
 3029              		.cfi_endproc
 3030              	.LFE81:
 3031              		.size	turnRight, .-turnRight
 3032              		.section	.text.turnLeft,"ax",%progbits
 3033              		.align	2
 3034              		.global	turnLeft
 3035              		.thumb
 3036              		.thumb_func
 3037              		.type	turnLeft, %function
 3038              	turnLeft:
 3039              	.LFB82:
 701:.\main.c      **** 
 702:.\main.c      **** void turnLeft()
 703:.\main.c      **** {
 3040              		.loc 1 703 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 1, uses_anonymous_args = 0
 3044 0000 80B5     		push	{r7, lr}
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 00AF     		add	r7, sp, #0
 3049              		.cfi_def_cfa_register 7
 704:.\main.c      ****     setSpeed(speed * 1.5,0);
 3050              		.loc 1 704 0
 3051 0004 0A4B     		ldr	r3, .L162
 3052 0006 D3E90023 		ldrd	r2, [r3]
 3053 000a 1046     		mov	r0, r2
 3054 000c 1946     		mov	r1, r3
 3055 000e 4FF00002 		mov	r2, #0
 3056 0012 084B     		ldr	r3, .L162+4
 3057 0014 FFF7FEFF 		bl	__aeabi_dmul
 3058 0018 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 68


 3059 001a 0B46     		mov	r3, r1
 3060 001c 1046     		mov	r0, r2
 3061 001e 1946     		mov	r1, r3
 3062 0020 4FF00002 		mov	r2, #0
 3063 0024 4FF00003 		mov	r3, #0
 3064 0028 FFF7FEFF 		bl	setSpeed
 705:.\main.c      **** }
 3065              		.loc 1 705 0
 3066 002c 80BD     		pop	{r7, pc}
 3067              	.L163:
 3068 002e 00BF     		.align	2
 3069              	.L162:
 3070 0030 00000000 		.word	speed
 3071 0034 0000F83F 		.word	1073217536
 3072              		.cfi_endproc
 3073              	.LFE82:
 3074              		.size	turnLeft, .-turnLeft
 3075              		.section	.text.turnU,"ax",%progbits
 3076              		.align	2
 3077              		.global	turnU
 3078              		.thumb
 3079              		.thumb_func
 3080              		.type	turnU, %function
 3081              	turnU:
 3082              	.LFB83:
 706:.\main.c      **** 
 707:.\main.c      **** void turnU()
 708:.\main.c      **** {
 3083              		.loc 1 708 0
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 0
 3086              		@ frame_needed = 1, uses_anonymous_args = 0
 3087 0000 B0B5     		push	{r4, r5, r7, lr}
 3088              		.cfi_def_cfa_offset 16
 3089              		.cfi_offset 4, -16
 3090              		.cfi_offset 5, -12
 3091              		.cfi_offset 7, -8
 3092              		.cfi_offset 14, -4
 3093 0002 00AF     		add	r7, sp, #0
 3094              		.cfi_def_cfa_register 7
 709:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3095              		.loc 1 709 0
 3096 0004 0F4B     		ldr	r3, .L165
 3097 0006 D3E90023 		ldrd	r2, [r3]
 3098 000a 1046     		mov	r0, r2
 3099 000c 83F00041 		eor	r1, r3, #-2147483648
 3100 0010 4FF00002 		mov	r2, #0
 3101 0014 0C4B     		ldr	r3, .L165+4
 3102 0016 FFF7FEFF 		bl	__aeabi_dmul
 3103 001a 0246     		mov	r2, r0
 3104 001c 0B46     		mov	r3, r1
 3105 001e 1446     		mov	r4, r2
 3106 0020 1D46     		mov	r5, r3
 3107 0022 084B     		ldr	r3, .L165
 3108 0024 D3E90023 		ldrd	r2, [r3]
 3109 0028 1046     		mov	r0, r2
 3110 002a 1946     		mov	r1, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 69


 3111 002c 4FF00002 		mov	r2, #0
 3112 0030 054B     		ldr	r3, .L165+4
 3113 0032 FFF7FEFF 		bl	__aeabi_dmul
 3114 0036 0246     		mov	r2, r0
 3115 0038 0B46     		mov	r3, r1
 3116 003a 2046     		mov	r0, r4
 3117 003c 2946     		mov	r1, r5
 3118 003e FFF7FEFF 		bl	setSpeed
 710:.\main.c      **** }
 3119              		.loc 1 710 0
 3120 0042 B0BD     		pop	{r4, r5, r7, pc}
 3121              	.L166:
 3122              		.align	2
 3123              	.L165:
 3124 0044 00000000 		.word	speed
 3125 0048 0000F83F 		.word	1073217536
 3126              		.cfi_endproc
 3127              	.LFE83:
 3128              		.size	turnU, .-turnU
 3129              		.section	.text.initTurnLeft,"ax",%progbits
 3130              		.align	2
 3131              		.global	initTurnLeft
 3132              		.thumb
 3133              		.thumb_func
 3134              		.type	initTurnLeft, %function
 3135              	initTurnLeft:
 3136              	.LFB84:
 711:.\main.c      **** 
 712:.\main.c      **** void initTurnLeft(){
 3137              		.loc 1 712 0
 3138              		.cfi_startproc
 3139              		@ args = 0, pretend = 0, frame = 0
 3140              		@ frame_needed = 1, uses_anonymous_args = 0
 3141 0000 80B5     		push	{r7, lr}
 3142              		.cfi_def_cfa_offset 8
 3143              		.cfi_offset 7, -8
 3144              		.cfi_offset 14, -4
 3145 0002 00AF     		add	r7, sp, #0
 3146              		.cfi_def_cfa_register 7
 713:.\main.c      ****     Timer_2_Stop();
 3147              		.loc 1 713 0
 3148 0004 FFF7FEFF 		bl	Timer_2_Stop
 714:.\main.c      ****     prev_movement_state = movement_state;
 3149              		.loc 1 714 0
 3150 0008 084B     		ldr	r3, .L168
 3151 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3152 000c 084B     		ldr	r3, .L168+4
 3153 000e 1A70     		strb	r2, [r3]
 715:.\main.c      ****     movement_state = LTURN;
 3154              		.loc 1 715 0
 3155 0010 064B     		ldr	r3, .L168
 3156 0012 0122     		movs	r2, #1
 3157 0014 1A70     		strb	r2, [r3]
 716:.\main.c      ****     brakeLeft();
 3158              		.loc 1 716 0
 3159 0016 FFF7FEFF 		bl	brakeLeft
 717:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 70


 3160              		.loc 1 717 0
 3161 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3162 001e 0346     		mov	r3, r0
 3163 0020 1A46     		mov	r2, r3
 3164 0022 044B     		ldr	r3, .L168+8
 3165 0024 1A80     		strh	r2, [r3]	@ movhi
 718:.\main.c      ****     Timer_2_Start();
 3166              		.loc 1 718 0
 3167 0026 FFF7FEFF 		bl	Timer_2_Start
 719:.\main.c      **** }
 3168              		.loc 1 719 0
 3169 002a 80BD     		pop	{r7, pc}
 3170              	.L169:
 3171              		.align	2
 3172              	.L168:
 3173 002c 00000000 		.word	movement_state
 3174 0030 00000000 		.word	prev_movement_state
 3175 0034 00000000 		.word	start_turn_count
 3176              		.cfi_endproc
 3177              	.LFE84:
 3178              		.size	initTurnLeft, .-initTurnLeft
 3179              		.section	.text.initTurnRight,"ax",%progbits
 3180              		.align	2
 3181              		.global	initTurnRight
 3182              		.thumb
 3183              		.thumb_func
 3184              		.type	initTurnRight, %function
 3185              	initTurnRight:
 3186              	.LFB85:
 720:.\main.c      **** 
 721:.\main.c      **** void initTurnRight(){
 3187              		.loc 1 721 0
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 0
 3190              		@ frame_needed = 1, uses_anonymous_args = 0
 3191 0000 80B5     		push	{r7, lr}
 3192              		.cfi_def_cfa_offset 8
 3193              		.cfi_offset 7, -8
 3194              		.cfi_offset 14, -4
 3195 0002 00AF     		add	r7, sp, #0
 3196              		.cfi_def_cfa_register 7
 722:.\main.c      ****     Timer_2_Stop();
 3197              		.loc 1 722 0
 3198 0004 FFF7FEFF 		bl	Timer_2_Stop
 723:.\main.c      ****     prev_movement_state = movement_state;
 3199              		.loc 1 723 0
 3200 0008 084B     		ldr	r3, .L171
 3201 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3202 000c 084B     		ldr	r3, .L171+4
 3203 000e 1A70     		strb	r2, [r3]
 724:.\main.c      ****     movement_state = RTURN;
 3204              		.loc 1 724 0
 3205 0010 064B     		ldr	r3, .L171
 3206 0012 0222     		movs	r2, #2
 3207 0014 1A70     		strb	r2, [r3]
 725:.\main.c      ****     brakeRight();
 3208              		.loc 1 725 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 71


 3209 0016 FFF7FEFF 		bl	brakeRight
 726:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3210              		.loc 1 726 0
 3211 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3212 001e 0346     		mov	r3, r0
 3213 0020 1A46     		mov	r2, r3
 3214 0022 044B     		ldr	r3, .L171+8
 3215 0024 1A80     		strh	r2, [r3]	@ movhi
 727:.\main.c      ****     Timer_2_Start();
 3216              		.loc 1 727 0
 3217 0026 FFF7FEFF 		bl	Timer_2_Start
 728:.\main.c      **** }
 3218              		.loc 1 728 0
 3219 002a 80BD     		pop	{r7, pc}
 3220              	.L172:
 3221              		.align	2
 3222              	.L171:
 3223 002c 00000000 		.word	movement_state
 3224 0030 00000000 		.word	prev_movement_state
 3225 0034 00000000 		.word	start_turn_count
 3226              		.cfi_endproc
 3227              	.LFE85:
 3228              		.size	initTurnRight, .-initTurnRight
 3229              		.section	.text.initTurnU,"ax",%progbits
 3230              		.align	2
 3231              		.global	initTurnU
 3232              		.thumb
 3233              		.thumb_func
 3234              		.type	initTurnU, %function
 3235              	initTurnU:
 3236              	.LFB86:
 729:.\main.c      **** 
 730:.\main.c      **** void initTurnU(){
 3237              		.loc 1 730 0
 3238              		.cfi_startproc
 3239              		@ args = 0, pretend = 0, frame = 0
 3240              		@ frame_needed = 1, uses_anonymous_args = 0
 3241 0000 80B5     		push	{r7, lr}
 3242              		.cfi_def_cfa_offset 8
 3243              		.cfi_offset 7, -8
 3244              		.cfi_offset 14, -4
 3245 0002 00AF     		add	r7, sp, #0
 3246              		.cfi_def_cfa_register 7
 731:.\main.c      ****     Timer_2_Stop();
 3247              		.loc 1 731 0
 3248 0004 FFF7FEFF 		bl	Timer_2_Stop
 732:.\main.c      ****     prev_movement_state = movement_state;
 3249              		.loc 1 732 0
 3250 0008 084B     		ldr	r3, .L174
 3251 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3252 000c 084B     		ldr	r3, .L174+4
 3253 000e 1A70     		strb	r2, [r3]
 733:.\main.c      ****     movement_state = UTURN;
 3254              		.loc 1 733 0
 3255 0010 064B     		ldr	r3, .L174
 3256 0012 0722     		movs	r2, #7
 3257 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 72


 734:.\main.c      ****     brakeMotor();
 3258              		.loc 1 734 0
 3259 0016 FFF7FEFF 		bl	brakeMotor
 735:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3260              		.loc 1 735 0
 3261 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3262 001e 0346     		mov	r3, r0
 3263 0020 1A46     		mov	r2, r3
 3264 0022 044B     		ldr	r3, .L174+8
 3265 0024 1A80     		strh	r2, [r3]	@ movhi
 736:.\main.c      ****     Timer_2_Start();
 3266              		.loc 1 736 0
 3267 0026 FFF7FEFF 		bl	Timer_2_Start
 737:.\main.c      **** }
 3268              		.loc 1 737 0
 3269 002a 80BD     		pop	{r7, pc}
 3270              	.L175:
 3271              		.align	2
 3272              	.L174:
 3273 002c 00000000 		.word	movement_state
 3274 0030 00000000 		.word	prev_movement_state
 3275 0034 00000000 		.word	start_turn_count
 3276              		.cfi_endproc
 3277              	.LFE86:
 3278              		.size	initTurnU, .-initTurnU
 3279              		.section	.text.initForward,"ax",%progbits
 3280              		.align	2
 3281              		.global	initForward
 3282              		.thumb
 3283              		.thumb_func
 3284              		.type	initForward, %function
 3285              	initForward:
 3286              	.LFB87:
 738:.\main.c      **** 
 739:.\main.c      **** void initForward(){
 3287              		.loc 1 739 0
 3288              		.cfi_startproc
 3289              		@ args = 0, pretend = 0, frame = 0
 3290              		@ frame_needed = 1, uses_anonymous_args = 0
 3291 0000 80B5     		push	{r7, lr}
 3292              		.cfi_def_cfa_offset 8
 3293              		.cfi_offset 7, -8
 3294              		.cfi_offset 14, -4
 3295 0002 00AF     		add	r7, sp, #0
 3296              		.cfi_def_cfa_register 7
 740:.\main.c      ****     brakeMotor();
 3297              		.loc 1 740 0
 3298 0004 FFF7FEFF 		bl	brakeMotor
 741:.\main.c      ****     movement_state = DRIVE;
 3299              		.loc 1 741 0
 3300 0008 014B     		ldr	r3, .L177
 3301 000a 0022     		movs	r2, #0
 3302 000c 1A70     		strb	r2, [r3]
 742:.\main.c      **** }
 3303              		.loc 1 742 0
 3304 000e 80BD     		pop	{r7, pc}
 3305              	.L178:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 73


 3306              		.align	2
 3307              	.L177:
 3308 0010 00000000 		.word	movement_state
 3309              		.cfi_endproc
 3310              	.LFE87:
 3311              		.size	initForward, .-initForward
 3312              		.section	.text.initBrake,"ax",%progbits
 3313              		.align	2
 3314              		.global	initBrake
 3315              		.thumb
 3316              		.thumb_func
 3317              		.type	initBrake, %function
 3318              	initBrake:
 3319              	.LFB88:
 743:.\main.c      **** 
 744:.\main.c      **** void initBrake(){
 3320              		.loc 1 744 0
 3321              		.cfi_startproc
 3322              		@ args = 0, pretend = 0, frame = 0
 3323              		@ frame_needed = 1, uses_anonymous_args = 0
 3324              		@ link register save eliminated.
 3325 0000 80B4     		push	{r7}
 3326              		.cfi_def_cfa_offset 4
 3327              		.cfi_offset 7, -4
 3328 0002 00AF     		add	r7, sp, #0
 3329              		.cfi_def_cfa_register 7
 745:.\main.c      ****     movement_state = STOPPED;
 3330              		.loc 1 745 0
 3331 0004 034B     		ldr	r3, .L180
 3332 0006 0322     		movs	r2, #3
 3333 0008 1A70     		strb	r2, [r3]
 746:.\main.c      **** }
 3334              		.loc 1 746 0
 3335 000a BD46     		mov	sp, r7
 3336              		.cfi_def_cfa_register 13
 3337              		@ sp needed
 3338 000c 5DF8047B 		ldr	r7, [sp], #4
 3339              		.cfi_restore 7
 3340              		.cfi_def_cfa_offset 0
 3341 0010 7047     		bx	lr
 3342              	.L181:
 3343 0012 00BF     		.align	2
 3344              	.L180:
 3345 0014 00000000 		.word	movement_state
 3346              		.cfi_endproc
 3347              	.LFE88:
 3348              		.size	initBrake, .-initBrake
 3349              		.section	.text.initTrack,"ax",%progbits
 3350              		.align	2
 3351              		.global	initTrack
 3352              		.thumb
 3353              		.thumb_func
 3354              		.type	initTrack, %function
 3355              	initTrack:
 3356              	.LFB89:
 747:.\main.c      **** 
 748:.\main.c      **** void initTrack()
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 74


 749:.\main.c      **** {
 3357              		.loc 1 749 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 1, uses_anonymous_args = 0
 3361              		@ link register save eliminated.
 3362 0000 80B4     		push	{r7}
 3363              		.cfi_def_cfa_offset 4
 3364              		.cfi_offset 7, -4
 3365 0002 00AF     		add	r7, sp, #0
 3366              		.cfi_def_cfa_register 7
 750:.\main.c      ****     movement_state = TRACKING;
 3367              		.loc 1 750 0
 3368 0004 034B     		ldr	r3, .L183
 3369 0006 0422     		movs	r2, #4
 3370 0008 1A70     		strb	r2, [r3]
 751:.\main.c      **** }
 3371              		.loc 1 751 0
 3372 000a BD46     		mov	sp, r7
 3373              		.cfi_def_cfa_register 13
 3374              		@ sp needed
 3375 000c 5DF8047B 		ldr	r7, [sp], #4
 3376              		.cfi_restore 7
 3377              		.cfi_def_cfa_offset 0
 3378 0010 7047     		bx	lr
 3379              	.L184:
 3380 0012 00BF     		.align	2
 3381              	.L183:
 3382 0014 00000000 		.word	movement_state
 3383              		.cfi_endproc
 3384              	.LFE89:
 3385              		.size	initTrack, .-initTrack
 3386              		.section	.text.initTrackU,"ax",%progbits
 3387              		.align	2
 3388              		.global	initTrackU
 3389              		.thumb
 3390              		.thumb_func
 3391              		.type	initTrackU, %function
 3392              	initTrackU:
 3393              	.LFB90:
 752:.\main.c      **** 
 753:.\main.c      **** void initTrackU(){
 3394              		.loc 1 753 0
 3395              		.cfi_startproc
 3396              		@ args = 0, pretend = 0, frame = 0
 3397              		@ frame_needed = 1, uses_anonymous_args = 0
 3398              		@ link register save eliminated.
 3399 0000 80B4     		push	{r7}
 3400              		.cfi_def_cfa_offset 4
 3401              		.cfi_offset 7, -4
 3402 0002 00AF     		add	r7, sp, #0
 3403              		.cfi_def_cfa_register 7
 754:.\main.c      ****     movement_state = TRACKING_U;
 3404              		.loc 1 754 0
 3405 0004 034B     		ldr	r3, .L186
 3406 0006 0522     		movs	r2, #5
 3407 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 75


 755:.\main.c      **** }
 3408              		.loc 1 755 0
 3409 000a BD46     		mov	sp, r7
 3410              		.cfi_def_cfa_register 13
 3411              		@ sp needed
 3412 000c 5DF8047B 		ldr	r7, [sp], #4
 3413              		.cfi_restore 7
 3414              		.cfi_def_cfa_offset 0
 3415 0010 7047     		bx	lr
 3416              	.L187:
 3417 0012 00BF     		.align	2
 3418              	.L186:
 3419 0014 00000000 		.word	movement_state
 3420              		.cfi_endproc
 3421              	.LFE90:
 3422              		.size	initTrackU, .-initTrackU
 3423              		.section	.text.inittrackLineZ,"ax",%progbits
 3424              		.align	2
 3425              		.global	inittrackLineZ
 3426              		.thumb
 3427              		.thumb_func
 3428              		.type	inittrackLineZ, %function
 3429              	inittrackLineZ:
 3430              	.LFB91:
 756:.\main.c      **** 
 757:.\main.c      **** void inittrackLineZ(){
 3431              		.loc 1 757 0
 3432              		.cfi_startproc
 3433              		@ args = 0, pretend = 0, frame = 0
 3434              		@ frame_needed = 1, uses_anonymous_args = 0
 3435              		@ link register save eliminated.
 3436 0000 80B4     		push	{r7}
 3437              		.cfi_def_cfa_offset 4
 3438              		.cfi_offset 7, -4
 3439 0002 00AF     		add	r7, sp, #0
 3440              		.cfi_def_cfa_register 7
 758:.\main.c      ****     movement_state = TRACKING_SOFT;
 3441              		.loc 1 758 0
 3442 0004 034B     		ldr	r3, .L189
 3443 0006 0622     		movs	r2, #6
 3444 0008 1A70     		strb	r2, [r3]
 759:.\main.c      **** }
 3445              		.loc 1 759 0
 3446 000a BD46     		mov	sp, r7
 3447              		.cfi_def_cfa_register 13
 3448              		@ sp needed
 3449 000c 5DF8047B 		ldr	r7, [sp], #4
 3450              		.cfi_restore 7
 3451              		.cfi_def_cfa_offset 0
 3452 0010 7047     		bx	lr
 3453              	.L190:
 3454 0012 00BF     		.align	2
 3455              	.L189:
 3456 0014 00000000 		.word	movement_state
 3457              		.cfi_endproc
 3458              	.LFE91:
 3459              		.size	inittrackLineZ, .-inittrackLineZ
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 76


 3460              		.section	.text.rxInt,"ax",%progbits
 3461              		.align	2
 3462              		.global	rxInt
 3463              		.thumb
 3464              		.thumb_func
 3465              		.type	rxInt, %function
 3466              	rxInt:
 3467              	.LFB92:
 760:.\main.c      **** 
 761:.\main.c      **** 
 762:.\main.c      **** 
 763:.\main.c      **** //Binary RF Data
 764:.\main.c      **** CY_ISR(rxInt){
 3468              		.loc 1 764 0
 3469              		.cfi_startproc
 3470              		@ args = 0, pretend = 0, frame = 8
 3471              		@ frame_needed = 1, uses_anonymous_args = 0
 3472 0000 B0B5     		push	{r4, r5, r7, lr}
 3473              		.cfi_def_cfa_offset 16
 3474              		.cfi_offset 4, -16
 3475              		.cfi_offset 5, -12
 3476              		.cfi_offset 7, -8
 3477              		.cfi_offset 14, -4
 3478 0002 82B0     		sub	sp, sp, #8
 3479              		.cfi_def_cfa_offset 24
 3480 0004 00AF     		add	r7, sp, #0
 3481              		.cfi_def_cfa_register 7
 765:.\main.c      ****     char rf_char = UART_GetChar();
 3482              		.loc 1 765 0
 3483 0006 FFF7FEFF 		bl	UART_GetChar
 3484 000a 0346     		mov	r3, r0
 3485 000c FB71     		strb	r3, [r7, #7]
 766:.\main.c      ****     if(rf_char == SOP){
 3486              		.loc 1 766 0
 3487 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3488 0010 AA2B     		cmp	r3, #170
 3489 0012 2BD1     		bne	.L192
 767:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 768:.\main.c      ****             if(byteCount == 34)
 3490              		.loc 1 768 0
 3491 0014 224B     		ldr	r3, .L196
 3492 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3493 0018 222B     		cmp	r3, #34
 3494 001a 20D1     		bne	.L193
 769:.\main.c      ****             {
 770:.\main.c      ****                 system_state = buffer_state;
 3495              		.loc 1 770 0
 3496 001c 214B     		ldr	r3, .L196+4
 3497 001e 224A     		ldr	r2, .L196+8
 3498 0020 1568     		ldr	r5, [r2]	@ unaligned
 3499 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3500 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3501 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3502 0028 1D60     		str	r5, [r3]	@ unaligned
 3503 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3504 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3505 002e D960     		str	r1, [r3, #12]	@ unaligned
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 77


 3506 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3507 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3508 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3509 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3510 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3511 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3512 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3513 003e D961     		str	r1, [r3, #28]	@ unaligned
 771:.\main.c      ****                 if(initial_pos_valid == 0)
 3514              		.loc 1 771 0
 3515 0040 1A4B     		ldr	r3, .L196+12
 3516 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3517 0044 002B     		cmp	r3, #0
 3518 0046 0AD1     		bne	.L193
 772:.\main.c      ****                 {
 773:.\main.c      ****                     LED_Write(~LED_Read());
 3519              		.loc 1 773 0
 3520 0048 FFF7FEFF 		bl	LED_Read
 3521 004c 0346     		mov	r3, r0
 3522 004e DB43     		mvns	r3, r3
 3523 0050 DBB2     		uxtb	r3, r3
 3524 0052 1846     		mov	r0, r3
 3525 0054 FFF7FEFF 		bl	LED_Write
 774:.\main.c      ****                     initial_pos_valid = 1;
 3526              		.loc 1 774 0
 3527 0058 144B     		ldr	r3, .L196+12
 3528 005a 0122     		movs	r2, #1
 3529 005c 1A70     		strb	r2, [r3]
 3530              	.L193:
 775:.\main.c      ****                 }
 776:.\main.c      ****             }
 777:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3531              		.loc 1 777 0
 3532 005e 104B     		ldr	r3, .L196
 3533 0060 0222     		movs	r2, #2
 3534 0062 1A70     		strb	r2, [r3]
 778:.\main.c      ****             flag_rx = 0;
 3535              		.loc 1 778 0
 3536 0064 124B     		ldr	r3, .L196+16
 3537 0066 0022     		movs	r2, #0
 3538 0068 1A70     		strb	r2, [r3]
 3539 006a 16E0     		b	.L191
 3540              	.L192:
 779:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 780:.\main.c      ****         }
 781:.\main.c      ****         else
 782:.\main.c      ****         {
 783:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3541              		.loc 1 783 0
 3542 006c 0C4B     		ldr	r3, .L196
 3543 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3544 0070 03F00103 		and	r3, r3, #1
 3545 0074 0F49     		ldr	r1, .L196+20
 3546 0076 FA79     		ldrb	r2, [r7, #7]
 3547 0078 CA54     		strb	r2, [r1, r3]
 784:.\main.c      ****            
 785:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 78


 3548              		.loc 1 785 0
 3549 007a 094B     		ldr	r3, .L196
 3550 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3551 007e 03F00103 		and	r3, r3, #1
 3552 0082 DBB2     		uxtb	r3, r3
 3553 0084 002B     		cmp	r3, #0
 3554 0086 02D0     		beq	.L195
 786:.\main.c      ****             {
 787:.\main.c      ****                 flag_rx = 1;
 3555              		.loc 1 787 0
 3556 0088 094B     		ldr	r3, .L196+16
 3557 008a 0122     		movs	r2, #1
 3558 008c 1A70     		strb	r2, [r3]
 3559              	.L195:
 788:.\main.c      ****             }
 789:.\main.c      ****             byteCount = (byteCount + 1);
 3560              		.loc 1 789 0
 3561 008e 044B     		ldr	r3, .L196
 3562 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3563 0092 0133     		adds	r3, r3, #1
 3564 0094 DAB2     		uxtb	r2, r3
 3565 0096 024B     		ldr	r3, .L196
 3566 0098 1A70     		strb	r2, [r3]
 3567              	.L191:
 790:.\main.c      ****         }
 791:.\main.c      **** }
 3568              		.loc 1 791 0
 3569 009a 0837     		adds	r7, r7, #8
 3570              		.cfi_def_cfa_offset 16
 3571 009c BD46     		mov	sp, r7
 3572              		.cfi_def_cfa_register 13
 3573              		@ sp needed
 3574 009e B0BD     		pop	{r4, r5, r7, pc}
 3575              	.L197:
 3576              		.align	2
 3577              	.L196:
 3578 00a0 00000000 		.word	byteCount
 3579 00a4 00000000 		.word	system_state
 3580 00a8 00000000 		.word	buffer_state
 3581 00ac 00000000 		.word	initial_pos_valid
 3582 00b0 00000000 		.word	flag_rx
 3583 00b4 00000000 		.word	packet
 3584              		.cfi_endproc
 3585              	.LFE92:
 3586              		.size	rxInt, .-rxInt
 3587              		.global	__aeabi_i2f
 3588              		.global	__aeabi_fmul
 3589              		.global	__aeabi_f2iz
 3590              		.section	.rodata
 3591 00c2 0000     		.align	2
 3592              	.LC9:
 3593 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3593      65742071 
 3593      7561643A 
 3593      2025640D 
 3593      0A00
 3594 00d6 0000     		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 79


 3595              	.LC10:
 3596 00d8 0D0A00   		.ascii	"\015\012\000"
 3597              		.section	.text.BT_rxInt,"ax",%progbits
 3598              		.align	2
 3599              		.global	BT_rxInt
 3600              		.thumb
 3601              		.thumb_func
 3602              		.type	BT_rxInt, %function
 3603              	BT_rxInt:
 3604              	.LFB93:
 792:.\main.c      **** 
 793:.\main.c      **** CY_ISR(BT_rxInt)
 794:.\main.c      **** {
 3605              		.loc 1 794 0
 3606              		.cfi_startproc
 3607              		@ args = 0, pretend = 0, frame = 32
 3608              		@ frame_needed = 1, uses_anonymous_args = 0
 3609 0000 80B5     		push	{r7, lr}
 3610              		.cfi_def_cfa_offset 8
 3611              		.cfi_offset 7, -8
 3612              		.cfi_offset 14, -4
 3613 0002 88B0     		sub	sp, sp, #32
 3614              		.cfi_def_cfa_offset 40
 3615 0004 00AF     		add	r7, sp, #0
 3616              		.cfi_def_cfa_register 7
 795:.\main.c      ****     char rf_char = UART_GetChar();
 3617              		.loc 1 795 0
 3618 0006 FFF7FEFF 		bl	UART_GetChar
 3619 000a 0346     		mov	r3, r0
 3620 000c FB75     		strb	r3, [r7, #23]
 796:.\main.c      ****     switch(rf_char){
 3621              		.loc 1 796 0
 3622 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3623 0010 313B     		subs	r3, r3, #49
 3624 0012 492B     		cmp	r3, #73
 3625 0014 00F29181 		bhi	.L198
 3626 0018 01A2     		adr	r2, .L201
 3627 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3628 001e 00BF     		.p2align 2
 3629              	.L201:
 3630 0020 83020000 		.word	.L200+1
 3631 0024 15020000 		.word	.L202+1
 3632 0028 3B030000 		.word	.L198+1
 3633 002c 3B030000 		.word	.L198+1
 3634 0030 3B030000 		.word	.L198+1
 3635 0034 3B030000 		.word	.L198+1
 3636 0038 3B030000 		.word	.L198+1
 3637 003c 3B030000 		.word	.L198+1
 3638 0040 3B030000 		.word	.L198+1
 3639 0044 3B030000 		.word	.L198+1
 3640 0048 3B030000 		.word	.L198+1
 3641 004c 3B030000 		.word	.L198+1
 3642 0050 3B030000 		.word	.L198+1
 3643 0054 3B030000 		.word	.L198+1
 3644 0058 3B030000 		.word	.L198+1
 3645 005c 3B030000 		.word	.L198+1
 3646 0060 3B030000 		.word	.L198+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 80


 3647 0064 3B030000 		.word	.L198+1
 3648 0068 3B030000 		.word	.L198+1
 3649 006c 3B030000 		.word	.L198+1
 3650 0070 3B030000 		.word	.L198+1
 3651 0074 3B030000 		.word	.L198+1
 3652 0078 3B030000 		.word	.L198+1
 3653 007c 3B030000 		.word	.L198+1
 3654 0080 3B030000 		.word	.L198+1
 3655 0084 3B030000 		.word	.L198+1
 3656 0088 3B030000 		.word	.L198+1
 3657 008c 3B030000 		.word	.L198+1
 3658 0090 3B030000 		.word	.L198+1
 3659 0094 3B030000 		.word	.L198+1
 3660 0098 3B030000 		.word	.L198+1
 3661 009c 3B030000 		.word	.L198+1
 3662 00a0 3B030000 		.word	.L198+1
 3663 00a4 3B030000 		.word	.L198+1
 3664 00a8 3B030000 		.word	.L198+1
 3665 00ac 3B030000 		.word	.L198+1
 3666 00b0 3B030000 		.word	.L198+1
 3667 00b4 3B030000 		.word	.L198+1
 3668 00b8 3B030000 		.word	.L198+1
 3669 00bc 3B030000 		.word	.L198+1
 3670 00c0 3B030000 		.word	.L198+1
 3671 00c4 3B030000 		.word	.L198+1
 3672 00c8 3B030000 		.word	.L198+1
 3673 00cc 3B030000 		.word	.L198+1
 3674 00d0 3B030000 		.word	.L198+1
 3675 00d4 3B030000 		.word	.L198+1
 3676 00d8 3B030000 		.word	.L198+1
 3677 00dc 3B030000 		.word	.L198+1
 3678 00e0 49010000 		.word	.L203+1
 3679 00e4 3B030000 		.word	.L198+1
 3680 00e8 3B030000 		.word	.L198+1
 3681 00ec 6D010000 		.word	.L204+1
 3682 00f0 3B030000 		.word	.L198+1
 3683 00f4 79010000 		.word	.L205+1
 3684 00f8 3B030000 		.word	.L198+1
 3685 00fc 3B030000 		.word	.L198+1
 3686 0100 3B030000 		.word	.L198+1
 3687 0104 3B030000 		.word	.L198+1
 3688 0108 3B030000 		.word	.L198+1
 3689 010c 3B030000 		.word	.L198+1
 3690 0110 3B030000 		.word	.L198+1
 3691 0114 3B030000 		.word	.L198+1
 3692 0118 3B030000 		.word	.L198+1
 3693 011c 3B030000 		.word	.L198+1
 3694 0120 A9010000 		.word	.L206+1
 3695 0124 FF010000 		.word	.L207+1
 3696 0128 61010000 		.word	.L208+1
 3697 012c 85010000 		.word	.L209+1
 3698 0130 91010000 		.word	.L210+1
 3699 0134 3B030000 		.word	.L198+1
 3700 0138 55010000 		.word	.L211+1
 3701 013c 3B030000 		.word	.L198+1
 3702 0140 3B030000 		.word	.L198+1
 3703 0144 9D010000 		.word	.L212+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 81


 3704              		.p2align 1
 3705              	.L203:
 3706              	.LBB11:
 797:.\main.c      ****     case 'a':
 798:.\main.c      ****         initTurnLeft();
 3707              		.loc 1 798 0
 3708 0148 FFF7FEFF 		bl	initTurnLeft
 799:.\main.c      ****         track_mode = NO_TRACK;
 3709              		.loc 1 799 0
 3710 014c 7C4B     		ldr	r3, .L222
 3711 014e 0022     		movs	r2, #0
 3712 0150 1A70     		strb	r2, [r3]
 800:.\main.c      ****         break;
 3713              		.loc 1 800 0
 3714 0152 F2E0     		b	.L198
 3715              	.L211:
 801:.\main.c      ****     case 'w':
 802:.\main.c      ****         initForward();
 3716              		.loc 1 802 0
 3717 0154 FFF7FEFF 		bl	initForward
 803:.\main.c      ****         track_mode = NO_TRACK;
 3718              		.loc 1 803 0
 3719 0158 794B     		ldr	r3, .L222
 3720 015a 0022     		movs	r2, #0
 3721 015c 1A70     		strb	r2, [r3]
 804:.\main.c      ****         break;
 3722              		.loc 1 804 0
 3723 015e ECE0     		b	.L198
 3724              	.L208:
 805:.\main.c      ****     case 's': 
 806:.\main.c      ****         reverseDirection();
 3725              		.loc 1 806 0
 3726 0160 FFF7FEFF 		bl	reverseDirection
 807:.\main.c      ****         track_mode = NO_TRACK;
 3727              		.loc 1 807 0
 3728 0164 764B     		ldr	r3, .L222
 3729 0166 0022     		movs	r2, #0
 3730 0168 1A70     		strb	r2, [r3]
 808:.\main.c      ****         break;
 3731              		.loc 1 808 0
 3732 016a E6E0     		b	.L198
 3733              	.L204:
 809:.\main.c      ****     case 'd':
 810:.\main.c      ****         initTurnRight();
 3734              		.loc 1 810 0
 3735 016c FFF7FEFF 		bl	initTurnRight
 811:.\main.c      ****         track_mode = NO_TRACK;
 3736              		.loc 1 811 0
 3737 0170 734B     		ldr	r3, .L222
 3738 0172 0022     		movs	r2, #0
 3739 0174 1A70     		strb	r2, [r3]
 812:.\main.c      ****         break;
 3740              		.loc 1 812 0
 3741 0176 E0E0     		b	.L198
 3742              	.L205:
 813:.\main.c      ****     case 'f':
 814:.\main.c      ****         initBrake();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 82


 3743              		.loc 1 814 0
 3744 0178 FFF7FEFF 		bl	initBrake
 815:.\main.c      ****         track_mode = NO_TRACK;
 3745              		.loc 1 815 0
 3746 017c 704B     		ldr	r3, .L222
 3747 017e 0022     		movs	r2, #0
 3748 0180 1A70     		strb	r2, [r3]
 816:.\main.c      ****         break;
 3749              		.loc 1 816 0
 3750 0182 DAE0     		b	.L198
 3751              	.L209:
 817:.\main.c      ****     case('t'):
 818:.\main.c      ****         track_mode = CURVE_TRACK;
 3752              		.loc 1 818 0
 3753 0184 6E4B     		ldr	r3, .L222
 3754 0186 0122     		movs	r2, #1
 3755 0188 1A70     		strb	r2, [r3]
 819:.\main.c      ****         initTrack();
 3756              		.loc 1 819 0
 3757 018a FFF7FEFF 		bl	initTrack
 820:.\main.c      ****         break;
 3758              		.loc 1 820 0
 3759 018e D4E0     		b	.L198
 3760              	.L210:
 821:.\main.c      ****     case('u'):
 822:.\main.c      ****         initTrackU();
 3761              		.loc 1 822 0
 3762 0190 FFF7FEFF 		bl	initTrackU
 823:.\main.c      ****         track_mode = U_TRACK;
 3763              		.loc 1 823 0
 3764 0194 6A4B     		ldr	r3, .L222
 3765 0196 0222     		movs	r2, #2
 3766 0198 1A70     		strb	r2, [r3]
 824:.\main.c      ****         break;
 3767              		.loc 1 824 0
 3768 019a CEE0     		b	.L198
 3769              	.L212:
 825:.\main.c      ****     case('z'):
 826:.\main.c      ****         track_mode = SQUARE_TRACK;
 3770              		.loc 1 826 0
 3771 019c 684B     		ldr	r3, .L222
 3772 019e 0322     		movs	r2, #3
 3773 01a0 1A70     		strb	r2, [r3]
 827:.\main.c      ****         inittrackLineZ();
 3774              		.loc 1 827 0
 3775 01a2 FFF7FEFF 		bl	inittrackLineZ
 828:.\main.c      ****         break;
 3776              		.loc 1 828 0
 3777 01a6 C8E0     		b	.L198
 3778              	.L206:
 829:.\main.c      ****     case('q'):
 830:.\main.c      ****         track_mode = QUAD_STOP;
 3779              		.loc 1 830 0
 3780 01a8 654B     		ldr	r3, .L222
 3781 01aa 0422     		movs	r2, #4
 3782 01ac 1A70     		strb	r2, [r3]
 831:.\main.c      ****         accum_dist = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 83


 3783              		.loc 1 831 0
 3784 01ae 654B     		ldr	r3, .L222+4
 3785 01b0 0022     		movs	r2, #0
 3786 01b2 1A80     		strh	r2, [r3]	@ movhi
 832:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3787              		.loc 1 832 0
 3788 01b4 644B     		ldr	r3, .L222+8
 3789 01b6 1B88     		ldrh	r3, [r3]
 3790 01b8 1BB2     		sxth	r3, r3
 3791 01ba 1846     		mov	r0, r3
 3792 01bc FFF7FEFF 		bl	__aeabi_i2f
 3793 01c0 0246     		mov	r2, r0
 3794 01c2 624B     		ldr	r3, .L222+12
 3795 01c4 1B68     		ldr	r3, [r3]	@ float
 3796 01c6 1046     		mov	r0, r2
 3797 01c8 1946     		mov	r1, r3
 3798 01ca FFF7FEFF 		bl	__aeabi_fmul
 3799 01ce 0346     		mov	r3, r0
 3800 01d0 1846     		mov	r0, r3
 3801 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3802 01d6 0346     		mov	r3, r0
 3803 01d8 9AB2     		uxth	r2, r3
 3804 01da 5D4B     		ldr	r3, .L222+16
 3805 01dc 1A80     		strh	r2, [r3]	@ movhi
 833:.\main.c      ****         char mes[16];
 834:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3806              		.loc 1 834 0
 3807 01de 5C4B     		ldr	r3, .L222+16
 3808 01e0 1B88     		ldrh	r3, [r3]
 3809 01e2 1BB2     		sxth	r3, r3
 3810 01e4 3A1D     		adds	r2, r7, #4
 3811 01e6 1046     		mov	r0, r2
 3812 01e8 5A49     		ldr	r1, .L222+20
 3813 01ea 1A46     		mov	r2, r3
 3814 01ec FFF7FEFF 		bl	sprintf
 835:.\main.c      ****         UART_PutString(mes);
 3815              		.loc 1 835 0
 3816 01f0 3B1D     		adds	r3, r7, #4
 3817 01f2 1846     		mov	r0, r3
 3818 01f4 FFF7FEFF 		bl	UART_PutString
 836:.\main.c      ****         initForward();
 3819              		.loc 1 836 0
 3820 01f8 FFF7FEFF 		bl	initForward
 837:.\main.c      ****         break;
 3821              		.loc 1 837 0
 3822 01fc 9DE0     		b	.L198
 3823              	.L207:
 838:.\main.c      ****     case ('r'):
 839:.\main.c      ****         track_mode = RF_STOP;
 3824              		.loc 1 839 0
 3825 01fe 504B     		ldr	r3, .L222
 3826 0200 0522     		movs	r2, #5
 3827 0202 1A70     		strb	r2, [r3]
 840:.\main.c      ****         changeToRF();
 3828              		.loc 1 840 0
 3829 0204 FFF7FEFF 		bl	changeToRF
 841:.\main.c      ****         // Make initial position
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 84


 842:.\main.c      ****         initial_pos_valid = 0;
 3830              		.loc 1 842 0
 3831 0208 534B     		ldr	r3, .L222+24
 3832 020a 0022     		movs	r2, #0
 3833 020c 1A70     		strb	r2, [r3]
 843:.\main.c      ****         initBrake();
 3834              		.loc 1 843 0
 3835 020e FFF7FEFF 		bl	initBrake
 844:.\main.c      ****         break;
 3836              		.loc 1 844 0
 3837 0212 92E0     		b	.L198
 3838              	.L202:
 845:.\main.c      ****     case ('2'):
 846:.\main.c      ****         track_mode = DEST_TEST;
 3839              		.loc 1 846 0
 3840 0214 4A4B     		ldr	r3, .L222
 3841 0216 0622     		movs	r2, #6
 3842 0218 1A70     		strb	r2, [r3]
 847:.\main.c      ****         tracked_direction = robot_direction;
 3843              		.loc 1 847 0
 3844 021a 504B     		ldr	r3, .L222+28
 3845 021c 1B68     		ldr	r3, [r3]
 3846 021e 504A     		ldr	r2, .L222+32
 3847 0220 1360     		str	r3, [r2]
 848:.\main.c      ****         instructionLength = generateDirections();
 3848              		.loc 1 848 0
 3849 0222 FFF7FEFF 		bl	generateDirections
 3850 0226 0346     		mov	r3, r0
 3851 0228 9AB2     		uxth	r2, r3
 3852 022a 4E4B     		ldr	r3, .L222+36
 3853 022c 1A80     		strh	r2, [r3]	@ movhi
 849:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 850:.\main.c      ****         //char message[128];
 851:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 852:.\main.c      ****         int i = 0;
 3854              		.loc 1 852 0
 3855 022e 0023     		movs	r3, #0
 3856 0230 FB61     		str	r3, [r7, #28]
 853:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3857              		.loc 1 853 0
 3858 0232 0023     		movs	r3, #0
 3859 0234 FB61     		str	r3, [r7, #28]
 3860 0236 18E0     		b	.L214
 3861              	.L217:
 854:.\main.c      ****         {
 855:.\main.c      ****             if(i%2 == 0)
 3862              		.loc 1 855 0
 3863 0238 FB69     		ldr	r3, [r7, #28]
 3864 023a 03F00103 		and	r3, r3, #1
 3865 023e 002B     		cmp	r3, #0
 3866 0240 07D1     		bne	.L215
 856:.\main.c      ****             {
 857:.\main.c      ****                 UART_PutChar(instructions[i]);
 3867              		.loc 1 857 0
 3868 0242 494A     		ldr	r2, .L222+40
 3869 0244 FB69     		ldr	r3, [r7, #28]
 3870 0246 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 85


 3871 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3872 024a 1846     		mov	r0, r3
 3873 024c FFF7FEFF 		bl	UART_PutChar
 3874 0250 08E0     		b	.L216
 3875              	.L215:
 858:.\main.c      ****             }
 859:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3876              		.loc 1 859 0
 3877 0252 454A     		ldr	r2, .L222+40
 3878 0254 FB69     		ldr	r3, [r7, #28]
 3879 0256 1344     		add	r3, r3, r2
 3880 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3881 025a 3033     		adds	r3, r3, #48
 3882 025c DBB2     		uxtb	r3, r3
 3883 025e 1846     		mov	r0, r3
 3884 0260 FFF7FEFF 		bl	UART_PutChar
 3885              	.L216:
 853:.\main.c      ****         {
 3886              		.loc 1 853 0 discriminator 2
 3887 0264 FB69     		ldr	r3, [r7, #28]
 3888 0266 0133     		adds	r3, r3, #1
 3889 0268 FB61     		str	r3, [r7, #28]
 3890              	.L214:
 853:.\main.c      ****         {
 3891              		.loc 1 853 0 is_stmt 0 discriminator 1
 3892 026a 3E4B     		ldr	r3, .L222+36
 3893 026c 1B88     		ldrh	r3, [r3]
 3894 026e 1A46     		mov	r2, r3
 3895 0270 FB69     		ldr	r3, [r7, #28]
 3896 0272 9A42     		cmp	r2, r3
 3897 0274 E0DC     		bgt	.L217
 860:.\main.c      **** 
 861:.\main.c      ****         }
 862:.\main.c      ****         
 863:.\main.c      ****         UART_PutString("\r\n");
 3898              		.loc 1 863 0 is_stmt 1
 3899 0276 3D48     		ldr	r0, .L222+44
 3900 0278 FFF7FEFF 		bl	UART_PutString
 864:.\main.c      **** 
 865:.\main.c      ****         inittrackLineZ();
 3901              		.loc 1 865 0
 3902 027c FFF7FEFF 		bl	inittrackLineZ
 866:.\main.c      ****         break;
 3903              		.loc 1 866 0
 3904 0280 5BE0     		b	.L198
 3905              	.L200:
 867:.\main.c      ****         case ('1'):
 868:.\main.c      ****         track_mode = DEST_TEST;
 3906              		.loc 1 868 0
 3907 0282 2F4B     		ldr	r3, .L222
 3908 0284 0622     		movs	r2, #6
 3909 0286 1A70     		strb	r2, [r3]
 869:.\main.c      ****         tracked_direction = robot_direction;
 3910              		.loc 1 869 0
 3911 0288 344B     		ldr	r3, .L222+28
 3912 028a 1B68     		ldr	r3, [r3]
 3913 028c 344A     		ldr	r2, .L222+32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 86


 3914 028e 1360     		str	r3, [r2]
 870:.\main.c      ****         //instructionLength = generateDirections();
 871:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3915              		.loc 1 871 0
 3916 0290 FFF7FEFF 		bl	generateEntireMapDirections
 3917 0294 0346     		mov	r3, r0
 3918 0296 9AB2     		uxth	r2, r3
 3919 0298 324B     		ldr	r3, .L222+36
 3920 029a 1A80     		strh	r2, [r3]	@ movhi
 872:.\main.c      ****         //char message[128];
 873:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 874:.\main.c      ****         instructionCount = 17*2;
 3921              		.loc 1 874 0
 3922 029c 344B     		ldr	r3, .L222+48
 3923 029e 2222     		movs	r2, #34
 3924 02a0 1A80     		strh	r2, [r3]	@ movhi
 875:.\main.c      ****         int x;
 876:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 3925              		.loc 1 876 0
 3926 02a2 334B     		ldr	r3, .L222+48
 3927 02a4 1B88     		ldrh	r3, [r3]
 3928 02a6 BB61     		str	r3, [r7, #24]
 3929 02a8 18E0     		b	.L218
 3930              	.L221:
 877:.\main.c      ****         {
 878:.\main.c      ****             if(x%2 == 0)
 3931              		.loc 1 878 0
 3932 02aa BB69     		ldr	r3, [r7, #24]
 3933 02ac 03F00103 		and	r3, r3, #1
 3934 02b0 002B     		cmp	r3, #0
 3935 02b2 07D1     		bne	.L219
 879:.\main.c      ****             {
 880:.\main.c      ****                 UART_PutChar(instructions[x]);
 3936              		.loc 1 880 0
 3937 02b4 2C4A     		ldr	r2, .L222+40
 3938 02b6 BB69     		ldr	r3, [r7, #24]
 3939 02b8 1344     		add	r3, r3, r2
 3940 02ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3941 02bc 1846     		mov	r0, r3
 3942 02be FFF7FEFF 		bl	UART_PutChar
 3943 02c2 08E0     		b	.L220
 3944              	.L219:
 881:.\main.c      ****             }
 882:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 3945              		.loc 1 882 0
 3946 02c4 284A     		ldr	r2, .L222+40
 3947 02c6 BB69     		ldr	r3, [r7, #24]
 3948 02c8 1344     		add	r3, r3, r2
 3949 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3950 02cc 3033     		adds	r3, r3, #48
 3951 02ce DBB2     		uxtb	r3, r3
 3952 02d0 1846     		mov	r0, r3
 3953 02d2 FFF7FEFF 		bl	UART_PutChar
 3954              	.L220:
 876:.\main.c      ****         {
 3955              		.loc 1 876 0 discriminator 2
 3956 02d6 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 87


 3957 02d8 0133     		adds	r3, r3, #1
 3958 02da BB61     		str	r3, [r7, #24]
 3959              	.L218:
 876:.\main.c      ****         {
 3960              		.loc 1 876 0 is_stmt 0 discriminator 1
 3961 02dc 214B     		ldr	r3, .L222+36
 3962 02de 1B88     		ldrh	r3, [r3]
 3963 02e0 1A46     		mov	r2, r3
 3964 02e2 BB69     		ldr	r3, [r7, #24]
 3965 02e4 9A42     		cmp	r2, r3
 3966 02e6 E0DC     		bgt	.L221
 883:.\main.c      **** 
 884:.\main.c      ****         }
 885:.\main.c      ****         
 886:.\main.c      ****         UART_PutString("\r\n");
 3967              		.loc 1 886 0 is_stmt 1
 3968 02e8 2048     		ldr	r0, .L222+44
 3969 02ea FFF7FEFF 		bl	UART_PutString
 887:.\main.c      **** 
 888:.\main.c      ****         char nextStep = instructions[instructionCount];
 3970              		.loc 1 888 0
 3971 02ee 204B     		ldr	r3, .L222+48
 3972 02f0 1B88     		ldrh	r3, [r3]
 3973 02f2 1A46     		mov	r2, r3
 3974 02f4 1C4B     		ldr	r3, .L222+40
 3975 02f6 9B5C     		ldrb	r3, [r3, r2]
 3976 02f8 BB75     		strb	r3, [r7, #22]
 889:.\main.c      ****         
 890:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 3977              		.loc 1 890 0
 3978 02fa 1D4B     		ldr	r3, .L222+48
 3979 02fc 1B88     		ldrh	r3, [r3]
 3980 02fe 0133     		adds	r3, r3, #1
 3981 0300 194A     		ldr	r2, .L222+40
 3982 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3983 0304 9BB2     		uxth	r3, r3
 3984 0306 1A46     		mov	r2, r3	@ movhi
 3985 0308 D200     		lsls	r2, r2, #3
 3986 030a 1A44     		add	r2, r2, r3
 3987 030c D200     		lsls	r2, r2, #3
 3988 030e D31A     		subs	r3, r2, r3
 3989 0310 5B00     		lsls	r3, r3, #1
 3990 0312 9BB2     		uxth	r3, r3
 3991 0314 9AB2     		uxth	r2, r3
 3992 0316 0E4B     		ldr	r3, .L222+16
 3993 0318 1A80     		strh	r2, [r3]	@ movhi
 891:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 3994              		.loc 1 891 0
 3995 031a 0D4B     		ldr	r3, .L222+16
 3996 031c 1B88     		ldrh	r3, [r3]
 3997 031e 1BB2     		sxth	r3, r3
 3998 0320 3A1D     		adds	r2, r7, #4
 3999 0322 1046     		mov	r0, r2
 4000 0324 1349     		ldr	r1, .L222+52
 4001 0326 1A46     		mov	r2, r3
 4002 0328 FFF7FEFF 		bl	sprintf
 892:.\main.c      ****         UART_PutString(mes);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 88


 4003              		.loc 1 892 0
 4004 032c 3B1D     		adds	r3, r7, #4
 4005 032e 1846     		mov	r0, r3
 4006 0330 FFF7FEFF 		bl	UART_PutString
 893:.\main.c      ****         inittrackLineZ();
 4007              		.loc 1 893 0
 4008 0334 FFF7FEFF 		bl	inittrackLineZ
 894:.\main.c      ****         break;
 4009              		.loc 1 894 0
 4010 0338 00BF     		nop
 4011              	.L198:
 4012              	.LBE11:
 895:.\main.c      ****     }
 896:.\main.c      **** }
 4013              		.loc 1 896 0
 4014 033a 2037     		adds	r7, r7, #32
 4015              		.cfi_def_cfa_offset 8
 4016 033c BD46     		mov	sp, r7
 4017              		.cfi_def_cfa_register 13
 4018              		@ sp needed
 4019 033e 80BD     		pop	{r7, pc}
 4020              	.L223:
 4021              		.align	2
 4022              	.L222:
 4023 0340 00000000 		.word	track_mode
 4024 0344 00000000 		.word	accum_dist
 4025 0348 00000000 		.word	target_distance_cm
 4026 034c 00000000 		.word	quad_per_cm
 4027 0350 00000000 		.word	target_distance_quad
 4028 0354 C4000000 		.word	.LC9
 4029 0358 00000000 		.word	initial_pos_valid
 4030 035c 00000000 		.word	robot_direction
 4031 0360 00000000 		.word	tracked_direction
 4032 0364 00000000 		.word	instructionLength
 4033 0368 00000000 		.word	instructions
 4034 036c D8000000 		.word	.LC10
 4035 0370 00000000 		.word	instructionCount
 4036 0374 6C000000 		.word	.LC5
 4037              		.cfi_endproc
 4038              	.LFE93:
 4039              		.size	BT_rxInt, .-BT_rxInt
 4040              		.section	.text.changeToRF,"ax",%progbits
 4041              		.align	2
 4042              		.global	changeToRF
 4043              		.thumb
 4044              		.thumb_func
 4045              		.type	changeToRF, %function
 4046              	changeToRF:
 4047              	.LFB94:
 897:.\main.c      **** 
 898:.\main.c      **** 
 899:.\main.c      **** void changeToRF()
 900:.\main.c      **** {
 4048              		.loc 1 900 0
 4049              		.cfi_startproc
 4050              		@ args = 0, pretend = 0, frame = 0
 4051              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 89


 4052 0000 80B5     		push	{r7, lr}
 4053              		.cfi_def_cfa_offset 8
 4054              		.cfi_offset 7, -8
 4055              		.cfi_offset 14, -4
 4056 0002 00AF     		add	r7, sp, #0
 4057              		.cfi_def_cfa_register 7
 901:.\main.c      ****         //disable BT
 902:.\main.c      ****         BT_ENABLED = 0;
 4058              		.loc 1 902 0
 4059 0004 0B4B     		ldr	r3, .L225
 4060 0006 0022     		movs	r2, #0
 4061 0008 1A70     		strb	r2, [r3]
 903:.\main.c      ****         isrRF_RX_Stop();
 4062              		.loc 1 903 0
 4063 000a FFF7FEFF 		bl	isrRF_RX_Stop
 904:.\main.c      ****         UART_Stop();
 4064              		.loc 1 904 0
 4065 000e FFF7FEFF 		bl	UART_Stop
 905:.\main.c      ****         
 906:.\main.c      ****         //enable RF
 907:.\main.c      ****         BIN_ENABLED = 1;
 4066              		.loc 1 907 0
 4067 0012 094B     		ldr	r3, .L225+4
 4068 0014 0122     		movs	r2, #1
 4069 0016 1A70     		strb	r2, [r3]
 908:.\main.c      ****         UART_clk_SetDividerValue(130);
 4070              		.loc 1 908 0
 4071 0018 8120     		movs	r0, #129
 4072 001a 0121     		movs	r1, #1
 4073 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 909:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4074              		.loc 1 909 0
 4075 0020 0648     		ldr	r0, .L225+8
 4076 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 910:.\main.c      ****         UART_Start();
 4077              		.loc 1 910 0
 4078 0026 FFF7FEFF 		bl	UART_Start
 911:.\main.c      ****         RF_BT_SELECT_Write(0);
 4079              		.loc 1 911 0
 4080 002a 0020     		movs	r0, #0
 4081 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 912:.\main.c      **** }
 4082              		.loc 1 912 0
 4083 0030 80BD     		pop	{r7, pc}
 4084              	.L226:
 4085 0032 00BF     		.align	2
 4086              	.L225:
 4087 0034 00000000 		.word	BT_ENABLED
 4088 0038 00000000 		.word	BIN_ENABLED
 4089 003c 00000000 		.word	rxInt
 4090              		.cfi_endproc
 4091              	.LFE94:
 4092              		.size	changeToRF, .-changeToRF
 4093              		.section	.text.changeToBT,"ax",%progbits
 4094              		.align	2
 4095              		.global	changeToBT
 4096              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 90


 4097              		.thumb_func
 4098              		.type	changeToBT, %function
 4099              	changeToBT:
 4100              	.LFB95:
 913:.\main.c      **** 
 914:.\main.c      **** void changeToBT()
 915:.\main.c      **** {
 4101              		.loc 1 915 0
 4102              		.cfi_startproc
 4103              		@ args = 0, pretend = 0, frame = 0
 4104              		@ frame_needed = 1, uses_anonymous_args = 0
 4105 0000 80B5     		push	{r7, lr}
 4106              		.cfi_def_cfa_offset 8
 4107              		.cfi_offset 7, -8
 4108              		.cfi_offset 14, -4
 4109 0002 00AF     		add	r7, sp, #0
 4110              		.cfi_def_cfa_register 7
 916:.\main.c      ****         //disable RF
 917:.\main.c      ****         BIN_ENABLED = 0;
 4111              		.loc 1 917 0
 4112 0004 0B4B     		ldr	r3, .L228
 4113 0006 0022     		movs	r2, #0
 4114 0008 1A70     		strb	r2, [r3]
 918:.\main.c      ****         isrRF_RX_Stop();
 4115              		.loc 1 918 0
 4116 000a FFF7FEFF 		bl	isrRF_RX_Stop
 919:.\main.c      ****         UART_Stop();
 4117              		.loc 1 919 0
 4118 000e FFF7FEFF 		bl	UART_Stop
 920:.\main.c      ****         
 921:.\main.c      ****         //enable BT
 922:.\main.c      ****         BT_ENABLED = 1;
 4119              		.loc 1 922 0
 4120 0012 094B     		ldr	r3, .L228+4
 4121 0014 0122     		movs	r2, #1
 4122 0016 1A70     		strb	r2, [r3]
 923:.\main.c      ****         UART_clk_SetDividerValue(781);
 4123              		.loc 1 923 0
 4124 0018 4FF44370 		mov	r0, #780
 4125 001c 0121     		movs	r1, #1
 4126 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 924:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4127              		.loc 1 924 0
 4128 0022 0648     		ldr	r0, .L228+8
 4129 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 925:.\main.c      ****         UART_Start();
 4130              		.loc 1 925 0
 4131 0028 FFF7FEFF 		bl	UART_Start
 926:.\main.c      ****         RF_BT_SELECT_Write(1);
 4132              		.loc 1 926 0
 4133 002c 0120     		movs	r0, #1
 4134 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 927:.\main.c      **** }
 4135              		.loc 1 927 0
 4136 0032 80BD     		pop	{r7, pc}
 4137              	.L229:
 4138              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 91


 4139              	.L228:
 4140 0034 00000000 		.word	BIN_ENABLED
 4141 0038 00000000 		.word	BT_ENABLED
 4142 003c 00000000 		.word	BT_rxInt
 4143              		.cfi_endproc
 4144              	.LFE95:
 4145              		.size	changeToBT, .-changeToBT
 4146              		.section	.text.Quad_Dec_response,"ax",%progbits
 4147              		.align	2
 4148              		.global	Quad_Dec_response
 4149              		.thumb
 4150              		.thumb_func
 4151              		.type	Quad_Dec_response, %function
 4152              	Quad_Dec_response:
 4153              	.LFB96:
 928:.\main.c      **** 
 929:.\main.c      **** 
 930:.\main.c      **** void Quad_Dec_response()
 931:.\main.c      **** {
 4154              		.loc 1 931 0
 4155              		.cfi_startproc
 4156              		@ args = 0, pretend = 0, frame = 32
 4157              		@ frame_needed = 1, uses_anonymous_args = 0
 4158 0000 B0B5     		push	{r4, r5, r7, lr}
 4159              		.cfi_def_cfa_offset 16
 4160              		.cfi_offset 4, -16
 4161              		.cfi_offset 5, -12
 4162              		.cfi_offset 7, -8
 4163              		.cfi_offset 14, -4
 4164 0002 88B0     		sub	sp, sp, #32
 4165              		.cfi_def_cfa_offset 48
 4166 0004 00AF     		add	r7, sp, #0
 4167              		.cfi_def_cfa_register 7
 932:.\main.c      ****     //Check if the flag has been set
 933:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4168              		.loc 1 933 0
 4169 0006 824B     		ldr	r3, .L238
 4170 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4171 000a 002B     		cmp	r3, #0
 4172 000c 00D1     		bne	.L231
 4173 000e FCE0     		b	.L230
 4174              	.L231:
 934:.\main.c      ****     flag_calc_wheelspeed = 0;
 4175              		.loc 1 934 0
 4176 0010 7F4B     		ldr	r3, .L238
 4177 0012 0022     		movs	r2, #0
 4178 0014 1A70     		strb	r2, [r3]
 935:.\main.c      ****     
 936:.\main.c      ****     //char wheel_1_str [64];
 937:.\main.c      ****     //char wheel_2_str [64];
 938:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 939:.\main.c      ****     //usbPutString(wheel_1_str);
 940:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 941:.\main.c      ****     
 942:.\main.c      ****     //usbPutString(wheel_2_str);
 943:.\main.c      ****     
 944:.\main.c      ****     int16 leftSpeed = quad_diff1;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 92


 4179              		.loc 1 944 0
 4180 0016 7F4B     		ldr	r3, .L238+4
 4181 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4182 001a FB81     		strh	r3, [r7, #14]	@ movhi
 945:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4183              		.loc 1 945 0
 4184 001c 7E4B     		ldr	r3, .L238+8
 4185 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4186 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 946:.\main.c      ****     double scalingLeft = 1;
 4187              		.loc 1 946 0
 4188 0022 4FF00002 		mov	r2, #0
 4189 0026 7D4B     		ldr	r3, .L238+12
 4190 0028 C7E90623 		strd	r2, [r7, #24]
 947:.\main.c      ****     double scalingRight = 1;
 4191              		.loc 1 947 0
 4192 002c 4FF00002 		mov	r2, #0
 4193 0030 7A4B     		ldr	r3, .L238+12
 4194 0032 C7E90423 		strd	r2, [r7, #16]
 948:.\main.c      ****     
 949:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 950:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4195              		.loc 1 950 0
 4196 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4197 003a 002B     		cmp	r3, #0
 4198 003c 0FD1     		bne	.L233
 4199              		.loc 1 950 0 is_stmt 0 discriminator 1
 4200 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4201 0042 002B     		cmp	r3, #0
 4202 0044 0BD1     		bne	.L233
 951:.\main.c      ****        //leftSpeed = 3;
 952:.\main.c      ****         scalingLeft = 2;
 4203              		.loc 1 952 0 is_stmt 1
 4204 0046 4FF00002 		mov	r2, #0
 4205 004a 4FF08043 		mov	r3, #1073741824
 4206 004e C7E90623 		strd	r2, [r7, #24]
 953:.\main.c      ****         scalingRight = 2;
 4207              		.loc 1 953 0
 4208 0052 4FF00002 		mov	r2, #0
 4209 0056 4FF08043 		mov	r3, #1073741824
 4210 005a C7E90423 		strd	r2, [r7, #16]
 4211              	.L233:
 954:.\main.c      ****     }
 955:.\main.c      **** 
 956:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4212              		.loc 1 956 0
 4213 005e 704B     		ldr	r3, .L238+16
 4214 0060 1B88     		ldrh	r3, [r3]
 4215 0062 1AB2     		sxth	r2, r3
 4216 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4217 0068 002B     		cmp	r3, #0
 4218 006a B8BF     		it	lt
 4219 006c 5B42     		rsblt	r3, r3, #0
 4220 006e D31A     		subs	r3, r2, r3
 4221 0070 BB60     		str	r3, [r7, #8]
 957:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4222              		.loc 1 957 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 93


 4223 0072 BB68     		ldr	r3, [r7, #8]
 4224 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4225 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4226 007c BB68     		ldr	r3, [r7, #8]
 4227 007e 92FBF3F3 		sdiv	r3, r2, r3
 4228 0082 1846     		mov	r0, r3
 4229 0084 FFF7FEFF 		bl	__aeabi_i2d
 4230 0088 0446     		mov	r4, r0
 4231 008a 0D46     		mov	r5, r1
 4232 008c BB68     		ldr	r3, [r7, #8]
 4233 008e 002B     		cmp	r3, #0
 4234 0090 B8BF     		it	lt
 4235 0092 5B42     		rsblt	r3, r3, #0
 4236 0094 1846     		mov	r0, r3
 4237 0096 FFF7FEFF 		bl	__aeabi_i2d
 4238 009a 0246     		mov	r2, r0
 4239 009c 0B46     		mov	r3, r1
 4240 009e 1046     		mov	r0, r2
 4241 00a0 1946     		mov	r1, r3
 4242 00a2 FFF7FEFF 		bl	sqrt
 4243 00a6 0246     		mov	r2, r0
 4244 00a8 0B46     		mov	r3, r1
 4245 00aa 2046     		mov	r0, r4
 4246 00ac 2946     		mov	r1, r5
 4247 00ae FFF7FEFF 		bl	__aeabi_dmul
 4248 00b2 0246     		mov	r2, r0
 4249 00b4 0B46     		mov	r3, r1
 4250 00b6 1046     		mov	r0, r2
 4251 00b8 1946     		mov	r1, r3
 4252 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4253 00be 0346     		mov	r3, r0
 4254 00c0 7B60     		str	r3, [r7, #4]
 958:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4255              		.loc 1 958 0
 4256 00c2 584B     		ldr	r3, .L238+20
 4257 00c4 1B88     		ldrh	r3, [r3]
 4258 00c6 1BB2     		sxth	r3, r3
 4259 00c8 1846     		mov	r0, r3
 4260 00ca FFF7FEFF 		bl	__aeabi_i2d
 4261 00ce 0446     		mov	r4, r0
 4262 00d0 0D46     		mov	r5, r1
 4263 00d2 7868     		ldr	r0, [r7, #4]
 4264 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4265 00d8 0246     		mov	r2, r0
 4266 00da 0B46     		mov	r3, r1
 4267 00dc 1046     		mov	r0, r2
 4268 00de 1946     		mov	r1, r3
 4269 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4270 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4271 00e8 0246     		mov	r2, r0
 4272 00ea 0B46     		mov	r3, r1
 4273 00ec 2046     		mov	r0, r4
 4274 00ee 2946     		mov	r1, r5
 4275 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4276 00f4 0246     		mov	r2, r0
 4277 00f6 0B46     		mov	r3, r1
 4278 00f8 1046     		mov	r0, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 94


 4279 00fa 1946     		mov	r1, r3
 4280 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4281 0100 0346     		mov	r3, r0
 4282 0102 9AB2     		uxth	r2, r3
 4283 0104 474B     		ldr	r3, .L238+20
 4284 0106 1A80     		strh	r2, [r3]	@ movhi
 959:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4285              		.loc 1 959 0
 4286 0108 474B     		ldr	r3, .L238+24
 4287 010a 1B88     		ldrh	r3, [r3]
 4288 010c 1AB2     		sxth	r2, r3
 4289 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4290 0112 002B     		cmp	r3, #0
 4291 0114 B8BF     		it	lt
 4292 0116 5B42     		rsblt	r3, r3, #0
 4293 0118 D31A     		subs	r3, r2, r3
 4294 011a BB60     		str	r3, [r7, #8]
 960:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4295              		.loc 1 960 0
 4296 011c BB68     		ldr	r3, [r7, #8]
 4297 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4298 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4299 0126 BB68     		ldr	r3, [r7, #8]
 4300 0128 92FBF3F3 		sdiv	r3, r2, r3
 4301 012c 1846     		mov	r0, r3
 4302 012e FFF7FEFF 		bl	__aeabi_i2d
 4303 0132 0446     		mov	r4, r0
 4304 0134 0D46     		mov	r5, r1
 4305 0136 BB68     		ldr	r3, [r7, #8]
 4306 0138 002B     		cmp	r3, #0
 4307 013a B8BF     		it	lt
 4308 013c 5B42     		rsblt	r3, r3, #0
 4309 013e 1846     		mov	r0, r3
 4310 0140 FFF7FEFF 		bl	__aeabi_i2d
 4311 0144 0246     		mov	r2, r0
 4312 0146 0B46     		mov	r3, r1
 4313 0148 1046     		mov	r0, r2
 4314 014a 1946     		mov	r1, r3
 4315 014c FFF7FEFF 		bl	sqrt
 4316 0150 0246     		mov	r2, r0
 4317 0152 0B46     		mov	r3, r1
 4318 0154 2046     		mov	r0, r4
 4319 0156 2946     		mov	r1, r5
 4320 0158 FFF7FEFF 		bl	__aeabi_dmul
 4321 015c 0246     		mov	r2, r0
 4322 015e 0B46     		mov	r3, r1
 4323 0160 1046     		mov	r0, r2
 4324 0162 1946     		mov	r1, r3
 4325 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4326 0168 0346     		mov	r3, r0
 4327 016a 7B60     		str	r3, [r7, #4]
 961:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4328              		.loc 1 961 0
 4329 016c 2F4B     		ldr	r3, .L238+28
 4330 016e 1B88     		ldrh	r3, [r3]
 4331 0170 1BB2     		sxth	r3, r3
 4332 0172 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 95


 4333 0174 FFF7FEFF 		bl	__aeabi_i2d
 4334 0178 0446     		mov	r4, r0
 4335 017a 0D46     		mov	r5, r1
 4336 017c 7868     		ldr	r0, [r7, #4]
 4337 017e FFF7FEFF 		bl	__aeabi_i2d
 4338 0182 0246     		mov	r2, r0
 4339 0184 0B46     		mov	r3, r1
 4340 0186 1046     		mov	r0, r2
 4341 0188 1946     		mov	r1, r3
 4342 018a D7E90423 		ldrd	r2, [r7, #16]
 4343 018e FFF7FEFF 		bl	__aeabi_dmul
 4344 0192 0246     		mov	r2, r0
 4345 0194 0B46     		mov	r3, r1
 4346 0196 2046     		mov	r0, r4
 4347 0198 2946     		mov	r1, r5
 4348 019a FFF7FEFF 		bl	__aeabi_dadd
 4349 019e 0246     		mov	r2, r0
 4350 01a0 0B46     		mov	r3, r1
 4351 01a2 1046     		mov	r0, r2
 4352 01a4 1946     		mov	r1, r3
 4353 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4354 01aa 0346     		mov	r3, r0
 4355 01ac 9AB2     		uxth	r2, r3
 4356 01ae 1F4B     		ldr	r3, .L238+28
 4357 01b0 1A80     		strh	r2, [r3]	@ movhi
 962:.\main.c      ****     
 963:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4358              		.loc 1 963 0
 4359 01b2 1E4B     		ldr	r3, .L238+28
 4360 01b4 1B88     		ldrh	r3, [r3]
 4361 01b6 1BB2     		sxth	r3, r3
 4362 01b8 002B     		cmp	r3, #0
 4363 01ba 02DA     		bge	.L234
 4364              		.loc 1 963 0 is_stmt 0 discriminator 1
 4365 01bc 1B4B     		ldr	r3, .L238+28
 4366 01be 0022     		movs	r2, #0
 4367 01c0 1A80     		strh	r2, [r3]	@ movhi
 4368              	.L234:
 964:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4369              		.loc 1 964 0 is_stmt 1
 4370 01c2 184B     		ldr	r3, .L238+20
 4371 01c4 1B88     		ldrh	r3, [r3]
 4372 01c6 1BB2     		sxth	r3, r3
 4373 01c8 002B     		cmp	r3, #0
 4374 01ca 02DA     		bge	.L235
 4375              		.loc 1 964 0 is_stmt 0 discriminator 1
 4376 01cc 154B     		ldr	r3, .L238+20
 4377 01ce 0022     		movs	r2, #0
 4378 01d0 1A80     		strh	r2, [r3]	@ movhi
 4379              	.L235:
 965:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4380              		.loc 1 965 0 is_stmt 1
 4381 01d2 164B     		ldr	r3, .L238+28
 4382 01d4 1B88     		ldrh	r3, [r3]
 4383 01d6 1BB2     		sxth	r3, r3
 4384 01d8 642B     		cmp	r3, #100
 4385 01da 02DD     		ble	.L236
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 96


 4386              		.loc 1 965 0 is_stmt 0 discriminator 1
 4387 01dc 134B     		ldr	r3, .L238+28
 4388 01de 6422     		movs	r2, #100
 4389 01e0 1A80     		strh	r2, [r3]	@ movhi
 4390              	.L236:
 966:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4391              		.loc 1 966 0 is_stmt 1
 4392 01e2 104B     		ldr	r3, .L238+20
 4393 01e4 1B88     		ldrh	r3, [r3]
 4394 01e6 1BB2     		sxth	r3, r3
 4395 01e8 642B     		cmp	r3, #100
 4396 01ea 02DD     		ble	.L237
 4397              		.loc 1 966 0 is_stmt 0 discriminator 1
 4398 01ec 0D4B     		ldr	r3, .L238+20
 4399 01ee 6422     		movs	r2, #100
 4400 01f0 1A80     		strh	r2, [r3]	@ movhi
 4401              	.L237:
 967:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4402              		.loc 1 967 0 is_stmt 1
 4403 01f2 0C4B     		ldr	r3, .L238+20
 4404 01f4 1B88     		ldrh	r3, [r3]
 4405 01f6 DBB2     		uxtb	r3, r3
 4406 01f8 1846     		mov	r0, r3
 4407 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 968:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4408              		.loc 1 968 0
 4409 01fe 0B4B     		ldr	r3, .L238+28
 4410 0200 1B88     		ldrh	r3, [r3]
 4411 0202 DBB2     		uxtb	r3, r3
 4412 0204 1846     		mov	r0, r3
 4413 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4414              	.L230:
 969:.\main.c      **** }
 4415              		.loc 1 969 0
 4416 020a 2037     		adds	r7, r7, #32
 4417              		.cfi_def_cfa_offset 16
 4418 020c BD46     		mov	sp, r7
 4419              		.cfi_def_cfa_register 13
 4420              		@ sp needed
 4421 020e B0BD     		pop	{r4, r5, r7, pc}
 4422              	.L239:
 4423              		.align	2
 4424              	.L238:
 4425 0210 00000000 		.word	flag_calc_wheelspeed
 4426 0214 00000000 		.word	quad_diff1
 4427 0218 00000000 		.word	quad_diff2
 4428 021c 0000F03F 		.word	1072693248
 4429 0220 00000000 		.word	leftSpeedLimit
 4430 0224 00000000 		.word	left_duty_cycle
 4431 0228 00000000 		.word	rightSpeedLimit
 4432 022c 00000000 		.word	right_duty_cycle
 4433              		.cfi_endproc
 4434              	.LFE96:
 4435              		.size	Quad_Dec_response, .-Quad_Dec_response
 4436              		.section	.text.trackLine,"ax",%progbits
 4437              		.align	2
 4438              		.global	trackLine
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 97


 4439              		.thumb
 4440              		.thumb_func
 4441              		.type	trackLine, %function
 4442              	trackLine:
 4443              	.LFB97:
 970:.\main.c      **** 
 971:.\main.c      **** void trackLine()
 972:.\main.c      **** {
 4444              		.loc 1 972 0
 4445              		.cfi_startproc
 4446              		@ args = 0, pretend = 0, frame = 0
 4447              		@ frame_needed = 1, uses_anonymous_args = 0
 4448              		@ link register save eliminated.
 4449 0000 80B4     		push	{r7}
 4450              		.cfi_def_cfa_offset 4
 4451              		.cfi_offset 7, -4
 4452 0002 00AF     		add	r7, sp, #0
 4453              		.cfi_def_cfa_register 7
 973:.\main.c      ****  //removed from implementation
 974:.\main.c      **** }
 4454              		.loc 1 974 0
 4455 0004 BD46     		mov	sp, r7
 4456              		.cfi_def_cfa_register 13
 4457              		@ sp needed
 4458 0006 5DF8047B 		ldr	r7, [sp], #4
 4459              		.cfi_restore 7
 4460              		.cfi_def_cfa_offset 0
 4461 000a 7047     		bx	lr
 4462              		.cfi_endproc
 4463              	.LFE97:
 4464              		.size	trackLine, .-trackLine
 4465              		.global	leftTurnCount
 4466              		.bss
 4467              		.align	1
 4468              		.type	leftTurnCount, %object
 4469              		.size	leftTurnCount, 2
 4470              	leftTurnCount:
 4471 28e8 0000     		.space	2
 4472              		.global	rightTurnCount
 4473              		.align	1
 4474              		.type	rightTurnCount, %object
 4475              		.size	rightTurnCount, 2
 4476              	rightTurnCount:
 4477 28ea 0000     		.space	2
 4478              		.section	.text.trackLineZ,"ax",%progbits
 4479              		.align	2
 4480              		.global	trackLineZ
 4481              		.thumb
 4482              		.thumb_func
 4483              		.type	trackLineZ, %function
 4484              	trackLineZ:
 4485              	.LFB98:
 975:.\main.c      **** uint16 leftTurnCount = 0;
 976:.\main.c      **** uint16 rightTurnCount = 0;
 977:.\main.c      **** void trackLineZ()
 978:.\main.c      **** {
 4486              		.loc 1 978 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 98


 4487              		.cfi_startproc
 4488              		@ args = 0, pretend = 0, frame = 8
 4489              		@ frame_needed = 1, uses_anonymous_args = 0
 4490 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4491              		.cfi_def_cfa_offset 24
 4492              		.cfi_offset 4, -24
 4493              		.cfi_offset 5, -20
 4494              		.cfi_offset 7, -16
 4495              		.cfi_offset 8, -12
 4496              		.cfi_offset 9, -8
 4497              		.cfi_offset 14, -4
 4498 0004 82B0     		sub	sp, sp, #8
 4499              		.cfi_def_cfa_offset 32
 4500 0006 00AF     		add	r7, sp, #0
 4501              		.cfi_def_cfa_register 7
 979:.\main.c      ****     //read the value of the three central-front sensors
 980:.\main.c      ****     
 981:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4502              		.loc 1 981 0
 4503 0008 FFF7FEFF 		bl	NLSens_out_Read
 4504 000c 0346     		mov	r3, r0
 4505 000e FB71     		strb	r3, [r7, #7]
 982:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4506              		.loc 1 982 0
 4507 0010 FFF7FEFF 		bl	NRSens_out_Read
 4508 0014 0346     		mov	r3, r0
 4509 0016 BB71     		strb	r3, [r7, #6]
 983:.\main.c      ****     uint8 mid = MSens_out_Read();
 4510              		.loc 1 983 0
 4511 0018 FFF7FEFF 		bl	MSens_out_Read
 4512 001c 0346     		mov	r3, r0
 4513 001e 7B71     		strb	r3, [r7, #5]
 984:.\main.c      ****     
 985:.\main.c      ****         //if only the left one, hard left
 986:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4514              		.loc 1 986 0
 4515 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4516 0022 002B     		cmp	r3, #0
 4517 0024 27D0     		beq	.L242
 4518              		.loc 1 986 0 is_stmt 0 discriminator 1
 4519 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4520 0028 002B     		cmp	r3, #0
 4521 002a 24D1     		bne	.L242
 4522              		.loc 1 986 0 discriminator 2
 4523 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4524 002e 002B     		cmp	r3, #0
 4525 0030 21D1     		bne	.L242
 987:.\main.c      ****     {
 988:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4526              		.loc 1 988 0 is_stmt 1
 4527 0032 454B     		ldr	r3, .L247+8
 4528 0034 D3E90023 		ldrd	r2, [r3]
 4529 0038 1046     		mov	r0, r2
 4530 003a 1946     		mov	r1, r3
 4531 003c 40A3     		adr	r3, .L247
 4532 003e D3E90023 		ldrd	r2, [r3]
 4533 0042 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 99


 4534 0046 0246     		mov	r2, r0
 4535 0048 0B46     		mov	r3, r1
 4536 004a 1446     		mov	r4, r2
 4537 004c 1D46     		mov	r5, r3
 4538 004e 3E4B     		ldr	r3, .L247+8
 4539 0050 D3E90023 		ldrd	r2, [r3]
 4540 0054 9046     		mov	r8, r2
 4541 0056 83F00049 		eor	r9, r3, #-2147483648
 4542 005a 4046     		mov	r0, r8
 4543 005c 4946     		mov	r1, r9
 4544 005e 38A3     		adr	r3, .L247
 4545 0060 D3E90023 		ldrd	r2, [r3]
 4546 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4547 0068 0246     		mov	r2, r0
 4548 006a 0B46     		mov	r3, r1
 4549 006c 2046     		mov	r0, r4
 4550 006e 2946     		mov	r1, r5
 4551 0070 FFF7FEFF 		bl	setSpeed
 4552 0074 5FE0     		b	.L241
 4553              	.L242:
 989:.\main.c      ****     }
 990:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4554              		.loc 1 990 0
 4555 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4556 0078 002B     		cmp	r3, #0
 4557 007a 0ED0     		beq	.L244
 4558              		.loc 1 990 0 is_stmt 0 discriminator 1
 4559 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4560 007e 002B     		cmp	r3, #0
 4561 0080 0BD0     		beq	.L244
 4562              		.loc 1 990 0 discriminator 2
 4563 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4564 0084 002B     		cmp	r3, #0
 4565 0086 08D1     		bne	.L244
 991:.\main.c      ****     {
 992:.\main.c      ****         setSpeed(speed,speed);
 4566              		.loc 1 992 0 is_stmt 1
 4567 0088 2F4B     		ldr	r3, .L247+8
 4568 008a D3E90001 		ldrd	r0, [r3]
 4569 008e 2E4B     		ldr	r3, .L247+8
 4570 0090 D3E90023 		ldrd	r2, [r3]
 4571 0094 FFF7FEFF 		bl	setSpeed
 4572 0098 4DE0     		b	.L241
 4573              	.L244:
 993:.\main.c      ****     }
 994:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4574              		.loc 1 994 0
 4575 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4576 009c 002B     		cmp	r3, #0
 4577 009e 0ED0     		beq	.L245
 4578              		.loc 1 994 0 is_stmt 0 discriminator 1
 4579 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4580 00a2 002B     		cmp	r3, #0
 4581 00a4 0BD0     		beq	.L245
 4582              		.loc 1 994 0 discriminator 2
 4583 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4584 00a8 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 100


 4585 00aa 08D1     		bne	.L245
 995:.\main.c      ****     {
 996:.\main.c      ****         setSpeed(speed ,speed);
 4586              		.loc 1 996 0 is_stmt 1
 4587 00ac 264B     		ldr	r3, .L247+8
 4588 00ae D3E90001 		ldrd	r0, [r3]
 4589 00b2 254B     		ldr	r3, .L247+8
 4590 00b4 D3E90023 		ldrd	r2, [r3]
 4591 00b8 FFF7FEFF 		bl	setSpeed
 4592 00bc 3BE0     		b	.L241
 4593              	.L245:
 997:.\main.c      ****     }
 998:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4594              		.loc 1 998 0
 4595 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4596 00c0 002B     		cmp	r3, #0
 4597 00c2 27D0     		beq	.L246
 4598              		.loc 1 998 0 is_stmt 0 discriminator 1
 4599 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4600 00c6 002B     		cmp	r3, #0
 4601 00c8 24D1     		bne	.L246
 4602              		.loc 1 998 0 discriminator 2
 4603 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4604 00cc 002B     		cmp	r3, #0
 4605 00ce 21D1     		bne	.L246
 999:.\main.c      ****     {
1000:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4606              		.loc 1 1000 0 is_stmt 1
 4607 00d0 1D4B     		ldr	r3, .L247+8
 4608 00d2 D3E90023 		ldrd	r2, [r3]
 4609 00d6 1446     		mov	r4, r2
 4610 00d8 83F00045 		eor	r5, r3, #-2147483648
 4611 00dc 2046     		mov	r0, r4
 4612 00de 2946     		mov	r1, r5
 4613 00e0 17A3     		adr	r3, .L247
 4614 00e2 D3E90023 		ldrd	r2, [r3]
 4615 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4616 00ea 0246     		mov	r2, r0
 4617 00ec 0B46     		mov	r3, r1
 4618 00ee 1446     		mov	r4, r2
 4619 00f0 1D46     		mov	r5, r3
 4620 00f2 154B     		ldr	r3, .L247+8
 4621 00f4 D3E90023 		ldrd	r2, [r3]
 4622 00f8 1046     		mov	r0, r2
 4623 00fa 1946     		mov	r1, r3
 4624 00fc 10A3     		adr	r3, .L247
 4625 00fe D3E90023 		ldrd	r2, [r3]
 4626 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4627 0106 0246     		mov	r2, r0
 4628 0108 0B46     		mov	r3, r1
 4629 010a 2046     		mov	r0, r4
 4630 010c 2946     		mov	r1, r5
 4631 010e FFF7FEFF 		bl	setSpeed
 4632 0112 10E0     		b	.L241
 4633              	.L246:
1001:.\main.c      ****     }
1002:.\main.c      ****     else if (mid && !nr && !nl)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 101


 4634              		.loc 1 1002 0
 4635 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4636 0116 002B     		cmp	r3, #0
 4637 0118 0DD0     		beq	.L241
 4638              		.loc 1 1002 0 is_stmt 0 discriminator 1
 4639 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4640 011c 002B     		cmp	r3, #0
 4641 011e 0AD1     		bne	.L241
 4642              		.loc 1 1002 0 discriminator 2
 4643 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4644 0122 002B     		cmp	r3, #0
 4645 0124 07D1     		bne	.L241
1003:.\main.c      ****     {
1004:.\main.c      ****         setSpeed(speed,speed);
 4646              		.loc 1 1004 0 is_stmt 1
 4647 0126 084B     		ldr	r3, .L247+8
 4648 0128 D3E90001 		ldrd	r0, [r3]
 4649 012c 064B     		ldr	r3, .L247+8
 4650 012e D3E90023 		ldrd	r2, [r3]
 4651 0132 FFF7FEFF 		bl	setSpeed
 4652              	.L241:
1005:.\main.c      ****     }
1006:.\main.c      **** }
 4653              		.loc 1 1006 0
 4654 0136 0837     		adds	r7, r7, #8
 4655              		.cfi_def_cfa_offset 24
 4656 0138 BD46     		mov	sp, r7
 4657              		.cfi_def_cfa_register 13
 4658              		@ sp needed
 4659 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4660              	.L248:
 4661 013e 00BF     		.align	3
 4662              	.L247:
 4663 0140 9A999999 		.word	-1717986918
 4664 0144 9999F93F 		.word	1073322393
 4665 0148 00000000 		.word	speed
 4666              		.cfi_endproc
 4667              	.LFE98:
 4668              		.size	trackLineZ, .-trackLineZ
 4669 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4670              		.align	2
 4671              		.global	trackLineU
 4672              		.thumb
 4673              		.thumb_func
 4674              		.type	trackLineU, %function
 4675              	trackLineU:
 4676              	.LFB99:
1007:.\main.c      **** 
1008:.\main.c      **** 
1009:.\main.c      **** void trackLineU()
1010:.\main.c      **** { 
 4677              		.loc 1 1010 0
 4678              		.cfi_startproc
 4679              		@ args = 0, pretend = 0, frame = 0
 4680              		@ frame_needed = 1, uses_anonymous_args = 0
 4681              		@ link register save eliminated.
 4682 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 102


 4683              		.cfi_def_cfa_offset 4
 4684              		.cfi_offset 7, -4
 4685 0002 00AF     		add	r7, sp, #0
 4686              		.cfi_def_cfa_register 7
1011:.\main.c      **** //removed from final implementation
1012:.\main.c      **** }
 4687              		.loc 1 1012 0
 4688 0004 BD46     		mov	sp, r7
 4689              		.cfi_def_cfa_register 13
 4690              		@ sp needed
 4691 0006 5DF8047B 		ldr	r7, [sp], #4
 4692              		.cfi_restore 7
 4693              		.cfi_def_cfa_offset 0
 4694 000a 7047     		bx	lr
 4695              		.cfi_endproc
 4696              	.LFE99:
 4697              		.size	trackLineU, .-trackLineU
 4698              		.global	__aeabi_fadd
 4699              		.section	.rodata
 4700 00db 00       		.align	2
 4701              	.LC11:
 4702 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4702      65727920 
 4702      566F6C74 
 4702      6167653A 
 4702      2025646D 
 4703              		.section	.text.print_ADC,"ax",%progbits
 4704              		.align	2
 4705              		.global	print_ADC
 4706              		.thumb
 4707              		.thumb_func
 4708              		.type	print_ADC, %function
 4709              	print_ADC:
 4710              	.LFB100:
1013:.\main.c      **** 
1014:.\main.c      **** void print_ADC()
1015:.\main.c      **** {
 4711              		.loc 1 1015 0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 24
 4714              		@ frame_needed = 1, uses_anonymous_args = 0
 4715 0000 80B5     		push	{r7, lr}
 4716              		.cfi_def_cfa_offset 8
 4717              		.cfi_offset 7, -8
 4718              		.cfi_offset 14, -4
 4719 0002 86B0     		sub	sp, sp, #24
 4720              		.cfi_def_cfa_offset 32
 4721 0004 00AF     		add	r7, sp, #0
 4722              		.cfi_def_cfa_register 7
1016:.\main.c      ****    //usbPutString("HII\n");
1017:.\main.c      ****     if(flag_receive_ADC == 1)
 4723              		.loc 1 1017 0
 4724 0006 274B     		ldr	r3, .L253
 4725 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4726 000a 012B     		cmp	r3, #1
 4727 000c 46D1     		bne	.L250
 4728              	.LBB12:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 103


1018:.\main.c      ****     {
1019:.\main.c      ****         //usbPutString("AAA\r\n");
1020:.\main.c      ****         flag_receive_ADC = 0;
 4729              		.loc 1 1020 0
 4730 000e 254B     		ldr	r3, .L253
 4731 0010 0022     		movs	r2, #0
 4732 0012 1A70     		strb	r2, [r3]
1021:.\main.c      ****         
1022:.\main.c      ****        // int8 channel = ADC_
1023:.\main.c      ****         float scalingFactor = 0.972;
 4733              		.loc 1 1023 0
 4734 0014 244B     		ldr	r3, .L253+4
 4735 0016 7B61     		str	r3, [r7, #20]	@ float
1024:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4736              		.loc 1 1024 0
 4737 0018 244B     		ldr	r3, .L253+8
 4738 001a 1B88     		ldrh	r3, [r3]
 4739 001c 1BB2     		sxth	r3, r3
 4740 001e 41F28832 		movw	r2, #5000
 4741 0022 02FB03F3 		mul	r3, r2, r3
 4742 0026 002B     		cmp	r3, #0
 4743 0028 01DA     		bge	.L252
 4744 002a 03F6FF73 		addw	r3, r3, #4095
 4745              	.L252:
 4746 002e 1B13     		asrs	r3, r3, #12
 4747 0030 1846     		mov	r0, r3
 4748 0032 FFF7FEFF 		bl	__aeabi_i2f
 4749 0036 0346     		mov	r3, r0
 4750 0038 1846     		mov	r0, r3
 4751 003a 7969     		ldr	r1, [r7, #20]	@ float
 4752 003c FFF7FEFF 		bl	__aeabi_fmul
 4753 0040 0346     		mov	r3, r0
 4754 0042 1846     		mov	r0, r3
 4755 0044 1946     		mov	r1, r3
 4756 0046 FFF7FEFF 		bl	__aeabi_fadd
 4757 004a 0346     		mov	r3, r0
 4758 004c 1846     		mov	r0, r3
 4759 004e FFF7FEFF 		bl	__aeabi_f2iz
 4760 0052 0346     		mov	r3, r0
 4761 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1025:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4762              		.loc 1 1025 0
 4763 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4764 005a 154B     		ldr	r3, .L253+12
 4765 005c 1B88     		ldrh	r3, [r3]
 4766 005e 1BB2     		sxth	r3, r3
 4767 0060 1A44     		add	r2, r2, r3
 4768 0062 144B     		ldr	r3, .L253+16
 4769 0064 1B88     		ldrh	r3, [r3]
 4770 0066 1BB2     		sxth	r3, r3
 4771 0068 1344     		add	r3, r3, r2
 4772 006a 134A     		ldr	r2, .L253+20
 4773 006c 82FB0312 		smull	r1, r2, r2, r3
 4774 0070 DB17     		asrs	r3, r3, #31
 4775 0072 D31A     		subs	r3, r2, r3
 4776 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1026:.\main.c      ****         prevVoltage2 = prevVoltage;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 104


 4777              		.loc 1 1026 0
 4778 0076 0E4B     		ldr	r3, .L253+12
 4779 0078 1A88     		ldrh	r2, [r3]
 4780 007a 0E4B     		ldr	r3, .L253+16
 4781 007c 1A80     		strh	r2, [r3]	@ movhi
1027:.\main.c      ****         prevVoltage = converted_val;
 4782              		.loc 1 1027 0
 4783 007e 0C4A     		ldr	r2, .L253+12
 4784 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4785 0082 1380     		strh	r3, [r2]	@ movhi
1028:.\main.c      ****         
1029:.\main.c      ****         char result_str[16];
1030:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4786              		.loc 1 1030 0
 4787 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4788 0088 3A46     		mov	r2, r7
 4789 008a 1046     		mov	r0, r2
 4790 008c 0B49     		ldr	r1, .L253+24
 4791 008e 1A46     		mov	r2, r3
 4792 0090 FFF7FEFF 		bl	sprintf
1031:.\main.c      ****         
1032:.\main.c      ****         usbPutString(result_str);
 4793              		.loc 1 1032 0
 4794 0094 3B46     		mov	r3, r7
 4795 0096 1846     		mov	r0, r3
 4796 0098 FFF7FEFF 		bl	usbPutString
 4797              	.L250:
 4798              	.LBE12:
1033:.\main.c      ****     }
1034:.\main.c      **** }
 4799              		.loc 1 1034 0
 4800 009c 1837     		adds	r7, r7, #24
 4801              		.cfi_def_cfa_offset 8
 4802 009e BD46     		mov	sp, r7
 4803              		.cfi_def_cfa_register 13
 4804              		@ sp needed
 4805 00a0 80BD     		pop	{r7, pc}
 4806              	.L254:
 4807 00a2 00BF     		.align	2
 4808              	.L253:
 4809 00a4 00000000 		.word	flag_receive_ADC
 4810 00a8 FED4783F 		.word	1064883454
 4811 00ac 00000000 		.word	adc_result
 4812 00b0 00000000 		.word	prevVoltage
 4813 00b4 00000000 		.word	prevVoltage2
 4814 00b8 56555555 		.word	1431655766
 4815 00bc DC000000 		.word	.LC11
 4816              		.cfi_endproc
 4817              	.LFE100:
 4818              		.size	print_ADC, .-print_ADC
 4819              		.section	.rodata
 4820              		.align	2
 4821              	.LC12:
 4822 00f4 52535349 		.ascii	"RSSI:\000"
 4822      3A00
 4823 00fa 0000     		.align	2
 4824              	.LC13:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 105


 4825 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4825      00
 4826 0101 000000   		.align	2
 4827              	.LC14:
 4828 0104 726F626F 		.ascii	"robot_x:\000"
 4828      745F783A 
 4828      00
 4829 010d 000000   		.align	2
 4830              	.LC15:
 4831 0110 726F626F 		.ascii	"robot_y:\000"
 4831      745F793A 
 4831      00
 4832 0119 000000   		.align	2
 4833              	.LC16:
 4834 011c 726F626F 		.ascii	"robot_dir:\000"
 4834      745F6469 
 4834      723A00
 4835 0127 00       		.section	.text.print_RF,"ax",%progbits
 4836              		.align	2
 4837              		.global	print_RF
 4838              		.thumb
 4839              		.thumb_func
 4840              		.type	print_RF, %function
 4841              	print_RF:
 4842              	.LFB101:
1035:.\main.c      **** 
1036:.\main.c      **** void print_RF()
1037:.\main.c      **** {
 4843              		.loc 1 1037 0
 4844              		.cfi_startproc
 4845              		@ args = 0, pretend = 0, frame = 16
 4846              		@ frame_needed = 1, uses_anonymous_args = 0
 4847 0000 80B5     		push	{r7, lr}
 4848              		.cfi_def_cfa_offset 8
 4849              		.cfi_offset 7, -8
 4850              		.cfi_offset 14, -4
 4851 0002 84B0     		sub	sp, sp, #16
 4852              		.cfi_def_cfa_offset 24
 4853 0004 00AF     		add	r7, sp, #0
 4854              		.cfi_def_cfa_register 7
1038:.\main.c      ****     if(flag_print_rf == 1)
 4855              		.loc 1 1038 0
 4856 0006 254B     		ldr	r3, .L257
 4857 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4858 000a 012B     		cmp	r3, #1
 4859 000c 42D1     		bne	.L255
 4860              	.LBB13:
1039:.\main.c      ****     {
1040:.\main.c      ****         char printString[16];
1041:.\main.c      ****         flag_print_rf = 0;
 4861              		.loc 1 1041 0
 4862 000e 234B     		ldr	r3, .L257
 4863 0010 0022     		movs	r2, #0
 4864 0012 1A70     		strb	r2, [r3]
1042:.\main.c      ****         usbPutString("RSSI:");
 4865              		.loc 1 1042 0
 4866 0014 2248     		ldr	r0, .L257+4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 106


 4867 0016 FFF7FEFF 		bl	usbPutString
1043:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4868              		.loc 1 1043 0
 4869 001a 224B     		ldr	r3, .L257+8
 4870 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4871 001e 5BB2     		sxtb	r3, r3
 4872 0020 3A46     		mov	r2, r7
 4873 0022 1046     		mov	r0, r2
 4874 0024 2049     		ldr	r1, .L257+12
 4875 0026 1A46     		mov	r2, r3
 4876 0028 FFF7FEFF 		bl	sprintf
1044:.\main.c      ****         usbPutString(printString);
 4877              		.loc 1 1044 0
 4878 002c 3B46     		mov	r3, r7
 4879 002e 1846     		mov	r0, r3
 4880 0030 FFF7FEFF 		bl	usbPutString
1045:.\main.c      ****         usbPutString("robot_x:");
 4881              		.loc 1 1045 0
 4882 0034 1D48     		ldr	r0, .L257+16
 4883 0036 FFF7FEFF 		bl	usbPutString
1046:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4884              		.loc 1 1046 0
 4885 003a 1A4B     		ldr	r3, .L257+8
 4886 003c 5B88     		ldrh	r3, [r3, #2]
 4887 003e 1BB2     		sxth	r3, r3
 4888 0040 3A46     		mov	r2, r7
 4889 0042 1046     		mov	r0, r2
 4890 0044 1849     		ldr	r1, .L257+12
 4891 0046 1A46     		mov	r2, r3
 4892 0048 FFF7FEFF 		bl	sprintf
1047:.\main.c      ****         usbPutString(printString);
 4893              		.loc 1 1047 0
 4894 004c 3B46     		mov	r3, r7
 4895 004e 1846     		mov	r0, r3
 4896 0050 FFF7FEFF 		bl	usbPutString
1048:.\main.c      ****         usbPutString("robot_y:");
 4897              		.loc 1 1048 0
 4898 0054 1648     		ldr	r0, .L257+20
 4899 0056 FFF7FEFF 		bl	usbPutString
1049:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4900              		.loc 1 1049 0
 4901 005a 124B     		ldr	r3, .L257+8
 4902 005c 9B88     		ldrh	r3, [r3, #4]
 4903 005e 1BB2     		sxth	r3, r3
 4904 0060 3A46     		mov	r2, r7
 4905 0062 1046     		mov	r0, r2
 4906 0064 1049     		ldr	r1, .L257+12
 4907 0066 1A46     		mov	r2, r3
 4908 0068 FFF7FEFF 		bl	sprintf
1050:.\main.c      ****         usbPutString(printString);
 4909              		.loc 1 1050 0
 4910 006c 3B46     		mov	r3, r7
 4911 006e 1846     		mov	r0, r3
 4912 0070 FFF7FEFF 		bl	usbPutString
1051:.\main.c      ****         usbPutString("robot_dir:");
 4913              		.loc 1 1051 0
 4914 0074 0F48     		ldr	r0, .L257+24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 107


 4915 0076 FFF7FEFF 		bl	usbPutString
1052:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4916              		.loc 1 1052 0
 4917 007a 0A4B     		ldr	r3, .L257+8
 4918 007c DB88     		ldrh	r3, [r3, #6]
 4919 007e 1BB2     		sxth	r3, r3
 4920 0080 3A46     		mov	r2, r7
 4921 0082 1046     		mov	r0, r2
 4922 0084 0849     		ldr	r1, .L257+12
 4923 0086 1A46     		mov	r2, r3
 4924 0088 FFF7FEFF 		bl	sprintf
1053:.\main.c      ****         usbPutString(printString);
 4925              		.loc 1 1053 0
 4926 008c 3B46     		mov	r3, r7
 4927 008e 1846     		mov	r0, r3
 4928 0090 FFF7FEFF 		bl	usbPutString
 4929              	.L255:
 4930              	.LBE13:
1054:.\main.c      ****     }
1055:.\main.c      **** }
 4931              		.loc 1 1055 0
 4932 0094 1037     		adds	r7, r7, #16
 4933              		.cfi_def_cfa_offset 8
 4934 0096 BD46     		mov	sp, r7
 4935              		.cfi_def_cfa_register 13
 4936              		@ sp needed
 4937 0098 80BD     		pop	{r7, pc}
 4938              	.L258:
 4939 009a 00BF     		.align	2
 4940              	.L257:
 4941 009c 00000000 		.word	flag_print_rf
 4942 00a0 F4000000 		.word	.LC12
 4943 00a4 00000000 		.word	system_state
 4944 00a8 FC000000 		.word	.LC13
 4945 00ac 04010000 		.word	.LC14
 4946 00b0 10010000 		.word	.LC15
 4947 00b4 1C010000 		.word	.LC16
 4948              		.cfi_endproc
 4949              	.LFE101:
 4950              		.size	print_RF, .-print_RF
 4951              		.section	.text.readFrontSensors,"ax",%progbits
 4952              		.align	2
 4953              		.global	readFrontSensors
 4954              		.thumb
 4955              		.thumb_func
 4956              		.type	readFrontSensors, %function
 4957              	readFrontSensors:
 4958              	.LFB102:
1056:.\main.c      **** 
1057:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1058:.\main.c      **** {
 4959              		.loc 1 1058 0
 4960              		.cfi_startproc
 4961              		@ args = 0, pretend = 0, frame = 8
 4962              		@ frame_needed = 1, uses_anonymous_args = 0
 4963 0000 90B5     		push	{r4, r7, lr}
 4964              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 108


 4965              		.cfi_offset 4, -12
 4966              		.cfi_offset 7, -8
 4967              		.cfi_offset 14, -4
 4968 0002 83B0     		sub	sp, sp, #12
 4969              		.cfi_def_cfa_offset 24
 4970 0004 00AF     		add	r7, sp, #0
 4971              		.cfi_def_cfa_register 7
 4972 0006 7860     		str	r0, [r7, #4]
1059:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4973              		.loc 1 1059 0
 4974 0008 FFF7FEFF 		bl	FLSens_out_Read
 4975 000c 0346     		mov	r3, r0
 4976 000e 1A46     		mov	r2, r3
 4977 0010 7B68     		ldr	r3, [r7, #4]
 4978 0012 1A70     		strb	r2, [r3]
1060:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4979              		.loc 1 1060 0
 4980 0014 7B68     		ldr	r3, [r7, #4]
 4981 0016 5C1C     		adds	r4, r3, #1
 4982 0018 FFF7FEFF 		bl	NLSens_out_Read
 4983 001c 0346     		mov	r3, r0
 4984 001e 2370     		strb	r3, [r4]
1061:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4985              		.loc 1 1061 0
 4986 0020 7B68     		ldr	r3, [r7, #4]
 4987 0022 9C1C     		adds	r4, r3, #2
 4988 0024 FFF7FEFF 		bl	MSens_out_Read
 4989 0028 0346     		mov	r3, r0
 4990 002a 2370     		strb	r3, [r4]
1062:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4991              		.loc 1 1062 0
 4992 002c 7B68     		ldr	r3, [r7, #4]
 4993 002e DC1C     		adds	r4, r3, #3
 4994 0030 FFF7FEFF 		bl	NRSens_out_Read
 4995 0034 0346     		mov	r3, r0
 4996 0036 2370     		strb	r3, [r4]
1063:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4997              		.loc 1 1063 0
 4998 0038 7B68     		ldr	r3, [r7, #4]
 4999 003a 1C1D     		adds	r4, r3, #4
 5000 003c FFF7FEFF 		bl	FRSens_out_Read
 5001 0040 0346     		mov	r3, r0
 5002 0042 2370     		strb	r3, [r4]
1064:.\main.c      **** }
 5003              		.loc 1 1064 0
 5004 0044 0C37     		adds	r7, r7, #12
 5005              		.cfi_def_cfa_offset 12
 5006 0046 BD46     		mov	sp, r7
 5007              		.cfi_def_cfa_register 13
 5008              		@ sp needed
 5009 0048 90BD     		pop	{r4, r7, pc}
 5010              		.cfi_endproc
 5011              	.LFE102:
 5012              		.size	readFrontSensors, .-readFrontSensors
 5013 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5014              		.align	2
 5015              		.global	usbPutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 109


 5016              		.thumb
 5017              		.thumb_func
 5018              		.type	usbPutString, %function
 5019              	usbPutString:
 5020              	.LFB103:
1065:.\main.c      **** 
1066:.\main.c      **** 
1067:.\main.c      **** //* ========================================
1068:.\main.c      **** void usbPutString(char *s)
1069:.\main.c      **** {
 5021              		.loc 1 1069 0
 5022              		.cfi_startproc
 5023              		@ args = 0, pretend = 0, frame = 16
 5024              		@ frame_needed = 1, uses_anonymous_args = 0
 5025 0000 80B5     		push	{r7, lr}
 5026              		.cfi_def_cfa_offset 8
 5027              		.cfi_offset 7, -8
 5028              		.cfi_offset 14, -4
 5029 0002 84B0     		sub	sp, sp, #16
 5030              		.cfi_def_cfa_offset 24
 5031 0004 00AF     		add	r7, sp, #0
 5032              		.cfi_def_cfa_register 7
 5033 0006 7860     		str	r0, [r7, #4]
1070:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1071:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1072:.\main.c      **** //  length to 62 char (63rd char is a '!')
1073:.\main.c      ****     if (USE_USB && portOpen)
 5034              		.loc 1 1073 0
 5035 0008 154B     		ldr	r3, .L264
 5036 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5037 000c 002B     		cmp	r3, #0
 5038 000e 23D0     		beq	.L260
 5039              	.LBB14:
1074:.\main.c      ****     {
1075:.\main.c      ****             uint32 cnt = 0;
 5040              		.loc 1 1075 0
 5041 0010 0023     		movs	r3, #0
 5042 0012 FB60     		str	r3, [r7, #12]
1076:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5043              		.loc 1 1076 0
 5044 0014 0AE0     		b	.L262
 5045              	.L263:
1077:.\main.c      ****             {
1078:.\main.c      ****                 cnt++;
 5046              		.loc 1 1078 0
 5047 0016 FB68     		ldr	r3, [r7, #12]
 5048 0018 0133     		adds	r3, r3, #1
 5049 001a FB60     		str	r3, [r7, #12]
1079:.\main.c      ****                 if(cnt == 3000000){
 5050              		.loc 1 1079 0
 5051 001c FB68     		ldr	r3, [r7, #12]
 5052 001e 114A     		ldr	r2, .L264+4
 5053 0020 9342     		cmp	r3, r2
 5054 0022 03D1     		bne	.L262
1080:.\main.c      ****                     portOpen = 0;
 5055              		.loc 1 1080 0
 5056 0024 0E4B     		ldr	r3, .L264
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 110


 5057 0026 0022     		movs	r2, #0
 5058 0028 1A70     		strb	r2, [r3]
1081:.\main.c      ****                     return;
 5059              		.loc 1 1081 0
 5060 002a 15E0     		b	.L260
 5061              	.L262:
1076:.\main.c      ****             {
 5062              		.loc 1 1076 0
 5063 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5064 0030 0346     		mov	r3, r0
 5065 0032 002B     		cmp	r3, #0
 5066 0034 EFD0     		beq	.L263
1082:.\main.c      ****                 }
1083:.\main.c      ****             }
1084:.\main.c      ****             s[63]='\0';
 5067              		.loc 1 1084 0
 5068 0036 7B68     		ldr	r3, [r7, #4]
 5069 0038 3F33     		adds	r3, r3, #63
 5070 003a 0022     		movs	r2, #0
 5071 003c 1A70     		strb	r2, [r3]
1085:.\main.c      ****             s[62]='!';
 5072              		.loc 1 1085 0
 5073 003e 7B68     		ldr	r3, [r7, #4]
 5074 0040 3E33     		adds	r3, r3, #62
 5075 0042 2122     		movs	r2, #33
 5076 0044 1A70     		strb	r2, [r3]
1086:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5077              		.loc 1 1086 0
 5078 0046 7868     		ldr	r0, [r7, #4]
 5079 0048 FFF7FEFF 		bl	strlen
 5080 004c 0346     		mov	r3, r0
 5081 004e 9BB2     		uxth	r3, r3
 5082 0050 7868     		ldr	r0, [r7, #4]
 5083 0052 1946     		mov	r1, r3
 5084 0054 FFF7FEFF 		bl	USBUART_PutData
 5085              	.L260:
 5086              	.LBE14:
1087:.\main.c      ****     }
1088:.\main.c      **** }
 5087              		.loc 1 1088 0
 5088 0058 1037     		adds	r7, r7, #16
 5089              		.cfi_def_cfa_offset 8
 5090 005a BD46     		mov	sp, r7
 5091              		.cfi_def_cfa_register 13
 5092              		@ sp needed
 5093 005c 80BD     		pop	{r7, pc}
 5094              	.L265:
 5095 005e 00BF     		.align	2
 5096              	.L264:
 5097 0060 00000000 		.word	portOpen
 5098 0064 C0C62D00 		.word	3000000
 5099              		.cfi_endproc
 5100              	.LFE103:
 5101              		.size	usbPutString, .-usbPutString
 5102              		.section	.text.usbPutChar,"ax",%progbits
 5103              		.align	2
 5104              		.global	usbPutChar
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 111


 5105              		.thumb
 5106              		.thumb_func
 5107              		.type	usbPutChar, %function
 5108              	usbPutChar:
 5109              	.LFB104:
1089:.\main.c      **** //* ========================================
1090:.\main.c      **** void usbPutChar(char c)
1091:.\main.c      **** {
 5110              		.loc 1 1091 0
 5111              		.cfi_startproc
 5112              		@ args = 0, pretend = 0, frame = 16
 5113              		@ frame_needed = 1, uses_anonymous_args = 0
 5114 0000 80B5     		push	{r7, lr}
 5115              		.cfi_def_cfa_offset 8
 5116              		.cfi_offset 7, -8
 5117              		.cfi_offset 14, -4
 5118 0002 84B0     		sub	sp, sp, #16
 5119              		.cfi_def_cfa_offset 24
 5120 0004 00AF     		add	r7, sp, #0
 5121              		.cfi_def_cfa_register 7
 5122 0006 0346     		mov	r3, r0
 5123 0008 FB71     		strb	r3, [r7, #7]
1092:.\main.c      ****     if (USE_USB && portOpen)    
 5124              		.loc 1 1092 0
 5125 000a 0F4B     		ldr	r3, .L270
 5126 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5127 000e 002B     		cmp	r3, #0
 5128 0010 16D0     		beq	.L266
 5129              	.LBB15:
1093:.\main.c      ****     {    
1094:.\main.c      ****         uint32 cnt = 0;
 5130              		.loc 1 1094 0
 5131 0012 0023     		movs	r3, #0
 5132 0014 FB60     		str	r3, [r7, #12]
1095:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5133              		.loc 1 1095 0
 5134 0016 0AE0     		b	.L268
 5135              	.L269:
1096:.\main.c      ****             cnt++;
 5136              		.loc 1 1096 0
 5137 0018 FB68     		ldr	r3, [r7, #12]
 5138 001a 0133     		adds	r3, r3, #1
 5139 001c FB60     		str	r3, [r7, #12]
1097:.\main.c      ****             if(cnt == 3000000){
 5140              		.loc 1 1097 0
 5141 001e FB68     		ldr	r3, [r7, #12]
 5142 0020 0A4A     		ldr	r2, .L270+4
 5143 0022 9342     		cmp	r3, r2
 5144 0024 03D1     		bne	.L268
1098:.\main.c      ****                 portOpen = 0;
 5145              		.loc 1 1098 0
 5146 0026 084B     		ldr	r3, .L270
 5147 0028 0022     		movs	r2, #0
 5148 002a 1A70     		strb	r2, [r3]
1099:.\main.c      ****                 return;
 5149              		.loc 1 1099 0
 5150 002c 08E0     		b	.L266
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 112


 5151              	.L268:
1095:.\main.c      ****             cnt++;
 5152              		.loc 1 1095 0
 5153 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5154 0032 0346     		mov	r3, r0
 5155 0034 002B     		cmp	r3, #0
 5156 0036 EFD0     		beq	.L269
1100:.\main.c      ****             }
1101:.\main.c      ****         }
1102:.\main.c      ****         USBUART_PutChar(c);
 5157              		.loc 1 1102 0
 5158 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5159 003a 1846     		mov	r0, r3
 5160 003c FFF7FEFF 		bl	USBUART_PutChar
 5161              	.L266:
 5162              	.LBE15:
1103:.\main.c      ****     }    
1104:.\main.c      **** }
 5163              		.loc 1 1104 0
 5164 0040 1037     		adds	r7, r7, #16
 5165              		.cfi_def_cfa_offset 8
 5166 0042 BD46     		mov	sp, r7
 5167              		.cfi_def_cfa_register 13
 5168              		@ sp needed
 5169 0044 80BD     		pop	{r7, pc}
 5170              	.L271:
 5171 0046 00BF     		.align	2
 5172              	.L270:
 5173 0048 00000000 		.word	portOpen
 5174 004c C0C62D00 		.word	3000000
 5175              		.cfi_endproc
 5176              	.LFE104:
 5177              		.size	usbPutChar, .-usbPutChar
 5178              		.section	.text.uart_set_PWM,"ax",%progbits
 5179              		.align	2
 5180              		.global	uart_set_PWM
 5181              		.thumb
 5182              		.thumb_func
 5183              		.type	uart_set_PWM, %function
 5184              	uart_set_PWM:
 5185              	.LFB105:
1105:.\main.c      **** //* ========================================
1106:.\main.c      **** 
1107:.\main.c      **** void uart_set_PWM()
1108:.\main.c      **** {
 5186              		.loc 1 1108 0
 5187              		.cfi_startproc
 5188              		@ args = 0, pretend = 0, frame = 0
 5189              		@ frame_needed = 1, uses_anonymous_args = 0
 5190              		@ link register save eliminated.
 5191 0000 80B4     		push	{r7}
 5192              		.cfi_def_cfa_offset 4
 5193              		.cfi_offset 7, -4
 5194 0002 00AF     		add	r7, sp, #0
 5195              		.cfi_def_cfa_register 7
1109:.\main.c      ****     //removed from final implementation
1110:.\main.c      **** }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 113


 5196              		.loc 1 1110 0
 5197 0004 BD46     		mov	sp, r7
 5198              		.cfi_def_cfa_register 13
 5199              		@ sp needed
 5200 0006 5DF8047B 		ldr	r7, [sp], #4
 5201              		.cfi_restore 7
 5202              		.cfi_def_cfa_offset 0
 5203 000a 7047     		bx	lr
 5204              		.cfi_endproc
 5205              	.LFE105:
 5206              		.size	uart_set_PWM, .-uart_set_PWM
 5207              		.text
 5208              	.Letext0:
 5209              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5210              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5211              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5212              		.file 5 ".\\vars.h"
 5213              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5214              		.file 7 ".\\pathfinder.h"
 5215              		.section	.debug_info,"",%progbits
 5216              	.Ldebug_info0:
 5217 0000 850E0000 		.4byte	0xe85
 5218 0004 0400     		.2byte	0x4
 5219 0006 00000000 		.4byte	.Ldebug_abbrev0
 5220 000a 04       		.byte	0x4
 5221 000b 01       		.uleb128 0x1
 5222 000c B6040000 		.4byte	.LASF197
 5223 0010 01       		.byte	0x1
 5224 0011 94090000 		.4byte	.LASF198
 5225 0015 1C000000 		.4byte	.LASF199
 5226 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5227 001d 00000000 		.4byte	0
 5228 0021 00000000 		.4byte	.Ldebug_line0
 5229 0025 02       		.uleb128 0x2
 5230 0026 01       		.byte	0x1
 5231 0027 06       		.byte	0x6
 5232 0028 CE080000 		.4byte	.LASF0
 5233 002c 02       		.uleb128 0x2
 5234 002d 01       		.byte	0x1
 5235 002e 08       		.byte	0x8
 5236 002f 0B080000 		.4byte	.LASF1
 5237 0033 02       		.uleb128 0x2
 5238 0034 02       		.byte	0x2
 5239 0035 05       		.byte	0x5
 5240 0036 6C060000 		.4byte	.LASF2
 5241 003a 02       		.uleb128 0x2
 5242 003b 02       		.byte	0x2
 5243 003c 07       		.byte	0x7
 5244 003d DA080000 		.4byte	.LASF3
 5245 0041 03       		.uleb128 0x3
 5246 0042 D7000000 		.4byte	.LASF5
 5247 0046 02       		.byte	0x2
 5248 0047 3F       		.byte	0x3f
 5249 0048 4C000000 		.4byte	0x4c
 5250 004c 02       		.uleb128 0x2
 5251 004d 04       		.byte	0x4
 5252 004e 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 114


 5253 004f A0060000 		.4byte	.LASF4
 5254 0053 03       		.uleb128 0x3
 5255 0054 19080000 		.4byte	.LASF6
 5256 0058 02       		.byte	0x2
 5257 0059 41       		.byte	0x41
 5258 005a 5E000000 		.4byte	0x5e
 5259 005e 02       		.uleb128 0x2
 5260 005f 04       		.byte	0x4
 5261 0060 07       		.byte	0x7
 5262 0061 A4070000 		.4byte	.LASF7
 5263 0065 02       		.uleb128 0x2
 5264 0066 08       		.byte	0x8
 5265 0067 05       		.byte	0x5
 5266 0068 80040000 		.4byte	.LASF8
 5267 006c 02       		.uleb128 0x2
 5268 006d 08       		.byte	0x8
 5269 006e 07       		.byte	0x7
 5270 006f 8E020000 		.4byte	.LASF9
 5271 0073 04       		.uleb128 0x4
 5272 0074 04       		.byte	0x4
 5273 0075 05       		.byte	0x5
 5274 0076 696E7400 		.ascii	"int\000"
 5275 007a 02       		.uleb128 0x2
 5276 007b 04       		.byte	0x4
 5277 007c 07       		.byte	0x7
 5278 007d BF000000 		.4byte	.LASF10
 5279 0081 02       		.uleb128 0x2
 5280 0082 04       		.byte	0x4
 5281 0083 07       		.byte	0x7
 5282 0084 9B070000 		.4byte	.LASF11
 5283 0088 05       		.uleb128 0x5
 5284 0089 04       		.byte	0x4
 5285 008a 8E000000 		.4byte	0x8e
 5286 008e 02       		.uleb128 0x2
 5287 008f 01       		.byte	0x1
 5288 0090 08       		.byte	0x8
 5289 0091 BD030000 		.4byte	.LASF12
 5290 0095 03       		.uleb128 0x3
 5291 0096 C2070000 		.4byte	.LASF13
 5292 009a 03       		.byte	0x3
 5293 009b 2C       		.byte	0x2c
 5294 009c 41000000 		.4byte	0x41
 5295 00a0 03       		.uleb128 0x3
 5296 00a1 0E020000 		.4byte	.LASF14
 5297 00a5 03       		.byte	0x3
 5298 00a6 2D       		.byte	0x2d
 5299 00a7 53000000 		.4byte	0x53
 5300 00ab 06       		.uleb128 0x6
 5301 00ac 21090000 		.4byte	.LASF15
 5302 00b0 04       		.byte	0x4
 5303 00b1 9201     		.2byte	0x192
 5304 00b3 2C000000 		.4byte	0x2c
 5305 00b7 06       		.uleb128 0x6
 5306 00b8 10040000 		.4byte	.LASF16
 5307 00bc 04       		.byte	0x4
 5308 00bd 9301     		.2byte	0x193
 5309 00bf 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 115


 5310 00c3 06       		.uleb128 0x6
 5311 00c4 87050000 		.4byte	.LASF17
 5312 00c8 04       		.byte	0x4
 5313 00c9 9401     		.2byte	0x194
 5314 00cb 5E000000 		.4byte	0x5e
 5315 00cf 06       		.uleb128 0x6
 5316 00d0 17040000 		.4byte	.LASF18
 5317 00d4 04       		.byte	0x4
 5318 00d5 9501     		.2byte	0x195
 5319 00d7 25000000 		.4byte	0x25
 5320 00db 06       		.uleb128 0x6
 5321 00dc E1000000 		.4byte	.LASF19
 5322 00e0 04       		.byte	0x4
 5323 00e1 9601     		.2byte	0x196
 5324 00e3 33000000 		.4byte	0x33
 5325 00e7 02       		.uleb128 0x2
 5326 00e8 04       		.byte	0x4
 5327 00e9 04       		.byte	0x4
 5328 00ea 2E020000 		.4byte	.LASF20
 5329 00ee 02       		.uleb128 0x2
 5330 00ef 08       		.byte	0x8
 5331 00f0 04       		.byte	0x4
 5332 00f1 27090000 		.4byte	.LASF21
 5333 00f5 07       		.uleb128 0x7
 5334 00f6 A0000000 		.4byte	0xa0
 5335 00fa 05010000 		.4byte	0x105
 5336 00fe 08       		.uleb128 0x8
 5337 00ff 81000000 		.4byte	0x81
 5338 0103 01       		.byte	0x1
 5339 0104 00       		.byte	0
 5340 0105 02       		.uleb128 0x2
 5341 0106 08       		.byte	0x8
 5342 0107 04       		.byte	0x4
 5343 0108 03060000 		.4byte	.LASF22
 5344 010c 09       		.uleb128 0x9
 5345 010d 66080000 		.4byte	.LASF31
 5346 0111 01       		.byte	0x1
 5347 0112 05       		.byte	0x5
 5348 0113 61       		.byte	0x61
 5349 0114 49010000 		.4byte	0x149
 5350 0118 0A       		.uleb128 0xa
 5351 0119 4D020000 		.4byte	.LASF23
 5352 011d 00       		.sleb128 0
 5353 011e 0A       		.uleb128 0xa
 5354 011f F4000000 		.4byte	.LASF24
 5355 0123 01       		.sleb128 1
 5356 0124 0A       		.uleb128 0xa
 5357 0125 5B000000 		.4byte	.LASF25
 5358 0129 02       		.sleb128 2
 5359 012a 0A       		.uleb128 0xa
 5360 012b F2050000 		.4byte	.LASF26
 5361 012f 03       		.sleb128 3
 5362 0130 0A       		.uleb128 0xa
 5363 0131 1F010000 		.4byte	.LASF27
 5364 0135 04       		.sleb128 4
 5365 0136 0A       		.uleb128 0xa
 5366 0137 F7010000 		.4byte	.LASF28
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 116


 5367 013b 05       		.sleb128 5
 5368 013c 0A       		.uleb128 0xa
 5369 013d 16070000 		.4byte	.LASF29
 5370 0141 06       		.sleb128 6
 5371 0142 0A       		.uleb128 0xa
 5372 0143 61090000 		.4byte	.LASF30
 5373 0147 07       		.sleb128 7
 5374 0148 00       		.byte	0
 5375 0149 09       		.uleb128 0x9
 5376 014a 5A010000 		.4byte	.LASF32
 5377 014e 01       		.byte	0x1
 5378 014f 05       		.byte	0x5
 5379 0150 62       		.byte	0x62
 5380 0151 86010000 		.4byte	0x186
 5381 0155 0A       		.uleb128 0xa
 5382 0156 E8060000 		.4byte	.LASF33
 5383 015a 00       		.sleb128 0
 5384 015b 0A       		.uleb128 0xa
 5385 015c 47040000 		.4byte	.LASF34
 5386 0160 01       		.sleb128 1
 5387 0161 0A       		.uleb128 0xa
 5388 0162 B7060000 		.4byte	.LASF35
 5389 0166 02       		.sleb128 2
 5390 0167 0A       		.uleb128 0xa
 5391 0168 B1010000 		.4byte	.LASF36
 5392 016c 03       		.sleb128 3
 5393 016d 0A       		.uleb128 0xa
 5394 016e FF080000 		.4byte	.LASF37
 5395 0172 04       		.sleb128 4
 5396 0173 0A       		.uleb128 0xa
 5397 0174 3F090000 		.4byte	.LASF38
 5398 0178 05       		.sleb128 5
 5399 0179 0A       		.uleb128 0xa
 5400 017a 70000000 		.4byte	.LASF39
 5401 017e 06       		.sleb128 6
 5402 017f 0A       		.uleb128 0xa
 5403 0180 09070000 		.4byte	.LASF40
 5404 0184 07       		.sleb128 7
 5405 0185 00       		.byte	0
 5406 0186 0B       		.uleb128 0xb
 5407 0187 A7050000 		.4byte	.LASF200
 5408 018b 20       		.byte	0x20
 5409 018c 05       		.byte	0x5
 5410 018d 68       		.byte	0x68
 5411 018e 5F020000 		.4byte	0x25f
 5412 0192 0C       		.uleb128 0xc
 5413 0193 C5050000 		.4byte	.LASF41
 5414 0197 05       		.byte	0x5
 5415 0198 69       		.byte	0x69
 5416 0199 CF000000 		.4byte	0xcf
 5417 019d 00       		.byte	0
 5418 019e 0C       		.uleb128 0xc
 5419 019f 47020000 		.4byte	.LASF42
 5420 01a3 05       		.byte	0x5
 5421 01a4 6A       		.byte	0x6a
 5422 01a5 AB000000 		.4byte	0xab
 5423 01a9 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 117


 5424 01aa 0C       		.uleb128 0xc
 5425 01ab E3070000 		.4byte	.LASF43
 5426 01af 05       		.byte	0x5
 5427 01b0 6B       		.byte	0x6b
 5428 01b1 DB000000 		.4byte	0xdb
 5429 01b5 02       		.byte	0x2
 5430 01b6 0C       		.uleb128 0xc
 5431 01b7 91030000 		.4byte	.LASF44
 5432 01bb 05       		.byte	0x5
 5433 01bc 6C       		.byte	0x6c
 5434 01bd DB000000 		.4byte	0xdb
 5435 01c1 04       		.byte	0x4
 5436 01c2 0C       		.uleb128 0xc
 5437 01c3 ED080000 		.4byte	.LASF45
 5438 01c7 05       		.byte	0x5
 5439 01c8 6D       		.byte	0x6d
 5440 01c9 DB000000 		.4byte	0xdb
 5441 01cd 06       		.byte	0x6
 5442 01ce 0C       		.uleb128 0xc
 5443 01cf 67090000 		.4byte	.LASF46
 5444 01d3 05       		.byte	0x5
 5445 01d4 6E       		.byte	0x6e
 5446 01d5 DB000000 		.4byte	0xdb
 5447 01d9 08       		.byte	0x8
 5448 01da 0C       		.uleb128 0xc
 5449 01db 4D050000 		.4byte	.LASF47
 5450 01df 05       		.byte	0x5
 5451 01e0 6F       		.byte	0x6f
 5452 01e1 DB000000 		.4byte	0xdb
 5453 01e5 0A       		.byte	0xa
 5454 01e6 0C       		.uleb128 0xc
 5455 01e7 C2030000 		.4byte	.LASF48
 5456 01eb 05       		.byte	0x5
 5457 01ec 70       		.byte	0x70
 5458 01ed DB000000 		.4byte	0xdb
 5459 01f1 0C       		.byte	0xc
 5460 01f2 0C       		.uleb128 0xc
 5461 01f3 D4050000 		.4byte	.LASF49
 5462 01f7 05       		.byte	0x5
 5463 01f8 71       		.byte	0x71
 5464 01f9 DB000000 		.4byte	0xdb
 5465 01fd 0E       		.byte	0xe
 5466 01fe 0C       		.uleb128 0xc
 5467 01ff 9B040000 		.4byte	.LASF50
 5468 0203 05       		.byte	0x5
 5469 0204 72       		.byte	0x72
 5470 0205 DB000000 		.4byte	0xdb
 5471 0209 10       		.byte	0x10
 5472 020a 0C       		.uleb128 0xc
 5473 020b 5B070000 		.4byte	.LASF51
 5474 020f 05       		.byte	0x5
 5475 0210 73       		.byte	0x73
 5476 0211 DB000000 		.4byte	0xdb
 5477 0215 12       		.byte	0x12
 5478 0216 0C       		.uleb128 0xc
 5479 0217 8B090000 		.4byte	.LASF52
 5480 021b 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 118


 5481 021c 74       		.byte	0x74
 5482 021d DB000000 		.4byte	0xdb
 5483 0221 14       		.byte	0x14
 5484 0222 0C       		.uleb128 0xc
 5485 0223 29040000 		.4byte	.LASF53
 5486 0227 05       		.byte	0x5
 5487 0228 75       		.byte	0x75
 5488 0229 DB000000 		.4byte	0xdb
 5489 022d 16       		.byte	0x16
 5490 022e 0C       		.uleb128 0xc
 5491 022f 52010000 		.4byte	.LASF54
 5492 0233 05       		.byte	0x5
 5493 0234 76       		.byte	0x76
 5494 0235 DB000000 		.4byte	0xdb
 5495 0239 18       		.byte	0x18
 5496 023a 0C       		.uleb128 0xc
 5497 023b FD030000 		.4byte	.LASF55
 5498 023f 05       		.byte	0x5
 5499 0240 77       		.byte	0x77
 5500 0241 DB000000 		.4byte	0xdb
 5501 0245 1A       		.byte	0x1a
 5502 0246 0C       		.uleb128 0xc
 5503 0247 44050000 		.4byte	.LASF56
 5504 024b 05       		.byte	0x5
 5505 024c 78       		.byte	0x78
 5506 024d DB000000 		.4byte	0xdb
 5507 0251 1C       		.byte	0x1c
 5508 0252 0C       		.uleb128 0xc
 5509 0253 17020000 		.4byte	.LASF57
 5510 0257 05       		.byte	0x5
 5511 0258 79       		.byte	0x79
 5512 0259 DB000000 		.4byte	0xdb
 5513 025d 1E       		.byte	0x1e
 5514 025e 00       		.byte	0
 5515 025f 0D       		.uleb128 0xd
 5516 0260 0E090000 		.4byte	.LASF58
 5517 0264 01       		.byte	0x1
 5518 0265 61       		.byte	0x61
 5519 0266 00000000 		.4byte	.LFB63
 5520 026a 0C000000 		.4byte	.LFE63-.LFB63
 5521 026e 01       		.uleb128 0x1
 5522 026f 9C       		.byte	0x9c
 5523 0270 0E       		.uleb128 0xe
 5524 0271 63070000 		.4byte	.LASF59
 5525 0275 01       		.byte	0x1
 5526 0276 67       		.byte	0x67
 5527 0277 00000000 		.4byte	.LFB64
 5528 027b 2C000000 		.4byte	.LFE64-.LFB64
 5529 027f 01       		.uleb128 0x1
 5530 0280 9C       		.byte	0x9c
 5531 0281 0E       		.uleb128 0xe
 5532 0282 24020000 		.4byte	.LASF60
 5533 0286 01       		.byte	0x1
 5534 0287 70       		.byte	0x70
 5535 0288 00000000 		.4byte	.LFB65
 5536 028c A4010000 		.4byte	.LFE65-.LFB65
 5537 0290 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 119


 5538 0291 9C       		.byte	0x9c
 5539 0292 0F       		.uleb128 0xf
 5540 0293 BE020000 		.4byte	.LASF66
 5541 0297 01       		.byte	0x1
 5542 0298 95       		.byte	0x95
 5543 0299 00000000 		.4byte	.LFB66
 5544 029d 14010000 		.4byte	.LFE66-.LFB66
 5545 02a1 01       		.uleb128 0x1
 5546 02a2 9C       		.byte	0x9c
 5547 02a3 DC020000 		.4byte	0x2dc
 5548 02a7 10       		.uleb128 0x10
 5549 02a8 0E000000 		.4byte	.LBB2
 5550 02ac 54000000 		.4byte	.LBE2-.LBB2
 5551 02b0 C3020000 		.4byte	0x2c3
 5552 02b4 11       		.uleb128 0x11
 5553 02b5 05040000 		.4byte	.LASF61
 5554 02b9 01       		.byte	0x1
 5555 02ba 99       		.byte	0x99
 5556 02bb B7000000 		.4byte	0xb7
 5557 02bf 02       		.uleb128 0x2
 5558 02c0 91       		.byte	0x91
 5559 02c1 76       		.sleb128 -10
 5560 02c2 00       		.byte	0
 5561 02c3 12       		.uleb128 0x12
 5562 02c4 6E000000 		.4byte	.LBB3
 5563 02c8 54000000 		.4byte	.LBE3-.LBB3
 5564 02cc 11       		.uleb128 0x11
 5565 02cd 05040000 		.4byte	.LASF61
 5566 02d1 01       		.byte	0x1
 5567 02d2 A5       		.byte	0xa5
 5568 02d3 B7000000 		.4byte	0xb7
 5569 02d7 02       		.uleb128 0x2
 5570 02d8 91       		.byte	0x91
 5571 02d9 74       		.sleb128 -12
 5572 02da 00       		.byte	0
 5573 02db 00       		.byte	0
 5574 02dc 0D       		.uleb128 0xd
 5575 02dd 38080000 		.4byte	.LASF62
 5576 02e1 01       		.byte	0x1
 5577 02e2 BB       		.byte	0xbb
 5578 02e3 00000000 		.4byte	.LFB67
 5579 02e7 20000000 		.4byte	.LFE67-.LFB67
 5580 02eb 01       		.uleb128 0x1
 5581 02ec 9C       		.byte	0x9c
 5582 02ed 0E       		.uleb128 0xe
 5583 02ee 44030000 		.4byte	.LASF63
 5584 02f2 01       		.byte	0x1
 5585 02f3 C2       		.byte	0xc2
 5586 02f4 00000000 		.4byte	.LFB68
 5587 02f8 28000000 		.4byte	.LFE68-.LFB68
 5588 02fc 01       		.uleb128 0x1
 5589 02fd 9C       		.byte	0x9c
 5590 02fe 0E       		.uleb128 0xe
 5591 02ff 0F060000 		.4byte	.LASF64
 5592 0303 01       		.byte	0x1
 5593 0304 CB       		.byte	0xcb
 5594 0305 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 120


 5595 0309 0A000000 		.4byte	.LFE69-.LFB69
 5596 030d 01       		.uleb128 0x1
 5597 030e 9C       		.byte	0x9c
 5598 030f 0E       		.uleb128 0xe
 5599 0310 2C060000 		.4byte	.LASF65
 5600 0314 01       		.byte	0x1
 5601 0315 D0       		.byte	0xd0
 5602 0316 00000000 		.4byte	.LFB70
 5603 031a 28000000 		.4byte	.LFE70-.LFB70
 5604 031e 01       		.uleb128 0x1
 5605 031f 9C       		.byte	0x9c
 5606 0320 13       		.uleb128 0x13
 5607 0321 09090000 		.4byte	.LASF67
 5608 0325 01       		.byte	0x1
 5609 0326 DB       		.byte	0xdb
 5610 0327 73000000 		.4byte	0x73
 5611 032b 00000000 		.4byte	.LFB71
 5612 032f 50070000 		.4byte	.LFE71-.LFB71
 5613 0333 01       		.uleb128 0x1
 5614 0334 9C       		.byte	0x9c
 5615 0335 09040000 		.4byte	0x409
 5616 0339 14       		.uleb128 0x14
 5617 033a 35030000 		.4byte	.LASF68
 5618 033e 01       		.byte	0x1
 5619 033f 1401     		.2byte	0x114
 5620 0341 B7000000 		.4byte	0xb7
 5621 0345 02       		.uleb128 0x2
 5622 0346 91       		.byte	0x91
 5623 0347 76       		.sleb128 -10
 5624 0348 12       		.uleb128 0x12
 5625 0349 38010000 		.4byte	.LBB4
 5626 034d 94050000 		.4byte	.LBE4-.LBB4
 5627 0351 14       		.uleb128 0x14
 5628 0352 AD040000 		.4byte	.LASF69
 5629 0356 01       		.byte	0x1
 5630 0357 4B01     		.2byte	0x14b
 5631 0359 8E000000 		.4byte	0x8e
 5632 035d 02       		.uleb128 0x2
 5633 035e 91       		.byte	0x91
 5634 035f 75       		.sleb128 -11
 5635 0360 10       		.uleb128 0x10
 5636 0361 84010000 		.4byte	.LBB5
 5637 0365 E8010000 		.4byte	.LBE5-.LBB5
 5638 0369 96030000 		.4byte	0x396
 5639 036d 15       		.uleb128 0x15
 5640 036e 6D657300 		.ascii	"mes\000"
 5641 0372 01       		.byte	0x1
 5642 0373 5201     		.2byte	0x152
 5643 0375 09040000 		.4byte	0x409
 5644 0379 02       		.uleb128 0x2
 5645 037a 91       		.byte	0x91
 5646 037b 60       		.sleb128 -32
 5647 037c 12       		.uleb128 0x12
 5648 037d AC010000 		.4byte	.LBB6
 5649 0381 C0010000 		.4byte	.LBE6-.LBB6
 5650 0385 14       		.uleb128 0x14
 5651 0386 1C040000 		.4byte	.LASF70
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 121


 5652 038a 01       		.byte	0x1
 5653 038b 6301     		.2byte	0x163
 5654 038d AB000000 		.4byte	0xab
 5655 0391 02       		.uleb128 0x2
 5656 0392 91       		.byte	0x91
 5657 0393 74       		.sleb128 -12
 5658 0394 00       		.byte	0
 5659 0395 00       		.byte	0
 5660 0396 10       		.uleb128 0x10
 5661 0397 C6030000 		.4byte	.LBB7
 5662 039b 30000000 		.4byte	.LBE7-.LBB7
 5663 039f B3030000 		.4byte	0x3b3
 5664 03a3 14       		.uleb128 0x14
 5665 03a4 FA000000 		.4byte	.LASF71
 5666 03a8 01       		.byte	0x1
 5667 03a9 9A01     		.2byte	0x19a
 5668 03ab 8E000000 		.4byte	0x8e
 5669 03af 02       		.uleb128 0x2
 5670 03b0 91       		.byte	0x91
 5671 03b1 71       		.sleb128 -15
 5672 03b2 00       		.byte	0
 5673 03b3 10       		.uleb128 0x10
 5674 03b4 16040000 		.4byte	.LBB8
 5675 03b8 D4000000 		.4byte	.LBE8-.LBB8
 5676 03bc DF030000 		.4byte	0x3df
 5677 03c0 15       		.uleb128 0x15
 5678 03c1 6D657300 		.ascii	"mes\000"
 5679 03c5 01       		.byte	0x1
 5680 03c6 A901     		.2byte	0x1a9
 5681 03c8 09040000 		.4byte	0x409
 5682 03cc 02       		.uleb128 0x2
 5683 03cd 91       		.byte	0x91
 5684 03ce 50       		.sleb128 -48
 5685 03cf 14       		.uleb128 0x14
 5686 03d0 1C040000 		.4byte	.LASF70
 5687 03d4 01       		.byte	0x1
 5688 03d5 AD01     		.2byte	0x1ad
 5689 03d7 AB000000 		.4byte	0xab
 5690 03db 02       		.uleb128 0x2
 5691 03dc 91       		.byte	0x91
 5692 03dd 73       		.sleb128 -13
 5693 03de 00       		.byte	0
 5694 03df 12       		.uleb128 0x12
 5695 03e0 02050000 		.4byte	.LBB9
 5696 03e4 C0010000 		.4byte	.LBE9-.LBB9
 5697 03e8 15       		.uleb128 0x15
 5698 03e9 6D657300 		.ascii	"mes\000"
 5699 03ed 01       		.byte	0x1
 5700 03ee CE01     		.2byte	0x1ce
 5701 03f0 09040000 		.4byte	0x409
 5702 03f4 02       		.uleb128 0x2
 5703 03f5 91       		.byte	0x91
 5704 03f6 40       		.sleb128 -64
 5705 03f7 14       		.uleb128 0x14
 5706 03f8 1C040000 		.4byte	.LASF70
 5707 03fc 01       		.byte	0x1
 5708 03fd D201     		.2byte	0x1d2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 122


 5709 03ff AB000000 		.4byte	0xab
 5710 0403 02       		.uleb128 0x2
 5711 0404 91       		.byte	0x91
 5712 0405 72       		.sleb128 -14
 5713 0406 00       		.byte	0
 5714 0407 00       		.byte	0
 5715 0408 00       		.byte	0
 5716 0409 07       		.uleb128 0x7
 5717 040a 8E000000 		.4byte	0x8e
 5718 040e 19040000 		.4byte	0x419
 5719 0412 08       		.uleb128 0x8
 5720 0413 81000000 		.4byte	0x81
 5721 0417 0F       		.byte	0xf
 5722 0418 00       		.byte	0
 5723 0419 16       		.uleb128 0x16
 5724 041a 47090000 		.4byte	.LASF77
 5725 041e 01       		.byte	0x1
 5726 041f 3102     		.2byte	0x231
 5727 0421 00000000 		.4byte	.LFB72
 5728 0425 60010000 		.4byte	.LFE72-.LFB72
 5729 0429 01       		.uleb128 0x1
 5730 042a 9C       		.byte	0x9c
 5731 042b 67040000 		.4byte	0x467
 5732 042f 12       		.uleb128 0x12
 5733 0430 10000000 		.4byte	.LBB10
 5734 0434 34010000 		.4byte	.LBE10-.LBB10
 5735 0438 14       		.uleb128 0x14
 5736 0439 45010000 		.4byte	.LASF72
 5737 043d 01       		.byte	0x1
 5738 043e 3702     		.2byte	0x237
 5739 0440 B7000000 		.4byte	0xb7
 5740 0444 02       		.uleb128 0x2
 5741 0445 91       		.byte	0x91
 5742 0446 76       		.sleb128 -10
 5743 0447 14       		.uleb128 0x14
 5744 0448 B6070000 		.4byte	.LASF73
 5745 044c 01       		.byte	0x1
 5746 044d 3802     		.2byte	0x238
 5747 044f 67040000 		.4byte	0x467
 5748 0453 02       		.uleb128 0x2
 5749 0454 91       		.byte	0x91
 5750 0455 68       		.sleb128 -24
 5751 0456 14       		.uleb128 0x14
 5752 0457 53020000 		.4byte	.LASF74
 5753 045b 01       		.byte	0x1
 5754 045c 3902     		.2byte	0x239
 5755 045e 67040000 		.4byte	0x467
 5756 0462 02       		.uleb128 0x2
 5757 0463 91       		.byte	0x91
 5758 0464 5C       		.sleb128 -36
 5759 0465 00       		.byte	0
 5760 0466 00       		.byte	0
 5761 0467 07       		.uleb128 0x7
 5762 0468 8E000000 		.4byte	0x8e
 5763 046c 77040000 		.4byte	0x477
 5764 0470 08       		.uleb128 0x8
 5765 0471 81000000 		.4byte	0x81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 123


 5766 0475 0B       		.byte	0xb
 5767 0476 00       		.byte	0
 5768 0477 17       		.uleb128 0x17
 5769 0478 DB030000 		.4byte	.LASF75
 5770 047c 01       		.byte	0x1
 5771 047d 7202     		.2byte	0x272
 5772 047f 00000000 		.4byte	.LFB73
 5773 0483 18000000 		.4byte	.LFE73-.LFB73
 5774 0487 01       		.uleb128 0x1
 5775 0488 9C       		.byte	0x9c
 5776 0489 9D040000 		.4byte	0x49d
 5777 048d 18       		.uleb128 0x18
 5778 048e 64697200 		.ascii	"dir\000"
 5779 0492 01       		.byte	0x1
 5780 0493 7202     		.2byte	0x272
 5781 0495 AB000000 		.4byte	0xab
 5782 0499 02       		.uleb128 0x2
 5783 049a 91       		.byte	0x91
 5784 049b 77       		.sleb128 -9
 5785 049c 00       		.byte	0
 5786 049d 17       		.uleb128 0x17
 5787 049e 3B040000 		.4byte	.LASF76
 5788 04a2 01       		.byte	0x1
 5789 04a3 7702     		.2byte	0x277
 5790 04a5 00000000 		.4byte	.LFB74
 5791 04a9 18000000 		.4byte	.LFE74-.LFB74
 5792 04ad 01       		.uleb128 0x1
 5793 04ae 9C       		.byte	0x9c
 5794 04af C3040000 		.4byte	0x4c3
 5795 04b3 18       		.uleb128 0x18
 5796 04b4 64697200 		.ascii	"dir\000"
 5797 04b8 01       		.byte	0x1
 5798 04b9 7702     		.2byte	0x277
 5799 04bb AB000000 		.4byte	0xab
 5800 04bf 02       		.uleb128 0x2
 5801 04c0 91       		.byte	0x91
 5802 04c1 77       		.sleb128 -9
 5803 04c2 00       		.byte	0
 5804 04c3 19       		.uleb128 0x19
 5805 04c4 6C080000 		.4byte	.LASF78
 5806 04c8 01       		.byte	0x1
 5807 04c9 7C02     		.2byte	0x27c
 5808 04cb 00000000 		.4byte	.LFB75
 5809 04cf 54000000 		.4byte	.LFE75-.LFB75
 5810 04d3 01       		.uleb128 0x1
 5811 04d4 9C       		.byte	0x9c
 5812 04d5 E9040000 		.4byte	0x4e9
 5813 04d9 15       		.uleb128 0x15
 5814 04da 6D657300 		.ascii	"mes\000"
 5815 04de 01       		.byte	0x1
 5816 04df 8102     		.2byte	0x281
 5817 04e1 09040000 		.4byte	0x409
 5818 04e5 02       		.uleb128 0x2
 5819 04e6 91       		.byte	0x91
 5820 04e7 68       		.sleb128 -24
 5821 04e8 00       		.byte	0
 5822 04e9 17       		.uleb128 0x17
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 124


 5823 04ea 34020000 		.4byte	.LASF79
 5824 04ee 01       		.byte	0x1
 5825 04ef 8602     		.2byte	0x286
 5826 04f1 00000000 		.4byte	.LFB76
 5827 04f5 F4000000 		.4byte	.LFE76-.LFB76
 5828 04f9 01       		.uleb128 0x1
 5829 04fa 9C       		.byte	0x9c
 5830 04fb 3C050000 		.4byte	0x53c
 5831 04ff 1A       		.uleb128 0x1a
 5832 0500 34070000 		.4byte	.LASF80
 5833 0504 01       		.byte	0x1
 5834 0505 8602     		.2byte	0x286
 5835 0507 EE000000 		.4byte	0xee
 5836 050b 02       		.uleb128 0x2
 5837 050c 91       		.byte	0x91
 5838 050d 68       		.sleb128 -24
 5839 050e 1A       		.uleb128 0x1a
 5840 050f 68040000 		.4byte	.LASF81
 5841 0513 01       		.byte	0x1
 5842 0514 8602     		.2byte	0x286
 5843 0516 EE000000 		.4byte	0xee
 5844 051a 02       		.uleb128 0x2
 5845 051b 91       		.byte	0x91
 5846 051c 60       		.sleb128 -32
 5847 051d 14       		.uleb128 0x14
 5848 051e 6C020000 		.4byte	.LASF82
 5849 0522 01       		.byte	0x1
 5850 0523 9B02     		.2byte	0x29b
 5851 0525 DB000000 		.4byte	0xdb
 5852 0529 02       		.uleb128 0x2
 5853 052a 91       		.byte	0x91
 5854 052b 76       		.sleb128 -10
 5855 052c 14       		.uleb128 0x14
 5856 052d 9B050000 		.4byte	.LASF83
 5857 0531 01       		.byte	0x1
 5858 0532 9C02     		.2byte	0x29c
 5859 0534 DB000000 		.4byte	0xdb
 5860 0538 02       		.uleb128 0x2
 5861 0539 91       		.byte	0x91
 5862 053a 74       		.sleb128 -12
 5863 053b 00       		.byte	0
 5864 053c 1B       		.uleb128 0x1b
 5865 053d 7D080000 		.4byte	.LASF84
 5866 0541 01       		.byte	0x1
 5867 0542 A202     		.2byte	0x2a2
 5868 0544 00000000 		.4byte	.LFB77
 5869 0548 18000000 		.4byte	.LFE77-.LFB77
 5870 054c 01       		.uleb128 0x1
 5871 054d 9C       		.byte	0x9c
 5872 054e 1B       		.uleb128 0x1b
 5873 054f AB090000 		.4byte	.LASF85
 5874 0553 01       		.byte	0x1
 5875 0554 A802     		.2byte	0x2a8
 5876 0556 00000000 		.4byte	.LFB78
 5877 055a 18000000 		.4byte	.LFE78-.LFB78
 5878 055e 01       		.uleb128 0x1
 5879 055f 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 125


 5880 0560 1B       		.uleb128 0x1b
 5881 0561 EE070000 		.4byte	.LASF86
 5882 0565 01       		.byte	0x1
 5883 0566 AE02     		.2byte	0x2ae
 5884 0568 00000000 		.4byte	.LFB79
 5885 056c 22000000 		.4byte	.LFE79-.LFB79
 5886 0570 01       		.uleb128 0x1
 5887 0571 9C       		.byte	0x9c
 5888 0572 1B       		.uleb128 0x1b
 5889 0573 77020000 		.4byte	.LASF87
 5890 0577 01       		.byte	0x1
 5891 0578 B402     		.2byte	0x2b4
 5892 057a 00000000 		.4byte	.LFB80
 5893 057e 1C000000 		.4byte	.LFE80-.LFB80
 5894 0582 01       		.uleb128 0x1
 5895 0583 9C       		.byte	0x9c
 5896 0584 1B       		.uleb128 0x1b
 5897 0585 51070000 		.4byte	.LASF88
 5898 0589 01       		.byte	0x1
 5899 058a B902     		.2byte	0x2b9
 5900 058c 00000000 		.4byte	.LFB81
 5901 0590 34000000 		.4byte	.LFE81-.LFB81
 5902 0594 01       		.uleb128 0x1
 5903 0595 9C       		.byte	0x9c
 5904 0596 1B       		.uleb128 0x1b
 5905 0597 85020000 		.4byte	.LASF89
 5906 059b 01       		.byte	0x1
 5907 059c BE02     		.2byte	0x2be
 5908 059e 00000000 		.4byte	.LFB82
 5909 05a2 38000000 		.4byte	.LFE82-.LFB82
 5910 05a6 01       		.uleb128 0x1
 5911 05a7 9C       		.byte	0x9c
 5912 05a8 1B       		.uleb128 0x1b
 5913 05a9 F7030000 		.4byte	.LASF90
 5914 05ad 01       		.byte	0x1
 5915 05ae C302     		.2byte	0x2c3
 5916 05b0 00000000 		.4byte	.LFB83
 5917 05b4 4C000000 		.4byte	.LFE83-.LFB83
 5918 05b8 01       		.uleb128 0x1
 5919 05b9 9C       		.byte	0x9c
 5920 05ba 1B       		.uleb128 0x1b
 5921 05bb D8020000 		.4byte	.LASF91
 5922 05bf 01       		.byte	0x1
 5923 05c0 C802     		.2byte	0x2c8
 5924 05c2 00000000 		.4byte	.LFB84
 5925 05c6 38000000 		.4byte	.LFE84-.LFB84
 5926 05ca 01       		.uleb128 0x1
 5927 05cb 9C       		.byte	0x9c
 5928 05cc 1B       		.uleb128 0x1b
 5929 05cd A9060000 		.4byte	.LASF92
 5930 05d1 01       		.byte	0x1
 5931 05d2 D102     		.2byte	0x2d1
 5932 05d4 00000000 		.4byte	.LFB85
 5933 05d8 38000000 		.4byte	.LFE85-.LFB85
 5934 05dc 01       		.uleb128 0x1
 5935 05dd 9C       		.byte	0x9c
 5936 05de 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 126


 5937 05df 81060000 		.4byte	.LASF93
 5938 05e3 01       		.byte	0x1
 5939 05e4 DA02     		.2byte	0x2da
 5940 05e6 00000000 		.4byte	.LFB86
 5941 05ea 38000000 		.4byte	.LFE86-.LFB86
 5942 05ee 01       		.uleb128 0x1
 5943 05ef 9C       		.byte	0x9c
 5944 05f0 1B       		.uleb128 0x1b
 5945 05f1 02020000 		.4byte	.LASF94
 5946 05f5 01       		.byte	0x1
 5947 05f6 E302     		.2byte	0x2e3
 5948 05f8 00000000 		.4byte	.LFB87
 5949 05fc 14000000 		.4byte	.LFE87-.LFB87
 5950 0600 01       		.uleb128 0x1
 5951 0601 9C       		.byte	0x9c
 5952 0602 1C       		.uleb128 0x1c
 5953 0603 EE020000 		.4byte	.LASF95
 5954 0607 01       		.byte	0x1
 5955 0608 E802     		.2byte	0x2e8
 5956 060a 00000000 		.4byte	.LFB88
 5957 060e 18000000 		.4byte	.LFE88-.LFB88
 5958 0612 01       		.uleb128 0x1
 5959 0613 9C       		.byte	0x9c
 5960 0614 1C       		.uleb128 0x1c
 5961 0615 A3040000 		.4byte	.LASF96
 5962 0619 01       		.byte	0x1
 5963 061a EC02     		.2byte	0x2ec
 5964 061c 00000000 		.4byte	.LFB89
 5965 0620 18000000 		.4byte	.LFE89-.LFB89
 5966 0624 01       		.uleb128 0x1
 5967 0625 9C       		.byte	0x9c
 5968 0626 1C       		.uleb128 0x1c
 5969 0627 B6090000 		.4byte	.LASF97
 5970 062b 01       		.byte	0x1
 5971 062c F102     		.2byte	0x2f1
 5972 062e 00000000 		.4byte	.LFB90
 5973 0632 18000000 		.4byte	.LFE90-.LFB90
 5974 0636 01       		.uleb128 0x1
 5975 0637 9C       		.byte	0x9c
 5976 0638 1C       		.uleb128 0x1c
 5977 0639 82030000 		.4byte	.LASF98
 5978 063d 01       		.byte	0x1
 5979 063e F502     		.2byte	0x2f5
 5980 0640 00000000 		.4byte	.LFB91
 5981 0644 18000000 		.4byte	.LFE91-.LFB91
 5982 0648 01       		.uleb128 0x1
 5983 0649 9C       		.byte	0x9c
 5984 064a 17       		.uleb128 0x17
 5985 064b D8060000 		.4byte	.LASF99
 5986 064f 01       		.byte	0x1
 5987 0650 FC02     		.2byte	0x2fc
 5988 0652 00000000 		.4byte	.LFB92
 5989 0656 B8000000 		.4byte	.LFE92-.LFB92
 5990 065a 01       		.uleb128 0x1
 5991 065b 9C       		.byte	0x9c
 5992 065c 70060000 		.4byte	0x670
 5993 0660 14       		.uleb128 0x14
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 127


 5994 0661 55050000 		.4byte	.LASF100
 5995 0665 01       		.byte	0x1
 5996 0666 FD02     		.2byte	0x2fd
 5997 0668 8E000000 		.4byte	0x8e
 5998 066c 02       		.uleb128 0x2
 5999 066d 91       		.byte	0x91
 6000 066e 6F       		.sleb128 -17
 6001 066f 00       		.byte	0
 6002 0670 17       		.uleb128 0x17
 6003 0671 FA050000 		.4byte	.LASF101
 6004 0675 01       		.byte	0x1
 6005 0676 1903     		.2byte	0x319
 6006 0678 00000000 		.4byte	.LFB93
 6007 067c 78030000 		.4byte	.LFE93-.LFB93
 6008 0680 01       		.uleb128 0x1
 6009 0681 9C       		.byte	0x9c
 6010 0682 D8060000 		.4byte	0x6d8
 6011 0686 14       		.uleb128 0x14
 6012 0687 55050000 		.4byte	.LASF100
 6013 068b 01       		.byte	0x1
 6014 068c 1B03     		.2byte	0x31b
 6015 068e 8E000000 		.4byte	0x8e
 6016 0692 02       		.uleb128 0x2
 6017 0693 91       		.byte	0x91
 6018 0694 6F       		.sleb128 -17
 6019 0695 12       		.uleb128 0x12
 6020 0696 48010000 		.4byte	.LBB11
 6021 069a F2010000 		.4byte	.LBE11-.LBB11
 6022 069e 15       		.uleb128 0x15
 6023 069f 6D657300 		.ascii	"mes\000"
 6024 06a3 01       		.byte	0x1
 6025 06a4 4103     		.2byte	0x341
 6026 06a6 09040000 		.4byte	0x409
 6027 06aa 02       		.uleb128 0x2
 6028 06ab 91       		.byte	0x91
 6029 06ac 5C       		.sleb128 -36
 6030 06ad 15       		.uleb128 0x15
 6031 06ae 6900     		.ascii	"i\000"
 6032 06b0 01       		.byte	0x1
 6033 06b1 5403     		.2byte	0x354
 6034 06b3 73000000 		.4byte	0x73
 6035 06b7 02       		.uleb128 0x2
 6036 06b8 91       		.byte	0x91
 6037 06b9 74       		.sleb128 -12
 6038 06ba 15       		.uleb128 0x15
 6039 06bb 7800     		.ascii	"x\000"
 6040 06bd 01       		.byte	0x1
 6041 06be 6B03     		.2byte	0x36b
 6042 06c0 73000000 		.4byte	0x73
 6043 06c4 02       		.uleb128 0x2
 6044 06c5 91       		.byte	0x91
 6045 06c6 70       		.sleb128 -16
 6046 06c7 14       		.uleb128 0x14
 6047 06c8 AD040000 		.4byte	.LASF69
 6048 06cc 01       		.byte	0x1
 6049 06cd 7803     		.2byte	0x378
 6050 06cf 8E000000 		.4byte	0x8e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 128


 6051 06d3 02       		.uleb128 0x2
 6052 06d4 91       		.byte	0x91
 6053 06d5 6E       		.sleb128 -18
 6054 06d6 00       		.byte	0
 6055 06d7 00       		.byte	0
 6056 06d8 1B       		.uleb128 0x1b
 6057 06d9 CD020000 		.4byte	.LASF102
 6058 06dd 01       		.byte	0x1
 6059 06de 8303     		.2byte	0x383
 6060 06e0 00000000 		.4byte	.LFB94
 6061 06e4 40000000 		.4byte	.LFE94-.LFB94
 6062 06e8 01       		.uleb128 0x1
 6063 06e9 9C       		.byte	0x9c
 6064 06ea 1B       		.uleb128 0x1b
 6065 06eb 61020000 		.4byte	.LASF103
 6066 06ef 01       		.byte	0x1
 6067 06f0 9203     		.2byte	0x392
 6068 06f2 00000000 		.4byte	.LFB95
 6069 06f6 40000000 		.4byte	.LFE95-.LFB95
 6070 06fa 01       		.uleb128 0x1
 6071 06fb 9C       		.byte	0x9c
 6072 06fc 19       		.uleb128 0x19
 6073 06fd 90000000 		.4byte	.LASF104
 6074 0701 01       		.byte	0x1
 6075 0702 A203     		.2byte	0x3a2
 6076 0704 00000000 		.4byte	.LFB96
 6077 0708 30020000 		.4byte	.LFE96-.LFB96
 6078 070c 01       		.uleb128 0x1
 6079 070d 9C       		.byte	0x9c
 6080 070e 6D070000 		.4byte	0x76d
 6081 0712 14       		.uleb128 0x14
 6082 0713 15030000 		.4byte	.LASF105
 6083 0717 01       		.byte	0x1
 6084 0718 B003     		.2byte	0x3b0
 6085 071a DB000000 		.4byte	0xdb
 6086 071e 02       		.uleb128 0x2
 6087 071f 91       		.byte	0x91
 6088 0720 5E       		.sleb128 -34
 6089 0721 14       		.uleb128 0x14
 6090 0722 73050000 		.4byte	.LASF106
 6091 0726 01       		.byte	0x1
 6092 0727 B103     		.2byte	0x3b1
 6093 0729 DB000000 		.4byte	0xdb
 6094 072d 02       		.uleb128 0x2
 6095 072e 91       		.byte	0x91
 6096 072f 5C       		.sleb128 -36
 6097 0730 14       		.uleb128 0x14
 6098 0731 B1030000 		.4byte	.LASF107
 6099 0735 01       		.byte	0x1
 6100 0736 B203     		.2byte	0x3b2
 6101 0738 EE000000 		.4byte	0xee
 6102 073c 02       		.uleb128 0x2
 6103 073d 91       		.byte	0x91
 6104 073e 68       		.sleb128 -24
 6105 073f 14       		.uleb128 0x14
 6106 0740 6F090000 		.4byte	.LASF108
 6107 0744 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 129


 6108 0745 B303     		.2byte	0x3b3
 6109 0747 EE000000 		.4byte	0xee
 6110 074b 02       		.uleb128 0x2
 6111 074c 91       		.byte	0x91
 6112 074d 60       		.sleb128 -32
 6113 074e 14       		.uleb128 0x14
 6114 074f 53040000 		.4byte	.LASF109
 6115 0753 01       		.byte	0x1
 6116 0754 BC03     		.2byte	0x3bc
 6117 0756 73000000 		.4byte	0x73
 6118 075a 02       		.uleb128 0x2
 6119 075b 91       		.byte	0x91
 6120 075c 58       		.sleb128 -40
 6121 075d 14       		.uleb128 0x14
 6122 075e 17090000 		.4byte	.LASF110
 6123 0762 01       		.byte	0x1
 6124 0763 BD03     		.2byte	0x3bd
 6125 0765 73000000 		.4byte	0x73
 6126 0769 02       		.uleb128 0x2
 6127 076a 91       		.byte	0x91
 6128 076b 54       		.sleb128 -44
 6129 076c 00       		.byte	0
 6130 076d 1C       		.uleb128 0x1c
 6131 076e CA050000 		.4byte	.LASF111
 6132 0772 01       		.byte	0x1
 6133 0773 CB03     		.2byte	0x3cb
 6134 0775 00000000 		.4byte	.LFB97
 6135 0779 0C000000 		.4byte	.LFE97-.LFB97
 6136 077d 01       		.uleb128 0x1
 6137 077e 9C       		.byte	0x9c
 6138 077f 19       		.uleb128 0x19
 6139 0780 92010000 		.4byte	.LASF112
 6140 0784 01       		.byte	0x1
 6141 0785 D103     		.2byte	0x3d1
 6142 0787 00000000 		.4byte	.LFB98
 6143 078b 4C010000 		.4byte	.LFE98-.LFB98
 6144 078f 01       		.uleb128 0x1
 6145 0790 9C       		.byte	0x9c
 6146 0791 C1070000 		.4byte	0x7c1
 6147 0795 15       		.uleb128 0x15
 6148 0796 6E6C00   		.ascii	"nl\000"
 6149 0799 01       		.byte	0x1
 6150 079a D503     		.2byte	0x3d5
 6151 079c AB000000 		.4byte	0xab
 6152 07a0 02       		.uleb128 0x2
 6153 07a1 91       		.byte	0x91
 6154 07a2 67       		.sleb128 -25
 6155 07a3 15       		.uleb128 0x15
 6156 07a4 6E7200   		.ascii	"nr\000"
 6157 07a7 01       		.byte	0x1
 6158 07a8 D603     		.2byte	0x3d6
 6159 07aa AB000000 		.4byte	0xab
 6160 07ae 02       		.uleb128 0x2
 6161 07af 91       		.byte	0x91
 6162 07b0 66       		.sleb128 -26
 6163 07b1 15       		.uleb128 0x15
 6164 07b2 6D696400 		.ascii	"mid\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 130


 6165 07b6 01       		.byte	0x1
 6166 07b7 D703     		.2byte	0x3d7
 6167 07b9 AB000000 		.4byte	0xab
 6168 07bd 02       		.uleb128 0x2
 6169 07be 91       		.byte	0x91
 6170 07bf 65       		.sleb128 -27
 6171 07c0 00       		.byte	0
 6172 07c1 1C       		.uleb128 0x1c
 6173 07c2 77010000 		.4byte	.LASF113
 6174 07c6 01       		.byte	0x1
 6175 07c7 F103     		.2byte	0x3f1
 6176 07c9 00000000 		.4byte	.LFB99
 6177 07cd 0C000000 		.4byte	.LFE99-.LFB99
 6178 07d1 01       		.uleb128 0x1
 6179 07d2 9C       		.byte	0x9c
 6180 07d3 19       		.uleb128 0x19
 6181 07d4 A7030000 		.4byte	.LASF114
 6182 07d8 01       		.byte	0x1
 6183 07d9 F603     		.2byte	0x3f6
 6184 07db 00000000 		.4byte	.LFB100
 6185 07df C0000000 		.4byte	.LFE100-.LFB100
 6186 07e3 01       		.uleb128 0x1
 6187 07e4 9C       		.byte	0x9c
 6188 07e5 21080000 		.4byte	0x821
 6189 07e9 12       		.uleb128 0x12
 6190 07ea 0E000000 		.4byte	.LBB12
 6191 07ee 8E000000 		.4byte	.LBE12-.LBB12
 6192 07f2 14       		.uleb128 0x14
 6193 07f3 07030000 		.4byte	.LASF115
 6194 07f7 01       		.byte	0x1
 6195 07f8 FF03     		.2byte	0x3ff
 6196 07fa E7000000 		.4byte	0xe7
 6197 07fe 02       		.uleb128 0x2
 6198 07ff 91       		.byte	0x91
 6199 0800 74       		.sleb128 -12
 6200 0801 14       		.uleb128 0x14
 6201 0802 B1050000 		.4byte	.LASF116
 6202 0806 01       		.byte	0x1
 6203 0807 0004     		.2byte	0x400
 6204 0809 DB000000 		.4byte	0xdb
 6205 080d 02       		.uleb128 0x2
 6206 080e 91       		.byte	0x91
 6207 080f 72       		.sleb128 -14
 6208 0810 14       		.uleb128 0x14
 6209 0811 6A030000 		.4byte	.LASF117
 6210 0815 01       		.byte	0x1
 6211 0816 0504     		.2byte	0x405
 6212 0818 09040000 		.4byte	0x409
 6213 081c 02       		.uleb128 0x2
 6214 081d 91       		.byte	0x91
 6215 081e 60       		.sleb128 -32
 6216 081f 00       		.byte	0
 6217 0820 00       		.byte	0
 6218 0821 19       		.uleb128 0x19
 6219 0822 58090000 		.4byte	.LASF118
 6220 0826 01       		.byte	0x1
 6221 0827 0C04     		.2byte	0x40c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 131


 6222 0829 00000000 		.4byte	.LFB101
 6223 082d B8000000 		.4byte	.LFE101-.LFB101
 6224 0831 01       		.uleb128 0x1
 6225 0832 9C       		.byte	0x9c
 6226 0833 51080000 		.4byte	0x851
 6227 0837 12       		.uleb128 0x12
 6228 0838 0E000000 		.4byte	.LBB13
 6229 083c 86000000 		.4byte	.LBE13-.LBB13
 6230 0840 14       		.uleb128 0x14
 6231 0841 CC060000 		.4byte	.LASF119
 6232 0845 01       		.byte	0x1
 6233 0846 1004     		.2byte	0x410
 6234 0848 09040000 		.4byte	0x409
 6235 084c 02       		.uleb128 0x2
 6236 084d 91       		.byte	0x91
 6237 084e 68       		.sleb128 -24
 6238 084f 00       		.byte	0
 6239 0850 00       		.byte	0
 6240 0851 17       		.uleb128 0x17
 6241 0852 6B070000 		.4byte	.LASF120
 6242 0856 01       		.byte	0x1
 6243 0857 2104     		.2byte	0x421
 6244 0859 00000000 		.4byte	.LFB102
 6245 085d 4A000000 		.4byte	.LFE102-.LFB102
 6246 0861 01       		.uleb128 0x1
 6247 0862 9C       		.byte	0x9c
 6248 0863 77080000 		.4byte	0x877
 6249 0867 1A       		.uleb128 0x1a
 6250 0868 5F030000 		.4byte	.LASF121
 6251 086c 01       		.byte	0x1
 6252 086d 2104     		.2byte	0x421
 6253 086f 77080000 		.4byte	0x877
 6254 0873 02       		.uleb128 0x2
 6255 0874 91       		.byte	0x91
 6256 0875 6C       		.sleb128 -20
 6257 0876 00       		.byte	0
 6258 0877 05       		.uleb128 0x5
 6259 0878 04       		.byte	0x4
 6260 0879 AB000000 		.4byte	0xab
 6261 087d 17       		.uleb128 0x17
 6262 087e 44070000 		.4byte	.LASF122
 6263 0882 01       		.byte	0x1
 6264 0883 2C04     		.2byte	0x42c
 6265 0885 00000000 		.4byte	.LFB103
 6266 0889 68000000 		.4byte	.LFE103-.LFB103
 6267 088d 01       		.uleb128 0x1
 6268 088e 9C       		.byte	0x9c
 6269 088f BA080000 		.4byte	0x8ba
 6270 0893 18       		.uleb128 0x18
 6271 0894 7300     		.ascii	"s\000"
 6272 0896 01       		.byte	0x1
 6273 0897 2C04     		.2byte	0x42c
 6274 0899 88000000 		.4byte	0x88
 6275 089d 02       		.uleb128 0x2
 6276 089e 91       		.byte	0x91
 6277 089f 6C       		.sleb128 -20
 6278 08a0 12       		.uleb128 0x12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 132


 6279 08a1 10000000 		.4byte	.LBB14
 6280 08a5 48000000 		.4byte	.LBE14-.LBB14
 6281 08a9 15       		.uleb128 0x15
 6282 08aa 636E7400 		.ascii	"cnt\000"
 6283 08ae 01       		.byte	0x1
 6284 08af 3304     		.2byte	0x433
 6285 08b1 C3000000 		.4byte	0xc3
 6286 08b5 02       		.uleb128 0x2
 6287 08b6 91       		.byte	0x91
 6288 08b7 74       		.sleb128 -12
 6289 08b8 00       		.byte	0
 6290 08b9 00       		.byte	0
 6291 08ba 17       		.uleb128 0x17
 6292 08bb C3080000 		.4byte	.LASF123
 6293 08bf 01       		.byte	0x1
 6294 08c0 4204     		.2byte	0x442
 6295 08c2 00000000 		.4byte	.LFB104
 6296 08c6 50000000 		.4byte	.LFE104-.LFB104
 6297 08ca 01       		.uleb128 0x1
 6298 08cb 9C       		.byte	0x9c
 6299 08cc F7080000 		.4byte	0x8f7
 6300 08d0 18       		.uleb128 0x18
 6301 08d1 6300     		.ascii	"c\000"
 6302 08d3 01       		.byte	0x1
 6303 08d4 4204     		.2byte	0x442
 6304 08d6 8E000000 		.4byte	0x8e
 6305 08da 02       		.uleb128 0x2
 6306 08db 91       		.byte	0x91
 6307 08dc 6F       		.sleb128 -17
 6308 08dd 12       		.uleb128 0x12
 6309 08de 12000000 		.4byte	.LBB15
 6310 08e2 2E000000 		.4byte	.LBE15-.LBB15
 6311 08e6 15       		.uleb128 0x15
 6312 08e7 636E7400 		.ascii	"cnt\000"
 6313 08eb 01       		.byte	0x1
 6314 08ec 4604     		.2byte	0x446
 6315 08ee C3000000 		.4byte	0xc3
 6316 08f2 02       		.uleb128 0x2
 6317 08f3 91       		.byte	0x91
 6318 08f4 74       		.sleb128 -12
 6319 08f5 00       		.byte	0
 6320 08f6 00       		.byte	0
 6321 08f7 1C       		.uleb128 0x1c
 6322 08f8 75030000 		.4byte	.LASF124
 6323 08fc 01       		.byte	0x1
 6324 08fd 5304     		.2byte	0x453
 6325 08ff 00000000 		.4byte	.LFB105
 6326 0903 0C000000 		.4byte	.LFE105-.LFB105
 6327 0907 01       		.uleb128 0x1
 6328 0908 9C       		.byte	0x9c
 6329 0909 1D       		.uleb128 0x1d
 6330 090a BF060000 		.4byte	.LASF125
 6331 090e 06       		.byte	0x6
 6332 090f 9606     		.2byte	0x696
 6333 0911 15090000 		.4byte	0x915
 6334 0915 1E       		.uleb128 0x1e
 6335 0916 95000000 		.4byte	0x95
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 133


 6336 091a 1F       		.uleb128 0x1f
 6337 091b 747300   		.ascii	"ts\000"
 6338 091e 05       		.byte	0x5
 6339 091f 10       		.byte	0x10
 6340 0920 AB000000 		.4byte	0xab
 6341 0924 05       		.uleb128 0x5
 6342 0925 03       		.byte	0x3
 6343 0926 00000000 		.4byte	ts
 6344 092a 20       		.uleb128 0x20
 6345 092b 45080000 		.4byte	.LASF126
 6346 092f 05       		.byte	0x5
 6347 0930 11       		.byte	0x11
 6348 0931 B7000000 		.4byte	0xb7
 6349 0935 05       		.uleb128 0x5
 6350 0936 03       		.byte	0x3
 6351 0937 00000000 		.4byte	ts_enc
 6352 093b 20       		.uleb128 0x20
 6353 093c DE060000 		.4byte	.LASF127
 6354 0940 05       		.byte	0x5
 6355 0941 12       		.byte	0x12
 6356 0942 B7000000 		.4byte	0xb7
 6357 0946 05       		.uleb128 0x5
 6358 0947 03       		.byte	0x3
 6359 0948 00000000 		.4byte	ts_update
 6360 094c 20       		.uleb128 0x20
 6361 094d 7E050000 		.4byte	.LASF128
 6362 0951 05       		.byte	0x5
 6363 0952 13       		.byte	0x13
 6364 0953 B7000000 		.4byte	0xb7
 6365 0957 05       		.uleb128 0x5
 6366 0958 03       		.byte	0x3
 6367 0959 00000000 		.4byte	ts_speed
 6368 095d 20       		.uleb128 0x20
 6369 095e 9C030000 		.4byte	.LASF129
 6370 0962 05       		.byte	0x5
 6371 0963 14       		.byte	0x14
 6372 0964 B7000000 		.4byte	0xb7
 6373 0968 05       		.uleb128 0x5
 6374 0969 03       		.byte	0x3
 6375 096a 00000000 		.4byte	ts_display
 6376 096e 20       		.uleb128 0x20
 6377 096f 1F030000 		.4byte	.LASF130
 6378 0973 05       		.byte	0x5
 6379 0974 16       		.byte	0x16
 6380 0975 AB000000 		.4byte	0xab
 6381 0979 05       		.uleb128 0x5
 6382 097a 03       		.byte	0x3
 6383 097b 00000000 		.4byte	flag_ts_enc
 6384 097f 20       		.uleb128 0x20
 6385 0980 F8020000 		.4byte	.LASF131
 6386 0984 05       		.byte	0x5
 6387 0985 17       		.byte	0x17
 6388 0986 AB000000 		.4byte	0xab
 6389 098a 05       		.uleb128 0x5
 6390 098b 03       		.byte	0x3
 6391 098c 00000000 		.4byte	flag_ts_update
 6392 0990 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 134


 6393 0991 39060000 		.4byte	.LASF132
 6394 0995 05       		.byte	0x5
 6395 0996 18       		.byte	0x18
 6396 0997 AB000000 		.4byte	0xab
 6397 099b 05       		.uleb128 0x5
 6398 099c 03       		.byte	0x3
 6399 099d 00000000 		.4byte	flag_ts_speed
 6400 09a1 20       		.uleb128 0x20
 6401 09a2 56080000 		.4byte	.LASF133
 6402 09a6 05       		.byte	0x5
 6403 09a7 19       		.byte	0x19
 6404 09a8 AB000000 		.4byte	0xab
 6405 09ac 05       		.uleb128 0x5
 6406 09ad 03       		.byte	0x3
 6407 09ae 00000000 		.4byte	flag_ts_display
 6408 09b2 20       		.uleb128 0x20
 6409 09b3 64060000 		.4byte	.LASF134
 6410 09b7 05       		.byte	0x5
 6411 09b8 1C       		.byte	0x1c
 6412 09b9 AB000000 		.4byte	0xab
 6413 09bd 05       		.uleb128 0x5
 6414 09be 03       		.byte	0x3
 6415 09bf 00000000 		.4byte	flag_rx
 6416 09c3 20       		.uleb128 0x20
 6417 09c4 A5020000 		.4byte	.LASF135
 6418 09c8 05       		.byte	0x5
 6419 09c9 1D       		.byte	0x1d
 6420 09ca AB000000 		.4byte	0xab
 6421 09ce 05       		.uleb128 0x5
 6422 09cf 03       		.byte	0x3
 6423 09d0 00000000 		.4byte	flag_packet
 6424 09d4 20       		.uleb128 0x20
 6425 09d5 7C090000 		.4byte	.LASF136
 6426 09d9 05       		.byte	0x5
 6427 09da 1E       		.byte	0x1e
 6428 09db AB000000 		.4byte	0xab
 6429 09df 05       		.uleb128 0x5
 6430 09e0 03       		.byte	0x3
 6431 09e1 00000000 		.4byte	flag_KB_string
 6432 09e5 20       		.uleb128 0x20
 6433 09e6 47060000 		.4byte	.LASF137
 6434 09ea 05       		.byte	0x5
 6435 09eb 20       		.byte	0x20
 6436 09ec AB000000 		.4byte	0xab
 6437 09f0 05       		.uleb128 0x5
 6438 09f1 03       		.byte	0x3
 6439 09f2 00000000 		.4byte	dataready_flag
 6440 09f6 20       		.uleb128 0x20
 6441 09f7 BE010000 		.4byte	.LASF138
 6442 09fb 05       		.byte	0x5
 6443 09fc 22       		.byte	0x22
 6444 09fd AB000000 		.4byte	0xab
 6445 0a01 05       		.uleb128 0x5
 6446 0a02 03       		.byte	0x3
 6447 0a03 00000000 		.4byte	flag_rf_transmission_active
 6448 0a07 20       		.uleb128 0x20
 6449 0a08 DA010000 		.4byte	.LASF139
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 135


 6450 0a0c 05       		.byte	0x5
 6451 0a0d 23       		.byte	0x23
 6452 0a0e AB000000 		.4byte	0xab
 6453 0a12 05       		.uleb128 0x5
 6454 0a13 03       		.byte	0x3
 6455 0a14 00000000 		.4byte	flag_print_rf
 6456 0a18 20       		.uleb128 0x20
 6457 0a19 E1050000 		.4byte	.LASF140
 6458 0a1d 05       		.byte	0x5
 6459 0a1e 25       		.byte	0x25
 6460 0a1f AB000000 		.4byte	0xab
 6461 0a23 05       		.uleb128 0x5
 6462 0a24 03       		.byte	0x3
 6463 0a25 00000000 		.4byte	flag_receive_ADC
 6464 0a29 20       		.uleb128 0x20
 6465 0a2a 76060000 		.4byte	.LASF141
 6466 0a2e 05       		.byte	0x5
 6467 0a2f 26       		.byte	0x26
 6468 0a30 DB000000 		.4byte	0xdb
 6469 0a34 05       		.uleb128 0x5
 6470 0a35 03       		.byte	0x3
 6471 0a36 00000000 		.4byte	adc_result
 6472 0a3a 20       		.uleb128 0x20
 6473 0a3b 00000000 		.4byte	.LASF142
 6474 0a3f 05       		.byte	0x5
 6475 0a40 28       		.byte	0x28
 6476 0a41 AB000000 		.4byte	0xab
 6477 0a45 05       		.uleb128 0x5
 6478 0a46 03       		.byte	0x3
 6479 0a47 00000000 		.4byte	direction
 6480 0a4b 20       		.uleb128 0x20
 6481 0a4c 67050000 		.4byte	.LASF143
 6482 0a50 05       		.byte	0x5
 6483 0a51 2B       		.byte	0x2b
 6484 0a52 AB000000 		.4byte	0xab
 6485 0a56 05       		.uleb128 0x5
 6486 0a57 03       		.byte	0x3
 6487 0a58 00000000 		.4byte	BIN_ENABLED
 6488 0a5c 20       		.uleb128 0x20
 6489 0a5d 5D040000 		.4byte	.LASF144
 6490 0a61 05       		.byte	0x5
 6491 0a62 2D       		.byte	0x2d
 6492 0a63 AB000000 		.4byte	0xab
 6493 0a67 05       		.uleb128 0x5
 6494 0a68 03       		.byte	0x3
 6495 0a69 00000000 		.4byte	BT_ENABLED
 6496 0a6d 20       		.uleb128 0x20
 6497 0a6e 8B060000 		.4byte	.LASF145
 6498 0a72 05       		.byte	0x5
 6499 0a73 32       		.byte	0x32
 6500 0a74 AB000000 		.4byte	0xab
 6501 0a78 05       		.uleb128 0x5
 6502 0a79 03       		.byte	0x3
 6503 0a7a 00000000 		.4byte	flag_calc_wheelspeed
 6504 0a7e 20       		.uleb128 0x20
 6505 0a7f 5F010000 		.4byte	.LASF146
 6506 0a83 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 136


 6507 0a84 33       		.byte	0x33
 6508 0a85 DB000000 		.4byte	0xdb
 6509 0a89 05       		.uleb128 0x5
 6510 0a8a 03       		.byte	0x3
 6511 0a8b 00000000 		.4byte	quad_count1
 6512 0a8f 20       		.uleb128 0x20
 6513 0a90 6B010000 		.4byte	.LASF147
 6514 0a94 05       		.byte	0x5
 6515 0a95 34       		.byte	0x34
 6516 0a96 DB000000 		.4byte	0xdb
 6517 0a9a 05       		.uleb128 0x5
 6518 0a9b 03       		.byte	0x3
 6519 0a9c 00000000 		.4byte	quad_count2
 6520 0aa0 20       		.uleb128 0x20
 6521 0aa1 95080000 		.4byte	.LASF148
 6522 0aa5 05       		.byte	0x5
 6523 0aa6 35       		.byte	0x35
 6524 0aa7 DB000000 		.4byte	0xdb
 6525 0aab 05       		.uleb128 0x5
 6526 0aac 03       		.byte	0x3
 6527 0aad 00000000 		.4byte	last_quad_count1
 6528 0ab1 20       		.uleb128 0x20
 6529 0ab2 A6080000 		.4byte	.LASF149
 6530 0ab6 05       		.byte	0x5
 6531 0ab7 36       		.byte	0x36
 6532 0ab8 DB000000 		.4byte	0xdb
 6533 0abc 05       		.uleb128 0x5
 6534 0abd 03       		.byte	0x3
 6535 0abe 00000000 		.4byte	last_quad_count2
 6536 0ac2 20       		.uleb128 0x20
 6537 0ac3 7A000000 		.4byte	.LASF150
 6538 0ac7 05       		.byte	0x5
 6539 0ac8 37       		.byte	0x37
 6540 0ac9 DB000000 		.4byte	0xdb
 6541 0acd 05       		.uleb128 0x5
 6542 0ace 03       		.byte	0x3
 6543 0acf 00000000 		.4byte	quad_diff1
 6544 0ad3 20       		.uleb128 0x20
 6545 0ad4 85000000 		.4byte	.LASF151
 6546 0ad8 05       		.byte	0x5
 6547 0ad9 38       		.byte	0x38
 6548 0ada DB000000 		.4byte	0xdb
 6549 0ade 05       		.uleb128 0x5
 6550 0adf 03       		.byte	0x3
 6551 0ae0 00000000 		.4byte	quad_diff2
 6552 0ae4 20       		.uleb128 0x20
 6553 0ae5 F1060000 		.4byte	.LASF152
 6554 0ae9 05       		.byte	0x5
 6555 0aea 39       		.byte	0x39
 6556 0aeb AB000000 		.4byte	0xab
 6557 0aef 05       		.uleb128 0x5
 6558 0af0 03       		.byte	0x3
 6559 0af1 00000000 		.4byte	deadzone
 6560 0af5 20       		.uleb128 0x20
 6561 0af6 AE000000 		.4byte	.LASF153
 6562 0afa 05       		.byte	0x5
 6563 0afb 3C       		.byte	0x3c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 137


 6564 0afc DB000000 		.4byte	0xdb
 6565 0b00 05       		.uleb128 0x5
 6566 0b01 03       		.byte	0x3
 6567 0b02 00000000 		.4byte	start_turn_count
 6568 0b06 20       		.uleb128 0x20
 6569 0b07 1C060000 		.4byte	.LASF154
 6570 0b0b 05       		.byte	0x5
 6571 0b0c 3F       		.byte	0x3f
 6572 0b0d DB000000 		.4byte	0xdb
 6573 0b11 05       		.uleb128 0x5
 6574 0b12 03       		.byte	0x3
 6575 0b13 00000000 		.4byte	left_duty_cycle
 6576 0b17 20       		.uleb128 0x20
 6577 0b18 2E090000 		.4byte	.LASF155
 6578 0b1c 05       		.byte	0x5
 6579 0b1d 40       		.byte	0x40
 6580 0b1e DB000000 		.4byte	0xdb
 6581 0b22 05       		.uleb128 0x5
 6582 0b23 03       		.byte	0x3
 6583 0b24 00000000 		.4byte	right_duty_cycle
 6584 0b28 20       		.uleb128 0x20
 6585 0b29 FA060000 		.4byte	.LASF156
 6586 0b2d 05       		.byte	0x5
 6587 0b2e 43       		.byte	0x43
 6588 0b2f DB000000 		.4byte	0xdb
 6589 0b33 05       		.uleb128 0x5
 6590 0b34 03       		.byte	0x3
 6591 0b35 00000000 		.4byte	leftSpeedLimit
 6592 0b39 20       		.uleb128 0x20
 6593 0b3a CB030000 		.4byte	.LASF157
 6594 0b3e 05       		.byte	0x5
 6595 0b3f 44       		.byte	0x44
 6596 0b40 DB000000 		.4byte	0xdb
 6597 0b44 05       		.uleb128 0x5
 6598 0b45 03       		.byte	0x3
 6599 0b46 00000000 		.4byte	rightSpeedLimit
 6600 0b4a 20       		.uleb128 0x20
 6601 0b4b 88070000 		.4byte	.LASF158
 6602 0b4f 05       		.byte	0x5
 6603 0b50 47       		.byte	0x47
 6604 0b51 DB000000 		.4byte	0xdb
 6605 0b55 05       		.uleb128 0x5
 6606 0b56 03       		.byte	0x3
 6607 0b57 00000000 		.4byte	target_distance_cm
 6608 0b5b 20       		.uleb128 0x20
 6609 0b5c 39070000 		.4byte	.LASF159
 6610 0b60 05       		.byte	0x5
 6611 0b61 49       		.byte	0x49
 6612 0b62 DB000000 		.4byte	0xdb
 6613 0b66 05       		.uleb128 0x5
 6614 0b67 03       		.byte	0x3
 6615 0b68 00000000 		.4byte	accum_dist
 6616 0b6c 20       		.uleb128 0x20
 6617 0b6d 0A010000 		.4byte	.LASF160
 6618 0b71 05       		.byte	0x5
 6619 0b72 4A       		.byte	0x4a
 6620 0b73 DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 138


 6621 0b77 05       		.uleb128 0x5
 6622 0b78 03       		.byte	0x3
 6623 0b79 00000000 		.4byte	target_distance_quad
 6624 0b7d 20       		.uleb128 0x20
 6625 0b7e 29080000 		.4byte	.LASF161
 6626 0b82 05       		.byte	0x5
 6627 0b83 4B       		.byte	0x4b
 6628 0b84 AB000000 		.4byte	0xab
 6629 0b88 05       		.uleb128 0x5
 6630 0b89 03       		.byte	0x3
 6631 0b8a 00000000 		.4byte	reached_target
 6632 0b8e 20       		.uleb128 0x20
 6633 0b8f 24070000 		.4byte	.LASF162
 6634 0b93 05       		.byte	0x5
 6635 0b94 4C       		.byte	0x4c
 6636 0b95 AB000000 		.4byte	0xab
 6637 0b99 05       		.uleb128 0x5
 6638 0b9a 03       		.byte	0x3
 6639 0b9b 00000000 		.4byte	overshot_target
 6640 0b9f 20       		.uleb128 0x20
 6641 0ba0 7C070000 		.4byte	.LASF163
 6642 0ba4 05       		.byte	0x5
 6643 0ba5 4D       		.byte	0x4d
 6644 0ba6 E7000000 		.4byte	0xe7
 6645 0baa 05       		.uleb128 0x5
 6646 0bab 03       		.byte	0x3
 6647 0bac 00000000 		.4byte	quad_per_cm
 6648 0bb0 20       		.uleb128 0x20
 6649 0bb1 6E040000 		.4byte	.LASF164
 6650 0bb5 05       		.byte	0x5
 6651 0bb6 50       		.byte	0x50
 6652 0bb7 AB000000 		.4byte	0xab
 6653 0bbb 05       		.uleb128 0x5
 6654 0bbc 03       		.byte	0x3
 6655 0bbd 00000000 		.4byte	initial_pos_valid
 6656 0bc1 20       		.uleb128 0x20
 6657 0bc2 9D090000 		.4byte	.LASF165
 6658 0bc6 05       		.byte	0x5
 6659 0bc7 51       		.byte	0x51
 6660 0bc8 DB000000 		.4byte	0xdb
 6661 0bcc 05       		.uleb128 0x5
 6662 0bcd 03       		.byte	0x3
 6663 0bce 00000000 		.4byte	initial_x_pos
 6664 0bd2 20       		.uleb128 0x20
 6665 0bd3 56060000 		.4byte	.LASF166
 6666 0bd7 05       		.byte	0x5
 6667 0bd8 52       		.byte	0x52
 6668 0bd9 DB000000 		.4byte	0xdb
 6669 0bdd 05       		.uleb128 0x5
 6670 0bde 03       		.byte	0x3
 6671 0bdf 00000000 		.4byte	initial_y_pos
 6672 0be3 20       		.uleb128 0x20
 6673 0be4 4C080000 		.4byte	.LASF167
 6674 0be8 05       		.byte	0x5
 6675 0be9 55       		.byte	0x55
 6676 0bea AB000000 		.4byte	0xab
 6677 0bee 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 139


 6678 0bef 03       		.byte	0x3
 6679 0bf0 00000000 		.4byte	brakeFlag
 6680 0bf4 20       		.uleb128 0x20
 6681 0bf5 E5020000 		.4byte	.LASF168
 6682 0bf9 05       		.byte	0x5
 6683 0bfa 56       		.byte	0x56
 6684 0bfb AB000000 		.4byte	0xab
 6685 0bff 05       		.uleb128 0x5
 6686 0c00 03       		.byte	0x3
 6687 0c01 00000000 		.4byte	portOpen
 6688 0c05 07       		.uleb128 0x7
 6689 0c06 AB000000 		.4byte	0xab
 6690 0c0a 150C0000 		.4byte	0xc15
 6691 0c0e 08       		.uleb128 0x8
 6692 0c0f 81000000 		.4byte	0x81
 6693 0c13 04       		.byte	0x4
 6694 0c14 00       		.byte	0
 6695 0c15 20       		.uleb128 0x20
 6696 0c16 B1020000 		.4byte	.LASF169
 6697 0c1a 05       		.byte	0x5
 6698 0c1b 59       		.byte	0x59
 6699 0c1c 050C0000 		.4byte	0xc05
 6700 0c20 05       		.uleb128 0x5
 6701 0c21 03       		.byte	0x3
 6702 0c22 00000000 		.4byte	frontSensors
 6703 0c26 20       		.uleb128 0x20
 6704 0c27 A2000000 		.4byte	.LASF170
 6705 0c2b 05       		.byte	0x5
 6706 0c2c 5D       		.byte	0x5d
 6707 0c2d DB000000 		.4byte	0xdb
 6708 0c31 05       		.uleb128 0x5
 6709 0c32 03       		.byte	0x3
 6710 0c33 00000000 		.4byte	prevVoltage
 6711 0c37 20       		.uleb128 0x20
 6712 0c38 28010000 		.4byte	.LASF171
 6713 0c3c 05       		.byte	0x5
 6714 0c3d 5E       		.byte	0x5e
 6715 0c3e DB000000 		.4byte	0xdb
 6716 0c42 05       		.uleb128 0x5
 6717 0c43 03       		.byte	0x3
 6718 0c44 00000000 		.4byte	prevVoltage2
 6719 0c48 07       		.uleb128 0x7
 6720 0c49 8E000000 		.4byte	0x8e
 6721 0c4d 580C0000 		.4byte	0xc58
 6722 0c51 08       		.uleb128 0x8
 6723 0c52 81000000 		.4byte	0x81
 6724 0c56 3F       		.byte	0x3f
 6725 0c57 00       		.byte	0
 6726 0c58 20       		.uleb128 0x20
 6727 0c59 87080000 		.4byte	.LASF172
 6728 0c5d 05       		.byte	0x5
 6729 0c5e 64       		.byte	0x64
 6730 0c5f 480C0000 		.4byte	0xc48
 6731 0c63 05       		.uleb128 0x5
 6732 0c64 03       		.byte	0x3
 6733 0c65 00000000 		.4byte	displaystring
 6734 0c69 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 140


 6735 0c6a 24080000 		.4byte	.LASF173
 6736 0c6e 05       		.byte	0x5
 6737 0c6f 65       		.byte	0x65
 6738 0c70 480C0000 		.4byte	0xc48
 6739 0c74 05       		.uleb128 0x5
 6740 0c75 03       		.byte	0x3
 6741 0c76 00000000 		.4byte	line
 6742 0c7a 20       		.uleb128 0x20
 6743 0c7b 05080000 		.4byte	.LASF174
 6744 0c7f 05       		.byte	0x5
 6745 0c80 65       		.byte	0x65
 6746 0c81 480C0000 		.4byte	0xc48
 6747 0c85 05       		.uleb128 0x5
 6748 0c86 03       		.byte	0x3
 6749 0c87 00000000 		.4byte	entry
 6750 0c8b 07       		.uleb128 0x7
 6751 0c8c AB000000 		.4byte	0xab
 6752 0c90 9B0C0000 		.4byte	0xc9b
 6753 0c94 08       		.uleb128 0x8
 6754 0c95 81000000 		.4byte	0x81
 6755 0c99 3F       		.byte	0x3f
 6756 0c9a 00       		.byte	0
 6757 0c9b 20       		.uleb128 0x20
 6758 0c9c 3D020000 		.4byte	.LASF175
 6759 0ca0 05       		.byte	0x5
 6760 0ca1 66       		.byte	0x66
 6761 0ca2 8B0C0000 		.4byte	0xc8b
 6762 0ca6 05       		.uleb128 0x5
 6763 0ca7 03       		.byte	0x3
 6764 0ca8 00000000 		.4byte	usbBuffer
 6765 0cac 20       		.uleb128 0x20
 6766 0cad 8E040000 		.4byte	.LASF176
 6767 0cb1 05       		.byte	0x5
 6768 0cb2 7B       		.byte	0x7b
 6769 0cb3 86010000 		.4byte	0x186
 6770 0cb7 05       		.uleb128 0x5
 6771 0cb8 03       		.byte	0x3
 6772 0cb9 00000000 		.4byte	buffer_state
 6773 0cbd 20       		.uleb128 0x20
 6774 0cbe E7000000 		.4byte	.LASF177
 6775 0cc2 05       		.byte	0x5
 6776 0cc3 7C       		.byte	0x7c
 6777 0cc4 86010000 		.4byte	0x186
 6778 0cc8 05       		.uleb128 0x5
 6779 0cc9 03       		.byte	0x3
 6780 0cca 00000000 		.4byte	system_state
 6781 0cce 20       		.uleb128 0x20
 6782 0ccf 4B030000 		.4byte	.LASF178
 6783 0cd3 05       		.byte	0x5
 6784 0cd4 7E       		.byte	0x7e
 6785 0cd5 0C010000 		.4byte	0x10c
 6786 0cd9 05       		.uleb128 0x5
 6787 0cda 03       		.byte	0x3
 6788 0cdb 00000000 		.4byte	prev_movement_state
 6789 0cdf 20       		.uleb128 0x20
 6790 0ce0 E8010000 		.4byte	.LASF179
 6791 0ce4 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 141


 6792 0ce5 7F       		.byte	0x7f
 6793 0ce6 0C010000 		.4byte	0x10c
 6794 0cea 05       		.uleb128 0x5
 6795 0ceb 03       		.byte	0x3
 6796 0cec 00000000 		.4byte	movement_state
 6797 0cf0 20       		.uleb128 0x20
 6798 0cf1 CC000000 		.4byte	.LASF180
 6799 0cf5 05       		.byte	0x5
 6800 0cf6 80       		.byte	0x80
 6801 0cf7 49010000 		.4byte	0x149
 6802 0cfb 05       		.uleb128 0x5
 6803 0cfc 03       		.byte	0x3
 6804 0cfd 00000000 		.4byte	track_mode
 6805 0d01 20       		.uleb128 0x20
 6806 0d02 2B030000 		.4byte	.LASF181
 6807 0d06 05       		.byte	0x5
 6808 0d07 82       		.byte	0x82
 6809 0d08 AB000000 		.4byte	0xab
 6810 0d0c 05       		.uleb128 0x5
 6811 0d0d 03       		.byte	0x3
 6812 0d0e 00000000 		.4byte	byteCount
 6813 0d12 07       		.uleb128 0x7
 6814 0d13 8E000000 		.4byte	0x8e
 6815 0d17 220D0000 		.4byte	0xd22
 6816 0d1b 08       		.uleb128 0x8
 6817 0d1c 81000000 		.4byte	0x81
 6818 0d20 01       		.byte	0x1
 6819 0d21 00       		.byte	0
 6820 0d22 20       		.uleb128 0x20
 6821 0d23 CA070000 		.4byte	.LASF182
 6822 0d27 05       		.byte	0x5
 6823 0d28 83       		.byte	0x83
 6824 0d29 120D0000 		.4byte	0xd12
 6825 0d2d 05       		.uleb128 0x5
 6826 0d2e 03       		.byte	0x3
 6827 0d2f 00000000 		.4byte	packet
 6828 0d33 20       		.uleb128 0x20
 6829 0d34 AB010000 		.4byte	.LASF183
 6830 0d38 05       		.byte	0x5
 6831 0d39 87       		.byte	0x87
 6832 0d3a EE000000 		.4byte	0xee
 6833 0d3e 05       		.uleb128 0x5
 6834 0d3f 03       		.byte	0x3
 6835 0d40 00000000 		.4byte	speed
 6836 0d44 20       		.uleb128 0x20
 6837 0d45 E6030000 		.4byte	.LASF184
 6838 0d49 01       		.byte	0x1
 6839 0d4a 24       		.byte	0x24
 6840 0d4b B7000000 		.4byte	0xb7
 6841 0d4f 05       		.uleb128 0x5
 6842 0d50 03       		.byte	0x3
 6843 0d51 00000000 		.4byte	instructionCount
 6844 0d55 20       		.uleb128 0x20
 6845 0d56 35010000 		.4byte	.LASF185
 6846 0d5a 01       		.byte	0x1
 6847 0d5b 26       		.byte	0x26
 6848 0d5c A0000000 		.4byte	0xa0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 142


 6849 0d60 05       		.uleb128 0x5
 6850 0d61 03       		.byte	0x3
 6851 0d62 00000000 		.4byte	sensorsDisabled
 6852 0d66 07       		.uleb128 0x7
 6853 0d67 A0000000 		.4byte	0xa0
 6854 0d6b 7C0D0000 		.4byte	0xd7c
 6855 0d6f 08       		.uleb128 0x8
 6856 0d70 81000000 		.4byte	0x81
 6857 0d74 0E       		.byte	0xe
 6858 0d75 08       		.uleb128 0x8
 6859 0d76 81000000 		.4byte	0x81
 6860 0d7a 12       		.byte	0x12
 6861 0d7b 00       		.byte	0
 6862 0d7c 1F       		.uleb128 0x1f
 6863 0d7d 6D617000 		.ascii	"map\000"
 6864 0d81 01       		.byte	0x1
 6865 0d82 2F       		.byte	0x2f
 6866 0d83 660D0000 		.4byte	0xd66
 6867 0d87 05       		.uleb128 0x5
 6868 0d88 03       		.byte	0x3
 6869 0d89 00000000 		.4byte	map
 6870 0d8d 07       		.uleb128 0x7
 6871 0d8e A0000000 		.4byte	0xa0
 6872 0d92 A30D0000 		.4byte	0xda3
 6873 0d96 08       		.uleb128 0x8
 6874 0d97 81000000 		.4byte	0x81
 6875 0d9b 05       		.byte	0x5
 6876 0d9c 08       		.uleb128 0x8
 6877 0d9d 81000000 		.4byte	0x81
 6878 0da1 01       		.byte	0x1
 6879 0da2 00       		.byte	0
 6880 0da3 20       		.uleb128 0x20
 6881 0da4 5D050000 		.4byte	.LASF186
 6882 0da8 01       		.byte	0x1
 6883 0da9 44       		.byte	0x44
 6884 0daa 8D0D0000 		.4byte	0xd8d
 6885 0dae 05       		.uleb128 0x5
 6886 0daf 03       		.byte	0x3
 6887 0db0 00000000 		.4byte	food_list
 6888 0db4 07       		.uleb128 0x7
 6889 0db5 A0000000 		.4byte	0xa0
 6890 0db9 CB0D0000 		.4byte	0xdcb
 6891 0dbd 21       		.uleb128 0x21
 6892 0dbe 81000000 		.4byte	0x81
 6893 0dc2 1F03     		.2byte	0x31f
 6894 0dc4 08       		.uleb128 0x8
 6895 0dc5 81000000 		.4byte	0x81
 6896 0dc9 02       		.byte	0x2
 6897 0dca 00       		.byte	0
 6898 0dcb 20       		.uleb128 0x20
 6899 0dcc 36040000 		.4byte	.LASF187
 6900 0dd0 01       		.byte	0x1
 6901 0dd1 2A       		.byte	0x2a
 6902 0dd2 B40D0000 		.4byte	0xdb4
 6903 0dd6 05       		.uleb128 0x5
 6904 0dd7 03       		.byte	0x3
 6905 0dd8 00000000 		.4byte	path
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 143


 6906 0ddc 20       		.uleb128 0x20
 6907 0ddd BF050000 		.4byte	.LASF188
 6908 0de1 01       		.byte	0x1
 6909 0de2 2B       		.byte	0x2b
 6910 0de3 F5000000 		.4byte	0xf5
 6911 0de7 05       		.uleb128 0x5
 6912 0de8 03       		.byte	0x3
 6913 0de9 00000000 		.4byte	start
 6914 0ded 20       		.uleb128 0x20
 6915 0dee B7080000 		.4byte	.LASF189
 6916 0df2 01       		.byte	0x1
 6917 0df3 2C       		.byte	0x2c
 6918 0df4 F5000000 		.4byte	0xf5
 6919 0df8 05       		.uleb128 0x5
 6920 0df9 03       		.byte	0x3
 6921 0dfa 00000000 		.4byte	destination
 6922 0dfe 20       		.uleb128 0x20
 6923 0dff 82010000 		.4byte	.LASF190
 6924 0e03 01       		.byte	0x1
 6925 0e04 28       		.byte	0x28
 6926 0e05 A0000000 		.4byte	0xa0
 6927 0e09 05       		.uleb128 0x5
 6928 0e0a 03       		.byte	0x3
 6929 0e0b 00000000 		.4byte	robot_direction
 6930 0e0f 20       		.uleb128 0x20
 6931 0e10 0A000000 		.4byte	.LASF191
 6932 0e14 07       		.byte	0x7
 6933 0e15 22       		.byte	0x22
 6934 0e16 A0000000 		.4byte	0xa0
 6935 0e1a 05       		.uleb128 0x5
 6936 0e1b 03       		.byte	0x3
 6937 0e1c 00000000 		.4byte	tracked_direction
 6938 0e20 20       		.uleb128 0x20
 6939 0e21 F9070000 		.4byte	.LASF192
 6940 0e25 01       		.byte	0x1
 6941 0e26 46       		.byte	0x46
 6942 0e27 A0000000 		.4byte	0xa0
 6943 0e2b 05       		.uleb128 0x5
 6944 0e2c 03       		.byte	0x3
 6945 0e2d 00000000 		.4byte	food_length
 6946 0e31 07       		.uleb128 0x7
 6947 0e32 8E000000 		.4byte	0x8e
 6948 0e36 420E0000 		.4byte	0xe42
 6949 0e3a 21       		.uleb128 0x21
 6950 0e3b 81000000 		.4byte	0x81
 6951 0e3f 1F03     		.2byte	0x31f
 6952 0e41 00       		.byte	0
 6953 0e42 20       		.uleb128 0x20
 6954 0e43 8E050000 		.4byte	.LASF193
 6955 0e47 01       		.byte	0x1
 6956 0e48 23       		.byte	0x23
 6957 0e49 310E0000 		.4byte	0xe31
 6958 0e4d 05       		.uleb128 0x5
 6959 0e4e 03       		.byte	0x3
 6960 0e4f 00000000 		.4byte	instructions
 6961 0e53 20       		.uleb128 0x20
 6962 0e54 D1070000 		.4byte	.LASF194
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 144


 6963 0e58 01       		.byte	0x1
 6964 0e59 25       		.byte	0x25
 6965 0e5a B7000000 		.4byte	0xb7
 6966 0e5e 05       		.uleb128 0x5
 6967 0e5f 03       		.byte	0x3
 6968 0e60 00000000 		.4byte	instructionLength
 6969 0e64 22       		.uleb128 0x22
 6970 0e65 9D010000 		.4byte	.LASF195
 6971 0e69 01       		.byte	0x1
 6972 0e6a CF03     		.2byte	0x3cf
 6973 0e6c B7000000 		.4byte	0xb7
 6974 0e70 05       		.uleb128 0x5
 6975 0e71 03       		.byte	0x3
 6976 0e72 00000000 		.4byte	leftTurnCount
 6977 0e76 22       		.uleb128 0x22
 6978 0e77 61000000 		.4byte	.LASF196
 6979 0e7b 01       		.byte	0x1
 6980 0e7c D003     		.2byte	0x3d0
 6981 0e7e B7000000 		.4byte	0xb7
 6982 0e82 05       		.uleb128 0x5
 6983 0e83 03       		.byte	0x3
 6984 0e84 00000000 		.4byte	rightTurnCount
 6985 0e88 00       		.byte	0
 6986              		.section	.debug_abbrev,"",%progbits
 6987              	.Ldebug_abbrev0:
 6988 0000 01       		.uleb128 0x1
 6989 0001 11       		.uleb128 0x11
 6990 0002 01       		.byte	0x1
 6991 0003 25       		.uleb128 0x25
 6992 0004 0E       		.uleb128 0xe
 6993 0005 13       		.uleb128 0x13
 6994 0006 0B       		.uleb128 0xb
 6995 0007 03       		.uleb128 0x3
 6996 0008 0E       		.uleb128 0xe
 6997 0009 1B       		.uleb128 0x1b
 6998 000a 0E       		.uleb128 0xe
 6999 000b 55       		.uleb128 0x55
 7000 000c 17       		.uleb128 0x17
 7001 000d 11       		.uleb128 0x11
 7002 000e 01       		.uleb128 0x1
 7003 000f 10       		.uleb128 0x10
 7004 0010 17       		.uleb128 0x17
 7005 0011 00       		.byte	0
 7006 0012 00       		.byte	0
 7007 0013 02       		.uleb128 0x2
 7008 0014 24       		.uleb128 0x24
 7009 0015 00       		.byte	0
 7010 0016 0B       		.uleb128 0xb
 7011 0017 0B       		.uleb128 0xb
 7012 0018 3E       		.uleb128 0x3e
 7013 0019 0B       		.uleb128 0xb
 7014 001a 03       		.uleb128 0x3
 7015 001b 0E       		.uleb128 0xe
 7016 001c 00       		.byte	0
 7017 001d 00       		.byte	0
 7018 001e 03       		.uleb128 0x3
 7019 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 145


 7020 0020 00       		.byte	0
 7021 0021 03       		.uleb128 0x3
 7022 0022 0E       		.uleb128 0xe
 7023 0023 3A       		.uleb128 0x3a
 7024 0024 0B       		.uleb128 0xb
 7025 0025 3B       		.uleb128 0x3b
 7026 0026 0B       		.uleb128 0xb
 7027 0027 49       		.uleb128 0x49
 7028 0028 13       		.uleb128 0x13
 7029 0029 00       		.byte	0
 7030 002a 00       		.byte	0
 7031 002b 04       		.uleb128 0x4
 7032 002c 24       		.uleb128 0x24
 7033 002d 00       		.byte	0
 7034 002e 0B       		.uleb128 0xb
 7035 002f 0B       		.uleb128 0xb
 7036 0030 3E       		.uleb128 0x3e
 7037 0031 0B       		.uleb128 0xb
 7038 0032 03       		.uleb128 0x3
 7039 0033 08       		.uleb128 0x8
 7040 0034 00       		.byte	0
 7041 0035 00       		.byte	0
 7042 0036 05       		.uleb128 0x5
 7043 0037 0F       		.uleb128 0xf
 7044 0038 00       		.byte	0
 7045 0039 0B       		.uleb128 0xb
 7046 003a 0B       		.uleb128 0xb
 7047 003b 49       		.uleb128 0x49
 7048 003c 13       		.uleb128 0x13
 7049 003d 00       		.byte	0
 7050 003e 00       		.byte	0
 7051 003f 06       		.uleb128 0x6
 7052 0040 16       		.uleb128 0x16
 7053 0041 00       		.byte	0
 7054 0042 03       		.uleb128 0x3
 7055 0043 0E       		.uleb128 0xe
 7056 0044 3A       		.uleb128 0x3a
 7057 0045 0B       		.uleb128 0xb
 7058 0046 3B       		.uleb128 0x3b
 7059 0047 05       		.uleb128 0x5
 7060 0048 49       		.uleb128 0x49
 7061 0049 13       		.uleb128 0x13
 7062 004a 00       		.byte	0
 7063 004b 00       		.byte	0
 7064 004c 07       		.uleb128 0x7
 7065 004d 01       		.uleb128 0x1
 7066 004e 01       		.byte	0x1
 7067 004f 49       		.uleb128 0x49
 7068 0050 13       		.uleb128 0x13
 7069 0051 01       		.uleb128 0x1
 7070 0052 13       		.uleb128 0x13
 7071 0053 00       		.byte	0
 7072 0054 00       		.byte	0
 7073 0055 08       		.uleb128 0x8
 7074 0056 21       		.uleb128 0x21
 7075 0057 00       		.byte	0
 7076 0058 49       		.uleb128 0x49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 146


 7077 0059 13       		.uleb128 0x13
 7078 005a 2F       		.uleb128 0x2f
 7079 005b 0B       		.uleb128 0xb
 7080 005c 00       		.byte	0
 7081 005d 00       		.byte	0
 7082 005e 09       		.uleb128 0x9
 7083 005f 04       		.uleb128 0x4
 7084 0060 01       		.byte	0x1
 7085 0061 03       		.uleb128 0x3
 7086 0062 0E       		.uleb128 0xe
 7087 0063 0B       		.uleb128 0xb
 7088 0064 0B       		.uleb128 0xb
 7089 0065 3A       		.uleb128 0x3a
 7090 0066 0B       		.uleb128 0xb
 7091 0067 3B       		.uleb128 0x3b
 7092 0068 0B       		.uleb128 0xb
 7093 0069 01       		.uleb128 0x1
 7094 006a 13       		.uleb128 0x13
 7095 006b 00       		.byte	0
 7096 006c 00       		.byte	0
 7097 006d 0A       		.uleb128 0xa
 7098 006e 28       		.uleb128 0x28
 7099 006f 00       		.byte	0
 7100 0070 03       		.uleb128 0x3
 7101 0071 0E       		.uleb128 0xe
 7102 0072 1C       		.uleb128 0x1c
 7103 0073 0D       		.uleb128 0xd
 7104 0074 00       		.byte	0
 7105 0075 00       		.byte	0
 7106 0076 0B       		.uleb128 0xb
 7107 0077 13       		.uleb128 0x13
 7108 0078 01       		.byte	0x1
 7109 0079 03       		.uleb128 0x3
 7110 007a 0E       		.uleb128 0xe
 7111 007b 0B       		.uleb128 0xb
 7112 007c 0B       		.uleb128 0xb
 7113 007d 3A       		.uleb128 0x3a
 7114 007e 0B       		.uleb128 0xb
 7115 007f 3B       		.uleb128 0x3b
 7116 0080 0B       		.uleb128 0xb
 7117 0081 01       		.uleb128 0x1
 7118 0082 13       		.uleb128 0x13
 7119 0083 00       		.byte	0
 7120 0084 00       		.byte	0
 7121 0085 0C       		.uleb128 0xc
 7122 0086 0D       		.uleb128 0xd
 7123 0087 00       		.byte	0
 7124 0088 03       		.uleb128 0x3
 7125 0089 0E       		.uleb128 0xe
 7126 008a 3A       		.uleb128 0x3a
 7127 008b 0B       		.uleb128 0xb
 7128 008c 3B       		.uleb128 0x3b
 7129 008d 0B       		.uleb128 0xb
 7130 008e 49       		.uleb128 0x49
 7131 008f 13       		.uleb128 0x13
 7132 0090 38       		.uleb128 0x38
 7133 0091 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 147


 7134 0092 00       		.byte	0
 7135 0093 00       		.byte	0
 7136 0094 0D       		.uleb128 0xd
 7137 0095 2E       		.uleb128 0x2e
 7138 0096 00       		.byte	0
 7139 0097 3F       		.uleb128 0x3f
 7140 0098 19       		.uleb128 0x19
 7141 0099 03       		.uleb128 0x3
 7142 009a 0E       		.uleb128 0xe
 7143 009b 3A       		.uleb128 0x3a
 7144 009c 0B       		.uleb128 0xb
 7145 009d 3B       		.uleb128 0x3b
 7146 009e 0B       		.uleb128 0xb
 7147 009f 27       		.uleb128 0x27
 7148 00a0 19       		.uleb128 0x19
 7149 00a1 11       		.uleb128 0x11
 7150 00a2 01       		.uleb128 0x1
 7151 00a3 12       		.uleb128 0x12
 7152 00a4 06       		.uleb128 0x6
 7153 00a5 40       		.uleb128 0x40
 7154 00a6 18       		.uleb128 0x18
 7155 00a7 9742     		.uleb128 0x2117
 7156 00a9 19       		.uleb128 0x19
 7157 00aa 00       		.byte	0
 7158 00ab 00       		.byte	0
 7159 00ac 0E       		.uleb128 0xe
 7160 00ad 2E       		.uleb128 0x2e
 7161 00ae 00       		.byte	0
 7162 00af 3F       		.uleb128 0x3f
 7163 00b0 19       		.uleb128 0x19
 7164 00b1 03       		.uleb128 0x3
 7165 00b2 0E       		.uleb128 0xe
 7166 00b3 3A       		.uleb128 0x3a
 7167 00b4 0B       		.uleb128 0xb
 7168 00b5 3B       		.uleb128 0x3b
 7169 00b6 0B       		.uleb128 0xb
 7170 00b7 27       		.uleb128 0x27
 7171 00b8 19       		.uleb128 0x19
 7172 00b9 11       		.uleb128 0x11
 7173 00ba 01       		.uleb128 0x1
 7174 00bb 12       		.uleb128 0x12
 7175 00bc 06       		.uleb128 0x6
 7176 00bd 40       		.uleb128 0x40
 7177 00be 18       		.uleb128 0x18
 7178 00bf 9642     		.uleb128 0x2116
 7179 00c1 19       		.uleb128 0x19
 7180 00c2 00       		.byte	0
 7181 00c3 00       		.byte	0
 7182 00c4 0F       		.uleb128 0xf
 7183 00c5 2E       		.uleb128 0x2e
 7184 00c6 01       		.byte	0x1
 7185 00c7 3F       		.uleb128 0x3f
 7186 00c8 19       		.uleb128 0x19
 7187 00c9 03       		.uleb128 0x3
 7188 00ca 0E       		.uleb128 0xe
 7189 00cb 3A       		.uleb128 0x3a
 7190 00cc 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 148


 7191 00cd 3B       		.uleb128 0x3b
 7192 00ce 0B       		.uleb128 0xb
 7193 00cf 27       		.uleb128 0x27
 7194 00d0 19       		.uleb128 0x19
 7195 00d1 11       		.uleb128 0x11
 7196 00d2 01       		.uleb128 0x1
 7197 00d3 12       		.uleb128 0x12
 7198 00d4 06       		.uleb128 0x6
 7199 00d5 40       		.uleb128 0x40
 7200 00d6 18       		.uleb128 0x18
 7201 00d7 9642     		.uleb128 0x2116
 7202 00d9 19       		.uleb128 0x19
 7203 00da 01       		.uleb128 0x1
 7204 00db 13       		.uleb128 0x13
 7205 00dc 00       		.byte	0
 7206 00dd 00       		.byte	0
 7207 00de 10       		.uleb128 0x10
 7208 00df 0B       		.uleb128 0xb
 7209 00e0 01       		.byte	0x1
 7210 00e1 11       		.uleb128 0x11
 7211 00e2 01       		.uleb128 0x1
 7212 00e3 12       		.uleb128 0x12
 7213 00e4 06       		.uleb128 0x6
 7214 00e5 01       		.uleb128 0x1
 7215 00e6 13       		.uleb128 0x13
 7216 00e7 00       		.byte	0
 7217 00e8 00       		.byte	0
 7218 00e9 11       		.uleb128 0x11
 7219 00ea 34       		.uleb128 0x34
 7220 00eb 00       		.byte	0
 7221 00ec 03       		.uleb128 0x3
 7222 00ed 0E       		.uleb128 0xe
 7223 00ee 3A       		.uleb128 0x3a
 7224 00ef 0B       		.uleb128 0xb
 7225 00f0 3B       		.uleb128 0x3b
 7226 00f1 0B       		.uleb128 0xb
 7227 00f2 49       		.uleb128 0x49
 7228 00f3 13       		.uleb128 0x13
 7229 00f4 02       		.uleb128 0x2
 7230 00f5 18       		.uleb128 0x18
 7231 00f6 00       		.byte	0
 7232 00f7 00       		.byte	0
 7233 00f8 12       		.uleb128 0x12
 7234 00f9 0B       		.uleb128 0xb
 7235 00fa 01       		.byte	0x1
 7236 00fb 11       		.uleb128 0x11
 7237 00fc 01       		.uleb128 0x1
 7238 00fd 12       		.uleb128 0x12
 7239 00fe 06       		.uleb128 0x6
 7240 00ff 00       		.byte	0
 7241 0100 00       		.byte	0
 7242 0101 13       		.uleb128 0x13
 7243 0102 2E       		.uleb128 0x2e
 7244 0103 01       		.byte	0x1
 7245 0104 3F       		.uleb128 0x3f
 7246 0105 19       		.uleb128 0x19
 7247 0106 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 149


 7248 0107 0E       		.uleb128 0xe
 7249 0108 3A       		.uleb128 0x3a
 7250 0109 0B       		.uleb128 0xb
 7251 010a 3B       		.uleb128 0x3b
 7252 010b 0B       		.uleb128 0xb
 7253 010c 49       		.uleb128 0x49
 7254 010d 13       		.uleb128 0x13
 7255 010e 11       		.uleb128 0x11
 7256 010f 01       		.uleb128 0x1
 7257 0110 12       		.uleb128 0x12
 7258 0111 06       		.uleb128 0x6
 7259 0112 40       		.uleb128 0x40
 7260 0113 18       		.uleb128 0x18
 7261 0114 9642     		.uleb128 0x2116
 7262 0116 19       		.uleb128 0x19
 7263 0117 01       		.uleb128 0x1
 7264 0118 13       		.uleb128 0x13
 7265 0119 00       		.byte	0
 7266 011a 00       		.byte	0
 7267 011b 14       		.uleb128 0x14
 7268 011c 34       		.uleb128 0x34
 7269 011d 00       		.byte	0
 7270 011e 03       		.uleb128 0x3
 7271 011f 0E       		.uleb128 0xe
 7272 0120 3A       		.uleb128 0x3a
 7273 0121 0B       		.uleb128 0xb
 7274 0122 3B       		.uleb128 0x3b
 7275 0123 05       		.uleb128 0x5
 7276 0124 49       		.uleb128 0x49
 7277 0125 13       		.uleb128 0x13
 7278 0126 02       		.uleb128 0x2
 7279 0127 18       		.uleb128 0x18
 7280 0128 00       		.byte	0
 7281 0129 00       		.byte	0
 7282 012a 15       		.uleb128 0x15
 7283 012b 34       		.uleb128 0x34
 7284 012c 00       		.byte	0
 7285 012d 03       		.uleb128 0x3
 7286 012e 08       		.uleb128 0x8
 7287 012f 3A       		.uleb128 0x3a
 7288 0130 0B       		.uleb128 0xb
 7289 0131 3B       		.uleb128 0x3b
 7290 0132 05       		.uleb128 0x5
 7291 0133 49       		.uleb128 0x49
 7292 0134 13       		.uleb128 0x13
 7293 0135 02       		.uleb128 0x2
 7294 0136 18       		.uleb128 0x18
 7295 0137 00       		.byte	0
 7296 0138 00       		.byte	0
 7297 0139 16       		.uleb128 0x16
 7298 013a 2E       		.uleb128 0x2e
 7299 013b 01       		.byte	0x1
 7300 013c 3F       		.uleb128 0x3f
 7301 013d 19       		.uleb128 0x19
 7302 013e 03       		.uleb128 0x3
 7303 013f 0E       		.uleb128 0xe
 7304 0140 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 150


 7305 0141 0B       		.uleb128 0xb
 7306 0142 3B       		.uleb128 0x3b
 7307 0143 05       		.uleb128 0x5
 7308 0144 11       		.uleb128 0x11
 7309 0145 01       		.uleb128 0x1
 7310 0146 12       		.uleb128 0x12
 7311 0147 06       		.uleb128 0x6
 7312 0148 40       		.uleb128 0x40
 7313 0149 18       		.uleb128 0x18
 7314 014a 9742     		.uleb128 0x2117
 7315 014c 19       		.uleb128 0x19
 7316 014d 01       		.uleb128 0x1
 7317 014e 13       		.uleb128 0x13
 7318 014f 00       		.byte	0
 7319 0150 00       		.byte	0
 7320 0151 17       		.uleb128 0x17
 7321 0152 2E       		.uleb128 0x2e
 7322 0153 01       		.byte	0x1
 7323 0154 3F       		.uleb128 0x3f
 7324 0155 19       		.uleb128 0x19
 7325 0156 03       		.uleb128 0x3
 7326 0157 0E       		.uleb128 0xe
 7327 0158 3A       		.uleb128 0x3a
 7328 0159 0B       		.uleb128 0xb
 7329 015a 3B       		.uleb128 0x3b
 7330 015b 05       		.uleb128 0x5
 7331 015c 27       		.uleb128 0x27
 7332 015d 19       		.uleb128 0x19
 7333 015e 11       		.uleb128 0x11
 7334 015f 01       		.uleb128 0x1
 7335 0160 12       		.uleb128 0x12
 7336 0161 06       		.uleb128 0x6
 7337 0162 40       		.uleb128 0x40
 7338 0163 18       		.uleb128 0x18
 7339 0164 9642     		.uleb128 0x2116
 7340 0166 19       		.uleb128 0x19
 7341 0167 01       		.uleb128 0x1
 7342 0168 13       		.uleb128 0x13
 7343 0169 00       		.byte	0
 7344 016a 00       		.byte	0
 7345 016b 18       		.uleb128 0x18
 7346 016c 05       		.uleb128 0x5
 7347 016d 00       		.byte	0
 7348 016e 03       		.uleb128 0x3
 7349 016f 08       		.uleb128 0x8
 7350 0170 3A       		.uleb128 0x3a
 7351 0171 0B       		.uleb128 0xb
 7352 0172 3B       		.uleb128 0x3b
 7353 0173 05       		.uleb128 0x5
 7354 0174 49       		.uleb128 0x49
 7355 0175 13       		.uleb128 0x13
 7356 0176 02       		.uleb128 0x2
 7357 0177 18       		.uleb128 0x18
 7358 0178 00       		.byte	0
 7359 0179 00       		.byte	0
 7360 017a 19       		.uleb128 0x19
 7361 017b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 151


 7362 017c 01       		.byte	0x1
 7363 017d 3F       		.uleb128 0x3f
 7364 017e 19       		.uleb128 0x19
 7365 017f 03       		.uleb128 0x3
 7366 0180 0E       		.uleb128 0xe
 7367 0181 3A       		.uleb128 0x3a
 7368 0182 0B       		.uleb128 0xb
 7369 0183 3B       		.uleb128 0x3b
 7370 0184 05       		.uleb128 0x5
 7371 0185 11       		.uleb128 0x11
 7372 0186 01       		.uleb128 0x1
 7373 0187 12       		.uleb128 0x12
 7374 0188 06       		.uleb128 0x6
 7375 0189 40       		.uleb128 0x40
 7376 018a 18       		.uleb128 0x18
 7377 018b 9642     		.uleb128 0x2116
 7378 018d 19       		.uleb128 0x19
 7379 018e 01       		.uleb128 0x1
 7380 018f 13       		.uleb128 0x13
 7381 0190 00       		.byte	0
 7382 0191 00       		.byte	0
 7383 0192 1A       		.uleb128 0x1a
 7384 0193 05       		.uleb128 0x5
 7385 0194 00       		.byte	0
 7386 0195 03       		.uleb128 0x3
 7387 0196 0E       		.uleb128 0xe
 7388 0197 3A       		.uleb128 0x3a
 7389 0198 0B       		.uleb128 0xb
 7390 0199 3B       		.uleb128 0x3b
 7391 019a 05       		.uleb128 0x5
 7392 019b 49       		.uleb128 0x49
 7393 019c 13       		.uleb128 0x13
 7394 019d 02       		.uleb128 0x2
 7395 019e 18       		.uleb128 0x18
 7396 019f 00       		.byte	0
 7397 01a0 00       		.byte	0
 7398 01a1 1B       		.uleb128 0x1b
 7399 01a2 2E       		.uleb128 0x2e
 7400 01a3 00       		.byte	0
 7401 01a4 3F       		.uleb128 0x3f
 7402 01a5 19       		.uleb128 0x19
 7403 01a6 03       		.uleb128 0x3
 7404 01a7 0E       		.uleb128 0xe
 7405 01a8 3A       		.uleb128 0x3a
 7406 01a9 0B       		.uleb128 0xb
 7407 01aa 3B       		.uleb128 0x3b
 7408 01ab 05       		.uleb128 0x5
 7409 01ac 11       		.uleb128 0x11
 7410 01ad 01       		.uleb128 0x1
 7411 01ae 12       		.uleb128 0x12
 7412 01af 06       		.uleb128 0x6
 7413 01b0 40       		.uleb128 0x40
 7414 01b1 18       		.uleb128 0x18
 7415 01b2 9642     		.uleb128 0x2116
 7416 01b4 19       		.uleb128 0x19
 7417 01b5 00       		.byte	0
 7418 01b6 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 152


 7419 01b7 1C       		.uleb128 0x1c
 7420 01b8 2E       		.uleb128 0x2e
 7421 01b9 00       		.byte	0
 7422 01ba 3F       		.uleb128 0x3f
 7423 01bb 19       		.uleb128 0x19
 7424 01bc 03       		.uleb128 0x3
 7425 01bd 0E       		.uleb128 0xe
 7426 01be 3A       		.uleb128 0x3a
 7427 01bf 0B       		.uleb128 0xb
 7428 01c0 3B       		.uleb128 0x3b
 7429 01c1 05       		.uleb128 0x5
 7430 01c2 11       		.uleb128 0x11
 7431 01c3 01       		.uleb128 0x1
 7432 01c4 12       		.uleb128 0x12
 7433 01c5 06       		.uleb128 0x6
 7434 01c6 40       		.uleb128 0x40
 7435 01c7 18       		.uleb128 0x18
 7436 01c8 9742     		.uleb128 0x2117
 7437 01ca 19       		.uleb128 0x19
 7438 01cb 00       		.byte	0
 7439 01cc 00       		.byte	0
 7440 01cd 1D       		.uleb128 0x1d
 7441 01ce 34       		.uleb128 0x34
 7442 01cf 00       		.byte	0
 7443 01d0 03       		.uleb128 0x3
 7444 01d1 0E       		.uleb128 0xe
 7445 01d2 3A       		.uleb128 0x3a
 7446 01d3 0B       		.uleb128 0xb
 7447 01d4 3B       		.uleb128 0x3b
 7448 01d5 05       		.uleb128 0x5
 7449 01d6 49       		.uleb128 0x49
 7450 01d7 13       		.uleb128 0x13
 7451 01d8 3F       		.uleb128 0x3f
 7452 01d9 19       		.uleb128 0x19
 7453 01da 3C       		.uleb128 0x3c
 7454 01db 19       		.uleb128 0x19
 7455 01dc 00       		.byte	0
 7456 01dd 00       		.byte	0
 7457 01de 1E       		.uleb128 0x1e
 7458 01df 35       		.uleb128 0x35
 7459 01e0 00       		.byte	0
 7460 01e1 49       		.uleb128 0x49
 7461 01e2 13       		.uleb128 0x13
 7462 01e3 00       		.byte	0
 7463 01e4 00       		.byte	0
 7464 01e5 1F       		.uleb128 0x1f
 7465 01e6 34       		.uleb128 0x34
 7466 01e7 00       		.byte	0
 7467 01e8 03       		.uleb128 0x3
 7468 01e9 08       		.uleb128 0x8
 7469 01ea 3A       		.uleb128 0x3a
 7470 01eb 0B       		.uleb128 0xb
 7471 01ec 3B       		.uleb128 0x3b
 7472 01ed 0B       		.uleb128 0xb
 7473 01ee 49       		.uleb128 0x49
 7474 01ef 13       		.uleb128 0x13
 7475 01f0 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 153


 7476 01f1 19       		.uleb128 0x19
 7477 01f2 02       		.uleb128 0x2
 7478 01f3 18       		.uleb128 0x18
 7479 01f4 00       		.byte	0
 7480 01f5 00       		.byte	0
 7481 01f6 20       		.uleb128 0x20
 7482 01f7 34       		.uleb128 0x34
 7483 01f8 00       		.byte	0
 7484 01f9 03       		.uleb128 0x3
 7485 01fa 0E       		.uleb128 0xe
 7486 01fb 3A       		.uleb128 0x3a
 7487 01fc 0B       		.uleb128 0xb
 7488 01fd 3B       		.uleb128 0x3b
 7489 01fe 0B       		.uleb128 0xb
 7490 01ff 49       		.uleb128 0x49
 7491 0200 13       		.uleb128 0x13
 7492 0201 3F       		.uleb128 0x3f
 7493 0202 19       		.uleb128 0x19
 7494 0203 02       		.uleb128 0x2
 7495 0204 18       		.uleb128 0x18
 7496 0205 00       		.byte	0
 7497 0206 00       		.byte	0
 7498 0207 21       		.uleb128 0x21
 7499 0208 21       		.uleb128 0x21
 7500 0209 00       		.byte	0
 7501 020a 49       		.uleb128 0x49
 7502 020b 13       		.uleb128 0x13
 7503 020c 2F       		.uleb128 0x2f
 7504 020d 05       		.uleb128 0x5
 7505 020e 00       		.byte	0
 7506 020f 00       		.byte	0
 7507 0210 22       		.uleb128 0x22
 7508 0211 34       		.uleb128 0x34
 7509 0212 00       		.byte	0
 7510 0213 03       		.uleb128 0x3
 7511 0214 0E       		.uleb128 0xe
 7512 0215 3A       		.uleb128 0x3a
 7513 0216 0B       		.uleb128 0xb
 7514 0217 3B       		.uleb128 0x3b
 7515 0218 05       		.uleb128 0x5
 7516 0219 49       		.uleb128 0x49
 7517 021a 13       		.uleb128 0x13
 7518 021b 3F       		.uleb128 0x3f
 7519 021c 19       		.uleb128 0x19
 7520 021d 02       		.uleb128 0x2
 7521 021e 18       		.uleb128 0x18
 7522 021f 00       		.byte	0
 7523 0220 00       		.byte	0
 7524 0221 00       		.byte	0
 7525              		.section	.debug_aranges,"",%progbits
 7526 0000 6C010000 		.4byte	0x16c
 7527 0004 0200     		.2byte	0x2
 7528 0006 00000000 		.4byte	.Ldebug_info0
 7529 000a 04       		.byte	0x4
 7530 000b 00       		.byte	0
 7531 000c 0000     		.2byte	0
 7532 000e 0000     		.2byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 154


 7533 0010 00000000 		.4byte	.LFB63
 7534 0014 0C000000 		.4byte	.LFE63-.LFB63
 7535 0018 00000000 		.4byte	.LFB64
 7536 001c 2C000000 		.4byte	.LFE64-.LFB64
 7537 0020 00000000 		.4byte	.LFB65
 7538 0024 A4010000 		.4byte	.LFE65-.LFB65
 7539 0028 00000000 		.4byte	.LFB66
 7540 002c 14010000 		.4byte	.LFE66-.LFB66
 7541 0030 00000000 		.4byte	.LFB67
 7542 0034 20000000 		.4byte	.LFE67-.LFB67
 7543 0038 00000000 		.4byte	.LFB68
 7544 003c 28000000 		.4byte	.LFE68-.LFB68
 7545 0040 00000000 		.4byte	.LFB69
 7546 0044 0A000000 		.4byte	.LFE69-.LFB69
 7547 0048 00000000 		.4byte	.LFB70
 7548 004c 28000000 		.4byte	.LFE70-.LFB70
 7549 0050 00000000 		.4byte	.LFB71
 7550 0054 50070000 		.4byte	.LFE71-.LFB71
 7551 0058 00000000 		.4byte	.LFB72
 7552 005c 60010000 		.4byte	.LFE72-.LFB72
 7553 0060 00000000 		.4byte	.LFB73
 7554 0064 18000000 		.4byte	.LFE73-.LFB73
 7555 0068 00000000 		.4byte	.LFB74
 7556 006c 18000000 		.4byte	.LFE74-.LFB74
 7557 0070 00000000 		.4byte	.LFB75
 7558 0074 54000000 		.4byte	.LFE75-.LFB75
 7559 0078 00000000 		.4byte	.LFB76
 7560 007c F4000000 		.4byte	.LFE76-.LFB76
 7561 0080 00000000 		.4byte	.LFB77
 7562 0084 18000000 		.4byte	.LFE77-.LFB77
 7563 0088 00000000 		.4byte	.LFB78
 7564 008c 18000000 		.4byte	.LFE78-.LFB78
 7565 0090 00000000 		.4byte	.LFB79
 7566 0094 22000000 		.4byte	.LFE79-.LFB79
 7567 0098 00000000 		.4byte	.LFB80
 7568 009c 1C000000 		.4byte	.LFE80-.LFB80
 7569 00a0 00000000 		.4byte	.LFB81
 7570 00a4 34000000 		.4byte	.LFE81-.LFB81
 7571 00a8 00000000 		.4byte	.LFB82
 7572 00ac 38000000 		.4byte	.LFE82-.LFB82
 7573 00b0 00000000 		.4byte	.LFB83
 7574 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7575 00b8 00000000 		.4byte	.LFB84
 7576 00bc 38000000 		.4byte	.LFE84-.LFB84
 7577 00c0 00000000 		.4byte	.LFB85
 7578 00c4 38000000 		.4byte	.LFE85-.LFB85
 7579 00c8 00000000 		.4byte	.LFB86
 7580 00cc 38000000 		.4byte	.LFE86-.LFB86
 7581 00d0 00000000 		.4byte	.LFB87
 7582 00d4 14000000 		.4byte	.LFE87-.LFB87
 7583 00d8 00000000 		.4byte	.LFB88
 7584 00dc 18000000 		.4byte	.LFE88-.LFB88
 7585 00e0 00000000 		.4byte	.LFB89
 7586 00e4 18000000 		.4byte	.LFE89-.LFB89
 7587 00e8 00000000 		.4byte	.LFB90
 7588 00ec 18000000 		.4byte	.LFE90-.LFB90
 7589 00f0 00000000 		.4byte	.LFB91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 155


 7590 00f4 18000000 		.4byte	.LFE91-.LFB91
 7591 00f8 00000000 		.4byte	.LFB92
 7592 00fc B8000000 		.4byte	.LFE92-.LFB92
 7593 0100 00000000 		.4byte	.LFB93
 7594 0104 78030000 		.4byte	.LFE93-.LFB93
 7595 0108 00000000 		.4byte	.LFB94
 7596 010c 40000000 		.4byte	.LFE94-.LFB94
 7597 0110 00000000 		.4byte	.LFB95
 7598 0114 40000000 		.4byte	.LFE95-.LFB95
 7599 0118 00000000 		.4byte	.LFB96
 7600 011c 30020000 		.4byte	.LFE96-.LFB96
 7601 0120 00000000 		.4byte	.LFB97
 7602 0124 0C000000 		.4byte	.LFE97-.LFB97
 7603 0128 00000000 		.4byte	.LFB98
 7604 012c 4C010000 		.4byte	.LFE98-.LFB98
 7605 0130 00000000 		.4byte	.LFB99
 7606 0134 0C000000 		.4byte	.LFE99-.LFB99
 7607 0138 00000000 		.4byte	.LFB100
 7608 013c C0000000 		.4byte	.LFE100-.LFB100
 7609 0140 00000000 		.4byte	.LFB101
 7610 0144 B8000000 		.4byte	.LFE101-.LFB101
 7611 0148 00000000 		.4byte	.LFB102
 7612 014c 4A000000 		.4byte	.LFE102-.LFB102
 7613 0150 00000000 		.4byte	.LFB103
 7614 0154 68000000 		.4byte	.LFE103-.LFB103
 7615 0158 00000000 		.4byte	.LFB104
 7616 015c 50000000 		.4byte	.LFE104-.LFB104
 7617 0160 00000000 		.4byte	.LFB105
 7618 0164 0C000000 		.4byte	.LFE105-.LFB105
 7619 0168 00000000 		.4byte	0
 7620 016c 00000000 		.4byte	0
 7621              		.section	.debug_ranges,"",%progbits
 7622              	.Ldebug_ranges0:
 7623 0000 00000000 		.4byte	.LFB63
 7624 0004 0C000000 		.4byte	.LFE63
 7625 0008 00000000 		.4byte	.LFB64
 7626 000c 2C000000 		.4byte	.LFE64
 7627 0010 00000000 		.4byte	.LFB65
 7628 0014 A4010000 		.4byte	.LFE65
 7629 0018 00000000 		.4byte	.LFB66
 7630 001c 14010000 		.4byte	.LFE66
 7631 0020 00000000 		.4byte	.LFB67
 7632 0024 20000000 		.4byte	.LFE67
 7633 0028 00000000 		.4byte	.LFB68
 7634 002c 28000000 		.4byte	.LFE68
 7635 0030 00000000 		.4byte	.LFB69
 7636 0034 0A000000 		.4byte	.LFE69
 7637 0038 00000000 		.4byte	.LFB70
 7638 003c 28000000 		.4byte	.LFE70
 7639 0040 00000000 		.4byte	.LFB71
 7640 0044 50070000 		.4byte	.LFE71
 7641 0048 00000000 		.4byte	.LFB72
 7642 004c 60010000 		.4byte	.LFE72
 7643 0050 00000000 		.4byte	.LFB73
 7644 0054 18000000 		.4byte	.LFE73
 7645 0058 00000000 		.4byte	.LFB74
 7646 005c 18000000 		.4byte	.LFE74
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 156


 7647 0060 00000000 		.4byte	.LFB75
 7648 0064 54000000 		.4byte	.LFE75
 7649 0068 00000000 		.4byte	.LFB76
 7650 006c F4000000 		.4byte	.LFE76
 7651 0070 00000000 		.4byte	.LFB77
 7652 0074 18000000 		.4byte	.LFE77
 7653 0078 00000000 		.4byte	.LFB78
 7654 007c 18000000 		.4byte	.LFE78
 7655 0080 00000000 		.4byte	.LFB79
 7656 0084 22000000 		.4byte	.LFE79
 7657 0088 00000000 		.4byte	.LFB80
 7658 008c 1C000000 		.4byte	.LFE80
 7659 0090 00000000 		.4byte	.LFB81
 7660 0094 34000000 		.4byte	.LFE81
 7661 0098 00000000 		.4byte	.LFB82
 7662 009c 38000000 		.4byte	.LFE82
 7663 00a0 00000000 		.4byte	.LFB83
 7664 00a4 4C000000 		.4byte	.LFE83
 7665 00a8 00000000 		.4byte	.LFB84
 7666 00ac 38000000 		.4byte	.LFE84
 7667 00b0 00000000 		.4byte	.LFB85
 7668 00b4 38000000 		.4byte	.LFE85
 7669 00b8 00000000 		.4byte	.LFB86
 7670 00bc 38000000 		.4byte	.LFE86
 7671 00c0 00000000 		.4byte	.LFB87
 7672 00c4 14000000 		.4byte	.LFE87
 7673 00c8 00000000 		.4byte	.LFB88
 7674 00cc 18000000 		.4byte	.LFE88
 7675 00d0 00000000 		.4byte	.LFB89
 7676 00d4 18000000 		.4byte	.LFE89
 7677 00d8 00000000 		.4byte	.LFB90
 7678 00dc 18000000 		.4byte	.LFE90
 7679 00e0 00000000 		.4byte	.LFB91
 7680 00e4 18000000 		.4byte	.LFE91
 7681 00e8 00000000 		.4byte	.LFB92
 7682 00ec B8000000 		.4byte	.LFE92
 7683 00f0 00000000 		.4byte	.LFB93
 7684 00f4 78030000 		.4byte	.LFE93
 7685 00f8 00000000 		.4byte	.LFB94
 7686 00fc 40000000 		.4byte	.LFE94
 7687 0100 00000000 		.4byte	.LFB95
 7688 0104 40000000 		.4byte	.LFE95
 7689 0108 00000000 		.4byte	.LFB96
 7690 010c 30020000 		.4byte	.LFE96
 7691 0110 00000000 		.4byte	.LFB97
 7692 0114 0C000000 		.4byte	.LFE97
 7693 0118 00000000 		.4byte	.LFB98
 7694 011c 4C010000 		.4byte	.LFE98
 7695 0120 00000000 		.4byte	.LFB99
 7696 0124 0C000000 		.4byte	.LFE99
 7697 0128 00000000 		.4byte	.LFB100
 7698 012c C0000000 		.4byte	.LFE100
 7699 0130 00000000 		.4byte	.LFB101
 7700 0134 B8000000 		.4byte	.LFE101
 7701 0138 00000000 		.4byte	.LFB102
 7702 013c 4A000000 		.4byte	.LFE102
 7703 0140 00000000 		.4byte	.LFB103
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 157


 7704 0144 68000000 		.4byte	.LFE103
 7705 0148 00000000 		.4byte	.LFB104
 7706 014c 50000000 		.4byte	.LFE104
 7707 0150 00000000 		.4byte	.LFB105
 7708 0154 0C000000 		.4byte	.LFE105
 7709 0158 00000000 		.4byte	0
 7710 015c 00000000 		.4byte	0
 7711              		.section	.debug_line,"",%progbits
 7712              	.Ldebug_line0:
 7713 0000 BA070000 		.section	.debug_str,"MS",%progbits,1
 7713      02006701 
 7713      00000201 
 7713      FB0E0D00 
 7713      01010101 
 7714              	.LASF142:
 7715 0000 64697265 		.ascii	"direction\000"
 7715      6374696F 
 7715      6E00
 7716              	.LASF191:
 7717 000a 74726163 		.ascii	"tracked_direction\000"
 7717      6B65645F 
 7717      64697265 
 7717      6374696F 
 7717      6E00
 7718              	.LASF199:
 7719 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7719      73657273 
 7719      5C4C6F67 
 7719      616E5C44 
 7719      65736B74 
 7720 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7720      315F436C 
 7720      6173732E 
 7720      63796473 
 7720      6E00
 7721              	.LASF25:
 7722 005b 52545552 		.ascii	"RTURN\000"
 7722      4E00
 7723              	.LASF196:
 7724 0061 72696768 		.ascii	"rightTurnCount\000"
 7724      74547572 
 7724      6E436F75 
 7724      6E7400
 7725              	.LASF39:
 7726 0070 44455354 		.ascii	"DEST_TEST\000"
 7726      5F544553 
 7726      5400
 7727              	.LASF150:
 7728 007a 71756164 		.ascii	"quad_diff1\000"
 7728      5F646966 
 7728      663100
 7729              	.LASF151:
 7730 0085 71756164 		.ascii	"quad_diff2\000"
 7730      5F646966 
 7730      663200
 7731              	.LASF104:
 7732 0090 51756164 		.ascii	"Quad_Dec_response\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 158


 7732      5F446563 
 7732      5F726573 
 7732      706F6E73 
 7732      6500
 7733              	.LASF170:
 7734 00a2 70726576 		.ascii	"prevVoltage\000"
 7734      566F6C74 
 7734      61676500 
 7735              	.LASF153:
 7736 00ae 73746172 		.ascii	"start_turn_count\000"
 7736      745F7475 
 7736      726E5F63 
 7736      6F756E74 
 7736      00
 7737              	.LASF10:
 7738 00bf 756E7369 		.ascii	"unsigned int\000"
 7738      676E6564 
 7738      20696E74 
 7738      00
 7739              	.LASF180:
 7740 00cc 74726163 		.ascii	"track_mode\000"
 7740      6B5F6D6F 
 7740      646500
 7741              	.LASF5:
 7742 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7742      7433325F 
 7742      7400
 7743              	.LASF19:
 7744 00e1 696E7431 		.ascii	"int16\000"
 7744      3600
 7745              	.LASF177:
 7746 00e7 73797374 		.ascii	"system_state\000"
 7746      656D5F73 
 7746      74617465 
 7746      00
 7747              	.LASF24:
 7748 00f4 4C545552 		.ascii	"LTURN\000"
 7748      4E00
 7749              	.LASF71:
 7750 00fa 6E657874 		.ascii	"nextInstruction\000"
 7750      496E7374 
 7750      72756374 
 7750      696F6E00 
 7751              	.LASF160:
 7752 010a 74617267 		.ascii	"target_distance_quad\000"
 7752      65745F64 
 7752      69737461 
 7752      6E63655F 
 7752      71756164 
 7753              	.LASF27:
 7754 011f 54524143 		.ascii	"TRACKING\000"
 7754      4B494E47 
 7754      00
 7755              	.LASF171:
 7756 0128 70726576 		.ascii	"prevVoltage2\000"
 7756      566F6C74 
 7756      61676532 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 159


 7756      00
 7757              	.LASF185:
 7758 0135 73656E73 		.ascii	"sensorsDisabled\000"
 7758      6F727344 
 7758      69736162 
 7758      6C656400 
 7759              	.LASF72:
 7760 0145 7061636B 		.ascii	"packet_bytes\000"
 7760      65745F62 
 7760      79746573 
 7760      00
 7761              	.LASF54:
 7762 0152 67325F78 		.ascii	"g2_xpos\000"
 7762      706F7300 
 7763              	.LASF32:
 7764 015a 6D6F6465 		.ascii	"mode\000"
 7764      00
 7765              	.LASF146:
 7766 015f 71756164 		.ascii	"quad_count1\000"
 7766      5F636F75 
 7766      6E743100 
 7767              	.LASF147:
 7768 016b 71756164 		.ascii	"quad_count2\000"
 7768      5F636F75 
 7768      6E743200 
 7769              	.LASF113:
 7770 0177 74726163 		.ascii	"trackLineU\000"
 7770      6B4C696E 
 7770      655500
 7771              	.LASF190:
 7772 0182 726F626F 		.ascii	"robot_direction\000"
 7772      745F6469 
 7772      72656374 
 7772      696F6E00 
 7773              	.LASF112:
 7774 0192 74726163 		.ascii	"trackLineZ\000"
 7774      6B4C696E 
 7774      655A00
 7775              	.LASF195:
 7776 019d 6C656674 		.ascii	"leftTurnCount\000"
 7776      5475726E 
 7776      436F756E 
 7776      7400
 7777              	.LASF183:
 7778 01ab 73706565 		.ascii	"speed\000"
 7778      6400
 7779              	.LASF36:
 7780 01b1 53515541 		.ascii	"SQUARE_TRACK\000"
 7780      52455F54 
 7780      5241434B 
 7780      00
 7781              	.LASF138:
 7782 01be 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7782      5F72665F 
 7782      7472616E 
 7782      736D6973 
 7782      73696F6E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 160


 7783              	.LASF139:
 7784 01da 666C6167 		.ascii	"flag_print_rf\000"
 7784      5F707269 
 7784      6E745F72 
 7784      6600
 7785              	.LASF179:
 7786 01e8 6D6F7665 		.ascii	"movement_state\000"
 7786      6D656E74 
 7786      5F737461 
 7786      746500
 7787              	.LASF28:
 7788 01f7 54524143 		.ascii	"TRACKING_U\000"
 7788      4B494E47 
 7788      5F5500
 7789              	.LASF94:
 7790 0202 696E6974 		.ascii	"initForward\000"
 7790      466F7277 
 7790      61726400 
 7791              	.LASF14:
 7792 020e 75696E74 		.ascii	"uint32_t\000"
 7792      33325F74 
 7792      00
 7793              	.LASF57:
 7794 0217 67325F64 		.ascii	"g2_direction\000"
 7794      69726563 
 7794      74696F6E 
 7794      00
 7795              	.LASF60:
 7796 0224 6973725F 		.ascii	"isr_quad1\000"
 7796      71756164 
 7796      3100
 7797              	.LASF20:
 7798 022e 666C6F61 		.ascii	"float\000"
 7798      7400
 7799              	.LASF79:
 7800 0234 73657453 		.ascii	"setSpeed\000"
 7800      70656564 
 7800      00
 7801              	.LASF175:
 7802 023d 75736242 		.ascii	"usbBuffer\000"
 7802      75666665 
 7802      7200
 7803              	.LASF42:
 7804 0247 696E6465 		.ascii	"index\000"
 7804      7800
 7805              	.LASF23:
 7806 024d 44524956 		.ascii	"DRIVE\000"
 7806      4500
 7807              	.LASF74:
 7808 0253 73747269 		.ascii	"string_packet\000"
 7808      6E675F70 
 7808      61636B65 
 7808      7400
 7809              	.LASF103:
 7810 0261 6368616E 		.ascii	"changeToBT\000"
 7810      6765546F 
 7810      425400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 161


 7811              	.LASF82:
 7812 026c 636F756E 		.ascii	"countsLeft\000"
 7812      74734C65 
 7812      667400
 7813              	.LASF87:
 7814 0277 64726976 		.ascii	"driveForwards\000"
 7814      65466F72 
 7814      77617264 
 7814      7300
 7815              	.LASF89:
 7816 0285 7475726E 		.ascii	"turnLeft\000"
 7816      4C656674 
 7816      00
 7817              	.LASF9:
 7818 028e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7818      206C6F6E 
 7818      6720756E 
 7818      7369676E 
 7818      65642069 
 7819              	.LASF135:
 7820 02a5 666C6167 		.ascii	"flag_packet\000"
 7820      5F706163 
 7820      6B657400 
 7821              	.LASF169:
 7822 02b1 66726F6E 		.ascii	"frontSensors\000"
 7822      7453656E 
 7822      736F7273 
 7822      00
 7823              	.LASF66:
 7824 02be 6973725F 		.ascii	"isr_turn_timer\000"
 7824      7475726E 
 7824      5F74696D 
 7824      657200
 7825              	.LASF102:
 7826 02cd 6368616E 		.ascii	"changeToRF\000"
 7826      6765546F 
 7826      524600
 7827              	.LASF91:
 7828 02d8 696E6974 		.ascii	"initTurnLeft\000"
 7828      5475726E 
 7828      4C656674 
 7828      00
 7829              	.LASF168:
 7830 02e5 706F7274 		.ascii	"portOpen\000"
 7830      4F70656E 
 7830      00
 7831              	.LASF95:
 7832 02ee 696E6974 		.ascii	"initBrake\000"
 7832      4272616B 
 7832      6500
 7833              	.LASF131:
 7834 02f8 666C6167 		.ascii	"flag_ts_update\000"
 7834      5F74735F 
 7834      75706461 
 7834      746500
 7835              	.LASF115:
 7836 0307 7363616C 		.ascii	"scalingFactor\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 162


 7836      696E6746 
 7836      6163746F 
 7836      7200
 7837              	.LASF105:
 7838 0315 6C656674 		.ascii	"leftSpeed\000"
 7838      53706565 
 7838      6400
 7839              	.LASF130:
 7840 031f 666C6167 		.ascii	"flag_ts_enc\000"
 7840      5F74735F 
 7840      656E6300 
 7841              	.LASF181:
 7842 032b 62797465 		.ascii	"byteCount\000"
 7842      436F756E 
 7842      7400
 7843              	.LASF68:
 7844 0335 61637469 		.ascii	"actionDebounce\000"
 7844      6F6E4465 
 7844      626F756E 
 7844      636500
 7845              	.LASF63:
 7846 0344 62757474 		.ascii	"button\000"
 7846      6F6E00
 7847              	.LASF178:
 7848 034b 70726576 		.ascii	"prev_movement_state\000"
 7848      5F6D6F76 
 7848      656D656E 
 7848      745F7374 
 7848      61746500 
 7849              	.LASF121:
 7850 035f 73656E73 		.ascii	"sensorVals\000"
 7850      6F725661 
 7850      6C7300
 7851              	.LASF117:
 7852 036a 72657375 		.ascii	"result_str\000"
 7852      6C745F73 
 7852      747200
 7853              	.LASF124:
 7854 0375 75617274 		.ascii	"uart_set_PWM\000"
 7854      5F736574 
 7854      5F50574D 
 7854      00
 7855              	.LASF98:
 7856 0382 696E6974 		.ascii	"inittrackLineZ\000"
 7856      74726163 
 7856      6B4C696E 
 7856      655A00
 7857              	.LASF44:
 7858 0391 726F626F 		.ascii	"robot_ypos\000"
 7858      745F7970 
 7858      6F7300
 7859              	.LASF129:
 7860 039c 74735F64 		.ascii	"ts_display\000"
 7860      6973706C 
 7860      617900
 7861              	.LASF114:
 7862 03a7 7072696E 		.ascii	"print_ADC\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 163


 7862      745F4144 
 7862      4300
 7863              	.LASF107:
 7864 03b1 7363616C 		.ascii	"scalingLeft\000"
 7864      696E674C 
 7864      65667400 
 7865              	.LASF12:
 7866 03bd 63686172 		.ascii	"char\000"
 7866      00
 7867              	.LASF48:
 7868 03c2 67305F73 		.ascii	"g0_speed\000"
 7868      70656564 
 7868      00
 7869              	.LASF157:
 7870 03cb 72696768 		.ascii	"rightSpeedLimit\000"
 7870      74537065 
 7870      65644C69 
 7870      6D697400 
 7871              	.LASF75:
 7872 03db 7365744C 		.ascii	"setLeftDir\000"
 7872      65667444 
 7872      697200
 7873              	.LASF184:
 7874 03e6 696E7374 		.ascii	"instructionCount\000"
 7874      72756374 
 7874      696F6E43 
 7874      6F756E74 
 7874      00
 7875              	.LASF90:
 7876 03f7 7475726E 		.ascii	"turnU\000"
 7876      5500
 7877              	.LASF55:
 7878 03fd 67325F79 		.ascii	"g2_ypos\000"
 7878      706F7300 
 7879              	.LASF61:
 7880 0405 64697374 		.ascii	"distTurned\000"
 7880      5475726E 
 7880      656400
 7881              	.LASF16:
 7882 0410 75696E74 		.ascii	"uint16\000"
 7882      313600
 7883              	.LASF18:
 7884 0417 696E7438 		.ascii	"int8\000"
 7884      00
 7885              	.LASF70:
 7886 041c 6E657874 		.ascii	"nextStepDist\000"
 7886      53746570 
 7886      44697374 
 7886      00
 7887              	.LASF53:
 7888 0429 67315F64 		.ascii	"g1_direction\000"
 7888      69726563 
 7888      74696F6E 
 7888      00
 7889              	.LASF187:
 7890 0436 70617468 		.ascii	"path\000"
 7890      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 164


 7891              	.LASF76:
 7892 043b 73657452 		.ascii	"setRightDir\000"
 7892      69676874 
 7892      44697200 
 7893              	.LASF34:
 7894 0447 43555256 		.ascii	"CURVE_TRACK\000"
 7894      455F5452 
 7894      41434B00 
 7895              	.LASF109:
 7896 0453 696E7465 		.ascii	"interCalc\000"
 7896      7243616C 
 7896      6300
 7897              	.LASF144:
 7898 045d 42545F45 		.ascii	"BT_ENABLED\000"
 7898      4E41424C 
 7898      454400
 7899              	.LASF81:
 7900 0468 72696768 		.ascii	"right\000"
 7900      7400
 7901              	.LASF164:
 7902 046e 696E6974 		.ascii	"initial_pos_valid\000"
 7902      69616C5F 
 7902      706F735F 
 7902      76616C69 
 7902      6400
 7903              	.LASF8:
 7904 0480 6C6F6E67 		.ascii	"long long int\000"
 7904      206C6F6E 
 7904      6720696E 
 7904      7400
 7905              	.LASF176:
 7906 048e 62756666 		.ascii	"buffer_state\000"
 7906      65725F73 
 7906      74617465 
 7906      00
 7907              	.LASF50:
 7908 049b 67315F78 		.ascii	"g1_xpos\000"
 7908      706F7300 
 7909              	.LASF96:
 7910 04a3 696E6974 		.ascii	"initTrack\000"
 7910      54726163 
 7910      6B00
 7911              	.LASF69:
 7912 04ad 6E657874 		.ascii	"nextStep\000"
 7912      53746570 
 7912      00
 7913              	.LASF197:
 7914 04b6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7914      4320342E 
 7914      392E3320 
 7914      32303135 
 7914      30333033 
 7915 04e9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7915      20726576 
 7915      6973696F 
 7915      6E203232 
 7915      31323230 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 165


 7916 051c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7916      66756E63 
 7916      74696F6E 
 7916      2D736563 
 7916      74696F6E 
 7917              	.LASF56:
 7918 0544 67325F73 		.ascii	"g2_speed\000"
 7918      70656564 
 7918      00
 7919              	.LASF47:
 7920 054d 67305F79 		.ascii	"g0_ypos\000"
 7920      706F7300 
 7921              	.LASF100:
 7922 0555 72665F63 		.ascii	"rf_char\000"
 7922      68617200 
 7923              	.LASF186:
 7924 055d 666F6F64 		.ascii	"food_list\000"
 7924      5F6C6973 
 7924      7400
 7925              	.LASF143:
 7926 0567 42494E5F 		.ascii	"BIN_ENABLED\000"
 7926      454E4142 
 7926      4C454400 
 7927              	.LASF106:
 7928 0573 72696768 		.ascii	"rightSpeed\000"
 7928      74537065 
 7928      656400
 7929              	.LASF128:
 7930 057e 74735F73 		.ascii	"ts_speed\000"
 7930      70656564 
 7930      00
 7931              	.LASF17:
 7932 0587 75696E74 		.ascii	"uint32\000"
 7932      333200
 7933              	.LASF193:
 7934 058e 696E7374 		.ascii	"instructions\000"
 7934      72756374 
 7934      696F6E73 
 7934      00
 7935              	.LASF83:
 7936 059b 636F756E 		.ascii	"countsRight\000"
 7936      74735269 
 7936      67687400 
 7937              	.LASF200:
 7938 05a7 64617461 		.ascii	"data_main\000"
 7938      5F6D6169 
 7938      6E00
 7939              	.LASF116:
 7940 05b1 636F6E76 		.ascii	"converted_val\000"
 7940      65727465 
 7940      645F7661 
 7940      6C00
 7941              	.LASF188:
 7942 05bf 73746172 		.ascii	"start\000"
 7942      7400
 7943              	.LASF41:
 7944 05c5 72737369 		.ascii	"rssi\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 166


 7944      00
 7945              	.LASF111:
 7946 05ca 74726163 		.ascii	"trackLine\000"
 7946      6B4C696E 
 7946      6500
 7947              	.LASF49:
 7948 05d4 67305F64 		.ascii	"g0_direction\000"
 7948      69726563 
 7948      74696F6E 
 7948      00
 7949              	.LASF140:
 7950 05e1 666C6167 		.ascii	"flag_receive_ADC\000"
 7950      5F726563 
 7950      65697665 
 7950      5F414443 
 7950      00
 7951              	.LASF26:
 7952 05f2 53544F50 		.ascii	"STOPPED\000"
 7952      50454400 
 7953              	.LASF101:
 7954 05fa 42545F72 		.ascii	"BT_rxInt\000"
 7954      78496E74 
 7954      00
 7955              	.LASF22:
 7956 0603 6C6F6E67 		.ascii	"long double\000"
 7956      20646F75 
 7956      626C6500 
 7957              	.LASF64:
 7958 060f 6973725F 		.ascii	"isr_adcTimer\000"
 7958      61646354 
 7958      696D6572 
 7958      00
 7959              	.LASF154:
 7960 061c 6C656674 		.ascii	"left_duty_cycle\000"
 7960      5F647574 
 7960      795F6379 
 7960      636C6500 
 7961              	.LASF65:
 7962 062c 6973725F 		.ascii	"isr_deadzone\000"
 7962      64656164 
 7962      7A6F6E65 
 7962      00
 7963              	.LASF132:
 7964 0639 666C6167 		.ascii	"flag_ts_speed\000"
 7964      5F74735F 
 7964      73706565 
 7964      6400
 7965              	.LASF137:
 7966 0647 64617461 		.ascii	"dataready_flag\000"
 7966      72656164 
 7966      795F666C 
 7966      616700
 7967              	.LASF166:
 7968 0656 696E6974 		.ascii	"initial_y_pos\000"
 7968      69616C5F 
 7968      795F706F 
 7968      7300
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 167


 7969              	.LASF134:
 7970 0664 666C6167 		.ascii	"flag_rx\000"
 7970      5F727800 
 7971              	.LASF2:
 7972 066c 73686F72 		.ascii	"short int\000"
 7972      7420696E 
 7972      7400
 7973              	.LASF141:
 7974 0676 6164635F 		.ascii	"adc_result\000"
 7974      72657375 
 7974      6C7400
 7975              	.LASF93:
 7976 0681 696E6974 		.ascii	"initTurnU\000"
 7976      5475726E 
 7976      5500
 7977              	.LASF145:
 7978 068b 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7978      5F63616C 
 7978      635F7768 
 7978      65656C73 
 7978      70656564 
 7979              	.LASF4:
 7980 06a0 6C6F6E67 		.ascii	"long int\000"
 7980      20696E74 
 7980      00
 7981              	.LASF92:
 7982 06a9 696E6974 		.ascii	"initTurnRight\000"
 7982      5475726E 
 7982      52696768 
 7982      7400
 7983              	.LASF35:
 7984 06b7 555F5452 		.ascii	"U_TRACK\000"
 7984      41434B00 
 7985              	.LASF125:
 7986 06bf 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7986      52784275 
 7986      66666572 
 7986      00
 7987              	.LASF119:
 7988 06cc 7072696E 		.ascii	"printString\000"
 7988      74537472 
 7988      696E6700 
 7989              	.LASF99:
 7990 06d8 7278496E 		.ascii	"rxInt\000"
 7990      7400
 7991              	.LASF127:
 7992 06de 74735F75 		.ascii	"ts_update\000"
 7992      70646174 
 7992      6500
 7993              	.LASF33:
 7994 06e8 4E4F5F54 		.ascii	"NO_TRACK\000"
 7994      5241434B 
 7994      00
 7995              	.LASF152:
 7996 06f1 64656164 		.ascii	"deadzone\000"
 7996      7A6F6E65 
 7996      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 168


 7997              	.LASF156:
 7998 06fa 6C656674 		.ascii	"leftSpeedLimit\000"
 7998      53706565 
 7998      644C696D 
 7998      697400
 7999              	.LASF40:
 8000 0709 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8000      54524156 
 8000      45525345 
 8000      00
 8001              	.LASF29:
 8002 0716 54524143 		.ascii	"TRACKING_SOFT\000"
 8002      4B494E47 
 8002      5F534F46 
 8002      5400
 8003              	.LASF162:
 8004 0724 6F766572 		.ascii	"overshot_target\000"
 8004      73686F74 
 8004      5F746172 
 8004      67657400 
 8005              	.LASF80:
 8006 0734 6C656674 		.ascii	"left\000"
 8006      00
 8007              	.LASF159:
 8008 0739 61636375 		.ascii	"accum_dist\000"
 8008      6D5F6469 
 8008      737400
 8009              	.LASF122:
 8010 0744 75736250 		.ascii	"usbPutString\000"
 8010      75745374 
 8010      72696E67 
 8010      00
 8011              	.LASF88:
 8012 0751 7475726E 		.ascii	"turnRight\000"
 8012      52696768 
 8012      7400
 8013              	.LASF51:
 8014 075b 67315F79 		.ascii	"g1_ypos\000"
 8014      706F7300 
 8015              	.LASF59:
 8016 0763 6164635F 		.ascii	"adc_isr\000"
 8016      69737200 
 8017              	.LASF120:
 8018 076b 72656164 		.ascii	"readFrontSensors\000"
 8018      46726F6E 
 8018      7453656E 
 8018      736F7273 
 8018      00
 8019              	.LASF163:
 8020 077c 71756164 		.ascii	"quad_per_cm\000"
 8020      5F706572 
 8020      5F636D00 
 8021              	.LASF158:
 8022 0788 74617267 		.ascii	"target_distance_cm\000"
 8022      65745F64 
 8022      69737461 
 8022      6E63655F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 169


 8022      636D00
 8023              	.LASF11:
 8024 079b 73697A65 		.ascii	"sizetype\000"
 8024      74797065 
 8024      00
 8025              	.LASF7:
 8026 07a4 6C6F6E67 		.ascii	"long unsigned int\000"
 8026      20756E73 
 8026      69676E65 
 8026      6420696E 
 8026      7400
 8027              	.LASF73:
 8028 07b6 62797465 		.ascii	"byte_packet\000"
 8028      5F706163 
 8028      6B657400 
 8029              	.LASF13:
 8030 07c2 696E7433 		.ascii	"int32_t\000"
 8030      325F7400 
 8031              	.LASF182:
 8032 07ca 7061636B 		.ascii	"packet\000"
 8032      657400
 8033              	.LASF194:
 8034 07d1 696E7374 		.ascii	"instructionLength\000"
 8034      72756374 
 8034      696F6E4C 
 8034      656E6774 
 8034      6800
 8035              	.LASF43:
 8036 07e3 726F626F 		.ascii	"robot_xpos\000"
 8036      745F7870 
 8036      6F7300
 8037              	.LASF86:
 8038 07ee 6272616B 		.ascii	"brakeMotor\000"
 8038      654D6F74 
 8038      6F7200
 8039              	.LASF192:
 8040 07f9 666F6F64 		.ascii	"food_length\000"
 8040      5F6C656E 
 8040      67746800 
 8041              	.LASF174:
 8042 0805 656E7472 		.ascii	"entry\000"
 8042      7900
 8043              	.LASF1:
 8044 080b 756E7369 		.ascii	"unsigned char\000"
 8044      676E6564 
 8044      20636861 
 8044      7200
 8045              	.LASF6:
 8046 0819 5F5F7569 		.ascii	"__uint32_t\000"
 8046      6E743332 
 8046      5F7400
 8047              	.LASF173:
 8048 0824 6C696E65 		.ascii	"line\000"
 8048      00
 8049              	.LASF161:
 8050 0829 72656163 		.ascii	"reached_target\000"
 8050      6865645F 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 170


 8050      74617267 
 8050      657400
 8051              	.LASF62:
 8052 0838 53746F70 		.ascii	"Stop_on_line\000"
 8052      5F6F6E5F 
 8052      6C696E65 
 8052      00
 8053              	.LASF126:
 8054 0845 74735F65 		.ascii	"ts_enc\000"
 8054      6E6300
 8055              	.LASF167:
 8056 084c 6272616B 		.ascii	"brakeFlag\000"
 8056      65466C61 
 8056      6700
 8057              	.LASF133:
 8058 0856 666C6167 		.ascii	"flag_ts_display\000"
 8058      5F74735F 
 8058      64697370 
 8058      6C617900 
 8059              	.LASF31:
 8060 0866 73746174 		.ascii	"state\000"
 8060      6500
 8061              	.LASF78:
 8062 086c 72657665 		.ascii	"reverseDirection\000"
 8062      72736544 
 8062      69726563 
 8062      74696F6E 
 8062      00
 8063              	.LASF84:
 8064 087d 6272616B 		.ascii	"brakeLeft\000"
 8064      654C6566 
 8064      7400
 8065              	.LASF172:
 8066 0887 64697370 		.ascii	"displaystring\000"
 8066      6C617973 
 8066      7472696E 
 8066      6700
 8067              	.LASF148:
 8068 0895 6C617374 		.ascii	"last_quad_count1\000"
 8068      5F717561 
 8068      645F636F 
 8068      756E7431 
 8068      00
 8069              	.LASF149:
 8070 08a6 6C617374 		.ascii	"last_quad_count2\000"
 8070      5F717561 
 8070      645F636F 
 8070      756E7432 
 8070      00
 8071              	.LASF189:
 8072 08b7 64657374 		.ascii	"destination\000"
 8072      696E6174 
 8072      696F6E00 
 8073              	.LASF123:
 8074 08c3 75736250 		.ascii	"usbPutChar\000"
 8074      75744368 
 8074      617200
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 171


 8075              	.LASF0:
 8076 08ce 7369676E 		.ascii	"signed char\000"
 8076      65642063 
 8076      68617200 
 8077              	.LASF3:
 8078 08da 73686F72 		.ascii	"short unsigned int\000"
 8078      7420756E 
 8078      7369676E 
 8078      65642069 
 8078      6E7400
 8079              	.LASF45:
 8080 08ed 726F626F 		.ascii	"robot_orientation\000"
 8080      745F6F72 
 8080      69656E74 
 8080      6174696F 
 8080      6E00
 8081              	.LASF37:
 8082 08ff 51554144 		.ascii	"QUAD_STOP\000"
 8082      5F53544F 
 8082      5000
 8083              	.LASF67:
 8084 0909 6D61696E 		.ascii	"main\000"
 8084      00
 8085              	.LASF58:
 8086 090e 42545F74 		.ascii	"BT_txInt\000"
 8086      78496E74 
 8086      00
 8087              	.LASF110:
 8088 0917 6E657874 		.ascii	"nextSpeed\000"
 8088      53706565 
 8088      6400
 8089              	.LASF15:
 8090 0921 75696E74 		.ascii	"uint8\000"
 8090      3800
 8091              	.LASF21:
 8092 0927 646F7562 		.ascii	"double\000"
 8092      6C6500
 8093              	.LASF155:
 8094 092e 72696768 		.ascii	"right_duty_cycle\000"
 8094      745F6475 
 8094      74795F63 
 8094      79636C65 
 8094      00
 8095              	.LASF38:
 8096 093f 52465F53 		.ascii	"RF_STOP\000"
 8096      544F5000 
 8097              	.LASF77:
 8098 0947 68616E64 		.ascii	"handle_rx_binary\000"
 8098      6C655F72 
 8098      785F6269 
 8098      6E617279 
 8098      00
 8099              	.LASF118:
 8100 0958 7072696E 		.ascii	"print_RF\000"
 8100      745F5246 
 8100      00
 8101              	.LASF30:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\cc9h6sED.s 			page 172


 8102 0961 55545552 		.ascii	"UTURN\000"
 8102      4E00
 8103              	.LASF46:
 8104 0967 67305F78 		.ascii	"g0_xpos\000"
 8104      706F7300 
 8105              	.LASF108:
 8106 096f 7363616C 		.ascii	"scalingRight\000"
 8106      696E6752 
 8106      69676874 
 8106      00
 8107              	.LASF136:
 8108 097c 666C6167 		.ascii	"flag_KB_string\000"
 8108      5F4B425F 
 8108      73747269 
 8108      6E6700
 8109              	.LASF52:
 8110 098b 67315F73 		.ascii	"g1_speed\000"
 8110      70656564 
 8110      00
 8111              	.LASF198:
 8112 0994 2E5C6D61 		.ascii	".\\main.c\000"
 8112      696E2E63 
 8112      00
 8113              	.LASF165:
 8114 099d 696E6974 		.ascii	"initial_x_pos\000"
 8114      69616C5F 
 8114      785F706F 
 8114      7300
 8115              	.LASF85:
 8116 09ab 6272616B 		.ascii	"brakeRight\000"
 8116      65526967 
 8116      687400
 8117              	.LASF97:
 8118 09b6 696E6974 		.ascii	"initTrackU\000"
 8118      54726163 
 8118      6B5500
 8119              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
