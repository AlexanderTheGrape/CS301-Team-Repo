ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	movement_state
 204              		.type	movement_state, %object
 205              		.size	movement_state, 1
 206              	movement_state:
 207 0044 03       		.byte	3
 208              		.global	byteCount
 209 0045 000000   		.bss
 210              		.type	byteCount, %object
 211              		.size	byteCount, 1
 212              	byteCount:
 213 002c 00       		.space	1
 214              		.comm	packet,2,4
 215 002d 00       		.section	.text.handle_rx_binary,"ax",%progbits
 216              		.align	2
 217              		.global	handle_rx_binary
 218              		.thumb
 219              		.thumb_func
 220              		.type	handle_rx_binary, %function
 221              	handle_rx_binary:
 222              	.LFB63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 5


 223              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** 
  40:.\main.c      **** void handle_rx_binary()
  41:.\main.c      **** {
 224              		.loc 1 41 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 89B0     		sub	sp, sp, #36
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  42:.\main.c      ****     if(flag_rx == 1)
 236              		.loc 1 42 0
 237 0006 524B     		ldr	r3, .L21
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 6


 238 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 000a 012B     		cmp	r3, #1
 240 000c 40F09A80 		bne	.L1
 241              	.LBB2:
  43:.\main.c      ****     {    
  44:.\main.c      ****         flag_rx = 0;
 242              		.loc 1 44 0
 243 0010 4F4B     		ldr	r3, .L21
 244 0012 0022     		movs	r2, #0
 245 0014 1A70     		strb	r2, [r3]
  45:.\main.c      ****         
  46:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 246              		.loc 1 46 0
 247 0016 4F4B     		ldr	r3, .L21+4
 248 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 249 001a 1B02     		lsls	r3, r3, #8
 250 001c 9AB2     		uxth	r2, r3
 251 001e 4D4B     		ldr	r3, .L21+4
 252 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0022 9BB2     		uxth	r3, r3
 254 0024 1343     		orrs	r3, r3, r2
 255 0026 9BB2     		uxth	r3, r3
 256 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  47:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  48:.\main.c      ****         char byte_packet[12];
  49:.\main.c      ****         char string_packet[12];
  50:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  51:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  52:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  53:.\main.c      ****         //usbPutString(string_packet);
  54:.\main.c      ****        // usbPutString(string_packet);
  55:.\main.c      ****        // usbPutChar(' ');
  56:.\main.c      ****         
  57:.\main.c      ****         switch(byteCount)
 257              		.loc 1 57 0
 258 002a 4B4B     		ldr	r3, .L21+8
 259 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 002e 043B     		subs	r3, r3, #4
 261 0030 1E2B     		cmp	r3, #30
 262 0032 00F28780 		bhi	.L1
 263 0036 01A2     		adr	r2, .L5
 264 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265              		.p2align 2
 266              	.L5:
 267 003c B9000000 		.word	.L4+1
 268 0040 45010000 		.word	.L1+1
 269 0044 CD000000 		.word	.L6+1
 270 0048 45010000 		.word	.L1+1
 271 004c D5000000 		.word	.L7+1
 272 0050 45010000 		.word	.L1+1
 273 0054 DD000000 		.word	.L8+1
 274 0058 45010000 		.word	.L1+1
 275 005c E5000000 		.word	.L9+1
 276 0060 45010000 		.word	.L1+1
 277 0064 ED000000 		.word	.L10+1
 278 0068 45010000 		.word	.L1+1
 279 006c F5000000 		.word	.L11+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 7


 280 0070 45010000 		.word	.L1+1
 281 0074 FD000000 		.word	.L12+1
 282 0078 45010000 		.word	.L1+1
 283 007c 05010000 		.word	.L13+1
 284 0080 45010000 		.word	.L1+1
 285 0084 0D010000 		.word	.L14+1
 286 0088 45010000 		.word	.L1+1
 287 008c 15010000 		.word	.L15+1
 288 0090 45010000 		.word	.L1+1
 289 0094 1D010000 		.word	.L16+1
 290 0098 45010000 		.word	.L1+1
 291 009c 25010000 		.word	.L17+1
 292 00a0 45010000 		.word	.L1+1
 293 00a4 2D010000 		.word	.L18+1
 294 00a8 45010000 		.word	.L1+1
 295 00ac 35010000 		.word	.L19+1
 296 00b0 45010000 		.word	.L1+1
 297 00b4 3D010000 		.word	.L20+1
 298              		.p2align 1
 299              	.L4:
  58:.\main.c      ****         {
  59:.\main.c      ****             case 4:
  60:.\main.c      ****                 //usbPutString("RSSI:");
  61:.\main.c      ****                 //usbPutString(byte_packet);
  62:.\main.c      ****                 //usbPutString("\r\n");
  63:.\main.c      ****                 buffer_state.rssi = packet[0];
 300              		.loc 1 63 0
 301 00b8 264B     		ldr	r3, .L21+4
 302 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00bc DAB2     		uxtb	r2, r3
 304 00be 274B     		ldr	r3, .L21+12
 305 00c0 1A70     		strb	r2, [r3]
  64:.\main.c      ****                 buffer_state.index = packet[1];
 306              		.loc 1 64 0
 307 00c2 244B     		ldr	r3, .L21+4
 308 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 309 00c6 254B     		ldr	r3, .L21+12
 310 00c8 5A70     		strb	r2, [r3, #1]
  65:.\main.c      ****             break;
 311              		.loc 1 65 0
 312 00ca 3BE0     		b	.L1
 313              	.L6:
  66:.\main.c      ****             case 6:
  67:.\main.c      ****                 //usbPutString("robot_x:");
  68:.\main.c      ****                 //usbPutString(string_packet);
  69:.\main.c      ****                 //usbPutString("\r\n");
  70:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 314              		.loc 1 70 0
 315 00cc FA8B     		ldrh	r2, [r7, #30]
 316 00ce 234B     		ldr	r3, .L21+12
 317 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  71:.\main.c      ****             break;
 318              		.loc 1 71 0
 319 00d2 37E0     		b	.L1
 320              	.L7:
  72:.\main.c      ****             case 8:
  73:.\main.c      ****                 //usbPutString("robot_y:");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 8


  74:.\main.c      ****                 //usbPutString(string_packet);
  75:.\main.c      ****                 //usbPutString("\r\n");
  76:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 321              		.loc 1 76 0
 322 00d4 FA8B     		ldrh	r2, [r7, #30]
 323 00d6 214B     		ldr	r3, .L21+12
 324 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  77:.\main.c      ****             break;
 325              		.loc 1 77 0
 326 00da 33E0     		b	.L1
 327              	.L8:
  78:.\main.c      ****             case 10:
  79:.\main.c      ****                 //usbPutString("robot_dir:");
  80:.\main.c      ****                 //usbPutString(string_packet);
  81:.\main.c      ****                 //usbPutString("\r\n");
  82:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 328              		.loc 1 82 0
 329 00dc FA8B     		ldrh	r2, [r7, #30]
 330 00de 1F4B     		ldr	r3, .L21+12
 331 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  83:.\main.c      ****             break;
 332              		.loc 1 83 0
 333 00e2 2FE0     		b	.L1
 334              	.L9:
  84:.\main.c      ****             case 12:
  85:.\main.c      ****                 //usbPutString("g0_x:");
  86:.\main.c      ****                 //usbPutString(string_packet);
  87:.\main.c      ****                 //usbPutString("\r\n");
  88:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 335              		.loc 1 88 0
 336 00e4 FA8B     		ldrh	r2, [r7, #30]
 337 00e6 1D4B     		ldr	r3, .L21+12
 338 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  89:.\main.c      ****             break;
 339              		.loc 1 89 0
 340 00ea 2BE0     		b	.L1
 341              	.L10:
  90:.\main.c      ****             case 14:
  91:.\main.c      ****                 //usbPutString("g0_y:");
  92:.\main.c      ****                 //usbPutString(string_packet);
  93:.\main.c      ****                 //usbPutString("\r\n");
  94:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 342              		.loc 1 94 0
 343 00ec FA8B     		ldrh	r2, [r7, #30]
 344 00ee 1B4B     		ldr	r3, .L21+12
 345 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  95:.\main.c      ****             break;
 346              		.loc 1 95 0
 347 00f2 27E0     		b	.L1
 348              	.L11:
  96:.\main.c      ****             case 16:
  97:.\main.c      ****                 //usbPutString("g0_speed:");
  98:.\main.c      ****                 //usbPutString(string_packet);
  99:.\main.c      ****                 //usbPutString("\r\n");
 100:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 349              		.loc 1 100 0
 350 00f4 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 9


 351 00f6 194B     		ldr	r3, .L21+12
 352 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 101:.\main.c      ****             break;
 353              		.loc 1 101 0
 354 00fa 23E0     		b	.L1
 355              	.L12:
 102:.\main.c      ****             case 18:
 103:.\main.c      ****                 //usbPutString("g1_dir:");
 104:.\main.c      ****                 //usbPutString(string_packet);
 105:.\main.c      ****                 //usbPutString("\r\n");
 106:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 356              		.loc 1 106 0
 357 00fc FA8B     		ldrh	r2, [r7, #30]
 358 00fe 174B     		ldr	r3, .L21+12
 359 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 107:.\main.c      ****             break;
 360              		.loc 1 107 0
 361 0102 1FE0     		b	.L1
 362              	.L13:
 108:.\main.c      ****             case 20:
 109:.\main.c      ****                 //usbPutString("g1_x:");
 110:.\main.c      ****                 //usbPutString(string_packet);
 111:.\main.c      ****                 //usbPutString("\r\n");
 112:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 363              		.loc 1 112 0
 364 0104 FA8B     		ldrh	r2, [r7, #30]
 365 0106 154B     		ldr	r3, .L21+12
 366 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 113:.\main.c      ****             break;
 367              		.loc 1 113 0
 368 010a 1BE0     		b	.L1
 369              	.L14:
 114:.\main.c      ****             case 22:
 115:.\main.c      ****                 //usbPutString("g1_y:");
 116:.\main.c      ****                 //usbPutString(string_packet);
 117:.\main.c      ****                 //usbPutString("\r\n");
 118:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 370              		.loc 1 118 0
 371 010c FA8B     		ldrh	r2, [r7, #30]
 372 010e 134B     		ldr	r3, .L21+12
 373 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 119:.\main.c      ****             break;
 374              		.loc 1 119 0
 375 0112 17E0     		b	.L1
 376              	.L15:
 120:.\main.c      ****             case 24:
 121:.\main.c      ****                 //usbPutString("g1_speed:");
 122:.\main.c      ****                 //usbPutString(string_packet);
 123:.\main.c      ****                 //usbPutString("\r\n");
 124:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 377              		.loc 1 124 0
 378 0114 FA8B     		ldrh	r2, [r7, #30]
 379 0116 114B     		ldr	r3, .L21+12
 380 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 125:.\main.c      ****             break;
 381              		.loc 1 125 0
 382 011a 13E0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 10


 383              	.L16:
 126:.\main.c      ****             case 26:
 127:.\main.c      ****                 //usbPutString("g1_dir:");
 128:.\main.c      ****                 //usbPutString(string_packet);
 129:.\main.c      ****                 //usbPutString("\r\n");
 130:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 384              		.loc 1 130 0
 385 011c FA8B     		ldrh	r2, [r7, #30]
 386 011e 0F4B     		ldr	r3, .L21+12
 387 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 131:.\main.c      ****             break;
 388              		.loc 1 131 0
 389 0122 0FE0     		b	.L1
 390              	.L17:
 132:.\main.c      ****             case 28:
 133:.\main.c      ****                 //usbPutString("g2_x:");
 134:.\main.c      ****                 //usbPutString(string_packet);
 135:.\main.c      ****                 //usbPutString("\r\n");
 136:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 391              		.loc 1 136 0
 392 0124 FA8B     		ldrh	r2, [r7, #30]
 393 0126 0D4B     		ldr	r3, .L21+12
 394 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 137:.\main.c      ****             break;
 395              		.loc 1 137 0
 396 012a 0BE0     		b	.L1
 397              	.L18:
 138:.\main.c      ****             case 30:
 139:.\main.c      ****                 //usbPutString("g2_y:");
 140:.\main.c      ****                 //usbPutString(string_packet);
 141:.\main.c      ****                 //usbPutString("\r\n");
 142:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 398              		.loc 1 142 0
 399 012c FA8B     		ldrh	r2, [r7, #30]
 400 012e 0B4B     		ldr	r3, .L21+12
 401 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 143:.\main.c      ****             break;
 402              		.loc 1 143 0
 403 0132 07E0     		b	.L1
 404              	.L19:
 144:.\main.c      ****             case 32:
 145:.\main.c      ****                 //usbPutString("g1_speed:");
 146:.\main.c      ****                 //usbPutString(string_packet);
 147:.\main.c      ****                 //usbPutString("\r\n");
 148:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 405              		.loc 1 148 0
 406 0134 FA8B     		ldrh	r2, [r7, #30]
 407 0136 094B     		ldr	r3, .L21+12
 408 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 149:.\main.c      ****             break;
 409              		.loc 1 149 0
 410 013a 03E0     		b	.L1
 411              	.L20:
 150:.\main.c      ****             case 34:
 151:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 412              		.loc 1 151 0
 413 013c FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 11


 414 013e 074B     		ldr	r3, .L21+12
 415 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 152:.\main.c      ****                 //usbPutString("g2_dir:");
 153:.\main.c      ****                 //usbPutString(string_packet);
 154:.\main.c      ****                 //usbPutString("\r\n");
 155:.\main.c      ****                 
 156:.\main.c      ****             break;
 416              		.loc 1 156 0
 417 0142 00BF     		nop
 418              	.L1:
 419              	.LBE2:
 157:.\main.c      ****         }
 158:.\main.c      ****     }
 159:.\main.c      **** }
 420              		.loc 1 159 0
 421 0144 2437     		adds	r7, r7, #36
 422              		.cfi_def_cfa_offset 4
 423 0146 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0148 5DF8047B 		ldr	r7, [sp], #4
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 014c 7047     		bx	lr
 430              	.L22:
 431 014e 00BF     		.align	2
 432              	.L21:
 433 0150 00000000 		.word	flag_rx
 434 0154 00000000 		.word	packet
 435 0158 00000000 		.word	byteCount
 436 015c 00000000 		.word	buffer_state
 437              		.cfi_endproc
 438              	.LFE63:
 439              		.size	handle_rx_binary, .-handle_rx_binary
 440              		.section	.text.setSpeed,"ax",%progbits
 441              		.align	2
 442              		.global	setSpeed
 443              		.thumb
 444              		.thumb_func
 445              		.type	setSpeed, %function
 446              	setSpeed:
 447              	.LFB64:
 160:.\main.c      **** 
 161:.\main.c      **** void setSpeed(int right, int left){
 448              		.loc 1 161 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 0002 83B0     		sub	sp, sp, #12
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 12


 461 0008 3960     		str	r1, [r7]
 162:.\main.c      ****     leftSpeedLimit = right;
 462              		.loc 1 162 0
 463 000a 7B68     		ldr	r3, [r7, #4]
 464 000c 9AB2     		uxth	r2, r3
 465 000e 054B     		ldr	r3, .L24
 466 0010 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****     rightSpeedLimit = left;
 467              		.loc 1 163 0
 468 0012 3B68     		ldr	r3, [r7]
 469 0014 9AB2     		uxth	r2, r3
 470 0016 044B     		ldr	r3, .L24+4
 471 0018 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      **** }
 472              		.loc 1 164 0
 473 001a 0C37     		adds	r7, r7, #12
 474              		.cfi_def_cfa_offset 4
 475 001c BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 001e 5DF8047B 		ldr	r7, [sp], #4
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 0022 7047     		bx	lr
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0024 00000000 		.word	leftSpeedLimit
 486 0028 00000000 		.word	rightSpeedLimit
 487              		.cfi_endproc
 488              	.LFE64:
 489              		.size	setSpeed, .-setSpeed
 490              		.section	.text.brakeLeft,"ax",%progbits
 491              		.align	2
 492              		.global	brakeLeft
 493              		.thumb
 494              		.thumb_func
 495              		.type	brakeLeft, %function
 496              	brakeLeft:
 497              	.LFB65:
 165:.\main.c      **** 
 166:.\main.c      **** void brakeLeft()
 167:.\main.c      **** {
 498              		.loc 1 167 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 168:.\main.c      ****     PWM_1_WriteCompare(0);
 508              		.loc 1 168 0
 509 0004 0020     		movs	r0, #0
 510 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 13


 169:.\main.c      ****     left_duty_cycle = 0;
 511              		.loc 1 169 0
 512 000a 024B     		ldr	r3, .L27
 513 000c 0022     		movs	r2, #0
 514 000e 1A80     		strh	r2, [r3]	@ movhi
 170:.\main.c      **** }
 515              		.loc 1 170 0
 516 0010 80BD     		pop	{r7, pc}
 517              	.L28:
 518 0012 00BF     		.align	2
 519              	.L27:
 520 0014 00000000 		.word	left_duty_cycle
 521              		.cfi_endproc
 522              	.LFE65:
 523              		.size	brakeLeft, .-brakeLeft
 524              		.section	.text.brakeRight,"ax",%progbits
 525              		.align	2
 526              		.global	brakeRight
 527              		.thumb
 528              		.thumb_func
 529              		.type	brakeRight, %function
 530              	brakeRight:
 531              	.LFB66:
 171:.\main.c      **** 
 172:.\main.c      **** void brakeRight()
 173:.\main.c      **** {
 532              		.loc 1 173 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 174:.\main.c      ****      PWM_2_WriteCompare(0);
 542              		.loc 1 174 0
 543 0004 0020     		movs	r0, #0
 544 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 175:.\main.c      ****      right_duty_cycle = 0;
 545              		.loc 1 175 0
 546 000a 024B     		ldr	r3, .L30
 547 000c 0022     		movs	r2, #0
 548 000e 1A80     		strh	r2, [r3]	@ movhi
 176:.\main.c      **** }
 549              		.loc 1 176 0
 550 0010 80BD     		pop	{r7, pc}
 551              	.L31:
 552 0012 00BF     		.align	2
 553              	.L30:
 554 0014 00000000 		.word	right_duty_cycle
 555              		.cfi_endproc
 556              	.LFE66:
 557              		.size	brakeRight, .-brakeRight
 558              		.section	.text.brakeMotor,"ax",%progbits
 559              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 14


 560              		.global	brakeMotor
 561              		.thumb
 562              		.thumb_func
 563              		.type	brakeMotor, %function
 564              	brakeMotor:
 565              	.LFB67:
 177:.\main.c      **** 
 178:.\main.c      **** void brakeMotor(){
 566              		.loc 1 178 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 00AF     		add	r7, sp, #0
 575              		.cfi_def_cfa_register 7
 179:.\main.c      ****     setSpeed(0, 0);
 576              		.loc 1 179 0
 577 0004 0020     		movs	r0, #0
 578 0006 0021     		movs	r1, #0
 579 0008 FFF7FEFF 		bl	setSpeed
 180:.\main.c      ****     brakeLeft();
 580              		.loc 1 180 0
 581 000c FFF7FEFF 		bl	brakeLeft
 181:.\main.c      ****     brakeRight();
 582              		.loc 1 181 0
 583 0010 FFF7FEFF 		bl	brakeRight
 182:.\main.c      **** }
 584              		.loc 1 182 0
 585 0014 80BD     		pop	{r7, pc}
 586              		.cfi_endproc
 587              	.LFE67:
 588              		.size	brakeMotor, .-brakeMotor
 589 0016 00BF     		.section	.text.driveForwards,"ax",%progbits
 590              		.align	2
 591              		.global	driveForwards
 592              		.thumb
 593              		.thumb_func
 594              		.type	driveForwards, %function
 595              	driveForwards:
 596              	.LFB68:
 183:.\main.c      **** 
 184:.\main.c      **** 
 185:.\main.c      **** void driveForwards()
 186:.\main.c      **** {
 597              		.loc 1 186 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 15


 187:.\main.c      ****     setSpeed(20, 20);
 607              		.loc 1 187 0
 608 0004 1420     		movs	r0, #20
 609 0006 1421     		movs	r1, #20
 610 0008 FFF7FEFF 		bl	setSpeed
 188:.\main.c      **** }
 611              		.loc 1 188 0
 612 000c 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE68:
 615              		.size	driveForwards, .-driveForwards
 616 000e 00BF     		.section	.text.turnLeft,"ax",%progbits
 617              		.align	2
 618              		.global	turnLeft
 619              		.thumb
 620              		.thumb_func
 621              		.type	turnLeft, %function
 622              	turnLeft:
 623              	.LFB69:
 189:.\main.c      **** 
 190:.\main.c      **** void turnLeft()
 191:.\main.c      **** {
 624              		.loc 1 191 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 192:.\main.c      ****     setSpeed(0,20);
 634              		.loc 1 192 0
 635 0004 0020     		movs	r0, #0
 636 0006 1421     		movs	r1, #20
 637 0008 FFF7FEFF 		bl	setSpeed
 193:.\main.c      **** }
 638              		.loc 1 193 0
 639 000c 80BD     		pop	{r7, pc}
 640              		.cfi_endproc
 641              	.LFE69:
 642              		.size	turnLeft, .-turnLeft
 643 000e 00BF     		.section	.text.turnRight,"ax",%progbits
 644              		.align	2
 645              		.global	turnRight
 646              		.thumb
 647              		.thumb_func
 648              		.type	turnRight, %function
 649              	turnRight:
 650              	.LFB70:
 194:.\main.c      **** 
 195:.\main.c      **** void turnRight()
 196:.\main.c      **** {
 651              		.loc 1 196 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 16


 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 197:.\main.c      ****     setSpeed(20,0);
 661              		.loc 1 197 0
 662 0004 1420     		movs	r0, #20
 663 0006 0021     		movs	r1, #0
 664 0008 FFF7FEFF 		bl	setSpeed
 198:.\main.c      **** }
 665              		.loc 1 198 0
 666 000c 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE70:
 669              		.size	turnRight, .-turnRight
 670 000e 00BF     		.section	.text.initTurnLeft,"ax",%progbits
 671              		.align	2
 672              		.global	initTurnLeft
 673              		.thumb
 674              		.thumb_func
 675              		.type	initTurnLeft, %function
 676              	initTurnLeft:
 677              	.LFB71:
 199:.\main.c      **** 
 200:.\main.c      **** void initTurnLeft(){
 678              		.loc 1 200 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 201:.\main.c      ****     Timer_2_Stop();
 688              		.loc 1 201 0
 689 0004 FFF7FEFF 		bl	Timer_2_Stop
 202:.\main.c      ****     movement_state = LTURN;
 690              		.loc 1 202 0
 691 0008 064B     		ldr	r3, .L37
 692 000a 0122     		movs	r2, #1
 693 000c 1A70     		strb	r2, [r3]
 203:.\main.c      ****     brakeLeft();
 694              		.loc 1 203 0
 695 000e FFF7FEFF 		bl	brakeLeft
 204:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 696              		.loc 1 204 0
 697 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 698 0016 0346     		mov	r3, r0
 699 0018 1A46     		mov	r2, r3
 700 001a 034B     		ldr	r3, .L37+4
 701 001c 1A80     		strh	r2, [r3]	@ movhi
 205:.\main.c      ****     Timer_2_Start();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 17


 702              		.loc 1 205 0
 703 001e FFF7FEFF 		bl	Timer_2_Start
 206:.\main.c      **** }
 704              		.loc 1 206 0
 705 0022 80BD     		pop	{r7, pc}
 706              	.L38:
 707              		.align	2
 708              	.L37:
 709 0024 00000000 		.word	movement_state
 710 0028 00000000 		.word	start_turn_count
 711              		.cfi_endproc
 712              	.LFE71:
 713              		.size	initTurnLeft, .-initTurnLeft
 714              		.section	.text.initTurnRight,"ax",%progbits
 715              		.align	2
 716              		.global	initTurnRight
 717              		.thumb
 718              		.thumb_func
 719              		.type	initTurnRight, %function
 720              	initTurnRight:
 721              	.LFB72:
 207:.\main.c      **** 
 208:.\main.c      **** void initTurnRight(){
 722              		.loc 1 208 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726 0000 80B5     		push	{r7, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 00AF     		add	r7, sp, #0
 731              		.cfi_def_cfa_register 7
 209:.\main.c      ****     Timer_2_Stop();
 732              		.loc 1 209 0
 733 0004 FFF7FEFF 		bl	Timer_2_Stop
 210:.\main.c      ****     movement_state = RTURN;
 734              		.loc 1 210 0
 735 0008 064B     		ldr	r3, .L40
 736 000a 0222     		movs	r2, #2
 737 000c 1A70     		strb	r2, [r3]
 211:.\main.c      ****     brakeRight();
 738              		.loc 1 211 0
 739 000e FFF7FEFF 		bl	brakeRight
 212:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 740              		.loc 1 212 0
 741 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 742 0016 0346     		mov	r3, r0
 743 0018 1A46     		mov	r2, r3
 744 001a 034B     		ldr	r3, .L40+4
 745 001c 1A80     		strh	r2, [r3]	@ movhi
 213:.\main.c      ****     Timer_2_Start();
 746              		.loc 1 213 0
 747 001e FFF7FEFF 		bl	Timer_2_Start
 214:.\main.c      **** }
 748              		.loc 1 214 0
 749 0022 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 18


 750              	.L41:
 751              		.align	2
 752              	.L40:
 753 0024 00000000 		.word	movement_state
 754 0028 00000000 		.word	start_turn_count
 755              		.cfi_endproc
 756              	.LFE72:
 757              		.size	initTurnRight, .-initTurnRight
 758              		.section	.text.initForward,"ax",%progbits
 759              		.align	2
 760              		.global	initForward
 761              		.thumb
 762              		.thumb_func
 763              		.type	initForward, %function
 764              	initForward:
 765              	.LFB73:
 215:.\main.c      **** 
 216:.\main.c      **** void initForward(){
 766              		.loc 1 216 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 217:.\main.c      ****     brakeMotor();
 776              		.loc 1 217 0
 777 0004 FFF7FEFF 		bl	brakeMotor
 218:.\main.c      ****     movement_state = DRIVE;
 778              		.loc 1 218 0
 779 0008 014B     		ldr	r3, .L43
 780 000a 0022     		movs	r2, #0
 781 000c 1A70     		strb	r2, [r3]
 219:.\main.c      **** }
 782              		.loc 1 219 0
 783 000e 80BD     		pop	{r7, pc}
 784              	.L44:
 785              		.align	2
 786              	.L43:
 787 0010 00000000 		.word	movement_state
 788              		.cfi_endproc
 789              	.LFE73:
 790              		.size	initForward, .-initForward
 791              		.section	.text.initBrake,"ax",%progbits
 792              		.align	2
 793              		.global	initBrake
 794              		.thumb
 795              		.thumb_func
 796              		.type	initBrake, %function
 797              	initBrake:
 798              	.LFB74:
 220:.\main.c      **** 
 221:.\main.c      **** void initBrake(){
 799              		.loc 1 221 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 19


 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
 222:.\main.c      ****     movement_state = STOPPED;
 809              		.loc 1 222 0
 810 0004 034B     		ldr	r3, .L46
 811 0006 0322     		movs	r2, #3
 812 0008 1A70     		strb	r2, [r3]
 223:.\main.c      **** }
 813              		.loc 1 223 0
 814 000a BD46     		mov	sp, r7
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 000c 5DF8047B 		ldr	r7, [sp], #4
 818              		.cfi_restore 7
 819              		.cfi_def_cfa_offset 0
 820 0010 7047     		bx	lr
 821              	.L47:
 822 0012 00BF     		.align	2
 823              	.L46:
 824 0014 00000000 		.word	movement_state
 825              		.cfi_endproc
 826              	.LFE74:
 827              		.size	initBrake, .-initBrake
 828              		.section	.text.reverseDirection,"ax",%progbits
 829              		.align	2
 830              		.global	reverseDirection
 831              		.thumb
 832              		.thumb_func
 833              		.type	reverseDirection, %function
 834              	reverseDirection:
 835              	.LFB75:
 224:.\main.c      **** 
 225:.\main.c      **** void reverseDirection()
 226:.\main.c      **** {
 836              		.loc 1 226 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840 0000 80B5     		push	{r7, lr}
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 00AF     		add	r7, sp, #0
 845              		.cfi_def_cfa_register 7
 227:.\main.c      ****     direction = !direction;
 846              		.loc 1 227 0
 847 0004 0A4B     		ldr	r3, .L49
 848 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0008 002B     		cmp	r3, #0
 850 000a 0CBF     		ite	eq
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 20


 851 000c 0123     		moveq	r3, #1
 852 000e 0023     		movne	r3, #0
 853 0010 DBB2     		uxtb	r3, r3
 854 0012 1A46     		mov	r2, r3
 855 0014 064B     		ldr	r3, .L49
 856 0016 1A70     		strb	r2, [r3]
 228:.\main.c      ****     M1_IN2_Write(direction);
 857              		.loc 1 228 0
 858 0018 054B     		ldr	r3, .L49
 859 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 001c 1846     		mov	r0, r3
 861 001e FFF7FEFF 		bl	M1_IN2_Write
 229:.\main.c      ****     M2_IN2_Write(direction);
 862              		.loc 1 229 0
 863 0022 034B     		ldr	r3, .L49
 864 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 0026 1846     		mov	r0, r3
 866 0028 FFF7FEFF 		bl	M2_IN2_Write
 230:.\main.c      **** }
 867              		.loc 1 230 0
 868 002c 80BD     		pop	{r7, pc}
 869              	.L50:
 870 002e 00BF     		.align	2
 871              	.L49:
 872 0030 00000000 		.word	direction
 873              		.cfi_endproc
 874              	.LFE75:
 875              		.size	reverseDirection, .-reverseDirection
 876              		.section	.text.rxInt,"ax",%progbits
 877              		.align	2
 878              		.global	rxInt
 879              		.thumb
 880              		.thumb_func
 881              		.type	rxInt, %function
 882              	rxInt:
 883              	.LFB76:
 231:.\main.c      **** 
 232:.\main.c      **** //Binary RF Data
 233:.\main.c      **** CY_ISR(rxInt){
 884              		.loc 1 233 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 8
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 B0B5     		push	{r4, r5, r7, lr}
 889              		.cfi_def_cfa_offset 16
 890              		.cfi_offset 4, -16
 891              		.cfi_offset 5, -12
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 24
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 234:.\main.c      ****     char rf_char = UART_GetChar();
 898              		.loc 1 234 0
 899 0006 FFF7FEFF 		bl	UART_GetChar
 900 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 21


 901 000c FB71     		strb	r3, [r7, #7]
 235:.\main.c      ****     if(rf_char == SOP){
 902              		.loc 1 235 0
 903 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 904 0010 AA2B     		cmp	r3, #170
 905 0012 1CD1     		bne	.L52
 236:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 237:.\main.c      ****             if(byteCount == 34)
 906              		.loc 1 237 0
 907 0014 1B4B     		ldr	r3, .L56
 908 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 0018 222B     		cmp	r3, #34
 910 001a 11D1     		bne	.L53
 238:.\main.c      ****             {
 239:.\main.c      ****                 system_state = buffer_state;
 911              		.loc 1 239 0
 912 001c 1A4B     		ldr	r3, .L56+4
 913 001e 1B4A     		ldr	r2, .L56+8
 914 0020 1568     		ldr	r5, [r2]	@ unaligned
 915 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 916 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 917 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 918 0028 1D60     		str	r5, [r3]	@ unaligned
 919 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 920 002c 9860     		str	r0, [r3, #8]	@ unaligned
 921 002e D960     		str	r1, [r3, #12]	@ unaligned
 922 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 923 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 924 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 925 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 926 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 927 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 928 003c 9861     		str	r0, [r3, #24]	@ unaligned
 929 003e D961     		str	r1, [r3, #28]	@ unaligned
 930              	.L53:
 240:.\main.c      ****             }
 241:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 931              		.loc 1 241 0
 932 0040 104B     		ldr	r3, .L56
 933 0042 0222     		movs	r2, #2
 934 0044 1A70     		strb	r2, [r3]
 242:.\main.c      ****             flag_rx = 0;
 935              		.loc 1 242 0
 936 0046 124B     		ldr	r3, .L56+12
 937 0048 0022     		movs	r2, #0
 938 004a 1A70     		strb	r2, [r3]
 939 004c 16E0     		b	.L51
 940              	.L52:
 243:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 244:.\main.c      ****         }
 245:.\main.c      ****         else
 246:.\main.c      ****         {
 247:.\main.c      ****             packet[byteCount % 2] = rf_char;
 941              		.loc 1 247 0
 942 004e 0D4B     		ldr	r3, .L56
 943 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944 0052 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 22


 945 0056 0F49     		ldr	r1, .L56+16
 946 0058 FA79     		ldrb	r2, [r7, #7]
 947 005a CA54     		strb	r2, [r1, r3]
 248:.\main.c      ****            
 249:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 948              		.loc 1 249 0
 949 005c 094B     		ldr	r3, .L56
 950 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 0060 03F00103 		and	r3, r3, #1
 952 0064 DBB2     		uxtb	r3, r3
 953 0066 002B     		cmp	r3, #0
 954 0068 02D0     		beq	.L55
 250:.\main.c      ****             {
 251:.\main.c      ****                 flag_rx = 1;
 955              		.loc 1 251 0
 956 006a 094B     		ldr	r3, .L56+12
 957 006c 0122     		movs	r2, #1
 958 006e 1A70     		strb	r2, [r3]
 959              	.L55:
 252:.\main.c      ****             }
 253:.\main.c      ****             byteCount = (byteCount + 1);
 960              		.loc 1 253 0
 961 0070 044B     		ldr	r3, .L56
 962 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 0074 0133     		adds	r3, r3, #1
 964 0076 DAB2     		uxtb	r2, r3
 965 0078 024B     		ldr	r3, .L56
 966 007a 1A70     		strb	r2, [r3]
 967              	.L51:
 254:.\main.c      ****         }
 255:.\main.c      **** }
 968              		.loc 1 255 0
 969 007c 0837     		adds	r7, r7, #8
 970              		.cfi_def_cfa_offset 16
 971 007e BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0080 B0BD     		pop	{r4, r5, r7, pc}
 975              	.L57:
 976 0082 00BF     		.align	2
 977              	.L56:
 978 0084 00000000 		.word	byteCount
 979 0088 00000000 		.word	system_state
 980 008c 00000000 		.word	buffer_state
 981 0090 00000000 		.word	flag_rx
 982 0094 00000000 		.word	packet
 983              		.cfi_endproc
 984              	.LFE76:
 985              		.size	rxInt, .-rxInt
 986              		.section	.text.BT_rxInt,"ax",%progbits
 987              		.align	2
 988              		.global	BT_rxInt
 989              		.thumb
 990              		.thumb_func
 991              		.type	BT_rxInt, %function
 992              	BT_rxInt:
 993              	.LFB77:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 23


 256:.\main.c      **** 
 257:.\main.c      **** CY_ISR(BT_rxInt)
 258:.\main.c      **** {
 994              		.loc 1 258 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 259:.\main.c      ****     char rf_char = UART_GetChar();
 1006              		.loc 1 259 0
 1007 0006 FFF7FEFF 		bl	UART_GetChar
 1008 000a 0346     		mov	r3, r0
 1009 000c FB71     		strb	r3, [r7, #7]
 260:.\main.c      ****     switch(rf_char){
 1010              		.loc 1 260 0
 1011 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1012 0010 613B     		subs	r3, r3, #97
 1013 0012 162B     		cmp	r3, #22
 1014 0014 3FD8     		bhi	.L58
 1015 0016 01A2     		adr	r2, .L61
 1016 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1017              		.p2align 2
 1018              	.L61:
 1019 001c 79000000 		.word	.L60+1
 1020 0020 97000000 		.word	.L58+1
 1021 0024 97000000 		.word	.L58+1
 1022 0028 8B000000 		.word	.L62+1
 1023 002c 97000000 		.word	.L58+1
 1024 0030 91000000 		.word	.L63+1
 1025 0034 97000000 		.word	.L58+1
 1026 0038 97000000 		.word	.L58+1
 1027 003c 97000000 		.word	.L58+1
 1028 0040 97000000 		.word	.L58+1
 1029 0044 97000000 		.word	.L58+1
 1030 0048 97000000 		.word	.L58+1
 1031 004c 97000000 		.word	.L58+1
 1032 0050 97000000 		.word	.L58+1
 1033 0054 97000000 		.word	.L58+1
 1034 0058 97000000 		.word	.L58+1
 1035 005c 97000000 		.word	.L58+1
 1036 0060 97000000 		.word	.L58+1
 1037 0064 85000000 		.word	.L64+1
 1038 0068 97000000 		.word	.L58+1
 1039 006c 97000000 		.word	.L58+1
 1040 0070 97000000 		.word	.L58+1
 1041 0074 7F000000 		.word	.L65+1
 1042              		.p2align 1
 1043              	.L60:
 261:.\main.c      ****     case 'a':
 262:.\main.c      ****         initTurnLeft();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 24


 1044              		.loc 1 262 0
 1045 0078 FFF7FEFF 		bl	initTurnLeft
 263:.\main.c      ****         break;
 1046              		.loc 1 263 0
 1047 007c 0BE0     		b	.L58
 1048              	.L65:
 264:.\main.c      ****     case 'w':
 265:.\main.c      ****         initForward();
 1049              		.loc 1 265 0
 1050 007e FFF7FEFF 		bl	initForward
 266:.\main.c      ****         break;
 1051              		.loc 1 266 0
 1052 0082 08E0     		b	.L58
 1053              	.L64:
 267:.\main.c      ****     case 's': 
 268:.\main.c      ****         reverseDirection();
 1054              		.loc 1 268 0
 1055 0084 FFF7FEFF 		bl	reverseDirection
 269:.\main.c      ****         break;
 1056              		.loc 1 269 0
 1057 0088 05E0     		b	.L58
 1058              	.L62:
 270:.\main.c      ****     case 'd':
 271:.\main.c      ****         initTurnRight();
 1059              		.loc 1 271 0
 1060 008a FFF7FEFF 		bl	initTurnRight
 272:.\main.c      ****         break;
 1061              		.loc 1 272 0
 1062 008e 02E0     		b	.L58
 1063              	.L63:
 273:.\main.c      ****     case 'f':
 274:.\main.c      ****         initBrake();
 1064              		.loc 1 274 0
 1065 0090 FFF7FEFF 		bl	initBrake
 275:.\main.c      ****         break;
 1066              		.loc 1 275 0
 1067 0094 00BF     		nop
 1068              	.L58:
 276:.\main.c      ****     }
 277:.\main.c      **** }
 1069              		.loc 1 277 0
 1070 0096 0837     		adds	r7, r7, #8
 1071              		.cfi_def_cfa_offset 8
 1072 0098 BD46     		mov	sp, r7
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 009a 80BD     		pop	{r7, pc}
 1076              		.cfi_endproc
 1077              	.LFE77:
 1078              		.size	BT_rxInt, .-BT_rxInt
 1079              		.section	.text.BT_txInt,"ax",%progbits
 1080              		.align	2
 1081              		.global	BT_txInt
 1082              		.thumb
 1083              		.thumb_func
 1084              		.type	BT_txInt, %function
 1085              	BT_txInt:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 25


 1086              	.LFB78:
 278:.\main.c      **** 
 279:.\main.c      **** //BT
 280:.\main.c      **** CY_ISR(BT_txInt)
 281:.\main.c      **** {
 1087              		.loc 1 281 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 1, uses_anonymous_args = 0
 1091              		@ link register save eliminated.
 1092 0000 80B4     		push	{r7}
 1093              		.cfi_def_cfa_offset 4
 1094              		.cfi_offset 7, -4
 1095 0002 00AF     		add	r7, sp, #0
 1096              		.cfi_def_cfa_register 7
 282:.\main.c      ****     
 283:.\main.c      **** }
 1097              		.loc 1 283 0
 1098 0004 BD46     		mov	sp, r7
 1099              		.cfi_def_cfa_register 13
 1100              		@ sp needed
 1101 0006 5DF8047B 		ldr	r7, [sp], #4
 1102              		.cfi_restore 7
 1103              		.cfi_def_cfa_offset 0
 1104 000a 7047     		bx	lr
 1105              		.cfi_endproc
 1106              	.LFE78:
 1107              		.size	BT_txInt, .-BT_txInt
 1108              		.section	.text.adc_isr,"ax",%progbits
 1109              		.align	2
 1110              		.global	adc_isr
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	adc_isr, %function
 1114              	adc_isr:
 1115              	.LFB79:
 284:.\main.c      **** 
 285:.\main.c      **** //ADC:
 286:.\main.c      **** CY_ISR (adc_isr)
 287:.\main.c      **** {
 1116              		.loc 1 287 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 00AF     		add	r7, sp, #0
 1125              		.cfi_def_cfa_register 7
 288:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 289:.\main.c      ****     adc_result = ADC_GetResult16();
 1126              		.loc 1 289 0
 1127 0004 FFF7FEFF 		bl	ADC_GetResult16
 1128 0008 0346     		mov	r3, r0
 1129 000a 1A46     		mov	r2, r3
 1130 000c 044B     		ldr	r3, .L68
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 26


 1131 000e 1A80     		strh	r2, [r3]	@ movhi
 290:.\main.c      ****     flag_receive_ADC = 1;
 1132              		.loc 1 290 0
 1133 0010 044B     		ldr	r3, .L68+4
 1134 0012 0122     		movs	r2, #1
 1135 0014 1A70     		strb	r2, [r3]
 291:.\main.c      ****     flag_print_rf = 1;
 1136              		.loc 1 291 0
 1137 0016 044B     		ldr	r3, .L68+8
 1138 0018 0122     		movs	r2, #1
 1139 001a 1A70     		strb	r2, [r3]
 292:.\main.c      ****     //LED_Write(~LED_Read());
 293:.\main.c      **** }
 1140              		.loc 1 293 0
 1141 001c 80BD     		pop	{r7, pc}
 1142              	.L69:
 1143 001e 00BF     		.align	2
 1144              	.L68:
 1145 0020 00000000 		.word	adc_result
 1146 0024 00000000 		.word	flag_receive_ADC
 1147 0028 00000000 		.word	flag_print_rf
 1148              		.cfi_endproc
 1149              	.LFE79:
 1150              		.size	adc_isr, .-adc_isr
 1151              		.section	.text.isr_quad1,"ax",%progbits
 1152              		.align	2
 1153              		.global	isr_quad1
 1154              		.thumb
 1155              		.thumb_func
 1156              		.type	isr_quad1, %function
 1157              	isr_quad1:
 1158              	.LFB80:
 294:.\main.c      **** 
 295:.\main.c      **** CY_ISR (isr_quad1)
 296:.\main.c      **** {
 1159              		.loc 1 296 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 1, uses_anonymous_args = 0
 1163 0000 80B5     		push	{r7, lr}
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 297:.\main.c      ****     //LED_Write(~LED_Read());
 298:.\main.c      ****     last_quad_count1 = quad_count1;
 1169              		.loc 1 298 0
 1170 0004 244B     		ldr	r3, .L72
 1171 0006 1A88     		ldrh	r2, [r3]
 1172 0008 244B     		ldr	r3, .L72+4
 1173 000a 1A80     		strh	r2, [r3]	@ movhi
 299:.\main.c      ****     last_quad_count2 = quad_count2;
 1174              		.loc 1 299 0
 1175 000c 244B     		ldr	r3, .L72+8
 1176 000e 1A88     		ldrh	r2, [r3]
 1177 0010 244B     		ldr	r3, .L72+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 27


 1178 0012 1A80     		strh	r2, [r3]	@ movhi
 300:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1179              		.loc 1 300 0
 1180 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1181 0018 0346     		mov	r3, r0
 1182 001a 1A46     		mov	r2, r3
 1183 001c 1E4B     		ldr	r3, .L72
 1184 001e 1A80     		strh	r2, [r3]	@ movhi
 301:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1185              		.loc 1 301 0
 1186 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1187 0024 0346     		mov	r3, r0
 1188 0026 1A46     		mov	r2, r3
 1189 0028 1D4B     		ldr	r3, .L72+8
 1190 002a 1A80     		strh	r2, [r3]	@ movhi
 302:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1191              		.loc 1 302 0
 1192 002c 1A4B     		ldr	r3, .L72
 1193 002e 1B88     		ldrh	r3, [r3]
 1194 0030 9AB2     		uxth	r2, r3
 1195 0032 1A4B     		ldr	r3, .L72+4
 1196 0034 1B88     		ldrh	r3, [r3]
 1197 0036 9BB2     		uxth	r3, r3
 1198 0038 D31A     		subs	r3, r2, r3
 1199 003a 9BB2     		uxth	r3, r3
 1200 003c 9AB2     		uxth	r2, r3
 1201 003e 1A4B     		ldr	r3, .L72+16
 1202 0040 1A80     		strh	r2, [r3]	@ movhi
 303:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1203              		.loc 1 303 0
 1204 0042 174B     		ldr	r3, .L72+8
 1205 0044 1B88     		ldrh	r3, [r3]
 1206 0046 9AB2     		uxth	r2, r3
 1207 0048 164B     		ldr	r3, .L72+12
 1208 004a 1B88     		ldrh	r3, [r3]
 1209 004c 9BB2     		uxth	r3, r3
 1210 004e D31A     		subs	r3, r2, r3
 1211 0050 9BB2     		uxth	r3, r3
 1212 0052 9AB2     		uxth	r2, r3
 1213 0054 154B     		ldr	r3, .L72+20
 1214 0056 1A80     		strh	r2, [r3]	@ movhi
 304:.\main.c      ****     
 305:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1215              		.loc 1 305 0
 1216 0058 0F4B     		ldr	r3, .L72
 1217 005a 1B88     		ldrh	r3, [r3]
 1218 005c 1BB2     		sxth	r3, r3
 1219 005e 40F6B832 		movw	r2, #3000
 1220 0062 9342     		cmp	r3, r2
 1221 0064 13DD     		ble	.L71
 1222              		.loc 1 305 0 is_stmt 0 discriminator 1
 1223 0066 124B     		ldr	r3, .L72+24
 1224 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 006a 012B     		cmp	r3, #1
 1226 006c 0FD0     		beq	.L71
 1227              		.loc 1 305 0 discriminator 2
 1228 006e 104B     		ldr	r3, .L72+24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 28


 1229 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0072 022B     		cmp	r3, #2
 1231 0074 0BD0     		beq	.L71
 306:.\main.c      ****     {
 307:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1232              		.loc 1 307 0 is_stmt 1
 1233 0076 0020     		movs	r0, #0
 1234 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 308:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1235              		.loc 1 308 0
 1236 007c 0020     		movs	r0, #0
 1237 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 309:.\main.c      ****         quad_count1 = 0;
 1238              		.loc 1 309 0
 1239 0082 054B     		ldr	r3, .L72
 1240 0084 0022     		movs	r2, #0
 1241 0086 1A80     		strh	r2, [r3]	@ movhi
 310:.\main.c      ****         quad_count2 = 0;
 1242              		.loc 1 310 0
 1243 0088 054B     		ldr	r3, .L72+8
 1244 008a 0022     		movs	r2, #0
 1245 008c 1A80     		strh	r2, [r3]	@ movhi
 1246              	.L71:
 311:.\main.c      ****     }
 312:.\main.c      **** 
 313:.\main.c      ****     flag_calc_wheelspeed = 1;
 1247              		.loc 1 313 0
 1248 008e 094B     		ldr	r3, .L72+28
 1249 0090 0122     		movs	r2, #1
 1250 0092 1A70     		strb	r2, [r3]
 314:.\main.c      **** }
 1251              		.loc 1 314 0
 1252 0094 80BD     		pop	{r7, pc}
 1253              	.L73:
 1254 0096 00BF     		.align	2
 1255              	.L72:
 1256 0098 00000000 		.word	quad_count1
 1257 009c 00000000 		.word	last_quad_count1
 1258 00a0 00000000 		.word	quad_count2
 1259 00a4 00000000 		.word	last_quad_count2
 1260 00a8 00000000 		.word	quad_diff1
 1261 00ac 00000000 		.word	quad_diff2
 1262 00b0 00000000 		.word	movement_state
 1263 00b4 00000000 		.word	flag_calc_wheelspeed
 1264              		.cfi_endproc
 1265              	.LFE80:
 1266              		.size	isr_quad1, .-isr_quad1
 1267              		.section	.text.isr_turn_timer,"ax",%progbits
 1268              		.align	2
 1269              		.global	isr_turn_timer
 1270              		.thumb
 1271              		.thumb_func
 1272              		.type	isr_turn_timer, %function
 1273              	isr_turn_timer:
 1274              	.LFB81:
 315:.\main.c      **** 
 316:.\main.c      **** CY_ISR(isr_turn_timer)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 29


 317:.\main.c      **** {
 1275              		.loc 1 317 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              		.cfi_def_cfa_offset 8
 1281              		.cfi_offset 7, -8
 1282              		.cfi_offset 14, -4
 1283 0002 00AF     		add	r7, sp, #0
 1284              		.cfi_def_cfa_register 7
 318:.\main.c      ****     if(movement_state == LTURN)
 1285              		.loc 1 318 0
 1286 0004 184B     		ldr	r3, .L78
 1287 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1288 0008 012B     		cmp	r3, #1
 1289 000a 14D1     		bne	.L75
 319:.\main.c      ****     {
 320:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1290              		.loc 1 320 0
 1291 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1292 0010 0346     		mov	r3, r0
 1293 0012 1A46     		mov	r2, r3
 1294 0014 154B     		ldr	r3, .L78+4
 1295 0016 1B88     		ldrh	r3, [r3]
 1296 0018 1BB2     		sxth	r3, r3
 1297 001a D31A     		subs	r3, r2, r3
 1298 001c 002B     		cmp	r3, #0
 1299 001e B8BF     		it	lt
 1300 0020 5B42     		rsblt	r3, r3, #0
 1301 0022 CF2B     		cmp	r3, #207
 1302 0024 1FDD     		ble	.L74
 321:.\main.c      ****         {
 322:.\main.c      ****             //movement_state = STOPPED;
 323:.\main.c      ****             brakeMotor();
 1303              		.loc 1 323 0
 1304 0026 FFF7FEFF 		bl	brakeMotor
 324:.\main.c      ****             movement_state = DRIVE;
 1305              		.loc 1 324 0
 1306 002a 0F4B     		ldr	r3, .L78
 1307 002c 0022     		movs	r2, #0
 1308 002e 1A70     		strb	r2, [r3]
 325:.\main.c      ****             Timer_2_Stop();
 1309              		.loc 1 325 0
 1310 0030 FFF7FEFF 		bl	Timer_2_Stop
 1311 0034 17E0     		b	.L74
 1312              	.L75:
 326:.\main.c      ****         }
 327:.\main.c      ****     }
 328:.\main.c      ****     else if (movement_state == RTURN)
 1313              		.loc 1 328 0
 1314 0036 0C4B     		ldr	r3, .L78
 1315 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 003a 022B     		cmp	r3, #2
 1317 003c 13D1     		bne	.L74
 329:.\main.c      ****     {
 330:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 30


 1318              		.loc 1 330 0
 1319 003e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1320 0042 0346     		mov	r3, r0
 1321 0044 1A46     		mov	r2, r3
 1322 0046 094B     		ldr	r3, .L78+4
 1323 0048 1B88     		ldrh	r3, [r3]
 1324 004a 1BB2     		sxth	r3, r3
 1325 004c D31A     		subs	r3, r2, r3
 1326 004e 002B     		cmp	r3, #0
 1327 0050 B8BF     		it	lt
 1328 0052 5B42     		rsblt	r3, r3, #0
 1329 0054 CF2B     		cmp	r3, #207
 1330 0056 06DD     		ble	.L74
 331:.\main.c      ****         {
 332:.\main.c      ****             //movement_state = STOPPED;
 333:.\main.c      ****             brakeMotor();
 1331              		.loc 1 333 0
 1332 0058 FFF7FEFF 		bl	brakeMotor
 334:.\main.c      ****             movement_state = DRIVE;
 1333              		.loc 1 334 0
 1334 005c 024B     		ldr	r3, .L78
 1335 005e 0022     		movs	r2, #0
 1336 0060 1A70     		strb	r2, [r3]
 335:.\main.c      ****             Timer_2_Stop();
 1337              		.loc 1 335 0
 1338 0062 FFF7FEFF 		bl	Timer_2_Stop
 1339              	.L74:
 336:.\main.c      ****         }
 337:.\main.c      ****     }
 338:.\main.c      **** }
 1340              		.loc 1 338 0
 1341 0066 80BD     		pop	{r7, pc}
 1342              	.L79:
 1343              		.align	2
 1344              	.L78:
 1345 0068 00000000 		.word	movement_state
 1346 006c 00000000 		.word	start_turn_count
 1347              		.cfi_endproc
 1348              	.LFE81:
 1349              		.size	isr_turn_timer, .-isr_turn_timer
 1350              		.section	.text.Stop_on_line,"ax",%progbits
 1351              		.align	2
 1352              		.global	Stop_on_line
 1353              		.thumb
 1354              		.thumb_func
 1355              		.type	Stop_on_line, %function
 1356              	Stop_on_line:
 1357              	.LFB82:
 339:.\main.c      **** 
 340:.\main.c      **** 
 341:.\main.c      **** CY_ISR (Stop_on_line)
 342:.\main.c      **** {
 1358              		.loc 1 342 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362              		@ link register save eliminated.
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 31


 1363 0000 80B4     		push	{r7}
 1364              		.cfi_def_cfa_offset 4
 1365              		.cfi_offset 7, -4
 1366 0002 00AF     		add	r7, sp, #0
 1367              		.cfi_def_cfa_register 7
 343:.\main.c      ****     movement_state = STOPPED;
 1368              		.loc 1 343 0
 1369 0004 054B     		ldr	r3, .L82
 1370 0006 0322     		movs	r2, #3
 1371 0008 1A70     		strb	r2, [r3]
 344:.\main.c      ****     if(movement_state != DRIVE) return;
 1372              		.loc 1 344 0
 1373 000a 044B     		ldr	r3, .L82
 1374 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1375 000e 002B     		cmp	r3, #0
 1376 0010 00D0     		beq	.L80
 1377 0012 00BF     		nop
 1378              	.L80:
 345:.\main.c      ****     //initTurnLeft();
 346:.\main.c      **** }
 1379              		.loc 1 346 0
 1380 0014 BD46     		mov	sp, r7
 1381              		.cfi_def_cfa_register 13
 1382              		@ sp needed
 1383 0016 5DF8047B 		ldr	r7, [sp], #4
 1384              		.cfi_restore 7
 1385              		.cfi_def_cfa_offset 0
 1386 001a 7047     		bx	lr
 1387              	.L83:
 1388              		.align	2
 1389              	.L82:
 1390 001c 00000000 		.word	movement_state
 1391              		.cfi_endproc
 1392              	.LFE82:
 1393              		.size	Stop_on_line, .-Stop_on_line
 1394              		.section	.rodata
 1395              		.align	2
 1396              	.LC0:
 1397 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1397      74696E67 
 1397      20726F62 
 1397      6F74210D 
 1397      0A00
 1398              		.section	.text.button,"ax",%progbits
 1399              		.align	2
 1400              		.global	button
 1401              		.thumb
 1402              		.thumb_func
 1403              		.type	button, %function
 1404              	button:
 1405              	.LFB83:
 347:.\main.c      **** 
 348:.\main.c      **** CY_ISR (button)
 349:.\main.c      **** {
 1406              		.loc 1 349 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 32


 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410 0000 80B5     		push	{r7, lr}
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 00AF     		add	r7, sp, #0
 1415              		.cfi_def_cfa_register 7
 350:.\main.c      ****     if(BT_ENABLED)
 351:.\main.c      ****     {
 352:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1416              		.loc 1 352 0
 1417 0004 0348     		ldr	r0, .L85
 1418 0006 FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****     }
 354:.\main.c      ****     movement_state = DRIVE;
 1419              		.loc 1 354 0
 1420 000a 034B     		ldr	r3, .L85+4
 1421 000c 0022     		movs	r2, #0
 1422 000e 1A70     		strb	r2, [r3]
 355:.\main.c      **** }
 1423              		.loc 1 355 0
 1424 0010 80BD     		pop	{r7, pc}
 1425              	.L86:
 1426 0012 00BF     		.align	2
 1427              	.L85:
 1428 0014 00000000 		.word	.LC0
 1429 0018 00000000 		.word	movement_state
 1430              		.cfi_endproc
 1431              	.LFE83:
 1432              		.size	button, .-button
 1433              		.section	.text.isr_adcTimer,"ax",%progbits
 1434              		.align	2
 1435              		.global	isr_adcTimer
 1436              		.thumb
 1437              		.thumb_func
 1438              		.type	isr_adcTimer, %function
 1439              	isr_adcTimer:
 1440              	.LFB84:
 356:.\main.c      **** 
 357:.\main.c      **** CY_ISR(isr_adcTimer)
 358:.\main.c      **** {
 1441              		.loc 1 358 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 1, uses_anonymous_args = 0
 1445 0000 80B5     		push	{r7, lr}
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 00AF     		add	r7, sp, #0
 1450              		.cfi_def_cfa_register 7
 359:.\main.c      ****     ADC_StartConvert();
 1451              		.loc 1 359 0
 1452 0004 FFF7FEFF 		bl	ADC_StartConvert
 360:.\main.c      **** }
 1453              		.loc 1 360 0
 1454 0008 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 33


 1455              		.cfi_endproc
 1456              	.LFE84:
 1457              		.size	isr_adcTimer, .-isr_adcTimer
 1458 000a 00BF     		.section	.rodata
 1459 0012 0000     		.align	2
 1460              	.LC1:
 1461 0014 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
 1461      20636F75 
 1461      6E742031 
 1461      2069733A 
 1461      2025640A 
 1462 002a 0000     		.align	2
 1463              	.LC2:
 1464 002c 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 1464      20636F75 
 1464      6E742032 
 1464      2069733A 
 1464      2025640A 
 1465              		.global	__aeabi_i2d
 1466              		.global	__aeabi_dmul
 1467              		.global	__aeabi_d2iz
 1468              		.section	.text.Quad_Dec_response,"ax",%progbits
 1469              		.align	2
 1470              		.global	Quad_Dec_response
 1471              		.thumb
 1472              		.thumb_func
 1473              		.type	Quad_Dec_response, %function
 1474              	Quad_Dec_response:
 1475              	.LFB85:
 361:.\main.c      **** 
 362:.\main.c      **** void Quad_Dec_response()
 363:.\main.c      **** {
 1476              		.loc 1 363 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 144
 1479              		@ frame_needed = 1, uses_anonymous_args = 0
 1480 0000 B0B5     		push	{r4, r5, r7, lr}
 1481              		.cfi_def_cfa_offset 16
 1482              		.cfi_offset 4, -16
 1483              		.cfi_offset 5, -12
 1484              		.cfi_offset 7, -8
 1485              		.cfi_offset 14, -4
 1486 0002 A4B0     		sub	sp, sp, #144
 1487              		.cfi_def_cfa_offset 160
 1488 0004 00AF     		add	r7, sp, #0
 1489              		.cfi_def_cfa_register 7
 364:.\main.c      ****     //Check if the flag has been set
 365:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1490              		.loc 1 365 0
 1491 0006 6B4B     		ldr	r3, .L95
 1492 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1493 000a 002B     		cmp	r3, #0
 1494 000c 00F0CE80 		beq	.L88
 366:.\main.c      ****     flag_calc_wheelspeed = 0;
 1495              		.loc 1 366 0
 1496 0010 684B     		ldr	r3, .L95
 1497 0012 0022     		movs	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 34


 1498 0014 1A70     		strb	r2, [r3]
 367:.\main.c      ****     
 368:.\main.c      ****     char wheel_1_str [64];
 369:.\main.c      ****     char wheel_2_str [64];
 370:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 1499              		.loc 1 370 0
 1500 0016 684B     		ldr	r3, .L95+4
 1501 0018 1B88     		ldrh	r3, [r3]
 1502 001a 1BB2     		sxth	r3, r3
 1503 001c 07F14402 		add	r2, r7, #68
 1504 0020 1046     		mov	r0, r2
 1505 0022 6649     		ldr	r1, .L95+8
 1506 0024 1A46     		mov	r2, r3
 1507 0026 FFF7FEFF 		bl	sprintf
 371:.\main.c      ****     //usbPutString(wheel_1_str);
 372:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 1508              		.loc 1 372 0
 1509 002a 654B     		ldr	r3, .L95+12
 1510 002c 1B88     		ldrh	r3, [r3]
 1511 002e 1BB2     		sxth	r3, r3
 1512 0030 3A1D     		adds	r2, r7, #4
 1513 0032 1046     		mov	r0, r2
 1514 0034 6349     		ldr	r1, .L95+16
 1515 0036 1A46     		mov	r2, r3
 1516 0038 FFF7FEFF 		bl	sprintf
 373:.\main.c      ****     
 374:.\main.c      ****     //usbPutString(wheel_2_str);
 375:.\main.c      ****     
 376:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1517              		.loc 1 376 0
 1518 003c 5E4B     		ldr	r3, .L95+4
 1519 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1520 0040 A7F88E30 		strh	r3, [r7, #142]	@ movhi
 377:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1521              		.loc 1 377 0
 1522 0044 5E4B     		ldr	r3, .L95+12
 1523 0046 1B88     		ldrh	r3, [r3]	@ movhi
 1524 0048 A7F88C30 		strh	r3, [r7, #140]	@ movhi
 378:.\main.c      **** 
 379:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1525              		.loc 1 379 0
 1526 004c 5E4B     		ldr	r3, .L95+20
 1527 004e 1B88     		ldrh	r3, [r3]
 1528 0050 1AB2     		sxth	r2, r3
 1529 0052 B7F98E30 		ldrsh	r3, [r7, #142]
 1530 0056 002B     		cmp	r3, #0
 1531 0058 B8BF     		it	lt
 1532 005a 5B42     		rsblt	r3, r3, #0
 1533 005c D31A     		subs	r3, r2, r3
 1534 005e C7F88830 		str	r3, [r7, #136]
 380:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1535              		.loc 1 380 0
 1536 0062 D7F88830 		ldr	r3, [r7, #136]
 1537 0066 83EAE372 		eor	r2, r3, r3, asr #31
 1538 006a A2EBE372 		sub	r2, r2, r3, asr #31
 1539 006e D7F88830 		ldr	r3, [r7, #136]
 1540 0072 92FBF3F3 		sdiv	r3, r2, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 35


 1541 0076 1846     		mov	r0, r3
 1542 0078 FFF7FEFF 		bl	__aeabi_i2d
 1543 007c 0446     		mov	r4, r0
 1544 007e 0D46     		mov	r5, r1
 1545 0080 D7F88830 		ldr	r3, [r7, #136]
 1546 0084 002B     		cmp	r3, #0
 1547 0086 B8BF     		it	lt
 1548 0088 5B42     		rsblt	r3, r3, #0
 1549 008a 1846     		mov	r0, r3
 1550 008c FFF7FEFF 		bl	__aeabi_i2d
 1551 0090 0246     		mov	r2, r0
 1552 0092 0B46     		mov	r3, r1
 1553 0094 1046     		mov	r0, r2
 1554 0096 1946     		mov	r1, r3
 1555 0098 FFF7FEFF 		bl	sqrt
 1556 009c 0246     		mov	r2, r0
 1557 009e 0B46     		mov	r3, r1
 1558 00a0 2046     		mov	r0, r4
 1559 00a2 2946     		mov	r1, r5
 1560 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1561 00a8 0246     		mov	r2, r0
 1562 00aa 0B46     		mov	r3, r1
 1563 00ac 1046     		mov	r0, r2
 1564 00ae 1946     		mov	r1, r3
 1565 00b0 FFF7FEFF 		bl	__aeabi_d2iz
 1566 00b4 0346     		mov	r3, r0
 1567 00b6 C7F88430 		str	r3, [r7, #132]
 381:.\main.c      ****     left_duty_cycle = left_duty_cycle + nextSpeed;
 1568              		.loc 1 381 0
 1569 00ba D7F88430 		ldr	r3, [r7, #132]
 1570 00be 9AB2     		uxth	r2, r3
 1571 00c0 424B     		ldr	r3, .L95+24
 1572 00c2 1B88     		ldrh	r3, [r3]
 1573 00c4 9BB2     		uxth	r3, r3
 1574 00c6 1344     		add	r3, r3, r2
 1575 00c8 9BB2     		uxth	r3, r3
 1576 00ca 9AB2     		uxth	r2, r3
 1577 00cc 3F4B     		ldr	r3, .L95+24
 1578 00ce 1A80     		strh	r2, [r3]	@ movhi
 382:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 1579              		.loc 1 382 0
 1580 00d0 3F4B     		ldr	r3, .L95+28
 1581 00d2 1B88     		ldrh	r3, [r3]
 1582 00d4 1AB2     		sxth	r2, r3
 1583 00d6 B7F98C30 		ldrsh	r3, [r7, #140]
 1584 00da 002B     		cmp	r3, #0
 1585 00dc B8BF     		it	lt
 1586 00de 5B42     		rsblt	r3, r3, #0
 1587 00e0 D31A     		subs	r3, r2, r3
 1588 00e2 C7F88830 		str	r3, [r7, #136]
 383:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1589              		.loc 1 383 0
 1590 00e6 D7F88830 		ldr	r3, [r7, #136]
 1591 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 1592 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 1593 00f2 D7F88830 		ldr	r3, [r7, #136]
 1594 00f6 92FBF3F3 		sdiv	r3, r2, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 36


 1595 00fa 1846     		mov	r0, r3
 1596 00fc FFF7FEFF 		bl	__aeabi_i2d
 1597 0100 0446     		mov	r4, r0
 1598 0102 0D46     		mov	r5, r1
 1599 0104 D7F88830 		ldr	r3, [r7, #136]
 1600 0108 002B     		cmp	r3, #0
 1601 010a B8BF     		it	lt
 1602 010c 5B42     		rsblt	r3, r3, #0
 1603 010e 1846     		mov	r0, r3
 1604 0110 FFF7FEFF 		bl	__aeabi_i2d
 1605 0114 0246     		mov	r2, r0
 1606 0116 0B46     		mov	r3, r1
 1607 0118 1046     		mov	r0, r2
 1608 011a 1946     		mov	r1, r3
 1609 011c FFF7FEFF 		bl	sqrt
 1610 0120 0246     		mov	r2, r0
 1611 0122 0B46     		mov	r3, r1
 1612 0124 2046     		mov	r0, r4
 1613 0126 2946     		mov	r1, r5
 1614 0128 FFF7FEFF 		bl	__aeabi_dmul
 1615 012c 0246     		mov	r2, r0
 1616 012e 0B46     		mov	r3, r1
 1617 0130 1046     		mov	r0, r2
 1618 0132 1946     		mov	r1, r3
 1619 0134 FFF7FEFF 		bl	__aeabi_d2iz
 1620 0138 0346     		mov	r3, r0
 1621 013a C7F88430 		str	r3, [r7, #132]
 384:.\main.c      ****     right_duty_cycle = right_duty_cycle + nextSpeed;
 1622              		.loc 1 384 0
 1623 013e D7F88430 		ldr	r3, [r7, #132]
 1624 0142 9AB2     		uxth	r2, r3
 1625 0144 234B     		ldr	r3, .L95+32
 1626 0146 1B88     		ldrh	r3, [r3]
 1627 0148 9BB2     		uxth	r3, r3
 1628 014a 1344     		add	r3, r3, r2
 1629 014c 9BB2     		uxth	r3, r3
 1630 014e 9AB2     		uxth	r2, r3
 1631 0150 204B     		ldr	r3, .L95+32
 1632 0152 1A80     		strh	r2, [r3]	@ movhi
 385:.\main.c      ****     
 386:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1633              		.loc 1 386 0
 1634 0154 1F4B     		ldr	r3, .L95+32
 1635 0156 1B88     		ldrh	r3, [r3]
 1636 0158 1BB2     		sxth	r3, r3
 1637 015a 002B     		cmp	r3, #0
 1638 015c 02DA     		bge	.L91
 1639              		.loc 1 386 0 is_stmt 0 discriminator 1
 1640 015e 1D4B     		ldr	r3, .L95+32
 1641 0160 0022     		movs	r2, #0
 1642 0162 1A80     		strh	r2, [r3]	@ movhi
 1643              	.L91:
 387:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1644              		.loc 1 387 0 is_stmt 1
 1645 0164 194B     		ldr	r3, .L95+24
 1646 0166 1B88     		ldrh	r3, [r3]
 1647 0168 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 37


 1648 016a 002B     		cmp	r3, #0
 1649 016c 02DA     		bge	.L92
 1650              		.loc 1 387 0 is_stmt 0 discriminator 1
 1651 016e 174B     		ldr	r3, .L95+24
 1652 0170 0022     		movs	r2, #0
 1653 0172 1A80     		strh	r2, [r3]	@ movhi
 1654              	.L92:
 388:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1655              		.loc 1 388 0 is_stmt 1
 1656 0174 174B     		ldr	r3, .L95+32
 1657 0176 1B88     		ldrh	r3, [r3]
 1658 0178 1BB2     		sxth	r3, r3
 1659 017a 642B     		cmp	r3, #100
 1660 017c 02DD     		ble	.L93
 1661              		.loc 1 388 0 is_stmt 0 discriminator 1
 1662 017e 154B     		ldr	r3, .L95+32
 1663 0180 6422     		movs	r2, #100
 1664 0182 1A80     		strh	r2, [r3]	@ movhi
 1665              	.L93:
 389:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 1666              		.loc 1 389 0 is_stmt 1
 1667 0184 114B     		ldr	r3, .L95+24
 1668 0186 1B88     		ldrh	r3, [r3]
 1669 0188 1BB2     		sxth	r3, r3
 1670 018a 642B     		cmp	r3, #100
 1671 018c 02DD     		ble	.L94
 1672              		.loc 1 389 0 is_stmt 0 discriminator 1
 1673 018e 0F4B     		ldr	r3, .L95+24
 1674 0190 6422     		movs	r2, #100
 1675 0192 1A80     		strh	r2, [r3]	@ movhi
 1676              	.L94:
 390:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 1677              		.loc 1 390 0 is_stmt 1
 1678 0194 0D4B     		ldr	r3, .L95+24
 1679 0196 1B88     		ldrh	r3, [r3]
 1680 0198 DBB2     		uxtb	r3, r3
 1681 019a 1846     		mov	r0, r3
 1682 019c FFF7FEFF 		bl	PWM_1_WriteCompare
 391:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 1683              		.loc 1 391 0
 1684 01a0 0C4B     		ldr	r3, .L95+32
 1685 01a2 1B88     		ldrh	r3, [r3]
 1686 01a4 DBB2     		uxtb	r3, r3
 1687 01a6 1846     		mov	r0, r3
 1688 01a8 FFF7FEFF 		bl	PWM_2_WriteCompare
 1689              	.L88:
 392:.\main.c      **** }
 1690              		.loc 1 392 0
 1691 01ac 9037     		adds	r7, r7, #144
 1692              		.cfi_def_cfa_offset 16
 1693 01ae BD46     		mov	sp, r7
 1694              		.cfi_def_cfa_register 13
 1695              		@ sp needed
 1696 01b0 B0BD     		pop	{r4, r5, r7, pc}
 1697              	.L96:
 1698 01b2 00BF     		.align	2
 1699              	.L95:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 38


 1700 01b4 00000000 		.word	flag_calc_wheelspeed
 1701 01b8 00000000 		.word	quad_diff1
 1702 01bc 14000000 		.word	.LC1
 1703 01c0 00000000 		.word	quad_diff2
 1704 01c4 2C000000 		.word	.LC2
 1705 01c8 00000000 		.word	leftSpeedLimit
 1706 01cc 00000000 		.word	left_duty_cycle
 1707 01d0 00000000 		.word	rightSpeedLimit
 1708 01d4 00000000 		.word	right_duty_cycle
 1709              		.cfi_endproc
 1710              	.LFE85:
 1711              		.size	Quad_Dec_response, .-Quad_Dec_response
 1712              		.global	__aeabi_i2f
 1713              		.global	__aeabi_fmul
 1714              		.global	__aeabi_fadd
 1715              		.global	__aeabi_f2iz
 1716              		.section	.rodata
 1717 0042 0000     		.align	2
 1718              	.LC3:
 1719 0044 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 1719      65727920 
 1719      566F6C74 
 1719      6167653A 
 1719      2025646D 
 1720              		.section	.text.print_ADC,"ax",%progbits
 1721              		.align	2
 1722              		.global	print_ADC
 1723              		.thumb
 1724              		.thumb_func
 1725              		.type	print_ADC, %function
 1726              	print_ADC:
 1727              	.LFB86:
 393:.\main.c      **** 
 394:.\main.c      **** void print_ADC()
 395:.\main.c      **** {
 1728              		.loc 1 395 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 24
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732 0000 80B5     		push	{r7, lr}
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 7, -8
 1735              		.cfi_offset 14, -4
 1736 0002 86B0     		sub	sp, sp, #24
 1737              		.cfi_def_cfa_offset 32
 1738 0004 00AF     		add	r7, sp, #0
 1739              		.cfi_def_cfa_register 7
 396:.\main.c      ****    //usbPutString("HII\n");
 397:.\main.c      ****     if(flag_receive_ADC == 1)
 1740              		.loc 1 397 0
 1741 0006 274B     		ldr	r3, .L100
 1742 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1743 000a 012B     		cmp	r3, #1
 1744 000c 46D1     		bne	.L97
 1745              	.LBB3:
 398:.\main.c      ****     {
 399:.\main.c      ****         //usbPutString("AAA\r\n");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 39


 400:.\main.c      ****         flag_receive_ADC = 0;
 1746              		.loc 1 400 0
 1747 000e 254B     		ldr	r3, .L100
 1748 0010 0022     		movs	r2, #0
 1749 0012 1A70     		strb	r2, [r3]
 401:.\main.c      ****         
 402:.\main.c      ****        // int8 channel = ADC_
 403:.\main.c      ****         float scalingFactor = 0.972;
 1750              		.loc 1 403 0
 1751 0014 244B     		ldr	r3, .L100+4
 1752 0016 7B61     		str	r3, [r7, #20]	@ float
 404:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 1753              		.loc 1 404 0
 1754 0018 244B     		ldr	r3, .L100+8
 1755 001a 1B88     		ldrh	r3, [r3]
 1756 001c 1BB2     		sxth	r3, r3
 1757 001e 41F28832 		movw	r2, #5000
 1758 0022 02FB03F3 		mul	r3, r2, r3
 1759 0026 002B     		cmp	r3, #0
 1760 0028 01DA     		bge	.L99
 1761 002a 03F6FF73 		addw	r3, r3, #4095
 1762              	.L99:
 1763 002e 1B13     		asrs	r3, r3, #12
 1764 0030 1846     		mov	r0, r3
 1765 0032 FFF7FEFF 		bl	__aeabi_i2f
 1766 0036 0346     		mov	r3, r0
 1767 0038 1846     		mov	r0, r3
 1768 003a 7969     		ldr	r1, [r7, #20]	@ float
 1769 003c FFF7FEFF 		bl	__aeabi_fmul
 1770 0040 0346     		mov	r3, r0
 1771 0042 1846     		mov	r0, r3
 1772 0044 1946     		mov	r1, r3
 1773 0046 FFF7FEFF 		bl	__aeabi_fadd
 1774 004a 0346     		mov	r3, r0
 1775 004c 1846     		mov	r0, r3
 1776 004e FFF7FEFF 		bl	__aeabi_f2iz
 1777 0052 0346     		mov	r3, r0
 1778 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 405:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 1779              		.loc 1 405 0
 1780 0056 B7F91220 		ldrsh	r2, [r7, #18]
 1781 005a 154B     		ldr	r3, .L100+12
 1782 005c 1B88     		ldrh	r3, [r3]
 1783 005e 1BB2     		sxth	r3, r3
 1784 0060 1A44     		add	r2, r2, r3
 1785 0062 144B     		ldr	r3, .L100+16
 1786 0064 1B88     		ldrh	r3, [r3]
 1787 0066 1BB2     		sxth	r3, r3
 1788 0068 1344     		add	r3, r3, r2
 1789 006a 134A     		ldr	r2, .L100+20
 1790 006c 82FB0312 		smull	r1, r2, r2, r3
 1791 0070 DB17     		asrs	r3, r3, #31
 1792 0072 D31A     		subs	r3, r2, r3
 1793 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 406:.\main.c      ****         prevVoltage2 = prevVoltage;
 1794              		.loc 1 406 0
 1795 0076 0E4B     		ldr	r3, .L100+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 40


 1796 0078 1A88     		ldrh	r2, [r3]
 1797 007a 0E4B     		ldr	r3, .L100+16
 1798 007c 1A80     		strh	r2, [r3]	@ movhi
 407:.\main.c      ****         prevVoltage = converted_val;
 1799              		.loc 1 407 0
 1800 007e 0C4A     		ldr	r2, .L100+12
 1801 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1802 0082 1380     		strh	r3, [r2]	@ movhi
 408:.\main.c      ****         
 409:.\main.c      ****         char result_str[16];
 410:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 1803              		.loc 1 410 0
 1804 0084 B7F91230 		ldrsh	r3, [r7, #18]
 1805 0088 3A46     		mov	r2, r7
 1806 008a 1046     		mov	r0, r2
 1807 008c 0B49     		ldr	r1, .L100+24
 1808 008e 1A46     		mov	r2, r3
 1809 0090 FFF7FEFF 		bl	sprintf
 411:.\main.c      ****         
 412:.\main.c      ****         usbPutString(result_str);
 1810              		.loc 1 412 0
 1811 0094 3B46     		mov	r3, r7
 1812 0096 1846     		mov	r0, r3
 1813 0098 FFF7FEFF 		bl	usbPutString
 1814              	.L97:
 1815              	.LBE3:
 413:.\main.c      ****     }
 414:.\main.c      **** }
 1816              		.loc 1 414 0
 1817 009c 1837     		adds	r7, r7, #24
 1818              		.cfi_def_cfa_offset 8
 1819 009e BD46     		mov	sp, r7
 1820              		.cfi_def_cfa_register 13
 1821              		@ sp needed
 1822 00a0 80BD     		pop	{r7, pc}
 1823              	.L101:
 1824 00a2 00BF     		.align	2
 1825              	.L100:
 1826 00a4 00000000 		.word	flag_receive_ADC
 1827 00a8 FED4783F 		.word	1064883454
 1828 00ac 00000000 		.word	adc_result
 1829 00b0 00000000 		.word	prevVoltage
 1830 00b4 00000000 		.word	prevVoltage2
 1831 00b8 56555555 		.word	1431655766
 1832 00bc 44000000 		.word	.LC3
 1833              		.cfi_endproc
 1834              	.LFE86:
 1835              		.size	print_ADC, .-print_ADC
 1836              		.section	.rodata
 1837              		.align	2
 1838              	.LC4:
 1839 005c 52535349 		.ascii	"RSSI:\000"
 1839      3A00
 1840 0062 0000     		.align	2
 1841              	.LC5:
 1842 0064 25640D0A 		.ascii	"%d\015\012\000"
 1842      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 41


 1843 0069 000000   		.align	2
 1844              	.LC6:
 1845 006c 726F626F 		.ascii	"robot_x:\000"
 1845      745F783A 
 1845      00
 1846 0075 000000   		.align	2
 1847              	.LC7:
 1848 0078 726F626F 		.ascii	"robot_y:\000"
 1848      745F793A 
 1848      00
 1849 0081 000000   		.align	2
 1850              	.LC8:
 1851 0084 726F626F 		.ascii	"robot_dir:\000"
 1851      745F6469 
 1851      723A00
 1852 008f 00       		.section	.text.print_RF,"ax",%progbits
 1853              		.align	2
 1854              		.global	print_RF
 1855              		.thumb
 1856              		.thumb_func
 1857              		.type	print_RF, %function
 1858              	print_RF:
 1859              	.LFB87:
 415:.\main.c      **** 
 416:.\main.c      **** void print_RF()
 417:.\main.c      **** {
 1860              		.loc 1 417 0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 16
 1863              		@ frame_needed = 1, uses_anonymous_args = 0
 1864 0000 80B5     		push	{r7, lr}
 1865              		.cfi_def_cfa_offset 8
 1866              		.cfi_offset 7, -8
 1867              		.cfi_offset 14, -4
 1868 0002 84B0     		sub	sp, sp, #16
 1869              		.cfi_def_cfa_offset 24
 1870 0004 00AF     		add	r7, sp, #0
 1871              		.cfi_def_cfa_register 7
 418:.\main.c      ****     if(flag_print_rf == 1)
 1872              		.loc 1 418 0
 1873 0006 254B     		ldr	r3, .L104
 1874 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1875 000a 012B     		cmp	r3, #1
 1876 000c 42D1     		bne	.L102
 1877              	.LBB4:
 419:.\main.c      ****     {
 420:.\main.c      ****         char printString[16];
 421:.\main.c      ****         flag_print_rf = 0;
 1878              		.loc 1 421 0
 1879 000e 234B     		ldr	r3, .L104
 1880 0010 0022     		movs	r2, #0
 1881 0012 1A70     		strb	r2, [r3]
 422:.\main.c      ****         usbPutString("RSSI:");
 1882              		.loc 1 422 0
 1883 0014 2248     		ldr	r0, .L104+4
 1884 0016 FFF7FEFF 		bl	usbPutString
 423:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 42


 1885              		.loc 1 423 0
 1886 001a 224B     		ldr	r3, .L104+8
 1887 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1888 001e 5BB2     		sxtb	r3, r3
 1889 0020 3A46     		mov	r2, r7
 1890 0022 1046     		mov	r0, r2
 1891 0024 2049     		ldr	r1, .L104+12
 1892 0026 1A46     		mov	r2, r3
 1893 0028 FFF7FEFF 		bl	sprintf
 424:.\main.c      ****         usbPutString(printString);
 1894              		.loc 1 424 0
 1895 002c 3B46     		mov	r3, r7
 1896 002e 1846     		mov	r0, r3
 1897 0030 FFF7FEFF 		bl	usbPutString
 425:.\main.c      ****         usbPutString("robot_x:");
 1898              		.loc 1 425 0
 1899 0034 1D48     		ldr	r0, .L104+16
 1900 0036 FFF7FEFF 		bl	usbPutString
 426:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 1901              		.loc 1 426 0
 1902 003a 1A4B     		ldr	r3, .L104+8
 1903 003c 5B88     		ldrh	r3, [r3, #2]
 1904 003e 1BB2     		sxth	r3, r3
 1905 0040 3A46     		mov	r2, r7
 1906 0042 1046     		mov	r0, r2
 1907 0044 1849     		ldr	r1, .L104+12
 1908 0046 1A46     		mov	r2, r3
 1909 0048 FFF7FEFF 		bl	sprintf
 427:.\main.c      ****         usbPutString(printString);
 1910              		.loc 1 427 0
 1911 004c 3B46     		mov	r3, r7
 1912 004e 1846     		mov	r0, r3
 1913 0050 FFF7FEFF 		bl	usbPutString
 428:.\main.c      ****         usbPutString("robot_y:");
 1914              		.loc 1 428 0
 1915 0054 1648     		ldr	r0, .L104+20
 1916 0056 FFF7FEFF 		bl	usbPutString
 429:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 1917              		.loc 1 429 0
 1918 005a 124B     		ldr	r3, .L104+8
 1919 005c 9B88     		ldrh	r3, [r3, #4]
 1920 005e 1BB2     		sxth	r3, r3
 1921 0060 3A46     		mov	r2, r7
 1922 0062 1046     		mov	r0, r2
 1923 0064 1049     		ldr	r1, .L104+12
 1924 0066 1A46     		mov	r2, r3
 1925 0068 FFF7FEFF 		bl	sprintf
 430:.\main.c      ****         usbPutString(printString);
 1926              		.loc 1 430 0
 1927 006c 3B46     		mov	r3, r7
 1928 006e 1846     		mov	r0, r3
 1929 0070 FFF7FEFF 		bl	usbPutString
 431:.\main.c      ****         usbPutString("robot_dir:");
 1930              		.loc 1 431 0
 1931 0074 0F48     		ldr	r0, .L104+24
 1932 0076 FFF7FEFF 		bl	usbPutString
 432:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 43


 1933              		.loc 1 432 0
 1934 007a 0A4B     		ldr	r3, .L104+8
 1935 007c DB88     		ldrh	r3, [r3, #6]
 1936 007e 1BB2     		sxth	r3, r3
 1937 0080 3A46     		mov	r2, r7
 1938 0082 1046     		mov	r0, r2
 1939 0084 0849     		ldr	r1, .L104+12
 1940 0086 1A46     		mov	r2, r3
 1941 0088 FFF7FEFF 		bl	sprintf
 433:.\main.c      ****         usbPutString(printString);
 1942              		.loc 1 433 0
 1943 008c 3B46     		mov	r3, r7
 1944 008e 1846     		mov	r0, r3
 1945 0090 FFF7FEFF 		bl	usbPutString
 1946              	.L102:
 1947              	.LBE4:
 434:.\main.c      ****     }
 435:.\main.c      **** }
 1948              		.loc 1 435 0
 1949 0094 1037     		adds	r7, r7, #16
 1950              		.cfi_def_cfa_offset 8
 1951 0096 BD46     		mov	sp, r7
 1952              		.cfi_def_cfa_register 13
 1953              		@ sp needed
 1954 0098 80BD     		pop	{r7, pc}
 1955              	.L105:
 1956 009a 00BF     		.align	2
 1957              	.L104:
 1958 009c 00000000 		.word	flag_print_rf
 1959 00a0 5C000000 		.word	.LC4
 1960 00a4 00000000 		.word	system_state
 1961 00a8 64000000 		.word	.LC5
 1962 00ac 6C000000 		.word	.LC6
 1963 00b0 78000000 		.word	.LC7
 1964 00b4 84000000 		.word	.LC8
 1965              		.cfi_endproc
 1966              	.LFE87:
 1967              		.size	print_RF, .-print_RF
 1968              		.section	.text.main,"ax",%progbits
 1969              		.align	2
 1970              		.global	main
 1971              		.thumb
 1972              		.thumb_func
 1973              		.type	main, %function
 1974              	main:
 1975              	.LFB88:
 436:.\main.c      **** 
 437:.\main.c      **** int main()
 438:.\main.c      **** {  
 1976              		.loc 1 438 0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 0
 1979              		@ frame_needed = 1, uses_anonymous_args = 0
 1980 0000 80B5     		push	{r7, lr}
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 7, -8
 1983              		.cfi_offset 14, -4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 44


 1984 0002 00AF     		add	r7, sp, #0
 1985              		.cfi_def_cfa_register 7
 439:.\main.c      **** 
 440:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 441:.\main.c      **** // ----- INITIALIZATIONS ----------
 442:.\main.c      ****     CYGlobalIntEnable;
 1986              		.loc 1 442 0
 1987              	@ 442 ".\main.c" 1
 1988 0004 62B6     		CPSIE   i
 1989              	@ 0 "" 2
 443:.\main.c      ****     if(ENABLE_PWM)
 444:.\main.c      ****     {
 445:.\main.c      ****         PWM_1_Start();// starting the pwm
 1990              		.loc 1 445 0
 1991              		.thumb
 1992 0006 FFF7FEFF 		bl	PWM_1_Start
 446:.\main.c      ****         PWM_2_Start();// starting the pwm
 1993              		.loc 1 446 0
 1994 000a FFF7FEFF 		bl	PWM_2_Start
 447:.\main.c      ****     }
 448:.\main.c      ****     
 449:.\main.c      ****     if(ENABLE_ADC)
 450:.\main.c      ****     {
 451:.\main.c      ****         ADC_Start();
 452:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 453:.\main.c      ****         //ADC_StartConvert();
 454:.\main.c      ****         
 455:.\main.c      ****         //start the ADC timer for software trigger mode
 456:.\main.c      ****         Timer_TS_Start();
 457:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 458:.\main.c      ****     }
 459:.\main.c      ****     
 460:.\main.c      ****     if (ENABLE_QUAD)
 461:.\main.c      ****     {
 462:.\main.c      ****         QuadDec_M1_Start();
 1995              		.loc 1 462 0
 1996 000e FFF7FEFF 		bl	QuadDec_M1_Start
 463:.\main.c      ****         QuadDec_M2_Start();
 1997              		.loc 1 463 0
 1998 0012 FFF7FEFF 		bl	QuadDec_M2_Start
 464:.\main.c      ****         
 465:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1999              		.loc 1 465 0
 2000 0016 2248     		ldr	r0, .L116
 2001 0018 FFF7FEFF 		bl	isr_quad1_StartEx
 466:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 2002              		.loc 1 466 0
 2003 001c 2148     		ldr	r0, .L116+4
 2004 001e FFF7FEFF 		bl	isr_turn_count_StartEx
 467:.\main.c      ****         
 468:.\main.c      ****         Timer_1_Start();
 2005              		.loc 1 468 0
 2006 0022 FFF7FEFF 		bl	Timer_1_Start
 469:.\main.c      ****     }
 470:.\main.c      ****     
 471:.\main.c      ****     if(ENABLE_STOP){
 472:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 45


 2007              		.loc 1 472 0
 2008 0026 2048     		ldr	r0, .L116+8
 2009 0028 FFF7FEFF 		bl	isr_OnLine_StartEx
 473:.\main.c      ****         isr_button_StartEx(button);
 2010              		.loc 1 473 0
 2011 002c 1F48     		ldr	r0, .L116+12
 2012 002e FFF7FEFF 		bl	isr_button_StartEx
 474:.\main.c      ****     }
 475:.\main.c      ****     
 476:.\main.c      **** 
 477:.\main.c      ****     // ------USB SETUP ----------------    
 478:.\main.c      ****     if (USE_USB){    
 479:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 2013              		.loc 1 479 0
 2014 0032 0020     		movs	r0, #0
 2015 0034 0121     		movs	r1, #1
 2016 0036 FFF7FEFF 		bl	USBUART_Start
 480:.\main.c      ****         if (USBUART_GetConfiguration())
 2017              		.loc 1 480 0
 2018 003a FFF7FEFF 		bl	USBUART_GetConfiguration
 2019 003e 0346     		mov	r3, r0
 2020 0040 002B     		cmp	r3, #0
 2021 0042 01D0     		beq	.L115
 481:.\main.c      ****             {
 482:.\main.c      ****                  USBUART_CDC_Init();
 2022              		.loc 1 482 0
 2023 0044 FFF7FEFF 		bl	USBUART_CDC_Init
 2024              	.L115:
 483:.\main.c      ****             }
 484:.\main.c      ****     }
 485:.\main.c      ****     
 486:.\main.c      ****     if(BIN_ENABLED){
 487:.\main.c      ****         UART_clk_SetDividerValue(130);
 488:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 489:.\main.c      ****         UART_Start();
 490:.\main.c      ****         RF_BT_SELECT_Write(0);
 491:.\main.c      ****     }
 492:.\main.c      ****     
 493:.\main.c      ****     if(BT_ENABLED){
 494:.\main.c      ****         UART_clk_SetDividerValue(781);
 2025              		.loc 1 494 0
 2026 0048 4FF44370 		mov	r0, #780
 2027 004c 0121     		movs	r1, #1
 2028 004e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 495:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2029              		.loc 1 495 0
 2030 0052 1748     		ldr	r0, .L116+16
 2031 0054 FFF7FEFF 		bl	isrRF_RX_StartEx
 496:.\main.c      ****         UART_Start();
 2032              		.loc 1 496 0
 2033 0058 FFF7FEFF 		bl	UART_Start
 497:.\main.c      ****         RF_BT_SELECT_Write(1);
 2034              		.loc 1 497 0
 2035 005c 0120     		movs	r0, #1
 2036 005e FFF7FEFF 		bl	RF_BT_SELECT_Write
 2037              	.L114:
 498:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 46


 499:.\main.c      ****     
 500:.\main.c      ****     //usbPutString("Started");
 501:.\main.c      ****     for(;;)
 502:.\main.c      ****     {
 503:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 504:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 2038              		.loc 1 504 0
 2039 0062 FFF7FEFF 		bl	Quad_Dec_response
 505:.\main.c      ****         if(BIN_ENABLED == 1)
 506:.\main.c      ****         {
 507:.\main.c      ****             handle_rx_binary();
 508:.\main.c      ****             print_RF();
 509:.\main.c      ****         }
 510:.\main.c      ****         
 511:.\main.c      ****         switch(movement_state)
 2040              		.loc 1 511 0
 2041 0066 134B     		ldr	r3, .L116+20
 2042 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2043 006a 032B     		cmp	r3, #3
 2044 006c F9D8     		bhi	.L114
 2045 006e 01A2     		adr	r2, .L110
 2046 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2047              		.p2align 2
 2048              	.L110:
 2049 0074 85000000 		.word	.L109+1
 2050 0078 8B000000 		.word	.L111+1
 2051 007c 91000000 		.word	.L112+1
 2052 0080 97000000 		.word	.L113+1
 2053              		.p2align 1
 2054              	.L109:
 512:.\main.c      ****         {
 513:.\main.c      ****             case DRIVE:
 514:.\main.c      ****                 driveForwards();
 2055              		.loc 1 514 0
 2056 0084 FFF7FEFF 		bl	driveForwards
 515:.\main.c      ****             break;
 2057              		.loc 1 515 0
 2058 0088 08E0     		b	.L108
 2059              	.L111:
 516:.\main.c      ****             case LTURN:
 517:.\main.c      ****                 turnLeft();
 2060              		.loc 1 517 0
 2061 008a FFF7FEFF 		bl	turnLeft
 518:.\main.c      ****             break;
 2062              		.loc 1 518 0
 2063 008e 05E0     		b	.L108
 2064              	.L112:
 519:.\main.c      ****             case RTURN:
 520:.\main.c      ****                 turnRight();
 2065              		.loc 1 520 0
 2066 0090 FFF7FEFF 		bl	turnRight
 521:.\main.c      ****             break;
 2067              		.loc 1 521 0
 2068 0094 02E0     		b	.L108
 2069              	.L113:
 522:.\main.c      ****             case STOPPED:
 523:.\main.c      ****                 brakeMotor();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 47


 2070              		.loc 1 523 0
 2071 0096 FFF7FEFF 		bl	brakeMotor
 524:.\main.c      ****             break;
 2072              		.loc 1 524 0
 2073 009a 00BF     		nop
 2074              	.L108:
 525:.\main.c      ****         }
 526:.\main.c      ****         //handle_usb();        
 527:.\main.c      ****     }   
 2075              		.loc 1 527 0
 2076 009c E1E7     		b	.L114
 2077              	.L117:
 2078 009e 00BF     		.align	2
 2079              	.L116:
 2080 00a0 00000000 		.word	isr_quad1
 2081 00a4 00000000 		.word	isr_turn_timer
 2082 00a8 00000000 		.word	Stop_on_line
 2083 00ac 00000000 		.word	button
 2084 00b0 00000000 		.word	BT_rxInt
 2085 00b4 00000000 		.word	movement_state
 2086              		.cfi_endproc
 2087              	.LFE88:
 2088              		.size	main, .-main
 2089              		.section	.text.usbPutString,"ax",%progbits
 2090              		.align	2
 2091              		.global	usbPutString
 2092              		.thumb
 2093              		.thumb_func
 2094              		.type	usbPutString, %function
 2095              	usbPutString:
 2096              	.LFB89:
 528:.\main.c      **** }
 529:.\main.c      **** //* ========================================
 530:.\main.c      **** void usbPutString(char *s)
 531:.\main.c      **** {
 2097              		.loc 1 531 0
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 16
 2100              		@ frame_needed = 1, uses_anonymous_args = 0
 2101 0000 80B5     		push	{r7, lr}
 2102              		.cfi_def_cfa_offset 8
 2103              		.cfi_offset 7, -8
 2104              		.cfi_offset 14, -4
 2105 0002 84B0     		sub	sp, sp, #16
 2106              		.cfi_def_cfa_offset 24
 2107 0004 00AF     		add	r7, sp, #0
 2108              		.cfi_def_cfa_register 7
 2109 0006 7860     		str	r0, [r7, #4]
 532:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 533:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 534:.\main.c      **** //  length to 62 char (63rd char is a '!')
 535:.\main.c      ****     if (USE_USB && portOpen)    
 2110              		.loc 1 535 0
 2111 0008 154B     		ldr	r3, .L122
 2112 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2113 000c 002B     		cmp	r3, #0
 2114 000e 23D0     		beq	.L118
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 48


 2115              	.LBB5:
 536:.\main.c      ****     {
 537:.\main.c      ****             uint32 cnt = 0;
 2116              		.loc 1 537 0
 2117 0010 0023     		movs	r3, #0
 2118 0012 FB60     		str	r3, [r7, #12]
 538:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 2119              		.loc 1 538 0
 2120 0014 0AE0     		b	.L120
 2121              	.L121:
 539:.\main.c      ****             {
 540:.\main.c      ****                 cnt++;
 2122              		.loc 1 540 0
 2123 0016 FB68     		ldr	r3, [r7, #12]
 2124 0018 0133     		adds	r3, r3, #1
 2125 001a FB60     		str	r3, [r7, #12]
 541:.\main.c      ****                 if(cnt == 3000000){
 2126              		.loc 1 541 0
 2127 001c FB68     		ldr	r3, [r7, #12]
 2128 001e 114A     		ldr	r2, .L122+4
 2129 0020 9342     		cmp	r3, r2
 2130 0022 03D1     		bne	.L120
 542:.\main.c      ****                     portOpen = 0;
 2131              		.loc 1 542 0
 2132 0024 0E4B     		ldr	r3, .L122
 2133 0026 0022     		movs	r2, #0
 2134 0028 1A70     		strb	r2, [r3]
 543:.\main.c      ****                     return;
 2135              		.loc 1 543 0
 2136 002a 15E0     		b	.L118
 2137              	.L120:
 538:.\main.c      ****             {
 2138              		.loc 1 538 0
 2139 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 2140 0030 0346     		mov	r3, r0
 2141 0032 002B     		cmp	r3, #0
 2142 0034 EFD0     		beq	.L121
 544:.\main.c      ****                 }
 545:.\main.c      ****             }
 546:.\main.c      ****             s[63]='\0';
 2143              		.loc 1 546 0
 2144 0036 7B68     		ldr	r3, [r7, #4]
 2145 0038 3F33     		adds	r3, r3, #63
 2146 003a 0022     		movs	r2, #0
 2147 003c 1A70     		strb	r2, [r3]
 547:.\main.c      ****             s[62]='!';
 2148              		.loc 1 547 0
 2149 003e 7B68     		ldr	r3, [r7, #4]
 2150 0040 3E33     		adds	r3, r3, #62
 2151 0042 2122     		movs	r2, #33
 2152 0044 1A70     		strb	r2, [r3]
 548:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 2153              		.loc 1 548 0
 2154 0046 7868     		ldr	r0, [r7, #4]
 2155 0048 FFF7FEFF 		bl	strlen
 2156 004c 0346     		mov	r3, r0
 2157 004e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 49


 2158 0050 7868     		ldr	r0, [r7, #4]
 2159 0052 1946     		mov	r1, r3
 2160 0054 FFF7FEFF 		bl	USBUART_PutData
 2161              	.L118:
 2162              	.LBE5:
 549:.\main.c      ****     }
 550:.\main.c      **** }
 2163              		.loc 1 550 0
 2164 0058 1037     		adds	r7, r7, #16
 2165              		.cfi_def_cfa_offset 8
 2166 005a BD46     		mov	sp, r7
 2167              		.cfi_def_cfa_register 13
 2168              		@ sp needed
 2169 005c 80BD     		pop	{r7, pc}
 2170              	.L123:
 2171 005e 00BF     		.align	2
 2172              	.L122:
 2173 0060 00000000 		.word	portOpen
 2174 0064 C0C62D00 		.word	3000000
 2175              		.cfi_endproc
 2176              	.LFE89:
 2177              		.size	usbPutString, .-usbPutString
 2178              		.section	.text.usbPutChar,"ax",%progbits
 2179              		.align	2
 2180              		.global	usbPutChar
 2181              		.thumb
 2182              		.thumb_func
 2183              		.type	usbPutChar, %function
 2184              	usbPutChar:
 2185              	.LFB90:
 551:.\main.c      **** //* ========================================
 552:.\main.c      **** void usbPutChar(char c)
 553:.\main.c      **** {
 2186              		.loc 1 553 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 16
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0000 80B5     		push	{r7, lr}
 2191              		.cfi_def_cfa_offset 8
 2192              		.cfi_offset 7, -8
 2193              		.cfi_offset 14, -4
 2194 0002 84B0     		sub	sp, sp, #16
 2195              		.cfi_def_cfa_offset 24
 2196 0004 00AF     		add	r7, sp, #0
 2197              		.cfi_def_cfa_register 7
 2198 0006 0346     		mov	r3, r0
 2199 0008 FB71     		strb	r3, [r7, #7]
 554:.\main.c      ****     if (USE_USB && portOpen)    
 2200              		.loc 1 554 0
 2201 000a 0F4B     		ldr	r3, .L128
 2202 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2203 000e 002B     		cmp	r3, #0
 2204 0010 16D0     		beq	.L124
 2205              	.LBB6:
 555:.\main.c      ****     {    
 556:.\main.c      ****         uint32 cnt = 0;
 2206              		.loc 1 556 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 50


 2207 0012 0023     		movs	r3, #0
 2208 0014 FB60     		str	r3, [r7, #12]
 557:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 2209              		.loc 1 557 0
 2210 0016 0AE0     		b	.L126
 2211              	.L127:
 558:.\main.c      ****             cnt++;
 2212              		.loc 1 558 0
 2213 0018 FB68     		ldr	r3, [r7, #12]
 2214 001a 0133     		adds	r3, r3, #1
 2215 001c FB60     		str	r3, [r7, #12]
 559:.\main.c      ****             if(cnt == 3000000){
 2216              		.loc 1 559 0
 2217 001e FB68     		ldr	r3, [r7, #12]
 2218 0020 0A4A     		ldr	r2, .L128+4
 2219 0022 9342     		cmp	r3, r2
 2220 0024 03D1     		bne	.L126
 560:.\main.c      ****                 portOpen = 0;
 2221              		.loc 1 560 0
 2222 0026 084B     		ldr	r3, .L128
 2223 0028 0022     		movs	r2, #0
 2224 002a 1A70     		strb	r2, [r3]
 561:.\main.c      ****                 return;
 2225              		.loc 1 561 0
 2226 002c 08E0     		b	.L124
 2227              	.L126:
 557:.\main.c      ****             cnt++;
 2228              		.loc 1 557 0
 2229 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 2230 0032 0346     		mov	r3, r0
 2231 0034 002B     		cmp	r3, #0
 2232 0036 EFD0     		beq	.L127
 562:.\main.c      ****             }
 563:.\main.c      ****         }
 564:.\main.c      ****         USBUART_PutChar(c);
 2233              		.loc 1 564 0
 2234 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2235 003a 1846     		mov	r0, r3
 2236 003c FFF7FEFF 		bl	USBUART_PutChar
 2237              	.L124:
 2238              	.LBE6:
 565:.\main.c      ****     }    
 566:.\main.c      **** }
 2239              		.loc 1 566 0
 2240 0040 1037     		adds	r7, r7, #16
 2241              		.cfi_def_cfa_offset 8
 2242 0042 BD46     		mov	sp, r7
 2243              		.cfi_def_cfa_register 13
 2244              		@ sp needed
 2245 0044 80BD     		pop	{r7, pc}
 2246              	.L129:
 2247 0046 00BF     		.align	2
 2248              	.L128:
 2249 0048 00000000 		.word	portOpen
 2250 004c C0C62D00 		.word	3000000
 2251              		.cfi_endproc
 2252              	.LFE90:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 51


 2253              		.size	usbPutChar, .-usbPutChar
 2254              		.section	.text.uart_set_PWM,"ax",%progbits
 2255              		.align	2
 2256              		.global	uart_set_PWM
 2257              		.thumb
 2258              		.thumb_func
 2259              		.type	uart_set_PWM, %function
 2260              	uart_set_PWM:
 2261              	.LFB91:
 567:.\main.c      **** //* ========================================
 568:.\main.c      **** 
 569:.\main.c      **** void uart_set_PWM()
 570:.\main.c      **** {
 2262              		.loc 1 570 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266 0000 80B5     		push	{r7, lr}
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 7, -8
 2269              		.cfi_offset 14, -4
 2270 0002 82B0     		sub	sp, sp, #8
 2271              		.cfi_def_cfa_offset 16
 2272 0004 00AF     		add	r7, sp, #0
 2273              		.cfi_def_cfa_register 7
 571:.\main.c      ****     uint8 c;
 572:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 2274              		.loc 1 572 0
 2275 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 2276 000a 0346     		mov	r3, r0
 2277 000c 002B     		cmp	r3, #0
 2278 000e 11D0     		beq	.L130
 573:.\main.c      ****        {  
 574:.\main.c      ****             c = USBUART_GetChar();
 2279              		.loc 1 574 0
 2280 0010 FFF7FEFF 		bl	USBUART_GetChar
 2281 0014 0346     		mov	r3, r0
 2282 0016 FB71     		strb	r3, [r7, #7]
 575:.\main.c      ****             
 576:.\main.c      ****             if(c <= 100 && c > 0){
 2283              		.loc 1 576 0
 2284 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2285 001a 642B     		cmp	r3, #100
 2286 001c 0AD8     		bhi	.L130
 2287              		.loc 1 576 0 is_stmt 0 discriminator 1
 2288 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2289 0020 002B     		cmp	r3, #0
 2290 0022 07D0     		beq	.L130
 577:.\main.c      ****                 PWM_1_WriteCompare(c);
 2291              		.loc 1 577 0 is_stmt 1
 2292 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2293 0026 1846     		mov	r0, r3
 2294 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 578:.\main.c      ****                 usbPutString(c);
 2295              		.loc 1 578 0
 2296 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2297 002e 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 52


 2298 0030 FFF7FEFF 		bl	usbPutString
 2299              	.L130:
 579:.\main.c      ****             }
 580:.\main.c      ****        }
 581:.\main.c      **** }
 2300              		.loc 1 581 0
 2301 0034 0837     		adds	r7, r7, #8
 2302              		.cfi_def_cfa_offset 8
 2303 0036 BD46     		mov	sp, r7
 2304              		.cfi_def_cfa_register 13
 2305              		@ sp needed
 2306 0038 80BD     		pop	{r7, pc}
 2307              		.cfi_endproc
 2308              	.LFE91:
 2309              		.size	uart_set_PWM, .-uart_set_PWM
 2310 003a 00BF     		.text
 2311              	.Letext0:
 2312              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2313              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2314              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2315              		.file 5 ".\\vars.h"
 2316              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2317              		.section	.debug_info,"",%progbits
 2318              	.Ldebug_info0:
 2319 0000 C0080000 		.4byte	0x8c0
 2320 0004 0400     		.2byte	0x4
 2321 0006 00000000 		.4byte	.Ldebug_abbrev0
 2322 000a 04       		.byte	0x4
 2323 000b 01       		.uleb128 0x1
 2324 000c CF020000 		.4byte	.LASF130
 2325 0010 01       		.byte	0x1
 2326 0011 77060000 		.4byte	.LASF131
 2327 0015 25060000 		.4byte	.LASF132
 2328 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2329 001d 00000000 		.4byte	0
 2330 0021 00000000 		.4byte	.Ldebug_line0
 2331 0025 02       		.uleb128 0x2
 2332 0026 01       		.byte	0x1
 2333 0027 06       		.byte	0x6
 2334 0028 AD050000 		.4byte	.LASF0
 2335 002c 02       		.uleb128 0x2
 2336 002d 01       		.byte	0x1
 2337 002e 08       		.byte	0x8
 2338 002f 10050000 		.4byte	.LASF1
 2339 0033 02       		.uleb128 0x2
 2340 0034 02       		.byte	0x2
 2341 0035 05       		.byte	0x5
 2342 0036 24040000 		.4byte	.LASF2
 2343 003a 02       		.uleb128 0x2
 2344 003b 02       		.byte	0x2
 2345 003c 07       		.byte	0x7
 2346 003d B9050000 		.4byte	.LASF3
 2347 0041 03       		.uleb128 0x3
 2348 0042 6E000000 		.4byte	.LASF11
 2349 0046 02       		.byte	0x2
 2350 0047 3F       		.byte	0x3f
 2351 0048 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 53


 2352 004c 02       		.uleb128 0x2
 2353 004d 04       		.byte	0x4
 2354 004e 05       		.byte	0x5
 2355 004f 4E040000 		.4byte	.LASF4
 2356 0053 02       		.uleb128 0x2
 2357 0054 04       		.byte	0x4
 2358 0055 07       		.byte	0x7
 2359 0056 C7040000 		.4byte	.LASF5
 2360 005a 02       		.uleb128 0x2
 2361 005b 08       		.byte	0x8
 2362 005c 05       		.byte	0x5
 2363 005d AC020000 		.4byte	.LASF6
 2364 0061 02       		.uleb128 0x2
 2365 0062 08       		.byte	0x8
 2366 0063 07       		.byte	0x7
 2367 0064 8B010000 		.4byte	.LASF7
 2368 0068 04       		.uleb128 0x4
 2369 0069 04       		.byte	0x4
 2370 006a 05       		.byte	0x5
 2371 006b 696E7400 		.ascii	"int\000"
 2372 006f 02       		.uleb128 0x2
 2373 0070 04       		.byte	0x4
 2374 0071 07       		.byte	0x7
 2375 0072 61000000 		.4byte	.LASF8
 2376 0076 02       		.uleb128 0x2
 2377 0077 04       		.byte	0x4
 2378 0078 07       		.byte	0x7
 2379 0079 BE040000 		.4byte	.LASF9
 2380 007d 05       		.uleb128 0x5
 2381 007e 04       		.byte	0x4
 2382 007f 83000000 		.4byte	0x83
 2383 0083 02       		.uleb128 0x2
 2384 0084 01       		.byte	0x1
 2385 0085 08       		.byte	0x8
 2386 0086 65020000 		.4byte	.LASF10
 2387 008a 03       		.uleb128 0x3
 2388 008b E5040000 		.4byte	.LASF12
 2389 008f 03       		.byte	0x3
 2390 0090 2C       		.byte	0x2c
 2391 0091 41000000 		.4byte	0x41
 2392 0095 06       		.uleb128 0x6
 2393 0096 F6050000 		.4byte	.LASF13
 2394 009a 04       		.byte	0x4
 2395 009b 9201     		.2byte	0x192
 2396 009d 2C000000 		.4byte	0x2c
 2397 00a1 06       		.uleb128 0x6
 2398 00a2 83020000 		.4byte	.LASF14
 2399 00a6 04       		.byte	0x4
 2400 00a7 9301     		.2byte	0x193
 2401 00a9 3A000000 		.4byte	0x3a
 2402 00ad 06       		.uleb128 0x6
 2403 00ae 8A030000 		.4byte	.LASF15
 2404 00b2 04       		.byte	0x4
 2405 00b3 9401     		.2byte	0x194
 2406 00b5 53000000 		.4byte	0x53
 2407 00b9 06       		.uleb128 0x6
 2408 00ba 8A020000 		.4byte	.LASF16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 54


 2409 00be 04       		.byte	0x4
 2410 00bf 9501     		.2byte	0x195
 2411 00c1 25000000 		.4byte	0x25
 2412 00c5 06       		.uleb128 0x6
 2413 00c6 78000000 		.4byte	.LASF17
 2414 00ca 04       		.byte	0x4
 2415 00cb 9601     		.2byte	0x196
 2416 00cd 33000000 		.4byte	0x33
 2417 00d1 02       		.uleb128 0x2
 2418 00d2 04       		.byte	0x4
 2419 00d3 04       		.byte	0x4
 2420 00d4 41010000 		.4byte	.LASF18
 2421 00d8 02       		.uleb128 0x2
 2422 00d9 08       		.byte	0x8
 2423 00da 04       		.byte	0x4
 2424 00db FC050000 		.4byte	.LASF19
 2425 00df 02       		.uleb128 0x2
 2426 00e0 08       		.byte	0x8
 2427 00e1 04       		.byte	0x4
 2428 00e2 DD030000 		.4byte	.LASF20
 2429 00e6 07       		.uleb128 0x7
 2430 00e7 51050000 		.4byte	.LASF133
 2431 00eb 01       		.byte	0x1
 2432 00ec 05       		.byte	0x5
 2433 00ed 48       		.byte	0x48
 2434 00ee 0B010000 		.4byte	0x10b
 2435 00f2 08       		.uleb128 0x8
 2436 00f3 60010000 		.4byte	.LASF21
 2437 00f7 00       		.sleb128 0
 2438 00f8 08       		.uleb128 0x8
 2439 00f9 8B000000 		.4byte	.LASF22
 2440 00fd 01       		.sleb128 1
 2441 00fe 08       		.uleb128 0x8
 2442 00ff 0A000000 		.4byte	.LASF23
 2443 0103 02       		.sleb128 2
 2444 0104 08       		.uleb128 0x8
 2445 0105 CC030000 		.4byte	.LASF24
 2446 0109 03       		.sleb128 3
 2447 010a 00       		.byte	0
 2448 010b 09       		.uleb128 0x9
 2449 010c 91030000 		.4byte	.LASF134
 2450 0110 20       		.byte	0x20
 2451 0111 05       		.byte	0x5
 2452 0112 4F       		.byte	0x4f
 2453 0113 E4010000 		.4byte	0x1e4
 2454 0117 0A       		.uleb128 0xa
 2455 0118 A9030000 		.4byte	.LASF25
 2456 011c 05       		.byte	0x5
 2457 011d 50       		.byte	0x50
 2458 011e B9000000 		.4byte	0xb9
 2459 0122 00       		.byte	0
 2460 0123 0A       		.uleb128 0xa
 2461 0124 5A010000 		.4byte	.LASF26
 2462 0128 05       		.byte	0x5
 2463 0129 51       		.byte	0x51
 2464 012a 95000000 		.4byte	0x95
 2465 012e 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 55


 2466 012f 0A       		.uleb128 0xa
 2467 0130 F4040000 		.4byte	.LASF27
 2468 0134 05       		.byte	0x5
 2469 0135 52       		.byte	0x52
 2470 0136 C5000000 		.4byte	0xc5
 2471 013a 02       		.byte	0x2
 2472 013b 0A       		.uleb128 0xa
 2473 013c 39020000 		.4byte	.LASF28
 2474 0140 05       		.byte	0x5
 2475 0141 53       		.byte	0x53
 2476 0142 C5000000 		.4byte	0xc5
 2477 0146 04       		.byte	0x4
 2478 0147 0A       		.uleb128 0xa
 2479 0148 CC050000 		.4byte	.LASF29
 2480 014c 05       		.byte	0x5
 2481 014d 54       		.byte	0x54
 2482 014e C5000000 		.4byte	0xc5
 2483 0152 06       		.byte	0x6
 2484 0153 0A       		.uleb128 0xa
 2485 0154 57060000 		.4byte	.LASF30
 2486 0158 05       		.byte	0x5
 2487 0159 55       		.byte	0x55
 2488 015a C5000000 		.4byte	0xc5
 2489 015e 08       		.byte	0x8
 2490 015f 0A       		.uleb128 0xa
 2491 0160 66030000 		.4byte	.LASF31
 2492 0164 05       		.byte	0x5
 2493 0165 56       		.byte	0x56
 2494 0166 C5000000 		.4byte	0xc5
 2495 016a 0A       		.byte	0xa
 2496 016b 0A       		.uleb128 0xa
 2497 016c 6A020000 		.4byte	.LASF32
 2498 0170 05       		.byte	0x5
 2499 0171 57       		.byte	0x57
 2500 0172 C5000000 		.4byte	0xc5
 2501 0176 0C       		.byte	0xc
 2502 0177 0A       		.uleb128 0xa
 2503 0178 AE030000 		.4byte	.LASF33
 2504 017c 05       		.byte	0x5
 2505 017d 58       		.byte	0x58
 2506 017e C5000000 		.4byte	0xc5
 2507 0182 0E       		.byte	0xe
 2508 0183 0A       		.uleb128 0xa
 2509 0184 C7020000 		.4byte	.LASF34
 2510 0188 05       		.byte	0x5
 2511 0189 59       		.byte	0x59
 2512 018a C5000000 		.4byte	0xc5
 2513 018e 10       		.byte	0x10
 2514 018f 0A       		.uleb128 0xa
 2515 0190 AE040000 		.4byte	.LASF35
 2516 0194 05       		.byte	0x5
 2517 0195 5A       		.byte	0x5a
 2518 0196 C5000000 		.4byte	0xc5
 2519 019a 12       		.byte	0x12
 2520 019b 0A       		.uleb128 0xa
 2521 019c 6E060000 		.4byte	.LASF36
 2522 01a0 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 56


 2523 01a1 5B       		.byte	0x5b
 2524 01a2 C5000000 		.4byte	0xc5
 2525 01a6 14       		.byte	0x14
 2526 01a7 0A       		.uleb128 0xa
 2527 01a8 8F020000 		.4byte	.LASF37
 2528 01ac 05       		.byte	0x5
 2529 01ad 5C       		.byte	0x5c
 2530 01ae C5000000 		.4byte	0xc5
 2531 01b2 16       		.byte	0x16
 2532 01b3 0A       		.uleb128 0xa
 2533 01b4 B8000000 		.4byte	.LASF38
 2534 01b8 05       		.byte	0x5
 2535 01b9 5D       		.byte	0x5d
 2536 01ba C5000000 		.4byte	0xc5
 2537 01be 18       		.byte	0x18
 2538 01bf 0A       		.uleb128 0xa
 2539 01c0 97040000 		.4byte	.LASF39
 2540 01c4 05       		.byte	0x5
 2541 01c5 5E       		.byte	0x5e
 2542 01c6 C5000000 		.4byte	0xc5
 2543 01ca 1A       		.byte	0x1a
 2544 01cb 0A       		.uleb128 0xa
 2545 01cc 5D030000 		.4byte	.LASF40
 2546 01d0 05       		.byte	0x5
 2547 01d1 5F       		.byte	0x5f
 2548 01d2 C5000000 		.4byte	0xc5
 2549 01d6 1C       		.byte	0x1c
 2550 01d7 0A       		.uleb128 0xa
 2551 01d8 2A010000 		.4byte	.LASF41
 2552 01dc 05       		.byte	0x5
 2553 01dd 60       		.byte	0x60
 2554 01de C5000000 		.4byte	0xc5
 2555 01e2 1E       		.byte	0x1e
 2556 01e3 00       		.byte	0
 2557 01e4 0B       		.uleb128 0xb
 2558 01e5 14060000 		.4byte	.LASF69
 2559 01e9 01       		.byte	0x1
 2560 01ea 28       		.byte	0x28
 2561 01eb 00000000 		.4byte	.LFB63
 2562 01ef 60010000 		.4byte	.LFE63-.LFB63
 2563 01f3 01       		.uleb128 0x1
 2564 01f4 9C       		.byte	0x9c
 2565 01f5 2E020000 		.4byte	0x22e
 2566 01f9 0C       		.uleb128 0xc
 2567 01fa 10000000 		.4byte	.LBB2
 2568 01fe 34010000 		.4byte	.LBE2-.LBB2
 2569 0202 0D       		.uleb128 0xd
 2570 0203 AB000000 		.4byte	.LASF42
 2571 0207 01       		.byte	0x1
 2572 0208 2E       		.byte	0x2e
 2573 0209 A1000000 		.4byte	0xa1
 2574 020d 02       		.uleb128 0x2
 2575 020e 91       		.byte	0x91
 2576 020f 76       		.sleb128 -10
 2577 0210 0D       		.uleb128 0xd
 2578 0211 D9040000 		.4byte	.LASF43
 2579 0215 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 57


 2580 0216 30       		.byte	0x30
 2581 0217 2E020000 		.4byte	0x22e
 2582 021b 02       		.uleb128 0x2
 2583 021c 91       		.byte	0x91
 2584 021d 68       		.sleb128 -24
 2585 021e 0D       		.uleb128 0xd
 2586 021f 66010000 		.4byte	.LASF44
 2587 0223 01       		.byte	0x1
 2588 0224 31       		.byte	0x31
 2589 0225 2E020000 		.4byte	0x22e
 2590 0229 02       		.uleb128 0x2
 2591 022a 91       		.byte	0x91
 2592 022b 5C       		.sleb128 -36
 2593 022c 00       		.byte	0
 2594 022d 00       		.byte	0
 2595 022e 0E       		.uleb128 0xe
 2596 022f 83000000 		.4byte	0x83
 2597 0233 3E020000 		.4byte	0x23e
 2598 0237 0F       		.uleb128 0xf
 2599 0238 76000000 		.4byte	0x76
 2600 023c 0B       		.byte	0xb
 2601 023d 00       		.byte	0
 2602 023e 10       		.uleb128 0x10
 2603 023f 47010000 		.4byte	.LASF58
 2604 0243 01       		.byte	0x1
 2605 0244 A1       		.byte	0xa1
 2606 0245 00000000 		.4byte	.LFB64
 2607 0249 2C000000 		.4byte	.LFE64-.LFB64
 2608 024d 01       		.uleb128 0x1
 2609 024e 9C       		.byte	0x9c
 2610 024f 70020000 		.4byte	0x270
 2611 0253 11       		.uleb128 0x11
 2612 0254 A6020000 		.4byte	.LASF45
 2613 0258 01       		.byte	0x1
 2614 0259 A1       		.byte	0xa1
 2615 025a 68000000 		.4byte	0x68
 2616 025e 02       		.uleb128 0x2
 2617 025f 91       		.byte	0x91
 2618 0260 74       		.sleb128 -12
 2619 0261 11       		.uleb128 0x11
 2620 0262 9F040000 		.4byte	.LASF46
 2621 0266 01       		.byte	0x1
 2622 0267 A1       		.byte	0xa1
 2623 0268 68000000 		.4byte	0x68
 2624 026c 02       		.uleb128 0x2
 2625 026d 91       		.byte	0x91
 2626 026e 70       		.sleb128 -16
 2627 026f 00       		.byte	0
 2628 0270 12       		.uleb128 0x12
 2629 0271 68050000 		.4byte	.LASF47
 2630 0275 01       		.byte	0x1
 2631 0276 A6       		.byte	0xa6
 2632 0277 00000000 		.4byte	.LFB65
 2633 027b 18000000 		.4byte	.LFE65-.LFB65
 2634 027f 01       		.uleb128 0x1
 2635 0280 9C       		.byte	0x9c
 2636 0281 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 58


 2637 0282 80060000 		.4byte	.LASF48
 2638 0286 01       		.byte	0x1
 2639 0287 AC       		.byte	0xac
 2640 0288 00000000 		.4byte	.LFB66
 2641 028c 18000000 		.4byte	.LFE66-.LFB66
 2642 0290 01       		.uleb128 0x1
 2643 0291 9C       		.byte	0x9c
 2644 0292 12       		.uleb128 0x12
 2645 0293 FF040000 		.4byte	.LASF49
 2646 0297 01       		.byte	0x1
 2647 0298 B2       		.byte	0xb2
 2648 0299 00000000 		.4byte	.LFB67
 2649 029d 16000000 		.4byte	.LFE67-.LFB67
 2650 02a1 01       		.uleb128 0x1
 2651 02a2 9C       		.byte	0x9c
 2652 02a3 12       		.uleb128 0x12
 2653 02a4 74010000 		.4byte	.LASF50
 2654 02a8 01       		.byte	0x1
 2655 02a9 B9       		.byte	0xb9
 2656 02aa 00000000 		.4byte	.LFB68
 2657 02ae 0E000000 		.4byte	.LFE68-.LFB68
 2658 02b2 01       		.uleb128 0x1
 2659 02b3 9C       		.byte	0x9c
 2660 02b4 12       		.uleb128 0x12
 2661 02b5 82010000 		.4byte	.LASF51
 2662 02b9 01       		.byte	0x1
 2663 02ba BE       		.byte	0xbe
 2664 02bb 00000000 		.4byte	.LFB69
 2665 02bf 0E000000 		.4byte	.LFE69-.LFB69
 2666 02c3 01       		.uleb128 0x1
 2667 02c4 9C       		.byte	0x9c
 2668 02c5 12       		.uleb128 0x12
 2669 02c6 A4040000 		.4byte	.LASF52
 2670 02ca 01       		.byte	0x1
 2671 02cb C3       		.byte	0xc3
 2672 02cc 00000000 		.4byte	.LFB70
 2673 02d0 0E000000 		.4byte	.LFE70-.LFB70
 2674 02d4 01       		.uleb128 0x1
 2675 02d5 9C       		.byte	0x9c
 2676 02d6 12       		.uleb128 0x12
 2677 02d7 BD010000 		.4byte	.LASF53
 2678 02db 01       		.byte	0x1
 2679 02dc C8       		.byte	0xc8
 2680 02dd 00000000 		.4byte	.LFB71
 2681 02e1 2C000000 		.4byte	.LFE71-.LFB71
 2682 02e5 01       		.uleb128 0x1
 2683 02e6 9C       		.byte	0x9c
 2684 02e7 12       		.uleb128 0x12
 2685 02e8 57040000 		.4byte	.LASF54
 2686 02ec 01       		.byte	0x1
 2687 02ed D0       		.byte	0xd0
 2688 02ee 00000000 		.4byte	.LFB72
 2689 02f2 2C000000 		.4byte	.LFE72-.LFB72
 2690 02f6 01       		.uleb128 0x1
 2691 02f7 9C       		.byte	0x9c
 2692 02f8 12       		.uleb128 0x12
 2693 02f9 1E010000 		.4byte	.LASF55
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 59


 2694 02fd 01       		.byte	0x1
 2695 02fe D8       		.byte	0xd8
 2696 02ff 00000000 		.4byte	.LFB73
 2697 0303 14000000 		.4byte	.LFE73-.LFB73
 2698 0307 01       		.uleb128 0x1
 2699 0308 9C       		.byte	0x9c
 2700 0309 13       		.uleb128 0x13
 2701 030a D3010000 		.4byte	.LASF56
 2702 030e 01       		.byte	0x1
 2703 030f DD       		.byte	0xdd
 2704 0310 00000000 		.4byte	.LFB74
 2705 0314 18000000 		.4byte	.LFE74-.LFB74
 2706 0318 01       		.uleb128 0x1
 2707 0319 9C       		.byte	0x9c
 2708 031a 12       		.uleb128 0x12
 2709 031b 57050000 		.4byte	.LASF57
 2710 031f 01       		.byte	0x1
 2711 0320 E1       		.byte	0xe1
 2712 0321 00000000 		.4byte	.LFB75
 2713 0325 34000000 		.4byte	.LFE75-.LFB75
 2714 0329 01       		.uleb128 0x1
 2715 032a 9C       		.byte	0x9c
 2716 032b 14       		.uleb128 0x14
 2717 032c E9030000 		.4byte	.LASF59
 2718 0330 01       		.byte	0x1
 2719 0331 E9       		.byte	0xe9
 2720 0332 00000000 		.4byte	.LFB76
 2721 0336 98000000 		.4byte	.LFE76-.LFB76
 2722 033a 01       		.uleb128 0x1
 2723 033b 9C       		.byte	0x9c
 2724 033c 4F030000 		.4byte	0x34f
 2725 0340 0D       		.uleb128 0xd
 2726 0341 6E030000 		.4byte	.LASF60
 2727 0345 01       		.byte	0x1
 2728 0346 EA       		.byte	0xea
 2729 0347 83000000 		.4byte	0x83
 2730 034b 02       		.uleb128 0x2
 2731 034c 91       		.byte	0x91
 2732 034d 6F       		.sleb128 -17
 2733 034e 00       		.byte	0
 2734 034f 15       		.uleb128 0x15
 2735 0350 D4030000 		.4byte	.LASF61
 2736 0354 01       		.byte	0x1
 2737 0355 0101     		.2byte	0x101
 2738 0357 00000000 		.4byte	.LFB77
 2739 035b 9C000000 		.4byte	.LFE77-.LFB77
 2740 035f 01       		.uleb128 0x1
 2741 0360 9C       		.byte	0x9c
 2742 0361 75030000 		.4byte	0x375
 2743 0365 16       		.uleb128 0x16
 2744 0366 6E030000 		.4byte	.LASF60
 2745 036a 01       		.byte	0x1
 2746 036b 0301     		.2byte	0x103
 2747 036d 83000000 		.4byte	0x83
 2748 0371 02       		.uleb128 0x2
 2749 0372 91       		.byte	0x91
 2750 0373 77       		.sleb128 -9
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 60


 2751 0374 00       		.byte	0
 2752 0375 17       		.uleb128 0x17
 2753 0376 E3050000 		.4byte	.LASF62
 2754 037a 01       		.byte	0x1
 2755 037b 1801     		.2byte	0x118
 2756 037d 00000000 		.4byte	.LFB78
 2757 0381 0C000000 		.4byte	.LFE78-.LFB78
 2758 0385 01       		.uleb128 0x1
 2759 0386 9C       		.byte	0x9c
 2760 0387 18       		.uleb128 0x18
 2761 0388 B6040000 		.4byte	.LASF63
 2762 038c 01       		.byte	0x1
 2763 038d 1E01     		.2byte	0x11e
 2764 038f 00000000 		.4byte	.LFB79
 2765 0393 2C000000 		.4byte	.LFE79-.LFB79
 2766 0397 01       		.uleb128 0x1
 2767 0398 9C       		.byte	0x9c
 2768 0399 18       		.uleb128 0x18
 2769 039a 37010000 		.4byte	.LASF64
 2770 039e 01       		.byte	0x1
 2771 039f 2701     		.2byte	0x127
 2772 03a1 00000000 		.4byte	.LFB80
 2773 03a5 B8000000 		.4byte	.LFE80-.LFB80
 2774 03a9 01       		.uleb128 0x1
 2775 03aa 9C       		.byte	0x9c
 2776 03ab 18       		.uleb128 0x18
 2777 03ac AE010000 		.4byte	.LASF65
 2778 03b0 01       		.byte	0x1
 2779 03b1 3C01     		.2byte	0x13c
 2780 03b3 00000000 		.4byte	.LFB81
 2781 03b7 70000000 		.4byte	.LFE81-.LFB81
 2782 03bb 01       		.uleb128 0x1
 2783 03bc 9C       		.byte	0x9c
 2784 03bd 17       		.uleb128 0x17
 2785 03be 23050000 		.4byte	.LASF66
 2786 03c2 01       		.byte	0x1
 2787 03c3 5501     		.2byte	0x155
 2788 03c5 00000000 		.4byte	.LFB82
 2789 03c9 20000000 		.4byte	.LFE82-.LFB82
 2790 03cd 01       		.uleb128 0x1
 2791 03ce 9C       		.byte	0x9c
 2792 03cf 18       		.uleb128 0x18
 2793 03d0 1A020000 		.4byte	.LASF67
 2794 03d4 01       		.byte	0x1
 2795 03d5 5C01     		.2byte	0x15c
 2796 03d7 00000000 		.4byte	.LFB83
 2797 03db 1C000000 		.4byte	.LFE83-.LFB83
 2798 03df 01       		.uleb128 0x1
 2799 03e0 9C       		.byte	0x9c
 2800 03e1 18       		.uleb128 0x18
 2801 03e2 91000000 		.4byte	.LASF68
 2802 03e6 01       		.byte	0x1
 2803 03e7 6501     		.2byte	0x165
 2804 03e9 00000000 		.4byte	.LFB84
 2805 03ed 0A000000 		.4byte	.LFE84-.LFB84
 2806 03f1 01       		.uleb128 0x1
 2807 03f2 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 61


 2808 03f3 19       		.uleb128 0x19
 2809 03f4 32000000 		.4byte	.LASF70
 2810 03f8 01       		.byte	0x1
 2811 03f9 6A01     		.2byte	0x16a
 2812 03fb 00000000 		.4byte	.LFB85
 2813 03ff D8010000 		.4byte	.LFE85-.LFB85
 2814 0403 01       		.uleb128 0x1
 2815 0404 9C       		.byte	0x9c
 2816 0405 66040000 		.4byte	0x466
 2817 0409 16       		.uleb128 0x16
 2818 040a 59020000 		.4byte	.LASF71
 2819 040e 01       		.byte	0x1
 2820 040f 7001     		.2byte	0x170
 2821 0411 66040000 		.4byte	0x466
 2822 0415 03       		.uleb128 0x3
 2823 0416 91       		.byte	0x91
 2824 0417 A47F     		.sleb128 -92
 2825 0419 16       		.uleb128 0x16
 2826 041a 26000000 		.4byte	.LASF72
 2827 041e 01       		.byte	0x1
 2828 041f 7101     		.2byte	0x171
 2829 0421 66040000 		.4byte	0x466
 2830 0425 03       		.uleb128 0x3
 2831 0426 91       		.byte	0x91
 2832 0427 E47E     		.sleb128 -156
 2833 0429 16       		.uleb128 0x16
 2834 042a FA010000 		.4byte	.LASF73
 2835 042e 01       		.byte	0x1
 2836 042f 7801     		.2byte	0x178
 2837 0431 C5000000 		.4byte	0xc5
 2838 0435 02       		.uleb128 0x2
 2839 0436 91       		.byte	0x91
 2840 0437 6E       		.sleb128 -18
 2841 0438 16       		.uleb128 0x16
 2842 0439 76030000 		.4byte	.LASF74
 2843 043d 01       		.byte	0x1
 2844 043e 7901     		.2byte	0x179
 2845 0440 C5000000 		.4byte	0xc5
 2846 0444 02       		.uleb128 0x2
 2847 0445 91       		.byte	0x91
 2848 0446 6C       		.sleb128 -20
 2849 0447 16       		.uleb128 0x16
 2850 0448 9C020000 		.4byte	.LASF75
 2851 044c 01       		.byte	0x1
 2852 044d 7B01     		.2byte	0x17b
 2853 044f 68000000 		.4byte	0x68
 2854 0453 02       		.uleb128 0x2
 2855 0454 91       		.byte	0x91
 2856 0455 68       		.sleb128 -24
 2857 0456 16       		.uleb128 0x16
 2858 0457 EC050000 		.4byte	.LASF76
 2859 045b 01       		.byte	0x1
 2860 045c 7C01     		.2byte	0x17c
 2861 045e 68000000 		.4byte	0x68
 2862 0462 02       		.uleb128 0x2
 2863 0463 91       		.byte	0x91
 2864 0464 64       		.sleb128 -28
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 62


 2865 0465 00       		.byte	0
 2866 0466 0E       		.uleb128 0xe
 2867 0467 83000000 		.4byte	0x83
 2868 046b 76040000 		.4byte	0x476
 2869 046f 0F       		.uleb128 0xf
 2870 0470 76000000 		.4byte	0x76
 2871 0474 3F       		.byte	0x3f
 2872 0475 00       		.byte	0
 2873 0476 19       		.uleb128 0x19
 2874 0477 4F020000 		.4byte	.LASF77
 2875 047b 01       		.byte	0x1
 2876 047c 8A01     		.2byte	0x18a
 2877 047e 00000000 		.4byte	.LFB86
 2878 0482 C0000000 		.4byte	.LFE86-.LFB86
 2879 0486 01       		.uleb128 0x1
 2880 0487 9C       		.byte	0x9c
 2881 0488 C4040000 		.4byte	0x4c4
 2882 048c 0C       		.uleb128 0xc
 2883 048d 0E000000 		.4byte	.LBB3
 2884 0491 8E000000 		.4byte	.LBE3-.LBB3
 2885 0495 16       		.uleb128 0x16
 2886 0496 EC010000 		.4byte	.LASF78
 2887 049a 01       		.byte	0x1
 2888 049b 9301     		.2byte	0x193
 2889 049d D1000000 		.4byte	0xd1
 2890 04a1 02       		.uleb128 0x2
 2891 04a2 91       		.byte	0x91
 2892 04a3 74       		.sleb128 -12
 2893 04a4 16       		.uleb128 0x16
 2894 04a5 9B030000 		.4byte	.LASF79
 2895 04a9 01       		.byte	0x1
 2896 04aa 9401     		.2byte	0x194
 2897 04ac C5000000 		.4byte	0xc5
 2898 04b0 02       		.uleb128 0x2
 2899 04b1 91       		.byte	0x91
 2900 04b2 72       		.sleb128 -14
 2901 04b3 16       		.uleb128 0x16
 2902 04b4 21020000 		.4byte	.LASF80
 2903 04b8 01       		.byte	0x1
 2904 04b9 9901     		.2byte	0x199
 2905 04bb C4040000 		.4byte	0x4c4
 2906 04bf 02       		.uleb128 0x2
 2907 04c0 91       		.byte	0x91
 2908 04c1 60       		.sleb128 -32
 2909 04c2 00       		.byte	0
 2910 04c3 00       		.byte	0
 2911 04c4 0E       		.uleb128 0xe
 2912 04c5 83000000 		.4byte	0x83
 2913 04c9 D4040000 		.4byte	0x4d4
 2914 04cd 0F       		.uleb128 0xf
 2915 04ce 76000000 		.4byte	0x76
 2916 04d2 0F       		.byte	0xf
 2917 04d3 00       		.byte	0
 2918 04d4 19       		.uleb128 0x19
 2919 04d5 4E060000 		.4byte	.LASF81
 2920 04d9 01       		.byte	0x1
 2921 04da A001     		.2byte	0x1a0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 63


 2922 04dc 00000000 		.4byte	.LFB87
 2923 04e0 B8000000 		.4byte	.LFE87-.LFB87
 2924 04e4 01       		.uleb128 0x1
 2925 04e5 9C       		.byte	0x9c
 2926 04e6 04050000 		.4byte	0x504
 2927 04ea 0C       		.uleb128 0xc
 2928 04eb 0E000000 		.4byte	.LBB4
 2929 04ef 86000000 		.4byte	.LBE4-.LBB4
 2930 04f3 16       		.uleb128 0x16
 2931 04f4 72040000 		.4byte	.LASF82
 2932 04f8 01       		.byte	0x1
 2933 04f9 A401     		.2byte	0x1a4
 2934 04fb C4040000 		.4byte	0x4c4
 2935 04ff 02       		.uleb128 0x2
 2936 0500 91       		.byte	0x91
 2937 0501 68       		.sleb128 -24
 2938 0502 00       		.byte	0
 2939 0503 00       		.byte	0
 2940 0504 1A       		.uleb128 0x1a
 2941 0505 DE050000 		.4byte	.LASF83
 2942 0509 01       		.byte	0x1
 2943 050a B501     		.2byte	0x1b5
 2944 050c 68000000 		.4byte	0x68
 2945 0510 00000000 		.4byte	.LFB88
 2946 0514 B8000000 		.4byte	.LFE88-.LFB88
 2947 0518 01       		.uleb128 0x1
 2948 0519 9C       		.byte	0x9c
 2949 051a 15       		.uleb128 0x15
 2950 051b 11010000 		.4byte	.LASF84
 2951 051f 01       		.byte	0x1
 2952 0520 1202     		.2byte	0x212
 2953 0522 00000000 		.4byte	.LFB89
 2954 0526 68000000 		.4byte	.LFE89-.LFB89
 2955 052a 01       		.uleb128 0x1
 2956 052b 9C       		.byte	0x9c
 2957 052c 57050000 		.4byte	0x557
 2958 0530 1B       		.uleb128 0x1b
 2959 0531 7300     		.ascii	"s\000"
 2960 0533 01       		.byte	0x1
 2961 0534 1202     		.2byte	0x212
 2962 0536 7D000000 		.4byte	0x7d
 2963 053a 02       		.uleb128 0x2
 2964 053b 91       		.byte	0x91
 2965 053c 6C       		.sleb128 -20
 2966 053d 0C       		.uleb128 0xc
 2967 053e 10000000 		.4byte	.LBB5
 2968 0542 48000000 		.4byte	.LBE5-.LBB5
 2969 0546 1C       		.uleb128 0x1c
 2970 0547 636E7400 		.ascii	"cnt\000"
 2971 054b 01       		.byte	0x1
 2972 054c 1902     		.2byte	0x219
 2973 054e AD000000 		.4byte	0xad
 2974 0552 02       		.uleb128 0x2
 2975 0553 91       		.byte	0x91
 2976 0554 74       		.sleb128 -12
 2977 0555 00       		.byte	0
 2978 0556 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 64


 2979 0557 15       		.uleb128 0x15
 2980 0558 A2050000 		.4byte	.LASF85
 2981 055c 01       		.byte	0x1
 2982 055d 2802     		.2byte	0x228
 2983 055f 00000000 		.4byte	.LFB90
 2984 0563 50000000 		.4byte	.LFE90-.LFB90
 2985 0567 01       		.uleb128 0x1
 2986 0568 9C       		.byte	0x9c
 2987 0569 94050000 		.4byte	0x594
 2988 056d 1B       		.uleb128 0x1b
 2989 056e 6300     		.ascii	"c\000"
 2990 0570 01       		.byte	0x1
 2991 0571 2802     		.2byte	0x228
 2992 0573 83000000 		.4byte	0x83
 2993 0577 02       		.uleb128 0x2
 2994 0578 91       		.byte	0x91
 2995 0579 6F       		.sleb128 -17
 2996 057a 0C       		.uleb128 0xc
 2997 057b 12000000 		.4byte	.LBB6
 2998 057f 2E000000 		.4byte	.LBE6-.LBB6
 2999 0583 1C       		.uleb128 0x1c
 3000 0584 636E7400 		.ascii	"cnt\000"
 3001 0588 01       		.byte	0x1
 3002 0589 2C02     		.2byte	0x22c
 3003 058b AD000000 		.4byte	0xad
 3004 058f 02       		.uleb128 0x2
 3005 0590 91       		.byte	0x91
 3006 0591 74       		.sleb128 -12
 3007 0592 00       		.byte	0
 3008 0593 00       		.byte	0
 3009 0594 19       		.uleb128 0x19
 3010 0595 2C020000 		.4byte	.LASF86
 3011 0599 01       		.byte	0x1
 3012 059a 3902     		.2byte	0x239
 3013 059c 00000000 		.4byte	.LFB91
 3014 05a0 3A000000 		.4byte	.LFE91-.LFB91
 3015 05a4 01       		.uleb128 0x1
 3016 05a5 9C       		.byte	0x9c
 3017 05a6 B8050000 		.4byte	0x5b8
 3018 05aa 1C       		.uleb128 0x1c
 3019 05ab 6300     		.ascii	"c\000"
 3020 05ad 01       		.byte	0x1
 3021 05ae 3B02     		.2byte	0x23b
 3022 05b0 95000000 		.4byte	0x95
 3023 05b4 02       		.uleb128 0x2
 3024 05b5 91       		.byte	0x91
 3025 05b6 77       		.sleb128 -9
 3026 05b7 00       		.byte	0
 3027 05b8 1D       		.uleb128 0x1d
 3028 05b9 65040000 		.4byte	.LASF87
 3029 05bd 06       		.byte	0x6
 3030 05be 9606     		.2byte	0x696
 3031 05c0 C4050000 		.4byte	0x5c4
 3032 05c4 1E       		.uleb128 0x1e
 3033 05c5 8A000000 		.4byte	0x8a
 3034 05c9 1F       		.uleb128 0x1f
 3035 05ca 747300   		.ascii	"ts\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 65


 3036 05cd 05       		.byte	0x5
 3037 05ce 10       		.byte	0x10
 3038 05cf 95000000 		.4byte	0x95
 3039 05d3 05       		.uleb128 0x5
 3040 05d4 03       		.byte	0x3
 3041 05d5 00000000 		.4byte	ts
 3042 05d9 20       		.uleb128 0x20
 3043 05da 30050000 		.4byte	.LASF88
 3044 05de 05       		.byte	0x5
 3045 05df 11       		.byte	0x11
 3046 05e0 A1000000 		.4byte	0xa1
 3047 05e4 05       		.uleb128 0x5
 3048 05e5 03       		.byte	0x3
 3049 05e6 00000000 		.4byte	ts_enc
 3050 05ea 20       		.uleb128 0x20
 3051 05eb 7E040000 		.4byte	.LASF89
 3052 05ef 05       		.byte	0x5
 3053 05f0 12       		.byte	0x12
 3054 05f1 A1000000 		.4byte	0xa1
 3055 05f5 05       		.uleb128 0x5
 3056 05f6 03       		.byte	0x3
 3057 05f7 00000000 		.4byte	ts_update
 3058 05fb 20       		.uleb128 0x20
 3059 05fc 81030000 		.4byte	.LASF90
 3060 0600 05       		.byte	0x5
 3061 0601 13       		.byte	0x13
 3062 0602 A1000000 		.4byte	0xa1
 3063 0606 05       		.uleb128 0x5
 3064 0607 03       		.byte	0x3
 3065 0608 00000000 		.4byte	ts_speed
 3066 060c 20       		.uleb128 0x20
 3067 060d 44020000 		.4byte	.LASF91
 3068 0611 05       		.byte	0x5
 3069 0612 14       		.byte	0x14
 3070 0613 A1000000 		.4byte	0xa1
 3071 0617 05       		.uleb128 0x5
 3072 0618 03       		.byte	0x3
 3073 0619 00000000 		.4byte	ts_display
 3074 061d 20       		.uleb128 0x20
 3075 061e 04020000 		.4byte	.LASF92
 3076 0622 05       		.byte	0x5
 3077 0623 16       		.byte	0x16
 3078 0624 95000000 		.4byte	0x95
 3079 0628 05       		.uleb128 0x5
 3080 0629 03       		.byte	0x3
 3081 062a 00000000 		.4byte	flag_ts_enc
 3082 062e 20       		.uleb128 0x20
 3083 062f DD010000 		.4byte	.LASF93
 3084 0633 05       		.byte	0x5
 3085 0634 17       		.byte	0x17
 3086 0635 95000000 		.4byte	0x95
 3087 0639 05       		.uleb128 0x5
 3088 063a 03       		.byte	0x3
 3089 063b 00000000 		.4byte	flag_ts_update
 3090 063f 20       		.uleb128 0x20
 3091 0640 FF030000 		.4byte	.LASF94
 3092 0644 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 66


 3093 0645 18       		.byte	0x18
 3094 0646 95000000 		.4byte	0x95
 3095 064a 05       		.uleb128 0x5
 3096 064b 03       		.byte	0x3
 3097 064c 00000000 		.4byte	flag_ts_speed
 3098 0650 20       		.uleb128 0x20
 3099 0651 41050000 		.4byte	.LASF95
 3100 0655 05       		.byte	0x5
 3101 0656 19       		.byte	0x19
 3102 0657 95000000 		.4byte	0x95
 3103 065b 05       		.uleb128 0x5
 3104 065c 03       		.byte	0x3
 3105 065d 00000000 		.4byte	flag_ts_display
 3106 0661 20       		.uleb128 0x20
 3107 0662 1C040000 		.4byte	.LASF96
 3108 0666 05       		.byte	0x5
 3109 0667 1C       		.byte	0x1c
 3110 0668 95000000 		.4byte	0x95
 3111 066c 05       		.uleb128 0x5
 3112 066d 03       		.byte	0x3
 3113 066e 00000000 		.4byte	flag_rx
 3114 0672 20       		.uleb128 0x20
 3115 0673 A2010000 		.4byte	.LASF97
 3116 0677 05       		.byte	0x5
 3117 0678 1D       		.byte	0x1d
 3118 0679 95000000 		.4byte	0x95
 3119 067d 05       		.uleb128 0x5
 3120 067e 03       		.byte	0x3
 3121 067f 00000000 		.4byte	flag_packet
 3122 0683 20       		.uleb128 0x20
 3123 0684 5F060000 		.4byte	.LASF98
 3124 0688 05       		.byte	0x5
 3125 0689 1E       		.byte	0x1e
 3126 068a 95000000 		.4byte	0x95
 3127 068e 05       		.uleb128 0x5
 3128 068f 03       		.byte	0x3
 3129 0690 00000000 		.4byte	flag_KB_string
 3130 0694 20       		.uleb128 0x20
 3131 0695 0D040000 		.4byte	.LASF99
 3132 0699 05       		.byte	0x5
 3133 069a 20       		.byte	0x20
 3134 069b 95000000 		.4byte	0x95
 3135 069f 05       		.uleb128 0x5
 3136 06a0 03       		.byte	0x3
 3137 06a1 00000000 		.4byte	dataready_flag
 3138 06a5 20       		.uleb128 0x20
 3139 06a6 D8000000 		.4byte	.LASF100
 3140 06aa 05       		.byte	0x5
 3141 06ab 22       		.byte	0x22
 3142 06ac 95000000 		.4byte	0x95
 3143 06b0 05       		.uleb128 0x5
 3144 06b1 03       		.byte	0x3
 3145 06b2 00000000 		.4byte	flag_rf_transmission_active
 3146 06b6 20       		.uleb128 0x20
 3147 06b7 F4000000 		.4byte	.LASF101
 3148 06bb 05       		.byte	0x5
 3149 06bc 23       		.byte	0x23
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 67


 3150 06bd 95000000 		.4byte	0x95
 3151 06c1 05       		.uleb128 0x5
 3152 06c2 03       		.byte	0x3
 3153 06c3 00000000 		.4byte	flag_print_rf
 3154 06c7 20       		.uleb128 0x20
 3155 06c8 BB030000 		.4byte	.LASF102
 3156 06cc 05       		.byte	0x5
 3157 06cd 25       		.byte	0x25
 3158 06ce 95000000 		.4byte	0x95
 3159 06d2 05       		.uleb128 0x5
 3160 06d3 03       		.byte	0x3
 3161 06d4 00000000 		.4byte	flag_receive_ADC
 3162 06d8 20       		.uleb128 0x20
 3163 06d9 2E040000 		.4byte	.LASF103
 3164 06dd 05       		.byte	0x5
 3165 06de 26       		.byte	0x26
 3166 06df C5000000 		.4byte	0xc5
 3167 06e3 05       		.uleb128 0x5
 3168 06e4 03       		.byte	0x3
 3169 06e5 00000000 		.4byte	adc_result
 3170 06e9 20       		.uleb128 0x20
 3171 06ea 00000000 		.4byte	.LASF104
 3172 06ee 05       		.byte	0x5
 3173 06ef 28       		.byte	0x28
 3174 06f0 95000000 		.4byte	0x95
 3175 06f4 05       		.uleb128 0x5
 3176 06f5 03       		.byte	0x3
 3177 06f6 00000000 		.4byte	direction
 3178 06fa 20       		.uleb128 0x20
 3179 06fb 39040000 		.4byte	.LASF105
 3180 06ff 05       		.byte	0x5
 3181 0700 2C       		.byte	0x2c
 3182 0701 95000000 		.4byte	0x95
 3183 0705 05       		.uleb128 0x5
 3184 0706 03       		.byte	0x3
 3185 0707 00000000 		.4byte	flag_calc_wheelspeed
 3186 070b 20       		.uleb128 0x20
 3187 070c C0000000 		.4byte	.LASF106
 3188 0710 05       		.byte	0x5
 3189 0711 2D       		.byte	0x2d
 3190 0712 C5000000 		.4byte	0xc5
 3191 0716 05       		.uleb128 0x5
 3192 0717 03       		.byte	0x3
 3193 0718 00000000 		.4byte	quad_count1
 3194 071c 20       		.uleb128 0x20
 3195 071d CC000000 		.4byte	.LASF107
 3196 0721 05       		.byte	0x5
 3197 0722 2E       		.byte	0x2e
 3198 0723 C5000000 		.4byte	0xc5
 3199 0727 05       		.uleb128 0x5
 3200 0728 03       		.byte	0x3
 3201 0729 00000000 		.4byte	quad_count2
 3202 072d 20       		.uleb128 0x20
 3203 072e 80050000 		.4byte	.LASF108
 3204 0732 05       		.byte	0x5
 3205 0733 2F       		.byte	0x2f
 3206 0734 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 68


 3207 0738 05       		.uleb128 0x5
 3208 0739 03       		.byte	0x3
 3209 073a 00000000 		.4byte	last_quad_count1
 3210 073e 20       		.uleb128 0x20
 3211 073f 91050000 		.4byte	.LASF109
 3212 0743 05       		.byte	0x5
 3213 0744 30       		.byte	0x30
 3214 0745 C5000000 		.4byte	0xc5
 3215 0749 05       		.uleb128 0x5
 3216 074a 03       		.byte	0x3
 3217 074b 00000000 		.4byte	last_quad_count2
 3218 074f 20       		.uleb128 0x20
 3219 0750 10000000 		.4byte	.LASF110
 3220 0754 05       		.byte	0x5
 3221 0755 31       		.byte	0x31
 3222 0756 C5000000 		.4byte	0xc5
 3223 075a 05       		.uleb128 0x5
 3224 075b 03       		.byte	0x3
 3225 075c 00000000 		.4byte	quad_diff1
 3226 0760 20       		.uleb128 0x20
 3227 0761 1B000000 		.4byte	.LASF111
 3228 0765 05       		.byte	0x5
 3229 0766 32       		.byte	0x32
 3230 0767 C5000000 		.4byte	0xc5
 3231 076b 05       		.uleb128 0x5
 3232 076c 03       		.byte	0x3
 3233 076d 00000000 		.4byte	quad_diff2
 3234 0771 20       		.uleb128 0x20
 3235 0772 50000000 		.4byte	.LASF112
 3236 0776 05       		.byte	0x5
 3237 0777 35       		.byte	0x35
 3238 0778 C5000000 		.4byte	0xc5
 3239 077c 05       		.uleb128 0x5
 3240 077d 03       		.byte	0x3
 3241 077e 00000000 		.4byte	start_turn_count
 3242 0782 20       		.uleb128 0x20
 3243 0783 EF030000 		.4byte	.LASF113
 3244 0787 05       		.byte	0x5
 3245 0788 38       		.byte	0x38
 3246 0789 C5000000 		.4byte	0xc5
 3247 078d 05       		.uleb128 0x5
 3248 078e 03       		.byte	0x3
 3249 078f 00000000 		.4byte	left_duty_cycle
 3250 0793 20       		.uleb128 0x20
 3251 0794 03060000 		.4byte	.LASF114
 3252 0798 05       		.byte	0x5
 3253 0799 39       		.byte	0x39
 3254 079a C5000000 		.4byte	0xc5
 3255 079e 05       		.uleb128 0x5
 3256 079f 03       		.byte	0x3
 3257 07a0 00000000 		.4byte	right_duty_cycle
 3258 07a4 20       		.uleb128 0x20
 3259 07a5 88040000 		.4byte	.LASF115
 3260 07a9 05       		.byte	0x5
 3261 07aa 3C       		.byte	0x3c
 3262 07ab C5000000 		.4byte	0xc5
 3263 07af 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 69


 3264 07b0 03       		.byte	0x3
 3265 07b1 00000000 		.4byte	leftSpeedLimit
 3266 07b5 20       		.uleb128 0x20
 3267 07b6 73020000 		.4byte	.LASF116
 3268 07ba 05       		.byte	0x5
 3269 07bb 3D       		.byte	0x3d
 3270 07bc C5000000 		.4byte	0xc5
 3271 07c0 05       		.uleb128 0x5
 3272 07c1 03       		.byte	0x3
 3273 07c2 00000000 		.4byte	rightSpeedLimit
 3274 07c6 20       		.uleb128 0x20
 3275 07c7 37050000 		.4byte	.LASF117
 3276 07cb 05       		.byte	0x5
 3277 07cc 40       		.byte	0x40
 3278 07cd 95000000 		.4byte	0x95
 3279 07d1 05       		.uleb128 0x5
 3280 07d2 03       		.byte	0x3
 3281 07d3 00000000 		.4byte	brakeFlag
 3282 07d7 20       		.uleb128 0x20
 3283 07d8 CA010000 		.4byte	.LASF118
 3284 07dc 05       		.byte	0x5
 3285 07dd 41       		.byte	0x41
 3286 07de 95000000 		.4byte	0x95
 3287 07e2 05       		.uleb128 0x5
 3288 07e3 03       		.byte	0x3
 3289 07e4 00000000 		.4byte	portOpen
 3290 07e8 20       		.uleb128 0x20
 3291 07e9 44000000 		.4byte	.LASF119
 3292 07ed 05       		.byte	0x5
 3293 07ee 44       		.byte	0x44
 3294 07ef C5000000 		.4byte	0xc5
 3295 07f3 05       		.uleb128 0x5
 3296 07f4 03       		.byte	0x3
 3297 07f5 00000000 		.4byte	prevVoltage
 3298 07f9 20       		.uleb128 0x20
 3299 07fa 9E000000 		.4byte	.LASF120
 3300 07fe 05       		.byte	0x5
 3301 07ff 45       		.byte	0x45
 3302 0800 C5000000 		.4byte	0xc5
 3303 0804 05       		.uleb128 0x5
 3304 0805 03       		.byte	0x3
 3305 0806 00000000 		.4byte	prevVoltage2
 3306 080a 20       		.uleb128 0x20
 3307 080b 72050000 		.4byte	.LASF121
 3308 080f 05       		.byte	0x5
 3309 0810 4B       		.byte	0x4b
 3310 0811 66040000 		.4byte	0x466
 3311 0815 05       		.uleb128 0x5
 3312 0816 03       		.byte	0x3
 3313 0817 00000000 		.4byte	displaystring
 3314 081b 20       		.uleb128 0x20
 3315 081c 1E050000 		.4byte	.LASF122
 3316 0820 05       		.byte	0x5
 3317 0821 4C       		.byte	0x4c
 3318 0822 66040000 		.4byte	0x466
 3319 0826 05       		.uleb128 0x5
 3320 0827 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 70


 3321 0828 00000000 		.4byte	line
 3322 082c 20       		.uleb128 0x20
 3323 082d 0A050000 		.4byte	.LASF123
 3324 0831 05       		.byte	0x5
 3325 0832 4C       		.byte	0x4c
 3326 0833 66040000 		.4byte	0x466
 3327 0837 05       		.uleb128 0x5
 3328 0838 03       		.byte	0x3
 3329 0839 00000000 		.4byte	entry
 3330 083d 0E       		.uleb128 0xe
 3331 083e 95000000 		.4byte	0x95
 3332 0842 4D080000 		.4byte	0x84d
 3333 0846 0F       		.uleb128 0xf
 3334 0847 76000000 		.4byte	0x76
 3335 084b 3F       		.byte	0x3f
 3336 084c 00       		.byte	0
 3337 084d 20       		.uleb128 0x20
 3338 084e 50010000 		.4byte	.LASF124
 3339 0852 05       		.byte	0x5
 3340 0853 4D       		.byte	0x4d
 3341 0854 3D080000 		.4byte	0x83d
 3342 0858 05       		.uleb128 0x5
 3343 0859 03       		.byte	0x3
 3344 085a 00000000 		.4byte	usbBuffer
 3345 085e 20       		.uleb128 0x20
 3346 085f BA020000 		.4byte	.LASF125
 3347 0863 05       		.byte	0x5
 3348 0864 62       		.byte	0x62
 3349 0865 0B010000 		.4byte	0x10b
 3350 0869 05       		.uleb128 0x5
 3351 086a 03       		.byte	0x3
 3352 086b 00000000 		.4byte	buffer_state
 3353 086f 20       		.uleb128 0x20
 3354 0870 7E000000 		.4byte	.LASF126
 3355 0874 05       		.byte	0x5
 3356 0875 63       		.byte	0x63
 3357 0876 0B010000 		.4byte	0x10b
 3358 087a 05       		.uleb128 0x5
 3359 087b 03       		.byte	0x3
 3360 087c 00000000 		.4byte	system_state
 3361 0880 20       		.uleb128 0x20
 3362 0881 02010000 		.4byte	.LASF127
 3363 0885 05       		.byte	0x5
 3364 0886 65       		.byte	0x65
 3365 0887 E6000000 		.4byte	0xe6
 3366 088b 05       		.uleb128 0x5
 3367 088c 03       		.byte	0x3
 3368 088d 00000000 		.4byte	movement_state
 3369 0891 20       		.uleb128 0x20
 3370 0892 10020000 		.4byte	.LASF128
 3371 0896 05       		.byte	0x5
 3372 0897 67       		.byte	0x67
 3373 0898 95000000 		.4byte	0x95
 3374 089c 05       		.uleb128 0x5
 3375 089d 03       		.byte	0x3
 3376 089e 00000000 		.4byte	byteCount
 3377 08a2 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 71


 3378 08a3 83000000 		.4byte	0x83
 3379 08a7 B2080000 		.4byte	0x8b2
 3380 08ab 0F       		.uleb128 0xf
 3381 08ac 76000000 		.4byte	0x76
 3382 08b0 01       		.byte	0x1
 3383 08b1 00       		.byte	0
 3384 08b2 20       		.uleb128 0x20
 3385 08b3 ED040000 		.4byte	.LASF129
 3386 08b7 05       		.byte	0x5
 3387 08b8 68       		.byte	0x68
 3388 08b9 A2080000 		.4byte	0x8a2
 3389 08bd 05       		.uleb128 0x5
 3390 08be 03       		.byte	0x3
 3391 08bf 00000000 		.4byte	packet
 3392 08c3 00       		.byte	0
 3393              		.section	.debug_abbrev,"",%progbits
 3394              	.Ldebug_abbrev0:
 3395 0000 01       		.uleb128 0x1
 3396 0001 11       		.uleb128 0x11
 3397 0002 01       		.byte	0x1
 3398 0003 25       		.uleb128 0x25
 3399 0004 0E       		.uleb128 0xe
 3400 0005 13       		.uleb128 0x13
 3401 0006 0B       		.uleb128 0xb
 3402 0007 03       		.uleb128 0x3
 3403 0008 0E       		.uleb128 0xe
 3404 0009 1B       		.uleb128 0x1b
 3405 000a 0E       		.uleb128 0xe
 3406 000b 55       		.uleb128 0x55
 3407 000c 17       		.uleb128 0x17
 3408 000d 11       		.uleb128 0x11
 3409 000e 01       		.uleb128 0x1
 3410 000f 10       		.uleb128 0x10
 3411 0010 17       		.uleb128 0x17
 3412 0011 00       		.byte	0
 3413 0012 00       		.byte	0
 3414 0013 02       		.uleb128 0x2
 3415 0014 24       		.uleb128 0x24
 3416 0015 00       		.byte	0
 3417 0016 0B       		.uleb128 0xb
 3418 0017 0B       		.uleb128 0xb
 3419 0018 3E       		.uleb128 0x3e
 3420 0019 0B       		.uleb128 0xb
 3421 001a 03       		.uleb128 0x3
 3422 001b 0E       		.uleb128 0xe
 3423 001c 00       		.byte	0
 3424 001d 00       		.byte	0
 3425 001e 03       		.uleb128 0x3
 3426 001f 16       		.uleb128 0x16
 3427 0020 00       		.byte	0
 3428 0021 03       		.uleb128 0x3
 3429 0022 0E       		.uleb128 0xe
 3430 0023 3A       		.uleb128 0x3a
 3431 0024 0B       		.uleb128 0xb
 3432 0025 3B       		.uleb128 0x3b
 3433 0026 0B       		.uleb128 0xb
 3434 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 72


 3435 0028 13       		.uleb128 0x13
 3436 0029 00       		.byte	0
 3437 002a 00       		.byte	0
 3438 002b 04       		.uleb128 0x4
 3439 002c 24       		.uleb128 0x24
 3440 002d 00       		.byte	0
 3441 002e 0B       		.uleb128 0xb
 3442 002f 0B       		.uleb128 0xb
 3443 0030 3E       		.uleb128 0x3e
 3444 0031 0B       		.uleb128 0xb
 3445 0032 03       		.uleb128 0x3
 3446 0033 08       		.uleb128 0x8
 3447 0034 00       		.byte	0
 3448 0035 00       		.byte	0
 3449 0036 05       		.uleb128 0x5
 3450 0037 0F       		.uleb128 0xf
 3451 0038 00       		.byte	0
 3452 0039 0B       		.uleb128 0xb
 3453 003a 0B       		.uleb128 0xb
 3454 003b 49       		.uleb128 0x49
 3455 003c 13       		.uleb128 0x13
 3456 003d 00       		.byte	0
 3457 003e 00       		.byte	0
 3458 003f 06       		.uleb128 0x6
 3459 0040 16       		.uleb128 0x16
 3460 0041 00       		.byte	0
 3461 0042 03       		.uleb128 0x3
 3462 0043 0E       		.uleb128 0xe
 3463 0044 3A       		.uleb128 0x3a
 3464 0045 0B       		.uleb128 0xb
 3465 0046 3B       		.uleb128 0x3b
 3466 0047 05       		.uleb128 0x5
 3467 0048 49       		.uleb128 0x49
 3468 0049 13       		.uleb128 0x13
 3469 004a 00       		.byte	0
 3470 004b 00       		.byte	0
 3471 004c 07       		.uleb128 0x7
 3472 004d 04       		.uleb128 0x4
 3473 004e 01       		.byte	0x1
 3474 004f 03       		.uleb128 0x3
 3475 0050 0E       		.uleb128 0xe
 3476 0051 0B       		.uleb128 0xb
 3477 0052 0B       		.uleb128 0xb
 3478 0053 3A       		.uleb128 0x3a
 3479 0054 0B       		.uleb128 0xb
 3480 0055 3B       		.uleb128 0x3b
 3481 0056 0B       		.uleb128 0xb
 3482 0057 01       		.uleb128 0x1
 3483 0058 13       		.uleb128 0x13
 3484 0059 00       		.byte	0
 3485 005a 00       		.byte	0
 3486 005b 08       		.uleb128 0x8
 3487 005c 28       		.uleb128 0x28
 3488 005d 00       		.byte	0
 3489 005e 03       		.uleb128 0x3
 3490 005f 0E       		.uleb128 0xe
 3491 0060 1C       		.uleb128 0x1c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 73


 3492 0061 0D       		.uleb128 0xd
 3493 0062 00       		.byte	0
 3494 0063 00       		.byte	0
 3495 0064 09       		.uleb128 0x9
 3496 0065 13       		.uleb128 0x13
 3497 0066 01       		.byte	0x1
 3498 0067 03       		.uleb128 0x3
 3499 0068 0E       		.uleb128 0xe
 3500 0069 0B       		.uleb128 0xb
 3501 006a 0B       		.uleb128 0xb
 3502 006b 3A       		.uleb128 0x3a
 3503 006c 0B       		.uleb128 0xb
 3504 006d 3B       		.uleb128 0x3b
 3505 006e 0B       		.uleb128 0xb
 3506 006f 01       		.uleb128 0x1
 3507 0070 13       		.uleb128 0x13
 3508 0071 00       		.byte	0
 3509 0072 00       		.byte	0
 3510 0073 0A       		.uleb128 0xa
 3511 0074 0D       		.uleb128 0xd
 3512 0075 00       		.byte	0
 3513 0076 03       		.uleb128 0x3
 3514 0077 0E       		.uleb128 0xe
 3515 0078 3A       		.uleb128 0x3a
 3516 0079 0B       		.uleb128 0xb
 3517 007a 3B       		.uleb128 0x3b
 3518 007b 0B       		.uleb128 0xb
 3519 007c 49       		.uleb128 0x49
 3520 007d 13       		.uleb128 0x13
 3521 007e 38       		.uleb128 0x38
 3522 007f 0B       		.uleb128 0xb
 3523 0080 00       		.byte	0
 3524 0081 00       		.byte	0
 3525 0082 0B       		.uleb128 0xb
 3526 0083 2E       		.uleb128 0x2e
 3527 0084 01       		.byte	0x1
 3528 0085 3F       		.uleb128 0x3f
 3529 0086 19       		.uleb128 0x19
 3530 0087 03       		.uleb128 0x3
 3531 0088 0E       		.uleb128 0xe
 3532 0089 3A       		.uleb128 0x3a
 3533 008a 0B       		.uleb128 0xb
 3534 008b 3B       		.uleb128 0x3b
 3535 008c 0B       		.uleb128 0xb
 3536 008d 11       		.uleb128 0x11
 3537 008e 01       		.uleb128 0x1
 3538 008f 12       		.uleb128 0x12
 3539 0090 06       		.uleb128 0x6
 3540 0091 40       		.uleb128 0x40
 3541 0092 18       		.uleb128 0x18
 3542 0093 9742     		.uleb128 0x2117
 3543 0095 19       		.uleb128 0x19
 3544 0096 01       		.uleb128 0x1
 3545 0097 13       		.uleb128 0x13
 3546 0098 00       		.byte	0
 3547 0099 00       		.byte	0
 3548 009a 0C       		.uleb128 0xc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 74


 3549 009b 0B       		.uleb128 0xb
 3550 009c 01       		.byte	0x1
 3551 009d 11       		.uleb128 0x11
 3552 009e 01       		.uleb128 0x1
 3553 009f 12       		.uleb128 0x12
 3554 00a0 06       		.uleb128 0x6
 3555 00a1 00       		.byte	0
 3556 00a2 00       		.byte	0
 3557 00a3 0D       		.uleb128 0xd
 3558 00a4 34       		.uleb128 0x34
 3559 00a5 00       		.byte	0
 3560 00a6 03       		.uleb128 0x3
 3561 00a7 0E       		.uleb128 0xe
 3562 00a8 3A       		.uleb128 0x3a
 3563 00a9 0B       		.uleb128 0xb
 3564 00aa 3B       		.uleb128 0x3b
 3565 00ab 0B       		.uleb128 0xb
 3566 00ac 49       		.uleb128 0x49
 3567 00ad 13       		.uleb128 0x13
 3568 00ae 02       		.uleb128 0x2
 3569 00af 18       		.uleb128 0x18
 3570 00b0 00       		.byte	0
 3571 00b1 00       		.byte	0
 3572 00b2 0E       		.uleb128 0xe
 3573 00b3 01       		.uleb128 0x1
 3574 00b4 01       		.byte	0x1
 3575 00b5 49       		.uleb128 0x49
 3576 00b6 13       		.uleb128 0x13
 3577 00b7 01       		.uleb128 0x1
 3578 00b8 13       		.uleb128 0x13
 3579 00b9 00       		.byte	0
 3580 00ba 00       		.byte	0
 3581 00bb 0F       		.uleb128 0xf
 3582 00bc 21       		.uleb128 0x21
 3583 00bd 00       		.byte	0
 3584 00be 49       		.uleb128 0x49
 3585 00bf 13       		.uleb128 0x13
 3586 00c0 2F       		.uleb128 0x2f
 3587 00c1 0B       		.uleb128 0xb
 3588 00c2 00       		.byte	0
 3589 00c3 00       		.byte	0
 3590 00c4 10       		.uleb128 0x10
 3591 00c5 2E       		.uleb128 0x2e
 3592 00c6 01       		.byte	0x1
 3593 00c7 3F       		.uleb128 0x3f
 3594 00c8 19       		.uleb128 0x19
 3595 00c9 03       		.uleb128 0x3
 3596 00ca 0E       		.uleb128 0xe
 3597 00cb 3A       		.uleb128 0x3a
 3598 00cc 0B       		.uleb128 0xb
 3599 00cd 3B       		.uleb128 0x3b
 3600 00ce 0B       		.uleb128 0xb
 3601 00cf 27       		.uleb128 0x27
 3602 00d0 19       		.uleb128 0x19
 3603 00d1 11       		.uleb128 0x11
 3604 00d2 01       		.uleb128 0x1
 3605 00d3 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 75


 3606 00d4 06       		.uleb128 0x6
 3607 00d5 40       		.uleb128 0x40
 3608 00d6 18       		.uleb128 0x18
 3609 00d7 9742     		.uleb128 0x2117
 3610 00d9 19       		.uleb128 0x19
 3611 00da 01       		.uleb128 0x1
 3612 00db 13       		.uleb128 0x13
 3613 00dc 00       		.byte	0
 3614 00dd 00       		.byte	0
 3615 00de 11       		.uleb128 0x11
 3616 00df 05       		.uleb128 0x5
 3617 00e0 00       		.byte	0
 3618 00e1 03       		.uleb128 0x3
 3619 00e2 0E       		.uleb128 0xe
 3620 00e3 3A       		.uleb128 0x3a
 3621 00e4 0B       		.uleb128 0xb
 3622 00e5 3B       		.uleb128 0x3b
 3623 00e6 0B       		.uleb128 0xb
 3624 00e7 49       		.uleb128 0x49
 3625 00e8 13       		.uleb128 0x13
 3626 00e9 02       		.uleb128 0x2
 3627 00ea 18       		.uleb128 0x18
 3628 00eb 00       		.byte	0
 3629 00ec 00       		.byte	0
 3630 00ed 12       		.uleb128 0x12
 3631 00ee 2E       		.uleb128 0x2e
 3632 00ef 00       		.byte	0
 3633 00f0 3F       		.uleb128 0x3f
 3634 00f1 19       		.uleb128 0x19
 3635 00f2 03       		.uleb128 0x3
 3636 00f3 0E       		.uleb128 0xe
 3637 00f4 3A       		.uleb128 0x3a
 3638 00f5 0B       		.uleb128 0xb
 3639 00f6 3B       		.uleb128 0x3b
 3640 00f7 0B       		.uleb128 0xb
 3641 00f8 11       		.uleb128 0x11
 3642 00f9 01       		.uleb128 0x1
 3643 00fa 12       		.uleb128 0x12
 3644 00fb 06       		.uleb128 0x6
 3645 00fc 40       		.uleb128 0x40
 3646 00fd 18       		.uleb128 0x18
 3647 00fe 9642     		.uleb128 0x2116
 3648 0100 19       		.uleb128 0x19
 3649 0101 00       		.byte	0
 3650 0102 00       		.byte	0
 3651 0103 13       		.uleb128 0x13
 3652 0104 2E       		.uleb128 0x2e
 3653 0105 00       		.byte	0
 3654 0106 3F       		.uleb128 0x3f
 3655 0107 19       		.uleb128 0x19
 3656 0108 03       		.uleb128 0x3
 3657 0109 0E       		.uleb128 0xe
 3658 010a 3A       		.uleb128 0x3a
 3659 010b 0B       		.uleb128 0xb
 3660 010c 3B       		.uleb128 0x3b
 3661 010d 0B       		.uleb128 0xb
 3662 010e 11       		.uleb128 0x11
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 76


 3663 010f 01       		.uleb128 0x1
 3664 0110 12       		.uleb128 0x12
 3665 0111 06       		.uleb128 0x6
 3666 0112 40       		.uleb128 0x40
 3667 0113 18       		.uleb128 0x18
 3668 0114 9742     		.uleb128 0x2117
 3669 0116 19       		.uleb128 0x19
 3670 0117 00       		.byte	0
 3671 0118 00       		.byte	0
 3672 0119 14       		.uleb128 0x14
 3673 011a 2E       		.uleb128 0x2e
 3674 011b 01       		.byte	0x1
 3675 011c 3F       		.uleb128 0x3f
 3676 011d 19       		.uleb128 0x19
 3677 011e 03       		.uleb128 0x3
 3678 011f 0E       		.uleb128 0xe
 3679 0120 3A       		.uleb128 0x3a
 3680 0121 0B       		.uleb128 0xb
 3681 0122 3B       		.uleb128 0x3b
 3682 0123 0B       		.uleb128 0xb
 3683 0124 27       		.uleb128 0x27
 3684 0125 19       		.uleb128 0x19
 3685 0126 11       		.uleb128 0x11
 3686 0127 01       		.uleb128 0x1
 3687 0128 12       		.uleb128 0x12
 3688 0129 06       		.uleb128 0x6
 3689 012a 40       		.uleb128 0x40
 3690 012b 18       		.uleb128 0x18
 3691 012c 9642     		.uleb128 0x2116
 3692 012e 19       		.uleb128 0x19
 3693 012f 01       		.uleb128 0x1
 3694 0130 13       		.uleb128 0x13
 3695 0131 00       		.byte	0
 3696 0132 00       		.byte	0
 3697 0133 15       		.uleb128 0x15
 3698 0134 2E       		.uleb128 0x2e
 3699 0135 01       		.byte	0x1
 3700 0136 3F       		.uleb128 0x3f
 3701 0137 19       		.uleb128 0x19
 3702 0138 03       		.uleb128 0x3
 3703 0139 0E       		.uleb128 0xe
 3704 013a 3A       		.uleb128 0x3a
 3705 013b 0B       		.uleb128 0xb
 3706 013c 3B       		.uleb128 0x3b
 3707 013d 05       		.uleb128 0x5
 3708 013e 27       		.uleb128 0x27
 3709 013f 19       		.uleb128 0x19
 3710 0140 11       		.uleb128 0x11
 3711 0141 01       		.uleb128 0x1
 3712 0142 12       		.uleb128 0x12
 3713 0143 06       		.uleb128 0x6
 3714 0144 40       		.uleb128 0x40
 3715 0145 18       		.uleb128 0x18
 3716 0146 9642     		.uleb128 0x2116
 3717 0148 19       		.uleb128 0x19
 3718 0149 01       		.uleb128 0x1
 3719 014a 13       		.uleb128 0x13
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 77


 3720 014b 00       		.byte	0
 3721 014c 00       		.byte	0
 3722 014d 16       		.uleb128 0x16
 3723 014e 34       		.uleb128 0x34
 3724 014f 00       		.byte	0
 3725 0150 03       		.uleb128 0x3
 3726 0151 0E       		.uleb128 0xe
 3727 0152 3A       		.uleb128 0x3a
 3728 0153 0B       		.uleb128 0xb
 3729 0154 3B       		.uleb128 0x3b
 3730 0155 05       		.uleb128 0x5
 3731 0156 49       		.uleb128 0x49
 3732 0157 13       		.uleb128 0x13
 3733 0158 02       		.uleb128 0x2
 3734 0159 18       		.uleb128 0x18
 3735 015a 00       		.byte	0
 3736 015b 00       		.byte	0
 3737 015c 17       		.uleb128 0x17
 3738 015d 2E       		.uleb128 0x2e
 3739 015e 00       		.byte	0
 3740 015f 3F       		.uleb128 0x3f
 3741 0160 19       		.uleb128 0x19
 3742 0161 03       		.uleb128 0x3
 3743 0162 0E       		.uleb128 0xe
 3744 0163 3A       		.uleb128 0x3a
 3745 0164 0B       		.uleb128 0xb
 3746 0165 3B       		.uleb128 0x3b
 3747 0166 05       		.uleb128 0x5
 3748 0167 27       		.uleb128 0x27
 3749 0168 19       		.uleb128 0x19
 3750 0169 11       		.uleb128 0x11
 3751 016a 01       		.uleb128 0x1
 3752 016b 12       		.uleb128 0x12
 3753 016c 06       		.uleb128 0x6
 3754 016d 40       		.uleb128 0x40
 3755 016e 18       		.uleb128 0x18
 3756 016f 9742     		.uleb128 0x2117
 3757 0171 19       		.uleb128 0x19
 3758 0172 00       		.byte	0
 3759 0173 00       		.byte	0
 3760 0174 18       		.uleb128 0x18
 3761 0175 2E       		.uleb128 0x2e
 3762 0176 00       		.byte	0
 3763 0177 3F       		.uleb128 0x3f
 3764 0178 19       		.uleb128 0x19
 3765 0179 03       		.uleb128 0x3
 3766 017a 0E       		.uleb128 0xe
 3767 017b 3A       		.uleb128 0x3a
 3768 017c 0B       		.uleb128 0xb
 3769 017d 3B       		.uleb128 0x3b
 3770 017e 05       		.uleb128 0x5
 3771 017f 27       		.uleb128 0x27
 3772 0180 19       		.uleb128 0x19
 3773 0181 11       		.uleb128 0x11
 3774 0182 01       		.uleb128 0x1
 3775 0183 12       		.uleb128 0x12
 3776 0184 06       		.uleb128 0x6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 78


 3777 0185 40       		.uleb128 0x40
 3778 0186 18       		.uleb128 0x18
 3779 0187 9642     		.uleb128 0x2116
 3780 0189 19       		.uleb128 0x19
 3781 018a 00       		.byte	0
 3782 018b 00       		.byte	0
 3783 018c 19       		.uleb128 0x19
 3784 018d 2E       		.uleb128 0x2e
 3785 018e 01       		.byte	0x1
 3786 018f 3F       		.uleb128 0x3f
 3787 0190 19       		.uleb128 0x19
 3788 0191 03       		.uleb128 0x3
 3789 0192 0E       		.uleb128 0xe
 3790 0193 3A       		.uleb128 0x3a
 3791 0194 0B       		.uleb128 0xb
 3792 0195 3B       		.uleb128 0x3b
 3793 0196 05       		.uleb128 0x5
 3794 0197 11       		.uleb128 0x11
 3795 0198 01       		.uleb128 0x1
 3796 0199 12       		.uleb128 0x12
 3797 019a 06       		.uleb128 0x6
 3798 019b 40       		.uleb128 0x40
 3799 019c 18       		.uleb128 0x18
 3800 019d 9642     		.uleb128 0x2116
 3801 019f 19       		.uleb128 0x19
 3802 01a0 01       		.uleb128 0x1
 3803 01a1 13       		.uleb128 0x13
 3804 01a2 00       		.byte	0
 3805 01a3 00       		.byte	0
 3806 01a4 1A       		.uleb128 0x1a
 3807 01a5 2E       		.uleb128 0x2e
 3808 01a6 00       		.byte	0
 3809 01a7 3F       		.uleb128 0x3f
 3810 01a8 19       		.uleb128 0x19
 3811 01a9 03       		.uleb128 0x3
 3812 01aa 0E       		.uleb128 0xe
 3813 01ab 3A       		.uleb128 0x3a
 3814 01ac 0B       		.uleb128 0xb
 3815 01ad 3B       		.uleb128 0x3b
 3816 01ae 05       		.uleb128 0x5
 3817 01af 49       		.uleb128 0x49
 3818 01b0 13       		.uleb128 0x13
 3819 01b1 11       		.uleb128 0x11
 3820 01b2 01       		.uleb128 0x1
 3821 01b3 12       		.uleb128 0x12
 3822 01b4 06       		.uleb128 0x6
 3823 01b5 40       		.uleb128 0x40
 3824 01b6 18       		.uleb128 0x18
 3825 01b7 9642     		.uleb128 0x2116
 3826 01b9 19       		.uleb128 0x19
 3827 01ba 00       		.byte	0
 3828 01bb 00       		.byte	0
 3829 01bc 1B       		.uleb128 0x1b
 3830 01bd 05       		.uleb128 0x5
 3831 01be 00       		.byte	0
 3832 01bf 03       		.uleb128 0x3
 3833 01c0 08       		.uleb128 0x8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 79


 3834 01c1 3A       		.uleb128 0x3a
 3835 01c2 0B       		.uleb128 0xb
 3836 01c3 3B       		.uleb128 0x3b
 3837 01c4 05       		.uleb128 0x5
 3838 01c5 49       		.uleb128 0x49
 3839 01c6 13       		.uleb128 0x13
 3840 01c7 02       		.uleb128 0x2
 3841 01c8 18       		.uleb128 0x18
 3842 01c9 00       		.byte	0
 3843 01ca 00       		.byte	0
 3844 01cb 1C       		.uleb128 0x1c
 3845 01cc 34       		.uleb128 0x34
 3846 01cd 00       		.byte	0
 3847 01ce 03       		.uleb128 0x3
 3848 01cf 08       		.uleb128 0x8
 3849 01d0 3A       		.uleb128 0x3a
 3850 01d1 0B       		.uleb128 0xb
 3851 01d2 3B       		.uleb128 0x3b
 3852 01d3 05       		.uleb128 0x5
 3853 01d4 49       		.uleb128 0x49
 3854 01d5 13       		.uleb128 0x13
 3855 01d6 02       		.uleb128 0x2
 3856 01d7 18       		.uleb128 0x18
 3857 01d8 00       		.byte	0
 3858 01d9 00       		.byte	0
 3859 01da 1D       		.uleb128 0x1d
 3860 01db 34       		.uleb128 0x34
 3861 01dc 00       		.byte	0
 3862 01dd 03       		.uleb128 0x3
 3863 01de 0E       		.uleb128 0xe
 3864 01df 3A       		.uleb128 0x3a
 3865 01e0 0B       		.uleb128 0xb
 3866 01e1 3B       		.uleb128 0x3b
 3867 01e2 05       		.uleb128 0x5
 3868 01e3 49       		.uleb128 0x49
 3869 01e4 13       		.uleb128 0x13
 3870 01e5 3F       		.uleb128 0x3f
 3871 01e6 19       		.uleb128 0x19
 3872 01e7 3C       		.uleb128 0x3c
 3873 01e8 19       		.uleb128 0x19
 3874 01e9 00       		.byte	0
 3875 01ea 00       		.byte	0
 3876 01eb 1E       		.uleb128 0x1e
 3877 01ec 35       		.uleb128 0x35
 3878 01ed 00       		.byte	0
 3879 01ee 49       		.uleb128 0x49
 3880 01ef 13       		.uleb128 0x13
 3881 01f0 00       		.byte	0
 3882 01f1 00       		.byte	0
 3883 01f2 1F       		.uleb128 0x1f
 3884 01f3 34       		.uleb128 0x34
 3885 01f4 00       		.byte	0
 3886 01f5 03       		.uleb128 0x3
 3887 01f6 08       		.uleb128 0x8
 3888 01f7 3A       		.uleb128 0x3a
 3889 01f8 0B       		.uleb128 0xb
 3890 01f9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 80


 3891 01fa 0B       		.uleb128 0xb
 3892 01fb 49       		.uleb128 0x49
 3893 01fc 13       		.uleb128 0x13
 3894 01fd 3F       		.uleb128 0x3f
 3895 01fe 19       		.uleb128 0x19
 3896 01ff 02       		.uleb128 0x2
 3897 0200 18       		.uleb128 0x18
 3898 0201 00       		.byte	0
 3899 0202 00       		.byte	0
 3900 0203 20       		.uleb128 0x20
 3901 0204 34       		.uleb128 0x34
 3902 0205 00       		.byte	0
 3903 0206 03       		.uleb128 0x3
 3904 0207 0E       		.uleb128 0xe
 3905 0208 3A       		.uleb128 0x3a
 3906 0209 0B       		.uleb128 0xb
 3907 020a 3B       		.uleb128 0x3b
 3908 020b 0B       		.uleb128 0xb
 3909 020c 49       		.uleb128 0x49
 3910 020d 13       		.uleb128 0x13
 3911 020e 3F       		.uleb128 0x3f
 3912 020f 19       		.uleb128 0x19
 3913 0210 02       		.uleb128 0x2
 3914 0211 18       		.uleb128 0x18
 3915 0212 00       		.byte	0
 3916 0213 00       		.byte	0
 3917 0214 00       		.byte	0
 3918              		.section	.debug_aranges,"",%progbits
 3919 0000 FC000000 		.4byte	0xfc
 3920 0004 0200     		.2byte	0x2
 3921 0006 00000000 		.4byte	.Ldebug_info0
 3922 000a 04       		.byte	0x4
 3923 000b 00       		.byte	0
 3924 000c 0000     		.2byte	0
 3925 000e 0000     		.2byte	0
 3926 0010 00000000 		.4byte	.LFB63
 3927 0014 60010000 		.4byte	.LFE63-.LFB63
 3928 0018 00000000 		.4byte	.LFB64
 3929 001c 2C000000 		.4byte	.LFE64-.LFB64
 3930 0020 00000000 		.4byte	.LFB65
 3931 0024 18000000 		.4byte	.LFE65-.LFB65
 3932 0028 00000000 		.4byte	.LFB66
 3933 002c 18000000 		.4byte	.LFE66-.LFB66
 3934 0030 00000000 		.4byte	.LFB67
 3935 0034 16000000 		.4byte	.LFE67-.LFB67
 3936 0038 00000000 		.4byte	.LFB68
 3937 003c 0E000000 		.4byte	.LFE68-.LFB68
 3938 0040 00000000 		.4byte	.LFB69
 3939 0044 0E000000 		.4byte	.LFE69-.LFB69
 3940 0048 00000000 		.4byte	.LFB70
 3941 004c 0E000000 		.4byte	.LFE70-.LFB70
 3942 0050 00000000 		.4byte	.LFB71
 3943 0054 2C000000 		.4byte	.LFE71-.LFB71
 3944 0058 00000000 		.4byte	.LFB72
 3945 005c 2C000000 		.4byte	.LFE72-.LFB72
 3946 0060 00000000 		.4byte	.LFB73
 3947 0064 14000000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 81


 3948 0068 00000000 		.4byte	.LFB74
 3949 006c 18000000 		.4byte	.LFE74-.LFB74
 3950 0070 00000000 		.4byte	.LFB75
 3951 0074 34000000 		.4byte	.LFE75-.LFB75
 3952 0078 00000000 		.4byte	.LFB76
 3953 007c 98000000 		.4byte	.LFE76-.LFB76
 3954 0080 00000000 		.4byte	.LFB77
 3955 0084 9C000000 		.4byte	.LFE77-.LFB77
 3956 0088 00000000 		.4byte	.LFB78
 3957 008c 0C000000 		.4byte	.LFE78-.LFB78
 3958 0090 00000000 		.4byte	.LFB79
 3959 0094 2C000000 		.4byte	.LFE79-.LFB79
 3960 0098 00000000 		.4byte	.LFB80
 3961 009c B8000000 		.4byte	.LFE80-.LFB80
 3962 00a0 00000000 		.4byte	.LFB81
 3963 00a4 70000000 		.4byte	.LFE81-.LFB81
 3964 00a8 00000000 		.4byte	.LFB82
 3965 00ac 20000000 		.4byte	.LFE82-.LFB82
 3966 00b0 00000000 		.4byte	.LFB83
 3967 00b4 1C000000 		.4byte	.LFE83-.LFB83
 3968 00b8 00000000 		.4byte	.LFB84
 3969 00bc 0A000000 		.4byte	.LFE84-.LFB84
 3970 00c0 00000000 		.4byte	.LFB85
 3971 00c4 D8010000 		.4byte	.LFE85-.LFB85
 3972 00c8 00000000 		.4byte	.LFB86
 3973 00cc C0000000 		.4byte	.LFE86-.LFB86
 3974 00d0 00000000 		.4byte	.LFB87
 3975 00d4 B8000000 		.4byte	.LFE87-.LFB87
 3976 00d8 00000000 		.4byte	.LFB88
 3977 00dc B8000000 		.4byte	.LFE88-.LFB88
 3978 00e0 00000000 		.4byte	.LFB89
 3979 00e4 68000000 		.4byte	.LFE89-.LFB89
 3980 00e8 00000000 		.4byte	.LFB90
 3981 00ec 50000000 		.4byte	.LFE90-.LFB90
 3982 00f0 00000000 		.4byte	.LFB91
 3983 00f4 3A000000 		.4byte	.LFE91-.LFB91
 3984 00f8 00000000 		.4byte	0
 3985 00fc 00000000 		.4byte	0
 3986              		.section	.debug_ranges,"",%progbits
 3987              	.Ldebug_ranges0:
 3988 0000 00000000 		.4byte	.LFB63
 3989 0004 60010000 		.4byte	.LFE63
 3990 0008 00000000 		.4byte	.LFB64
 3991 000c 2C000000 		.4byte	.LFE64
 3992 0010 00000000 		.4byte	.LFB65
 3993 0014 18000000 		.4byte	.LFE65
 3994 0018 00000000 		.4byte	.LFB66
 3995 001c 18000000 		.4byte	.LFE66
 3996 0020 00000000 		.4byte	.LFB67
 3997 0024 16000000 		.4byte	.LFE67
 3998 0028 00000000 		.4byte	.LFB68
 3999 002c 0E000000 		.4byte	.LFE68
 4000 0030 00000000 		.4byte	.LFB69
 4001 0034 0E000000 		.4byte	.LFE69
 4002 0038 00000000 		.4byte	.LFB70
 4003 003c 0E000000 		.4byte	.LFE70
 4004 0040 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 82


 4005 0044 2C000000 		.4byte	.LFE71
 4006 0048 00000000 		.4byte	.LFB72
 4007 004c 2C000000 		.4byte	.LFE72
 4008 0050 00000000 		.4byte	.LFB73
 4009 0054 14000000 		.4byte	.LFE73
 4010 0058 00000000 		.4byte	.LFB74
 4011 005c 18000000 		.4byte	.LFE74
 4012 0060 00000000 		.4byte	.LFB75
 4013 0064 34000000 		.4byte	.LFE75
 4014 0068 00000000 		.4byte	.LFB76
 4015 006c 98000000 		.4byte	.LFE76
 4016 0070 00000000 		.4byte	.LFB77
 4017 0074 9C000000 		.4byte	.LFE77
 4018 0078 00000000 		.4byte	.LFB78
 4019 007c 0C000000 		.4byte	.LFE78
 4020 0080 00000000 		.4byte	.LFB79
 4021 0084 2C000000 		.4byte	.LFE79
 4022 0088 00000000 		.4byte	.LFB80
 4023 008c B8000000 		.4byte	.LFE80
 4024 0090 00000000 		.4byte	.LFB81
 4025 0094 70000000 		.4byte	.LFE81
 4026 0098 00000000 		.4byte	.LFB82
 4027 009c 20000000 		.4byte	.LFE82
 4028 00a0 00000000 		.4byte	.LFB83
 4029 00a4 1C000000 		.4byte	.LFE83
 4030 00a8 00000000 		.4byte	.LFB84
 4031 00ac 0A000000 		.4byte	.LFE84
 4032 00b0 00000000 		.4byte	.LFB85
 4033 00b4 D8010000 		.4byte	.LFE85
 4034 00b8 00000000 		.4byte	.LFB86
 4035 00bc C0000000 		.4byte	.LFE86
 4036 00c0 00000000 		.4byte	.LFB87
 4037 00c4 B8000000 		.4byte	.LFE87
 4038 00c8 00000000 		.4byte	.LFB88
 4039 00cc B8000000 		.4byte	.LFE88
 4040 00d0 00000000 		.4byte	.LFB89
 4041 00d4 68000000 		.4byte	.LFE89
 4042 00d8 00000000 		.4byte	.LFB90
 4043 00dc 50000000 		.4byte	.LFE90
 4044 00e0 00000000 		.4byte	.LFB91
 4045 00e4 3A000000 		.4byte	.LFE91
 4046 00e8 00000000 		.4byte	0
 4047 00ec 00000000 		.4byte	0
 4048              		.section	.debug_line,"",%progbits
 4049              	.Ldebug_line0:
 4050 0000 58040000 		.section	.debug_str,"MS",%progbits,1
 4050      02005501 
 4050      00000201 
 4050      FB0E0D00 
 4050      01010101 
 4051              	.LASF104:
 4052 0000 64697265 		.ascii	"direction\000"
 4052      6374696F 
 4052      6E00
 4053              	.LASF23:
 4054 000a 52545552 		.ascii	"RTURN\000"
 4054      4E00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 83


 4055              	.LASF110:
 4056 0010 71756164 		.ascii	"quad_diff1\000"
 4056      5F646966 
 4056      663100
 4057              	.LASF111:
 4058 001b 71756164 		.ascii	"quad_diff2\000"
 4058      5F646966 
 4058      663200
 4059              	.LASF72:
 4060 0026 77686565 		.ascii	"wheel_2_str\000"
 4060      6C5F325F 
 4060      73747200 
 4061              	.LASF70:
 4062 0032 51756164 		.ascii	"Quad_Dec_response\000"
 4062      5F446563 
 4062      5F726573 
 4062      706F6E73 
 4062      6500
 4063              	.LASF119:
 4064 0044 70726576 		.ascii	"prevVoltage\000"
 4064      566F6C74 
 4064      61676500 
 4065              	.LASF112:
 4066 0050 73746172 		.ascii	"start_turn_count\000"
 4066      745F7475 
 4066      726E5F63 
 4066      6F756E74 
 4066      00
 4067              	.LASF8:
 4068 0061 756E7369 		.ascii	"unsigned int\000"
 4068      676E6564 
 4068      20696E74 
 4068      00
 4069              	.LASF11:
 4070 006e 5F5F696E 		.ascii	"__int32_t\000"
 4070      7433325F 
 4070      7400
 4071              	.LASF17:
 4072 0078 696E7431 		.ascii	"int16\000"
 4072      3600
 4073              	.LASF126:
 4074 007e 73797374 		.ascii	"system_state\000"
 4074      656D5F73 
 4074      74617465 
 4074      00
 4075              	.LASF22:
 4076 008b 4C545552 		.ascii	"LTURN\000"
 4076      4E00
 4077              	.LASF68:
 4078 0091 6973725F 		.ascii	"isr_adcTimer\000"
 4078      61646354 
 4078      696D6572 
 4078      00
 4079              	.LASF120:
 4080 009e 70726576 		.ascii	"prevVoltage2\000"
 4080      566F6C74 
 4080      61676532 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 84


 4080      00
 4081              	.LASF42:
 4082 00ab 7061636B 		.ascii	"packet_bytes\000"
 4082      65745F62 
 4082      79746573 
 4082      00
 4083              	.LASF38:
 4084 00b8 67325F78 		.ascii	"g2_xpos\000"
 4084      706F7300 
 4085              	.LASF106:
 4086 00c0 71756164 		.ascii	"quad_count1\000"
 4086      5F636F75 
 4086      6E743100 
 4087              	.LASF107:
 4088 00cc 71756164 		.ascii	"quad_count2\000"
 4088      5F636F75 
 4088      6E743200 
 4089              	.LASF100:
 4090 00d8 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4090      5F72665F 
 4090      7472616E 
 4090      736D6973 
 4090      73696F6E 
 4091              	.LASF101:
 4092 00f4 666C6167 		.ascii	"flag_print_rf\000"
 4092      5F707269 
 4092      6E745F72 
 4092      6600
 4093              	.LASF127:
 4094 0102 6D6F7665 		.ascii	"movement_state\000"
 4094      6D656E74 
 4094      5F737461 
 4094      746500
 4095              	.LASF84:
 4096 0111 75736250 		.ascii	"usbPutString\000"
 4096      75745374 
 4096      72696E67 
 4096      00
 4097              	.LASF55:
 4098 011e 696E6974 		.ascii	"initForward\000"
 4098      466F7277 
 4098      61726400 
 4099              	.LASF41:
 4100 012a 67325F64 		.ascii	"g2_direction\000"
 4100      69726563 
 4100      74696F6E 
 4100      00
 4101              	.LASF64:
 4102 0137 6973725F 		.ascii	"isr_quad1\000"
 4102      71756164 
 4102      3100
 4103              	.LASF18:
 4104 0141 666C6F61 		.ascii	"float\000"
 4104      7400
 4105              	.LASF58:
 4106 0147 73657453 		.ascii	"setSpeed\000"
 4106      70656564 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 85


 4106      00
 4107              	.LASF124:
 4108 0150 75736242 		.ascii	"usbBuffer\000"
 4108      75666665 
 4108      7200
 4109              	.LASF26:
 4110 015a 696E6465 		.ascii	"index\000"
 4110      7800
 4111              	.LASF21:
 4112 0160 44524956 		.ascii	"DRIVE\000"
 4112      4500
 4113              	.LASF44:
 4114 0166 73747269 		.ascii	"string_packet\000"
 4114      6E675F70 
 4114      61636B65 
 4114      7400
 4115              	.LASF50:
 4116 0174 64726976 		.ascii	"driveForwards\000"
 4116      65466F72 
 4116      77617264 
 4116      7300
 4117              	.LASF51:
 4118 0182 7475726E 		.ascii	"turnLeft\000"
 4118      4C656674 
 4118      00
 4119              	.LASF7:
 4120 018b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4120      206C6F6E 
 4120      6720756E 
 4120      7369676E 
 4120      65642069 
 4121              	.LASF97:
 4122 01a2 666C6167 		.ascii	"flag_packet\000"
 4122      5F706163 
 4122      6B657400 
 4123              	.LASF65:
 4124 01ae 6973725F 		.ascii	"isr_turn_timer\000"
 4124      7475726E 
 4124      5F74696D 
 4124      657200
 4125              	.LASF53:
 4126 01bd 696E6974 		.ascii	"initTurnLeft\000"
 4126      5475726E 
 4126      4C656674 
 4126      00
 4127              	.LASF118:
 4128 01ca 706F7274 		.ascii	"portOpen\000"
 4128      4F70656E 
 4128      00
 4129              	.LASF56:
 4130 01d3 696E6974 		.ascii	"initBrake\000"
 4130      4272616B 
 4130      6500
 4131              	.LASF93:
 4132 01dd 666C6167 		.ascii	"flag_ts_update\000"
 4132      5F74735F 
 4132      75706461 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 86


 4132      746500
 4133              	.LASF78:
 4134 01ec 7363616C 		.ascii	"scalingFactor\000"
 4134      696E6746 
 4134      6163746F 
 4134      7200
 4135              	.LASF73:
 4136 01fa 6C656674 		.ascii	"leftSpeed\000"
 4136      53706565 
 4136      6400
 4137              	.LASF92:
 4138 0204 666C6167 		.ascii	"flag_ts_enc\000"
 4138      5F74735F 
 4138      656E6300 
 4139              	.LASF128:
 4140 0210 62797465 		.ascii	"byteCount\000"
 4140      436F756E 
 4140      7400
 4141              	.LASF67:
 4142 021a 62757474 		.ascii	"button\000"
 4142      6F6E00
 4143              	.LASF80:
 4144 0221 72657375 		.ascii	"result_str\000"
 4144      6C745F73 
 4144      747200
 4145              	.LASF86:
 4146 022c 75617274 		.ascii	"uart_set_PWM\000"
 4146      5F736574 
 4146      5F50574D 
 4146      00
 4147              	.LASF28:
 4148 0239 726F626F 		.ascii	"robot_ypos\000"
 4148      745F7970 
 4148      6F7300
 4149              	.LASF91:
 4150 0244 74735F64 		.ascii	"ts_display\000"
 4150      6973706C 
 4150      617900
 4151              	.LASF77:
 4152 024f 7072696E 		.ascii	"print_ADC\000"
 4152      745F4144 
 4152      4300
 4153              	.LASF71:
 4154 0259 77686565 		.ascii	"wheel_1_str\000"
 4154      6C5F315F 
 4154      73747200 
 4155              	.LASF10:
 4156 0265 63686172 		.ascii	"char\000"
 4156      00
 4157              	.LASF32:
 4158 026a 67305F73 		.ascii	"g0_speed\000"
 4158      70656564 
 4158      00
 4159              	.LASF116:
 4160 0273 72696768 		.ascii	"rightSpeedLimit\000"
 4160      74537065 
 4160      65644C69 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 87


 4160      6D697400 
 4161              	.LASF14:
 4162 0283 75696E74 		.ascii	"uint16\000"
 4162      313600
 4163              	.LASF16:
 4164 028a 696E7438 		.ascii	"int8\000"
 4164      00
 4165              	.LASF37:
 4166 028f 67315F64 		.ascii	"g1_direction\000"
 4166      69726563 
 4166      74696F6E 
 4166      00
 4167              	.LASF75:
 4168 029c 696E7465 		.ascii	"interCalc\000"
 4168      7243616C 
 4168      6300
 4169              	.LASF45:
 4170 02a6 72696768 		.ascii	"right\000"
 4170      7400
 4171              	.LASF6:
 4172 02ac 6C6F6E67 		.ascii	"long long int\000"
 4172      206C6F6E 
 4172      6720696E 
 4172      7400
 4173              	.LASF125:
 4174 02ba 62756666 		.ascii	"buffer_state\000"
 4174      65725F73 
 4174      74617465 
 4174      00
 4175              	.LASF34:
 4176 02c7 67315F78 		.ascii	"g1_xpos\000"
 4176      706F7300 
 4177              	.LASF130:
 4178 02cf 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4178      4320342E 
 4178      392E3320 
 4178      32303135 
 4178      30333033 
 4179 0302 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4179      20726576 
 4179      6973696F 
 4179      6E203232 
 4179      31323230 
 4180 0335 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4180      66756E63 
 4180      74696F6E 
 4180      2D736563 
 4180      74696F6E 
 4181              	.LASF40:
 4182 035d 67325F73 		.ascii	"g2_speed\000"
 4182      70656564 
 4182      00
 4183              	.LASF31:
 4184 0366 67305F79 		.ascii	"g0_ypos\000"
 4184      706F7300 
 4185              	.LASF60:
 4186 036e 72665F63 		.ascii	"rf_char\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 88


 4186      68617200 
 4187              	.LASF74:
 4188 0376 72696768 		.ascii	"rightSpeed\000"
 4188      74537065 
 4188      656400
 4189              	.LASF90:
 4190 0381 74735F73 		.ascii	"ts_speed\000"
 4190      70656564 
 4190      00
 4191              	.LASF15:
 4192 038a 75696E74 		.ascii	"uint32\000"
 4192      333200
 4193              	.LASF134:
 4194 0391 64617461 		.ascii	"data_main\000"
 4194      5F6D6169 
 4194      6E00
 4195              	.LASF79:
 4196 039b 636F6E76 		.ascii	"converted_val\000"
 4196      65727465 
 4196      645F7661 
 4196      6C00
 4197              	.LASF25:
 4198 03a9 72737369 		.ascii	"rssi\000"
 4198      00
 4199              	.LASF33:
 4200 03ae 67305F64 		.ascii	"g0_direction\000"
 4200      69726563 
 4200      74696F6E 
 4200      00
 4201              	.LASF102:
 4202 03bb 666C6167 		.ascii	"flag_receive_ADC\000"
 4202      5F726563 
 4202      65697665 
 4202      5F414443 
 4202      00
 4203              	.LASF24:
 4204 03cc 53544F50 		.ascii	"STOPPED\000"
 4204      50454400 
 4205              	.LASF61:
 4206 03d4 42545F72 		.ascii	"BT_rxInt\000"
 4206      78496E74 
 4206      00
 4207              	.LASF20:
 4208 03dd 6C6F6E67 		.ascii	"long double\000"
 4208      20646F75 
 4208      626C6500 
 4209              	.LASF59:
 4210 03e9 7278496E 		.ascii	"rxInt\000"
 4210      7400
 4211              	.LASF113:
 4212 03ef 6C656674 		.ascii	"left_duty_cycle\000"
 4212      5F647574 
 4212      795F6379 
 4212      636C6500 
 4213              	.LASF94:
 4214 03ff 666C6167 		.ascii	"flag_ts_speed\000"
 4214      5F74735F 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 89


 4214      73706565 
 4214      6400
 4215              	.LASF99:
 4216 040d 64617461 		.ascii	"dataready_flag\000"
 4216      72656164 
 4216      795F666C 
 4216      616700
 4217              	.LASF96:
 4218 041c 666C6167 		.ascii	"flag_rx\000"
 4218      5F727800 
 4219              	.LASF2:
 4220 0424 73686F72 		.ascii	"short int\000"
 4220      7420696E 
 4220      7400
 4221              	.LASF103:
 4222 042e 6164635F 		.ascii	"adc_result\000"
 4222      72657375 
 4222      6C7400
 4223              	.LASF105:
 4224 0439 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 4224      5F63616C 
 4224      635F7768 
 4224      65656C73 
 4224      70656564 
 4225              	.LASF4:
 4226 044e 6C6F6E67 		.ascii	"long int\000"
 4226      20696E74 
 4226      00
 4227              	.LASF54:
 4228 0457 696E6974 		.ascii	"initTurnRight\000"
 4228      5475726E 
 4228      52696768 
 4228      7400
 4229              	.LASF87:
 4230 0465 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4230      52784275 
 4230      66666572 
 4230      00
 4231              	.LASF82:
 4232 0472 7072696E 		.ascii	"printString\000"
 4232      74537472 
 4232      696E6700 
 4233              	.LASF89:
 4234 047e 74735F75 		.ascii	"ts_update\000"
 4234      70646174 
 4234      6500
 4235              	.LASF115:
 4236 0488 6C656674 		.ascii	"leftSpeedLimit\000"
 4236      53706565 
 4236      644C696D 
 4236      697400
 4237              	.LASF39:
 4238 0497 67325F79 		.ascii	"g2_ypos\000"
 4238      706F7300 
 4239              	.LASF46:
 4240 049f 6C656674 		.ascii	"left\000"
 4240      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 90


 4241              	.LASF52:
 4242 04a4 7475726E 		.ascii	"turnRight\000"
 4242      52696768 
 4242      7400
 4243              	.LASF35:
 4244 04ae 67315F79 		.ascii	"g1_ypos\000"
 4244      706F7300 
 4245              	.LASF63:
 4246 04b6 6164635F 		.ascii	"adc_isr\000"
 4246      69737200 
 4247              	.LASF9:
 4248 04be 73697A65 		.ascii	"sizetype\000"
 4248      74797065 
 4248      00
 4249              	.LASF5:
 4250 04c7 6C6F6E67 		.ascii	"long unsigned int\000"
 4250      20756E73 
 4250      69676E65 
 4250      6420696E 
 4250      7400
 4251              	.LASF43:
 4252 04d9 62797465 		.ascii	"byte_packet\000"
 4252      5F706163 
 4252      6B657400 
 4253              	.LASF12:
 4254 04e5 696E7433 		.ascii	"int32_t\000"
 4254      325F7400 
 4255              	.LASF129:
 4256 04ed 7061636B 		.ascii	"packet\000"
 4256      657400
 4257              	.LASF27:
 4258 04f4 726F626F 		.ascii	"robot_xpos\000"
 4258      745F7870 
 4258      6F7300
 4259              	.LASF49:
 4260 04ff 6272616B 		.ascii	"brakeMotor\000"
 4260      654D6F74 
 4260      6F7200
 4261              	.LASF123:
 4262 050a 656E7472 		.ascii	"entry\000"
 4262      7900
 4263              	.LASF1:
 4264 0510 756E7369 		.ascii	"unsigned char\000"
 4264      676E6564 
 4264      20636861 
 4264      7200
 4265              	.LASF122:
 4266 051e 6C696E65 		.ascii	"line\000"
 4266      00
 4267              	.LASF66:
 4268 0523 53746F70 		.ascii	"Stop_on_line\000"
 4268      5F6F6E5F 
 4268      6C696E65 
 4268      00
 4269              	.LASF88:
 4270 0530 74735F65 		.ascii	"ts_enc\000"
 4270      6E6300
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 91


 4271              	.LASF117:
 4272 0537 6272616B 		.ascii	"brakeFlag\000"
 4272      65466C61 
 4272      6700
 4273              	.LASF95:
 4274 0541 666C6167 		.ascii	"flag_ts_display\000"
 4274      5F74735F 
 4274      64697370 
 4274      6C617900 
 4275              	.LASF133:
 4276 0551 73746174 		.ascii	"state\000"
 4276      6500
 4277              	.LASF57:
 4278 0557 72657665 		.ascii	"reverseDirection\000"
 4278      72736544 
 4278      69726563 
 4278      74696F6E 
 4278      00
 4279              	.LASF47:
 4280 0568 6272616B 		.ascii	"brakeLeft\000"
 4280      654C6566 
 4280      7400
 4281              	.LASF121:
 4282 0572 64697370 		.ascii	"displaystring\000"
 4282      6C617973 
 4282      7472696E 
 4282      6700
 4283              	.LASF108:
 4284 0580 6C617374 		.ascii	"last_quad_count1\000"
 4284      5F717561 
 4284      645F636F 
 4284      756E7431 
 4284      00
 4285              	.LASF109:
 4286 0591 6C617374 		.ascii	"last_quad_count2\000"
 4286      5F717561 
 4286      645F636F 
 4286      756E7432 
 4286      00
 4287              	.LASF85:
 4288 05a2 75736250 		.ascii	"usbPutChar\000"
 4288      75744368 
 4288      617200
 4289              	.LASF0:
 4290 05ad 7369676E 		.ascii	"signed char\000"
 4290      65642063 
 4290      68617200 
 4291              	.LASF3:
 4292 05b9 73686F72 		.ascii	"short unsigned int\000"
 4292      7420756E 
 4292      7369676E 
 4292      65642069 
 4292      6E7400
 4293              	.LASF29:
 4294 05cc 726F626F 		.ascii	"robot_orientation\000"
 4294      745F6F72 
 4294      69656E74 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 92


 4294      6174696F 
 4294      6E00
 4295              	.LASF83:
 4296 05de 6D61696E 		.ascii	"main\000"
 4296      00
 4297              	.LASF62:
 4298 05e3 42545F74 		.ascii	"BT_txInt\000"
 4298      78496E74 
 4298      00
 4299              	.LASF76:
 4300 05ec 6E657874 		.ascii	"nextSpeed\000"
 4300      53706565 
 4300      6400
 4301              	.LASF13:
 4302 05f6 75696E74 		.ascii	"uint8\000"
 4302      3800
 4303              	.LASF19:
 4304 05fc 646F7562 		.ascii	"double\000"
 4304      6C6500
 4305              	.LASF114:
 4306 0603 72696768 		.ascii	"right_duty_cycle\000"
 4306      745F6475 
 4306      74795F63 
 4306      79636C65 
 4306      00
 4307              	.LASF69:
 4308 0614 68616E64 		.ascii	"handle_rx_binary\000"
 4308      6C655F72 
 4308      785F6269 
 4308      6E617279 
 4308      00
 4309              	.LASF132:
 4310 0625 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 4310      70315C43 
 4310      53333031 
 4310      2D546561 
 4310      6D2D5265 
 4311              	.LASF81:
 4312 064e 7072696E 		.ascii	"print_RF\000"
 4312      745F5246 
 4312      00
 4313              	.LASF30:
 4314 0657 67305F78 		.ascii	"g0_xpos\000"
 4314      706F7300 
 4315              	.LASF98:
 4316 065f 666C6167 		.ascii	"flag_KB_string\000"
 4316      5F4B425F 
 4316      73747269 
 4316      6E6700
 4317              	.LASF36:
 4318 066e 67315F73 		.ascii	"g1_speed\000"
 4318      70656564 
 4318      00
 4319              	.LASF131:
 4320 0677 2E5C6D61 		.ascii	".\\main.c\000"
 4320      696E2E63 
 4320      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccx0ZwSp.s 			page 93


 4321              	.LASF48:
 4322 0680 6272616B 		.ascii	"brakeRight\000"
 4322      65526967 
 4322      687400
 4323              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
