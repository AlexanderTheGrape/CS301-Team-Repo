ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	prevVoltage,2,2
 263              		.comm	prevVoltage2,2,2
 264              		.global	displaystring
 265 0009 000000   		.align	2
 266              		.type	displaystring, %object
 267              		.size	displaystring, 64
 268              	displaystring:
 269 000c 43533330 		.ascii	"CS301 2016\012\000"
 269      31203230 
 269      31360A00 
 270 0018 00000000 		.space	52
 270      00000000 
 270      00000000 
 270      00000000 
 270      00000000 
 271              		.comm	line,64,4
 272              		.comm	entry,64,4
 273              		.comm	usbBuffer,64,4
 274              		.comm	buffer_state,32,4
 275              		.comm	system_state,32,4
 276              		.global	prev_movement_state
 277              		.type	prev_movement_state, %object
 278              		.size	prev_movement_state, 1
 279              	prev_movement_state:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 6


 280 004c 03       		.byte	3
 281              		.global	movement_state
 282              		.type	movement_state, %object
 283              		.size	movement_state, 1
 284              	movement_state:
 285 004d 03       		.byte	3
 286              		.global	track_mode
 287              		.bss
 288              		.type	track_mode, %object
 289              		.size	track_mode, 1
 290              	track_mode:
 291 003c 00       		.space	1
 292              		.global	byteCount
 293              		.type	byteCount, %object
 294              		.size	byteCount, 1
 295              	byteCount:
 296 003d 00       		.space	1
 297              		.comm	packet,2,4
 298              		.global	speed
 299              		.data
 300 004e 0000     		.align	3
 301              		.type	speed, %object
 302              		.size	speed, 8
 303              	speed:
 304 0050 00000000 		.word	0
 305 0054 00002E40 		.word	1076756480
 306              		.comm	tracked_direction,4,4
 307              		.global	instructions
 308              		.bss
 309 003e 0000     		.align	2
 310              		.type	instructions, %object
 311              		.size	instructions, 800
 312              	instructions:
 313 0040 00000000 		.space	800
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	instructionCount
 315              		.align	1
 316              		.type	instructionCount, %object
 317              		.size	instructionCount, 2
 318              	instructionCount:
 319 0360 0000     		.space	2
 320              		.global	instructionLength
 321              		.align	1
 322              		.type	instructionLength, %object
 323              		.size	instructionLength, 2
 324              	instructionLength:
 325 0362 0000     		.space	2
 326              		.global	sensorsDisabled
 327              		.align	2
 328              		.type	sensorsDisabled, %object
 329              		.size	sensorsDisabled, 4
 330              	sensorsDisabled:
 331 0364 00000000 		.space	4
 332              		.global	robot_direction
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 7


 333              		.data
 334              		.align	2
 335              		.type	robot_direction, %object
 336              		.size	robot_direction, 4
 337              	robot_direction:
 338 0058 02000000 		.word	2
 339              		.global	path
 340              		.bss
 341              		.align	2
 342              		.type	path, %object
 343              		.size	path, 9600
 344              	path:
 345 0368 00000000 		.space	9600
 345      00000000 
 345      00000000 
 345      00000000 
 345      00000000 
 346              		.global	start
 347              		.data
 348              		.align	2
 349              		.type	start, %object
 350              		.size	start, 8
 351              	start:
 352 005c 01000000 		.word	1
 353 0060 01000000 		.word	1
 354              		.global	destination
 355              		.align	2
 356              		.type	destination, %object
 357              		.size	destination, 8
 358              	destination:
 359 0064 0D000000 		.word	13
 360 0068 0B000000 		.word	11
 361              		.global	map
 362              		.align	2
 363              		.type	map, %object
 364              		.size	map, 1140
 365              	map:
 366 006c 01000000 		.word	1
 367 0070 01000000 		.word	1
 368 0074 01000000 		.word	1
 369 0078 01000000 		.word	1
 370 007c 01000000 		.word	1
 371 0080 01000000 		.word	1
 372 0084 01000000 		.word	1
 373 0088 01000000 		.word	1
 374 008c 01000000 		.word	1
 375 0090 01000000 		.word	1
 376 0094 01000000 		.word	1
 377 0098 01000000 		.word	1
 378 009c 01000000 		.word	1
 379 00a0 01000000 		.word	1
 380 00a4 01000000 		.word	1
 381 00a8 01000000 		.word	1
 382 00ac 01000000 		.word	1
 383 00b0 01000000 		.word	1
 384 00b4 01000000 		.word	1
 385 00b8 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 8


 386 00bc 00000000 		.word	0
 387 00c0 00000000 		.word	0
 388 00c4 00000000 		.word	0
 389 00c8 00000000 		.word	0
 390 00cc 00000000 		.word	0
 391 00d0 01000000 		.word	1
 392 00d4 00000000 		.word	0
 393 00d8 01000000 		.word	1
 394 00dc 00000000 		.word	0
 395 00e0 00000000 		.word	0
 396 00e4 00000000 		.word	0
 397 00e8 00000000 		.word	0
 398 00ec 00000000 		.word	0
 399 00f0 00000000 		.word	0
 400 00f4 00000000 		.word	0
 401 00f8 00000000 		.word	0
 402 00fc 00000000 		.word	0
 403 0100 01000000 		.word	1
 404 0104 01000000 		.word	1
 405 0108 01000000 		.word	1
 406 010c 01000000 		.word	1
 407 0110 01000000 		.word	1
 408 0114 01000000 		.word	1
 409 0118 00000000 		.word	0
 410 011c 01000000 		.word	1
 411 0120 00000000 		.word	0
 412 0124 01000000 		.word	1
 413 0128 00000000 		.word	0
 414 012c 01000000 		.word	1
 415 0130 00000000 		.word	0
 416 0134 01000000 		.word	1
 417 0138 01000000 		.word	1
 418 013c 01000000 		.word	1
 419 0140 01000000 		.word	1
 420 0144 01000000 		.word	1
 421 0148 00000000 		.word	0
 422 014c 01000000 		.word	1
 423 0150 01000000 		.word	1
 424 0154 00000000 		.word	0
 425 0158 00000000 		.word	0
 426 015c 00000000 		.word	0
 427 0160 01000000 		.word	1
 428 0164 00000000 		.word	0
 429 0168 01000000 		.word	1
 430 016c 00000000 		.word	0
 431 0170 00000000 		.word	0
 432 0174 00000000 		.word	0
 433 0178 01000000 		.word	1
 434 017c 00000000 		.word	0
 435 0180 00000000 		.word	0
 436 0184 00000000 		.word	0
 437 0188 00000000 		.word	0
 438 018c 00000000 		.word	0
 439 0190 01000000 		.word	1
 440 0194 00000000 		.word	0
 441 0198 01000000 		.word	1
 442 019c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 9


 443 01a0 00000000 		.word	0
 444 01a4 01000000 		.word	1
 445 01a8 00000000 		.word	0
 446 01ac 01000000 		.word	1
 447 01b0 00000000 		.word	0
 448 01b4 01000000 		.word	1
 449 01b8 00000000 		.word	0
 450 01bc 01000000 		.word	1
 451 01c0 01000000 		.word	1
 452 01c4 01000000 		.word	1
 453 01c8 01000000 		.word	1
 454 01cc 01000000 		.word	1
 455 01d0 01000000 		.word	1
 456 01d4 01000000 		.word	1
 457 01d8 00000000 		.word	0
 458 01dc 01000000 		.word	1
 459 01e0 00000000 		.word	0
 460 01e4 01000000 		.word	1
 461 01e8 01000000 		.word	1
 462 01ec 00000000 		.word	0
 463 01f0 01000000 		.word	1
 464 01f4 00000000 		.word	0
 465 01f8 00000000 		.word	0
 466 01fc 00000000 		.word	0
 467 0200 00000000 		.word	0
 468 0204 00000000 		.word	0
 469 0208 00000000 		.word	0
 470 020c 00000000 		.word	0
 471 0210 00000000 		.word	0
 472 0214 00000000 		.word	0
 473 0218 00000000 		.word	0
 474 021c 00000000 		.word	0
 475 0220 01000000 		.word	1
 476 0224 00000000 		.word	0
 477 0228 01000000 		.word	1
 478 022c 00000000 		.word	0
 479 0230 01000000 		.word	1
 480 0234 01000000 		.word	1
 481 0238 00000000 		.word	0
 482 023c 01000000 		.word	1
 483 0240 01000000 		.word	1
 484 0244 01000000 		.word	1
 485 0248 01000000 		.word	1
 486 024c 01000000 		.word	1
 487 0250 01000000 		.word	1
 488 0254 01000000 		.word	1
 489 0258 01000000 		.word	1
 490 025c 01000000 		.word	1
 491 0260 00000000 		.word	0
 492 0264 01000000 		.word	1
 493 0268 00000000 		.word	0
 494 026c 01000000 		.word	1
 495 0270 00000000 		.word	0
 496 0274 01000000 		.word	1
 497 0278 01000000 		.word	1
 498 027c 01000000 		.word	1
 499 0280 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 10


 500 0284 00000000 		.word	0
 501 0288 00000000 		.word	0
 502 028c 00000000 		.word	0
 503 0290 00000000 		.word	0
 504 0294 00000000 		.word	0
 505 0298 00000000 		.word	0
 506 029c 00000000 		.word	0
 507 02a0 00000000 		.word	0
 508 02a4 00000000 		.word	0
 509 02a8 00000000 		.word	0
 510 02ac 00000000 		.word	0
 511 02b0 01000000 		.word	1
 512 02b4 00000000 		.word	0
 513 02b8 01000000 		.word	1
 514 02bc 00000000 		.word	0
 515 02c0 00000000 		.word	0
 516 02c4 00000000 		.word	0
 517 02c8 01000000 		.word	1
 518 02cc 01000000 		.word	1
 519 02d0 01000000 		.word	1
 520 02d4 01000000 		.word	1
 521 02d8 01000000 		.word	1
 522 02dc 01000000 		.word	1
 523 02e0 01000000 		.word	1
 524 02e4 01000000 		.word	1
 525 02e8 00000000 		.word	0
 526 02ec 01000000 		.word	1
 527 02f0 01000000 		.word	1
 528 02f4 01000000 		.word	1
 529 02f8 01000000 		.word	1
 530 02fc 01000000 		.word	1
 531 0300 00000000 		.word	0
 532 0304 01000000 		.word	1
 533 0308 01000000 		.word	1
 534 030c 01000000 		.word	1
 535 0310 00000000 		.word	0
 536 0314 01000000 		.word	1
 537 0318 01000000 		.word	1
 538 031c 00000000 		.word	0
 539 0320 00000000 		.word	0
 540 0324 00000000 		.word	0
 541 0328 00000000 		.word	0
 542 032c 00000000 		.word	0
 543 0330 00000000 		.word	0
 544 0334 00000000 		.word	0
 545 0338 00000000 		.word	0
 546 033c 00000000 		.word	0
 547 0340 00000000 		.word	0
 548 0344 00000000 		.word	0
 549 0348 01000000 		.word	1
 550 034c 00000000 		.word	0
 551 0350 00000000 		.word	0
 552 0354 00000000 		.word	0
 553 0358 01000000 		.word	1
 554 035c 00000000 		.word	0
 555 0360 01000000 		.word	1
 556 0364 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 11


 557 0368 00000000 		.word	0
 558 036c 01000000 		.word	1
 559 0370 01000000 		.word	1
 560 0374 01000000 		.word	1
 561 0378 01000000 		.word	1
 562 037c 01000000 		.word	1
 563 0380 00000000 		.word	0
 564 0384 01000000 		.word	1
 565 0388 01000000 		.word	1
 566 038c 01000000 		.word	1
 567 0390 00000000 		.word	0
 568 0394 01000000 		.word	1
 569 0398 00000000 		.word	0
 570 039c 01000000 		.word	1
 571 03a0 00000000 		.word	0
 572 03a4 01000000 		.word	1
 573 03a8 00000000 		.word	0
 574 03ac 01000000 		.word	1
 575 03b0 01000000 		.word	1
 576 03b4 00000000 		.word	0
 577 03b8 00000000 		.word	0
 578 03bc 00000000 		.word	0
 579 03c0 00000000 		.word	0
 580 03c4 00000000 		.word	0
 581 03c8 01000000 		.word	1
 582 03cc 00000000 		.word	0
 583 03d0 00000000 		.word	0
 584 03d4 00000000 		.word	0
 585 03d8 01000000 		.word	1
 586 03dc 00000000 		.word	0
 587 03e0 00000000 		.word	0
 588 03e4 00000000 		.word	0
 589 03e8 01000000 		.word	1
 590 03ec 00000000 		.word	0
 591 03f0 00000000 		.word	0
 592 03f4 00000000 		.word	0
 593 03f8 01000000 		.word	1
 594 03fc 01000000 		.word	1
 595 0400 00000000 		.word	0
 596 0404 01000000 		.word	1
 597 0408 01000000 		.word	1
 598 040c 01000000 		.word	1
 599 0410 00000000 		.word	0
 600 0414 01000000 		.word	1
 601 0418 01000000 		.word	1
 602 041c 01000000 		.word	1
 603 0420 00000000 		.word	0
 604 0424 01000000 		.word	1
 605 0428 01000000 		.word	1
 606 042c 01000000 		.word	1
 607 0430 00000000 		.word	0
 608 0434 01000000 		.word	1
 609 0438 01000000 		.word	1
 610 043c 01000000 		.word	1
 611 0440 00000000 		.word	0
 612 0444 01000000 		.word	1
 613 0448 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 12


 614 044c 00000000 		.word	0
 615 0450 00000000 		.word	0
 616 0454 00000000 		.word	0
 617 0458 01000000 		.word	1
 618 045c 00000000 		.word	0
 619 0460 00000000 		.word	0
 620 0464 00000000 		.word	0
 621 0468 00000000 		.word	0
 622 046c 00000000 		.word	0
 623 0470 00000000 		.word	0
 624 0474 00000000 		.word	0
 625 0478 01000000 		.word	1
 626 047c 00000000 		.word	0
 627 0480 00000000 		.word	0
 628 0484 00000000 		.word	0
 629 0488 00000000 		.word	0
 630 048c 00000000 		.word	0
 631 0490 01000000 		.word	1
 632 0494 01000000 		.word	1
 633 0498 01000000 		.word	1
 634 049c 01000000 		.word	1
 635 04a0 01000000 		.word	1
 636 04a4 01000000 		.word	1
 637 04a8 01000000 		.word	1
 638 04ac 01000000 		.word	1
 639 04b0 01000000 		.word	1
 640 04b4 01000000 		.word	1
 641 04b8 01000000 		.word	1
 642 04bc 01000000 		.word	1
 643 04c0 01000000 		.word	1
 644 04c4 01000000 		.word	1
 645 04c8 01000000 		.word	1
 646 04cc 01000000 		.word	1
 647 04d0 01000000 		.word	1
 648 04d4 01000000 		.word	1
 649 04d8 01000000 		.word	1
 650 04dc 01000000 		.word	1
 651              		.global	food_list
 652              		.align	2
 653              		.type	food_list, %object
 654              		.size	food_list, 48
 655              	food_list:
 656 04e0 05000000 		.word	5
 657 04e4 09000000 		.word	9
 658 04e8 05000000 		.word	5
 659 04ec 03000000 		.word	3
 660 04f0 0D000000 		.word	13
 661 04f4 02000000 		.word	2
 662 04f8 00000000 		.space	24
 662      00000000 
 662      00000000 
 662      00000000 
 662      00000000 
 663              		.global	food_length
 664              		.align	2
 665              		.type	food_length, %object
 666              		.size	food_length, 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 13


 667              	food_length:
 668 0510 03000000 		.word	3
 669 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 670              		.align	2
 671              		.global	BT_txInt
 672              		.thumb
 673              		.thumb_func
 674              		.type	BT_txInt, %function
 675              	BT_txInt:
 676              	.LFB63:
 677              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 134
  29:.\main.c      **** #define U_OFFSET 93
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 140
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t robot_direction = 2;
  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  46:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 14


  47:.\main.c      **** 
  48:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  65:.\main.c      **** //first number is the y coord, second is x
  66:.\main.c      **** //first number is row, second column
  67:.\main.c      **** 
  68:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  69:.\main.c      **** uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}};
  70:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}};
  71:.\main.c      **** uint32_t food_length = 3;
  72:.\main.c      **** 
  73:.\main.c      **** void changeToRF();
  74:.\main.c      **** void changeToBT();
  75:.\main.c      **** void brakeMotor();
  76:.\main.c      **** void driveForwards();
  77:.\main.c      **** void initTurnLeft();
  78:.\main.c      **** void initTurnRight();
  79:.\main.c      **** void inittrackLineZ();
  80:.\main.c      **** void trackLineU();
  81:.\main.c      **** void trackLine();
  82:.\main.c      **** void trackLineZ();
  83:.\main.c      **** void initTrackU();
  84:.\main.c      **** void turnLeft();
  85:.\main.c      **** void turnRight();
  86:.\main.c      **** void initForward();
  87:.\main.c      **** void initTurnU();
  88:.\main.c      **** void turnU();
  89:.\main.c      **** void initBrake();
  90:.\main.c      **** void print_ADC();
  91:.\main.c      **** void Quad_Dec_response();
  92:.\main.c      **** void handle_rx_binary();
  93:.\main.c      **** void readFrontSensors();
  94:.\main.c      **** void print_RF();
  95:.\main.c      **** 
  96:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  97:.\main.c      **** //BT
  98:.\main.c      **** CY_ISR(BT_txInt)
  99:.\main.c      **** {
 678              		.loc 1 99 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 15


 682              		@ link register save eliminated.
 683 0000 80B4     		push	{r7}
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 100:.\main.c      ****     
 101:.\main.c      **** }
 688              		.loc 1 101 0
 689 0004 BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0006 5DF8047B 		ldr	r7, [sp], #4
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 000a 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE63:
 698              		.size	BT_txInt, .-BT_txInt
 699              		.section	.text.adc_isr,"ax",%progbits
 700              		.align	2
 701              		.global	adc_isr
 702              		.thumb
 703              		.thumb_func
 704              		.type	adc_isr, %function
 705              	adc_isr:
 706              	.LFB64:
 102:.\main.c      **** 
 103:.\main.c      **** //ADC:
 104:.\main.c      **** CY_ISR (adc_isr)
 105:.\main.c      **** {
 707              		.loc 1 105 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 106:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 107:.\main.c      ****     adc_result = ADC_GetResult16();
 717              		.loc 1 107 0
 718 0004 FFF7FEFF 		bl	ADC_GetResult16
 719 0008 0346     		mov	r3, r0
 720 000a 1A46     		mov	r2, r3
 721 000c 044B     		ldr	r3, .L3
 722 000e 1A80     		strh	r2, [r3]	@ movhi
 108:.\main.c      ****     flag_receive_ADC = 1;
 723              		.loc 1 108 0
 724 0010 044B     		ldr	r3, .L3+4
 725 0012 0122     		movs	r2, #1
 726 0014 1A70     		strb	r2, [r3]
 109:.\main.c      ****     flag_print_rf = 1;
 727              		.loc 1 109 0
 728 0016 044B     		ldr	r3, .L3+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 16


 729 0018 0122     		movs	r2, #1
 730 001a 1A70     		strb	r2, [r3]
 110:.\main.c      ****     //LED_Write(~LED_Read());
 111:.\main.c      **** }
 731              		.loc 1 111 0
 732 001c 80BD     		pop	{r7, pc}
 733              	.L4:
 734 001e 00BF     		.align	2
 735              	.L3:
 736 0020 00000000 		.word	adc_result
 737 0024 00000000 		.word	flag_receive_ADC
 738 0028 00000000 		.word	flag_print_rf
 739              		.cfi_endproc
 740              	.LFE64:
 741              		.size	adc_isr, .-adc_isr
 742              		.global	__aeabi_i2d
 743              		.global	__aeabi_dsub
 744              		.global	__aeabi_dcmpge
 745              		.global	__aeabi_dadd
 746              		.section	.text.isr_quad1,"ax",%progbits
 747              		.align	2
 748              		.global	isr_quad1
 749              		.thumb
 750              		.thumb_func
 751              		.type	isr_quad1, %function
 752              	isr_quad1:
 753              	.LFB65:
 112:.\main.c      **** 
 113:.\main.c      **** CY_ISR (isr_quad1)
 114:.\main.c      **** {
 754              		.loc 1 114 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 B0B5     		push	{r4, r5, r7, lr}
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 4, -16
 761              		.cfi_offset 5, -12
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 115:.\main.c      ****     
 116:.\main.c      ****     //LED_Write(~LED_Read());
 117:.\main.c      ****     last_quad_count1 = quad_count1;
 766              		.loc 1 117 0
 767 0004 574B     		ldr	r3, .L13
 768 0006 1A88     		ldrh	r2, [r3]
 769 0008 574B     		ldr	r3, .L13+4
 770 000a 1A80     		strh	r2, [r3]	@ movhi
 118:.\main.c      ****     last_quad_count2 = quad_count2;
 771              		.loc 1 118 0
 772 000c 574B     		ldr	r3, .L13+8
 773 000e 1A88     		ldrh	r2, [r3]
 774 0010 574B     		ldr	r3, .L13+12
 775 0012 1A80     		strh	r2, [r3]	@ movhi
 119:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 17


 776              		.loc 1 119 0
 777 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 778 0018 0346     		mov	r3, r0
 779 001a 1A46     		mov	r2, r3
 780 001c 514B     		ldr	r3, .L13
 781 001e 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 782              		.loc 1 120 0
 783 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 784 0024 0346     		mov	r3, r0
 785 0026 1A46     		mov	r2, r3
 786 0028 504B     		ldr	r3, .L13+8
 787 002a 1A80     		strh	r2, [r3]	@ movhi
 121:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 788              		.loc 1 121 0
 789 002c 4D4B     		ldr	r3, .L13
 790 002e 1B88     		ldrh	r3, [r3]
 791 0030 9AB2     		uxth	r2, r3
 792 0032 4D4B     		ldr	r3, .L13+4
 793 0034 1B88     		ldrh	r3, [r3]
 794 0036 9BB2     		uxth	r3, r3
 795 0038 D31A     		subs	r3, r2, r3
 796 003a 9BB2     		uxth	r3, r3
 797 003c 9AB2     		uxth	r2, r3
 798 003e 4D4B     		ldr	r3, .L13+16
 799 0040 1A80     		strh	r2, [r3]	@ movhi
 122:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 800              		.loc 1 122 0
 801 0042 4A4B     		ldr	r3, .L13+8
 802 0044 1B88     		ldrh	r3, [r3]
 803 0046 9AB2     		uxth	r2, r3
 804 0048 494B     		ldr	r3, .L13+12
 805 004a 1B88     		ldrh	r3, [r3]
 806 004c 9BB2     		uxth	r3, r3
 807 004e D31A     		subs	r3, r2, r3
 808 0050 9BB2     		uxth	r3, r3
 809 0052 9AB2     		uxth	r2, r3
 810 0054 484B     		ldr	r3, .L13+20
 811 0056 1A80     		strh	r2, [r3]	@ movhi
 123:.\main.c      ****     
 124:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 812              		.loc 1 124 0
 813 0058 424B     		ldr	r3, .L13
 814 005a 1B88     		ldrh	r3, [r3]
 815 005c 1BB2     		sxth	r3, r3
 816 005e 002B     		cmp	r3, #0
 817 0060 B8BF     		it	lt
 818 0062 5B42     		rsblt	r3, r3, #0
 819 0064 40F6B832 		movw	r2, #3000
 820 0068 9342     		cmp	r3, r2
 821 006a 17DD     		ble	.L6
 822              		.loc 1 124 0 is_stmt 0 discriminator 1
 823 006c 434B     		ldr	r3, .L13+24
 824 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 0070 012B     		cmp	r3, #1
 826 0072 13D0     		beq	.L6
 827              		.loc 1 124 0 discriminator 2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 18


 828 0074 414B     		ldr	r3, .L13+24
 829 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0078 022B     		cmp	r3, #2
 831 007a 0FD0     		beq	.L6
 832              		.loc 1 124 0 discriminator 3
 833 007c 3F4B     		ldr	r3, .L13+24
 834 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 0080 072B     		cmp	r3, #7
 836 0082 0BD0     		beq	.L6
 125:.\main.c      ****     {
 126:.\main.c      ****         QuadDec_M1_SetCounter(0);
 837              		.loc 1 126 0 is_stmt 1
 838 0084 0020     		movs	r0, #0
 839 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 127:.\main.c      ****         QuadDec_M2_SetCounter(0);
 840              		.loc 1 127 0
 841 008a 0020     		movs	r0, #0
 842 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 128:.\main.c      ****         quad_count1 = 0;
 843              		.loc 1 128 0
 844 0090 344B     		ldr	r3, .L13
 845 0092 0022     		movs	r2, #0
 846 0094 1A80     		strh	r2, [r3]	@ movhi
 129:.\main.c      ****         quad_count2 = 0;
 847              		.loc 1 129 0
 848 0096 354B     		ldr	r3, .L13+8
 849 0098 0022     		movs	r2, #0
 850 009a 1A80     		strh	r2, [r3]	@ movhi
 851              	.L6:
 130:.\main.c      ****     }
 131:.\main.c      **** 
 132:.\main.c      ****     flag_calc_wheelspeed = 1;
 852              		.loc 1 132 0
 853 009c 384B     		ldr	r3, .L13+28
 854 009e 0122     		movs	r2, #1
 855 00a0 1A70     		strb	r2, [r3]
 133:.\main.c      ****     
 134:.\main.c      ****     
 135:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 856              		.loc 1 135 0
 857 00a2 384B     		ldr	r3, .L13+32
 858 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 00a6 062B     		cmp	r3, #6
 860 00a8 5AD1     		bne	.L5
 861              		.loc 1 135 0 is_stmt 0 discriminator 1
 862 00aa 344B     		ldr	r3, .L13+24
 863 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 00ae 062B     		cmp	r3, #6
 865 00b0 56D1     		bne	.L5
 136:.\main.c      ****     {
 137:.\main.c      ****         //track the distance
 138:.\main.c      ****         accum_dist += quad_diff1;
 866              		.loc 1 138 0 is_stmt 1
 867 00b2 354B     		ldr	r3, .L13+36
 868 00b4 1B88     		ldrh	r3, [r3]
 869 00b6 9AB2     		uxth	r2, r3
 870 00b8 2E4B     		ldr	r3, .L13+16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 19


 871 00ba 1B88     		ldrh	r3, [r3]
 872 00bc 9BB2     		uxth	r3, r3
 873 00be 1344     		add	r3, r3, r2
 874 00c0 9BB2     		uxth	r3, r3
 875 00c2 9AB2     		uxth	r2, r3
 876 00c4 304B     		ldr	r3, .L13+36
 877 00c6 1A80     		strh	r2, [r3]	@ movhi
 139:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 878              		.loc 1 139 0
 879 00c8 2F4B     		ldr	r3, .L13+36
 880 00ca 1B88     		ldrh	r3, [r3]
 881 00cc 1BB2     		sxth	r3, r3
 882 00ce 002B     		cmp	r3, #0
 883 00d0 B8BF     		it	lt
 884 00d2 5B42     		rsblt	r3, r3, #0
 885 00d4 1846     		mov	r0, r3
 886 00d6 FFF7FEFF 		bl	__aeabi_i2d
 887 00da 0446     		mov	r4, r0
 888 00dc 0D46     		mov	r5, r1
 889 00de 2B4B     		ldr	r3, .L13+40
 890 00e0 1B88     		ldrh	r3, [r3]
 891 00e2 1BB2     		sxth	r3, r3
 892 00e4 1846     		mov	r0, r3
 893 00e6 FFF7FEFF 		bl	__aeabi_i2d
 894 00ea 0246     		mov	r2, r0
 895 00ec 0B46     		mov	r3, r1
 896 00ee 1046     		mov	r0, r2
 897 00f0 1946     		mov	r1, r3
 898 00f2 4FF00002 		mov	r2, #0
 899 00f6 264B     		ldr	r3, .L13+44
 900 00f8 FFF7FEFF 		bl	__aeabi_dsub
 901 00fc 0246     		mov	r2, r0
 902 00fe 0B46     		mov	r3, r1
 903 0100 2046     		mov	r0, r4
 904 0102 2946     		mov	r1, r5
 905 0104 FFF7FEFF 		bl	__aeabi_dcmpge
 906 0108 0346     		mov	r3, r0
 907 010a 002B     		cmp	r3, #0
 908 010c 02D0     		beq	.L8
 140:.\main.c      ****         {
 141:.\main.c      ****             reached_target = 1;
 909              		.loc 1 141 0
 910 010e 214B     		ldr	r3, .L13+48
 911 0110 0122     		movs	r2, #1
 912 0112 1A70     		strb	r2, [r3]
 913              	.L8:
 142:.\main.c      ****         }
 143:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5))
 914              		.loc 1 143 0
 915 0114 1C4B     		ldr	r3, .L13+36
 916 0116 1B88     		ldrh	r3, [r3]
 917 0118 1BB2     		sxth	r3, r3
 918 011a 002B     		cmp	r3, #0
 919 011c B8BF     		it	lt
 920 011e 5B42     		rsblt	r3, r3, #0
 921 0120 1846     		mov	r0, r3
 922 0122 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 20


 923 0126 0446     		mov	r4, r0
 924 0128 0D46     		mov	r5, r1
 925 012a 184B     		ldr	r3, .L13+40
 926 012c 1B88     		ldrh	r3, [r3]
 927 012e 1BB2     		sxth	r3, r3
 928 0130 1846     		mov	r0, r3
 929 0132 FFF7FEFF 		bl	__aeabi_i2d
 930 0136 0246     		mov	r2, r0
 931 0138 0B46     		mov	r3, r1
 932 013a 1046     		mov	r0, r2
 933 013c 1946     		mov	r1, r3
 934 013e 4FF00002 		mov	r2, #0
 935 0142 134B     		ldr	r3, .L13+44
 936 0144 FFF7FEFF 		bl	__aeabi_dadd
 937 0148 0246     		mov	r2, r0
 938 014a 0B46     		mov	r3, r1
 939 014c 2046     		mov	r0, r4
 940 014e 2946     		mov	r1, r5
 941 0150 FFF7FEFF 		bl	__aeabi_dcmpge
 942 0154 0346     		mov	r3, r0
 943 0156 002B     		cmp	r3, #0
 944 0158 02D0     		beq	.L5
 144:.\main.c      ****         {
 145:.\main.c      ****             overshot_target = 1;
 945              		.loc 1 145 0
 946 015a 0F4B     		ldr	r3, .L13+52
 947 015c 0122     		movs	r2, #1
 948 015e 1A70     		strb	r2, [r3]
 949              	.L5:
 146:.\main.c      ****         }
 147:.\main.c      ****     }
 148:.\main.c      **** }
 950              		.loc 1 148 0
 951 0160 B0BD     		pop	{r4, r5, r7, pc}
 952              	.L14:
 953 0162 00BF     		.align	2
 954              	.L13:
 955 0164 00000000 		.word	quad_count1
 956 0168 00000000 		.word	last_quad_count1
 957 016c 00000000 		.word	quad_count2
 958 0170 00000000 		.word	last_quad_count2
 959 0174 00000000 		.word	quad_diff1
 960 0178 00000000 		.word	quad_diff2
 961 017c 00000000 		.word	movement_state
 962 0180 00000000 		.word	flag_calc_wheelspeed
 963 0184 00000000 		.word	track_mode
 964 0188 00000000 		.word	accum_dist
 965 018c 00000000 		.word	target_distance_quad
 966 0190 00805140 		.word	1079083008
 967 0194 00000000 		.word	reached_target
 968 0198 00000000 		.word	overshot_target
 969              		.cfi_endproc
 970              	.LFE65:
 971              		.size	isr_quad1, .-isr_quad1
 972              		.section	.text.isr_turn_timer,"ax",%progbits
 973              		.align	2
 974              		.global	isr_turn_timer
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 21


 975              		.thumb
 976              		.thumb_func
 977              		.type	isr_turn_timer, %function
 978              	isr_turn_timer:
 979              	.LFB66:
 149:.\main.c      **** 
 150:.\main.c      **** CY_ISR(isr_turn_timer)
 151:.\main.c      **** {
 980              		.loc 1 151 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 82B0     		sub	sp, sp, #8
 989              		.cfi_def_cfa_offset 16
 990 0004 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 152:.\main.c      ****     if(movement_state == LTURN)
 992              		.loc 1 152 0
 993 0006 464B     		ldr	r3, .L23
 994 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 995 000a 012B     		cmp	r3, #1
 996 000c 33D1     		bne	.L16
 997              	.LBB2:
 153:.\main.c      ****     {
 154:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 998              		.loc 1 154 0
 999 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1000 0012 0346     		mov	r3, r0
 1001 0014 1A46     		mov	r2, r3
 1002 0016 434B     		ldr	r3, .L23+4
 1003 0018 1B88     		ldrh	r3, [r3]
 1004 001a 1BB2     		sxth	r3, r3
 1005 001c D31A     		subs	r3, r2, r3
 1006 001e 002B     		cmp	r3, #0
 1007 0020 B8BF     		it	lt
 1008 0022 5B42     		rsblt	r3, r3, #0
 1009 0024 404A     		ldr	r2, .L23+8
 1010 0026 82FB0312 		smull	r1, r2, r2, r3
 1011 002a 1112     		asrs	r1, r2, #8
 1012 002c DA17     		asrs	r2, r3, #31
 1013 002e 8A1A     		subs	r2, r1, r2
 1014 0030 4FF45071 		mov	r1, #832
 1015 0034 01FB02F2 		mul	r2, r1, r2
 1016 0038 9A1A     		subs	r2, r3, r2
 1017 003a 1346     		mov	r3, r2	@ movhi
 1018 003c FB80     		strh	r3, [r7, #6]	@ movhi
 155:.\main.c      ****   
 156:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1019              		.loc 1 156 0
 1020 003e FB88     		ldrh	r3, [r7, #6]
 1021 0040 B82B     		cmp	r3, #184
 1022 0042 17D9     		bls	.L17
 1023              		.loc 1 156 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 22


 1024 0044 FB88     		ldrh	r3, [r7, #6]
 1025 0046 E02B     		cmp	r3, #224
 1026 0048 14D8     		bhi	.L17
 1027              		.loc 1 156 0 discriminator 2
 1028 004a 384B     		ldr	r3, .L23+12
 1029 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1030 004e 012B     		cmp	r3, #1
 1031 0050 07D0     		beq	.L18
 1032              		.loc 1 156 0 discriminator 3
 1033 0052 364B     		ldr	r3, .L23+12
 1034 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1035 0056 012B     		cmp	r3, #1
 1036 0058 03D0     		beq	.L18
 1037              		.loc 1 156 0 discriminator 4
 1038 005a 344B     		ldr	r3, .L23+12
 1039 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1040 005e 012B     		cmp	r3, #1
 1041 0060 08D1     		bne	.L17
 1042              	.L18:
 157:.\main.c      ****         {
 158:.\main.c      ****             //movement_state = STOPPED;
 159:.\main.c      ****             brakeMotor();
 1043              		.loc 1 159 0 is_stmt 1
 1044 0062 FFF7FEFF 		bl	brakeMotor
 160:.\main.c      ****             movement_state = prev_movement_state;
 1045              		.loc 1 160 0
 1046 0066 324B     		ldr	r3, .L23+16
 1047 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1048 006a 2D4B     		ldr	r3, .L23
 1049 006c 1A70     		strb	r2, [r3]
 161:.\main.c      ****             Timer_2_Stop();
 1050              		.loc 1 161 0
 1051 006e FFF7FEFF 		bl	Timer_2_Stop
 1052              	.LBE2:
 1053 0072 51E0     		b	.L15
 1054              	.L17:
 1055 0074 50E0     		b	.L15
 1056              	.L16:
 162:.\main.c      ****         }
 163:.\main.c      ****     }
 164:.\main.c      ****     else if (movement_state == RTURN)
 1057              		.loc 1 164 0
 1058 0076 2A4B     		ldr	r3, .L23
 1059 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 007a 022B     		cmp	r3, #2
 1061 007c 33D1     		bne	.L20
 1062              	.LBB3:
 165:.\main.c      ****     {
 166:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1063              		.loc 1 166 0
 1064 007e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1065 0082 0346     		mov	r3, r0
 1066 0084 1A46     		mov	r2, r3
 1067 0086 274B     		ldr	r3, .L23+4
 1068 0088 1B88     		ldrh	r3, [r3]
 1069 008a 1BB2     		sxth	r3, r3
 1070 008c D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 23


 1071 008e 002B     		cmp	r3, #0
 1072 0090 B8BF     		it	lt
 1073 0092 5B42     		rsblt	r3, r3, #0
 1074 0094 244A     		ldr	r2, .L23+8
 1075 0096 82FB0312 		smull	r1, r2, r2, r3
 1076 009a 1112     		asrs	r1, r2, #8
 1077 009c DA17     		asrs	r2, r3, #31
 1078 009e 8A1A     		subs	r2, r1, r2
 1079 00a0 4FF45071 		mov	r1, #832
 1080 00a4 01FB02F2 		mul	r2, r1, r2
 1081 00a8 9A1A     		subs	r2, r3, r2
 1082 00aa 1346     		mov	r3, r2	@ movhi
 1083 00ac BB80     		strh	r3, [r7, #4]	@ movhi
 167:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1084              		.loc 1 167 0
 1085 00ae BB88     		ldrh	r3, [r7, #4]
 1086 00b0 B82B     		cmp	r3, #184
 1087 00b2 17D9     		bls	.L21
 1088              		.loc 1 167 0 is_stmt 0 discriminator 1
 1089 00b4 BB88     		ldrh	r3, [r7, #4]
 1090 00b6 E02B     		cmp	r3, #224
 1091 00b8 14D8     		bhi	.L21
 1092              		.loc 1 167 0 discriminator 2
 1093 00ba 1C4B     		ldr	r3, .L23+12
 1094 00bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1095 00be 012B     		cmp	r3, #1
 1096 00c0 07D0     		beq	.L22
 1097              		.loc 1 167 0 discriminator 3
 1098 00c2 1A4B     		ldr	r3, .L23+12
 1099 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1100 00c6 012B     		cmp	r3, #1
 1101 00c8 03D0     		beq	.L22
 1102              		.loc 1 167 0 discriminator 4
 1103 00ca 184B     		ldr	r3, .L23+12
 1104 00cc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1105 00ce 012B     		cmp	r3, #1
 1106 00d0 08D1     		bne	.L21
 1107              	.L22:
 168:.\main.c      ****         {
 169:.\main.c      ****             //movement_state = STOPPED;
 170:.\main.c      ****             brakeMotor();
 1108              		.loc 1 170 0 is_stmt 1
 1109 00d2 FFF7FEFF 		bl	brakeMotor
 171:.\main.c      ****             movement_state = prev_movement_state;
 1110              		.loc 1 171 0
 1111 00d6 164B     		ldr	r3, .L23+16
 1112 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1113 00da 114B     		ldr	r3, .L23
 1114 00dc 1A70     		strb	r2, [r3]
 172:.\main.c      ****             Timer_2_Stop();
 1115              		.loc 1 172 0
 1116 00de FFF7FEFF 		bl	Timer_2_Stop
 1117              	.LBE3:
 1118 00e2 19E0     		b	.L15
 1119              	.L21:
 1120 00e4 18E0     		b	.L15
 1121              	.L20:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 24


 173:.\main.c      ****         }
 174:.\main.c      ****     }
 175:.\main.c      ****     else if (movement_state == UTURN)
 1122              		.loc 1 175 0
 1123 00e6 0E4B     		ldr	r3, .L23
 1124 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 00ea 072B     		cmp	r3, #7
 1126 00ec 14D1     		bne	.L15
 176:.\main.c      ****     {
 177:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1127              		.loc 1 177 0
 1128 00ee FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1129 00f2 0346     		mov	r3, r0
 1130 00f4 1A46     		mov	r2, r3
 1131 00f6 0B4B     		ldr	r3, .L23+4
 1132 00f8 1B88     		ldrh	r3, [r3]
 1133 00fa 1BB2     		sxth	r3, r3
 1134 00fc D31A     		subs	r3, r2, r3
 1135 00fe 002B     		cmp	r3, #0
 1136 0100 B8BF     		it	lt
 1137 0102 5B42     		rsblt	r3, r3, #0
 1138 0104 CF2B     		cmp	r3, #207
 1139 0106 07DD     		ble	.L15
 178:.\main.c      ****         {
 179:.\main.c      ****             //movement_state = STOPPED;
 180:.\main.c      ****             brakeMotor();
 1140              		.loc 1 180 0
 1141 0108 FFF7FEFF 		bl	brakeMotor
 181:.\main.c      ****             movement_state = prev_movement_state;
 1142              		.loc 1 181 0
 1143 010c 084B     		ldr	r3, .L23+16
 1144 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1145 0110 034B     		ldr	r3, .L23
 1146 0112 1A70     		strb	r2, [r3]
 182:.\main.c      ****             Timer_2_Stop();
 1147              		.loc 1 182 0
 1148 0114 FFF7FEFF 		bl	Timer_2_Stop
 1149              	.L15:
 183:.\main.c      ****         }
 184:.\main.c      ****     }
 185:.\main.c      **** }
 1150              		.loc 1 185 0
 1151 0118 0837     		adds	r7, r7, #8
 1152              		.cfi_def_cfa_offset 8
 1153 011a BD46     		mov	sp, r7
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 011c 80BD     		pop	{r7, pc}
 1157              	.L24:
 1158 011e 00BF     		.align	2
 1159              	.L23:
 1160 0120 00000000 		.word	movement_state
 1161 0124 00000000 		.word	start_turn_count
 1162 0128 4FECC44E 		.word	1321528399
 1163 012c 00000000 		.word	frontSensors
 1164 0130 00000000 		.word	prev_movement_state
 1165              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 25


 1166              	.LFE66:
 1167              		.size	isr_turn_timer, .-isr_turn_timer
 1168              		.section	.text.Stop_on_line,"ax",%progbits
 1169              		.align	2
 1170              		.global	Stop_on_line
 1171              		.thumb
 1172              		.thumb_func
 1173              		.type	Stop_on_line, %function
 1174              	Stop_on_line:
 1175              	.LFB67:
 186:.\main.c      **** 
 187:.\main.c      **** 
 188:.\main.c      **** CY_ISR (Stop_on_line)
 189:.\main.c      **** {
 1176              		.loc 1 189 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 1, uses_anonymous_args = 0
 1180              		@ link register save eliminated.
 1181 0000 80B4     		push	{r7}
 1182              		.cfi_def_cfa_offset 4
 1183              		.cfi_offset 7, -4
 1184 0002 00AF     		add	r7, sp, #0
 1185              		.cfi_def_cfa_register 7
 190:.\main.c      ****     movement_state = STOPPED;
 1186              		.loc 1 190 0
 1187 0004 054B     		ldr	r3, .L27
 1188 0006 0322     		movs	r2, #3
 1189 0008 1A70     		strb	r2, [r3]
 191:.\main.c      ****     if(movement_state != DRIVE) return;
 1190              		.loc 1 191 0
 1191 000a 044B     		ldr	r3, .L27
 1192 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 000e 002B     		cmp	r3, #0
 1194 0010 00D0     		beq	.L25
 1195 0012 00BF     		nop
 1196              	.L25:
 192:.\main.c      ****     //initTurnLeft();
 193:.\main.c      **** }
 1197              		.loc 1 193 0
 1198 0014 BD46     		mov	sp, r7
 1199              		.cfi_def_cfa_register 13
 1200              		@ sp needed
 1201 0016 5DF8047B 		ldr	r7, [sp], #4
 1202              		.cfi_restore 7
 1203              		.cfi_def_cfa_offset 0
 1204 001a 7047     		bx	lr
 1205              	.L28:
 1206              		.align	2
 1207              	.L27:
 1208 001c 00000000 		.word	movement_state
 1209              		.cfi_endproc
 1210              	.LFE67:
 1211              		.size	Stop_on_line, .-Stop_on_line
 1212              		.section	.rodata
 1213              		.align	2
 1214              	.LC0:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 26


 1215 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1215      74696E67 
 1215      20726F62 
 1215      6F74210D 
 1215      0A00
 1216              		.section	.text.button,"ax",%progbits
 1217              		.align	2
 1218              		.global	button
 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	button, %function
 1222              	button:
 1223              	.LFB68:
 194:.\main.c      **** 
 195:.\main.c      **** CY_ISR (button)
 196:.\main.c      **** {
 1224              		.loc 1 196 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 1, uses_anonymous_args = 0
 1228 0000 80B5     		push	{r7, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 197:.\main.c      ****     if(BT_ENABLED)
 1234              		.loc 1 197 0
 1235 0004 054B     		ldr	r3, .L31
 1236 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 0008 002B     		cmp	r3, #0
 1238 000a 02D0     		beq	.L30
 198:.\main.c      ****     {
 199:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1239              		.loc 1 199 0
 1240 000c 0448     		ldr	r0, .L31+4
 1241 000e FFF7FEFF 		bl	UART_PutString
 1242              	.L30:
 200:.\main.c      ****     }
 201:.\main.c      ****     movement_state = DRIVE;
 1243              		.loc 1 201 0
 1244 0012 044B     		ldr	r3, .L31+8
 1245 0014 0022     		movs	r2, #0
 1246 0016 1A70     		strb	r2, [r3]
 202:.\main.c      **** }
 1247              		.loc 1 202 0
 1248 0018 80BD     		pop	{r7, pc}
 1249              	.L32:
 1250 001a 00BF     		.align	2
 1251              	.L31:
 1252 001c 00000000 		.word	BT_ENABLED
 1253 0020 00000000 		.word	.LC0
 1254 0024 00000000 		.word	movement_state
 1255              		.cfi_endproc
 1256              	.LFE68:
 1257              		.size	button, .-button
 1258              		.section	.text.isr_adcTimer,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 27


 1259              		.align	2
 1260              		.global	isr_adcTimer
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	isr_adcTimer, %function
 1264              	isr_adcTimer:
 1265              	.LFB69:
 203:.\main.c      **** 
 204:.\main.c      **** CY_ISR(isr_adcTimer)
 205:.\main.c      **** {
 1266              		.loc 1 205 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 206:.\main.c      ****     ADC_StartConvert();
 1276              		.loc 1 206 0
 1277 0004 FFF7FEFF 		bl	ADC_StartConvert
 207:.\main.c      **** }
 1278              		.loc 1 207 0
 1279 0008 80BD     		pop	{r7, pc}
 1280              		.cfi_endproc
 1281              	.LFE69:
 1282              		.size	isr_adcTimer, .-isr_adcTimer
 1283 000a 00BF     		.section	.rodata
 1284 0012 0000     		.align	2
 1285              	.LC1:
 1286 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1286      7A6F6E65 
 1286      206C6566 
 1286      740D0A00 
 1287              		.section	.text.isr_deadzone,"ax",%progbits
 1288              		.align	2
 1289              		.global	isr_deadzone
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	isr_deadzone, %function
 1293              	isr_deadzone:
 1294              	.LFB70:
 208:.\main.c      **** 
 209:.\main.c      **** CY_ISR(isr_deadzone)
 210:.\main.c      **** {
 1295              		.loc 1 210 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 80B5     		push	{r7, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 0002 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 28


 211:.\main.c      ****     sensorsDisabled = 0;
 1305              		.loc 1 211 0
 1306 0004 054B     		ldr	r3, .L35
 1307 0006 0022     		movs	r2, #0
 1308 0008 1A60     		str	r2, [r3]
 212:.\main.c      ****     deadzone = 0;
 1309              		.loc 1 212 0
 1310 000a 054B     		ldr	r3, .L35+4
 1311 000c 0022     		movs	r2, #0
 1312 000e 1A70     		strb	r2, [r3]
 213:.\main.c      ****     Timer_Deadzone_Stop();
 1313              		.loc 1 213 0
 1314 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 214:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1315              		.loc 1 214 0
 1316 0014 0348     		ldr	r0, .L35+8
 1317 0016 FFF7FEFF 		bl	UART_PutString
 215:.\main.c      **** }
 1318              		.loc 1 215 0
 1319 001a 80BD     		pop	{r7, pc}
 1320              	.L36:
 1321              		.align	2
 1322              	.L35:
 1323 001c 00000000 		.word	sensorsDisabled
 1324 0020 00000000 		.word	deadzone
 1325 0024 14000000 		.word	.LC1
 1326              		.cfi_endproc
 1327              	.LFE70:
 1328              		.size	isr_deadzone, .-isr_deadzone
 1329              		.section	.rodata
 1330              		.align	2
 1331              	.LC2:
 1332 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1332      20747261 
 1332      76656C3A 
 1332      2025640D 
 1332      0A00
 1333 0036 0000     		.align	2
 1334              	.LC3:
 1335 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1335      67657265 
 1335      64206174 
 1335      20696E74 
 1335      65727365 
 1336 0055 000000   		.align	2
 1337              	.LC4:
 1338 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1338      7A6F6E65 
 1338      20656E74 
 1338      65726564 
 1338      210D0A00 
 1339              		.align	2
 1340              	.LC5:
 1341 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1341      65742064 
 1341      6973743A 
 1341      2025640D 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 29


 1341      0A00
 1342 007e 0000     		.align	2
 1343              	.LC6:
 1344 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1344      67657265 
 1344      64206174 
 1344      20776869 
 1344      7465206C 
 1345              		.align	2
 1346              	.LC7:
 1347 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1347      67657265 
 1347      64206174 
 1347      20717561 
 1347      6420636F 
 1348              		.section	.text.main,"ax",%progbits
 1349              		.align	2
 1350              		.global	main
 1351              		.thumb
 1352              		.thumb_func
 1353              		.type	main, %function
 1354              	main:
 1355              	.LFB71:
 216:.\main.c      **** 
 217:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 218:.\main.c      **** 
 219:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 220:.\main.c      **** int main()
 221:.\main.c      **** {  
 1356              		.loc 1 221 0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 56
 1359              		@ frame_needed = 1, uses_anonymous_args = 0
 1360 0000 80B5     		push	{r7, lr}
 1361              		.cfi_def_cfa_offset 8
 1362              		.cfi_offset 7, -8
 1363              		.cfi_offset 14, -4
 1364 0002 8EB0     		sub	sp, sp, #56
 1365              		.cfi_def_cfa_offset 64
 1366 0004 00AF     		add	r7, sp, #0
 1367              		.cfi_def_cfa_register 7
 222:.\main.c      **** 
 223:.\main.c      **** // ----- INITIALIZATIONS ----------
 224:.\main.c      ****     CYGlobalIntEnable;
 1368              		.loc 1 224 0
 1369              	@ 224 ".\main.c" 1
 1370 0006 62B6     		CPSIE   i
 1371              	@ 0 "" 2
 225:.\main.c      ****     if(ENABLE_PWM)
 226:.\main.c      ****     {
 227:.\main.c      ****         PWM_1_Start();// starting the pwm
 1372              		.loc 1 227 0
 1373              		.thumb
 1374 0008 FFF7FEFF 		bl	PWM_1_Start
 228:.\main.c      ****         PWM_2_Start();// starting the pwm
 1375              		.loc 1 228 0
 1376 000c FFF7FEFF 		bl	PWM_2_Start
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 30


 229:.\main.c      ****     }
 230:.\main.c      ****     
 231:.\main.c      ****     if(ENABLE_ADC)
 232:.\main.c      ****     {
 233:.\main.c      ****         ADC_Start();
 234:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 235:.\main.c      ****         //ADC_StartConvert();
 236:.\main.c      ****         
 237:.\main.c      ****         //start the ADC timer for software trigger mode
 238:.\main.c      ****         Timer_TS_Start();
 239:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 240:.\main.c      ****     }
 241:.\main.c      ****     
 242:.\main.c      ****     if (ENABLE_QUAD)
 243:.\main.c      ****     {
 244:.\main.c      ****         QuadDec_M1_Start();
 1377              		.loc 1 244 0
 1378 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 245:.\main.c      ****         QuadDec_M2_Start();
 1379              		.loc 1 245 0
 1380 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 246:.\main.c      ****         
 247:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1381              		.loc 1 247 0
 1382 0018 AD48     		ldr	r0, .L98
 1383 001a FFF7FEFF 		bl	isr_quad1_StartEx
 248:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1384              		.loc 1 248 0
 1385 001e AD48     		ldr	r0, .L98+4
 1386 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 249:.\main.c      ****         
 250:.\main.c      ****         Timer_1_Start();
 1387              		.loc 1 250 0
 1388 0024 FFF7FEFF 		bl	Timer_1_Start
 251:.\main.c      ****     }
 252:.\main.c      ****     
 253:.\main.c      ****     if(ENABLE_STOP){
 254:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 255:.\main.c      ****         
 256:.\main.c      ****     }
 257:.\main.c      ****     isr_button_StartEx(button);
 1389              		.loc 1 257 0
 1390 0028 AB48     		ldr	r0, .L98+8
 1391 002a FFF7FEFF 		bl	isr_button_StartEx
 258:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1392              		.loc 1 258 0
 1393 002e AB48     		ldr	r0, .L98+12
 1394 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 259:.\main.c      **** 
 260:.\main.c      ****     // ------USB SETUP ----------------    
 261:.\main.c      ****     if (USE_USB){    
 262:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1395              		.loc 1 262 0
 1396 0034 0020     		movs	r0, #0
 1397 0036 0121     		movs	r1, #1
 1398 0038 FFF7FEFF 		bl	USBUART_Start
 263:.\main.c      ****         if (USBUART_GetConfiguration())
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 31


 1399              		.loc 1 263 0
 1400 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1401 0040 0346     		mov	r3, r0
 1402 0042 002B     		cmp	r3, #0
 1403 0044 01D0     		beq	.L38
 264:.\main.c      ****             {
 265:.\main.c      ****                  USBUART_CDC_Init();
 1404              		.loc 1 265 0
 1405 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1406              	.L38:
 266:.\main.c      ****             }
 267:.\main.c      ****     }
 268:.\main.c      ****     
 269:.\main.c      ****     if(BIN_ENABLED){
 1407              		.loc 1 269 0
 1408 004a A54B     		ldr	r3, .L98+16
 1409 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1410 004e 002B     		cmp	r3, #0
 1411 0050 01D0     		beq	.L39
 270:.\main.c      ****         changeToRF();
 1412              		.loc 1 270 0
 1413 0052 FFF7FEFF 		bl	changeToRF
 1414              	.L39:
 271:.\main.c      ****     }
 272:.\main.c      ****     
 273:.\main.c      ****     if(BT_ENABLED){
 1415              		.loc 1 273 0
 1416 0056 A34B     		ldr	r3, .L98+20
 1417 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 005a 002B     		cmp	r3, #0
 1419 005c 01D0     		beq	.L40
 274:.\main.c      ****         changeToBT();
 1420              		.loc 1 274 0
 1421 005e FFF7FEFF 		bl	changeToBT
 1422              	.L40:
 275:.\main.c      ****     }
 276:.\main.c      ****     
 277:.\main.c      ****     uint16 actionDebounce = 0;
 1423              		.loc 1 277 0
 1424 0062 0023     		movs	r3, #0
 1425 0064 FB86     		strh	r3, [r7, #54]	@ movhi
 1426              	.L95:
 278:.\main.c      ****     
 279:.\main.c      ****     //usbPutString("Started");
 280:.\main.c      ****     for(;;)
 281:.\main.c      ****     {
 282:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 283:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1427              		.loc 1 283 0
 1428 0066 FFF7FEFF 		bl	Quad_Dec_response
 284:.\main.c      ****         if(BIN_ENABLED == 1)
 1429              		.loc 1 284 0
 1430 006a 9D4B     		ldr	r3, .L98+16
 1431 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 006e 012B     		cmp	r3, #1
 1433 0070 03D1     		bne	.L41
 285:.\main.c      ****         {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 32


 286:.\main.c      ****             handle_rx_binary();
 1434              		.loc 1 286 0
 1435 0072 FFF7FEFF 		bl	handle_rx_binary
 287:.\main.c      ****             print_RF();
 1436              		.loc 1 287 0
 1437 0076 FFF7FEFF 		bl	print_RF
 1438              	.L41:
 288:.\main.c      ****         }
 289:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 290:.\main.c      ****        
 291:.\main.c      ****         readFrontSensors(frontSensors);
 1439              		.loc 1 291 0
 1440 007a 9B48     		ldr	r0, .L98+24
 1441 007c FFF7FEFF 		bl	readFrontSensors
 292:.\main.c      ****         
 293:.\main.c      ****         switch(track_mode)
 1442              		.loc 1 293 0
 1443 0080 9A4B     		ldr	r3, .L98+28
 1444 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1445 0084 072B     		cmp	r3, #7
 1446 0086 00F2E682 		bhi	.L42
 1447 008a 01A2     		adr	r2, .L44
 1448 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1449              		.p2align 2
 1450              	.L44:
 1451 0090 57060000 		.word	.L42+1
 1452 0094 57060000 		.word	.L42+1
 1453 0098 57060000 		.word	.L42+1
 1454 009c B1000000 		.word	.L47+1
 1455 00a0 57060000 		.word	.L42+1
 1456 00a4 F5000000 		.word	.L49+1
 1457 00a8 1B010000 		.word	.L50+1
 1458 00ac 1B010000 		.word	.L50+1
 1459              		.p2align 1
 1460              	.L47:
 294:.\main.c      ****         {
 295:.\main.c      ****             case SQUARE_TRACK:
 296:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1461              		.loc 1 296 0
 1462 00b0 8F4B     		ldr	r3, .L98+32
 1463 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1464 00b4 012B     		cmp	r3, #1
 1465 00b6 1CD0     		beq	.L51
 1466              		.loc 1 296 0 is_stmt 0 discriminator 1
 1467 00b8 8D4B     		ldr	r3, .L98+32
 1468 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1469 00bc 022B     		cmp	r3, #2
 1470 00be 18D0     		beq	.L51
 297:.\main.c      ****                 {
 298:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1471              		.loc 1 298 0 is_stmt 1
 1472 00c0 894B     		ldr	r3, .L98+24
 1473 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1474 00c4 012B     		cmp	r3, #1
 1475 00c6 06D1     		bne	.L52
 1476              		.loc 1 298 0 is_stmt 0 discriminator 1
 1477 00c8 874B     		ldr	r3, .L98+24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 33


 1478 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1479 00cc 012B     		cmp	r3, #1
 1480 00ce 02D1     		bne	.L52
 299:.\main.c      ****                         initTurnLeft();
 1481              		.loc 1 299 0 is_stmt 1
 1482 00d0 FFF7FEFF 		bl	initTurnLeft
 1483 00d4 0DE0     		b	.L51
 1484              	.L52:
 300:.\main.c      ****                     }
 301:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1485              		.loc 1 301 0
 1486 00d6 844B     		ldr	r3, .L98+24
 1487 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1488 00da 012B     		cmp	r3, #1
 1489 00dc 06D1     		bne	.L53
 1490              		.loc 1 301 0 is_stmt 0 discriminator 1
 1491 00de 824B     		ldr	r3, .L98+24
 1492 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1493 00e2 012B     		cmp	r3, #1
 1494 00e4 02D1     		bne	.L53
 302:.\main.c      ****                     {
 303:.\main.c      ****                         initTurnRight();
 1495              		.loc 1 303 0 is_stmt 1
 1496 00e6 FFF7FEFF 		bl	initTurnRight
 1497 00ea 02E0     		b	.L51
 1498              	.L53:
 304:.\main.c      ****                     }
 305:.\main.c      ****                     else inittrackLineZ();
 1499              		.loc 1 305 0
 1500 00ec FFF7FEFF 		bl	inittrackLineZ
 306:.\main.c      ****                 }
 307:.\main.c      ****             break;
 1501              		.loc 1 307 0
 1502 00f0 B1E2     		b	.L42
 1503              	.L51:
 1504 00f2 B0E2     		b	.L42
 1505              	.L49:
 308:.\main.c      ****             case NO_TRACK:
 309:.\main.c      ****             break;
 310:.\main.c      ****             case CURVE_TRACK:
 311:.\main.c      ****             break;
 312:.\main.c      ****             case U_TRACK:
 313:.\main.c      ****             break;
 314:.\main.c      ****             case QUAD_STOP:
 315:.\main.c      ****             break;
 316:.\main.c      ****             case RF_STOP:
 317:.\main.c      ****                 if(initial_pos_valid == 1)
 1506              		.loc 1 317 0
 1507 00f4 7F4B     		ldr	r3, .L98+36
 1508 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 00f8 012B     		cmp	r3, #1
 1510 00fa 0DD1     		bne	.L54
 318:.\main.c      ****                 {
 319:.\main.c      ****                     //changeToBT();
 320:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 321:.\main.c      ****                     //changeToRF();
 322:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 34


 1511              		.loc 1 322 0
 1512 00fc 7E4B     		ldr	r3, .L98+40
 1513 00fe 5A88     		ldrh	r2, [r3, #2]
 1514 0100 7E4B     		ldr	r3, .L98+44
 1515 0102 1A80     		strh	r2, [r3]	@ movhi
 323:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1516              		.loc 1 323 0
 1517 0104 7C4B     		ldr	r3, .L98+40
 1518 0106 9A88     		ldrh	r2, [r3, #4]
 1519 0108 7D4B     		ldr	r3, .L98+48
 1520 010a 1A80     		strh	r2, [r3]	@ movhi
 324:.\main.c      ****                     initial_pos_valid = 2;
 1521              		.loc 1 324 0
 1522 010c 794B     		ldr	r3, .L98+36
 1523 010e 0222     		movs	r2, #2
 1524 0110 1A70     		strb	r2, [r3]
 325:.\main.c      ****                     initForward();
 1525              		.loc 1 325 0
 1526 0112 FFF7FEFF 		bl	initForward
 326:.\main.c      ****                 }
 327:.\main.c      ****             break;
 1527              		.loc 1 327 0
 1528 0116 9EE2     		b	.L42
 1529              	.L54:
 1530 0118 9DE2     		b	.L42
 1531              	.L50:
 328:.\main.c      ****             case MAP_TRAVERSE:
 329:.\main.c      ****             case DEST_TEST:
 330:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1532              		.loc 1 330 0
 1533 011a 754B     		ldr	r3, .L98+32
 1534 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1535 011e 012B     		cmp	r3, #1
 1536 0120 00F09882 		beq	.L55
 1537              		.loc 1 330 0 is_stmt 0 discriminator 1
 1538 0124 724B     		ldr	r3, .L98+32
 1539 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1540 0128 022B     		cmp	r3, #2
 1541 012a 00F09382 		beq	.L55
 1542              		.loc 1 330 0 discriminator 2
 1543 012e 704B     		ldr	r3, .L98+32
 1544 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1545 0132 072B     		cmp	r3, #7
 1546 0134 00F08E82 		beq	.L55
 1547              	.LBB4:
 331:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 332:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1548              		.loc 1 332 0 is_stmt 1
 1549 0138 724B     		ldr	r3, .L98+52
 1550 013a 1B88     		ldrh	r3, [r3]
 1551 013c 1A46     		mov	r2, r3
 1552 013e 724B     		ldr	r3, .L98+56
 1553 0140 9B5C     		ldrb	r3, [r3, r2]
 1554 0142 87F83530 		strb	r3, [r7, #53]
 333:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1555              		.loc 1 333 0
 1556 0146 684B     		ldr	r3, .L98+24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 35


 1557 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1558 014a 012B     		cmp	r3, #1
 1559 014c 03D1     		bne	.L56
 1560              		.loc 1 333 0 is_stmt 0 discriminator 1
 1561 014e 664B     		ldr	r3, .L98+24
 1562 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1563 0152 012B     		cmp	r3, #1
 1564 0154 09D0     		beq	.L57
 1565              	.L56:
 1566              		.loc 1 333 0 discriminator 3
 1567 0156 644B     		ldr	r3, .L98+24
 1568 0158 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1569 015a 012B     		cmp	r3, #1
 1570 015c 40F01281 		bne	.L58
 1571              		.loc 1 333 0 discriminator 4
 1572 0160 614B     		ldr	r3, .L98+24
 1573 0162 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1574 0164 012B     		cmp	r3, #1
 1575 0166 40F00D81 		bne	.L58
 1576              	.L57:
 334:.\main.c      ****                         if(sensorsDisabled == 0)
 1577              		.loc 1 334 0 is_stmt 1
 1578 016a 684B     		ldr	r3, .L98+60
 1579 016c 1B68     		ldr	r3, [r3]
 1580 016e 002B     		cmp	r3, #0
 1581 0170 40F00781 		bne	.L59
 335:.\main.c      ****                         {
 336:.\main.c      ****                             actionDebounce++;
 1582              		.loc 1 336 0
 1583 0174 FB8E     		ldrh	r3, [r7, #54]
 1584 0176 0133     		adds	r3, r3, #1
 1585 0178 FB86     		strh	r3, [r7, #54]	@ movhi
 337:.\main.c      ****                             if(actionDebounce >= 500)
 1586              		.loc 1 337 0
 1587 017a FB8E     		ldrh	r3, [r7, #54]
 1588 017c B3F5FA7F 		cmp	r3, #500
 1589 0180 C0F0FF80 		bcc	.L59
 1590              	.LBB5:
 338:.\main.c      ****                             {
 339:.\main.c      ****                                 char mes[16];
 340:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1591              		.loc 1 340 0
 1592 0184 624B     		ldr	r3, .L98+64
 1593 0186 1B88     		ldrh	r3, [r3]
 1594 0188 1BB2     		sxth	r3, r3
 1595 018a 07F12002 		add	r2, r7, #32
 1596 018e 1046     		mov	r0, r2
 1597 0190 6049     		ldr	r1, .L98+68
 1598 0192 1A46     		mov	r2, r3
 1599 0194 FFF7FEFF 		bl	sprintf
 341:.\main.c      ****                                  UART_PutString(mes);
 1600              		.loc 1 341 0
 1601 0198 07F12003 		add	r3, r7, #32
 1602 019c 1846     		mov	r0, r3
 1603 019e FFF7FEFF 		bl	UART_PutString
 342:.\main.c      ****                             if(reached_target == 1)
 1604              		.loc 1 342 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 36


 1605 01a2 5D4B     		ldr	r3, .L98+72
 1606 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1607 01a6 012B     		cmp	r3, #1
 1608 01a8 40F0EB80 		bne	.L59
 1609              	.LBB6:
 343:.\main.c      ****                             {
 344:.\main.c      ****                                 if(nextStep == 'D')
 1610              		.loc 1 344 0
 1611 01ac 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1612 01b0 442B     		cmp	r3, #68
 1613 01b2 0CD1     		bne	.L61
 345:.\main.c      ****                                 {
 346:.\main.c      ****                                     instructionCount += 2;
 1614              		.loc 1 346 0
 1615 01b4 534B     		ldr	r3, .L98+52
 1616 01b6 1B88     		ldrh	r3, [r3]
 1617 01b8 0233     		adds	r3, r3, #2
 1618 01ba 9AB2     		uxth	r2, r3
 1619 01bc 514B     		ldr	r3, .L98+52
 1620 01be 1A80     		strh	r2, [r3]	@ movhi
 347:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1621              		.loc 1 347 0
 1622 01c0 504B     		ldr	r3, .L98+52
 1623 01c2 1B88     		ldrh	r3, [r3]
 1624 01c4 1A46     		mov	r2, r3
 1625 01c6 504B     		ldr	r3, .L98+56
 1626 01c8 9B5C     		ldrb	r3, [r3, r2]
 1627 01ca 87F83530 		strb	r3, [r7, #53]
 1628              	.L61:
 348:.\main.c      ****                                 }
 349:.\main.c      ****                                 
 350:.\main.c      ****                                 sensorsDisabled = 1;
 1629              		.loc 1 350 0
 1630 01ce 4F4B     		ldr	r3, .L98+60
 1631 01d0 0122     		movs	r2, #1
 1632 01d2 1A60     		str	r2, [r3]
 351:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1633              		.loc 1 351 0
 1634 01d4 5148     		ldr	r0, .L98+76
 1635 01d6 FFF7FEFF 		bl	UART_PutString
 352:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1636              		.loc 1 352 0
 1637 01da 5148     		ldr	r0, .L98+80
 1638 01dc FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****                                 deadzone = 1;
 1639              		.loc 1 353 0
 1640 01e0 504B     		ldr	r3, .L98+84
 1641 01e2 0122     		movs	r2, #1
 1642 01e4 1A70     		strb	r2, [r3]
 354:.\main.c      ****                                 
 355:.\main.c      ****                                 accum_dist = 0;
 1643              		.loc 1 355 0
 1644 01e6 4A4B     		ldr	r3, .L98+64
 1645 01e8 0022     		movs	r2, #0
 1646 01ea 1A80     		strh	r2, [r3]	@ movhi
 356:.\main.c      ****                                 uint8 nextStepDist;
 357:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 37


 1647              		.loc 1 357 0
 1648 01ec 454B     		ldr	r3, .L98+52
 1649 01ee 1B88     		ldrh	r3, [r3]
 1650 01f0 1A46     		mov	r2, r3
 1651 01f2 4D4B     		ldr	r3, .L98+88
 1652 01f4 1B88     		ldrh	r3, [r3]
 1653 01f6 053B     		subs	r3, r3, #5
 1654 01f8 9A42     		cmp	r2, r3
 1655 01fa 07DC     		bgt	.L62
 1656              		.loc 1 357 0 is_stmt 0 discriminator 1
 1657 01fc 414B     		ldr	r3, .L98+52
 1658 01fe 1B88     		ldrh	r3, [r3]
 1659 0200 0333     		adds	r3, r3, #3
 1660 0202 414A     		ldr	r2, .L98+56
 1661 0204 D35C     		ldrb	r3, [r2, r3]
 1662 0206 87F83430 		strb	r3, [r7, #52]
 1663 020a 02E0     		b	.L63
 1664              	.L62:
 358:.\main.c      ****                                 else nextStepDist = 0;
 1665              		.loc 1 358 0 is_stmt 1
 1666 020c 0023     		movs	r3, #0
 1667 020e 87F83430 		strb	r3, [r7, #52]
 1668              	.L63:
 359:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1669              		.loc 1 359 0
 1670 0212 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1671 0216 9BB2     		uxth	r3, r3
 1672 0218 1A46     		mov	r2, r3	@ movhi
 1673 021a 9200     		lsls	r2, r2, #2
 1674 021c 1344     		add	r3, r3, r2
 1675 021e 1A46     		mov	r2, r3	@ movhi
 1676 0220 D200     		lsls	r2, r2, #3
 1677 0222 D31A     		subs	r3, r2, r3
 1678 0224 9B00     		lsls	r3, r3, #2
 1679 0226 9BB2     		uxth	r3, r3
 1680 0228 9AB2     		uxth	r2, r3
 1681 022a 404B     		ldr	r3, .L98+92
 1682 022c 1A80     		strh	r2, [r3]	@ movhi
 360:.\main.c      ****                                 
 361:.\main.c      ****                                 
 362:.\main.c      ****                                 
 363:.\main.c      ****                                 switch(nextStep)
 1683              		.loc 1 363 0
 1684 022e 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1685 0232 4C3B     		subs	r3, r3, #76
 1686 0234 092B     		cmp	r3, #9
 1687 0236 7DD8     		bhi	.L96
 1688 0238 01A2     		adr	r2, .L66
 1689 023a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1690 023e 00BF     		.p2align 2
 1691              	.L66:
 1692 0240 77020000 		.word	.L65+1
 1693 0244 35030000 		.word	.L96+1
 1694 0248 35030000 		.word	.L96+1
 1695 024c 35030000 		.word	.L96+1
 1696 0250 35030000 		.word	.L96+1
 1697 0254 35030000 		.word	.L96+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 38


 1698 0258 95020000 		.word	.L67+1
 1699 025c 69020000 		.word	.L68+1
 1700 0260 35030000 		.word	.L96+1
 1701 0264 B3020000 		.word	.L69+1
 1702              		.p2align 1
 1703              	.L68:
 364:.\main.c      ****                                 {
 365:.\main.c      ****                                     case 'S':
 366:.\main.c      ****                                         inittrackLineZ();
 1704              		.loc 1 366 0
 1705 0268 FFF7FEFF 		bl	inittrackLineZ
 367:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1706              		.loc 1 367 0
 1707 026c 42F21070 		movw	r0, #10000
 1708 0270 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 368:.\main.c      ****                                         //do nothing
 369:.\main.c      ****                                     break;
 1709              		.loc 1 369 0
 1710 0274 5FE0     		b	.L70
 1711              	.L65:
 370:.\main.c      ****                                     case 'L':
 371:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 372:.\main.c      ****                                         initTurnLeft();
 1712              		.loc 1 372 0
 1713 0276 FFF7FEFF 		bl	initTurnLeft
 373:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1714              		.loc 1 373 0
 1715 027a 4CF25030 		movw	r0, #50000
 1716 027e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 374:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1717              		.loc 1 374 0
 1718 0282 2A4B     		ldr	r3, .L98+92
 1719 0284 1B88     		ldrh	r3, [r3]
 1720 0286 9BB2     		uxth	r3, r3
 1721 0288 863B     		subs	r3, r3, #134
 1722 028a 9BB2     		uxth	r3, r3
 1723 028c 9AB2     		uxth	r2, r3
 1724 028e 274B     		ldr	r3, .L98+92
 1725 0290 1A80     		strh	r2, [r3]	@ movhi
 375:.\main.c      ****                                     break;
 1726              		.loc 1 375 0
 1727 0292 50E0     		b	.L70
 1728              	.L67:
 376:.\main.c      ****                                     case 'R':
 377:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 378:.\main.c      ****                                         initTurnRight();
 1729              		.loc 1 378 0
 1730 0294 FFF7FEFF 		bl	initTurnRight
 379:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1731              		.loc 1 379 0
 1732 0298 244B     		ldr	r3, .L98+92
 1733 029a 1B88     		ldrh	r3, [r3]
 1734 029c 9BB2     		uxth	r3, r3
 1735 029e 863B     		subs	r3, r3, #134
 1736 02a0 9BB2     		uxth	r3, r3
 1737 02a2 9AB2     		uxth	r2, r3
 1738 02a4 214B     		ldr	r3, .L98+92
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 39


 1739 02a6 1A80     		strh	r2, [r3]	@ movhi
 380:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 381:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1740              		.loc 1 381 0
 1741 02a8 4CF25030 		movw	r0, #50000
 1742 02ac FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 382:.\main.c      ****                                     break;
 1743              		.loc 1 382 0
 1744 02b0 41E0     		b	.L70
 1745              	.L69:
 383:.\main.c      ****                                     case 'U':
 384:.\main.c      ****                                         // Direction not tracked any more
 385:.\main.c      ****                                         initTurnU();
 1746              		.loc 1 385 0
 1747 02b2 FFF7FEFF 		bl	initTurnU
 386:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1748              		.loc 1 386 0
 1749 02b6 1E48     		ldr	r0, .L98+96
 1750 02b8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 387:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 1751              		.loc 1 387 0
 1752 02bc 1B4B     		ldr	r3, .L98+92
 1753 02be 1B88     		ldrh	r3, [r3]
 1754 02c0 9BB2     		uxth	r3, r3
 1755 02c2 5D3B     		subs	r3, r3, #93
 1756 02c4 9BB2     		uxth	r3, r3
 1757 02c6 9AB2     		uxth	r2, r3
 1758 02c8 184B     		ldr	r3, .L98+92
 1759 02ca 1A80     		strh	r2, [r3]	@ movhi
 388:.\main.c      ****                                         //target_distance_quad += 208;
 389:.\main.c      ****                                     break;
 1760              		.loc 1 389 0
 1761 02cc 33E0     		b	.L70
 1762              	.L99:
 1763 02ce 00BF     		.align	2
 1764              	.L98:
 1765 02d0 00000000 		.word	isr_quad1
 1766 02d4 00000000 		.word	isr_turn_timer
 1767 02d8 00000000 		.word	button
 1768 02dc 00000000 		.word	isr_deadzone
 1769 02e0 00000000 		.word	BIN_ENABLED
 1770 02e4 00000000 		.word	BT_ENABLED
 1771 02e8 00000000 		.word	frontSensors
 1772 02ec 00000000 		.word	track_mode
 1773 02f0 00000000 		.word	movement_state
 1774 02f4 00000000 		.word	initial_pos_valid
 1775 02f8 00000000 		.word	system_state
 1776 02fc 00000000 		.word	initial_x_pos
 1777 0300 00000000 		.word	initial_y_pos
 1778 0304 00000000 		.word	instructionCount
 1779 0308 00000000 		.word	instructions
 1780 030c 00000000 		.word	sensorsDisabled
 1781 0310 00000000 		.word	accum_dist
 1782 0314 24000000 		.word	.LC2
 1783 0318 00000000 		.word	reached_target
 1784 031c 38000000 		.word	.LC3
 1785 0320 58000000 		.word	.LC4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 40


 1786 0324 00000000 		.word	deadzone
 1787 0328 00000000 		.word	instructionLength
 1788 032c 00000000 		.word	target_distance_quad
 1789 0330 905F0100 		.word	90000
 1790              	.L96:
 390:.\main.c      ****                                     
 391:.\main.c      ****                                     default:
 392:.\main.c      ****                                         //do nothing
 393:.\main.c      ****                                         break;
 1791              		.loc 1 393 0
 1792 0334 00BF     		nop
 1793              	.L70:
 394:.\main.c      ****                                 }
 395:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1794              		.loc 1 395 0
 1795 0336 8E4B     		ldr	r3, .L100
 1796 0338 1B88     		ldrh	r3, [r3]
 1797 033a 1BB2     		sxth	r3, r3
 1798 033c 002B     		cmp	r3, #0
 1799 033e 02DA     		bge	.L71
 1800              		.loc 1 395 0 is_stmt 0 discriminator 1
 1801 0340 8B4B     		ldr	r3, .L100
 1802 0342 0022     		movs	r2, #0
 1803 0344 1A80     		strh	r2, [r3]	@ movhi
 1804              	.L71:
 396:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1805              		.loc 1 396 0 is_stmt 1
 1806 0346 8A4B     		ldr	r3, .L100
 1807 0348 1B88     		ldrh	r3, [r3]
 1808 034a 1BB2     		sxth	r3, r3
 1809 034c 07F12002 		add	r2, r7, #32
 1810 0350 1046     		mov	r0, r2
 1811 0352 8849     		ldr	r1, .L100+4
 1812 0354 1A46     		mov	r2, r3
 1813 0356 FFF7FEFF 		bl	sprintf
 397:.\main.c      ****                                  UART_PutString(mes);
 1814              		.loc 1 397 0
 1815 035a 07F12003 		add	r3, r7, #32
 1816 035e 1846     		mov	r0, r3
 1817 0360 FFF7FEFF 		bl	UART_PutString
 398:.\main.c      ****                                 Timer_Deadzone_Start();
 1818              		.loc 1 398 0
 1819 0364 FFF7FEFF 		bl	Timer_Deadzone_Start
 399:.\main.c      ****                                 reached_target = 0;
 1820              		.loc 1 399 0
 1821 0368 834B     		ldr	r3, .L100+8
 1822 036a 0022     		movs	r2, #0
 1823 036c 1A70     		strb	r2, [r3]
 400:.\main.c      ****                                 overshot_target = 0;
 1824              		.loc 1 400 0
 1825 036e 834B     		ldr	r3, .L100+12
 1826 0370 0022     		movs	r2, #0
 1827 0372 1A70     		strb	r2, [r3]
 401:.\main.c      ****                                 instructionCount += 2;
 1828              		.loc 1 401 0
 1829 0374 824B     		ldr	r3, .L100+16
 1830 0376 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 41


 1831 0378 0233     		adds	r3, r3, #2
 1832 037a 9AB2     		uxth	r2, r3
 1833 037c 804B     		ldr	r3, .L100+16
 1834 037e 1A80     		strh	r2, [r3]	@ movhi
 1835              	.LBE6:
 1836              	.LBE5:
 334:.\main.c      ****                         {
 1837              		.loc 1 334 0
 1838 0380 68E1     		b	.L55
 1839              	.L59:
 334:.\main.c      ****                         {
 1840              		.loc 1 334 0 is_stmt 0 discriminator 1
 1841 0382 67E1     		b	.L55
 1842              	.L58:
 402:.\main.c      ****                             }
 403:.\main.c      ****                             }
 404:.\main.c      ****                         }
 405:.\main.c      ****                     }
 406:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1843              		.loc 1 406 0 is_stmt 1
 1844 0384 7F4B     		ldr	r3, .L100+20
 1845 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 0388 002B     		cmp	r3, #0
 1847 038a 40F0C380 		bne	.L72
 1848              		.loc 1 406 0 is_stmt 0 discriminator 1
 1849 038e 7D4B     		ldr	r3, .L100+20
 1850 0390 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1851 0392 002B     		cmp	r3, #0
 1852 0394 40F0BE80 		bne	.L72
 1853              		.loc 1 406 0 discriminator 2
 1854 0398 7A4B     		ldr	r3, .L100+20
 1855 039a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1856 039c 002B     		cmp	r3, #0
 1857 039e 40F0B980 		bne	.L72
 1858              		.loc 1 406 0 discriminator 3
 1859 03a2 784B     		ldr	r3, .L100+20
 1860 03a4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1861 03a6 002B     		cmp	r3, #0
 1862 03a8 40F0B480 		bne	.L72
 1863              		.loc 1 406 0 discriminator 4
 1864 03ac 754B     		ldr	r3, .L100+20
 1865 03ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1866 03b0 002B     		cmp	r3, #0
 1867 03b2 40F0AF80 		bne	.L72
 1868              		.loc 1 406 0 discriminator 5
 1869 03b6 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1870 03ba 552B     		cmp	r3, #85
 1871 03bc 04D0     		beq	.L73
 1872              		.loc 1 406 0 discriminator 6
 1873 03be 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1874 03c2 442B     		cmp	r3, #68
 1875 03c4 40F0A680 		bne	.L72
 1876              	.L73:
 407:.\main.c      ****                     {
 408:.\main.c      ****                         if(sensorsDisabled == 0)
 1877              		.loc 1 408 0 is_stmt 1
 1878 03c8 6F4B     		ldr	r3, .L100+24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 42


 1879 03ca 1B68     		ldr	r3, [r3]
 1880 03cc 002B     		cmp	r3, #0
 1881 03ce 40F0A080 		bne	.L74
 409:.\main.c      ****                         {
 410:.\main.c      ****                                 if(nextStep == 'D')
 1882              		.loc 1 410 0
 1883 03d2 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1884 03d6 442B     		cmp	r3, #68
 1885 03d8 17D1     		bne	.L75
 1886              	.LBB7:
 411:.\main.c      ****                                 {
 412:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1887              		.loc 1 412 0
 1888 03da 694B     		ldr	r3, .L100+16
 1889 03dc 1B88     		ldrh	r3, [r3]
 1890 03de 0233     		adds	r3, r3, #2
 1891 03e0 6A4A     		ldr	r2, .L100+28
 1892 03e2 D35C     		ldrb	r3, [r2, r3]
 1893 03e4 87F83130 		strb	r3, [r7, #49]
 413:.\main.c      ****                                     if(nextInstruction == 'U')
 1894              		.loc 1 413 0
 1895 03e8 97F83130 		ldrb	r3, [r7, #49]	@ zero_extendqisi2
 1896 03ec 552B     		cmp	r3, #85
 1897 03ee 0CD1     		bne	.L75
 414:.\main.c      ****                                     {
 415:.\main.c      ****                                         instructionCount += 2;
 1898              		.loc 1 415 0
 1899 03f0 634B     		ldr	r3, .L100+16
 1900 03f2 1B88     		ldrh	r3, [r3]
 1901 03f4 0233     		adds	r3, r3, #2
 1902 03f6 9AB2     		uxth	r2, r3
 1903 03f8 614B     		ldr	r3, .L100+16
 1904 03fa 1A80     		strh	r2, [r3]	@ movhi
 416:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1905              		.loc 1 416 0
 1906 03fc 604B     		ldr	r3, .L100+16
 1907 03fe 1B88     		ldrh	r3, [r3]
 1908 0400 1A46     		mov	r2, r3
 1909 0402 624B     		ldr	r3, .L100+28
 1910 0404 9B5C     		ldrb	r3, [r3, r2]
 1911 0406 87F83530 		strb	r3, [r7, #53]
 1912              	.L75:
 1913              	.LBE7:
 417:.\main.c      ****                                     }
 418:.\main.c      ****                                 }
 419:.\main.c      ****                                 
 420:.\main.c      ****                                 if(nextStep == 'U')
 1914              		.loc 1 420 0
 1915 040a 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1916 040e 552B     		cmp	r3, #85
 1917 0410 7FD1     		bne	.L74
 421:.\main.c      ****                                 {
 422:.\main.c      ****                                     actionDebounce++;
 1918              		.loc 1 422 0
 1919 0412 FB8E     		ldrh	r3, [r7, #54]
 1920 0414 0133     		adds	r3, r3, #1
 1921 0416 FB86     		strh	r3, [r7, #54]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 43


 423:.\main.c      ****                                     if(actionDebounce >= 2600)
 1922              		.loc 1 423 0
 1923 0418 FB8E     		ldrh	r3, [r7, #54]
 1924 041a 40F62722 		movw	r2, #2599
 1925 041e 9342     		cmp	r3, r2
 1926 0420 77D9     		bls	.L74
 424:.\main.c      ****                                     {
 425:.\main.c      ****                                         if(reached_target == 1)
 1927              		.loc 1 425 0
 1928 0422 554B     		ldr	r3, .L100+8
 1929 0424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1930 0426 012B     		cmp	r3, #1
 1931 0428 73D1     		bne	.L74
 1932              	.LBB8:
 426:.\main.c      ****                                         {
 427:.\main.c      ****                                     char mes[16];
 428:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1933              		.loc 1 428 0
 1934 042a 594B     		ldr	r3, .L100+32
 1935 042c 1B88     		ldrh	r3, [r3]
 1936 042e 1BB2     		sxth	r3, r3
 1937 0430 07F11002 		add	r2, r7, #16
 1938 0434 1046     		mov	r0, r2
 1939 0436 5749     		ldr	r1, .L100+36
 1940 0438 1A46     		mov	r2, r3
 1941 043a FFF7FEFF 		bl	sprintf
 429:.\main.c      ****                                      UART_PutString(mes);
 1942              		.loc 1 429 0
 1943 043e 07F11003 		add	r3, r7, #16
 1944 0442 1846     		mov	r0, r3
 1945 0444 FFF7FEFF 		bl	UART_PutString
 430:.\main.c      ****                                          accum_dist = 0;
 1946              		.loc 1 430 0
 1947 0448 514B     		ldr	r3, .L100+32
 1948 044a 0022     		movs	r2, #0
 1949 044c 1A80     		strh	r2, [r3]	@ movhi
 431:.\main.c      ****                                     uint8 nextStepDist;
 432:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 1950              		.loc 1 432 0
 1951 044e 4C4B     		ldr	r3, .L100+16
 1952 0450 1B88     		ldrh	r3, [r3]
 1953 0452 1A46     		mov	r2, r3
 1954 0454 504B     		ldr	r3, .L100+40
 1955 0456 1B88     		ldrh	r3, [r3]
 1956 0458 053B     		subs	r3, r3, #5
 1957 045a 9A42     		cmp	r2, r3
 1958 045c 07DC     		bgt	.L76
 1959              		.loc 1 432 0 is_stmt 0 discriminator 1
 1960 045e 484B     		ldr	r3, .L100+16
 1961 0460 1B88     		ldrh	r3, [r3]
 1962 0462 0333     		adds	r3, r3, #3
 1963 0464 494A     		ldr	r2, .L100+28
 1964 0466 D35C     		ldrb	r3, [r2, r3]
 1965 0468 87F83330 		strb	r3, [r7, #51]
 1966 046c 02E0     		b	.L77
 1967              	.L76:
 433:.\main.c      ****                                     else nextStepDist = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 44


 1968              		.loc 1 433 0 is_stmt 1
 1969 046e 0023     		movs	r3, #0
 1970 0470 87F83330 		strb	r3, [r7, #51]
 1971              	.L77:
 434:.\main.c      ****                                     
 435:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1972              		.loc 1 435 0
 1973 0474 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1974 0478 9BB2     		uxth	r3, r3
 1975 047a 1A46     		mov	r2, r3	@ movhi
 1976 047c 9200     		lsls	r2, r2, #2
 1977 047e 1344     		add	r3, r3, r2
 1978 0480 1A46     		mov	r2, r3	@ movhi
 1979 0482 D200     		lsls	r2, r2, #3
 1980 0484 D31A     		subs	r3, r2, r3
 1981 0486 9B00     		lsls	r3, r3, #2
 1982 0488 9BB2     		uxth	r3, r3
 1983 048a 9AB2     		uxth	r2, r3
 1984 048c 384B     		ldr	r3, .L100
 1985 048e 1A80     		strh	r2, [r3]	@ movhi
 436:.\main.c      ****                                     target_distance_quad -= U_OFFSET;
 1986              		.loc 1 436 0
 1987 0490 374B     		ldr	r3, .L100
 1988 0492 1B88     		ldrh	r3, [r3]
 1989 0494 9BB2     		uxth	r3, r3
 1990 0496 5D3B     		subs	r3, r3, #93
 1991 0498 9BB2     		uxth	r3, r3
 1992 049a 9AB2     		uxth	r2, r3
 1993 049c 344B     		ldr	r3, .L100
 1994 049e 1A80     		strh	r2, [r3]	@ movhi
 437:.\main.c      ****                                     //target_distance_quad += 208;
 438:.\main.c      ****                                     
 439:.\main.c      ****                                         UART_PutString("Triggered at white light \r\n");
 1995              		.loc 1 439 0
 1996 04a0 3E48     		ldr	r0, .L100+44
 1997 04a2 FFF7FEFF 		bl	UART_PutString
 440:.\main.c      ****                                         UART_PutString("Deadzone entered!\r\n");
 1998              		.loc 1 440 0
 1999 04a6 3E48     		ldr	r0, .L100+48
 2000 04a8 FFF7FEFF 		bl	UART_PutString
 441:.\main.c      ****                                         
 442:.\main.c      ****                                         deadzone = 1;
 2001              		.loc 1 442 0
 2002 04ac 3D4B     		ldr	r3, .L100+52
 2003 04ae 0122     		movs	r2, #1
 2004 04b0 1A70     		strb	r2, [r3]
 443:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2005              		.loc 1 443 0
 2006 04b2 3D48     		ldr	r0, .L100+56
 2007 04b4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 444:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 2008              		.loc 1 444 0
 2009 04b8 2D4B     		ldr	r3, .L100
 2010 04ba 1B88     		ldrh	r3, [r3]
 2011 04bc 1BB2     		sxth	r3, r3
 2012 04be 002B     		cmp	r3, #0
 2013 04c0 02DA     		bge	.L78
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 45


 2014              		.loc 1 444 0 is_stmt 0 discriminator 1
 2015 04c2 2B4B     		ldr	r3, .L100
 2016 04c4 0022     		movs	r2, #0
 2017 04c6 1A80     		strh	r2, [r3]	@ movhi
 2018              	.L78:
 445:.\main.c      ****                                         Timer_Deadzone_Start();
 2019              		.loc 1 445 0 is_stmt 1
 2020 04c8 FFF7FEFF 		bl	Timer_Deadzone_Start
 446:.\main.c      ****                                         actionDebounce = 0;
 2021              		.loc 1 446 0
 2022 04cc 0023     		movs	r3, #0
 2023 04ce FB86     		strh	r3, [r7, #54]	@ movhi
 447:.\main.c      ****                                         sensorsDisabled = 1;
 2024              		.loc 1 447 0
 2025 04d0 2D4B     		ldr	r3, .L100+24
 2026 04d2 0122     		movs	r2, #1
 2027 04d4 1A60     		str	r2, [r3]
 448:.\main.c      ****                                         initTurnU();
 2028              		.loc 1 448 0
 2029 04d6 FFF7FEFF 		bl	initTurnU
 449:.\main.c      ****                                         reached_target = 0;
 2030              		.loc 1 449 0
 2031 04da 274B     		ldr	r3, .L100+8
 2032 04dc 0022     		movs	r2, #0
 2033 04de 1A70     		strb	r2, [r3]
 450:.\main.c      ****                                         overshot_target = 0;
 2034              		.loc 1 450 0
 2035 04e0 264B     		ldr	r3, .L100+12
 2036 04e2 0022     		movs	r2, #0
 2037 04e4 1A70     		strb	r2, [r3]
 451:.\main.c      ****                                         instructionCount += 2;
 2038              		.loc 1 451 0
 2039 04e6 264B     		ldr	r3, .L100+16
 2040 04e8 1B88     		ldrh	r3, [r3]
 2041 04ea 0233     		adds	r3, r3, #2
 2042 04ec 9AB2     		uxth	r2, r3
 2043 04ee 244B     		ldr	r3, .L100+16
 2044 04f0 1A80     		strh	r2, [r3]	@ movhi
 452:.\main.c      ****                                         
 453:.\main.c      ****                                         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2045              		.loc 1 453 0
 2046 04f2 1F4B     		ldr	r3, .L100
 2047 04f4 1B88     		ldrh	r3, [r3]
 2048 04f6 1BB2     		sxth	r3, r3
 2049 04f8 07F11002 		add	r2, r7, #16
 2050 04fc 1046     		mov	r0, r2
 2051 04fe 1D49     		ldr	r1, .L100+4
 2052 0500 1A46     		mov	r2, r3
 2053 0502 FFF7FEFF 		bl	sprintf
 454:.\main.c      ****                                         UART_PutString(mes);
 2054              		.loc 1 454 0
 2055 0506 07F11003 		add	r3, r7, #16
 2056 050a 1846     		mov	r0, r3
 2057 050c FFF7FEFF 		bl	UART_PutString
 2058              	.LBE8:
 408:.\main.c      ****                         {
 2059              		.loc 1 408 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 46


 2060 0510 A0E0     		b	.L55
 2061              	.L74:
 408:.\main.c      ****                         {
 2062              		.loc 1 408 0 is_stmt 0 discriminator 3
 2063 0512 9FE0     		b	.L55
 2064              	.L72:
 455:.\main.c      ****                                 }
 456:.\main.c      ****                                 }
 457:.\main.c      ****                             }
 458:.\main.c      ****                         }
 459:.\main.c      ****                     }
 460:.\main.c      ****                     else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U'))
 2065              		.loc 1 460 0 is_stmt 1
 2066 0514 194B     		ldr	r3, .L100+12
 2067 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2068 0518 012B     		cmp	r3, #1
 2069 051a 40F09680 		bne	.L79
 2070              		.loc 1 460 0 is_stmt 0 discriminator 1
 2071 051e 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2072 0522 442B     		cmp	r3, #68
 2073 0524 04D0     		beq	.L80
 2074              		.loc 1 460 0 discriminator 2
 2075 0526 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2076 052a 552B     		cmp	r3, #85
 2077 052c 40F08D80 		bne	.L79
 2078              	.L80:
 2079              	.LBB9:
 461:.\main.c      ****                     {
 462:.\main.c      ****                         
 463:.\main.c      ****                                 //instructionCount += 2;
 464:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 465:.\main.c      ****                                 char mes[16];
 466:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2080              		.loc 1 466 0 is_stmt 1
 2081 0530 174B     		ldr	r3, .L100+32
 2082 0532 1B88     		ldrh	r3, [r3]
 2083 0534 1BB2     		sxth	r3, r3
 2084 0536 3A46     		mov	r2, r7
 2085 0538 1046     		mov	r0, r2
 2086 053a 1649     		ldr	r1, .L100+36
 2087 053c 1A46     		mov	r2, r3
 2088 053e FFF7FEFF 		bl	sprintf
 467:.\main.c      ****                                  UART_PutString(mes);
 2089              		.loc 1 467 0
 2090 0542 3B46     		mov	r3, r7
 2091 0544 1846     		mov	r0, r3
 2092 0546 FFF7FEFF 		bl	UART_PutString
 468:.\main.c      ****                                  accum_dist = 0;
 2093              		.loc 1 468 0
 2094 054a 114B     		ldr	r3, .L100+32
 2095 054c 0022     		movs	r2, #0
 2096 054e 1A80     		strh	r2, [r3]	@ movhi
 469:.\main.c      ****                                 uint8 nextStepDist;
 470:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2097              		.loc 1 470 0
 2098 0550 0B4B     		ldr	r3, .L100+16
 2099 0552 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 47


 2100 0554 1A46     		mov	r2, r3
 2101 0556 104B     		ldr	r3, .L100+40
 2102 0558 1B88     		ldrh	r3, [r3]
 2103 055a 053B     		subs	r3, r3, #5
 2104 055c 9A42     		cmp	r2, r3
 2105 055e 25DC     		bgt	.L81
 2106              		.loc 1 470 0 is_stmt 0 discriminator 1
 2107 0560 074B     		ldr	r3, .L100+16
 2108 0562 1B88     		ldrh	r3, [r3]
 2109 0564 0333     		adds	r3, r3, #3
 2110 0566 094A     		ldr	r2, .L100+28
 2111 0568 D35C     		ldrb	r3, [r2, r3]
 2112 056a 87F83230 		strb	r3, [r7, #50]
 2113 056e 20E0     		b	.L82
 2114              	.L101:
 2115              		.align	2
 2116              	.L100:
 2117 0570 00000000 		.word	target_distance_quad
 2118 0574 6C000000 		.word	.LC5
 2119 0578 00000000 		.word	reached_target
 2120 057c 00000000 		.word	overshot_target
 2121 0580 00000000 		.word	instructionCount
 2122 0584 00000000 		.word	frontSensors
 2123 0588 00000000 		.word	sensorsDisabled
 2124 058c 00000000 		.word	instructions
 2125 0590 00000000 		.word	accum_dist
 2126 0594 24000000 		.word	.LC2
 2127 0598 00000000 		.word	instructionLength
 2128 059c 80000000 		.word	.LC6
 2129 05a0 58000000 		.word	.LC4
 2130 05a4 00000000 		.word	deadzone
 2131 05a8 905F0100 		.word	90000
 2132              	.L81:
 471:.\main.c      ****                                 else nextStepDist = 0;
 2133              		.loc 1 471 0 is_stmt 1
 2134 05ac 0023     		movs	r3, #0
 2135 05ae 87F83230 		strb	r3, [r7, #50]
 2136              	.L82:
 472:.\main.c      ****                                 
 473:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2137              		.loc 1 473 0
 2138 05b2 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 2139 05b6 9BB2     		uxth	r3, r3
 2140 05b8 1A46     		mov	r2, r3	@ movhi
 2141 05ba 9200     		lsls	r2, r2, #2
 2142 05bc 1344     		add	r3, r3, r2
 2143 05be 1A46     		mov	r2, r3	@ movhi
 2144 05c0 D200     		lsls	r2, r2, #3
 2145 05c2 D31A     		subs	r3, r2, r3
 2146 05c4 9B00     		lsls	r3, r3, #2
 2147 05c6 9BB2     		uxth	r3, r3
 2148 05c8 9AB2     		uxth	r2, r3
 2149 05ca 3B4B     		ldr	r3, .L102
 2150 05cc 1A80     		strh	r2, [r3]	@ movhi
 474:.\main.c      ****                                 target_distance_quad -= U_OFFSET;
 2151              		.loc 1 474 0
 2152 05ce 3A4B     		ldr	r3, .L102
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 48


 2153 05d0 1B88     		ldrh	r3, [r3]
 2154 05d2 9BB2     		uxth	r3, r3
 2155 05d4 5D3B     		subs	r3, r3, #93
 2156 05d6 9BB2     		uxth	r3, r3
 2157 05d8 9AB2     		uxth	r2, r3
 2158 05da 374B     		ldr	r3, .L102
 2159 05dc 1A80     		strh	r2, [r3]	@ movhi
 475:.\main.c      ****                                 
 476:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 2160              		.loc 1 476 0
 2161 05de 3748     		ldr	r0, .L102+4
 2162 05e0 FFF7FEFF 		bl	UART_PutString
 477:.\main.c      ****                                     if(nextStep == 'U')
 2163              		.loc 1 477 0
 2164 05e4 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2165 05e8 552B     		cmp	r3, #85
 2166 05ea 0CD1     		bne	.L83
 478:.\main.c      ****                                     {
 479:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2167              		.loc 1 479 0
 2168 05ec 3448     		ldr	r0, .L102+8
 2169 05ee FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 480:.\main.c      ****                                         initTurnU();
 2170              		.loc 1 480 0
 2171 05f2 FFF7FEFF 		bl	initTurnU
 481:.\main.c      ****                                         //target_distance_quad += 208;
 482:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2172              		.loc 1 482 0
 2173 05f6 304B     		ldr	r3, .L102
 2174 05f8 1B88     		ldrh	r3, [r3]
 2175 05fa 9BB2     		uxth	r3, r3
 2176 05fc 863B     		subs	r3, r3, #134
 2177 05fe 9BB2     		uxth	r3, r3
 2178 0600 9AB2     		uxth	r2, r3
 2179 0602 2D4B     		ldr	r3, .L102
 2180 0604 1A80     		strh	r2, [r3]	@ movhi
 2181              	.L83:
 483:.\main.c      ****                                     }
 484:.\main.c      ****                                     else if (nextStep == 'D')
 485:.\main.c      ****                                     {
 486:.\main.c      ****                                         //do nothing
 487:.\main.c      ****                                     }
 488:.\main.c      **** //                                    UART_PutString("Deadzone entered!\r\n");
 489:.\main.c      **** //                                    
 490:.\main.c      **** //                                    
 491:.\main.c      **** //                                    actionDebounce = 0;
 492:.\main.c      **** //                                    sensorsDisabled = 1;
 493:.\main.c      **** //                                    
 494:.\main.c      **** //                                     switch(nextStep)
 495:.\main.c      **** //                                {
 496:.\main.c      **** //                                    case 'S':
 497:.\main.c      **** //                                        inittrackLineZ();
 498:.\main.c      **** //                                         Timer_Deadzone_WriteCounter(S_DEADZONE);
 499:.\main.c      **** //                                        //do nothing
 500:.\main.c      **** //                                    break;
 501:.\main.c      **** //                                    case 'L':
 502:.\main.c      **** //                                        //if(tracked_direction == 1) tracked_direction = 4; else 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 49


 503:.\main.c      **** //                                        initTurnLeft();
 504:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 505:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 506:.\main.c      **** //                                    break;
 507:.\main.c      **** //                                    case 'R':
 508:.\main.c      **** //                                        //if(tracked_direction == 4) tracked_direction = 1; else 
 509:.\main.c      **** //                                        initTurnRight();
 510:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 511:.\main.c      **** //                                        //target_distance_quad += (208 - TURN_OFFSET);
 512:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 513:.\main.c      **** //                                        
 514:.\main.c      **** //                                    break;
 515:.\main.c      **** //                                    case 'U':
 516:.\main.c      **** //                                        // Direction not tracked any more
 517:.\main.c      **** //                                        Timer_Deadzone_WriteCounter(U_DEADZONE);
 518:.\main.c      **** //                                        initTurnU();
 519:.\main.c      **** //                                        //target_distance_quad += 208;
 520:.\main.c      **** //                                        target_distance_quad -= TURN_OFFSET;
 521:.\main.c      **** //                                    break;
 522:.\main.c      **** //                                    default:
 523:.\main.c      **** //                                        //do nothing
 524:.\main.c      **** //                                        break;
 525:.\main.c      **** //                                }
 526:.\main.c      **** //                                    
 527:.\main.c      ****                                     reached_target = 0;
 2182              		.loc 1 527 0
 2183 0606 2F4B     		ldr	r3, .L102+12
 2184 0608 0022     		movs	r2, #0
 2185 060a 1A70     		strb	r2, [r3]
 528:.\main.c      ****                                     overshot_target = 0;
 2186              		.loc 1 528 0
 2187 060c 2E4B     		ldr	r3, .L102+16
 2188 060e 0022     		movs	r2, #0
 2189 0610 1A70     		strb	r2, [r3]
 529:.\main.c      ****                                     instructionCount += 2;
 2190              		.loc 1 529 0
 2191 0612 2E4B     		ldr	r3, .L102+20
 2192 0614 1B88     		ldrh	r3, [r3]
 2193 0616 0233     		adds	r3, r3, #2
 2194 0618 9AB2     		uxth	r2, r3
 2195 061a 2C4B     		ldr	r3, .L102+20
 2196 061c 1A80     		strh	r2, [r3]	@ movhi
 530:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2197              		.loc 1 530 0
 2198 061e 264B     		ldr	r3, .L102
 2199 0620 1B88     		ldrh	r3, [r3]
 2200 0622 1BB2     		sxth	r3, r3
 2201 0624 002B     		cmp	r3, #0
 2202 0626 02DA     		bge	.L84
 2203              		.loc 1 530 0 is_stmt 0 discriminator 1
 2204 0628 234B     		ldr	r3, .L102
 2205 062a 0022     		movs	r2, #0
 2206 062c 1A80     		strh	r2, [r3]	@ movhi
 2207              	.L84:
 531:.\main.c      ****                                     //Timer_Deadzone_Start();
 532:.\main.c      ****                                     //deadzone = 1;
 533:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 50


 2208              		.loc 1 533 0 is_stmt 1 discriminator 5
 2209 062e 224B     		ldr	r3, .L102
 2210 0630 1B88     		ldrh	r3, [r3]
 2211 0632 1BB2     		sxth	r3, r3
 2212 0634 3A46     		mov	r2, r7
 2213 0636 1046     		mov	r0, r2
 2214 0638 2549     		ldr	r1, .L102+24
 2215 063a 1A46     		mov	r2, r3
 2216 063c FFF7FEFF 		bl	sprintf
 534:.\main.c      ****                                     UART_PutString(mes);
 2217              		.loc 1 534 0 discriminator 5
 2218 0640 3B46     		mov	r3, r7
 2219 0642 1846     		mov	r0, r3
 2220 0644 FFF7FEFF 		bl	UART_PutString
 2221              	.LBE9:
 461:.\main.c      ****                         
 2222              		.loc 1 461 0 discriminator 5
 2223 0648 04E0     		b	.L55
 2224              	.L79:
 535:.\main.c      ****                     }
 536:.\main.c      ****                     else
 537:.\main.c      ****                     {
 538:.\main.c      ****                         inittrackLineZ();
 2225              		.loc 1 538 0
 2226 064a FFF7FEFF 		bl	inittrackLineZ
 539:.\main.c      ****                         actionDebounce = 0;
 2227              		.loc 1 539 0
 2228 064e 0023     		movs	r3, #0
 2229 0650 FB86     		strh	r3, [r7, #54]	@ movhi
 2230              	.LBE4:
 540:.\main.c      ****                     }
 541:.\main.c      ****                 }
 542:.\main.c      ****                 break;
 2231              		.loc 1 542 0
 2232 0652 FFE7     		b	.L97
 2233              	.L55:
 2234              	.L97:
 2235 0654 00BF     		nop
 2236              	.L42:
 543:.\main.c      ****         }
 544:.\main.c      ****         
 545:.\main.c      ****         switch(movement_state)
 2237              		.loc 1 545 0
 2238 0656 1F4B     		ldr	r3, .L102+28
 2239 0658 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2240 065a 072B     		cmp	r3, #7
 2241 065c 3FF603AD 		bhi	.L95
 2242 0660 01A2     		adr	r2, .L87
 2243 0662 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2244 0666 00BF     		.p2align 2
 2245              	.L87:
 2246 0668 89060000 		.word	.L86+1
 2247 066c 8F060000 		.word	.L88+1
 2248 0670 95060000 		.word	.L89+1
 2249 0674 A1060000 		.word	.L90+1
 2250 0678 A7060000 		.word	.L91+1
 2251 067c AD060000 		.word	.L92+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 51


 2252 0680 B3060000 		.word	.L93+1
 2253 0684 9B060000 		.word	.L94+1
 2254              		.p2align 1
 2255              	.L86:
 546:.\main.c      ****         {
 547:.\main.c      ****             case DRIVE:
 548:.\main.c      ****                 driveForwards();
 2256              		.loc 1 548 0
 2257 0688 FFF7FEFF 		bl	driveForwards
 549:.\main.c      ****             break;
 2258              		.loc 1 549 0
 2259 068c 13E0     		b	.L85
 2260              	.L88:
 550:.\main.c      ****             case LTURN:
 551:.\main.c      ****                 turnLeft();
 2261              		.loc 1 551 0
 2262 068e FFF7FEFF 		bl	turnLeft
 552:.\main.c      ****             break;
 2263              		.loc 1 552 0
 2264 0692 10E0     		b	.L85
 2265              	.L89:
 553:.\main.c      ****             case RTURN:
 554:.\main.c      ****                 turnRight();
 2266              		.loc 1 554 0
 2267 0694 FFF7FEFF 		bl	turnRight
 555:.\main.c      ****             break;
 2268              		.loc 1 555 0
 2269 0698 0DE0     		b	.L85
 2270              	.L94:
 556:.\main.c      ****             case UTURN:
 557:.\main.c      ****                 turnU();
 2271              		.loc 1 557 0
 2272 069a FFF7FEFF 		bl	turnU
 558:.\main.c      ****             break;
 2273              		.loc 1 558 0
 2274 069e 0AE0     		b	.L85
 2275              	.L90:
 559:.\main.c      ****             case STOPPED:
 560:.\main.c      ****                 brakeMotor();
 2276              		.loc 1 560 0
 2277 06a0 FFF7FEFF 		bl	brakeMotor
 561:.\main.c      ****             break;
 2278              		.loc 1 561 0
 2279 06a4 07E0     		b	.L85
 2280              	.L91:
 562:.\main.c      ****             case TRACKING:
 563:.\main.c      ****                 trackLine();
 2281              		.loc 1 563 0
 2282 06a6 FFF7FEFF 		bl	trackLine
 564:.\main.c      ****             break;
 2283              		.loc 1 564 0
 2284 06aa 04E0     		b	.L85
 2285              	.L92:
 565:.\main.c      ****             case TRACKING_U:
 566:.\main.c      ****                 trackLineU();
 2286              		.loc 1 566 0
 2287 06ac FFF7FEFF 		bl	trackLineU
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 52


 567:.\main.c      ****             break;
 2288              		.loc 1 567 0
 2289 06b0 01E0     		b	.L85
 2290              	.L93:
 568:.\main.c      ****             case TRACKING_SOFT:
 569:.\main.c      ****                 trackLineZ();
 2291              		.loc 1 569 0
 2292 06b2 FFF7FEFF 		bl	trackLineZ
 2293              	.L85:
 570:.\main.c      ****         }      
 571:.\main.c      ****     }   
 2294              		.loc 1 571 0
 2295 06b6 D6E4     		b	.L95
 2296              	.L103:
 2297              		.align	2
 2298              	.L102:
 2299 06b8 00000000 		.word	target_distance_quad
 2300 06bc 9C000000 		.word	.LC7
 2301 06c0 905F0100 		.word	90000
 2302 06c4 00000000 		.word	reached_target
 2303 06c8 00000000 		.word	overshot_target
 2304 06cc 00000000 		.word	instructionCount
 2305 06d0 6C000000 		.word	.LC5
 2306 06d4 00000000 		.word	movement_state
 2307              		.cfi_endproc
 2308              	.LFE71:
 2309              		.size	main, .-main
 2310              		.section	.text.handle_rx_binary,"ax",%progbits
 2311              		.align	2
 2312              		.global	handle_rx_binary
 2313              		.thumb
 2314              		.thumb_func
 2315              		.type	handle_rx_binary, %function
 2316              	handle_rx_binary:
 2317              	.LFB72:
 572:.\main.c      **** }
 573:.\main.c      **** 
 574:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 575:.\main.c      **** 
 576:.\main.c      **** void handle_rx_binary()
 577:.\main.c      **** {
 2318              		.loc 1 577 0
 2319              		.cfi_startproc
 2320              		@ args = 0, pretend = 0, frame = 32
 2321              		@ frame_needed = 1, uses_anonymous_args = 0
 2322              		@ link register save eliminated.
 2323 0000 80B4     		push	{r7}
 2324              		.cfi_def_cfa_offset 4
 2325              		.cfi_offset 7, -4
 2326 0002 89B0     		sub	sp, sp, #36
 2327              		.cfi_def_cfa_offset 40
 2328 0004 00AF     		add	r7, sp, #0
 2329              		.cfi_def_cfa_register 7
 578:.\main.c      ****     if(flag_rx == 1)
 2330              		.loc 1 578 0
 2331 0006 524B     		ldr	r3, .L124
 2332 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 53


 2333 000a 012B     		cmp	r3, #1
 2334 000c 40F09A80 		bne	.L104
 2335              	.LBB10:
 579:.\main.c      ****     {    
 580:.\main.c      ****         flag_rx = 0;
 2336              		.loc 1 580 0
 2337 0010 4F4B     		ldr	r3, .L124
 2338 0012 0022     		movs	r2, #0
 2339 0014 1A70     		strb	r2, [r3]
 581:.\main.c      ****         
 582:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2340              		.loc 1 582 0
 2341 0016 4F4B     		ldr	r3, .L124+4
 2342 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2343 001a 1B02     		lsls	r3, r3, #8
 2344 001c 9AB2     		uxth	r2, r3
 2345 001e 4D4B     		ldr	r3, .L124+4
 2346 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2347 0022 9BB2     		uxth	r3, r3
 2348 0024 1343     		orrs	r3, r3, r2
 2349 0026 9BB2     		uxth	r3, r3
 2350 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 583:.\main.c      ****         char byte_packet[12];
 584:.\main.c      ****         char string_packet[12];
 585:.\main.c      ****         
 586:.\main.c      ****         switch(byteCount)
 2351              		.loc 1 586 0
 2352 002a 4B4B     		ldr	r3, .L124+8
 2353 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2354 002e 043B     		subs	r3, r3, #4
 2355 0030 1E2B     		cmp	r3, #30
 2356 0032 00F28780 		bhi	.L104
 2357 0036 01A2     		adr	r2, .L108
 2358 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2359              		.p2align 2
 2360              	.L108:
 2361 003c B9000000 		.word	.L107+1
 2362 0040 45010000 		.word	.L104+1
 2363 0044 CD000000 		.word	.L109+1
 2364 0048 45010000 		.word	.L104+1
 2365 004c D5000000 		.word	.L110+1
 2366 0050 45010000 		.word	.L104+1
 2367 0054 DD000000 		.word	.L111+1
 2368 0058 45010000 		.word	.L104+1
 2369 005c E5000000 		.word	.L112+1
 2370 0060 45010000 		.word	.L104+1
 2371 0064 ED000000 		.word	.L113+1
 2372 0068 45010000 		.word	.L104+1
 2373 006c F5000000 		.word	.L114+1
 2374 0070 45010000 		.word	.L104+1
 2375 0074 FD000000 		.word	.L115+1
 2376 0078 45010000 		.word	.L104+1
 2377 007c 05010000 		.word	.L116+1
 2378 0080 45010000 		.word	.L104+1
 2379 0084 0D010000 		.word	.L117+1
 2380 0088 45010000 		.word	.L104+1
 2381 008c 15010000 		.word	.L118+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 54


 2382 0090 45010000 		.word	.L104+1
 2383 0094 1D010000 		.word	.L119+1
 2384 0098 45010000 		.word	.L104+1
 2385 009c 25010000 		.word	.L120+1
 2386 00a0 45010000 		.word	.L104+1
 2387 00a4 2D010000 		.word	.L121+1
 2388 00a8 45010000 		.word	.L104+1
 2389 00ac 35010000 		.word	.L122+1
 2390 00b0 45010000 		.word	.L104+1
 2391 00b4 3D010000 		.word	.L123+1
 2392              		.p2align 1
 2393              	.L107:
 587:.\main.c      ****         {
 588:.\main.c      ****             case 4:
 589:.\main.c      ****                 buffer_state.rssi = packet[0];
 2394              		.loc 1 589 0
 2395 00b8 264B     		ldr	r3, .L124+4
 2396 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2397 00bc DAB2     		uxtb	r2, r3
 2398 00be 274B     		ldr	r3, .L124+12
 2399 00c0 1A70     		strb	r2, [r3]
 590:.\main.c      ****                 buffer_state.index = packet[1];
 2400              		.loc 1 590 0
 2401 00c2 244B     		ldr	r3, .L124+4
 2402 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2403 00c6 254B     		ldr	r3, .L124+12
 2404 00c8 5A70     		strb	r2, [r3, #1]
 591:.\main.c      ****             break;
 2405              		.loc 1 591 0
 2406 00ca 3BE0     		b	.L104
 2407              	.L109:
 592:.\main.c      ****             case 6:
 593:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2408              		.loc 1 593 0
 2409 00cc FA8B     		ldrh	r2, [r7, #30]
 2410 00ce 234B     		ldr	r3, .L124+12
 2411 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 594:.\main.c      ****             break;
 2412              		.loc 1 594 0
 2413 00d2 37E0     		b	.L104
 2414              	.L110:
 595:.\main.c      ****             case 8:
 596:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2415              		.loc 1 596 0
 2416 00d4 FA8B     		ldrh	r2, [r7, #30]
 2417 00d6 214B     		ldr	r3, .L124+12
 2418 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 597:.\main.c      ****             break;
 2419              		.loc 1 597 0
 2420 00da 33E0     		b	.L104
 2421              	.L111:
 598:.\main.c      ****             case 10:
 599:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2422              		.loc 1 599 0
 2423 00dc FA8B     		ldrh	r2, [r7, #30]
 2424 00de 1F4B     		ldr	r3, .L124+12
 2425 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 55


 600:.\main.c      ****             break;
 2426              		.loc 1 600 0
 2427 00e2 2FE0     		b	.L104
 2428              	.L112:
 601:.\main.c      ****             case 12:
 602:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2429              		.loc 1 602 0
 2430 00e4 FA8B     		ldrh	r2, [r7, #30]
 2431 00e6 1D4B     		ldr	r3, .L124+12
 2432 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 603:.\main.c      ****             break;
 2433              		.loc 1 603 0
 2434 00ea 2BE0     		b	.L104
 2435              	.L113:
 604:.\main.c      ****             case 14:
 605:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2436              		.loc 1 605 0
 2437 00ec FA8B     		ldrh	r2, [r7, #30]
 2438 00ee 1B4B     		ldr	r3, .L124+12
 2439 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 606:.\main.c      ****             break;
 2440              		.loc 1 606 0
 2441 00f2 27E0     		b	.L104
 2442              	.L114:
 607:.\main.c      ****             case 16:
 608:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2443              		.loc 1 608 0
 2444 00f4 FA8B     		ldrh	r2, [r7, #30]
 2445 00f6 194B     		ldr	r3, .L124+12
 2446 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 609:.\main.c      ****             break;
 2447              		.loc 1 609 0
 2448 00fa 23E0     		b	.L104
 2449              	.L115:
 610:.\main.c      ****             case 18:
 611:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2450              		.loc 1 611 0
 2451 00fc FA8B     		ldrh	r2, [r7, #30]
 2452 00fe 174B     		ldr	r3, .L124+12
 2453 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 612:.\main.c      ****             break;
 2454              		.loc 1 612 0
 2455 0102 1FE0     		b	.L104
 2456              	.L116:
 613:.\main.c      ****             case 20:
 614:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2457              		.loc 1 614 0
 2458 0104 FA8B     		ldrh	r2, [r7, #30]
 2459 0106 154B     		ldr	r3, .L124+12
 2460 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 615:.\main.c      ****             break;
 2461              		.loc 1 615 0
 2462 010a 1BE0     		b	.L104
 2463              	.L117:
 616:.\main.c      ****             case 22:
 617:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2464              		.loc 1 617 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 56


 2465 010c FA8B     		ldrh	r2, [r7, #30]
 2466 010e 134B     		ldr	r3, .L124+12
 2467 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 618:.\main.c      ****             break;
 2468              		.loc 1 618 0
 2469 0112 17E0     		b	.L104
 2470              	.L118:
 619:.\main.c      ****             case 24:
 620:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2471              		.loc 1 620 0
 2472 0114 FA8B     		ldrh	r2, [r7, #30]
 2473 0116 114B     		ldr	r3, .L124+12
 2474 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 621:.\main.c      ****             break;
 2475              		.loc 1 621 0
 2476 011a 13E0     		b	.L104
 2477              	.L119:
 622:.\main.c      ****             case 26:
 623:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2478              		.loc 1 623 0
 2479 011c FA8B     		ldrh	r2, [r7, #30]
 2480 011e 0F4B     		ldr	r3, .L124+12
 2481 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 624:.\main.c      ****             break;
 2482              		.loc 1 624 0
 2483 0122 0FE0     		b	.L104
 2484              	.L120:
 625:.\main.c      ****             case 28:
 626:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2485              		.loc 1 626 0
 2486 0124 FA8B     		ldrh	r2, [r7, #30]
 2487 0126 0D4B     		ldr	r3, .L124+12
 2488 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 627:.\main.c      ****             break;
 2489              		.loc 1 627 0
 2490 012a 0BE0     		b	.L104
 2491              	.L121:
 628:.\main.c      ****             case 30:
 629:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2492              		.loc 1 629 0
 2493 012c FA8B     		ldrh	r2, [r7, #30]
 2494 012e 0B4B     		ldr	r3, .L124+12
 2495 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 630:.\main.c      ****             break;
 2496              		.loc 1 630 0
 2497 0132 07E0     		b	.L104
 2498              	.L122:
 631:.\main.c      ****             case 32:
 632:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2499              		.loc 1 632 0
 2500 0134 FA8B     		ldrh	r2, [r7, #30]
 2501 0136 094B     		ldr	r3, .L124+12
 2502 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 633:.\main.c      ****             break;
 2503              		.loc 1 633 0
 2504 013a 03E0     		b	.L104
 2505              	.L123:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 57


 634:.\main.c      ****             case 34:
 635:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2506              		.loc 1 635 0
 2507 013c FA8B     		ldrh	r2, [r7, #30]
 2508 013e 074B     		ldr	r3, .L124+12
 2509 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 636:.\main.c      ****             break;
 2510              		.loc 1 636 0
 2511 0142 00BF     		nop
 2512              	.L104:
 2513              	.LBE10:
 637:.\main.c      ****         }
 638:.\main.c      ****     }
 639:.\main.c      **** }
 2514              		.loc 1 639 0
 2515 0144 2437     		adds	r7, r7, #36
 2516              		.cfi_def_cfa_offset 4
 2517 0146 BD46     		mov	sp, r7
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 0148 5DF8047B 		ldr	r7, [sp], #4
 2521              		.cfi_restore 7
 2522              		.cfi_def_cfa_offset 0
 2523 014c 7047     		bx	lr
 2524              	.L125:
 2525 014e 00BF     		.align	2
 2526              	.L124:
 2527 0150 00000000 		.word	flag_rx
 2528 0154 00000000 		.word	packet
 2529 0158 00000000 		.word	byteCount
 2530 015c 00000000 		.word	buffer_state
 2531              		.cfi_endproc
 2532              	.LFE72:
 2533              		.size	handle_rx_binary, .-handle_rx_binary
 2534              		.section	.text.setLeftDir,"ax",%progbits
 2535              		.align	2
 2536              		.global	setLeftDir
 2537              		.thumb
 2538              		.thumb_func
 2539              		.type	setLeftDir, %function
 2540              	setLeftDir:
 2541              	.LFB73:
 640:.\main.c      **** 
 641:.\main.c      **** void setLeftDir(uint8 dir)
 642:.\main.c      **** {
 2542              		.loc 1 642 0
 2543              		.cfi_startproc
 2544              		@ args = 0, pretend = 0, frame = 8
 2545              		@ frame_needed = 1, uses_anonymous_args = 0
 2546 0000 80B5     		push	{r7, lr}
 2547              		.cfi_def_cfa_offset 8
 2548              		.cfi_offset 7, -8
 2549              		.cfi_offset 14, -4
 2550 0002 82B0     		sub	sp, sp, #8
 2551              		.cfi_def_cfa_offset 16
 2552 0004 00AF     		add	r7, sp, #0
 2553              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 58


 2554 0006 0346     		mov	r3, r0
 2555 0008 FB71     		strb	r3, [r7, #7]
 643:.\main.c      ****     M2_IN2_Write(dir);
 2556              		.loc 1 643 0
 2557 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2558 000c 1846     		mov	r0, r3
 2559 000e FFF7FEFF 		bl	M2_IN2_Write
 644:.\main.c      **** }
 2560              		.loc 1 644 0
 2561 0012 0837     		adds	r7, r7, #8
 2562              		.cfi_def_cfa_offset 8
 2563 0014 BD46     		mov	sp, r7
 2564              		.cfi_def_cfa_register 13
 2565              		@ sp needed
 2566 0016 80BD     		pop	{r7, pc}
 2567              		.cfi_endproc
 2568              	.LFE73:
 2569              		.size	setLeftDir, .-setLeftDir
 2570              		.section	.text.setRightDir,"ax",%progbits
 2571              		.align	2
 2572              		.global	setRightDir
 2573              		.thumb
 2574              		.thumb_func
 2575              		.type	setRightDir, %function
 2576              	setRightDir:
 2577              	.LFB74:
 645:.\main.c      **** 
 646:.\main.c      **** void setRightDir(uint8 dir)
 647:.\main.c      **** {
 2578              		.loc 1 647 0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 8
 2581              		@ frame_needed = 1, uses_anonymous_args = 0
 2582 0000 80B5     		push	{r7, lr}
 2583              		.cfi_def_cfa_offset 8
 2584              		.cfi_offset 7, -8
 2585              		.cfi_offset 14, -4
 2586 0002 82B0     		sub	sp, sp, #8
 2587              		.cfi_def_cfa_offset 16
 2588 0004 00AF     		add	r7, sp, #0
 2589              		.cfi_def_cfa_register 7
 2590 0006 0346     		mov	r3, r0
 2591 0008 FB71     		strb	r3, [r7, #7]
 648:.\main.c      ****     M1_IN2_Write(dir);
 2592              		.loc 1 648 0
 2593 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2594 000c 1846     		mov	r0, r3
 2595 000e FFF7FEFF 		bl	M1_IN2_Write
 649:.\main.c      **** }
 2596              		.loc 1 649 0
 2597 0012 0837     		adds	r7, r7, #8
 2598              		.cfi_def_cfa_offset 8
 2599 0014 BD46     		mov	sp, r7
 2600              		.cfi_def_cfa_register 13
 2601              		@ sp needed
 2602 0016 80BD     		pop	{r7, pc}
 2603              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 59


 2604              	.LFE74:
 2605              		.size	setRightDir, .-setRightDir
 2606              		.section	.rodata
 2607 00b7 00       		.align	2
 2608              	.LC8:
 2609 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2609      2025640D 
 2609      0A00
 2610              		.section	.text.reverseDirection,"ax",%progbits
 2611              		.align	2
 2612              		.global	reverseDirection
 2613              		.thumb
 2614              		.thumb_func
 2615              		.type	reverseDirection, %function
 2616              	reverseDirection:
 2617              	.LFB75:
 650:.\main.c      **** 
 651:.\main.c      **** void reverseDirection()
 652:.\main.c      **** {
 2618              		.loc 1 652 0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 16
 2621              		@ frame_needed = 1, uses_anonymous_args = 0
 2622 0000 80B5     		push	{r7, lr}
 2623              		.cfi_def_cfa_offset 8
 2624              		.cfi_offset 7, -8
 2625              		.cfi_offset 14, -4
 2626 0002 84B0     		sub	sp, sp, #16
 2627              		.cfi_def_cfa_offset 24
 2628 0004 00AF     		add	r7, sp, #0
 2629              		.cfi_def_cfa_register 7
 653:.\main.c      ****     direction = !direction;
 2630              		.loc 1 653 0
 2631 0006 114B     		ldr	r3, .L129
 2632 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2633 000a 002B     		cmp	r3, #0
 2634 000c 0CBF     		ite	eq
 2635 000e 0123     		moveq	r3, #1
 2636 0010 0023     		movne	r3, #0
 2637 0012 DBB2     		uxtb	r3, r3
 2638 0014 1A46     		mov	r2, r3
 2639 0016 0D4B     		ldr	r3, .L129
 2640 0018 1A70     		strb	r2, [r3]
 654:.\main.c      ****     setLeftDir(direction);
 2641              		.loc 1 654 0
 2642 001a 0C4B     		ldr	r3, .L129
 2643 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2644 001e 1846     		mov	r0, r3
 2645 0020 FFF7FEFF 		bl	setLeftDir
 655:.\main.c      ****     setRightDir(direction);
 2646              		.loc 1 655 0
 2647 0024 094B     		ldr	r3, .L129
 2648 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2649 0028 1846     		mov	r0, r3
 2650 002a FFF7FEFF 		bl	setRightDir
 656:.\main.c      ****     char mes[16];
 657:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 60


 2651              		.loc 1 657 0
 2652 002e 074B     		ldr	r3, .L129
 2653 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2654 0032 1A46     		mov	r2, r3
 2655 0034 3B46     		mov	r3, r7
 2656 0036 1846     		mov	r0, r3
 2657 0038 0549     		ldr	r1, .L129+4
 2658 003a FFF7FEFF 		bl	sprintf
 658:.\main.c      ****     UART_PutString(mes);
 2659              		.loc 1 658 0
 2660 003e 3B46     		mov	r3, r7
 2661 0040 1846     		mov	r0, r3
 2662 0042 FFF7FEFF 		bl	UART_PutString
 659:.\main.c      **** }
 2663              		.loc 1 659 0
 2664 0046 1037     		adds	r7, r7, #16
 2665              		.cfi_def_cfa_offset 8
 2666 0048 BD46     		mov	sp, r7
 2667              		.cfi_def_cfa_register 13
 2668              		@ sp needed
 2669 004a 80BD     		pop	{r7, pc}
 2670              	.L130:
 2671              		.align	2
 2672              	.L129:
 2673 004c 00000000 		.word	direction
 2674 0050 B8000000 		.word	.LC8
 2675              		.cfi_endproc
 2676              	.LFE75:
 2677              		.size	reverseDirection, .-reverseDirection
 2678              		.global	__aeabi_dcmplt
 2679              		.global	__aeabi_ddiv
 2680              		.global	__aeabi_d2iz
 2681              		.section	.text.setSpeed,"ax",%progbits
 2682              		.align	2
 2683              		.global	setSpeed
 2684              		.thumb
 2685              		.thumb_func
 2686              		.type	setSpeed, %function
 2687              	setSpeed:
 2688              	.LFB76:
 660:.\main.c      **** 
 661:.\main.c      **** void setSpeed(double left, double right){
 2689              		.loc 1 661 0
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 24
 2692              		@ frame_needed = 1, uses_anonymous_args = 0
 2693 0000 80B5     		push	{r7, lr}
 2694              		.cfi_def_cfa_offset 8
 2695              		.cfi_offset 7, -8
 2696              		.cfi_offset 14, -4
 2697 0002 86B0     		sub	sp, sp, #24
 2698              		.cfi_def_cfa_offset 32
 2699 0004 00AF     		add	r7, sp, #0
 2700              		.cfi_def_cfa_register 7
 2701 0006 C7E90201 		strd	r0, [r7, #8]
 2702 000a C7E90023 		strd	r2, [r7]
 662:.\main.c      ****     if(right < 0.0)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 61


 2703              		.loc 1 662 0
 2704 000e D7E90001 		ldrd	r0, [r7]
 2705 0012 4FF00002 		mov	r2, #0
 2706 0016 4FF00003 		mov	r3, #0
 2707 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2708 001e 0346     		mov	r3, r0
 2709 0020 002B     		cmp	r3, #0
 2710 0022 10D0     		beq	.L140
 663:.\main.c      ****     {
 664:.\main.c      ****         //char mes[16];
 665:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 666:.\main.c      ****        // UART_PutString(mes);
 667:.\main.c      ****         setRightDir(!direction);
 2711              		.loc 1 667 0
 2712 0024 304B     		ldr	r3, .L142+8
 2713 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2714 0028 002B     		cmp	r3, #0
 2715 002a 0CBF     		ite	eq
 2716 002c 0123     		moveq	r3, #1
 2717 002e 0023     		movne	r3, #0
 2718 0030 DBB2     		uxtb	r3, r3
 2719 0032 1846     		mov	r0, r3
 2720 0034 FFF7FEFF 		bl	setRightDir
 668:.\main.c      ****         right = -right;
 2721              		.loc 1 668 0
 2722 0038 3B68     		ldr	r3, [r7]
 2723 003a 3B60     		str	r3, [r7]
 2724 003c 7B68     		ldr	r3, [r7, #4]
 2725 003e 83F00043 		eor	r3, r3, #-2147483648
 2726 0042 7B60     		str	r3, [r7, #4]
 2727 0044 04E0     		b	.L134
 2728              	.L140:
 669:.\main.c      ****     }
 670:.\main.c      ****     else setRightDir(direction);
 2729              		.loc 1 670 0
 2730 0046 284B     		ldr	r3, .L142+8
 2731 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2732 004a 1846     		mov	r0, r3
 2733 004c FFF7FEFF 		bl	setRightDir
 2734              	.L134:
 671:.\main.c      ****     
 672:.\main.c      ****     if(left < 0.0)
 2735              		.loc 1 672 0
 2736 0050 D7E90201 		ldrd	r0, [r7, #8]
 2737 0054 4FF00002 		mov	r2, #0
 2738 0058 4FF00003 		mov	r3, #0
 2739 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2740 0060 0346     		mov	r3, r0
 2741 0062 002B     		cmp	r3, #0
 2742 0064 10D0     		beq	.L141
 673:.\main.c      ****     {
 674:.\main.c      ****        // char mes[16];
 675:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 676:.\main.c      ****         //UART_PutString(mes);
 677:.\main.c      ****         setLeftDir(!direction);
 2743              		.loc 1 677 0
 2744 0066 204B     		ldr	r3, .L142+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 62


 2745 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2746 006a 002B     		cmp	r3, #0
 2747 006c 0CBF     		ite	eq
 2748 006e 0123     		moveq	r3, #1
 2749 0070 0023     		movne	r3, #0
 2750 0072 DBB2     		uxtb	r3, r3
 2751 0074 1846     		mov	r0, r3
 2752 0076 FFF7FEFF 		bl	setLeftDir
 678:.\main.c      ****         left = -left;
 2753              		.loc 1 678 0
 2754 007a BB68     		ldr	r3, [r7, #8]
 2755 007c BB60     		str	r3, [r7, #8]
 2756 007e FB68     		ldr	r3, [r7, #12]
 2757 0080 83F00043 		eor	r3, r3, #-2147483648
 2758 0084 FB60     		str	r3, [r7, #12]
 2759 0086 04E0     		b	.L137
 2760              	.L141:
 679:.\main.c      ****     }
 680:.\main.c      ****     else setLeftDir(direction);
 2761              		.loc 1 680 0
 2762 0088 174B     		ldr	r3, .L142+8
 2763 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2764 008c 1846     		mov	r0, r3
 2765 008e FFF7FEFF 		bl	setLeftDir
 2766              	.L137:
 681:.\main.c      ****     
 682:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2767              		.loc 1 682 0
 2768 0092 D7E90201 		ldrd	r0, [r7, #8]
 2769 0096 12A3     		adr	r3, .L142
 2770 0098 D3E90023 		ldrd	r2, [r3]
 2771 009c FFF7FEFF 		bl	__aeabi_ddiv
 2772 00a0 0246     		mov	r2, r0
 2773 00a2 0B46     		mov	r3, r1
 2774 00a4 1046     		mov	r0, r2
 2775 00a6 1946     		mov	r1, r3
 2776 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2777 00ac 0346     		mov	r3, r0
 2778 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 683:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2779              		.loc 1 683 0
 2780 00b0 D7E90001 		ldrd	r0, [r7]
 2781 00b4 0AA3     		adr	r3, .L142
 2782 00b6 D3E90023 		ldrd	r2, [r3]
 2783 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2784 00be 0246     		mov	r2, r0
 2785 00c0 0B46     		mov	r3, r1
 2786 00c2 1046     		mov	r0, r2
 2787 00c4 1946     		mov	r1, r3
 2788 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2789 00ca 0346     		mov	r3, r0
 2790 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 684:.\main.c      ****     
 685:.\main.c      ****     leftSpeedLimit = countsRight;
 2791              		.loc 1 685 0
 2792 00ce 074A     		ldr	r2, .L142+12
 2793 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 63


 2794 00d2 1380     		strh	r3, [r2]	@ movhi
 686:.\main.c      ****     rightSpeedLimit = countsLeft;
 2795              		.loc 1 686 0
 2796 00d4 064A     		ldr	r2, .L142+16
 2797 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2798 00d8 1380     		strh	r3, [r2]	@ movhi
 687:.\main.c      **** }
 2799              		.loc 1 687 0
 2800 00da 1837     		adds	r7, r7, #24
 2801              		.cfi_def_cfa_offset 8
 2802 00dc BD46     		mov	sp, r7
 2803              		.cfi_def_cfa_register 13
 2804              		@ sp needed
 2805 00de 80BD     		pop	{r7, pc}
 2806              	.L143:
 2807              		.align	3
 2808              	.L142:
 2809 00e0 969526A5 		.word	-1524197994
 2810 00e4 A0DBEF3F 		.word	1072683936
 2811 00e8 00000000 		.word	direction
 2812 00ec 00000000 		.word	leftSpeedLimit
 2813 00f0 00000000 		.word	rightSpeedLimit
 2814              		.cfi_endproc
 2815              	.LFE76:
 2816              		.size	setSpeed, .-setSpeed
 2817 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2818              		.align	2
 2819              		.global	brakeLeft
 2820              		.thumb
 2821              		.thumb_func
 2822              		.type	brakeLeft, %function
 2823              	brakeLeft:
 2824              	.LFB77:
 688:.\main.c      **** 
 689:.\main.c      **** void brakeLeft()
 690:.\main.c      **** {
 2825              		.loc 1 690 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 0
 2828              		@ frame_needed = 1, uses_anonymous_args = 0
 2829 0000 80B5     		push	{r7, lr}
 2830              		.cfi_def_cfa_offset 8
 2831              		.cfi_offset 7, -8
 2832              		.cfi_offset 14, -4
 2833 0002 00AF     		add	r7, sp, #0
 2834              		.cfi_def_cfa_register 7
 691:.\main.c      ****     PWM_1_WriteCompare(0);
 2835              		.loc 1 691 0
 2836 0004 0020     		movs	r0, #0
 2837 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 692:.\main.c      ****     left_duty_cycle = 0;
 2838              		.loc 1 692 0
 2839 000a 024B     		ldr	r3, .L145
 2840 000c 0022     		movs	r2, #0
 2841 000e 1A80     		strh	r2, [r3]	@ movhi
 693:.\main.c      **** }
 2842              		.loc 1 693 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 64


 2843 0010 80BD     		pop	{r7, pc}
 2844              	.L146:
 2845 0012 00BF     		.align	2
 2846              	.L145:
 2847 0014 00000000 		.word	left_duty_cycle
 2848              		.cfi_endproc
 2849              	.LFE77:
 2850              		.size	brakeLeft, .-brakeLeft
 2851              		.section	.text.brakeRight,"ax",%progbits
 2852              		.align	2
 2853              		.global	brakeRight
 2854              		.thumb
 2855              		.thumb_func
 2856              		.type	brakeRight, %function
 2857              	brakeRight:
 2858              	.LFB78:
 694:.\main.c      **** 
 695:.\main.c      **** void brakeRight()
 696:.\main.c      **** {
 2859              		.loc 1 696 0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 0
 2862              		@ frame_needed = 1, uses_anonymous_args = 0
 2863 0000 80B5     		push	{r7, lr}
 2864              		.cfi_def_cfa_offset 8
 2865              		.cfi_offset 7, -8
 2866              		.cfi_offset 14, -4
 2867 0002 00AF     		add	r7, sp, #0
 2868              		.cfi_def_cfa_register 7
 697:.\main.c      ****      PWM_2_WriteCompare(0);
 2869              		.loc 1 697 0
 2870 0004 0020     		movs	r0, #0
 2871 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 698:.\main.c      ****      right_duty_cycle = 0;
 2872              		.loc 1 698 0
 2873 000a 024B     		ldr	r3, .L148
 2874 000c 0022     		movs	r2, #0
 2875 000e 1A80     		strh	r2, [r3]	@ movhi
 699:.\main.c      **** }
 2876              		.loc 1 699 0
 2877 0010 80BD     		pop	{r7, pc}
 2878              	.L149:
 2879 0012 00BF     		.align	2
 2880              	.L148:
 2881 0014 00000000 		.word	right_duty_cycle
 2882              		.cfi_endproc
 2883              	.LFE78:
 2884              		.size	brakeRight, .-brakeRight
 2885              		.section	.text.brakeMotor,"ax",%progbits
 2886              		.align	2
 2887              		.global	brakeMotor
 2888              		.thumb
 2889              		.thumb_func
 2890              		.type	brakeMotor, %function
 2891              	brakeMotor:
 2892              	.LFB79:
 700:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 65


 701:.\main.c      **** void brakeMotor(){
 2893              		.loc 1 701 0
 2894              		.cfi_startproc
 2895              		@ args = 0, pretend = 0, frame = 0
 2896              		@ frame_needed = 1, uses_anonymous_args = 0
 2897 0000 80B5     		push	{r7, lr}
 2898              		.cfi_def_cfa_offset 8
 2899              		.cfi_offset 7, -8
 2900              		.cfi_offset 14, -4
 2901 0002 00AF     		add	r7, sp, #0
 2902              		.cfi_def_cfa_register 7
 702:.\main.c      ****     setSpeed(0, 0);
 2903              		.loc 1 702 0
 2904 0004 4FF00000 		mov	r0, #0
 2905 0008 4FF00001 		mov	r1, #0
 2906 000c 4FF00002 		mov	r2, #0
 2907 0010 4FF00003 		mov	r3, #0
 2908 0014 FFF7FEFF 		bl	setSpeed
 703:.\main.c      ****     brakeLeft();
 2909              		.loc 1 703 0
 2910 0018 FFF7FEFF 		bl	brakeLeft
 704:.\main.c      ****     brakeRight();
 2911              		.loc 1 704 0
 2912 001c FFF7FEFF 		bl	brakeRight
 705:.\main.c      **** }
 2913              		.loc 1 705 0
 2914 0020 80BD     		pop	{r7, pc}
 2915              		.cfi_endproc
 2916              	.LFE79:
 2917              		.size	brakeMotor, .-brakeMotor
 2918 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2919              		.align	2
 2920              		.global	driveForwards
 2921              		.thumb
 2922              		.thumb_func
 2923              		.type	driveForwards, %function
 2924              	driveForwards:
 2925              	.LFB80:
 706:.\main.c      **** 
 707:.\main.c      **** void driveForwards()
 708:.\main.c      **** {
 2926              		.loc 1 708 0
 2927              		.cfi_startproc
 2928              		@ args = 0, pretend = 0, frame = 0
 2929              		@ frame_needed = 1, uses_anonymous_args = 0
 2930 0000 80B5     		push	{r7, lr}
 2931              		.cfi_def_cfa_offset 8
 2932              		.cfi_offset 7, -8
 2933              		.cfi_offset 14, -4
 2934 0002 00AF     		add	r7, sp, #0
 2935              		.cfi_def_cfa_register 7
 709:.\main.c      ****     setSpeed(speed, speed);
 2936              		.loc 1 709 0
 2937 0004 044B     		ldr	r3, .L152
 2938 0006 D3E90001 		ldrd	r0, [r3]
 2939 000a 034B     		ldr	r3, .L152
 2940 000c D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 66


 2941 0010 FFF7FEFF 		bl	setSpeed
 710:.\main.c      **** }
 2942              		.loc 1 710 0
 2943 0014 80BD     		pop	{r7, pc}
 2944              	.L153:
 2945 0016 00BF     		.align	2
 2946              	.L152:
 2947 0018 00000000 		.word	speed
 2948              		.cfi_endproc
 2949              	.LFE80:
 2950              		.size	driveForwards, .-driveForwards
 2951              		.global	__aeabi_dmul
 2952              		.section	.text.turnRight,"ax",%progbits
 2953              		.align	2
 2954              		.global	turnRight
 2955              		.thumb
 2956              		.thumb_func
 2957              		.type	turnRight, %function
 2958              	turnRight:
 2959              	.LFB81:
 711:.\main.c      **** 
 712:.\main.c      **** void turnRight()
 713:.\main.c      **** {
 2960              		.loc 1 713 0
 2961              		.cfi_startproc
 2962              		@ args = 0, pretend = 0, frame = 0
 2963              		@ frame_needed = 1, uses_anonymous_args = 0
 2964 0000 80B5     		push	{r7, lr}
 2965              		.cfi_def_cfa_offset 8
 2966              		.cfi_offset 7, -8
 2967              		.cfi_offset 14, -4
 2968 0002 00AF     		add	r7, sp, #0
 2969              		.cfi_def_cfa_register 7
 714:.\main.c      ****     setSpeed(0,speed * 1.5);
 2970              		.loc 1 714 0
 2971 0004 094B     		ldr	r3, .L155
 2972 0006 D3E90023 		ldrd	r2, [r3]
 2973 000a 1046     		mov	r0, r2
 2974 000c 1946     		mov	r1, r3
 2975 000e 4FF00002 		mov	r2, #0
 2976 0012 074B     		ldr	r3, .L155+4
 2977 0014 FFF7FEFF 		bl	__aeabi_dmul
 2978 0018 0246     		mov	r2, r0
 2979 001a 0B46     		mov	r3, r1
 2980 001c 4FF00000 		mov	r0, #0
 2981 0020 4FF00001 		mov	r1, #0
 2982 0024 FFF7FEFF 		bl	setSpeed
 715:.\main.c      **** }
 2983              		.loc 1 715 0
 2984 0028 80BD     		pop	{r7, pc}
 2985              	.L156:
 2986 002a 00BF     		.align	2
 2987              	.L155:
 2988 002c 00000000 		.word	speed
 2989 0030 0000F83F 		.word	1073217536
 2990              		.cfi_endproc
 2991              	.LFE81:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 67


 2992              		.size	turnRight, .-turnRight
 2993              		.section	.text.turnLeft,"ax",%progbits
 2994              		.align	2
 2995              		.global	turnLeft
 2996              		.thumb
 2997              		.thumb_func
 2998              		.type	turnLeft, %function
 2999              	turnLeft:
 3000              	.LFB82:
 716:.\main.c      **** 
 717:.\main.c      **** void turnLeft()
 718:.\main.c      **** {
 3001              		.loc 1 718 0
 3002              		.cfi_startproc
 3003              		@ args = 0, pretend = 0, frame = 0
 3004              		@ frame_needed = 1, uses_anonymous_args = 0
 3005 0000 80B5     		push	{r7, lr}
 3006              		.cfi_def_cfa_offset 8
 3007              		.cfi_offset 7, -8
 3008              		.cfi_offset 14, -4
 3009 0002 00AF     		add	r7, sp, #0
 3010              		.cfi_def_cfa_register 7
 719:.\main.c      ****     setSpeed(speed * 1.5,0);
 3011              		.loc 1 719 0
 3012 0004 0A4B     		ldr	r3, .L158
 3013 0006 D3E90023 		ldrd	r2, [r3]
 3014 000a 1046     		mov	r0, r2
 3015 000c 1946     		mov	r1, r3
 3016 000e 4FF00002 		mov	r2, #0
 3017 0012 084B     		ldr	r3, .L158+4
 3018 0014 FFF7FEFF 		bl	__aeabi_dmul
 3019 0018 0246     		mov	r2, r0
 3020 001a 0B46     		mov	r3, r1
 3021 001c 1046     		mov	r0, r2
 3022 001e 1946     		mov	r1, r3
 3023 0020 4FF00002 		mov	r2, #0
 3024 0024 4FF00003 		mov	r3, #0
 3025 0028 FFF7FEFF 		bl	setSpeed
 720:.\main.c      **** }
 3026              		.loc 1 720 0
 3027 002c 80BD     		pop	{r7, pc}
 3028              	.L159:
 3029 002e 00BF     		.align	2
 3030              	.L158:
 3031 0030 00000000 		.word	speed
 3032 0034 0000F83F 		.word	1073217536
 3033              		.cfi_endproc
 3034              	.LFE82:
 3035              		.size	turnLeft, .-turnLeft
 3036              		.section	.text.turnU,"ax",%progbits
 3037              		.align	2
 3038              		.global	turnU
 3039              		.thumb
 3040              		.thumb_func
 3041              		.type	turnU, %function
 3042              	turnU:
 3043              	.LFB83:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 68


 721:.\main.c      **** 
 722:.\main.c      **** void turnU()
 723:.\main.c      **** {
 3044              		.loc 1 723 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 1, uses_anonymous_args = 0
 3048 0000 B0B5     		push	{r4, r5, r7, lr}
 3049              		.cfi_def_cfa_offset 16
 3050              		.cfi_offset 4, -16
 3051              		.cfi_offset 5, -12
 3052              		.cfi_offset 7, -8
 3053              		.cfi_offset 14, -4
 3054 0002 00AF     		add	r7, sp, #0
 3055              		.cfi_def_cfa_register 7
 724:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3056              		.loc 1 724 0
 3057 0004 0F4B     		ldr	r3, .L161
 3058 0006 D3E90023 		ldrd	r2, [r3]
 3059 000a 1046     		mov	r0, r2
 3060 000c 83F00041 		eor	r1, r3, #-2147483648
 3061 0010 4FF00002 		mov	r2, #0
 3062 0014 0C4B     		ldr	r3, .L161+4
 3063 0016 FFF7FEFF 		bl	__aeabi_dmul
 3064 001a 0246     		mov	r2, r0
 3065 001c 0B46     		mov	r3, r1
 3066 001e 1446     		mov	r4, r2
 3067 0020 1D46     		mov	r5, r3
 3068 0022 084B     		ldr	r3, .L161
 3069 0024 D3E90023 		ldrd	r2, [r3]
 3070 0028 1046     		mov	r0, r2
 3071 002a 1946     		mov	r1, r3
 3072 002c 4FF00002 		mov	r2, #0
 3073 0030 054B     		ldr	r3, .L161+4
 3074 0032 FFF7FEFF 		bl	__aeabi_dmul
 3075 0036 0246     		mov	r2, r0
 3076 0038 0B46     		mov	r3, r1
 3077 003a 2046     		mov	r0, r4
 3078 003c 2946     		mov	r1, r5
 3079 003e FFF7FEFF 		bl	setSpeed
 725:.\main.c      **** }
 3080              		.loc 1 725 0
 3081 0042 B0BD     		pop	{r4, r5, r7, pc}
 3082              	.L162:
 3083              		.align	2
 3084              	.L161:
 3085 0044 00000000 		.word	speed
 3086 0048 0000F83F 		.word	1073217536
 3087              		.cfi_endproc
 3088              	.LFE83:
 3089              		.size	turnU, .-turnU
 3090              		.section	.text.initTurnLeft,"ax",%progbits
 3091              		.align	2
 3092              		.global	initTurnLeft
 3093              		.thumb
 3094              		.thumb_func
 3095              		.type	initTurnLeft, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 69


 3096              	initTurnLeft:
 3097              	.LFB84:
 726:.\main.c      **** 
 727:.\main.c      **** void initTurnLeft(){
 3098              		.loc 1 727 0
 3099              		.cfi_startproc
 3100              		@ args = 0, pretend = 0, frame = 0
 3101              		@ frame_needed = 1, uses_anonymous_args = 0
 3102 0000 80B5     		push	{r7, lr}
 3103              		.cfi_def_cfa_offset 8
 3104              		.cfi_offset 7, -8
 3105              		.cfi_offset 14, -4
 3106 0002 00AF     		add	r7, sp, #0
 3107              		.cfi_def_cfa_register 7
 728:.\main.c      ****     Timer_2_Stop();
 3108              		.loc 1 728 0
 3109 0004 FFF7FEFF 		bl	Timer_2_Stop
 729:.\main.c      ****     prev_movement_state = movement_state;
 3110              		.loc 1 729 0
 3111 0008 084B     		ldr	r3, .L164
 3112 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3113 000c 084B     		ldr	r3, .L164+4
 3114 000e 1A70     		strb	r2, [r3]
 730:.\main.c      ****     movement_state = LTURN;
 3115              		.loc 1 730 0
 3116 0010 064B     		ldr	r3, .L164
 3117 0012 0122     		movs	r2, #1
 3118 0014 1A70     		strb	r2, [r3]
 731:.\main.c      ****     brakeLeft();
 3119              		.loc 1 731 0
 3120 0016 FFF7FEFF 		bl	brakeLeft
 732:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3121              		.loc 1 732 0
 3122 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3123 001e 0346     		mov	r3, r0
 3124 0020 1A46     		mov	r2, r3
 3125 0022 044B     		ldr	r3, .L164+8
 3126 0024 1A80     		strh	r2, [r3]	@ movhi
 733:.\main.c      ****     Timer_2_Start();
 3127              		.loc 1 733 0
 3128 0026 FFF7FEFF 		bl	Timer_2_Start
 734:.\main.c      **** }
 3129              		.loc 1 734 0
 3130 002a 80BD     		pop	{r7, pc}
 3131              	.L165:
 3132              		.align	2
 3133              	.L164:
 3134 002c 00000000 		.word	movement_state
 3135 0030 00000000 		.word	prev_movement_state
 3136 0034 00000000 		.word	start_turn_count
 3137              		.cfi_endproc
 3138              	.LFE84:
 3139              		.size	initTurnLeft, .-initTurnLeft
 3140              		.section	.text.initTurnRight,"ax",%progbits
 3141              		.align	2
 3142              		.global	initTurnRight
 3143              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 70


 3144              		.thumb_func
 3145              		.type	initTurnRight, %function
 3146              	initTurnRight:
 3147              	.LFB85:
 735:.\main.c      **** 
 736:.\main.c      **** void initTurnRight(){
 3148              		.loc 1 736 0
 3149              		.cfi_startproc
 3150              		@ args = 0, pretend = 0, frame = 0
 3151              		@ frame_needed = 1, uses_anonymous_args = 0
 3152 0000 80B5     		push	{r7, lr}
 3153              		.cfi_def_cfa_offset 8
 3154              		.cfi_offset 7, -8
 3155              		.cfi_offset 14, -4
 3156 0002 00AF     		add	r7, sp, #0
 3157              		.cfi_def_cfa_register 7
 737:.\main.c      ****     Timer_2_Stop();
 3158              		.loc 1 737 0
 3159 0004 FFF7FEFF 		bl	Timer_2_Stop
 738:.\main.c      ****     prev_movement_state = movement_state;
 3160              		.loc 1 738 0
 3161 0008 084B     		ldr	r3, .L167
 3162 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3163 000c 084B     		ldr	r3, .L167+4
 3164 000e 1A70     		strb	r2, [r3]
 739:.\main.c      ****     movement_state = RTURN;
 3165              		.loc 1 739 0
 3166 0010 064B     		ldr	r3, .L167
 3167 0012 0222     		movs	r2, #2
 3168 0014 1A70     		strb	r2, [r3]
 740:.\main.c      ****     brakeRight();
 3169              		.loc 1 740 0
 3170 0016 FFF7FEFF 		bl	brakeRight
 741:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3171              		.loc 1 741 0
 3172 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3173 001e 0346     		mov	r3, r0
 3174 0020 1A46     		mov	r2, r3
 3175 0022 044B     		ldr	r3, .L167+8
 3176 0024 1A80     		strh	r2, [r3]	@ movhi
 742:.\main.c      ****     Timer_2_Start();
 3177              		.loc 1 742 0
 3178 0026 FFF7FEFF 		bl	Timer_2_Start
 743:.\main.c      **** }
 3179              		.loc 1 743 0
 3180 002a 80BD     		pop	{r7, pc}
 3181              	.L168:
 3182              		.align	2
 3183              	.L167:
 3184 002c 00000000 		.word	movement_state
 3185 0030 00000000 		.word	prev_movement_state
 3186 0034 00000000 		.word	start_turn_count
 3187              		.cfi_endproc
 3188              	.LFE85:
 3189              		.size	initTurnRight, .-initTurnRight
 3190              		.section	.text.initTurnU,"ax",%progbits
 3191              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 71


 3192              		.global	initTurnU
 3193              		.thumb
 3194              		.thumb_func
 3195              		.type	initTurnU, %function
 3196              	initTurnU:
 3197              	.LFB86:
 744:.\main.c      **** 
 745:.\main.c      **** void initTurnU(){
 3198              		.loc 1 745 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 1, uses_anonymous_args = 0
 3202 0000 80B5     		push	{r7, lr}
 3203              		.cfi_def_cfa_offset 8
 3204              		.cfi_offset 7, -8
 3205              		.cfi_offset 14, -4
 3206 0002 00AF     		add	r7, sp, #0
 3207              		.cfi_def_cfa_register 7
 746:.\main.c      ****     Timer_2_Stop();
 3208              		.loc 1 746 0
 3209 0004 FFF7FEFF 		bl	Timer_2_Stop
 747:.\main.c      ****     prev_movement_state = movement_state;
 3210              		.loc 1 747 0
 3211 0008 084B     		ldr	r3, .L170
 3212 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3213 000c 084B     		ldr	r3, .L170+4
 3214 000e 1A70     		strb	r2, [r3]
 748:.\main.c      ****     movement_state = UTURN;
 3215              		.loc 1 748 0
 3216 0010 064B     		ldr	r3, .L170
 3217 0012 0722     		movs	r2, #7
 3218 0014 1A70     		strb	r2, [r3]
 749:.\main.c      ****     brakeMotor();
 3219              		.loc 1 749 0
 3220 0016 FFF7FEFF 		bl	brakeMotor
 750:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3221              		.loc 1 750 0
 3222 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3223 001e 0346     		mov	r3, r0
 3224 0020 1A46     		mov	r2, r3
 3225 0022 044B     		ldr	r3, .L170+8
 3226 0024 1A80     		strh	r2, [r3]	@ movhi
 751:.\main.c      ****     Timer_2_Start();
 3227              		.loc 1 751 0
 3228 0026 FFF7FEFF 		bl	Timer_2_Start
 752:.\main.c      **** }
 3229              		.loc 1 752 0
 3230 002a 80BD     		pop	{r7, pc}
 3231              	.L171:
 3232              		.align	2
 3233              	.L170:
 3234 002c 00000000 		.word	movement_state
 3235 0030 00000000 		.word	prev_movement_state
 3236 0034 00000000 		.word	start_turn_count
 3237              		.cfi_endproc
 3238              	.LFE86:
 3239              		.size	initTurnU, .-initTurnU
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 72


 3240              		.section	.text.initForward,"ax",%progbits
 3241              		.align	2
 3242              		.global	initForward
 3243              		.thumb
 3244              		.thumb_func
 3245              		.type	initForward, %function
 3246              	initForward:
 3247              	.LFB87:
 753:.\main.c      **** 
 754:.\main.c      **** void initForward(){
 3248              		.loc 1 754 0
 3249              		.cfi_startproc
 3250              		@ args = 0, pretend = 0, frame = 0
 3251              		@ frame_needed = 1, uses_anonymous_args = 0
 3252 0000 80B5     		push	{r7, lr}
 3253              		.cfi_def_cfa_offset 8
 3254              		.cfi_offset 7, -8
 3255              		.cfi_offset 14, -4
 3256 0002 00AF     		add	r7, sp, #0
 3257              		.cfi_def_cfa_register 7
 755:.\main.c      ****     brakeMotor();
 3258              		.loc 1 755 0
 3259 0004 FFF7FEFF 		bl	brakeMotor
 756:.\main.c      ****     movement_state = DRIVE;
 3260              		.loc 1 756 0
 3261 0008 014B     		ldr	r3, .L173
 3262 000a 0022     		movs	r2, #0
 3263 000c 1A70     		strb	r2, [r3]
 757:.\main.c      **** }
 3264              		.loc 1 757 0
 3265 000e 80BD     		pop	{r7, pc}
 3266              	.L174:
 3267              		.align	2
 3268              	.L173:
 3269 0010 00000000 		.word	movement_state
 3270              		.cfi_endproc
 3271              	.LFE87:
 3272              		.size	initForward, .-initForward
 3273              		.section	.text.initBrake,"ax",%progbits
 3274              		.align	2
 3275              		.global	initBrake
 3276              		.thumb
 3277              		.thumb_func
 3278              		.type	initBrake, %function
 3279              	initBrake:
 3280              	.LFB88:
 758:.\main.c      **** 
 759:.\main.c      **** void initBrake(){
 3281              		.loc 1 759 0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 0
 3284              		@ frame_needed = 1, uses_anonymous_args = 0
 3285              		@ link register save eliminated.
 3286 0000 80B4     		push	{r7}
 3287              		.cfi_def_cfa_offset 4
 3288              		.cfi_offset 7, -4
 3289 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 73


 3290              		.cfi_def_cfa_register 7
 760:.\main.c      ****     movement_state = STOPPED;
 3291              		.loc 1 760 0
 3292 0004 034B     		ldr	r3, .L176
 3293 0006 0322     		movs	r2, #3
 3294 0008 1A70     		strb	r2, [r3]
 761:.\main.c      **** }
 3295              		.loc 1 761 0
 3296 000a BD46     		mov	sp, r7
 3297              		.cfi_def_cfa_register 13
 3298              		@ sp needed
 3299 000c 5DF8047B 		ldr	r7, [sp], #4
 3300              		.cfi_restore 7
 3301              		.cfi_def_cfa_offset 0
 3302 0010 7047     		bx	lr
 3303              	.L177:
 3304 0012 00BF     		.align	2
 3305              	.L176:
 3306 0014 00000000 		.word	movement_state
 3307              		.cfi_endproc
 3308              	.LFE88:
 3309              		.size	initBrake, .-initBrake
 3310              		.section	.text.initTrack,"ax",%progbits
 3311              		.align	2
 3312              		.global	initTrack
 3313              		.thumb
 3314              		.thumb_func
 3315              		.type	initTrack, %function
 3316              	initTrack:
 3317              	.LFB89:
 762:.\main.c      **** 
 763:.\main.c      **** void initTrack()
 764:.\main.c      **** {
 3318              		.loc 1 764 0
 3319              		.cfi_startproc
 3320              		@ args = 0, pretend = 0, frame = 0
 3321              		@ frame_needed = 1, uses_anonymous_args = 0
 3322              		@ link register save eliminated.
 3323 0000 80B4     		push	{r7}
 3324              		.cfi_def_cfa_offset 4
 3325              		.cfi_offset 7, -4
 3326 0002 00AF     		add	r7, sp, #0
 3327              		.cfi_def_cfa_register 7
 765:.\main.c      ****     movement_state = TRACKING;
 3328              		.loc 1 765 0
 3329 0004 034B     		ldr	r3, .L179
 3330 0006 0422     		movs	r2, #4
 3331 0008 1A70     		strb	r2, [r3]
 766:.\main.c      **** }
 3332              		.loc 1 766 0
 3333 000a BD46     		mov	sp, r7
 3334              		.cfi_def_cfa_register 13
 3335              		@ sp needed
 3336 000c 5DF8047B 		ldr	r7, [sp], #4
 3337              		.cfi_restore 7
 3338              		.cfi_def_cfa_offset 0
 3339 0010 7047     		bx	lr
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 74


 3340              	.L180:
 3341 0012 00BF     		.align	2
 3342              	.L179:
 3343 0014 00000000 		.word	movement_state
 3344              		.cfi_endproc
 3345              	.LFE89:
 3346              		.size	initTrack, .-initTrack
 3347              		.section	.text.initTrackU,"ax",%progbits
 3348              		.align	2
 3349              		.global	initTrackU
 3350              		.thumb
 3351              		.thumb_func
 3352              		.type	initTrackU, %function
 3353              	initTrackU:
 3354              	.LFB90:
 767:.\main.c      **** 
 768:.\main.c      **** void initTrackU(){
 3355              		.loc 1 768 0
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 1, uses_anonymous_args = 0
 3359              		@ link register save eliminated.
 3360 0000 80B4     		push	{r7}
 3361              		.cfi_def_cfa_offset 4
 3362              		.cfi_offset 7, -4
 3363 0002 00AF     		add	r7, sp, #0
 3364              		.cfi_def_cfa_register 7
 769:.\main.c      ****     movement_state = TRACKING_U;
 3365              		.loc 1 769 0
 3366 0004 034B     		ldr	r3, .L182
 3367 0006 0522     		movs	r2, #5
 3368 0008 1A70     		strb	r2, [r3]
 770:.\main.c      **** }
 3369              		.loc 1 770 0
 3370 000a BD46     		mov	sp, r7
 3371              		.cfi_def_cfa_register 13
 3372              		@ sp needed
 3373 000c 5DF8047B 		ldr	r7, [sp], #4
 3374              		.cfi_restore 7
 3375              		.cfi_def_cfa_offset 0
 3376 0010 7047     		bx	lr
 3377              	.L183:
 3378 0012 00BF     		.align	2
 3379              	.L182:
 3380 0014 00000000 		.word	movement_state
 3381              		.cfi_endproc
 3382              	.LFE90:
 3383              		.size	initTrackU, .-initTrackU
 3384              		.section	.text.inittrackLineZ,"ax",%progbits
 3385              		.align	2
 3386              		.global	inittrackLineZ
 3387              		.thumb
 3388              		.thumb_func
 3389              		.type	inittrackLineZ, %function
 3390              	inittrackLineZ:
 3391              	.LFB91:
 771:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 75


 772:.\main.c      **** void inittrackLineZ(){
 3392              		.loc 1 772 0
 3393              		.cfi_startproc
 3394              		@ args = 0, pretend = 0, frame = 0
 3395              		@ frame_needed = 1, uses_anonymous_args = 0
 3396              		@ link register save eliminated.
 3397 0000 80B4     		push	{r7}
 3398              		.cfi_def_cfa_offset 4
 3399              		.cfi_offset 7, -4
 3400 0002 00AF     		add	r7, sp, #0
 3401              		.cfi_def_cfa_register 7
 773:.\main.c      ****     movement_state = TRACKING_SOFT;
 3402              		.loc 1 773 0
 3403 0004 034B     		ldr	r3, .L185
 3404 0006 0622     		movs	r2, #6
 3405 0008 1A70     		strb	r2, [r3]
 774:.\main.c      **** }
 3406              		.loc 1 774 0
 3407 000a BD46     		mov	sp, r7
 3408              		.cfi_def_cfa_register 13
 3409              		@ sp needed
 3410 000c 5DF8047B 		ldr	r7, [sp], #4
 3411              		.cfi_restore 7
 3412              		.cfi_def_cfa_offset 0
 3413 0010 7047     		bx	lr
 3414              	.L186:
 3415 0012 00BF     		.align	2
 3416              	.L185:
 3417 0014 00000000 		.word	movement_state
 3418              		.cfi_endproc
 3419              	.LFE91:
 3420              		.size	inittrackLineZ, .-inittrackLineZ
 3421              		.section	.text.rxInt,"ax",%progbits
 3422              		.align	2
 3423              		.global	rxInt
 3424              		.thumb
 3425              		.thumb_func
 3426              		.type	rxInt, %function
 3427              	rxInt:
 3428              	.LFB92:
 775:.\main.c      **** 
 776:.\main.c      **** 
 777:.\main.c      **** 
 778:.\main.c      **** //Binary RF Data
 779:.\main.c      **** CY_ISR(rxInt){
 3429              		.loc 1 779 0
 3430              		.cfi_startproc
 3431              		@ args = 0, pretend = 0, frame = 8
 3432              		@ frame_needed = 1, uses_anonymous_args = 0
 3433 0000 B0B5     		push	{r4, r5, r7, lr}
 3434              		.cfi_def_cfa_offset 16
 3435              		.cfi_offset 4, -16
 3436              		.cfi_offset 5, -12
 3437              		.cfi_offset 7, -8
 3438              		.cfi_offset 14, -4
 3439 0002 82B0     		sub	sp, sp, #8
 3440              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 76


 3441 0004 00AF     		add	r7, sp, #0
 3442              		.cfi_def_cfa_register 7
 780:.\main.c      ****     char rf_char = UART_GetChar();
 3443              		.loc 1 780 0
 3444 0006 FFF7FEFF 		bl	UART_GetChar
 3445 000a 0346     		mov	r3, r0
 3446 000c FB71     		strb	r3, [r7, #7]
 781:.\main.c      ****     if(rf_char == SOP){
 3447              		.loc 1 781 0
 3448 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3449 0010 AA2B     		cmp	r3, #170
 3450 0012 2BD1     		bne	.L188
 782:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 783:.\main.c      ****             if(byteCount == 34)
 3451              		.loc 1 783 0
 3452 0014 224B     		ldr	r3, .L192
 3453 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3454 0018 222B     		cmp	r3, #34
 3455 001a 20D1     		bne	.L189
 784:.\main.c      ****             {
 785:.\main.c      ****                 system_state = buffer_state;
 3456              		.loc 1 785 0
 3457 001c 214B     		ldr	r3, .L192+4
 3458 001e 224A     		ldr	r2, .L192+8
 3459 0020 1568     		ldr	r5, [r2]	@ unaligned
 3460 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3461 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3462 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3463 0028 1D60     		str	r5, [r3]	@ unaligned
 3464 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3465 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3466 002e D960     		str	r1, [r3, #12]	@ unaligned
 3467 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3468 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3469 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3470 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3471 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3472 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3473 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3474 003e D961     		str	r1, [r3, #28]	@ unaligned
 786:.\main.c      ****                 if(initial_pos_valid == 0)
 3475              		.loc 1 786 0
 3476 0040 1A4B     		ldr	r3, .L192+12
 3477 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3478 0044 002B     		cmp	r3, #0
 3479 0046 0AD1     		bne	.L189
 787:.\main.c      ****                 {
 788:.\main.c      ****                     LED_Write(~LED_Read());
 3480              		.loc 1 788 0
 3481 0048 FFF7FEFF 		bl	LED_Read
 3482 004c 0346     		mov	r3, r0
 3483 004e DB43     		mvns	r3, r3
 3484 0050 DBB2     		uxtb	r3, r3
 3485 0052 1846     		mov	r0, r3
 3486 0054 FFF7FEFF 		bl	LED_Write
 789:.\main.c      ****                     initial_pos_valid = 1;
 3487              		.loc 1 789 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 77


 3488 0058 144B     		ldr	r3, .L192+12
 3489 005a 0122     		movs	r2, #1
 3490 005c 1A70     		strb	r2, [r3]
 3491              	.L189:
 790:.\main.c      ****                 }
 791:.\main.c      ****             }
 792:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3492              		.loc 1 792 0
 3493 005e 104B     		ldr	r3, .L192
 3494 0060 0222     		movs	r2, #2
 3495 0062 1A70     		strb	r2, [r3]
 793:.\main.c      ****             flag_rx = 0;
 3496              		.loc 1 793 0
 3497 0064 124B     		ldr	r3, .L192+16
 3498 0066 0022     		movs	r2, #0
 3499 0068 1A70     		strb	r2, [r3]
 3500 006a 16E0     		b	.L187
 3501              	.L188:
 794:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 795:.\main.c      ****         }
 796:.\main.c      ****         else
 797:.\main.c      ****         {
 798:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3502              		.loc 1 798 0
 3503 006c 0C4B     		ldr	r3, .L192
 3504 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3505 0070 03F00103 		and	r3, r3, #1
 3506 0074 0F49     		ldr	r1, .L192+20
 3507 0076 FA79     		ldrb	r2, [r7, #7]
 3508 0078 CA54     		strb	r2, [r1, r3]
 799:.\main.c      ****            
 800:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3509              		.loc 1 800 0
 3510 007a 094B     		ldr	r3, .L192
 3511 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3512 007e 03F00103 		and	r3, r3, #1
 3513 0082 DBB2     		uxtb	r3, r3
 3514 0084 002B     		cmp	r3, #0
 3515 0086 02D0     		beq	.L191
 801:.\main.c      ****             {
 802:.\main.c      ****                 flag_rx = 1;
 3516              		.loc 1 802 0
 3517 0088 094B     		ldr	r3, .L192+16
 3518 008a 0122     		movs	r2, #1
 3519 008c 1A70     		strb	r2, [r3]
 3520              	.L191:
 803:.\main.c      ****             }
 804:.\main.c      ****             byteCount = (byteCount + 1);
 3521              		.loc 1 804 0
 3522 008e 044B     		ldr	r3, .L192
 3523 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3524 0092 0133     		adds	r3, r3, #1
 3525 0094 DAB2     		uxtb	r2, r3
 3526 0096 024B     		ldr	r3, .L192
 3527 0098 1A70     		strb	r2, [r3]
 3528              	.L187:
 805:.\main.c      ****         }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 78


 806:.\main.c      **** }
 3529              		.loc 1 806 0
 3530 009a 0837     		adds	r7, r7, #8
 3531              		.cfi_def_cfa_offset 16
 3532 009c BD46     		mov	sp, r7
 3533              		.cfi_def_cfa_register 13
 3534              		@ sp needed
 3535 009e B0BD     		pop	{r4, r5, r7, pc}
 3536              	.L193:
 3537              		.align	2
 3538              	.L192:
 3539 00a0 00000000 		.word	byteCount
 3540 00a4 00000000 		.word	system_state
 3541 00a8 00000000 		.word	buffer_state
 3542 00ac 00000000 		.word	initial_pos_valid
 3543 00b0 00000000 		.word	flag_rx
 3544 00b4 00000000 		.word	packet
 3545              		.cfi_endproc
 3546              	.LFE92:
 3547              		.size	rxInt, .-rxInt
 3548              		.global	__aeabi_i2f
 3549              		.global	__aeabi_fmul
 3550              		.global	__aeabi_f2iz
 3551              		.section	.rodata
 3552 00c2 0000     		.align	2
 3553              	.LC9:
 3554 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3554      65742071 
 3554      7561643A 
 3554      2025640D 
 3554      0A00
 3555 00d6 0000     		.align	2
 3556              	.LC10:
 3557 00d8 0D0A00   		.ascii	"\015\012\000"
 3558              		.section	.text.BT_rxInt,"ax",%progbits
 3559              		.align	2
 3560              		.global	BT_rxInt
 3561              		.thumb
 3562              		.thumb_func
 3563              		.type	BT_rxInt, %function
 3564              	BT_rxInt:
 3565              	.LFB93:
 807:.\main.c      **** 
 808:.\main.c      **** CY_ISR(BT_rxInt)
 809:.\main.c      **** {
 3566              		.loc 1 809 0
 3567              		.cfi_startproc
 3568              		@ args = 0, pretend = 0, frame = 32
 3569              		@ frame_needed = 1, uses_anonymous_args = 0
 3570 0000 80B5     		push	{r7, lr}
 3571              		.cfi_def_cfa_offset 8
 3572              		.cfi_offset 7, -8
 3573              		.cfi_offset 14, -4
 3574 0002 88B0     		sub	sp, sp, #32
 3575              		.cfi_def_cfa_offset 40
 3576 0004 00AF     		add	r7, sp, #0
 3577              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 79


 810:.\main.c      ****     char rf_char = UART_GetChar();
 3578              		.loc 1 810 0
 3579 0006 FFF7FEFF 		bl	UART_GetChar
 3580 000a 0346     		mov	r3, r0
 3581 000c FB75     		strb	r3, [r7, #23]
 811:.\main.c      ****     switch(rf_char){
 3582              		.loc 1 811 0
 3583 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3584 0010 313B     		subs	r3, r3, #49
 3585 0012 492B     		cmp	r3, #73
 3586 0014 00F2B981 		bhi	.L194
 3587 0018 01A2     		adr	r2, .L197
 3588 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3589 001e 00BF     		.p2align 2
 3590              	.L197:
 3591 0020 CB020000 		.word	.L196+1
 3592 0024 15020000 		.word	.L198+1
 3593 0028 8B030000 		.word	.L194+1
 3594 002c 8B030000 		.word	.L194+1
 3595 0030 8B030000 		.word	.L194+1
 3596 0034 8B030000 		.word	.L194+1
 3597 0038 8B030000 		.word	.L194+1
 3598 003c 8B030000 		.word	.L194+1
 3599 0040 8B030000 		.word	.L194+1
 3600 0044 8B030000 		.word	.L194+1
 3601 0048 8B030000 		.word	.L194+1
 3602 004c 8B030000 		.word	.L194+1
 3603 0050 8B030000 		.word	.L194+1
 3604 0054 8B030000 		.word	.L194+1
 3605 0058 8B030000 		.word	.L194+1
 3606 005c 8B030000 		.word	.L194+1
 3607 0060 8B030000 		.word	.L194+1
 3608 0064 8B030000 		.word	.L194+1
 3609 0068 8B030000 		.word	.L194+1
 3610 006c 8B030000 		.word	.L194+1
 3611 0070 8B030000 		.word	.L194+1
 3612 0074 8B030000 		.word	.L194+1
 3613 0078 8B030000 		.word	.L194+1
 3614 007c 8B030000 		.word	.L194+1
 3615 0080 8B030000 		.word	.L194+1
 3616 0084 8B030000 		.word	.L194+1
 3617 0088 8B030000 		.word	.L194+1
 3618 008c 8B030000 		.word	.L194+1
 3619 0090 8B030000 		.word	.L194+1
 3620 0094 8B030000 		.word	.L194+1
 3621 0098 8B030000 		.word	.L194+1
 3622 009c 8B030000 		.word	.L194+1
 3623 00a0 8B030000 		.word	.L194+1
 3624 00a4 8B030000 		.word	.L194+1
 3625 00a8 8B030000 		.word	.L194+1
 3626 00ac 8B030000 		.word	.L194+1
 3627 00b0 8B030000 		.word	.L194+1
 3628 00b4 8B030000 		.word	.L194+1
 3629 00b8 8B030000 		.word	.L194+1
 3630 00bc 8B030000 		.word	.L194+1
 3631 00c0 8B030000 		.word	.L194+1
 3632 00c4 8B030000 		.word	.L194+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 80


 3633 00c8 8B030000 		.word	.L194+1
 3634 00cc 8B030000 		.word	.L194+1
 3635 00d0 8B030000 		.word	.L194+1
 3636 00d4 8B030000 		.word	.L194+1
 3637 00d8 8B030000 		.word	.L194+1
 3638 00dc 8B030000 		.word	.L194+1
 3639 00e0 49010000 		.word	.L199+1
 3640 00e4 8B030000 		.word	.L194+1
 3641 00e8 8B030000 		.word	.L194+1
 3642 00ec 6D010000 		.word	.L200+1
 3643 00f0 8B030000 		.word	.L194+1
 3644 00f4 79010000 		.word	.L201+1
 3645 00f8 8B030000 		.word	.L194+1
 3646 00fc 8B030000 		.word	.L194+1
 3647 0100 8B030000 		.word	.L194+1
 3648 0104 8B030000 		.word	.L194+1
 3649 0108 8B030000 		.word	.L194+1
 3650 010c 8B030000 		.word	.L194+1
 3651 0110 8B030000 		.word	.L194+1
 3652 0114 8B030000 		.word	.L194+1
 3653 0118 8B030000 		.word	.L194+1
 3654 011c 8B030000 		.word	.L194+1
 3655 0120 A9010000 		.word	.L202+1
 3656 0124 FF010000 		.word	.L203+1
 3657 0128 61010000 		.word	.L204+1
 3658 012c 85010000 		.word	.L205+1
 3659 0130 91010000 		.word	.L206+1
 3660 0134 8B030000 		.word	.L194+1
 3661 0138 55010000 		.word	.L207+1
 3662 013c 8B030000 		.word	.L194+1
 3663 0140 8B030000 		.word	.L194+1
 3664 0144 9D010000 		.word	.L208+1
 3665              		.p2align 1
 3666              	.L199:
 3667              	.LBB11:
 812:.\main.c      ****     case 'a':
 813:.\main.c      ****         initTurnLeft();
 3668              		.loc 1 813 0
 3669 0148 FFF7FEFF 		bl	initTurnLeft
 814:.\main.c      ****         track_mode = NO_TRACK;
 3670              		.loc 1 814 0
 3671 014c 904B     		ldr	r3, .L218
 3672 014e 0022     		movs	r2, #0
 3673 0150 1A70     		strb	r2, [r3]
 815:.\main.c      ****         break;
 3674              		.loc 1 815 0
 3675 0152 1AE1     		b	.L194
 3676              	.L207:
 816:.\main.c      ****     case 'w':
 817:.\main.c      ****         initForward();
 3677              		.loc 1 817 0
 3678 0154 FFF7FEFF 		bl	initForward
 818:.\main.c      ****         track_mode = NO_TRACK;
 3679              		.loc 1 818 0
 3680 0158 8D4B     		ldr	r3, .L218
 3681 015a 0022     		movs	r2, #0
 3682 015c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 81


 819:.\main.c      ****         break;
 3683              		.loc 1 819 0
 3684 015e 14E1     		b	.L194
 3685              	.L204:
 820:.\main.c      ****     case 's': 
 821:.\main.c      ****         reverseDirection();
 3686              		.loc 1 821 0
 3687 0160 FFF7FEFF 		bl	reverseDirection
 822:.\main.c      ****         track_mode = NO_TRACK;
 3688              		.loc 1 822 0
 3689 0164 8A4B     		ldr	r3, .L218
 3690 0166 0022     		movs	r2, #0
 3691 0168 1A70     		strb	r2, [r3]
 823:.\main.c      ****         break;
 3692              		.loc 1 823 0
 3693 016a 0EE1     		b	.L194
 3694              	.L200:
 824:.\main.c      ****     case 'd':
 825:.\main.c      ****         initTurnRight();
 3695              		.loc 1 825 0
 3696 016c FFF7FEFF 		bl	initTurnRight
 826:.\main.c      ****         track_mode = NO_TRACK;
 3697              		.loc 1 826 0
 3698 0170 874B     		ldr	r3, .L218
 3699 0172 0022     		movs	r2, #0
 3700 0174 1A70     		strb	r2, [r3]
 827:.\main.c      ****         break;
 3701              		.loc 1 827 0
 3702 0176 08E1     		b	.L194
 3703              	.L201:
 828:.\main.c      ****     case 'f':
 829:.\main.c      ****         initBrake();
 3704              		.loc 1 829 0
 3705 0178 FFF7FEFF 		bl	initBrake
 830:.\main.c      ****         track_mode = NO_TRACK;
 3706              		.loc 1 830 0
 3707 017c 844B     		ldr	r3, .L218
 3708 017e 0022     		movs	r2, #0
 3709 0180 1A70     		strb	r2, [r3]
 831:.\main.c      ****         break;
 3710              		.loc 1 831 0
 3711 0182 02E1     		b	.L194
 3712              	.L205:
 832:.\main.c      ****     case('t'):
 833:.\main.c      ****         track_mode = CURVE_TRACK;
 3713              		.loc 1 833 0
 3714 0184 824B     		ldr	r3, .L218
 3715 0186 0122     		movs	r2, #1
 3716 0188 1A70     		strb	r2, [r3]
 834:.\main.c      ****         initTrack();
 3717              		.loc 1 834 0
 3718 018a FFF7FEFF 		bl	initTrack
 835:.\main.c      ****         break;
 3719              		.loc 1 835 0
 3720 018e FCE0     		b	.L194
 3721              	.L206:
 836:.\main.c      ****     case('u'):
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 82


 837:.\main.c      ****         initTrackU();
 3722              		.loc 1 837 0
 3723 0190 FFF7FEFF 		bl	initTrackU
 838:.\main.c      ****         track_mode = U_TRACK;
 3724              		.loc 1 838 0
 3725 0194 7E4B     		ldr	r3, .L218
 3726 0196 0222     		movs	r2, #2
 3727 0198 1A70     		strb	r2, [r3]
 839:.\main.c      ****         break;
 3728              		.loc 1 839 0
 3729 019a F6E0     		b	.L194
 3730              	.L208:
 840:.\main.c      ****     case('z'):
 841:.\main.c      ****         track_mode = SQUARE_TRACK;
 3731              		.loc 1 841 0
 3732 019c 7C4B     		ldr	r3, .L218
 3733 019e 0322     		movs	r2, #3
 3734 01a0 1A70     		strb	r2, [r3]
 842:.\main.c      ****         inittrackLineZ();
 3735              		.loc 1 842 0
 3736 01a2 FFF7FEFF 		bl	inittrackLineZ
 843:.\main.c      ****         break;
 3737              		.loc 1 843 0
 3738 01a6 F0E0     		b	.L194
 3739              	.L202:
 844:.\main.c      ****     case('q'):
 845:.\main.c      ****         track_mode = QUAD_STOP;
 3740              		.loc 1 845 0
 3741 01a8 794B     		ldr	r3, .L218
 3742 01aa 0422     		movs	r2, #4
 3743 01ac 1A70     		strb	r2, [r3]
 846:.\main.c      ****         accum_dist = 0;
 3744              		.loc 1 846 0
 3745 01ae 794B     		ldr	r3, .L218+4
 3746 01b0 0022     		movs	r2, #0
 3747 01b2 1A80     		strh	r2, [r3]	@ movhi
 847:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3748              		.loc 1 847 0
 3749 01b4 784B     		ldr	r3, .L218+8
 3750 01b6 1B88     		ldrh	r3, [r3]
 3751 01b8 1BB2     		sxth	r3, r3
 3752 01ba 1846     		mov	r0, r3
 3753 01bc FFF7FEFF 		bl	__aeabi_i2f
 3754 01c0 0246     		mov	r2, r0
 3755 01c2 764B     		ldr	r3, .L218+12
 3756 01c4 1B68     		ldr	r3, [r3]	@ float
 3757 01c6 1046     		mov	r0, r2
 3758 01c8 1946     		mov	r1, r3
 3759 01ca FFF7FEFF 		bl	__aeabi_fmul
 3760 01ce 0346     		mov	r3, r0
 3761 01d0 1846     		mov	r0, r3
 3762 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3763 01d6 0346     		mov	r3, r0
 3764 01d8 9AB2     		uxth	r2, r3
 3765 01da 714B     		ldr	r3, .L218+16
 3766 01dc 1A80     		strh	r2, [r3]	@ movhi
 848:.\main.c      ****         char mes[16];
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 83


 849:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3767              		.loc 1 849 0
 3768 01de 704B     		ldr	r3, .L218+16
 3769 01e0 1B88     		ldrh	r3, [r3]
 3770 01e2 1BB2     		sxth	r3, r3
 3771 01e4 3A1D     		adds	r2, r7, #4
 3772 01e6 1046     		mov	r0, r2
 3773 01e8 6E49     		ldr	r1, .L218+20
 3774 01ea 1A46     		mov	r2, r3
 3775 01ec FFF7FEFF 		bl	sprintf
 850:.\main.c      ****         UART_PutString(mes);
 3776              		.loc 1 850 0
 3777 01f0 3B1D     		adds	r3, r7, #4
 3778 01f2 1846     		mov	r0, r3
 3779 01f4 FFF7FEFF 		bl	UART_PutString
 851:.\main.c      ****         initForward();
 3780              		.loc 1 851 0
 3781 01f8 FFF7FEFF 		bl	initForward
 852:.\main.c      ****         break;
 3782              		.loc 1 852 0
 3783 01fc C5E0     		b	.L194
 3784              	.L203:
 853:.\main.c      ****     case ('r'):
 854:.\main.c      ****         track_mode = RF_STOP;
 3785              		.loc 1 854 0
 3786 01fe 644B     		ldr	r3, .L218
 3787 0200 0522     		movs	r2, #5
 3788 0202 1A70     		strb	r2, [r3]
 855:.\main.c      ****         changeToRF();
 3789              		.loc 1 855 0
 3790 0204 FFF7FEFF 		bl	changeToRF
 856:.\main.c      ****         // Make initial position
 857:.\main.c      ****         initial_pos_valid = 0;
 3791              		.loc 1 857 0
 3792 0208 674B     		ldr	r3, .L218+24
 3793 020a 0022     		movs	r2, #0
 3794 020c 1A70     		strb	r2, [r3]
 858:.\main.c      ****         initBrake();
 3795              		.loc 1 858 0
 3796 020e FFF7FEFF 		bl	initBrake
 859:.\main.c      ****         break;
 3797              		.loc 1 859 0
 3798 0212 BAE0     		b	.L194
 3799              	.L198:
 860:.\main.c      ****     case ('2'):
 861:.\main.c      ****         track_mode = DEST_TEST;
 3800              		.loc 1 861 0
 3801 0214 5E4B     		ldr	r3, .L218
 3802 0216 0622     		movs	r2, #6
 3803 0218 1A70     		strb	r2, [r3]
 862:.\main.c      ****         tracked_direction = robot_direction;
 3804              		.loc 1 862 0
 3805 021a 644B     		ldr	r3, .L218+28
 3806 021c 1B68     		ldr	r3, [r3]
 3807 021e 644A     		ldr	r2, .L218+32
 3808 0220 1360     		str	r3, [r2]
 863:.\main.c      ****         instructionLength = generateDirections();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 84


 3809              		.loc 1 863 0
 3810 0222 FFF7FEFF 		bl	generateDirections
 3811 0226 0346     		mov	r3, r0
 3812 0228 9AB2     		uxth	r2, r3
 3813 022a 624B     		ldr	r3, .L218+36
 3814 022c 1A80     		strh	r2, [r3]	@ movhi
 864:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 865:.\main.c      ****         //char message[128];
 866:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 867:.\main.c      ****         int i = 0;
 3815              		.loc 1 867 0
 3816 022e 0023     		movs	r3, #0
 3817 0230 FB61     		str	r3, [r7, #28]
 868:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3818              		.loc 1 868 0
 3819 0232 0023     		movs	r3, #0
 3820 0234 FB61     		str	r3, [r7, #28]
 3821 0236 18E0     		b	.L210
 3822              	.L213:
 869:.\main.c      ****         {
 870:.\main.c      ****             if(i%2 == 0)
 3823              		.loc 1 870 0
 3824 0238 FB69     		ldr	r3, [r7, #28]
 3825 023a 03F00103 		and	r3, r3, #1
 3826 023e 002B     		cmp	r3, #0
 3827 0240 07D1     		bne	.L211
 871:.\main.c      ****             {
 872:.\main.c      ****                 UART_PutChar(instructions[i]);
 3828              		.loc 1 872 0
 3829 0242 5D4A     		ldr	r2, .L218+40
 3830 0244 FB69     		ldr	r3, [r7, #28]
 3831 0246 1344     		add	r3, r3, r2
 3832 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3833 024a 1846     		mov	r0, r3
 3834 024c FFF7FEFF 		bl	UART_PutChar
 3835 0250 08E0     		b	.L212
 3836              	.L211:
 873:.\main.c      ****             }
 874:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3837              		.loc 1 874 0
 3838 0252 594A     		ldr	r2, .L218+40
 3839 0254 FB69     		ldr	r3, [r7, #28]
 3840 0256 1344     		add	r3, r3, r2
 3841 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3842 025a 3033     		adds	r3, r3, #48
 3843 025c DBB2     		uxtb	r3, r3
 3844 025e 1846     		mov	r0, r3
 3845 0260 FFF7FEFF 		bl	UART_PutChar
 3846              	.L212:
 868:.\main.c      ****         {
 3847              		.loc 1 868 0 discriminator 2
 3848 0264 FB69     		ldr	r3, [r7, #28]
 3849 0266 0133     		adds	r3, r3, #1
 3850 0268 FB61     		str	r3, [r7, #28]
 3851              	.L210:
 868:.\main.c      ****         {
 3852              		.loc 1 868 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 85


 3853 026a 524B     		ldr	r3, .L218+36
 3854 026c 1B88     		ldrh	r3, [r3]
 3855 026e 1A46     		mov	r2, r3
 3856 0270 FB69     		ldr	r3, [r7, #28]
 3857 0272 9A42     		cmp	r2, r3
 3858 0274 E0DC     		bgt	.L213
 875:.\main.c      **** 
 876:.\main.c      ****         }
 877:.\main.c      ****         
 878:.\main.c      ****         UART_PutString("\r\n");
 3859              		.loc 1 878 0 is_stmt 1
 3860 0276 5148     		ldr	r0, .L218+44
 3861 0278 FFF7FEFF 		bl	UART_PutString
 879:.\main.c      ****         
 880:.\main.c      ****         char nextStep = instructions[instructionCount];
 3862              		.loc 1 880 0
 3863 027c 504B     		ldr	r3, .L218+48
 3864 027e 1B88     		ldrh	r3, [r3]
 3865 0280 1A46     		mov	r2, r3
 3866 0282 4D4B     		ldr	r3, .L218+40
 3867 0284 9B5C     		ldrb	r3, [r3, r2]
 3868 0286 BB75     		strb	r3, [r7, #22]
 881:.\main.c      ****         
 882:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 3869              		.loc 1 882 0
 3870 0288 4D4B     		ldr	r3, .L218+48
 3871 028a 1B88     		ldrh	r3, [r3]
 3872 028c 0133     		adds	r3, r3, #1
 3873 028e 4A4A     		ldr	r2, .L218+40
 3874 0290 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3875 0292 9BB2     		uxth	r3, r3
 3876 0294 1A46     		mov	r2, r3	@ movhi
 3877 0296 9200     		lsls	r2, r2, #2
 3878 0298 1344     		add	r3, r3, r2
 3879 029a 1A46     		mov	r2, r3	@ movhi
 3880 029c D200     		lsls	r2, r2, #3
 3881 029e D31A     		subs	r3, r2, r3
 3882 02a0 9B00     		lsls	r3, r3, #2
 3883 02a2 9BB2     		uxth	r3, r3
 3884 02a4 9AB2     		uxth	r2, r3
 3885 02a6 3E4B     		ldr	r3, .L218+16
 3886 02a8 1A80     		strh	r2, [r3]	@ movhi
 883:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 3887              		.loc 1 883 0
 3888 02aa 3D4B     		ldr	r3, .L218+16
 3889 02ac 1B88     		ldrh	r3, [r3]
 3890 02ae 1BB2     		sxth	r3, r3
 3891 02b0 3A1D     		adds	r2, r7, #4
 3892 02b2 1046     		mov	r0, r2
 3893 02b4 4349     		ldr	r1, .L218+52
 3894 02b6 1A46     		mov	r2, r3
 3895 02b8 FFF7FEFF 		bl	sprintf
 884:.\main.c      ****         UART_PutString(mes);
 3896              		.loc 1 884 0
 3897 02bc 3B1D     		adds	r3, r7, #4
 3898 02be 1846     		mov	r0, r3
 3899 02c0 FFF7FEFF 		bl	UART_PutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 86


 885:.\main.c      ****         inittrackLineZ();
 3900              		.loc 1 885 0
 3901 02c4 FFF7FEFF 		bl	inittrackLineZ
 886:.\main.c      ****         break;
 3902              		.loc 1 886 0
 3903 02c8 5FE0     		b	.L194
 3904              	.L196:
 887:.\main.c      ****     case ('1'):
 888:.\main.c      ****         track_mode = DEST_TEST;
 3905              		.loc 1 888 0
 3906 02ca 314B     		ldr	r3, .L218
 3907 02cc 0622     		movs	r2, #6
 3908 02ce 1A70     		strb	r2, [r3]
 889:.\main.c      ****         tracked_direction = robot_direction;
 3909              		.loc 1 889 0
 3910 02d0 364B     		ldr	r3, .L218+28
 3911 02d2 1B68     		ldr	r3, [r3]
 3912 02d4 364A     		ldr	r2, .L218+32
 3913 02d6 1360     		str	r3, [r2]
 890:.\main.c      ****         //instructionLength = generateDirections();
 891:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3914              		.loc 1 891 0
 3915 02d8 FFF7FEFF 		bl	generateEntireMapDirections
 3916 02dc 0346     		mov	r3, r0
 3917 02de 9AB2     		uxth	r2, r3
 3918 02e0 344B     		ldr	r3, .L218+36
 3919 02e2 1A80     		strh	r2, [r3]	@ movhi
 892:.\main.c      ****         //char message[128];
 893:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 894:.\main.c      ****         instructionCount = instructionLength - 22;
 3920              		.loc 1 894 0
 3921 02e4 334B     		ldr	r3, .L218+36
 3922 02e6 1B88     		ldrh	r3, [r3]
 3923 02e8 163B     		subs	r3, r3, #22
 3924 02ea 9AB2     		uxth	r2, r3
 3925 02ec 344B     		ldr	r3, .L218+48
 3926 02ee 1A80     		strh	r2, [r3]	@ movhi
 895:.\main.c      ****         int x;
 896:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 3927              		.loc 1 896 0
 3928 02f0 334B     		ldr	r3, .L218+48
 3929 02f2 1B88     		ldrh	r3, [r3]
 3930 02f4 BB61     		str	r3, [r7, #24]
 3931 02f6 18E0     		b	.L214
 3932              	.L217:
 897:.\main.c      ****         {
 898:.\main.c      ****             if(x%2 == 0)
 3933              		.loc 1 898 0
 3934 02f8 BB69     		ldr	r3, [r7, #24]
 3935 02fa 03F00103 		and	r3, r3, #1
 3936 02fe 002B     		cmp	r3, #0
 3937 0300 07D1     		bne	.L215
 899:.\main.c      ****             {
 900:.\main.c      ****                 UART_PutChar(instructions[x]);
 3938              		.loc 1 900 0
 3939 0302 2D4A     		ldr	r2, .L218+40
 3940 0304 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 87


 3941 0306 1344     		add	r3, r3, r2
 3942 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3943 030a 1846     		mov	r0, r3
 3944 030c FFF7FEFF 		bl	UART_PutChar
 3945 0310 08E0     		b	.L216
 3946              	.L215:
 901:.\main.c      ****             }
 902:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 3947              		.loc 1 902 0
 3948 0312 294A     		ldr	r2, .L218+40
 3949 0314 BB69     		ldr	r3, [r7, #24]
 3950 0316 1344     		add	r3, r3, r2
 3951 0318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 031a 3033     		adds	r3, r3, #48
 3953 031c DBB2     		uxtb	r3, r3
 3954 031e 1846     		mov	r0, r3
 3955 0320 FFF7FEFF 		bl	UART_PutChar
 3956              	.L216:
 896:.\main.c      ****         {
 3957              		.loc 1 896 0 discriminator 2
 3958 0324 BB69     		ldr	r3, [r7, #24]
 3959 0326 0133     		adds	r3, r3, #1
 3960 0328 BB61     		str	r3, [r7, #24]
 3961              	.L214:
 896:.\main.c      ****         {
 3962              		.loc 1 896 0 is_stmt 0 discriminator 1
 3963 032a 224B     		ldr	r3, .L218+36
 3964 032c 1B88     		ldrh	r3, [r3]
 3965 032e 1A46     		mov	r2, r3
 3966 0330 BB69     		ldr	r3, [r7, #24]
 3967 0332 9A42     		cmp	r2, r3
 3968 0334 E0DC     		bgt	.L217
 903:.\main.c      **** 
 904:.\main.c      ****         }
 905:.\main.c      ****         
 906:.\main.c      ****         UART_PutString("\r\n");
 3969              		.loc 1 906 0 is_stmt 1
 3970 0336 2148     		ldr	r0, .L218+44
 3971 0338 FFF7FEFF 		bl	UART_PutString
 907:.\main.c      **** 
 908:.\main.c      ****         nextStep = instructions[instructionCount];
 3972              		.loc 1 908 0
 3973 033c 204B     		ldr	r3, .L218+48
 3974 033e 1B88     		ldrh	r3, [r3]
 3975 0340 1A46     		mov	r2, r3
 3976 0342 1D4B     		ldr	r3, .L218+40
 3977 0344 9B5C     		ldrb	r3, [r3, r2]
 3978 0346 BB75     		strb	r3, [r7, #22]
 909:.\main.c      ****         
 910:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];        
 3979              		.loc 1 910 0
 3980 0348 1D4B     		ldr	r3, .L218+48
 3981 034a 1B88     		ldrh	r3, [r3]
 3982 034c 0133     		adds	r3, r3, #1
 3983 034e 1A4A     		ldr	r2, .L218+40
 3984 0350 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3985 0352 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 88


 3986 0354 1A46     		mov	r2, r3	@ movhi
 3987 0356 9200     		lsls	r2, r2, #2
 3988 0358 1344     		add	r3, r3, r2
 3989 035a 1A46     		mov	r2, r3	@ movhi
 3990 035c D200     		lsls	r2, r2, #3
 3991 035e D31A     		subs	r3, r2, r3
 3992 0360 9B00     		lsls	r3, r3, #2
 3993 0362 9BB2     		uxth	r3, r3
 3994 0364 9AB2     		uxth	r2, r3
 3995 0366 0E4B     		ldr	r3, .L218+16
 3996 0368 1A80     		strh	r2, [r3]	@ movhi
 911:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 3997              		.loc 1 911 0
 3998 036a 0D4B     		ldr	r3, .L218+16
 3999 036c 1B88     		ldrh	r3, [r3]
 4000 036e 1BB2     		sxth	r3, r3
 4001 0370 3A1D     		adds	r2, r7, #4
 4002 0372 1046     		mov	r0, r2
 4003 0374 1349     		ldr	r1, .L218+52
 4004 0376 1A46     		mov	r2, r3
 4005 0378 FFF7FEFF 		bl	sprintf
 912:.\main.c      ****         UART_PutString(mes);
 4006              		.loc 1 912 0
 4007 037c 3B1D     		adds	r3, r7, #4
 4008 037e 1846     		mov	r0, r3
 4009 0380 FFF7FEFF 		bl	UART_PutString
 913:.\main.c      ****         inittrackLineZ();
 4010              		.loc 1 913 0
 4011 0384 FFF7FEFF 		bl	inittrackLineZ
 914:.\main.c      ****         break;
 4012              		.loc 1 914 0
 4013 0388 00BF     		nop
 4014              	.L194:
 4015              	.LBE11:
 915:.\main.c      ****     }
 916:.\main.c      **** }
 4016              		.loc 1 916 0
 4017 038a 2037     		adds	r7, r7, #32
 4018              		.cfi_def_cfa_offset 8
 4019 038c BD46     		mov	sp, r7
 4020              		.cfi_def_cfa_register 13
 4021              		@ sp needed
 4022 038e 80BD     		pop	{r7, pc}
 4023              	.L219:
 4024              		.align	2
 4025              	.L218:
 4026 0390 00000000 		.word	track_mode
 4027 0394 00000000 		.word	accum_dist
 4028 0398 00000000 		.word	target_distance_cm
 4029 039c 00000000 		.word	quad_per_cm
 4030 03a0 00000000 		.word	target_distance_quad
 4031 03a4 C4000000 		.word	.LC9
 4032 03a8 00000000 		.word	initial_pos_valid
 4033 03ac 00000000 		.word	robot_direction
 4034 03b0 00000000 		.word	tracked_direction
 4035 03b4 00000000 		.word	instructionLength
 4036 03b8 00000000 		.word	instructions
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 89


 4037 03bc D8000000 		.word	.LC10
 4038 03c0 00000000 		.word	instructionCount
 4039 03c4 6C000000 		.word	.LC5
 4040              		.cfi_endproc
 4041              	.LFE93:
 4042              		.size	BT_rxInt, .-BT_rxInt
 4043              		.section	.text.changeToRF,"ax",%progbits
 4044              		.align	2
 4045              		.global	changeToRF
 4046              		.thumb
 4047              		.thumb_func
 4048              		.type	changeToRF, %function
 4049              	changeToRF:
 4050              	.LFB94:
 917:.\main.c      **** 
 918:.\main.c      **** 
 919:.\main.c      **** void changeToRF()
 920:.\main.c      **** {
 4051              		.loc 1 920 0
 4052              		.cfi_startproc
 4053              		@ args = 0, pretend = 0, frame = 0
 4054              		@ frame_needed = 1, uses_anonymous_args = 0
 4055 0000 80B5     		push	{r7, lr}
 4056              		.cfi_def_cfa_offset 8
 4057              		.cfi_offset 7, -8
 4058              		.cfi_offset 14, -4
 4059 0002 00AF     		add	r7, sp, #0
 4060              		.cfi_def_cfa_register 7
 921:.\main.c      ****         //disable BT
 922:.\main.c      ****         BT_ENABLED = 0;
 4061              		.loc 1 922 0
 4062 0004 0B4B     		ldr	r3, .L221
 4063 0006 0022     		movs	r2, #0
 4064 0008 1A70     		strb	r2, [r3]
 923:.\main.c      ****         isrRF_RX_Stop();
 4065              		.loc 1 923 0
 4066 000a FFF7FEFF 		bl	isrRF_RX_Stop
 924:.\main.c      ****         UART_Stop();
 4067              		.loc 1 924 0
 4068 000e FFF7FEFF 		bl	UART_Stop
 925:.\main.c      ****         
 926:.\main.c      ****         //enable RF
 927:.\main.c      ****         BIN_ENABLED = 1;
 4069              		.loc 1 927 0
 4070 0012 094B     		ldr	r3, .L221+4
 4071 0014 0122     		movs	r2, #1
 4072 0016 1A70     		strb	r2, [r3]
 928:.\main.c      ****         UART_clk_SetDividerValue(130);
 4073              		.loc 1 928 0
 4074 0018 8120     		movs	r0, #129
 4075 001a 0121     		movs	r1, #1
 4076 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 929:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4077              		.loc 1 929 0
 4078 0020 0648     		ldr	r0, .L221+8
 4079 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 930:.\main.c      ****         UART_Start();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 90


 4080              		.loc 1 930 0
 4081 0026 FFF7FEFF 		bl	UART_Start
 931:.\main.c      ****         RF_BT_SELECT_Write(0);
 4082              		.loc 1 931 0
 4083 002a 0020     		movs	r0, #0
 4084 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 932:.\main.c      **** }
 4085              		.loc 1 932 0
 4086 0030 80BD     		pop	{r7, pc}
 4087              	.L222:
 4088 0032 00BF     		.align	2
 4089              	.L221:
 4090 0034 00000000 		.word	BT_ENABLED
 4091 0038 00000000 		.word	BIN_ENABLED
 4092 003c 00000000 		.word	rxInt
 4093              		.cfi_endproc
 4094              	.LFE94:
 4095              		.size	changeToRF, .-changeToRF
 4096              		.section	.text.changeToBT,"ax",%progbits
 4097              		.align	2
 4098              		.global	changeToBT
 4099              		.thumb
 4100              		.thumb_func
 4101              		.type	changeToBT, %function
 4102              	changeToBT:
 4103              	.LFB95:
 933:.\main.c      **** 
 934:.\main.c      **** void changeToBT()
 935:.\main.c      **** {
 4104              		.loc 1 935 0
 4105              		.cfi_startproc
 4106              		@ args = 0, pretend = 0, frame = 0
 4107              		@ frame_needed = 1, uses_anonymous_args = 0
 4108 0000 80B5     		push	{r7, lr}
 4109              		.cfi_def_cfa_offset 8
 4110              		.cfi_offset 7, -8
 4111              		.cfi_offset 14, -4
 4112 0002 00AF     		add	r7, sp, #0
 4113              		.cfi_def_cfa_register 7
 936:.\main.c      ****         //disable RF
 937:.\main.c      ****         BIN_ENABLED = 0;
 4114              		.loc 1 937 0
 4115 0004 0B4B     		ldr	r3, .L224
 4116 0006 0022     		movs	r2, #0
 4117 0008 1A70     		strb	r2, [r3]
 938:.\main.c      ****         isrRF_RX_Stop();
 4118              		.loc 1 938 0
 4119 000a FFF7FEFF 		bl	isrRF_RX_Stop
 939:.\main.c      ****         UART_Stop();
 4120              		.loc 1 939 0
 4121 000e FFF7FEFF 		bl	UART_Stop
 940:.\main.c      ****         
 941:.\main.c      ****         //enable BT
 942:.\main.c      ****         BT_ENABLED = 1;
 4122              		.loc 1 942 0
 4123 0012 094B     		ldr	r3, .L224+4
 4124 0014 0122     		movs	r2, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 91


 4125 0016 1A70     		strb	r2, [r3]
 943:.\main.c      ****         UART_clk_SetDividerValue(781);
 4126              		.loc 1 943 0
 4127 0018 4FF44370 		mov	r0, #780
 4128 001c 0121     		movs	r1, #1
 4129 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 944:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4130              		.loc 1 944 0
 4131 0022 0648     		ldr	r0, .L224+8
 4132 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 945:.\main.c      ****         UART_Start();
 4133              		.loc 1 945 0
 4134 0028 FFF7FEFF 		bl	UART_Start
 946:.\main.c      ****         RF_BT_SELECT_Write(1);
 4135              		.loc 1 946 0
 4136 002c 0120     		movs	r0, #1
 4137 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 947:.\main.c      **** }
 4138              		.loc 1 947 0
 4139 0032 80BD     		pop	{r7, pc}
 4140              	.L225:
 4141              		.align	2
 4142              	.L224:
 4143 0034 00000000 		.word	BIN_ENABLED
 4144 0038 00000000 		.word	BT_ENABLED
 4145 003c 00000000 		.word	BT_rxInt
 4146              		.cfi_endproc
 4147              	.LFE95:
 4148              		.size	changeToBT, .-changeToBT
 4149              		.section	.text.Quad_Dec_response,"ax",%progbits
 4150              		.align	2
 4151              		.global	Quad_Dec_response
 4152              		.thumb
 4153              		.thumb_func
 4154              		.type	Quad_Dec_response, %function
 4155              	Quad_Dec_response:
 4156              	.LFB96:
 948:.\main.c      **** 
 949:.\main.c      **** 
 950:.\main.c      **** void Quad_Dec_response()
 951:.\main.c      **** {
 4157              		.loc 1 951 0
 4158              		.cfi_startproc
 4159              		@ args = 0, pretend = 0, frame = 32
 4160              		@ frame_needed = 1, uses_anonymous_args = 0
 4161 0000 B0B5     		push	{r4, r5, r7, lr}
 4162              		.cfi_def_cfa_offset 16
 4163              		.cfi_offset 4, -16
 4164              		.cfi_offset 5, -12
 4165              		.cfi_offset 7, -8
 4166              		.cfi_offset 14, -4
 4167 0002 88B0     		sub	sp, sp, #32
 4168              		.cfi_def_cfa_offset 48
 4169 0004 00AF     		add	r7, sp, #0
 4170              		.cfi_def_cfa_register 7
 952:.\main.c      ****     //Check if the flag has been set
 953:.\main.c      ****     if (!flag_calc_wheelspeed) return;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 92


 4171              		.loc 1 953 0
 4172 0006 824B     		ldr	r3, .L234
 4173 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4174 000a 002B     		cmp	r3, #0
 4175 000c 00D1     		bne	.L227
 4176 000e FCE0     		b	.L226
 4177              	.L227:
 954:.\main.c      ****     flag_calc_wheelspeed = 0;
 4178              		.loc 1 954 0
 4179 0010 7F4B     		ldr	r3, .L234
 4180 0012 0022     		movs	r2, #0
 4181 0014 1A70     		strb	r2, [r3]
 955:.\main.c      ****     
 956:.\main.c      ****     //char wheel_1_str [64];
 957:.\main.c      ****     //char wheel_2_str [64];
 958:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 959:.\main.c      ****     //usbPutString(wheel_1_str);
 960:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 961:.\main.c      ****     
 962:.\main.c      ****     //usbPutString(wheel_2_str);
 963:.\main.c      ****     
 964:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4182              		.loc 1 964 0
 4183 0016 7F4B     		ldr	r3, .L234+4
 4184 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4185 001a FB81     		strh	r3, [r7, #14]	@ movhi
 965:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4186              		.loc 1 965 0
 4187 001c 7E4B     		ldr	r3, .L234+8
 4188 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4189 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 966:.\main.c      ****     double scalingLeft = 1;
 4190              		.loc 1 966 0
 4191 0022 4FF00002 		mov	r2, #0
 4192 0026 7D4B     		ldr	r3, .L234+12
 4193 0028 C7E90623 		strd	r2, [r7, #24]
 967:.\main.c      ****     double scalingRight = 1;
 4194              		.loc 1 967 0
 4195 002c 4FF00002 		mov	r2, #0
 4196 0030 7A4B     		ldr	r3, .L234+12
 4197 0032 C7E90423 		strd	r2, [r7, #16]
 968:.\main.c      ****     
 969:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 970:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4198              		.loc 1 970 0
 4199 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4200 003a 002B     		cmp	r3, #0
 4201 003c 0FD1     		bne	.L229
 4202              		.loc 1 970 0 is_stmt 0 discriminator 1
 4203 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4204 0042 002B     		cmp	r3, #0
 4205 0044 0BD1     		bne	.L229
 971:.\main.c      ****        //leftSpeed = 3;
 972:.\main.c      ****         scalingLeft = 2;
 4206              		.loc 1 972 0 is_stmt 1
 4207 0046 4FF00002 		mov	r2, #0
 4208 004a 4FF08043 		mov	r3, #1073741824
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 93


 4209 004e C7E90623 		strd	r2, [r7, #24]
 973:.\main.c      ****         scalingRight = 2;
 4210              		.loc 1 973 0
 4211 0052 4FF00002 		mov	r2, #0
 4212 0056 4FF08043 		mov	r3, #1073741824
 4213 005a C7E90423 		strd	r2, [r7, #16]
 4214              	.L229:
 974:.\main.c      ****     }
 975:.\main.c      **** 
 976:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4215              		.loc 1 976 0
 4216 005e 704B     		ldr	r3, .L234+16
 4217 0060 1B88     		ldrh	r3, [r3]
 4218 0062 1AB2     		sxth	r2, r3
 4219 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4220 0068 002B     		cmp	r3, #0
 4221 006a B8BF     		it	lt
 4222 006c 5B42     		rsblt	r3, r3, #0
 4223 006e D31A     		subs	r3, r2, r3
 4224 0070 BB60     		str	r3, [r7, #8]
 977:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4225              		.loc 1 977 0
 4226 0072 BB68     		ldr	r3, [r7, #8]
 4227 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4228 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4229 007c BB68     		ldr	r3, [r7, #8]
 4230 007e 92FBF3F3 		sdiv	r3, r2, r3
 4231 0082 1846     		mov	r0, r3
 4232 0084 FFF7FEFF 		bl	__aeabi_i2d
 4233 0088 0446     		mov	r4, r0
 4234 008a 0D46     		mov	r5, r1
 4235 008c BB68     		ldr	r3, [r7, #8]
 4236 008e 002B     		cmp	r3, #0
 4237 0090 B8BF     		it	lt
 4238 0092 5B42     		rsblt	r3, r3, #0
 4239 0094 1846     		mov	r0, r3
 4240 0096 FFF7FEFF 		bl	__aeabi_i2d
 4241 009a 0246     		mov	r2, r0
 4242 009c 0B46     		mov	r3, r1
 4243 009e 1046     		mov	r0, r2
 4244 00a0 1946     		mov	r1, r3
 4245 00a2 FFF7FEFF 		bl	sqrt
 4246 00a6 0246     		mov	r2, r0
 4247 00a8 0B46     		mov	r3, r1
 4248 00aa 2046     		mov	r0, r4
 4249 00ac 2946     		mov	r1, r5
 4250 00ae FFF7FEFF 		bl	__aeabi_dmul
 4251 00b2 0246     		mov	r2, r0
 4252 00b4 0B46     		mov	r3, r1
 4253 00b6 1046     		mov	r0, r2
 4254 00b8 1946     		mov	r1, r3
 4255 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4256 00be 0346     		mov	r3, r0
 4257 00c0 7B60     		str	r3, [r7, #4]
 978:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4258              		.loc 1 978 0
 4259 00c2 584B     		ldr	r3, .L234+20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 94


 4260 00c4 1B88     		ldrh	r3, [r3]
 4261 00c6 1BB2     		sxth	r3, r3
 4262 00c8 1846     		mov	r0, r3
 4263 00ca FFF7FEFF 		bl	__aeabi_i2d
 4264 00ce 0446     		mov	r4, r0
 4265 00d0 0D46     		mov	r5, r1
 4266 00d2 7868     		ldr	r0, [r7, #4]
 4267 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4268 00d8 0246     		mov	r2, r0
 4269 00da 0B46     		mov	r3, r1
 4270 00dc 1046     		mov	r0, r2
 4271 00de 1946     		mov	r1, r3
 4272 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4273 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4274 00e8 0246     		mov	r2, r0
 4275 00ea 0B46     		mov	r3, r1
 4276 00ec 2046     		mov	r0, r4
 4277 00ee 2946     		mov	r1, r5
 4278 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4279 00f4 0246     		mov	r2, r0
 4280 00f6 0B46     		mov	r3, r1
 4281 00f8 1046     		mov	r0, r2
 4282 00fa 1946     		mov	r1, r3
 4283 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4284 0100 0346     		mov	r3, r0
 4285 0102 9AB2     		uxth	r2, r3
 4286 0104 474B     		ldr	r3, .L234+20
 4287 0106 1A80     		strh	r2, [r3]	@ movhi
 979:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4288              		.loc 1 979 0
 4289 0108 474B     		ldr	r3, .L234+24
 4290 010a 1B88     		ldrh	r3, [r3]
 4291 010c 1AB2     		sxth	r2, r3
 4292 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4293 0112 002B     		cmp	r3, #0
 4294 0114 B8BF     		it	lt
 4295 0116 5B42     		rsblt	r3, r3, #0
 4296 0118 D31A     		subs	r3, r2, r3
 4297 011a BB60     		str	r3, [r7, #8]
 980:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4298              		.loc 1 980 0
 4299 011c BB68     		ldr	r3, [r7, #8]
 4300 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4301 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4302 0126 BB68     		ldr	r3, [r7, #8]
 4303 0128 92FBF3F3 		sdiv	r3, r2, r3
 4304 012c 1846     		mov	r0, r3
 4305 012e FFF7FEFF 		bl	__aeabi_i2d
 4306 0132 0446     		mov	r4, r0
 4307 0134 0D46     		mov	r5, r1
 4308 0136 BB68     		ldr	r3, [r7, #8]
 4309 0138 002B     		cmp	r3, #0
 4310 013a B8BF     		it	lt
 4311 013c 5B42     		rsblt	r3, r3, #0
 4312 013e 1846     		mov	r0, r3
 4313 0140 FFF7FEFF 		bl	__aeabi_i2d
 4314 0144 0246     		mov	r2, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 95


 4315 0146 0B46     		mov	r3, r1
 4316 0148 1046     		mov	r0, r2
 4317 014a 1946     		mov	r1, r3
 4318 014c FFF7FEFF 		bl	sqrt
 4319 0150 0246     		mov	r2, r0
 4320 0152 0B46     		mov	r3, r1
 4321 0154 2046     		mov	r0, r4
 4322 0156 2946     		mov	r1, r5
 4323 0158 FFF7FEFF 		bl	__aeabi_dmul
 4324 015c 0246     		mov	r2, r0
 4325 015e 0B46     		mov	r3, r1
 4326 0160 1046     		mov	r0, r2
 4327 0162 1946     		mov	r1, r3
 4328 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4329 0168 0346     		mov	r3, r0
 4330 016a 7B60     		str	r3, [r7, #4]
 981:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4331              		.loc 1 981 0
 4332 016c 2F4B     		ldr	r3, .L234+28
 4333 016e 1B88     		ldrh	r3, [r3]
 4334 0170 1BB2     		sxth	r3, r3
 4335 0172 1846     		mov	r0, r3
 4336 0174 FFF7FEFF 		bl	__aeabi_i2d
 4337 0178 0446     		mov	r4, r0
 4338 017a 0D46     		mov	r5, r1
 4339 017c 7868     		ldr	r0, [r7, #4]
 4340 017e FFF7FEFF 		bl	__aeabi_i2d
 4341 0182 0246     		mov	r2, r0
 4342 0184 0B46     		mov	r3, r1
 4343 0186 1046     		mov	r0, r2
 4344 0188 1946     		mov	r1, r3
 4345 018a D7E90423 		ldrd	r2, [r7, #16]
 4346 018e FFF7FEFF 		bl	__aeabi_dmul
 4347 0192 0246     		mov	r2, r0
 4348 0194 0B46     		mov	r3, r1
 4349 0196 2046     		mov	r0, r4
 4350 0198 2946     		mov	r1, r5
 4351 019a FFF7FEFF 		bl	__aeabi_dadd
 4352 019e 0246     		mov	r2, r0
 4353 01a0 0B46     		mov	r3, r1
 4354 01a2 1046     		mov	r0, r2
 4355 01a4 1946     		mov	r1, r3
 4356 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4357 01aa 0346     		mov	r3, r0
 4358 01ac 9AB2     		uxth	r2, r3
 4359 01ae 1F4B     		ldr	r3, .L234+28
 4360 01b0 1A80     		strh	r2, [r3]	@ movhi
 982:.\main.c      ****     
 983:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4361              		.loc 1 983 0
 4362 01b2 1E4B     		ldr	r3, .L234+28
 4363 01b4 1B88     		ldrh	r3, [r3]
 4364 01b6 1BB2     		sxth	r3, r3
 4365 01b8 002B     		cmp	r3, #0
 4366 01ba 02DA     		bge	.L230
 4367              		.loc 1 983 0 is_stmt 0 discriminator 1
 4368 01bc 1B4B     		ldr	r3, .L234+28
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 96


 4369 01be 0022     		movs	r2, #0
 4370 01c0 1A80     		strh	r2, [r3]	@ movhi
 4371              	.L230:
 984:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4372              		.loc 1 984 0 is_stmt 1
 4373 01c2 184B     		ldr	r3, .L234+20
 4374 01c4 1B88     		ldrh	r3, [r3]
 4375 01c6 1BB2     		sxth	r3, r3
 4376 01c8 002B     		cmp	r3, #0
 4377 01ca 02DA     		bge	.L231
 4378              		.loc 1 984 0 is_stmt 0 discriminator 1
 4379 01cc 154B     		ldr	r3, .L234+20
 4380 01ce 0022     		movs	r2, #0
 4381 01d0 1A80     		strh	r2, [r3]	@ movhi
 4382              	.L231:
 985:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4383              		.loc 1 985 0 is_stmt 1
 4384 01d2 164B     		ldr	r3, .L234+28
 4385 01d4 1B88     		ldrh	r3, [r3]
 4386 01d6 1BB2     		sxth	r3, r3
 4387 01d8 642B     		cmp	r3, #100
 4388 01da 02DD     		ble	.L232
 4389              		.loc 1 985 0 is_stmt 0 discriminator 1
 4390 01dc 134B     		ldr	r3, .L234+28
 4391 01de 6422     		movs	r2, #100
 4392 01e0 1A80     		strh	r2, [r3]	@ movhi
 4393              	.L232:
 986:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4394              		.loc 1 986 0 is_stmt 1
 4395 01e2 104B     		ldr	r3, .L234+20
 4396 01e4 1B88     		ldrh	r3, [r3]
 4397 01e6 1BB2     		sxth	r3, r3
 4398 01e8 642B     		cmp	r3, #100
 4399 01ea 02DD     		ble	.L233
 4400              		.loc 1 986 0 is_stmt 0 discriminator 1
 4401 01ec 0D4B     		ldr	r3, .L234+20
 4402 01ee 6422     		movs	r2, #100
 4403 01f0 1A80     		strh	r2, [r3]	@ movhi
 4404              	.L233:
 987:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4405              		.loc 1 987 0 is_stmt 1
 4406 01f2 0C4B     		ldr	r3, .L234+20
 4407 01f4 1B88     		ldrh	r3, [r3]
 4408 01f6 DBB2     		uxtb	r3, r3
 4409 01f8 1846     		mov	r0, r3
 4410 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 988:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4411              		.loc 1 988 0
 4412 01fe 0B4B     		ldr	r3, .L234+28
 4413 0200 1B88     		ldrh	r3, [r3]
 4414 0202 DBB2     		uxtb	r3, r3
 4415 0204 1846     		mov	r0, r3
 4416 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4417              	.L226:
 989:.\main.c      **** }
 4418              		.loc 1 989 0
 4419 020a 2037     		adds	r7, r7, #32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 97


 4420              		.cfi_def_cfa_offset 16
 4421 020c BD46     		mov	sp, r7
 4422              		.cfi_def_cfa_register 13
 4423              		@ sp needed
 4424 020e B0BD     		pop	{r4, r5, r7, pc}
 4425              	.L235:
 4426              		.align	2
 4427              	.L234:
 4428 0210 00000000 		.word	flag_calc_wheelspeed
 4429 0214 00000000 		.word	quad_diff1
 4430 0218 00000000 		.word	quad_diff2
 4431 021c 0000F03F 		.word	1072693248
 4432 0220 00000000 		.word	leftSpeedLimit
 4433 0224 00000000 		.word	left_duty_cycle
 4434 0228 00000000 		.word	rightSpeedLimit
 4435 022c 00000000 		.word	right_duty_cycle
 4436              		.cfi_endproc
 4437              	.LFE96:
 4438              		.size	Quad_Dec_response, .-Quad_Dec_response
 4439              		.section	.text.trackLine,"ax",%progbits
 4440              		.align	2
 4441              		.global	trackLine
 4442              		.thumb
 4443              		.thumb_func
 4444              		.type	trackLine, %function
 4445              	trackLine:
 4446              	.LFB97:
 990:.\main.c      **** 
 991:.\main.c      **** void trackLine()
 992:.\main.c      **** {
 4447              		.loc 1 992 0
 4448              		.cfi_startproc
 4449              		@ args = 0, pretend = 0, frame = 0
 4450              		@ frame_needed = 1, uses_anonymous_args = 0
 4451              		@ link register save eliminated.
 4452 0000 80B4     		push	{r7}
 4453              		.cfi_def_cfa_offset 4
 4454              		.cfi_offset 7, -4
 4455 0002 00AF     		add	r7, sp, #0
 4456              		.cfi_def_cfa_register 7
 993:.\main.c      ****  //removed from implementation
 994:.\main.c      **** }
 4457              		.loc 1 994 0
 4458 0004 BD46     		mov	sp, r7
 4459              		.cfi_def_cfa_register 13
 4460              		@ sp needed
 4461 0006 5DF8047B 		ldr	r7, [sp], #4
 4462              		.cfi_restore 7
 4463              		.cfi_def_cfa_offset 0
 4464 000a 7047     		bx	lr
 4465              		.cfi_endproc
 4466              	.LFE97:
 4467              		.size	trackLine, .-trackLine
 4468              		.global	leftTurnCount
 4469              		.bss
 4470              		.align	1
 4471              		.type	leftTurnCount, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 98


 4472              		.size	leftTurnCount, 2
 4473              	leftTurnCount:
 4474 28e8 0000     		.space	2
 4475              		.global	rightTurnCount
 4476              		.align	1
 4477              		.type	rightTurnCount, %object
 4478              		.size	rightTurnCount, 2
 4479              	rightTurnCount:
 4480 28ea 0000     		.space	2
 4481              		.section	.text.trackLineZ,"ax",%progbits
 4482              		.align	2
 4483              		.global	trackLineZ
 4484              		.thumb
 4485              		.thumb_func
 4486              		.type	trackLineZ, %function
 4487              	trackLineZ:
 4488              	.LFB98:
 995:.\main.c      **** uint16 leftTurnCount = 0;
 996:.\main.c      **** uint16 rightTurnCount = 0;
 997:.\main.c      **** void trackLineZ()
 998:.\main.c      **** {
 4489              		.loc 1 998 0
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 8
 4492              		@ frame_needed = 1, uses_anonymous_args = 0
 4493 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4494              		.cfi_def_cfa_offset 24
 4495              		.cfi_offset 4, -24
 4496              		.cfi_offset 5, -20
 4497              		.cfi_offset 7, -16
 4498              		.cfi_offset 8, -12
 4499              		.cfi_offset 9, -8
 4500              		.cfi_offset 14, -4
 4501 0004 82B0     		sub	sp, sp, #8
 4502              		.cfi_def_cfa_offset 32
 4503 0006 00AF     		add	r7, sp, #0
 4504              		.cfi_def_cfa_register 7
 999:.\main.c      ****     //read the value of the three central-front sensors
1000:.\main.c      ****     
1001:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4505              		.loc 1 1001 0
 4506 0008 FFF7FEFF 		bl	NLSens_out_Read
 4507 000c 0346     		mov	r3, r0
 4508 000e FB71     		strb	r3, [r7, #7]
1002:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4509              		.loc 1 1002 0
 4510 0010 FFF7FEFF 		bl	NRSens_out_Read
 4511 0014 0346     		mov	r3, r0
 4512 0016 BB71     		strb	r3, [r7, #6]
1003:.\main.c      ****     uint8 mid = MSens_out_Read();
 4513              		.loc 1 1003 0
 4514 0018 FFF7FEFF 		bl	MSens_out_Read
 4515 001c 0346     		mov	r3, r0
 4516 001e 7B71     		strb	r3, [r7, #5]
1004:.\main.c      ****     
1005:.\main.c      ****         //if only the left one, hard left
1006:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 99


 4517              		.loc 1 1006 0
 4518 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4519 0022 002B     		cmp	r3, #0
 4520 0024 27D0     		beq	.L238
 4521              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4522 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4523 0028 002B     		cmp	r3, #0
 4524 002a 24D1     		bne	.L238
 4525              		.loc 1 1006 0 discriminator 2
 4526 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4527 002e 002B     		cmp	r3, #0
 4528 0030 21D1     		bne	.L238
1007:.\main.c      ****     {
1008:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4529              		.loc 1 1008 0 is_stmt 1
 4530 0032 454B     		ldr	r3, .L243+8
 4531 0034 D3E90023 		ldrd	r2, [r3]
 4532 0038 1046     		mov	r0, r2
 4533 003a 1946     		mov	r1, r3
 4534 003c 40A3     		adr	r3, .L243
 4535 003e D3E90023 		ldrd	r2, [r3]
 4536 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4537 0046 0246     		mov	r2, r0
 4538 0048 0B46     		mov	r3, r1
 4539 004a 1446     		mov	r4, r2
 4540 004c 1D46     		mov	r5, r3
 4541 004e 3E4B     		ldr	r3, .L243+8
 4542 0050 D3E90023 		ldrd	r2, [r3]
 4543 0054 9046     		mov	r8, r2
 4544 0056 83F00049 		eor	r9, r3, #-2147483648
 4545 005a 4046     		mov	r0, r8
 4546 005c 4946     		mov	r1, r9
 4547 005e 38A3     		adr	r3, .L243
 4548 0060 D3E90023 		ldrd	r2, [r3]
 4549 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4550 0068 0246     		mov	r2, r0
 4551 006a 0B46     		mov	r3, r1
 4552 006c 2046     		mov	r0, r4
 4553 006e 2946     		mov	r1, r5
 4554 0070 FFF7FEFF 		bl	setSpeed
 4555 0074 5FE0     		b	.L237
 4556              	.L238:
1009:.\main.c      ****     }
1010:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4557              		.loc 1 1010 0
 4558 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4559 0078 002B     		cmp	r3, #0
 4560 007a 0ED0     		beq	.L240
 4561              		.loc 1 1010 0 is_stmt 0 discriminator 1
 4562 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4563 007e 002B     		cmp	r3, #0
 4564 0080 0BD0     		beq	.L240
 4565              		.loc 1 1010 0 discriminator 2
 4566 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4567 0084 002B     		cmp	r3, #0
 4568 0086 08D1     		bne	.L240
1011:.\main.c      ****     {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 100


1012:.\main.c      ****         setSpeed(speed,speed);
 4569              		.loc 1 1012 0 is_stmt 1
 4570 0088 2F4B     		ldr	r3, .L243+8
 4571 008a D3E90001 		ldrd	r0, [r3]
 4572 008e 2E4B     		ldr	r3, .L243+8
 4573 0090 D3E90023 		ldrd	r2, [r3]
 4574 0094 FFF7FEFF 		bl	setSpeed
 4575 0098 4DE0     		b	.L237
 4576              	.L240:
1013:.\main.c      ****     }
1014:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4577              		.loc 1 1014 0
 4578 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4579 009c 002B     		cmp	r3, #0
 4580 009e 0ED0     		beq	.L241
 4581              		.loc 1 1014 0 is_stmt 0 discriminator 1
 4582 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4583 00a2 002B     		cmp	r3, #0
 4584 00a4 0BD0     		beq	.L241
 4585              		.loc 1 1014 0 discriminator 2
 4586 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4587 00a8 002B     		cmp	r3, #0
 4588 00aa 08D1     		bne	.L241
1015:.\main.c      ****     {
1016:.\main.c      ****         setSpeed(speed ,speed);
 4589              		.loc 1 1016 0 is_stmt 1
 4590 00ac 264B     		ldr	r3, .L243+8
 4591 00ae D3E90001 		ldrd	r0, [r3]
 4592 00b2 254B     		ldr	r3, .L243+8
 4593 00b4 D3E90023 		ldrd	r2, [r3]
 4594 00b8 FFF7FEFF 		bl	setSpeed
 4595 00bc 3BE0     		b	.L237
 4596              	.L241:
1017:.\main.c      ****     }
1018:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4597              		.loc 1 1018 0
 4598 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4599 00c0 002B     		cmp	r3, #0
 4600 00c2 27D0     		beq	.L242
 4601              		.loc 1 1018 0 is_stmt 0 discriminator 1
 4602 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4603 00c6 002B     		cmp	r3, #0
 4604 00c8 24D1     		bne	.L242
 4605              		.loc 1 1018 0 discriminator 2
 4606 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4607 00cc 002B     		cmp	r3, #0
 4608 00ce 21D1     		bne	.L242
1019:.\main.c      ****     {
1020:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4609              		.loc 1 1020 0 is_stmt 1
 4610 00d0 1D4B     		ldr	r3, .L243+8
 4611 00d2 D3E90023 		ldrd	r2, [r3]
 4612 00d6 1446     		mov	r4, r2
 4613 00d8 83F00045 		eor	r5, r3, #-2147483648
 4614 00dc 2046     		mov	r0, r4
 4615 00de 2946     		mov	r1, r5
 4616 00e0 17A3     		adr	r3, .L243
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 101


 4617 00e2 D3E90023 		ldrd	r2, [r3]
 4618 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4619 00ea 0246     		mov	r2, r0
 4620 00ec 0B46     		mov	r3, r1
 4621 00ee 1446     		mov	r4, r2
 4622 00f0 1D46     		mov	r5, r3
 4623 00f2 154B     		ldr	r3, .L243+8
 4624 00f4 D3E90023 		ldrd	r2, [r3]
 4625 00f8 1046     		mov	r0, r2
 4626 00fa 1946     		mov	r1, r3
 4627 00fc 10A3     		adr	r3, .L243
 4628 00fe D3E90023 		ldrd	r2, [r3]
 4629 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4630 0106 0246     		mov	r2, r0
 4631 0108 0B46     		mov	r3, r1
 4632 010a 2046     		mov	r0, r4
 4633 010c 2946     		mov	r1, r5
 4634 010e FFF7FEFF 		bl	setSpeed
 4635 0112 10E0     		b	.L237
 4636              	.L242:
1021:.\main.c      ****     }
1022:.\main.c      ****     else if (mid && !nr && !nl)
 4637              		.loc 1 1022 0
 4638 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4639 0116 002B     		cmp	r3, #0
 4640 0118 0DD0     		beq	.L237
 4641              		.loc 1 1022 0 is_stmt 0 discriminator 1
 4642 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4643 011c 002B     		cmp	r3, #0
 4644 011e 0AD1     		bne	.L237
 4645              		.loc 1 1022 0 discriminator 2
 4646 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4647 0122 002B     		cmp	r3, #0
 4648 0124 07D1     		bne	.L237
1023:.\main.c      ****     {
1024:.\main.c      ****         setSpeed(speed,speed);
 4649              		.loc 1 1024 0 is_stmt 1
 4650 0126 084B     		ldr	r3, .L243+8
 4651 0128 D3E90001 		ldrd	r0, [r3]
 4652 012c 064B     		ldr	r3, .L243+8
 4653 012e D3E90023 		ldrd	r2, [r3]
 4654 0132 FFF7FEFF 		bl	setSpeed
 4655              	.L237:
1025:.\main.c      ****     }
1026:.\main.c      **** }
 4656              		.loc 1 1026 0
 4657 0136 0837     		adds	r7, r7, #8
 4658              		.cfi_def_cfa_offset 24
 4659 0138 BD46     		mov	sp, r7
 4660              		.cfi_def_cfa_register 13
 4661              		@ sp needed
 4662 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4663              	.L244:
 4664 013e 00BF     		.align	3
 4665              	.L243:
 4666 0140 9A999999 		.word	-1717986918
 4667 0144 9999F93F 		.word	1073322393
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 102


 4668 0148 00000000 		.word	speed
 4669              		.cfi_endproc
 4670              	.LFE98:
 4671              		.size	trackLineZ, .-trackLineZ
 4672 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4673              		.align	2
 4674              		.global	trackLineU
 4675              		.thumb
 4676              		.thumb_func
 4677              		.type	trackLineU, %function
 4678              	trackLineU:
 4679              	.LFB99:
1027:.\main.c      **** 
1028:.\main.c      **** 
1029:.\main.c      **** void trackLineU()
1030:.\main.c      **** { 
 4680              		.loc 1 1030 0
 4681              		.cfi_startproc
 4682              		@ args = 0, pretend = 0, frame = 0
 4683              		@ frame_needed = 1, uses_anonymous_args = 0
 4684              		@ link register save eliminated.
 4685 0000 80B4     		push	{r7}
 4686              		.cfi_def_cfa_offset 4
 4687              		.cfi_offset 7, -4
 4688 0002 00AF     		add	r7, sp, #0
 4689              		.cfi_def_cfa_register 7
1031:.\main.c      **** //removed from final implementation
1032:.\main.c      **** }
 4690              		.loc 1 1032 0
 4691 0004 BD46     		mov	sp, r7
 4692              		.cfi_def_cfa_register 13
 4693              		@ sp needed
 4694 0006 5DF8047B 		ldr	r7, [sp], #4
 4695              		.cfi_restore 7
 4696              		.cfi_def_cfa_offset 0
 4697 000a 7047     		bx	lr
 4698              		.cfi_endproc
 4699              	.LFE99:
 4700              		.size	trackLineU, .-trackLineU
 4701              		.global	__aeabi_fadd
 4702              		.section	.rodata
 4703 00db 00       		.align	2
 4704              	.LC11:
 4705 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4705      65727920 
 4705      566F6C74 
 4705      6167653A 
 4705      2025646D 
 4706              		.section	.text.print_ADC,"ax",%progbits
 4707              		.align	2
 4708              		.global	print_ADC
 4709              		.thumb
 4710              		.thumb_func
 4711              		.type	print_ADC, %function
 4712              	print_ADC:
 4713              	.LFB100:
1033:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 103


1034:.\main.c      **** void print_ADC()
1035:.\main.c      **** {
 4714              		.loc 1 1035 0
 4715              		.cfi_startproc
 4716              		@ args = 0, pretend = 0, frame = 24
 4717              		@ frame_needed = 1, uses_anonymous_args = 0
 4718 0000 80B5     		push	{r7, lr}
 4719              		.cfi_def_cfa_offset 8
 4720              		.cfi_offset 7, -8
 4721              		.cfi_offset 14, -4
 4722 0002 86B0     		sub	sp, sp, #24
 4723              		.cfi_def_cfa_offset 32
 4724 0004 00AF     		add	r7, sp, #0
 4725              		.cfi_def_cfa_register 7
1036:.\main.c      ****    //usbPutString("HII\n");
1037:.\main.c      ****     if(flag_receive_ADC == 1)
 4726              		.loc 1 1037 0
 4727 0006 274B     		ldr	r3, .L249
 4728 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4729 000a 012B     		cmp	r3, #1
 4730 000c 46D1     		bne	.L246
 4731              	.LBB12:
1038:.\main.c      ****     {
1039:.\main.c      ****         //usbPutString("AAA\r\n");
1040:.\main.c      ****         flag_receive_ADC = 0;
 4732              		.loc 1 1040 0
 4733 000e 254B     		ldr	r3, .L249
 4734 0010 0022     		movs	r2, #0
 4735 0012 1A70     		strb	r2, [r3]
1041:.\main.c      ****         
1042:.\main.c      ****        // int8 channel = ADC_
1043:.\main.c      ****         float scalingFactor = 0.972;
 4736              		.loc 1 1043 0
 4737 0014 244B     		ldr	r3, .L249+4
 4738 0016 7B61     		str	r3, [r7, #20]	@ float
1044:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4739              		.loc 1 1044 0
 4740 0018 244B     		ldr	r3, .L249+8
 4741 001a 1B88     		ldrh	r3, [r3]
 4742 001c 1BB2     		sxth	r3, r3
 4743 001e 41F28832 		movw	r2, #5000
 4744 0022 02FB03F3 		mul	r3, r2, r3
 4745 0026 002B     		cmp	r3, #0
 4746 0028 01DA     		bge	.L248
 4747 002a 03F6FF73 		addw	r3, r3, #4095
 4748              	.L248:
 4749 002e 1B13     		asrs	r3, r3, #12
 4750 0030 1846     		mov	r0, r3
 4751 0032 FFF7FEFF 		bl	__aeabi_i2f
 4752 0036 0346     		mov	r3, r0
 4753 0038 1846     		mov	r0, r3
 4754 003a 7969     		ldr	r1, [r7, #20]	@ float
 4755 003c FFF7FEFF 		bl	__aeabi_fmul
 4756 0040 0346     		mov	r3, r0
 4757 0042 1846     		mov	r0, r3
 4758 0044 1946     		mov	r1, r3
 4759 0046 FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 104


 4760 004a 0346     		mov	r3, r0
 4761 004c 1846     		mov	r0, r3
 4762 004e FFF7FEFF 		bl	__aeabi_f2iz
 4763 0052 0346     		mov	r3, r0
 4764 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1045:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4765              		.loc 1 1045 0
 4766 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4767 005a 154B     		ldr	r3, .L249+12
 4768 005c 1B88     		ldrh	r3, [r3]
 4769 005e 1BB2     		sxth	r3, r3
 4770 0060 1A44     		add	r2, r2, r3
 4771 0062 144B     		ldr	r3, .L249+16
 4772 0064 1B88     		ldrh	r3, [r3]
 4773 0066 1BB2     		sxth	r3, r3
 4774 0068 1344     		add	r3, r3, r2
 4775 006a 134A     		ldr	r2, .L249+20
 4776 006c 82FB0312 		smull	r1, r2, r2, r3
 4777 0070 DB17     		asrs	r3, r3, #31
 4778 0072 D31A     		subs	r3, r2, r3
 4779 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1046:.\main.c      ****         prevVoltage2 = prevVoltage;
 4780              		.loc 1 1046 0
 4781 0076 0E4B     		ldr	r3, .L249+12
 4782 0078 1A88     		ldrh	r2, [r3]
 4783 007a 0E4B     		ldr	r3, .L249+16
 4784 007c 1A80     		strh	r2, [r3]	@ movhi
1047:.\main.c      ****         prevVoltage = converted_val;
 4785              		.loc 1 1047 0
 4786 007e 0C4A     		ldr	r2, .L249+12
 4787 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4788 0082 1380     		strh	r3, [r2]	@ movhi
1048:.\main.c      ****         
1049:.\main.c      ****         char result_str[16];
1050:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4789              		.loc 1 1050 0
 4790 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4791 0088 3A46     		mov	r2, r7
 4792 008a 1046     		mov	r0, r2
 4793 008c 0B49     		ldr	r1, .L249+24
 4794 008e 1A46     		mov	r2, r3
 4795 0090 FFF7FEFF 		bl	sprintf
1051:.\main.c      ****         
1052:.\main.c      ****         usbPutString(result_str);
 4796              		.loc 1 1052 0
 4797 0094 3B46     		mov	r3, r7
 4798 0096 1846     		mov	r0, r3
 4799 0098 FFF7FEFF 		bl	usbPutString
 4800              	.L246:
 4801              	.LBE12:
1053:.\main.c      ****     }
1054:.\main.c      **** }
 4802              		.loc 1 1054 0
 4803 009c 1837     		adds	r7, r7, #24
 4804              		.cfi_def_cfa_offset 8
 4805 009e BD46     		mov	sp, r7
 4806              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 105


 4807              		@ sp needed
 4808 00a0 80BD     		pop	{r7, pc}
 4809              	.L250:
 4810 00a2 00BF     		.align	2
 4811              	.L249:
 4812 00a4 00000000 		.word	flag_receive_ADC
 4813 00a8 FED4783F 		.word	1064883454
 4814 00ac 00000000 		.word	adc_result
 4815 00b0 00000000 		.word	prevVoltage
 4816 00b4 00000000 		.word	prevVoltage2
 4817 00b8 56555555 		.word	1431655766
 4818 00bc DC000000 		.word	.LC11
 4819              		.cfi_endproc
 4820              	.LFE100:
 4821              		.size	print_ADC, .-print_ADC
 4822              		.section	.rodata
 4823              		.align	2
 4824              	.LC12:
 4825 00f4 52535349 		.ascii	"RSSI:\000"
 4825      3A00
 4826 00fa 0000     		.align	2
 4827              	.LC13:
 4828 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4828      00
 4829 0101 000000   		.align	2
 4830              	.LC14:
 4831 0104 726F626F 		.ascii	"robot_x:\000"
 4831      745F783A 
 4831      00
 4832 010d 000000   		.align	2
 4833              	.LC15:
 4834 0110 726F626F 		.ascii	"robot_y:\000"
 4834      745F793A 
 4834      00
 4835 0119 000000   		.align	2
 4836              	.LC16:
 4837 011c 726F626F 		.ascii	"robot_dir:\000"
 4837      745F6469 
 4837      723A00
 4838 0127 00       		.section	.text.print_RF,"ax",%progbits
 4839              		.align	2
 4840              		.global	print_RF
 4841              		.thumb
 4842              		.thumb_func
 4843              		.type	print_RF, %function
 4844              	print_RF:
 4845              	.LFB101:
1055:.\main.c      **** 
1056:.\main.c      **** void print_RF()
1057:.\main.c      **** {
 4846              		.loc 1 1057 0
 4847              		.cfi_startproc
 4848              		@ args = 0, pretend = 0, frame = 16
 4849              		@ frame_needed = 1, uses_anonymous_args = 0
 4850 0000 80B5     		push	{r7, lr}
 4851              		.cfi_def_cfa_offset 8
 4852              		.cfi_offset 7, -8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 106


 4853              		.cfi_offset 14, -4
 4854 0002 84B0     		sub	sp, sp, #16
 4855              		.cfi_def_cfa_offset 24
 4856 0004 00AF     		add	r7, sp, #0
 4857              		.cfi_def_cfa_register 7
1058:.\main.c      ****     if(flag_print_rf == 1)
 4858              		.loc 1 1058 0
 4859 0006 254B     		ldr	r3, .L253
 4860 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4861 000a 012B     		cmp	r3, #1
 4862 000c 42D1     		bne	.L251
 4863              	.LBB13:
1059:.\main.c      ****     {
1060:.\main.c      ****         char printString[16];
1061:.\main.c      ****         flag_print_rf = 0;
 4864              		.loc 1 1061 0
 4865 000e 234B     		ldr	r3, .L253
 4866 0010 0022     		movs	r2, #0
 4867 0012 1A70     		strb	r2, [r3]
1062:.\main.c      ****         usbPutString("RSSI:");
 4868              		.loc 1 1062 0
 4869 0014 2248     		ldr	r0, .L253+4
 4870 0016 FFF7FEFF 		bl	usbPutString
1063:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4871              		.loc 1 1063 0
 4872 001a 224B     		ldr	r3, .L253+8
 4873 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4874 001e 5BB2     		sxtb	r3, r3
 4875 0020 3A46     		mov	r2, r7
 4876 0022 1046     		mov	r0, r2
 4877 0024 2049     		ldr	r1, .L253+12
 4878 0026 1A46     		mov	r2, r3
 4879 0028 FFF7FEFF 		bl	sprintf
1064:.\main.c      ****         usbPutString(printString);
 4880              		.loc 1 1064 0
 4881 002c 3B46     		mov	r3, r7
 4882 002e 1846     		mov	r0, r3
 4883 0030 FFF7FEFF 		bl	usbPutString
1065:.\main.c      ****         usbPutString("robot_x:");
 4884              		.loc 1 1065 0
 4885 0034 1D48     		ldr	r0, .L253+16
 4886 0036 FFF7FEFF 		bl	usbPutString
1066:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4887              		.loc 1 1066 0
 4888 003a 1A4B     		ldr	r3, .L253+8
 4889 003c 5B88     		ldrh	r3, [r3, #2]
 4890 003e 1BB2     		sxth	r3, r3
 4891 0040 3A46     		mov	r2, r7
 4892 0042 1046     		mov	r0, r2
 4893 0044 1849     		ldr	r1, .L253+12
 4894 0046 1A46     		mov	r2, r3
 4895 0048 FFF7FEFF 		bl	sprintf
1067:.\main.c      ****         usbPutString(printString);
 4896              		.loc 1 1067 0
 4897 004c 3B46     		mov	r3, r7
 4898 004e 1846     		mov	r0, r3
 4899 0050 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 107


1068:.\main.c      ****         usbPutString("robot_y:");
 4900              		.loc 1 1068 0
 4901 0054 1648     		ldr	r0, .L253+20
 4902 0056 FFF7FEFF 		bl	usbPutString
1069:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4903              		.loc 1 1069 0
 4904 005a 124B     		ldr	r3, .L253+8
 4905 005c 9B88     		ldrh	r3, [r3, #4]
 4906 005e 1BB2     		sxth	r3, r3
 4907 0060 3A46     		mov	r2, r7
 4908 0062 1046     		mov	r0, r2
 4909 0064 1049     		ldr	r1, .L253+12
 4910 0066 1A46     		mov	r2, r3
 4911 0068 FFF7FEFF 		bl	sprintf
1070:.\main.c      ****         usbPutString(printString);
 4912              		.loc 1 1070 0
 4913 006c 3B46     		mov	r3, r7
 4914 006e 1846     		mov	r0, r3
 4915 0070 FFF7FEFF 		bl	usbPutString
1071:.\main.c      ****         usbPutString("robot_dir:");
 4916              		.loc 1 1071 0
 4917 0074 0F48     		ldr	r0, .L253+24
 4918 0076 FFF7FEFF 		bl	usbPutString
1072:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4919              		.loc 1 1072 0
 4920 007a 0A4B     		ldr	r3, .L253+8
 4921 007c DB88     		ldrh	r3, [r3, #6]
 4922 007e 1BB2     		sxth	r3, r3
 4923 0080 3A46     		mov	r2, r7
 4924 0082 1046     		mov	r0, r2
 4925 0084 0849     		ldr	r1, .L253+12
 4926 0086 1A46     		mov	r2, r3
 4927 0088 FFF7FEFF 		bl	sprintf
1073:.\main.c      ****         usbPutString(printString);
 4928              		.loc 1 1073 0
 4929 008c 3B46     		mov	r3, r7
 4930 008e 1846     		mov	r0, r3
 4931 0090 FFF7FEFF 		bl	usbPutString
 4932              	.L251:
 4933              	.LBE13:
1074:.\main.c      ****     }
1075:.\main.c      **** }
 4934              		.loc 1 1075 0
 4935 0094 1037     		adds	r7, r7, #16
 4936              		.cfi_def_cfa_offset 8
 4937 0096 BD46     		mov	sp, r7
 4938              		.cfi_def_cfa_register 13
 4939              		@ sp needed
 4940 0098 80BD     		pop	{r7, pc}
 4941              	.L254:
 4942 009a 00BF     		.align	2
 4943              	.L253:
 4944 009c 00000000 		.word	flag_print_rf
 4945 00a0 F4000000 		.word	.LC12
 4946 00a4 00000000 		.word	system_state
 4947 00a8 FC000000 		.word	.LC13
 4948 00ac 04010000 		.word	.LC14
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 108


 4949 00b0 10010000 		.word	.LC15
 4950 00b4 1C010000 		.word	.LC16
 4951              		.cfi_endproc
 4952              	.LFE101:
 4953              		.size	print_RF, .-print_RF
 4954              		.section	.text.readFrontSensors,"ax",%progbits
 4955              		.align	2
 4956              		.global	readFrontSensors
 4957              		.thumb
 4958              		.thumb_func
 4959              		.type	readFrontSensors, %function
 4960              	readFrontSensors:
 4961              	.LFB102:
1076:.\main.c      **** 
1077:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1078:.\main.c      **** {
 4962              		.loc 1 1078 0
 4963              		.cfi_startproc
 4964              		@ args = 0, pretend = 0, frame = 8
 4965              		@ frame_needed = 1, uses_anonymous_args = 0
 4966 0000 90B5     		push	{r4, r7, lr}
 4967              		.cfi_def_cfa_offset 12
 4968              		.cfi_offset 4, -12
 4969              		.cfi_offset 7, -8
 4970              		.cfi_offset 14, -4
 4971 0002 83B0     		sub	sp, sp, #12
 4972              		.cfi_def_cfa_offset 24
 4973 0004 00AF     		add	r7, sp, #0
 4974              		.cfi_def_cfa_register 7
 4975 0006 7860     		str	r0, [r7, #4]
1079:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4976              		.loc 1 1079 0
 4977 0008 FFF7FEFF 		bl	FLSens_out_Read
 4978 000c 0346     		mov	r3, r0
 4979 000e 1A46     		mov	r2, r3
 4980 0010 7B68     		ldr	r3, [r7, #4]
 4981 0012 1A70     		strb	r2, [r3]
1080:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4982              		.loc 1 1080 0
 4983 0014 7B68     		ldr	r3, [r7, #4]
 4984 0016 5C1C     		adds	r4, r3, #1
 4985 0018 FFF7FEFF 		bl	NLSens_out_Read
 4986 001c 0346     		mov	r3, r0
 4987 001e 2370     		strb	r3, [r4]
1081:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4988              		.loc 1 1081 0
 4989 0020 7B68     		ldr	r3, [r7, #4]
 4990 0022 9C1C     		adds	r4, r3, #2
 4991 0024 FFF7FEFF 		bl	MSens_out_Read
 4992 0028 0346     		mov	r3, r0
 4993 002a 2370     		strb	r3, [r4]
1082:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4994              		.loc 1 1082 0
 4995 002c 7B68     		ldr	r3, [r7, #4]
 4996 002e DC1C     		adds	r4, r3, #3
 4997 0030 FFF7FEFF 		bl	NRSens_out_Read
 4998 0034 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 109


 4999 0036 2370     		strb	r3, [r4]
1083:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5000              		.loc 1 1083 0
 5001 0038 7B68     		ldr	r3, [r7, #4]
 5002 003a 1C1D     		adds	r4, r3, #4
 5003 003c FFF7FEFF 		bl	FRSens_out_Read
 5004 0040 0346     		mov	r3, r0
 5005 0042 2370     		strb	r3, [r4]
1084:.\main.c      **** }
 5006              		.loc 1 1084 0
 5007 0044 0C37     		adds	r7, r7, #12
 5008              		.cfi_def_cfa_offset 12
 5009 0046 BD46     		mov	sp, r7
 5010              		.cfi_def_cfa_register 13
 5011              		@ sp needed
 5012 0048 90BD     		pop	{r4, r7, pc}
 5013              		.cfi_endproc
 5014              	.LFE102:
 5015              		.size	readFrontSensors, .-readFrontSensors
 5016 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5017              		.align	2
 5018              		.global	usbPutString
 5019              		.thumb
 5020              		.thumb_func
 5021              		.type	usbPutString, %function
 5022              	usbPutString:
 5023              	.LFB103:
1085:.\main.c      **** 
1086:.\main.c      **** 
1087:.\main.c      **** //* ========================================
1088:.\main.c      **** void usbPutString(char *s)
1089:.\main.c      **** {
 5024              		.loc 1 1089 0
 5025              		.cfi_startproc
 5026              		@ args = 0, pretend = 0, frame = 16
 5027              		@ frame_needed = 1, uses_anonymous_args = 0
 5028 0000 80B5     		push	{r7, lr}
 5029              		.cfi_def_cfa_offset 8
 5030              		.cfi_offset 7, -8
 5031              		.cfi_offset 14, -4
 5032 0002 84B0     		sub	sp, sp, #16
 5033              		.cfi_def_cfa_offset 24
 5034 0004 00AF     		add	r7, sp, #0
 5035              		.cfi_def_cfa_register 7
 5036 0006 7860     		str	r0, [r7, #4]
1090:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1091:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1092:.\main.c      **** //  length to 62 char (63rd char is a '!')
1093:.\main.c      ****     if (USE_USB && portOpen)
 5037              		.loc 1 1093 0
 5038 0008 154B     		ldr	r3, .L260
 5039 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5040 000c 002B     		cmp	r3, #0
 5041 000e 23D0     		beq	.L256
 5042              	.LBB14:
1094:.\main.c      ****     {
1095:.\main.c      ****             uint32 cnt = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 110


 5043              		.loc 1 1095 0
 5044 0010 0023     		movs	r3, #0
 5045 0012 FB60     		str	r3, [r7, #12]
1096:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5046              		.loc 1 1096 0
 5047 0014 0AE0     		b	.L258
 5048              	.L259:
1097:.\main.c      ****             {
1098:.\main.c      ****                 cnt++;
 5049              		.loc 1 1098 0
 5050 0016 FB68     		ldr	r3, [r7, #12]
 5051 0018 0133     		adds	r3, r3, #1
 5052 001a FB60     		str	r3, [r7, #12]
1099:.\main.c      ****                 if(cnt == 3000000){
 5053              		.loc 1 1099 0
 5054 001c FB68     		ldr	r3, [r7, #12]
 5055 001e 114A     		ldr	r2, .L260+4
 5056 0020 9342     		cmp	r3, r2
 5057 0022 03D1     		bne	.L258
1100:.\main.c      ****                     portOpen = 0;
 5058              		.loc 1 1100 0
 5059 0024 0E4B     		ldr	r3, .L260
 5060 0026 0022     		movs	r2, #0
 5061 0028 1A70     		strb	r2, [r3]
1101:.\main.c      ****                     return;
 5062              		.loc 1 1101 0
 5063 002a 15E0     		b	.L256
 5064              	.L258:
1096:.\main.c      ****             {
 5065              		.loc 1 1096 0
 5066 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5067 0030 0346     		mov	r3, r0
 5068 0032 002B     		cmp	r3, #0
 5069 0034 EFD0     		beq	.L259
1102:.\main.c      ****                 }
1103:.\main.c      ****             }
1104:.\main.c      ****             s[63]='\0';
 5070              		.loc 1 1104 0
 5071 0036 7B68     		ldr	r3, [r7, #4]
 5072 0038 3F33     		adds	r3, r3, #63
 5073 003a 0022     		movs	r2, #0
 5074 003c 1A70     		strb	r2, [r3]
1105:.\main.c      ****             s[62]='!';
 5075              		.loc 1 1105 0
 5076 003e 7B68     		ldr	r3, [r7, #4]
 5077 0040 3E33     		adds	r3, r3, #62
 5078 0042 2122     		movs	r2, #33
 5079 0044 1A70     		strb	r2, [r3]
1106:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5080              		.loc 1 1106 0
 5081 0046 7868     		ldr	r0, [r7, #4]
 5082 0048 FFF7FEFF 		bl	strlen
 5083 004c 0346     		mov	r3, r0
 5084 004e 9BB2     		uxth	r3, r3
 5085 0050 7868     		ldr	r0, [r7, #4]
 5086 0052 1946     		mov	r1, r3
 5087 0054 FFF7FEFF 		bl	USBUART_PutData
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 111


 5088              	.L256:
 5089              	.LBE14:
1107:.\main.c      ****     }
1108:.\main.c      **** }
 5090              		.loc 1 1108 0
 5091 0058 1037     		adds	r7, r7, #16
 5092              		.cfi_def_cfa_offset 8
 5093 005a BD46     		mov	sp, r7
 5094              		.cfi_def_cfa_register 13
 5095              		@ sp needed
 5096 005c 80BD     		pop	{r7, pc}
 5097              	.L261:
 5098 005e 00BF     		.align	2
 5099              	.L260:
 5100 0060 00000000 		.word	portOpen
 5101 0064 C0C62D00 		.word	3000000
 5102              		.cfi_endproc
 5103              	.LFE103:
 5104              		.size	usbPutString, .-usbPutString
 5105              		.section	.text.usbPutChar,"ax",%progbits
 5106              		.align	2
 5107              		.global	usbPutChar
 5108              		.thumb
 5109              		.thumb_func
 5110              		.type	usbPutChar, %function
 5111              	usbPutChar:
 5112              	.LFB104:
1109:.\main.c      **** //* ========================================
1110:.\main.c      **** void usbPutChar(char c)
1111:.\main.c      **** {
 5113              		.loc 1 1111 0
 5114              		.cfi_startproc
 5115              		@ args = 0, pretend = 0, frame = 16
 5116              		@ frame_needed = 1, uses_anonymous_args = 0
 5117 0000 80B5     		push	{r7, lr}
 5118              		.cfi_def_cfa_offset 8
 5119              		.cfi_offset 7, -8
 5120              		.cfi_offset 14, -4
 5121 0002 84B0     		sub	sp, sp, #16
 5122              		.cfi_def_cfa_offset 24
 5123 0004 00AF     		add	r7, sp, #0
 5124              		.cfi_def_cfa_register 7
 5125 0006 0346     		mov	r3, r0
 5126 0008 FB71     		strb	r3, [r7, #7]
1112:.\main.c      ****     if (USE_USB && portOpen)    
 5127              		.loc 1 1112 0
 5128 000a 0F4B     		ldr	r3, .L266
 5129 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5130 000e 002B     		cmp	r3, #0
 5131 0010 16D0     		beq	.L262
 5132              	.LBB15:
1113:.\main.c      ****     {    
1114:.\main.c      ****         uint32 cnt = 0;
 5133              		.loc 1 1114 0
 5134 0012 0023     		movs	r3, #0
 5135 0014 FB60     		str	r3, [r7, #12]
1115:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 112


 5136              		.loc 1 1115 0
 5137 0016 0AE0     		b	.L264
 5138              	.L265:
1116:.\main.c      ****             cnt++;
 5139              		.loc 1 1116 0
 5140 0018 FB68     		ldr	r3, [r7, #12]
 5141 001a 0133     		adds	r3, r3, #1
 5142 001c FB60     		str	r3, [r7, #12]
1117:.\main.c      ****             if(cnt == 3000000){
 5143              		.loc 1 1117 0
 5144 001e FB68     		ldr	r3, [r7, #12]
 5145 0020 0A4A     		ldr	r2, .L266+4
 5146 0022 9342     		cmp	r3, r2
 5147 0024 03D1     		bne	.L264
1118:.\main.c      ****                 portOpen = 0;
 5148              		.loc 1 1118 0
 5149 0026 084B     		ldr	r3, .L266
 5150 0028 0022     		movs	r2, #0
 5151 002a 1A70     		strb	r2, [r3]
1119:.\main.c      ****                 return;
 5152              		.loc 1 1119 0
 5153 002c 08E0     		b	.L262
 5154              	.L264:
1115:.\main.c      ****             cnt++;
 5155              		.loc 1 1115 0
 5156 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5157 0032 0346     		mov	r3, r0
 5158 0034 002B     		cmp	r3, #0
 5159 0036 EFD0     		beq	.L265
1120:.\main.c      ****             }
1121:.\main.c      ****         }
1122:.\main.c      ****         USBUART_PutChar(c);
 5160              		.loc 1 1122 0
 5161 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5162 003a 1846     		mov	r0, r3
 5163 003c FFF7FEFF 		bl	USBUART_PutChar
 5164              	.L262:
 5165              	.LBE15:
1123:.\main.c      ****     }    
1124:.\main.c      **** }
 5166              		.loc 1 1124 0
 5167 0040 1037     		adds	r7, r7, #16
 5168              		.cfi_def_cfa_offset 8
 5169 0042 BD46     		mov	sp, r7
 5170              		.cfi_def_cfa_register 13
 5171              		@ sp needed
 5172 0044 80BD     		pop	{r7, pc}
 5173              	.L267:
 5174 0046 00BF     		.align	2
 5175              	.L266:
 5176 0048 00000000 		.word	portOpen
 5177 004c C0C62D00 		.word	3000000
 5178              		.cfi_endproc
 5179              	.LFE104:
 5180              		.size	usbPutChar, .-usbPutChar
 5181              		.section	.text.uart_set_PWM,"ax",%progbits
 5182              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 113


 5183              		.global	uart_set_PWM
 5184              		.thumb
 5185              		.thumb_func
 5186              		.type	uart_set_PWM, %function
 5187              	uart_set_PWM:
 5188              	.LFB105:
1125:.\main.c      **** //* ========================================
1126:.\main.c      **** 
1127:.\main.c      **** void uart_set_PWM()
1128:.\main.c      **** {
 5189              		.loc 1 1128 0
 5190              		.cfi_startproc
 5191              		@ args = 0, pretend = 0, frame = 0
 5192              		@ frame_needed = 1, uses_anonymous_args = 0
 5193              		@ link register save eliminated.
 5194 0000 80B4     		push	{r7}
 5195              		.cfi_def_cfa_offset 4
 5196              		.cfi_offset 7, -4
 5197 0002 00AF     		add	r7, sp, #0
 5198              		.cfi_def_cfa_register 7
1129:.\main.c      ****     //removed from final implementation
1130:.\main.c      **** }
 5199              		.loc 1 1130 0
 5200 0004 BD46     		mov	sp, r7
 5201              		.cfi_def_cfa_register 13
 5202              		@ sp needed
 5203 0006 5DF8047B 		ldr	r7, [sp], #4
 5204              		.cfi_restore 7
 5205              		.cfi_def_cfa_offset 0
 5206 000a 7047     		bx	lr
 5207              		.cfi_endproc
 5208              	.LFE105:
 5209              		.size	uart_set_PWM, .-uart_set_PWM
 5210              		.text
 5211              	.Letext0:
 5212              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5213              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5214              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5215              		.file 5 ".\\vars.h"
 5216              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5217              		.file 7 ".\\pathfinder.h"
 5218              		.section	.debug_info,"",%progbits
 5219              	.Ldebug_info0:
 5220 0000 850E0000 		.4byte	0xe85
 5221 0004 0400     		.2byte	0x4
 5222 0006 00000000 		.4byte	.Ldebug_abbrev0
 5223 000a 04       		.byte	0x4
 5224 000b 01       		.uleb128 0x1
 5225 000c B6040000 		.4byte	.LASF197
 5226 0010 01       		.byte	0x1
 5227 0011 94090000 		.4byte	.LASF198
 5228 0015 1C000000 		.4byte	.LASF199
 5229 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5230 001d 00000000 		.4byte	0
 5231 0021 00000000 		.4byte	.Ldebug_line0
 5232 0025 02       		.uleb128 0x2
 5233 0026 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 114


 5234 0027 06       		.byte	0x6
 5235 0028 CE080000 		.4byte	.LASF0
 5236 002c 02       		.uleb128 0x2
 5237 002d 01       		.byte	0x1
 5238 002e 08       		.byte	0x8
 5239 002f 0B080000 		.4byte	.LASF1
 5240 0033 02       		.uleb128 0x2
 5241 0034 02       		.byte	0x2
 5242 0035 05       		.byte	0x5
 5243 0036 6C060000 		.4byte	.LASF2
 5244 003a 02       		.uleb128 0x2
 5245 003b 02       		.byte	0x2
 5246 003c 07       		.byte	0x7
 5247 003d DA080000 		.4byte	.LASF3
 5248 0041 03       		.uleb128 0x3
 5249 0042 D7000000 		.4byte	.LASF5
 5250 0046 02       		.byte	0x2
 5251 0047 3F       		.byte	0x3f
 5252 0048 4C000000 		.4byte	0x4c
 5253 004c 02       		.uleb128 0x2
 5254 004d 04       		.byte	0x4
 5255 004e 05       		.byte	0x5
 5256 004f A0060000 		.4byte	.LASF4
 5257 0053 03       		.uleb128 0x3
 5258 0054 19080000 		.4byte	.LASF6
 5259 0058 02       		.byte	0x2
 5260 0059 41       		.byte	0x41
 5261 005a 5E000000 		.4byte	0x5e
 5262 005e 02       		.uleb128 0x2
 5263 005f 04       		.byte	0x4
 5264 0060 07       		.byte	0x7
 5265 0061 A4070000 		.4byte	.LASF7
 5266 0065 02       		.uleb128 0x2
 5267 0066 08       		.byte	0x8
 5268 0067 05       		.byte	0x5
 5269 0068 80040000 		.4byte	.LASF8
 5270 006c 02       		.uleb128 0x2
 5271 006d 08       		.byte	0x8
 5272 006e 07       		.byte	0x7
 5273 006f 8E020000 		.4byte	.LASF9
 5274 0073 04       		.uleb128 0x4
 5275 0074 04       		.byte	0x4
 5276 0075 05       		.byte	0x5
 5277 0076 696E7400 		.ascii	"int\000"
 5278 007a 02       		.uleb128 0x2
 5279 007b 04       		.byte	0x4
 5280 007c 07       		.byte	0x7
 5281 007d BF000000 		.4byte	.LASF10
 5282 0081 02       		.uleb128 0x2
 5283 0082 04       		.byte	0x4
 5284 0083 07       		.byte	0x7
 5285 0084 9B070000 		.4byte	.LASF11
 5286 0088 05       		.uleb128 0x5
 5287 0089 04       		.byte	0x4
 5288 008a 8E000000 		.4byte	0x8e
 5289 008e 02       		.uleb128 0x2
 5290 008f 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 115


 5291 0090 08       		.byte	0x8
 5292 0091 BD030000 		.4byte	.LASF12
 5293 0095 03       		.uleb128 0x3
 5294 0096 C2070000 		.4byte	.LASF13
 5295 009a 03       		.byte	0x3
 5296 009b 2C       		.byte	0x2c
 5297 009c 41000000 		.4byte	0x41
 5298 00a0 03       		.uleb128 0x3
 5299 00a1 0E020000 		.4byte	.LASF14
 5300 00a5 03       		.byte	0x3
 5301 00a6 2D       		.byte	0x2d
 5302 00a7 53000000 		.4byte	0x53
 5303 00ab 06       		.uleb128 0x6
 5304 00ac 21090000 		.4byte	.LASF15
 5305 00b0 04       		.byte	0x4
 5306 00b1 9201     		.2byte	0x192
 5307 00b3 2C000000 		.4byte	0x2c
 5308 00b7 06       		.uleb128 0x6
 5309 00b8 10040000 		.4byte	.LASF16
 5310 00bc 04       		.byte	0x4
 5311 00bd 9301     		.2byte	0x193
 5312 00bf 3A000000 		.4byte	0x3a
 5313 00c3 06       		.uleb128 0x6
 5314 00c4 87050000 		.4byte	.LASF17
 5315 00c8 04       		.byte	0x4
 5316 00c9 9401     		.2byte	0x194
 5317 00cb 5E000000 		.4byte	0x5e
 5318 00cf 06       		.uleb128 0x6
 5319 00d0 17040000 		.4byte	.LASF18
 5320 00d4 04       		.byte	0x4
 5321 00d5 9501     		.2byte	0x195
 5322 00d7 25000000 		.4byte	0x25
 5323 00db 06       		.uleb128 0x6
 5324 00dc E1000000 		.4byte	.LASF19
 5325 00e0 04       		.byte	0x4
 5326 00e1 9601     		.2byte	0x196
 5327 00e3 33000000 		.4byte	0x33
 5328 00e7 02       		.uleb128 0x2
 5329 00e8 04       		.byte	0x4
 5330 00e9 04       		.byte	0x4
 5331 00ea 2E020000 		.4byte	.LASF20
 5332 00ee 02       		.uleb128 0x2
 5333 00ef 08       		.byte	0x8
 5334 00f0 04       		.byte	0x4
 5335 00f1 27090000 		.4byte	.LASF21
 5336 00f5 07       		.uleb128 0x7
 5337 00f6 A0000000 		.4byte	0xa0
 5338 00fa 05010000 		.4byte	0x105
 5339 00fe 08       		.uleb128 0x8
 5340 00ff 81000000 		.4byte	0x81
 5341 0103 01       		.byte	0x1
 5342 0104 00       		.byte	0
 5343 0105 02       		.uleb128 0x2
 5344 0106 08       		.byte	0x8
 5345 0107 04       		.byte	0x4
 5346 0108 03060000 		.4byte	.LASF22
 5347 010c 09       		.uleb128 0x9
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 116


 5348 010d 66080000 		.4byte	.LASF31
 5349 0111 01       		.byte	0x1
 5350 0112 05       		.byte	0x5
 5351 0113 61       		.byte	0x61
 5352 0114 49010000 		.4byte	0x149
 5353 0118 0A       		.uleb128 0xa
 5354 0119 4D020000 		.4byte	.LASF23
 5355 011d 00       		.sleb128 0
 5356 011e 0A       		.uleb128 0xa
 5357 011f F4000000 		.4byte	.LASF24
 5358 0123 01       		.sleb128 1
 5359 0124 0A       		.uleb128 0xa
 5360 0125 5B000000 		.4byte	.LASF25
 5361 0129 02       		.sleb128 2
 5362 012a 0A       		.uleb128 0xa
 5363 012b F2050000 		.4byte	.LASF26
 5364 012f 03       		.sleb128 3
 5365 0130 0A       		.uleb128 0xa
 5366 0131 1F010000 		.4byte	.LASF27
 5367 0135 04       		.sleb128 4
 5368 0136 0A       		.uleb128 0xa
 5369 0137 F7010000 		.4byte	.LASF28
 5370 013b 05       		.sleb128 5
 5371 013c 0A       		.uleb128 0xa
 5372 013d 16070000 		.4byte	.LASF29
 5373 0141 06       		.sleb128 6
 5374 0142 0A       		.uleb128 0xa
 5375 0143 61090000 		.4byte	.LASF30
 5376 0147 07       		.sleb128 7
 5377 0148 00       		.byte	0
 5378 0149 09       		.uleb128 0x9
 5379 014a 5A010000 		.4byte	.LASF32
 5380 014e 01       		.byte	0x1
 5381 014f 05       		.byte	0x5
 5382 0150 62       		.byte	0x62
 5383 0151 86010000 		.4byte	0x186
 5384 0155 0A       		.uleb128 0xa
 5385 0156 E8060000 		.4byte	.LASF33
 5386 015a 00       		.sleb128 0
 5387 015b 0A       		.uleb128 0xa
 5388 015c 47040000 		.4byte	.LASF34
 5389 0160 01       		.sleb128 1
 5390 0161 0A       		.uleb128 0xa
 5391 0162 B7060000 		.4byte	.LASF35
 5392 0166 02       		.sleb128 2
 5393 0167 0A       		.uleb128 0xa
 5394 0168 B1010000 		.4byte	.LASF36
 5395 016c 03       		.sleb128 3
 5396 016d 0A       		.uleb128 0xa
 5397 016e FF080000 		.4byte	.LASF37
 5398 0172 04       		.sleb128 4
 5399 0173 0A       		.uleb128 0xa
 5400 0174 3F090000 		.4byte	.LASF38
 5401 0178 05       		.sleb128 5
 5402 0179 0A       		.uleb128 0xa
 5403 017a 70000000 		.4byte	.LASF39
 5404 017e 06       		.sleb128 6
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 117


 5405 017f 0A       		.uleb128 0xa
 5406 0180 09070000 		.4byte	.LASF40
 5407 0184 07       		.sleb128 7
 5408 0185 00       		.byte	0
 5409 0186 0B       		.uleb128 0xb
 5410 0187 A7050000 		.4byte	.LASF200
 5411 018b 20       		.byte	0x20
 5412 018c 05       		.byte	0x5
 5413 018d 68       		.byte	0x68
 5414 018e 5F020000 		.4byte	0x25f
 5415 0192 0C       		.uleb128 0xc
 5416 0193 C5050000 		.4byte	.LASF41
 5417 0197 05       		.byte	0x5
 5418 0198 69       		.byte	0x69
 5419 0199 CF000000 		.4byte	0xcf
 5420 019d 00       		.byte	0
 5421 019e 0C       		.uleb128 0xc
 5422 019f 47020000 		.4byte	.LASF42
 5423 01a3 05       		.byte	0x5
 5424 01a4 6A       		.byte	0x6a
 5425 01a5 AB000000 		.4byte	0xab
 5426 01a9 01       		.byte	0x1
 5427 01aa 0C       		.uleb128 0xc
 5428 01ab E3070000 		.4byte	.LASF43
 5429 01af 05       		.byte	0x5
 5430 01b0 6B       		.byte	0x6b
 5431 01b1 DB000000 		.4byte	0xdb
 5432 01b5 02       		.byte	0x2
 5433 01b6 0C       		.uleb128 0xc
 5434 01b7 91030000 		.4byte	.LASF44
 5435 01bb 05       		.byte	0x5
 5436 01bc 6C       		.byte	0x6c
 5437 01bd DB000000 		.4byte	0xdb
 5438 01c1 04       		.byte	0x4
 5439 01c2 0C       		.uleb128 0xc
 5440 01c3 ED080000 		.4byte	.LASF45
 5441 01c7 05       		.byte	0x5
 5442 01c8 6D       		.byte	0x6d
 5443 01c9 DB000000 		.4byte	0xdb
 5444 01cd 06       		.byte	0x6
 5445 01ce 0C       		.uleb128 0xc
 5446 01cf 67090000 		.4byte	.LASF46
 5447 01d3 05       		.byte	0x5
 5448 01d4 6E       		.byte	0x6e
 5449 01d5 DB000000 		.4byte	0xdb
 5450 01d9 08       		.byte	0x8
 5451 01da 0C       		.uleb128 0xc
 5452 01db 4D050000 		.4byte	.LASF47
 5453 01df 05       		.byte	0x5
 5454 01e0 6F       		.byte	0x6f
 5455 01e1 DB000000 		.4byte	0xdb
 5456 01e5 0A       		.byte	0xa
 5457 01e6 0C       		.uleb128 0xc
 5458 01e7 C2030000 		.4byte	.LASF48
 5459 01eb 05       		.byte	0x5
 5460 01ec 70       		.byte	0x70
 5461 01ed DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 118


 5462 01f1 0C       		.byte	0xc
 5463 01f2 0C       		.uleb128 0xc
 5464 01f3 D4050000 		.4byte	.LASF49
 5465 01f7 05       		.byte	0x5
 5466 01f8 71       		.byte	0x71
 5467 01f9 DB000000 		.4byte	0xdb
 5468 01fd 0E       		.byte	0xe
 5469 01fe 0C       		.uleb128 0xc
 5470 01ff 9B040000 		.4byte	.LASF50
 5471 0203 05       		.byte	0x5
 5472 0204 72       		.byte	0x72
 5473 0205 DB000000 		.4byte	0xdb
 5474 0209 10       		.byte	0x10
 5475 020a 0C       		.uleb128 0xc
 5476 020b 5B070000 		.4byte	.LASF51
 5477 020f 05       		.byte	0x5
 5478 0210 73       		.byte	0x73
 5479 0211 DB000000 		.4byte	0xdb
 5480 0215 12       		.byte	0x12
 5481 0216 0C       		.uleb128 0xc
 5482 0217 8B090000 		.4byte	.LASF52
 5483 021b 05       		.byte	0x5
 5484 021c 74       		.byte	0x74
 5485 021d DB000000 		.4byte	0xdb
 5486 0221 14       		.byte	0x14
 5487 0222 0C       		.uleb128 0xc
 5488 0223 29040000 		.4byte	.LASF53
 5489 0227 05       		.byte	0x5
 5490 0228 75       		.byte	0x75
 5491 0229 DB000000 		.4byte	0xdb
 5492 022d 16       		.byte	0x16
 5493 022e 0C       		.uleb128 0xc
 5494 022f 52010000 		.4byte	.LASF54
 5495 0233 05       		.byte	0x5
 5496 0234 76       		.byte	0x76
 5497 0235 DB000000 		.4byte	0xdb
 5498 0239 18       		.byte	0x18
 5499 023a 0C       		.uleb128 0xc
 5500 023b FD030000 		.4byte	.LASF55
 5501 023f 05       		.byte	0x5
 5502 0240 77       		.byte	0x77
 5503 0241 DB000000 		.4byte	0xdb
 5504 0245 1A       		.byte	0x1a
 5505 0246 0C       		.uleb128 0xc
 5506 0247 44050000 		.4byte	.LASF56
 5507 024b 05       		.byte	0x5
 5508 024c 78       		.byte	0x78
 5509 024d DB000000 		.4byte	0xdb
 5510 0251 1C       		.byte	0x1c
 5511 0252 0C       		.uleb128 0xc
 5512 0253 17020000 		.4byte	.LASF57
 5513 0257 05       		.byte	0x5
 5514 0258 79       		.byte	0x79
 5515 0259 DB000000 		.4byte	0xdb
 5516 025d 1E       		.byte	0x1e
 5517 025e 00       		.byte	0
 5518 025f 0D       		.uleb128 0xd
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 119


 5519 0260 0E090000 		.4byte	.LASF58
 5520 0264 01       		.byte	0x1
 5521 0265 62       		.byte	0x62
 5522 0266 00000000 		.4byte	.LFB63
 5523 026a 0C000000 		.4byte	.LFE63-.LFB63
 5524 026e 01       		.uleb128 0x1
 5525 026f 9C       		.byte	0x9c
 5526 0270 0E       		.uleb128 0xe
 5527 0271 63070000 		.4byte	.LASF59
 5528 0275 01       		.byte	0x1
 5529 0276 68       		.byte	0x68
 5530 0277 00000000 		.4byte	.LFB64
 5531 027b 2C000000 		.4byte	.LFE64-.LFB64
 5532 027f 01       		.uleb128 0x1
 5533 0280 9C       		.byte	0x9c
 5534 0281 0E       		.uleb128 0xe
 5535 0282 24020000 		.4byte	.LASF60
 5536 0286 01       		.byte	0x1
 5537 0287 71       		.byte	0x71
 5538 0288 00000000 		.4byte	.LFB65
 5539 028c 9C010000 		.4byte	.LFE65-.LFB65
 5540 0290 01       		.uleb128 0x1
 5541 0291 9C       		.byte	0x9c
 5542 0292 0F       		.uleb128 0xf
 5543 0293 BE020000 		.4byte	.LASF66
 5544 0297 01       		.byte	0x1
 5545 0298 96       		.byte	0x96
 5546 0299 00000000 		.4byte	.LFB66
 5547 029d 34010000 		.4byte	.LFE66-.LFB66
 5548 02a1 01       		.uleb128 0x1
 5549 02a2 9C       		.byte	0x9c
 5550 02a3 DC020000 		.4byte	0x2dc
 5551 02a7 10       		.uleb128 0x10
 5552 02a8 0E000000 		.4byte	.LBB2
 5553 02ac 64000000 		.4byte	.LBE2-.LBB2
 5554 02b0 C3020000 		.4byte	0x2c3
 5555 02b4 11       		.uleb128 0x11
 5556 02b5 05040000 		.4byte	.LASF61
 5557 02b9 01       		.byte	0x1
 5558 02ba 9A       		.byte	0x9a
 5559 02bb B7000000 		.4byte	0xb7
 5560 02bf 02       		.uleb128 0x2
 5561 02c0 91       		.byte	0x91
 5562 02c1 76       		.sleb128 -10
 5563 02c2 00       		.byte	0
 5564 02c3 12       		.uleb128 0x12
 5565 02c4 7E000000 		.4byte	.LBB3
 5566 02c8 64000000 		.4byte	.LBE3-.LBB3
 5567 02cc 11       		.uleb128 0x11
 5568 02cd 05040000 		.4byte	.LASF61
 5569 02d1 01       		.byte	0x1
 5570 02d2 A6       		.byte	0xa6
 5571 02d3 B7000000 		.4byte	0xb7
 5572 02d7 02       		.uleb128 0x2
 5573 02d8 91       		.byte	0x91
 5574 02d9 74       		.sleb128 -12
 5575 02da 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 120


 5576 02db 00       		.byte	0
 5577 02dc 0D       		.uleb128 0xd
 5578 02dd 38080000 		.4byte	.LASF62
 5579 02e1 01       		.byte	0x1
 5580 02e2 BC       		.byte	0xbc
 5581 02e3 00000000 		.4byte	.LFB67
 5582 02e7 20000000 		.4byte	.LFE67-.LFB67
 5583 02eb 01       		.uleb128 0x1
 5584 02ec 9C       		.byte	0x9c
 5585 02ed 0E       		.uleb128 0xe
 5586 02ee 44030000 		.4byte	.LASF63
 5587 02f2 01       		.byte	0x1
 5588 02f3 C3       		.byte	0xc3
 5589 02f4 00000000 		.4byte	.LFB68
 5590 02f8 28000000 		.4byte	.LFE68-.LFB68
 5591 02fc 01       		.uleb128 0x1
 5592 02fd 9C       		.byte	0x9c
 5593 02fe 0E       		.uleb128 0xe
 5594 02ff 0F060000 		.4byte	.LASF64
 5595 0303 01       		.byte	0x1
 5596 0304 CC       		.byte	0xcc
 5597 0305 00000000 		.4byte	.LFB69
 5598 0309 0A000000 		.4byte	.LFE69-.LFB69
 5599 030d 01       		.uleb128 0x1
 5600 030e 9C       		.byte	0x9c
 5601 030f 0E       		.uleb128 0xe
 5602 0310 2C060000 		.4byte	.LASF65
 5603 0314 01       		.byte	0x1
 5604 0315 D1       		.byte	0xd1
 5605 0316 00000000 		.4byte	.LFB70
 5606 031a 28000000 		.4byte	.LFE70-.LFB70
 5607 031e 01       		.uleb128 0x1
 5608 031f 9C       		.byte	0x9c
 5609 0320 13       		.uleb128 0x13
 5610 0321 09090000 		.4byte	.LASF67
 5611 0325 01       		.byte	0x1
 5612 0326 DC       		.byte	0xdc
 5613 0327 73000000 		.4byte	0x73
 5614 032b 00000000 		.4byte	.LFB71
 5615 032f D8060000 		.4byte	.LFE71-.LFB71
 5616 0333 01       		.uleb128 0x1
 5617 0334 9C       		.byte	0x9c
 5618 0335 09040000 		.4byte	0x409
 5619 0339 14       		.uleb128 0x14
 5620 033a 35030000 		.4byte	.LASF68
 5621 033e 01       		.byte	0x1
 5622 033f 1501     		.2byte	0x115
 5623 0341 B7000000 		.4byte	0xb7
 5624 0345 02       		.uleb128 0x2
 5625 0346 91       		.byte	0x91
 5626 0347 76       		.sleb128 -10
 5627 0348 12       		.uleb128 0x12
 5628 0349 38010000 		.4byte	.LBB4
 5629 034d 1A050000 		.4byte	.LBE4-.LBB4
 5630 0351 14       		.uleb128 0x14
 5631 0352 AD040000 		.4byte	.LASF69
 5632 0356 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 121


 5633 0357 4C01     		.2byte	0x14c
 5634 0359 8E000000 		.4byte	0x8e
 5635 035d 02       		.uleb128 0x2
 5636 035e 91       		.byte	0x91
 5637 035f 75       		.sleb128 -11
 5638 0360 10       		.uleb128 0x10
 5639 0361 84010000 		.4byte	.LBB5
 5640 0365 FC010000 		.4byte	.LBE5-.LBB5
 5641 0369 96030000 		.4byte	0x396
 5642 036d 15       		.uleb128 0x15
 5643 036e 6D657300 		.ascii	"mes\000"
 5644 0372 01       		.byte	0x1
 5645 0373 5301     		.2byte	0x153
 5646 0375 09040000 		.4byte	0x409
 5647 0379 02       		.uleb128 0x2
 5648 037a 91       		.byte	0x91
 5649 037b 60       		.sleb128 -32
 5650 037c 12       		.uleb128 0x12
 5651 037d AC010000 		.4byte	.LBB6
 5652 0381 D4010000 		.4byte	.LBE6-.LBB6
 5653 0385 14       		.uleb128 0x14
 5654 0386 1C040000 		.4byte	.LASF70
 5655 038a 01       		.byte	0x1
 5656 038b 6401     		.2byte	0x164
 5657 038d AB000000 		.4byte	0xab
 5658 0391 02       		.uleb128 0x2
 5659 0392 91       		.byte	0x91
 5660 0393 74       		.sleb128 -12
 5661 0394 00       		.byte	0
 5662 0395 00       		.byte	0
 5663 0396 10       		.uleb128 0x10
 5664 0397 DA030000 		.4byte	.LBB7
 5665 039b 30000000 		.4byte	.LBE7-.LBB7
 5666 039f B3030000 		.4byte	0x3b3
 5667 03a3 14       		.uleb128 0x14
 5668 03a4 FA000000 		.4byte	.LASF71
 5669 03a8 01       		.byte	0x1
 5670 03a9 9C01     		.2byte	0x19c
 5671 03ab 8E000000 		.4byte	0x8e
 5672 03af 02       		.uleb128 0x2
 5673 03b0 91       		.byte	0x91
 5674 03b1 71       		.sleb128 -15
 5675 03b2 00       		.byte	0
 5676 03b3 10       		.uleb128 0x10
 5677 03b4 2A040000 		.4byte	.LBB8
 5678 03b8 E6000000 		.4byte	.LBE8-.LBB8
 5679 03bc DF030000 		.4byte	0x3df
 5680 03c0 15       		.uleb128 0x15
 5681 03c1 6D657300 		.ascii	"mes\000"
 5682 03c5 01       		.byte	0x1
 5683 03c6 AB01     		.2byte	0x1ab
 5684 03c8 09040000 		.4byte	0x409
 5685 03cc 02       		.uleb128 0x2
 5686 03cd 91       		.byte	0x91
 5687 03ce 50       		.sleb128 -48
 5688 03cf 14       		.uleb128 0x14
 5689 03d0 1C040000 		.4byte	.LASF70
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 122


 5690 03d4 01       		.byte	0x1
 5691 03d5 AF01     		.2byte	0x1af
 5692 03d7 AB000000 		.4byte	0xab
 5693 03db 02       		.uleb128 0x2
 5694 03dc 91       		.byte	0x91
 5695 03dd 73       		.sleb128 -13
 5696 03de 00       		.byte	0
 5697 03df 12       		.uleb128 0x12
 5698 03e0 30050000 		.4byte	.LBB9
 5699 03e4 18010000 		.4byte	.LBE9-.LBB9
 5700 03e8 15       		.uleb128 0x15
 5701 03e9 6D657300 		.ascii	"mes\000"
 5702 03ed 01       		.byte	0x1
 5703 03ee D101     		.2byte	0x1d1
 5704 03f0 09040000 		.4byte	0x409
 5705 03f4 02       		.uleb128 0x2
 5706 03f5 91       		.byte	0x91
 5707 03f6 40       		.sleb128 -64
 5708 03f7 14       		.uleb128 0x14
 5709 03f8 1C040000 		.4byte	.LASF70
 5710 03fc 01       		.byte	0x1
 5711 03fd D501     		.2byte	0x1d5
 5712 03ff AB000000 		.4byte	0xab
 5713 0403 02       		.uleb128 0x2
 5714 0404 91       		.byte	0x91
 5715 0405 72       		.sleb128 -14
 5716 0406 00       		.byte	0
 5717 0407 00       		.byte	0
 5718 0408 00       		.byte	0
 5719 0409 07       		.uleb128 0x7
 5720 040a 8E000000 		.4byte	0x8e
 5721 040e 19040000 		.4byte	0x419
 5722 0412 08       		.uleb128 0x8
 5723 0413 81000000 		.4byte	0x81
 5724 0417 0F       		.byte	0xf
 5725 0418 00       		.byte	0
 5726 0419 16       		.uleb128 0x16
 5727 041a 47090000 		.4byte	.LASF77
 5728 041e 01       		.byte	0x1
 5729 041f 4002     		.2byte	0x240
 5730 0421 00000000 		.4byte	.LFB72
 5731 0425 60010000 		.4byte	.LFE72-.LFB72
 5732 0429 01       		.uleb128 0x1
 5733 042a 9C       		.byte	0x9c
 5734 042b 67040000 		.4byte	0x467
 5735 042f 12       		.uleb128 0x12
 5736 0430 10000000 		.4byte	.LBB10
 5737 0434 34010000 		.4byte	.LBE10-.LBB10
 5738 0438 14       		.uleb128 0x14
 5739 0439 45010000 		.4byte	.LASF72
 5740 043d 01       		.byte	0x1
 5741 043e 4602     		.2byte	0x246
 5742 0440 B7000000 		.4byte	0xb7
 5743 0444 02       		.uleb128 0x2
 5744 0445 91       		.byte	0x91
 5745 0446 76       		.sleb128 -10
 5746 0447 14       		.uleb128 0x14
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 123


 5747 0448 B6070000 		.4byte	.LASF73
 5748 044c 01       		.byte	0x1
 5749 044d 4702     		.2byte	0x247
 5750 044f 67040000 		.4byte	0x467
 5751 0453 02       		.uleb128 0x2
 5752 0454 91       		.byte	0x91
 5753 0455 68       		.sleb128 -24
 5754 0456 14       		.uleb128 0x14
 5755 0457 53020000 		.4byte	.LASF74
 5756 045b 01       		.byte	0x1
 5757 045c 4802     		.2byte	0x248
 5758 045e 67040000 		.4byte	0x467
 5759 0462 02       		.uleb128 0x2
 5760 0463 91       		.byte	0x91
 5761 0464 5C       		.sleb128 -36
 5762 0465 00       		.byte	0
 5763 0466 00       		.byte	0
 5764 0467 07       		.uleb128 0x7
 5765 0468 8E000000 		.4byte	0x8e
 5766 046c 77040000 		.4byte	0x477
 5767 0470 08       		.uleb128 0x8
 5768 0471 81000000 		.4byte	0x81
 5769 0475 0B       		.byte	0xb
 5770 0476 00       		.byte	0
 5771 0477 17       		.uleb128 0x17
 5772 0478 DB030000 		.4byte	.LASF75
 5773 047c 01       		.byte	0x1
 5774 047d 8102     		.2byte	0x281
 5775 047f 00000000 		.4byte	.LFB73
 5776 0483 18000000 		.4byte	.LFE73-.LFB73
 5777 0487 01       		.uleb128 0x1
 5778 0488 9C       		.byte	0x9c
 5779 0489 9D040000 		.4byte	0x49d
 5780 048d 18       		.uleb128 0x18
 5781 048e 64697200 		.ascii	"dir\000"
 5782 0492 01       		.byte	0x1
 5783 0493 8102     		.2byte	0x281
 5784 0495 AB000000 		.4byte	0xab
 5785 0499 02       		.uleb128 0x2
 5786 049a 91       		.byte	0x91
 5787 049b 77       		.sleb128 -9
 5788 049c 00       		.byte	0
 5789 049d 17       		.uleb128 0x17
 5790 049e 3B040000 		.4byte	.LASF76
 5791 04a2 01       		.byte	0x1
 5792 04a3 8602     		.2byte	0x286
 5793 04a5 00000000 		.4byte	.LFB74
 5794 04a9 18000000 		.4byte	.LFE74-.LFB74
 5795 04ad 01       		.uleb128 0x1
 5796 04ae 9C       		.byte	0x9c
 5797 04af C3040000 		.4byte	0x4c3
 5798 04b3 18       		.uleb128 0x18
 5799 04b4 64697200 		.ascii	"dir\000"
 5800 04b8 01       		.byte	0x1
 5801 04b9 8602     		.2byte	0x286
 5802 04bb AB000000 		.4byte	0xab
 5803 04bf 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 124


 5804 04c0 91       		.byte	0x91
 5805 04c1 77       		.sleb128 -9
 5806 04c2 00       		.byte	0
 5807 04c3 19       		.uleb128 0x19
 5808 04c4 6C080000 		.4byte	.LASF78
 5809 04c8 01       		.byte	0x1
 5810 04c9 8B02     		.2byte	0x28b
 5811 04cb 00000000 		.4byte	.LFB75
 5812 04cf 54000000 		.4byte	.LFE75-.LFB75
 5813 04d3 01       		.uleb128 0x1
 5814 04d4 9C       		.byte	0x9c
 5815 04d5 E9040000 		.4byte	0x4e9
 5816 04d9 15       		.uleb128 0x15
 5817 04da 6D657300 		.ascii	"mes\000"
 5818 04de 01       		.byte	0x1
 5819 04df 9002     		.2byte	0x290
 5820 04e1 09040000 		.4byte	0x409
 5821 04e5 02       		.uleb128 0x2
 5822 04e6 91       		.byte	0x91
 5823 04e7 68       		.sleb128 -24
 5824 04e8 00       		.byte	0
 5825 04e9 17       		.uleb128 0x17
 5826 04ea 34020000 		.4byte	.LASF79
 5827 04ee 01       		.byte	0x1
 5828 04ef 9502     		.2byte	0x295
 5829 04f1 00000000 		.4byte	.LFB76
 5830 04f5 F4000000 		.4byte	.LFE76-.LFB76
 5831 04f9 01       		.uleb128 0x1
 5832 04fa 9C       		.byte	0x9c
 5833 04fb 3C050000 		.4byte	0x53c
 5834 04ff 1A       		.uleb128 0x1a
 5835 0500 34070000 		.4byte	.LASF80
 5836 0504 01       		.byte	0x1
 5837 0505 9502     		.2byte	0x295
 5838 0507 EE000000 		.4byte	0xee
 5839 050b 02       		.uleb128 0x2
 5840 050c 91       		.byte	0x91
 5841 050d 68       		.sleb128 -24
 5842 050e 1A       		.uleb128 0x1a
 5843 050f 68040000 		.4byte	.LASF81
 5844 0513 01       		.byte	0x1
 5845 0514 9502     		.2byte	0x295
 5846 0516 EE000000 		.4byte	0xee
 5847 051a 02       		.uleb128 0x2
 5848 051b 91       		.byte	0x91
 5849 051c 60       		.sleb128 -32
 5850 051d 14       		.uleb128 0x14
 5851 051e 6C020000 		.4byte	.LASF82
 5852 0522 01       		.byte	0x1
 5853 0523 AA02     		.2byte	0x2aa
 5854 0525 DB000000 		.4byte	0xdb
 5855 0529 02       		.uleb128 0x2
 5856 052a 91       		.byte	0x91
 5857 052b 76       		.sleb128 -10
 5858 052c 14       		.uleb128 0x14
 5859 052d 9B050000 		.4byte	.LASF83
 5860 0531 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 125


 5861 0532 AB02     		.2byte	0x2ab
 5862 0534 DB000000 		.4byte	0xdb
 5863 0538 02       		.uleb128 0x2
 5864 0539 91       		.byte	0x91
 5865 053a 74       		.sleb128 -12
 5866 053b 00       		.byte	0
 5867 053c 1B       		.uleb128 0x1b
 5868 053d 7D080000 		.4byte	.LASF84
 5869 0541 01       		.byte	0x1
 5870 0542 B102     		.2byte	0x2b1
 5871 0544 00000000 		.4byte	.LFB77
 5872 0548 18000000 		.4byte	.LFE77-.LFB77
 5873 054c 01       		.uleb128 0x1
 5874 054d 9C       		.byte	0x9c
 5875 054e 1B       		.uleb128 0x1b
 5876 054f AB090000 		.4byte	.LASF85
 5877 0553 01       		.byte	0x1
 5878 0554 B702     		.2byte	0x2b7
 5879 0556 00000000 		.4byte	.LFB78
 5880 055a 18000000 		.4byte	.LFE78-.LFB78
 5881 055e 01       		.uleb128 0x1
 5882 055f 9C       		.byte	0x9c
 5883 0560 1B       		.uleb128 0x1b
 5884 0561 EE070000 		.4byte	.LASF86
 5885 0565 01       		.byte	0x1
 5886 0566 BD02     		.2byte	0x2bd
 5887 0568 00000000 		.4byte	.LFB79
 5888 056c 22000000 		.4byte	.LFE79-.LFB79
 5889 0570 01       		.uleb128 0x1
 5890 0571 9C       		.byte	0x9c
 5891 0572 1B       		.uleb128 0x1b
 5892 0573 77020000 		.4byte	.LASF87
 5893 0577 01       		.byte	0x1
 5894 0578 C302     		.2byte	0x2c3
 5895 057a 00000000 		.4byte	.LFB80
 5896 057e 1C000000 		.4byte	.LFE80-.LFB80
 5897 0582 01       		.uleb128 0x1
 5898 0583 9C       		.byte	0x9c
 5899 0584 1B       		.uleb128 0x1b
 5900 0585 51070000 		.4byte	.LASF88
 5901 0589 01       		.byte	0x1
 5902 058a C802     		.2byte	0x2c8
 5903 058c 00000000 		.4byte	.LFB81
 5904 0590 34000000 		.4byte	.LFE81-.LFB81
 5905 0594 01       		.uleb128 0x1
 5906 0595 9C       		.byte	0x9c
 5907 0596 1B       		.uleb128 0x1b
 5908 0597 85020000 		.4byte	.LASF89
 5909 059b 01       		.byte	0x1
 5910 059c CD02     		.2byte	0x2cd
 5911 059e 00000000 		.4byte	.LFB82
 5912 05a2 38000000 		.4byte	.LFE82-.LFB82
 5913 05a6 01       		.uleb128 0x1
 5914 05a7 9C       		.byte	0x9c
 5915 05a8 1B       		.uleb128 0x1b
 5916 05a9 F7030000 		.4byte	.LASF90
 5917 05ad 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 126


 5918 05ae D202     		.2byte	0x2d2
 5919 05b0 00000000 		.4byte	.LFB83
 5920 05b4 4C000000 		.4byte	.LFE83-.LFB83
 5921 05b8 01       		.uleb128 0x1
 5922 05b9 9C       		.byte	0x9c
 5923 05ba 1B       		.uleb128 0x1b
 5924 05bb D8020000 		.4byte	.LASF91
 5925 05bf 01       		.byte	0x1
 5926 05c0 D702     		.2byte	0x2d7
 5927 05c2 00000000 		.4byte	.LFB84
 5928 05c6 38000000 		.4byte	.LFE84-.LFB84
 5929 05ca 01       		.uleb128 0x1
 5930 05cb 9C       		.byte	0x9c
 5931 05cc 1B       		.uleb128 0x1b
 5932 05cd A9060000 		.4byte	.LASF92
 5933 05d1 01       		.byte	0x1
 5934 05d2 E002     		.2byte	0x2e0
 5935 05d4 00000000 		.4byte	.LFB85
 5936 05d8 38000000 		.4byte	.LFE85-.LFB85
 5937 05dc 01       		.uleb128 0x1
 5938 05dd 9C       		.byte	0x9c
 5939 05de 1B       		.uleb128 0x1b
 5940 05df 81060000 		.4byte	.LASF93
 5941 05e3 01       		.byte	0x1
 5942 05e4 E902     		.2byte	0x2e9
 5943 05e6 00000000 		.4byte	.LFB86
 5944 05ea 38000000 		.4byte	.LFE86-.LFB86
 5945 05ee 01       		.uleb128 0x1
 5946 05ef 9C       		.byte	0x9c
 5947 05f0 1B       		.uleb128 0x1b
 5948 05f1 02020000 		.4byte	.LASF94
 5949 05f5 01       		.byte	0x1
 5950 05f6 F202     		.2byte	0x2f2
 5951 05f8 00000000 		.4byte	.LFB87
 5952 05fc 14000000 		.4byte	.LFE87-.LFB87
 5953 0600 01       		.uleb128 0x1
 5954 0601 9C       		.byte	0x9c
 5955 0602 1C       		.uleb128 0x1c
 5956 0603 EE020000 		.4byte	.LASF95
 5957 0607 01       		.byte	0x1
 5958 0608 F702     		.2byte	0x2f7
 5959 060a 00000000 		.4byte	.LFB88
 5960 060e 18000000 		.4byte	.LFE88-.LFB88
 5961 0612 01       		.uleb128 0x1
 5962 0613 9C       		.byte	0x9c
 5963 0614 1C       		.uleb128 0x1c
 5964 0615 A3040000 		.4byte	.LASF96
 5965 0619 01       		.byte	0x1
 5966 061a FB02     		.2byte	0x2fb
 5967 061c 00000000 		.4byte	.LFB89
 5968 0620 18000000 		.4byte	.LFE89-.LFB89
 5969 0624 01       		.uleb128 0x1
 5970 0625 9C       		.byte	0x9c
 5971 0626 1C       		.uleb128 0x1c
 5972 0627 B6090000 		.4byte	.LASF97
 5973 062b 01       		.byte	0x1
 5974 062c 0003     		.2byte	0x300
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 127


 5975 062e 00000000 		.4byte	.LFB90
 5976 0632 18000000 		.4byte	.LFE90-.LFB90
 5977 0636 01       		.uleb128 0x1
 5978 0637 9C       		.byte	0x9c
 5979 0638 1C       		.uleb128 0x1c
 5980 0639 82030000 		.4byte	.LASF98
 5981 063d 01       		.byte	0x1
 5982 063e 0403     		.2byte	0x304
 5983 0640 00000000 		.4byte	.LFB91
 5984 0644 18000000 		.4byte	.LFE91-.LFB91
 5985 0648 01       		.uleb128 0x1
 5986 0649 9C       		.byte	0x9c
 5987 064a 17       		.uleb128 0x17
 5988 064b D8060000 		.4byte	.LASF99
 5989 064f 01       		.byte	0x1
 5990 0650 0B03     		.2byte	0x30b
 5991 0652 00000000 		.4byte	.LFB92
 5992 0656 B8000000 		.4byte	.LFE92-.LFB92
 5993 065a 01       		.uleb128 0x1
 5994 065b 9C       		.byte	0x9c
 5995 065c 70060000 		.4byte	0x670
 5996 0660 14       		.uleb128 0x14
 5997 0661 55050000 		.4byte	.LASF100
 5998 0665 01       		.byte	0x1
 5999 0666 0C03     		.2byte	0x30c
 6000 0668 8E000000 		.4byte	0x8e
 6001 066c 02       		.uleb128 0x2
 6002 066d 91       		.byte	0x91
 6003 066e 6F       		.sleb128 -17
 6004 066f 00       		.byte	0
 6005 0670 17       		.uleb128 0x17
 6006 0671 FA050000 		.4byte	.LASF101
 6007 0675 01       		.byte	0x1
 6008 0676 2803     		.2byte	0x328
 6009 0678 00000000 		.4byte	.LFB93
 6010 067c C8030000 		.4byte	.LFE93-.LFB93
 6011 0680 01       		.uleb128 0x1
 6012 0681 9C       		.byte	0x9c
 6013 0682 D8060000 		.4byte	0x6d8
 6014 0686 14       		.uleb128 0x14
 6015 0687 55050000 		.4byte	.LASF100
 6016 068b 01       		.byte	0x1
 6017 068c 2A03     		.2byte	0x32a
 6018 068e 8E000000 		.4byte	0x8e
 6019 0692 02       		.uleb128 0x2
 6020 0693 91       		.byte	0x91
 6021 0694 6F       		.sleb128 -17
 6022 0695 12       		.uleb128 0x12
 6023 0696 48010000 		.4byte	.LBB11
 6024 069a 42020000 		.4byte	.LBE11-.LBB11
 6025 069e 15       		.uleb128 0x15
 6026 069f 6D657300 		.ascii	"mes\000"
 6027 06a3 01       		.byte	0x1
 6028 06a4 5003     		.2byte	0x350
 6029 06a6 09040000 		.4byte	0x409
 6030 06aa 02       		.uleb128 0x2
 6031 06ab 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 128


 6032 06ac 5C       		.sleb128 -36
 6033 06ad 15       		.uleb128 0x15
 6034 06ae 6900     		.ascii	"i\000"
 6035 06b0 01       		.byte	0x1
 6036 06b1 6303     		.2byte	0x363
 6037 06b3 73000000 		.4byte	0x73
 6038 06b7 02       		.uleb128 0x2
 6039 06b8 91       		.byte	0x91
 6040 06b9 74       		.sleb128 -12
 6041 06ba 14       		.uleb128 0x14
 6042 06bb AD040000 		.4byte	.LASF69
 6043 06bf 01       		.byte	0x1
 6044 06c0 7003     		.2byte	0x370
 6045 06c2 8E000000 		.4byte	0x8e
 6046 06c6 02       		.uleb128 0x2
 6047 06c7 91       		.byte	0x91
 6048 06c8 6E       		.sleb128 -18
 6049 06c9 15       		.uleb128 0x15
 6050 06ca 7800     		.ascii	"x\000"
 6051 06cc 01       		.byte	0x1
 6052 06cd 7F03     		.2byte	0x37f
 6053 06cf 73000000 		.4byte	0x73
 6054 06d3 02       		.uleb128 0x2
 6055 06d4 91       		.byte	0x91
 6056 06d5 70       		.sleb128 -16
 6057 06d6 00       		.byte	0
 6058 06d7 00       		.byte	0
 6059 06d8 1B       		.uleb128 0x1b
 6060 06d9 CD020000 		.4byte	.LASF102
 6061 06dd 01       		.byte	0x1
 6062 06de 9703     		.2byte	0x397
 6063 06e0 00000000 		.4byte	.LFB94
 6064 06e4 40000000 		.4byte	.LFE94-.LFB94
 6065 06e8 01       		.uleb128 0x1
 6066 06e9 9C       		.byte	0x9c
 6067 06ea 1B       		.uleb128 0x1b
 6068 06eb 61020000 		.4byte	.LASF103
 6069 06ef 01       		.byte	0x1
 6070 06f0 A603     		.2byte	0x3a6
 6071 06f2 00000000 		.4byte	.LFB95
 6072 06f6 40000000 		.4byte	.LFE95-.LFB95
 6073 06fa 01       		.uleb128 0x1
 6074 06fb 9C       		.byte	0x9c
 6075 06fc 19       		.uleb128 0x19
 6076 06fd 90000000 		.4byte	.LASF104
 6077 0701 01       		.byte	0x1
 6078 0702 B603     		.2byte	0x3b6
 6079 0704 00000000 		.4byte	.LFB96
 6080 0708 30020000 		.4byte	.LFE96-.LFB96
 6081 070c 01       		.uleb128 0x1
 6082 070d 9C       		.byte	0x9c
 6083 070e 6D070000 		.4byte	0x76d
 6084 0712 14       		.uleb128 0x14
 6085 0713 15030000 		.4byte	.LASF105
 6086 0717 01       		.byte	0x1
 6087 0718 C403     		.2byte	0x3c4
 6088 071a DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 129


 6089 071e 02       		.uleb128 0x2
 6090 071f 91       		.byte	0x91
 6091 0720 5E       		.sleb128 -34
 6092 0721 14       		.uleb128 0x14
 6093 0722 73050000 		.4byte	.LASF106
 6094 0726 01       		.byte	0x1
 6095 0727 C503     		.2byte	0x3c5
 6096 0729 DB000000 		.4byte	0xdb
 6097 072d 02       		.uleb128 0x2
 6098 072e 91       		.byte	0x91
 6099 072f 5C       		.sleb128 -36
 6100 0730 14       		.uleb128 0x14
 6101 0731 B1030000 		.4byte	.LASF107
 6102 0735 01       		.byte	0x1
 6103 0736 C603     		.2byte	0x3c6
 6104 0738 EE000000 		.4byte	0xee
 6105 073c 02       		.uleb128 0x2
 6106 073d 91       		.byte	0x91
 6107 073e 68       		.sleb128 -24
 6108 073f 14       		.uleb128 0x14
 6109 0740 6F090000 		.4byte	.LASF108
 6110 0744 01       		.byte	0x1
 6111 0745 C703     		.2byte	0x3c7
 6112 0747 EE000000 		.4byte	0xee
 6113 074b 02       		.uleb128 0x2
 6114 074c 91       		.byte	0x91
 6115 074d 60       		.sleb128 -32
 6116 074e 14       		.uleb128 0x14
 6117 074f 53040000 		.4byte	.LASF109
 6118 0753 01       		.byte	0x1
 6119 0754 D003     		.2byte	0x3d0
 6120 0756 73000000 		.4byte	0x73
 6121 075a 02       		.uleb128 0x2
 6122 075b 91       		.byte	0x91
 6123 075c 58       		.sleb128 -40
 6124 075d 14       		.uleb128 0x14
 6125 075e 17090000 		.4byte	.LASF110
 6126 0762 01       		.byte	0x1
 6127 0763 D103     		.2byte	0x3d1
 6128 0765 73000000 		.4byte	0x73
 6129 0769 02       		.uleb128 0x2
 6130 076a 91       		.byte	0x91
 6131 076b 54       		.sleb128 -44
 6132 076c 00       		.byte	0
 6133 076d 1C       		.uleb128 0x1c
 6134 076e CA050000 		.4byte	.LASF111
 6135 0772 01       		.byte	0x1
 6136 0773 DF03     		.2byte	0x3df
 6137 0775 00000000 		.4byte	.LFB97
 6138 0779 0C000000 		.4byte	.LFE97-.LFB97
 6139 077d 01       		.uleb128 0x1
 6140 077e 9C       		.byte	0x9c
 6141 077f 19       		.uleb128 0x19
 6142 0780 92010000 		.4byte	.LASF112
 6143 0784 01       		.byte	0x1
 6144 0785 E503     		.2byte	0x3e5
 6145 0787 00000000 		.4byte	.LFB98
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 130


 6146 078b 4C010000 		.4byte	.LFE98-.LFB98
 6147 078f 01       		.uleb128 0x1
 6148 0790 9C       		.byte	0x9c
 6149 0791 C1070000 		.4byte	0x7c1
 6150 0795 15       		.uleb128 0x15
 6151 0796 6E6C00   		.ascii	"nl\000"
 6152 0799 01       		.byte	0x1
 6153 079a E903     		.2byte	0x3e9
 6154 079c AB000000 		.4byte	0xab
 6155 07a0 02       		.uleb128 0x2
 6156 07a1 91       		.byte	0x91
 6157 07a2 67       		.sleb128 -25
 6158 07a3 15       		.uleb128 0x15
 6159 07a4 6E7200   		.ascii	"nr\000"
 6160 07a7 01       		.byte	0x1
 6161 07a8 EA03     		.2byte	0x3ea
 6162 07aa AB000000 		.4byte	0xab
 6163 07ae 02       		.uleb128 0x2
 6164 07af 91       		.byte	0x91
 6165 07b0 66       		.sleb128 -26
 6166 07b1 15       		.uleb128 0x15
 6167 07b2 6D696400 		.ascii	"mid\000"
 6168 07b6 01       		.byte	0x1
 6169 07b7 EB03     		.2byte	0x3eb
 6170 07b9 AB000000 		.4byte	0xab
 6171 07bd 02       		.uleb128 0x2
 6172 07be 91       		.byte	0x91
 6173 07bf 65       		.sleb128 -27
 6174 07c0 00       		.byte	0
 6175 07c1 1C       		.uleb128 0x1c
 6176 07c2 77010000 		.4byte	.LASF113
 6177 07c6 01       		.byte	0x1
 6178 07c7 0504     		.2byte	0x405
 6179 07c9 00000000 		.4byte	.LFB99
 6180 07cd 0C000000 		.4byte	.LFE99-.LFB99
 6181 07d1 01       		.uleb128 0x1
 6182 07d2 9C       		.byte	0x9c
 6183 07d3 19       		.uleb128 0x19
 6184 07d4 A7030000 		.4byte	.LASF114
 6185 07d8 01       		.byte	0x1
 6186 07d9 0A04     		.2byte	0x40a
 6187 07db 00000000 		.4byte	.LFB100
 6188 07df C0000000 		.4byte	.LFE100-.LFB100
 6189 07e3 01       		.uleb128 0x1
 6190 07e4 9C       		.byte	0x9c
 6191 07e5 21080000 		.4byte	0x821
 6192 07e9 12       		.uleb128 0x12
 6193 07ea 0E000000 		.4byte	.LBB12
 6194 07ee 8E000000 		.4byte	.LBE12-.LBB12
 6195 07f2 14       		.uleb128 0x14
 6196 07f3 07030000 		.4byte	.LASF115
 6197 07f7 01       		.byte	0x1
 6198 07f8 1304     		.2byte	0x413
 6199 07fa E7000000 		.4byte	0xe7
 6200 07fe 02       		.uleb128 0x2
 6201 07ff 91       		.byte	0x91
 6202 0800 74       		.sleb128 -12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 131


 6203 0801 14       		.uleb128 0x14
 6204 0802 B1050000 		.4byte	.LASF116
 6205 0806 01       		.byte	0x1
 6206 0807 1404     		.2byte	0x414
 6207 0809 DB000000 		.4byte	0xdb
 6208 080d 02       		.uleb128 0x2
 6209 080e 91       		.byte	0x91
 6210 080f 72       		.sleb128 -14
 6211 0810 14       		.uleb128 0x14
 6212 0811 6A030000 		.4byte	.LASF117
 6213 0815 01       		.byte	0x1
 6214 0816 1904     		.2byte	0x419
 6215 0818 09040000 		.4byte	0x409
 6216 081c 02       		.uleb128 0x2
 6217 081d 91       		.byte	0x91
 6218 081e 60       		.sleb128 -32
 6219 081f 00       		.byte	0
 6220 0820 00       		.byte	0
 6221 0821 19       		.uleb128 0x19
 6222 0822 58090000 		.4byte	.LASF118
 6223 0826 01       		.byte	0x1
 6224 0827 2004     		.2byte	0x420
 6225 0829 00000000 		.4byte	.LFB101
 6226 082d B8000000 		.4byte	.LFE101-.LFB101
 6227 0831 01       		.uleb128 0x1
 6228 0832 9C       		.byte	0x9c
 6229 0833 51080000 		.4byte	0x851
 6230 0837 12       		.uleb128 0x12
 6231 0838 0E000000 		.4byte	.LBB13
 6232 083c 86000000 		.4byte	.LBE13-.LBB13
 6233 0840 14       		.uleb128 0x14
 6234 0841 CC060000 		.4byte	.LASF119
 6235 0845 01       		.byte	0x1
 6236 0846 2404     		.2byte	0x424
 6237 0848 09040000 		.4byte	0x409
 6238 084c 02       		.uleb128 0x2
 6239 084d 91       		.byte	0x91
 6240 084e 68       		.sleb128 -24
 6241 084f 00       		.byte	0
 6242 0850 00       		.byte	0
 6243 0851 17       		.uleb128 0x17
 6244 0852 6B070000 		.4byte	.LASF120
 6245 0856 01       		.byte	0x1
 6246 0857 3504     		.2byte	0x435
 6247 0859 00000000 		.4byte	.LFB102
 6248 085d 4A000000 		.4byte	.LFE102-.LFB102
 6249 0861 01       		.uleb128 0x1
 6250 0862 9C       		.byte	0x9c
 6251 0863 77080000 		.4byte	0x877
 6252 0867 1A       		.uleb128 0x1a
 6253 0868 5F030000 		.4byte	.LASF121
 6254 086c 01       		.byte	0x1
 6255 086d 3504     		.2byte	0x435
 6256 086f 77080000 		.4byte	0x877
 6257 0873 02       		.uleb128 0x2
 6258 0874 91       		.byte	0x91
 6259 0875 6C       		.sleb128 -20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 132


 6260 0876 00       		.byte	0
 6261 0877 05       		.uleb128 0x5
 6262 0878 04       		.byte	0x4
 6263 0879 AB000000 		.4byte	0xab
 6264 087d 17       		.uleb128 0x17
 6265 087e 44070000 		.4byte	.LASF122
 6266 0882 01       		.byte	0x1
 6267 0883 4004     		.2byte	0x440
 6268 0885 00000000 		.4byte	.LFB103
 6269 0889 68000000 		.4byte	.LFE103-.LFB103
 6270 088d 01       		.uleb128 0x1
 6271 088e 9C       		.byte	0x9c
 6272 088f BA080000 		.4byte	0x8ba
 6273 0893 18       		.uleb128 0x18
 6274 0894 7300     		.ascii	"s\000"
 6275 0896 01       		.byte	0x1
 6276 0897 4004     		.2byte	0x440
 6277 0899 88000000 		.4byte	0x88
 6278 089d 02       		.uleb128 0x2
 6279 089e 91       		.byte	0x91
 6280 089f 6C       		.sleb128 -20
 6281 08a0 12       		.uleb128 0x12
 6282 08a1 10000000 		.4byte	.LBB14
 6283 08a5 48000000 		.4byte	.LBE14-.LBB14
 6284 08a9 15       		.uleb128 0x15
 6285 08aa 636E7400 		.ascii	"cnt\000"
 6286 08ae 01       		.byte	0x1
 6287 08af 4704     		.2byte	0x447
 6288 08b1 C3000000 		.4byte	0xc3
 6289 08b5 02       		.uleb128 0x2
 6290 08b6 91       		.byte	0x91
 6291 08b7 74       		.sleb128 -12
 6292 08b8 00       		.byte	0
 6293 08b9 00       		.byte	0
 6294 08ba 17       		.uleb128 0x17
 6295 08bb C3080000 		.4byte	.LASF123
 6296 08bf 01       		.byte	0x1
 6297 08c0 5604     		.2byte	0x456
 6298 08c2 00000000 		.4byte	.LFB104
 6299 08c6 50000000 		.4byte	.LFE104-.LFB104
 6300 08ca 01       		.uleb128 0x1
 6301 08cb 9C       		.byte	0x9c
 6302 08cc F7080000 		.4byte	0x8f7
 6303 08d0 18       		.uleb128 0x18
 6304 08d1 6300     		.ascii	"c\000"
 6305 08d3 01       		.byte	0x1
 6306 08d4 5604     		.2byte	0x456
 6307 08d6 8E000000 		.4byte	0x8e
 6308 08da 02       		.uleb128 0x2
 6309 08db 91       		.byte	0x91
 6310 08dc 6F       		.sleb128 -17
 6311 08dd 12       		.uleb128 0x12
 6312 08de 12000000 		.4byte	.LBB15
 6313 08e2 2E000000 		.4byte	.LBE15-.LBB15
 6314 08e6 15       		.uleb128 0x15
 6315 08e7 636E7400 		.ascii	"cnt\000"
 6316 08eb 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 133


 6317 08ec 5A04     		.2byte	0x45a
 6318 08ee C3000000 		.4byte	0xc3
 6319 08f2 02       		.uleb128 0x2
 6320 08f3 91       		.byte	0x91
 6321 08f4 74       		.sleb128 -12
 6322 08f5 00       		.byte	0
 6323 08f6 00       		.byte	0
 6324 08f7 1C       		.uleb128 0x1c
 6325 08f8 75030000 		.4byte	.LASF124
 6326 08fc 01       		.byte	0x1
 6327 08fd 6704     		.2byte	0x467
 6328 08ff 00000000 		.4byte	.LFB105
 6329 0903 0C000000 		.4byte	.LFE105-.LFB105
 6330 0907 01       		.uleb128 0x1
 6331 0908 9C       		.byte	0x9c
 6332 0909 1D       		.uleb128 0x1d
 6333 090a BF060000 		.4byte	.LASF125
 6334 090e 06       		.byte	0x6
 6335 090f 9606     		.2byte	0x696
 6336 0911 15090000 		.4byte	0x915
 6337 0915 1E       		.uleb128 0x1e
 6338 0916 95000000 		.4byte	0x95
 6339 091a 1F       		.uleb128 0x1f
 6340 091b 747300   		.ascii	"ts\000"
 6341 091e 05       		.byte	0x5
 6342 091f 10       		.byte	0x10
 6343 0920 AB000000 		.4byte	0xab
 6344 0924 05       		.uleb128 0x5
 6345 0925 03       		.byte	0x3
 6346 0926 00000000 		.4byte	ts
 6347 092a 20       		.uleb128 0x20
 6348 092b 45080000 		.4byte	.LASF126
 6349 092f 05       		.byte	0x5
 6350 0930 11       		.byte	0x11
 6351 0931 B7000000 		.4byte	0xb7
 6352 0935 05       		.uleb128 0x5
 6353 0936 03       		.byte	0x3
 6354 0937 00000000 		.4byte	ts_enc
 6355 093b 20       		.uleb128 0x20
 6356 093c DE060000 		.4byte	.LASF127
 6357 0940 05       		.byte	0x5
 6358 0941 12       		.byte	0x12
 6359 0942 B7000000 		.4byte	0xb7
 6360 0946 05       		.uleb128 0x5
 6361 0947 03       		.byte	0x3
 6362 0948 00000000 		.4byte	ts_update
 6363 094c 20       		.uleb128 0x20
 6364 094d 7E050000 		.4byte	.LASF128
 6365 0951 05       		.byte	0x5
 6366 0952 13       		.byte	0x13
 6367 0953 B7000000 		.4byte	0xb7
 6368 0957 05       		.uleb128 0x5
 6369 0958 03       		.byte	0x3
 6370 0959 00000000 		.4byte	ts_speed
 6371 095d 20       		.uleb128 0x20
 6372 095e 9C030000 		.4byte	.LASF129
 6373 0962 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 134


 6374 0963 14       		.byte	0x14
 6375 0964 B7000000 		.4byte	0xb7
 6376 0968 05       		.uleb128 0x5
 6377 0969 03       		.byte	0x3
 6378 096a 00000000 		.4byte	ts_display
 6379 096e 20       		.uleb128 0x20
 6380 096f 1F030000 		.4byte	.LASF130
 6381 0973 05       		.byte	0x5
 6382 0974 16       		.byte	0x16
 6383 0975 AB000000 		.4byte	0xab
 6384 0979 05       		.uleb128 0x5
 6385 097a 03       		.byte	0x3
 6386 097b 00000000 		.4byte	flag_ts_enc
 6387 097f 20       		.uleb128 0x20
 6388 0980 F8020000 		.4byte	.LASF131
 6389 0984 05       		.byte	0x5
 6390 0985 17       		.byte	0x17
 6391 0986 AB000000 		.4byte	0xab
 6392 098a 05       		.uleb128 0x5
 6393 098b 03       		.byte	0x3
 6394 098c 00000000 		.4byte	flag_ts_update
 6395 0990 20       		.uleb128 0x20
 6396 0991 39060000 		.4byte	.LASF132
 6397 0995 05       		.byte	0x5
 6398 0996 18       		.byte	0x18
 6399 0997 AB000000 		.4byte	0xab
 6400 099b 05       		.uleb128 0x5
 6401 099c 03       		.byte	0x3
 6402 099d 00000000 		.4byte	flag_ts_speed
 6403 09a1 20       		.uleb128 0x20
 6404 09a2 56080000 		.4byte	.LASF133
 6405 09a6 05       		.byte	0x5
 6406 09a7 19       		.byte	0x19
 6407 09a8 AB000000 		.4byte	0xab
 6408 09ac 05       		.uleb128 0x5
 6409 09ad 03       		.byte	0x3
 6410 09ae 00000000 		.4byte	flag_ts_display
 6411 09b2 20       		.uleb128 0x20
 6412 09b3 64060000 		.4byte	.LASF134
 6413 09b7 05       		.byte	0x5
 6414 09b8 1C       		.byte	0x1c
 6415 09b9 AB000000 		.4byte	0xab
 6416 09bd 05       		.uleb128 0x5
 6417 09be 03       		.byte	0x3
 6418 09bf 00000000 		.4byte	flag_rx
 6419 09c3 20       		.uleb128 0x20
 6420 09c4 A5020000 		.4byte	.LASF135
 6421 09c8 05       		.byte	0x5
 6422 09c9 1D       		.byte	0x1d
 6423 09ca AB000000 		.4byte	0xab
 6424 09ce 05       		.uleb128 0x5
 6425 09cf 03       		.byte	0x3
 6426 09d0 00000000 		.4byte	flag_packet
 6427 09d4 20       		.uleb128 0x20
 6428 09d5 7C090000 		.4byte	.LASF136
 6429 09d9 05       		.byte	0x5
 6430 09da 1E       		.byte	0x1e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 135


 6431 09db AB000000 		.4byte	0xab
 6432 09df 05       		.uleb128 0x5
 6433 09e0 03       		.byte	0x3
 6434 09e1 00000000 		.4byte	flag_KB_string
 6435 09e5 20       		.uleb128 0x20
 6436 09e6 47060000 		.4byte	.LASF137
 6437 09ea 05       		.byte	0x5
 6438 09eb 20       		.byte	0x20
 6439 09ec AB000000 		.4byte	0xab
 6440 09f0 05       		.uleb128 0x5
 6441 09f1 03       		.byte	0x3
 6442 09f2 00000000 		.4byte	dataready_flag
 6443 09f6 20       		.uleb128 0x20
 6444 09f7 BE010000 		.4byte	.LASF138
 6445 09fb 05       		.byte	0x5
 6446 09fc 22       		.byte	0x22
 6447 09fd AB000000 		.4byte	0xab
 6448 0a01 05       		.uleb128 0x5
 6449 0a02 03       		.byte	0x3
 6450 0a03 00000000 		.4byte	flag_rf_transmission_active
 6451 0a07 20       		.uleb128 0x20
 6452 0a08 DA010000 		.4byte	.LASF139
 6453 0a0c 05       		.byte	0x5
 6454 0a0d 23       		.byte	0x23
 6455 0a0e AB000000 		.4byte	0xab
 6456 0a12 05       		.uleb128 0x5
 6457 0a13 03       		.byte	0x3
 6458 0a14 00000000 		.4byte	flag_print_rf
 6459 0a18 20       		.uleb128 0x20
 6460 0a19 E1050000 		.4byte	.LASF140
 6461 0a1d 05       		.byte	0x5
 6462 0a1e 25       		.byte	0x25
 6463 0a1f AB000000 		.4byte	0xab
 6464 0a23 05       		.uleb128 0x5
 6465 0a24 03       		.byte	0x3
 6466 0a25 00000000 		.4byte	flag_receive_ADC
 6467 0a29 20       		.uleb128 0x20
 6468 0a2a 76060000 		.4byte	.LASF141
 6469 0a2e 05       		.byte	0x5
 6470 0a2f 26       		.byte	0x26
 6471 0a30 DB000000 		.4byte	0xdb
 6472 0a34 05       		.uleb128 0x5
 6473 0a35 03       		.byte	0x3
 6474 0a36 00000000 		.4byte	adc_result
 6475 0a3a 20       		.uleb128 0x20
 6476 0a3b 00000000 		.4byte	.LASF142
 6477 0a3f 05       		.byte	0x5
 6478 0a40 28       		.byte	0x28
 6479 0a41 AB000000 		.4byte	0xab
 6480 0a45 05       		.uleb128 0x5
 6481 0a46 03       		.byte	0x3
 6482 0a47 00000000 		.4byte	direction
 6483 0a4b 20       		.uleb128 0x20
 6484 0a4c 67050000 		.4byte	.LASF143
 6485 0a50 05       		.byte	0x5
 6486 0a51 2B       		.byte	0x2b
 6487 0a52 AB000000 		.4byte	0xab
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 136


 6488 0a56 05       		.uleb128 0x5
 6489 0a57 03       		.byte	0x3
 6490 0a58 00000000 		.4byte	BIN_ENABLED
 6491 0a5c 20       		.uleb128 0x20
 6492 0a5d 5D040000 		.4byte	.LASF144
 6493 0a61 05       		.byte	0x5
 6494 0a62 2D       		.byte	0x2d
 6495 0a63 AB000000 		.4byte	0xab
 6496 0a67 05       		.uleb128 0x5
 6497 0a68 03       		.byte	0x3
 6498 0a69 00000000 		.4byte	BT_ENABLED
 6499 0a6d 20       		.uleb128 0x20
 6500 0a6e 8B060000 		.4byte	.LASF145
 6501 0a72 05       		.byte	0x5
 6502 0a73 32       		.byte	0x32
 6503 0a74 AB000000 		.4byte	0xab
 6504 0a78 05       		.uleb128 0x5
 6505 0a79 03       		.byte	0x3
 6506 0a7a 00000000 		.4byte	flag_calc_wheelspeed
 6507 0a7e 20       		.uleb128 0x20
 6508 0a7f 5F010000 		.4byte	.LASF146
 6509 0a83 05       		.byte	0x5
 6510 0a84 33       		.byte	0x33
 6511 0a85 DB000000 		.4byte	0xdb
 6512 0a89 05       		.uleb128 0x5
 6513 0a8a 03       		.byte	0x3
 6514 0a8b 00000000 		.4byte	quad_count1
 6515 0a8f 20       		.uleb128 0x20
 6516 0a90 6B010000 		.4byte	.LASF147
 6517 0a94 05       		.byte	0x5
 6518 0a95 34       		.byte	0x34
 6519 0a96 DB000000 		.4byte	0xdb
 6520 0a9a 05       		.uleb128 0x5
 6521 0a9b 03       		.byte	0x3
 6522 0a9c 00000000 		.4byte	quad_count2
 6523 0aa0 20       		.uleb128 0x20
 6524 0aa1 95080000 		.4byte	.LASF148
 6525 0aa5 05       		.byte	0x5
 6526 0aa6 35       		.byte	0x35
 6527 0aa7 DB000000 		.4byte	0xdb
 6528 0aab 05       		.uleb128 0x5
 6529 0aac 03       		.byte	0x3
 6530 0aad 00000000 		.4byte	last_quad_count1
 6531 0ab1 20       		.uleb128 0x20
 6532 0ab2 A6080000 		.4byte	.LASF149
 6533 0ab6 05       		.byte	0x5
 6534 0ab7 36       		.byte	0x36
 6535 0ab8 DB000000 		.4byte	0xdb
 6536 0abc 05       		.uleb128 0x5
 6537 0abd 03       		.byte	0x3
 6538 0abe 00000000 		.4byte	last_quad_count2
 6539 0ac2 20       		.uleb128 0x20
 6540 0ac3 7A000000 		.4byte	.LASF150
 6541 0ac7 05       		.byte	0x5
 6542 0ac8 37       		.byte	0x37
 6543 0ac9 DB000000 		.4byte	0xdb
 6544 0acd 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 137


 6545 0ace 03       		.byte	0x3
 6546 0acf 00000000 		.4byte	quad_diff1
 6547 0ad3 20       		.uleb128 0x20
 6548 0ad4 85000000 		.4byte	.LASF151
 6549 0ad8 05       		.byte	0x5
 6550 0ad9 38       		.byte	0x38
 6551 0ada DB000000 		.4byte	0xdb
 6552 0ade 05       		.uleb128 0x5
 6553 0adf 03       		.byte	0x3
 6554 0ae0 00000000 		.4byte	quad_diff2
 6555 0ae4 20       		.uleb128 0x20
 6556 0ae5 F1060000 		.4byte	.LASF152
 6557 0ae9 05       		.byte	0x5
 6558 0aea 39       		.byte	0x39
 6559 0aeb AB000000 		.4byte	0xab
 6560 0aef 05       		.uleb128 0x5
 6561 0af0 03       		.byte	0x3
 6562 0af1 00000000 		.4byte	deadzone
 6563 0af5 20       		.uleb128 0x20
 6564 0af6 AE000000 		.4byte	.LASF153
 6565 0afa 05       		.byte	0x5
 6566 0afb 3C       		.byte	0x3c
 6567 0afc DB000000 		.4byte	0xdb
 6568 0b00 05       		.uleb128 0x5
 6569 0b01 03       		.byte	0x3
 6570 0b02 00000000 		.4byte	start_turn_count
 6571 0b06 20       		.uleb128 0x20
 6572 0b07 1C060000 		.4byte	.LASF154
 6573 0b0b 05       		.byte	0x5
 6574 0b0c 3F       		.byte	0x3f
 6575 0b0d DB000000 		.4byte	0xdb
 6576 0b11 05       		.uleb128 0x5
 6577 0b12 03       		.byte	0x3
 6578 0b13 00000000 		.4byte	left_duty_cycle
 6579 0b17 20       		.uleb128 0x20
 6580 0b18 2E090000 		.4byte	.LASF155
 6581 0b1c 05       		.byte	0x5
 6582 0b1d 40       		.byte	0x40
 6583 0b1e DB000000 		.4byte	0xdb
 6584 0b22 05       		.uleb128 0x5
 6585 0b23 03       		.byte	0x3
 6586 0b24 00000000 		.4byte	right_duty_cycle
 6587 0b28 20       		.uleb128 0x20
 6588 0b29 FA060000 		.4byte	.LASF156
 6589 0b2d 05       		.byte	0x5
 6590 0b2e 43       		.byte	0x43
 6591 0b2f DB000000 		.4byte	0xdb
 6592 0b33 05       		.uleb128 0x5
 6593 0b34 03       		.byte	0x3
 6594 0b35 00000000 		.4byte	leftSpeedLimit
 6595 0b39 20       		.uleb128 0x20
 6596 0b3a CB030000 		.4byte	.LASF157
 6597 0b3e 05       		.byte	0x5
 6598 0b3f 44       		.byte	0x44
 6599 0b40 DB000000 		.4byte	0xdb
 6600 0b44 05       		.uleb128 0x5
 6601 0b45 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 138


 6602 0b46 00000000 		.4byte	rightSpeedLimit
 6603 0b4a 20       		.uleb128 0x20
 6604 0b4b 88070000 		.4byte	.LASF158
 6605 0b4f 05       		.byte	0x5
 6606 0b50 47       		.byte	0x47
 6607 0b51 DB000000 		.4byte	0xdb
 6608 0b55 05       		.uleb128 0x5
 6609 0b56 03       		.byte	0x3
 6610 0b57 00000000 		.4byte	target_distance_cm
 6611 0b5b 20       		.uleb128 0x20
 6612 0b5c 39070000 		.4byte	.LASF159
 6613 0b60 05       		.byte	0x5
 6614 0b61 49       		.byte	0x49
 6615 0b62 DB000000 		.4byte	0xdb
 6616 0b66 05       		.uleb128 0x5
 6617 0b67 03       		.byte	0x3
 6618 0b68 00000000 		.4byte	accum_dist
 6619 0b6c 20       		.uleb128 0x20
 6620 0b6d 0A010000 		.4byte	.LASF160
 6621 0b71 05       		.byte	0x5
 6622 0b72 4A       		.byte	0x4a
 6623 0b73 DB000000 		.4byte	0xdb
 6624 0b77 05       		.uleb128 0x5
 6625 0b78 03       		.byte	0x3
 6626 0b79 00000000 		.4byte	target_distance_quad
 6627 0b7d 20       		.uleb128 0x20
 6628 0b7e 29080000 		.4byte	.LASF161
 6629 0b82 05       		.byte	0x5
 6630 0b83 4B       		.byte	0x4b
 6631 0b84 AB000000 		.4byte	0xab
 6632 0b88 05       		.uleb128 0x5
 6633 0b89 03       		.byte	0x3
 6634 0b8a 00000000 		.4byte	reached_target
 6635 0b8e 20       		.uleb128 0x20
 6636 0b8f 24070000 		.4byte	.LASF162
 6637 0b93 05       		.byte	0x5
 6638 0b94 4C       		.byte	0x4c
 6639 0b95 AB000000 		.4byte	0xab
 6640 0b99 05       		.uleb128 0x5
 6641 0b9a 03       		.byte	0x3
 6642 0b9b 00000000 		.4byte	overshot_target
 6643 0b9f 20       		.uleb128 0x20
 6644 0ba0 7C070000 		.4byte	.LASF163
 6645 0ba4 05       		.byte	0x5
 6646 0ba5 4D       		.byte	0x4d
 6647 0ba6 E7000000 		.4byte	0xe7
 6648 0baa 05       		.uleb128 0x5
 6649 0bab 03       		.byte	0x3
 6650 0bac 00000000 		.4byte	quad_per_cm
 6651 0bb0 20       		.uleb128 0x20
 6652 0bb1 6E040000 		.4byte	.LASF164
 6653 0bb5 05       		.byte	0x5
 6654 0bb6 50       		.byte	0x50
 6655 0bb7 AB000000 		.4byte	0xab
 6656 0bbb 05       		.uleb128 0x5
 6657 0bbc 03       		.byte	0x3
 6658 0bbd 00000000 		.4byte	initial_pos_valid
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 139


 6659 0bc1 20       		.uleb128 0x20
 6660 0bc2 9D090000 		.4byte	.LASF165
 6661 0bc6 05       		.byte	0x5
 6662 0bc7 51       		.byte	0x51
 6663 0bc8 DB000000 		.4byte	0xdb
 6664 0bcc 05       		.uleb128 0x5
 6665 0bcd 03       		.byte	0x3
 6666 0bce 00000000 		.4byte	initial_x_pos
 6667 0bd2 20       		.uleb128 0x20
 6668 0bd3 56060000 		.4byte	.LASF166
 6669 0bd7 05       		.byte	0x5
 6670 0bd8 52       		.byte	0x52
 6671 0bd9 DB000000 		.4byte	0xdb
 6672 0bdd 05       		.uleb128 0x5
 6673 0bde 03       		.byte	0x3
 6674 0bdf 00000000 		.4byte	initial_y_pos
 6675 0be3 20       		.uleb128 0x20
 6676 0be4 4C080000 		.4byte	.LASF167
 6677 0be8 05       		.byte	0x5
 6678 0be9 55       		.byte	0x55
 6679 0bea AB000000 		.4byte	0xab
 6680 0bee 05       		.uleb128 0x5
 6681 0bef 03       		.byte	0x3
 6682 0bf0 00000000 		.4byte	brakeFlag
 6683 0bf4 20       		.uleb128 0x20
 6684 0bf5 E5020000 		.4byte	.LASF168
 6685 0bf9 05       		.byte	0x5
 6686 0bfa 56       		.byte	0x56
 6687 0bfb AB000000 		.4byte	0xab
 6688 0bff 05       		.uleb128 0x5
 6689 0c00 03       		.byte	0x3
 6690 0c01 00000000 		.4byte	portOpen
 6691 0c05 07       		.uleb128 0x7
 6692 0c06 AB000000 		.4byte	0xab
 6693 0c0a 150C0000 		.4byte	0xc15
 6694 0c0e 08       		.uleb128 0x8
 6695 0c0f 81000000 		.4byte	0x81
 6696 0c13 04       		.byte	0x4
 6697 0c14 00       		.byte	0
 6698 0c15 20       		.uleb128 0x20
 6699 0c16 B1020000 		.4byte	.LASF169
 6700 0c1a 05       		.byte	0x5
 6701 0c1b 59       		.byte	0x59
 6702 0c1c 050C0000 		.4byte	0xc05
 6703 0c20 05       		.uleb128 0x5
 6704 0c21 03       		.byte	0x3
 6705 0c22 00000000 		.4byte	frontSensors
 6706 0c26 20       		.uleb128 0x20
 6707 0c27 A2000000 		.4byte	.LASF170
 6708 0c2b 05       		.byte	0x5
 6709 0c2c 5D       		.byte	0x5d
 6710 0c2d DB000000 		.4byte	0xdb
 6711 0c31 05       		.uleb128 0x5
 6712 0c32 03       		.byte	0x3
 6713 0c33 00000000 		.4byte	prevVoltage
 6714 0c37 20       		.uleb128 0x20
 6715 0c38 28010000 		.4byte	.LASF171
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 140


 6716 0c3c 05       		.byte	0x5
 6717 0c3d 5E       		.byte	0x5e
 6718 0c3e DB000000 		.4byte	0xdb
 6719 0c42 05       		.uleb128 0x5
 6720 0c43 03       		.byte	0x3
 6721 0c44 00000000 		.4byte	prevVoltage2
 6722 0c48 07       		.uleb128 0x7
 6723 0c49 8E000000 		.4byte	0x8e
 6724 0c4d 580C0000 		.4byte	0xc58
 6725 0c51 08       		.uleb128 0x8
 6726 0c52 81000000 		.4byte	0x81
 6727 0c56 3F       		.byte	0x3f
 6728 0c57 00       		.byte	0
 6729 0c58 20       		.uleb128 0x20
 6730 0c59 87080000 		.4byte	.LASF172
 6731 0c5d 05       		.byte	0x5
 6732 0c5e 64       		.byte	0x64
 6733 0c5f 480C0000 		.4byte	0xc48
 6734 0c63 05       		.uleb128 0x5
 6735 0c64 03       		.byte	0x3
 6736 0c65 00000000 		.4byte	displaystring
 6737 0c69 20       		.uleb128 0x20
 6738 0c6a 24080000 		.4byte	.LASF173
 6739 0c6e 05       		.byte	0x5
 6740 0c6f 65       		.byte	0x65
 6741 0c70 480C0000 		.4byte	0xc48
 6742 0c74 05       		.uleb128 0x5
 6743 0c75 03       		.byte	0x3
 6744 0c76 00000000 		.4byte	line
 6745 0c7a 20       		.uleb128 0x20
 6746 0c7b 05080000 		.4byte	.LASF174
 6747 0c7f 05       		.byte	0x5
 6748 0c80 65       		.byte	0x65
 6749 0c81 480C0000 		.4byte	0xc48
 6750 0c85 05       		.uleb128 0x5
 6751 0c86 03       		.byte	0x3
 6752 0c87 00000000 		.4byte	entry
 6753 0c8b 07       		.uleb128 0x7
 6754 0c8c AB000000 		.4byte	0xab
 6755 0c90 9B0C0000 		.4byte	0xc9b
 6756 0c94 08       		.uleb128 0x8
 6757 0c95 81000000 		.4byte	0x81
 6758 0c99 3F       		.byte	0x3f
 6759 0c9a 00       		.byte	0
 6760 0c9b 20       		.uleb128 0x20
 6761 0c9c 3D020000 		.4byte	.LASF175
 6762 0ca0 05       		.byte	0x5
 6763 0ca1 66       		.byte	0x66
 6764 0ca2 8B0C0000 		.4byte	0xc8b
 6765 0ca6 05       		.uleb128 0x5
 6766 0ca7 03       		.byte	0x3
 6767 0ca8 00000000 		.4byte	usbBuffer
 6768 0cac 20       		.uleb128 0x20
 6769 0cad 8E040000 		.4byte	.LASF176
 6770 0cb1 05       		.byte	0x5
 6771 0cb2 7B       		.byte	0x7b
 6772 0cb3 86010000 		.4byte	0x186
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 141


 6773 0cb7 05       		.uleb128 0x5
 6774 0cb8 03       		.byte	0x3
 6775 0cb9 00000000 		.4byte	buffer_state
 6776 0cbd 20       		.uleb128 0x20
 6777 0cbe E7000000 		.4byte	.LASF177
 6778 0cc2 05       		.byte	0x5
 6779 0cc3 7C       		.byte	0x7c
 6780 0cc4 86010000 		.4byte	0x186
 6781 0cc8 05       		.uleb128 0x5
 6782 0cc9 03       		.byte	0x3
 6783 0cca 00000000 		.4byte	system_state
 6784 0cce 20       		.uleb128 0x20
 6785 0ccf 4B030000 		.4byte	.LASF178
 6786 0cd3 05       		.byte	0x5
 6787 0cd4 7E       		.byte	0x7e
 6788 0cd5 0C010000 		.4byte	0x10c
 6789 0cd9 05       		.uleb128 0x5
 6790 0cda 03       		.byte	0x3
 6791 0cdb 00000000 		.4byte	prev_movement_state
 6792 0cdf 20       		.uleb128 0x20
 6793 0ce0 E8010000 		.4byte	.LASF179
 6794 0ce4 05       		.byte	0x5
 6795 0ce5 7F       		.byte	0x7f
 6796 0ce6 0C010000 		.4byte	0x10c
 6797 0cea 05       		.uleb128 0x5
 6798 0ceb 03       		.byte	0x3
 6799 0cec 00000000 		.4byte	movement_state
 6800 0cf0 20       		.uleb128 0x20
 6801 0cf1 CC000000 		.4byte	.LASF180
 6802 0cf5 05       		.byte	0x5
 6803 0cf6 80       		.byte	0x80
 6804 0cf7 49010000 		.4byte	0x149
 6805 0cfb 05       		.uleb128 0x5
 6806 0cfc 03       		.byte	0x3
 6807 0cfd 00000000 		.4byte	track_mode
 6808 0d01 20       		.uleb128 0x20
 6809 0d02 2B030000 		.4byte	.LASF181
 6810 0d06 05       		.byte	0x5
 6811 0d07 82       		.byte	0x82
 6812 0d08 AB000000 		.4byte	0xab
 6813 0d0c 05       		.uleb128 0x5
 6814 0d0d 03       		.byte	0x3
 6815 0d0e 00000000 		.4byte	byteCount
 6816 0d12 07       		.uleb128 0x7
 6817 0d13 8E000000 		.4byte	0x8e
 6818 0d17 220D0000 		.4byte	0xd22
 6819 0d1b 08       		.uleb128 0x8
 6820 0d1c 81000000 		.4byte	0x81
 6821 0d20 01       		.byte	0x1
 6822 0d21 00       		.byte	0
 6823 0d22 20       		.uleb128 0x20
 6824 0d23 CA070000 		.4byte	.LASF182
 6825 0d27 05       		.byte	0x5
 6826 0d28 83       		.byte	0x83
 6827 0d29 120D0000 		.4byte	0xd12
 6828 0d2d 05       		.uleb128 0x5
 6829 0d2e 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 142


 6830 0d2f 00000000 		.4byte	packet
 6831 0d33 20       		.uleb128 0x20
 6832 0d34 AB010000 		.4byte	.LASF183
 6833 0d38 05       		.byte	0x5
 6834 0d39 87       		.byte	0x87
 6835 0d3a EE000000 		.4byte	0xee
 6836 0d3e 05       		.uleb128 0x5
 6837 0d3f 03       		.byte	0x3
 6838 0d40 00000000 		.4byte	speed
 6839 0d44 20       		.uleb128 0x20
 6840 0d45 E6030000 		.4byte	.LASF184
 6841 0d49 01       		.byte	0x1
 6842 0d4a 25       		.byte	0x25
 6843 0d4b B7000000 		.4byte	0xb7
 6844 0d4f 05       		.uleb128 0x5
 6845 0d50 03       		.byte	0x3
 6846 0d51 00000000 		.4byte	instructionCount
 6847 0d55 20       		.uleb128 0x20
 6848 0d56 35010000 		.4byte	.LASF185
 6849 0d5a 01       		.byte	0x1
 6850 0d5b 27       		.byte	0x27
 6851 0d5c A0000000 		.4byte	0xa0
 6852 0d60 05       		.uleb128 0x5
 6853 0d61 03       		.byte	0x3
 6854 0d62 00000000 		.4byte	sensorsDisabled
 6855 0d66 07       		.uleb128 0x7
 6856 0d67 A0000000 		.4byte	0xa0
 6857 0d6b 7C0D0000 		.4byte	0xd7c
 6858 0d6f 08       		.uleb128 0x8
 6859 0d70 81000000 		.4byte	0x81
 6860 0d74 0E       		.byte	0xe
 6861 0d75 08       		.uleb128 0x8
 6862 0d76 81000000 		.4byte	0x81
 6863 0d7a 12       		.byte	0x12
 6864 0d7b 00       		.byte	0
 6865 0d7c 1F       		.uleb128 0x1f
 6866 0d7d 6D617000 		.ascii	"map\000"
 6867 0d81 01       		.byte	0x1
 6868 0d82 30       		.byte	0x30
 6869 0d83 660D0000 		.4byte	0xd66
 6870 0d87 05       		.uleb128 0x5
 6871 0d88 03       		.byte	0x3
 6872 0d89 00000000 		.4byte	map
 6873 0d8d 07       		.uleb128 0x7
 6874 0d8e A0000000 		.4byte	0xa0
 6875 0d92 A30D0000 		.4byte	0xda3
 6876 0d96 08       		.uleb128 0x8
 6877 0d97 81000000 		.4byte	0x81
 6878 0d9b 05       		.byte	0x5
 6879 0d9c 08       		.uleb128 0x8
 6880 0d9d 81000000 		.4byte	0x81
 6881 0da1 01       		.byte	0x1
 6882 0da2 00       		.byte	0
 6883 0da3 20       		.uleb128 0x20
 6884 0da4 5D050000 		.4byte	.LASF186
 6885 0da8 01       		.byte	0x1
 6886 0da9 45       		.byte	0x45
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 143


 6887 0daa 8D0D0000 		.4byte	0xd8d
 6888 0dae 05       		.uleb128 0x5
 6889 0daf 03       		.byte	0x3
 6890 0db0 00000000 		.4byte	food_list
 6891 0db4 07       		.uleb128 0x7
 6892 0db5 A0000000 		.4byte	0xa0
 6893 0db9 CB0D0000 		.4byte	0xdcb
 6894 0dbd 21       		.uleb128 0x21
 6895 0dbe 81000000 		.4byte	0x81
 6896 0dc2 1F03     		.2byte	0x31f
 6897 0dc4 08       		.uleb128 0x8
 6898 0dc5 81000000 		.4byte	0x81
 6899 0dc9 02       		.byte	0x2
 6900 0dca 00       		.byte	0
 6901 0dcb 20       		.uleb128 0x20
 6902 0dcc 36040000 		.4byte	.LASF187
 6903 0dd0 01       		.byte	0x1
 6904 0dd1 2B       		.byte	0x2b
 6905 0dd2 B40D0000 		.4byte	0xdb4
 6906 0dd6 05       		.uleb128 0x5
 6907 0dd7 03       		.byte	0x3
 6908 0dd8 00000000 		.4byte	path
 6909 0ddc 20       		.uleb128 0x20
 6910 0ddd BF050000 		.4byte	.LASF188
 6911 0de1 01       		.byte	0x1
 6912 0de2 2C       		.byte	0x2c
 6913 0de3 F5000000 		.4byte	0xf5
 6914 0de7 05       		.uleb128 0x5
 6915 0de8 03       		.byte	0x3
 6916 0de9 00000000 		.4byte	start
 6917 0ded 20       		.uleb128 0x20
 6918 0dee B7080000 		.4byte	.LASF189
 6919 0df2 01       		.byte	0x1
 6920 0df3 2D       		.byte	0x2d
 6921 0df4 F5000000 		.4byte	0xf5
 6922 0df8 05       		.uleb128 0x5
 6923 0df9 03       		.byte	0x3
 6924 0dfa 00000000 		.4byte	destination
 6925 0dfe 20       		.uleb128 0x20
 6926 0dff 82010000 		.4byte	.LASF190
 6927 0e03 01       		.byte	0x1
 6928 0e04 29       		.byte	0x29
 6929 0e05 A0000000 		.4byte	0xa0
 6930 0e09 05       		.uleb128 0x5
 6931 0e0a 03       		.byte	0x3
 6932 0e0b 00000000 		.4byte	robot_direction
 6933 0e0f 20       		.uleb128 0x20
 6934 0e10 0A000000 		.4byte	.LASF191
 6935 0e14 07       		.byte	0x7
 6936 0e15 22       		.byte	0x22
 6937 0e16 A0000000 		.4byte	0xa0
 6938 0e1a 05       		.uleb128 0x5
 6939 0e1b 03       		.byte	0x3
 6940 0e1c 00000000 		.4byte	tracked_direction
 6941 0e20 20       		.uleb128 0x20
 6942 0e21 F9070000 		.4byte	.LASF192
 6943 0e25 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 144


 6944 0e26 47       		.byte	0x47
 6945 0e27 A0000000 		.4byte	0xa0
 6946 0e2b 05       		.uleb128 0x5
 6947 0e2c 03       		.byte	0x3
 6948 0e2d 00000000 		.4byte	food_length
 6949 0e31 07       		.uleb128 0x7
 6950 0e32 8E000000 		.4byte	0x8e
 6951 0e36 420E0000 		.4byte	0xe42
 6952 0e3a 21       		.uleb128 0x21
 6953 0e3b 81000000 		.4byte	0x81
 6954 0e3f 1F03     		.2byte	0x31f
 6955 0e41 00       		.byte	0
 6956 0e42 20       		.uleb128 0x20
 6957 0e43 8E050000 		.4byte	.LASF193
 6958 0e47 01       		.byte	0x1
 6959 0e48 24       		.byte	0x24
 6960 0e49 310E0000 		.4byte	0xe31
 6961 0e4d 05       		.uleb128 0x5
 6962 0e4e 03       		.byte	0x3
 6963 0e4f 00000000 		.4byte	instructions
 6964 0e53 20       		.uleb128 0x20
 6965 0e54 D1070000 		.4byte	.LASF194
 6966 0e58 01       		.byte	0x1
 6967 0e59 26       		.byte	0x26
 6968 0e5a B7000000 		.4byte	0xb7
 6969 0e5e 05       		.uleb128 0x5
 6970 0e5f 03       		.byte	0x3
 6971 0e60 00000000 		.4byte	instructionLength
 6972 0e64 22       		.uleb128 0x22
 6973 0e65 9D010000 		.4byte	.LASF195
 6974 0e69 01       		.byte	0x1
 6975 0e6a E303     		.2byte	0x3e3
 6976 0e6c B7000000 		.4byte	0xb7
 6977 0e70 05       		.uleb128 0x5
 6978 0e71 03       		.byte	0x3
 6979 0e72 00000000 		.4byte	leftTurnCount
 6980 0e76 22       		.uleb128 0x22
 6981 0e77 61000000 		.4byte	.LASF196
 6982 0e7b 01       		.byte	0x1
 6983 0e7c E403     		.2byte	0x3e4
 6984 0e7e B7000000 		.4byte	0xb7
 6985 0e82 05       		.uleb128 0x5
 6986 0e83 03       		.byte	0x3
 6987 0e84 00000000 		.4byte	rightTurnCount
 6988 0e88 00       		.byte	0
 6989              		.section	.debug_abbrev,"",%progbits
 6990              	.Ldebug_abbrev0:
 6991 0000 01       		.uleb128 0x1
 6992 0001 11       		.uleb128 0x11
 6993 0002 01       		.byte	0x1
 6994 0003 25       		.uleb128 0x25
 6995 0004 0E       		.uleb128 0xe
 6996 0005 13       		.uleb128 0x13
 6997 0006 0B       		.uleb128 0xb
 6998 0007 03       		.uleb128 0x3
 6999 0008 0E       		.uleb128 0xe
 7000 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 145


 7001 000a 0E       		.uleb128 0xe
 7002 000b 55       		.uleb128 0x55
 7003 000c 17       		.uleb128 0x17
 7004 000d 11       		.uleb128 0x11
 7005 000e 01       		.uleb128 0x1
 7006 000f 10       		.uleb128 0x10
 7007 0010 17       		.uleb128 0x17
 7008 0011 00       		.byte	0
 7009 0012 00       		.byte	0
 7010 0013 02       		.uleb128 0x2
 7011 0014 24       		.uleb128 0x24
 7012 0015 00       		.byte	0
 7013 0016 0B       		.uleb128 0xb
 7014 0017 0B       		.uleb128 0xb
 7015 0018 3E       		.uleb128 0x3e
 7016 0019 0B       		.uleb128 0xb
 7017 001a 03       		.uleb128 0x3
 7018 001b 0E       		.uleb128 0xe
 7019 001c 00       		.byte	0
 7020 001d 00       		.byte	0
 7021 001e 03       		.uleb128 0x3
 7022 001f 16       		.uleb128 0x16
 7023 0020 00       		.byte	0
 7024 0021 03       		.uleb128 0x3
 7025 0022 0E       		.uleb128 0xe
 7026 0023 3A       		.uleb128 0x3a
 7027 0024 0B       		.uleb128 0xb
 7028 0025 3B       		.uleb128 0x3b
 7029 0026 0B       		.uleb128 0xb
 7030 0027 49       		.uleb128 0x49
 7031 0028 13       		.uleb128 0x13
 7032 0029 00       		.byte	0
 7033 002a 00       		.byte	0
 7034 002b 04       		.uleb128 0x4
 7035 002c 24       		.uleb128 0x24
 7036 002d 00       		.byte	0
 7037 002e 0B       		.uleb128 0xb
 7038 002f 0B       		.uleb128 0xb
 7039 0030 3E       		.uleb128 0x3e
 7040 0031 0B       		.uleb128 0xb
 7041 0032 03       		.uleb128 0x3
 7042 0033 08       		.uleb128 0x8
 7043 0034 00       		.byte	0
 7044 0035 00       		.byte	0
 7045 0036 05       		.uleb128 0x5
 7046 0037 0F       		.uleb128 0xf
 7047 0038 00       		.byte	0
 7048 0039 0B       		.uleb128 0xb
 7049 003a 0B       		.uleb128 0xb
 7050 003b 49       		.uleb128 0x49
 7051 003c 13       		.uleb128 0x13
 7052 003d 00       		.byte	0
 7053 003e 00       		.byte	0
 7054 003f 06       		.uleb128 0x6
 7055 0040 16       		.uleb128 0x16
 7056 0041 00       		.byte	0
 7057 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 146


 7058 0043 0E       		.uleb128 0xe
 7059 0044 3A       		.uleb128 0x3a
 7060 0045 0B       		.uleb128 0xb
 7061 0046 3B       		.uleb128 0x3b
 7062 0047 05       		.uleb128 0x5
 7063 0048 49       		.uleb128 0x49
 7064 0049 13       		.uleb128 0x13
 7065 004a 00       		.byte	0
 7066 004b 00       		.byte	0
 7067 004c 07       		.uleb128 0x7
 7068 004d 01       		.uleb128 0x1
 7069 004e 01       		.byte	0x1
 7070 004f 49       		.uleb128 0x49
 7071 0050 13       		.uleb128 0x13
 7072 0051 01       		.uleb128 0x1
 7073 0052 13       		.uleb128 0x13
 7074 0053 00       		.byte	0
 7075 0054 00       		.byte	0
 7076 0055 08       		.uleb128 0x8
 7077 0056 21       		.uleb128 0x21
 7078 0057 00       		.byte	0
 7079 0058 49       		.uleb128 0x49
 7080 0059 13       		.uleb128 0x13
 7081 005a 2F       		.uleb128 0x2f
 7082 005b 0B       		.uleb128 0xb
 7083 005c 00       		.byte	0
 7084 005d 00       		.byte	0
 7085 005e 09       		.uleb128 0x9
 7086 005f 04       		.uleb128 0x4
 7087 0060 01       		.byte	0x1
 7088 0061 03       		.uleb128 0x3
 7089 0062 0E       		.uleb128 0xe
 7090 0063 0B       		.uleb128 0xb
 7091 0064 0B       		.uleb128 0xb
 7092 0065 3A       		.uleb128 0x3a
 7093 0066 0B       		.uleb128 0xb
 7094 0067 3B       		.uleb128 0x3b
 7095 0068 0B       		.uleb128 0xb
 7096 0069 01       		.uleb128 0x1
 7097 006a 13       		.uleb128 0x13
 7098 006b 00       		.byte	0
 7099 006c 00       		.byte	0
 7100 006d 0A       		.uleb128 0xa
 7101 006e 28       		.uleb128 0x28
 7102 006f 00       		.byte	0
 7103 0070 03       		.uleb128 0x3
 7104 0071 0E       		.uleb128 0xe
 7105 0072 1C       		.uleb128 0x1c
 7106 0073 0D       		.uleb128 0xd
 7107 0074 00       		.byte	0
 7108 0075 00       		.byte	0
 7109 0076 0B       		.uleb128 0xb
 7110 0077 13       		.uleb128 0x13
 7111 0078 01       		.byte	0x1
 7112 0079 03       		.uleb128 0x3
 7113 007a 0E       		.uleb128 0xe
 7114 007b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 147


 7115 007c 0B       		.uleb128 0xb
 7116 007d 3A       		.uleb128 0x3a
 7117 007e 0B       		.uleb128 0xb
 7118 007f 3B       		.uleb128 0x3b
 7119 0080 0B       		.uleb128 0xb
 7120 0081 01       		.uleb128 0x1
 7121 0082 13       		.uleb128 0x13
 7122 0083 00       		.byte	0
 7123 0084 00       		.byte	0
 7124 0085 0C       		.uleb128 0xc
 7125 0086 0D       		.uleb128 0xd
 7126 0087 00       		.byte	0
 7127 0088 03       		.uleb128 0x3
 7128 0089 0E       		.uleb128 0xe
 7129 008a 3A       		.uleb128 0x3a
 7130 008b 0B       		.uleb128 0xb
 7131 008c 3B       		.uleb128 0x3b
 7132 008d 0B       		.uleb128 0xb
 7133 008e 49       		.uleb128 0x49
 7134 008f 13       		.uleb128 0x13
 7135 0090 38       		.uleb128 0x38
 7136 0091 0B       		.uleb128 0xb
 7137 0092 00       		.byte	0
 7138 0093 00       		.byte	0
 7139 0094 0D       		.uleb128 0xd
 7140 0095 2E       		.uleb128 0x2e
 7141 0096 00       		.byte	0
 7142 0097 3F       		.uleb128 0x3f
 7143 0098 19       		.uleb128 0x19
 7144 0099 03       		.uleb128 0x3
 7145 009a 0E       		.uleb128 0xe
 7146 009b 3A       		.uleb128 0x3a
 7147 009c 0B       		.uleb128 0xb
 7148 009d 3B       		.uleb128 0x3b
 7149 009e 0B       		.uleb128 0xb
 7150 009f 27       		.uleb128 0x27
 7151 00a0 19       		.uleb128 0x19
 7152 00a1 11       		.uleb128 0x11
 7153 00a2 01       		.uleb128 0x1
 7154 00a3 12       		.uleb128 0x12
 7155 00a4 06       		.uleb128 0x6
 7156 00a5 40       		.uleb128 0x40
 7157 00a6 18       		.uleb128 0x18
 7158 00a7 9742     		.uleb128 0x2117
 7159 00a9 19       		.uleb128 0x19
 7160 00aa 00       		.byte	0
 7161 00ab 00       		.byte	0
 7162 00ac 0E       		.uleb128 0xe
 7163 00ad 2E       		.uleb128 0x2e
 7164 00ae 00       		.byte	0
 7165 00af 3F       		.uleb128 0x3f
 7166 00b0 19       		.uleb128 0x19
 7167 00b1 03       		.uleb128 0x3
 7168 00b2 0E       		.uleb128 0xe
 7169 00b3 3A       		.uleb128 0x3a
 7170 00b4 0B       		.uleb128 0xb
 7171 00b5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 148


 7172 00b6 0B       		.uleb128 0xb
 7173 00b7 27       		.uleb128 0x27
 7174 00b8 19       		.uleb128 0x19
 7175 00b9 11       		.uleb128 0x11
 7176 00ba 01       		.uleb128 0x1
 7177 00bb 12       		.uleb128 0x12
 7178 00bc 06       		.uleb128 0x6
 7179 00bd 40       		.uleb128 0x40
 7180 00be 18       		.uleb128 0x18
 7181 00bf 9642     		.uleb128 0x2116
 7182 00c1 19       		.uleb128 0x19
 7183 00c2 00       		.byte	0
 7184 00c3 00       		.byte	0
 7185 00c4 0F       		.uleb128 0xf
 7186 00c5 2E       		.uleb128 0x2e
 7187 00c6 01       		.byte	0x1
 7188 00c7 3F       		.uleb128 0x3f
 7189 00c8 19       		.uleb128 0x19
 7190 00c9 03       		.uleb128 0x3
 7191 00ca 0E       		.uleb128 0xe
 7192 00cb 3A       		.uleb128 0x3a
 7193 00cc 0B       		.uleb128 0xb
 7194 00cd 3B       		.uleb128 0x3b
 7195 00ce 0B       		.uleb128 0xb
 7196 00cf 27       		.uleb128 0x27
 7197 00d0 19       		.uleb128 0x19
 7198 00d1 11       		.uleb128 0x11
 7199 00d2 01       		.uleb128 0x1
 7200 00d3 12       		.uleb128 0x12
 7201 00d4 06       		.uleb128 0x6
 7202 00d5 40       		.uleb128 0x40
 7203 00d6 18       		.uleb128 0x18
 7204 00d7 9642     		.uleb128 0x2116
 7205 00d9 19       		.uleb128 0x19
 7206 00da 01       		.uleb128 0x1
 7207 00db 13       		.uleb128 0x13
 7208 00dc 00       		.byte	0
 7209 00dd 00       		.byte	0
 7210 00de 10       		.uleb128 0x10
 7211 00df 0B       		.uleb128 0xb
 7212 00e0 01       		.byte	0x1
 7213 00e1 11       		.uleb128 0x11
 7214 00e2 01       		.uleb128 0x1
 7215 00e3 12       		.uleb128 0x12
 7216 00e4 06       		.uleb128 0x6
 7217 00e5 01       		.uleb128 0x1
 7218 00e6 13       		.uleb128 0x13
 7219 00e7 00       		.byte	0
 7220 00e8 00       		.byte	0
 7221 00e9 11       		.uleb128 0x11
 7222 00ea 34       		.uleb128 0x34
 7223 00eb 00       		.byte	0
 7224 00ec 03       		.uleb128 0x3
 7225 00ed 0E       		.uleb128 0xe
 7226 00ee 3A       		.uleb128 0x3a
 7227 00ef 0B       		.uleb128 0xb
 7228 00f0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 149


 7229 00f1 0B       		.uleb128 0xb
 7230 00f2 49       		.uleb128 0x49
 7231 00f3 13       		.uleb128 0x13
 7232 00f4 02       		.uleb128 0x2
 7233 00f5 18       		.uleb128 0x18
 7234 00f6 00       		.byte	0
 7235 00f7 00       		.byte	0
 7236 00f8 12       		.uleb128 0x12
 7237 00f9 0B       		.uleb128 0xb
 7238 00fa 01       		.byte	0x1
 7239 00fb 11       		.uleb128 0x11
 7240 00fc 01       		.uleb128 0x1
 7241 00fd 12       		.uleb128 0x12
 7242 00fe 06       		.uleb128 0x6
 7243 00ff 00       		.byte	0
 7244 0100 00       		.byte	0
 7245 0101 13       		.uleb128 0x13
 7246 0102 2E       		.uleb128 0x2e
 7247 0103 01       		.byte	0x1
 7248 0104 3F       		.uleb128 0x3f
 7249 0105 19       		.uleb128 0x19
 7250 0106 03       		.uleb128 0x3
 7251 0107 0E       		.uleb128 0xe
 7252 0108 3A       		.uleb128 0x3a
 7253 0109 0B       		.uleb128 0xb
 7254 010a 3B       		.uleb128 0x3b
 7255 010b 0B       		.uleb128 0xb
 7256 010c 49       		.uleb128 0x49
 7257 010d 13       		.uleb128 0x13
 7258 010e 11       		.uleb128 0x11
 7259 010f 01       		.uleb128 0x1
 7260 0110 12       		.uleb128 0x12
 7261 0111 06       		.uleb128 0x6
 7262 0112 40       		.uleb128 0x40
 7263 0113 18       		.uleb128 0x18
 7264 0114 9642     		.uleb128 0x2116
 7265 0116 19       		.uleb128 0x19
 7266 0117 01       		.uleb128 0x1
 7267 0118 13       		.uleb128 0x13
 7268 0119 00       		.byte	0
 7269 011a 00       		.byte	0
 7270 011b 14       		.uleb128 0x14
 7271 011c 34       		.uleb128 0x34
 7272 011d 00       		.byte	0
 7273 011e 03       		.uleb128 0x3
 7274 011f 0E       		.uleb128 0xe
 7275 0120 3A       		.uleb128 0x3a
 7276 0121 0B       		.uleb128 0xb
 7277 0122 3B       		.uleb128 0x3b
 7278 0123 05       		.uleb128 0x5
 7279 0124 49       		.uleb128 0x49
 7280 0125 13       		.uleb128 0x13
 7281 0126 02       		.uleb128 0x2
 7282 0127 18       		.uleb128 0x18
 7283 0128 00       		.byte	0
 7284 0129 00       		.byte	0
 7285 012a 15       		.uleb128 0x15
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 150


 7286 012b 34       		.uleb128 0x34
 7287 012c 00       		.byte	0
 7288 012d 03       		.uleb128 0x3
 7289 012e 08       		.uleb128 0x8
 7290 012f 3A       		.uleb128 0x3a
 7291 0130 0B       		.uleb128 0xb
 7292 0131 3B       		.uleb128 0x3b
 7293 0132 05       		.uleb128 0x5
 7294 0133 49       		.uleb128 0x49
 7295 0134 13       		.uleb128 0x13
 7296 0135 02       		.uleb128 0x2
 7297 0136 18       		.uleb128 0x18
 7298 0137 00       		.byte	0
 7299 0138 00       		.byte	0
 7300 0139 16       		.uleb128 0x16
 7301 013a 2E       		.uleb128 0x2e
 7302 013b 01       		.byte	0x1
 7303 013c 3F       		.uleb128 0x3f
 7304 013d 19       		.uleb128 0x19
 7305 013e 03       		.uleb128 0x3
 7306 013f 0E       		.uleb128 0xe
 7307 0140 3A       		.uleb128 0x3a
 7308 0141 0B       		.uleb128 0xb
 7309 0142 3B       		.uleb128 0x3b
 7310 0143 05       		.uleb128 0x5
 7311 0144 11       		.uleb128 0x11
 7312 0145 01       		.uleb128 0x1
 7313 0146 12       		.uleb128 0x12
 7314 0147 06       		.uleb128 0x6
 7315 0148 40       		.uleb128 0x40
 7316 0149 18       		.uleb128 0x18
 7317 014a 9742     		.uleb128 0x2117
 7318 014c 19       		.uleb128 0x19
 7319 014d 01       		.uleb128 0x1
 7320 014e 13       		.uleb128 0x13
 7321 014f 00       		.byte	0
 7322 0150 00       		.byte	0
 7323 0151 17       		.uleb128 0x17
 7324 0152 2E       		.uleb128 0x2e
 7325 0153 01       		.byte	0x1
 7326 0154 3F       		.uleb128 0x3f
 7327 0155 19       		.uleb128 0x19
 7328 0156 03       		.uleb128 0x3
 7329 0157 0E       		.uleb128 0xe
 7330 0158 3A       		.uleb128 0x3a
 7331 0159 0B       		.uleb128 0xb
 7332 015a 3B       		.uleb128 0x3b
 7333 015b 05       		.uleb128 0x5
 7334 015c 27       		.uleb128 0x27
 7335 015d 19       		.uleb128 0x19
 7336 015e 11       		.uleb128 0x11
 7337 015f 01       		.uleb128 0x1
 7338 0160 12       		.uleb128 0x12
 7339 0161 06       		.uleb128 0x6
 7340 0162 40       		.uleb128 0x40
 7341 0163 18       		.uleb128 0x18
 7342 0164 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 151


 7343 0166 19       		.uleb128 0x19
 7344 0167 01       		.uleb128 0x1
 7345 0168 13       		.uleb128 0x13
 7346 0169 00       		.byte	0
 7347 016a 00       		.byte	0
 7348 016b 18       		.uleb128 0x18
 7349 016c 05       		.uleb128 0x5
 7350 016d 00       		.byte	0
 7351 016e 03       		.uleb128 0x3
 7352 016f 08       		.uleb128 0x8
 7353 0170 3A       		.uleb128 0x3a
 7354 0171 0B       		.uleb128 0xb
 7355 0172 3B       		.uleb128 0x3b
 7356 0173 05       		.uleb128 0x5
 7357 0174 49       		.uleb128 0x49
 7358 0175 13       		.uleb128 0x13
 7359 0176 02       		.uleb128 0x2
 7360 0177 18       		.uleb128 0x18
 7361 0178 00       		.byte	0
 7362 0179 00       		.byte	0
 7363 017a 19       		.uleb128 0x19
 7364 017b 2E       		.uleb128 0x2e
 7365 017c 01       		.byte	0x1
 7366 017d 3F       		.uleb128 0x3f
 7367 017e 19       		.uleb128 0x19
 7368 017f 03       		.uleb128 0x3
 7369 0180 0E       		.uleb128 0xe
 7370 0181 3A       		.uleb128 0x3a
 7371 0182 0B       		.uleb128 0xb
 7372 0183 3B       		.uleb128 0x3b
 7373 0184 05       		.uleb128 0x5
 7374 0185 11       		.uleb128 0x11
 7375 0186 01       		.uleb128 0x1
 7376 0187 12       		.uleb128 0x12
 7377 0188 06       		.uleb128 0x6
 7378 0189 40       		.uleb128 0x40
 7379 018a 18       		.uleb128 0x18
 7380 018b 9642     		.uleb128 0x2116
 7381 018d 19       		.uleb128 0x19
 7382 018e 01       		.uleb128 0x1
 7383 018f 13       		.uleb128 0x13
 7384 0190 00       		.byte	0
 7385 0191 00       		.byte	0
 7386 0192 1A       		.uleb128 0x1a
 7387 0193 05       		.uleb128 0x5
 7388 0194 00       		.byte	0
 7389 0195 03       		.uleb128 0x3
 7390 0196 0E       		.uleb128 0xe
 7391 0197 3A       		.uleb128 0x3a
 7392 0198 0B       		.uleb128 0xb
 7393 0199 3B       		.uleb128 0x3b
 7394 019a 05       		.uleb128 0x5
 7395 019b 49       		.uleb128 0x49
 7396 019c 13       		.uleb128 0x13
 7397 019d 02       		.uleb128 0x2
 7398 019e 18       		.uleb128 0x18
 7399 019f 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 152


 7400 01a0 00       		.byte	0
 7401 01a1 1B       		.uleb128 0x1b
 7402 01a2 2E       		.uleb128 0x2e
 7403 01a3 00       		.byte	0
 7404 01a4 3F       		.uleb128 0x3f
 7405 01a5 19       		.uleb128 0x19
 7406 01a6 03       		.uleb128 0x3
 7407 01a7 0E       		.uleb128 0xe
 7408 01a8 3A       		.uleb128 0x3a
 7409 01a9 0B       		.uleb128 0xb
 7410 01aa 3B       		.uleb128 0x3b
 7411 01ab 05       		.uleb128 0x5
 7412 01ac 11       		.uleb128 0x11
 7413 01ad 01       		.uleb128 0x1
 7414 01ae 12       		.uleb128 0x12
 7415 01af 06       		.uleb128 0x6
 7416 01b0 40       		.uleb128 0x40
 7417 01b1 18       		.uleb128 0x18
 7418 01b2 9642     		.uleb128 0x2116
 7419 01b4 19       		.uleb128 0x19
 7420 01b5 00       		.byte	0
 7421 01b6 00       		.byte	0
 7422 01b7 1C       		.uleb128 0x1c
 7423 01b8 2E       		.uleb128 0x2e
 7424 01b9 00       		.byte	0
 7425 01ba 3F       		.uleb128 0x3f
 7426 01bb 19       		.uleb128 0x19
 7427 01bc 03       		.uleb128 0x3
 7428 01bd 0E       		.uleb128 0xe
 7429 01be 3A       		.uleb128 0x3a
 7430 01bf 0B       		.uleb128 0xb
 7431 01c0 3B       		.uleb128 0x3b
 7432 01c1 05       		.uleb128 0x5
 7433 01c2 11       		.uleb128 0x11
 7434 01c3 01       		.uleb128 0x1
 7435 01c4 12       		.uleb128 0x12
 7436 01c5 06       		.uleb128 0x6
 7437 01c6 40       		.uleb128 0x40
 7438 01c7 18       		.uleb128 0x18
 7439 01c8 9742     		.uleb128 0x2117
 7440 01ca 19       		.uleb128 0x19
 7441 01cb 00       		.byte	0
 7442 01cc 00       		.byte	0
 7443 01cd 1D       		.uleb128 0x1d
 7444 01ce 34       		.uleb128 0x34
 7445 01cf 00       		.byte	0
 7446 01d0 03       		.uleb128 0x3
 7447 01d1 0E       		.uleb128 0xe
 7448 01d2 3A       		.uleb128 0x3a
 7449 01d3 0B       		.uleb128 0xb
 7450 01d4 3B       		.uleb128 0x3b
 7451 01d5 05       		.uleb128 0x5
 7452 01d6 49       		.uleb128 0x49
 7453 01d7 13       		.uleb128 0x13
 7454 01d8 3F       		.uleb128 0x3f
 7455 01d9 19       		.uleb128 0x19
 7456 01da 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 153


 7457 01db 19       		.uleb128 0x19
 7458 01dc 00       		.byte	0
 7459 01dd 00       		.byte	0
 7460 01de 1E       		.uleb128 0x1e
 7461 01df 35       		.uleb128 0x35
 7462 01e0 00       		.byte	0
 7463 01e1 49       		.uleb128 0x49
 7464 01e2 13       		.uleb128 0x13
 7465 01e3 00       		.byte	0
 7466 01e4 00       		.byte	0
 7467 01e5 1F       		.uleb128 0x1f
 7468 01e6 34       		.uleb128 0x34
 7469 01e7 00       		.byte	0
 7470 01e8 03       		.uleb128 0x3
 7471 01e9 08       		.uleb128 0x8
 7472 01ea 3A       		.uleb128 0x3a
 7473 01eb 0B       		.uleb128 0xb
 7474 01ec 3B       		.uleb128 0x3b
 7475 01ed 0B       		.uleb128 0xb
 7476 01ee 49       		.uleb128 0x49
 7477 01ef 13       		.uleb128 0x13
 7478 01f0 3F       		.uleb128 0x3f
 7479 01f1 19       		.uleb128 0x19
 7480 01f2 02       		.uleb128 0x2
 7481 01f3 18       		.uleb128 0x18
 7482 01f4 00       		.byte	0
 7483 01f5 00       		.byte	0
 7484 01f6 20       		.uleb128 0x20
 7485 01f7 34       		.uleb128 0x34
 7486 01f8 00       		.byte	0
 7487 01f9 03       		.uleb128 0x3
 7488 01fa 0E       		.uleb128 0xe
 7489 01fb 3A       		.uleb128 0x3a
 7490 01fc 0B       		.uleb128 0xb
 7491 01fd 3B       		.uleb128 0x3b
 7492 01fe 0B       		.uleb128 0xb
 7493 01ff 49       		.uleb128 0x49
 7494 0200 13       		.uleb128 0x13
 7495 0201 3F       		.uleb128 0x3f
 7496 0202 19       		.uleb128 0x19
 7497 0203 02       		.uleb128 0x2
 7498 0204 18       		.uleb128 0x18
 7499 0205 00       		.byte	0
 7500 0206 00       		.byte	0
 7501 0207 21       		.uleb128 0x21
 7502 0208 21       		.uleb128 0x21
 7503 0209 00       		.byte	0
 7504 020a 49       		.uleb128 0x49
 7505 020b 13       		.uleb128 0x13
 7506 020c 2F       		.uleb128 0x2f
 7507 020d 05       		.uleb128 0x5
 7508 020e 00       		.byte	0
 7509 020f 00       		.byte	0
 7510 0210 22       		.uleb128 0x22
 7511 0211 34       		.uleb128 0x34
 7512 0212 00       		.byte	0
 7513 0213 03       		.uleb128 0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 154


 7514 0214 0E       		.uleb128 0xe
 7515 0215 3A       		.uleb128 0x3a
 7516 0216 0B       		.uleb128 0xb
 7517 0217 3B       		.uleb128 0x3b
 7518 0218 05       		.uleb128 0x5
 7519 0219 49       		.uleb128 0x49
 7520 021a 13       		.uleb128 0x13
 7521 021b 3F       		.uleb128 0x3f
 7522 021c 19       		.uleb128 0x19
 7523 021d 02       		.uleb128 0x2
 7524 021e 18       		.uleb128 0x18
 7525 021f 00       		.byte	0
 7526 0220 00       		.byte	0
 7527 0221 00       		.byte	0
 7528              		.section	.debug_aranges,"",%progbits
 7529 0000 6C010000 		.4byte	0x16c
 7530 0004 0200     		.2byte	0x2
 7531 0006 00000000 		.4byte	.Ldebug_info0
 7532 000a 04       		.byte	0x4
 7533 000b 00       		.byte	0
 7534 000c 0000     		.2byte	0
 7535 000e 0000     		.2byte	0
 7536 0010 00000000 		.4byte	.LFB63
 7537 0014 0C000000 		.4byte	.LFE63-.LFB63
 7538 0018 00000000 		.4byte	.LFB64
 7539 001c 2C000000 		.4byte	.LFE64-.LFB64
 7540 0020 00000000 		.4byte	.LFB65
 7541 0024 9C010000 		.4byte	.LFE65-.LFB65
 7542 0028 00000000 		.4byte	.LFB66
 7543 002c 34010000 		.4byte	.LFE66-.LFB66
 7544 0030 00000000 		.4byte	.LFB67
 7545 0034 20000000 		.4byte	.LFE67-.LFB67
 7546 0038 00000000 		.4byte	.LFB68
 7547 003c 28000000 		.4byte	.LFE68-.LFB68
 7548 0040 00000000 		.4byte	.LFB69
 7549 0044 0A000000 		.4byte	.LFE69-.LFB69
 7550 0048 00000000 		.4byte	.LFB70
 7551 004c 28000000 		.4byte	.LFE70-.LFB70
 7552 0050 00000000 		.4byte	.LFB71
 7553 0054 D8060000 		.4byte	.LFE71-.LFB71
 7554 0058 00000000 		.4byte	.LFB72
 7555 005c 60010000 		.4byte	.LFE72-.LFB72
 7556 0060 00000000 		.4byte	.LFB73
 7557 0064 18000000 		.4byte	.LFE73-.LFB73
 7558 0068 00000000 		.4byte	.LFB74
 7559 006c 18000000 		.4byte	.LFE74-.LFB74
 7560 0070 00000000 		.4byte	.LFB75
 7561 0074 54000000 		.4byte	.LFE75-.LFB75
 7562 0078 00000000 		.4byte	.LFB76
 7563 007c F4000000 		.4byte	.LFE76-.LFB76
 7564 0080 00000000 		.4byte	.LFB77
 7565 0084 18000000 		.4byte	.LFE77-.LFB77
 7566 0088 00000000 		.4byte	.LFB78
 7567 008c 18000000 		.4byte	.LFE78-.LFB78
 7568 0090 00000000 		.4byte	.LFB79
 7569 0094 22000000 		.4byte	.LFE79-.LFB79
 7570 0098 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 155


 7571 009c 1C000000 		.4byte	.LFE80-.LFB80
 7572 00a0 00000000 		.4byte	.LFB81
 7573 00a4 34000000 		.4byte	.LFE81-.LFB81
 7574 00a8 00000000 		.4byte	.LFB82
 7575 00ac 38000000 		.4byte	.LFE82-.LFB82
 7576 00b0 00000000 		.4byte	.LFB83
 7577 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7578 00b8 00000000 		.4byte	.LFB84
 7579 00bc 38000000 		.4byte	.LFE84-.LFB84
 7580 00c0 00000000 		.4byte	.LFB85
 7581 00c4 38000000 		.4byte	.LFE85-.LFB85
 7582 00c8 00000000 		.4byte	.LFB86
 7583 00cc 38000000 		.4byte	.LFE86-.LFB86
 7584 00d0 00000000 		.4byte	.LFB87
 7585 00d4 14000000 		.4byte	.LFE87-.LFB87
 7586 00d8 00000000 		.4byte	.LFB88
 7587 00dc 18000000 		.4byte	.LFE88-.LFB88
 7588 00e0 00000000 		.4byte	.LFB89
 7589 00e4 18000000 		.4byte	.LFE89-.LFB89
 7590 00e8 00000000 		.4byte	.LFB90
 7591 00ec 18000000 		.4byte	.LFE90-.LFB90
 7592 00f0 00000000 		.4byte	.LFB91
 7593 00f4 18000000 		.4byte	.LFE91-.LFB91
 7594 00f8 00000000 		.4byte	.LFB92
 7595 00fc B8000000 		.4byte	.LFE92-.LFB92
 7596 0100 00000000 		.4byte	.LFB93
 7597 0104 C8030000 		.4byte	.LFE93-.LFB93
 7598 0108 00000000 		.4byte	.LFB94
 7599 010c 40000000 		.4byte	.LFE94-.LFB94
 7600 0110 00000000 		.4byte	.LFB95
 7601 0114 40000000 		.4byte	.LFE95-.LFB95
 7602 0118 00000000 		.4byte	.LFB96
 7603 011c 30020000 		.4byte	.LFE96-.LFB96
 7604 0120 00000000 		.4byte	.LFB97
 7605 0124 0C000000 		.4byte	.LFE97-.LFB97
 7606 0128 00000000 		.4byte	.LFB98
 7607 012c 4C010000 		.4byte	.LFE98-.LFB98
 7608 0130 00000000 		.4byte	.LFB99
 7609 0134 0C000000 		.4byte	.LFE99-.LFB99
 7610 0138 00000000 		.4byte	.LFB100
 7611 013c C0000000 		.4byte	.LFE100-.LFB100
 7612 0140 00000000 		.4byte	.LFB101
 7613 0144 B8000000 		.4byte	.LFE101-.LFB101
 7614 0148 00000000 		.4byte	.LFB102
 7615 014c 4A000000 		.4byte	.LFE102-.LFB102
 7616 0150 00000000 		.4byte	.LFB103
 7617 0154 68000000 		.4byte	.LFE103-.LFB103
 7618 0158 00000000 		.4byte	.LFB104
 7619 015c 50000000 		.4byte	.LFE104-.LFB104
 7620 0160 00000000 		.4byte	.LFB105
 7621 0164 0C000000 		.4byte	.LFE105-.LFB105
 7622 0168 00000000 		.4byte	0
 7623 016c 00000000 		.4byte	0
 7624              		.section	.debug_ranges,"",%progbits
 7625              	.Ldebug_ranges0:
 7626 0000 00000000 		.4byte	.LFB63
 7627 0004 0C000000 		.4byte	.LFE63
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 156


 7628 0008 00000000 		.4byte	.LFB64
 7629 000c 2C000000 		.4byte	.LFE64
 7630 0010 00000000 		.4byte	.LFB65
 7631 0014 9C010000 		.4byte	.LFE65
 7632 0018 00000000 		.4byte	.LFB66
 7633 001c 34010000 		.4byte	.LFE66
 7634 0020 00000000 		.4byte	.LFB67
 7635 0024 20000000 		.4byte	.LFE67
 7636 0028 00000000 		.4byte	.LFB68
 7637 002c 28000000 		.4byte	.LFE68
 7638 0030 00000000 		.4byte	.LFB69
 7639 0034 0A000000 		.4byte	.LFE69
 7640 0038 00000000 		.4byte	.LFB70
 7641 003c 28000000 		.4byte	.LFE70
 7642 0040 00000000 		.4byte	.LFB71
 7643 0044 D8060000 		.4byte	.LFE71
 7644 0048 00000000 		.4byte	.LFB72
 7645 004c 60010000 		.4byte	.LFE72
 7646 0050 00000000 		.4byte	.LFB73
 7647 0054 18000000 		.4byte	.LFE73
 7648 0058 00000000 		.4byte	.LFB74
 7649 005c 18000000 		.4byte	.LFE74
 7650 0060 00000000 		.4byte	.LFB75
 7651 0064 54000000 		.4byte	.LFE75
 7652 0068 00000000 		.4byte	.LFB76
 7653 006c F4000000 		.4byte	.LFE76
 7654 0070 00000000 		.4byte	.LFB77
 7655 0074 18000000 		.4byte	.LFE77
 7656 0078 00000000 		.4byte	.LFB78
 7657 007c 18000000 		.4byte	.LFE78
 7658 0080 00000000 		.4byte	.LFB79
 7659 0084 22000000 		.4byte	.LFE79
 7660 0088 00000000 		.4byte	.LFB80
 7661 008c 1C000000 		.4byte	.LFE80
 7662 0090 00000000 		.4byte	.LFB81
 7663 0094 34000000 		.4byte	.LFE81
 7664 0098 00000000 		.4byte	.LFB82
 7665 009c 38000000 		.4byte	.LFE82
 7666 00a0 00000000 		.4byte	.LFB83
 7667 00a4 4C000000 		.4byte	.LFE83
 7668 00a8 00000000 		.4byte	.LFB84
 7669 00ac 38000000 		.4byte	.LFE84
 7670 00b0 00000000 		.4byte	.LFB85
 7671 00b4 38000000 		.4byte	.LFE85
 7672 00b8 00000000 		.4byte	.LFB86
 7673 00bc 38000000 		.4byte	.LFE86
 7674 00c0 00000000 		.4byte	.LFB87
 7675 00c4 14000000 		.4byte	.LFE87
 7676 00c8 00000000 		.4byte	.LFB88
 7677 00cc 18000000 		.4byte	.LFE88
 7678 00d0 00000000 		.4byte	.LFB89
 7679 00d4 18000000 		.4byte	.LFE89
 7680 00d8 00000000 		.4byte	.LFB90
 7681 00dc 18000000 		.4byte	.LFE90
 7682 00e0 00000000 		.4byte	.LFB91
 7683 00e4 18000000 		.4byte	.LFE91
 7684 00e8 00000000 		.4byte	.LFB92
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 157


 7685 00ec B8000000 		.4byte	.LFE92
 7686 00f0 00000000 		.4byte	.LFB93
 7687 00f4 C8030000 		.4byte	.LFE93
 7688 00f8 00000000 		.4byte	.LFB94
 7689 00fc 40000000 		.4byte	.LFE94
 7690 0100 00000000 		.4byte	.LFB95
 7691 0104 40000000 		.4byte	.LFE95
 7692 0108 00000000 		.4byte	.LFB96
 7693 010c 30020000 		.4byte	.LFE96
 7694 0110 00000000 		.4byte	.LFB97
 7695 0114 0C000000 		.4byte	.LFE97
 7696 0118 00000000 		.4byte	.LFB98
 7697 011c 4C010000 		.4byte	.LFE98
 7698 0120 00000000 		.4byte	.LFB99
 7699 0124 0C000000 		.4byte	.LFE99
 7700 0128 00000000 		.4byte	.LFB100
 7701 012c C0000000 		.4byte	.LFE100
 7702 0130 00000000 		.4byte	.LFB101
 7703 0134 B8000000 		.4byte	.LFE101
 7704 0138 00000000 		.4byte	.LFB102
 7705 013c 4A000000 		.4byte	.LFE102
 7706 0140 00000000 		.4byte	.LFB103
 7707 0144 68000000 		.4byte	.LFE103
 7708 0148 00000000 		.4byte	.LFB104
 7709 014c 50000000 		.4byte	.LFE104
 7710 0150 00000000 		.4byte	.LFB105
 7711 0154 0C000000 		.4byte	.LFE105
 7712 0158 00000000 		.4byte	0
 7713 015c 00000000 		.4byte	0
 7714              		.section	.debug_line,"",%progbits
 7715              	.Ldebug_line0:
 7716 0000 C2070000 		.section	.debug_str,"MS",%progbits,1
 7716      02006701 
 7716      00000201 
 7716      FB0E0D00 
 7716      01010101 
 7717              	.LASF142:
 7718 0000 64697265 		.ascii	"direction\000"
 7718      6374696F 
 7718      6E00
 7719              	.LASF191:
 7720 000a 74726163 		.ascii	"tracked_direction\000"
 7720      6B65645F 
 7720      64697265 
 7720      6374696F 
 7720      6E00
 7721              	.LASF199:
 7722 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7722      73657273 
 7722      5C4C6F67 
 7722      616E5C44 
 7722      65736B74 
 7723 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7723      315F436C 
 7723      6173732E 
 7723      63796473 
 7723      6E00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 158


 7724              	.LASF25:
 7725 005b 52545552 		.ascii	"RTURN\000"
 7725      4E00
 7726              	.LASF196:
 7727 0061 72696768 		.ascii	"rightTurnCount\000"
 7727      74547572 
 7727      6E436F75 
 7727      6E7400
 7728              	.LASF39:
 7729 0070 44455354 		.ascii	"DEST_TEST\000"
 7729      5F544553 
 7729      5400
 7730              	.LASF150:
 7731 007a 71756164 		.ascii	"quad_diff1\000"
 7731      5F646966 
 7731      663100
 7732              	.LASF151:
 7733 0085 71756164 		.ascii	"quad_diff2\000"
 7733      5F646966 
 7733      663200
 7734              	.LASF104:
 7735 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7735      5F446563 
 7735      5F726573 
 7735      706F6E73 
 7735      6500
 7736              	.LASF170:
 7737 00a2 70726576 		.ascii	"prevVoltage\000"
 7737      566F6C74 
 7737      61676500 
 7738              	.LASF153:
 7739 00ae 73746172 		.ascii	"start_turn_count\000"
 7739      745F7475 
 7739      726E5F63 
 7739      6F756E74 
 7739      00
 7740              	.LASF10:
 7741 00bf 756E7369 		.ascii	"unsigned int\000"
 7741      676E6564 
 7741      20696E74 
 7741      00
 7742              	.LASF180:
 7743 00cc 74726163 		.ascii	"track_mode\000"
 7743      6B5F6D6F 
 7743      646500
 7744              	.LASF5:
 7745 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7745      7433325F 
 7745      7400
 7746              	.LASF19:
 7747 00e1 696E7431 		.ascii	"int16\000"
 7747      3600
 7748              	.LASF177:
 7749 00e7 73797374 		.ascii	"system_state\000"
 7749      656D5F73 
 7749      74617465 
 7749      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 159


 7750              	.LASF24:
 7751 00f4 4C545552 		.ascii	"LTURN\000"
 7751      4E00
 7752              	.LASF71:
 7753 00fa 6E657874 		.ascii	"nextInstruction\000"
 7753      496E7374 
 7753      72756374 
 7753      696F6E00 
 7754              	.LASF160:
 7755 010a 74617267 		.ascii	"target_distance_quad\000"
 7755      65745F64 
 7755      69737461 
 7755      6E63655F 
 7755      71756164 
 7756              	.LASF27:
 7757 011f 54524143 		.ascii	"TRACKING\000"
 7757      4B494E47 
 7757      00
 7758              	.LASF171:
 7759 0128 70726576 		.ascii	"prevVoltage2\000"
 7759      566F6C74 
 7759      61676532 
 7759      00
 7760              	.LASF185:
 7761 0135 73656E73 		.ascii	"sensorsDisabled\000"
 7761      6F727344 
 7761      69736162 
 7761      6C656400 
 7762              	.LASF72:
 7763 0145 7061636B 		.ascii	"packet_bytes\000"
 7763      65745F62 
 7763      79746573 
 7763      00
 7764              	.LASF54:
 7765 0152 67325F78 		.ascii	"g2_xpos\000"
 7765      706F7300 
 7766              	.LASF32:
 7767 015a 6D6F6465 		.ascii	"mode\000"
 7767      00
 7768              	.LASF146:
 7769 015f 71756164 		.ascii	"quad_count1\000"
 7769      5F636F75 
 7769      6E743100 
 7770              	.LASF147:
 7771 016b 71756164 		.ascii	"quad_count2\000"
 7771      5F636F75 
 7771      6E743200 
 7772              	.LASF113:
 7773 0177 74726163 		.ascii	"trackLineU\000"
 7773      6B4C696E 
 7773      655500
 7774              	.LASF190:
 7775 0182 726F626F 		.ascii	"robot_direction\000"
 7775      745F6469 
 7775      72656374 
 7775      696F6E00 
 7776              	.LASF112:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 160


 7777 0192 74726163 		.ascii	"trackLineZ\000"
 7777      6B4C696E 
 7777      655A00
 7778              	.LASF195:
 7779 019d 6C656674 		.ascii	"leftTurnCount\000"
 7779      5475726E 
 7779      436F756E 
 7779      7400
 7780              	.LASF183:
 7781 01ab 73706565 		.ascii	"speed\000"
 7781      6400
 7782              	.LASF36:
 7783 01b1 53515541 		.ascii	"SQUARE_TRACK\000"
 7783      52455F54 
 7783      5241434B 
 7783      00
 7784              	.LASF138:
 7785 01be 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7785      5F72665F 
 7785      7472616E 
 7785      736D6973 
 7785      73696F6E 
 7786              	.LASF139:
 7787 01da 666C6167 		.ascii	"flag_print_rf\000"
 7787      5F707269 
 7787      6E745F72 
 7787      6600
 7788              	.LASF179:
 7789 01e8 6D6F7665 		.ascii	"movement_state\000"
 7789      6D656E74 
 7789      5F737461 
 7789      746500
 7790              	.LASF28:
 7791 01f7 54524143 		.ascii	"TRACKING_U\000"
 7791      4B494E47 
 7791      5F5500
 7792              	.LASF94:
 7793 0202 696E6974 		.ascii	"initForward\000"
 7793      466F7277 
 7793      61726400 
 7794              	.LASF14:
 7795 020e 75696E74 		.ascii	"uint32_t\000"
 7795      33325F74 
 7795      00
 7796              	.LASF57:
 7797 0217 67325F64 		.ascii	"g2_direction\000"
 7797      69726563 
 7797      74696F6E 
 7797      00
 7798              	.LASF60:
 7799 0224 6973725F 		.ascii	"isr_quad1\000"
 7799      71756164 
 7799      3100
 7800              	.LASF20:
 7801 022e 666C6F61 		.ascii	"float\000"
 7801      7400
 7802              	.LASF79:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 161


 7803 0234 73657453 		.ascii	"setSpeed\000"
 7803      70656564 
 7803      00
 7804              	.LASF175:
 7805 023d 75736242 		.ascii	"usbBuffer\000"
 7805      75666665 
 7805      7200
 7806              	.LASF42:
 7807 0247 696E6465 		.ascii	"index\000"
 7807      7800
 7808              	.LASF23:
 7809 024d 44524956 		.ascii	"DRIVE\000"
 7809      4500
 7810              	.LASF74:
 7811 0253 73747269 		.ascii	"string_packet\000"
 7811      6E675F70 
 7811      61636B65 
 7811      7400
 7812              	.LASF103:
 7813 0261 6368616E 		.ascii	"changeToBT\000"
 7813      6765546F 
 7813      425400
 7814              	.LASF82:
 7815 026c 636F756E 		.ascii	"countsLeft\000"
 7815      74734C65 
 7815      667400
 7816              	.LASF87:
 7817 0277 64726976 		.ascii	"driveForwards\000"
 7817      65466F72 
 7817      77617264 
 7817      7300
 7818              	.LASF89:
 7819 0285 7475726E 		.ascii	"turnLeft\000"
 7819      4C656674 
 7819      00
 7820              	.LASF9:
 7821 028e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7821      206C6F6E 
 7821      6720756E 
 7821      7369676E 
 7821      65642069 
 7822              	.LASF135:
 7823 02a5 666C6167 		.ascii	"flag_packet\000"
 7823      5F706163 
 7823      6B657400 
 7824              	.LASF169:
 7825 02b1 66726F6E 		.ascii	"frontSensors\000"
 7825      7453656E 
 7825      736F7273 
 7825      00
 7826              	.LASF66:
 7827 02be 6973725F 		.ascii	"isr_turn_timer\000"
 7827      7475726E 
 7827      5F74696D 
 7827      657200
 7828              	.LASF102:
 7829 02cd 6368616E 		.ascii	"changeToRF\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 162


 7829      6765546F 
 7829      524600
 7830              	.LASF91:
 7831 02d8 696E6974 		.ascii	"initTurnLeft\000"
 7831      5475726E 
 7831      4C656674 
 7831      00
 7832              	.LASF168:
 7833 02e5 706F7274 		.ascii	"portOpen\000"
 7833      4F70656E 
 7833      00
 7834              	.LASF95:
 7835 02ee 696E6974 		.ascii	"initBrake\000"
 7835      4272616B 
 7835      6500
 7836              	.LASF131:
 7837 02f8 666C6167 		.ascii	"flag_ts_update\000"
 7837      5F74735F 
 7837      75706461 
 7837      746500
 7838              	.LASF115:
 7839 0307 7363616C 		.ascii	"scalingFactor\000"
 7839      696E6746 
 7839      6163746F 
 7839      7200
 7840              	.LASF105:
 7841 0315 6C656674 		.ascii	"leftSpeed\000"
 7841      53706565 
 7841      6400
 7842              	.LASF130:
 7843 031f 666C6167 		.ascii	"flag_ts_enc\000"
 7843      5F74735F 
 7843      656E6300 
 7844              	.LASF181:
 7845 032b 62797465 		.ascii	"byteCount\000"
 7845      436F756E 
 7845      7400
 7846              	.LASF68:
 7847 0335 61637469 		.ascii	"actionDebounce\000"
 7847      6F6E4465 
 7847      626F756E 
 7847      636500
 7848              	.LASF63:
 7849 0344 62757474 		.ascii	"button\000"
 7849      6F6E00
 7850              	.LASF178:
 7851 034b 70726576 		.ascii	"prev_movement_state\000"
 7851      5F6D6F76 
 7851      656D656E 
 7851      745F7374 
 7851      61746500 
 7852              	.LASF121:
 7853 035f 73656E73 		.ascii	"sensorVals\000"
 7853      6F725661 
 7853      6C7300
 7854              	.LASF117:
 7855 036a 72657375 		.ascii	"result_str\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 163


 7855      6C745F73 
 7855      747200
 7856              	.LASF124:
 7857 0375 75617274 		.ascii	"uart_set_PWM\000"
 7857      5F736574 
 7857      5F50574D 
 7857      00
 7858              	.LASF98:
 7859 0382 696E6974 		.ascii	"inittrackLineZ\000"
 7859      74726163 
 7859      6B4C696E 
 7859      655A00
 7860              	.LASF44:
 7861 0391 726F626F 		.ascii	"robot_ypos\000"
 7861      745F7970 
 7861      6F7300
 7862              	.LASF129:
 7863 039c 74735F64 		.ascii	"ts_display\000"
 7863      6973706C 
 7863      617900
 7864              	.LASF114:
 7865 03a7 7072696E 		.ascii	"print_ADC\000"
 7865      745F4144 
 7865      4300
 7866              	.LASF107:
 7867 03b1 7363616C 		.ascii	"scalingLeft\000"
 7867      696E674C 
 7867      65667400 
 7868              	.LASF12:
 7869 03bd 63686172 		.ascii	"char\000"
 7869      00
 7870              	.LASF48:
 7871 03c2 67305F73 		.ascii	"g0_speed\000"
 7871      70656564 
 7871      00
 7872              	.LASF157:
 7873 03cb 72696768 		.ascii	"rightSpeedLimit\000"
 7873      74537065 
 7873      65644C69 
 7873      6D697400 
 7874              	.LASF75:
 7875 03db 7365744C 		.ascii	"setLeftDir\000"
 7875      65667444 
 7875      697200
 7876              	.LASF184:
 7877 03e6 696E7374 		.ascii	"instructionCount\000"
 7877      72756374 
 7877      696F6E43 
 7877      6F756E74 
 7877      00
 7878              	.LASF90:
 7879 03f7 7475726E 		.ascii	"turnU\000"
 7879      5500
 7880              	.LASF55:
 7881 03fd 67325F79 		.ascii	"g2_ypos\000"
 7881      706F7300 
 7882              	.LASF61:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 164


 7883 0405 64697374 		.ascii	"distTurned\000"
 7883      5475726E 
 7883      656400
 7884              	.LASF16:
 7885 0410 75696E74 		.ascii	"uint16\000"
 7885      313600
 7886              	.LASF18:
 7887 0417 696E7438 		.ascii	"int8\000"
 7887      00
 7888              	.LASF70:
 7889 041c 6E657874 		.ascii	"nextStepDist\000"
 7889      53746570 
 7889      44697374 
 7889      00
 7890              	.LASF53:
 7891 0429 67315F64 		.ascii	"g1_direction\000"
 7891      69726563 
 7891      74696F6E 
 7891      00
 7892              	.LASF187:
 7893 0436 70617468 		.ascii	"path\000"
 7893      00
 7894              	.LASF76:
 7895 043b 73657452 		.ascii	"setRightDir\000"
 7895      69676874 
 7895      44697200 
 7896              	.LASF34:
 7897 0447 43555256 		.ascii	"CURVE_TRACK\000"
 7897      455F5452 
 7897      41434B00 
 7898              	.LASF109:
 7899 0453 696E7465 		.ascii	"interCalc\000"
 7899      7243616C 
 7899      6300
 7900              	.LASF144:
 7901 045d 42545F45 		.ascii	"BT_ENABLED\000"
 7901      4E41424C 
 7901      454400
 7902              	.LASF81:
 7903 0468 72696768 		.ascii	"right\000"
 7903      7400
 7904              	.LASF164:
 7905 046e 696E6974 		.ascii	"initial_pos_valid\000"
 7905      69616C5F 
 7905      706F735F 
 7905      76616C69 
 7905      6400
 7906              	.LASF8:
 7907 0480 6C6F6E67 		.ascii	"long long int\000"
 7907      206C6F6E 
 7907      6720696E 
 7907      7400
 7908              	.LASF176:
 7909 048e 62756666 		.ascii	"buffer_state\000"
 7909      65725F73 
 7909      74617465 
 7909      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 165


 7910              	.LASF50:
 7911 049b 67315F78 		.ascii	"g1_xpos\000"
 7911      706F7300 
 7912              	.LASF96:
 7913 04a3 696E6974 		.ascii	"initTrack\000"
 7913      54726163 
 7913      6B00
 7914              	.LASF69:
 7915 04ad 6E657874 		.ascii	"nextStep\000"
 7915      53746570 
 7915      00
 7916              	.LASF197:
 7917 04b6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7917      4320342E 
 7917      392E3320 
 7917      32303135 
 7917      30333033 
 7918 04e9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7918      20726576 
 7918      6973696F 
 7918      6E203232 
 7918      31323230 
 7919 051c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7919      66756E63 
 7919      74696F6E 
 7919      2D736563 
 7919      74696F6E 
 7920              	.LASF56:
 7921 0544 67325F73 		.ascii	"g2_speed\000"
 7921      70656564 
 7921      00
 7922              	.LASF47:
 7923 054d 67305F79 		.ascii	"g0_ypos\000"
 7923      706F7300 
 7924              	.LASF100:
 7925 0555 72665F63 		.ascii	"rf_char\000"
 7925      68617200 
 7926              	.LASF186:
 7927 055d 666F6F64 		.ascii	"food_list\000"
 7927      5F6C6973 
 7927      7400
 7928              	.LASF143:
 7929 0567 42494E5F 		.ascii	"BIN_ENABLED\000"
 7929      454E4142 
 7929      4C454400 
 7930              	.LASF106:
 7931 0573 72696768 		.ascii	"rightSpeed\000"
 7931      74537065 
 7931      656400
 7932              	.LASF128:
 7933 057e 74735F73 		.ascii	"ts_speed\000"
 7933      70656564 
 7933      00
 7934              	.LASF17:
 7935 0587 75696E74 		.ascii	"uint32\000"
 7935      333200
 7936              	.LASF193:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 166


 7937 058e 696E7374 		.ascii	"instructions\000"
 7937      72756374 
 7937      696F6E73 
 7937      00
 7938              	.LASF83:
 7939 059b 636F756E 		.ascii	"countsRight\000"
 7939      74735269 
 7939      67687400 
 7940              	.LASF200:
 7941 05a7 64617461 		.ascii	"data_main\000"
 7941      5F6D6169 
 7941      6E00
 7942              	.LASF116:
 7943 05b1 636F6E76 		.ascii	"converted_val\000"
 7943      65727465 
 7943      645F7661 
 7943      6C00
 7944              	.LASF188:
 7945 05bf 73746172 		.ascii	"start\000"
 7945      7400
 7946              	.LASF41:
 7947 05c5 72737369 		.ascii	"rssi\000"
 7947      00
 7948              	.LASF111:
 7949 05ca 74726163 		.ascii	"trackLine\000"
 7949      6B4C696E 
 7949      6500
 7950              	.LASF49:
 7951 05d4 67305F64 		.ascii	"g0_direction\000"
 7951      69726563 
 7951      74696F6E 
 7951      00
 7952              	.LASF140:
 7953 05e1 666C6167 		.ascii	"flag_receive_ADC\000"
 7953      5F726563 
 7953      65697665 
 7953      5F414443 
 7953      00
 7954              	.LASF26:
 7955 05f2 53544F50 		.ascii	"STOPPED\000"
 7955      50454400 
 7956              	.LASF101:
 7957 05fa 42545F72 		.ascii	"BT_rxInt\000"
 7957      78496E74 
 7957      00
 7958              	.LASF22:
 7959 0603 6C6F6E67 		.ascii	"long double\000"
 7959      20646F75 
 7959      626C6500 
 7960              	.LASF64:
 7961 060f 6973725F 		.ascii	"isr_adcTimer\000"
 7961      61646354 
 7961      696D6572 
 7961      00
 7962              	.LASF154:
 7963 061c 6C656674 		.ascii	"left_duty_cycle\000"
 7963      5F647574 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 167


 7963      795F6379 
 7963      636C6500 
 7964              	.LASF65:
 7965 062c 6973725F 		.ascii	"isr_deadzone\000"
 7965      64656164 
 7965      7A6F6E65 
 7965      00
 7966              	.LASF132:
 7967 0639 666C6167 		.ascii	"flag_ts_speed\000"
 7967      5F74735F 
 7967      73706565 
 7967      6400
 7968              	.LASF137:
 7969 0647 64617461 		.ascii	"dataready_flag\000"
 7969      72656164 
 7969      795F666C 
 7969      616700
 7970              	.LASF166:
 7971 0656 696E6974 		.ascii	"initial_y_pos\000"
 7971      69616C5F 
 7971      795F706F 
 7971      7300
 7972              	.LASF134:
 7973 0664 666C6167 		.ascii	"flag_rx\000"
 7973      5F727800 
 7974              	.LASF2:
 7975 066c 73686F72 		.ascii	"short int\000"
 7975      7420696E 
 7975      7400
 7976              	.LASF141:
 7977 0676 6164635F 		.ascii	"adc_result\000"
 7977      72657375 
 7977      6C7400
 7978              	.LASF93:
 7979 0681 696E6974 		.ascii	"initTurnU\000"
 7979      5475726E 
 7979      5500
 7980              	.LASF145:
 7981 068b 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7981      5F63616C 
 7981      635F7768 
 7981      65656C73 
 7981      70656564 
 7982              	.LASF4:
 7983 06a0 6C6F6E67 		.ascii	"long int\000"
 7983      20696E74 
 7983      00
 7984              	.LASF92:
 7985 06a9 696E6974 		.ascii	"initTurnRight\000"
 7985      5475726E 
 7985      52696768 
 7985      7400
 7986              	.LASF35:
 7987 06b7 555F5452 		.ascii	"U_TRACK\000"
 7987      41434B00 
 7988              	.LASF125:
 7989 06bf 49544D5F 		.ascii	"ITM_RxBuffer\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 168


 7989      52784275 
 7989      66666572 
 7989      00
 7990              	.LASF119:
 7991 06cc 7072696E 		.ascii	"printString\000"
 7991      74537472 
 7991      696E6700 
 7992              	.LASF99:
 7993 06d8 7278496E 		.ascii	"rxInt\000"
 7993      7400
 7994              	.LASF127:
 7995 06de 74735F75 		.ascii	"ts_update\000"
 7995      70646174 
 7995      6500
 7996              	.LASF33:
 7997 06e8 4E4F5F54 		.ascii	"NO_TRACK\000"
 7997      5241434B 
 7997      00
 7998              	.LASF152:
 7999 06f1 64656164 		.ascii	"deadzone\000"
 7999      7A6F6E65 
 7999      00
 8000              	.LASF156:
 8001 06fa 6C656674 		.ascii	"leftSpeedLimit\000"
 8001      53706565 
 8001      644C696D 
 8001      697400
 8002              	.LASF40:
 8003 0709 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8003      54524156 
 8003      45525345 
 8003      00
 8004              	.LASF29:
 8005 0716 54524143 		.ascii	"TRACKING_SOFT\000"
 8005      4B494E47 
 8005      5F534F46 
 8005      5400
 8006              	.LASF162:
 8007 0724 6F766572 		.ascii	"overshot_target\000"
 8007      73686F74 
 8007      5F746172 
 8007      67657400 
 8008              	.LASF80:
 8009 0734 6C656674 		.ascii	"left\000"
 8009      00
 8010              	.LASF159:
 8011 0739 61636375 		.ascii	"accum_dist\000"
 8011      6D5F6469 
 8011      737400
 8012              	.LASF122:
 8013 0744 75736250 		.ascii	"usbPutString\000"
 8013      75745374 
 8013      72696E67 
 8013      00
 8014              	.LASF88:
 8015 0751 7475726E 		.ascii	"turnRight\000"
 8015      52696768 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 169


 8015      7400
 8016              	.LASF51:
 8017 075b 67315F79 		.ascii	"g1_ypos\000"
 8017      706F7300 
 8018              	.LASF59:
 8019 0763 6164635F 		.ascii	"adc_isr\000"
 8019      69737200 
 8020              	.LASF120:
 8021 076b 72656164 		.ascii	"readFrontSensors\000"
 8021      46726F6E 
 8021      7453656E 
 8021      736F7273 
 8021      00
 8022              	.LASF163:
 8023 077c 71756164 		.ascii	"quad_per_cm\000"
 8023      5F706572 
 8023      5F636D00 
 8024              	.LASF158:
 8025 0788 74617267 		.ascii	"target_distance_cm\000"
 8025      65745F64 
 8025      69737461 
 8025      6E63655F 
 8025      636D00
 8026              	.LASF11:
 8027 079b 73697A65 		.ascii	"sizetype\000"
 8027      74797065 
 8027      00
 8028              	.LASF7:
 8029 07a4 6C6F6E67 		.ascii	"long unsigned int\000"
 8029      20756E73 
 8029      69676E65 
 8029      6420696E 
 8029      7400
 8030              	.LASF73:
 8031 07b6 62797465 		.ascii	"byte_packet\000"
 8031      5F706163 
 8031      6B657400 
 8032              	.LASF13:
 8033 07c2 696E7433 		.ascii	"int32_t\000"
 8033      325F7400 
 8034              	.LASF182:
 8035 07ca 7061636B 		.ascii	"packet\000"
 8035      657400
 8036              	.LASF194:
 8037 07d1 696E7374 		.ascii	"instructionLength\000"
 8037      72756374 
 8037      696F6E4C 
 8037      656E6774 
 8037      6800
 8038              	.LASF43:
 8039 07e3 726F626F 		.ascii	"robot_xpos\000"
 8039      745F7870 
 8039      6F7300
 8040              	.LASF86:
 8041 07ee 6272616B 		.ascii	"brakeMotor\000"
 8041      654D6F74 
 8041      6F7200
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 170


 8042              	.LASF192:
 8043 07f9 666F6F64 		.ascii	"food_length\000"
 8043      5F6C656E 
 8043      67746800 
 8044              	.LASF174:
 8045 0805 656E7472 		.ascii	"entry\000"
 8045      7900
 8046              	.LASF1:
 8047 080b 756E7369 		.ascii	"unsigned char\000"
 8047      676E6564 
 8047      20636861 
 8047      7200
 8048              	.LASF6:
 8049 0819 5F5F7569 		.ascii	"__uint32_t\000"
 8049      6E743332 
 8049      5F7400
 8050              	.LASF173:
 8051 0824 6C696E65 		.ascii	"line\000"
 8051      00
 8052              	.LASF161:
 8053 0829 72656163 		.ascii	"reached_target\000"
 8053      6865645F 
 8053      74617267 
 8053      657400
 8054              	.LASF62:
 8055 0838 53746F70 		.ascii	"Stop_on_line\000"
 8055      5F6F6E5F 
 8055      6C696E65 
 8055      00
 8056              	.LASF126:
 8057 0845 74735F65 		.ascii	"ts_enc\000"
 8057      6E6300
 8058              	.LASF167:
 8059 084c 6272616B 		.ascii	"brakeFlag\000"
 8059      65466C61 
 8059      6700
 8060              	.LASF133:
 8061 0856 666C6167 		.ascii	"flag_ts_display\000"
 8061      5F74735F 
 8061      64697370 
 8061      6C617900 
 8062              	.LASF31:
 8063 0866 73746174 		.ascii	"state\000"
 8063      6500
 8064              	.LASF78:
 8065 086c 72657665 		.ascii	"reverseDirection\000"
 8065      72736544 
 8065      69726563 
 8065      74696F6E 
 8065      00
 8066              	.LASF84:
 8067 087d 6272616B 		.ascii	"brakeLeft\000"
 8067      654C6566 
 8067      7400
 8068              	.LASF172:
 8069 0887 64697370 		.ascii	"displaystring\000"
 8069      6C617973 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 171


 8069      7472696E 
 8069      6700
 8070              	.LASF148:
 8071 0895 6C617374 		.ascii	"last_quad_count1\000"
 8071      5F717561 
 8071      645F636F 
 8071      756E7431 
 8071      00
 8072              	.LASF149:
 8073 08a6 6C617374 		.ascii	"last_quad_count2\000"
 8073      5F717561 
 8073      645F636F 
 8073      756E7432 
 8073      00
 8074              	.LASF189:
 8075 08b7 64657374 		.ascii	"destination\000"
 8075      696E6174 
 8075      696F6E00 
 8076              	.LASF123:
 8077 08c3 75736250 		.ascii	"usbPutChar\000"
 8077      75744368 
 8077      617200
 8078              	.LASF0:
 8079 08ce 7369676E 		.ascii	"signed char\000"
 8079      65642063 
 8079      68617200 
 8080              	.LASF3:
 8081 08da 73686F72 		.ascii	"short unsigned int\000"
 8081      7420756E 
 8081      7369676E 
 8081      65642069 
 8081      6E7400
 8082              	.LASF45:
 8083 08ed 726F626F 		.ascii	"robot_orientation\000"
 8083      745F6F72 
 8083      69656E74 
 8083      6174696F 
 8083      6E00
 8084              	.LASF37:
 8085 08ff 51554144 		.ascii	"QUAD_STOP\000"
 8085      5F53544F 
 8085      5000
 8086              	.LASF67:
 8087 0909 6D61696E 		.ascii	"main\000"
 8087      00
 8088              	.LASF58:
 8089 090e 42545F74 		.ascii	"BT_txInt\000"
 8089      78496E74 
 8089      00
 8090              	.LASF110:
 8091 0917 6E657874 		.ascii	"nextSpeed\000"
 8091      53706565 
 8091      6400
 8092              	.LASF15:
 8093 0921 75696E74 		.ascii	"uint8\000"
 8093      3800
 8094              	.LASF21:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 172


 8095 0927 646F7562 		.ascii	"double\000"
 8095      6C6500
 8096              	.LASF155:
 8097 092e 72696768 		.ascii	"right_duty_cycle\000"
 8097      745F6475 
 8097      74795F63 
 8097      79636C65 
 8097      00
 8098              	.LASF38:
 8099 093f 52465F53 		.ascii	"RF_STOP\000"
 8099      544F5000 
 8100              	.LASF77:
 8101 0947 68616E64 		.ascii	"handle_rx_binary\000"
 8101      6C655F72 
 8101      785F6269 
 8101      6E617279 
 8101      00
 8102              	.LASF118:
 8103 0958 7072696E 		.ascii	"print_RF\000"
 8103      745F5246 
 8103      00
 8104              	.LASF30:
 8105 0961 55545552 		.ascii	"UTURN\000"
 8105      4E00
 8106              	.LASF46:
 8107 0967 67305F78 		.ascii	"g0_xpos\000"
 8107      706F7300 
 8108              	.LASF108:
 8109 096f 7363616C 		.ascii	"scalingRight\000"
 8109      696E6752 
 8109      69676874 
 8109      00
 8110              	.LASF136:
 8111 097c 666C6167 		.ascii	"flag_KB_string\000"
 8111      5F4B425F 
 8111      73747269 
 8111      6E6700
 8112              	.LASF52:
 8113 098b 67315F73 		.ascii	"g1_speed\000"
 8113      70656564 
 8113      00
 8114              	.LASF198:
 8115 0994 2E5C6D61 		.ascii	".\\main.c\000"
 8115      696E2E63 
 8115      00
 8116              	.LASF165:
 8117 099d 696E6974 		.ascii	"initial_x_pos\000"
 8117      69616C5F 
 8117      785F706F 
 8117      7300
 8118              	.LASF85:
 8119 09ab 6272616B 		.ascii	"brakeRight\000"
 8119      65526967 
 8119      687400
 8120              	.LASF97:
 8121 09b6 696E6974 		.ascii	"initTrackU\000"
 8121      54726163 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccTFwBnK.s 			page 173


 8121      6B5500
 8122              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
