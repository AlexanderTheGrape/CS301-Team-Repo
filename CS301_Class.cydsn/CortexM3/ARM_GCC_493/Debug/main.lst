ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	prevVoltage,2,2
 262              		.comm	prevVoltage2,2,2
 263              		.global	displaystring
 264 0009 000000   		.align	2
 265              		.type	displaystring, %object
 266              		.size	displaystring, 64
 267              	displaystring:
 268 000c 43533330 		.ascii	"CS301 2016\012\000"
 268      31203230 
 268      31360A00 
 269 0018 00000000 		.space	52
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.comm	line,64,4
 271              		.comm	entry,64,4
 272              		.comm	usbBuffer,64,4
 273              		.comm	buffer_state,32,4
 274              		.comm	system_state,32,4
 275              		.global	prev_movement_state
 276              		.type	prev_movement_state, %object
 277              		.size	prev_movement_state, 1
 278              	prev_movement_state:
 279 004c 03       		.byte	3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 6


 280              		.global	movement_state
 281              		.type	movement_state, %object
 282              		.size	movement_state, 1
 283              	movement_state:
 284 004d 03       		.byte	3
 285              		.global	track_mode
 286              		.bss
 287              		.type	track_mode, %object
 288              		.size	track_mode, 1
 289              	track_mode:
 290 003c 00       		.space	1
 291              		.global	byteCount
 292              		.type	byteCount, %object
 293              		.size	byteCount, 1
 294              	byteCount:
 295 003d 00       		.space	1
 296              		.comm	packet,2,4
 297              		.global	speed
 298              		.data
 299 004e 0000     		.align	3
 300              		.type	speed, %object
 301              		.size	speed, 8
 302              	speed:
 303 0050 00000000 		.word	0
 304 0054 00002E40 		.word	1076756480
 305              		.comm	tracked_direction,4,4
 306              		.global	instructions
 307              		.bss
 308 003e 0000     		.align	2
 309              		.type	instructions, %object
 310              		.size	instructions, 800
 311              	instructions:
 312 0040 00000000 		.space	800
 312      00000000 
 312      00000000 
 312      00000000 
 312      00000000 
 313              		.global	instructionCount
 314              		.align	1
 315              		.type	instructionCount, %object
 316              		.size	instructionCount, 2
 317              	instructionCount:
 318 0360 0000     		.space	2
 319              		.global	instructionLength
 320              		.align	1
 321              		.type	instructionLength, %object
 322              		.size	instructionLength, 2
 323              	instructionLength:
 324 0362 0000     		.space	2
 325              		.global	sensorsDisabled
 326              		.align	2
 327              		.type	sensorsDisabled, %object
 328              		.size	sensorsDisabled, 4
 329              	sensorsDisabled:
 330 0364 00000000 		.space	4
 331              		.global	robot_direction
 332              		.data
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 7


 333              		.align	2
 334              		.type	robot_direction, %object
 335              		.size	robot_direction, 4
 336              	robot_direction:
 337 0058 02000000 		.word	2
 338              		.global	path
 339              		.bss
 340              		.align	2
 341              		.type	path, %object
 342              		.size	path, 9600
 343              	path:
 344 0368 00000000 		.space	9600
 344      00000000 
 344      00000000 
 344      00000000 
 344      00000000 
 345              		.global	start
 346              		.data
 347              		.align	2
 348              		.type	start, %object
 349              		.size	start, 8
 350              	start:
 351 005c 01000000 		.word	1
 352 0060 01000000 		.word	1
 353              		.global	destination
 354              		.align	2
 355              		.type	destination, %object
 356              		.size	destination, 8
 357              	destination:
 358 0064 0D000000 		.word	13
 359 0068 0B000000 		.word	11
 360              		.global	map
 361              		.align	2
 362              		.type	map, %object
 363              		.size	map, 1140
 364              	map:
 365 006c 01000000 		.word	1
 366 0070 01000000 		.word	1
 367 0074 01000000 		.word	1
 368 0078 01000000 		.word	1
 369 007c 01000000 		.word	1
 370 0080 01000000 		.word	1
 371 0084 01000000 		.word	1
 372 0088 01000000 		.word	1
 373 008c 01000000 		.word	1
 374 0090 01000000 		.word	1
 375 0094 01000000 		.word	1
 376 0098 01000000 		.word	1
 377 009c 01000000 		.word	1
 378 00a0 01000000 		.word	1
 379 00a4 01000000 		.word	1
 380 00a8 01000000 		.word	1
 381 00ac 01000000 		.word	1
 382 00b0 01000000 		.word	1
 383 00b4 01000000 		.word	1
 384 00b8 01000000 		.word	1
 385 00bc 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 8


 386 00c0 00000000 		.word	0
 387 00c4 00000000 		.word	0
 388 00c8 00000000 		.word	0
 389 00cc 00000000 		.word	0
 390 00d0 01000000 		.word	1
 391 00d4 00000000 		.word	0
 392 00d8 01000000 		.word	1
 393 00dc 00000000 		.word	0
 394 00e0 00000000 		.word	0
 395 00e4 00000000 		.word	0
 396 00e8 00000000 		.word	0
 397 00ec 00000000 		.word	0
 398 00f0 00000000 		.word	0
 399 00f4 00000000 		.word	0
 400 00f8 00000000 		.word	0
 401 00fc 00000000 		.word	0
 402 0100 01000000 		.word	1
 403 0104 01000000 		.word	1
 404 0108 01000000 		.word	1
 405 010c 01000000 		.word	1
 406 0110 01000000 		.word	1
 407 0114 01000000 		.word	1
 408 0118 00000000 		.word	0
 409 011c 01000000 		.word	1
 410 0120 00000000 		.word	0
 411 0124 01000000 		.word	1
 412 0128 00000000 		.word	0
 413 012c 01000000 		.word	1
 414 0130 00000000 		.word	0
 415 0134 01000000 		.word	1
 416 0138 01000000 		.word	1
 417 013c 01000000 		.word	1
 418 0140 01000000 		.word	1
 419 0144 01000000 		.word	1
 420 0148 00000000 		.word	0
 421 014c 01000000 		.word	1
 422 0150 01000000 		.word	1
 423 0154 00000000 		.word	0
 424 0158 00000000 		.word	0
 425 015c 00000000 		.word	0
 426 0160 01000000 		.word	1
 427 0164 00000000 		.word	0
 428 0168 01000000 		.word	1
 429 016c 00000000 		.word	0
 430 0170 00000000 		.word	0
 431 0174 00000000 		.word	0
 432 0178 01000000 		.word	1
 433 017c 00000000 		.word	0
 434 0180 00000000 		.word	0
 435 0184 00000000 		.word	0
 436 0188 00000000 		.word	0
 437 018c 00000000 		.word	0
 438 0190 01000000 		.word	1
 439 0194 00000000 		.word	0
 440 0198 01000000 		.word	1
 441 019c 01000000 		.word	1
 442 01a0 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 9


 443 01a4 01000000 		.word	1
 444 01a8 00000000 		.word	0
 445 01ac 01000000 		.word	1
 446 01b0 00000000 		.word	0
 447 01b4 01000000 		.word	1
 448 01b8 00000000 		.word	0
 449 01bc 01000000 		.word	1
 450 01c0 01000000 		.word	1
 451 01c4 01000000 		.word	1
 452 01c8 01000000 		.word	1
 453 01cc 01000000 		.word	1
 454 01d0 01000000 		.word	1
 455 01d4 01000000 		.word	1
 456 01d8 00000000 		.word	0
 457 01dc 01000000 		.word	1
 458 01e0 00000000 		.word	0
 459 01e4 01000000 		.word	1
 460 01e8 01000000 		.word	1
 461 01ec 00000000 		.word	0
 462 01f0 01000000 		.word	1
 463 01f4 00000000 		.word	0
 464 01f8 00000000 		.word	0
 465 01fc 00000000 		.word	0
 466 0200 00000000 		.word	0
 467 0204 00000000 		.word	0
 468 0208 00000000 		.word	0
 469 020c 00000000 		.word	0
 470 0210 00000000 		.word	0
 471 0214 00000000 		.word	0
 472 0218 00000000 		.word	0
 473 021c 00000000 		.word	0
 474 0220 01000000 		.word	1
 475 0224 00000000 		.word	0
 476 0228 01000000 		.word	1
 477 022c 00000000 		.word	0
 478 0230 01000000 		.word	1
 479 0234 01000000 		.word	1
 480 0238 00000000 		.word	0
 481 023c 01000000 		.word	1
 482 0240 01000000 		.word	1
 483 0244 01000000 		.word	1
 484 0248 01000000 		.word	1
 485 024c 01000000 		.word	1
 486 0250 01000000 		.word	1
 487 0254 01000000 		.word	1
 488 0258 01000000 		.word	1
 489 025c 01000000 		.word	1
 490 0260 00000000 		.word	0
 491 0264 01000000 		.word	1
 492 0268 00000000 		.word	0
 493 026c 01000000 		.word	1
 494 0270 00000000 		.word	0
 495 0274 01000000 		.word	1
 496 0278 01000000 		.word	1
 497 027c 01000000 		.word	1
 498 0280 01000000 		.word	1
 499 0284 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 10


 500 0288 00000000 		.word	0
 501 028c 00000000 		.word	0
 502 0290 00000000 		.word	0
 503 0294 00000000 		.word	0
 504 0298 00000000 		.word	0
 505 029c 00000000 		.word	0
 506 02a0 00000000 		.word	0
 507 02a4 00000000 		.word	0
 508 02a8 00000000 		.word	0
 509 02ac 00000000 		.word	0
 510 02b0 01000000 		.word	1
 511 02b4 00000000 		.word	0
 512 02b8 01000000 		.word	1
 513 02bc 00000000 		.word	0
 514 02c0 00000000 		.word	0
 515 02c4 00000000 		.word	0
 516 02c8 01000000 		.word	1
 517 02cc 01000000 		.word	1
 518 02d0 01000000 		.word	1
 519 02d4 01000000 		.word	1
 520 02d8 01000000 		.word	1
 521 02dc 01000000 		.word	1
 522 02e0 01000000 		.word	1
 523 02e4 01000000 		.word	1
 524 02e8 00000000 		.word	0
 525 02ec 01000000 		.word	1
 526 02f0 01000000 		.word	1
 527 02f4 01000000 		.word	1
 528 02f8 01000000 		.word	1
 529 02fc 01000000 		.word	1
 530 0300 00000000 		.word	0
 531 0304 01000000 		.word	1
 532 0308 01000000 		.word	1
 533 030c 01000000 		.word	1
 534 0310 00000000 		.word	0
 535 0314 01000000 		.word	1
 536 0318 01000000 		.word	1
 537 031c 00000000 		.word	0
 538 0320 00000000 		.word	0
 539 0324 00000000 		.word	0
 540 0328 00000000 		.word	0
 541 032c 00000000 		.word	0
 542 0330 00000000 		.word	0
 543 0334 00000000 		.word	0
 544 0338 00000000 		.word	0
 545 033c 00000000 		.word	0
 546 0340 00000000 		.word	0
 547 0344 00000000 		.word	0
 548 0348 01000000 		.word	1
 549 034c 00000000 		.word	0
 550 0350 00000000 		.word	0
 551 0354 00000000 		.word	0
 552 0358 01000000 		.word	1
 553 035c 00000000 		.word	0
 554 0360 01000000 		.word	1
 555 0364 01000000 		.word	1
 556 0368 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 11


 557 036c 01000000 		.word	1
 558 0370 01000000 		.word	1
 559 0374 01000000 		.word	1
 560 0378 01000000 		.word	1
 561 037c 01000000 		.word	1
 562 0380 00000000 		.word	0
 563 0384 01000000 		.word	1
 564 0388 01000000 		.word	1
 565 038c 01000000 		.word	1
 566 0390 00000000 		.word	0
 567 0394 01000000 		.word	1
 568 0398 00000000 		.word	0
 569 039c 01000000 		.word	1
 570 03a0 00000000 		.word	0
 571 03a4 01000000 		.word	1
 572 03a8 00000000 		.word	0
 573 03ac 01000000 		.word	1
 574 03b0 01000000 		.word	1
 575 03b4 00000000 		.word	0
 576 03b8 00000000 		.word	0
 577 03bc 00000000 		.word	0
 578 03c0 00000000 		.word	0
 579 03c4 00000000 		.word	0
 580 03c8 01000000 		.word	1
 581 03cc 00000000 		.word	0
 582 03d0 00000000 		.word	0
 583 03d4 00000000 		.word	0
 584 03d8 01000000 		.word	1
 585 03dc 00000000 		.word	0
 586 03e0 00000000 		.word	0
 587 03e4 00000000 		.word	0
 588 03e8 01000000 		.word	1
 589 03ec 00000000 		.word	0
 590 03f0 00000000 		.word	0
 591 03f4 00000000 		.word	0
 592 03f8 01000000 		.word	1
 593 03fc 01000000 		.word	1
 594 0400 00000000 		.word	0
 595 0404 01000000 		.word	1
 596 0408 01000000 		.word	1
 597 040c 01000000 		.word	1
 598 0410 00000000 		.word	0
 599 0414 01000000 		.word	1
 600 0418 01000000 		.word	1
 601 041c 01000000 		.word	1
 602 0420 00000000 		.word	0
 603 0424 01000000 		.word	1
 604 0428 01000000 		.word	1
 605 042c 01000000 		.word	1
 606 0430 00000000 		.word	0
 607 0434 01000000 		.word	1
 608 0438 01000000 		.word	1
 609 043c 01000000 		.word	1
 610 0440 00000000 		.word	0
 611 0444 01000000 		.word	1
 612 0448 01000000 		.word	1
 613 044c 00000000 		.word	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 12


 614 0450 00000000 		.word	0
 615 0454 00000000 		.word	0
 616 0458 01000000 		.word	1
 617 045c 00000000 		.word	0
 618 0460 00000000 		.word	0
 619 0464 00000000 		.word	0
 620 0468 00000000 		.word	0
 621 046c 00000000 		.word	0
 622 0470 00000000 		.word	0
 623 0474 00000000 		.word	0
 624 0478 01000000 		.word	1
 625 047c 00000000 		.word	0
 626 0480 00000000 		.word	0
 627 0484 00000000 		.word	0
 628 0488 00000000 		.word	0
 629 048c 00000000 		.word	0
 630 0490 01000000 		.word	1
 631 0494 01000000 		.word	1
 632 0498 01000000 		.word	1
 633 049c 01000000 		.word	1
 634 04a0 01000000 		.word	1
 635 04a4 01000000 		.word	1
 636 04a8 01000000 		.word	1
 637 04ac 01000000 		.word	1
 638 04b0 01000000 		.word	1
 639 04b4 01000000 		.word	1
 640 04b8 01000000 		.word	1
 641 04bc 01000000 		.word	1
 642 04c0 01000000 		.word	1
 643 04c4 01000000 		.word	1
 644 04c8 01000000 		.word	1
 645 04cc 01000000 		.word	1
 646 04d0 01000000 		.word	1
 647 04d4 01000000 		.word	1
 648 04d8 01000000 		.word	1
 649 04dc 01000000 		.word	1
 650              		.global	food_list
 651              		.align	2
 652              		.type	food_list, %object
 653              		.size	food_list, 48
 654              	food_list:
 655 04e0 05000000 		.word	5
 656 04e4 0A000000 		.word	10
 657 04e8 05000000 		.word	5
 658 04ec 03000000 		.word	3
 659 04f0 0D000000 		.word	13
 660 04f4 02000000 		.word	2
 661 04f8 00000000 		.space	24
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.global	food_length
 663              		.align	2
 664              		.type	food_length, %object
 665              		.size	food_length, 4
 666              	food_length:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 13


 667 0510 03000000 		.word	3
 668 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 669              		.align	2
 670              		.global	BT_txInt
 671              		.thumb
 672              		.thumb_func
 673              		.type	BT_txInt, %function
 674              	BT_txInt:
 675              	.LFB63:
 676              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** 
  29:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  30:.\main.c      **** uint16 instructionCount = 0;
  31:.\main.c      **** uint16 instructionLength = 0;
  32:.\main.c      **** uint32_t sensorsDisabled = 0;
  33:.\main.c      **** 
  34:.\main.c      **** uint32_t robot_direction = 2;
  35:.\main.c      **** 
  36:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  37:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  38:.\main.c      **** uint32_t destination[2] = {13, 11};//(y, x) DON'T HARDCODE THIS
  39:.\main.c      **** 
  40:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  41:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  42:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  43:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  44:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  45:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  46:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  47:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 14


  48:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  49:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  50:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  51:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  52:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  53:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  54:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  55:.\main.c      **** 
  56:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  57:.\main.c      **** //first number is the y coord, second is x
  58:.\main.c      **** //first number is row, second column
  59:.\main.c      **** 
  60:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  61:.\main.c      **** uint32_t food_list[6][2] = {{5, 10},{5,3}, {13, 2}};
  62:.\main.c      **** //uint8 food_list[6][2]= {{10,1},{1,13},{9,7},{16,13},{17,1}};
  63:.\main.c      **** uint32_t food_length = 3;
  64:.\main.c      **** 
  65:.\main.c      **** void changeToRF();
  66:.\main.c      **** void changeToBT();
  67:.\main.c      **** void brakeMotor();
  68:.\main.c      **** void driveForwards();
  69:.\main.c      **** void initTurnLeft();
  70:.\main.c      **** void initTurnRight();
  71:.\main.c      **** void inittrackLineZ();
  72:.\main.c      **** void trackLineU();
  73:.\main.c      **** void trackLine();
  74:.\main.c      **** void trackLineZ();
  75:.\main.c      **** void initTrackU();
  76:.\main.c      **** void turnLeft();
  77:.\main.c      **** void turnRight();
  78:.\main.c      **** void initForward();
  79:.\main.c      **** void initTurnU();
  80:.\main.c      **** void turnU();
  81:.\main.c      **** void initBrake();
  82:.\main.c      **** void print_ADC();
  83:.\main.c      **** void Quad_Dec_response();
  84:.\main.c      **** void handle_rx_binary();
  85:.\main.c      **** void readFrontSensors();
  86:.\main.c      **** void print_RF();
  87:.\main.c      **** 
  88:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
  89:.\main.c      **** //BT
  90:.\main.c      **** CY_ISR(BT_txInt)
  91:.\main.c      **** {
 677              		.loc 1 91 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 7, -4
 685 0002 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
  92:.\main.c      ****     
  93:.\main.c      **** }
 687              		.loc 1 93 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 15


 688 0004 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0006 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 000a 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE63:
 697              		.size	BT_txInt, .-BT_txInt
 698              		.section	.text.adc_isr,"ax",%progbits
 699              		.align	2
 700              		.global	adc_isr
 701              		.thumb
 702              		.thumb_func
 703              		.type	adc_isr, %function
 704              	adc_isr:
 705              	.LFB64:
  94:.\main.c      **** 
  95:.\main.c      **** //ADC:
  96:.\main.c      **** CY_ISR (adc_isr)
  97:.\main.c      **** {
 706              		.loc 1 97 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
  98:.\main.c      ****     //adc_result = ADC_GetResult16(0);
  99:.\main.c      ****     adc_result = ADC_GetResult16();
 716              		.loc 1 99 0
 717 0004 FFF7FEFF 		bl	ADC_GetResult16
 718 0008 0346     		mov	r3, r0
 719 000a 1A46     		mov	r2, r3
 720 000c 044B     		ldr	r3, .L3
 721 000e 1A80     		strh	r2, [r3]	@ movhi
 100:.\main.c      ****     flag_receive_ADC = 1;
 722              		.loc 1 100 0
 723 0010 044B     		ldr	r3, .L3+4
 724 0012 0122     		movs	r2, #1
 725 0014 1A70     		strb	r2, [r3]
 101:.\main.c      ****     flag_print_rf = 1;
 726              		.loc 1 101 0
 727 0016 044B     		ldr	r3, .L3+8
 728 0018 0122     		movs	r2, #1
 729 001a 1A70     		strb	r2, [r3]
 102:.\main.c      ****     //LED_Write(~LED_Read());
 103:.\main.c      **** }
 730              		.loc 1 103 0
 731 001c 80BD     		pop	{r7, pc}
 732              	.L4:
 733 001e 00BF     		.align	2
 734              	.L3:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 16


 735 0020 00000000 		.word	adc_result
 736 0024 00000000 		.word	flag_receive_ADC
 737 0028 00000000 		.word	flag_print_rf
 738              		.cfi_endproc
 739              	.LFE64:
 740              		.size	adc_isr, .-adc_isr
 741              		.global	__aeabi_i2d
 742              		.global	__aeabi_dmul
 743              		.global	__aeabi_dcmpge
 744              		.section	.text.isr_quad1,"ax",%progbits
 745              		.align	2
 746              		.global	isr_quad1
 747              		.thumb
 748              		.thumb_func
 749              		.type	isr_quad1, %function
 750              	isr_quad1:
 751              	.LFB65:
 104:.\main.c      **** 
 105:.\main.c      **** CY_ISR (isr_quad1)
 106:.\main.c      **** {
 752              		.loc 1 106 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756 0000 B0B5     		push	{r4, r5, r7, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 4, -16
 759              		.cfi_offset 5, -12
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 107:.\main.c      ****     //LED_Write(~LED_Read());
 108:.\main.c      ****     last_quad_count1 = quad_count1;
 764              		.loc 1 108 0
 765 0004 5A4B     		ldr	r3, .L13+16
 766 0006 1A88     		ldrh	r2, [r3]
 767 0008 5A4B     		ldr	r3, .L13+20
 768 000a 1A80     		strh	r2, [r3]	@ movhi
 109:.\main.c      ****     last_quad_count2 = quad_count2;
 769              		.loc 1 109 0
 770 000c 5A4B     		ldr	r3, .L13+24
 771 000e 1A88     		ldrh	r2, [r3]
 772 0010 5A4B     		ldr	r3, .L13+28
 773 0012 1A80     		strh	r2, [r3]	@ movhi
 110:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 774              		.loc 1 110 0
 775 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 776 0018 0346     		mov	r3, r0
 777 001a 1A46     		mov	r2, r3
 778 001c 544B     		ldr	r3, .L13+16
 779 001e 1A80     		strh	r2, [r3]	@ movhi
 111:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 780              		.loc 1 111 0
 781 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 782 0024 0346     		mov	r3, r0
 783 0026 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 17


 784 0028 534B     		ldr	r3, .L13+24
 785 002a 1A80     		strh	r2, [r3]	@ movhi
 112:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 786              		.loc 1 112 0
 787 002c 504B     		ldr	r3, .L13+16
 788 002e 1B88     		ldrh	r3, [r3]
 789 0030 9AB2     		uxth	r2, r3
 790 0032 504B     		ldr	r3, .L13+20
 791 0034 1B88     		ldrh	r3, [r3]
 792 0036 9BB2     		uxth	r3, r3
 793 0038 D31A     		subs	r3, r2, r3
 794 003a 9BB2     		uxth	r3, r3
 795 003c 9AB2     		uxth	r2, r3
 796 003e 504B     		ldr	r3, .L13+32
 797 0040 1A80     		strh	r2, [r3]	@ movhi
 113:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 798              		.loc 1 113 0
 799 0042 4D4B     		ldr	r3, .L13+24
 800 0044 1B88     		ldrh	r3, [r3]
 801 0046 9AB2     		uxth	r2, r3
 802 0048 4C4B     		ldr	r3, .L13+28
 803 004a 1B88     		ldrh	r3, [r3]
 804 004c 9BB2     		uxth	r3, r3
 805 004e D31A     		subs	r3, r2, r3
 806 0050 9BB2     		uxth	r3, r3
 807 0052 9AB2     		uxth	r2, r3
 808 0054 4B4B     		ldr	r3, .L13+36
 809 0056 1A80     		strh	r2, [r3]	@ movhi
 114:.\main.c      ****     
 115:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 810              		.loc 1 115 0
 811 0058 454B     		ldr	r3, .L13+16
 812 005a 1B88     		ldrh	r3, [r3]
 813 005c 1BB2     		sxth	r3, r3
 814 005e 002B     		cmp	r3, #0
 815 0060 B8BF     		it	lt
 816 0062 5B42     		rsblt	r3, r3, #0
 817 0064 40F6B832 		movw	r2, #3000
 818 0068 9342     		cmp	r3, r2
 819 006a 17DD     		ble	.L6
 820              		.loc 1 115 0 is_stmt 0 discriminator 1
 821 006c 464B     		ldr	r3, .L13+40
 822 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 823 0070 012B     		cmp	r3, #1
 824 0072 13D0     		beq	.L6
 825              		.loc 1 115 0 discriminator 2
 826 0074 444B     		ldr	r3, .L13+40
 827 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0078 022B     		cmp	r3, #2
 829 007a 0FD0     		beq	.L6
 830              		.loc 1 115 0 discriminator 3
 831 007c 424B     		ldr	r3, .L13+40
 832 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 0080 072B     		cmp	r3, #7
 834 0082 0BD0     		beq	.L6
 116:.\main.c      ****     {
 117:.\main.c      ****         QuadDec_M1_SetCounter(0);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 18


 835              		.loc 1 117 0 is_stmt 1
 836 0084 0020     		movs	r0, #0
 837 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 118:.\main.c      ****         QuadDec_M2_SetCounter(0);
 838              		.loc 1 118 0
 839 008a 0020     		movs	r0, #0
 840 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 119:.\main.c      ****         quad_count1 = 0;
 841              		.loc 1 119 0
 842 0090 374B     		ldr	r3, .L13+16
 843 0092 0022     		movs	r2, #0
 844 0094 1A80     		strh	r2, [r3]	@ movhi
 120:.\main.c      ****         quad_count2 = 0;
 845              		.loc 1 120 0
 846 0096 384B     		ldr	r3, .L13+24
 847 0098 0022     		movs	r2, #0
 848 009a 1A80     		strh	r2, [r3]	@ movhi
 849              	.L6:
 121:.\main.c      ****     }
 122:.\main.c      **** 
 123:.\main.c      ****     flag_calc_wheelspeed = 1;
 850              		.loc 1 123 0
 851 009c 3B4B     		ldr	r3, .L13+44
 852 009e 0122     		movs	r2, #1
 853 00a0 1A70     		strb	r2, [r3]
 124:.\main.c      ****     
 125:.\main.c      ****     if(track_mode == DEST_TEST)
 854              		.loc 1 125 0
 855 00a2 3B4B     		ldr	r3, .L13+48
 856 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 00a6 062B     		cmp	r3, #6
 858 00a8 56D1     		bne	.L5
 126:.\main.c      ****     {
 127:.\main.c      ****         //track the distance
 128:.\main.c      ****         accum_dist += quad_diff1;
 859              		.loc 1 128 0
 860 00aa 3A4B     		ldr	r3, .L13+52
 861 00ac 1B88     		ldrh	r3, [r3]
 862 00ae 9AB2     		uxth	r2, r3
 863 00b0 334B     		ldr	r3, .L13+32
 864 00b2 1B88     		ldrh	r3, [r3]
 865 00b4 9BB2     		uxth	r3, r3
 866 00b6 1344     		add	r3, r3, r2
 867 00b8 9BB2     		uxth	r3, r3
 868 00ba 9AB2     		uxth	r2, r3
 869 00bc 354B     		ldr	r3, .L13+52
 870 00be 1A80     		strh	r2, [r3]	@ movhi
 129:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 0.8)
 871              		.loc 1 129 0
 872 00c0 344B     		ldr	r3, .L13+52
 873 00c2 1B88     		ldrh	r3, [r3]
 874 00c4 1BB2     		sxth	r3, r3
 875 00c6 002B     		cmp	r3, #0
 876 00c8 B8BF     		it	lt
 877 00ca 5B42     		rsblt	r3, r3, #0
 878 00cc 1846     		mov	r0, r3
 879 00ce FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 19


 880 00d2 0446     		mov	r4, r0
 881 00d4 0D46     		mov	r5, r1
 882 00d6 304B     		ldr	r3, .L13+56
 883 00d8 1B88     		ldrh	r3, [r3]
 884 00da 1BB2     		sxth	r3, r3
 885 00dc 1846     		mov	r0, r3
 886 00de FFF7FEFF 		bl	__aeabi_i2d
 887 00e2 0246     		mov	r2, r0
 888 00e4 0B46     		mov	r3, r1
 889 00e6 1046     		mov	r0, r2
 890 00e8 1946     		mov	r1, r3
 891 00ea 1DA3     		adr	r3, .L13
 892 00ec D3E90023 		ldrd	r2, [r3]
 893 00f0 FFF7FEFF 		bl	__aeabi_dmul
 894 00f4 0246     		mov	r2, r0
 895 00f6 0B46     		mov	r3, r1
 896 00f8 2046     		mov	r0, r4
 897 00fa 2946     		mov	r1, r5
 898 00fc FFF7FEFF 		bl	__aeabi_dcmpge
 899 0100 0346     		mov	r3, r0
 900 0102 002B     		cmp	r3, #0
 901 0104 02D0     		beq	.L8
 130:.\main.c      ****         {
 131:.\main.c      ****             reached_target = 1;
 902              		.loc 1 131 0
 903 0106 254B     		ldr	r3, .L13+60
 904 0108 0122     		movs	r2, #1
 905 010a 1A70     		strb	r2, [r3]
 906              	.L8:
 132:.\main.c      ****         }
 133:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad * 1.1)
 907              		.loc 1 133 0
 908 010c 214B     		ldr	r3, .L13+52
 909 010e 1B88     		ldrh	r3, [r3]
 910 0110 1BB2     		sxth	r3, r3
 911 0112 002B     		cmp	r3, #0
 912 0114 B8BF     		it	lt
 913 0116 5B42     		rsblt	r3, r3, #0
 914 0118 1846     		mov	r0, r3
 915 011a FFF7FEFF 		bl	__aeabi_i2d
 916 011e 0446     		mov	r4, r0
 917 0120 0D46     		mov	r5, r1
 918 0122 1D4B     		ldr	r3, .L13+56
 919 0124 1B88     		ldrh	r3, [r3]
 920 0126 1BB2     		sxth	r3, r3
 921 0128 1846     		mov	r0, r3
 922 012a FFF7FEFF 		bl	__aeabi_i2d
 923 012e 0246     		mov	r2, r0
 924 0130 0B46     		mov	r3, r1
 925 0132 1046     		mov	r0, r2
 926 0134 1946     		mov	r1, r3
 927 0136 0CA3     		adr	r3, .L13+8
 928 0138 D3E90023 		ldrd	r2, [r3]
 929 013c FFF7FEFF 		bl	__aeabi_dmul
 930 0140 0246     		mov	r2, r0
 931 0142 0B46     		mov	r3, r1
 932 0144 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 20


 933 0146 2946     		mov	r1, r5
 934 0148 FFF7FEFF 		bl	__aeabi_dcmpge
 935 014c 0346     		mov	r3, r0
 936 014e 002B     		cmp	r3, #0
 937 0150 02D0     		beq	.L5
 134:.\main.c      ****         {
 135:.\main.c      ****             overshot_target = 1;
 938              		.loc 1 135 0
 939 0152 134B     		ldr	r3, .L13+64
 940 0154 0122     		movs	r2, #1
 941 0156 1A70     		strb	r2, [r3]
 942              	.L5:
 136:.\main.c      ****         }
 137:.\main.c      ****     }
 138:.\main.c      **** //    if (track_mode == QUAD_STOP)
 139:.\main.c      **** //    {
 140:.\main.c      **** //        accum_dist += quad_diff1;
 141:.\main.c      **** //        char mes[16];
 142:.\main.c      **** //        sprintf(mes, "dist: %d\r\n", accum_dist);
 143:.\main.c      **** //        UART_PutString(mes);
 144:.\main.c      **** //        if(abs(accum_dist) >= target_distance_quad)
 145:.\main.c      **** //        {
 146:.\main.c      **** //            initBrake();
 147:.\main.c      **** //            track_mode = NO_TRACK;
 148:.\main.c      **** //        }
 149:.\main.c      **** //    } else if (track_mode == RF_STOP)
 150:.\main.c      **** //    { 
 151:.\main.c      **** //        // Do pythag
 152:.\main.c      **** //        double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_sta
 153:.\main.c      **** //        if (dist >= target_distance_cm)
 154:.\main.c      **** //        {
 155:.\main.c      **** //            initBrake();
 156:.\main.c      **** //            track_mode = NO_TRACK;
 157:.\main.c      **** //        }
 158:.\main.c      **** //    }
 159:.\main.c      **** }
 943              		.loc 1 159 0
 944 0158 B0BD     		pop	{r4, r5, r7, pc}
 945              	.L14:
 946 015a 00BFAFF3 		.align	3
 946      0080
 947              	.L13:
 948 0160 9A999999 		.word	-1717986918
 949 0164 9999E93F 		.word	1072273817
 950 0168 9A999999 		.word	-1717986918
 951 016c 9999F13F 		.word	1072798105
 952 0170 00000000 		.word	quad_count1
 953 0174 00000000 		.word	last_quad_count1
 954 0178 00000000 		.word	quad_count2
 955 017c 00000000 		.word	last_quad_count2
 956 0180 00000000 		.word	quad_diff1
 957 0184 00000000 		.word	quad_diff2
 958 0188 00000000 		.word	movement_state
 959 018c 00000000 		.word	flag_calc_wheelspeed
 960 0190 00000000 		.word	track_mode
 961 0194 00000000 		.word	accum_dist
 962 0198 00000000 		.word	target_distance_quad
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 21


 963 019c 00000000 		.word	reached_target
 964 01a0 00000000 		.word	overshot_target
 965              		.cfi_endproc
 966              	.LFE65:
 967              		.size	isr_quad1, .-isr_quad1
 968 01a4 AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 969              		.align	2
 970              		.global	isr_turn_timer
 971              		.thumb
 972              		.thumb_func
 973              		.type	isr_turn_timer, %function
 974              	isr_turn_timer:
 975              	.LFB66:
 160:.\main.c      **** 
 161:.\main.c      **** CY_ISR(isr_turn_timer)
 162:.\main.c      **** {
 976              		.loc 1 162 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 00AF     		add	r7, sp, #0
 985              		.cfi_def_cfa_register 7
 163:.\main.c      ****     if(movement_state == LTURN)
 986              		.loc 1 163 0
 987 0004 264B     		ldr	r3, .L21
 988 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0008 012B     		cmp	r3, #1
 990 000a 15D1     		bne	.L16
 164:.\main.c      ****     {
 165:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 991              		.loc 1 165 0
 992 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 993 0010 0346     		mov	r3, r0
 994 0012 1A46     		mov	r2, r3
 995 0014 234B     		ldr	r3, .L21+4
 996 0016 1B88     		ldrh	r3, [r3]
 997 0018 1BB2     		sxth	r3, r3
 998 001a D31A     		subs	r3, r2, r3
 999 001c 002B     		cmp	r3, #0
 1000 001e B8BF     		it	lt
 1001 0020 5B42     		rsblt	r3, r3, #0
 1002 0022 CF2B     		cmp	r3, #207
 1003 0024 3BDD     		ble	.L15
 166:.\main.c      ****         {
 167:.\main.c      ****             //movement_state = STOPPED;
 168:.\main.c      ****             brakeMotor();
 1004              		.loc 1 168 0
 1005 0026 FFF7FEFF 		bl	brakeMotor
 169:.\main.c      ****             movement_state = prev_movement_state;
 1006              		.loc 1 169 0
 1007 002a 1F4B     		ldr	r3, .L21+8
 1008 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1009 002e 1C4B     		ldr	r3, .L21
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 22


 1010 0030 1A70     		strb	r2, [r3]
 170:.\main.c      ****             Timer_2_Stop();
 1011              		.loc 1 170 0
 1012 0032 FFF7FEFF 		bl	Timer_2_Stop
 1013 0036 32E0     		b	.L15
 1014              	.L16:
 171:.\main.c      ****         }
 172:.\main.c      ****     }
 173:.\main.c      ****     else if (movement_state == RTURN)
 1015              		.loc 1 173 0
 1016 0038 194B     		ldr	r3, .L21
 1017 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 003c 022B     		cmp	r3, #2
 1019 003e 15D1     		bne	.L19
 174:.\main.c      ****     {
 175:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1020              		.loc 1 175 0
 1021 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1022 0044 0346     		mov	r3, r0
 1023 0046 1A46     		mov	r2, r3
 1024 0048 164B     		ldr	r3, .L21+4
 1025 004a 1B88     		ldrh	r3, [r3]
 1026 004c 1BB2     		sxth	r3, r3
 1027 004e D31A     		subs	r3, r2, r3
 1028 0050 002B     		cmp	r3, #0
 1029 0052 B8BF     		it	lt
 1030 0054 5B42     		rsblt	r3, r3, #0
 1031 0056 CF2B     		cmp	r3, #207
 1032 0058 21DD     		ble	.L15
 176:.\main.c      ****         {
 177:.\main.c      ****             //movement_state = STOPPED;
 178:.\main.c      ****             brakeMotor();
 1033              		.loc 1 178 0
 1034 005a FFF7FEFF 		bl	brakeMotor
 179:.\main.c      ****             movement_state = prev_movement_state;
 1035              		.loc 1 179 0
 1036 005e 124B     		ldr	r3, .L21+8
 1037 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0062 0F4B     		ldr	r3, .L21
 1039 0064 1A70     		strb	r2, [r3]
 180:.\main.c      ****             Timer_2_Stop();
 1040              		.loc 1 180 0
 1041 0066 FFF7FEFF 		bl	Timer_2_Stop
 1042 006a 18E0     		b	.L15
 1043              	.L19:
 181:.\main.c      ****         }
 182:.\main.c      ****     }
 183:.\main.c      ****     else if (movement_state == UTURN)
 1044              		.loc 1 183 0
 1045 006c 0C4B     		ldr	r3, .L21
 1046 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0070 072B     		cmp	r3, #7
 1048 0072 14D1     		bne	.L15
 184:.\main.c      ****     {
 185:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1049              		.loc 1 185 0
 1050 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 23


 1051 0078 0346     		mov	r3, r0
 1052 007a 1A46     		mov	r2, r3
 1053 007c 094B     		ldr	r3, .L21+4
 1054 007e 1B88     		ldrh	r3, [r3]
 1055 0080 1BB2     		sxth	r3, r3
 1056 0082 D31A     		subs	r3, r2, r3
 1057 0084 002B     		cmp	r3, #0
 1058 0086 B8BF     		it	lt
 1059 0088 5B42     		rsblt	r3, r3, #0
 1060 008a CF2B     		cmp	r3, #207
 1061 008c 07DD     		ble	.L15
 186:.\main.c      ****         {
 187:.\main.c      ****             //movement_state = STOPPED;
 188:.\main.c      ****             brakeMotor();
 1062              		.loc 1 188 0
 1063 008e FFF7FEFF 		bl	brakeMotor
 189:.\main.c      ****             movement_state = prev_movement_state;
 1064              		.loc 1 189 0
 1065 0092 054B     		ldr	r3, .L21+8
 1066 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1067 0096 024B     		ldr	r3, .L21
 1068 0098 1A70     		strb	r2, [r3]
 190:.\main.c      ****             Timer_2_Stop();
 1069              		.loc 1 190 0
 1070 009a FFF7FEFF 		bl	Timer_2_Stop
 1071              	.L15:
 191:.\main.c      ****         }
 192:.\main.c      ****     }
 193:.\main.c      **** }
 1072              		.loc 1 193 0
 1073 009e 80BD     		pop	{r7, pc}
 1074              	.L22:
 1075              		.align	2
 1076              	.L21:
 1077 00a0 00000000 		.word	movement_state
 1078 00a4 00000000 		.word	start_turn_count
 1079 00a8 00000000 		.word	prev_movement_state
 1080              		.cfi_endproc
 1081              	.LFE66:
 1082              		.size	isr_turn_timer, .-isr_turn_timer
 1083              		.section	.text.Stop_on_line,"ax",%progbits
 1084              		.align	2
 1085              		.global	Stop_on_line
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	Stop_on_line, %function
 1089              	Stop_on_line:
 1090              	.LFB67:
 194:.\main.c      **** 
 195:.\main.c      **** 
 196:.\main.c      **** CY_ISR (Stop_on_line)
 197:.\main.c      **** {
 1091              		.loc 1 197 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 24


 1096 0000 80B4     		push	{r7}
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 198:.\main.c      ****     movement_state = STOPPED;
 1101              		.loc 1 198 0
 1102 0004 054B     		ldr	r3, .L25
 1103 0006 0322     		movs	r2, #3
 1104 0008 1A70     		strb	r2, [r3]
 199:.\main.c      ****     if(movement_state != DRIVE) return;
 1105              		.loc 1 199 0
 1106 000a 044B     		ldr	r3, .L25
 1107 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 000e 002B     		cmp	r3, #0
 1109 0010 00D0     		beq	.L23
 1110 0012 00BF     		nop
 1111              	.L23:
 200:.\main.c      ****     //initTurnLeft();
 201:.\main.c      **** }
 1112              		.loc 1 201 0
 1113 0014 BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0016 5DF8047B 		ldr	r7, [sp], #4
 1117              		.cfi_restore 7
 1118              		.cfi_def_cfa_offset 0
 1119 001a 7047     		bx	lr
 1120              	.L26:
 1121              		.align	2
 1122              	.L25:
 1123 001c 00000000 		.word	movement_state
 1124              		.cfi_endproc
 1125              	.LFE67:
 1126              		.size	Stop_on_line, .-Stop_on_line
 1127              		.section	.rodata
 1128              		.align	2
 1129              	.LC0:
 1130 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1130      74696E67 
 1130      20726F62 
 1130      6F74210D 
 1130      0A00
 1131              		.section	.text.button,"ax",%progbits
 1132              		.align	2
 1133              		.global	button
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	button, %function
 1137              	button:
 1138              	.LFB68:
 202:.\main.c      **** 
 203:.\main.c      **** CY_ISR (button)
 204:.\main.c      **** {
 1139              		.loc 1 204 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 25


 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 80B5     		push	{r7, lr}
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 205:.\main.c      ****     if(BT_ENABLED)
 1149              		.loc 1 205 0
 1150 0004 054B     		ldr	r3, .L29
 1151 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0008 002B     		cmp	r3, #0
 1153 000a 02D0     		beq	.L28
 206:.\main.c      ****     {
 207:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1154              		.loc 1 207 0
 1155 000c 0448     		ldr	r0, .L29+4
 1156 000e FFF7FEFF 		bl	UART_PutString
 1157              	.L28:
 208:.\main.c      ****     }
 209:.\main.c      ****     movement_state = DRIVE;
 1158              		.loc 1 209 0
 1159 0012 044B     		ldr	r3, .L29+8
 1160 0014 0022     		movs	r2, #0
 1161 0016 1A70     		strb	r2, [r3]
 210:.\main.c      **** }
 1162              		.loc 1 210 0
 1163 0018 80BD     		pop	{r7, pc}
 1164              	.L30:
 1165 001a 00BF     		.align	2
 1166              	.L29:
 1167 001c 00000000 		.word	BT_ENABLED
 1168 0020 00000000 		.word	.LC0
 1169 0024 00000000 		.word	movement_state
 1170              		.cfi_endproc
 1171              	.LFE68:
 1172              		.size	button, .-button
 1173              		.section	.text.isr_adcTimer,"ax",%progbits
 1174              		.align	2
 1175              		.global	isr_adcTimer
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	isr_adcTimer, %function
 1179              	isr_adcTimer:
 1180              	.LFB69:
 211:.\main.c      **** 
 212:.\main.c      **** CY_ISR(isr_adcTimer)
 213:.\main.c      **** {
 1181              		.loc 1 213 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 26


 1190              		.cfi_def_cfa_register 7
 214:.\main.c      ****     ADC_StartConvert();
 1191              		.loc 1 214 0
 1192 0004 FFF7FEFF 		bl	ADC_StartConvert
 215:.\main.c      **** }
 1193              		.loc 1 215 0
 1194 0008 80BD     		pop	{r7, pc}
 1195              		.cfi_endproc
 1196              	.LFE69:
 1197              		.size	isr_adcTimer, .-isr_adcTimer
 1198 000a 00BF     		.section	.rodata
 1199 0012 0000     		.align	2
 1200              	.LC1:
 1201 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1201      7A6F6E65 
 1201      206C6566 
 1201      740D0A00 
 1202              		.section	.text.isr_deadzone,"ax",%progbits
 1203              		.align	2
 1204              		.global	isr_deadzone
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	isr_deadzone, %function
 1208              	isr_deadzone:
 1209              	.LFB70:
 216:.\main.c      **** 
 217:.\main.c      **** CY_ISR(isr_deadzone)
 218:.\main.c      **** {
 1210              		.loc 1 218 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 7, -8
 1217              		.cfi_offset 14, -4
 1218 0002 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 219:.\main.c      ****     sensorsDisabled = 0;
 1220              		.loc 1 219 0
 1221 0004 054B     		ldr	r3, .L33
 1222 0006 0022     		movs	r2, #0
 1223 0008 1A60     		str	r2, [r3]
 220:.\main.c      ****     deadzone = 0;
 1224              		.loc 1 220 0
 1225 000a 054B     		ldr	r3, .L33+4
 1226 000c 0022     		movs	r2, #0
 1227 000e 1A70     		strb	r2, [r3]
 221:.\main.c      ****     Timer_Deadzone_Stop();
 1228              		.loc 1 221 0
 1229 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 222:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1230              		.loc 1 222 0
 1231 0014 0348     		ldr	r0, .L33+8
 1232 0016 FFF7FEFF 		bl	UART_PutString
 223:.\main.c      **** }
 1233              		.loc 1 223 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 27


 1234 001a 80BD     		pop	{r7, pc}
 1235              	.L34:
 1236              		.align	2
 1237              	.L33:
 1238 001c 00000000 		.word	sensorsDisabled
 1239 0020 00000000 		.word	deadzone
 1240 0024 14000000 		.word	.LC1
 1241              		.cfi_endproc
 1242              	.LFE70:
 1243              		.size	isr_deadzone, .-isr_deadzone
 1244              		.section	.rodata
 1245              		.align	2
 1246              	.LC2:
 1247 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1247      20747261 
 1247      76656C3A 
 1247      2025640D 
 1247      0A00
 1248 0036 0000     		.align	2
 1249              	.LC3:
 1250 0038 54726967 		.ascii	"Triggered at intersection \015\012\000"
 1250      67657265 
 1250      64206174 
 1250      20696E74 
 1250      65727365 
 1251 0055 000000   		.align	2
 1252              	.LC4:
 1253 0058 44656164 		.ascii	"Deadzone entered!\015\012\000"
 1253      7A6F6E65 
 1253      20656E74 
 1253      65726564 
 1253      210D0A00 
 1254              		.align	2
 1255              	.LC5:
 1256 006c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1256      65742064 
 1256      6973743A 
 1256      2025640D 
 1256      0A00
 1257 007e 0000     		.align	2
 1258              	.LC6:
 1259 0080 54726967 		.ascii	"Triggered at white light \015\012\000"
 1259      67657265 
 1259      64206174 
 1259      20776869 
 1259      7465206C 
 1260              		.align	2
 1261              	.LC7:
 1262 009c 54726967 		.ascii	"Triggered at quad count \015\012\000"
 1262      67657265 
 1262      64206174 
 1262      20717561 
 1262      6420636F 
 1263              		.section	.text.main,"ax",%progbits
 1264              		.align	2
 1265              		.global	main
 1266              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 28


 1267              		.thumb_func
 1268              		.type	main, %function
 1269              	main:
 1270              	.LFB71:
 224:.\main.c      **** 
 225:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 226:.\main.c      **** 
 227:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 228:.\main.c      **** int main()
 229:.\main.c      **** {  
 1271              		.loc 1 229 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 64
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 90B0     		sub	sp, sp, #64
 1280              		.cfi_def_cfa_offset 72
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 230:.\main.c      **** 
 231:.\main.c      **** // ----- INITIALIZATIONS ----------
 232:.\main.c      ****     CYGlobalIntEnable;
 1283              		.loc 1 232 0
 1284              	@ 232 ".\main.c" 1
 1285 0006 62B6     		CPSIE   i
 1286              	@ 0 "" 2
 233:.\main.c      ****     if(ENABLE_PWM)
 234:.\main.c      ****     {
 235:.\main.c      ****         PWM_1_Start();// starting the pwm
 1287              		.loc 1 235 0
 1288              		.thumb
 1289 0008 FFF7FEFF 		bl	PWM_1_Start
 236:.\main.c      ****         PWM_2_Start();// starting the pwm
 1290              		.loc 1 236 0
 1291 000c FFF7FEFF 		bl	PWM_2_Start
 237:.\main.c      ****     }
 238:.\main.c      ****     
 239:.\main.c      ****     if(ENABLE_ADC)
 240:.\main.c      ****     {
 241:.\main.c      ****         ADC_Start();
 242:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 243:.\main.c      ****         //ADC_StartConvert();
 244:.\main.c      ****         
 245:.\main.c      ****         //start the ADC timer for software trigger mode
 246:.\main.c      ****         Timer_TS_Start();
 247:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 248:.\main.c      ****     }
 249:.\main.c      ****     
 250:.\main.c      ****     if (ENABLE_QUAD)
 251:.\main.c      ****     {
 252:.\main.c      ****         QuadDec_M1_Start();
 1292              		.loc 1 252 0
 1293 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 253:.\main.c      ****         QuadDec_M2_Start();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 29


 1294              		.loc 1 253 0
 1295 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 254:.\main.c      ****         
 255:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1296              		.loc 1 255 0
 1297 0018 B248     		ldr	r0, .L96
 1298 001a FFF7FEFF 		bl	isr_quad1_StartEx
 256:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1299              		.loc 1 256 0
 1300 001e B248     		ldr	r0, .L96+4
 1301 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 257:.\main.c      ****         
 258:.\main.c      ****         Timer_1_Start();
 1302              		.loc 1 258 0
 1303 0024 FFF7FEFF 		bl	Timer_1_Start
 259:.\main.c      ****     }
 260:.\main.c      ****     
 261:.\main.c      ****     if(ENABLE_STOP){
 262:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 263:.\main.c      ****         
 264:.\main.c      ****     }
 265:.\main.c      ****     isr_button_StartEx(button);
 1304              		.loc 1 265 0
 1305 0028 B048     		ldr	r0, .L96+8
 1306 002a FFF7FEFF 		bl	isr_button_StartEx
 266:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1307              		.loc 1 266 0
 1308 002e B048     		ldr	r0, .L96+12
 1309 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 267:.\main.c      **** 
 268:.\main.c      ****     // ------USB SETUP ----------------    
 269:.\main.c      ****     if (USE_USB){    
 270:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1310              		.loc 1 270 0
 1311 0034 0020     		movs	r0, #0
 1312 0036 0121     		movs	r1, #1
 1313 0038 FFF7FEFF 		bl	USBUART_Start
 271:.\main.c      ****         if (USBUART_GetConfiguration())
 1314              		.loc 1 271 0
 1315 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1316 0040 0346     		mov	r3, r0
 1317 0042 002B     		cmp	r3, #0
 1318 0044 01D0     		beq	.L36
 272:.\main.c      ****             {
 273:.\main.c      ****                  USBUART_CDC_Init();
 1319              		.loc 1 273 0
 1320 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1321              	.L36:
 274:.\main.c      ****             }
 275:.\main.c      ****     }
 276:.\main.c      ****     
 277:.\main.c      ****     if(BIN_ENABLED){
 1322              		.loc 1 277 0
 1323 004a AA4B     		ldr	r3, .L96+16
 1324 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 004e 002B     		cmp	r3, #0
 1326 0050 01D0     		beq	.L37
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 30


 278:.\main.c      ****         changeToRF();
 1327              		.loc 1 278 0
 1328 0052 FFF7FEFF 		bl	changeToRF
 1329              	.L37:
 279:.\main.c      ****     }
 280:.\main.c      ****     
 281:.\main.c      ****     if(BT_ENABLED){
 1330              		.loc 1 281 0
 1331 0056 A84B     		ldr	r3, .L96+20
 1332 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 005a 002B     		cmp	r3, #0
 1334 005c 01D0     		beq	.L38
 282:.\main.c      ****         changeToBT();
 1335              		.loc 1 282 0
 1336 005e FFF7FEFF 		bl	changeToBT
 1337              	.L38:
 283:.\main.c      ****     }
 284:.\main.c      ****     
 285:.\main.c      ****     uint16 actionDebounce = 0;
 1338              		.loc 1 285 0
 1339 0062 0023     		movs	r3, #0
 1340 0064 FB87     		strh	r3, [r7, #62]	@ movhi
 1341              	.L92:
 1342              	.LBB2:
 286:.\main.c      ****     
 287:.\main.c      ****     //usbPutString("Started");
 288:.\main.c      ****     for(;;)
 289:.\main.c      ****     {
 290:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 291:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1343              		.loc 1 291 0
 1344 0066 FFF7FEFF 		bl	Quad_Dec_response
 292:.\main.c      ****         if(BIN_ENABLED == 1)
 1345              		.loc 1 292 0
 1346 006a A24B     		ldr	r3, .L96+16
 1347 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 006e 012B     		cmp	r3, #1
 1349 0070 03D1     		bne	.L39
 293:.\main.c      ****         {
 294:.\main.c      ****             handle_rx_binary();
 1350              		.loc 1 294 0
 1351 0072 FFF7FEFF 		bl	handle_rx_binary
 295:.\main.c      ****             print_RF();
 1352              		.loc 1 295 0
 1353 0076 FFF7FEFF 		bl	print_RF
 1354              	.L39:
 296:.\main.c      ****         }
 297:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 298:.\main.c      ****         
 299:.\main.c      ****         uint8 frontSensors[5];
 300:.\main.c      ****         readFrontSensors(frontSensors);
 1355              		.loc 1 300 0
 1356 007a 07F13403 		add	r3, r7, #52
 1357 007e 1846     		mov	r0, r3
 1358 0080 FFF7FEFF 		bl	readFrontSensors
 301:.\main.c      ****         
 302:.\main.c      ****         switch(track_mode)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 31


 1359              		.loc 1 302 0
 1360 0084 9D4B     		ldr	r3, .L96+24
 1361 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 0088 072B     		cmp	r3, #7
 1363 008a 00F28382 		bhi	.L40
 1364 008e 01A2     		adr	r2, .L42
 1365 0090 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1366              		.p2align 2
 1367              	.L42:
 1368 0094 95050000 		.word	.L40+1
 1369 0098 95050000 		.word	.L40+1
 1370 009c 95050000 		.word	.L40+1
 1371 00a0 B5000000 		.word	.L45+1
 1372 00a4 95050000 		.word	.L40+1
 1373 00a8 F9000000 		.word	.L47+1
 1374 00ac 1F010000 		.word	.L48+1
 1375 00b0 1F010000 		.word	.L48+1
 1376              		.p2align 1
 1377              	.L45:
 303:.\main.c      ****         {
 304:.\main.c      ****             case SQUARE_TRACK:
 305:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1378              		.loc 1 305 0
 1379 00b4 924B     		ldr	r3, .L96+28
 1380 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 00b8 012B     		cmp	r3, #1
 1382 00ba 1CD0     		beq	.L49
 1383              		.loc 1 305 0 is_stmt 0 discriminator 1
 1384 00bc 904B     		ldr	r3, .L96+28
 1385 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 00c0 022B     		cmp	r3, #2
 1387 00c2 18D0     		beq	.L49
 306:.\main.c      ****                 {
 307:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1388              		.loc 1 307 0 is_stmt 1
 1389 00c4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1390 00c8 012B     		cmp	r3, #1
 1391 00ca 06D1     		bne	.L50
 1392              		.loc 1 307 0 is_stmt 0 discriminator 1
 1393 00cc 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1394 00d0 012B     		cmp	r3, #1
 1395 00d2 02D1     		bne	.L50
 308:.\main.c      ****                         initTurnLeft();
 1396              		.loc 1 308 0 is_stmt 1
 1397 00d4 FFF7FEFF 		bl	initTurnLeft
 1398 00d8 0DE0     		b	.L49
 1399              	.L50:
 309:.\main.c      ****                     }
 310:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1400              		.loc 1 310 0
 1401 00da 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1402 00de 012B     		cmp	r3, #1
 1403 00e0 06D1     		bne	.L51
 1404              		.loc 1 310 0 is_stmt 0 discriminator 1
 1405 00e2 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1406 00e6 012B     		cmp	r3, #1
 1407 00e8 02D1     		bne	.L51
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 32


 311:.\main.c      ****                     {
 312:.\main.c      ****                         initTurnRight();
 1408              		.loc 1 312 0 is_stmt 1
 1409 00ea FFF7FEFF 		bl	initTurnRight
 1410 00ee 02E0     		b	.L49
 1411              	.L51:
 313:.\main.c      ****                     }
 314:.\main.c      ****                     else inittrackLineZ();
 1412              		.loc 1 314 0
 1413 00f0 FFF7FEFF 		bl	inittrackLineZ
 315:.\main.c      ****                 }
 316:.\main.c      ****             break;
 1414              		.loc 1 316 0
 1415 00f4 4EE2     		b	.L40
 1416              	.L49:
 1417 00f6 4DE2     		b	.L40
 1418              	.L47:
 317:.\main.c      ****             case NO_TRACK:
 318:.\main.c      ****             break;
 319:.\main.c      ****             case CURVE_TRACK:
 320:.\main.c      ****             break;
 321:.\main.c      ****             case U_TRACK:
 322:.\main.c      ****             break;
 323:.\main.c      ****             case QUAD_STOP:
 324:.\main.c      ****             break;
 325:.\main.c      ****             case RF_STOP:
 326:.\main.c      ****                 if(initial_pos_valid == 1)
 1419              		.loc 1 326 0
 1420 00f8 824B     		ldr	r3, .L96+32
 1421 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 00fc 012B     		cmp	r3, #1
 1423 00fe 0DD1     		bne	.L52
 327:.\main.c      ****                 {
 328:.\main.c      ****                     //changeToBT();
 329:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 330:.\main.c      ****                     //changeToRF();
 331:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1424              		.loc 1 331 0
 1425 0100 814B     		ldr	r3, .L96+36
 1426 0102 5A88     		ldrh	r2, [r3, #2]
 1427 0104 814B     		ldr	r3, .L96+40
 1428 0106 1A80     		strh	r2, [r3]	@ movhi
 332:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1429              		.loc 1 332 0
 1430 0108 7F4B     		ldr	r3, .L96+36
 1431 010a 9A88     		ldrh	r2, [r3, #4]
 1432 010c 804B     		ldr	r3, .L96+44
 1433 010e 1A80     		strh	r2, [r3]	@ movhi
 333:.\main.c      ****                     initial_pos_valid = 2;
 1434              		.loc 1 333 0
 1435 0110 7C4B     		ldr	r3, .L96+32
 1436 0112 0222     		movs	r2, #2
 1437 0114 1A70     		strb	r2, [r3]
 334:.\main.c      ****                     initForward();
 1438              		.loc 1 334 0
 1439 0116 FFF7FEFF 		bl	initForward
 335:.\main.c      ****                 }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 33


 336:.\main.c      ****             break;
 1440              		.loc 1 336 0
 1441 011a 3BE2     		b	.L40
 1442              	.L52:
 1443 011c 3AE2     		b	.L40
 1444              	.L48:
 337:.\main.c      ****             case MAP_TRAVERSE:
 338:.\main.c      ****             case DEST_TEST:
 339:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1445              		.loc 1 339 0
 1446 011e 784B     		ldr	r3, .L96+28
 1447 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0122 012B     		cmp	r3, #1
 1449 0124 00F03582 		beq	.L53
 1450              		.loc 1 339 0 is_stmt 0 discriminator 1
 1451 0128 754B     		ldr	r3, .L96+28
 1452 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 012c 022B     		cmp	r3, #2
 1454 012e 00F03082 		beq	.L53
 1455              		.loc 1 339 0 discriminator 2
 1456 0132 734B     		ldr	r3, .L96+28
 1457 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 0136 072B     		cmp	r3, #7
 1459 0138 00F02B82 		beq	.L53
 1460              	.LBB3:
 340:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 341:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1461              		.loc 1 341 0 is_stmt 1
 1462 013c 754B     		ldr	r3, .L96+48
 1463 013e 1B88     		ldrh	r3, [r3]
 1464 0140 1A46     		mov	r2, r3
 1465 0142 754B     		ldr	r3, .L96+52
 1466 0144 9B5C     		ldrb	r3, [r3, r2]
 1467 0146 87F83D30 		strb	r3, [r7, #61]
 342:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 1468              		.loc 1 342 0
 1469 014a 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1470 014e 012B     		cmp	r3, #1
 1471 0150 03D1     		bne	.L54
 1472              		.loc 1 342 0 is_stmt 0 discriminator 1
 1473 0152 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1474 0156 012B     		cmp	r3, #1
 1475 0158 09D0     		beq	.L55
 1476              	.L54:
 1477              		.loc 1 342 0 discriminator 3
 1478 015a 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1479 015e 012B     		cmp	r3, #1
 1480 0160 40F0F280 		bne	.L56
 1481              		.loc 1 342 0 discriminator 4
 1482 0164 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1483 0168 012B     		cmp	r3, #1
 1484 016a 40F0ED80 		bne	.L56
 1485              	.L55:
 343:.\main.c      ****                         if(sensorsDisabled == 0)
 1486              		.loc 1 343 0 is_stmt 1
 1487 016e 6B4B     		ldr	r3, .L96+56
 1488 0170 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 34


 1489 0172 002B     		cmp	r3, #0
 1490 0174 40F0B580 		bne	.L57
 344:.\main.c      ****                         {
 345:.\main.c      ****                             actionDebounce++;
 1491              		.loc 1 345 0
 1492 0178 FB8F     		ldrh	r3, [r7, #62]
 1493 017a 0133     		adds	r3, r3, #1
 1494 017c FB87     		strh	r3, [r7, #62]	@ movhi
 346:.\main.c      ****                             if(actionDebounce >= 800)
 1495              		.loc 1 346 0
 1496 017e FB8F     		ldrh	r3, [r7, #62]
 1497 0180 B3F5487F 		cmp	r3, #800
 1498 0184 C0F0AD80 		bcc	.L57
 1499              	.LBB4:
 347:.\main.c      ****                             {
 348:.\main.c      ****                                 char mes[16];
 349:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1500              		.loc 1 349 0
 1501 0188 654B     		ldr	r3, .L96+60
 1502 018a 1B88     		ldrh	r3, [r3]
 1503 018c 1BB2     		sxth	r3, r3
 1504 018e 07F12402 		add	r2, r7, #36
 1505 0192 1046     		mov	r0, r2
 1506 0194 6349     		ldr	r1, .L96+64
 1507 0196 1A46     		mov	r2, r3
 1508 0198 FFF7FEFF 		bl	sprintf
 350:.\main.c      ****                                  UART_PutString(mes);
 1509              		.loc 1 350 0
 1510 019c 07F12403 		add	r3, r7, #36
 1511 01a0 1846     		mov	r0, r3
 1512 01a2 FFF7FEFF 		bl	UART_PutString
 1513              	.LBB5:
 351:.\main.c      ****                             //if(reached_target == 1)
 352:.\main.c      ****                             {
 353:.\main.c      ****                                 if(nextStep == 'D')
 1514              		.loc 1 353 0
 1515 01a6 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1516 01aa 442B     		cmp	r3, #68
 1517 01ac 0CD1     		bne	.L58
 354:.\main.c      ****                                 {
 355:.\main.c      ****                                     instructionCount += 2;
 1518              		.loc 1 355 0
 1519 01ae 594B     		ldr	r3, .L96+48
 1520 01b0 1B88     		ldrh	r3, [r3]
 1521 01b2 0233     		adds	r3, r3, #2
 1522 01b4 9AB2     		uxth	r2, r3
 1523 01b6 574B     		ldr	r3, .L96+48
 1524 01b8 1A80     		strh	r2, [r3]	@ movhi
 356:.\main.c      ****                                     nextStep = instructions[instructionCount]; 
 1525              		.loc 1 356 0
 1526 01ba 564B     		ldr	r3, .L96+48
 1527 01bc 1B88     		ldrh	r3, [r3]
 1528 01be 1A46     		mov	r2, r3
 1529 01c0 554B     		ldr	r3, .L96+52
 1530 01c2 9B5C     		ldrb	r3, [r3, r2]
 1531 01c4 87F83D30 		strb	r3, [r7, #61]
 1532              	.L58:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 35


 357:.\main.c      ****                                 }
 358:.\main.c      ****                                 
 359:.\main.c      ****                                 sensorsDisabled = 1;
 1533              		.loc 1 359 0
 1534 01c8 544B     		ldr	r3, .L96+56
 1535 01ca 0122     		movs	r2, #1
 1536 01cc 1A60     		str	r2, [r3]
 360:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 1537              		.loc 1 360 0
 1538 01ce 5648     		ldr	r0, .L96+68
 1539 01d0 FFF7FEFF 		bl	UART_PutString
 361:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 1540              		.loc 1 361 0
 1541 01d4 5548     		ldr	r0, .L96+72
 1542 01d6 FFF7FEFF 		bl	UART_PutString
 362:.\main.c      ****                                 deadzone = 1;
 1543              		.loc 1 362 0
 1544 01da 554B     		ldr	r3, .L96+76
 1545 01dc 0122     		movs	r2, #1
 1546 01de 1A70     		strb	r2, [r3]
 363:.\main.c      ****                                 Timer_Deadzone_WriteCounter(40000);
 1547              		.loc 1 363 0
 1548 01e0 49F64040 		movw	r0, #40000
 1549 01e4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 364:.\main.c      ****                                 accum_dist = 0;
 1550              		.loc 1 364 0
 1551 01e8 4D4B     		ldr	r3, .L96+60
 1552 01ea 0022     		movs	r2, #0
 1553 01ec 1A80     		strh	r2, [r3]	@ movhi
 365:.\main.c      ****                                 uint8 nextStepDist;
 366:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1554              		.loc 1 366 0
 1555 01ee 494B     		ldr	r3, .L96+48
 1556 01f0 1B88     		ldrh	r3, [r3]
 1557 01f2 1A46     		mov	r2, r3
 1558 01f4 4F4B     		ldr	r3, .L96+80
 1559 01f6 1B88     		ldrh	r3, [r3]
 1560 01f8 053B     		subs	r3, r3, #5
 1561 01fa 9A42     		cmp	r2, r3
 1562 01fc 07DC     		bgt	.L59
 1563              		.loc 1 366 0 is_stmt 0 discriminator 1
 1564 01fe 454B     		ldr	r3, .L96+48
 1565 0200 1B88     		ldrh	r3, [r3]
 1566 0202 0333     		adds	r3, r3, #3
 1567 0204 444A     		ldr	r2, .L96+52
 1568 0206 D35C     		ldrb	r3, [r2, r3]
 1569 0208 87F83C30 		strb	r3, [r7, #60]
 1570 020c 02E0     		b	.L60
 1571              	.L59:
 367:.\main.c      ****                                 else nextStepDist = 0;
 1572              		.loc 1 367 0 is_stmt 1
 1573 020e 0023     		movs	r3, #0
 1574 0210 87F83C30 		strb	r3, [r7, #60]
 1575              	.L60:
 368:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1576              		.loc 1 368 0
 1577 0214 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 36


 1578 0218 013B     		subs	r3, r3, #1
 1579 021a 9BB2     		uxth	r3, r3
 1580 021c 1A46     		mov	r2, r3	@ movhi
 1581 021e 9200     		lsls	r2, r2, #2
 1582 0220 1344     		add	r3, r3, r2
 1583 0222 1A46     		mov	r2, r3	@ movhi
 1584 0224 D200     		lsls	r2, r2, #3
 1585 0226 D31A     		subs	r3, r2, r3
 1586 0228 9B00     		lsls	r3, r3, #2
 1587 022a 9BB2     		uxth	r3, r3
 1588 022c 9AB2     		uxth	r2, r3
 1589 022e 424B     		ldr	r3, .L96+84
 1590 0230 1A80     		strh	r2, [r3]	@ movhi
 369:.\main.c      ****                                 
 370:.\main.c      ****                                 
 371:.\main.c      ****                                 
 372:.\main.c      ****                                 switch(nextStep)
 1591              		.loc 1 372 0
 1592 0232 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1593 0236 4C3B     		subs	r3, r3, #76
 1594 0238 092B     		cmp	r3, #9
 1595 023a 33D8     		bhi	.L93
 1596 023c 01A2     		adr	r2, .L63
 1597 023e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1598 0242 00BF     		.p2align 2
 1599              	.L63:
 1600 0244 7B020000 		.word	.L62+1
 1601 0248 A5020000 		.word	.L93+1
 1602 024c A5020000 		.word	.L93+1
 1603 0250 A5020000 		.word	.L93+1
 1604 0254 A5020000 		.word	.L93+1
 1605 0258 A5020000 		.word	.L93+1
 1606 025c 91020000 		.word	.L64+1
 1607 0260 6D020000 		.word	.L65+1
 1608 0264 A5020000 		.word	.L93+1
 1609 0268 9F020000 		.word	.L66+1
 1610              		.p2align 1
 1611              	.L65:
 373:.\main.c      ****                                 {
 374:.\main.c      ****                                     case 'S':
 375:.\main.c      ****                                         initTrackU();
 1612              		.loc 1 375 0
 1613 026c FFF7FEFF 		bl	initTrackU
 376:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1614              		.loc 1 376 0
 1615 0270 42F21070 		movw	r0, #10000
 1616 0274 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 377:.\main.c      ****                                         //do nothing
 378:.\main.c      ****                                     break;
 1617              		.loc 1 378 0
 1618 0278 15E0     		b	.L67
 1619              	.L62:
 379:.\main.c      ****                                     case 'L':
 380:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 381:.\main.c      ****                                         initTurnLeft();
 1620              		.loc 1 381 0
 1621 027a FFF7FEFF 		bl	initTurnLeft
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 37


 382:.\main.c      ****                                         target_distance_quad -= 208;
 1622              		.loc 1 382 0
 1623 027e 2E4B     		ldr	r3, .L96+84
 1624 0280 1B88     		ldrh	r3, [r3]
 1625 0282 9BB2     		uxth	r3, r3
 1626 0284 D03B     		subs	r3, r3, #208
 1627 0286 9BB2     		uxth	r3, r3
 1628 0288 9AB2     		uxth	r2, r3
 1629 028a 2B4B     		ldr	r3, .L96+84
 1630 028c 1A80     		strh	r2, [r3]	@ movhi
 383:.\main.c      ****                                     break;
 1631              		.loc 1 383 0
 1632 028e 0AE0     		b	.L67
 1633              	.L64:
 384:.\main.c      ****                                     case 'R':
 385:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 386:.\main.c      ****                                         initTurnRight();
 1634              		.loc 1 386 0
 1635 0290 FFF7FEFF 		bl	initTurnRight
 387:.\main.c      ****                                         target_distance_quad += 208 - 208;
 1636              		.loc 1 387 0
 1637 0294 284B     		ldr	r3, .L96+84
 1638 0296 1A88     		ldrh	r2, [r3]
 1639 0298 274B     		ldr	r3, .L96+84
 1640 029a 1A80     		strh	r2, [r3]	@ movhi
 388:.\main.c      ****                                         
 389:.\main.c      ****                                     break;
 1641              		.loc 1 389 0
 1642 029c 03E0     		b	.L67
 1643              	.L66:
 390:.\main.c      ****                                     case 'U':
 391:.\main.c      ****                                         // Direction not tracked any more
 392:.\main.c      ****                                         initTurnU();
 1644              		.loc 1 392 0
 1645 029e FFF7FEFF 		bl	initTurnU
 393:.\main.c      ****                                        // target_distance_quad += 208;
 394:.\main.c      ****                                     break;
 1646              		.loc 1 394 0
 1647 02a2 00E0     		b	.L67
 1648              	.L93:
 395:.\main.c      ****                                     
 396:.\main.c      ****                                     default:
 397:.\main.c      ****                                         //do nothing
 398:.\main.c      ****                                         break;
 1649              		.loc 1 398 0
 1650 02a4 00BF     		nop
 1651              	.L67:
 399:.\main.c      ****                                 }
 400:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1652              		.loc 1 400 0 discriminator 1
 1653 02a6 244B     		ldr	r3, .L96+84
 1654 02a8 1B88     		ldrh	r3, [r3]
 1655 02aa 1BB2     		sxth	r3, r3
 1656 02ac 07F12402 		add	r2, r7, #36
 1657 02b0 1046     		mov	r0, r2
 1658 02b2 2249     		ldr	r1, .L96+88
 1659 02b4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 38


 1660 02b6 FFF7FEFF 		bl	sprintf
 401:.\main.c      ****                                  UART_PutString(mes);
 1661              		.loc 1 401 0 discriminator 1
 1662 02ba 07F12403 		add	r3, r7, #36
 1663 02be 1846     		mov	r0, r3
 1664 02c0 FFF7FEFF 		bl	UART_PutString
 402:.\main.c      ****                                 
 403:.\main.c      ****                                 Timer_Deadzone_Start();
 1665              		.loc 1 403 0 discriminator 1
 1666 02c4 FFF7FEFF 		bl	Timer_Deadzone_Start
 404:.\main.c      ****                                 reached_target = 0;
 1667              		.loc 1 404 0 discriminator 1
 1668 02c8 1D4B     		ldr	r3, .L96+92
 1669 02ca 0022     		movs	r2, #0
 1670 02cc 1A70     		strb	r2, [r3]
 405:.\main.c      ****                                 overshot_target = 0;
 1671              		.loc 1 405 0 discriminator 1
 1672 02ce 1D4B     		ldr	r3, .L96+96
 1673 02d0 0022     		movs	r2, #0
 1674 02d2 1A70     		strb	r2, [r3]
 406:.\main.c      ****                                 instructionCount += 2;
 1675              		.loc 1 406 0 discriminator 1
 1676 02d4 0F4B     		ldr	r3, .L96+48
 1677 02d6 1B88     		ldrh	r3, [r3]
 1678 02d8 0233     		adds	r3, r3, #2
 1679 02da 9AB2     		uxth	r2, r3
 1680 02dc 0D4B     		ldr	r3, .L96+48
 1681 02de 1A80     		strh	r2, [r3]	@ movhi
 1682              	.LBE5:
 1683              	.LBE4:
 343:.\main.c      ****                         {
 1684              		.loc 1 343 0 discriminator 1
 1685 02e0 57E1     		b	.L53
 1686              	.L57:
 343:.\main.c      ****                         {
 1687              		.loc 1 343 0 is_stmt 0 discriminator 2
 1688 02e2 56E1     		b	.L53
 1689              	.L97:
 1690              		.align	2
 1691              	.L96:
 1692 02e4 00000000 		.word	isr_quad1
 1693 02e8 00000000 		.word	isr_turn_timer
 1694 02ec 00000000 		.word	button
 1695 02f0 00000000 		.word	isr_deadzone
 1696 02f4 00000000 		.word	BIN_ENABLED
 1697 02f8 00000000 		.word	BT_ENABLED
 1698 02fc 00000000 		.word	track_mode
 1699 0300 00000000 		.word	movement_state
 1700 0304 00000000 		.word	initial_pos_valid
 1701 0308 00000000 		.word	system_state
 1702 030c 00000000 		.word	initial_x_pos
 1703 0310 00000000 		.word	initial_y_pos
 1704 0314 00000000 		.word	instructionCount
 1705 0318 00000000 		.word	instructions
 1706 031c 00000000 		.word	sensorsDisabled
 1707 0320 00000000 		.word	accum_dist
 1708 0324 24000000 		.word	.LC2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 39


 1709 0328 38000000 		.word	.LC3
 1710 032c 58000000 		.word	.LC4
 1711 0330 00000000 		.word	deadzone
 1712 0334 00000000 		.word	instructionLength
 1713 0338 00000000 		.word	target_distance_quad
 1714 033c 6C000000 		.word	.LC5
 1715 0340 00000000 		.word	reached_target
 1716 0344 00000000 		.word	overshot_target
 1717              	.L56:
 407:.\main.c      ****                             }
 408:.\main.c      ****                             }
 409:.\main.c      ****                         }
 410:.\main.c      ****                     }
 411:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1718              		.loc 1 411 0 is_stmt 1
 1719 0348 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1720 034c 002B     		cmp	r3, #0
 1721 034e 77D1     		bne	.L68
 1722              		.loc 1 411 0 is_stmt 0 discriminator 1
 1723 0350 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1724 0354 002B     		cmp	r3, #0
 1725 0356 73D1     		bne	.L68
 1726              		.loc 1 411 0 discriminator 2
 1727 0358 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 1728 035c 002B     		cmp	r3, #0
 1729 035e 6FD1     		bne	.L68
 1730              		.loc 1 411 0 discriminator 3
 1731 0360 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1732 0364 002B     		cmp	r3, #0
 1733 0366 6BD1     		bne	.L68
 1734              		.loc 1 411 0 discriminator 4
 1735 0368 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1736 036c 002B     		cmp	r3, #0
 1737 036e 67D1     		bne	.L68
 1738              		.loc 1 411 0 discriminator 5
 1739 0370 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1740 0374 552B     		cmp	r3, #85
 1741 0376 63D1     		bne	.L68
 412:.\main.c      ****                     {
 413:.\main.c      ****                         if(sensorsDisabled == 0)
 1742              		.loc 1 413 0 is_stmt 1
 1743 0378 9E4B     		ldr	r3, .L98
 1744 037a 1B68     		ldr	r3, [r3]
 1745 037c 002B     		cmp	r3, #0
 1746 037e 5ED1     		bne	.L69
 414:.\main.c      ****                         {
 415:.\main.c      ****                                 
 416:.\main.c      ****                                 actionDebounce++;
 1747              		.loc 1 416 0
 1748 0380 FB8F     		ldrh	r3, [r7, #62]
 1749 0382 0133     		adds	r3, r3, #1
 1750 0384 FB87     		strh	r3, [r7, #62]	@ movhi
 417:.\main.c      ****                                 if(actionDebounce >= 3000)
 1751              		.loc 1 417 0
 1752 0386 FB8F     		ldrh	r3, [r7, #62]
 1753 0388 40F6B732 		movw	r2, #2999
 1754 038c 9342     		cmp	r3, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 40


 1755 038e 56D9     		bls	.L69
 1756              	.LBB6:
 418:.\main.c      ****                                 {
 419:.\main.c      ****                                     //if(reached_target == 1)
 420:.\main.c      ****                                     {
 421:.\main.c      ****                                 char mes[16];
 422:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1757              		.loc 1 422 0
 1758 0390 994B     		ldr	r3, .L98+4
 1759 0392 1B88     		ldrh	r3, [r3]
 1760 0394 1BB2     		sxth	r3, r3
 1761 0396 07F11402 		add	r2, r7, #20
 1762 039a 1046     		mov	r0, r2
 1763 039c 9749     		ldr	r1, .L98+8
 1764 039e 1A46     		mov	r2, r3
 1765 03a0 FFF7FEFF 		bl	sprintf
 423:.\main.c      ****                                  UART_PutString(mes);
 1766              		.loc 1 423 0
 1767 03a4 07F11403 		add	r3, r7, #20
 1768 03a8 1846     		mov	r0, r3
 1769 03aa FFF7FEFF 		bl	UART_PutString
 424:.\main.c      ****                                      accum_dist = 0;
 1770              		.loc 1 424 0
 1771 03ae 924B     		ldr	r3, .L98+4
 1772 03b0 0022     		movs	r2, #0
 1773 03b2 1A80     		strh	r2, [r3]	@ movhi
 425:.\main.c      ****                                 uint8 nextStepDist;
 426:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1774              		.loc 1 426 0
 1775 03b4 924B     		ldr	r3, .L98+12
 1776 03b6 1B88     		ldrh	r3, [r3]
 1777 03b8 1A46     		mov	r2, r3
 1778 03ba 924B     		ldr	r3, .L98+16
 1779 03bc 1B88     		ldrh	r3, [r3]
 1780 03be 053B     		subs	r3, r3, #5
 1781 03c0 9A42     		cmp	r2, r3
 1782 03c2 07DC     		bgt	.L70
 1783              		.loc 1 426 0 is_stmt 0 discriminator 1
 1784 03c4 8E4B     		ldr	r3, .L98+12
 1785 03c6 1B88     		ldrh	r3, [r3]
 1786 03c8 0333     		adds	r3, r3, #3
 1787 03ca 8F4A     		ldr	r2, .L98+20
 1788 03cc D35C     		ldrb	r3, [r2, r3]
 1789 03ce 87F83B30 		strb	r3, [r7, #59]
 1790 03d2 02E0     		b	.L71
 1791              	.L70:
 427:.\main.c      ****                                 else nextStepDist = 0;
 1792              		.loc 1 427 0 is_stmt 1
 1793 03d4 0023     		movs	r3, #0
 1794 03d6 87F83B30 		strb	r3, [r7, #59]
 1795              	.L71:
 428:.\main.c      ****                                 
 429:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1796              		.loc 1 429 0
 1797 03da 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1798 03de 013B     		subs	r3, r3, #1
 1799 03e0 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 41


 1800 03e2 1A46     		mov	r2, r3	@ movhi
 1801 03e4 9200     		lsls	r2, r2, #2
 1802 03e6 1344     		add	r3, r3, r2
 1803 03e8 1A46     		mov	r2, r3	@ movhi
 1804 03ea D200     		lsls	r2, r2, #3
 1805 03ec D31A     		subs	r3, r2, r3
 1806 03ee 9B00     		lsls	r3, r3, #2
 1807 03f0 9BB2     		uxth	r3, r3
 1808 03f2 9AB2     		uxth	r2, r3
 1809 03f4 854B     		ldr	r3, .L98+24
 1810 03f6 1A80     		strh	r2, [r3]	@ movhi
 430:.\main.c      ****                                 
 431:.\main.c      ****                                     UART_PutString("Triggered at white light \r\n");
 1811              		.loc 1 431 0
 1812 03f8 8548     		ldr	r0, .L98+28
 1813 03fa FFF7FEFF 		bl	UART_PutString
 432:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1814              		.loc 1 432 0
 1815 03fe 8548     		ldr	r0, .L98+32
 1816 0400 FFF7FEFF 		bl	UART_PutString
 433:.\main.c      ****                                     deadzone = 1;
 1817              		.loc 1 433 0
 1818 0404 844B     		ldr	r3, .L98+36
 1819 0406 0122     		movs	r2, #1
 1820 0408 1A70     		strb	r2, [r3]
 434:.\main.c      ****                                     Timer_Deadzone_WriteCounter(40000);
 1821              		.loc 1 434 0
 1822 040a 49F64040 		movw	r0, #40000
 1823 040e FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 435:.\main.c      ****                                     Timer_Deadzone_Start();
 1824              		.loc 1 435 0
 1825 0412 FFF7FEFF 		bl	Timer_Deadzone_Start
 436:.\main.c      ****                                     actionDebounce = 0;
 1826              		.loc 1 436 0
 1827 0416 0023     		movs	r3, #0
 1828 0418 FB87     		strh	r3, [r7, #62]	@ movhi
 437:.\main.c      ****                                     sensorsDisabled = 1;
 1829              		.loc 1 437 0
 1830 041a 764B     		ldr	r3, .L98
 1831 041c 0122     		movs	r2, #1
 1832 041e 1A60     		str	r2, [r3]
 438:.\main.c      ****                                     initTurnU();
 1833              		.loc 1 438 0
 1834 0420 FFF7FEFF 		bl	initTurnU
 439:.\main.c      ****                                     reached_target = 0;
 1835              		.loc 1 439 0
 1836 0424 7D4B     		ldr	r3, .L98+40
 1837 0426 0022     		movs	r2, #0
 1838 0428 1A70     		strb	r2, [r3]
 440:.\main.c      ****                                     overshot_target = 0;
 1839              		.loc 1 440 0
 1840 042a 7D4B     		ldr	r3, .L98+44
 1841 042c 0022     		movs	r2, #0
 1842 042e 1A70     		strb	r2, [r3]
 441:.\main.c      ****                                     instructionCount += 2;
 1843              		.loc 1 441 0
 1844 0430 734B     		ldr	r3, .L98+12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 42


 1845 0432 1B88     		ldrh	r3, [r3]
 1846 0434 0233     		adds	r3, r3, #2
 1847 0436 9AB2     		uxth	r2, r3
 1848 0438 714B     		ldr	r3, .L98+12
 1849 043a 1A80     		strh	r2, [r3]	@ movhi
 1850              	.LBE6:
 413:.\main.c      ****                         {
 1851              		.loc 1 413 0
 1852 043c A9E0     		b	.L53
 1853              	.L69:
 413:.\main.c      ****                         {
 1854              		.loc 1 413 0 is_stmt 0 discriminator 4
 1855 043e A8E0     		b	.L53
 1856              	.L68:
 442:.\main.c      ****                                 }
 443:.\main.c      ****                             }
 444:.\main.c      ****                         }
 445:.\main.c      ****                     }
 446:.\main.c      ****                     else if (overshot_target == 1 && nextStep == 'D')
 1857              		.loc 1 446 0 is_stmt 1
 1858 0440 774B     		ldr	r3, .L98+44
 1859 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1860 0444 012B     		cmp	r3, #1
 1861 0446 40F09F80 		bne	.L72
 1862              		.loc 1 446 0 is_stmt 0 discriminator 1
 1863 044a 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1864 044e 442B     		cmp	r3, #68
 1865 0450 40F09A80 		bne	.L72
 1866              	.LBB7:
 447:.\main.c      ****                     {
 448:.\main.c      ****                         
 449:.\main.c      ****                                 instructionCount += 2;
 1867              		.loc 1 449 0 is_stmt 1
 1868 0454 6A4B     		ldr	r3, .L98+12
 1869 0456 1B88     		ldrh	r3, [r3]
 1870 0458 0233     		adds	r3, r3, #2
 1871 045a 9AB2     		uxth	r2, r3
 1872 045c 684B     		ldr	r3, .L98+12
 1873 045e 1A80     		strh	r2, [r3]	@ movhi
 450:.\main.c      ****                                 nextStep = instructions[instructionCount]; 
 1874              		.loc 1 450 0
 1875 0460 674B     		ldr	r3, .L98+12
 1876 0462 1B88     		ldrh	r3, [r3]
 1877 0464 1A46     		mov	r2, r3
 1878 0466 684B     		ldr	r3, .L98+20
 1879 0468 9B5C     		ldrb	r3, [r3, r2]
 1880 046a 87F83D30 		strb	r3, [r7, #61]
 451:.\main.c      ****                                 char mes[16];
 452:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1881              		.loc 1 452 0
 1882 046e 624B     		ldr	r3, .L98+4
 1883 0470 1B88     		ldrh	r3, [r3]
 1884 0472 1BB2     		sxth	r3, r3
 1885 0474 3A1D     		adds	r2, r7, #4
 1886 0476 1046     		mov	r0, r2
 1887 0478 6049     		ldr	r1, .L98+8
 1888 047a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 43


 1889 047c FFF7FEFF 		bl	sprintf
 453:.\main.c      ****                                  UART_PutString(mes);
 1890              		.loc 1 453 0
 1891 0480 3B1D     		adds	r3, r7, #4
 1892 0482 1846     		mov	r0, r3
 1893 0484 FFF7FEFF 		bl	UART_PutString
 454:.\main.c      ****                                  accum_dist = 0;
 1894              		.loc 1 454 0
 1895 0488 5B4B     		ldr	r3, .L98+4
 1896 048a 0022     		movs	r2, #0
 1897 048c 1A80     		strh	r2, [r3]	@ movhi
 455:.\main.c      ****                                 uint8 nextStepDist;
 456:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1898              		.loc 1 456 0
 1899 048e 5C4B     		ldr	r3, .L98+12
 1900 0490 1B88     		ldrh	r3, [r3]
 1901 0492 1A46     		mov	r2, r3
 1902 0494 5B4B     		ldr	r3, .L98+16
 1903 0496 1B88     		ldrh	r3, [r3]
 1904 0498 053B     		subs	r3, r3, #5
 1905 049a 9A42     		cmp	r2, r3
 1906 049c 07DC     		bgt	.L73
 1907              		.loc 1 456 0 is_stmt 0 discriminator 1
 1908 049e 584B     		ldr	r3, .L98+12
 1909 04a0 1B88     		ldrh	r3, [r3]
 1910 04a2 0333     		adds	r3, r3, #3
 1911 04a4 584A     		ldr	r2, .L98+20
 1912 04a6 D35C     		ldrb	r3, [r2, r3]
 1913 04a8 87F83A30 		strb	r3, [r7, #58]
 1914 04ac 02E0     		b	.L74
 1915              	.L73:
 457:.\main.c      ****                                 else nextStepDist = 0;
 1916              		.loc 1 457 0 is_stmt 1
 1917 04ae 0023     		movs	r3, #0
 1918 04b0 87F83A30 		strb	r3, [r7, #58]
 1919              	.L74:
 458:.\main.c      ****                                 
 459:.\main.c      ****                                 target_distance_quad = 140 * (nextStepDist-1);
 1920              		.loc 1 459 0
 1921 04b4 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 1922 04b8 013B     		subs	r3, r3, #1
 1923 04ba 9BB2     		uxth	r3, r3
 1924 04bc 1A46     		mov	r2, r3	@ movhi
 1925 04be 9200     		lsls	r2, r2, #2
 1926 04c0 1344     		add	r3, r3, r2
 1927 04c2 1A46     		mov	r2, r3	@ movhi
 1928 04c4 D200     		lsls	r2, r2, #3
 1929 04c6 D31A     		subs	r3, r2, r3
 1930 04c8 9B00     		lsls	r3, r3, #2
 1931 04ca 9BB2     		uxth	r3, r3
 1932 04cc 9AB2     		uxth	r2, r3
 1933 04ce 4F4B     		ldr	r3, .L98+24
 1934 04d0 1A80     		strh	r2, [r3]	@ movhi
 460:.\main.c      ****                                 
 461:.\main.c      ****                                     UART_PutString("Triggered at quad count \r\n");
 1935              		.loc 1 461 0
 1936 04d2 5448     		ldr	r0, .L98+48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 44


 1937 04d4 FFF7FEFF 		bl	UART_PutString
 462:.\main.c      ****                                     UART_PutString("Deadzone entered!\r\n");
 1938              		.loc 1 462 0
 1939 04d8 4E48     		ldr	r0, .L98+32
 1940 04da FFF7FEFF 		bl	UART_PutString
 463:.\main.c      ****                                     deadzone = 1;
 1941              		.loc 1 463 0
 1942 04de 4E4B     		ldr	r3, .L98+36
 1943 04e0 0122     		movs	r2, #1
 1944 04e2 1A70     		strb	r2, [r3]
 464:.\main.c      ****                                     Timer_Deadzone_WriteCounter(40000);
 1945              		.loc 1 464 0
 1946 04e4 49F64040 		movw	r0, #40000
 1947 04e8 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 465:.\main.c      ****                                     Timer_Deadzone_Start();
 1948              		.loc 1 465 0
 1949 04ec FFF7FEFF 		bl	Timer_Deadzone_Start
 466:.\main.c      ****                                     actionDebounce = 0;
 1950              		.loc 1 466 0
 1951 04f0 0023     		movs	r3, #0
 1952 04f2 FB87     		strh	r3, [r7, #62]	@ movhi
 467:.\main.c      ****                                     sensorsDisabled = 1;
 1953              		.loc 1 467 0
 1954 04f4 3F4B     		ldr	r3, .L98
 1955 04f6 0122     		movs	r2, #1
 1956 04f8 1A60     		str	r2, [r3]
 468:.\main.c      ****                                     
 469:.\main.c      ****                                      switch(nextStep)
 1957              		.loc 1 469 0
 1958 04fa 97F83D30 		ldrb	r3, [r7, #61]	@ zero_extendqisi2
 1959 04fe 4C3B     		subs	r3, r3, #76
 1960 0500 092B     		cmp	r3, #9
 1961 0502 33D8     		bhi	.L94
 1962 0504 01A2     		adr	r2, .L77
 1963 0506 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1964 050a 00BF     		.p2align 2
 1965              	.L77:
 1966 050c 43050000 		.word	.L76+1
 1967 0510 6D050000 		.word	.L94+1
 1968 0514 6D050000 		.word	.L94+1
 1969 0518 6D050000 		.word	.L94+1
 1970 051c 6D050000 		.word	.L94+1
 1971 0520 6D050000 		.word	.L94+1
 1972 0524 59050000 		.word	.L78+1
 1973 0528 35050000 		.word	.L79+1
 1974 052c 6D050000 		.word	.L94+1
 1975 0530 67050000 		.word	.L80+1
 1976              		.p2align 1
 1977              	.L79:
 470:.\main.c      ****                                 {
 471:.\main.c      ****                                     case 'S':
 472:.\main.c      ****                                         initTrackU();
 1978              		.loc 1 472 0
 1979 0534 FFF7FEFF 		bl	initTrackU
 473:.\main.c      ****                                          Timer_Deadzone_WriteCounter(10000);
 1980              		.loc 1 473 0
 1981 0538 42F21070 		movw	r0, #10000
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 45


 1982 053c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 474:.\main.c      ****                                         //do nothing
 475:.\main.c      ****                                     break;
 1983              		.loc 1 475 0
 1984 0540 15E0     		b	.L81
 1985              	.L76:
 476:.\main.c      ****                                     case 'L':
 477:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 478:.\main.c      ****                                         initTurnLeft();
 1986              		.loc 1 478 0
 1987 0542 FFF7FEFF 		bl	initTurnLeft
 479:.\main.c      ****                                         target_distance_quad -= 208;
 1988              		.loc 1 479 0
 1989 0546 314B     		ldr	r3, .L98+24
 1990 0548 1B88     		ldrh	r3, [r3]
 1991 054a 9BB2     		uxth	r3, r3
 1992 054c D03B     		subs	r3, r3, #208
 1993 054e 9BB2     		uxth	r3, r3
 1994 0550 9AB2     		uxth	r2, r3
 1995 0552 2E4B     		ldr	r3, .L98+24
 1996 0554 1A80     		strh	r2, [r3]	@ movhi
 480:.\main.c      ****                                     break;
 1997              		.loc 1 480 0
 1998 0556 0AE0     		b	.L81
 1999              	.L78:
 481:.\main.c      ****                                     case 'R':
 482:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 483:.\main.c      ****                                         initTurnRight();
 2000              		.loc 1 483 0
 2001 0558 FFF7FEFF 		bl	initTurnRight
 484:.\main.c      ****                                         target_distance_quad += 208 - 208;
 2002              		.loc 1 484 0
 2003 055c 2B4B     		ldr	r3, .L98+24
 2004 055e 1A88     		ldrh	r2, [r3]
 2005 0560 2A4B     		ldr	r3, .L98+24
 2006 0562 1A80     		strh	r2, [r3]	@ movhi
 485:.\main.c      ****                                         
 486:.\main.c      ****                                     break;
 2007              		.loc 1 486 0
 2008 0564 03E0     		b	.L81
 2009              	.L80:
 487:.\main.c      ****                                     case 'U':
 488:.\main.c      ****                                         // Direction not tracked any more
 489:.\main.c      ****                                         initTurnU();
 2010              		.loc 1 489 0
 2011 0566 FFF7FEFF 		bl	initTurnU
 490:.\main.c      ****                                     break;
 2012              		.loc 1 490 0
 2013 056a 00E0     		b	.L81
 2014              	.L94:
 491:.\main.c      ****                                     default:
 492:.\main.c      ****                                         //do nothing
 493:.\main.c      ****                                         break;
 2015              		.loc 1 493 0
 2016 056c 00BF     		nop
 2017              	.L81:
 494:.\main.c      ****                                 }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 46


 495:.\main.c      ****                                     
 496:.\main.c      ****                                     
 497:.\main.c      ****                                     reached_target = 0;
 2018              		.loc 1 497 0 discriminator 6
 2019 056e 2B4B     		ldr	r3, .L98+40
 2020 0570 0022     		movs	r2, #0
 2021 0572 1A70     		strb	r2, [r3]
 498:.\main.c      ****                                     overshot_target = 0;
 2022              		.loc 1 498 0 discriminator 6
 2023 0574 2A4B     		ldr	r3, .L98+44
 2024 0576 0022     		movs	r2, #0
 2025 0578 1A70     		strb	r2, [r3]
 499:.\main.c      ****                                     instructionCount += 2;
 2026              		.loc 1 499 0 discriminator 6
 2027 057a 214B     		ldr	r3, .L98+12
 2028 057c 1B88     		ldrh	r3, [r3]
 2029 057e 0233     		adds	r3, r3, #2
 2030 0580 9AB2     		uxth	r2, r3
 2031 0582 1F4B     		ldr	r3, .L98+12
 2032 0584 1A80     		strh	r2, [r3]	@ movhi
 2033              	.LBE7:
 447:.\main.c      ****                         
 2034              		.loc 1 447 0 discriminator 6
 2035 0586 04E0     		b	.L53
 2036              	.L72:
 500:.\main.c      ****                     }
 501:.\main.c      ****                     else
 502:.\main.c      ****                     {
 503:.\main.c      ****                         inittrackLineZ();
 2037              		.loc 1 503 0
 2038 0588 FFF7FEFF 		bl	inittrackLineZ
 504:.\main.c      ****                         actionDebounce = 0;
 2039              		.loc 1 504 0
 2040 058c 0023     		movs	r3, #0
 2041 058e FB87     		strh	r3, [r7, #62]	@ movhi
 2042              	.LBE3:
 505:.\main.c      ****                     }
 506:.\main.c      ****                 }
 507:.\main.c      ****                 break;
 2043              		.loc 1 507 0
 2044 0590 FFE7     		b	.L95
 2045              	.L53:
 2046              	.L95:
 2047 0592 00BF     		nop
 2048              	.L40:
 508:.\main.c      ****         }
 509:.\main.c      ****         
 510:.\main.c      ****         switch(movement_state)
 2049              		.loc 1 510 0
 2050 0594 244B     		ldr	r3, .L98+52
 2051 0596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2052 0598 072B     		cmp	r3, #7
 2053 059a 3FF664AD 		bhi	.L92
 2054 059e 01A2     		adr	r2, .L84
 2055 05a0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2056              		.p2align 2
 2057              	.L84:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 47


 2058 05a4 C5050000 		.word	.L83+1
 2059 05a8 CB050000 		.word	.L85+1
 2060 05ac D1050000 		.word	.L86+1
 2061 05b0 DD050000 		.word	.L87+1
 2062 05b4 E3050000 		.word	.L88+1
 2063 05b8 E9050000 		.word	.L89+1
 2064 05bc EF050000 		.word	.L90+1
 2065 05c0 D7050000 		.word	.L91+1
 2066              		.p2align 1
 2067              	.L83:
 511:.\main.c      ****         {
 512:.\main.c      ****             case DRIVE:
 513:.\main.c      ****                 driveForwards();
 2068              		.loc 1 513 0
 2069 05c4 FFF7FEFF 		bl	driveForwards
 514:.\main.c      ****             break;
 2070              		.loc 1 514 0
 2071 05c8 13E0     		b	.L82
 2072              	.L85:
 515:.\main.c      ****             case LTURN:
 516:.\main.c      ****                 turnLeft();
 2073              		.loc 1 516 0
 2074 05ca FFF7FEFF 		bl	turnLeft
 517:.\main.c      ****             break;
 2075              		.loc 1 517 0
 2076 05ce 10E0     		b	.L82
 2077              	.L86:
 518:.\main.c      ****             case RTURN:
 519:.\main.c      ****                 turnRight();
 2078              		.loc 1 519 0
 2079 05d0 FFF7FEFF 		bl	turnRight
 520:.\main.c      ****             break;
 2080              		.loc 1 520 0
 2081 05d4 0DE0     		b	.L82
 2082              	.L91:
 521:.\main.c      ****             case UTURN:
 522:.\main.c      ****                 turnU();
 2083              		.loc 1 522 0
 2084 05d6 FFF7FEFF 		bl	turnU
 523:.\main.c      ****             break;
 2085              		.loc 1 523 0
 2086 05da 0AE0     		b	.L82
 2087              	.L87:
 524:.\main.c      ****             case STOPPED:
 525:.\main.c      ****                 brakeMotor();
 2088              		.loc 1 525 0
 2089 05dc FFF7FEFF 		bl	brakeMotor
 526:.\main.c      ****             break;
 2090              		.loc 1 526 0
 2091 05e0 07E0     		b	.L82
 2092              	.L88:
 527:.\main.c      ****             case TRACKING:
 528:.\main.c      ****                 trackLine();
 2093              		.loc 1 528 0
 2094 05e2 FFF7FEFF 		bl	trackLine
 529:.\main.c      ****             break;
 2095              		.loc 1 529 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 48


 2096 05e6 04E0     		b	.L82
 2097              	.L89:
 530:.\main.c      ****             case TRACKING_U:
 531:.\main.c      ****                 trackLineU();
 2098              		.loc 1 531 0
 2099 05e8 FFF7FEFF 		bl	trackLineU
 532:.\main.c      ****             break;
 2100              		.loc 1 532 0
 2101 05ec 01E0     		b	.L82
 2102              	.L90:
 533:.\main.c      ****             case TRACKING_SOFT:
 534:.\main.c      ****                 trackLineZ();
 2103              		.loc 1 534 0
 2104 05ee FFF7FEFF 		bl	trackLineZ
 2105              	.L82:
 2106              	.LBE2:
 535:.\main.c      ****         }      
 536:.\main.c      ****     }   
 2107              		.loc 1 536 0
 2108 05f2 38E5     		b	.L92
 2109              	.L99:
 2110              		.align	2
 2111              	.L98:
 2112 05f4 00000000 		.word	sensorsDisabled
 2113 05f8 00000000 		.word	accum_dist
 2114 05fc 24000000 		.word	.LC2
 2115 0600 00000000 		.word	instructionCount
 2116 0604 00000000 		.word	instructionLength
 2117 0608 00000000 		.word	instructions
 2118 060c 00000000 		.word	target_distance_quad
 2119 0610 80000000 		.word	.LC6
 2120 0614 58000000 		.word	.LC4
 2121 0618 00000000 		.word	deadzone
 2122 061c 00000000 		.word	reached_target
 2123 0620 00000000 		.word	overshot_target
 2124 0624 9C000000 		.word	.LC7
 2125 0628 00000000 		.word	movement_state
 2126              		.cfi_endproc
 2127              	.LFE71:
 2128              		.size	main, .-main
 2129              		.section	.text.handle_rx_binary,"ax",%progbits
 2130              		.align	2
 2131              		.global	handle_rx_binary
 2132              		.thumb
 2133              		.thumb_func
 2134              		.type	handle_rx_binary, %function
 2135              	handle_rx_binary:
 2136              	.LFB72:
 537:.\main.c      **** }
 538:.\main.c      **** 
 539:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 540:.\main.c      **** 
 541:.\main.c      **** void handle_rx_binary()
 542:.\main.c      **** {
 2137              		.loc 1 542 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 49


 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141              		@ link register save eliminated.
 2142 0000 80B4     		push	{r7}
 2143              		.cfi_def_cfa_offset 4
 2144              		.cfi_offset 7, -4
 2145 0002 89B0     		sub	sp, sp, #36
 2146              		.cfi_def_cfa_offset 40
 2147 0004 00AF     		add	r7, sp, #0
 2148              		.cfi_def_cfa_register 7
 543:.\main.c      ****     if(flag_rx == 1)
 2149              		.loc 1 543 0
 2150 0006 524B     		ldr	r3, .L120
 2151 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2152 000a 012B     		cmp	r3, #1
 2153 000c 40F09A80 		bne	.L100
 2154              	.LBB8:
 544:.\main.c      ****     {    
 545:.\main.c      ****         flag_rx = 0;
 2155              		.loc 1 545 0
 2156 0010 4F4B     		ldr	r3, .L120
 2157 0012 0022     		movs	r2, #0
 2158 0014 1A70     		strb	r2, [r3]
 546:.\main.c      ****         
 547:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2159              		.loc 1 547 0
 2160 0016 4F4B     		ldr	r3, .L120+4
 2161 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2162 001a 1B02     		lsls	r3, r3, #8
 2163 001c 9AB2     		uxth	r2, r3
 2164 001e 4D4B     		ldr	r3, .L120+4
 2165 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2166 0022 9BB2     		uxth	r3, r3
 2167 0024 1343     		orrs	r3, r3, r2
 2168 0026 9BB2     		uxth	r3, r3
 2169 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 548:.\main.c      ****         char byte_packet[12];
 549:.\main.c      ****         char string_packet[12];
 550:.\main.c      ****         
 551:.\main.c      ****         switch(byteCount)
 2170              		.loc 1 551 0
 2171 002a 4B4B     		ldr	r3, .L120+8
 2172 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2173 002e 043B     		subs	r3, r3, #4
 2174 0030 1E2B     		cmp	r3, #30
 2175 0032 00F28780 		bhi	.L100
 2176 0036 01A2     		adr	r2, .L104
 2177 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2178              		.p2align 2
 2179              	.L104:
 2180 003c B9000000 		.word	.L103+1
 2181 0040 45010000 		.word	.L100+1
 2182 0044 CD000000 		.word	.L105+1
 2183 0048 45010000 		.word	.L100+1
 2184 004c D5000000 		.word	.L106+1
 2185 0050 45010000 		.word	.L100+1
 2186 0054 DD000000 		.word	.L107+1
 2187 0058 45010000 		.word	.L100+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 50


 2188 005c E5000000 		.word	.L108+1
 2189 0060 45010000 		.word	.L100+1
 2190 0064 ED000000 		.word	.L109+1
 2191 0068 45010000 		.word	.L100+1
 2192 006c F5000000 		.word	.L110+1
 2193 0070 45010000 		.word	.L100+1
 2194 0074 FD000000 		.word	.L111+1
 2195 0078 45010000 		.word	.L100+1
 2196 007c 05010000 		.word	.L112+1
 2197 0080 45010000 		.word	.L100+1
 2198 0084 0D010000 		.word	.L113+1
 2199 0088 45010000 		.word	.L100+1
 2200 008c 15010000 		.word	.L114+1
 2201 0090 45010000 		.word	.L100+1
 2202 0094 1D010000 		.word	.L115+1
 2203 0098 45010000 		.word	.L100+1
 2204 009c 25010000 		.word	.L116+1
 2205 00a0 45010000 		.word	.L100+1
 2206 00a4 2D010000 		.word	.L117+1
 2207 00a8 45010000 		.word	.L100+1
 2208 00ac 35010000 		.word	.L118+1
 2209 00b0 45010000 		.word	.L100+1
 2210 00b4 3D010000 		.word	.L119+1
 2211              		.p2align 1
 2212              	.L103:
 552:.\main.c      ****         {
 553:.\main.c      ****             case 4:
 554:.\main.c      ****                 buffer_state.rssi = packet[0];
 2213              		.loc 1 554 0
 2214 00b8 264B     		ldr	r3, .L120+4
 2215 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2216 00bc DAB2     		uxtb	r2, r3
 2217 00be 274B     		ldr	r3, .L120+12
 2218 00c0 1A70     		strb	r2, [r3]
 555:.\main.c      ****                 buffer_state.index = packet[1];
 2219              		.loc 1 555 0
 2220 00c2 244B     		ldr	r3, .L120+4
 2221 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2222 00c6 254B     		ldr	r3, .L120+12
 2223 00c8 5A70     		strb	r2, [r3, #1]
 556:.\main.c      ****             break;
 2224              		.loc 1 556 0
 2225 00ca 3BE0     		b	.L100
 2226              	.L105:
 557:.\main.c      ****             case 6:
 558:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2227              		.loc 1 558 0
 2228 00cc FA8B     		ldrh	r2, [r7, #30]
 2229 00ce 234B     		ldr	r3, .L120+12
 2230 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 559:.\main.c      ****             break;
 2231              		.loc 1 559 0
 2232 00d2 37E0     		b	.L100
 2233              	.L106:
 560:.\main.c      ****             case 8:
 561:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2234              		.loc 1 561 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 51


 2235 00d4 FA8B     		ldrh	r2, [r7, #30]
 2236 00d6 214B     		ldr	r3, .L120+12
 2237 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 562:.\main.c      ****             break;
 2238              		.loc 1 562 0
 2239 00da 33E0     		b	.L100
 2240              	.L107:
 563:.\main.c      ****             case 10:
 564:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2241              		.loc 1 564 0
 2242 00dc FA8B     		ldrh	r2, [r7, #30]
 2243 00de 1F4B     		ldr	r3, .L120+12
 2244 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 565:.\main.c      ****             break;
 2245              		.loc 1 565 0
 2246 00e2 2FE0     		b	.L100
 2247              	.L108:
 566:.\main.c      ****             case 12:
 567:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2248              		.loc 1 567 0
 2249 00e4 FA8B     		ldrh	r2, [r7, #30]
 2250 00e6 1D4B     		ldr	r3, .L120+12
 2251 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 568:.\main.c      ****             break;
 2252              		.loc 1 568 0
 2253 00ea 2BE0     		b	.L100
 2254              	.L109:
 569:.\main.c      ****             case 14:
 570:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2255              		.loc 1 570 0
 2256 00ec FA8B     		ldrh	r2, [r7, #30]
 2257 00ee 1B4B     		ldr	r3, .L120+12
 2258 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 571:.\main.c      ****             break;
 2259              		.loc 1 571 0
 2260 00f2 27E0     		b	.L100
 2261              	.L110:
 572:.\main.c      ****             case 16:
 573:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2262              		.loc 1 573 0
 2263 00f4 FA8B     		ldrh	r2, [r7, #30]
 2264 00f6 194B     		ldr	r3, .L120+12
 2265 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 574:.\main.c      ****             break;
 2266              		.loc 1 574 0
 2267 00fa 23E0     		b	.L100
 2268              	.L111:
 575:.\main.c      ****             case 18:
 576:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2269              		.loc 1 576 0
 2270 00fc FA8B     		ldrh	r2, [r7, #30]
 2271 00fe 174B     		ldr	r3, .L120+12
 2272 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 577:.\main.c      ****             break;
 2273              		.loc 1 577 0
 2274 0102 1FE0     		b	.L100
 2275              	.L112:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 52


 578:.\main.c      ****             case 20:
 579:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2276              		.loc 1 579 0
 2277 0104 FA8B     		ldrh	r2, [r7, #30]
 2278 0106 154B     		ldr	r3, .L120+12
 2279 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 580:.\main.c      ****             break;
 2280              		.loc 1 580 0
 2281 010a 1BE0     		b	.L100
 2282              	.L113:
 581:.\main.c      ****             case 22:
 582:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2283              		.loc 1 582 0
 2284 010c FA8B     		ldrh	r2, [r7, #30]
 2285 010e 134B     		ldr	r3, .L120+12
 2286 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 583:.\main.c      ****             break;
 2287              		.loc 1 583 0
 2288 0112 17E0     		b	.L100
 2289              	.L114:
 584:.\main.c      ****             case 24:
 585:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2290              		.loc 1 585 0
 2291 0114 FA8B     		ldrh	r2, [r7, #30]
 2292 0116 114B     		ldr	r3, .L120+12
 2293 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 586:.\main.c      ****             break;
 2294              		.loc 1 586 0
 2295 011a 13E0     		b	.L100
 2296              	.L115:
 587:.\main.c      ****             case 26:
 588:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2297              		.loc 1 588 0
 2298 011c FA8B     		ldrh	r2, [r7, #30]
 2299 011e 0F4B     		ldr	r3, .L120+12
 2300 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 589:.\main.c      ****             break;
 2301              		.loc 1 589 0
 2302 0122 0FE0     		b	.L100
 2303              	.L116:
 590:.\main.c      ****             case 28:
 591:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2304              		.loc 1 591 0
 2305 0124 FA8B     		ldrh	r2, [r7, #30]
 2306 0126 0D4B     		ldr	r3, .L120+12
 2307 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 592:.\main.c      ****             break;
 2308              		.loc 1 592 0
 2309 012a 0BE0     		b	.L100
 2310              	.L117:
 593:.\main.c      ****             case 30:
 594:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2311              		.loc 1 594 0
 2312 012c FA8B     		ldrh	r2, [r7, #30]
 2313 012e 0B4B     		ldr	r3, .L120+12
 2314 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 595:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 53


 2315              		.loc 1 595 0
 2316 0132 07E0     		b	.L100
 2317              	.L118:
 596:.\main.c      ****             case 32:
 597:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2318              		.loc 1 597 0
 2319 0134 FA8B     		ldrh	r2, [r7, #30]
 2320 0136 094B     		ldr	r3, .L120+12
 2321 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 598:.\main.c      ****             break;
 2322              		.loc 1 598 0
 2323 013a 03E0     		b	.L100
 2324              	.L119:
 599:.\main.c      ****             case 34:
 600:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2325              		.loc 1 600 0
 2326 013c FA8B     		ldrh	r2, [r7, #30]
 2327 013e 074B     		ldr	r3, .L120+12
 2328 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 601:.\main.c      ****             break;
 2329              		.loc 1 601 0
 2330 0142 00BF     		nop
 2331              	.L100:
 2332              	.LBE8:
 602:.\main.c      ****         }
 603:.\main.c      ****     }
 604:.\main.c      **** }
 2333              		.loc 1 604 0
 2334 0144 2437     		adds	r7, r7, #36
 2335              		.cfi_def_cfa_offset 4
 2336 0146 BD46     		mov	sp, r7
 2337              		.cfi_def_cfa_register 13
 2338              		@ sp needed
 2339 0148 5DF8047B 		ldr	r7, [sp], #4
 2340              		.cfi_restore 7
 2341              		.cfi_def_cfa_offset 0
 2342 014c 7047     		bx	lr
 2343              	.L121:
 2344 014e 00BF     		.align	2
 2345              	.L120:
 2346 0150 00000000 		.word	flag_rx
 2347 0154 00000000 		.word	packet
 2348 0158 00000000 		.word	byteCount
 2349 015c 00000000 		.word	buffer_state
 2350              		.cfi_endproc
 2351              	.LFE72:
 2352              		.size	handle_rx_binary, .-handle_rx_binary
 2353              		.section	.text.setLeftDir,"ax",%progbits
 2354              		.align	2
 2355              		.global	setLeftDir
 2356              		.thumb
 2357              		.thumb_func
 2358              		.type	setLeftDir, %function
 2359              	setLeftDir:
 2360              	.LFB73:
 605:.\main.c      **** 
 606:.\main.c      **** void setLeftDir(uint8 dir)
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 54


 607:.\main.c      **** {
 2361              		.loc 1 607 0
 2362              		.cfi_startproc
 2363              		@ args = 0, pretend = 0, frame = 8
 2364              		@ frame_needed = 1, uses_anonymous_args = 0
 2365 0000 80B5     		push	{r7, lr}
 2366              		.cfi_def_cfa_offset 8
 2367              		.cfi_offset 7, -8
 2368              		.cfi_offset 14, -4
 2369 0002 82B0     		sub	sp, sp, #8
 2370              		.cfi_def_cfa_offset 16
 2371 0004 00AF     		add	r7, sp, #0
 2372              		.cfi_def_cfa_register 7
 2373 0006 0346     		mov	r3, r0
 2374 0008 FB71     		strb	r3, [r7, #7]
 608:.\main.c      ****     M2_IN2_Write(dir);
 2375              		.loc 1 608 0
 2376 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2377 000c 1846     		mov	r0, r3
 2378 000e FFF7FEFF 		bl	M2_IN2_Write
 609:.\main.c      **** }
 2379              		.loc 1 609 0
 2380 0012 0837     		adds	r7, r7, #8
 2381              		.cfi_def_cfa_offset 8
 2382 0014 BD46     		mov	sp, r7
 2383              		.cfi_def_cfa_register 13
 2384              		@ sp needed
 2385 0016 80BD     		pop	{r7, pc}
 2386              		.cfi_endproc
 2387              	.LFE73:
 2388              		.size	setLeftDir, .-setLeftDir
 2389              		.section	.text.setRightDir,"ax",%progbits
 2390              		.align	2
 2391              		.global	setRightDir
 2392              		.thumb
 2393              		.thumb_func
 2394              		.type	setRightDir, %function
 2395              	setRightDir:
 2396              	.LFB74:
 610:.\main.c      **** 
 611:.\main.c      **** void setRightDir(uint8 dir)
 612:.\main.c      **** {
 2397              		.loc 1 612 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 8
 2400              		@ frame_needed = 1, uses_anonymous_args = 0
 2401 0000 80B5     		push	{r7, lr}
 2402              		.cfi_def_cfa_offset 8
 2403              		.cfi_offset 7, -8
 2404              		.cfi_offset 14, -4
 2405 0002 82B0     		sub	sp, sp, #8
 2406              		.cfi_def_cfa_offset 16
 2407 0004 00AF     		add	r7, sp, #0
 2408              		.cfi_def_cfa_register 7
 2409 0006 0346     		mov	r3, r0
 2410 0008 FB71     		strb	r3, [r7, #7]
 613:.\main.c      ****     M1_IN2_Write(dir);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 55


 2411              		.loc 1 613 0
 2412 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2413 000c 1846     		mov	r0, r3
 2414 000e FFF7FEFF 		bl	M1_IN2_Write
 614:.\main.c      **** }
 2415              		.loc 1 614 0
 2416 0012 0837     		adds	r7, r7, #8
 2417              		.cfi_def_cfa_offset 8
 2418 0014 BD46     		mov	sp, r7
 2419              		.cfi_def_cfa_register 13
 2420              		@ sp needed
 2421 0016 80BD     		pop	{r7, pc}
 2422              		.cfi_endproc
 2423              	.LFE74:
 2424              		.size	setRightDir, .-setRightDir
 2425              		.section	.rodata
 2426 00b7 00       		.align	2
 2427              	.LC8:
 2428 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2428      2025640D 
 2428      0A00
 2429              		.section	.text.reverseDirection,"ax",%progbits
 2430              		.align	2
 2431              		.global	reverseDirection
 2432              		.thumb
 2433              		.thumb_func
 2434              		.type	reverseDirection, %function
 2435              	reverseDirection:
 2436              	.LFB75:
 615:.\main.c      **** 
 616:.\main.c      **** void reverseDirection()
 617:.\main.c      **** {
 2437              		.loc 1 617 0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 16
 2440              		@ frame_needed = 1, uses_anonymous_args = 0
 2441 0000 80B5     		push	{r7, lr}
 2442              		.cfi_def_cfa_offset 8
 2443              		.cfi_offset 7, -8
 2444              		.cfi_offset 14, -4
 2445 0002 84B0     		sub	sp, sp, #16
 2446              		.cfi_def_cfa_offset 24
 2447 0004 00AF     		add	r7, sp, #0
 2448              		.cfi_def_cfa_register 7
 618:.\main.c      ****     direction = !direction;
 2449              		.loc 1 618 0
 2450 0006 114B     		ldr	r3, .L125
 2451 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2452 000a 002B     		cmp	r3, #0
 2453 000c 0CBF     		ite	eq
 2454 000e 0123     		moveq	r3, #1
 2455 0010 0023     		movne	r3, #0
 2456 0012 DBB2     		uxtb	r3, r3
 2457 0014 1A46     		mov	r2, r3
 2458 0016 0D4B     		ldr	r3, .L125
 2459 0018 1A70     		strb	r2, [r3]
 619:.\main.c      ****     setLeftDir(direction);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 56


 2460              		.loc 1 619 0
 2461 001a 0C4B     		ldr	r3, .L125
 2462 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2463 001e 1846     		mov	r0, r3
 2464 0020 FFF7FEFF 		bl	setLeftDir
 620:.\main.c      ****     setRightDir(direction);
 2465              		.loc 1 620 0
 2466 0024 094B     		ldr	r3, .L125
 2467 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 0028 1846     		mov	r0, r3
 2469 002a FFF7FEFF 		bl	setRightDir
 621:.\main.c      ****     char mes[16];
 622:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2470              		.loc 1 622 0
 2471 002e 074B     		ldr	r3, .L125
 2472 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2473 0032 1A46     		mov	r2, r3
 2474 0034 3B46     		mov	r3, r7
 2475 0036 1846     		mov	r0, r3
 2476 0038 0549     		ldr	r1, .L125+4
 2477 003a FFF7FEFF 		bl	sprintf
 623:.\main.c      ****     UART_PutString(mes);
 2478              		.loc 1 623 0
 2479 003e 3B46     		mov	r3, r7
 2480 0040 1846     		mov	r0, r3
 2481 0042 FFF7FEFF 		bl	UART_PutString
 624:.\main.c      **** }
 2482              		.loc 1 624 0
 2483 0046 1037     		adds	r7, r7, #16
 2484              		.cfi_def_cfa_offset 8
 2485 0048 BD46     		mov	sp, r7
 2486              		.cfi_def_cfa_register 13
 2487              		@ sp needed
 2488 004a 80BD     		pop	{r7, pc}
 2489              	.L126:
 2490              		.align	2
 2491              	.L125:
 2492 004c 00000000 		.word	direction
 2493 0050 B8000000 		.word	.LC8
 2494              		.cfi_endproc
 2495              	.LFE75:
 2496              		.size	reverseDirection, .-reverseDirection
 2497              		.global	__aeabi_dcmplt
 2498              		.global	__aeabi_ddiv
 2499              		.global	__aeabi_d2iz
 2500              		.section	.text.setSpeed,"ax",%progbits
 2501              		.align	2
 2502              		.global	setSpeed
 2503              		.thumb
 2504              		.thumb_func
 2505              		.type	setSpeed, %function
 2506              	setSpeed:
 2507              	.LFB76:
 625:.\main.c      **** 
 626:.\main.c      **** void setSpeed(double left, double right){
 2508              		.loc 1 626 0
 2509              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 57


 2510              		@ args = 0, pretend = 0, frame = 24
 2511              		@ frame_needed = 1, uses_anonymous_args = 0
 2512 0000 80B5     		push	{r7, lr}
 2513              		.cfi_def_cfa_offset 8
 2514              		.cfi_offset 7, -8
 2515              		.cfi_offset 14, -4
 2516 0002 86B0     		sub	sp, sp, #24
 2517              		.cfi_def_cfa_offset 32
 2518 0004 00AF     		add	r7, sp, #0
 2519              		.cfi_def_cfa_register 7
 2520 0006 C7E90201 		strd	r0, [r7, #8]
 2521 000a C7E90023 		strd	r2, [r7]
 627:.\main.c      ****     if(right < 0.0)
 2522              		.loc 1 627 0
 2523 000e D7E90001 		ldrd	r0, [r7]
 2524 0012 4FF00002 		mov	r2, #0
 2525 0016 4FF00003 		mov	r3, #0
 2526 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2527 001e 0346     		mov	r3, r0
 2528 0020 002B     		cmp	r3, #0
 2529 0022 10D0     		beq	.L136
 628:.\main.c      ****     {
 629:.\main.c      ****         //char mes[16];
 630:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 631:.\main.c      ****        // UART_PutString(mes);
 632:.\main.c      ****         setRightDir(!direction);
 2530              		.loc 1 632 0
 2531 0024 304B     		ldr	r3, .L138+8
 2532 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2533 0028 002B     		cmp	r3, #0
 2534 002a 0CBF     		ite	eq
 2535 002c 0123     		moveq	r3, #1
 2536 002e 0023     		movne	r3, #0
 2537 0030 DBB2     		uxtb	r3, r3
 2538 0032 1846     		mov	r0, r3
 2539 0034 FFF7FEFF 		bl	setRightDir
 633:.\main.c      ****         right = -right;
 2540              		.loc 1 633 0
 2541 0038 3B68     		ldr	r3, [r7]
 2542 003a 3B60     		str	r3, [r7]
 2543 003c 7B68     		ldr	r3, [r7, #4]
 2544 003e 83F00043 		eor	r3, r3, #-2147483648
 2545 0042 7B60     		str	r3, [r7, #4]
 2546 0044 04E0     		b	.L130
 2547              	.L136:
 634:.\main.c      ****     }
 635:.\main.c      ****     else setRightDir(direction);
 2548              		.loc 1 635 0
 2549 0046 284B     		ldr	r3, .L138+8
 2550 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2551 004a 1846     		mov	r0, r3
 2552 004c FFF7FEFF 		bl	setRightDir
 2553              	.L130:
 636:.\main.c      ****     
 637:.\main.c      ****     if(left < 0.0)
 2554              		.loc 1 637 0
 2555 0050 D7E90201 		ldrd	r0, [r7, #8]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 58


 2556 0054 4FF00002 		mov	r2, #0
 2557 0058 4FF00003 		mov	r3, #0
 2558 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2559 0060 0346     		mov	r3, r0
 2560 0062 002B     		cmp	r3, #0
 2561 0064 10D0     		beq	.L137
 638:.\main.c      ****     {
 639:.\main.c      ****        // char mes[16];
 640:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 641:.\main.c      ****         //UART_PutString(mes);
 642:.\main.c      ****         setLeftDir(!direction);
 2562              		.loc 1 642 0
 2563 0066 204B     		ldr	r3, .L138+8
 2564 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2565 006a 002B     		cmp	r3, #0
 2566 006c 0CBF     		ite	eq
 2567 006e 0123     		moveq	r3, #1
 2568 0070 0023     		movne	r3, #0
 2569 0072 DBB2     		uxtb	r3, r3
 2570 0074 1846     		mov	r0, r3
 2571 0076 FFF7FEFF 		bl	setLeftDir
 643:.\main.c      ****         left = -left;
 2572              		.loc 1 643 0
 2573 007a BB68     		ldr	r3, [r7, #8]
 2574 007c BB60     		str	r3, [r7, #8]
 2575 007e FB68     		ldr	r3, [r7, #12]
 2576 0080 83F00043 		eor	r3, r3, #-2147483648
 2577 0084 FB60     		str	r3, [r7, #12]
 2578 0086 04E0     		b	.L133
 2579              	.L137:
 644:.\main.c      ****     }
 645:.\main.c      ****     else setLeftDir(direction);
 2580              		.loc 1 645 0
 2581 0088 174B     		ldr	r3, .L138+8
 2582 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2583 008c 1846     		mov	r0, r3
 2584 008e FFF7FEFF 		bl	setLeftDir
 2585              	.L133:
 646:.\main.c      ****     
 647:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2586              		.loc 1 647 0
 2587 0092 D7E90201 		ldrd	r0, [r7, #8]
 2588 0096 12A3     		adr	r3, .L138
 2589 0098 D3E90023 		ldrd	r2, [r3]
 2590 009c FFF7FEFF 		bl	__aeabi_ddiv
 2591 00a0 0246     		mov	r2, r0
 2592 00a2 0B46     		mov	r3, r1
 2593 00a4 1046     		mov	r0, r2
 2594 00a6 1946     		mov	r1, r3
 2595 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2596 00ac 0346     		mov	r3, r0
 2597 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 648:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2598              		.loc 1 648 0
 2599 00b0 D7E90001 		ldrd	r0, [r7]
 2600 00b4 0AA3     		adr	r3, .L138
 2601 00b6 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 59


 2602 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2603 00be 0246     		mov	r2, r0
 2604 00c0 0B46     		mov	r3, r1
 2605 00c2 1046     		mov	r0, r2
 2606 00c4 1946     		mov	r1, r3
 2607 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2608 00ca 0346     		mov	r3, r0
 2609 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 649:.\main.c      ****     
 650:.\main.c      ****     leftSpeedLimit = countsRight;
 2610              		.loc 1 650 0
 2611 00ce 074A     		ldr	r2, .L138+12
 2612 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2613 00d2 1380     		strh	r3, [r2]	@ movhi
 651:.\main.c      ****     rightSpeedLimit = countsLeft;
 2614              		.loc 1 651 0
 2615 00d4 064A     		ldr	r2, .L138+16
 2616 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2617 00d8 1380     		strh	r3, [r2]	@ movhi
 652:.\main.c      **** }
 2618              		.loc 1 652 0
 2619 00da 1837     		adds	r7, r7, #24
 2620              		.cfi_def_cfa_offset 8
 2621 00dc BD46     		mov	sp, r7
 2622              		.cfi_def_cfa_register 13
 2623              		@ sp needed
 2624 00de 80BD     		pop	{r7, pc}
 2625              	.L139:
 2626              		.align	3
 2627              	.L138:
 2628 00e0 969526A5 		.word	-1524197994
 2629 00e4 A0DBEF3F 		.word	1072683936
 2630 00e8 00000000 		.word	direction
 2631 00ec 00000000 		.word	leftSpeedLimit
 2632 00f0 00000000 		.word	rightSpeedLimit
 2633              		.cfi_endproc
 2634              	.LFE76:
 2635              		.size	setSpeed, .-setSpeed
 2636 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2637              		.align	2
 2638              		.global	brakeLeft
 2639              		.thumb
 2640              		.thumb_func
 2641              		.type	brakeLeft, %function
 2642              	brakeLeft:
 2643              	.LFB77:
 653:.\main.c      **** 
 654:.\main.c      **** void brakeLeft()
 655:.\main.c      **** {
 2644              		.loc 1 655 0
 2645              		.cfi_startproc
 2646              		@ args = 0, pretend = 0, frame = 0
 2647              		@ frame_needed = 1, uses_anonymous_args = 0
 2648 0000 80B5     		push	{r7, lr}
 2649              		.cfi_def_cfa_offset 8
 2650              		.cfi_offset 7, -8
 2651              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 60


 2652 0002 00AF     		add	r7, sp, #0
 2653              		.cfi_def_cfa_register 7
 656:.\main.c      ****     PWM_1_WriteCompare(0);
 2654              		.loc 1 656 0
 2655 0004 0020     		movs	r0, #0
 2656 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 657:.\main.c      ****     left_duty_cycle = 0;
 2657              		.loc 1 657 0
 2658 000a 024B     		ldr	r3, .L141
 2659 000c 0022     		movs	r2, #0
 2660 000e 1A80     		strh	r2, [r3]	@ movhi
 658:.\main.c      **** }
 2661              		.loc 1 658 0
 2662 0010 80BD     		pop	{r7, pc}
 2663              	.L142:
 2664 0012 00BF     		.align	2
 2665              	.L141:
 2666 0014 00000000 		.word	left_duty_cycle
 2667              		.cfi_endproc
 2668              	.LFE77:
 2669              		.size	brakeLeft, .-brakeLeft
 2670              		.section	.text.brakeRight,"ax",%progbits
 2671              		.align	2
 2672              		.global	brakeRight
 2673              		.thumb
 2674              		.thumb_func
 2675              		.type	brakeRight, %function
 2676              	brakeRight:
 2677              	.LFB78:
 659:.\main.c      **** 
 660:.\main.c      **** void brakeRight()
 661:.\main.c      **** {
 2678              		.loc 1 661 0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 0
 2681              		@ frame_needed = 1, uses_anonymous_args = 0
 2682 0000 80B5     		push	{r7, lr}
 2683              		.cfi_def_cfa_offset 8
 2684              		.cfi_offset 7, -8
 2685              		.cfi_offset 14, -4
 2686 0002 00AF     		add	r7, sp, #0
 2687              		.cfi_def_cfa_register 7
 662:.\main.c      ****      PWM_2_WriteCompare(0);
 2688              		.loc 1 662 0
 2689 0004 0020     		movs	r0, #0
 2690 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 663:.\main.c      ****      right_duty_cycle = 0;
 2691              		.loc 1 663 0
 2692 000a 024B     		ldr	r3, .L144
 2693 000c 0022     		movs	r2, #0
 2694 000e 1A80     		strh	r2, [r3]	@ movhi
 664:.\main.c      **** }
 2695              		.loc 1 664 0
 2696 0010 80BD     		pop	{r7, pc}
 2697              	.L145:
 2698 0012 00BF     		.align	2
 2699              	.L144:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 61


 2700 0014 00000000 		.word	right_duty_cycle
 2701              		.cfi_endproc
 2702              	.LFE78:
 2703              		.size	brakeRight, .-brakeRight
 2704              		.section	.text.brakeMotor,"ax",%progbits
 2705              		.align	2
 2706              		.global	brakeMotor
 2707              		.thumb
 2708              		.thumb_func
 2709              		.type	brakeMotor, %function
 2710              	brakeMotor:
 2711              	.LFB79:
 665:.\main.c      **** 
 666:.\main.c      **** void brakeMotor(){
 2712              		.loc 1 666 0
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 1, uses_anonymous_args = 0
 2716 0000 80B5     		push	{r7, lr}
 2717              		.cfi_def_cfa_offset 8
 2718              		.cfi_offset 7, -8
 2719              		.cfi_offset 14, -4
 2720 0002 00AF     		add	r7, sp, #0
 2721              		.cfi_def_cfa_register 7
 667:.\main.c      ****     setSpeed(0, 0);
 2722              		.loc 1 667 0
 2723 0004 4FF00000 		mov	r0, #0
 2724 0008 4FF00001 		mov	r1, #0
 2725 000c 4FF00002 		mov	r2, #0
 2726 0010 4FF00003 		mov	r3, #0
 2727 0014 FFF7FEFF 		bl	setSpeed
 668:.\main.c      ****     brakeLeft();
 2728              		.loc 1 668 0
 2729 0018 FFF7FEFF 		bl	brakeLeft
 669:.\main.c      ****     brakeRight();
 2730              		.loc 1 669 0
 2731 001c FFF7FEFF 		bl	brakeRight
 670:.\main.c      **** }
 2732              		.loc 1 670 0
 2733 0020 80BD     		pop	{r7, pc}
 2734              		.cfi_endproc
 2735              	.LFE79:
 2736              		.size	brakeMotor, .-brakeMotor
 2737 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2738              		.align	2
 2739              		.global	driveForwards
 2740              		.thumb
 2741              		.thumb_func
 2742              		.type	driveForwards, %function
 2743              	driveForwards:
 2744              	.LFB80:
 671:.\main.c      **** 
 672:.\main.c      **** void driveForwards()
 673:.\main.c      **** {
 2745              		.loc 1 673 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 62


 2748              		@ frame_needed = 1, uses_anonymous_args = 0
 2749 0000 80B5     		push	{r7, lr}
 2750              		.cfi_def_cfa_offset 8
 2751              		.cfi_offset 7, -8
 2752              		.cfi_offset 14, -4
 2753 0002 00AF     		add	r7, sp, #0
 2754              		.cfi_def_cfa_register 7
 674:.\main.c      ****     setSpeed(speed, speed);
 2755              		.loc 1 674 0
 2756 0004 044B     		ldr	r3, .L148
 2757 0006 D3E90001 		ldrd	r0, [r3]
 2758 000a 034B     		ldr	r3, .L148
 2759 000c D3E90023 		ldrd	r2, [r3]
 2760 0010 FFF7FEFF 		bl	setSpeed
 675:.\main.c      **** }
 2761              		.loc 1 675 0
 2762 0014 80BD     		pop	{r7, pc}
 2763              	.L149:
 2764 0016 00BF     		.align	2
 2765              	.L148:
 2766 0018 00000000 		.word	speed
 2767              		.cfi_endproc
 2768              	.LFE80:
 2769              		.size	driveForwards, .-driveForwards
 2770              		.global	__aeabi_dadd
 2771              		.section	.text.turnRight,"ax",%progbits
 2772              		.align	2
 2773              		.global	turnRight
 2774              		.thumb
 2775              		.thumb_func
 2776              		.type	turnRight, %function
 2777              	turnRight:
 2778              	.LFB81:
 676:.\main.c      **** 
 677:.\main.c      **** void turnRight()
 678:.\main.c      **** {
 2779              		.loc 1 678 0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 0
 2782              		@ frame_needed = 1, uses_anonymous_args = 0
 2783 0000 80B5     		push	{r7, lr}
 2784              		.cfi_def_cfa_offset 8
 2785              		.cfi_offset 7, -8
 2786              		.cfi_offset 14, -4
 2787 0002 00AF     		add	r7, sp, #0
 2788              		.cfi_def_cfa_register 7
 679:.\main.c      ****     setSpeed(0,speed*2.0);
 2789              		.loc 1 679 0
 2790 0004 074B     		ldr	r3, .L151
 2791 0006 D3E90023 		ldrd	r2, [r3]
 2792 000a 1046     		mov	r0, r2
 2793 000c 1946     		mov	r1, r3
 2794 000e FFF7FEFF 		bl	__aeabi_dadd
 2795 0012 0246     		mov	r2, r0
 2796 0014 0B46     		mov	r3, r1
 2797 0016 4FF00000 		mov	r0, #0
 2798 001a 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 63


 2799 001e FFF7FEFF 		bl	setSpeed
 680:.\main.c      **** }
 2800              		.loc 1 680 0
 2801 0022 80BD     		pop	{r7, pc}
 2802              	.L152:
 2803              		.align	2
 2804              	.L151:
 2805 0024 00000000 		.word	speed
 2806              		.cfi_endproc
 2807              	.LFE81:
 2808              		.size	turnRight, .-turnRight
 2809              		.section	.text.turnLeft,"ax",%progbits
 2810              		.align	2
 2811              		.global	turnLeft
 2812              		.thumb
 2813              		.thumb_func
 2814              		.type	turnLeft, %function
 2815              	turnLeft:
 2816              	.LFB82:
 681:.\main.c      **** 
 682:.\main.c      **** void turnLeft()
 683:.\main.c      **** {
 2817              		.loc 1 683 0
 2818              		.cfi_startproc
 2819              		@ args = 0, pretend = 0, frame = 0
 2820              		@ frame_needed = 1, uses_anonymous_args = 0
 2821 0000 80B5     		push	{r7, lr}
 2822              		.cfi_def_cfa_offset 8
 2823              		.cfi_offset 7, -8
 2824              		.cfi_offset 14, -4
 2825 0002 00AF     		add	r7, sp, #0
 2826              		.cfi_def_cfa_register 7
 684:.\main.c      ****     setSpeed(speed*2.0,0);
 2827              		.loc 1 684 0
 2828 0004 084B     		ldr	r3, .L154
 2829 0006 D3E90023 		ldrd	r2, [r3]
 2830 000a 1046     		mov	r0, r2
 2831 000c 1946     		mov	r1, r3
 2832 000e FFF7FEFF 		bl	__aeabi_dadd
 2833 0012 0246     		mov	r2, r0
 2834 0014 0B46     		mov	r3, r1
 2835 0016 1046     		mov	r0, r2
 2836 0018 1946     		mov	r1, r3
 2837 001a 4FF00002 		mov	r2, #0
 2838 001e 4FF00003 		mov	r3, #0
 2839 0022 FFF7FEFF 		bl	setSpeed
 685:.\main.c      **** }
 2840              		.loc 1 685 0
 2841 0026 80BD     		pop	{r7, pc}
 2842              	.L155:
 2843              		.align	2
 2844              	.L154:
 2845 0028 00000000 		.word	speed
 2846              		.cfi_endproc
 2847              	.LFE82:
 2848              		.size	turnLeft, .-turnLeft
 2849              		.section	.text.turnU,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 64


 2850              		.align	2
 2851              		.global	turnU
 2852              		.thumb
 2853              		.thumb_func
 2854              		.type	turnU, %function
 2855              	turnU:
 2856              	.LFB83:
 686:.\main.c      **** 
 687:.\main.c      **** void turnU()
 688:.\main.c      **** {
 2857              		.loc 1 688 0
 2858              		.cfi_startproc
 2859              		@ args = 0, pretend = 0, frame = 0
 2860              		@ frame_needed = 1, uses_anonymous_args = 0
 2861 0000 B0B5     		push	{r4, r5, r7, lr}
 2862              		.cfi_def_cfa_offset 16
 2863              		.cfi_offset 4, -16
 2864              		.cfi_offset 5, -12
 2865              		.cfi_offset 7, -8
 2866              		.cfi_offset 14, -4
 2867 0002 00AF     		add	r7, sp, #0
 2868              		.cfi_def_cfa_register 7
 689:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 2869              		.loc 1 689 0
 2870 0004 0E4B     		ldr	r3, .L157
 2871 0006 D3E90023 		ldrd	r2, [r3]
 2872 000a 1446     		mov	r4, r2
 2873 000c 83F00045 		eor	r5, r3, #-2147483648
 2874 0010 2046     		mov	r0, r4
 2875 0012 2946     		mov	r1, r5
 2876 0014 2246     		mov	r2, r4
 2877 0016 2B46     		mov	r3, r5
 2878 0018 FFF7FEFF 		bl	__aeabi_dadd
 2879 001c 0246     		mov	r2, r0
 2880 001e 0B46     		mov	r3, r1
 2881 0020 1446     		mov	r4, r2
 2882 0022 1D46     		mov	r5, r3
 2883 0024 064B     		ldr	r3, .L157
 2884 0026 D3E90023 		ldrd	r2, [r3]
 2885 002a 1046     		mov	r0, r2
 2886 002c 1946     		mov	r1, r3
 2887 002e FFF7FEFF 		bl	__aeabi_dadd
 2888 0032 0246     		mov	r2, r0
 2889 0034 0B46     		mov	r3, r1
 2890 0036 2046     		mov	r0, r4
 2891 0038 2946     		mov	r1, r5
 2892 003a FFF7FEFF 		bl	setSpeed
 690:.\main.c      **** }
 2893              		.loc 1 690 0
 2894 003e B0BD     		pop	{r4, r5, r7, pc}
 2895              	.L158:
 2896              		.align	2
 2897              	.L157:
 2898 0040 00000000 		.word	speed
 2899              		.cfi_endproc
 2900              	.LFE83:
 2901              		.size	turnU, .-turnU
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 65


 2902              		.section	.text.initTurnLeft,"ax",%progbits
 2903              		.align	2
 2904              		.global	initTurnLeft
 2905              		.thumb
 2906              		.thumb_func
 2907              		.type	initTurnLeft, %function
 2908              	initTurnLeft:
 2909              	.LFB84:
 691:.\main.c      **** 
 692:.\main.c      **** void initTurnLeft(){
 2910              		.loc 1 692 0
 2911              		.cfi_startproc
 2912              		@ args = 0, pretend = 0, frame = 0
 2913              		@ frame_needed = 1, uses_anonymous_args = 0
 2914 0000 80B5     		push	{r7, lr}
 2915              		.cfi_def_cfa_offset 8
 2916              		.cfi_offset 7, -8
 2917              		.cfi_offset 14, -4
 2918 0002 00AF     		add	r7, sp, #0
 2919              		.cfi_def_cfa_register 7
 693:.\main.c      ****     Timer_2_Stop();
 2920              		.loc 1 693 0
 2921 0004 FFF7FEFF 		bl	Timer_2_Stop
 694:.\main.c      ****     prev_movement_state = movement_state;
 2922              		.loc 1 694 0
 2923 0008 084B     		ldr	r3, .L160
 2924 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2925 000c 084B     		ldr	r3, .L160+4
 2926 000e 1A70     		strb	r2, [r3]
 695:.\main.c      ****     movement_state = LTURN;
 2927              		.loc 1 695 0
 2928 0010 064B     		ldr	r3, .L160
 2929 0012 0122     		movs	r2, #1
 2930 0014 1A70     		strb	r2, [r3]
 696:.\main.c      ****     brakeLeft();
 2931              		.loc 1 696 0
 2932 0016 FFF7FEFF 		bl	brakeLeft
 697:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 2933              		.loc 1 697 0
 2934 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2935 001e 0346     		mov	r3, r0
 2936 0020 1A46     		mov	r2, r3
 2937 0022 044B     		ldr	r3, .L160+8
 2938 0024 1A80     		strh	r2, [r3]	@ movhi
 698:.\main.c      ****     Timer_2_Start();
 2939              		.loc 1 698 0
 2940 0026 FFF7FEFF 		bl	Timer_2_Start
 699:.\main.c      **** }
 2941              		.loc 1 699 0
 2942 002a 80BD     		pop	{r7, pc}
 2943              	.L161:
 2944              		.align	2
 2945              	.L160:
 2946 002c 00000000 		.word	movement_state
 2947 0030 00000000 		.word	prev_movement_state
 2948 0034 00000000 		.word	start_turn_count
 2949              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 66


 2950              	.LFE84:
 2951              		.size	initTurnLeft, .-initTurnLeft
 2952              		.section	.text.initTurnRight,"ax",%progbits
 2953              		.align	2
 2954              		.global	initTurnRight
 2955              		.thumb
 2956              		.thumb_func
 2957              		.type	initTurnRight, %function
 2958              	initTurnRight:
 2959              	.LFB85:
 700:.\main.c      **** 
 701:.\main.c      **** void initTurnRight(){
 2960              		.loc 1 701 0
 2961              		.cfi_startproc
 2962              		@ args = 0, pretend = 0, frame = 0
 2963              		@ frame_needed = 1, uses_anonymous_args = 0
 2964 0000 80B5     		push	{r7, lr}
 2965              		.cfi_def_cfa_offset 8
 2966              		.cfi_offset 7, -8
 2967              		.cfi_offset 14, -4
 2968 0002 00AF     		add	r7, sp, #0
 2969              		.cfi_def_cfa_register 7
 702:.\main.c      ****     Timer_2_Stop();
 2970              		.loc 1 702 0
 2971 0004 FFF7FEFF 		bl	Timer_2_Stop
 703:.\main.c      ****     prev_movement_state = movement_state;
 2972              		.loc 1 703 0
 2973 0008 084B     		ldr	r3, .L163
 2974 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2975 000c 084B     		ldr	r3, .L163+4
 2976 000e 1A70     		strb	r2, [r3]
 704:.\main.c      ****     movement_state = RTURN;
 2977              		.loc 1 704 0
 2978 0010 064B     		ldr	r3, .L163
 2979 0012 0222     		movs	r2, #2
 2980 0014 1A70     		strb	r2, [r3]
 705:.\main.c      ****     brakeRight();
 2981              		.loc 1 705 0
 2982 0016 FFF7FEFF 		bl	brakeRight
 706:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 2983              		.loc 1 706 0
 2984 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2985 001e 0346     		mov	r3, r0
 2986 0020 1A46     		mov	r2, r3
 2987 0022 044B     		ldr	r3, .L163+8
 2988 0024 1A80     		strh	r2, [r3]	@ movhi
 707:.\main.c      ****     Timer_2_Start();
 2989              		.loc 1 707 0
 2990 0026 FFF7FEFF 		bl	Timer_2_Start
 708:.\main.c      **** }
 2991              		.loc 1 708 0
 2992 002a 80BD     		pop	{r7, pc}
 2993              	.L164:
 2994              		.align	2
 2995              	.L163:
 2996 002c 00000000 		.word	movement_state
 2997 0030 00000000 		.word	prev_movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 67


 2998 0034 00000000 		.word	start_turn_count
 2999              		.cfi_endproc
 3000              	.LFE85:
 3001              		.size	initTurnRight, .-initTurnRight
 3002              		.section	.text.initTurnU,"ax",%progbits
 3003              		.align	2
 3004              		.global	initTurnU
 3005              		.thumb
 3006              		.thumb_func
 3007              		.type	initTurnU, %function
 3008              	initTurnU:
 3009              	.LFB86:
 709:.\main.c      **** 
 710:.\main.c      **** void initTurnU(){
 3010              		.loc 1 710 0
 3011              		.cfi_startproc
 3012              		@ args = 0, pretend = 0, frame = 0
 3013              		@ frame_needed = 1, uses_anonymous_args = 0
 3014 0000 80B5     		push	{r7, lr}
 3015              		.cfi_def_cfa_offset 8
 3016              		.cfi_offset 7, -8
 3017              		.cfi_offset 14, -4
 3018 0002 00AF     		add	r7, sp, #0
 3019              		.cfi_def_cfa_register 7
 711:.\main.c      ****     Timer_2_Stop();
 3020              		.loc 1 711 0
 3021 0004 FFF7FEFF 		bl	Timer_2_Stop
 712:.\main.c      ****     prev_movement_state = movement_state;
 3022              		.loc 1 712 0
 3023 0008 084B     		ldr	r3, .L166
 3024 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3025 000c 084B     		ldr	r3, .L166+4
 3026 000e 1A70     		strb	r2, [r3]
 713:.\main.c      ****     movement_state = UTURN;
 3027              		.loc 1 713 0
 3028 0010 064B     		ldr	r3, .L166
 3029 0012 0722     		movs	r2, #7
 3030 0014 1A70     		strb	r2, [r3]
 714:.\main.c      ****     brakeMotor();
 3031              		.loc 1 714 0
 3032 0016 FFF7FEFF 		bl	brakeMotor
 715:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3033              		.loc 1 715 0
 3034 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3035 001e 0346     		mov	r3, r0
 3036 0020 1A46     		mov	r2, r3
 3037 0022 044B     		ldr	r3, .L166+8
 3038 0024 1A80     		strh	r2, [r3]	@ movhi
 716:.\main.c      ****     Timer_2_Start();
 3039              		.loc 1 716 0
 3040 0026 FFF7FEFF 		bl	Timer_2_Start
 717:.\main.c      **** }
 3041              		.loc 1 717 0
 3042 002a 80BD     		pop	{r7, pc}
 3043              	.L167:
 3044              		.align	2
 3045              	.L166:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 68


 3046 002c 00000000 		.word	movement_state
 3047 0030 00000000 		.word	prev_movement_state
 3048 0034 00000000 		.word	start_turn_count
 3049              		.cfi_endproc
 3050              	.LFE86:
 3051              		.size	initTurnU, .-initTurnU
 3052              		.section	.text.initForward,"ax",%progbits
 3053              		.align	2
 3054              		.global	initForward
 3055              		.thumb
 3056              		.thumb_func
 3057              		.type	initForward, %function
 3058              	initForward:
 3059              	.LFB87:
 718:.\main.c      **** 
 719:.\main.c      **** void initForward(){
 3060              		.loc 1 719 0
 3061              		.cfi_startproc
 3062              		@ args = 0, pretend = 0, frame = 0
 3063              		@ frame_needed = 1, uses_anonymous_args = 0
 3064 0000 80B5     		push	{r7, lr}
 3065              		.cfi_def_cfa_offset 8
 3066              		.cfi_offset 7, -8
 3067              		.cfi_offset 14, -4
 3068 0002 00AF     		add	r7, sp, #0
 3069              		.cfi_def_cfa_register 7
 720:.\main.c      ****     brakeMotor();
 3070              		.loc 1 720 0
 3071 0004 FFF7FEFF 		bl	brakeMotor
 721:.\main.c      ****     movement_state = DRIVE;
 3072              		.loc 1 721 0
 3073 0008 014B     		ldr	r3, .L169
 3074 000a 0022     		movs	r2, #0
 3075 000c 1A70     		strb	r2, [r3]
 722:.\main.c      **** }
 3076              		.loc 1 722 0
 3077 000e 80BD     		pop	{r7, pc}
 3078              	.L170:
 3079              		.align	2
 3080              	.L169:
 3081 0010 00000000 		.word	movement_state
 3082              		.cfi_endproc
 3083              	.LFE87:
 3084              		.size	initForward, .-initForward
 3085              		.section	.text.initBrake,"ax",%progbits
 3086              		.align	2
 3087              		.global	initBrake
 3088              		.thumb
 3089              		.thumb_func
 3090              		.type	initBrake, %function
 3091              	initBrake:
 3092              	.LFB88:
 723:.\main.c      **** 
 724:.\main.c      **** void initBrake(){
 3093              		.loc 1 724 0
 3094              		.cfi_startproc
 3095              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 69


 3096              		@ frame_needed = 1, uses_anonymous_args = 0
 3097              		@ link register save eliminated.
 3098 0000 80B4     		push	{r7}
 3099              		.cfi_def_cfa_offset 4
 3100              		.cfi_offset 7, -4
 3101 0002 00AF     		add	r7, sp, #0
 3102              		.cfi_def_cfa_register 7
 725:.\main.c      ****     movement_state = STOPPED;
 3103              		.loc 1 725 0
 3104 0004 034B     		ldr	r3, .L172
 3105 0006 0322     		movs	r2, #3
 3106 0008 1A70     		strb	r2, [r3]
 726:.\main.c      **** }
 3107              		.loc 1 726 0
 3108 000a BD46     		mov	sp, r7
 3109              		.cfi_def_cfa_register 13
 3110              		@ sp needed
 3111 000c 5DF8047B 		ldr	r7, [sp], #4
 3112              		.cfi_restore 7
 3113              		.cfi_def_cfa_offset 0
 3114 0010 7047     		bx	lr
 3115              	.L173:
 3116 0012 00BF     		.align	2
 3117              	.L172:
 3118 0014 00000000 		.word	movement_state
 3119              		.cfi_endproc
 3120              	.LFE88:
 3121              		.size	initBrake, .-initBrake
 3122              		.section	.text.initTrack,"ax",%progbits
 3123              		.align	2
 3124              		.global	initTrack
 3125              		.thumb
 3126              		.thumb_func
 3127              		.type	initTrack, %function
 3128              	initTrack:
 3129              	.LFB89:
 727:.\main.c      **** 
 728:.\main.c      **** void initTrack()
 729:.\main.c      **** {
 3130              		.loc 1 729 0
 3131              		.cfi_startproc
 3132              		@ args = 0, pretend = 0, frame = 0
 3133              		@ frame_needed = 1, uses_anonymous_args = 0
 3134              		@ link register save eliminated.
 3135 0000 80B4     		push	{r7}
 3136              		.cfi_def_cfa_offset 4
 3137              		.cfi_offset 7, -4
 3138 0002 00AF     		add	r7, sp, #0
 3139              		.cfi_def_cfa_register 7
 730:.\main.c      ****     movement_state = TRACKING;
 3140              		.loc 1 730 0
 3141 0004 034B     		ldr	r3, .L175
 3142 0006 0422     		movs	r2, #4
 3143 0008 1A70     		strb	r2, [r3]
 731:.\main.c      **** }
 3144              		.loc 1 731 0
 3145 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 70


 3146              		.cfi_def_cfa_register 13
 3147              		@ sp needed
 3148 000c 5DF8047B 		ldr	r7, [sp], #4
 3149              		.cfi_restore 7
 3150              		.cfi_def_cfa_offset 0
 3151 0010 7047     		bx	lr
 3152              	.L176:
 3153 0012 00BF     		.align	2
 3154              	.L175:
 3155 0014 00000000 		.word	movement_state
 3156              		.cfi_endproc
 3157              	.LFE89:
 3158              		.size	initTrack, .-initTrack
 3159              		.section	.text.initTrackU,"ax",%progbits
 3160              		.align	2
 3161              		.global	initTrackU
 3162              		.thumb
 3163              		.thumb_func
 3164              		.type	initTrackU, %function
 3165              	initTrackU:
 3166              	.LFB90:
 732:.\main.c      **** 
 733:.\main.c      **** void initTrackU(){
 3167              		.loc 1 733 0
 3168              		.cfi_startproc
 3169              		@ args = 0, pretend = 0, frame = 0
 3170              		@ frame_needed = 1, uses_anonymous_args = 0
 3171              		@ link register save eliminated.
 3172 0000 80B4     		push	{r7}
 3173              		.cfi_def_cfa_offset 4
 3174              		.cfi_offset 7, -4
 3175 0002 00AF     		add	r7, sp, #0
 3176              		.cfi_def_cfa_register 7
 734:.\main.c      ****     movement_state = TRACKING_U;
 3177              		.loc 1 734 0
 3178 0004 034B     		ldr	r3, .L178
 3179 0006 0522     		movs	r2, #5
 3180 0008 1A70     		strb	r2, [r3]
 735:.\main.c      **** }
 3181              		.loc 1 735 0
 3182 000a BD46     		mov	sp, r7
 3183              		.cfi_def_cfa_register 13
 3184              		@ sp needed
 3185 000c 5DF8047B 		ldr	r7, [sp], #4
 3186              		.cfi_restore 7
 3187              		.cfi_def_cfa_offset 0
 3188 0010 7047     		bx	lr
 3189              	.L179:
 3190 0012 00BF     		.align	2
 3191              	.L178:
 3192 0014 00000000 		.word	movement_state
 3193              		.cfi_endproc
 3194              	.LFE90:
 3195              		.size	initTrackU, .-initTrackU
 3196              		.section	.text.inittrackLineZ,"ax",%progbits
 3197              		.align	2
 3198              		.global	inittrackLineZ
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 71


 3199              		.thumb
 3200              		.thumb_func
 3201              		.type	inittrackLineZ, %function
 3202              	inittrackLineZ:
 3203              	.LFB91:
 736:.\main.c      **** 
 737:.\main.c      **** void inittrackLineZ(){
 3204              		.loc 1 737 0
 3205              		.cfi_startproc
 3206              		@ args = 0, pretend = 0, frame = 0
 3207              		@ frame_needed = 1, uses_anonymous_args = 0
 3208              		@ link register save eliminated.
 3209 0000 80B4     		push	{r7}
 3210              		.cfi_def_cfa_offset 4
 3211              		.cfi_offset 7, -4
 3212 0002 00AF     		add	r7, sp, #0
 3213              		.cfi_def_cfa_register 7
 738:.\main.c      ****     movement_state = TRACKING_SOFT;
 3214              		.loc 1 738 0
 3215 0004 034B     		ldr	r3, .L181
 3216 0006 0622     		movs	r2, #6
 3217 0008 1A70     		strb	r2, [r3]
 739:.\main.c      **** }
 3218              		.loc 1 739 0
 3219 000a BD46     		mov	sp, r7
 3220              		.cfi_def_cfa_register 13
 3221              		@ sp needed
 3222 000c 5DF8047B 		ldr	r7, [sp], #4
 3223              		.cfi_restore 7
 3224              		.cfi_def_cfa_offset 0
 3225 0010 7047     		bx	lr
 3226              	.L182:
 3227 0012 00BF     		.align	2
 3228              	.L181:
 3229 0014 00000000 		.word	movement_state
 3230              		.cfi_endproc
 3231              	.LFE91:
 3232              		.size	inittrackLineZ, .-inittrackLineZ
 3233              		.section	.text.rxInt,"ax",%progbits
 3234              		.align	2
 3235              		.global	rxInt
 3236              		.thumb
 3237              		.thumb_func
 3238              		.type	rxInt, %function
 3239              	rxInt:
 3240              	.LFB92:
 740:.\main.c      **** 
 741:.\main.c      **** 
 742:.\main.c      **** 
 743:.\main.c      **** //Binary RF Data
 744:.\main.c      **** CY_ISR(rxInt){
 3241              		.loc 1 744 0
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 8
 3244              		@ frame_needed = 1, uses_anonymous_args = 0
 3245 0000 B0B5     		push	{r4, r5, r7, lr}
 3246              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 72


 3247              		.cfi_offset 4, -16
 3248              		.cfi_offset 5, -12
 3249              		.cfi_offset 7, -8
 3250              		.cfi_offset 14, -4
 3251 0002 82B0     		sub	sp, sp, #8
 3252              		.cfi_def_cfa_offset 24
 3253 0004 00AF     		add	r7, sp, #0
 3254              		.cfi_def_cfa_register 7
 745:.\main.c      ****     char rf_char = UART_GetChar();
 3255              		.loc 1 745 0
 3256 0006 FFF7FEFF 		bl	UART_GetChar
 3257 000a 0346     		mov	r3, r0
 3258 000c FB71     		strb	r3, [r7, #7]
 746:.\main.c      ****     if(rf_char == SOP){
 3259              		.loc 1 746 0
 3260 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3261 0010 AA2B     		cmp	r3, #170
 3262 0012 2BD1     		bne	.L184
 747:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 748:.\main.c      ****             if(byteCount == 34)
 3263              		.loc 1 748 0
 3264 0014 224B     		ldr	r3, .L188
 3265 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3266 0018 222B     		cmp	r3, #34
 3267 001a 20D1     		bne	.L185
 749:.\main.c      ****             {
 750:.\main.c      ****                 system_state = buffer_state;
 3268              		.loc 1 750 0
 3269 001c 214B     		ldr	r3, .L188+4
 3270 001e 224A     		ldr	r2, .L188+8
 3271 0020 1568     		ldr	r5, [r2]	@ unaligned
 3272 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3273 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3274 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3275 0028 1D60     		str	r5, [r3]	@ unaligned
 3276 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3277 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3278 002e D960     		str	r1, [r3, #12]	@ unaligned
 3279 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3280 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3281 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3282 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3283 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3284 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3285 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3286 003e D961     		str	r1, [r3, #28]	@ unaligned
 751:.\main.c      ****                 if(initial_pos_valid == 0)
 3287              		.loc 1 751 0
 3288 0040 1A4B     		ldr	r3, .L188+12
 3289 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3290 0044 002B     		cmp	r3, #0
 3291 0046 0AD1     		bne	.L185
 752:.\main.c      ****                 {
 753:.\main.c      ****                     LED_Write(~LED_Read());
 3292              		.loc 1 753 0
 3293 0048 FFF7FEFF 		bl	LED_Read
 3294 004c 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 73


 3295 004e DB43     		mvns	r3, r3
 3296 0050 DBB2     		uxtb	r3, r3
 3297 0052 1846     		mov	r0, r3
 3298 0054 FFF7FEFF 		bl	LED_Write
 754:.\main.c      ****                     initial_pos_valid = 1;
 3299              		.loc 1 754 0
 3300 0058 144B     		ldr	r3, .L188+12
 3301 005a 0122     		movs	r2, #1
 3302 005c 1A70     		strb	r2, [r3]
 3303              	.L185:
 755:.\main.c      ****                 }
 756:.\main.c      ****             }
 757:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3304              		.loc 1 757 0
 3305 005e 104B     		ldr	r3, .L188
 3306 0060 0222     		movs	r2, #2
 3307 0062 1A70     		strb	r2, [r3]
 758:.\main.c      ****             flag_rx = 0;
 3308              		.loc 1 758 0
 3309 0064 124B     		ldr	r3, .L188+16
 3310 0066 0022     		movs	r2, #0
 3311 0068 1A70     		strb	r2, [r3]
 3312 006a 16E0     		b	.L183
 3313              	.L184:
 759:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 760:.\main.c      ****         }
 761:.\main.c      ****         else
 762:.\main.c      ****         {
 763:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3314              		.loc 1 763 0
 3315 006c 0C4B     		ldr	r3, .L188
 3316 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3317 0070 03F00103 		and	r3, r3, #1
 3318 0074 0F49     		ldr	r1, .L188+20
 3319 0076 FA79     		ldrb	r2, [r7, #7]
 3320 0078 CA54     		strb	r2, [r1, r3]
 764:.\main.c      ****            
 765:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3321              		.loc 1 765 0
 3322 007a 094B     		ldr	r3, .L188
 3323 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3324 007e 03F00103 		and	r3, r3, #1
 3325 0082 DBB2     		uxtb	r3, r3
 3326 0084 002B     		cmp	r3, #0
 3327 0086 02D0     		beq	.L187
 766:.\main.c      ****             {
 767:.\main.c      ****                 flag_rx = 1;
 3328              		.loc 1 767 0
 3329 0088 094B     		ldr	r3, .L188+16
 3330 008a 0122     		movs	r2, #1
 3331 008c 1A70     		strb	r2, [r3]
 3332              	.L187:
 768:.\main.c      ****             }
 769:.\main.c      ****             byteCount = (byteCount + 1);
 3333              		.loc 1 769 0
 3334 008e 044B     		ldr	r3, .L188
 3335 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 74


 3336 0092 0133     		adds	r3, r3, #1
 3337 0094 DAB2     		uxtb	r2, r3
 3338 0096 024B     		ldr	r3, .L188
 3339 0098 1A70     		strb	r2, [r3]
 3340              	.L183:
 770:.\main.c      ****         }
 771:.\main.c      **** }
 3341              		.loc 1 771 0
 3342 009a 0837     		adds	r7, r7, #8
 3343              		.cfi_def_cfa_offset 16
 3344 009c BD46     		mov	sp, r7
 3345              		.cfi_def_cfa_register 13
 3346              		@ sp needed
 3347 009e B0BD     		pop	{r4, r5, r7, pc}
 3348              	.L189:
 3349              		.align	2
 3350              	.L188:
 3351 00a0 00000000 		.word	byteCount
 3352 00a4 00000000 		.word	system_state
 3353 00a8 00000000 		.word	buffer_state
 3354 00ac 00000000 		.word	initial_pos_valid
 3355 00b0 00000000 		.word	flag_rx
 3356 00b4 00000000 		.word	packet
 3357              		.cfi_endproc
 3358              	.LFE92:
 3359              		.size	rxInt, .-rxInt
 3360              		.global	__aeabi_i2f
 3361              		.global	__aeabi_fmul
 3362              		.global	__aeabi_f2iz
 3363              		.section	.rodata
 3364 00c2 0000     		.align	2
 3365              	.LC9:
 3366 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3366      65742071 
 3366      7561643A 
 3366      2025640D 
 3366      0A00
 3367 00d6 0000     		.align	2
 3368              	.LC10:
 3369 00d8 0D0A00   		.ascii	"\015\012\000"
 3370              		.section	.text.BT_rxInt,"ax",%progbits
 3371              		.align	2
 3372              		.global	BT_rxInt
 3373              		.thumb
 3374              		.thumb_func
 3375              		.type	BT_rxInt, %function
 3376              	BT_rxInt:
 3377              	.LFB93:
 772:.\main.c      **** 
 773:.\main.c      **** CY_ISR(BT_rxInt)
 774:.\main.c      **** {
 3378              		.loc 1 774 0
 3379              		.cfi_startproc
 3380              		@ args = 0, pretend = 0, frame = 24
 3381              		@ frame_needed = 1, uses_anonymous_args = 0
 3382 0000 80B5     		push	{r7, lr}
 3383              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 75


 3384              		.cfi_offset 7, -8
 3385              		.cfi_offset 14, -4
 3386 0002 86B0     		sub	sp, sp, #24
 3387              		.cfi_def_cfa_offset 32
 3388 0004 00AF     		add	r7, sp, #0
 3389              		.cfi_def_cfa_register 7
 775:.\main.c      ****     char rf_char = UART_GetChar();
 3390              		.loc 1 775 0
 3391 0006 FFF7FEFF 		bl	UART_GetChar
 3392 000a 0346     		mov	r3, r0
 3393 000c FB74     		strb	r3, [r7, #19]
 776:.\main.c      ****     switch(rf_char){
 3394              		.loc 1 776 0
 3395 000e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3396 0010 613B     		subs	r3, r3, #97
 3397 0012 192B     		cmp	r3, #25
 3398 0014 00F2D580 		bhi	.L190
 3399 0018 01A2     		adr	r2, .L193
 3400 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3401 001e 00BF     		.p2align 2
 3402              	.L193:
 3403 0020 89000000 		.word	.L192+1
 3404 0024 C3010000 		.word	.L190+1
 3405 0028 C3010000 		.word	.L190+1
 3406 002c AD000000 		.word	.L194+1
 3407 0030 C3010000 		.word	.L190+1
 3408 0034 B9000000 		.word	.L195+1
 3409 0038 C3010000 		.word	.L190+1
 3410 003c C3010000 		.word	.L190+1
 3411 0040 C3010000 		.word	.L190+1
 3412 0044 C3010000 		.word	.L190+1
 3413 0048 C3010000 		.word	.L190+1
 3414 004c C3010000 		.word	.L190+1
 3415 0050 C3010000 		.word	.L190+1
 3416 0054 C3010000 		.word	.L190+1
 3417 0058 C3010000 		.word	.L190+1
 3418 005c C3010000 		.word	.L190+1
 3419 0060 E9000000 		.word	.L196+1
 3420 0064 3F010000 		.word	.L197+1
 3421 0068 A1000000 		.word	.L198+1
 3422 006c C5000000 		.word	.L199+1
 3423 0070 D1000000 		.word	.L200+1
 3424 0074 C3010000 		.word	.L190+1
 3425 0078 95000000 		.word	.L201+1
 3426 007c 55010000 		.word	.L202+1
 3427 0080 C3010000 		.word	.L190+1
 3428 0084 DD000000 		.word	.L203+1
 3429              		.p2align 1
 3430              	.L192:
 3431              	.LBB9:
 777:.\main.c      ****     case 'a':
 778:.\main.c      ****         initTurnLeft();
 3432              		.loc 1 778 0
 3433 0088 FFF7FEFF 		bl	initTurnLeft
 779:.\main.c      ****         track_mode = NO_TRACK;
 3434              		.loc 1 779 0
 3435 008c 4E4B     		ldr	r3, .L209
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 76


 3436 008e 0022     		movs	r2, #0
 3437 0090 1A70     		strb	r2, [r3]
 780:.\main.c      ****         break;
 3438              		.loc 1 780 0
 3439 0092 96E0     		b	.L190
 3440              	.L201:
 781:.\main.c      ****     case 'w':
 782:.\main.c      ****         initForward();
 3441              		.loc 1 782 0
 3442 0094 FFF7FEFF 		bl	initForward
 783:.\main.c      ****         track_mode = NO_TRACK;
 3443              		.loc 1 783 0
 3444 0098 4B4B     		ldr	r3, .L209
 3445 009a 0022     		movs	r2, #0
 3446 009c 1A70     		strb	r2, [r3]
 784:.\main.c      ****         break;
 3447              		.loc 1 784 0
 3448 009e 90E0     		b	.L190
 3449              	.L198:
 785:.\main.c      ****     case 's': 
 786:.\main.c      ****         reverseDirection();
 3450              		.loc 1 786 0
 3451 00a0 FFF7FEFF 		bl	reverseDirection
 787:.\main.c      ****         track_mode = NO_TRACK;
 3452              		.loc 1 787 0
 3453 00a4 484B     		ldr	r3, .L209
 3454 00a6 0022     		movs	r2, #0
 3455 00a8 1A70     		strb	r2, [r3]
 788:.\main.c      ****         break;
 3456              		.loc 1 788 0
 3457 00aa 8AE0     		b	.L190
 3458              	.L194:
 789:.\main.c      ****     case 'd':
 790:.\main.c      ****         initTurnRight();
 3459              		.loc 1 790 0
 3460 00ac FFF7FEFF 		bl	initTurnRight
 791:.\main.c      ****         track_mode = NO_TRACK;
 3461              		.loc 1 791 0
 3462 00b0 454B     		ldr	r3, .L209
 3463 00b2 0022     		movs	r2, #0
 3464 00b4 1A70     		strb	r2, [r3]
 792:.\main.c      ****         break;
 3465              		.loc 1 792 0
 3466 00b6 84E0     		b	.L190
 3467              	.L195:
 793:.\main.c      ****     case 'f':
 794:.\main.c      ****         initBrake();
 3468              		.loc 1 794 0
 3469 00b8 FFF7FEFF 		bl	initBrake
 795:.\main.c      ****         track_mode = NO_TRACK;
 3470              		.loc 1 795 0
 3471 00bc 424B     		ldr	r3, .L209
 3472 00be 0022     		movs	r2, #0
 3473 00c0 1A70     		strb	r2, [r3]
 796:.\main.c      ****         break;
 3474              		.loc 1 796 0
 3475 00c2 7EE0     		b	.L190
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 77


 3476              	.L199:
 797:.\main.c      ****     case('t'):
 798:.\main.c      ****         track_mode = CURVE_TRACK;
 3477              		.loc 1 798 0
 3478 00c4 404B     		ldr	r3, .L209
 3479 00c6 0122     		movs	r2, #1
 3480 00c8 1A70     		strb	r2, [r3]
 799:.\main.c      ****         initTrack();
 3481              		.loc 1 799 0
 3482 00ca FFF7FEFF 		bl	initTrack
 800:.\main.c      ****         break;
 3483              		.loc 1 800 0
 3484 00ce 78E0     		b	.L190
 3485              	.L200:
 801:.\main.c      ****     case('u'):
 802:.\main.c      ****         initTrackU();
 3486              		.loc 1 802 0
 3487 00d0 FFF7FEFF 		bl	initTrackU
 803:.\main.c      ****         track_mode = U_TRACK;
 3488              		.loc 1 803 0
 3489 00d4 3C4B     		ldr	r3, .L209
 3490 00d6 0222     		movs	r2, #2
 3491 00d8 1A70     		strb	r2, [r3]
 804:.\main.c      ****         break;
 3492              		.loc 1 804 0
 3493 00da 72E0     		b	.L190
 3494              	.L203:
 805:.\main.c      ****     case('z'):
 806:.\main.c      ****         track_mode = SQUARE_TRACK;
 3495              		.loc 1 806 0
 3496 00dc 3A4B     		ldr	r3, .L209
 3497 00de 0322     		movs	r2, #3
 3498 00e0 1A70     		strb	r2, [r3]
 807:.\main.c      ****         inittrackLineZ();
 3499              		.loc 1 807 0
 3500 00e2 FFF7FEFF 		bl	inittrackLineZ
 808:.\main.c      ****         break;
 3501              		.loc 1 808 0
 3502 00e6 6CE0     		b	.L190
 3503              	.L196:
 809:.\main.c      ****     case('q'):
 810:.\main.c      ****         track_mode = QUAD_STOP;
 3504              		.loc 1 810 0
 3505 00e8 374B     		ldr	r3, .L209
 3506 00ea 0422     		movs	r2, #4
 3507 00ec 1A70     		strb	r2, [r3]
 811:.\main.c      ****         accum_dist = 0;
 3508              		.loc 1 811 0
 3509 00ee 374B     		ldr	r3, .L209+4
 3510 00f0 0022     		movs	r2, #0
 3511 00f2 1A80     		strh	r2, [r3]	@ movhi
 812:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3512              		.loc 1 812 0
 3513 00f4 364B     		ldr	r3, .L209+8
 3514 00f6 1B88     		ldrh	r3, [r3]
 3515 00f8 1BB2     		sxth	r3, r3
 3516 00fa 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 78


 3517 00fc FFF7FEFF 		bl	__aeabi_i2f
 3518 0100 0246     		mov	r2, r0
 3519 0102 344B     		ldr	r3, .L209+12
 3520 0104 1B68     		ldr	r3, [r3]	@ float
 3521 0106 1046     		mov	r0, r2
 3522 0108 1946     		mov	r1, r3
 3523 010a FFF7FEFF 		bl	__aeabi_fmul
 3524 010e 0346     		mov	r3, r0
 3525 0110 1846     		mov	r0, r3
 3526 0112 FFF7FEFF 		bl	__aeabi_f2iz
 3527 0116 0346     		mov	r3, r0
 3528 0118 9AB2     		uxth	r2, r3
 3529 011a 2F4B     		ldr	r3, .L209+16
 3530 011c 1A80     		strh	r2, [r3]	@ movhi
 813:.\main.c      ****         char mes[16];
 814:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3531              		.loc 1 814 0
 3532 011e 2E4B     		ldr	r3, .L209+16
 3533 0120 1B88     		ldrh	r3, [r3]
 3534 0122 1BB2     		sxth	r3, r3
 3535 0124 3A46     		mov	r2, r7
 3536 0126 1046     		mov	r0, r2
 3537 0128 2C49     		ldr	r1, .L209+20
 3538 012a 1A46     		mov	r2, r3
 3539 012c FFF7FEFF 		bl	sprintf
 815:.\main.c      ****         UART_PutString(mes);
 3540              		.loc 1 815 0
 3541 0130 3B46     		mov	r3, r7
 3542 0132 1846     		mov	r0, r3
 3543 0134 FFF7FEFF 		bl	UART_PutString
 816:.\main.c      ****         initForward();
 3544              		.loc 1 816 0
 3545 0138 FFF7FEFF 		bl	initForward
 817:.\main.c      ****         break;
 3546              		.loc 1 817 0
 3547 013c 41E0     		b	.L190
 3548              	.L197:
 818:.\main.c      ****     case ('r'):
 819:.\main.c      ****         track_mode = RF_STOP;
 3549              		.loc 1 819 0
 3550 013e 224B     		ldr	r3, .L209
 3551 0140 0522     		movs	r2, #5
 3552 0142 1A70     		strb	r2, [r3]
 820:.\main.c      ****         changeToRF();
 3553              		.loc 1 820 0
 3554 0144 FFF7FEFF 		bl	changeToRF
 821:.\main.c      ****         // Make initial position
 822:.\main.c      ****         initial_pos_valid = 0;
 3555              		.loc 1 822 0
 3556 0148 254B     		ldr	r3, .L209+24
 3557 014a 0022     		movs	r2, #0
 3558 014c 1A70     		strb	r2, [r3]
 823:.\main.c      ****         initBrake();
 3559              		.loc 1 823 0
 3560 014e FFF7FEFF 		bl	initBrake
 824:.\main.c      ****         break;
 3561              		.loc 1 824 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 79


 3562 0152 36E0     		b	.L190
 3563              	.L202:
 825:.\main.c      ****     case ('x'):
 826:.\main.c      ****         track_mode = DEST_TEST;
 3564              		.loc 1 826 0
 3565 0154 1C4B     		ldr	r3, .L209
 3566 0156 0622     		movs	r2, #6
 3567 0158 1A70     		strb	r2, [r3]
 827:.\main.c      ****         tracked_direction = robot_direction;
 3568              		.loc 1 827 0
 3569 015a 224B     		ldr	r3, .L209+28
 3570 015c 1B68     		ldr	r3, [r3]
 3571 015e 224A     		ldr	r2, .L209+32
 3572 0160 1360     		str	r3, [r2]
 828:.\main.c      ****         //instructionLength = generateDirections();
 829:.\main.c      ****         instructionLength = generateEntireMapDirections();
 3573              		.loc 1 829 0
 3574 0162 FFF7FEFF 		bl	generateEntireMapDirections
 3575 0166 0346     		mov	r3, r0
 3576 0168 9AB2     		uxth	r2, r3
 3577 016a 204B     		ldr	r3, .L209+36
 3578 016c 1A80     		strh	r2, [r3]	@ movhi
 830:.\main.c      ****         //char message[128];
 831:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 832:.\main.c      ****         int i = 0;
 3579              		.loc 1 832 0
 3580 016e 0023     		movs	r3, #0
 3581 0170 7B61     		str	r3, [r7, #20]
 833:.\main.c      ****         for(i = 0;i < instructionLength; i++)
 3582              		.loc 1 833 0
 3583 0172 0023     		movs	r3, #0
 3584 0174 7B61     		str	r3, [r7, #20]
 3585 0176 18E0     		b	.L205
 3586              	.L208:
 834:.\main.c      ****         {
 835:.\main.c      ****             if(i%2 == 0)
 3587              		.loc 1 835 0
 3588 0178 7B69     		ldr	r3, [r7, #20]
 3589 017a 03F00103 		and	r3, r3, #1
 3590 017e 002B     		cmp	r3, #0
 3591 0180 07D1     		bne	.L206
 836:.\main.c      ****             {
 837:.\main.c      ****                 UART_PutChar(instructions[i]);
 3592              		.loc 1 837 0
 3593 0182 1B4A     		ldr	r2, .L209+40
 3594 0184 7B69     		ldr	r3, [r7, #20]
 3595 0186 1344     		add	r3, r3, r2
 3596 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3597 018a 1846     		mov	r0, r3
 3598 018c FFF7FEFF 		bl	UART_PutChar
 3599 0190 08E0     		b	.L207
 3600              	.L206:
 838:.\main.c      ****             }
 839:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 3601              		.loc 1 839 0
 3602 0192 174A     		ldr	r2, .L209+40
 3603 0194 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 80


 3604 0196 1344     		add	r3, r3, r2
 3605 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3606 019a 3033     		adds	r3, r3, #48
 3607 019c DBB2     		uxtb	r3, r3
 3608 019e 1846     		mov	r0, r3
 3609 01a0 FFF7FEFF 		bl	UART_PutChar
 3610              	.L207:
 833:.\main.c      ****         {
 3611              		.loc 1 833 0 discriminator 2
 3612 01a4 7B69     		ldr	r3, [r7, #20]
 3613 01a6 0133     		adds	r3, r3, #1
 3614 01a8 7B61     		str	r3, [r7, #20]
 3615              	.L205:
 833:.\main.c      ****         {
 3616              		.loc 1 833 0 is_stmt 0 discriminator 1
 3617 01aa 104B     		ldr	r3, .L209+36
 3618 01ac 1B88     		ldrh	r3, [r3]
 3619 01ae 1A46     		mov	r2, r3
 3620 01b0 7B69     		ldr	r3, [r7, #20]
 3621 01b2 9A42     		cmp	r2, r3
 3622 01b4 E0DC     		bgt	.L208
 840:.\main.c      **** 
 841:.\main.c      ****         }
 842:.\main.c      ****         
 843:.\main.c      ****         UART_PutString("\r\n");
 3623              		.loc 1 843 0 is_stmt 1
 3624 01b6 0F48     		ldr	r0, .L209+44
 3625 01b8 FFF7FEFF 		bl	UART_PutString
 844:.\main.c      **** 
 845:.\main.c      ****         inittrackLineZ();
 3626              		.loc 1 845 0
 3627 01bc FFF7FEFF 		bl	inittrackLineZ
 846:.\main.c      ****         break;
 3628              		.loc 1 846 0
 3629 01c0 00BF     		nop
 3630              	.L190:
 3631              	.LBE9:
 847:.\main.c      ****     }
 848:.\main.c      **** }
 3632              		.loc 1 848 0
 3633 01c2 1837     		adds	r7, r7, #24
 3634              		.cfi_def_cfa_offset 8
 3635 01c4 BD46     		mov	sp, r7
 3636              		.cfi_def_cfa_register 13
 3637              		@ sp needed
 3638 01c6 80BD     		pop	{r7, pc}
 3639              	.L210:
 3640              		.align	2
 3641              	.L209:
 3642 01c8 00000000 		.word	track_mode
 3643 01cc 00000000 		.word	accum_dist
 3644 01d0 00000000 		.word	target_distance_cm
 3645 01d4 00000000 		.word	quad_per_cm
 3646 01d8 00000000 		.word	target_distance_quad
 3647 01dc C4000000 		.word	.LC9
 3648 01e0 00000000 		.word	initial_pos_valid
 3649 01e4 00000000 		.word	robot_direction
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 81


 3650 01e8 00000000 		.word	tracked_direction
 3651 01ec 00000000 		.word	instructionLength
 3652 01f0 00000000 		.word	instructions
 3653 01f4 D8000000 		.word	.LC10
 3654              		.cfi_endproc
 3655              	.LFE93:
 3656              		.size	BT_rxInt, .-BT_rxInt
 3657              		.section	.text.changeToRF,"ax",%progbits
 3658              		.align	2
 3659              		.global	changeToRF
 3660              		.thumb
 3661              		.thumb_func
 3662              		.type	changeToRF, %function
 3663              	changeToRF:
 3664              	.LFB94:
 849:.\main.c      **** 
 850:.\main.c      **** 
 851:.\main.c      **** void changeToRF()
 852:.\main.c      **** {
 3665              		.loc 1 852 0
 3666              		.cfi_startproc
 3667              		@ args = 0, pretend = 0, frame = 0
 3668              		@ frame_needed = 1, uses_anonymous_args = 0
 3669 0000 80B5     		push	{r7, lr}
 3670              		.cfi_def_cfa_offset 8
 3671              		.cfi_offset 7, -8
 3672              		.cfi_offset 14, -4
 3673 0002 00AF     		add	r7, sp, #0
 3674              		.cfi_def_cfa_register 7
 853:.\main.c      ****         //disable BT
 854:.\main.c      ****         BT_ENABLED = 0;
 3675              		.loc 1 854 0
 3676 0004 0B4B     		ldr	r3, .L212
 3677 0006 0022     		movs	r2, #0
 3678 0008 1A70     		strb	r2, [r3]
 855:.\main.c      ****         isrRF_RX_Stop();
 3679              		.loc 1 855 0
 3680 000a FFF7FEFF 		bl	isrRF_RX_Stop
 856:.\main.c      ****         UART_Stop();
 3681              		.loc 1 856 0
 3682 000e FFF7FEFF 		bl	UART_Stop
 857:.\main.c      ****         
 858:.\main.c      ****         //enable RF
 859:.\main.c      ****         BIN_ENABLED = 1;
 3683              		.loc 1 859 0
 3684 0012 094B     		ldr	r3, .L212+4
 3685 0014 0122     		movs	r2, #1
 3686 0016 1A70     		strb	r2, [r3]
 860:.\main.c      ****         UART_clk_SetDividerValue(130);
 3687              		.loc 1 860 0
 3688 0018 8120     		movs	r0, #129
 3689 001a 0121     		movs	r1, #1
 3690 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 861:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 3691              		.loc 1 861 0
 3692 0020 0648     		ldr	r0, .L212+8
 3693 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 82


 862:.\main.c      ****         UART_Start();
 3694              		.loc 1 862 0
 3695 0026 FFF7FEFF 		bl	UART_Start
 863:.\main.c      ****         RF_BT_SELECT_Write(0);
 3696              		.loc 1 863 0
 3697 002a 0020     		movs	r0, #0
 3698 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 864:.\main.c      **** }
 3699              		.loc 1 864 0
 3700 0030 80BD     		pop	{r7, pc}
 3701              	.L213:
 3702 0032 00BF     		.align	2
 3703              	.L212:
 3704 0034 00000000 		.word	BT_ENABLED
 3705 0038 00000000 		.word	BIN_ENABLED
 3706 003c 00000000 		.word	rxInt
 3707              		.cfi_endproc
 3708              	.LFE94:
 3709              		.size	changeToRF, .-changeToRF
 3710              		.section	.text.changeToBT,"ax",%progbits
 3711              		.align	2
 3712              		.global	changeToBT
 3713              		.thumb
 3714              		.thumb_func
 3715              		.type	changeToBT, %function
 3716              	changeToBT:
 3717              	.LFB95:
 865:.\main.c      **** 
 866:.\main.c      **** void changeToBT()
 867:.\main.c      **** {
 3718              		.loc 1 867 0
 3719              		.cfi_startproc
 3720              		@ args = 0, pretend = 0, frame = 0
 3721              		@ frame_needed = 1, uses_anonymous_args = 0
 3722 0000 80B5     		push	{r7, lr}
 3723              		.cfi_def_cfa_offset 8
 3724              		.cfi_offset 7, -8
 3725              		.cfi_offset 14, -4
 3726 0002 00AF     		add	r7, sp, #0
 3727              		.cfi_def_cfa_register 7
 868:.\main.c      ****         //disable RF
 869:.\main.c      ****         BIN_ENABLED = 0;
 3728              		.loc 1 869 0
 3729 0004 0B4B     		ldr	r3, .L215
 3730 0006 0022     		movs	r2, #0
 3731 0008 1A70     		strb	r2, [r3]
 870:.\main.c      ****         isrRF_RX_Stop();
 3732              		.loc 1 870 0
 3733 000a FFF7FEFF 		bl	isrRF_RX_Stop
 871:.\main.c      ****         UART_Stop();
 3734              		.loc 1 871 0
 3735 000e FFF7FEFF 		bl	UART_Stop
 872:.\main.c      ****         
 873:.\main.c      ****         //enable BT
 874:.\main.c      ****         BT_ENABLED = 1;
 3736              		.loc 1 874 0
 3737 0012 094B     		ldr	r3, .L215+4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 83


 3738 0014 0122     		movs	r2, #1
 3739 0016 1A70     		strb	r2, [r3]
 875:.\main.c      ****         UART_clk_SetDividerValue(781);
 3740              		.loc 1 875 0
 3741 0018 4FF44370 		mov	r0, #780
 3742 001c 0121     		movs	r1, #1
 3743 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 876:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3744              		.loc 1 876 0
 3745 0022 0648     		ldr	r0, .L215+8
 3746 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 877:.\main.c      ****         UART_Start();
 3747              		.loc 1 877 0
 3748 0028 FFF7FEFF 		bl	UART_Start
 878:.\main.c      ****         RF_BT_SELECT_Write(1);
 3749              		.loc 1 878 0
 3750 002c 0120     		movs	r0, #1
 3751 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 879:.\main.c      **** }
 3752              		.loc 1 879 0
 3753 0032 80BD     		pop	{r7, pc}
 3754              	.L216:
 3755              		.align	2
 3756              	.L215:
 3757 0034 00000000 		.word	BIN_ENABLED
 3758 0038 00000000 		.word	BT_ENABLED
 3759 003c 00000000 		.word	BT_rxInt
 3760              		.cfi_endproc
 3761              	.LFE95:
 3762              		.size	changeToBT, .-changeToBT
 3763              		.section	.text.Quad_Dec_response,"ax",%progbits
 3764              		.align	2
 3765              		.global	Quad_Dec_response
 3766              		.thumb
 3767              		.thumb_func
 3768              		.type	Quad_Dec_response, %function
 3769              	Quad_Dec_response:
 3770              	.LFB96:
 880:.\main.c      **** 
 881:.\main.c      **** 
 882:.\main.c      **** void Quad_Dec_response()
 883:.\main.c      **** {
 3771              		.loc 1 883 0
 3772              		.cfi_startproc
 3773              		@ args = 0, pretend = 0, frame = 32
 3774              		@ frame_needed = 1, uses_anonymous_args = 0
 3775 0000 B0B5     		push	{r4, r5, r7, lr}
 3776              		.cfi_def_cfa_offset 16
 3777              		.cfi_offset 4, -16
 3778              		.cfi_offset 5, -12
 3779              		.cfi_offset 7, -8
 3780              		.cfi_offset 14, -4
 3781 0002 88B0     		sub	sp, sp, #32
 3782              		.cfi_def_cfa_offset 48
 3783 0004 00AF     		add	r7, sp, #0
 3784              		.cfi_def_cfa_register 7
 884:.\main.c      ****     //Check if the flag has been set
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 84


 885:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 3785              		.loc 1 885 0
 3786 0006 824B     		ldr	r3, .L225
 3787 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3788 000a 002B     		cmp	r3, #0
 3789 000c 00D1     		bne	.L218
 3790 000e FCE0     		b	.L217
 3791              	.L218:
 886:.\main.c      ****     flag_calc_wheelspeed = 0;
 3792              		.loc 1 886 0
 3793 0010 7F4B     		ldr	r3, .L225
 3794 0012 0022     		movs	r2, #0
 3795 0014 1A70     		strb	r2, [r3]
 887:.\main.c      ****     
 888:.\main.c      ****     //char wheel_1_str [64];
 889:.\main.c      ****     //char wheel_2_str [64];
 890:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 891:.\main.c      ****     //usbPutString(wheel_1_str);
 892:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 893:.\main.c      ****     
 894:.\main.c      ****     //usbPutString(wheel_2_str);
 895:.\main.c      ****     
 896:.\main.c      ****     int16 leftSpeed = quad_diff1;
 3796              		.loc 1 896 0
 3797 0016 7F4B     		ldr	r3, .L225+4
 3798 0018 1B88     		ldrh	r3, [r3]	@ movhi
 3799 001a FB81     		strh	r3, [r7, #14]	@ movhi
 897:.\main.c      ****     int16 rightSpeed = quad_diff2;
 3800              		.loc 1 897 0
 3801 001c 7E4B     		ldr	r3, .L225+8
 3802 001e 1B88     		ldrh	r3, [r3]	@ movhi
 3803 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 898:.\main.c      ****     double scalingLeft = 1;
 3804              		.loc 1 898 0
 3805 0022 4FF00002 		mov	r2, #0
 3806 0026 7D4B     		ldr	r3, .L225+12
 3807 0028 C7E90623 		strd	r2, [r7, #24]
 899:.\main.c      ****     double scalingRight = 1;
 3808              		.loc 1 899 0
 3809 002c 4FF00002 		mov	r2, #0
 3810 0030 7A4B     		ldr	r3, .L225+12
 3811 0032 C7E90423 		strd	r2, [r7, #16]
 900:.\main.c      ****     
 901:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 902:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 3812              		.loc 1 902 0
 3813 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 3814 003a 002B     		cmp	r3, #0
 3815 003c 0FD1     		bne	.L220
 3816              		.loc 1 902 0 is_stmt 0 discriminator 1
 3817 003e B7F90C30 		ldrsh	r3, [r7, #12]
 3818 0042 002B     		cmp	r3, #0
 3819 0044 0BD1     		bne	.L220
 903:.\main.c      ****        //leftSpeed = 3;
 904:.\main.c      ****         scalingLeft = 2;
 3820              		.loc 1 904 0 is_stmt 1
 3821 0046 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 85


 3822 004a 4FF08043 		mov	r3, #1073741824
 3823 004e C7E90623 		strd	r2, [r7, #24]
 905:.\main.c      ****         scalingRight = 2;
 3824              		.loc 1 905 0
 3825 0052 4FF00002 		mov	r2, #0
 3826 0056 4FF08043 		mov	r3, #1073741824
 3827 005a C7E90423 		strd	r2, [r7, #16]
 3828              	.L220:
 906:.\main.c      ****     }
 907:.\main.c      **** 
 908:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 3829              		.loc 1 908 0
 3830 005e 704B     		ldr	r3, .L225+16
 3831 0060 1B88     		ldrh	r3, [r3]
 3832 0062 1AB2     		sxth	r2, r3
 3833 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 3834 0068 002B     		cmp	r3, #0
 3835 006a B8BF     		it	lt
 3836 006c 5B42     		rsblt	r3, r3, #0
 3837 006e D31A     		subs	r3, r2, r3
 3838 0070 BB60     		str	r3, [r7, #8]
 909:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 3839              		.loc 1 909 0
 3840 0072 BB68     		ldr	r3, [r7, #8]
 3841 0074 83EAE372 		eor	r2, r3, r3, asr #31
 3842 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 3843 007c BB68     		ldr	r3, [r7, #8]
 3844 007e 92FBF3F3 		sdiv	r3, r2, r3
 3845 0082 1846     		mov	r0, r3
 3846 0084 FFF7FEFF 		bl	__aeabi_i2d
 3847 0088 0446     		mov	r4, r0
 3848 008a 0D46     		mov	r5, r1
 3849 008c BB68     		ldr	r3, [r7, #8]
 3850 008e 002B     		cmp	r3, #0
 3851 0090 B8BF     		it	lt
 3852 0092 5B42     		rsblt	r3, r3, #0
 3853 0094 1846     		mov	r0, r3
 3854 0096 FFF7FEFF 		bl	__aeabi_i2d
 3855 009a 0246     		mov	r2, r0
 3856 009c 0B46     		mov	r3, r1
 3857 009e 1046     		mov	r0, r2
 3858 00a0 1946     		mov	r1, r3
 3859 00a2 FFF7FEFF 		bl	sqrt
 3860 00a6 0246     		mov	r2, r0
 3861 00a8 0B46     		mov	r3, r1
 3862 00aa 2046     		mov	r0, r4
 3863 00ac 2946     		mov	r1, r5
 3864 00ae FFF7FEFF 		bl	__aeabi_dmul
 3865 00b2 0246     		mov	r2, r0
 3866 00b4 0B46     		mov	r3, r1
 3867 00b6 1046     		mov	r0, r2
 3868 00b8 1946     		mov	r1, r3
 3869 00ba FFF7FEFF 		bl	__aeabi_d2iz
 3870 00be 0346     		mov	r3, r0
 3871 00c0 7B60     		str	r3, [r7, #4]
 910:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 3872              		.loc 1 910 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 86


 3873 00c2 584B     		ldr	r3, .L225+20
 3874 00c4 1B88     		ldrh	r3, [r3]
 3875 00c6 1BB2     		sxth	r3, r3
 3876 00c8 1846     		mov	r0, r3
 3877 00ca FFF7FEFF 		bl	__aeabi_i2d
 3878 00ce 0446     		mov	r4, r0
 3879 00d0 0D46     		mov	r5, r1
 3880 00d2 7868     		ldr	r0, [r7, #4]
 3881 00d4 FFF7FEFF 		bl	__aeabi_i2d
 3882 00d8 0246     		mov	r2, r0
 3883 00da 0B46     		mov	r3, r1
 3884 00dc 1046     		mov	r0, r2
 3885 00de 1946     		mov	r1, r3
 3886 00e0 D7E90623 		ldrd	r2, [r7, #24]
 3887 00e4 FFF7FEFF 		bl	__aeabi_dmul
 3888 00e8 0246     		mov	r2, r0
 3889 00ea 0B46     		mov	r3, r1
 3890 00ec 2046     		mov	r0, r4
 3891 00ee 2946     		mov	r1, r5
 3892 00f0 FFF7FEFF 		bl	__aeabi_dadd
 3893 00f4 0246     		mov	r2, r0
 3894 00f6 0B46     		mov	r3, r1
 3895 00f8 1046     		mov	r0, r2
 3896 00fa 1946     		mov	r1, r3
 3897 00fc FFF7FEFF 		bl	__aeabi_d2iz
 3898 0100 0346     		mov	r3, r0
 3899 0102 9AB2     		uxth	r2, r3
 3900 0104 474B     		ldr	r3, .L225+20
 3901 0106 1A80     		strh	r2, [r3]	@ movhi
 911:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 3902              		.loc 1 911 0
 3903 0108 474B     		ldr	r3, .L225+24
 3904 010a 1B88     		ldrh	r3, [r3]
 3905 010c 1AB2     		sxth	r2, r3
 3906 010e B7F90C30 		ldrsh	r3, [r7, #12]
 3907 0112 002B     		cmp	r3, #0
 3908 0114 B8BF     		it	lt
 3909 0116 5B42     		rsblt	r3, r3, #0
 3910 0118 D31A     		subs	r3, r2, r3
 3911 011a BB60     		str	r3, [r7, #8]
 912:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 3912              		.loc 1 912 0
 3913 011c BB68     		ldr	r3, [r7, #8]
 3914 011e 83EAE372 		eor	r2, r3, r3, asr #31
 3915 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 3916 0126 BB68     		ldr	r3, [r7, #8]
 3917 0128 92FBF3F3 		sdiv	r3, r2, r3
 3918 012c 1846     		mov	r0, r3
 3919 012e FFF7FEFF 		bl	__aeabi_i2d
 3920 0132 0446     		mov	r4, r0
 3921 0134 0D46     		mov	r5, r1
 3922 0136 BB68     		ldr	r3, [r7, #8]
 3923 0138 002B     		cmp	r3, #0
 3924 013a B8BF     		it	lt
 3925 013c 5B42     		rsblt	r3, r3, #0
 3926 013e 1846     		mov	r0, r3
 3927 0140 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 87


 3928 0144 0246     		mov	r2, r0
 3929 0146 0B46     		mov	r3, r1
 3930 0148 1046     		mov	r0, r2
 3931 014a 1946     		mov	r1, r3
 3932 014c FFF7FEFF 		bl	sqrt
 3933 0150 0246     		mov	r2, r0
 3934 0152 0B46     		mov	r3, r1
 3935 0154 2046     		mov	r0, r4
 3936 0156 2946     		mov	r1, r5
 3937 0158 FFF7FEFF 		bl	__aeabi_dmul
 3938 015c 0246     		mov	r2, r0
 3939 015e 0B46     		mov	r3, r1
 3940 0160 1046     		mov	r0, r2
 3941 0162 1946     		mov	r1, r3
 3942 0164 FFF7FEFF 		bl	__aeabi_d2iz
 3943 0168 0346     		mov	r3, r0
 3944 016a 7B60     		str	r3, [r7, #4]
 913:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 3945              		.loc 1 913 0
 3946 016c 2F4B     		ldr	r3, .L225+28
 3947 016e 1B88     		ldrh	r3, [r3]
 3948 0170 1BB2     		sxth	r3, r3
 3949 0172 1846     		mov	r0, r3
 3950 0174 FFF7FEFF 		bl	__aeabi_i2d
 3951 0178 0446     		mov	r4, r0
 3952 017a 0D46     		mov	r5, r1
 3953 017c 7868     		ldr	r0, [r7, #4]
 3954 017e FFF7FEFF 		bl	__aeabi_i2d
 3955 0182 0246     		mov	r2, r0
 3956 0184 0B46     		mov	r3, r1
 3957 0186 1046     		mov	r0, r2
 3958 0188 1946     		mov	r1, r3
 3959 018a D7E90423 		ldrd	r2, [r7, #16]
 3960 018e FFF7FEFF 		bl	__aeabi_dmul
 3961 0192 0246     		mov	r2, r0
 3962 0194 0B46     		mov	r3, r1
 3963 0196 2046     		mov	r0, r4
 3964 0198 2946     		mov	r1, r5
 3965 019a FFF7FEFF 		bl	__aeabi_dadd
 3966 019e 0246     		mov	r2, r0
 3967 01a0 0B46     		mov	r3, r1
 3968 01a2 1046     		mov	r0, r2
 3969 01a4 1946     		mov	r1, r3
 3970 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 3971 01aa 0346     		mov	r3, r0
 3972 01ac 9AB2     		uxth	r2, r3
 3973 01ae 1F4B     		ldr	r3, .L225+28
 3974 01b0 1A80     		strh	r2, [r3]	@ movhi
 914:.\main.c      ****     
 915:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 3975              		.loc 1 915 0
 3976 01b2 1E4B     		ldr	r3, .L225+28
 3977 01b4 1B88     		ldrh	r3, [r3]
 3978 01b6 1BB2     		sxth	r3, r3
 3979 01b8 002B     		cmp	r3, #0
 3980 01ba 02DA     		bge	.L221
 3981              		.loc 1 915 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 88


 3982 01bc 1B4B     		ldr	r3, .L225+28
 3983 01be 0022     		movs	r2, #0
 3984 01c0 1A80     		strh	r2, [r3]	@ movhi
 3985              	.L221:
 916:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 3986              		.loc 1 916 0 is_stmt 1
 3987 01c2 184B     		ldr	r3, .L225+20
 3988 01c4 1B88     		ldrh	r3, [r3]
 3989 01c6 1BB2     		sxth	r3, r3
 3990 01c8 002B     		cmp	r3, #0
 3991 01ca 02DA     		bge	.L222
 3992              		.loc 1 916 0 is_stmt 0 discriminator 1
 3993 01cc 154B     		ldr	r3, .L225+20
 3994 01ce 0022     		movs	r2, #0
 3995 01d0 1A80     		strh	r2, [r3]	@ movhi
 3996              	.L222:
 917:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 3997              		.loc 1 917 0 is_stmt 1
 3998 01d2 164B     		ldr	r3, .L225+28
 3999 01d4 1B88     		ldrh	r3, [r3]
 4000 01d6 1BB2     		sxth	r3, r3
 4001 01d8 642B     		cmp	r3, #100
 4002 01da 02DD     		ble	.L223
 4003              		.loc 1 917 0 is_stmt 0 discriminator 1
 4004 01dc 134B     		ldr	r3, .L225+28
 4005 01de 6422     		movs	r2, #100
 4006 01e0 1A80     		strh	r2, [r3]	@ movhi
 4007              	.L223:
 918:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4008              		.loc 1 918 0 is_stmt 1
 4009 01e2 104B     		ldr	r3, .L225+20
 4010 01e4 1B88     		ldrh	r3, [r3]
 4011 01e6 1BB2     		sxth	r3, r3
 4012 01e8 642B     		cmp	r3, #100
 4013 01ea 02DD     		ble	.L224
 4014              		.loc 1 918 0 is_stmt 0 discriminator 1
 4015 01ec 0D4B     		ldr	r3, .L225+20
 4016 01ee 6422     		movs	r2, #100
 4017 01f0 1A80     		strh	r2, [r3]	@ movhi
 4018              	.L224:
 919:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4019              		.loc 1 919 0 is_stmt 1
 4020 01f2 0C4B     		ldr	r3, .L225+20
 4021 01f4 1B88     		ldrh	r3, [r3]
 4022 01f6 DBB2     		uxtb	r3, r3
 4023 01f8 1846     		mov	r0, r3
 4024 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
 920:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4025              		.loc 1 920 0
 4026 01fe 0B4B     		ldr	r3, .L225+28
 4027 0200 1B88     		ldrh	r3, [r3]
 4028 0202 DBB2     		uxtb	r3, r3
 4029 0204 1846     		mov	r0, r3
 4030 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4031              	.L217:
 921:.\main.c      **** }
 4032              		.loc 1 921 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 89


 4033 020a 2037     		adds	r7, r7, #32
 4034              		.cfi_def_cfa_offset 16
 4035 020c BD46     		mov	sp, r7
 4036              		.cfi_def_cfa_register 13
 4037              		@ sp needed
 4038 020e B0BD     		pop	{r4, r5, r7, pc}
 4039              	.L226:
 4040              		.align	2
 4041              	.L225:
 4042 0210 00000000 		.word	flag_calc_wheelspeed
 4043 0214 00000000 		.word	quad_diff1
 4044 0218 00000000 		.word	quad_diff2
 4045 021c 0000F03F 		.word	1072693248
 4046 0220 00000000 		.word	leftSpeedLimit
 4047 0224 00000000 		.word	left_duty_cycle
 4048 0228 00000000 		.word	rightSpeedLimit
 4049 022c 00000000 		.word	right_duty_cycle
 4050              		.cfi_endproc
 4051              	.LFE96:
 4052              		.size	Quad_Dec_response, .-Quad_Dec_response
 4053              		.section	.text.trackLine,"ax",%progbits
 4054              		.align	2
 4055              		.global	trackLine
 4056              		.thumb
 4057              		.thumb_func
 4058              		.type	trackLine, %function
 4059              	trackLine:
 4060              	.LFB97:
 922:.\main.c      **** 
 923:.\main.c      **** void trackLine()
 924:.\main.c      **** {
 4061              		.loc 1 924 0
 4062              		.cfi_startproc
 4063              		@ args = 0, pretend = 0, frame = 0
 4064              		@ frame_needed = 1, uses_anonymous_args = 0
 4065              		@ link register save eliminated.
 4066 0000 80B4     		push	{r7}
 4067              		.cfi_def_cfa_offset 4
 4068              		.cfi_offset 7, -4
 4069 0002 00AF     		add	r7, sp, #0
 4070              		.cfi_def_cfa_register 7
 925:.\main.c      ****  //removed from implementation
 926:.\main.c      **** }
 4071              		.loc 1 926 0
 4072 0004 BD46     		mov	sp, r7
 4073              		.cfi_def_cfa_register 13
 4074              		@ sp needed
 4075 0006 5DF8047B 		ldr	r7, [sp], #4
 4076              		.cfi_restore 7
 4077              		.cfi_def_cfa_offset 0
 4078 000a 7047     		bx	lr
 4079              		.cfi_endproc
 4080              	.LFE97:
 4081              		.size	trackLine, .-trackLine
 4082              		.global	leftTurnCount
 4083              		.bss
 4084              		.align	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 90


 4085              		.type	leftTurnCount, %object
 4086              		.size	leftTurnCount, 2
 4087              	leftTurnCount:
 4088 28e8 0000     		.space	2
 4089              		.global	rightTurnCount
 4090              		.align	1
 4091              		.type	rightTurnCount, %object
 4092              		.size	rightTurnCount, 2
 4093              	rightTurnCount:
 4094 28ea 0000     		.space	2
 4095              		.section	.text.trackLineZ,"ax",%progbits
 4096              		.align	2
 4097              		.global	trackLineZ
 4098              		.thumb
 4099              		.thumb_func
 4100              		.type	trackLineZ, %function
 4101              	trackLineZ:
 4102              	.LFB98:
 927:.\main.c      **** uint16 leftTurnCount = 0;
 928:.\main.c      **** uint16 rightTurnCount = 0;
 929:.\main.c      **** void trackLineZ()
 930:.\main.c      **** {
 4103              		.loc 1 930 0
 4104              		.cfi_startproc
 4105              		@ args = 0, pretend = 0, frame = 8
 4106              		@ frame_needed = 1, uses_anonymous_args = 0
 4107 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4108              		.cfi_def_cfa_offset 24
 4109              		.cfi_offset 4, -24
 4110              		.cfi_offset 5, -20
 4111              		.cfi_offset 7, -16
 4112              		.cfi_offset 8, -12
 4113              		.cfi_offset 9, -8
 4114              		.cfi_offset 14, -4
 4115 0004 82B0     		sub	sp, sp, #8
 4116              		.cfi_def_cfa_offset 32
 4117 0006 00AF     		add	r7, sp, #0
 4118              		.cfi_def_cfa_register 7
 931:.\main.c      ****     //read the value of the three central-front sensors
 932:.\main.c      ****     
 933:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4119              		.loc 1 933 0
 4120 0008 FFF7FEFF 		bl	NLSens_out_Read
 4121 000c 0346     		mov	r3, r0
 4122 000e FB71     		strb	r3, [r7, #7]
 934:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4123              		.loc 1 934 0
 4124 0010 FFF7FEFF 		bl	NRSens_out_Read
 4125 0014 0346     		mov	r3, r0
 4126 0016 BB71     		strb	r3, [r7, #6]
 935:.\main.c      ****     uint8 mid = MSens_out_Read();
 4127              		.loc 1 935 0
 4128 0018 FFF7FEFF 		bl	MSens_out_Read
 4129 001c 0346     		mov	r3, r0
 4130 001e 7B71     		strb	r3, [r7, #5]
 936:.\main.c      ****     
 937:.\main.c      ****         //if only the left one, hard left
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 91


 938:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4131              		.loc 1 938 0
 4132 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4133 0022 002B     		cmp	r3, #0
 4134 0024 27D0     		beq	.L229
 4135              		.loc 1 938 0 is_stmt 0 discriminator 1
 4136 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4137 0028 002B     		cmp	r3, #0
 4138 002a 24D1     		bne	.L229
 4139              		.loc 1 938 0 discriminator 2
 4140 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4141 002e 002B     		cmp	r3, #0
 4142 0030 21D1     		bne	.L229
 939:.\main.c      ****     {
 940:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4143              		.loc 1 940 0 is_stmt 1
 4144 0032 454B     		ldr	r3, .L234+8
 4145 0034 D3E90023 		ldrd	r2, [r3]
 4146 0038 1046     		mov	r0, r2
 4147 003a 1946     		mov	r1, r3
 4148 003c 40A3     		adr	r3, .L234
 4149 003e D3E90023 		ldrd	r2, [r3]
 4150 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4151 0046 0246     		mov	r2, r0
 4152 0048 0B46     		mov	r3, r1
 4153 004a 1446     		mov	r4, r2
 4154 004c 1D46     		mov	r5, r3
 4155 004e 3E4B     		ldr	r3, .L234+8
 4156 0050 D3E90023 		ldrd	r2, [r3]
 4157 0054 9046     		mov	r8, r2
 4158 0056 83F00049 		eor	r9, r3, #-2147483648
 4159 005a 4046     		mov	r0, r8
 4160 005c 4946     		mov	r1, r9
 4161 005e 38A3     		adr	r3, .L234
 4162 0060 D3E90023 		ldrd	r2, [r3]
 4163 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4164 0068 0246     		mov	r2, r0
 4165 006a 0B46     		mov	r3, r1
 4166 006c 2046     		mov	r0, r4
 4167 006e 2946     		mov	r1, r5
 4168 0070 FFF7FEFF 		bl	setSpeed
 4169 0074 5FE0     		b	.L228
 4170              	.L229:
 941:.\main.c      ****     }
 942:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4171              		.loc 1 942 0
 4172 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4173 0078 002B     		cmp	r3, #0
 4174 007a 0ED0     		beq	.L231
 4175              		.loc 1 942 0 is_stmt 0 discriminator 1
 4176 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4177 007e 002B     		cmp	r3, #0
 4178 0080 0BD0     		beq	.L231
 4179              		.loc 1 942 0 discriminator 2
 4180 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4181 0084 002B     		cmp	r3, #0
 4182 0086 08D1     		bne	.L231
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 92


 943:.\main.c      ****     {
 944:.\main.c      ****         setSpeed(speed,speed);
 4183              		.loc 1 944 0 is_stmt 1
 4184 0088 2F4B     		ldr	r3, .L234+8
 4185 008a D3E90001 		ldrd	r0, [r3]
 4186 008e 2E4B     		ldr	r3, .L234+8
 4187 0090 D3E90023 		ldrd	r2, [r3]
 4188 0094 FFF7FEFF 		bl	setSpeed
 4189 0098 4DE0     		b	.L228
 4190              	.L231:
 945:.\main.c      ****     }
 946:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4191              		.loc 1 946 0
 4192 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4193 009c 002B     		cmp	r3, #0
 4194 009e 0ED0     		beq	.L232
 4195              		.loc 1 946 0 is_stmt 0 discriminator 1
 4196 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4197 00a2 002B     		cmp	r3, #0
 4198 00a4 0BD0     		beq	.L232
 4199              		.loc 1 946 0 discriminator 2
 4200 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4201 00a8 002B     		cmp	r3, #0
 4202 00aa 08D1     		bne	.L232
 947:.\main.c      ****     {
 948:.\main.c      ****         setSpeed(speed ,speed);
 4203              		.loc 1 948 0 is_stmt 1
 4204 00ac 264B     		ldr	r3, .L234+8
 4205 00ae D3E90001 		ldrd	r0, [r3]
 4206 00b2 254B     		ldr	r3, .L234+8
 4207 00b4 D3E90023 		ldrd	r2, [r3]
 4208 00b8 FFF7FEFF 		bl	setSpeed
 4209 00bc 3BE0     		b	.L228
 4210              	.L232:
 949:.\main.c      ****     }
 950:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4211              		.loc 1 950 0
 4212 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4213 00c0 002B     		cmp	r3, #0
 4214 00c2 27D0     		beq	.L233
 4215              		.loc 1 950 0 is_stmt 0 discriminator 1
 4216 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4217 00c6 002B     		cmp	r3, #0
 4218 00c8 24D1     		bne	.L233
 4219              		.loc 1 950 0 discriminator 2
 4220 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4221 00cc 002B     		cmp	r3, #0
 4222 00ce 21D1     		bne	.L233
 951:.\main.c      ****     {
 952:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4223              		.loc 1 952 0 is_stmt 1
 4224 00d0 1D4B     		ldr	r3, .L234+8
 4225 00d2 D3E90023 		ldrd	r2, [r3]
 4226 00d6 1446     		mov	r4, r2
 4227 00d8 83F00045 		eor	r5, r3, #-2147483648
 4228 00dc 2046     		mov	r0, r4
 4229 00de 2946     		mov	r1, r5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 93


 4230 00e0 17A3     		adr	r3, .L234
 4231 00e2 D3E90023 		ldrd	r2, [r3]
 4232 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4233 00ea 0246     		mov	r2, r0
 4234 00ec 0B46     		mov	r3, r1
 4235 00ee 1446     		mov	r4, r2
 4236 00f0 1D46     		mov	r5, r3
 4237 00f2 154B     		ldr	r3, .L234+8
 4238 00f4 D3E90023 		ldrd	r2, [r3]
 4239 00f8 1046     		mov	r0, r2
 4240 00fa 1946     		mov	r1, r3
 4241 00fc 10A3     		adr	r3, .L234
 4242 00fe D3E90023 		ldrd	r2, [r3]
 4243 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4244 0106 0246     		mov	r2, r0
 4245 0108 0B46     		mov	r3, r1
 4246 010a 2046     		mov	r0, r4
 4247 010c 2946     		mov	r1, r5
 4248 010e FFF7FEFF 		bl	setSpeed
 4249 0112 10E0     		b	.L228
 4250              	.L233:
 953:.\main.c      ****     }
 954:.\main.c      ****     else if (mid && !nr && !nl)
 4251              		.loc 1 954 0
 4252 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4253 0116 002B     		cmp	r3, #0
 4254 0118 0DD0     		beq	.L228
 4255              		.loc 1 954 0 is_stmt 0 discriminator 1
 4256 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4257 011c 002B     		cmp	r3, #0
 4258 011e 0AD1     		bne	.L228
 4259              		.loc 1 954 0 discriminator 2
 4260 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4261 0122 002B     		cmp	r3, #0
 4262 0124 07D1     		bne	.L228
 955:.\main.c      ****     {
 956:.\main.c      ****         setSpeed(speed,speed);
 4263              		.loc 1 956 0 is_stmt 1
 4264 0126 084B     		ldr	r3, .L234+8
 4265 0128 D3E90001 		ldrd	r0, [r3]
 4266 012c 064B     		ldr	r3, .L234+8
 4267 012e D3E90023 		ldrd	r2, [r3]
 4268 0132 FFF7FEFF 		bl	setSpeed
 4269              	.L228:
 957:.\main.c      ****     }
 958:.\main.c      **** }
 4270              		.loc 1 958 0
 4271 0136 0837     		adds	r7, r7, #8
 4272              		.cfi_def_cfa_offset 24
 4273 0138 BD46     		mov	sp, r7
 4274              		.cfi_def_cfa_register 13
 4275              		@ sp needed
 4276 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4277              	.L235:
 4278 013e 00BF     		.align	3
 4279              	.L234:
 4280 0140 9A999999 		.word	-1717986918
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 94


 4281 0144 9999F93F 		.word	1073322393
 4282 0148 00000000 		.word	speed
 4283              		.cfi_endproc
 4284              	.LFE98:
 4285              		.size	trackLineZ, .-trackLineZ
 4286 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4287              		.align	2
 4288              		.global	trackLineU
 4289              		.thumb
 4290              		.thumb_func
 4291              		.type	trackLineU, %function
 4292              	trackLineU:
 4293              	.LFB99:
 959:.\main.c      **** 
 960:.\main.c      **** 
 961:.\main.c      **** void trackLineU()
 962:.\main.c      **** { 
 4294              		.loc 1 962 0
 4295              		.cfi_startproc
 4296              		@ args = 0, pretend = 0, frame = 0
 4297              		@ frame_needed = 1, uses_anonymous_args = 0
 4298              		@ link register save eliminated.
 4299 0000 80B4     		push	{r7}
 4300              		.cfi_def_cfa_offset 4
 4301              		.cfi_offset 7, -4
 4302 0002 00AF     		add	r7, sp, #0
 4303              		.cfi_def_cfa_register 7
 963:.\main.c      **** //removed from final implementation
 964:.\main.c      **** }
 4304              		.loc 1 964 0
 4305 0004 BD46     		mov	sp, r7
 4306              		.cfi_def_cfa_register 13
 4307              		@ sp needed
 4308 0006 5DF8047B 		ldr	r7, [sp], #4
 4309              		.cfi_restore 7
 4310              		.cfi_def_cfa_offset 0
 4311 000a 7047     		bx	lr
 4312              		.cfi_endproc
 4313              	.LFE99:
 4314              		.size	trackLineU, .-trackLineU
 4315              		.global	__aeabi_fadd
 4316              		.section	.rodata
 4317 00db 00       		.align	2
 4318              	.LC11:
 4319 00dc 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 4319      65727920 
 4319      566F6C74 
 4319      6167653A 
 4319      2025646D 
 4320              		.section	.text.print_ADC,"ax",%progbits
 4321              		.align	2
 4322              		.global	print_ADC
 4323              		.thumb
 4324              		.thumb_func
 4325              		.type	print_ADC, %function
 4326              	print_ADC:
 4327              	.LFB100:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 95


 965:.\main.c      **** 
 966:.\main.c      **** void print_ADC()
 967:.\main.c      **** {
 4328              		.loc 1 967 0
 4329              		.cfi_startproc
 4330              		@ args = 0, pretend = 0, frame = 24
 4331              		@ frame_needed = 1, uses_anonymous_args = 0
 4332 0000 80B5     		push	{r7, lr}
 4333              		.cfi_def_cfa_offset 8
 4334              		.cfi_offset 7, -8
 4335              		.cfi_offset 14, -4
 4336 0002 86B0     		sub	sp, sp, #24
 4337              		.cfi_def_cfa_offset 32
 4338 0004 00AF     		add	r7, sp, #0
 4339              		.cfi_def_cfa_register 7
 968:.\main.c      ****    //usbPutString("HII\n");
 969:.\main.c      ****     if(flag_receive_ADC == 1)
 4340              		.loc 1 969 0
 4341 0006 274B     		ldr	r3, .L240
 4342 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4343 000a 012B     		cmp	r3, #1
 4344 000c 46D1     		bne	.L237
 4345              	.LBB10:
 970:.\main.c      ****     {
 971:.\main.c      ****         //usbPutString("AAA\r\n");
 972:.\main.c      ****         flag_receive_ADC = 0;
 4346              		.loc 1 972 0
 4347 000e 254B     		ldr	r3, .L240
 4348 0010 0022     		movs	r2, #0
 4349 0012 1A70     		strb	r2, [r3]
 973:.\main.c      ****         
 974:.\main.c      ****        // int8 channel = ADC_
 975:.\main.c      ****         float scalingFactor = 0.972;
 4350              		.loc 1 975 0
 4351 0014 244B     		ldr	r3, .L240+4
 4352 0016 7B61     		str	r3, [r7, #20]	@ float
 976:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 4353              		.loc 1 976 0
 4354 0018 244B     		ldr	r3, .L240+8
 4355 001a 1B88     		ldrh	r3, [r3]
 4356 001c 1BB2     		sxth	r3, r3
 4357 001e 41F28832 		movw	r2, #5000
 4358 0022 02FB03F3 		mul	r3, r2, r3
 4359 0026 002B     		cmp	r3, #0
 4360 0028 01DA     		bge	.L239
 4361 002a 03F6FF73 		addw	r3, r3, #4095
 4362              	.L239:
 4363 002e 1B13     		asrs	r3, r3, #12
 4364 0030 1846     		mov	r0, r3
 4365 0032 FFF7FEFF 		bl	__aeabi_i2f
 4366 0036 0346     		mov	r3, r0
 4367 0038 1846     		mov	r0, r3
 4368 003a 7969     		ldr	r1, [r7, #20]	@ float
 4369 003c FFF7FEFF 		bl	__aeabi_fmul
 4370 0040 0346     		mov	r3, r0
 4371 0042 1846     		mov	r0, r3
 4372 0044 1946     		mov	r1, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 96


 4373 0046 FFF7FEFF 		bl	__aeabi_fadd
 4374 004a 0346     		mov	r3, r0
 4375 004c 1846     		mov	r0, r3
 4376 004e FFF7FEFF 		bl	__aeabi_f2iz
 4377 0052 0346     		mov	r3, r0
 4378 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 977:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 4379              		.loc 1 977 0
 4380 0056 B7F91220 		ldrsh	r2, [r7, #18]
 4381 005a 154B     		ldr	r3, .L240+12
 4382 005c 1B88     		ldrh	r3, [r3]
 4383 005e 1BB2     		sxth	r3, r3
 4384 0060 1A44     		add	r2, r2, r3
 4385 0062 144B     		ldr	r3, .L240+16
 4386 0064 1B88     		ldrh	r3, [r3]
 4387 0066 1BB2     		sxth	r3, r3
 4388 0068 1344     		add	r3, r3, r2
 4389 006a 134A     		ldr	r2, .L240+20
 4390 006c 82FB0312 		smull	r1, r2, r2, r3
 4391 0070 DB17     		asrs	r3, r3, #31
 4392 0072 D31A     		subs	r3, r2, r3
 4393 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 978:.\main.c      ****         prevVoltage2 = prevVoltage;
 4394              		.loc 1 978 0
 4395 0076 0E4B     		ldr	r3, .L240+12
 4396 0078 1A88     		ldrh	r2, [r3]
 4397 007a 0E4B     		ldr	r3, .L240+16
 4398 007c 1A80     		strh	r2, [r3]	@ movhi
 979:.\main.c      ****         prevVoltage = converted_val;
 4399              		.loc 1 979 0
 4400 007e 0C4A     		ldr	r2, .L240+12
 4401 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 4402 0082 1380     		strh	r3, [r2]	@ movhi
 980:.\main.c      ****         
 981:.\main.c      ****         char result_str[16];
 982:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 4403              		.loc 1 982 0
 4404 0084 B7F91230 		ldrsh	r3, [r7, #18]
 4405 0088 3A46     		mov	r2, r7
 4406 008a 1046     		mov	r0, r2
 4407 008c 0B49     		ldr	r1, .L240+24
 4408 008e 1A46     		mov	r2, r3
 4409 0090 FFF7FEFF 		bl	sprintf
 983:.\main.c      ****         
 984:.\main.c      ****         usbPutString(result_str);
 4410              		.loc 1 984 0
 4411 0094 3B46     		mov	r3, r7
 4412 0096 1846     		mov	r0, r3
 4413 0098 FFF7FEFF 		bl	usbPutString
 4414              	.L237:
 4415              	.LBE10:
 985:.\main.c      ****     }
 986:.\main.c      **** }
 4416              		.loc 1 986 0
 4417 009c 1837     		adds	r7, r7, #24
 4418              		.cfi_def_cfa_offset 8
 4419 009e BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 97


 4420              		.cfi_def_cfa_register 13
 4421              		@ sp needed
 4422 00a0 80BD     		pop	{r7, pc}
 4423              	.L241:
 4424 00a2 00BF     		.align	2
 4425              	.L240:
 4426 00a4 00000000 		.word	flag_receive_ADC
 4427 00a8 FED4783F 		.word	1064883454
 4428 00ac 00000000 		.word	adc_result
 4429 00b0 00000000 		.word	prevVoltage
 4430 00b4 00000000 		.word	prevVoltage2
 4431 00b8 56555555 		.word	1431655766
 4432 00bc DC000000 		.word	.LC11
 4433              		.cfi_endproc
 4434              	.LFE100:
 4435              		.size	print_ADC, .-print_ADC
 4436              		.section	.rodata
 4437              		.align	2
 4438              	.LC12:
 4439 00f4 52535349 		.ascii	"RSSI:\000"
 4439      3A00
 4440 00fa 0000     		.align	2
 4441              	.LC13:
 4442 00fc 25640D0A 		.ascii	"%d\015\012\000"
 4442      00
 4443 0101 000000   		.align	2
 4444              	.LC14:
 4445 0104 726F626F 		.ascii	"robot_x:\000"
 4445      745F783A 
 4445      00
 4446 010d 000000   		.align	2
 4447              	.LC15:
 4448 0110 726F626F 		.ascii	"robot_y:\000"
 4448      745F793A 
 4448      00
 4449 0119 000000   		.align	2
 4450              	.LC16:
 4451 011c 726F626F 		.ascii	"robot_dir:\000"
 4451      745F6469 
 4451      723A00
 4452 0127 00       		.section	.text.print_RF,"ax",%progbits
 4453              		.align	2
 4454              		.global	print_RF
 4455              		.thumb
 4456              		.thumb_func
 4457              		.type	print_RF, %function
 4458              	print_RF:
 4459              	.LFB101:
 987:.\main.c      **** 
 988:.\main.c      **** void print_RF()
 989:.\main.c      **** {
 4460              		.loc 1 989 0
 4461              		.cfi_startproc
 4462              		@ args = 0, pretend = 0, frame = 16
 4463              		@ frame_needed = 1, uses_anonymous_args = 0
 4464 0000 80B5     		push	{r7, lr}
 4465              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 98


 4466              		.cfi_offset 7, -8
 4467              		.cfi_offset 14, -4
 4468 0002 84B0     		sub	sp, sp, #16
 4469              		.cfi_def_cfa_offset 24
 4470 0004 00AF     		add	r7, sp, #0
 4471              		.cfi_def_cfa_register 7
 990:.\main.c      ****     if(flag_print_rf == 1)
 4472              		.loc 1 990 0
 4473 0006 254B     		ldr	r3, .L244
 4474 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4475 000a 012B     		cmp	r3, #1
 4476 000c 42D1     		bne	.L242
 4477              	.LBB11:
 991:.\main.c      ****     {
 992:.\main.c      ****         char printString[16];
 993:.\main.c      ****         flag_print_rf = 0;
 4478              		.loc 1 993 0
 4479 000e 234B     		ldr	r3, .L244
 4480 0010 0022     		movs	r2, #0
 4481 0012 1A70     		strb	r2, [r3]
 994:.\main.c      ****         usbPutString("RSSI:");
 4482              		.loc 1 994 0
 4483 0014 2248     		ldr	r0, .L244+4
 4484 0016 FFF7FEFF 		bl	usbPutString
 995:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4485              		.loc 1 995 0
 4486 001a 224B     		ldr	r3, .L244+8
 4487 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4488 001e 5BB2     		sxtb	r3, r3
 4489 0020 3A46     		mov	r2, r7
 4490 0022 1046     		mov	r0, r2
 4491 0024 2049     		ldr	r1, .L244+12
 4492 0026 1A46     		mov	r2, r3
 4493 0028 FFF7FEFF 		bl	sprintf
 996:.\main.c      ****         usbPutString(printString);
 4494              		.loc 1 996 0
 4495 002c 3B46     		mov	r3, r7
 4496 002e 1846     		mov	r0, r3
 4497 0030 FFF7FEFF 		bl	usbPutString
 997:.\main.c      ****         usbPutString("robot_x:");
 4498              		.loc 1 997 0
 4499 0034 1D48     		ldr	r0, .L244+16
 4500 0036 FFF7FEFF 		bl	usbPutString
 998:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 4501              		.loc 1 998 0
 4502 003a 1A4B     		ldr	r3, .L244+8
 4503 003c 5B88     		ldrh	r3, [r3, #2]
 4504 003e 1BB2     		sxth	r3, r3
 4505 0040 3A46     		mov	r2, r7
 4506 0042 1046     		mov	r0, r2
 4507 0044 1849     		ldr	r1, .L244+12
 4508 0046 1A46     		mov	r2, r3
 4509 0048 FFF7FEFF 		bl	sprintf
 999:.\main.c      ****         usbPutString(printString);
 4510              		.loc 1 999 0
 4511 004c 3B46     		mov	r3, r7
 4512 004e 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 99


 4513 0050 FFF7FEFF 		bl	usbPutString
1000:.\main.c      ****         usbPutString("robot_y:");
 4514              		.loc 1 1000 0
 4515 0054 1648     		ldr	r0, .L244+20
 4516 0056 FFF7FEFF 		bl	usbPutString
1001:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4517              		.loc 1 1001 0
 4518 005a 124B     		ldr	r3, .L244+8
 4519 005c 9B88     		ldrh	r3, [r3, #4]
 4520 005e 1BB2     		sxth	r3, r3
 4521 0060 3A46     		mov	r2, r7
 4522 0062 1046     		mov	r0, r2
 4523 0064 1049     		ldr	r1, .L244+12
 4524 0066 1A46     		mov	r2, r3
 4525 0068 FFF7FEFF 		bl	sprintf
1002:.\main.c      ****         usbPutString(printString);
 4526              		.loc 1 1002 0
 4527 006c 3B46     		mov	r3, r7
 4528 006e 1846     		mov	r0, r3
 4529 0070 FFF7FEFF 		bl	usbPutString
1003:.\main.c      ****         usbPutString("robot_dir:");
 4530              		.loc 1 1003 0
 4531 0074 0F48     		ldr	r0, .L244+24
 4532 0076 FFF7FEFF 		bl	usbPutString
1004:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4533              		.loc 1 1004 0
 4534 007a 0A4B     		ldr	r3, .L244+8
 4535 007c DB88     		ldrh	r3, [r3, #6]
 4536 007e 1BB2     		sxth	r3, r3
 4537 0080 3A46     		mov	r2, r7
 4538 0082 1046     		mov	r0, r2
 4539 0084 0849     		ldr	r1, .L244+12
 4540 0086 1A46     		mov	r2, r3
 4541 0088 FFF7FEFF 		bl	sprintf
1005:.\main.c      ****         usbPutString(printString);
 4542              		.loc 1 1005 0
 4543 008c 3B46     		mov	r3, r7
 4544 008e 1846     		mov	r0, r3
 4545 0090 FFF7FEFF 		bl	usbPutString
 4546              	.L242:
 4547              	.LBE11:
1006:.\main.c      ****     }
1007:.\main.c      **** }
 4548              		.loc 1 1007 0
 4549 0094 1037     		adds	r7, r7, #16
 4550              		.cfi_def_cfa_offset 8
 4551 0096 BD46     		mov	sp, r7
 4552              		.cfi_def_cfa_register 13
 4553              		@ sp needed
 4554 0098 80BD     		pop	{r7, pc}
 4555              	.L245:
 4556 009a 00BF     		.align	2
 4557              	.L244:
 4558 009c 00000000 		.word	flag_print_rf
 4559 00a0 F4000000 		.word	.LC12
 4560 00a4 00000000 		.word	system_state
 4561 00a8 FC000000 		.word	.LC13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 100


 4562 00ac 04010000 		.word	.LC14
 4563 00b0 10010000 		.word	.LC15
 4564 00b4 1C010000 		.word	.LC16
 4565              		.cfi_endproc
 4566              	.LFE101:
 4567              		.size	print_RF, .-print_RF
 4568              		.section	.text.readFrontSensors,"ax",%progbits
 4569              		.align	2
 4570              		.global	readFrontSensors
 4571              		.thumb
 4572              		.thumb_func
 4573              		.type	readFrontSensors, %function
 4574              	readFrontSensors:
 4575              	.LFB102:
1008:.\main.c      **** 
1009:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1010:.\main.c      **** {
 4576              		.loc 1 1010 0
 4577              		.cfi_startproc
 4578              		@ args = 0, pretend = 0, frame = 8
 4579              		@ frame_needed = 1, uses_anonymous_args = 0
 4580 0000 90B5     		push	{r4, r7, lr}
 4581              		.cfi_def_cfa_offset 12
 4582              		.cfi_offset 4, -12
 4583              		.cfi_offset 7, -8
 4584              		.cfi_offset 14, -4
 4585 0002 83B0     		sub	sp, sp, #12
 4586              		.cfi_def_cfa_offset 24
 4587 0004 00AF     		add	r7, sp, #0
 4588              		.cfi_def_cfa_register 7
 4589 0006 7860     		str	r0, [r7, #4]
1011:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4590              		.loc 1 1011 0
 4591 0008 FFF7FEFF 		bl	FLSens_out_Read
 4592 000c 0346     		mov	r3, r0
 4593 000e 1A46     		mov	r2, r3
 4594 0010 7B68     		ldr	r3, [r7, #4]
 4595 0012 1A70     		strb	r2, [r3]
1012:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4596              		.loc 1 1012 0
 4597 0014 7B68     		ldr	r3, [r7, #4]
 4598 0016 5C1C     		adds	r4, r3, #1
 4599 0018 FFF7FEFF 		bl	NLSens_out_Read
 4600 001c 0346     		mov	r3, r0
 4601 001e 2370     		strb	r3, [r4]
1013:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4602              		.loc 1 1013 0
 4603 0020 7B68     		ldr	r3, [r7, #4]
 4604 0022 9C1C     		adds	r4, r3, #2
 4605 0024 FFF7FEFF 		bl	MSens_out_Read
 4606 0028 0346     		mov	r3, r0
 4607 002a 2370     		strb	r3, [r4]
1014:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4608              		.loc 1 1014 0
 4609 002c 7B68     		ldr	r3, [r7, #4]
 4610 002e DC1C     		adds	r4, r3, #3
 4611 0030 FFF7FEFF 		bl	NRSens_out_Read
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 101


 4612 0034 0346     		mov	r3, r0
 4613 0036 2370     		strb	r3, [r4]
1015:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4614              		.loc 1 1015 0
 4615 0038 7B68     		ldr	r3, [r7, #4]
 4616 003a 1C1D     		adds	r4, r3, #4
 4617 003c FFF7FEFF 		bl	FRSens_out_Read
 4618 0040 0346     		mov	r3, r0
 4619 0042 2370     		strb	r3, [r4]
1016:.\main.c      **** }
 4620              		.loc 1 1016 0
 4621 0044 0C37     		adds	r7, r7, #12
 4622              		.cfi_def_cfa_offset 12
 4623 0046 BD46     		mov	sp, r7
 4624              		.cfi_def_cfa_register 13
 4625              		@ sp needed
 4626 0048 90BD     		pop	{r4, r7, pc}
 4627              		.cfi_endproc
 4628              	.LFE102:
 4629              		.size	readFrontSensors, .-readFrontSensors
 4630 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 4631              		.align	2
 4632              		.global	usbPutString
 4633              		.thumb
 4634              		.thumb_func
 4635              		.type	usbPutString, %function
 4636              	usbPutString:
 4637              	.LFB103:
1017:.\main.c      **** 
1018:.\main.c      **** 
1019:.\main.c      **** //* ========================================
1020:.\main.c      **** void usbPutString(char *s)
1021:.\main.c      **** {
 4638              		.loc 1 1021 0
 4639              		.cfi_startproc
 4640              		@ args = 0, pretend = 0, frame = 16
 4641              		@ frame_needed = 1, uses_anonymous_args = 0
 4642 0000 80B5     		push	{r7, lr}
 4643              		.cfi_def_cfa_offset 8
 4644              		.cfi_offset 7, -8
 4645              		.cfi_offset 14, -4
 4646 0002 84B0     		sub	sp, sp, #16
 4647              		.cfi_def_cfa_offset 24
 4648 0004 00AF     		add	r7, sp, #0
 4649              		.cfi_def_cfa_register 7
 4650 0006 7860     		str	r0, [r7, #4]
1022:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1023:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1024:.\main.c      **** //  length to 62 char (63rd char is a '!')
1025:.\main.c      ****     if (USE_USB && portOpen)
 4651              		.loc 1 1025 0
 4652 0008 154B     		ldr	r3, .L251
 4653 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4654 000c 002B     		cmp	r3, #0
 4655 000e 23D0     		beq	.L247
 4656              	.LBB12:
1026:.\main.c      ****     {
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 102


1027:.\main.c      ****             uint32 cnt = 0;
 4657              		.loc 1 1027 0
 4658 0010 0023     		movs	r3, #0
 4659 0012 FB60     		str	r3, [r7, #12]
1028:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4660              		.loc 1 1028 0
 4661 0014 0AE0     		b	.L249
 4662              	.L250:
1029:.\main.c      ****             {
1030:.\main.c      ****                 cnt++;
 4663              		.loc 1 1030 0
 4664 0016 FB68     		ldr	r3, [r7, #12]
 4665 0018 0133     		adds	r3, r3, #1
 4666 001a FB60     		str	r3, [r7, #12]
1031:.\main.c      ****                 if(cnt == 3000000){
 4667              		.loc 1 1031 0
 4668 001c FB68     		ldr	r3, [r7, #12]
 4669 001e 114A     		ldr	r2, .L251+4
 4670 0020 9342     		cmp	r3, r2
 4671 0022 03D1     		bne	.L249
1032:.\main.c      ****                     portOpen = 0;
 4672              		.loc 1 1032 0
 4673 0024 0E4B     		ldr	r3, .L251
 4674 0026 0022     		movs	r2, #0
 4675 0028 1A70     		strb	r2, [r3]
1033:.\main.c      ****                     return;
 4676              		.loc 1 1033 0
 4677 002a 15E0     		b	.L247
 4678              	.L249:
1028:.\main.c      ****             {
 4679              		.loc 1 1028 0
 4680 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4681 0030 0346     		mov	r3, r0
 4682 0032 002B     		cmp	r3, #0
 4683 0034 EFD0     		beq	.L250
1034:.\main.c      ****                 }
1035:.\main.c      ****             }
1036:.\main.c      ****             s[63]='\0';
 4684              		.loc 1 1036 0
 4685 0036 7B68     		ldr	r3, [r7, #4]
 4686 0038 3F33     		adds	r3, r3, #63
 4687 003a 0022     		movs	r2, #0
 4688 003c 1A70     		strb	r2, [r3]
1037:.\main.c      ****             s[62]='!';
 4689              		.loc 1 1037 0
 4690 003e 7B68     		ldr	r3, [r7, #4]
 4691 0040 3E33     		adds	r3, r3, #62
 4692 0042 2122     		movs	r2, #33
 4693 0044 1A70     		strb	r2, [r3]
1038:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4694              		.loc 1 1038 0
 4695 0046 7868     		ldr	r0, [r7, #4]
 4696 0048 FFF7FEFF 		bl	strlen
 4697 004c 0346     		mov	r3, r0
 4698 004e 9BB2     		uxth	r3, r3
 4699 0050 7868     		ldr	r0, [r7, #4]
 4700 0052 1946     		mov	r1, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 103


 4701 0054 FFF7FEFF 		bl	USBUART_PutData
 4702              	.L247:
 4703              	.LBE12:
1039:.\main.c      ****     }
1040:.\main.c      **** }
 4704              		.loc 1 1040 0
 4705 0058 1037     		adds	r7, r7, #16
 4706              		.cfi_def_cfa_offset 8
 4707 005a BD46     		mov	sp, r7
 4708              		.cfi_def_cfa_register 13
 4709              		@ sp needed
 4710 005c 80BD     		pop	{r7, pc}
 4711              	.L252:
 4712 005e 00BF     		.align	2
 4713              	.L251:
 4714 0060 00000000 		.word	portOpen
 4715 0064 C0C62D00 		.word	3000000
 4716              		.cfi_endproc
 4717              	.LFE103:
 4718              		.size	usbPutString, .-usbPutString
 4719              		.section	.text.usbPutChar,"ax",%progbits
 4720              		.align	2
 4721              		.global	usbPutChar
 4722              		.thumb
 4723              		.thumb_func
 4724              		.type	usbPutChar, %function
 4725              	usbPutChar:
 4726              	.LFB104:
1041:.\main.c      **** //* ========================================
1042:.\main.c      **** void usbPutChar(char c)
1043:.\main.c      **** {
 4727              		.loc 1 1043 0
 4728              		.cfi_startproc
 4729              		@ args = 0, pretend = 0, frame = 16
 4730              		@ frame_needed = 1, uses_anonymous_args = 0
 4731 0000 80B5     		push	{r7, lr}
 4732              		.cfi_def_cfa_offset 8
 4733              		.cfi_offset 7, -8
 4734              		.cfi_offset 14, -4
 4735 0002 84B0     		sub	sp, sp, #16
 4736              		.cfi_def_cfa_offset 24
 4737 0004 00AF     		add	r7, sp, #0
 4738              		.cfi_def_cfa_register 7
 4739 0006 0346     		mov	r3, r0
 4740 0008 FB71     		strb	r3, [r7, #7]
1044:.\main.c      ****     if (USE_USB && portOpen)    
 4741              		.loc 1 1044 0
 4742 000a 0F4B     		ldr	r3, .L257
 4743 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4744 000e 002B     		cmp	r3, #0
 4745 0010 16D0     		beq	.L253
 4746              	.LBB13:
1045:.\main.c      ****     {    
1046:.\main.c      ****         uint32 cnt = 0;
 4747              		.loc 1 1046 0
 4748 0012 0023     		movs	r3, #0
 4749 0014 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 104


1047:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4750              		.loc 1 1047 0
 4751 0016 0AE0     		b	.L255
 4752              	.L256:
1048:.\main.c      ****             cnt++;
 4753              		.loc 1 1048 0
 4754 0018 FB68     		ldr	r3, [r7, #12]
 4755 001a 0133     		adds	r3, r3, #1
 4756 001c FB60     		str	r3, [r7, #12]
1049:.\main.c      ****             if(cnt == 3000000){
 4757              		.loc 1 1049 0
 4758 001e FB68     		ldr	r3, [r7, #12]
 4759 0020 0A4A     		ldr	r2, .L257+4
 4760 0022 9342     		cmp	r3, r2
 4761 0024 03D1     		bne	.L255
1050:.\main.c      ****                 portOpen = 0;
 4762              		.loc 1 1050 0
 4763 0026 084B     		ldr	r3, .L257
 4764 0028 0022     		movs	r2, #0
 4765 002a 1A70     		strb	r2, [r3]
1051:.\main.c      ****                 return;
 4766              		.loc 1 1051 0
 4767 002c 08E0     		b	.L253
 4768              	.L255:
1047:.\main.c      ****             cnt++;
 4769              		.loc 1 1047 0
 4770 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4771 0032 0346     		mov	r3, r0
 4772 0034 002B     		cmp	r3, #0
 4773 0036 EFD0     		beq	.L256
1052:.\main.c      ****             }
1053:.\main.c      ****         }
1054:.\main.c      ****         USBUART_PutChar(c);
 4774              		.loc 1 1054 0
 4775 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4776 003a 1846     		mov	r0, r3
 4777 003c FFF7FEFF 		bl	USBUART_PutChar
 4778              	.L253:
 4779              	.LBE13:
1055:.\main.c      ****     }    
1056:.\main.c      **** }
 4780              		.loc 1 1056 0
 4781 0040 1037     		adds	r7, r7, #16
 4782              		.cfi_def_cfa_offset 8
 4783 0042 BD46     		mov	sp, r7
 4784              		.cfi_def_cfa_register 13
 4785              		@ sp needed
 4786 0044 80BD     		pop	{r7, pc}
 4787              	.L258:
 4788 0046 00BF     		.align	2
 4789              	.L257:
 4790 0048 00000000 		.word	portOpen
 4791 004c C0C62D00 		.word	3000000
 4792              		.cfi_endproc
 4793              	.LFE104:
 4794              		.size	usbPutChar, .-usbPutChar
 4795              		.section	.text.uart_set_PWM,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 105


 4796              		.align	2
 4797              		.global	uart_set_PWM
 4798              		.thumb
 4799              		.thumb_func
 4800              		.type	uart_set_PWM, %function
 4801              	uart_set_PWM:
 4802              	.LFB105:
1057:.\main.c      **** //* ========================================
1058:.\main.c      **** 
1059:.\main.c      **** void uart_set_PWM()
1060:.\main.c      **** {
 4803              		.loc 1 1060 0
 4804              		.cfi_startproc
 4805              		@ args = 0, pretend = 0, frame = 0
 4806              		@ frame_needed = 1, uses_anonymous_args = 0
 4807              		@ link register save eliminated.
 4808 0000 80B4     		push	{r7}
 4809              		.cfi_def_cfa_offset 4
 4810              		.cfi_offset 7, -4
 4811 0002 00AF     		add	r7, sp, #0
 4812              		.cfi_def_cfa_register 7
1061:.\main.c      ****     //removed from final implementation
1062:.\main.c      **** }
 4813              		.loc 1 1062 0
 4814 0004 BD46     		mov	sp, r7
 4815              		.cfi_def_cfa_register 13
 4816              		@ sp needed
 4817 0006 5DF8047B 		ldr	r7, [sp], #4
 4818              		.cfi_restore 7
 4819              		.cfi_def_cfa_offset 0
 4820 000a 7047     		bx	lr
 4821              		.cfi_endproc
 4822              	.LFE105:
 4823              		.size	uart_set_PWM, .-uart_set_PWM
 4824              		.text
 4825              	.Letext0:
 4826              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4827              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4828              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4829              		.file 5 ".\\vars.h"
 4830              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4831              		.file 7 ".\\pathfinder.h"
 4832              		.section	.debug_info,"",%progbits
 4833              	.Ldebug_info0:
 4834 0000 1C0E0000 		.4byte	0xe1c
 4835 0004 0400     		.2byte	0x4
 4836 0006 00000000 		.4byte	.Ldebug_abbrev0
 4837 000a 04       		.byte	0x4
 4838 000b 01       		.uleb128 0x1
 4839 000c 9B040000 		.4byte	.LASF195
 4840 0010 01       		.byte	0x1
 4841 0011 79090000 		.4byte	.LASF196
 4842 0015 1C000000 		.4byte	.LASF197
 4843 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4844 001d 00000000 		.4byte	0
 4845 0021 00000000 		.4byte	.Ldebug_line0
 4846 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 106


 4847 0026 01       		.byte	0x1
 4848 0027 06       		.byte	0x6
 4849 0028 B3080000 		.4byte	.LASF0
 4850 002c 02       		.uleb128 0x2
 4851 002d 01       		.byte	0x1
 4852 002e 08       		.byte	0x8
 4853 002f F0070000 		.4byte	.LASF1
 4854 0033 02       		.uleb128 0x2
 4855 0034 02       		.byte	0x2
 4856 0035 05       		.byte	0x5
 4857 0036 51060000 		.4byte	.LASF2
 4858 003a 02       		.uleb128 0x2
 4859 003b 02       		.byte	0x2
 4860 003c 07       		.byte	0x7
 4861 003d BF080000 		.4byte	.LASF3
 4862 0041 03       		.uleb128 0x3
 4863 0042 D7000000 		.4byte	.LASF5
 4864 0046 02       		.byte	0x2
 4865 0047 3F       		.byte	0x3f
 4866 0048 4C000000 		.4byte	0x4c
 4867 004c 02       		.uleb128 0x2
 4868 004d 04       		.byte	0x4
 4869 004e 05       		.byte	0x5
 4870 004f 85060000 		.4byte	.LASF4
 4871 0053 03       		.uleb128 0x3
 4872 0054 FE070000 		.4byte	.LASF6
 4873 0058 02       		.byte	0x2
 4874 0059 41       		.byte	0x41
 4875 005a 5E000000 		.4byte	0x5e
 4876 005e 02       		.uleb128 0x2
 4877 005f 04       		.byte	0x4
 4878 0060 07       		.byte	0x7
 4879 0061 89070000 		.4byte	.LASF7
 4880 0065 02       		.uleb128 0x2
 4881 0066 08       		.byte	0x8
 4882 0067 05       		.byte	0x5
 4883 0068 65040000 		.4byte	.LASF8
 4884 006c 02       		.uleb128 0x2
 4885 006d 08       		.byte	0x8
 4886 006e 07       		.byte	0x7
 4887 006f 7E020000 		.4byte	.LASF9
 4888 0073 04       		.uleb128 0x4
 4889 0074 04       		.byte	0x4
 4890 0075 05       		.byte	0x5
 4891 0076 696E7400 		.ascii	"int\000"
 4892 007a 02       		.uleb128 0x2
 4893 007b 04       		.byte	0x4
 4894 007c 07       		.byte	0x7
 4895 007d BF000000 		.4byte	.LASF10
 4896 0081 02       		.uleb128 0x2
 4897 0082 04       		.byte	0x4
 4898 0083 07       		.byte	0x7
 4899 0084 80070000 		.4byte	.LASF11
 4900 0088 05       		.uleb128 0x5
 4901 0089 04       		.byte	0x4
 4902 008a 8E000000 		.4byte	0x8e
 4903 008e 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 107


 4904 008f 01       		.byte	0x1
 4905 0090 08       		.byte	0x8
 4906 0091 AD030000 		.4byte	.LASF12
 4907 0095 03       		.uleb128 0x3
 4908 0096 A7070000 		.4byte	.LASF13
 4909 009a 03       		.byte	0x3
 4910 009b 2C       		.byte	0x2c
 4911 009c 41000000 		.4byte	0x41
 4912 00a0 03       		.uleb128 0x3
 4913 00a1 FE010000 		.4byte	.LASF14
 4914 00a5 03       		.byte	0x3
 4915 00a6 2D       		.byte	0x2d
 4916 00a7 53000000 		.4byte	0x53
 4917 00ab 06       		.uleb128 0x6
 4918 00ac 06090000 		.4byte	.LASF15
 4919 00b0 04       		.byte	0x4
 4920 00b1 9201     		.2byte	0x192
 4921 00b3 2C000000 		.4byte	0x2c
 4922 00b7 06       		.uleb128 0x6
 4923 00b8 F5030000 		.4byte	.LASF16
 4924 00bc 04       		.byte	0x4
 4925 00bd 9301     		.2byte	0x193
 4926 00bf 3A000000 		.4byte	0x3a
 4927 00c3 06       		.uleb128 0x6
 4928 00c4 6C050000 		.4byte	.LASF17
 4929 00c8 04       		.byte	0x4
 4930 00c9 9401     		.2byte	0x194
 4931 00cb 5E000000 		.4byte	0x5e
 4932 00cf 06       		.uleb128 0x6
 4933 00d0 FC030000 		.4byte	.LASF18
 4934 00d4 04       		.byte	0x4
 4935 00d5 9501     		.2byte	0x195
 4936 00d7 25000000 		.4byte	0x25
 4937 00db 06       		.uleb128 0x6
 4938 00dc E1000000 		.4byte	.LASF19
 4939 00e0 04       		.byte	0x4
 4940 00e1 9601     		.2byte	0x196
 4941 00e3 33000000 		.4byte	0x33
 4942 00e7 02       		.uleb128 0x2
 4943 00e8 04       		.byte	0x4
 4944 00e9 04       		.byte	0x4
 4945 00ea 1E020000 		.4byte	.LASF20
 4946 00ee 02       		.uleb128 0x2
 4947 00ef 08       		.byte	0x8
 4948 00f0 04       		.byte	0x4
 4949 00f1 0C090000 		.4byte	.LASF21
 4950 00f5 07       		.uleb128 0x7
 4951 00f6 A0000000 		.4byte	0xa0
 4952 00fa 05010000 		.4byte	0x105
 4953 00fe 08       		.uleb128 0x8
 4954 00ff 81000000 		.4byte	0x81
 4955 0103 01       		.byte	0x1
 4956 0104 00       		.byte	0
 4957 0105 02       		.uleb128 0x2
 4958 0106 08       		.byte	0x8
 4959 0107 04       		.byte	0x4
 4960 0108 E8050000 		.4byte	.LASF22
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 108


 4961 010c 09       		.uleb128 0x9
 4962 010d 4B080000 		.4byte	.LASF31
 4963 0111 01       		.byte	0x1
 4964 0112 05       		.byte	0x5
 4965 0113 5D       		.byte	0x5d
 4966 0114 49010000 		.4byte	0x149
 4967 0118 0A       		.uleb128 0xa
 4968 0119 3D020000 		.4byte	.LASF23
 4969 011d 00       		.sleb128 0
 4970 011e 0A       		.uleb128 0xa
 4971 011f F4000000 		.4byte	.LASF24
 4972 0123 01       		.sleb128 1
 4973 0124 0A       		.uleb128 0xa
 4974 0125 5B000000 		.4byte	.LASF25
 4975 0129 02       		.sleb128 2
 4976 012a 0A       		.uleb128 0xa
 4977 012b D7050000 		.4byte	.LASF26
 4978 012f 03       		.sleb128 3
 4979 0130 0A       		.uleb128 0xa
 4980 0131 0F010000 		.4byte	.LASF27
 4981 0135 04       		.sleb128 4
 4982 0136 0A       		.uleb128 0xa
 4983 0137 E7010000 		.4byte	.LASF28
 4984 013b 05       		.sleb128 5
 4985 013c 0A       		.uleb128 0xa
 4986 013d FB060000 		.4byte	.LASF29
 4987 0141 06       		.sleb128 6
 4988 0142 0A       		.uleb128 0xa
 4989 0143 46090000 		.4byte	.LASF30
 4990 0147 07       		.sleb128 7
 4991 0148 00       		.byte	0
 4992 0149 09       		.uleb128 0x9
 4993 014a 4A010000 		.4byte	.LASF32
 4994 014e 01       		.byte	0x1
 4995 014f 05       		.byte	0x5
 4996 0150 5E       		.byte	0x5e
 4997 0151 86010000 		.4byte	0x186
 4998 0155 0A       		.uleb128 0xa
 4999 0156 CD060000 		.4byte	.LASF33
 5000 015a 00       		.sleb128 0
 5001 015b 0A       		.uleb128 0xa
 5002 015c 2C040000 		.4byte	.LASF34
 5003 0160 01       		.sleb128 1
 5004 0161 0A       		.uleb128 0xa
 5005 0162 9C060000 		.4byte	.LASF35
 5006 0166 02       		.sleb128 2
 5007 0167 0A       		.uleb128 0xa
 5008 0168 A1010000 		.4byte	.LASF36
 5009 016c 03       		.sleb128 3
 5010 016d 0A       		.uleb128 0xa
 5011 016e E4080000 		.4byte	.LASF37
 5012 0172 04       		.sleb128 4
 5013 0173 0A       		.uleb128 0xa
 5014 0174 24090000 		.4byte	.LASF38
 5015 0178 05       		.sleb128 5
 5016 0179 0A       		.uleb128 0xa
 5017 017a 70000000 		.4byte	.LASF39
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 109


 5018 017e 06       		.sleb128 6
 5019 017f 0A       		.uleb128 0xa
 5020 0180 EE060000 		.4byte	.LASF40
 5021 0184 07       		.sleb128 7
 5022 0185 00       		.byte	0
 5023 0186 0B       		.uleb128 0xb
 5024 0187 8C050000 		.4byte	.LASF198
 5025 018b 20       		.byte	0x20
 5026 018c 05       		.byte	0x5
 5027 018d 64       		.byte	0x64
 5028 018e 5F020000 		.4byte	0x25f
 5029 0192 0C       		.uleb128 0xc
 5030 0193 AA050000 		.4byte	.LASF41
 5031 0197 05       		.byte	0x5
 5032 0198 65       		.byte	0x65
 5033 0199 CF000000 		.4byte	0xcf
 5034 019d 00       		.byte	0
 5035 019e 0C       		.uleb128 0xc
 5036 019f 37020000 		.4byte	.LASF42
 5037 01a3 05       		.byte	0x5
 5038 01a4 66       		.byte	0x66
 5039 01a5 AB000000 		.4byte	0xab
 5040 01a9 01       		.byte	0x1
 5041 01aa 0C       		.uleb128 0xc
 5042 01ab C8070000 		.4byte	.LASF43
 5043 01af 05       		.byte	0x5
 5044 01b0 67       		.byte	0x67
 5045 01b1 DB000000 		.4byte	0xdb
 5046 01b5 02       		.byte	0x2
 5047 01b6 0C       		.uleb128 0xc
 5048 01b7 81030000 		.4byte	.LASF44
 5049 01bb 05       		.byte	0x5
 5050 01bc 68       		.byte	0x68
 5051 01bd DB000000 		.4byte	0xdb
 5052 01c1 04       		.byte	0x4
 5053 01c2 0C       		.uleb128 0xc
 5054 01c3 D2080000 		.4byte	.LASF45
 5055 01c7 05       		.byte	0x5
 5056 01c8 69       		.byte	0x69
 5057 01c9 DB000000 		.4byte	0xdb
 5058 01cd 06       		.byte	0x6
 5059 01ce 0C       		.uleb128 0xc
 5060 01cf 4C090000 		.4byte	.LASF46
 5061 01d3 05       		.byte	0x5
 5062 01d4 6A       		.byte	0x6a
 5063 01d5 DB000000 		.4byte	0xdb
 5064 01d9 08       		.byte	0x8
 5065 01da 0C       		.uleb128 0xc
 5066 01db 32050000 		.4byte	.LASF47
 5067 01df 05       		.byte	0x5
 5068 01e0 6B       		.byte	0x6b
 5069 01e1 DB000000 		.4byte	0xdb
 5070 01e5 0A       		.byte	0xa
 5071 01e6 0C       		.uleb128 0xc
 5072 01e7 B2030000 		.4byte	.LASF48
 5073 01eb 05       		.byte	0x5
 5074 01ec 6C       		.byte	0x6c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 110


 5075 01ed DB000000 		.4byte	0xdb
 5076 01f1 0C       		.byte	0xc
 5077 01f2 0C       		.uleb128 0xc
 5078 01f3 B9050000 		.4byte	.LASF49
 5079 01f7 05       		.byte	0x5
 5080 01f8 6D       		.byte	0x6d
 5081 01f9 DB000000 		.4byte	0xdb
 5082 01fd 0E       		.byte	0xe
 5083 01fe 0C       		.uleb128 0xc
 5084 01ff 80040000 		.4byte	.LASF50
 5085 0203 05       		.byte	0x5
 5086 0204 6E       		.byte	0x6e
 5087 0205 DB000000 		.4byte	0xdb
 5088 0209 10       		.byte	0x10
 5089 020a 0C       		.uleb128 0xc
 5090 020b 40070000 		.4byte	.LASF51
 5091 020f 05       		.byte	0x5
 5092 0210 6F       		.byte	0x6f
 5093 0211 DB000000 		.4byte	0xdb
 5094 0215 12       		.byte	0x12
 5095 0216 0C       		.uleb128 0xc
 5096 0217 70090000 		.4byte	.LASF52
 5097 021b 05       		.byte	0x5
 5098 021c 70       		.byte	0x70
 5099 021d DB000000 		.4byte	0xdb
 5100 0221 14       		.byte	0x14
 5101 0222 0C       		.uleb128 0xc
 5102 0223 0E040000 		.4byte	.LASF53
 5103 0227 05       		.byte	0x5
 5104 0228 71       		.byte	0x71
 5105 0229 DB000000 		.4byte	0xdb
 5106 022d 16       		.byte	0x16
 5107 022e 0C       		.uleb128 0xc
 5108 022f 42010000 		.4byte	.LASF54
 5109 0233 05       		.byte	0x5
 5110 0234 72       		.byte	0x72
 5111 0235 DB000000 		.4byte	0xdb
 5112 0239 18       		.byte	0x18
 5113 023a 0C       		.uleb128 0xc
 5114 023b ED030000 		.4byte	.LASF55
 5115 023f 05       		.byte	0x5
 5116 0240 73       		.byte	0x73
 5117 0241 DB000000 		.4byte	0xdb
 5118 0245 1A       		.byte	0x1a
 5119 0246 0C       		.uleb128 0xc
 5120 0247 29050000 		.4byte	.LASF56
 5121 024b 05       		.byte	0x5
 5122 024c 74       		.byte	0x74
 5123 024d DB000000 		.4byte	0xdb
 5124 0251 1C       		.byte	0x1c
 5125 0252 0C       		.uleb128 0xc
 5126 0253 07020000 		.4byte	.LASF57
 5127 0257 05       		.byte	0x5
 5128 0258 75       		.byte	0x75
 5129 0259 DB000000 		.4byte	0xdb
 5130 025d 1E       		.byte	0x1e
 5131 025e 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 111


 5132 025f 0D       		.uleb128 0xd
 5133 0260 F3080000 		.4byte	.LASF58
 5134 0264 01       		.byte	0x1
 5135 0265 5A       		.byte	0x5a
 5136 0266 00000000 		.4byte	.LFB63
 5137 026a 0C000000 		.4byte	.LFE63-.LFB63
 5138 026e 01       		.uleb128 0x1
 5139 026f 9C       		.byte	0x9c
 5140 0270 0E       		.uleb128 0xe
 5141 0271 48070000 		.4byte	.LASF59
 5142 0275 01       		.byte	0x1
 5143 0276 60       		.byte	0x60
 5144 0277 00000000 		.4byte	.LFB64
 5145 027b 2C000000 		.4byte	.LFE64-.LFB64
 5146 027f 01       		.uleb128 0x1
 5147 0280 9C       		.byte	0x9c
 5148 0281 0E       		.uleb128 0xe
 5149 0282 14020000 		.4byte	.LASF60
 5150 0286 01       		.byte	0x1
 5151 0287 69       		.byte	0x69
 5152 0288 00000000 		.4byte	.LFB65
 5153 028c A4010000 		.4byte	.LFE65-.LFB65
 5154 0290 01       		.uleb128 0x1
 5155 0291 9C       		.byte	0x9c
 5156 0292 0E       		.uleb128 0xe
 5157 0293 AE020000 		.4byte	.LASF61
 5158 0297 01       		.byte	0x1
 5159 0298 A1       		.byte	0xa1
 5160 0299 00000000 		.4byte	.LFB66
 5161 029d AC000000 		.4byte	.LFE66-.LFB66
 5162 02a1 01       		.uleb128 0x1
 5163 02a2 9C       		.byte	0x9c
 5164 02a3 0D       		.uleb128 0xd
 5165 02a4 1D080000 		.4byte	.LASF62
 5166 02a8 01       		.byte	0x1
 5167 02a9 C4       		.byte	0xc4
 5168 02aa 00000000 		.4byte	.LFB67
 5169 02ae 20000000 		.4byte	.LFE67-.LFB67
 5170 02b2 01       		.uleb128 0x1
 5171 02b3 9C       		.byte	0x9c
 5172 02b4 0E       		.uleb128 0xe
 5173 02b5 34030000 		.4byte	.LASF63
 5174 02b9 01       		.byte	0x1
 5175 02ba CB       		.byte	0xcb
 5176 02bb 00000000 		.4byte	.LFB68
 5177 02bf 28000000 		.4byte	.LFE68-.LFB68
 5178 02c3 01       		.uleb128 0x1
 5179 02c4 9C       		.byte	0x9c
 5180 02c5 0E       		.uleb128 0xe
 5181 02c6 F4050000 		.4byte	.LASF64
 5182 02ca 01       		.byte	0x1
 5183 02cb D4       		.byte	0xd4
 5184 02cc 00000000 		.4byte	.LFB69
 5185 02d0 0A000000 		.4byte	.LFE69-.LFB69
 5186 02d4 01       		.uleb128 0x1
 5187 02d5 9C       		.byte	0x9c
 5188 02d6 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 112


 5189 02d7 11060000 		.4byte	.LASF65
 5190 02db 01       		.byte	0x1
 5191 02dc D9       		.byte	0xd9
 5192 02dd 00000000 		.4byte	.LFB70
 5193 02e1 28000000 		.4byte	.LFE70-.LFB70
 5194 02e5 01       		.uleb128 0x1
 5195 02e6 9C       		.byte	0x9c
 5196 02e7 0F       		.uleb128 0xf
 5197 02e8 EE080000 		.4byte	.LASF73
 5198 02ec 01       		.byte	0x1
 5199 02ed E4       		.byte	0xe4
 5200 02ee 73000000 		.4byte	0x73
 5201 02f2 00000000 		.4byte	.LFB71
 5202 02f6 2C060000 		.4byte	.LFE71-.LFB71
 5203 02fa 01       		.uleb128 0x1
 5204 02fb 9C       		.byte	0x9c
 5205 02fc CD030000 		.4byte	0x3cd
 5206 0300 10       		.uleb128 0x10
 5207 0301 25030000 		.4byte	.LASF66
 5208 0305 01       		.byte	0x1
 5209 0306 1D01     		.2byte	0x11d
 5210 0308 B7000000 		.4byte	0xb7
 5211 030c 02       		.uleb128 0x2
 5212 030d 91       		.byte	0x91
 5213 030e 76       		.sleb128 -10
 5214 030f 11       		.uleb128 0x11
 5215 0310 66000000 		.4byte	.LBB2
 5216 0314 8C050000 		.4byte	.LBE2-.LBB2
 5217 0318 10       		.uleb128 0x10
 5218 0319 A1020000 		.4byte	.LASF67
 5219 031d 01       		.byte	0x1
 5220 031e 2B01     		.2byte	0x12b
 5221 0320 CD030000 		.4byte	0x3cd
 5222 0324 02       		.uleb128 0x2
 5223 0325 91       		.byte	0x91
 5224 0326 6C       		.sleb128 -20
 5225 0327 11       		.uleb128 0x11
 5226 0328 3C010000 		.4byte	.LBB3
 5227 032c 54040000 		.4byte	.LBE3-.LBB3
 5228 0330 10       		.uleb128 0x10
 5229 0331 92040000 		.4byte	.LASF68
 5230 0335 01       		.byte	0x1
 5231 0336 5501     		.2byte	0x155
 5232 0338 8E000000 		.4byte	0x8e
 5233 033c 02       		.uleb128 0x2
 5234 033d 91       		.byte	0x91
 5235 033e 75       		.sleb128 -11
 5236 033f 12       		.uleb128 0x12
 5237 0340 88010000 		.4byte	.LBB4
 5238 0344 58010000 		.4byte	.LBE4-.LBB4
 5239 0348 75030000 		.4byte	0x375
 5240 034c 13       		.uleb128 0x13
 5241 034d 6D657300 		.ascii	"mes\000"
 5242 0351 01       		.byte	0x1
 5243 0352 5C01     		.2byte	0x15c
 5244 0354 DD030000 		.4byte	0x3dd
 5245 0358 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 113


 5246 0359 91       		.byte	0x91
 5247 035a 5C       		.sleb128 -36
 5248 035b 11       		.uleb128 0x11
 5249 035c A6010000 		.4byte	.LBB5
 5250 0360 3A010000 		.4byte	.LBE5-.LBB5
 5251 0364 10       		.uleb128 0x10
 5252 0365 01040000 		.4byte	.LASF69
 5253 0369 01       		.byte	0x1
 5254 036a 6D01     		.2byte	0x16d
 5255 036c AB000000 		.4byte	0xab
 5256 0370 02       		.uleb128 0x2
 5257 0371 91       		.byte	0x91
 5258 0372 74       		.sleb128 -12
 5259 0373 00       		.byte	0
 5260 0374 00       		.byte	0
 5261 0375 12       		.uleb128 0x12
 5262 0376 90030000 		.4byte	.LBB6
 5263 037a AC000000 		.4byte	.LBE6-.LBB6
 5264 037e A1030000 		.4byte	0x3a1
 5265 0382 13       		.uleb128 0x13
 5266 0383 6D657300 		.ascii	"mes\000"
 5267 0387 01       		.byte	0x1
 5268 0388 A501     		.2byte	0x1a5
 5269 038a DD030000 		.4byte	0x3dd
 5270 038e 02       		.uleb128 0x2
 5271 038f 91       		.byte	0x91
 5272 0390 4C       		.sleb128 -52
 5273 0391 10       		.uleb128 0x10
 5274 0392 01040000 		.4byte	.LASF69
 5275 0396 01       		.byte	0x1
 5276 0397 A901     		.2byte	0x1a9
 5277 0399 AB000000 		.4byte	0xab
 5278 039d 02       		.uleb128 0x2
 5279 039e 91       		.byte	0x91
 5280 039f 73       		.sleb128 -13
 5281 03a0 00       		.byte	0
 5282 03a1 11       		.uleb128 0x11
 5283 03a2 54040000 		.4byte	.LBB7
 5284 03a6 32010000 		.4byte	.LBE7-.LBB7
 5285 03aa 13       		.uleb128 0x13
 5286 03ab 6D657300 		.ascii	"mes\000"
 5287 03af 01       		.byte	0x1
 5288 03b0 C301     		.2byte	0x1c3
 5289 03b2 DD030000 		.4byte	0x3dd
 5290 03b6 03       		.uleb128 0x3
 5291 03b7 91       		.byte	0x91
 5292 03b8 BC7F     		.sleb128 -68
 5293 03ba 10       		.uleb128 0x10
 5294 03bb 01040000 		.4byte	.LASF69
 5295 03bf 01       		.byte	0x1
 5296 03c0 C701     		.2byte	0x1c7
 5297 03c2 AB000000 		.4byte	0xab
 5298 03c6 02       		.uleb128 0x2
 5299 03c7 91       		.byte	0x91
 5300 03c8 72       		.sleb128 -14
 5301 03c9 00       		.byte	0
 5302 03ca 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 114


 5303 03cb 00       		.byte	0
 5304 03cc 00       		.byte	0
 5305 03cd 07       		.uleb128 0x7
 5306 03ce AB000000 		.4byte	0xab
 5307 03d2 DD030000 		.4byte	0x3dd
 5308 03d6 08       		.uleb128 0x8
 5309 03d7 81000000 		.4byte	0x81
 5310 03db 04       		.byte	0x4
 5311 03dc 00       		.byte	0
 5312 03dd 07       		.uleb128 0x7
 5313 03de 8E000000 		.4byte	0x8e
 5314 03e2 ED030000 		.4byte	0x3ed
 5315 03e6 08       		.uleb128 0x8
 5316 03e7 81000000 		.4byte	0x81
 5317 03eb 0F       		.byte	0xf
 5318 03ec 00       		.byte	0
 5319 03ed 14       		.uleb128 0x14
 5320 03ee 2C090000 		.4byte	.LASF76
 5321 03f2 01       		.byte	0x1
 5322 03f3 1D02     		.2byte	0x21d
 5323 03f5 00000000 		.4byte	.LFB72
 5324 03f9 60010000 		.4byte	.LFE72-.LFB72
 5325 03fd 01       		.uleb128 0x1
 5326 03fe 9C       		.byte	0x9c
 5327 03ff 3B040000 		.4byte	0x43b
 5328 0403 11       		.uleb128 0x11
 5329 0404 10000000 		.4byte	.LBB8
 5330 0408 34010000 		.4byte	.LBE8-.LBB8
 5331 040c 10       		.uleb128 0x10
 5332 040d 35010000 		.4byte	.LASF70
 5333 0411 01       		.byte	0x1
 5334 0412 2302     		.2byte	0x223
 5335 0414 B7000000 		.4byte	0xb7
 5336 0418 02       		.uleb128 0x2
 5337 0419 91       		.byte	0x91
 5338 041a 76       		.sleb128 -10
 5339 041b 10       		.uleb128 0x10
 5340 041c 9B070000 		.4byte	.LASF71
 5341 0420 01       		.byte	0x1
 5342 0421 2402     		.2byte	0x224
 5343 0423 3B040000 		.4byte	0x43b
 5344 0427 02       		.uleb128 0x2
 5345 0428 91       		.byte	0x91
 5346 0429 68       		.sleb128 -24
 5347 042a 10       		.uleb128 0x10
 5348 042b 43020000 		.4byte	.LASF72
 5349 042f 01       		.byte	0x1
 5350 0430 2502     		.2byte	0x225
 5351 0432 3B040000 		.4byte	0x43b
 5352 0436 02       		.uleb128 0x2
 5353 0437 91       		.byte	0x91
 5354 0438 5C       		.sleb128 -36
 5355 0439 00       		.byte	0
 5356 043a 00       		.byte	0
 5357 043b 07       		.uleb128 0x7
 5358 043c 8E000000 		.4byte	0x8e
 5359 0440 4B040000 		.4byte	0x44b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 115


 5360 0444 08       		.uleb128 0x8
 5361 0445 81000000 		.4byte	0x81
 5362 0449 0B       		.byte	0xb
 5363 044a 00       		.byte	0
 5364 044b 15       		.uleb128 0x15
 5365 044c CB030000 		.4byte	.LASF74
 5366 0450 01       		.byte	0x1
 5367 0451 5E02     		.2byte	0x25e
 5368 0453 00000000 		.4byte	.LFB73
 5369 0457 18000000 		.4byte	.LFE73-.LFB73
 5370 045b 01       		.uleb128 0x1
 5371 045c 9C       		.byte	0x9c
 5372 045d 71040000 		.4byte	0x471
 5373 0461 16       		.uleb128 0x16
 5374 0462 64697200 		.ascii	"dir\000"
 5375 0466 01       		.byte	0x1
 5376 0467 5E02     		.2byte	0x25e
 5377 0469 AB000000 		.4byte	0xab
 5378 046d 02       		.uleb128 0x2
 5379 046e 91       		.byte	0x91
 5380 046f 77       		.sleb128 -9
 5381 0470 00       		.byte	0
 5382 0471 15       		.uleb128 0x15
 5383 0472 20040000 		.4byte	.LASF75
 5384 0476 01       		.byte	0x1
 5385 0477 6302     		.2byte	0x263
 5386 0479 00000000 		.4byte	.LFB74
 5387 047d 18000000 		.4byte	.LFE74-.LFB74
 5388 0481 01       		.uleb128 0x1
 5389 0482 9C       		.byte	0x9c
 5390 0483 97040000 		.4byte	0x497
 5391 0487 16       		.uleb128 0x16
 5392 0488 64697200 		.ascii	"dir\000"
 5393 048c 01       		.byte	0x1
 5394 048d 6302     		.2byte	0x263
 5395 048f AB000000 		.4byte	0xab
 5396 0493 02       		.uleb128 0x2
 5397 0494 91       		.byte	0x91
 5398 0495 77       		.sleb128 -9
 5399 0496 00       		.byte	0
 5400 0497 17       		.uleb128 0x17
 5401 0498 51080000 		.4byte	.LASF77
 5402 049c 01       		.byte	0x1
 5403 049d 6802     		.2byte	0x268
 5404 049f 00000000 		.4byte	.LFB75
 5405 04a3 54000000 		.4byte	.LFE75-.LFB75
 5406 04a7 01       		.uleb128 0x1
 5407 04a8 9C       		.byte	0x9c
 5408 04a9 BD040000 		.4byte	0x4bd
 5409 04ad 13       		.uleb128 0x13
 5410 04ae 6D657300 		.ascii	"mes\000"
 5411 04b2 01       		.byte	0x1
 5412 04b3 6D02     		.2byte	0x26d
 5413 04b5 DD030000 		.4byte	0x3dd
 5414 04b9 02       		.uleb128 0x2
 5415 04ba 91       		.byte	0x91
 5416 04bb 68       		.sleb128 -24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 116


 5417 04bc 00       		.byte	0
 5418 04bd 15       		.uleb128 0x15
 5419 04be 24020000 		.4byte	.LASF78
 5420 04c2 01       		.byte	0x1
 5421 04c3 7202     		.2byte	0x272
 5422 04c5 00000000 		.4byte	.LFB76
 5423 04c9 F4000000 		.4byte	.LFE76-.LFB76
 5424 04cd 01       		.uleb128 0x1
 5425 04ce 9C       		.byte	0x9c
 5426 04cf 10050000 		.4byte	0x510
 5427 04d3 18       		.uleb128 0x18
 5428 04d4 19070000 		.4byte	.LASF79
 5429 04d8 01       		.byte	0x1
 5430 04d9 7202     		.2byte	0x272
 5431 04db EE000000 		.4byte	0xee
 5432 04df 02       		.uleb128 0x2
 5433 04e0 91       		.byte	0x91
 5434 04e1 68       		.sleb128 -24
 5435 04e2 18       		.uleb128 0x18
 5436 04e3 4D040000 		.4byte	.LASF80
 5437 04e7 01       		.byte	0x1
 5438 04e8 7202     		.2byte	0x272
 5439 04ea EE000000 		.4byte	0xee
 5440 04ee 02       		.uleb128 0x2
 5441 04ef 91       		.byte	0x91
 5442 04f0 60       		.sleb128 -32
 5443 04f1 10       		.uleb128 0x10
 5444 04f2 5C020000 		.4byte	.LASF81
 5445 04f6 01       		.byte	0x1
 5446 04f7 8702     		.2byte	0x287
 5447 04f9 DB000000 		.4byte	0xdb
 5448 04fd 02       		.uleb128 0x2
 5449 04fe 91       		.byte	0x91
 5450 04ff 76       		.sleb128 -10
 5451 0500 10       		.uleb128 0x10
 5452 0501 80050000 		.4byte	.LASF82
 5453 0505 01       		.byte	0x1
 5454 0506 8802     		.2byte	0x288
 5455 0508 DB000000 		.4byte	0xdb
 5456 050c 02       		.uleb128 0x2
 5457 050d 91       		.byte	0x91
 5458 050e 74       		.sleb128 -12
 5459 050f 00       		.byte	0
 5460 0510 19       		.uleb128 0x19
 5461 0511 62080000 		.4byte	.LASF83
 5462 0515 01       		.byte	0x1
 5463 0516 8E02     		.2byte	0x28e
 5464 0518 00000000 		.4byte	.LFB77
 5465 051c 18000000 		.4byte	.LFE77-.LFB77
 5466 0520 01       		.uleb128 0x1
 5467 0521 9C       		.byte	0x9c
 5468 0522 19       		.uleb128 0x19
 5469 0523 90090000 		.4byte	.LASF84
 5470 0527 01       		.byte	0x1
 5471 0528 9402     		.2byte	0x294
 5472 052a 00000000 		.4byte	.LFB78
 5473 052e 18000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 117


 5474 0532 01       		.uleb128 0x1
 5475 0533 9C       		.byte	0x9c
 5476 0534 19       		.uleb128 0x19
 5477 0535 D3070000 		.4byte	.LASF85
 5478 0539 01       		.byte	0x1
 5479 053a 9A02     		.2byte	0x29a
 5480 053c 00000000 		.4byte	.LFB79
 5481 0540 22000000 		.4byte	.LFE79-.LFB79
 5482 0544 01       		.uleb128 0x1
 5483 0545 9C       		.byte	0x9c
 5484 0546 19       		.uleb128 0x19
 5485 0547 67020000 		.4byte	.LASF86
 5486 054b 01       		.byte	0x1
 5487 054c A002     		.2byte	0x2a0
 5488 054e 00000000 		.4byte	.LFB80
 5489 0552 1C000000 		.4byte	.LFE80-.LFB80
 5490 0556 01       		.uleb128 0x1
 5491 0557 9C       		.byte	0x9c
 5492 0558 19       		.uleb128 0x19
 5493 0559 36070000 		.4byte	.LASF87
 5494 055d 01       		.byte	0x1
 5495 055e A502     		.2byte	0x2a5
 5496 0560 00000000 		.4byte	.LFB81
 5497 0564 28000000 		.4byte	.LFE81-.LFB81
 5498 0568 01       		.uleb128 0x1
 5499 0569 9C       		.byte	0x9c
 5500 056a 19       		.uleb128 0x19
 5501 056b 75020000 		.4byte	.LASF88
 5502 056f 01       		.byte	0x1
 5503 0570 AA02     		.2byte	0x2aa
 5504 0572 00000000 		.4byte	.LFB82
 5505 0576 2C000000 		.4byte	.LFE82-.LFB82
 5506 057a 01       		.uleb128 0x1
 5507 057b 9C       		.byte	0x9c
 5508 057c 19       		.uleb128 0x19
 5509 057d E7030000 		.4byte	.LASF89
 5510 0581 01       		.byte	0x1
 5511 0582 AF02     		.2byte	0x2af
 5512 0584 00000000 		.4byte	.LFB83
 5513 0588 44000000 		.4byte	.LFE83-.LFB83
 5514 058c 01       		.uleb128 0x1
 5515 058d 9C       		.byte	0x9c
 5516 058e 19       		.uleb128 0x19
 5517 058f C8020000 		.4byte	.LASF90
 5518 0593 01       		.byte	0x1
 5519 0594 B402     		.2byte	0x2b4
 5520 0596 00000000 		.4byte	.LFB84
 5521 059a 38000000 		.4byte	.LFE84-.LFB84
 5522 059e 01       		.uleb128 0x1
 5523 059f 9C       		.byte	0x9c
 5524 05a0 19       		.uleb128 0x19
 5525 05a1 8E060000 		.4byte	.LASF91
 5526 05a5 01       		.byte	0x1
 5527 05a6 BD02     		.2byte	0x2bd
 5528 05a8 00000000 		.4byte	.LFB85
 5529 05ac 38000000 		.4byte	.LFE85-.LFB85
 5530 05b0 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 118


 5531 05b1 9C       		.byte	0x9c
 5532 05b2 19       		.uleb128 0x19
 5533 05b3 66060000 		.4byte	.LASF92
 5534 05b7 01       		.byte	0x1
 5535 05b8 C602     		.2byte	0x2c6
 5536 05ba 00000000 		.4byte	.LFB86
 5537 05be 38000000 		.4byte	.LFE86-.LFB86
 5538 05c2 01       		.uleb128 0x1
 5539 05c3 9C       		.byte	0x9c
 5540 05c4 19       		.uleb128 0x19
 5541 05c5 F2010000 		.4byte	.LASF93
 5542 05c9 01       		.byte	0x1
 5543 05ca CF02     		.2byte	0x2cf
 5544 05cc 00000000 		.4byte	.LFB87
 5545 05d0 14000000 		.4byte	.LFE87-.LFB87
 5546 05d4 01       		.uleb128 0x1
 5547 05d5 9C       		.byte	0x9c
 5548 05d6 1A       		.uleb128 0x1a
 5549 05d7 DE020000 		.4byte	.LASF94
 5550 05db 01       		.byte	0x1
 5551 05dc D402     		.2byte	0x2d4
 5552 05de 00000000 		.4byte	.LFB88
 5553 05e2 18000000 		.4byte	.LFE88-.LFB88
 5554 05e6 01       		.uleb128 0x1
 5555 05e7 9C       		.byte	0x9c
 5556 05e8 1A       		.uleb128 0x1a
 5557 05e9 88040000 		.4byte	.LASF95
 5558 05ed 01       		.byte	0x1
 5559 05ee D802     		.2byte	0x2d8
 5560 05f0 00000000 		.4byte	.LFB89
 5561 05f4 18000000 		.4byte	.LFE89-.LFB89
 5562 05f8 01       		.uleb128 0x1
 5563 05f9 9C       		.byte	0x9c
 5564 05fa 1A       		.uleb128 0x1a
 5565 05fb 9B090000 		.4byte	.LASF96
 5566 05ff 01       		.byte	0x1
 5567 0600 DD02     		.2byte	0x2dd
 5568 0602 00000000 		.4byte	.LFB90
 5569 0606 18000000 		.4byte	.LFE90-.LFB90
 5570 060a 01       		.uleb128 0x1
 5571 060b 9C       		.byte	0x9c
 5572 060c 1A       		.uleb128 0x1a
 5573 060d 72030000 		.4byte	.LASF97
 5574 0611 01       		.byte	0x1
 5575 0612 E102     		.2byte	0x2e1
 5576 0614 00000000 		.4byte	.LFB91
 5577 0618 18000000 		.4byte	.LFE91-.LFB91
 5578 061c 01       		.uleb128 0x1
 5579 061d 9C       		.byte	0x9c
 5580 061e 15       		.uleb128 0x15
 5581 061f BD060000 		.4byte	.LASF98
 5582 0623 01       		.byte	0x1
 5583 0624 E802     		.2byte	0x2e8
 5584 0626 00000000 		.4byte	.LFB92
 5585 062a B8000000 		.4byte	.LFE92-.LFB92
 5586 062e 01       		.uleb128 0x1
 5587 062f 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 119


 5588 0630 44060000 		.4byte	0x644
 5589 0634 10       		.uleb128 0x10
 5590 0635 3A050000 		.4byte	.LASF99
 5591 0639 01       		.byte	0x1
 5592 063a E902     		.2byte	0x2e9
 5593 063c 8E000000 		.4byte	0x8e
 5594 0640 02       		.uleb128 0x2
 5595 0641 91       		.byte	0x91
 5596 0642 6F       		.sleb128 -17
 5597 0643 00       		.byte	0
 5598 0644 15       		.uleb128 0x15
 5599 0645 DF050000 		.4byte	.LASF100
 5600 0649 01       		.byte	0x1
 5601 064a 0503     		.2byte	0x305
 5602 064c 00000000 		.4byte	.LFB93
 5603 0650 F8010000 		.4byte	.LFE93-.LFB93
 5604 0654 01       		.uleb128 0x1
 5605 0655 9C       		.byte	0x9c
 5606 0656 90060000 		.4byte	0x690
 5607 065a 10       		.uleb128 0x10
 5608 065b 3A050000 		.4byte	.LASF99
 5609 065f 01       		.byte	0x1
 5610 0660 0703     		.2byte	0x307
 5611 0662 8E000000 		.4byte	0x8e
 5612 0666 02       		.uleb128 0x2
 5613 0667 91       		.byte	0x91
 5614 0668 73       		.sleb128 -13
 5615 0669 11       		.uleb128 0x11
 5616 066a 88000000 		.4byte	.LBB9
 5617 066e 3A010000 		.4byte	.LBE9-.LBB9
 5618 0672 13       		.uleb128 0x13
 5619 0673 6D657300 		.ascii	"mes\000"
 5620 0677 01       		.byte	0x1
 5621 0678 2D03     		.2byte	0x32d
 5622 067a DD030000 		.4byte	0x3dd
 5623 067e 02       		.uleb128 0x2
 5624 067f 91       		.byte	0x91
 5625 0680 60       		.sleb128 -32
 5626 0681 13       		.uleb128 0x13
 5627 0682 6900     		.ascii	"i\000"
 5628 0684 01       		.byte	0x1
 5629 0685 4003     		.2byte	0x340
 5630 0687 73000000 		.4byte	0x73
 5631 068b 02       		.uleb128 0x2
 5632 068c 91       		.byte	0x91
 5633 068d 74       		.sleb128 -12
 5634 068e 00       		.byte	0
 5635 068f 00       		.byte	0
 5636 0690 19       		.uleb128 0x19
 5637 0691 BD020000 		.4byte	.LASF101
 5638 0695 01       		.byte	0x1
 5639 0696 5303     		.2byte	0x353
 5640 0698 00000000 		.4byte	.LFB94
 5641 069c 40000000 		.4byte	.LFE94-.LFB94
 5642 06a0 01       		.uleb128 0x1
 5643 06a1 9C       		.byte	0x9c
 5644 06a2 19       		.uleb128 0x19
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 120


 5645 06a3 51020000 		.4byte	.LASF102
 5646 06a7 01       		.byte	0x1
 5647 06a8 6203     		.2byte	0x362
 5648 06aa 00000000 		.4byte	.LFB95
 5649 06ae 40000000 		.4byte	.LFE95-.LFB95
 5650 06b2 01       		.uleb128 0x1
 5651 06b3 9C       		.byte	0x9c
 5652 06b4 17       		.uleb128 0x17
 5653 06b5 90000000 		.4byte	.LASF103
 5654 06b9 01       		.byte	0x1
 5655 06ba 7203     		.2byte	0x372
 5656 06bc 00000000 		.4byte	.LFB96
 5657 06c0 30020000 		.4byte	.LFE96-.LFB96
 5658 06c4 01       		.uleb128 0x1
 5659 06c5 9C       		.byte	0x9c
 5660 06c6 25070000 		.4byte	0x725
 5661 06ca 10       		.uleb128 0x10
 5662 06cb 05030000 		.4byte	.LASF104
 5663 06cf 01       		.byte	0x1
 5664 06d0 8003     		.2byte	0x380
 5665 06d2 DB000000 		.4byte	0xdb
 5666 06d6 02       		.uleb128 0x2
 5667 06d7 91       		.byte	0x91
 5668 06d8 5E       		.sleb128 -34
 5669 06d9 10       		.uleb128 0x10
 5670 06da 58050000 		.4byte	.LASF105
 5671 06de 01       		.byte	0x1
 5672 06df 8103     		.2byte	0x381
 5673 06e1 DB000000 		.4byte	0xdb
 5674 06e5 02       		.uleb128 0x2
 5675 06e6 91       		.byte	0x91
 5676 06e7 5C       		.sleb128 -36
 5677 06e8 10       		.uleb128 0x10
 5678 06e9 A1030000 		.4byte	.LASF106
 5679 06ed 01       		.byte	0x1
 5680 06ee 8203     		.2byte	0x382
 5681 06f0 EE000000 		.4byte	0xee
 5682 06f4 02       		.uleb128 0x2
 5683 06f5 91       		.byte	0x91
 5684 06f6 68       		.sleb128 -24
 5685 06f7 10       		.uleb128 0x10
 5686 06f8 54090000 		.4byte	.LASF107
 5687 06fc 01       		.byte	0x1
 5688 06fd 8303     		.2byte	0x383
 5689 06ff EE000000 		.4byte	0xee
 5690 0703 02       		.uleb128 0x2
 5691 0704 91       		.byte	0x91
 5692 0705 60       		.sleb128 -32
 5693 0706 10       		.uleb128 0x10
 5694 0707 38040000 		.4byte	.LASF108
 5695 070b 01       		.byte	0x1
 5696 070c 8C03     		.2byte	0x38c
 5697 070e 73000000 		.4byte	0x73
 5698 0712 02       		.uleb128 0x2
 5699 0713 91       		.byte	0x91
 5700 0714 58       		.sleb128 -40
 5701 0715 10       		.uleb128 0x10
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 121


 5702 0716 FC080000 		.4byte	.LASF109
 5703 071a 01       		.byte	0x1
 5704 071b 8D03     		.2byte	0x38d
 5705 071d 73000000 		.4byte	0x73
 5706 0721 02       		.uleb128 0x2
 5707 0722 91       		.byte	0x91
 5708 0723 54       		.sleb128 -44
 5709 0724 00       		.byte	0
 5710 0725 1A       		.uleb128 0x1a
 5711 0726 AF050000 		.4byte	.LASF110
 5712 072a 01       		.byte	0x1
 5713 072b 9B03     		.2byte	0x39b
 5714 072d 00000000 		.4byte	.LFB97
 5715 0731 0C000000 		.4byte	.LFE97-.LFB97
 5716 0735 01       		.uleb128 0x1
 5717 0736 9C       		.byte	0x9c
 5718 0737 17       		.uleb128 0x17
 5719 0738 82010000 		.4byte	.LASF111
 5720 073c 01       		.byte	0x1
 5721 073d A103     		.2byte	0x3a1
 5722 073f 00000000 		.4byte	.LFB98
 5723 0743 4C010000 		.4byte	.LFE98-.LFB98
 5724 0747 01       		.uleb128 0x1
 5725 0748 9C       		.byte	0x9c
 5726 0749 79070000 		.4byte	0x779
 5727 074d 13       		.uleb128 0x13
 5728 074e 6E6C00   		.ascii	"nl\000"
 5729 0751 01       		.byte	0x1
 5730 0752 A503     		.2byte	0x3a5
 5731 0754 AB000000 		.4byte	0xab
 5732 0758 02       		.uleb128 0x2
 5733 0759 91       		.byte	0x91
 5734 075a 67       		.sleb128 -25
 5735 075b 13       		.uleb128 0x13
 5736 075c 6E7200   		.ascii	"nr\000"
 5737 075f 01       		.byte	0x1
 5738 0760 A603     		.2byte	0x3a6
 5739 0762 AB000000 		.4byte	0xab
 5740 0766 02       		.uleb128 0x2
 5741 0767 91       		.byte	0x91
 5742 0768 66       		.sleb128 -26
 5743 0769 13       		.uleb128 0x13
 5744 076a 6D696400 		.ascii	"mid\000"
 5745 076e 01       		.byte	0x1
 5746 076f A703     		.2byte	0x3a7
 5747 0771 AB000000 		.4byte	0xab
 5748 0775 02       		.uleb128 0x2
 5749 0776 91       		.byte	0x91
 5750 0777 65       		.sleb128 -27
 5751 0778 00       		.byte	0
 5752 0779 1A       		.uleb128 0x1a
 5753 077a 67010000 		.4byte	.LASF112
 5754 077e 01       		.byte	0x1
 5755 077f C103     		.2byte	0x3c1
 5756 0781 00000000 		.4byte	.LFB99
 5757 0785 0C000000 		.4byte	.LFE99-.LFB99
 5758 0789 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 122


 5759 078a 9C       		.byte	0x9c
 5760 078b 17       		.uleb128 0x17
 5761 078c 97030000 		.4byte	.LASF113
 5762 0790 01       		.byte	0x1
 5763 0791 C603     		.2byte	0x3c6
 5764 0793 00000000 		.4byte	.LFB100
 5765 0797 C0000000 		.4byte	.LFE100-.LFB100
 5766 079b 01       		.uleb128 0x1
 5767 079c 9C       		.byte	0x9c
 5768 079d D9070000 		.4byte	0x7d9
 5769 07a1 11       		.uleb128 0x11
 5770 07a2 0E000000 		.4byte	.LBB10
 5771 07a6 8E000000 		.4byte	.LBE10-.LBB10
 5772 07aa 10       		.uleb128 0x10
 5773 07ab F7020000 		.4byte	.LASF114
 5774 07af 01       		.byte	0x1
 5775 07b0 CF03     		.2byte	0x3cf
 5776 07b2 E7000000 		.4byte	0xe7
 5777 07b6 02       		.uleb128 0x2
 5778 07b7 91       		.byte	0x91
 5779 07b8 74       		.sleb128 -12
 5780 07b9 10       		.uleb128 0x10
 5781 07ba 96050000 		.4byte	.LASF115
 5782 07be 01       		.byte	0x1
 5783 07bf D003     		.2byte	0x3d0
 5784 07c1 DB000000 		.4byte	0xdb
 5785 07c5 02       		.uleb128 0x2
 5786 07c6 91       		.byte	0x91
 5787 07c7 72       		.sleb128 -14
 5788 07c8 10       		.uleb128 0x10
 5789 07c9 5A030000 		.4byte	.LASF116
 5790 07cd 01       		.byte	0x1
 5791 07ce D503     		.2byte	0x3d5
 5792 07d0 DD030000 		.4byte	0x3dd
 5793 07d4 02       		.uleb128 0x2
 5794 07d5 91       		.byte	0x91
 5795 07d6 60       		.sleb128 -32
 5796 07d7 00       		.byte	0
 5797 07d8 00       		.byte	0
 5798 07d9 17       		.uleb128 0x17
 5799 07da 3D090000 		.4byte	.LASF117
 5800 07de 01       		.byte	0x1
 5801 07df DC03     		.2byte	0x3dc
 5802 07e1 00000000 		.4byte	.LFB101
 5803 07e5 B8000000 		.4byte	.LFE101-.LFB101
 5804 07e9 01       		.uleb128 0x1
 5805 07ea 9C       		.byte	0x9c
 5806 07eb 09080000 		.4byte	0x809
 5807 07ef 11       		.uleb128 0x11
 5808 07f0 0E000000 		.4byte	.LBB11
 5809 07f4 86000000 		.4byte	.LBE11-.LBB11
 5810 07f8 10       		.uleb128 0x10
 5811 07f9 B1060000 		.4byte	.LASF118
 5812 07fd 01       		.byte	0x1
 5813 07fe E003     		.2byte	0x3e0
 5814 0800 DD030000 		.4byte	0x3dd
 5815 0804 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 123


 5816 0805 91       		.byte	0x91
 5817 0806 68       		.sleb128 -24
 5818 0807 00       		.byte	0
 5819 0808 00       		.byte	0
 5820 0809 15       		.uleb128 0x15
 5821 080a 50070000 		.4byte	.LASF119
 5822 080e 01       		.byte	0x1
 5823 080f F103     		.2byte	0x3f1
 5824 0811 00000000 		.4byte	.LFB102
 5825 0815 4A000000 		.4byte	.LFE102-.LFB102
 5826 0819 01       		.uleb128 0x1
 5827 081a 9C       		.byte	0x9c
 5828 081b 2F080000 		.4byte	0x82f
 5829 081f 18       		.uleb128 0x18
 5830 0820 4F030000 		.4byte	.LASF120
 5831 0824 01       		.byte	0x1
 5832 0825 F103     		.2byte	0x3f1
 5833 0827 2F080000 		.4byte	0x82f
 5834 082b 02       		.uleb128 0x2
 5835 082c 91       		.byte	0x91
 5836 082d 6C       		.sleb128 -20
 5837 082e 00       		.byte	0
 5838 082f 05       		.uleb128 0x5
 5839 0830 04       		.byte	0x4
 5840 0831 AB000000 		.4byte	0xab
 5841 0835 15       		.uleb128 0x15
 5842 0836 29070000 		.4byte	.LASF121
 5843 083a 01       		.byte	0x1
 5844 083b FC03     		.2byte	0x3fc
 5845 083d 00000000 		.4byte	.LFB103
 5846 0841 68000000 		.4byte	.LFE103-.LFB103
 5847 0845 01       		.uleb128 0x1
 5848 0846 9C       		.byte	0x9c
 5849 0847 72080000 		.4byte	0x872
 5850 084b 16       		.uleb128 0x16
 5851 084c 7300     		.ascii	"s\000"
 5852 084e 01       		.byte	0x1
 5853 084f FC03     		.2byte	0x3fc
 5854 0851 88000000 		.4byte	0x88
 5855 0855 02       		.uleb128 0x2
 5856 0856 91       		.byte	0x91
 5857 0857 6C       		.sleb128 -20
 5858 0858 11       		.uleb128 0x11
 5859 0859 10000000 		.4byte	.LBB12
 5860 085d 48000000 		.4byte	.LBE12-.LBB12
 5861 0861 13       		.uleb128 0x13
 5862 0862 636E7400 		.ascii	"cnt\000"
 5863 0866 01       		.byte	0x1
 5864 0867 0304     		.2byte	0x403
 5865 0869 C3000000 		.4byte	0xc3
 5866 086d 02       		.uleb128 0x2
 5867 086e 91       		.byte	0x91
 5868 086f 74       		.sleb128 -12
 5869 0870 00       		.byte	0
 5870 0871 00       		.byte	0
 5871 0872 15       		.uleb128 0x15
 5872 0873 A8080000 		.4byte	.LASF122
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 124


 5873 0877 01       		.byte	0x1
 5874 0878 1204     		.2byte	0x412
 5875 087a 00000000 		.4byte	.LFB104
 5876 087e 50000000 		.4byte	.LFE104-.LFB104
 5877 0882 01       		.uleb128 0x1
 5878 0883 9C       		.byte	0x9c
 5879 0884 AF080000 		.4byte	0x8af
 5880 0888 16       		.uleb128 0x16
 5881 0889 6300     		.ascii	"c\000"
 5882 088b 01       		.byte	0x1
 5883 088c 1204     		.2byte	0x412
 5884 088e 8E000000 		.4byte	0x8e
 5885 0892 02       		.uleb128 0x2
 5886 0893 91       		.byte	0x91
 5887 0894 6F       		.sleb128 -17
 5888 0895 11       		.uleb128 0x11
 5889 0896 12000000 		.4byte	.LBB13
 5890 089a 2E000000 		.4byte	.LBE13-.LBB13
 5891 089e 13       		.uleb128 0x13
 5892 089f 636E7400 		.ascii	"cnt\000"
 5893 08a3 01       		.byte	0x1
 5894 08a4 1604     		.2byte	0x416
 5895 08a6 C3000000 		.4byte	0xc3
 5896 08aa 02       		.uleb128 0x2
 5897 08ab 91       		.byte	0x91
 5898 08ac 74       		.sleb128 -12
 5899 08ad 00       		.byte	0
 5900 08ae 00       		.byte	0
 5901 08af 1A       		.uleb128 0x1a
 5902 08b0 65030000 		.4byte	.LASF123
 5903 08b4 01       		.byte	0x1
 5904 08b5 2304     		.2byte	0x423
 5905 08b7 00000000 		.4byte	.LFB105
 5906 08bb 0C000000 		.4byte	.LFE105-.LFB105
 5907 08bf 01       		.uleb128 0x1
 5908 08c0 9C       		.byte	0x9c
 5909 08c1 1B       		.uleb128 0x1b
 5910 08c2 A4060000 		.4byte	.LASF124
 5911 08c6 06       		.byte	0x6
 5912 08c7 9606     		.2byte	0x696
 5913 08c9 CD080000 		.4byte	0x8cd
 5914 08cd 1C       		.uleb128 0x1c
 5915 08ce 95000000 		.4byte	0x95
 5916 08d2 1D       		.uleb128 0x1d
 5917 08d3 747300   		.ascii	"ts\000"
 5918 08d6 05       		.byte	0x5
 5919 08d7 10       		.byte	0x10
 5920 08d8 AB000000 		.4byte	0xab
 5921 08dc 05       		.uleb128 0x5
 5922 08dd 03       		.byte	0x3
 5923 08de 00000000 		.4byte	ts
 5924 08e2 1E       		.uleb128 0x1e
 5925 08e3 2A080000 		.4byte	.LASF125
 5926 08e7 05       		.byte	0x5
 5927 08e8 11       		.byte	0x11
 5928 08e9 B7000000 		.4byte	0xb7
 5929 08ed 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 125


 5930 08ee 03       		.byte	0x3
 5931 08ef 00000000 		.4byte	ts_enc
 5932 08f3 1E       		.uleb128 0x1e
 5933 08f4 C3060000 		.4byte	.LASF126
 5934 08f8 05       		.byte	0x5
 5935 08f9 12       		.byte	0x12
 5936 08fa B7000000 		.4byte	0xb7
 5937 08fe 05       		.uleb128 0x5
 5938 08ff 03       		.byte	0x3
 5939 0900 00000000 		.4byte	ts_update
 5940 0904 1E       		.uleb128 0x1e
 5941 0905 63050000 		.4byte	.LASF127
 5942 0909 05       		.byte	0x5
 5943 090a 13       		.byte	0x13
 5944 090b B7000000 		.4byte	0xb7
 5945 090f 05       		.uleb128 0x5
 5946 0910 03       		.byte	0x3
 5947 0911 00000000 		.4byte	ts_speed
 5948 0915 1E       		.uleb128 0x1e
 5949 0916 8C030000 		.4byte	.LASF128
 5950 091a 05       		.byte	0x5
 5951 091b 14       		.byte	0x14
 5952 091c B7000000 		.4byte	0xb7
 5953 0920 05       		.uleb128 0x5
 5954 0921 03       		.byte	0x3
 5955 0922 00000000 		.4byte	ts_display
 5956 0926 1E       		.uleb128 0x1e
 5957 0927 0F030000 		.4byte	.LASF129
 5958 092b 05       		.byte	0x5
 5959 092c 16       		.byte	0x16
 5960 092d AB000000 		.4byte	0xab
 5961 0931 05       		.uleb128 0x5
 5962 0932 03       		.byte	0x3
 5963 0933 00000000 		.4byte	flag_ts_enc
 5964 0937 1E       		.uleb128 0x1e
 5965 0938 E8020000 		.4byte	.LASF130
 5966 093c 05       		.byte	0x5
 5967 093d 17       		.byte	0x17
 5968 093e AB000000 		.4byte	0xab
 5969 0942 05       		.uleb128 0x5
 5970 0943 03       		.byte	0x3
 5971 0944 00000000 		.4byte	flag_ts_update
 5972 0948 1E       		.uleb128 0x1e
 5973 0949 1E060000 		.4byte	.LASF131
 5974 094d 05       		.byte	0x5
 5975 094e 18       		.byte	0x18
 5976 094f AB000000 		.4byte	0xab
 5977 0953 05       		.uleb128 0x5
 5978 0954 03       		.byte	0x3
 5979 0955 00000000 		.4byte	flag_ts_speed
 5980 0959 1E       		.uleb128 0x1e
 5981 095a 3B080000 		.4byte	.LASF132
 5982 095e 05       		.byte	0x5
 5983 095f 19       		.byte	0x19
 5984 0960 AB000000 		.4byte	0xab
 5985 0964 05       		.uleb128 0x5
 5986 0965 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 126


 5987 0966 00000000 		.4byte	flag_ts_display
 5988 096a 1E       		.uleb128 0x1e
 5989 096b 49060000 		.4byte	.LASF133
 5990 096f 05       		.byte	0x5
 5991 0970 1C       		.byte	0x1c
 5992 0971 AB000000 		.4byte	0xab
 5993 0975 05       		.uleb128 0x5
 5994 0976 03       		.byte	0x3
 5995 0977 00000000 		.4byte	flag_rx
 5996 097b 1E       		.uleb128 0x1e
 5997 097c 95020000 		.4byte	.LASF134
 5998 0980 05       		.byte	0x5
 5999 0981 1D       		.byte	0x1d
 6000 0982 AB000000 		.4byte	0xab
 6001 0986 05       		.uleb128 0x5
 6002 0987 03       		.byte	0x3
 6003 0988 00000000 		.4byte	flag_packet
 6004 098c 1E       		.uleb128 0x1e
 6005 098d 61090000 		.4byte	.LASF135
 6006 0991 05       		.byte	0x5
 6007 0992 1E       		.byte	0x1e
 6008 0993 AB000000 		.4byte	0xab
 6009 0997 05       		.uleb128 0x5
 6010 0998 03       		.byte	0x3
 6011 0999 00000000 		.4byte	flag_KB_string
 6012 099d 1E       		.uleb128 0x1e
 6013 099e 2C060000 		.4byte	.LASF136
 6014 09a2 05       		.byte	0x5
 6015 09a3 20       		.byte	0x20
 6016 09a4 AB000000 		.4byte	0xab
 6017 09a8 05       		.uleb128 0x5
 6018 09a9 03       		.byte	0x3
 6019 09aa 00000000 		.4byte	dataready_flag
 6020 09ae 1E       		.uleb128 0x1e
 6021 09af AE010000 		.4byte	.LASF137
 6022 09b3 05       		.byte	0x5
 6023 09b4 22       		.byte	0x22
 6024 09b5 AB000000 		.4byte	0xab
 6025 09b9 05       		.uleb128 0x5
 6026 09ba 03       		.byte	0x3
 6027 09bb 00000000 		.4byte	flag_rf_transmission_active
 6028 09bf 1E       		.uleb128 0x1e
 6029 09c0 CA010000 		.4byte	.LASF138
 6030 09c4 05       		.byte	0x5
 6031 09c5 23       		.byte	0x23
 6032 09c6 AB000000 		.4byte	0xab
 6033 09ca 05       		.uleb128 0x5
 6034 09cb 03       		.byte	0x3
 6035 09cc 00000000 		.4byte	flag_print_rf
 6036 09d0 1E       		.uleb128 0x1e
 6037 09d1 C6050000 		.4byte	.LASF139
 6038 09d5 05       		.byte	0x5
 6039 09d6 25       		.byte	0x25
 6040 09d7 AB000000 		.4byte	0xab
 6041 09db 05       		.uleb128 0x5
 6042 09dc 03       		.byte	0x3
 6043 09dd 00000000 		.4byte	flag_receive_ADC
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 127


 6044 09e1 1E       		.uleb128 0x1e
 6045 09e2 5B060000 		.4byte	.LASF140
 6046 09e6 05       		.byte	0x5
 6047 09e7 26       		.byte	0x26
 6048 09e8 DB000000 		.4byte	0xdb
 6049 09ec 05       		.uleb128 0x5
 6050 09ed 03       		.byte	0x3
 6051 09ee 00000000 		.4byte	adc_result
 6052 09f2 1E       		.uleb128 0x1e
 6053 09f3 00000000 		.4byte	.LASF141
 6054 09f7 05       		.byte	0x5
 6055 09f8 28       		.byte	0x28
 6056 09f9 AB000000 		.4byte	0xab
 6057 09fd 05       		.uleb128 0x5
 6058 09fe 03       		.byte	0x3
 6059 09ff 00000000 		.4byte	direction
 6060 0a03 1E       		.uleb128 0x1e
 6061 0a04 4C050000 		.4byte	.LASF142
 6062 0a08 05       		.byte	0x5
 6063 0a09 2B       		.byte	0x2b
 6064 0a0a AB000000 		.4byte	0xab
 6065 0a0e 05       		.uleb128 0x5
 6066 0a0f 03       		.byte	0x3
 6067 0a10 00000000 		.4byte	BIN_ENABLED
 6068 0a14 1E       		.uleb128 0x1e
 6069 0a15 42040000 		.4byte	.LASF143
 6070 0a19 05       		.byte	0x5
 6071 0a1a 2D       		.byte	0x2d
 6072 0a1b AB000000 		.4byte	0xab
 6073 0a1f 05       		.uleb128 0x5
 6074 0a20 03       		.byte	0x3
 6075 0a21 00000000 		.4byte	BT_ENABLED
 6076 0a25 1E       		.uleb128 0x1e
 6077 0a26 70060000 		.4byte	.LASF144
 6078 0a2a 05       		.byte	0x5
 6079 0a2b 32       		.byte	0x32
 6080 0a2c AB000000 		.4byte	0xab
 6081 0a30 05       		.uleb128 0x5
 6082 0a31 03       		.byte	0x3
 6083 0a32 00000000 		.4byte	flag_calc_wheelspeed
 6084 0a36 1E       		.uleb128 0x1e
 6085 0a37 4F010000 		.4byte	.LASF145
 6086 0a3b 05       		.byte	0x5
 6087 0a3c 33       		.byte	0x33
 6088 0a3d DB000000 		.4byte	0xdb
 6089 0a41 05       		.uleb128 0x5
 6090 0a42 03       		.byte	0x3
 6091 0a43 00000000 		.4byte	quad_count1
 6092 0a47 1E       		.uleb128 0x1e
 6093 0a48 5B010000 		.4byte	.LASF146
 6094 0a4c 05       		.byte	0x5
 6095 0a4d 34       		.byte	0x34
 6096 0a4e DB000000 		.4byte	0xdb
 6097 0a52 05       		.uleb128 0x5
 6098 0a53 03       		.byte	0x3
 6099 0a54 00000000 		.4byte	quad_count2
 6100 0a58 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 128


 6101 0a59 7A080000 		.4byte	.LASF147
 6102 0a5d 05       		.byte	0x5
 6103 0a5e 35       		.byte	0x35
 6104 0a5f DB000000 		.4byte	0xdb
 6105 0a63 05       		.uleb128 0x5
 6106 0a64 03       		.byte	0x3
 6107 0a65 00000000 		.4byte	last_quad_count1
 6108 0a69 1E       		.uleb128 0x1e
 6109 0a6a 8B080000 		.4byte	.LASF148
 6110 0a6e 05       		.byte	0x5
 6111 0a6f 36       		.byte	0x36
 6112 0a70 DB000000 		.4byte	0xdb
 6113 0a74 05       		.uleb128 0x5
 6114 0a75 03       		.byte	0x3
 6115 0a76 00000000 		.4byte	last_quad_count2
 6116 0a7a 1E       		.uleb128 0x1e
 6117 0a7b 7A000000 		.4byte	.LASF149
 6118 0a7f 05       		.byte	0x5
 6119 0a80 37       		.byte	0x37
 6120 0a81 DB000000 		.4byte	0xdb
 6121 0a85 05       		.uleb128 0x5
 6122 0a86 03       		.byte	0x3
 6123 0a87 00000000 		.4byte	quad_diff1
 6124 0a8b 1E       		.uleb128 0x1e
 6125 0a8c 85000000 		.4byte	.LASF150
 6126 0a90 05       		.byte	0x5
 6127 0a91 38       		.byte	0x38
 6128 0a92 DB000000 		.4byte	0xdb
 6129 0a96 05       		.uleb128 0x5
 6130 0a97 03       		.byte	0x3
 6131 0a98 00000000 		.4byte	quad_diff2
 6132 0a9c 1E       		.uleb128 0x1e
 6133 0a9d D6060000 		.4byte	.LASF151
 6134 0aa1 05       		.byte	0x5
 6135 0aa2 39       		.byte	0x39
 6136 0aa3 AB000000 		.4byte	0xab
 6137 0aa7 05       		.uleb128 0x5
 6138 0aa8 03       		.byte	0x3
 6139 0aa9 00000000 		.4byte	deadzone
 6140 0aad 1E       		.uleb128 0x1e
 6141 0aae AE000000 		.4byte	.LASF152
 6142 0ab2 05       		.byte	0x5
 6143 0ab3 3C       		.byte	0x3c
 6144 0ab4 DB000000 		.4byte	0xdb
 6145 0ab8 05       		.uleb128 0x5
 6146 0ab9 03       		.byte	0x3
 6147 0aba 00000000 		.4byte	start_turn_count
 6148 0abe 1E       		.uleb128 0x1e
 6149 0abf 01060000 		.4byte	.LASF153
 6150 0ac3 05       		.byte	0x5
 6151 0ac4 3F       		.byte	0x3f
 6152 0ac5 DB000000 		.4byte	0xdb
 6153 0ac9 05       		.uleb128 0x5
 6154 0aca 03       		.byte	0x3
 6155 0acb 00000000 		.4byte	left_duty_cycle
 6156 0acf 1E       		.uleb128 0x1e
 6157 0ad0 13090000 		.4byte	.LASF154
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 129


 6158 0ad4 05       		.byte	0x5
 6159 0ad5 40       		.byte	0x40
 6160 0ad6 DB000000 		.4byte	0xdb
 6161 0ada 05       		.uleb128 0x5
 6162 0adb 03       		.byte	0x3
 6163 0adc 00000000 		.4byte	right_duty_cycle
 6164 0ae0 1E       		.uleb128 0x1e
 6165 0ae1 DF060000 		.4byte	.LASF155
 6166 0ae5 05       		.byte	0x5
 6167 0ae6 43       		.byte	0x43
 6168 0ae7 DB000000 		.4byte	0xdb
 6169 0aeb 05       		.uleb128 0x5
 6170 0aec 03       		.byte	0x3
 6171 0aed 00000000 		.4byte	leftSpeedLimit
 6172 0af1 1E       		.uleb128 0x1e
 6173 0af2 BB030000 		.4byte	.LASF156
 6174 0af6 05       		.byte	0x5
 6175 0af7 44       		.byte	0x44
 6176 0af8 DB000000 		.4byte	0xdb
 6177 0afc 05       		.uleb128 0x5
 6178 0afd 03       		.byte	0x3
 6179 0afe 00000000 		.4byte	rightSpeedLimit
 6180 0b02 1E       		.uleb128 0x1e
 6181 0b03 6D070000 		.4byte	.LASF157
 6182 0b07 05       		.byte	0x5
 6183 0b08 47       		.byte	0x47
 6184 0b09 DB000000 		.4byte	0xdb
 6185 0b0d 05       		.uleb128 0x5
 6186 0b0e 03       		.byte	0x3
 6187 0b0f 00000000 		.4byte	target_distance_cm
 6188 0b13 1E       		.uleb128 0x1e
 6189 0b14 1E070000 		.4byte	.LASF158
 6190 0b18 05       		.byte	0x5
 6191 0b19 49       		.byte	0x49
 6192 0b1a DB000000 		.4byte	0xdb
 6193 0b1e 05       		.uleb128 0x5
 6194 0b1f 03       		.byte	0x3
 6195 0b20 00000000 		.4byte	accum_dist
 6196 0b24 1E       		.uleb128 0x1e
 6197 0b25 FA000000 		.4byte	.LASF159
 6198 0b29 05       		.byte	0x5
 6199 0b2a 4A       		.byte	0x4a
 6200 0b2b DB000000 		.4byte	0xdb
 6201 0b2f 05       		.uleb128 0x5
 6202 0b30 03       		.byte	0x3
 6203 0b31 00000000 		.4byte	target_distance_quad
 6204 0b35 1E       		.uleb128 0x1e
 6205 0b36 0E080000 		.4byte	.LASF160
 6206 0b3a 05       		.byte	0x5
 6207 0b3b 4B       		.byte	0x4b
 6208 0b3c AB000000 		.4byte	0xab
 6209 0b40 05       		.uleb128 0x5
 6210 0b41 03       		.byte	0x3
 6211 0b42 00000000 		.4byte	reached_target
 6212 0b46 1E       		.uleb128 0x1e
 6213 0b47 09070000 		.4byte	.LASF161
 6214 0b4b 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 130


 6215 0b4c 4C       		.byte	0x4c
 6216 0b4d AB000000 		.4byte	0xab
 6217 0b51 05       		.uleb128 0x5
 6218 0b52 03       		.byte	0x3
 6219 0b53 00000000 		.4byte	overshot_target
 6220 0b57 1E       		.uleb128 0x1e
 6221 0b58 61070000 		.4byte	.LASF162
 6222 0b5c 05       		.byte	0x5
 6223 0b5d 4D       		.byte	0x4d
 6224 0b5e E7000000 		.4byte	0xe7
 6225 0b62 05       		.uleb128 0x5
 6226 0b63 03       		.byte	0x3
 6227 0b64 00000000 		.4byte	quad_per_cm
 6228 0b68 1E       		.uleb128 0x1e
 6229 0b69 53040000 		.4byte	.LASF163
 6230 0b6d 05       		.byte	0x5
 6231 0b6e 50       		.byte	0x50
 6232 0b6f AB000000 		.4byte	0xab
 6233 0b73 05       		.uleb128 0x5
 6234 0b74 03       		.byte	0x3
 6235 0b75 00000000 		.4byte	initial_pos_valid
 6236 0b79 1E       		.uleb128 0x1e
 6237 0b7a 82090000 		.4byte	.LASF164
 6238 0b7e 05       		.byte	0x5
 6239 0b7f 51       		.byte	0x51
 6240 0b80 DB000000 		.4byte	0xdb
 6241 0b84 05       		.uleb128 0x5
 6242 0b85 03       		.byte	0x3
 6243 0b86 00000000 		.4byte	initial_x_pos
 6244 0b8a 1E       		.uleb128 0x1e
 6245 0b8b 3B060000 		.4byte	.LASF165
 6246 0b8f 05       		.byte	0x5
 6247 0b90 52       		.byte	0x52
 6248 0b91 DB000000 		.4byte	0xdb
 6249 0b95 05       		.uleb128 0x5
 6250 0b96 03       		.byte	0x3
 6251 0b97 00000000 		.4byte	initial_y_pos
 6252 0b9b 1E       		.uleb128 0x1e
 6253 0b9c 31080000 		.4byte	.LASF166
 6254 0ba0 05       		.byte	0x5
 6255 0ba1 55       		.byte	0x55
 6256 0ba2 AB000000 		.4byte	0xab
 6257 0ba6 05       		.uleb128 0x5
 6258 0ba7 03       		.byte	0x3
 6259 0ba8 00000000 		.4byte	brakeFlag
 6260 0bac 1E       		.uleb128 0x1e
 6261 0bad D5020000 		.4byte	.LASF167
 6262 0bb1 05       		.byte	0x5
 6263 0bb2 56       		.byte	0x56
 6264 0bb3 AB000000 		.4byte	0xab
 6265 0bb7 05       		.uleb128 0x5
 6266 0bb8 03       		.byte	0x3
 6267 0bb9 00000000 		.4byte	portOpen
 6268 0bbd 1E       		.uleb128 0x1e
 6269 0bbe A2000000 		.4byte	.LASF168
 6270 0bc2 05       		.byte	0x5
 6271 0bc3 59       		.byte	0x59
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 131


 6272 0bc4 DB000000 		.4byte	0xdb
 6273 0bc8 05       		.uleb128 0x5
 6274 0bc9 03       		.byte	0x3
 6275 0bca 00000000 		.4byte	prevVoltage
 6276 0bce 1E       		.uleb128 0x1e
 6277 0bcf 18010000 		.4byte	.LASF169
 6278 0bd3 05       		.byte	0x5
 6279 0bd4 5A       		.byte	0x5a
 6280 0bd5 DB000000 		.4byte	0xdb
 6281 0bd9 05       		.uleb128 0x5
 6282 0bda 03       		.byte	0x3
 6283 0bdb 00000000 		.4byte	prevVoltage2
 6284 0bdf 07       		.uleb128 0x7
 6285 0be0 8E000000 		.4byte	0x8e
 6286 0be4 EF0B0000 		.4byte	0xbef
 6287 0be8 08       		.uleb128 0x8
 6288 0be9 81000000 		.4byte	0x81
 6289 0bed 3F       		.byte	0x3f
 6290 0bee 00       		.byte	0
 6291 0bef 1E       		.uleb128 0x1e
 6292 0bf0 6C080000 		.4byte	.LASF170
 6293 0bf4 05       		.byte	0x5
 6294 0bf5 60       		.byte	0x60
 6295 0bf6 DF0B0000 		.4byte	0xbdf
 6296 0bfa 05       		.uleb128 0x5
 6297 0bfb 03       		.byte	0x3
 6298 0bfc 00000000 		.4byte	displaystring
 6299 0c00 1E       		.uleb128 0x1e
 6300 0c01 09080000 		.4byte	.LASF171
 6301 0c05 05       		.byte	0x5
 6302 0c06 61       		.byte	0x61
 6303 0c07 DF0B0000 		.4byte	0xbdf
 6304 0c0b 05       		.uleb128 0x5
 6305 0c0c 03       		.byte	0x3
 6306 0c0d 00000000 		.4byte	line
 6307 0c11 1E       		.uleb128 0x1e
 6308 0c12 EA070000 		.4byte	.LASF172
 6309 0c16 05       		.byte	0x5
 6310 0c17 61       		.byte	0x61
 6311 0c18 DF0B0000 		.4byte	0xbdf
 6312 0c1c 05       		.uleb128 0x5
 6313 0c1d 03       		.byte	0x3
 6314 0c1e 00000000 		.4byte	entry
 6315 0c22 07       		.uleb128 0x7
 6316 0c23 AB000000 		.4byte	0xab
 6317 0c27 320C0000 		.4byte	0xc32
 6318 0c2b 08       		.uleb128 0x8
 6319 0c2c 81000000 		.4byte	0x81
 6320 0c30 3F       		.byte	0x3f
 6321 0c31 00       		.byte	0
 6322 0c32 1E       		.uleb128 0x1e
 6323 0c33 2D020000 		.4byte	.LASF173
 6324 0c37 05       		.byte	0x5
 6325 0c38 62       		.byte	0x62
 6326 0c39 220C0000 		.4byte	0xc22
 6327 0c3d 05       		.uleb128 0x5
 6328 0c3e 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 132


 6329 0c3f 00000000 		.4byte	usbBuffer
 6330 0c43 1E       		.uleb128 0x1e
 6331 0c44 73040000 		.4byte	.LASF174
 6332 0c48 05       		.byte	0x5
 6333 0c49 77       		.byte	0x77
 6334 0c4a 86010000 		.4byte	0x186
 6335 0c4e 05       		.uleb128 0x5
 6336 0c4f 03       		.byte	0x3
 6337 0c50 00000000 		.4byte	buffer_state
 6338 0c54 1E       		.uleb128 0x1e
 6339 0c55 E7000000 		.4byte	.LASF175
 6340 0c59 05       		.byte	0x5
 6341 0c5a 78       		.byte	0x78
 6342 0c5b 86010000 		.4byte	0x186
 6343 0c5f 05       		.uleb128 0x5
 6344 0c60 03       		.byte	0x3
 6345 0c61 00000000 		.4byte	system_state
 6346 0c65 1E       		.uleb128 0x1e
 6347 0c66 3B030000 		.4byte	.LASF176
 6348 0c6a 05       		.byte	0x5
 6349 0c6b 7A       		.byte	0x7a
 6350 0c6c 0C010000 		.4byte	0x10c
 6351 0c70 05       		.uleb128 0x5
 6352 0c71 03       		.byte	0x3
 6353 0c72 00000000 		.4byte	prev_movement_state
 6354 0c76 1E       		.uleb128 0x1e
 6355 0c77 D8010000 		.4byte	.LASF177
 6356 0c7b 05       		.byte	0x5
 6357 0c7c 7B       		.byte	0x7b
 6358 0c7d 0C010000 		.4byte	0x10c
 6359 0c81 05       		.uleb128 0x5
 6360 0c82 03       		.byte	0x3
 6361 0c83 00000000 		.4byte	movement_state
 6362 0c87 1E       		.uleb128 0x1e
 6363 0c88 CC000000 		.4byte	.LASF178
 6364 0c8c 05       		.byte	0x5
 6365 0c8d 7C       		.byte	0x7c
 6366 0c8e 49010000 		.4byte	0x149
 6367 0c92 05       		.uleb128 0x5
 6368 0c93 03       		.byte	0x3
 6369 0c94 00000000 		.4byte	track_mode
 6370 0c98 1E       		.uleb128 0x1e
 6371 0c99 1B030000 		.4byte	.LASF179
 6372 0c9d 05       		.byte	0x5
 6373 0c9e 7E       		.byte	0x7e
 6374 0c9f AB000000 		.4byte	0xab
 6375 0ca3 05       		.uleb128 0x5
 6376 0ca4 03       		.byte	0x3
 6377 0ca5 00000000 		.4byte	byteCount
 6378 0ca9 07       		.uleb128 0x7
 6379 0caa 8E000000 		.4byte	0x8e
 6380 0cae B90C0000 		.4byte	0xcb9
 6381 0cb2 08       		.uleb128 0x8
 6382 0cb3 81000000 		.4byte	0x81
 6383 0cb7 01       		.byte	0x1
 6384 0cb8 00       		.byte	0
 6385 0cb9 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 133


 6386 0cba AF070000 		.4byte	.LASF180
 6387 0cbe 05       		.byte	0x5
 6388 0cbf 7F       		.byte	0x7f
 6389 0cc0 A90C0000 		.4byte	0xca9
 6390 0cc4 05       		.uleb128 0x5
 6391 0cc5 03       		.byte	0x3
 6392 0cc6 00000000 		.4byte	packet
 6393 0cca 1E       		.uleb128 0x1e
 6394 0ccb 9B010000 		.4byte	.LASF181
 6395 0ccf 05       		.byte	0x5
 6396 0cd0 83       		.byte	0x83
 6397 0cd1 EE000000 		.4byte	0xee
 6398 0cd5 05       		.uleb128 0x5
 6399 0cd6 03       		.byte	0x3
 6400 0cd7 00000000 		.4byte	speed
 6401 0cdb 1E       		.uleb128 0x1e
 6402 0cdc D6030000 		.4byte	.LASF182
 6403 0ce0 01       		.byte	0x1
 6404 0ce1 1E       		.byte	0x1e
 6405 0ce2 B7000000 		.4byte	0xb7
 6406 0ce6 05       		.uleb128 0x5
 6407 0ce7 03       		.byte	0x3
 6408 0ce8 00000000 		.4byte	instructionCount
 6409 0cec 1E       		.uleb128 0x1e
 6410 0ced 25010000 		.4byte	.LASF183
 6411 0cf1 01       		.byte	0x1
 6412 0cf2 20       		.byte	0x20
 6413 0cf3 A0000000 		.4byte	0xa0
 6414 0cf7 05       		.uleb128 0x5
 6415 0cf8 03       		.byte	0x3
 6416 0cf9 00000000 		.4byte	sensorsDisabled
 6417 0cfd 07       		.uleb128 0x7
 6418 0cfe A0000000 		.4byte	0xa0
 6419 0d02 130D0000 		.4byte	0xd13
 6420 0d06 08       		.uleb128 0x8
 6421 0d07 81000000 		.4byte	0x81
 6422 0d0b 0E       		.byte	0xe
 6423 0d0c 08       		.uleb128 0x8
 6424 0d0d 81000000 		.4byte	0x81
 6425 0d11 12       		.byte	0x12
 6426 0d12 00       		.byte	0
 6427 0d13 1D       		.uleb128 0x1d
 6428 0d14 6D617000 		.ascii	"map\000"
 6429 0d18 01       		.byte	0x1
 6430 0d19 28       		.byte	0x28
 6431 0d1a FD0C0000 		.4byte	0xcfd
 6432 0d1e 05       		.uleb128 0x5
 6433 0d1f 03       		.byte	0x3
 6434 0d20 00000000 		.4byte	map
 6435 0d24 07       		.uleb128 0x7
 6436 0d25 A0000000 		.4byte	0xa0
 6437 0d29 3A0D0000 		.4byte	0xd3a
 6438 0d2d 08       		.uleb128 0x8
 6439 0d2e 81000000 		.4byte	0x81
 6440 0d32 05       		.byte	0x5
 6441 0d33 08       		.uleb128 0x8
 6442 0d34 81000000 		.4byte	0x81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 134


 6443 0d38 01       		.byte	0x1
 6444 0d39 00       		.byte	0
 6445 0d3a 1E       		.uleb128 0x1e
 6446 0d3b 42050000 		.4byte	.LASF184
 6447 0d3f 01       		.byte	0x1
 6448 0d40 3D       		.byte	0x3d
 6449 0d41 240D0000 		.4byte	0xd24
 6450 0d45 05       		.uleb128 0x5
 6451 0d46 03       		.byte	0x3
 6452 0d47 00000000 		.4byte	food_list
 6453 0d4b 07       		.uleb128 0x7
 6454 0d4c A0000000 		.4byte	0xa0
 6455 0d50 620D0000 		.4byte	0xd62
 6456 0d54 1F       		.uleb128 0x1f
 6457 0d55 81000000 		.4byte	0x81
 6458 0d59 1F03     		.2byte	0x31f
 6459 0d5b 08       		.uleb128 0x8
 6460 0d5c 81000000 		.4byte	0x81
 6461 0d60 02       		.byte	0x2
 6462 0d61 00       		.byte	0
 6463 0d62 1E       		.uleb128 0x1e
 6464 0d63 1B040000 		.4byte	.LASF185
 6465 0d67 01       		.byte	0x1
 6466 0d68 24       		.byte	0x24
 6467 0d69 4B0D0000 		.4byte	0xd4b
 6468 0d6d 05       		.uleb128 0x5
 6469 0d6e 03       		.byte	0x3
 6470 0d6f 00000000 		.4byte	path
 6471 0d73 1E       		.uleb128 0x1e
 6472 0d74 A4050000 		.4byte	.LASF186
 6473 0d78 01       		.byte	0x1
 6474 0d79 25       		.byte	0x25
 6475 0d7a F5000000 		.4byte	0xf5
 6476 0d7e 05       		.uleb128 0x5
 6477 0d7f 03       		.byte	0x3
 6478 0d80 00000000 		.4byte	start
 6479 0d84 1E       		.uleb128 0x1e
 6480 0d85 9C080000 		.4byte	.LASF187
 6481 0d89 01       		.byte	0x1
 6482 0d8a 26       		.byte	0x26
 6483 0d8b F5000000 		.4byte	0xf5
 6484 0d8f 05       		.uleb128 0x5
 6485 0d90 03       		.byte	0x3
 6486 0d91 00000000 		.4byte	destination
 6487 0d95 1E       		.uleb128 0x1e
 6488 0d96 72010000 		.4byte	.LASF188
 6489 0d9a 01       		.byte	0x1
 6490 0d9b 22       		.byte	0x22
 6491 0d9c A0000000 		.4byte	0xa0
 6492 0da0 05       		.uleb128 0x5
 6493 0da1 03       		.byte	0x3
 6494 0da2 00000000 		.4byte	robot_direction
 6495 0da6 1E       		.uleb128 0x1e
 6496 0da7 0A000000 		.4byte	.LASF189
 6497 0dab 07       		.byte	0x7
 6498 0dac 22       		.byte	0x22
 6499 0dad A0000000 		.4byte	0xa0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 135


 6500 0db1 05       		.uleb128 0x5
 6501 0db2 03       		.byte	0x3
 6502 0db3 00000000 		.4byte	tracked_direction
 6503 0db7 1E       		.uleb128 0x1e
 6504 0db8 DE070000 		.4byte	.LASF190
 6505 0dbc 01       		.byte	0x1
 6506 0dbd 3F       		.byte	0x3f
 6507 0dbe A0000000 		.4byte	0xa0
 6508 0dc2 05       		.uleb128 0x5
 6509 0dc3 03       		.byte	0x3
 6510 0dc4 00000000 		.4byte	food_length
 6511 0dc8 07       		.uleb128 0x7
 6512 0dc9 8E000000 		.4byte	0x8e
 6513 0dcd D90D0000 		.4byte	0xdd9
 6514 0dd1 1F       		.uleb128 0x1f
 6515 0dd2 81000000 		.4byte	0x81
 6516 0dd6 1F03     		.2byte	0x31f
 6517 0dd8 00       		.byte	0
 6518 0dd9 1E       		.uleb128 0x1e
 6519 0dda 73050000 		.4byte	.LASF191
 6520 0dde 01       		.byte	0x1
 6521 0ddf 1D       		.byte	0x1d
 6522 0de0 C80D0000 		.4byte	0xdc8
 6523 0de4 05       		.uleb128 0x5
 6524 0de5 03       		.byte	0x3
 6525 0de6 00000000 		.4byte	instructions
 6526 0dea 1E       		.uleb128 0x1e
 6527 0deb B6070000 		.4byte	.LASF192
 6528 0def 01       		.byte	0x1
 6529 0df0 1F       		.byte	0x1f
 6530 0df1 B7000000 		.4byte	0xb7
 6531 0df5 05       		.uleb128 0x5
 6532 0df6 03       		.byte	0x3
 6533 0df7 00000000 		.4byte	instructionLength
 6534 0dfb 20       		.uleb128 0x20
 6535 0dfc 8D010000 		.4byte	.LASF193
 6536 0e00 01       		.byte	0x1
 6537 0e01 9F03     		.2byte	0x39f
 6538 0e03 B7000000 		.4byte	0xb7
 6539 0e07 05       		.uleb128 0x5
 6540 0e08 03       		.byte	0x3
 6541 0e09 00000000 		.4byte	leftTurnCount
 6542 0e0d 20       		.uleb128 0x20
 6543 0e0e 61000000 		.4byte	.LASF194
 6544 0e12 01       		.byte	0x1
 6545 0e13 A003     		.2byte	0x3a0
 6546 0e15 B7000000 		.4byte	0xb7
 6547 0e19 05       		.uleb128 0x5
 6548 0e1a 03       		.byte	0x3
 6549 0e1b 00000000 		.4byte	rightTurnCount
 6550 0e1f 00       		.byte	0
 6551              		.section	.debug_abbrev,"",%progbits
 6552              	.Ldebug_abbrev0:
 6553 0000 01       		.uleb128 0x1
 6554 0001 11       		.uleb128 0x11
 6555 0002 01       		.byte	0x1
 6556 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 136


 6557 0004 0E       		.uleb128 0xe
 6558 0005 13       		.uleb128 0x13
 6559 0006 0B       		.uleb128 0xb
 6560 0007 03       		.uleb128 0x3
 6561 0008 0E       		.uleb128 0xe
 6562 0009 1B       		.uleb128 0x1b
 6563 000a 0E       		.uleb128 0xe
 6564 000b 55       		.uleb128 0x55
 6565 000c 17       		.uleb128 0x17
 6566 000d 11       		.uleb128 0x11
 6567 000e 01       		.uleb128 0x1
 6568 000f 10       		.uleb128 0x10
 6569 0010 17       		.uleb128 0x17
 6570 0011 00       		.byte	0
 6571 0012 00       		.byte	0
 6572 0013 02       		.uleb128 0x2
 6573 0014 24       		.uleb128 0x24
 6574 0015 00       		.byte	0
 6575 0016 0B       		.uleb128 0xb
 6576 0017 0B       		.uleb128 0xb
 6577 0018 3E       		.uleb128 0x3e
 6578 0019 0B       		.uleb128 0xb
 6579 001a 03       		.uleb128 0x3
 6580 001b 0E       		.uleb128 0xe
 6581 001c 00       		.byte	0
 6582 001d 00       		.byte	0
 6583 001e 03       		.uleb128 0x3
 6584 001f 16       		.uleb128 0x16
 6585 0020 00       		.byte	0
 6586 0021 03       		.uleb128 0x3
 6587 0022 0E       		.uleb128 0xe
 6588 0023 3A       		.uleb128 0x3a
 6589 0024 0B       		.uleb128 0xb
 6590 0025 3B       		.uleb128 0x3b
 6591 0026 0B       		.uleb128 0xb
 6592 0027 49       		.uleb128 0x49
 6593 0028 13       		.uleb128 0x13
 6594 0029 00       		.byte	0
 6595 002a 00       		.byte	0
 6596 002b 04       		.uleb128 0x4
 6597 002c 24       		.uleb128 0x24
 6598 002d 00       		.byte	0
 6599 002e 0B       		.uleb128 0xb
 6600 002f 0B       		.uleb128 0xb
 6601 0030 3E       		.uleb128 0x3e
 6602 0031 0B       		.uleb128 0xb
 6603 0032 03       		.uleb128 0x3
 6604 0033 08       		.uleb128 0x8
 6605 0034 00       		.byte	0
 6606 0035 00       		.byte	0
 6607 0036 05       		.uleb128 0x5
 6608 0037 0F       		.uleb128 0xf
 6609 0038 00       		.byte	0
 6610 0039 0B       		.uleb128 0xb
 6611 003a 0B       		.uleb128 0xb
 6612 003b 49       		.uleb128 0x49
 6613 003c 13       		.uleb128 0x13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 137


 6614 003d 00       		.byte	0
 6615 003e 00       		.byte	0
 6616 003f 06       		.uleb128 0x6
 6617 0040 16       		.uleb128 0x16
 6618 0041 00       		.byte	0
 6619 0042 03       		.uleb128 0x3
 6620 0043 0E       		.uleb128 0xe
 6621 0044 3A       		.uleb128 0x3a
 6622 0045 0B       		.uleb128 0xb
 6623 0046 3B       		.uleb128 0x3b
 6624 0047 05       		.uleb128 0x5
 6625 0048 49       		.uleb128 0x49
 6626 0049 13       		.uleb128 0x13
 6627 004a 00       		.byte	0
 6628 004b 00       		.byte	0
 6629 004c 07       		.uleb128 0x7
 6630 004d 01       		.uleb128 0x1
 6631 004e 01       		.byte	0x1
 6632 004f 49       		.uleb128 0x49
 6633 0050 13       		.uleb128 0x13
 6634 0051 01       		.uleb128 0x1
 6635 0052 13       		.uleb128 0x13
 6636 0053 00       		.byte	0
 6637 0054 00       		.byte	0
 6638 0055 08       		.uleb128 0x8
 6639 0056 21       		.uleb128 0x21
 6640 0057 00       		.byte	0
 6641 0058 49       		.uleb128 0x49
 6642 0059 13       		.uleb128 0x13
 6643 005a 2F       		.uleb128 0x2f
 6644 005b 0B       		.uleb128 0xb
 6645 005c 00       		.byte	0
 6646 005d 00       		.byte	0
 6647 005e 09       		.uleb128 0x9
 6648 005f 04       		.uleb128 0x4
 6649 0060 01       		.byte	0x1
 6650 0061 03       		.uleb128 0x3
 6651 0062 0E       		.uleb128 0xe
 6652 0063 0B       		.uleb128 0xb
 6653 0064 0B       		.uleb128 0xb
 6654 0065 3A       		.uleb128 0x3a
 6655 0066 0B       		.uleb128 0xb
 6656 0067 3B       		.uleb128 0x3b
 6657 0068 0B       		.uleb128 0xb
 6658 0069 01       		.uleb128 0x1
 6659 006a 13       		.uleb128 0x13
 6660 006b 00       		.byte	0
 6661 006c 00       		.byte	0
 6662 006d 0A       		.uleb128 0xa
 6663 006e 28       		.uleb128 0x28
 6664 006f 00       		.byte	0
 6665 0070 03       		.uleb128 0x3
 6666 0071 0E       		.uleb128 0xe
 6667 0072 1C       		.uleb128 0x1c
 6668 0073 0D       		.uleb128 0xd
 6669 0074 00       		.byte	0
 6670 0075 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 138


 6671 0076 0B       		.uleb128 0xb
 6672 0077 13       		.uleb128 0x13
 6673 0078 01       		.byte	0x1
 6674 0079 03       		.uleb128 0x3
 6675 007a 0E       		.uleb128 0xe
 6676 007b 0B       		.uleb128 0xb
 6677 007c 0B       		.uleb128 0xb
 6678 007d 3A       		.uleb128 0x3a
 6679 007e 0B       		.uleb128 0xb
 6680 007f 3B       		.uleb128 0x3b
 6681 0080 0B       		.uleb128 0xb
 6682 0081 01       		.uleb128 0x1
 6683 0082 13       		.uleb128 0x13
 6684 0083 00       		.byte	0
 6685 0084 00       		.byte	0
 6686 0085 0C       		.uleb128 0xc
 6687 0086 0D       		.uleb128 0xd
 6688 0087 00       		.byte	0
 6689 0088 03       		.uleb128 0x3
 6690 0089 0E       		.uleb128 0xe
 6691 008a 3A       		.uleb128 0x3a
 6692 008b 0B       		.uleb128 0xb
 6693 008c 3B       		.uleb128 0x3b
 6694 008d 0B       		.uleb128 0xb
 6695 008e 49       		.uleb128 0x49
 6696 008f 13       		.uleb128 0x13
 6697 0090 38       		.uleb128 0x38
 6698 0091 0B       		.uleb128 0xb
 6699 0092 00       		.byte	0
 6700 0093 00       		.byte	0
 6701 0094 0D       		.uleb128 0xd
 6702 0095 2E       		.uleb128 0x2e
 6703 0096 00       		.byte	0
 6704 0097 3F       		.uleb128 0x3f
 6705 0098 19       		.uleb128 0x19
 6706 0099 03       		.uleb128 0x3
 6707 009a 0E       		.uleb128 0xe
 6708 009b 3A       		.uleb128 0x3a
 6709 009c 0B       		.uleb128 0xb
 6710 009d 3B       		.uleb128 0x3b
 6711 009e 0B       		.uleb128 0xb
 6712 009f 27       		.uleb128 0x27
 6713 00a0 19       		.uleb128 0x19
 6714 00a1 11       		.uleb128 0x11
 6715 00a2 01       		.uleb128 0x1
 6716 00a3 12       		.uleb128 0x12
 6717 00a4 06       		.uleb128 0x6
 6718 00a5 40       		.uleb128 0x40
 6719 00a6 18       		.uleb128 0x18
 6720 00a7 9742     		.uleb128 0x2117
 6721 00a9 19       		.uleb128 0x19
 6722 00aa 00       		.byte	0
 6723 00ab 00       		.byte	0
 6724 00ac 0E       		.uleb128 0xe
 6725 00ad 2E       		.uleb128 0x2e
 6726 00ae 00       		.byte	0
 6727 00af 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 139


 6728 00b0 19       		.uleb128 0x19
 6729 00b1 03       		.uleb128 0x3
 6730 00b2 0E       		.uleb128 0xe
 6731 00b3 3A       		.uleb128 0x3a
 6732 00b4 0B       		.uleb128 0xb
 6733 00b5 3B       		.uleb128 0x3b
 6734 00b6 0B       		.uleb128 0xb
 6735 00b7 27       		.uleb128 0x27
 6736 00b8 19       		.uleb128 0x19
 6737 00b9 11       		.uleb128 0x11
 6738 00ba 01       		.uleb128 0x1
 6739 00bb 12       		.uleb128 0x12
 6740 00bc 06       		.uleb128 0x6
 6741 00bd 40       		.uleb128 0x40
 6742 00be 18       		.uleb128 0x18
 6743 00bf 9642     		.uleb128 0x2116
 6744 00c1 19       		.uleb128 0x19
 6745 00c2 00       		.byte	0
 6746 00c3 00       		.byte	0
 6747 00c4 0F       		.uleb128 0xf
 6748 00c5 2E       		.uleb128 0x2e
 6749 00c6 01       		.byte	0x1
 6750 00c7 3F       		.uleb128 0x3f
 6751 00c8 19       		.uleb128 0x19
 6752 00c9 03       		.uleb128 0x3
 6753 00ca 0E       		.uleb128 0xe
 6754 00cb 3A       		.uleb128 0x3a
 6755 00cc 0B       		.uleb128 0xb
 6756 00cd 3B       		.uleb128 0x3b
 6757 00ce 0B       		.uleb128 0xb
 6758 00cf 49       		.uleb128 0x49
 6759 00d0 13       		.uleb128 0x13
 6760 00d1 11       		.uleb128 0x11
 6761 00d2 01       		.uleb128 0x1
 6762 00d3 12       		.uleb128 0x12
 6763 00d4 06       		.uleb128 0x6
 6764 00d5 40       		.uleb128 0x40
 6765 00d6 18       		.uleb128 0x18
 6766 00d7 9642     		.uleb128 0x2116
 6767 00d9 19       		.uleb128 0x19
 6768 00da 01       		.uleb128 0x1
 6769 00db 13       		.uleb128 0x13
 6770 00dc 00       		.byte	0
 6771 00dd 00       		.byte	0
 6772 00de 10       		.uleb128 0x10
 6773 00df 34       		.uleb128 0x34
 6774 00e0 00       		.byte	0
 6775 00e1 03       		.uleb128 0x3
 6776 00e2 0E       		.uleb128 0xe
 6777 00e3 3A       		.uleb128 0x3a
 6778 00e4 0B       		.uleb128 0xb
 6779 00e5 3B       		.uleb128 0x3b
 6780 00e6 05       		.uleb128 0x5
 6781 00e7 49       		.uleb128 0x49
 6782 00e8 13       		.uleb128 0x13
 6783 00e9 02       		.uleb128 0x2
 6784 00ea 18       		.uleb128 0x18
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 140


 6785 00eb 00       		.byte	0
 6786 00ec 00       		.byte	0
 6787 00ed 11       		.uleb128 0x11
 6788 00ee 0B       		.uleb128 0xb
 6789 00ef 01       		.byte	0x1
 6790 00f0 11       		.uleb128 0x11
 6791 00f1 01       		.uleb128 0x1
 6792 00f2 12       		.uleb128 0x12
 6793 00f3 06       		.uleb128 0x6
 6794 00f4 00       		.byte	0
 6795 00f5 00       		.byte	0
 6796 00f6 12       		.uleb128 0x12
 6797 00f7 0B       		.uleb128 0xb
 6798 00f8 01       		.byte	0x1
 6799 00f9 11       		.uleb128 0x11
 6800 00fa 01       		.uleb128 0x1
 6801 00fb 12       		.uleb128 0x12
 6802 00fc 06       		.uleb128 0x6
 6803 00fd 01       		.uleb128 0x1
 6804 00fe 13       		.uleb128 0x13
 6805 00ff 00       		.byte	0
 6806 0100 00       		.byte	0
 6807 0101 13       		.uleb128 0x13
 6808 0102 34       		.uleb128 0x34
 6809 0103 00       		.byte	0
 6810 0104 03       		.uleb128 0x3
 6811 0105 08       		.uleb128 0x8
 6812 0106 3A       		.uleb128 0x3a
 6813 0107 0B       		.uleb128 0xb
 6814 0108 3B       		.uleb128 0x3b
 6815 0109 05       		.uleb128 0x5
 6816 010a 49       		.uleb128 0x49
 6817 010b 13       		.uleb128 0x13
 6818 010c 02       		.uleb128 0x2
 6819 010d 18       		.uleb128 0x18
 6820 010e 00       		.byte	0
 6821 010f 00       		.byte	0
 6822 0110 14       		.uleb128 0x14
 6823 0111 2E       		.uleb128 0x2e
 6824 0112 01       		.byte	0x1
 6825 0113 3F       		.uleb128 0x3f
 6826 0114 19       		.uleb128 0x19
 6827 0115 03       		.uleb128 0x3
 6828 0116 0E       		.uleb128 0xe
 6829 0117 3A       		.uleb128 0x3a
 6830 0118 0B       		.uleb128 0xb
 6831 0119 3B       		.uleb128 0x3b
 6832 011a 05       		.uleb128 0x5
 6833 011b 11       		.uleb128 0x11
 6834 011c 01       		.uleb128 0x1
 6835 011d 12       		.uleb128 0x12
 6836 011e 06       		.uleb128 0x6
 6837 011f 40       		.uleb128 0x40
 6838 0120 18       		.uleb128 0x18
 6839 0121 9742     		.uleb128 0x2117
 6840 0123 19       		.uleb128 0x19
 6841 0124 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 141


 6842 0125 13       		.uleb128 0x13
 6843 0126 00       		.byte	0
 6844 0127 00       		.byte	0
 6845 0128 15       		.uleb128 0x15
 6846 0129 2E       		.uleb128 0x2e
 6847 012a 01       		.byte	0x1
 6848 012b 3F       		.uleb128 0x3f
 6849 012c 19       		.uleb128 0x19
 6850 012d 03       		.uleb128 0x3
 6851 012e 0E       		.uleb128 0xe
 6852 012f 3A       		.uleb128 0x3a
 6853 0130 0B       		.uleb128 0xb
 6854 0131 3B       		.uleb128 0x3b
 6855 0132 05       		.uleb128 0x5
 6856 0133 27       		.uleb128 0x27
 6857 0134 19       		.uleb128 0x19
 6858 0135 11       		.uleb128 0x11
 6859 0136 01       		.uleb128 0x1
 6860 0137 12       		.uleb128 0x12
 6861 0138 06       		.uleb128 0x6
 6862 0139 40       		.uleb128 0x40
 6863 013a 18       		.uleb128 0x18
 6864 013b 9642     		.uleb128 0x2116
 6865 013d 19       		.uleb128 0x19
 6866 013e 01       		.uleb128 0x1
 6867 013f 13       		.uleb128 0x13
 6868 0140 00       		.byte	0
 6869 0141 00       		.byte	0
 6870 0142 16       		.uleb128 0x16
 6871 0143 05       		.uleb128 0x5
 6872 0144 00       		.byte	0
 6873 0145 03       		.uleb128 0x3
 6874 0146 08       		.uleb128 0x8
 6875 0147 3A       		.uleb128 0x3a
 6876 0148 0B       		.uleb128 0xb
 6877 0149 3B       		.uleb128 0x3b
 6878 014a 05       		.uleb128 0x5
 6879 014b 49       		.uleb128 0x49
 6880 014c 13       		.uleb128 0x13
 6881 014d 02       		.uleb128 0x2
 6882 014e 18       		.uleb128 0x18
 6883 014f 00       		.byte	0
 6884 0150 00       		.byte	0
 6885 0151 17       		.uleb128 0x17
 6886 0152 2E       		.uleb128 0x2e
 6887 0153 01       		.byte	0x1
 6888 0154 3F       		.uleb128 0x3f
 6889 0155 19       		.uleb128 0x19
 6890 0156 03       		.uleb128 0x3
 6891 0157 0E       		.uleb128 0xe
 6892 0158 3A       		.uleb128 0x3a
 6893 0159 0B       		.uleb128 0xb
 6894 015a 3B       		.uleb128 0x3b
 6895 015b 05       		.uleb128 0x5
 6896 015c 11       		.uleb128 0x11
 6897 015d 01       		.uleb128 0x1
 6898 015e 12       		.uleb128 0x12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 142


 6899 015f 06       		.uleb128 0x6
 6900 0160 40       		.uleb128 0x40
 6901 0161 18       		.uleb128 0x18
 6902 0162 9642     		.uleb128 0x2116
 6903 0164 19       		.uleb128 0x19
 6904 0165 01       		.uleb128 0x1
 6905 0166 13       		.uleb128 0x13
 6906 0167 00       		.byte	0
 6907 0168 00       		.byte	0
 6908 0169 18       		.uleb128 0x18
 6909 016a 05       		.uleb128 0x5
 6910 016b 00       		.byte	0
 6911 016c 03       		.uleb128 0x3
 6912 016d 0E       		.uleb128 0xe
 6913 016e 3A       		.uleb128 0x3a
 6914 016f 0B       		.uleb128 0xb
 6915 0170 3B       		.uleb128 0x3b
 6916 0171 05       		.uleb128 0x5
 6917 0172 49       		.uleb128 0x49
 6918 0173 13       		.uleb128 0x13
 6919 0174 02       		.uleb128 0x2
 6920 0175 18       		.uleb128 0x18
 6921 0176 00       		.byte	0
 6922 0177 00       		.byte	0
 6923 0178 19       		.uleb128 0x19
 6924 0179 2E       		.uleb128 0x2e
 6925 017a 00       		.byte	0
 6926 017b 3F       		.uleb128 0x3f
 6927 017c 19       		.uleb128 0x19
 6928 017d 03       		.uleb128 0x3
 6929 017e 0E       		.uleb128 0xe
 6930 017f 3A       		.uleb128 0x3a
 6931 0180 0B       		.uleb128 0xb
 6932 0181 3B       		.uleb128 0x3b
 6933 0182 05       		.uleb128 0x5
 6934 0183 11       		.uleb128 0x11
 6935 0184 01       		.uleb128 0x1
 6936 0185 12       		.uleb128 0x12
 6937 0186 06       		.uleb128 0x6
 6938 0187 40       		.uleb128 0x40
 6939 0188 18       		.uleb128 0x18
 6940 0189 9642     		.uleb128 0x2116
 6941 018b 19       		.uleb128 0x19
 6942 018c 00       		.byte	0
 6943 018d 00       		.byte	0
 6944 018e 1A       		.uleb128 0x1a
 6945 018f 2E       		.uleb128 0x2e
 6946 0190 00       		.byte	0
 6947 0191 3F       		.uleb128 0x3f
 6948 0192 19       		.uleb128 0x19
 6949 0193 03       		.uleb128 0x3
 6950 0194 0E       		.uleb128 0xe
 6951 0195 3A       		.uleb128 0x3a
 6952 0196 0B       		.uleb128 0xb
 6953 0197 3B       		.uleb128 0x3b
 6954 0198 05       		.uleb128 0x5
 6955 0199 11       		.uleb128 0x11
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 143


 6956 019a 01       		.uleb128 0x1
 6957 019b 12       		.uleb128 0x12
 6958 019c 06       		.uleb128 0x6
 6959 019d 40       		.uleb128 0x40
 6960 019e 18       		.uleb128 0x18
 6961 019f 9742     		.uleb128 0x2117
 6962 01a1 19       		.uleb128 0x19
 6963 01a2 00       		.byte	0
 6964 01a3 00       		.byte	0
 6965 01a4 1B       		.uleb128 0x1b
 6966 01a5 34       		.uleb128 0x34
 6967 01a6 00       		.byte	0
 6968 01a7 03       		.uleb128 0x3
 6969 01a8 0E       		.uleb128 0xe
 6970 01a9 3A       		.uleb128 0x3a
 6971 01aa 0B       		.uleb128 0xb
 6972 01ab 3B       		.uleb128 0x3b
 6973 01ac 05       		.uleb128 0x5
 6974 01ad 49       		.uleb128 0x49
 6975 01ae 13       		.uleb128 0x13
 6976 01af 3F       		.uleb128 0x3f
 6977 01b0 19       		.uleb128 0x19
 6978 01b1 3C       		.uleb128 0x3c
 6979 01b2 19       		.uleb128 0x19
 6980 01b3 00       		.byte	0
 6981 01b4 00       		.byte	0
 6982 01b5 1C       		.uleb128 0x1c
 6983 01b6 35       		.uleb128 0x35
 6984 01b7 00       		.byte	0
 6985 01b8 49       		.uleb128 0x49
 6986 01b9 13       		.uleb128 0x13
 6987 01ba 00       		.byte	0
 6988 01bb 00       		.byte	0
 6989 01bc 1D       		.uleb128 0x1d
 6990 01bd 34       		.uleb128 0x34
 6991 01be 00       		.byte	0
 6992 01bf 03       		.uleb128 0x3
 6993 01c0 08       		.uleb128 0x8
 6994 01c1 3A       		.uleb128 0x3a
 6995 01c2 0B       		.uleb128 0xb
 6996 01c3 3B       		.uleb128 0x3b
 6997 01c4 0B       		.uleb128 0xb
 6998 01c5 49       		.uleb128 0x49
 6999 01c6 13       		.uleb128 0x13
 7000 01c7 3F       		.uleb128 0x3f
 7001 01c8 19       		.uleb128 0x19
 7002 01c9 02       		.uleb128 0x2
 7003 01ca 18       		.uleb128 0x18
 7004 01cb 00       		.byte	0
 7005 01cc 00       		.byte	0
 7006 01cd 1E       		.uleb128 0x1e
 7007 01ce 34       		.uleb128 0x34
 7008 01cf 00       		.byte	0
 7009 01d0 03       		.uleb128 0x3
 7010 01d1 0E       		.uleb128 0xe
 7011 01d2 3A       		.uleb128 0x3a
 7012 01d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 144


 7013 01d4 3B       		.uleb128 0x3b
 7014 01d5 0B       		.uleb128 0xb
 7015 01d6 49       		.uleb128 0x49
 7016 01d7 13       		.uleb128 0x13
 7017 01d8 3F       		.uleb128 0x3f
 7018 01d9 19       		.uleb128 0x19
 7019 01da 02       		.uleb128 0x2
 7020 01db 18       		.uleb128 0x18
 7021 01dc 00       		.byte	0
 7022 01dd 00       		.byte	0
 7023 01de 1F       		.uleb128 0x1f
 7024 01df 21       		.uleb128 0x21
 7025 01e0 00       		.byte	0
 7026 01e1 49       		.uleb128 0x49
 7027 01e2 13       		.uleb128 0x13
 7028 01e3 2F       		.uleb128 0x2f
 7029 01e4 05       		.uleb128 0x5
 7030 01e5 00       		.byte	0
 7031 01e6 00       		.byte	0
 7032 01e7 20       		.uleb128 0x20
 7033 01e8 34       		.uleb128 0x34
 7034 01e9 00       		.byte	0
 7035 01ea 03       		.uleb128 0x3
 7036 01eb 0E       		.uleb128 0xe
 7037 01ec 3A       		.uleb128 0x3a
 7038 01ed 0B       		.uleb128 0xb
 7039 01ee 3B       		.uleb128 0x3b
 7040 01ef 05       		.uleb128 0x5
 7041 01f0 49       		.uleb128 0x49
 7042 01f1 13       		.uleb128 0x13
 7043 01f2 3F       		.uleb128 0x3f
 7044 01f3 19       		.uleb128 0x19
 7045 01f4 02       		.uleb128 0x2
 7046 01f5 18       		.uleb128 0x18
 7047 01f6 00       		.byte	0
 7048 01f7 00       		.byte	0
 7049 01f8 00       		.byte	0
 7050              		.section	.debug_aranges,"",%progbits
 7051 0000 6C010000 		.4byte	0x16c
 7052 0004 0200     		.2byte	0x2
 7053 0006 00000000 		.4byte	.Ldebug_info0
 7054 000a 04       		.byte	0x4
 7055 000b 00       		.byte	0
 7056 000c 0000     		.2byte	0
 7057 000e 0000     		.2byte	0
 7058 0010 00000000 		.4byte	.LFB63
 7059 0014 0C000000 		.4byte	.LFE63-.LFB63
 7060 0018 00000000 		.4byte	.LFB64
 7061 001c 2C000000 		.4byte	.LFE64-.LFB64
 7062 0020 00000000 		.4byte	.LFB65
 7063 0024 A4010000 		.4byte	.LFE65-.LFB65
 7064 0028 00000000 		.4byte	.LFB66
 7065 002c AC000000 		.4byte	.LFE66-.LFB66
 7066 0030 00000000 		.4byte	.LFB67
 7067 0034 20000000 		.4byte	.LFE67-.LFB67
 7068 0038 00000000 		.4byte	.LFB68
 7069 003c 28000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 145


 7070 0040 00000000 		.4byte	.LFB69
 7071 0044 0A000000 		.4byte	.LFE69-.LFB69
 7072 0048 00000000 		.4byte	.LFB70
 7073 004c 28000000 		.4byte	.LFE70-.LFB70
 7074 0050 00000000 		.4byte	.LFB71
 7075 0054 2C060000 		.4byte	.LFE71-.LFB71
 7076 0058 00000000 		.4byte	.LFB72
 7077 005c 60010000 		.4byte	.LFE72-.LFB72
 7078 0060 00000000 		.4byte	.LFB73
 7079 0064 18000000 		.4byte	.LFE73-.LFB73
 7080 0068 00000000 		.4byte	.LFB74
 7081 006c 18000000 		.4byte	.LFE74-.LFB74
 7082 0070 00000000 		.4byte	.LFB75
 7083 0074 54000000 		.4byte	.LFE75-.LFB75
 7084 0078 00000000 		.4byte	.LFB76
 7085 007c F4000000 		.4byte	.LFE76-.LFB76
 7086 0080 00000000 		.4byte	.LFB77
 7087 0084 18000000 		.4byte	.LFE77-.LFB77
 7088 0088 00000000 		.4byte	.LFB78
 7089 008c 18000000 		.4byte	.LFE78-.LFB78
 7090 0090 00000000 		.4byte	.LFB79
 7091 0094 22000000 		.4byte	.LFE79-.LFB79
 7092 0098 00000000 		.4byte	.LFB80
 7093 009c 1C000000 		.4byte	.LFE80-.LFB80
 7094 00a0 00000000 		.4byte	.LFB81
 7095 00a4 28000000 		.4byte	.LFE81-.LFB81
 7096 00a8 00000000 		.4byte	.LFB82
 7097 00ac 2C000000 		.4byte	.LFE82-.LFB82
 7098 00b0 00000000 		.4byte	.LFB83
 7099 00b4 44000000 		.4byte	.LFE83-.LFB83
 7100 00b8 00000000 		.4byte	.LFB84
 7101 00bc 38000000 		.4byte	.LFE84-.LFB84
 7102 00c0 00000000 		.4byte	.LFB85
 7103 00c4 38000000 		.4byte	.LFE85-.LFB85
 7104 00c8 00000000 		.4byte	.LFB86
 7105 00cc 38000000 		.4byte	.LFE86-.LFB86
 7106 00d0 00000000 		.4byte	.LFB87
 7107 00d4 14000000 		.4byte	.LFE87-.LFB87
 7108 00d8 00000000 		.4byte	.LFB88
 7109 00dc 18000000 		.4byte	.LFE88-.LFB88
 7110 00e0 00000000 		.4byte	.LFB89
 7111 00e4 18000000 		.4byte	.LFE89-.LFB89
 7112 00e8 00000000 		.4byte	.LFB90
 7113 00ec 18000000 		.4byte	.LFE90-.LFB90
 7114 00f0 00000000 		.4byte	.LFB91
 7115 00f4 18000000 		.4byte	.LFE91-.LFB91
 7116 00f8 00000000 		.4byte	.LFB92
 7117 00fc B8000000 		.4byte	.LFE92-.LFB92
 7118 0100 00000000 		.4byte	.LFB93
 7119 0104 F8010000 		.4byte	.LFE93-.LFB93
 7120 0108 00000000 		.4byte	.LFB94
 7121 010c 40000000 		.4byte	.LFE94-.LFB94
 7122 0110 00000000 		.4byte	.LFB95
 7123 0114 40000000 		.4byte	.LFE95-.LFB95
 7124 0118 00000000 		.4byte	.LFB96
 7125 011c 30020000 		.4byte	.LFE96-.LFB96
 7126 0120 00000000 		.4byte	.LFB97
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 146


 7127 0124 0C000000 		.4byte	.LFE97-.LFB97
 7128 0128 00000000 		.4byte	.LFB98
 7129 012c 4C010000 		.4byte	.LFE98-.LFB98
 7130 0130 00000000 		.4byte	.LFB99
 7131 0134 0C000000 		.4byte	.LFE99-.LFB99
 7132 0138 00000000 		.4byte	.LFB100
 7133 013c C0000000 		.4byte	.LFE100-.LFB100
 7134 0140 00000000 		.4byte	.LFB101
 7135 0144 B8000000 		.4byte	.LFE101-.LFB101
 7136 0148 00000000 		.4byte	.LFB102
 7137 014c 4A000000 		.4byte	.LFE102-.LFB102
 7138 0150 00000000 		.4byte	.LFB103
 7139 0154 68000000 		.4byte	.LFE103-.LFB103
 7140 0158 00000000 		.4byte	.LFB104
 7141 015c 50000000 		.4byte	.LFE104-.LFB104
 7142 0160 00000000 		.4byte	.LFB105
 7143 0164 0C000000 		.4byte	.LFE105-.LFB105
 7144 0168 00000000 		.4byte	0
 7145 016c 00000000 		.4byte	0
 7146              		.section	.debug_ranges,"",%progbits
 7147              	.Ldebug_ranges0:
 7148 0000 00000000 		.4byte	.LFB63
 7149 0004 0C000000 		.4byte	.LFE63
 7150 0008 00000000 		.4byte	.LFB64
 7151 000c 2C000000 		.4byte	.LFE64
 7152 0010 00000000 		.4byte	.LFB65
 7153 0014 A4010000 		.4byte	.LFE65
 7154 0018 00000000 		.4byte	.LFB66
 7155 001c AC000000 		.4byte	.LFE66
 7156 0020 00000000 		.4byte	.LFB67
 7157 0024 20000000 		.4byte	.LFE67
 7158 0028 00000000 		.4byte	.LFB68
 7159 002c 28000000 		.4byte	.LFE68
 7160 0030 00000000 		.4byte	.LFB69
 7161 0034 0A000000 		.4byte	.LFE69
 7162 0038 00000000 		.4byte	.LFB70
 7163 003c 28000000 		.4byte	.LFE70
 7164 0040 00000000 		.4byte	.LFB71
 7165 0044 2C060000 		.4byte	.LFE71
 7166 0048 00000000 		.4byte	.LFB72
 7167 004c 60010000 		.4byte	.LFE72
 7168 0050 00000000 		.4byte	.LFB73
 7169 0054 18000000 		.4byte	.LFE73
 7170 0058 00000000 		.4byte	.LFB74
 7171 005c 18000000 		.4byte	.LFE74
 7172 0060 00000000 		.4byte	.LFB75
 7173 0064 54000000 		.4byte	.LFE75
 7174 0068 00000000 		.4byte	.LFB76
 7175 006c F4000000 		.4byte	.LFE76
 7176 0070 00000000 		.4byte	.LFB77
 7177 0074 18000000 		.4byte	.LFE77
 7178 0078 00000000 		.4byte	.LFB78
 7179 007c 18000000 		.4byte	.LFE78
 7180 0080 00000000 		.4byte	.LFB79
 7181 0084 22000000 		.4byte	.LFE79
 7182 0088 00000000 		.4byte	.LFB80
 7183 008c 1C000000 		.4byte	.LFE80
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 147


 7184 0090 00000000 		.4byte	.LFB81
 7185 0094 28000000 		.4byte	.LFE81
 7186 0098 00000000 		.4byte	.LFB82
 7187 009c 2C000000 		.4byte	.LFE82
 7188 00a0 00000000 		.4byte	.LFB83
 7189 00a4 44000000 		.4byte	.LFE83
 7190 00a8 00000000 		.4byte	.LFB84
 7191 00ac 38000000 		.4byte	.LFE84
 7192 00b0 00000000 		.4byte	.LFB85
 7193 00b4 38000000 		.4byte	.LFE85
 7194 00b8 00000000 		.4byte	.LFB86
 7195 00bc 38000000 		.4byte	.LFE86
 7196 00c0 00000000 		.4byte	.LFB87
 7197 00c4 14000000 		.4byte	.LFE87
 7198 00c8 00000000 		.4byte	.LFB88
 7199 00cc 18000000 		.4byte	.LFE88
 7200 00d0 00000000 		.4byte	.LFB89
 7201 00d4 18000000 		.4byte	.LFE89
 7202 00d8 00000000 		.4byte	.LFB90
 7203 00dc 18000000 		.4byte	.LFE90
 7204 00e0 00000000 		.4byte	.LFB91
 7205 00e4 18000000 		.4byte	.LFE91
 7206 00e8 00000000 		.4byte	.LFB92
 7207 00ec B8000000 		.4byte	.LFE92
 7208 00f0 00000000 		.4byte	.LFB93
 7209 00f4 F8010000 		.4byte	.LFE93
 7210 00f8 00000000 		.4byte	.LFB94
 7211 00fc 40000000 		.4byte	.LFE94
 7212 0100 00000000 		.4byte	.LFB95
 7213 0104 40000000 		.4byte	.LFE95
 7214 0108 00000000 		.4byte	.LFB96
 7215 010c 30020000 		.4byte	.LFE96
 7216 0110 00000000 		.4byte	.LFB97
 7217 0114 0C000000 		.4byte	.LFE97
 7218 0118 00000000 		.4byte	.LFB98
 7219 011c 4C010000 		.4byte	.LFE98
 7220 0120 00000000 		.4byte	.LFB99
 7221 0124 0C000000 		.4byte	.LFE99
 7222 0128 00000000 		.4byte	.LFB100
 7223 012c C0000000 		.4byte	.LFE100
 7224 0130 00000000 		.4byte	.LFB101
 7225 0134 B8000000 		.4byte	.LFE101
 7226 0138 00000000 		.4byte	.LFB102
 7227 013c 4A000000 		.4byte	.LFE102
 7228 0140 00000000 		.4byte	.LFB103
 7229 0144 68000000 		.4byte	.LFE103
 7230 0148 00000000 		.4byte	.LFB104
 7231 014c 50000000 		.4byte	.LFE104
 7232 0150 00000000 		.4byte	.LFB105
 7233 0154 0C000000 		.4byte	.LFE105
 7234 0158 00000000 		.4byte	0
 7235 015c 00000000 		.4byte	0
 7236              		.section	.debug_line,"",%progbits
 7237              	.Ldebug_line0:
 7238 0000 5F070000 		.section	.debug_str,"MS",%progbits,1
 7238      02006701 
 7238      00000201 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 148


 7238      FB0E0D00 
 7238      01010101 
 7239              	.LASF141:
 7240 0000 64697265 		.ascii	"direction\000"
 7240      6374696F 
 7240      6E00
 7241              	.LASF189:
 7242 000a 74726163 		.ascii	"tracked_direction\000"
 7242      6B65645F 
 7242      64697265 
 7242      6374696F 
 7242      6E00
 7243              	.LASF197:
 7244 001c 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 7244      73657273 
 7244      5C4C6F67 
 7244      616E5C44 
 7244      65736B74 
 7245 0049 43533330 		.ascii	"CS301_Class.cydsn\000"
 7245      315F436C 
 7245      6173732E 
 7245      63796473 
 7245      6E00
 7246              	.LASF25:
 7247 005b 52545552 		.ascii	"RTURN\000"
 7247      4E00
 7248              	.LASF194:
 7249 0061 72696768 		.ascii	"rightTurnCount\000"
 7249      74547572 
 7249      6E436F75 
 7249      6E7400
 7250              	.LASF39:
 7251 0070 44455354 		.ascii	"DEST_TEST\000"
 7251      5F544553 
 7251      5400
 7252              	.LASF149:
 7253 007a 71756164 		.ascii	"quad_diff1\000"
 7253      5F646966 
 7253      663100
 7254              	.LASF150:
 7255 0085 71756164 		.ascii	"quad_diff2\000"
 7255      5F646966 
 7255      663200
 7256              	.LASF103:
 7257 0090 51756164 		.ascii	"Quad_Dec_response\000"
 7257      5F446563 
 7257      5F726573 
 7257      706F6E73 
 7257      6500
 7258              	.LASF168:
 7259 00a2 70726576 		.ascii	"prevVoltage\000"
 7259      566F6C74 
 7259      61676500 
 7260              	.LASF152:
 7261 00ae 73746172 		.ascii	"start_turn_count\000"
 7261      745F7475 
 7261      726E5F63 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 149


 7261      6F756E74 
 7261      00
 7262              	.LASF10:
 7263 00bf 756E7369 		.ascii	"unsigned int\000"
 7263      676E6564 
 7263      20696E74 
 7263      00
 7264              	.LASF178:
 7265 00cc 74726163 		.ascii	"track_mode\000"
 7265      6B5F6D6F 
 7265      646500
 7266              	.LASF5:
 7267 00d7 5F5F696E 		.ascii	"__int32_t\000"
 7267      7433325F 
 7267      7400
 7268              	.LASF19:
 7269 00e1 696E7431 		.ascii	"int16\000"
 7269      3600
 7270              	.LASF175:
 7271 00e7 73797374 		.ascii	"system_state\000"
 7271      656D5F73 
 7271      74617465 
 7271      00
 7272              	.LASF24:
 7273 00f4 4C545552 		.ascii	"LTURN\000"
 7273      4E00
 7274              	.LASF159:
 7275 00fa 74617267 		.ascii	"target_distance_quad\000"
 7275      65745F64 
 7275      69737461 
 7275      6E63655F 
 7275      71756164 
 7276              	.LASF27:
 7277 010f 54524143 		.ascii	"TRACKING\000"
 7277      4B494E47 
 7277      00
 7278              	.LASF169:
 7279 0118 70726576 		.ascii	"prevVoltage2\000"
 7279      566F6C74 
 7279      61676532 
 7279      00
 7280              	.LASF183:
 7281 0125 73656E73 		.ascii	"sensorsDisabled\000"
 7281      6F727344 
 7281      69736162 
 7281      6C656400 
 7282              	.LASF70:
 7283 0135 7061636B 		.ascii	"packet_bytes\000"
 7283      65745F62 
 7283      79746573 
 7283      00
 7284              	.LASF54:
 7285 0142 67325F78 		.ascii	"g2_xpos\000"
 7285      706F7300 
 7286              	.LASF32:
 7287 014a 6D6F6465 		.ascii	"mode\000"
 7287      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 150


 7288              	.LASF145:
 7289 014f 71756164 		.ascii	"quad_count1\000"
 7289      5F636F75 
 7289      6E743100 
 7290              	.LASF146:
 7291 015b 71756164 		.ascii	"quad_count2\000"
 7291      5F636F75 
 7291      6E743200 
 7292              	.LASF112:
 7293 0167 74726163 		.ascii	"trackLineU\000"
 7293      6B4C696E 
 7293      655500
 7294              	.LASF188:
 7295 0172 726F626F 		.ascii	"robot_direction\000"
 7295      745F6469 
 7295      72656374 
 7295      696F6E00 
 7296              	.LASF111:
 7297 0182 74726163 		.ascii	"trackLineZ\000"
 7297      6B4C696E 
 7297      655A00
 7298              	.LASF193:
 7299 018d 6C656674 		.ascii	"leftTurnCount\000"
 7299      5475726E 
 7299      436F756E 
 7299      7400
 7300              	.LASF181:
 7301 019b 73706565 		.ascii	"speed\000"
 7301      6400
 7302              	.LASF36:
 7303 01a1 53515541 		.ascii	"SQUARE_TRACK\000"
 7303      52455F54 
 7303      5241434B 
 7303      00
 7304              	.LASF137:
 7305 01ae 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7305      5F72665F 
 7305      7472616E 
 7305      736D6973 
 7305      73696F6E 
 7306              	.LASF138:
 7307 01ca 666C6167 		.ascii	"flag_print_rf\000"
 7307      5F707269 
 7307      6E745F72 
 7307      6600
 7308              	.LASF177:
 7309 01d8 6D6F7665 		.ascii	"movement_state\000"
 7309      6D656E74 
 7309      5F737461 
 7309      746500
 7310              	.LASF28:
 7311 01e7 54524143 		.ascii	"TRACKING_U\000"
 7311      4B494E47 
 7311      5F5500
 7312              	.LASF93:
 7313 01f2 696E6974 		.ascii	"initForward\000"
 7313      466F7277 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 151


 7313      61726400 
 7314              	.LASF14:
 7315 01fe 75696E74 		.ascii	"uint32_t\000"
 7315      33325F74 
 7315      00
 7316              	.LASF57:
 7317 0207 67325F64 		.ascii	"g2_direction\000"
 7317      69726563 
 7317      74696F6E 
 7317      00
 7318              	.LASF60:
 7319 0214 6973725F 		.ascii	"isr_quad1\000"
 7319      71756164 
 7319      3100
 7320              	.LASF20:
 7321 021e 666C6F61 		.ascii	"float\000"
 7321      7400
 7322              	.LASF78:
 7323 0224 73657453 		.ascii	"setSpeed\000"
 7323      70656564 
 7323      00
 7324              	.LASF173:
 7325 022d 75736242 		.ascii	"usbBuffer\000"
 7325      75666665 
 7325      7200
 7326              	.LASF42:
 7327 0237 696E6465 		.ascii	"index\000"
 7327      7800
 7328              	.LASF23:
 7329 023d 44524956 		.ascii	"DRIVE\000"
 7329      4500
 7330              	.LASF72:
 7331 0243 73747269 		.ascii	"string_packet\000"
 7331      6E675F70 
 7331      61636B65 
 7331      7400
 7332              	.LASF102:
 7333 0251 6368616E 		.ascii	"changeToBT\000"
 7333      6765546F 
 7333      425400
 7334              	.LASF81:
 7335 025c 636F756E 		.ascii	"countsLeft\000"
 7335      74734C65 
 7335      667400
 7336              	.LASF86:
 7337 0267 64726976 		.ascii	"driveForwards\000"
 7337      65466F72 
 7337      77617264 
 7337      7300
 7338              	.LASF88:
 7339 0275 7475726E 		.ascii	"turnLeft\000"
 7339      4C656674 
 7339      00
 7340              	.LASF9:
 7341 027e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7341      206C6F6E 
 7341      6720756E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 152


 7341      7369676E 
 7341      65642069 
 7342              	.LASF134:
 7343 0295 666C6167 		.ascii	"flag_packet\000"
 7343      5F706163 
 7343      6B657400 
 7344              	.LASF67:
 7345 02a1 66726F6E 		.ascii	"frontSensors\000"
 7345      7453656E 
 7345      736F7273 
 7345      00
 7346              	.LASF61:
 7347 02ae 6973725F 		.ascii	"isr_turn_timer\000"
 7347      7475726E 
 7347      5F74696D 
 7347      657200
 7348              	.LASF101:
 7349 02bd 6368616E 		.ascii	"changeToRF\000"
 7349      6765546F 
 7349      524600
 7350              	.LASF90:
 7351 02c8 696E6974 		.ascii	"initTurnLeft\000"
 7351      5475726E 
 7351      4C656674 
 7351      00
 7352              	.LASF167:
 7353 02d5 706F7274 		.ascii	"portOpen\000"
 7353      4F70656E 
 7353      00
 7354              	.LASF94:
 7355 02de 696E6974 		.ascii	"initBrake\000"
 7355      4272616B 
 7355      6500
 7356              	.LASF130:
 7357 02e8 666C6167 		.ascii	"flag_ts_update\000"
 7357      5F74735F 
 7357      75706461 
 7357      746500
 7358              	.LASF114:
 7359 02f7 7363616C 		.ascii	"scalingFactor\000"
 7359      696E6746 
 7359      6163746F 
 7359      7200
 7360              	.LASF104:
 7361 0305 6C656674 		.ascii	"leftSpeed\000"
 7361      53706565 
 7361      6400
 7362              	.LASF129:
 7363 030f 666C6167 		.ascii	"flag_ts_enc\000"
 7363      5F74735F 
 7363      656E6300 
 7364              	.LASF179:
 7365 031b 62797465 		.ascii	"byteCount\000"
 7365      436F756E 
 7365      7400
 7366              	.LASF66:
 7367 0325 61637469 		.ascii	"actionDebounce\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 153


 7367      6F6E4465 
 7367      626F756E 
 7367      636500
 7368              	.LASF63:
 7369 0334 62757474 		.ascii	"button\000"
 7369      6F6E00
 7370              	.LASF176:
 7371 033b 70726576 		.ascii	"prev_movement_state\000"
 7371      5F6D6F76 
 7371      656D656E 
 7371      745F7374 
 7371      61746500 
 7372              	.LASF120:
 7373 034f 73656E73 		.ascii	"sensorVals\000"
 7373      6F725661 
 7373      6C7300
 7374              	.LASF116:
 7375 035a 72657375 		.ascii	"result_str\000"
 7375      6C745F73 
 7375      747200
 7376              	.LASF123:
 7377 0365 75617274 		.ascii	"uart_set_PWM\000"
 7377      5F736574 
 7377      5F50574D 
 7377      00
 7378              	.LASF97:
 7379 0372 696E6974 		.ascii	"inittrackLineZ\000"
 7379      74726163 
 7379      6B4C696E 
 7379      655A00
 7380              	.LASF44:
 7381 0381 726F626F 		.ascii	"robot_ypos\000"
 7381      745F7970 
 7381      6F7300
 7382              	.LASF128:
 7383 038c 74735F64 		.ascii	"ts_display\000"
 7383      6973706C 
 7383      617900
 7384              	.LASF113:
 7385 0397 7072696E 		.ascii	"print_ADC\000"
 7385      745F4144 
 7385      4300
 7386              	.LASF106:
 7387 03a1 7363616C 		.ascii	"scalingLeft\000"
 7387      696E674C 
 7387      65667400 
 7388              	.LASF12:
 7389 03ad 63686172 		.ascii	"char\000"
 7389      00
 7390              	.LASF48:
 7391 03b2 67305F73 		.ascii	"g0_speed\000"
 7391      70656564 
 7391      00
 7392              	.LASF156:
 7393 03bb 72696768 		.ascii	"rightSpeedLimit\000"
 7393      74537065 
 7393      65644C69 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 154


 7393      6D697400 
 7394              	.LASF74:
 7395 03cb 7365744C 		.ascii	"setLeftDir\000"
 7395      65667444 
 7395      697200
 7396              	.LASF182:
 7397 03d6 696E7374 		.ascii	"instructionCount\000"
 7397      72756374 
 7397      696F6E43 
 7397      6F756E74 
 7397      00
 7398              	.LASF89:
 7399 03e7 7475726E 		.ascii	"turnU\000"
 7399      5500
 7400              	.LASF55:
 7401 03ed 67325F79 		.ascii	"g2_ypos\000"
 7401      706F7300 
 7402              	.LASF16:
 7403 03f5 75696E74 		.ascii	"uint16\000"
 7403      313600
 7404              	.LASF18:
 7405 03fc 696E7438 		.ascii	"int8\000"
 7405      00
 7406              	.LASF69:
 7407 0401 6E657874 		.ascii	"nextStepDist\000"
 7407      53746570 
 7407      44697374 
 7407      00
 7408              	.LASF53:
 7409 040e 67315F64 		.ascii	"g1_direction\000"
 7409      69726563 
 7409      74696F6E 
 7409      00
 7410              	.LASF185:
 7411 041b 70617468 		.ascii	"path\000"
 7411      00
 7412              	.LASF75:
 7413 0420 73657452 		.ascii	"setRightDir\000"
 7413      69676874 
 7413      44697200 
 7414              	.LASF34:
 7415 042c 43555256 		.ascii	"CURVE_TRACK\000"
 7415      455F5452 
 7415      41434B00 
 7416              	.LASF108:
 7417 0438 696E7465 		.ascii	"interCalc\000"
 7417      7243616C 
 7417      6300
 7418              	.LASF143:
 7419 0442 42545F45 		.ascii	"BT_ENABLED\000"
 7419      4E41424C 
 7419      454400
 7420              	.LASF80:
 7421 044d 72696768 		.ascii	"right\000"
 7421      7400
 7422              	.LASF163:
 7423 0453 696E6974 		.ascii	"initial_pos_valid\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 155


 7423      69616C5F 
 7423      706F735F 
 7423      76616C69 
 7423      6400
 7424              	.LASF8:
 7425 0465 6C6F6E67 		.ascii	"long long int\000"
 7425      206C6F6E 
 7425      6720696E 
 7425      7400
 7426              	.LASF174:
 7427 0473 62756666 		.ascii	"buffer_state\000"
 7427      65725F73 
 7427      74617465 
 7427      00
 7428              	.LASF50:
 7429 0480 67315F78 		.ascii	"g1_xpos\000"
 7429      706F7300 
 7430              	.LASF95:
 7431 0488 696E6974 		.ascii	"initTrack\000"
 7431      54726163 
 7431      6B00
 7432              	.LASF68:
 7433 0492 6E657874 		.ascii	"nextStep\000"
 7433      53746570 
 7433      00
 7434              	.LASF195:
 7435 049b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7435      4320342E 
 7435      392E3320 
 7435      32303135 
 7435      30333033 
 7436 04ce 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7436      20726576 
 7436      6973696F 
 7436      6E203232 
 7436      31323230 
 7437 0501 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7437      66756E63 
 7437      74696F6E 
 7437      2D736563 
 7437      74696F6E 
 7438              	.LASF56:
 7439 0529 67325F73 		.ascii	"g2_speed\000"
 7439      70656564 
 7439      00
 7440              	.LASF47:
 7441 0532 67305F79 		.ascii	"g0_ypos\000"
 7441      706F7300 
 7442              	.LASF99:
 7443 053a 72665F63 		.ascii	"rf_char\000"
 7443      68617200 
 7444              	.LASF184:
 7445 0542 666F6F64 		.ascii	"food_list\000"
 7445      5F6C6973 
 7445      7400
 7446              	.LASF142:
 7447 054c 42494E5F 		.ascii	"BIN_ENABLED\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 156


 7447      454E4142 
 7447      4C454400 
 7448              	.LASF105:
 7449 0558 72696768 		.ascii	"rightSpeed\000"
 7449      74537065 
 7449      656400
 7450              	.LASF127:
 7451 0563 74735F73 		.ascii	"ts_speed\000"
 7451      70656564 
 7451      00
 7452              	.LASF17:
 7453 056c 75696E74 		.ascii	"uint32\000"
 7453      333200
 7454              	.LASF191:
 7455 0573 696E7374 		.ascii	"instructions\000"
 7455      72756374 
 7455      696F6E73 
 7455      00
 7456              	.LASF82:
 7457 0580 636F756E 		.ascii	"countsRight\000"
 7457      74735269 
 7457      67687400 
 7458              	.LASF198:
 7459 058c 64617461 		.ascii	"data_main\000"
 7459      5F6D6169 
 7459      6E00
 7460              	.LASF115:
 7461 0596 636F6E76 		.ascii	"converted_val\000"
 7461      65727465 
 7461      645F7661 
 7461      6C00
 7462              	.LASF186:
 7463 05a4 73746172 		.ascii	"start\000"
 7463      7400
 7464              	.LASF41:
 7465 05aa 72737369 		.ascii	"rssi\000"
 7465      00
 7466              	.LASF110:
 7467 05af 74726163 		.ascii	"trackLine\000"
 7467      6B4C696E 
 7467      6500
 7468              	.LASF49:
 7469 05b9 67305F64 		.ascii	"g0_direction\000"
 7469      69726563 
 7469      74696F6E 
 7469      00
 7470              	.LASF139:
 7471 05c6 666C6167 		.ascii	"flag_receive_ADC\000"
 7471      5F726563 
 7471      65697665 
 7471      5F414443 
 7471      00
 7472              	.LASF26:
 7473 05d7 53544F50 		.ascii	"STOPPED\000"
 7473      50454400 
 7474              	.LASF100:
 7475 05df 42545F72 		.ascii	"BT_rxInt\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 157


 7475      78496E74 
 7475      00
 7476              	.LASF22:
 7477 05e8 6C6F6E67 		.ascii	"long double\000"
 7477      20646F75 
 7477      626C6500 
 7478              	.LASF64:
 7479 05f4 6973725F 		.ascii	"isr_adcTimer\000"
 7479      61646354 
 7479      696D6572 
 7479      00
 7480              	.LASF153:
 7481 0601 6C656674 		.ascii	"left_duty_cycle\000"
 7481      5F647574 
 7481      795F6379 
 7481      636C6500 
 7482              	.LASF65:
 7483 0611 6973725F 		.ascii	"isr_deadzone\000"
 7483      64656164 
 7483      7A6F6E65 
 7483      00
 7484              	.LASF131:
 7485 061e 666C6167 		.ascii	"flag_ts_speed\000"
 7485      5F74735F 
 7485      73706565 
 7485      6400
 7486              	.LASF136:
 7487 062c 64617461 		.ascii	"dataready_flag\000"
 7487      72656164 
 7487      795F666C 
 7487      616700
 7488              	.LASF165:
 7489 063b 696E6974 		.ascii	"initial_y_pos\000"
 7489      69616C5F 
 7489      795F706F 
 7489      7300
 7490              	.LASF133:
 7491 0649 666C6167 		.ascii	"flag_rx\000"
 7491      5F727800 
 7492              	.LASF2:
 7493 0651 73686F72 		.ascii	"short int\000"
 7493      7420696E 
 7493      7400
 7494              	.LASF140:
 7495 065b 6164635F 		.ascii	"adc_result\000"
 7495      72657375 
 7495      6C7400
 7496              	.LASF92:
 7497 0666 696E6974 		.ascii	"initTurnU\000"
 7497      5475726E 
 7497      5500
 7498              	.LASF144:
 7499 0670 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7499      5F63616C 
 7499      635F7768 
 7499      65656C73 
 7499      70656564 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 158


 7500              	.LASF4:
 7501 0685 6C6F6E67 		.ascii	"long int\000"
 7501      20696E74 
 7501      00
 7502              	.LASF91:
 7503 068e 696E6974 		.ascii	"initTurnRight\000"
 7503      5475726E 
 7503      52696768 
 7503      7400
 7504              	.LASF35:
 7505 069c 555F5452 		.ascii	"U_TRACK\000"
 7505      41434B00 
 7506              	.LASF124:
 7507 06a4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7507      52784275 
 7507      66666572 
 7507      00
 7508              	.LASF118:
 7509 06b1 7072696E 		.ascii	"printString\000"
 7509      74537472 
 7509      696E6700 
 7510              	.LASF98:
 7511 06bd 7278496E 		.ascii	"rxInt\000"
 7511      7400
 7512              	.LASF126:
 7513 06c3 74735F75 		.ascii	"ts_update\000"
 7513      70646174 
 7513      6500
 7514              	.LASF33:
 7515 06cd 4E4F5F54 		.ascii	"NO_TRACK\000"
 7515      5241434B 
 7515      00
 7516              	.LASF151:
 7517 06d6 64656164 		.ascii	"deadzone\000"
 7517      7A6F6E65 
 7517      00
 7518              	.LASF155:
 7519 06df 6C656674 		.ascii	"leftSpeedLimit\000"
 7519      53706565 
 7519      644C696D 
 7519      697400
 7520              	.LASF40:
 7521 06ee 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7521      54524156 
 7521      45525345 
 7521      00
 7522              	.LASF29:
 7523 06fb 54524143 		.ascii	"TRACKING_SOFT\000"
 7523      4B494E47 
 7523      5F534F46 
 7523      5400
 7524              	.LASF161:
 7525 0709 6F766572 		.ascii	"overshot_target\000"
 7525      73686F74 
 7525      5F746172 
 7525      67657400 
 7526              	.LASF79:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 159


 7527 0719 6C656674 		.ascii	"left\000"
 7527      00
 7528              	.LASF158:
 7529 071e 61636375 		.ascii	"accum_dist\000"
 7529      6D5F6469 
 7529      737400
 7530              	.LASF121:
 7531 0729 75736250 		.ascii	"usbPutString\000"
 7531      75745374 
 7531      72696E67 
 7531      00
 7532              	.LASF87:
 7533 0736 7475726E 		.ascii	"turnRight\000"
 7533      52696768 
 7533      7400
 7534              	.LASF51:
 7535 0740 67315F79 		.ascii	"g1_ypos\000"
 7535      706F7300 
 7536              	.LASF59:
 7537 0748 6164635F 		.ascii	"adc_isr\000"
 7537      69737200 
 7538              	.LASF119:
 7539 0750 72656164 		.ascii	"readFrontSensors\000"
 7539      46726F6E 
 7539      7453656E 
 7539      736F7273 
 7539      00
 7540              	.LASF162:
 7541 0761 71756164 		.ascii	"quad_per_cm\000"
 7541      5F706572 
 7541      5F636D00 
 7542              	.LASF157:
 7543 076d 74617267 		.ascii	"target_distance_cm\000"
 7543      65745F64 
 7543      69737461 
 7543      6E63655F 
 7543      636D00
 7544              	.LASF11:
 7545 0780 73697A65 		.ascii	"sizetype\000"
 7545      74797065 
 7545      00
 7546              	.LASF7:
 7547 0789 6C6F6E67 		.ascii	"long unsigned int\000"
 7547      20756E73 
 7547      69676E65 
 7547      6420696E 
 7547      7400
 7548              	.LASF71:
 7549 079b 62797465 		.ascii	"byte_packet\000"
 7549      5F706163 
 7549      6B657400 
 7550              	.LASF13:
 7551 07a7 696E7433 		.ascii	"int32_t\000"
 7551      325F7400 
 7552              	.LASF180:
 7553 07af 7061636B 		.ascii	"packet\000"
 7553      657400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 160


 7554              	.LASF192:
 7555 07b6 696E7374 		.ascii	"instructionLength\000"
 7555      72756374 
 7555      696F6E4C 
 7555      656E6774 
 7555      6800
 7556              	.LASF43:
 7557 07c8 726F626F 		.ascii	"robot_xpos\000"
 7557      745F7870 
 7557      6F7300
 7558              	.LASF85:
 7559 07d3 6272616B 		.ascii	"brakeMotor\000"
 7559      654D6F74 
 7559      6F7200
 7560              	.LASF190:
 7561 07de 666F6F64 		.ascii	"food_length\000"
 7561      5F6C656E 
 7561      67746800 
 7562              	.LASF172:
 7563 07ea 656E7472 		.ascii	"entry\000"
 7563      7900
 7564              	.LASF1:
 7565 07f0 756E7369 		.ascii	"unsigned char\000"
 7565      676E6564 
 7565      20636861 
 7565      7200
 7566              	.LASF6:
 7567 07fe 5F5F7569 		.ascii	"__uint32_t\000"
 7567      6E743332 
 7567      5F7400
 7568              	.LASF171:
 7569 0809 6C696E65 		.ascii	"line\000"
 7569      00
 7570              	.LASF160:
 7571 080e 72656163 		.ascii	"reached_target\000"
 7571      6865645F 
 7571      74617267 
 7571      657400
 7572              	.LASF62:
 7573 081d 53746F70 		.ascii	"Stop_on_line\000"
 7573      5F6F6E5F 
 7573      6C696E65 
 7573      00
 7574              	.LASF125:
 7575 082a 74735F65 		.ascii	"ts_enc\000"
 7575      6E6300
 7576              	.LASF166:
 7577 0831 6272616B 		.ascii	"brakeFlag\000"
 7577      65466C61 
 7577      6700
 7578              	.LASF132:
 7579 083b 666C6167 		.ascii	"flag_ts_display\000"
 7579      5F74735F 
 7579      64697370 
 7579      6C617900 
 7580              	.LASF31:
 7581 084b 73746174 		.ascii	"state\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 161


 7581      6500
 7582              	.LASF77:
 7583 0851 72657665 		.ascii	"reverseDirection\000"
 7583      72736544 
 7583      69726563 
 7583      74696F6E 
 7583      00
 7584              	.LASF83:
 7585 0862 6272616B 		.ascii	"brakeLeft\000"
 7585      654C6566 
 7585      7400
 7586              	.LASF170:
 7587 086c 64697370 		.ascii	"displaystring\000"
 7587      6C617973 
 7587      7472696E 
 7587      6700
 7588              	.LASF147:
 7589 087a 6C617374 		.ascii	"last_quad_count1\000"
 7589      5F717561 
 7589      645F636F 
 7589      756E7431 
 7589      00
 7590              	.LASF148:
 7591 088b 6C617374 		.ascii	"last_quad_count2\000"
 7591      5F717561 
 7591      645F636F 
 7591      756E7432 
 7591      00
 7592              	.LASF187:
 7593 089c 64657374 		.ascii	"destination\000"
 7593      696E6174 
 7593      696F6E00 
 7594              	.LASF122:
 7595 08a8 75736250 		.ascii	"usbPutChar\000"
 7595      75744368 
 7595      617200
 7596              	.LASF0:
 7597 08b3 7369676E 		.ascii	"signed char\000"
 7597      65642063 
 7597      68617200 
 7598              	.LASF3:
 7599 08bf 73686F72 		.ascii	"short unsigned int\000"
 7599      7420756E 
 7599      7369676E 
 7599      65642069 
 7599      6E7400
 7600              	.LASF45:
 7601 08d2 726F626F 		.ascii	"robot_orientation\000"
 7601      745F6F72 
 7601      69656E74 
 7601      6174696F 
 7601      6E00
 7602              	.LASF37:
 7603 08e4 51554144 		.ascii	"QUAD_STOP\000"
 7603      5F53544F 
 7603      5000
 7604              	.LASF73:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 162


 7605 08ee 6D61696E 		.ascii	"main\000"
 7605      00
 7606              	.LASF58:
 7607 08f3 42545F74 		.ascii	"BT_txInt\000"
 7607      78496E74 
 7607      00
 7608              	.LASF109:
 7609 08fc 6E657874 		.ascii	"nextSpeed\000"
 7609      53706565 
 7609      6400
 7610              	.LASF15:
 7611 0906 75696E74 		.ascii	"uint8\000"
 7611      3800
 7612              	.LASF21:
 7613 090c 646F7562 		.ascii	"double\000"
 7613      6C6500
 7614              	.LASF154:
 7615 0913 72696768 		.ascii	"right_duty_cycle\000"
 7615      745F6475 
 7615      74795F63 
 7615      79636C65 
 7615      00
 7616              	.LASF38:
 7617 0924 52465F53 		.ascii	"RF_STOP\000"
 7617      544F5000 
 7618              	.LASF76:
 7619 092c 68616E64 		.ascii	"handle_rx_binary\000"
 7619      6C655F72 
 7619      785F6269 
 7619      6E617279 
 7619      00
 7620              	.LASF117:
 7621 093d 7072696E 		.ascii	"print_RF\000"
 7621      745F5246 
 7621      00
 7622              	.LASF30:
 7623 0946 55545552 		.ascii	"UTURN\000"
 7623      4E00
 7624              	.LASF46:
 7625 094c 67305F78 		.ascii	"g0_xpos\000"
 7625      706F7300 
 7626              	.LASF107:
 7627 0954 7363616C 		.ascii	"scalingRight\000"
 7627      696E6752 
 7627      69676874 
 7627      00
 7628              	.LASF135:
 7629 0961 666C6167 		.ascii	"flag_KB_string\000"
 7629      5F4B425F 
 7629      73747269 
 7629      6E6700
 7630              	.LASF52:
 7631 0970 67315F73 		.ascii	"g1_speed\000"
 7631      70656564 
 7631      00
 7632              	.LASF196:
 7633 0979 2E5C6D61 		.ascii	".\\main.c\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccCbTaed.s 			page 163


 7633      696E2E63 
 7633      00
 7634              	.LASF164:
 7635 0982 696E6974 		.ascii	"initial_x_pos\000"
 7635      69616C5F 
 7635      785F706F 
 7635      7300
 7636              	.LASF84:
 7637 0990 6272616B 		.ascii	"brakeRight\000"
 7637      65526967 
 7637      687400
 7638              	.LASF96:
 7639 099b 696E6974 		.ascii	"initTrackU\000"
 7639      54726163 
 7639      6B5500
 7640              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
