ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	leftOn,1,1
 263              		.comm	rightOn,1,1
 264              		.comm	prevVoltage,2,2
 265              		.comm	prevVoltage2,2,2
 266              		.global	displaystring
 267 0009 000000   		.align	2
 268              		.type	displaystring, %object
 269              		.size	displaystring, 64
 270              	displaystring:
 271 000c 43533330 		.ascii	"CS301 2016\012\000"
 271      31203230 
 271      31360A00 
 272 0018 00000000 		.space	52
 272      00000000 
 272      00000000 
 272      00000000 
 272      00000000 
 273              		.comm	line,64,4
 274              		.comm	entry,64,4
 275              		.comm	usbBuffer,64,4
 276              		.comm	buffer_state,32,4
 277              		.comm	system_state,32,4
 278              		.global	prev_movement_state
 279              		.type	prev_movement_state, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 6


 280              		.size	prev_movement_state, 1
 281              	prev_movement_state:
 282 004c 03       		.byte	3
 283              		.global	movement_state
 284              		.type	movement_state, %object
 285              		.size	movement_state, 1
 286              	movement_state:
 287 004d 03       		.byte	3
 288              		.global	track_mode
 289              		.bss
 290              		.type	track_mode, %object
 291              		.size	track_mode, 1
 292              	track_mode:
 293 003c 00       		.space	1
 294              		.global	byteCount
 295              		.type	byteCount, %object
 296              		.size	byteCount, 1
 297              	byteCount:
 298 003d 00       		.space	1
 299              		.comm	packet,2,4
 300              		.global	speed
 301              		.data
 302 004e 0000     		.align	3
 303              		.type	speed, %object
 304              		.size	speed, 8
 305              	speed:
 306 0050 00000000 		.word	0
 307 0054 00002E40 		.word	1076756480
 308              		.comm	tracked_direction,4,4
 309              		.global	instructions
 310              		.bss
 311 003e 0000     		.align	2
 312              		.type	instructions, %object
 313              		.size	instructions, 800
 314              	instructions:
 315 0040 00000000 		.space	800
 315      00000000 
 315      00000000 
 315      00000000 
 315      00000000 
 316              		.global	instructionCount
 317              		.align	1
 318              		.type	instructionCount, %object
 319              		.size	instructionCount, 2
 320              	instructionCount:
 321 0360 0000     		.space	2
 322              		.global	instructionLength
 323              		.align	1
 324              		.type	instructionLength, %object
 325              		.size	instructionLength, 2
 326              	instructionLength:
 327 0362 0000     		.space	2
 328              		.global	sensorsDisabled
 329              		.align	2
 330              		.type	sensorsDisabled, %object
 331              		.size	sensorsDisabled, 4
 332              	sensorsDisabled:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 7


 333 0364 00000000 		.space	4
 334              		.global	robot_direction
 335              		.data
 336              		.align	2
 337              		.type	robot_direction, %object
 338              		.size	robot_direction, 4
 339              	robot_direction:
 340 0058 02000000 		.word	2
 341              		.global	path
 342              		.bss
 343              		.align	2
 344              		.type	path, %object
 345              		.size	path, 9600
 346              	path:
 347 0368 00000000 		.space	9600
 347      00000000 
 347      00000000 
 347      00000000 
 347      00000000 
 348              		.global	start
 349              		.data
 350              		.align	2
 351              		.type	start, %object
 352              		.size	start, 8
 353              	start:
 354 005c 01000000 		.word	1
 355 0060 01000000 		.word	1
 356              		.global	destination
 357              		.align	2
 358              		.type	destination, %object
 359              		.size	destination, 8
 360              	destination:
 361 0064 0E000000 		.word	14
 362 0068 12000000 		.word	18
 363              		.global	map
 364              		.align	2
 365              		.type	map, %object
 366              		.size	map, 1140
 367              	map:
 368 006c 01000000 		.word	1
 369 0070 01000000 		.word	1
 370 0074 01000000 		.word	1
 371 0078 01000000 		.word	1
 372 007c 01000000 		.word	1
 373 0080 01000000 		.word	1
 374 0084 01000000 		.word	1
 375 0088 01000000 		.word	1
 376 008c 01000000 		.word	1
 377 0090 01000000 		.word	1
 378 0094 01000000 		.word	1
 379 0098 01000000 		.word	1
 380 009c 01000000 		.word	1
 381 00a0 01000000 		.word	1
 382 00a4 01000000 		.word	1
 383 00a8 01000000 		.word	1
 384 00ac 01000000 		.word	1
 385 00b0 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 8


 386 00b4 01000000 		.word	1
 387 00b8 01000000 		.word	1
 388 00bc 00000000 		.word	0
 389 00c0 00000000 		.word	0
 390 00c4 00000000 		.word	0
 391 00c8 00000000 		.word	0
 392 00cc 00000000 		.word	0
 393 00d0 00000000 		.word	0
 394 00d4 00000000 		.word	0
 395 00d8 00000000 		.word	0
 396 00dc 00000000 		.word	0
 397 00e0 00000000 		.word	0
 398 00e4 00000000 		.word	0
 399 00e8 00000000 		.word	0
 400 00ec 00000000 		.word	0
 401 00f0 00000000 		.word	0
 402 00f4 00000000 		.word	0
 403 00f8 00000000 		.word	0
 404 00fc 00000000 		.word	0
 405 0100 01000000 		.word	1
 406 0104 01000000 		.word	1
 407 0108 01000000 		.word	1
 408 010c 00000000 		.word	0
 409 0110 01000000 		.word	1
 410 0114 01000000 		.word	1
 411 0118 01000000 		.word	1
 412 011c 01000000 		.word	1
 413 0120 01000000 		.word	1
 414 0124 01000000 		.word	1
 415 0128 01000000 		.word	1
 416 012c 01000000 		.word	1
 417 0130 01000000 		.word	1
 418 0134 01000000 		.word	1
 419 0138 00000000 		.word	0
 420 013c 01000000 		.word	1
 421 0140 01000000 		.word	1
 422 0144 00000000 		.word	0
 423 0148 01000000 		.word	1
 424 014c 01000000 		.word	1
 425 0150 01000000 		.word	1
 426 0154 01000000 		.word	1
 427 0158 00000000 		.word	0
 428 015c 01000000 		.word	1
 429 0160 00000000 		.word	0
 430 0164 00000000 		.word	0
 431 0168 00000000 		.word	0
 432 016c 00000000 		.word	0
 433 0170 01000000 		.word	1
 434 0174 01000000 		.word	1
 435 0178 00000000 		.word	0
 436 017c 00000000 		.word	0
 437 0180 00000000 		.word	0
 438 0184 00000000 		.word	0
 439 0188 01000000 		.word	1
 440 018c 01000000 		.word	1
 441 0190 00000000 		.word	0
 442 0194 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 9


 443 0198 01000000 		.word	1
 444 019c 01000000 		.word	1
 445 01a0 01000000 		.word	1
 446 01a4 00000000 		.word	0
 447 01a8 01000000 		.word	1
 448 01ac 00000000 		.word	0
 449 01b0 01000000 		.word	1
 450 01b4 01000000 		.word	1
 451 01b8 00000000 		.word	0
 452 01bc 01000000 		.word	1
 453 01c0 01000000 		.word	1
 454 01c4 01000000 		.word	1
 455 01c8 01000000 		.word	1
 456 01cc 01000000 		.word	1
 457 01d0 00000000 		.word	0
 458 01d4 01000000 		.word	1
 459 01d8 01000000 		.word	1
 460 01dc 00000000 		.word	0
 461 01e0 01000000 		.word	1
 462 01e4 01000000 		.word	1
 463 01e8 01000000 		.word	1
 464 01ec 01000000 		.word	1
 465 01f0 00000000 		.word	0
 466 01f4 01000000 		.word	1
 467 01f8 00000000 		.word	0
 468 01fc 01000000 		.word	1
 469 0200 01000000 		.word	1
 470 0204 00000000 		.word	0
 471 0208 00000000 		.word	0
 472 020c 00000000 		.word	0
 473 0210 00000000 		.word	0
 474 0214 00000000 		.word	0
 475 0218 00000000 		.word	0
 476 021c 00000000 		.word	0
 477 0220 01000000 		.word	1
 478 0224 01000000 		.word	1
 479 0228 00000000 		.word	0
 480 022c 01000000 		.word	1
 481 0230 01000000 		.word	1
 482 0234 01000000 		.word	1
 483 0238 01000000 		.word	1
 484 023c 00000000 		.word	0
 485 0240 00000000 		.word	0
 486 0244 00000000 		.word	0
 487 0248 00000000 		.word	0
 488 024c 00000000 		.word	0
 489 0250 00000000 		.word	0
 490 0254 01000000 		.word	1
 491 0258 01000000 		.word	1
 492 025c 01000000 		.word	1
 493 0260 01000000 		.word	1
 494 0264 01000000 		.word	1
 495 0268 00000000 		.word	0
 496 026c 01000000 		.word	1
 497 0270 01000000 		.word	1
 498 0274 00000000 		.word	0
 499 0278 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 10


 500 027c 01000000 		.word	1
 501 0280 01000000 		.word	1
 502 0284 01000000 		.word	1
 503 0288 01000000 		.word	1
 504 028c 01000000 		.word	1
 505 0290 01000000 		.word	1
 506 0294 01000000 		.word	1
 507 0298 01000000 		.word	1
 508 029c 00000000 		.word	0
 509 02a0 01000000 		.word	1
 510 02a4 01000000 		.word	1
 511 02a8 01000000 		.word	1
 512 02ac 00000000 		.word	0
 513 02b0 00000000 		.word	0
 514 02b4 00000000 		.word	0
 515 02b8 01000000 		.word	1
 516 02bc 01000000 		.word	1
 517 02c0 00000000 		.word	0
 518 02c4 01000000 		.word	1
 519 02c8 01000000 		.word	1
 520 02cc 01000000 		.word	1
 521 02d0 01000000 		.word	1
 522 02d4 00000000 		.word	0
 523 02d8 00000000 		.word	0
 524 02dc 00000000 		.word	0
 525 02e0 00000000 		.word	0
 526 02e4 00000000 		.word	0
 527 02e8 00000000 		.word	0
 528 02ec 01000000 		.word	1
 529 02f0 01000000 		.word	1
 530 02f4 01000000 		.word	1
 531 02f8 00000000 		.word	0
 532 02fc 01000000 		.word	1
 533 0300 00000000 		.word	0
 534 0304 01000000 		.word	1
 535 0308 01000000 		.word	1
 536 030c 00000000 		.word	0
 537 0310 01000000 		.word	1
 538 0314 01000000 		.word	1
 539 0318 01000000 		.word	1
 540 031c 01000000 		.word	1
 541 0320 00000000 		.word	0
 542 0324 01000000 		.word	1
 543 0328 00000000 		.word	0
 544 032c 01000000 		.word	1
 545 0330 01000000 		.word	1
 546 0334 00000000 		.word	0
 547 0338 01000000 		.word	1
 548 033c 01000000 		.word	1
 549 0340 01000000 		.word	1
 550 0344 00000000 		.word	0
 551 0348 01000000 		.word	1
 552 034c 00000000 		.word	0
 553 0350 01000000 		.word	1
 554 0354 01000000 		.word	1
 555 0358 00000000 		.word	0
 556 035c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 11


 557 0360 01000000 		.word	1
 558 0364 01000000 		.word	1
 559 0368 01000000 		.word	1
 560 036c 00000000 		.word	0
 561 0370 01000000 		.word	1
 562 0374 00000000 		.word	0
 563 0378 01000000 		.word	1
 564 037c 01000000 		.word	1
 565 0380 00000000 		.word	0
 566 0384 01000000 		.word	1
 567 0388 01000000 		.word	1
 568 038c 01000000 		.word	1
 569 0390 00000000 		.word	0
 570 0394 01000000 		.word	1
 571 0398 00000000 		.word	0
 572 039c 01000000 		.word	1
 573 03a0 01000000 		.word	1
 574 03a4 00000000 		.word	0
 575 03a8 01000000 		.word	1
 576 03ac 01000000 		.word	1
 577 03b0 01000000 		.word	1
 578 03b4 01000000 		.word	1
 579 03b8 00000000 		.word	0
 580 03bc 01000000 		.word	1
 581 03c0 00000000 		.word	0
 582 03c4 00000000 		.word	0
 583 03c8 00000000 		.word	0
 584 03cc 00000000 		.word	0
 585 03d0 00000000 		.word	0
 586 03d4 00000000 		.word	0
 587 03d8 00000000 		.word	0
 588 03dc 00000000 		.word	0
 589 03e0 01000000 		.word	1
 590 03e4 00000000 		.word	0
 591 03e8 00000000 		.word	0
 592 03ec 00000000 		.word	0
 593 03f0 00000000 		.word	0
 594 03f4 01000000 		.word	1
 595 03f8 01000000 		.word	1
 596 03fc 01000000 		.word	1
 597 0400 01000000 		.word	1
 598 0404 00000000 		.word	0
 599 0408 01000000 		.word	1
 600 040c 01000000 		.word	1
 601 0410 01000000 		.word	1
 602 0414 01000000 		.word	1
 603 0418 01000000 		.word	1
 604 041c 01000000 		.word	1
 605 0420 01000000 		.word	1
 606 0424 01000000 		.word	1
 607 0428 01000000 		.word	1
 608 042c 01000000 		.word	1
 609 0430 00000000 		.word	0
 610 0434 01000000 		.word	1
 611 0438 01000000 		.word	1
 612 043c 00000000 		.word	0
 613 0440 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 12


 614 0444 01000000 		.word	1
 615 0448 01000000 		.word	1
 616 044c 00000000 		.word	0
 617 0450 00000000 		.word	0
 618 0454 00000000 		.word	0
 619 0458 00000000 		.word	0
 620 045c 00000000 		.word	0
 621 0460 00000000 		.word	0
 622 0464 00000000 		.word	0
 623 0468 00000000 		.word	0
 624 046c 00000000 		.word	0
 625 0470 00000000 		.word	0
 626 0474 00000000 		.word	0
 627 0478 00000000 		.word	0
 628 047c 00000000 		.word	0
 629 0480 00000000 		.word	0
 630 0484 00000000 		.word	0
 631 0488 00000000 		.word	0
 632 048c 00000000 		.word	0
 633 0490 01000000 		.word	1
 634 0494 01000000 		.word	1
 635 0498 01000000 		.word	1
 636 049c 01000000 		.word	1
 637 04a0 01000000 		.word	1
 638 04a4 01000000 		.word	1
 639 04a8 01000000 		.word	1
 640 04ac 01000000 		.word	1
 641 04b0 01000000 		.word	1
 642 04b4 01000000 		.word	1
 643 04b8 01000000 		.word	1
 644 04bc 01000000 		.word	1
 645 04c0 01000000 		.word	1
 646 04c4 01000000 		.word	1
 647 04c8 01000000 		.word	1
 648 04cc 01000000 		.word	1
 649 04d0 01000000 		.word	1
 650 04d4 01000000 		.word	1
 651 04d8 01000000 		.word	1
 652 04dc 01000000 		.word	1
 653              		.global	food_list
 654              		.align	2
 655              		.type	food_list, %object
 656              		.size	food_list, 48
 657              	food_list:
 658 04e0 03000000 		.word	3
 659 04e4 06000000 		.word	6
 660 04e8 05000000 		.word	5
 661 04ec 0A000000 		.word	10
 662 04f0 0D000000 		.word	13
 663 04f4 09000000 		.word	9
 664 04f8 0D000000 		.word	13
 665 04fc 10000000 		.word	16
 666 0500 01000000 		.word	1
 667 0504 11000000 		.word	17
 668 0508 00000000 		.space	8
 668      00000000 
 669              		.global	food_length
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 13


 670              		.align	2
 671              		.type	food_length, %object
 672              		.size	food_length, 4
 673              	food_length:
 674 0510 05000000 		.word	5
 675 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 676              		.align	2
 677              		.global	BT_txInt
 678              		.thumb
 679              		.thumb_func
 680              		.type	BT_txInt, %function
 681              	BT_txInt:
 682              	.LFB63:
 683              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 134
  29:.\main.c      **** #define U_OFFSET 93
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 142
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t robot_direction = 2;
  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 14


  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {14, 18};//(y, x) DON'T HARDCODE THIS
  46:.\main.c      **** 
  47:.\main.c      **** // map default
  48:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      **** //                    {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      **** //                    {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      **** //                    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      **** //                    {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      **** //                    {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      **** //                    {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      **** //                    {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      **** //                    {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      **** //                    {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      **** //                    {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      **** //                    {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      **** //                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //practice map 1
  65:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  66:.\main.c      **** ////practice map 2
  67:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  68:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  69:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  70:.\main.c      ****                         {1,1,0,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1},
  71:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1},
  72:.\main.c      ****                         {1,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1},
  73:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1},
  74:.\main.c      ****                         {1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,0,1,1},
  75:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1},
  76:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  77:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  78:.\main.c      ****                         {1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1},
  79:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  80:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  81:.\main.c      ****                         {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  82:.\main.c      **** 
  83:.\main.c      **** //practice map 3
  84:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  85:.\main.c      **** 
  86:.\main.c      **** //first number is the y coord, second is x
  87:.\main.c      **** //first number is row, second column
  88:.\main.c      **** 
  89:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};//???
  90:.\main.c      **** //uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}}; //???
  91:.\main.c      **** //uint32_t food_list[6][2] ={ //default
  92:.\main.c      **** //{5, 7},
  93:.\main.c      **** //{5, 17},
  94:.\main.c      **** //{12, 13},
  95:.\main.c      **** //{5, 17},
  96:.\main.c      **** //{9, 3}
  97:.\main.c      **** //};
  98:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}}; //practice map 1
  99:.\main.c      **** //practice map 2
 100:.\main.c      **** uint32_t food_list[6][2]= {{3,6},{5,10},{13,9},{13,16},{1,17}};
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 15


 101:.\main.c      **** 
 102:.\main.c      **** //practice map 3
 103:.\main.c      **** //uint32_t food_list[6][2]= {{16,11},{3,12},{3,5},{9,7},{5,9}};
 104:.\main.c      **** 
 105:.\main.c      **** uint32_t food_length = 5;
 106:.\main.c      **** 
 107:.\main.c      **** void changeToRF();
 108:.\main.c      **** void changeToBT();
 109:.\main.c      **** void brakeMotor();
 110:.\main.c      **** void driveForwards();
 111:.\main.c      **** void initTurnLeft();
 112:.\main.c      **** void initTurnRight();
 113:.\main.c      **** void inittrackLineZ();
 114:.\main.c      **** void trackLineU();
 115:.\main.c      **** void trackLine();
 116:.\main.c      **** void trackLineZ();
 117:.\main.c      **** void initTrackU();
 118:.\main.c      **** void turnLeft();
 119:.\main.c      **** void turnRight();
 120:.\main.c      **** void initForward();
 121:.\main.c      **** void initTurnU();
 122:.\main.c      **** void turnU();
 123:.\main.c      **** void initBrake();
 124:.\main.c      **** void print_ADC();
 125:.\main.c      **** void Quad_Dec_response();
 126:.\main.c      **** void handle_rx_binary();
 127:.\main.c      **** void readFrontSensors();
 128:.\main.c      **** void print_RF();
 129:.\main.c      **** 
 130:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
 131:.\main.c      **** //BT
 132:.\main.c      **** CY_ISR(BT_txInt)
 133:.\main.c      **** {
 684              		.loc 1 133 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689 0000 80B4     		push	{r7}
 690              		.cfi_def_cfa_offset 4
 691              		.cfi_offset 7, -4
 692 0002 00AF     		add	r7, sp, #0
 693              		.cfi_def_cfa_register 7
 134:.\main.c      ****     
 135:.\main.c      **** }
 694              		.loc 1 135 0
 695 0004 BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 0006 5DF8047B 		ldr	r7, [sp], #4
 699              		.cfi_restore 7
 700              		.cfi_def_cfa_offset 0
 701 000a 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE63:
 704              		.size	BT_txInt, .-BT_txInt
 705              		.section	.text.adc_isr,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 16


 706              		.align	2
 707              		.global	adc_isr
 708              		.thumb
 709              		.thumb_func
 710              		.type	adc_isr, %function
 711              	adc_isr:
 712              	.LFB64:
 136:.\main.c      **** 
 137:.\main.c      **** //ADC:
 138:.\main.c      **** CY_ISR (adc_isr)
 139:.\main.c      **** {
 713              		.loc 1 139 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 140:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 141:.\main.c      ****     adc_result = ADC_GetResult16();
 723              		.loc 1 141 0
 724 0004 FFF7FEFF 		bl	ADC_GetResult16
 725 0008 0346     		mov	r3, r0
 726 000a 1A46     		mov	r2, r3
 727 000c 044B     		ldr	r3, .L3
 728 000e 1A80     		strh	r2, [r3]	@ movhi
 142:.\main.c      ****     flag_receive_ADC = 1;
 729              		.loc 1 142 0
 730 0010 044B     		ldr	r3, .L3+4
 731 0012 0122     		movs	r2, #1
 732 0014 1A70     		strb	r2, [r3]
 143:.\main.c      ****     flag_print_rf = 1;
 733              		.loc 1 143 0
 734 0016 044B     		ldr	r3, .L3+8
 735 0018 0122     		movs	r2, #1
 736 001a 1A70     		strb	r2, [r3]
 144:.\main.c      ****     //LED_Write(~LED_Read());
 145:.\main.c      **** }
 737              		.loc 1 145 0
 738 001c 80BD     		pop	{r7, pc}
 739              	.L4:
 740 001e 00BF     		.align	2
 741              	.L3:
 742 0020 00000000 		.word	adc_result
 743 0024 00000000 		.word	flag_receive_ADC
 744 0028 00000000 		.word	flag_print_rf
 745              		.cfi_endproc
 746              	.LFE64:
 747              		.size	adc_isr, .-adc_isr
 748              		.global	__aeabi_i2d
 749              		.global	__aeabi_dsub
 750              		.global	__aeabi_dcmpge
 751              		.global	__aeabi_dadd
 752              		.section	.text.isr_quad1,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 17


 753              		.align	2
 754              		.global	isr_quad1
 755              		.thumb
 756              		.thumb_func
 757              		.type	isr_quad1, %function
 758              	isr_quad1:
 759              	.LFB65:
 146:.\main.c      **** 
 147:.\main.c      **** CY_ISR (isr_quad1)
 148:.\main.c      **** {
 760              		.loc 1 148 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 B0B5     		push	{r4, r5, r7, lr}
 765              		.cfi_def_cfa_offset 16
 766              		.cfi_offset 4, -16
 767              		.cfi_offset 5, -12
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 149:.\main.c      ****     
 150:.\main.c      ****     //LED_Write(~LED_Read());
 151:.\main.c      ****     last_quad_count1 = quad_count1;
 772              		.loc 1 151 0
 773 0004 5C4B     		ldr	r3, .L12+8
 774 0006 1A88     		ldrh	r2, [r3]
 775 0008 5C4B     		ldr	r3, .L12+12
 776 000a 1A80     		strh	r2, [r3]	@ movhi
 152:.\main.c      ****     last_quad_count2 = quad_count2;
 777              		.loc 1 152 0
 778 000c 5C4B     		ldr	r3, .L12+16
 779 000e 1A88     		ldrh	r2, [r3]
 780 0010 5C4B     		ldr	r3, .L12+20
 781 0012 1A80     		strh	r2, [r3]	@ movhi
 153:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 782              		.loc 1 153 0
 783 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 784 0018 0346     		mov	r3, r0
 785 001a 1A46     		mov	r2, r3
 786 001c 564B     		ldr	r3, .L12+8
 787 001e 1A80     		strh	r2, [r3]	@ movhi
 154:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 788              		.loc 1 154 0
 789 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 790 0024 0346     		mov	r3, r0
 791 0026 1A46     		mov	r2, r3
 792 0028 554B     		ldr	r3, .L12+16
 793 002a 1A80     		strh	r2, [r3]	@ movhi
 155:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 794              		.loc 1 155 0
 795 002c 524B     		ldr	r3, .L12+8
 796 002e 1B88     		ldrh	r3, [r3]
 797 0030 9AB2     		uxth	r2, r3
 798 0032 524B     		ldr	r3, .L12+12
 799 0034 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 18


 800 0036 9BB2     		uxth	r3, r3
 801 0038 D31A     		subs	r3, r2, r3
 802 003a 9BB2     		uxth	r3, r3
 803 003c 9AB2     		uxth	r2, r3
 804 003e 524B     		ldr	r3, .L12+24
 805 0040 1A80     		strh	r2, [r3]	@ movhi
 156:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 806              		.loc 1 156 0
 807 0042 4F4B     		ldr	r3, .L12+16
 808 0044 1B88     		ldrh	r3, [r3]
 809 0046 9AB2     		uxth	r2, r3
 810 0048 4E4B     		ldr	r3, .L12+20
 811 004a 1B88     		ldrh	r3, [r3]
 812 004c 9BB2     		uxth	r3, r3
 813 004e D31A     		subs	r3, r2, r3
 814 0050 9BB2     		uxth	r3, r3
 815 0052 9AB2     		uxth	r2, r3
 816 0054 4D4B     		ldr	r3, .L12+28
 817 0056 1A80     		strh	r2, [r3]	@ movhi
 157:.\main.c      ****     
 158:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 818              		.loc 1 158 0
 819 0058 474B     		ldr	r3, .L12+8
 820 005a 1B88     		ldrh	r3, [r3]
 821 005c 1BB2     		sxth	r3, r3
 822 005e 002B     		cmp	r3, #0
 823 0060 B8BF     		it	lt
 824 0062 5B42     		rsblt	r3, r3, #0
 825 0064 40F6B832 		movw	r2, #3000
 826 0068 9342     		cmp	r3, r2
 827 006a 17DD     		ble	.L6
 828              		.loc 1 158 0 is_stmt 0 discriminator 1
 829 006c 484B     		ldr	r3, .L12+32
 830 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 0070 012B     		cmp	r3, #1
 832 0072 13D0     		beq	.L6
 833              		.loc 1 158 0 discriminator 2
 834 0074 464B     		ldr	r3, .L12+32
 835 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 836 0078 022B     		cmp	r3, #2
 837 007a 0FD0     		beq	.L6
 838              		.loc 1 158 0 discriminator 3
 839 007c 444B     		ldr	r3, .L12+32
 840 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 841 0080 072B     		cmp	r3, #7
 842 0082 0BD0     		beq	.L6
 159:.\main.c      ****     {
 160:.\main.c      ****         QuadDec_M1_SetCounter(0);
 843              		.loc 1 160 0 is_stmt 1
 844 0084 0020     		movs	r0, #0
 845 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 161:.\main.c      ****         QuadDec_M2_SetCounter(0);
 846              		.loc 1 161 0
 847 008a 0020     		movs	r0, #0
 848 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 162:.\main.c      ****         quad_count1 = 0;
 849              		.loc 1 162 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 19


 850 0090 394B     		ldr	r3, .L12+8
 851 0092 0022     		movs	r2, #0
 852 0094 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****         quad_count2 = 0;
 853              		.loc 1 163 0
 854 0096 3A4B     		ldr	r3, .L12+16
 855 0098 0022     		movs	r2, #0
 856 009a 1A80     		strh	r2, [r3]	@ movhi
 857              	.L6:
 164:.\main.c      ****     }
 165:.\main.c      **** 
 166:.\main.c      ****     flag_calc_wheelspeed = 1;
 858              		.loc 1 166 0
 859 009c 3D4B     		ldr	r3, .L12+36
 860 009e 0122     		movs	r2, #1
 861 00a0 1A70     		strb	r2, [r3]
 167:.\main.c      ****     
 168:.\main.c      ****     
 169:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 862              		.loc 1 169 0
 863 00a2 3D4B     		ldr	r3, .L12+40
 864 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 00a6 062B     		cmp	r3, #6
 866 00a8 5ED1     		bne	.L5
 867              		.loc 1 169 0 is_stmt 0 discriminator 1
 868 00aa 394B     		ldr	r3, .L12+32
 869 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 870 00ae 062B     		cmp	r3, #6
 871 00b0 5AD1     		bne	.L5
 170:.\main.c      ****     {
 171:.\main.c      ****         //track the distance
 172:.\main.c      ****         accum_dist += quad_diff1;
 872              		.loc 1 172 0 is_stmt 1
 873 00b2 3A4B     		ldr	r3, .L12+44
 874 00b4 1B88     		ldrh	r3, [r3]
 875 00b6 9AB2     		uxth	r2, r3
 876 00b8 334B     		ldr	r3, .L12+24
 877 00ba 1B88     		ldrh	r3, [r3]
 878 00bc 9BB2     		uxth	r3, r3
 879 00be 1344     		add	r3, r3, r2
 880 00c0 9BB2     		uxth	r3, r3
 881 00c2 9AB2     		uxth	r2, r3
 882 00c4 354B     		ldr	r3, .L12+44
 883 00c6 1A80     		strh	r2, [r3]	@ movhi
 173:.\main.c      ****         if(abs(accum_dist) >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 884              		.loc 1 173 0
 885 00c8 344B     		ldr	r3, .L12+44
 886 00ca 1B88     		ldrh	r3, [r3]
 887 00cc 1BB2     		sxth	r3, r3
 888 00ce 002B     		cmp	r3, #0
 889 00d0 B8BF     		it	lt
 890 00d2 5B42     		rsblt	r3, r3, #0
 891 00d4 1846     		mov	r0, r3
 892 00d6 FFF7FEFF 		bl	__aeabi_i2d
 893 00da 0446     		mov	r4, r0
 894 00dc 0D46     		mov	r5, r1
 895 00de 304B     		ldr	r3, .L12+48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 20


 896 00e0 1B88     		ldrh	r3, [r3]
 897 00e2 1BB2     		sxth	r3, r3
 898 00e4 1846     		mov	r0, r3
 899 00e6 FFF7FEFF 		bl	__aeabi_i2d
 900 00ea 0246     		mov	r2, r0
 901 00ec 0B46     		mov	r3, r1
 902 00ee 1046     		mov	r0, r2
 903 00f0 1946     		mov	r1, r3
 904 00f2 1FA3     		adr	r3, .L12
 905 00f4 D3E90023 		ldrd	r2, [r3]
 906 00f8 FFF7FEFF 		bl	__aeabi_dsub
 907 00fc 0246     		mov	r2, r0
 908 00fe 0B46     		mov	r3, r1
 909 0100 2046     		mov	r0, r4
 910 0102 2946     		mov	r1, r5
 911 0104 FFF7FEFF 		bl	__aeabi_dcmpge
 912 0108 0346     		mov	r3, r0
 913 010a 002B     		cmp	r3, #0
 914 010c 02D0     		beq	.L8
 174:.\main.c      ****         {
 175:.\main.c      ****             reached_target = 1;
 915              		.loc 1 175 0
 916 010e 254B     		ldr	r3, .L12+52
 917 0110 0122     		movs	r2, #1
 918 0112 1A70     		strb	r2, [r3]
 919              	.L8:
 176:.\main.c      ****         }
 177:.\main.c      ****         if((abs(accum_dist) >= (target_distance_quad + QUAD_PER_UNIT * 0.5)) || target_distance_qua
 920              		.loc 1 177 0
 921 0114 214B     		ldr	r3, .L12+44
 922 0116 1B88     		ldrh	r3, [r3]
 923 0118 1BB2     		sxth	r3, r3
 924 011a 002B     		cmp	r3, #0
 925 011c B8BF     		it	lt
 926 011e 5B42     		rsblt	r3, r3, #0
 927 0120 1846     		mov	r0, r3
 928 0122 FFF7FEFF 		bl	__aeabi_i2d
 929 0126 0446     		mov	r4, r0
 930 0128 0D46     		mov	r5, r1
 931 012a 1D4B     		ldr	r3, .L12+48
 932 012c 1B88     		ldrh	r3, [r3]
 933 012e 1BB2     		sxth	r3, r3
 934 0130 1846     		mov	r0, r3
 935 0132 FFF7FEFF 		bl	__aeabi_i2d
 936 0136 0246     		mov	r2, r0
 937 0138 0B46     		mov	r3, r1
 938 013a 1046     		mov	r0, r2
 939 013c 1946     		mov	r1, r3
 940 013e 0CA3     		adr	r3, .L12
 941 0140 D3E90023 		ldrd	r2, [r3]
 942 0144 FFF7FEFF 		bl	__aeabi_dadd
 943 0148 0246     		mov	r2, r0
 944 014a 0B46     		mov	r3, r1
 945 014c 2046     		mov	r0, r4
 946 014e 2946     		mov	r1, r5
 947 0150 FFF7FEFF 		bl	__aeabi_dcmpge
 948 0154 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 21


 949 0156 002B     		cmp	r3, #0
 950 0158 03D1     		bne	.L10
 951              		.loc 1 177 0 is_stmt 0 discriminator 1
 952 015a 114B     		ldr	r3, .L12+48
 953 015c 1B88     		ldrh	r3, [r3]
 954 015e 002B     		cmp	r3, #0
 955 0160 02D1     		bne	.L5
 956              	.L10:
 178:.\main.c      ****         {
 179:.\main.c      ****             overshot_target = 1;
 957              		.loc 1 179 0 is_stmt 1
 958 0162 114B     		ldr	r3, .L12+56
 959 0164 0122     		movs	r2, #1
 960 0166 1A70     		strb	r2, [r3]
 961              	.L5:
 180:.\main.c      ****         }
 181:.\main.c      ****     }
 182:.\main.c      **** }
 962              		.loc 1 182 0
 963 0168 B0BD     		pop	{r4, r5, r7, pc}
 964              	.L13:
 965 016a 00BFAFF3 		.align	3
 965      0080
 966              	.L12:
 967 0170 00000000 		.word	0
 968 0174 00C05140 		.word	1079099392
 969 0178 00000000 		.word	quad_count1
 970 017c 00000000 		.word	last_quad_count1
 971 0180 00000000 		.word	quad_count2
 972 0184 00000000 		.word	last_quad_count2
 973 0188 00000000 		.word	quad_diff1
 974 018c 00000000 		.word	quad_diff2
 975 0190 00000000 		.word	movement_state
 976 0194 00000000 		.word	flag_calc_wheelspeed
 977 0198 00000000 		.word	track_mode
 978 019c 00000000 		.word	accum_dist
 979 01a0 00000000 		.word	target_distance_quad
 980 01a4 00000000 		.word	reached_target
 981 01a8 00000000 		.word	overshot_target
 982              		.cfi_endproc
 983              	.LFE65:
 984              		.size	isr_quad1, .-isr_quad1
 985 01ac AFF30080 		.section	.text.isr_turn_timer,"ax",%progbits
 986              		.align	2
 987              		.global	isr_turn_timer
 988              		.thumb
 989              		.thumb_func
 990              		.type	isr_turn_timer, %function
 991              	isr_turn_timer:
 992              	.LFB66:
 183:.\main.c      **** 
 184:.\main.c      **** CY_ISR(isr_turn_timer)
 185:.\main.c      **** {
 993              		.loc 1 185 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 8
 996              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 22


 997 0000 80B5     		push	{r7, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 82B0     		sub	sp, sp, #8
 1002              		.cfi_def_cfa_offset 16
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 186:.\main.c      ****     if(movement_state == LTURN)
 1005              		.loc 1 186 0
 1006 0006 464B     		ldr	r3, .L22
 1007 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 000a 012B     		cmp	r3, #1
 1009 000c 33D1     		bne	.L15
 1010              	.LBB2:
 187:.\main.c      ****     {
 188:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 1011              		.loc 1 188 0
 1012 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1013 0012 0346     		mov	r3, r0
 1014 0014 1A46     		mov	r2, r3
 1015 0016 434B     		ldr	r3, .L22+4
 1016 0018 1B88     		ldrh	r3, [r3]
 1017 001a 1BB2     		sxth	r3, r3
 1018 001c D31A     		subs	r3, r2, r3
 1019 001e 002B     		cmp	r3, #0
 1020 0020 B8BF     		it	lt
 1021 0022 5B42     		rsblt	r3, r3, #0
 1022 0024 404A     		ldr	r2, .L22+8
 1023 0026 82FB0312 		smull	r1, r2, r2, r3
 1024 002a 1112     		asrs	r1, r2, #8
 1025 002c DA17     		asrs	r2, r3, #31
 1026 002e 8A1A     		subs	r2, r1, r2
 1027 0030 4FF45071 		mov	r1, #832
 1028 0034 01FB02F2 		mul	r2, r1, r2
 1029 0038 9A1A     		subs	r2, r3, r2
 1030 003a 1346     		mov	r3, r2	@ movhi
 1031 003c FB80     		strh	r3, [r7, #6]	@ movhi
 189:.\main.c      ****   
 190:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1032              		.loc 1 190 0
 1033 003e FB88     		ldrh	r3, [r7, #6]
 1034 0040 B82B     		cmp	r3, #184
 1035 0042 17D9     		bls	.L16
 1036              		.loc 1 190 0 is_stmt 0 discriminator 1
 1037 0044 FB88     		ldrh	r3, [r7, #6]
 1038 0046 E02B     		cmp	r3, #224
 1039 0048 14D8     		bhi	.L16
 1040              		.loc 1 190 0 discriminator 2
 1041 004a 384B     		ldr	r3, .L22+12
 1042 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1043 004e 012B     		cmp	r3, #1
 1044 0050 07D0     		beq	.L17
 1045              		.loc 1 190 0 discriminator 3
 1046 0052 364B     		ldr	r3, .L22+12
 1047 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1048 0056 012B     		cmp	r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 23


 1049 0058 03D0     		beq	.L17
 1050              		.loc 1 190 0 discriminator 4
 1051 005a 344B     		ldr	r3, .L22+12
 1052 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1053 005e 012B     		cmp	r3, #1
 1054 0060 08D1     		bne	.L16
 1055              	.L17:
 191:.\main.c      ****         {
 192:.\main.c      ****             //movement_state = STOPPED;
 193:.\main.c      ****             brakeMotor();
 1056              		.loc 1 193 0 is_stmt 1
 1057 0062 FFF7FEFF 		bl	brakeMotor
 194:.\main.c      ****             movement_state = prev_movement_state;
 1058              		.loc 1 194 0
 1059 0066 324B     		ldr	r3, .L22+16
 1060 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1061 006a 2D4B     		ldr	r3, .L22
 1062 006c 1A70     		strb	r2, [r3]
 195:.\main.c      ****             Timer_2_Stop();
 1063              		.loc 1 195 0
 1064 006e FFF7FEFF 		bl	Timer_2_Stop
 1065              	.LBE2:
 1066 0072 51E0     		b	.L14
 1067              	.L16:
 1068 0074 50E0     		b	.L14
 1069              	.L15:
 196:.\main.c      ****         }
 197:.\main.c      ****     }
 198:.\main.c      ****     else if (movement_state == RTURN)
 1070              		.loc 1 198 0
 1071 0076 2A4B     		ldr	r3, .L22
 1072 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 007a 022B     		cmp	r3, #2
 1074 007c 33D1     		bne	.L19
 1075              	.LBB3:
 199:.\main.c      ****     {
 200:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1076              		.loc 1 200 0
 1077 007e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1078 0082 0346     		mov	r3, r0
 1079 0084 1A46     		mov	r2, r3
 1080 0086 274B     		ldr	r3, .L22+4
 1081 0088 1B88     		ldrh	r3, [r3]
 1082 008a 1BB2     		sxth	r3, r3
 1083 008c D31A     		subs	r3, r2, r3
 1084 008e 002B     		cmp	r3, #0
 1085 0090 B8BF     		it	lt
 1086 0092 5B42     		rsblt	r3, r3, #0
 1087 0094 244A     		ldr	r2, .L22+8
 1088 0096 82FB0312 		smull	r1, r2, r2, r3
 1089 009a 1112     		asrs	r1, r2, #8
 1090 009c DA17     		asrs	r2, r3, #31
 1091 009e 8A1A     		subs	r2, r1, r2
 1092 00a0 4FF45071 		mov	r1, #832
 1093 00a4 01FB02F2 		mul	r2, r1, r2
 1094 00a8 9A1A     		subs	r2, r3, r2
 1095 00aa 1346     		mov	r3, r2	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 24


 1096 00ac BB80     		strh	r3, [r7, #4]	@ movhi
 201:.\main.c      ****         if(((distTurned >= 185) && distTurned <= 224) && (frontSensors[2] == 1 || frontSensors[1] =
 1097              		.loc 1 201 0
 1098 00ae BB88     		ldrh	r3, [r7, #4]
 1099 00b0 B82B     		cmp	r3, #184
 1100 00b2 17D9     		bls	.L20
 1101              		.loc 1 201 0 is_stmt 0 discriminator 1
 1102 00b4 BB88     		ldrh	r3, [r7, #4]
 1103 00b6 E02B     		cmp	r3, #224
 1104 00b8 14D8     		bhi	.L20
 1105              		.loc 1 201 0 discriminator 2
 1106 00ba 1C4B     		ldr	r3, .L22+12
 1107 00bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1108 00be 012B     		cmp	r3, #1
 1109 00c0 07D0     		beq	.L21
 1110              		.loc 1 201 0 discriminator 3
 1111 00c2 1A4B     		ldr	r3, .L22+12
 1112 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1113 00c6 012B     		cmp	r3, #1
 1114 00c8 03D0     		beq	.L21
 1115              		.loc 1 201 0 discriminator 4
 1116 00ca 184B     		ldr	r3, .L22+12
 1117 00cc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1118 00ce 012B     		cmp	r3, #1
 1119 00d0 08D1     		bne	.L20
 1120              	.L21:
 202:.\main.c      ****         {
 203:.\main.c      ****             //movement_state = STOPPED;
 204:.\main.c      ****             brakeMotor();
 1121              		.loc 1 204 0 is_stmt 1
 1122 00d2 FFF7FEFF 		bl	brakeMotor
 205:.\main.c      ****             movement_state = prev_movement_state;
 1123              		.loc 1 205 0
 1124 00d6 164B     		ldr	r3, .L22+16
 1125 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1126 00da 114B     		ldr	r3, .L22
 1127 00dc 1A70     		strb	r2, [r3]
 206:.\main.c      ****             Timer_2_Stop();
 1128              		.loc 1 206 0
 1129 00de FFF7FEFF 		bl	Timer_2_Stop
 1130              	.LBE3:
 1131 00e2 19E0     		b	.L14
 1132              	.L20:
 1133 00e4 18E0     		b	.L14
 1134              	.L19:
 207:.\main.c      ****         }
 208:.\main.c      ****     }
 209:.\main.c      ****     else if (movement_state == UTURN)
 1135              		.loc 1 209 0
 1136 00e6 0E4B     		ldr	r3, .L22
 1137 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 00ea 072B     		cmp	r3, #7
 1139 00ec 14D1     		bne	.L14
 210:.\main.c      ****     {
 211:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1140              		.loc 1 211 0
 1141 00ee FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 25


 1142 00f2 0346     		mov	r3, r0
 1143 00f4 1A46     		mov	r2, r3
 1144 00f6 0B4B     		ldr	r3, .L22+4
 1145 00f8 1B88     		ldrh	r3, [r3]
 1146 00fa 1BB2     		sxth	r3, r3
 1147 00fc D31A     		subs	r3, r2, r3
 1148 00fe 002B     		cmp	r3, #0
 1149 0100 B8BF     		it	lt
 1150 0102 5B42     		rsblt	r3, r3, #0
 1151 0104 CF2B     		cmp	r3, #207
 1152 0106 07DD     		ble	.L14
 212:.\main.c      ****         {
 213:.\main.c      ****             //movement_state = STOPPED;
 214:.\main.c      ****             brakeMotor();
 1153              		.loc 1 214 0
 1154 0108 FFF7FEFF 		bl	brakeMotor
 215:.\main.c      ****             movement_state = prev_movement_state;
 1155              		.loc 1 215 0
 1156 010c 084B     		ldr	r3, .L22+16
 1157 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1158 0110 034B     		ldr	r3, .L22
 1159 0112 1A70     		strb	r2, [r3]
 216:.\main.c      ****             Timer_2_Stop();
 1160              		.loc 1 216 0
 1161 0114 FFF7FEFF 		bl	Timer_2_Stop
 1162              	.L14:
 217:.\main.c      ****         }
 218:.\main.c      ****     }
 219:.\main.c      **** }
 1163              		.loc 1 219 0
 1164 0118 0837     		adds	r7, r7, #8
 1165              		.cfi_def_cfa_offset 8
 1166 011a BD46     		mov	sp, r7
 1167              		.cfi_def_cfa_register 13
 1168              		@ sp needed
 1169 011c 80BD     		pop	{r7, pc}
 1170              	.L23:
 1171 011e 00BF     		.align	2
 1172              	.L22:
 1173 0120 00000000 		.word	movement_state
 1174 0124 00000000 		.word	start_turn_count
 1175 0128 4FECC44E 		.word	1321528399
 1176 012c 00000000 		.word	frontSensors
 1177 0130 00000000 		.word	prev_movement_state
 1178              		.cfi_endproc
 1179              	.LFE66:
 1180              		.size	isr_turn_timer, .-isr_turn_timer
 1181              		.section	.text.Stop_on_line,"ax",%progbits
 1182              		.align	2
 1183              		.global	Stop_on_line
 1184              		.thumb
 1185              		.thumb_func
 1186              		.type	Stop_on_line, %function
 1187              	Stop_on_line:
 1188              	.LFB67:
 220:.\main.c      **** 
 221:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 26


 222:.\main.c      **** CY_ISR (Stop_on_line)
 223:.\main.c      **** {
 1189              		.loc 1 223 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194 0000 80B4     		push	{r7}
 1195              		.cfi_def_cfa_offset 4
 1196              		.cfi_offset 7, -4
 1197 0002 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
 224:.\main.c      ****     movement_state = STOPPED;
 1199              		.loc 1 224 0
 1200 0004 054B     		ldr	r3, .L26
 1201 0006 0322     		movs	r2, #3
 1202 0008 1A70     		strb	r2, [r3]
 225:.\main.c      ****     if(movement_state != DRIVE) return;
 1203              		.loc 1 225 0
 1204 000a 044B     		ldr	r3, .L26
 1205 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1206 000e 002B     		cmp	r3, #0
 1207 0010 00D0     		beq	.L24
 1208 0012 00BF     		nop
 1209              	.L24:
 226:.\main.c      ****     //initTurnLeft();
 227:.\main.c      **** }
 1210              		.loc 1 227 0
 1211 0014 BD46     		mov	sp, r7
 1212              		.cfi_def_cfa_register 13
 1213              		@ sp needed
 1214 0016 5DF8047B 		ldr	r7, [sp], #4
 1215              		.cfi_restore 7
 1216              		.cfi_def_cfa_offset 0
 1217 001a 7047     		bx	lr
 1218              	.L27:
 1219              		.align	2
 1220              	.L26:
 1221 001c 00000000 		.word	movement_state
 1222              		.cfi_endproc
 1223              	.LFE67:
 1224              		.size	Stop_on_line, .-Stop_on_line
 1225              		.section	.rodata
 1226              		.align	2
 1227              	.LC0:
 1228 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1228      74696E67 
 1228      20726F62 
 1228      6F74210D 
 1228      0A00
 1229              		.section	.text.button,"ax",%progbits
 1230              		.align	2
 1231              		.global	button
 1232              		.thumb
 1233              		.thumb_func
 1234              		.type	button, %function
 1235              	button:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 27


 1236              	.LFB68:
 228:.\main.c      **** 
 229:.\main.c      **** CY_ISR (button)
 230:.\main.c      **** {
 1237              		.loc 1 230 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241 0000 80B5     		push	{r7, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 7, -8
 1244              		.cfi_offset 14, -4
 1245 0002 00AF     		add	r7, sp, #0
 1246              		.cfi_def_cfa_register 7
 231:.\main.c      ****     if(BT_ENABLED)
 1247              		.loc 1 231 0
 1248 0004 054B     		ldr	r3, .L30
 1249 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1250 0008 002B     		cmp	r3, #0
 1251 000a 02D0     		beq	.L29
 232:.\main.c      ****     {
 233:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1252              		.loc 1 233 0
 1253 000c 0448     		ldr	r0, .L30+4
 1254 000e FFF7FEFF 		bl	UART_PutString
 1255              	.L29:
 234:.\main.c      ****     }
 235:.\main.c      ****     movement_state = DRIVE;
 1256              		.loc 1 235 0
 1257 0012 044B     		ldr	r3, .L30+8
 1258 0014 0022     		movs	r2, #0
 1259 0016 1A70     		strb	r2, [r3]
 236:.\main.c      **** }
 1260              		.loc 1 236 0
 1261 0018 80BD     		pop	{r7, pc}
 1262              	.L31:
 1263 001a 00BF     		.align	2
 1264              	.L30:
 1265 001c 00000000 		.word	BT_ENABLED
 1266 0020 00000000 		.word	.LC0
 1267 0024 00000000 		.word	movement_state
 1268              		.cfi_endproc
 1269              	.LFE68:
 1270              		.size	button, .-button
 1271              		.section	.text.isr_adcTimer,"ax",%progbits
 1272              		.align	2
 1273              		.global	isr_adcTimer
 1274              		.thumb
 1275              		.thumb_func
 1276              		.type	isr_adcTimer, %function
 1277              	isr_adcTimer:
 1278              	.LFB69:
 237:.\main.c      **** 
 238:.\main.c      **** CY_ISR(isr_adcTimer)
 239:.\main.c      **** {
 1279              		.loc 1 239 0
 1280              		.cfi_startproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 28


 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283 0000 80B5     		push	{r7, lr}
 1284              		.cfi_def_cfa_offset 8
 1285              		.cfi_offset 7, -8
 1286              		.cfi_offset 14, -4
 1287 0002 00AF     		add	r7, sp, #0
 1288              		.cfi_def_cfa_register 7
 240:.\main.c      ****     ADC_StartConvert();
 1289              		.loc 1 240 0
 1290 0004 FFF7FEFF 		bl	ADC_StartConvert
 241:.\main.c      **** }
 1291              		.loc 1 241 0
 1292 0008 80BD     		pop	{r7, pc}
 1293              		.cfi_endproc
 1294              	.LFE69:
 1295              		.size	isr_adcTimer, .-isr_adcTimer
 1296 000a 00BF     		.section	.rodata
 1297 0012 0000     		.align	2
 1298              	.LC1:
 1299 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1299      7A6F6E65 
 1299      206C6566 
 1299      740D0A00 
 1300              		.section	.text.isr_deadzone,"ax",%progbits
 1301              		.align	2
 1302              		.global	isr_deadzone
 1303              		.thumb
 1304              		.thumb_func
 1305              		.type	isr_deadzone, %function
 1306              	isr_deadzone:
 1307              	.LFB70:
 242:.\main.c      **** 
 243:.\main.c      **** CY_ISR(isr_deadzone)
 244:.\main.c      **** {
 1308              		.loc 1 244 0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 0
 1311              		@ frame_needed = 1, uses_anonymous_args = 0
 1312 0000 80B5     		push	{r7, lr}
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 7, -8
 1315              		.cfi_offset 14, -4
 1316 0002 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 245:.\main.c      ****     sensorsDisabled = 0;
 1318              		.loc 1 245 0
 1319 0004 054B     		ldr	r3, .L34
 1320 0006 0022     		movs	r2, #0
 1321 0008 1A60     		str	r2, [r3]
 246:.\main.c      ****     deadzone = 0;
 1322              		.loc 1 246 0
 1323 000a 054B     		ldr	r3, .L34+4
 1324 000c 0022     		movs	r2, #0
 1325 000e 1A70     		strb	r2, [r3]
 247:.\main.c      ****     Timer_Deadzone_Stop();
 1326              		.loc 1 247 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 29


 1327 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 248:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1328              		.loc 1 248 0
 1329 0014 0348     		ldr	r0, .L34+8
 1330 0016 FFF7FEFF 		bl	UART_PutString
 249:.\main.c      **** }
 1331              		.loc 1 249 0
 1332 001a 80BD     		pop	{r7, pc}
 1333              	.L35:
 1334              		.align	2
 1335              	.L34:
 1336 001c 00000000 		.word	sensorsDisabled
 1337 0020 00000000 		.word	deadzone
 1338 0024 14000000 		.word	.LC1
 1339              		.cfi_endproc
 1340              	.LFE70:
 1341              		.size	isr_deadzone, .-isr_deadzone
 1342              		.section	.rodata
 1343              		.align	2
 1344              	.LC2:
 1345 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1345      20747261 
 1345      76656C3A 
 1345      2025640D 
 1345      0A00
 1346 0036 0000     		.align	2
 1347              	.LC3:
 1348 0038 54726967 		.ascii	"Trigger intersection\015\012\000"
 1348      67657220 
 1348      696E7465 
 1348      72736563 
 1348      74696F6E 
 1349 004f 00       		.align	2
 1350              	.LC4:
 1351 0050 44656164 		.ascii	"Deadzone enter\015\012\000"
 1351      7A6F6E65 
 1351      20656E74 
 1351      65720D0A 
 1351      00
 1352 0061 000000   		.align	2
 1353              	.LC5:
 1354 0064 54617267 		.ascii	"Target dist: %d\015\012\000"
 1354      65742064 
 1354      6973743A 
 1354      2025640D 
 1354      0A00
 1355 0076 0000     		.align	2
 1356              	.LC6:
 1357 0078 696E7374 		.ascii	"instr count:%d\015\012\000"
 1357      7220636F 
 1357      756E743A 
 1357      25640D0A 
 1357      00
 1358 0089 000000   		.align	2
 1359              	.LC7:
 1360 008c 54726967 		.ascii	"Trigger white light\015\012\000"
 1360      67657220 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 30


 1360      77686974 
 1360      65206C69 
 1360      6768740D 
 1361 00a2 0000     		.align	2
 1362              	.LC8:
 1363 00a4 54726967 		.ascii	"Trigger quad\015\012\000"
 1363      67657220 
 1363      71756164 
 1363      0D0A00
 1364              		.global	__aeabi_d2iz
 1365              		.section	.text.main,"ax",%progbits
 1366              		.align	2
 1367              		.global	main
 1368              		.thumb
 1369              		.thumb_func
 1370              		.type	main, %function
 1371              	main:
 1372              	.LFB71:
 250:.\main.c      **** 
 251:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 252:.\main.c      **** 
 253:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 254:.\main.c      **** int main()
 255:.\main.c      **** {  
 1373              		.loc 1 255 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 56
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 8EB0     		sub	sp, sp, #56
 1382              		.cfi_def_cfa_offset 64
 1383 0004 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 256:.\main.c      **** 
 257:.\main.c      **** // ----- INITIALIZATIONS ----------
 258:.\main.c      ****     CYGlobalIntEnable;
 1385              		.loc 1 258 0
 1386              	@ 258 ".\main.c" 1
 1387 0006 62B6     		CPSIE   i
 1388              	@ 0 "" 2
 259:.\main.c      ****     if(ENABLE_PWM)
 260:.\main.c      ****     {
 261:.\main.c      ****         PWM_1_Start();// starting the pwm
 1389              		.loc 1 261 0
 1390              		.thumb
 1391 0008 FFF7FEFF 		bl	PWM_1_Start
 262:.\main.c      ****         PWM_2_Start();// starting the pwm
 1392              		.loc 1 262 0
 1393 000c FFF7FEFF 		bl	PWM_2_Start
 263:.\main.c      ****     }
 264:.\main.c      ****     
 265:.\main.c      ****     if(ENABLE_ADC)
 266:.\main.c      ****     {
 267:.\main.c      ****         ADC_Start();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 31


 268:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 269:.\main.c      ****         //ADC_StartConvert();
 270:.\main.c      ****         
 271:.\main.c      ****         //start the ADC timer for software trigger mode
 272:.\main.c      ****         Timer_TS_Start();
 273:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 274:.\main.c      ****     }
 275:.\main.c      ****     
 276:.\main.c      ****     if (ENABLE_QUAD)
 277:.\main.c      ****     {
 278:.\main.c      ****         QuadDec_M1_Start();
 1394              		.loc 1 278 0
 1395 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 279:.\main.c      ****         QuadDec_M2_Start();
 1396              		.loc 1 279 0
 1397 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 280:.\main.c      ****         
 281:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1398              		.loc 1 281 0
 1399 0018 AF48     		ldr	r0, .L104
 1400 001a FFF7FEFF 		bl	isr_quad1_StartEx
 282:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1401              		.loc 1 282 0
 1402 001e AF48     		ldr	r0, .L104+4
 1403 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 283:.\main.c      ****         
 284:.\main.c      ****         Timer_1_Start();
 1404              		.loc 1 284 0
 1405 0024 FFF7FEFF 		bl	Timer_1_Start
 285:.\main.c      ****     }
 286:.\main.c      ****     
 287:.\main.c      ****     if(ENABLE_STOP){
 288:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 289:.\main.c      ****         
 290:.\main.c      ****     }
 291:.\main.c      ****     isr_button_StartEx(button);
 1406              		.loc 1 291 0
 1407 0028 AD48     		ldr	r0, .L104+8
 1408 002a FFF7FEFF 		bl	isr_button_StartEx
 292:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1409              		.loc 1 292 0
 1410 002e AD48     		ldr	r0, .L104+12
 1411 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 293:.\main.c      **** 
 294:.\main.c      ****     // ------USB SETUP ----------------    
 295:.\main.c      ****     if (USE_USB){    
 296:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1412              		.loc 1 296 0
 1413 0034 0020     		movs	r0, #0
 1414 0036 0121     		movs	r1, #1
 1415 0038 FFF7FEFF 		bl	USBUART_Start
 297:.\main.c      ****         if (USBUART_GetConfiguration())
 1416              		.loc 1 297 0
 1417 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 1418 0040 0346     		mov	r3, r0
 1419 0042 002B     		cmp	r3, #0
 1420 0044 01D0     		beq	.L37
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 32


 298:.\main.c      ****             {
 299:.\main.c      ****                  USBUART_CDC_Init();
 1421              		.loc 1 299 0
 1422 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 1423              	.L37:
 300:.\main.c      ****             }
 301:.\main.c      ****     }
 302:.\main.c      ****     
 303:.\main.c      ****     if(BIN_ENABLED){
 1424              		.loc 1 303 0
 1425 004a A74B     		ldr	r3, .L104+16
 1426 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1427 004e 002B     		cmp	r3, #0
 1428 0050 01D0     		beq	.L38
 304:.\main.c      ****         changeToRF();
 1429              		.loc 1 304 0
 1430 0052 FFF7FEFF 		bl	changeToRF
 1431              	.L38:
 305:.\main.c      ****     }
 306:.\main.c      ****     
 307:.\main.c      ****     if(BT_ENABLED){
 1432              		.loc 1 307 0
 1433 0056 A54B     		ldr	r3, .L104+20
 1434 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1435 005a 002B     		cmp	r3, #0
 1436 005c 01D0     		beq	.L39
 308:.\main.c      ****         changeToBT();
 1437              		.loc 1 308 0
 1438 005e FFF7FEFF 		bl	changeToBT
 1439              	.L39:
 309:.\main.c      ****     }
 310:.\main.c      ****     
 311:.\main.c      ****     uint16 actionDebounce = 0;
 1440              		.loc 1 311 0
 1441 0062 0023     		movs	r3, #0
 1442 0064 FB86     		strh	r3, [r7, #54]	@ movhi
 1443              	.L101:
 312:.\main.c      ****     
 313:.\main.c      ****     //usbPutString("Started");
 314:.\main.c      ****     for(;;)
 315:.\main.c      ****     {
 316:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 317:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1444              		.loc 1 317 0
 1445 0066 FFF7FEFF 		bl	Quad_Dec_response
 318:.\main.c      ****         if(BIN_ENABLED == 1)
 1446              		.loc 1 318 0
 1447 006a 9F4B     		ldr	r3, .L104+16
 1448 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1449 006e 012B     		cmp	r3, #1
 1450 0070 03D1     		bne	.L40
 319:.\main.c      ****         {
 320:.\main.c      ****             handle_rx_binary();
 1451              		.loc 1 320 0
 1452 0072 FFF7FEFF 		bl	handle_rx_binary
 321:.\main.c      ****             print_RF();
 1453              		.loc 1 321 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 33


 1454 0076 FFF7FEFF 		bl	print_RF
 1455              	.L40:
 322:.\main.c      ****         }
 323:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 324:.\main.c      ****        
 325:.\main.c      ****         readFrontSensors(frontSensors);
 1456              		.loc 1 325 0
 1457 007a 9D48     		ldr	r0, .L104+24
 1458 007c FFF7FEFF 		bl	readFrontSensors
 326:.\main.c      ****         
 327:.\main.c      ****         switch(track_mode)
 1459              		.loc 1 327 0
 1460 0080 9C4B     		ldr	r3, .L104+28
 1461 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 0084 072B     		cmp	r3, #7
 1463 0086 00F25E83 		bhi	.L41
 1464 008a 01A2     		adr	r2, .L43
 1465 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1466              		.p2align 2
 1467              	.L43:
 1468 0090 47070000 		.word	.L41+1
 1469 0094 47070000 		.word	.L41+1
 1470 0098 47070000 		.word	.L41+1
 1471 009c B1000000 		.word	.L46+1
 1472 00a0 47070000 		.word	.L41+1
 1473 00a4 F5000000 		.word	.L48+1
 1474 00a8 1B010000 		.word	.L49+1
 1475 00ac 1B010000 		.word	.L49+1
 1476              		.p2align 1
 1477              	.L46:
 328:.\main.c      ****         {
 329:.\main.c      ****             case SQUARE_TRACK:
 330:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1478              		.loc 1 330 0
 1479 00b0 914B     		ldr	r3, .L104+32
 1480 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1481 00b4 012B     		cmp	r3, #1
 1482 00b6 1CD0     		beq	.L50
 1483              		.loc 1 330 0 is_stmt 0 discriminator 1
 1484 00b8 8F4B     		ldr	r3, .L104+32
 1485 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1486 00bc 022B     		cmp	r3, #2
 1487 00be 18D0     		beq	.L50
 331:.\main.c      ****                 {
 332:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1488              		.loc 1 332 0 is_stmt 1
 1489 00c0 8B4B     		ldr	r3, .L104+24
 1490 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 00c4 012B     		cmp	r3, #1
 1492 00c6 06D1     		bne	.L51
 1493              		.loc 1 332 0 is_stmt 0 discriminator 1
 1494 00c8 894B     		ldr	r3, .L104+24
 1495 00ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1496 00cc 012B     		cmp	r3, #1
 1497 00ce 02D1     		bne	.L51
 333:.\main.c      ****                         initTurnLeft();
 1498              		.loc 1 333 0 is_stmt 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 34


 1499 00d0 FFF7FEFF 		bl	initTurnLeft
 1500 00d4 0DE0     		b	.L50
 1501              	.L51:
 334:.\main.c      ****                     }
 335:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1502              		.loc 1 335 0
 1503 00d6 864B     		ldr	r3, .L104+24
 1504 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1505 00da 012B     		cmp	r3, #1
 1506 00dc 06D1     		bne	.L52
 1507              		.loc 1 335 0 is_stmt 0 discriminator 1
 1508 00de 844B     		ldr	r3, .L104+24
 1509 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1510 00e2 012B     		cmp	r3, #1
 1511 00e4 02D1     		bne	.L52
 336:.\main.c      ****                     {
 337:.\main.c      ****                         initTurnRight();
 1512              		.loc 1 337 0 is_stmt 1
 1513 00e6 FFF7FEFF 		bl	initTurnRight
 1514 00ea 02E0     		b	.L50
 1515              	.L52:
 338:.\main.c      ****                     }
 339:.\main.c      ****                     else inittrackLineZ();
 1516              		.loc 1 339 0
 1517 00ec FFF7FEFF 		bl	inittrackLineZ
 340:.\main.c      ****                 }
 341:.\main.c      ****             break;
 1518              		.loc 1 341 0
 1519 00f0 29E3     		b	.L41
 1520              	.L50:
 1521 00f2 28E3     		b	.L41
 1522              	.L48:
 342:.\main.c      ****             case NO_TRACK:
 343:.\main.c      ****             break;
 344:.\main.c      ****             case CURVE_TRACK:
 345:.\main.c      ****             break;
 346:.\main.c      ****             case U_TRACK:
 347:.\main.c      ****             break;
 348:.\main.c      ****             case QUAD_STOP:
 349:.\main.c      ****             break;
 350:.\main.c      ****             case RF_STOP:
 351:.\main.c      ****                 if(initial_pos_valid == 1)
 1523              		.loc 1 351 0
 1524 00f4 814B     		ldr	r3, .L104+36
 1525 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 00f8 012B     		cmp	r3, #1
 1527 00fa 0DD1     		bne	.L53
 352:.\main.c      ****                 {
 353:.\main.c      ****                     //changeToBT();
 354:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 355:.\main.c      ****                     //changeToRF();
 356:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1528              		.loc 1 356 0
 1529 00fc 804B     		ldr	r3, .L104+40
 1530 00fe 5A88     		ldrh	r2, [r3, #2]
 1531 0100 804B     		ldr	r3, .L104+44
 1532 0102 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 35


 357:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1533              		.loc 1 357 0
 1534 0104 7E4B     		ldr	r3, .L104+40
 1535 0106 9A88     		ldrh	r2, [r3, #4]
 1536 0108 7F4B     		ldr	r3, .L104+48
 1537 010a 1A80     		strh	r2, [r3]	@ movhi
 358:.\main.c      ****                     initial_pos_valid = 2;
 1538              		.loc 1 358 0
 1539 010c 7B4B     		ldr	r3, .L104+36
 1540 010e 0222     		movs	r2, #2
 1541 0110 1A70     		strb	r2, [r3]
 359:.\main.c      ****                     initForward();
 1542              		.loc 1 359 0
 1543 0112 FFF7FEFF 		bl	initForward
 360:.\main.c      ****                 }
 361:.\main.c      ****             break;
 1544              		.loc 1 361 0
 1545 0116 16E3     		b	.L41
 1546              	.L53:
 1547 0118 15E3     		b	.L41
 1548              	.L49:
 362:.\main.c      ****             case MAP_TRAVERSE:
 363:.\main.c      ****             case DEST_TEST:
 364:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1549              		.loc 1 364 0
 1550 011a 774B     		ldr	r3, .L104+32
 1551 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 011e 012B     		cmp	r3, #1
 1553 0120 00F01083 		beq	.L54
 1554              		.loc 1 364 0 is_stmt 0 discriminator 1
 1555 0124 744B     		ldr	r3, .L104+32
 1556 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 0128 022B     		cmp	r3, #2
 1558 012a 00F00B83 		beq	.L54
 1559              		.loc 1 364 0 discriminator 2
 1560 012e 724B     		ldr	r3, .L104+32
 1561 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1562 0132 072B     		cmp	r3, #7
 1563 0134 00F00683 		beq	.L54
 1564              	.LBB4:
 365:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 366:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1565              		.loc 1 366 0 is_stmt 1
 1566 0138 744B     		ldr	r3, .L104+52
 1567 013a 1B88     		ldrh	r3, [r3]
 1568 013c 1A46     		mov	r2, r3
 1569 013e 744B     		ldr	r3, .L104+56
 1570 0140 9B5C     		ldrb	r3, [r3, r2]
 1571 0142 87F83530 		strb	r3, [r7, #53]
 367:.\main.c      ****                     if(nextStep == 'U' && instructions[instructionCount+1] == 0)
 1572              		.loc 1 367 0
 1573 0146 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1574 014a 552B     		cmp	r3, #85
 1575 014c 13D1     		bne	.L55
 1576              		.loc 1 367 0 is_stmt 0 discriminator 1
 1577 014e 6F4B     		ldr	r3, .L104+52
 1578 0150 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 36


 1579 0152 0133     		adds	r3, r3, #1
 1580 0154 6E4A     		ldr	r2, .L104+56
 1581 0156 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1582 0158 002B     		cmp	r3, #0
 1583 015a 0CD1     		bne	.L55
 368:.\main.c      ****                     {
 369:.\main.c      ****                         instructionCount += 2;
 1584              		.loc 1 369 0 is_stmt 1
 1585 015c 6B4B     		ldr	r3, .L104+52
 1586 015e 1B88     		ldrh	r3, [r3]
 1587 0160 0233     		adds	r3, r3, #2
 1588 0162 9AB2     		uxth	r2, r3
 1589 0164 694B     		ldr	r3, .L104+52
 1590 0166 1A80     		strh	r2, [r3]	@ movhi
 370:.\main.c      ****                         nextStep = instructions[instructionCount];
 1591              		.loc 1 370 0
 1592 0168 684B     		ldr	r3, .L104+52
 1593 016a 1B88     		ldrh	r3, [r3]
 1594 016c 1A46     		mov	r2, r3
 1595 016e 684B     		ldr	r3, .L104+56
 1596 0170 9B5C     		ldrb	r3, [r3, r2]
 1597 0172 87F83530 		strb	r3, [r7, #53]
 1598              	.L55:
 371:.\main.c      ****                     }
 372:.\main.c      ****                     leftOn = frontSensors[0] && frontSensors[2];
 1599              		.loc 1 372 0
 1600 0176 5E4B     		ldr	r3, .L104+24
 1601 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1602 017a 002B     		cmp	r3, #0
 1603 017c 05D0     		beq	.L56
 1604              		.loc 1 372 0 is_stmt 0 discriminator 1
 1605 017e 5C4B     		ldr	r3, .L104+24
 1606 0180 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1607 0182 002B     		cmp	r3, #0
 1608 0184 01D0     		beq	.L56
 1609              		.loc 1 372 0 discriminator 3
 1610 0186 0123     		movs	r3, #1
 1611 0188 00E0     		b	.L57
 1612              	.L56:
 1613              		.loc 1 372 0 discriminator 4
 1614 018a 0023     		movs	r3, #0
 1615              	.L57:
 1616              		.loc 1 372 0 discriminator 6
 1617 018c DAB2     		uxtb	r2, r3
 1618 018e 614B     		ldr	r3, .L104+60
 1619 0190 1A70     		strb	r2, [r3]
 373:.\main.c      ****                     rightOn = frontSensors[4] && frontSensors[2];
 1620              		.loc 1 373 0 is_stmt 1 discriminator 6
 1621 0192 574B     		ldr	r3, .L104+24
 1622 0194 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1623 0196 002B     		cmp	r3, #0
 1624 0198 05D0     		beq	.L58
 1625              		.loc 1 373 0 is_stmt 0 discriminator 1
 1626 019a 554B     		ldr	r3, .L104+24
 1627 019c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1628 019e 002B     		cmp	r3, #0
 1629 01a0 01D0     		beq	.L58
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 37


 1630              		.loc 1 373 0 discriminator 3
 1631 01a2 0123     		movs	r3, #1
 1632 01a4 00E0     		b	.L59
 1633              	.L58:
 1634              		.loc 1 373 0 discriminator 4
 1635 01a6 0023     		movs	r3, #0
 1636              	.L59:
 1637              		.loc 1 373 0 discriminator 6
 1638 01a8 DAB2     		uxtb	r2, r3
 1639 01aa 5B4B     		ldr	r3, .L104+64
 1640 01ac 1A70     		strb	r2, [r3]
 374:.\main.c      ****                     if((leftOn && (nextStep != 'R')) || (rightOn && (nextStep != 'L'))){ //intersec
 1641              		.loc 1 374 0 is_stmt 1 discriminator 6
 1642 01ae 594B     		ldr	r3, .L104+60
 1643 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1644 01b2 002B     		cmp	r3, #0
 1645 01b4 03D0     		beq	.L60
 1646              		.loc 1 374 0 is_stmt 0 discriminator 1
 1647 01b6 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1648 01ba 522B     		cmp	r3, #82
 1649 01bc 09D1     		bne	.L61
 1650              	.L60:
 1651              		.loc 1 374 0 discriminator 3
 1652 01be 564B     		ldr	r3, .L104+64
 1653 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1654 01c2 002B     		cmp	r3, #0
 1655 01c4 00F00F81 		beq	.L62
 1656              		.loc 1 374 0 discriminator 4
 1657 01c8 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1658 01cc 4C2B     		cmp	r3, #76
 1659 01ce 00F00A81 		beq	.L62
 1660              	.L61:
 375:.\main.c      ****                         if(sensorsDisabled == 0)
 1661              		.loc 1 375 0 is_stmt 1
 1662 01d2 524B     		ldr	r3, .L104+68
 1663 01d4 1B68     		ldr	r3, [r3]
 1664 01d6 002B     		cmp	r3, #0
 1665 01d8 40F00481 		bne	.L63
 376:.\main.c      ****                         {
 377:.\main.c      ****                             actionDebounce++;
 1666              		.loc 1 377 0
 1667 01dc FB8E     		ldrh	r3, [r7, #54]
 1668 01de 0133     		adds	r3, r3, #1
 1669 01e0 FB86     		strh	r3, [r7, #54]	@ movhi
 378:.\main.c      ****                             if(actionDebounce >= 400)
 1670              		.loc 1 378 0
 1671 01e2 FB8E     		ldrh	r3, [r7, #54]
 1672 01e4 B3F5C87F 		cmp	r3, #400
 1673 01e8 C0F0FC80 		bcc	.L63
 1674              	.LBB5:
 379:.\main.c      ****                             {
 380:.\main.c      ****                                 char mes[16];
 381:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1675              		.loc 1 381 0
 1676 01ec 4C4B     		ldr	r3, .L104+72
 1677 01ee 1B88     		ldrh	r3, [r3]
 1678 01f0 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 38


 1679 01f2 07F12002 		add	r2, r7, #32
 1680 01f6 1046     		mov	r0, r2
 1681 01f8 4A49     		ldr	r1, .L104+76
 1682 01fa 1A46     		mov	r2, r3
 1683 01fc FFF7FEFF 		bl	sprintf
 382:.\main.c      ****                                  UART_PutString(mes);
 1684              		.loc 1 382 0
 1685 0200 07F12003 		add	r3, r7, #32
 1686 0204 1846     		mov	r0, r3
 1687 0206 FFF7FEFF 		bl	UART_PutString
 383:.\main.c      ****                             if(reached_target == 1)
 1688              		.loc 1 383 0
 1689 020a 474B     		ldr	r3, .L104+80
 1690 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 020e 012B     		cmp	r3, #1
 1692 0210 40F0E880 		bne	.L63
 1693              	.LBB6:
 384:.\main.c      ****                             {
 385:.\main.c      **** //                                if(nextStep == 'D')
 386:.\main.c      **** //                                {
 387:.\main.c      **** //                                    instructionCount += 2;
 388:.\main.c      **** //                                    nextStep = instructions[instructionCount]; 
 389:.\main.c      **** //                                }
 390:.\main.c      ****                                 
 391:.\main.c      ****                                 sensorsDisabled = 1;
 1694              		.loc 1 391 0
 1695 0214 414B     		ldr	r3, .L104+68
 1696 0216 0122     		movs	r2, #1
 1697 0218 1A60     		str	r2, [r3]
 392:.\main.c      ****                                 UART_PutString("Trigger intersection\r\n");
 1698              		.loc 1 392 0
 1699 021a 4448     		ldr	r0, .L104+84
 1700 021c FFF7FEFF 		bl	UART_PutString
 393:.\main.c      ****                                 UART_PutString("Deadzone enter\r\n");
 1701              		.loc 1 393 0
 1702 0220 4348     		ldr	r0, .L104+88
 1703 0222 FFF7FEFF 		bl	UART_PutString
 394:.\main.c      ****                                 deadzone = 1;
 1704              		.loc 1 394 0
 1705 0226 434B     		ldr	r3, .L104+92
 1706 0228 0122     		movs	r2, #1
 1707 022a 1A70     		strb	r2, [r3]
 395:.\main.c      ****                                 
 396:.\main.c      ****                                 accum_dist = 0;
 1708              		.loc 1 396 0
 1709 022c 3C4B     		ldr	r3, .L104+72
 1710 022e 0022     		movs	r2, #0
 1711 0230 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****                                 uint8 nextStepDist;
 398:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 1712              		.loc 1 398 0
 1713 0232 364B     		ldr	r3, .L104+52
 1714 0234 1B88     		ldrh	r3, [r3]
 1715 0236 1A46     		mov	r2, r3
 1716 0238 3F4B     		ldr	r3, .L104+96
 1717 023a 1B88     		ldrh	r3, [r3]
 1718 023c 053B     		subs	r3, r3, #5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 39


 1719 023e 9A42     		cmp	r2, r3
 1720 0240 07DC     		bgt	.L65
 1721              		.loc 1 398 0 is_stmt 0 discriminator 1
 1722 0242 324B     		ldr	r3, .L104+52
 1723 0244 1B88     		ldrh	r3, [r3]
 1724 0246 0333     		adds	r3, r3, #3
 1725 0248 314A     		ldr	r2, .L104+56
 1726 024a D35C     		ldrb	r3, [r2, r3]
 1727 024c 87F83430 		strb	r3, [r7, #52]
 1728 0250 02E0     		b	.L66
 1729              	.L65:
 399:.\main.c      ****                                 else nextStepDist = 0;
 1730              		.loc 1 399 0 is_stmt 1
 1731 0252 0023     		movs	r3, #0
 1732 0254 87F83430 		strb	r3, [r7, #52]
 1733              	.L66:
 400:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1734              		.loc 1 400 0
 1735 0258 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1736 025c 9BB2     		uxth	r3, r3
 1737 025e 1A46     		mov	r2, r3	@ movhi
 1738 0260 D200     		lsls	r2, r2, #3
 1739 0262 1A44     		add	r2, r2, r3
 1740 0264 D200     		lsls	r2, r2, #3
 1741 0266 D31A     		subs	r3, r2, r3
 1742 0268 5B00     		lsls	r3, r3, #1
 1743 026a 9BB2     		uxth	r3, r3
 1744 026c 9AB2     		uxth	r2, r3
 1745 026e 334B     		ldr	r3, .L104+100
 1746 0270 1A80     		strh	r2, [r3]	@ movhi
 401:.\main.c      ****                                 
 402:.\main.c      ****                                 
 403:.\main.c      ****                                 
 404:.\main.c      ****                                 switch(nextStep)
 1747              		.loc 1 404 0
 1748 0272 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1749 0276 4C3B     		subs	r3, r3, #76
 1750 0278 092B     		cmp	r3, #9
 1751 027a 7ED8     		bhi	.L102
 1752 027c 01A2     		adr	r2, .L69
 1753 027e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1754 0282 00BF     		.p2align 2
 1755              	.L69:
 1756 0284 BB020000 		.word	.L68+1
 1757 0288 7B030000 		.word	.L102+1
 1758 028c 7B030000 		.word	.L102+1
 1759 0290 7B030000 		.word	.L102+1
 1760 0294 7B030000 		.word	.L102+1
 1761 0298 7B030000 		.word	.L102+1
 1762 029c 41030000 		.word	.L70+1
 1763 02a0 AD020000 		.word	.L71+1
 1764 02a4 7B030000 		.word	.L102+1
 1765 02a8 5F030000 		.word	.L72+1
 1766              		.p2align 1
 1767              	.L71:
 405:.\main.c      ****                                 {
 406:.\main.c      ****                                     case 'S':
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 40


 407:.\main.c      ****                                         inittrackLineZ();
 1768              		.loc 1 407 0
 1769 02ac FFF7FEFF 		bl	inittrackLineZ
 408:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 1770              		.loc 1 408 0
 1771 02b0 42F21070 		movw	r0, #10000
 1772 02b4 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 409:.\main.c      ****                                         //do nothing
 410:.\main.c      ****                                     break;
 1773              		.loc 1 410 0
 1774 02b8 60E0     		b	.L73
 1775              	.L68:
 411:.\main.c      ****                                     case 'L':
 412:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 413:.\main.c      ****                                         initTurnLeft();
 1776              		.loc 1 413 0
 1777 02ba FFF7FEFF 		bl	initTurnLeft
 414:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1778              		.loc 1 414 0
 1779 02be 4CF25030 		movw	r0, #50000
 1780 02c2 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 415:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1781              		.loc 1 415 0
 1782 02c6 1D4B     		ldr	r3, .L104+100
 1783 02c8 1B88     		ldrh	r3, [r3]
 1784 02ca 9BB2     		uxth	r3, r3
 1785 02cc 863B     		subs	r3, r3, #134
 1786 02ce 9BB2     		uxth	r3, r3
 1787 02d0 9AB2     		uxth	r2, r3
 1788 02d2 1A4B     		ldr	r3, .L104+100
 1789 02d4 1A80     		strh	r2, [r3]	@ movhi
 416:.\main.c      ****                                     break;
 1790              		.loc 1 416 0
 1791 02d6 51E0     		b	.L73
 1792              	.L105:
 1793              		.align	2
 1794              	.L104:
 1795 02d8 00000000 		.word	isr_quad1
 1796 02dc 00000000 		.word	isr_turn_timer
 1797 02e0 00000000 		.word	button
 1798 02e4 00000000 		.word	isr_deadzone
 1799 02e8 00000000 		.word	BIN_ENABLED
 1800 02ec 00000000 		.word	BT_ENABLED
 1801 02f0 00000000 		.word	frontSensors
 1802 02f4 00000000 		.word	track_mode
 1803 02f8 00000000 		.word	movement_state
 1804 02fc 00000000 		.word	initial_pos_valid
 1805 0300 00000000 		.word	system_state
 1806 0304 00000000 		.word	initial_x_pos
 1807 0308 00000000 		.word	initial_y_pos
 1808 030c 00000000 		.word	instructionCount
 1809 0310 00000000 		.word	instructions
 1810 0314 00000000 		.word	leftOn
 1811 0318 00000000 		.word	rightOn
 1812 031c 00000000 		.word	sensorsDisabled
 1813 0320 00000000 		.word	accum_dist
 1814 0324 24000000 		.word	.LC2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 41


 1815 0328 00000000 		.word	reached_target
 1816 032c 38000000 		.word	.LC3
 1817 0330 50000000 		.word	.LC4
 1818 0334 00000000 		.word	deadzone
 1819 0338 00000000 		.word	instructionLength
 1820 033c 00000000 		.word	target_distance_quad
 1821              	.L70:
 417:.\main.c      ****                                     case 'R':
 418:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 419:.\main.c      ****                                         initTurnRight();
 1822              		.loc 1 419 0
 1823 0340 FFF7FEFF 		bl	initTurnRight
 420:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1824              		.loc 1 420 0
 1825 0344 AC4B     		ldr	r3, .L106
 1826 0346 1B88     		ldrh	r3, [r3]
 1827 0348 9BB2     		uxth	r3, r3
 1828 034a 863B     		subs	r3, r3, #134
 1829 034c 9BB2     		uxth	r3, r3
 1830 034e 9AB2     		uxth	r2, r3
 1831 0350 A94B     		ldr	r3, .L106
 1832 0352 1A80     		strh	r2, [r3]	@ movhi
 421:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 422:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1833              		.loc 1 422 0
 1834 0354 4CF25030 		movw	r0, #50000
 1835 0358 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 423:.\main.c      ****                                     break;
 1836              		.loc 1 423 0
 1837 035c 0EE0     		b	.L73
 1838              	.L72:
 424:.\main.c      ****                                     case 'U':
 425:.\main.c      ****                                         // Direction not tracked any more
 426:.\main.c      ****                                         initTurnU();
 1839              		.loc 1 426 0
 1840 035e FFF7FEFF 		bl	initTurnU
 427:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 1841              		.loc 1 427 0
 1842 0362 A648     		ldr	r0, .L106+4
 1843 0364 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 428:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 1844              		.loc 1 428 0
 1845 0368 A34B     		ldr	r3, .L106
 1846 036a 1B88     		ldrh	r3, [r3]
 1847 036c 9BB2     		uxth	r3, r3
 1848 036e 5D3B     		subs	r3, r3, #93
 1849 0370 9BB2     		uxth	r3, r3
 1850 0372 9AB2     		uxth	r2, r3
 1851 0374 A04B     		ldr	r3, .L106
 1852 0376 1A80     		strh	r2, [r3]	@ movhi
 429:.\main.c      ****                                         //target_distance_quad += 208;
 430:.\main.c      ****                                     break;
 1853              		.loc 1 430 0
 1854 0378 00E0     		b	.L73
 1855              	.L102:
 431:.\main.c      ****                                     
 432:.\main.c      ****                                     default:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 42


 433:.\main.c      ****                                         //do nothing
 434:.\main.c      ****                                         break;
 1856              		.loc 1 434 0
 1857 037a 00BF     		nop
 1858              	.L73:
 435:.\main.c      ****                                 }
 436:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 1859              		.loc 1 436 0
 1860 037c 9E4B     		ldr	r3, .L106
 1861 037e 1B88     		ldrh	r3, [r3]
 1862 0380 1BB2     		sxth	r3, r3
 1863 0382 002B     		cmp	r3, #0
 1864 0384 02DA     		bge	.L74
 1865              		.loc 1 436 0 is_stmt 0 discriminator 1
 1866 0386 9C4B     		ldr	r3, .L106
 1867 0388 0022     		movs	r2, #0
 1868 038a 1A80     		strh	r2, [r3]	@ movhi
 1869              	.L74:
 437:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1870              		.loc 1 437 0 is_stmt 1
 1871 038c 9A4B     		ldr	r3, .L106
 1872 038e 1B88     		ldrh	r3, [r3]
 1873 0390 1BB2     		sxth	r3, r3
 1874 0392 07F12002 		add	r2, r7, #32
 1875 0396 1046     		mov	r0, r2
 1876 0398 9949     		ldr	r1, .L106+8
 1877 039a 1A46     		mov	r2, r3
 1878 039c FFF7FEFF 		bl	sprintf
 438:.\main.c      ****                                  UART_PutString(mes);
 1879              		.loc 1 438 0
 1880 03a0 07F12003 		add	r3, r7, #32
 1881 03a4 1846     		mov	r0, r3
 1882 03a6 FFF7FEFF 		bl	UART_PutString
 439:.\main.c      ****                                 
 440:.\main.c      ****                                 Timer_Deadzone_Start();
 1883              		.loc 1 440 0
 1884 03aa FFF7FEFF 		bl	Timer_Deadzone_Start
 441:.\main.c      ****                                 reached_target = 0;
 1885              		.loc 1 441 0
 1886 03ae 954B     		ldr	r3, .L106+12
 1887 03b0 0022     		movs	r2, #0
 1888 03b2 1A70     		strb	r2, [r3]
 442:.\main.c      ****                                 overshot_target = 0;
 1889              		.loc 1 442 0
 1890 03b4 944B     		ldr	r3, .L106+16
 1891 03b6 0022     		movs	r2, #0
 1892 03b8 1A70     		strb	r2, [r3]
 443:.\main.c      ****                                 instructionCount += 2;
 1893              		.loc 1 443 0
 1894 03ba 944B     		ldr	r3, .L106+20
 1895 03bc 1B88     		ldrh	r3, [r3]
 1896 03be 0233     		adds	r3, r3, #2
 1897 03c0 9AB2     		uxth	r2, r3
 1898 03c2 924B     		ldr	r3, .L106+20
 1899 03c4 1A80     		strh	r2, [r3]	@ movhi
 444:.\main.c      ****                                 sprintf(mes, "instr count:%d\r\n", instructionCount);
 1900              		.loc 1 444 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 43


 1901 03c6 914B     		ldr	r3, .L106+20
 1902 03c8 1B88     		ldrh	r3, [r3]
 1903 03ca 1A46     		mov	r2, r3
 1904 03cc 07F12003 		add	r3, r7, #32
 1905 03d0 1846     		mov	r0, r3
 1906 03d2 8F49     		ldr	r1, .L106+24
 1907 03d4 FFF7FEFF 		bl	sprintf
 445:.\main.c      ****                                 UART_PutString(mes);
 1908              		.loc 1 445 0
 1909 03d8 07F12003 		add	r3, r7, #32
 1910 03dc 1846     		mov	r0, r3
 1911 03de FFF7FEFF 		bl	UART_PutString
 1912              	.LBE6:
 1913              	.LBE5:
 375:.\main.c      ****                         {
 1914              		.loc 1 375 0
 1915 03e2 AFE1     		b	.L54
 1916              	.L63:
 375:.\main.c      ****                         {
 1917              		.loc 1 375 0 is_stmt 0 discriminator 1
 1918 03e4 AEE1     		b	.L54
 1919              	.L62:
 446:.\main.c      ****                                 
 447:.\main.c      ****                             }
 448:.\main.c      ****                             }
 449:.\main.c      ****                         }
 450:.\main.c      ****                     }
 451:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 1920              		.loc 1 451 0 is_stmt 1
 1921 03e6 8B4B     		ldr	r3, .L106+28
 1922 03e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1923 03ea 002B     		cmp	r3, #0
 1924 03ec 40F0D280 		bne	.L75
 1925              		.loc 1 451 0 is_stmt 0 discriminator 1
 1926 03f0 884B     		ldr	r3, .L106+28
 1927 03f2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1928 03f4 002B     		cmp	r3, #0
 1929 03f6 40F0CD80 		bne	.L75
 1930              		.loc 1 451 0 discriminator 2
 1931 03fa 864B     		ldr	r3, .L106+28
 1932 03fc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1933 03fe 002B     		cmp	r3, #0
 1934 0400 40F0C880 		bne	.L75
 1935              		.loc 1 451 0 discriminator 3
 1936 0404 834B     		ldr	r3, .L106+28
 1937 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1938 0408 002B     		cmp	r3, #0
 1939 040a 40F0C380 		bne	.L75
 1940              		.loc 1 451 0 discriminator 4
 1941 040e 814B     		ldr	r3, .L106+28
 1942 0410 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1943 0412 002B     		cmp	r3, #0
 1944 0414 40F0BE80 		bne	.L75
 1945              		.loc 1 451 0 discriminator 5
 1946 0418 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1947 041c 552B     		cmp	r3, #85
 1948 041e 04D0     		beq	.L76
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 44


 1949              		.loc 1 451 0 discriminator 6
 1950 0420 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1951 0424 442B     		cmp	r3, #68
 1952 0426 40F0B580 		bne	.L75
 1953              	.L76:
 452:.\main.c      ****                     {
 453:.\main.c      ****                         if(sensorsDisabled == 0)
 1954              		.loc 1 453 0 is_stmt 1
 1955 042a 7B4B     		ldr	r3, .L106+32
 1956 042c 1B68     		ldr	r3, [r3]
 1957 042e 002B     		cmp	r3, #0
 1958 0430 40F0AF80 		bne	.L77
 454:.\main.c      ****                         {
 455:.\main.c      ****                                 if(nextStep == 'D')
 1959              		.loc 1 455 0
 1960 0434 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1961 0438 442B     		cmp	r3, #68
 1962 043a 17D1     		bne	.L78
 1963              	.LBB7:
 456:.\main.c      ****                                 {
 457:.\main.c      ****                                     char nextInstruction = instructions[instructionCount+2];
 1964              		.loc 1 457 0
 1965 043c 734B     		ldr	r3, .L106+20
 1966 043e 1B88     		ldrh	r3, [r3]
 1967 0440 0233     		adds	r3, r3, #2
 1968 0442 764A     		ldr	r2, .L106+36
 1969 0444 D35C     		ldrb	r3, [r2, r3]
 1970 0446 87F83130 		strb	r3, [r7, #49]
 458:.\main.c      ****                                     if(nextInstruction == 'U')
 1971              		.loc 1 458 0
 1972 044a 97F83130 		ldrb	r3, [r7, #49]	@ zero_extendqisi2
 1973 044e 552B     		cmp	r3, #85
 1974 0450 0CD1     		bne	.L78
 459:.\main.c      ****                                     {
 460:.\main.c      ****                                         instructionCount += 2;
 1975              		.loc 1 460 0
 1976 0452 6E4B     		ldr	r3, .L106+20
 1977 0454 1B88     		ldrh	r3, [r3]
 1978 0456 0233     		adds	r3, r3, #2
 1979 0458 9AB2     		uxth	r2, r3
 1980 045a 6C4B     		ldr	r3, .L106+20
 1981 045c 1A80     		strh	r2, [r3]	@ movhi
 461:.\main.c      ****                                         nextStep = instructions[instructionCount];
 1982              		.loc 1 461 0
 1983 045e 6B4B     		ldr	r3, .L106+20
 1984 0460 1B88     		ldrh	r3, [r3]
 1985 0462 1A46     		mov	r2, r3
 1986 0464 6D4B     		ldr	r3, .L106+36
 1987 0466 9B5C     		ldrb	r3, [r3, r2]
 1988 0468 87F83530 		strb	r3, [r7, #53]
 1989              	.L78:
 1990              	.LBE7:
 462:.\main.c      ****                                     }
 463:.\main.c      ****                                 }
 464:.\main.c      ****                                 
 465:.\main.c      ****                                 if(nextStep == 'U')
 1991              		.loc 1 465 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 45


 1992 046c 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 1993 0470 552B     		cmp	r3, #85
 1994 0472 40F08E80 		bne	.L77
 466:.\main.c      ****                                 {
 467:.\main.c      ****                                     actionDebounce++;
 1995              		.loc 1 467 0
 1996 0476 FB8E     		ldrh	r3, [r7, #54]
 1997 0478 0133     		adds	r3, r3, #1
 1998 047a FB86     		strh	r3, [r7, #54]	@ movhi
 468:.\main.c      ****                                     if(actionDebounce >= 2400)
 1999              		.loc 1 468 0
 2000 047c FB8E     		ldrh	r3, [r7, #54]
 2001 047e B3F5166F 		cmp	r3, #2400
 2002 0482 C0F08680 		bcc	.L77
 469:.\main.c      ****                                     {
 470:.\main.c      ****                                         if(reached_target == 1)
 2003              		.loc 1 470 0
 2004 0486 5F4B     		ldr	r3, .L106+12
 2005 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2006 048a 012B     		cmp	r3, #1
 2007 048c 40F08180 		bne	.L77
 2008              	.LBB8:
 471:.\main.c      ****                                         {
 472:.\main.c      ****                                     char mes[16];
 473:.\main.c      ****                                     sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2009              		.loc 1 473 0
 2010 0490 634B     		ldr	r3, .L106+40
 2011 0492 1B88     		ldrh	r3, [r3]
 2012 0494 1BB2     		sxth	r3, r3
 2013 0496 07F11002 		add	r2, r7, #16
 2014 049a 1046     		mov	r0, r2
 2015 049c 6149     		ldr	r1, .L106+44
 2016 049e 1A46     		mov	r2, r3
 2017 04a0 FFF7FEFF 		bl	sprintf
 474:.\main.c      ****                                      UART_PutString(mes);
 2018              		.loc 1 474 0
 2019 04a4 07F11003 		add	r3, r7, #16
 2020 04a8 1846     		mov	r0, r3
 2021 04aa FFF7FEFF 		bl	UART_PutString
 475:.\main.c      ****                                          accum_dist = 0;
 2022              		.loc 1 475 0
 2023 04ae 5C4B     		ldr	r3, .L106+40
 2024 04b0 0022     		movs	r2, #0
 2025 04b2 1A80     		strh	r2, [r3]	@ movhi
 476:.\main.c      ****                                     uint8 nextStepDist;
 477:.\main.c      ****                                     if(instructionCount <= instructionLength - 5) nextStepDist = in
 2026              		.loc 1 477 0
 2027 04b4 554B     		ldr	r3, .L106+20
 2028 04b6 1B88     		ldrh	r3, [r3]
 2029 04b8 1A46     		mov	r2, r3
 2030 04ba 5B4B     		ldr	r3, .L106+48
 2031 04bc 1B88     		ldrh	r3, [r3]
 2032 04be 053B     		subs	r3, r3, #5
 2033 04c0 9A42     		cmp	r2, r3
 2034 04c2 07DC     		bgt	.L79
 2035              		.loc 1 477 0 is_stmt 0 discriminator 1
 2036 04c4 514B     		ldr	r3, .L106+20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 46


 2037 04c6 1B88     		ldrh	r3, [r3]
 2038 04c8 0333     		adds	r3, r3, #3
 2039 04ca 544A     		ldr	r2, .L106+36
 2040 04cc D35C     		ldrb	r3, [r2, r3]
 2041 04ce 87F83330 		strb	r3, [r7, #51]
 2042 04d2 02E0     		b	.L80
 2043              	.L79:
 478:.\main.c      ****                                     else nextStepDist = 0;
 2044              		.loc 1 478 0 is_stmt 1
 2045 04d4 0023     		movs	r3, #0
 2046 04d6 87F83330 		strb	r3, [r7, #51]
 2047              	.L80:
 479:.\main.c      ****                                     
 480:.\main.c      ****                                     target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2048              		.loc 1 480 0
 2049 04da 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 2050 04de 9BB2     		uxth	r3, r3
 2051 04e0 1A46     		mov	r2, r3	@ movhi
 2052 04e2 D200     		lsls	r2, r2, #3
 2053 04e4 1A44     		add	r2, r2, r3
 2054 04e6 D200     		lsls	r2, r2, #3
 2055 04e8 D31A     		subs	r3, r2, r3
 2056 04ea 5B00     		lsls	r3, r3, #1
 2057 04ec 9BB2     		uxth	r3, r3
 2058 04ee 9AB2     		uxth	r2, r3
 2059 04f0 414B     		ldr	r3, .L106
 2060 04f2 1A80     		strh	r2, [r3]	@ movhi
 481:.\main.c      ****                                     target_distance_quad -= U_OFFSET;
 2061              		.loc 1 481 0
 2062 04f4 404B     		ldr	r3, .L106
 2063 04f6 1B88     		ldrh	r3, [r3]
 2064 04f8 9BB2     		uxth	r3, r3
 2065 04fa 5D3B     		subs	r3, r3, #93
 2066 04fc 9BB2     		uxth	r3, r3
 2067 04fe 9AB2     		uxth	r2, r3
 2068 0500 3D4B     		ldr	r3, .L106
 2069 0502 1A80     		strh	r2, [r3]	@ movhi
 482:.\main.c      ****                                     //target_distance_quad += 208;
 483:.\main.c      ****                                     
 484:.\main.c      ****                                         UART_PutString("Trigger white light\r\n");
 2070              		.loc 1 484 0
 2071 0504 4948     		ldr	r0, .L106+52
 2072 0506 FFF7FEFF 		bl	UART_PutString
 485:.\main.c      ****                                         UART_PutString("Deadzone enter\r\n");
 2073              		.loc 1 485 0
 2074 050a 4948     		ldr	r0, .L106+56
 2075 050c FFF7FEFF 		bl	UART_PutString
 486:.\main.c      ****                                         
 487:.\main.c      ****                                         deadzone = 1;
 2076              		.loc 1 487 0
 2077 0510 484B     		ldr	r3, .L106+60
 2078 0512 0122     		movs	r2, #1
 2079 0514 1A70     		strb	r2, [r3]
 488:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2080              		.loc 1 488 0
 2081 0516 3948     		ldr	r0, .L106+4
 2082 0518 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 47


 489:.\main.c      ****                                         if(target_distance_quad < 0) target_distance_quad = 0;
 2083              		.loc 1 489 0
 2084 051c 364B     		ldr	r3, .L106
 2085 051e 1B88     		ldrh	r3, [r3]
 2086 0520 1BB2     		sxth	r3, r3
 2087 0522 002B     		cmp	r3, #0
 2088 0524 02DA     		bge	.L81
 2089              		.loc 1 489 0 is_stmt 0 discriminator 1
 2090 0526 344B     		ldr	r3, .L106
 2091 0528 0022     		movs	r2, #0
 2092 052a 1A80     		strh	r2, [r3]	@ movhi
 2093              	.L81:
 490:.\main.c      ****                                         Timer_Deadzone_Start();
 2094              		.loc 1 490 0 is_stmt 1
 2095 052c FFF7FEFF 		bl	Timer_Deadzone_Start
 491:.\main.c      ****                                         actionDebounce = 0;
 2096              		.loc 1 491 0
 2097 0530 0023     		movs	r3, #0
 2098 0532 FB86     		strh	r3, [r7, #54]	@ movhi
 492:.\main.c      ****                                         sensorsDisabled = 1;
 2099              		.loc 1 492 0
 2100 0534 384B     		ldr	r3, .L106+32
 2101 0536 0122     		movs	r2, #1
 2102 0538 1A60     		str	r2, [r3]
 493:.\main.c      ****                                         initTurnU();
 2103              		.loc 1 493 0
 2104 053a FFF7FEFF 		bl	initTurnU
 494:.\main.c      ****                                         reached_target = 0;
 2105              		.loc 1 494 0
 2106 053e 314B     		ldr	r3, .L106+12
 2107 0540 0022     		movs	r2, #0
 2108 0542 1A70     		strb	r2, [r3]
 495:.\main.c      ****                                         overshot_target = 0;
 2109              		.loc 1 495 0
 2110 0544 304B     		ldr	r3, .L106+16
 2111 0546 0022     		movs	r2, #0
 2112 0548 1A70     		strb	r2, [r3]
 496:.\main.c      ****                                         instructionCount += 2;
 2113              		.loc 1 496 0
 2114 054a 304B     		ldr	r3, .L106+20
 2115 054c 1B88     		ldrh	r3, [r3]
 2116 054e 0233     		adds	r3, r3, #2
 2117 0550 9AB2     		uxth	r2, r3
 2118 0552 2E4B     		ldr	r3, .L106+20
 2119 0554 1A80     		strh	r2, [r3]	@ movhi
 497:.\main.c      ****                                         
 498:.\main.c      ****                                         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2120              		.loc 1 498 0
 2121 0556 284B     		ldr	r3, .L106
 2122 0558 1B88     		ldrh	r3, [r3]
 2123 055a 1BB2     		sxth	r3, r3
 2124 055c 07F11002 		add	r2, r7, #16
 2125 0560 1046     		mov	r0, r2
 2126 0562 2749     		ldr	r1, .L106+8
 2127 0564 1A46     		mov	r2, r3
 2128 0566 FFF7FEFF 		bl	sprintf
 499:.\main.c      ****                                         UART_PutString(mes);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 48


 2129              		.loc 1 499 0
 2130 056a 07F11003 		add	r3, r7, #16
 2131 056e 1846     		mov	r0, r3
 2132 0570 FFF7FEFF 		bl	UART_PutString
 500:.\main.c      ****                                         sprintf(mes, "instr count:%d\r\n", instructionCount);
 2133              		.loc 1 500 0
 2134 0574 254B     		ldr	r3, .L106+20
 2135 0576 1B88     		ldrh	r3, [r3]
 2136 0578 1A46     		mov	r2, r3
 2137 057a 07F11003 		add	r3, r7, #16
 2138 057e 1846     		mov	r0, r3
 2139 0580 2349     		ldr	r1, .L106+24
 2140 0582 FFF7FEFF 		bl	sprintf
 501:.\main.c      ****                                         UART_PutString(mes);
 2141              		.loc 1 501 0
 2142 0586 07F11003 		add	r3, r7, #16
 2143 058a 1846     		mov	r0, r3
 2144 058c FFF7FEFF 		bl	UART_PutString
 2145              	.LBE8:
 453:.\main.c      ****                         {
 2146              		.loc 1 453 0
 2147 0590 D8E0     		b	.L54
 2148              	.L77:
 453:.\main.c      ****                         {
 2149              		.loc 1 453 0 is_stmt 0 discriminator 3
 2150 0592 D7E0     		b	.L54
 2151              	.L75:
 502:.\main.c      ****                                 }
 503:.\main.c      ****                                 }
 504:.\main.c      ****                             }
 505:.\main.c      ****                         }
 506:.\main.c      ****                     }
 507:.\main.c      ****                     else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U' || nextSte
 2152              		.loc 1 507 0 is_stmt 1
 2153 0594 1C4B     		ldr	r3, .L106+16
 2154 0596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2155 0598 012B     		cmp	r3, #1
 2156 059a 40F0CE80 		bne	.L82
 2157              		.loc 1 507 0 is_stmt 0 discriminator 1
 2158 059e 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2159 05a2 442B     		cmp	r3, #68
 2160 05a4 08D0     		beq	.L83
 2161              		.loc 1 507 0 discriminator 2
 2162 05a6 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2163 05aa 552B     		cmp	r3, #85
 2164 05ac 04D0     		beq	.L83
 2165              		.loc 1 507 0 discriminator 3
 2166 05ae 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2167 05b2 532B     		cmp	r3, #83
 2168 05b4 40F0C180 		bne	.L82
 2169              	.L83:
 2170              	.LBB9:
 508:.\main.c      ****                     {
 509:.\main.c      ****                         
 510:.\main.c      ****                                 //instructionCount += 2;
 511:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 512:.\main.c      ****                                 char mes[16];
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 49


 513:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 2171              		.loc 1 513 0 is_stmt 1
 2172 05b8 194B     		ldr	r3, .L106+40
 2173 05ba 1B88     		ldrh	r3, [r3]
 2174 05bc 1BB2     		sxth	r3, r3
 2175 05be 3A46     		mov	r2, r7
 2176 05c0 1046     		mov	r0, r2
 2177 05c2 1849     		ldr	r1, .L106+44
 2178 05c4 1A46     		mov	r2, r3
 2179 05c6 FFF7FEFF 		bl	sprintf
 514:.\main.c      ****                                  UART_PutString(mes);
 2180              		.loc 1 514 0
 2181 05ca 3B46     		mov	r3, r7
 2182 05cc 1846     		mov	r0, r3
 2183 05ce FFF7FEFF 		bl	UART_PutString
 515:.\main.c      ****                                  accum_dist = 0;
 2184              		.loc 1 515 0
 2185 05d2 134B     		ldr	r3, .L106+40
 2186 05d4 0022     		movs	r2, #0
 2187 05d6 1A80     		strh	r2, [r3]	@ movhi
 516:.\main.c      ****                                 uint8 nextStepDist;
 517:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2188              		.loc 1 517 0
 2189 05d8 0C4B     		ldr	r3, .L106+20
 2190 05da 1B88     		ldrh	r3, [r3]
 2191 05dc 1A46     		mov	r2, r3
 2192 05de 124B     		ldr	r3, .L106+48
 2193 05e0 1B88     		ldrh	r3, [r3]
 2194 05e2 053B     		subs	r3, r3, #5
 2195 05e4 9A42     		cmp	r2, r3
 2196 05e6 27DC     		bgt	.L84
 2197              		.loc 1 517 0 is_stmt 0 discriminator 1
 2198 05e8 084B     		ldr	r3, .L106+20
 2199 05ea 1B88     		ldrh	r3, [r3]
 2200 05ec 0333     		adds	r3, r3, #3
 2201 05ee 0B4A     		ldr	r2, .L106+36
 2202 05f0 D35C     		ldrb	r3, [r2, r3]
 2203 05f2 87F83230 		strb	r3, [r7, #50]
 2204 05f6 22E0     		b	.L85
 2205              	.L107:
 2206              		.align	2
 2207              	.L106:
 2208 05f8 00000000 		.word	target_distance_quad
 2209 05fc 905F0100 		.word	90000
 2210 0600 64000000 		.word	.LC5
 2211 0604 00000000 		.word	reached_target
 2212 0608 00000000 		.word	overshot_target
 2213 060c 00000000 		.word	instructionCount
 2214 0610 78000000 		.word	.LC6
 2215 0614 00000000 		.word	frontSensors
 2216 0618 00000000 		.word	sensorsDisabled
 2217 061c 00000000 		.word	instructions
 2218 0620 00000000 		.word	accum_dist
 2219 0624 24000000 		.word	.LC2
 2220 0628 00000000 		.word	instructionLength
 2221 062c 8C000000 		.word	.LC7
 2222 0630 50000000 		.word	.LC4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 50


 2223 0634 00000000 		.word	deadzone
 2224              	.L84:
 518:.\main.c      ****                                 else nextStepDist = 0;
 2225              		.loc 1 518 0 is_stmt 1
 2226 0638 0023     		movs	r3, #0
 2227 063a 87F83230 		strb	r3, [r7, #50]
 2228              	.L85:
 519:.\main.c      ****                                 
 520:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2229              		.loc 1 520 0
 2230 063e 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 2231 0642 9BB2     		uxth	r3, r3
 2232 0644 1A46     		mov	r2, r3	@ movhi
 2233 0646 D200     		lsls	r2, r2, #3
 2234 0648 1A44     		add	r2, r2, r3
 2235 064a D200     		lsls	r2, r2, #3
 2236 064c D31A     		subs	r3, r2, r3
 2237 064e 5B00     		lsls	r3, r3, #1
 2238 0650 9BB2     		uxth	r3, r3
 2239 0652 9AB2     		uxth	r2, r3
 2240 0654 564B     		ldr	r3, .L108+8
 2241 0656 1A80     		strh	r2, [r3]	@ movhi
 521:.\main.c      ****                                 
 522:.\main.c      ****                                 
 523:.\main.c      ****                                     UART_PutString("Trigger quad\r\n");
 2242              		.loc 1 523 0
 2243 0658 5648     		ldr	r0, .L108+12
 2244 065a FFF7FEFF 		bl	UART_PutString
 524:.\main.c      ****                                     switch(nextStep)
 2245              		.loc 1 524 0
 2246 065e 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 2247 0662 532B     		cmp	r3, #83
 2248 0664 16D0     		beq	.L87
 2249 0666 552B     		cmp	r3, #85
 2250 0668 01D0     		beq	.L88
 2251 066a 442B     		cmp	r3, #68
 525:.\main.c      ****                                     {
 526:.\main.c      ****                                         case 'U':
 527:.\main.c      ****                                              Timer_Deadzone_WriteCounter(U_DEADZONE);
 528:.\main.c      ****                                             initTurnU();
 529:.\main.c      ****                                             //target_distance_quad += 208;
 530:.\main.c      ****                                             target_distance_quad -= U_OFFSET;
 531:.\main.c      ****                                             Timer_Deadzone_Start();
 532:.\main.c      ****                                              deadzone = 1;
 533:.\main.c      ****                                         break;
 534:.\main.c      ****                                         case 'D':
 535:.\main.c      ****                                             //do nothing
 536:.\main.c      ****                                         break;
 2252              		.loc 1 536 0
 2253 066c 37E0     		b	.L86
 2254              	.L88:
 527:.\main.c      ****                                             initTurnU();
 2255              		.loc 1 527 0
 2256 066e 5248     		ldr	r0, .L108+16
 2257 0670 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 528:.\main.c      ****                                             //target_distance_quad += 208;
 2258              		.loc 1 528 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 51


 2259 0674 FFF7FEFF 		bl	initTurnU
 530:.\main.c      ****                                             Timer_Deadzone_Start();
 2260              		.loc 1 530 0
 2261 0678 4D4B     		ldr	r3, .L108+8
 2262 067a 1B88     		ldrh	r3, [r3]
 2263 067c 9BB2     		uxth	r3, r3
 2264 067e 5D3B     		subs	r3, r3, #93
 2265 0680 9BB2     		uxth	r3, r3
 2266 0682 9AB2     		uxth	r2, r3
 2267 0684 4A4B     		ldr	r3, .L108+8
 2268 0686 1A80     		strh	r2, [r3]	@ movhi
 531:.\main.c      ****                                              deadzone = 1;
 2269              		.loc 1 531 0
 2270 0688 FFF7FEFF 		bl	Timer_Deadzone_Start
 532:.\main.c      ****                                         break;
 2271              		.loc 1 532 0
 2272 068c 4B4B     		ldr	r3, .L108+20
 2273 068e 0122     		movs	r2, #1
 2274 0690 1A70     		strb	r2, [r3]
 533:.\main.c      ****                                         case 'D':
 2275              		.loc 1 533 0
 2276 0692 24E0     		b	.L86
 2277              	.L87:
 537:.\main.c      ****                                         case 'S':
 538:.\main.c      ****                                             inittrackLineZ();
 2278              		.loc 1 538 0
 2279 0694 FFF7FEFF 		bl	inittrackLineZ
 539:.\main.c      ****                                             Timer_Deadzone_WriteCounter(S_DEADZONE);
 2280              		.loc 1 539 0
 2281 0698 42F21070 		movw	r0, #10000
 2282 069c FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 540:.\main.c      ****                                              target_distance_quad -= (QUAD_PER_UNIT * 0.5);
 2283              		.loc 1 540 0
 2284 06a0 434B     		ldr	r3, .L108+8
 2285 06a2 1B88     		ldrh	r3, [r3]
 2286 06a4 1BB2     		sxth	r3, r3
 2287 06a6 1846     		mov	r0, r3
 2288 06a8 FFF7FEFF 		bl	__aeabi_i2d
 2289 06ac 0246     		mov	r2, r0
 2290 06ae 0B46     		mov	r3, r1
 2291 06b0 1046     		mov	r0, r2
 2292 06b2 1946     		mov	r1, r3
 2293 06b4 3CA3     		adr	r3, .L108
 2294 06b6 D3E90023 		ldrd	r2, [r3]
 2295 06ba FFF7FEFF 		bl	__aeabi_dsub
 2296 06be 0246     		mov	r2, r0
 2297 06c0 0B46     		mov	r3, r1
 2298 06c2 1046     		mov	r0, r2
 2299 06c4 1946     		mov	r1, r3
 2300 06c6 FFF7FEFF 		bl	__aeabi_d2iz
 2301 06ca 0346     		mov	r3, r0
 2302 06cc 9AB2     		uxth	r2, r3
 2303 06ce 384B     		ldr	r3, .L108+8
 2304 06d0 1A80     		strh	r2, [r3]	@ movhi
 541:.\main.c      ****                                             Timer_Deadzone_Start();
 2305              		.loc 1 541 0
 2306 06d2 FFF7FEFF 		bl	Timer_Deadzone_Start
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 52


 542:.\main.c      ****                                             deadzone = 1;
 2307              		.loc 1 542 0
 2308 06d6 394B     		ldr	r3, .L108+20
 2309 06d8 0122     		movs	r2, #1
 2310 06da 1A70     		strb	r2, [r3]
 543:.\main.c      ****                                         break;
 2311              		.loc 1 543 0
 2312 06dc 00BF     		nop
 2313              	.L86:
 544:.\main.c      ****                                     }                                   
 545:.\main.c      ****                                     reached_target = 0;
 2314              		.loc 1 545 0
 2315 06de 384B     		ldr	r3, .L108+24
 2316 06e0 0022     		movs	r2, #0
 2317 06e2 1A70     		strb	r2, [r3]
 546:.\main.c      ****                                     overshot_target = 0;
 2318              		.loc 1 546 0
 2319 06e4 374B     		ldr	r3, .L108+28
 2320 06e6 0022     		movs	r2, #0
 2321 06e8 1A70     		strb	r2, [r3]
 547:.\main.c      ****                                     instructionCount += 2;
 2322              		.loc 1 547 0
 2323 06ea 374B     		ldr	r3, .L108+32
 2324 06ec 1B88     		ldrh	r3, [r3]
 2325 06ee 0233     		adds	r3, r3, #2
 2326 06f0 9AB2     		uxth	r2, r3
 2327 06f2 354B     		ldr	r3, .L108+32
 2328 06f4 1A80     		strh	r2, [r3]	@ movhi
 548:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 2329              		.loc 1 548 0
 2330 06f6 2E4B     		ldr	r3, .L108+8
 2331 06f8 1B88     		ldrh	r3, [r3]
 2332 06fa 1BB2     		sxth	r3, r3
 2333 06fc 002B     		cmp	r3, #0
 2334 06fe 02DA     		bge	.L90
 2335              		.loc 1 548 0 is_stmt 0 discriminator 1
 2336 0700 2B4B     		ldr	r3, .L108+8
 2337 0702 0022     		movs	r2, #0
 2338 0704 1A80     		strh	r2, [r3]	@ movhi
 2339              	.L90:
 549:.\main.c      ****                                     //Timer_Deadzone_Start();
 550:.\main.c      ****                                     //deadzone = 1;
 551:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2340              		.loc 1 551 0 is_stmt 1 discriminator 5
 2341 0706 2A4B     		ldr	r3, .L108+8
 2342 0708 1B88     		ldrh	r3, [r3]
 2343 070a 1BB2     		sxth	r3, r3
 2344 070c 3A46     		mov	r2, r7
 2345 070e 1046     		mov	r0, r2
 2346 0710 2E49     		ldr	r1, .L108+36
 2347 0712 1A46     		mov	r2, r3
 2348 0714 FFF7FEFF 		bl	sprintf
 552:.\main.c      ****                                     UART_PutString(mes);
 2349              		.loc 1 552 0 discriminator 5
 2350 0718 3B46     		mov	r3, r7
 2351 071a 1846     		mov	r0, r3
 2352 071c FFF7FEFF 		bl	UART_PutString
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 53


 553:.\main.c      ****                                     sprintf(mes, "instr count:%d\r\n", instructionCount);
 2353              		.loc 1 553 0 discriminator 5
 2354 0720 294B     		ldr	r3, .L108+32
 2355 0722 1B88     		ldrh	r3, [r3]
 2356 0724 1A46     		mov	r2, r3
 2357 0726 3B46     		mov	r3, r7
 2358 0728 1846     		mov	r0, r3
 2359 072a 2949     		ldr	r1, .L108+40
 2360 072c FFF7FEFF 		bl	sprintf
 554:.\main.c      ****                                     UART_PutString(mes);
 2361              		.loc 1 554 0 discriminator 5
 2362 0730 3B46     		mov	r3, r7
 2363 0732 1846     		mov	r0, r3
 2364 0734 FFF7FEFF 		bl	UART_PutString
 2365              	.LBE9:
 508:.\main.c      ****                         
 2366              		.loc 1 508 0 discriminator 5
 2367 0738 04E0     		b	.L54
 2368              	.L82:
 555:.\main.c      ****                     }
 556:.\main.c      ****                     else
 557:.\main.c      ****                     {
 558:.\main.c      ****                         inittrackLineZ();
 2369              		.loc 1 558 0
 2370 073a FFF7FEFF 		bl	inittrackLineZ
 559:.\main.c      ****                         actionDebounce = 0;
 2371              		.loc 1 559 0
 2372 073e 0023     		movs	r3, #0
 2373 0740 FB86     		strh	r3, [r7, #54]	@ movhi
 2374              	.LBE4:
 560:.\main.c      ****                     }
 561:.\main.c      ****                 }
 562:.\main.c      ****                 break;
 2375              		.loc 1 562 0
 2376 0742 FFE7     		b	.L103
 2377              	.L54:
 2378              	.L103:
 2379 0744 00BF     		nop
 2380              	.L41:
 563:.\main.c      ****         }
 564:.\main.c      ****         
 565:.\main.c      ****         switch(movement_state)
 2381              		.loc 1 565 0
 2382 0746 234B     		ldr	r3, .L108+44
 2383 0748 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2384 074a 072B     		cmp	r3, #7
 2385 074c 3FF68BAC 		bhi	.L101
 2386 0750 01A2     		adr	r2, .L93
 2387 0752 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2388 0756 00BF     		.p2align 2
 2389              	.L93:
 2390 0758 79070000 		.word	.L92+1
 2391 075c 7F070000 		.word	.L94+1
 2392 0760 85070000 		.word	.L95+1
 2393 0764 91070000 		.word	.L96+1
 2394 0768 97070000 		.word	.L97+1
 2395 076c 9D070000 		.word	.L98+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 54


 2396 0770 A3070000 		.word	.L99+1
 2397 0774 8B070000 		.word	.L100+1
 2398              		.p2align 1
 2399              	.L92:
 566:.\main.c      ****         {
 567:.\main.c      ****             case DRIVE:
 568:.\main.c      ****                 driveForwards();
 2400              		.loc 1 568 0
 2401 0778 FFF7FEFF 		bl	driveForwards
 569:.\main.c      ****             break;
 2402              		.loc 1 569 0
 2403 077c 13E0     		b	.L91
 2404              	.L94:
 570:.\main.c      ****             case LTURN:
 571:.\main.c      ****                 turnLeft();
 2405              		.loc 1 571 0
 2406 077e FFF7FEFF 		bl	turnLeft
 572:.\main.c      ****             break;
 2407              		.loc 1 572 0
 2408 0782 10E0     		b	.L91
 2409              	.L95:
 573:.\main.c      ****             case RTURN:
 574:.\main.c      ****                 turnRight();
 2410              		.loc 1 574 0
 2411 0784 FFF7FEFF 		bl	turnRight
 575:.\main.c      ****             break;
 2412              		.loc 1 575 0
 2413 0788 0DE0     		b	.L91
 2414              	.L100:
 576:.\main.c      ****             case UTURN:
 577:.\main.c      ****                 turnU();
 2415              		.loc 1 577 0
 2416 078a FFF7FEFF 		bl	turnU
 578:.\main.c      ****             break;
 2417              		.loc 1 578 0
 2418 078e 0AE0     		b	.L91
 2419              	.L96:
 579:.\main.c      ****             case STOPPED:
 580:.\main.c      ****                 brakeMotor();
 2420              		.loc 1 580 0
 2421 0790 FFF7FEFF 		bl	brakeMotor
 581:.\main.c      ****             break;
 2422              		.loc 1 581 0
 2423 0794 07E0     		b	.L91
 2424              	.L97:
 582:.\main.c      ****             case TRACKING:
 583:.\main.c      ****                 trackLine();
 2425              		.loc 1 583 0
 2426 0796 FFF7FEFF 		bl	trackLine
 584:.\main.c      ****             break;
 2427              		.loc 1 584 0
 2428 079a 04E0     		b	.L91
 2429              	.L98:
 585:.\main.c      ****             case TRACKING_U:
 586:.\main.c      ****                 trackLineU();
 2430              		.loc 1 586 0
 2431 079c FFF7FEFF 		bl	trackLineU
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 55


 587:.\main.c      ****             break;
 2432              		.loc 1 587 0
 2433 07a0 01E0     		b	.L91
 2434              	.L99:
 588:.\main.c      ****             case TRACKING_SOFT:
 589:.\main.c      ****                 trackLineZ();
 2435              		.loc 1 589 0
 2436 07a2 FFF7FEFF 		bl	trackLineZ
 2437              	.L91:
 590:.\main.c      ****         }      
 591:.\main.c      ****     }   
 2438              		.loc 1 591 0
 2439 07a6 5EE4     		b	.L101
 2440              	.L109:
 2441              		.align	3
 2442              	.L108:
 2443 07a8 00000000 		.word	0
 2444 07ac 00C05140 		.word	1079099392
 2445 07b0 00000000 		.word	target_distance_quad
 2446 07b4 A4000000 		.word	.LC8
 2447 07b8 905F0100 		.word	90000
 2448 07bc 00000000 		.word	deadzone
 2449 07c0 00000000 		.word	reached_target
 2450 07c4 00000000 		.word	overshot_target
 2451 07c8 00000000 		.word	instructionCount
 2452 07cc 64000000 		.word	.LC5
 2453 07d0 78000000 		.word	.LC6
 2454 07d4 00000000 		.word	movement_state
 2455              		.cfi_endproc
 2456              	.LFE71:
 2457              		.size	main, .-main
 2458              		.section	.text.handle_rx_binary,"ax",%progbits
 2459              		.align	2
 2460              		.global	handle_rx_binary
 2461              		.thumb
 2462              		.thumb_func
 2463              		.type	handle_rx_binary, %function
 2464              	handle_rx_binary:
 2465              	.LFB72:
 592:.\main.c      **** }
 593:.\main.c      **** 
 594:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 595:.\main.c      **** 
 596:.\main.c      **** void handle_rx_binary()
 597:.\main.c      **** {
 2466              		.loc 1 597 0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 32
 2469              		@ frame_needed = 1, uses_anonymous_args = 0
 2470              		@ link register save eliminated.
 2471 0000 80B4     		push	{r7}
 2472              		.cfi_def_cfa_offset 4
 2473              		.cfi_offset 7, -4
 2474 0002 89B0     		sub	sp, sp, #36
 2475              		.cfi_def_cfa_offset 40
 2476 0004 00AF     		add	r7, sp, #0
 2477              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 56


 598:.\main.c      ****     if(flag_rx == 1)
 2478              		.loc 1 598 0
 2479 0006 524B     		ldr	r3, .L130
 2480 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2481 000a 012B     		cmp	r3, #1
 2482 000c 40F09A80 		bne	.L110
 2483              	.LBB10:
 599:.\main.c      ****     {    
 600:.\main.c      ****         flag_rx = 0;
 2484              		.loc 1 600 0
 2485 0010 4F4B     		ldr	r3, .L130
 2486 0012 0022     		movs	r2, #0
 2487 0014 1A70     		strb	r2, [r3]
 601:.\main.c      ****         
 602:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2488              		.loc 1 602 0
 2489 0016 4F4B     		ldr	r3, .L130+4
 2490 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2491 001a 1B02     		lsls	r3, r3, #8
 2492 001c 9AB2     		uxth	r2, r3
 2493 001e 4D4B     		ldr	r3, .L130+4
 2494 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2495 0022 9BB2     		uxth	r3, r3
 2496 0024 1343     		orrs	r3, r3, r2
 2497 0026 9BB2     		uxth	r3, r3
 2498 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 603:.\main.c      ****         char byte_packet[12];
 604:.\main.c      ****         char string_packet[12];
 605:.\main.c      ****         
 606:.\main.c      ****         switch(byteCount)
 2499              		.loc 1 606 0
 2500 002a 4B4B     		ldr	r3, .L130+8
 2501 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2502 002e 043B     		subs	r3, r3, #4
 2503 0030 1E2B     		cmp	r3, #30
 2504 0032 00F28780 		bhi	.L110
 2505 0036 01A2     		adr	r2, .L114
 2506 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2507              		.p2align 2
 2508              	.L114:
 2509 003c B9000000 		.word	.L113+1
 2510 0040 45010000 		.word	.L110+1
 2511 0044 CD000000 		.word	.L115+1
 2512 0048 45010000 		.word	.L110+1
 2513 004c D5000000 		.word	.L116+1
 2514 0050 45010000 		.word	.L110+1
 2515 0054 DD000000 		.word	.L117+1
 2516 0058 45010000 		.word	.L110+1
 2517 005c E5000000 		.word	.L118+1
 2518 0060 45010000 		.word	.L110+1
 2519 0064 ED000000 		.word	.L119+1
 2520 0068 45010000 		.word	.L110+1
 2521 006c F5000000 		.word	.L120+1
 2522 0070 45010000 		.word	.L110+1
 2523 0074 FD000000 		.word	.L121+1
 2524 0078 45010000 		.word	.L110+1
 2525 007c 05010000 		.word	.L122+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 57


 2526 0080 45010000 		.word	.L110+1
 2527 0084 0D010000 		.word	.L123+1
 2528 0088 45010000 		.word	.L110+1
 2529 008c 15010000 		.word	.L124+1
 2530 0090 45010000 		.word	.L110+1
 2531 0094 1D010000 		.word	.L125+1
 2532 0098 45010000 		.word	.L110+1
 2533 009c 25010000 		.word	.L126+1
 2534 00a0 45010000 		.word	.L110+1
 2535 00a4 2D010000 		.word	.L127+1
 2536 00a8 45010000 		.word	.L110+1
 2537 00ac 35010000 		.word	.L128+1
 2538 00b0 45010000 		.word	.L110+1
 2539 00b4 3D010000 		.word	.L129+1
 2540              		.p2align 1
 2541              	.L113:
 607:.\main.c      ****         {
 608:.\main.c      ****             case 4:
 609:.\main.c      ****                 buffer_state.rssi = packet[0];
 2542              		.loc 1 609 0
 2543 00b8 264B     		ldr	r3, .L130+4
 2544 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2545 00bc DAB2     		uxtb	r2, r3
 2546 00be 274B     		ldr	r3, .L130+12
 2547 00c0 1A70     		strb	r2, [r3]
 610:.\main.c      ****                 buffer_state.index = packet[1];
 2548              		.loc 1 610 0
 2549 00c2 244B     		ldr	r3, .L130+4
 2550 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2551 00c6 254B     		ldr	r3, .L130+12
 2552 00c8 5A70     		strb	r2, [r3, #1]
 611:.\main.c      ****             break;
 2553              		.loc 1 611 0
 2554 00ca 3BE0     		b	.L110
 2555              	.L115:
 612:.\main.c      ****             case 6:
 613:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2556              		.loc 1 613 0
 2557 00cc FA8B     		ldrh	r2, [r7, #30]
 2558 00ce 234B     		ldr	r3, .L130+12
 2559 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 614:.\main.c      ****             break;
 2560              		.loc 1 614 0
 2561 00d2 37E0     		b	.L110
 2562              	.L116:
 615:.\main.c      ****             case 8:
 616:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2563              		.loc 1 616 0
 2564 00d4 FA8B     		ldrh	r2, [r7, #30]
 2565 00d6 214B     		ldr	r3, .L130+12
 2566 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 617:.\main.c      ****             break;
 2567              		.loc 1 617 0
 2568 00da 33E0     		b	.L110
 2569              	.L117:
 618:.\main.c      ****             case 10:
 619:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 58


 2570              		.loc 1 619 0
 2571 00dc FA8B     		ldrh	r2, [r7, #30]
 2572 00de 1F4B     		ldr	r3, .L130+12
 2573 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 620:.\main.c      ****             break;
 2574              		.loc 1 620 0
 2575 00e2 2FE0     		b	.L110
 2576              	.L118:
 621:.\main.c      ****             case 12:
 622:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2577              		.loc 1 622 0
 2578 00e4 FA8B     		ldrh	r2, [r7, #30]
 2579 00e6 1D4B     		ldr	r3, .L130+12
 2580 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 623:.\main.c      ****             break;
 2581              		.loc 1 623 0
 2582 00ea 2BE0     		b	.L110
 2583              	.L119:
 624:.\main.c      ****             case 14:
 625:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2584              		.loc 1 625 0
 2585 00ec FA8B     		ldrh	r2, [r7, #30]
 2586 00ee 1B4B     		ldr	r3, .L130+12
 2587 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 626:.\main.c      ****             break;
 2588              		.loc 1 626 0
 2589 00f2 27E0     		b	.L110
 2590              	.L120:
 627:.\main.c      ****             case 16:
 628:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2591              		.loc 1 628 0
 2592 00f4 FA8B     		ldrh	r2, [r7, #30]
 2593 00f6 194B     		ldr	r3, .L130+12
 2594 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 629:.\main.c      ****             break;
 2595              		.loc 1 629 0
 2596 00fa 23E0     		b	.L110
 2597              	.L121:
 630:.\main.c      ****             case 18:
 631:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2598              		.loc 1 631 0
 2599 00fc FA8B     		ldrh	r2, [r7, #30]
 2600 00fe 174B     		ldr	r3, .L130+12
 2601 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 632:.\main.c      ****             break;
 2602              		.loc 1 632 0
 2603 0102 1FE0     		b	.L110
 2604              	.L122:
 633:.\main.c      ****             case 20:
 634:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2605              		.loc 1 634 0
 2606 0104 FA8B     		ldrh	r2, [r7, #30]
 2607 0106 154B     		ldr	r3, .L130+12
 2608 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 635:.\main.c      ****             break;
 2609              		.loc 1 635 0
 2610 010a 1BE0     		b	.L110
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 59


 2611              	.L123:
 636:.\main.c      ****             case 22:
 637:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2612              		.loc 1 637 0
 2613 010c FA8B     		ldrh	r2, [r7, #30]
 2614 010e 134B     		ldr	r3, .L130+12
 2615 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 638:.\main.c      ****             break;
 2616              		.loc 1 638 0
 2617 0112 17E0     		b	.L110
 2618              	.L124:
 639:.\main.c      ****             case 24:
 640:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2619              		.loc 1 640 0
 2620 0114 FA8B     		ldrh	r2, [r7, #30]
 2621 0116 114B     		ldr	r3, .L130+12
 2622 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 641:.\main.c      ****             break;
 2623              		.loc 1 641 0
 2624 011a 13E0     		b	.L110
 2625              	.L125:
 642:.\main.c      ****             case 26:
 643:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2626              		.loc 1 643 0
 2627 011c FA8B     		ldrh	r2, [r7, #30]
 2628 011e 0F4B     		ldr	r3, .L130+12
 2629 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 644:.\main.c      ****             break;
 2630              		.loc 1 644 0
 2631 0122 0FE0     		b	.L110
 2632              	.L126:
 645:.\main.c      ****             case 28:
 646:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2633              		.loc 1 646 0
 2634 0124 FA8B     		ldrh	r2, [r7, #30]
 2635 0126 0D4B     		ldr	r3, .L130+12
 2636 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 647:.\main.c      ****             break;
 2637              		.loc 1 647 0
 2638 012a 0BE0     		b	.L110
 2639              	.L127:
 648:.\main.c      ****             case 30:
 649:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2640              		.loc 1 649 0
 2641 012c FA8B     		ldrh	r2, [r7, #30]
 2642 012e 0B4B     		ldr	r3, .L130+12
 2643 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 650:.\main.c      ****             break;
 2644              		.loc 1 650 0
 2645 0132 07E0     		b	.L110
 2646              	.L128:
 651:.\main.c      ****             case 32:
 652:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2647              		.loc 1 652 0
 2648 0134 FA8B     		ldrh	r2, [r7, #30]
 2649 0136 094B     		ldr	r3, .L130+12
 2650 0138 9A83     		strh	r2, [r3, #28]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 60


 653:.\main.c      ****             break;
 2651              		.loc 1 653 0
 2652 013a 03E0     		b	.L110
 2653              	.L129:
 654:.\main.c      ****             case 34:
 655:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2654              		.loc 1 655 0
 2655 013c FA8B     		ldrh	r2, [r7, #30]
 2656 013e 074B     		ldr	r3, .L130+12
 2657 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 656:.\main.c      ****             break;
 2658              		.loc 1 656 0
 2659 0142 00BF     		nop
 2660              	.L110:
 2661              	.LBE10:
 657:.\main.c      ****         }
 658:.\main.c      ****     }
 659:.\main.c      **** }
 2662              		.loc 1 659 0
 2663 0144 2437     		adds	r7, r7, #36
 2664              		.cfi_def_cfa_offset 4
 2665 0146 BD46     		mov	sp, r7
 2666              		.cfi_def_cfa_register 13
 2667              		@ sp needed
 2668 0148 5DF8047B 		ldr	r7, [sp], #4
 2669              		.cfi_restore 7
 2670              		.cfi_def_cfa_offset 0
 2671 014c 7047     		bx	lr
 2672              	.L131:
 2673 014e 00BF     		.align	2
 2674              	.L130:
 2675 0150 00000000 		.word	flag_rx
 2676 0154 00000000 		.word	packet
 2677 0158 00000000 		.word	byteCount
 2678 015c 00000000 		.word	buffer_state
 2679              		.cfi_endproc
 2680              	.LFE72:
 2681              		.size	handle_rx_binary, .-handle_rx_binary
 2682              		.section	.text.setLeftDir,"ax",%progbits
 2683              		.align	2
 2684              		.global	setLeftDir
 2685              		.thumb
 2686              		.thumb_func
 2687              		.type	setLeftDir, %function
 2688              	setLeftDir:
 2689              	.LFB73:
 660:.\main.c      **** 
 661:.\main.c      **** void setLeftDir(uint8 dir)
 662:.\main.c      **** {
 2690              		.loc 1 662 0
 2691              		.cfi_startproc
 2692              		@ args = 0, pretend = 0, frame = 8
 2693              		@ frame_needed = 1, uses_anonymous_args = 0
 2694 0000 80B5     		push	{r7, lr}
 2695              		.cfi_def_cfa_offset 8
 2696              		.cfi_offset 7, -8
 2697              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 61


 2698 0002 82B0     		sub	sp, sp, #8
 2699              		.cfi_def_cfa_offset 16
 2700 0004 00AF     		add	r7, sp, #0
 2701              		.cfi_def_cfa_register 7
 2702 0006 0346     		mov	r3, r0
 2703 0008 FB71     		strb	r3, [r7, #7]
 663:.\main.c      ****     M2_IN2_Write(dir);
 2704              		.loc 1 663 0
 2705 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2706 000c 1846     		mov	r0, r3
 2707 000e FFF7FEFF 		bl	M2_IN2_Write
 664:.\main.c      **** }
 2708              		.loc 1 664 0
 2709 0012 0837     		adds	r7, r7, #8
 2710              		.cfi_def_cfa_offset 8
 2711 0014 BD46     		mov	sp, r7
 2712              		.cfi_def_cfa_register 13
 2713              		@ sp needed
 2714 0016 80BD     		pop	{r7, pc}
 2715              		.cfi_endproc
 2716              	.LFE73:
 2717              		.size	setLeftDir, .-setLeftDir
 2718              		.section	.text.setRightDir,"ax",%progbits
 2719              		.align	2
 2720              		.global	setRightDir
 2721              		.thumb
 2722              		.thumb_func
 2723              		.type	setRightDir, %function
 2724              	setRightDir:
 2725              	.LFB74:
 665:.\main.c      **** 
 666:.\main.c      **** void setRightDir(uint8 dir)
 667:.\main.c      **** {
 2726              		.loc 1 667 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 8
 2729              		@ frame_needed = 1, uses_anonymous_args = 0
 2730 0000 80B5     		push	{r7, lr}
 2731              		.cfi_def_cfa_offset 8
 2732              		.cfi_offset 7, -8
 2733              		.cfi_offset 14, -4
 2734 0002 82B0     		sub	sp, sp, #8
 2735              		.cfi_def_cfa_offset 16
 2736 0004 00AF     		add	r7, sp, #0
 2737              		.cfi_def_cfa_register 7
 2738 0006 0346     		mov	r3, r0
 2739 0008 FB71     		strb	r3, [r7, #7]
 668:.\main.c      ****     M1_IN2_Write(dir);
 2740              		.loc 1 668 0
 2741 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2742 000c 1846     		mov	r0, r3
 2743 000e FFF7FEFF 		bl	M1_IN2_Write
 669:.\main.c      **** }
 2744              		.loc 1 669 0
 2745 0012 0837     		adds	r7, r7, #8
 2746              		.cfi_def_cfa_offset 8
 2747 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 62


 2748              		.cfi_def_cfa_register 13
 2749              		@ sp needed
 2750 0016 80BD     		pop	{r7, pc}
 2751              		.cfi_endproc
 2752              	.LFE74:
 2753              		.size	setRightDir, .-setRightDir
 2754              		.section	.rodata
 2755 00b3 00       		.align	2
 2756              	.LC9:
 2757 00b4 6469723A 		.ascii	"dir: %d\015\012\000"
 2757      2025640D 
 2757      0A00
 2758              		.section	.text.reverseDirection,"ax",%progbits
 2759              		.align	2
 2760              		.global	reverseDirection
 2761              		.thumb
 2762              		.thumb_func
 2763              		.type	reverseDirection, %function
 2764              	reverseDirection:
 2765              	.LFB75:
 670:.\main.c      **** 
 671:.\main.c      **** void reverseDirection()
 672:.\main.c      **** {
 2766              		.loc 1 672 0
 2767              		.cfi_startproc
 2768              		@ args = 0, pretend = 0, frame = 16
 2769              		@ frame_needed = 1, uses_anonymous_args = 0
 2770 0000 80B5     		push	{r7, lr}
 2771              		.cfi_def_cfa_offset 8
 2772              		.cfi_offset 7, -8
 2773              		.cfi_offset 14, -4
 2774 0002 84B0     		sub	sp, sp, #16
 2775              		.cfi_def_cfa_offset 24
 2776 0004 00AF     		add	r7, sp, #0
 2777              		.cfi_def_cfa_register 7
 673:.\main.c      ****     direction = !direction;
 2778              		.loc 1 673 0
 2779 0006 114B     		ldr	r3, .L135
 2780 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2781 000a 002B     		cmp	r3, #0
 2782 000c 0CBF     		ite	eq
 2783 000e 0123     		moveq	r3, #1
 2784 0010 0023     		movne	r3, #0
 2785 0012 DBB2     		uxtb	r3, r3
 2786 0014 1A46     		mov	r2, r3
 2787 0016 0D4B     		ldr	r3, .L135
 2788 0018 1A70     		strb	r2, [r3]
 674:.\main.c      ****     setLeftDir(direction);
 2789              		.loc 1 674 0
 2790 001a 0C4B     		ldr	r3, .L135
 2791 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2792 001e 1846     		mov	r0, r3
 2793 0020 FFF7FEFF 		bl	setLeftDir
 675:.\main.c      ****     setRightDir(direction);
 2794              		.loc 1 675 0
 2795 0024 094B     		ldr	r3, .L135
 2796 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 63


 2797 0028 1846     		mov	r0, r3
 2798 002a FFF7FEFF 		bl	setRightDir
 676:.\main.c      ****     char mes[16];
 677:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2799              		.loc 1 677 0
 2800 002e 074B     		ldr	r3, .L135
 2801 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2802 0032 1A46     		mov	r2, r3
 2803 0034 3B46     		mov	r3, r7
 2804 0036 1846     		mov	r0, r3
 2805 0038 0549     		ldr	r1, .L135+4
 2806 003a FFF7FEFF 		bl	sprintf
 678:.\main.c      ****     UART_PutString(mes);
 2807              		.loc 1 678 0
 2808 003e 3B46     		mov	r3, r7
 2809 0040 1846     		mov	r0, r3
 2810 0042 FFF7FEFF 		bl	UART_PutString
 679:.\main.c      **** }
 2811              		.loc 1 679 0
 2812 0046 1037     		adds	r7, r7, #16
 2813              		.cfi_def_cfa_offset 8
 2814 0048 BD46     		mov	sp, r7
 2815              		.cfi_def_cfa_register 13
 2816              		@ sp needed
 2817 004a 80BD     		pop	{r7, pc}
 2818              	.L136:
 2819              		.align	2
 2820              	.L135:
 2821 004c 00000000 		.word	direction
 2822 0050 B4000000 		.word	.LC9
 2823              		.cfi_endproc
 2824              	.LFE75:
 2825              		.size	reverseDirection, .-reverseDirection
 2826              		.global	__aeabi_dcmplt
 2827              		.global	__aeabi_ddiv
 2828              		.section	.text.setSpeed,"ax",%progbits
 2829              		.align	2
 2830              		.global	setSpeed
 2831              		.thumb
 2832              		.thumb_func
 2833              		.type	setSpeed, %function
 2834              	setSpeed:
 2835              	.LFB76:
 680:.\main.c      **** 
 681:.\main.c      **** void setSpeed(double left, double right){
 2836              		.loc 1 681 0
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 24
 2839              		@ frame_needed = 1, uses_anonymous_args = 0
 2840 0000 80B5     		push	{r7, lr}
 2841              		.cfi_def_cfa_offset 8
 2842              		.cfi_offset 7, -8
 2843              		.cfi_offset 14, -4
 2844 0002 86B0     		sub	sp, sp, #24
 2845              		.cfi_def_cfa_offset 32
 2846 0004 00AF     		add	r7, sp, #0
 2847              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 64


 2848 0006 C7E90201 		strd	r0, [r7, #8]
 2849 000a C7E90023 		strd	r2, [r7]
 682:.\main.c      ****     if(right < 0.0)
 2850              		.loc 1 682 0
 2851 000e D7E90001 		ldrd	r0, [r7]
 2852 0012 4FF00002 		mov	r2, #0
 2853 0016 4FF00003 		mov	r3, #0
 2854 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2855 001e 0346     		mov	r3, r0
 2856 0020 002B     		cmp	r3, #0
 2857 0022 10D0     		beq	.L146
 683:.\main.c      ****     {
 684:.\main.c      ****         //char mes[16];
 685:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 686:.\main.c      ****        // UART_PutString(mes);
 687:.\main.c      ****         setRightDir(!direction);
 2858              		.loc 1 687 0
 2859 0024 304B     		ldr	r3, .L148+8
 2860 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2861 0028 002B     		cmp	r3, #0
 2862 002a 0CBF     		ite	eq
 2863 002c 0123     		moveq	r3, #1
 2864 002e 0023     		movne	r3, #0
 2865 0030 DBB2     		uxtb	r3, r3
 2866 0032 1846     		mov	r0, r3
 2867 0034 FFF7FEFF 		bl	setRightDir
 688:.\main.c      ****         right = -right;
 2868              		.loc 1 688 0
 2869 0038 3B68     		ldr	r3, [r7]
 2870 003a 3B60     		str	r3, [r7]
 2871 003c 7B68     		ldr	r3, [r7, #4]
 2872 003e 83F00043 		eor	r3, r3, #-2147483648
 2873 0042 7B60     		str	r3, [r7, #4]
 2874 0044 04E0     		b	.L140
 2875              	.L146:
 689:.\main.c      ****     }
 690:.\main.c      ****     else setRightDir(direction);
 2876              		.loc 1 690 0
 2877 0046 284B     		ldr	r3, .L148+8
 2878 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2879 004a 1846     		mov	r0, r3
 2880 004c FFF7FEFF 		bl	setRightDir
 2881              	.L140:
 691:.\main.c      ****     
 692:.\main.c      ****     if(left < 0.0)
 2882              		.loc 1 692 0
 2883 0050 D7E90201 		ldrd	r0, [r7, #8]
 2884 0054 4FF00002 		mov	r2, #0
 2885 0058 4FF00003 		mov	r3, #0
 2886 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2887 0060 0346     		mov	r3, r0
 2888 0062 002B     		cmp	r3, #0
 2889 0064 10D0     		beq	.L147
 693:.\main.c      ****     {
 694:.\main.c      ****        // char mes[16];
 695:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 696:.\main.c      ****         //UART_PutString(mes);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 65


 697:.\main.c      ****         setLeftDir(!direction);
 2890              		.loc 1 697 0
 2891 0066 204B     		ldr	r3, .L148+8
 2892 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2893 006a 002B     		cmp	r3, #0
 2894 006c 0CBF     		ite	eq
 2895 006e 0123     		moveq	r3, #1
 2896 0070 0023     		movne	r3, #0
 2897 0072 DBB2     		uxtb	r3, r3
 2898 0074 1846     		mov	r0, r3
 2899 0076 FFF7FEFF 		bl	setLeftDir
 698:.\main.c      ****         left = -left;
 2900              		.loc 1 698 0
 2901 007a BB68     		ldr	r3, [r7, #8]
 2902 007c BB60     		str	r3, [r7, #8]
 2903 007e FB68     		ldr	r3, [r7, #12]
 2904 0080 83F00043 		eor	r3, r3, #-2147483648
 2905 0084 FB60     		str	r3, [r7, #12]
 2906 0086 04E0     		b	.L143
 2907              	.L147:
 699:.\main.c      ****     }
 700:.\main.c      ****     else setLeftDir(direction);
 2908              		.loc 1 700 0
 2909 0088 174B     		ldr	r3, .L148+8
 2910 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2911 008c 1846     		mov	r0, r3
 2912 008e FFF7FEFF 		bl	setLeftDir
 2913              	.L143:
 701:.\main.c      ****     
 702:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2914              		.loc 1 702 0
 2915 0092 D7E90201 		ldrd	r0, [r7, #8]
 2916 0096 12A3     		adr	r3, .L148
 2917 0098 D3E90023 		ldrd	r2, [r3]
 2918 009c FFF7FEFF 		bl	__aeabi_ddiv
 2919 00a0 0246     		mov	r2, r0
 2920 00a2 0B46     		mov	r3, r1
 2921 00a4 1046     		mov	r0, r2
 2922 00a6 1946     		mov	r1, r3
 2923 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2924 00ac 0346     		mov	r3, r0
 2925 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 703:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2926              		.loc 1 703 0
 2927 00b0 D7E90001 		ldrd	r0, [r7]
 2928 00b4 0AA3     		adr	r3, .L148
 2929 00b6 D3E90023 		ldrd	r2, [r3]
 2930 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2931 00be 0246     		mov	r2, r0
 2932 00c0 0B46     		mov	r3, r1
 2933 00c2 1046     		mov	r0, r2
 2934 00c4 1946     		mov	r1, r3
 2935 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2936 00ca 0346     		mov	r3, r0
 2937 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 704:.\main.c      ****     
 705:.\main.c      ****     leftSpeedLimit = countsRight;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 66


 2938              		.loc 1 705 0
 2939 00ce 074A     		ldr	r2, .L148+12
 2940 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2941 00d2 1380     		strh	r3, [r2]	@ movhi
 706:.\main.c      ****     rightSpeedLimit = countsLeft;
 2942              		.loc 1 706 0
 2943 00d4 064A     		ldr	r2, .L148+16
 2944 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2945 00d8 1380     		strh	r3, [r2]	@ movhi
 707:.\main.c      **** }
 2946              		.loc 1 707 0
 2947 00da 1837     		adds	r7, r7, #24
 2948              		.cfi_def_cfa_offset 8
 2949 00dc BD46     		mov	sp, r7
 2950              		.cfi_def_cfa_register 13
 2951              		@ sp needed
 2952 00de 80BD     		pop	{r7, pc}
 2953              	.L149:
 2954              		.align	3
 2955              	.L148:
 2956 00e0 969526A5 		.word	-1524197994
 2957 00e4 A0DBEF3F 		.word	1072683936
 2958 00e8 00000000 		.word	direction
 2959 00ec 00000000 		.word	leftSpeedLimit
 2960 00f0 00000000 		.word	rightSpeedLimit
 2961              		.cfi_endproc
 2962              	.LFE76:
 2963              		.size	setSpeed, .-setSpeed
 2964 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2965              		.align	2
 2966              		.global	brakeLeft
 2967              		.thumb
 2968              		.thumb_func
 2969              		.type	brakeLeft, %function
 2970              	brakeLeft:
 2971              	.LFB77:
 708:.\main.c      **** 
 709:.\main.c      **** void brakeLeft()
 710:.\main.c      **** {
 2972              		.loc 1 710 0
 2973              		.cfi_startproc
 2974              		@ args = 0, pretend = 0, frame = 0
 2975              		@ frame_needed = 1, uses_anonymous_args = 0
 2976 0000 80B5     		push	{r7, lr}
 2977              		.cfi_def_cfa_offset 8
 2978              		.cfi_offset 7, -8
 2979              		.cfi_offset 14, -4
 2980 0002 00AF     		add	r7, sp, #0
 2981              		.cfi_def_cfa_register 7
 711:.\main.c      ****     PWM_1_WriteCompare(0);
 2982              		.loc 1 711 0
 2983 0004 0020     		movs	r0, #0
 2984 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 712:.\main.c      ****     left_duty_cycle = 0;
 2985              		.loc 1 712 0
 2986 000a 024B     		ldr	r3, .L151
 2987 000c 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 67


 2988 000e 1A80     		strh	r2, [r3]	@ movhi
 713:.\main.c      **** }
 2989              		.loc 1 713 0
 2990 0010 80BD     		pop	{r7, pc}
 2991              	.L152:
 2992 0012 00BF     		.align	2
 2993              	.L151:
 2994 0014 00000000 		.word	left_duty_cycle
 2995              		.cfi_endproc
 2996              	.LFE77:
 2997              		.size	brakeLeft, .-brakeLeft
 2998              		.section	.text.brakeRight,"ax",%progbits
 2999              		.align	2
 3000              		.global	brakeRight
 3001              		.thumb
 3002              		.thumb_func
 3003              		.type	brakeRight, %function
 3004              	brakeRight:
 3005              	.LFB78:
 714:.\main.c      **** 
 715:.\main.c      **** void brakeRight()
 716:.\main.c      **** {
 3006              		.loc 1 716 0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 1, uses_anonymous_args = 0
 3010 0000 80B5     		push	{r7, lr}
 3011              		.cfi_def_cfa_offset 8
 3012              		.cfi_offset 7, -8
 3013              		.cfi_offset 14, -4
 3014 0002 00AF     		add	r7, sp, #0
 3015              		.cfi_def_cfa_register 7
 717:.\main.c      ****      PWM_2_WriteCompare(0);
 3016              		.loc 1 717 0
 3017 0004 0020     		movs	r0, #0
 3018 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 718:.\main.c      ****      right_duty_cycle = 0;
 3019              		.loc 1 718 0
 3020 000a 024B     		ldr	r3, .L154
 3021 000c 0022     		movs	r2, #0
 3022 000e 1A80     		strh	r2, [r3]	@ movhi
 719:.\main.c      **** }
 3023              		.loc 1 719 0
 3024 0010 80BD     		pop	{r7, pc}
 3025              	.L155:
 3026 0012 00BF     		.align	2
 3027              	.L154:
 3028 0014 00000000 		.word	right_duty_cycle
 3029              		.cfi_endproc
 3030              	.LFE78:
 3031              		.size	brakeRight, .-brakeRight
 3032              		.section	.text.brakeMotor,"ax",%progbits
 3033              		.align	2
 3034              		.global	brakeMotor
 3035              		.thumb
 3036              		.thumb_func
 3037              		.type	brakeMotor, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 68


 3038              	brakeMotor:
 3039              	.LFB79:
 720:.\main.c      **** 
 721:.\main.c      **** void brakeMotor(){
 3040              		.loc 1 721 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 1, uses_anonymous_args = 0
 3044 0000 80B5     		push	{r7, lr}
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 00AF     		add	r7, sp, #0
 3049              		.cfi_def_cfa_register 7
 722:.\main.c      ****     setSpeed(0, 0);
 3050              		.loc 1 722 0
 3051 0004 4FF00000 		mov	r0, #0
 3052 0008 4FF00001 		mov	r1, #0
 3053 000c 4FF00002 		mov	r2, #0
 3054 0010 4FF00003 		mov	r3, #0
 3055 0014 FFF7FEFF 		bl	setSpeed
 723:.\main.c      ****     brakeLeft();
 3056              		.loc 1 723 0
 3057 0018 FFF7FEFF 		bl	brakeLeft
 724:.\main.c      ****     brakeRight();
 3058              		.loc 1 724 0
 3059 001c FFF7FEFF 		bl	brakeRight
 725:.\main.c      **** }
 3060              		.loc 1 725 0
 3061 0020 80BD     		pop	{r7, pc}
 3062              		.cfi_endproc
 3063              	.LFE79:
 3064              		.size	brakeMotor, .-brakeMotor
 3065 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 3066              		.align	2
 3067              		.global	driveForwards
 3068              		.thumb
 3069              		.thumb_func
 3070              		.type	driveForwards, %function
 3071              	driveForwards:
 3072              	.LFB80:
 726:.\main.c      **** 
 727:.\main.c      **** void driveForwards()
 728:.\main.c      **** {
 3073              		.loc 1 728 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 0
 3076              		@ frame_needed = 1, uses_anonymous_args = 0
 3077 0000 80B5     		push	{r7, lr}
 3078              		.cfi_def_cfa_offset 8
 3079              		.cfi_offset 7, -8
 3080              		.cfi_offset 14, -4
 3081 0002 00AF     		add	r7, sp, #0
 3082              		.cfi_def_cfa_register 7
 729:.\main.c      ****     setSpeed(speed, speed);
 3083              		.loc 1 729 0
 3084 0004 044B     		ldr	r3, .L158
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 69


 3085 0006 D3E90001 		ldrd	r0, [r3]
 3086 000a 034B     		ldr	r3, .L158
 3087 000c D3E90023 		ldrd	r2, [r3]
 3088 0010 FFF7FEFF 		bl	setSpeed
 730:.\main.c      **** }
 3089              		.loc 1 730 0
 3090 0014 80BD     		pop	{r7, pc}
 3091              	.L159:
 3092 0016 00BF     		.align	2
 3093              	.L158:
 3094 0018 00000000 		.word	speed
 3095              		.cfi_endproc
 3096              	.LFE80:
 3097              		.size	driveForwards, .-driveForwards
 3098              		.global	__aeabi_dmul
 3099              		.section	.text.turnRight,"ax",%progbits
 3100              		.align	2
 3101              		.global	turnRight
 3102              		.thumb
 3103              		.thumb_func
 3104              		.type	turnRight, %function
 3105              	turnRight:
 3106              	.LFB81:
 731:.\main.c      **** 
 732:.\main.c      **** void turnRight()
 733:.\main.c      **** {
 3107              		.loc 1 733 0
 3108              		.cfi_startproc
 3109              		@ args = 0, pretend = 0, frame = 0
 3110              		@ frame_needed = 1, uses_anonymous_args = 0
 3111 0000 80B5     		push	{r7, lr}
 3112              		.cfi_def_cfa_offset 8
 3113              		.cfi_offset 7, -8
 3114              		.cfi_offset 14, -4
 3115 0002 00AF     		add	r7, sp, #0
 3116              		.cfi_def_cfa_register 7
 734:.\main.c      ****     setSpeed(0,speed * 1.5);
 3117              		.loc 1 734 0
 3118 0004 094B     		ldr	r3, .L161
 3119 0006 D3E90023 		ldrd	r2, [r3]
 3120 000a 1046     		mov	r0, r2
 3121 000c 1946     		mov	r1, r3
 3122 000e 4FF00002 		mov	r2, #0
 3123 0012 074B     		ldr	r3, .L161+4
 3124 0014 FFF7FEFF 		bl	__aeabi_dmul
 3125 0018 0246     		mov	r2, r0
 3126 001a 0B46     		mov	r3, r1
 3127 001c 4FF00000 		mov	r0, #0
 3128 0020 4FF00001 		mov	r1, #0
 3129 0024 FFF7FEFF 		bl	setSpeed
 735:.\main.c      **** }
 3130              		.loc 1 735 0
 3131 0028 80BD     		pop	{r7, pc}
 3132              	.L162:
 3133 002a 00BF     		.align	2
 3134              	.L161:
 3135 002c 00000000 		.word	speed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 70


 3136 0030 0000F83F 		.word	1073217536
 3137              		.cfi_endproc
 3138              	.LFE81:
 3139              		.size	turnRight, .-turnRight
 3140              		.section	.text.turnLeft,"ax",%progbits
 3141              		.align	2
 3142              		.global	turnLeft
 3143              		.thumb
 3144              		.thumb_func
 3145              		.type	turnLeft, %function
 3146              	turnLeft:
 3147              	.LFB82:
 736:.\main.c      **** 
 737:.\main.c      **** void turnLeft()
 738:.\main.c      **** {
 3148              		.loc 1 738 0
 3149              		.cfi_startproc
 3150              		@ args = 0, pretend = 0, frame = 0
 3151              		@ frame_needed = 1, uses_anonymous_args = 0
 3152 0000 80B5     		push	{r7, lr}
 3153              		.cfi_def_cfa_offset 8
 3154              		.cfi_offset 7, -8
 3155              		.cfi_offset 14, -4
 3156 0002 00AF     		add	r7, sp, #0
 3157              		.cfi_def_cfa_register 7
 739:.\main.c      ****     setSpeed(speed * 1.5,0);
 3158              		.loc 1 739 0
 3159 0004 0A4B     		ldr	r3, .L164
 3160 0006 D3E90023 		ldrd	r2, [r3]
 3161 000a 1046     		mov	r0, r2
 3162 000c 1946     		mov	r1, r3
 3163 000e 4FF00002 		mov	r2, #0
 3164 0012 084B     		ldr	r3, .L164+4
 3165 0014 FFF7FEFF 		bl	__aeabi_dmul
 3166 0018 0246     		mov	r2, r0
 3167 001a 0B46     		mov	r3, r1
 3168 001c 1046     		mov	r0, r2
 3169 001e 1946     		mov	r1, r3
 3170 0020 4FF00002 		mov	r2, #0
 3171 0024 4FF00003 		mov	r3, #0
 3172 0028 FFF7FEFF 		bl	setSpeed
 740:.\main.c      **** }
 3173              		.loc 1 740 0
 3174 002c 80BD     		pop	{r7, pc}
 3175              	.L165:
 3176 002e 00BF     		.align	2
 3177              	.L164:
 3178 0030 00000000 		.word	speed
 3179 0034 0000F83F 		.word	1073217536
 3180              		.cfi_endproc
 3181              	.LFE82:
 3182              		.size	turnLeft, .-turnLeft
 3183              		.section	.text.turnU,"ax",%progbits
 3184              		.align	2
 3185              		.global	turnU
 3186              		.thumb
 3187              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 71


 3188              		.type	turnU, %function
 3189              	turnU:
 3190              	.LFB83:
 741:.\main.c      **** 
 742:.\main.c      **** void turnU()
 743:.\main.c      **** {
 3191              		.loc 1 743 0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 0
 3194              		@ frame_needed = 1, uses_anonymous_args = 0
 3195 0000 B0B5     		push	{r4, r5, r7, lr}
 3196              		.cfi_def_cfa_offset 16
 3197              		.cfi_offset 4, -16
 3198              		.cfi_offset 5, -12
 3199              		.cfi_offset 7, -8
 3200              		.cfi_offset 14, -4
 3201 0002 00AF     		add	r7, sp, #0
 3202              		.cfi_def_cfa_register 7
 744:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3203              		.loc 1 744 0
 3204 0004 0F4B     		ldr	r3, .L167
 3205 0006 D3E90023 		ldrd	r2, [r3]
 3206 000a 1046     		mov	r0, r2
 3207 000c 83F00041 		eor	r1, r3, #-2147483648
 3208 0010 4FF00002 		mov	r2, #0
 3209 0014 0C4B     		ldr	r3, .L167+4
 3210 0016 FFF7FEFF 		bl	__aeabi_dmul
 3211 001a 0246     		mov	r2, r0
 3212 001c 0B46     		mov	r3, r1
 3213 001e 1446     		mov	r4, r2
 3214 0020 1D46     		mov	r5, r3
 3215 0022 084B     		ldr	r3, .L167
 3216 0024 D3E90023 		ldrd	r2, [r3]
 3217 0028 1046     		mov	r0, r2
 3218 002a 1946     		mov	r1, r3
 3219 002c 4FF00002 		mov	r2, #0
 3220 0030 054B     		ldr	r3, .L167+4
 3221 0032 FFF7FEFF 		bl	__aeabi_dmul
 3222 0036 0246     		mov	r2, r0
 3223 0038 0B46     		mov	r3, r1
 3224 003a 2046     		mov	r0, r4
 3225 003c 2946     		mov	r1, r5
 3226 003e FFF7FEFF 		bl	setSpeed
 745:.\main.c      **** }
 3227              		.loc 1 745 0
 3228 0042 B0BD     		pop	{r4, r5, r7, pc}
 3229              	.L168:
 3230              		.align	2
 3231              	.L167:
 3232 0044 00000000 		.word	speed
 3233 0048 0000F83F 		.word	1073217536
 3234              		.cfi_endproc
 3235              	.LFE83:
 3236              		.size	turnU, .-turnU
 3237              		.section	.text.initTurnLeft,"ax",%progbits
 3238              		.align	2
 3239              		.global	initTurnLeft
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 72


 3240              		.thumb
 3241              		.thumb_func
 3242              		.type	initTurnLeft, %function
 3243              	initTurnLeft:
 3244              	.LFB84:
 746:.\main.c      **** 
 747:.\main.c      **** void initTurnLeft(){
 3245              		.loc 1 747 0
 3246              		.cfi_startproc
 3247              		@ args = 0, pretend = 0, frame = 0
 3248              		@ frame_needed = 1, uses_anonymous_args = 0
 3249 0000 80B5     		push	{r7, lr}
 3250              		.cfi_def_cfa_offset 8
 3251              		.cfi_offset 7, -8
 3252              		.cfi_offset 14, -4
 3253 0002 00AF     		add	r7, sp, #0
 3254              		.cfi_def_cfa_register 7
 748:.\main.c      ****     Timer_2_Stop();
 3255              		.loc 1 748 0
 3256 0004 FFF7FEFF 		bl	Timer_2_Stop
 749:.\main.c      ****     prev_movement_state = movement_state;
 3257              		.loc 1 749 0
 3258 0008 084B     		ldr	r3, .L170
 3259 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3260 000c 084B     		ldr	r3, .L170+4
 3261 000e 1A70     		strb	r2, [r3]
 750:.\main.c      ****     movement_state = LTURN;
 3262              		.loc 1 750 0
 3263 0010 064B     		ldr	r3, .L170
 3264 0012 0122     		movs	r2, #1
 3265 0014 1A70     		strb	r2, [r3]
 751:.\main.c      ****     brakeLeft();
 3266              		.loc 1 751 0
 3267 0016 FFF7FEFF 		bl	brakeLeft
 752:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3268              		.loc 1 752 0
 3269 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3270 001e 0346     		mov	r3, r0
 3271 0020 1A46     		mov	r2, r3
 3272 0022 044B     		ldr	r3, .L170+8
 3273 0024 1A80     		strh	r2, [r3]	@ movhi
 753:.\main.c      ****     Timer_2_Start();
 3274              		.loc 1 753 0
 3275 0026 FFF7FEFF 		bl	Timer_2_Start
 754:.\main.c      **** }
 3276              		.loc 1 754 0
 3277 002a 80BD     		pop	{r7, pc}
 3278              	.L171:
 3279              		.align	2
 3280              	.L170:
 3281 002c 00000000 		.word	movement_state
 3282 0030 00000000 		.word	prev_movement_state
 3283 0034 00000000 		.word	start_turn_count
 3284              		.cfi_endproc
 3285              	.LFE84:
 3286              		.size	initTurnLeft, .-initTurnLeft
 3287              		.section	.text.initTurnRight,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 73


 3288              		.align	2
 3289              		.global	initTurnRight
 3290              		.thumb
 3291              		.thumb_func
 3292              		.type	initTurnRight, %function
 3293              	initTurnRight:
 3294              	.LFB85:
 755:.\main.c      **** 
 756:.\main.c      **** void initTurnRight(){
 3295              		.loc 1 756 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 0
 3298              		@ frame_needed = 1, uses_anonymous_args = 0
 3299 0000 80B5     		push	{r7, lr}
 3300              		.cfi_def_cfa_offset 8
 3301              		.cfi_offset 7, -8
 3302              		.cfi_offset 14, -4
 3303 0002 00AF     		add	r7, sp, #0
 3304              		.cfi_def_cfa_register 7
 757:.\main.c      ****     Timer_2_Stop();
 3305              		.loc 1 757 0
 3306 0004 FFF7FEFF 		bl	Timer_2_Stop
 758:.\main.c      ****     prev_movement_state = movement_state;
 3307              		.loc 1 758 0
 3308 0008 084B     		ldr	r3, .L173
 3309 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3310 000c 084B     		ldr	r3, .L173+4
 3311 000e 1A70     		strb	r2, [r3]
 759:.\main.c      ****     movement_state = RTURN;
 3312              		.loc 1 759 0
 3313 0010 064B     		ldr	r3, .L173
 3314 0012 0222     		movs	r2, #2
 3315 0014 1A70     		strb	r2, [r3]
 760:.\main.c      ****     brakeRight();
 3316              		.loc 1 760 0
 3317 0016 FFF7FEFF 		bl	brakeRight
 761:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3318              		.loc 1 761 0
 3319 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3320 001e 0346     		mov	r3, r0
 3321 0020 1A46     		mov	r2, r3
 3322 0022 044B     		ldr	r3, .L173+8
 3323 0024 1A80     		strh	r2, [r3]	@ movhi
 762:.\main.c      ****     Timer_2_Start();
 3324              		.loc 1 762 0
 3325 0026 FFF7FEFF 		bl	Timer_2_Start
 763:.\main.c      **** }
 3326              		.loc 1 763 0
 3327 002a 80BD     		pop	{r7, pc}
 3328              	.L174:
 3329              		.align	2
 3330              	.L173:
 3331 002c 00000000 		.word	movement_state
 3332 0030 00000000 		.word	prev_movement_state
 3333 0034 00000000 		.word	start_turn_count
 3334              		.cfi_endproc
 3335              	.LFE85:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 74


 3336              		.size	initTurnRight, .-initTurnRight
 3337              		.section	.text.initTurnU,"ax",%progbits
 3338              		.align	2
 3339              		.global	initTurnU
 3340              		.thumb
 3341              		.thumb_func
 3342              		.type	initTurnU, %function
 3343              	initTurnU:
 3344              	.LFB86:
 764:.\main.c      **** 
 765:.\main.c      **** void initTurnU(){
 3345              		.loc 1 765 0
 3346              		.cfi_startproc
 3347              		@ args = 0, pretend = 0, frame = 0
 3348              		@ frame_needed = 1, uses_anonymous_args = 0
 3349 0000 80B5     		push	{r7, lr}
 3350              		.cfi_def_cfa_offset 8
 3351              		.cfi_offset 7, -8
 3352              		.cfi_offset 14, -4
 3353 0002 00AF     		add	r7, sp, #0
 3354              		.cfi_def_cfa_register 7
 766:.\main.c      ****     Timer_2_Stop();
 3355              		.loc 1 766 0
 3356 0004 FFF7FEFF 		bl	Timer_2_Stop
 767:.\main.c      ****     prev_movement_state = movement_state;
 3357              		.loc 1 767 0
 3358 0008 084B     		ldr	r3, .L176
 3359 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3360 000c 084B     		ldr	r3, .L176+4
 3361 000e 1A70     		strb	r2, [r3]
 768:.\main.c      ****     movement_state = UTURN;
 3362              		.loc 1 768 0
 3363 0010 064B     		ldr	r3, .L176
 3364 0012 0722     		movs	r2, #7
 3365 0014 1A70     		strb	r2, [r3]
 769:.\main.c      ****     brakeMotor();
 3366              		.loc 1 769 0
 3367 0016 FFF7FEFF 		bl	brakeMotor
 770:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3368              		.loc 1 770 0
 3369 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3370 001e 0346     		mov	r3, r0
 3371 0020 1A46     		mov	r2, r3
 3372 0022 044B     		ldr	r3, .L176+8
 3373 0024 1A80     		strh	r2, [r3]	@ movhi
 771:.\main.c      ****     Timer_2_Start();
 3374              		.loc 1 771 0
 3375 0026 FFF7FEFF 		bl	Timer_2_Start
 772:.\main.c      **** }
 3376              		.loc 1 772 0
 3377 002a 80BD     		pop	{r7, pc}
 3378              	.L177:
 3379              		.align	2
 3380              	.L176:
 3381 002c 00000000 		.word	movement_state
 3382 0030 00000000 		.word	prev_movement_state
 3383 0034 00000000 		.word	start_turn_count
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 75


 3384              		.cfi_endproc
 3385              	.LFE86:
 3386              		.size	initTurnU, .-initTurnU
 3387              		.section	.text.initForward,"ax",%progbits
 3388              		.align	2
 3389              		.global	initForward
 3390              		.thumb
 3391              		.thumb_func
 3392              		.type	initForward, %function
 3393              	initForward:
 3394              	.LFB87:
 773:.\main.c      **** 
 774:.\main.c      **** void initForward(){
 3395              		.loc 1 774 0
 3396              		.cfi_startproc
 3397              		@ args = 0, pretend = 0, frame = 0
 3398              		@ frame_needed = 1, uses_anonymous_args = 0
 3399 0000 80B5     		push	{r7, lr}
 3400              		.cfi_def_cfa_offset 8
 3401              		.cfi_offset 7, -8
 3402              		.cfi_offset 14, -4
 3403 0002 00AF     		add	r7, sp, #0
 3404              		.cfi_def_cfa_register 7
 775:.\main.c      ****     brakeMotor();
 3405              		.loc 1 775 0
 3406 0004 FFF7FEFF 		bl	brakeMotor
 776:.\main.c      ****     movement_state = DRIVE;
 3407              		.loc 1 776 0
 3408 0008 014B     		ldr	r3, .L179
 3409 000a 0022     		movs	r2, #0
 3410 000c 1A70     		strb	r2, [r3]
 777:.\main.c      **** }
 3411              		.loc 1 777 0
 3412 000e 80BD     		pop	{r7, pc}
 3413              	.L180:
 3414              		.align	2
 3415              	.L179:
 3416 0010 00000000 		.word	movement_state
 3417              		.cfi_endproc
 3418              	.LFE87:
 3419              		.size	initForward, .-initForward
 3420              		.section	.text.initBrake,"ax",%progbits
 3421              		.align	2
 3422              		.global	initBrake
 3423              		.thumb
 3424              		.thumb_func
 3425              		.type	initBrake, %function
 3426              	initBrake:
 3427              	.LFB88:
 778:.\main.c      **** 
 779:.\main.c      **** void initBrake(){
 3428              		.loc 1 779 0
 3429              		.cfi_startproc
 3430              		@ args = 0, pretend = 0, frame = 0
 3431              		@ frame_needed = 1, uses_anonymous_args = 0
 3432              		@ link register save eliminated.
 3433 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 76


 3434              		.cfi_def_cfa_offset 4
 3435              		.cfi_offset 7, -4
 3436 0002 00AF     		add	r7, sp, #0
 3437              		.cfi_def_cfa_register 7
 780:.\main.c      ****     movement_state = STOPPED;
 3438              		.loc 1 780 0
 3439 0004 034B     		ldr	r3, .L182
 3440 0006 0322     		movs	r2, #3
 3441 0008 1A70     		strb	r2, [r3]
 781:.\main.c      **** }
 3442              		.loc 1 781 0
 3443 000a BD46     		mov	sp, r7
 3444              		.cfi_def_cfa_register 13
 3445              		@ sp needed
 3446 000c 5DF8047B 		ldr	r7, [sp], #4
 3447              		.cfi_restore 7
 3448              		.cfi_def_cfa_offset 0
 3449 0010 7047     		bx	lr
 3450              	.L183:
 3451 0012 00BF     		.align	2
 3452              	.L182:
 3453 0014 00000000 		.word	movement_state
 3454              		.cfi_endproc
 3455              	.LFE88:
 3456              		.size	initBrake, .-initBrake
 3457              		.section	.text.initTrack,"ax",%progbits
 3458              		.align	2
 3459              		.global	initTrack
 3460              		.thumb
 3461              		.thumb_func
 3462              		.type	initTrack, %function
 3463              	initTrack:
 3464              	.LFB89:
 782:.\main.c      **** 
 783:.\main.c      **** void initTrack()
 784:.\main.c      **** {
 3465              		.loc 1 784 0
 3466              		.cfi_startproc
 3467              		@ args = 0, pretend = 0, frame = 0
 3468              		@ frame_needed = 1, uses_anonymous_args = 0
 3469              		@ link register save eliminated.
 3470 0000 80B4     		push	{r7}
 3471              		.cfi_def_cfa_offset 4
 3472              		.cfi_offset 7, -4
 3473 0002 00AF     		add	r7, sp, #0
 3474              		.cfi_def_cfa_register 7
 785:.\main.c      ****     movement_state = TRACKING;
 3475              		.loc 1 785 0
 3476 0004 034B     		ldr	r3, .L185
 3477 0006 0422     		movs	r2, #4
 3478 0008 1A70     		strb	r2, [r3]
 786:.\main.c      **** }
 3479              		.loc 1 786 0
 3480 000a BD46     		mov	sp, r7
 3481              		.cfi_def_cfa_register 13
 3482              		@ sp needed
 3483 000c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 77


 3484              		.cfi_restore 7
 3485              		.cfi_def_cfa_offset 0
 3486 0010 7047     		bx	lr
 3487              	.L186:
 3488 0012 00BF     		.align	2
 3489              	.L185:
 3490 0014 00000000 		.word	movement_state
 3491              		.cfi_endproc
 3492              	.LFE89:
 3493              		.size	initTrack, .-initTrack
 3494              		.section	.text.initTrackU,"ax",%progbits
 3495              		.align	2
 3496              		.global	initTrackU
 3497              		.thumb
 3498              		.thumb_func
 3499              		.type	initTrackU, %function
 3500              	initTrackU:
 3501              	.LFB90:
 787:.\main.c      **** 
 788:.\main.c      **** void initTrackU(){
 3502              		.loc 1 788 0
 3503              		.cfi_startproc
 3504              		@ args = 0, pretend = 0, frame = 0
 3505              		@ frame_needed = 1, uses_anonymous_args = 0
 3506              		@ link register save eliminated.
 3507 0000 80B4     		push	{r7}
 3508              		.cfi_def_cfa_offset 4
 3509              		.cfi_offset 7, -4
 3510 0002 00AF     		add	r7, sp, #0
 3511              		.cfi_def_cfa_register 7
 789:.\main.c      ****     movement_state = TRACKING_U;
 3512              		.loc 1 789 0
 3513 0004 034B     		ldr	r3, .L188
 3514 0006 0522     		movs	r2, #5
 3515 0008 1A70     		strb	r2, [r3]
 790:.\main.c      **** }
 3516              		.loc 1 790 0
 3517 000a BD46     		mov	sp, r7
 3518              		.cfi_def_cfa_register 13
 3519              		@ sp needed
 3520 000c 5DF8047B 		ldr	r7, [sp], #4
 3521              		.cfi_restore 7
 3522              		.cfi_def_cfa_offset 0
 3523 0010 7047     		bx	lr
 3524              	.L189:
 3525 0012 00BF     		.align	2
 3526              	.L188:
 3527 0014 00000000 		.word	movement_state
 3528              		.cfi_endproc
 3529              	.LFE90:
 3530              		.size	initTrackU, .-initTrackU
 3531              		.section	.text.inittrackLineZ,"ax",%progbits
 3532              		.align	2
 3533              		.global	inittrackLineZ
 3534              		.thumb
 3535              		.thumb_func
 3536              		.type	inittrackLineZ, %function
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 78


 3537              	inittrackLineZ:
 3538              	.LFB91:
 791:.\main.c      **** 
 792:.\main.c      **** void inittrackLineZ(){
 3539              		.loc 1 792 0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 0
 3542              		@ frame_needed = 1, uses_anonymous_args = 0
 3543              		@ link register save eliminated.
 3544 0000 80B4     		push	{r7}
 3545              		.cfi_def_cfa_offset 4
 3546              		.cfi_offset 7, -4
 3547 0002 00AF     		add	r7, sp, #0
 3548              		.cfi_def_cfa_register 7
 793:.\main.c      ****     movement_state = TRACKING_SOFT;
 3549              		.loc 1 793 0
 3550 0004 034B     		ldr	r3, .L191
 3551 0006 0622     		movs	r2, #6
 3552 0008 1A70     		strb	r2, [r3]
 794:.\main.c      **** }
 3553              		.loc 1 794 0
 3554 000a BD46     		mov	sp, r7
 3555              		.cfi_def_cfa_register 13
 3556              		@ sp needed
 3557 000c 5DF8047B 		ldr	r7, [sp], #4
 3558              		.cfi_restore 7
 3559              		.cfi_def_cfa_offset 0
 3560 0010 7047     		bx	lr
 3561              	.L192:
 3562 0012 00BF     		.align	2
 3563              	.L191:
 3564 0014 00000000 		.word	movement_state
 3565              		.cfi_endproc
 3566              	.LFE91:
 3567              		.size	inittrackLineZ, .-inittrackLineZ
 3568              		.section	.text.rxInt,"ax",%progbits
 3569              		.align	2
 3570              		.global	rxInt
 3571              		.thumb
 3572              		.thumb_func
 3573              		.type	rxInt, %function
 3574              	rxInt:
 3575              	.LFB92:
 795:.\main.c      **** 
 796:.\main.c      **** 
 797:.\main.c      **** 
 798:.\main.c      **** //Binary RF Data
 799:.\main.c      **** CY_ISR(rxInt){
 3576              		.loc 1 799 0
 3577              		.cfi_startproc
 3578              		@ args = 0, pretend = 0, frame = 8
 3579              		@ frame_needed = 1, uses_anonymous_args = 0
 3580 0000 B0B5     		push	{r4, r5, r7, lr}
 3581              		.cfi_def_cfa_offset 16
 3582              		.cfi_offset 4, -16
 3583              		.cfi_offset 5, -12
 3584              		.cfi_offset 7, -8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 79


 3585              		.cfi_offset 14, -4
 3586 0002 82B0     		sub	sp, sp, #8
 3587              		.cfi_def_cfa_offset 24
 3588 0004 00AF     		add	r7, sp, #0
 3589              		.cfi_def_cfa_register 7
 800:.\main.c      ****     char rf_char = UART_GetChar();
 3590              		.loc 1 800 0
 3591 0006 FFF7FEFF 		bl	UART_GetChar
 3592 000a 0346     		mov	r3, r0
 3593 000c FB71     		strb	r3, [r7, #7]
 801:.\main.c      ****     if(rf_char == SOP){
 3594              		.loc 1 801 0
 3595 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3596 0010 AA2B     		cmp	r3, #170
 3597 0012 2BD1     		bne	.L194
 802:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 803:.\main.c      ****             if(byteCount == 34)
 3598              		.loc 1 803 0
 3599 0014 224B     		ldr	r3, .L198
 3600 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3601 0018 222B     		cmp	r3, #34
 3602 001a 20D1     		bne	.L195
 804:.\main.c      ****             {
 805:.\main.c      ****                 system_state = buffer_state;
 3603              		.loc 1 805 0
 3604 001c 214B     		ldr	r3, .L198+4
 3605 001e 224A     		ldr	r2, .L198+8
 3606 0020 1568     		ldr	r5, [r2]	@ unaligned
 3607 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3608 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3609 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3610 0028 1D60     		str	r5, [r3]	@ unaligned
 3611 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3612 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3613 002e D960     		str	r1, [r3, #12]	@ unaligned
 3614 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3615 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3616 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3617 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3618 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3619 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3620 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3621 003e D961     		str	r1, [r3, #28]	@ unaligned
 806:.\main.c      ****                 if(initial_pos_valid == 0)
 3622              		.loc 1 806 0
 3623 0040 1A4B     		ldr	r3, .L198+12
 3624 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3625 0044 002B     		cmp	r3, #0
 3626 0046 0AD1     		bne	.L195
 807:.\main.c      ****                 {
 808:.\main.c      ****                     LED_Write(~LED_Read());
 3627              		.loc 1 808 0
 3628 0048 FFF7FEFF 		bl	LED_Read
 3629 004c 0346     		mov	r3, r0
 3630 004e DB43     		mvns	r3, r3
 3631 0050 DBB2     		uxtb	r3, r3
 3632 0052 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 80


 3633 0054 FFF7FEFF 		bl	LED_Write
 809:.\main.c      ****                     initial_pos_valid = 1;
 3634              		.loc 1 809 0
 3635 0058 144B     		ldr	r3, .L198+12
 3636 005a 0122     		movs	r2, #1
 3637 005c 1A70     		strb	r2, [r3]
 3638              	.L195:
 810:.\main.c      ****                 }
 811:.\main.c      ****             }
 812:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3639              		.loc 1 812 0
 3640 005e 104B     		ldr	r3, .L198
 3641 0060 0222     		movs	r2, #2
 3642 0062 1A70     		strb	r2, [r3]
 813:.\main.c      ****             flag_rx = 0;
 3643              		.loc 1 813 0
 3644 0064 124B     		ldr	r3, .L198+16
 3645 0066 0022     		movs	r2, #0
 3646 0068 1A70     		strb	r2, [r3]
 3647 006a 16E0     		b	.L193
 3648              	.L194:
 814:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 815:.\main.c      ****         }
 816:.\main.c      ****         else
 817:.\main.c      ****         {
 818:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3649              		.loc 1 818 0
 3650 006c 0C4B     		ldr	r3, .L198
 3651 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3652 0070 03F00103 		and	r3, r3, #1
 3653 0074 0F49     		ldr	r1, .L198+20
 3654 0076 FA79     		ldrb	r2, [r7, #7]
 3655 0078 CA54     		strb	r2, [r1, r3]
 819:.\main.c      ****            
 820:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3656              		.loc 1 820 0
 3657 007a 094B     		ldr	r3, .L198
 3658 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3659 007e 03F00103 		and	r3, r3, #1
 3660 0082 DBB2     		uxtb	r3, r3
 3661 0084 002B     		cmp	r3, #0
 3662 0086 02D0     		beq	.L197
 821:.\main.c      ****             {
 822:.\main.c      ****                 flag_rx = 1;
 3663              		.loc 1 822 0
 3664 0088 094B     		ldr	r3, .L198+16
 3665 008a 0122     		movs	r2, #1
 3666 008c 1A70     		strb	r2, [r3]
 3667              	.L197:
 823:.\main.c      ****             }
 824:.\main.c      ****             byteCount = (byteCount + 1);
 3668              		.loc 1 824 0
 3669 008e 044B     		ldr	r3, .L198
 3670 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3671 0092 0133     		adds	r3, r3, #1
 3672 0094 DAB2     		uxtb	r2, r3
 3673 0096 024B     		ldr	r3, .L198
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 81


 3674 0098 1A70     		strb	r2, [r3]
 3675              	.L193:
 825:.\main.c      ****         }
 826:.\main.c      **** }
 3676              		.loc 1 826 0
 3677 009a 0837     		adds	r7, r7, #8
 3678              		.cfi_def_cfa_offset 16
 3679 009c BD46     		mov	sp, r7
 3680              		.cfi_def_cfa_register 13
 3681              		@ sp needed
 3682 009e B0BD     		pop	{r4, r5, r7, pc}
 3683              	.L199:
 3684              		.align	2
 3685              	.L198:
 3686 00a0 00000000 		.word	byteCount
 3687 00a4 00000000 		.word	system_state
 3688 00a8 00000000 		.word	buffer_state
 3689 00ac 00000000 		.word	initial_pos_valid
 3690 00b0 00000000 		.word	flag_rx
 3691 00b4 00000000 		.word	packet
 3692              		.cfi_endproc
 3693              	.LFE92:
 3694              		.size	rxInt, .-rxInt
 3695              		.global	__aeabi_i2f
 3696              		.global	__aeabi_fmul
 3697              		.global	__aeabi_f2iz
 3698              		.section	.rodata
 3699 00be 0000     		.align	2
 3700              	.LC10:
 3701 00c0 74617267 		.ascii	"target quad: %d\015\012\000"
 3701      65742071 
 3701      7561643A 
 3701      2025640D 
 3701      0A00
 3702 00d2 0000     		.align	2
 3703              	.LC11:
 3704 00d4 72656365 		.ascii	"received: \000"
 3704      69766564 
 3704      3A2000
 3705 00df 00       		.align	2
 3706              	.LC12:
 3707 00e0 0D0A00   		.ascii	"\015\012\000"
 3708 00e3 00       		.align	2
 3709              	.LC13:
 3710 00e4 73746172 		.ascii	"starting from instruction %d\015\012\000"
 3710      74696E67 
 3710      2066726F 
 3710      6D20696E 
 3710      73747275 
 3711              		.section	.text.BT_rxInt,"ax",%progbits
 3712              		.align	2
 3713              		.global	BT_rxInt
 3714              		.thumb
 3715              		.thumb_func
 3716              		.type	BT_rxInt, %function
 3717              	BT_rxInt:
 3718              	.LFB93:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 82


 827:.\main.c      **** 
 828:.\main.c      **** CY_ISR(BT_rxInt)
 829:.\main.c      **** {
 3719              		.loc 1 829 0
 3720              		.cfi_startproc
 3721              		@ args = 0, pretend = 0, frame = 32
 3722              		@ frame_needed = 1, uses_anonymous_args = 0
 3723 0000 80B5     		push	{r7, lr}
 3724              		.cfi_def_cfa_offset 8
 3725              		.cfi_offset 7, -8
 3726              		.cfi_offset 14, -4
 3727 0002 88B0     		sub	sp, sp, #32
 3728              		.cfi_def_cfa_offset 40
 3729 0004 00AF     		add	r7, sp, #0
 3730              		.cfi_def_cfa_register 7
 830:.\main.c      ****     char rf_char = UART_GetChar();
 3731              		.loc 1 830 0
 3732 0006 FFF7FEFF 		bl	UART_GetChar
 3733 000a 0346     		mov	r3, r0
 3734 000c FB77     		strb	r3, [r7, #31]
 831:.\main.c      ****     switch(rf_char){
 3735              		.loc 1 831 0
 3736 000e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3737 0010 313B     		subs	r3, r3, #49
 3738 0012 492B     		cmp	r3, #73
 3739 0014 00F28582 		bhi	.L200
 3740 0018 01A2     		adr	r2, .L203
 3741 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3742 001e 00BF     		.p2align 2
 3743              	.L203:
 3744 0020 75030000 		.word	.L202+1
 3745 0024 15020000 		.word	.L204+1
 3746 0028 23050000 		.word	.L200+1
 3747 002c 23050000 		.word	.L200+1
 3748 0030 23050000 		.word	.L200+1
 3749 0034 23050000 		.word	.L200+1
 3750 0038 23050000 		.word	.L200+1
 3751 003c 23050000 		.word	.L200+1
 3752 0040 23050000 		.word	.L200+1
 3753 0044 23050000 		.word	.L200+1
 3754 0048 23050000 		.word	.L200+1
 3755 004c 23050000 		.word	.L200+1
 3756 0050 23050000 		.word	.L200+1
 3757 0054 23050000 		.word	.L200+1
 3758 0058 23050000 		.word	.L200+1
 3759 005c 23050000 		.word	.L200+1
 3760 0060 23050000 		.word	.L200+1
 3761 0064 23050000 		.word	.L200+1
 3762 0068 23050000 		.word	.L200+1
 3763 006c 23050000 		.word	.L200+1
 3764 0070 23050000 		.word	.L200+1
 3765 0074 23050000 		.word	.L200+1
 3766 0078 23050000 		.word	.L200+1
 3767 007c 23050000 		.word	.L200+1
 3768 0080 23050000 		.word	.L200+1
 3769 0084 23050000 		.word	.L200+1
 3770 0088 23050000 		.word	.L200+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 83


 3771 008c 23050000 		.word	.L200+1
 3772 0090 23050000 		.word	.L200+1
 3773 0094 23050000 		.word	.L200+1
 3774 0098 23050000 		.word	.L200+1
 3775 009c 23050000 		.word	.L200+1
 3776 00a0 23050000 		.word	.L200+1
 3777 00a4 23050000 		.word	.L200+1
 3778 00a8 23050000 		.word	.L200+1
 3779 00ac 23050000 		.word	.L200+1
 3780 00b0 23050000 		.word	.L200+1
 3781 00b4 23050000 		.word	.L200+1
 3782 00b8 23050000 		.word	.L200+1
 3783 00bc 23050000 		.word	.L200+1
 3784 00c0 23050000 		.word	.L200+1
 3785 00c4 23050000 		.word	.L200+1
 3786 00c8 23050000 		.word	.L200+1
 3787 00cc 23050000 		.word	.L200+1
 3788 00d0 23050000 		.word	.L200+1
 3789 00d4 23050000 		.word	.L200+1
 3790 00d8 23050000 		.word	.L200+1
 3791 00dc 23050000 		.word	.L200+1
 3792 00e0 49010000 		.word	.L205+1
 3793 00e4 23050000 		.word	.L200+1
 3794 00e8 23050000 		.word	.L200+1
 3795 00ec 6D010000 		.word	.L206+1
 3796 00f0 23050000 		.word	.L200+1
 3797 00f4 79010000 		.word	.L207+1
 3798 00f8 23050000 		.word	.L200+1
 3799 00fc 23050000 		.word	.L200+1
 3800 0100 23050000 		.word	.L200+1
 3801 0104 23050000 		.word	.L200+1
 3802 0108 23050000 		.word	.L200+1
 3803 010c 23050000 		.word	.L200+1
 3804 0110 23050000 		.word	.L200+1
 3805 0114 23050000 		.word	.L200+1
 3806 0118 23050000 		.word	.L200+1
 3807 011c 23050000 		.word	.L200+1
 3808 0120 A9010000 		.word	.L208+1
 3809 0124 FF010000 		.word	.L209+1
 3810 0128 61010000 		.word	.L210+1
 3811 012c 85010000 		.word	.L211+1
 3812 0130 91010000 		.word	.L212+1
 3813 0134 23050000 		.word	.L200+1
 3814 0138 55010000 		.word	.L213+1
 3815 013c 23050000 		.word	.L200+1
 3816 0140 23050000 		.word	.L200+1
 3817 0144 9D010000 		.word	.L214+1
 3818              		.p2align 1
 3819              	.L205:
 3820              	.LBB11:
 832:.\main.c      ****     case 'a':
 833:.\main.c      ****         initTurnLeft();
 3821              		.loc 1 833 0
 3822 0148 FFF7FEFF 		bl	initTurnLeft
 834:.\main.c      ****         track_mode = NO_TRACK;
 3823              		.loc 1 834 0
 3824 014c 9D4B     		ldr	r3, .L234
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 84


 3825 014e 0022     		movs	r2, #0
 3826 0150 1A70     		strb	r2, [r3]
 835:.\main.c      ****         break;
 3827              		.loc 1 835 0
 3828 0152 E6E1     		b	.L200
 3829              	.L213:
 836:.\main.c      ****     case 'w':
 837:.\main.c      ****         initForward();
 3830              		.loc 1 837 0
 3831 0154 FFF7FEFF 		bl	initForward
 838:.\main.c      ****         track_mode = NO_TRACK;
 3832              		.loc 1 838 0
 3833 0158 9A4B     		ldr	r3, .L234
 3834 015a 0022     		movs	r2, #0
 3835 015c 1A70     		strb	r2, [r3]
 839:.\main.c      ****         break;
 3836              		.loc 1 839 0
 3837 015e E0E1     		b	.L200
 3838              	.L210:
 840:.\main.c      ****     case 's': 
 841:.\main.c      ****         reverseDirection();
 3839              		.loc 1 841 0
 3840 0160 FFF7FEFF 		bl	reverseDirection
 842:.\main.c      ****         track_mode = NO_TRACK;
 3841              		.loc 1 842 0
 3842 0164 974B     		ldr	r3, .L234
 3843 0166 0022     		movs	r2, #0
 3844 0168 1A70     		strb	r2, [r3]
 843:.\main.c      ****         break;
 3845              		.loc 1 843 0
 3846 016a DAE1     		b	.L200
 3847              	.L206:
 844:.\main.c      ****     case 'd':
 845:.\main.c      ****         initTurnRight();
 3848              		.loc 1 845 0
 3849 016c FFF7FEFF 		bl	initTurnRight
 846:.\main.c      ****         track_mode = NO_TRACK;
 3850              		.loc 1 846 0
 3851 0170 944B     		ldr	r3, .L234
 3852 0172 0022     		movs	r2, #0
 3853 0174 1A70     		strb	r2, [r3]
 847:.\main.c      ****         break;
 3854              		.loc 1 847 0
 3855 0176 D4E1     		b	.L200
 3856              	.L207:
 848:.\main.c      ****     case 'f':
 849:.\main.c      ****         initBrake();
 3857              		.loc 1 849 0
 3858 0178 FFF7FEFF 		bl	initBrake
 850:.\main.c      ****         track_mode = NO_TRACK;
 3859              		.loc 1 850 0
 3860 017c 914B     		ldr	r3, .L234
 3861 017e 0022     		movs	r2, #0
 3862 0180 1A70     		strb	r2, [r3]
 851:.\main.c      ****         break;
 3863              		.loc 1 851 0
 3864 0182 CEE1     		b	.L200
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 85


 3865              	.L211:
 852:.\main.c      ****     case('t'):
 853:.\main.c      ****         track_mode = CURVE_TRACK;
 3866              		.loc 1 853 0
 3867 0184 8F4B     		ldr	r3, .L234
 3868 0186 0122     		movs	r2, #1
 3869 0188 1A70     		strb	r2, [r3]
 854:.\main.c      ****         initTrack();
 3870              		.loc 1 854 0
 3871 018a FFF7FEFF 		bl	initTrack
 855:.\main.c      ****         break;
 3872              		.loc 1 855 0
 3873 018e C8E1     		b	.L200
 3874              	.L212:
 856:.\main.c      ****     case('u'):
 857:.\main.c      ****         initTrackU();
 3875              		.loc 1 857 0
 3876 0190 FFF7FEFF 		bl	initTrackU
 858:.\main.c      ****         track_mode = U_TRACK;
 3877              		.loc 1 858 0
 3878 0194 8B4B     		ldr	r3, .L234
 3879 0196 0222     		movs	r2, #2
 3880 0198 1A70     		strb	r2, [r3]
 859:.\main.c      ****         break;
 3881              		.loc 1 859 0
 3882 019a C2E1     		b	.L200
 3883              	.L214:
 860:.\main.c      ****     case('z'):
 861:.\main.c      ****         track_mode = SQUARE_TRACK;
 3884              		.loc 1 861 0
 3885 019c 894B     		ldr	r3, .L234
 3886 019e 0322     		movs	r2, #3
 3887 01a0 1A70     		strb	r2, [r3]
 862:.\main.c      ****         inittrackLineZ();
 3888              		.loc 1 862 0
 3889 01a2 FFF7FEFF 		bl	inittrackLineZ
 863:.\main.c      ****         break;
 3890              		.loc 1 863 0
 3891 01a6 BCE1     		b	.L200
 3892              	.L208:
 864:.\main.c      ****     case('q'):
 865:.\main.c      ****         track_mode = QUAD_STOP;
 3893              		.loc 1 865 0
 3894 01a8 864B     		ldr	r3, .L234
 3895 01aa 0422     		movs	r2, #4
 3896 01ac 1A70     		strb	r2, [r3]
 866:.\main.c      ****         accum_dist = 0;
 3897              		.loc 1 866 0
 3898 01ae 864B     		ldr	r3, .L234+4
 3899 01b0 0022     		movs	r2, #0
 3900 01b2 1A80     		strh	r2, [r3]	@ movhi
 867:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3901              		.loc 1 867 0
 3902 01b4 854B     		ldr	r3, .L234+8
 3903 01b6 1B88     		ldrh	r3, [r3]
 3904 01b8 1BB2     		sxth	r3, r3
 3905 01ba 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 86


 3906 01bc FFF7FEFF 		bl	__aeabi_i2f
 3907 01c0 0246     		mov	r2, r0
 3908 01c2 834B     		ldr	r3, .L234+12
 3909 01c4 1B68     		ldr	r3, [r3]	@ float
 3910 01c6 1046     		mov	r0, r2
 3911 01c8 1946     		mov	r1, r3
 3912 01ca FFF7FEFF 		bl	__aeabi_fmul
 3913 01ce 0346     		mov	r3, r0
 3914 01d0 1846     		mov	r0, r3
 3915 01d2 FFF7FEFF 		bl	__aeabi_f2iz
 3916 01d6 0346     		mov	r3, r0
 3917 01d8 9AB2     		uxth	r2, r3
 3918 01da 7E4B     		ldr	r3, .L234+16
 3919 01dc 1A80     		strh	r2, [r3]	@ movhi
 868:.\main.c      ****         char mes[16];
 869:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3920              		.loc 1 869 0
 3921 01de 7D4B     		ldr	r3, .L234+16
 3922 01e0 1B88     		ldrh	r3, [r3]
 3923 01e2 1BB2     		sxth	r3, r3
 3924 01e4 3A46     		mov	r2, r7
 3925 01e6 1046     		mov	r0, r2
 3926 01e8 7B49     		ldr	r1, .L234+20
 3927 01ea 1A46     		mov	r2, r3
 3928 01ec FFF7FEFF 		bl	sprintf
 870:.\main.c      ****         UART_PutString(mes);
 3929              		.loc 1 870 0
 3930 01f0 3B46     		mov	r3, r7
 3931 01f2 1846     		mov	r0, r3
 3932 01f4 FFF7FEFF 		bl	UART_PutString
 871:.\main.c      ****         initForward();
 3933              		.loc 1 871 0
 3934 01f8 FFF7FEFF 		bl	initForward
 872:.\main.c      ****         break;
 3935              		.loc 1 872 0
 3936 01fc 91E1     		b	.L200
 3937              	.L209:
 873:.\main.c      ****     case ('r'):
 874:.\main.c      ****         track_mode = RF_STOP;
 3938              		.loc 1 874 0
 3939 01fe 714B     		ldr	r3, .L234
 3940 0200 0522     		movs	r2, #5
 3941 0202 1A70     		strb	r2, [r3]
 875:.\main.c      ****         changeToRF();
 3942              		.loc 1 875 0
 3943 0204 FFF7FEFF 		bl	changeToRF
 876:.\main.c      ****         // Make initial position
 877:.\main.c      ****         initial_pos_valid = 0;
 3944              		.loc 1 877 0
 3945 0208 744B     		ldr	r3, .L234+24
 3946 020a 0022     		movs	r2, #0
 3947 020c 1A70     		strb	r2, [r3]
 878:.\main.c      ****         initBrake();
 3948              		.loc 1 878 0
 3949 020e FFF7FEFF 		bl	initBrake
 879:.\main.c      ****         break;
 3950              		.loc 1 879 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 87


 3951 0212 86E1     		b	.L200
 3952              	.L204:
 880:.\main.c      ****     case ('2'):
 881:.\main.c      ****         track_mode = DEST_TEST;
 3953              		.loc 1 881 0
 3954 0214 6B4B     		ldr	r3, .L234
 3955 0216 0622     		movs	r2, #6
 3956 0218 1A70     		strb	r2, [r3]
 882:.\main.c      ****         tracked_direction = robot_direction;
 3957              		.loc 1 882 0
 3958 021a 714B     		ldr	r3, .L234+28
 3959 021c 1B68     		ldr	r3, [r3]
 3960 021e 714A     		ldr	r2, .L234+32
 3961 0220 1360     		str	r3, [r2]
 883:.\main.c      ****         instructionLength = generateDirections();
 3962              		.loc 1 883 0
 3963 0222 FFF7FEFF 		bl	generateDirections
 3964 0226 0346     		mov	r3, r0
 3965 0228 9AB2     		uxth	r2, r3
 3966 022a 6F4B     		ldr	r3, .L234+36
 3967 022c 1A80     		strh	r2, [r3]	@ movhi
 884:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 885:.\main.c      ****         //char message[128];
 886:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 887:.\main.c      ****         
 888:.\main.c      ****         last_quad_count1 = 0;
 3968              		.loc 1 888 0
 3969 022e 6F4B     		ldr	r3, .L234+40
 3970 0230 0022     		movs	r2, #0
 3971 0232 1A80     		strh	r2, [r3]	@ movhi
 889:.\main.c      ****         last_quad_count2 = 0;
 3972              		.loc 1 889 0
 3973 0234 6E4B     		ldr	r3, .L234+44
 3974 0236 0022     		movs	r2, #0
 3975 0238 1A80     		strh	r2, [r3]	@ movhi
 890:.\main.c      ****         QuadDec_M1_SetCounter(0);
 3976              		.loc 1 890 0
 3977 023a 0020     		movs	r0, #0
 3978 023c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 891:.\main.c      ****         QuadDec_M2_SetCounter(0);
 3979              		.loc 1 891 0
 3980 0240 0020     		movs	r0, #0
 3981 0242 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 892:.\main.c      ****         instructionCount = 0;
 3982              		.loc 1 892 0
 3983 0246 6B4B     		ldr	r3, .L234+48
 3984 0248 0022     		movs	r2, #0
 3985 024a 1A80     		strh	r2, [r3]	@ movhi
 893:.\main.c      ****         isrRF_RX_Disable();
 3986              		.loc 1 893 0
 3987 024c FFF7FEFF 		bl	isrRF_RX_Disable
 894:.\main.c      ****         while(rf_char != 'F')
 3988              		.loc 1 894 0
 3989 0250 26E0     		b	.L216
 3990              	.L219:
 895:.\main.c      ****         {
 896:.\main.c      ****             rf_char = UART_GetChar();
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 88


 3991              		.loc 1 896 0
 3992 0252 FFF7FEFF 		bl	UART_GetChar
 3993 0256 0346     		mov	r3, r0
 3994 0258 FB77     		strb	r3, [r7, #31]
 897:.\main.c      ****             if(rf_char == 'F') break;
 3995              		.loc 1 897 0
 3996 025a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3997 025c 462B     		cmp	r3, #70
 3998 025e 00D1     		bne	.L217
 3999 0260 21E0     		b	.L218
 4000              	.L217:
 898:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 4001              		.loc 1 898 0
 4002 0262 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4003 0264 2F2B     		cmp	r3, #47
 4004 0266 1BD9     		bls	.L216
 4005              		.loc 1 898 0 is_stmt 0 discriminator 1
 4006 0268 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4007 026a 392B     		cmp	r3, #57
 4008 026c 18D8     		bhi	.L216
 899:.\main.c      ****             {
 900:.\main.c      ****                 UART_PutString("received: ");
 4009              		.loc 1 900 0 is_stmt 1
 4010 026e 6248     		ldr	r0, .L234+52
 4011 0270 FFF7FEFF 		bl	UART_PutString
 901:.\main.c      ****                 UART_PutChar(rf_char);
 4012              		.loc 1 901 0
 4013 0274 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4014 0276 1846     		mov	r0, r3
 4015 0278 FFF7FEFF 		bl	UART_PutChar
 902:.\main.c      ****                 UART_PutString("\r\n");
 4016              		.loc 1 902 0
 4017 027c 5F48     		ldr	r0, .L234+56
 4018 027e FFF7FEFF 		bl	UART_PutString
 903:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4019              		.loc 1 903 0
 4020 0282 5C4B     		ldr	r3, .L234+48
 4021 0284 1B88     		ldrh	r3, [r3]
 4022 0286 1A46     		mov	r2, r3	@ movhi
 4023 0288 9200     		lsls	r2, r2, #2
 4024 028a 1344     		add	r3, r3, r2
 4025 028c 5B00     		lsls	r3, r3, #1
 4026 028e 9AB2     		uxth	r2, r3
 4027 0290 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4028 0292 9BB2     		uxth	r3, r3
 4029 0294 1344     		add	r3, r3, r2
 4030 0296 9BB2     		uxth	r3, r3
 4031 0298 303B     		subs	r3, r3, #48
 4032 029a 9AB2     		uxth	r2, r3
 4033 029c 554B     		ldr	r3, .L234+48
 4034 029e 1A80     		strh	r2, [r3]	@ movhi
 4035              	.L216:
 894:.\main.c      ****         {
 4036              		.loc 1 894 0
 4037 02a0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4038 02a2 462B     		cmp	r3, #70
 4039 02a4 D5D1     		bne	.L219
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 89


 4040              	.L218:
 904:.\main.c      ****             }
 905:.\main.c      ****             
 906:.\main.c      ****         }
 907:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4041              		.loc 1 907 0
 4042 02a6 5648     		ldr	r0, .L234+60
 4043 02a8 FFF7FEFF 		bl	isrRF_RX_StartEx
 908:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4044              		.loc 1 908 0
 4045 02ac 514B     		ldr	r3, .L234+48
 4046 02ae 1B88     		ldrh	r3, [r3]
 4047 02b0 1A46     		mov	r2, r3
 4048 02b2 3B46     		mov	r3, r7
 4049 02b4 1846     		mov	r0, r3
 4050 02b6 5349     		ldr	r1, .L234+64
 4051 02b8 FFF7FEFF 		bl	sprintf
 909:.\main.c      ****         UART_PutString(mes);
 4052              		.loc 1 909 0
 4053 02bc 3B46     		mov	r3, r7
 4054 02be 1846     		mov	r0, r3
 4055 02c0 FFF7FEFF 		bl	UART_PutString
 910:.\main.c      ****         
 911:.\main.c      ****         int i;
 912:.\main.c      ****         for(i = instructionCount;i < instructionLength; i++)
 4056              		.loc 1 912 0
 4057 02c4 4B4B     		ldr	r3, .L234+48
 4058 02c6 1B88     		ldrh	r3, [r3]
 4059 02c8 BB61     		str	r3, [r7, #24]
 4060 02ca 18E0     		b	.L220
 4061              	.L223:
 913:.\main.c      ****         {
 914:.\main.c      ****             if(i%2 == 0)
 4062              		.loc 1 914 0
 4063 02cc BB69     		ldr	r3, [r7, #24]
 4064 02ce 03F00103 		and	r3, r3, #1
 4065 02d2 002B     		cmp	r3, #0
 4066 02d4 07D1     		bne	.L221
 915:.\main.c      ****             {
 916:.\main.c      ****                 UART_PutChar(instructions[i]);
 4067              		.loc 1 916 0
 4068 02d6 4C4A     		ldr	r2, .L234+68
 4069 02d8 BB69     		ldr	r3, [r7, #24]
 4070 02da 1344     		add	r3, r3, r2
 4071 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4072 02de 1846     		mov	r0, r3
 4073 02e0 FFF7FEFF 		bl	UART_PutChar
 4074 02e4 08E0     		b	.L222
 4075              	.L221:
 917:.\main.c      ****             }
 918:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 4076              		.loc 1 918 0
 4077 02e6 484A     		ldr	r2, .L234+68
 4078 02e8 BB69     		ldr	r3, [r7, #24]
 4079 02ea 1344     		add	r3, r3, r2
 4080 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4081 02ee 3033     		adds	r3, r3, #48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 90


 4082 02f0 DBB2     		uxtb	r3, r3
 4083 02f2 1846     		mov	r0, r3
 4084 02f4 FFF7FEFF 		bl	UART_PutChar
 4085              	.L222:
 912:.\main.c      ****         {
 4086              		.loc 1 912 0 discriminator 2
 4087 02f8 BB69     		ldr	r3, [r7, #24]
 4088 02fa 0133     		adds	r3, r3, #1
 4089 02fc BB61     		str	r3, [r7, #24]
 4090              	.L220:
 912:.\main.c      ****         {
 4091              		.loc 1 912 0 is_stmt 0 discriminator 1
 4092 02fe 3A4B     		ldr	r3, .L234+36
 4093 0300 1B88     		ldrh	r3, [r3]
 4094 0302 1A46     		mov	r2, r3
 4095 0304 BB69     		ldr	r3, [r7, #24]
 4096 0306 9A42     		cmp	r2, r3
 4097 0308 E0DC     		bgt	.L223
 919:.\main.c      **** 
 920:.\main.c      ****         }
 921:.\main.c      ****         
 922:.\main.c      ****         UART_PutString("\r\n");
 4098              		.loc 1 922 0 is_stmt 1
 4099 030a 3C48     		ldr	r0, .L234+56
 4100 030c FFF7FEFF 		bl	UART_PutString
 923:.\main.c      ****         
 924:.\main.c      ****         char nextStep = instructions[instructionCount];
 4101              		.loc 1 924 0
 4102 0310 384B     		ldr	r3, .L234+48
 4103 0312 1B88     		ldrh	r3, [r3]
 4104 0314 1A46     		mov	r2, r3
 4105 0316 3C4B     		ldr	r3, .L234+68
 4106 0318 9B5C     		ldrb	r3, [r3, r2]
 4107 031a FB74     		strb	r3, [r7, #19]
 925:.\main.c      ****         
 926:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];
 4108              		.loc 1 926 0
 4109 031c 354B     		ldr	r3, .L234+48
 4110 031e 1B88     		ldrh	r3, [r3]
 4111 0320 0133     		adds	r3, r3, #1
 4112 0322 394A     		ldr	r2, .L234+68
 4113 0324 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4114 0326 9BB2     		uxth	r3, r3
 4115 0328 1A46     		mov	r2, r3	@ movhi
 4116 032a D200     		lsls	r2, r2, #3
 4117 032c 1A44     		add	r2, r2, r3
 4118 032e D200     		lsls	r2, r2, #3
 4119 0330 D31A     		subs	r3, r2, r3
 4120 0332 5B00     		lsls	r3, r3, #1
 4121 0334 9BB2     		uxth	r3, r3
 4122 0336 9AB2     		uxth	r2, r3
 4123 0338 264B     		ldr	r3, .L234+16
 4124 033a 1A80     		strh	r2, [r3]	@ movhi
 927:.\main.c      ****         if(instructionCount == 0) target_distance_quad -= QUAD_PER_UNIT; 
 4125              		.loc 1 927 0
 4126 033c 2D4B     		ldr	r3, .L234+48
 4127 033e 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 91


 4128 0340 002B     		cmp	r3, #0
 4129 0342 07D1     		bne	.L224
 4130              		.loc 1 927 0 is_stmt 0 discriminator 1
 4131 0344 234B     		ldr	r3, .L234+16
 4132 0346 1B88     		ldrh	r3, [r3]
 4133 0348 9BB2     		uxth	r3, r3
 4134 034a 8E3B     		subs	r3, r3, #142
 4135 034c 9BB2     		uxth	r3, r3
 4136 034e 9AB2     		uxth	r2, r3
 4137 0350 204B     		ldr	r3, .L234+16
 4138 0352 1A80     		strh	r2, [r3]	@ movhi
 4139              	.L224:
 928:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4140              		.loc 1 928 0 is_stmt 1
 4141 0354 1F4B     		ldr	r3, .L234+16
 4142 0356 1B88     		ldrh	r3, [r3]
 4143 0358 1BB2     		sxth	r3, r3
 4144 035a 3A46     		mov	r2, r7
 4145 035c 1046     		mov	r0, r2
 4146 035e 2B49     		ldr	r1, .L234+72
 4147 0360 1A46     		mov	r2, r3
 4148 0362 FFF7FEFF 		bl	sprintf
 929:.\main.c      ****         UART_PutString(mes);
 4149              		.loc 1 929 0
 4150 0366 3B46     		mov	r3, r7
 4151 0368 1846     		mov	r0, r3
 4152 036a FFF7FEFF 		bl	UART_PutString
 930:.\main.c      ****         inittrackLineZ();
 4153              		.loc 1 930 0
 4154 036e FFF7FEFF 		bl	inittrackLineZ
 931:.\main.c      ****         break;
 4155              		.loc 1 931 0
 4156 0372 D6E0     		b	.L200
 4157              	.L202:
 932:.\main.c      ****     case ('1'):
 933:.\main.c      ****         track_mode = DEST_TEST;
 4158              		.loc 1 933 0
 4159 0374 134B     		ldr	r3, .L234
 4160 0376 0622     		movs	r2, #6
 4161 0378 1A70     		strb	r2, [r3]
 934:.\main.c      ****         tracked_direction = robot_direction;
 4162              		.loc 1 934 0
 4163 037a 194B     		ldr	r3, .L234+28
 4164 037c 1B68     		ldr	r3, [r3]
 4165 037e 194A     		ldr	r2, .L234+32
 4166 0380 1360     		str	r3, [r2]
 935:.\main.c      ****         //instructionLength = generateDirections();
 936:.\main.c      ****         instructionLength = generateEntireMapDirections();
 4167              		.loc 1 936 0
 4168 0382 FFF7FEFF 		bl	generateEntireMapDirections
 4169 0386 0346     		mov	r3, r0
 4170 0388 9AB2     		uxth	r2, r3
 4171 038a 174B     		ldr	r3, .L234+36
 4172 038c 1A80     		strh	r2, [r3]	@ movhi
 937:.\main.c      ****         //char message[128];
 938:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 939:.\main.c      ****         instructionCount = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 92


 4173              		.loc 1 939 0
 4174 038e 194B     		ldr	r3, .L234+48
 4175 0390 0022     		movs	r2, #0
 4176 0392 1A80     		strh	r2, [r3]	@ movhi
 940:.\main.c      ****         QuadDec_M1_SetCounter(0);
 4177              		.loc 1 940 0
 4178 0394 0020     		movs	r0, #0
 4179 0396 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 941:.\main.c      ****         QuadDec_M2_SetCounter(0);
 4180              		.loc 1 941 0
 4181 039a 0020     		movs	r0, #0
 4182 039c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 942:.\main.c      ****         last_quad_count1 = 0;
 4183              		.loc 1 942 0
 4184 03a0 124B     		ldr	r3, .L234+40
 4185 03a2 0022     		movs	r2, #0
 4186 03a4 1A80     		strh	r2, [r3]	@ movhi
 943:.\main.c      ****         last_quad_count2 = 0;
 4187              		.loc 1 943 0
 4188 03a6 124B     		ldr	r3, .L234+44
 4189 03a8 0022     		movs	r2, #0
 4190 03aa 1A80     		strh	r2, [r3]	@ movhi
 944:.\main.c      ****         isrRF_RX_Disable();
 4191              		.loc 1 944 0
 4192 03ac FFF7FEFF 		bl	isrRF_RX_Disable
 945:.\main.c      ****         while(rf_char != 'F')
 4193              		.loc 1 945 0
 4194 03b0 4DE0     		b	.L225
 4195              	.L228:
 946:.\main.c      ****         {
 947:.\main.c      ****             rf_char = UART_GetChar();
 4196              		.loc 1 947 0
 4197 03b2 FFF7FEFF 		bl	UART_GetChar
 4198 03b6 0346     		mov	r3, r0
 4199 03b8 FB77     		strb	r3, [r7, #31]
 948:.\main.c      ****             if(rf_char == 'F') break;
 4200              		.loc 1 948 0
 4201 03ba FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4202 03bc 462B     		cmp	r3, #70
 4203 03be 27D1     		bne	.L226
 4204 03c0 48E0     		b	.L227
 4205              	.L235:
 4206 03c2 00BF     		.align	2
 4207              	.L234:
 4208 03c4 00000000 		.word	track_mode
 4209 03c8 00000000 		.word	accum_dist
 4210 03cc 00000000 		.word	target_distance_cm
 4211 03d0 00000000 		.word	quad_per_cm
 4212 03d4 00000000 		.word	target_distance_quad
 4213 03d8 C0000000 		.word	.LC10
 4214 03dc 00000000 		.word	initial_pos_valid
 4215 03e0 00000000 		.word	robot_direction
 4216 03e4 00000000 		.word	tracked_direction
 4217 03e8 00000000 		.word	instructionLength
 4218 03ec 00000000 		.word	last_quad_count1
 4219 03f0 00000000 		.word	last_quad_count2
 4220 03f4 00000000 		.word	instructionCount
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 93


 4221 03f8 D4000000 		.word	.LC11
 4222 03fc E0000000 		.word	.LC12
 4223 0400 00000000 		.word	BT_rxInt
 4224 0404 E4000000 		.word	.LC13
 4225 0408 00000000 		.word	instructions
 4226 040c 64000000 		.word	.LC5
 4227              	.L226:
 949:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 4228              		.loc 1 949 0
 4229 0410 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4230 0412 2F2B     		cmp	r3, #47
 4231 0414 1BD9     		bls	.L225
 4232              		.loc 1 949 0 is_stmt 0 discriminator 1
 4233 0416 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4234 0418 392B     		cmp	r3, #57
 4235 041a 18D8     		bhi	.L225
 950:.\main.c      ****             {
 951:.\main.c      ****                 UART_PutString("received: ");
 4236              		.loc 1 951 0 is_stmt 1
 4237 041c 4248     		ldr	r0, .L236
 4238 041e FFF7FEFF 		bl	UART_PutString
 952:.\main.c      ****                 UART_PutChar(rf_char);
 4239              		.loc 1 952 0
 4240 0422 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4241 0424 1846     		mov	r0, r3
 4242 0426 FFF7FEFF 		bl	UART_PutChar
 953:.\main.c      ****                 UART_PutString("\r\n");
 4243              		.loc 1 953 0
 4244 042a 4048     		ldr	r0, .L236+4
 4245 042c FFF7FEFF 		bl	UART_PutString
 954:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4246              		.loc 1 954 0
 4247 0430 3F4B     		ldr	r3, .L236+8
 4248 0432 1B88     		ldrh	r3, [r3]
 4249 0434 1A46     		mov	r2, r3	@ movhi
 4250 0436 9200     		lsls	r2, r2, #2
 4251 0438 1344     		add	r3, r3, r2
 4252 043a 5B00     		lsls	r3, r3, #1
 4253 043c 9AB2     		uxth	r2, r3
 4254 043e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4255 0440 9BB2     		uxth	r3, r3
 4256 0442 1344     		add	r3, r3, r2
 4257 0444 9BB2     		uxth	r3, r3
 4258 0446 303B     		subs	r3, r3, #48
 4259 0448 9AB2     		uxth	r2, r3
 4260 044a 394B     		ldr	r3, .L236+8
 4261 044c 1A80     		strh	r2, [r3]	@ movhi
 4262              	.L225:
 945:.\main.c      ****         {
 4263              		.loc 1 945 0
 4264 044e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4265 0450 462B     		cmp	r3, #70
 4266 0452 AED1     		bne	.L228
 4267              	.L227:
 955:.\main.c      ****             }
 956:.\main.c      ****             
 957:.\main.c      ****         }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 94


 958:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4268              		.loc 1 958 0
 4269 0454 3748     		ldr	r0, .L236+12
 4270 0456 FFF7FEFF 		bl	isrRF_RX_StartEx
 959:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4271              		.loc 1 959 0
 4272 045a 354B     		ldr	r3, .L236+8
 4273 045c 1B88     		ldrh	r3, [r3]
 4274 045e 1A46     		mov	r2, r3
 4275 0460 3B46     		mov	r3, r7
 4276 0462 1846     		mov	r0, r3
 4277 0464 3449     		ldr	r1, .L236+16
 4278 0466 FFF7FEFF 		bl	sprintf
 960:.\main.c      ****         UART_PutString(mes);
 4279              		.loc 1 960 0
 4280 046a 3B46     		mov	r3, r7
 4281 046c 1846     		mov	r0, r3
 4282 046e FFF7FEFF 		bl	UART_PutString
 961:.\main.c      ****         //instructionCount = instructionLength - 22;
 962:.\main.c      ****         int x;
 963:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 4283              		.loc 1 963 0
 4284 0472 2F4B     		ldr	r3, .L236+8
 4285 0474 1B88     		ldrh	r3, [r3]
 4286 0476 7B61     		str	r3, [r7, #20]
 4287 0478 18E0     		b	.L229
 4288              	.L232:
 964:.\main.c      ****         {
 965:.\main.c      ****             if(x%2 == 0)
 4289              		.loc 1 965 0
 4290 047a 7B69     		ldr	r3, [r7, #20]
 4291 047c 03F00103 		and	r3, r3, #1
 4292 0480 002B     		cmp	r3, #0
 4293 0482 07D1     		bne	.L230
 966:.\main.c      ****             {
 967:.\main.c      ****                 UART_PutChar(instructions[x]);
 4294              		.loc 1 967 0
 4295 0484 2D4A     		ldr	r2, .L236+20
 4296 0486 7B69     		ldr	r3, [r7, #20]
 4297 0488 1344     		add	r3, r3, r2
 4298 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4299 048c 1846     		mov	r0, r3
 4300 048e FFF7FEFF 		bl	UART_PutChar
 4301 0492 08E0     		b	.L231
 4302              	.L230:
 968:.\main.c      ****             }
 969:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 4303              		.loc 1 969 0
 4304 0494 294A     		ldr	r2, .L236+20
 4305 0496 7B69     		ldr	r3, [r7, #20]
 4306 0498 1344     		add	r3, r3, r2
 4307 049a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4308 049c 3033     		adds	r3, r3, #48
 4309 049e DBB2     		uxtb	r3, r3
 4310 04a0 1846     		mov	r0, r3
 4311 04a2 FFF7FEFF 		bl	UART_PutChar
 4312              	.L231:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 95


 963:.\main.c      ****         {
 4313              		.loc 1 963 0 discriminator 2
 4314 04a6 7B69     		ldr	r3, [r7, #20]
 4315 04a8 0133     		adds	r3, r3, #1
 4316 04aa 7B61     		str	r3, [r7, #20]
 4317              	.L229:
 963:.\main.c      ****         {
 4318              		.loc 1 963 0 is_stmt 0 discriminator 1
 4319 04ac 244B     		ldr	r3, .L236+24
 4320 04ae 1B88     		ldrh	r3, [r3]
 4321 04b0 1A46     		mov	r2, r3
 4322 04b2 7B69     		ldr	r3, [r7, #20]
 4323 04b4 9A42     		cmp	r2, r3
 4324 04b6 E0DC     		bgt	.L232
 970:.\main.c      **** 
 971:.\main.c      ****         }
 972:.\main.c      ****         
 973:.\main.c      ****         UART_PutString("\r\n");
 4325              		.loc 1 973 0 is_stmt 1
 4326 04b8 1C48     		ldr	r0, .L236+4
 4327 04ba FFF7FEFF 		bl	UART_PutString
 974:.\main.c      **** 
 975:.\main.c      ****         nextStep = instructions[instructionCount];
 4328              		.loc 1 975 0
 4329 04be 1C4B     		ldr	r3, .L236+8
 4330 04c0 1B88     		ldrh	r3, [r3]
 4331 04c2 1A46     		mov	r2, r3
 4332 04c4 1D4B     		ldr	r3, .L236+20
 4333 04c6 9B5C     		ldrb	r3, [r3, r2]
 4334 04c8 FB74     		strb	r3, [r7, #19]
 976:.\main.c      ****         
 977:.\main.c      ****         
 978:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1]; 
 4335              		.loc 1 978 0
 4336 04ca 194B     		ldr	r3, .L236+8
 4337 04cc 1B88     		ldrh	r3, [r3]
 4338 04ce 0133     		adds	r3, r3, #1
 4339 04d0 1A4A     		ldr	r2, .L236+20
 4340 04d2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4341 04d4 9BB2     		uxth	r3, r3
 4342 04d6 1A46     		mov	r2, r3	@ movhi
 4343 04d8 D200     		lsls	r2, r2, #3
 4344 04da 1A44     		add	r2, r2, r3
 4345 04dc D200     		lsls	r2, r2, #3
 4346 04de D31A     		subs	r3, r2, r3
 4347 04e0 5B00     		lsls	r3, r3, #1
 4348 04e2 9BB2     		uxth	r3, r3
 4349 04e4 9AB2     		uxth	r2, r3
 4350 04e6 174B     		ldr	r3, .L236+28
 4351 04e8 1A80     		strh	r2, [r3]	@ movhi
 979:.\main.c      ****         if(instructionCount == 0) target_distance_quad += QUAD_PER_UNIT; 
 4352              		.loc 1 979 0
 4353 04ea 114B     		ldr	r3, .L236+8
 4354 04ec 1B88     		ldrh	r3, [r3]
 4355 04ee 002B     		cmp	r3, #0
 4356 04f0 07D1     		bne	.L233
 4357              		.loc 1 979 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 96


 4358 04f2 144B     		ldr	r3, .L236+28
 4359 04f4 1B88     		ldrh	r3, [r3]
 4360 04f6 9BB2     		uxth	r3, r3
 4361 04f8 8E33     		adds	r3, r3, #142
 4362 04fa 9BB2     		uxth	r3, r3
 4363 04fc 9AB2     		uxth	r2, r3
 4364 04fe 114B     		ldr	r3, .L236+28
 4365 0500 1A80     		strh	r2, [r3]	@ movhi
 4366              	.L233:
 980:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4367              		.loc 1 980 0 is_stmt 1
 4368 0502 104B     		ldr	r3, .L236+28
 4369 0504 1B88     		ldrh	r3, [r3]
 4370 0506 1BB2     		sxth	r3, r3
 4371 0508 3A46     		mov	r2, r7
 4372 050a 1046     		mov	r0, r2
 4373 050c 0E49     		ldr	r1, .L236+32
 4374 050e 1A46     		mov	r2, r3
 4375 0510 FFF7FEFF 		bl	sprintf
 981:.\main.c      ****         UART_PutString(mes);
 4376              		.loc 1 981 0
 4377 0514 3B46     		mov	r3, r7
 4378 0516 1846     		mov	r0, r3
 4379 0518 FFF7FEFF 		bl	UART_PutString
 982:.\main.c      ****         inittrackLineZ();
 4380              		.loc 1 982 0
 4381 051c FFF7FEFF 		bl	inittrackLineZ
 983:.\main.c      ****         break;
 4382              		.loc 1 983 0
 4383 0520 00BF     		nop
 4384              	.L200:
 4385              	.LBE11:
 984:.\main.c      ****     }
 985:.\main.c      **** }
 4386              		.loc 1 985 0
 4387 0522 2037     		adds	r7, r7, #32
 4388              		.cfi_def_cfa_offset 8
 4389 0524 BD46     		mov	sp, r7
 4390              		.cfi_def_cfa_register 13
 4391              		@ sp needed
 4392 0526 80BD     		pop	{r7, pc}
 4393              	.L237:
 4394              		.align	2
 4395              	.L236:
 4396 0528 D4000000 		.word	.LC11
 4397 052c E0000000 		.word	.LC12
 4398 0530 00000000 		.word	instructionCount
 4399 0534 00000000 		.word	BT_rxInt
 4400 0538 E4000000 		.word	.LC13
 4401 053c 00000000 		.word	instructions
 4402 0540 00000000 		.word	instructionLength
 4403 0544 00000000 		.word	target_distance_quad
 4404 0548 64000000 		.word	.LC5
 4405              		.cfi_endproc
 4406              	.LFE93:
 4407              		.size	BT_rxInt, .-BT_rxInt
 4408              		.section	.text.changeToRF,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 97


 4409              		.align	2
 4410              		.global	changeToRF
 4411              		.thumb
 4412              		.thumb_func
 4413              		.type	changeToRF, %function
 4414              	changeToRF:
 4415              	.LFB94:
 986:.\main.c      **** 
 987:.\main.c      **** 
 988:.\main.c      **** void changeToRF()
 989:.\main.c      **** {
 4416              		.loc 1 989 0
 4417              		.cfi_startproc
 4418              		@ args = 0, pretend = 0, frame = 0
 4419              		@ frame_needed = 1, uses_anonymous_args = 0
 4420 0000 80B5     		push	{r7, lr}
 4421              		.cfi_def_cfa_offset 8
 4422              		.cfi_offset 7, -8
 4423              		.cfi_offset 14, -4
 4424 0002 00AF     		add	r7, sp, #0
 4425              		.cfi_def_cfa_register 7
 990:.\main.c      ****         //disable BT
 991:.\main.c      ****         BT_ENABLED = 0;
 4426              		.loc 1 991 0
 4427 0004 0B4B     		ldr	r3, .L239
 4428 0006 0022     		movs	r2, #0
 4429 0008 1A70     		strb	r2, [r3]
 992:.\main.c      ****         isrRF_RX_Stop();
 4430              		.loc 1 992 0
 4431 000a FFF7FEFF 		bl	isrRF_RX_Stop
 993:.\main.c      ****         UART_Stop();
 4432              		.loc 1 993 0
 4433 000e FFF7FEFF 		bl	UART_Stop
 994:.\main.c      ****         
 995:.\main.c      ****         //enable RF
 996:.\main.c      ****         BIN_ENABLED = 1;
 4434              		.loc 1 996 0
 4435 0012 094B     		ldr	r3, .L239+4
 4436 0014 0122     		movs	r2, #1
 4437 0016 1A70     		strb	r2, [r3]
 997:.\main.c      ****         UART_clk_SetDividerValue(130);
 4438              		.loc 1 997 0
 4439 0018 8120     		movs	r0, #129
 4440 001a 0121     		movs	r1, #1
 4441 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 998:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 4442              		.loc 1 998 0
 4443 0020 0648     		ldr	r0, .L239+8
 4444 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 999:.\main.c      ****         UART_Start();
 4445              		.loc 1 999 0
 4446 0026 FFF7FEFF 		bl	UART_Start
1000:.\main.c      ****         RF_BT_SELECT_Write(0);
 4447              		.loc 1 1000 0
 4448 002a 0020     		movs	r0, #0
 4449 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
1001:.\main.c      **** }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 98


 4450              		.loc 1 1001 0
 4451 0030 80BD     		pop	{r7, pc}
 4452              	.L240:
 4453 0032 00BF     		.align	2
 4454              	.L239:
 4455 0034 00000000 		.word	BT_ENABLED
 4456 0038 00000000 		.word	BIN_ENABLED
 4457 003c 00000000 		.word	rxInt
 4458              		.cfi_endproc
 4459              	.LFE94:
 4460              		.size	changeToRF, .-changeToRF
 4461              		.section	.text.changeToBT,"ax",%progbits
 4462              		.align	2
 4463              		.global	changeToBT
 4464              		.thumb
 4465              		.thumb_func
 4466              		.type	changeToBT, %function
 4467              	changeToBT:
 4468              	.LFB95:
1002:.\main.c      **** 
1003:.\main.c      **** void changeToBT()
1004:.\main.c      **** {
 4469              		.loc 1 1004 0
 4470              		.cfi_startproc
 4471              		@ args = 0, pretend = 0, frame = 0
 4472              		@ frame_needed = 1, uses_anonymous_args = 0
 4473 0000 80B5     		push	{r7, lr}
 4474              		.cfi_def_cfa_offset 8
 4475              		.cfi_offset 7, -8
 4476              		.cfi_offset 14, -4
 4477 0002 00AF     		add	r7, sp, #0
 4478              		.cfi_def_cfa_register 7
1005:.\main.c      ****         //disable RF
1006:.\main.c      ****         BIN_ENABLED = 0;
 4479              		.loc 1 1006 0
 4480 0004 0B4B     		ldr	r3, .L242
 4481 0006 0022     		movs	r2, #0
 4482 0008 1A70     		strb	r2, [r3]
1007:.\main.c      ****         isrRF_RX_Stop();
 4483              		.loc 1 1007 0
 4484 000a FFF7FEFF 		bl	isrRF_RX_Stop
1008:.\main.c      ****         UART_Stop();
 4485              		.loc 1 1008 0
 4486 000e FFF7FEFF 		bl	UART_Stop
1009:.\main.c      ****         
1010:.\main.c      ****         //enable BT
1011:.\main.c      ****         BT_ENABLED = 1;
 4487              		.loc 1 1011 0
 4488 0012 094B     		ldr	r3, .L242+4
 4489 0014 0122     		movs	r2, #1
 4490 0016 1A70     		strb	r2, [r3]
1012:.\main.c      ****         UART_clk_SetDividerValue(781);
 4491              		.loc 1 1012 0
 4492 0018 4FF44370 		mov	r0, #780
 4493 001c 0121     		movs	r1, #1
 4494 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
1013:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 99


 4495              		.loc 1 1013 0
 4496 0022 0648     		ldr	r0, .L242+8
 4497 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
1014:.\main.c      ****         UART_Start();
 4498              		.loc 1 1014 0
 4499 0028 FFF7FEFF 		bl	UART_Start
1015:.\main.c      ****         RF_BT_SELECT_Write(1);
 4500              		.loc 1 1015 0
 4501 002c 0120     		movs	r0, #1
 4502 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
1016:.\main.c      **** }
 4503              		.loc 1 1016 0
 4504 0032 80BD     		pop	{r7, pc}
 4505              	.L243:
 4506              		.align	2
 4507              	.L242:
 4508 0034 00000000 		.word	BIN_ENABLED
 4509 0038 00000000 		.word	BT_ENABLED
 4510 003c 00000000 		.word	BT_rxInt
 4511              		.cfi_endproc
 4512              	.LFE95:
 4513              		.size	changeToBT, .-changeToBT
 4514              		.section	.text.Quad_Dec_response,"ax",%progbits
 4515              		.align	2
 4516              		.global	Quad_Dec_response
 4517              		.thumb
 4518              		.thumb_func
 4519              		.type	Quad_Dec_response, %function
 4520              	Quad_Dec_response:
 4521              	.LFB96:
1017:.\main.c      **** 
1018:.\main.c      **** 
1019:.\main.c      **** void Quad_Dec_response()
1020:.\main.c      **** {
 4522              		.loc 1 1020 0
 4523              		.cfi_startproc
 4524              		@ args = 0, pretend = 0, frame = 32
 4525              		@ frame_needed = 1, uses_anonymous_args = 0
 4526 0000 B0B5     		push	{r4, r5, r7, lr}
 4527              		.cfi_def_cfa_offset 16
 4528              		.cfi_offset 4, -16
 4529              		.cfi_offset 5, -12
 4530              		.cfi_offset 7, -8
 4531              		.cfi_offset 14, -4
 4532 0002 88B0     		sub	sp, sp, #32
 4533              		.cfi_def_cfa_offset 48
 4534 0004 00AF     		add	r7, sp, #0
 4535              		.cfi_def_cfa_register 7
1021:.\main.c      ****     //Check if the flag has been set
1022:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4536              		.loc 1 1022 0
 4537 0006 824B     		ldr	r3, .L252
 4538 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4539 000a 002B     		cmp	r3, #0
 4540 000c 00D1     		bne	.L245
 4541 000e FCE0     		b	.L244
 4542              	.L245:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 100


1023:.\main.c      ****     flag_calc_wheelspeed = 0;
 4543              		.loc 1 1023 0
 4544 0010 7F4B     		ldr	r3, .L252
 4545 0012 0022     		movs	r2, #0
 4546 0014 1A70     		strb	r2, [r3]
1024:.\main.c      ****     
1025:.\main.c      ****     //char wheel_1_str [64];
1026:.\main.c      ****     //char wheel_2_str [64];
1027:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
1028:.\main.c      ****     //usbPutString(wheel_1_str);
1029:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
1030:.\main.c      ****     
1031:.\main.c      ****     //usbPutString(wheel_2_str);
1032:.\main.c      ****     
1033:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4547              		.loc 1 1033 0
 4548 0016 7F4B     		ldr	r3, .L252+4
 4549 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4550 001a FB81     		strh	r3, [r7, #14]	@ movhi
1034:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4551              		.loc 1 1034 0
 4552 001c 7E4B     		ldr	r3, .L252+8
 4553 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4554 0020 BB81     		strh	r3, [r7, #12]	@ movhi
1035:.\main.c      ****     double scalingLeft = 1;
 4555              		.loc 1 1035 0
 4556 0022 4FF00002 		mov	r2, #0
 4557 0026 7D4B     		ldr	r3, .L252+12
 4558 0028 C7E90623 		strd	r2, [r7, #24]
1036:.\main.c      ****     double scalingRight = 1;
 4559              		.loc 1 1036 0
 4560 002c 4FF00002 		mov	r2, #0
 4561 0030 7A4B     		ldr	r3, .L252+12
 4562 0032 C7E90423 		strd	r2, [r7, #16]
1037:.\main.c      ****     
1038:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
1039:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4563              		.loc 1 1039 0
 4564 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4565 003a 002B     		cmp	r3, #0
 4566 003c 0FD1     		bne	.L247
 4567              		.loc 1 1039 0 is_stmt 0 discriminator 1
 4568 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4569 0042 002B     		cmp	r3, #0
 4570 0044 0BD1     		bne	.L247
1040:.\main.c      ****        //leftSpeed = 3;
1041:.\main.c      ****         scalingLeft = 2;
 4571              		.loc 1 1041 0 is_stmt 1
 4572 0046 4FF00002 		mov	r2, #0
 4573 004a 4FF08043 		mov	r3, #1073741824
 4574 004e C7E90623 		strd	r2, [r7, #24]
1042:.\main.c      ****         scalingRight = 2;
 4575              		.loc 1 1042 0
 4576 0052 4FF00002 		mov	r2, #0
 4577 0056 4FF08043 		mov	r3, #1073741824
 4578 005a C7E90423 		strd	r2, [r7, #16]
 4579              	.L247:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 101


1043:.\main.c      ****     }
1044:.\main.c      **** 
1045:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4580              		.loc 1 1045 0
 4581 005e 704B     		ldr	r3, .L252+16
 4582 0060 1B88     		ldrh	r3, [r3]
 4583 0062 1AB2     		sxth	r2, r3
 4584 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4585 0068 002B     		cmp	r3, #0
 4586 006a B8BF     		it	lt
 4587 006c 5B42     		rsblt	r3, r3, #0
 4588 006e D31A     		subs	r3, r2, r3
 4589 0070 BB60     		str	r3, [r7, #8]
1046:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4590              		.loc 1 1046 0
 4591 0072 BB68     		ldr	r3, [r7, #8]
 4592 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4593 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4594 007c BB68     		ldr	r3, [r7, #8]
 4595 007e 92FBF3F3 		sdiv	r3, r2, r3
 4596 0082 1846     		mov	r0, r3
 4597 0084 FFF7FEFF 		bl	__aeabi_i2d
 4598 0088 0446     		mov	r4, r0
 4599 008a 0D46     		mov	r5, r1
 4600 008c BB68     		ldr	r3, [r7, #8]
 4601 008e 002B     		cmp	r3, #0
 4602 0090 B8BF     		it	lt
 4603 0092 5B42     		rsblt	r3, r3, #0
 4604 0094 1846     		mov	r0, r3
 4605 0096 FFF7FEFF 		bl	__aeabi_i2d
 4606 009a 0246     		mov	r2, r0
 4607 009c 0B46     		mov	r3, r1
 4608 009e 1046     		mov	r0, r2
 4609 00a0 1946     		mov	r1, r3
 4610 00a2 FFF7FEFF 		bl	sqrt
 4611 00a6 0246     		mov	r2, r0
 4612 00a8 0B46     		mov	r3, r1
 4613 00aa 2046     		mov	r0, r4
 4614 00ac 2946     		mov	r1, r5
 4615 00ae FFF7FEFF 		bl	__aeabi_dmul
 4616 00b2 0246     		mov	r2, r0
 4617 00b4 0B46     		mov	r3, r1
 4618 00b6 1046     		mov	r0, r2
 4619 00b8 1946     		mov	r1, r3
 4620 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4621 00be 0346     		mov	r3, r0
 4622 00c0 7B60     		str	r3, [r7, #4]
1047:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4623              		.loc 1 1047 0
 4624 00c2 584B     		ldr	r3, .L252+20
 4625 00c4 1B88     		ldrh	r3, [r3]
 4626 00c6 1BB2     		sxth	r3, r3
 4627 00c8 1846     		mov	r0, r3
 4628 00ca FFF7FEFF 		bl	__aeabi_i2d
 4629 00ce 0446     		mov	r4, r0
 4630 00d0 0D46     		mov	r5, r1
 4631 00d2 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 102


 4632 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4633 00d8 0246     		mov	r2, r0
 4634 00da 0B46     		mov	r3, r1
 4635 00dc 1046     		mov	r0, r2
 4636 00de 1946     		mov	r1, r3
 4637 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4638 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4639 00e8 0246     		mov	r2, r0
 4640 00ea 0B46     		mov	r3, r1
 4641 00ec 2046     		mov	r0, r4
 4642 00ee 2946     		mov	r1, r5
 4643 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4644 00f4 0246     		mov	r2, r0
 4645 00f6 0B46     		mov	r3, r1
 4646 00f8 1046     		mov	r0, r2
 4647 00fa 1946     		mov	r1, r3
 4648 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4649 0100 0346     		mov	r3, r0
 4650 0102 9AB2     		uxth	r2, r3
 4651 0104 474B     		ldr	r3, .L252+20
 4652 0106 1A80     		strh	r2, [r3]	@ movhi
1048:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4653              		.loc 1 1048 0
 4654 0108 474B     		ldr	r3, .L252+24
 4655 010a 1B88     		ldrh	r3, [r3]
 4656 010c 1AB2     		sxth	r2, r3
 4657 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4658 0112 002B     		cmp	r3, #0
 4659 0114 B8BF     		it	lt
 4660 0116 5B42     		rsblt	r3, r3, #0
 4661 0118 D31A     		subs	r3, r2, r3
 4662 011a BB60     		str	r3, [r7, #8]
1049:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4663              		.loc 1 1049 0
 4664 011c BB68     		ldr	r3, [r7, #8]
 4665 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4666 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4667 0126 BB68     		ldr	r3, [r7, #8]
 4668 0128 92FBF3F3 		sdiv	r3, r2, r3
 4669 012c 1846     		mov	r0, r3
 4670 012e FFF7FEFF 		bl	__aeabi_i2d
 4671 0132 0446     		mov	r4, r0
 4672 0134 0D46     		mov	r5, r1
 4673 0136 BB68     		ldr	r3, [r7, #8]
 4674 0138 002B     		cmp	r3, #0
 4675 013a B8BF     		it	lt
 4676 013c 5B42     		rsblt	r3, r3, #0
 4677 013e 1846     		mov	r0, r3
 4678 0140 FFF7FEFF 		bl	__aeabi_i2d
 4679 0144 0246     		mov	r2, r0
 4680 0146 0B46     		mov	r3, r1
 4681 0148 1046     		mov	r0, r2
 4682 014a 1946     		mov	r1, r3
 4683 014c FFF7FEFF 		bl	sqrt
 4684 0150 0246     		mov	r2, r0
 4685 0152 0B46     		mov	r3, r1
 4686 0154 2046     		mov	r0, r4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 103


 4687 0156 2946     		mov	r1, r5
 4688 0158 FFF7FEFF 		bl	__aeabi_dmul
 4689 015c 0246     		mov	r2, r0
 4690 015e 0B46     		mov	r3, r1
 4691 0160 1046     		mov	r0, r2
 4692 0162 1946     		mov	r1, r3
 4693 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4694 0168 0346     		mov	r3, r0
 4695 016a 7B60     		str	r3, [r7, #4]
1050:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4696              		.loc 1 1050 0
 4697 016c 2F4B     		ldr	r3, .L252+28
 4698 016e 1B88     		ldrh	r3, [r3]
 4699 0170 1BB2     		sxth	r3, r3
 4700 0172 1846     		mov	r0, r3
 4701 0174 FFF7FEFF 		bl	__aeabi_i2d
 4702 0178 0446     		mov	r4, r0
 4703 017a 0D46     		mov	r5, r1
 4704 017c 7868     		ldr	r0, [r7, #4]
 4705 017e FFF7FEFF 		bl	__aeabi_i2d
 4706 0182 0246     		mov	r2, r0
 4707 0184 0B46     		mov	r3, r1
 4708 0186 1046     		mov	r0, r2
 4709 0188 1946     		mov	r1, r3
 4710 018a D7E90423 		ldrd	r2, [r7, #16]
 4711 018e FFF7FEFF 		bl	__aeabi_dmul
 4712 0192 0246     		mov	r2, r0
 4713 0194 0B46     		mov	r3, r1
 4714 0196 2046     		mov	r0, r4
 4715 0198 2946     		mov	r1, r5
 4716 019a FFF7FEFF 		bl	__aeabi_dadd
 4717 019e 0246     		mov	r2, r0
 4718 01a0 0B46     		mov	r3, r1
 4719 01a2 1046     		mov	r0, r2
 4720 01a4 1946     		mov	r1, r3
 4721 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4722 01aa 0346     		mov	r3, r0
 4723 01ac 9AB2     		uxth	r2, r3
 4724 01ae 1F4B     		ldr	r3, .L252+28
 4725 01b0 1A80     		strh	r2, [r3]	@ movhi
1051:.\main.c      ****     
1052:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4726              		.loc 1 1052 0
 4727 01b2 1E4B     		ldr	r3, .L252+28
 4728 01b4 1B88     		ldrh	r3, [r3]
 4729 01b6 1BB2     		sxth	r3, r3
 4730 01b8 002B     		cmp	r3, #0
 4731 01ba 02DA     		bge	.L248
 4732              		.loc 1 1052 0 is_stmt 0 discriminator 1
 4733 01bc 1B4B     		ldr	r3, .L252+28
 4734 01be 0022     		movs	r2, #0
 4735 01c0 1A80     		strh	r2, [r3]	@ movhi
 4736              	.L248:
1053:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4737              		.loc 1 1053 0 is_stmt 1
 4738 01c2 184B     		ldr	r3, .L252+20
 4739 01c4 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 104


 4740 01c6 1BB2     		sxth	r3, r3
 4741 01c8 002B     		cmp	r3, #0
 4742 01ca 02DA     		bge	.L249
 4743              		.loc 1 1053 0 is_stmt 0 discriminator 1
 4744 01cc 154B     		ldr	r3, .L252+20
 4745 01ce 0022     		movs	r2, #0
 4746 01d0 1A80     		strh	r2, [r3]	@ movhi
 4747              	.L249:
1054:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4748              		.loc 1 1054 0 is_stmt 1
 4749 01d2 164B     		ldr	r3, .L252+28
 4750 01d4 1B88     		ldrh	r3, [r3]
 4751 01d6 1BB2     		sxth	r3, r3
 4752 01d8 642B     		cmp	r3, #100
 4753 01da 02DD     		ble	.L250
 4754              		.loc 1 1054 0 is_stmt 0 discriminator 1
 4755 01dc 134B     		ldr	r3, .L252+28
 4756 01de 6422     		movs	r2, #100
 4757 01e0 1A80     		strh	r2, [r3]	@ movhi
 4758              	.L250:
1055:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4759              		.loc 1 1055 0 is_stmt 1
 4760 01e2 104B     		ldr	r3, .L252+20
 4761 01e4 1B88     		ldrh	r3, [r3]
 4762 01e6 1BB2     		sxth	r3, r3
 4763 01e8 642B     		cmp	r3, #100
 4764 01ea 02DD     		ble	.L251
 4765              		.loc 1 1055 0 is_stmt 0 discriminator 1
 4766 01ec 0D4B     		ldr	r3, .L252+20
 4767 01ee 6422     		movs	r2, #100
 4768 01f0 1A80     		strh	r2, [r3]	@ movhi
 4769              	.L251:
1056:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4770              		.loc 1 1056 0 is_stmt 1
 4771 01f2 0C4B     		ldr	r3, .L252+20
 4772 01f4 1B88     		ldrh	r3, [r3]
 4773 01f6 DBB2     		uxtb	r3, r3
 4774 01f8 1846     		mov	r0, r3
 4775 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
1057:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4776              		.loc 1 1057 0
 4777 01fe 0B4B     		ldr	r3, .L252+28
 4778 0200 1B88     		ldrh	r3, [r3]
 4779 0202 DBB2     		uxtb	r3, r3
 4780 0204 1846     		mov	r0, r3
 4781 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
 4782              	.L244:
1058:.\main.c      **** }
 4783              		.loc 1 1058 0
 4784 020a 2037     		adds	r7, r7, #32
 4785              		.cfi_def_cfa_offset 16
 4786 020c BD46     		mov	sp, r7
 4787              		.cfi_def_cfa_register 13
 4788              		@ sp needed
 4789 020e B0BD     		pop	{r4, r5, r7, pc}
 4790              	.L253:
 4791              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 105


 4792              	.L252:
 4793 0210 00000000 		.word	flag_calc_wheelspeed
 4794 0214 00000000 		.word	quad_diff1
 4795 0218 00000000 		.word	quad_diff2
 4796 021c 0000F03F 		.word	1072693248
 4797 0220 00000000 		.word	leftSpeedLimit
 4798 0224 00000000 		.word	left_duty_cycle
 4799 0228 00000000 		.word	rightSpeedLimit
 4800 022c 00000000 		.word	right_duty_cycle
 4801              		.cfi_endproc
 4802              	.LFE96:
 4803              		.size	Quad_Dec_response, .-Quad_Dec_response
 4804              		.section	.text.trackLine,"ax",%progbits
 4805              		.align	2
 4806              		.global	trackLine
 4807              		.thumb
 4808              		.thumb_func
 4809              		.type	trackLine, %function
 4810              	trackLine:
 4811              	.LFB97:
1059:.\main.c      **** 
1060:.\main.c      **** void trackLine()
1061:.\main.c      **** {
 4812              		.loc 1 1061 0
 4813              		.cfi_startproc
 4814              		@ args = 0, pretend = 0, frame = 0
 4815              		@ frame_needed = 1, uses_anonymous_args = 0
 4816              		@ link register save eliminated.
 4817 0000 80B4     		push	{r7}
 4818              		.cfi_def_cfa_offset 4
 4819              		.cfi_offset 7, -4
 4820 0002 00AF     		add	r7, sp, #0
 4821              		.cfi_def_cfa_register 7
1062:.\main.c      ****  //removed from implementation
1063:.\main.c      **** }
 4822              		.loc 1 1063 0
 4823 0004 BD46     		mov	sp, r7
 4824              		.cfi_def_cfa_register 13
 4825              		@ sp needed
 4826 0006 5DF8047B 		ldr	r7, [sp], #4
 4827              		.cfi_restore 7
 4828              		.cfi_def_cfa_offset 0
 4829 000a 7047     		bx	lr
 4830              		.cfi_endproc
 4831              	.LFE97:
 4832              		.size	trackLine, .-trackLine
 4833              		.global	leftTurnCount
 4834              		.bss
 4835              		.align	1
 4836              		.type	leftTurnCount, %object
 4837              		.size	leftTurnCount, 2
 4838              	leftTurnCount:
 4839 28e8 0000     		.space	2
 4840              		.global	rightTurnCount
 4841              		.align	1
 4842              		.type	rightTurnCount, %object
 4843              		.size	rightTurnCount, 2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 106


 4844              	rightTurnCount:
 4845 28ea 0000     		.space	2
 4846              		.section	.text.trackLineZ,"ax",%progbits
 4847              		.align	2
 4848              		.global	trackLineZ
 4849              		.thumb
 4850              		.thumb_func
 4851              		.type	trackLineZ, %function
 4852              	trackLineZ:
 4853              	.LFB98:
1064:.\main.c      **** uint16 leftTurnCount = 0;
1065:.\main.c      **** uint16 rightTurnCount = 0;
1066:.\main.c      **** void trackLineZ()
1067:.\main.c      **** {
 4854              		.loc 1 1067 0
 4855              		.cfi_startproc
 4856              		@ args = 0, pretend = 0, frame = 8
 4857              		@ frame_needed = 1, uses_anonymous_args = 0
 4858 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4859              		.cfi_def_cfa_offset 24
 4860              		.cfi_offset 4, -24
 4861              		.cfi_offset 5, -20
 4862              		.cfi_offset 7, -16
 4863              		.cfi_offset 8, -12
 4864              		.cfi_offset 9, -8
 4865              		.cfi_offset 14, -4
 4866 0004 82B0     		sub	sp, sp, #8
 4867              		.cfi_def_cfa_offset 32
 4868 0006 00AF     		add	r7, sp, #0
 4869              		.cfi_def_cfa_register 7
1068:.\main.c      ****     //read the value of the three central-front sensors
1069:.\main.c      ****     
1070:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4870              		.loc 1 1070 0
 4871 0008 FFF7FEFF 		bl	NLSens_out_Read
 4872 000c 0346     		mov	r3, r0
 4873 000e FB71     		strb	r3, [r7, #7]
1071:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4874              		.loc 1 1071 0
 4875 0010 FFF7FEFF 		bl	NRSens_out_Read
 4876 0014 0346     		mov	r3, r0
 4877 0016 BB71     		strb	r3, [r7, #6]
1072:.\main.c      ****     uint8 mid = MSens_out_Read();
 4878              		.loc 1 1072 0
 4879 0018 FFF7FEFF 		bl	MSens_out_Read
 4880 001c 0346     		mov	r3, r0
 4881 001e 7B71     		strb	r3, [r7, #5]
1073:.\main.c      ****     
1074:.\main.c      ****         //if only the left one, hard left
1075:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4882              		.loc 1 1075 0
 4883 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4884 0022 002B     		cmp	r3, #0
 4885 0024 27D0     		beq	.L256
 4886              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4887 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4888 0028 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 107


 4889 002a 24D1     		bne	.L256
 4890              		.loc 1 1075 0 discriminator 2
 4891 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4892 002e 002B     		cmp	r3, #0
 4893 0030 21D1     		bne	.L256
1076:.\main.c      ****     {
1077:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4894              		.loc 1 1077 0 is_stmt 1
 4895 0032 454B     		ldr	r3, .L261+8
 4896 0034 D3E90023 		ldrd	r2, [r3]
 4897 0038 1046     		mov	r0, r2
 4898 003a 1946     		mov	r1, r3
 4899 003c 40A3     		adr	r3, .L261
 4900 003e D3E90023 		ldrd	r2, [r3]
 4901 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4902 0046 0246     		mov	r2, r0
 4903 0048 0B46     		mov	r3, r1
 4904 004a 1446     		mov	r4, r2
 4905 004c 1D46     		mov	r5, r3
 4906 004e 3E4B     		ldr	r3, .L261+8
 4907 0050 D3E90023 		ldrd	r2, [r3]
 4908 0054 9046     		mov	r8, r2
 4909 0056 83F00049 		eor	r9, r3, #-2147483648
 4910 005a 4046     		mov	r0, r8
 4911 005c 4946     		mov	r1, r9
 4912 005e 38A3     		adr	r3, .L261
 4913 0060 D3E90023 		ldrd	r2, [r3]
 4914 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4915 0068 0246     		mov	r2, r0
 4916 006a 0B46     		mov	r3, r1
 4917 006c 2046     		mov	r0, r4
 4918 006e 2946     		mov	r1, r5
 4919 0070 FFF7FEFF 		bl	setSpeed
 4920 0074 5FE0     		b	.L255
 4921              	.L256:
1078:.\main.c      ****     }
1079:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4922              		.loc 1 1079 0
 4923 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4924 0078 002B     		cmp	r3, #0
 4925 007a 0ED0     		beq	.L258
 4926              		.loc 1 1079 0 is_stmt 0 discriminator 1
 4927 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4928 007e 002B     		cmp	r3, #0
 4929 0080 0BD0     		beq	.L258
 4930              		.loc 1 1079 0 discriminator 2
 4931 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4932 0084 002B     		cmp	r3, #0
 4933 0086 08D1     		bne	.L258
1080:.\main.c      ****     {
1081:.\main.c      ****         setSpeed(speed,speed);
 4934              		.loc 1 1081 0 is_stmt 1
 4935 0088 2F4B     		ldr	r3, .L261+8
 4936 008a D3E90001 		ldrd	r0, [r3]
 4937 008e 2E4B     		ldr	r3, .L261+8
 4938 0090 D3E90023 		ldrd	r2, [r3]
 4939 0094 FFF7FEFF 		bl	setSpeed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 108


 4940 0098 4DE0     		b	.L255
 4941              	.L258:
1082:.\main.c      ****     }
1083:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4942              		.loc 1 1083 0
 4943 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4944 009c 002B     		cmp	r3, #0
 4945 009e 0ED0     		beq	.L259
 4946              		.loc 1 1083 0 is_stmt 0 discriminator 1
 4947 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4948 00a2 002B     		cmp	r3, #0
 4949 00a4 0BD0     		beq	.L259
 4950              		.loc 1 1083 0 discriminator 2
 4951 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4952 00a8 002B     		cmp	r3, #0
 4953 00aa 08D1     		bne	.L259
1084:.\main.c      ****     {
1085:.\main.c      ****         setSpeed(speed ,speed);
 4954              		.loc 1 1085 0 is_stmt 1
 4955 00ac 264B     		ldr	r3, .L261+8
 4956 00ae D3E90001 		ldrd	r0, [r3]
 4957 00b2 254B     		ldr	r3, .L261+8
 4958 00b4 D3E90023 		ldrd	r2, [r3]
 4959 00b8 FFF7FEFF 		bl	setSpeed
 4960 00bc 3BE0     		b	.L255
 4961              	.L259:
1086:.\main.c      ****     }
1087:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4962              		.loc 1 1087 0
 4963 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4964 00c0 002B     		cmp	r3, #0
 4965 00c2 27D0     		beq	.L260
 4966              		.loc 1 1087 0 is_stmt 0 discriminator 1
 4967 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4968 00c6 002B     		cmp	r3, #0
 4969 00c8 24D1     		bne	.L260
 4970              		.loc 1 1087 0 discriminator 2
 4971 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4972 00cc 002B     		cmp	r3, #0
 4973 00ce 21D1     		bne	.L260
1088:.\main.c      ****     {
1089:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4974              		.loc 1 1089 0 is_stmt 1
 4975 00d0 1D4B     		ldr	r3, .L261+8
 4976 00d2 D3E90023 		ldrd	r2, [r3]
 4977 00d6 1446     		mov	r4, r2
 4978 00d8 83F00045 		eor	r5, r3, #-2147483648
 4979 00dc 2046     		mov	r0, r4
 4980 00de 2946     		mov	r1, r5
 4981 00e0 17A3     		adr	r3, .L261
 4982 00e2 D3E90023 		ldrd	r2, [r3]
 4983 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4984 00ea 0246     		mov	r2, r0
 4985 00ec 0B46     		mov	r3, r1
 4986 00ee 1446     		mov	r4, r2
 4987 00f0 1D46     		mov	r5, r3
 4988 00f2 154B     		ldr	r3, .L261+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 109


 4989 00f4 D3E90023 		ldrd	r2, [r3]
 4990 00f8 1046     		mov	r0, r2
 4991 00fa 1946     		mov	r1, r3
 4992 00fc 10A3     		adr	r3, .L261
 4993 00fe D3E90023 		ldrd	r2, [r3]
 4994 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4995 0106 0246     		mov	r2, r0
 4996 0108 0B46     		mov	r3, r1
 4997 010a 2046     		mov	r0, r4
 4998 010c 2946     		mov	r1, r5
 4999 010e FFF7FEFF 		bl	setSpeed
 5000 0112 10E0     		b	.L255
 5001              	.L260:
1090:.\main.c      ****     }
1091:.\main.c      ****     else if (mid && !nr && !nl)
 5002              		.loc 1 1091 0
 5003 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5004 0116 002B     		cmp	r3, #0
 5005 0118 0DD0     		beq	.L255
 5006              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5007 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5008 011c 002B     		cmp	r3, #0
 5009 011e 0AD1     		bne	.L255
 5010              		.loc 1 1091 0 discriminator 2
 5011 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5012 0122 002B     		cmp	r3, #0
 5013 0124 07D1     		bne	.L255
1092:.\main.c      ****     {
1093:.\main.c      ****         setSpeed(speed,speed);
 5014              		.loc 1 1093 0 is_stmt 1
 5015 0126 084B     		ldr	r3, .L261+8
 5016 0128 D3E90001 		ldrd	r0, [r3]
 5017 012c 064B     		ldr	r3, .L261+8
 5018 012e D3E90023 		ldrd	r2, [r3]
 5019 0132 FFF7FEFF 		bl	setSpeed
 5020              	.L255:
1094:.\main.c      ****     }
1095:.\main.c      **** }
 5021              		.loc 1 1095 0
 5022 0136 0837     		adds	r7, r7, #8
 5023              		.cfi_def_cfa_offset 24
 5024 0138 BD46     		mov	sp, r7
 5025              		.cfi_def_cfa_register 13
 5026              		@ sp needed
 5027 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 5028              	.L262:
 5029 013e 00BF     		.align	3
 5030              	.L261:
 5031 0140 9A999999 		.word	-1717986918
 5032 0144 9999F93F 		.word	1073322393
 5033 0148 00000000 		.word	speed
 5034              		.cfi_endproc
 5035              	.LFE98:
 5036              		.size	trackLineZ, .-trackLineZ
 5037 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 5038              		.align	2
 5039              		.global	trackLineU
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 110


 5040              		.thumb
 5041              		.thumb_func
 5042              		.type	trackLineU, %function
 5043              	trackLineU:
 5044              	.LFB99:
1096:.\main.c      **** 
1097:.\main.c      **** 
1098:.\main.c      **** void trackLineU()
1099:.\main.c      **** { 
 5045              		.loc 1 1099 0
 5046              		.cfi_startproc
 5047              		@ args = 0, pretend = 0, frame = 0
 5048              		@ frame_needed = 1, uses_anonymous_args = 0
 5049              		@ link register save eliminated.
 5050 0000 80B4     		push	{r7}
 5051              		.cfi_def_cfa_offset 4
 5052              		.cfi_offset 7, -4
 5053 0002 00AF     		add	r7, sp, #0
 5054              		.cfi_def_cfa_register 7
1100:.\main.c      **** //removed from final implementation
1101:.\main.c      **** }
 5055              		.loc 1 1101 0
 5056 0004 BD46     		mov	sp, r7
 5057              		.cfi_def_cfa_register 13
 5058              		@ sp needed
 5059 0006 5DF8047B 		ldr	r7, [sp], #4
 5060              		.cfi_restore 7
 5061              		.cfi_def_cfa_offset 0
 5062 000a 7047     		bx	lr
 5063              		.cfi_endproc
 5064              	.LFE99:
 5065              		.size	trackLineU, .-trackLineU
 5066              		.global	__aeabi_fadd
 5067              		.section	.rodata
 5068 0103 00       		.align	2
 5069              	.LC14:
 5070 0104 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 5070      65727920 
 5070      566F6C74 
 5070      6167653A 
 5070      2025646D 
 5071              		.section	.text.print_ADC,"ax",%progbits
 5072              		.align	2
 5073              		.global	print_ADC
 5074              		.thumb
 5075              		.thumb_func
 5076              		.type	print_ADC, %function
 5077              	print_ADC:
 5078              	.LFB100:
1102:.\main.c      **** 
1103:.\main.c      **** void print_ADC()
1104:.\main.c      **** {
 5079              		.loc 1 1104 0
 5080              		.cfi_startproc
 5081              		@ args = 0, pretend = 0, frame = 24
 5082              		@ frame_needed = 1, uses_anonymous_args = 0
 5083 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 111


 5084              		.cfi_def_cfa_offset 8
 5085              		.cfi_offset 7, -8
 5086              		.cfi_offset 14, -4
 5087 0002 86B0     		sub	sp, sp, #24
 5088              		.cfi_def_cfa_offset 32
 5089 0004 00AF     		add	r7, sp, #0
 5090              		.cfi_def_cfa_register 7
1105:.\main.c      ****    //usbPutString("HII\n");
1106:.\main.c      ****     if(flag_receive_ADC == 1)
 5091              		.loc 1 1106 0
 5092 0006 274B     		ldr	r3, .L267
 5093 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5094 000a 012B     		cmp	r3, #1
 5095 000c 46D1     		bne	.L264
 5096              	.LBB12:
1107:.\main.c      ****     {
1108:.\main.c      ****         //usbPutString("AAA\r\n");
1109:.\main.c      ****         flag_receive_ADC = 0;
 5097              		.loc 1 1109 0
 5098 000e 254B     		ldr	r3, .L267
 5099 0010 0022     		movs	r2, #0
 5100 0012 1A70     		strb	r2, [r3]
1110:.\main.c      ****         
1111:.\main.c      ****        // int8 channel = ADC_
1112:.\main.c      ****         float scalingFactor = 0.972;
 5101              		.loc 1 1112 0
 5102 0014 244B     		ldr	r3, .L267+4
 5103 0016 7B61     		str	r3, [r7, #20]	@ float
1113:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 5104              		.loc 1 1113 0
 5105 0018 244B     		ldr	r3, .L267+8
 5106 001a 1B88     		ldrh	r3, [r3]
 5107 001c 1BB2     		sxth	r3, r3
 5108 001e 41F28832 		movw	r2, #5000
 5109 0022 02FB03F3 		mul	r3, r2, r3
 5110 0026 002B     		cmp	r3, #0
 5111 0028 01DA     		bge	.L266
 5112 002a 03F6FF73 		addw	r3, r3, #4095
 5113              	.L266:
 5114 002e 1B13     		asrs	r3, r3, #12
 5115 0030 1846     		mov	r0, r3
 5116 0032 FFF7FEFF 		bl	__aeabi_i2f
 5117 0036 0346     		mov	r3, r0
 5118 0038 1846     		mov	r0, r3
 5119 003a 7969     		ldr	r1, [r7, #20]	@ float
 5120 003c FFF7FEFF 		bl	__aeabi_fmul
 5121 0040 0346     		mov	r3, r0
 5122 0042 1846     		mov	r0, r3
 5123 0044 1946     		mov	r1, r3
 5124 0046 FFF7FEFF 		bl	__aeabi_fadd
 5125 004a 0346     		mov	r3, r0
 5126 004c 1846     		mov	r0, r3
 5127 004e FFF7FEFF 		bl	__aeabi_f2iz
 5128 0052 0346     		mov	r3, r0
 5129 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1114:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 5130              		.loc 1 1114 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 112


 5131 0056 B7F91220 		ldrsh	r2, [r7, #18]
 5132 005a 154B     		ldr	r3, .L267+12
 5133 005c 1B88     		ldrh	r3, [r3]
 5134 005e 1BB2     		sxth	r3, r3
 5135 0060 1A44     		add	r2, r2, r3
 5136 0062 144B     		ldr	r3, .L267+16
 5137 0064 1B88     		ldrh	r3, [r3]
 5138 0066 1BB2     		sxth	r3, r3
 5139 0068 1344     		add	r3, r3, r2
 5140 006a 134A     		ldr	r2, .L267+20
 5141 006c 82FB0312 		smull	r1, r2, r2, r3
 5142 0070 DB17     		asrs	r3, r3, #31
 5143 0072 D31A     		subs	r3, r2, r3
 5144 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1115:.\main.c      ****         prevVoltage2 = prevVoltage;
 5145              		.loc 1 1115 0
 5146 0076 0E4B     		ldr	r3, .L267+12
 5147 0078 1A88     		ldrh	r2, [r3]
 5148 007a 0E4B     		ldr	r3, .L267+16
 5149 007c 1A80     		strh	r2, [r3]	@ movhi
1116:.\main.c      ****         prevVoltage = converted_val;
 5150              		.loc 1 1116 0
 5151 007e 0C4A     		ldr	r2, .L267+12
 5152 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5153 0082 1380     		strh	r3, [r2]	@ movhi
1117:.\main.c      ****         
1118:.\main.c      ****         char result_str[16];
1119:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 5154              		.loc 1 1119 0
 5155 0084 B7F91230 		ldrsh	r3, [r7, #18]
 5156 0088 3A46     		mov	r2, r7
 5157 008a 1046     		mov	r0, r2
 5158 008c 0B49     		ldr	r1, .L267+24
 5159 008e 1A46     		mov	r2, r3
 5160 0090 FFF7FEFF 		bl	sprintf
1120:.\main.c      ****         
1121:.\main.c      ****         usbPutString(result_str);
 5161              		.loc 1 1121 0
 5162 0094 3B46     		mov	r3, r7
 5163 0096 1846     		mov	r0, r3
 5164 0098 FFF7FEFF 		bl	usbPutString
 5165              	.L264:
 5166              	.LBE12:
1122:.\main.c      ****     }
1123:.\main.c      **** }
 5167              		.loc 1 1123 0
 5168 009c 1837     		adds	r7, r7, #24
 5169              		.cfi_def_cfa_offset 8
 5170 009e BD46     		mov	sp, r7
 5171              		.cfi_def_cfa_register 13
 5172              		@ sp needed
 5173 00a0 80BD     		pop	{r7, pc}
 5174              	.L268:
 5175 00a2 00BF     		.align	2
 5176              	.L267:
 5177 00a4 00000000 		.word	flag_receive_ADC
 5178 00a8 FED4783F 		.word	1064883454
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 113


 5179 00ac 00000000 		.word	adc_result
 5180 00b0 00000000 		.word	prevVoltage
 5181 00b4 00000000 		.word	prevVoltage2
 5182 00b8 56555555 		.word	1431655766
 5183 00bc 04010000 		.word	.LC14
 5184              		.cfi_endproc
 5185              	.LFE100:
 5186              		.size	print_ADC, .-print_ADC
 5187              		.section	.rodata
 5188              		.align	2
 5189              	.LC15:
 5190 011c 52535349 		.ascii	"RSSI:\000"
 5190      3A00
 5191 0122 0000     		.align	2
 5192              	.LC16:
 5193 0124 25640D0A 		.ascii	"%d\015\012\000"
 5193      00
 5194 0129 000000   		.align	2
 5195              	.LC17:
 5196 012c 726F626F 		.ascii	"robot_x:\000"
 5196      745F783A 
 5196      00
 5197 0135 000000   		.align	2
 5198              	.LC18:
 5199 0138 726F626F 		.ascii	"robot_y:\000"
 5199      745F793A 
 5199      00
 5200 0141 000000   		.align	2
 5201              	.LC19:
 5202 0144 726F626F 		.ascii	"robot_dir:\000"
 5202      745F6469 
 5202      723A00
 5203 014f 00       		.section	.text.print_RF,"ax",%progbits
 5204              		.align	2
 5205              		.global	print_RF
 5206              		.thumb
 5207              		.thumb_func
 5208              		.type	print_RF, %function
 5209              	print_RF:
 5210              	.LFB101:
1124:.\main.c      **** 
1125:.\main.c      **** void print_RF()
1126:.\main.c      **** {
 5211              		.loc 1 1126 0
 5212              		.cfi_startproc
 5213              		@ args = 0, pretend = 0, frame = 16
 5214              		@ frame_needed = 1, uses_anonymous_args = 0
 5215 0000 80B5     		push	{r7, lr}
 5216              		.cfi_def_cfa_offset 8
 5217              		.cfi_offset 7, -8
 5218              		.cfi_offset 14, -4
 5219 0002 84B0     		sub	sp, sp, #16
 5220              		.cfi_def_cfa_offset 24
 5221 0004 00AF     		add	r7, sp, #0
 5222              		.cfi_def_cfa_register 7
1127:.\main.c      ****     if(flag_print_rf == 1)
 5223              		.loc 1 1127 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 114


 5224 0006 254B     		ldr	r3, .L271
 5225 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5226 000a 012B     		cmp	r3, #1
 5227 000c 42D1     		bne	.L269
 5228              	.LBB13:
1128:.\main.c      ****     {
1129:.\main.c      ****         char printString[16];
1130:.\main.c      ****         flag_print_rf = 0;
 5229              		.loc 1 1130 0
 5230 000e 234B     		ldr	r3, .L271
 5231 0010 0022     		movs	r2, #0
 5232 0012 1A70     		strb	r2, [r3]
1131:.\main.c      ****         usbPutString("RSSI:");
 5233              		.loc 1 1131 0
 5234 0014 2248     		ldr	r0, .L271+4
 5235 0016 FFF7FEFF 		bl	usbPutString
1132:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 5236              		.loc 1 1132 0
 5237 001a 224B     		ldr	r3, .L271+8
 5238 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5239 001e 5BB2     		sxtb	r3, r3
 5240 0020 3A46     		mov	r2, r7
 5241 0022 1046     		mov	r0, r2
 5242 0024 2049     		ldr	r1, .L271+12
 5243 0026 1A46     		mov	r2, r3
 5244 0028 FFF7FEFF 		bl	sprintf
1133:.\main.c      ****         usbPutString(printString);
 5245              		.loc 1 1133 0
 5246 002c 3B46     		mov	r3, r7
 5247 002e 1846     		mov	r0, r3
 5248 0030 FFF7FEFF 		bl	usbPutString
1134:.\main.c      ****         usbPutString("robot_x:");
 5249              		.loc 1 1134 0
 5250 0034 1D48     		ldr	r0, .L271+16
 5251 0036 FFF7FEFF 		bl	usbPutString
1135:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 5252              		.loc 1 1135 0
 5253 003a 1A4B     		ldr	r3, .L271+8
 5254 003c 5B88     		ldrh	r3, [r3, #2]
 5255 003e 1BB2     		sxth	r3, r3
 5256 0040 3A46     		mov	r2, r7
 5257 0042 1046     		mov	r0, r2
 5258 0044 1849     		ldr	r1, .L271+12
 5259 0046 1A46     		mov	r2, r3
 5260 0048 FFF7FEFF 		bl	sprintf
1136:.\main.c      ****         usbPutString(printString);
 5261              		.loc 1 1136 0
 5262 004c 3B46     		mov	r3, r7
 5263 004e 1846     		mov	r0, r3
 5264 0050 FFF7FEFF 		bl	usbPutString
1137:.\main.c      ****         usbPutString("robot_y:");
 5265              		.loc 1 1137 0
 5266 0054 1648     		ldr	r0, .L271+20
 5267 0056 FFF7FEFF 		bl	usbPutString
1138:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 5268              		.loc 1 1138 0
 5269 005a 124B     		ldr	r3, .L271+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 115


 5270 005c 9B88     		ldrh	r3, [r3, #4]
 5271 005e 1BB2     		sxth	r3, r3
 5272 0060 3A46     		mov	r2, r7
 5273 0062 1046     		mov	r0, r2
 5274 0064 1049     		ldr	r1, .L271+12
 5275 0066 1A46     		mov	r2, r3
 5276 0068 FFF7FEFF 		bl	sprintf
1139:.\main.c      ****         usbPutString(printString);
 5277              		.loc 1 1139 0
 5278 006c 3B46     		mov	r3, r7
 5279 006e 1846     		mov	r0, r3
 5280 0070 FFF7FEFF 		bl	usbPutString
1140:.\main.c      ****         usbPutString("robot_dir:");
 5281              		.loc 1 1140 0
 5282 0074 0F48     		ldr	r0, .L271+24
 5283 0076 FFF7FEFF 		bl	usbPutString
1141:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 5284              		.loc 1 1141 0
 5285 007a 0A4B     		ldr	r3, .L271+8
 5286 007c DB88     		ldrh	r3, [r3, #6]
 5287 007e 1BB2     		sxth	r3, r3
 5288 0080 3A46     		mov	r2, r7
 5289 0082 1046     		mov	r0, r2
 5290 0084 0849     		ldr	r1, .L271+12
 5291 0086 1A46     		mov	r2, r3
 5292 0088 FFF7FEFF 		bl	sprintf
1142:.\main.c      ****         usbPutString(printString);
 5293              		.loc 1 1142 0
 5294 008c 3B46     		mov	r3, r7
 5295 008e 1846     		mov	r0, r3
 5296 0090 FFF7FEFF 		bl	usbPutString
 5297              	.L269:
 5298              	.LBE13:
1143:.\main.c      ****     }
1144:.\main.c      **** }
 5299              		.loc 1 1144 0
 5300 0094 1037     		adds	r7, r7, #16
 5301              		.cfi_def_cfa_offset 8
 5302 0096 BD46     		mov	sp, r7
 5303              		.cfi_def_cfa_register 13
 5304              		@ sp needed
 5305 0098 80BD     		pop	{r7, pc}
 5306              	.L272:
 5307 009a 00BF     		.align	2
 5308              	.L271:
 5309 009c 00000000 		.word	flag_print_rf
 5310 00a0 1C010000 		.word	.LC15
 5311 00a4 00000000 		.word	system_state
 5312 00a8 24010000 		.word	.LC16
 5313 00ac 2C010000 		.word	.LC17
 5314 00b0 38010000 		.word	.LC18
 5315 00b4 44010000 		.word	.LC19
 5316              		.cfi_endproc
 5317              	.LFE101:
 5318              		.size	print_RF, .-print_RF
 5319              		.section	.text.readFrontSensors,"ax",%progbits
 5320              		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 116


 5321              		.global	readFrontSensors
 5322              		.thumb
 5323              		.thumb_func
 5324              		.type	readFrontSensors, %function
 5325              	readFrontSensors:
 5326              	.LFB102:
1145:.\main.c      **** 
1146:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1147:.\main.c      **** {
 5327              		.loc 1 1147 0
 5328              		.cfi_startproc
 5329              		@ args = 0, pretend = 0, frame = 8
 5330              		@ frame_needed = 1, uses_anonymous_args = 0
 5331 0000 90B5     		push	{r4, r7, lr}
 5332              		.cfi_def_cfa_offset 12
 5333              		.cfi_offset 4, -12
 5334              		.cfi_offset 7, -8
 5335              		.cfi_offset 14, -4
 5336 0002 83B0     		sub	sp, sp, #12
 5337              		.cfi_def_cfa_offset 24
 5338 0004 00AF     		add	r7, sp, #0
 5339              		.cfi_def_cfa_register 7
 5340 0006 7860     		str	r0, [r7, #4]
1148:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 5341              		.loc 1 1148 0
 5342 0008 FFF7FEFF 		bl	FLSens_out_Read
 5343 000c 0346     		mov	r3, r0
 5344 000e 1A46     		mov	r2, r3
 5345 0010 7B68     		ldr	r3, [r7, #4]
 5346 0012 1A70     		strb	r2, [r3]
1149:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 5347              		.loc 1 1149 0
 5348 0014 7B68     		ldr	r3, [r7, #4]
 5349 0016 5C1C     		adds	r4, r3, #1
 5350 0018 FFF7FEFF 		bl	NLSens_out_Read
 5351 001c 0346     		mov	r3, r0
 5352 001e 2370     		strb	r3, [r4]
1150:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 5353              		.loc 1 1150 0
 5354 0020 7B68     		ldr	r3, [r7, #4]
 5355 0022 9C1C     		adds	r4, r3, #2
 5356 0024 FFF7FEFF 		bl	MSens_out_Read
 5357 0028 0346     		mov	r3, r0
 5358 002a 2370     		strb	r3, [r4]
1151:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 5359              		.loc 1 1151 0
 5360 002c 7B68     		ldr	r3, [r7, #4]
 5361 002e DC1C     		adds	r4, r3, #3
 5362 0030 FFF7FEFF 		bl	NRSens_out_Read
 5363 0034 0346     		mov	r3, r0
 5364 0036 2370     		strb	r3, [r4]
1152:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5365              		.loc 1 1152 0
 5366 0038 7B68     		ldr	r3, [r7, #4]
 5367 003a 1C1D     		adds	r4, r3, #4
 5368 003c FFF7FEFF 		bl	FRSens_out_Read
 5369 0040 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 117


 5370 0042 2370     		strb	r3, [r4]
1153:.\main.c      **** }
 5371              		.loc 1 1153 0
 5372 0044 0C37     		adds	r7, r7, #12
 5373              		.cfi_def_cfa_offset 12
 5374 0046 BD46     		mov	sp, r7
 5375              		.cfi_def_cfa_register 13
 5376              		@ sp needed
 5377 0048 90BD     		pop	{r4, r7, pc}
 5378              		.cfi_endproc
 5379              	.LFE102:
 5380              		.size	readFrontSensors, .-readFrontSensors
 5381 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5382              		.align	2
 5383              		.global	usbPutString
 5384              		.thumb
 5385              		.thumb_func
 5386              		.type	usbPutString, %function
 5387              	usbPutString:
 5388              	.LFB103:
1154:.\main.c      **** 
1155:.\main.c      **** 
1156:.\main.c      **** //* ========================================
1157:.\main.c      **** void usbPutString(char *s)
1158:.\main.c      **** {
 5389              		.loc 1 1158 0
 5390              		.cfi_startproc
 5391              		@ args = 0, pretend = 0, frame = 16
 5392              		@ frame_needed = 1, uses_anonymous_args = 0
 5393 0000 80B5     		push	{r7, lr}
 5394              		.cfi_def_cfa_offset 8
 5395              		.cfi_offset 7, -8
 5396              		.cfi_offset 14, -4
 5397 0002 84B0     		sub	sp, sp, #16
 5398              		.cfi_def_cfa_offset 24
 5399 0004 00AF     		add	r7, sp, #0
 5400              		.cfi_def_cfa_register 7
 5401 0006 7860     		str	r0, [r7, #4]
1159:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1160:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1161:.\main.c      **** //  length to 62 char (63rd char is a '!')
1162:.\main.c      ****     if (USE_USB && portOpen)
 5402              		.loc 1 1162 0
 5403 0008 154B     		ldr	r3, .L278
 5404 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5405 000c 002B     		cmp	r3, #0
 5406 000e 23D0     		beq	.L274
 5407              	.LBB14:
1163:.\main.c      ****     {
1164:.\main.c      ****             uint32 cnt = 0;
 5408              		.loc 1 1164 0
 5409 0010 0023     		movs	r3, #0
 5410 0012 FB60     		str	r3, [r7, #12]
1165:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5411              		.loc 1 1165 0
 5412 0014 0AE0     		b	.L276
 5413              	.L277:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 118


1166:.\main.c      ****             {
1167:.\main.c      ****                 cnt++;
 5414              		.loc 1 1167 0
 5415 0016 FB68     		ldr	r3, [r7, #12]
 5416 0018 0133     		adds	r3, r3, #1
 5417 001a FB60     		str	r3, [r7, #12]
1168:.\main.c      ****                 if(cnt == 3000000){
 5418              		.loc 1 1168 0
 5419 001c FB68     		ldr	r3, [r7, #12]
 5420 001e 114A     		ldr	r2, .L278+4
 5421 0020 9342     		cmp	r3, r2
 5422 0022 03D1     		bne	.L276
1169:.\main.c      ****                     portOpen = 0;
 5423              		.loc 1 1169 0
 5424 0024 0E4B     		ldr	r3, .L278
 5425 0026 0022     		movs	r2, #0
 5426 0028 1A70     		strb	r2, [r3]
1170:.\main.c      ****                     return;
 5427              		.loc 1 1170 0
 5428 002a 15E0     		b	.L274
 5429              	.L276:
1165:.\main.c      ****             {
 5430              		.loc 1 1165 0
 5431 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5432 0030 0346     		mov	r3, r0
 5433 0032 002B     		cmp	r3, #0
 5434 0034 EFD0     		beq	.L277
1171:.\main.c      ****                 }
1172:.\main.c      ****             }
1173:.\main.c      ****             s[63]='\0';
 5435              		.loc 1 1173 0
 5436 0036 7B68     		ldr	r3, [r7, #4]
 5437 0038 3F33     		adds	r3, r3, #63
 5438 003a 0022     		movs	r2, #0
 5439 003c 1A70     		strb	r2, [r3]
1174:.\main.c      ****             s[62]='!';
 5440              		.loc 1 1174 0
 5441 003e 7B68     		ldr	r3, [r7, #4]
 5442 0040 3E33     		adds	r3, r3, #62
 5443 0042 2122     		movs	r2, #33
 5444 0044 1A70     		strb	r2, [r3]
1175:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5445              		.loc 1 1175 0
 5446 0046 7868     		ldr	r0, [r7, #4]
 5447 0048 FFF7FEFF 		bl	strlen
 5448 004c 0346     		mov	r3, r0
 5449 004e 9BB2     		uxth	r3, r3
 5450 0050 7868     		ldr	r0, [r7, #4]
 5451 0052 1946     		mov	r1, r3
 5452 0054 FFF7FEFF 		bl	USBUART_PutData
 5453              	.L274:
 5454              	.LBE14:
1176:.\main.c      ****     }
1177:.\main.c      **** }
 5455              		.loc 1 1177 0
 5456 0058 1037     		adds	r7, r7, #16
 5457              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 119


 5458 005a BD46     		mov	sp, r7
 5459              		.cfi_def_cfa_register 13
 5460              		@ sp needed
 5461 005c 80BD     		pop	{r7, pc}
 5462              	.L279:
 5463 005e 00BF     		.align	2
 5464              	.L278:
 5465 0060 00000000 		.word	portOpen
 5466 0064 C0C62D00 		.word	3000000
 5467              		.cfi_endproc
 5468              	.LFE103:
 5469              		.size	usbPutString, .-usbPutString
 5470              		.section	.text.usbPutChar,"ax",%progbits
 5471              		.align	2
 5472              		.global	usbPutChar
 5473              		.thumb
 5474              		.thumb_func
 5475              		.type	usbPutChar, %function
 5476              	usbPutChar:
 5477              	.LFB104:
1178:.\main.c      **** //* ========================================
1179:.\main.c      **** void usbPutChar(char c)
1180:.\main.c      **** {
 5478              		.loc 1 1180 0
 5479              		.cfi_startproc
 5480              		@ args = 0, pretend = 0, frame = 16
 5481              		@ frame_needed = 1, uses_anonymous_args = 0
 5482 0000 80B5     		push	{r7, lr}
 5483              		.cfi_def_cfa_offset 8
 5484              		.cfi_offset 7, -8
 5485              		.cfi_offset 14, -4
 5486 0002 84B0     		sub	sp, sp, #16
 5487              		.cfi_def_cfa_offset 24
 5488 0004 00AF     		add	r7, sp, #0
 5489              		.cfi_def_cfa_register 7
 5490 0006 0346     		mov	r3, r0
 5491 0008 FB71     		strb	r3, [r7, #7]
1181:.\main.c      ****     if (USE_USB && portOpen)    
 5492              		.loc 1 1181 0
 5493 000a 0F4B     		ldr	r3, .L284
 5494 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5495 000e 002B     		cmp	r3, #0
 5496 0010 16D0     		beq	.L280
 5497              	.LBB15:
1182:.\main.c      ****     {    
1183:.\main.c      ****         uint32 cnt = 0;
 5498              		.loc 1 1183 0
 5499 0012 0023     		movs	r3, #0
 5500 0014 FB60     		str	r3, [r7, #12]
1184:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5501              		.loc 1 1184 0
 5502 0016 0AE0     		b	.L282
 5503              	.L283:
1185:.\main.c      ****             cnt++;
 5504              		.loc 1 1185 0
 5505 0018 FB68     		ldr	r3, [r7, #12]
 5506 001a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 120


 5507 001c FB60     		str	r3, [r7, #12]
1186:.\main.c      ****             if(cnt == 3000000){
 5508              		.loc 1 1186 0
 5509 001e FB68     		ldr	r3, [r7, #12]
 5510 0020 0A4A     		ldr	r2, .L284+4
 5511 0022 9342     		cmp	r3, r2
 5512 0024 03D1     		bne	.L282
1187:.\main.c      ****                 portOpen = 0;
 5513              		.loc 1 1187 0
 5514 0026 084B     		ldr	r3, .L284
 5515 0028 0022     		movs	r2, #0
 5516 002a 1A70     		strb	r2, [r3]
1188:.\main.c      ****                 return;
 5517              		.loc 1 1188 0
 5518 002c 08E0     		b	.L280
 5519              	.L282:
1184:.\main.c      ****             cnt++;
 5520              		.loc 1 1184 0
 5521 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5522 0032 0346     		mov	r3, r0
 5523 0034 002B     		cmp	r3, #0
 5524 0036 EFD0     		beq	.L283
1189:.\main.c      ****             }
1190:.\main.c      ****         }
1191:.\main.c      ****         USBUART_PutChar(c);
 5525              		.loc 1 1191 0
 5526 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5527 003a 1846     		mov	r0, r3
 5528 003c FFF7FEFF 		bl	USBUART_PutChar
 5529              	.L280:
 5530              	.LBE15:
1192:.\main.c      ****     }    
1193:.\main.c      **** }
 5531              		.loc 1 1193 0
 5532 0040 1037     		adds	r7, r7, #16
 5533              		.cfi_def_cfa_offset 8
 5534 0042 BD46     		mov	sp, r7
 5535              		.cfi_def_cfa_register 13
 5536              		@ sp needed
 5537 0044 80BD     		pop	{r7, pc}
 5538              	.L285:
 5539 0046 00BF     		.align	2
 5540              	.L284:
 5541 0048 00000000 		.word	portOpen
 5542 004c C0C62D00 		.word	3000000
 5543              		.cfi_endproc
 5544              	.LFE104:
 5545              		.size	usbPutChar, .-usbPutChar
 5546              		.section	.text.uart_set_PWM,"ax",%progbits
 5547              		.align	2
 5548              		.global	uart_set_PWM
 5549              		.thumb
 5550              		.thumb_func
 5551              		.type	uart_set_PWM, %function
 5552              	uart_set_PWM:
 5553              	.LFB105:
1194:.\main.c      **** //* ========================================
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 121


1195:.\main.c      **** 
1196:.\main.c      **** void uart_set_PWM()
1197:.\main.c      **** {
 5554              		.loc 1 1197 0
 5555              		.cfi_startproc
 5556              		@ args = 0, pretend = 0, frame = 0
 5557              		@ frame_needed = 1, uses_anonymous_args = 0
 5558              		@ link register save eliminated.
 5559 0000 80B4     		push	{r7}
 5560              		.cfi_def_cfa_offset 4
 5561              		.cfi_offset 7, -4
 5562 0002 00AF     		add	r7, sp, #0
 5563              		.cfi_def_cfa_register 7
1198:.\main.c      ****     //removed from final implementation
1199:.\main.c      **** }
 5564              		.loc 1 1199 0
 5565 0004 BD46     		mov	sp, r7
 5566              		.cfi_def_cfa_register 13
 5567              		@ sp needed
 5568 0006 5DF8047B 		ldr	r7, [sp], #4
 5569              		.cfi_restore 7
 5570              		.cfi_def_cfa_offset 0
 5571 000a 7047     		bx	lr
 5572              		.cfi_endproc
 5573              	.LFE105:
 5574              		.size	uart_set_PWM, .-uart_set_PWM
 5575              		.text
 5576              	.Letext0:
 5577              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5578              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5579              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5580              		.file 5 ".\\vars.h"
 5581              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5582              		.file 7 ".\\pathfinder.h"
 5583              		.section	.debug_info,"",%progbits
 5584              	.Ldebug_info0:
 5585 0000 A70E0000 		.4byte	0xea7
 5586 0004 0400     		.2byte	0x4
 5587 0006 00000000 		.4byte	.Ldebug_abbrev0
 5588 000a 04       		.byte	0x4
 5589 000b 01       		.uleb128 0x1
 5590 000c 0D050000 		.4byte	.LASF199
 5591 0010 01       		.byte	0x1
 5592 0011 3E090000 		.4byte	.LASF200
 5593 0015 76090000 		.4byte	.LASF201
 5594 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5595 001d 00000000 		.4byte	0
 5596 0021 00000000 		.4byte	.Ldebug_line0
 5597 0025 02       		.uleb128 0x2
 5598 0026 01       		.byte	0x1
 5599 0027 06       		.byte	0x6
 5600 0028 3C010000 		.4byte	.LASF0
 5601 002c 02       		.uleb128 0x2
 5602 002d 01       		.byte	0x1
 5603 002e 08       		.byte	0x8
 5604 002f 75060000 		.4byte	.LASF1
 5605 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 122


 5606 0034 02       		.byte	0x2
 5607 0035 05       		.byte	0x5
 5608 0036 AF060000 		.4byte	.LASF2
 5609 003a 02       		.uleb128 0x2
 5610 003b 02       		.byte	0x2
 5611 003c 07       		.byte	0x7
 5612 003d 92030000 		.4byte	.LASF3
 5613 0041 03       		.uleb128 0x3
 5614 0042 18040000 		.4byte	.LASF5
 5615 0046 02       		.byte	0x2
 5616 0047 3F       		.byte	0x3f
 5617 0048 4C000000 		.4byte	0x4c
 5618 004c 02       		.uleb128 0x2
 5619 004d 04       		.byte	0x4
 5620 004e 05       		.byte	0x5
 5621 004f D6010000 		.4byte	.LASF4
 5622 0053 03       		.uleb128 0x3
 5623 0054 94070000 		.4byte	.LASF6
 5624 0058 02       		.byte	0x2
 5625 0059 41       		.byte	0x41
 5626 005a 5E000000 		.4byte	0x5e
 5627 005e 02       		.uleb128 0x2
 5628 005f 04       		.byte	0x4
 5629 0060 07       		.byte	0x7
 5630 0061 52030000 		.4byte	.LASF7
 5631 0065 02       		.uleb128 0x2
 5632 0066 08       		.byte	0x8
 5633 0067 05       		.byte	0x5
 5634 0068 2E010000 		.4byte	.LASF8
 5635 006c 02       		.uleb128 0x2
 5636 006d 08       		.byte	0x8
 5637 006e 07       		.byte	0x7
 5638 006f 99000000 		.4byte	.LASF9
 5639 0073 04       		.uleb128 0x4
 5640 0074 04       		.byte	0x4
 5641 0075 05       		.byte	0x5
 5642 0076 696E7400 		.ascii	"int\000"
 5643 007a 02       		.uleb128 0x2
 5644 007b 04       		.byte	0x4
 5645 007c 07       		.byte	0x7
 5646 007d FE020000 		.4byte	.LASF10
 5647 0081 02       		.uleb128 0x2
 5648 0082 04       		.byte	0x4
 5649 0083 07       		.byte	0x7
 5650 0084 8B040000 		.4byte	.LASF11
 5651 0088 05       		.uleb128 0x5
 5652 0089 04       		.byte	0x4
 5653 008a 8E000000 		.4byte	0x8e
 5654 008e 02       		.uleb128 0x2
 5655 008f 01       		.byte	0x1
 5656 0090 08       		.byte	0x8
 5657 0091 54070000 		.4byte	.LASF12
 5658 0095 03       		.uleb128 0x3
 5659 0096 6D060000 		.4byte	.LASF13
 5660 009a 03       		.byte	0x3
 5661 009b 2C       		.byte	0x2c
 5662 009c 41000000 		.4byte	0x41
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 123


 5663 00a0 03       		.uleb128 0x3
 5664 00a1 60080000 		.4byte	.LASF14
 5665 00a5 03       		.byte	0x3
 5666 00a6 2D       		.byte	0x2d
 5667 00a7 53000000 		.4byte	0x53
 5668 00ab 06       		.uleb128 0x6
 5669 00ac F1010000 		.4byte	.LASF15
 5670 00b0 04       		.byte	0x4
 5671 00b1 9201     		.2byte	0x192
 5672 00b3 2C000000 		.4byte	0x2c
 5673 00b7 06       		.uleb128 0x6
 5674 00b8 83060000 		.4byte	.LASF16
 5675 00bc 04       		.byte	0x4
 5676 00bd 9301     		.2byte	0x193
 5677 00bf 3A000000 		.4byte	0x3a
 5678 00c3 06       		.uleb128 0x6
 5679 00c4 3D020000 		.4byte	.LASF17
 5680 00c8 04       		.byte	0x4
 5681 00c9 9401     		.2byte	0x194
 5682 00cb 5E000000 		.4byte	0x5e
 5683 00cf 06       		.uleb128 0x6
 5684 00d0 AE030000 		.4byte	.LASF18
 5685 00d4 04       		.byte	0x4
 5686 00d5 9501     		.2byte	0x195
 5687 00d7 25000000 		.4byte	0x25
 5688 00db 06       		.uleb128 0x6
 5689 00dc FD080000 		.4byte	.LASF19
 5690 00e0 04       		.byte	0x4
 5691 00e1 9601     		.2byte	0x196
 5692 00e3 33000000 		.4byte	0x33
 5693 00e7 02       		.uleb128 0x2
 5694 00e8 04       		.byte	0x4
 5695 00e9 04       		.byte	0x4
 5696 00ea E3050000 		.4byte	.LASF20
 5697 00ee 02       		.uleb128 0x2
 5698 00ef 08       		.byte	0x8
 5699 00f0 04       		.byte	0x4
 5700 00f1 10020000 		.4byte	.LASF21
 5701 00f5 07       		.uleb128 0x7
 5702 00f6 A0000000 		.4byte	0xa0
 5703 00fa 05010000 		.4byte	0x105
 5704 00fe 08       		.uleb128 0x8
 5705 00ff 81000000 		.4byte	0x81
 5706 0103 01       		.byte	0x1
 5707 0104 00       		.byte	0
 5708 0105 02       		.uleb128 0x2
 5709 0106 08       		.byte	0x8
 5710 0107 04       		.byte	0x4
 5711 0108 36070000 		.4byte	.LASF22
 5712 010c 09       		.uleb128 0x9
 5713 010d D0010000 		.4byte	.LASF31
 5714 0111 01       		.byte	0x1
 5715 0112 05       		.byte	0x5
 5716 0113 63       		.byte	0x63
 5717 0114 49010000 		.4byte	0x149
 5718 0118 0A       		.uleb128 0xa
 5719 0119 B3030000 		.4byte	.LASF23
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 124


 5720 011d 00       		.sleb128 0
 5721 011e 0A       		.uleb128 0xa
 5722 011f D6040000 		.4byte	.LASF24
 5723 0123 01       		.sleb128 1
 5724 0124 0A       		.uleb128 0xa
 5725 0125 E2020000 		.4byte	.LASF25
 5726 0129 02       		.sleb128 2
 5727 012a 0A       		.uleb128 0xa
 5728 012b 21070000 		.4byte	.LASF26
 5729 012f 03       		.sleb128 3
 5730 0130 0A       		.uleb128 0xa
 5731 0131 D1030000 		.4byte	.LASF27
 5732 0135 04       		.sleb128 4
 5733 0136 0A       		.uleb128 0xa
 5734 0137 E9050000 		.4byte	.LASF28
 5735 013b 05       		.sleb128 5
 5736 013c 0A       		.uleb128 0xa
 5737 013d 53060000 		.4byte	.LASF29
 5738 0141 06       		.sleb128 6
 5739 0142 0A       		.uleb128 0xa
 5740 0143 DF010000 		.4byte	.LASF30
 5741 0147 07       		.sleb128 7
 5742 0148 00       		.byte	0
 5743 0149 09       		.uleb128 0x9
 5744 014a 59070000 		.4byte	.LASF32
 5745 014e 01       		.byte	0x1
 5746 014f 05       		.byte	0x5
 5747 0150 64       		.byte	0x64
 5748 0151 86010000 		.4byte	0x186
 5749 0155 0A       		.uleb128 0xa
 5750 0156 B9060000 		.4byte	.LASF33
 5751 015a 00       		.sleb128 0
 5752 015b 0A       		.uleb128 0xa
 5753 015c 0C040000 		.4byte	.LASF34
 5754 0160 01       		.sleb128 1
 5755 0161 0A       		.uleb128 0xa
 5756 0162 08010000 		.4byte	.LASF35
 5757 0166 02       		.sleb128 2
 5758 0167 0A       		.uleb128 0xa
 5759 0168 22040000 		.4byte	.LASF36
 5760 016c 03       		.sleb128 3
 5761 016d 0A       		.uleb128 0xa
 5762 016e 1F000000 		.4byte	.LASF37
 5763 0172 04       		.sleb128 4
 5764 0173 0A       		.uleb128 0xa
 5765 0174 8A060000 		.4byte	.LASF38
 5766 0178 05       		.sleb128 5
 5767 0179 0A       		.uleb128 0xa
 5768 017a CD020000 		.4byte	.LASF39
 5769 017e 06       		.sleb128 6
 5770 017f 0A       		.uleb128 0xa
 5771 0180 10010000 		.4byte	.LASF40
 5772 0184 07       		.sleb128 7
 5773 0185 00       		.byte	0
 5774 0186 0B       		.uleb128 0xb
 5775 0187 1C030000 		.4byte	.LASF202
 5776 018b 20       		.byte	0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 125


 5777 018c 05       		.byte	0x5
 5778 018d 6A       		.byte	0x6a
 5779 018e 5F020000 		.4byte	0x25f
 5780 0192 0C       		.uleb128 0xc
 5781 0193 7D040000 		.4byte	.LASF41
 5782 0197 05       		.byte	0x5
 5783 0198 6B       		.byte	0x6b
 5784 0199 CF000000 		.4byte	0xcf
 5785 019d 00       		.byte	0
 5786 019e 0C       		.uleb128 0xc
 5787 019f 6B070000 		.4byte	.LASF42
 5788 01a3 05       		.byte	0x5
 5789 01a4 6C       		.byte	0x6c
 5790 01a5 AB000000 		.4byte	0xab
 5791 01a9 01       		.byte	0x1
 5792 01aa 0C       		.uleb128 0xc
 5793 01ab D3070000 		.4byte	.LASF43
 5794 01af 05       		.byte	0x5
 5795 01b0 6D       		.byte	0x6d
 5796 01b1 DB000000 		.4byte	0xdb
 5797 01b5 02       		.byte	0x2
 5798 01b6 0C       		.uleb128 0xc
 5799 01b7 F2080000 		.4byte	.LASF44
 5800 01bb 05       		.byte	0x5
 5801 01bc 6E       		.byte	0x6e
 5802 01bd DB000000 		.4byte	0xdb
 5803 01c1 04       		.byte	0x4
 5804 01c2 0C       		.uleb128 0xc
 5805 01c3 53010000 		.4byte	.LASF45
 5806 01c7 05       		.byte	0x5
 5807 01c8 6F       		.byte	0x6f
 5808 01c9 DB000000 		.4byte	0xdb
 5809 01cd 06       		.byte	0x6
 5810 01ce 0C       		.uleb128 0xc
 5811 01cf D6000000 		.4byte	.LASF46
 5812 01d3 05       		.byte	0x5
 5813 01d4 70       		.byte	0x70
 5814 01d5 DB000000 		.4byte	0xdb
 5815 01d9 08       		.byte	0x8
 5816 01da 0C       		.uleb128 0xc
 5817 01db BC070000 		.4byte	.LASF47
 5818 01df 05       		.byte	0x5
 5819 01e0 71       		.byte	0x71
 5820 01e1 DB000000 		.4byte	0xdb
 5821 01e5 0A       		.byte	0xa
 5822 01e6 0C       		.uleb128 0xc
 5823 01e7 6D090000 		.4byte	.LASF48
 5824 01eb 05       		.byte	0x5
 5825 01ec 72       		.byte	0x72
 5826 01ed DB000000 		.4byte	0xdb
 5827 01f1 0C       		.byte	0xc
 5828 01f2 0C       		.uleb128 0xc
 5829 01f3 7B000000 		.4byte	.LASF49
 5830 01f7 05       		.byte	0x5
 5831 01f8 73       		.byte	0x73
 5832 01f9 DB000000 		.4byte	0xdb
 5833 01fd 0E       		.byte	0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 126


 5834 01fe 0C       		.uleb128 0xc
 5835 01ff 14080000 		.4byte	.LASF50
 5836 0203 05       		.byte	0x5
 5837 0204 74       		.byte	0x74
 5838 0205 DB000000 		.4byte	0xdb
 5839 0209 10       		.byte	0x10
 5840 020a 0C       		.uleb128 0xc
 5841 020b AF040000 		.4byte	.LASF51
 5842 020f 05       		.byte	0x5
 5843 0210 75       		.byte	0x75
 5844 0211 DB000000 		.4byte	0xdb
 5845 0215 12       		.byte	0x12
 5846 0216 0C       		.uleb128 0xc
 5847 0217 82040000 		.4byte	.LASF52
 5848 021b 05       		.byte	0x5
 5849 021c 76       		.byte	0x76
 5850 021d DB000000 		.4byte	0xdb
 5851 0221 14       		.byte	0x14
 5852 0222 0C       		.uleb128 0xc
 5853 0223 B7040000 		.4byte	.LASF53
 5854 0227 05       		.byte	0x5
 5855 0228 77       		.byte	0x77
 5856 0229 DB000000 		.4byte	0xdb
 5857 022d 16       		.byte	0x16
 5858 022e 0C       		.uleb128 0xc
 5859 022f 9D060000 		.4byte	.LASF54
 5860 0233 05       		.byte	0x5
 5861 0234 78       		.byte	0x78
 5862 0235 DB000000 		.4byte	0xdb
 5863 0239 18       		.byte	0x18
 5864 023a 0C       		.uleb128 0xc
 5865 023b E6040000 		.4byte	.LASF55
 5866 023f 05       		.byte	0x5
 5867 0240 79       		.byte	0x79
 5868 0241 DB000000 		.4byte	0xdb
 5869 0245 1A       		.byte	0x1a
 5870 0246 0C       		.uleb128 0xc
 5871 0247 0B000000 		.4byte	.LASF56
 5872 024b 05       		.byte	0x5
 5873 024c 7A       		.byte	0x7a
 5874 024d DB000000 		.4byte	0xdb
 5875 0251 1C       		.byte	0x1c
 5876 0252 0C       		.uleb128 0xc
 5877 0253 7A020000 		.4byte	.LASF57
 5878 0257 05       		.byte	0x5
 5879 0258 7B       		.byte	0x7b
 5880 0259 DB000000 		.4byte	0xdb
 5881 025d 1E       		.byte	0x1e
 5882 025e 00       		.byte	0
 5883 025f 0D       		.uleb128 0xd
 5884 0260 91080000 		.4byte	.LASF58
 5885 0264 01       		.byte	0x1
 5886 0265 84       		.byte	0x84
 5887 0266 00000000 		.4byte	.LFB63
 5888 026a 0C000000 		.4byte	.LFE63-.LFB63
 5889 026e 01       		.uleb128 0x1
 5890 026f 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 127


 5891 0270 0E       		.uleb128 0xe
 5892 0271 26020000 		.4byte	.LASF59
 5893 0275 01       		.byte	0x1
 5894 0276 8A       		.byte	0x8a
 5895 0277 00000000 		.4byte	.LFB64
 5896 027b 2C000000 		.4byte	.LFE64-.LFB64
 5897 027f 01       		.uleb128 0x1
 5898 0280 9C       		.byte	0x9c
 5899 0281 0E       		.uleb128 0xe
 5900 0282 F4020000 		.4byte	.LASF60
 5901 0286 01       		.byte	0x1
 5902 0287 93       		.byte	0x93
 5903 0288 00000000 		.4byte	.LFB65
 5904 028c AC010000 		.4byte	.LFE65-.LFB65
 5905 0290 01       		.uleb128 0x1
 5906 0291 9C       		.byte	0x9c
 5907 0292 0F       		.uleb128 0xf
 5908 0293 56040000 		.4byte	.LASF66
 5909 0297 01       		.byte	0x1
 5910 0298 B8       		.byte	0xb8
 5911 0299 00000000 		.4byte	.LFB66
 5912 029d 34010000 		.4byte	.LFE66-.LFB66
 5913 02a1 01       		.uleb128 0x1
 5914 02a2 9C       		.byte	0x9c
 5915 02a3 DC020000 		.4byte	0x2dc
 5916 02a7 10       		.uleb128 0x10
 5917 02a8 0E000000 		.4byte	.LBB2
 5918 02ac 64000000 		.4byte	.LBE2-.LBB2
 5919 02b0 C3020000 		.4byte	0x2c3
 5920 02b4 11       		.uleb128 0x11
 5921 02b5 88000000 		.4byte	.LASF61
 5922 02b9 01       		.byte	0x1
 5923 02ba BC       		.byte	0xbc
 5924 02bb B7000000 		.4byte	0xb7
 5925 02bf 02       		.uleb128 0x2
 5926 02c0 91       		.byte	0x91
 5927 02c1 76       		.sleb128 -10
 5928 02c2 00       		.byte	0
 5929 02c3 12       		.uleb128 0x12
 5930 02c4 7E000000 		.4byte	.LBB3
 5931 02c8 64000000 		.4byte	.LBE3-.LBB3
 5932 02cc 11       		.uleb128 0x11
 5933 02cd 88000000 		.4byte	.LASF61
 5934 02d1 01       		.byte	0x1
 5935 02d2 C8       		.byte	0xc8
 5936 02d3 B7000000 		.4byte	0xb7
 5937 02d7 02       		.uleb128 0x2
 5938 02d8 91       		.byte	0x91
 5939 02d9 74       		.sleb128 -12
 5940 02da 00       		.byte	0
 5941 02db 00       		.byte	0
 5942 02dc 0D       		.uleb128 0xd
 5943 02dd FF030000 		.4byte	.LASF62
 5944 02e1 01       		.byte	0x1
 5945 02e2 DE       		.byte	0xde
 5946 02e3 00000000 		.4byte	.LFB67
 5947 02e7 20000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 128


 5948 02eb 01       		.uleb128 0x1
 5949 02ec 9C       		.byte	0x9c
 5950 02ed 0E       		.uleb128 0xe
 5951 02ee 29000000 		.4byte	.LASF63
 5952 02f2 01       		.byte	0x1
 5953 02f3 E5       		.byte	0xe5
 5954 02f4 00000000 		.4byte	.LFB68
 5955 02f8 28000000 		.4byte	.LFE68-.LFB68
 5956 02fc 01       		.uleb128 0x1
 5957 02fd 9C       		.byte	0x9c
 5958 02fe 0E       		.uleb128 0xe
 5959 02ff EF060000 		.4byte	.LASF64
 5960 0303 01       		.byte	0x1
 5961 0304 EE       		.byte	0xee
 5962 0305 00000000 		.4byte	.LFB69
 5963 0309 0A000000 		.4byte	.LFE69-.LFB69
 5964 030d 01       		.uleb128 0x1
 5965 030e 9C       		.byte	0x9c
 5966 030f 0E       		.uleb128 0xe
 5967 0310 55000000 		.4byte	.LASF65
 5968 0314 01       		.byte	0x1
 5969 0315 F3       		.byte	0xf3
 5970 0316 00000000 		.4byte	.LFB70
 5971 031a 28000000 		.4byte	.LFE70-.LFB70
 5972 031e 01       		.uleb128 0x1
 5973 031f 9C       		.byte	0x9c
 5974 0320 13       		.uleb128 0x13
 5975 0321 63090000 		.4byte	.LASF67
 5976 0325 01       		.byte	0x1
 5977 0326 FE       		.byte	0xfe
 5978 0327 73000000 		.4byte	0x73
 5979 032b 00000000 		.4byte	.LFB71
 5980 032f D8070000 		.4byte	.LFE71-.LFB71
 5981 0333 01       		.uleb128 0x1
 5982 0334 9C       		.byte	0x9c
 5983 0335 09040000 		.4byte	0x409
 5984 0339 14       		.uleb128 0x14
 5985 033a 7B070000 		.4byte	.LASF68
 5986 033e 01       		.byte	0x1
 5987 033f 3701     		.2byte	0x137
 5988 0341 B7000000 		.4byte	0xb7
 5989 0345 02       		.uleb128 0x2
 5990 0346 91       		.byte	0x91
 5991 0347 76       		.sleb128 -10
 5992 0348 12       		.uleb128 0x12
 5993 0349 38010000 		.4byte	.LBB4
 5994 034d 0A060000 		.4byte	.LBE4-.LBB4
 5995 0351 14       		.uleb128 0x14
 5996 0352 35090000 		.4byte	.LASF69
 5997 0356 01       		.byte	0x1
 5998 0357 6E01     		.2byte	0x16e
 5999 0359 8E000000 		.4byte	0x8e
 6000 035d 02       		.uleb128 0x2
 6001 035e 91       		.byte	0x91
 6002 035f 75       		.sleb128 -11
 6003 0360 10       		.uleb128 0x10
 6004 0361 EC010000 		.4byte	.LBB5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 129


 6005 0365 F6010000 		.4byte	.LBE5-.LBB5
 6006 0369 96030000 		.4byte	0x396
 6007 036d 15       		.uleb128 0x15
 6008 036e 6D657300 		.ascii	"mes\000"
 6009 0372 01       		.byte	0x1
 6010 0373 7C01     		.2byte	0x17c
 6011 0375 09040000 		.4byte	0x409
 6012 0379 02       		.uleb128 0x2
 6013 037a 91       		.byte	0x91
 6014 037b 60       		.sleb128 -32
 6015 037c 12       		.uleb128 0x12
 6016 037d 14020000 		.4byte	.LBB6
 6017 0381 CE010000 		.4byte	.LBE6-.LBB6
 6018 0385 14       		.uleb128 0x14
 6019 0386 79080000 		.4byte	.LASF70
 6020 038a 01       		.byte	0x1
 6021 038b 8D01     		.2byte	0x18d
 6022 038d AB000000 		.4byte	0xab
 6023 0391 02       		.uleb128 0x2
 6024 0392 91       		.byte	0x91
 6025 0393 74       		.sleb128 -12
 6026 0394 00       		.byte	0
 6027 0395 00       		.byte	0
 6028 0396 10       		.uleb128 0x10
 6029 0397 3C040000 		.4byte	.LBB7
 6030 039b 30000000 		.4byte	.LBE7-.LBB7
 6031 039f B3030000 		.4byte	0x3b3
 6032 03a3 14       		.uleb128 0x14
 6033 03a4 44020000 		.4byte	.LASF71
 6034 03a8 01       		.byte	0x1
 6035 03a9 C901     		.2byte	0x1c9
 6036 03ab 8E000000 		.4byte	0x8e
 6037 03af 02       		.uleb128 0x2
 6038 03b0 91       		.byte	0x91
 6039 03b1 71       		.sleb128 -15
 6040 03b2 00       		.byte	0
 6041 03b3 10       		.uleb128 0x10
 6042 03b4 90040000 		.4byte	.LBB8
 6043 03b8 00010000 		.4byte	.LBE8-.LBB8
 6044 03bc DF030000 		.4byte	0x3df
 6045 03c0 15       		.uleb128 0x15
 6046 03c1 6D657300 		.ascii	"mes\000"
 6047 03c5 01       		.byte	0x1
 6048 03c6 D801     		.2byte	0x1d8
 6049 03c8 09040000 		.4byte	0x409
 6050 03cc 02       		.uleb128 0x2
 6051 03cd 91       		.byte	0x91
 6052 03ce 50       		.sleb128 -48
 6053 03cf 14       		.uleb128 0x14
 6054 03d0 79080000 		.4byte	.LASF70
 6055 03d4 01       		.byte	0x1
 6056 03d5 DC01     		.2byte	0x1dc
 6057 03d7 AB000000 		.4byte	0xab
 6058 03db 02       		.uleb128 0x2
 6059 03dc 91       		.byte	0x91
 6060 03dd 73       		.sleb128 -13
 6061 03de 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 130


 6062 03df 12       		.uleb128 0x12
 6063 03e0 B8050000 		.4byte	.LBB9
 6064 03e4 80010000 		.4byte	.LBE9-.LBB9
 6065 03e8 15       		.uleb128 0x15
 6066 03e9 6D657300 		.ascii	"mes\000"
 6067 03ed 01       		.byte	0x1
 6068 03ee 0002     		.2byte	0x200
 6069 03f0 09040000 		.4byte	0x409
 6070 03f4 02       		.uleb128 0x2
 6071 03f5 91       		.byte	0x91
 6072 03f6 40       		.sleb128 -64
 6073 03f7 14       		.uleb128 0x14
 6074 03f8 79080000 		.4byte	.LASF70
 6075 03fc 01       		.byte	0x1
 6076 03fd 0402     		.2byte	0x204
 6077 03ff AB000000 		.4byte	0xab
 6078 0403 02       		.uleb128 0x2
 6079 0404 91       		.byte	0x91
 6080 0405 72       		.sleb128 -14
 6081 0406 00       		.byte	0
 6082 0407 00       		.byte	0
 6083 0408 00       		.byte	0
 6084 0409 07       		.uleb128 0x7
 6085 040a 8E000000 		.4byte	0x8e
 6086 040e 19040000 		.4byte	0x419
 6087 0412 08       		.uleb128 0x8
 6088 0413 81000000 		.4byte	0x81
 6089 0417 0F       		.byte	0xf
 6090 0418 00       		.byte	0
 6091 0419 16       		.uleb128 0x16
 6092 041a CE060000 		.4byte	.LASF77
 6093 041e 01       		.byte	0x1
 6094 041f 5402     		.2byte	0x254
 6095 0421 00000000 		.4byte	.LFB72
 6096 0425 60010000 		.4byte	.LFE72-.LFB72
 6097 0429 01       		.uleb128 0x1
 6098 042a 9C       		.byte	0x9c
 6099 042b 67040000 		.4byte	0x467
 6100 042f 12       		.uleb128 0x12
 6101 0430 10000000 		.4byte	.LBB10
 6102 0434 34010000 		.4byte	.LBE10-.LBB10
 6103 0438 14       		.uleb128 0x14
 6104 0439 29070000 		.4byte	.LASF72
 6105 043d 01       		.byte	0x1
 6106 043e 5A02     		.2byte	0x25a
 6107 0440 B7000000 		.4byte	0xb7
 6108 0444 02       		.uleb128 0x2
 6109 0445 91       		.byte	0x91
 6110 0446 76       		.sleb128 -10
 6111 0447 14       		.uleb128 0x14
 6112 0448 54020000 		.4byte	.LASF73
 6113 044c 01       		.byte	0x1
 6114 044d 5B02     		.2byte	0x25b
 6115 044f 67040000 		.4byte	0x467
 6116 0453 02       		.uleb128 0x2
 6117 0454 91       		.byte	0x91
 6118 0455 68       		.sleb128 -24
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 131


 6119 0456 14       		.uleb128 0x14
 6120 0457 D5050000 		.4byte	.LASF74
 6121 045b 01       		.byte	0x1
 6122 045c 5C02     		.2byte	0x25c
 6123 045e 67040000 		.4byte	0x467
 6124 0462 02       		.uleb128 0x2
 6125 0463 91       		.byte	0x91
 6126 0464 5C       		.sleb128 -36
 6127 0465 00       		.byte	0
 6128 0466 00       		.byte	0
 6129 0467 07       		.uleb128 0x7
 6130 0468 8E000000 		.4byte	0x8e
 6131 046c 77040000 		.4byte	0x477
 6132 0470 08       		.uleb128 0x8
 6133 0471 81000000 		.4byte	0x81
 6134 0475 0B       		.byte	0xb
 6135 0476 00       		.byte	0
 6136 0477 17       		.uleb128 0x17
 6137 0478 05020000 		.4byte	.LASF75
 6138 047c 01       		.byte	0x1
 6139 047d 9502     		.2byte	0x295
 6140 047f 00000000 		.4byte	.LFB73
 6141 0483 18000000 		.4byte	.LFE73-.LFB73
 6142 0487 01       		.uleb128 0x1
 6143 0488 9C       		.byte	0x9c
 6144 0489 9D040000 		.4byte	0x49d
 6145 048d 18       		.uleb128 0x18
 6146 048e 64697200 		.ascii	"dir\000"
 6147 0492 01       		.byte	0x1
 6148 0493 9502     		.2byte	0x295
 6149 0495 AB000000 		.4byte	0xab
 6150 0499 02       		.uleb128 0x2
 6151 049a 91       		.byte	0x91
 6152 049b 77       		.sleb128 -9
 6153 049c 00       		.byte	0
 6154 049d 17       		.uleb128 0x17
 6155 049e 25060000 		.4byte	.LASF76
 6156 04a2 01       		.byte	0x1
 6157 04a3 9A02     		.2byte	0x29a
 6158 04a5 00000000 		.4byte	.LFB74
 6159 04a9 18000000 		.4byte	.LFE74-.LFB74
 6160 04ad 01       		.uleb128 0x1
 6161 04ae 9C       		.byte	0x9c
 6162 04af C3040000 		.4byte	0x4c3
 6163 04b3 18       		.uleb128 0x18
 6164 04b4 64697200 		.ascii	"dir\000"
 6165 04b8 01       		.byte	0x1
 6166 04b9 9A02     		.2byte	0x29a
 6167 04bb AB000000 		.4byte	0xab
 6168 04bf 02       		.uleb128 0x2
 6169 04c0 91       		.byte	0x91
 6170 04c1 77       		.sleb128 -9
 6171 04c2 00       		.byte	0
 6172 04c3 19       		.uleb128 0x19
 6173 04c4 36080000 		.4byte	.LASF78
 6174 04c8 01       		.byte	0x1
 6175 04c9 9F02     		.2byte	0x29f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 132


 6176 04cb 00000000 		.4byte	.LFB75
 6177 04cf 54000000 		.4byte	.LFE75-.LFB75
 6178 04d3 01       		.uleb128 0x1
 6179 04d4 9C       		.byte	0x9c
 6180 04d5 E9040000 		.4byte	0x4e9
 6181 04d9 15       		.uleb128 0x15
 6182 04da 6D657300 		.ascii	"mes\000"
 6183 04de 01       		.byte	0x1
 6184 04df A402     		.2byte	0x2a4
 6185 04e1 09040000 		.4byte	0x409
 6186 04e5 02       		.uleb128 0x2
 6187 04e6 91       		.byte	0x91
 6188 04e7 68       		.sleb128 -24
 6189 04e8 00       		.byte	0
 6190 04e9 17       		.uleb128 0x17
 6191 04ea A5030000 		.4byte	.LASF79
 6192 04ee 01       		.byte	0x1
 6193 04ef A902     		.2byte	0x2a9
 6194 04f1 00000000 		.4byte	.LFB76
 6195 04f5 F4000000 		.4byte	.LFE76-.LFB76
 6196 04f9 01       		.uleb128 0x1
 6197 04fa 9C       		.byte	0x9c
 6198 04fb 3C050000 		.4byte	0x53c
 6199 04ff 1A       		.uleb128 0x1a
 6200 0500 68090000 		.4byte	.LASF80
 6201 0504 01       		.byte	0x1
 6202 0505 A902     		.2byte	0x2a9
 6203 0507 EE000000 		.4byte	0xee
 6204 050b 02       		.uleb128 0x2
 6205 050c 91       		.byte	0x91
 6206 050d 68       		.sleb128 -24
 6207 050e 1A       		.uleb128 0x1a
 6208 050f 1D010000 		.4byte	.LASF81
 6209 0513 01       		.byte	0x1
 6210 0514 A902     		.2byte	0x2a9
 6211 0516 EE000000 		.4byte	0xee
 6212 051a 02       		.uleb128 0x2
 6213 051b 91       		.byte	0x91
 6214 051c 60       		.sleb128 -32
 6215 051d 14       		.uleb128 0x14
 6216 051e 03090000 		.4byte	.LASF82
 6217 0522 01       		.byte	0x1
 6218 0523 BE02     		.2byte	0x2be
 6219 0525 DB000000 		.4byte	0xdb
 6220 0529 02       		.uleb128 0x2
 6221 052a 91       		.byte	0x91
 6222 052b 76       		.sleb128 -10
 6223 052c 14       		.uleb128 0x14
 6224 052d EB070000 		.4byte	.LASF83
 6225 0531 01       		.byte	0x1
 6226 0532 BF02     		.2byte	0x2bf
 6227 0534 DB000000 		.4byte	0xdb
 6228 0538 02       		.uleb128 0x2
 6229 0539 91       		.byte	0x91
 6230 053a 74       		.sleb128 -12
 6231 053b 00       		.byte	0
 6232 053c 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 133


 6233 053d 00080000 		.4byte	.LASF84
 6234 0541 01       		.byte	0x1
 6235 0542 C502     		.2byte	0x2c5
 6236 0544 00000000 		.4byte	.LFB77
 6237 0548 18000000 		.4byte	.LFE77-.LFB77
 6238 054c 01       		.uleb128 0x1
 6239 054d 9C       		.byte	0x9c
 6240 054e 1B       		.uleb128 0x1b
 6241 054f 06070000 		.4byte	.LASF85
 6242 0553 01       		.byte	0x1
 6243 0554 CB02     		.2byte	0x2cb
 6244 0556 00000000 		.4byte	.LFB78
 6245 055a 18000000 		.4byte	.LFE78-.LFB78
 6246 055e 01       		.uleb128 0x1
 6247 055f 9C       		.byte	0x9c
 6248 0560 1B       		.uleb128 0x1b
 6249 0561 92060000 		.4byte	.LASF86
 6250 0565 01       		.byte	0x1
 6251 0566 D102     		.2byte	0x2d1
 6252 0568 00000000 		.4byte	.LFB79
 6253 056c 22000000 		.4byte	.LFE79-.LFB79
 6254 0570 01       		.uleb128 0x1
 6255 0571 9C       		.byte	0x9c
 6256 0572 1B       		.uleb128 0x1b
 6257 0573 02060000 		.4byte	.LASF87
 6258 0577 01       		.byte	0x1
 6259 0578 D702     		.2byte	0x2d7
 6260 057a 00000000 		.4byte	.LFB80
 6261 057e 1C000000 		.4byte	.LFE80-.LFB80
 6262 0582 01       		.uleb128 0x1
 6263 0583 9C       		.byte	0x9c
 6264 0584 1B       		.uleb128 0x1b
 6265 0585 CC000000 		.4byte	.LASF88
 6266 0589 01       		.byte	0x1
 6267 058a DC02     		.2byte	0x2dc
 6268 058c 00000000 		.4byte	.LFB81
 6269 0590 34000000 		.4byte	.LFE81-.LFB81
 6270 0594 01       		.uleb128 0x1
 6271 0595 9C       		.byte	0x9c
 6272 0596 1B       		.uleb128 0x1b
 6273 0597 C7010000 		.4byte	.LASF89
 6274 059b 01       		.byte	0x1
 6275 059c E102     		.2byte	0x2e1
 6276 059e 00000000 		.4byte	.LFB82
 6277 05a2 38000000 		.4byte	.LFE82-.LFB82
 6278 05a6 01       		.uleb128 0x1
 6279 05a7 9C       		.byte	0x9c
 6280 05a8 1B       		.uleb128 0x1b
 6281 05a9 DE070000 		.4byte	.LASF90
 6282 05ad 01       		.byte	0x1
 6283 05ae E602     		.2byte	0x2e6
 6284 05b0 00000000 		.4byte	.LFB83
 6285 05b4 4C000000 		.4byte	.LFE83-.LFB83
 6286 05b8 01       		.uleb128 0x1
 6287 05b9 9C       		.byte	0x9c
 6288 05ba 1B       		.uleb128 0x1b
 6289 05bb B9030000 		.4byte	.LASF91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 134


 6290 05bf 01       		.byte	0x1
 6291 05c0 EB02     		.2byte	0x2eb
 6292 05c2 00000000 		.4byte	.LFB84
 6293 05c6 38000000 		.4byte	.LFE84-.LFB84
 6294 05ca 01       		.uleb128 0x1
 6295 05cb 9C       		.byte	0x9c
 6296 05cc 1B       		.uleb128 0x1b
 6297 05cd 96010000 		.4byte	.LASF92
 6298 05d1 01       		.byte	0x1
 6299 05d2 F402     		.2byte	0x2f4
 6300 05d4 00000000 		.4byte	.LFB85
 6301 05d8 38000000 		.4byte	.LFE85-.LFB85
 6302 05dc 01       		.uleb128 0x1
 6303 05dd 9C       		.byte	0x9c
 6304 05de 1B       		.uleb128 0x1b
 6305 05df 6E030000 		.4byte	.LASF93
 6306 05e3 01       		.byte	0x1
 6307 05e4 FD02     		.2byte	0x2fd
 6308 05e6 00000000 		.4byte	.LFB86
 6309 05ea 38000000 		.4byte	.LFE86-.LFB86
 6310 05ee 01       		.uleb128 0x1
 6311 05ef 9C       		.byte	0x9c
 6312 05f0 1B       		.uleb128 0x1b
 6313 05f1 54080000 		.4byte	.LASF94
 6314 05f5 01       		.byte	0x1
 6315 05f6 0603     		.2byte	0x306
 6316 05f8 00000000 		.4byte	.LFB87
 6317 05fc 14000000 		.4byte	.LFE87-.LFB87
 6318 0600 01       		.uleb128 0x1
 6319 0601 9C       		.byte	0x9c
 6320 0602 1C       		.uleb128 0x1c
 6321 0603 71000000 		.4byte	.LASF95
 6322 0607 01       		.byte	0x1
 6323 0608 0B03     		.2byte	0x30b
 6324 060a 00000000 		.4byte	.LFB88
 6325 060e 18000000 		.4byte	.LFE88-.LFB88
 6326 0612 01       		.uleb128 0x1
 6327 0613 9C       		.byte	0x9c
 6328 0614 1C       		.uleb128 0x1c
 6329 0615 64030000 		.4byte	.LASF96
 6330 0619 01       		.byte	0x1
 6331 061a 0F03     		.2byte	0x30f
 6332 061c 00000000 		.4byte	.LFB89
 6333 0620 18000000 		.4byte	.LFE89-.LFB89
 6334 0624 01       		.uleb128 0x1
 6335 0625 9C       		.byte	0x9c
 6336 0626 1C       		.uleb128 0x1c
 6337 0627 00000000 		.4byte	.LASF97
 6338 062b 01       		.byte	0x1
 6339 062c 1403     		.2byte	0x314
 6340 062e 00000000 		.4byte	.LFB90
 6341 0632 18000000 		.4byte	.LFE90-.LFB90
 6342 0636 01       		.uleb128 0x1
 6343 0637 9C       		.byte	0x9c
 6344 0638 1C       		.uleb128 0x1c
 6345 0639 C7080000 		.4byte	.LASF98
 6346 063d 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 135


 6347 063e 1803     		.2byte	0x318
 6348 0640 00000000 		.4byte	.LFB91
 6349 0644 18000000 		.4byte	.LFE91-.LFB91
 6350 0648 01       		.uleb128 0x1
 6351 0649 9C       		.byte	0x9c
 6352 064a 17       		.uleb128 0x17
 6353 064b DF060000 		.4byte	.LASF99
 6354 064f 01       		.byte	0x1
 6355 0650 1F03     		.2byte	0x31f
 6356 0652 00000000 		.4byte	.LFB92
 6357 0656 B8000000 		.4byte	.LFE92-.LFB92
 6358 065a 01       		.uleb128 0x1
 6359 065b 9C       		.byte	0x9c
 6360 065c 70060000 		.4byte	0x670
 6361 0660 14       		.uleb128 0x14
 6362 0661 1C080000 		.4byte	.LASF100
 6363 0665 01       		.byte	0x1
 6364 0666 2003     		.2byte	0x320
 6365 0668 8E000000 		.4byte	0x8e
 6366 066c 02       		.uleb128 0x2
 6367 066d 91       		.byte	0x91
 6368 066e 6F       		.sleb128 -17
 6369 066f 00       		.byte	0
 6370 0670 17       		.uleb128 0x17
 6371 0671 9B050000 		.4byte	.LASF101
 6372 0675 01       		.byte	0x1
 6373 0676 3C03     		.2byte	0x33c
 6374 0678 00000000 		.4byte	.LFB93
 6375 067c 4C050000 		.4byte	.LFE93-.LFB93
 6376 0680 01       		.uleb128 0x1
 6377 0681 9C       		.byte	0x9c
 6378 0682 D8060000 		.4byte	0x6d8
 6379 0686 14       		.uleb128 0x14
 6380 0687 1C080000 		.4byte	.LASF100
 6381 068b 01       		.byte	0x1
 6382 068c 3E03     		.2byte	0x33e
 6383 068e 8E000000 		.4byte	0x8e
 6384 0692 02       		.uleb128 0x2
 6385 0693 91       		.byte	0x91
 6386 0694 77       		.sleb128 -9
 6387 0695 12       		.uleb128 0x12
 6388 0696 48010000 		.4byte	.LBB11
 6389 069a DA030000 		.4byte	.LBE11-.LBB11
 6390 069e 15       		.uleb128 0x15
 6391 069f 6D657300 		.ascii	"mes\000"
 6392 06a3 01       		.byte	0x1
 6393 06a4 6403     		.2byte	0x364
 6394 06a6 09040000 		.4byte	0x409
 6395 06aa 02       		.uleb128 0x2
 6396 06ab 91       		.byte	0x91
 6397 06ac 58       		.sleb128 -40
 6398 06ad 15       		.uleb128 0x15
 6399 06ae 6900     		.ascii	"i\000"
 6400 06b0 01       		.byte	0x1
 6401 06b1 8F03     		.2byte	0x38f
 6402 06b3 73000000 		.4byte	0x73
 6403 06b7 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 136


 6404 06b8 91       		.byte	0x91
 6405 06b9 70       		.sleb128 -16
 6406 06ba 14       		.uleb128 0x14
 6407 06bb 35090000 		.4byte	.LASF69
 6408 06bf 01       		.byte	0x1
 6409 06c0 9C03     		.2byte	0x39c
 6410 06c2 8E000000 		.4byte	0x8e
 6411 06c6 02       		.uleb128 0x2
 6412 06c7 91       		.byte	0x91
 6413 06c8 6B       		.sleb128 -21
 6414 06c9 15       		.uleb128 0x15
 6415 06ca 7800     		.ascii	"x\000"
 6416 06cc 01       		.byte	0x1
 6417 06cd C203     		.2byte	0x3c2
 6418 06cf 73000000 		.4byte	0x73
 6419 06d3 02       		.uleb128 0x2
 6420 06d4 91       		.byte	0x91
 6421 06d5 6C       		.sleb128 -20
 6422 06d6 00       		.byte	0
 6423 06d7 00       		.byte	0
 6424 06d8 1B       		.uleb128 0x1b
 6425 06d9 14000000 		.4byte	.LASF102
 6426 06dd 01       		.byte	0x1
 6427 06de DC03     		.2byte	0x3dc
 6428 06e0 00000000 		.4byte	.LFB94
 6429 06e4 40000000 		.4byte	.LFE94-.LFB94
 6430 06e8 01       		.uleb128 0x1
 6431 06e9 9C       		.byte	0x9c
 6432 06ea 1B       		.uleb128 0x1b
 6433 06eb C6030000 		.4byte	.LASF103
 6434 06ef 01       		.byte	0x1
 6435 06f0 EB03     		.2byte	0x3eb
 6436 06f2 00000000 		.4byte	.LFB95
 6437 06f6 40000000 		.4byte	.LFE95-.LFB95
 6438 06fa 01       		.uleb128 0x1
 6439 06fb 9C       		.byte	0x9c
 6440 06fc 19       		.uleb128 0x19
 6441 06fd C4040000 		.4byte	.LASF104
 6442 0701 01       		.byte	0x1
 6443 0702 FB03     		.2byte	0x3fb
 6444 0704 00000000 		.4byte	.LFB96
 6445 0708 30020000 		.4byte	.LFE96-.LFB96
 6446 070c 01       		.uleb128 0x1
 6447 070d 9C       		.byte	0x9c
 6448 070e 6D070000 		.4byte	0x76d
 6449 0712 14       		.uleb128 0x14
 6450 0713 8A070000 		.4byte	.LASF105
 6451 0717 01       		.byte	0x1
 6452 0718 0904     		.2byte	0x409
 6453 071a DB000000 		.4byte	0xdb
 6454 071e 02       		.uleb128 0x2
 6455 071f 91       		.byte	0x91
 6456 0720 5E       		.sleb128 -34
 6457 0721 14       		.uleb128 0x14
 6458 0722 48010000 		.4byte	.LASF106
 6459 0726 01       		.byte	0x1
 6460 0727 0A04     		.2byte	0x40a
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 137


 6461 0729 DB000000 		.4byte	0xdb
 6462 072d 02       		.uleb128 0x2
 6463 072e 91       		.byte	0x91
 6464 072f 5C       		.sleb128 -36
 6465 0730 14       		.uleb128 0x14
 6466 0731 C2060000 		.4byte	.LASF107
 6467 0735 01       		.byte	0x1
 6468 0736 0B04     		.2byte	0x40b
 6469 0738 EE000000 		.4byte	0xee
 6470 073c 02       		.uleb128 0x2
 6471 073d 91       		.byte	0x91
 6472 073e 68       		.sleb128 -24
 6473 073f 14       		.uleb128 0x14
 6474 0740 D6080000 		.4byte	.LASF108
 6475 0744 01       		.byte	0x1
 6476 0745 0C04     		.2byte	0x40c
 6477 0747 EE000000 		.4byte	0xee
 6478 074b 02       		.uleb128 0x2
 6479 074c 91       		.byte	0x91
 6480 074d 60       		.sleb128 -32
 6481 074e 14       		.uleb128 0x14
 6482 074f 65040000 		.4byte	.LASF109
 6483 0753 01       		.byte	0x1
 6484 0754 1504     		.2byte	0x415
 6485 0756 73000000 		.4byte	0x73
 6486 075a 02       		.uleb128 0x2
 6487 075b 91       		.byte	0x91
 6488 075c 58       		.sleb128 -40
 6489 075d 14       		.uleb128 0x14
 6490 075e A5060000 		.4byte	.LASF110
 6491 0762 01       		.byte	0x1
 6492 0763 1604     		.2byte	0x416
 6493 0765 73000000 		.4byte	0x73
 6494 0769 02       		.uleb128 0x2
 6495 076a 91       		.byte	0x91
 6496 076b 54       		.sleb128 -44
 6497 076c 00       		.byte	0
 6498 076d 1C       		.uleb128 0x1c
 6499 076e FC060000 		.4byte	.LASF111
 6500 0772 01       		.byte	0x1
 6501 0773 2404     		.2byte	0x424
 6502 0775 00000000 		.4byte	.LFB97
 6503 0779 0C000000 		.4byte	.LFE97-.LFB97
 6504 077d 01       		.uleb128 0x1
 6505 077e 9C       		.byte	0x9c
 6506 077f 19       		.uleb128 0x19
 6507 0780 BC010000 		.4byte	.LASF112
 6508 0784 01       		.byte	0x1
 6509 0785 2A04     		.2byte	0x42a
 6510 0787 00000000 		.4byte	.LFB98
 6511 078b 4C010000 		.4byte	.LFE98-.LFB98
 6512 078f 01       		.uleb128 0x1
 6513 0790 9C       		.byte	0x9c
 6514 0791 C1070000 		.4byte	0x7c1
 6515 0795 15       		.uleb128 0x15
 6516 0796 6E6C00   		.ascii	"nl\000"
 6517 0799 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 138


 6518 079a 2E04     		.2byte	0x42e
 6519 079c AB000000 		.4byte	0xab
 6520 07a0 02       		.uleb128 0x2
 6521 07a1 91       		.byte	0x91
 6522 07a2 67       		.sleb128 -25
 6523 07a3 15       		.uleb128 0x15
 6524 07a4 6E7200   		.ascii	"nr\000"
 6525 07a7 01       		.byte	0x1
 6526 07a8 2F04     		.2byte	0x42f
 6527 07aa AB000000 		.4byte	0xab
 6528 07ae 02       		.uleb128 0x2
 6529 07af 91       		.byte	0x91
 6530 07b0 66       		.sleb128 -26
 6531 07b1 15       		.uleb128 0x15
 6532 07b2 6D696400 		.ascii	"mid\000"
 6533 07b6 01       		.byte	0x1
 6534 07b7 3004     		.2byte	0x430
 6535 07b9 AB000000 		.4byte	0xab
 6536 07bd 02       		.uleb128 0x2
 6537 07be 91       		.byte	0x91
 6538 07bf 65       		.sleb128 -27
 6539 07c0 00       		.byte	0
 6540 07c1 1C       		.uleb128 0x1c
 6541 07c2 72010000 		.4byte	.LASF113
 6542 07c6 01       		.byte	0x1
 6543 07c7 4A04     		.2byte	0x44a
 6544 07c9 00000000 		.4byte	.LFB99
 6545 07cd 0C000000 		.4byte	.LFE99-.LFB99
 6546 07d1 01       		.uleb128 0x1
 6547 07d2 9C       		.byte	0x9c
 6548 07d3 19       		.uleb128 0x19
 6549 07d4 B5090000 		.4byte	.LASF114
 6550 07d8 01       		.byte	0x1
 6551 07d9 4F04     		.2byte	0x44f
 6552 07db 00000000 		.4byte	.LFB100
 6553 07df C0000000 		.4byte	.LFE100-.LFB100
 6554 07e3 01       		.uleb128 0x1
 6555 07e4 9C       		.byte	0x9c
 6556 07e5 21080000 		.4byte	0x821
 6557 07e9 12       		.uleb128 0x12
 6558 07ea 0E000000 		.4byte	.LBB12
 6559 07ee 8E000000 		.4byte	.LBE12-.LBB12
 6560 07f2 14       		.uleb128 0x14
 6561 07f3 78030000 		.4byte	.LASF115
 6562 07f7 01       		.byte	0x1
 6563 07f8 5804     		.2byte	0x458
 6564 07fa E7000000 		.4byte	0xe7
 6565 07fe 02       		.uleb128 0x2
 6566 07ff 91       		.byte	0x91
 6567 0800 74       		.sleb128 -12
 6568 0801 14       		.uleb128 0x14
 6569 0802 F7010000 		.4byte	.LASF116
 6570 0806 01       		.byte	0x1
 6571 0807 5904     		.2byte	0x459
 6572 0809 DB000000 		.4byte	0xdb
 6573 080d 02       		.uleb128 0x2
 6574 080e 91       		.byte	0x91
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 139


 6575 080f 72       		.sleb128 -14
 6576 0810 14       		.uleb128 0x14
 6577 0811 EE040000 		.4byte	.LASF117
 6578 0815 01       		.byte	0x1
 6579 0816 5E04     		.2byte	0x45e
 6580 0818 09040000 		.4byte	0x409
 6581 081c 02       		.uleb128 0x2
 6582 081d 91       		.byte	0x91
 6583 081e 60       		.sleb128 -32
 6584 081f 00       		.byte	0
 6585 0820 00       		.byte	0
 6586 0821 19       		.uleb128 0x19
 6587 0822 F7070000 		.4byte	.LASF118
 6588 0826 01       		.byte	0x1
 6589 0827 6504     		.2byte	0x465
 6590 0829 00000000 		.4byte	.LFB101
 6591 082d B8000000 		.4byte	.LFE101-.LFB101
 6592 0831 01       		.uleb128 0x1
 6593 0832 9C       		.byte	0x9c
 6594 0833 51080000 		.4byte	0x851
 6595 0837 12       		.uleb128 0x12
 6596 0838 0E000000 		.4byte	.LBB13
 6597 083c 86000000 		.4byte	.LBE13-.LBB13
 6598 0840 14       		.uleb128 0x14
 6599 0841 10060000 		.4byte	.LASF119
 6600 0845 01       		.byte	0x1
 6601 0846 6904     		.2byte	0x469
 6602 0848 09040000 		.4byte	0x409
 6603 084c 02       		.uleb128 0x2
 6604 084d 91       		.byte	0x91
 6605 084e 68       		.sleb128 -24
 6606 084f 00       		.byte	0
 6607 0850 00       		.byte	0
 6608 0851 17       		.uleb128 0x17
 6609 0852 BF090000 		.4byte	.LASF120
 6610 0856 01       		.byte	0x1
 6611 0857 7A04     		.2byte	0x47a
 6612 0859 00000000 		.4byte	.LFB102
 6613 085d 4A000000 		.4byte	.LFE102-.LFB102
 6614 0861 01       		.uleb128 0x1
 6615 0862 9C       		.byte	0x9c
 6616 0863 77080000 		.4byte	0x877
 6617 0867 1A       		.uleb128 0x1a
 6618 0868 23010000 		.4byte	.LASF121
 6619 086c 01       		.byte	0x1
 6620 086d 7A04     		.2byte	0x47a
 6621 086f 77080000 		.4byte	0x877
 6622 0873 02       		.uleb128 0x2
 6623 0874 91       		.byte	0x91
 6624 0875 6C       		.sleb128 -20
 6625 0876 00       		.byte	0
 6626 0877 05       		.uleb128 0x5
 6627 0878 04       		.byte	0x4
 6628 0879 AB000000 		.4byte	0xab
 6629 087d 17       		.uleb128 0x17
 6630 087e F2030000 		.4byte	.LASF122
 6631 0882 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 140


 6632 0883 8504     		.2byte	0x485
 6633 0885 00000000 		.4byte	.LFB103
 6634 0889 68000000 		.4byte	.LFE103-.LFB103
 6635 088d 01       		.uleb128 0x1
 6636 088e 9C       		.byte	0x9c
 6637 088f BA080000 		.4byte	0x8ba
 6638 0893 18       		.uleb128 0x18
 6639 0894 7300     		.ascii	"s\000"
 6640 0896 01       		.byte	0x1
 6641 0897 8504     		.2byte	0x485
 6642 0899 88000000 		.4byte	0x88
 6643 089d 02       		.uleb128 0x2
 6644 089e 91       		.byte	0x91
 6645 089f 6C       		.sleb128 -20
 6646 08a0 12       		.uleb128 0x12
 6647 08a1 10000000 		.4byte	.LBB14
 6648 08a5 48000000 		.4byte	.LBE14-.LBB14
 6649 08a9 15       		.uleb128 0x15
 6650 08aa 636E7400 		.ascii	"cnt\000"
 6651 08ae 01       		.byte	0x1
 6652 08af 8C04     		.2byte	0x48c
 6653 08b1 C3000000 		.4byte	0xc3
 6654 08b5 02       		.uleb128 0x2
 6655 08b6 91       		.byte	0x91
 6656 08b7 74       		.sleb128 -12
 6657 08b8 00       		.byte	0
 6658 08b9 00       		.byte	0
 6659 08ba 17       		.uleb128 0x17
 6660 08bb BC080000 		.4byte	.LASF123
 6661 08bf 01       		.byte	0x1
 6662 08c0 9B04     		.2byte	0x49b
 6663 08c2 00000000 		.4byte	.LFB104
 6664 08c6 50000000 		.4byte	.LFE104-.LFB104
 6665 08ca 01       		.uleb128 0x1
 6666 08cb 9C       		.byte	0x9c
 6667 08cc F7080000 		.4byte	0x8f7
 6668 08d0 18       		.uleb128 0x18
 6669 08d1 6300     		.ascii	"c\000"
 6670 08d3 01       		.byte	0x1
 6671 08d4 9B04     		.2byte	0x49b
 6672 08d6 8E000000 		.4byte	0x8e
 6673 08da 02       		.uleb128 0x2
 6674 08db 91       		.byte	0x91
 6675 08dc 6F       		.sleb128 -17
 6676 08dd 12       		.uleb128 0x12
 6677 08de 12000000 		.4byte	.LBB15
 6678 08e2 2E000000 		.4byte	.LBE15-.LBB15
 6679 08e6 15       		.uleb128 0x15
 6680 08e7 636E7400 		.ascii	"cnt\000"
 6681 08eb 01       		.byte	0x1
 6682 08ec 9F04     		.2byte	0x49f
 6683 08ee C3000000 		.4byte	0xc3
 6684 08f2 02       		.uleb128 0x2
 6685 08f3 91       		.byte	0x91
 6686 08f4 74       		.sleb128 -12
 6687 08f5 00       		.byte	0
 6688 08f6 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 141


 6689 08f7 1C       		.uleb128 0x1c
 6690 08f8 3A040000 		.4byte	.LASF124
 6691 08fc 01       		.byte	0x1
 6692 08fd AC04     		.2byte	0x4ac
 6693 08ff 00000000 		.4byte	.LFB105
 6694 0903 0C000000 		.4byte	.LFE105-.LFB105
 6695 0907 01       		.uleb128 0x1
 6696 0908 9C       		.byte	0x9c
 6697 0909 1D       		.uleb128 0x1d
 6698 090a DE000000 		.4byte	.LASF125
 6699 090e 06       		.byte	0x6
 6700 090f 9606     		.2byte	0x696
 6701 0911 15090000 		.4byte	0x915
 6702 0915 1E       		.uleb128 0x1e
 6703 0916 95000000 		.4byte	0x95
 6704 091a 1F       		.uleb128 0x1f
 6705 091b 747300   		.ascii	"ts\000"
 6706 091e 05       		.byte	0x5
 6707 091f 10       		.byte	0x10
 6708 0920 AB000000 		.4byte	0xab
 6709 0924 05       		.uleb128 0x5
 6710 0925 03       		.byte	0x3
 6711 0926 00000000 		.4byte	ts
 6712 092a 20       		.uleb128 0x20
 6713 092b 2E020000 		.4byte	.LASF126
 6714 092f 05       		.byte	0x5
 6715 0930 11       		.byte	0x11
 6716 0931 B7000000 		.4byte	0xb7
 6717 0935 05       		.uleb128 0x5
 6718 0936 03       		.byte	0x3
 6719 0937 00000000 		.4byte	ts_enc
 6720 093b 20       		.uleb128 0x20
 6721 093c FE000000 		.4byte	.LASF127
 6722 0940 05       		.byte	0x5
 6723 0941 12       		.byte	0x12
 6724 0942 B7000000 		.4byte	0xb7
 6725 0946 05       		.uleb128 0x5
 6726 0947 03       		.byte	0x3
 6727 0948 00000000 		.4byte	ts_update
 6728 094c 20       		.uleb128 0x20
 6729 094d 30000000 		.4byte	.LASF128
 6730 0951 05       		.byte	0x5
 6731 0952 13       		.byte	0x13
 6732 0953 B7000000 		.4byte	0xb7
 6733 0957 05       		.uleb128 0x5
 6734 0958 03       		.byte	0x3
 6735 0959 00000000 		.4byte	ts_speed
 6736 095d 20       		.uleb128 0x20
 6737 095e 2F040000 		.4byte	.LASF129
 6738 0962 05       		.byte	0x5
 6739 0963 14       		.byte	0x14
 6740 0964 B7000000 		.4byte	0xb7
 6741 0968 05       		.uleb128 0x5
 6742 0969 03       		.byte	0x3
 6743 096a 00000000 		.4byte	ts_display
 6744 096e 20       		.uleb128 0x20
 6745 096f 7D010000 		.4byte	.LASF130
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 142


 6746 0973 05       		.byte	0x5
 6747 0974 16       		.byte	0x16
 6748 0975 AB000000 		.4byte	0xab
 6749 0979 05       		.uleb128 0x5
 6750 097a 03       		.byte	0x3
 6751 097b 00000000 		.4byte	flag_ts_enc
 6752 097f 20       		.uleb128 0x20
 6753 0980 9F070000 		.4byte	.LASF131
 6754 0984 05       		.byte	0x5
 6755 0985 17       		.byte	0x17
 6756 0986 AB000000 		.4byte	0xab
 6757 098a 05       		.uleb128 0x5
 6758 098b 03       		.byte	0x3
 6759 098c 00000000 		.4byte	flag_ts_update
 6760 0990 20       		.uleb128 0x20
 6761 0991 6F040000 		.4byte	.LASF132
 6762 0995 05       		.byte	0x5
 6763 0996 18       		.byte	0x18
 6764 0997 AB000000 		.4byte	0xab
 6765 099b 05       		.uleb128 0x5
 6766 099c 03       		.byte	0x3
 6767 099d 00000000 		.4byte	flag_ts_speed
 6768 09a1 20       		.uleb128 0x20
 6769 09a2 11070000 		.4byte	.LASF133
 6770 09a6 05       		.byte	0x5
 6771 09a7 19       		.byte	0x19
 6772 09a8 AB000000 		.4byte	0xab
 6773 09ac 05       		.uleb128 0x5
 6774 09ad 03       		.byte	0x3
 6775 09ae 00000000 		.4byte	flag_ts_display
 6776 09b2 20       		.uleb128 0x20
 6777 09b3 35020000 		.4byte	.LASF134
 6778 09b7 05       		.byte	0x5
 6779 09b8 1C       		.byte	0x1c
 6780 09b9 AB000000 		.4byte	0xab
 6781 09bd 05       		.uleb128 0x5
 6782 09be 03       		.byte	0x3
 6783 09bf 00000000 		.4byte	flag_rx
 6784 09c3 20       		.uleb128 0x20
 6785 09c4 C0000000 		.4byte	.LASF135
 6786 09c8 05       		.byte	0x5
 6787 09c9 1D       		.byte	0x1d
 6788 09ca AB000000 		.4byte	0xab
 6789 09ce 05       		.uleb128 0x5
 6790 09cf 03       		.byte	0x3
 6791 09d0 00000000 		.4byte	flag_packet
 6792 09d4 20       		.uleb128 0x20
 6793 09d5 AD010000 		.4byte	.LASF136
 6794 09d9 05       		.byte	0x5
 6795 09da 1E       		.byte	0x1e
 6796 09db AB000000 		.4byte	0xab
 6797 09df 05       		.uleb128 0x5
 6798 09e0 03       		.byte	0x3
 6799 09e1 00000000 		.4byte	flag_KB_string
 6800 09e5 20       		.uleb128 0x20
 6801 09e6 17020000 		.4byte	.LASF137
 6802 09ea 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 143


 6803 09eb 20       		.byte	0x20
 6804 09ec AB000000 		.4byte	0xab
 6805 09f0 05       		.uleb128 0x5
 6806 09f1 03       		.byte	0x3
 6807 09f2 00000000 		.4byte	dataready_flag
 6808 09f6 20       		.uleb128 0x20
 6809 09f7 B9050000 		.4byte	.LASF138
 6810 09fb 05       		.byte	0x5
 6811 09fc 22       		.byte	0x22
 6812 09fd AB000000 		.4byte	0xab
 6813 0a01 05       		.uleb128 0x5
 6814 0a02 03       		.byte	0x3
 6815 0a03 00000000 		.4byte	flag_rf_transmission_active
 6816 0a07 20       		.uleb128 0x20
 6817 0a08 94040000 		.4byte	.LASF139
 6818 0a0c 05       		.byte	0x5
 6819 0a0d 23       		.byte	0x23
 6820 0a0e AB000000 		.4byte	0xab
 6821 0a12 05       		.uleb128 0x5
 6822 0a13 03       		.byte	0x3
 6823 0a14 00000000 		.4byte	flag_print_rf
 6824 0a18 20       		.uleb128 0x20
 6825 0a19 41030000 		.4byte	.LASF140
 6826 0a1d 05       		.byte	0x5
 6827 0a1e 25       		.byte	0x25
 6828 0a1f AB000000 		.4byte	0xab
 6829 0a23 05       		.uleb128 0x5
 6830 0a24 03       		.byte	0x3
 6831 0a25 00000000 		.4byte	flag_receive_ADC
 6832 0a29 20       		.uleb128 0x20
 6833 0a2a 26030000 		.4byte	.LASF141
 6834 0a2e 05       		.byte	0x5
 6835 0a2f 26       		.byte	0x26
 6836 0a30 DB000000 		.4byte	0xdb
 6837 0a34 05       		.uleb128 0x5
 6838 0a35 03       		.byte	0x3
 6839 0a36 00000000 		.4byte	adc_result
 6840 0a3a 20       		.uleb128 0x20
 6841 0a3b 62000000 		.4byte	.LASF142
 6842 0a3f 05       		.byte	0x5
 6843 0a40 28       		.byte	0x28
 6844 0a41 AB000000 		.4byte	0xab
 6845 0a45 05       		.uleb128 0x5
 6846 0a46 03       		.byte	0x3
 6847 0a47 00000000 		.4byte	direction
 6848 0a4b 20       		.uleb128 0x20
 6849 0a4c 61060000 		.4byte	.LASF143
 6850 0a50 05       		.byte	0x5
 6851 0a51 2B       		.byte	0x2b
 6852 0a52 AB000000 		.4byte	0xab
 6853 0a56 05       		.uleb128 0x5
 6854 0a57 03       		.byte	0x3
 6855 0a58 00000000 		.4byte	BIN_ENABLED
 6856 0a5c 20       		.uleb128 0x20
 6857 0a5d B1080000 		.4byte	.LASF144
 6858 0a61 05       		.byte	0x5
 6859 0a62 2D       		.byte	0x2d
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 144


 6860 0a63 AB000000 		.4byte	0xab
 6861 0a67 05       		.uleb128 0x5
 6862 0a68 03       		.byte	0x3
 6863 0a69 00000000 		.4byte	BT_ENABLED
 6864 0a6d 20       		.uleb128 0x20
 6865 0a6e 65020000 		.4byte	.LASF145
 6866 0a72 05       		.byte	0x5
 6867 0a73 32       		.byte	0x32
 6868 0a74 AB000000 		.4byte	0xab
 6869 0a78 05       		.uleb128 0x5
 6870 0a79 03       		.byte	0x3
 6871 0a7a 00000000 		.4byte	flag_calc_wheelspeed
 6872 0a7e 20       		.uleb128 0x20
 6873 0a7f 93020000 		.4byte	.LASF146
 6874 0a83 05       		.byte	0x5
 6875 0a84 33       		.byte	0x33
 6876 0a85 DB000000 		.4byte	0xdb
 6877 0a89 05       		.uleb128 0x5
 6878 0a8a 03       		.byte	0x3
 6879 0a8b 00000000 		.4byte	quad_count1
 6880 0a8f 20       		.uleb128 0x20
 6881 0a90 9F020000 		.4byte	.LASF147
 6882 0a94 05       		.byte	0x5
 6883 0a95 34       		.byte	0x34
 6884 0a96 DB000000 		.4byte	0xdb
 6885 0a9a 05       		.uleb128 0x5
 6886 0a9b 03       		.byte	0x3
 6887 0a9c 00000000 		.4byte	quad_count2
 6888 0aa0 20       		.uleb128 0x20
 6889 0aa1 31060000 		.4byte	.LASF148
 6890 0aa5 05       		.byte	0x5
 6891 0aa6 35       		.byte	0x35
 6892 0aa7 DB000000 		.4byte	0xdb
 6893 0aab 05       		.uleb128 0x5
 6894 0aac 03       		.byte	0x3
 6895 0aad 00000000 		.4byte	last_quad_count1
 6896 0ab1 20       		.uleb128 0x20
 6897 0ab2 42060000 		.4byte	.LASF149
 6898 0ab6 05       		.byte	0x5
 6899 0ab7 36       		.byte	0x36
 6900 0ab8 DB000000 		.4byte	0xdb
 6901 0abc 05       		.uleb128 0x5
 6902 0abd 03       		.byte	0x3
 6903 0abe 00000000 		.4byte	last_quad_count2
 6904 0ac2 20       		.uleb128 0x20
 6905 0ac3 47090000 		.4byte	.LASF150
 6906 0ac7 05       		.byte	0x5
 6907 0ac8 37       		.byte	0x37
 6908 0ac9 DB000000 		.4byte	0xdb
 6909 0acd 05       		.uleb128 0x5
 6910 0ace 03       		.byte	0x3
 6911 0acf 00000000 		.4byte	quad_diff1
 6912 0ad3 20       		.uleb128 0x20
 6913 0ad4 52090000 		.4byte	.LASF151
 6914 0ad8 05       		.byte	0x5
 6915 0ad9 38       		.byte	0x38
 6916 0ada DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 145


 6917 0ade 05       		.uleb128 0x5
 6918 0adf 03       		.byte	0x3
 6919 0ae0 00000000 		.4byte	quad_diff2
 6920 0ae4 20       		.uleb128 0x20
 6921 0ae5 A4010000 		.4byte	.LASF152
 6922 0ae9 05       		.byte	0x5
 6923 0aea 39       		.byte	0x39
 6924 0aeb AB000000 		.4byte	0xab
 6925 0aef 05       		.uleb128 0x5
 6926 0af0 03       		.byte	0x3
 6927 0af1 00000000 		.4byte	deadzone
 6928 0af5 20       		.uleb128 0x20
 6929 0af6 0E090000 		.4byte	.LASF153
 6930 0afa 05       		.byte	0x5
 6931 0afb 3C       		.byte	0x3c
 6932 0afc DB000000 		.4byte	0xdb
 6933 0b00 05       		.uleb128 0x5
 6934 0b01 03       		.byte	0x3
 6935 0b02 00000000 		.4byte	start_turn_count
 6936 0b06 20       		.uleb128 0x20
 6937 0b07 69080000 		.4byte	.LASF154
 6938 0b0b 05       		.byte	0x5
 6939 0b0c 3F       		.byte	0x3f
 6940 0b0d DB000000 		.4byte	0xdb
 6941 0b11 05       		.uleb128 0x5
 6942 0b12 03       		.byte	0x3
 6943 0b13 00000000 		.4byte	left_duty_cycle
 6944 0b17 20       		.uleb128 0x20
 6945 0b18 0B030000 		.4byte	.LASF155
 6946 0b1c 05       		.byte	0x5
 6947 0b1d 40       		.byte	0x40
 6948 0b1e DB000000 		.4byte	0xdb
 6949 0b22 05       		.uleb128 0x5
 6950 0b23 03       		.byte	0x3
 6951 0b24 00000000 		.4byte	right_duty_cycle
 6952 0b28 20       		.uleb128 0x20
 6953 0b29 C4070000 		.4byte	.LASF156
 6954 0b2d 05       		.byte	0x5
 6955 0b2e 43       		.byte	0x43
 6956 0b2f DB000000 		.4byte	0xdb
 6957 0b33 05       		.uleb128 0x5
 6958 0b34 03       		.byte	0x3
 6959 0b35 00000000 		.4byte	leftSpeedLimit
 6960 0b39 20       		.uleb128 0x20
 6961 0b3a AB020000 		.4byte	.LASF157
 6962 0b3e 05       		.byte	0x5
 6963 0b3f 44       		.byte	0x44
 6964 0b40 DB000000 		.4byte	0xdb
 6965 0b44 05       		.uleb128 0x5
 6966 0b45 03       		.byte	0x3
 6967 0b46 00000000 		.4byte	rightSpeedLimit
 6968 0b4a 20       		.uleb128 0x20
 6969 0b4b EB000000 		.4byte	.LASF158
 6970 0b4f 05       		.byte	0x5
 6971 0b50 47       		.byte	0x47
 6972 0b51 DB000000 		.4byte	0xdb
 6973 0b55 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 146


 6974 0b56 03       		.byte	0x3
 6975 0b57 00000000 		.4byte	target_distance_cm
 6976 0b5b 20       		.uleb128 0x20
 6977 0b5c 86080000 		.4byte	.LASF159
 6978 0b60 05       		.byte	0x5
 6979 0b61 49       		.byte	0x49
 6980 0b62 DB000000 		.4byte	0xdb
 6981 0b66 05       		.uleb128 0x5
 6982 0b67 03       		.byte	0x3
 6983 0b68 00000000 		.4byte	accum_dist
 6984 0b6c 20       		.uleb128 0x20
 6985 0b6d A4050000 		.4byte	.LASF160
 6986 0b71 05       		.byte	0x5
 6987 0b72 4A       		.byte	0x4a
 6988 0b73 DB000000 		.4byte	0xdb
 6989 0b77 05       		.uleb128 0x5
 6990 0b78 03       		.byte	0x3
 6991 0b79 00000000 		.4byte	target_distance_quad
 6992 0b7d 20       		.uleb128 0x20
 6993 0b7e E3080000 		.4byte	.LASF161
 6994 0b82 05       		.byte	0x5
 6995 0b83 4B       		.byte	0x4b
 6996 0b84 AB000000 		.4byte	0xab
 6997 0b88 05       		.uleb128 0x5
 6998 0b89 03       		.byte	0x3
 6999 0b8a 00000000 		.4byte	reached_target
 7000 0b8e 20       		.uleb128 0x20
 7001 0b8f 25090000 		.4byte	.LASF162
 7002 0b93 05       		.byte	0x5
 7003 0b94 4C       		.byte	0x4c
 7004 0b95 AB000000 		.4byte	0xab
 7005 0b99 05       		.uleb128 0x5
 7006 0b9a 03       		.byte	0x3
 7007 0b9b 00000000 		.4byte	overshot_target
 7008 0b9f 20       		.uleb128 0x20
 7009 0ba0 E5010000 		.4byte	.LASF163
 7010 0ba4 05       		.byte	0x5
 7011 0ba5 4D       		.byte	0x4d
 7012 0ba6 E7000000 		.4byte	0xe7
 7013 0baa 05       		.uleb128 0x5
 7014 0bab 03       		.byte	0x3
 7015 0bac 00000000 		.4byte	quad_per_cm
 7016 0bb0 20       		.uleb128 0x20
 7017 0bb1 24080000 		.4byte	.LASF164
 7018 0bb5 05       		.byte	0x5
 7019 0bb6 50       		.byte	0x50
 7020 0bb7 AB000000 		.4byte	0xab
 7021 0bbb 05       		.uleb128 0x5
 7022 0bbc 03       		.byte	0x3
 7023 0bbd 00000000 		.4byte	initial_pos_valid
 7024 0bc1 20       		.uleb128 0x20
 7025 0bc2 F4050000 		.4byte	.LASF165
 7026 0bc6 05       		.byte	0x5
 7027 0bc7 51       		.byte	0x51
 7028 0bc8 DB000000 		.4byte	0xdb
 7029 0bcc 05       		.uleb128 0x5
 7030 0bcd 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 147


 7031 0bce 00000000 		.4byte	initial_x_pos
 7032 0bd2 20       		.uleb128 0x20
 7033 0bd3 47000000 		.4byte	.LASF166
 7034 0bd7 05       		.byte	0x5
 7035 0bd8 52       		.byte	0x52
 7036 0bd9 DB000000 		.4byte	0xdb
 7037 0bdd 05       		.uleb128 0x5
 7038 0bde 03       		.byte	0x3
 7039 0bdf 00000000 		.4byte	initial_y_pos
 7040 0be3 20       		.uleb128 0x20
 7041 0be4 DC040000 		.4byte	.LASF167
 7042 0be8 05       		.byte	0x5
 7043 0be9 55       		.byte	0x55
 7044 0bea AB000000 		.4byte	0xab
 7045 0bee 05       		.uleb128 0x5
 7046 0bef 03       		.byte	0x3
 7047 0bf0 00000000 		.4byte	brakeFlag
 7048 0bf4 20       		.uleb128 0x20
 7049 0bf5 1C060000 		.4byte	.LASF168
 7050 0bf9 05       		.byte	0x5
 7051 0bfa 56       		.byte	0x56
 7052 0bfb AB000000 		.4byte	0xab
 7053 0bff 05       		.uleb128 0x5
 7054 0c00 03       		.byte	0x3
 7055 0c01 00000000 		.4byte	portOpen
 7056 0c05 07       		.uleb128 0x7
 7057 0c06 AB000000 		.4byte	0xab
 7058 0c0a 150C0000 		.4byte	0xc15
 7059 0c0e 08       		.uleb128 0x8
 7060 0c0f 81000000 		.4byte	0x81
 7061 0c13 04       		.byte	0x4
 7062 0c14 00       		.byte	0
 7063 0c15 20       		.uleb128 0x20
 7064 0c16 65010000 		.4byte	.LASF169
 7065 0c1a 05       		.byte	0x5
 7066 0c1b 59       		.byte	0x59
 7067 0c1c 050C0000 		.4byte	0xc05
 7068 0c20 05       		.uleb128 0x5
 7069 0c21 03       		.byte	0x3
 7070 0c22 00000000 		.4byte	frontSensors
 7071 0c26 20       		.uleb128 0x20
 7072 0c27 EB030000 		.4byte	.LASF170
 7073 0c2b 05       		.byte	0x5
 7074 0c2c 5A       		.byte	0x5a
 7075 0c2d AB000000 		.4byte	0xab
 7076 0c31 05       		.uleb128 0x5
 7077 0c32 03       		.byte	0x3
 7078 0c33 00000000 		.4byte	leftOn
 7079 0c37 20       		.uleb128 0x20
 7080 0c38 A9080000 		.4byte	.LASF171
 7081 0c3c 05       		.byte	0x5
 7082 0c3d 5B       		.byte	0x5b
 7083 0c3e AB000000 		.4byte	0xab
 7084 0c42 05       		.uleb128 0x5
 7085 0c43 03       		.byte	0x3
 7086 0c44 00000000 		.4byte	rightOn
 7087 0c48 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 148


 7088 0c49 87020000 		.4byte	.LASF172
 7089 0c4d 05       		.byte	0x5
 7090 0c4e 5F       		.byte	0x5f
 7091 0c4f DB000000 		.4byte	0xdb
 7092 0c53 05       		.uleb128 0x5
 7093 0c54 03       		.byte	0x3
 7094 0c55 00000000 		.4byte	prevVoltage
 7095 0c59 20       		.uleb128 0x20
 7096 0c5a 47080000 		.4byte	.LASF173
 7097 0c5e 05       		.byte	0x5
 7098 0c5f 60       		.byte	0x60
 7099 0c60 DB000000 		.4byte	0xdb
 7100 0c64 05       		.uleb128 0x5
 7101 0c65 03       		.byte	0x3
 7102 0c66 00000000 		.4byte	prevVoltage2
 7103 0c6a 07       		.uleb128 0x7
 7104 0c6b 8E000000 		.4byte	0x8e
 7105 0c6f 7A0C0000 		.4byte	0xc7a
 7106 0c73 08       		.uleb128 0x8
 7107 0c74 81000000 		.4byte	0x81
 7108 0c78 3F       		.byte	0x3f
 7109 0c79 00       		.byte	0
 7110 0c7a 20       		.uleb128 0x20
 7111 0c7b AE070000 		.4byte	.LASF174
 7112 0c7f 05       		.byte	0x5
 7113 0c80 66       		.byte	0x66
 7114 0c81 6A0C0000 		.4byte	0xc6a
 7115 0c85 05       		.uleb128 0x5
 7116 0c86 03       		.byte	0x3
 7117 0c87 00000000 		.4byte	displaystring
 7118 0c8b 20       		.uleb128 0x20
 7119 0c8c 60020000 		.4byte	.LASF175
 7120 0c90 05       		.byte	0x5
 7121 0c91 67       		.byte	0x67
 7122 0c92 6A0C0000 		.4byte	0xc6a
 7123 0c96 05       		.uleb128 0x5
 7124 0c97 03       		.byte	0x3
 7125 0c98 00000000 		.4byte	line
 7126 0c9c 20       		.uleb128 0x20
 7127 0c9d 93000000 		.4byte	.LASF176
 7128 0ca1 05       		.byte	0x5
 7129 0ca2 67       		.byte	0x67
 7130 0ca3 6A0C0000 		.4byte	0xc6a
 7131 0ca7 05       		.uleb128 0x5
 7132 0ca8 03       		.byte	0x3
 7133 0ca9 00000000 		.4byte	entry
 7134 0cad 07       		.uleb128 0x7
 7135 0cae AB000000 		.4byte	0xab
 7136 0cb2 BD0C0000 		.4byte	0xcbd
 7137 0cb6 08       		.uleb128 0x8
 7138 0cb7 81000000 		.4byte	0x81
 7139 0cbb 3F       		.byte	0x3f
 7140 0cbc 00       		.byte	0
 7141 0cbd 20       		.uleb128 0x20
 7142 0cbe 0A080000 		.4byte	.LASF177
 7143 0cc2 05       		.byte	0x5
 7144 0cc3 68       		.byte	0x68
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 149


 7145 0cc4 AD0C0000 		.4byte	0xcad
 7146 0cc8 05       		.uleb128 0x5
 7147 0cc9 03       		.byte	0x3
 7148 0cca 00000000 		.4byte	usbBuffer
 7149 0cce 20       		.uleb128 0x20
 7150 0ccf 89010000 		.4byte	.LASF178
 7151 0cd3 05       		.byte	0x5
 7152 0cd4 7D       		.byte	0x7d
 7153 0cd5 86010000 		.4byte	0x186
 7154 0cd9 05       		.uleb128 0x5
 7155 0cda 03       		.byte	0x3
 7156 0cdb 00000000 		.4byte	buffer_state
 7157 0cdf 20       		.uleb128 0x20
 7158 0ce0 A2040000 		.4byte	.LASF179
 7159 0ce4 05       		.byte	0x5
 7160 0ce5 7E       		.byte	0x7e
 7161 0ce6 86010000 		.4byte	0x186
 7162 0cea 05       		.uleb128 0x5
 7163 0ceb 03       		.byte	0x3
 7164 0cec 00000000 		.4byte	system_state
 7165 0cf0 20       		.uleb128 0x20
 7166 0cf1 F9040000 		.4byte	.LASF180
 7167 0cf5 05       		.byte	0x5
 7168 0cf6 80       		.byte	0x80
 7169 0cf7 0C010000 		.4byte	0x10c
 7170 0cfb 05       		.uleb128 0x5
 7171 0cfc 03       		.byte	0x3
 7172 0cfd 00000000 		.4byte	prev_movement_state
 7173 0d01 20       		.uleb128 0x20
 7174 0d02 9A080000 		.4byte	.LASF181
 7175 0d06 05       		.byte	0x5
 7176 0d07 81       		.byte	0x81
 7177 0d08 0C010000 		.4byte	0x10c
 7178 0d0c 05       		.uleb128 0x5
 7179 0d0d 03       		.byte	0x3
 7180 0d0e 00000000 		.4byte	movement_state
 7181 0d12 20       		.uleb128 0x20
 7182 0d13 D7020000 		.4byte	.LASF182
 7183 0d17 05       		.byte	0x5
 7184 0d18 82       		.byte	0x82
 7185 0d19 49010000 		.4byte	0x149
 7186 0d1d 05       		.uleb128 0x5
 7187 0d1e 03       		.byte	0x3
 7188 0d1f 00000000 		.4byte	track_mode
 7189 0d23 20       		.uleb128 0x20
 7190 0d24 E5060000 		.4byte	.LASF183
 7191 0d28 05       		.byte	0x5
 7192 0d29 84       		.byte	0x84
 7193 0d2a AB000000 		.4byte	0xab
 7194 0d2e 05       		.uleb128 0x5
 7195 0d2f 03       		.byte	0x3
 7196 0d30 00000000 		.4byte	byteCount
 7197 0d34 07       		.uleb128 0x7
 7198 0d35 8E000000 		.4byte	0x8e
 7199 0d39 440D0000 		.4byte	0xd44
 7200 0d3d 08       		.uleb128 0x8
 7201 0d3e 81000000 		.4byte	0x81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 150


 7202 0d42 01       		.byte	0x1
 7203 0d43 00       		.byte	0
 7204 0d44 20       		.uleb128 0x20
 7205 0d45 E4070000 		.4byte	.LASF184
 7206 0d49 05       		.byte	0x5
 7207 0d4a 85       		.byte	0x85
 7208 0d4b 340D0000 		.4byte	0xd34
 7209 0d4f 05       		.uleb128 0x5
 7210 0d50 03       		.byte	0x3
 7211 0d51 00000000 		.4byte	packet
 7212 0d55 20       		.uleb128 0x20
 7213 0d56 1F090000 		.4byte	.LASF185
 7214 0d5a 05       		.byte	0x5
 7215 0d5b 89       		.byte	0x89
 7216 0d5c EE000000 		.4byte	0xee
 7217 0d60 05       		.uleb128 0x5
 7218 0d61 03       		.byte	0x3
 7219 0d62 00000000 		.4byte	speed
 7220 0d66 20       		.uleb128 0x20
 7221 0d67 DA030000 		.4byte	.LASF186
 7222 0d6b 01       		.byte	0x1
 7223 0d6c 25       		.byte	0x25
 7224 0d6d B7000000 		.4byte	0xb7
 7225 0d71 05       		.uleb128 0x5
 7226 0d72 03       		.byte	0x3
 7227 0d73 00000000 		.4byte	instructionCount
 7228 0d77 20       		.uleb128 0x20
 7229 0d78 31030000 		.4byte	.LASF187
 7230 0d7c 01       		.byte	0x1
 7231 0d7d 27       		.byte	0x27
 7232 0d7e A0000000 		.4byte	0xa0
 7233 0d82 05       		.uleb128 0x5
 7234 0d83 03       		.byte	0x3
 7235 0d84 00000000 		.4byte	sensorsDisabled
 7236 0d88 07       		.uleb128 0x7
 7237 0d89 A0000000 		.4byte	0xa0
 7238 0d8d 9E0D0000 		.4byte	0xd9e
 7239 0d91 08       		.uleb128 0x8
 7240 0d92 81000000 		.4byte	0x81
 7241 0d96 0E       		.byte	0xe
 7242 0d97 08       		.uleb128 0x8
 7243 0d98 81000000 		.4byte	0x81
 7244 0d9c 12       		.byte	0x12
 7245 0d9d 00       		.byte	0
 7246 0d9e 1F       		.uleb128 0x1f
 7247 0d9f 6D617000 		.ascii	"map\000"
 7248 0da3 01       		.byte	0x1
 7249 0da4 43       		.byte	0x43
 7250 0da5 880D0000 		.4byte	0xd88
 7251 0da9 05       		.uleb128 0x5
 7252 0daa 03       		.byte	0x3
 7253 0dab 00000000 		.4byte	map
 7254 0daf 07       		.uleb128 0x7
 7255 0db0 A0000000 		.4byte	0xa0
 7256 0db4 C50D0000 		.4byte	0xdc5
 7257 0db8 08       		.uleb128 0x8
 7258 0db9 81000000 		.4byte	0x81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 151


 7259 0dbd 05       		.byte	0x5
 7260 0dbe 08       		.uleb128 0x8
 7261 0dbf 81000000 		.4byte	0x81
 7262 0dc3 01       		.byte	0x1
 7263 0dc4 00       		.byte	0
 7264 0dc5 20       		.uleb128 0x20
 7265 0dc6 71070000 		.4byte	.LASF188
 7266 0dca 01       		.byte	0x1
 7267 0dcb 64       		.byte	0x64
 7268 0dcc AF0D0000 		.4byte	0xdaf
 7269 0dd0 05       		.uleb128 0x5
 7270 0dd1 03       		.byte	0x3
 7271 0dd2 00000000 		.4byte	food_list
 7272 0dd6 07       		.uleb128 0x7
 7273 0dd7 A0000000 		.4byte	0xa0
 7274 0ddb ED0D0000 		.4byte	0xded
 7275 0ddf 21       		.uleb128 0x21
 7276 0de0 81000000 		.4byte	0x81
 7277 0de4 1F03     		.2byte	0x31f
 7278 0de6 08       		.uleb128 0x8
 7279 0de7 81000000 		.4byte	0x81
 7280 0deb 02       		.byte	0x2
 7281 0dec 00       		.byte	0
 7282 0ded 20       		.uleb128 0x20
 7283 0dee 6C000000 		.4byte	.LASF189
 7284 0df2 01       		.byte	0x1
 7285 0df3 2B       		.byte	0x2b
 7286 0df4 D60D0000 		.4byte	0xdd6
 7287 0df8 05       		.uleb128 0x5
 7288 0df9 03       		.byte	0x3
 7289 0dfa 00000000 		.4byte	path
 7290 0dfe 20       		.uleb128 0x20
 7291 0dff 5D090000 		.4byte	.LASF190
 7292 0e03 01       		.byte	0x1
 7293 0e04 2C       		.byte	0x2c
 7294 0e05 F5000000 		.4byte	0xf5
 7295 0e09 05       		.uleb128 0x5
 7296 0e0a 03       		.byte	0x3
 7297 0e0b 00000000 		.4byte	start
 7298 0e0f 20       		.uleb128 0x20
 7299 0e10 E8020000 		.4byte	.LASF191
 7300 0e14 01       		.byte	0x1
 7301 0e15 2D       		.byte	0x2d
 7302 0e16 F5000000 		.4byte	0xf5
 7303 0e1a 05       		.uleb128 0x5
 7304 0e1b 03       		.byte	0x3
 7305 0e1c 00000000 		.4byte	destination
 7306 0e20 20       		.uleb128 0x20
 7307 0e21 B0000000 		.4byte	.LASF192
 7308 0e25 01       		.byte	0x1
 7309 0e26 29       		.byte	0x29
 7310 0e27 A0000000 		.4byte	0xa0
 7311 0e2b 05       		.uleb128 0x5
 7312 0e2c 03       		.byte	0x3
 7313 0e2d 00000000 		.4byte	robot_direction
 7314 0e31 20       		.uleb128 0x20
 7315 0e32 42070000 		.4byte	.LASF193
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 152


 7316 0e36 07       		.byte	0x7
 7317 0e37 22       		.byte	0x22
 7318 0e38 A0000000 		.4byte	0xa0
 7319 0e3c 05       		.uleb128 0x5
 7320 0e3d 03       		.byte	0x3
 7321 0e3e 00000000 		.4byte	tracked_direction
 7322 0e42 20       		.uleb128 0x20
 7323 0e43 86030000 		.4byte	.LASF194
 7324 0e47 01       		.byte	0x1
 7325 0e48 69       		.byte	0x69
 7326 0e49 A0000000 		.4byte	0xa0
 7327 0e4d 05       		.uleb128 0x5
 7328 0e4e 03       		.byte	0x3
 7329 0e4f 00000000 		.4byte	food_length
 7330 0e53 07       		.uleb128 0x7
 7331 0e54 8E000000 		.4byte	0x8e
 7332 0e58 640E0000 		.4byte	0xe64
 7333 0e5c 21       		.uleb128 0x21
 7334 0e5d 81000000 		.4byte	0x81
 7335 0e61 1F03     		.2byte	0x31f
 7336 0e63 00       		.byte	0
 7337 0e64 20       		.uleb128 0x20
 7338 0e65 5E070000 		.4byte	.LASF195
 7339 0e69 01       		.byte	0x1
 7340 0e6a 24       		.byte	0x24
 7341 0e6b 530E0000 		.4byte	0xe53
 7342 0e6f 05       		.uleb128 0x5
 7343 0e70 03       		.byte	0x3
 7344 0e71 00000000 		.4byte	instructions
 7345 0e75 20       		.uleb128 0x20
 7346 0e76 BB020000 		.4byte	.LASF196
 7347 0e7a 01       		.byte	0x1
 7348 0e7b 26       		.byte	0x26
 7349 0e7c B7000000 		.4byte	0xb7
 7350 0e80 05       		.uleb128 0x5
 7351 0e81 03       		.byte	0x3
 7352 0e82 00000000 		.4byte	instructionLength
 7353 0e86 22       		.uleb128 0x22
 7354 0e87 39000000 		.4byte	.LASF197
 7355 0e8b 01       		.byte	0x1
 7356 0e8c 2804     		.2byte	0x428
 7357 0e8e B7000000 		.4byte	0xb7
 7358 0e92 05       		.uleb128 0x5
 7359 0e93 03       		.byte	0x3
 7360 0e94 00000000 		.4byte	leftTurnCount
 7361 0e98 22       		.uleb128 0x22
 7362 0e99 47040000 		.4byte	.LASF198
 7363 0e9d 01       		.byte	0x1
 7364 0e9e 2904     		.2byte	0x429
 7365 0ea0 B7000000 		.4byte	0xb7
 7366 0ea4 05       		.uleb128 0x5
 7367 0ea5 03       		.byte	0x3
 7368 0ea6 00000000 		.4byte	rightTurnCount
 7369 0eaa 00       		.byte	0
 7370              		.section	.debug_abbrev,"",%progbits
 7371              	.Ldebug_abbrev0:
 7372 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 153


 7373 0001 11       		.uleb128 0x11
 7374 0002 01       		.byte	0x1
 7375 0003 25       		.uleb128 0x25
 7376 0004 0E       		.uleb128 0xe
 7377 0005 13       		.uleb128 0x13
 7378 0006 0B       		.uleb128 0xb
 7379 0007 03       		.uleb128 0x3
 7380 0008 0E       		.uleb128 0xe
 7381 0009 1B       		.uleb128 0x1b
 7382 000a 0E       		.uleb128 0xe
 7383 000b 55       		.uleb128 0x55
 7384 000c 17       		.uleb128 0x17
 7385 000d 11       		.uleb128 0x11
 7386 000e 01       		.uleb128 0x1
 7387 000f 10       		.uleb128 0x10
 7388 0010 17       		.uleb128 0x17
 7389 0011 00       		.byte	0
 7390 0012 00       		.byte	0
 7391 0013 02       		.uleb128 0x2
 7392 0014 24       		.uleb128 0x24
 7393 0015 00       		.byte	0
 7394 0016 0B       		.uleb128 0xb
 7395 0017 0B       		.uleb128 0xb
 7396 0018 3E       		.uleb128 0x3e
 7397 0019 0B       		.uleb128 0xb
 7398 001a 03       		.uleb128 0x3
 7399 001b 0E       		.uleb128 0xe
 7400 001c 00       		.byte	0
 7401 001d 00       		.byte	0
 7402 001e 03       		.uleb128 0x3
 7403 001f 16       		.uleb128 0x16
 7404 0020 00       		.byte	0
 7405 0021 03       		.uleb128 0x3
 7406 0022 0E       		.uleb128 0xe
 7407 0023 3A       		.uleb128 0x3a
 7408 0024 0B       		.uleb128 0xb
 7409 0025 3B       		.uleb128 0x3b
 7410 0026 0B       		.uleb128 0xb
 7411 0027 49       		.uleb128 0x49
 7412 0028 13       		.uleb128 0x13
 7413 0029 00       		.byte	0
 7414 002a 00       		.byte	0
 7415 002b 04       		.uleb128 0x4
 7416 002c 24       		.uleb128 0x24
 7417 002d 00       		.byte	0
 7418 002e 0B       		.uleb128 0xb
 7419 002f 0B       		.uleb128 0xb
 7420 0030 3E       		.uleb128 0x3e
 7421 0031 0B       		.uleb128 0xb
 7422 0032 03       		.uleb128 0x3
 7423 0033 08       		.uleb128 0x8
 7424 0034 00       		.byte	0
 7425 0035 00       		.byte	0
 7426 0036 05       		.uleb128 0x5
 7427 0037 0F       		.uleb128 0xf
 7428 0038 00       		.byte	0
 7429 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 154


 7430 003a 0B       		.uleb128 0xb
 7431 003b 49       		.uleb128 0x49
 7432 003c 13       		.uleb128 0x13
 7433 003d 00       		.byte	0
 7434 003e 00       		.byte	0
 7435 003f 06       		.uleb128 0x6
 7436 0040 16       		.uleb128 0x16
 7437 0041 00       		.byte	0
 7438 0042 03       		.uleb128 0x3
 7439 0043 0E       		.uleb128 0xe
 7440 0044 3A       		.uleb128 0x3a
 7441 0045 0B       		.uleb128 0xb
 7442 0046 3B       		.uleb128 0x3b
 7443 0047 05       		.uleb128 0x5
 7444 0048 49       		.uleb128 0x49
 7445 0049 13       		.uleb128 0x13
 7446 004a 00       		.byte	0
 7447 004b 00       		.byte	0
 7448 004c 07       		.uleb128 0x7
 7449 004d 01       		.uleb128 0x1
 7450 004e 01       		.byte	0x1
 7451 004f 49       		.uleb128 0x49
 7452 0050 13       		.uleb128 0x13
 7453 0051 01       		.uleb128 0x1
 7454 0052 13       		.uleb128 0x13
 7455 0053 00       		.byte	0
 7456 0054 00       		.byte	0
 7457 0055 08       		.uleb128 0x8
 7458 0056 21       		.uleb128 0x21
 7459 0057 00       		.byte	0
 7460 0058 49       		.uleb128 0x49
 7461 0059 13       		.uleb128 0x13
 7462 005a 2F       		.uleb128 0x2f
 7463 005b 0B       		.uleb128 0xb
 7464 005c 00       		.byte	0
 7465 005d 00       		.byte	0
 7466 005e 09       		.uleb128 0x9
 7467 005f 04       		.uleb128 0x4
 7468 0060 01       		.byte	0x1
 7469 0061 03       		.uleb128 0x3
 7470 0062 0E       		.uleb128 0xe
 7471 0063 0B       		.uleb128 0xb
 7472 0064 0B       		.uleb128 0xb
 7473 0065 3A       		.uleb128 0x3a
 7474 0066 0B       		.uleb128 0xb
 7475 0067 3B       		.uleb128 0x3b
 7476 0068 0B       		.uleb128 0xb
 7477 0069 01       		.uleb128 0x1
 7478 006a 13       		.uleb128 0x13
 7479 006b 00       		.byte	0
 7480 006c 00       		.byte	0
 7481 006d 0A       		.uleb128 0xa
 7482 006e 28       		.uleb128 0x28
 7483 006f 00       		.byte	0
 7484 0070 03       		.uleb128 0x3
 7485 0071 0E       		.uleb128 0xe
 7486 0072 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 155


 7487 0073 0D       		.uleb128 0xd
 7488 0074 00       		.byte	0
 7489 0075 00       		.byte	0
 7490 0076 0B       		.uleb128 0xb
 7491 0077 13       		.uleb128 0x13
 7492 0078 01       		.byte	0x1
 7493 0079 03       		.uleb128 0x3
 7494 007a 0E       		.uleb128 0xe
 7495 007b 0B       		.uleb128 0xb
 7496 007c 0B       		.uleb128 0xb
 7497 007d 3A       		.uleb128 0x3a
 7498 007e 0B       		.uleb128 0xb
 7499 007f 3B       		.uleb128 0x3b
 7500 0080 0B       		.uleb128 0xb
 7501 0081 01       		.uleb128 0x1
 7502 0082 13       		.uleb128 0x13
 7503 0083 00       		.byte	0
 7504 0084 00       		.byte	0
 7505 0085 0C       		.uleb128 0xc
 7506 0086 0D       		.uleb128 0xd
 7507 0087 00       		.byte	0
 7508 0088 03       		.uleb128 0x3
 7509 0089 0E       		.uleb128 0xe
 7510 008a 3A       		.uleb128 0x3a
 7511 008b 0B       		.uleb128 0xb
 7512 008c 3B       		.uleb128 0x3b
 7513 008d 0B       		.uleb128 0xb
 7514 008e 49       		.uleb128 0x49
 7515 008f 13       		.uleb128 0x13
 7516 0090 38       		.uleb128 0x38
 7517 0091 0B       		.uleb128 0xb
 7518 0092 00       		.byte	0
 7519 0093 00       		.byte	0
 7520 0094 0D       		.uleb128 0xd
 7521 0095 2E       		.uleb128 0x2e
 7522 0096 00       		.byte	0
 7523 0097 3F       		.uleb128 0x3f
 7524 0098 19       		.uleb128 0x19
 7525 0099 03       		.uleb128 0x3
 7526 009a 0E       		.uleb128 0xe
 7527 009b 3A       		.uleb128 0x3a
 7528 009c 0B       		.uleb128 0xb
 7529 009d 3B       		.uleb128 0x3b
 7530 009e 0B       		.uleb128 0xb
 7531 009f 27       		.uleb128 0x27
 7532 00a0 19       		.uleb128 0x19
 7533 00a1 11       		.uleb128 0x11
 7534 00a2 01       		.uleb128 0x1
 7535 00a3 12       		.uleb128 0x12
 7536 00a4 06       		.uleb128 0x6
 7537 00a5 40       		.uleb128 0x40
 7538 00a6 18       		.uleb128 0x18
 7539 00a7 9742     		.uleb128 0x2117
 7540 00a9 19       		.uleb128 0x19
 7541 00aa 00       		.byte	0
 7542 00ab 00       		.byte	0
 7543 00ac 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 156


 7544 00ad 2E       		.uleb128 0x2e
 7545 00ae 00       		.byte	0
 7546 00af 3F       		.uleb128 0x3f
 7547 00b0 19       		.uleb128 0x19
 7548 00b1 03       		.uleb128 0x3
 7549 00b2 0E       		.uleb128 0xe
 7550 00b3 3A       		.uleb128 0x3a
 7551 00b4 0B       		.uleb128 0xb
 7552 00b5 3B       		.uleb128 0x3b
 7553 00b6 0B       		.uleb128 0xb
 7554 00b7 27       		.uleb128 0x27
 7555 00b8 19       		.uleb128 0x19
 7556 00b9 11       		.uleb128 0x11
 7557 00ba 01       		.uleb128 0x1
 7558 00bb 12       		.uleb128 0x12
 7559 00bc 06       		.uleb128 0x6
 7560 00bd 40       		.uleb128 0x40
 7561 00be 18       		.uleb128 0x18
 7562 00bf 9642     		.uleb128 0x2116
 7563 00c1 19       		.uleb128 0x19
 7564 00c2 00       		.byte	0
 7565 00c3 00       		.byte	0
 7566 00c4 0F       		.uleb128 0xf
 7567 00c5 2E       		.uleb128 0x2e
 7568 00c6 01       		.byte	0x1
 7569 00c7 3F       		.uleb128 0x3f
 7570 00c8 19       		.uleb128 0x19
 7571 00c9 03       		.uleb128 0x3
 7572 00ca 0E       		.uleb128 0xe
 7573 00cb 3A       		.uleb128 0x3a
 7574 00cc 0B       		.uleb128 0xb
 7575 00cd 3B       		.uleb128 0x3b
 7576 00ce 0B       		.uleb128 0xb
 7577 00cf 27       		.uleb128 0x27
 7578 00d0 19       		.uleb128 0x19
 7579 00d1 11       		.uleb128 0x11
 7580 00d2 01       		.uleb128 0x1
 7581 00d3 12       		.uleb128 0x12
 7582 00d4 06       		.uleb128 0x6
 7583 00d5 40       		.uleb128 0x40
 7584 00d6 18       		.uleb128 0x18
 7585 00d7 9642     		.uleb128 0x2116
 7586 00d9 19       		.uleb128 0x19
 7587 00da 01       		.uleb128 0x1
 7588 00db 13       		.uleb128 0x13
 7589 00dc 00       		.byte	0
 7590 00dd 00       		.byte	0
 7591 00de 10       		.uleb128 0x10
 7592 00df 0B       		.uleb128 0xb
 7593 00e0 01       		.byte	0x1
 7594 00e1 11       		.uleb128 0x11
 7595 00e2 01       		.uleb128 0x1
 7596 00e3 12       		.uleb128 0x12
 7597 00e4 06       		.uleb128 0x6
 7598 00e5 01       		.uleb128 0x1
 7599 00e6 13       		.uleb128 0x13
 7600 00e7 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 157


 7601 00e8 00       		.byte	0
 7602 00e9 11       		.uleb128 0x11
 7603 00ea 34       		.uleb128 0x34
 7604 00eb 00       		.byte	0
 7605 00ec 03       		.uleb128 0x3
 7606 00ed 0E       		.uleb128 0xe
 7607 00ee 3A       		.uleb128 0x3a
 7608 00ef 0B       		.uleb128 0xb
 7609 00f0 3B       		.uleb128 0x3b
 7610 00f1 0B       		.uleb128 0xb
 7611 00f2 49       		.uleb128 0x49
 7612 00f3 13       		.uleb128 0x13
 7613 00f4 02       		.uleb128 0x2
 7614 00f5 18       		.uleb128 0x18
 7615 00f6 00       		.byte	0
 7616 00f7 00       		.byte	0
 7617 00f8 12       		.uleb128 0x12
 7618 00f9 0B       		.uleb128 0xb
 7619 00fa 01       		.byte	0x1
 7620 00fb 11       		.uleb128 0x11
 7621 00fc 01       		.uleb128 0x1
 7622 00fd 12       		.uleb128 0x12
 7623 00fe 06       		.uleb128 0x6
 7624 00ff 00       		.byte	0
 7625 0100 00       		.byte	0
 7626 0101 13       		.uleb128 0x13
 7627 0102 2E       		.uleb128 0x2e
 7628 0103 01       		.byte	0x1
 7629 0104 3F       		.uleb128 0x3f
 7630 0105 19       		.uleb128 0x19
 7631 0106 03       		.uleb128 0x3
 7632 0107 0E       		.uleb128 0xe
 7633 0108 3A       		.uleb128 0x3a
 7634 0109 0B       		.uleb128 0xb
 7635 010a 3B       		.uleb128 0x3b
 7636 010b 0B       		.uleb128 0xb
 7637 010c 49       		.uleb128 0x49
 7638 010d 13       		.uleb128 0x13
 7639 010e 11       		.uleb128 0x11
 7640 010f 01       		.uleb128 0x1
 7641 0110 12       		.uleb128 0x12
 7642 0111 06       		.uleb128 0x6
 7643 0112 40       		.uleb128 0x40
 7644 0113 18       		.uleb128 0x18
 7645 0114 9642     		.uleb128 0x2116
 7646 0116 19       		.uleb128 0x19
 7647 0117 01       		.uleb128 0x1
 7648 0118 13       		.uleb128 0x13
 7649 0119 00       		.byte	0
 7650 011a 00       		.byte	0
 7651 011b 14       		.uleb128 0x14
 7652 011c 34       		.uleb128 0x34
 7653 011d 00       		.byte	0
 7654 011e 03       		.uleb128 0x3
 7655 011f 0E       		.uleb128 0xe
 7656 0120 3A       		.uleb128 0x3a
 7657 0121 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 158


 7658 0122 3B       		.uleb128 0x3b
 7659 0123 05       		.uleb128 0x5
 7660 0124 49       		.uleb128 0x49
 7661 0125 13       		.uleb128 0x13
 7662 0126 02       		.uleb128 0x2
 7663 0127 18       		.uleb128 0x18
 7664 0128 00       		.byte	0
 7665 0129 00       		.byte	0
 7666 012a 15       		.uleb128 0x15
 7667 012b 34       		.uleb128 0x34
 7668 012c 00       		.byte	0
 7669 012d 03       		.uleb128 0x3
 7670 012e 08       		.uleb128 0x8
 7671 012f 3A       		.uleb128 0x3a
 7672 0130 0B       		.uleb128 0xb
 7673 0131 3B       		.uleb128 0x3b
 7674 0132 05       		.uleb128 0x5
 7675 0133 49       		.uleb128 0x49
 7676 0134 13       		.uleb128 0x13
 7677 0135 02       		.uleb128 0x2
 7678 0136 18       		.uleb128 0x18
 7679 0137 00       		.byte	0
 7680 0138 00       		.byte	0
 7681 0139 16       		.uleb128 0x16
 7682 013a 2E       		.uleb128 0x2e
 7683 013b 01       		.byte	0x1
 7684 013c 3F       		.uleb128 0x3f
 7685 013d 19       		.uleb128 0x19
 7686 013e 03       		.uleb128 0x3
 7687 013f 0E       		.uleb128 0xe
 7688 0140 3A       		.uleb128 0x3a
 7689 0141 0B       		.uleb128 0xb
 7690 0142 3B       		.uleb128 0x3b
 7691 0143 05       		.uleb128 0x5
 7692 0144 11       		.uleb128 0x11
 7693 0145 01       		.uleb128 0x1
 7694 0146 12       		.uleb128 0x12
 7695 0147 06       		.uleb128 0x6
 7696 0148 40       		.uleb128 0x40
 7697 0149 18       		.uleb128 0x18
 7698 014a 9742     		.uleb128 0x2117
 7699 014c 19       		.uleb128 0x19
 7700 014d 01       		.uleb128 0x1
 7701 014e 13       		.uleb128 0x13
 7702 014f 00       		.byte	0
 7703 0150 00       		.byte	0
 7704 0151 17       		.uleb128 0x17
 7705 0152 2E       		.uleb128 0x2e
 7706 0153 01       		.byte	0x1
 7707 0154 3F       		.uleb128 0x3f
 7708 0155 19       		.uleb128 0x19
 7709 0156 03       		.uleb128 0x3
 7710 0157 0E       		.uleb128 0xe
 7711 0158 3A       		.uleb128 0x3a
 7712 0159 0B       		.uleb128 0xb
 7713 015a 3B       		.uleb128 0x3b
 7714 015b 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 159


 7715 015c 27       		.uleb128 0x27
 7716 015d 19       		.uleb128 0x19
 7717 015e 11       		.uleb128 0x11
 7718 015f 01       		.uleb128 0x1
 7719 0160 12       		.uleb128 0x12
 7720 0161 06       		.uleb128 0x6
 7721 0162 40       		.uleb128 0x40
 7722 0163 18       		.uleb128 0x18
 7723 0164 9642     		.uleb128 0x2116
 7724 0166 19       		.uleb128 0x19
 7725 0167 01       		.uleb128 0x1
 7726 0168 13       		.uleb128 0x13
 7727 0169 00       		.byte	0
 7728 016a 00       		.byte	0
 7729 016b 18       		.uleb128 0x18
 7730 016c 05       		.uleb128 0x5
 7731 016d 00       		.byte	0
 7732 016e 03       		.uleb128 0x3
 7733 016f 08       		.uleb128 0x8
 7734 0170 3A       		.uleb128 0x3a
 7735 0171 0B       		.uleb128 0xb
 7736 0172 3B       		.uleb128 0x3b
 7737 0173 05       		.uleb128 0x5
 7738 0174 49       		.uleb128 0x49
 7739 0175 13       		.uleb128 0x13
 7740 0176 02       		.uleb128 0x2
 7741 0177 18       		.uleb128 0x18
 7742 0178 00       		.byte	0
 7743 0179 00       		.byte	0
 7744 017a 19       		.uleb128 0x19
 7745 017b 2E       		.uleb128 0x2e
 7746 017c 01       		.byte	0x1
 7747 017d 3F       		.uleb128 0x3f
 7748 017e 19       		.uleb128 0x19
 7749 017f 03       		.uleb128 0x3
 7750 0180 0E       		.uleb128 0xe
 7751 0181 3A       		.uleb128 0x3a
 7752 0182 0B       		.uleb128 0xb
 7753 0183 3B       		.uleb128 0x3b
 7754 0184 05       		.uleb128 0x5
 7755 0185 11       		.uleb128 0x11
 7756 0186 01       		.uleb128 0x1
 7757 0187 12       		.uleb128 0x12
 7758 0188 06       		.uleb128 0x6
 7759 0189 40       		.uleb128 0x40
 7760 018a 18       		.uleb128 0x18
 7761 018b 9642     		.uleb128 0x2116
 7762 018d 19       		.uleb128 0x19
 7763 018e 01       		.uleb128 0x1
 7764 018f 13       		.uleb128 0x13
 7765 0190 00       		.byte	0
 7766 0191 00       		.byte	0
 7767 0192 1A       		.uleb128 0x1a
 7768 0193 05       		.uleb128 0x5
 7769 0194 00       		.byte	0
 7770 0195 03       		.uleb128 0x3
 7771 0196 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 160


 7772 0197 3A       		.uleb128 0x3a
 7773 0198 0B       		.uleb128 0xb
 7774 0199 3B       		.uleb128 0x3b
 7775 019a 05       		.uleb128 0x5
 7776 019b 49       		.uleb128 0x49
 7777 019c 13       		.uleb128 0x13
 7778 019d 02       		.uleb128 0x2
 7779 019e 18       		.uleb128 0x18
 7780 019f 00       		.byte	0
 7781 01a0 00       		.byte	0
 7782 01a1 1B       		.uleb128 0x1b
 7783 01a2 2E       		.uleb128 0x2e
 7784 01a3 00       		.byte	0
 7785 01a4 3F       		.uleb128 0x3f
 7786 01a5 19       		.uleb128 0x19
 7787 01a6 03       		.uleb128 0x3
 7788 01a7 0E       		.uleb128 0xe
 7789 01a8 3A       		.uleb128 0x3a
 7790 01a9 0B       		.uleb128 0xb
 7791 01aa 3B       		.uleb128 0x3b
 7792 01ab 05       		.uleb128 0x5
 7793 01ac 11       		.uleb128 0x11
 7794 01ad 01       		.uleb128 0x1
 7795 01ae 12       		.uleb128 0x12
 7796 01af 06       		.uleb128 0x6
 7797 01b0 40       		.uleb128 0x40
 7798 01b1 18       		.uleb128 0x18
 7799 01b2 9642     		.uleb128 0x2116
 7800 01b4 19       		.uleb128 0x19
 7801 01b5 00       		.byte	0
 7802 01b6 00       		.byte	0
 7803 01b7 1C       		.uleb128 0x1c
 7804 01b8 2E       		.uleb128 0x2e
 7805 01b9 00       		.byte	0
 7806 01ba 3F       		.uleb128 0x3f
 7807 01bb 19       		.uleb128 0x19
 7808 01bc 03       		.uleb128 0x3
 7809 01bd 0E       		.uleb128 0xe
 7810 01be 3A       		.uleb128 0x3a
 7811 01bf 0B       		.uleb128 0xb
 7812 01c0 3B       		.uleb128 0x3b
 7813 01c1 05       		.uleb128 0x5
 7814 01c2 11       		.uleb128 0x11
 7815 01c3 01       		.uleb128 0x1
 7816 01c4 12       		.uleb128 0x12
 7817 01c5 06       		.uleb128 0x6
 7818 01c6 40       		.uleb128 0x40
 7819 01c7 18       		.uleb128 0x18
 7820 01c8 9742     		.uleb128 0x2117
 7821 01ca 19       		.uleb128 0x19
 7822 01cb 00       		.byte	0
 7823 01cc 00       		.byte	0
 7824 01cd 1D       		.uleb128 0x1d
 7825 01ce 34       		.uleb128 0x34
 7826 01cf 00       		.byte	0
 7827 01d0 03       		.uleb128 0x3
 7828 01d1 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 161


 7829 01d2 3A       		.uleb128 0x3a
 7830 01d3 0B       		.uleb128 0xb
 7831 01d4 3B       		.uleb128 0x3b
 7832 01d5 05       		.uleb128 0x5
 7833 01d6 49       		.uleb128 0x49
 7834 01d7 13       		.uleb128 0x13
 7835 01d8 3F       		.uleb128 0x3f
 7836 01d9 19       		.uleb128 0x19
 7837 01da 3C       		.uleb128 0x3c
 7838 01db 19       		.uleb128 0x19
 7839 01dc 00       		.byte	0
 7840 01dd 00       		.byte	0
 7841 01de 1E       		.uleb128 0x1e
 7842 01df 35       		.uleb128 0x35
 7843 01e0 00       		.byte	0
 7844 01e1 49       		.uleb128 0x49
 7845 01e2 13       		.uleb128 0x13
 7846 01e3 00       		.byte	0
 7847 01e4 00       		.byte	0
 7848 01e5 1F       		.uleb128 0x1f
 7849 01e6 34       		.uleb128 0x34
 7850 01e7 00       		.byte	0
 7851 01e8 03       		.uleb128 0x3
 7852 01e9 08       		.uleb128 0x8
 7853 01ea 3A       		.uleb128 0x3a
 7854 01eb 0B       		.uleb128 0xb
 7855 01ec 3B       		.uleb128 0x3b
 7856 01ed 0B       		.uleb128 0xb
 7857 01ee 49       		.uleb128 0x49
 7858 01ef 13       		.uleb128 0x13
 7859 01f0 3F       		.uleb128 0x3f
 7860 01f1 19       		.uleb128 0x19
 7861 01f2 02       		.uleb128 0x2
 7862 01f3 18       		.uleb128 0x18
 7863 01f4 00       		.byte	0
 7864 01f5 00       		.byte	0
 7865 01f6 20       		.uleb128 0x20
 7866 01f7 34       		.uleb128 0x34
 7867 01f8 00       		.byte	0
 7868 01f9 03       		.uleb128 0x3
 7869 01fa 0E       		.uleb128 0xe
 7870 01fb 3A       		.uleb128 0x3a
 7871 01fc 0B       		.uleb128 0xb
 7872 01fd 3B       		.uleb128 0x3b
 7873 01fe 0B       		.uleb128 0xb
 7874 01ff 49       		.uleb128 0x49
 7875 0200 13       		.uleb128 0x13
 7876 0201 3F       		.uleb128 0x3f
 7877 0202 19       		.uleb128 0x19
 7878 0203 02       		.uleb128 0x2
 7879 0204 18       		.uleb128 0x18
 7880 0205 00       		.byte	0
 7881 0206 00       		.byte	0
 7882 0207 21       		.uleb128 0x21
 7883 0208 21       		.uleb128 0x21
 7884 0209 00       		.byte	0
 7885 020a 49       		.uleb128 0x49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 162


 7886 020b 13       		.uleb128 0x13
 7887 020c 2F       		.uleb128 0x2f
 7888 020d 05       		.uleb128 0x5
 7889 020e 00       		.byte	0
 7890 020f 00       		.byte	0
 7891 0210 22       		.uleb128 0x22
 7892 0211 34       		.uleb128 0x34
 7893 0212 00       		.byte	0
 7894 0213 03       		.uleb128 0x3
 7895 0214 0E       		.uleb128 0xe
 7896 0215 3A       		.uleb128 0x3a
 7897 0216 0B       		.uleb128 0xb
 7898 0217 3B       		.uleb128 0x3b
 7899 0218 05       		.uleb128 0x5
 7900 0219 49       		.uleb128 0x49
 7901 021a 13       		.uleb128 0x13
 7902 021b 3F       		.uleb128 0x3f
 7903 021c 19       		.uleb128 0x19
 7904 021d 02       		.uleb128 0x2
 7905 021e 18       		.uleb128 0x18
 7906 021f 00       		.byte	0
 7907 0220 00       		.byte	0
 7908 0221 00       		.byte	0
 7909              		.section	.debug_aranges,"",%progbits
 7910 0000 6C010000 		.4byte	0x16c
 7911 0004 0200     		.2byte	0x2
 7912 0006 00000000 		.4byte	.Ldebug_info0
 7913 000a 04       		.byte	0x4
 7914 000b 00       		.byte	0
 7915 000c 0000     		.2byte	0
 7916 000e 0000     		.2byte	0
 7917 0010 00000000 		.4byte	.LFB63
 7918 0014 0C000000 		.4byte	.LFE63-.LFB63
 7919 0018 00000000 		.4byte	.LFB64
 7920 001c 2C000000 		.4byte	.LFE64-.LFB64
 7921 0020 00000000 		.4byte	.LFB65
 7922 0024 AC010000 		.4byte	.LFE65-.LFB65
 7923 0028 00000000 		.4byte	.LFB66
 7924 002c 34010000 		.4byte	.LFE66-.LFB66
 7925 0030 00000000 		.4byte	.LFB67
 7926 0034 20000000 		.4byte	.LFE67-.LFB67
 7927 0038 00000000 		.4byte	.LFB68
 7928 003c 28000000 		.4byte	.LFE68-.LFB68
 7929 0040 00000000 		.4byte	.LFB69
 7930 0044 0A000000 		.4byte	.LFE69-.LFB69
 7931 0048 00000000 		.4byte	.LFB70
 7932 004c 28000000 		.4byte	.LFE70-.LFB70
 7933 0050 00000000 		.4byte	.LFB71
 7934 0054 D8070000 		.4byte	.LFE71-.LFB71
 7935 0058 00000000 		.4byte	.LFB72
 7936 005c 60010000 		.4byte	.LFE72-.LFB72
 7937 0060 00000000 		.4byte	.LFB73
 7938 0064 18000000 		.4byte	.LFE73-.LFB73
 7939 0068 00000000 		.4byte	.LFB74
 7940 006c 18000000 		.4byte	.LFE74-.LFB74
 7941 0070 00000000 		.4byte	.LFB75
 7942 0074 54000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 163


 7943 0078 00000000 		.4byte	.LFB76
 7944 007c F4000000 		.4byte	.LFE76-.LFB76
 7945 0080 00000000 		.4byte	.LFB77
 7946 0084 18000000 		.4byte	.LFE77-.LFB77
 7947 0088 00000000 		.4byte	.LFB78
 7948 008c 18000000 		.4byte	.LFE78-.LFB78
 7949 0090 00000000 		.4byte	.LFB79
 7950 0094 22000000 		.4byte	.LFE79-.LFB79
 7951 0098 00000000 		.4byte	.LFB80
 7952 009c 1C000000 		.4byte	.LFE80-.LFB80
 7953 00a0 00000000 		.4byte	.LFB81
 7954 00a4 34000000 		.4byte	.LFE81-.LFB81
 7955 00a8 00000000 		.4byte	.LFB82
 7956 00ac 38000000 		.4byte	.LFE82-.LFB82
 7957 00b0 00000000 		.4byte	.LFB83
 7958 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7959 00b8 00000000 		.4byte	.LFB84
 7960 00bc 38000000 		.4byte	.LFE84-.LFB84
 7961 00c0 00000000 		.4byte	.LFB85
 7962 00c4 38000000 		.4byte	.LFE85-.LFB85
 7963 00c8 00000000 		.4byte	.LFB86
 7964 00cc 38000000 		.4byte	.LFE86-.LFB86
 7965 00d0 00000000 		.4byte	.LFB87
 7966 00d4 14000000 		.4byte	.LFE87-.LFB87
 7967 00d8 00000000 		.4byte	.LFB88
 7968 00dc 18000000 		.4byte	.LFE88-.LFB88
 7969 00e0 00000000 		.4byte	.LFB89
 7970 00e4 18000000 		.4byte	.LFE89-.LFB89
 7971 00e8 00000000 		.4byte	.LFB90
 7972 00ec 18000000 		.4byte	.LFE90-.LFB90
 7973 00f0 00000000 		.4byte	.LFB91
 7974 00f4 18000000 		.4byte	.LFE91-.LFB91
 7975 00f8 00000000 		.4byte	.LFB92
 7976 00fc B8000000 		.4byte	.LFE92-.LFB92
 7977 0100 00000000 		.4byte	.LFB93
 7978 0104 4C050000 		.4byte	.LFE93-.LFB93
 7979 0108 00000000 		.4byte	.LFB94
 7980 010c 40000000 		.4byte	.LFE94-.LFB94
 7981 0110 00000000 		.4byte	.LFB95
 7982 0114 40000000 		.4byte	.LFE95-.LFB95
 7983 0118 00000000 		.4byte	.LFB96
 7984 011c 30020000 		.4byte	.LFE96-.LFB96
 7985 0120 00000000 		.4byte	.LFB97
 7986 0124 0C000000 		.4byte	.LFE97-.LFB97
 7987 0128 00000000 		.4byte	.LFB98
 7988 012c 4C010000 		.4byte	.LFE98-.LFB98
 7989 0130 00000000 		.4byte	.LFB99
 7990 0134 0C000000 		.4byte	.LFE99-.LFB99
 7991 0138 00000000 		.4byte	.LFB100
 7992 013c C0000000 		.4byte	.LFE100-.LFB100
 7993 0140 00000000 		.4byte	.LFB101
 7994 0144 B8000000 		.4byte	.LFE101-.LFB101
 7995 0148 00000000 		.4byte	.LFB102
 7996 014c 4A000000 		.4byte	.LFE102-.LFB102
 7997 0150 00000000 		.4byte	.LFB103
 7998 0154 68000000 		.4byte	.LFE103-.LFB103
 7999 0158 00000000 		.4byte	.LFB104
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 164


 8000 015c 50000000 		.4byte	.LFE104-.LFB104
 8001 0160 00000000 		.4byte	.LFB105
 8002 0164 0C000000 		.4byte	.LFE105-.LFB105
 8003 0168 00000000 		.4byte	0
 8004 016c 00000000 		.4byte	0
 8005              		.section	.debug_ranges,"",%progbits
 8006              	.Ldebug_ranges0:
 8007 0000 00000000 		.4byte	.LFB63
 8008 0004 0C000000 		.4byte	.LFE63
 8009 0008 00000000 		.4byte	.LFB64
 8010 000c 2C000000 		.4byte	.LFE64
 8011 0010 00000000 		.4byte	.LFB65
 8012 0014 AC010000 		.4byte	.LFE65
 8013 0018 00000000 		.4byte	.LFB66
 8014 001c 34010000 		.4byte	.LFE66
 8015 0020 00000000 		.4byte	.LFB67
 8016 0024 20000000 		.4byte	.LFE67
 8017 0028 00000000 		.4byte	.LFB68
 8018 002c 28000000 		.4byte	.LFE68
 8019 0030 00000000 		.4byte	.LFB69
 8020 0034 0A000000 		.4byte	.LFE69
 8021 0038 00000000 		.4byte	.LFB70
 8022 003c 28000000 		.4byte	.LFE70
 8023 0040 00000000 		.4byte	.LFB71
 8024 0044 D8070000 		.4byte	.LFE71
 8025 0048 00000000 		.4byte	.LFB72
 8026 004c 60010000 		.4byte	.LFE72
 8027 0050 00000000 		.4byte	.LFB73
 8028 0054 18000000 		.4byte	.LFE73
 8029 0058 00000000 		.4byte	.LFB74
 8030 005c 18000000 		.4byte	.LFE74
 8031 0060 00000000 		.4byte	.LFB75
 8032 0064 54000000 		.4byte	.LFE75
 8033 0068 00000000 		.4byte	.LFB76
 8034 006c F4000000 		.4byte	.LFE76
 8035 0070 00000000 		.4byte	.LFB77
 8036 0074 18000000 		.4byte	.LFE77
 8037 0078 00000000 		.4byte	.LFB78
 8038 007c 18000000 		.4byte	.LFE78
 8039 0080 00000000 		.4byte	.LFB79
 8040 0084 22000000 		.4byte	.LFE79
 8041 0088 00000000 		.4byte	.LFB80
 8042 008c 1C000000 		.4byte	.LFE80
 8043 0090 00000000 		.4byte	.LFB81
 8044 0094 34000000 		.4byte	.LFE81
 8045 0098 00000000 		.4byte	.LFB82
 8046 009c 38000000 		.4byte	.LFE82
 8047 00a0 00000000 		.4byte	.LFB83
 8048 00a4 4C000000 		.4byte	.LFE83
 8049 00a8 00000000 		.4byte	.LFB84
 8050 00ac 38000000 		.4byte	.LFE84
 8051 00b0 00000000 		.4byte	.LFB85
 8052 00b4 38000000 		.4byte	.LFE85
 8053 00b8 00000000 		.4byte	.LFB86
 8054 00bc 38000000 		.4byte	.LFE86
 8055 00c0 00000000 		.4byte	.LFB87
 8056 00c4 14000000 		.4byte	.LFE87
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 165


 8057 00c8 00000000 		.4byte	.LFB88
 8058 00cc 18000000 		.4byte	.LFE88
 8059 00d0 00000000 		.4byte	.LFB89
 8060 00d4 18000000 		.4byte	.LFE89
 8061 00d8 00000000 		.4byte	.LFB90
 8062 00dc 18000000 		.4byte	.LFE90
 8063 00e0 00000000 		.4byte	.LFB91
 8064 00e4 18000000 		.4byte	.LFE91
 8065 00e8 00000000 		.4byte	.LFB92
 8066 00ec B8000000 		.4byte	.LFE92
 8067 00f0 00000000 		.4byte	.LFB93
 8068 00f4 4C050000 		.4byte	.LFE93
 8069 00f8 00000000 		.4byte	.LFB94
 8070 00fc 40000000 		.4byte	.LFE94
 8071 0100 00000000 		.4byte	.LFB95
 8072 0104 40000000 		.4byte	.LFE95
 8073 0108 00000000 		.4byte	.LFB96
 8074 010c 30020000 		.4byte	.LFE96
 8075 0110 00000000 		.4byte	.LFB97
 8076 0114 0C000000 		.4byte	.LFE97
 8077 0118 00000000 		.4byte	.LFB98
 8078 011c 4C010000 		.4byte	.LFE98
 8079 0120 00000000 		.4byte	.LFB99
 8080 0124 0C000000 		.4byte	.LFE99
 8081 0128 00000000 		.4byte	.LFB100
 8082 012c C0000000 		.4byte	.LFE100
 8083 0130 00000000 		.4byte	.LFB101
 8084 0134 B8000000 		.4byte	.LFE101
 8085 0138 00000000 		.4byte	.LFB102
 8086 013c 4A000000 		.4byte	.LFE102
 8087 0140 00000000 		.4byte	.LFB103
 8088 0144 68000000 		.4byte	.LFE103
 8089 0148 00000000 		.4byte	.LFB104
 8090 014c 50000000 		.4byte	.LFE104
 8091 0150 00000000 		.4byte	.LFB105
 8092 0154 0C000000 		.4byte	.LFE105
 8093 0158 00000000 		.4byte	0
 8094 015c 00000000 		.4byte	0
 8095              		.section	.debug_line,"",%progbits
 8096              	.Ldebug_line0:
 8097 0000 6C080000 		.section	.debug_str,"MS",%progbits,1
 8097      02006701 
 8097      00000201 
 8097      FB0E0D00 
 8097      01010101 
 8098              	.LASF97:
 8099 0000 696E6974 		.ascii	"initTrackU\000"
 8099      54726163 
 8099      6B5500
 8100              	.LASF56:
 8101 000b 67325F73 		.ascii	"g2_speed\000"
 8101      70656564 
 8101      00
 8102              	.LASF102:
 8103 0014 6368616E 		.ascii	"changeToRF\000"
 8103      6765546F 
 8103      524600
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 166


 8104              	.LASF37:
 8105 001f 51554144 		.ascii	"QUAD_STOP\000"
 8105      5F53544F 
 8105      5000
 8106              	.LASF63:
 8107 0029 62757474 		.ascii	"button\000"
 8107      6F6E00
 8108              	.LASF128:
 8109 0030 74735F73 		.ascii	"ts_speed\000"
 8109      70656564 
 8109      00
 8110              	.LASF197:
 8111 0039 6C656674 		.ascii	"leftTurnCount\000"
 8111      5475726E 
 8111      436F756E 
 8111      7400
 8112              	.LASF166:
 8113 0047 696E6974 		.ascii	"initial_y_pos\000"
 8113      69616C5F 
 8113      795F706F 
 8113      7300
 8114              	.LASF65:
 8115 0055 6973725F 		.ascii	"isr_deadzone\000"
 8115      64656164 
 8115      7A6F6E65 
 8115      00
 8116              	.LASF142:
 8117 0062 64697265 		.ascii	"direction\000"
 8117      6374696F 
 8117      6E00
 8118              	.LASF189:
 8119 006c 70617468 		.ascii	"path\000"
 8119      00
 8120              	.LASF95:
 8121 0071 696E6974 		.ascii	"initBrake\000"
 8121      4272616B 
 8121      6500
 8122              	.LASF49:
 8123 007b 67305F64 		.ascii	"g0_direction\000"
 8123      69726563 
 8123      74696F6E 
 8123      00
 8124              	.LASF61:
 8125 0088 64697374 		.ascii	"distTurned\000"
 8125      5475726E 
 8125      656400
 8126              	.LASF176:
 8127 0093 656E7472 		.ascii	"entry\000"
 8127      7900
 8128              	.LASF9:
 8129 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 8129      206C6F6E 
 8129      6720756E 
 8129      7369676E 
 8129      65642069 
 8130              	.LASF192:
 8131 00b0 726F626F 		.ascii	"robot_direction\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 167


 8131      745F6469 
 8131      72656374 
 8131      696F6E00 
 8132              	.LASF135:
 8133 00c0 666C6167 		.ascii	"flag_packet\000"
 8133      5F706163 
 8133      6B657400 
 8134              	.LASF88:
 8135 00cc 7475726E 		.ascii	"turnRight\000"
 8135      52696768 
 8135      7400
 8136              	.LASF46:
 8137 00d6 67305F78 		.ascii	"g0_xpos\000"
 8137      706F7300 
 8138              	.LASF125:
 8139 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8139      52784275 
 8139      66666572 
 8139      00
 8140              	.LASF158:
 8141 00eb 74617267 		.ascii	"target_distance_cm\000"
 8141      65745F64 
 8141      69737461 
 8141      6E63655F 
 8141      636D00
 8142              	.LASF127:
 8143 00fe 74735F75 		.ascii	"ts_update\000"
 8143      70646174 
 8143      6500
 8144              	.LASF35:
 8145 0108 555F5452 		.ascii	"U_TRACK\000"
 8145      41434B00 
 8146              	.LASF40:
 8147 0110 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8147      54524156 
 8147      45525345 
 8147      00
 8148              	.LASF81:
 8149 011d 72696768 		.ascii	"right\000"
 8149      7400
 8150              	.LASF121:
 8151 0123 73656E73 		.ascii	"sensorVals\000"
 8151      6F725661 
 8151      6C7300
 8152              	.LASF8:
 8153 012e 6C6F6E67 		.ascii	"long long int\000"
 8153      206C6F6E 
 8153      6720696E 
 8153      7400
 8154              	.LASF0:
 8155 013c 7369676E 		.ascii	"signed char\000"
 8155      65642063 
 8155      68617200 
 8156              	.LASF106:
 8157 0148 72696768 		.ascii	"rightSpeed\000"
 8157      74537065 
 8157      656400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 168


 8158              	.LASF45:
 8159 0153 726F626F 		.ascii	"robot_orientation\000"
 8159      745F6F72 
 8159      69656E74 
 8159      6174696F 
 8159      6E00
 8160              	.LASF169:
 8161 0165 66726F6E 		.ascii	"frontSensors\000"
 8161      7453656E 
 8161      736F7273 
 8161      00
 8162              	.LASF113:
 8163 0172 74726163 		.ascii	"trackLineU\000"
 8163      6B4C696E 
 8163      655500
 8164              	.LASF130:
 8165 017d 666C6167 		.ascii	"flag_ts_enc\000"
 8165      5F74735F 
 8165      656E6300 
 8166              	.LASF178:
 8167 0189 62756666 		.ascii	"buffer_state\000"
 8167      65725F73 
 8167      74617465 
 8167      00
 8168              	.LASF92:
 8169 0196 696E6974 		.ascii	"initTurnRight\000"
 8169      5475726E 
 8169      52696768 
 8169      7400
 8170              	.LASF152:
 8171 01a4 64656164 		.ascii	"deadzone\000"
 8171      7A6F6E65 
 8171      00
 8172              	.LASF136:
 8173 01ad 666C6167 		.ascii	"flag_KB_string\000"
 8173      5F4B425F 
 8173      73747269 
 8173      6E6700
 8174              	.LASF112:
 8175 01bc 74726163 		.ascii	"trackLineZ\000"
 8175      6B4C696E 
 8175      655A00
 8176              	.LASF89:
 8177 01c7 7475726E 		.ascii	"turnLeft\000"
 8177      4C656674 
 8177      00
 8178              	.LASF31:
 8179 01d0 73746174 		.ascii	"state\000"
 8179      6500
 8180              	.LASF4:
 8181 01d6 6C6F6E67 		.ascii	"long int\000"
 8181      20696E74 
 8181      00
 8182              	.LASF30:
 8183 01df 55545552 		.ascii	"UTURN\000"
 8183      4E00
 8184              	.LASF163:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 169


 8185 01e5 71756164 		.ascii	"quad_per_cm\000"
 8185      5F706572 
 8185      5F636D00 
 8186              	.LASF15:
 8187 01f1 75696E74 		.ascii	"uint8\000"
 8187      3800
 8188              	.LASF116:
 8189 01f7 636F6E76 		.ascii	"converted_val\000"
 8189      65727465 
 8189      645F7661 
 8189      6C00
 8190              	.LASF75:
 8191 0205 7365744C 		.ascii	"setLeftDir\000"
 8191      65667444 
 8191      697200
 8192              	.LASF21:
 8193 0210 646F7562 		.ascii	"double\000"
 8193      6C6500
 8194              	.LASF137:
 8195 0217 64617461 		.ascii	"dataready_flag\000"
 8195      72656164 
 8195      795F666C 
 8195      616700
 8196              	.LASF59:
 8197 0226 6164635F 		.ascii	"adc_isr\000"
 8197      69737200 
 8198              	.LASF126:
 8199 022e 74735F65 		.ascii	"ts_enc\000"
 8199      6E6300
 8200              	.LASF134:
 8201 0235 666C6167 		.ascii	"flag_rx\000"
 8201      5F727800 
 8202              	.LASF17:
 8203 023d 75696E74 		.ascii	"uint32\000"
 8203      333200
 8204              	.LASF71:
 8205 0244 6E657874 		.ascii	"nextInstruction\000"
 8205      496E7374 
 8205      72756374 
 8205      696F6E00 
 8206              	.LASF73:
 8207 0254 62797465 		.ascii	"byte_packet\000"
 8207      5F706163 
 8207      6B657400 
 8208              	.LASF175:
 8209 0260 6C696E65 		.ascii	"line\000"
 8209      00
 8210              	.LASF145:
 8211 0265 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 8211      5F63616C 
 8211      635F7768 
 8211      65656C73 
 8211      70656564 
 8212              	.LASF57:
 8213 027a 67325F64 		.ascii	"g2_direction\000"
 8213      69726563 
 8213      74696F6E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 170


 8213      00
 8214              	.LASF172:
 8215 0287 70726576 		.ascii	"prevVoltage\000"
 8215      566F6C74 
 8215      61676500 
 8216              	.LASF146:
 8217 0293 71756164 		.ascii	"quad_count1\000"
 8217      5F636F75 
 8217      6E743100 
 8218              	.LASF147:
 8219 029f 71756164 		.ascii	"quad_count2\000"
 8219      5F636F75 
 8219      6E743200 
 8220              	.LASF157:
 8221 02ab 72696768 		.ascii	"rightSpeedLimit\000"
 8221      74537065 
 8221      65644C69 
 8221      6D697400 
 8222              	.LASF196:
 8223 02bb 696E7374 		.ascii	"instructionLength\000"
 8223      72756374 
 8223      696F6E4C 
 8223      656E6774 
 8223      6800
 8224              	.LASF39:
 8225 02cd 44455354 		.ascii	"DEST_TEST\000"
 8225      5F544553 
 8225      5400
 8226              	.LASF182:
 8227 02d7 74726163 		.ascii	"track_mode\000"
 8227      6B5F6D6F 
 8227      646500
 8228              	.LASF25:
 8229 02e2 52545552 		.ascii	"RTURN\000"
 8229      4E00
 8230              	.LASF191:
 8231 02e8 64657374 		.ascii	"destination\000"
 8231      696E6174 
 8231      696F6E00 
 8232              	.LASF60:
 8233 02f4 6973725F 		.ascii	"isr_quad1\000"
 8233      71756164 
 8233      3100
 8234              	.LASF10:
 8235 02fe 756E7369 		.ascii	"unsigned int\000"
 8235      676E6564 
 8235      20696E74 
 8235      00
 8236              	.LASF155:
 8237 030b 72696768 		.ascii	"right_duty_cycle\000"
 8237      745F6475 
 8237      74795F63 
 8237      79636C65 
 8237      00
 8238              	.LASF202:
 8239 031c 64617461 		.ascii	"data_main\000"
 8239      5F6D6169 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 171


 8239      6E00
 8240              	.LASF141:
 8241 0326 6164635F 		.ascii	"adc_result\000"
 8241      72657375 
 8241      6C7400
 8242              	.LASF187:
 8243 0331 73656E73 		.ascii	"sensorsDisabled\000"
 8243      6F727344 
 8243      69736162 
 8243      6C656400 
 8244              	.LASF140:
 8245 0341 666C6167 		.ascii	"flag_receive_ADC\000"
 8245      5F726563 
 8245      65697665 
 8245      5F414443 
 8245      00
 8246              	.LASF7:
 8247 0352 6C6F6E67 		.ascii	"long unsigned int\000"
 8247      20756E73 
 8247      69676E65 
 8247      6420696E 
 8247      7400
 8248              	.LASF96:
 8249 0364 696E6974 		.ascii	"initTrack\000"
 8249      54726163 
 8249      6B00
 8250              	.LASF93:
 8251 036e 696E6974 		.ascii	"initTurnU\000"
 8251      5475726E 
 8251      5500
 8252              	.LASF115:
 8253 0378 7363616C 		.ascii	"scalingFactor\000"
 8253      696E6746 
 8253      6163746F 
 8253      7200
 8254              	.LASF194:
 8255 0386 666F6F64 		.ascii	"food_length\000"
 8255      5F6C656E 
 8255      67746800 
 8256              	.LASF3:
 8257 0392 73686F72 		.ascii	"short unsigned int\000"
 8257      7420756E 
 8257      7369676E 
 8257      65642069 
 8257      6E7400
 8258              	.LASF79:
 8259 03a5 73657453 		.ascii	"setSpeed\000"
 8259      70656564 
 8259      00
 8260              	.LASF18:
 8261 03ae 696E7438 		.ascii	"int8\000"
 8261      00
 8262              	.LASF23:
 8263 03b3 44524956 		.ascii	"DRIVE\000"
 8263      4500
 8264              	.LASF91:
 8265 03b9 696E6974 		.ascii	"initTurnLeft\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 172


 8265      5475726E 
 8265      4C656674 
 8265      00
 8266              	.LASF103:
 8267 03c6 6368616E 		.ascii	"changeToBT\000"
 8267      6765546F 
 8267      425400
 8268              	.LASF27:
 8269 03d1 54524143 		.ascii	"TRACKING\000"
 8269      4B494E47 
 8269      00
 8270              	.LASF186:
 8271 03da 696E7374 		.ascii	"instructionCount\000"
 8271      72756374 
 8271      696F6E43 
 8271      6F756E74 
 8271      00
 8272              	.LASF170:
 8273 03eb 6C656674 		.ascii	"leftOn\000"
 8273      4F6E00
 8274              	.LASF122:
 8275 03f2 75736250 		.ascii	"usbPutString\000"
 8275      75745374 
 8275      72696E67 
 8275      00
 8276              	.LASF62:
 8277 03ff 53746F70 		.ascii	"Stop_on_line\000"
 8277      5F6F6E5F 
 8277      6C696E65 
 8277      00
 8278              	.LASF34:
 8279 040c 43555256 		.ascii	"CURVE_TRACK\000"
 8279      455F5452 
 8279      41434B00 
 8280              	.LASF5:
 8281 0418 5F5F696E 		.ascii	"__int32_t\000"
 8281      7433325F 
 8281      7400
 8282              	.LASF36:
 8283 0422 53515541 		.ascii	"SQUARE_TRACK\000"
 8283      52455F54 
 8283      5241434B 
 8283      00
 8284              	.LASF129:
 8285 042f 74735F64 		.ascii	"ts_display\000"
 8285      6973706C 
 8285      617900
 8286              	.LASF124:
 8287 043a 75617274 		.ascii	"uart_set_PWM\000"
 8287      5F736574 
 8287      5F50574D 
 8287      00
 8288              	.LASF198:
 8289 0447 72696768 		.ascii	"rightTurnCount\000"
 8289      74547572 
 8289      6E436F75 
 8289      6E7400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 173


 8290              	.LASF66:
 8291 0456 6973725F 		.ascii	"isr_turn_timer\000"
 8291      7475726E 
 8291      5F74696D 
 8291      657200
 8292              	.LASF109:
 8293 0465 696E7465 		.ascii	"interCalc\000"
 8293      7243616C 
 8293      6300
 8294              	.LASF132:
 8295 046f 666C6167 		.ascii	"flag_ts_speed\000"
 8295      5F74735F 
 8295      73706565 
 8295      6400
 8296              	.LASF41:
 8297 047d 72737369 		.ascii	"rssi\000"
 8297      00
 8298              	.LASF52:
 8299 0482 67315F73 		.ascii	"g1_speed\000"
 8299      70656564 
 8299      00
 8300              	.LASF11:
 8301 048b 73697A65 		.ascii	"sizetype\000"
 8301      74797065 
 8301      00
 8302              	.LASF139:
 8303 0494 666C6167 		.ascii	"flag_print_rf\000"
 8303      5F707269 
 8303      6E745F72 
 8303      6600
 8304              	.LASF179:
 8305 04a2 73797374 		.ascii	"system_state\000"
 8305      656D5F73 
 8305      74617465 
 8305      00
 8306              	.LASF51:
 8307 04af 67315F79 		.ascii	"g1_ypos\000"
 8307      706F7300 
 8308              	.LASF53:
 8309 04b7 67315F64 		.ascii	"g1_direction\000"
 8309      69726563 
 8309      74696F6E 
 8309      00
 8310              	.LASF104:
 8311 04c4 51756164 		.ascii	"Quad_Dec_response\000"
 8311      5F446563 
 8311      5F726573 
 8311      706F6E73 
 8311      6500
 8312              	.LASF24:
 8313 04d6 4C545552 		.ascii	"LTURN\000"
 8313      4E00
 8314              	.LASF167:
 8315 04dc 6272616B 		.ascii	"brakeFlag\000"
 8315      65466C61 
 8315      6700
 8316              	.LASF55:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 174


 8317 04e6 67325F79 		.ascii	"g2_ypos\000"
 8317      706F7300 
 8318              	.LASF117:
 8319 04ee 72657375 		.ascii	"result_str\000"
 8319      6C745F73 
 8319      747200
 8320              	.LASF180:
 8321 04f9 70726576 		.ascii	"prev_movement_state\000"
 8321      5F6D6F76 
 8321      656D656E 
 8321      745F7374 
 8321      61746500 
 8322              	.LASF199:
 8323 050d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8323      4320342E 
 8323      392E3320 
 8323      32303135 
 8323      30333033 
 8324 0540 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8324      20726576 
 8324      6973696F 
 8324      6E203232 
 8324      31323230 
 8325 0573 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8325      66756E63 
 8325      74696F6E 
 8325      2D736563 
 8325      74696F6E 
 8326              	.LASF101:
 8327 059b 42545F72 		.ascii	"BT_rxInt\000"
 8327      78496E74 
 8327      00
 8328              	.LASF160:
 8329 05a4 74617267 		.ascii	"target_distance_quad\000"
 8329      65745F64 
 8329      69737461 
 8329      6E63655F 
 8329      71756164 
 8330              	.LASF138:
 8331 05b9 666C6167 		.ascii	"flag_rf_transmission_active\000"
 8331      5F72665F 
 8331      7472616E 
 8331      736D6973 
 8331      73696F6E 
 8332              	.LASF74:
 8333 05d5 73747269 		.ascii	"string_packet\000"
 8333      6E675F70 
 8333      61636B65 
 8333      7400
 8334              	.LASF20:
 8335 05e3 666C6F61 		.ascii	"float\000"
 8335      7400
 8336              	.LASF28:
 8337 05e9 54524143 		.ascii	"TRACKING_U\000"
 8337      4B494E47 
 8337      5F5500
 8338              	.LASF165:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 175


 8339 05f4 696E6974 		.ascii	"initial_x_pos\000"
 8339      69616C5F 
 8339      785F706F 
 8339      7300
 8340              	.LASF87:
 8341 0602 64726976 		.ascii	"driveForwards\000"
 8341      65466F72 
 8341      77617264 
 8341      7300
 8342              	.LASF119:
 8343 0610 7072696E 		.ascii	"printString\000"
 8343      74537472 
 8343      696E6700 
 8344              	.LASF168:
 8345 061c 706F7274 		.ascii	"portOpen\000"
 8345      4F70656E 
 8345      00
 8346              	.LASF76:
 8347 0625 73657452 		.ascii	"setRightDir\000"
 8347      69676874 
 8347      44697200 
 8348              	.LASF148:
 8349 0631 6C617374 		.ascii	"last_quad_count1\000"
 8349      5F717561 
 8349      645F636F 
 8349      756E7431 
 8349      00
 8350              	.LASF149:
 8351 0642 6C617374 		.ascii	"last_quad_count2\000"
 8351      5F717561 
 8351      645F636F 
 8351      756E7432 
 8351      00
 8352              	.LASF29:
 8353 0653 54524143 		.ascii	"TRACKING_SOFT\000"
 8353      4B494E47 
 8353      5F534F46 
 8353      5400
 8354              	.LASF143:
 8355 0661 42494E5F 		.ascii	"BIN_ENABLED\000"
 8355      454E4142 
 8355      4C454400 
 8356              	.LASF13:
 8357 066d 696E7433 		.ascii	"int32_t\000"
 8357      325F7400 
 8358              	.LASF1:
 8359 0675 756E7369 		.ascii	"unsigned char\000"
 8359      676E6564 
 8359      20636861 
 8359      7200
 8360              	.LASF16:
 8361 0683 75696E74 		.ascii	"uint16\000"
 8361      313600
 8362              	.LASF38:
 8363 068a 52465F53 		.ascii	"RF_STOP\000"
 8363      544F5000 
 8364              	.LASF86:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 176


 8365 0692 6272616B 		.ascii	"brakeMotor\000"
 8365      654D6F74 
 8365      6F7200
 8366              	.LASF54:
 8367 069d 67325F78 		.ascii	"g2_xpos\000"
 8367      706F7300 
 8368              	.LASF110:
 8369 06a5 6E657874 		.ascii	"nextSpeed\000"
 8369      53706565 
 8369      6400
 8370              	.LASF2:
 8371 06af 73686F72 		.ascii	"short int\000"
 8371      7420696E 
 8371      7400
 8372              	.LASF33:
 8373 06b9 4E4F5F54 		.ascii	"NO_TRACK\000"
 8373      5241434B 
 8373      00
 8374              	.LASF107:
 8375 06c2 7363616C 		.ascii	"scalingLeft\000"
 8375      696E674C 
 8375      65667400 
 8376              	.LASF77:
 8377 06ce 68616E64 		.ascii	"handle_rx_binary\000"
 8377      6C655F72 
 8377      785F6269 
 8377      6E617279 
 8377      00
 8378              	.LASF99:
 8379 06df 7278496E 		.ascii	"rxInt\000"
 8379      7400
 8380              	.LASF183:
 8381 06e5 62797465 		.ascii	"byteCount\000"
 8381      436F756E 
 8381      7400
 8382              	.LASF64:
 8383 06ef 6973725F 		.ascii	"isr_adcTimer\000"
 8383      61646354 
 8383      696D6572 
 8383      00
 8384              	.LASF111:
 8385 06fc 74726163 		.ascii	"trackLine\000"
 8385      6B4C696E 
 8385      6500
 8386              	.LASF85:
 8387 0706 6272616B 		.ascii	"brakeRight\000"
 8387      65526967 
 8387      687400
 8388              	.LASF133:
 8389 0711 666C6167 		.ascii	"flag_ts_display\000"
 8389      5F74735F 
 8389      64697370 
 8389      6C617900 
 8390              	.LASF26:
 8391 0721 53544F50 		.ascii	"STOPPED\000"
 8391      50454400 
 8392              	.LASF72:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 177


 8393 0729 7061636B 		.ascii	"packet_bytes\000"
 8393      65745F62 
 8393      79746573 
 8393      00
 8394              	.LASF22:
 8395 0736 6C6F6E67 		.ascii	"long double\000"
 8395      20646F75 
 8395      626C6500 
 8396              	.LASF193:
 8397 0742 74726163 		.ascii	"tracked_direction\000"
 8397      6B65645F 
 8397      64697265 
 8397      6374696F 
 8397      6E00
 8398              	.LASF12:
 8399 0754 63686172 		.ascii	"char\000"
 8399      00
 8400              	.LASF32:
 8401 0759 6D6F6465 		.ascii	"mode\000"
 8401      00
 8402              	.LASF195:
 8403 075e 696E7374 		.ascii	"instructions\000"
 8403      72756374 
 8403      696F6E73 
 8403      00
 8404              	.LASF42:
 8405 076b 696E6465 		.ascii	"index\000"
 8405      7800
 8406              	.LASF188:
 8407 0771 666F6F64 		.ascii	"food_list\000"
 8407      5F6C6973 
 8407      7400
 8408              	.LASF68:
 8409 077b 61637469 		.ascii	"actionDebounce\000"
 8409      6F6E4465 
 8409      626F756E 
 8409      636500
 8410              	.LASF105:
 8411 078a 6C656674 		.ascii	"leftSpeed\000"
 8411      53706565 
 8411      6400
 8412              	.LASF6:
 8413 0794 5F5F7569 		.ascii	"__uint32_t\000"
 8413      6E743332 
 8413      5F7400
 8414              	.LASF131:
 8415 079f 666C6167 		.ascii	"flag_ts_update\000"
 8415      5F74735F 
 8415      75706461 
 8415      746500
 8416              	.LASF174:
 8417 07ae 64697370 		.ascii	"displaystring\000"
 8417      6C617973 
 8417      7472696E 
 8417      6700
 8418              	.LASF47:
 8419 07bc 67305F79 		.ascii	"g0_ypos\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 178


 8419      706F7300 
 8420              	.LASF156:
 8421 07c4 6C656674 		.ascii	"leftSpeedLimit\000"
 8421      53706565 
 8421      644C696D 
 8421      697400
 8422              	.LASF43:
 8423 07d3 726F626F 		.ascii	"robot_xpos\000"
 8423      745F7870 
 8423      6F7300
 8424              	.LASF90:
 8425 07de 7475726E 		.ascii	"turnU\000"
 8425      5500
 8426              	.LASF184:
 8427 07e4 7061636B 		.ascii	"packet\000"
 8427      657400
 8428              	.LASF83:
 8429 07eb 636F756E 		.ascii	"countsRight\000"
 8429      74735269 
 8429      67687400 
 8430              	.LASF118:
 8431 07f7 7072696E 		.ascii	"print_RF\000"
 8431      745F5246 
 8431      00
 8432              	.LASF84:
 8433 0800 6272616B 		.ascii	"brakeLeft\000"
 8433      654C6566 
 8433      7400
 8434              	.LASF177:
 8435 080a 75736242 		.ascii	"usbBuffer\000"
 8435      75666665 
 8435      7200
 8436              	.LASF50:
 8437 0814 67315F78 		.ascii	"g1_xpos\000"
 8437      706F7300 
 8438              	.LASF100:
 8439 081c 72665F63 		.ascii	"rf_char\000"
 8439      68617200 
 8440              	.LASF164:
 8441 0824 696E6974 		.ascii	"initial_pos_valid\000"
 8441      69616C5F 
 8441      706F735F 
 8441      76616C69 
 8441      6400
 8442              	.LASF78:
 8443 0836 72657665 		.ascii	"reverseDirection\000"
 8443      72736544 
 8443      69726563 
 8443      74696F6E 
 8443      00
 8444              	.LASF173:
 8445 0847 70726576 		.ascii	"prevVoltage2\000"
 8445      566F6C74 
 8445      61676532 
 8445      00
 8446              	.LASF94:
 8447 0854 696E6974 		.ascii	"initForward\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 179


 8447      466F7277 
 8447      61726400 
 8448              	.LASF14:
 8449 0860 75696E74 		.ascii	"uint32_t\000"
 8449      33325F74 
 8449      00
 8450              	.LASF154:
 8451 0869 6C656674 		.ascii	"left_duty_cycle\000"
 8451      5F647574 
 8451      795F6379 
 8451      636C6500 
 8452              	.LASF70:
 8453 0879 6E657874 		.ascii	"nextStepDist\000"
 8453      53746570 
 8453      44697374 
 8453      00
 8454              	.LASF159:
 8455 0886 61636375 		.ascii	"accum_dist\000"
 8455      6D5F6469 
 8455      737400
 8456              	.LASF58:
 8457 0891 42545F74 		.ascii	"BT_txInt\000"
 8457      78496E74 
 8457      00
 8458              	.LASF181:
 8459 089a 6D6F7665 		.ascii	"movement_state\000"
 8459      6D656E74 
 8459      5F737461 
 8459      746500
 8460              	.LASF171:
 8461 08a9 72696768 		.ascii	"rightOn\000"
 8461      744F6E00 
 8462              	.LASF144:
 8463 08b1 42545F45 		.ascii	"BT_ENABLED\000"
 8463      4E41424C 
 8463      454400
 8464              	.LASF123:
 8465 08bc 75736250 		.ascii	"usbPutChar\000"
 8465      75744368 
 8465      617200
 8466              	.LASF98:
 8467 08c7 696E6974 		.ascii	"inittrackLineZ\000"
 8467      74726163 
 8467      6B4C696E 
 8467      655A00
 8468              	.LASF108:
 8469 08d6 7363616C 		.ascii	"scalingRight\000"
 8469      696E6752 
 8469      69676874 
 8469      00
 8470              	.LASF161:
 8471 08e3 72656163 		.ascii	"reached_target\000"
 8471      6865645F 
 8471      74617267 
 8471      657400
 8472              	.LASF44:
 8473 08f2 726F626F 		.ascii	"robot_ypos\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 180


 8473      745F7970 
 8473      6F7300
 8474              	.LASF19:
 8475 08fd 696E7431 		.ascii	"int16\000"
 8475      3600
 8476              	.LASF82:
 8477 0903 636F756E 		.ascii	"countsLeft\000"
 8477      74734C65 
 8477      667400
 8478              	.LASF153:
 8479 090e 73746172 		.ascii	"start_turn_count\000"
 8479      745F7475 
 8479      726E5F63 
 8479      6F756E74 
 8479      00
 8480              	.LASF185:
 8481 091f 73706565 		.ascii	"speed\000"
 8481      6400
 8482              	.LASF162:
 8483 0925 6F766572 		.ascii	"overshot_target\000"
 8483      73686F74 
 8483      5F746172 
 8483      67657400 
 8484              	.LASF69:
 8485 0935 6E657874 		.ascii	"nextStep\000"
 8485      53746570 
 8485      00
 8486              	.LASF200:
 8487 093e 2E5C6D61 		.ascii	".\\main.c\000"
 8487      696E2E63 
 8487      00
 8488              	.LASF150:
 8489 0947 71756164 		.ascii	"quad_diff1\000"
 8489      5F646966 
 8489      663100
 8490              	.LASF151:
 8491 0952 71756164 		.ascii	"quad_diff2\000"
 8491      5F646966 
 8491      663200
 8492              	.LASF190:
 8493 095d 73746172 		.ascii	"start\000"
 8493      7400
 8494              	.LASF67:
 8495 0963 6D61696E 		.ascii	"main\000"
 8495      00
 8496              	.LASF80:
 8497 0968 6C656674 		.ascii	"left\000"
 8497      00
 8498              	.LASF48:
 8499 096d 67305F73 		.ascii	"g0_speed\000"
 8499      70656564 
 8499      00
 8500              	.LASF201:
 8501 0976 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 8501      73657273 
 8501      5C4C6F67 
 8501      616E5C44 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccvefrNo.s 			page 181


 8501      65736B74 
 8502 09a3 43533330 		.ascii	"CS301_Class.cydsn\000"
 8502      315F436C 
 8502      6173732E 
 8502      63796473 
 8502      6E00
 8503              	.LASF114:
 8504 09b5 7072696E 		.ascii	"print_ADC\000"
 8504      745F4144 
 8504      4300
 8505              	.LASF120:
 8506 09bf 72656164 		.ascii	"readFrontSensors\000"
 8506      46726F6E 
 8506      7453656E 
 8506      736F7273 
 8506      00
 8507              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
