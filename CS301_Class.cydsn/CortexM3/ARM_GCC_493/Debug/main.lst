ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.global	target_distance_cm
 183              		.data
 184 0001 00       		.align	1
 185              		.type	target_distance_cm, %object
 186              		.size	target_distance_cm, 2
 187              	target_distance_cm:
 188 0002 9900     		.short	153
 189              		.global	accum_dist
 190              		.bss
 191              		.align	1
 192              		.type	accum_dist, %object
 193              		.size	accum_dist, 2
 194              	accum_dist:
 195 002c 0000     		.space	2
 196              		.global	target_distance_quad
 197              		.align	1
 198              		.type	target_distance_quad, %object
 199              		.size	target_distance_quad, 2
 200              	target_distance_quad:
 201 002e 0000     		.space	2
 202              		.global	quad_per_cm
 203              		.data
 204              		.align	2
 205              		.type	quad_per_cm, %object
 206              		.size	quad_per_cm, 4
 207              	quad_per_cm:
 208 0004 F0A73241 		.word	1093838832
 209              		.global	initial_x_pos
 210              		.bss
 211              		.align	1
 212              		.type	initial_x_pos, %object
 213              		.size	initial_x_pos, 2
 214              	initial_x_pos:
 215 0030 0000     		.space	2
 216              		.global	initial_y_pos
 217              		.align	1
 218              		.type	initial_y_pos, %object
 219              		.size	initial_y_pos, 2
 220              	initial_y_pos:
 221 0032 0000     		.space	2
 222              		.comm	brakeFlag,1,1
 223              		.global	portOpen
 224              		.data
 225              		.type	portOpen, %object
 226              		.size	portOpen, 1
 227              	portOpen:
 228 0008 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 5


 229              		.comm	prevVoltage,2,2
 230              		.comm	prevVoltage2,2,2
 231              		.global	displaystring
 232 0009 000000   		.align	2
 233              		.type	displaystring, %object
 234              		.size	displaystring, 64
 235              	displaystring:
 236 000c 43533330 		.ascii	"CS301 2016\012\000"
 236      31203230 
 236      31360A00 
 237 0018 00000000 		.space	52
 237      00000000 
 237      00000000 
 237      00000000 
 237      00000000 
 238              		.comm	line,64,4
 239              		.comm	entry,64,4
 240              		.comm	usbBuffer,64,4
 241              		.comm	buffer_state,32,4
 242              		.comm	system_state,32,4
 243              		.global	prev_movement_state
 244              		.type	prev_movement_state, %object
 245              		.size	prev_movement_state, 1
 246              	prev_movement_state:
 247 004c 03       		.byte	3
 248              		.global	movement_state
 249              		.type	movement_state, %object
 250              		.size	movement_state, 1
 251              	movement_state:
 252 004d 03       		.byte	3
 253              		.global	track_mode
 254              		.bss
 255              		.type	track_mode, %object
 256              		.size	track_mode, 1
 257              	track_mode:
 258 0034 00       		.space	1
 259              		.global	byteCount
 260              		.type	byteCount, %object
 261              		.size	byteCount, 1
 262              	byteCount:
 263 0035 00       		.space	1
 264              		.comm	packet,2,4
 265              		.global	speed
 266              		.data
 267 004e 0000     		.align	3
 268              		.type	speed, %object
 269              		.size	speed, 8
 270              	speed:
 271 0050 00000000 		.word	0
 272 0054 00003040 		.word	1076887552
 273              		.section	.text.handle_rx_binary,"ax",%progbits
 274              		.align	2
 275              		.global	handle_rx_binary
 276              		.thumb
 277              		.thumb_func
 278              		.type	handle_rx_binary, %function
 279              	handle_rx_binary:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 6


 280              	.LFB63:
 281              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** #define QUAD_RATIO 0.99556
  40:.\main.c      **** 
  41:.\main.c      **** void handle_rx_binary()
  42:.\main.c      **** {
 282              		.loc 1 42 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 32
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 89B0     		sub	sp, sp, #36
 291              		.cfi_def_cfa_offset 40
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
  43:.\main.c      ****     if(flag_rx == 1)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 7


 294              		.loc 1 43 0
 295 0006 524B     		ldr	r3, .L21
 296 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 297 000a 012B     		cmp	r3, #1
 298 000c 40F09A80 		bne	.L1
 299              	.LBB2:
  44:.\main.c      ****     {    
  45:.\main.c      ****         flag_rx = 0;
 300              		.loc 1 45 0
 301 0010 4F4B     		ldr	r3, .L21
 302 0012 0022     		movs	r2, #0
 303 0014 1A70     		strb	r2, [r3]
  46:.\main.c      ****         
  47:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 304              		.loc 1 47 0
 305 0016 4F4B     		ldr	r3, .L21+4
 306 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 307 001a 1B02     		lsls	r3, r3, #8
 308 001c 9AB2     		uxth	r2, r3
 309 001e 4D4B     		ldr	r3, .L21+4
 310 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 311 0022 9BB2     		uxth	r3, r3
 312 0024 1343     		orrs	r3, r3, r2
 313 0026 9BB2     		uxth	r3, r3
 314 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  48:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  49:.\main.c      ****         char byte_packet[12];
  50:.\main.c      ****         char string_packet[12];
  51:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  52:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  53:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  54:.\main.c      ****         //usbPutString(string_packet);
  55:.\main.c      ****        // usbPutString(string_packet);
  56:.\main.c      ****        // usbPutChar(' ');
  57:.\main.c      ****         
  58:.\main.c      ****         switch(byteCount)
 315              		.loc 1 58 0
 316 002a 4B4B     		ldr	r3, .L21+8
 317 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 002e 043B     		subs	r3, r3, #4
 319 0030 1E2B     		cmp	r3, #30
 320 0032 00F28780 		bhi	.L1
 321 0036 01A2     		adr	r2, .L5
 322 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 323              		.p2align 2
 324              	.L5:
 325 003c B9000000 		.word	.L4+1
 326 0040 45010000 		.word	.L1+1
 327 0044 CD000000 		.word	.L6+1
 328 0048 45010000 		.word	.L1+1
 329 004c D5000000 		.word	.L7+1
 330 0050 45010000 		.word	.L1+1
 331 0054 DD000000 		.word	.L8+1
 332 0058 45010000 		.word	.L1+1
 333 005c E5000000 		.word	.L9+1
 334 0060 45010000 		.word	.L1+1
 335 0064 ED000000 		.word	.L10+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 8


 336 0068 45010000 		.word	.L1+1
 337 006c F5000000 		.word	.L11+1
 338 0070 45010000 		.word	.L1+1
 339 0074 FD000000 		.word	.L12+1
 340 0078 45010000 		.word	.L1+1
 341 007c 05010000 		.word	.L13+1
 342 0080 45010000 		.word	.L1+1
 343 0084 0D010000 		.word	.L14+1
 344 0088 45010000 		.word	.L1+1
 345 008c 15010000 		.word	.L15+1
 346 0090 45010000 		.word	.L1+1
 347 0094 1D010000 		.word	.L16+1
 348 0098 45010000 		.word	.L1+1
 349 009c 25010000 		.word	.L17+1
 350 00a0 45010000 		.word	.L1+1
 351 00a4 2D010000 		.word	.L18+1
 352 00a8 45010000 		.word	.L1+1
 353 00ac 35010000 		.word	.L19+1
 354 00b0 45010000 		.word	.L1+1
 355 00b4 3D010000 		.word	.L20+1
 356              		.p2align 1
 357              	.L4:
  59:.\main.c      ****         {
  60:.\main.c      ****             case 4:
  61:.\main.c      ****                 //usbPutString("RSSI:");
  62:.\main.c      ****                 //usbPutString(byte_packet);
  63:.\main.c      ****                 //usbPutString("\r\n");
  64:.\main.c      ****                 buffer_state.rssi = packet[0];
 358              		.loc 1 64 0
 359 00b8 264B     		ldr	r3, .L21+4
 360 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 00bc DAB2     		uxtb	r2, r3
 362 00be 274B     		ldr	r3, .L21+12
 363 00c0 1A70     		strb	r2, [r3]
  65:.\main.c      ****                 buffer_state.index = packet[1];
 364              		.loc 1 65 0
 365 00c2 244B     		ldr	r3, .L21+4
 366 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 367 00c6 254B     		ldr	r3, .L21+12
 368 00c8 5A70     		strb	r2, [r3, #1]
  66:.\main.c      ****             break;
 369              		.loc 1 66 0
 370 00ca 3BE0     		b	.L1
 371              	.L6:
  67:.\main.c      ****             case 6:
  68:.\main.c      ****                 //usbPutString("robot_x:");
  69:.\main.c      ****                 //usbPutString(string_packet);
  70:.\main.c      ****                 //usbPutString("\r\n");
  71:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 372              		.loc 1 71 0
 373 00cc FA8B     		ldrh	r2, [r7, #30]
 374 00ce 234B     		ldr	r3, .L21+12
 375 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  72:.\main.c      ****             break;
 376              		.loc 1 72 0
 377 00d2 37E0     		b	.L1
 378              	.L7:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 9


  73:.\main.c      ****             case 8:
  74:.\main.c      ****                 //usbPutString("robot_y:");
  75:.\main.c      ****                 //usbPutString(string_packet);
  76:.\main.c      ****                 //usbPutString("\r\n");
  77:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 379              		.loc 1 77 0
 380 00d4 FA8B     		ldrh	r2, [r7, #30]
 381 00d6 214B     		ldr	r3, .L21+12
 382 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  78:.\main.c      ****             break;
 383              		.loc 1 78 0
 384 00da 33E0     		b	.L1
 385              	.L8:
  79:.\main.c      ****             case 10:
  80:.\main.c      ****                 //usbPutString("robot_dir:");
  81:.\main.c      ****                 //usbPutString(string_packet);
  82:.\main.c      ****                 //usbPutString("\r\n");
  83:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 386              		.loc 1 83 0
 387 00dc FA8B     		ldrh	r2, [r7, #30]
 388 00de 1F4B     		ldr	r3, .L21+12
 389 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  84:.\main.c      ****             break;
 390              		.loc 1 84 0
 391 00e2 2FE0     		b	.L1
 392              	.L9:
  85:.\main.c      ****             case 12:
  86:.\main.c      ****                 //usbPutString("g0_x:");
  87:.\main.c      ****                 //usbPutString(string_packet);
  88:.\main.c      ****                 //usbPutString("\r\n");
  89:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 393              		.loc 1 89 0
 394 00e4 FA8B     		ldrh	r2, [r7, #30]
 395 00e6 1D4B     		ldr	r3, .L21+12
 396 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  90:.\main.c      ****             break;
 397              		.loc 1 90 0
 398 00ea 2BE0     		b	.L1
 399              	.L10:
  91:.\main.c      ****             case 14:
  92:.\main.c      ****                 //usbPutString("g0_y:");
  93:.\main.c      ****                 //usbPutString(string_packet);
  94:.\main.c      ****                 //usbPutString("\r\n");
  95:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 400              		.loc 1 95 0
 401 00ec FA8B     		ldrh	r2, [r7, #30]
 402 00ee 1B4B     		ldr	r3, .L21+12
 403 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  96:.\main.c      ****             break;
 404              		.loc 1 96 0
 405 00f2 27E0     		b	.L1
 406              	.L11:
  97:.\main.c      ****             case 16:
  98:.\main.c      ****                 //usbPutString("g0_speed:");
  99:.\main.c      ****                 //usbPutString(string_packet);
 100:.\main.c      ****                 //usbPutString("\r\n");
 101:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 10


 407              		.loc 1 101 0
 408 00f4 FA8B     		ldrh	r2, [r7, #30]
 409 00f6 194B     		ldr	r3, .L21+12
 410 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 102:.\main.c      ****             break;
 411              		.loc 1 102 0
 412 00fa 23E0     		b	.L1
 413              	.L12:
 103:.\main.c      ****             case 18:
 104:.\main.c      ****                 //usbPutString("g1_dir:");
 105:.\main.c      ****                 //usbPutString(string_packet);
 106:.\main.c      ****                 //usbPutString("\r\n");
 107:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 414              		.loc 1 107 0
 415 00fc FA8B     		ldrh	r2, [r7, #30]
 416 00fe 174B     		ldr	r3, .L21+12
 417 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 108:.\main.c      ****             break;
 418              		.loc 1 108 0
 419 0102 1FE0     		b	.L1
 420              	.L13:
 109:.\main.c      ****             case 20:
 110:.\main.c      ****                 //usbPutString("g1_x:");
 111:.\main.c      ****                 //usbPutString(string_packet);
 112:.\main.c      ****                 //usbPutString("\r\n");
 113:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 421              		.loc 1 113 0
 422 0104 FA8B     		ldrh	r2, [r7, #30]
 423 0106 154B     		ldr	r3, .L21+12
 424 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 114:.\main.c      ****             break;
 425              		.loc 1 114 0
 426 010a 1BE0     		b	.L1
 427              	.L14:
 115:.\main.c      ****             case 22:
 116:.\main.c      ****                 //usbPutString("g1_y:");
 117:.\main.c      ****                 //usbPutString(string_packet);
 118:.\main.c      ****                 //usbPutString("\r\n");
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 428              		.loc 1 119 0
 429 010c FA8B     		ldrh	r2, [r7, #30]
 430 010e 134B     		ldr	r3, .L21+12
 431 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 432              		.loc 1 120 0
 433 0112 17E0     		b	.L1
 434              	.L15:
 121:.\main.c      ****             case 24:
 122:.\main.c      ****                 //usbPutString("g1_speed:");
 123:.\main.c      ****                 //usbPutString(string_packet);
 124:.\main.c      ****                 //usbPutString("\r\n");
 125:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 435              		.loc 1 125 0
 436 0114 FA8B     		ldrh	r2, [r7, #30]
 437 0116 114B     		ldr	r3, .L21+12
 438 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 126:.\main.c      ****             break;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 11


 439              		.loc 1 126 0
 440 011a 13E0     		b	.L1
 441              	.L16:
 127:.\main.c      ****             case 26:
 128:.\main.c      ****                 //usbPutString("g1_dir:");
 129:.\main.c      ****                 //usbPutString(string_packet);
 130:.\main.c      ****                 //usbPutString("\r\n");
 131:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 442              		.loc 1 131 0
 443 011c FA8B     		ldrh	r2, [r7, #30]
 444 011e 0F4B     		ldr	r3, .L21+12
 445 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 132:.\main.c      ****             break;
 446              		.loc 1 132 0
 447 0122 0FE0     		b	.L1
 448              	.L17:
 133:.\main.c      ****             case 28:
 134:.\main.c      ****                 //usbPutString("g2_x:");
 135:.\main.c      ****                 //usbPutString(string_packet);
 136:.\main.c      ****                 //usbPutString("\r\n");
 137:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 449              		.loc 1 137 0
 450 0124 FA8B     		ldrh	r2, [r7, #30]
 451 0126 0D4B     		ldr	r3, .L21+12
 452 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 138:.\main.c      ****             break;
 453              		.loc 1 138 0
 454 012a 0BE0     		b	.L1
 455              	.L18:
 139:.\main.c      ****             case 30:
 140:.\main.c      ****                 //usbPutString("g2_y:");
 141:.\main.c      ****                 //usbPutString(string_packet);
 142:.\main.c      ****                 //usbPutString("\r\n");
 143:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 456              		.loc 1 143 0
 457 012c FA8B     		ldrh	r2, [r7, #30]
 458 012e 0B4B     		ldr	r3, .L21+12
 459 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 144:.\main.c      ****             break;
 460              		.loc 1 144 0
 461 0132 07E0     		b	.L1
 462              	.L19:
 145:.\main.c      ****             case 32:
 146:.\main.c      ****                 //usbPutString("g1_speed:");
 147:.\main.c      ****                 //usbPutString(string_packet);
 148:.\main.c      ****                 //usbPutString("\r\n");
 149:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 463              		.loc 1 149 0
 464 0134 FA8B     		ldrh	r2, [r7, #30]
 465 0136 094B     		ldr	r3, .L21+12
 466 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 150:.\main.c      ****             break;
 467              		.loc 1 150 0
 468 013a 03E0     		b	.L1
 469              	.L20:
 151:.\main.c      ****             case 34:
 152:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 12


 470              		.loc 1 152 0
 471 013c FA8B     		ldrh	r2, [r7, #30]
 472 013e 074B     		ldr	r3, .L21+12
 473 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 153:.\main.c      ****                 //usbPutString("g2_dir:");
 154:.\main.c      ****                 //usbPutString(string_packet);
 155:.\main.c      ****                 //usbPutString("\r\n");
 156:.\main.c      ****                 
 157:.\main.c      ****             break;
 474              		.loc 1 157 0
 475 0142 00BF     		nop
 476              	.L1:
 477              	.LBE2:
 158:.\main.c      ****         }
 159:.\main.c      ****     }
 160:.\main.c      **** }
 478              		.loc 1 160 0
 479 0144 2437     		adds	r7, r7, #36
 480              		.cfi_def_cfa_offset 4
 481 0146 BD46     		mov	sp, r7
 482              		.cfi_def_cfa_register 13
 483              		@ sp needed
 484 0148 5DF8047B 		ldr	r7, [sp], #4
 485              		.cfi_restore 7
 486              		.cfi_def_cfa_offset 0
 487 014c 7047     		bx	lr
 488              	.L22:
 489 014e 00BF     		.align	2
 490              	.L21:
 491 0150 00000000 		.word	flag_rx
 492 0154 00000000 		.word	packet
 493 0158 00000000 		.word	byteCount
 494 015c 00000000 		.word	buffer_state
 495              		.cfi_endproc
 496              	.LFE63:
 497              		.size	handle_rx_binary, .-handle_rx_binary
 498              		.section	.text.setLeftDir,"ax",%progbits
 499              		.align	2
 500              		.global	setLeftDir
 501              		.thumb
 502              		.thumb_func
 503              		.type	setLeftDir, %function
 504              	setLeftDir:
 505              	.LFB64:
 161:.\main.c      **** 
 162:.\main.c      **** 
 163:.\main.c      **** 
 164:.\main.c      **** void setLeftDir(uint8 dir)
 165:.\main.c      **** {
 506              		.loc 1 165 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510 0000 80B5     		push	{r7, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 13


 514 0002 82B0     		sub	sp, sp, #8
 515              		.cfi_def_cfa_offset 16
 516 0004 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 518 0006 0346     		mov	r3, r0
 519 0008 FB71     		strb	r3, [r7, #7]
 166:.\main.c      ****     M2_IN2_Write(dir);
 520              		.loc 1 166 0
 521 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 522 000c 1846     		mov	r0, r3
 523 000e FFF7FEFF 		bl	M2_IN2_Write
 167:.\main.c      **** }
 524              		.loc 1 167 0
 525 0012 0837     		adds	r7, r7, #8
 526              		.cfi_def_cfa_offset 8
 527 0014 BD46     		mov	sp, r7
 528              		.cfi_def_cfa_register 13
 529              		@ sp needed
 530 0016 80BD     		pop	{r7, pc}
 531              		.cfi_endproc
 532              	.LFE64:
 533              		.size	setLeftDir, .-setLeftDir
 534              		.section	.text.setRightDir,"ax",%progbits
 535              		.align	2
 536              		.global	setRightDir
 537              		.thumb
 538              		.thumb_func
 539              		.type	setRightDir, %function
 540              	setRightDir:
 541              	.LFB65:
 168:.\main.c      **** 
 169:.\main.c      **** void setRightDir(uint8 dir)
 170:.\main.c      **** {
 542              		.loc 1 170 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 80B5     		push	{r7, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 82B0     		sub	sp, sp, #8
 551              		.cfi_def_cfa_offset 16
 552 0004 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 554 0006 0346     		mov	r3, r0
 555 0008 FB71     		strb	r3, [r7, #7]
 171:.\main.c      ****     M1_IN2_Write(dir);
 556              		.loc 1 171 0
 557 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 558 000c 1846     		mov	r0, r3
 559 000e FFF7FEFF 		bl	M1_IN2_Write
 172:.\main.c      **** }
 560              		.loc 1 172 0
 561 0012 0837     		adds	r7, r7, #8
 562              		.cfi_def_cfa_offset 8
 563 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 14


 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0016 80BD     		pop	{r7, pc}
 567              		.cfi_endproc
 568              	.LFE65:
 569              		.size	setRightDir, .-setRightDir
 570              		.section	.rodata
 571              		.align	2
 572              	.LC0:
 573 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 573      2025640D 
 573      0A00
 574              		.section	.text.reverseDirection,"ax",%progbits
 575              		.align	2
 576              		.global	reverseDirection
 577              		.thumb
 578              		.thumb_func
 579              		.type	reverseDirection, %function
 580              	reverseDirection:
 581              	.LFB66:
 173:.\main.c      **** 
 174:.\main.c      **** void reverseDirection()
 175:.\main.c      **** {
 582              		.loc 1 175 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 16
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586 0000 80B5     		push	{r7, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 84B0     		sub	sp, sp, #16
 591              		.cfi_def_cfa_offset 24
 592 0004 00AF     		add	r7, sp, #0
 593              		.cfi_def_cfa_register 7
 176:.\main.c      ****     direction = !direction;
 594              		.loc 1 176 0
 595 0006 114B     		ldr	r3, .L26
 596 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 597 000a 002B     		cmp	r3, #0
 598 000c 0CBF     		ite	eq
 599 000e 0123     		moveq	r3, #1
 600 0010 0023     		movne	r3, #0
 601 0012 DBB2     		uxtb	r3, r3
 602 0014 1A46     		mov	r2, r3
 603 0016 0D4B     		ldr	r3, .L26
 604 0018 1A70     		strb	r2, [r3]
 177:.\main.c      ****     setLeftDir(direction);
 605              		.loc 1 177 0
 606 001a 0C4B     		ldr	r3, .L26
 607 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 608 001e 1846     		mov	r0, r3
 609 0020 FFF7FEFF 		bl	setLeftDir
 178:.\main.c      ****     setRightDir(direction);
 610              		.loc 1 178 0
 611 0024 094B     		ldr	r3, .L26
 612 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 15


 613 0028 1846     		mov	r0, r3
 614 002a FFF7FEFF 		bl	setRightDir
 179:.\main.c      ****     char mes[16];
 180:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 615              		.loc 1 180 0
 616 002e 074B     		ldr	r3, .L26
 617 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 618 0032 1A46     		mov	r2, r3
 619 0034 3B46     		mov	r3, r7
 620 0036 1846     		mov	r0, r3
 621 0038 0549     		ldr	r1, .L26+4
 622 003a FFF7FEFF 		bl	sprintf
 181:.\main.c      ****     UART_PutString(mes);
 623              		.loc 1 181 0
 624 003e 3B46     		mov	r3, r7
 625 0040 1846     		mov	r0, r3
 626 0042 FFF7FEFF 		bl	UART_PutString
 182:.\main.c      **** }
 627              		.loc 1 182 0
 628 0046 1037     		adds	r7, r7, #16
 629              		.cfi_def_cfa_offset 8
 630 0048 BD46     		mov	sp, r7
 631              		.cfi_def_cfa_register 13
 632              		@ sp needed
 633 004a 80BD     		pop	{r7, pc}
 634              	.L27:
 635              		.align	2
 636              	.L26:
 637 004c 00000000 		.word	direction
 638 0050 00000000 		.word	.LC0
 639              		.cfi_endproc
 640              	.LFE66:
 641              		.size	reverseDirection, .-reverseDirection
 642              		.global	__aeabi_dcmplt
 643              		.global	__aeabi_dmul
 644              		.global	__aeabi_d2iz
 645              		.section	.text.setSpeed,"ax",%progbits
 646              		.align	2
 647              		.global	setSpeed
 648              		.thumb
 649              		.thumb_func
 650              		.type	setSpeed, %function
 651              	setSpeed:
 652              	.LFB67:
 183:.\main.c      **** 
 184:.\main.c      **** void setSpeed(double left, double right){
 653              		.loc 1 184 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 24
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657 0000 80B5     		push	{r7, lr}
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 86B0     		sub	sp, sp, #24
 662              		.cfi_def_cfa_offset 32
 663 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 16


 664              		.cfi_def_cfa_register 7
 665 0006 C7E90201 		strd	r0, [r7, #8]
 666 000a C7E90023 		strd	r2, [r7]
 185:.\main.c      ****     if(right < 0.0)
 667              		.loc 1 185 0
 668 000e D7E90001 		ldrd	r0, [r7]
 669 0012 4FF00002 		mov	r2, #0
 670 0016 4FF00003 		mov	r3, #0
 671 001a FFF7FEFF 		bl	__aeabi_dcmplt
 672 001e 0346     		mov	r3, r0
 673 0020 002B     		cmp	r3, #0
 674 0022 10D0     		beq	.L37
 186:.\main.c      ****     {
 187:.\main.c      ****         //char mes[16];
 188:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 189:.\main.c      ****        // UART_PutString(mes);
 190:.\main.c      ****         setRightDir(!direction);
 675              		.loc 1 190 0
 676 0024 304B     		ldr	r3, .L39+8
 677 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 678 0028 002B     		cmp	r3, #0
 679 002a 0CBF     		ite	eq
 680 002c 0123     		moveq	r3, #1
 681 002e 0023     		movne	r3, #0
 682 0030 DBB2     		uxtb	r3, r3
 683 0032 1846     		mov	r0, r3
 684 0034 FFF7FEFF 		bl	setRightDir
 191:.\main.c      ****         right = -right;
 685              		.loc 1 191 0
 686 0038 3B68     		ldr	r3, [r7]
 687 003a 3B60     		str	r3, [r7]
 688 003c 7B68     		ldr	r3, [r7, #4]
 689 003e 83F00043 		eor	r3, r3, #-2147483648
 690 0042 7B60     		str	r3, [r7, #4]
 691 0044 04E0     		b	.L31
 692              	.L37:
 192:.\main.c      ****     }
 193:.\main.c      ****     else setRightDir(direction);
 693              		.loc 1 193 0
 694 0046 284B     		ldr	r3, .L39+8
 695 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 696 004a 1846     		mov	r0, r3
 697 004c FFF7FEFF 		bl	setRightDir
 698              	.L31:
 194:.\main.c      ****     
 195:.\main.c      ****     if(left < 0.0)
 699              		.loc 1 195 0
 700 0050 D7E90201 		ldrd	r0, [r7, #8]
 701 0054 4FF00002 		mov	r2, #0
 702 0058 4FF00003 		mov	r3, #0
 703 005c FFF7FEFF 		bl	__aeabi_dcmplt
 704 0060 0346     		mov	r3, r0
 705 0062 002B     		cmp	r3, #0
 706 0064 10D0     		beq	.L38
 196:.\main.c      ****     {
 197:.\main.c      ****        // char mes[16];
 198:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 17


 199:.\main.c      ****         //UART_PutString(mes);
 200:.\main.c      ****         setLeftDir(!direction);
 707              		.loc 1 200 0
 708 0066 204B     		ldr	r3, .L39+8
 709 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 710 006a 002B     		cmp	r3, #0
 711 006c 0CBF     		ite	eq
 712 006e 0123     		moveq	r3, #1
 713 0070 0023     		movne	r3, #0
 714 0072 DBB2     		uxtb	r3, r3
 715 0074 1846     		mov	r0, r3
 716 0076 FFF7FEFF 		bl	setLeftDir
 201:.\main.c      ****         left = -left;
 717              		.loc 1 201 0
 718 007a BB68     		ldr	r3, [r7, #8]
 719 007c BB60     		str	r3, [r7, #8]
 720 007e FB68     		ldr	r3, [r7, #12]
 721 0080 83F00043 		eor	r3, r3, #-2147483648
 722 0084 FB60     		str	r3, [r7, #12]
 723 0086 04E0     		b	.L34
 724              	.L38:
 202:.\main.c      ****     }
 203:.\main.c      ****     else setLeftDir(direction);
 725              		.loc 1 203 0
 726 0088 174B     		ldr	r3, .L39+8
 727 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 728 008c 1846     		mov	r0, r3
 729 008e FFF7FEFF 		bl	setLeftDir
 730              	.L34:
 204:.\main.c      ****     
 205:.\main.c      ****     int16 countsLeft = left*QUAD_RATIO;
 731              		.loc 1 205 0
 732 0092 D7E90201 		ldrd	r0, [r7, #8]
 733 0096 12A3     		adr	r3, .L39
 734 0098 D3E90023 		ldrd	r2, [r3]
 735 009c FFF7FEFF 		bl	__aeabi_dmul
 736 00a0 0246     		mov	r2, r0
 737 00a2 0B46     		mov	r3, r1
 738 00a4 1046     		mov	r0, r2
 739 00a6 1946     		mov	r1, r3
 740 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 741 00ac 0346     		mov	r3, r0
 742 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 206:.\main.c      ****     int16 countsRight = right*QUAD_RATIO;
 743              		.loc 1 206 0
 744 00b0 D7E90001 		ldrd	r0, [r7]
 745 00b4 0AA3     		adr	r3, .L39
 746 00b6 D3E90023 		ldrd	r2, [r3]
 747 00ba FFF7FEFF 		bl	__aeabi_dmul
 748 00be 0246     		mov	r2, r0
 749 00c0 0B46     		mov	r3, r1
 750 00c2 1046     		mov	r0, r2
 751 00c4 1946     		mov	r1, r3
 752 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 753 00ca 0346     		mov	r3, r0
 754 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 207:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 18


 208:.\main.c      ****     leftSpeedLimit = countsRight;
 755              		.loc 1 208 0
 756 00ce 074A     		ldr	r2, .L39+12
 757 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 758 00d2 1380     		strh	r3, [r2]	@ movhi
 209:.\main.c      ****     rightSpeedLimit = countsLeft;
 759              		.loc 1 209 0
 760 00d4 064A     		ldr	r2, .L39+16
 761 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 762 00d8 1380     		strh	r3, [r2]	@ movhi
 210:.\main.c      **** }
 763              		.loc 1 210 0
 764 00da 1837     		adds	r7, r7, #24
 765              		.cfi_def_cfa_offset 8
 766 00dc BD46     		mov	sp, r7
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 00de 80BD     		pop	{r7, pc}
 770              	.L40:
 771              		.align	3
 772              	.L39:
 773 00e0 969526A5 		.word	-1524197994
 774 00e4 A0DBEF3F 		.word	1072683936
 775 00e8 00000000 		.word	direction
 776 00ec 00000000 		.word	leftSpeedLimit
 777 00f0 00000000 		.word	rightSpeedLimit
 778              		.cfi_endproc
 779              	.LFE67:
 780              		.size	setSpeed, .-setSpeed
 781 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 782              		.align	2
 783              		.global	brakeLeft
 784              		.thumb
 785              		.thumb_func
 786              		.type	brakeLeft, %function
 787              	brakeLeft:
 788              	.LFB68:
 211:.\main.c      **** 
 212:.\main.c      **** void brakeLeft()
 213:.\main.c      **** {
 789              		.loc 1 213 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 00AF     		add	r7, sp, #0
 798              		.cfi_def_cfa_register 7
 214:.\main.c      ****     PWM_1_WriteCompare(0);
 799              		.loc 1 214 0
 800 0004 0020     		movs	r0, #0
 801 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 215:.\main.c      ****     left_duty_cycle = 0;
 802              		.loc 1 215 0
 803 000a 024B     		ldr	r3, .L42
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 19


 804 000c 0022     		movs	r2, #0
 805 000e 1A80     		strh	r2, [r3]	@ movhi
 216:.\main.c      **** }
 806              		.loc 1 216 0
 807 0010 80BD     		pop	{r7, pc}
 808              	.L43:
 809 0012 00BF     		.align	2
 810              	.L42:
 811 0014 00000000 		.word	left_duty_cycle
 812              		.cfi_endproc
 813              	.LFE68:
 814              		.size	brakeLeft, .-brakeLeft
 815              		.section	.text.brakeRight,"ax",%progbits
 816              		.align	2
 817              		.global	brakeRight
 818              		.thumb
 819              		.thumb_func
 820              		.type	brakeRight, %function
 821              	brakeRight:
 822              	.LFB69:
 217:.\main.c      **** 
 218:.\main.c      **** void brakeRight()
 219:.\main.c      **** {
 823              		.loc 1 219 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 1, uses_anonymous_args = 0
 827 0000 80B5     		push	{r7, lr}
 828              		.cfi_def_cfa_offset 8
 829              		.cfi_offset 7, -8
 830              		.cfi_offset 14, -4
 831 0002 00AF     		add	r7, sp, #0
 832              		.cfi_def_cfa_register 7
 220:.\main.c      ****      PWM_2_WriteCompare(0);
 833              		.loc 1 220 0
 834 0004 0020     		movs	r0, #0
 835 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 221:.\main.c      ****      right_duty_cycle = 0;
 836              		.loc 1 221 0
 837 000a 024B     		ldr	r3, .L45
 838 000c 0022     		movs	r2, #0
 839 000e 1A80     		strh	r2, [r3]	@ movhi
 222:.\main.c      **** }
 840              		.loc 1 222 0
 841 0010 80BD     		pop	{r7, pc}
 842              	.L46:
 843 0012 00BF     		.align	2
 844              	.L45:
 845 0014 00000000 		.word	right_duty_cycle
 846              		.cfi_endproc
 847              	.LFE69:
 848              		.size	brakeRight, .-brakeRight
 849              		.section	.text.brakeMotor,"ax",%progbits
 850              		.align	2
 851              		.global	brakeMotor
 852              		.thumb
 853              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 20


 854              		.type	brakeMotor, %function
 855              	brakeMotor:
 856              	.LFB70:
 223:.\main.c      **** 
 224:.\main.c      **** void brakeMotor(){
 857              		.loc 1 224 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 1, uses_anonymous_args = 0
 861 0000 80B5     		push	{r7, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 00AF     		add	r7, sp, #0
 866              		.cfi_def_cfa_register 7
 225:.\main.c      ****     setSpeed(0, 0);
 867              		.loc 1 225 0
 868 0004 4FF00000 		mov	r0, #0
 869 0008 4FF00001 		mov	r1, #0
 870 000c 4FF00002 		mov	r2, #0
 871 0010 4FF00003 		mov	r3, #0
 872 0014 FFF7FEFF 		bl	setSpeed
 226:.\main.c      ****     brakeLeft();
 873              		.loc 1 226 0
 874 0018 FFF7FEFF 		bl	brakeLeft
 227:.\main.c      ****     brakeRight();
 875              		.loc 1 227 0
 876 001c FFF7FEFF 		bl	brakeRight
 228:.\main.c      **** }
 877              		.loc 1 228 0
 878 0020 80BD     		pop	{r7, pc}
 879              		.cfi_endproc
 880              	.LFE70:
 881              		.size	brakeMotor, .-brakeMotor
 882 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 883              		.align	2
 884              		.global	driveForwards
 885              		.thumb
 886              		.thumb_func
 887              		.type	driveForwards, %function
 888              	driveForwards:
 889              	.LFB71:
 229:.\main.c      **** 
 230:.\main.c      **** 
 231:.\main.c      **** void driveForwards()
 232:.\main.c      **** {
 890              		.loc 1 232 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 00AF     		add	r7, sp, #0
 899              		.cfi_def_cfa_register 7
 233:.\main.c      ****     setSpeed(speed, speed);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 21


 900              		.loc 1 233 0
 901 0004 044B     		ldr	r3, .L49
 902 0006 D3E90001 		ldrd	r0, [r3]
 903 000a 034B     		ldr	r3, .L49
 904 000c D3E90023 		ldrd	r2, [r3]
 905 0010 FFF7FEFF 		bl	setSpeed
 234:.\main.c      **** }
 906              		.loc 1 234 0
 907 0014 80BD     		pop	{r7, pc}
 908              	.L50:
 909 0016 00BF     		.align	2
 910              	.L49:
 911 0018 00000000 		.word	speed
 912              		.cfi_endproc
 913              	.LFE71:
 914              		.size	driveForwards, .-driveForwards
 915              		.global	__aeabi_dadd
 916              		.section	.text.turnRight,"ax",%progbits
 917              		.align	2
 918              		.global	turnRight
 919              		.thumb
 920              		.thumb_func
 921              		.type	turnRight, %function
 922              	turnRight:
 923              	.LFB72:
 235:.\main.c      **** 
 236:.\main.c      **** void turnRight()
 237:.\main.c      **** {
 924              		.loc 1 237 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 238:.\main.c      ****     setSpeed(0,speed*2.0);
 934              		.loc 1 238 0
 935 0004 074B     		ldr	r3, .L52
 936 0006 D3E90023 		ldrd	r2, [r3]
 937 000a 1046     		mov	r0, r2
 938 000c 1946     		mov	r1, r3
 939 000e FFF7FEFF 		bl	__aeabi_dadd
 940 0012 0246     		mov	r2, r0
 941 0014 0B46     		mov	r3, r1
 942 0016 4FF00000 		mov	r0, #0
 943 001a 4FF00001 		mov	r1, #0
 944 001e FFF7FEFF 		bl	setSpeed
 239:.\main.c      **** }
 945              		.loc 1 239 0
 946 0022 80BD     		pop	{r7, pc}
 947              	.L53:
 948              		.align	2
 949              	.L52:
 950 0024 00000000 		.word	speed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 22


 951              		.cfi_endproc
 952              	.LFE72:
 953              		.size	turnRight, .-turnRight
 954              		.section	.text.turnLeft,"ax",%progbits
 955              		.align	2
 956              		.global	turnLeft
 957              		.thumb
 958              		.thumb_func
 959              		.type	turnLeft, %function
 960              	turnLeft:
 961              	.LFB73:
 240:.\main.c      **** 
 241:.\main.c      **** void turnLeft()
 242:.\main.c      **** {
 962              		.loc 1 242 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 00AF     		add	r7, sp, #0
 971              		.cfi_def_cfa_register 7
 243:.\main.c      ****     setSpeed(speed*2.0,0);
 972              		.loc 1 243 0
 973 0004 084B     		ldr	r3, .L55
 974 0006 D3E90023 		ldrd	r2, [r3]
 975 000a 1046     		mov	r0, r2
 976 000c 1946     		mov	r1, r3
 977 000e FFF7FEFF 		bl	__aeabi_dadd
 978 0012 0246     		mov	r2, r0
 979 0014 0B46     		mov	r3, r1
 980 0016 1046     		mov	r0, r2
 981 0018 1946     		mov	r1, r3
 982 001a 4FF00002 		mov	r2, #0
 983 001e 4FF00003 		mov	r3, #0
 984 0022 FFF7FEFF 		bl	setSpeed
 244:.\main.c      **** }
 985              		.loc 1 244 0
 986 0026 80BD     		pop	{r7, pc}
 987              	.L56:
 988              		.align	2
 989              	.L55:
 990 0028 00000000 		.word	speed
 991              		.cfi_endproc
 992              	.LFE73:
 993              		.size	turnLeft, .-turnLeft
 994              		.section	.text.initTurnLeft,"ax",%progbits
 995              		.align	2
 996              		.global	initTurnLeft
 997              		.thumb
 998              		.thumb_func
 999              		.type	initTurnLeft, %function
 1000              	initTurnLeft:
 1001              	.LFB74:
 245:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 23


 246:.\main.c      **** void initTurnLeft(){
 1002              		.loc 1 246 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006 0000 80B5     		push	{r7, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 247:.\main.c      ****     Timer_2_Stop();
 1012              		.loc 1 247 0
 1013 0004 FFF7FEFF 		bl	Timer_2_Stop
 248:.\main.c      ****     prev_movement_state = movement_state;
 1014              		.loc 1 248 0
 1015 0008 084B     		ldr	r3, .L58
 1016 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1017 000c 084B     		ldr	r3, .L58+4
 1018 000e 1A70     		strb	r2, [r3]
 249:.\main.c      ****     movement_state = LTURN;
 1019              		.loc 1 249 0
 1020 0010 064B     		ldr	r3, .L58
 1021 0012 0122     		movs	r2, #1
 1022 0014 1A70     		strb	r2, [r3]
 250:.\main.c      ****     brakeLeft();
 1023              		.loc 1 250 0
 1024 0016 FFF7FEFF 		bl	brakeLeft
 251:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1025              		.loc 1 251 0
 1026 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1027 001e 0346     		mov	r3, r0
 1028 0020 1A46     		mov	r2, r3
 1029 0022 044B     		ldr	r3, .L58+8
 1030 0024 1A80     		strh	r2, [r3]	@ movhi
 252:.\main.c      ****     Timer_2_Start();
 1031              		.loc 1 252 0
 1032 0026 FFF7FEFF 		bl	Timer_2_Start
 253:.\main.c      **** }
 1033              		.loc 1 253 0
 1034 002a 80BD     		pop	{r7, pc}
 1035              	.L59:
 1036              		.align	2
 1037              	.L58:
 1038 002c 00000000 		.word	movement_state
 1039 0030 00000000 		.word	prev_movement_state
 1040 0034 00000000 		.word	start_turn_count
 1041              		.cfi_endproc
 1042              	.LFE74:
 1043              		.size	initTurnLeft, .-initTurnLeft
 1044              		.section	.text.initTurnRight,"ax",%progbits
 1045              		.align	2
 1046              		.global	initTurnRight
 1047              		.thumb
 1048              		.thumb_func
 1049              		.type	initTurnRight, %function
 1050              	initTurnRight:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 24


 1051              	.LFB75:
 254:.\main.c      **** 
 255:.\main.c      **** void initTurnRight(){
 1052              		.loc 1 255 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
 256:.\main.c      ****     Timer_2_Stop();
 1062              		.loc 1 256 0
 1063 0004 FFF7FEFF 		bl	Timer_2_Stop
 257:.\main.c      ****     prev_movement_state = movement_state;
 1064              		.loc 1 257 0
 1065 0008 084B     		ldr	r3, .L61
 1066 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1067 000c 084B     		ldr	r3, .L61+4
 1068 000e 1A70     		strb	r2, [r3]
 258:.\main.c      ****     movement_state = RTURN;
 1069              		.loc 1 258 0
 1070 0010 064B     		ldr	r3, .L61
 1071 0012 0222     		movs	r2, #2
 1072 0014 1A70     		strb	r2, [r3]
 259:.\main.c      ****     brakeRight();
 1073              		.loc 1 259 0
 1074 0016 FFF7FEFF 		bl	brakeRight
 260:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1075              		.loc 1 260 0
 1076 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1077 001e 0346     		mov	r3, r0
 1078 0020 1A46     		mov	r2, r3
 1079 0022 044B     		ldr	r3, .L61+8
 1080 0024 1A80     		strh	r2, [r3]	@ movhi
 261:.\main.c      ****     Timer_2_Start();
 1081              		.loc 1 261 0
 1082 0026 FFF7FEFF 		bl	Timer_2_Start
 262:.\main.c      **** }
 1083              		.loc 1 262 0
 1084 002a 80BD     		pop	{r7, pc}
 1085              	.L62:
 1086              		.align	2
 1087              	.L61:
 1088 002c 00000000 		.word	movement_state
 1089 0030 00000000 		.word	prev_movement_state
 1090 0034 00000000 		.word	start_turn_count
 1091              		.cfi_endproc
 1092              	.LFE75:
 1093              		.size	initTurnRight, .-initTurnRight
 1094              		.section	.text.initForward,"ax",%progbits
 1095              		.align	2
 1096              		.global	initForward
 1097              		.thumb
 1098              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 25


 1099              		.type	initForward, %function
 1100              	initForward:
 1101              	.LFB76:
 263:.\main.c      **** 
 264:.\main.c      **** void initForward(){
 1102              		.loc 1 264 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 265:.\main.c      ****     brakeMotor();
 1112              		.loc 1 265 0
 1113 0004 FFF7FEFF 		bl	brakeMotor
 266:.\main.c      ****     movement_state = DRIVE;
 1114              		.loc 1 266 0
 1115 0008 014B     		ldr	r3, .L64
 1116 000a 0022     		movs	r2, #0
 1117 000c 1A70     		strb	r2, [r3]
 267:.\main.c      **** }
 1118              		.loc 1 267 0
 1119 000e 80BD     		pop	{r7, pc}
 1120              	.L65:
 1121              		.align	2
 1122              	.L64:
 1123 0010 00000000 		.word	movement_state
 1124              		.cfi_endproc
 1125              	.LFE76:
 1126              		.size	initForward, .-initForward
 1127              		.section	.text.initBrake,"ax",%progbits
 1128              		.align	2
 1129              		.global	initBrake
 1130              		.thumb
 1131              		.thumb_func
 1132              		.type	initBrake, %function
 1133              	initBrake:
 1134              	.LFB77:
 268:.\main.c      **** 
 269:.\main.c      **** void initBrake(){
 1135              		.loc 1 269 0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 0
 1138              		@ frame_needed = 1, uses_anonymous_args = 0
 1139              		@ link register save eliminated.
 1140 0000 80B4     		push	{r7}
 1141              		.cfi_def_cfa_offset 4
 1142              		.cfi_offset 7, -4
 1143 0002 00AF     		add	r7, sp, #0
 1144              		.cfi_def_cfa_register 7
 270:.\main.c      ****     movement_state = STOPPED;
 1145              		.loc 1 270 0
 1146 0004 034B     		ldr	r3, .L67
 1147 0006 0322     		movs	r2, #3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 26


 1148 0008 1A70     		strb	r2, [r3]
 271:.\main.c      **** }
 1149              		.loc 1 271 0
 1150 000a BD46     		mov	sp, r7
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 000c 5DF8047B 		ldr	r7, [sp], #4
 1154              		.cfi_restore 7
 1155              		.cfi_def_cfa_offset 0
 1156 0010 7047     		bx	lr
 1157              	.L68:
 1158 0012 00BF     		.align	2
 1159              	.L67:
 1160 0014 00000000 		.word	movement_state
 1161              		.cfi_endproc
 1162              	.LFE77:
 1163              		.size	initBrake, .-initBrake
 1164              		.section	.text.initTrack,"ax",%progbits
 1165              		.align	2
 1166              		.global	initTrack
 1167              		.thumb
 1168              		.thumb_func
 1169              		.type	initTrack, %function
 1170              	initTrack:
 1171              	.LFB78:
 272:.\main.c      **** 
 273:.\main.c      **** void initTrack()
 274:.\main.c      **** {
 1172              		.loc 1 274 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 0000 80B4     		push	{r7}
 1178              		.cfi_def_cfa_offset 4
 1179              		.cfi_offset 7, -4
 1180 0002 00AF     		add	r7, sp, #0
 1181              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING;
 1182              		.loc 1 275 0
 1183 0004 034B     		ldr	r3, .L70
 1184 0006 0422     		movs	r2, #4
 1185 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1186              		.loc 1 276 0
 1187 000a BD46     		mov	sp, r7
 1188              		.cfi_def_cfa_register 13
 1189              		@ sp needed
 1190 000c 5DF8047B 		ldr	r7, [sp], #4
 1191              		.cfi_restore 7
 1192              		.cfi_def_cfa_offset 0
 1193 0010 7047     		bx	lr
 1194              	.L71:
 1195 0012 00BF     		.align	2
 1196              	.L70:
 1197 0014 00000000 		.word	movement_state
 1198              		.cfi_endproc
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 27


 1199              	.LFE78:
 1200              		.size	initTrack, .-initTrack
 1201              		.section	.text.initTrackU,"ax",%progbits
 1202              		.align	2
 1203              		.global	initTrackU
 1204              		.thumb
 1205              		.thumb_func
 1206              		.type	initTrackU, %function
 1207              	initTrackU:
 1208              	.LFB79:
 277:.\main.c      **** 
 278:.\main.c      **** void initTrackU(){
 1209              		.loc 1 278 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 1, uses_anonymous_args = 0
 1213              		@ link register save eliminated.
 1214 0000 80B4     		push	{r7}
 1215              		.cfi_def_cfa_offset 4
 1216              		.cfi_offset 7, -4
 1217 0002 00AF     		add	r7, sp, #0
 1218              		.cfi_def_cfa_register 7
 279:.\main.c      ****     movement_state = TRACKING_U;
 1219              		.loc 1 279 0
 1220 0004 034B     		ldr	r3, .L73
 1221 0006 0522     		movs	r2, #5
 1222 0008 1A70     		strb	r2, [r3]
 280:.\main.c      **** }
 1223              		.loc 1 280 0
 1224 000a BD46     		mov	sp, r7
 1225              		.cfi_def_cfa_register 13
 1226              		@ sp needed
 1227 000c 5DF8047B 		ldr	r7, [sp], #4
 1228              		.cfi_restore 7
 1229              		.cfi_def_cfa_offset 0
 1230 0010 7047     		bx	lr
 1231              	.L74:
 1232 0012 00BF     		.align	2
 1233              	.L73:
 1234 0014 00000000 		.word	movement_state
 1235              		.cfi_endproc
 1236              	.LFE79:
 1237              		.size	initTrackU, .-initTrackU
 1238              		.section	.text.inittrackLineZ,"ax",%progbits
 1239              		.align	2
 1240              		.global	inittrackLineZ
 1241              		.thumb
 1242              		.thumb_func
 1243              		.type	inittrackLineZ, %function
 1244              	inittrackLineZ:
 1245              	.LFB80:
 281:.\main.c      **** 
 282:.\main.c      **** void inittrackLineZ(){
 1246              		.loc 1 282 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 28


 1250              		@ link register save eliminated.
 1251 0000 80B4     		push	{r7}
 1252              		.cfi_def_cfa_offset 4
 1253              		.cfi_offset 7, -4
 1254 0002 00AF     		add	r7, sp, #0
 1255              		.cfi_def_cfa_register 7
 283:.\main.c      ****     movement_state = TRACKING_SOFT;
 1256              		.loc 1 283 0
 1257 0004 034B     		ldr	r3, .L76
 1258 0006 0622     		movs	r2, #6
 1259 0008 1A70     		strb	r2, [r3]
 284:.\main.c      **** }
 1260              		.loc 1 284 0
 1261 000a BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 000c 5DF8047B 		ldr	r7, [sp], #4
 1265              		.cfi_restore 7
 1266              		.cfi_def_cfa_offset 0
 1267 0010 7047     		bx	lr
 1268              	.L77:
 1269 0012 00BF     		.align	2
 1270              	.L76:
 1271 0014 00000000 		.word	movement_state
 1272              		.cfi_endproc
 1273              	.LFE80:
 1274              		.size	inittrackLineZ, .-inittrackLineZ
 1275              		.section	.text.rxInt,"ax",%progbits
 1276              		.align	2
 1277              		.global	rxInt
 1278              		.thumb
 1279              		.thumb_func
 1280              		.type	rxInt, %function
 1281              	rxInt:
 1282              	.LFB81:
 285:.\main.c      **** 
 286:.\main.c      **** //Binary RF Data
 287:.\main.c      **** CY_ISR(rxInt){
 1283              		.loc 1 287 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 8
 1286              		@ frame_needed = 1, uses_anonymous_args = 0
 1287 0000 B0B5     		push	{r4, r5, r7, lr}
 1288              		.cfi_def_cfa_offset 16
 1289              		.cfi_offset 4, -16
 1290              		.cfi_offset 5, -12
 1291              		.cfi_offset 7, -8
 1292              		.cfi_offset 14, -4
 1293 0002 82B0     		sub	sp, sp, #8
 1294              		.cfi_def_cfa_offset 24
 1295 0004 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
 288:.\main.c      ****     char rf_char = UART_GetChar();
 1297              		.loc 1 288 0
 1298 0006 FFF7FEFF 		bl	UART_GetChar
 1299 000a 0346     		mov	r3, r0
 1300 000c FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 29


 289:.\main.c      ****     if(rf_char == SOP){
 1301              		.loc 1 289 0
 1302 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1303 0010 AA2B     		cmp	r3, #170
 1304 0012 1CD1     		bne	.L79
 290:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 291:.\main.c      ****             if(byteCount == 34)
 1305              		.loc 1 291 0
 1306 0014 1B4B     		ldr	r3, .L83
 1307 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1308 0018 222B     		cmp	r3, #34
 1309 001a 11D1     		bne	.L80
 292:.\main.c      ****             {
 293:.\main.c      ****                 system_state = buffer_state;
 1310              		.loc 1 293 0
 1311 001c 1A4B     		ldr	r3, .L83+4
 1312 001e 1B4A     		ldr	r2, .L83+8
 1313 0020 1568     		ldr	r5, [r2]	@ unaligned
 1314 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1315 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1316 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1317 0028 1D60     		str	r5, [r3]	@ unaligned
 1318 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1319 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1320 002e D960     		str	r1, [r3, #12]	@ unaligned
 1321 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1322 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1323 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1324 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1325 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1326 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1327 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1328 003e D961     		str	r1, [r3, #28]	@ unaligned
 1329              	.L80:
 294:.\main.c      ****             }
 295:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1330              		.loc 1 295 0
 1331 0040 104B     		ldr	r3, .L83
 1332 0042 0222     		movs	r2, #2
 1333 0044 1A70     		strb	r2, [r3]
 296:.\main.c      ****             flag_rx = 0;
 1334              		.loc 1 296 0
 1335 0046 124B     		ldr	r3, .L83+12
 1336 0048 0022     		movs	r2, #0
 1337 004a 1A70     		strb	r2, [r3]
 1338 004c 16E0     		b	.L78
 1339              	.L79:
 297:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 298:.\main.c      ****         }
 299:.\main.c      ****         else
 300:.\main.c      ****         {
 301:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1340              		.loc 1 301 0
 1341 004e 0D4B     		ldr	r3, .L83
 1342 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343 0052 03F00103 		and	r3, r3, #1
 1344 0056 0F49     		ldr	r1, .L83+16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 30


 1345 0058 FA79     		ldrb	r2, [r7, #7]
 1346 005a CA54     		strb	r2, [r1, r3]
 302:.\main.c      ****            
 303:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1347              		.loc 1 303 0
 1348 005c 094B     		ldr	r3, .L83
 1349 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 0060 03F00103 		and	r3, r3, #1
 1351 0064 DBB2     		uxtb	r3, r3
 1352 0066 002B     		cmp	r3, #0
 1353 0068 02D0     		beq	.L82
 304:.\main.c      ****             {
 305:.\main.c      ****                 flag_rx = 1;
 1354              		.loc 1 305 0
 1355 006a 094B     		ldr	r3, .L83+12
 1356 006c 0122     		movs	r2, #1
 1357 006e 1A70     		strb	r2, [r3]
 1358              	.L82:
 306:.\main.c      ****             }
 307:.\main.c      ****             byteCount = (byteCount + 1);
 1359              		.loc 1 307 0
 1360 0070 044B     		ldr	r3, .L83
 1361 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1362 0074 0133     		adds	r3, r3, #1
 1363 0076 DAB2     		uxtb	r2, r3
 1364 0078 024B     		ldr	r3, .L83
 1365 007a 1A70     		strb	r2, [r3]
 1366              	.L78:
 308:.\main.c      ****         }
 309:.\main.c      **** }
 1367              		.loc 1 309 0
 1368 007c 0837     		adds	r7, r7, #8
 1369              		.cfi_def_cfa_offset 16
 1370 007e BD46     		mov	sp, r7
 1371              		.cfi_def_cfa_register 13
 1372              		@ sp needed
 1373 0080 B0BD     		pop	{r4, r5, r7, pc}
 1374              	.L84:
 1375 0082 00BF     		.align	2
 1376              	.L83:
 1377 0084 00000000 		.word	byteCount
 1378 0088 00000000 		.word	system_state
 1379 008c 00000000 		.word	buffer_state
 1380 0090 00000000 		.word	flag_rx
 1381 0094 00000000 		.word	packet
 1382              		.cfi_endproc
 1383              	.LFE81:
 1384              		.size	rxInt, .-rxInt
 1385              		.global	__aeabi_i2f
 1386              		.global	__aeabi_fmul
 1387              		.global	__aeabi_f2iz
 1388              		.section	.rodata
 1389 000a 0000     		.align	2
 1390              	.LC1:
 1391 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1391      65742071 
 1391      7561643A 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 31


 1391      2025640D 
 1391      0A00
 1392              		.section	.text.BT_rxInt,"ax",%progbits
 1393              		.align	2
 1394              		.global	BT_rxInt
 1395              		.thumb
 1396              		.thumb_func
 1397              		.type	BT_rxInt, %function
 1398              	BT_rxInt:
 1399              	.LFB82:
 310:.\main.c      **** 
 311:.\main.c      **** CY_ISR(BT_rxInt)
 312:.\main.c      **** {
 1400              		.loc 1 312 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 24
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404 0000 80B5     		push	{r7, lr}
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 7, -8
 1407              		.cfi_offset 14, -4
 1408 0002 86B0     		sub	sp, sp, #24
 1409              		.cfi_def_cfa_offset 32
 1410 0004 00AF     		add	r7, sp, #0
 1411              		.cfi_def_cfa_register 7
 313:.\main.c      ****     char rf_char = UART_GetChar();
 1412              		.loc 1 313 0
 1413 0006 FFF7FEFF 		bl	UART_GetChar
 1414 000a 0346     		mov	r3, r0
 1415 000c FB75     		strb	r3, [r7, #23]
 314:.\main.c      ****     switch(rf_char){
 1416              		.loc 1 314 0
 1417 000e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1418 0010 613B     		subs	r3, r3, #97
 1419 0012 192B     		cmp	r3, #25
 1420 0014 00F2A180 		bhi	.L85
 1421 0018 01A2     		adr	r2, .L88
 1422 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1423 001e 00BF     		.p2align 2
 1424              	.L88:
 1425 0020 89000000 		.word	.L87+1
 1426 0024 5B010000 		.word	.L85+1
 1427 0028 5B010000 		.word	.L85+1
 1428 002c AD000000 		.word	.L89+1
 1429 0030 5B010000 		.word	.L85+1
 1430 0034 B9000000 		.word	.L90+1
 1431 0038 5B010000 		.word	.L85+1
 1432 003c 5B010000 		.word	.L85+1
 1433 0040 5B010000 		.word	.L85+1
 1434 0044 5B010000 		.word	.L85+1
 1435 0048 5B010000 		.word	.L85+1
 1436 004c 5B010000 		.word	.L85+1
 1437 0050 5B010000 		.word	.L85+1
 1438 0054 5B010000 		.word	.L85+1
 1439 0058 5B010000 		.word	.L85+1
 1440 005c 5B010000 		.word	.L85+1
 1441 0060 E9000000 		.word	.L91+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 32


 1442 0064 3F010000 		.word	.L92+1
 1443 0068 A1000000 		.word	.L93+1
 1444 006c C5000000 		.word	.L94+1
 1445 0070 D1000000 		.word	.L95+1
 1446 0074 5B010000 		.word	.L85+1
 1447 0078 95000000 		.word	.L96+1
 1448 007c 5B010000 		.word	.L85+1
 1449 0080 5B010000 		.word	.L85+1
 1450 0084 DD000000 		.word	.L97+1
 1451              		.p2align 1
 1452              	.L87:
 1453              	.LBB3:
 315:.\main.c      ****     case 'a':
 316:.\main.c      ****         initTurnLeft();
 1454              		.loc 1 316 0
 1455 0088 FFF7FEFF 		bl	initTurnLeft
 317:.\main.c      ****         track_mode = NO_TRACK;
 1456              		.loc 1 317 0
 1457 008c 344B     		ldr	r3, .L99
 1458 008e 0022     		movs	r2, #0
 1459 0090 1A70     		strb	r2, [r3]
 318:.\main.c      ****         break;
 1460              		.loc 1 318 0
 1461 0092 62E0     		b	.L85
 1462              	.L96:
 319:.\main.c      ****     case 'w':
 320:.\main.c      ****         initForward();
 1463              		.loc 1 320 0
 1464 0094 FFF7FEFF 		bl	initForward
 321:.\main.c      ****         track_mode = NO_TRACK;
 1465              		.loc 1 321 0
 1466 0098 314B     		ldr	r3, .L99
 1467 009a 0022     		movs	r2, #0
 1468 009c 1A70     		strb	r2, [r3]
 322:.\main.c      ****         break;
 1469              		.loc 1 322 0
 1470 009e 5CE0     		b	.L85
 1471              	.L93:
 323:.\main.c      ****     case 's': 
 324:.\main.c      ****         reverseDirection();
 1472              		.loc 1 324 0
 1473 00a0 FFF7FEFF 		bl	reverseDirection
 325:.\main.c      ****         track_mode = NO_TRACK;
 1474              		.loc 1 325 0
 1475 00a4 2E4B     		ldr	r3, .L99
 1476 00a6 0022     		movs	r2, #0
 1477 00a8 1A70     		strb	r2, [r3]
 326:.\main.c      ****         break;
 1478              		.loc 1 326 0
 1479 00aa 56E0     		b	.L85
 1480              	.L89:
 327:.\main.c      ****     case 'd':
 328:.\main.c      ****         initTurnRight();
 1481              		.loc 1 328 0
 1482 00ac FFF7FEFF 		bl	initTurnRight
 329:.\main.c      ****         track_mode = NO_TRACK;
 1483              		.loc 1 329 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 33


 1484 00b0 2B4B     		ldr	r3, .L99
 1485 00b2 0022     		movs	r2, #0
 1486 00b4 1A70     		strb	r2, [r3]
 330:.\main.c      ****         break;
 1487              		.loc 1 330 0
 1488 00b6 50E0     		b	.L85
 1489              	.L90:
 331:.\main.c      ****     case 'f':
 332:.\main.c      ****         initBrake();
 1490              		.loc 1 332 0
 1491 00b8 FFF7FEFF 		bl	initBrake
 333:.\main.c      ****         track_mode = NO_TRACK;
 1492              		.loc 1 333 0
 1493 00bc 284B     		ldr	r3, .L99
 1494 00be 0022     		movs	r2, #0
 1495 00c0 1A70     		strb	r2, [r3]
 334:.\main.c      ****         break;
 1496              		.loc 1 334 0
 1497 00c2 4AE0     		b	.L85
 1498              	.L94:
 335:.\main.c      ****     case('t'):
 336:.\main.c      ****         track_mode = CURVE_TRACK;
 1499              		.loc 1 336 0
 1500 00c4 264B     		ldr	r3, .L99
 1501 00c6 0122     		movs	r2, #1
 1502 00c8 1A70     		strb	r2, [r3]
 337:.\main.c      ****         initTrack();
 1503              		.loc 1 337 0
 1504 00ca FFF7FEFF 		bl	initTrack
 338:.\main.c      ****         break;
 1505              		.loc 1 338 0
 1506 00ce 44E0     		b	.L85
 1507              	.L95:
 339:.\main.c      ****     case('u'):
 340:.\main.c      ****         initTrackU();
 1508              		.loc 1 340 0
 1509 00d0 FFF7FEFF 		bl	initTrackU
 341:.\main.c      ****         track_mode = U_TRACK;
 1510              		.loc 1 341 0
 1511 00d4 224B     		ldr	r3, .L99
 1512 00d6 0222     		movs	r2, #2
 1513 00d8 1A70     		strb	r2, [r3]
 342:.\main.c      ****         break;
 1514              		.loc 1 342 0
 1515 00da 3EE0     		b	.L85
 1516              	.L97:
 343:.\main.c      ****     case('z'):
 344:.\main.c      ****         track_mode = SQUARE_TRACK;
 1517              		.loc 1 344 0
 1518 00dc 204B     		ldr	r3, .L99
 1519 00de 0322     		movs	r2, #3
 1520 00e0 1A70     		strb	r2, [r3]
 345:.\main.c      ****         initTrack();
 1521              		.loc 1 345 0
 1522 00e2 FFF7FEFF 		bl	initTrack
 346:.\main.c      ****         break;
 1523              		.loc 1 346 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 34


 1524 00e6 38E0     		b	.L85
 1525              	.L91:
 347:.\main.c      ****     case('q'):
 348:.\main.c      ****         track_mode = QUAD_STOP;
 1526              		.loc 1 348 0
 1527 00e8 1D4B     		ldr	r3, .L99
 1528 00ea 0422     		movs	r2, #4
 1529 00ec 1A70     		strb	r2, [r3]
 349:.\main.c      ****         accum_dist = 0;
 1530              		.loc 1 349 0
 1531 00ee 1D4B     		ldr	r3, .L99+4
 1532 00f0 0022     		movs	r2, #0
 1533 00f2 1A80     		strh	r2, [r3]	@ movhi
 350:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 1534              		.loc 1 350 0
 1535 00f4 1C4B     		ldr	r3, .L99+8
 1536 00f6 1B88     		ldrh	r3, [r3]
 1537 00f8 1BB2     		sxth	r3, r3
 1538 00fa 1846     		mov	r0, r3
 1539 00fc FFF7FEFF 		bl	__aeabi_i2f
 1540 0100 0246     		mov	r2, r0
 1541 0102 1A4B     		ldr	r3, .L99+12
 1542 0104 1B68     		ldr	r3, [r3]	@ float
 1543 0106 1046     		mov	r0, r2
 1544 0108 1946     		mov	r1, r3
 1545 010a FFF7FEFF 		bl	__aeabi_fmul
 1546 010e 0346     		mov	r3, r0
 1547 0110 1846     		mov	r0, r3
 1548 0112 FFF7FEFF 		bl	__aeabi_f2iz
 1549 0116 0346     		mov	r3, r0
 1550 0118 9AB2     		uxth	r2, r3
 1551 011a 154B     		ldr	r3, .L99+16
 1552 011c 1A80     		strh	r2, [r3]	@ movhi
 351:.\main.c      ****         char mes[16];
 352:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 1553              		.loc 1 352 0
 1554 011e 144B     		ldr	r3, .L99+16
 1555 0120 1B88     		ldrh	r3, [r3]
 1556 0122 1BB2     		sxth	r3, r3
 1557 0124 3A1D     		adds	r2, r7, #4
 1558 0126 1046     		mov	r0, r2
 1559 0128 1249     		ldr	r1, .L99+20
 1560 012a 1A46     		mov	r2, r3
 1561 012c FFF7FEFF 		bl	sprintf
 353:.\main.c      ****         UART_PutString(mes);
 1562              		.loc 1 353 0
 1563 0130 3B1D     		adds	r3, r7, #4
 1564 0132 1846     		mov	r0, r3
 1565 0134 FFF7FEFF 		bl	UART_PutString
 354:.\main.c      ****         initForward();
 1566              		.loc 1 354 0
 1567 0138 FFF7FEFF 		bl	initForward
 355:.\main.c      ****         break;
 1568              		.loc 1 355 0
 1569 013c 0DE0     		b	.L85
 1570              	.L92:
 356:.\main.c      ****     case ('r'):
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 35


 357:.\main.c      ****         track_mode = RF_STOP;
 1571              		.loc 1 357 0
 1572 013e 084B     		ldr	r3, .L99
 1573 0140 0522     		movs	r2, #5
 1574 0142 1A70     		strb	r2, [r3]
 358:.\main.c      ****         // Make initial position
 359:.\main.c      ****         initial_x_pos = system_state.robot_xpos;
 1575              		.loc 1 359 0
 1576 0144 0C4B     		ldr	r3, .L99+24
 1577 0146 5A88     		ldrh	r2, [r3, #2]
 1578 0148 0C4B     		ldr	r3, .L99+28
 1579 014a 1A80     		strh	r2, [r3]	@ movhi
 360:.\main.c      ****         initial_y_pos = system_state.robot_ypos;
 1580              		.loc 1 360 0
 1581 014c 0A4B     		ldr	r3, .L99+24
 1582 014e 9A88     		ldrh	r2, [r3, #4]
 1583 0150 0B4B     		ldr	r3, .L99+32
 1584 0152 1A80     		strh	r2, [r3]	@ movhi
 361:.\main.c      ****         initForward();
 1585              		.loc 1 361 0
 1586 0154 FFF7FEFF 		bl	initForward
 362:.\main.c      ****         break;
 1587              		.loc 1 362 0
 1588 0158 00BF     		nop
 1589              	.L85:
 1590              	.LBE3:
 363:.\main.c      ****     }
 364:.\main.c      **** }
 1591              		.loc 1 364 0
 1592 015a 1837     		adds	r7, r7, #24
 1593              		.cfi_def_cfa_offset 8
 1594 015c BD46     		mov	sp, r7
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
 1597 015e 80BD     		pop	{r7, pc}
 1598              	.L100:
 1599              		.align	2
 1600              	.L99:
 1601 0160 00000000 		.word	track_mode
 1602 0164 00000000 		.word	accum_dist
 1603 0168 00000000 		.word	target_distance_cm
 1604 016c 00000000 		.word	quad_per_cm
 1605 0170 00000000 		.word	target_distance_quad
 1606 0174 0C000000 		.word	.LC1
 1607 0178 00000000 		.word	system_state
 1608 017c 00000000 		.word	initial_x_pos
 1609 0180 00000000 		.word	initial_y_pos
 1610              		.cfi_endproc
 1611              	.LFE82:
 1612              		.size	BT_rxInt, .-BT_rxInt
 1613              		.section	.text.BT_txInt,"ax",%progbits
 1614              		.align	2
 1615              		.global	BT_txInt
 1616              		.thumb
 1617              		.thumb_func
 1618              		.type	BT_txInt, %function
 1619              	BT_txInt:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 36


 1620              	.LFB83:
 365:.\main.c      **** 
 366:.\main.c      **** //BT
 367:.\main.c      **** CY_ISR(BT_txInt)
 368:.\main.c      **** {
 1621              		.loc 1 368 0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 1, uses_anonymous_args = 0
 1625              		@ link register save eliminated.
 1626 0000 80B4     		push	{r7}
 1627              		.cfi_def_cfa_offset 4
 1628              		.cfi_offset 7, -4
 1629 0002 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 369:.\main.c      ****     
 370:.\main.c      **** }
 1631              		.loc 1 370 0
 1632 0004 BD46     		mov	sp, r7
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed
 1635 0006 5DF8047B 		ldr	r7, [sp], #4
 1636              		.cfi_restore 7
 1637              		.cfi_def_cfa_offset 0
 1638 000a 7047     		bx	lr
 1639              		.cfi_endproc
 1640              	.LFE83:
 1641              		.size	BT_txInt, .-BT_txInt
 1642              		.section	.text.adc_isr,"ax",%progbits
 1643              		.align	2
 1644              		.global	adc_isr
 1645              		.thumb
 1646              		.thumb_func
 1647              		.type	adc_isr, %function
 1648              	adc_isr:
 1649              	.LFB84:
 371:.\main.c      **** 
 372:.\main.c      **** //ADC:
 373:.\main.c      **** CY_ISR (adc_isr)
 374:.\main.c      **** {
 1650              		.loc 1 374 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
 375:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 376:.\main.c      ****     adc_result = ADC_GetResult16();
 1660              		.loc 1 376 0
 1661 0004 FFF7FEFF 		bl	ADC_GetResult16
 1662 0008 0346     		mov	r3, r0
 1663 000a 1A46     		mov	r2, r3
 1664 000c 044B     		ldr	r3, .L103
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 37


 1665 000e 1A80     		strh	r2, [r3]	@ movhi
 377:.\main.c      ****     flag_receive_ADC = 1;
 1666              		.loc 1 377 0
 1667 0010 044B     		ldr	r3, .L103+4
 1668 0012 0122     		movs	r2, #1
 1669 0014 1A70     		strb	r2, [r3]
 378:.\main.c      ****     flag_print_rf = 1;
 1670              		.loc 1 378 0
 1671 0016 044B     		ldr	r3, .L103+8
 1672 0018 0122     		movs	r2, #1
 1673 001a 1A70     		strb	r2, [r3]
 379:.\main.c      ****     //LED_Write(~LED_Read());
 380:.\main.c      **** }
 1674              		.loc 1 380 0
 1675 001c 80BD     		pop	{r7, pc}
 1676              	.L104:
 1677 001e 00BF     		.align	2
 1678              	.L103:
 1679 0020 00000000 		.word	adc_result
 1680 0024 00000000 		.word	flag_receive_ADC
 1681 0028 00000000 		.word	flag_print_rf
 1682              		.cfi_endproc
 1683              	.LFE84:
 1684              		.size	adc_isr, .-adc_isr
 1685              		.section	.rodata
 1686 001e 0000     		.align	2
 1687              	.LC2:
 1688 0020 64697374 		.ascii	"dist: %d\015\012\000"
 1688      3A202564 
 1688      0D0A00
 1689              		.global	__aeabi_i2d
 1690              		.global	__aeabi_ddiv
 1691              		.global	__aeabi_dcmple
 1692              		.section	.text.isr_quad1,"ax",%progbits
 1693              		.align	2
 1694              		.global	isr_quad1
 1695              		.thumb
 1696              		.thumb_func
 1697              		.type	isr_quad1, %function
 1698              	isr_quad1:
 1699              	.LFB85:
 381:.\main.c      **** 
 382:.\main.c      **** CY_ISR (isr_quad1)
 383:.\main.c      **** {
 1700              		.loc 1 383 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 24
 1703              		@ frame_needed = 1, uses_anonymous_args = 0
 1704 0000 B0B5     		push	{r4, r5, r7, lr}
 1705              		.cfi_def_cfa_offset 16
 1706              		.cfi_offset 4, -16
 1707              		.cfi_offset 5, -12
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 86B0     		sub	sp, sp, #24
 1711              		.cfi_def_cfa_offset 40
 1712 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 38


 1713              		.cfi_def_cfa_register 7
 384:.\main.c      ****     //LED_Write(~LED_Read());
 385:.\main.c      ****     last_quad_count1 = quad_count1;
 1714              		.loc 1 385 0
 1715 0006 6A4B     		ldr	r3, .L112+16
 1716 0008 1A88     		ldrh	r2, [r3]
 1717 000a 6A4B     		ldr	r3, .L112+20
 1718 000c 1A80     		strh	r2, [r3]	@ movhi
 386:.\main.c      ****     last_quad_count2 = quad_count2;
 1719              		.loc 1 386 0
 1720 000e 6A4B     		ldr	r3, .L112+24
 1721 0010 1A88     		ldrh	r2, [r3]
 1722 0012 6A4B     		ldr	r3, .L112+28
 1723 0014 1A80     		strh	r2, [r3]	@ movhi
 387:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1724              		.loc 1 387 0
 1725 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1726 001a 0346     		mov	r3, r0
 1727 001c 1A46     		mov	r2, r3
 1728 001e 644B     		ldr	r3, .L112+16
 1729 0020 1A80     		strh	r2, [r3]	@ movhi
 388:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1730              		.loc 1 388 0
 1731 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1732 0026 0346     		mov	r3, r0
 1733 0028 1A46     		mov	r2, r3
 1734 002a 634B     		ldr	r3, .L112+24
 1735 002c 1A80     		strh	r2, [r3]	@ movhi
 389:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1736              		.loc 1 389 0
 1737 002e 604B     		ldr	r3, .L112+16
 1738 0030 1B88     		ldrh	r3, [r3]
 1739 0032 9AB2     		uxth	r2, r3
 1740 0034 5F4B     		ldr	r3, .L112+20
 1741 0036 1B88     		ldrh	r3, [r3]
 1742 0038 9BB2     		uxth	r3, r3
 1743 003a D31A     		subs	r3, r2, r3
 1744 003c 9BB2     		uxth	r3, r3
 1745 003e 9AB2     		uxth	r2, r3
 1746 0040 5F4B     		ldr	r3, .L112+32
 1747 0042 1A80     		strh	r2, [r3]	@ movhi
 390:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1748              		.loc 1 390 0
 1749 0044 5C4B     		ldr	r3, .L112+24
 1750 0046 1B88     		ldrh	r3, [r3]
 1751 0048 9AB2     		uxth	r2, r3
 1752 004a 5C4B     		ldr	r3, .L112+28
 1753 004c 1B88     		ldrh	r3, [r3]
 1754 004e 9BB2     		uxth	r3, r3
 1755 0050 D31A     		subs	r3, r2, r3
 1756 0052 9BB2     		uxth	r3, r3
 1757 0054 9AB2     		uxth	r2, r3
 1758 0056 5B4B     		ldr	r3, .L112+36
 1759 0058 1A80     		strh	r2, [r3]	@ movhi
 391:.\main.c      ****     
 392:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 1760              		.loc 1 392 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 39


 1761 005a 554B     		ldr	r3, .L112+16
 1762 005c 1B88     		ldrh	r3, [r3]
 1763 005e 1BB2     		sxth	r3, r3
 1764 0060 002B     		cmp	r3, #0
 1765 0062 B8BF     		it	lt
 1766 0064 5B42     		rsblt	r3, r3, #0
 1767 0066 40F6B832 		movw	r2, #3000
 1768 006a 9342     		cmp	r3, r2
 1769 006c 17DD     		ble	.L106
 1770              		.loc 1 392 0 is_stmt 0 discriminator 1
 1771 006e 564B     		ldr	r3, .L112+40
 1772 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 0072 012B     		cmp	r3, #1
 1774 0074 13D0     		beq	.L106
 1775              		.loc 1 392 0 discriminator 2
 1776 0076 544B     		ldr	r3, .L112+40
 1777 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1778 007a 022B     		cmp	r3, #2
 1779 007c 0FD0     		beq	.L106
 1780              		.loc 1 392 0 discriminator 3
 1781 007e 524B     		ldr	r3, .L112+40
 1782 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 0082 042B     		cmp	r3, #4
 1784 0084 0BD0     		beq	.L106
 393:.\main.c      ****     {
 394:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1785              		.loc 1 394 0 is_stmt 1
 1786 0086 0020     		movs	r0, #0
 1787 0088 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 395:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1788              		.loc 1 395 0
 1789 008c 0020     		movs	r0, #0
 1790 008e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 396:.\main.c      ****         quad_count1 = 0;
 1791              		.loc 1 396 0
 1792 0092 474B     		ldr	r3, .L112+16
 1793 0094 0022     		movs	r2, #0
 1794 0096 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****         quad_count2 = 0;
 1795              		.loc 1 397 0
 1796 0098 474B     		ldr	r3, .L112+24
 1797 009a 0022     		movs	r2, #0
 1798 009c 1A80     		strh	r2, [r3]	@ movhi
 1799              	.L106:
 398:.\main.c      ****     }
 399:.\main.c      **** 
 400:.\main.c      ****     flag_calc_wheelspeed = 1;
 1800              		.loc 1 400 0
 1801 009e 4B4B     		ldr	r3, .L112+44
 1802 00a0 0122     		movs	r2, #1
 1803 00a2 1A70     		strb	r2, [r3]
 401:.\main.c      ****     
 402:.\main.c      ****     if (track_mode == QUAD_STOP)
 1804              		.loc 1 402 0
 1805 00a4 4A4B     		ldr	r3, .L112+48
 1806 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1807 00a8 042B     		cmp	r3, #4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 40


 1808 00aa 2AD1     		bne	.L107
 1809              	.LBB4:
 403:.\main.c      ****     {
 404:.\main.c      ****         accum_dist += quad_diff1;
 1810              		.loc 1 404 0
 1811 00ac 494B     		ldr	r3, .L112+52
 1812 00ae 1B88     		ldrh	r3, [r3]
 1813 00b0 9AB2     		uxth	r2, r3
 1814 00b2 434B     		ldr	r3, .L112+32
 1815 00b4 1B88     		ldrh	r3, [r3]
 1816 00b6 9BB2     		uxth	r3, r3
 1817 00b8 1344     		add	r3, r3, r2
 1818 00ba 9BB2     		uxth	r3, r3
 1819 00bc 9AB2     		uxth	r2, r3
 1820 00be 454B     		ldr	r3, .L112+52
 1821 00c0 1A80     		strh	r2, [r3]	@ movhi
 405:.\main.c      ****         char mes[16];
 406:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 1822              		.loc 1 406 0
 1823 00c2 444B     		ldr	r3, .L112+52
 1824 00c4 1B88     		ldrh	r3, [r3]
 1825 00c6 1BB2     		sxth	r3, r3
 1826 00c8 3A46     		mov	r2, r7
 1827 00ca 1046     		mov	r0, r2
 1828 00cc 4249     		ldr	r1, .L112+56
 1829 00ce 1A46     		mov	r2, r3
 1830 00d0 FFF7FEFF 		bl	sprintf
 407:.\main.c      ****         UART_PutString(mes);
 1831              		.loc 1 407 0
 1832 00d4 3B46     		mov	r3, r7
 1833 00d6 1846     		mov	r0, r3
 1834 00d8 FFF7FEFF 		bl	UART_PutString
 408:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 1835              		.loc 1 408 0
 1836 00dc 3D4B     		ldr	r3, .L112+52
 1837 00de 1B88     		ldrh	r3, [r3]
 1838 00e0 1BB2     		sxth	r3, r3
 1839 00e2 83EAE372 		eor	r2, r3, r3, asr #31
 1840 00e6 A2EBE372 		sub	r2, r2, r3, asr #31
 1841 00ea 3C4B     		ldr	r3, .L112+60
 1842 00ec 1B88     		ldrh	r3, [r3]
 1843 00ee 1BB2     		sxth	r3, r3
 1844 00f0 9A42     		cmp	r2, r3
 1845 00f2 05DB     		blt	.L108
 409:.\main.c      ****         {
 410:.\main.c      ****             initBrake();
 1846              		.loc 1 410 0
 1847 00f4 FFF7FEFF 		bl	initBrake
 411:.\main.c      ****             track_mode = NO_TRACK;
 1848              		.loc 1 411 0
 1849 00f8 354B     		ldr	r3, .L112+48
 1850 00fa 0022     		movs	r2, #0
 1851 00fc 1A70     		strb	r2, [r3]
 1852              	.LBE4:
 1853 00fe 4CE0     		b	.L105
 1854              	.L108:
 1855 0100 4BE0     		b	.L105
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 41


 1856              	.L107:
 412:.\main.c      ****         }
 413:.\main.c      ****     } else if (track_mode == RF_STOP)
 1857              		.loc 1 413 0
 1858 0102 334B     		ldr	r3, .L112+48
 1859 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1860 0106 052B     		cmp	r3, #5
 1861 0108 47D1     		bne	.L105
 1862              	.LBB5:
 414:.\main.c      ****     { 
 415:.\main.c      ****         // Do pythag
 416:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 1863              		.loc 1 416 0
 1864 010a 354B     		ldr	r3, .L112+64
 1865 010c 5B88     		ldrh	r3, [r3, #2]
 1866 010e 1AB2     		sxth	r2, r3
 1867 0110 344B     		ldr	r3, .L112+68
 1868 0112 1B88     		ldrh	r3, [r3]
 1869 0114 1BB2     		sxth	r3, r3
 1870 0116 D31A     		subs	r3, r2, r3
 1871 0118 1846     		mov	r0, r3
 1872 011a FFF7FEFF 		bl	__aeabi_i2d
 1873 011e 0246     		mov	r2, r0
 1874 0120 0B46     		mov	r3, r1
 1875 0122 1046     		mov	r0, r2
 1876 0124 1946     		mov	r1, r3
 1877 0126 1EA3     		adr	r3, .L112
 1878 0128 D3E90023 		ldrd	r2, [r3]
 1879 012c FFF7FEFF 		bl	__aeabi_ddiv
 1880 0130 0246     		mov	r2, r0
 1881 0132 0B46     		mov	r3, r1
 1882 0134 1446     		mov	r4, r2
 1883 0136 1D46     		mov	r5, r3
 1884 0138 294B     		ldr	r3, .L112+64
 1885 013a 9B88     		ldrh	r3, [r3, #4]
 1886 013c 1AB2     		sxth	r2, r3
 1887 013e 2A4B     		ldr	r3, .L112+72
 1888 0140 1B88     		ldrh	r3, [r3]
 1889 0142 1BB2     		sxth	r3, r3
 1890 0144 D31A     		subs	r3, r2, r3
 1891 0146 1846     		mov	r0, r3
 1892 0148 FFF7FEFF 		bl	__aeabi_i2d
 1893 014c 0246     		mov	r2, r0
 1894 014e 0B46     		mov	r3, r1
 1895 0150 1046     		mov	r0, r2
 1896 0152 1946     		mov	r1, r3
 1897 0154 14A3     		adr	r3, .L112+8
 1898 0156 D3E90023 		ldrd	r2, [r3]
 1899 015a FFF7FEFF 		bl	__aeabi_ddiv
 1900 015e 0246     		mov	r2, r0
 1901 0160 0B46     		mov	r3, r1
 1902 0162 2046     		mov	r0, r4
 1903 0164 2946     		mov	r1, r5
 1904 0166 FFF7FEFF 		bl	hypot
 1905 016a C7E90401 		strd	r0, [r7, #16]
 417:.\main.c      ****         if (dist >= target_distance_cm)
 1906              		.loc 1 417 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 42


 1907 016e 1F4B     		ldr	r3, .L112+76
 1908 0170 1B88     		ldrh	r3, [r3]
 1909 0172 1BB2     		sxth	r3, r3
 1910 0174 1846     		mov	r0, r3
 1911 0176 FFF7FEFF 		bl	__aeabi_i2d
 1912 017a 0246     		mov	r2, r0
 1913 017c 0B46     		mov	r3, r1
 1914 017e 1046     		mov	r0, r2
 1915 0180 1946     		mov	r1, r3
 1916 0182 D7E90423 		ldrd	r2, [r7, #16]
 1917 0186 FFF7FEFF 		bl	__aeabi_dcmple
 1918 018a 0346     		mov	r3, r0
 1919 018c 002B     		cmp	r3, #0
 1920 018e 04D0     		beq	.L105
 418:.\main.c      ****         {
 419:.\main.c      ****             initBrake();
 1921              		.loc 1 419 0
 1922 0190 FFF7FEFF 		bl	initBrake
 420:.\main.c      ****             track_mode = NO_TRACK;
 1923              		.loc 1 420 0
 1924 0194 0E4B     		ldr	r3, .L112+48
 1925 0196 0022     		movs	r2, #0
 1926 0198 1A70     		strb	r2, [r3]
 1927              	.L105:
 1928              	.LBE5:
 421:.\main.c      ****         }
 422:.\main.c      ****     }
 423:.\main.c      ****     
 424:.\main.c      **** }
 1929              		.loc 1 424 0
 1930 019a 1837     		adds	r7, r7, #24
 1931              		.cfi_def_cfa_offset 16
 1932 019c BD46     		mov	sp, r7
 1933              		.cfi_def_cfa_register 13
 1934              		@ sp needed
 1935 019e B0BD     		pop	{r4, r5, r7, pc}
 1936              	.L113:
 1937              		.align	3
 1938              	.L112:
 1939 01a0 711B0DE0 		.word	-536011919
 1940 01a4 2DF01140 		.word	1074917421
 1941 01a8 9C6D6E4C 		.word	1282305436
 1942 01ac 4F181740 		.word	1075255375
 1943 01b0 00000000 		.word	quad_count1
 1944 01b4 00000000 		.word	last_quad_count1
 1945 01b8 00000000 		.word	quad_count2
 1946 01bc 00000000 		.word	last_quad_count2
 1947 01c0 00000000 		.word	quad_diff1
 1948 01c4 00000000 		.word	quad_diff2
 1949 01c8 00000000 		.word	movement_state
 1950 01cc 00000000 		.word	flag_calc_wheelspeed
 1951 01d0 00000000 		.word	track_mode
 1952 01d4 00000000 		.word	accum_dist
 1953 01d8 20000000 		.word	.LC2
 1954 01dc 00000000 		.word	target_distance_quad
 1955 01e0 00000000 		.word	system_state
 1956 01e4 00000000 		.word	initial_x_pos
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 43


 1957 01e8 00000000 		.word	initial_y_pos
 1958 01ec 00000000 		.word	target_distance_cm
 1959              		.cfi_endproc
 1960              	.LFE85:
 1961              		.size	isr_quad1, .-isr_quad1
 1962              		.section	.text.isr_turn_timer,"ax",%progbits
 1963              		.align	2
 1964              		.global	isr_turn_timer
 1965              		.thumb
 1966              		.thumb_func
 1967              		.type	isr_turn_timer, %function
 1968              	isr_turn_timer:
 1969              	.LFB86:
 425:.\main.c      **** 
 426:.\main.c      **** CY_ISR(isr_turn_timer)
 427:.\main.c      **** {
 1970              		.loc 1 427 0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 1, uses_anonymous_args = 0
 1974 0000 80B5     		push	{r7, lr}
 1975              		.cfi_def_cfa_offset 8
 1976              		.cfi_offset 7, -8
 1977              		.cfi_offset 14, -4
 1978 0002 00AF     		add	r7, sp, #0
 1979              		.cfi_def_cfa_register 7
 428:.\main.c      ****     if(movement_state == LTURN)
 1980              		.loc 1 428 0
 1981 0004 194B     		ldr	r3, .L118
 1982 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1983 0008 012B     		cmp	r3, #1
 1984 000a 15D1     		bne	.L115
 429:.\main.c      ****     {
 430:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1985              		.loc 1 430 0
 1986 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1987 0010 0346     		mov	r3, r0
 1988 0012 1A46     		mov	r2, r3
 1989 0014 164B     		ldr	r3, .L118+4
 1990 0016 1B88     		ldrh	r3, [r3]
 1991 0018 1BB2     		sxth	r3, r3
 1992 001a D31A     		subs	r3, r2, r3
 1993 001c 002B     		cmp	r3, #0
 1994 001e B8BF     		it	lt
 1995 0020 5B42     		rsblt	r3, r3, #0
 1996 0022 CF2B     		cmp	r3, #207
 1997 0024 21DD     		ble	.L114
 431:.\main.c      ****         {
 432:.\main.c      ****             //movement_state = STOPPED;
 433:.\main.c      ****             brakeMotor();
 1998              		.loc 1 433 0
 1999 0026 FFF7FEFF 		bl	brakeMotor
 434:.\main.c      ****             movement_state = prev_movement_state;
 2000              		.loc 1 434 0
 2001 002a 124B     		ldr	r3, .L118+8
 2002 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2003 002e 0F4B     		ldr	r3, .L118
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 44


 2004 0030 1A70     		strb	r2, [r3]
 435:.\main.c      ****             Timer_2_Stop();
 2005              		.loc 1 435 0
 2006 0032 FFF7FEFF 		bl	Timer_2_Stop
 2007 0036 18E0     		b	.L114
 2008              	.L115:
 436:.\main.c      ****         }
 437:.\main.c      ****     }
 438:.\main.c      ****     else if (movement_state == RTURN)
 2009              		.loc 1 438 0
 2010 0038 0C4B     		ldr	r3, .L118
 2011 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2012 003c 022B     		cmp	r3, #2
 2013 003e 14D1     		bne	.L114
 439:.\main.c      ****     {
 440:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2014              		.loc 1 440 0
 2015 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2016 0044 0346     		mov	r3, r0
 2017 0046 1A46     		mov	r2, r3
 2018 0048 094B     		ldr	r3, .L118+4
 2019 004a 1B88     		ldrh	r3, [r3]
 2020 004c 1BB2     		sxth	r3, r3
 2021 004e D31A     		subs	r3, r2, r3
 2022 0050 002B     		cmp	r3, #0
 2023 0052 B8BF     		it	lt
 2024 0054 5B42     		rsblt	r3, r3, #0
 2025 0056 CF2B     		cmp	r3, #207
 2026 0058 07DD     		ble	.L114
 441:.\main.c      ****         {
 442:.\main.c      ****             //movement_state = STOPPED;
 443:.\main.c      ****             brakeMotor();
 2027              		.loc 1 443 0
 2028 005a FFF7FEFF 		bl	brakeMotor
 444:.\main.c      ****             movement_state = prev_movement_state;
 2029              		.loc 1 444 0
 2030 005e 054B     		ldr	r3, .L118+8
 2031 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2032 0062 024B     		ldr	r3, .L118
 2033 0064 1A70     		strb	r2, [r3]
 445:.\main.c      ****             Timer_2_Stop();
 2034              		.loc 1 445 0
 2035 0066 FFF7FEFF 		bl	Timer_2_Stop
 2036              	.L114:
 446:.\main.c      ****         }
 447:.\main.c      ****     }
 448:.\main.c      **** }
 2037              		.loc 1 448 0
 2038 006a 80BD     		pop	{r7, pc}
 2039              	.L119:
 2040              		.align	2
 2041              	.L118:
 2042 006c 00000000 		.word	movement_state
 2043 0070 00000000 		.word	start_turn_count
 2044 0074 00000000 		.word	prev_movement_state
 2045              		.cfi_endproc
 2046              	.LFE86:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 45


 2047              		.size	isr_turn_timer, .-isr_turn_timer
 2048              		.section	.text.Stop_on_line,"ax",%progbits
 2049              		.align	2
 2050              		.global	Stop_on_line
 2051              		.thumb
 2052              		.thumb_func
 2053              		.type	Stop_on_line, %function
 2054              	Stop_on_line:
 2055              	.LFB87:
 449:.\main.c      **** 
 450:.\main.c      **** 
 451:.\main.c      **** CY_ISR (Stop_on_line)
 452:.\main.c      **** {
 2056              		.loc 1 452 0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 0
 2059              		@ frame_needed = 1, uses_anonymous_args = 0
 2060              		@ link register save eliminated.
 2061 0000 80B4     		push	{r7}
 2062              		.cfi_def_cfa_offset 4
 2063              		.cfi_offset 7, -4
 2064 0002 00AF     		add	r7, sp, #0
 2065              		.cfi_def_cfa_register 7
 453:.\main.c      ****     movement_state = STOPPED;
 2066              		.loc 1 453 0
 2067 0004 054B     		ldr	r3, .L122
 2068 0006 0322     		movs	r2, #3
 2069 0008 1A70     		strb	r2, [r3]
 454:.\main.c      ****     if(movement_state != DRIVE) return;
 2070              		.loc 1 454 0
 2071 000a 044B     		ldr	r3, .L122
 2072 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 000e 002B     		cmp	r3, #0
 2074 0010 00D0     		beq	.L120
 2075 0012 00BF     		nop
 2076              	.L120:
 455:.\main.c      ****     //initTurnLeft();
 456:.\main.c      **** }
 2077              		.loc 1 456 0
 2078 0014 BD46     		mov	sp, r7
 2079              		.cfi_def_cfa_register 13
 2080              		@ sp needed
 2081 0016 5DF8047B 		ldr	r7, [sp], #4
 2082              		.cfi_restore 7
 2083              		.cfi_def_cfa_offset 0
 2084 001a 7047     		bx	lr
 2085              	.L123:
 2086              		.align	2
 2087              	.L122:
 2088 001c 00000000 		.word	movement_state
 2089              		.cfi_endproc
 2090              	.LFE87:
 2091              		.size	Stop_on_line, .-Stop_on_line
 2092              		.section	.rodata
 2093 002b 00       		.align	2
 2094              	.LC3:
 2095 002c 53746172 		.ascii	"Starting robot!\015\012\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 46


 2095      74696E67 
 2095      20726F62 
 2095      6F74210D 
 2095      0A00
 2096              		.section	.text.button,"ax",%progbits
 2097              		.align	2
 2098              		.global	button
 2099              		.thumb
 2100              		.thumb_func
 2101              		.type	button, %function
 2102              	button:
 2103              	.LFB88:
 457:.\main.c      **** 
 458:.\main.c      **** CY_ISR (button)
 459:.\main.c      **** {
 2104              		.loc 1 459 0
 2105              		.cfi_startproc
 2106              		@ args = 0, pretend = 0, frame = 0
 2107              		@ frame_needed = 1, uses_anonymous_args = 0
 2108 0000 80B5     		push	{r7, lr}
 2109              		.cfi_def_cfa_offset 8
 2110              		.cfi_offset 7, -8
 2111              		.cfi_offset 14, -4
 2112 0002 00AF     		add	r7, sp, #0
 2113              		.cfi_def_cfa_register 7
 460:.\main.c      ****     if(BT_ENABLED)
 461:.\main.c      ****     {
 462:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2114              		.loc 1 462 0
 2115 0004 0348     		ldr	r0, .L125
 2116 0006 FFF7FEFF 		bl	UART_PutString
 463:.\main.c      ****     }
 464:.\main.c      ****     movement_state = DRIVE;
 2117              		.loc 1 464 0
 2118 000a 034B     		ldr	r3, .L125+4
 2119 000c 0022     		movs	r2, #0
 2120 000e 1A70     		strb	r2, [r3]
 465:.\main.c      **** }
 2121              		.loc 1 465 0
 2122 0010 80BD     		pop	{r7, pc}
 2123              	.L126:
 2124 0012 00BF     		.align	2
 2125              	.L125:
 2126 0014 2C000000 		.word	.LC3
 2127 0018 00000000 		.word	movement_state
 2128              		.cfi_endproc
 2129              	.LFE88:
 2130              		.size	button, .-button
 2131              		.section	.text.isr_adcTimer,"ax",%progbits
 2132              		.align	2
 2133              		.global	isr_adcTimer
 2134              		.thumb
 2135              		.thumb_func
 2136              		.type	isr_adcTimer, %function
 2137              	isr_adcTimer:
 2138              	.LFB89:
 466:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 47


 467:.\main.c      **** CY_ISR(isr_adcTimer)
 468:.\main.c      **** {
 2139              		.loc 1 468 0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 0
 2142              		@ frame_needed = 1, uses_anonymous_args = 0
 2143 0000 80B5     		push	{r7, lr}
 2144              		.cfi_def_cfa_offset 8
 2145              		.cfi_offset 7, -8
 2146              		.cfi_offset 14, -4
 2147 0002 00AF     		add	r7, sp, #0
 2148              		.cfi_def_cfa_register 7
 469:.\main.c      ****     ADC_StartConvert();
 2149              		.loc 1 469 0
 2150 0004 FFF7FEFF 		bl	ADC_StartConvert
 470:.\main.c      **** }
 2151              		.loc 1 470 0
 2152 0008 80BD     		pop	{r7, pc}
 2153              		.cfi_endproc
 2154              	.LFE89:
 2155              		.size	isr_adcTimer, .-isr_adcTimer
 2156 000a 00BF     		.section	.text.Quad_Dec_response,"ax",%progbits
 2157              		.align	2
 2158              		.global	Quad_Dec_response
 2159              		.thumb
 2160              		.thumb_func
 2161              		.type	Quad_Dec_response, %function
 2162              	Quad_Dec_response:
 2163              	.LFB90:
 471:.\main.c      **** 
 472:.\main.c      **** void Quad_Dec_response()
 473:.\main.c      **** {
 2164              		.loc 1 473 0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 32
 2167              		@ frame_needed = 1, uses_anonymous_args = 0
 2168 0000 B0B5     		push	{r4, r5, r7, lr}
 2169              		.cfi_def_cfa_offset 16
 2170              		.cfi_offset 4, -16
 2171              		.cfi_offset 5, -12
 2172              		.cfi_offset 7, -8
 2173              		.cfi_offset 14, -4
 2174 0002 88B0     		sub	sp, sp, #32
 2175              		.cfi_def_cfa_offset 48
 2176 0004 00AF     		add	r7, sp, #0
 2177              		.cfi_def_cfa_register 7
 474:.\main.c      ****     //Check if the flag has been set
 475:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2178              		.loc 1 475 0
 2179 0006 814B     		ldr	r3, .L136
 2180 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2181 000a 002B     		cmp	r3, #0
 2182 000c 00D1     		bne	.L129
 2183 000e FAE0     		b	.L128
 2184              	.L129:
 476:.\main.c      ****     flag_calc_wheelspeed = 0;
 2185              		.loc 1 476 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 48


 2186 0010 7E4B     		ldr	r3, .L136
 2187 0012 0022     		movs	r2, #0
 2188 0014 1A70     		strb	r2, [r3]
 477:.\main.c      ****     
 478:.\main.c      ****     //char wheel_1_str [64];
 479:.\main.c      ****     //char wheel_2_str [64];
 480:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 481:.\main.c      ****     //usbPutString(wheel_1_str);
 482:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 483:.\main.c      ****     
 484:.\main.c      ****     //usbPutString(wheel_2_str);
 485:.\main.c      ****     
 486:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2189              		.loc 1 486 0
 2190 0016 7E4B     		ldr	r3, .L136+4
 2191 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2192 001a FB81     		strh	r3, [r7, #14]	@ movhi
 487:.\main.c      ****     int16 rightSpeed = quad_diff2;
 2193              		.loc 1 487 0
 2194 001c 7D4B     		ldr	r3, .L136+8
 2195 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2196 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 488:.\main.c      ****     double scalingLeft = 1;
 2197              		.loc 1 488 0
 2198 0022 4FF00002 		mov	r2, #0
 2199 0026 7C4B     		ldr	r3, .L136+12
 2200 0028 C7E90623 		strd	r2, [r7, #24]
 489:.\main.c      ****     double scalingRight = 1;
 2201              		.loc 1 489 0
 2202 002c 4FF00002 		mov	r2, #0
 2203 0030 794B     		ldr	r3, .L136+12
 2204 0032 C7E90423 		strd	r2, [r7, #16]
 490:.\main.c      ****     
 491:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 492:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2205              		.loc 1 492 0
 2206 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2207 003a 002B     		cmp	r3, #0
 2208 003c 0DD1     		bne	.L131
 2209              		.loc 1 492 0 is_stmt 0 discriminator 1
 2210 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2211 0042 002B     		cmp	r3, #0
 2212 0044 09D1     		bne	.L131
 493:.\main.c      ****        //leftSpeed = 3;
 494:.\main.c      ****         scalingLeft = 8;
 2213              		.loc 1 494 0 is_stmt 1
 2214 0046 4FF00002 		mov	r2, #0
 2215 004a 744B     		ldr	r3, .L136+16
 2216 004c C7E90623 		strd	r2, [r7, #24]
 495:.\main.c      ****         scalingRight = 8;
 2217              		.loc 1 495 0
 2218 0050 4FF00002 		mov	r2, #0
 2219 0054 714B     		ldr	r3, .L136+16
 2220 0056 C7E90423 		strd	r2, [r7, #16]
 2221              	.L131:
 496:.\main.c      ****     }
 497:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 49


 498:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2222              		.loc 1 498 0
 2223 005a 714B     		ldr	r3, .L136+20
 2224 005c 1B88     		ldrh	r3, [r3]
 2225 005e 1AB2     		sxth	r2, r3
 2226 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2227 0064 002B     		cmp	r3, #0
 2228 0066 B8BF     		it	lt
 2229 0068 5B42     		rsblt	r3, r3, #0
 2230 006a D31A     		subs	r3, r2, r3
 2231 006c BB60     		str	r3, [r7, #8]
 499:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 2232              		.loc 1 499 0
 2233 006e BB68     		ldr	r3, [r7, #8]
 2234 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2235 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2236 0078 BB68     		ldr	r3, [r7, #8]
 2237 007a 92FBF3F3 		sdiv	r3, r2, r3
 2238 007e 1846     		mov	r0, r3
 2239 0080 FFF7FEFF 		bl	__aeabi_i2d
 2240 0084 0446     		mov	r4, r0
 2241 0086 0D46     		mov	r5, r1
 2242 0088 BB68     		ldr	r3, [r7, #8]
 2243 008a 002B     		cmp	r3, #0
 2244 008c B8BF     		it	lt
 2245 008e 5B42     		rsblt	r3, r3, #0
 2246 0090 1846     		mov	r0, r3
 2247 0092 FFF7FEFF 		bl	__aeabi_i2d
 2248 0096 0246     		mov	r2, r0
 2249 0098 0B46     		mov	r3, r1
 2250 009a 1046     		mov	r0, r2
 2251 009c 1946     		mov	r1, r3
 2252 009e FFF7FEFF 		bl	sqrt
 2253 00a2 0246     		mov	r2, r0
 2254 00a4 0B46     		mov	r3, r1
 2255 00a6 2046     		mov	r0, r4
 2256 00a8 2946     		mov	r1, r5
 2257 00aa FFF7FEFF 		bl	__aeabi_dmul
 2258 00ae 0246     		mov	r2, r0
 2259 00b0 0B46     		mov	r3, r1
 2260 00b2 1046     		mov	r0, r2
 2261 00b4 1946     		mov	r1, r3
 2262 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2263 00ba 0346     		mov	r3, r0
 2264 00bc 7B60     		str	r3, [r7, #4]
 500:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2265              		.loc 1 500 0
 2266 00be 594B     		ldr	r3, .L136+24
 2267 00c0 1B88     		ldrh	r3, [r3]
 2268 00c2 1BB2     		sxth	r3, r3
 2269 00c4 1846     		mov	r0, r3
 2270 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2271 00ca 0446     		mov	r4, r0
 2272 00cc 0D46     		mov	r5, r1
 2273 00ce 7868     		ldr	r0, [r7, #4]
 2274 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2275 00d4 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 50


 2276 00d6 0B46     		mov	r3, r1
 2277 00d8 1046     		mov	r0, r2
 2278 00da 1946     		mov	r1, r3
 2279 00dc D7E90623 		ldrd	r2, [r7, #24]
 2280 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2281 00e4 0246     		mov	r2, r0
 2282 00e6 0B46     		mov	r3, r1
 2283 00e8 2046     		mov	r0, r4
 2284 00ea 2946     		mov	r1, r5
 2285 00ec FFF7FEFF 		bl	__aeabi_dadd
 2286 00f0 0246     		mov	r2, r0
 2287 00f2 0B46     		mov	r3, r1
 2288 00f4 1046     		mov	r0, r2
 2289 00f6 1946     		mov	r1, r3
 2290 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2291 00fc 0346     		mov	r3, r0
 2292 00fe 9AB2     		uxth	r2, r3
 2293 0100 484B     		ldr	r3, .L136+24
 2294 0102 1A80     		strh	r2, [r3]	@ movhi
 501:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2295              		.loc 1 501 0
 2296 0104 484B     		ldr	r3, .L136+28
 2297 0106 1B88     		ldrh	r3, [r3]
 2298 0108 1AB2     		sxth	r2, r3
 2299 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2300 010e 002B     		cmp	r3, #0
 2301 0110 B8BF     		it	lt
 2302 0112 5B42     		rsblt	r3, r3, #0
 2303 0114 D31A     		subs	r3, r2, r3
 2304 0116 BB60     		str	r3, [r7, #8]
 502:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2305              		.loc 1 502 0
 2306 0118 BB68     		ldr	r3, [r7, #8]
 2307 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2308 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2309 0122 BB68     		ldr	r3, [r7, #8]
 2310 0124 92FBF3F3 		sdiv	r3, r2, r3
 2311 0128 1846     		mov	r0, r3
 2312 012a FFF7FEFF 		bl	__aeabi_i2d
 2313 012e 0446     		mov	r4, r0
 2314 0130 0D46     		mov	r5, r1
 2315 0132 BB68     		ldr	r3, [r7, #8]
 2316 0134 002B     		cmp	r3, #0
 2317 0136 B8BF     		it	lt
 2318 0138 5B42     		rsblt	r3, r3, #0
 2319 013a 1846     		mov	r0, r3
 2320 013c FFF7FEFF 		bl	__aeabi_i2d
 2321 0140 0246     		mov	r2, r0
 2322 0142 0B46     		mov	r3, r1
 2323 0144 1046     		mov	r0, r2
 2324 0146 1946     		mov	r1, r3
 2325 0148 FFF7FEFF 		bl	sqrt
 2326 014c 0246     		mov	r2, r0
 2327 014e 0B46     		mov	r3, r1
 2328 0150 2046     		mov	r0, r4
 2329 0152 2946     		mov	r1, r5
 2330 0154 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 51


 2331 0158 0246     		mov	r2, r0
 2332 015a 0B46     		mov	r3, r1
 2333 015c 1046     		mov	r0, r2
 2334 015e 1946     		mov	r1, r3
 2335 0160 FFF7FEFF 		bl	__aeabi_d2iz
 2336 0164 0346     		mov	r3, r0
 2337 0166 7B60     		str	r3, [r7, #4]
 503:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 2338              		.loc 1 503 0
 2339 0168 304B     		ldr	r3, .L136+32
 2340 016a 1B88     		ldrh	r3, [r3]
 2341 016c 1BB2     		sxth	r3, r3
 2342 016e 1846     		mov	r0, r3
 2343 0170 FFF7FEFF 		bl	__aeabi_i2d
 2344 0174 0446     		mov	r4, r0
 2345 0176 0D46     		mov	r5, r1
 2346 0178 7868     		ldr	r0, [r7, #4]
 2347 017a FFF7FEFF 		bl	__aeabi_i2d
 2348 017e 0246     		mov	r2, r0
 2349 0180 0B46     		mov	r3, r1
 2350 0182 1046     		mov	r0, r2
 2351 0184 1946     		mov	r1, r3
 2352 0186 D7E90423 		ldrd	r2, [r7, #16]
 2353 018a FFF7FEFF 		bl	__aeabi_dmul
 2354 018e 0246     		mov	r2, r0
 2355 0190 0B46     		mov	r3, r1
 2356 0192 2046     		mov	r0, r4
 2357 0194 2946     		mov	r1, r5
 2358 0196 FFF7FEFF 		bl	__aeabi_dadd
 2359 019a 0246     		mov	r2, r0
 2360 019c 0B46     		mov	r3, r1
 2361 019e 1046     		mov	r0, r2
 2362 01a0 1946     		mov	r1, r3
 2363 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 2364 01a6 0346     		mov	r3, r0
 2365 01a8 9AB2     		uxth	r2, r3
 2366 01aa 204B     		ldr	r3, .L136+32
 2367 01ac 1A80     		strh	r2, [r3]	@ movhi
 504:.\main.c      ****     
 505:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 2368              		.loc 1 505 0
 2369 01ae 1F4B     		ldr	r3, .L136+32
 2370 01b0 1B88     		ldrh	r3, [r3]
 2371 01b2 1BB2     		sxth	r3, r3
 2372 01b4 002B     		cmp	r3, #0
 2373 01b6 02DA     		bge	.L132
 2374              		.loc 1 505 0 is_stmt 0 discriminator 1
 2375 01b8 1C4B     		ldr	r3, .L136+32
 2376 01ba 0022     		movs	r2, #0
 2377 01bc 1A80     		strh	r2, [r3]	@ movhi
 2378              	.L132:
 506:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 2379              		.loc 1 506 0 is_stmt 1
 2380 01be 194B     		ldr	r3, .L136+24
 2381 01c0 1B88     		ldrh	r3, [r3]
 2382 01c2 1BB2     		sxth	r3, r3
 2383 01c4 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 52


 2384 01c6 02DA     		bge	.L133
 2385              		.loc 1 506 0 is_stmt 0 discriminator 1
 2386 01c8 164B     		ldr	r3, .L136+24
 2387 01ca 0022     		movs	r2, #0
 2388 01cc 1A80     		strh	r2, [r3]	@ movhi
 2389              	.L133:
 507:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 2390              		.loc 1 507 0 is_stmt 1
 2391 01ce 174B     		ldr	r3, .L136+32
 2392 01d0 1B88     		ldrh	r3, [r3]
 2393 01d2 1BB2     		sxth	r3, r3
 2394 01d4 642B     		cmp	r3, #100
 2395 01d6 02DD     		ble	.L134
 2396              		.loc 1 507 0 is_stmt 0 discriminator 1
 2397 01d8 144B     		ldr	r3, .L136+32
 2398 01da 6422     		movs	r2, #100
 2399 01dc 1A80     		strh	r2, [r3]	@ movhi
 2400              	.L134:
 508:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 2401              		.loc 1 508 0 is_stmt 1
 2402 01de 114B     		ldr	r3, .L136+24
 2403 01e0 1B88     		ldrh	r3, [r3]
 2404 01e2 1BB2     		sxth	r3, r3
 2405 01e4 642B     		cmp	r3, #100
 2406 01e6 02DD     		ble	.L135
 2407              		.loc 1 508 0 is_stmt 0 discriminator 1
 2408 01e8 0E4B     		ldr	r3, .L136+24
 2409 01ea 6422     		movs	r2, #100
 2410 01ec 1A80     		strh	r2, [r3]	@ movhi
 2411              	.L135:
 509:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 2412              		.loc 1 509 0 is_stmt 1
 2413 01ee 0D4B     		ldr	r3, .L136+24
 2414 01f0 1B88     		ldrh	r3, [r3]
 2415 01f2 DBB2     		uxtb	r3, r3
 2416 01f4 1846     		mov	r0, r3
 2417 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 510:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 2418              		.loc 1 510 0
 2419 01fa 0C4B     		ldr	r3, .L136+32
 2420 01fc 1B88     		ldrh	r3, [r3]
 2421 01fe DBB2     		uxtb	r3, r3
 2422 0200 1846     		mov	r0, r3
 2423 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 2424              	.L128:
 511:.\main.c      **** }
 2425              		.loc 1 511 0
 2426 0206 2037     		adds	r7, r7, #32
 2427              		.cfi_def_cfa_offset 16
 2428 0208 BD46     		mov	sp, r7
 2429              		.cfi_def_cfa_register 13
 2430              		@ sp needed
 2431 020a B0BD     		pop	{r4, r5, r7, pc}
 2432              	.L137:
 2433              		.align	2
 2434              	.L136:
 2435 020c 00000000 		.word	flag_calc_wheelspeed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 53


 2436 0210 00000000 		.word	quad_diff1
 2437 0214 00000000 		.word	quad_diff2
 2438 0218 0000F03F 		.word	1072693248
 2439 021c 00002040 		.word	1075838976
 2440 0220 00000000 		.word	leftSpeedLimit
 2441 0224 00000000 		.word	left_duty_cycle
 2442 0228 00000000 		.word	rightSpeedLimit
 2443 022c 00000000 		.word	right_duty_cycle
 2444              		.cfi_endproc
 2445              	.LFE90:
 2446              		.size	Quad_Dec_response, .-Quad_Dec_response
 2447              		.section	.text.trackLine,"ax",%progbits
 2448              		.align	2
 2449              		.global	trackLine
 2450              		.thumb
 2451              		.thumb_func
 2452              		.type	trackLine, %function
 2453              	trackLine:
 2454              	.LFB91:
 512:.\main.c      **** 
 513:.\main.c      **** void trackLine()
 514:.\main.c      **** {
 2455              		.loc 1 514 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 8
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2460              		.cfi_def_cfa_offset 24
 2461              		.cfi_offset 4, -24
 2462              		.cfi_offset 5, -20
 2463              		.cfi_offset 7, -16
 2464              		.cfi_offset 8, -12
 2465              		.cfi_offset 9, -8
 2466              		.cfi_offset 14, -4
 2467 0004 82B0     		sub	sp, sp, #8
 2468              		.cfi_def_cfa_offset 32
 2469 0006 00AF     		add	r7, sp, #0
 2470              		.cfi_def_cfa_register 7
 515:.\main.c      ****     //read the value of the three central-front sensors
 516:.\main.c      ****     
 517:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2471              		.loc 1 517 0
 2472 0008 FFF7FEFF 		bl	NLSens_out_Read
 2473 000c 0346     		mov	r3, r0
 2474 000e FB71     		strb	r3, [r7, #7]
 518:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2475              		.loc 1 518 0
 2476 0010 FFF7FEFF 		bl	NRSens_out_Read
 2477 0014 0346     		mov	r3, r0
 2478 0016 BB71     		strb	r3, [r7, #6]
 519:.\main.c      ****     uint8 mid = MSens_out_Read();
 2479              		.loc 1 519 0
 2480 0018 FFF7FEFF 		bl	MSens_out_Read
 2481 001c 0346     		mov	r3, r0
 2482 001e 7B71     		strb	r3, [r7, #5]
 520:.\main.c      ****     //if only the left one, hard left
 521:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 54


 2483              		.loc 1 521 0
 2484 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2485 0022 002B     		cmp	r3, #0
 2486 0024 27D0     		beq	.L139
 2487              		.loc 1 521 0 is_stmt 0 discriminator 1
 2488 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2489 0028 002B     		cmp	r3, #0
 2490 002a 24D1     		bne	.L139
 2491              		.loc 1 521 0 discriminator 2
 2492 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2493 002e 002B     		cmp	r3, #0
 2494 0030 21D1     		bne	.L139
 522:.\main.c      ****     {
 523:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 2495              		.loc 1 523 0 is_stmt 1
 2496 0032 454B     		ldr	r3, .L144
 2497 0034 D3E90023 		ldrd	r2, [r3]
 2498 0038 1046     		mov	r0, r2
 2499 003a 1946     		mov	r1, r3
 2500 003c 4FF00002 		mov	r2, #0
 2501 0040 424B     		ldr	r3, .L144+4
 2502 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2503 0046 0246     		mov	r2, r0
 2504 0048 0B46     		mov	r3, r1
 2505 004a 1446     		mov	r4, r2
 2506 004c 1D46     		mov	r5, r3
 2507 004e 3E4B     		ldr	r3, .L144
 2508 0050 D3E90023 		ldrd	r2, [r3]
 2509 0054 9046     		mov	r8, r2
 2510 0056 83F00049 		eor	r9, r3, #-2147483648
 2511 005a 4046     		mov	r0, r8
 2512 005c 4946     		mov	r1, r9
 2513 005e 4FF00002 		mov	r2, #0
 2514 0062 3A4B     		ldr	r3, .L144+4
 2515 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2516 0068 0246     		mov	r2, r0
 2517 006a 0B46     		mov	r3, r1
 2518 006c 2046     		mov	r0, r4
 2519 006e 2946     		mov	r1, r5
 2520 0070 FFF7FEFF 		bl	setSpeed
 2521 0074 63E0     		b	.L138
 2522              	.L139:
 524:.\main.c      ****     }
 525:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2523              		.loc 1 525 0
 2524 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2525 0078 002B     		cmp	r3, #0
 2526 007a 11D0     		beq	.L141
 2527              		.loc 1 525 0 is_stmt 0 discriminator 1
 2528 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2529 007e 002B     		cmp	r3, #0
 2530 0080 0ED0     		beq	.L141
 2531              		.loc 1 525 0 discriminator 2
 2532 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2533 0084 002B     		cmp	r3, #0
 2534 0086 0BD1     		bne	.L141
 526:.\main.c      ****     {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 55


 527:.\main.c      ****         setSpeed(speed, 0);
 2535              		.loc 1 527 0 is_stmt 1
 2536 0088 2F4B     		ldr	r3, .L144
 2537 008a D3E90023 		ldrd	r2, [r3]
 2538 008e 1046     		mov	r0, r2
 2539 0090 1946     		mov	r1, r3
 2540 0092 4FF00002 		mov	r2, #0
 2541 0096 4FF00003 		mov	r3, #0
 2542 009a FFF7FEFF 		bl	setSpeed
 2543 009e 4EE0     		b	.L138
 2544              	.L141:
 528:.\main.c      ****     }
 529:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2545              		.loc 1 529 0
 2546 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2547 00a2 002B     		cmp	r3, #0
 2548 00a4 0FD0     		beq	.L142
 2549              		.loc 1 529 0 is_stmt 0 discriminator 1
 2550 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2551 00a8 002B     		cmp	r3, #0
 2552 00aa 0CD0     		beq	.L142
 2553              		.loc 1 529 0 discriminator 2
 2554 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2555 00ae 002B     		cmp	r3, #0
 2556 00b0 09D1     		bne	.L142
 530:.\main.c      ****     {
 531:.\main.c      ****         setSpeed(0, speed);
 2557              		.loc 1 531 0 is_stmt 1
 2558 00b2 254B     		ldr	r3, .L144
 2559 00b4 D3E90023 		ldrd	r2, [r3]
 2560 00b8 4FF00000 		mov	r0, #0
 2561 00bc 4FF00001 		mov	r1, #0
 2562 00c0 FFF7FEFF 		bl	setSpeed
 2563 00c4 3BE0     		b	.L138
 2564              	.L142:
 532:.\main.c      ****     }
 533:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2565              		.loc 1 533 0
 2566 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2567 00c8 002B     		cmp	r3, #0
 2568 00ca 27D0     		beq	.L143
 2569              		.loc 1 533 0 is_stmt 0 discriminator 1
 2570 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2571 00ce 002B     		cmp	r3, #0
 2572 00d0 24D1     		bne	.L143
 2573              		.loc 1 533 0 discriminator 2
 2574 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2575 00d4 002B     		cmp	r3, #0
 2576 00d6 21D1     		bne	.L143
 534:.\main.c      ****     {
 535:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 2577              		.loc 1 535 0 is_stmt 1
 2578 00d8 1B4B     		ldr	r3, .L144
 2579 00da D3E90023 		ldrd	r2, [r3]
 2580 00de 1446     		mov	r4, r2
 2581 00e0 83F00045 		eor	r5, r3, #-2147483648
 2582 00e4 2046     		mov	r0, r4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 56


 2583 00e6 2946     		mov	r1, r5
 2584 00e8 4FF00002 		mov	r2, #0
 2585 00ec 174B     		ldr	r3, .L144+4
 2586 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2587 00f2 0246     		mov	r2, r0
 2588 00f4 0B46     		mov	r3, r1
 2589 00f6 1446     		mov	r4, r2
 2590 00f8 1D46     		mov	r5, r3
 2591 00fa 134B     		ldr	r3, .L144
 2592 00fc D3E90023 		ldrd	r2, [r3]
 2593 0100 1046     		mov	r0, r2
 2594 0102 1946     		mov	r1, r3
 2595 0104 4FF00002 		mov	r2, #0
 2596 0108 104B     		ldr	r3, .L144+4
 2597 010a FFF7FEFF 		bl	__aeabi_ddiv
 2598 010e 0246     		mov	r2, r0
 2599 0110 0B46     		mov	r3, r1
 2600 0112 2046     		mov	r0, r4
 2601 0114 2946     		mov	r1, r5
 2602 0116 FFF7FEFF 		bl	setSpeed
 2603 011a 10E0     		b	.L138
 2604              	.L143:
 536:.\main.c      ****     }
 537:.\main.c      ****     else if (mid && !nr && !nl)
 2605              		.loc 1 537 0
 2606 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2607 011e 002B     		cmp	r3, #0
 2608 0120 0DD0     		beq	.L138
 2609              		.loc 1 537 0 is_stmt 0 discriminator 1
 2610 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2611 0124 002B     		cmp	r3, #0
 2612 0126 0AD1     		bne	.L138
 2613              		.loc 1 537 0 discriminator 2
 2614 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2615 012a 002B     		cmp	r3, #0
 2616 012c 07D1     		bne	.L138
 538:.\main.c      ****     {
 539:.\main.c      ****         setSpeed(speed,speed);
 2617              		.loc 1 539 0 is_stmt 1
 2618 012e 064B     		ldr	r3, .L144
 2619 0130 D3E90001 		ldrd	r0, [r3]
 2620 0134 044B     		ldr	r3, .L144
 2621 0136 D3E90023 		ldrd	r2, [r3]
 2622 013a FFF7FEFF 		bl	setSpeed
 2623              	.L138:
 540:.\main.c      ****     }
 541:.\main.c      ****    // else if (!mid && !nr && !nl)
 542:.\main.c      ****     //{
 543:.\main.c      ****         //setSpeed(0,0);
 544:.\main.c      ****     //}
 545:.\main.c      **** }
 2624              		.loc 1 545 0
 2625 013e 0837     		adds	r7, r7, #8
 2626              		.cfi_def_cfa_offset 24
 2627 0140 BD46     		mov	sp, r7
 2628              		.cfi_def_cfa_register 13
 2629              		@ sp needed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 57


 2630 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2631              	.L145:
 2632 0146 00BF     		.align	2
 2633              	.L144:
 2634 0148 00000000 		.word	speed
 2635 014c 0000F83F 		.word	1073217536
 2636              		.cfi_endproc
 2637              	.LFE91:
 2638              		.size	trackLine, .-trackLine
 2639              		.section	.text.trackLineZ,"ax",%progbits
 2640              		.align	2
 2641              		.global	trackLineZ
 2642              		.thumb
 2643              		.thumb_func
 2644              		.type	trackLineZ, %function
 2645              	trackLineZ:
 2646              	.LFB92:
 546:.\main.c      **** 
 547:.\main.c      **** void trackLineZ()
 548:.\main.c      **** {
 2647              		.loc 1 548 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 8
 2650              		@ frame_needed = 1, uses_anonymous_args = 0
 2651 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2652              		.cfi_def_cfa_offset 24
 2653              		.cfi_offset 4, -24
 2654              		.cfi_offset 5, -20
 2655              		.cfi_offset 7, -16
 2656              		.cfi_offset 8, -12
 2657              		.cfi_offset 9, -8
 2658              		.cfi_offset 14, -4
 2659 0004 82B0     		sub	sp, sp, #8
 2660              		.cfi_def_cfa_offset 32
 2661 0006 00AF     		add	r7, sp, #0
 2662              		.cfi_def_cfa_register 7
 549:.\main.c      ****     //read the value of the three central-front sensors
 550:.\main.c      ****     
 551:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2663              		.loc 1 551 0
 2664 0008 FFF7FEFF 		bl	NLSens_out_Read
 2665 000c 0346     		mov	r3, r0
 2666 000e FB71     		strb	r3, [r7, #7]
 552:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2667              		.loc 1 552 0
 2668 0010 FFF7FEFF 		bl	NRSens_out_Read
 2669 0014 0346     		mov	r3, r0
 2670 0016 BB71     		strb	r3, [r7, #6]
 553:.\main.c      ****     uint8 mid = MSens_out_Read();
 2671              		.loc 1 553 0
 2672 0018 FFF7FEFF 		bl	MSens_out_Read
 2673 001c 0346     		mov	r3, r0
 2674 001e 7B71     		strb	r3, [r7, #5]
 554:.\main.c      ****     //if only the left one, hard left
 555:.\main.c      ****     if(nl && !nr && !mid)
 2675              		.loc 1 555 0
 2676 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 58


 2677 0022 002B     		cmp	r3, #0
 2678 0024 27D0     		beq	.L147
 2679              		.loc 1 555 0 is_stmt 0 discriminator 1
 2680 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2681 0028 002B     		cmp	r3, #0
 2682 002a 24D1     		bne	.L147
 2683              		.loc 1 555 0 discriminator 2
 2684 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2685 002e 002B     		cmp	r3, #0
 2686 0030 21D1     		bne	.L147
 556:.\main.c      ****     {
 557:.\main.c      ****         setSpeed(speed / 1.5,-speed / 1.5);
 2687              		.loc 1 557 0 is_stmt 1
 2688 0032 454B     		ldr	r3, .L152
 2689 0034 D3E90023 		ldrd	r2, [r3]
 2690 0038 1046     		mov	r0, r2
 2691 003a 1946     		mov	r1, r3
 2692 003c 4FF00002 		mov	r2, #0
 2693 0040 424B     		ldr	r3, .L152+4
 2694 0042 FFF7FEFF 		bl	__aeabi_ddiv
 2695 0046 0246     		mov	r2, r0
 2696 0048 0B46     		mov	r3, r1
 2697 004a 1446     		mov	r4, r2
 2698 004c 1D46     		mov	r5, r3
 2699 004e 3E4B     		ldr	r3, .L152
 2700 0050 D3E90023 		ldrd	r2, [r3]
 2701 0054 9046     		mov	r8, r2
 2702 0056 83F00049 		eor	r9, r3, #-2147483648
 2703 005a 4046     		mov	r0, r8
 2704 005c 4946     		mov	r1, r9
 2705 005e 4FF00002 		mov	r2, #0
 2706 0062 3A4B     		ldr	r3, .L152+4
 2707 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2708 0068 0246     		mov	r2, r0
 2709 006a 0B46     		mov	r3, r1
 2710 006c 2046     		mov	r0, r4
 2711 006e 2946     		mov	r1, r5
 2712 0070 FFF7FEFF 		bl	setSpeed
 2713 0074 63E0     		b	.L146
 2714              	.L147:
 558:.\main.c      ****     }
 559:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2715              		.loc 1 559 0
 2716 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2717 0078 002B     		cmp	r3, #0
 2718 007a 11D0     		beq	.L149
 2719              		.loc 1 559 0 is_stmt 0 discriminator 1
 2720 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2721 007e 002B     		cmp	r3, #0
 2722 0080 0ED0     		beq	.L149
 2723              		.loc 1 559 0 discriminator 2
 2724 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2725 0084 002B     		cmp	r3, #0
 2726 0086 0BD1     		bne	.L149
 560:.\main.c      ****     {
 561:.\main.c      ****         setSpeed(speed, 0.0);
 2727              		.loc 1 561 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 59


 2728 0088 2F4B     		ldr	r3, .L152
 2729 008a D3E90023 		ldrd	r2, [r3]
 2730 008e 1046     		mov	r0, r2
 2731 0090 1946     		mov	r1, r3
 2732 0092 4FF00002 		mov	r2, #0
 2733 0096 4FF00003 		mov	r3, #0
 2734 009a FFF7FEFF 		bl	setSpeed
 2735 009e 4EE0     		b	.L146
 2736              	.L149:
 562:.\main.c      ****     }
 563:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2737              		.loc 1 563 0
 2738 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2739 00a2 002B     		cmp	r3, #0
 2740 00a4 0FD0     		beq	.L150
 2741              		.loc 1 563 0 is_stmt 0 discriminator 1
 2742 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2743 00a8 002B     		cmp	r3, #0
 2744 00aa 0CD0     		beq	.L150
 2745              		.loc 1 563 0 discriminator 2
 2746 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2747 00ae 002B     		cmp	r3, #0
 2748 00b0 09D1     		bne	.L150
 564:.\main.c      ****     {
 565:.\main.c      ****         setSpeed(0.0,speed);
 2749              		.loc 1 565 0 is_stmt 1
 2750 00b2 254B     		ldr	r3, .L152
 2751 00b4 D3E90023 		ldrd	r2, [r3]
 2752 00b8 4FF00000 		mov	r0, #0
 2753 00bc 4FF00001 		mov	r1, #0
 2754 00c0 FFF7FEFF 		bl	setSpeed
 2755 00c4 3BE0     		b	.L146
 2756              	.L150:
 566:.\main.c      ****     }
 567:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 2757              		.loc 1 567 0
 2758 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2759 00c8 002B     		cmp	r3, #0
 2760 00ca 27D0     		beq	.L151
 2761              		.loc 1 567 0 is_stmt 0 discriminator 1
 2762 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2763 00ce 002B     		cmp	r3, #0
 2764 00d0 24D1     		bne	.L151
 2765              		.loc 1 567 0 discriminator 2
 2766 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2767 00d4 002B     		cmp	r3, #0
 2768 00d6 21D1     		bne	.L151
 568:.\main.c      ****     {
 569:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 2769              		.loc 1 569 0 is_stmt 1
 2770 00d8 1B4B     		ldr	r3, .L152
 2771 00da D3E90023 		ldrd	r2, [r3]
 2772 00de 1446     		mov	r4, r2
 2773 00e0 83F00045 		eor	r5, r3, #-2147483648
 2774 00e4 2046     		mov	r0, r4
 2775 00e6 2946     		mov	r1, r5
 2776 00e8 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 60


 2777 00ec 174B     		ldr	r3, .L152+4
 2778 00ee FFF7FEFF 		bl	__aeabi_ddiv
 2779 00f2 0246     		mov	r2, r0
 2780 00f4 0B46     		mov	r3, r1
 2781 00f6 1446     		mov	r4, r2
 2782 00f8 1D46     		mov	r5, r3
 2783 00fa 134B     		ldr	r3, .L152
 2784 00fc D3E90023 		ldrd	r2, [r3]
 2785 0100 1046     		mov	r0, r2
 2786 0102 1946     		mov	r1, r3
 2787 0104 4FF00002 		mov	r2, #0
 2788 0108 104B     		ldr	r3, .L152+4
 2789 010a FFF7FEFF 		bl	__aeabi_ddiv
 2790 010e 0246     		mov	r2, r0
 2791 0110 0B46     		mov	r3, r1
 2792 0112 2046     		mov	r0, r4
 2793 0114 2946     		mov	r1, r5
 2794 0116 FFF7FEFF 		bl	setSpeed
 2795 011a 10E0     		b	.L146
 2796              	.L151:
 570:.\main.c      ****     }
 571:.\main.c      ****     else if (mid && !nr && !nl)
 2797              		.loc 1 571 0
 2798 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2799 011e 002B     		cmp	r3, #0
 2800 0120 0DD0     		beq	.L146
 2801              		.loc 1 571 0 is_stmt 0 discriminator 1
 2802 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2803 0124 002B     		cmp	r3, #0
 2804 0126 0AD1     		bne	.L146
 2805              		.loc 1 571 0 discriminator 2
 2806 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2807 012a 002B     		cmp	r3, #0
 2808 012c 07D1     		bne	.L146
 572:.\main.c      ****     {
 573:.\main.c      ****         setSpeed(speed,speed);
 2809              		.loc 1 573 0 is_stmt 1
 2810 012e 064B     		ldr	r3, .L152
 2811 0130 D3E90001 		ldrd	r0, [r3]
 2812 0134 044B     		ldr	r3, .L152
 2813 0136 D3E90023 		ldrd	r2, [r3]
 2814 013a FFF7FEFF 		bl	setSpeed
 2815              	.L146:
 574:.\main.c      ****     }
 575:.\main.c      ****    // else if (!mid && !nr && !nl)
 576:.\main.c      ****     //{
 577:.\main.c      ****         //setSpeed(0,0);
 578:.\main.c      ****     //}
 579:.\main.c      **** }
 2816              		.loc 1 579 0
 2817 013e 0837     		adds	r7, r7, #8
 2818              		.cfi_def_cfa_offset 24
 2819 0140 BD46     		mov	sp, r7
 2820              		.cfi_def_cfa_register 13
 2821              		@ sp needed
 2822 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2823              	.L153:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 61


 2824 0146 00BF     		.align	2
 2825              	.L152:
 2826 0148 00000000 		.word	speed
 2827 014c 0000F83F 		.word	1073217536
 2828              		.cfi_endproc
 2829              	.LFE92:
 2830              		.size	trackLineZ, .-trackLineZ
 2831              		.section	.text.trackLineU,"ax",%progbits
 2832              		.align	2
 2833              		.global	trackLineU
 2834              		.thumb
 2835              		.thumb_func
 2836              		.type	trackLineU, %function
 2837              	trackLineU:
 2838              	.LFB93:
 580:.\main.c      **** 
 581:.\main.c      **** void trackLineU()
 582:.\main.c      **** {
 2839              		.loc 1 582 0
 2840              		.cfi_startproc
 2841              		@ args = 0, pretend = 0, frame = 8
 2842              		@ frame_needed = 1, uses_anonymous_args = 0
 2843 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2844              		.cfi_def_cfa_offset 24
 2845              		.cfi_offset 4, -24
 2846              		.cfi_offset 5, -20
 2847              		.cfi_offset 7, -16
 2848              		.cfi_offset 8, -12
 2849              		.cfi_offset 9, -8
 2850              		.cfi_offset 14, -4
 2851 0004 82B0     		sub	sp, sp, #8
 2852              		.cfi_def_cfa_offset 32
 2853 0006 00AF     		add	r7, sp, #0
 2854              		.cfi_def_cfa_register 7
 583:.\main.c      ****     //read the value of the three central-front sensors
 584:.\main.c      ****     
 585:.\main.c      ****     uint8 nl = NLSens_out_Read();
 2855              		.loc 1 585 0
 2856 0008 FFF7FEFF 		bl	NLSens_out_Read
 2857 000c 0346     		mov	r3, r0
 2858 000e FB71     		strb	r3, [r7, #7]
 586:.\main.c      ****     uint8 fl = FLSens_out_Read();
 2859              		.loc 1 586 0
 2860 0010 FFF7FEFF 		bl	FLSens_out_Read
 2861 0014 0346     		mov	r3, r0
 2862 0016 BB71     		strb	r3, [r7, #6]
 587:.\main.c      ****     uint8 nr = NRSens_out_Read();
 2863              		.loc 1 587 0
 2864 0018 FFF7FEFF 		bl	NRSens_out_Read
 2865 001c 0346     		mov	r3, r0
 2866 001e 7B71     		strb	r3, [r7, #5]
 588:.\main.c      ****     uint8 fr = FRSens_out_Read();
 2867              		.loc 1 588 0
 2868 0020 FFF7FEFF 		bl	FRSens_out_Read
 2869 0024 0346     		mov	r3, r0
 2870 0026 3B71     		strb	r3, [r7, #4]
 589:.\main.c      ****     uint8 mid = MSens_out_Read();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 62


 2871              		.loc 1 589 0
 2872 0028 FFF7FEFF 		bl	MSens_out_Read
 2873 002c 0346     		mov	r3, r0
 2874 002e FB70     		strb	r3, [r7, #3]
 590:.\main.c      ****     if (fl && mid && fr) // T intersection
 2875              		.loc 1 590 0
 2876 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2877 0032 002B     		cmp	r3, #0
 2878 0034 06D0     		beq	.L155
 2879              		.loc 1 590 0 is_stmt 0 discriminator 1
 2880 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2881 0038 002B     		cmp	r3, #0
 2882 003a 03D0     		beq	.L155
 2883              		.loc 1 590 0 discriminator 2
 2884 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2885 003e 002B     		cmp	r3, #0
 2886 0040 00D0     		beq	.L155
 2887              		.loc 1 590 0
 2888 0042 ACE0     		b	.L154
 2889              	.L155:
 591:.\main.c      ****     {
 592:.\main.c      ****         // not implemented
 593:.\main.c      ****     }
 594:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 2890              		.loc 1 594 0 is_stmt 1
 2891 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2892 0046 002B     		cmp	r3, #0
 2893 0048 0BD0     		beq	.L157
 2894              		.loc 1 594 0 is_stmt 0 discriminator 1
 2895 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2896 004c 002B     		cmp	r3, #0
 2897 004e 08D0     		beq	.L157
 595:.\main.c      ****     {
 596:.\main.c      ****         setSpeed(speed, speed);
 2898              		.loc 1 596 0 is_stmt 1
 2899 0050 554B     		ldr	r3, .L163
 2900 0052 D3E90001 		ldrd	r0, [r3]
 2901 0056 544B     		ldr	r3, .L163
 2902 0058 D3E90023 		ldrd	r2, [r3]
 2903 005c FFF7FEFF 		bl	setSpeed
 2904 0060 9DE0     		b	.L154
 2905              	.L157:
 597:.\main.c      ****     }
 598:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 2906              		.loc 1 598 0
 2907 0062 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2908 0064 002B     		cmp	r3, #0
 2909 0066 0BD0     		beq	.L158
 2910              		.loc 1 598 0 is_stmt 0 discriminator 1
 2911 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2912 006a 002B     		cmp	r3, #0
 2913 006c 08D0     		beq	.L158
 599:.\main.c      ****     {
 600:.\main.c      ****         setSpeed(speed, speed);
 2914              		.loc 1 600 0 is_stmt 1
 2915 006e 4E4B     		ldr	r3, .L163
 2916 0070 D3E90001 		ldrd	r0, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 63


 2917 0074 4C4B     		ldr	r3, .L163
 2918 0076 D3E90023 		ldrd	r2, [r3]
 2919 007a FFF7FEFF 		bl	setSpeed
 2920 007e 8EE0     		b	.L154
 2921              	.L158:
 601:.\main.c      ****     }
 602:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 2922              		.loc 1 602 0
 2923 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2924 0082 002B     		cmp	r3, #0
 2925 0084 27D0     		beq	.L159
 2926              		.loc 1 602 0 is_stmt 0 discriminator 1
 2927 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2928 0088 002B     		cmp	r3, #0
 2929 008a 24D1     		bne	.L159
 2930              		.loc 1 602 0 discriminator 2
 2931 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2932 008e 002B     		cmp	r3, #0
 2933 0090 21D1     		bne	.L159
 603:.\main.c      ****     {
 604:.\main.c      ****          setSpeed(speed / 1.5,-speed / 1.5);
 2934              		.loc 1 604 0 is_stmt 1
 2935 0092 454B     		ldr	r3, .L163
 2936 0094 D3E90023 		ldrd	r2, [r3]
 2937 0098 1046     		mov	r0, r2
 2938 009a 1946     		mov	r1, r3
 2939 009c 4FF00002 		mov	r2, #0
 2940 00a0 424B     		ldr	r3, .L163+4
 2941 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 2942 00a6 0246     		mov	r2, r0
 2943 00a8 0B46     		mov	r3, r1
 2944 00aa 1446     		mov	r4, r2
 2945 00ac 1D46     		mov	r5, r3
 2946 00ae 3E4B     		ldr	r3, .L163
 2947 00b0 D3E90023 		ldrd	r2, [r3]
 2948 00b4 9046     		mov	r8, r2
 2949 00b6 83F00049 		eor	r9, r3, #-2147483648
 2950 00ba 4046     		mov	r0, r8
 2951 00bc 4946     		mov	r1, r9
 2952 00be 4FF00002 		mov	r2, #0
 2953 00c2 3A4B     		ldr	r3, .L163+4
 2954 00c4 FFF7FEFF 		bl	__aeabi_ddiv
 2955 00c8 0246     		mov	r2, r0
 2956 00ca 0B46     		mov	r3, r1
 2957 00cc 2046     		mov	r0, r4
 2958 00ce 2946     		mov	r1, r5
 2959 00d0 FFF7FEFF 		bl	setSpeed
 2960 00d4 63E0     		b	.L154
 2961              	.L159:
 605:.\main.c      ****     }
 606:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 2962              		.loc 1 606 0
 2963 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2964 00d8 002B     		cmp	r3, #0
 2965 00da 11D0     		beq	.L160
 2966              		.loc 1 606 0 is_stmt 0 discriminator 1
 2967 00dc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 64


 2968 00de 002B     		cmp	r3, #0
 2969 00e0 0ED0     		beq	.L160
 2970              		.loc 1 606 0 discriminator 2
 2971 00e2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2972 00e4 002B     		cmp	r3, #0
 2973 00e6 0BD1     		bne	.L160
 607:.\main.c      ****     {
 608:.\main.c      ****         setSpeed(speed, 0);
 2974              		.loc 1 608 0 is_stmt 1
 2975 00e8 2F4B     		ldr	r3, .L163
 2976 00ea D3E90023 		ldrd	r2, [r3]
 2977 00ee 1046     		mov	r0, r2
 2978 00f0 1946     		mov	r1, r3
 2979 00f2 4FF00002 		mov	r2, #0
 2980 00f6 4FF00003 		mov	r3, #0
 2981 00fa FFF7FEFF 		bl	setSpeed
 2982 00fe 4EE0     		b	.L154
 2983              	.L160:
 609:.\main.c      ****     }
 610:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 2984              		.loc 1 610 0
 2985 0100 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2986 0102 002B     		cmp	r3, #0
 2987 0104 0FD0     		beq	.L161
 2988              		.loc 1 610 0 is_stmt 0 discriminator 1
 2989 0106 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2990 0108 002B     		cmp	r3, #0
 2991 010a 0CD0     		beq	.L161
 2992              		.loc 1 610 0 discriminator 2
 2993 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2994 010e 002B     		cmp	r3, #0
 2995 0110 09D1     		bne	.L161
 611:.\main.c      ****     {
 612:.\main.c      ****         setSpeed(0, speed);
 2996              		.loc 1 612 0 is_stmt 1
 2997 0112 254B     		ldr	r3, .L163
 2998 0114 D3E90023 		ldrd	r2, [r3]
 2999 0118 4FF00000 		mov	r0, #0
 3000 011c 4FF00001 		mov	r1, #0
 3001 0120 FFF7FEFF 		bl	setSpeed
 3002 0124 3BE0     		b	.L154
 3003              	.L161:
 613:.\main.c      ****     }
 614:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3004              		.loc 1 614 0
 3005 0126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3006 0128 002B     		cmp	r3, #0
 3007 012a 27D0     		beq	.L162
 3008              		.loc 1 614 0 is_stmt 0 discriminator 1
 3009 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3010 012e 002B     		cmp	r3, #0
 3011 0130 24D1     		bne	.L162
 3012              		.loc 1 614 0 discriminator 2
 3013 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3014 0134 002B     		cmp	r3, #0
 3015 0136 21D1     		bne	.L162
 615:.\main.c      ****     {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 65


 616:.\main.c      ****          setSpeed(-speed / 1.5,speed / 1.5);
 3016              		.loc 1 616 0 is_stmt 1
 3017 0138 1B4B     		ldr	r3, .L163
 3018 013a D3E90023 		ldrd	r2, [r3]
 3019 013e 1446     		mov	r4, r2
 3020 0140 83F00045 		eor	r5, r3, #-2147483648
 3021 0144 2046     		mov	r0, r4
 3022 0146 2946     		mov	r1, r5
 3023 0148 4FF00002 		mov	r2, #0
 3024 014c 174B     		ldr	r3, .L163+4
 3025 014e FFF7FEFF 		bl	__aeabi_ddiv
 3026 0152 0246     		mov	r2, r0
 3027 0154 0B46     		mov	r3, r1
 3028 0156 1446     		mov	r4, r2
 3029 0158 1D46     		mov	r5, r3
 3030 015a 134B     		ldr	r3, .L163
 3031 015c D3E90023 		ldrd	r2, [r3]
 3032 0160 1046     		mov	r0, r2
 3033 0162 1946     		mov	r1, r3
 3034 0164 4FF00002 		mov	r2, #0
 3035 0168 104B     		ldr	r3, .L163+4
 3036 016a FFF7FEFF 		bl	__aeabi_ddiv
 3037 016e 0246     		mov	r2, r0
 3038 0170 0B46     		mov	r3, r1
 3039 0172 2046     		mov	r0, r4
 3040 0174 2946     		mov	r1, r5
 3041 0176 FFF7FEFF 		bl	setSpeed
 3042 017a 10E0     		b	.L154
 3043              	.L162:
 617:.\main.c      ****     }
 618:.\main.c      ****     else if (mid && !nr && !nl)
 3044              		.loc 1 618 0
 3045 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3046 017e 002B     		cmp	r3, #0
 3047 0180 0DD0     		beq	.L154
 3048              		.loc 1 618 0 is_stmt 0 discriminator 1
 3049 0182 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3050 0184 002B     		cmp	r3, #0
 3051 0186 0AD1     		bne	.L154
 3052              		.loc 1 618 0 discriminator 2
 3053 0188 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3054 018a 002B     		cmp	r3, #0
 3055 018c 07D1     		bne	.L154
 619:.\main.c      ****     {
 620:.\main.c      ****         setSpeed(speed,speed);
 3056              		.loc 1 620 0 is_stmt 1
 3057 018e 064B     		ldr	r3, .L163
 3058 0190 D3E90001 		ldrd	r0, [r3]
 3059 0194 044B     		ldr	r3, .L163
 3060 0196 D3E90023 		ldrd	r2, [r3]
 3061 019a FFF7FEFF 		bl	setSpeed
 3062              	.L154:
 621:.\main.c      ****     }
 622:.\main.c      ****    // else if (!mid && !nr && !nl)
 623:.\main.c      ****     //{
 624:.\main.c      ****         //setSpeed(0,0);
 625:.\main.c      ****     //}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 66


 626:.\main.c      ****    
 627:.\main.c      **** 
 628:.\main.c      **** }
 3063              		.loc 1 628 0
 3064 019e 0837     		adds	r7, r7, #8
 3065              		.cfi_def_cfa_offset 24
 3066 01a0 BD46     		mov	sp, r7
 3067              		.cfi_def_cfa_register 13
 3068              		@ sp needed
 3069 01a2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3070              	.L164:
 3071 01a6 00BF     		.align	2
 3072              	.L163:
 3073 01a8 00000000 		.word	speed
 3074 01ac 0000F83F 		.word	1073217536
 3075              		.cfi_endproc
 3076              	.LFE93:
 3077              		.size	trackLineU, .-trackLineU
 3078              		.global	__aeabi_fadd
 3079              		.section	.rodata
 3080 003e 0000     		.align	2
 3081              	.LC4:
 3082 0040 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3082      65727920 
 3082      566F6C74 
 3082      6167653A 
 3082      2025646D 
 3083              		.section	.text.print_ADC,"ax",%progbits
 3084              		.align	2
 3085              		.global	print_ADC
 3086              		.thumb
 3087              		.thumb_func
 3088              		.type	print_ADC, %function
 3089              	print_ADC:
 3090              	.LFB94:
 629:.\main.c      **** 
 630:.\main.c      **** void print_ADC()
 631:.\main.c      **** {
 3091              		.loc 1 631 0
 3092              		.cfi_startproc
 3093              		@ args = 0, pretend = 0, frame = 24
 3094              		@ frame_needed = 1, uses_anonymous_args = 0
 3095 0000 80B5     		push	{r7, lr}
 3096              		.cfi_def_cfa_offset 8
 3097              		.cfi_offset 7, -8
 3098              		.cfi_offset 14, -4
 3099 0002 86B0     		sub	sp, sp, #24
 3100              		.cfi_def_cfa_offset 32
 3101 0004 00AF     		add	r7, sp, #0
 3102              		.cfi_def_cfa_register 7
 632:.\main.c      ****    //usbPutString("HII\n");
 633:.\main.c      ****     if(flag_receive_ADC == 1)
 3103              		.loc 1 633 0
 3104 0006 274B     		ldr	r3, .L168
 3105 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3106 000a 012B     		cmp	r3, #1
 3107 000c 46D1     		bne	.L165
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 67


 3108              	.LBB6:
 634:.\main.c      ****     {
 635:.\main.c      ****         //usbPutString("AAA\r\n");
 636:.\main.c      ****         flag_receive_ADC = 0;
 3109              		.loc 1 636 0
 3110 000e 254B     		ldr	r3, .L168
 3111 0010 0022     		movs	r2, #0
 3112 0012 1A70     		strb	r2, [r3]
 637:.\main.c      ****         
 638:.\main.c      ****        // int8 channel = ADC_
 639:.\main.c      ****         float scalingFactor = 0.972;
 3113              		.loc 1 639 0
 3114 0014 244B     		ldr	r3, .L168+4
 3115 0016 7B61     		str	r3, [r7, #20]	@ float
 640:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3116              		.loc 1 640 0
 3117 0018 244B     		ldr	r3, .L168+8
 3118 001a 1B88     		ldrh	r3, [r3]
 3119 001c 1BB2     		sxth	r3, r3
 3120 001e 41F28832 		movw	r2, #5000
 3121 0022 02FB03F3 		mul	r3, r2, r3
 3122 0026 002B     		cmp	r3, #0
 3123 0028 01DA     		bge	.L167
 3124 002a 03F6FF73 		addw	r3, r3, #4095
 3125              	.L167:
 3126 002e 1B13     		asrs	r3, r3, #12
 3127 0030 1846     		mov	r0, r3
 3128 0032 FFF7FEFF 		bl	__aeabi_i2f
 3129 0036 0346     		mov	r3, r0
 3130 0038 1846     		mov	r0, r3
 3131 003a 7969     		ldr	r1, [r7, #20]	@ float
 3132 003c FFF7FEFF 		bl	__aeabi_fmul
 3133 0040 0346     		mov	r3, r0
 3134 0042 1846     		mov	r0, r3
 3135 0044 1946     		mov	r1, r3
 3136 0046 FFF7FEFF 		bl	__aeabi_fadd
 3137 004a 0346     		mov	r3, r0
 3138 004c 1846     		mov	r0, r3
 3139 004e FFF7FEFF 		bl	__aeabi_f2iz
 3140 0052 0346     		mov	r3, r0
 3141 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 641:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3142              		.loc 1 641 0
 3143 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3144 005a 154B     		ldr	r3, .L168+12
 3145 005c 1B88     		ldrh	r3, [r3]
 3146 005e 1BB2     		sxth	r3, r3
 3147 0060 1A44     		add	r2, r2, r3
 3148 0062 144B     		ldr	r3, .L168+16
 3149 0064 1B88     		ldrh	r3, [r3]
 3150 0066 1BB2     		sxth	r3, r3
 3151 0068 1344     		add	r3, r3, r2
 3152 006a 134A     		ldr	r2, .L168+20
 3153 006c 82FB0312 		smull	r1, r2, r2, r3
 3154 0070 DB17     		asrs	r3, r3, #31
 3155 0072 D31A     		subs	r3, r2, r3
 3156 0074 7B82     		strh	r3, [r7, #18]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 68


 642:.\main.c      ****         prevVoltage2 = prevVoltage;
 3157              		.loc 1 642 0
 3158 0076 0E4B     		ldr	r3, .L168+12
 3159 0078 1A88     		ldrh	r2, [r3]
 3160 007a 0E4B     		ldr	r3, .L168+16
 3161 007c 1A80     		strh	r2, [r3]	@ movhi
 643:.\main.c      ****         prevVoltage = converted_val;
 3162              		.loc 1 643 0
 3163 007e 0C4A     		ldr	r2, .L168+12
 3164 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3165 0082 1380     		strh	r3, [r2]	@ movhi
 644:.\main.c      ****         
 645:.\main.c      ****         char result_str[16];
 646:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3166              		.loc 1 646 0
 3167 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3168 0088 3A46     		mov	r2, r7
 3169 008a 1046     		mov	r0, r2
 3170 008c 0B49     		ldr	r1, .L168+24
 3171 008e 1A46     		mov	r2, r3
 3172 0090 FFF7FEFF 		bl	sprintf
 647:.\main.c      ****         
 648:.\main.c      ****         usbPutString(result_str);
 3173              		.loc 1 648 0
 3174 0094 3B46     		mov	r3, r7
 3175 0096 1846     		mov	r0, r3
 3176 0098 FFF7FEFF 		bl	usbPutString
 3177              	.L165:
 3178              	.LBE6:
 649:.\main.c      ****     }
 650:.\main.c      **** }
 3179              		.loc 1 650 0
 3180 009c 1837     		adds	r7, r7, #24
 3181              		.cfi_def_cfa_offset 8
 3182 009e BD46     		mov	sp, r7
 3183              		.cfi_def_cfa_register 13
 3184              		@ sp needed
 3185 00a0 80BD     		pop	{r7, pc}
 3186              	.L169:
 3187 00a2 00BF     		.align	2
 3188              	.L168:
 3189 00a4 00000000 		.word	flag_receive_ADC
 3190 00a8 FED4783F 		.word	1064883454
 3191 00ac 00000000 		.word	adc_result
 3192 00b0 00000000 		.word	prevVoltage
 3193 00b4 00000000 		.word	prevVoltage2
 3194 00b8 56555555 		.word	1431655766
 3195 00bc 40000000 		.word	.LC4
 3196              		.cfi_endproc
 3197              	.LFE94:
 3198              		.size	print_ADC, .-print_ADC
 3199              		.section	.rodata
 3200              		.align	2
 3201              	.LC5:
 3202 0058 52535349 		.ascii	"RSSI:\000"
 3202      3A00
 3203 005e 0000     		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 69


 3204              	.LC6:
 3205 0060 25640D0A 		.ascii	"%d\015\012\000"
 3205      00
 3206 0065 000000   		.align	2
 3207              	.LC7:
 3208 0068 726F626F 		.ascii	"robot_x:\000"
 3208      745F783A 
 3208      00
 3209 0071 000000   		.align	2
 3210              	.LC8:
 3211 0074 726F626F 		.ascii	"robot_y:\000"
 3211      745F793A 
 3211      00
 3212 007d 000000   		.align	2
 3213              	.LC9:
 3214 0080 726F626F 		.ascii	"robot_dir:\000"
 3214      745F6469 
 3214      723A00
 3215 008b 00       		.section	.text.print_RF,"ax",%progbits
 3216              		.align	2
 3217              		.global	print_RF
 3218              		.thumb
 3219              		.thumb_func
 3220              		.type	print_RF, %function
 3221              	print_RF:
 3222              	.LFB95:
 651:.\main.c      **** 
 652:.\main.c      **** void print_RF()
 653:.\main.c      **** {
 3223              		.loc 1 653 0
 3224              		.cfi_startproc
 3225              		@ args = 0, pretend = 0, frame = 16
 3226              		@ frame_needed = 1, uses_anonymous_args = 0
 3227 0000 80B5     		push	{r7, lr}
 3228              		.cfi_def_cfa_offset 8
 3229              		.cfi_offset 7, -8
 3230              		.cfi_offset 14, -4
 3231 0002 84B0     		sub	sp, sp, #16
 3232              		.cfi_def_cfa_offset 24
 3233 0004 00AF     		add	r7, sp, #0
 3234              		.cfi_def_cfa_register 7
 654:.\main.c      ****     if(flag_print_rf == 1)
 3235              		.loc 1 654 0
 3236 0006 254B     		ldr	r3, .L172
 3237 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3238 000a 012B     		cmp	r3, #1
 3239 000c 42D1     		bne	.L170
 3240              	.LBB7:
 655:.\main.c      ****     {
 656:.\main.c      ****         char printString[16];
 657:.\main.c      ****         flag_print_rf = 0;
 3241              		.loc 1 657 0
 3242 000e 234B     		ldr	r3, .L172
 3243 0010 0022     		movs	r2, #0
 3244 0012 1A70     		strb	r2, [r3]
 658:.\main.c      ****         usbPutString("RSSI:");
 3245              		.loc 1 658 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 70


 3246 0014 2248     		ldr	r0, .L172+4
 3247 0016 FFF7FEFF 		bl	usbPutString
 659:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 3248              		.loc 1 659 0
 3249 001a 224B     		ldr	r3, .L172+8
 3250 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3251 001e 5BB2     		sxtb	r3, r3
 3252 0020 3A46     		mov	r2, r7
 3253 0022 1046     		mov	r0, r2
 3254 0024 2049     		ldr	r1, .L172+12
 3255 0026 1A46     		mov	r2, r3
 3256 0028 FFF7FEFF 		bl	sprintf
 660:.\main.c      ****         usbPutString(printString);
 3257              		.loc 1 660 0
 3258 002c 3B46     		mov	r3, r7
 3259 002e 1846     		mov	r0, r3
 3260 0030 FFF7FEFF 		bl	usbPutString
 661:.\main.c      ****         usbPutString("robot_x:");
 3261              		.loc 1 661 0
 3262 0034 1D48     		ldr	r0, .L172+16
 3263 0036 FFF7FEFF 		bl	usbPutString
 662:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 3264              		.loc 1 662 0
 3265 003a 1A4B     		ldr	r3, .L172+8
 3266 003c 5B88     		ldrh	r3, [r3, #2]
 3267 003e 1BB2     		sxth	r3, r3
 3268 0040 3A46     		mov	r2, r7
 3269 0042 1046     		mov	r0, r2
 3270 0044 1849     		ldr	r1, .L172+12
 3271 0046 1A46     		mov	r2, r3
 3272 0048 FFF7FEFF 		bl	sprintf
 663:.\main.c      ****         usbPutString(printString);
 3273              		.loc 1 663 0
 3274 004c 3B46     		mov	r3, r7
 3275 004e 1846     		mov	r0, r3
 3276 0050 FFF7FEFF 		bl	usbPutString
 664:.\main.c      ****         usbPutString("robot_y:");
 3277              		.loc 1 664 0
 3278 0054 1648     		ldr	r0, .L172+20
 3279 0056 FFF7FEFF 		bl	usbPutString
 665:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3280              		.loc 1 665 0
 3281 005a 124B     		ldr	r3, .L172+8
 3282 005c 9B88     		ldrh	r3, [r3, #4]
 3283 005e 1BB2     		sxth	r3, r3
 3284 0060 3A46     		mov	r2, r7
 3285 0062 1046     		mov	r0, r2
 3286 0064 1049     		ldr	r1, .L172+12
 3287 0066 1A46     		mov	r2, r3
 3288 0068 FFF7FEFF 		bl	sprintf
 666:.\main.c      ****         usbPutString(printString);
 3289              		.loc 1 666 0
 3290 006c 3B46     		mov	r3, r7
 3291 006e 1846     		mov	r0, r3
 3292 0070 FFF7FEFF 		bl	usbPutString
 667:.\main.c      ****         usbPutString("robot_dir:");
 3293              		.loc 1 667 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 71


 3294 0074 0F48     		ldr	r0, .L172+24
 3295 0076 FFF7FEFF 		bl	usbPutString
 668:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3296              		.loc 1 668 0
 3297 007a 0A4B     		ldr	r3, .L172+8
 3298 007c DB88     		ldrh	r3, [r3, #6]
 3299 007e 1BB2     		sxth	r3, r3
 3300 0080 3A46     		mov	r2, r7
 3301 0082 1046     		mov	r0, r2
 3302 0084 0849     		ldr	r1, .L172+12
 3303 0086 1A46     		mov	r2, r3
 3304 0088 FFF7FEFF 		bl	sprintf
 669:.\main.c      ****         usbPutString(printString);
 3305              		.loc 1 669 0
 3306 008c 3B46     		mov	r3, r7
 3307 008e 1846     		mov	r0, r3
 3308 0090 FFF7FEFF 		bl	usbPutString
 3309              	.L170:
 3310              	.LBE7:
 670:.\main.c      ****     }
 671:.\main.c      **** }
 3311              		.loc 1 671 0
 3312 0094 1037     		adds	r7, r7, #16
 3313              		.cfi_def_cfa_offset 8
 3314 0096 BD46     		mov	sp, r7
 3315              		.cfi_def_cfa_register 13
 3316              		@ sp needed
 3317 0098 80BD     		pop	{r7, pc}
 3318              	.L173:
 3319 009a 00BF     		.align	2
 3320              	.L172:
 3321 009c 00000000 		.word	flag_print_rf
 3322 00a0 58000000 		.word	.LC5
 3323 00a4 00000000 		.word	system_state
 3324 00a8 60000000 		.word	.LC6
 3325 00ac 68000000 		.word	.LC7
 3326 00b0 74000000 		.word	.LC8
 3327 00b4 80000000 		.word	.LC9
 3328              		.cfi_endproc
 3329              	.LFE95:
 3330              		.size	print_RF, .-print_RF
 3331              		.section	.text.readFrontSensors,"ax",%progbits
 3332              		.align	2
 3333              		.global	readFrontSensors
 3334              		.thumb
 3335              		.thumb_func
 3336              		.type	readFrontSensors, %function
 3337              	readFrontSensors:
 3338              	.LFB96:
 672:.\main.c      **** 
 673:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 674:.\main.c      **** {
 3339              		.loc 1 674 0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 8
 3342              		@ frame_needed = 1, uses_anonymous_args = 0
 3343 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 72


 3344              		.cfi_def_cfa_offset 12
 3345              		.cfi_offset 4, -12
 3346              		.cfi_offset 7, -8
 3347              		.cfi_offset 14, -4
 3348 0002 83B0     		sub	sp, sp, #12
 3349              		.cfi_def_cfa_offset 24
 3350 0004 00AF     		add	r7, sp, #0
 3351              		.cfi_def_cfa_register 7
 3352 0006 7860     		str	r0, [r7, #4]
 675:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3353              		.loc 1 675 0
 3354 0008 FFF7FEFF 		bl	FLSens_out_Read
 3355 000c 0346     		mov	r3, r0
 3356 000e 1A46     		mov	r2, r3
 3357 0010 7B68     		ldr	r3, [r7, #4]
 3358 0012 1A70     		strb	r2, [r3]
 676:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3359              		.loc 1 676 0
 3360 0014 7B68     		ldr	r3, [r7, #4]
 3361 0016 5C1C     		adds	r4, r3, #1
 3362 0018 FFF7FEFF 		bl	NLSens_out_Read
 3363 001c 0346     		mov	r3, r0
 3364 001e 2370     		strb	r3, [r4]
 677:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3365              		.loc 1 677 0
 3366 0020 7B68     		ldr	r3, [r7, #4]
 3367 0022 9C1C     		adds	r4, r3, #2
 3368 0024 FFF7FEFF 		bl	MSens_out_Read
 3369 0028 0346     		mov	r3, r0
 3370 002a 2370     		strb	r3, [r4]
 678:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3371              		.loc 1 678 0
 3372 002c 7B68     		ldr	r3, [r7, #4]
 3373 002e DC1C     		adds	r4, r3, #3
 3374 0030 FFF7FEFF 		bl	NRSens_out_Read
 3375 0034 0346     		mov	r3, r0
 3376 0036 2370     		strb	r3, [r4]
 679:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3377              		.loc 1 679 0
 3378 0038 7B68     		ldr	r3, [r7, #4]
 3379 003a 1C1D     		adds	r4, r3, #4
 3380 003c FFF7FEFF 		bl	FRSens_out_Read
 3381 0040 0346     		mov	r3, r0
 3382 0042 2370     		strb	r3, [r4]
 680:.\main.c      **** }
 3383              		.loc 1 680 0
 3384 0044 0C37     		adds	r7, r7, #12
 3385              		.cfi_def_cfa_offset 12
 3386 0046 BD46     		mov	sp, r7
 3387              		.cfi_def_cfa_register 13
 3388              		@ sp needed
 3389 0048 90BD     		pop	{r4, r7, pc}
 3390              		.cfi_endproc
 3391              	.LFE96:
 3392              		.size	readFrontSensors, .-readFrontSensors
 3393 004a 00BF     		.section	.text.main,"ax",%progbits
 3394              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 73


 3395              		.global	main
 3396              		.thumb
 3397              		.thumb_func
 3398              		.type	main, %function
 3399              	main:
 3400              	.LFB97:
 681:.\main.c      **** 
 682:.\main.c      **** int main()
 683:.\main.c      **** {  
 3401              		.loc 1 683 0
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 8
 3404              		@ frame_needed = 1, uses_anonymous_args = 0
 3405 0000 80B5     		push	{r7, lr}
 3406              		.cfi_def_cfa_offset 8
 3407              		.cfi_offset 7, -8
 3408              		.cfi_offset 14, -4
 3409 0002 82B0     		sub	sp, sp, #8
 3410              		.cfi_def_cfa_offset 16
 3411 0004 00AF     		add	r7, sp, #0
 3412              		.cfi_def_cfa_register 7
 684:.\main.c      **** 
 685:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 686:.\main.c      **** // ----- INITIALIZATIONS ----------
 687:.\main.c      ****     CYGlobalIntEnable;
 3413              		.loc 1 687 0
 3414              	@ 687 ".\main.c" 1
 3415 0006 62B6     		CPSIE   i
 3416              	@ 0 "" 2
 688:.\main.c      ****     if(ENABLE_PWM)
 689:.\main.c      ****     {
 690:.\main.c      ****         PWM_1_Start();// starting the pwm
 3417              		.loc 1 690 0
 3418              		.thumb
 3419 0008 FFF7FEFF 		bl	PWM_1_Start
 691:.\main.c      ****         PWM_2_Start();// starting the pwm
 3420              		.loc 1 691 0
 3421 000c FFF7FEFF 		bl	PWM_2_Start
 692:.\main.c      ****     }
 693:.\main.c      ****     
 694:.\main.c      ****     if(ENABLE_ADC)
 695:.\main.c      ****     {
 696:.\main.c      ****         ADC_Start();
 697:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 698:.\main.c      ****         //ADC_StartConvert();
 699:.\main.c      ****         
 700:.\main.c      ****         //start the ADC timer for software trigger mode
 701:.\main.c      ****         Timer_TS_Start();
 702:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 703:.\main.c      ****     }
 704:.\main.c      ****     
 705:.\main.c      ****     if (ENABLE_QUAD)
 706:.\main.c      ****     {
 707:.\main.c      ****         QuadDec_M1_Start();
 3422              		.loc 1 707 0
 3423 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 708:.\main.c      ****         QuadDec_M2_Start();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 74


 3424              		.loc 1 708 0
 3425 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 709:.\main.c      ****         
 710:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3426              		.loc 1 710 0
 3427 0018 3E48     		ldr	r0, .L200
 3428 001a FFF7FEFF 		bl	isr_quad1_StartEx
 711:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3429              		.loc 1 711 0
 3430 001e 3E48     		ldr	r0, .L200+4
 3431 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 712:.\main.c      ****         
 713:.\main.c      ****         Timer_1_Start();
 3432              		.loc 1 713 0
 3433 0024 FFF7FEFF 		bl	Timer_1_Start
 714:.\main.c      ****     }
 715:.\main.c      ****     
 716:.\main.c      ****     if(ENABLE_STOP){
 717:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 718:.\main.c      ****         
 719:.\main.c      ****     }
 720:.\main.c      ****     isr_button_StartEx(button);
 3434              		.loc 1 720 0
 3435 0028 3C48     		ldr	r0, .L200+8
 3436 002a FFF7FEFF 		bl	isr_button_StartEx
 721:.\main.c      ****     
 722:.\main.c      **** 
 723:.\main.c      ****     // ------USB SETUP ----------------    
 724:.\main.c      ****     if (USE_USB){    
 725:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3437              		.loc 1 725 0
 3438 002e 0020     		movs	r0, #0
 3439 0030 0121     		movs	r1, #1
 3440 0032 FFF7FEFF 		bl	USBUART_Start
 726:.\main.c      ****         if (USBUART_GetConfiguration())
 3441              		.loc 1 726 0
 3442 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
 3443 003a 0346     		mov	r3, r0
 3444 003c 002B     		cmp	r3, #0
 3445 003e 01D0     		beq	.L198
 727:.\main.c      ****             {
 728:.\main.c      ****                  USBUART_CDC_Init();
 3446              		.loc 1 728 0
 3447 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 3448              	.L198:
 729:.\main.c      ****             }
 730:.\main.c      ****     }
 731:.\main.c      ****     
 732:.\main.c      ****     if(BIN_ENABLED){
 733:.\main.c      ****         UART_clk_SetDividerValue(130);
 734:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 735:.\main.c      ****         UART_Start();
 736:.\main.c      ****         RF_BT_SELECT_Write(0);
 737:.\main.c      ****     }
 738:.\main.c      ****     
 739:.\main.c      ****     if(BT_ENABLED){
 740:.\main.c      ****         UART_clk_SetDividerValue(781);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 75


 3449              		.loc 1 740 0
 3450 0044 4FF44370 		mov	r0, #780
 3451 0048 0121     		movs	r1, #1
 3452 004a FFF7FEFF 		bl	UART_clk_SetDividerRegister
 741:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3453              		.loc 1 741 0
 3454 004e 3448     		ldr	r0, .L200+12
 3455 0050 FFF7FEFF 		bl	isrRF_RX_StartEx
 742:.\main.c      ****         UART_Start();
 3456              		.loc 1 742 0
 3457 0054 FFF7FEFF 		bl	UART_Start
 743:.\main.c      ****         RF_BT_SELECT_Write(1);
 3458              		.loc 1 743 0
 3459 0058 0120     		movs	r0, #1
 3460 005a FFF7FEFF 		bl	RF_BT_SELECT_Write
 3461              	.L197:
 3462              	.LBB8:
 744:.\main.c      ****     }
 745:.\main.c      ****     
 746:.\main.c      ****     //usbPutString("Started");
 747:.\main.c      ****     for(;;)
 748:.\main.c      ****     {
 749:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 750:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 3463              		.loc 1 750 0
 3464 005e FFF7FEFF 		bl	Quad_Dec_response
 751:.\main.c      ****         if(BIN_ENABLED == 1)
 752:.\main.c      ****         {
 753:.\main.c      ****             handle_rx_binary();
 754:.\main.c      ****             print_RF();
 755:.\main.c      ****         }
 756:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 757:.\main.c      ****         
 758:.\main.c      ****         uint8 frontSensors[5];
 759:.\main.c      ****         readFrontSensors(frontSensors);
 3465              		.loc 1 759 0
 3466 0062 3B46     		mov	r3, r7
 3467 0064 1846     		mov	r0, r3
 3468 0066 FFF7FEFF 		bl	readFrontSensors
 760:.\main.c      ****         
 761:.\main.c      ****         switch(track_mode)
 3469              		.loc 1 761 0
 3470 006a 2E4B     		ldr	r3, .L200+16
 3471 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3472 006e 052B     		cmp	r3, #5
 3473 0070 24D8     		bhi	.L177
 3474 0072 01A2     		adr	r2, .L179
 3475 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3476              		.p2align 2
 3477              	.L179:
 3478 0078 BD000000 		.word	.L177+1
 3479 007c BD000000 		.word	.L177+1
 3480 0080 BD000000 		.word	.L177+1
 3481 0084 91000000 		.word	.L182+1
 3482 0088 BD000000 		.word	.L177+1
 3483 008c BD000000 		.word	.L177+1
 3484              		.p2align 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 76


 3485              	.L182:
 762:.\main.c      ****         {
 763:.\main.c      ****             case SQUARE_TRACK:
 764:.\main.c      ****                 if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 3486              		.loc 1 764 0
 3487 0090 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3488 0092 012B     		cmp	r3, #1
 3489 0094 05D1     		bne	.L185
 3490              		.loc 1 764 0 is_stmt 0 discriminator 1
 3491 0096 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3492 0098 012B     		cmp	r3, #1
 3493 009a 02D1     		bne	.L185
 765:.\main.c      ****                     initTurnLeft();
 3494              		.loc 1 765 0 is_stmt 1
 3495 009c FFF7FEFF 		bl	initTurnLeft
 3496 00a0 0BE0     		b	.L186
 3497              	.L185:
 766:.\main.c      ****                 }
 767:.\main.c      ****                 else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 3498              		.loc 1 767 0
 3499 00a2 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3500 00a4 012B     		cmp	r3, #1
 3501 00a6 05D1     		bne	.L187
 3502              		.loc 1 767 0 is_stmt 0 discriminator 1
 3503 00a8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3504 00aa 012B     		cmp	r3, #1
 3505 00ac 02D1     		bne	.L187
 768:.\main.c      ****                 {
 769:.\main.c      ****                     initTurnRight();
 3506              		.loc 1 769 0 is_stmt 1
 3507 00ae FFF7FEFF 		bl	initTurnRight
 3508 00b2 02E0     		b	.L186
 3509              	.L187:
 770:.\main.c      ****                 }
 771:.\main.c      ****                 else inittrackLineZ();
 3510              		.loc 1 771 0
 3511 00b4 FFF7FEFF 		bl	inittrackLineZ
 772:.\main.c      ****             break;
 3512              		.loc 1 772 0
 3513 00b8 FFE7     		b	.L199
 3514              	.L186:
 3515              	.L199:
 3516 00ba 00BF     		nop
 3517              	.L177:
 773:.\main.c      ****             case NO_TRACK:
 774:.\main.c      ****             break;
 775:.\main.c      ****             case CURVE_TRACK:
 776:.\main.c      ****             break;
 777:.\main.c      ****             case U_TRACK:
 778:.\main.c      ****             break;
 779:.\main.c      ****             case QUAD_STOP:
 780:.\main.c      ****             break;
 781:.\main.c      ****             case RF_STOP:
 782:.\main.c      ****             break;
 783:.\main.c      ****         }
 784:.\main.c      ****         
 785:.\main.c      ****         switch(movement_state)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 77


 3518              		.loc 1 785 0
 3519 00bc 1A4B     		ldr	r3, .L200+20
 3520 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3521 00c0 062B     		cmp	r3, #6
 3522 00c2 CCD8     		bhi	.L197
 3523 00c4 01A2     		adr	r2, .L190
 3524 00c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3525 00ca 00BF     		.p2align 2
 3526              	.L190:
 3527 00cc E9000000 		.word	.L189+1
 3528 00d0 EF000000 		.word	.L191+1
 3529 00d4 F5000000 		.word	.L192+1
 3530 00d8 FB000000 		.word	.L193+1
 3531 00dc 01010000 		.word	.L194+1
 3532 00e0 07010000 		.word	.L195+1
 3533 00e4 0D010000 		.word	.L196+1
 3534              		.p2align 1
 3535              	.L189:
 786:.\main.c      ****         {
 787:.\main.c      ****             case DRIVE:
 788:.\main.c      ****                 driveForwards();
 3536              		.loc 1 788 0
 3537 00e8 FFF7FEFF 		bl	driveForwards
 789:.\main.c      ****             break;
 3538              		.loc 1 789 0
 3539 00ec 10E0     		b	.L188
 3540              	.L191:
 790:.\main.c      ****             case LTURN:
 791:.\main.c      ****                 turnLeft();
 3541              		.loc 1 791 0
 3542 00ee FFF7FEFF 		bl	turnLeft
 792:.\main.c      ****             break;
 3543              		.loc 1 792 0
 3544 00f2 0DE0     		b	.L188
 3545              	.L192:
 793:.\main.c      ****             case RTURN:
 794:.\main.c      ****                 turnRight();
 3546              		.loc 1 794 0
 3547 00f4 FFF7FEFF 		bl	turnRight
 795:.\main.c      ****             break;
 3548              		.loc 1 795 0
 3549 00f8 0AE0     		b	.L188
 3550              	.L193:
 796:.\main.c      ****             case STOPPED:
 797:.\main.c      ****                 brakeMotor();
 3551              		.loc 1 797 0
 3552 00fa FFF7FEFF 		bl	brakeMotor
 798:.\main.c      ****             break;
 3553              		.loc 1 798 0
 3554 00fe 07E0     		b	.L188
 3555              	.L194:
 799:.\main.c      ****             case TRACKING:
 800:.\main.c      ****                 trackLine();
 3556              		.loc 1 800 0
 3557 0100 FFF7FEFF 		bl	trackLine
 801:.\main.c      ****             break;
 3558              		.loc 1 801 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 78


 3559 0104 04E0     		b	.L188
 3560              	.L195:
 802:.\main.c      ****             case TRACKING_U:
 803:.\main.c      ****                 trackLineU();
 3561              		.loc 1 803 0
 3562 0106 FFF7FEFF 		bl	trackLineU
 804:.\main.c      ****             break;
 3563              		.loc 1 804 0
 3564 010a 01E0     		b	.L188
 3565              	.L196:
 805:.\main.c      ****             case TRACKING_SOFT:
 806:.\main.c      ****                 trackLineZ();
 3566              		.loc 1 806 0
 3567 010c FFF7FEFF 		bl	trackLineZ
 3568              	.L188:
 3569              	.LBE8:
 807:.\main.c      ****         }
 808:.\main.c      ****         //handle_usb();        
 809:.\main.c      ****     }   
 3570              		.loc 1 809 0
 3571 0110 A5E7     		b	.L197
 3572              	.L201:
 3573 0112 00BF     		.align	2
 3574              	.L200:
 3575 0114 00000000 		.word	isr_quad1
 3576 0118 00000000 		.word	isr_turn_timer
 3577 011c 00000000 		.word	button
 3578 0120 00000000 		.word	BT_rxInt
 3579 0124 00000000 		.word	track_mode
 3580 0128 00000000 		.word	movement_state
 3581              		.cfi_endproc
 3582              	.LFE97:
 3583              		.size	main, .-main
 3584              		.section	.text.usbPutString,"ax",%progbits
 3585              		.align	2
 3586              		.global	usbPutString
 3587              		.thumb
 3588              		.thumb_func
 3589              		.type	usbPutString, %function
 3590              	usbPutString:
 3591              	.LFB98:
 810:.\main.c      **** }
 811:.\main.c      **** //* ========================================
 812:.\main.c      **** void usbPutString(char *s)
 813:.\main.c      **** {
 3592              		.loc 1 813 0
 3593              		.cfi_startproc
 3594              		@ args = 0, pretend = 0, frame = 16
 3595              		@ frame_needed = 1, uses_anonymous_args = 0
 3596 0000 80B5     		push	{r7, lr}
 3597              		.cfi_def_cfa_offset 8
 3598              		.cfi_offset 7, -8
 3599              		.cfi_offset 14, -4
 3600 0002 84B0     		sub	sp, sp, #16
 3601              		.cfi_def_cfa_offset 24
 3602 0004 00AF     		add	r7, sp, #0
 3603              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 79


 3604 0006 7860     		str	r0, [r7, #4]
 814:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 815:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 816:.\main.c      **** //  length to 62 char (63rd char is a '!')
 817:.\main.c      ****     if (USE_USB && portOpen)    
 3605              		.loc 1 817 0
 3606 0008 154B     		ldr	r3, .L206
 3607 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3608 000c 002B     		cmp	r3, #0
 3609 000e 23D0     		beq	.L202
 3610              	.LBB9:
 818:.\main.c      ****     {
 819:.\main.c      ****             uint32 cnt = 0;
 3611              		.loc 1 819 0
 3612 0010 0023     		movs	r3, #0
 3613 0012 FB60     		str	r3, [r7, #12]
 820:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 3614              		.loc 1 820 0
 3615 0014 0AE0     		b	.L204
 3616              	.L205:
 821:.\main.c      ****             {
 822:.\main.c      ****                 cnt++;
 3617              		.loc 1 822 0
 3618 0016 FB68     		ldr	r3, [r7, #12]
 3619 0018 0133     		adds	r3, r3, #1
 3620 001a FB60     		str	r3, [r7, #12]
 823:.\main.c      ****                 if(cnt == 3000000){
 3621              		.loc 1 823 0
 3622 001c FB68     		ldr	r3, [r7, #12]
 3623 001e 114A     		ldr	r2, .L206+4
 3624 0020 9342     		cmp	r3, r2
 3625 0022 03D1     		bne	.L204
 824:.\main.c      ****                     portOpen = 0;
 3626              		.loc 1 824 0
 3627 0024 0E4B     		ldr	r3, .L206
 3628 0026 0022     		movs	r2, #0
 3629 0028 1A70     		strb	r2, [r3]
 825:.\main.c      ****                     return;
 3630              		.loc 1 825 0
 3631 002a 15E0     		b	.L202
 3632              	.L204:
 820:.\main.c      ****             {
 3633              		.loc 1 820 0
 3634 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 3635 0030 0346     		mov	r3, r0
 3636 0032 002B     		cmp	r3, #0
 3637 0034 EFD0     		beq	.L205
 826:.\main.c      ****                 }
 827:.\main.c      ****             }
 828:.\main.c      ****             s[63]='\0';
 3638              		.loc 1 828 0
 3639 0036 7B68     		ldr	r3, [r7, #4]
 3640 0038 3F33     		adds	r3, r3, #63
 3641 003a 0022     		movs	r2, #0
 3642 003c 1A70     		strb	r2, [r3]
 829:.\main.c      ****             s[62]='!';
 3643              		.loc 1 829 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 80


 3644 003e 7B68     		ldr	r3, [r7, #4]
 3645 0040 3E33     		adds	r3, r3, #62
 3646 0042 2122     		movs	r2, #33
 3647 0044 1A70     		strb	r2, [r3]
 830:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 3648              		.loc 1 830 0
 3649 0046 7868     		ldr	r0, [r7, #4]
 3650 0048 FFF7FEFF 		bl	strlen
 3651 004c 0346     		mov	r3, r0
 3652 004e 9BB2     		uxth	r3, r3
 3653 0050 7868     		ldr	r0, [r7, #4]
 3654 0052 1946     		mov	r1, r3
 3655 0054 FFF7FEFF 		bl	USBUART_PutData
 3656              	.L202:
 3657              	.LBE9:
 831:.\main.c      ****     }
 832:.\main.c      **** }
 3658              		.loc 1 832 0
 3659 0058 1037     		adds	r7, r7, #16
 3660              		.cfi_def_cfa_offset 8
 3661 005a BD46     		mov	sp, r7
 3662              		.cfi_def_cfa_register 13
 3663              		@ sp needed
 3664 005c 80BD     		pop	{r7, pc}
 3665              	.L207:
 3666 005e 00BF     		.align	2
 3667              	.L206:
 3668 0060 00000000 		.word	portOpen
 3669 0064 C0C62D00 		.word	3000000
 3670              		.cfi_endproc
 3671              	.LFE98:
 3672              		.size	usbPutString, .-usbPutString
 3673              		.section	.text.usbPutChar,"ax",%progbits
 3674              		.align	2
 3675              		.global	usbPutChar
 3676              		.thumb
 3677              		.thumb_func
 3678              		.type	usbPutChar, %function
 3679              	usbPutChar:
 3680              	.LFB99:
 833:.\main.c      **** //* ========================================
 834:.\main.c      **** void usbPutChar(char c)
 835:.\main.c      **** {
 3681              		.loc 1 835 0
 3682              		.cfi_startproc
 3683              		@ args = 0, pretend = 0, frame = 16
 3684              		@ frame_needed = 1, uses_anonymous_args = 0
 3685 0000 80B5     		push	{r7, lr}
 3686              		.cfi_def_cfa_offset 8
 3687              		.cfi_offset 7, -8
 3688              		.cfi_offset 14, -4
 3689 0002 84B0     		sub	sp, sp, #16
 3690              		.cfi_def_cfa_offset 24
 3691 0004 00AF     		add	r7, sp, #0
 3692              		.cfi_def_cfa_register 7
 3693 0006 0346     		mov	r3, r0
 3694 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 81


 836:.\main.c      ****     if (USE_USB && portOpen)    
 3695              		.loc 1 836 0
 3696 000a 0F4B     		ldr	r3, .L212
 3697 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3698 000e 002B     		cmp	r3, #0
 3699 0010 16D0     		beq	.L208
 3700              	.LBB10:
 837:.\main.c      ****     {    
 838:.\main.c      ****         uint32 cnt = 0;
 3701              		.loc 1 838 0
 3702 0012 0023     		movs	r3, #0
 3703 0014 FB60     		str	r3, [r7, #12]
 839:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 3704              		.loc 1 839 0
 3705 0016 0AE0     		b	.L210
 3706              	.L211:
 840:.\main.c      ****             cnt++;
 3707              		.loc 1 840 0
 3708 0018 FB68     		ldr	r3, [r7, #12]
 3709 001a 0133     		adds	r3, r3, #1
 3710 001c FB60     		str	r3, [r7, #12]
 841:.\main.c      ****             if(cnt == 3000000){
 3711              		.loc 1 841 0
 3712 001e FB68     		ldr	r3, [r7, #12]
 3713 0020 0A4A     		ldr	r2, .L212+4
 3714 0022 9342     		cmp	r3, r2
 3715 0024 03D1     		bne	.L210
 842:.\main.c      ****                 portOpen = 0;
 3716              		.loc 1 842 0
 3717 0026 084B     		ldr	r3, .L212
 3718 0028 0022     		movs	r2, #0
 3719 002a 1A70     		strb	r2, [r3]
 843:.\main.c      ****                 return;
 3720              		.loc 1 843 0
 3721 002c 08E0     		b	.L208
 3722              	.L210:
 839:.\main.c      ****             cnt++;
 3723              		.loc 1 839 0
 3724 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 3725 0032 0346     		mov	r3, r0
 3726 0034 002B     		cmp	r3, #0
 3727 0036 EFD0     		beq	.L211
 844:.\main.c      ****             }
 845:.\main.c      ****         }
 846:.\main.c      ****         USBUART_PutChar(c);
 3728              		.loc 1 846 0
 3729 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3730 003a 1846     		mov	r0, r3
 3731 003c FFF7FEFF 		bl	USBUART_PutChar
 3732              	.L208:
 3733              	.LBE10:
 847:.\main.c      ****     }    
 848:.\main.c      **** }
 3734              		.loc 1 848 0
 3735 0040 1037     		adds	r7, r7, #16
 3736              		.cfi_def_cfa_offset 8
 3737 0042 BD46     		mov	sp, r7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 82


 3738              		.cfi_def_cfa_register 13
 3739              		@ sp needed
 3740 0044 80BD     		pop	{r7, pc}
 3741              	.L213:
 3742 0046 00BF     		.align	2
 3743              	.L212:
 3744 0048 00000000 		.word	portOpen
 3745 004c C0C62D00 		.word	3000000
 3746              		.cfi_endproc
 3747              	.LFE99:
 3748              		.size	usbPutChar, .-usbPutChar
 3749              		.section	.text.uart_set_PWM,"ax",%progbits
 3750              		.align	2
 3751              		.global	uart_set_PWM
 3752              		.thumb
 3753              		.thumb_func
 3754              		.type	uart_set_PWM, %function
 3755              	uart_set_PWM:
 3756              	.LFB100:
 849:.\main.c      **** //* ========================================
 850:.\main.c      **** 
 851:.\main.c      **** void uart_set_PWM()
 852:.\main.c      **** {
 3757              		.loc 1 852 0
 3758              		.cfi_startproc
 3759              		@ args = 0, pretend = 0, frame = 8
 3760              		@ frame_needed = 1, uses_anonymous_args = 0
 3761 0000 80B5     		push	{r7, lr}
 3762              		.cfi_def_cfa_offset 8
 3763              		.cfi_offset 7, -8
 3764              		.cfi_offset 14, -4
 3765 0002 82B0     		sub	sp, sp, #8
 3766              		.cfi_def_cfa_offset 16
 3767 0004 00AF     		add	r7, sp, #0
 3768              		.cfi_def_cfa_register 7
 853:.\main.c      ****     uint8 c;
 854:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 3769              		.loc 1 854 0
 3770 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 3771 000a 0346     		mov	r3, r0
 3772 000c 002B     		cmp	r3, #0
 3773 000e 11D0     		beq	.L214
 855:.\main.c      ****        {  
 856:.\main.c      ****             c = USBUART_GetChar();
 3774              		.loc 1 856 0
 3775 0010 FFF7FEFF 		bl	USBUART_GetChar
 3776 0014 0346     		mov	r3, r0
 3777 0016 FB71     		strb	r3, [r7, #7]
 857:.\main.c      ****             
 858:.\main.c      ****             if(c <= 100 && c > 0){
 3778              		.loc 1 858 0
 3779 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3780 001a 642B     		cmp	r3, #100
 3781 001c 0AD8     		bhi	.L214
 3782              		.loc 1 858 0 is_stmt 0 discriminator 1
 3783 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3784 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 83


 3785 0022 07D0     		beq	.L214
 859:.\main.c      ****                 PWM_1_WriteCompare(c);
 3786              		.loc 1 859 0 is_stmt 1
 3787 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3788 0026 1846     		mov	r0, r3
 3789 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 860:.\main.c      ****                 usbPutString(c);
 3790              		.loc 1 860 0
 3791 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3792 002e 1846     		mov	r0, r3
 3793 0030 FFF7FEFF 		bl	usbPutString
 3794              	.L214:
 861:.\main.c      ****             }
 862:.\main.c      ****        }
 863:.\main.c      **** }
 3795              		.loc 1 863 0
 3796 0034 0837     		adds	r7, r7, #8
 3797              		.cfi_def_cfa_offset 8
 3798 0036 BD46     		mov	sp, r7
 3799              		.cfi_def_cfa_register 13
 3800              		@ sp needed
 3801 0038 80BD     		pop	{r7, pc}
 3802              		.cfi_endproc
 3803              	.LFE100:
 3804              		.size	uart_set_PWM, .-uart_set_PWM
 3805 003a 00BF     		.text
 3806              	.Letext0:
 3807              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3808              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3809              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3810              		.file 5 ".\\vars.h"
 3811              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 3812              		.section	.debug_info,"",%progbits
 3813              	.Ldebug_info0:
 3814 0000 DB0B0000 		.4byte	0xbdb
 3815 0004 0400     		.2byte	0x4
 3816 0006 00000000 		.4byte	.Ldebug_abbrev0
 3817 000a 04       		.byte	0x4
 3818 000b 01       		.uleb128 0x1
 3819 000c C2030000 		.4byte	.LASF164
 3820 0010 01       		.byte	0x1
 3821 0011 DE070000 		.4byte	.LASF165
 3822 0015 0F020000 		.4byte	.LASF166
 3823 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3824 001d 00000000 		.4byte	0
 3825 0021 00000000 		.4byte	.Ldebug_line0
 3826 0025 02       		.uleb128 0x2
 3827 0026 01       		.byte	0x1
 3828 0027 06       		.byte	0x6
 3829 0028 19070000 		.4byte	.LASF0
 3830 002c 02       		.uleb128 0x2
 3831 002d 01       		.byte	0x1
 3832 002e 08       		.byte	0x8
 3833 002f 7C060000 		.4byte	.LASF1
 3834 0033 02       		.uleb128 0x2
 3835 0034 02       		.byte	0x2
 3836 0035 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 84


 3837 0036 31050000 		.4byte	.LASF2
 3838 003a 02       		.uleb128 0x2
 3839 003b 02       		.byte	0x2
 3840 003c 07       		.byte	0x7
 3841 003d 25070000 		.4byte	.LASF3
 3842 0041 03       		.uleb128 0x3
 3843 0042 6D000000 		.4byte	.LASF11
 3844 0046 02       		.byte	0x2
 3845 0047 3F       		.byte	0x3f
 3846 0048 4C000000 		.4byte	0x4c
 3847 004c 02       		.uleb128 0x2
 3848 004d 04       		.byte	0x4
 3849 004e 05       		.byte	0x5
 3850 004f 5B050000 		.4byte	.LASF4
 3851 0053 02       		.uleb128 0x2
 3852 0054 04       		.byte	0x4
 3853 0055 07       		.byte	0x7
 3854 0056 33060000 		.4byte	.LASF5
 3855 005a 02       		.uleb128 0x2
 3856 005b 08       		.byte	0x8
 3857 005c 05       		.byte	0x5
 3858 005d 95030000 		.4byte	.LASF6
 3859 0061 02       		.uleb128 0x2
 3860 0062 08       		.byte	0x8
 3861 0063 07       		.byte	0x7
 3862 0064 DF010000 		.4byte	.LASF7
 3863 0068 04       		.uleb128 0x4
 3864 0069 04       		.byte	0x4
 3865 006a 05       		.byte	0x5
 3866 006b 696E7400 		.ascii	"int\000"
 3867 006f 02       		.uleb128 0x2
 3868 0070 04       		.byte	0x4
 3869 0071 07       		.byte	0x7
 3870 0072 55000000 		.4byte	.LASF8
 3871 0076 02       		.uleb128 0x2
 3872 0077 04       		.byte	0x4
 3873 0078 07       		.byte	0x7
 3874 0079 2A060000 		.4byte	.LASF9
 3875 007d 05       		.uleb128 0x5
 3876 007e 04       		.byte	0x4
 3877 007f 83000000 		.4byte	0x83
 3878 0083 02       		.uleb128 0x2
 3879 0084 01       		.byte	0x1
 3880 0085 08       		.byte	0x8
 3881 0086 23030000 		.4byte	.LASF10
 3882 008a 03       		.uleb128 0x3
 3883 008b 51060000 		.4byte	.LASF12
 3884 008f 03       		.byte	0x3
 3885 0090 2C       		.byte	0x2c
 3886 0091 41000000 		.4byte	0x41
 3887 0095 06       		.uleb128 0x6
 3888 0096 71070000 		.4byte	.LASF13
 3889 009a 04       		.byte	0x4
 3890 009b 9201     		.2byte	0x192
 3891 009d 2C000000 		.4byte	0x2c
 3892 00a1 06       		.uleb128 0x6
 3893 00a2 54030000 		.4byte	.LASF14
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 85


 3894 00a6 04       		.byte	0x4
 3895 00a7 9301     		.2byte	0x193
 3896 00a9 3A000000 		.4byte	0x3a
 3897 00ad 06       		.uleb128 0x6
 3898 00ae 7D040000 		.4byte	.LASF15
 3899 00b2 04       		.byte	0x4
 3900 00b3 9401     		.2byte	0x194
 3901 00b5 53000000 		.4byte	0x53
 3902 00b9 06       		.uleb128 0x6
 3903 00ba 5B030000 		.4byte	.LASF16
 3904 00be 04       		.byte	0x4
 3905 00bf 9501     		.2byte	0x195
 3906 00c1 25000000 		.4byte	0x25
 3907 00c5 06       		.uleb128 0x6
 3908 00c6 77000000 		.4byte	.LASF17
 3909 00ca 04       		.byte	0x4
 3910 00cb 9601     		.2byte	0x196
 3911 00cd 33000000 		.4byte	0x33
 3912 00d1 02       		.uleb128 0x2
 3913 00d2 04       		.byte	0x4
 3914 00d3 04       		.byte	0x4
 3915 00d4 8A010000 		.4byte	.LASF18
 3916 00d8 02       		.uleb128 0x2
 3917 00d9 08       		.byte	0x8
 3918 00da 04       		.byte	0x4
 3919 00db 77070000 		.4byte	.LASF19
 3920 00df 02       		.uleb128 0x2
 3921 00e0 08       		.byte	0x8
 3922 00e1 04       		.byte	0x4
 3923 00e2 DC040000 		.4byte	.LASF20
 3924 00e6 07       		.uleb128 0x7
 3925 00e7 BD060000 		.4byte	.LASF28
 3926 00eb 01       		.byte	0x1
 3927 00ec 05       		.byte	0x5
 3928 00ed 53       		.byte	0x53
 3929 00ee 1D010000 		.4byte	0x11d
 3930 00f2 08       		.uleb128 0x8
 3931 00f3 A9010000 		.4byte	.LASF21
 3932 00f7 00       		.sleb128 0
 3933 00f8 08       		.uleb128 0x8
 3934 00f9 8A000000 		.4byte	.LASF22
 3935 00fd 01       		.sleb128 1
 3936 00fe 08       		.uleb128 0x8
 3937 00ff 0A000000 		.4byte	.LASF23
 3938 0103 02       		.sleb128 2
 3939 0104 08       		.uleb128 0x8
 3940 0105 CB040000 		.4byte	.LASF24
 3941 0109 03       		.sleb128 3
 3942 010a 08       		.uleb128 0x8
 3943 010b B2000000 		.4byte	.LASF25
 3944 010f 04       		.sleb128 4
 3945 0110 08       		.uleb128 0x8
 3946 0111 5C010000 		.4byte	.LASF26
 3947 0115 05       		.sleb128 5
 3948 0116 08       		.uleb128 0x8
 3949 0117 B5050000 		.4byte	.LASF27
 3950 011b 06       		.sleb128 6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 86


 3951 011c 00       		.byte	0
 3952 011d 07       		.uleb128 0x7
 3953 011e DD000000 		.4byte	.LASF29
 3954 0122 01       		.byte	0x1
 3955 0123 05       		.byte	0x5
 3956 0124 54       		.byte	0x54
 3957 0125 4E010000 		.4byte	0x14e
 3958 0129 08       		.uleb128 0x8
 3959 012a 9D050000 		.4byte	.LASF30
 3960 012e 00       		.sleb128 0
 3961 012f 08       		.uleb128 0x8
 3962 0130 79030000 		.4byte	.LASF31
 3963 0134 01       		.sleb128 1
 3964 0135 08       		.uleb128 0x8
 3965 0136 72050000 		.4byte	.LASF32
 3966 013a 02       		.sleb128 2
 3967 013b 08       		.uleb128 0x8
 3968 013c 16010000 		.4byte	.LASF33
 3969 0140 03       		.sleb128 3
 3970 0141 08       		.uleb128 0x8
 3971 0142 4A070000 		.4byte	.LASF34
 3972 0146 04       		.sleb128 4
 3973 0147 08       		.uleb128 0x8
 3974 0148 8F070000 		.4byte	.LASF35
 3975 014c 05       		.sleb128 5
 3976 014d 00       		.byte	0
 3977 014e 09       		.uleb128 0x9
 3978 014f 90040000 		.4byte	.LASF167
 3979 0153 20       		.byte	0x20
 3980 0154 05       		.byte	0x5
 3981 0155 5A       		.byte	0x5a
 3982 0156 27020000 		.4byte	0x227
 3983 015a 0A       		.uleb128 0xa
 3984 015b A8040000 		.4byte	.LASF36
 3985 015f 05       		.byte	0x5
 3986 0160 5B       		.byte	0x5b
 3987 0161 B9000000 		.4byte	0xb9
 3988 0165 00       		.byte	0
 3989 0166 0A       		.uleb128 0xa
 3990 0167 A3010000 		.4byte	.LASF37
 3991 016b 05       		.byte	0x5
 3992 016c 5C       		.byte	0x5c
 3993 016d 95000000 		.4byte	0x95
 3994 0171 01       		.byte	0x1
 3995 0172 0A       		.uleb128 0xa
 3996 0173 60060000 		.4byte	.LASF38
 3997 0177 05       		.byte	0x5
 3998 0178 5D       		.byte	0x5d
 3999 0179 C5000000 		.4byte	0xc5
 4000 017d 02       		.byte	0x2
 4001 017e 0A       		.uleb128 0xa
 4002 017f F7020000 		.4byte	.LASF39
 4003 0183 05       		.byte	0x5
 4004 0184 5E       		.byte	0x5e
 4005 0185 C5000000 		.4byte	0xc5
 4006 0189 04       		.byte	0x4
 4007 018a 0A       		.uleb128 0xa
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 87


 4008 018b 38070000 		.4byte	.LASF40
 4009 018f 05       		.byte	0x5
 4010 0190 5F       		.byte	0x5f
 4011 0191 C5000000 		.4byte	0xc5
 4012 0195 06       		.byte	0x6
 4013 0196 0A       		.uleb128 0xa
 4014 0197 B1070000 		.4byte	.LASF41
 4015 019b 05       		.byte	0x5
 4016 019c 60       		.byte	0x60
 4017 019d C5000000 		.4byte	0xc5
 4018 01a1 08       		.byte	0x8
 4019 01a2 0A       		.uleb128 0xa
 4020 01a3 59040000 		.4byte	.LASF42
 4021 01a7 05       		.byte	0x5
 4022 01a8 61       		.byte	0x61
 4023 01a9 C5000000 		.4byte	0xc5
 4024 01ad 0A       		.byte	0xa
 4025 01ae 0A       		.uleb128 0xa
 4026 01af 28030000 		.4byte	.LASF43
 4027 01b3 05       		.byte	0x5
 4028 01b4 62       		.byte	0x62
 4029 01b5 C5000000 		.4byte	0xc5
 4030 01b9 0C       		.byte	0xc
 4031 01ba 0A       		.uleb128 0xa
 4032 01bb AD040000 		.4byte	.LASF44
 4033 01bf 05       		.byte	0x5
 4034 01c0 63       		.byte	0x63
 4035 01c1 C5000000 		.4byte	0xc5
 4036 01c5 0E       		.byte	0xe
 4037 01c6 0A       		.uleb128 0xa
 4038 01c7 B0030000 		.4byte	.LASF45
 4039 01cb 05       		.byte	0x5
 4040 01cc 64       		.byte	0x64
 4041 01cd C5000000 		.4byte	0xc5
 4042 01d1 10       		.byte	0x10
 4043 01d2 0A       		.uleb128 0xa
 4044 01d3 EA050000 		.4byte	.LASF46
 4045 01d7 05       		.byte	0x5
 4046 01d8 65       		.byte	0x65
 4047 01d9 C5000000 		.4byte	0xc5
 4048 01dd 12       		.byte	0x12
 4049 01de 0A       		.uleb128 0xa
 4050 01df D5070000 		.4byte	.LASF47
 4051 01e3 05       		.byte	0x5
 4052 01e4 66       		.byte	0x66
 4053 01e5 C5000000 		.4byte	0xc5
 4054 01e9 14       		.byte	0x14
 4055 01ea 0A       		.uleb128 0xa
 4056 01eb 60030000 		.4byte	.LASF48
 4057 01ef 05       		.byte	0x5
 4058 01f0 67       		.byte	0x67
 4059 01f1 C5000000 		.4byte	0xc5
 4060 01f5 16       		.byte	0x16
 4061 01f6 0A       		.uleb128 0xa
 4062 01f7 D5000000 		.4byte	.LASF49
 4063 01fb 05       		.byte	0x5
 4064 01fc 68       		.byte	0x68
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 88


 4065 01fd C5000000 		.4byte	0xc5
 4066 0201 18       		.byte	0x18
 4067 0202 0A       		.uleb128 0xa
 4068 0203 4C030000 		.4byte	.LASF50
 4069 0207 05       		.byte	0x5
 4070 0208 69       		.byte	0x69
 4071 0209 C5000000 		.4byte	0xc5
 4072 020d 1A       		.byte	0x1a
 4073 020e 0A       		.uleb128 0xa
 4074 020f 50040000 		.4byte	.LASF51
 4075 0213 05       		.byte	0x5
 4076 0214 6A       		.byte	0x6a
 4077 0215 C5000000 		.4byte	0xc5
 4078 0219 1C       		.byte	0x1c
 4079 021a 0A       		.uleb128 0xa
 4080 021b 73010000 		.4byte	.LASF52
 4081 021f 05       		.byte	0x5
 4082 0220 6B       		.byte	0x6b
 4083 0221 C5000000 		.4byte	0xc5
 4084 0225 1E       		.byte	0x1e
 4085 0226 00       		.byte	0
 4086 0227 0B       		.uleb128 0xb
 4087 0228 97070000 		.4byte	.LASF58
 4088 022c 01       		.byte	0x1
 4089 022d 29       		.byte	0x29
 4090 022e 00000000 		.4byte	.LFB63
 4091 0232 60010000 		.4byte	.LFE63-.LFB63
 4092 0236 01       		.uleb128 0x1
 4093 0237 9C       		.byte	0x9c
 4094 0238 71020000 		.4byte	0x271
 4095 023c 0C       		.uleb128 0xc
 4096 023d 10000000 		.4byte	.LBB2
 4097 0241 34010000 		.4byte	.LBE2-.LBB2
 4098 0245 0D       		.uleb128 0xd
 4099 0246 C8000000 		.4byte	.LASF53
 4100 024a 01       		.byte	0x1
 4101 024b 2F       		.byte	0x2f
 4102 024c A1000000 		.4byte	0xa1
 4103 0250 02       		.uleb128 0x2
 4104 0251 91       		.byte	0x91
 4105 0252 76       		.sleb128 -10
 4106 0253 0D       		.uleb128 0xd
 4107 0254 45060000 		.4byte	.LASF54
 4108 0258 01       		.byte	0x1
 4109 0259 31       		.byte	0x31
 4110 025a 71020000 		.4byte	0x271
 4111 025e 02       		.uleb128 0x2
 4112 025f 91       		.byte	0x91
 4113 0260 68       		.sleb128 -24
 4114 0261 0D       		.uleb128 0xd
 4115 0262 AF010000 		.4byte	.LASF55
 4116 0266 01       		.byte	0x1
 4117 0267 32       		.byte	0x32
 4118 0268 71020000 		.4byte	0x271
 4119 026c 02       		.uleb128 0x2
 4120 026d 91       		.byte	0x91
 4121 026e 5C       		.sleb128 -36
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 89


 4122 026f 00       		.byte	0
 4123 0270 00       		.byte	0
 4124 0271 0E       		.uleb128 0xe
 4125 0272 83000000 		.4byte	0x83
 4126 0276 81020000 		.4byte	0x281
 4127 027a 0F       		.uleb128 0xf
 4128 027b 76000000 		.4byte	0x76
 4129 027f 0B       		.byte	0xb
 4130 0280 00       		.byte	0
 4131 0281 10       		.uleb128 0x10
 4132 0282 41030000 		.4byte	.LASF56
 4133 0286 01       		.byte	0x1
 4134 0287 A4       		.byte	0xa4
 4135 0288 00000000 		.4byte	.LFB64
 4136 028c 18000000 		.4byte	.LFE64-.LFB64
 4137 0290 01       		.uleb128 0x1
 4138 0291 9C       		.byte	0x9c
 4139 0292 A5020000 		.4byte	0x2a5
 4140 0296 11       		.uleb128 0x11
 4141 0297 64697200 		.ascii	"dir\000"
 4142 029b 01       		.byte	0x1
 4143 029c A4       		.byte	0xa4
 4144 029d 95000000 		.4byte	0x95
 4145 02a1 02       		.uleb128 0x2
 4146 02a2 91       		.byte	0x91
 4147 02a3 77       		.sleb128 -9
 4148 02a4 00       		.byte	0
 4149 02a5 10       		.uleb128 0x10
 4150 02a6 6D030000 		.4byte	.LASF57
 4151 02aa 01       		.byte	0x1
 4152 02ab A9       		.byte	0xa9
 4153 02ac 00000000 		.4byte	.LFB65
 4154 02b0 18000000 		.4byte	.LFE65-.LFB65
 4155 02b4 01       		.uleb128 0x1
 4156 02b5 9C       		.byte	0x9c
 4157 02b6 C9020000 		.4byte	0x2c9
 4158 02ba 11       		.uleb128 0x11
 4159 02bb 64697200 		.ascii	"dir\000"
 4160 02bf 01       		.byte	0x1
 4161 02c0 A9       		.byte	0xa9
 4162 02c1 95000000 		.4byte	0x95
 4163 02c5 02       		.uleb128 0x2
 4164 02c6 91       		.byte	0x91
 4165 02c7 77       		.sleb128 -9
 4166 02c8 00       		.byte	0
 4167 02c9 12       		.uleb128 0x12
 4168 02ca C3060000 		.4byte	.LASF59
 4169 02ce 01       		.byte	0x1
 4170 02cf AE       		.byte	0xae
 4171 02d0 00000000 		.4byte	.LFB66
 4172 02d4 54000000 		.4byte	.LFE66-.LFB66
 4173 02d8 01       		.uleb128 0x1
 4174 02d9 9C       		.byte	0x9c
 4175 02da ED020000 		.4byte	0x2ed
 4176 02de 13       		.uleb128 0x13
 4177 02df 6D657300 		.ascii	"mes\000"
 4178 02e3 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 90


 4179 02e4 B3       		.byte	0xb3
 4180 02e5 ED020000 		.4byte	0x2ed
 4181 02e9 02       		.uleb128 0x2
 4182 02ea 91       		.byte	0x91
 4183 02eb 68       		.sleb128 -24
 4184 02ec 00       		.byte	0
 4185 02ed 0E       		.uleb128 0xe
 4186 02ee 83000000 		.4byte	0x83
 4187 02f2 FD020000 		.4byte	0x2fd
 4188 02f6 0F       		.uleb128 0xf
 4189 02f7 76000000 		.4byte	0x76
 4190 02fb 0F       		.byte	0xf
 4191 02fc 00       		.byte	0
 4192 02fd 10       		.uleb128 0x10
 4193 02fe 90010000 		.4byte	.LASF60
 4194 0302 01       		.byte	0x1
 4195 0303 B8       		.byte	0xb8
 4196 0304 00000000 		.4byte	.LFB67
 4197 0308 F4000000 		.4byte	.LFE67-.LFB67
 4198 030c 01       		.uleb128 0x1
 4199 030d 9C       		.byte	0x9c
 4200 030e 4B030000 		.4byte	0x34b
 4201 0312 14       		.uleb128 0x14
 4202 0313 C3050000 		.4byte	.LASF61
 4203 0317 01       		.byte	0x1
 4204 0318 B8       		.byte	0xb8
 4205 0319 D8000000 		.4byte	0xd8
 4206 031d 02       		.uleb128 0x2
 4207 031e 91       		.byte	0x91
 4208 031f 68       		.sleb128 -24
 4209 0320 14       		.uleb128 0x14
 4210 0321 8F030000 		.4byte	.LASF62
 4211 0325 01       		.byte	0x1
 4212 0326 B8       		.byte	0xb8
 4213 0327 D8000000 		.4byte	0xd8
 4214 032b 02       		.uleb128 0x2
 4215 032c 91       		.byte	0x91
 4216 032d 60       		.sleb128 -32
 4217 032e 0D       		.uleb128 0xd
 4218 032f BD010000 		.4byte	.LASF63
 4219 0333 01       		.byte	0x1
 4220 0334 CD       		.byte	0xcd
 4221 0335 C5000000 		.4byte	0xc5
 4222 0339 02       		.uleb128 0x2
 4223 033a 91       		.byte	0x91
 4224 033b 76       		.sleb128 -10
 4225 033c 0D       		.uleb128 0xd
 4226 033d 84040000 		.4byte	.LASF64
 4227 0341 01       		.byte	0x1
 4228 0342 CE       		.byte	0xce
 4229 0343 C5000000 		.4byte	0xc5
 4230 0347 02       		.uleb128 0x2
 4231 0348 91       		.byte	0x91
 4232 0349 74       		.sleb128 -12
 4233 034a 00       		.byte	0
 4234 034b 15       		.uleb128 0x15
 4235 034c D4060000 		.4byte	.LASF65
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 91


 4236 0350 01       		.byte	0x1
 4237 0351 D4       		.byte	0xd4
 4238 0352 00000000 		.4byte	.LFB68
 4239 0356 18000000 		.4byte	.LFE68-.LFB68
 4240 035a 01       		.uleb128 0x1
 4241 035b 9C       		.byte	0x9c
 4242 035c 15       		.uleb128 0x15
 4243 035d F5070000 		.4byte	.LASF66
 4244 0361 01       		.byte	0x1
 4245 0362 DA       		.byte	0xda
 4246 0363 00000000 		.4byte	.LFB69
 4247 0367 18000000 		.4byte	.LFE69-.LFB69
 4248 036b 01       		.uleb128 0x1
 4249 036c 9C       		.byte	0x9c
 4250 036d 15       		.uleb128 0x15
 4251 036e 6B060000 		.4byte	.LASF67
 4252 0372 01       		.byte	0x1
 4253 0373 E0       		.byte	0xe0
 4254 0374 00000000 		.4byte	.LFB70
 4255 0378 22000000 		.4byte	.LFE70-.LFB70
 4256 037c 01       		.uleb128 0x1
 4257 037d 9C       		.byte	0x9c
 4258 037e 15       		.uleb128 0x15
 4259 037f C8010000 		.4byte	.LASF68
 4260 0383 01       		.byte	0x1
 4261 0384 E7       		.byte	0xe7
 4262 0385 00000000 		.4byte	.LFB71
 4263 0389 1C000000 		.4byte	.LFE71-.LFB71
 4264 038d 01       		.uleb128 0x1
 4265 038e 9C       		.byte	0x9c
 4266 038f 15       		.uleb128 0x15
 4267 0390 E0050000 		.4byte	.LASF69
 4268 0394 01       		.byte	0x1
 4269 0395 EC       		.byte	0xec
 4270 0396 00000000 		.4byte	.LFB72
 4271 039a 28000000 		.4byte	.LFE72-.LFB72
 4272 039e 01       		.uleb128 0x1
 4273 039f 9C       		.byte	0x9c
 4274 03a0 15       		.uleb128 0x15
 4275 03a1 D6010000 		.4byte	.LASF70
 4276 03a5 01       		.byte	0x1
 4277 03a6 F1       		.byte	0xf1
 4278 03a7 00000000 		.4byte	.LFB73
 4279 03ab 2C000000 		.4byte	.LFE73-.LFB73
 4280 03af 01       		.uleb128 0x1
 4281 03b0 9C       		.byte	0x9c
 4282 03b1 15       		.uleb128 0x15
 4283 03b2 4D020000 		.4byte	.LASF71
 4284 03b6 01       		.byte	0x1
 4285 03b7 F6       		.byte	0xf6
 4286 03b8 00000000 		.4byte	.LFB74
 4287 03bc 38000000 		.4byte	.LFE74-.LFB74
 4288 03c0 01       		.uleb128 0x1
 4289 03c1 9C       		.byte	0x9c
 4290 03c2 15       		.uleb128 0x15
 4291 03c3 64050000 		.4byte	.LASF72
 4292 03c7 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 92


 4293 03c8 FF       		.byte	0xff
 4294 03c9 00000000 		.4byte	.LFB75
 4295 03cd 38000000 		.4byte	.LFE75-.LFB75
 4296 03d1 01       		.uleb128 0x1
 4297 03d2 9C       		.byte	0x9c
 4298 03d3 16       		.uleb128 0x16
 4299 03d4 67010000 		.4byte	.LASF73
 4300 03d8 01       		.byte	0x1
 4301 03d9 0801     		.2byte	0x108
 4302 03db 00000000 		.4byte	.LFB76
 4303 03df 14000000 		.4byte	.LFE76-.LFB76
 4304 03e3 01       		.uleb128 0x1
 4305 03e4 9C       		.byte	0x9c
 4306 03e5 17       		.uleb128 0x17
 4307 03e6 63020000 		.4byte	.LASF74
 4308 03ea 01       		.byte	0x1
 4309 03eb 0D01     		.2byte	0x10d
 4310 03ed 00000000 		.4byte	.LFB77
 4311 03f1 18000000 		.4byte	.LFE77-.LFB77
 4312 03f5 01       		.uleb128 0x1
 4313 03f6 9C       		.byte	0x9c
 4314 03f7 17       		.uleb128 0x17
 4315 03f8 B8030000 		.4byte	.LASF75
 4316 03fc 01       		.byte	0x1
 4317 03fd 1101     		.2byte	0x111
 4318 03ff 00000000 		.4byte	.LFB78
 4319 0403 18000000 		.4byte	.LFE78-.LFB78
 4320 0407 01       		.uleb128 0x1
 4321 0408 9C       		.byte	0x9c
 4322 0409 17       		.uleb128 0x17
 4323 040a 00080000 		.4byte	.LASF76
 4324 040e 01       		.byte	0x1
 4325 040f 1601     		.2byte	0x116
 4326 0411 00000000 		.4byte	.LFB79
 4327 0415 18000000 		.4byte	.LFE79-.LFB79
 4328 0419 01       		.uleb128 0x1
 4329 041a 9C       		.byte	0x9c
 4330 041b 17       		.uleb128 0x17
 4331 041c E8020000 		.4byte	.LASF77
 4332 0420 01       		.byte	0x1
 4333 0421 1A01     		.2byte	0x11a
 4334 0423 00000000 		.4byte	.LFB80
 4335 0427 18000000 		.4byte	.LFE80-.LFB80
 4336 042b 01       		.uleb128 0x1
 4337 042c 9C       		.byte	0x9c
 4338 042d 18       		.uleb128 0x18
 4339 042e E8040000 		.4byte	.LASF78
 4340 0432 01       		.byte	0x1
 4341 0433 1F01     		.2byte	0x11f
 4342 0435 00000000 		.4byte	.LFB81
 4343 0439 98000000 		.4byte	.LFE81-.LFB81
 4344 043d 01       		.uleb128 0x1
 4345 043e 9C       		.byte	0x9c
 4346 043f 53040000 		.4byte	0x453
 4347 0443 19       		.uleb128 0x19
 4348 0444 61040000 		.4byte	.LASF79
 4349 0448 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 93


 4350 0449 2001     		.2byte	0x120
 4351 044b 83000000 		.4byte	0x83
 4352 044f 02       		.uleb128 0x2
 4353 0450 91       		.byte	0x91
 4354 0451 6F       		.sleb128 -17
 4355 0452 00       		.byte	0
 4356 0453 18       		.uleb128 0x18
 4357 0454 D3040000 		.4byte	.LASF80
 4358 0458 01       		.byte	0x1
 4359 0459 3701     		.2byte	0x137
 4360 045b 00000000 		.4byte	.LFB82
 4361 045f 84010000 		.4byte	.LFE82-.LFB82
 4362 0463 01       		.uleb128 0x1
 4363 0464 9C       		.byte	0x9c
 4364 0465 92040000 		.4byte	0x492
 4365 0469 19       		.uleb128 0x19
 4366 046a 61040000 		.4byte	.LASF79
 4367 046e 01       		.byte	0x1
 4368 046f 3901     		.2byte	0x139
 4369 0471 83000000 		.4byte	0x83
 4370 0475 02       		.uleb128 0x2
 4371 0476 91       		.byte	0x91
 4372 0477 77       		.sleb128 -9
 4373 0478 0C       		.uleb128 0xc
 4374 0479 88000000 		.4byte	.LBB3
 4375 047d D2000000 		.4byte	.LBE3-.LBB3
 4376 0481 1A       		.uleb128 0x1a
 4377 0482 6D657300 		.ascii	"mes\000"
 4378 0486 01       		.byte	0x1
 4379 0487 5F01     		.2byte	0x15f
 4380 0489 ED020000 		.4byte	0x2ed
 4381 048d 02       		.uleb128 0x2
 4382 048e 91       		.byte	0x91
 4383 048f 64       		.sleb128 -28
 4384 0490 00       		.byte	0
 4385 0491 00       		.byte	0
 4386 0492 1B       		.uleb128 0x1b
 4387 0493 59070000 		.4byte	.LASF81
 4388 0497 01       		.byte	0x1
 4389 0498 6F01     		.2byte	0x16f
 4390 049a 00000000 		.4byte	.LFB83
 4391 049e 0C000000 		.4byte	.LFE83-.LFB83
 4392 04a2 01       		.uleb128 0x1
 4393 04a3 9C       		.byte	0x9c
 4394 04a4 1C       		.uleb128 0x1c
 4395 04a5 F2050000 		.4byte	.LASF82
 4396 04a9 01       		.byte	0x1
 4397 04aa 7501     		.2byte	0x175
 4398 04ac 00000000 		.4byte	.LFB84
 4399 04b0 2C000000 		.4byte	.LFE84-.LFB84
 4400 04b4 01       		.uleb128 0x1
 4401 04b5 9C       		.byte	0x9c
 4402 04b6 18       		.uleb128 0x18
 4403 04b7 80010000 		.4byte	.LASF83
 4404 04bb 01       		.byte	0x1
 4405 04bc 7E01     		.2byte	0x17e
 4406 04be 00000000 		.4byte	.LFB85
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 94


 4407 04c2 F0010000 		.4byte	.LFE85-.LFB85
 4408 04c6 01       		.uleb128 0x1
 4409 04c7 9C       		.byte	0x9c
 4410 04c8 03050000 		.4byte	0x503
 4411 04cc 1D       		.uleb128 0x1d
 4412 04cd AC000000 		.4byte	.LBB4
 4413 04d1 52000000 		.4byte	.LBE4-.LBB4
 4414 04d5 E9040000 		.4byte	0x4e9
 4415 04d9 1A       		.uleb128 0x1a
 4416 04da 6D657300 		.ascii	"mes\000"
 4417 04de 01       		.byte	0x1
 4418 04df 9501     		.2byte	0x195
 4419 04e1 ED020000 		.4byte	0x2ed
 4420 04e5 02       		.uleb128 0x2
 4421 04e6 91       		.byte	0x91
 4422 04e7 58       		.sleb128 -40
 4423 04e8 00       		.byte	0
 4424 04e9 0C       		.uleb128 0xc
 4425 04ea 0A010000 		.4byte	.LBB5
 4426 04ee 90000000 		.4byte	.LBE5-.LBB5
 4427 04f2 19       		.uleb128 0x19
 4428 04f3 6C070000 		.4byte	.LASF84
 4429 04f7 01       		.byte	0x1
 4430 04f8 A001     		.2byte	0x1a0
 4431 04fa D8000000 		.4byte	0xd8
 4432 04fe 02       		.uleb128 0x2
 4433 04ff 91       		.byte	0x91
 4434 0500 68       		.sleb128 -24
 4435 0501 00       		.byte	0
 4436 0502 00       		.byte	0
 4437 0503 1C       		.uleb128 0x1c
 4438 0504 34020000 		.4byte	.LASF85
 4439 0508 01       		.byte	0x1
 4440 0509 AA01     		.2byte	0x1aa
 4441 050b 00000000 		.4byte	.LFB86
 4442 050f 78000000 		.4byte	.LFE86-.LFB86
 4443 0513 01       		.uleb128 0x1
 4444 0514 9C       		.byte	0x9c
 4445 0515 1B       		.uleb128 0x1b
 4446 0516 8F060000 		.4byte	.LASF86
 4447 051a 01       		.byte	0x1
 4448 051b C301     		.2byte	0x1c3
 4449 051d 00000000 		.4byte	.LFB87
 4450 0521 20000000 		.4byte	.LFE87-.LFB87
 4451 0525 01       		.uleb128 0x1
 4452 0526 9C       		.byte	0x9c
 4453 0527 1C       		.uleb128 0x1c
 4454 0528 AA020000 		.4byte	.LASF87
 4455 052c 01       		.byte	0x1
 4456 052d CA01     		.2byte	0x1ca
 4457 052f 00000000 		.4byte	.LFB88
 4458 0533 1C000000 		.4byte	.LFE88-.LFB88
 4459 0537 01       		.uleb128 0x1
 4460 0538 9C       		.byte	0x9c
 4461 0539 1C       		.uleb128 0x1c
 4462 053a 90000000 		.4byte	.LASF88
 4463 053e 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 95


 4464 053f D301     		.2byte	0x1d3
 4465 0541 00000000 		.4byte	.LFB89
 4466 0545 0A000000 		.4byte	.LFE89-.LFB89
 4467 0549 01       		.uleb128 0x1
 4468 054a 9C       		.byte	0x9c
 4469 054b 1E       		.uleb128 0x1e
 4470 054c 26000000 		.4byte	.LASF89
 4471 0550 01       		.byte	0x1
 4472 0551 D801     		.2byte	0x1d8
 4473 0553 00000000 		.4byte	.LFB90
 4474 0557 30020000 		.4byte	.LFE90-.LFB90
 4475 055b 01       		.uleb128 0x1
 4476 055c 9C       		.byte	0x9c
 4477 055d BC050000 		.4byte	0x5bc
 4478 0561 19       		.uleb128 0x19
 4479 0562 8A020000 		.4byte	.LASF90
 4480 0566 01       		.byte	0x1
 4481 0567 E601     		.2byte	0x1e6
 4482 0569 C5000000 		.4byte	0xc5
 4483 056d 02       		.uleb128 0x2
 4484 056e 91       		.byte	0x91
 4485 056f 5E       		.sleb128 -34
 4486 0570 19       		.uleb128 0x19
 4487 0571 69040000 		.4byte	.LASF91
 4488 0575 01       		.byte	0x1
 4489 0576 E701     		.2byte	0x1e7
 4490 0578 C5000000 		.4byte	0xc5
 4491 057c 02       		.uleb128 0x2
 4492 057d 91       		.byte	0x91
 4493 057e 5C       		.sleb128 -36
 4494 057f 19       		.uleb128 0x19
 4495 0580 17030000 		.4byte	.LASF92
 4496 0584 01       		.byte	0x1
 4497 0585 E801     		.2byte	0x1e8
 4498 0587 D8000000 		.4byte	0xd8
 4499 058b 02       		.uleb128 0x2
 4500 058c 91       		.byte	0x91
 4501 058d 68       		.sleb128 -24
 4502 058e 19       		.uleb128 0x19
 4503 058f B9070000 		.4byte	.LASF93
 4504 0593 01       		.byte	0x1
 4505 0594 E901     		.2byte	0x1e9
 4506 0596 D8000000 		.4byte	0xd8
 4507 059a 02       		.uleb128 0x2
 4508 059b 91       		.byte	0x91
 4509 059c 60       		.sleb128 -32
 4510 059d 19       		.uleb128 0x19
 4511 059e 85030000 		.4byte	.LASF94
 4512 05a2 01       		.byte	0x1
 4513 05a3 F201     		.2byte	0x1f2
 4514 05a5 68000000 		.4byte	0x68
 4515 05a9 02       		.uleb128 0x2
 4516 05aa 91       		.byte	0x91
 4517 05ab 58       		.sleb128 -40
 4518 05ac 19       		.uleb128 0x19
 4519 05ad 62070000 		.4byte	.LASF95
 4520 05b1 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 96


 4521 05b2 F301     		.2byte	0x1f3
 4522 05b4 68000000 		.4byte	0x68
 4523 05b8 02       		.uleb128 0x2
 4524 05b9 91       		.byte	0x91
 4525 05ba 54       		.sleb128 -44
 4526 05bb 00       		.byte	0
 4527 05bc 1E       		.uleb128 0x1e
 4528 05bd 43020000 		.4byte	.LASF96
 4529 05c1 01       		.byte	0x1
 4530 05c2 0102     		.2byte	0x201
 4531 05c4 00000000 		.4byte	.LFB91
 4532 05c8 50010000 		.4byte	.LFE91-.LFB91
 4533 05cc 01       		.uleb128 0x1
 4534 05cd 9C       		.byte	0x9c
 4535 05ce FE050000 		.4byte	0x5fe
 4536 05d2 1A       		.uleb128 0x1a
 4537 05d3 6E6C00   		.ascii	"nl\000"
 4538 05d6 01       		.byte	0x1
 4539 05d7 0502     		.2byte	0x205
 4540 05d9 95000000 		.4byte	0x95
 4541 05dd 02       		.uleb128 0x2
 4542 05de 91       		.byte	0x91
 4543 05df 67       		.sleb128 -25
 4544 05e0 1A       		.uleb128 0x1a
 4545 05e1 6E7200   		.ascii	"nr\000"
 4546 05e4 01       		.byte	0x1
 4547 05e5 0602     		.2byte	0x206
 4548 05e7 95000000 		.4byte	0x95
 4549 05eb 02       		.uleb128 0x2
 4550 05ec 91       		.byte	0x91
 4551 05ed 66       		.sleb128 -26
 4552 05ee 1A       		.uleb128 0x1a
 4553 05ef 6D696400 		.ascii	"mid\000"
 4554 05f3 01       		.byte	0x1
 4555 05f4 0702     		.2byte	0x207
 4556 05f6 95000000 		.4byte	0x95
 4557 05fa 02       		.uleb128 0x2
 4558 05fb 91       		.byte	0x91
 4559 05fc 65       		.sleb128 -27
 4560 05fd 00       		.byte	0
 4561 05fe 1E       		.uleb128 0x1e
 4562 05ff 05010000 		.4byte	.LASF97
 4563 0603 01       		.byte	0x1
 4564 0604 2302     		.2byte	0x223
 4565 0606 00000000 		.4byte	.LFB92
 4566 060a 50010000 		.4byte	.LFE92-.LFB92
 4567 060e 01       		.uleb128 0x1
 4568 060f 9C       		.byte	0x9c
 4569 0610 40060000 		.4byte	0x640
 4570 0614 1A       		.uleb128 0x1a
 4571 0615 6E6C00   		.ascii	"nl\000"
 4572 0618 01       		.byte	0x1
 4573 0619 2702     		.2byte	0x227
 4574 061b 95000000 		.4byte	0x95
 4575 061f 02       		.uleb128 0x2
 4576 0620 91       		.byte	0x91
 4577 0621 67       		.sleb128 -25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 97


 4578 0622 1A       		.uleb128 0x1a
 4579 0623 6E7200   		.ascii	"nr\000"
 4580 0626 01       		.byte	0x1
 4581 0627 2802     		.2byte	0x228
 4582 0629 95000000 		.4byte	0x95
 4583 062d 02       		.uleb128 0x2
 4584 062e 91       		.byte	0x91
 4585 062f 66       		.sleb128 -26
 4586 0630 1A       		.uleb128 0x1a
 4587 0631 6D696400 		.ascii	"mid\000"
 4588 0635 01       		.byte	0x1
 4589 0636 2902     		.2byte	0x229
 4590 0638 95000000 		.4byte	0x95
 4591 063c 02       		.uleb128 0x2
 4592 063d 91       		.byte	0x91
 4593 063e 65       		.sleb128 -27
 4594 063f 00       		.byte	0
 4595 0640 1E       		.uleb128 0x1e
 4596 0641 FA000000 		.4byte	.LASF98
 4597 0645 01       		.byte	0x1
 4598 0646 4502     		.2byte	0x245
 4599 0648 00000000 		.4byte	.LFB93
 4600 064c B0010000 		.4byte	.LFE93-.LFB93
 4601 0650 01       		.uleb128 0x1
 4602 0651 9C       		.byte	0x9c
 4603 0652 9E060000 		.4byte	0x69e
 4604 0656 1A       		.uleb128 0x1a
 4605 0657 6E6C00   		.ascii	"nl\000"
 4606 065a 01       		.byte	0x1
 4607 065b 4902     		.2byte	0x249
 4608 065d 95000000 		.4byte	0x95
 4609 0661 02       		.uleb128 0x2
 4610 0662 91       		.byte	0x91
 4611 0663 67       		.sleb128 -25
 4612 0664 1A       		.uleb128 0x1a
 4613 0665 666C00   		.ascii	"fl\000"
 4614 0668 01       		.byte	0x1
 4615 0669 4A02     		.2byte	0x24a
 4616 066b 95000000 		.4byte	0x95
 4617 066f 02       		.uleb128 0x2
 4618 0670 91       		.byte	0x91
 4619 0671 66       		.sleb128 -26
 4620 0672 1A       		.uleb128 0x1a
 4621 0673 6E7200   		.ascii	"nr\000"
 4622 0676 01       		.byte	0x1
 4623 0677 4B02     		.2byte	0x24b
 4624 0679 95000000 		.4byte	0x95
 4625 067d 02       		.uleb128 0x2
 4626 067e 91       		.byte	0x91
 4627 067f 65       		.sleb128 -27
 4628 0680 1A       		.uleb128 0x1a
 4629 0681 667200   		.ascii	"fr\000"
 4630 0684 01       		.byte	0x1
 4631 0685 4C02     		.2byte	0x24c
 4632 0687 95000000 		.4byte	0x95
 4633 068b 02       		.uleb128 0x2
 4634 068c 91       		.byte	0x91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 98


 4635 068d 64       		.sleb128 -28
 4636 068e 1A       		.uleb128 0x1a
 4637 068f 6D696400 		.ascii	"mid\000"
 4638 0693 01       		.byte	0x1
 4639 0694 4D02     		.2byte	0x24d
 4640 0696 95000000 		.4byte	0x95
 4641 069a 02       		.uleb128 0x2
 4642 069b 91       		.byte	0x91
 4643 069c 63       		.sleb128 -29
 4644 069d 00       		.byte	0
 4645 069e 1E       		.uleb128 0x1e
 4646 069f 0D030000 		.4byte	.LASF99
 4647 06a3 01       		.byte	0x1
 4648 06a4 7602     		.2byte	0x276
 4649 06a6 00000000 		.4byte	.LFB94
 4650 06aa C0000000 		.4byte	.LFE94-.LFB94
 4651 06ae 01       		.uleb128 0x1
 4652 06af 9C       		.byte	0x9c
 4653 06b0 EC060000 		.4byte	0x6ec
 4654 06b4 0C       		.uleb128 0xc
 4655 06b5 0E000000 		.4byte	.LBB6
 4656 06b9 8E000000 		.4byte	.LBE6-.LBB6
 4657 06bd 19       		.uleb128 0x19
 4658 06be 7C020000 		.4byte	.LASF100
 4659 06c2 01       		.byte	0x1
 4660 06c3 7F02     		.2byte	0x27f
 4661 06c5 D1000000 		.4byte	0xd1
 4662 06c9 02       		.uleb128 0x2
 4663 06ca 91       		.byte	0x91
 4664 06cb 74       		.sleb128 -12
 4665 06cc 19       		.uleb128 0x19
 4666 06cd 9A040000 		.4byte	.LASF101
 4667 06d1 01       		.byte	0x1
 4668 06d2 8002     		.2byte	0x280
 4669 06d4 C5000000 		.4byte	0xc5
 4670 06d8 02       		.uleb128 0x2
 4671 06d9 91       		.byte	0x91
 4672 06da 72       		.sleb128 -14
 4673 06db 19       		.uleb128 0x19
 4674 06dc D0020000 		.4byte	.LASF102
 4675 06e0 01       		.byte	0x1
 4676 06e1 8502     		.2byte	0x285
 4677 06e3 ED020000 		.4byte	0x2ed
 4678 06e7 02       		.uleb128 0x2
 4679 06e8 91       		.byte	0x91
 4680 06e9 60       		.sleb128 -32
 4681 06ea 00       		.byte	0
 4682 06eb 00       		.byte	0
 4683 06ec 1E       		.uleb128 0x1e
 4684 06ed A8070000 		.4byte	.LASF103
 4685 06f1 01       		.byte	0x1
 4686 06f2 8C02     		.2byte	0x28c
 4687 06f4 00000000 		.4byte	.LFB95
 4688 06f8 B8000000 		.4byte	.LFE95-.LFB95
 4689 06fc 01       		.uleb128 0x1
 4690 06fd 9C       		.byte	0x9c
 4691 06fe 1C070000 		.4byte	0x71c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 99


 4692 0702 0C       		.uleb128 0xc
 4693 0703 0E000000 		.4byte	.LBB7
 4694 0707 86000000 		.4byte	.LBE7-.LBB7
 4695 070b 19       		.uleb128 0x19
 4696 070c 87050000 		.4byte	.LASF104
 4697 0710 01       		.byte	0x1
 4698 0711 9002     		.2byte	0x290
 4699 0713 ED020000 		.4byte	0x2ed
 4700 0717 02       		.uleb128 0x2
 4701 0718 91       		.byte	0x91
 4702 0719 68       		.sleb128 -24
 4703 071a 00       		.byte	0
 4704 071b 00       		.byte	0
 4705 071c 18       		.uleb128 0x18
 4706 071d FA050000 		.4byte	.LASF105
 4707 0721 01       		.byte	0x1
 4708 0722 A102     		.2byte	0x2a1
 4709 0724 00000000 		.4byte	.LFB96
 4710 0728 4A000000 		.4byte	.LFE96-.LFB96
 4711 072c 01       		.uleb128 0x1
 4712 072d 9C       		.byte	0x9c
 4713 072e 42070000 		.4byte	0x742
 4714 0732 1F       		.uleb128 0x1f
 4715 0733 C5020000 		.4byte	.LASF106
 4716 0737 01       		.byte	0x1
 4717 0738 A102     		.2byte	0x2a1
 4718 073a 42070000 		.4byte	0x742
 4719 073e 02       		.uleb128 0x2
 4720 073f 91       		.byte	0x91
 4721 0740 6C       		.sleb128 -20
 4722 0741 00       		.byte	0
 4723 0742 05       		.uleb128 0x5
 4724 0743 04       		.byte	0x4
 4725 0744 95000000 		.4byte	0x95
 4726 0748 20       		.uleb128 0x20
 4727 0749 54070000 		.4byte	.LASF107
 4728 074d 01       		.byte	0x1
 4729 074e AA02     		.2byte	0x2aa
 4730 0750 68000000 		.4byte	0x68
 4731 0754 00000000 		.4byte	.LFB97
 4732 0758 2C010000 		.4byte	.LFE97-.LFB97
 4733 075c 01       		.uleb128 0x1
 4734 075d 9C       		.byte	0x9c
 4735 075e 7C070000 		.4byte	0x77c
 4736 0762 0C       		.uleb128 0xc
 4737 0763 5E000000 		.4byte	.LBB8
 4738 0767 B2000000 		.4byte	.LBE8-.LBB8
 4739 076b 19       		.uleb128 0x19
 4740 076c 02020000 		.4byte	.LASF108
 4741 0770 01       		.byte	0x1
 4742 0771 F602     		.2byte	0x2f6
 4743 0773 7C070000 		.4byte	0x77c
 4744 0777 02       		.uleb128 0x2
 4745 0778 91       		.byte	0x91
 4746 0779 70       		.sleb128 -16
 4747 077a 00       		.byte	0
 4748 077b 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 100


 4749 077c 0E       		.uleb128 0xe
 4750 077d 95000000 		.4byte	0x95
 4751 0781 8C070000 		.4byte	0x78c
 4752 0785 0F       		.uleb128 0xf
 4753 0786 76000000 		.4byte	0x76
 4754 078a 04       		.byte	0x4
 4755 078b 00       		.byte	0
 4756 078c 18       		.uleb128 0x18
 4757 078d D3050000 		.4byte	.LASF109
 4758 0791 01       		.byte	0x1
 4759 0792 2C03     		.2byte	0x32c
 4760 0794 00000000 		.4byte	.LFB98
 4761 0798 68000000 		.4byte	.LFE98-.LFB98
 4762 079c 01       		.uleb128 0x1
 4763 079d 9C       		.byte	0x9c
 4764 079e C9070000 		.4byte	0x7c9
 4765 07a2 21       		.uleb128 0x21
 4766 07a3 7300     		.ascii	"s\000"
 4767 07a5 01       		.byte	0x1
 4768 07a6 2C03     		.2byte	0x32c
 4769 07a8 7D000000 		.4byte	0x7d
 4770 07ac 02       		.uleb128 0x2
 4771 07ad 91       		.byte	0x91
 4772 07ae 6C       		.sleb128 -20
 4773 07af 0C       		.uleb128 0xc
 4774 07b0 10000000 		.4byte	.LBB9
 4775 07b4 48000000 		.4byte	.LBE9-.LBB9
 4776 07b8 1A       		.uleb128 0x1a
 4777 07b9 636E7400 		.ascii	"cnt\000"
 4778 07bd 01       		.byte	0x1
 4779 07be 3303     		.2byte	0x333
 4780 07c0 AD000000 		.4byte	0xad
 4781 07c4 02       		.uleb128 0x2
 4782 07c5 91       		.byte	0x91
 4783 07c6 74       		.sleb128 -12
 4784 07c7 00       		.byte	0
 4785 07c8 00       		.byte	0
 4786 07c9 18       		.uleb128 0x18
 4787 07ca 0E070000 		.4byte	.LASF110
 4788 07ce 01       		.byte	0x1
 4789 07cf 4203     		.2byte	0x342
 4790 07d1 00000000 		.4byte	.LFB99
 4791 07d5 50000000 		.4byte	.LFE99-.LFB99
 4792 07d9 01       		.uleb128 0x1
 4793 07da 9C       		.byte	0x9c
 4794 07db 06080000 		.4byte	0x806
 4795 07df 21       		.uleb128 0x21
 4796 07e0 6300     		.ascii	"c\000"
 4797 07e2 01       		.byte	0x1
 4798 07e3 4203     		.2byte	0x342
 4799 07e5 83000000 		.4byte	0x83
 4800 07e9 02       		.uleb128 0x2
 4801 07ea 91       		.byte	0x91
 4802 07eb 6F       		.sleb128 -17
 4803 07ec 0C       		.uleb128 0xc
 4804 07ed 12000000 		.4byte	.LBB10
 4805 07f1 2E000000 		.4byte	.LBE10-.LBB10
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 101


 4806 07f5 1A       		.uleb128 0x1a
 4807 07f6 636E7400 		.ascii	"cnt\000"
 4808 07fa 01       		.byte	0x1
 4809 07fb 4603     		.2byte	0x346
 4810 07fd AD000000 		.4byte	0xad
 4811 0801 02       		.uleb128 0x2
 4812 0802 91       		.byte	0x91
 4813 0803 74       		.sleb128 -12
 4814 0804 00       		.byte	0
 4815 0805 00       		.byte	0
 4816 0806 1E       		.uleb128 0x1e
 4817 0807 DB020000 		.4byte	.LASF111
 4818 080b 01       		.byte	0x1
 4819 080c 5303     		.2byte	0x353
 4820 080e 00000000 		.4byte	.LFB100
 4821 0812 3A000000 		.4byte	.LFE100-.LFB100
 4822 0816 01       		.uleb128 0x1
 4823 0817 9C       		.byte	0x9c
 4824 0818 2A080000 		.4byte	0x82a
 4825 081c 1A       		.uleb128 0x1a
 4826 081d 6300     		.ascii	"c\000"
 4827 081f 01       		.byte	0x1
 4828 0820 5503     		.2byte	0x355
 4829 0822 95000000 		.4byte	0x95
 4830 0826 02       		.uleb128 0x2
 4831 0827 91       		.byte	0x91
 4832 0828 77       		.sleb128 -9
 4833 0829 00       		.byte	0
 4834 082a 22       		.uleb128 0x22
 4835 082b 7A050000 		.4byte	.LASF112
 4836 082f 06       		.byte	0x6
 4837 0830 9606     		.2byte	0x696
 4838 0832 36080000 		.4byte	0x836
 4839 0836 23       		.uleb128 0x23
 4840 0837 8A000000 		.4byte	0x8a
 4841 083b 24       		.uleb128 0x24
 4842 083c 747300   		.ascii	"ts\000"
 4843 083f 05       		.byte	0x5
 4844 0840 10       		.byte	0x10
 4845 0841 95000000 		.4byte	0x95
 4846 0845 05       		.uleb128 0x5
 4847 0846 03       		.byte	0x3
 4848 0847 00000000 		.4byte	ts
 4849 084b 25       		.uleb128 0x25
 4850 084c 9C060000 		.4byte	.LASF113
 4851 0850 05       		.byte	0x5
 4852 0851 11       		.byte	0x11
 4853 0852 A1000000 		.4byte	0xa1
 4854 0856 05       		.uleb128 0x5
 4855 0857 03       		.byte	0x3
 4856 0858 00000000 		.4byte	ts_enc
 4857 085c 25       		.uleb128 0x25
 4858 085d 93050000 		.4byte	.LASF114
 4859 0861 05       		.byte	0x5
 4860 0862 12       		.byte	0x12
 4861 0863 A1000000 		.4byte	0xa1
 4862 0867 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 102


 4863 0868 03       		.byte	0x3
 4864 0869 00000000 		.4byte	ts_update
 4865 086d 25       		.uleb128 0x25
 4866 086e 74040000 		.4byte	.LASF115
 4867 0872 05       		.byte	0x5
 4868 0873 13       		.byte	0x13
 4869 0874 A1000000 		.4byte	0xa1
 4870 0878 05       		.uleb128 0x5
 4871 0879 03       		.byte	0x3
 4872 087a 00000000 		.4byte	ts_speed
 4873 087e 25       		.uleb128 0x25
 4874 087f 02030000 		.4byte	.LASF116
 4875 0883 05       		.byte	0x5
 4876 0884 14       		.byte	0x14
 4877 0885 A1000000 		.4byte	0xa1
 4878 0889 05       		.uleb128 0x5
 4879 088a 03       		.byte	0x3
 4880 088b 00000000 		.4byte	ts_display
 4881 088f 25       		.uleb128 0x25
 4882 0890 94020000 		.4byte	.LASF117
 4883 0894 05       		.byte	0x5
 4884 0895 16       		.byte	0x16
 4885 0896 95000000 		.4byte	0x95
 4886 089a 05       		.uleb128 0x5
 4887 089b 03       		.byte	0x3
 4888 089c 00000000 		.4byte	flag_ts_enc
 4889 08a0 25       		.uleb128 0x25
 4890 08a1 6D020000 		.4byte	.LASF118
 4891 08a5 05       		.byte	0x5
 4892 08a6 17       		.byte	0x17
 4893 08a7 95000000 		.4byte	0x95
 4894 08ab 05       		.uleb128 0x5
 4895 08ac 03       		.byte	0x3
 4896 08ad 00000000 		.4byte	flag_ts_update
 4897 08b1 25       		.uleb128 0x25
 4898 08b2 FE040000 		.4byte	.LASF119
 4899 08b6 05       		.byte	0x5
 4900 08b7 18       		.byte	0x18
 4901 08b8 95000000 		.4byte	0x95
 4902 08bc 05       		.uleb128 0x5
 4903 08bd 03       		.byte	0x3
 4904 08be 00000000 		.4byte	flag_ts_speed
 4905 08c2 25       		.uleb128 0x25
 4906 08c3 AD060000 		.4byte	.LASF120
 4907 08c7 05       		.byte	0x5
 4908 08c8 19       		.byte	0x19
 4909 08c9 95000000 		.4byte	0x95
 4910 08cd 05       		.uleb128 0x5
 4911 08ce 03       		.byte	0x3
 4912 08cf 00000000 		.4byte	flag_ts_display
 4913 08d3 25       		.uleb128 0x25
 4914 08d4 29050000 		.4byte	.LASF121
 4915 08d8 05       		.byte	0x5
 4916 08d9 1C       		.byte	0x1c
 4917 08da 95000000 		.4byte	0x95
 4918 08de 05       		.uleb128 0x5
 4919 08df 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 103


 4920 08e0 00000000 		.4byte	flag_rx
 4921 08e4 25       		.uleb128 0x25
 4922 08e5 F6010000 		.4byte	.LASF122
 4923 08e9 05       		.byte	0x5
 4924 08ea 1D       		.byte	0x1d
 4925 08eb 95000000 		.4byte	0x95
 4926 08ef 05       		.uleb128 0x5
 4927 08f0 03       		.byte	0x3
 4928 08f1 00000000 		.4byte	flag_packet
 4929 08f5 25       		.uleb128 0x25
 4930 08f6 C6070000 		.4byte	.LASF123
 4931 08fa 05       		.byte	0x5
 4932 08fb 1E       		.byte	0x1e
 4933 08fc 95000000 		.4byte	0x95
 4934 0900 05       		.uleb128 0x5
 4935 0901 03       		.byte	0x3
 4936 0902 00000000 		.4byte	flag_KB_string
 4937 0906 25       		.uleb128 0x25
 4938 0907 0C050000 		.4byte	.LASF124
 4939 090b 05       		.byte	0x5
 4940 090c 20       		.byte	0x20
 4941 090d 95000000 		.4byte	0x95
 4942 0911 05       		.uleb128 0x5
 4943 0912 03       		.byte	0x3
 4944 0913 00000000 		.4byte	dataready_flag
 4945 0917 25       		.uleb128 0x25
 4946 0918 23010000 		.4byte	.LASF125
 4947 091c 05       		.byte	0x5
 4948 091d 22       		.byte	0x22
 4949 091e 95000000 		.4byte	0x95
 4950 0922 05       		.uleb128 0x5
 4951 0923 03       		.byte	0x3
 4952 0924 00000000 		.4byte	flag_rf_transmission_active
 4953 0928 25       		.uleb128 0x25
 4954 0929 3F010000 		.4byte	.LASF126
 4955 092d 05       		.byte	0x5
 4956 092e 23       		.byte	0x23
 4957 092f 95000000 		.4byte	0x95
 4958 0933 05       		.uleb128 0x5
 4959 0934 03       		.byte	0x3
 4960 0935 00000000 		.4byte	flag_print_rf
 4961 0939 25       		.uleb128 0x25
 4962 093a BA040000 		.4byte	.LASF127
 4963 093e 05       		.byte	0x5
 4964 093f 25       		.byte	0x25
 4965 0940 95000000 		.4byte	0x95
 4966 0944 05       		.uleb128 0x5
 4967 0945 03       		.byte	0x3
 4968 0946 00000000 		.4byte	flag_receive_ADC
 4969 094a 25       		.uleb128 0x25
 4970 094b 3B050000 		.4byte	.LASF128
 4971 094f 05       		.byte	0x5
 4972 0950 26       		.byte	0x26
 4973 0951 C5000000 		.4byte	0xc5
 4974 0955 05       		.uleb128 0x5
 4975 0956 03       		.byte	0x3
 4976 0957 00000000 		.4byte	adc_result
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 104


 4977 095b 25       		.uleb128 0x25
 4978 095c 00000000 		.4byte	.LASF129
 4979 0960 05       		.byte	0x5
 4980 0961 28       		.byte	0x28
 4981 0962 95000000 		.4byte	0x95
 4982 0966 05       		.uleb128 0x5
 4983 0967 03       		.byte	0x3
 4984 0968 00000000 		.4byte	direction
 4985 096c 25       		.uleb128 0x25
 4986 096d 46050000 		.4byte	.LASF130
 4987 0971 05       		.byte	0x5
 4988 0972 2C       		.byte	0x2c
 4989 0973 95000000 		.4byte	0x95
 4990 0977 05       		.uleb128 0x5
 4991 0978 03       		.byte	0x3
 4992 0979 00000000 		.4byte	flag_calc_wheelspeed
 4993 097d 25       		.uleb128 0x25
 4994 097e E2000000 		.4byte	.LASF131
 4995 0982 05       		.byte	0x5
 4996 0983 2D       		.byte	0x2d
 4997 0984 C5000000 		.4byte	0xc5
 4998 0988 05       		.uleb128 0x5
 4999 0989 03       		.byte	0x3
 5000 098a 00000000 		.4byte	quad_count1
 5001 098e 25       		.uleb128 0x25
 5002 098f EE000000 		.4byte	.LASF132
 5003 0993 05       		.byte	0x5
 5004 0994 2E       		.byte	0x2e
 5005 0995 C5000000 		.4byte	0xc5
 5006 0999 05       		.uleb128 0x5
 5007 099a 03       		.byte	0x3
 5008 099b 00000000 		.4byte	quad_count2
 5009 099f 25       		.uleb128 0x25
 5010 09a0 EC060000 		.4byte	.LASF133
 5011 09a4 05       		.byte	0x5
 5012 09a5 2F       		.byte	0x2f
 5013 09a6 C5000000 		.4byte	0xc5
 5014 09aa 05       		.uleb128 0x5
 5015 09ab 03       		.byte	0x3
 5016 09ac 00000000 		.4byte	last_quad_count1
 5017 09b0 25       		.uleb128 0x25
 5018 09b1 FD060000 		.4byte	.LASF134
 5019 09b5 05       		.byte	0x5
 5020 09b6 30       		.byte	0x30
 5021 09b7 C5000000 		.4byte	0xc5
 5022 09bb 05       		.uleb128 0x5
 5023 09bc 03       		.byte	0x3
 5024 09bd 00000000 		.4byte	last_quad_count2
 5025 09c1 25       		.uleb128 0x25
 5026 09c2 10000000 		.4byte	.LASF135
 5027 09c6 05       		.byte	0x5
 5028 09c7 31       		.byte	0x31
 5029 09c8 C5000000 		.4byte	0xc5
 5030 09cc 05       		.uleb128 0x5
 5031 09cd 03       		.byte	0x3
 5032 09ce 00000000 		.4byte	quad_diff1
 5033 09d2 25       		.uleb128 0x25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 105


 5034 09d3 1B000000 		.4byte	.LASF136
 5035 09d7 05       		.byte	0x5
 5036 09d8 32       		.byte	0x32
 5037 09d9 C5000000 		.4byte	0xc5
 5038 09dd 05       		.uleb128 0x5
 5039 09de 03       		.byte	0x3
 5040 09df 00000000 		.4byte	quad_diff2
 5041 09e3 25       		.uleb128 0x25
 5042 09e4 44000000 		.4byte	.LASF137
 5043 09e8 05       		.byte	0x5
 5044 09e9 35       		.byte	0x35
 5045 09ea C5000000 		.4byte	0xc5
 5046 09ee 05       		.uleb128 0x5
 5047 09ef 03       		.byte	0x3
 5048 09f0 00000000 		.4byte	start_turn_count
 5049 09f4 25       		.uleb128 0x25
 5050 09f5 EE040000 		.4byte	.LASF138
 5051 09f9 05       		.byte	0x5
 5052 09fa 38       		.byte	0x38
 5053 09fb C5000000 		.4byte	0xc5
 5054 09ff 05       		.uleb128 0x5
 5055 0a00 03       		.byte	0x3
 5056 0a01 00000000 		.4byte	left_duty_cycle
 5057 0a05 25       		.uleb128 0x25
 5058 0a06 7E070000 		.4byte	.LASF139
 5059 0a0a 05       		.byte	0x5
 5060 0a0b 39       		.byte	0x39
 5061 0a0c C5000000 		.4byte	0xc5
 5062 0a10 05       		.uleb128 0x5
 5063 0a11 03       		.byte	0x3
 5064 0a12 00000000 		.4byte	right_duty_cycle
 5065 0a16 25       		.uleb128 0x25
 5066 0a17 A6050000 		.4byte	.LASF140
 5067 0a1b 05       		.byte	0x5
 5068 0a1c 3C       		.byte	0x3c
 5069 0a1d C5000000 		.4byte	0xc5
 5070 0a21 05       		.uleb128 0x5
 5071 0a22 03       		.byte	0x3
 5072 0a23 00000000 		.4byte	leftSpeedLimit
 5073 0a27 25       		.uleb128 0x25
 5074 0a28 31030000 		.4byte	.LASF141
 5075 0a2c 05       		.byte	0x5
 5076 0a2d 3D       		.byte	0x3d
 5077 0a2e C5000000 		.4byte	0xc5
 5078 0a32 05       		.uleb128 0x5
 5079 0a33 03       		.byte	0x3
 5080 0a34 00000000 		.4byte	rightSpeedLimit
 5081 0a38 25       		.uleb128 0x25
 5082 0a39 17060000 		.4byte	.LASF142
 5083 0a3d 05       		.byte	0x5
 5084 0a3e 40       		.byte	0x40
 5085 0a3f C5000000 		.4byte	0xc5
 5086 0a43 05       		.uleb128 0x5
 5087 0a44 03       		.byte	0x3
 5088 0a45 00000000 		.4byte	target_distance_cm
 5089 0a49 25       		.uleb128 0x25
 5090 0a4a C8050000 		.4byte	.LASF143
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 106


 5091 0a4e 05       		.byte	0x5
 5092 0a4f 42       		.byte	0x42
 5093 0a50 C5000000 		.4byte	0xc5
 5094 0a54 05       		.uleb128 0x5
 5095 0a55 03       		.byte	0x3
 5096 0a56 00000000 		.4byte	accum_dist
 5097 0a5a 25       		.uleb128 0x25
 5098 0a5b 9D000000 		.4byte	.LASF144
 5099 0a5f 05       		.byte	0x5
 5100 0a60 43       		.byte	0x43
 5101 0a61 C5000000 		.4byte	0xc5
 5102 0a65 05       		.uleb128 0x5
 5103 0a66 03       		.byte	0x3
 5104 0a67 00000000 		.4byte	target_distance_quad
 5105 0a6b 25       		.uleb128 0x25
 5106 0a6c 0B060000 		.4byte	.LASF145
 5107 0a70 05       		.byte	0x5
 5108 0a71 44       		.byte	0x44
 5109 0a72 D1000000 		.4byte	0xd1
 5110 0a76 05       		.uleb128 0x5
 5111 0a77 03       		.byte	0x3
 5112 0a78 00000000 		.4byte	quad_per_cm
 5113 0a7c 25       		.uleb128 0x25
 5114 0a7d E7070000 		.4byte	.LASF146
 5115 0a81 05       		.byte	0x5
 5116 0a82 47       		.byte	0x47
 5117 0a83 C5000000 		.4byte	0xc5
 5118 0a87 05       		.uleb128 0x5
 5119 0a88 03       		.byte	0x3
 5120 0a89 00000000 		.4byte	initial_x_pos
 5121 0a8d 25       		.uleb128 0x25
 5122 0a8e 1B050000 		.4byte	.LASF147
 5123 0a92 05       		.byte	0x5
 5124 0a93 48       		.byte	0x48
 5125 0a94 C5000000 		.4byte	0xc5
 5126 0a98 05       		.uleb128 0x5
 5127 0a99 03       		.byte	0x3
 5128 0a9a 00000000 		.4byte	initial_y_pos
 5129 0a9e 25       		.uleb128 0x25
 5130 0a9f A3060000 		.4byte	.LASF148
 5131 0aa3 05       		.byte	0x5
 5132 0aa4 4B       		.byte	0x4b
 5133 0aa5 95000000 		.4byte	0x95
 5134 0aa9 05       		.uleb128 0x5
 5135 0aaa 03       		.byte	0x3
 5136 0aab 00000000 		.4byte	brakeFlag
 5137 0aaf 25       		.uleb128 0x25
 5138 0ab0 5A020000 		.4byte	.LASF149
 5139 0ab4 05       		.byte	0x5
 5140 0ab5 4C       		.byte	0x4c
 5141 0ab6 95000000 		.4byte	0x95
 5142 0aba 05       		.uleb128 0x5
 5143 0abb 03       		.byte	0x3
 5144 0abc 00000000 		.4byte	portOpen
 5145 0ac0 25       		.uleb128 0x25
 5146 0ac1 38000000 		.4byte	.LASF150
 5147 0ac5 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 107


 5148 0ac6 4F       		.byte	0x4f
 5149 0ac7 C5000000 		.4byte	0xc5
 5150 0acb 05       		.uleb128 0x5
 5151 0acc 03       		.byte	0x3
 5152 0acd 00000000 		.4byte	prevVoltage
 5153 0ad1 25       		.uleb128 0x25
 5154 0ad2 BB000000 		.4byte	.LASF151
 5155 0ad6 05       		.byte	0x5
 5156 0ad7 50       		.byte	0x50
 5157 0ad8 C5000000 		.4byte	0xc5
 5158 0adc 05       		.uleb128 0x5
 5159 0add 03       		.byte	0x3
 5160 0ade 00000000 		.4byte	prevVoltage2
 5161 0ae2 0E       		.uleb128 0xe
 5162 0ae3 83000000 		.4byte	0x83
 5163 0ae7 F20A0000 		.4byte	0xaf2
 5164 0aeb 0F       		.uleb128 0xf
 5165 0aec 76000000 		.4byte	0x76
 5166 0af0 3F       		.byte	0x3f
 5167 0af1 00       		.byte	0
 5168 0af2 25       		.uleb128 0x25
 5169 0af3 DE060000 		.4byte	.LASF152
 5170 0af7 05       		.byte	0x5
 5171 0af8 56       		.byte	0x56
 5172 0af9 E20A0000 		.4byte	0xae2
 5173 0afd 05       		.uleb128 0x5
 5174 0afe 03       		.byte	0x3
 5175 0aff 00000000 		.4byte	displaystring
 5176 0b03 25       		.uleb128 0x25
 5177 0b04 8A060000 		.4byte	.LASF153
 5178 0b08 05       		.byte	0x5
 5179 0b09 57       		.byte	0x57
 5180 0b0a E20A0000 		.4byte	0xae2
 5181 0b0e 05       		.uleb128 0x5
 5182 0b0f 03       		.byte	0x3
 5183 0b10 00000000 		.4byte	line
 5184 0b14 25       		.uleb128 0x25
 5185 0b15 76060000 		.4byte	.LASF154
 5186 0b19 05       		.byte	0x5
 5187 0b1a 57       		.byte	0x57
 5188 0b1b E20A0000 		.4byte	0xae2
 5189 0b1f 05       		.uleb128 0x5
 5190 0b20 03       		.byte	0x3
 5191 0b21 00000000 		.4byte	entry
 5192 0b25 0E       		.uleb128 0xe
 5193 0b26 95000000 		.4byte	0x95
 5194 0b2a 350B0000 		.4byte	0xb35
 5195 0b2e 0F       		.uleb128 0xf
 5196 0b2f 76000000 		.4byte	0x76
 5197 0b33 3F       		.byte	0x3f
 5198 0b34 00       		.byte	0
 5199 0b35 25       		.uleb128 0x25
 5200 0b36 99010000 		.4byte	.LASF155
 5201 0b3a 05       		.byte	0x5
 5202 0b3b 58       		.byte	0x58
 5203 0b3c 250B0000 		.4byte	0xb25
 5204 0b40 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 108


 5205 0b41 03       		.byte	0x3
 5206 0b42 00000000 		.4byte	usbBuffer
 5207 0b46 25       		.uleb128 0x25
 5208 0b47 A3030000 		.4byte	.LASF156
 5209 0b4b 05       		.byte	0x5
 5210 0b4c 6D       		.byte	0x6d
 5211 0b4d 4E010000 		.4byte	0x14e
 5212 0b51 05       		.uleb128 0x5
 5213 0b52 03       		.byte	0x3
 5214 0b53 00000000 		.4byte	buffer_state
 5215 0b57 25       		.uleb128 0x25
 5216 0b58 7D000000 		.4byte	.LASF157
 5217 0b5c 05       		.byte	0x5
 5218 0b5d 6E       		.byte	0x6e
 5219 0b5e 4E010000 		.4byte	0x14e
 5220 0b62 05       		.uleb128 0x5
 5221 0b63 03       		.byte	0x3
 5222 0b64 00000000 		.4byte	system_state
 5223 0b68 25       		.uleb128 0x25
 5224 0b69 B1020000 		.4byte	.LASF158
 5225 0b6d 05       		.byte	0x5
 5226 0b6e 70       		.byte	0x70
 5227 0b6f E6000000 		.4byte	0xe6
 5228 0b73 05       		.uleb128 0x5
 5229 0b74 03       		.byte	0x3
 5230 0b75 00000000 		.4byte	prev_movement_state
 5231 0b79 25       		.uleb128 0x25
 5232 0b7a 4D010000 		.4byte	.LASF159
 5233 0b7e 05       		.byte	0x5
 5234 0b7f 71       		.byte	0x71
 5235 0b80 E6000000 		.4byte	0xe6
 5236 0b84 05       		.uleb128 0x5
 5237 0b85 03       		.byte	0x3
 5238 0b86 00000000 		.4byte	movement_state
 5239 0b8a 25       		.uleb128 0x25
 5240 0b8b 62000000 		.4byte	.LASF160
 5241 0b8f 05       		.byte	0x5
 5242 0b90 72       		.byte	0x72
 5243 0b91 1D010000 		.4byte	0x11d
 5244 0b95 05       		.uleb128 0x5
 5245 0b96 03       		.byte	0x3
 5246 0b97 00000000 		.4byte	track_mode
 5247 0b9b 25       		.uleb128 0x25
 5248 0b9c A0020000 		.4byte	.LASF161
 5249 0ba0 05       		.byte	0x5
 5250 0ba1 74       		.byte	0x74
 5251 0ba2 95000000 		.4byte	0x95
 5252 0ba6 05       		.uleb128 0x5
 5253 0ba7 03       		.byte	0x3
 5254 0ba8 00000000 		.4byte	byteCount
 5255 0bac 0E       		.uleb128 0xe
 5256 0bad 83000000 		.4byte	0x83
 5257 0bb1 BC0B0000 		.4byte	0xbbc
 5258 0bb5 0F       		.uleb128 0xf
 5259 0bb6 76000000 		.4byte	0x76
 5260 0bba 01       		.byte	0x1
 5261 0bbb 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 109


 5262 0bbc 25       		.uleb128 0x25
 5263 0bbd 59060000 		.4byte	.LASF162
 5264 0bc1 05       		.byte	0x5
 5265 0bc2 75       		.byte	0x75
 5266 0bc3 AC0B0000 		.4byte	0xbac
 5267 0bc7 05       		.uleb128 0x5
 5268 0bc8 03       		.byte	0x3
 5269 0bc9 00000000 		.4byte	packet
 5270 0bcd 25       		.uleb128 0x25
 5271 0bce 10010000 		.4byte	.LASF163
 5272 0bd2 05       		.byte	0x5
 5273 0bd3 78       		.byte	0x78
 5274 0bd4 D8000000 		.4byte	0xd8
 5275 0bd8 05       		.uleb128 0x5
 5276 0bd9 03       		.byte	0x3
 5277 0bda 00000000 		.4byte	speed
 5278 0bde 00       		.byte	0
 5279              		.section	.debug_abbrev,"",%progbits
 5280              	.Ldebug_abbrev0:
 5281 0000 01       		.uleb128 0x1
 5282 0001 11       		.uleb128 0x11
 5283 0002 01       		.byte	0x1
 5284 0003 25       		.uleb128 0x25
 5285 0004 0E       		.uleb128 0xe
 5286 0005 13       		.uleb128 0x13
 5287 0006 0B       		.uleb128 0xb
 5288 0007 03       		.uleb128 0x3
 5289 0008 0E       		.uleb128 0xe
 5290 0009 1B       		.uleb128 0x1b
 5291 000a 0E       		.uleb128 0xe
 5292 000b 55       		.uleb128 0x55
 5293 000c 17       		.uleb128 0x17
 5294 000d 11       		.uleb128 0x11
 5295 000e 01       		.uleb128 0x1
 5296 000f 10       		.uleb128 0x10
 5297 0010 17       		.uleb128 0x17
 5298 0011 00       		.byte	0
 5299 0012 00       		.byte	0
 5300 0013 02       		.uleb128 0x2
 5301 0014 24       		.uleb128 0x24
 5302 0015 00       		.byte	0
 5303 0016 0B       		.uleb128 0xb
 5304 0017 0B       		.uleb128 0xb
 5305 0018 3E       		.uleb128 0x3e
 5306 0019 0B       		.uleb128 0xb
 5307 001a 03       		.uleb128 0x3
 5308 001b 0E       		.uleb128 0xe
 5309 001c 00       		.byte	0
 5310 001d 00       		.byte	0
 5311 001e 03       		.uleb128 0x3
 5312 001f 16       		.uleb128 0x16
 5313 0020 00       		.byte	0
 5314 0021 03       		.uleb128 0x3
 5315 0022 0E       		.uleb128 0xe
 5316 0023 3A       		.uleb128 0x3a
 5317 0024 0B       		.uleb128 0xb
 5318 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 110


 5319 0026 0B       		.uleb128 0xb
 5320 0027 49       		.uleb128 0x49
 5321 0028 13       		.uleb128 0x13
 5322 0029 00       		.byte	0
 5323 002a 00       		.byte	0
 5324 002b 04       		.uleb128 0x4
 5325 002c 24       		.uleb128 0x24
 5326 002d 00       		.byte	0
 5327 002e 0B       		.uleb128 0xb
 5328 002f 0B       		.uleb128 0xb
 5329 0030 3E       		.uleb128 0x3e
 5330 0031 0B       		.uleb128 0xb
 5331 0032 03       		.uleb128 0x3
 5332 0033 08       		.uleb128 0x8
 5333 0034 00       		.byte	0
 5334 0035 00       		.byte	0
 5335 0036 05       		.uleb128 0x5
 5336 0037 0F       		.uleb128 0xf
 5337 0038 00       		.byte	0
 5338 0039 0B       		.uleb128 0xb
 5339 003a 0B       		.uleb128 0xb
 5340 003b 49       		.uleb128 0x49
 5341 003c 13       		.uleb128 0x13
 5342 003d 00       		.byte	0
 5343 003e 00       		.byte	0
 5344 003f 06       		.uleb128 0x6
 5345 0040 16       		.uleb128 0x16
 5346 0041 00       		.byte	0
 5347 0042 03       		.uleb128 0x3
 5348 0043 0E       		.uleb128 0xe
 5349 0044 3A       		.uleb128 0x3a
 5350 0045 0B       		.uleb128 0xb
 5351 0046 3B       		.uleb128 0x3b
 5352 0047 05       		.uleb128 0x5
 5353 0048 49       		.uleb128 0x49
 5354 0049 13       		.uleb128 0x13
 5355 004a 00       		.byte	0
 5356 004b 00       		.byte	0
 5357 004c 07       		.uleb128 0x7
 5358 004d 04       		.uleb128 0x4
 5359 004e 01       		.byte	0x1
 5360 004f 03       		.uleb128 0x3
 5361 0050 0E       		.uleb128 0xe
 5362 0051 0B       		.uleb128 0xb
 5363 0052 0B       		.uleb128 0xb
 5364 0053 3A       		.uleb128 0x3a
 5365 0054 0B       		.uleb128 0xb
 5366 0055 3B       		.uleb128 0x3b
 5367 0056 0B       		.uleb128 0xb
 5368 0057 01       		.uleb128 0x1
 5369 0058 13       		.uleb128 0x13
 5370 0059 00       		.byte	0
 5371 005a 00       		.byte	0
 5372 005b 08       		.uleb128 0x8
 5373 005c 28       		.uleb128 0x28
 5374 005d 00       		.byte	0
 5375 005e 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 111


 5376 005f 0E       		.uleb128 0xe
 5377 0060 1C       		.uleb128 0x1c
 5378 0061 0D       		.uleb128 0xd
 5379 0062 00       		.byte	0
 5380 0063 00       		.byte	0
 5381 0064 09       		.uleb128 0x9
 5382 0065 13       		.uleb128 0x13
 5383 0066 01       		.byte	0x1
 5384 0067 03       		.uleb128 0x3
 5385 0068 0E       		.uleb128 0xe
 5386 0069 0B       		.uleb128 0xb
 5387 006a 0B       		.uleb128 0xb
 5388 006b 3A       		.uleb128 0x3a
 5389 006c 0B       		.uleb128 0xb
 5390 006d 3B       		.uleb128 0x3b
 5391 006e 0B       		.uleb128 0xb
 5392 006f 01       		.uleb128 0x1
 5393 0070 13       		.uleb128 0x13
 5394 0071 00       		.byte	0
 5395 0072 00       		.byte	0
 5396 0073 0A       		.uleb128 0xa
 5397 0074 0D       		.uleb128 0xd
 5398 0075 00       		.byte	0
 5399 0076 03       		.uleb128 0x3
 5400 0077 0E       		.uleb128 0xe
 5401 0078 3A       		.uleb128 0x3a
 5402 0079 0B       		.uleb128 0xb
 5403 007a 3B       		.uleb128 0x3b
 5404 007b 0B       		.uleb128 0xb
 5405 007c 49       		.uleb128 0x49
 5406 007d 13       		.uleb128 0x13
 5407 007e 38       		.uleb128 0x38
 5408 007f 0B       		.uleb128 0xb
 5409 0080 00       		.byte	0
 5410 0081 00       		.byte	0
 5411 0082 0B       		.uleb128 0xb
 5412 0083 2E       		.uleb128 0x2e
 5413 0084 01       		.byte	0x1
 5414 0085 3F       		.uleb128 0x3f
 5415 0086 19       		.uleb128 0x19
 5416 0087 03       		.uleb128 0x3
 5417 0088 0E       		.uleb128 0xe
 5418 0089 3A       		.uleb128 0x3a
 5419 008a 0B       		.uleb128 0xb
 5420 008b 3B       		.uleb128 0x3b
 5421 008c 0B       		.uleb128 0xb
 5422 008d 11       		.uleb128 0x11
 5423 008e 01       		.uleb128 0x1
 5424 008f 12       		.uleb128 0x12
 5425 0090 06       		.uleb128 0x6
 5426 0091 40       		.uleb128 0x40
 5427 0092 18       		.uleb128 0x18
 5428 0093 9742     		.uleb128 0x2117
 5429 0095 19       		.uleb128 0x19
 5430 0096 01       		.uleb128 0x1
 5431 0097 13       		.uleb128 0x13
 5432 0098 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 112


 5433 0099 00       		.byte	0
 5434 009a 0C       		.uleb128 0xc
 5435 009b 0B       		.uleb128 0xb
 5436 009c 01       		.byte	0x1
 5437 009d 11       		.uleb128 0x11
 5438 009e 01       		.uleb128 0x1
 5439 009f 12       		.uleb128 0x12
 5440 00a0 06       		.uleb128 0x6
 5441 00a1 00       		.byte	0
 5442 00a2 00       		.byte	0
 5443 00a3 0D       		.uleb128 0xd
 5444 00a4 34       		.uleb128 0x34
 5445 00a5 00       		.byte	0
 5446 00a6 03       		.uleb128 0x3
 5447 00a7 0E       		.uleb128 0xe
 5448 00a8 3A       		.uleb128 0x3a
 5449 00a9 0B       		.uleb128 0xb
 5450 00aa 3B       		.uleb128 0x3b
 5451 00ab 0B       		.uleb128 0xb
 5452 00ac 49       		.uleb128 0x49
 5453 00ad 13       		.uleb128 0x13
 5454 00ae 02       		.uleb128 0x2
 5455 00af 18       		.uleb128 0x18
 5456 00b0 00       		.byte	0
 5457 00b1 00       		.byte	0
 5458 00b2 0E       		.uleb128 0xe
 5459 00b3 01       		.uleb128 0x1
 5460 00b4 01       		.byte	0x1
 5461 00b5 49       		.uleb128 0x49
 5462 00b6 13       		.uleb128 0x13
 5463 00b7 01       		.uleb128 0x1
 5464 00b8 13       		.uleb128 0x13
 5465 00b9 00       		.byte	0
 5466 00ba 00       		.byte	0
 5467 00bb 0F       		.uleb128 0xf
 5468 00bc 21       		.uleb128 0x21
 5469 00bd 00       		.byte	0
 5470 00be 49       		.uleb128 0x49
 5471 00bf 13       		.uleb128 0x13
 5472 00c0 2F       		.uleb128 0x2f
 5473 00c1 0B       		.uleb128 0xb
 5474 00c2 00       		.byte	0
 5475 00c3 00       		.byte	0
 5476 00c4 10       		.uleb128 0x10
 5477 00c5 2E       		.uleb128 0x2e
 5478 00c6 01       		.byte	0x1
 5479 00c7 3F       		.uleb128 0x3f
 5480 00c8 19       		.uleb128 0x19
 5481 00c9 03       		.uleb128 0x3
 5482 00ca 0E       		.uleb128 0xe
 5483 00cb 3A       		.uleb128 0x3a
 5484 00cc 0B       		.uleb128 0xb
 5485 00cd 3B       		.uleb128 0x3b
 5486 00ce 0B       		.uleb128 0xb
 5487 00cf 27       		.uleb128 0x27
 5488 00d0 19       		.uleb128 0x19
 5489 00d1 11       		.uleb128 0x11
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 113


 5490 00d2 01       		.uleb128 0x1
 5491 00d3 12       		.uleb128 0x12
 5492 00d4 06       		.uleb128 0x6
 5493 00d5 40       		.uleb128 0x40
 5494 00d6 18       		.uleb128 0x18
 5495 00d7 9642     		.uleb128 0x2116
 5496 00d9 19       		.uleb128 0x19
 5497 00da 01       		.uleb128 0x1
 5498 00db 13       		.uleb128 0x13
 5499 00dc 00       		.byte	0
 5500 00dd 00       		.byte	0
 5501 00de 11       		.uleb128 0x11
 5502 00df 05       		.uleb128 0x5
 5503 00e0 00       		.byte	0
 5504 00e1 03       		.uleb128 0x3
 5505 00e2 08       		.uleb128 0x8
 5506 00e3 3A       		.uleb128 0x3a
 5507 00e4 0B       		.uleb128 0xb
 5508 00e5 3B       		.uleb128 0x3b
 5509 00e6 0B       		.uleb128 0xb
 5510 00e7 49       		.uleb128 0x49
 5511 00e8 13       		.uleb128 0x13
 5512 00e9 02       		.uleb128 0x2
 5513 00ea 18       		.uleb128 0x18
 5514 00eb 00       		.byte	0
 5515 00ec 00       		.byte	0
 5516 00ed 12       		.uleb128 0x12
 5517 00ee 2E       		.uleb128 0x2e
 5518 00ef 01       		.byte	0x1
 5519 00f0 3F       		.uleb128 0x3f
 5520 00f1 19       		.uleb128 0x19
 5521 00f2 03       		.uleb128 0x3
 5522 00f3 0E       		.uleb128 0xe
 5523 00f4 3A       		.uleb128 0x3a
 5524 00f5 0B       		.uleb128 0xb
 5525 00f6 3B       		.uleb128 0x3b
 5526 00f7 0B       		.uleb128 0xb
 5527 00f8 11       		.uleb128 0x11
 5528 00f9 01       		.uleb128 0x1
 5529 00fa 12       		.uleb128 0x12
 5530 00fb 06       		.uleb128 0x6
 5531 00fc 40       		.uleb128 0x40
 5532 00fd 18       		.uleb128 0x18
 5533 00fe 9642     		.uleb128 0x2116
 5534 0100 19       		.uleb128 0x19
 5535 0101 01       		.uleb128 0x1
 5536 0102 13       		.uleb128 0x13
 5537 0103 00       		.byte	0
 5538 0104 00       		.byte	0
 5539 0105 13       		.uleb128 0x13
 5540 0106 34       		.uleb128 0x34
 5541 0107 00       		.byte	0
 5542 0108 03       		.uleb128 0x3
 5543 0109 08       		.uleb128 0x8
 5544 010a 3A       		.uleb128 0x3a
 5545 010b 0B       		.uleb128 0xb
 5546 010c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 114


 5547 010d 0B       		.uleb128 0xb
 5548 010e 49       		.uleb128 0x49
 5549 010f 13       		.uleb128 0x13
 5550 0110 02       		.uleb128 0x2
 5551 0111 18       		.uleb128 0x18
 5552 0112 00       		.byte	0
 5553 0113 00       		.byte	0
 5554 0114 14       		.uleb128 0x14
 5555 0115 05       		.uleb128 0x5
 5556 0116 00       		.byte	0
 5557 0117 03       		.uleb128 0x3
 5558 0118 0E       		.uleb128 0xe
 5559 0119 3A       		.uleb128 0x3a
 5560 011a 0B       		.uleb128 0xb
 5561 011b 3B       		.uleb128 0x3b
 5562 011c 0B       		.uleb128 0xb
 5563 011d 49       		.uleb128 0x49
 5564 011e 13       		.uleb128 0x13
 5565 011f 02       		.uleb128 0x2
 5566 0120 18       		.uleb128 0x18
 5567 0121 00       		.byte	0
 5568 0122 00       		.byte	0
 5569 0123 15       		.uleb128 0x15
 5570 0124 2E       		.uleb128 0x2e
 5571 0125 00       		.byte	0
 5572 0126 3F       		.uleb128 0x3f
 5573 0127 19       		.uleb128 0x19
 5574 0128 03       		.uleb128 0x3
 5575 0129 0E       		.uleb128 0xe
 5576 012a 3A       		.uleb128 0x3a
 5577 012b 0B       		.uleb128 0xb
 5578 012c 3B       		.uleb128 0x3b
 5579 012d 0B       		.uleb128 0xb
 5580 012e 11       		.uleb128 0x11
 5581 012f 01       		.uleb128 0x1
 5582 0130 12       		.uleb128 0x12
 5583 0131 06       		.uleb128 0x6
 5584 0132 40       		.uleb128 0x40
 5585 0133 18       		.uleb128 0x18
 5586 0134 9642     		.uleb128 0x2116
 5587 0136 19       		.uleb128 0x19
 5588 0137 00       		.byte	0
 5589 0138 00       		.byte	0
 5590 0139 16       		.uleb128 0x16
 5591 013a 2E       		.uleb128 0x2e
 5592 013b 00       		.byte	0
 5593 013c 3F       		.uleb128 0x3f
 5594 013d 19       		.uleb128 0x19
 5595 013e 03       		.uleb128 0x3
 5596 013f 0E       		.uleb128 0xe
 5597 0140 3A       		.uleb128 0x3a
 5598 0141 0B       		.uleb128 0xb
 5599 0142 3B       		.uleb128 0x3b
 5600 0143 05       		.uleb128 0x5
 5601 0144 11       		.uleb128 0x11
 5602 0145 01       		.uleb128 0x1
 5603 0146 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 115


 5604 0147 06       		.uleb128 0x6
 5605 0148 40       		.uleb128 0x40
 5606 0149 18       		.uleb128 0x18
 5607 014a 9642     		.uleb128 0x2116
 5608 014c 19       		.uleb128 0x19
 5609 014d 00       		.byte	0
 5610 014e 00       		.byte	0
 5611 014f 17       		.uleb128 0x17
 5612 0150 2E       		.uleb128 0x2e
 5613 0151 00       		.byte	0
 5614 0152 3F       		.uleb128 0x3f
 5615 0153 19       		.uleb128 0x19
 5616 0154 03       		.uleb128 0x3
 5617 0155 0E       		.uleb128 0xe
 5618 0156 3A       		.uleb128 0x3a
 5619 0157 0B       		.uleb128 0xb
 5620 0158 3B       		.uleb128 0x3b
 5621 0159 05       		.uleb128 0x5
 5622 015a 11       		.uleb128 0x11
 5623 015b 01       		.uleb128 0x1
 5624 015c 12       		.uleb128 0x12
 5625 015d 06       		.uleb128 0x6
 5626 015e 40       		.uleb128 0x40
 5627 015f 18       		.uleb128 0x18
 5628 0160 9742     		.uleb128 0x2117
 5629 0162 19       		.uleb128 0x19
 5630 0163 00       		.byte	0
 5631 0164 00       		.byte	0
 5632 0165 18       		.uleb128 0x18
 5633 0166 2E       		.uleb128 0x2e
 5634 0167 01       		.byte	0x1
 5635 0168 3F       		.uleb128 0x3f
 5636 0169 19       		.uleb128 0x19
 5637 016a 03       		.uleb128 0x3
 5638 016b 0E       		.uleb128 0xe
 5639 016c 3A       		.uleb128 0x3a
 5640 016d 0B       		.uleb128 0xb
 5641 016e 3B       		.uleb128 0x3b
 5642 016f 05       		.uleb128 0x5
 5643 0170 27       		.uleb128 0x27
 5644 0171 19       		.uleb128 0x19
 5645 0172 11       		.uleb128 0x11
 5646 0173 01       		.uleb128 0x1
 5647 0174 12       		.uleb128 0x12
 5648 0175 06       		.uleb128 0x6
 5649 0176 40       		.uleb128 0x40
 5650 0177 18       		.uleb128 0x18
 5651 0178 9642     		.uleb128 0x2116
 5652 017a 19       		.uleb128 0x19
 5653 017b 01       		.uleb128 0x1
 5654 017c 13       		.uleb128 0x13
 5655 017d 00       		.byte	0
 5656 017e 00       		.byte	0
 5657 017f 19       		.uleb128 0x19
 5658 0180 34       		.uleb128 0x34
 5659 0181 00       		.byte	0
 5660 0182 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 116


 5661 0183 0E       		.uleb128 0xe
 5662 0184 3A       		.uleb128 0x3a
 5663 0185 0B       		.uleb128 0xb
 5664 0186 3B       		.uleb128 0x3b
 5665 0187 05       		.uleb128 0x5
 5666 0188 49       		.uleb128 0x49
 5667 0189 13       		.uleb128 0x13
 5668 018a 02       		.uleb128 0x2
 5669 018b 18       		.uleb128 0x18
 5670 018c 00       		.byte	0
 5671 018d 00       		.byte	0
 5672 018e 1A       		.uleb128 0x1a
 5673 018f 34       		.uleb128 0x34
 5674 0190 00       		.byte	0
 5675 0191 03       		.uleb128 0x3
 5676 0192 08       		.uleb128 0x8
 5677 0193 3A       		.uleb128 0x3a
 5678 0194 0B       		.uleb128 0xb
 5679 0195 3B       		.uleb128 0x3b
 5680 0196 05       		.uleb128 0x5
 5681 0197 49       		.uleb128 0x49
 5682 0198 13       		.uleb128 0x13
 5683 0199 02       		.uleb128 0x2
 5684 019a 18       		.uleb128 0x18
 5685 019b 00       		.byte	0
 5686 019c 00       		.byte	0
 5687 019d 1B       		.uleb128 0x1b
 5688 019e 2E       		.uleb128 0x2e
 5689 019f 00       		.byte	0
 5690 01a0 3F       		.uleb128 0x3f
 5691 01a1 19       		.uleb128 0x19
 5692 01a2 03       		.uleb128 0x3
 5693 01a3 0E       		.uleb128 0xe
 5694 01a4 3A       		.uleb128 0x3a
 5695 01a5 0B       		.uleb128 0xb
 5696 01a6 3B       		.uleb128 0x3b
 5697 01a7 05       		.uleb128 0x5
 5698 01a8 27       		.uleb128 0x27
 5699 01a9 19       		.uleb128 0x19
 5700 01aa 11       		.uleb128 0x11
 5701 01ab 01       		.uleb128 0x1
 5702 01ac 12       		.uleb128 0x12
 5703 01ad 06       		.uleb128 0x6
 5704 01ae 40       		.uleb128 0x40
 5705 01af 18       		.uleb128 0x18
 5706 01b0 9742     		.uleb128 0x2117
 5707 01b2 19       		.uleb128 0x19
 5708 01b3 00       		.byte	0
 5709 01b4 00       		.byte	0
 5710 01b5 1C       		.uleb128 0x1c
 5711 01b6 2E       		.uleb128 0x2e
 5712 01b7 00       		.byte	0
 5713 01b8 3F       		.uleb128 0x3f
 5714 01b9 19       		.uleb128 0x19
 5715 01ba 03       		.uleb128 0x3
 5716 01bb 0E       		.uleb128 0xe
 5717 01bc 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 117


 5718 01bd 0B       		.uleb128 0xb
 5719 01be 3B       		.uleb128 0x3b
 5720 01bf 05       		.uleb128 0x5
 5721 01c0 27       		.uleb128 0x27
 5722 01c1 19       		.uleb128 0x19
 5723 01c2 11       		.uleb128 0x11
 5724 01c3 01       		.uleb128 0x1
 5725 01c4 12       		.uleb128 0x12
 5726 01c5 06       		.uleb128 0x6
 5727 01c6 40       		.uleb128 0x40
 5728 01c7 18       		.uleb128 0x18
 5729 01c8 9642     		.uleb128 0x2116
 5730 01ca 19       		.uleb128 0x19
 5731 01cb 00       		.byte	0
 5732 01cc 00       		.byte	0
 5733 01cd 1D       		.uleb128 0x1d
 5734 01ce 0B       		.uleb128 0xb
 5735 01cf 01       		.byte	0x1
 5736 01d0 11       		.uleb128 0x11
 5737 01d1 01       		.uleb128 0x1
 5738 01d2 12       		.uleb128 0x12
 5739 01d3 06       		.uleb128 0x6
 5740 01d4 01       		.uleb128 0x1
 5741 01d5 13       		.uleb128 0x13
 5742 01d6 00       		.byte	0
 5743 01d7 00       		.byte	0
 5744 01d8 1E       		.uleb128 0x1e
 5745 01d9 2E       		.uleb128 0x2e
 5746 01da 01       		.byte	0x1
 5747 01db 3F       		.uleb128 0x3f
 5748 01dc 19       		.uleb128 0x19
 5749 01dd 03       		.uleb128 0x3
 5750 01de 0E       		.uleb128 0xe
 5751 01df 3A       		.uleb128 0x3a
 5752 01e0 0B       		.uleb128 0xb
 5753 01e1 3B       		.uleb128 0x3b
 5754 01e2 05       		.uleb128 0x5
 5755 01e3 11       		.uleb128 0x11
 5756 01e4 01       		.uleb128 0x1
 5757 01e5 12       		.uleb128 0x12
 5758 01e6 06       		.uleb128 0x6
 5759 01e7 40       		.uleb128 0x40
 5760 01e8 18       		.uleb128 0x18
 5761 01e9 9642     		.uleb128 0x2116
 5762 01eb 19       		.uleb128 0x19
 5763 01ec 01       		.uleb128 0x1
 5764 01ed 13       		.uleb128 0x13
 5765 01ee 00       		.byte	0
 5766 01ef 00       		.byte	0
 5767 01f0 1F       		.uleb128 0x1f
 5768 01f1 05       		.uleb128 0x5
 5769 01f2 00       		.byte	0
 5770 01f3 03       		.uleb128 0x3
 5771 01f4 0E       		.uleb128 0xe
 5772 01f5 3A       		.uleb128 0x3a
 5773 01f6 0B       		.uleb128 0xb
 5774 01f7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 118


 5775 01f8 05       		.uleb128 0x5
 5776 01f9 49       		.uleb128 0x49
 5777 01fa 13       		.uleb128 0x13
 5778 01fb 02       		.uleb128 0x2
 5779 01fc 18       		.uleb128 0x18
 5780 01fd 00       		.byte	0
 5781 01fe 00       		.byte	0
 5782 01ff 20       		.uleb128 0x20
 5783 0200 2E       		.uleb128 0x2e
 5784 0201 01       		.byte	0x1
 5785 0202 3F       		.uleb128 0x3f
 5786 0203 19       		.uleb128 0x19
 5787 0204 03       		.uleb128 0x3
 5788 0205 0E       		.uleb128 0xe
 5789 0206 3A       		.uleb128 0x3a
 5790 0207 0B       		.uleb128 0xb
 5791 0208 3B       		.uleb128 0x3b
 5792 0209 05       		.uleb128 0x5
 5793 020a 49       		.uleb128 0x49
 5794 020b 13       		.uleb128 0x13
 5795 020c 11       		.uleb128 0x11
 5796 020d 01       		.uleb128 0x1
 5797 020e 12       		.uleb128 0x12
 5798 020f 06       		.uleb128 0x6
 5799 0210 40       		.uleb128 0x40
 5800 0211 18       		.uleb128 0x18
 5801 0212 9642     		.uleb128 0x2116
 5802 0214 19       		.uleb128 0x19
 5803 0215 01       		.uleb128 0x1
 5804 0216 13       		.uleb128 0x13
 5805 0217 00       		.byte	0
 5806 0218 00       		.byte	0
 5807 0219 21       		.uleb128 0x21
 5808 021a 05       		.uleb128 0x5
 5809 021b 00       		.byte	0
 5810 021c 03       		.uleb128 0x3
 5811 021d 08       		.uleb128 0x8
 5812 021e 3A       		.uleb128 0x3a
 5813 021f 0B       		.uleb128 0xb
 5814 0220 3B       		.uleb128 0x3b
 5815 0221 05       		.uleb128 0x5
 5816 0222 49       		.uleb128 0x49
 5817 0223 13       		.uleb128 0x13
 5818 0224 02       		.uleb128 0x2
 5819 0225 18       		.uleb128 0x18
 5820 0226 00       		.byte	0
 5821 0227 00       		.byte	0
 5822 0228 22       		.uleb128 0x22
 5823 0229 34       		.uleb128 0x34
 5824 022a 00       		.byte	0
 5825 022b 03       		.uleb128 0x3
 5826 022c 0E       		.uleb128 0xe
 5827 022d 3A       		.uleb128 0x3a
 5828 022e 0B       		.uleb128 0xb
 5829 022f 3B       		.uleb128 0x3b
 5830 0230 05       		.uleb128 0x5
 5831 0231 49       		.uleb128 0x49
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 119


 5832 0232 13       		.uleb128 0x13
 5833 0233 3F       		.uleb128 0x3f
 5834 0234 19       		.uleb128 0x19
 5835 0235 3C       		.uleb128 0x3c
 5836 0236 19       		.uleb128 0x19
 5837 0237 00       		.byte	0
 5838 0238 00       		.byte	0
 5839 0239 23       		.uleb128 0x23
 5840 023a 35       		.uleb128 0x35
 5841 023b 00       		.byte	0
 5842 023c 49       		.uleb128 0x49
 5843 023d 13       		.uleb128 0x13
 5844 023e 00       		.byte	0
 5845 023f 00       		.byte	0
 5846 0240 24       		.uleb128 0x24
 5847 0241 34       		.uleb128 0x34
 5848 0242 00       		.byte	0
 5849 0243 03       		.uleb128 0x3
 5850 0244 08       		.uleb128 0x8
 5851 0245 3A       		.uleb128 0x3a
 5852 0246 0B       		.uleb128 0xb
 5853 0247 3B       		.uleb128 0x3b
 5854 0248 0B       		.uleb128 0xb
 5855 0249 49       		.uleb128 0x49
 5856 024a 13       		.uleb128 0x13
 5857 024b 3F       		.uleb128 0x3f
 5858 024c 19       		.uleb128 0x19
 5859 024d 02       		.uleb128 0x2
 5860 024e 18       		.uleb128 0x18
 5861 024f 00       		.byte	0
 5862 0250 00       		.byte	0
 5863 0251 25       		.uleb128 0x25
 5864 0252 34       		.uleb128 0x34
 5865 0253 00       		.byte	0
 5866 0254 03       		.uleb128 0x3
 5867 0255 0E       		.uleb128 0xe
 5868 0256 3A       		.uleb128 0x3a
 5869 0257 0B       		.uleb128 0xb
 5870 0258 3B       		.uleb128 0x3b
 5871 0259 0B       		.uleb128 0xb
 5872 025a 49       		.uleb128 0x49
 5873 025b 13       		.uleb128 0x13
 5874 025c 3F       		.uleb128 0x3f
 5875 025d 19       		.uleb128 0x19
 5876 025e 02       		.uleb128 0x2
 5877 025f 18       		.uleb128 0x18
 5878 0260 00       		.byte	0
 5879 0261 00       		.byte	0
 5880 0262 00       		.byte	0
 5881              		.section	.debug_aranges,"",%progbits
 5882 0000 44010000 		.4byte	0x144
 5883 0004 0200     		.2byte	0x2
 5884 0006 00000000 		.4byte	.Ldebug_info0
 5885 000a 04       		.byte	0x4
 5886 000b 00       		.byte	0
 5887 000c 0000     		.2byte	0
 5888 000e 0000     		.2byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 120


 5889 0010 00000000 		.4byte	.LFB63
 5890 0014 60010000 		.4byte	.LFE63-.LFB63
 5891 0018 00000000 		.4byte	.LFB64
 5892 001c 18000000 		.4byte	.LFE64-.LFB64
 5893 0020 00000000 		.4byte	.LFB65
 5894 0024 18000000 		.4byte	.LFE65-.LFB65
 5895 0028 00000000 		.4byte	.LFB66
 5896 002c 54000000 		.4byte	.LFE66-.LFB66
 5897 0030 00000000 		.4byte	.LFB67
 5898 0034 F4000000 		.4byte	.LFE67-.LFB67
 5899 0038 00000000 		.4byte	.LFB68
 5900 003c 18000000 		.4byte	.LFE68-.LFB68
 5901 0040 00000000 		.4byte	.LFB69
 5902 0044 18000000 		.4byte	.LFE69-.LFB69
 5903 0048 00000000 		.4byte	.LFB70
 5904 004c 22000000 		.4byte	.LFE70-.LFB70
 5905 0050 00000000 		.4byte	.LFB71
 5906 0054 1C000000 		.4byte	.LFE71-.LFB71
 5907 0058 00000000 		.4byte	.LFB72
 5908 005c 28000000 		.4byte	.LFE72-.LFB72
 5909 0060 00000000 		.4byte	.LFB73
 5910 0064 2C000000 		.4byte	.LFE73-.LFB73
 5911 0068 00000000 		.4byte	.LFB74
 5912 006c 38000000 		.4byte	.LFE74-.LFB74
 5913 0070 00000000 		.4byte	.LFB75
 5914 0074 38000000 		.4byte	.LFE75-.LFB75
 5915 0078 00000000 		.4byte	.LFB76
 5916 007c 14000000 		.4byte	.LFE76-.LFB76
 5917 0080 00000000 		.4byte	.LFB77
 5918 0084 18000000 		.4byte	.LFE77-.LFB77
 5919 0088 00000000 		.4byte	.LFB78
 5920 008c 18000000 		.4byte	.LFE78-.LFB78
 5921 0090 00000000 		.4byte	.LFB79
 5922 0094 18000000 		.4byte	.LFE79-.LFB79
 5923 0098 00000000 		.4byte	.LFB80
 5924 009c 18000000 		.4byte	.LFE80-.LFB80
 5925 00a0 00000000 		.4byte	.LFB81
 5926 00a4 98000000 		.4byte	.LFE81-.LFB81
 5927 00a8 00000000 		.4byte	.LFB82
 5928 00ac 84010000 		.4byte	.LFE82-.LFB82
 5929 00b0 00000000 		.4byte	.LFB83
 5930 00b4 0C000000 		.4byte	.LFE83-.LFB83
 5931 00b8 00000000 		.4byte	.LFB84
 5932 00bc 2C000000 		.4byte	.LFE84-.LFB84
 5933 00c0 00000000 		.4byte	.LFB85
 5934 00c4 F0010000 		.4byte	.LFE85-.LFB85
 5935 00c8 00000000 		.4byte	.LFB86
 5936 00cc 78000000 		.4byte	.LFE86-.LFB86
 5937 00d0 00000000 		.4byte	.LFB87
 5938 00d4 20000000 		.4byte	.LFE87-.LFB87
 5939 00d8 00000000 		.4byte	.LFB88
 5940 00dc 1C000000 		.4byte	.LFE88-.LFB88
 5941 00e0 00000000 		.4byte	.LFB89
 5942 00e4 0A000000 		.4byte	.LFE89-.LFB89
 5943 00e8 00000000 		.4byte	.LFB90
 5944 00ec 30020000 		.4byte	.LFE90-.LFB90
 5945 00f0 00000000 		.4byte	.LFB91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 121


 5946 00f4 50010000 		.4byte	.LFE91-.LFB91
 5947 00f8 00000000 		.4byte	.LFB92
 5948 00fc 50010000 		.4byte	.LFE92-.LFB92
 5949 0100 00000000 		.4byte	.LFB93
 5950 0104 B0010000 		.4byte	.LFE93-.LFB93
 5951 0108 00000000 		.4byte	.LFB94
 5952 010c C0000000 		.4byte	.LFE94-.LFB94
 5953 0110 00000000 		.4byte	.LFB95
 5954 0114 B8000000 		.4byte	.LFE95-.LFB95
 5955 0118 00000000 		.4byte	.LFB96
 5956 011c 4A000000 		.4byte	.LFE96-.LFB96
 5957 0120 00000000 		.4byte	.LFB97
 5958 0124 2C010000 		.4byte	.LFE97-.LFB97
 5959 0128 00000000 		.4byte	.LFB98
 5960 012c 68000000 		.4byte	.LFE98-.LFB98
 5961 0130 00000000 		.4byte	.LFB99
 5962 0134 50000000 		.4byte	.LFE99-.LFB99
 5963 0138 00000000 		.4byte	.LFB100
 5964 013c 3A000000 		.4byte	.LFE100-.LFB100
 5965 0140 00000000 		.4byte	0
 5966 0144 00000000 		.4byte	0
 5967              		.section	.debug_ranges,"",%progbits
 5968              	.Ldebug_ranges0:
 5969 0000 00000000 		.4byte	.LFB63
 5970 0004 60010000 		.4byte	.LFE63
 5971 0008 00000000 		.4byte	.LFB64
 5972 000c 18000000 		.4byte	.LFE64
 5973 0010 00000000 		.4byte	.LFB65
 5974 0014 18000000 		.4byte	.LFE65
 5975 0018 00000000 		.4byte	.LFB66
 5976 001c 54000000 		.4byte	.LFE66
 5977 0020 00000000 		.4byte	.LFB67
 5978 0024 F4000000 		.4byte	.LFE67
 5979 0028 00000000 		.4byte	.LFB68
 5980 002c 18000000 		.4byte	.LFE68
 5981 0030 00000000 		.4byte	.LFB69
 5982 0034 18000000 		.4byte	.LFE69
 5983 0038 00000000 		.4byte	.LFB70
 5984 003c 22000000 		.4byte	.LFE70
 5985 0040 00000000 		.4byte	.LFB71
 5986 0044 1C000000 		.4byte	.LFE71
 5987 0048 00000000 		.4byte	.LFB72
 5988 004c 28000000 		.4byte	.LFE72
 5989 0050 00000000 		.4byte	.LFB73
 5990 0054 2C000000 		.4byte	.LFE73
 5991 0058 00000000 		.4byte	.LFB74
 5992 005c 38000000 		.4byte	.LFE74
 5993 0060 00000000 		.4byte	.LFB75
 5994 0064 38000000 		.4byte	.LFE75
 5995 0068 00000000 		.4byte	.LFB76
 5996 006c 14000000 		.4byte	.LFE76
 5997 0070 00000000 		.4byte	.LFB77
 5998 0074 18000000 		.4byte	.LFE77
 5999 0078 00000000 		.4byte	.LFB78
 6000 007c 18000000 		.4byte	.LFE78
 6001 0080 00000000 		.4byte	.LFB79
 6002 0084 18000000 		.4byte	.LFE79
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 122


 6003 0088 00000000 		.4byte	.LFB80
 6004 008c 18000000 		.4byte	.LFE80
 6005 0090 00000000 		.4byte	.LFB81
 6006 0094 98000000 		.4byte	.LFE81
 6007 0098 00000000 		.4byte	.LFB82
 6008 009c 84010000 		.4byte	.LFE82
 6009 00a0 00000000 		.4byte	.LFB83
 6010 00a4 0C000000 		.4byte	.LFE83
 6011 00a8 00000000 		.4byte	.LFB84
 6012 00ac 2C000000 		.4byte	.LFE84
 6013 00b0 00000000 		.4byte	.LFB85
 6014 00b4 F0010000 		.4byte	.LFE85
 6015 00b8 00000000 		.4byte	.LFB86
 6016 00bc 78000000 		.4byte	.LFE86
 6017 00c0 00000000 		.4byte	.LFB87
 6018 00c4 20000000 		.4byte	.LFE87
 6019 00c8 00000000 		.4byte	.LFB88
 6020 00cc 1C000000 		.4byte	.LFE88
 6021 00d0 00000000 		.4byte	.LFB89
 6022 00d4 0A000000 		.4byte	.LFE89
 6023 00d8 00000000 		.4byte	.LFB90
 6024 00dc 30020000 		.4byte	.LFE90
 6025 00e0 00000000 		.4byte	.LFB91
 6026 00e4 50010000 		.4byte	.LFE91
 6027 00e8 00000000 		.4byte	.LFB92
 6028 00ec 50010000 		.4byte	.LFE92
 6029 00f0 00000000 		.4byte	.LFB93
 6030 00f4 B0010000 		.4byte	.LFE93
 6031 00f8 00000000 		.4byte	.LFB94
 6032 00fc C0000000 		.4byte	.LFE94
 6033 0100 00000000 		.4byte	.LFB95
 6034 0104 B8000000 		.4byte	.LFE95
 6035 0108 00000000 		.4byte	.LFB96
 6036 010c 4A000000 		.4byte	.LFE96
 6037 0110 00000000 		.4byte	.LFB97
 6038 0114 2C010000 		.4byte	.LFE97
 6039 0118 00000000 		.4byte	.LFB98
 6040 011c 68000000 		.4byte	.LFE98
 6041 0120 00000000 		.4byte	.LFB99
 6042 0124 50000000 		.4byte	.LFE99
 6043 0128 00000000 		.4byte	.LFB100
 6044 012c 3A000000 		.4byte	.LFE100
 6045 0130 00000000 		.4byte	0
 6046 0134 00000000 		.4byte	0
 6047              		.section	.debug_line,"",%progbits
 6048              	.Ldebug_line0:
 6049 0000 72060000 		.section	.debug_str,"MS",%progbits,1
 6049      02005501 
 6049      00000201 
 6049      FB0E0D00 
 6049      01010101 
 6050              	.LASF129:
 6051 0000 64697265 		.ascii	"direction\000"
 6051      6374696F 
 6051      6E00
 6052              	.LASF23:
 6053 000a 52545552 		.ascii	"RTURN\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 123


 6053      4E00
 6054              	.LASF135:
 6055 0010 71756164 		.ascii	"quad_diff1\000"
 6055      5F646966 
 6055      663100
 6056              	.LASF136:
 6057 001b 71756164 		.ascii	"quad_diff2\000"
 6057      5F646966 
 6057      663200
 6058              	.LASF89:
 6059 0026 51756164 		.ascii	"Quad_Dec_response\000"
 6059      5F446563 
 6059      5F726573 
 6059      706F6E73 
 6059      6500
 6060              	.LASF150:
 6061 0038 70726576 		.ascii	"prevVoltage\000"
 6061      566F6C74 
 6061      61676500 
 6062              	.LASF137:
 6063 0044 73746172 		.ascii	"start_turn_count\000"
 6063      745F7475 
 6063      726E5F63 
 6063      6F756E74 
 6063      00
 6064              	.LASF8:
 6065 0055 756E7369 		.ascii	"unsigned int\000"
 6065      676E6564 
 6065      20696E74 
 6065      00
 6066              	.LASF160:
 6067 0062 74726163 		.ascii	"track_mode\000"
 6067      6B5F6D6F 
 6067      646500
 6068              	.LASF11:
 6069 006d 5F5F696E 		.ascii	"__int32_t\000"
 6069      7433325F 
 6069      7400
 6070              	.LASF17:
 6071 0077 696E7431 		.ascii	"int16\000"
 6071      3600
 6072              	.LASF157:
 6073 007d 73797374 		.ascii	"system_state\000"
 6073      656D5F73 
 6073      74617465 
 6073      00
 6074              	.LASF22:
 6075 008a 4C545552 		.ascii	"LTURN\000"
 6075      4E00
 6076              	.LASF88:
 6077 0090 6973725F 		.ascii	"isr_adcTimer\000"
 6077      61646354 
 6077      696D6572 
 6077      00
 6078              	.LASF144:
 6079 009d 74617267 		.ascii	"target_distance_quad\000"
 6079      65745F64 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 124


 6079      69737461 
 6079      6E63655F 
 6079      71756164 
 6080              	.LASF25:
 6081 00b2 54524143 		.ascii	"TRACKING\000"
 6081      4B494E47 
 6081      00
 6082              	.LASF151:
 6083 00bb 70726576 		.ascii	"prevVoltage2\000"
 6083      566F6C74 
 6083      61676532 
 6083      00
 6084              	.LASF53:
 6085 00c8 7061636B 		.ascii	"packet_bytes\000"
 6085      65745F62 
 6085      79746573 
 6085      00
 6086              	.LASF49:
 6087 00d5 67325F78 		.ascii	"g2_xpos\000"
 6087      706F7300 
 6088              	.LASF29:
 6089 00dd 6D6F6465 		.ascii	"mode\000"
 6089      00
 6090              	.LASF131:
 6091 00e2 71756164 		.ascii	"quad_count1\000"
 6091      5F636F75 
 6091      6E743100 
 6092              	.LASF132:
 6093 00ee 71756164 		.ascii	"quad_count2\000"
 6093      5F636F75 
 6093      6E743200 
 6094              	.LASF98:
 6095 00fa 74726163 		.ascii	"trackLineU\000"
 6095      6B4C696E 
 6095      655500
 6096              	.LASF97:
 6097 0105 74726163 		.ascii	"trackLineZ\000"
 6097      6B4C696E 
 6097      655A00
 6098              	.LASF163:
 6099 0110 73706565 		.ascii	"speed\000"
 6099      6400
 6100              	.LASF33:
 6101 0116 53515541 		.ascii	"SQUARE_TRACK\000"
 6101      52455F54 
 6101      5241434B 
 6101      00
 6102              	.LASF125:
 6103 0123 666C6167 		.ascii	"flag_rf_transmission_active\000"
 6103      5F72665F 
 6103      7472616E 
 6103      736D6973 
 6103      73696F6E 
 6104              	.LASF126:
 6105 013f 666C6167 		.ascii	"flag_print_rf\000"
 6105      5F707269 
 6105      6E745F72 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 125


 6105      6600
 6106              	.LASF159:
 6107 014d 6D6F7665 		.ascii	"movement_state\000"
 6107      6D656E74 
 6107      5F737461 
 6107      746500
 6108              	.LASF26:
 6109 015c 54524143 		.ascii	"TRACKING_U\000"
 6109      4B494E47 
 6109      5F5500
 6110              	.LASF73:
 6111 0167 696E6974 		.ascii	"initForward\000"
 6111      466F7277 
 6111      61726400 
 6112              	.LASF52:
 6113 0173 67325F64 		.ascii	"g2_direction\000"
 6113      69726563 
 6113      74696F6E 
 6113      00
 6114              	.LASF83:
 6115 0180 6973725F 		.ascii	"isr_quad1\000"
 6115      71756164 
 6115      3100
 6116              	.LASF18:
 6117 018a 666C6F61 		.ascii	"float\000"
 6117      7400
 6118              	.LASF60:
 6119 0190 73657453 		.ascii	"setSpeed\000"
 6119      70656564 
 6119      00
 6120              	.LASF155:
 6121 0199 75736242 		.ascii	"usbBuffer\000"
 6121      75666665 
 6121      7200
 6122              	.LASF37:
 6123 01a3 696E6465 		.ascii	"index\000"
 6123      7800
 6124              	.LASF21:
 6125 01a9 44524956 		.ascii	"DRIVE\000"
 6125      4500
 6126              	.LASF55:
 6127 01af 73747269 		.ascii	"string_packet\000"
 6127      6E675F70 
 6127      61636B65 
 6127      7400
 6128              	.LASF63:
 6129 01bd 636F756E 		.ascii	"countsLeft\000"
 6129      74734C65 
 6129      667400
 6130              	.LASF68:
 6131 01c8 64726976 		.ascii	"driveForwards\000"
 6131      65466F72 
 6131      77617264 
 6131      7300
 6132              	.LASF70:
 6133 01d6 7475726E 		.ascii	"turnLeft\000"
 6133      4C656674 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 126


 6133      00
 6134              	.LASF7:
 6135 01df 6C6F6E67 		.ascii	"long long unsigned int\000"
 6135      206C6F6E 
 6135      6720756E 
 6135      7369676E 
 6135      65642069 
 6136              	.LASF122:
 6137 01f6 666C6167 		.ascii	"flag_packet\000"
 6137      5F706163 
 6137      6B657400 
 6138              	.LASF108:
 6139 0202 66726F6E 		.ascii	"frontSensors\000"
 6139      7453656E 
 6139      736F7273 
 6139      00
 6140              	.LASF166:
 6141 020f 443A5C43 		.ascii	"D:\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 6141      53333031 
 6141      2D546561 
 6141      6D2D5265 
 6141      706F5C43 
 6142              	.LASF85:
 6143 0234 6973725F 		.ascii	"isr_turn_timer\000"
 6143      7475726E 
 6143      5F74696D 
 6143      657200
 6144              	.LASF96:
 6145 0243 74726163 		.ascii	"trackLine\000"
 6145      6B4C696E 
 6145      6500
 6146              	.LASF71:
 6147 024d 696E6974 		.ascii	"initTurnLeft\000"
 6147      5475726E 
 6147      4C656674 
 6147      00
 6148              	.LASF149:
 6149 025a 706F7274 		.ascii	"portOpen\000"
 6149      4F70656E 
 6149      00
 6150              	.LASF74:
 6151 0263 696E6974 		.ascii	"initBrake\000"
 6151      4272616B 
 6151      6500
 6152              	.LASF118:
 6153 026d 666C6167 		.ascii	"flag_ts_update\000"
 6153      5F74735F 
 6153      75706461 
 6153      746500
 6154              	.LASF100:
 6155 027c 7363616C 		.ascii	"scalingFactor\000"
 6155      696E6746 
 6155      6163746F 
 6155      7200
 6156              	.LASF90:
 6157 028a 6C656674 		.ascii	"leftSpeed\000"
 6157      53706565 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 127


 6157      6400
 6158              	.LASF117:
 6159 0294 666C6167 		.ascii	"flag_ts_enc\000"
 6159      5F74735F 
 6159      656E6300 
 6160              	.LASF161:
 6161 02a0 62797465 		.ascii	"byteCount\000"
 6161      436F756E 
 6161      7400
 6162              	.LASF87:
 6163 02aa 62757474 		.ascii	"button\000"
 6163      6F6E00
 6164              	.LASF158:
 6165 02b1 70726576 		.ascii	"prev_movement_state\000"
 6165      5F6D6F76 
 6165      656D656E 
 6165      745F7374 
 6165      61746500 
 6166              	.LASF106:
 6167 02c5 73656E73 		.ascii	"sensorVals\000"
 6167      6F725661 
 6167      6C7300
 6168              	.LASF102:
 6169 02d0 72657375 		.ascii	"result_str\000"
 6169      6C745F73 
 6169      747200
 6170              	.LASF111:
 6171 02db 75617274 		.ascii	"uart_set_PWM\000"
 6171      5F736574 
 6171      5F50574D 
 6171      00
 6172              	.LASF77:
 6173 02e8 696E6974 		.ascii	"inittrackLineZ\000"
 6173      74726163 
 6173      6B4C696E 
 6173      655A00
 6174              	.LASF39:
 6175 02f7 726F626F 		.ascii	"robot_ypos\000"
 6175      745F7970 
 6175      6F7300
 6176              	.LASF116:
 6177 0302 74735F64 		.ascii	"ts_display\000"
 6177      6973706C 
 6177      617900
 6178              	.LASF99:
 6179 030d 7072696E 		.ascii	"print_ADC\000"
 6179      745F4144 
 6179      4300
 6180              	.LASF92:
 6181 0317 7363616C 		.ascii	"scalingLeft\000"
 6181      696E674C 
 6181      65667400 
 6182              	.LASF10:
 6183 0323 63686172 		.ascii	"char\000"
 6183      00
 6184              	.LASF43:
 6185 0328 67305F73 		.ascii	"g0_speed\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 128


 6185      70656564 
 6185      00
 6186              	.LASF141:
 6187 0331 72696768 		.ascii	"rightSpeedLimit\000"
 6187      74537065 
 6187      65644C69 
 6187      6D697400 
 6188              	.LASF56:
 6189 0341 7365744C 		.ascii	"setLeftDir\000"
 6189      65667444 
 6189      697200
 6190              	.LASF50:
 6191 034c 67325F79 		.ascii	"g2_ypos\000"
 6191      706F7300 
 6192              	.LASF14:
 6193 0354 75696E74 		.ascii	"uint16\000"
 6193      313600
 6194              	.LASF16:
 6195 035b 696E7438 		.ascii	"int8\000"
 6195      00
 6196              	.LASF48:
 6197 0360 67315F64 		.ascii	"g1_direction\000"
 6197      69726563 
 6197      74696F6E 
 6197      00
 6198              	.LASF57:
 6199 036d 73657452 		.ascii	"setRightDir\000"
 6199      69676874 
 6199      44697200 
 6200              	.LASF31:
 6201 0379 43555256 		.ascii	"CURVE_TRACK\000"
 6201      455F5452 
 6201      41434B00 
 6202              	.LASF94:
 6203 0385 696E7465 		.ascii	"interCalc\000"
 6203      7243616C 
 6203      6300
 6204              	.LASF62:
 6205 038f 72696768 		.ascii	"right\000"
 6205      7400
 6206              	.LASF6:
 6207 0395 6C6F6E67 		.ascii	"long long int\000"
 6207      206C6F6E 
 6207      6720696E 
 6207      7400
 6208              	.LASF156:
 6209 03a3 62756666 		.ascii	"buffer_state\000"
 6209      65725F73 
 6209      74617465 
 6209      00
 6210              	.LASF45:
 6211 03b0 67315F78 		.ascii	"g1_xpos\000"
 6211      706F7300 
 6212              	.LASF75:
 6213 03b8 696E6974 		.ascii	"initTrack\000"
 6213      54726163 
 6213      6B00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 129


 6214              	.LASF164:
 6215 03c2 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6215      4320342E 
 6215      392E3320 
 6215      32303135 
 6215      30333033 
 6216 03f5 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 6216      20726576 
 6216      6973696F 
 6216      6E203232 
 6216      31323230 
 6217 0428 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6217      66756E63 
 6217      74696F6E 
 6217      2D736563 
 6217      74696F6E 
 6218              	.LASF51:
 6219 0450 67325F73 		.ascii	"g2_speed\000"
 6219      70656564 
 6219      00
 6220              	.LASF42:
 6221 0459 67305F79 		.ascii	"g0_ypos\000"
 6221      706F7300 
 6222              	.LASF79:
 6223 0461 72665F63 		.ascii	"rf_char\000"
 6223      68617200 
 6224              	.LASF91:
 6225 0469 72696768 		.ascii	"rightSpeed\000"
 6225      74537065 
 6225      656400
 6226              	.LASF115:
 6227 0474 74735F73 		.ascii	"ts_speed\000"
 6227      70656564 
 6227      00
 6228              	.LASF15:
 6229 047d 75696E74 		.ascii	"uint32\000"
 6229      333200
 6230              	.LASF64:
 6231 0484 636F756E 		.ascii	"countsRight\000"
 6231      74735269 
 6231      67687400 
 6232              	.LASF167:
 6233 0490 64617461 		.ascii	"data_main\000"
 6233      5F6D6169 
 6233      6E00
 6234              	.LASF101:
 6235 049a 636F6E76 		.ascii	"converted_val\000"
 6235      65727465 
 6235      645F7661 
 6235      6C00
 6236              	.LASF36:
 6237 04a8 72737369 		.ascii	"rssi\000"
 6237      00
 6238              	.LASF44:
 6239 04ad 67305F64 		.ascii	"g0_direction\000"
 6239      69726563 
 6239      74696F6E 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 130


 6239      00
 6240              	.LASF127:
 6241 04ba 666C6167 		.ascii	"flag_receive_ADC\000"
 6241      5F726563 
 6241      65697665 
 6241      5F414443 
 6241      00
 6242              	.LASF24:
 6243 04cb 53544F50 		.ascii	"STOPPED\000"
 6243      50454400 
 6244              	.LASF80:
 6245 04d3 42545F72 		.ascii	"BT_rxInt\000"
 6245      78496E74 
 6245      00
 6246              	.LASF20:
 6247 04dc 6C6F6E67 		.ascii	"long double\000"
 6247      20646F75 
 6247      626C6500 
 6248              	.LASF78:
 6249 04e8 7278496E 		.ascii	"rxInt\000"
 6249      7400
 6250              	.LASF138:
 6251 04ee 6C656674 		.ascii	"left_duty_cycle\000"
 6251      5F647574 
 6251      795F6379 
 6251      636C6500 
 6252              	.LASF119:
 6253 04fe 666C6167 		.ascii	"flag_ts_speed\000"
 6253      5F74735F 
 6253      73706565 
 6253      6400
 6254              	.LASF124:
 6255 050c 64617461 		.ascii	"dataready_flag\000"
 6255      72656164 
 6255      795F666C 
 6255      616700
 6256              	.LASF147:
 6257 051b 696E6974 		.ascii	"initial_y_pos\000"
 6257      69616C5F 
 6257      795F706F 
 6257      7300
 6258              	.LASF121:
 6259 0529 666C6167 		.ascii	"flag_rx\000"
 6259      5F727800 
 6260              	.LASF2:
 6261 0531 73686F72 		.ascii	"short int\000"
 6261      7420696E 
 6261      7400
 6262              	.LASF128:
 6263 053b 6164635F 		.ascii	"adc_result\000"
 6263      72657375 
 6263      6C7400
 6264              	.LASF130:
 6265 0546 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 6265      5F63616C 
 6265      635F7768 
 6265      65656C73 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 131


 6265      70656564 
 6266              	.LASF4:
 6267 055b 6C6F6E67 		.ascii	"long int\000"
 6267      20696E74 
 6267      00
 6268              	.LASF72:
 6269 0564 696E6974 		.ascii	"initTurnRight\000"
 6269      5475726E 
 6269      52696768 
 6269      7400
 6270              	.LASF32:
 6271 0572 555F5452 		.ascii	"U_TRACK\000"
 6271      41434B00 
 6272              	.LASF112:
 6273 057a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6273      52784275 
 6273      66666572 
 6273      00
 6274              	.LASF104:
 6275 0587 7072696E 		.ascii	"printString\000"
 6275      74537472 
 6275      696E6700 
 6276              	.LASF114:
 6277 0593 74735F75 		.ascii	"ts_update\000"
 6277      70646174 
 6277      6500
 6278              	.LASF30:
 6279 059d 4E4F5F54 		.ascii	"NO_TRACK\000"
 6279      5241434B 
 6279      00
 6280              	.LASF140:
 6281 05a6 6C656674 		.ascii	"leftSpeedLimit\000"
 6281      53706565 
 6281      644C696D 
 6281      697400
 6282              	.LASF27:
 6283 05b5 54524143 		.ascii	"TRACKING_SOFT\000"
 6283      4B494E47 
 6283      5F534F46 
 6283      5400
 6284              	.LASF61:
 6285 05c3 6C656674 		.ascii	"left\000"
 6285      00
 6286              	.LASF143:
 6287 05c8 61636375 		.ascii	"accum_dist\000"
 6287      6D5F6469 
 6287      737400
 6288              	.LASF109:
 6289 05d3 75736250 		.ascii	"usbPutString\000"
 6289      75745374 
 6289      72696E67 
 6289      00
 6290              	.LASF69:
 6291 05e0 7475726E 		.ascii	"turnRight\000"
 6291      52696768 
 6291      7400
 6292              	.LASF46:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 132


 6293 05ea 67315F79 		.ascii	"g1_ypos\000"
 6293      706F7300 
 6294              	.LASF82:
 6295 05f2 6164635F 		.ascii	"adc_isr\000"
 6295      69737200 
 6296              	.LASF105:
 6297 05fa 72656164 		.ascii	"readFrontSensors\000"
 6297      46726F6E 
 6297      7453656E 
 6297      736F7273 
 6297      00
 6298              	.LASF145:
 6299 060b 71756164 		.ascii	"quad_per_cm\000"
 6299      5F706572 
 6299      5F636D00 
 6300              	.LASF142:
 6301 0617 74617267 		.ascii	"target_distance_cm\000"
 6301      65745F64 
 6301      69737461 
 6301      6E63655F 
 6301      636D00
 6302              	.LASF9:
 6303 062a 73697A65 		.ascii	"sizetype\000"
 6303      74797065 
 6303      00
 6304              	.LASF5:
 6305 0633 6C6F6E67 		.ascii	"long unsigned int\000"
 6305      20756E73 
 6305      69676E65 
 6305      6420696E 
 6305      7400
 6306              	.LASF54:
 6307 0645 62797465 		.ascii	"byte_packet\000"
 6307      5F706163 
 6307      6B657400 
 6308              	.LASF12:
 6309 0651 696E7433 		.ascii	"int32_t\000"
 6309      325F7400 
 6310              	.LASF162:
 6311 0659 7061636B 		.ascii	"packet\000"
 6311      657400
 6312              	.LASF38:
 6313 0660 726F626F 		.ascii	"robot_xpos\000"
 6313      745F7870 
 6313      6F7300
 6314              	.LASF67:
 6315 066b 6272616B 		.ascii	"brakeMotor\000"
 6315      654D6F74 
 6315      6F7200
 6316              	.LASF154:
 6317 0676 656E7472 		.ascii	"entry\000"
 6317      7900
 6318              	.LASF1:
 6319 067c 756E7369 		.ascii	"unsigned char\000"
 6319      676E6564 
 6319      20636861 
 6319      7200
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 133


 6320              	.LASF153:
 6321 068a 6C696E65 		.ascii	"line\000"
 6321      00
 6322              	.LASF86:
 6323 068f 53746F70 		.ascii	"Stop_on_line\000"
 6323      5F6F6E5F 
 6323      6C696E65 
 6323      00
 6324              	.LASF113:
 6325 069c 74735F65 		.ascii	"ts_enc\000"
 6325      6E6300
 6326              	.LASF148:
 6327 06a3 6272616B 		.ascii	"brakeFlag\000"
 6327      65466C61 
 6327      6700
 6328              	.LASF120:
 6329 06ad 666C6167 		.ascii	"flag_ts_display\000"
 6329      5F74735F 
 6329      64697370 
 6329      6C617900 
 6330              	.LASF28:
 6331 06bd 73746174 		.ascii	"state\000"
 6331      6500
 6332              	.LASF59:
 6333 06c3 72657665 		.ascii	"reverseDirection\000"
 6333      72736544 
 6333      69726563 
 6333      74696F6E 
 6333      00
 6334              	.LASF65:
 6335 06d4 6272616B 		.ascii	"brakeLeft\000"
 6335      654C6566 
 6335      7400
 6336              	.LASF152:
 6337 06de 64697370 		.ascii	"displaystring\000"
 6337      6C617973 
 6337      7472696E 
 6337      6700
 6338              	.LASF133:
 6339 06ec 6C617374 		.ascii	"last_quad_count1\000"
 6339      5F717561 
 6339      645F636F 
 6339      756E7431 
 6339      00
 6340              	.LASF134:
 6341 06fd 6C617374 		.ascii	"last_quad_count2\000"
 6341      5F717561 
 6341      645F636F 
 6341      756E7432 
 6341      00
 6342              	.LASF110:
 6343 070e 75736250 		.ascii	"usbPutChar\000"
 6343      75744368 
 6343      617200
 6344              	.LASF0:
 6345 0719 7369676E 		.ascii	"signed char\000"
 6345      65642063 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 134


 6345      68617200 
 6346              	.LASF3:
 6347 0725 73686F72 		.ascii	"short unsigned int\000"
 6347      7420756E 
 6347      7369676E 
 6347      65642069 
 6347      6E7400
 6348              	.LASF40:
 6349 0738 726F626F 		.ascii	"robot_orientation\000"
 6349      745F6F72 
 6349      69656E74 
 6349      6174696F 
 6349      6E00
 6350              	.LASF34:
 6351 074a 51554144 		.ascii	"QUAD_STOP\000"
 6351      5F53544F 
 6351      5000
 6352              	.LASF107:
 6353 0754 6D61696E 		.ascii	"main\000"
 6353      00
 6354              	.LASF81:
 6355 0759 42545F74 		.ascii	"BT_txInt\000"
 6355      78496E74 
 6355      00
 6356              	.LASF95:
 6357 0762 6E657874 		.ascii	"nextSpeed\000"
 6357      53706565 
 6357      6400
 6358              	.LASF84:
 6359 076c 64697374 		.ascii	"dist\000"
 6359      00
 6360              	.LASF13:
 6361 0771 75696E74 		.ascii	"uint8\000"
 6361      3800
 6362              	.LASF19:
 6363 0777 646F7562 		.ascii	"double\000"
 6363      6C6500
 6364              	.LASF139:
 6365 077e 72696768 		.ascii	"right_duty_cycle\000"
 6365      745F6475 
 6365      74795F63 
 6365      79636C65 
 6365      00
 6366              	.LASF35:
 6367 078f 52465F53 		.ascii	"RF_STOP\000"
 6367      544F5000 
 6368              	.LASF58:
 6369 0797 68616E64 		.ascii	"handle_rx_binary\000"
 6369      6C655F72 
 6369      785F6269 
 6369      6E617279 
 6369      00
 6370              	.LASF103:
 6371 07a8 7072696E 		.ascii	"print_RF\000"
 6371      745F5246 
 6371      00
 6372              	.LASF41:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc7a6lOd.s 			page 135


 6373 07b1 67305F78 		.ascii	"g0_xpos\000"
 6373      706F7300 
 6374              	.LASF93:
 6375 07b9 7363616C 		.ascii	"scalingRight\000"
 6375      696E6752 
 6375      69676874 
 6375      00
 6376              	.LASF123:
 6377 07c6 666C6167 		.ascii	"flag_KB_string\000"
 6377      5F4B425F 
 6377      73747269 
 6377      6E6700
 6378              	.LASF47:
 6379 07d5 67315F73 		.ascii	"g1_speed\000"
 6379      70656564 
 6379      00
 6380              	.LASF165:
 6381 07de 2E5C6D61 		.ascii	".\\main.c\000"
 6381      696E2E63 
 6381      00
 6382              	.LASF146:
 6383 07e7 696E6974 		.ascii	"initial_x_pos\000"
 6383      69616C5F 
 6383      785F706F 
 6383      7300
 6384              	.LASF66:
 6385 07f5 6272616B 		.ascii	"brakeRight\000"
 6385      65526967 
 6385      687400
 6386              	.LASF76:
 6387 0800 696E6974 		.ascii	"initTrackU\000"
 6387      54726163 
 6387      6B5500
 6388              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
