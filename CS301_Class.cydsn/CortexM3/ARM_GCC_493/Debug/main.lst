ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	movement_state
 204              		.type	movement_state, %object
 205              		.size	movement_state, 1
 206              	movement_state:
 207 0044 03       		.byte	3
 208              		.global	byteCount
 209 0045 000000   		.bss
 210              		.type	byteCount, %object
 211              		.size	byteCount, 1
 212              	byteCount:
 213 002c 00       		.space	1
 214              		.comm	packet,2,4
 215 002d 00       		.section	.text.handle_rx_binary,"ax",%progbits
 216              		.align	2
 217              		.global	handle_rx_binary
 218              		.thumb
 219              		.thumb_func
 220              		.type	handle_rx_binary, %function
 221              	handle_rx_binary:
 222              	.LFB63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 5


 223              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** 
  40:.\main.c      **** void handle_rx_binary()
  41:.\main.c      **** {
 224              		.loc 1 41 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 89B0     		sub	sp, sp, #36
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  42:.\main.c      ****     if(flag_rx == 1)
 236              		.loc 1 42 0
 237 0006 524B     		ldr	r3, .L21
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 6


 238 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 000a 012B     		cmp	r3, #1
 240 000c 40F09A80 		bne	.L1
 241              	.LBB2:
  43:.\main.c      ****     {    
  44:.\main.c      ****         flag_rx = 0;
 242              		.loc 1 44 0
 243 0010 4F4B     		ldr	r3, .L21
 244 0012 0022     		movs	r2, #0
 245 0014 1A70     		strb	r2, [r3]
  45:.\main.c      ****         
  46:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 246              		.loc 1 46 0
 247 0016 4F4B     		ldr	r3, .L21+4
 248 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 249 001a 1B02     		lsls	r3, r3, #8
 250 001c 9AB2     		uxth	r2, r3
 251 001e 4D4B     		ldr	r3, .L21+4
 252 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0022 9BB2     		uxth	r3, r3
 254 0024 1343     		orrs	r3, r3, r2
 255 0026 9BB2     		uxth	r3, r3
 256 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  47:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  48:.\main.c      ****         char byte_packet[12];
  49:.\main.c      ****         char string_packet[12];
  50:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  51:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  52:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  53:.\main.c      ****         //usbPutString(string_packet);
  54:.\main.c      ****        // usbPutString(string_packet);
  55:.\main.c      ****        // usbPutChar(' ');
  56:.\main.c      ****         
  57:.\main.c      ****         switch(byteCount)
 257              		.loc 1 57 0
 258 002a 4B4B     		ldr	r3, .L21+8
 259 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 002e 043B     		subs	r3, r3, #4
 261 0030 1E2B     		cmp	r3, #30
 262 0032 00F28780 		bhi	.L1
 263 0036 01A2     		adr	r2, .L5
 264 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265              		.p2align 2
 266              	.L5:
 267 003c B9000000 		.word	.L4+1
 268 0040 45010000 		.word	.L1+1
 269 0044 CD000000 		.word	.L6+1
 270 0048 45010000 		.word	.L1+1
 271 004c D5000000 		.word	.L7+1
 272 0050 45010000 		.word	.L1+1
 273 0054 DD000000 		.word	.L8+1
 274 0058 45010000 		.word	.L1+1
 275 005c E5000000 		.word	.L9+1
 276 0060 45010000 		.word	.L1+1
 277 0064 ED000000 		.word	.L10+1
 278 0068 45010000 		.word	.L1+1
 279 006c F5000000 		.word	.L11+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 7


 280 0070 45010000 		.word	.L1+1
 281 0074 FD000000 		.word	.L12+1
 282 0078 45010000 		.word	.L1+1
 283 007c 05010000 		.word	.L13+1
 284 0080 45010000 		.word	.L1+1
 285 0084 0D010000 		.word	.L14+1
 286 0088 45010000 		.word	.L1+1
 287 008c 15010000 		.word	.L15+1
 288 0090 45010000 		.word	.L1+1
 289 0094 1D010000 		.word	.L16+1
 290 0098 45010000 		.word	.L1+1
 291 009c 25010000 		.word	.L17+1
 292 00a0 45010000 		.word	.L1+1
 293 00a4 2D010000 		.word	.L18+1
 294 00a8 45010000 		.word	.L1+1
 295 00ac 35010000 		.word	.L19+1
 296 00b0 45010000 		.word	.L1+1
 297 00b4 3D010000 		.word	.L20+1
 298              		.p2align 1
 299              	.L4:
  58:.\main.c      ****         {
  59:.\main.c      ****             case 4:
  60:.\main.c      ****                 //usbPutString("RSSI:");
  61:.\main.c      ****                 //usbPutString(byte_packet);
  62:.\main.c      ****                 //usbPutString("\r\n");
  63:.\main.c      ****                 buffer_state.rssi = packet[0];
 300              		.loc 1 63 0
 301 00b8 264B     		ldr	r3, .L21+4
 302 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00bc DAB2     		uxtb	r2, r3
 304 00be 274B     		ldr	r3, .L21+12
 305 00c0 1A70     		strb	r2, [r3]
  64:.\main.c      ****                 buffer_state.index = packet[1];
 306              		.loc 1 64 0
 307 00c2 244B     		ldr	r3, .L21+4
 308 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 309 00c6 254B     		ldr	r3, .L21+12
 310 00c8 5A70     		strb	r2, [r3, #1]
  65:.\main.c      ****             break;
 311              		.loc 1 65 0
 312 00ca 3BE0     		b	.L1
 313              	.L6:
  66:.\main.c      ****             case 6:
  67:.\main.c      ****                 //usbPutString("robot_x:");
  68:.\main.c      ****                 //usbPutString(string_packet);
  69:.\main.c      ****                 //usbPutString("\r\n");
  70:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 314              		.loc 1 70 0
 315 00cc FA8B     		ldrh	r2, [r7, #30]
 316 00ce 234B     		ldr	r3, .L21+12
 317 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  71:.\main.c      ****             break;
 318              		.loc 1 71 0
 319 00d2 37E0     		b	.L1
 320              	.L7:
  72:.\main.c      ****             case 8:
  73:.\main.c      ****                 //usbPutString("robot_y:");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 8


  74:.\main.c      ****                 //usbPutString(string_packet);
  75:.\main.c      ****                 //usbPutString("\r\n");
  76:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 321              		.loc 1 76 0
 322 00d4 FA8B     		ldrh	r2, [r7, #30]
 323 00d6 214B     		ldr	r3, .L21+12
 324 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  77:.\main.c      ****             break;
 325              		.loc 1 77 0
 326 00da 33E0     		b	.L1
 327              	.L8:
  78:.\main.c      ****             case 10:
  79:.\main.c      ****                 //usbPutString("robot_dir:");
  80:.\main.c      ****                 //usbPutString(string_packet);
  81:.\main.c      ****                 //usbPutString("\r\n");
  82:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 328              		.loc 1 82 0
 329 00dc FA8B     		ldrh	r2, [r7, #30]
 330 00de 1F4B     		ldr	r3, .L21+12
 331 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  83:.\main.c      ****             break;
 332              		.loc 1 83 0
 333 00e2 2FE0     		b	.L1
 334              	.L9:
  84:.\main.c      ****             case 12:
  85:.\main.c      ****                 //usbPutString("g0_x:");
  86:.\main.c      ****                 //usbPutString(string_packet);
  87:.\main.c      ****                 //usbPutString("\r\n");
  88:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 335              		.loc 1 88 0
 336 00e4 FA8B     		ldrh	r2, [r7, #30]
 337 00e6 1D4B     		ldr	r3, .L21+12
 338 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  89:.\main.c      ****             break;
 339              		.loc 1 89 0
 340 00ea 2BE0     		b	.L1
 341              	.L10:
  90:.\main.c      ****             case 14:
  91:.\main.c      ****                 //usbPutString("g0_y:");
  92:.\main.c      ****                 //usbPutString(string_packet);
  93:.\main.c      ****                 //usbPutString("\r\n");
  94:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 342              		.loc 1 94 0
 343 00ec FA8B     		ldrh	r2, [r7, #30]
 344 00ee 1B4B     		ldr	r3, .L21+12
 345 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  95:.\main.c      ****             break;
 346              		.loc 1 95 0
 347 00f2 27E0     		b	.L1
 348              	.L11:
  96:.\main.c      ****             case 16:
  97:.\main.c      ****                 //usbPutString("g0_speed:");
  98:.\main.c      ****                 //usbPutString(string_packet);
  99:.\main.c      ****                 //usbPutString("\r\n");
 100:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 349              		.loc 1 100 0
 350 00f4 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 9


 351 00f6 194B     		ldr	r3, .L21+12
 352 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 101:.\main.c      ****             break;
 353              		.loc 1 101 0
 354 00fa 23E0     		b	.L1
 355              	.L12:
 102:.\main.c      ****             case 18:
 103:.\main.c      ****                 //usbPutString("g1_dir:");
 104:.\main.c      ****                 //usbPutString(string_packet);
 105:.\main.c      ****                 //usbPutString("\r\n");
 106:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 356              		.loc 1 106 0
 357 00fc FA8B     		ldrh	r2, [r7, #30]
 358 00fe 174B     		ldr	r3, .L21+12
 359 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 107:.\main.c      ****             break;
 360              		.loc 1 107 0
 361 0102 1FE0     		b	.L1
 362              	.L13:
 108:.\main.c      ****             case 20:
 109:.\main.c      ****                 //usbPutString("g1_x:");
 110:.\main.c      ****                 //usbPutString(string_packet);
 111:.\main.c      ****                 //usbPutString("\r\n");
 112:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 363              		.loc 1 112 0
 364 0104 FA8B     		ldrh	r2, [r7, #30]
 365 0106 154B     		ldr	r3, .L21+12
 366 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 113:.\main.c      ****             break;
 367              		.loc 1 113 0
 368 010a 1BE0     		b	.L1
 369              	.L14:
 114:.\main.c      ****             case 22:
 115:.\main.c      ****                 //usbPutString("g1_y:");
 116:.\main.c      ****                 //usbPutString(string_packet);
 117:.\main.c      ****                 //usbPutString("\r\n");
 118:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 370              		.loc 1 118 0
 371 010c FA8B     		ldrh	r2, [r7, #30]
 372 010e 134B     		ldr	r3, .L21+12
 373 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 119:.\main.c      ****             break;
 374              		.loc 1 119 0
 375 0112 17E0     		b	.L1
 376              	.L15:
 120:.\main.c      ****             case 24:
 121:.\main.c      ****                 //usbPutString("g1_speed:");
 122:.\main.c      ****                 //usbPutString(string_packet);
 123:.\main.c      ****                 //usbPutString("\r\n");
 124:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 377              		.loc 1 124 0
 378 0114 FA8B     		ldrh	r2, [r7, #30]
 379 0116 114B     		ldr	r3, .L21+12
 380 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 125:.\main.c      ****             break;
 381              		.loc 1 125 0
 382 011a 13E0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 10


 383              	.L16:
 126:.\main.c      ****             case 26:
 127:.\main.c      ****                 //usbPutString("g1_dir:");
 128:.\main.c      ****                 //usbPutString(string_packet);
 129:.\main.c      ****                 //usbPutString("\r\n");
 130:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 384              		.loc 1 130 0
 385 011c FA8B     		ldrh	r2, [r7, #30]
 386 011e 0F4B     		ldr	r3, .L21+12
 387 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 131:.\main.c      ****             break;
 388              		.loc 1 131 0
 389 0122 0FE0     		b	.L1
 390              	.L17:
 132:.\main.c      ****             case 28:
 133:.\main.c      ****                 //usbPutString("g2_x:");
 134:.\main.c      ****                 //usbPutString(string_packet);
 135:.\main.c      ****                 //usbPutString("\r\n");
 136:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 391              		.loc 1 136 0
 392 0124 FA8B     		ldrh	r2, [r7, #30]
 393 0126 0D4B     		ldr	r3, .L21+12
 394 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 137:.\main.c      ****             break;
 395              		.loc 1 137 0
 396 012a 0BE0     		b	.L1
 397              	.L18:
 138:.\main.c      ****             case 30:
 139:.\main.c      ****                 //usbPutString("g2_y:");
 140:.\main.c      ****                 //usbPutString(string_packet);
 141:.\main.c      ****                 //usbPutString("\r\n");
 142:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 398              		.loc 1 142 0
 399 012c FA8B     		ldrh	r2, [r7, #30]
 400 012e 0B4B     		ldr	r3, .L21+12
 401 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 143:.\main.c      ****             break;
 402              		.loc 1 143 0
 403 0132 07E0     		b	.L1
 404              	.L19:
 144:.\main.c      ****             case 32:
 145:.\main.c      ****                 //usbPutString("g1_speed:");
 146:.\main.c      ****                 //usbPutString(string_packet);
 147:.\main.c      ****                 //usbPutString("\r\n");
 148:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 405              		.loc 1 148 0
 406 0134 FA8B     		ldrh	r2, [r7, #30]
 407 0136 094B     		ldr	r3, .L21+12
 408 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 149:.\main.c      ****             break;
 409              		.loc 1 149 0
 410 013a 03E0     		b	.L1
 411              	.L20:
 150:.\main.c      ****             case 34:
 151:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 412              		.loc 1 151 0
 413 013c FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 11


 414 013e 074B     		ldr	r3, .L21+12
 415 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 152:.\main.c      ****                 //usbPutString("g2_dir:");
 153:.\main.c      ****                 //usbPutString(string_packet);
 154:.\main.c      ****                 //usbPutString("\r\n");
 155:.\main.c      ****                 
 156:.\main.c      ****             break;
 416              		.loc 1 156 0
 417 0142 00BF     		nop
 418              	.L1:
 419              	.LBE2:
 157:.\main.c      ****         }
 158:.\main.c      ****     }
 159:.\main.c      **** }
 420              		.loc 1 159 0
 421 0144 2437     		adds	r7, r7, #36
 422              		.cfi_def_cfa_offset 4
 423 0146 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0148 5DF8047B 		ldr	r7, [sp], #4
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 014c 7047     		bx	lr
 430              	.L22:
 431 014e 00BF     		.align	2
 432              	.L21:
 433 0150 00000000 		.word	flag_rx
 434 0154 00000000 		.word	packet
 435 0158 00000000 		.word	byteCount
 436 015c 00000000 		.word	buffer_state
 437              		.cfi_endproc
 438              	.LFE63:
 439              		.size	handle_rx_binary, .-handle_rx_binary
 440              		.section	.text.setSpeed,"ax",%progbits
 441              		.align	2
 442              		.global	setSpeed
 443              		.thumb
 444              		.thumb_func
 445              		.type	setSpeed, %function
 446              	setSpeed:
 447              	.LFB64:
 160:.\main.c      **** 
 161:.\main.c      **** void setSpeed(int right, int left){
 448              		.loc 1 161 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 0002 83B0     		sub	sp, sp, #12
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 12


 461 0008 3960     		str	r1, [r7]
 162:.\main.c      ****     leftSpeedLimit = right;
 462              		.loc 1 162 0
 463 000a 7B68     		ldr	r3, [r7, #4]
 464 000c 9AB2     		uxth	r2, r3
 465 000e 054B     		ldr	r3, .L24
 466 0010 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****     rightSpeedLimit = left;
 467              		.loc 1 163 0
 468 0012 3B68     		ldr	r3, [r7]
 469 0014 9AB2     		uxth	r2, r3
 470 0016 044B     		ldr	r3, .L24+4
 471 0018 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      **** }
 472              		.loc 1 164 0
 473 001a 0C37     		adds	r7, r7, #12
 474              		.cfi_def_cfa_offset 4
 475 001c BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 001e 5DF8047B 		ldr	r7, [sp], #4
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 0022 7047     		bx	lr
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0024 00000000 		.word	leftSpeedLimit
 486 0028 00000000 		.word	rightSpeedLimit
 487              		.cfi_endproc
 488              	.LFE64:
 489              		.size	setSpeed, .-setSpeed
 490              		.section	.text.brakeLeft,"ax",%progbits
 491              		.align	2
 492              		.global	brakeLeft
 493              		.thumb
 494              		.thumb_func
 495              		.type	brakeLeft, %function
 496              	brakeLeft:
 497              	.LFB65:
 165:.\main.c      **** 
 166:.\main.c      **** void brakeLeft()
 167:.\main.c      **** {
 498              		.loc 1 167 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 168:.\main.c      ****     PWM_1_WriteCompare(0);
 508              		.loc 1 168 0
 509 0004 0020     		movs	r0, #0
 510 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 13


 169:.\main.c      ****     left_duty_cycle = 0;
 511              		.loc 1 169 0
 512 000a 024B     		ldr	r3, .L27
 513 000c 0022     		movs	r2, #0
 514 000e 1A80     		strh	r2, [r3]	@ movhi
 170:.\main.c      **** }
 515              		.loc 1 170 0
 516 0010 80BD     		pop	{r7, pc}
 517              	.L28:
 518 0012 00BF     		.align	2
 519              	.L27:
 520 0014 00000000 		.word	left_duty_cycle
 521              		.cfi_endproc
 522              	.LFE65:
 523              		.size	brakeLeft, .-brakeLeft
 524              		.section	.text.brakeRight,"ax",%progbits
 525              		.align	2
 526              		.global	brakeRight
 527              		.thumb
 528              		.thumb_func
 529              		.type	brakeRight, %function
 530              	brakeRight:
 531              	.LFB66:
 171:.\main.c      **** 
 172:.\main.c      **** void brakeRight()
 173:.\main.c      **** {
 532              		.loc 1 173 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 174:.\main.c      ****      PWM_2_WriteCompare(0);
 542              		.loc 1 174 0
 543 0004 0020     		movs	r0, #0
 544 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 175:.\main.c      ****      right_duty_cycle = 0;
 545              		.loc 1 175 0
 546 000a 024B     		ldr	r3, .L30
 547 000c 0022     		movs	r2, #0
 548 000e 1A80     		strh	r2, [r3]	@ movhi
 176:.\main.c      **** }
 549              		.loc 1 176 0
 550 0010 80BD     		pop	{r7, pc}
 551              	.L31:
 552 0012 00BF     		.align	2
 553              	.L30:
 554 0014 00000000 		.word	right_duty_cycle
 555              		.cfi_endproc
 556              	.LFE66:
 557              		.size	brakeRight, .-brakeRight
 558              		.section	.text.brakeMotor,"ax",%progbits
 559              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 14


 560              		.global	brakeMotor
 561              		.thumb
 562              		.thumb_func
 563              		.type	brakeMotor, %function
 564              	brakeMotor:
 565              	.LFB67:
 177:.\main.c      **** 
 178:.\main.c      **** void brakeMotor(){
 566              		.loc 1 178 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 00AF     		add	r7, sp, #0
 575              		.cfi_def_cfa_register 7
 179:.\main.c      ****     setSpeed(0, 0);
 576              		.loc 1 179 0
 577 0004 0020     		movs	r0, #0
 578 0006 0021     		movs	r1, #0
 579 0008 FFF7FEFF 		bl	setSpeed
 180:.\main.c      ****     brakeLeft();
 580              		.loc 1 180 0
 581 000c FFF7FEFF 		bl	brakeLeft
 181:.\main.c      ****     brakeRight();
 582              		.loc 1 181 0
 583 0010 FFF7FEFF 		bl	brakeRight
 182:.\main.c      **** }
 584              		.loc 1 182 0
 585 0014 80BD     		pop	{r7, pc}
 586              		.cfi_endproc
 587              	.LFE67:
 588              		.size	brakeMotor, .-brakeMotor
 589 0016 00BF     		.section	.text.driveForwards,"ax",%progbits
 590              		.align	2
 591              		.global	driveForwards
 592              		.thumb
 593              		.thumb_func
 594              		.type	driveForwards, %function
 595              	driveForwards:
 596              	.LFB68:
 183:.\main.c      **** 
 184:.\main.c      **** 
 185:.\main.c      **** void driveForwards()
 186:.\main.c      **** {
 597              		.loc 1 186 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 15


 187:.\main.c      ****     setSpeed(20, 20);
 607              		.loc 1 187 0
 608 0004 1420     		movs	r0, #20
 609 0006 1421     		movs	r1, #20
 610 0008 FFF7FEFF 		bl	setSpeed
 188:.\main.c      **** }
 611              		.loc 1 188 0
 612 000c 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE68:
 615              		.size	driveForwards, .-driveForwards
 616 000e 00BF     		.section	.text.turnLeft,"ax",%progbits
 617              		.align	2
 618              		.global	turnLeft
 619              		.thumb
 620              		.thumb_func
 621              		.type	turnLeft, %function
 622              	turnLeft:
 623              	.LFB69:
 189:.\main.c      **** 
 190:.\main.c      **** void turnLeft()
 191:.\main.c      **** {
 624              		.loc 1 191 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 192:.\main.c      ****     setSpeed(0,20);
 634              		.loc 1 192 0
 635 0004 0020     		movs	r0, #0
 636 0006 1421     		movs	r1, #20
 637 0008 FFF7FEFF 		bl	setSpeed
 193:.\main.c      **** }
 638              		.loc 1 193 0
 639 000c 80BD     		pop	{r7, pc}
 640              		.cfi_endproc
 641              	.LFE69:
 642              		.size	turnLeft, .-turnLeft
 643 000e 00BF     		.section	.text.turnRight,"ax",%progbits
 644              		.align	2
 645              		.global	turnRight
 646              		.thumb
 647              		.thumb_func
 648              		.type	turnRight, %function
 649              	turnRight:
 650              	.LFB70:
 194:.\main.c      **** 
 195:.\main.c      **** void turnRight()
 196:.\main.c      **** {
 651              		.loc 1 196 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 16


 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 197:.\main.c      ****     setSpeed(20,0);
 661              		.loc 1 197 0
 662 0004 1420     		movs	r0, #20
 663 0006 0021     		movs	r1, #0
 664 0008 FFF7FEFF 		bl	setSpeed
 198:.\main.c      **** }
 665              		.loc 1 198 0
 666 000c 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE70:
 669              		.size	turnRight, .-turnRight
 670 000e 00BF     		.section	.text.initTurnLeft,"ax",%progbits
 671              		.align	2
 672              		.global	initTurnLeft
 673              		.thumb
 674              		.thumb_func
 675              		.type	initTurnLeft, %function
 676              	initTurnLeft:
 677              	.LFB71:
 199:.\main.c      **** 
 200:.\main.c      **** void initTurnLeft(){
 678              		.loc 1 200 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 201:.\main.c      ****     Timer_2_Stop();
 688              		.loc 1 201 0
 689 0004 FFF7FEFF 		bl	Timer_2_Stop
 202:.\main.c      ****     movement_state = LTURN;
 690              		.loc 1 202 0
 691 0008 064B     		ldr	r3, .L37
 692 000a 0122     		movs	r2, #1
 693 000c 1A70     		strb	r2, [r3]
 203:.\main.c      ****     brakeLeft();
 694              		.loc 1 203 0
 695 000e FFF7FEFF 		bl	brakeLeft
 204:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 696              		.loc 1 204 0
 697 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 698 0016 0346     		mov	r3, r0
 699 0018 1A46     		mov	r2, r3
 700 001a 034B     		ldr	r3, .L37+4
 701 001c 1A80     		strh	r2, [r3]	@ movhi
 205:.\main.c      ****     Timer_2_Start();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 17


 702              		.loc 1 205 0
 703 001e FFF7FEFF 		bl	Timer_2_Start
 206:.\main.c      **** }
 704              		.loc 1 206 0
 705 0022 80BD     		pop	{r7, pc}
 706              	.L38:
 707              		.align	2
 708              	.L37:
 709 0024 00000000 		.word	movement_state
 710 0028 00000000 		.word	start_turn_count
 711              		.cfi_endproc
 712              	.LFE71:
 713              		.size	initTurnLeft, .-initTurnLeft
 714              		.section	.text.initTurnRight,"ax",%progbits
 715              		.align	2
 716              		.global	initTurnRight
 717              		.thumb
 718              		.thumb_func
 719              		.type	initTurnRight, %function
 720              	initTurnRight:
 721              	.LFB72:
 207:.\main.c      **** 
 208:.\main.c      **** void initTurnRight(){
 722              		.loc 1 208 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726 0000 80B5     		push	{r7, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 00AF     		add	r7, sp, #0
 731              		.cfi_def_cfa_register 7
 209:.\main.c      ****     Timer_2_Stop();
 732              		.loc 1 209 0
 733 0004 FFF7FEFF 		bl	Timer_2_Stop
 210:.\main.c      ****     movement_state = RTURN;
 734              		.loc 1 210 0
 735 0008 064B     		ldr	r3, .L40
 736 000a 0222     		movs	r2, #2
 737 000c 1A70     		strb	r2, [r3]
 211:.\main.c      ****     brakeRight();
 738              		.loc 1 211 0
 739 000e FFF7FEFF 		bl	brakeRight
 212:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 740              		.loc 1 212 0
 741 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 742 0016 0346     		mov	r3, r0
 743 0018 1A46     		mov	r2, r3
 744 001a 034B     		ldr	r3, .L40+4
 745 001c 1A80     		strh	r2, [r3]	@ movhi
 213:.\main.c      ****     Timer_2_Start();
 746              		.loc 1 213 0
 747 001e FFF7FEFF 		bl	Timer_2_Start
 214:.\main.c      **** }
 748              		.loc 1 214 0
 749 0022 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 18


 750              	.L41:
 751              		.align	2
 752              	.L40:
 753 0024 00000000 		.word	movement_state
 754 0028 00000000 		.word	start_turn_count
 755              		.cfi_endproc
 756              	.LFE72:
 757              		.size	initTurnRight, .-initTurnRight
 758              		.section	.text.initForward,"ax",%progbits
 759              		.align	2
 760              		.global	initForward
 761              		.thumb
 762              		.thumb_func
 763              		.type	initForward, %function
 764              	initForward:
 765              	.LFB73:
 215:.\main.c      **** 
 216:.\main.c      **** void initForward(){
 766              		.loc 1 216 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 217:.\main.c      ****     brakeMotor();
 776              		.loc 1 217 0
 777 0004 FFF7FEFF 		bl	brakeMotor
 218:.\main.c      ****     movement_state = DRIVE;
 778              		.loc 1 218 0
 779 0008 014B     		ldr	r3, .L43
 780 000a 0022     		movs	r2, #0
 781 000c 1A70     		strb	r2, [r3]
 219:.\main.c      **** }
 782              		.loc 1 219 0
 783 000e 80BD     		pop	{r7, pc}
 784              	.L44:
 785              		.align	2
 786              	.L43:
 787 0010 00000000 		.word	movement_state
 788              		.cfi_endproc
 789              	.LFE73:
 790              		.size	initForward, .-initForward
 791              		.section	.text.initBrake,"ax",%progbits
 792              		.align	2
 793              		.global	initBrake
 794              		.thumb
 795              		.thumb_func
 796              		.type	initBrake, %function
 797              	initBrake:
 798              	.LFB74:
 220:.\main.c      **** 
 221:.\main.c      **** void initBrake(){
 799              		.loc 1 221 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 19


 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
 222:.\main.c      ****     movement_state = STOPPED;
 809              		.loc 1 222 0
 810 0004 034B     		ldr	r3, .L46
 811 0006 0322     		movs	r2, #3
 812 0008 1A70     		strb	r2, [r3]
 223:.\main.c      **** }
 813              		.loc 1 223 0
 814 000a BD46     		mov	sp, r7
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 000c 5DF8047B 		ldr	r7, [sp], #4
 818              		.cfi_restore 7
 819              		.cfi_def_cfa_offset 0
 820 0010 7047     		bx	lr
 821              	.L47:
 822 0012 00BF     		.align	2
 823              	.L46:
 824 0014 00000000 		.word	movement_state
 825              		.cfi_endproc
 826              	.LFE74:
 827              		.size	initBrake, .-initBrake
 828              		.section	.text.reverseDirection,"ax",%progbits
 829              		.align	2
 830              		.global	reverseDirection
 831              		.thumb
 832              		.thumb_func
 833              		.type	reverseDirection, %function
 834              	reverseDirection:
 835              	.LFB75:
 224:.\main.c      **** 
 225:.\main.c      **** void reverseDirection()
 226:.\main.c      **** {
 836              		.loc 1 226 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840 0000 80B5     		push	{r7, lr}
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 00AF     		add	r7, sp, #0
 845              		.cfi_def_cfa_register 7
 227:.\main.c      ****     direction = !direction;
 846              		.loc 1 227 0
 847 0004 0A4B     		ldr	r3, .L49
 848 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0008 002B     		cmp	r3, #0
 850 000a 0CBF     		ite	eq
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 20


 851 000c 0123     		moveq	r3, #1
 852 000e 0023     		movne	r3, #0
 853 0010 DBB2     		uxtb	r3, r3
 854 0012 1A46     		mov	r2, r3
 855 0014 064B     		ldr	r3, .L49
 856 0016 1A70     		strb	r2, [r3]
 228:.\main.c      ****     M1_IN2_Write(direction);
 857              		.loc 1 228 0
 858 0018 054B     		ldr	r3, .L49
 859 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 001c 1846     		mov	r0, r3
 861 001e FFF7FEFF 		bl	M1_IN2_Write
 229:.\main.c      ****     M2_IN2_Write(direction);
 862              		.loc 1 229 0
 863 0022 034B     		ldr	r3, .L49
 864 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 0026 1846     		mov	r0, r3
 866 0028 FFF7FEFF 		bl	M2_IN2_Write
 230:.\main.c      **** }
 867              		.loc 1 230 0
 868 002c 80BD     		pop	{r7, pc}
 869              	.L50:
 870 002e 00BF     		.align	2
 871              	.L49:
 872 0030 00000000 		.word	direction
 873              		.cfi_endproc
 874              	.LFE75:
 875              		.size	reverseDirection, .-reverseDirection
 876              		.section	.text.rxInt,"ax",%progbits
 877              		.align	2
 878              		.global	rxInt
 879              		.thumb
 880              		.thumb_func
 881              		.type	rxInt, %function
 882              	rxInt:
 883              	.LFB76:
 231:.\main.c      **** 
 232:.\main.c      **** //Binary RF Data
 233:.\main.c      **** CY_ISR(rxInt){
 884              		.loc 1 233 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 8
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 B0B5     		push	{r4, r5, r7, lr}
 889              		.cfi_def_cfa_offset 16
 890              		.cfi_offset 4, -16
 891              		.cfi_offset 5, -12
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 24
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 234:.\main.c      ****     char rf_char = UART_GetChar();
 898              		.loc 1 234 0
 899 0006 FFF7FEFF 		bl	UART_GetChar
 900 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 21


 901 000c FB71     		strb	r3, [r7, #7]
 235:.\main.c      ****     if(rf_char == SOP){
 902              		.loc 1 235 0
 903 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 904 0010 AA2B     		cmp	r3, #170
 905 0012 1CD1     		bne	.L52
 236:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 237:.\main.c      ****             if(byteCount == 34)
 906              		.loc 1 237 0
 907 0014 1B4B     		ldr	r3, .L56
 908 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 0018 222B     		cmp	r3, #34
 910 001a 11D1     		bne	.L53
 238:.\main.c      ****             {
 239:.\main.c      ****                 system_state = buffer_state;
 911              		.loc 1 239 0
 912 001c 1A4B     		ldr	r3, .L56+4
 913 001e 1B4A     		ldr	r2, .L56+8
 914 0020 1568     		ldr	r5, [r2]	@ unaligned
 915 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 916 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 917 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 918 0028 1D60     		str	r5, [r3]	@ unaligned
 919 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 920 002c 9860     		str	r0, [r3, #8]	@ unaligned
 921 002e D960     		str	r1, [r3, #12]	@ unaligned
 922 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 923 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 924 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 925 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 926 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 927 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 928 003c 9861     		str	r0, [r3, #24]	@ unaligned
 929 003e D961     		str	r1, [r3, #28]	@ unaligned
 930              	.L53:
 240:.\main.c      ****             }
 241:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 931              		.loc 1 241 0
 932 0040 104B     		ldr	r3, .L56
 933 0042 0222     		movs	r2, #2
 934 0044 1A70     		strb	r2, [r3]
 242:.\main.c      ****             flag_rx = 0;
 935              		.loc 1 242 0
 936 0046 124B     		ldr	r3, .L56+12
 937 0048 0022     		movs	r2, #0
 938 004a 1A70     		strb	r2, [r3]
 939 004c 16E0     		b	.L51
 940              	.L52:
 243:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 244:.\main.c      ****         }
 245:.\main.c      ****         else
 246:.\main.c      ****         {
 247:.\main.c      ****             packet[byteCount % 2] = rf_char;
 941              		.loc 1 247 0
 942 004e 0D4B     		ldr	r3, .L56
 943 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944 0052 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 22


 945 0056 0F49     		ldr	r1, .L56+16
 946 0058 FA79     		ldrb	r2, [r7, #7]
 947 005a CA54     		strb	r2, [r1, r3]
 248:.\main.c      ****            
 249:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 948              		.loc 1 249 0
 949 005c 094B     		ldr	r3, .L56
 950 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 0060 03F00103 		and	r3, r3, #1
 952 0064 DBB2     		uxtb	r3, r3
 953 0066 002B     		cmp	r3, #0
 954 0068 02D0     		beq	.L55
 250:.\main.c      ****             {
 251:.\main.c      ****                 flag_rx = 1;
 955              		.loc 1 251 0
 956 006a 094B     		ldr	r3, .L56+12
 957 006c 0122     		movs	r2, #1
 958 006e 1A70     		strb	r2, [r3]
 959              	.L55:
 252:.\main.c      ****             }
 253:.\main.c      ****             byteCount = (byteCount + 1);
 960              		.loc 1 253 0
 961 0070 044B     		ldr	r3, .L56
 962 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 0074 0133     		adds	r3, r3, #1
 964 0076 DAB2     		uxtb	r2, r3
 965 0078 024B     		ldr	r3, .L56
 966 007a 1A70     		strb	r2, [r3]
 967              	.L51:
 254:.\main.c      ****         }
 255:.\main.c      **** }
 968              		.loc 1 255 0
 969 007c 0837     		adds	r7, r7, #8
 970              		.cfi_def_cfa_offset 16
 971 007e BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0080 B0BD     		pop	{r4, r5, r7, pc}
 975              	.L57:
 976 0082 00BF     		.align	2
 977              	.L56:
 978 0084 00000000 		.word	byteCount
 979 0088 00000000 		.word	system_state
 980 008c 00000000 		.word	buffer_state
 981 0090 00000000 		.word	flag_rx
 982 0094 00000000 		.word	packet
 983              		.cfi_endproc
 984              	.LFE76:
 985              		.size	rxInt, .-rxInt
 986              		.section	.text.BT_rxInt,"ax",%progbits
 987              		.align	2
 988              		.global	BT_rxInt
 989              		.thumb
 990              		.thumb_func
 991              		.type	BT_rxInt, %function
 992              	BT_rxInt:
 993              	.LFB77:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 23


 256:.\main.c      **** 
 257:.\main.c      **** CY_ISR(BT_rxInt)
 258:.\main.c      **** {
 994              		.loc 1 258 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 259:.\main.c      ****     char rf_char = UART_GetChar();
 1006              		.loc 1 259 0
 1007 0006 FFF7FEFF 		bl	UART_GetChar
 1008 000a 0346     		mov	r3, r0
 1009 000c FB71     		strb	r3, [r7, #7]
 260:.\main.c      ****     switch(rf_char){
 1010              		.loc 1 260 0
 1011 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1012 0010 613B     		subs	r3, r3, #97
 1013 0012 162B     		cmp	r3, #22
 1014 0014 3FD8     		bhi	.L58
 1015 0016 01A2     		adr	r2, .L61
 1016 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1017              		.p2align 2
 1018              	.L61:
 1019 001c 79000000 		.word	.L60+1
 1020 0020 97000000 		.word	.L58+1
 1021 0024 97000000 		.word	.L58+1
 1022 0028 8B000000 		.word	.L62+1
 1023 002c 97000000 		.word	.L58+1
 1024 0030 91000000 		.word	.L63+1
 1025 0034 97000000 		.word	.L58+1
 1026 0038 97000000 		.word	.L58+1
 1027 003c 97000000 		.word	.L58+1
 1028 0040 97000000 		.word	.L58+1
 1029 0044 97000000 		.word	.L58+1
 1030 0048 97000000 		.word	.L58+1
 1031 004c 97000000 		.word	.L58+1
 1032 0050 97000000 		.word	.L58+1
 1033 0054 97000000 		.word	.L58+1
 1034 0058 97000000 		.word	.L58+1
 1035 005c 97000000 		.word	.L58+1
 1036 0060 97000000 		.word	.L58+1
 1037 0064 85000000 		.word	.L64+1
 1038 0068 97000000 		.word	.L58+1
 1039 006c 97000000 		.word	.L58+1
 1040 0070 97000000 		.word	.L58+1
 1041 0074 7F000000 		.word	.L65+1
 1042              		.p2align 1
 1043              	.L60:
 261:.\main.c      ****     case 'a':
 262:.\main.c      ****         initTurnLeft();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 24


 1044              		.loc 1 262 0
 1045 0078 FFF7FEFF 		bl	initTurnLeft
 263:.\main.c      ****         break;
 1046              		.loc 1 263 0
 1047 007c 0BE0     		b	.L58
 1048              	.L65:
 264:.\main.c      ****     case 'w':
 265:.\main.c      ****         initForward();
 1049              		.loc 1 265 0
 1050 007e FFF7FEFF 		bl	initForward
 266:.\main.c      ****         break;
 1051              		.loc 1 266 0
 1052 0082 08E0     		b	.L58
 1053              	.L64:
 267:.\main.c      ****     case 's': 
 268:.\main.c      ****         reverseDirection();
 1054              		.loc 1 268 0
 1055 0084 FFF7FEFF 		bl	reverseDirection
 269:.\main.c      ****         break;
 1056              		.loc 1 269 0
 1057 0088 05E0     		b	.L58
 1058              	.L62:
 270:.\main.c      ****     case 'd':
 271:.\main.c      ****         initTurnRight();
 1059              		.loc 1 271 0
 1060 008a FFF7FEFF 		bl	initTurnRight
 272:.\main.c      ****         break;
 1061              		.loc 1 272 0
 1062 008e 02E0     		b	.L58
 1063              	.L63:
 273:.\main.c      ****     case 'f':
 274:.\main.c      ****         initBrake();
 1064              		.loc 1 274 0
 1065 0090 FFF7FEFF 		bl	initBrake
 275:.\main.c      ****         break;
 1066              		.loc 1 275 0
 1067 0094 00BF     		nop
 1068              	.L58:
 276:.\main.c      ****     }
 277:.\main.c      **** }
 1069              		.loc 1 277 0
 1070 0096 0837     		adds	r7, r7, #8
 1071              		.cfi_def_cfa_offset 8
 1072 0098 BD46     		mov	sp, r7
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 009a 80BD     		pop	{r7, pc}
 1076              		.cfi_endproc
 1077              	.LFE77:
 1078              		.size	BT_rxInt, .-BT_rxInt
 1079              		.section	.text.BT_txInt,"ax",%progbits
 1080              		.align	2
 1081              		.global	BT_txInt
 1082              		.thumb
 1083              		.thumb_func
 1084              		.type	BT_txInt, %function
 1085              	BT_txInt:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 25


 1086              	.LFB78:
 278:.\main.c      **** 
 279:.\main.c      **** //BT
 280:.\main.c      **** CY_ISR(BT_txInt)
 281:.\main.c      **** {
 1087              		.loc 1 281 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 1, uses_anonymous_args = 0
 1091              		@ link register save eliminated.
 1092 0000 80B4     		push	{r7}
 1093              		.cfi_def_cfa_offset 4
 1094              		.cfi_offset 7, -4
 1095 0002 00AF     		add	r7, sp, #0
 1096              		.cfi_def_cfa_register 7
 282:.\main.c      ****     
 283:.\main.c      **** }
 1097              		.loc 1 283 0
 1098 0004 BD46     		mov	sp, r7
 1099              		.cfi_def_cfa_register 13
 1100              		@ sp needed
 1101 0006 5DF8047B 		ldr	r7, [sp], #4
 1102              		.cfi_restore 7
 1103              		.cfi_def_cfa_offset 0
 1104 000a 7047     		bx	lr
 1105              		.cfi_endproc
 1106              	.LFE78:
 1107              		.size	BT_txInt, .-BT_txInt
 1108              		.section	.text.adc_isr,"ax",%progbits
 1109              		.align	2
 1110              		.global	adc_isr
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	adc_isr, %function
 1114              	adc_isr:
 1115              	.LFB79:
 284:.\main.c      **** 
 285:.\main.c      **** //ADC:
 286:.\main.c      **** CY_ISR (adc_isr)
 287:.\main.c      **** {
 1116              		.loc 1 287 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 00AF     		add	r7, sp, #0
 1125              		.cfi_def_cfa_register 7
 288:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 289:.\main.c      ****     adc_result = ADC_GetResult16();
 1126              		.loc 1 289 0
 1127 0004 FFF7FEFF 		bl	ADC_GetResult16
 1128 0008 0346     		mov	r3, r0
 1129 000a 1A46     		mov	r2, r3
 1130 000c 044B     		ldr	r3, .L68
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 26


 1131 000e 1A80     		strh	r2, [r3]	@ movhi
 290:.\main.c      ****     flag_receive_ADC = 1;
 1132              		.loc 1 290 0
 1133 0010 044B     		ldr	r3, .L68+4
 1134 0012 0122     		movs	r2, #1
 1135 0014 1A70     		strb	r2, [r3]
 291:.\main.c      ****     flag_print_rf = 1;
 1136              		.loc 1 291 0
 1137 0016 044B     		ldr	r3, .L68+8
 1138 0018 0122     		movs	r2, #1
 1139 001a 1A70     		strb	r2, [r3]
 292:.\main.c      ****     //LED_Write(~LED_Read());
 293:.\main.c      **** }
 1140              		.loc 1 293 0
 1141 001c 80BD     		pop	{r7, pc}
 1142              	.L69:
 1143 001e 00BF     		.align	2
 1144              	.L68:
 1145 0020 00000000 		.word	adc_result
 1146 0024 00000000 		.word	flag_receive_ADC
 1147 0028 00000000 		.word	flag_print_rf
 1148              		.cfi_endproc
 1149              	.LFE79:
 1150              		.size	adc_isr, .-adc_isr
 1151              		.section	.text.isr_quad1,"ax",%progbits
 1152              		.align	2
 1153              		.global	isr_quad1
 1154              		.thumb
 1155              		.thumb_func
 1156              		.type	isr_quad1, %function
 1157              	isr_quad1:
 1158              	.LFB80:
 294:.\main.c      **** 
 295:.\main.c      **** CY_ISR (isr_quad1)
 296:.\main.c      **** {
 1159              		.loc 1 296 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 1, uses_anonymous_args = 0
 1163 0000 80B5     		push	{r7, lr}
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 297:.\main.c      ****     //LED_Write(~LED_Read());
 298:.\main.c      ****     last_quad_count1 = quad_count1;
 1169              		.loc 1 298 0
 1170 0004 244B     		ldr	r3, .L72
 1171 0006 1A88     		ldrh	r2, [r3]
 1172 0008 244B     		ldr	r3, .L72+4
 1173 000a 1A80     		strh	r2, [r3]	@ movhi
 299:.\main.c      ****     last_quad_count2 = quad_count2;
 1174              		.loc 1 299 0
 1175 000c 244B     		ldr	r3, .L72+8
 1176 000e 1A88     		ldrh	r2, [r3]
 1177 0010 244B     		ldr	r3, .L72+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 27


 1178 0012 1A80     		strh	r2, [r3]	@ movhi
 300:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 1179              		.loc 1 300 0
 1180 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1181 0018 0346     		mov	r3, r0
 1182 001a 1A46     		mov	r2, r3
 1183 001c 1E4B     		ldr	r3, .L72
 1184 001e 1A80     		strh	r2, [r3]	@ movhi
 301:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 1185              		.loc 1 301 0
 1186 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1187 0024 0346     		mov	r3, r0
 1188 0026 1A46     		mov	r2, r3
 1189 0028 1D4B     		ldr	r3, .L72+8
 1190 002a 1A80     		strh	r2, [r3]	@ movhi
 302:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 1191              		.loc 1 302 0
 1192 002c 1A4B     		ldr	r3, .L72
 1193 002e 1B88     		ldrh	r3, [r3]
 1194 0030 9AB2     		uxth	r2, r3
 1195 0032 1A4B     		ldr	r3, .L72+4
 1196 0034 1B88     		ldrh	r3, [r3]
 1197 0036 9BB2     		uxth	r3, r3
 1198 0038 D31A     		subs	r3, r2, r3
 1199 003a 9BB2     		uxth	r3, r3
 1200 003c 9AB2     		uxth	r2, r3
 1201 003e 1A4B     		ldr	r3, .L72+16
 1202 0040 1A80     		strh	r2, [r3]	@ movhi
 303:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 1203              		.loc 1 303 0
 1204 0042 174B     		ldr	r3, .L72+8
 1205 0044 1B88     		ldrh	r3, [r3]
 1206 0046 9AB2     		uxth	r2, r3
 1207 0048 164B     		ldr	r3, .L72+12
 1208 004a 1B88     		ldrh	r3, [r3]
 1209 004c 9BB2     		uxth	r3, r3
 1210 004e D31A     		subs	r3, r2, r3
 1211 0050 9BB2     		uxth	r3, r3
 1212 0052 9AB2     		uxth	r2, r3
 1213 0054 154B     		ldr	r3, .L72+20
 1214 0056 1A80     		strh	r2, [r3]	@ movhi
 304:.\main.c      ****     
 305:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 1215              		.loc 1 305 0
 1216 0058 0F4B     		ldr	r3, .L72
 1217 005a 1B88     		ldrh	r3, [r3]
 1218 005c 1BB2     		sxth	r3, r3
 1219 005e 40F6B832 		movw	r2, #3000
 1220 0062 9342     		cmp	r3, r2
 1221 0064 13DD     		ble	.L71
 1222              		.loc 1 305 0 is_stmt 0 discriminator 1
 1223 0066 124B     		ldr	r3, .L72+24
 1224 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 006a 012B     		cmp	r3, #1
 1226 006c 0FD0     		beq	.L71
 1227              		.loc 1 305 0 discriminator 2
 1228 006e 104B     		ldr	r3, .L72+24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 28


 1229 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0072 022B     		cmp	r3, #2
 1231 0074 0BD0     		beq	.L71
 306:.\main.c      ****     {
 307:.\main.c      ****         QuadDec_M1_SetCounter(0);
 1232              		.loc 1 307 0 is_stmt 1
 1233 0076 0020     		movs	r0, #0
 1234 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 308:.\main.c      ****         QuadDec_M2_SetCounter(0);
 1235              		.loc 1 308 0
 1236 007c 0020     		movs	r0, #0
 1237 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 309:.\main.c      ****         quad_count1 = 0;
 1238              		.loc 1 309 0
 1239 0082 054B     		ldr	r3, .L72
 1240 0084 0022     		movs	r2, #0
 1241 0086 1A80     		strh	r2, [r3]	@ movhi
 310:.\main.c      ****         quad_count2 = 0;
 1242              		.loc 1 310 0
 1243 0088 054B     		ldr	r3, .L72+8
 1244 008a 0022     		movs	r2, #0
 1245 008c 1A80     		strh	r2, [r3]	@ movhi
 1246              	.L71:
 311:.\main.c      ****     }
 312:.\main.c      **** 
 313:.\main.c      ****     flag_calc_wheelspeed = 1;
 1247              		.loc 1 313 0
 1248 008e 094B     		ldr	r3, .L72+28
 1249 0090 0122     		movs	r2, #1
 1250 0092 1A70     		strb	r2, [r3]
 314:.\main.c      **** }
 1251              		.loc 1 314 0
 1252 0094 80BD     		pop	{r7, pc}
 1253              	.L73:
 1254 0096 00BF     		.align	2
 1255              	.L72:
 1256 0098 00000000 		.word	quad_count1
 1257 009c 00000000 		.word	last_quad_count1
 1258 00a0 00000000 		.word	quad_count2
 1259 00a4 00000000 		.word	last_quad_count2
 1260 00a8 00000000 		.word	quad_diff1
 1261 00ac 00000000 		.word	quad_diff2
 1262 00b0 00000000 		.word	movement_state
 1263 00b4 00000000 		.word	flag_calc_wheelspeed
 1264              		.cfi_endproc
 1265              	.LFE80:
 1266              		.size	isr_quad1, .-isr_quad1
 1267              		.section	.text.isr_turn_timer,"ax",%progbits
 1268              		.align	2
 1269              		.global	isr_turn_timer
 1270              		.thumb
 1271              		.thumb_func
 1272              		.type	isr_turn_timer, %function
 1273              	isr_turn_timer:
 1274              	.LFB81:
 315:.\main.c      **** 
 316:.\main.c      **** CY_ISR(isr_turn_timer)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 29


 317:.\main.c      **** {
 1275              		.loc 1 317 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              		.cfi_def_cfa_offset 8
 1281              		.cfi_offset 7, -8
 1282              		.cfi_offset 14, -4
 1283 0002 00AF     		add	r7, sp, #0
 1284              		.cfi_def_cfa_register 7
 318:.\main.c      ****     if(movement_state == LTURN)
 1285              		.loc 1 318 0
 1286 0004 184B     		ldr	r3, .L78
 1287 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1288 0008 012B     		cmp	r3, #1
 1289 000a 14D1     		bne	.L75
 319:.\main.c      ****     {
 320:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 1290              		.loc 1 320 0
 1291 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1292 0010 0346     		mov	r3, r0
 1293 0012 1A46     		mov	r2, r3
 1294 0014 154B     		ldr	r3, .L78+4
 1295 0016 1B88     		ldrh	r3, [r3]
 1296 0018 1BB2     		sxth	r3, r3
 1297 001a D31A     		subs	r3, r2, r3
 1298 001c 002B     		cmp	r3, #0
 1299 001e B8BF     		it	lt
 1300 0020 5B42     		rsblt	r3, r3, #0
 1301 0022 CF2B     		cmp	r3, #207
 1302 0024 1FDD     		ble	.L74
 321:.\main.c      ****         {
 322:.\main.c      ****             //movement_state = STOPPED;
 323:.\main.c      ****             brakeMotor();
 1303              		.loc 1 323 0
 1304 0026 FFF7FEFF 		bl	brakeMotor
 324:.\main.c      ****             movement_state = DRIVE;
 1305              		.loc 1 324 0
 1306 002a 0F4B     		ldr	r3, .L78
 1307 002c 0022     		movs	r2, #0
 1308 002e 1A70     		strb	r2, [r3]
 325:.\main.c      ****             Timer_2_Stop();
 1309              		.loc 1 325 0
 1310 0030 FFF7FEFF 		bl	Timer_2_Stop
 1311 0034 17E0     		b	.L74
 1312              	.L75:
 326:.\main.c      ****         }
 327:.\main.c      ****     }
 328:.\main.c      ****     else if (movement_state == RTURN)
 1313              		.loc 1 328 0
 1314 0036 0C4B     		ldr	r3, .L78
 1315 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 003a 022B     		cmp	r3, #2
 1317 003c 13D1     		bne	.L74
 329:.\main.c      ****     {
 330:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 30


 1318              		.loc 1 330 0
 1319 003e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1320 0042 0346     		mov	r3, r0
 1321 0044 1A46     		mov	r2, r3
 1322 0046 094B     		ldr	r3, .L78+4
 1323 0048 1B88     		ldrh	r3, [r3]
 1324 004a 1BB2     		sxth	r3, r3
 1325 004c D31A     		subs	r3, r2, r3
 1326 004e 002B     		cmp	r3, #0
 1327 0050 B8BF     		it	lt
 1328 0052 5B42     		rsblt	r3, r3, #0
 1329 0054 CF2B     		cmp	r3, #207
 1330 0056 06DD     		ble	.L74
 331:.\main.c      ****         {
 332:.\main.c      ****             //movement_state = STOPPED;
 333:.\main.c      ****             brakeMotor();
 1331              		.loc 1 333 0
 1332 0058 FFF7FEFF 		bl	brakeMotor
 334:.\main.c      ****             movement_state = DRIVE;
 1333              		.loc 1 334 0
 1334 005c 024B     		ldr	r3, .L78
 1335 005e 0022     		movs	r2, #0
 1336 0060 1A70     		strb	r2, [r3]
 335:.\main.c      ****             Timer_2_Stop();
 1337              		.loc 1 335 0
 1338 0062 FFF7FEFF 		bl	Timer_2_Stop
 1339              	.L74:
 336:.\main.c      ****         }
 337:.\main.c      ****     }
 338:.\main.c      **** }
 1340              		.loc 1 338 0
 1341 0066 80BD     		pop	{r7, pc}
 1342              	.L79:
 1343              		.align	2
 1344              	.L78:
 1345 0068 00000000 		.word	movement_state
 1346 006c 00000000 		.word	start_turn_count
 1347              		.cfi_endproc
 1348              	.LFE81:
 1349              		.size	isr_turn_timer, .-isr_turn_timer
 1350              		.section	.text.Stop_on_line,"ax",%progbits
 1351              		.align	2
 1352              		.global	Stop_on_line
 1353              		.thumb
 1354              		.thumb_func
 1355              		.type	Stop_on_line, %function
 1356              	Stop_on_line:
 1357              	.LFB82:
 339:.\main.c      **** 
 340:.\main.c      **** 
 341:.\main.c      **** CY_ISR (Stop_on_line)
 342:.\main.c      **** {
 1358              		.loc 1 342 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 31


 1363              		.cfi_def_cfa_offset 8
 1364              		.cfi_offset 7, -8
 1365              		.cfi_offset 14, -4
 1366 0002 00AF     		add	r7, sp, #0
 1367              		.cfi_def_cfa_register 7
 343:.\main.c      ****     //movement_state = STOPPED;
 344:.\main.c      ****     if(movement_state != DRIVE) return;
 1368              		.loc 1 344 0
 1369 0004 034B     		ldr	r3, .L83
 1370 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 0008 002B     		cmp	r3, #0
 1372 000a 00D0     		beq	.L81
 1373 000c 01E0     		b	.L80
 1374              	.L81:
 345:.\main.c      ****     initTurnLeft();
 1375              		.loc 1 345 0
 1376 000e FFF7FEFF 		bl	initTurnLeft
 1377              	.L80:
 346:.\main.c      **** }
 1378              		.loc 1 346 0
 1379 0012 80BD     		pop	{r7, pc}
 1380              	.L84:
 1381              		.align	2
 1382              	.L83:
 1383 0014 00000000 		.word	movement_state
 1384              		.cfi_endproc
 1385              	.LFE82:
 1386              		.size	Stop_on_line, .-Stop_on_line
 1387              		.section	.rodata
 1388              		.align	2
 1389              	.LC0:
 1390 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1390      74696E67 
 1390      20726F62 
 1390      6F74210D 
 1390      0A00
 1391              		.section	.text.button,"ax",%progbits
 1392              		.align	2
 1393              		.global	button
 1394              		.thumb
 1395              		.thumb_func
 1396              		.type	button, %function
 1397              	button:
 1398              	.LFB83:
 347:.\main.c      **** 
 348:.\main.c      **** CY_ISR (button)
 349:.\main.c      **** {
 1399              		.loc 1 349 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0000 80B5     		push	{r7, lr}
 1404              		.cfi_def_cfa_offset 8
 1405              		.cfi_offset 7, -8
 1406              		.cfi_offset 14, -4
 1407 0002 00AF     		add	r7, sp, #0
 1408              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 32


 350:.\main.c      ****     if(BT_ENABLED)
 351:.\main.c      ****     {
 352:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1409              		.loc 1 352 0
 1410 0004 0348     		ldr	r0, .L86
 1411 0006 FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****     }
 354:.\main.c      ****     movement_state = DRIVE;
 1412              		.loc 1 354 0
 1413 000a 034B     		ldr	r3, .L86+4
 1414 000c 0022     		movs	r2, #0
 1415 000e 1A70     		strb	r2, [r3]
 355:.\main.c      **** }
 1416              		.loc 1 355 0
 1417 0010 80BD     		pop	{r7, pc}
 1418              	.L87:
 1419 0012 00BF     		.align	2
 1420              	.L86:
 1421 0014 00000000 		.word	.LC0
 1422 0018 00000000 		.word	movement_state
 1423              		.cfi_endproc
 1424              	.LFE83:
 1425              		.size	button, .-button
 1426              		.section	.text.isr_adcTimer,"ax",%progbits
 1427              		.align	2
 1428              		.global	isr_adcTimer
 1429              		.thumb
 1430              		.thumb_func
 1431              		.type	isr_adcTimer, %function
 1432              	isr_adcTimer:
 1433              	.LFB84:
 356:.\main.c      **** 
 357:.\main.c      **** CY_ISR(isr_adcTimer)
 358:.\main.c      **** {
 1434              		.loc 1 358 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 1, uses_anonymous_args = 0
 1438 0000 80B5     		push	{r7, lr}
 1439              		.cfi_def_cfa_offset 8
 1440              		.cfi_offset 7, -8
 1441              		.cfi_offset 14, -4
 1442 0002 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
 359:.\main.c      ****     ADC_StartConvert();
 1444              		.loc 1 359 0
 1445 0004 FFF7FEFF 		bl	ADC_StartConvert
 360:.\main.c      **** }
 1446              		.loc 1 360 0
 1447 0008 80BD     		pop	{r7, pc}
 1448              		.cfi_endproc
 1449              	.LFE84:
 1450              		.size	isr_adcTimer, .-isr_adcTimer
 1451 000a 00BF     		.section	.rodata
 1452 0012 0000     		.align	2
 1453              	.LC1:
 1454 0014 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 33


 1454      20636F75 
 1454      6E742031 
 1454      2069733A 
 1454      2025640A 
 1455 002a 0000     		.align	2
 1456              	.LC2:
 1457 002c 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 1457      20636F75 
 1457      6E742032 
 1457      2069733A 
 1457      2025640A 
 1458              		.global	__aeabi_i2d
 1459              		.global	__aeabi_dmul
 1460              		.global	__aeabi_d2iz
 1461              		.section	.text.Quad_Dec_response,"ax",%progbits
 1462              		.align	2
 1463              		.global	Quad_Dec_response
 1464              		.thumb
 1465              		.thumb_func
 1466              		.type	Quad_Dec_response, %function
 1467              	Quad_Dec_response:
 1468              	.LFB85:
 361:.\main.c      **** 
 362:.\main.c      **** void Quad_Dec_response()
 363:.\main.c      **** {
 1469              		.loc 1 363 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 144
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473 0000 B0B5     		push	{r4, r5, r7, lr}
 1474              		.cfi_def_cfa_offset 16
 1475              		.cfi_offset 4, -16
 1476              		.cfi_offset 5, -12
 1477              		.cfi_offset 7, -8
 1478              		.cfi_offset 14, -4
 1479 0002 A4B0     		sub	sp, sp, #144
 1480              		.cfi_def_cfa_offset 160
 1481 0004 00AF     		add	r7, sp, #0
 1482              		.cfi_def_cfa_register 7
 364:.\main.c      ****     //Check if the flag has been set
 365:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1483              		.loc 1 365 0
 1484 0006 6B4B     		ldr	r3, .L96
 1485 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1486 000a 002B     		cmp	r3, #0
 1487 000c 00F0CE80 		beq	.L89
 366:.\main.c      ****     flag_calc_wheelspeed = 0;
 1488              		.loc 1 366 0
 1489 0010 684B     		ldr	r3, .L96
 1490 0012 0022     		movs	r2, #0
 1491 0014 1A70     		strb	r2, [r3]
 367:.\main.c      ****     
 368:.\main.c      ****     char wheel_1_str [64];
 369:.\main.c      ****     char wheel_2_str [64];
 370:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 1492              		.loc 1 370 0
 1493 0016 684B     		ldr	r3, .L96+4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 34


 1494 0018 1B88     		ldrh	r3, [r3]
 1495 001a 1BB2     		sxth	r3, r3
 1496 001c 07F14402 		add	r2, r7, #68
 1497 0020 1046     		mov	r0, r2
 1498 0022 6649     		ldr	r1, .L96+8
 1499 0024 1A46     		mov	r2, r3
 1500 0026 FFF7FEFF 		bl	sprintf
 371:.\main.c      ****     //usbPutString(wheel_1_str);
 372:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 1501              		.loc 1 372 0
 1502 002a 654B     		ldr	r3, .L96+12
 1503 002c 1B88     		ldrh	r3, [r3]
 1504 002e 1BB2     		sxth	r3, r3
 1505 0030 3A1D     		adds	r2, r7, #4
 1506 0032 1046     		mov	r0, r2
 1507 0034 6349     		ldr	r1, .L96+16
 1508 0036 1A46     		mov	r2, r3
 1509 0038 FFF7FEFF 		bl	sprintf
 373:.\main.c      ****     
 374:.\main.c      ****     //usbPutString(wheel_2_str);
 375:.\main.c      ****     
 376:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1510              		.loc 1 376 0
 1511 003c 5E4B     		ldr	r3, .L96+4
 1512 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1513 0040 A7F88E30 		strh	r3, [r7, #142]	@ movhi
 377:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1514              		.loc 1 377 0
 1515 0044 5E4B     		ldr	r3, .L96+12
 1516 0046 1B88     		ldrh	r3, [r3]	@ movhi
 1517 0048 A7F88C30 		strh	r3, [r7, #140]	@ movhi
 378:.\main.c      **** 
 379:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1518              		.loc 1 379 0
 1519 004c 5E4B     		ldr	r3, .L96+20
 1520 004e 1B88     		ldrh	r3, [r3]
 1521 0050 1AB2     		sxth	r2, r3
 1522 0052 B7F98E30 		ldrsh	r3, [r7, #142]
 1523 0056 002B     		cmp	r3, #0
 1524 0058 B8BF     		it	lt
 1525 005a 5B42     		rsblt	r3, r3, #0
 1526 005c D31A     		subs	r3, r2, r3
 1527 005e C7F88830 		str	r3, [r7, #136]
 380:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1528              		.loc 1 380 0
 1529 0062 D7F88830 		ldr	r3, [r7, #136]
 1530 0066 83EAE372 		eor	r2, r3, r3, asr #31
 1531 006a A2EBE372 		sub	r2, r2, r3, asr #31
 1532 006e D7F88830 		ldr	r3, [r7, #136]
 1533 0072 92FBF3F3 		sdiv	r3, r2, r3
 1534 0076 1846     		mov	r0, r3
 1535 0078 FFF7FEFF 		bl	__aeabi_i2d
 1536 007c 0446     		mov	r4, r0
 1537 007e 0D46     		mov	r5, r1
 1538 0080 D7F88830 		ldr	r3, [r7, #136]
 1539 0084 002B     		cmp	r3, #0
 1540 0086 B8BF     		it	lt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 35


 1541 0088 5B42     		rsblt	r3, r3, #0
 1542 008a 1846     		mov	r0, r3
 1543 008c FFF7FEFF 		bl	__aeabi_i2d
 1544 0090 0246     		mov	r2, r0
 1545 0092 0B46     		mov	r3, r1
 1546 0094 1046     		mov	r0, r2
 1547 0096 1946     		mov	r1, r3
 1548 0098 FFF7FEFF 		bl	sqrt
 1549 009c 0246     		mov	r2, r0
 1550 009e 0B46     		mov	r3, r1
 1551 00a0 2046     		mov	r0, r4
 1552 00a2 2946     		mov	r1, r5
 1553 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1554 00a8 0246     		mov	r2, r0
 1555 00aa 0B46     		mov	r3, r1
 1556 00ac 1046     		mov	r0, r2
 1557 00ae 1946     		mov	r1, r3
 1558 00b0 FFF7FEFF 		bl	__aeabi_d2iz
 1559 00b4 0346     		mov	r3, r0
 1560 00b6 C7F88430 		str	r3, [r7, #132]
 381:.\main.c      ****     left_duty_cycle = left_duty_cycle + nextSpeed;
 1561              		.loc 1 381 0
 1562 00ba D7F88430 		ldr	r3, [r7, #132]
 1563 00be 9AB2     		uxth	r2, r3
 1564 00c0 424B     		ldr	r3, .L96+24
 1565 00c2 1B88     		ldrh	r3, [r3]
 1566 00c4 9BB2     		uxth	r3, r3
 1567 00c6 1344     		add	r3, r3, r2
 1568 00c8 9BB2     		uxth	r3, r3
 1569 00ca 9AB2     		uxth	r2, r3
 1570 00cc 3F4B     		ldr	r3, .L96+24
 1571 00ce 1A80     		strh	r2, [r3]	@ movhi
 382:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 1572              		.loc 1 382 0
 1573 00d0 3F4B     		ldr	r3, .L96+28
 1574 00d2 1B88     		ldrh	r3, [r3]
 1575 00d4 1AB2     		sxth	r2, r3
 1576 00d6 B7F98C30 		ldrsh	r3, [r7, #140]
 1577 00da 002B     		cmp	r3, #0
 1578 00dc B8BF     		it	lt
 1579 00de 5B42     		rsblt	r3, r3, #0
 1580 00e0 D31A     		subs	r3, r2, r3
 1581 00e2 C7F88830 		str	r3, [r7, #136]
 383:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1582              		.loc 1 383 0
 1583 00e6 D7F88830 		ldr	r3, [r7, #136]
 1584 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 1585 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 1586 00f2 D7F88830 		ldr	r3, [r7, #136]
 1587 00f6 92FBF3F3 		sdiv	r3, r2, r3
 1588 00fa 1846     		mov	r0, r3
 1589 00fc FFF7FEFF 		bl	__aeabi_i2d
 1590 0100 0446     		mov	r4, r0
 1591 0102 0D46     		mov	r5, r1
 1592 0104 D7F88830 		ldr	r3, [r7, #136]
 1593 0108 002B     		cmp	r3, #0
 1594 010a B8BF     		it	lt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 36


 1595 010c 5B42     		rsblt	r3, r3, #0
 1596 010e 1846     		mov	r0, r3
 1597 0110 FFF7FEFF 		bl	__aeabi_i2d
 1598 0114 0246     		mov	r2, r0
 1599 0116 0B46     		mov	r3, r1
 1600 0118 1046     		mov	r0, r2
 1601 011a 1946     		mov	r1, r3
 1602 011c FFF7FEFF 		bl	sqrt
 1603 0120 0246     		mov	r2, r0
 1604 0122 0B46     		mov	r3, r1
 1605 0124 2046     		mov	r0, r4
 1606 0126 2946     		mov	r1, r5
 1607 0128 FFF7FEFF 		bl	__aeabi_dmul
 1608 012c 0246     		mov	r2, r0
 1609 012e 0B46     		mov	r3, r1
 1610 0130 1046     		mov	r0, r2
 1611 0132 1946     		mov	r1, r3
 1612 0134 FFF7FEFF 		bl	__aeabi_d2iz
 1613 0138 0346     		mov	r3, r0
 1614 013a C7F88430 		str	r3, [r7, #132]
 384:.\main.c      ****     right_duty_cycle = right_duty_cycle + nextSpeed;
 1615              		.loc 1 384 0
 1616 013e D7F88430 		ldr	r3, [r7, #132]
 1617 0142 9AB2     		uxth	r2, r3
 1618 0144 234B     		ldr	r3, .L96+32
 1619 0146 1B88     		ldrh	r3, [r3]
 1620 0148 9BB2     		uxth	r3, r3
 1621 014a 1344     		add	r3, r3, r2
 1622 014c 9BB2     		uxth	r3, r3
 1623 014e 9AB2     		uxth	r2, r3
 1624 0150 204B     		ldr	r3, .L96+32
 1625 0152 1A80     		strh	r2, [r3]	@ movhi
 385:.\main.c      ****     
 386:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1626              		.loc 1 386 0
 1627 0154 1F4B     		ldr	r3, .L96+32
 1628 0156 1B88     		ldrh	r3, [r3]
 1629 0158 1BB2     		sxth	r3, r3
 1630 015a 002B     		cmp	r3, #0
 1631 015c 02DA     		bge	.L92
 1632              		.loc 1 386 0 is_stmt 0 discriminator 1
 1633 015e 1D4B     		ldr	r3, .L96+32
 1634 0160 0022     		movs	r2, #0
 1635 0162 1A80     		strh	r2, [r3]	@ movhi
 1636              	.L92:
 387:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1637              		.loc 1 387 0 is_stmt 1
 1638 0164 194B     		ldr	r3, .L96+24
 1639 0166 1B88     		ldrh	r3, [r3]
 1640 0168 1BB2     		sxth	r3, r3
 1641 016a 002B     		cmp	r3, #0
 1642 016c 02DA     		bge	.L93
 1643              		.loc 1 387 0 is_stmt 0 discriminator 1
 1644 016e 174B     		ldr	r3, .L96+24
 1645 0170 0022     		movs	r2, #0
 1646 0172 1A80     		strh	r2, [r3]	@ movhi
 1647              	.L93:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 37


 388:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1648              		.loc 1 388 0 is_stmt 1
 1649 0174 174B     		ldr	r3, .L96+32
 1650 0176 1B88     		ldrh	r3, [r3]
 1651 0178 1BB2     		sxth	r3, r3
 1652 017a 642B     		cmp	r3, #100
 1653 017c 02DD     		ble	.L94
 1654              		.loc 1 388 0 is_stmt 0 discriminator 1
 1655 017e 154B     		ldr	r3, .L96+32
 1656 0180 6422     		movs	r2, #100
 1657 0182 1A80     		strh	r2, [r3]	@ movhi
 1658              	.L94:
 389:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 1659              		.loc 1 389 0 is_stmt 1
 1660 0184 114B     		ldr	r3, .L96+24
 1661 0186 1B88     		ldrh	r3, [r3]
 1662 0188 1BB2     		sxth	r3, r3
 1663 018a 642B     		cmp	r3, #100
 1664 018c 02DD     		ble	.L95
 1665              		.loc 1 389 0 is_stmt 0 discriminator 1
 1666 018e 0F4B     		ldr	r3, .L96+24
 1667 0190 6422     		movs	r2, #100
 1668 0192 1A80     		strh	r2, [r3]	@ movhi
 1669              	.L95:
 390:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 1670              		.loc 1 390 0 is_stmt 1
 1671 0194 0D4B     		ldr	r3, .L96+24
 1672 0196 1B88     		ldrh	r3, [r3]
 1673 0198 DBB2     		uxtb	r3, r3
 1674 019a 1846     		mov	r0, r3
 1675 019c FFF7FEFF 		bl	PWM_1_WriteCompare
 391:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 1676              		.loc 1 391 0
 1677 01a0 0C4B     		ldr	r3, .L96+32
 1678 01a2 1B88     		ldrh	r3, [r3]
 1679 01a4 DBB2     		uxtb	r3, r3
 1680 01a6 1846     		mov	r0, r3
 1681 01a8 FFF7FEFF 		bl	PWM_2_WriteCompare
 1682              	.L89:
 392:.\main.c      **** }
 1683              		.loc 1 392 0
 1684 01ac 9037     		adds	r7, r7, #144
 1685              		.cfi_def_cfa_offset 16
 1686 01ae BD46     		mov	sp, r7
 1687              		.cfi_def_cfa_register 13
 1688              		@ sp needed
 1689 01b0 B0BD     		pop	{r4, r5, r7, pc}
 1690              	.L97:
 1691 01b2 00BF     		.align	2
 1692              	.L96:
 1693 01b4 00000000 		.word	flag_calc_wheelspeed
 1694 01b8 00000000 		.word	quad_diff1
 1695 01bc 14000000 		.word	.LC1
 1696 01c0 00000000 		.word	quad_diff2
 1697 01c4 2C000000 		.word	.LC2
 1698 01c8 00000000 		.word	leftSpeedLimit
 1699 01cc 00000000 		.word	left_duty_cycle
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 38


 1700 01d0 00000000 		.word	rightSpeedLimit
 1701 01d4 00000000 		.word	right_duty_cycle
 1702              		.cfi_endproc
 1703              	.LFE85:
 1704              		.size	Quad_Dec_response, .-Quad_Dec_response
 1705              		.global	__aeabi_i2f
 1706              		.global	__aeabi_fmul
 1707              		.global	__aeabi_fadd
 1708              		.global	__aeabi_f2iz
 1709              		.section	.rodata
 1710 0042 0000     		.align	2
 1711              	.LC3:
 1712 0044 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 1712      65727920 
 1712      566F6C74 
 1712      6167653A 
 1712      2025646D 
 1713              		.section	.text.print_ADC,"ax",%progbits
 1714              		.align	2
 1715              		.global	print_ADC
 1716              		.thumb
 1717              		.thumb_func
 1718              		.type	print_ADC, %function
 1719              	print_ADC:
 1720              	.LFB86:
 393:.\main.c      **** 
 394:.\main.c      **** void print_ADC()
 395:.\main.c      **** {
 1721              		.loc 1 395 0
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 24
 1724              		@ frame_needed = 1, uses_anonymous_args = 0
 1725 0000 80B5     		push	{r7, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 7, -8
 1728              		.cfi_offset 14, -4
 1729 0002 86B0     		sub	sp, sp, #24
 1730              		.cfi_def_cfa_offset 32
 1731 0004 00AF     		add	r7, sp, #0
 1732              		.cfi_def_cfa_register 7
 396:.\main.c      ****    //usbPutString("HII\n");
 397:.\main.c      ****     if(flag_receive_ADC == 1)
 1733              		.loc 1 397 0
 1734 0006 274B     		ldr	r3, .L101
 1735 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1736 000a 012B     		cmp	r3, #1
 1737 000c 46D1     		bne	.L98
 1738              	.LBB3:
 398:.\main.c      ****     {
 399:.\main.c      ****         //usbPutString("AAA\r\n");
 400:.\main.c      ****         flag_receive_ADC = 0;
 1739              		.loc 1 400 0
 1740 000e 254B     		ldr	r3, .L101
 1741 0010 0022     		movs	r2, #0
 1742 0012 1A70     		strb	r2, [r3]
 401:.\main.c      ****         
 402:.\main.c      ****        // int8 channel = ADC_
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 39


 403:.\main.c      ****         float scalingFactor = 0.972;
 1743              		.loc 1 403 0
 1744 0014 244B     		ldr	r3, .L101+4
 1745 0016 7B61     		str	r3, [r7, #20]	@ float
 404:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 1746              		.loc 1 404 0
 1747 0018 244B     		ldr	r3, .L101+8
 1748 001a 1B88     		ldrh	r3, [r3]
 1749 001c 1BB2     		sxth	r3, r3
 1750 001e 41F28832 		movw	r2, #5000
 1751 0022 02FB03F3 		mul	r3, r2, r3
 1752 0026 002B     		cmp	r3, #0
 1753 0028 01DA     		bge	.L100
 1754 002a 03F6FF73 		addw	r3, r3, #4095
 1755              	.L100:
 1756 002e 1B13     		asrs	r3, r3, #12
 1757 0030 1846     		mov	r0, r3
 1758 0032 FFF7FEFF 		bl	__aeabi_i2f
 1759 0036 0346     		mov	r3, r0
 1760 0038 1846     		mov	r0, r3
 1761 003a 7969     		ldr	r1, [r7, #20]	@ float
 1762 003c FFF7FEFF 		bl	__aeabi_fmul
 1763 0040 0346     		mov	r3, r0
 1764 0042 1846     		mov	r0, r3
 1765 0044 1946     		mov	r1, r3
 1766 0046 FFF7FEFF 		bl	__aeabi_fadd
 1767 004a 0346     		mov	r3, r0
 1768 004c 1846     		mov	r0, r3
 1769 004e FFF7FEFF 		bl	__aeabi_f2iz
 1770 0052 0346     		mov	r3, r0
 1771 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 405:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 1772              		.loc 1 405 0
 1773 0056 B7F91220 		ldrsh	r2, [r7, #18]
 1774 005a 154B     		ldr	r3, .L101+12
 1775 005c 1B88     		ldrh	r3, [r3]
 1776 005e 1BB2     		sxth	r3, r3
 1777 0060 1A44     		add	r2, r2, r3
 1778 0062 144B     		ldr	r3, .L101+16
 1779 0064 1B88     		ldrh	r3, [r3]
 1780 0066 1BB2     		sxth	r3, r3
 1781 0068 1344     		add	r3, r3, r2
 1782 006a 134A     		ldr	r2, .L101+20
 1783 006c 82FB0312 		smull	r1, r2, r2, r3
 1784 0070 DB17     		asrs	r3, r3, #31
 1785 0072 D31A     		subs	r3, r2, r3
 1786 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 406:.\main.c      ****         prevVoltage2 = prevVoltage;
 1787              		.loc 1 406 0
 1788 0076 0E4B     		ldr	r3, .L101+12
 1789 0078 1A88     		ldrh	r2, [r3]
 1790 007a 0E4B     		ldr	r3, .L101+16
 1791 007c 1A80     		strh	r2, [r3]	@ movhi
 407:.\main.c      ****         prevVoltage = converted_val;
 1792              		.loc 1 407 0
 1793 007e 0C4A     		ldr	r2, .L101+12
 1794 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 40


 1795 0082 1380     		strh	r3, [r2]	@ movhi
 408:.\main.c      ****         
 409:.\main.c      ****         char result_str[16];
 410:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 1796              		.loc 1 410 0
 1797 0084 B7F91230 		ldrsh	r3, [r7, #18]
 1798 0088 3A46     		mov	r2, r7
 1799 008a 1046     		mov	r0, r2
 1800 008c 0B49     		ldr	r1, .L101+24
 1801 008e 1A46     		mov	r2, r3
 1802 0090 FFF7FEFF 		bl	sprintf
 411:.\main.c      ****         
 412:.\main.c      ****         usbPutString(result_str);
 1803              		.loc 1 412 0
 1804 0094 3B46     		mov	r3, r7
 1805 0096 1846     		mov	r0, r3
 1806 0098 FFF7FEFF 		bl	usbPutString
 1807              	.L98:
 1808              	.LBE3:
 413:.\main.c      ****     }
 414:.\main.c      **** }
 1809              		.loc 1 414 0
 1810 009c 1837     		adds	r7, r7, #24
 1811              		.cfi_def_cfa_offset 8
 1812 009e BD46     		mov	sp, r7
 1813              		.cfi_def_cfa_register 13
 1814              		@ sp needed
 1815 00a0 80BD     		pop	{r7, pc}
 1816              	.L102:
 1817 00a2 00BF     		.align	2
 1818              	.L101:
 1819 00a4 00000000 		.word	flag_receive_ADC
 1820 00a8 FED4783F 		.word	1064883454
 1821 00ac 00000000 		.word	adc_result
 1822 00b0 00000000 		.word	prevVoltage
 1823 00b4 00000000 		.word	prevVoltage2
 1824 00b8 56555555 		.word	1431655766
 1825 00bc 44000000 		.word	.LC3
 1826              		.cfi_endproc
 1827              	.LFE86:
 1828              		.size	print_ADC, .-print_ADC
 1829              		.section	.rodata
 1830              		.align	2
 1831              	.LC4:
 1832 005c 52535349 		.ascii	"RSSI:\000"
 1832      3A00
 1833 0062 0000     		.align	2
 1834              	.LC5:
 1835 0064 25640D0A 		.ascii	"%d\015\012\000"
 1835      00
 1836 0069 000000   		.align	2
 1837              	.LC6:
 1838 006c 726F626F 		.ascii	"robot_x:\000"
 1838      745F783A 
 1838      00
 1839 0075 000000   		.align	2
 1840              	.LC7:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 41


 1841 0078 726F626F 		.ascii	"robot_y:\000"
 1841      745F793A 
 1841      00
 1842 0081 000000   		.align	2
 1843              	.LC8:
 1844 0084 726F626F 		.ascii	"robot_dir:\000"
 1844      745F6469 
 1844      723A00
 1845 008f 00       		.section	.text.print_RF,"ax",%progbits
 1846              		.align	2
 1847              		.global	print_RF
 1848              		.thumb
 1849              		.thumb_func
 1850              		.type	print_RF, %function
 1851              	print_RF:
 1852              	.LFB87:
 415:.\main.c      **** 
 416:.\main.c      **** void print_RF()
 417:.\main.c      **** {
 1853              		.loc 1 417 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 16
 1856              		@ frame_needed = 1, uses_anonymous_args = 0
 1857 0000 80B5     		push	{r7, lr}
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 7, -8
 1860              		.cfi_offset 14, -4
 1861 0002 84B0     		sub	sp, sp, #16
 1862              		.cfi_def_cfa_offset 24
 1863 0004 00AF     		add	r7, sp, #0
 1864              		.cfi_def_cfa_register 7
 418:.\main.c      ****     if(flag_print_rf == 1)
 1865              		.loc 1 418 0
 1866 0006 254B     		ldr	r3, .L105
 1867 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1868 000a 012B     		cmp	r3, #1
 1869 000c 42D1     		bne	.L103
 1870              	.LBB4:
 419:.\main.c      ****     {
 420:.\main.c      ****         char printString[16];
 421:.\main.c      ****         flag_print_rf = 0;
 1871              		.loc 1 421 0
 1872 000e 234B     		ldr	r3, .L105
 1873 0010 0022     		movs	r2, #0
 1874 0012 1A70     		strb	r2, [r3]
 422:.\main.c      ****         usbPutString("RSSI:");
 1875              		.loc 1 422 0
 1876 0014 2248     		ldr	r0, .L105+4
 1877 0016 FFF7FEFF 		bl	usbPutString
 423:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 1878              		.loc 1 423 0
 1879 001a 224B     		ldr	r3, .L105+8
 1880 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1881 001e 5BB2     		sxtb	r3, r3
 1882 0020 3A46     		mov	r2, r7
 1883 0022 1046     		mov	r0, r2
 1884 0024 2049     		ldr	r1, .L105+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 42


 1885 0026 1A46     		mov	r2, r3
 1886 0028 FFF7FEFF 		bl	sprintf
 424:.\main.c      ****         usbPutString(printString);
 1887              		.loc 1 424 0
 1888 002c 3B46     		mov	r3, r7
 1889 002e 1846     		mov	r0, r3
 1890 0030 FFF7FEFF 		bl	usbPutString
 425:.\main.c      ****         usbPutString("robot_x:");
 1891              		.loc 1 425 0
 1892 0034 1D48     		ldr	r0, .L105+16
 1893 0036 FFF7FEFF 		bl	usbPutString
 426:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 1894              		.loc 1 426 0
 1895 003a 1A4B     		ldr	r3, .L105+8
 1896 003c 5B88     		ldrh	r3, [r3, #2]
 1897 003e 1BB2     		sxth	r3, r3
 1898 0040 3A46     		mov	r2, r7
 1899 0042 1046     		mov	r0, r2
 1900 0044 1849     		ldr	r1, .L105+12
 1901 0046 1A46     		mov	r2, r3
 1902 0048 FFF7FEFF 		bl	sprintf
 427:.\main.c      ****         usbPutString(printString);
 1903              		.loc 1 427 0
 1904 004c 3B46     		mov	r3, r7
 1905 004e 1846     		mov	r0, r3
 1906 0050 FFF7FEFF 		bl	usbPutString
 428:.\main.c      ****         usbPutString("robot_y:");
 1907              		.loc 1 428 0
 1908 0054 1648     		ldr	r0, .L105+20
 1909 0056 FFF7FEFF 		bl	usbPutString
 429:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 1910              		.loc 1 429 0
 1911 005a 124B     		ldr	r3, .L105+8
 1912 005c 9B88     		ldrh	r3, [r3, #4]
 1913 005e 1BB2     		sxth	r3, r3
 1914 0060 3A46     		mov	r2, r7
 1915 0062 1046     		mov	r0, r2
 1916 0064 1049     		ldr	r1, .L105+12
 1917 0066 1A46     		mov	r2, r3
 1918 0068 FFF7FEFF 		bl	sprintf
 430:.\main.c      ****         usbPutString(printString);
 1919              		.loc 1 430 0
 1920 006c 3B46     		mov	r3, r7
 1921 006e 1846     		mov	r0, r3
 1922 0070 FFF7FEFF 		bl	usbPutString
 431:.\main.c      ****         usbPutString("robot_dir:");
 1923              		.loc 1 431 0
 1924 0074 0F48     		ldr	r0, .L105+24
 1925 0076 FFF7FEFF 		bl	usbPutString
 432:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 1926              		.loc 1 432 0
 1927 007a 0A4B     		ldr	r3, .L105+8
 1928 007c DB88     		ldrh	r3, [r3, #6]
 1929 007e 1BB2     		sxth	r3, r3
 1930 0080 3A46     		mov	r2, r7
 1931 0082 1046     		mov	r0, r2
 1932 0084 0849     		ldr	r1, .L105+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 43


 1933 0086 1A46     		mov	r2, r3
 1934 0088 FFF7FEFF 		bl	sprintf
 433:.\main.c      ****         usbPutString(printString);
 1935              		.loc 1 433 0
 1936 008c 3B46     		mov	r3, r7
 1937 008e 1846     		mov	r0, r3
 1938 0090 FFF7FEFF 		bl	usbPutString
 1939              	.L103:
 1940              	.LBE4:
 434:.\main.c      ****     }
 435:.\main.c      **** }
 1941              		.loc 1 435 0
 1942 0094 1037     		adds	r7, r7, #16
 1943              		.cfi_def_cfa_offset 8
 1944 0096 BD46     		mov	sp, r7
 1945              		.cfi_def_cfa_register 13
 1946              		@ sp needed
 1947 0098 80BD     		pop	{r7, pc}
 1948              	.L106:
 1949 009a 00BF     		.align	2
 1950              	.L105:
 1951 009c 00000000 		.word	flag_print_rf
 1952 00a0 5C000000 		.word	.LC4
 1953 00a4 00000000 		.word	system_state
 1954 00a8 64000000 		.word	.LC5
 1955 00ac 6C000000 		.word	.LC6
 1956 00b0 78000000 		.word	.LC7
 1957 00b4 84000000 		.word	.LC8
 1958              		.cfi_endproc
 1959              	.LFE87:
 1960              		.size	print_RF, .-print_RF
 1961              		.section	.text.main,"ax",%progbits
 1962              		.align	2
 1963              		.global	main
 1964              		.thumb
 1965              		.thumb_func
 1966              		.type	main, %function
 1967              	main:
 1968              	.LFB88:
 436:.\main.c      **** 
 437:.\main.c      **** int main()
 438:.\main.c      **** {  
 1969              		.loc 1 438 0
 1970              		.cfi_startproc
 1971              		@ args = 0, pretend = 0, frame = 0
 1972              		@ frame_needed = 1, uses_anonymous_args = 0
 1973 0000 80B5     		push	{r7, lr}
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
 1977 0002 00AF     		add	r7, sp, #0
 1978              		.cfi_def_cfa_register 7
 439:.\main.c      **** 
 440:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 441:.\main.c      **** // ----- INITIALIZATIONS ----------
 442:.\main.c      ****     CYGlobalIntEnable;
 1979              		.loc 1 442 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 44


 1980              	@ 442 ".\main.c" 1
 1981 0004 62B6     		CPSIE   i
 1982              	@ 0 "" 2
 443:.\main.c      ****     if(ENABLE_PWM)
 444:.\main.c      ****     {
 445:.\main.c      ****         PWM_1_Start();// starting the pwm
 1983              		.loc 1 445 0
 1984              		.thumb
 1985 0006 FFF7FEFF 		bl	PWM_1_Start
 446:.\main.c      ****         PWM_2_Start();// starting the pwm
 1986              		.loc 1 446 0
 1987 000a FFF7FEFF 		bl	PWM_2_Start
 447:.\main.c      ****     }
 448:.\main.c      ****     
 449:.\main.c      ****     if(ENABLE_ADC)
 450:.\main.c      ****     {
 451:.\main.c      ****         ADC_Start();
 452:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 453:.\main.c      ****         //ADC_StartConvert();
 454:.\main.c      ****         
 455:.\main.c      ****         //start the ADC timer for software trigger mode
 456:.\main.c      ****         Timer_TS_Start();
 457:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 458:.\main.c      ****     }
 459:.\main.c      ****     
 460:.\main.c      ****     if (ENABLE_QUAD)
 461:.\main.c      ****     {
 462:.\main.c      ****         QuadDec_M1_Start();
 1988              		.loc 1 462 0
 1989 000e FFF7FEFF 		bl	QuadDec_M1_Start
 463:.\main.c      ****         QuadDec_M2_Start();
 1990              		.loc 1 463 0
 1991 0012 FFF7FEFF 		bl	QuadDec_M2_Start
 464:.\main.c      ****         
 465:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1992              		.loc 1 465 0
 1993 0016 2248     		ldr	r0, .L117
 1994 0018 FFF7FEFF 		bl	isr_quad1_StartEx
 466:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1995              		.loc 1 466 0
 1996 001c 2148     		ldr	r0, .L117+4
 1997 001e FFF7FEFF 		bl	isr_turn_count_StartEx
 467:.\main.c      ****         
 468:.\main.c      ****         Timer_1_Start();
 1998              		.loc 1 468 0
 1999 0022 FFF7FEFF 		bl	Timer_1_Start
 469:.\main.c      ****     }
 470:.\main.c      ****     
 471:.\main.c      ****     if(ENABLE_STOP){
 472:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 2000              		.loc 1 472 0
 2001 0026 2048     		ldr	r0, .L117+8
 2002 0028 FFF7FEFF 		bl	isr_OnLine_StartEx
 473:.\main.c      ****     }
 474:.\main.c      ****     isr_button_StartEx(button);
 2003              		.loc 1 474 0
 2004 002c 1F48     		ldr	r0, .L117+12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 45


 2005 002e FFF7FEFF 		bl	isr_button_StartEx
 475:.\main.c      **** 
 476:.\main.c      ****     // ------USB SETUP ----------------    
 477:.\main.c      ****     if (USE_USB){    
 478:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 2006              		.loc 1 478 0
 2007 0032 0020     		movs	r0, #0
 2008 0034 0121     		movs	r1, #1
 2009 0036 FFF7FEFF 		bl	USBUART_Start
 479:.\main.c      ****         if (USBUART_GetConfiguration())
 2010              		.loc 1 479 0
 2011 003a FFF7FEFF 		bl	USBUART_GetConfiguration
 2012 003e 0346     		mov	r3, r0
 2013 0040 002B     		cmp	r3, #0
 2014 0042 01D0     		beq	.L116
 480:.\main.c      ****             {
 481:.\main.c      ****                  USBUART_CDC_Init();
 2015              		.loc 1 481 0
 2016 0044 FFF7FEFF 		bl	USBUART_CDC_Init
 2017              	.L116:
 482:.\main.c      ****             }
 483:.\main.c      ****     }
 484:.\main.c      ****     
 485:.\main.c      ****     if(BIN_ENABLED){
 486:.\main.c      ****         UART_clk_SetDividerValue(130);
 487:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 488:.\main.c      ****         UART_Start();
 489:.\main.c      ****         RF_BT_SELECT_Write(0);
 490:.\main.c      ****     }
 491:.\main.c      ****     
 492:.\main.c      ****     if(BT_ENABLED){
 493:.\main.c      ****         UART_clk_SetDividerValue(781);
 2018              		.loc 1 493 0
 2019 0048 4FF44370 		mov	r0, #780
 2020 004c 0121     		movs	r1, #1
 2021 004e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 494:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2022              		.loc 1 494 0
 2023 0052 1748     		ldr	r0, .L117+16
 2024 0054 FFF7FEFF 		bl	isrRF_RX_StartEx
 495:.\main.c      ****         UART_Start();
 2025              		.loc 1 495 0
 2026 0058 FFF7FEFF 		bl	UART_Start
 496:.\main.c      ****         RF_BT_SELECT_Write(1);
 2027              		.loc 1 496 0
 2028 005c 0120     		movs	r0, #1
 2029 005e FFF7FEFF 		bl	RF_BT_SELECT_Write
 2030              	.L115:
 497:.\main.c      ****     }
 498:.\main.c      ****     
 499:.\main.c      ****     //usbPutString("Started");
 500:.\main.c      ****     for(;;)
 501:.\main.c      ****     {
 502:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 503:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 2031              		.loc 1 503 0
 2032 0062 FFF7FEFF 		bl	Quad_Dec_response
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 46


 504:.\main.c      ****         if(BIN_ENABLED == 1)
 505:.\main.c      ****         {
 506:.\main.c      ****             handle_rx_binary();
 507:.\main.c      ****             print_RF();
 508:.\main.c      ****         }
 509:.\main.c      ****         
 510:.\main.c      ****         switch(movement_state)
 2033              		.loc 1 510 0
 2034 0066 134B     		ldr	r3, .L117+20
 2035 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2036 006a 032B     		cmp	r3, #3
 2037 006c F9D8     		bhi	.L115
 2038 006e 01A2     		adr	r2, .L111
 2039 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2040              		.p2align 2
 2041              	.L111:
 2042 0074 85000000 		.word	.L110+1
 2043 0078 8B000000 		.word	.L112+1
 2044 007c 91000000 		.word	.L113+1
 2045 0080 97000000 		.word	.L114+1
 2046              		.p2align 1
 2047              	.L110:
 511:.\main.c      ****         {
 512:.\main.c      ****             case DRIVE:
 513:.\main.c      ****                 driveForwards();
 2048              		.loc 1 513 0
 2049 0084 FFF7FEFF 		bl	driveForwards
 514:.\main.c      ****             break;
 2050              		.loc 1 514 0
 2051 0088 08E0     		b	.L109
 2052              	.L112:
 515:.\main.c      ****             case LTURN:
 516:.\main.c      ****                 turnLeft();
 2053              		.loc 1 516 0
 2054 008a FFF7FEFF 		bl	turnLeft
 517:.\main.c      ****             break;
 2055              		.loc 1 517 0
 2056 008e 05E0     		b	.L109
 2057              	.L113:
 518:.\main.c      ****             case RTURN:
 519:.\main.c      ****                 turnRight();
 2058              		.loc 1 519 0
 2059 0090 FFF7FEFF 		bl	turnRight
 520:.\main.c      ****             break;
 2060              		.loc 1 520 0
 2061 0094 02E0     		b	.L109
 2062              	.L114:
 521:.\main.c      ****             case STOPPED:
 522:.\main.c      ****                 brakeMotor();
 2063              		.loc 1 522 0
 2064 0096 FFF7FEFF 		bl	brakeMotor
 523:.\main.c      ****             break;
 2065              		.loc 1 523 0
 2066 009a 00BF     		nop
 2067              	.L109:
 524:.\main.c      ****         }
 525:.\main.c      ****         //handle_usb();        
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 47


 526:.\main.c      ****     }   
 2068              		.loc 1 526 0
 2069 009c E1E7     		b	.L115
 2070              	.L118:
 2071 009e 00BF     		.align	2
 2072              	.L117:
 2073 00a0 00000000 		.word	isr_quad1
 2074 00a4 00000000 		.word	isr_turn_timer
 2075 00a8 00000000 		.word	Stop_on_line
 2076 00ac 00000000 		.word	button
 2077 00b0 00000000 		.word	BT_rxInt
 2078 00b4 00000000 		.word	movement_state
 2079              		.cfi_endproc
 2080              	.LFE88:
 2081              		.size	main, .-main
 2082              		.section	.text.usbPutString,"ax",%progbits
 2083              		.align	2
 2084              		.global	usbPutString
 2085              		.thumb
 2086              		.thumb_func
 2087              		.type	usbPutString, %function
 2088              	usbPutString:
 2089              	.LFB89:
 527:.\main.c      **** }
 528:.\main.c      **** //* ========================================
 529:.\main.c      **** void usbPutString(char *s)
 530:.\main.c      **** {
 2090              		.loc 1 530 0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 16
 2093              		@ frame_needed = 1, uses_anonymous_args = 0
 2094 0000 80B5     		push	{r7, lr}
 2095              		.cfi_def_cfa_offset 8
 2096              		.cfi_offset 7, -8
 2097              		.cfi_offset 14, -4
 2098 0002 84B0     		sub	sp, sp, #16
 2099              		.cfi_def_cfa_offset 24
 2100 0004 00AF     		add	r7, sp, #0
 2101              		.cfi_def_cfa_register 7
 2102 0006 7860     		str	r0, [r7, #4]
 531:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 532:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 533:.\main.c      **** //  length to 62 char (63rd char is a '!')
 534:.\main.c      ****     if (USE_USB && portOpen)    
 2103              		.loc 1 534 0
 2104 0008 154B     		ldr	r3, .L123
 2105 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2106 000c 002B     		cmp	r3, #0
 2107 000e 23D0     		beq	.L119
 2108              	.LBB5:
 535:.\main.c      ****     {
 536:.\main.c      ****             uint32 cnt = 0;
 2109              		.loc 1 536 0
 2110 0010 0023     		movs	r3, #0
 2111 0012 FB60     		str	r3, [r7, #12]
 537:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 2112              		.loc 1 537 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 48


 2113 0014 0AE0     		b	.L121
 2114              	.L122:
 538:.\main.c      ****             {
 539:.\main.c      ****                 cnt++;
 2115              		.loc 1 539 0
 2116 0016 FB68     		ldr	r3, [r7, #12]
 2117 0018 0133     		adds	r3, r3, #1
 2118 001a FB60     		str	r3, [r7, #12]
 540:.\main.c      ****                 if(cnt == 3000000){
 2119              		.loc 1 540 0
 2120 001c FB68     		ldr	r3, [r7, #12]
 2121 001e 114A     		ldr	r2, .L123+4
 2122 0020 9342     		cmp	r3, r2
 2123 0022 03D1     		bne	.L121
 541:.\main.c      ****                     portOpen = 0;
 2124              		.loc 1 541 0
 2125 0024 0E4B     		ldr	r3, .L123
 2126 0026 0022     		movs	r2, #0
 2127 0028 1A70     		strb	r2, [r3]
 542:.\main.c      ****                     return;
 2128              		.loc 1 542 0
 2129 002a 15E0     		b	.L119
 2130              	.L121:
 537:.\main.c      ****             {
 2131              		.loc 1 537 0
 2132 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 2133 0030 0346     		mov	r3, r0
 2134 0032 002B     		cmp	r3, #0
 2135 0034 EFD0     		beq	.L122
 543:.\main.c      ****                 }
 544:.\main.c      ****             }
 545:.\main.c      ****             s[63]='\0';
 2136              		.loc 1 545 0
 2137 0036 7B68     		ldr	r3, [r7, #4]
 2138 0038 3F33     		adds	r3, r3, #63
 2139 003a 0022     		movs	r2, #0
 2140 003c 1A70     		strb	r2, [r3]
 546:.\main.c      ****             s[62]='!';
 2141              		.loc 1 546 0
 2142 003e 7B68     		ldr	r3, [r7, #4]
 2143 0040 3E33     		adds	r3, r3, #62
 2144 0042 2122     		movs	r2, #33
 2145 0044 1A70     		strb	r2, [r3]
 547:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 2146              		.loc 1 547 0
 2147 0046 7868     		ldr	r0, [r7, #4]
 2148 0048 FFF7FEFF 		bl	strlen
 2149 004c 0346     		mov	r3, r0
 2150 004e 9BB2     		uxth	r3, r3
 2151 0050 7868     		ldr	r0, [r7, #4]
 2152 0052 1946     		mov	r1, r3
 2153 0054 FFF7FEFF 		bl	USBUART_PutData
 2154              	.L119:
 2155              	.LBE5:
 548:.\main.c      ****     }
 549:.\main.c      **** }
 2156              		.loc 1 549 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 49


 2157 0058 1037     		adds	r7, r7, #16
 2158              		.cfi_def_cfa_offset 8
 2159 005a BD46     		mov	sp, r7
 2160              		.cfi_def_cfa_register 13
 2161              		@ sp needed
 2162 005c 80BD     		pop	{r7, pc}
 2163              	.L124:
 2164 005e 00BF     		.align	2
 2165              	.L123:
 2166 0060 00000000 		.word	portOpen
 2167 0064 C0C62D00 		.word	3000000
 2168              		.cfi_endproc
 2169              	.LFE89:
 2170              		.size	usbPutString, .-usbPutString
 2171              		.section	.text.usbPutChar,"ax",%progbits
 2172              		.align	2
 2173              		.global	usbPutChar
 2174              		.thumb
 2175              		.thumb_func
 2176              		.type	usbPutChar, %function
 2177              	usbPutChar:
 2178              	.LFB90:
 550:.\main.c      **** //* ========================================
 551:.\main.c      **** void usbPutChar(char c)
 552:.\main.c      **** {
 2179              		.loc 1 552 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 16
 2182              		@ frame_needed = 1, uses_anonymous_args = 0
 2183 0000 80B5     		push	{r7, lr}
 2184              		.cfi_def_cfa_offset 8
 2185              		.cfi_offset 7, -8
 2186              		.cfi_offset 14, -4
 2187 0002 84B0     		sub	sp, sp, #16
 2188              		.cfi_def_cfa_offset 24
 2189 0004 00AF     		add	r7, sp, #0
 2190              		.cfi_def_cfa_register 7
 2191 0006 0346     		mov	r3, r0
 2192 0008 FB71     		strb	r3, [r7, #7]
 553:.\main.c      ****     if (USE_USB && portOpen)    
 2193              		.loc 1 553 0
 2194 000a 0F4B     		ldr	r3, .L129
 2195 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2196 000e 002B     		cmp	r3, #0
 2197 0010 16D0     		beq	.L125
 2198              	.LBB6:
 554:.\main.c      ****     {    
 555:.\main.c      ****         uint32 cnt = 0;
 2199              		.loc 1 555 0
 2200 0012 0023     		movs	r3, #0
 2201 0014 FB60     		str	r3, [r7, #12]
 556:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 2202              		.loc 1 556 0
 2203 0016 0AE0     		b	.L127
 2204              	.L128:
 557:.\main.c      ****             cnt++;
 2205              		.loc 1 557 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 50


 2206 0018 FB68     		ldr	r3, [r7, #12]
 2207 001a 0133     		adds	r3, r3, #1
 2208 001c FB60     		str	r3, [r7, #12]
 558:.\main.c      ****             if(cnt == 3000000){
 2209              		.loc 1 558 0
 2210 001e FB68     		ldr	r3, [r7, #12]
 2211 0020 0A4A     		ldr	r2, .L129+4
 2212 0022 9342     		cmp	r3, r2
 2213 0024 03D1     		bne	.L127
 559:.\main.c      ****                 portOpen = 0;
 2214              		.loc 1 559 0
 2215 0026 084B     		ldr	r3, .L129
 2216 0028 0022     		movs	r2, #0
 2217 002a 1A70     		strb	r2, [r3]
 560:.\main.c      ****                 return;
 2218              		.loc 1 560 0
 2219 002c 08E0     		b	.L125
 2220              	.L127:
 556:.\main.c      ****             cnt++;
 2221              		.loc 1 556 0
 2222 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 2223 0032 0346     		mov	r3, r0
 2224 0034 002B     		cmp	r3, #0
 2225 0036 EFD0     		beq	.L128
 561:.\main.c      ****             }
 562:.\main.c      ****         }
 563:.\main.c      ****         USBUART_PutChar(c);
 2226              		.loc 1 563 0
 2227 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2228 003a 1846     		mov	r0, r3
 2229 003c FFF7FEFF 		bl	USBUART_PutChar
 2230              	.L125:
 2231              	.LBE6:
 564:.\main.c      ****     }    
 565:.\main.c      **** }
 2232              		.loc 1 565 0
 2233 0040 1037     		adds	r7, r7, #16
 2234              		.cfi_def_cfa_offset 8
 2235 0042 BD46     		mov	sp, r7
 2236              		.cfi_def_cfa_register 13
 2237              		@ sp needed
 2238 0044 80BD     		pop	{r7, pc}
 2239              	.L130:
 2240 0046 00BF     		.align	2
 2241              	.L129:
 2242 0048 00000000 		.word	portOpen
 2243 004c C0C62D00 		.word	3000000
 2244              		.cfi_endproc
 2245              	.LFE90:
 2246              		.size	usbPutChar, .-usbPutChar
 2247              		.section	.text.uart_set_PWM,"ax",%progbits
 2248              		.align	2
 2249              		.global	uart_set_PWM
 2250              		.thumb
 2251              		.thumb_func
 2252              		.type	uart_set_PWM, %function
 2253              	uart_set_PWM:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 51


 2254              	.LFB91:
 566:.\main.c      **** //* ========================================
 567:.\main.c      **** 
 568:.\main.c      **** void uart_set_PWM()
 569:.\main.c      **** {
 2255              		.loc 1 569 0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 8
 2258              		@ frame_needed = 1, uses_anonymous_args = 0
 2259 0000 80B5     		push	{r7, lr}
 2260              		.cfi_def_cfa_offset 8
 2261              		.cfi_offset 7, -8
 2262              		.cfi_offset 14, -4
 2263 0002 82B0     		sub	sp, sp, #8
 2264              		.cfi_def_cfa_offset 16
 2265 0004 00AF     		add	r7, sp, #0
 2266              		.cfi_def_cfa_register 7
 570:.\main.c      ****     uint8 c;
 571:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 2267              		.loc 1 571 0
 2268 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 2269 000a 0346     		mov	r3, r0
 2270 000c 002B     		cmp	r3, #0
 2271 000e 11D0     		beq	.L131
 572:.\main.c      ****        {  
 573:.\main.c      ****             c = USBUART_GetChar();
 2272              		.loc 1 573 0
 2273 0010 FFF7FEFF 		bl	USBUART_GetChar
 2274 0014 0346     		mov	r3, r0
 2275 0016 FB71     		strb	r3, [r7, #7]
 574:.\main.c      ****             
 575:.\main.c      ****             if(c <= 100 && c > 0){
 2276              		.loc 1 575 0
 2277 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2278 001a 642B     		cmp	r3, #100
 2279 001c 0AD8     		bhi	.L131
 2280              		.loc 1 575 0 is_stmt 0 discriminator 1
 2281 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2282 0020 002B     		cmp	r3, #0
 2283 0022 07D0     		beq	.L131
 576:.\main.c      ****                 PWM_1_WriteCompare(c);
 2284              		.loc 1 576 0 is_stmt 1
 2285 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2286 0026 1846     		mov	r0, r3
 2287 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 577:.\main.c      ****                 usbPutString(c);
 2288              		.loc 1 577 0
 2289 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2290 002e 1846     		mov	r0, r3
 2291 0030 FFF7FEFF 		bl	usbPutString
 2292              	.L131:
 578:.\main.c      ****             }
 579:.\main.c      ****        }
 580:.\main.c      **** }
 2293              		.loc 1 580 0
 2294 0034 0837     		adds	r7, r7, #8
 2295              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 52


 2296 0036 BD46     		mov	sp, r7
 2297              		.cfi_def_cfa_register 13
 2298              		@ sp needed
 2299 0038 80BD     		pop	{r7, pc}
 2300              		.cfi_endproc
 2301              	.LFE91:
 2302              		.size	uart_set_PWM, .-uart_set_PWM
 2303 003a 00BF     		.text
 2304              	.Letext0:
 2305              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2306              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2307              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2308              		.file 5 ".\\vars.h"
 2309              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2310              		.section	.debug_info,"",%progbits
 2311              	.Ldebug_info0:
 2312 0000 C0080000 		.4byte	0x8c0
 2313 0004 0400     		.2byte	0x4
 2314 0006 00000000 		.4byte	.Ldebug_abbrev0
 2315 000a 04       		.byte	0x4
 2316 000b 01       		.uleb128 0x1
 2317 000c CF020000 		.4byte	.LASF130
 2318 0010 01       		.byte	0x1
 2319 0011 77060000 		.4byte	.LASF131
 2320 0015 25060000 		.4byte	.LASF132
 2321 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2322 001d 00000000 		.4byte	0
 2323 0021 00000000 		.4byte	.Ldebug_line0
 2324 0025 02       		.uleb128 0x2
 2325 0026 01       		.byte	0x1
 2326 0027 06       		.byte	0x6
 2327 0028 AD050000 		.4byte	.LASF0
 2328 002c 02       		.uleb128 0x2
 2329 002d 01       		.byte	0x1
 2330 002e 08       		.byte	0x8
 2331 002f 10050000 		.4byte	.LASF1
 2332 0033 02       		.uleb128 0x2
 2333 0034 02       		.byte	0x2
 2334 0035 05       		.byte	0x5
 2335 0036 24040000 		.4byte	.LASF2
 2336 003a 02       		.uleb128 0x2
 2337 003b 02       		.byte	0x2
 2338 003c 07       		.byte	0x7
 2339 003d B9050000 		.4byte	.LASF3
 2340 0041 03       		.uleb128 0x3
 2341 0042 6E000000 		.4byte	.LASF11
 2342 0046 02       		.byte	0x2
 2343 0047 3F       		.byte	0x3f
 2344 0048 4C000000 		.4byte	0x4c
 2345 004c 02       		.uleb128 0x2
 2346 004d 04       		.byte	0x4
 2347 004e 05       		.byte	0x5
 2348 004f 4E040000 		.4byte	.LASF4
 2349 0053 02       		.uleb128 0x2
 2350 0054 04       		.byte	0x4
 2351 0055 07       		.byte	0x7
 2352 0056 C7040000 		.4byte	.LASF5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 53


 2353 005a 02       		.uleb128 0x2
 2354 005b 08       		.byte	0x8
 2355 005c 05       		.byte	0x5
 2356 005d AC020000 		.4byte	.LASF6
 2357 0061 02       		.uleb128 0x2
 2358 0062 08       		.byte	0x8
 2359 0063 07       		.byte	0x7
 2360 0064 8B010000 		.4byte	.LASF7
 2361 0068 04       		.uleb128 0x4
 2362 0069 04       		.byte	0x4
 2363 006a 05       		.byte	0x5
 2364 006b 696E7400 		.ascii	"int\000"
 2365 006f 02       		.uleb128 0x2
 2366 0070 04       		.byte	0x4
 2367 0071 07       		.byte	0x7
 2368 0072 61000000 		.4byte	.LASF8
 2369 0076 02       		.uleb128 0x2
 2370 0077 04       		.byte	0x4
 2371 0078 07       		.byte	0x7
 2372 0079 BE040000 		.4byte	.LASF9
 2373 007d 05       		.uleb128 0x5
 2374 007e 04       		.byte	0x4
 2375 007f 83000000 		.4byte	0x83
 2376 0083 02       		.uleb128 0x2
 2377 0084 01       		.byte	0x1
 2378 0085 08       		.byte	0x8
 2379 0086 65020000 		.4byte	.LASF10
 2380 008a 03       		.uleb128 0x3
 2381 008b E5040000 		.4byte	.LASF12
 2382 008f 03       		.byte	0x3
 2383 0090 2C       		.byte	0x2c
 2384 0091 41000000 		.4byte	0x41
 2385 0095 06       		.uleb128 0x6
 2386 0096 F6050000 		.4byte	.LASF13
 2387 009a 04       		.byte	0x4
 2388 009b 9201     		.2byte	0x192
 2389 009d 2C000000 		.4byte	0x2c
 2390 00a1 06       		.uleb128 0x6
 2391 00a2 83020000 		.4byte	.LASF14
 2392 00a6 04       		.byte	0x4
 2393 00a7 9301     		.2byte	0x193
 2394 00a9 3A000000 		.4byte	0x3a
 2395 00ad 06       		.uleb128 0x6
 2396 00ae 8A030000 		.4byte	.LASF15
 2397 00b2 04       		.byte	0x4
 2398 00b3 9401     		.2byte	0x194
 2399 00b5 53000000 		.4byte	0x53
 2400 00b9 06       		.uleb128 0x6
 2401 00ba 8A020000 		.4byte	.LASF16
 2402 00be 04       		.byte	0x4
 2403 00bf 9501     		.2byte	0x195
 2404 00c1 25000000 		.4byte	0x25
 2405 00c5 06       		.uleb128 0x6
 2406 00c6 78000000 		.4byte	.LASF17
 2407 00ca 04       		.byte	0x4
 2408 00cb 9601     		.2byte	0x196
 2409 00cd 33000000 		.4byte	0x33
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 54


 2410 00d1 02       		.uleb128 0x2
 2411 00d2 04       		.byte	0x4
 2412 00d3 04       		.byte	0x4
 2413 00d4 41010000 		.4byte	.LASF18
 2414 00d8 02       		.uleb128 0x2
 2415 00d9 08       		.byte	0x8
 2416 00da 04       		.byte	0x4
 2417 00db FC050000 		.4byte	.LASF19
 2418 00df 02       		.uleb128 0x2
 2419 00e0 08       		.byte	0x8
 2420 00e1 04       		.byte	0x4
 2421 00e2 DD030000 		.4byte	.LASF20
 2422 00e6 07       		.uleb128 0x7
 2423 00e7 51050000 		.4byte	.LASF133
 2424 00eb 01       		.byte	0x1
 2425 00ec 05       		.byte	0x5
 2426 00ed 48       		.byte	0x48
 2427 00ee 0B010000 		.4byte	0x10b
 2428 00f2 08       		.uleb128 0x8
 2429 00f3 60010000 		.4byte	.LASF21
 2430 00f7 00       		.sleb128 0
 2431 00f8 08       		.uleb128 0x8
 2432 00f9 8B000000 		.4byte	.LASF22
 2433 00fd 01       		.sleb128 1
 2434 00fe 08       		.uleb128 0x8
 2435 00ff 0A000000 		.4byte	.LASF23
 2436 0103 02       		.sleb128 2
 2437 0104 08       		.uleb128 0x8
 2438 0105 CC030000 		.4byte	.LASF24
 2439 0109 03       		.sleb128 3
 2440 010a 00       		.byte	0
 2441 010b 09       		.uleb128 0x9
 2442 010c 91030000 		.4byte	.LASF134
 2443 0110 20       		.byte	0x20
 2444 0111 05       		.byte	0x5
 2445 0112 4F       		.byte	0x4f
 2446 0113 E4010000 		.4byte	0x1e4
 2447 0117 0A       		.uleb128 0xa
 2448 0118 A9030000 		.4byte	.LASF25
 2449 011c 05       		.byte	0x5
 2450 011d 50       		.byte	0x50
 2451 011e B9000000 		.4byte	0xb9
 2452 0122 00       		.byte	0
 2453 0123 0A       		.uleb128 0xa
 2454 0124 5A010000 		.4byte	.LASF26
 2455 0128 05       		.byte	0x5
 2456 0129 51       		.byte	0x51
 2457 012a 95000000 		.4byte	0x95
 2458 012e 01       		.byte	0x1
 2459 012f 0A       		.uleb128 0xa
 2460 0130 F4040000 		.4byte	.LASF27
 2461 0134 05       		.byte	0x5
 2462 0135 52       		.byte	0x52
 2463 0136 C5000000 		.4byte	0xc5
 2464 013a 02       		.byte	0x2
 2465 013b 0A       		.uleb128 0xa
 2466 013c 39020000 		.4byte	.LASF28
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 55


 2467 0140 05       		.byte	0x5
 2468 0141 53       		.byte	0x53
 2469 0142 C5000000 		.4byte	0xc5
 2470 0146 04       		.byte	0x4
 2471 0147 0A       		.uleb128 0xa
 2472 0148 CC050000 		.4byte	.LASF29
 2473 014c 05       		.byte	0x5
 2474 014d 54       		.byte	0x54
 2475 014e C5000000 		.4byte	0xc5
 2476 0152 06       		.byte	0x6
 2477 0153 0A       		.uleb128 0xa
 2478 0154 57060000 		.4byte	.LASF30
 2479 0158 05       		.byte	0x5
 2480 0159 55       		.byte	0x55
 2481 015a C5000000 		.4byte	0xc5
 2482 015e 08       		.byte	0x8
 2483 015f 0A       		.uleb128 0xa
 2484 0160 66030000 		.4byte	.LASF31
 2485 0164 05       		.byte	0x5
 2486 0165 56       		.byte	0x56
 2487 0166 C5000000 		.4byte	0xc5
 2488 016a 0A       		.byte	0xa
 2489 016b 0A       		.uleb128 0xa
 2490 016c 6A020000 		.4byte	.LASF32
 2491 0170 05       		.byte	0x5
 2492 0171 57       		.byte	0x57
 2493 0172 C5000000 		.4byte	0xc5
 2494 0176 0C       		.byte	0xc
 2495 0177 0A       		.uleb128 0xa
 2496 0178 AE030000 		.4byte	.LASF33
 2497 017c 05       		.byte	0x5
 2498 017d 58       		.byte	0x58
 2499 017e C5000000 		.4byte	0xc5
 2500 0182 0E       		.byte	0xe
 2501 0183 0A       		.uleb128 0xa
 2502 0184 C7020000 		.4byte	.LASF34
 2503 0188 05       		.byte	0x5
 2504 0189 59       		.byte	0x59
 2505 018a C5000000 		.4byte	0xc5
 2506 018e 10       		.byte	0x10
 2507 018f 0A       		.uleb128 0xa
 2508 0190 AE040000 		.4byte	.LASF35
 2509 0194 05       		.byte	0x5
 2510 0195 5A       		.byte	0x5a
 2511 0196 C5000000 		.4byte	0xc5
 2512 019a 12       		.byte	0x12
 2513 019b 0A       		.uleb128 0xa
 2514 019c 6E060000 		.4byte	.LASF36
 2515 01a0 05       		.byte	0x5
 2516 01a1 5B       		.byte	0x5b
 2517 01a2 C5000000 		.4byte	0xc5
 2518 01a6 14       		.byte	0x14
 2519 01a7 0A       		.uleb128 0xa
 2520 01a8 8F020000 		.4byte	.LASF37
 2521 01ac 05       		.byte	0x5
 2522 01ad 5C       		.byte	0x5c
 2523 01ae C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 56


 2524 01b2 16       		.byte	0x16
 2525 01b3 0A       		.uleb128 0xa
 2526 01b4 B8000000 		.4byte	.LASF38
 2527 01b8 05       		.byte	0x5
 2528 01b9 5D       		.byte	0x5d
 2529 01ba C5000000 		.4byte	0xc5
 2530 01be 18       		.byte	0x18
 2531 01bf 0A       		.uleb128 0xa
 2532 01c0 97040000 		.4byte	.LASF39
 2533 01c4 05       		.byte	0x5
 2534 01c5 5E       		.byte	0x5e
 2535 01c6 C5000000 		.4byte	0xc5
 2536 01ca 1A       		.byte	0x1a
 2537 01cb 0A       		.uleb128 0xa
 2538 01cc 5D030000 		.4byte	.LASF40
 2539 01d0 05       		.byte	0x5
 2540 01d1 5F       		.byte	0x5f
 2541 01d2 C5000000 		.4byte	0xc5
 2542 01d6 1C       		.byte	0x1c
 2543 01d7 0A       		.uleb128 0xa
 2544 01d8 2A010000 		.4byte	.LASF41
 2545 01dc 05       		.byte	0x5
 2546 01dd 60       		.byte	0x60
 2547 01de C5000000 		.4byte	0xc5
 2548 01e2 1E       		.byte	0x1e
 2549 01e3 00       		.byte	0
 2550 01e4 0B       		.uleb128 0xb
 2551 01e5 14060000 		.4byte	.LASF69
 2552 01e9 01       		.byte	0x1
 2553 01ea 28       		.byte	0x28
 2554 01eb 00000000 		.4byte	.LFB63
 2555 01ef 60010000 		.4byte	.LFE63-.LFB63
 2556 01f3 01       		.uleb128 0x1
 2557 01f4 9C       		.byte	0x9c
 2558 01f5 2E020000 		.4byte	0x22e
 2559 01f9 0C       		.uleb128 0xc
 2560 01fa 10000000 		.4byte	.LBB2
 2561 01fe 34010000 		.4byte	.LBE2-.LBB2
 2562 0202 0D       		.uleb128 0xd
 2563 0203 AB000000 		.4byte	.LASF42
 2564 0207 01       		.byte	0x1
 2565 0208 2E       		.byte	0x2e
 2566 0209 A1000000 		.4byte	0xa1
 2567 020d 02       		.uleb128 0x2
 2568 020e 91       		.byte	0x91
 2569 020f 76       		.sleb128 -10
 2570 0210 0D       		.uleb128 0xd
 2571 0211 D9040000 		.4byte	.LASF43
 2572 0215 01       		.byte	0x1
 2573 0216 30       		.byte	0x30
 2574 0217 2E020000 		.4byte	0x22e
 2575 021b 02       		.uleb128 0x2
 2576 021c 91       		.byte	0x91
 2577 021d 68       		.sleb128 -24
 2578 021e 0D       		.uleb128 0xd
 2579 021f 66010000 		.4byte	.LASF44
 2580 0223 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 57


 2581 0224 31       		.byte	0x31
 2582 0225 2E020000 		.4byte	0x22e
 2583 0229 02       		.uleb128 0x2
 2584 022a 91       		.byte	0x91
 2585 022b 5C       		.sleb128 -36
 2586 022c 00       		.byte	0
 2587 022d 00       		.byte	0
 2588 022e 0E       		.uleb128 0xe
 2589 022f 83000000 		.4byte	0x83
 2590 0233 3E020000 		.4byte	0x23e
 2591 0237 0F       		.uleb128 0xf
 2592 0238 76000000 		.4byte	0x76
 2593 023c 0B       		.byte	0xb
 2594 023d 00       		.byte	0
 2595 023e 10       		.uleb128 0x10
 2596 023f 47010000 		.4byte	.LASF58
 2597 0243 01       		.byte	0x1
 2598 0244 A1       		.byte	0xa1
 2599 0245 00000000 		.4byte	.LFB64
 2600 0249 2C000000 		.4byte	.LFE64-.LFB64
 2601 024d 01       		.uleb128 0x1
 2602 024e 9C       		.byte	0x9c
 2603 024f 70020000 		.4byte	0x270
 2604 0253 11       		.uleb128 0x11
 2605 0254 A6020000 		.4byte	.LASF45
 2606 0258 01       		.byte	0x1
 2607 0259 A1       		.byte	0xa1
 2608 025a 68000000 		.4byte	0x68
 2609 025e 02       		.uleb128 0x2
 2610 025f 91       		.byte	0x91
 2611 0260 74       		.sleb128 -12
 2612 0261 11       		.uleb128 0x11
 2613 0262 9F040000 		.4byte	.LASF46
 2614 0266 01       		.byte	0x1
 2615 0267 A1       		.byte	0xa1
 2616 0268 68000000 		.4byte	0x68
 2617 026c 02       		.uleb128 0x2
 2618 026d 91       		.byte	0x91
 2619 026e 70       		.sleb128 -16
 2620 026f 00       		.byte	0
 2621 0270 12       		.uleb128 0x12
 2622 0271 68050000 		.4byte	.LASF47
 2623 0275 01       		.byte	0x1
 2624 0276 A6       		.byte	0xa6
 2625 0277 00000000 		.4byte	.LFB65
 2626 027b 18000000 		.4byte	.LFE65-.LFB65
 2627 027f 01       		.uleb128 0x1
 2628 0280 9C       		.byte	0x9c
 2629 0281 12       		.uleb128 0x12
 2630 0282 80060000 		.4byte	.LASF48
 2631 0286 01       		.byte	0x1
 2632 0287 AC       		.byte	0xac
 2633 0288 00000000 		.4byte	.LFB66
 2634 028c 18000000 		.4byte	.LFE66-.LFB66
 2635 0290 01       		.uleb128 0x1
 2636 0291 9C       		.byte	0x9c
 2637 0292 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 58


 2638 0293 FF040000 		.4byte	.LASF49
 2639 0297 01       		.byte	0x1
 2640 0298 B2       		.byte	0xb2
 2641 0299 00000000 		.4byte	.LFB67
 2642 029d 16000000 		.4byte	.LFE67-.LFB67
 2643 02a1 01       		.uleb128 0x1
 2644 02a2 9C       		.byte	0x9c
 2645 02a3 12       		.uleb128 0x12
 2646 02a4 74010000 		.4byte	.LASF50
 2647 02a8 01       		.byte	0x1
 2648 02a9 B9       		.byte	0xb9
 2649 02aa 00000000 		.4byte	.LFB68
 2650 02ae 0E000000 		.4byte	.LFE68-.LFB68
 2651 02b2 01       		.uleb128 0x1
 2652 02b3 9C       		.byte	0x9c
 2653 02b4 12       		.uleb128 0x12
 2654 02b5 82010000 		.4byte	.LASF51
 2655 02b9 01       		.byte	0x1
 2656 02ba BE       		.byte	0xbe
 2657 02bb 00000000 		.4byte	.LFB69
 2658 02bf 0E000000 		.4byte	.LFE69-.LFB69
 2659 02c3 01       		.uleb128 0x1
 2660 02c4 9C       		.byte	0x9c
 2661 02c5 12       		.uleb128 0x12
 2662 02c6 A4040000 		.4byte	.LASF52
 2663 02ca 01       		.byte	0x1
 2664 02cb C3       		.byte	0xc3
 2665 02cc 00000000 		.4byte	.LFB70
 2666 02d0 0E000000 		.4byte	.LFE70-.LFB70
 2667 02d4 01       		.uleb128 0x1
 2668 02d5 9C       		.byte	0x9c
 2669 02d6 12       		.uleb128 0x12
 2670 02d7 BD010000 		.4byte	.LASF53
 2671 02db 01       		.byte	0x1
 2672 02dc C8       		.byte	0xc8
 2673 02dd 00000000 		.4byte	.LFB71
 2674 02e1 2C000000 		.4byte	.LFE71-.LFB71
 2675 02e5 01       		.uleb128 0x1
 2676 02e6 9C       		.byte	0x9c
 2677 02e7 12       		.uleb128 0x12
 2678 02e8 57040000 		.4byte	.LASF54
 2679 02ec 01       		.byte	0x1
 2680 02ed D0       		.byte	0xd0
 2681 02ee 00000000 		.4byte	.LFB72
 2682 02f2 2C000000 		.4byte	.LFE72-.LFB72
 2683 02f6 01       		.uleb128 0x1
 2684 02f7 9C       		.byte	0x9c
 2685 02f8 12       		.uleb128 0x12
 2686 02f9 1E010000 		.4byte	.LASF55
 2687 02fd 01       		.byte	0x1
 2688 02fe D8       		.byte	0xd8
 2689 02ff 00000000 		.4byte	.LFB73
 2690 0303 14000000 		.4byte	.LFE73-.LFB73
 2691 0307 01       		.uleb128 0x1
 2692 0308 9C       		.byte	0x9c
 2693 0309 13       		.uleb128 0x13
 2694 030a D3010000 		.4byte	.LASF56
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 59


 2695 030e 01       		.byte	0x1
 2696 030f DD       		.byte	0xdd
 2697 0310 00000000 		.4byte	.LFB74
 2698 0314 18000000 		.4byte	.LFE74-.LFB74
 2699 0318 01       		.uleb128 0x1
 2700 0319 9C       		.byte	0x9c
 2701 031a 12       		.uleb128 0x12
 2702 031b 57050000 		.4byte	.LASF57
 2703 031f 01       		.byte	0x1
 2704 0320 E1       		.byte	0xe1
 2705 0321 00000000 		.4byte	.LFB75
 2706 0325 34000000 		.4byte	.LFE75-.LFB75
 2707 0329 01       		.uleb128 0x1
 2708 032a 9C       		.byte	0x9c
 2709 032b 14       		.uleb128 0x14
 2710 032c E9030000 		.4byte	.LASF59
 2711 0330 01       		.byte	0x1
 2712 0331 E9       		.byte	0xe9
 2713 0332 00000000 		.4byte	.LFB76
 2714 0336 98000000 		.4byte	.LFE76-.LFB76
 2715 033a 01       		.uleb128 0x1
 2716 033b 9C       		.byte	0x9c
 2717 033c 4F030000 		.4byte	0x34f
 2718 0340 0D       		.uleb128 0xd
 2719 0341 6E030000 		.4byte	.LASF60
 2720 0345 01       		.byte	0x1
 2721 0346 EA       		.byte	0xea
 2722 0347 83000000 		.4byte	0x83
 2723 034b 02       		.uleb128 0x2
 2724 034c 91       		.byte	0x91
 2725 034d 6F       		.sleb128 -17
 2726 034e 00       		.byte	0
 2727 034f 15       		.uleb128 0x15
 2728 0350 D4030000 		.4byte	.LASF61
 2729 0354 01       		.byte	0x1
 2730 0355 0101     		.2byte	0x101
 2731 0357 00000000 		.4byte	.LFB77
 2732 035b 9C000000 		.4byte	.LFE77-.LFB77
 2733 035f 01       		.uleb128 0x1
 2734 0360 9C       		.byte	0x9c
 2735 0361 75030000 		.4byte	0x375
 2736 0365 16       		.uleb128 0x16
 2737 0366 6E030000 		.4byte	.LASF60
 2738 036a 01       		.byte	0x1
 2739 036b 0301     		.2byte	0x103
 2740 036d 83000000 		.4byte	0x83
 2741 0371 02       		.uleb128 0x2
 2742 0372 91       		.byte	0x91
 2743 0373 77       		.sleb128 -9
 2744 0374 00       		.byte	0
 2745 0375 17       		.uleb128 0x17
 2746 0376 E3050000 		.4byte	.LASF62
 2747 037a 01       		.byte	0x1
 2748 037b 1801     		.2byte	0x118
 2749 037d 00000000 		.4byte	.LFB78
 2750 0381 0C000000 		.4byte	.LFE78-.LFB78
 2751 0385 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 60


 2752 0386 9C       		.byte	0x9c
 2753 0387 18       		.uleb128 0x18
 2754 0388 B6040000 		.4byte	.LASF63
 2755 038c 01       		.byte	0x1
 2756 038d 1E01     		.2byte	0x11e
 2757 038f 00000000 		.4byte	.LFB79
 2758 0393 2C000000 		.4byte	.LFE79-.LFB79
 2759 0397 01       		.uleb128 0x1
 2760 0398 9C       		.byte	0x9c
 2761 0399 18       		.uleb128 0x18
 2762 039a 37010000 		.4byte	.LASF64
 2763 039e 01       		.byte	0x1
 2764 039f 2701     		.2byte	0x127
 2765 03a1 00000000 		.4byte	.LFB80
 2766 03a5 B8000000 		.4byte	.LFE80-.LFB80
 2767 03a9 01       		.uleb128 0x1
 2768 03aa 9C       		.byte	0x9c
 2769 03ab 18       		.uleb128 0x18
 2770 03ac AE010000 		.4byte	.LASF65
 2771 03b0 01       		.byte	0x1
 2772 03b1 3C01     		.2byte	0x13c
 2773 03b3 00000000 		.4byte	.LFB81
 2774 03b7 70000000 		.4byte	.LFE81-.LFB81
 2775 03bb 01       		.uleb128 0x1
 2776 03bc 9C       		.byte	0x9c
 2777 03bd 18       		.uleb128 0x18
 2778 03be 23050000 		.4byte	.LASF66
 2779 03c2 01       		.byte	0x1
 2780 03c3 5501     		.2byte	0x155
 2781 03c5 00000000 		.4byte	.LFB82
 2782 03c9 18000000 		.4byte	.LFE82-.LFB82
 2783 03cd 01       		.uleb128 0x1
 2784 03ce 9C       		.byte	0x9c
 2785 03cf 18       		.uleb128 0x18
 2786 03d0 1A020000 		.4byte	.LASF67
 2787 03d4 01       		.byte	0x1
 2788 03d5 5C01     		.2byte	0x15c
 2789 03d7 00000000 		.4byte	.LFB83
 2790 03db 1C000000 		.4byte	.LFE83-.LFB83
 2791 03df 01       		.uleb128 0x1
 2792 03e0 9C       		.byte	0x9c
 2793 03e1 18       		.uleb128 0x18
 2794 03e2 91000000 		.4byte	.LASF68
 2795 03e6 01       		.byte	0x1
 2796 03e7 6501     		.2byte	0x165
 2797 03e9 00000000 		.4byte	.LFB84
 2798 03ed 0A000000 		.4byte	.LFE84-.LFB84
 2799 03f1 01       		.uleb128 0x1
 2800 03f2 9C       		.byte	0x9c
 2801 03f3 19       		.uleb128 0x19
 2802 03f4 32000000 		.4byte	.LASF70
 2803 03f8 01       		.byte	0x1
 2804 03f9 6A01     		.2byte	0x16a
 2805 03fb 00000000 		.4byte	.LFB85
 2806 03ff D8010000 		.4byte	.LFE85-.LFB85
 2807 0403 01       		.uleb128 0x1
 2808 0404 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 61


 2809 0405 66040000 		.4byte	0x466
 2810 0409 16       		.uleb128 0x16
 2811 040a 59020000 		.4byte	.LASF71
 2812 040e 01       		.byte	0x1
 2813 040f 7001     		.2byte	0x170
 2814 0411 66040000 		.4byte	0x466
 2815 0415 03       		.uleb128 0x3
 2816 0416 91       		.byte	0x91
 2817 0417 A47F     		.sleb128 -92
 2818 0419 16       		.uleb128 0x16
 2819 041a 26000000 		.4byte	.LASF72
 2820 041e 01       		.byte	0x1
 2821 041f 7101     		.2byte	0x171
 2822 0421 66040000 		.4byte	0x466
 2823 0425 03       		.uleb128 0x3
 2824 0426 91       		.byte	0x91
 2825 0427 E47E     		.sleb128 -156
 2826 0429 16       		.uleb128 0x16
 2827 042a FA010000 		.4byte	.LASF73
 2828 042e 01       		.byte	0x1
 2829 042f 7801     		.2byte	0x178
 2830 0431 C5000000 		.4byte	0xc5
 2831 0435 02       		.uleb128 0x2
 2832 0436 91       		.byte	0x91
 2833 0437 6E       		.sleb128 -18
 2834 0438 16       		.uleb128 0x16
 2835 0439 76030000 		.4byte	.LASF74
 2836 043d 01       		.byte	0x1
 2837 043e 7901     		.2byte	0x179
 2838 0440 C5000000 		.4byte	0xc5
 2839 0444 02       		.uleb128 0x2
 2840 0445 91       		.byte	0x91
 2841 0446 6C       		.sleb128 -20
 2842 0447 16       		.uleb128 0x16
 2843 0448 9C020000 		.4byte	.LASF75
 2844 044c 01       		.byte	0x1
 2845 044d 7B01     		.2byte	0x17b
 2846 044f 68000000 		.4byte	0x68
 2847 0453 02       		.uleb128 0x2
 2848 0454 91       		.byte	0x91
 2849 0455 68       		.sleb128 -24
 2850 0456 16       		.uleb128 0x16
 2851 0457 EC050000 		.4byte	.LASF76
 2852 045b 01       		.byte	0x1
 2853 045c 7C01     		.2byte	0x17c
 2854 045e 68000000 		.4byte	0x68
 2855 0462 02       		.uleb128 0x2
 2856 0463 91       		.byte	0x91
 2857 0464 64       		.sleb128 -28
 2858 0465 00       		.byte	0
 2859 0466 0E       		.uleb128 0xe
 2860 0467 83000000 		.4byte	0x83
 2861 046b 76040000 		.4byte	0x476
 2862 046f 0F       		.uleb128 0xf
 2863 0470 76000000 		.4byte	0x76
 2864 0474 3F       		.byte	0x3f
 2865 0475 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 62


 2866 0476 19       		.uleb128 0x19
 2867 0477 4F020000 		.4byte	.LASF77
 2868 047b 01       		.byte	0x1
 2869 047c 8A01     		.2byte	0x18a
 2870 047e 00000000 		.4byte	.LFB86
 2871 0482 C0000000 		.4byte	.LFE86-.LFB86
 2872 0486 01       		.uleb128 0x1
 2873 0487 9C       		.byte	0x9c
 2874 0488 C4040000 		.4byte	0x4c4
 2875 048c 0C       		.uleb128 0xc
 2876 048d 0E000000 		.4byte	.LBB3
 2877 0491 8E000000 		.4byte	.LBE3-.LBB3
 2878 0495 16       		.uleb128 0x16
 2879 0496 EC010000 		.4byte	.LASF78
 2880 049a 01       		.byte	0x1
 2881 049b 9301     		.2byte	0x193
 2882 049d D1000000 		.4byte	0xd1
 2883 04a1 02       		.uleb128 0x2
 2884 04a2 91       		.byte	0x91
 2885 04a3 74       		.sleb128 -12
 2886 04a4 16       		.uleb128 0x16
 2887 04a5 9B030000 		.4byte	.LASF79
 2888 04a9 01       		.byte	0x1
 2889 04aa 9401     		.2byte	0x194
 2890 04ac C5000000 		.4byte	0xc5
 2891 04b0 02       		.uleb128 0x2
 2892 04b1 91       		.byte	0x91
 2893 04b2 72       		.sleb128 -14
 2894 04b3 16       		.uleb128 0x16
 2895 04b4 21020000 		.4byte	.LASF80
 2896 04b8 01       		.byte	0x1
 2897 04b9 9901     		.2byte	0x199
 2898 04bb C4040000 		.4byte	0x4c4
 2899 04bf 02       		.uleb128 0x2
 2900 04c0 91       		.byte	0x91
 2901 04c1 60       		.sleb128 -32
 2902 04c2 00       		.byte	0
 2903 04c3 00       		.byte	0
 2904 04c4 0E       		.uleb128 0xe
 2905 04c5 83000000 		.4byte	0x83
 2906 04c9 D4040000 		.4byte	0x4d4
 2907 04cd 0F       		.uleb128 0xf
 2908 04ce 76000000 		.4byte	0x76
 2909 04d2 0F       		.byte	0xf
 2910 04d3 00       		.byte	0
 2911 04d4 19       		.uleb128 0x19
 2912 04d5 4E060000 		.4byte	.LASF81
 2913 04d9 01       		.byte	0x1
 2914 04da A001     		.2byte	0x1a0
 2915 04dc 00000000 		.4byte	.LFB87
 2916 04e0 B8000000 		.4byte	.LFE87-.LFB87
 2917 04e4 01       		.uleb128 0x1
 2918 04e5 9C       		.byte	0x9c
 2919 04e6 04050000 		.4byte	0x504
 2920 04ea 0C       		.uleb128 0xc
 2921 04eb 0E000000 		.4byte	.LBB4
 2922 04ef 86000000 		.4byte	.LBE4-.LBB4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 63


 2923 04f3 16       		.uleb128 0x16
 2924 04f4 72040000 		.4byte	.LASF82
 2925 04f8 01       		.byte	0x1
 2926 04f9 A401     		.2byte	0x1a4
 2927 04fb C4040000 		.4byte	0x4c4
 2928 04ff 02       		.uleb128 0x2
 2929 0500 91       		.byte	0x91
 2930 0501 68       		.sleb128 -24
 2931 0502 00       		.byte	0
 2932 0503 00       		.byte	0
 2933 0504 1A       		.uleb128 0x1a
 2934 0505 DE050000 		.4byte	.LASF83
 2935 0509 01       		.byte	0x1
 2936 050a B501     		.2byte	0x1b5
 2937 050c 68000000 		.4byte	0x68
 2938 0510 00000000 		.4byte	.LFB88
 2939 0514 B8000000 		.4byte	.LFE88-.LFB88
 2940 0518 01       		.uleb128 0x1
 2941 0519 9C       		.byte	0x9c
 2942 051a 15       		.uleb128 0x15
 2943 051b 11010000 		.4byte	.LASF84
 2944 051f 01       		.byte	0x1
 2945 0520 1102     		.2byte	0x211
 2946 0522 00000000 		.4byte	.LFB89
 2947 0526 68000000 		.4byte	.LFE89-.LFB89
 2948 052a 01       		.uleb128 0x1
 2949 052b 9C       		.byte	0x9c
 2950 052c 57050000 		.4byte	0x557
 2951 0530 1B       		.uleb128 0x1b
 2952 0531 7300     		.ascii	"s\000"
 2953 0533 01       		.byte	0x1
 2954 0534 1102     		.2byte	0x211
 2955 0536 7D000000 		.4byte	0x7d
 2956 053a 02       		.uleb128 0x2
 2957 053b 91       		.byte	0x91
 2958 053c 6C       		.sleb128 -20
 2959 053d 0C       		.uleb128 0xc
 2960 053e 10000000 		.4byte	.LBB5
 2961 0542 48000000 		.4byte	.LBE5-.LBB5
 2962 0546 1C       		.uleb128 0x1c
 2963 0547 636E7400 		.ascii	"cnt\000"
 2964 054b 01       		.byte	0x1
 2965 054c 1802     		.2byte	0x218
 2966 054e AD000000 		.4byte	0xad
 2967 0552 02       		.uleb128 0x2
 2968 0553 91       		.byte	0x91
 2969 0554 74       		.sleb128 -12
 2970 0555 00       		.byte	0
 2971 0556 00       		.byte	0
 2972 0557 15       		.uleb128 0x15
 2973 0558 A2050000 		.4byte	.LASF85
 2974 055c 01       		.byte	0x1
 2975 055d 2702     		.2byte	0x227
 2976 055f 00000000 		.4byte	.LFB90
 2977 0563 50000000 		.4byte	.LFE90-.LFB90
 2978 0567 01       		.uleb128 0x1
 2979 0568 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 64


 2980 0569 94050000 		.4byte	0x594
 2981 056d 1B       		.uleb128 0x1b
 2982 056e 6300     		.ascii	"c\000"
 2983 0570 01       		.byte	0x1
 2984 0571 2702     		.2byte	0x227
 2985 0573 83000000 		.4byte	0x83
 2986 0577 02       		.uleb128 0x2
 2987 0578 91       		.byte	0x91
 2988 0579 6F       		.sleb128 -17
 2989 057a 0C       		.uleb128 0xc
 2990 057b 12000000 		.4byte	.LBB6
 2991 057f 2E000000 		.4byte	.LBE6-.LBB6
 2992 0583 1C       		.uleb128 0x1c
 2993 0584 636E7400 		.ascii	"cnt\000"
 2994 0588 01       		.byte	0x1
 2995 0589 2B02     		.2byte	0x22b
 2996 058b AD000000 		.4byte	0xad
 2997 058f 02       		.uleb128 0x2
 2998 0590 91       		.byte	0x91
 2999 0591 74       		.sleb128 -12
 3000 0592 00       		.byte	0
 3001 0593 00       		.byte	0
 3002 0594 19       		.uleb128 0x19
 3003 0595 2C020000 		.4byte	.LASF86
 3004 0599 01       		.byte	0x1
 3005 059a 3802     		.2byte	0x238
 3006 059c 00000000 		.4byte	.LFB91
 3007 05a0 3A000000 		.4byte	.LFE91-.LFB91
 3008 05a4 01       		.uleb128 0x1
 3009 05a5 9C       		.byte	0x9c
 3010 05a6 B8050000 		.4byte	0x5b8
 3011 05aa 1C       		.uleb128 0x1c
 3012 05ab 6300     		.ascii	"c\000"
 3013 05ad 01       		.byte	0x1
 3014 05ae 3A02     		.2byte	0x23a
 3015 05b0 95000000 		.4byte	0x95
 3016 05b4 02       		.uleb128 0x2
 3017 05b5 91       		.byte	0x91
 3018 05b6 77       		.sleb128 -9
 3019 05b7 00       		.byte	0
 3020 05b8 1D       		.uleb128 0x1d
 3021 05b9 65040000 		.4byte	.LASF87
 3022 05bd 06       		.byte	0x6
 3023 05be 9606     		.2byte	0x696
 3024 05c0 C4050000 		.4byte	0x5c4
 3025 05c4 1E       		.uleb128 0x1e
 3026 05c5 8A000000 		.4byte	0x8a
 3027 05c9 1F       		.uleb128 0x1f
 3028 05ca 747300   		.ascii	"ts\000"
 3029 05cd 05       		.byte	0x5
 3030 05ce 10       		.byte	0x10
 3031 05cf 95000000 		.4byte	0x95
 3032 05d3 05       		.uleb128 0x5
 3033 05d4 03       		.byte	0x3
 3034 05d5 00000000 		.4byte	ts
 3035 05d9 20       		.uleb128 0x20
 3036 05da 30050000 		.4byte	.LASF88
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 65


 3037 05de 05       		.byte	0x5
 3038 05df 11       		.byte	0x11
 3039 05e0 A1000000 		.4byte	0xa1
 3040 05e4 05       		.uleb128 0x5
 3041 05e5 03       		.byte	0x3
 3042 05e6 00000000 		.4byte	ts_enc
 3043 05ea 20       		.uleb128 0x20
 3044 05eb 7E040000 		.4byte	.LASF89
 3045 05ef 05       		.byte	0x5
 3046 05f0 12       		.byte	0x12
 3047 05f1 A1000000 		.4byte	0xa1
 3048 05f5 05       		.uleb128 0x5
 3049 05f6 03       		.byte	0x3
 3050 05f7 00000000 		.4byte	ts_update
 3051 05fb 20       		.uleb128 0x20
 3052 05fc 81030000 		.4byte	.LASF90
 3053 0600 05       		.byte	0x5
 3054 0601 13       		.byte	0x13
 3055 0602 A1000000 		.4byte	0xa1
 3056 0606 05       		.uleb128 0x5
 3057 0607 03       		.byte	0x3
 3058 0608 00000000 		.4byte	ts_speed
 3059 060c 20       		.uleb128 0x20
 3060 060d 44020000 		.4byte	.LASF91
 3061 0611 05       		.byte	0x5
 3062 0612 14       		.byte	0x14
 3063 0613 A1000000 		.4byte	0xa1
 3064 0617 05       		.uleb128 0x5
 3065 0618 03       		.byte	0x3
 3066 0619 00000000 		.4byte	ts_display
 3067 061d 20       		.uleb128 0x20
 3068 061e 04020000 		.4byte	.LASF92
 3069 0622 05       		.byte	0x5
 3070 0623 16       		.byte	0x16
 3071 0624 95000000 		.4byte	0x95
 3072 0628 05       		.uleb128 0x5
 3073 0629 03       		.byte	0x3
 3074 062a 00000000 		.4byte	flag_ts_enc
 3075 062e 20       		.uleb128 0x20
 3076 062f DD010000 		.4byte	.LASF93
 3077 0633 05       		.byte	0x5
 3078 0634 17       		.byte	0x17
 3079 0635 95000000 		.4byte	0x95
 3080 0639 05       		.uleb128 0x5
 3081 063a 03       		.byte	0x3
 3082 063b 00000000 		.4byte	flag_ts_update
 3083 063f 20       		.uleb128 0x20
 3084 0640 FF030000 		.4byte	.LASF94
 3085 0644 05       		.byte	0x5
 3086 0645 18       		.byte	0x18
 3087 0646 95000000 		.4byte	0x95
 3088 064a 05       		.uleb128 0x5
 3089 064b 03       		.byte	0x3
 3090 064c 00000000 		.4byte	flag_ts_speed
 3091 0650 20       		.uleb128 0x20
 3092 0651 41050000 		.4byte	.LASF95
 3093 0655 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 66


 3094 0656 19       		.byte	0x19
 3095 0657 95000000 		.4byte	0x95
 3096 065b 05       		.uleb128 0x5
 3097 065c 03       		.byte	0x3
 3098 065d 00000000 		.4byte	flag_ts_display
 3099 0661 20       		.uleb128 0x20
 3100 0662 1C040000 		.4byte	.LASF96
 3101 0666 05       		.byte	0x5
 3102 0667 1C       		.byte	0x1c
 3103 0668 95000000 		.4byte	0x95
 3104 066c 05       		.uleb128 0x5
 3105 066d 03       		.byte	0x3
 3106 066e 00000000 		.4byte	flag_rx
 3107 0672 20       		.uleb128 0x20
 3108 0673 A2010000 		.4byte	.LASF97
 3109 0677 05       		.byte	0x5
 3110 0678 1D       		.byte	0x1d
 3111 0679 95000000 		.4byte	0x95
 3112 067d 05       		.uleb128 0x5
 3113 067e 03       		.byte	0x3
 3114 067f 00000000 		.4byte	flag_packet
 3115 0683 20       		.uleb128 0x20
 3116 0684 5F060000 		.4byte	.LASF98
 3117 0688 05       		.byte	0x5
 3118 0689 1E       		.byte	0x1e
 3119 068a 95000000 		.4byte	0x95
 3120 068e 05       		.uleb128 0x5
 3121 068f 03       		.byte	0x3
 3122 0690 00000000 		.4byte	flag_KB_string
 3123 0694 20       		.uleb128 0x20
 3124 0695 0D040000 		.4byte	.LASF99
 3125 0699 05       		.byte	0x5
 3126 069a 20       		.byte	0x20
 3127 069b 95000000 		.4byte	0x95
 3128 069f 05       		.uleb128 0x5
 3129 06a0 03       		.byte	0x3
 3130 06a1 00000000 		.4byte	dataready_flag
 3131 06a5 20       		.uleb128 0x20
 3132 06a6 D8000000 		.4byte	.LASF100
 3133 06aa 05       		.byte	0x5
 3134 06ab 22       		.byte	0x22
 3135 06ac 95000000 		.4byte	0x95
 3136 06b0 05       		.uleb128 0x5
 3137 06b1 03       		.byte	0x3
 3138 06b2 00000000 		.4byte	flag_rf_transmission_active
 3139 06b6 20       		.uleb128 0x20
 3140 06b7 F4000000 		.4byte	.LASF101
 3141 06bb 05       		.byte	0x5
 3142 06bc 23       		.byte	0x23
 3143 06bd 95000000 		.4byte	0x95
 3144 06c1 05       		.uleb128 0x5
 3145 06c2 03       		.byte	0x3
 3146 06c3 00000000 		.4byte	flag_print_rf
 3147 06c7 20       		.uleb128 0x20
 3148 06c8 BB030000 		.4byte	.LASF102
 3149 06cc 05       		.byte	0x5
 3150 06cd 25       		.byte	0x25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 67


 3151 06ce 95000000 		.4byte	0x95
 3152 06d2 05       		.uleb128 0x5
 3153 06d3 03       		.byte	0x3
 3154 06d4 00000000 		.4byte	flag_receive_ADC
 3155 06d8 20       		.uleb128 0x20
 3156 06d9 2E040000 		.4byte	.LASF103
 3157 06dd 05       		.byte	0x5
 3158 06de 26       		.byte	0x26
 3159 06df C5000000 		.4byte	0xc5
 3160 06e3 05       		.uleb128 0x5
 3161 06e4 03       		.byte	0x3
 3162 06e5 00000000 		.4byte	adc_result
 3163 06e9 20       		.uleb128 0x20
 3164 06ea 00000000 		.4byte	.LASF104
 3165 06ee 05       		.byte	0x5
 3166 06ef 28       		.byte	0x28
 3167 06f0 95000000 		.4byte	0x95
 3168 06f4 05       		.uleb128 0x5
 3169 06f5 03       		.byte	0x3
 3170 06f6 00000000 		.4byte	direction
 3171 06fa 20       		.uleb128 0x20
 3172 06fb 39040000 		.4byte	.LASF105
 3173 06ff 05       		.byte	0x5
 3174 0700 2C       		.byte	0x2c
 3175 0701 95000000 		.4byte	0x95
 3176 0705 05       		.uleb128 0x5
 3177 0706 03       		.byte	0x3
 3178 0707 00000000 		.4byte	flag_calc_wheelspeed
 3179 070b 20       		.uleb128 0x20
 3180 070c C0000000 		.4byte	.LASF106
 3181 0710 05       		.byte	0x5
 3182 0711 2D       		.byte	0x2d
 3183 0712 C5000000 		.4byte	0xc5
 3184 0716 05       		.uleb128 0x5
 3185 0717 03       		.byte	0x3
 3186 0718 00000000 		.4byte	quad_count1
 3187 071c 20       		.uleb128 0x20
 3188 071d CC000000 		.4byte	.LASF107
 3189 0721 05       		.byte	0x5
 3190 0722 2E       		.byte	0x2e
 3191 0723 C5000000 		.4byte	0xc5
 3192 0727 05       		.uleb128 0x5
 3193 0728 03       		.byte	0x3
 3194 0729 00000000 		.4byte	quad_count2
 3195 072d 20       		.uleb128 0x20
 3196 072e 80050000 		.4byte	.LASF108
 3197 0732 05       		.byte	0x5
 3198 0733 2F       		.byte	0x2f
 3199 0734 C5000000 		.4byte	0xc5
 3200 0738 05       		.uleb128 0x5
 3201 0739 03       		.byte	0x3
 3202 073a 00000000 		.4byte	last_quad_count1
 3203 073e 20       		.uleb128 0x20
 3204 073f 91050000 		.4byte	.LASF109
 3205 0743 05       		.byte	0x5
 3206 0744 30       		.byte	0x30
 3207 0745 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 68


 3208 0749 05       		.uleb128 0x5
 3209 074a 03       		.byte	0x3
 3210 074b 00000000 		.4byte	last_quad_count2
 3211 074f 20       		.uleb128 0x20
 3212 0750 10000000 		.4byte	.LASF110
 3213 0754 05       		.byte	0x5
 3214 0755 31       		.byte	0x31
 3215 0756 C5000000 		.4byte	0xc5
 3216 075a 05       		.uleb128 0x5
 3217 075b 03       		.byte	0x3
 3218 075c 00000000 		.4byte	quad_diff1
 3219 0760 20       		.uleb128 0x20
 3220 0761 1B000000 		.4byte	.LASF111
 3221 0765 05       		.byte	0x5
 3222 0766 32       		.byte	0x32
 3223 0767 C5000000 		.4byte	0xc5
 3224 076b 05       		.uleb128 0x5
 3225 076c 03       		.byte	0x3
 3226 076d 00000000 		.4byte	quad_diff2
 3227 0771 20       		.uleb128 0x20
 3228 0772 50000000 		.4byte	.LASF112
 3229 0776 05       		.byte	0x5
 3230 0777 35       		.byte	0x35
 3231 0778 C5000000 		.4byte	0xc5
 3232 077c 05       		.uleb128 0x5
 3233 077d 03       		.byte	0x3
 3234 077e 00000000 		.4byte	start_turn_count
 3235 0782 20       		.uleb128 0x20
 3236 0783 EF030000 		.4byte	.LASF113
 3237 0787 05       		.byte	0x5
 3238 0788 38       		.byte	0x38
 3239 0789 C5000000 		.4byte	0xc5
 3240 078d 05       		.uleb128 0x5
 3241 078e 03       		.byte	0x3
 3242 078f 00000000 		.4byte	left_duty_cycle
 3243 0793 20       		.uleb128 0x20
 3244 0794 03060000 		.4byte	.LASF114
 3245 0798 05       		.byte	0x5
 3246 0799 39       		.byte	0x39
 3247 079a C5000000 		.4byte	0xc5
 3248 079e 05       		.uleb128 0x5
 3249 079f 03       		.byte	0x3
 3250 07a0 00000000 		.4byte	right_duty_cycle
 3251 07a4 20       		.uleb128 0x20
 3252 07a5 88040000 		.4byte	.LASF115
 3253 07a9 05       		.byte	0x5
 3254 07aa 3C       		.byte	0x3c
 3255 07ab C5000000 		.4byte	0xc5
 3256 07af 05       		.uleb128 0x5
 3257 07b0 03       		.byte	0x3
 3258 07b1 00000000 		.4byte	leftSpeedLimit
 3259 07b5 20       		.uleb128 0x20
 3260 07b6 73020000 		.4byte	.LASF116
 3261 07ba 05       		.byte	0x5
 3262 07bb 3D       		.byte	0x3d
 3263 07bc C5000000 		.4byte	0xc5
 3264 07c0 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 69


 3265 07c1 03       		.byte	0x3
 3266 07c2 00000000 		.4byte	rightSpeedLimit
 3267 07c6 20       		.uleb128 0x20
 3268 07c7 37050000 		.4byte	.LASF117
 3269 07cb 05       		.byte	0x5
 3270 07cc 40       		.byte	0x40
 3271 07cd 95000000 		.4byte	0x95
 3272 07d1 05       		.uleb128 0x5
 3273 07d2 03       		.byte	0x3
 3274 07d3 00000000 		.4byte	brakeFlag
 3275 07d7 20       		.uleb128 0x20
 3276 07d8 CA010000 		.4byte	.LASF118
 3277 07dc 05       		.byte	0x5
 3278 07dd 41       		.byte	0x41
 3279 07de 95000000 		.4byte	0x95
 3280 07e2 05       		.uleb128 0x5
 3281 07e3 03       		.byte	0x3
 3282 07e4 00000000 		.4byte	portOpen
 3283 07e8 20       		.uleb128 0x20
 3284 07e9 44000000 		.4byte	.LASF119
 3285 07ed 05       		.byte	0x5
 3286 07ee 44       		.byte	0x44
 3287 07ef C5000000 		.4byte	0xc5
 3288 07f3 05       		.uleb128 0x5
 3289 07f4 03       		.byte	0x3
 3290 07f5 00000000 		.4byte	prevVoltage
 3291 07f9 20       		.uleb128 0x20
 3292 07fa 9E000000 		.4byte	.LASF120
 3293 07fe 05       		.byte	0x5
 3294 07ff 45       		.byte	0x45
 3295 0800 C5000000 		.4byte	0xc5
 3296 0804 05       		.uleb128 0x5
 3297 0805 03       		.byte	0x3
 3298 0806 00000000 		.4byte	prevVoltage2
 3299 080a 20       		.uleb128 0x20
 3300 080b 72050000 		.4byte	.LASF121
 3301 080f 05       		.byte	0x5
 3302 0810 4B       		.byte	0x4b
 3303 0811 66040000 		.4byte	0x466
 3304 0815 05       		.uleb128 0x5
 3305 0816 03       		.byte	0x3
 3306 0817 00000000 		.4byte	displaystring
 3307 081b 20       		.uleb128 0x20
 3308 081c 1E050000 		.4byte	.LASF122
 3309 0820 05       		.byte	0x5
 3310 0821 4C       		.byte	0x4c
 3311 0822 66040000 		.4byte	0x466
 3312 0826 05       		.uleb128 0x5
 3313 0827 03       		.byte	0x3
 3314 0828 00000000 		.4byte	line
 3315 082c 20       		.uleb128 0x20
 3316 082d 0A050000 		.4byte	.LASF123
 3317 0831 05       		.byte	0x5
 3318 0832 4C       		.byte	0x4c
 3319 0833 66040000 		.4byte	0x466
 3320 0837 05       		.uleb128 0x5
 3321 0838 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 70


 3322 0839 00000000 		.4byte	entry
 3323 083d 0E       		.uleb128 0xe
 3324 083e 95000000 		.4byte	0x95
 3325 0842 4D080000 		.4byte	0x84d
 3326 0846 0F       		.uleb128 0xf
 3327 0847 76000000 		.4byte	0x76
 3328 084b 3F       		.byte	0x3f
 3329 084c 00       		.byte	0
 3330 084d 20       		.uleb128 0x20
 3331 084e 50010000 		.4byte	.LASF124
 3332 0852 05       		.byte	0x5
 3333 0853 4D       		.byte	0x4d
 3334 0854 3D080000 		.4byte	0x83d
 3335 0858 05       		.uleb128 0x5
 3336 0859 03       		.byte	0x3
 3337 085a 00000000 		.4byte	usbBuffer
 3338 085e 20       		.uleb128 0x20
 3339 085f BA020000 		.4byte	.LASF125
 3340 0863 05       		.byte	0x5
 3341 0864 62       		.byte	0x62
 3342 0865 0B010000 		.4byte	0x10b
 3343 0869 05       		.uleb128 0x5
 3344 086a 03       		.byte	0x3
 3345 086b 00000000 		.4byte	buffer_state
 3346 086f 20       		.uleb128 0x20
 3347 0870 7E000000 		.4byte	.LASF126
 3348 0874 05       		.byte	0x5
 3349 0875 63       		.byte	0x63
 3350 0876 0B010000 		.4byte	0x10b
 3351 087a 05       		.uleb128 0x5
 3352 087b 03       		.byte	0x3
 3353 087c 00000000 		.4byte	system_state
 3354 0880 20       		.uleb128 0x20
 3355 0881 02010000 		.4byte	.LASF127
 3356 0885 05       		.byte	0x5
 3357 0886 65       		.byte	0x65
 3358 0887 E6000000 		.4byte	0xe6
 3359 088b 05       		.uleb128 0x5
 3360 088c 03       		.byte	0x3
 3361 088d 00000000 		.4byte	movement_state
 3362 0891 20       		.uleb128 0x20
 3363 0892 10020000 		.4byte	.LASF128
 3364 0896 05       		.byte	0x5
 3365 0897 67       		.byte	0x67
 3366 0898 95000000 		.4byte	0x95
 3367 089c 05       		.uleb128 0x5
 3368 089d 03       		.byte	0x3
 3369 089e 00000000 		.4byte	byteCount
 3370 08a2 0E       		.uleb128 0xe
 3371 08a3 83000000 		.4byte	0x83
 3372 08a7 B2080000 		.4byte	0x8b2
 3373 08ab 0F       		.uleb128 0xf
 3374 08ac 76000000 		.4byte	0x76
 3375 08b0 01       		.byte	0x1
 3376 08b1 00       		.byte	0
 3377 08b2 20       		.uleb128 0x20
 3378 08b3 ED040000 		.4byte	.LASF129
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 71


 3379 08b7 05       		.byte	0x5
 3380 08b8 68       		.byte	0x68
 3381 08b9 A2080000 		.4byte	0x8a2
 3382 08bd 05       		.uleb128 0x5
 3383 08be 03       		.byte	0x3
 3384 08bf 00000000 		.4byte	packet
 3385 08c3 00       		.byte	0
 3386              		.section	.debug_abbrev,"",%progbits
 3387              	.Ldebug_abbrev0:
 3388 0000 01       		.uleb128 0x1
 3389 0001 11       		.uleb128 0x11
 3390 0002 01       		.byte	0x1
 3391 0003 25       		.uleb128 0x25
 3392 0004 0E       		.uleb128 0xe
 3393 0005 13       		.uleb128 0x13
 3394 0006 0B       		.uleb128 0xb
 3395 0007 03       		.uleb128 0x3
 3396 0008 0E       		.uleb128 0xe
 3397 0009 1B       		.uleb128 0x1b
 3398 000a 0E       		.uleb128 0xe
 3399 000b 55       		.uleb128 0x55
 3400 000c 17       		.uleb128 0x17
 3401 000d 11       		.uleb128 0x11
 3402 000e 01       		.uleb128 0x1
 3403 000f 10       		.uleb128 0x10
 3404 0010 17       		.uleb128 0x17
 3405 0011 00       		.byte	0
 3406 0012 00       		.byte	0
 3407 0013 02       		.uleb128 0x2
 3408 0014 24       		.uleb128 0x24
 3409 0015 00       		.byte	0
 3410 0016 0B       		.uleb128 0xb
 3411 0017 0B       		.uleb128 0xb
 3412 0018 3E       		.uleb128 0x3e
 3413 0019 0B       		.uleb128 0xb
 3414 001a 03       		.uleb128 0x3
 3415 001b 0E       		.uleb128 0xe
 3416 001c 00       		.byte	0
 3417 001d 00       		.byte	0
 3418 001e 03       		.uleb128 0x3
 3419 001f 16       		.uleb128 0x16
 3420 0020 00       		.byte	0
 3421 0021 03       		.uleb128 0x3
 3422 0022 0E       		.uleb128 0xe
 3423 0023 3A       		.uleb128 0x3a
 3424 0024 0B       		.uleb128 0xb
 3425 0025 3B       		.uleb128 0x3b
 3426 0026 0B       		.uleb128 0xb
 3427 0027 49       		.uleb128 0x49
 3428 0028 13       		.uleb128 0x13
 3429 0029 00       		.byte	0
 3430 002a 00       		.byte	0
 3431 002b 04       		.uleb128 0x4
 3432 002c 24       		.uleb128 0x24
 3433 002d 00       		.byte	0
 3434 002e 0B       		.uleb128 0xb
 3435 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 72


 3436 0030 3E       		.uleb128 0x3e
 3437 0031 0B       		.uleb128 0xb
 3438 0032 03       		.uleb128 0x3
 3439 0033 08       		.uleb128 0x8
 3440 0034 00       		.byte	0
 3441 0035 00       		.byte	0
 3442 0036 05       		.uleb128 0x5
 3443 0037 0F       		.uleb128 0xf
 3444 0038 00       		.byte	0
 3445 0039 0B       		.uleb128 0xb
 3446 003a 0B       		.uleb128 0xb
 3447 003b 49       		.uleb128 0x49
 3448 003c 13       		.uleb128 0x13
 3449 003d 00       		.byte	0
 3450 003e 00       		.byte	0
 3451 003f 06       		.uleb128 0x6
 3452 0040 16       		.uleb128 0x16
 3453 0041 00       		.byte	0
 3454 0042 03       		.uleb128 0x3
 3455 0043 0E       		.uleb128 0xe
 3456 0044 3A       		.uleb128 0x3a
 3457 0045 0B       		.uleb128 0xb
 3458 0046 3B       		.uleb128 0x3b
 3459 0047 05       		.uleb128 0x5
 3460 0048 49       		.uleb128 0x49
 3461 0049 13       		.uleb128 0x13
 3462 004a 00       		.byte	0
 3463 004b 00       		.byte	0
 3464 004c 07       		.uleb128 0x7
 3465 004d 04       		.uleb128 0x4
 3466 004e 01       		.byte	0x1
 3467 004f 03       		.uleb128 0x3
 3468 0050 0E       		.uleb128 0xe
 3469 0051 0B       		.uleb128 0xb
 3470 0052 0B       		.uleb128 0xb
 3471 0053 3A       		.uleb128 0x3a
 3472 0054 0B       		.uleb128 0xb
 3473 0055 3B       		.uleb128 0x3b
 3474 0056 0B       		.uleb128 0xb
 3475 0057 01       		.uleb128 0x1
 3476 0058 13       		.uleb128 0x13
 3477 0059 00       		.byte	0
 3478 005a 00       		.byte	0
 3479 005b 08       		.uleb128 0x8
 3480 005c 28       		.uleb128 0x28
 3481 005d 00       		.byte	0
 3482 005e 03       		.uleb128 0x3
 3483 005f 0E       		.uleb128 0xe
 3484 0060 1C       		.uleb128 0x1c
 3485 0061 0D       		.uleb128 0xd
 3486 0062 00       		.byte	0
 3487 0063 00       		.byte	0
 3488 0064 09       		.uleb128 0x9
 3489 0065 13       		.uleb128 0x13
 3490 0066 01       		.byte	0x1
 3491 0067 03       		.uleb128 0x3
 3492 0068 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 73


 3493 0069 0B       		.uleb128 0xb
 3494 006a 0B       		.uleb128 0xb
 3495 006b 3A       		.uleb128 0x3a
 3496 006c 0B       		.uleb128 0xb
 3497 006d 3B       		.uleb128 0x3b
 3498 006e 0B       		.uleb128 0xb
 3499 006f 01       		.uleb128 0x1
 3500 0070 13       		.uleb128 0x13
 3501 0071 00       		.byte	0
 3502 0072 00       		.byte	0
 3503 0073 0A       		.uleb128 0xa
 3504 0074 0D       		.uleb128 0xd
 3505 0075 00       		.byte	0
 3506 0076 03       		.uleb128 0x3
 3507 0077 0E       		.uleb128 0xe
 3508 0078 3A       		.uleb128 0x3a
 3509 0079 0B       		.uleb128 0xb
 3510 007a 3B       		.uleb128 0x3b
 3511 007b 0B       		.uleb128 0xb
 3512 007c 49       		.uleb128 0x49
 3513 007d 13       		.uleb128 0x13
 3514 007e 38       		.uleb128 0x38
 3515 007f 0B       		.uleb128 0xb
 3516 0080 00       		.byte	0
 3517 0081 00       		.byte	0
 3518 0082 0B       		.uleb128 0xb
 3519 0083 2E       		.uleb128 0x2e
 3520 0084 01       		.byte	0x1
 3521 0085 3F       		.uleb128 0x3f
 3522 0086 19       		.uleb128 0x19
 3523 0087 03       		.uleb128 0x3
 3524 0088 0E       		.uleb128 0xe
 3525 0089 3A       		.uleb128 0x3a
 3526 008a 0B       		.uleb128 0xb
 3527 008b 3B       		.uleb128 0x3b
 3528 008c 0B       		.uleb128 0xb
 3529 008d 11       		.uleb128 0x11
 3530 008e 01       		.uleb128 0x1
 3531 008f 12       		.uleb128 0x12
 3532 0090 06       		.uleb128 0x6
 3533 0091 40       		.uleb128 0x40
 3534 0092 18       		.uleb128 0x18
 3535 0093 9742     		.uleb128 0x2117
 3536 0095 19       		.uleb128 0x19
 3537 0096 01       		.uleb128 0x1
 3538 0097 13       		.uleb128 0x13
 3539 0098 00       		.byte	0
 3540 0099 00       		.byte	0
 3541 009a 0C       		.uleb128 0xc
 3542 009b 0B       		.uleb128 0xb
 3543 009c 01       		.byte	0x1
 3544 009d 11       		.uleb128 0x11
 3545 009e 01       		.uleb128 0x1
 3546 009f 12       		.uleb128 0x12
 3547 00a0 06       		.uleb128 0x6
 3548 00a1 00       		.byte	0
 3549 00a2 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 74


 3550 00a3 0D       		.uleb128 0xd
 3551 00a4 34       		.uleb128 0x34
 3552 00a5 00       		.byte	0
 3553 00a6 03       		.uleb128 0x3
 3554 00a7 0E       		.uleb128 0xe
 3555 00a8 3A       		.uleb128 0x3a
 3556 00a9 0B       		.uleb128 0xb
 3557 00aa 3B       		.uleb128 0x3b
 3558 00ab 0B       		.uleb128 0xb
 3559 00ac 49       		.uleb128 0x49
 3560 00ad 13       		.uleb128 0x13
 3561 00ae 02       		.uleb128 0x2
 3562 00af 18       		.uleb128 0x18
 3563 00b0 00       		.byte	0
 3564 00b1 00       		.byte	0
 3565 00b2 0E       		.uleb128 0xe
 3566 00b3 01       		.uleb128 0x1
 3567 00b4 01       		.byte	0x1
 3568 00b5 49       		.uleb128 0x49
 3569 00b6 13       		.uleb128 0x13
 3570 00b7 01       		.uleb128 0x1
 3571 00b8 13       		.uleb128 0x13
 3572 00b9 00       		.byte	0
 3573 00ba 00       		.byte	0
 3574 00bb 0F       		.uleb128 0xf
 3575 00bc 21       		.uleb128 0x21
 3576 00bd 00       		.byte	0
 3577 00be 49       		.uleb128 0x49
 3578 00bf 13       		.uleb128 0x13
 3579 00c0 2F       		.uleb128 0x2f
 3580 00c1 0B       		.uleb128 0xb
 3581 00c2 00       		.byte	0
 3582 00c3 00       		.byte	0
 3583 00c4 10       		.uleb128 0x10
 3584 00c5 2E       		.uleb128 0x2e
 3585 00c6 01       		.byte	0x1
 3586 00c7 3F       		.uleb128 0x3f
 3587 00c8 19       		.uleb128 0x19
 3588 00c9 03       		.uleb128 0x3
 3589 00ca 0E       		.uleb128 0xe
 3590 00cb 3A       		.uleb128 0x3a
 3591 00cc 0B       		.uleb128 0xb
 3592 00cd 3B       		.uleb128 0x3b
 3593 00ce 0B       		.uleb128 0xb
 3594 00cf 27       		.uleb128 0x27
 3595 00d0 19       		.uleb128 0x19
 3596 00d1 11       		.uleb128 0x11
 3597 00d2 01       		.uleb128 0x1
 3598 00d3 12       		.uleb128 0x12
 3599 00d4 06       		.uleb128 0x6
 3600 00d5 40       		.uleb128 0x40
 3601 00d6 18       		.uleb128 0x18
 3602 00d7 9742     		.uleb128 0x2117
 3603 00d9 19       		.uleb128 0x19
 3604 00da 01       		.uleb128 0x1
 3605 00db 13       		.uleb128 0x13
 3606 00dc 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 75


 3607 00dd 00       		.byte	0
 3608 00de 11       		.uleb128 0x11
 3609 00df 05       		.uleb128 0x5
 3610 00e0 00       		.byte	0
 3611 00e1 03       		.uleb128 0x3
 3612 00e2 0E       		.uleb128 0xe
 3613 00e3 3A       		.uleb128 0x3a
 3614 00e4 0B       		.uleb128 0xb
 3615 00e5 3B       		.uleb128 0x3b
 3616 00e6 0B       		.uleb128 0xb
 3617 00e7 49       		.uleb128 0x49
 3618 00e8 13       		.uleb128 0x13
 3619 00e9 02       		.uleb128 0x2
 3620 00ea 18       		.uleb128 0x18
 3621 00eb 00       		.byte	0
 3622 00ec 00       		.byte	0
 3623 00ed 12       		.uleb128 0x12
 3624 00ee 2E       		.uleb128 0x2e
 3625 00ef 00       		.byte	0
 3626 00f0 3F       		.uleb128 0x3f
 3627 00f1 19       		.uleb128 0x19
 3628 00f2 03       		.uleb128 0x3
 3629 00f3 0E       		.uleb128 0xe
 3630 00f4 3A       		.uleb128 0x3a
 3631 00f5 0B       		.uleb128 0xb
 3632 00f6 3B       		.uleb128 0x3b
 3633 00f7 0B       		.uleb128 0xb
 3634 00f8 11       		.uleb128 0x11
 3635 00f9 01       		.uleb128 0x1
 3636 00fa 12       		.uleb128 0x12
 3637 00fb 06       		.uleb128 0x6
 3638 00fc 40       		.uleb128 0x40
 3639 00fd 18       		.uleb128 0x18
 3640 00fe 9642     		.uleb128 0x2116
 3641 0100 19       		.uleb128 0x19
 3642 0101 00       		.byte	0
 3643 0102 00       		.byte	0
 3644 0103 13       		.uleb128 0x13
 3645 0104 2E       		.uleb128 0x2e
 3646 0105 00       		.byte	0
 3647 0106 3F       		.uleb128 0x3f
 3648 0107 19       		.uleb128 0x19
 3649 0108 03       		.uleb128 0x3
 3650 0109 0E       		.uleb128 0xe
 3651 010a 3A       		.uleb128 0x3a
 3652 010b 0B       		.uleb128 0xb
 3653 010c 3B       		.uleb128 0x3b
 3654 010d 0B       		.uleb128 0xb
 3655 010e 11       		.uleb128 0x11
 3656 010f 01       		.uleb128 0x1
 3657 0110 12       		.uleb128 0x12
 3658 0111 06       		.uleb128 0x6
 3659 0112 40       		.uleb128 0x40
 3660 0113 18       		.uleb128 0x18
 3661 0114 9742     		.uleb128 0x2117
 3662 0116 19       		.uleb128 0x19
 3663 0117 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 76


 3664 0118 00       		.byte	0
 3665 0119 14       		.uleb128 0x14
 3666 011a 2E       		.uleb128 0x2e
 3667 011b 01       		.byte	0x1
 3668 011c 3F       		.uleb128 0x3f
 3669 011d 19       		.uleb128 0x19
 3670 011e 03       		.uleb128 0x3
 3671 011f 0E       		.uleb128 0xe
 3672 0120 3A       		.uleb128 0x3a
 3673 0121 0B       		.uleb128 0xb
 3674 0122 3B       		.uleb128 0x3b
 3675 0123 0B       		.uleb128 0xb
 3676 0124 27       		.uleb128 0x27
 3677 0125 19       		.uleb128 0x19
 3678 0126 11       		.uleb128 0x11
 3679 0127 01       		.uleb128 0x1
 3680 0128 12       		.uleb128 0x12
 3681 0129 06       		.uleb128 0x6
 3682 012a 40       		.uleb128 0x40
 3683 012b 18       		.uleb128 0x18
 3684 012c 9642     		.uleb128 0x2116
 3685 012e 19       		.uleb128 0x19
 3686 012f 01       		.uleb128 0x1
 3687 0130 13       		.uleb128 0x13
 3688 0131 00       		.byte	0
 3689 0132 00       		.byte	0
 3690 0133 15       		.uleb128 0x15
 3691 0134 2E       		.uleb128 0x2e
 3692 0135 01       		.byte	0x1
 3693 0136 3F       		.uleb128 0x3f
 3694 0137 19       		.uleb128 0x19
 3695 0138 03       		.uleb128 0x3
 3696 0139 0E       		.uleb128 0xe
 3697 013a 3A       		.uleb128 0x3a
 3698 013b 0B       		.uleb128 0xb
 3699 013c 3B       		.uleb128 0x3b
 3700 013d 05       		.uleb128 0x5
 3701 013e 27       		.uleb128 0x27
 3702 013f 19       		.uleb128 0x19
 3703 0140 11       		.uleb128 0x11
 3704 0141 01       		.uleb128 0x1
 3705 0142 12       		.uleb128 0x12
 3706 0143 06       		.uleb128 0x6
 3707 0144 40       		.uleb128 0x40
 3708 0145 18       		.uleb128 0x18
 3709 0146 9642     		.uleb128 0x2116
 3710 0148 19       		.uleb128 0x19
 3711 0149 01       		.uleb128 0x1
 3712 014a 13       		.uleb128 0x13
 3713 014b 00       		.byte	0
 3714 014c 00       		.byte	0
 3715 014d 16       		.uleb128 0x16
 3716 014e 34       		.uleb128 0x34
 3717 014f 00       		.byte	0
 3718 0150 03       		.uleb128 0x3
 3719 0151 0E       		.uleb128 0xe
 3720 0152 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 77


 3721 0153 0B       		.uleb128 0xb
 3722 0154 3B       		.uleb128 0x3b
 3723 0155 05       		.uleb128 0x5
 3724 0156 49       		.uleb128 0x49
 3725 0157 13       		.uleb128 0x13
 3726 0158 02       		.uleb128 0x2
 3727 0159 18       		.uleb128 0x18
 3728 015a 00       		.byte	0
 3729 015b 00       		.byte	0
 3730 015c 17       		.uleb128 0x17
 3731 015d 2E       		.uleb128 0x2e
 3732 015e 00       		.byte	0
 3733 015f 3F       		.uleb128 0x3f
 3734 0160 19       		.uleb128 0x19
 3735 0161 03       		.uleb128 0x3
 3736 0162 0E       		.uleb128 0xe
 3737 0163 3A       		.uleb128 0x3a
 3738 0164 0B       		.uleb128 0xb
 3739 0165 3B       		.uleb128 0x3b
 3740 0166 05       		.uleb128 0x5
 3741 0167 27       		.uleb128 0x27
 3742 0168 19       		.uleb128 0x19
 3743 0169 11       		.uleb128 0x11
 3744 016a 01       		.uleb128 0x1
 3745 016b 12       		.uleb128 0x12
 3746 016c 06       		.uleb128 0x6
 3747 016d 40       		.uleb128 0x40
 3748 016e 18       		.uleb128 0x18
 3749 016f 9742     		.uleb128 0x2117
 3750 0171 19       		.uleb128 0x19
 3751 0172 00       		.byte	0
 3752 0173 00       		.byte	0
 3753 0174 18       		.uleb128 0x18
 3754 0175 2E       		.uleb128 0x2e
 3755 0176 00       		.byte	0
 3756 0177 3F       		.uleb128 0x3f
 3757 0178 19       		.uleb128 0x19
 3758 0179 03       		.uleb128 0x3
 3759 017a 0E       		.uleb128 0xe
 3760 017b 3A       		.uleb128 0x3a
 3761 017c 0B       		.uleb128 0xb
 3762 017d 3B       		.uleb128 0x3b
 3763 017e 05       		.uleb128 0x5
 3764 017f 27       		.uleb128 0x27
 3765 0180 19       		.uleb128 0x19
 3766 0181 11       		.uleb128 0x11
 3767 0182 01       		.uleb128 0x1
 3768 0183 12       		.uleb128 0x12
 3769 0184 06       		.uleb128 0x6
 3770 0185 40       		.uleb128 0x40
 3771 0186 18       		.uleb128 0x18
 3772 0187 9642     		.uleb128 0x2116
 3773 0189 19       		.uleb128 0x19
 3774 018a 00       		.byte	0
 3775 018b 00       		.byte	0
 3776 018c 19       		.uleb128 0x19
 3777 018d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 78


 3778 018e 01       		.byte	0x1
 3779 018f 3F       		.uleb128 0x3f
 3780 0190 19       		.uleb128 0x19
 3781 0191 03       		.uleb128 0x3
 3782 0192 0E       		.uleb128 0xe
 3783 0193 3A       		.uleb128 0x3a
 3784 0194 0B       		.uleb128 0xb
 3785 0195 3B       		.uleb128 0x3b
 3786 0196 05       		.uleb128 0x5
 3787 0197 11       		.uleb128 0x11
 3788 0198 01       		.uleb128 0x1
 3789 0199 12       		.uleb128 0x12
 3790 019a 06       		.uleb128 0x6
 3791 019b 40       		.uleb128 0x40
 3792 019c 18       		.uleb128 0x18
 3793 019d 9642     		.uleb128 0x2116
 3794 019f 19       		.uleb128 0x19
 3795 01a0 01       		.uleb128 0x1
 3796 01a1 13       		.uleb128 0x13
 3797 01a2 00       		.byte	0
 3798 01a3 00       		.byte	0
 3799 01a4 1A       		.uleb128 0x1a
 3800 01a5 2E       		.uleb128 0x2e
 3801 01a6 00       		.byte	0
 3802 01a7 3F       		.uleb128 0x3f
 3803 01a8 19       		.uleb128 0x19
 3804 01a9 03       		.uleb128 0x3
 3805 01aa 0E       		.uleb128 0xe
 3806 01ab 3A       		.uleb128 0x3a
 3807 01ac 0B       		.uleb128 0xb
 3808 01ad 3B       		.uleb128 0x3b
 3809 01ae 05       		.uleb128 0x5
 3810 01af 49       		.uleb128 0x49
 3811 01b0 13       		.uleb128 0x13
 3812 01b1 11       		.uleb128 0x11
 3813 01b2 01       		.uleb128 0x1
 3814 01b3 12       		.uleb128 0x12
 3815 01b4 06       		.uleb128 0x6
 3816 01b5 40       		.uleb128 0x40
 3817 01b6 18       		.uleb128 0x18
 3818 01b7 9642     		.uleb128 0x2116
 3819 01b9 19       		.uleb128 0x19
 3820 01ba 00       		.byte	0
 3821 01bb 00       		.byte	0
 3822 01bc 1B       		.uleb128 0x1b
 3823 01bd 05       		.uleb128 0x5
 3824 01be 00       		.byte	0
 3825 01bf 03       		.uleb128 0x3
 3826 01c0 08       		.uleb128 0x8
 3827 01c1 3A       		.uleb128 0x3a
 3828 01c2 0B       		.uleb128 0xb
 3829 01c3 3B       		.uleb128 0x3b
 3830 01c4 05       		.uleb128 0x5
 3831 01c5 49       		.uleb128 0x49
 3832 01c6 13       		.uleb128 0x13
 3833 01c7 02       		.uleb128 0x2
 3834 01c8 18       		.uleb128 0x18
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 79


 3835 01c9 00       		.byte	0
 3836 01ca 00       		.byte	0
 3837 01cb 1C       		.uleb128 0x1c
 3838 01cc 34       		.uleb128 0x34
 3839 01cd 00       		.byte	0
 3840 01ce 03       		.uleb128 0x3
 3841 01cf 08       		.uleb128 0x8
 3842 01d0 3A       		.uleb128 0x3a
 3843 01d1 0B       		.uleb128 0xb
 3844 01d2 3B       		.uleb128 0x3b
 3845 01d3 05       		.uleb128 0x5
 3846 01d4 49       		.uleb128 0x49
 3847 01d5 13       		.uleb128 0x13
 3848 01d6 02       		.uleb128 0x2
 3849 01d7 18       		.uleb128 0x18
 3850 01d8 00       		.byte	0
 3851 01d9 00       		.byte	0
 3852 01da 1D       		.uleb128 0x1d
 3853 01db 34       		.uleb128 0x34
 3854 01dc 00       		.byte	0
 3855 01dd 03       		.uleb128 0x3
 3856 01de 0E       		.uleb128 0xe
 3857 01df 3A       		.uleb128 0x3a
 3858 01e0 0B       		.uleb128 0xb
 3859 01e1 3B       		.uleb128 0x3b
 3860 01e2 05       		.uleb128 0x5
 3861 01e3 49       		.uleb128 0x49
 3862 01e4 13       		.uleb128 0x13
 3863 01e5 3F       		.uleb128 0x3f
 3864 01e6 19       		.uleb128 0x19
 3865 01e7 3C       		.uleb128 0x3c
 3866 01e8 19       		.uleb128 0x19
 3867 01e9 00       		.byte	0
 3868 01ea 00       		.byte	0
 3869 01eb 1E       		.uleb128 0x1e
 3870 01ec 35       		.uleb128 0x35
 3871 01ed 00       		.byte	0
 3872 01ee 49       		.uleb128 0x49
 3873 01ef 13       		.uleb128 0x13
 3874 01f0 00       		.byte	0
 3875 01f1 00       		.byte	0
 3876 01f2 1F       		.uleb128 0x1f
 3877 01f3 34       		.uleb128 0x34
 3878 01f4 00       		.byte	0
 3879 01f5 03       		.uleb128 0x3
 3880 01f6 08       		.uleb128 0x8
 3881 01f7 3A       		.uleb128 0x3a
 3882 01f8 0B       		.uleb128 0xb
 3883 01f9 3B       		.uleb128 0x3b
 3884 01fa 0B       		.uleb128 0xb
 3885 01fb 49       		.uleb128 0x49
 3886 01fc 13       		.uleb128 0x13
 3887 01fd 3F       		.uleb128 0x3f
 3888 01fe 19       		.uleb128 0x19
 3889 01ff 02       		.uleb128 0x2
 3890 0200 18       		.uleb128 0x18
 3891 0201 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 80


 3892 0202 00       		.byte	0
 3893 0203 20       		.uleb128 0x20
 3894 0204 34       		.uleb128 0x34
 3895 0205 00       		.byte	0
 3896 0206 03       		.uleb128 0x3
 3897 0207 0E       		.uleb128 0xe
 3898 0208 3A       		.uleb128 0x3a
 3899 0209 0B       		.uleb128 0xb
 3900 020a 3B       		.uleb128 0x3b
 3901 020b 0B       		.uleb128 0xb
 3902 020c 49       		.uleb128 0x49
 3903 020d 13       		.uleb128 0x13
 3904 020e 3F       		.uleb128 0x3f
 3905 020f 19       		.uleb128 0x19
 3906 0210 02       		.uleb128 0x2
 3907 0211 18       		.uleb128 0x18
 3908 0212 00       		.byte	0
 3909 0213 00       		.byte	0
 3910 0214 00       		.byte	0
 3911              		.section	.debug_aranges,"",%progbits
 3912 0000 FC000000 		.4byte	0xfc
 3913 0004 0200     		.2byte	0x2
 3914 0006 00000000 		.4byte	.Ldebug_info0
 3915 000a 04       		.byte	0x4
 3916 000b 00       		.byte	0
 3917 000c 0000     		.2byte	0
 3918 000e 0000     		.2byte	0
 3919 0010 00000000 		.4byte	.LFB63
 3920 0014 60010000 		.4byte	.LFE63-.LFB63
 3921 0018 00000000 		.4byte	.LFB64
 3922 001c 2C000000 		.4byte	.LFE64-.LFB64
 3923 0020 00000000 		.4byte	.LFB65
 3924 0024 18000000 		.4byte	.LFE65-.LFB65
 3925 0028 00000000 		.4byte	.LFB66
 3926 002c 18000000 		.4byte	.LFE66-.LFB66
 3927 0030 00000000 		.4byte	.LFB67
 3928 0034 16000000 		.4byte	.LFE67-.LFB67
 3929 0038 00000000 		.4byte	.LFB68
 3930 003c 0E000000 		.4byte	.LFE68-.LFB68
 3931 0040 00000000 		.4byte	.LFB69
 3932 0044 0E000000 		.4byte	.LFE69-.LFB69
 3933 0048 00000000 		.4byte	.LFB70
 3934 004c 0E000000 		.4byte	.LFE70-.LFB70
 3935 0050 00000000 		.4byte	.LFB71
 3936 0054 2C000000 		.4byte	.LFE71-.LFB71
 3937 0058 00000000 		.4byte	.LFB72
 3938 005c 2C000000 		.4byte	.LFE72-.LFB72
 3939 0060 00000000 		.4byte	.LFB73
 3940 0064 14000000 		.4byte	.LFE73-.LFB73
 3941 0068 00000000 		.4byte	.LFB74
 3942 006c 18000000 		.4byte	.LFE74-.LFB74
 3943 0070 00000000 		.4byte	.LFB75
 3944 0074 34000000 		.4byte	.LFE75-.LFB75
 3945 0078 00000000 		.4byte	.LFB76
 3946 007c 98000000 		.4byte	.LFE76-.LFB76
 3947 0080 00000000 		.4byte	.LFB77
 3948 0084 9C000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 81


 3949 0088 00000000 		.4byte	.LFB78
 3950 008c 0C000000 		.4byte	.LFE78-.LFB78
 3951 0090 00000000 		.4byte	.LFB79
 3952 0094 2C000000 		.4byte	.LFE79-.LFB79
 3953 0098 00000000 		.4byte	.LFB80
 3954 009c B8000000 		.4byte	.LFE80-.LFB80
 3955 00a0 00000000 		.4byte	.LFB81
 3956 00a4 70000000 		.4byte	.LFE81-.LFB81
 3957 00a8 00000000 		.4byte	.LFB82
 3958 00ac 18000000 		.4byte	.LFE82-.LFB82
 3959 00b0 00000000 		.4byte	.LFB83
 3960 00b4 1C000000 		.4byte	.LFE83-.LFB83
 3961 00b8 00000000 		.4byte	.LFB84
 3962 00bc 0A000000 		.4byte	.LFE84-.LFB84
 3963 00c0 00000000 		.4byte	.LFB85
 3964 00c4 D8010000 		.4byte	.LFE85-.LFB85
 3965 00c8 00000000 		.4byte	.LFB86
 3966 00cc C0000000 		.4byte	.LFE86-.LFB86
 3967 00d0 00000000 		.4byte	.LFB87
 3968 00d4 B8000000 		.4byte	.LFE87-.LFB87
 3969 00d8 00000000 		.4byte	.LFB88
 3970 00dc B8000000 		.4byte	.LFE88-.LFB88
 3971 00e0 00000000 		.4byte	.LFB89
 3972 00e4 68000000 		.4byte	.LFE89-.LFB89
 3973 00e8 00000000 		.4byte	.LFB90
 3974 00ec 50000000 		.4byte	.LFE90-.LFB90
 3975 00f0 00000000 		.4byte	.LFB91
 3976 00f4 3A000000 		.4byte	.LFE91-.LFB91
 3977 00f8 00000000 		.4byte	0
 3978 00fc 00000000 		.4byte	0
 3979              		.section	.debug_ranges,"",%progbits
 3980              	.Ldebug_ranges0:
 3981 0000 00000000 		.4byte	.LFB63
 3982 0004 60010000 		.4byte	.LFE63
 3983 0008 00000000 		.4byte	.LFB64
 3984 000c 2C000000 		.4byte	.LFE64
 3985 0010 00000000 		.4byte	.LFB65
 3986 0014 18000000 		.4byte	.LFE65
 3987 0018 00000000 		.4byte	.LFB66
 3988 001c 18000000 		.4byte	.LFE66
 3989 0020 00000000 		.4byte	.LFB67
 3990 0024 16000000 		.4byte	.LFE67
 3991 0028 00000000 		.4byte	.LFB68
 3992 002c 0E000000 		.4byte	.LFE68
 3993 0030 00000000 		.4byte	.LFB69
 3994 0034 0E000000 		.4byte	.LFE69
 3995 0038 00000000 		.4byte	.LFB70
 3996 003c 0E000000 		.4byte	.LFE70
 3997 0040 00000000 		.4byte	.LFB71
 3998 0044 2C000000 		.4byte	.LFE71
 3999 0048 00000000 		.4byte	.LFB72
 4000 004c 2C000000 		.4byte	.LFE72
 4001 0050 00000000 		.4byte	.LFB73
 4002 0054 14000000 		.4byte	.LFE73
 4003 0058 00000000 		.4byte	.LFB74
 4004 005c 18000000 		.4byte	.LFE74
 4005 0060 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 82


 4006 0064 34000000 		.4byte	.LFE75
 4007 0068 00000000 		.4byte	.LFB76
 4008 006c 98000000 		.4byte	.LFE76
 4009 0070 00000000 		.4byte	.LFB77
 4010 0074 9C000000 		.4byte	.LFE77
 4011 0078 00000000 		.4byte	.LFB78
 4012 007c 0C000000 		.4byte	.LFE78
 4013 0080 00000000 		.4byte	.LFB79
 4014 0084 2C000000 		.4byte	.LFE79
 4015 0088 00000000 		.4byte	.LFB80
 4016 008c B8000000 		.4byte	.LFE80
 4017 0090 00000000 		.4byte	.LFB81
 4018 0094 70000000 		.4byte	.LFE81
 4019 0098 00000000 		.4byte	.LFB82
 4020 009c 18000000 		.4byte	.LFE82
 4021 00a0 00000000 		.4byte	.LFB83
 4022 00a4 1C000000 		.4byte	.LFE83
 4023 00a8 00000000 		.4byte	.LFB84
 4024 00ac 0A000000 		.4byte	.LFE84
 4025 00b0 00000000 		.4byte	.LFB85
 4026 00b4 D8010000 		.4byte	.LFE85
 4027 00b8 00000000 		.4byte	.LFB86
 4028 00bc C0000000 		.4byte	.LFE86
 4029 00c0 00000000 		.4byte	.LFB87
 4030 00c4 B8000000 		.4byte	.LFE87
 4031 00c8 00000000 		.4byte	.LFB88
 4032 00cc B8000000 		.4byte	.LFE88
 4033 00d0 00000000 		.4byte	.LFB89
 4034 00d4 68000000 		.4byte	.LFE89
 4035 00d8 00000000 		.4byte	.LFB90
 4036 00dc 50000000 		.4byte	.LFE90
 4037 00e0 00000000 		.4byte	.LFB91
 4038 00e4 3A000000 		.4byte	.LFE91
 4039 00e8 00000000 		.4byte	0
 4040 00ec 00000000 		.4byte	0
 4041              		.section	.debug_line,"",%progbits
 4042              	.Ldebug_line0:
 4043 0000 58040000 		.section	.debug_str,"MS",%progbits,1
 4043      02005501 
 4043      00000201 
 4043      FB0E0D00 
 4043      01010101 
 4044              	.LASF104:
 4045 0000 64697265 		.ascii	"direction\000"
 4045      6374696F 
 4045      6E00
 4046              	.LASF23:
 4047 000a 52545552 		.ascii	"RTURN\000"
 4047      4E00
 4048              	.LASF110:
 4049 0010 71756164 		.ascii	"quad_diff1\000"
 4049      5F646966 
 4049      663100
 4050              	.LASF111:
 4051 001b 71756164 		.ascii	"quad_diff2\000"
 4051      5F646966 
 4051      663200
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 83


 4052              	.LASF72:
 4053 0026 77686565 		.ascii	"wheel_2_str\000"
 4053      6C5F325F 
 4053      73747200 
 4054              	.LASF70:
 4055 0032 51756164 		.ascii	"Quad_Dec_response\000"
 4055      5F446563 
 4055      5F726573 
 4055      706F6E73 
 4055      6500
 4056              	.LASF119:
 4057 0044 70726576 		.ascii	"prevVoltage\000"
 4057      566F6C74 
 4057      61676500 
 4058              	.LASF112:
 4059 0050 73746172 		.ascii	"start_turn_count\000"
 4059      745F7475 
 4059      726E5F63 
 4059      6F756E74 
 4059      00
 4060              	.LASF8:
 4061 0061 756E7369 		.ascii	"unsigned int\000"
 4061      676E6564 
 4061      20696E74 
 4061      00
 4062              	.LASF11:
 4063 006e 5F5F696E 		.ascii	"__int32_t\000"
 4063      7433325F 
 4063      7400
 4064              	.LASF17:
 4065 0078 696E7431 		.ascii	"int16\000"
 4065      3600
 4066              	.LASF126:
 4067 007e 73797374 		.ascii	"system_state\000"
 4067      656D5F73 
 4067      74617465 
 4067      00
 4068              	.LASF22:
 4069 008b 4C545552 		.ascii	"LTURN\000"
 4069      4E00
 4070              	.LASF68:
 4071 0091 6973725F 		.ascii	"isr_adcTimer\000"
 4071      61646354 
 4071      696D6572 
 4071      00
 4072              	.LASF120:
 4073 009e 70726576 		.ascii	"prevVoltage2\000"
 4073      566F6C74 
 4073      61676532 
 4073      00
 4074              	.LASF42:
 4075 00ab 7061636B 		.ascii	"packet_bytes\000"
 4075      65745F62 
 4075      79746573 
 4075      00
 4076              	.LASF38:
 4077 00b8 67325F78 		.ascii	"g2_xpos\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 84


 4077      706F7300 
 4078              	.LASF106:
 4079 00c0 71756164 		.ascii	"quad_count1\000"
 4079      5F636F75 
 4079      6E743100 
 4080              	.LASF107:
 4081 00cc 71756164 		.ascii	"quad_count2\000"
 4081      5F636F75 
 4081      6E743200 
 4082              	.LASF100:
 4083 00d8 666C6167 		.ascii	"flag_rf_transmission_active\000"
 4083      5F72665F 
 4083      7472616E 
 4083      736D6973 
 4083      73696F6E 
 4084              	.LASF101:
 4085 00f4 666C6167 		.ascii	"flag_print_rf\000"
 4085      5F707269 
 4085      6E745F72 
 4085      6600
 4086              	.LASF127:
 4087 0102 6D6F7665 		.ascii	"movement_state\000"
 4087      6D656E74 
 4087      5F737461 
 4087      746500
 4088              	.LASF84:
 4089 0111 75736250 		.ascii	"usbPutString\000"
 4089      75745374 
 4089      72696E67 
 4089      00
 4090              	.LASF55:
 4091 011e 696E6974 		.ascii	"initForward\000"
 4091      466F7277 
 4091      61726400 
 4092              	.LASF41:
 4093 012a 67325F64 		.ascii	"g2_direction\000"
 4093      69726563 
 4093      74696F6E 
 4093      00
 4094              	.LASF64:
 4095 0137 6973725F 		.ascii	"isr_quad1\000"
 4095      71756164 
 4095      3100
 4096              	.LASF18:
 4097 0141 666C6F61 		.ascii	"float\000"
 4097      7400
 4098              	.LASF58:
 4099 0147 73657453 		.ascii	"setSpeed\000"
 4099      70656564 
 4099      00
 4100              	.LASF124:
 4101 0150 75736242 		.ascii	"usbBuffer\000"
 4101      75666665 
 4101      7200
 4102              	.LASF26:
 4103 015a 696E6465 		.ascii	"index\000"
 4103      7800
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 85


 4104              	.LASF21:
 4105 0160 44524956 		.ascii	"DRIVE\000"
 4105      4500
 4106              	.LASF44:
 4107 0166 73747269 		.ascii	"string_packet\000"
 4107      6E675F70 
 4107      61636B65 
 4107      7400
 4108              	.LASF50:
 4109 0174 64726976 		.ascii	"driveForwards\000"
 4109      65466F72 
 4109      77617264 
 4109      7300
 4110              	.LASF51:
 4111 0182 7475726E 		.ascii	"turnLeft\000"
 4111      4C656674 
 4111      00
 4112              	.LASF7:
 4113 018b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4113      206C6F6E 
 4113      6720756E 
 4113      7369676E 
 4113      65642069 
 4114              	.LASF97:
 4115 01a2 666C6167 		.ascii	"flag_packet\000"
 4115      5F706163 
 4115      6B657400 
 4116              	.LASF65:
 4117 01ae 6973725F 		.ascii	"isr_turn_timer\000"
 4117      7475726E 
 4117      5F74696D 
 4117      657200
 4118              	.LASF53:
 4119 01bd 696E6974 		.ascii	"initTurnLeft\000"
 4119      5475726E 
 4119      4C656674 
 4119      00
 4120              	.LASF118:
 4121 01ca 706F7274 		.ascii	"portOpen\000"
 4121      4F70656E 
 4121      00
 4122              	.LASF56:
 4123 01d3 696E6974 		.ascii	"initBrake\000"
 4123      4272616B 
 4123      6500
 4124              	.LASF93:
 4125 01dd 666C6167 		.ascii	"flag_ts_update\000"
 4125      5F74735F 
 4125      75706461 
 4125      746500
 4126              	.LASF78:
 4127 01ec 7363616C 		.ascii	"scalingFactor\000"
 4127      696E6746 
 4127      6163746F 
 4127      7200
 4128              	.LASF73:
 4129 01fa 6C656674 		.ascii	"leftSpeed\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 86


 4129      53706565 
 4129      6400
 4130              	.LASF92:
 4131 0204 666C6167 		.ascii	"flag_ts_enc\000"
 4131      5F74735F 
 4131      656E6300 
 4132              	.LASF128:
 4133 0210 62797465 		.ascii	"byteCount\000"
 4133      436F756E 
 4133      7400
 4134              	.LASF67:
 4135 021a 62757474 		.ascii	"button\000"
 4135      6F6E00
 4136              	.LASF80:
 4137 0221 72657375 		.ascii	"result_str\000"
 4137      6C745F73 
 4137      747200
 4138              	.LASF86:
 4139 022c 75617274 		.ascii	"uart_set_PWM\000"
 4139      5F736574 
 4139      5F50574D 
 4139      00
 4140              	.LASF28:
 4141 0239 726F626F 		.ascii	"robot_ypos\000"
 4141      745F7970 
 4141      6F7300
 4142              	.LASF91:
 4143 0244 74735F64 		.ascii	"ts_display\000"
 4143      6973706C 
 4143      617900
 4144              	.LASF77:
 4145 024f 7072696E 		.ascii	"print_ADC\000"
 4145      745F4144 
 4145      4300
 4146              	.LASF71:
 4147 0259 77686565 		.ascii	"wheel_1_str\000"
 4147      6C5F315F 
 4147      73747200 
 4148              	.LASF10:
 4149 0265 63686172 		.ascii	"char\000"
 4149      00
 4150              	.LASF32:
 4151 026a 67305F73 		.ascii	"g0_speed\000"
 4151      70656564 
 4151      00
 4152              	.LASF116:
 4153 0273 72696768 		.ascii	"rightSpeedLimit\000"
 4153      74537065 
 4153      65644C69 
 4153      6D697400 
 4154              	.LASF14:
 4155 0283 75696E74 		.ascii	"uint16\000"
 4155      313600
 4156              	.LASF16:
 4157 028a 696E7438 		.ascii	"int8\000"
 4157      00
 4158              	.LASF37:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 87


 4159 028f 67315F64 		.ascii	"g1_direction\000"
 4159      69726563 
 4159      74696F6E 
 4159      00
 4160              	.LASF75:
 4161 029c 696E7465 		.ascii	"interCalc\000"
 4161      7243616C 
 4161      6300
 4162              	.LASF45:
 4163 02a6 72696768 		.ascii	"right\000"
 4163      7400
 4164              	.LASF6:
 4165 02ac 6C6F6E67 		.ascii	"long long int\000"
 4165      206C6F6E 
 4165      6720696E 
 4165      7400
 4166              	.LASF125:
 4167 02ba 62756666 		.ascii	"buffer_state\000"
 4167      65725F73 
 4167      74617465 
 4167      00
 4168              	.LASF34:
 4169 02c7 67315F78 		.ascii	"g1_xpos\000"
 4169      706F7300 
 4170              	.LASF130:
 4171 02cf 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4171      4320342E 
 4171      392E3320 
 4171      32303135 
 4171      30333033 
 4172 0302 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4172      20726576 
 4172      6973696F 
 4172      6E203232 
 4172      31323230 
 4173 0335 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4173      66756E63 
 4173      74696F6E 
 4173      2D736563 
 4173      74696F6E 
 4174              	.LASF40:
 4175 035d 67325F73 		.ascii	"g2_speed\000"
 4175      70656564 
 4175      00
 4176              	.LASF31:
 4177 0366 67305F79 		.ascii	"g0_ypos\000"
 4177      706F7300 
 4178              	.LASF60:
 4179 036e 72665F63 		.ascii	"rf_char\000"
 4179      68617200 
 4180              	.LASF74:
 4181 0376 72696768 		.ascii	"rightSpeed\000"
 4181      74537065 
 4181      656400
 4182              	.LASF90:
 4183 0381 74735F73 		.ascii	"ts_speed\000"
 4183      70656564 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 88


 4183      00
 4184              	.LASF15:
 4185 038a 75696E74 		.ascii	"uint32\000"
 4185      333200
 4186              	.LASF134:
 4187 0391 64617461 		.ascii	"data_main\000"
 4187      5F6D6169 
 4187      6E00
 4188              	.LASF79:
 4189 039b 636F6E76 		.ascii	"converted_val\000"
 4189      65727465 
 4189      645F7661 
 4189      6C00
 4190              	.LASF25:
 4191 03a9 72737369 		.ascii	"rssi\000"
 4191      00
 4192              	.LASF33:
 4193 03ae 67305F64 		.ascii	"g0_direction\000"
 4193      69726563 
 4193      74696F6E 
 4193      00
 4194              	.LASF102:
 4195 03bb 666C6167 		.ascii	"flag_receive_ADC\000"
 4195      5F726563 
 4195      65697665 
 4195      5F414443 
 4195      00
 4196              	.LASF24:
 4197 03cc 53544F50 		.ascii	"STOPPED\000"
 4197      50454400 
 4198              	.LASF61:
 4199 03d4 42545F72 		.ascii	"BT_rxInt\000"
 4199      78496E74 
 4199      00
 4200              	.LASF20:
 4201 03dd 6C6F6E67 		.ascii	"long double\000"
 4201      20646F75 
 4201      626C6500 
 4202              	.LASF59:
 4203 03e9 7278496E 		.ascii	"rxInt\000"
 4203      7400
 4204              	.LASF113:
 4205 03ef 6C656674 		.ascii	"left_duty_cycle\000"
 4205      5F647574 
 4205      795F6379 
 4205      636C6500 
 4206              	.LASF94:
 4207 03ff 666C6167 		.ascii	"flag_ts_speed\000"
 4207      5F74735F 
 4207      73706565 
 4207      6400
 4208              	.LASF99:
 4209 040d 64617461 		.ascii	"dataready_flag\000"
 4209      72656164 
 4209      795F666C 
 4209      616700
 4210              	.LASF96:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 89


 4211 041c 666C6167 		.ascii	"flag_rx\000"
 4211      5F727800 
 4212              	.LASF2:
 4213 0424 73686F72 		.ascii	"short int\000"
 4213      7420696E 
 4213      7400
 4214              	.LASF103:
 4215 042e 6164635F 		.ascii	"adc_result\000"
 4215      72657375 
 4215      6C7400
 4216              	.LASF105:
 4217 0439 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 4217      5F63616C 
 4217      635F7768 
 4217      65656C73 
 4217      70656564 
 4218              	.LASF4:
 4219 044e 6C6F6E67 		.ascii	"long int\000"
 4219      20696E74 
 4219      00
 4220              	.LASF54:
 4221 0457 696E6974 		.ascii	"initTurnRight\000"
 4221      5475726E 
 4221      52696768 
 4221      7400
 4222              	.LASF87:
 4223 0465 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4223      52784275 
 4223      66666572 
 4223      00
 4224              	.LASF82:
 4225 0472 7072696E 		.ascii	"printString\000"
 4225      74537472 
 4225      696E6700 
 4226              	.LASF89:
 4227 047e 74735F75 		.ascii	"ts_update\000"
 4227      70646174 
 4227      6500
 4228              	.LASF115:
 4229 0488 6C656674 		.ascii	"leftSpeedLimit\000"
 4229      53706565 
 4229      644C696D 
 4229      697400
 4230              	.LASF39:
 4231 0497 67325F79 		.ascii	"g2_ypos\000"
 4231      706F7300 
 4232              	.LASF46:
 4233 049f 6C656674 		.ascii	"left\000"
 4233      00
 4234              	.LASF52:
 4235 04a4 7475726E 		.ascii	"turnRight\000"
 4235      52696768 
 4235      7400
 4236              	.LASF35:
 4237 04ae 67315F79 		.ascii	"g1_ypos\000"
 4237      706F7300 
 4238              	.LASF63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 90


 4239 04b6 6164635F 		.ascii	"adc_isr\000"
 4239      69737200 
 4240              	.LASF9:
 4241 04be 73697A65 		.ascii	"sizetype\000"
 4241      74797065 
 4241      00
 4242              	.LASF5:
 4243 04c7 6C6F6E67 		.ascii	"long unsigned int\000"
 4243      20756E73 
 4243      69676E65 
 4243      6420696E 
 4243      7400
 4244              	.LASF43:
 4245 04d9 62797465 		.ascii	"byte_packet\000"
 4245      5F706163 
 4245      6B657400 
 4246              	.LASF12:
 4247 04e5 696E7433 		.ascii	"int32_t\000"
 4247      325F7400 
 4248              	.LASF129:
 4249 04ed 7061636B 		.ascii	"packet\000"
 4249      657400
 4250              	.LASF27:
 4251 04f4 726F626F 		.ascii	"robot_xpos\000"
 4251      745F7870 
 4251      6F7300
 4252              	.LASF49:
 4253 04ff 6272616B 		.ascii	"brakeMotor\000"
 4253      654D6F74 
 4253      6F7200
 4254              	.LASF123:
 4255 050a 656E7472 		.ascii	"entry\000"
 4255      7900
 4256              	.LASF1:
 4257 0510 756E7369 		.ascii	"unsigned char\000"
 4257      676E6564 
 4257      20636861 
 4257      7200
 4258              	.LASF122:
 4259 051e 6C696E65 		.ascii	"line\000"
 4259      00
 4260              	.LASF66:
 4261 0523 53746F70 		.ascii	"Stop_on_line\000"
 4261      5F6F6E5F 
 4261      6C696E65 
 4261      00
 4262              	.LASF88:
 4263 0530 74735F65 		.ascii	"ts_enc\000"
 4263      6E6300
 4264              	.LASF117:
 4265 0537 6272616B 		.ascii	"brakeFlag\000"
 4265      65466C61 
 4265      6700
 4266              	.LASF95:
 4267 0541 666C6167 		.ascii	"flag_ts_display\000"
 4267      5F74735F 
 4267      64697370 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 91


 4267      6C617900 
 4268              	.LASF133:
 4269 0551 73746174 		.ascii	"state\000"
 4269      6500
 4270              	.LASF57:
 4271 0557 72657665 		.ascii	"reverseDirection\000"
 4271      72736544 
 4271      69726563 
 4271      74696F6E 
 4271      00
 4272              	.LASF47:
 4273 0568 6272616B 		.ascii	"brakeLeft\000"
 4273      654C6566 
 4273      7400
 4274              	.LASF121:
 4275 0572 64697370 		.ascii	"displaystring\000"
 4275      6C617973 
 4275      7472696E 
 4275      6700
 4276              	.LASF108:
 4277 0580 6C617374 		.ascii	"last_quad_count1\000"
 4277      5F717561 
 4277      645F636F 
 4277      756E7431 
 4277      00
 4278              	.LASF109:
 4279 0591 6C617374 		.ascii	"last_quad_count2\000"
 4279      5F717561 
 4279      645F636F 
 4279      756E7432 
 4279      00
 4280              	.LASF85:
 4281 05a2 75736250 		.ascii	"usbPutChar\000"
 4281      75744368 
 4281      617200
 4282              	.LASF0:
 4283 05ad 7369676E 		.ascii	"signed char\000"
 4283      65642063 
 4283      68617200 
 4284              	.LASF3:
 4285 05b9 73686F72 		.ascii	"short unsigned int\000"
 4285      7420756E 
 4285      7369676E 
 4285      65642069 
 4285      6E7400
 4286              	.LASF29:
 4287 05cc 726F626F 		.ascii	"robot_orientation\000"
 4287      745F6F72 
 4287      69656E74 
 4287      6174696F 
 4287      6E00
 4288              	.LASF83:
 4289 05de 6D61696E 		.ascii	"main\000"
 4289      00
 4290              	.LASF62:
 4291 05e3 42545F74 		.ascii	"BT_txInt\000"
 4291      78496E74 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccM5bjJu.s 			page 92


 4291      00
 4292              	.LASF76:
 4293 05ec 6E657874 		.ascii	"nextSpeed\000"
 4293      53706565 
 4293      6400
 4294              	.LASF13:
 4295 05f6 75696E74 		.ascii	"uint8\000"
 4295      3800
 4296              	.LASF19:
 4297 05fc 646F7562 		.ascii	"double\000"
 4297      6C6500
 4298              	.LASF114:
 4299 0603 72696768 		.ascii	"right_duty_cycle\000"
 4299      745F6475 
 4299      74795F63 
 4299      79636C65 
 4299      00
 4300              	.LASF69:
 4301 0614 68616E64 		.ascii	"handle_rx_binary\000"
 4301      6C655F72 
 4301      785F6269 
 4301      6E617279 
 4301      00
 4302              	.LASF132:
 4303 0625 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 4303      70315C43 
 4303      53333031 
 4303      2D546561 
 4303      6D2D5265 
 4304              	.LASF81:
 4305 064e 7072696E 		.ascii	"print_RF\000"
 4305      745F5246 
 4305      00
 4306              	.LASF30:
 4307 0657 67305F78 		.ascii	"g0_xpos\000"
 4307      706F7300 
 4308              	.LASF98:
 4309 065f 666C6167 		.ascii	"flag_KB_string\000"
 4309      5F4B425F 
 4309      73747269 
 4309      6E6700
 4310              	.LASF36:
 4311 066e 67315F73 		.ascii	"g1_speed\000"
 4311      70656564 
 4311      00
 4312              	.LASF131:
 4313 0677 2E5C6D61 		.ascii	".\\main.c\000"
 4313      696E2E63 
 4313      00
 4314              	.LASF48:
 4315 0680 6272616B 		.ascii	"brakeRight\000"
 4315      65526967 
 4315      687400
 4316              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
