ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	quad_per_cm
 220              		.data
 221              		.align	2
 222              		.type	quad_per_cm, %object
 223              		.size	quad_per_cm, 4
 224              	quad_per_cm:
 225 0004 F0A73241 		.word	1093838832
 226              		.global	initial_pos_valid
 227              		.bss
 228              		.type	initial_pos_valid, %object
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 5


 229              		.size	initial_pos_valid, 1
 230              	initial_pos_valid:
 231 0034 00       		.space	1
 232              		.global	initial_x_pos
 233 0035 00       		.align	1
 234              		.type	initial_x_pos, %object
 235              		.size	initial_x_pos, 2
 236              	initial_x_pos:
 237 0036 0000     		.space	2
 238              		.global	initial_y_pos
 239              		.align	1
 240              		.type	initial_y_pos, %object
 241              		.size	initial_y_pos, 2
 242              	initial_y_pos:
 243 0038 0000     		.space	2
 244              		.comm	brakeFlag,1,1
 245              		.global	portOpen
 246              		.data
 247              		.type	portOpen, %object
 248              		.size	portOpen, 1
 249              	portOpen:
 250 0008 01       		.byte	1
 251              		.comm	prevVoltage,2,2
 252              		.comm	prevVoltage2,2,2
 253              		.global	displaystring
 254 0009 000000   		.align	2
 255              		.type	displaystring, %object
 256              		.size	displaystring, 64
 257              	displaystring:
 258 000c 43533330 		.ascii	"CS301 2016\012\000"
 258      31203230 
 258      31360A00 
 259 0018 00000000 		.space	52
 259      00000000 
 259      00000000 
 259      00000000 
 259      00000000 
 260              		.comm	line,64,4
 261              		.comm	entry,64,4
 262              		.comm	usbBuffer,64,4
 263              		.comm	buffer_state,32,4
 264              		.comm	system_state,32,4
 265              		.global	prev_movement_state
 266              		.type	prev_movement_state, %object
 267              		.size	prev_movement_state, 1
 268              	prev_movement_state:
 269 004c 03       		.byte	3
 270              		.global	movement_state
 271              		.type	movement_state, %object
 272              		.size	movement_state, 1
 273              	movement_state:
 274 004d 03       		.byte	3
 275              		.global	track_mode
 276              		.bss
 277              		.type	track_mode, %object
 278              		.size	track_mode, 1
 279              	track_mode:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 6


 280 003a 00       		.space	1
 281              		.global	byteCount
 282              		.type	byteCount, %object
 283              		.size	byteCount, 1
 284              	byteCount:
 285 003b 00       		.space	1
 286              		.comm	packet,2,4
 287              		.global	speed
 288              		.data
 289 004e 0000     		.align	3
 290              		.type	speed, %object
 291              		.size	speed, 8
 292              	speed:
 293 0050 00000000 		.word	0
 294 0054 00002C40 		.word	1076625408
 295              		.comm	tracked_direction,1,1
 296              		.global	instructions
 297              		.bss
 298              		.align	2
 299              		.type	instructions, %object
 300              		.size	instructions, 800
 301              	instructions:
 302 003c 00000000 		.space	800
 302      00000000 
 302      00000000 
 302      00000000 
 302      00000000 
 303              		.global	instructionCount
 304              		.align	1
 305              		.type	instructionCount, %object
 306              		.size	instructionCount, 2
 307              	instructionCount:
 308 035c 0000     		.space	2
 309              		.global	sensorsDisabled
 310              		.type	sensorsDisabled, %object
 311              		.size	sensorsDisabled, 1
 312              	sensorsDisabled:
 313 035e 00       		.space	1
 314              		.global	robot_direction
 315              		.data
 316              		.type	robot_direction, %object
 317              		.size	robot_direction, 1
 318              	robot_direction:
 319 0058 04       		.byte	4
 320              		.global	path
 321              		.bss
 322 035f 00       		.align	2
 323              		.type	path, %object
 324              		.size	path, 2400
 325              	path:
 326 0360 00000000 		.space	2400
 326      00000000 
 326      00000000 
 326      00000000 
 326      00000000 
 327              		.global	start
 328              		.data
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 7


 329 0059 000000   		.align	2
 330              		.type	start, %object
 331              		.size	start, 2
 332              	start:
 333 005c 01       		.byte	1
 334 005d 01       		.byte	1
 335              		.global	destination
 336 005e 0000     		.align	2
 337              		.type	destination, %object
 338              		.size	destination, 2
 339              	destination:
 340 0060 0D       		.byte	13
 341 0061 11       		.byte	17
 342              		.global	map
 343 0062 0000     		.align	2
 344              		.type	map, %object
 345              		.size	map, 285
 346              	map:
 347 0064 01       		.byte	1
 348 0065 01       		.byte	1
 349 0066 01       		.byte	1
 350 0067 01       		.byte	1
 351 0068 01       		.byte	1
 352 0069 01       		.byte	1
 353 006a 01       		.byte	1
 354 006b 01       		.byte	1
 355 006c 01       		.byte	1
 356 006d 01       		.byte	1
 357 006e 01       		.byte	1
 358 006f 01       		.byte	1
 359 0070 01       		.byte	1
 360 0071 01       		.byte	1
 361 0072 01       		.byte	1
 362 0073 01       		.byte	1
 363 0074 01       		.byte	1
 364 0075 01       		.byte	1
 365 0076 01       		.byte	1
 366 0077 01       		.byte	1
 367 0078 00       		.byte	0
 368 0079 00       		.byte	0
 369 007a 00       		.byte	0
 370 007b 00       		.byte	0
 371 007c 00       		.byte	0
 372 007d 01       		.byte	1
 373 007e 00       		.byte	0
 374 007f 01       		.byte	1
 375 0080 00       		.byte	0
 376 0081 00       		.byte	0
 377 0082 00       		.byte	0
 378 0083 00       		.byte	0
 379 0084 00       		.byte	0
 380 0085 00       		.byte	0
 381 0086 00       		.byte	0
 382 0087 00       		.byte	0
 383 0088 00       		.byte	0
 384 0089 01       		.byte	1
 385 008a 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 8


 386 008b 01       		.byte	1
 387 008c 01       		.byte	1
 388 008d 01       		.byte	1
 389 008e 01       		.byte	1
 390 008f 00       		.byte	0
 391 0090 01       		.byte	1
 392 0091 00       		.byte	0
 393 0092 01       		.byte	1
 394 0093 00       		.byte	0
 395 0094 01       		.byte	1
 396 0095 00       		.byte	0
 397 0096 01       		.byte	1
 398 0097 01       		.byte	1
 399 0098 01       		.byte	1
 400 0099 01       		.byte	1
 401 009a 01       		.byte	1
 402 009b 00       		.byte	0
 403 009c 01       		.byte	1
 404 009d 01       		.byte	1
 405 009e 00       		.byte	0
 406 009f 00       		.byte	0
 407 00a0 00       		.byte	0
 408 00a1 01       		.byte	1
 409 00a2 00       		.byte	0
 410 00a3 01       		.byte	1
 411 00a4 00       		.byte	0
 412 00a5 00       		.byte	0
 413 00a6 00       		.byte	0
 414 00a7 01       		.byte	1
 415 00a8 00       		.byte	0
 416 00a9 00       		.byte	0
 417 00aa 00       		.byte	0
 418 00ab 00       		.byte	0
 419 00ac 00       		.byte	0
 420 00ad 01       		.byte	1
 421 00ae 00       		.byte	0
 422 00af 01       		.byte	1
 423 00b0 01       		.byte	1
 424 00b1 00       		.byte	0
 425 00b2 01       		.byte	1
 426 00b3 00       		.byte	0
 427 00b4 01       		.byte	1
 428 00b5 00       		.byte	0
 429 00b6 01       		.byte	1
 430 00b7 00       		.byte	0
 431 00b8 01       		.byte	1
 432 00b9 01       		.byte	1
 433 00ba 01       		.byte	1
 434 00bb 01       		.byte	1
 435 00bc 01       		.byte	1
 436 00bd 01       		.byte	1
 437 00be 01       		.byte	1
 438 00bf 00       		.byte	0
 439 00c0 01       		.byte	1
 440 00c1 00       		.byte	0
 441 00c2 01       		.byte	1
 442 00c3 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 9


 443 00c4 00       		.byte	0
 444 00c5 01       		.byte	1
 445 00c6 00       		.byte	0
 446 00c7 00       		.byte	0
 447 00c8 00       		.byte	0
 448 00c9 00       		.byte	0
 449 00ca 00       		.byte	0
 450 00cb 00       		.byte	0
 451 00cc 00       		.byte	0
 452 00cd 00       		.byte	0
 453 00ce 00       		.byte	0
 454 00cf 00       		.byte	0
 455 00d0 00       		.byte	0
 456 00d1 01       		.byte	1
 457 00d2 00       		.byte	0
 458 00d3 01       		.byte	1
 459 00d4 00       		.byte	0
 460 00d5 01       		.byte	1
 461 00d6 01       		.byte	1
 462 00d7 00       		.byte	0
 463 00d8 01       		.byte	1
 464 00d9 01       		.byte	1
 465 00da 01       		.byte	1
 466 00db 01       		.byte	1
 467 00dc 01       		.byte	1
 468 00dd 01       		.byte	1
 469 00de 01       		.byte	1
 470 00df 01       		.byte	1
 471 00e0 01       		.byte	1
 472 00e1 00       		.byte	0
 473 00e2 01       		.byte	1
 474 00e3 00       		.byte	0
 475 00e4 01       		.byte	1
 476 00e5 00       		.byte	0
 477 00e6 01       		.byte	1
 478 00e7 01       		.byte	1
 479 00e8 01       		.byte	1
 480 00e9 01       		.byte	1
 481 00ea 00       		.byte	0
 482 00eb 00       		.byte	0
 483 00ec 00       		.byte	0
 484 00ed 00       		.byte	0
 485 00ee 00       		.byte	0
 486 00ef 00       		.byte	0
 487 00f0 00       		.byte	0
 488 00f1 00       		.byte	0
 489 00f2 00       		.byte	0
 490 00f3 00       		.byte	0
 491 00f4 00       		.byte	0
 492 00f5 01       		.byte	1
 493 00f6 00       		.byte	0
 494 00f7 01       		.byte	1
 495 00f8 00       		.byte	0
 496 00f9 00       		.byte	0
 497 00fa 00       		.byte	0
 498 00fb 01       		.byte	1
 499 00fc 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 10


 500 00fd 01       		.byte	1
 501 00fe 01       		.byte	1
 502 00ff 01       		.byte	1
 503 0100 01       		.byte	1
 504 0101 01       		.byte	1
 505 0102 01       		.byte	1
 506 0103 00       		.byte	0
 507 0104 01       		.byte	1
 508 0105 01       		.byte	1
 509 0106 01       		.byte	1
 510 0107 01       		.byte	1
 511 0108 01       		.byte	1
 512 0109 00       		.byte	0
 513 010a 01       		.byte	1
 514 010b 01       		.byte	1
 515 010c 01       		.byte	1
 516 010d 00       		.byte	0
 517 010e 01       		.byte	1
 518 010f 01       		.byte	1
 519 0110 00       		.byte	0
 520 0111 00       		.byte	0
 521 0112 00       		.byte	0
 522 0113 00       		.byte	0
 523 0114 00       		.byte	0
 524 0115 00       		.byte	0
 525 0116 00       		.byte	0
 526 0117 00       		.byte	0
 527 0118 00       		.byte	0
 528 0119 00       		.byte	0
 529 011a 00       		.byte	0
 530 011b 01       		.byte	1
 531 011c 00       		.byte	0
 532 011d 00       		.byte	0
 533 011e 00       		.byte	0
 534 011f 01       		.byte	1
 535 0120 00       		.byte	0
 536 0121 01       		.byte	1
 537 0122 01       		.byte	1
 538 0123 00       		.byte	0
 539 0124 01       		.byte	1
 540 0125 01       		.byte	1
 541 0126 01       		.byte	1
 542 0127 01       		.byte	1
 543 0128 01       		.byte	1
 544 0129 00       		.byte	0
 545 012a 01       		.byte	1
 546 012b 01       		.byte	1
 547 012c 01       		.byte	1
 548 012d 00       		.byte	0
 549 012e 01       		.byte	1
 550 012f 00       		.byte	0
 551 0130 01       		.byte	1
 552 0131 00       		.byte	0
 553 0132 01       		.byte	1
 554 0133 00       		.byte	0
 555 0134 01       		.byte	1
 556 0135 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 11


 557 0136 00       		.byte	0
 558 0137 00       		.byte	0
 559 0138 00       		.byte	0
 560 0139 00       		.byte	0
 561 013a 00       		.byte	0
 562 013b 01       		.byte	1
 563 013c 00       		.byte	0
 564 013d 00       		.byte	0
 565 013e 00       		.byte	0
 566 013f 01       		.byte	1
 567 0140 00       		.byte	0
 568 0141 00       		.byte	0
 569 0142 00       		.byte	0
 570 0143 01       		.byte	1
 571 0144 00       		.byte	0
 572 0145 00       		.byte	0
 573 0146 00       		.byte	0
 574 0147 01       		.byte	1
 575 0148 01       		.byte	1
 576 0149 00       		.byte	0
 577 014a 01       		.byte	1
 578 014b 01       		.byte	1
 579 014c 01       		.byte	1
 580 014d 00       		.byte	0
 581 014e 01       		.byte	1
 582 014f 01       		.byte	1
 583 0150 01       		.byte	1
 584 0151 00       		.byte	0
 585 0152 01       		.byte	1
 586 0153 01       		.byte	1
 587 0154 01       		.byte	1
 588 0155 00       		.byte	0
 589 0156 01       		.byte	1
 590 0157 01       		.byte	1
 591 0158 01       		.byte	1
 592 0159 00       		.byte	0
 593 015a 01       		.byte	1
 594 015b 01       		.byte	1
 595 015c 00       		.byte	0
 596 015d 00       		.byte	0
 597 015e 00       		.byte	0
 598 015f 01       		.byte	1
 599 0160 00       		.byte	0
 600 0161 00       		.byte	0
 601 0162 00       		.byte	0
 602 0163 00       		.byte	0
 603 0164 00       		.byte	0
 604 0165 00       		.byte	0
 605 0166 00       		.byte	0
 606 0167 01       		.byte	1
 607 0168 00       		.byte	0
 608 0169 00       		.byte	0
 609 016a 00       		.byte	0
 610 016b 00       		.byte	0
 611 016c 00       		.byte	0
 612 016d 01       		.byte	1
 613 016e 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 12


 614 016f 01       		.byte	1
 615 0170 01       		.byte	1
 616 0171 01       		.byte	1
 617 0172 01       		.byte	1
 618 0173 01       		.byte	1
 619 0174 01       		.byte	1
 620 0175 01       		.byte	1
 621 0176 01       		.byte	1
 622 0177 01       		.byte	1
 623 0178 01       		.byte	1
 624 0179 01       		.byte	1
 625 017a 01       		.byte	1
 626 017b 01       		.byte	1
 627 017c 01       		.byte	1
 628 017d 01       		.byte	1
 629 017e 01       		.byte	1
 630 017f 01       		.byte	1
 631 0180 01       		.byte	1
 632              		.global	food_list
 633 0181 000000   		.align	2
 634              		.type	food_list, %object
 635              		.size	food_list, 12
 636              	food_list:
 637 0184 05       		.byte	5
 638 0185 0B       		.byte	11
 639 0186 01       		.byte	1
 640 0187 11       		.byte	17
 641 0188 0D       		.byte	13
 642 0189 01       		.byte	1
 643 018a 00000000 		.space	6
 643      0000
 644              		.global	food_length
 645              		.type	food_length, %object
 646              		.size	food_length, 1
 647              	food_length:
 648 0190 03       		.byte	3
 649 0191 00000000 		.section	.text.handle_rx_binary,"ax",%progbits
 649      000000
 650              		.align	2
 651              		.global	handle_rx_binary
 652              		.thumb
 653              		.thumb_func
 654              		.type	handle_rx_binary, %function
 655              	handle_rx_binary:
 656              	.LFB63:
 657              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 13


  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** #include "pathfinder.h"
  34:.\main.c      **** //* ========================================
  35:.\main.c      **** void usbPutString(char *s);
  36:.\main.c      **** void usbPutChar(char c);
  37:.\main.c      **** //void handle_usb();
  38:.\main.c      **** //* ========================================
  39:.\main.c      **** 
  40:.\main.c      **** #define QUAD_RATIO 0.99556
  41:.\main.c      **** 
  42:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  43:.\main.c      **** uint16 instructionCount = 0;
  44:.\main.c      **** uint8 sensorsDisabled = 0;
  45:.\main.c      **** 
  46:.\main.c      **** uint8 robot_direction = 4;
  47:.\main.c      **** 
  48:.\main.c      **** uint8 path[DEFAULT_ARRAY_SIZE][3] = {0};
  49:.\main.c      **** uint8 start[2] = {1, 1};//(y, x) array starts at 0
  50:.\main.c      **** uint8 destination[2] = {13, 17};//(y, x) DON'T HARDCODE THIS
  51:.\main.c      **** 
  52:.\main.c      **** 
  53:.\main.c      **** uint8 map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  54:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  56:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  57:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  58:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  59:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  60:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  61:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  62:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  63:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  64:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  65:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  66:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  67:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  68:.\main.c      **** //first number is the y coord, second is x
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 14


  69:.\main.c      **** //first number is row, second column
  70:.\main.c      **** 
  71:.\main.c      **** //uint8 food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  72:.\main.c      **** uint8 food_list[6][2]= {{5,11}, {1, 17}, {13, 1}};
  73:.\main.c      **** uint8 food_length = 3;
  74:.\main.c      **** 
  75:.\main.c      **** void changeToRF();
  76:.\main.c      **** void changeToBT();
  77:.\main.c      **** 
  78:.\main.c      **** void handle_rx_binary()
  79:.\main.c      **** {
 658              		.loc 1 79 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 32
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 89B0     		sub	sp, sp, #36
 667              		.cfi_def_cfa_offset 40
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
  80:.\main.c      ****     if(flag_rx == 1)
 670              		.loc 1 80 0
 671 0006 524B     		ldr	r3, .L21
 672 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 673 000a 012B     		cmp	r3, #1
 674 000c 40F09A80 		bne	.L1
 675              	.LBB2:
  81:.\main.c      ****     {    
  82:.\main.c      ****         flag_rx = 0;
 676              		.loc 1 82 0
 677 0010 4F4B     		ldr	r3, .L21
 678 0012 0022     		movs	r2, #0
 679 0014 1A70     		strb	r2, [r3]
  83:.\main.c      ****         
  84:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 680              		.loc 1 84 0
 681 0016 4F4B     		ldr	r3, .L21+4
 682 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 683 001a 1B02     		lsls	r3, r3, #8
 684 001c 9AB2     		uxth	r2, r3
 685 001e 4D4B     		ldr	r3, .L21+4
 686 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 687 0022 9BB2     		uxth	r3, r3
 688 0024 1343     		orrs	r3, r3, r2
 689 0026 9BB2     		uxth	r3, r3
 690 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  85:.\main.c      ****         char byte_packet[12];
  86:.\main.c      ****         char string_packet[12];
  87:.\main.c      ****         
  88:.\main.c      ****         switch(byteCount)
 691              		.loc 1 88 0
 692 002a 4B4B     		ldr	r3, .L21+8
 693 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 694 002e 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 15


 695 0030 1E2B     		cmp	r3, #30
 696 0032 00F28780 		bhi	.L1
 697 0036 01A2     		adr	r2, .L5
 698 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 699              		.p2align 2
 700              	.L5:
 701 003c B9000000 		.word	.L4+1
 702 0040 45010000 		.word	.L1+1
 703 0044 CD000000 		.word	.L6+1
 704 0048 45010000 		.word	.L1+1
 705 004c D5000000 		.word	.L7+1
 706 0050 45010000 		.word	.L1+1
 707 0054 DD000000 		.word	.L8+1
 708 0058 45010000 		.word	.L1+1
 709 005c E5000000 		.word	.L9+1
 710 0060 45010000 		.word	.L1+1
 711 0064 ED000000 		.word	.L10+1
 712 0068 45010000 		.word	.L1+1
 713 006c F5000000 		.word	.L11+1
 714 0070 45010000 		.word	.L1+1
 715 0074 FD000000 		.word	.L12+1
 716 0078 45010000 		.word	.L1+1
 717 007c 05010000 		.word	.L13+1
 718 0080 45010000 		.word	.L1+1
 719 0084 0D010000 		.word	.L14+1
 720 0088 45010000 		.word	.L1+1
 721 008c 15010000 		.word	.L15+1
 722 0090 45010000 		.word	.L1+1
 723 0094 1D010000 		.word	.L16+1
 724 0098 45010000 		.word	.L1+1
 725 009c 25010000 		.word	.L17+1
 726 00a0 45010000 		.word	.L1+1
 727 00a4 2D010000 		.word	.L18+1
 728 00a8 45010000 		.word	.L1+1
 729 00ac 35010000 		.word	.L19+1
 730 00b0 45010000 		.word	.L1+1
 731 00b4 3D010000 		.word	.L20+1
 732              		.p2align 1
 733              	.L4:
  89:.\main.c      ****         {
  90:.\main.c      ****             case 4:
  91:.\main.c      ****                 buffer_state.rssi = packet[0];
 734              		.loc 1 91 0
 735 00b8 264B     		ldr	r3, .L21+4
 736 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 00bc DAB2     		uxtb	r2, r3
 738 00be 274B     		ldr	r3, .L21+12
 739 00c0 1A70     		strb	r2, [r3]
  92:.\main.c      ****                 buffer_state.index = packet[1];
 740              		.loc 1 92 0
 741 00c2 244B     		ldr	r3, .L21+4
 742 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 743 00c6 254B     		ldr	r3, .L21+12
 744 00c8 5A70     		strb	r2, [r3, #1]
  93:.\main.c      ****             break;
 745              		.loc 1 93 0
 746 00ca 3BE0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 16


 747              	.L6:
  94:.\main.c      ****             case 6:
  95:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 748              		.loc 1 95 0
 749 00cc FA8B     		ldrh	r2, [r7, #30]
 750 00ce 234B     		ldr	r3, .L21+12
 751 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  96:.\main.c      ****             break;
 752              		.loc 1 96 0
 753 00d2 37E0     		b	.L1
 754              	.L7:
  97:.\main.c      ****             case 8:
  98:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 755              		.loc 1 98 0
 756 00d4 FA8B     		ldrh	r2, [r7, #30]
 757 00d6 214B     		ldr	r3, .L21+12
 758 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  99:.\main.c      ****             break;
 759              		.loc 1 99 0
 760 00da 33E0     		b	.L1
 761              	.L8:
 100:.\main.c      ****             case 10:
 101:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 762              		.loc 1 101 0
 763 00dc FA8B     		ldrh	r2, [r7, #30]
 764 00de 1F4B     		ldr	r3, .L21+12
 765 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 102:.\main.c      ****             break;
 766              		.loc 1 102 0
 767 00e2 2FE0     		b	.L1
 768              	.L9:
 103:.\main.c      ****             case 12:
 104:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 769              		.loc 1 104 0
 770 00e4 FA8B     		ldrh	r2, [r7, #30]
 771 00e6 1D4B     		ldr	r3, .L21+12
 772 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 105:.\main.c      ****             break;
 773              		.loc 1 105 0
 774 00ea 2BE0     		b	.L1
 775              	.L10:
 106:.\main.c      ****             case 14:
 107:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 776              		.loc 1 107 0
 777 00ec FA8B     		ldrh	r2, [r7, #30]
 778 00ee 1B4B     		ldr	r3, .L21+12
 779 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 108:.\main.c      ****             break;
 780              		.loc 1 108 0
 781 00f2 27E0     		b	.L1
 782              	.L11:
 109:.\main.c      ****             case 16:
 110:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 783              		.loc 1 110 0
 784 00f4 FA8B     		ldrh	r2, [r7, #30]
 785 00f6 194B     		ldr	r3, .L21+12
 786 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 17


 111:.\main.c      ****             break;
 787              		.loc 1 111 0
 788 00fa 23E0     		b	.L1
 789              	.L12:
 112:.\main.c      ****             case 18:
 113:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 790              		.loc 1 113 0
 791 00fc FA8B     		ldrh	r2, [r7, #30]
 792 00fe 174B     		ldr	r3, .L21+12
 793 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 114:.\main.c      ****             break;
 794              		.loc 1 114 0
 795 0102 1FE0     		b	.L1
 796              	.L13:
 115:.\main.c      ****             case 20:
 116:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 797              		.loc 1 116 0
 798 0104 FA8B     		ldrh	r2, [r7, #30]
 799 0106 154B     		ldr	r3, .L21+12
 800 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 117:.\main.c      ****             break;
 801              		.loc 1 117 0
 802 010a 1BE0     		b	.L1
 803              	.L14:
 118:.\main.c      ****             case 22:
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 804              		.loc 1 119 0
 805 010c FA8B     		ldrh	r2, [r7, #30]
 806 010e 134B     		ldr	r3, .L21+12
 807 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 808              		.loc 1 120 0
 809 0112 17E0     		b	.L1
 810              	.L15:
 121:.\main.c      ****             case 24:
 122:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 811              		.loc 1 122 0
 812 0114 FA8B     		ldrh	r2, [r7, #30]
 813 0116 114B     		ldr	r3, .L21+12
 814 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 123:.\main.c      ****             break;
 815              		.loc 1 123 0
 816 011a 13E0     		b	.L1
 817              	.L16:
 124:.\main.c      ****             case 26:
 125:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 818              		.loc 1 125 0
 819 011c FA8B     		ldrh	r2, [r7, #30]
 820 011e 0F4B     		ldr	r3, .L21+12
 821 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 126:.\main.c      ****             break;
 822              		.loc 1 126 0
 823 0122 0FE0     		b	.L1
 824              	.L17:
 127:.\main.c      ****             case 28:
 128:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 825              		.loc 1 128 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 18


 826 0124 FA8B     		ldrh	r2, [r7, #30]
 827 0126 0D4B     		ldr	r3, .L21+12
 828 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 129:.\main.c      ****             break;
 829              		.loc 1 129 0
 830 012a 0BE0     		b	.L1
 831              	.L18:
 130:.\main.c      ****             case 30:
 131:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 832              		.loc 1 131 0
 833 012c FA8B     		ldrh	r2, [r7, #30]
 834 012e 0B4B     		ldr	r3, .L21+12
 835 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 132:.\main.c      ****             break;
 836              		.loc 1 132 0
 837 0132 07E0     		b	.L1
 838              	.L19:
 133:.\main.c      ****             case 32:
 134:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 839              		.loc 1 134 0
 840 0134 FA8B     		ldrh	r2, [r7, #30]
 841 0136 094B     		ldr	r3, .L21+12
 842 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 135:.\main.c      ****             break;
 843              		.loc 1 135 0
 844 013a 03E0     		b	.L1
 845              	.L20:
 136:.\main.c      ****             case 34:
 137:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 846              		.loc 1 137 0
 847 013c FA8B     		ldrh	r2, [r7, #30]
 848 013e 074B     		ldr	r3, .L21+12
 849 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 138:.\main.c      ****             break;
 850              		.loc 1 138 0
 851 0142 00BF     		nop
 852              	.L1:
 853              	.LBE2:
 139:.\main.c      ****         }
 140:.\main.c      ****     }
 141:.\main.c      **** }
 854              		.loc 1 141 0
 855 0144 2437     		adds	r7, r7, #36
 856              		.cfi_def_cfa_offset 4
 857 0146 BD46     		mov	sp, r7
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 0148 5DF8047B 		ldr	r7, [sp], #4
 861              		.cfi_restore 7
 862              		.cfi_def_cfa_offset 0
 863 014c 7047     		bx	lr
 864              	.L22:
 865 014e 00BF     		.align	2
 866              	.L21:
 867 0150 00000000 		.word	flag_rx
 868 0154 00000000 		.word	packet
 869 0158 00000000 		.word	byteCount
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 19


 870 015c 00000000 		.word	buffer_state
 871              		.cfi_endproc
 872              	.LFE63:
 873              		.size	handle_rx_binary, .-handle_rx_binary
 874              		.section	.text.setLeftDir,"ax",%progbits
 875              		.align	2
 876              		.global	setLeftDir
 877              		.thumb
 878              		.thumb_func
 879              		.type	setLeftDir, %function
 880              	setLeftDir:
 881              	.LFB64:
 142:.\main.c      **** 
 143:.\main.c      **** void setLeftDir(uint8 dir)
 144:.\main.c      **** {
 882              		.loc 1 144 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 82B0     		sub	sp, sp, #8
 891              		.cfi_def_cfa_offset 16
 892 0004 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 894 0006 0346     		mov	r3, r0
 895 0008 FB71     		strb	r3, [r7, #7]
 145:.\main.c      ****     M2_IN2_Write(dir);
 896              		.loc 1 145 0
 897 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 898 000c 1846     		mov	r0, r3
 899 000e FFF7FEFF 		bl	M2_IN2_Write
 146:.\main.c      **** }
 900              		.loc 1 146 0
 901 0012 0837     		adds	r7, r7, #8
 902              		.cfi_def_cfa_offset 8
 903 0014 BD46     		mov	sp, r7
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 0016 80BD     		pop	{r7, pc}
 907              		.cfi_endproc
 908              	.LFE64:
 909              		.size	setLeftDir, .-setLeftDir
 910              		.section	.text.setRightDir,"ax",%progbits
 911              		.align	2
 912              		.global	setRightDir
 913              		.thumb
 914              		.thumb_func
 915              		.type	setRightDir, %function
 916              	setRightDir:
 917              	.LFB65:
 147:.\main.c      **** 
 148:.\main.c      **** void setRightDir(uint8 dir)
 149:.\main.c      **** {
 918              		.loc 1 149 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 20


 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 8
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 82B0     		sub	sp, sp, #8
 927              		.cfi_def_cfa_offset 16
 928 0004 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 930 0006 0346     		mov	r3, r0
 931 0008 FB71     		strb	r3, [r7, #7]
 150:.\main.c      ****     M1_IN2_Write(dir);
 932              		.loc 1 150 0
 933 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 000c 1846     		mov	r0, r3
 935 000e FFF7FEFF 		bl	M1_IN2_Write
 151:.\main.c      **** }
 936              		.loc 1 151 0
 937 0012 0837     		adds	r7, r7, #8
 938              		.cfi_def_cfa_offset 8
 939 0014 BD46     		mov	sp, r7
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 0016 80BD     		pop	{r7, pc}
 943              		.cfi_endproc
 944              	.LFE65:
 945              		.size	setRightDir, .-setRightDir
 946              		.section	.rodata
 947              		.align	2
 948              	.LC0:
 949 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 949      2025640D 
 949      0A00
 950              		.section	.text.reverseDirection,"ax",%progbits
 951              		.align	2
 952              		.global	reverseDirection
 953              		.thumb
 954              		.thumb_func
 955              		.type	reverseDirection, %function
 956              	reverseDirection:
 957              	.LFB66:
 152:.\main.c      **** 
 153:.\main.c      **** void reverseDirection()
 154:.\main.c      **** {
 958              		.loc 1 154 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 16
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962 0000 80B5     		push	{r7, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 84B0     		sub	sp, sp, #16
 967              		.cfi_def_cfa_offset 24
 968 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 21


 969              		.cfi_def_cfa_register 7
 155:.\main.c      ****     direction = !direction;
 970              		.loc 1 155 0
 971 0006 114B     		ldr	r3, .L26
 972 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 000a 002B     		cmp	r3, #0
 974 000c 0CBF     		ite	eq
 975 000e 0123     		moveq	r3, #1
 976 0010 0023     		movne	r3, #0
 977 0012 DBB2     		uxtb	r3, r3
 978 0014 1A46     		mov	r2, r3
 979 0016 0D4B     		ldr	r3, .L26
 980 0018 1A70     		strb	r2, [r3]
 156:.\main.c      ****     setLeftDir(direction);
 981              		.loc 1 156 0
 982 001a 0C4B     		ldr	r3, .L26
 983 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 001e 1846     		mov	r0, r3
 985 0020 FFF7FEFF 		bl	setLeftDir
 157:.\main.c      ****     setRightDir(direction);
 986              		.loc 1 157 0
 987 0024 094B     		ldr	r3, .L26
 988 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0028 1846     		mov	r0, r3
 990 002a FFF7FEFF 		bl	setRightDir
 158:.\main.c      ****     char mes[16];
 159:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 991              		.loc 1 159 0
 992 002e 074B     		ldr	r3, .L26
 993 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 994 0032 1A46     		mov	r2, r3
 995 0034 3B46     		mov	r3, r7
 996 0036 1846     		mov	r0, r3
 997 0038 0549     		ldr	r1, .L26+4
 998 003a FFF7FEFF 		bl	sprintf
 160:.\main.c      ****     UART_PutString(mes);
 999              		.loc 1 160 0
 1000 003e 3B46     		mov	r3, r7
 1001 0040 1846     		mov	r0, r3
 1002 0042 FFF7FEFF 		bl	UART_PutString
 161:.\main.c      **** }
 1003              		.loc 1 161 0
 1004 0046 1037     		adds	r7, r7, #16
 1005              		.cfi_def_cfa_offset 8
 1006 0048 BD46     		mov	sp, r7
 1007              		.cfi_def_cfa_register 13
 1008              		@ sp needed
 1009 004a 80BD     		pop	{r7, pc}
 1010              	.L27:
 1011              		.align	2
 1012              	.L26:
 1013 004c 00000000 		.word	direction
 1014 0050 00000000 		.word	.LC0
 1015              		.cfi_endproc
 1016              	.LFE66:
 1017              		.size	reverseDirection, .-reverseDirection
 1018              		.global	__aeabi_dcmplt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 22


 1019              		.global	__aeabi_ddiv
 1020              		.global	__aeabi_d2iz
 1021              		.section	.text.setSpeed,"ax",%progbits
 1022              		.align	2
 1023              		.global	setSpeed
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	setSpeed, %function
 1027              	setSpeed:
 1028              	.LFB67:
 162:.\main.c      **** 
 163:.\main.c      **** void setSpeed(double left, double right){
 1029              		.loc 1 163 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 24
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 86B0     		sub	sp, sp, #24
 1038              		.cfi_def_cfa_offset 32
 1039 0004 00AF     		add	r7, sp, #0
 1040              		.cfi_def_cfa_register 7
 1041 0006 C7E90201 		strd	r0, [r7, #8]
 1042 000a C7E90023 		strd	r2, [r7]
 164:.\main.c      ****     if(right < 0.0)
 1043              		.loc 1 164 0
 1044 000e D7E90001 		ldrd	r0, [r7]
 1045 0012 4FF00002 		mov	r2, #0
 1046 0016 4FF00003 		mov	r3, #0
 1047 001a FFF7FEFF 		bl	__aeabi_dcmplt
 1048 001e 0346     		mov	r3, r0
 1049 0020 002B     		cmp	r3, #0
 1050 0022 10D0     		beq	.L37
 165:.\main.c      ****     {
 166:.\main.c      ****         //char mes[16];
 167:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 168:.\main.c      ****        // UART_PutString(mes);
 169:.\main.c      ****         setRightDir(!direction);
 1051              		.loc 1 169 0
 1052 0024 304B     		ldr	r3, .L39+8
 1053 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 0028 002B     		cmp	r3, #0
 1055 002a 0CBF     		ite	eq
 1056 002c 0123     		moveq	r3, #1
 1057 002e 0023     		movne	r3, #0
 1058 0030 DBB2     		uxtb	r3, r3
 1059 0032 1846     		mov	r0, r3
 1060 0034 FFF7FEFF 		bl	setRightDir
 170:.\main.c      ****         right = -right;
 1061              		.loc 1 170 0
 1062 0038 3B68     		ldr	r3, [r7]
 1063 003a 3B60     		str	r3, [r7]
 1064 003c 7B68     		ldr	r3, [r7, #4]
 1065 003e 83F00043 		eor	r3, r3, #-2147483648
 1066 0042 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 23


 1067 0044 04E0     		b	.L31
 1068              	.L37:
 171:.\main.c      ****     }
 172:.\main.c      ****     else setRightDir(direction);
 1069              		.loc 1 172 0
 1070 0046 284B     		ldr	r3, .L39+8
 1071 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 004a 1846     		mov	r0, r3
 1073 004c FFF7FEFF 		bl	setRightDir
 1074              	.L31:
 173:.\main.c      ****     
 174:.\main.c      ****     if(left < 0.0)
 1075              		.loc 1 174 0
 1076 0050 D7E90201 		ldrd	r0, [r7, #8]
 1077 0054 4FF00002 		mov	r2, #0
 1078 0058 4FF00003 		mov	r3, #0
 1079 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1080 0060 0346     		mov	r3, r0
 1081 0062 002B     		cmp	r3, #0
 1082 0064 10D0     		beq	.L38
 175:.\main.c      ****     {
 176:.\main.c      ****        // char mes[16];
 177:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 178:.\main.c      ****         //UART_PutString(mes);
 179:.\main.c      ****         setLeftDir(!direction);
 1083              		.loc 1 179 0
 1084 0066 204B     		ldr	r3, .L39+8
 1085 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 006a 002B     		cmp	r3, #0
 1087 006c 0CBF     		ite	eq
 1088 006e 0123     		moveq	r3, #1
 1089 0070 0023     		movne	r3, #0
 1090 0072 DBB2     		uxtb	r3, r3
 1091 0074 1846     		mov	r0, r3
 1092 0076 FFF7FEFF 		bl	setLeftDir
 180:.\main.c      ****         left = -left;
 1093              		.loc 1 180 0
 1094 007a BB68     		ldr	r3, [r7, #8]
 1095 007c BB60     		str	r3, [r7, #8]
 1096 007e FB68     		ldr	r3, [r7, #12]
 1097 0080 83F00043 		eor	r3, r3, #-2147483648
 1098 0084 FB60     		str	r3, [r7, #12]
 1099 0086 04E0     		b	.L34
 1100              	.L38:
 181:.\main.c      ****     }
 182:.\main.c      ****     else setLeftDir(direction);
 1101              		.loc 1 182 0
 1102 0088 174B     		ldr	r3, .L39+8
 1103 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 008c 1846     		mov	r0, r3
 1105 008e FFF7FEFF 		bl	setLeftDir
 1106              	.L34:
 183:.\main.c      ****     
 184:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 1107              		.loc 1 184 0
 1108 0092 D7E90201 		ldrd	r0, [r7, #8]
 1109 0096 12A3     		adr	r3, .L39
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 24


 1110 0098 D3E90023 		ldrd	r2, [r3]
 1111 009c FFF7FEFF 		bl	__aeabi_ddiv
 1112 00a0 0246     		mov	r2, r0
 1113 00a2 0B46     		mov	r3, r1
 1114 00a4 1046     		mov	r0, r2
 1115 00a6 1946     		mov	r1, r3
 1116 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 1117 00ac 0346     		mov	r3, r0
 1118 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 185:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 1119              		.loc 1 185 0
 1120 00b0 D7E90001 		ldrd	r0, [r7]
 1121 00b4 0AA3     		adr	r3, .L39
 1122 00b6 D3E90023 		ldrd	r2, [r3]
 1123 00ba FFF7FEFF 		bl	__aeabi_ddiv
 1124 00be 0246     		mov	r2, r0
 1125 00c0 0B46     		mov	r3, r1
 1126 00c2 1046     		mov	r0, r2
 1127 00c4 1946     		mov	r1, r3
 1128 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 1129 00ca 0346     		mov	r3, r0
 1130 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 186:.\main.c      ****     
 187:.\main.c      ****     leftSpeedLimit = countsRight;
 1131              		.loc 1 187 0
 1132 00ce 074A     		ldr	r2, .L39+12
 1133 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1134 00d2 1380     		strh	r3, [r2]	@ movhi
 188:.\main.c      ****     rightSpeedLimit = countsLeft;
 1135              		.loc 1 188 0
 1136 00d4 064A     		ldr	r2, .L39+16
 1137 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1138 00d8 1380     		strh	r3, [r2]	@ movhi
 189:.\main.c      **** }
 1139              		.loc 1 189 0
 1140 00da 1837     		adds	r7, r7, #24
 1141              		.cfi_def_cfa_offset 8
 1142 00dc BD46     		mov	sp, r7
 1143              		.cfi_def_cfa_register 13
 1144              		@ sp needed
 1145 00de 80BD     		pop	{r7, pc}
 1146              	.L40:
 1147              		.align	3
 1148              	.L39:
 1149 00e0 969526A5 		.word	-1524197994
 1150 00e4 A0DBEF3F 		.word	1072683936
 1151 00e8 00000000 		.word	direction
 1152 00ec 00000000 		.word	leftSpeedLimit
 1153 00f0 00000000 		.word	rightSpeedLimit
 1154              		.cfi_endproc
 1155              	.LFE67:
 1156              		.size	setSpeed, .-setSpeed
 1157 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 1158              		.align	2
 1159              		.global	brakeLeft
 1160              		.thumb
 1161              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 25


 1162              		.type	brakeLeft, %function
 1163              	brakeLeft:
 1164              	.LFB68:
 190:.\main.c      **** 
 191:.\main.c      **** void brakeLeft()
 192:.\main.c      **** {
 1165              		.loc 1 192 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169 0000 80B5     		push	{r7, lr}
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 00AF     		add	r7, sp, #0
 1174              		.cfi_def_cfa_register 7
 193:.\main.c      ****     PWM_1_WriteCompare(0);
 1175              		.loc 1 193 0
 1176 0004 0020     		movs	r0, #0
 1177 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 194:.\main.c      ****     left_duty_cycle = 0;
 1178              		.loc 1 194 0
 1179 000a 024B     		ldr	r3, .L42
 1180 000c 0022     		movs	r2, #0
 1181 000e 1A80     		strh	r2, [r3]	@ movhi
 195:.\main.c      **** }
 1182              		.loc 1 195 0
 1183 0010 80BD     		pop	{r7, pc}
 1184              	.L43:
 1185 0012 00BF     		.align	2
 1186              	.L42:
 1187 0014 00000000 		.word	left_duty_cycle
 1188              		.cfi_endproc
 1189              	.LFE68:
 1190              		.size	brakeLeft, .-brakeLeft
 1191              		.section	.text.brakeRight,"ax",%progbits
 1192              		.align	2
 1193              		.global	brakeRight
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	brakeRight, %function
 1197              	brakeRight:
 1198              	.LFB69:
 196:.\main.c      **** 
 197:.\main.c      **** void brakeRight()
 198:.\main.c      **** {
 1199              		.loc 1 198 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 199:.\main.c      ****      PWM_2_WriteCompare(0);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 26


 1209              		.loc 1 199 0
 1210 0004 0020     		movs	r0, #0
 1211 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 200:.\main.c      ****      right_duty_cycle = 0;
 1212              		.loc 1 200 0
 1213 000a 024B     		ldr	r3, .L45
 1214 000c 0022     		movs	r2, #0
 1215 000e 1A80     		strh	r2, [r3]	@ movhi
 201:.\main.c      **** }
 1216              		.loc 1 201 0
 1217 0010 80BD     		pop	{r7, pc}
 1218              	.L46:
 1219 0012 00BF     		.align	2
 1220              	.L45:
 1221 0014 00000000 		.word	right_duty_cycle
 1222              		.cfi_endproc
 1223              	.LFE69:
 1224              		.size	brakeRight, .-brakeRight
 1225              		.section	.text.brakeMotor,"ax",%progbits
 1226              		.align	2
 1227              		.global	brakeMotor
 1228              		.thumb
 1229              		.thumb_func
 1230              		.type	brakeMotor, %function
 1231              	brakeMotor:
 1232              	.LFB70:
 202:.\main.c      **** 
 203:.\main.c      **** void brakeMotor(){
 1233              		.loc 1 203 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 1, uses_anonymous_args = 0
 1237 0000 80B5     		push	{r7, lr}
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
 1241 0002 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 204:.\main.c      ****     setSpeed(0, 0);
 1243              		.loc 1 204 0
 1244 0004 4FF00000 		mov	r0, #0
 1245 0008 4FF00001 		mov	r1, #0
 1246 000c 4FF00002 		mov	r2, #0
 1247 0010 4FF00003 		mov	r3, #0
 1248 0014 FFF7FEFF 		bl	setSpeed
 205:.\main.c      ****     brakeLeft();
 1249              		.loc 1 205 0
 1250 0018 FFF7FEFF 		bl	brakeLeft
 206:.\main.c      ****     brakeRight();
 1251              		.loc 1 206 0
 1252 001c FFF7FEFF 		bl	brakeRight
 207:.\main.c      **** }
 1253              		.loc 1 207 0
 1254 0020 80BD     		pop	{r7, pc}
 1255              		.cfi_endproc
 1256              	.LFE70:
 1257              		.size	brakeMotor, .-brakeMotor
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 27


 1258 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 1259              		.align	2
 1260              		.global	driveForwards
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	driveForwards, %function
 1264              	driveForwards:
 1265              	.LFB71:
 208:.\main.c      **** 
 209:.\main.c      **** void driveForwards()
 210:.\main.c      **** {
 1266              		.loc 1 210 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 211:.\main.c      ****     setSpeed(speed, speed);
 1276              		.loc 1 211 0
 1277 0004 044B     		ldr	r3, .L49
 1278 0006 D3E90001 		ldrd	r0, [r3]
 1279 000a 034B     		ldr	r3, .L49
 1280 000c D3E90023 		ldrd	r2, [r3]
 1281 0010 FFF7FEFF 		bl	setSpeed
 212:.\main.c      **** }
 1282              		.loc 1 212 0
 1283 0014 80BD     		pop	{r7, pc}
 1284              	.L50:
 1285 0016 00BF     		.align	2
 1286              	.L49:
 1287 0018 00000000 		.word	speed
 1288              		.cfi_endproc
 1289              	.LFE71:
 1290              		.size	driveForwards, .-driveForwards
 1291              		.global	__aeabi_dadd
 1292              		.section	.text.turnRight,"ax",%progbits
 1293              		.align	2
 1294              		.global	turnRight
 1295              		.thumb
 1296              		.thumb_func
 1297              		.type	turnRight, %function
 1298              	turnRight:
 1299              	.LFB72:
 213:.\main.c      **** 
 214:.\main.c      **** void turnRight()
 215:.\main.c      **** {
 1300              		.loc 1 215 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 80B5     		push	{r7, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 28


 1307              		.cfi_offset 14, -4
 1308 0002 00AF     		add	r7, sp, #0
 1309              		.cfi_def_cfa_register 7
 216:.\main.c      ****     setSpeed(0,speed*2.0);
 1310              		.loc 1 216 0
 1311 0004 074B     		ldr	r3, .L52
 1312 0006 D3E90023 		ldrd	r2, [r3]
 1313 000a 1046     		mov	r0, r2
 1314 000c 1946     		mov	r1, r3
 1315 000e FFF7FEFF 		bl	__aeabi_dadd
 1316 0012 0246     		mov	r2, r0
 1317 0014 0B46     		mov	r3, r1
 1318 0016 4FF00000 		mov	r0, #0
 1319 001a 4FF00001 		mov	r1, #0
 1320 001e FFF7FEFF 		bl	setSpeed
 217:.\main.c      **** }
 1321              		.loc 1 217 0
 1322 0022 80BD     		pop	{r7, pc}
 1323              	.L53:
 1324              		.align	2
 1325              	.L52:
 1326 0024 00000000 		.word	speed
 1327              		.cfi_endproc
 1328              	.LFE72:
 1329              		.size	turnRight, .-turnRight
 1330              		.section	.text.turnLeft,"ax",%progbits
 1331              		.align	2
 1332              		.global	turnLeft
 1333              		.thumb
 1334              		.thumb_func
 1335              		.type	turnLeft, %function
 1336              	turnLeft:
 1337              	.LFB73:
 218:.\main.c      **** 
 219:.\main.c      **** void turnLeft()
 220:.\main.c      **** {
 1338              		.loc 1 220 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
 1342 0000 80B5     		push	{r7, lr}
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
 1346 0002 00AF     		add	r7, sp, #0
 1347              		.cfi_def_cfa_register 7
 221:.\main.c      ****     setSpeed(speed*2.0,0);
 1348              		.loc 1 221 0
 1349 0004 084B     		ldr	r3, .L55
 1350 0006 D3E90023 		ldrd	r2, [r3]
 1351 000a 1046     		mov	r0, r2
 1352 000c 1946     		mov	r1, r3
 1353 000e FFF7FEFF 		bl	__aeabi_dadd
 1354 0012 0246     		mov	r2, r0
 1355 0014 0B46     		mov	r3, r1
 1356 0016 1046     		mov	r0, r2
 1357 0018 1946     		mov	r1, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 29


 1358 001a 4FF00002 		mov	r2, #0
 1359 001e 4FF00003 		mov	r3, #0
 1360 0022 FFF7FEFF 		bl	setSpeed
 222:.\main.c      **** }
 1361              		.loc 1 222 0
 1362 0026 80BD     		pop	{r7, pc}
 1363              	.L56:
 1364              		.align	2
 1365              	.L55:
 1366 0028 00000000 		.word	speed
 1367              		.cfi_endproc
 1368              	.LFE73:
 1369              		.size	turnLeft, .-turnLeft
 1370              		.section	.text.turnU,"ax",%progbits
 1371              		.align	2
 1372              		.global	turnU
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	turnU, %function
 1376              	turnU:
 1377              	.LFB74:
 223:.\main.c      **** 
 224:.\main.c      **** void turnU()
 225:.\main.c      **** {
 1378              		.loc 1 225 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 0000 B0B5     		push	{r4, r5, r7, lr}
 1383              		.cfi_def_cfa_offset 16
 1384              		.cfi_offset 4, -16
 1385              		.cfi_offset 5, -12
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 226:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 1390              		.loc 1 226 0
 1391 0004 0E4B     		ldr	r3, .L58
 1392 0006 D3E90023 		ldrd	r2, [r3]
 1393 000a 1446     		mov	r4, r2
 1394 000c 83F00045 		eor	r5, r3, #-2147483648
 1395 0010 2046     		mov	r0, r4
 1396 0012 2946     		mov	r1, r5
 1397 0014 2246     		mov	r2, r4
 1398 0016 2B46     		mov	r3, r5
 1399 0018 FFF7FEFF 		bl	__aeabi_dadd
 1400 001c 0246     		mov	r2, r0
 1401 001e 0B46     		mov	r3, r1
 1402 0020 1446     		mov	r4, r2
 1403 0022 1D46     		mov	r5, r3
 1404 0024 064B     		ldr	r3, .L58
 1405 0026 D3E90023 		ldrd	r2, [r3]
 1406 002a 1046     		mov	r0, r2
 1407 002c 1946     		mov	r1, r3
 1408 002e FFF7FEFF 		bl	__aeabi_dadd
 1409 0032 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 30


 1410 0034 0B46     		mov	r3, r1
 1411 0036 2046     		mov	r0, r4
 1412 0038 2946     		mov	r1, r5
 1413 003a FFF7FEFF 		bl	setSpeed
 227:.\main.c      **** }
 1414              		.loc 1 227 0
 1415 003e B0BD     		pop	{r4, r5, r7, pc}
 1416              	.L59:
 1417              		.align	2
 1418              	.L58:
 1419 0040 00000000 		.word	speed
 1420              		.cfi_endproc
 1421              	.LFE74:
 1422              		.size	turnU, .-turnU
 1423              		.section	.text.initTurnLeft,"ax",%progbits
 1424              		.align	2
 1425              		.global	initTurnLeft
 1426              		.thumb
 1427              		.thumb_func
 1428              		.type	initTurnLeft, %function
 1429              	initTurnLeft:
 1430              	.LFB75:
 228:.\main.c      **** 
 229:.\main.c      **** void initTurnLeft(){
 1431              		.loc 1 229 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0002 00AF     		add	r7, sp, #0
 1440              		.cfi_def_cfa_register 7
 230:.\main.c      ****     Timer_2_Stop();
 1441              		.loc 1 230 0
 1442 0004 FFF7FEFF 		bl	Timer_2_Stop
 231:.\main.c      ****     prev_movement_state = movement_state;
 1443              		.loc 1 231 0
 1444 0008 084B     		ldr	r3, .L61
 1445 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1446 000c 084B     		ldr	r3, .L61+4
 1447 000e 1A70     		strb	r2, [r3]
 232:.\main.c      ****     movement_state = LTURN;
 1448              		.loc 1 232 0
 1449 0010 064B     		ldr	r3, .L61
 1450 0012 0122     		movs	r2, #1
 1451 0014 1A70     		strb	r2, [r3]
 233:.\main.c      ****     brakeLeft();
 1452              		.loc 1 233 0
 1453 0016 FFF7FEFF 		bl	brakeLeft
 234:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1454              		.loc 1 234 0
 1455 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1456 001e 0346     		mov	r3, r0
 1457 0020 1A46     		mov	r2, r3
 1458 0022 044B     		ldr	r3, .L61+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 31


 1459 0024 1A80     		strh	r2, [r3]	@ movhi
 235:.\main.c      ****     Timer_2_Start();
 1460              		.loc 1 235 0
 1461 0026 FFF7FEFF 		bl	Timer_2_Start
 236:.\main.c      **** }
 1462              		.loc 1 236 0
 1463 002a 80BD     		pop	{r7, pc}
 1464              	.L62:
 1465              		.align	2
 1466              	.L61:
 1467 002c 00000000 		.word	movement_state
 1468 0030 00000000 		.word	prev_movement_state
 1469 0034 00000000 		.word	start_turn_count
 1470              		.cfi_endproc
 1471              	.LFE75:
 1472              		.size	initTurnLeft, .-initTurnLeft
 1473              		.section	.text.initTurnRight,"ax",%progbits
 1474              		.align	2
 1475              		.global	initTurnRight
 1476              		.thumb
 1477              		.thumb_func
 1478              		.type	initTurnRight, %function
 1479              	initTurnRight:
 1480              	.LFB76:
 237:.\main.c      **** 
 238:.\main.c      **** void initTurnRight(){
 1481              		.loc 1 238 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485 0000 80B5     		push	{r7, lr}
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 7, -8
 1488              		.cfi_offset 14, -4
 1489 0002 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 239:.\main.c      ****     Timer_2_Stop();
 1491              		.loc 1 239 0
 1492 0004 FFF7FEFF 		bl	Timer_2_Stop
 240:.\main.c      ****     prev_movement_state = movement_state;
 1493              		.loc 1 240 0
 1494 0008 084B     		ldr	r3, .L64
 1495 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1496 000c 084B     		ldr	r3, .L64+4
 1497 000e 1A70     		strb	r2, [r3]
 241:.\main.c      ****     movement_state = RTURN;
 1498              		.loc 1 241 0
 1499 0010 064B     		ldr	r3, .L64
 1500 0012 0222     		movs	r2, #2
 1501 0014 1A70     		strb	r2, [r3]
 242:.\main.c      ****     brakeRight();
 1502              		.loc 1 242 0
 1503 0016 FFF7FEFF 		bl	brakeRight
 243:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1504              		.loc 1 243 0
 1505 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1506 001e 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 32


 1507 0020 1A46     		mov	r2, r3
 1508 0022 044B     		ldr	r3, .L64+8
 1509 0024 1A80     		strh	r2, [r3]	@ movhi
 244:.\main.c      ****     Timer_2_Start();
 1510              		.loc 1 244 0
 1511 0026 FFF7FEFF 		bl	Timer_2_Start
 245:.\main.c      **** }
 1512              		.loc 1 245 0
 1513 002a 80BD     		pop	{r7, pc}
 1514              	.L65:
 1515              		.align	2
 1516              	.L64:
 1517 002c 00000000 		.word	movement_state
 1518 0030 00000000 		.word	prev_movement_state
 1519 0034 00000000 		.word	start_turn_count
 1520              		.cfi_endproc
 1521              	.LFE76:
 1522              		.size	initTurnRight, .-initTurnRight
 1523              		.section	.text.initTurnU,"ax",%progbits
 1524              		.align	2
 1525              		.global	initTurnU
 1526              		.thumb
 1527              		.thumb_func
 1528              		.type	initTurnU, %function
 1529              	initTurnU:
 1530              	.LFB77:
 246:.\main.c      **** 
 247:.\main.c      **** void initTurnU(){
 1531              		.loc 1 247 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 80B5     		push	{r7, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 00AF     		add	r7, sp, #0
 1540              		.cfi_def_cfa_register 7
 248:.\main.c      ****     Timer_2_Stop();
 1541              		.loc 1 248 0
 1542 0004 FFF7FEFF 		bl	Timer_2_Stop
 249:.\main.c      ****     prev_movement_state = movement_state;
 1543              		.loc 1 249 0
 1544 0008 084B     		ldr	r3, .L67
 1545 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1546 000c 084B     		ldr	r3, .L67+4
 1547 000e 1A70     		strb	r2, [r3]
 250:.\main.c      ****     movement_state = UTURN;
 1548              		.loc 1 250 0
 1549 0010 064B     		ldr	r3, .L67
 1550 0012 0722     		movs	r2, #7
 1551 0014 1A70     		strb	r2, [r3]
 251:.\main.c      ****     brakeMotor();
 1552              		.loc 1 251 0
 1553 0016 FFF7FEFF 		bl	brakeMotor
 252:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1554              		.loc 1 252 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 33


 1555 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1556 001e 0346     		mov	r3, r0
 1557 0020 1A46     		mov	r2, r3
 1558 0022 044B     		ldr	r3, .L67+8
 1559 0024 1A80     		strh	r2, [r3]	@ movhi
 253:.\main.c      ****     Timer_2_Start();
 1560              		.loc 1 253 0
 1561 0026 FFF7FEFF 		bl	Timer_2_Start
 254:.\main.c      **** }
 1562              		.loc 1 254 0
 1563 002a 80BD     		pop	{r7, pc}
 1564              	.L68:
 1565              		.align	2
 1566              	.L67:
 1567 002c 00000000 		.word	movement_state
 1568 0030 00000000 		.word	prev_movement_state
 1569 0034 00000000 		.word	start_turn_count
 1570              		.cfi_endproc
 1571              	.LFE77:
 1572              		.size	initTurnU, .-initTurnU
 1573              		.section	.text.initForward,"ax",%progbits
 1574              		.align	2
 1575              		.global	initForward
 1576              		.thumb
 1577              		.thumb_func
 1578              		.type	initForward, %function
 1579              	initForward:
 1580              	.LFB78:
 255:.\main.c      **** 
 256:.\main.c      **** void initForward(){
 1581              		.loc 1 256 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 1, uses_anonymous_args = 0
 1585 0000 80B5     		push	{r7, lr}
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 7, -8
 1588              		.cfi_offset 14, -4
 1589 0002 00AF     		add	r7, sp, #0
 1590              		.cfi_def_cfa_register 7
 257:.\main.c      ****     brakeMotor();
 1591              		.loc 1 257 0
 1592 0004 FFF7FEFF 		bl	brakeMotor
 258:.\main.c      ****     movement_state = DRIVE;
 1593              		.loc 1 258 0
 1594 0008 014B     		ldr	r3, .L70
 1595 000a 0022     		movs	r2, #0
 1596 000c 1A70     		strb	r2, [r3]
 259:.\main.c      **** }
 1597              		.loc 1 259 0
 1598 000e 80BD     		pop	{r7, pc}
 1599              	.L71:
 1600              		.align	2
 1601              	.L70:
 1602 0010 00000000 		.word	movement_state
 1603              		.cfi_endproc
 1604              	.LFE78:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 34


 1605              		.size	initForward, .-initForward
 1606              		.section	.text.initBrake,"ax",%progbits
 1607              		.align	2
 1608              		.global	initBrake
 1609              		.thumb
 1610              		.thumb_func
 1611              		.type	initBrake, %function
 1612              	initBrake:
 1613              	.LFB79:
 260:.\main.c      **** 
 261:.\main.c      **** void initBrake(){
 1614              		.loc 1 261 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 1, uses_anonymous_args = 0
 1618              		@ link register save eliminated.
 1619 0000 80B4     		push	{r7}
 1620              		.cfi_def_cfa_offset 4
 1621              		.cfi_offset 7, -4
 1622 0002 00AF     		add	r7, sp, #0
 1623              		.cfi_def_cfa_register 7
 262:.\main.c      ****     movement_state = STOPPED;
 1624              		.loc 1 262 0
 1625 0004 034B     		ldr	r3, .L73
 1626 0006 0322     		movs	r2, #3
 1627 0008 1A70     		strb	r2, [r3]
 263:.\main.c      **** }
 1628              		.loc 1 263 0
 1629 000a BD46     		mov	sp, r7
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 000c 5DF8047B 		ldr	r7, [sp], #4
 1633              		.cfi_restore 7
 1634              		.cfi_def_cfa_offset 0
 1635 0010 7047     		bx	lr
 1636              	.L74:
 1637 0012 00BF     		.align	2
 1638              	.L73:
 1639 0014 00000000 		.word	movement_state
 1640              		.cfi_endproc
 1641              	.LFE79:
 1642              		.size	initBrake, .-initBrake
 1643              		.section	.text.initTrack,"ax",%progbits
 1644              		.align	2
 1645              		.global	initTrack
 1646              		.thumb
 1647              		.thumb_func
 1648              		.type	initTrack, %function
 1649              	initTrack:
 1650              	.LFB80:
 264:.\main.c      **** 
 265:.\main.c      **** void initTrack()
 266:.\main.c      **** {
 1651              		.loc 1 266 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 35


 1655              		@ link register save eliminated.
 1656 0000 80B4     		push	{r7}
 1657              		.cfi_def_cfa_offset 4
 1658              		.cfi_offset 7, -4
 1659 0002 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
 267:.\main.c      ****     movement_state = TRACKING;
 1661              		.loc 1 267 0
 1662 0004 034B     		ldr	r3, .L76
 1663 0006 0422     		movs	r2, #4
 1664 0008 1A70     		strb	r2, [r3]
 268:.\main.c      **** }
 1665              		.loc 1 268 0
 1666 000a BD46     		mov	sp, r7
 1667              		.cfi_def_cfa_register 13
 1668              		@ sp needed
 1669 000c 5DF8047B 		ldr	r7, [sp], #4
 1670              		.cfi_restore 7
 1671              		.cfi_def_cfa_offset 0
 1672 0010 7047     		bx	lr
 1673              	.L77:
 1674 0012 00BF     		.align	2
 1675              	.L76:
 1676 0014 00000000 		.word	movement_state
 1677              		.cfi_endproc
 1678              	.LFE80:
 1679              		.size	initTrack, .-initTrack
 1680              		.section	.text.initTrackU,"ax",%progbits
 1681              		.align	2
 1682              		.global	initTrackU
 1683              		.thumb
 1684              		.thumb_func
 1685              		.type	initTrackU, %function
 1686              	initTrackU:
 1687              	.LFB81:
 269:.\main.c      **** 
 270:.\main.c      **** void initTrackU(){
 1688              		.loc 1 270 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 1693 0000 80B4     		push	{r7}
 1694              		.cfi_def_cfa_offset 4
 1695              		.cfi_offset 7, -4
 1696 0002 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
 271:.\main.c      ****     movement_state = TRACKING_U;
 1698              		.loc 1 271 0
 1699 0004 034B     		ldr	r3, .L79
 1700 0006 0522     		movs	r2, #5
 1701 0008 1A70     		strb	r2, [r3]
 272:.\main.c      **** }
 1702              		.loc 1 272 0
 1703 000a BD46     		mov	sp, r7
 1704              		.cfi_def_cfa_register 13
 1705              		@ sp needed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 36


 1706 000c 5DF8047B 		ldr	r7, [sp], #4
 1707              		.cfi_restore 7
 1708              		.cfi_def_cfa_offset 0
 1709 0010 7047     		bx	lr
 1710              	.L80:
 1711 0012 00BF     		.align	2
 1712              	.L79:
 1713 0014 00000000 		.word	movement_state
 1714              		.cfi_endproc
 1715              	.LFE81:
 1716              		.size	initTrackU, .-initTrackU
 1717              		.section	.text.inittrackLineZ,"ax",%progbits
 1718              		.align	2
 1719              		.global	inittrackLineZ
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	inittrackLineZ, %function
 1723              	inittrackLineZ:
 1724              	.LFB82:
 273:.\main.c      **** 
 274:.\main.c      **** void inittrackLineZ(){
 1725              		.loc 1 274 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729              		@ link register save eliminated.
 1730 0000 80B4     		push	{r7}
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0002 00AF     		add	r7, sp, #0
 1734              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING_SOFT;
 1735              		.loc 1 275 0
 1736 0004 034B     		ldr	r3, .L82
 1737 0006 0622     		movs	r2, #6
 1738 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1739              		.loc 1 276 0
 1740 000a BD46     		mov	sp, r7
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 000c 5DF8047B 		ldr	r7, [sp], #4
 1744              		.cfi_restore 7
 1745              		.cfi_def_cfa_offset 0
 1746 0010 7047     		bx	lr
 1747              	.L83:
 1748 0012 00BF     		.align	2
 1749              	.L82:
 1750 0014 00000000 		.word	movement_state
 1751              		.cfi_endproc
 1752              	.LFE82:
 1753              		.size	inittrackLineZ, .-inittrackLineZ
 1754              		.section	.text.rxInt,"ax",%progbits
 1755              		.align	2
 1756              		.global	rxInt
 1757              		.thumb
 1758              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 37


 1759              		.type	rxInt, %function
 1760              	rxInt:
 1761              	.LFB83:
 277:.\main.c      **** 
 278:.\main.c      **** 
 279:.\main.c      **** 
 280:.\main.c      **** //Binary RF Data
 281:.\main.c      **** CY_ISR(rxInt){
 1762              		.loc 1 281 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 8
 1765              		@ frame_needed = 1, uses_anonymous_args = 0
 1766 0000 B0B5     		push	{r4, r5, r7, lr}
 1767              		.cfi_def_cfa_offset 16
 1768              		.cfi_offset 4, -16
 1769              		.cfi_offset 5, -12
 1770              		.cfi_offset 7, -8
 1771              		.cfi_offset 14, -4
 1772 0002 82B0     		sub	sp, sp, #8
 1773              		.cfi_def_cfa_offset 24
 1774 0004 00AF     		add	r7, sp, #0
 1775              		.cfi_def_cfa_register 7
 282:.\main.c      ****     char rf_char = UART_GetChar();
 1776              		.loc 1 282 0
 1777 0006 FFF7FEFF 		bl	UART_GetChar
 1778 000a 0346     		mov	r3, r0
 1779 000c FB71     		strb	r3, [r7, #7]
 283:.\main.c      ****     if(rf_char == SOP){
 1780              		.loc 1 283 0
 1781 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1782 0010 AA2B     		cmp	r3, #170
 1783 0012 2BD1     		bne	.L85
 284:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 285:.\main.c      ****             if(byteCount == 34)
 1784              		.loc 1 285 0
 1785 0014 224B     		ldr	r3, .L89
 1786 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1787 0018 222B     		cmp	r3, #34
 1788 001a 20D1     		bne	.L86
 286:.\main.c      ****             {
 287:.\main.c      ****                 system_state = buffer_state;
 1789              		.loc 1 287 0
 1790 001c 214B     		ldr	r3, .L89+4
 1791 001e 224A     		ldr	r2, .L89+8
 1792 0020 1568     		ldr	r5, [r2]	@ unaligned
 1793 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1794 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1795 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1796 0028 1D60     		str	r5, [r3]	@ unaligned
 1797 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1798 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1799 002e D960     		str	r1, [r3, #12]	@ unaligned
 1800 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1801 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1802 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1803 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1804 0038 1D61     		str	r5, [r3, #16]	@ unaligned
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 38


 1805 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1806 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1807 003e D961     		str	r1, [r3, #28]	@ unaligned
 288:.\main.c      ****                 if(initial_pos_valid == 0)
 1808              		.loc 1 288 0
 1809 0040 1A4B     		ldr	r3, .L89+12
 1810 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 0044 002B     		cmp	r3, #0
 1812 0046 0AD1     		bne	.L86
 289:.\main.c      ****                 {
 290:.\main.c      ****                     LED_Write(~LED_Read());
 1813              		.loc 1 290 0
 1814 0048 FFF7FEFF 		bl	LED_Read
 1815 004c 0346     		mov	r3, r0
 1816 004e DB43     		mvns	r3, r3
 1817 0050 DBB2     		uxtb	r3, r3
 1818 0052 1846     		mov	r0, r3
 1819 0054 FFF7FEFF 		bl	LED_Write
 291:.\main.c      ****                     initial_pos_valid = 1;
 1820              		.loc 1 291 0
 1821 0058 144B     		ldr	r3, .L89+12
 1822 005a 0122     		movs	r2, #1
 1823 005c 1A70     		strb	r2, [r3]
 1824              	.L86:
 292:.\main.c      ****                 }
 293:.\main.c      ****             }
 294:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1825              		.loc 1 294 0
 1826 005e 104B     		ldr	r3, .L89
 1827 0060 0222     		movs	r2, #2
 1828 0062 1A70     		strb	r2, [r3]
 295:.\main.c      ****             flag_rx = 0;
 1829              		.loc 1 295 0
 1830 0064 124B     		ldr	r3, .L89+16
 1831 0066 0022     		movs	r2, #0
 1832 0068 1A70     		strb	r2, [r3]
 1833 006a 16E0     		b	.L84
 1834              	.L85:
 296:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 297:.\main.c      ****         }
 298:.\main.c      ****         else
 299:.\main.c      ****         {
 300:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1835              		.loc 1 300 0
 1836 006c 0C4B     		ldr	r3, .L89
 1837 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1838 0070 03F00103 		and	r3, r3, #1
 1839 0074 0F49     		ldr	r1, .L89+20
 1840 0076 FA79     		ldrb	r2, [r7, #7]
 1841 0078 CA54     		strb	r2, [r1, r3]
 301:.\main.c      ****            
 302:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1842              		.loc 1 302 0
 1843 007a 094B     		ldr	r3, .L89
 1844 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 007e 03F00103 		and	r3, r3, #1
 1846 0082 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 39


 1847 0084 002B     		cmp	r3, #0
 1848 0086 02D0     		beq	.L88
 303:.\main.c      ****             {
 304:.\main.c      ****                 flag_rx = 1;
 1849              		.loc 1 304 0
 1850 0088 094B     		ldr	r3, .L89+16
 1851 008a 0122     		movs	r2, #1
 1852 008c 1A70     		strb	r2, [r3]
 1853              	.L88:
 305:.\main.c      ****             }
 306:.\main.c      ****             byteCount = (byteCount + 1);
 1854              		.loc 1 306 0
 1855 008e 044B     		ldr	r3, .L89
 1856 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 0092 0133     		adds	r3, r3, #1
 1858 0094 DAB2     		uxtb	r2, r3
 1859 0096 024B     		ldr	r3, .L89
 1860 0098 1A70     		strb	r2, [r3]
 1861              	.L84:
 307:.\main.c      ****         }
 308:.\main.c      **** }
 1862              		.loc 1 308 0
 1863 009a 0837     		adds	r7, r7, #8
 1864              		.cfi_def_cfa_offset 16
 1865 009c BD46     		mov	sp, r7
 1866              		.cfi_def_cfa_register 13
 1867              		@ sp needed
 1868 009e B0BD     		pop	{r4, r5, r7, pc}
 1869              	.L90:
 1870              		.align	2
 1871              	.L89:
 1872 00a0 00000000 		.word	byteCount
 1873 00a4 00000000 		.word	system_state
 1874 00a8 00000000 		.word	buffer_state
 1875 00ac 00000000 		.word	initial_pos_valid
 1876 00b0 00000000 		.word	flag_rx
 1877 00b4 00000000 		.word	packet
 1878              		.cfi_endproc
 1879              	.LFE83:
 1880              		.size	rxInt, .-rxInt
 1881              		.global	__aeabi_i2f
 1882              		.global	__aeabi_fmul
 1883              		.global	__aeabi_f2iz
 1884              		.section	.rodata
 1885 000a 0000     		.align	2
 1886              	.LC1:
 1887 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1887      65742071 
 1887      7561643A 
 1887      2025640D 
 1887      0A00
 1888 001e 0000     		.align	2
 1889              	.LC2:
 1890 0020 703A2573 		.ascii	"p:%s\015\012\000"
 1890      0D0A00
 1891              		.section	.text.BT_rxInt,"ax",%progbits
 1892              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 40


 1893              		.global	BT_rxInt
 1894              		.thumb
 1895              		.thumb_func
 1896              		.type	BT_rxInt, %function
 1897              	BT_rxInt:
 1898              	.LFB84:
 309:.\main.c      **** 
 310:.\main.c      **** CY_ISR(BT_rxInt)
 311:.\main.c      **** {
 1899              		.loc 1 311 0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 152
 1902              		@ frame_needed = 1, uses_anonymous_args = 0
 1903 0000 80B5     		push	{r7, lr}
 1904              		.cfi_def_cfa_offset 8
 1905              		.cfi_offset 7, -8
 1906              		.cfi_offset 14, -4
 1907 0002 A6B0     		sub	sp, sp, #152
 1908              		.cfi_def_cfa_offset 160
 1909 0004 00AF     		add	r7, sp, #0
 1910              		.cfi_def_cfa_register 7
 312:.\main.c      ****     char rf_char = UART_GetChar();
 1911              		.loc 1 312 0
 1912 0006 FFF7FEFF 		bl	UART_GetChar
 1913 000a 0346     		mov	r3, r0
 1914 000c 87F89730 		strb	r3, [r7, #151]
 313:.\main.c      ****     switch(rf_char){
 1915              		.loc 1 313 0
 1916 0010 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 1917 0014 613B     		subs	r3, r3, #97
 1918 0016 192B     		cmp	r3, #25
 1919 0018 00F2B680 		bhi	.L91
 1920 001c 01A2     		adr	r2, .L94
 1921 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1922 0022 00BF     		.p2align 2
 1923              	.L94:
 1924 0024 8D000000 		.word	.L93+1
 1925 0028 89010000 		.word	.L91+1
 1926 002c 89010000 		.word	.L91+1
 1927 0030 B1000000 		.word	.L95+1
 1928 0034 89010000 		.word	.L91+1
 1929 0038 BD000000 		.word	.L96+1
 1930 003c 89010000 		.word	.L91+1
 1931 0040 89010000 		.word	.L91+1
 1932 0044 89010000 		.word	.L91+1
 1933 0048 89010000 		.word	.L91+1
 1934 004c 89010000 		.word	.L91+1
 1935 0050 89010000 		.word	.L91+1
 1936 0054 89010000 		.word	.L91+1
 1937 0058 89010000 		.word	.L91+1
 1938 005c 89010000 		.word	.L91+1
 1939 0060 89010000 		.word	.L91+1
 1940 0064 ED000000 		.word	.L97+1
 1941 0068 47010000 		.word	.L98+1
 1942 006c A5000000 		.word	.L99+1
 1943 0070 C9000000 		.word	.L100+1
 1944 0074 D5000000 		.word	.L101+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 41


 1945 0078 89010000 		.word	.L91+1
 1946 007c 99000000 		.word	.L102+1
 1947 0080 5D010000 		.word	.L103+1
 1948 0084 89010000 		.word	.L91+1
 1949 0088 E1000000 		.word	.L104+1
 1950              		.p2align 1
 1951              	.L93:
 1952              	.LBB3:
 314:.\main.c      ****     case 'a':
 315:.\main.c      ****         initTurnLeft();
 1953              		.loc 1 315 0
 1954 008c FFF7FEFF 		bl	initTurnLeft
 316:.\main.c      ****         track_mode = NO_TRACK;
 1955              		.loc 1 316 0
 1956 0090 3F4B     		ldr	r3, .L106
 1957 0092 0022     		movs	r2, #0
 1958 0094 1A70     		strb	r2, [r3]
 317:.\main.c      ****         break;
 1959              		.loc 1 317 0
 1960 0096 77E0     		b	.L91
 1961              	.L102:
 318:.\main.c      ****     case 'w':
 319:.\main.c      ****         initForward();
 1962              		.loc 1 319 0
 1963 0098 FFF7FEFF 		bl	initForward
 320:.\main.c      ****         track_mode = NO_TRACK;
 1964              		.loc 1 320 0
 1965 009c 3C4B     		ldr	r3, .L106
 1966 009e 0022     		movs	r2, #0
 1967 00a0 1A70     		strb	r2, [r3]
 321:.\main.c      ****         break;
 1968              		.loc 1 321 0
 1969 00a2 71E0     		b	.L91
 1970              	.L99:
 322:.\main.c      ****     case 's': 
 323:.\main.c      ****         reverseDirection();
 1971              		.loc 1 323 0
 1972 00a4 FFF7FEFF 		bl	reverseDirection
 324:.\main.c      ****         track_mode = NO_TRACK;
 1973              		.loc 1 324 0
 1974 00a8 394B     		ldr	r3, .L106
 1975 00aa 0022     		movs	r2, #0
 1976 00ac 1A70     		strb	r2, [r3]
 325:.\main.c      ****         break;
 1977              		.loc 1 325 0
 1978 00ae 6BE0     		b	.L91
 1979              	.L95:
 326:.\main.c      ****     case 'd':
 327:.\main.c      ****         initTurnRight();
 1980              		.loc 1 327 0
 1981 00b0 FFF7FEFF 		bl	initTurnRight
 328:.\main.c      ****         track_mode = NO_TRACK;
 1982              		.loc 1 328 0
 1983 00b4 364B     		ldr	r3, .L106
 1984 00b6 0022     		movs	r2, #0
 1985 00b8 1A70     		strb	r2, [r3]
 329:.\main.c      ****         break;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 42


 1986              		.loc 1 329 0
 1987 00ba 65E0     		b	.L91
 1988              	.L96:
 330:.\main.c      ****     case 'f':
 331:.\main.c      ****         initBrake();
 1989              		.loc 1 331 0
 1990 00bc FFF7FEFF 		bl	initBrake
 332:.\main.c      ****         track_mode = NO_TRACK;
 1991              		.loc 1 332 0
 1992 00c0 334B     		ldr	r3, .L106
 1993 00c2 0022     		movs	r2, #0
 1994 00c4 1A70     		strb	r2, [r3]
 333:.\main.c      ****         break;
 1995              		.loc 1 333 0
 1996 00c6 5FE0     		b	.L91
 1997              	.L100:
 334:.\main.c      ****     case('t'):
 335:.\main.c      ****         track_mode = CURVE_TRACK;
 1998              		.loc 1 335 0
 1999 00c8 314B     		ldr	r3, .L106
 2000 00ca 0122     		movs	r2, #1
 2001 00cc 1A70     		strb	r2, [r3]
 336:.\main.c      ****         initTrack();
 2002              		.loc 1 336 0
 2003 00ce FFF7FEFF 		bl	initTrack
 337:.\main.c      ****         break;
 2004              		.loc 1 337 0
 2005 00d2 59E0     		b	.L91
 2006              	.L101:
 338:.\main.c      ****     case('u'):
 339:.\main.c      ****         initTrackU();
 2007              		.loc 1 339 0
 2008 00d4 FFF7FEFF 		bl	initTrackU
 340:.\main.c      ****         track_mode = U_TRACK;
 2009              		.loc 1 340 0
 2010 00d8 2D4B     		ldr	r3, .L106
 2011 00da 0222     		movs	r2, #2
 2012 00dc 1A70     		strb	r2, [r3]
 341:.\main.c      ****         break;
 2013              		.loc 1 341 0
 2014 00de 53E0     		b	.L91
 2015              	.L104:
 342:.\main.c      ****     case('z'):
 343:.\main.c      ****         track_mode = SQUARE_TRACK;
 2016              		.loc 1 343 0
 2017 00e0 2B4B     		ldr	r3, .L106
 2018 00e2 0322     		movs	r2, #3
 2019 00e4 1A70     		strb	r2, [r3]
 344:.\main.c      ****         inittrackLineZ();
 2020              		.loc 1 344 0
 2021 00e6 FFF7FEFF 		bl	inittrackLineZ
 345:.\main.c      ****         break;
 2022              		.loc 1 345 0
 2023 00ea 4DE0     		b	.L91
 2024              	.L97:
 346:.\main.c      ****     case('q'):
 347:.\main.c      ****         track_mode = QUAD_STOP;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 43


 2025              		.loc 1 347 0
 2026 00ec 284B     		ldr	r3, .L106
 2027 00ee 0422     		movs	r2, #4
 2028 00f0 1A70     		strb	r2, [r3]
 348:.\main.c      ****         accum_dist = 0;
 2029              		.loc 1 348 0
 2030 00f2 284B     		ldr	r3, .L106+4
 2031 00f4 0022     		movs	r2, #0
 2032 00f6 1A80     		strh	r2, [r3]	@ movhi
 349:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 2033              		.loc 1 349 0
 2034 00f8 274B     		ldr	r3, .L106+8
 2035 00fa 1B88     		ldrh	r3, [r3]
 2036 00fc 1BB2     		sxth	r3, r3
 2037 00fe 1846     		mov	r0, r3
 2038 0100 FFF7FEFF 		bl	__aeabi_i2f
 2039 0104 0246     		mov	r2, r0
 2040 0106 254B     		ldr	r3, .L106+12
 2041 0108 1B68     		ldr	r3, [r3]	@ float
 2042 010a 1046     		mov	r0, r2
 2043 010c 1946     		mov	r1, r3
 2044 010e FFF7FEFF 		bl	__aeabi_fmul
 2045 0112 0346     		mov	r3, r0
 2046 0114 1846     		mov	r0, r3
 2047 0116 FFF7FEFF 		bl	__aeabi_f2iz
 2048 011a 0346     		mov	r3, r0
 2049 011c 9AB2     		uxth	r2, r3
 2050 011e 204B     		ldr	r3, .L106+16
 2051 0120 1A80     		strh	r2, [r3]	@ movhi
 350:.\main.c      ****         char mes[16];
 351:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 2052              		.loc 1 351 0
 2053 0122 1F4B     		ldr	r3, .L106+16
 2054 0124 1B88     		ldrh	r3, [r3]
 2055 0126 1BB2     		sxth	r3, r3
 2056 0128 07F18402 		add	r2, r7, #132
 2057 012c 1046     		mov	r0, r2
 2058 012e 1D49     		ldr	r1, .L106+20
 2059 0130 1A46     		mov	r2, r3
 2060 0132 FFF7FEFF 		bl	sprintf
 352:.\main.c      ****         UART_PutString(mes);
 2061              		.loc 1 352 0
 2062 0136 07F18403 		add	r3, r7, #132
 2063 013a 1846     		mov	r0, r3
 2064 013c FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****         initForward();
 2065              		.loc 1 353 0
 2066 0140 FFF7FEFF 		bl	initForward
 354:.\main.c      ****         break;
 2067              		.loc 1 354 0
 2068 0144 20E0     		b	.L91
 2069              	.L98:
 355:.\main.c      ****     case ('r'):
 356:.\main.c      ****         track_mode = RF_STOP;
 2070              		.loc 1 356 0
 2071 0146 124B     		ldr	r3, .L106
 2072 0148 0522     		movs	r2, #5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 44


 2073 014a 1A70     		strb	r2, [r3]
 357:.\main.c      ****         changeToRF();
 2074              		.loc 1 357 0
 2075 014c FFF7FEFF 		bl	changeToRF
 358:.\main.c      ****         // Make initial position
 359:.\main.c      ****         initial_pos_valid = 0;
 2076              		.loc 1 359 0
 2077 0150 154B     		ldr	r3, .L106+24
 2078 0152 0022     		movs	r2, #0
 2079 0154 1A70     		strb	r2, [r3]
 360:.\main.c      ****         initBrake();
 2080              		.loc 1 360 0
 2081 0156 FFF7FEFF 		bl	initBrake
 361:.\main.c      ****         break;
 2082              		.loc 1 361 0
 2083 015a 15E0     		b	.L91
 2084              	.L103:
 362:.\main.c      ****     case ('x'):
 363:.\main.c      ****         track_mode = DEST_TEST;
 2085              		.loc 1 363 0
 2086 015c 0C4B     		ldr	r3, .L106
 2087 015e 0622     		movs	r2, #6
 2088 0160 1A70     		strb	r2, [r3]
 364:.\main.c      ****         tracked_direction = robot_direction;
 2089              		.loc 1 364 0
 2090 0162 124B     		ldr	r3, .L106+28
 2091 0164 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2092 0166 124B     		ldr	r3, .L106+32
 2093 0168 1A70     		strb	r2, [r3]
 365:.\main.c      ****         generateDirections();
 2094              		.loc 1 365 0
 2095 016a FFF7FEFF 		bl	generateDirections
 366:.\main.c      ****         char message[128];
 367:.\main.c      ****         sprintf(message, "p:%s\r\n", instructions);
 2096              		.loc 1 367 0
 2097 016e 3B1D     		adds	r3, r7, #4
 2098 0170 1846     		mov	r0, r3
 2099 0172 1049     		ldr	r1, .L106+36
 2100 0174 104A     		ldr	r2, .L106+40
 2101 0176 FFF7FEFF 		bl	sprintf
 368:.\main.c      ****         UART_PutString(message);
 2102              		.loc 1 368 0
 2103 017a 3B1D     		adds	r3, r7, #4
 2104 017c 1846     		mov	r0, r3
 2105 017e FFF7FEFF 		bl	UART_PutString
 369:.\main.c      ****         inittrackLineZ();
 2106              		.loc 1 369 0
 2107 0182 FFF7FEFF 		bl	inittrackLineZ
 370:.\main.c      ****         break;
 2108              		.loc 1 370 0
 2109 0186 00BF     		nop
 2110              	.L91:
 2111              	.LBE3:
 371:.\main.c      ****     }
 372:.\main.c      **** }
 2112              		.loc 1 372 0
 2113 0188 9837     		adds	r7, r7, #152
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 45


 2114              		.cfi_def_cfa_offset 8
 2115 018a BD46     		mov	sp, r7
 2116              		.cfi_def_cfa_register 13
 2117              		@ sp needed
 2118 018c 80BD     		pop	{r7, pc}
 2119              	.L107:
 2120 018e 00BF     		.align	2
 2121              	.L106:
 2122 0190 00000000 		.word	track_mode
 2123 0194 00000000 		.word	accum_dist
 2124 0198 00000000 		.word	target_distance_cm
 2125 019c 00000000 		.word	quad_per_cm
 2126 01a0 00000000 		.word	target_distance_quad
 2127 01a4 0C000000 		.word	.LC1
 2128 01a8 00000000 		.word	initial_pos_valid
 2129 01ac 00000000 		.word	robot_direction
 2130 01b0 00000000 		.word	tracked_direction
 2131 01b4 20000000 		.word	.LC2
 2132 01b8 00000000 		.word	instructions
 2133              		.cfi_endproc
 2134              	.LFE84:
 2135              		.size	BT_rxInt, .-BT_rxInt
 2136              		.section	.text.BT_txInt,"ax",%progbits
 2137              		.align	2
 2138              		.global	BT_txInt
 2139              		.thumb
 2140              		.thumb_func
 2141              		.type	BT_txInt, %function
 2142              	BT_txInt:
 2143              	.LFB85:
 373:.\main.c      **** 
 374:.\main.c      **** //BT
 375:.\main.c      **** CY_ISR(BT_txInt)
 376:.\main.c      **** {
 2144              		.loc 1 376 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 1, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 2149 0000 80B4     		push	{r7}
 2150              		.cfi_def_cfa_offset 4
 2151              		.cfi_offset 7, -4
 2152 0002 00AF     		add	r7, sp, #0
 2153              		.cfi_def_cfa_register 7
 377:.\main.c      ****     
 378:.\main.c      **** }
 2154              		.loc 1 378 0
 2155 0004 BD46     		mov	sp, r7
 2156              		.cfi_def_cfa_register 13
 2157              		@ sp needed
 2158 0006 5DF8047B 		ldr	r7, [sp], #4
 2159              		.cfi_restore 7
 2160              		.cfi_def_cfa_offset 0
 2161 000a 7047     		bx	lr
 2162              		.cfi_endproc
 2163              	.LFE85:
 2164              		.size	BT_txInt, .-BT_txInt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 46


 2165              		.section	.text.adc_isr,"ax",%progbits
 2166              		.align	2
 2167              		.global	adc_isr
 2168              		.thumb
 2169              		.thumb_func
 2170              		.type	adc_isr, %function
 2171              	adc_isr:
 2172              	.LFB86:
 379:.\main.c      **** 
 380:.\main.c      **** //ADC:
 381:.\main.c      **** CY_ISR (adc_isr)
 382:.\main.c      **** {
 2173              		.loc 1 382 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177 0000 80B5     		push	{r7, lr}
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 7, -8
 2180              		.cfi_offset 14, -4
 2181 0002 00AF     		add	r7, sp, #0
 2182              		.cfi_def_cfa_register 7
 383:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 384:.\main.c      ****     adc_result = ADC_GetResult16();
 2183              		.loc 1 384 0
 2184 0004 FFF7FEFF 		bl	ADC_GetResult16
 2185 0008 0346     		mov	r3, r0
 2186 000a 1A46     		mov	r2, r3
 2187 000c 044B     		ldr	r3, .L110
 2188 000e 1A80     		strh	r2, [r3]	@ movhi
 385:.\main.c      ****     flag_receive_ADC = 1;
 2189              		.loc 1 385 0
 2190 0010 044B     		ldr	r3, .L110+4
 2191 0012 0122     		movs	r2, #1
 2192 0014 1A70     		strb	r2, [r3]
 386:.\main.c      ****     flag_print_rf = 1;
 2193              		.loc 1 386 0
 2194 0016 044B     		ldr	r3, .L110+8
 2195 0018 0122     		movs	r2, #1
 2196 001a 1A70     		strb	r2, [r3]
 387:.\main.c      ****     //LED_Write(~LED_Read());
 388:.\main.c      **** }
 2197              		.loc 1 388 0
 2198 001c 80BD     		pop	{r7, pc}
 2199              	.L111:
 2200 001e 00BF     		.align	2
 2201              	.L110:
 2202 0020 00000000 		.word	adc_result
 2203 0024 00000000 		.word	flag_receive_ADC
 2204 0028 00000000 		.word	flag_print_rf
 2205              		.cfi_endproc
 2206              	.LFE86:
 2207              		.size	adc_isr, .-adc_isr
 2208              		.section	.rodata
 2209 0027 00       		.align	2
 2210              	.LC3:
 2211 0028 64697374 		.ascii	"dist: %d\015\012\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 47


 2211      3A202564 
 2211      0D0A00
 2212              		.global	__aeabi_i2d
 2213              		.global	__aeabi_dcmple
 2214              		.section	.text.isr_quad1,"ax",%progbits
 2215              		.align	2
 2216              		.global	isr_quad1
 2217              		.thumb
 2218              		.thumb_func
 2219              		.type	isr_quad1, %function
 2220              	isr_quad1:
 2221              	.LFB87:
 389:.\main.c      **** 
 390:.\main.c      **** CY_ISR (isr_quad1)
 391:.\main.c      **** {
 2222              		.loc 1 391 0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 24
 2225              		@ frame_needed = 1, uses_anonymous_args = 0
 2226 0000 B0B5     		push	{r4, r5, r7, lr}
 2227              		.cfi_def_cfa_offset 16
 2228              		.cfi_offset 4, -16
 2229              		.cfi_offset 5, -12
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 86B0     		sub	sp, sp, #24
 2233              		.cfi_def_cfa_offset 40
 2234 0004 00AF     		add	r7, sp, #0
 2235              		.cfi_def_cfa_register 7
 392:.\main.c      ****     //LED_Write(~LED_Read());
 393:.\main.c      ****     last_quad_count1 = quad_count1;
 2236              		.loc 1 393 0
 2237 0006 684B     		ldr	r3, .L119
 2238 0008 1A88     		ldrh	r2, [r3]
 2239 000a 684B     		ldr	r3, .L119+4
 2240 000c 1A80     		strh	r2, [r3]	@ movhi
 394:.\main.c      ****     last_quad_count2 = quad_count2;
 2241              		.loc 1 394 0
 2242 000e 684B     		ldr	r3, .L119+8
 2243 0010 1A88     		ldrh	r2, [r3]
 2244 0012 684B     		ldr	r3, .L119+12
 2245 0014 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 2246              		.loc 1 395 0
 2247 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2248 001a 0346     		mov	r3, r0
 2249 001c 1A46     		mov	r2, r3
 2250 001e 624B     		ldr	r3, .L119
 2251 0020 1A80     		strh	r2, [r3]	@ movhi
 396:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 2252              		.loc 1 396 0
 2253 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2254 0026 0346     		mov	r3, r0
 2255 0028 1A46     		mov	r2, r3
 2256 002a 614B     		ldr	r3, .L119+8
 2257 002c 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 48


 2258              		.loc 1 397 0
 2259 002e 5E4B     		ldr	r3, .L119
 2260 0030 1B88     		ldrh	r3, [r3]
 2261 0032 9AB2     		uxth	r2, r3
 2262 0034 5D4B     		ldr	r3, .L119+4
 2263 0036 1B88     		ldrh	r3, [r3]
 2264 0038 9BB2     		uxth	r3, r3
 2265 003a D31A     		subs	r3, r2, r3
 2266 003c 9BB2     		uxth	r3, r3
 2267 003e 9AB2     		uxth	r2, r3
 2268 0040 5D4B     		ldr	r3, .L119+16
 2269 0042 1A80     		strh	r2, [r3]	@ movhi
 398:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 2270              		.loc 1 398 0
 2271 0044 5A4B     		ldr	r3, .L119+8
 2272 0046 1B88     		ldrh	r3, [r3]
 2273 0048 9AB2     		uxth	r2, r3
 2274 004a 5A4B     		ldr	r3, .L119+12
 2275 004c 1B88     		ldrh	r3, [r3]
 2276 004e 9BB2     		uxth	r3, r3
 2277 0050 D31A     		subs	r3, r2, r3
 2278 0052 9BB2     		uxth	r3, r3
 2279 0054 9AB2     		uxth	r2, r3
 2280 0056 594B     		ldr	r3, .L119+20
 2281 0058 1A80     		strh	r2, [r3]	@ movhi
 399:.\main.c      ****     
 400:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && track_mode 
 2282              		.loc 1 400 0
 2283 005a 534B     		ldr	r3, .L119
 2284 005c 1B88     		ldrh	r3, [r3]
 2285 005e 1BB2     		sxth	r3, r3
 2286 0060 002B     		cmp	r3, #0
 2287 0062 B8BF     		it	lt
 2288 0064 5B42     		rsblt	r3, r3, #0
 2289 0066 40F6B832 		movw	r2, #3000
 2290 006a 9342     		cmp	r3, r2
 2291 006c 1BDD     		ble	.L113
 2292              		.loc 1 400 0 is_stmt 0 discriminator 1
 2293 006e 544B     		ldr	r3, .L119+24
 2294 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2295 0072 012B     		cmp	r3, #1
 2296 0074 17D0     		beq	.L113
 2297              		.loc 1 400 0 discriminator 2
 2298 0076 524B     		ldr	r3, .L119+24
 2299 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2300 007a 022B     		cmp	r3, #2
 2301 007c 13D0     		beq	.L113
 2302              		.loc 1 400 0 discriminator 3
 2303 007e 514B     		ldr	r3, .L119+28
 2304 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0082 042B     		cmp	r3, #4
 2306 0084 0FD0     		beq	.L113
 2307              		.loc 1 400 0 discriminator 4
 2308 0086 4E4B     		ldr	r3, .L119+24
 2309 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 008a 072B     		cmp	r3, #7
 2311 008c 0BD0     		beq	.L113
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 49


 401:.\main.c      ****     {
 402:.\main.c      ****         QuadDec_M1_SetCounter(0);
 2312              		.loc 1 402 0 is_stmt 1
 2313 008e 0020     		movs	r0, #0
 2314 0090 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 403:.\main.c      ****         QuadDec_M2_SetCounter(0);
 2315              		.loc 1 403 0
 2316 0094 0020     		movs	r0, #0
 2317 0096 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 404:.\main.c      ****         quad_count1 = 0;
 2318              		.loc 1 404 0
 2319 009a 434B     		ldr	r3, .L119
 2320 009c 0022     		movs	r2, #0
 2321 009e 1A80     		strh	r2, [r3]	@ movhi
 405:.\main.c      ****         quad_count2 = 0;
 2322              		.loc 1 405 0
 2323 00a0 434B     		ldr	r3, .L119+8
 2324 00a2 0022     		movs	r2, #0
 2325 00a4 1A80     		strh	r2, [r3]	@ movhi
 2326              	.L113:
 406:.\main.c      ****     }
 407:.\main.c      **** 
 408:.\main.c      ****     flag_calc_wheelspeed = 1;
 2327              		.loc 1 408 0
 2328 00a6 484B     		ldr	r3, .L119+32
 2329 00a8 0122     		movs	r2, #1
 2330 00aa 1A70     		strb	r2, [r3]
 409:.\main.c      ****     
 410:.\main.c      ****     if (track_mode == QUAD_STOP)
 2331              		.loc 1 410 0
 2332 00ac 454B     		ldr	r3, .L119+28
 2333 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2334 00b0 042B     		cmp	r3, #4
 2335 00b2 2AD1     		bne	.L114
 2336              	.LBB4:
 411:.\main.c      ****     {
 412:.\main.c      ****         accum_dist += quad_diff1;
 2337              		.loc 1 412 0
 2338 00b4 454B     		ldr	r3, .L119+36
 2339 00b6 1B88     		ldrh	r3, [r3]
 2340 00b8 9AB2     		uxth	r2, r3
 2341 00ba 3F4B     		ldr	r3, .L119+16
 2342 00bc 1B88     		ldrh	r3, [r3]
 2343 00be 9BB2     		uxth	r3, r3
 2344 00c0 1344     		add	r3, r3, r2
 2345 00c2 9BB2     		uxth	r3, r3
 2346 00c4 9AB2     		uxth	r2, r3
 2347 00c6 414B     		ldr	r3, .L119+36
 2348 00c8 1A80     		strh	r2, [r3]	@ movhi
 413:.\main.c      ****         char mes[16];
 414:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 2349              		.loc 1 414 0
 2350 00ca 404B     		ldr	r3, .L119+36
 2351 00cc 1B88     		ldrh	r3, [r3]
 2352 00ce 1BB2     		sxth	r3, r3
 2353 00d0 3A46     		mov	r2, r7
 2354 00d2 1046     		mov	r0, r2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 50


 2355 00d4 3E49     		ldr	r1, .L119+40
 2356 00d6 1A46     		mov	r2, r3
 2357 00d8 FFF7FEFF 		bl	sprintf
 415:.\main.c      ****         UART_PutString(mes);
 2358              		.loc 1 415 0
 2359 00dc 3B46     		mov	r3, r7
 2360 00de 1846     		mov	r0, r3
 2361 00e0 FFF7FEFF 		bl	UART_PutString
 416:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 2362              		.loc 1 416 0
 2363 00e4 394B     		ldr	r3, .L119+36
 2364 00e6 1B88     		ldrh	r3, [r3]
 2365 00e8 1BB2     		sxth	r3, r3
 2366 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 2367 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 2368 00f2 384B     		ldr	r3, .L119+44
 2369 00f4 1B88     		ldrh	r3, [r3]
 2370 00f6 1BB2     		sxth	r3, r3
 2371 00f8 9A42     		cmp	r2, r3
 2372 00fa 05DB     		blt	.L115
 417:.\main.c      ****         {
 418:.\main.c      ****             initBrake();
 2373              		.loc 1 418 0
 2374 00fc FFF7FEFF 		bl	initBrake
 419:.\main.c      ****             track_mode = NO_TRACK;
 2375              		.loc 1 419 0
 2376 0100 304B     		ldr	r3, .L119+28
 2377 0102 0022     		movs	r2, #0
 2378 0104 1A70     		strb	r2, [r3]
 2379              	.LBE4:
 2380 0106 4CE0     		b	.L112
 2381              	.L115:
 2382 0108 4BE0     		b	.L112
 2383              	.L114:
 420:.\main.c      ****         }
 421:.\main.c      ****     } else if (track_mode == RF_STOP)
 2384              		.loc 1 421 0
 2385 010a 2E4B     		ldr	r3, .L119+28
 2386 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2387 010e 052B     		cmp	r3, #5
 2388 0110 47D1     		bne	.L112
 2389              	.LBB5:
 422:.\main.c      ****     { 
 423:.\main.c      ****         // Do pythag
 424:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 2390              		.loc 1 424 0
 2391 0112 314B     		ldr	r3, .L119+48
 2392 0114 5B88     		ldrh	r3, [r3, #2]
 2393 0116 1AB2     		sxth	r2, r3
 2394 0118 304B     		ldr	r3, .L119+52
 2395 011a 1B88     		ldrh	r3, [r3]
 2396 011c 1BB2     		sxth	r3, r3
 2397 011e D31A     		subs	r3, r2, r3
 2398 0120 1846     		mov	r0, r3
 2399 0122 FFF7FEFF 		bl	__aeabi_i2d
 2400 0126 0246     		mov	r2, r0
 2401 0128 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 51


 2402 012a 1046     		mov	r0, r2
 2403 012c 1946     		mov	r1, r3
 2404 012e 4FF00002 		mov	r2, #0
 2405 0132 2B4B     		ldr	r3, .L119+56
 2406 0134 FFF7FEFF 		bl	__aeabi_ddiv
 2407 0138 0246     		mov	r2, r0
 2408 013a 0B46     		mov	r3, r1
 2409 013c 1446     		mov	r4, r2
 2410 013e 1D46     		mov	r5, r3
 2411 0140 254B     		ldr	r3, .L119+48
 2412 0142 9B88     		ldrh	r3, [r3, #4]
 2413 0144 1AB2     		sxth	r2, r3
 2414 0146 274B     		ldr	r3, .L119+60
 2415 0148 1B88     		ldrh	r3, [r3]
 2416 014a 1BB2     		sxth	r3, r3
 2417 014c D31A     		subs	r3, r2, r3
 2418 014e 1846     		mov	r0, r3
 2419 0150 FFF7FEFF 		bl	__aeabi_i2d
 2420 0154 0246     		mov	r2, r0
 2421 0156 0B46     		mov	r3, r1
 2422 0158 1046     		mov	r0, r2
 2423 015a 1946     		mov	r1, r3
 2424 015c 4FF00002 		mov	r2, #0
 2425 0160 1F4B     		ldr	r3, .L119+56
 2426 0162 FFF7FEFF 		bl	__aeabi_ddiv
 2427 0166 0246     		mov	r2, r0
 2428 0168 0B46     		mov	r3, r1
 2429 016a 2046     		mov	r0, r4
 2430 016c 2946     		mov	r1, r5
 2431 016e FFF7FEFF 		bl	hypot
 2432 0172 C7E90401 		strd	r0, [r7, #16]
 425:.\main.c      ****         if (dist >= target_distance_cm)
 2433              		.loc 1 425 0
 2434 0176 1C4B     		ldr	r3, .L119+64
 2435 0178 1B88     		ldrh	r3, [r3]
 2436 017a 1BB2     		sxth	r3, r3
 2437 017c 1846     		mov	r0, r3
 2438 017e FFF7FEFF 		bl	__aeabi_i2d
 2439 0182 0246     		mov	r2, r0
 2440 0184 0B46     		mov	r3, r1
 2441 0186 1046     		mov	r0, r2
 2442 0188 1946     		mov	r1, r3
 2443 018a D7E90423 		ldrd	r2, [r7, #16]
 2444 018e FFF7FEFF 		bl	__aeabi_dcmple
 2445 0192 0346     		mov	r3, r0
 2446 0194 002B     		cmp	r3, #0
 2447 0196 04D0     		beq	.L112
 426:.\main.c      ****         {
 427:.\main.c      ****             initBrake();
 2448              		.loc 1 427 0
 2449 0198 FFF7FEFF 		bl	initBrake
 428:.\main.c      ****             track_mode = NO_TRACK;
 2450              		.loc 1 428 0
 2451 019c 094B     		ldr	r3, .L119+28
 2452 019e 0022     		movs	r2, #0
 2453 01a0 1A70     		strb	r2, [r3]
 2454              	.L112:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 52


 2455              	.LBE5:
 429:.\main.c      ****         }
 430:.\main.c      ****     }
 431:.\main.c      ****     
 432:.\main.c      **** }
 2456              		.loc 1 432 0
 2457 01a2 1837     		adds	r7, r7, #24
 2458              		.cfi_def_cfa_offset 16
 2459 01a4 BD46     		mov	sp, r7
 2460              		.cfi_def_cfa_register 13
 2461              		@ sp needed
 2462 01a6 B0BD     		pop	{r4, r5, r7, pc}
 2463              	.L120:
 2464              		.align	2
 2465              	.L119:
 2466 01a8 00000000 		.word	quad_count1
 2467 01ac 00000000 		.word	last_quad_count1
 2468 01b0 00000000 		.word	quad_count2
 2469 01b4 00000000 		.word	last_quad_count2
 2470 01b8 00000000 		.word	quad_diff1
 2471 01bc 00000000 		.word	quad_diff2
 2472 01c0 00000000 		.word	movement_state
 2473 01c4 00000000 		.word	track_mode
 2474 01c8 00000000 		.word	flag_calc_wheelspeed
 2475 01cc 00000000 		.word	accum_dist
 2476 01d0 28000000 		.word	.LC3
 2477 01d4 00000000 		.word	target_distance_quad
 2478 01d8 00000000 		.word	system_state
 2479 01dc 00000000 		.word	initial_x_pos
 2480 01e0 00001040 		.word	1074790400
 2481 01e4 00000000 		.word	initial_y_pos
 2482 01e8 00000000 		.word	target_distance_cm
 2483              		.cfi_endproc
 2484              	.LFE87:
 2485              		.size	isr_quad1, .-isr_quad1
 2486              		.section	.text.isr_turn_timer,"ax",%progbits
 2487              		.align	2
 2488              		.global	isr_turn_timer
 2489              		.thumb
 2490              		.thumb_func
 2491              		.type	isr_turn_timer, %function
 2492              	isr_turn_timer:
 2493              	.LFB88:
 433:.\main.c      **** 
 434:.\main.c      **** CY_ISR(isr_turn_timer)
 435:.\main.c      **** {
 2494              		.loc 1 435 0
 2495              		.cfi_startproc
 2496              		@ args = 0, pretend = 0, frame = 0
 2497              		@ frame_needed = 1, uses_anonymous_args = 0
 2498 0000 80B5     		push	{r7, lr}
 2499              		.cfi_def_cfa_offset 8
 2500              		.cfi_offset 7, -8
 2501              		.cfi_offset 14, -4
 2502 0002 00AF     		add	r7, sp, #0
 2503              		.cfi_def_cfa_register 7
 436:.\main.c      ****     if(movement_state == LTURN)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 53


 2504              		.loc 1 436 0
 2505 0004 264B     		ldr	r3, .L127
 2506 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 0008 012B     		cmp	r3, #1
 2508 000a 15D1     		bne	.L122
 437:.\main.c      ****     {
 438:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 2509              		.loc 1 438 0
 2510 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2511 0010 0346     		mov	r3, r0
 2512 0012 1A46     		mov	r2, r3
 2513 0014 234B     		ldr	r3, .L127+4
 2514 0016 1B88     		ldrh	r3, [r3]
 2515 0018 1BB2     		sxth	r3, r3
 2516 001a D31A     		subs	r3, r2, r3
 2517 001c 002B     		cmp	r3, #0
 2518 001e B8BF     		it	lt
 2519 0020 5B42     		rsblt	r3, r3, #0
 2520 0022 CF2B     		cmp	r3, #207
 2521 0024 3BDD     		ble	.L121
 439:.\main.c      ****         {
 440:.\main.c      ****             //movement_state = STOPPED;
 441:.\main.c      ****             brakeMotor();
 2522              		.loc 1 441 0
 2523 0026 FFF7FEFF 		bl	brakeMotor
 442:.\main.c      ****             movement_state = prev_movement_state;
 2524              		.loc 1 442 0
 2525 002a 1F4B     		ldr	r3, .L127+8
 2526 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2527 002e 1C4B     		ldr	r3, .L127
 2528 0030 1A70     		strb	r2, [r3]
 443:.\main.c      ****             Timer_2_Stop();
 2529              		.loc 1 443 0
 2530 0032 FFF7FEFF 		bl	Timer_2_Stop
 2531 0036 32E0     		b	.L121
 2532              	.L122:
 444:.\main.c      ****         }
 445:.\main.c      ****     }
 446:.\main.c      ****     else if (movement_state == RTURN)
 2533              		.loc 1 446 0
 2534 0038 194B     		ldr	r3, .L127
 2535 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2536 003c 022B     		cmp	r3, #2
 2537 003e 15D1     		bne	.L125
 447:.\main.c      ****     {
 448:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2538              		.loc 1 448 0
 2539 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2540 0044 0346     		mov	r3, r0
 2541 0046 1A46     		mov	r2, r3
 2542 0048 164B     		ldr	r3, .L127+4
 2543 004a 1B88     		ldrh	r3, [r3]
 2544 004c 1BB2     		sxth	r3, r3
 2545 004e D31A     		subs	r3, r2, r3
 2546 0050 002B     		cmp	r3, #0
 2547 0052 B8BF     		it	lt
 2548 0054 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 54


 2549 0056 CF2B     		cmp	r3, #207
 2550 0058 21DD     		ble	.L121
 449:.\main.c      ****         {
 450:.\main.c      ****             //movement_state = STOPPED;
 451:.\main.c      ****             brakeMotor();
 2551              		.loc 1 451 0
 2552 005a FFF7FEFF 		bl	brakeMotor
 452:.\main.c      ****             movement_state = prev_movement_state;
 2553              		.loc 1 452 0
 2554 005e 124B     		ldr	r3, .L127+8
 2555 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2556 0062 0F4B     		ldr	r3, .L127
 2557 0064 1A70     		strb	r2, [r3]
 453:.\main.c      ****             Timer_2_Stop();
 2558              		.loc 1 453 0
 2559 0066 FFF7FEFF 		bl	Timer_2_Stop
 2560 006a 18E0     		b	.L121
 2561              	.L125:
 454:.\main.c      ****         }
 455:.\main.c      ****     }
 456:.\main.c      ****     else if (movement_state == UTURN)
 2562              		.loc 1 456 0
 2563 006c 0C4B     		ldr	r3, .L127
 2564 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2565 0070 072B     		cmp	r3, #7
 2566 0072 14D1     		bne	.L121
 457:.\main.c      ****     {
 458:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2567              		.loc 1 458 0
 2568 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2569 0078 0346     		mov	r3, r0
 2570 007a 1A46     		mov	r2, r3
 2571 007c 094B     		ldr	r3, .L127+4
 2572 007e 1B88     		ldrh	r3, [r3]
 2573 0080 1BB2     		sxth	r3, r3
 2574 0082 D31A     		subs	r3, r2, r3
 2575 0084 002B     		cmp	r3, #0
 2576 0086 B8BF     		it	lt
 2577 0088 5B42     		rsblt	r3, r3, #0
 2578 008a CF2B     		cmp	r3, #207
 2579 008c 07DD     		ble	.L121
 459:.\main.c      ****         {
 460:.\main.c      ****             //movement_state = STOPPED;
 461:.\main.c      ****             brakeMotor();
 2580              		.loc 1 461 0
 2581 008e FFF7FEFF 		bl	brakeMotor
 462:.\main.c      ****             movement_state = prev_movement_state;
 2582              		.loc 1 462 0
 2583 0092 054B     		ldr	r3, .L127+8
 2584 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2585 0096 024B     		ldr	r3, .L127
 2586 0098 1A70     		strb	r2, [r3]
 463:.\main.c      ****             Timer_2_Stop();
 2587              		.loc 1 463 0
 2588 009a FFF7FEFF 		bl	Timer_2_Stop
 2589              	.L121:
 464:.\main.c      ****         }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 55


 465:.\main.c      ****     }
 466:.\main.c      **** }
 2590              		.loc 1 466 0
 2591 009e 80BD     		pop	{r7, pc}
 2592              	.L128:
 2593              		.align	2
 2594              	.L127:
 2595 00a0 00000000 		.word	movement_state
 2596 00a4 00000000 		.word	start_turn_count
 2597 00a8 00000000 		.word	prev_movement_state
 2598              		.cfi_endproc
 2599              	.LFE88:
 2600              		.size	isr_turn_timer, .-isr_turn_timer
 2601              		.section	.text.Stop_on_line,"ax",%progbits
 2602              		.align	2
 2603              		.global	Stop_on_line
 2604              		.thumb
 2605              		.thumb_func
 2606              		.type	Stop_on_line, %function
 2607              	Stop_on_line:
 2608              	.LFB89:
 467:.\main.c      **** 
 468:.\main.c      **** 
 469:.\main.c      **** CY_ISR (Stop_on_line)
 470:.\main.c      **** {
 2609              		.loc 1 470 0
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 0
 2612              		@ frame_needed = 1, uses_anonymous_args = 0
 2613              		@ link register save eliminated.
 2614 0000 80B4     		push	{r7}
 2615              		.cfi_def_cfa_offset 4
 2616              		.cfi_offset 7, -4
 2617 0002 00AF     		add	r7, sp, #0
 2618              		.cfi_def_cfa_register 7
 471:.\main.c      ****     movement_state = STOPPED;
 2619              		.loc 1 471 0
 2620 0004 054B     		ldr	r3, .L131
 2621 0006 0322     		movs	r2, #3
 2622 0008 1A70     		strb	r2, [r3]
 472:.\main.c      ****     if(movement_state != DRIVE) return;
 2623              		.loc 1 472 0
 2624 000a 044B     		ldr	r3, .L131
 2625 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2626 000e 002B     		cmp	r3, #0
 2627 0010 00D0     		beq	.L129
 2628 0012 00BF     		nop
 2629              	.L129:
 473:.\main.c      ****     //initTurnLeft();
 474:.\main.c      **** }
 2630              		.loc 1 474 0
 2631 0014 BD46     		mov	sp, r7
 2632              		.cfi_def_cfa_register 13
 2633              		@ sp needed
 2634 0016 5DF8047B 		ldr	r7, [sp], #4
 2635              		.cfi_restore 7
 2636              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 56


 2637 001a 7047     		bx	lr
 2638              	.L132:
 2639              		.align	2
 2640              	.L131:
 2641 001c 00000000 		.word	movement_state
 2642              		.cfi_endproc
 2643              	.LFE89:
 2644              		.size	Stop_on_line, .-Stop_on_line
 2645              		.section	.rodata
 2646 0033 00       		.align	2
 2647              	.LC4:
 2648 0034 53746172 		.ascii	"Starting robot!\015\012\000"
 2648      74696E67 
 2648      20726F62 
 2648      6F74210D 
 2648      0A00
 2649              		.section	.text.button,"ax",%progbits
 2650              		.align	2
 2651              		.global	button
 2652              		.thumb
 2653              		.thumb_func
 2654              		.type	button, %function
 2655              	button:
 2656              	.LFB90:
 475:.\main.c      **** 
 476:.\main.c      **** CY_ISR (button)
 477:.\main.c      **** {
 2657              		.loc 1 477 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 1, uses_anonymous_args = 0
 2661 0000 80B5     		push	{r7, lr}
 2662              		.cfi_def_cfa_offset 8
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 00AF     		add	r7, sp, #0
 2666              		.cfi_def_cfa_register 7
 478:.\main.c      ****     if(BT_ENABLED)
 2667              		.loc 1 478 0
 2668 0004 054B     		ldr	r3, .L135
 2669 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2670 0008 002B     		cmp	r3, #0
 2671 000a 02D0     		beq	.L134
 479:.\main.c      ****     {
 480:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2672              		.loc 1 480 0
 2673 000c 0448     		ldr	r0, .L135+4
 2674 000e FFF7FEFF 		bl	UART_PutString
 2675              	.L134:
 481:.\main.c      ****     }
 482:.\main.c      ****     movement_state = DRIVE;
 2676              		.loc 1 482 0
 2677 0012 044B     		ldr	r3, .L135+8
 2678 0014 0022     		movs	r2, #0
 2679 0016 1A70     		strb	r2, [r3]
 483:.\main.c      **** }
 2680              		.loc 1 483 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 57


 2681 0018 80BD     		pop	{r7, pc}
 2682              	.L136:
 2683 001a 00BF     		.align	2
 2684              	.L135:
 2685 001c 00000000 		.word	BT_ENABLED
 2686 0020 34000000 		.word	.LC4
 2687 0024 00000000 		.word	movement_state
 2688              		.cfi_endproc
 2689              	.LFE90:
 2690              		.size	button, .-button
 2691              		.section	.text.isr_adcTimer,"ax",%progbits
 2692              		.align	2
 2693              		.global	isr_adcTimer
 2694              		.thumb
 2695              		.thumb_func
 2696              		.type	isr_adcTimer, %function
 2697              	isr_adcTimer:
 2698              	.LFB91:
 484:.\main.c      **** 
 485:.\main.c      **** CY_ISR(isr_adcTimer)
 486:.\main.c      **** {
 2699              		.loc 1 486 0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 1, uses_anonymous_args = 0
 2703 0000 80B5     		push	{r7, lr}
 2704              		.cfi_def_cfa_offset 8
 2705              		.cfi_offset 7, -8
 2706              		.cfi_offset 14, -4
 2707 0002 00AF     		add	r7, sp, #0
 2708              		.cfi_def_cfa_register 7
 487:.\main.c      ****     ADC_StartConvert();
 2709              		.loc 1 487 0
 2710 0004 FFF7FEFF 		bl	ADC_StartConvert
 488:.\main.c      **** }
 2711              		.loc 1 488 0
 2712 0008 80BD     		pop	{r7, pc}
 2713              		.cfi_endproc
 2714              	.LFE91:
 2715              		.size	isr_adcTimer, .-isr_adcTimer
 2716 000a 00BF     		.section	.rodata
 2717 0046 0000     		.align	2
 2718              	.LC5:
 2719 0048 44656164 		.ascii	"Deadzone left\015\012\000"
 2719      7A6F6E65 
 2719      206C6566 
 2719      740D0A00 
 2720              		.section	.text.isr_deadzone,"ax",%progbits
 2721              		.align	2
 2722              		.global	isr_deadzone
 2723              		.thumb
 2724              		.thumb_func
 2725              		.type	isr_deadzone, %function
 2726              	isr_deadzone:
 2727              	.LFB92:
 489:.\main.c      **** 
 490:.\main.c      **** CY_ISR(isr_deadzone)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 58


 491:.\main.c      **** {
 2728              		.loc 1 491 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 00AF     		add	r7, sp, #0
 2737              		.cfi_def_cfa_register 7
 492:.\main.c      ****     sensorsDisabled = 0;
 2738              		.loc 1 492 0
 2739 0004 054B     		ldr	r3, .L139
 2740 0006 0022     		movs	r2, #0
 2741 0008 1A70     		strb	r2, [r3]
 493:.\main.c      ****     deadzone = 0;
 2742              		.loc 1 493 0
 2743 000a 054B     		ldr	r3, .L139+4
 2744 000c 0022     		movs	r2, #0
 2745 000e 1A70     		strb	r2, [r3]
 494:.\main.c      ****     Timer_Deadzone_Stop();
 2746              		.loc 1 494 0
 2747 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 495:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 2748              		.loc 1 495 0
 2749 0014 0348     		ldr	r0, .L139+8
 2750 0016 FFF7FEFF 		bl	UART_PutString
 496:.\main.c      **** }
 2751              		.loc 1 496 0
 2752 001a 80BD     		pop	{r7, pc}
 2753              	.L140:
 2754              		.align	2
 2755              	.L139:
 2756 001c 00000000 		.word	sensorsDisabled
 2757 0020 00000000 		.word	deadzone
 2758 0024 48000000 		.word	.LC5
 2759              		.cfi_endproc
 2760              	.LFE92:
 2761              		.size	isr_deadzone, .-isr_deadzone
 2762              		.section	.text.changeToRF,"ax",%progbits
 2763              		.align	2
 2764              		.global	changeToRF
 2765              		.thumb
 2766              		.thumb_func
 2767              		.type	changeToRF, %function
 2768              	changeToRF:
 2769              	.LFB93:
 497:.\main.c      **** 
 498:.\main.c      **** 
 499:.\main.c      **** 
 500:.\main.c      **** void changeToRF()
 501:.\main.c      **** {
 2770              		.loc 1 501 0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 59


 2774 0000 80B5     		push	{r7, lr}
 2775              		.cfi_def_cfa_offset 8
 2776              		.cfi_offset 7, -8
 2777              		.cfi_offset 14, -4
 2778 0002 00AF     		add	r7, sp, #0
 2779              		.cfi_def_cfa_register 7
 502:.\main.c      ****         //disable BT
 503:.\main.c      ****         BT_ENABLED = 0;
 2780              		.loc 1 503 0
 2781 0004 0B4B     		ldr	r3, .L142
 2782 0006 0022     		movs	r2, #0
 2783 0008 1A70     		strb	r2, [r3]
 504:.\main.c      ****         isrRF_RX_Stop();
 2784              		.loc 1 504 0
 2785 000a FFF7FEFF 		bl	isrRF_RX_Stop
 505:.\main.c      ****         UART_Stop();
 2786              		.loc 1 505 0
 2787 000e FFF7FEFF 		bl	UART_Stop
 506:.\main.c      ****         
 507:.\main.c      ****         //enable RF
 508:.\main.c      ****         BIN_ENABLED = 1;
 2788              		.loc 1 508 0
 2789 0012 094B     		ldr	r3, .L142+4
 2790 0014 0122     		movs	r2, #1
 2791 0016 1A70     		strb	r2, [r3]
 509:.\main.c      ****         UART_clk_SetDividerValue(130);
 2792              		.loc 1 509 0
 2793 0018 8120     		movs	r0, #129
 2794 001a 0121     		movs	r1, #1
 2795 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 510:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 2796              		.loc 1 510 0
 2797 0020 0648     		ldr	r0, .L142+8
 2798 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 511:.\main.c      ****         UART_Start();
 2799              		.loc 1 511 0
 2800 0026 FFF7FEFF 		bl	UART_Start
 512:.\main.c      ****         RF_BT_SELECT_Write(0);
 2801              		.loc 1 512 0
 2802 002a 0020     		movs	r0, #0
 2803 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 513:.\main.c      **** }
 2804              		.loc 1 513 0
 2805 0030 80BD     		pop	{r7, pc}
 2806              	.L143:
 2807 0032 00BF     		.align	2
 2808              	.L142:
 2809 0034 00000000 		.word	BT_ENABLED
 2810 0038 00000000 		.word	BIN_ENABLED
 2811 003c 00000000 		.word	rxInt
 2812              		.cfi_endproc
 2813              	.LFE93:
 2814              		.size	changeToRF, .-changeToRF
 2815              		.section	.text.changeToBT,"ax",%progbits
 2816              		.align	2
 2817              		.global	changeToBT
 2818              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 60


 2819              		.thumb_func
 2820              		.type	changeToBT, %function
 2821              	changeToBT:
 2822              	.LFB94:
 514:.\main.c      **** 
 515:.\main.c      **** void changeToBT()
 516:.\main.c      **** {
 2823              		.loc 1 516 0
 2824              		.cfi_startproc
 2825              		@ args = 0, pretend = 0, frame = 0
 2826              		@ frame_needed = 1, uses_anonymous_args = 0
 2827 0000 80B5     		push	{r7, lr}
 2828              		.cfi_def_cfa_offset 8
 2829              		.cfi_offset 7, -8
 2830              		.cfi_offset 14, -4
 2831 0002 00AF     		add	r7, sp, #0
 2832              		.cfi_def_cfa_register 7
 517:.\main.c      ****         //disable RF
 518:.\main.c      ****         BIN_ENABLED = 0;
 2833              		.loc 1 518 0
 2834 0004 0B4B     		ldr	r3, .L145
 2835 0006 0022     		movs	r2, #0
 2836 0008 1A70     		strb	r2, [r3]
 519:.\main.c      ****         isrRF_RX_Stop();
 2837              		.loc 1 519 0
 2838 000a FFF7FEFF 		bl	isrRF_RX_Stop
 520:.\main.c      ****         UART_Stop();
 2839              		.loc 1 520 0
 2840 000e FFF7FEFF 		bl	UART_Stop
 521:.\main.c      ****         
 522:.\main.c      ****         //enable BT
 523:.\main.c      ****         BT_ENABLED = 1;
 2841              		.loc 1 523 0
 2842 0012 094B     		ldr	r3, .L145+4
 2843 0014 0122     		movs	r2, #1
 2844 0016 1A70     		strb	r2, [r3]
 524:.\main.c      ****         UART_clk_SetDividerValue(781);
 2845              		.loc 1 524 0
 2846 0018 4FF44370 		mov	r0, #780
 2847 001c 0121     		movs	r1, #1
 2848 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 525:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2849              		.loc 1 525 0
 2850 0022 0648     		ldr	r0, .L145+8
 2851 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 526:.\main.c      ****         UART_Start();
 2852              		.loc 1 526 0
 2853 0028 FFF7FEFF 		bl	UART_Start
 527:.\main.c      ****         RF_BT_SELECT_Write(1);
 2854              		.loc 1 527 0
 2855 002c 0120     		movs	r0, #1
 2856 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 528:.\main.c      **** }
 2857              		.loc 1 528 0
 2858 0032 80BD     		pop	{r7, pc}
 2859              	.L146:
 2860              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 61


 2861              	.L145:
 2862 0034 00000000 		.word	BIN_ENABLED
 2863 0038 00000000 		.word	BT_ENABLED
 2864 003c 00000000 		.word	BT_rxInt
 2865              		.cfi_endproc
 2866              	.LFE94:
 2867              		.size	changeToBT, .-changeToBT
 2868              		.global	__aeabi_dmul
 2869              		.section	.text.Quad_Dec_response,"ax",%progbits
 2870              		.align	2
 2871              		.global	Quad_Dec_response
 2872              		.thumb
 2873              		.thumb_func
 2874              		.type	Quad_Dec_response, %function
 2875              	Quad_Dec_response:
 2876              	.LFB95:
 529:.\main.c      **** 
 530:.\main.c      **** 
 531:.\main.c      **** void Quad_Dec_response()
 532:.\main.c      **** {
 2877              		.loc 1 532 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 32
 2880              		@ frame_needed = 1, uses_anonymous_args = 0
 2881 0000 B0B5     		push	{r4, r5, r7, lr}
 2882              		.cfi_def_cfa_offset 16
 2883              		.cfi_offset 4, -16
 2884              		.cfi_offset 5, -12
 2885              		.cfi_offset 7, -8
 2886              		.cfi_offset 14, -4
 2887 0002 88B0     		sub	sp, sp, #32
 2888              		.cfi_def_cfa_offset 48
 2889 0004 00AF     		add	r7, sp, #0
 2890              		.cfi_def_cfa_register 7
 533:.\main.c      ****     //Check if the flag has been set
 534:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2891              		.loc 1 534 0
 2892 0006 814B     		ldr	r3, .L155
 2893 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2894 000a 002B     		cmp	r3, #0
 2895 000c 00D1     		bne	.L148
 2896 000e FAE0     		b	.L147
 2897              	.L148:
 535:.\main.c      ****     flag_calc_wheelspeed = 0;
 2898              		.loc 1 535 0
 2899 0010 7E4B     		ldr	r3, .L155
 2900 0012 0022     		movs	r2, #0
 2901 0014 1A70     		strb	r2, [r3]
 536:.\main.c      ****     
 537:.\main.c      ****     //char wheel_1_str [64];
 538:.\main.c      ****     //char wheel_2_str [64];
 539:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 540:.\main.c      ****     //usbPutString(wheel_1_str);
 541:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 542:.\main.c      ****     
 543:.\main.c      ****     //usbPutString(wheel_2_str);
 544:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 62


 545:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2902              		.loc 1 545 0
 2903 0016 7E4B     		ldr	r3, .L155+4
 2904 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2905 001a FB81     		strh	r3, [r7, #14]	@ movhi
 546:.\main.c      ****     int16 rightSpeed = quad_diff2;
 2906              		.loc 1 546 0
 2907 001c 7D4B     		ldr	r3, .L155+8
 2908 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2909 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 547:.\main.c      ****     double scalingLeft = 1;
 2910              		.loc 1 547 0
 2911 0022 4FF00002 		mov	r2, #0
 2912 0026 7C4B     		ldr	r3, .L155+12
 2913 0028 C7E90623 		strd	r2, [r7, #24]
 548:.\main.c      ****     double scalingRight = 1;
 2914              		.loc 1 548 0
 2915 002c 4FF00002 		mov	r2, #0
 2916 0030 794B     		ldr	r3, .L155+12
 2917 0032 C7E90423 		strd	r2, [r7, #16]
 549:.\main.c      ****     
 550:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 551:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2918              		.loc 1 551 0
 2919 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2920 003a 002B     		cmp	r3, #0
 2921 003c 0DD1     		bne	.L150
 2922              		.loc 1 551 0 is_stmt 0 discriminator 1
 2923 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2924 0042 002B     		cmp	r3, #0
 2925 0044 09D1     		bne	.L150
 552:.\main.c      ****        //leftSpeed = 3;
 553:.\main.c      ****         scalingLeft = 1;
 2926              		.loc 1 553 0 is_stmt 1
 2927 0046 4FF00002 		mov	r2, #0
 2928 004a 734B     		ldr	r3, .L155+12
 2929 004c C7E90623 		strd	r2, [r7, #24]
 554:.\main.c      ****         scalingRight = 1;
 2930              		.loc 1 554 0
 2931 0050 4FF00002 		mov	r2, #0
 2932 0054 704B     		ldr	r3, .L155+12
 2933 0056 C7E90423 		strd	r2, [r7, #16]
 2934              	.L150:
 555:.\main.c      ****     }
 556:.\main.c      **** 
 557:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2935              		.loc 1 557 0
 2936 005a 704B     		ldr	r3, .L155+16
 2937 005c 1B88     		ldrh	r3, [r3]
 2938 005e 1AB2     		sxth	r2, r3
 2939 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2940 0064 002B     		cmp	r3, #0
 2941 0066 B8BF     		it	lt
 2942 0068 5B42     		rsblt	r3, r3, #0
 2943 006a D31A     		subs	r3, r2, r3
 2944 006c BB60     		str	r3, [r7, #8]
 558:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 63


 2945              		.loc 1 558 0
 2946 006e BB68     		ldr	r3, [r7, #8]
 2947 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2948 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2949 0078 BB68     		ldr	r3, [r7, #8]
 2950 007a 92FBF3F3 		sdiv	r3, r2, r3
 2951 007e 1846     		mov	r0, r3
 2952 0080 FFF7FEFF 		bl	__aeabi_i2d
 2953 0084 0446     		mov	r4, r0
 2954 0086 0D46     		mov	r5, r1
 2955 0088 BB68     		ldr	r3, [r7, #8]
 2956 008a 002B     		cmp	r3, #0
 2957 008c B8BF     		it	lt
 2958 008e 5B42     		rsblt	r3, r3, #0
 2959 0090 1846     		mov	r0, r3
 2960 0092 FFF7FEFF 		bl	__aeabi_i2d
 2961 0096 0246     		mov	r2, r0
 2962 0098 0B46     		mov	r3, r1
 2963 009a 1046     		mov	r0, r2
 2964 009c 1946     		mov	r1, r3
 2965 009e FFF7FEFF 		bl	sqrt
 2966 00a2 0246     		mov	r2, r0
 2967 00a4 0B46     		mov	r3, r1
 2968 00a6 2046     		mov	r0, r4
 2969 00a8 2946     		mov	r1, r5
 2970 00aa FFF7FEFF 		bl	__aeabi_dmul
 2971 00ae 0246     		mov	r2, r0
 2972 00b0 0B46     		mov	r3, r1
 2973 00b2 1046     		mov	r0, r2
 2974 00b4 1946     		mov	r1, r3
 2975 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2976 00ba 0346     		mov	r3, r0
 2977 00bc 7B60     		str	r3, [r7, #4]
 559:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2978              		.loc 1 559 0
 2979 00be 584B     		ldr	r3, .L155+20
 2980 00c0 1B88     		ldrh	r3, [r3]
 2981 00c2 1BB2     		sxth	r3, r3
 2982 00c4 1846     		mov	r0, r3
 2983 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2984 00ca 0446     		mov	r4, r0
 2985 00cc 0D46     		mov	r5, r1
 2986 00ce 7868     		ldr	r0, [r7, #4]
 2987 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2988 00d4 0246     		mov	r2, r0
 2989 00d6 0B46     		mov	r3, r1
 2990 00d8 1046     		mov	r0, r2
 2991 00da 1946     		mov	r1, r3
 2992 00dc D7E90623 		ldrd	r2, [r7, #24]
 2993 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2994 00e4 0246     		mov	r2, r0
 2995 00e6 0B46     		mov	r3, r1
 2996 00e8 2046     		mov	r0, r4
 2997 00ea 2946     		mov	r1, r5
 2998 00ec FFF7FEFF 		bl	__aeabi_dadd
 2999 00f0 0246     		mov	r2, r0
 3000 00f2 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 64


 3001 00f4 1046     		mov	r0, r2
 3002 00f6 1946     		mov	r1, r3
 3003 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 3004 00fc 0346     		mov	r3, r0
 3005 00fe 9AB2     		uxth	r2, r3
 3006 0100 474B     		ldr	r3, .L155+20
 3007 0102 1A80     		strh	r2, [r3]	@ movhi
 560:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 3008              		.loc 1 560 0
 3009 0104 474B     		ldr	r3, .L155+24
 3010 0106 1B88     		ldrh	r3, [r3]
 3011 0108 1AB2     		sxth	r2, r3
 3012 010a B7F90C30 		ldrsh	r3, [r7, #12]
 3013 010e 002B     		cmp	r3, #0
 3014 0110 B8BF     		it	lt
 3015 0112 5B42     		rsblt	r3, r3, #0
 3016 0114 D31A     		subs	r3, r2, r3
 3017 0116 BB60     		str	r3, [r7, #8]
 561:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 3018              		.loc 1 561 0
 3019 0118 BB68     		ldr	r3, [r7, #8]
 3020 011a 83EAE372 		eor	r2, r3, r3, asr #31
 3021 011e A2EBE372 		sub	r2, r2, r3, asr #31
 3022 0122 BB68     		ldr	r3, [r7, #8]
 3023 0124 92FBF3F3 		sdiv	r3, r2, r3
 3024 0128 1846     		mov	r0, r3
 3025 012a FFF7FEFF 		bl	__aeabi_i2d
 3026 012e 0446     		mov	r4, r0
 3027 0130 0D46     		mov	r5, r1
 3028 0132 BB68     		ldr	r3, [r7, #8]
 3029 0134 002B     		cmp	r3, #0
 3030 0136 B8BF     		it	lt
 3031 0138 5B42     		rsblt	r3, r3, #0
 3032 013a 1846     		mov	r0, r3
 3033 013c FFF7FEFF 		bl	__aeabi_i2d
 3034 0140 0246     		mov	r2, r0
 3035 0142 0B46     		mov	r3, r1
 3036 0144 1046     		mov	r0, r2
 3037 0146 1946     		mov	r1, r3
 3038 0148 FFF7FEFF 		bl	sqrt
 3039 014c 0246     		mov	r2, r0
 3040 014e 0B46     		mov	r3, r1
 3041 0150 2046     		mov	r0, r4
 3042 0152 2946     		mov	r1, r5
 3043 0154 FFF7FEFF 		bl	__aeabi_dmul
 3044 0158 0246     		mov	r2, r0
 3045 015a 0B46     		mov	r3, r1
 3046 015c 1046     		mov	r0, r2
 3047 015e 1946     		mov	r1, r3
 3048 0160 FFF7FEFF 		bl	__aeabi_d2iz
 3049 0164 0346     		mov	r3, r0
 3050 0166 7B60     		str	r3, [r7, #4]
 562:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 3051              		.loc 1 562 0
 3052 0168 2F4B     		ldr	r3, .L155+28
 3053 016a 1B88     		ldrh	r3, [r3]
 3054 016c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 65


 3055 016e 1846     		mov	r0, r3
 3056 0170 FFF7FEFF 		bl	__aeabi_i2d
 3057 0174 0446     		mov	r4, r0
 3058 0176 0D46     		mov	r5, r1
 3059 0178 7868     		ldr	r0, [r7, #4]
 3060 017a FFF7FEFF 		bl	__aeabi_i2d
 3061 017e 0246     		mov	r2, r0
 3062 0180 0B46     		mov	r3, r1
 3063 0182 1046     		mov	r0, r2
 3064 0184 1946     		mov	r1, r3
 3065 0186 D7E90423 		ldrd	r2, [r7, #16]
 3066 018a FFF7FEFF 		bl	__aeabi_dmul
 3067 018e 0246     		mov	r2, r0
 3068 0190 0B46     		mov	r3, r1
 3069 0192 2046     		mov	r0, r4
 3070 0194 2946     		mov	r1, r5
 3071 0196 FFF7FEFF 		bl	__aeabi_dadd
 3072 019a 0246     		mov	r2, r0
 3073 019c 0B46     		mov	r3, r1
 3074 019e 1046     		mov	r0, r2
 3075 01a0 1946     		mov	r1, r3
 3076 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 3077 01a6 0346     		mov	r3, r0
 3078 01a8 9AB2     		uxth	r2, r3
 3079 01aa 1F4B     		ldr	r3, .L155+28
 3080 01ac 1A80     		strh	r2, [r3]	@ movhi
 563:.\main.c      ****     
 564:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 3081              		.loc 1 564 0
 3082 01ae 1E4B     		ldr	r3, .L155+28
 3083 01b0 1B88     		ldrh	r3, [r3]
 3084 01b2 1BB2     		sxth	r3, r3
 3085 01b4 002B     		cmp	r3, #0
 3086 01b6 02DA     		bge	.L151
 3087              		.loc 1 564 0 is_stmt 0 discriminator 1
 3088 01b8 1B4B     		ldr	r3, .L155+28
 3089 01ba 0022     		movs	r2, #0
 3090 01bc 1A80     		strh	r2, [r3]	@ movhi
 3091              	.L151:
 565:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 3092              		.loc 1 565 0 is_stmt 1
 3093 01be 184B     		ldr	r3, .L155+20
 3094 01c0 1B88     		ldrh	r3, [r3]
 3095 01c2 1BB2     		sxth	r3, r3
 3096 01c4 002B     		cmp	r3, #0
 3097 01c6 02DA     		bge	.L152
 3098              		.loc 1 565 0 is_stmt 0 discriminator 1
 3099 01c8 154B     		ldr	r3, .L155+20
 3100 01ca 0022     		movs	r2, #0
 3101 01cc 1A80     		strh	r2, [r3]	@ movhi
 3102              	.L152:
 566:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 3103              		.loc 1 566 0 is_stmt 1
 3104 01ce 164B     		ldr	r3, .L155+28
 3105 01d0 1B88     		ldrh	r3, [r3]
 3106 01d2 1BB2     		sxth	r3, r3
 3107 01d4 642B     		cmp	r3, #100
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 66


 3108 01d6 02DD     		ble	.L153
 3109              		.loc 1 566 0 is_stmt 0 discriminator 1
 3110 01d8 134B     		ldr	r3, .L155+28
 3111 01da 6422     		movs	r2, #100
 3112 01dc 1A80     		strh	r2, [r3]	@ movhi
 3113              	.L153:
 567:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 3114              		.loc 1 567 0 is_stmt 1
 3115 01de 104B     		ldr	r3, .L155+20
 3116 01e0 1B88     		ldrh	r3, [r3]
 3117 01e2 1BB2     		sxth	r3, r3
 3118 01e4 642B     		cmp	r3, #100
 3119 01e6 02DD     		ble	.L154
 3120              		.loc 1 567 0 is_stmt 0 discriminator 1
 3121 01e8 0D4B     		ldr	r3, .L155+20
 3122 01ea 6422     		movs	r2, #100
 3123 01ec 1A80     		strh	r2, [r3]	@ movhi
 3124              	.L154:
 568:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 3125              		.loc 1 568 0 is_stmt 1
 3126 01ee 0C4B     		ldr	r3, .L155+20
 3127 01f0 1B88     		ldrh	r3, [r3]
 3128 01f2 DBB2     		uxtb	r3, r3
 3129 01f4 1846     		mov	r0, r3
 3130 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 569:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 3131              		.loc 1 569 0
 3132 01fa 0B4B     		ldr	r3, .L155+28
 3133 01fc 1B88     		ldrh	r3, [r3]
 3134 01fe DBB2     		uxtb	r3, r3
 3135 0200 1846     		mov	r0, r3
 3136 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 3137              	.L147:
 570:.\main.c      **** }
 3138              		.loc 1 570 0
 3139 0206 2037     		adds	r7, r7, #32
 3140              		.cfi_def_cfa_offset 16
 3141 0208 BD46     		mov	sp, r7
 3142              		.cfi_def_cfa_register 13
 3143              		@ sp needed
 3144 020a B0BD     		pop	{r4, r5, r7, pc}
 3145              	.L156:
 3146              		.align	2
 3147              	.L155:
 3148 020c 00000000 		.word	flag_calc_wheelspeed
 3149 0210 00000000 		.word	quad_diff1
 3150 0214 00000000 		.word	quad_diff2
 3151 0218 0000F03F 		.word	1072693248
 3152 021c 00000000 		.word	leftSpeedLimit
 3153 0220 00000000 		.word	left_duty_cycle
 3154 0224 00000000 		.word	rightSpeedLimit
 3155 0228 00000000 		.word	right_duty_cycle
 3156              		.cfi_endproc
 3157              	.LFE95:
 3158              		.size	Quad_Dec_response, .-Quad_Dec_response
 3159              		.section	.text.trackLine,"ax",%progbits
 3160              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 67


 3161              		.global	trackLine
 3162              		.thumb
 3163              		.thumb_func
 3164              		.type	trackLine, %function
 3165              	trackLine:
 3166              	.LFB96:
 571:.\main.c      **** 
 572:.\main.c      **** void trackLine()
 573:.\main.c      **** {
 3167              		.loc 1 573 0
 3168              		.cfi_startproc
 3169              		@ args = 0, pretend = 0, frame = 8
 3170              		@ frame_needed = 1, uses_anonymous_args = 0
 3171 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3172              		.cfi_def_cfa_offset 24
 3173              		.cfi_offset 4, -24
 3174              		.cfi_offset 5, -20
 3175              		.cfi_offset 7, -16
 3176              		.cfi_offset 8, -12
 3177              		.cfi_offset 9, -8
 3178              		.cfi_offset 14, -4
 3179 0004 82B0     		sub	sp, sp, #8
 3180              		.cfi_def_cfa_offset 32
 3181 0006 00AF     		add	r7, sp, #0
 3182              		.cfi_def_cfa_register 7
 574:.\main.c      ****     //read the value of the three central-front sensors
 575:.\main.c      ****     
 576:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3183              		.loc 1 576 0
 3184 0008 FFF7FEFF 		bl	NLSens_out_Read
 3185 000c 0346     		mov	r3, r0
 3186 000e FB71     		strb	r3, [r7, #7]
 577:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3187              		.loc 1 577 0
 3188 0010 FFF7FEFF 		bl	NRSens_out_Read
 3189 0014 0346     		mov	r3, r0
 3190 0016 BB71     		strb	r3, [r7, #6]
 578:.\main.c      ****     uint8 mid = MSens_out_Read();
 3191              		.loc 1 578 0
 3192 0018 FFF7FEFF 		bl	MSens_out_Read
 3193 001c 0346     		mov	r3, r0
 3194 001e 7B71     		strb	r3, [r7, #5]
 579:.\main.c      ****     //if only the left one, hard left
 580:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 3195              		.loc 1 580 0
 3196 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3197 0022 002B     		cmp	r3, #0
 3198 0024 27D0     		beq	.L158
 3199              		.loc 1 580 0 is_stmt 0 discriminator 1
 3200 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3201 0028 002B     		cmp	r3, #0
 3202 002a 24D1     		bne	.L158
 3203              		.loc 1 580 0 discriminator 2
 3204 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3205 002e 002B     		cmp	r3, #0
 3206 0030 21D1     		bne	.L158
 581:.\main.c      ****     {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 68


 582:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 3207              		.loc 1 582 0 is_stmt 1
 3208 0032 454B     		ldr	r3, .L163
 3209 0034 D3E90023 		ldrd	r2, [r3]
 3210 0038 1046     		mov	r0, r2
 3211 003a 1946     		mov	r1, r3
 3212 003c 4FF00002 		mov	r2, #0
 3213 0040 424B     		ldr	r3, .L163+4
 3214 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3215 0046 0246     		mov	r2, r0
 3216 0048 0B46     		mov	r3, r1
 3217 004a 1446     		mov	r4, r2
 3218 004c 1D46     		mov	r5, r3
 3219 004e 3E4B     		ldr	r3, .L163
 3220 0050 D3E90023 		ldrd	r2, [r3]
 3221 0054 9046     		mov	r8, r2
 3222 0056 83F00049 		eor	r9, r3, #-2147483648
 3223 005a 4046     		mov	r0, r8
 3224 005c 4946     		mov	r1, r9
 3225 005e 4FF00002 		mov	r2, #0
 3226 0062 3A4B     		ldr	r3, .L163+4
 3227 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3228 0068 0246     		mov	r2, r0
 3229 006a 0B46     		mov	r3, r1
 3230 006c 2046     		mov	r0, r4
 3231 006e 2946     		mov	r1, r5
 3232 0070 FFF7FEFF 		bl	setSpeed
 3233 0074 63E0     		b	.L157
 3234              	.L158:
 583:.\main.c      ****     }
 584:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3235              		.loc 1 584 0
 3236 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3237 0078 002B     		cmp	r3, #0
 3238 007a 11D0     		beq	.L160
 3239              		.loc 1 584 0 is_stmt 0 discriminator 1
 3240 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3241 007e 002B     		cmp	r3, #0
 3242 0080 0ED0     		beq	.L160
 3243              		.loc 1 584 0 discriminator 2
 3244 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3245 0084 002B     		cmp	r3, #0
 3246 0086 0BD1     		bne	.L160
 585:.\main.c      ****     {
 586:.\main.c      ****         setSpeed(speed, 0);
 3247              		.loc 1 586 0 is_stmt 1
 3248 0088 2F4B     		ldr	r3, .L163
 3249 008a D3E90023 		ldrd	r2, [r3]
 3250 008e 1046     		mov	r0, r2
 3251 0090 1946     		mov	r1, r3
 3252 0092 4FF00002 		mov	r2, #0
 3253 0096 4FF00003 		mov	r3, #0
 3254 009a FFF7FEFF 		bl	setSpeed
 3255 009e 4EE0     		b	.L157
 3256              	.L160:
 587:.\main.c      ****     }
 588:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 69


 3257              		.loc 1 588 0
 3258 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3259 00a2 002B     		cmp	r3, #0
 3260 00a4 0FD0     		beq	.L161
 3261              		.loc 1 588 0 is_stmt 0 discriminator 1
 3262 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3263 00a8 002B     		cmp	r3, #0
 3264 00aa 0CD0     		beq	.L161
 3265              		.loc 1 588 0 discriminator 2
 3266 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3267 00ae 002B     		cmp	r3, #0
 3268 00b0 09D1     		bne	.L161
 589:.\main.c      ****     {
 590:.\main.c      ****         setSpeed(0, speed);
 3269              		.loc 1 590 0 is_stmt 1
 3270 00b2 254B     		ldr	r3, .L163
 3271 00b4 D3E90023 		ldrd	r2, [r3]
 3272 00b8 4FF00000 		mov	r0, #0
 3273 00bc 4FF00001 		mov	r1, #0
 3274 00c0 FFF7FEFF 		bl	setSpeed
 3275 00c4 3BE0     		b	.L157
 3276              	.L161:
 591:.\main.c      ****     }
 592:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3277              		.loc 1 592 0
 3278 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3279 00c8 002B     		cmp	r3, #0
 3280 00ca 27D0     		beq	.L162
 3281              		.loc 1 592 0 is_stmt 0 discriminator 1
 3282 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3283 00ce 002B     		cmp	r3, #0
 3284 00d0 24D1     		bne	.L162
 3285              		.loc 1 592 0 discriminator 2
 3286 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3287 00d4 002B     		cmp	r3, #0
 3288 00d6 21D1     		bne	.L162
 593:.\main.c      ****     {
 594:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 3289              		.loc 1 594 0 is_stmt 1
 3290 00d8 1B4B     		ldr	r3, .L163
 3291 00da D3E90023 		ldrd	r2, [r3]
 3292 00de 1446     		mov	r4, r2
 3293 00e0 83F00045 		eor	r5, r3, #-2147483648
 3294 00e4 2046     		mov	r0, r4
 3295 00e6 2946     		mov	r1, r5
 3296 00e8 4FF00002 		mov	r2, #0
 3297 00ec 174B     		ldr	r3, .L163+4
 3298 00ee FFF7FEFF 		bl	__aeabi_ddiv
 3299 00f2 0246     		mov	r2, r0
 3300 00f4 0B46     		mov	r3, r1
 3301 00f6 1446     		mov	r4, r2
 3302 00f8 1D46     		mov	r5, r3
 3303 00fa 134B     		ldr	r3, .L163
 3304 00fc D3E90023 		ldrd	r2, [r3]
 3305 0100 1046     		mov	r0, r2
 3306 0102 1946     		mov	r1, r3
 3307 0104 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 70


 3308 0108 104B     		ldr	r3, .L163+4
 3309 010a FFF7FEFF 		bl	__aeabi_ddiv
 3310 010e 0246     		mov	r2, r0
 3311 0110 0B46     		mov	r3, r1
 3312 0112 2046     		mov	r0, r4
 3313 0114 2946     		mov	r1, r5
 3314 0116 FFF7FEFF 		bl	setSpeed
 3315 011a 10E0     		b	.L157
 3316              	.L162:
 595:.\main.c      ****     }
 596:.\main.c      ****     else if (mid && !nr && !nl)
 3317              		.loc 1 596 0
 3318 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3319 011e 002B     		cmp	r3, #0
 3320 0120 0DD0     		beq	.L157
 3321              		.loc 1 596 0 is_stmt 0 discriminator 1
 3322 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3323 0124 002B     		cmp	r3, #0
 3324 0126 0AD1     		bne	.L157
 3325              		.loc 1 596 0 discriminator 2
 3326 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3327 012a 002B     		cmp	r3, #0
 3328 012c 07D1     		bne	.L157
 597:.\main.c      ****     {
 598:.\main.c      ****         setSpeed(speed,speed);
 3329              		.loc 1 598 0 is_stmt 1
 3330 012e 064B     		ldr	r3, .L163
 3331 0130 D3E90001 		ldrd	r0, [r3]
 3332 0134 044B     		ldr	r3, .L163
 3333 0136 D3E90023 		ldrd	r2, [r3]
 3334 013a FFF7FEFF 		bl	setSpeed
 3335              	.L157:
 599:.\main.c      ****     }
 600:.\main.c      ****    // else if (!mid && !nr && !nl)
 601:.\main.c      ****     //{
 602:.\main.c      ****         //setSpeed(0,0);
 603:.\main.c      ****     //}
 604:.\main.c      **** }
 3336              		.loc 1 604 0
 3337 013e 0837     		adds	r7, r7, #8
 3338              		.cfi_def_cfa_offset 24
 3339 0140 BD46     		mov	sp, r7
 3340              		.cfi_def_cfa_register 13
 3341              		@ sp needed
 3342 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3343              	.L164:
 3344 0146 00BF     		.align	2
 3345              	.L163:
 3346 0148 00000000 		.word	speed
 3347 014c 0000F83F 		.word	1073217536
 3348              		.cfi_endproc
 3349              	.LFE96:
 3350              		.size	trackLine, .-trackLine
 3351              		.global	leftTurnCount
 3352              		.bss
 3353              		.align	1
 3354              		.type	leftTurnCount, %object
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 71


 3355              		.size	leftTurnCount, 2
 3356              	leftTurnCount:
 3357 0cc0 0000     		.space	2
 3358              		.global	rightTurnCount
 3359              		.align	1
 3360              		.type	rightTurnCount, %object
 3361              		.size	rightTurnCount, 2
 3362              	rightTurnCount:
 3363 0cc2 0000     		.space	2
 3364              		.section	.text.trackLineZ,"ax",%progbits
 3365              		.align	2
 3366              		.global	trackLineZ
 3367              		.thumb
 3368              		.thumb_func
 3369              		.type	trackLineZ, %function
 3370              	trackLineZ:
 3371              	.LFB97:
 605:.\main.c      **** uint16 leftTurnCount = 0;
 606:.\main.c      **** uint16 rightTurnCount = 0;
 607:.\main.c      **** void trackLineZ()
 608:.\main.c      **** {
 3372              		.loc 1 608 0
 3373              		.cfi_startproc
 3374              		@ args = 0, pretend = 0, frame = 8
 3375              		@ frame_needed = 1, uses_anonymous_args = 0
 3376 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3377              		.cfi_def_cfa_offset 24
 3378              		.cfi_offset 4, -24
 3379              		.cfi_offset 5, -20
 3380              		.cfi_offset 7, -16
 3381              		.cfi_offset 8, -12
 3382              		.cfi_offset 9, -8
 3383              		.cfi_offset 14, -4
 3384 0004 82B0     		sub	sp, sp, #8
 3385              		.cfi_def_cfa_offset 32
 3386 0006 00AF     		add	r7, sp, #0
 3387              		.cfi_def_cfa_register 7
 609:.\main.c      ****     //read the value of the three central-front sensors
 610:.\main.c      ****     
 611:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3388              		.loc 1 611 0
 3389 0008 FFF7FEFF 		bl	NLSens_out_Read
 3390 000c 0346     		mov	r3, r0
 3391 000e FB71     		strb	r3, [r7, #7]
 612:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3392              		.loc 1 612 0
 3393 0010 FFF7FEFF 		bl	NRSens_out_Read
 3394 0014 0346     		mov	r3, r0
 3395 0016 BB71     		strb	r3, [r7, #6]
 613:.\main.c      ****     uint8 mid = MSens_out_Read();
 3396              		.loc 1 613 0
 3397 0018 FFF7FEFF 		bl	MSens_out_Read
 3398 001c 0346     		mov	r3, r0
 3399 001e 7B71     		strb	r3, [r7, #5]
 614:.\main.c      ****     
 615:.\main.c      ****         //if only the left one, hard left
 616:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 72


 3400              		.loc 1 616 0
 3401 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3402 0022 002B     		cmp	r3, #0
 3403 0024 27D0     		beq	.L166
 3404              		.loc 1 616 0 is_stmt 0 discriminator 1
 3405 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3406 0028 002B     		cmp	r3, #0
 3407 002a 24D1     		bne	.L166
 3408              		.loc 1 616 0 discriminator 2
 3409 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3410 002e 002B     		cmp	r3, #0
 3411 0030 21D1     		bne	.L166
 617:.\main.c      ****     {
 618:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 3412              		.loc 1 618 0 is_stmt 1
 3413 0032 334B     		ldr	r3, .L169+8
 3414 0034 D3E90023 		ldrd	r2, [r3]
 3415 0038 1046     		mov	r0, r2
 3416 003a 1946     		mov	r1, r3
 3417 003c 2EA3     		adr	r3, .L169
 3418 003e D3E90023 		ldrd	r2, [r3]
 3419 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3420 0046 0246     		mov	r2, r0
 3421 0048 0B46     		mov	r3, r1
 3422 004a 1446     		mov	r4, r2
 3423 004c 1D46     		mov	r5, r3
 3424 004e 2C4B     		ldr	r3, .L169+8
 3425 0050 D3E90023 		ldrd	r2, [r3]
 3426 0054 9046     		mov	r8, r2
 3427 0056 83F00049 		eor	r9, r3, #-2147483648
 3428 005a 4046     		mov	r0, r8
 3429 005c 4946     		mov	r1, r9
 3430 005e 26A3     		adr	r3, .L169
 3431 0060 D3E90023 		ldrd	r2, [r3]
 3432 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3433 0068 0246     		mov	r2, r0
 3434 006a 0B46     		mov	r3, r1
 3435 006c 2046     		mov	r0, r4
 3436 006e 2946     		mov	r1, r5
 3437 0070 FFF7FEFF 		bl	setSpeed
 3438 0074 3BE0     		b	.L165
 3439              	.L166:
 619:.\main.c      ****     }
 620:.\main.c      **** //    else if(nl && mid && !nr)   //if centre/middle, soft left
 621:.\main.c      **** //    {
 622:.\main.c      **** //        setSpeed(speed,speed / 1.5);
 623:.\main.c      **** //    }
 624:.\main.c      **** //    else if (nr && mid && !nl)//if centre/right, soft right
 625:.\main.c      **** //    {
 626:.\main.c      **** //        setSpeed(speed / 1.5,speed);
 627:.\main.c      **** //    }
 628:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3440              		.loc 1 628 0
 3441 0076 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3442 0078 002B     		cmp	r3, #0
 3443 007a 27D0     		beq	.L168
 3444              		.loc 1 628 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 73


 3445 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3446 007e 002B     		cmp	r3, #0
 3447 0080 24D1     		bne	.L168
 3448              		.loc 1 628 0 discriminator 2
 3449 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3450 0084 002B     		cmp	r3, #0
 3451 0086 21D1     		bne	.L168
 629:.\main.c      ****     {
 630:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 3452              		.loc 1 630 0 is_stmt 1
 3453 0088 1D4B     		ldr	r3, .L169+8
 3454 008a D3E90023 		ldrd	r2, [r3]
 3455 008e 1446     		mov	r4, r2
 3456 0090 83F00045 		eor	r5, r3, #-2147483648
 3457 0094 2046     		mov	r0, r4
 3458 0096 2946     		mov	r1, r5
 3459 0098 17A3     		adr	r3, .L169
 3460 009a D3E90023 		ldrd	r2, [r3]
 3461 009e FFF7FEFF 		bl	__aeabi_ddiv
 3462 00a2 0246     		mov	r2, r0
 3463 00a4 0B46     		mov	r3, r1
 3464 00a6 1446     		mov	r4, r2
 3465 00a8 1D46     		mov	r5, r3
 3466 00aa 154B     		ldr	r3, .L169+8
 3467 00ac D3E90023 		ldrd	r2, [r3]
 3468 00b0 1046     		mov	r0, r2
 3469 00b2 1946     		mov	r1, r3
 3470 00b4 10A3     		adr	r3, .L169
 3471 00b6 D3E90023 		ldrd	r2, [r3]
 3472 00ba FFF7FEFF 		bl	__aeabi_ddiv
 3473 00be 0246     		mov	r2, r0
 3474 00c0 0B46     		mov	r3, r1
 3475 00c2 2046     		mov	r0, r4
 3476 00c4 2946     		mov	r1, r5
 3477 00c6 FFF7FEFF 		bl	setSpeed
 3478 00ca 10E0     		b	.L165
 3479              	.L168:
 631:.\main.c      ****     }
 632:.\main.c      ****     else if (mid && !nr && !nl)
 3480              		.loc 1 632 0
 3481 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3482 00ce 002B     		cmp	r3, #0
 3483 00d0 0DD0     		beq	.L165
 3484              		.loc 1 632 0 is_stmt 0 discriminator 1
 3485 00d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3486 00d4 002B     		cmp	r3, #0
 3487 00d6 0AD1     		bne	.L165
 3488              		.loc 1 632 0 discriminator 2
 3489 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3490 00da 002B     		cmp	r3, #0
 3491 00dc 07D1     		bne	.L165
 633:.\main.c      ****     {
 634:.\main.c      ****         setSpeed(speed,speed);
 3492              		.loc 1 634 0 is_stmt 1
 3493 00de 084B     		ldr	r3, .L169+8
 3494 00e0 D3E90001 		ldrd	r0, [r3]
 3495 00e4 064B     		ldr	r3, .L169+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 74


 3496 00e6 D3E90023 		ldrd	r2, [r3]
 3497 00ea FFF7FEFF 		bl	setSpeed
 3498              	.L165:
 635:.\main.c      ****     }
 636:.\main.c      ****     //else setSpeed(speed, speed);
 637:.\main.c      ****   
 638:.\main.c      ****    // else if (!mid && !nr && !nl)
 639:.\main.c      ****     //{
 640:.\main.c      ****         //setSpeed(0,0);
 641:.\main.c      ****     //}
 642:.\main.c      ****     
 643:.\main.c      ****     
 644:.\main.c      **** //    //if only the left one, hard left
 645:.\main.c      **** //    if(nl && !nr && !mid)// && trackTurnCount > 0)
 646:.\main.c      **** //    {
 647:.\main.c      **** //         if(leftTurnCount < 500)
 648:.\main.c      **** //         {   
 649:.\main.c      **** //            setSpeed(speed / 1.5,-speed / 1.5);
 650:.\main.c      **** //            leftTurnCount++;
 651:.\main.c      **** //         }
 652:.\main.c      **** //        else setSpeed(speed, speed*0.7);
 653:.\main.c      **** //    }
 654:.\main.c      **** //    else if(nl && mid && !nr)   //if centre/middle, soft left
 655:.\main.c      **** //    {
 656:.\main.c      **** //         leftTurnCount = 0;
 657:.\main.c      **** //         rightTurnCount = 0;
 658:.\main.c      **** //        //setSpeed(speed,speed / 1.5);
 659:.\main.c      **** //        setSpeed(speed, speed*0.7);
 660:.\main.c      **** //    }
 661:.\main.c      **** //    else if (nr && mid && !nl)//if centre/right, soft right
 662:.\main.c      **** //    {
 663:.\main.c      **** //         leftTurnCount = 0;
 664:.\main.c      **** //         rightTurnCount = 0;
 665:.\main.c      **** //       // setSpeed(speed / 1.5,speed);
 666:.\main.c      **** //        setSpeed(speed*0.7,speed);
 667:.\main.c      **** //    }
 668:.\main.c      **** //   else if (nr && !mid && !nl)    //if only right, hard right
 669:.\main.c      **** //    {
 670:.\main.c      **** //        if(rightTurnCount < 500)
 671:.\main.c      **** //        {  
 672:.\main.c      **** //            setSpeed(-speed / 1.5,speed / 1.5);
 673:.\main.c      **** //            rightTurnCount++;
 674:.\main.c      **** //        }
 675:.\main.c      **** //        else setSpeed(speed*0.7,speed);
 676:.\main.c      **** //    }
 677:.\main.c      **** //    else if (mid && !nr && !nl)
 678:.\main.c      **** //    {
 679:.\main.c      **** //        leftTurnCount = 0;
 680:.\main.c      **** //        rightTurnCount = 0;
 681:.\main.c      **** //        setSpeed(speed,speed);
 682:.\main.c      **** //    }
 683:.\main.c      **** //    //else setSpeed(speed, speed);
 684:.\main.c      **** //  
 685:.\main.c      **** //   // else if (!mid && !nr && !nl)
 686:.\main.c      **** //    //{
 687:.\main.c      **** //        //setSpeed(0,0);
 688:.\main.c      **** //    //}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 75


 689:.\main.c      **** }
 3499              		.loc 1 689 0
 3500 00ee 0837     		adds	r7, r7, #8
 3501              		.cfi_def_cfa_offset 24
 3502 00f0 BD46     		mov	sp, r7
 3503              		.cfi_def_cfa_register 13
 3504              		@ sp needed
 3505 00f2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3506              	.L170:
 3507 00f6 00BF     		.align	3
 3508              	.L169:
 3509 00f8 9A999999 		.word	-1717986918
 3510 00fc 9999F93F 		.word	1073322393
 3511 0100 00000000 		.word	speed
 3512              		.cfi_endproc
 3513              	.LFE97:
 3514              		.size	trackLineZ, .-trackLineZ
 3515 0104 AFF30080 		.section	.text.trackLineU,"ax",%progbits
 3516              		.align	2
 3517              		.global	trackLineU
 3518              		.thumb
 3519              		.thumb_func
 3520              		.type	trackLineU, %function
 3521              	trackLineU:
 3522              	.LFB98:
 690:.\main.c      **** 
 691:.\main.c      **** 
 692:.\main.c      **** void trackLineU()
 693:.\main.c      **** {
 3523              		.loc 1 693 0
 3524              		.cfi_startproc
 3525              		@ args = 0, pretend = 0, frame = 0
 3526              		@ frame_needed = 1, uses_anonymous_args = 0
 3527              		@ link register save eliminated.
 3528 0000 80B4     		push	{r7}
 3529              		.cfi_def_cfa_offset 4
 3530              		.cfi_offset 7, -4
 3531 0002 00AF     		add	r7, sp, #0
 3532              		.cfi_def_cfa_register 7
 694:.\main.c      **** //    //read the value of the three central-front sensors
 695:.\main.c      **** //    
 696:.\main.c      **** //    uint8 nl = NLSens_out_Read();
 697:.\main.c      **** //    uint8 fl = FLSens_out_Read();
 698:.\main.c      **** //    uint8 nr = NRSens_out_Read();
 699:.\main.c      **** //    uint8 fr = FRSens_out_Read();
 700:.\main.c      **** //    uint8 mid = MSens_out_Read();
 701:.\main.c      **** //    if (fl && mid && fr) // T intersection
 702:.\main.c      **** //    {
 703:.\main.c      **** //        // not implemented
 704:.\main.c      **** //    }
 705:.\main.c      **** //    else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 706:.\main.c      **** //    {
 707:.\main.c      **** //        setSpeed(speed, speed);
 708:.\main.c      **** //    }
 709:.\main.c      **** //    else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 710:.\main.c      **** //    {
 711:.\main.c      **** //        setSpeed(speed, speed);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 76


 712:.\main.c      **** //    }
 713:.\main.c      **** //    else if(nl && !nr && !mid) //if only the left one, hard left
 714:.\main.c      **** //    {
 715:.\main.c      **** //         if(hardTurnCount < 50)
 716:.\main.c      **** //         {   
 717:.\main.c      **** //            setSpeed(speed / 1.5,-speed / 1.5);
 718:.\main.c      **** //            hardTurnCount++;
 719:.\main.c      **** //         }
 720:.\main.c      **** //        else setSpeed(speed, speed);
 721:.\main.c      **** //    }
 722:.\main.c      **** //    else if(nl && mid && !nr)   //if centre/middle, soft left
 723:.\main.c      **** //    {
 724:.\main.c      **** //        setSpeed(speed, 0);
 725:.\main.c      **** //        hardTurnCount = 0;
 726:.\main.c      **** //    }
 727:.\main.c      **** //    else if (nr && mid && !nl)//if centre/right, soft right
 728:.\main.c      **** //    {
 729:.\main.c      **** //        setSpeed(0, speed);
 730:.\main.c      **** //        hardTurnCount = 0;
 731:.\main.c      **** //    }
 732:.\main.c      **** //   else if (nr && !mid && !nl)    //if only right, hard right
 733:.\main.c      **** //    {
 734:.\main.c      **** //        if(hardTurnCount < 50)
 735:.\main.c      **** //        {  
 736:.\main.c      **** //            setSpeed(-speed / 1.5,speed / 1.5);
 737:.\main.c      **** //            hardTurnCount++;
 738:.\main.c      **** //        }
 739:.\main.c      **** //        else setSpeed(speed, speed);
 740:.\main.c      **** //    }
 741:.\main.c      **** //    else if (mid && !nr && !nl)
 742:.\main.c      **** //    {
 743:.\main.c      **** //        hardTurnCount = 0;
 744:.\main.c      **** //        setSpeed(speed,speed);
 745:.\main.c      **** //    }
 746:.\main.c      **** //   // else if (!mid && !nr && !nl)
 747:.\main.c      **** //    //{
 748:.\main.c      **** //        //setSpeed(0,0);
 749:.\main.c      **** //    //}
 750:.\main.c      **** //   
 751:.\main.c      **** 
 752:.\main.c      **** }
 3533              		.loc 1 752 0
 3534 0004 BD46     		mov	sp, r7
 3535              		.cfi_def_cfa_register 13
 3536              		@ sp needed
 3537 0006 5DF8047B 		ldr	r7, [sp], #4
 3538              		.cfi_restore 7
 3539              		.cfi_def_cfa_offset 0
 3540 000a 7047     		bx	lr
 3541              		.cfi_endproc
 3542              	.LFE98:
 3543              		.size	trackLineU, .-trackLineU
 3544              		.global	__aeabi_fadd
 3545              		.section	.rodata
 3546              		.align	2
 3547              	.LC6:
 3548 0058 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 77


 3548      65727920 
 3548      566F6C74 
 3548      6167653A 
 3548      2025646D 
 3549              		.section	.text.print_ADC,"ax",%progbits
 3550              		.align	2
 3551              		.global	print_ADC
 3552              		.thumb
 3553              		.thumb_func
 3554              		.type	print_ADC, %function
 3555              	print_ADC:
 3556              	.LFB99:
 753:.\main.c      **** 
 754:.\main.c      **** void print_ADC()
 755:.\main.c      **** {
 3557              		.loc 1 755 0
 3558              		.cfi_startproc
 3559              		@ args = 0, pretend = 0, frame = 24
 3560              		@ frame_needed = 1, uses_anonymous_args = 0
 3561 0000 80B5     		push	{r7, lr}
 3562              		.cfi_def_cfa_offset 8
 3563              		.cfi_offset 7, -8
 3564              		.cfi_offset 14, -4
 3565 0002 86B0     		sub	sp, sp, #24
 3566              		.cfi_def_cfa_offset 32
 3567 0004 00AF     		add	r7, sp, #0
 3568              		.cfi_def_cfa_register 7
 756:.\main.c      ****    //usbPutString("HII\n");
 757:.\main.c      ****     if(flag_receive_ADC == 1)
 3569              		.loc 1 757 0
 3570 0006 274B     		ldr	r3, .L175
 3571 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3572 000a 012B     		cmp	r3, #1
 3573 000c 46D1     		bne	.L172
 3574              	.LBB6:
 758:.\main.c      ****     {
 759:.\main.c      ****         //usbPutString("AAA\r\n");
 760:.\main.c      ****         flag_receive_ADC = 0;
 3575              		.loc 1 760 0
 3576 000e 254B     		ldr	r3, .L175
 3577 0010 0022     		movs	r2, #0
 3578 0012 1A70     		strb	r2, [r3]
 761:.\main.c      ****         
 762:.\main.c      ****        // int8 channel = ADC_
 763:.\main.c      ****         float scalingFactor = 0.972;
 3579              		.loc 1 763 0
 3580 0014 244B     		ldr	r3, .L175+4
 3581 0016 7B61     		str	r3, [r7, #20]	@ float
 764:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3582              		.loc 1 764 0
 3583 0018 244B     		ldr	r3, .L175+8
 3584 001a 1B88     		ldrh	r3, [r3]
 3585 001c 1BB2     		sxth	r3, r3
 3586 001e 41F28832 		movw	r2, #5000
 3587 0022 02FB03F3 		mul	r3, r2, r3
 3588 0026 002B     		cmp	r3, #0
 3589 0028 01DA     		bge	.L174
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 78


 3590 002a 03F6FF73 		addw	r3, r3, #4095
 3591              	.L174:
 3592 002e 1B13     		asrs	r3, r3, #12
 3593 0030 1846     		mov	r0, r3
 3594 0032 FFF7FEFF 		bl	__aeabi_i2f
 3595 0036 0346     		mov	r3, r0
 3596 0038 1846     		mov	r0, r3
 3597 003a 7969     		ldr	r1, [r7, #20]	@ float
 3598 003c FFF7FEFF 		bl	__aeabi_fmul
 3599 0040 0346     		mov	r3, r0
 3600 0042 1846     		mov	r0, r3
 3601 0044 1946     		mov	r1, r3
 3602 0046 FFF7FEFF 		bl	__aeabi_fadd
 3603 004a 0346     		mov	r3, r0
 3604 004c 1846     		mov	r0, r3
 3605 004e FFF7FEFF 		bl	__aeabi_f2iz
 3606 0052 0346     		mov	r3, r0
 3607 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 765:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3608              		.loc 1 765 0
 3609 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3610 005a 154B     		ldr	r3, .L175+12
 3611 005c 1B88     		ldrh	r3, [r3]
 3612 005e 1BB2     		sxth	r3, r3
 3613 0060 1A44     		add	r2, r2, r3
 3614 0062 144B     		ldr	r3, .L175+16
 3615 0064 1B88     		ldrh	r3, [r3]
 3616 0066 1BB2     		sxth	r3, r3
 3617 0068 1344     		add	r3, r3, r2
 3618 006a 134A     		ldr	r2, .L175+20
 3619 006c 82FB0312 		smull	r1, r2, r2, r3
 3620 0070 DB17     		asrs	r3, r3, #31
 3621 0072 D31A     		subs	r3, r2, r3
 3622 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 766:.\main.c      ****         prevVoltage2 = prevVoltage;
 3623              		.loc 1 766 0
 3624 0076 0E4B     		ldr	r3, .L175+12
 3625 0078 1A88     		ldrh	r2, [r3]
 3626 007a 0E4B     		ldr	r3, .L175+16
 3627 007c 1A80     		strh	r2, [r3]	@ movhi
 767:.\main.c      ****         prevVoltage = converted_val;
 3628              		.loc 1 767 0
 3629 007e 0C4A     		ldr	r2, .L175+12
 3630 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3631 0082 1380     		strh	r3, [r2]	@ movhi
 768:.\main.c      ****         
 769:.\main.c      ****         char result_str[16];
 770:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3632              		.loc 1 770 0
 3633 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3634 0088 3A46     		mov	r2, r7
 3635 008a 1046     		mov	r0, r2
 3636 008c 0B49     		ldr	r1, .L175+24
 3637 008e 1A46     		mov	r2, r3
 3638 0090 FFF7FEFF 		bl	sprintf
 771:.\main.c      ****         
 772:.\main.c      ****         usbPutString(result_str);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 79


 3639              		.loc 1 772 0
 3640 0094 3B46     		mov	r3, r7
 3641 0096 1846     		mov	r0, r3
 3642 0098 FFF7FEFF 		bl	usbPutString
 3643              	.L172:
 3644              	.LBE6:
 773:.\main.c      ****     }
 774:.\main.c      **** }
 3645              		.loc 1 774 0
 3646 009c 1837     		adds	r7, r7, #24
 3647              		.cfi_def_cfa_offset 8
 3648 009e BD46     		mov	sp, r7
 3649              		.cfi_def_cfa_register 13
 3650              		@ sp needed
 3651 00a0 80BD     		pop	{r7, pc}
 3652              	.L176:
 3653 00a2 00BF     		.align	2
 3654              	.L175:
 3655 00a4 00000000 		.word	flag_receive_ADC
 3656 00a8 FED4783F 		.word	1064883454
 3657 00ac 00000000 		.word	adc_result
 3658 00b0 00000000 		.word	prevVoltage
 3659 00b4 00000000 		.word	prevVoltage2
 3660 00b8 56555555 		.word	1431655766
 3661 00bc 58000000 		.word	.LC6
 3662              		.cfi_endproc
 3663              	.LFE99:
 3664              		.size	print_ADC, .-print_ADC
 3665              		.section	.rodata
 3666              		.align	2
 3667              	.LC7:
 3668 0070 52535349 		.ascii	"RSSI:\000"
 3668      3A00
 3669 0076 0000     		.align	2
 3670              	.LC8:
 3671 0078 25640D0A 		.ascii	"%d\015\012\000"
 3671      00
 3672 007d 000000   		.align	2
 3673              	.LC9:
 3674 0080 726F626F 		.ascii	"robot_x:\000"
 3674      745F783A 
 3674      00
 3675 0089 000000   		.align	2
 3676              	.LC10:
 3677 008c 726F626F 		.ascii	"robot_y:\000"
 3677      745F793A 
 3677      00
 3678 0095 000000   		.align	2
 3679              	.LC11:
 3680 0098 726F626F 		.ascii	"robot_dir:\000"
 3680      745F6469 
 3680      723A00
 3681              		.section	.text.print_RF,"ax",%progbits
 3682              		.align	2
 3683              		.global	print_RF
 3684              		.thumb
 3685              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 80


 3686              		.type	print_RF, %function
 3687              	print_RF:
 3688              	.LFB100:
 775:.\main.c      **** 
 776:.\main.c      **** void print_RF()
 777:.\main.c      **** {
 3689              		.loc 1 777 0
 3690              		.cfi_startproc
 3691              		@ args = 0, pretend = 0, frame = 16
 3692              		@ frame_needed = 1, uses_anonymous_args = 0
 3693 0000 80B5     		push	{r7, lr}
 3694              		.cfi_def_cfa_offset 8
 3695              		.cfi_offset 7, -8
 3696              		.cfi_offset 14, -4
 3697 0002 84B0     		sub	sp, sp, #16
 3698              		.cfi_def_cfa_offset 24
 3699 0004 00AF     		add	r7, sp, #0
 3700              		.cfi_def_cfa_register 7
 778:.\main.c      ****     if(flag_print_rf == 1)
 3701              		.loc 1 778 0
 3702 0006 254B     		ldr	r3, .L179
 3703 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3704 000a 012B     		cmp	r3, #1
 3705 000c 42D1     		bne	.L177
 3706              	.LBB7:
 779:.\main.c      ****     {
 780:.\main.c      ****         char printString[16];
 781:.\main.c      ****         flag_print_rf = 0;
 3707              		.loc 1 781 0
 3708 000e 234B     		ldr	r3, .L179
 3709 0010 0022     		movs	r2, #0
 3710 0012 1A70     		strb	r2, [r3]
 782:.\main.c      ****         usbPutString("RSSI:");
 3711              		.loc 1 782 0
 3712 0014 2248     		ldr	r0, .L179+4
 3713 0016 FFF7FEFF 		bl	usbPutString
 783:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 3714              		.loc 1 783 0
 3715 001a 224B     		ldr	r3, .L179+8
 3716 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3717 001e 5BB2     		sxtb	r3, r3
 3718 0020 3A46     		mov	r2, r7
 3719 0022 1046     		mov	r0, r2
 3720 0024 2049     		ldr	r1, .L179+12
 3721 0026 1A46     		mov	r2, r3
 3722 0028 FFF7FEFF 		bl	sprintf
 784:.\main.c      ****         usbPutString(printString);
 3723              		.loc 1 784 0
 3724 002c 3B46     		mov	r3, r7
 3725 002e 1846     		mov	r0, r3
 3726 0030 FFF7FEFF 		bl	usbPutString
 785:.\main.c      ****         usbPutString("robot_x:");
 3727              		.loc 1 785 0
 3728 0034 1D48     		ldr	r0, .L179+16
 3729 0036 FFF7FEFF 		bl	usbPutString
 786:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 3730              		.loc 1 786 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 81


 3731 003a 1A4B     		ldr	r3, .L179+8
 3732 003c 5B88     		ldrh	r3, [r3, #2]
 3733 003e 1BB2     		sxth	r3, r3
 3734 0040 3A46     		mov	r2, r7
 3735 0042 1046     		mov	r0, r2
 3736 0044 1849     		ldr	r1, .L179+12
 3737 0046 1A46     		mov	r2, r3
 3738 0048 FFF7FEFF 		bl	sprintf
 787:.\main.c      ****         usbPutString(printString);
 3739              		.loc 1 787 0
 3740 004c 3B46     		mov	r3, r7
 3741 004e 1846     		mov	r0, r3
 3742 0050 FFF7FEFF 		bl	usbPutString
 788:.\main.c      ****         usbPutString("robot_y:");
 3743              		.loc 1 788 0
 3744 0054 1648     		ldr	r0, .L179+20
 3745 0056 FFF7FEFF 		bl	usbPutString
 789:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3746              		.loc 1 789 0
 3747 005a 124B     		ldr	r3, .L179+8
 3748 005c 9B88     		ldrh	r3, [r3, #4]
 3749 005e 1BB2     		sxth	r3, r3
 3750 0060 3A46     		mov	r2, r7
 3751 0062 1046     		mov	r0, r2
 3752 0064 1049     		ldr	r1, .L179+12
 3753 0066 1A46     		mov	r2, r3
 3754 0068 FFF7FEFF 		bl	sprintf
 790:.\main.c      ****         usbPutString(printString);
 3755              		.loc 1 790 0
 3756 006c 3B46     		mov	r3, r7
 3757 006e 1846     		mov	r0, r3
 3758 0070 FFF7FEFF 		bl	usbPutString
 791:.\main.c      ****         usbPutString("robot_dir:");
 3759              		.loc 1 791 0
 3760 0074 0F48     		ldr	r0, .L179+24
 3761 0076 FFF7FEFF 		bl	usbPutString
 792:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3762              		.loc 1 792 0
 3763 007a 0A4B     		ldr	r3, .L179+8
 3764 007c DB88     		ldrh	r3, [r3, #6]
 3765 007e 1BB2     		sxth	r3, r3
 3766 0080 3A46     		mov	r2, r7
 3767 0082 1046     		mov	r0, r2
 3768 0084 0849     		ldr	r1, .L179+12
 3769 0086 1A46     		mov	r2, r3
 3770 0088 FFF7FEFF 		bl	sprintf
 793:.\main.c      ****         usbPutString(printString);
 3771              		.loc 1 793 0
 3772 008c 3B46     		mov	r3, r7
 3773 008e 1846     		mov	r0, r3
 3774 0090 FFF7FEFF 		bl	usbPutString
 3775              	.L177:
 3776              	.LBE7:
 794:.\main.c      ****     }
 795:.\main.c      **** }
 3777              		.loc 1 795 0
 3778 0094 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 82


 3779              		.cfi_def_cfa_offset 8
 3780 0096 BD46     		mov	sp, r7
 3781              		.cfi_def_cfa_register 13
 3782              		@ sp needed
 3783 0098 80BD     		pop	{r7, pc}
 3784              	.L180:
 3785 009a 00BF     		.align	2
 3786              	.L179:
 3787 009c 00000000 		.word	flag_print_rf
 3788 00a0 70000000 		.word	.LC7
 3789 00a4 00000000 		.word	system_state
 3790 00a8 78000000 		.word	.LC8
 3791 00ac 80000000 		.word	.LC9
 3792 00b0 8C000000 		.word	.LC10
 3793 00b4 98000000 		.word	.LC11
 3794              		.cfi_endproc
 3795              	.LFE100:
 3796              		.size	print_RF, .-print_RF
 3797              		.section	.text.readFrontSensors,"ax",%progbits
 3798              		.align	2
 3799              		.global	readFrontSensors
 3800              		.thumb
 3801              		.thumb_func
 3802              		.type	readFrontSensors, %function
 3803              	readFrontSensors:
 3804              	.LFB101:
 796:.\main.c      **** 
 797:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 798:.\main.c      **** {
 3805              		.loc 1 798 0
 3806              		.cfi_startproc
 3807              		@ args = 0, pretend = 0, frame = 8
 3808              		@ frame_needed = 1, uses_anonymous_args = 0
 3809 0000 90B5     		push	{r4, r7, lr}
 3810              		.cfi_def_cfa_offset 12
 3811              		.cfi_offset 4, -12
 3812              		.cfi_offset 7, -8
 3813              		.cfi_offset 14, -4
 3814 0002 83B0     		sub	sp, sp, #12
 3815              		.cfi_def_cfa_offset 24
 3816 0004 00AF     		add	r7, sp, #0
 3817              		.cfi_def_cfa_register 7
 3818 0006 7860     		str	r0, [r7, #4]
 799:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3819              		.loc 1 799 0
 3820 0008 FFF7FEFF 		bl	FLSens_out_Read
 3821 000c 0346     		mov	r3, r0
 3822 000e 1A46     		mov	r2, r3
 3823 0010 7B68     		ldr	r3, [r7, #4]
 3824 0012 1A70     		strb	r2, [r3]
 800:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3825              		.loc 1 800 0
 3826 0014 7B68     		ldr	r3, [r7, #4]
 3827 0016 5C1C     		adds	r4, r3, #1
 3828 0018 FFF7FEFF 		bl	NLSens_out_Read
 3829 001c 0346     		mov	r3, r0
 3830 001e 2370     		strb	r3, [r4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 83


 801:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3831              		.loc 1 801 0
 3832 0020 7B68     		ldr	r3, [r7, #4]
 3833 0022 9C1C     		adds	r4, r3, #2
 3834 0024 FFF7FEFF 		bl	MSens_out_Read
 3835 0028 0346     		mov	r3, r0
 3836 002a 2370     		strb	r3, [r4]
 802:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3837              		.loc 1 802 0
 3838 002c 7B68     		ldr	r3, [r7, #4]
 3839 002e DC1C     		adds	r4, r3, #3
 3840 0030 FFF7FEFF 		bl	NRSens_out_Read
 3841 0034 0346     		mov	r3, r0
 3842 0036 2370     		strb	r3, [r4]
 803:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3843              		.loc 1 803 0
 3844 0038 7B68     		ldr	r3, [r7, #4]
 3845 003a 1C1D     		adds	r4, r3, #4
 3846 003c FFF7FEFF 		bl	FRSens_out_Read
 3847 0040 0346     		mov	r3, r0
 3848 0042 2370     		strb	r3, [r4]
 804:.\main.c      **** }
 3849              		.loc 1 804 0
 3850 0044 0C37     		adds	r7, r7, #12
 3851              		.cfi_def_cfa_offset 12
 3852 0046 BD46     		mov	sp, r7
 3853              		.cfi_def_cfa_register 13
 3854              		@ sp needed
 3855 0048 90BD     		pop	{r4, r7, pc}
 3856              		.cfi_endproc
 3857              	.LFE101:
 3858              		.size	readFrontSensors, .-readFrontSensors
 3859 004a 00BF     		.section	.rodata
 3860 00a3 00       		.align	2
 3861              	.LC12:
 3862 00a4 54726967 		.ascii	"Triggered at intersection \015\012\000"
 3862      67657265 
 3862      64206174 
 3862      20696E74 
 3862      65727365 
 3863 00c1 000000   		.align	2
 3864              	.LC13:
 3865 00c4 44656164 		.ascii	"Deadzone entered!\015\012\000"
 3865      7A6F6E65 
 3865      20656E74 
 3865      65726564 
 3865      210D0A00 
 3866              		.align	2
 3867              	.LC14:
 3868 00d8 54726967 		.ascii	"Triggered at white light \015\012\000"
 3868      67657265 
 3868      64206174 
 3868      20776869 
 3868      7465206C 
 3869              		.section	.text.main,"ax",%progbits
 3870              		.align	2
 3871              		.global	main
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 84


 3872              		.thumb
 3873              		.thumb_func
 3874              		.type	main, %function
 3875              	main:
 3876              	.LFB102:
 805:.\main.c      **** 
 806:.\main.c      **** int main()
 807:.\main.c      **** {  
 3877              		.loc 1 807 0
 3878              		.cfi_startproc
 3879              		@ args = 0, pretend = 0, frame = 8
 3880              		@ frame_needed = 1, uses_anonymous_args = 0
 3881 0000 80B5     		push	{r7, lr}
 3882              		.cfi_def_cfa_offset 8
 3883              		.cfi_offset 7, -8
 3884              		.cfi_offset 14, -4
 3885 0002 82B0     		sub	sp, sp, #8
 3886              		.cfi_def_cfa_offset 16
 3887 0004 00AF     		add	r7, sp, #0
 3888              		.cfi_def_cfa_register 7
 808:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 809:.\main.c      **** // ----- INITIALIZATIONS ----------
 810:.\main.c      ****     CYGlobalIntEnable;
 3889              		.loc 1 810 0
 3890              	@ 810 ".\main.c" 1
 3891 0006 62B6     		CPSIE   i
 3892              	@ 0 "" 2
 811:.\main.c      ****     if(ENABLE_PWM)
 812:.\main.c      ****     {
 813:.\main.c      ****         PWM_1_Start();// starting the pwm
 3893              		.loc 1 813 0
 3894              		.thumb
 3895 0008 FFF7FEFF 		bl	PWM_1_Start
 814:.\main.c      ****         PWM_2_Start();// starting the pwm
 3896              		.loc 1 814 0
 3897 000c FFF7FEFF 		bl	PWM_2_Start
 815:.\main.c      ****     }
 816:.\main.c      ****     
 817:.\main.c      ****     if(ENABLE_ADC)
 818:.\main.c      ****     {
 819:.\main.c      ****         ADC_Start();
 820:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 821:.\main.c      ****         //ADC_StartConvert();
 822:.\main.c      ****         
 823:.\main.c      ****         //start the ADC timer for software trigger mode
 824:.\main.c      ****         Timer_TS_Start();
 825:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 826:.\main.c      ****     }
 827:.\main.c      ****     
 828:.\main.c      ****     if (ENABLE_QUAD)
 829:.\main.c      ****     {
 830:.\main.c      ****         QuadDec_M1_Start();
 3898              		.loc 1 830 0
 3899 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 831:.\main.c      ****         QuadDec_M2_Start();
 3900              		.loc 1 831 0
 3901 0014 FFF7FEFF 		bl	QuadDec_M2_Start
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 85


 832:.\main.c      ****         
 833:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 3902              		.loc 1 833 0
 3903 0018 AB48     		ldr	r0, .L227
 3904 001a FFF7FEFF 		bl	isr_quad1_StartEx
 834:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 3905              		.loc 1 834 0
 3906 001e AB48     		ldr	r0, .L227+4
 3907 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 835:.\main.c      ****         
 836:.\main.c      ****         Timer_1_Start();
 3908              		.loc 1 836 0
 3909 0024 FFF7FEFF 		bl	Timer_1_Start
 837:.\main.c      ****     }
 838:.\main.c      ****     
 839:.\main.c      ****     if(ENABLE_STOP){
 840:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 841:.\main.c      ****         
 842:.\main.c      ****     }
 843:.\main.c      ****     isr_button_StartEx(button);
 3910              		.loc 1 843 0
 3911 0028 A948     		ldr	r0, .L227+8
 3912 002a FFF7FEFF 		bl	isr_button_StartEx
 844:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 3913              		.loc 1 844 0
 3914 002e A948     		ldr	r0, .L227+12
 3915 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 845:.\main.c      **** 
 846:.\main.c      ****     // ------USB SETUP ----------------    
 847:.\main.c      ****     if (USE_USB){    
 848:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 3916              		.loc 1 848 0
 3917 0034 0020     		movs	r0, #0
 3918 0036 0121     		movs	r1, #1
 3919 0038 FFF7FEFF 		bl	USBUART_Start
 849:.\main.c      ****         if (USBUART_GetConfiguration())
 3920              		.loc 1 849 0
 3921 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 3922 0040 0346     		mov	r3, r0
 3923 0042 002B     		cmp	r3, #0
 3924 0044 01D0     		beq	.L183
 850:.\main.c      ****             {
 851:.\main.c      ****                  USBUART_CDC_Init();
 3925              		.loc 1 851 0
 3926 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 3927              	.L183:
 852:.\main.c      ****             }
 853:.\main.c      ****     }
 854:.\main.c      ****     
 855:.\main.c      ****     if(BIN_ENABLED){
 3928              		.loc 1 855 0
 3929 004a A34B     		ldr	r3, .L227+16
 3930 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3931 004e 002B     		cmp	r3, #0
 3932 0050 01D0     		beq	.L184
 856:.\main.c      ****         changeToRF();
 3933              		.loc 1 856 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 86


 3934 0052 FFF7FEFF 		bl	changeToRF
 3935              	.L184:
 857:.\main.c      ****     }
 858:.\main.c      ****     
 859:.\main.c      ****     if(BT_ENABLED){
 3936              		.loc 1 859 0
 3937 0056 A14B     		ldr	r3, .L227+20
 3938 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3939 005a 002B     		cmp	r3, #0
 3940 005c 01D0     		beq	.L185
 860:.\main.c      ****         changeToBT();
 3941              		.loc 1 860 0
 3942 005e FFF7FEFF 		bl	changeToBT
 3943              	.L185:
 861:.\main.c      ****     }
 862:.\main.c      ****     
 863:.\main.c      ****     uint16 actionDebounce = 0;
 3944              		.loc 1 863 0
 3945 0062 0023     		movs	r3, #0
 3946 0064 FB80     		strh	r3, [r7, #6]	@ movhi
 3947              	.L224:
 3948              	.LBB8:
 864:.\main.c      ****     
 865:.\main.c      ****     //usbPutString("Started");
 866:.\main.c      ****     for(;;)
 867:.\main.c      ****     {
 868:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 869:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 3949              		.loc 1 869 0
 3950 0066 FFF7FEFF 		bl	Quad_Dec_response
 870:.\main.c      ****         if(BIN_ENABLED == 1)
 3951              		.loc 1 870 0
 3952 006a 9B4B     		ldr	r3, .L227+16
 3953 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3954 006e 012B     		cmp	r3, #1
 3955 0070 03D1     		bne	.L186
 871:.\main.c      ****         {
 872:.\main.c      ****             handle_rx_binary();
 3956              		.loc 1 872 0
 3957 0072 FFF7FEFF 		bl	handle_rx_binary
 873:.\main.c      ****             print_RF();
 3958              		.loc 1 873 0
 3959 0076 FFF7FEFF 		bl	print_RF
 3960              	.L186:
 874:.\main.c      ****         }
 875:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 876:.\main.c      ****         
 877:.\main.c      ****         uint8 frontSensors[5];
 878:.\main.c      ****         readFrontSensors(frontSensors);
 3961              		.loc 1 878 0
 3962 007a 3B46     		mov	r3, r7
 3963 007c 1846     		mov	r0, r3
 3964 007e FFF7FEFF 		bl	readFrontSensors
 879:.\main.c      ****         
 880:.\main.c      ****         switch(track_mode)
 3965              		.loc 1 880 0
 3966 0082 974B     		ldr	r3, .L227+24
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 87


 3967 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3968 0086 072B     		cmp	r3, #7
 3969 0088 00F2ED80 		bhi	.L187
 3970 008c 01A2     		adr	r2, .L189
 3971 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3972 0092 00BF     		.p2align 2
 3973              	.L189:
 3974 0094 67020000 		.word	.L187+1
 3975 0098 67020000 		.word	.L187+1
 3976 009c 67020000 		.word	.L187+1
 3977 00a0 B5000000 		.word	.L192+1
 3978 00a4 67020000 		.word	.L187+1
 3979 00a8 F1000000 		.word	.L194+1
 3980 00ac 17010000 		.word	.L195+1
 3981 00b0 17010000 		.word	.L195+1
 3982              		.p2align 1
 3983              	.L192:
 881:.\main.c      ****         {
 882:.\main.c      ****             case SQUARE_TRACK:
 883:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 3984              		.loc 1 883 0
 3985 00b4 8B4B     		ldr	r3, .L227+28
 3986 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3987 00b8 012B     		cmp	r3, #1
 3988 00ba 18D0     		beq	.L196
 3989              		.loc 1 883 0 is_stmt 0 discriminator 1
 3990 00bc 894B     		ldr	r3, .L227+28
 3991 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3992 00c0 022B     		cmp	r3, #2
 3993 00c2 14D0     		beq	.L196
 884:.\main.c      ****                 {
 885:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 3994              		.loc 1 885 0 is_stmt 1
 3995 00c4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3996 00c6 012B     		cmp	r3, #1
 3997 00c8 05D1     		bne	.L197
 3998              		.loc 1 885 0 is_stmt 0 discriminator 1
 3999 00ca BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4000 00cc 012B     		cmp	r3, #1
 4001 00ce 02D1     		bne	.L197
 886:.\main.c      ****                         initTurnLeft();
 4002              		.loc 1 886 0 is_stmt 1
 4003 00d0 FFF7FEFF 		bl	initTurnLeft
 4004 00d4 0BE0     		b	.L196
 4005              	.L197:
 887:.\main.c      ****                     }
 888:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 4006              		.loc 1 888 0
 4007 00d6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4008 00d8 012B     		cmp	r3, #1
 4009 00da 05D1     		bne	.L198
 4010              		.loc 1 888 0 is_stmt 0 discriminator 1
 4011 00dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4012 00de 012B     		cmp	r3, #1
 4013 00e0 02D1     		bne	.L198
 889:.\main.c      ****                     {
 890:.\main.c      ****                         initTurnRight();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 88


 4014              		.loc 1 890 0 is_stmt 1
 4015 00e2 FFF7FEFF 		bl	initTurnRight
 4016 00e6 02E0     		b	.L196
 4017              	.L198:
 891:.\main.c      ****                     }
 892:.\main.c      ****                     else inittrackLineZ();
 4018              		.loc 1 892 0
 4019 00e8 FFF7FEFF 		bl	inittrackLineZ
 893:.\main.c      ****                 }
 894:.\main.c      ****             break;
 4020              		.loc 1 894 0
 4021 00ec BBE0     		b	.L187
 4022              	.L196:
 4023 00ee BAE0     		b	.L187
 4024              	.L194:
 895:.\main.c      ****             case NO_TRACK:
 896:.\main.c      ****             break;
 897:.\main.c      ****             case CURVE_TRACK:
 898:.\main.c      ****             break;
 899:.\main.c      ****             case U_TRACK:
 900:.\main.c      ****             break;
 901:.\main.c      ****             case QUAD_STOP:
 902:.\main.c      ****             break;
 903:.\main.c      ****             case RF_STOP:
 904:.\main.c      ****                 if(initial_pos_valid == 1)
 4025              		.loc 1 904 0
 4026 00f0 7D4B     		ldr	r3, .L227+32
 4027 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4028 00f4 012B     		cmp	r3, #1
 4029 00f6 0DD1     		bne	.L199
 905:.\main.c      ****                 {
 906:.\main.c      ****                     //changeToBT();
 907:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 908:.\main.c      ****                     //changeToRF();
 909:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 4030              		.loc 1 909 0
 4031 00f8 7C4B     		ldr	r3, .L227+36
 4032 00fa 5A88     		ldrh	r2, [r3, #2]
 4033 00fc 7C4B     		ldr	r3, .L227+40
 4034 00fe 1A80     		strh	r2, [r3]	@ movhi
 910:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 4035              		.loc 1 910 0
 4036 0100 7A4B     		ldr	r3, .L227+36
 4037 0102 9A88     		ldrh	r2, [r3, #4]
 4038 0104 7B4B     		ldr	r3, .L227+44
 4039 0106 1A80     		strh	r2, [r3]	@ movhi
 911:.\main.c      ****                     initial_pos_valid = 2;
 4040              		.loc 1 911 0
 4041 0108 774B     		ldr	r3, .L227+32
 4042 010a 0222     		movs	r2, #2
 4043 010c 1A70     		strb	r2, [r3]
 912:.\main.c      ****                     initForward();
 4044              		.loc 1 912 0
 4045 010e FFF7FEFF 		bl	initForward
 913:.\main.c      ****                 }
 914:.\main.c      ****             break;
 4046              		.loc 1 914 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 89


 4047 0112 A8E0     		b	.L187
 4048              	.L199:
 4049 0114 A7E0     		b	.L187
 4050              	.L195:
 915:.\main.c      ****             case MAP_TRAVERSE:
 916:.\main.c      ****             case DEST_TEST:
 917:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 4051              		.loc 1 917 0
 4052 0116 734B     		ldr	r3, .L227+28
 4053 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4054 011a 012B     		cmp	r3, #1
 4055 011c 00F0A280 		beq	.L200
 4056              		.loc 1 917 0 is_stmt 0 discriminator 1
 4057 0120 704B     		ldr	r3, .L227+28
 4058 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4059 0124 022B     		cmp	r3, #2
 4060 0126 00F09D80 		beq	.L200
 4061              		.loc 1 917 0 discriminator 2
 4062 012a 6E4B     		ldr	r3, .L227+28
 4063 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4064 012e 072B     		cmp	r3, #7
 4065 0130 00F09880 		beq	.L200
 4066              	.LBB9:
 918:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 919:.\main.c      ****                     char nextStep = instructions[instructionCount];
 4067              		.loc 1 919 0 is_stmt 1
 4068 0134 704B     		ldr	r3, .L227+48
 4069 0136 1B88     		ldrh	r3, [r3]
 4070 0138 1A46     		mov	r2, r3
 4071 013a 704B     		ldr	r3, .L227+52
 4072 013c 9B5C     		ldrb	r3, [r3, r2]
 4073 013e 7B71     		strb	r3, [r7, #5]
 920:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 4074              		.loc 1 920 0
 4075 0140 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4076 0142 012B     		cmp	r3, #1
 4077 0144 02D1     		bne	.L201
 4078              		.loc 1 920 0 is_stmt 0 discriminator 1
 4079 0146 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4080 0148 012B     		cmp	r3, #1
 4081 014a 05D0     		beq	.L202
 4082              	.L201:
 4083              		.loc 1 920 0 discriminator 3
 4084 014c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4085 014e 012B     		cmp	r3, #1
 4086 0150 4BD1     		bne	.L203
 4087              		.loc 1 920 0 discriminator 4
 4088 0152 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4089 0154 012B     		cmp	r3, #1
 4090 0156 48D1     		bne	.L203
 4091              	.L202:
 921:.\main.c      ****                         if(sensorsDisabled == 0)
 4092              		.loc 1 921 0 is_stmt 1
 4093 0158 694B     		ldr	r3, .L227+56
 4094 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4095 015c 002B     		cmp	r3, #0
 4096 015e 43D1     		bne	.L204
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 90


 922:.\main.c      ****                         {
 923:.\main.c      ****                             actionDebounce++;
 4097              		.loc 1 923 0
 4098 0160 FB88     		ldrh	r3, [r7, #6]
 4099 0162 0133     		adds	r3, r3, #1
 4100 0164 FB80     		strh	r3, [r7, #6]	@ movhi
 924:.\main.c      ****                             if(actionDebounce >= 1000)
 4101              		.loc 1 924 0
 4102 0166 FB88     		ldrh	r3, [r7, #6]
 4103 0168 B3F57A7F 		cmp	r3, #1000
 4104 016c 3CD3     		bcc	.L204
 925:.\main.c      ****                             {
 926:.\main.c      ****                                 sensorsDisabled = 1;
 4105              		.loc 1 926 0
 4106 016e 644B     		ldr	r3, .L227+56
 4107 0170 0122     		movs	r2, #1
 4108 0172 1A70     		strb	r2, [r3]
 927:.\main.c      ****                                 UART_PutString("Triggered at intersection \r\n");
 4109              		.loc 1 927 0
 4110 0174 6348     		ldr	r0, .L227+60
 4111 0176 FFF7FEFF 		bl	UART_PutString
 928:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 4112              		.loc 1 928 0
 4113 017a 6348     		ldr	r0, .L227+64
 4114 017c FFF7FEFF 		bl	UART_PutString
 929:.\main.c      ****                                 deadzone = 1;
 4115              		.loc 1 929 0
 4116 0180 624B     		ldr	r3, .L227+68
 4117 0182 0122     		movs	r2, #1
 4118 0184 1A70     		strb	r2, [r3]
 930:.\main.c      ****                                 Timer_Deadzone_Start();
 4119              		.loc 1 930 0
 4120 0186 FFF7FEFF 		bl	Timer_Deadzone_Start
 931:.\main.c      ****                                 switch(nextStep)
 4121              		.loc 1 931 0
 4122 018a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4123 018c 4C3B     		subs	r3, r3, #76
 4124 018e 092B     		cmp	r3, #9
 4125 0190 22D8     		bhi	.L225
 4126 0192 01A2     		adr	r2, .L207
 4127 0194 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4128              		.p2align 2
 4129              	.L207:
 4130 0198 C7010000 		.word	.L206+1
 4131 019c D9010000 		.word	.L225+1
 4132 01a0 D9010000 		.word	.L225+1
 4133 01a4 D9010000 		.word	.L225+1
 4134 01a8 D9010000 		.word	.L225+1
 4135 01ac D9010000 		.word	.L225+1
 4136 01b0 CD010000 		.word	.L208+1
 4137 01b4 C1010000 		.word	.L209+1
 4138 01b8 D9010000 		.word	.L225+1
 4139 01bc D3010000 		.word	.L210+1
 4140              		.p2align 1
 4141              	.L209:
 932:.\main.c      ****                                 {
 933:.\main.c      ****                                     case 'S':
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 91


 934:.\main.c      ****                                         initTrackU();
 4142              		.loc 1 934 0
 4143 01c0 FFF7FEFF 		bl	initTrackU
 935:.\main.c      ****                                         //do nothing
 936:.\main.c      ****                                     break;
 4144              		.loc 1 936 0
 4145 01c4 09E0     		b	.L211
 4146              	.L206:
 937:.\main.c      ****                                     case 'L':
 938:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 939:.\main.c      ****                                         initTurnLeft();
 4147              		.loc 1 939 0
 4148 01c6 FFF7FEFF 		bl	initTurnLeft
 940:.\main.c      ****                                     break;
 4149              		.loc 1 940 0
 4150 01ca 06E0     		b	.L211
 4151              	.L208:
 941:.\main.c      ****                                     case 'R':
 942:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 943:.\main.c      ****                                         initTurnRight();
 4152              		.loc 1 943 0
 4153 01cc FFF7FEFF 		bl	initTurnRight
 944:.\main.c      ****                                         
 945:.\main.c      ****                                     break;
 4154              		.loc 1 945 0
 4155 01d0 03E0     		b	.L211
 4156              	.L210:
 946:.\main.c      ****                                     case 'U':
 947:.\main.c      ****                                         // Direction not tracked any more
 948:.\main.c      ****                                         initTurnU();
 4157              		.loc 1 948 0
 4158 01d2 FFF7FEFF 		bl	initTurnU
 949:.\main.c      ****                                     break;
 4159              		.loc 1 949 0
 4160 01d6 00E0     		b	.L211
 4161              	.L225:
 950:.\main.c      ****                                     default:
 951:.\main.c      ****                                         //do nothing
 952:.\main.c      ****                                         break;
 4162              		.loc 1 952 0
 4163 01d8 00BF     		nop
 4164              	.L211:
 953:.\main.c      ****                                 }
 954:.\main.c      ****                                 instructionCount++;
 4165              		.loc 1 954 0
 4166 01da 474B     		ldr	r3, .L227+48
 4167 01dc 1B88     		ldrh	r3, [r3]
 4168 01de 0133     		adds	r3, r3, #1
 4169 01e0 9AB2     		uxth	r2, r3
 4170 01e2 454B     		ldr	r3, .L227+48
 4171 01e4 1A80     		strh	r2, [r3]	@ movhi
 921:.\main.c      ****                         {
 4172              		.loc 1 921 0
 4173 01e6 3DE0     		b	.L200
 4174              	.L204:
 4175 01e8 3CE0     		b	.L200
 4176              	.L203:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 92


 955:.\main.c      ****                             }
 956:.\main.c      ****                         }
 957:.\main.c      ****                     }
 958:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 4177              		.loc 1 958 0
 4178 01ea 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4179 01ec 002B     		cmp	r3, #0
 4180 01ee 34D1     		bne	.L212
 4181              		.loc 1 958 0 is_stmt 0 discriminator 1
 4182 01f0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4183 01f2 002B     		cmp	r3, #0
 4184 01f4 31D1     		bne	.L212
 4185              		.loc 1 958 0 discriminator 2
 4186 01f6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4187 01f8 002B     		cmp	r3, #0
 4188 01fa 2ED1     		bne	.L212
 4189              		.loc 1 958 0 discriminator 3
 4190 01fc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4191 01fe 002B     		cmp	r3, #0
 4192 0200 2BD1     		bne	.L212
 4193              		.loc 1 958 0 discriminator 4
 4194 0202 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4195 0204 002B     		cmp	r3, #0
 4196 0206 28D1     		bne	.L212
 4197              		.loc 1 958 0 discriminator 5
 4198 0208 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4199 020a 552B     		cmp	r3, #85
 4200 020c 25D1     		bne	.L212
 959:.\main.c      ****                     {
 960:.\main.c      ****                         if(sensorsDisabled == 0)
 4201              		.loc 1 960 0 is_stmt 1
 4202 020e 3C4B     		ldr	r3, .L227+56
 4203 0210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4204 0212 002B     		cmp	r3, #0
 4205 0214 20D1     		bne	.L213
 961:.\main.c      ****                         {
 962:.\main.c      ****                             actionDebounce++;
 4206              		.loc 1 962 0
 4207 0216 FB88     		ldrh	r3, [r7, #6]
 4208 0218 0133     		adds	r3, r3, #1
 4209 021a FB80     		strh	r3, [r7, #6]	@ movhi
 963:.\main.c      ****                             if(actionDebounce >= 15000)
 4210              		.loc 1 963 0
 4211 021c FB88     		ldrh	r3, [r7, #6]
 4212 021e 43F69722 		movw	r2, #14999
 4213 0222 9342     		cmp	r3, r2
 4214 0224 18D9     		bls	.L213
 964:.\main.c      ****                             {
 965:.\main.c      ****                                 UART_PutString("Triggered at white light \r\n");
 4215              		.loc 1 965 0
 4216 0226 3A48     		ldr	r0, .L227+72
 4217 0228 FFF7FEFF 		bl	UART_PutString
 966:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 4218              		.loc 1 966 0
 4219 022c 3648     		ldr	r0, .L227+64
 4220 022e FFF7FEFF 		bl	UART_PutString
 967:.\main.c      ****                                 deadzone = 1;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 93


 4221              		.loc 1 967 0
 4222 0232 364B     		ldr	r3, .L227+68
 4223 0234 0122     		movs	r2, #1
 4224 0236 1A70     		strb	r2, [r3]
 968:.\main.c      ****                                 Timer_Deadzone_Start();
 4225              		.loc 1 968 0
 4226 0238 FFF7FEFF 		bl	Timer_Deadzone_Start
 969:.\main.c      ****                                 actionDebounce = 0;
 4227              		.loc 1 969 0
 4228 023c 0023     		movs	r3, #0
 4229 023e FB80     		strh	r3, [r7, #6]	@ movhi
 970:.\main.c      ****                                 sensorsDisabled = 1;
 4230              		.loc 1 970 0
 4231 0240 2F4B     		ldr	r3, .L227+56
 4232 0242 0122     		movs	r2, #1
 4233 0244 1A70     		strb	r2, [r3]
 971:.\main.c      ****                                 initTurnU();
 4234              		.loc 1 971 0
 4235 0246 FFF7FEFF 		bl	initTurnU
 972:.\main.c      ****                                 instructionCount++;
 4236              		.loc 1 972 0
 4237 024a 2B4B     		ldr	r3, .L227+48
 4238 024c 1B88     		ldrh	r3, [r3]
 4239 024e 0133     		adds	r3, r3, #1
 4240 0250 9AB2     		uxth	r2, r3
 4241 0252 294B     		ldr	r3, .L227+48
 4242 0254 1A80     		strh	r2, [r3]	@ movhi
 960:.\main.c      ****                         {
 4243              		.loc 1 960 0
 4244 0256 05E0     		b	.L200
 4245              	.L213:
 960:.\main.c      ****                         {
 4246              		.loc 1 960 0 is_stmt 0 discriminator 2
 4247 0258 04E0     		b	.L200
 4248              	.L212:
 973:.\main.c      ****                             }
 974:.\main.c      ****                         }
 975:.\main.c      ****                     }
 976:.\main.c      ****                     else
 977:.\main.c      ****                     {
 978:.\main.c      ****                         inittrackLineZ();
 4249              		.loc 1 978 0 is_stmt 1
 4250 025a FFF7FEFF 		bl	inittrackLineZ
 979:.\main.c      ****                         actionDebounce = 0;
 4251              		.loc 1 979 0
 4252 025e 0023     		movs	r3, #0
 4253 0260 FB80     		strh	r3, [r7, #6]	@ movhi
 4254              	.LBE9:
 980:.\main.c      ****                     }
 981:.\main.c      ****                 }
 982:.\main.c      ****                 break;
 4255              		.loc 1 982 0
 4256 0262 FFE7     		b	.L226
 4257              	.L200:
 4258              	.L226:
 4259 0264 00BF     		nop
 4260              	.L187:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 94


 983:.\main.c      ****         }
 984:.\main.c      ****         
 985:.\main.c      ****         switch(movement_state)
 4261              		.loc 1 985 0
 4262 0266 1F4B     		ldr	r3, .L227+28
 4263 0268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4264 026a 072B     		cmp	r3, #7
 4265 026c 3FF6FBAE 		bhi	.L224
 4266 0270 01A2     		adr	r2, .L216
 4267 0272 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4268 0276 00BF     		.p2align 2
 4269              	.L216:
 4270 0278 99020000 		.word	.L215+1
 4271 027c 9F020000 		.word	.L217+1
 4272 0280 A5020000 		.word	.L218+1
 4273 0284 B1020000 		.word	.L219+1
 4274 0288 B7020000 		.word	.L220+1
 4275 028c BD020000 		.word	.L221+1
 4276 0290 C3020000 		.word	.L222+1
 4277 0294 AB020000 		.word	.L223+1
 4278              		.p2align 1
 4279              	.L215:
 986:.\main.c      ****         {
 987:.\main.c      ****             case DRIVE:
 988:.\main.c      ****                 driveForwards();
 4280              		.loc 1 988 0
 4281 0298 FFF7FEFF 		bl	driveForwards
 989:.\main.c      ****             break;
 4282              		.loc 1 989 0
 4283 029c 13E0     		b	.L214
 4284              	.L217:
 990:.\main.c      ****             case LTURN:
 991:.\main.c      ****                 turnLeft();
 4285              		.loc 1 991 0
 4286 029e FFF7FEFF 		bl	turnLeft
 992:.\main.c      ****             break;
 4287              		.loc 1 992 0
 4288 02a2 10E0     		b	.L214
 4289              	.L218:
 993:.\main.c      ****             case RTURN:
 994:.\main.c      ****                 turnRight();
 4290              		.loc 1 994 0
 4291 02a4 FFF7FEFF 		bl	turnRight
 995:.\main.c      ****             break;
 4292              		.loc 1 995 0
 4293 02a8 0DE0     		b	.L214
 4294              	.L223:
 996:.\main.c      ****             case UTURN:
 997:.\main.c      ****                 turnU();
 4295              		.loc 1 997 0
 4296 02aa FFF7FEFF 		bl	turnU
 998:.\main.c      ****             break;
 4297              		.loc 1 998 0
 4298 02ae 0AE0     		b	.L214
 4299              	.L219:
 999:.\main.c      ****             case STOPPED:
1000:.\main.c      ****                 brakeMotor();
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 95


 4300              		.loc 1 1000 0
 4301 02b0 FFF7FEFF 		bl	brakeMotor
1001:.\main.c      ****             break;
 4302              		.loc 1 1001 0
 4303 02b4 07E0     		b	.L214
 4304              	.L220:
1002:.\main.c      ****             case TRACKING:
1003:.\main.c      ****                 trackLine();
 4305              		.loc 1 1003 0
 4306 02b6 FFF7FEFF 		bl	trackLine
1004:.\main.c      ****             break;
 4307              		.loc 1 1004 0
 4308 02ba 04E0     		b	.L214
 4309              	.L221:
1005:.\main.c      ****             case TRACKING_U:
1006:.\main.c      ****                 trackLineU();
 4310              		.loc 1 1006 0
 4311 02bc FFF7FEFF 		bl	trackLineU
1007:.\main.c      ****             break;
 4312              		.loc 1 1007 0
 4313 02c0 01E0     		b	.L214
 4314              	.L222:
1008:.\main.c      ****             case TRACKING_SOFT:
1009:.\main.c      ****                 trackLineZ();
 4315              		.loc 1 1009 0
 4316 02c2 FFF7FEFF 		bl	trackLineZ
 4317              	.L214:
 4318              	.LBE8:
1010:.\main.c      ****         }
1011:.\main.c      ****         //handle_usb();        
1012:.\main.c      ****     }   
 4319              		.loc 1 1012 0
 4320 02c6 CEE6     		b	.L224
 4321              	.L228:
 4322              		.align	2
 4323              	.L227:
 4324 02c8 00000000 		.word	isr_quad1
 4325 02cc 00000000 		.word	isr_turn_timer
 4326 02d0 00000000 		.word	button
 4327 02d4 00000000 		.word	isr_deadzone
 4328 02d8 00000000 		.word	BIN_ENABLED
 4329 02dc 00000000 		.word	BT_ENABLED
 4330 02e0 00000000 		.word	track_mode
 4331 02e4 00000000 		.word	movement_state
 4332 02e8 00000000 		.word	initial_pos_valid
 4333 02ec 00000000 		.word	system_state
 4334 02f0 00000000 		.word	initial_x_pos
 4335 02f4 00000000 		.word	initial_y_pos
 4336 02f8 00000000 		.word	instructionCount
 4337 02fc 00000000 		.word	instructions
 4338 0300 00000000 		.word	sensorsDisabled
 4339 0304 A4000000 		.word	.LC12
 4340 0308 C4000000 		.word	.LC13
 4341 030c 00000000 		.word	deadzone
 4342 0310 D8000000 		.word	.LC14
 4343              		.cfi_endproc
 4344              	.LFE102:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 96


 4345              		.size	main, .-main
 4346              		.section	.text.usbPutString,"ax",%progbits
 4347              		.align	2
 4348              		.global	usbPutString
 4349              		.thumb
 4350              		.thumb_func
 4351              		.type	usbPutString, %function
 4352              	usbPutString:
 4353              	.LFB103:
1013:.\main.c      **** }
1014:.\main.c      **** //* ========================================
1015:.\main.c      **** void usbPutString(char *s)
1016:.\main.c      **** {
 4354              		.loc 1 1016 0
 4355              		.cfi_startproc
 4356              		@ args = 0, pretend = 0, frame = 16
 4357              		@ frame_needed = 1, uses_anonymous_args = 0
 4358 0000 80B5     		push	{r7, lr}
 4359              		.cfi_def_cfa_offset 8
 4360              		.cfi_offset 7, -8
 4361              		.cfi_offset 14, -4
 4362 0002 84B0     		sub	sp, sp, #16
 4363              		.cfi_def_cfa_offset 24
 4364 0004 00AF     		add	r7, sp, #0
 4365              		.cfi_def_cfa_register 7
 4366 0006 7860     		str	r0, [r7, #4]
1017:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1018:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1019:.\main.c      **** //  length to 62 char (63rd char is a '!')
1020:.\main.c      ****     if (USE_USB && portOpen)    
 4367              		.loc 1 1020 0
 4368 0008 154B     		ldr	r3, .L233
 4369 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4370 000c 002B     		cmp	r3, #0
 4371 000e 23D0     		beq	.L229
 4372              	.LBB10:
1021:.\main.c      ****     {
1022:.\main.c      ****             uint32 cnt = 0;
 4373              		.loc 1 1022 0
 4374 0010 0023     		movs	r3, #0
 4375 0012 FB60     		str	r3, [r7, #12]
1023:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4376              		.loc 1 1023 0
 4377 0014 0AE0     		b	.L231
 4378              	.L232:
1024:.\main.c      ****             {
1025:.\main.c      ****                 cnt++;
 4379              		.loc 1 1025 0
 4380 0016 FB68     		ldr	r3, [r7, #12]
 4381 0018 0133     		adds	r3, r3, #1
 4382 001a FB60     		str	r3, [r7, #12]
1026:.\main.c      ****                 if(cnt == 3000000){
 4383              		.loc 1 1026 0
 4384 001c FB68     		ldr	r3, [r7, #12]
 4385 001e 114A     		ldr	r2, .L233+4
 4386 0020 9342     		cmp	r3, r2
 4387 0022 03D1     		bne	.L231
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 97


1027:.\main.c      ****                     portOpen = 0;
 4388              		.loc 1 1027 0
 4389 0024 0E4B     		ldr	r3, .L233
 4390 0026 0022     		movs	r2, #0
 4391 0028 1A70     		strb	r2, [r3]
1028:.\main.c      ****                     return;
 4392              		.loc 1 1028 0
 4393 002a 15E0     		b	.L229
 4394              	.L231:
1023:.\main.c      ****             {
 4395              		.loc 1 1023 0
 4396 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4397 0030 0346     		mov	r3, r0
 4398 0032 002B     		cmp	r3, #0
 4399 0034 EFD0     		beq	.L232
1029:.\main.c      ****                 }
1030:.\main.c      ****             }
1031:.\main.c      ****             s[63]='\0';
 4400              		.loc 1 1031 0
 4401 0036 7B68     		ldr	r3, [r7, #4]
 4402 0038 3F33     		adds	r3, r3, #63
 4403 003a 0022     		movs	r2, #0
 4404 003c 1A70     		strb	r2, [r3]
1032:.\main.c      ****             s[62]='!';
 4405              		.loc 1 1032 0
 4406 003e 7B68     		ldr	r3, [r7, #4]
 4407 0040 3E33     		adds	r3, r3, #62
 4408 0042 2122     		movs	r2, #33
 4409 0044 1A70     		strb	r2, [r3]
1033:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4410              		.loc 1 1033 0
 4411 0046 7868     		ldr	r0, [r7, #4]
 4412 0048 FFF7FEFF 		bl	strlen
 4413 004c 0346     		mov	r3, r0
 4414 004e 9BB2     		uxth	r3, r3
 4415 0050 7868     		ldr	r0, [r7, #4]
 4416 0052 1946     		mov	r1, r3
 4417 0054 FFF7FEFF 		bl	USBUART_PutData
 4418              	.L229:
 4419              	.LBE10:
1034:.\main.c      ****     }
1035:.\main.c      **** }
 4420              		.loc 1 1035 0
 4421 0058 1037     		adds	r7, r7, #16
 4422              		.cfi_def_cfa_offset 8
 4423 005a BD46     		mov	sp, r7
 4424              		.cfi_def_cfa_register 13
 4425              		@ sp needed
 4426 005c 80BD     		pop	{r7, pc}
 4427              	.L234:
 4428 005e 00BF     		.align	2
 4429              	.L233:
 4430 0060 00000000 		.word	portOpen
 4431 0064 C0C62D00 		.word	3000000
 4432              		.cfi_endproc
 4433              	.LFE103:
 4434              		.size	usbPutString, .-usbPutString
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 98


 4435              		.section	.text.usbPutChar,"ax",%progbits
 4436              		.align	2
 4437              		.global	usbPutChar
 4438              		.thumb
 4439              		.thumb_func
 4440              		.type	usbPutChar, %function
 4441              	usbPutChar:
 4442              	.LFB104:
1036:.\main.c      **** //* ========================================
1037:.\main.c      **** void usbPutChar(char c)
1038:.\main.c      **** {
 4443              		.loc 1 1038 0
 4444              		.cfi_startproc
 4445              		@ args = 0, pretend = 0, frame = 16
 4446              		@ frame_needed = 1, uses_anonymous_args = 0
 4447 0000 80B5     		push	{r7, lr}
 4448              		.cfi_def_cfa_offset 8
 4449              		.cfi_offset 7, -8
 4450              		.cfi_offset 14, -4
 4451 0002 84B0     		sub	sp, sp, #16
 4452              		.cfi_def_cfa_offset 24
 4453 0004 00AF     		add	r7, sp, #0
 4454              		.cfi_def_cfa_register 7
 4455 0006 0346     		mov	r3, r0
 4456 0008 FB71     		strb	r3, [r7, #7]
1039:.\main.c      ****     if (USE_USB && portOpen)    
 4457              		.loc 1 1039 0
 4458 000a 0F4B     		ldr	r3, .L239
 4459 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4460 000e 002B     		cmp	r3, #0
 4461 0010 16D0     		beq	.L235
 4462              	.LBB11:
1040:.\main.c      ****     {    
1041:.\main.c      ****         uint32 cnt = 0;
 4463              		.loc 1 1041 0
 4464 0012 0023     		movs	r3, #0
 4465 0014 FB60     		str	r3, [r7, #12]
1042:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4466              		.loc 1 1042 0
 4467 0016 0AE0     		b	.L237
 4468              	.L238:
1043:.\main.c      ****             cnt++;
 4469              		.loc 1 1043 0
 4470 0018 FB68     		ldr	r3, [r7, #12]
 4471 001a 0133     		adds	r3, r3, #1
 4472 001c FB60     		str	r3, [r7, #12]
1044:.\main.c      ****             if(cnt == 3000000){
 4473              		.loc 1 1044 0
 4474 001e FB68     		ldr	r3, [r7, #12]
 4475 0020 0A4A     		ldr	r2, .L239+4
 4476 0022 9342     		cmp	r3, r2
 4477 0024 03D1     		bne	.L237
1045:.\main.c      ****                 portOpen = 0;
 4478              		.loc 1 1045 0
 4479 0026 084B     		ldr	r3, .L239
 4480 0028 0022     		movs	r2, #0
 4481 002a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 99


1046:.\main.c      ****                 return;
 4482              		.loc 1 1046 0
 4483 002c 08E0     		b	.L235
 4484              	.L237:
1042:.\main.c      ****             cnt++;
 4485              		.loc 1 1042 0
 4486 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4487 0032 0346     		mov	r3, r0
 4488 0034 002B     		cmp	r3, #0
 4489 0036 EFD0     		beq	.L238
1047:.\main.c      ****             }
1048:.\main.c      ****         }
1049:.\main.c      ****         USBUART_PutChar(c);
 4490              		.loc 1 1049 0
 4491 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4492 003a 1846     		mov	r0, r3
 4493 003c FFF7FEFF 		bl	USBUART_PutChar
 4494              	.L235:
 4495              	.LBE11:
1050:.\main.c      ****     }    
1051:.\main.c      **** }
 4496              		.loc 1 1051 0
 4497 0040 1037     		adds	r7, r7, #16
 4498              		.cfi_def_cfa_offset 8
 4499 0042 BD46     		mov	sp, r7
 4500              		.cfi_def_cfa_register 13
 4501              		@ sp needed
 4502 0044 80BD     		pop	{r7, pc}
 4503              	.L240:
 4504 0046 00BF     		.align	2
 4505              	.L239:
 4506 0048 00000000 		.word	portOpen
 4507 004c C0C62D00 		.word	3000000
 4508              		.cfi_endproc
 4509              	.LFE104:
 4510              		.size	usbPutChar, .-usbPutChar
 4511              		.section	.text.uart_set_PWM,"ax",%progbits
 4512              		.align	2
 4513              		.global	uart_set_PWM
 4514              		.thumb
 4515              		.thumb_func
 4516              		.type	uart_set_PWM, %function
 4517              	uart_set_PWM:
 4518              	.LFB105:
1052:.\main.c      **** //* ========================================
1053:.\main.c      **** 
1054:.\main.c      **** void uart_set_PWM()
1055:.\main.c      **** {
 4519              		.loc 1 1055 0
 4520              		.cfi_startproc
 4521              		@ args = 0, pretend = 0, frame = 8
 4522              		@ frame_needed = 1, uses_anonymous_args = 0
 4523 0000 80B5     		push	{r7, lr}
 4524              		.cfi_def_cfa_offset 8
 4525              		.cfi_offset 7, -8
 4526              		.cfi_offset 14, -4
 4527 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 100


 4528              		.cfi_def_cfa_offset 16
 4529 0004 00AF     		add	r7, sp, #0
 4530              		.cfi_def_cfa_register 7
1056:.\main.c      ****     uint8 c;
1057:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 4531              		.loc 1 1057 0
 4532 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 4533 000a 0346     		mov	r3, r0
 4534 000c 002B     		cmp	r3, #0
 4535 000e 11D0     		beq	.L241
1058:.\main.c      ****        {  
1059:.\main.c      ****             c = USBUART_GetChar();
 4536              		.loc 1 1059 0
 4537 0010 FFF7FEFF 		bl	USBUART_GetChar
 4538 0014 0346     		mov	r3, r0
 4539 0016 FB71     		strb	r3, [r7, #7]
1060:.\main.c      ****             
1061:.\main.c      ****             if(c <= 100 && c > 0){
 4540              		.loc 1 1061 0
 4541 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4542 001a 642B     		cmp	r3, #100
 4543 001c 0AD8     		bhi	.L241
 4544              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4545 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4546 0020 002B     		cmp	r3, #0
 4547 0022 07D0     		beq	.L241
1062:.\main.c      ****                 PWM_1_WriteCompare(c);
 4548              		.loc 1 1062 0 is_stmt 1
 4549 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4550 0026 1846     		mov	r0, r3
 4551 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
1063:.\main.c      ****                 usbPutString(c);
 4552              		.loc 1 1063 0
 4553 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4554 002e 1846     		mov	r0, r3
 4555 0030 FFF7FEFF 		bl	usbPutString
 4556              	.L241:
1064:.\main.c      ****             }
1065:.\main.c      ****        }
1066:.\main.c      **** }
 4557              		.loc 1 1066 0
 4558 0034 0837     		adds	r7, r7, #8
 4559              		.cfi_def_cfa_offset 8
 4560 0036 BD46     		mov	sp, r7
 4561              		.cfi_def_cfa_register 13
 4562              		@ sp needed
 4563 0038 80BD     		pop	{r7, pc}
 4564              		.cfi_endproc
 4565              	.LFE105:
 4566              		.size	uart_set_PWM, .-uart_set_PWM
 4567 003a 00BF     		.text
 4568              	.Letext0:
 4569              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4570              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4571              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4572              		.file 5 ".\\vars.h"
 4573              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 101


 4574              		.file 7 ".\\pathfinder.h"
 4575              		.section	.debug_info,"",%progbits
 4576              	.Ldebug_info0:
 4577 0000 C80D0000 		.4byte	0xdc8
 4578 0004 0400     		.2byte	0x4
 4579 0006 00000000 		.4byte	.Ldebug_abbrev0
 4580 000a 04       		.byte	0x4
 4581 000b 01       		.uleb128 0x1
 4582 000c 80040000 		.4byte	.LASF191
 4583 0010 01       		.byte	0x1
 4584 0011 1A090000 		.4byte	.LASF192
 4585 0015 7B020000 		.4byte	.LASF193
 4586 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4587 001d 00000000 		.4byte	0
 4588 0021 00000000 		.4byte	.Ldebug_line0
 4589 0025 02       		.uleb128 0x2
 4590 0026 01       		.byte	0x1
 4591 0027 06       		.byte	0x6
 4592 0028 4F080000 		.4byte	.LASF0
 4593 002c 02       		.uleb128 0x2
 4594 002d 01       		.byte	0x1
 4595 002e 08       		.byte	0x8
 4596 002f A6070000 		.4byte	.LASF1
 4597 0033 02       		.uleb128 0x2
 4598 0034 02       		.byte	0x2
 4599 0035 05       		.byte	0x5
 4600 0036 2F060000 		.4byte	.LASF2
 4601 003a 02       		.uleb128 0x2
 4602 003b 02       		.byte	0x2
 4603 003c 07       		.byte	0x7
 4604 003d 5B080000 		.4byte	.LASF3
 4605 0041 03       		.uleb128 0x3
 4606 0042 A0000000 		.4byte	.LASF11
 4607 0046 02       		.byte	0x2
 4608 0047 3F       		.byte	0x3f
 4609 0048 4C000000 		.4byte	0x4c
 4610 004c 02       		.uleb128 0x2
 4611 004d 04       		.byte	0x4
 4612 004e 05       		.byte	0x5
 4613 004f 63060000 		.4byte	.LASF4
 4614 0053 02       		.uleb128 0x2
 4615 0054 04       		.byte	0x4
 4616 0055 07       		.byte	0x7
 4617 0056 51070000 		.4byte	.LASF5
 4618 005a 02       		.uleb128 0x2
 4619 005b 08       		.byte	0x8
 4620 005c 05       		.byte	0x5
 4621 005d 4A040000 		.4byte	.LASF6
 4622 0061 02       		.uleb128 0x2
 4623 0062 08       		.byte	0x8
 4624 0063 07       		.byte	0x7
 4625 0064 4B020000 		.4byte	.LASF7
 4626 0068 04       		.uleb128 0x4
 4627 0069 04       		.byte	0x4
 4628 006a 05       		.byte	0x5
 4629 006b 696E7400 		.ascii	"int\000"
 4630 006f 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 102


 4631 0070 04       		.byte	0x4
 4632 0071 07       		.byte	0x7
 4633 0072 88000000 		.4byte	.LASF8
 4634 0076 02       		.uleb128 0x2
 4635 0077 04       		.byte	0x4
 4636 0078 07       		.byte	0x7
 4637 0079 48070000 		.4byte	.LASF9
 4638 007d 05       		.uleb128 0x5
 4639 007e 04       		.byte	0x4
 4640 007f 83000000 		.4byte	0x83
 4641 0083 02       		.uleb128 0x2
 4642 0084 01       		.byte	0x1
 4643 0085 08       		.byte	0x8
 4644 0086 9F030000 		.4byte	.LASF10
 4645 008a 03       		.uleb128 0x3
 4646 008b 6F070000 		.4byte	.LASF12
 4647 008f 03       		.byte	0x3
 4648 0090 2C       		.byte	0x2c
 4649 0091 41000000 		.4byte	0x41
 4650 0095 06       		.uleb128 0x6
 4651 0096 A7080000 		.4byte	.LASF13
 4652 009a 04       		.byte	0x4
 4653 009b 9201     		.2byte	0x192
 4654 009d 2C000000 		.4byte	0x2c
 4655 00a1 06       		.uleb128 0x6
 4656 00a2 E7030000 		.4byte	.LASF14
 4657 00a6 04       		.byte	0x4
 4658 00a7 9301     		.2byte	0x193
 4659 00a9 3A000000 		.4byte	0x3a
 4660 00ad 06       		.uleb128 0x6
 4661 00ae 51050000 		.4byte	.LASF15
 4662 00b2 04       		.byte	0x4
 4663 00b3 9401     		.2byte	0x194
 4664 00b5 53000000 		.4byte	0x53
 4665 00b9 06       		.uleb128 0x6
 4666 00ba EE030000 		.4byte	.LASF16
 4667 00be 04       		.byte	0x4
 4668 00bf 9501     		.2byte	0x195
 4669 00c1 25000000 		.4byte	0x25
 4670 00c5 06       		.uleb128 0x6
 4671 00c6 AA000000 		.4byte	.LASF17
 4672 00ca 04       		.byte	0x4
 4673 00cb 9601     		.2byte	0x196
 4674 00cd 33000000 		.4byte	0x33
 4675 00d1 02       		.uleb128 0x2
 4676 00d2 04       		.byte	0x4
 4677 00d3 04       		.byte	0x4
 4678 00d4 EB010000 		.4byte	.LASF18
 4679 00d8 02       		.uleb128 0x2
 4680 00d9 08       		.byte	0x8
 4681 00da 04       		.byte	0x4
 4682 00db AD080000 		.4byte	.LASF19
 4683 00df 02       		.uleb128 0x2
 4684 00e0 08       		.byte	0x8
 4685 00e1 04       		.byte	0x4
 4686 00e2 CD050000 		.4byte	.LASF20
 4687 00e6 07       		.uleb128 0x7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 103


 4688 00e7 E7070000 		.4byte	.LASF29
 4689 00eb 01       		.byte	0x1
 4690 00ec 05       		.byte	0x5
 4691 00ed 5B       		.byte	0x5b
 4692 00ee 23010000 		.4byte	0x123
 4693 00f2 08       		.uleb128 0x8
 4694 00f3 0A020000 		.4byte	.LASF21
 4695 00f7 00       		.sleb128 0
 4696 00f8 08       		.uleb128 0x8
 4697 00f9 BD000000 		.4byte	.LASF22
 4698 00fd 01       		.sleb128 1
 4699 00fe 08       		.uleb128 0x8
 4700 00ff 1C000000 		.4byte	.LASF23
 4701 0103 02       		.sleb128 2
 4702 0104 08       		.uleb128 0x8
 4703 0105 BC050000 		.4byte	.LASF24
 4704 0109 03       		.sleb128 3
 4705 010a 08       		.uleb128 0x8
 4706 010b E5000000 		.4byte	.LASF25
 4707 010f 04       		.sleb128 4
 4708 0110 08       		.uleb128 0x8
 4709 0111 BD010000 		.4byte	.LASF26
 4710 0115 05       		.sleb128 5
 4711 0116 08       		.uleb128 0x8
 4712 0117 D3060000 		.4byte	.LASF27
 4713 011b 06       		.sleb128 6
 4714 011c 08       		.uleb128 0x8
 4715 011d E7080000 		.4byte	.LASF28
 4716 0121 07       		.sleb128 7
 4717 0122 00       		.byte	0
 4718 0123 07       		.uleb128 0x7
 4719 0124 20010000 		.4byte	.LASF30
 4720 0128 01       		.byte	0x1
 4721 0129 05       		.byte	0x5
 4722 012a 5C       		.byte	0x5c
 4723 012b 60010000 		.4byte	0x160
 4724 012f 08       		.uleb128 0x8
 4725 0130 A5060000 		.4byte	.LASF31
 4726 0134 00       		.sleb128 0
 4727 0135 08       		.uleb128 0x8
 4728 0136 11040000 		.4byte	.LASF32
 4729 013a 01       		.sleb128 1
 4730 013b 08       		.uleb128 0x8
 4731 013c 7A060000 		.4byte	.LASF33
 4732 0140 02       		.sleb128 2
 4733 0141 08       		.uleb128 0x8
 4734 0142 77010000 		.4byte	.LASF34
 4735 0146 03       		.sleb128 3
 4736 0147 08       		.uleb128 0x8
 4737 0148 80080000 		.4byte	.LASF35
 4738 014c 04       		.sleb128 4
 4739 014d 08       		.uleb128 0x8
 4740 014e C5080000 		.4byte	.LASF36
 4741 0152 05       		.sleb128 5
 4742 0153 08       		.uleb128 0x8
 4743 0154 31000000 		.4byte	.LASF37
 4744 0158 06       		.sleb128 6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 104


 4745 0159 08       		.uleb128 0x8
 4746 015a C6060000 		.4byte	.LASF38
 4747 015e 07       		.sleb128 7
 4748 015f 00       		.byte	0
 4749 0160 09       		.uleb128 0x9
 4750 0161 71050000 		.4byte	.LASF194
 4751 0165 20       		.byte	0x20
 4752 0166 05       		.byte	0x5
 4753 0167 62       		.byte	0x62
 4754 0168 39020000 		.4byte	0x239
 4755 016c 0A       		.uleb128 0xa
 4756 016d 8F050000 		.4byte	.LASF39
 4757 0171 05       		.byte	0x5
 4758 0172 63       		.byte	0x63
 4759 0173 B9000000 		.4byte	0xb9
 4760 0177 00       		.byte	0
 4761 0178 0A       		.uleb128 0xa
 4762 0179 04020000 		.4byte	.LASF40
 4763 017d 05       		.byte	0x5
 4764 017e 64       		.byte	0x64
 4765 017f 95000000 		.4byte	0x95
 4766 0183 01       		.byte	0x1
 4767 0184 0A       		.uleb128 0xa
 4768 0185 7E070000 		.4byte	.LASF41
 4769 0189 05       		.byte	0x5
 4770 018a 65       		.byte	0x65
 4771 018b C5000000 		.4byte	0xc5
 4772 018f 02       		.byte	0x2
 4773 0190 0A       		.uleb128 0xa
 4774 0191 73030000 		.4byte	.LASF42
 4775 0195 05       		.byte	0x5
 4776 0196 66       		.byte	0x66
 4777 0197 C5000000 		.4byte	0xc5
 4778 019b 04       		.byte	0x4
 4779 019c 0A       		.uleb128 0xa
 4780 019d 6E080000 		.4byte	.LASF43
 4781 01a1 05       		.byte	0x5
 4782 01a2 67       		.byte	0x67
 4783 01a3 C5000000 		.4byte	0xc5
 4784 01a7 06       		.byte	0x6
 4785 01a8 0A       		.uleb128 0xa
 4786 01a9 ED080000 		.4byte	.LASF44
 4787 01ad 05       		.byte	0x5
 4788 01ae 68       		.byte	0x68
 4789 01af C5000000 		.4byte	0xc5
 4790 01b3 08       		.byte	0x8
 4791 01b4 0A       		.uleb128 0xa
 4792 01b5 17050000 		.4byte	.LASF45
 4793 01b9 05       		.byte	0x5
 4794 01ba 69       		.byte	0x69
 4795 01bb C5000000 		.4byte	0xc5
 4796 01bf 0A       		.byte	0xa
 4797 01c0 0A       		.uleb128 0xa
 4798 01c1 A4030000 		.4byte	.LASF46
 4799 01c5 05       		.byte	0x5
 4800 01c6 6A       		.byte	0x6a
 4801 01c7 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 105


 4802 01cb 0C       		.byte	0xc
 4803 01cc 0A       		.uleb128 0xa
 4804 01cd 9E050000 		.4byte	.LASF47
 4805 01d1 05       		.byte	0x5
 4806 01d2 6B       		.byte	0x6b
 4807 01d3 C5000000 		.4byte	0xc5
 4808 01d7 0E       		.byte	0xe
 4809 01d8 0A       		.uleb128 0xa
 4810 01d9 65040000 		.4byte	.LASF48
 4811 01dd 05       		.byte	0x5
 4812 01de 6C       		.byte	0x6c
 4813 01df C5000000 		.4byte	0xc5
 4814 01e3 10       		.byte	0x10
 4815 01e4 0A       		.uleb128 0xa
 4816 01e5 08070000 		.4byte	.LASF49
 4817 01e9 05       		.byte	0x5
 4818 01ea 6D       		.byte	0x6d
 4819 01eb C5000000 		.4byte	0xc5
 4820 01ef 12       		.byte	0x12
 4821 01f0 0A       		.uleb128 0xa
 4822 01f1 11090000 		.4byte	.LASF50
 4823 01f5 05       		.byte	0x5
 4824 01f6 6E       		.byte	0x6e
 4825 01f7 C5000000 		.4byte	0xc5
 4826 01fb 14       		.byte	0x14
 4827 01fc 0A       		.uleb128 0xa
 4828 01fd F3030000 		.4byte	.LASF51
 4829 0201 05       		.byte	0x5
 4830 0202 6F       		.byte	0x6f
 4831 0203 C5000000 		.4byte	0xc5
 4832 0207 16       		.byte	0x16
 4833 0208 0A       		.uleb128 0xa
 4834 0209 18010000 		.4byte	.LASF52
 4835 020d 05       		.byte	0x5
 4836 020e 70       		.byte	0x70
 4837 020f C5000000 		.4byte	0xc5
 4838 0213 18       		.byte	0x18
 4839 0214 0A       		.uleb128 0xa
 4840 0215 DF030000 		.4byte	.LASF53
 4841 0219 05       		.byte	0x5
 4842 021a 71       		.byte	0x71
 4843 021b C5000000 		.4byte	0xc5
 4844 021f 1A       		.byte	0x1a
 4845 0220 0A       		.uleb128 0xa
 4846 0221 0E050000 		.4byte	.LASF54
 4847 0225 05       		.byte	0x5
 4848 0226 72       		.byte	0x72
 4849 0227 C5000000 		.4byte	0xc5
 4850 022b 1C       		.byte	0x1c
 4851 022c 0A       		.uleb128 0xa
 4852 022d D4010000 		.4byte	.LASF55
 4853 0231 05       		.byte	0x5
 4854 0232 73       		.byte	0x73
 4855 0233 C5000000 		.4byte	0xc5
 4856 0237 1E       		.byte	0x1e
 4857 0238 00       		.byte	0
 4858 0239 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 106


 4859 023a CD080000 		.4byte	.LASF61
 4860 023e 01       		.byte	0x1
 4861 023f 4E       		.byte	0x4e
 4862 0240 00000000 		.4byte	.LFB63
 4863 0244 60010000 		.4byte	.LFE63-.LFB63
 4864 0248 01       		.uleb128 0x1
 4865 0249 9C       		.byte	0x9c
 4866 024a 83020000 		.4byte	0x283
 4867 024e 0C       		.uleb128 0xc
 4868 024f 10000000 		.4byte	.LBB2
 4869 0253 34010000 		.4byte	.LBE2-.LBB2
 4870 0257 0D       		.uleb128 0xd
 4871 0258 0B010000 		.4byte	.LASF56
 4872 025c 01       		.byte	0x1
 4873 025d 54       		.byte	0x54
 4874 025e A1000000 		.4byte	0xa1
 4875 0262 02       		.uleb128 0x2
 4876 0263 91       		.byte	0x91
 4877 0264 76       		.sleb128 -10
 4878 0265 0D       		.uleb128 0xd
 4879 0266 63070000 		.4byte	.LASF57
 4880 026a 01       		.byte	0x1
 4881 026b 55       		.byte	0x55
 4882 026c 83020000 		.4byte	0x283
 4883 0270 02       		.uleb128 0x2
 4884 0271 91       		.byte	0x91
 4885 0272 68       		.sleb128 -24
 4886 0273 0D       		.uleb128 0xd
 4887 0274 10020000 		.4byte	.LASF58
 4888 0278 01       		.byte	0x1
 4889 0279 56       		.byte	0x56
 4890 027a 83020000 		.4byte	0x283
 4891 027e 02       		.uleb128 0x2
 4892 027f 91       		.byte	0x91
 4893 0280 5C       		.sleb128 -36
 4894 0281 00       		.byte	0
 4895 0282 00       		.byte	0
 4896 0283 0E       		.uleb128 0xe
 4897 0284 83000000 		.4byte	0x83
 4898 0288 93020000 		.4byte	0x293
 4899 028c 0F       		.uleb128 0xf
 4900 028d 76000000 		.4byte	0x76
 4901 0291 0B       		.byte	0xb
 4902 0292 00       		.byte	0
 4903 0293 10       		.uleb128 0x10
 4904 0294 BD030000 		.4byte	.LASF59
 4905 0298 01       		.byte	0x1
 4906 0299 8F       		.byte	0x8f
 4907 029a 00000000 		.4byte	.LFB64
 4908 029e 18000000 		.4byte	.LFE64-.LFB64
 4909 02a2 01       		.uleb128 0x1
 4910 02a3 9C       		.byte	0x9c
 4911 02a4 B7020000 		.4byte	0x2b7
 4912 02a8 11       		.uleb128 0x11
 4913 02a9 64697200 		.ascii	"dir\000"
 4914 02ad 01       		.byte	0x1
 4915 02ae 8F       		.byte	0x8f
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 107


 4916 02af 95000000 		.4byte	0x95
 4917 02b3 02       		.uleb128 0x2
 4918 02b4 91       		.byte	0x91
 4919 02b5 77       		.sleb128 -9
 4920 02b6 00       		.byte	0
 4921 02b7 10       		.uleb128 0x10
 4922 02b8 05040000 		.4byte	.LASF60
 4923 02bc 01       		.byte	0x1
 4924 02bd 94       		.byte	0x94
 4925 02be 00000000 		.4byte	.LFB65
 4926 02c2 18000000 		.4byte	.LFE65-.LFB65
 4927 02c6 01       		.uleb128 0x1
 4928 02c7 9C       		.byte	0x9c
 4929 02c8 DB020000 		.4byte	0x2db
 4930 02cc 11       		.uleb128 0x11
 4931 02cd 64697200 		.ascii	"dir\000"
 4932 02d1 01       		.byte	0x1
 4933 02d2 94       		.byte	0x94
 4934 02d3 95000000 		.4byte	0x95
 4935 02d7 02       		.uleb128 0x2
 4936 02d8 91       		.byte	0x91
 4937 02d9 77       		.sleb128 -9
 4938 02da 00       		.byte	0
 4939 02db 12       		.uleb128 0x12
 4940 02dc ED070000 		.4byte	.LASF62
 4941 02e0 01       		.byte	0x1
 4942 02e1 99       		.byte	0x99
 4943 02e2 00000000 		.4byte	.LFB66
 4944 02e6 54000000 		.4byte	.LFE66-.LFB66
 4945 02ea 01       		.uleb128 0x1
 4946 02eb 9C       		.byte	0x9c
 4947 02ec FF020000 		.4byte	0x2ff
 4948 02f0 13       		.uleb128 0x13
 4949 02f1 6D657300 		.ascii	"mes\000"
 4950 02f5 01       		.byte	0x1
 4951 02f6 9E       		.byte	0x9e
 4952 02f7 FF020000 		.4byte	0x2ff
 4953 02fb 02       		.uleb128 0x2
 4954 02fc 91       		.byte	0x91
 4955 02fd 68       		.sleb128 -24
 4956 02fe 00       		.byte	0
 4957 02ff 0E       		.uleb128 0xe
 4958 0300 83000000 		.4byte	0x83
 4959 0304 0F030000 		.4byte	0x30f
 4960 0308 0F       		.uleb128 0xf
 4961 0309 76000000 		.4byte	0x76
 4962 030d 0F       		.byte	0xf
 4963 030e 00       		.byte	0
 4964 030f 10       		.uleb128 0x10
 4965 0310 F1010000 		.4byte	.LASF63
 4966 0314 01       		.byte	0x1
 4967 0315 A3       		.byte	0xa3
 4968 0316 00000000 		.4byte	.LFB67
 4969 031a F4000000 		.4byte	.LFE67-.LFB67
 4970 031e 01       		.uleb128 0x1
 4971 031f 9C       		.byte	0x9c
 4972 0320 5D030000 		.4byte	0x35d
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 108


 4973 0324 14       		.uleb128 0x14
 4974 0325 E1060000 		.4byte	.LASF64
 4975 0329 01       		.byte	0x1
 4976 032a A3       		.byte	0xa3
 4977 032b D8000000 		.4byte	0xd8
 4978 032f 02       		.uleb128 0x2
 4979 0330 91       		.byte	0x91
 4980 0331 68       		.sleb128 -24
 4981 0332 14       		.uleb128 0x14
 4982 0333 32040000 		.4byte	.LASF65
 4983 0337 01       		.byte	0x1
 4984 0338 A3       		.byte	0xa3
 4985 0339 D8000000 		.4byte	0xd8
 4986 033d 02       		.uleb128 0x2
 4987 033e 91       		.byte	0x91
 4988 033f 60       		.sleb128 -32
 4989 0340 0D       		.uleb128 0xd
 4990 0341 29020000 		.4byte	.LASF66
 4991 0345 01       		.byte	0x1
 4992 0346 B8       		.byte	0xb8
 4993 0347 C5000000 		.4byte	0xc5
 4994 034b 02       		.uleb128 0x2
 4995 034c 91       		.byte	0x91
 4996 034d 76       		.sleb128 -10
 4997 034e 0D       		.uleb128 0xd
 4998 034f 65050000 		.4byte	.LASF67
 4999 0353 01       		.byte	0x1
 5000 0354 B9       		.byte	0xb9
 5001 0355 C5000000 		.4byte	0xc5
 5002 0359 02       		.uleb128 0x2
 5003 035a 91       		.byte	0x91
 5004 035b 74       		.sleb128 -12
 5005 035c 00       		.byte	0
 5006 035d 15       		.uleb128 0x15
 5007 035e FE070000 		.4byte	.LASF68
 5008 0362 01       		.byte	0x1
 5009 0363 BF       		.byte	0xbf
 5010 0364 00000000 		.4byte	.LFB68
 5011 0368 18000000 		.4byte	.LFE68-.LFB68
 5012 036c 01       		.uleb128 0x1
 5013 036d 9C       		.byte	0x9c
 5014 036e 15       		.uleb128 0x15
 5015 036f 31090000 		.4byte	.LASF69
 5016 0373 01       		.byte	0x1
 5017 0374 C5       		.byte	0xc5
 5018 0375 00000000 		.4byte	.LFB69
 5019 0379 18000000 		.4byte	.LFE69-.LFB69
 5020 037d 01       		.uleb128 0x1
 5021 037e 9C       		.byte	0x9c
 5022 037f 15       		.uleb128 0x15
 5023 0380 89070000 		.4byte	.LASF70
 5024 0384 01       		.byte	0x1
 5025 0385 CB       		.byte	0xcb
 5026 0386 00000000 		.4byte	.LFB70
 5027 038a 22000000 		.4byte	.LFE70-.LFB70
 5028 038e 01       		.uleb128 0x1
 5029 038f 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 109


 5030 0390 15       		.uleb128 0x15
 5031 0391 34020000 		.4byte	.LASF71
 5032 0395 01       		.byte	0x1
 5033 0396 D1       		.byte	0xd1
 5034 0397 00000000 		.4byte	.LFB71
 5035 039b 1C000000 		.4byte	.LFE71-.LFB71
 5036 039f 01       		.uleb128 0x1
 5037 03a0 9C       		.byte	0x9c
 5038 03a1 15       		.uleb128 0x15
 5039 03a2 FE060000 		.4byte	.LASF72
 5040 03a6 01       		.byte	0x1
 5041 03a7 D6       		.byte	0xd6
 5042 03a8 00000000 		.4byte	.LFB72
 5043 03ac 28000000 		.4byte	.LFE72-.LFB72
 5044 03b0 01       		.uleb128 0x1
 5045 03b1 9C       		.byte	0x9c
 5046 03b2 15       		.uleb128 0x15
 5047 03b3 42020000 		.4byte	.LASF73
 5048 03b7 01       		.byte	0x1
 5049 03b8 DB       		.byte	0xdb
 5050 03b9 00000000 		.4byte	.LFB73
 5051 03bd 2C000000 		.4byte	.LFE73-.LFB73
 5052 03c1 01       		.uleb128 0x1
 5053 03c2 9C       		.byte	0x9c
 5054 03c3 15       		.uleb128 0x15
 5055 03c4 D9030000 		.4byte	.LASF74
 5056 03c8 01       		.byte	0x1
 5057 03c9 E0       		.byte	0xe0
 5058 03ca 00000000 		.4byte	.LFB74
 5059 03ce 44000000 		.4byte	.LFE74-.LFB74
 5060 03d2 01       		.uleb128 0x1
 5061 03d3 9C       		.byte	0x9c
 5062 03d4 15       		.uleb128 0x15
 5063 03d5 BA020000 		.4byte	.LASF75
 5064 03d9 01       		.byte	0x1
 5065 03da E5       		.byte	0xe5
 5066 03db 00000000 		.4byte	.LFB75
 5067 03df 38000000 		.4byte	.LFE75-.LFB75
 5068 03e3 01       		.uleb128 0x1
 5069 03e4 9C       		.byte	0x9c
 5070 03e5 15       		.uleb128 0x15
 5071 03e6 6C060000 		.4byte	.LASF76
 5072 03ea 01       		.byte	0x1
 5073 03eb EE       		.byte	0xee
 5074 03ec 00000000 		.4byte	.LFB76
 5075 03f0 38000000 		.4byte	.LFE76-.LFB76
 5076 03f4 01       		.uleb128 0x1
 5077 03f5 9C       		.byte	0x9c
 5078 03f6 15       		.uleb128 0x15
 5079 03f7 44060000 		.4byte	.LASF77
 5080 03fb 01       		.byte	0x1
 5081 03fc F7       		.byte	0xf7
 5082 03fd 00000000 		.4byte	.LFB77
 5083 0401 38000000 		.4byte	.LFE77-.LFB77
 5084 0405 01       		.uleb128 0x1
 5085 0406 9C       		.byte	0x9c
 5086 0407 16       		.uleb128 0x16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 110


 5087 0408 C8010000 		.4byte	.LASF78
 5088 040c 01       		.byte	0x1
 5089 040d 0001     		.2byte	0x100
 5090 040f 00000000 		.4byte	.LFB78
 5091 0413 14000000 		.4byte	.LFE78-.LFB78
 5092 0417 01       		.uleb128 0x1
 5093 0418 9C       		.byte	0x9c
 5094 0419 17       		.uleb128 0x17
 5095 041a D0020000 		.4byte	.LASF79
 5096 041e 01       		.byte	0x1
 5097 041f 0501     		.2byte	0x105
 5098 0421 00000000 		.4byte	.LFB79
 5099 0425 18000000 		.4byte	.LFE79-.LFB79
 5100 0429 01       		.uleb128 0x1
 5101 042a 9C       		.byte	0x9c
 5102 042b 17       		.uleb128 0x17
 5103 042c 6D040000 		.4byte	.LASF80
 5104 0430 01       		.byte	0x1
 5105 0431 0901     		.2byte	0x109
 5106 0433 00000000 		.4byte	.LFB80
 5107 0437 18000000 		.4byte	.LFE80-.LFB80
 5108 043b 01       		.uleb128 0x1
 5109 043c 9C       		.byte	0x9c
 5110 043d 17       		.uleb128 0x17
 5111 043e 3C090000 		.4byte	.LASF81
 5112 0442 01       		.byte	0x1
 5113 0443 0E01     		.2byte	0x10e
 5114 0445 00000000 		.4byte	.LFB81
 5115 0449 18000000 		.4byte	.LFE81-.LFB81
 5116 044d 01       		.uleb128 0x1
 5117 044e 9C       		.byte	0x9c
 5118 044f 17       		.uleb128 0x17
 5119 0450 64030000 		.4byte	.LASF82
 5120 0454 01       		.byte	0x1
 5121 0455 1201     		.2byte	0x112
 5122 0457 00000000 		.4byte	.LFB82
 5123 045b 18000000 		.4byte	.LFE82-.LFB82
 5124 045f 01       		.uleb128 0x1
 5125 0460 9C       		.byte	0x9c
 5126 0461 18       		.uleb128 0x18
 5127 0462 D9050000 		.4byte	.LASF83
 5128 0466 01       		.byte	0x1
 5129 0467 1901     		.2byte	0x119
 5130 0469 00000000 		.4byte	.LFB83
 5131 046d B8000000 		.4byte	.LFE83-.LFB83
 5132 0471 01       		.uleb128 0x1
 5133 0472 9C       		.byte	0x9c
 5134 0473 87040000 		.4byte	0x487
 5135 0477 19       		.uleb128 0x19
 5136 0478 1F050000 		.4byte	.LASF84
 5137 047c 01       		.byte	0x1
 5138 047d 1A01     		.2byte	0x11a
 5139 047f 83000000 		.4byte	0x83
 5140 0483 02       		.uleb128 0x2
 5141 0484 91       		.byte	0x91
 5142 0485 6F       		.sleb128 -17
 5143 0486 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 111


 5144 0487 18       		.uleb128 0x18
 5145 0488 C4050000 		.4byte	.LASF85
 5146 048c 01       		.byte	0x1
 5147 048d 3601     		.2byte	0x136
 5148 048f 00000000 		.4byte	.LFB84
 5149 0493 BC010000 		.4byte	.LFE84-.LFB84
 5150 0497 01       		.uleb128 0x1
 5151 0498 9C       		.byte	0x9c
 5152 0499 D6040000 		.4byte	0x4d6
 5153 049d 19       		.uleb128 0x19
 5154 049e 1F050000 		.4byte	.LASF84
 5155 04a2 01       		.byte	0x1
 5156 04a3 3801     		.2byte	0x138
 5157 04a5 83000000 		.4byte	0x83
 5158 04a9 02       		.uleb128 0x2
 5159 04aa 91       		.byte	0x91
 5160 04ab 77       		.sleb128 -9
 5161 04ac 0C       		.uleb128 0xc
 5162 04ad 8C000000 		.4byte	.LBB3
 5163 04b1 FC000000 		.4byte	.LBE3-.LBB3
 5164 04b5 1A       		.uleb128 0x1a
 5165 04b6 6D657300 		.ascii	"mes\000"
 5166 04ba 01       		.byte	0x1
 5167 04bb 5E01     		.2byte	0x15e
 5168 04bd FF020000 		.4byte	0x2ff
 5169 04c1 02       		.uleb128 0x2
 5170 04c2 91       		.byte	0x91
 5171 04c3 64       		.sleb128 -28
 5172 04c4 19       		.uleb128 0x19
 5173 04c5 51000000 		.4byte	.LASF86
 5174 04c9 01       		.byte	0x1
 5175 04ca 6E01     		.2byte	0x16e
 5176 04cc D6040000 		.4byte	0x4d6
 5177 04d0 03       		.uleb128 0x3
 5178 04d1 91       		.byte	0x91
 5179 04d2 E47E     		.sleb128 -156
 5180 04d4 00       		.byte	0
 5181 04d5 00       		.byte	0
 5182 04d6 0E       		.uleb128 0xe
 5183 04d7 83000000 		.4byte	0x83
 5184 04db E6040000 		.4byte	0x4e6
 5185 04df 0F       		.uleb128 0xf
 5186 04e0 76000000 		.4byte	0x76
 5187 04e4 7F       		.byte	0x7f
 5188 04e5 00       		.byte	0
 5189 04e6 1B       		.uleb128 0x1b
 5190 04e7 8F080000 		.4byte	.LASF87
 5191 04eb 01       		.byte	0x1
 5192 04ec 7701     		.2byte	0x177
 5193 04ee 00000000 		.4byte	.LFB85
 5194 04f2 0C000000 		.4byte	.LFE85-.LFB85
 5195 04f6 01       		.uleb128 0x1
 5196 04f7 9C       		.byte	0x9c
 5197 04f8 1C       		.uleb128 0x1c
 5198 04f9 10070000 		.4byte	.LASF88
 5199 04fd 01       		.byte	0x1
 5200 04fe 7D01     		.2byte	0x17d
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 112


 5201 0500 00000000 		.4byte	.LFB86
 5202 0504 2C000000 		.4byte	.LFE86-.LFB86
 5203 0508 01       		.uleb128 0x1
 5204 0509 9C       		.byte	0x9c
 5205 050a 18       		.uleb128 0x18
 5206 050b E1010000 		.4byte	.LASF89
 5207 050f 01       		.byte	0x1
 5208 0510 8601     		.2byte	0x186
 5209 0512 00000000 		.4byte	.LFB87
 5210 0516 EC010000 		.4byte	.LFE87-.LFB87
 5211 051a 01       		.uleb128 0x1
 5212 051b 9C       		.byte	0x9c
 5213 051c 57050000 		.4byte	0x557
 5214 0520 1D       		.uleb128 0x1d
 5215 0521 B4000000 		.4byte	.LBB4
 5216 0525 52000000 		.4byte	.LBE4-.LBB4
 5217 0529 3D050000 		.4byte	0x53d
 5218 052d 1A       		.uleb128 0x1a
 5219 052e 6D657300 		.ascii	"mes\000"
 5220 0532 01       		.byte	0x1
 5221 0533 9D01     		.2byte	0x19d
 5222 0535 FF020000 		.4byte	0x2ff
 5223 0539 02       		.uleb128 0x2
 5224 053a 91       		.byte	0x91
 5225 053b 58       		.sleb128 -40
 5226 053c 00       		.byte	0
 5227 053d 0C       		.uleb128 0xc
 5228 053e 12010000 		.4byte	.LBB5
 5229 0542 90000000 		.4byte	.LBE5-.LBB5
 5230 0546 19       		.uleb128 0x19
 5231 0547 A2080000 		.4byte	.LASF90
 5232 054b 01       		.byte	0x1
 5233 054c A801     		.2byte	0x1a8
 5234 054e D8000000 		.4byte	0xd8
 5235 0552 02       		.uleb128 0x2
 5236 0553 91       		.byte	0x91
 5237 0554 68       		.sleb128 -24
 5238 0555 00       		.byte	0
 5239 0556 00       		.byte	0
 5240 0557 1C       		.uleb128 0x1c
 5241 0558 A0020000 		.4byte	.LASF91
 5242 055c 01       		.byte	0x1
 5243 055d B201     		.2byte	0x1b2
 5244 055f 00000000 		.4byte	.LFB88
 5245 0563 AC000000 		.4byte	.LFE88-.LFB88
 5246 0567 01       		.uleb128 0x1
 5247 0568 9C       		.byte	0x9c
 5248 0569 1B       		.uleb128 0x1b
 5249 056a B9070000 		.4byte	.LASF92
 5250 056e 01       		.byte	0x1
 5251 056f D501     		.2byte	0x1d5
 5252 0571 00000000 		.4byte	.LFB89
 5253 0575 20000000 		.4byte	.LFE89-.LFB89
 5254 0579 01       		.uleb128 0x1
 5255 057a 9C       		.byte	0x9c
 5256 057b 1C       		.uleb128 0x1c
 5257 057c 26030000 		.4byte	.LASF93
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 113


 5258 0580 01       		.byte	0x1
 5259 0581 DC01     		.2byte	0x1dc
 5260 0583 00000000 		.4byte	.LFB90
 5261 0587 28000000 		.4byte	.LFE90-.LFB90
 5262 058b 01       		.uleb128 0x1
 5263 058c 9C       		.byte	0x9c
 5264 058d 1C       		.uleb128 0x1c
 5265 058e C3000000 		.4byte	.LASF94
 5266 0592 01       		.byte	0x1
 5267 0593 E501     		.2byte	0x1e5
 5268 0595 00000000 		.4byte	.LFB91
 5269 0599 0A000000 		.4byte	.LFE91-.LFB91
 5270 059d 01       		.uleb128 0x1
 5271 059e 9C       		.byte	0x9c
 5272 059f 1C       		.uleb128 0x1c
 5273 05a0 EF050000 		.4byte	.LASF95
 5274 05a4 01       		.byte	0x1
 5275 05a5 EA01     		.2byte	0x1ea
 5276 05a7 00000000 		.4byte	.LFB92
 5277 05ab 28000000 		.4byte	.LFE92-.LFB92
 5278 05af 01       		.uleb128 0x1
 5279 05b0 9C       		.byte	0x9c
 5280 05b1 16       		.uleb128 0x16
 5281 05b2 AF020000 		.4byte	.LASF96
 5282 05b6 01       		.byte	0x1
 5283 05b7 F401     		.2byte	0x1f4
 5284 05b9 00000000 		.4byte	.LFB93
 5285 05bd 40000000 		.4byte	.LFE93-.LFB93
 5286 05c1 01       		.uleb128 0x1
 5287 05c2 9C       		.byte	0x9c
 5288 05c3 16       		.uleb128 0x16
 5289 05c4 1E020000 		.4byte	.LASF97
 5290 05c8 01       		.byte	0x1
 5291 05c9 0302     		.2byte	0x203
 5292 05cb 00000000 		.4byte	.LFB94
 5293 05cf 40000000 		.4byte	.LFE94-.LFB94
 5294 05d3 01       		.uleb128 0x1
 5295 05d4 9C       		.byte	0x9c
 5296 05d5 1E       		.uleb128 0x1e
 5297 05d6 59000000 		.4byte	.LASF98
 5298 05da 01       		.byte	0x1
 5299 05db 1302     		.2byte	0x213
 5300 05dd 00000000 		.4byte	.LFB95
 5301 05e1 2C020000 		.4byte	.LFE95-.LFB95
 5302 05e5 01       		.uleb128 0x1
 5303 05e6 9C       		.byte	0x9c
 5304 05e7 46060000 		.4byte	0x646
 5305 05eb 19       		.uleb128 0x19
 5306 05ec F7020000 		.4byte	.LASF99
 5307 05f0 01       		.byte	0x1
 5308 05f1 2102     		.2byte	0x221
 5309 05f3 C5000000 		.4byte	0xc5
 5310 05f7 02       		.uleb128 0x2
 5311 05f8 91       		.byte	0x91
 5312 05f9 5E       		.sleb128 -34
 5313 05fa 19       		.uleb128 0x19
 5314 05fb 3D050000 		.4byte	.LASF100
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 114


 5315 05ff 01       		.byte	0x1
 5316 0600 2202     		.2byte	0x222
 5317 0602 C5000000 		.4byte	0xc5
 5318 0606 02       		.uleb128 0x2
 5319 0607 91       		.byte	0x91
 5320 0608 5C       		.sleb128 -36
 5321 0609 19       		.uleb128 0x19
 5322 060a 93030000 		.4byte	.LASF101
 5323 060e 01       		.byte	0x1
 5324 060f 2302     		.2byte	0x223
 5325 0611 D8000000 		.4byte	0xd8
 5326 0615 02       		.uleb128 0x2
 5327 0616 91       		.byte	0x91
 5328 0617 68       		.sleb128 -24
 5329 0618 19       		.uleb128 0x19
 5330 0619 F5080000 		.4byte	.LASF102
 5331 061d 01       		.byte	0x1
 5332 061e 2402     		.2byte	0x224
 5333 0620 D8000000 		.4byte	0xd8
 5334 0624 02       		.uleb128 0x2
 5335 0625 91       		.byte	0x91
 5336 0626 60       		.sleb128 -32
 5337 0627 19       		.uleb128 0x19
 5338 0628 1D040000 		.4byte	.LASF103
 5339 062c 01       		.byte	0x1
 5340 062d 2D02     		.2byte	0x22d
 5341 062f 68000000 		.4byte	0x68
 5342 0633 02       		.uleb128 0x2
 5343 0634 91       		.byte	0x91
 5344 0635 58       		.sleb128 -40
 5345 0636 19       		.uleb128 0x19
 5346 0637 98080000 		.4byte	.LASF104
 5347 063b 01       		.byte	0x1
 5348 063c 2E02     		.2byte	0x22e
 5349 063e 68000000 		.4byte	0x68
 5350 0642 02       		.uleb128 0x2
 5351 0643 91       		.byte	0x91
 5352 0644 54       		.sleb128 -44
 5353 0645 00       		.byte	0
 5354 0646 1E       		.uleb128 0x1e
 5355 0647 94050000 		.4byte	.LASF105
 5356 064b 01       		.byte	0x1
 5357 064c 3C02     		.2byte	0x23c
 5358 064e 00000000 		.4byte	.LFB96
 5359 0652 50010000 		.4byte	.LFE96-.LFB96
 5360 0656 01       		.uleb128 0x1
 5361 0657 9C       		.byte	0x9c
 5362 0658 88060000 		.4byte	0x688
 5363 065c 1A       		.uleb128 0x1a
 5364 065d 6E6C00   		.ascii	"nl\000"
 5365 0660 01       		.byte	0x1
 5366 0661 4002     		.2byte	0x240
 5367 0663 95000000 		.4byte	0x95
 5368 0667 02       		.uleb128 0x2
 5369 0668 91       		.byte	0x91
 5370 0669 67       		.sleb128 -25
 5371 066a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 115


 5372 066b 6E7200   		.ascii	"nr\000"
 5373 066e 01       		.byte	0x1
 5374 066f 4102     		.2byte	0x241
 5375 0671 95000000 		.4byte	0x95
 5376 0675 02       		.uleb128 0x2
 5377 0676 91       		.byte	0x91
 5378 0677 66       		.sleb128 -26
 5379 0678 1A       		.uleb128 0x1a
 5380 0679 6D696400 		.ascii	"mid\000"
 5381 067d 01       		.byte	0x1
 5382 067e 4202     		.2byte	0x242
 5383 0680 95000000 		.4byte	0x95
 5384 0684 02       		.uleb128 0x2
 5385 0685 91       		.byte	0x91
 5386 0686 65       		.sleb128 -27
 5387 0687 00       		.byte	0
 5388 0688 1E       		.uleb128 0x1e
 5389 0689 58010000 		.4byte	.LASF106
 5390 068d 01       		.byte	0x1
 5391 068e 5F02     		.2byte	0x25f
 5392 0690 00000000 		.4byte	.LFB97
 5393 0694 04010000 		.4byte	.LFE97-.LFB97
 5394 0698 01       		.uleb128 0x1
 5395 0699 9C       		.byte	0x9c
 5396 069a CA060000 		.4byte	0x6ca
 5397 069e 1A       		.uleb128 0x1a
 5398 069f 6E6C00   		.ascii	"nl\000"
 5399 06a2 01       		.byte	0x1
 5400 06a3 6302     		.2byte	0x263
 5401 06a5 95000000 		.4byte	0x95
 5402 06a9 02       		.uleb128 0x2
 5403 06aa 91       		.byte	0x91
 5404 06ab 67       		.sleb128 -25
 5405 06ac 1A       		.uleb128 0x1a
 5406 06ad 6E7200   		.ascii	"nr\000"
 5407 06b0 01       		.byte	0x1
 5408 06b1 6402     		.2byte	0x264
 5409 06b3 95000000 		.4byte	0x95
 5410 06b7 02       		.uleb128 0x2
 5411 06b8 91       		.byte	0x91
 5412 06b9 66       		.sleb128 -26
 5413 06ba 1A       		.uleb128 0x1a
 5414 06bb 6D696400 		.ascii	"mid\000"
 5415 06bf 01       		.byte	0x1
 5416 06c0 6502     		.2byte	0x265
 5417 06c2 95000000 		.4byte	0x95
 5418 06c6 02       		.uleb128 0x2
 5419 06c7 91       		.byte	0x91
 5420 06c8 65       		.sleb128 -27
 5421 06c9 00       		.byte	0
 5422 06ca 17       		.uleb128 0x17
 5423 06cb 3D010000 		.4byte	.LASF107
 5424 06cf 01       		.byte	0x1
 5425 06d0 B402     		.2byte	0x2b4
 5426 06d2 00000000 		.4byte	.LFB98
 5427 06d6 0C000000 		.4byte	.LFE98-.LFB98
 5428 06da 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 116


 5429 06db 9C       		.byte	0x9c
 5430 06dc 1E       		.uleb128 0x1e
 5431 06dd 89030000 		.4byte	.LASF108
 5432 06e1 01       		.byte	0x1
 5433 06e2 F202     		.2byte	0x2f2
 5434 06e4 00000000 		.4byte	.LFB99
 5435 06e8 C0000000 		.4byte	.LFE99-.LFB99
 5436 06ec 01       		.uleb128 0x1
 5437 06ed 9C       		.byte	0x9c
 5438 06ee 2A070000 		.4byte	0x72a
 5439 06f2 0C       		.uleb128 0xc
 5440 06f3 0E000000 		.4byte	.LBB6
 5441 06f7 8E000000 		.4byte	.LBE6-.LBB6
 5442 06fb 19       		.uleb128 0x19
 5443 06fc E9020000 		.4byte	.LASF109
 5444 0700 01       		.byte	0x1
 5445 0701 FB02     		.2byte	0x2fb
 5446 0703 D1000000 		.4byte	0xd1
 5447 0707 02       		.uleb128 0x2
 5448 0708 91       		.byte	0x91
 5449 0709 74       		.sleb128 -12
 5450 070a 19       		.uleb128 0x19
 5451 070b 7B050000 		.4byte	.LASF110
 5452 070f 01       		.byte	0x1
 5453 0710 FC02     		.2byte	0x2fc
 5454 0712 C5000000 		.4byte	0xc5
 5455 0716 02       		.uleb128 0x2
 5456 0717 91       		.byte	0x91
 5457 0718 72       		.sleb128 -14
 5458 0719 19       		.uleb128 0x19
 5459 071a 4C030000 		.4byte	.LASF111
 5460 071e 01       		.byte	0x1
 5461 071f 0103     		.2byte	0x301
 5462 0721 FF020000 		.4byte	0x2ff
 5463 0725 02       		.uleb128 0x2
 5464 0726 91       		.byte	0x91
 5465 0727 60       		.sleb128 -32
 5466 0728 00       		.byte	0
 5467 0729 00       		.byte	0
 5468 072a 1E       		.uleb128 0x1e
 5469 072b DE080000 		.4byte	.LASF112
 5470 072f 01       		.byte	0x1
 5471 0730 0803     		.2byte	0x308
 5472 0732 00000000 		.4byte	.LFB100
 5473 0736 B8000000 		.4byte	.LFE100-.LFB100
 5474 073a 01       		.uleb128 0x1
 5475 073b 9C       		.byte	0x9c
 5476 073c 5A070000 		.4byte	0x75a
 5477 0740 0C       		.uleb128 0xc
 5478 0741 0E000000 		.4byte	.LBB7
 5479 0745 86000000 		.4byte	.LBE7-.LBB7
 5480 0749 19       		.uleb128 0x19
 5481 074a 8F060000 		.4byte	.LASF113
 5482 074e 01       		.byte	0x1
 5483 074f 0C03     		.2byte	0x30c
 5484 0751 FF020000 		.4byte	0x2ff
 5485 0755 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 117


 5486 0756 91       		.byte	0x91
 5487 0757 68       		.sleb128 -24
 5488 0758 00       		.byte	0
 5489 0759 00       		.byte	0
 5490 075a 18       		.uleb128 0x18
 5491 075b 18070000 		.4byte	.LASF114
 5492 075f 01       		.byte	0x1
 5493 0760 1D03     		.2byte	0x31d
 5494 0762 00000000 		.4byte	.LFB101
 5495 0766 4A000000 		.4byte	.LFE101-.LFB101
 5496 076a 01       		.uleb128 0x1
 5497 076b 9C       		.byte	0x9c
 5498 076c 80070000 		.4byte	0x780
 5499 0770 1F       		.uleb128 0x1f
 5500 0771 41030000 		.4byte	.LASF115
 5501 0775 01       		.byte	0x1
 5502 0776 1D03     		.2byte	0x31d
 5503 0778 80070000 		.4byte	0x780
 5504 077c 02       		.uleb128 0x2
 5505 077d 91       		.byte	0x91
 5506 077e 6C       		.sleb128 -20
 5507 077f 00       		.byte	0
 5508 0780 05       		.uleb128 0x5
 5509 0781 04       		.byte	0x4
 5510 0782 95000000 		.4byte	0x95
 5511 0786 20       		.uleb128 0x20
 5512 0787 8A080000 		.4byte	.LASF116
 5513 078b 01       		.byte	0x1
 5514 078c 2603     		.2byte	0x326
 5515 078e 68000000 		.4byte	0x68
 5516 0792 00000000 		.4byte	.LFB102
 5517 0796 14030000 		.4byte	.LFE102-.LFB102
 5518 079a 01       		.uleb128 0x1
 5519 079b 9C       		.byte	0x9c
 5520 079c E2070000 		.4byte	0x7e2
 5521 07a0 19       		.uleb128 0x19
 5522 07a1 17030000 		.4byte	.LASF117
 5523 07a5 01       		.byte	0x1
 5524 07a6 5F03     		.2byte	0x35f
 5525 07a8 A1000000 		.4byte	0xa1
 5526 07ac 02       		.uleb128 0x2
 5527 07ad 91       		.byte	0x91
 5528 07ae 76       		.sleb128 -10
 5529 07af 0C       		.uleb128 0xc
 5530 07b0 66000000 		.4byte	.LBB8
 5531 07b4 60020000 		.4byte	.LBE8-.LBB8
 5532 07b8 19       		.uleb128 0x19
 5533 07b9 6E020000 		.4byte	.LASF118
 5534 07bd 01       		.byte	0x1
 5535 07be 6D03     		.2byte	0x36d
 5536 07c0 E2070000 		.4byte	0x7e2
 5537 07c4 02       		.uleb128 0x2
 5538 07c5 91       		.byte	0x91
 5539 07c6 70       		.sleb128 -16
 5540 07c7 0C       		.uleb128 0xc
 5541 07c8 34010000 		.4byte	.LBB9
 5542 07cc 2E010000 		.4byte	.LBE9-.LBB9
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 118


 5543 07d0 19       		.uleb128 0x19
 5544 07d1 77040000 		.4byte	.LASF119
 5545 07d5 01       		.byte	0x1
 5546 07d6 9703     		.2byte	0x397
 5547 07d8 83000000 		.4byte	0x83
 5548 07dc 02       		.uleb128 0x2
 5549 07dd 91       		.byte	0x91
 5550 07de 75       		.sleb128 -11
 5551 07df 00       		.byte	0
 5552 07e0 00       		.byte	0
 5553 07e1 00       		.byte	0
 5554 07e2 0E       		.uleb128 0xe
 5555 07e3 95000000 		.4byte	0x95
 5556 07e7 F2070000 		.4byte	0x7f2
 5557 07eb 0F       		.uleb128 0xf
 5558 07ec 76000000 		.4byte	0x76
 5559 07f0 04       		.byte	0x4
 5560 07f1 00       		.byte	0
 5561 07f2 18       		.uleb128 0x18
 5562 07f3 F1060000 		.4byte	.LASF120
 5563 07f7 01       		.byte	0x1
 5564 07f8 F703     		.2byte	0x3f7
 5565 07fa 00000000 		.4byte	.LFB103
 5566 07fe 68000000 		.4byte	.LFE103-.LFB103
 5567 0802 01       		.uleb128 0x1
 5568 0803 9C       		.byte	0x9c
 5569 0804 2F080000 		.4byte	0x82f
 5570 0808 21       		.uleb128 0x21
 5571 0809 7300     		.ascii	"s\000"
 5572 080b 01       		.byte	0x1
 5573 080c F703     		.2byte	0x3f7
 5574 080e 7D000000 		.4byte	0x7d
 5575 0812 02       		.uleb128 0x2
 5576 0813 91       		.byte	0x91
 5577 0814 6C       		.sleb128 -20
 5578 0815 0C       		.uleb128 0xc
 5579 0816 10000000 		.4byte	.LBB10
 5580 081a 48000000 		.4byte	.LBE10-.LBB10
 5581 081e 1A       		.uleb128 0x1a
 5582 081f 636E7400 		.ascii	"cnt\000"
 5583 0823 01       		.byte	0x1
 5584 0824 FE03     		.2byte	0x3fe
 5585 0826 AD000000 		.4byte	0xad
 5586 082a 02       		.uleb128 0x2
 5587 082b 91       		.byte	0x91
 5588 082c 74       		.sleb128 -12
 5589 082d 00       		.byte	0
 5590 082e 00       		.byte	0
 5591 082f 18       		.uleb128 0x18
 5592 0830 44080000 		.4byte	.LASF121
 5593 0834 01       		.byte	0x1
 5594 0835 0D04     		.2byte	0x40d
 5595 0837 00000000 		.4byte	.LFB104
 5596 083b 50000000 		.4byte	.LFE104-.LFB104
 5597 083f 01       		.uleb128 0x1
 5598 0840 9C       		.byte	0x9c
 5599 0841 6C080000 		.4byte	0x86c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 119


 5600 0845 21       		.uleb128 0x21
 5601 0846 6300     		.ascii	"c\000"
 5602 0848 01       		.byte	0x1
 5603 0849 0D04     		.2byte	0x40d
 5604 084b 83000000 		.4byte	0x83
 5605 084f 02       		.uleb128 0x2
 5606 0850 91       		.byte	0x91
 5607 0851 6F       		.sleb128 -17
 5608 0852 0C       		.uleb128 0xc
 5609 0853 12000000 		.4byte	.LBB11
 5610 0857 2E000000 		.4byte	.LBE11-.LBB11
 5611 085b 1A       		.uleb128 0x1a
 5612 085c 636E7400 		.ascii	"cnt\000"
 5613 0860 01       		.byte	0x1
 5614 0861 1104     		.2byte	0x411
 5615 0863 AD000000 		.4byte	0xad
 5616 0867 02       		.uleb128 0x2
 5617 0868 91       		.byte	0x91
 5618 0869 74       		.sleb128 -12
 5619 086a 00       		.byte	0
 5620 086b 00       		.byte	0
 5621 086c 1E       		.uleb128 0x1e
 5622 086d 57030000 		.4byte	.LASF122
 5623 0871 01       		.byte	0x1
 5624 0872 1E04     		.2byte	0x41e
 5625 0874 00000000 		.4byte	.LFB105
 5626 0878 3A000000 		.4byte	.LFE105-.LFB105
 5627 087c 01       		.uleb128 0x1
 5628 087d 9C       		.byte	0x9c
 5629 087e 90080000 		.4byte	0x890
 5630 0882 1A       		.uleb128 0x1a
 5631 0883 6300     		.ascii	"c\000"
 5632 0885 01       		.byte	0x1
 5633 0886 2004     		.2byte	0x420
 5634 0888 95000000 		.4byte	0x95
 5635 088c 02       		.uleb128 0x2
 5636 088d 91       		.byte	0x91
 5637 088e 77       		.sleb128 -9
 5638 088f 00       		.byte	0
 5639 0890 22       		.uleb128 0x22
 5640 0891 82060000 		.4byte	.LASF123
 5641 0895 06       		.byte	0x6
 5642 0896 9606     		.2byte	0x696
 5643 0898 9C080000 		.4byte	0x89c
 5644 089c 23       		.uleb128 0x23
 5645 089d 8A000000 		.4byte	0x8a
 5646 08a1 24       		.uleb128 0x24
 5647 08a2 747300   		.ascii	"ts\000"
 5648 08a5 05       		.byte	0x5
 5649 08a6 10       		.byte	0x10
 5650 08a7 95000000 		.4byte	0x95
 5651 08ab 05       		.uleb128 0x5
 5652 08ac 03       		.byte	0x3
 5653 08ad 00000000 		.4byte	ts
 5654 08b1 25       		.uleb128 0x25
 5655 08b2 C6070000 		.4byte	.LASF124
 5656 08b6 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 120


 5657 08b7 11       		.byte	0x11
 5658 08b8 A1000000 		.4byte	0xa1
 5659 08bc 05       		.uleb128 0x5
 5660 08bd 03       		.byte	0x3
 5661 08be 00000000 		.4byte	ts_enc
 5662 08c2 25       		.uleb128 0x25
 5663 08c3 9B060000 		.4byte	.LASF125
 5664 08c7 05       		.byte	0x5
 5665 08c8 12       		.byte	0x12
 5666 08c9 A1000000 		.4byte	0xa1
 5667 08cd 05       		.uleb128 0x5
 5668 08ce 03       		.byte	0x3
 5669 08cf 00000000 		.4byte	ts_update
 5670 08d3 25       		.uleb128 0x25
 5671 08d4 48050000 		.4byte	.LASF126
 5672 08d8 05       		.byte	0x5
 5673 08d9 13       		.byte	0x13
 5674 08da A1000000 		.4byte	0xa1
 5675 08de 05       		.uleb128 0x5
 5676 08df 03       		.byte	0x3
 5677 08e0 00000000 		.4byte	ts_speed
 5678 08e4 25       		.uleb128 0x25
 5679 08e5 7E030000 		.4byte	.LASF127
 5680 08e9 05       		.byte	0x5
 5681 08ea 14       		.byte	0x14
 5682 08eb A1000000 		.4byte	0xa1
 5683 08ef 05       		.uleb128 0x5
 5684 08f0 03       		.byte	0x3
 5685 08f1 00000000 		.4byte	ts_display
 5686 08f5 25       		.uleb128 0x25
 5687 08f6 01030000 		.4byte	.LASF128
 5688 08fa 05       		.byte	0x5
 5689 08fb 16       		.byte	0x16
 5690 08fc 95000000 		.4byte	0x95
 5691 0900 05       		.uleb128 0x5
 5692 0901 03       		.byte	0x3
 5693 0902 00000000 		.4byte	flag_ts_enc
 5694 0906 25       		.uleb128 0x25
 5695 0907 DA020000 		.4byte	.LASF129
 5696 090b 05       		.byte	0x5
 5697 090c 17       		.byte	0x17
 5698 090d 95000000 		.4byte	0x95
 5699 0911 05       		.uleb128 0x5
 5700 0912 03       		.byte	0x3
 5701 0913 00000000 		.4byte	flag_ts_update
 5702 0917 25       		.uleb128 0x25
 5703 0918 FC050000 		.4byte	.LASF130
 5704 091c 05       		.byte	0x5
 5705 091d 18       		.byte	0x18
 5706 091e 95000000 		.4byte	0x95
 5707 0922 05       		.uleb128 0x5
 5708 0923 03       		.byte	0x3
 5709 0924 00000000 		.4byte	flag_ts_speed
 5710 0928 25       		.uleb128 0x25
 5711 0929 D7070000 		.4byte	.LASF131
 5712 092d 05       		.byte	0x5
 5713 092e 19       		.byte	0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 121


 5714 092f 95000000 		.4byte	0x95
 5715 0933 05       		.uleb128 0x5
 5716 0934 03       		.byte	0x3
 5717 0935 00000000 		.4byte	flag_ts_display
 5718 0939 25       		.uleb128 0x25
 5719 093a 27060000 		.4byte	.LASF132
 5720 093e 05       		.byte	0x5
 5721 093f 1C       		.byte	0x1c
 5722 0940 95000000 		.4byte	0x95
 5723 0944 05       		.uleb128 0x5
 5724 0945 03       		.byte	0x3
 5725 0946 00000000 		.4byte	flag_rx
 5726 094a 25       		.uleb128 0x25
 5727 094b 62020000 		.4byte	.LASF133
 5728 094f 05       		.byte	0x5
 5729 0950 1D       		.byte	0x1d
 5730 0951 95000000 		.4byte	0x95
 5731 0955 05       		.uleb128 0x5
 5732 0956 03       		.byte	0x3
 5733 0957 00000000 		.4byte	flag_packet
 5734 095b 25       		.uleb128 0x25
 5735 095c 02090000 		.4byte	.LASF134
 5736 0960 05       		.byte	0x5
 5737 0961 1E       		.byte	0x1e
 5738 0962 95000000 		.4byte	0x95
 5739 0966 05       		.uleb128 0x5
 5740 0967 03       		.byte	0x3
 5741 0968 00000000 		.4byte	flag_KB_string
 5742 096c 25       		.uleb128 0x25
 5743 096d 0A060000 		.4byte	.LASF135
 5744 0971 05       		.byte	0x5
 5745 0972 20       		.byte	0x20
 5746 0973 95000000 		.4byte	0x95
 5747 0977 05       		.uleb128 0x5
 5748 0978 03       		.byte	0x3
 5749 0979 00000000 		.4byte	dataready_flag
 5750 097d 25       		.uleb128 0x25
 5751 097e 84010000 		.4byte	.LASF136
 5752 0982 05       		.byte	0x5
 5753 0983 22       		.byte	0x22
 5754 0984 95000000 		.4byte	0x95
 5755 0988 05       		.uleb128 0x5
 5756 0989 03       		.byte	0x3
 5757 098a 00000000 		.4byte	flag_rf_transmission_active
 5758 098e 25       		.uleb128 0x25
 5759 098f A0010000 		.4byte	.LASF137
 5760 0993 05       		.byte	0x5
 5761 0994 23       		.byte	0x23
 5762 0995 95000000 		.4byte	0x95
 5763 0999 05       		.uleb128 0x5
 5764 099a 03       		.byte	0x3
 5765 099b 00000000 		.4byte	flag_print_rf
 5766 099f 25       		.uleb128 0x25
 5767 09a0 AB050000 		.4byte	.LASF138
 5768 09a4 05       		.byte	0x5
 5769 09a5 25       		.byte	0x25
 5770 09a6 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 122


 5771 09aa 05       		.uleb128 0x5
 5772 09ab 03       		.byte	0x3
 5773 09ac 00000000 		.4byte	flag_receive_ADC
 5774 09b0 25       		.uleb128 0x25
 5775 09b1 39060000 		.4byte	.LASF139
 5776 09b5 05       		.byte	0x5
 5777 09b6 26       		.byte	0x26
 5778 09b7 C5000000 		.4byte	0xc5
 5779 09bb 05       		.uleb128 0x5
 5780 09bc 03       		.byte	0x3
 5781 09bd 00000000 		.4byte	adc_result
 5782 09c1 25       		.uleb128 0x25
 5783 09c2 00000000 		.4byte	.LASF140
 5784 09c6 05       		.byte	0x5
 5785 09c7 28       		.byte	0x28
 5786 09c8 95000000 		.4byte	0x95
 5787 09cc 05       		.uleb128 0x5
 5788 09cd 03       		.byte	0x3
 5789 09ce 00000000 		.4byte	direction
 5790 09d2 25       		.uleb128 0x25
 5791 09d3 31050000 		.4byte	.LASF141
 5792 09d7 05       		.byte	0x5
 5793 09d8 2B       		.byte	0x2b
 5794 09d9 95000000 		.4byte	0x95
 5795 09dd 05       		.uleb128 0x5
 5796 09de 03       		.byte	0x3
 5797 09df 00000000 		.4byte	BIN_ENABLED
 5798 09e3 25       		.uleb128 0x25
 5799 09e4 27040000 		.4byte	.LASF142
 5800 09e8 05       		.byte	0x5
 5801 09e9 2D       		.byte	0x2d
 5802 09ea 95000000 		.4byte	0x95
 5803 09ee 05       		.uleb128 0x5
 5804 09ef 03       		.byte	0x3
 5805 09f0 00000000 		.4byte	BT_ENABLED
 5806 09f4 25       		.uleb128 0x25
 5807 09f5 4E060000 		.4byte	.LASF143
 5808 09f9 05       		.byte	0x5
 5809 09fa 32       		.byte	0x32
 5810 09fb 95000000 		.4byte	0x95
 5811 09ff 05       		.uleb128 0x5
 5812 0a00 03       		.byte	0x3
 5813 0a01 00000000 		.4byte	flag_calc_wheelspeed
 5814 0a05 25       		.uleb128 0x25
 5815 0a06 25010000 		.4byte	.LASF144
 5816 0a0a 05       		.byte	0x5
 5817 0a0b 33       		.byte	0x33
 5818 0a0c C5000000 		.4byte	0xc5
 5819 0a10 05       		.uleb128 0x5
 5820 0a11 03       		.byte	0x3
 5821 0a12 00000000 		.4byte	quad_count1
 5822 0a16 25       		.uleb128 0x25
 5823 0a17 31010000 		.4byte	.LASF145
 5824 0a1b 05       		.byte	0x5
 5825 0a1c 34       		.byte	0x34
 5826 0a1d C5000000 		.4byte	0xc5
 5827 0a21 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 123


 5828 0a22 03       		.byte	0x3
 5829 0a23 00000000 		.4byte	quad_count2
 5830 0a27 25       		.uleb128 0x25
 5831 0a28 16080000 		.4byte	.LASF146
 5832 0a2c 05       		.byte	0x5
 5833 0a2d 35       		.byte	0x35
 5834 0a2e C5000000 		.4byte	0xc5
 5835 0a32 05       		.uleb128 0x5
 5836 0a33 03       		.byte	0x3
 5837 0a34 00000000 		.4byte	last_quad_count1
 5838 0a38 25       		.uleb128 0x25
 5839 0a39 27080000 		.4byte	.LASF147
 5840 0a3d 05       		.byte	0x5
 5841 0a3e 36       		.byte	0x36
 5842 0a3f C5000000 		.4byte	0xc5
 5843 0a43 05       		.uleb128 0x5
 5844 0a44 03       		.byte	0x3
 5845 0a45 00000000 		.4byte	last_quad_count2
 5846 0a49 25       		.uleb128 0x25
 5847 0a4a 3B000000 		.4byte	.LASF148
 5848 0a4e 05       		.byte	0x5
 5849 0a4f 37       		.byte	0x37
 5850 0a50 C5000000 		.4byte	0xc5
 5851 0a54 05       		.uleb128 0x5
 5852 0a55 03       		.byte	0x3
 5853 0a56 00000000 		.4byte	quad_diff1
 5854 0a5a 25       		.uleb128 0x25
 5855 0a5b 46000000 		.4byte	.LASF149
 5856 0a5f 05       		.byte	0x5
 5857 0a60 38       		.byte	0x38
 5858 0a61 C5000000 		.4byte	0xc5
 5859 0a65 05       		.uleb128 0x5
 5860 0a66 03       		.byte	0x3
 5861 0a67 00000000 		.4byte	quad_diff2
 5862 0a6b 25       		.uleb128 0x25
 5863 0a6c AE060000 		.4byte	.LASF150
 5864 0a70 05       		.byte	0x5
 5865 0a71 39       		.byte	0x39
 5866 0a72 95000000 		.4byte	0x95
 5867 0a76 05       		.uleb128 0x5
 5868 0a77 03       		.byte	0x3
 5869 0a78 00000000 		.4byte	deadzone
 5870 0a7c 25       		.uleb128 0x25
 5871 0a7d 77000000 		.4byte	.LASF151
 5872 0a81 05       		.byte	0x5
 5873 0a82 3C       		.byte	0x3c
 5874 0a83 C5000000 		.4byte	0xc5
 5875 0a87 05       		.uleb128 0x5
 5876 0a88 03       		.byte	0x3
 5877 0a89 00000000 		.4byte	start_turn_count
 5878 0a8d 25       		.uleb128 0x25
 5879 0a8e DF050000 		.4byte	.LASF152
 5880 0a92 05       		.byte	0x5
 5881 0a93 3F       		.byte	0x3f
 5882 0a94 C5000000 		.4byte	0xc5
 5883 0a98 05       		.uleb128 0x5
 5884 0a99 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 124


 5885 0a9a 00000000 		.4byte	left_duty_cycle
 5886 0a9e 25       		.uleb128 0x25
 5887 0a9f B4080000 		.4byte	.LASF153
 5888 0aa3 05       		.byte	0x5
 5889 0aa4 40       		.byte	0x40
 5890 0aa5 C5000000 		.4byte	0xc5
 5891 0aa9 05       		.uleb128 0x5
 5892 0aaa 03       		.byte	0x3
 5893 0aab 00000000 		.4byte	right_duty_cycle
 5894 0aaf 25       		.uleb128 0x25
 5895 0ab0 B7060000 		.4byte	.LASF154
 5896 0ab4 05       		.byte	0x5
 5897 0ab5 43       		.byte	0x43
 5898 0ab6 C5000000 		.4byte	0xc5
 5899 0aba 05       		.uleb128 0x5
 5900 0abb 03       		.byte	0x3
 5901 0abc 00000000 		.4byte	leftSpeedLimit
 5902 0ac0 25       		.uleb128 0x25
 5903 0ac1 AD030000 		.4byte	.LASF155
 5904 0ac5 05       		.byte	0x5
 5905 0ac6 44       		.byte	0x44
 5906 0ac7 C5000000 		.4byte	0xc5
 5907 0acb 05       		.uleb128 0x5
 5908 0acc 03       		.byte	0x3
 5909 0acd 00000000 		.4byte	rightSpeedLimit
 5910 0ad1 25       		.uleb128 0x25
 5911 0ad2 35070000 		.4byte	.LASF156
 5912 0ad6 05       		.byte	0x5
 5913 0ad7 47       		.byte	0x47
 5914 0ad8 C5000000 		.4byte	0xc5
 5915 0adc 05       		.uleb128 0x5
 5916 0add 03       		.byte	0x3
 5917 0ade 00000000 		.4byte	target_distance_cm
 5918 0ae2 25       		.uleb128 0x25
 5919 0ae3 E6060000 		.4byte	.LASF157
 5920 0ae7 05       		.byte	0x5
 5921 0ae8 49       		.byte	0x49
 5922 0ae9 C5000000 		.4byte	0xc5
 5923 0aed 05       		.uleb128 0x5
 5924 0aee 03       		.byte	0x3
 5925 0aef 00000000 		.4byte	accum_dist
 5926 0af3 25       		.uleb128 0x25
 5927 0af4 D0000000 		.4byte	.LASF158
 5928 0af8 05       		.byte	0x5
 5929 0af9 4A       		.byte	0x4a
 5930 0afa C5000000 		.4byte	0xc5
 5931 0afe 05       		.uleb128 0x5
 5932 0aff 03       		.byte	0x3
 5933 0b00 00000000 		.4byte	target_distance_quad
 5934 0b04 25       		.uleb128 0x25
 5935 0b05 29070000 		.4byte	.LASF159
 5936 0b09 05       		.byte	0x5
 5937 0b0a 4B       		.byte	0x4b
 5938 0b0b D1000000 		.4byte	0xd1
 5939 0b0f 05       		.uleb128 0x5
 5940 0b10 03       		.byte	0x3
 5941 0b11 00000000 		.4byte	quad_per_cm
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 125


 5942 0b15 25       		.uleb128 0x25
 5943 0b16 38040000 		.4byte	.LASF160
 5944 0b1a 05       		.byte	0x5
 5945 0b1b 4E       		.byte	0x4e
 5946 0b1c 95000000 		.4byte	0x95
 5947 0b20 05       		.uleb128 0x5
 5948 0b21 03       		.byte	0x3
 5949 0b22 00000000 		.4byte	initial_pos_valid
 5950 0b26 25       		.uleb128 0x25
 5951 0b27 23090000 		.4byte	.LASF161
 5952 0b2b 05       		.byte	0x5
 5953 0b2c 4F       		.byte	0x4f
 5954 0b2d C5000000 		.4byte	0xc5
 5955 0b31 05       		.uleb128 0x5
 5956 0b32 03       		.byte	0x3
 5957 0b33 00000000 		.4byte	initial_x_pos
 5958 0b37 25       		.uleb128 0x25
 5959 0b38 19060000 		.4byte	.LASF162
 5960 0b3c 05       		.byte	0x5
 5961 0b3d 50       		.byte	0x50
 5962 0b3e C5000000 		.4byte	0xc5
 5963 0b42 05       		.uleb128 0x5
 5964 0b43 03       		.byte	0x3
 5965 0b44 00000000 		.4byte	initial_y_pos
 5966 0b48 25       		.uleb128 0x25
 5967 0b49 CD070000 		.4byte	.LASF163
 5968 0b4d 05       		.byte	0x5
 5969 0b4e 53       		.byte	0x53
 5970 0b4f 95000000 		.4byte	0x95
 5971 0b53 05       		.uleb128 0x5
 5972 0b54 03       		.byte	0x3
 5973 0b55 00000000 		.4byte	brakeFlag
 5974 0b59 25       		.uleb128 0x25
 5975 0b5a C7020000 		.4byte	.LASF164
 5976 0b5e 05       		.byte	0x5
 5977 0b5f 54       		.byte	0x54
 5978 0b60 95000000 		.4byte	0x95
 5979 0b64 05       		.uleb128 0x5
 5980 0b65 03       		.byte	0x3
 5981 0b66 00000000 		.4byte	portOpen
 5982 0b6a 25       		.uleb128 0x25
 5983 0b6b 6B000000 		.4byte	.LASF165
 5984 0b6f 05       		.byte	0x5
 5985 0b70 57       		.byte	0x57
 5986 0b71 C5000000 		.4byte	0xc5
 5987 0b75 05       		.uleb128 0x5
 5988 0b76 03       		.byte	0x3
 5989 0b77 00000000 		.4byte	prevVoltage
 5990 0b7b 25       		.uleb128 0x25
 5991 0b7c EE000000 		.4byte	.LASF166
 5992 0b80 05       		.byte	0x5
 5993 0b81 58       		.byte	0x58
 5994 0b82 C5000000 		.4byte	0xc5
 5995 0b86 05       		.uleb128 0x5
 5996 0b87 03       		.byte	0x3
 5997 0b88 00000000 		.4byte	prevVoltage2
 5998 0b8c 0E       		.uleb128 0xe
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 126


 5999 0b8d 83000000 		.4byte	0x83
 6000 0b91 9C0B0000 		.4byte	0xb9c
 6001 0b95 0F       		.uleb128 0xf
 6002 0b96 76000000 		.4byte	0x76
 6003 0b9a 3F       		.byte	0x3f
 6004 0b9b 00       		.byte	0
 6005 0b9c 25       		.uleb128 0x25
 6006 0b9d 08080000 		.4byte	.LASF167
 6007 0ba1 05       		.byte	0x5
 6008 0ba2 5E       		.byte	0x5e
 6009 0ba3 8C0B0000 		.4byte	0xb8c
 6010 0ba7 05       		.uleb128 0x5
 6011 0ba8 03       		.byte	0x3
 6012 0ba9 00000000 		.4byte	displaystring
 6013 0bad 25       		.uleb128 0x25
 6014 0bae B4070000 		.4byte	.LASF168
 6015 0bb2 05       		.byte	0x5
 6016 0bb3 5F       		.byte	0x5f
 6017 0bb4 8C0B0000 		.4byte	0xb8c
 6018 0bb8 05       		.uleb128 0x5
 6019 0bb9 03       		.byte	0x3
 6020 0bba 00000000 		.4byte	line
 6021 0bbe 25       		.uleb128 0x25
 6022 0bbf A0070000 		.4byte	.LASF169
 6023 0bc3 05       		.byte	0x5
 6024 0bc4 5F       		.byte	0x5f
 6025 0bc5 8C0B0000 		.4byte	0xb8c
 6026 0bc9 05       		.uleb128 0x5
 6027 0bca 03       		.byte	0x3
 6028 0bcb 00000000 		.4byte	entry
 6029 0bcf 0E       		.uleb128 0xe
 6030 0bd0 95000000 		.4byte	0x95
 6031 0bd4 DF0B0000 		.4byte	0xbdf
 6032 0bd8 0F       		.uleb128 0xf
 6033 0bd9 76000000 		.4byte	0x76
 6034 0bdd 3F       		.byte	0x3f
 6035 0bde 00       		.byte	0
 6036 0bdf 25       		.uleb128 0x25
 6037 0be0 FA010000 		.4byte	.LASF170
 6038 0be4 05       		.byte	0x5
 6039 0be5 60       		.byte	0x60
 6040 0be6 CF0B0000 		.4byte	0xbcf
 6041 0bea 05       		.uleb128 0x5
 6042 0beb 03       		.byte	0x3
 6043 0bec 00000000 		.4byte	usbBuffer
 6044 0bf0 25       		.uleb128 0x25
 6045 0bf1 58040000 		.4byte	.LASF171
 6046 0bf5 05       		.byte	0x5
 6047 0bf6 75       		.byte	0x75
 6048 0bf7 60010000 		.4byte	0x160
 6049 0bfb 05       		.uleb128 0x5
 6050 0bfc 03       		.byte	0x3
 6051 0bfd 00000000 		.4byte	buffer_state
 6052 0c01 25       		.uleb128 0x25
 6053 0c02 B0000000 		.4byte	.LASF172
 6054 0c06 05       		.byte	0x5
 6055 0c07 76       		.byte	0x76
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 127


 6056 0c08 60010000 		.4byte	0x160
 6057 0c0c 05       		.uleb128 0x5
 6058 0c0d 03       		.byte	0x3
 6059 0c0e 00000000 		.4byte	system_state
 6060 0c12 25       		.uleb128 0x25
 6061 0c13 2D030000 		.4byte	.LASF173
 6062 0c17 05       		.byte	0x5
 6063 0c18 78       		.byte	0x78
 6064 0c19 E6000000 		.4byte	0xe6
 6065 0c1d 05       		.uleb128 0x5
 6066 0c1e 03       		.byte	0x3
 6067 0c1f 00000000 		.4byte	prev_movement_state
 6068 0c23 25       		.uleb128 0x25
 6069 0c24 AE010000 		.4byte	.LASF174
 6070 0c28 05       		.byte	0x5
 6071 0c29 79       		.byte	0x79
 6072 0c2a E6000000 		.4byte	0xe6
 6073 0c2e 05       		.uleb128 0x5
 6074 0c2f 03       		.byte	0x3
 6075 0c30 00000000 		.4byte	movement_state
 6076 0c34 25       		.uleb128 0x25
 6077 0c35 95000000 		.4byte	.LASF175
 6078 0c39 05       		.byte	0x5
 6079 0c3a 7A       		.byte	0x7a
 6080 0c3b 23010000 		.4byte	0x123
 6081 0c3f 05       		.uleb128 0x5
 6082 0c40 03       		.byte	0x3
 6083 0c41 00000000 		.4byte	track_mode
 6084 0c45 25       		.uleb128 0x25
 6085 0c46 0D030000 		.4byte	.LASF176
 6086 0c4a 05       		.byte	0x5
 6087 0c4b 7C       		.byte	0x7c
 6088 0c4c 95000000 		.4byte	0x95
 6089 0c50 05       		.uleb128 0x5
 6090 0c51 03       		.byte	0x3
 6091 0c52 00000000 		.4byte	byteCount
 6092 0c56 0E       		.uleb128 0xe
 6093 0c57 83000000 		.4byte	0x83
 6094 0c5b 660C0000 		.4byte	0xc66
 6095 0c5f 0F       		.uleb128 0xf
 6096 0c60 76000000 		.4byte	0x76
 6097 0c64 01       		.byte	0x1
 6098 0c65 00       		.byte	0
 6099 0c66 25       		.uleb128 0x25
 6100 0c67 77070000 		.4byte	.LASF177
 6101 0c6b 05       		.byte	0x5
 6102 0c6c 7D       		.byte	0x7d
 6103 0c6d 560C0000 		.4byte	0xc56
 6104 0c71 05       		.uleb128 0x5
 6105 0c72 03       		.byte	0x3
 6106 0c73 00000000 		.4byte	packet
 6107 0c77 25       		.uleb128 0x25
 6108 0c78 71010000 		.4byte	.LASF178
 6109 0c7c 05       		.byte	0x5
 6110 0c7d 81       		.byte	0x81
 6111 0c7e D8000000 		.4byte	0xd8
 6112 0c82 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 128


 6113 0c83 03       		.byte	0x3
 6114 0c84 00000000 		.4byte	speed
 6115 0c88 25       		.uleb128 0x25
 6116 0c89 C8030000 		.4byte	.LASF179
 6117 0c8d 01       		.byte	0x1
 6118 0c8e 2B       		.byte	0x2b
 6119 0c8f A1000000 		.4byte	0xa1
 6120 0c93 05       		.uleb128 0x5
 6121 0c94 03       		.byte	0x3
 6122 0c95 00000000 		.4byte	instructionCount
 6123 0c99 25       		.uleb128 0x25
 6124 0c9a FB000000 		.4byte	.LASF180
 6125 0c9e 01       		.byte	0x1
 6126 0c9f 2C       		.byte	0x2c
 6127 0ca0 95000000 		.4byte	0x95
 6128 0ca4 05       		.uleb128 0x5
 6129 0ca5 03       		.byte	0x3
 6130 0ca6 00000000 		.4byte	sensorsDisabled
 6131 0caa 0E       		.uleb128 0xe
 6132 0cab 95000000 		.4byte	0x95
 6133 0caf C00C0000 		.4byte	0xcc0
 6134 0cb3 0F       		.uleb128 0xf
 6135 0cb4 76000000 		.4byte	0x76
 6136 0cb8 0E       		.byte	0xe
 6137 0cb9 0F       		.uleb128 0xf
 6138 0cba 76000000 		.4byte	0x76
 6139 0cbe 12       		.byte	0x12
 6140 0cbf 00       		.byte	0
 6141 0cc0 24       		.uleb128 0x24
 6142 0cc1 6D617000 		.ascii	"map\000"
 6143 0cc5 01       		.byte	0x1
 6144 0cc6 35       		.byte	0x35
 6145 0cc7 AA0C0000 		.4byte	0xcaa
 6146 0ccb 05       		.uleb128 0x5
 6147 0ccc 03       		.byte	0x3
 6148 0ccd 00000000 		.4byte	map
 6149 0cd1 0E       		.uleb128 0xe
 6150 0cd2 95000000 		.4byte	0x95
 6151 0cd6 E70C0000 		.4byte	0xce7
 6152 0cda 0F       		.uleb128 0xf
 6153 0cdb 76000000 		.4byte	0x76
 6154 0cdf 05       		.byte	0x5
 6155 0ce0 0F       		.uleb128 0xf
 6156 0ce1 76000000 		.4byte	0x76
 6157 0ce5 01       		.byte	0x1
 6158 0ce6 00       		.byte	0
 6159 0ce7 25       		.uleb128 0x25
 6160 0ce8 27050000 		.4byte	.LASF181
 6161 0cec 01       		.byte	0x1
 6162 0ced 48       		.byte	0x48
 6163 0cee D10C0000 		.4byte	0xcd1
 6164 0cf2 05       		.uleb128 0x5
 6165 0cf3 03       		.byte	0x3
 6166 0cf4 00000000 		.4byte	food_list
 6167 0cf8 0E       		.uleb128 0xe
 6168 0cf9 95000000 		.4byte	0x95
 6169 0cfd 0F0D0000 		.4byte	0xd0f
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 129


 6170 0d01 26       		.uleb128 0x26
 6171 0d02 76000000 		.4byte	0x76
 6172 0d06 1F03     		.2byte	0x31f
 6173 0d08 0F       		.uleb128 0xf
 6174 0d09 76000000 		.4byte	0x76
 6175 0d0d 02       		.byte	0x2
 6176 0d0e 00       		.byte	0
 6177 0d0f 25       		.uleb128 0x25
 6178 0d10 00040000 		.4byte	.LASF182
 6179 0d14 01       		.byte	0x1
 6180 0d15 30       		.byte	0x30
 6181 0d16 F80C0000 		.4byte	0xcf8
 6182 0d1a 05       		.uleb128 0x5
 6183 0d1b 03       		.byte	0x3
 6184 0d1c 00000000 		.4byte	path
 6185 0d20 0E       		.uleb128 0xe
 6186 0d21 95000000 		.4byte	0x95
 6187 0d25 300D0000 		.4byte	0xd30
 6188 0d29 0F       		.uleb128 0xf
 6189 0d2a 76000000 		.4byte	0x76
 6190 0d2e 01       		.byte	0x1
 6191 0d2f 00       		.byte	0
 6192 0d30 25       		.uleb128 0x25
 6193 0d31 89050000 		.4byte	.LASF183
 6194 0d35 01       		.byte	0x1
 6195 0d36 31       		.byte	0x31
 6196 0d37 200D0000 		.4byte	0xd20
 6197 0d3b 05       		.uleb128 0x5
 6198 0d3c 03       		.byte	0x3
 6199 0d3d 00000000 		.4byte	start
 6200 0d41 25       		.uleb128 0x25
 6201 0d42 38080000 		.4byte	.LASF184
 6202 0d46 01       		.byte	0x1
 6203 0d47 32       		.byte	0x32
 6204 0d48 200D0000 		.4byte	0xd20
 6205 0d4c 05       		.uleb128 0x5
 6206 0d4d 03       		.byte	0x3
 6207 0d4e 00000000 		.4byte	destination
 6208 0d52 25       		.uleb128 0x25
 6209 0d53 48010000 		.4byte	.LASF185
 6210 0d57 01       		.byte	0x1
 6211 0d58 2E       		.byte	0x2e
 6212 0d59 95000000 		.4byte	0x95
 6213 0d5d 05       		.uleb128 0x5
 6214 0d5e 03       		.byte	0x3
 6215 0d5f 00000000 		.4byte	robot_direction
 6216 0d63 25       		.uleb128 0x25
 6217 0d64 0A000000 		.4byte	.LASF186
 6218 0d68 07       		.byte	0x7
 6219 0d69 22       		.byte	0x22
 6220 0d6a 95000000 		.4byte	0x95
 6221 0d6e 05       		.uleb128 0x5
 6222 0d6f 03       		.byte	0x3
 6223 0d70 00000000 		.4byte	tracked_direction
 6224 0d74 25       		.uleb128 0x25
 6225 0d75 94070000 		.4byte	.LASF187
 6226 0d79 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 130


 6227 0d7a 49       		.byte	0x49
 6228 0d7b 95000000 		.4byte	0x95
 6229 0d7f 05       		.uleb128 0x5
 6230 0d80 03       		.byte	0x3
 6231 0d81 00000000 		.4byte	food_length
 6232 0d85 0E       		.uleb128 0xe
 6233 0d86 83000000 		.4byte	0x83
 6234 0d8a 960D0000 		.4byte	0xd96
 6235 0d8e 26       		.uleb128 0x26
 6236 0d8f 76000000 		.4byte	0x76
 6237 0d93 1F03     		.2byte	0x31f
 6238 0d95 00       		.byte	0
 6239 0d96 25       		.uleb128 0x25
 6240 0d97 58050000 		.4byte	.LASF188
 6241 0d9b 01       		.byte	0x1
 6242 0d9c 2A       		.byte	0x2a
 6243 0d9d 850D0000 		.4byte	0xd85
 6244 0da1 05       		.uleb128 0x5
 6245 0da2 03       		.byte	0x3
 6246 0da3 00000000 		.4byte	instructions
 6247 0da7 27       		.uleb128 0x27
 6248 0da8 63010000 		.4byte	.LASF189
 6249 0dac 01       		.byte	0x1
 6250 0dad 5D02     		.2byte	0x25d
 6251 0daf A1000000 		.4byte	0xa1
 6252 0db3 05       		.uleb128 0x5
 6253 0db4 03       		.byte	0x3
 6254 0db5 00000000 		.4byte	leftTurnCount
 6255 0db9 27       		.uleb128 0x27
 6256 0dba 22000000 		.4byte	.LASF190
 6257 0dbe 01       		.byte	0x1
 6258 0dbf 5E02     		.2byte	0x25e
 6259 0dc1 A1000000 		.4byte	0xa1
 6260 0dc5 05       		.uleb128 0x5
 6261 0dc6 03       		.byte	0x3
 6262 0dc7 00000000 		.4byte	rightTurnCount
 6263 0dcb 00       		.byte	0
 6264              		.section	.debug_abbrev,"",%progbits
 6265              	.Ldebug_abbrev0:
 6266 0000 01       		.uleb128 0x1
 6267 0001 11       		.uleb128 0x11
 6268 0002 01       		.byte	0x1
 6269 0003 25       		.uleb128 0x25
 6270 0004 0E       		.uleb128 0xe
 6271 0005 13       		.uleb128 0x13
 6272 0006 0B       		.uleb128 0xb
 6273 0007 03       		.uleb128 0x3
 6274 0008 0E       		.uleb128 0xe
 6275 0009 1B       		.uleb128 0x1b
 6276 000a 0E       		.uleb128 0xe
 6277 000b 55       		.uleb128 0x55
 6278 000c 17       		.uleb128 0x17
 6279 000d 11       		.uleb128 0x11
 6280 000e 01       		.uleb128 0x1
 6281 000f 10       		.uleb128 0x10
 6282 0010 17       		.uleb128 0x17
 6283 0011 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 131


 6284 0012 00       		.byte	0
 6285 0013 02       		.uleb128 0x2
 6286 0014 24       		.uleb128 0x24
 6287 0015 00       		.byte	0
 6288 0016 0B       		.uleb128 0xb
 6289 0017 0B       		.uleb128 0xb
 6290 0018 3E       		.uleb128 0x3e
 6291 0019 0B       		.uleb128 0xb
 6292 001a 03       		.uleb128 0x3
 6293 001b 0E       		.uleb128 0xe
 6294 001c 00       		.byte	0
 6295 001d 00       		.byte	0
 6296 001e 03       		.uleb128 0x3
 6297 001f 16       		.uleb128 0x16
 6298 0020 00       		.byte	0
 6299 0021 03       		.uleb128 0x3
 6300 0022 0E       		.uleb128 0xe
 6301 0023 3A       		.uleb128 0x3a
 6302 0024 0B       		.uleb128 0xb
 6303 0025 3B       		.uleb128 0x3b
 6304 0026 0B       		.uleb128 0xb
 6305 0027 49       		.uleb128 0x49
 6306 0028 13       		.uleb128 0x13
 6307 0029 00       		.byte	0
 6308 002a 00       		.byte	0
 6309 002b 04       		.uleb128 0x4
 6310 002c 24       		.uleb128 0x24
 6311 002d 00       		.byte	0
 6312 002e 0B       		.uleb128 0xb
 6313 002f 0B       		.uleb128 0xb
 6314 0030 3E       		.uleb128 0x3e
 6315 0031 0B       		.uleb128 0xb
 6316 0032 03       		.uleb128 0x3
 6317 0033 08       		.uleb128 0x8
 6318 0034 00       		.byte	0
 6319 0035 00       		.byte	0
 6320 0036 05       		.uleb128 0x5
 6321 0037 0F       		.uleb128 0xf
 6322 0038 00       		.byte	0
 6323 0039 0B       		.uleb128 0xb
 6324 003a 0B       		.uleb128 0xb
 6325 003b 49       		.uleb128 0x49
 6326 003c 13       		.uleb128 0x13
 6327 003d 00       		.byte	0
 6328 003e 00       		.byte	0
 6329 003f 06       		.uleb128 0x6
 6330 0040 16       		.uleb128 0x16
 6331 0041 00       		.byte	0
 6332 0042 03       		.uleb128 0x3
 6333 0043 0E       		.uleb128 0xe
 6334 0044 3A       		.uleb128 0x3a
 6335 0045 0B       		.uleb128 0xb
 6336 0046 3B       		.uleb128 0x3b
 6337 0047 05       		.uleb128 0x5
 6338 0048 49       		.uleb128 0x49
 6339 0049 13       		.uleb128 0x13
 6340 004a 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 132


 6341 004b 00       		.byte	0
 6342 004c 07       		.uleb128 0x7
 6343 004d 04       		.uleb128 0x4
 6344 004e 01       		.byte	0x1
 6345 004f 03       		.uleb128 0x3
 6346 0050 0E       		.uleb128 0xe
 6347 0051 0B       		.uleb128 0xb
 6348 0052 0B       		.uleb128 0xb
 6349 0053 3A       		.uleb128 0x3a
 6350 0054 0B       		.uleb128 0xb
 6351 0055 3B       		.uleb128 0x3b
 6352 0056 0B       		.uleb128 0xb
 6353 0057 01       		.uleb128 0x1
 6354 0058 13       		.uleb128 0x13
 6355 0059 00       		.byte	0
 6356 005a 00       		.byte	0
 6357 005b 08       		.uleb128 0x8
 6358 005c 28       		.uleb128 0x28
 6359 005d 00       		.byte	0
 6360 005e 03       		.uleb128 0x3
 6361 005f 0E       		.uleb128 0xe
 6362 0060 1C       		.uleb128 0x1c
 6363 0061 0D       		.uleb128 0xd
 6364 0062 00       		.byte	0
 6365 0063 00       		.byte	0
 6366 0064 09       		.uleb128 0x9
 6367 0065 13       		.uleb128 0x13
 6368 0066 01       		.byte	0x1
 6369 0067 03       		.uleb128 0x3
 6370 0068 0E       		.uleb128 0xe
 6371 0069 0B       		.uleb128 0xb
 6372 006a 0B       		.uleb128 0xb
 6373 006b 3A       		.uleb128 0x3a
 6374 006c 0B       		.uleb128 0xb
 6375 006d 3B       		.uleb128 0x3b
 6376 006e 0B       		.uleb128 0xb
 6377 006f 01       		.uleb128 0x1
 6378 0070 13       		.uleb128 0x13
 6379 0071 00       		.byte	0
 6380 0072 00       		.byte	0
 6381 0073 0A       		.uleb128 0xa
 6382 0074 0D       		.uleb128 0xd
 6383 0075 00       		.byte	0
 6384 0076 03       		.uleb128 0x3
 6385 0077 0E       		.uleb128 0xe
 6386 0078 3A       		.uleb128 0x3a
 6387 0079 0B       		.uleb128 0xb
 6388 007a 3B       		.uleb128 0x3b
 6389 007b 0B       		.uleb128 0xb
 6390 007c 49       		.uleb128 0x49
 6391 007d 13       		.uleb128 0x13
 6392 007e 38       		.uleb128 0x38
 6393 007f 0B       		.uleb128 0xb
 6394 0080 00       		.byte	0
 6395 0081 00       		.byte	0
 6396 0082 0B       		.uleb128 0xb
 6397 0083 2E       		.uleb128 0x2e
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 133


 6398 0084 01       		.byte	0x1
 6399 0085 3F       		.uleb128 0x3f
 6400 0086 19       		.uleb128 0x19
 6401 0087 03       		.uleb128 0x3
 6402 0088 0E       		.uleb128 0xe
 6403 0089 3A       		.uleb128 0x3a
 6404 008a 0B       		.uleb128 0xb
 6405 008b 3B       		.uleb128 0x3b
 6406 008c 0B       		.uleb128 0xb
 6407 008d 11       		.uleb128 0x11
 6408 008e 01       		.uleb128 0x1
 6409 008f 12       		.uleb128 0x12
 6410 0090 06       		.uleb128 0x6
 6411 0091 40       		.uleb128 0x40
 6412 0092 18       		.uleb128 0x18
 6413 0093 9742     		.uleb128 0x2117
 6414 0095 19       		.uleb128 0x19
 6415 0096 01       		.uleb128 0x1
 6416 0097 13       		.uleb128 0x13
 6417 0098 00       		.byte	0
 6418 0099 00       		.byte	0
 6419 009a 0C       		.uleb128 0xc
 6420 009b 0B       		.uleb128 0xb
 6421 009c 01       		.byte	0x1
 6422 009d 11       		.uleb128 0x11
 6423 009e 01       		.uleb128 0x1
 6424 009f 12       		.uleb128 0x12
 6425 00a0 06       		.uleb128 0x6
 6426 00a1 00       		.byte	0
 6427 00a2 00       		.byte	0
 6428 00a3 0D       		.uleb128 0xd
 6429 00a4 34       		.uleb128 0x34
 6430 00a5 00       		.byte	0
 6431 00a6 03       		.uleb128 0x3
 6432 00a7 0E       		.uleb128 0xe
 6433 00a8 3A       		.uleb128 0x3a
 6434 00a9 0B       		.uleb128 0xb
 6435 00aa 3B       		.uleb128 0x3b
 6436 00ab 0B       		.uleb128 0xb
 6437 00ac 49       		.uleb128 0x49
 6438 00ad 13       		.uleb128 0x13
 6439 00ae 02       		.uleb128 0x2
 6440 00af 18       		.uleb128 0x18
 6441 00b0 00       		.byte	0
 6442 00b1 00       		.byte	0
 6443 00b2 0E       		.uleb128 0xe
 6444 00b3 01       		.uleb128 0x1
 6445 00b4 01       		.byte	0x1
 6446 00b5 49       		.uleb128 0x49
 6447 00b6 13       		.uleb128 0x13
 6448 00b7 01       		.uleb128 0x1
 6449 00b8 13       		.uleb128 0x13
 6450 00b9 00       		.byte	0
 6451 00ba 00       		.byte	0
 6452 00bb 0F       		.uleb128 0xf
 6453 00bc 21       		.uleb128 0x21
 6454 00bd 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 134


 6455 00be 49       		.uleb128 0x49
 6456 00bf 13       		.uleb128 0x13
 6457 00c0 2F       		.uleb128 0x2f
 6458 00c1 0B       		.uleb128 0xb
 6459 00c2 00       		.byte	0
 6460 00c3 00       		.byte	0
 6461 00c4 10       		.uleb128 0x10
 6462 00c5 2E       		.uleb128 0x2e
 6463 00c6 01       		.byte	0x1
 6464 00c7 3F       		.uleb128 0x3f
 6465 00c8 19       		.uleb128 0x19
 6466 00c9 03       		.uleb128 0x3
 6467 00ca 0E       		.uleb128 0xe
 6468 00cb 3A       		.uleb128 0x3a
 6469 00cc 0B       		.uleb128 0xb
 6470 00cd 3B       		.uleb128 0x3b
 6471 00ce 0B       		.uleb128 0xb
 6472 00cf 27       		.uleb128 0x27
 6473 00d0 19       		.uleb128 0x19
 6474 00d1 11       		.uleb128 0x11
 6475 00d2 01       		.uleb128 0x1
 6476 00d3 12       		.uleb128 0x12
 6477 00d4 06       		.uleb128 0x6
 6478 00d5 40       		.uleb128 0x40
 6479 00d6 18       		.uleb128 0x18
 6480 00d7 9642     		.uleb128 0x2116
 6481 00d9 19       		.uleb128 0x19
 6482 00da 01       		.uleb128 0x1
 6483 00db 13       		.uleb128 0x13
 6484 00dc 00       		.byte	0
 6485 00dd 00       		.byte	0
 6486 00de 11       		.uleb128 0x11
 6487 00df 05       		.uleb128 0x5
 6488 00e0 00       		.byte	0
 6489 00e1 03       		.uleb128 0x3
 6490 00e2 08       		.uleb128 0x8
 6491 00e3 3A       		.uleb128 0x3a
 6492 00e4 0B       		.uleb128 0xb
 6493 00e5 3B       		.uleb128 0x3b
 6494 00e6 0B       		.uleb128 0xb
 6495 00e7 49       		.uleb128 0x49
 6496 00e8 13       		.uleb128 0x13
 6497 00e9 02       		.uleb128 0x2
 6498 00ea 18       		.uleb128 0x18
 6499 00eb 00       		.byte	0
 6500 00ec 00       		.byte	0
 6501 00ed 12       		.uleb128 0x12
 6502 00ee 2E       		.uleb128 0x2e
 6503 00ef 01       		.byte	0x1
 6504 00f0 3F       		.uleb128 0x3f
 6505 00f1 19       		.uleb128 0x19
 6506 00f2 03       		.uleb128 0x3
 6507 00f3 0E       		.uleb128 0xe
 6508 00f4 3A       		.uleb128 0x3a
 6509 00f5 0B       		.uleb128 0xb
 6510 00f6 3B       		.uleb128 0x3b
 6511 00f7 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 135


 6512 00f8 11       		.uleb128 0x11
 6513 00f9 01       		.uleb128 0x1
 6514 00fa 12       		.uleb128 0x12
 6515 00fb 06       		.uleb128 0x6
 6516 00fc 40       		.uleb128 0x40
 6517 00fd 18       		.uleb128 0x18
 6518 00fe 9642     		.uleb128 0x2116
 6519 0100 19       		.uleb128 0x19
 6520 0101 01       		.uleb128 0x1
 6521 0102 13       		.uleb128 0x13
 6522 0103 00       		.byte	0
 6523 0104 00       		.byte	0
 6524 0105 13       		.uleb128 0x13
 6525 0106 34       		.uleb128 0x34
 6526 0107 00       		.byte	0
 6527 0108 03       		.uleb128 0x3
 6528 0109 08       		.uleb128 0x8
 6529 010a 3A       		.uleb128 0x3a
 6530 010b 0B       		.uleb128 0xb
 6531 010c 3B       		.uleb128 0x3b
 6532 010d 0B       		.uleb128 0xb
 6533 010e 49       		.uleb128 0x49
 6534 010f 13       		.uleb128 0x13
 6535 0110 02       		.uleb128 0x2
 6536 0111 18       		.uleb128 0x18
 6537 0112 00       		.byte	0
 6538 0113 00       		.byte	0
 6539 0114 14       		.uleb128 0x14
 6540 0115 05       		.uleb128 0x5
 6541 0116 00       		.byte	0
 6542 0117 03       		.uleb128 0x3
 6543 0118 0E       		.uleb128 0xe
 6544 0119 3A       		.uleb128 0x3a
 6545 011a 0B       		.uleb128 0xb
 6546 011b 3B       		.uleb128 0x3b
 6547 011c 0B       		.uleb128 0xb
 6548 011d 49       		.uleb128 0x49
 6549 011e 13       		.uleb128 0x13
 6550 011f 02       		.uleb128 0x2
 6551 0120 18       		.uleb128 0x18
 6552 0121 00       		.byte	0
 6553 0122 00       		.byte	0
 6554 0123 15       		.uleb128 0x15
 6555 0124 2E       		.uleb128 0x2e
 6556 0125 00       		.byte	0
 6557 0126 3F       		.uleb128 0x3f
 6558 0127 19       		.uleb128 0x19
 6559 0128 03       		.uleb128 0x3
 6560 0129 0E       		.uleb128 0xe
 6561 012a 3A       		.uleb128 0x3a
 6562 012b 0B       		.uleb128 0xb
 6563 012c 3B       		.uleb128 0x3b
 6564 012d 0B       		.uleb128 0xb
 6565 012e 11       		.uleb128 0x11
 6566 012f 01       		.uleb128 0x1
 6567 0130 12       		.uleb128 0x12
 6568 0131 06       		.uleb128 0x6
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 136


 6569 0132 40       		.uleb128 0x40
 6570 0133 18       		.uleb128 0x18
 6571 0134 9642     		.uleb128 0x2116
 6572 0136 19       		.uleb128 0x19
 6573 0137 00       		.byte	0
 6574 0138 00       		.byte	0
 6575 0139 16       		.uleb128 0x16
 6576 013a 2E       		.uleb128 0x2e
 6577 013b 00       		.byte	0
 6578 013c 3F       		.uleb128 0x3f
 6579 013d 19       		.uleb128 0x19
 6580 013e 03       		.uleb128 0x3
 6581 013f 0E       		.uleb128 0xe
 6582 0140 3A       		.uleb128 0x3a
 6583 0141 0B       		.uleb128 0xb
 6584 0142 3B       		.uleb128 0x3b
 6585 0143 05       		.uleb128 0x5
 6586 0144 11       		.uleb128 0x11
 6587 0145 01       		.uleb128 0x1
 6588 0146 12       		.uleb128 0x12
 6589 0147 06       		.uleb128 0x6
 6590 0148 40       		.uleb128 0x40
 6591 0149 18       		.uleb128 0x18
 6592 014a 9642     		.uleb128 0x2116
 6593 014c 19       		.uleb128 0x19
 6594 014d 00       		.byte	0
 6595 014e 00       		.byte	0
 6596 014f 17       		.uleb128 0x17
 6597 0150 2E       		.uleb128 0x2e
 6598 0151 00       		.byte	0
 6599 0152 3F       		.uleb128 0x3f
 6600 0153 19       		.uleb128 0x19
 6601 0154 03       		.uleb128 0x3
 6602 0155 0E       		.uleb128 0xe
 6603 0156 3A       		.uleb128 0x3a
 6604 0157 0B       		.uleb128 0xb
 6605 0158 3B       		.uleb128 0x3b
 6606 0159 05       		.uleb128 0x5
 6607 015a 11       		.uleb128 0x11
 6608 015b 01       		.uleb128 0x1
 6609 015c 12       		.uleb128 0x12
 6610 015d 06       		.uleb128 0x6
 6611 015e 40       		.uleb128 0x40
 6612 015f 18       		.uleb128 0x18
 6613 0160 9742     		.uleb128 0x2117
 6614 0162 19       		.uleb128 0x19
 6615 0163 00       		.byte	0
 6616 0164 00       		.byte	0
 6617 0165 18       		.uleb128 0x18
 6618 0166 2E       		.uleb128 0x2e
 6619 0167 01       		.byte	0x1
 6620 0168 3F       		.uleb128 0x3f
 6621 0169 19       		.uleb128 0x19
 6622 016a 03       		.uleb128 0x3
 6623 016b 0E       		.uleb128 0xe
 6624 016c 3A       		.uleb128 0x3a
 6625 016d 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 137


 6626 016e 3B       		.uleb128 0x3b
 6627 016f 05       		.uleb128 0x5
 6628 0170 27       		.uleb128 0x27
 6629 0171 19       		.uleb128 0x19
 6630 0172 11       		.uleb128 0x11
 6631 0173 01       		.uleb128 0x1
 6632 0174 12       		.uleb128 0x12
 6633 0175 06       		.uleb128 0x6
 6634 0176 40       		.uleb128 0x40
 6635 0177 18       		.uleb128 0x18
 6636 0178 9642     		.uleb128 0x2116
 6637 017a 19       		.uleb128 0x19
 6638 017b 01       		.uleb128 0x1
 6639 017c 13       		.uleb128 0x13
 6640 017d 00       		.byte	0
 6641 017e 00       		.byte	0
 6642 017f 19       		.uleb128 0x19
 6643 0180 34       		.uleb128 0x34
 6644 0181 00       		.byte	0
 6645 0182 03       		.uleb128 0x3
 6646 0183 0E       		.uleb128 0xe
 6647 0184 3A       		.uleb128 0x3a
 6648 0185 0B       		.uleb128 0xb
 6649 0186 3B       		.uleb128 0x3b
 6650 0187 05       		.uleb128 0x5
 6651 0188 49       		.uleb128 0x49
 6652 0189 13       		.uleb128 0x13
 6653 018a 02       		.uleb128 0x2
 6654 018b 18       		.uleb128 0x18
 6655 018c 00       		.byte	0
 6656 018d 00       		.byte	0
 6657 018e 1A       		.uleb128 0x1a
 6658 018f 34       		.uleb128 0x34
 6659 0190 00       		.byte	0
 6660 0191 03       		.uleb128 0x3
 6661 0192 08       		.uleb128 0x8
 6662 0193 3A       		.uleb128 0x3a
 6663 0194 0B       		.uleb128 0xb
 6664 0195 3B       		.uleb128 0x3b
 6665 0196 05       		.uleb128 0x5
 6666 0197 49       		.uleb128 0x49
 6667 0198 13       		.uleb128 0x13
 6668 0199 02       		.uleb128 0x2
 6669 019a 18       		.uleb128 0x18
 6670 019b 00       		.byte	0
 6671 019c 00       		.byte	0
 6672 019d 1B       		.uleb128 0x1b
 6673 019e 2E       		.uleb128 0x2e
 6674 019f 00       		.byte	0
 6675 01a0 3F       		.uleb128 0x3f
 6676 01a1 19       		.uleb128 0x19
 6677 01a2 03       		.uleb128 0x3
 6678 01a3 0E       		.uleb128 0xe
 6679 01a4 3A       		.uleb128 0x3a
 6680 01a5 0B       		.uleb128 0xb
 6681 01a6 3B       		.uleb128 0x3b
 6682 01a7 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 138


 6683 01a8 27       		.uleb128 0x27
 6684 01a9 19       		.uleb128 0x19
 6685 01aa 11       		.uleb128 0x11
 6686 01ab 01       		.uleb128 0x1
 6687 01ac 12       		.uleb128 0x12
 6688 01ad 06       		.uleb128 0x6
 6689 01ae 40       		.uleb128 0x40
 6690 01af 18       		.uleb128 0x18
 6691 01b0 9742     		.uleb128 0x2117
 6692 01b2 19       		.uleb128 0x19
 6693 01b3 00       		.byte	0
 6694 01b4 00       		.byte	0
 6695 01b5 1C       		.uleb128 0x1c
 6696 01b6 2E       		.uleb128 0x2e
 6697 01b7 00       		.byte	0
 6698 01b8 3F       		.uleb128 0x3f
 6699 01b9 19       		.uleb128 0x19
 6700 01ba 03       		.uleb128 0x3
 6701 01bb 0E       		.uleb128 0xe
 6702 01bc 3A       		.uleb128 0x3a
 6703 01bd 0B       		.uleb128 0xb
 6704 01be 3B       		.uleb128 0x3b
 6705 01bf 05       		.uleb128 0x5
 6706 01c0 27       		.uleb128 0x27
 6707 01c1 19       		.uleb128 0x19
 6708 01c2 11       		.uleb128 0x11
 6709 01c3 01       		.uleb128 0x1
 6710 01c4 12       		.uleb128 0x12
 6711 01c5 06       		.uleb128 0x6
 6712 01c6 40       		.uleb128 0x40
 6713 01c7 18       		.uleb128 0x18
 6714 01c8 9642     		.uleb128 0x2116
 6715 01ca 19       		.uleb128 0x19
 6716 01cb 00       		.byte	0
 6717 01cc 00       		.byte	0
 6718 01cd 1D       		.uleb128 0x1d
 6719 01ce 0B       		.uleb128 0xb
 6720 01cf 01       		.byte	0x1
 6721 01d0 11       		.uleb128 0x11
 6722 01d1 01       		.uleb128 0x1
 6723 01d2 12       		.uleb128 0x12
 6724 01d3 06       		.uleb128 0x6
 6725 01d4 01       		.uleb128 0x1
 6726 01d5 13       		.uleb128 0x13
 6727 01d6 00       		.byte	0
 6728 01d7 00       		.byte	0
 6729 01d8 1E       		.uleb128 0x1e
 6730 01d9 2E       		.uleb128 0x2e
 6731 01da 01       		.byte	0x1
 6732 01db 3F       		.uleb128 0x3f
 6733 01dc 19       		.uleb128 0x19
 6734 01dd 03       		.uleb128 0x3
 6735 01de 0E       		.uleb128 0xe
 6736 01df 3A       		.uleb128 0x3a
 6737 01e0 0B       		.uleb128 0xb
 6738 01e1 3B       		.uleb128 0x3b
 6739 01e2 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 139


 6740 01e3 11       		.uleb128 0x11
 6741 01e4 01       		.uleb128 0x1
 6742 01e5 12       		.uleb128 0x12
 6743 01e6 06       		.uleb128 0x6
 6744 01e7 40       		.uleb128 0x40
 6745 01e8 18       		.uleb128 0x18
 6746 01e9 9642     		.uleb128 0x2116
 6747 01eb 19       		.uleb128 0x19
 6748 01ec 01       		.uleb128 0x1
 6749 01ed 13       		.uleb128 0x13
 6750 01ee 00       		.byte	0
 6751 01ef 00       		.byte	0
 6752 01f0 1F       		.uleb128 0x1f
 6753 01f1 05       		.uleb128 0x5
 6754 01f2 00       		.byte	0
 6755 01f3 03       		.uleb128 0x3
 6756 01f4 0E       		.uleb128 0xe
 6757 01f5 3A       		.uleb128 0x3a
 6758 01f6 0B       		.uleb128 0xb
 6759 01f7 3B       		.uleb128 0x3b
 6760 01f8 05       		.uleb128 0x5
 6761 01f9 49       		.uleb128 0x49
 6762 01fa 13       		.uleb128 0x13
 6763 01fb 02       		.uleb128 0x2
 6764 01fc 18       		.uleb128 0x18
 6765 01fd 00       		.byte	0
 6766 01fe 00       		.byte	0
 6767 01ff 20       		.uleb128 0x20
 6768 0200 2E       		.uleb128 0x2e
 6769 0201 01       		.byte	0x1
 6770 0202 3F       		.uleb128 0x3f
 6771 0203 19       		.uleb128 0x19
 6772 0204 03       		.uleb128 0x3
 6773 0205 0E       		.uleb128 0xe
 6774 0206 3A       		.uleb128 0x3a
 6775 0207 0B       		.uleb128 0xb
 6776 0208 3B       		.uleb128 0x3b
 6777 0209 05       		.uleb128 0x5
 6778 020a 49       		.uleb128 0x49
 6779 020b 13       		.uleb128 0x13
 6780 020c 11       		.uleb128 0x11
 6781 020d 01       		.uleb128 0x1
 6782 020e 12       		.uleb128 0x12
 6783 020f 06       		.uleb128 0x6
 6784 0210 40       		.uleb128 0x40
 6785 0211 18       		.uleb128 0x18
 6786 0212 9642     		.uleb128 0x2116
 6787 0214 19       		.uleb128 0x19
 6788 0215 01       		.uleb128 0x1
 6789 0216 13       		.uleb128 0x13
 6790 0217 00       		.byte	0
 6791 0218 00       		.byte	0
 6792 0219 21       		.uleb128 0x21
 6793 021a 05       		.uleb128 0x5
 6794 021b 00       		.byte	0
 6795 021c 03       		.uleb128 0x3
 6796 021d 08       		.uleb128 0x8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 140


 6797 021e 3A       		.uleb128 0x3a
 6798 021f 0B       		.uleb128 0xb
 6799 0220 3B       		.uleb128 0x3b
 6800 0221 05       		.uleb128 0x5
 6801 0222 49       		.uleb128 0x49
 6802 0223 13       		.uleb128 0x13
 6803 0224 02       		.uleb128 0x2
 6804 0225 18       		.uleb128 0x18
 6805 0226 00       		.byte	0
 6806 0227 00       		.byte	0
 6807 0228 22       		.uleb128 0x22
 6808 0229 34       		.uleb128 0x34
 6809 022a 00       		.byte	0
 6810 022b 03       		.uleb128 0x3
 6811 022c 0E       		.uleb128 0xe
 6812 022d 3A       		.uleb128 0x3a
 6813 022e 0B       		.uleb128 0xb
 6814 022f 3B       		.uleb128 0x3b
 6815 0230 05       		.uleb128 0x5
 6816 0231 49       		.uleb128 0x49
 6817 0232 13       		.uleb128 0x13
 6818 0233 3F       		.uleb128 0x3f
 6819 0234 19       		.uleb128 0x19
 6820 0235 3C       		.uleb128 0x3c
 6821 0236 19       		.uleb128 0x19
 6822 0237 00       		.byte	0
 6823 0238 00       		.byte	0
 6824 0239 23       		.uleb128 0x23
 6825 023a 35       		.uleb128 0x35
 6826 023b 00       		.byte	0
 6827 023c 49       		.uleb128 0x49
 6828 023d 13       		.uleb128 0x13
 6829 023e 00       		.byte	0
 6830 023f 00       		.byte	0
 6831 0240 24       		.uleb128 0x24
 6832 0241 34       		.uleb128 0x34
 6833 0242 00       		.byte	0
 6834 0243 03       		.uleb128 0x3
 6835 0244 08       		.uleb128 0x8
 6836 0245 3A       		.uleb128 0x3a
 6837 0246 0B       		.uleb128 0xb
 6838 0247 3B       		.uleb128 0x3b
 6839 0248 0B       		.uleb128 0xb
 6840 0249 49       		.uleb128 0x49
 6841 024a 13       		.uleb128 0x13
 6842 024b 3F       		.uleb128 0x3f
 6843 024c 19       		.uleb128 0x19
 6844 024d 02       		.uleb128 0x2
 6845 024e 18       		.uleb128 0x18
 6846 024f 00       		.byte	0
 6847 0250 00       		.byte	0
 6848 0251 25       		.uleb128 0x25
 6849 0252 34       		.uleb128 0x34
 6850 0253 00       		.byte	0
 6851 0254 03       		.uleb128 0x3
 6852 0255 0E       		.uleb128 0xe
 6853 0256 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 141


 6854 0257 0B       		.uleb128 0xb
 6855 0258 3B       		.uleb128 0x3b
 6856 0259 0B       		.uleb128 0xb
 6857 025a 49       		.uleb128 0x49
 6858 025b 13       		.uleb128 0x13
 6859 025c 3F       		.uleb128 0x3f
 6860 025d 19       		.uleb128 0x19
 6861 025e 02       		.uleb128 0x2
 6862 025f 18       		.uleb128 0x18
 6863 0260 00       		.byte	0
 6864 0261 00       		.byte	0
 6865 0262 26       		.uleb128 0x26
 6866 0263 21       		.uleb128 0x21
 6867 0264 00       		.byte	0
 6868 0265 49       		.uleb128 0x49
 6869 0266 13       		.uleb128 0x13
 6870 0267 2F       		.uleb128 0x2f
 6871 0268 05       		.uleb128 0x5
 6872 0269 00       		.byte	0
 6873 026a 00       		.byte	0
 6874 026b 27       		.uleb128 0x27
 6875 026c 34       		.uleb128 0x34
 6876 026d 00       		.byte	0
 6877 026e 03       		.uleb128 0x3
 6878 026f 0E       		.uleb128 0xe
 6879 0270 3A       		.uleb128 0x3a
 6880 0271 0B       		.uleb128 0xb
 6881 0272 3B       		.uleb128 0x3b
 6882 0273 05       		.uleb128 0x5
 6883 0274 49       		.uleb128 0x49
 6884 0275 13       		.uleb128 0x13
 6885 0276 3F       		.uleb128 0x3f
 6886 0277 19       		.uleb128 0x19
 6887 0278 02       		.uleb128 0x2
 6888 0279 18       		.uleb128 0x18
 6889 027a 00       		.byte	0
 6890 027b 00       		.byte	0
 6891 027c 00       		.byte	0
 6892              		.section	.debug_aranges,"",%progbits
 6893 0000 6C010000 		.4byte	0x16c
 6894 0004 0200     		.2byte	0x2
 6895 0006 00000000 		.4byte	.Ldebug_info0
 6896 000a 04       		.byte	0x4
 6897 000b 00       		.byte	0
 6898 000c 0000     		.2byte	0
 6899 000e 0000     		.2byte	0
 6900 0010 00000000 		.4byte	.LFB63
 6901 0014 60010000 		.4byte	.LFE63-.LFB63
 6902 0018 00000000 		.4byte	.LFB64
 6903 001c 18000000 		.4byte	.LFE64-.LFB64
 6904 0020 00000000 		.4byte	.LFB65
 6905 0024 18000000 		.4byte	.LFE65-.LFB65
 6906 0028 00000000 		.4byte	.LFB66
 6907 002c 54000000 		.4byte	.LFE66-.LFB66
 6908 0030 00000000 		.4byte	.LFB67
 6909 0034 F4000000 		.4byte	.LFE67-.LFB67
 6910 0038 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 142


 6911 003c 18000000 		.4byte	.LFE68-.LFB68
 6912 0040 00000000 		.4byte	.LFB69
 6913 0044 18000000 		.4byte	.LFE69-.LFB69
 6914 0048 00000000 		.4byte	.LFB70
 6915 004c 22000000 		.4byte	.LFE70-.LFB70
 6916 0050 00000000 		.4byte	.LFB71
 6917 0054 1C000000 		.4byte	.LFE71-.LFB71
 6918 0058 00000000 		.4byte	.LFB72
 6919 005c 28000000 		.4byte	.LFE72-.LFB72
 6920 0060 00000000 		.4byte	.LFB73
 6921 0064 2C000000 		.4byte	.LFE73-.LFB73
 6922 0068 00000000 		.4byte	.LFB74
 6923 006c 44000000 		.4byte	.LFE74-.LFB74
 6924 0070 00000000 		.4byte	.LFB75
 6925 0074 38000000 		.4byte	.LFE75-.LFB75
 6926 0078 00000000 		.4byte	.LFB76
 6927 007c 38000000 		.4byte	.LFE76-.LFB76
 6928 0080 00000000 		.4byte	.LFB77
 6929 0084 38000000 		.4byte	.LFE77-.LFB77
 6930 0088 00000000 		.4byte	.LFB78
 6931 008c 14000000 		.4byte	.LFE78-.LFB78
 6932 0090 00000000 		.4byte	.LFB79
 6933 0094 18000000 		.4byte	.LFE79-.LFB79
 6934 0098 00000000 		.4byte	.LFB80
 6935 009c 18000000 		.4byte	.LFE80-.LFB80
 6936 00a0 00000000 		.4byte	.LFB81
 6937 00a4 18000000 		.4byte	.LFE81-.LFB81
 6938 00a8 00000000 		.4byte	.LFB82
 6939 00ac 18000000 		.4byte	.LFE82-.LFB82
 6940 00b0 00000000 		.4byte	.LFB83
 6941 00b4 B8000000 		.4byte	.LFE83-.LFB83
 6942 00b8 00000000 		.4byte	.LFB84
 6943 00bc BC010000 		.4byte	.LFE84-.LFB84
 6944 00c0 00000000 		.4byte	.LFB85
 6945 00c4 0C000000 		.4byte	.LFE85-.LFB85
 6946 00c8 00000000 		.4byte	.LFB86
 6947 00cc 2C000000 		.4byte	.LFE86-.LFB86
 6948 00d0 00000000 		.4byte	.LFB87
 6949 00d4 EC010000 		.4byte	.LFE87-.LFB87
 6950 00d8 00000000 		.4byte	.LFB88
 6951 00dc AC000000 		.4byte	.LFE88-.LFB88
 6952 00e0 00000000 		.4byte	.LFB89
 6953 00e4 20000000 		.4byte	.LFE89-.LFB89
 6954 00e8 00000000 		.4byte	.LFB90
 6955 00ec 28000000 		.4byte	.LFE90-.LFB90
 6956 00f0 00000000 		.4byte	.LFB91
 6957 00f4 0A000000 		.4byte	.LFE91-.LFB91
 6958 00f8 00000000 		.4byte	.LFB92
 6959 00fc 28000000 		.4byte	.LFE92-.LFB92
 6960 0100 00000000 		.4byte	.LFB93
 6961 0104 40000000 		.4byte	.LFE93-.LFB93
 6962 0108 00000000 		.4byte	.LFB94
 6963 010c 40000000 		.4byte	.LFE94-.LFB94
 6964 0110 00000000 		.4byte	.LFB95
 6965 0114 2C020000 		.4byte	.LFE95-.LFB95
 6966 0118 00000000 		.4byte	.LFB96
 6967 011c 50010000 		.4byte	.LFE96-.LFB96
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 143


 6968 0120 00000000 		.4byte	.LFB97
 6969 0124 04010000 		.4byte	.LFE97-.LFB97
 6970 0128 00000000 		.4byte	.LFB98
 6971 012c 0C000000 		.4byte	.LFE98-.LFB98
 6972 0130 00000000 		.4byte	.LFB99
 6973 0134 C0000000 		.4byte	.LFE99-.LFB99
 6974 0138 00000000 		.4byte	.LFB100
 6975 013c B8000000 		.4byte	.LFE100-.LFB100
 6976 0140 00000000 		.4byte	.LFB101
 6977 0144 4A000000 		.4byte	.LFE101-.LFB101
 6978 0148 00000000 		.4byte	.LFB102
 6979 014c 14030000 		.4byte	.LFE102-.LFB102
 6980 0150 00000000 		.4byte	.LFB103
 6981 0154 68000000 		.4byte	.LFE103-.LFB103
 6982 0158 00000000 		.4byte	.LFB104
 6983 015c 50000000 		.4byte	.LFE104-.LFB104
 6984 0160 00000000 		.4byte	.LFB105
 6985 0164 3A000000 		.4byte	.LFE105-.LFB105
 6986 0168 00000000 		.4byte	0
 6987 016c 00000000 		.4byte	0
 6988              		.section	.debug_ranges,"",%progbits
 6989              	.Ldebug_ranges0:
 6990 0000 00000000 		.4byte	.LFB63
 6991 0004 60010000 		.4byte	.LFE63
 6992 0008 00000000 		.4byte	.LFB64
 6993 000c 18000000 		.4byte	.LFE64
 6994 0010 00000000 		.4byte	.LFB65
 6995 0014 18000000 		.4byte	.LFE65
 6996 0018 00000000 		.4byte	.LFB66
 6997 001c 54000000 		.4byte	.LFE66
 6998 0020 00000000 		.4byte	.LFB67
 6999 0024 F4000000 		.4byte	.LFE67
 7000 0028 00000000 		.4byte	.LFB68
 7001 002c 18000000 		.4byte	.LFE68
 7002 0030 00000000 		.4byte	.LFB69
 7003 0034 18000000 		.4byte	.LFE69
 7004 0038 00000000 		.4byte	.LFB70
 7005 003c 22000000 		.4byte	.LFE70
 7006 0040 00000000 		.4byte	.LFB71
 7007 0044 1C000000 		.4byte	.LFE71
 7008 0048 00000000 		.4byte	.LFB72
 7009 004c 28000000 		.4byte	.LFE72
 7010 0050 00000000 		.4byte	.LFB73
 7011 0054 2C000000 		.4byte	.LFE73
 7012 0058 00000000 		.4byte	.LFB74
 7013 005c 44000000 		.4byte	.LFE74
 7014 0060 00000000 		.4byte	.LFB75
 7015 0064 38000000 		.4byte	.LFE75
 7016 0068 00000000 		.4byte	.LFB76
 7017 006c 38000000 		.4byte	.LFE76
 7018 0070 00000000 		.4byte	.LFB77
 7019 0074 38000000 		.4byte	.LFE77
 7020 0078 00000000 		.4byte	.LFB78
 7021 007c 14000000 		.4byte	.LFE78
 7022 0080 00000000 		.4byte	.LFB79
 7023 0084 18000000 		.4byte	.LFE79
 7024 0088 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 144


 7025 008c 18000000 		.4byte	.LFE80
 7026 0090 00000000 		.4byte	.LFB81
 7027 0094 18000000 		.4byte	.LFE81
 7028 0098 00000000 		.4byte	.LFB82
 7029 009c 18000000 		.4byte	.LFE82
 7030 00a0 00000000 		.4byte	.LFB83
 7031 00a4 B8000000 		.4byte	.LFE83
 7032 00a8 00000000 		.4byte	.LFB84
 7033 00ac BC010000 		.4byte	.LFE84
 7034 00b0 00000000 		.4byte	.LFB85
 7035 00b4 0C000000 		.4byte	.LFE85
 7036 00b8 00000000 		.4byte	.LFB86
 7037 00bc 2C000000 		.4byte	.LFE86
 7038 00c0 00000000 		.4byte	.LFB87
 7039 00c4 EC010000 		.4byte	.LFE87
 7040 00c8 00000000 		.4byte	.LFB88
 7041 00cc AC000000 		.4byte	.LFE88
 7042 00d0 00000000 		.4byte	.LFB89
 7043 00d4 20000000 		.4byte	.LFE89
 7044 00d8 00000000 		.4byte	.LFB90
 7045 00dc 28000000 		.4byte	.LFE90
 7046 00e0 00000000 		.4byte	.LFB91
 7047 00e4 0A000000 		.4byte	.LFE91
 7048 00e8 00000000 		.4byte	.LFB92
 7049 00ec 28000000 		.4byte	.LFE92
 7050 00f0 00000000 		.4byte	.LFB93
 7051 00f4 40000000 		.4byte	.LFE93
 7052 00f8 00000000 		.4byte	.LFB94
 7053 00fc 40000000 		.4byte	.LFE94
 7054 0100 00000000 		.4byte	.LFB95
 7055 0104 2C020000 		.4byte	.LFE95
 7056 0108 00000000 		.4byte	.LFB96
 7057 010c 50010000 		.4byte	.LFE96
 7058 0110 00000000 		.4byte	.LFB97
 7059 0114 04010000 		.4byte	.LFE97
 7060 0118 00000000 		.4byte	.LFB98
 7061 011c 0C000000 		.4byte	.LFE98
 7062 0120 00000000 		.4byte	.LFB99
 7063 0124 C0000000 		.4byte	.LFE99
 7064 0128 00000000 		.4byte	.LFB100
 7065 012c B8000000 		.4byte	.LFE100
 7066 0130 00000000 		.4byte	.LFB101
 7067 0134 4A000000 		.4byte	.LFE101
 7068 0138 00000000 		.4byte	.LFB102
 7069 013c 14030000 		.4byte	.LFE102
 7070 0140 00000000 		.4byte	.LFB103
 7071 0144 68000000 		.4byte	.LFE103
 7072 0148 00000000 		.4byte	.LFB104
 7073 014c 50000000 		.4byte	.LFE104
 7074 0150 00000000 		.4byte	.LFB105
 7075 0154 3A000000 		.4byte	.LFE105
 7076 0158 00000000 		.4byte	0
 7077 015c 00000000 		.4byte	0
 7078              		.section	.debug_line,"",%progbits
 7079              	.Ldebug_line0:
 7080 0000 04070000 		.section	.debug_str,"MS",%progbits,1
 7080      02006701 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 145


 7080      00000201 
 7080      FB0E0D00 
 7080      01010101 
 7081              	.LASF140:
 7082 0000 64697265 		.ascii	"direction\000"
 7082      6374696F 
 7082      6E00
 7083              	.LASF186:
 7084 000a 74726163 		.ascii	"tracked_direction\000"
 7084      6B65645F 
 7084      64697265 
 7084      6374696F 
 7084      6E00
 7085              	.LASF23:
 7086 001c 52545552 		.ascii	"RTURN\000"
 7086      4E00
 7087              	.LASF190:
 7088 0022 72696768 		.ascii	"rightTurnCount\000"
 7088      74547572 
 7088      6E436F75 
 7088      6E7400
 7089              	.LASF37:
 7090 0031 44455354 		.ascii	"DEST_TEST\000"
 7090      5F544553 
 7090      5400
 7091              	.LASF148:
 7092 003b 71756164 		.ascii	"quad_diff1\000"
 7092      5F646966 
 7092      663100
 7093              	.LASF149:
 7094 0046 71756164 		.ascii	"quad_diff2\000"
 7094      5F646966 
 7094      663200
 7095              	.LASF86:
 7096 0051 6D657373 		.ascii	"message\000"
 7096      61676500 
 7097              	.LASF98:
 7098 0059 51756164 		.ascii	"Quad_Dec_response\000"
 7098      5F446563 
 7098      5F726573 
 7098      706F6E73 
 7098      6500
 7099              	.LASF165:
 7100 006b 70726576 		.ascii	"prevVoltage\000"
 7100      566F6C74 
 7100      61676500 
 7101              	.LASF151:
 7102 0077 73746172 		.ascii	"start_turn_count\000"
 7102      745F7475 
 7102      726E5F63 
 7102      6F756E74 
 7102      00
 7103              	.LASF8:
 7104 0088 756E7369 		.ascii	"unsigned int\000"
 7104      676E6564 
 7104      20696E74 
 7104      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 146


 7105              	.LASF175:
 7106 0095 74726163 		.ascii	"track_mode\000"
 7106      6B5F6D6F 
 7106      646500
 7107              	.LASF11:
 7108 00a0 5F5F696E 		.ascii	"__int32_t\000"
 7108      7433325F 
 7108      7400
 7109              	.LASF17:
 7110 00aa 696E7431 		.ascii	"int16\000"
 7110      3600
 7111              	.LASF172:
 7112 00b0 73797374 		.ascii	"system_state\000"
 7112      656D5F73 
 7112      74617465 
 7112      00
 7113              	.LASF22:
 7114 00bd 4C545552 		.ascii	"LTURN\000"
 7114      4E00
 7115              	.LASF94:
 7116 00c3 6973725F 		.ascii	"isr_adcTimer\000"
 7116      61646354 
 7116      696D6572 
 7116      00
 7117              	.LASF158:
 7118 00d0 74617267 		.ascii	"target_distance_quad\000"
 7118      65745F64 
 7118      69737461 
 7118      6E63655F 
 7118      71756164 
 7119              	.LASF25:
 7120 00e5 54524143 		.ascii	"TRACKING\000"
 7120      4B494E47 
 7120      00
 7121              	.LASF166:
 7122 00ee 70726576 		.ascii	"prevVoltage2\000"
 7122      566F6C74 
 7122      61676532 
 7122      00
 7123              	.LASF180:
 7124 00fb 73656E73 		.ascii	"sensorsDisabled\000"
 7124      6F727344 
 7124      69736162 
 7124      6C656400 
 7125              	.LASF56:
 7126 010b 7061636B 		.ascii	"packet_bytes\000"
 7126      65745F62 
 7126      79746573 
 7126      00
 7127              	.LASF52:
 7128 0118 67325F78 		.ascii	"g2_xpos\000"
 7128      706F7300 
 7129              	.LASF30:
 7130 0120 6D6F6465 		.ascii	"mode\000"
 7130      00
 7131              	.LASF144:
 7132 0125 71756164 		.ascii	"quad_count1\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 147


 7132      5F636F75 
 7132      6E743100 
 7133              	.LASF145:
 7134 0131 71756164 		.ascii	"quad_count2\000"
 7134      5F636F75 
 7134      6E743200 
 7135              	.LASF107:
 7136 013d 74726163 		.ascii	"trackLineU\000"
 7136      6B4C696E 
 7136      655500
 7137              	.LASF185:
 7138 0148 726F626F 		.ascii	"robot_direction\000"
 7138      745F6469 
 7138      72656374 
 7138      696F6E00 
 7139              	.LASF106:
 7140 0158 74726163 		.ascii	"trackLineZ\000"
 7140      6B4C696E 
 7140      655A00
 7141              	.LASF189:
 7142 0163 6C656674 		.ascii	"leftTurnCount\000"
 7142      5475726E 
 7142      436F756E 
 7142      7400
 7143              	.LASF178:
 7144 0171 73706565 		.ascii	"speed\000"
 7144      6400
 7145              	.LASF34:
 7146 0177 53515541 		.ascii	"SQUARE_TRACK\000"
 7146      52455F54 
 7146      5241434B 
 7146      00
 7147              	.LASF136:
 7148 0184 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7148      5F72665F 
 7148      7472616E 
 7148      736D6973 
 7148      73696F6E 
 7149              	.LASF137:
 7150 01a0 666C6167 		.ascii	"flag_print_rf\000"
 7150      5F707269 
 7150      6E745F72 
 7150      6600
 7151              	.LASF174:
 7152 01ae 6D6F7665 		.ascii	"movement_state\000"
 7152      6D656E74 
 7152      5F737461 
 7152      746500
 7153              	.LASF26:
 7154 01bd 54524143 		.ascii	"TRACKING_U\000"
 7154      4B494E47 
 7154      5F5500
 7155              	.LASF78:
 7156 01c8 696E6974 		.ascii	"initForward\000"
 7156      466F7277 
 7156      61726400 
 7157              	.LASF55:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 148


 7158 01d4 67325F64 		.ascii	"g2_direction\000"
 7158      69726563 
 7158      74696F6E 
 7158      00
 7159              	.LASF89:
 7160 01e1 6973725F 		.ascii	"isr_quad1\000"
 7160      71756164 
 7160      3100
 7161              	.LASF18:
 7162 01eb 666C6F61 		.ascii	"float\000"
 7162      7400
 7163              	.LASF63:
 7164 01f1 73657453 		.ascii	"setSpeed\000"
 7164      70656564 
 7164      00
 7165              	.LASF170:
 7166 01fa 75736242 		.ascii	"usbBuffer\000"
 7166      75666665 
 7166      7200
 7167              	.LASF40:
 7168 0204 696E6465 		.ascii	"index\000"
 7168      7800
 7169              	.LASF21:
 7170 020a 44524956 		.ascii	"DRIVE\000"
 7170      4500
 7171              	.LASF58:
 7172 0210 73747269 		.ascii	"string_packet\000"
 7172      6E675F70 
 7172      61636B65 
 7172      7400
 7173              	.LASF97:
 7174 021e 6368616E 		.ascii	"changeToBT\000"
 7174      6765546F 
 7174      425400
 7175              	.LASF66:
 7176 0229 636F756E 		.ascii	"countsLeft\000"
 7176      74734C65 
 7176      667400
 7177              	.LASF71:
 7178 0234 64726976 		.ascii	"driveForwards\000"
 7178      65466F72 
 7178      77617264 
 7178      7300
 7179              	.LASF73:
 7180 0242 7475726E 		.ascii	"turnLeft\000"
 7180      4C656674 
 7180      00
 7181              	.LASF7:
 7182 024b 6C6F6E67 		.ascii	"long long unsigned int\000"
 7182      206C6F6E 
 7182      6720756E 
 7182      7369676E 
 7182      65642069 
 7183              	.LASF133:
 7184 0262 666C6167 		.ascii	"flag_packet\000"
 7184      5F706163 
 7184      6B657400 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 149


 7185              	.LASF118:
 7186 026e 66726F6E 		.ascii	"frontSensors\000"
 7186      7453656E 
 7186      736F7273 
 7186      00
 7187              	.LASF193:
 7188 027b 443A5C43 		.ascii	"D:\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 7188      53333031 
 7188      2D546561 
 7188      6D2D5265 
 7188      706F5C43 
 7189              	.LASF91:
 7190 02a0 6973725F 		.ascii	"isr_turn_timer\000"
 7190      7475726E 
 7190      5F74696D 
 7190      657200
 7191              	.LASF96:
 7192 02af 6368616E 		.ascii	"changeToRF\000"
 7192      6765546F 
 7192      524600
 7193              	.LASF75:
 7194 02ba 696E6974 		.ascii	"initTurnLeft\000"
 7194      5475726E 
 7194      4C656674 
 7194      00
 7195              	.LASF164:
 7196 02c7 706F7274 		.ascii	"portOpen\000"
 7196      4F70656E 
 7196      00
 7197              	.LASF79:
 7198 02d0 696E6974 		.ascii	"initBrake\000"
 7198      4272616B 
 7198      6500
 7199              	.LASF129:
 7200 02da 666C6167 		.ascii	"flag_ts_update\000"
 7200      5F74735F 
 7200      75706461 
 7200      746500
 7201              	.LASF109:
 7202 02e9 7363616C 		.ascii	"scalingFactor\000"
 7202      696E6746 
 7202      6163746F 
 7202      7200
 7203              	.LASF99:
 7204 02f7 6C656674 		.ascii	"leftSpeed\000"
 7204      53706565 
 7204      6400
 7205              	.LASF128:
 7206 0301 666C6167 		.ascii	"flag_ts_enc\000"
 7206      5F74735F 
 7206      656E6300 
 7207              	.LASF176:
 7208 030d 62797465 		.ascii	"byteCount\000"
 7208      436F756E 
 7208      7400
 7209              	.LASF117:
 7210 0317 61637469 		.ascii	"actionDebounce\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 150


 7210      6F6E4465 
 7210      626F756E 
 7210      636500
 7211              	.LASF93:
 7212 0326 62757474 		.ascii	"button\000"
 7212      6F6E00
 7213              	.LASF173:
 7214 032d 70726576 		.ascii	"prev_movement_state\000"
 7214      5F6D6F76 
 7214      656D656E 
 7214      745F7374 
 7214      61746500 
 7215              	.LASF115:
 7216 0341 73656E73 		.ascii	"sensorVals\000"
 7216      6F725661 
 7216      6C7300
 7217              	.LASF111:
 7218 034c 72657375 		.ascii	"result_str\000"
 7218      6C745F73 
 7218      747200
 7219              	.LASF122:
 7220 0357 75617274 		.ascii	"uart_set_PWM\000"
 7220      5F736574 
 7220      5F50574D 
 7220      00
 7221              	.LASF82:
 7222 0364 696E6974 		.ascii	"inittrackLineZ\000"
 7222      74726163 
 7222      6B4C696E 
 7222      655A00
 7223              	.LASF42:
 7224 0373 726F626F 		.ascii	"robot_ypos\000"
 7224      745F7970 
 7224      6F7300
 7225              	.LASF127:
 7226 037e 74735F64 		.ascii	"ts_display\000"
 7226      6973706C 
 7226      617900
 7227              	.LASF108:
 7228 0389 7072696E 		.ascii	"print_ADC\000"
 7228      745F4144 
 7228      4300
 7229              	.LASF101:
 7230 0393 7363616C 		.ascii	"scalingLeft\000"
 7230      696E674C 
 7230      65667400 
 7231              	.LASF10:
 7232 039f 63686172 		.ascii	"char\000"
 7232      00
 7233              	.LASF46:
 7234 03a4 67305F73 		.ascii	"g0_speed\000"
 7234      70656564 
 7234      00
 7235              	.LASF155:
 7236 03ad 72696768 		.ascii	"rightSpeedLimit\000"
 7236      74537065 
 7236      65644C69 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 151


 7236      6D697400 
 7237              	.LASF59:
 7238 03bd 7365744C 		.ascii	"setLeftDir\000"
 7238      65667444 
 7238      697200
 7239              	.LASF179:
 7240 03c8 696E7374 		.ascii	"instructionCount\000"
 7240      72756374 
 7240      696F6E43 
 7240      6F756E74 
 7240      00
 7241              	.LASF74:
 7242 03d9 7475726E 		.ascii	"turnU\000"
 7242      5500
 7243              	.LASF53:
 7244 03df 67325F79 		.ascii	"g2_ypos\000"
 7244      706F7300 
 7245              	.LASF14:
 7246 03e7 75696E74 		.ascii	"uint16\000"
 7246      313600
 7247              	.LASF16:
 7248 03ee 696E7438 		.ascii	"int8\000"
 7248      00
 7249              	.LASF51:
 7250 03f3 67315F64 		.ascii	"g1_direction\000"
 7250      69726563 
 7250      74696F6E 
 7250      00
 7251              	.LASF182:
 7252 0400 70617468 		.ascii	"path\000"
 7252      00
 7253              	.LASF60:
 7254 0405 73657452 		.ascii	"setRightDir\000"
 7254      69676874 
 7254      44697200 
 7255              	.LASF32:
 7256 0411 43555256 		.ascii	"CURVE_TRACK\000"
 7256      455F5452 
 7256      41434B00 
 7257              	.LASF103:
 7258 041d 696E7465 		.ascii	"interCalc\000"
 7258      7243616C 
 7258      6300
 7259              	.LASF142:
 7260 0427 42545F45 		.ascii	"BT_ENABLED\000"
 7260      4E41424C 
 7260      454400
 7261              	.LASF65:
 7262 0432 72696768 		.ascii	"right\000"
 7262      7400
 7263              	.LASF160:
 7264 0438 696E6974 		.ascii	"initial_pos_valid\000"
 7264      69616C5F 
 7264      706F735F 
 7264      76616C69 
 7264      6400
 7265              	.LASF6:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 152


 7266 044a 6C6F6E67 		.ascii	"long long int\000"
 7266      206C6F6E 
 7266      6720696E 
 7266      7400
 7267              	.LASF171:
 7268 0458 62756666 		.ascii	"buffer_state\000"
 7268      65725F73 
 7268      74617465 
 7268      00
 7269              	.LASF48:
 7270 0465 67315F78 		.ascii	"g1_xpos\000"
 7270      706F7300 
 7271              	.LASF80:
 7272 046d 696E6974 		.ascii	"initTrack\000"
 7272      54726163 
 7272      6B00
 7273              	.LASF119:
 7274 0477 6E657874 		.ascii	"nextStep\000"
 7274      53746570 
 7274      00
 7275              	.LASF191:
 7276 0480 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7276      4320342E 
 7276      392E3320 
 7276      32303135 
 7276      30333033 
 7277 04b3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7277      20726576 
 7277      6973696F 
 7277      6E203232 
 7277      31323230 
 7278 04e6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7278      66756E63 
 7278      74696F6E 
 7278      2D736563 
 7278      74696F6E 
 7279              	.LASF54:
 7280 050e 67325F73 		.ascii	"g2_speed\000"
 7280      70656564 
 7280      00
 7281              	.LASF45:
 7282 0517 67305F79 		.ascii	"g0_ypos\000"
 7282      706F7300 
 7283              	.LASF84:
 7284 051f 72665F63 		.ascii	"rf_char\000"
 7284      68617200 
 7285              	.LASF181:
 7286 0527 666F6F64 		.ascii	"food_list\000"
 7286      5F6C6973 
 7286      7400
 7287              	.LASF141:
 7288 0531 42494E5F 		.ascii	"BIN_ENABLED\000"
 7288      454E4142 
 7288      4C454400 
 7289              	.LASF100:
 7290 053d 72696768 		.ascii	"rightSpeed\000"
 7290      74537065 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 153


 7290      656400
 7291              	.LASF126:
 7292 0548 74735F73 		.ascii	"ts_speed\000"
 7292      70656564 
 7292      00
 7293              	.LASF15:
 7294 0551 75696E74 		.ascii	"uint32\000"
 7294      333200
 7295              	.LASF188:
 7296 0558 696E7374 		.ascii	"instructions\000"
 7296      72756374 
 7296      696F6E73 
 7296      00
 7297              	.LASF67:
 7298 0565 636F756E 		.ascii	"countsRight\000"
 7298      74735269 
 7298      67687400 
 7299              	.LASF194:
 7300 0571 64617461 		.ascii	"data_main\000"
 7300      5F6D6169 
 7300      6E00
 7301              	.LASF110:
 7302 057b 636F6E76 		.ascii	"converted_val\000"
 7302      65727465 
 7302      645F7661 
 7302      6C00
 7303              	.LASF183:
 7304 0589 73746172 		.ascii	"start\000"
 7304      7400
 7305              	.LASF39:
 7306 058f 72737369 		.ascii	"rssi\000"
 7306      00
 7307              	.LASF105:
 7308 0594 74726163 		.ascii	"trackLine\000"
 7308      6B4C696E 
 7308      6500
 7309              	.LASF47:
 7310 059e 67305F64 		.ascii	"g0_direction\000"
 7310      69726563 
 7310      74696F6E 
 7310      00
 7311              	.LASF138:
 7312 05ab 666C6167 		.ascii	"flag_receive_ADC\000"
 7312      5F726563 
 7312      65697665 
 7312      5F414443 
 7312      00
 7313              	.LASF24:
 7314 05bc 53544F50 		.ascii	"STOPPED\000"
 7314      50454400 
 7315              	.LASF85:
 7316 05c4 42545F72 		.ascii	"BT_rxInt\000"
 7316      78496E74 
 7316      00
 7317              	.LASF20:
 7318 05cd 6C6F6E67 		.ascii	"long double\000"
 7318      20646F75 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 154


 7318      626C6500 
 7319              	.LASF83:
 7320 05d9 7278496E 		.ascii	"rxInt\000"
 7320      7400
 7321              	.LASF152:
 7322 05df 6C656674 		.ascii	"left_duty_cycle\000"
 7322      5F647574 
 7322      795F6379 
 7322      636C6500 
 7323              	.LASF95:
 7324 05ef 6973725F 		.ascii	"isr_deadzone\000"
 7324      64656164 
 7324      7A6F6E65 
 7324      00
 7325              	.LASF130:
 7326 05fc 666C6167 		.ascii	"flag_ts_speed\000"
 7326      5F74735F 
 7326      73706565 
 7326      6400
 7327              	.LASF135:
 7328 060a 64617461 		.ascii	"dataready_flag\000"
 7328      72656164 
 7328      795F666C 
 7328      616700
 7329              	.LASF162:
 7330 0619 696E6974 		.ascii	"initial_y_pos\000"
 7330      69616C5F 
 7330      795F706F 
 7330      7300
 7331              	.LASF132:
 7332 0627 666C6167 		.ascii	"flag_rx\000"
 7332      5F727800 
 7333              	.LASF2:
 7334 062f 73686F72 		.ascii	"short int\000"
 7334      7420696E 
 7334      7400
 7335              	.LASF139:
 7336 0639 6164635F 		.ascii	"adc_result\000"
 7336      72657375 
 7336      6C7400
 7337              	.LASF77:
 7338 0644 696E6974 		.ascii	"initTurnU\000"
 7338      5475726E 
 7338      5500
 7339              	.LASF143:
 7340 064e 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7340      5F63616C 
 7340      635F7768 
 7340      65656C73 
 7340      70656564 
 7341              	.LASF4:
 7342 0663 6C6F6E67 		.ascii	"long int\000"
 7342      20696E74 
 7342      00
 7343              	.LASF76:
 7344 066c 696E6974 		.ascii	"initTurnRight\000"
 7344      5475726E 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 155


 7344      52696768 
 7344      7400
 7345              	.LASF33:
 7346 067a 555F5452 		.ascii	"U_TRACK\000"
 7346      41434B00 
 7347              	.LASF123:
 7348 0682 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7348      52784275 
 7348      66666572 
 7348      00
 7349              	.LASF113:
 7350 068f 7072696E 		.ascii	"printString\000"
 7350      74537472 
 7350      696E6700 
 7351              	.LASF125:
 7352 069b 74735F75 		.ascii	"ts_update\000"
 7352      70646174 
 7352      6500
 7353              	.LASF31:
 7354 06a5 4E4F5F54 		.ascii	"NO_TRACK\000"
 7354      5241434B 
 7354      00
 7355              	.LASF150:
 7356 06ae 64656164 		.ascii	"deadzone\000"
 7356      7A6F6E65 
 7356      00
 7357              	.LASF154:
 7358 06b7 6C656674 		.ascii	"leftSpeedLimit\000"
 7358      53706565 
 7358      644C696D 
 7358      697400
 7359              	.LASF38:
 7360 06c6 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7360      54524156 
 7360      45525345 
 7360      00
 7361              	.LASF27:
 7362 06d3 54524143 		.ascii	"TRACKING_SOFT\000"
 7362      4B494E47 
 7362      5F534F46 
 7362      5400
 7363              	.LASF64:
 7364 06e1 6C656674 		.ascii	"left\000"
 7364      00
 7365              	.LASF157:
 7366 06e6 61636375 		.ascii	"accum_dist\000"
 7366      6D5F6469 
 7366      737400
 7367              	.LASF120:
 7368 06f1 75736250 		.ascii	"usbPutString\000"
 7368      75745374 
 7368      72696E67 
 7368      00
 7369              	.LASF72:
 7370 06fe 7475726E 		.ascii	"turnRight\000"
 7370      52696768 
 7370      7400
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 156


 7371              	.LASF49:
 7372 0708 67315F79 		.ascii	"g1_ypos\000"
 7372      706F7300 
 7373              	.LASF88:
 7374 0710 6164635F 		.ascii	"adc_isr\000"
 7374      69737200 
 7375              	.LASF114:
 7376 0718 72656164 		.ascii	"readFrontSensors\000"
 7376      46726F6E 
 7376      7453656E 
 7376      736F7273 
 7376      00
 7377              	.LASF159:
 7378 0729 71756164 		.ascii	"quad_per_cm\000"
 7378      5F706572 
 7378      5F636D00 
 7379              	.LASF156:
 7380 0735 74617267 		.ascii	"target_distance_cm\000"
 7380      65745F64 
 7380      69737461 
 7380      6E63655F 
 7380      636D00
 7381              	.LASF9:
 7382 0748 73697A65 		.ascii	"sizetype\000"
 7382      74797065 
 7382      00
 7383              	.LASF5:
 7384 0751 6C6F6E67 		.ascii	"long unsigned int\000"
 7384      20756E73 
 7384      69676E65 
 7384      6420696E 
 7384      7400
 7385              	.LASF57:
 7386 0763 62797465 		.ascii	"byte_packet\000"
 7386      5F706163 
 7386      6B657400 
 7387              	.LASF12:
 7388 076f 696E7433 		.ascii	"int32_t\000"
 7388      325F7400 
 7389              	.LASF177:
 7390 0777 7061636B 		.ascii	"packet\000"
 7390      657400
 7391              	.LASF41:
 7392 077e 726F626F 		.ascii	"robot_xpos\000"
 7392      745F7870 
 7392      6F7300
 7393              	.LASF70:
 7394 0789 6272616B 		.ascii	"brakeMotor\000"
 7394      654D6F74 
 7394      6F7200
 7395              	.LASF187:
 7396 0794 666F6F64 		.ascii	"food_length\000"
 7396      5F6C656E 
 7396      67746800 
 7397              	.LASF169:
 7398 07a0 656E7472 		.ascii	"entry\000"
 7398      7900
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 157


 7399              	.LASF1:
 7400 07a6 756E7369 		.ascii	"unsigned char\000"
 7400      676E6564 
 7400      20636861 
 7400      7200
 7401              	.LASF168:
 7402 07b4 6C696E65 		.ascii	"line\000"
 7402      00
 7403              	.LASF92:
 7404 07b9 53746F70 		.ascii	"Stop_on_line\000"
 7404      5F6F6E5F 
 7404      6C696E65 
 7404      00
 7405              	.LASF124:
 7406 07c6 74735F65 		.ascii	"ts_enc\000"
 7406      6E6300
 7407              	.LASF163:
 7408 07cd 6272616B 		.ascii	"brakeFlag\000"
 7408      65466C61 
 7408      6700
 7409              	.LASF131:
 7410 07d7 666C6167 		.ascii	"flag_ts_display\000"
 7410      5F74735F 
 7410      64697370 
 7410      6C617900 
 7411              	.LASF29:
 7412 07e7 73746174 		.ascii	"state\000"
 7412      6500
 7413              	.LASF62:
 7414 07ed 72657665 		.ascii	"reverseDirection\000"
 7414      72736544 
 7414      69726563 
 7414      74696F6E 
 7414      00
 7415              	.LASF68:
 7416 07fe 6272616B 		.ascii	"brakeLeft\000"
 7416      654C6566 
 7416      7400
 7417              	.LASF167:
 7418 0808 64697370 		.ascii	"displaystring\000"
 7418      6C617973 
 7418      7472696E 
 7418      6700
 7419              	.LASF146:
 7420 0816 6C617374 		.ascii	"last_quad_count1\000"
 7420      5F717561 
 7420      645F636F 
 7420      756E7431 
 7420      00
 7421              	.LASF147:
 7422 0827 6C617374 		.ascii	"last_quad_count2\000"
 7422      5F717561 
 7422      645F636F 
 7422      756E7432 
 7422      00
 7423              	.LASF184:
 7424 0838 64657374 		.ascii	"destination\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 158


 7424      696E6174 
 7424      696F6E00 
 7425              	.LASF121:
 7426 0844 75736250 		.ascii	"usbPutChar\000"
 7426      75744368 
 7426      617200
 7427              	.LASF0:
 7428 084f 7369676E 		.ascii	"signed char\000"
 7428      65642063 
 7428      68617200 
 7429              	.LASF3:
 7430 085b 73686F72 		.ascii	"short unsigned int\000"
 7430      7420756E 
 7430      7369676E 
 7430      65642069 
 7430      6E7400
 7431              	.LASF43:
 7432 086e 726F626F 		.ascii	"robot_orientation\000"
 7432      745F6F72 
 7432      69656E74 
 7432      6174696F 
 7432      6E00
 7433              	.LASF35:
 7434 0880 51554144 		.ascii	"QUAD_STOP\000"
 7434      5F53544F 
 7434      5000
 7435              	.LASF116:
 7436 088a 6D61696E 		.ascii	"main\000"
 7436      00
 7437              	.LASF87:
 7438 088f 42545F74 		.ascii	"BT_txInt\000"
 7438      78496E74 
 7438      00
 7439              	.LASF104:
 7440 0898 6E657874 		.ascii	"nextSpeed\000"
 7440      53706565 
 7440      6400
 7441              	.LASF90:
 7442 08a2 64697374 		.ascii	"dist\000"
 7442      00
 7443              	.LASF13:
 7444 08a7 75696E74 		.ascii	"uint8\000"
 7444      3800
 7445              	.LASF19:
 7446 08ad 646F7562 		.ascii	"double\000"
 7446      6C6500
 7447              	.LASF153:
 7448 08b4 72696768 		.ascii	"right_duty_cycle\000"
 7448      745F6475 
 7448      74795F63 
 7448      79636C65 
 7448      00
 7449              	.LASF36:
 7450 08c5 52465F53 		.ascii	"RF_STOP\000"
 7450      544F5000 
 7451              	.LASF61:
 7452 08cd 68616E64 		.ascii	"handle_rx_binary\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\cc1c89dk.s 			page 159


 7452      6C655F72 
 7452      785F6269 
 7452      6E617279 
 7452      00
 7453              	.LASF112:
 7454 08de 7072696E 		.ascii	"print_RF\000"
 7454      745F5246 
 7454      00
 7455              	.LASF28:
 7456 08e7 55545552 		.ascii	"UTURN\000"
 7456      4E00
 7457              	.LASF44:
 7458 08ed 67305F78 		.ascii	"g0_xpos\000"
 7458      706F7300 
 7459              	.LASF102:
 7460 08f5 7363616C 		.ascii	"scalingRight\000"
 7460      696E6752 
 7460      69676874 
 7460      00
 7461              	.LASF134:
 7462 0902 666C6167 		.ascii	"flag_KB_string\000"
 7462      5F4B425F 
 7462      73747269 
 7462      6E6700
 7463              	.LASF50:
 7464 0911 67315F73 		.ascii	"g1_speed\000"
 7464      70656564 
 7464      00
 7465              	.LASF192:
 7466 091a 2E5C6D61 		.ascii	".\\main.c\000"
 7466      696E2E63 
 7466      00
 7467              	.LASF161:
 7468 0923 696E6974 		.ascii	"initial_x_pos\000"
 7468      69616C5F 
 7468      785F706F 
 7468      7300
 7469              	.LASF69:
 7470 0931 6272616B 		.ascii	"brakeRight\000"
 7470      65526967 
 7470      687400
 7471              	.LASF81:
 7472 093c 696E6974 		.ascii	"initTrackU\000"
 7472      54726163 
 7472      6B5500
 7473              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
