ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	flag_calc_wheelspeed
 112              		.type	flag_calc_wheelspeed, %object
 113              		.size	flag_calc_wheelspeed, 1
 114              	flag_calc_wheelspeed:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 3


 115 0015 00       		.space	1
 116              		.global	quad_count1
 117              		.align	1
 118              		.type	quad_count1, %object
 119              		.size	quad_count1, 2
 120              	quad_count1:
 121 0016 0000     		.space	2
 122              		.global	quad_count2
 123              		.align	1
 124              		.type	quad_count2, %object
 125              		.size	quad_count2, 2
 126              	quad_count2:
 127 0018 0000     		.space	2
 128              		.global	last_quad_count1
 129              		.align	1
 130              		.type	last_quad_count1, %object
 131              		.size	last_quad_count1, 2
 132              	last_quad_count1:
 133 001a 0000     		.space	2
 134              		.global	last_quad_count2
 135              		.align	1
 136              		.type	last_quad_count2, %object
 137              		.size	last_quad_count2, 2
 138              	last_quad_count2:
 139 001c 0000     		.space	2
 140              		.global	quad_diff1
 141              		.align	1
 142              		.type	quad_diff1, %object
 143              		.size	quad_diff1, 2
 144              	quad_diff1:
 145 001e 0000     		.space	2
 146              		.global	quad_diff2
 147              		.align	1
 148              		.type	quad_diff2, %object
 149              		.size	quad_diff2, 2
 150              	quad_diff2:
 151 0020 0000     		.space	2
 152              		.global	start_turn_count
 153              		.align	1
 154              		.type	start_turn_count, %object
 155              		.size	start_turn_count, 2
 156              	start_turn_count:
 157 0022 0000     		.space	2
 158              		.global	left_duty_cycle
 159              		.align	1
 160              		.type	left_duty_cycle, %object
 161              		.size	left_duty_cycle, 2
 162              	left_duty_cycle:
 163 0024 0000     		.space	2
 164              		.global	right_duty_cycle
 165              		.align	1
 166              		.type	right_duty_cycle, %object
 167              		.size	right_duty_cycle, 2
 168              	right_duty_cycle:
 169 0026 0000     		.space	2
 170              		.global	leftSpeedLimit
 171              		.align	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 4


 172              		.type	leftSpeedLimit, %object
 173              		.size	leftSpeedLimit, 2
 174              	leftSpeedLimit:
 175 0028 0000     		.space	2
 176              		.global	rightSpeedLimit
 177              		.align	1
 178              		.type	rightSpeedLimit, %object
 179              		.size	rightSpeedLimit, 2
 180              	rightSpeedLimit:
 181 002a 0000     		.space	2
 182              		.comm	brakeFlag,1,1
 183              		.global	portOpen
 184              		.data
 185              		.type	portOpen, %object
 186              		.size	portOpen, 1
 187              	portOpen:
 188 0001 01       		.byte	1
 189              		.comm	prevVoltage,2,2
 190              		.comm	prevVoltage2,2,2
 191              		.global	displaystring
 192 0002 0000     		.align	2
 193              		.type	displaystring, %object
 194              		.size	displaystring, 64
 195              	displaystring:
 196 0004 43533330 		.ascii	"CS301 2016\012\000"
 196      31203230 
 196      31360A00 
 197 0010 00000000 		.space	52
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.comm	line,64,4
 199              		.comm	entry,64,4
 200              		.comm	usbBuffer,64,4
 201              		.comm	buffer_state,32,4
 202              		.comm	system_state,32,4
 203              		.global	movement_state
 204              		.type	movement_state, %object
 205              		.size	movement_state, 1
 206              	movement_state:
 207 0044 03       		.byte	3
 208              		.global	byteCount
 209 0045 000000   		.bss
 210              		.type	byteCount, %object
 211              		.size	byteCount, 1
 212              	byteCount:
 213 002c 00       		.space	1
 214              		.comm	packet,2,4
 215 002d 00       		.section	.text.handle_rx_binary,"ax",%progbits
 216              		.align	2
 217              		.global	handle_rx_binary
 218              		.thumb
 219              		.thumb_func
 220              		.type	handle_rx_binary, %function
 221              	handle_rx_binary:
 222              	.LFB63:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 5


 223              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** //* ========================================
  34:.\main.c      **** void usbPutString(char *s);
  35:.\main.c      **** void usbPutChar(char c);
  36:.\main.c      **** //void handle_usb();
  37:.\main.c      **** //* ========================================
  38:.\main.c      **** 
  39:.\main.c      **** 
  40:.\main.c      **** void handle_rx_binary()
  41:.\main.c      **** {
 224              		.loc 1 41 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 89B0     		sub	sp, sp, #36
 233              		.cfi_def_cfa_offset 40
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  42:.\main.c      ****     if(flag_rx == 1)
 236              		.loc 1 42 0
 237 0006 524B     		ldr	r3, .L21
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 6


 238 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 000a 012B     		cmp	r3, #1
 240 000c 40F09A80 		bne	.L1
 241              	.LBB2:
  43:.\main.c      ****     {    
  44:.\main.c      ****         flag_rx = 0;
 242              		.loc 1 44 0
 243 0010 4F4B     		ldr	r3, .L21
 244 0012 0022     		movs	r2, #0
 245 0014 1A70     		strb	r2, [r3]
  45:.\main.c      ****         
  46:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 246              		.loc 1 46 0
 247 0016 4F4B     		ldr	r3, .L21+4
 248 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 249 001a 1B02     		lsls	r3, r3, #8
 250 001c 9AB2     		uxth	r2, r3
 251 001e 4D4B     		ldr	r3, .L21+4
 252 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 0022 9BB2     		uxth	r3, r3
 254 0024 1343     		orrs	r3, r3, r2
 255 0026 9BB2     		uxth	r3, r3
 256 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  47:.\main.c      ****         //uint16 packet_bytes = packet[0] & packet[1];
  48:.\main.c      ****         char byte_packet[12];
  49:.\main.c      ****         char string_packet[12];
  50:.\main.c      ****         //sprintf(string_packet, "%d", packet_bytes);
  51:.\main.c      ****         //sprintf(byte_packet, "%d", (int8)packet[0]);
  52:.\main.c      ****        // sprintf(string_packet, "%d", packet_bytes);
  53:.\main.c      ****         //usbPutString(string_packet);
  54:.\main.c      ****        // usbPutString(string_packet);
  55:.\main.c      ****        // usbPutChar(' ');
  56:.\main.c      ****         
  57:.\main.c      ****         switch(byteCount)
 257              		.loc 1 57 0
 258 002a 4B4B     		ldr	r3, .L21+8
 259 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 002e 043B     		subs	r3, r3, #4
 261 0030 1E2B     		cmp	r3, #30
 262 0032 00F28780 		bhi	.L1
 263 0036 01A2     		adr	r2, .L5
 264 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265              		.p2align 2
 266              	.L5:
 267 003c B9000000 		.word	.L4+1
 268 0040 45010000 		.word	.L1+1
 269 0044 CD000000 		.word	.L6+1
 270 0048 45010000 		.word	.L1+1
 271 004c D5000000 		.word	.L7+1
 272 0050 45010000 		.word	.L1+1
 273 0054 DD000000 		.word	.L8+1
 274 0058 45010000 		.word	.L1+1
 275 005c E5000000 		.word	.L9+1
 276 0060 45010000 		.word	.L1+1
 277 0064 ED000000 		.word	.L10+1
 278 0068 45010000 		.word	.L1+1
 279 006c F5000000 		.word	.L11+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 7


 280 0070 45010000 		.word	.L1+1
 281 0074 FD000000 		.word	.L12+1
 282 0078 45010000 		.word	.L1+1
 283 007c 05010000 		.word	.L13+1
 284 0080 45010000 		.word	.L1+1
 285 0084 0D010000 		.word	.L14+1
 286 0088 45010000 		.word	.L1+1
 287 008c 15010000 		.word	.L15+1
 288 0090 45010000 		.word	.L1+1
 289 0094 1D010000 		.word	.L16+1
 290 0098 45010000 		.word	.L1+1
 291 009c 25010000 		.word	.L17+1
 292 00a0 45010000 		.word	.L1+1
 293 00a4 2D010000 		.word	.L18+1
 294 00a8 45010000 		.word	.L1+1
 295 00ac 35010000 		.word	.L19+1
 296 00b0 45010000 		.word	.L1+1
 297 00b4 3D010000 		.word	.L20+1
 298              		.p2align 1
 299              	.L4:
  58:.\main.c      ****         {
  59:.\main.c      ****             case 4:
  60:.\main.c      ****                 //usbPutString("RSSI:");
  61:.\main.c      ****                 //usbPutString(byte_packet);
  62:.\main.c      ****                 //usbPutString("\r\n");
  63:.\main.c      ****                 buffer_state.rssi = packet[0];
 300              		.loc 1 63 0
 301 00b8 264B     		ldr	r3, .L21+4
 302 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00bc DAB2     		uxtb	r2, r3
 304 00be 274B     		ldr	r3, .L21+12
 305 00c0 1A70     		strb	r2, [r3]
  64:.\main.c      ****                 buffer_state.index = packet[1];
 306              		.loc 1 64 0
 307 00c2 244B     		ldr	r3, .L21+4
 308 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 309 00c6 254B     		ldr	r3, .L21+12
 310 00c8 5A70     		strb	r2, [r3, #1]
  65:.\main.c      ****             break;
 311              		.loc 1 65 0
 312 00ca 3BE0     		b	.L1
 313              	.L6:
  66:.\main.c      ****             case 6:
  67:.\main.c      ****                 //usbPutString("robot_x:");
  68:.\main.c      ****                 //usbPutString(string_packet);
  69:.\main.c      ****                 //usbPutString("\r\n");
  70:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 314              		.loc 1 70 0
 315 00cc FA8B     		ldrh	r2, [r7, #30]
 316 00ce 234B     		ldr	r3, .L21+12
 317 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  71:.\main.c      ****             break;
 318              		.loc 1 71 0
 319 00d2 37E0     		b	.L1
 320              	.L7:
  72:.\main.c      ****             case 8:
  73:.\main.c      ****                 //usbPutString("robot_y:");
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 8


  74:.\main.c      ****                 //usbPutString(string_packet);
  75:.\main.c      ****                 //usbPutString("\r\n");
  76:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 321              		.loc 1 76 0
 322 00d4 FA8B     		ldrh	r2, [r7, #30]
 323 00d6 214B     		ldr	r3, .L21+12
 324 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  77:.\main.c      ****             break;
 325              		.loc 1 77 0
 326 00da 33E0     		b	.L1
 327              	.L8:
  78:.\main.c      ****             case 10:
  79:.\main.c      ****                 //usbPutString("robot_dir:");
  80:.\main.c      ****                 //usbPutString(string_packet);
  81:.\main.c      ****                 //usbPutString("\r\n");
  82:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 328              		.loc 1 82 0
 329 00dc FA8B     		ldrh	r2, [r7, #30]
 330 00de 1F4B     		ldr	r3, .L21+12
 331 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
  83:.\main.c      ****             break;
 332              		.loc 1 83 0
 333 00e2 2FE0     		b	.L1
 334              	.L9:
  84:.\main.c      ****             case 12:
  85:.\main.c      ****                 //usbPutString("g0_x:");
  86:.\main.c      ****                 //usbPutString(string_packet);
  87:.\main.c      ****                 //usbPutString("\r\n");
  88:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 335              		.loc 1 88 0
 336 00e4 FA8B     		ldrh	r2, [r7, #30]
 337 00e6 1D4B     		ldr	r3, .L21+12
 338 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
  89:.\main.c      ****             break;
 339              		.loc 1 89 0
 340 00ea 2BE0     		b	.L1
 341              	.L10:
  90:.\main.c      ****             case 14:
  91:.\main.c      ****                 //usbPutString("g0_y:");
  92:.\main.c      ****                 //usbPutString(string_packet);
  93:.\main.c      ****                 //usbPutString("\r\n");
  94:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 342              		.loc 1 94 0
 343 00ec FA8B     		ldrh	r2, [r7, #30]
 344 00ee 1B4B     		ldr	r3, .L21+12
 345 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
  95:.\main.c      ****             break;
 346              		.loc 1 95 0
 347 00f2 27E0     		b	.L1
 348              	.L11:
  96:.\main.c      ****             case 16:
  97:.\main.c      ****                 //usbPutString("g0_speed:");
  98:.\main.c      ****                 //usbPutString(string_packet);
  99:.\main.c      ****                 //usbPutString("\r\n");
 100:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 349              		.loc 1 100 0
 350 00f4 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 9


 351 00f6 194B     		ldr	r3, .L21+12
 352 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 101:.\main.c      ****             break;
 353              		.loc 1 101 0
 354 00fa 23E0     		b	.L1
 355              	.L12:
 102:.\main.c      ****             case 18:
 103:.\main.c      ****                 //usbPutString("g1_dir:");
 104:.\main.c      ****                 //usbPutString(string_packet);
 105:.\main.c      ****                 //usbPutString("\r\n");
 106:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 356              		.loc 1 106 0
 357 00fc FA8B     		ldrh	r2, [r7, #30]
 358 00fe 174B     		ldr	r3, .L21+12
 359 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 107:.\main.c      ****             break;
 360              		.loc 1 107 0
 361 0102 1FE0     		b	.L1
 362              	.L13:
 108:.\main.c      ****             case 20:
 109:.\main.c      ****                 //usbPutString("g1_x:");
 110:.\main.c      ****                 //usbPutString(string_packet);
 111:.\main.c      ****                 //usbPutString("\r\n");
 112:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 363              		.loc 1 112 0
 364 0104 FA8B     		ldrh	r2, [r7, #30]
 365 0106 154B     		ldr	r3, .L21+12
 366 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 113:.\main.c      ****             break;
 367              		.loc 1 113 0
 368 010a 1BE0     		b	.L1
 369              	.L14:
 114:.\main.c      ****             case 22:
 115:.\main.c      ****                 //usbPutString("g1_y:");
 116:.\main.c      ****                 //usbPutString(string_packet);
 117:.\main.c      ****                 //usbPutString("\r\n");
 118:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 370              		.loc 1 118 0
 371 010c FA8B     		ldrh	r2, [r7, #30]
 372 010e 134B     		ldr	r3, .L21+12
 373 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 119:.\main.c      ****             break;
 374              		.loc 1 119 0
 375 0112 17E0     		b	.L1
 376              	.L15:
 120:.\main.c      ****             case 24:
 121:.\main.c      ****                 //usbPutString("g1_speed:");
 122:.\main.c      ****                 //usbPutString(string_packet);
 123:.\main.c      ****                 //usbPutString("\r\n");
 124:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 377              		.loc 1 124 0
 378 0114 FA8B     		ldrh	r2, [r7, #30]
 379 0116 114B     		ldr	r3, .L21+12
 380 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 125:.\main.c      ****             break;
 381              		.loc 1 125 0
 382 011a 13E0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 10


 383              	.L16:
 126:.\main.c      ****             case 26:
 127:.\main.c      ****                 //usbPutString("g1_dir:");
 128:.\main.c      ****                 //usbPutString(string_packet);
 129:.\main.c      ****                 //usbPutString("\r\n");
 130:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 384              		.loc 1 130 0
 385 011c FA8B     		ldrh	r2, [r7, #30]
 386 011e 0F4B     		ldr	r3, .L21+12
 387 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 131:.\main.c      ****             break;
 388              		.loc 1 131 0
 389 0122 0FE0     		b	.L1
 390              	.L17:
 132:.\main.c      ****             case 28:
 133:.\main.c      ****                 //usbPutString("g2_x:");
 134:.\main.c      ****                 //usbPutString(string_packet);
 135:.\main.c      ****                 //usbPutString("\r\n");
 136:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 391              		.loc 1 136 0
 392 0124 FA8B     		ldrh	r2, [r7, #30]
 393 0126 0D4B     		ldr	r3, .L21+12
 394 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 137:.\main.c      ****             break;
 395              		.loc 1 137 0
 396 012a 0BE0     		b	.L1
 397              	.L18:
 138:.\main.c      ****             case 30:
 139:.\main.c      ****                 //usbPutString("g2_y:");
 140:.\main.c      ****                 //usbPutString(string_packet);
 141:.\main.c      ****                 //usbPutString("\r\n");
 142:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 398              		.loc 1 142 0
 399 012c FA8B     		ldrh	r2, [r7, #30]
 400 012e 0B4B     		ldr	r3, .L21+12
 401 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 143:.\main.c      ****             break;
 402              		.loc 1 143 0
 403 0132 07E0     		b	.L1
 404              	.L19:
 144:.\main.c      ****             case 32:
 145:.\main.c      ****                 //usbPutString("g1_speed:");
 146:.\main.c      ****                 //usbPutString(string_packet);
 147:.\main.c      ****                 //usbPutString("\r\n");
 148:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 405              		.loc 1 148 0
 406 0134 FA8B     		ldrh	r2, [r7, #30]
 407 0136 094B     		ldr	r3, .L21+12
 408 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 149:.\main.c      ****             break;
 409              		.loc 1 149 0
 410 013a 03E0     		b	.L1
 411              	.L20:
 150:.\main.c      ****             case 34:
 151:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 412              		.loc 1 151 0
 413 013c FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 11


 414 013e 074B     		ldr	r3, .L21+12
 415 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 152:.\main.c      ****                 //usbPutString("g2_dir:");
 153:.\main.c      ****                 //usbPutString(string_packet);
 154:.\main.c      ****                 //usbPutString("\r\n");
 155:.\main.c      ****                 
 156:.\main.c      ****             break;
 416              		.loc 1 156 0
 417 0142 00BF     		nop
 418              	.L1:
 419              	.LBE2:
 157:.\main.c      ****         }
 158:.\main.c      ****         
 159:.\main.c      ****     }
 160:.\main.c      **** }
 420              		.loc 1 160 0
 421 0144 2437     		adds	r7, r7, #36
 422              		.cfi_def_cfa_offset 4
 423 0146 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0148 5DF8047B 		ldr	r7, [sp], #4
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 014c 7047     		bx	lr
 430              	.L22:
 431 014e 00BF     		.align	2
 432              	.L21:
 433 0150 00000000 		.word	flag_rx
 434 0154 00000000 		.word	packet
 435 0158 00000000 		.word	byteCount
 436 015c 00000000 		.word	buffer_state
 437              		.cfi_endproc
 438              	.LFE63:
 439              		.size	handle_rx_binary, .-handle_rx_binary
 440              		.section	.text.setSpeed,"ax",%progbits
 441              		.align	2
 442              		.global	setSpeed
 443              		.thumb
 444              		.thumb_func
 445              		.type	setSpeed, %function
 446              	setSpeed:
 447              	.LFB64:
 161:.\main.c      **** 
 162:.\main.c      **** void setSpeed(int right, int left){
 448              		.loc 1 162 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 0002 83B0     		sub	sp, sp, #12
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 12


 460 0006 7860     		str	r0, [r7, #4]
 461 0008 3960     		str	r1, [r7]
 163:.\main.c      ****     leftSpeedLimit = right;
 462              		.loc 1 163 0
 463 000a 7B68     		ldr	r3, [r7, #4]
 464 000c 9AB2     		uxth	r2, r3
 465 000e 054B     		ldr	r3, .L24
 466 0010 1A80     		strh	r2, [r3]	@ movhi
 164:.\main.c      ****     rightSpeedLimit = left;
 467              		.loc 1 164 0
 468 0012 3B68     		ldr	r3, [r7]
 469 0014 9AB2     		uxth	r2, r3
 470 0016 044B     		ldr	r3, .L24+4
 471 0018 1A80     		strh	r2, [r3]	@ movhi
 165:.\main.c      **** }
 472              		.loc 1 165 0
 473 001a 0C37     		adds	r7, r7, #12
 474              		.cfi_def_cfa_offset 4
 475 001c BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 001e 5DF8047B 		ldr	r7, [sp], #4
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 0022 7047     		bx	lr
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0024 00000000 		.word	leftSpeedLimit
 486 0028 00000000 		.word	rightSpeedLimit
 487              		.cfi_endproc
 488              	.LFE64:
 489              		.size	setSpeed, .-setSpeed
 490              		.section	.text.brakeMotor,"ax",%progbits
 491              		.align	2
 492              		.global	brakeMotor
 493              		.thumb
 494              		.thumb_func
 495              		.type	brakeMotor, %function
 496              	brakeMotor:
 497              	.LFB65:
 166:.\main.c      **** 
 167:.\main.c      **** void brakeMotor(){
 498              		.loc 1 167 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 168:.\main.c      ****     setSpeed(0, 0);
 508              		.loc 1 168 0
 509 0004 0020     		movs	r0, #0
 510 0006 0021     		movs	r1, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 13


 511 0008 FFF7FEFF 		bl	setSpeed
 169:.\main.c      ****     PWM_1_WriteCompare(0);
 512              		.loc 1 169 0
 513 000c 0020     		movs	r0, #0
 514 000e FFF7FEFF 		bl	PWM_1_WriteCompare
 170:.\main.c      ****     PWM_2_WriteCompare(0);
 515              		.loc 1 170 0
 516 0012 0020     		movs	r0, #0
 517 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 171:.\main.c      ****     right_duty_cycle = 0;
 518              		.loc 1 171 0
 519 0018 034B     		ldr	r3, .L27
 520 001a 0022     		movs	r2, #0
 521 001c 1A80     		strh	r2, [r3]	@ movhi
 172:.\main.c      ****     left_duty_cycle = 0;
 522              		.loc 1 172 0
 523 001e 034B     		ldr	r3, .L27+4
 524 0020 0022     		movs	r2, #0
 525 0022 1A80     		strh	r2, [r3]	@ movhi
 173:.\main.c      **** }
 526              		.loc 1 173 0
 527 0024 80BD     		pop	{r7, pc}
 528              	.L28:
 529 0026 00BF     		.align	2
 530              	.L27:
 531 0028 00000000 		.word	right_duty_cycle
 532 002c 00000000 		.word	left_duty_cycle
 533              		.cfi_endproc
 534              	.LFE65:
 535              		.size	brakeMotor, .-brakeMotor
 536              		.section	.text.driveForwards,"ax",%progbits
 537              		.align	2
 538              		.global	driveForwards
 539              		.thumb
 540              		.thumb_func
 541              		.type	driveForwards, %function
 542              	driveForwards:
 543              	.LFB66:
 174:.\main.c      **** 
 175:.\main.c      **** void driveForwards()
 176:.\main.c      **** {
 544              		.loc 1 176 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 177:.\main.c      ****     setSpeed(20, 20);
 554              		.loc 1 177 0
 555 0004 1420     		movs	r0, #20
 556 0006 1421     		movs	r1, #20
 557 0008 FFF7FEFF 		bl	setSpeed
 178:.\main.c      **** }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 14


 558              		.loc 1 178 0
 559 000c 80BD     		pop	{r7, pc}
 560              		.cfi_endproc
 561              	.LFE66:
 562              		.size	driveForwards, .-driveForwards
 563 000e 00BF     		.section	.text.turnLeft,"ax",%progbits
 564              		.align	2
 565              		.global	turnLeft
 566              		.thumb
 567              		.thumb_func
 568              		.type	turnLeft, %function
 569              	turnLeft:
 570              	.LFB67:
 179:.\main.c      **** 
 180:.\main.c      **** void turnLeft()
 181:.\main.c      **** {
 571              		.loc 1 181 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 182:.\main.c      ****     setSpeed(0,20);
 581              		.loc 1 182 0
 582 0004 0020     		movs	r0, #0
 583 0006 1421     		movs	r1, #20
 584 0008 FFF7FEFF 		bl	setSpeed
 183:.\main.c      **** }
 585              		.loc 1 183 0
 586 000c 80BD     		pop	{r7, pc}
 587              		.cfi_endproc
 588              	.LFE67:
 589              		.size	turnLeft, .-turnLeft
 590 000e 00BF     		.section	.text.turnRight,"ax",%progbits
 591              		.align	2
 592              		.global	turnRight
 593              		.thumb
 594              		.thumb_func
 595              		.type	turnRight, %function
 596              	turnRight:
 597              	.LFB68:
 184:.\main.c      **** 
 185:.\main.c      **** void turnRight()
 186:.\main.c      **** {
 598              		.loc 1 186 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 15


 607              		.cfi_def_cfa_register 7
 187:.\main.c      ****     setSpeed(20,0);
 608              		.loc 1 187 0
 609 0004 1420     		movs	r0, #20
 610 0006 0021     		movs	r1, #0
 611 0008 FFF7FEFF 		bl	setSpeed
 188:.\main.c      **** }
 612              		.loc 1 188 0
 613 000c 80BD     		pop	{r7, pc}
 614              		.cfi_endproc
 615              	.LFE68:
 616              		.size	turnRight, .-turnRight
 617 000e 00BF     		.section	.text.rxInt,"ax",%progbits
 618              		.align	2
 619              		.global	rxInt
 620              		.thumb
 621              		.thumb_func
 622              		.type	rxInt, %function
 623              	rxInt:
 624              	.LFB69:
 189:.\main.c      **** 
 190:.\main.c      **** 
 191:.\main.c      **** //Binary RF Data
 192:.\main.c      **** CY_ISR(rxInt){
 625              		.loc 1 192 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 8
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629 0000 B0B5     		push	{r4, r5, r7, lr}
 630              		.cfi_def_cfa_offset 16
 631              		.cfi_offset 4, -16
 632              		.cfi_offset 5, -12
 633              		.cfi_offset 7, -8
 634              		.cfi_offset 14, -4
 635 0002 82B0     		sub	sp, sp, #8
 636              		.cfi_def_cfa_offset 24
 637 0004 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 193:.\main.c      ****     char rf_char = UART_GetChar();
 639              		.loc 1 193 0
 640 0006 FFF7FEFF 		bl	UART_GetChar
 641 000a 0346     		mov	r3, r0
 642 000c FB71     		strb	r3, [r7, #7]
 194:.\main.c      ****     if(rf_char == SOP){
 643              		.loc 1 194 0
 644 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 645 0010 AA2B     		cmp	r3, #170
 646 0012 1CD1     		bne	.L33
 195:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 196:.\main.c      ****             if(byteCount == 34)
 647              		.loc 1 196 0
 648 0014 1B4B     		ldr	r3, .L37
 649 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 650 0018 222B     		cmp	r3, #34
 651 001a 11D1     		bne	.L34
 197:.\main.c      ****             {
 198:.\main.c      ****                 system_state = buffer_state;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 16


 652              		.loc 1 198 0
 653 001c 1A4B     		ldr	r3, .L37+4
 654 001e 1B4A     		ldr	r2, .L37+8
 655 0020 1568     		ldr	r5, [r2]	@ unaligned
 656 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 657 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 658 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 659 0028 1D60     		str	r5, [r3]	@ unaligned
 660 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 661 002c 9860     		str	r0, [r3, #8]	@ unaligned
 662 002e D960     		str	r1, [r3, #12]	@ unaligned
 663 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 664 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 665 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 666 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 667 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 668 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 669 003c 9861     		str	r0, [r3, #24]	@ unaligned
 670 003e D961     		str	r1, [r3, #28]	@ unaligned
 671              	.L34:
 199:.\main.c      ****             }
 200:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 672              		.loc 1 200 0
 673 0040 104B     		ldr	r3, .L37
 674 0042 0222     		movs	r2, #2
 675 0044 1A70     		strb	r2, [r3]
 201:.\main.c      ****             flag_rx = 0;
 676              		.loc 1 201 0
 677 0046 124B     		ldr	r3, .L37+12
 678 0048 0022     		movs	r2, #0
 679 004a 1A70     		strb	r2, [r3]
 680 004c 16E0     		b	.L32
 681              	.L33:
 202:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 203:.\main.c      ****         }
 204:.\main.c      ****         else
 205:.\main.c      ****         {
 206:.\main.c      ****             packet[byteCount % 2] = rf_char;
 682              		.loc 1 206 0
 683 004e 0D4B     		ldr	r3, .L37
 684 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 685 0052 03F00103 		and	r3, r3, #1
 686 0056 0F49     		ldr	r1, .L37+16
 687 0058 FA79     		ldrb	r2, [r7, #7]
 688 005a CA54     		strb	r2, [r1, r3]
 207:.\main.c      ****            
 208:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 689              		.loc 1 208 0
 690 005c 094B     		ldr	r3, .L37
 691 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 692 0060 03F00103 		and	r3, r3, #1
 693 0064 DBB2     		uxtb	r3, r3
 694 0066 002B     		cmp	r3, #0
 695 0068 02D0     		beq	.L36
 209:.\main.c      ****             {
 210:.\main.c      ****                 flag_rx = 1;
 696              		.loc 1 210 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 17


 697 006a 094B     		ldr	r3, .L37+12
 698 006c 0122     		movs	r2, #1
 699 006e 1A70     		strb	r2, [r3]
 700              	.L36:
 211:.\main.c      ****             }
 212:.\main.c      ****             byteCount = (byteCount + 1);
 701              		.loc 1 212 0
 702 0070 044B     		ldr	r3, .L37
 703 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 704 0074 0133     		adds	r3, r3, #1
 705 0076 DAB2     		uxtb	r2, r3
 706 0078 024B     		ldr	r3, .L37
 707 007a 1A70     		strb	r2, [r3]
 708              	.L32:
 213:.\main.c      ****         }
 214:.\main.c      **** }
 709              		.loc 1 214 0
 710 007c 0837     		adds	r7, r7, #8
 711              		.cfi_def_cfa_offset 16
 712 007e BD46     		mov	sp, r7
 713              		.cfi_def_cfa_register 13
 714              		@ sp needed
 715 0080 B0BD     		pop	{r4, r5, r7, pc}
 716              	.L38:
 717 0082 00BF     		.align	2
 718              	.L37:
 719 0084 00000000 		.word	byteCount
 720 0088 00000000 		.word	system_state
 721 008c 00000000 		.word	buffer_state
 722 0090 00000000 		.word	flag_rx
 723 0094 00000000 		.word	packet
 724              		.cfi_endproc
 725              	.LFE69:
 726              		.size	rxInt, .-rxInt
 727              		.section	.text.adc_isr,"ax",%progbits
 728              		.align	2
 729              		.global	adc_isr
 730              		.thumb
 731              		.thumb_func
 732              		.type	adc_isr, %function
 733              	adc_isr:
 734              	.LFB70:
 215:.\main.c      **** 
 216:.\main.c      **** //ADC:
 217:.\main.c      **** CY_ISR (adc_isr)
 218:.\main.c      **** {
 735              		.loc 1 218 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
 219:.\main.c      ****     //adc_result = ADC_GetResult16(0);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 18


 220:.\main.c      ****     adc_result = ADC_GetResult16();
 745              		.loc 1 220 0
 746 0004 FFF7FEFF 		bl	ADC_GetResult16
 747 0008 0346     		mov	r3, r0
 748 000a 1A46     		mov	r2, r3
 749 000c 044B     		ldr	r3, .L40
 750 000e 1A80     		strh	r2, [r3]	@ movhi
 221:.\main.c      ****     flag_receive_ADC = 1;
 751              		.loc 1 221 0
 752 0010 044B     		ldr	r3, .L40+4
 753 0012 0122     		movs	r2, #1
 754 0014 1A70     		strb	r2, [r3]
 222:.\main.c      ****     flag_print_rf = 1;
 755              		.loc 1 222 0
 756 0016 044B     		ldr	r3, .L40+8
 757 0018 0122     		movs	r2, #1
 758 001a 1A70     		strb	r2, [r3]
 223:.\main.c      ****     //LED_Write(~LED_Read());
 224:.\main.c      **** }
 759              		.loc 1 224 0
 760 001c 80BD     		pop	{r7, pc}
 761              	.L41:
 762 001e 00BF     		.align	2
 763              	.L40:
 764 0020 00000000 		.word	adc_result
 765 0024 00000000 		.word	flag_receive_ADC
 766 0028 00000000 		.word	flag_print_rf
 767              		.cfi_endproc
 768              	.LFE70:
 769              		.size	adc_isr, .-adc_isr
 770              		.section	.text.isr_quad1,"ax",%progbits
 771              		.align	2
 772              		.global	isr_quad1
 773              		.thumb
 774              		.thumb_func
 775              		.type	isr_quad1, %function
 776              	isr_quad1:
 777              	.LFB71:
 225:.\main.c      **** 
 226:.\main.c      **** CY_ISR (isr_quad1)
 227:.\main.c      **** {
 778              		.loc 1 227 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0000 80B5     		push	{r7, lr}
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 7, -8
 785              		.cfi_offset 14, -4
 786 0002 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 228:.\main.c      ****     //LED_Write(~LED_Read());
 229:.\main.c      ****     last_quad_count1 = quad_count1;
 788              		.loc 1 229 0
 789 0004 244B     		ldr	r3, .L44
 790 0006 1A88     		ldrh	r2, [r3]
 791 0008 244B     		ldr	r3, .L44+4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 19


 792 000a 1A80     		strh	r2, [r3]	@ movhi
 230:.\main.c      ****     last_quad_count2 = quad_count2;
 793              		.loc 1 230 0
 794 000c 244B     		ldr	r3, .L44+8
 795 000e 1A88     		ldrh	r2, [r3]
 796 0010 244B     		ldr	r3, .L44+12
 797 0012 1A80     		strh	r2, [r3]	@ movhi
 231:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 798              		.loc 1 231 0
 799 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 800 0018 0346     		mov	r3, r0
 801 001a 1A46     		mov	r2, r3
 802 001c 1E4B     		ldr	r3, .L44
 803 001e 1A80     		strh	r2, [r3]	@ movhi
 232:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 804              		.loc 1 232 0
 805 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 806 0024 0346     		mov	r3, r0
 807 0026 1A46     		mov	r2, r3
 808 0028 1D4B     		ldr	r3, .L44+8
 809 002a 1A80     		strh	r2, [r3]	@ movhi
 233:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 810              		.loc 1 233 0
 811 002c 1A4B     		ldr	r3, .L44
 812 002e 1B88     		ldrh	r3, [r3]
 813 0030 9AB2     		uxth	r2, r3
 814 0032 1A4B     		ldr	r3, .L44+4
 815 0034 1B88     		ldrh	r3, [r3]
 816 0036 9BB2     		uxth	r3, r3
 817 0038 D31A     		subs	r3, r2, r3
 818 003a 9BB2     		uxth	r3, r3
 819 003c 9AB2     		uxth	r2, r3
 820 003e 1A4B     		ldr	r3, .L44+16
 821 0040 1A80     		strh	r2, [r3]	@ movhi
 234:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 822              		.loc 1 234 0
 823 0042 174B     		ldr	r3, .L44+8
 824 0044 1B88     		ldrh	r3, [r3]
 825 0046 9AB2     		uxth	r2, r3
 826 0048 164B     		ldr	r3, .L44+12
 827 004a 1B88     		ldrh	r3, [r3]
 828 004c 9BB2     		uxth	r3, r3
 829 004e D31A     		subs	r3, r2, r3
 830 0050 9BB2     		uxth	r3, r3
 831 0052 9AB2     		uxth	r2, r3
 832 0054 154B     		ldr	r3, .L44+20
 833 0056 1A80     		strh	r2, [r3]	@ movhi
 235:.\main.c      ****     
 236:.\main.c      ****     if(quad_count1 > 3000 && movement_state != LTURN && movement_state != RTURN)
 834              		.loc 1 236 0
 835 0058 0F4B     		ldr	r3, .L44
 836 005a 1B88     		ldrh	r3, [r3]
 837 005c 1BB2     		sxth	r3, r3
 838 005e 40F6B832 		movw	r2, #3000
 839 0062 9342     		cmp	r3, r2
 840 0064 13DD     		ble	.L43
 841              		.loc 1 236 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 20


 842 0066 124B     		ldr	r3, .L44+24
 843 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 844 006a 012B     		cmp	r3, #1
 845 006c 0FD0     		beq	.L43
 846              		.loc 1 236 0 discriminator 2
 847 006e 104B     		ldr	r3, .L44+24
 848 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0072 022B     		cmp	r3, #2
 850 0074 0BD0     		beq	.L43
 237:.\main.c      ****     {
 238:.\main.c      ****         QuadDec_M1_SetCounter(0);
 851              		.loc 1 238 0 is_stmt 1
 852 0076 0020     		movs	r0, #0
 853 0078 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 239:.\main.c      ****         QuadDec_M2_SetCounter(0);
 854              		.loc 1 239 0
 855 007c 0020     		movs	r0, #0
 856 007e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 240:.\main.c      ****         quad_count1 = 0;
 857              		.loc 1 240 0
 858 0082 054B     		ldr	r3, .L44
 859 0084 0022     		movs	r2, #0
 860 0086 1A80     		strh	r2, [r3]	@ movhi
 241:.\main.c      ****         quad_count2 = 0;
 861              		.loc 1 241 0
 862 0088 054B     		ldr	r3, .L44+8
 863 008a 0022     		movs	r2, #0
 864 008c 1A80     		strh	r2, [r3]	@ movhi
 865              	.L43:
 242:.\main.c      ****     }
 243:.\main.c      **** 
 244:.\main.c      ****     flag_calc_wheelspeed = 1;
 866              		.loc 1 244 0
 867 008e 094B     		ldr	r3, .L44+28
 868 0090 0122     		movs	r2, #1
 869 0092 1A70     		strb	r2, [r3]
 245:.\main.c      **** }
 870              		.loc 1 245 0
 871 0094 80BD     		pop	{r7, pc}
 872              	.L45:
 873 0096 00BF     		.align	2
 874              	.L44:
 875 0098 00000000 		.word	quad_count1
 876 009c 00000000 		.word	last_quad_count1
 877 00a0 00000000 		.word	quad_count2
 878 00a4 00000000 		.word	last_quad_count2
 879 00a8 00000000 		.word	quad_diff1
 880 00ac 00000000 		.word	quad_diff2
 881 00b0 00000000 		.word	movement_state
 882 00b4 00000000 		.word	flag_calc_wheelspeed
 883              		.cfi_endproc
 884              	.LFE71:
 885              		.size	isr_quad1, .-isr_quad1
 886              		.section	.text.isr_turn_timer,"ax",%progbits
 887              		.align	2
 888              		.global	isr_turn_timer
 889              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 21


 890              		.thumb_func
 891              		.type	isr_turn_timer, %function
 892              	isr_turn_timer:
 893              	.LFB72:
 246:.\main.c      **** 
 247:.\main.c      **** CY_ISR(isr_turn_timer)
 248:.\main.c      **** {
 894              		.loc 1 248 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 249:.\main.c      ****     if(movement_state == LTURN)
 904              		.loc 1 249 0
 905 0004 134B     		ldr	r3, .L50
 906 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 907 0008 012B     		cmp	r3, #1
 908 000a 0FD1     		bne	.L47
 250:.\main.c      ****     {
 251:.\main.c      ****         if((QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 909              		.loc 1 251 0
 910 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 911 0010 0346     		mov	r3, r0
 912 0012 1A46     		mov	r2, r3
 913 0014 104B     		ldr	r3, .L50+4
 914 0016 1B88     		ldrh	r3, [r3]
 915 0018 1BB2     		sxth	r3, r3
 916 001a D31A     		subs	r3, r2, r3
 917 001c CF2B     		cmp	r3, #207
 918 001e 18DD     		ble	.L46
 252:.\main.c      ****         {
 253:.\main.c      ****             movement_state = STOPPED;
 919              		.loc 1 253 0
 920 0020 0C4B     		ldr	r3, .L50
 921 0022 0322     		movs	r2, #3
 922 0024 1A70     		strb	r2, [r3]
 254:.\main.c      ****             Timer_2_Stop();
 923              		.loc 1 254 0
 924 0026 FFF7FEFF 		bl	Timer_2_Stop
 925 002a 12E0     		b	.L46
 926              	.L47:
 255:.\main.c      ****         }
 256:.\main.c      ****     }
 257:.\main.c      ****     else if (movement_state == RTURN)
 927              		.loc 1 257 0
 928 002c 094B     		ldr	r3, .L50
 929 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 930 0030 022B     		cmp	r3, #2
 931 0032 0ED1     		bne	.L46
 258:.\main.c      ****     {
 259:.\main.c      ****         if((QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 932              		.loc 1 259 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 22


 933 0034 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 934 0038 0346     		mov	r3, r0
 935 003a 1A46     		mov	r2, r3
 936 003c 064B     		ldr	r3, .L50+4
 937 003e 1B88     		ldrh	r3, [r3]
 938 0040 1BB2     		sxth	r3, r3
 939 0042 D31A     		subs	r3, r2, r3
 940 0044 CF2B     		cmp	r3, #207
 941 0046 04DD     		ble	.L46
 260:.\main.c      ****         {
 261:.\main.c      ****             movement_state = STOPPED;
 942              		.loc 1 261 0
 943 0048 024B     		ldr	r3, .L50
 944 004a 0322     		movs	r2, #3
 945 004c 1A70     		strb	r2, [r3]
 262:.\main.c      ****             Timer_2_Stop();
 946              		.loc 1 262 0
 947 004e FFF7FEFF 		bl	Timer_2_Stop
 948              	.L46:
 263:.\main.c      ****         }
 264:.\main.c      ****     }
 265:.\main.c      **** }
 949              		.loc 1 265 0
 950 0052 80BD     		pop	{r7, pc}
 951              	.L51:
 952              		.align	2
 953              	.L50:
 954 0054 00000000 		.word	movement_state
 955 0058 00000000 		.word	start_turn_count
 956              		.cfi_endproc
 957              	.LFE72:
 958              		.size	isr_turn_timer, .-isr_turn_timer
 959              		.section	.text.Stop_on_line,"ax",%progbits
 960              		.align	2
 961              		.global	Stop_on_line
 962              		.thumb
 963              		.thumb_func
 964              		.type	Stop_on_line, %function
 965              	Stop_on_line:
 966              	.LFB73:
 266:.\main.c      **** 
 267:.\main.c      **** 
 268:.\main.c      **** CY_ISR (Stop_on_line)
 269:.\main.c      **** {
 967              		.loc 1 269 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 1, uses_anonymous_args = 0
 971 0000 80B5     		push	{r7, lr}
 972              		.cfi_def_cfa_offset 8
 973              		.cfi_offset 7, -8
 974              		.cfi_offset 14, -4
 975 0002 00AF     		add	r7, sp, #0
 976              		.cfi_def_cfa_register 7
 270:.\main.c      ****     //movement_state = STOPPED;
 271:.\main.c      ****     if(movement_state != DRIVE) return;
 977              		.loc 1 271 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 23


 978 0004 094B     		ldr	r3, .L55
 979 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0008 002B     		cmp	r3, #0
 981 000a 00D0     		beq	.L53
 982 000c 0CE0     		b	.L52
 983              	.L53:
 272:.\main.c      ****     brakeMotor();
 984              		.loc 1 272 0
 985 000e FFF7FEFF 		bl	brakeMotor
 273:.\main.c      ****     movement_state = LTURN;
 986              		.loc 1 273 0
 987 0012 064B     		ldr	r3, .L55
 988 0014 0122     		movs	r2, #1
 989 0016 1A70     		strb	r2, [r3]
 274:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 990              		.loc 1 274 0
 991 0018 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 992 001c 0346     		mov	r3, r0
 993 001e 1A46     		mov	r2, r3
 994 0020 034B     		ldr	r3, .L55+4
 995 0022 1A80     		strh	r2, [r3]	@ movhi
 275:.\main.c      ****     Timer_2_Start();
 996              		.loc 1 275 0
 997 0024 FFF7FEFF 		bl	Timer_2_Start
 998              	.L52:
 276:.\main.c      **** }
 999              		.loc 1 276 0
 1000 0028 80BD     		pop	{r7, pc}
 1001              	.L56:
 1002 002a 00BF     		.align	2
 1003              	.L55:
 1004 002c 00000000 		.word	movement_state
 1005 0030 00000000 		.word	start_turn_count
 1006              		.cfi_endproc
 1007              	.LFE73:
 1008              		.size	Stop_on_line, .-Stop_on_line
 1009              		.section	.text.button,"ax",%progbits
 1010              		.align	2
 1011              		.global	button
 1012              		.thumb
 1013              		.thumb_func
 1014              		.type	button, %function
 1015              	button:
 1016              	.LFB74:
 277:.\main.c      **** 
 278:.\main.c      **** CY_ISR (button)
 279:.\main.c      **** {
 1017              		.loc 1 279 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 1022 0000 80B4     		push	{r7}
 1023              		.cfi_def_cfa_offset 4
 1024              		.cfi_offset 7, -4
 1025 0002 00AF     		add	r7, sp, #0
 1026              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 24


 280:.\main.c      ****     movement_state = DRIVE;
 1027              		.loc 1 280 0
 1028 0004 034B     		ldr	r3, .L58
 1029 0006 0022     		movs	r2, #0
 1030 0008 1A70     		strb	r2, [r3]
 281:.\main.c      **** }
 1031              		.loc 1 281 0
 1032 000a BD46     		mov	sp, r7
 1033              		.cfi_def_cfa_register 13
 1034              		@ sp needed
 1035 000c 5DF8047B 		ldr	r7, [sp], #4
 1036              		.cfi_restore 7
 1037              		.cfi_def_cfa_offset 0
 1038 0010 7047     		bx	lr
 1039              	.L59:
 1040 0012 00BF     		.align	2
 1041              	.L58:
 1042 0014 00000000 		.word	movement_state
 1043              		.cfi_endproc
 1044              	.LFE74:
 1045              		.size	button, .-button
 1046              		.section	.text.isr_adcTimer,"ax",%progbits
 1047              		.align	2
 1048              		.global	isr_adcTimer
 1049              		.thumb
 1050              		.thumb_func
 1051              		.type	isr_adcTimer, %function
 1052              	isr_adcTimer:
 1053              	.LFB75:
 282:.\main.c      **** 
 283:.\main.c      **** CY_ISR(isr_adcTimer)
 284:.\main.c      **** {
 1054              		.loc 1 284 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 285:.\main.c      ****     ADC_StartConvert();
 1064              		.loc 1 285 0
 1065 0004 FFF7FEFF 		bl	ADC_StartConvert
 286:.\main.c      **** }
 1066              		.loc 1 286 0
 1067 0008 80BD     		pop	{r7, pc}
 1068              		.cfi_endproc
 1069              	.LFE75:
 1070              		.size	isr_adcTimer, .-isr_adcTimer
 1071 000a 00BF     		.section	.rodata
 1072              		.align	2
 1073              	.LC0:
 1074 0000 71756164 		.ascii	"quad count 1 is: %d\012\015\000"
 1074      20636F75 
 1074      6E742031 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 25


 1074      2069733A 
 1074      2025640A 
 1075 0016 0000     		.align	2
 1076              	.LC1:
 1077 0018 71756164 		.ascii	"quad count 2 is: %d\012\015\000"
 1077      20636F75 
 1077      6E742032 
 1077      2069733A 
 1077      2025640A 
 1078              		.global	__aeabi_i2d
 1079              		.global	__aeabi_dmul
 1080              		.global	__aeabi_d2iz
 1081              		.section	.text.Quad_Dec_response,"ax",%progbits
 1082              		.align	2
 1083              		.global	Quad_Dec_response
 1084              		.thumb
 1085              		.thumb_func
 1086              		.type	Quad_Dec_response, %function
 1087              	Quad_Dec_response:
 1088              	.LFB76:
 287:.\main.c      **** 
 288:.\main.c      **** void Quad_Dec_response()
 289:.\main.c      **** {
 1089              		.loc 1 289 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 144
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
 1093 0000 B0B5     		push	{r4, r5, r7, lr}
 1094              		.cfi_def_cfa_offset 16
 1095              		.cfi_offset 4, -16
 1096              		.cfi_offset 5, -12
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 A4B0     		sub	sp, sp, #144
 1100              		.cfi_def_cfa_offset 160
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 290:.\main.c      ****     //Check if the flag has been set
 291:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 1103              		.loc 1 291 0
 1104 0006 6B4B     		ldr	r3, .L68
 1105 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 000a 002B     		cmp	r3, #0
 1107 000c 00F0CE80 		beq	.L61
 292:.\main.c      ****     flag_calc_wheelspeed = 0;
 1108              		.loc 1 292 0
 1109 0010 684B     		ldr	r3, .L68
 1110 0012 0022     		movs	r2, #0
 1111 0014 1A70     		strb	r2, [r3]
 293:.\main.c      ****     
 294:.\main.c      ****     char wheel_1_str [64];
 295:.\main.c      ****     char wheel_2_str [64];
 296:.\main.c      ****     sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 1112              		.loc 1 296 0
 1113 0016 684B     		ldr	r3, .L68+4
 1114 0018 1B88     		ldrh	r3, [r3]
 1115 001a 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 26


 1116 001c 07F14402 		add	r2, r7, #68
 1117 0020 1046     		mov	r0, r2
 1118 0022 6649     		ldr	r1, .L68+8
 1119 0024 1A46     		mov	r2, r3
 1120 0026 FFF7FEFF 		bl	sprintf
 297:.\main.c      ****     //usbPutString(wheel_1_str);
 298:.\main.c      ****     sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 1121              		.loc 1 298 0
 1122 002a 654B     		ldr	r3, .L68+12
 1123 002c 1B88     		ldrh	r3, [r3]
 1124 002e 1BB2     		sxth	r3, r3
 1125 0030 3A1D     		adds	r2, r7, #4
 1126 0032 1046     		mov	r0, r2
 1127 0034 6349     		ldr	r1, .L68+16
 1128 0036 1A46     		mov	r2, r3
 1129 0038 FFF7FEFF 		bl	sprintf
 299:.\main.c      ****     
 300:.\main.c      ****     //usbPutString(wheel_2_str);
 301:.\main.c      ****     
 302:.\main.c      ****     int16 leftSpeed = quad_diff1;
 1130              		.loc 1 302 0
 1131 003c 5E4B     		ldr	r3, .L68+4
 1132 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1133 0040 A7F88E30 		strh	r3, [r7, #142]	@ movhi
 303:.\main.c      ****     int16 rightSpeed = quad_diff2;
 1134              		.loc 1 303 0
 1135 0044 5E4B     		ldr	r3, .L68+12
 1136 0046 1B88     		ldrh	r3, [r3]	@ movhi
 1137 0048 A7F88C30 		strh	r3, [r7, #140]	@ movhi
 304:.\main.c      **** 
 305:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 1138              		.loc 1 305 0
 1139 004c 5E4B     		ldr	r3, .L68+20
 1140 004e 1B88     		ldrh	r3, [r3]
 1141 0050 1AB2     		sxth	r2, r3
 1142 0052 B7F98E30 		ldrsh	r3, [r7, #142]
 1143 0056 002B     		cmp	r3, #0
 1144 0058 B8BF     		it	lt
 1145 005a 5B42     		rsblt	r3, r3, #0
 1146 005c D31A     		subs	r3, r2, r3
 1147 005e C7F88830 		str	r3, [r7, #136]
 306:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1148              		.loc 1 306 0
 1149 0062 D7F88830 		ldr	r3, [r7, #136]
 1150 0066 83EAE372 		eor	r2, r3, r3, asr #31
 1151 006a A2EBE372 		sub	r2, r2, r3, asr #31
 1152 006e D7F88830 		ldr	r3, [r7, #136]
 1153 0072 92FBF3F3 		sdiv	r3, r2, r3
 1154 0076 1846     		mov	r0, r3
 1155 0078 FFF7FEFF 		bl	__aeabi_i2d
 1156 007c 0446     		mov	r4, r0
 1157 007e 0D46     		mov	r5, r1
 1158 0080 D7F88830 		ldr	r3, [r7, #136]
 1159 0084 002B     		cmp	r3, #0
 1160 0086 B8BF     		it	lt
 1161 0088 5B42     		rsblt	r3, r3, #0
 1162 008a 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 27


 1163 008c FFF7FEFF 		bl	__aeabi_i2d
 1164 0090 0246     		mov	r2, r0
 1165 0092 0B46     		mov	r3, r1
 1166 0094 1046     		mov	r0, r2
 1167 0096 1946     		mov	r1, r3
 1168 0098 FFF7FEFF 		bl	sqrt
 1169 009c 0246     		mov	r2, r0
 1170 009e 0B46     		mov	r3, r1
 1171 00a0 2046     		mov	r0, r4
 1172 00a2 2946     		mov	r1, r5
 1173 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1174 00a8 0246     		mov	r2, r0
 1175 00aa 0B46     		mov	r3, r1
 1176 00ac 1046     		mov	r0, r2
 1177 00ae 1946     		mov	r1, r3
 1178 00b0 FFF7FEFF 		bl	__aeabi_d2iz
 1179 00b4 0346     		mov	r3, r0
 1180 00b6 C7F88430 		str	r3, [r7, #132]
 307:.\main.c      ****     left_duty_cycle = left_duty_cycle + nextSpeed;
 1181              		.loc 1 307 0
 1182 00ba D7F88430 		ldr	r3, [r7, #132]
 1183 00be 9AB2     		uxth	r2, r3
 1184 00c0 424B     		ldr	r3, .L68+24
 1185 00c2 1B88     		ldrh	r3, [r3]
 1186 00c4 9BB2     		uxth	r3, r3
 1187 00c6 1344     		add	r3, r3, r2
 1188 00c8 9BB2     		uxth	r3, r3
 1189 00ca 9AB2     		uxth	r2, r3
 1190 00cc 3F4B     		ldr	r3, .L68+24
 1191 00ce 1A80     		strh	r2, [r3]	@ movhi
 308:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 1192              		.loc 1 308 0
 1193 00d0 3F4B     		ldr	r3, .L68+28
 1194 00d2 1B88     		ldrh	r3, [r3]
 1195 00d4 1AB2     		sxth	r2, r3
 1196 00d6 B7F98C30 		ldrsh	r3, [r7, #140]
 1197 00da 002B     		cmp	r3, #0
 1198 00dc B8BF     		it	lt
 1199 00de 5B42     		rsblt	r3, r3, #0
 1200 00e0 D31A     		subs	r3, r2, r3
 1201 00e2 C7F88830 		str	r3, [r7, #136]
 309:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 1202              		.loc 1 309 0
 1203 00e6 D7F88830 		ldr	r3, [r7, #136]
 1204 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 1205 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 1206 00f2 D7F88830 		ldr	r3, [r7, #136]
 1207 00f6 92FBF3F3 		sdiv	r3, r2, r3
 1208 00fa 1846     		mov	r0, r3
 1209 00fc FFF7FEFF 		bl	__aeabi_i2d
 1210 0100 0446     		mov	r4, r0
 1211 0102 0D46     		mov	r5, r1
 1212 0104 D7F88830 		ldr	r3, [r7, #136]
 1213 0108 002B     		cmp	r3, #0
 1214 010a B8BF     		it	lt
 1215 010c 5B42     		rsblt	r3, r3, #0
 1216 010e 1846     		mov	r0, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 28


 1217 0110 FFF7FEFF 		bl	__aeabi_i2d
 1218 0114 0246     		mov	r2, r0
 1219 0116 0B46     		mov	r3, r1
 1220 0118 1046     		mov	r0, r2
 1221 011a 1946     		mov	r1, r3
 1222 011c FFF7FEFF 		bl	sqrt
 1223 0120 0246     		mov	r2, r0
 1224 0122 0B46     		mov	r3, r1
 1225 0124 2046     		mov	r0, r4
 1226 0126 2946     		mov	r1, r5
 1227 0128 FFF7FEFF 		bl	__aeabi_dmul
 1228 012c 0246     		mov	r2, r0
 1229 012e 0B46     		mov	r3, r1
 1230 0130 1046     		mov	r0, r2
 1231 0132 1946     		mov	r1, r3
 1232 0134 FFF7FEFF 		bl	__aeabi_d2iz
 1233 0138 0346     		mov	r3, r0
 1234 013a C7F88430 		str	r3, [r7, #132]
 310:.\main.c      ****     right_duty_cycle = right_duty_cycle + nextSpeed;
 1235              		.loc 1 310 0
 1236 013e D7F88430 		ldr	r3, [r7, #132]
 1237 0142 9AB2     		uxth	r2, r3
 1238 0144 234B     		ldr	r3, .L68+32
 1239 0146 1B88     		ldrh	r3, [r3]
 1240 0148 9BB2     		uxth	r3, r3
 1241 014a 1344     		add	r3, r3, r2
 1242 014c 9BB2     		uxth	r3, r3
 1243 014e 9AB2     		uxth	r2, r3
 1244 0150 204B     		ldr	r3, .L68+32
 1245 0152 1A80     		strh	r2, [r3]	@ movhi
 311:.\main.c      ****     
 312:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 1246              		.loc 1 312 0
 1247 0154 1F4B     		ldr	r3, .L68+32
 1248 0156 1B88     		ldrh	r3, [r3]
 1249 0158 1BB2     		sxth	r3, r3
 1250 015a 002B     		cmp	r3, #0
 1251 015c 02DA     		bge	.L64
 1252              		.loc 1 312 0 is_stmt 0 discriminator 1
 1253 015e 1D4B     		ldr	r3, .L68+32
 1254 0160 0022     		movs	r2, #0
 1255 0162 1A80     		strh	r2, [r3]	@ movhi
 1256              	.L64:
 313:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 1257              		.loc 1 313 0 is_stmt 1
 1258 0164 194B     		ldr	r3, .L68+24
 1259 0166 1B88     		ldrh	r3, [r3]
 1260 0168 1BB2     		sxth	r3, r3
 1261 016a 002B     		cmp	r3, #0
 1262 016c 02DA     		bge	.L65
 1263              		.loc 1 313 0 is_stmt 0 discriminator 1
 1264 016e 174B     		ldr	r3, .L68+24
 1265 0170 0022     		movs	r2, #0
 1266 0172 1A80     		strh	r2, [r3]	@ movhi
 1267              	.L65:
 314:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 1268              		.loc 1 314 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 29


 1269 0174 174B     		ldr	r3, .L68+32
 1270 0176 1B88     		ldrh	r3, [r3]
 1271 0178 1BB2     		sxth	r3, r3
 1272 017a 642B     		cmp	r3, #100
 1273 017c 02DD     		ble	.L66
 1274              		.loc 1 314 0 is_stmt 0 discriminator 1
 1275 017e 154B     		ldr	r3, .L68+32
 1276 0180 6422     		movs	r2, #100
 1277 0182 1A80     		strh	r2, [r3]	@ movhi
 1278              	.L66:
 315:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 1279              		.loc 1 315 0 is_stmt 1
 1280 0184 114B     		ldr	r3, .L68+24
 1281 0186 1B88     		ldrh	r3, [r3]
 1282 0188 1BB2     		sxth	r3, r3
 1283 018a 642B     		cmp	r3, #100
 1284 018c 02DD     		ble	.L67
 1285              		.loc 1 315 0 is_stmt 0 discriminator 1
 1286 018e 0F4B     		ldr	r3, .L68+24
 1287 0190 6422     		movs	r2, #100
 1288 0192 1A80     		strh	r2, [r3]	@ movhi
 1289              	.L67:
 316:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 1290              		.loc 1 316 0 is_stmt 1
 1291 0194 0D4B     		ldr	r3, .L68+24
 1292 0196 1B88     		ldrh	r3, [r3]
 1293 0198 DBB2     		uxtb	r3, r3
 1294 019a 1846     		mov	r0, r3
 1295 019c FFF7FEFF 		bl	PWM_1_WriteCompare
 317:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 1296              		.loc 1 317 0
 1297 01a0 0C4B     		ldr	r3, .L68+32
 1298 01a2 1B88     		ldrh	r3, [r3]
 1299 01a4 DBB2     		uxtb	r3, r3
 1300 01a6 1846     		mov	r0, r3
 1301 01a8 FFF7FEFF 		bl	PWM_2_WriteCompare
 1302              	.L61:
 318:.\main.c      **** }
 1303              		.loc 1 318 0
 1304 01ac 9037     		adds	r7, r7, #144
 1305              		.cfi_def_cfa_offset 16
 1306 01ae BD46     		mov	sp, r7
 1307              		.cfi_def_cfa_register 13
 1308              		@ sp needed
 1309 01b0 B0BD     		pop	{r4, r5, r7, pc}
 1310              	.L69:
 1311 01b2 00BF     		.align	2
 1312              	.L68:
 1313 01b4 00000000 		.word	flag_calc_wheelspeed
 1314 01b8 00000000 		.word	quad_diff1
 1315 01bc 00000000 		.word	.LC0
 1316 01c0 00000000 		.word	quad_diff2
 1317 01c4 18000000 		.word	.LC1
 1318 01c8 00000000 		.word	leftSpeedLimit
 1319 01cc 00000000 		.word	left_duty_cycle
 1320 01d0 00000000 		.word	rightSpeedLimit
 1321 01d4 00000000 		.word	right_duty_cycle
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 30


 1322              		.cfi_endproc
 1323              	.LFE76:
 1324              		.size	Quad_Dec_response, .-Quad_Dec_response
 1325              		.global	__aeabi_i2f
 1326              		.global	__aeabi_fmul
 1327              		.global	__aeabi_fadd
 1328              		.global	__aeabi_f2iz
 1329              		.section	.rodata
 1330 002e 0000     		.align	2
 1331              	.LC2:
 1332 0030 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 1332      65727920 
 1332      566F6C74 
 1332      6167653A 
 1332      2025646D 
 1333              		.section	.text.print_ADC,"ax",%progbits
 1334              		.align	2
 1335              		.global	print_ADC
 1336              		.thumb
 1337              		.thumb_func
 1338              		.type	print_ADC, %function
 1339              	print_ADC:
 1340              	.LFB77:
 319:.\main.c      **** 
 320:.\main.c      **** void print_ADC()
 321:.\main.c      **** {
 1341              		.loc 1 321 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 24
 1344              		@ frame_needed = 1, uses_anonymous_args = 0
 1345 0000 80B5     		push	{r7, lr}
 1346              		.cfi_def_cfa_offset 8
 1347              		.cfi_offset 7, -8
 1348              		.cfi_offset 14, -4
 1349 0002 86B0     		sub	sp, sp, #24
 1350              		.cfi_def_cfa_offset 32
 1351 0004 00AF     		add	r7, sp, #0
 1352              		.cfi_def_cfa_register 7
 322:.\main.c      ****    //usbPutString("HII\n");
 323:.\main.c      ****     if(flag_receive_ADC == 1)
 1353              		.loc 1 323 0
 1354 0006 274B     		ldr	r3, .L73
 1355 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1356 000a 012B     		cmp	r3, #1
 1357 000c 46D1     		bne	.L70
 1358              	.LBB3:
 324:.\main.c      ****     {
 325:.\main.c      ****         //usbPutString("AAA\r\n");
 326:.\main.c      ****         flag_receive_ADC = 0;
 1359              		.loc 1 326 0
 1360 000e 254B     		ldr	r3, .L73
 1361 0010 0022     		movs	r2, #0
 1362 0012 1A70     		strb	r2, [r3]
 327:.\main.c      ****         
 328:.\main.c      ****        // int8 channel = ADC_
 329:.\main.c      ****         float scalingFactor = 0.972;
 1363              		.loc 1 329 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 31


 1364 0014 244B     		ldr	r3, .L73+4
 1365 0016 7B61     		str	r3, [r7, #20]	@ float
 330:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 1366              		.loc 1 330 0
 1367 0018 244B     		ldr	r3, .L73+8
 1368 001a 1B88     		ldrh	r3, [r3]
 1369 001c 1BB2     		sxth	r3, r3
 1370 001e 41F28832 		movw	r2, #5000
 1371 0022 02FB03F3 		mul	r3, r2, r3
 1372 0026 002B     		cmp	r3, #0
 1373 0028 01DA     		bge	.L72
 1374 002a 03F6FF73 		addw	r3, r3, #4095
 1375              	.L72:
 1376 002e 1B13     		asrs	r3, r3, #12
 1377 0030 1846     		mov	r0, r3
 1378 0032 FFF7FEFF 		bl	__aeabi_i2f
 1379 0036 0346     		mov	r3, r0
 1380 0038 1846     		mov	r0, r3
 1381 003a 7969     		ldr	r1, [r7, #20]	@ float
 1382 003c FFF7FEFF 		bl	__aeabi_fmul
 1383 0040 0346     		mov	r3, r0
 1384 0042 1846     		mov	r0, r3
 1385 0044 1946     		mov	r1, r3
 1386 0046 FFF7FEFF 		bl	__aeabi_fadd
 1387 004a 0346     		mov	r3, r0
 1388 004c 1846     		mov	r0, r3
 1389 004e FFF7FEFF 		bl	__aeabi_f2iz
 1390 0052 0346     		mov	r3, r0
 1391 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 331:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 1392              		.loc 1 331 0
 1393 0056 B7F91220 		ldrsh	r2, [r7, #18]
 1394 005a 154B     		ldr	r3, .L73+12
 1395 005c 1B88     		ldrh	r3, [r3]
 1396 005e 1BB2     		sxth	r3, r3
 1397 0060 1A44     		add	r2, r2, r3
 1398 0062 144B     		ldr	r3, .L73+16
 1399 0064 1B88     		ldrh	r3, [r3]
 1400 0066 1BB2     		sxth	r3, r3
 1401 0068 1344     		add	r3, r3, r2
 1402 006a 134A     		ldr	r2, .L73+20
 1403 006c 82FB0312 		smull	r1, r2, r2, r3
 1404 0070 DB17     		asrs	r3, r3, #31
 1405 0072 D31A     		subs	r3, r2, r3
 1406 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 332:.\main.c      ****         prevVoltage2 = prevVoltage;
 1407              		.loc 1 332 0
 1408 0076 0E4B     		ldr	r3, .L73+12
 1409 0078 1A88     		ldrh	r2, [r3]
 1410 007a 0E4B     		ldr	r3, .L73+16
 1411 007c 1A80     		strh	r2, [r3]	@ movhi
 333:.\main.c      ****         prevVoltage = converted_val;
 1412              		.loc 1 333 0
 1413 007e 0C4A     		ldr	r2, .L73+12
 1414 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1415 0082 1380     		strh	r3, [r2]	@ movhi
 334:.\main.c      ****         
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 32


 335:.\main.c      ****         char result_str[16];
 336:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 1416              		.loc 1 336 0
 1417 0084 B7F91230 		ldrsh	r3, [r7, #18]
 1418 0088 3A46     		mov	r2, r7
 1419 008a 1046     		mov	r0, r2
 1420 008c 0B49     		ldr	r1, .L73+24
 1421 008e 1A46     		mov	r2, r3
 1422 0090 FFF7FEFF 		bl	sprintf
 337:.\main.c      ****         
 338:.\main.c      ****         usbPutString(result_str);
 1423              		.loc 1 338 0
 1424 0094 3B46     		mov	r3, r7
 1425 0096 1846     		mov	r0, r3
 1426 0098 FFF7FEFF 		bl	usbPutString
 1427              	.L70:
 1428              	.LBE3:
 339:.\main.c      ****     }
 340:.\main.c      **** }
 1429              		.loc 1 340 0
 1430 009c 1837     		adds	r7, r7, #24
 1431              		.cfi_def_cfa_offset 8
 1432 009e BD46     		mov	sp, r7
 1433              		.cfi_def_cfa_register 13
 1434              		@ sp needed
 1435 00a0 80BD     		pop	{r7, pc}
 1436              	.L74:
 1437 00a2 00BF     		.align	2
 1438              	.L73:
 1439 00a4 00000000 		.word	flag_receive_ADC
 1440 00a8 FED4783F 		.word	1064883454
 1441 00ac 00000000 		.word	adc_result
 1442 00b0 00000000 		.word	prevVoltage
 1443 00b4 00000000 		.word	prevVoltage2
 1444 00b8 56555555 		.word	1431655766
 1445 00bc 30000000 		.word	.LC2
 1446              		.cfi_endproc
 1447              	.LFE77:
 1448              		.size	print_ADC, .-print_ADC
 1449              		.section	.rodata
 1450              		.align	2
 1451              	.LC3:
 1452 0048 52535349 		.ascii	"RSSI:\000"
 1452      3A00
 1453 004e 0000     		.align	2
 1454              	.LC4:
 1455 0050 25640D0A 		.ascii	"%d\015\012\000"
 1455      00
 1456 0055 000000   		.align	2
 1457              	.LC5:
 1458 0058 726F626F 		.ascii	"robot_x:\000"
 1458      745F783A 
 1458      00
 1459 0061 000000   		.align	2
 1460              	.LC6:
 1461 0064 726F626F 		.ascii	"robot_y:\000"
 1461      745F793A 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 33


 1461      00
 1462 006d 000000   		.align	2
 1463              	.LC7:
 1464 0070 726F626F 		.ascii	"robot_dir:\000"
 1464      745F6469 
 1464      723A00
 1465 007b 00       		.section	.text.print_RF,"ax",%progbits
 1466              		.align	2
 1467              		.global	print_RF
 1468              		.thumb
 1469              		.thumb_func
 1470              		.type	print_RF, %function
 1471              	print_RF:
 1472              	.LFB78:
 341:.\main.c      **** 
 342:.\main.c      **** void print_RF()
 343:.\main.c      **** {
 1473              		.loc 1 343 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 16
 1476              		@ frame_needed = 1, uses_anonymous_args = 0
 1477 0000 80B5     		push	{r7, lr}
 1478              		.cfi_def_cfa_offset 8
 1479              		.cfi_offset 7, -8
 1480              		.cfi_offset 14, -4
 1481 0002 84B0     		sub	sp, sp, #16
 1482              		.cfi_def_cfa_offset 24
 1483 0004 00AF     		add	r7, sp, #0
 1484              		.cfi_def_cfa_register 7
 344:.\main.c      ****     if(flag_print_rf == 1)
 1485              		.loc 1 344 0
 1486 0006 254B     		ldr	r3, .L77
 1487 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1488 000a 012B     		cmp	r3, #1
 1489 000c 42D1     		bne	.L75
 1490              	.LBB4:
 345:.\main.c      ****     {
 346:.\main.c      ****         char printString[16];
 347:.\main.c      ****         flag_print_rf = 0;
 1491              		.loc 1 347 0
 1492 000e 234B     		ldr	r3, .L77
 1493 0010 0022     		movs	r2, #0
 1494 0012 1A70     		strb	r2, [r3]
 348:.\main.c      ****         usbPutString("RSSI:");
 1495              		.loc 1 348 0
 1496 0014 2248     		ldr	r0, .L77+4
 1497 0016 FFF7FEFF 		bl	usbPutString
 349:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 1498              		.loc 1 349 0
 1499 001a 224B     		ldr	r3, .L77+8
 1500 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 001e 5BB2     		sxtb	r3, r3
 1502 0020 3A46     		mov	r2, r7
 1503 0022 1046     		mov	r0, r2
 1504 0024 2049     		ldr	r1, .L77+12
 1505 0026 1A46     		mov	r2, r3
 1506 0028 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 34


 350:.\main.c      ****         usbPutString(printString);
 1507              		.loc 1 350 0
 1508 002c 3B46     		mov	r3, r7
 1509 002e 1846     		mov	r0, r3
 1510 0030 FFF7FEFF 		bl	usbPutString
 351:.\main.c      ****         usbPutString("robot_x:");
 1511              		.loc 1 351 0
 1512 0034 1D48     		ldr	r0, .L77+16
 1513 0036 FFF7FEFF 		bl	usbPutString
 352:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 1514              		.loc 1 352 0
 1515 003a 1A4B     		ldr	r3, .L77+8
 1516 003c 5B88     		ldrh	r3, [r3, #2]
 1517 003e 1BB2     		sxth	r3, r3
 1518 0040 3A46     		mov	r2, r7
 1519 0042 1046     		mov	r0, r2
 1520 0044 1849     		ldr	r1, .L77+12
 1521 0046 1A46     		mov	r2, r3
 1522 0048 FFF7FEFF 		bl	sprintf
 353:.\main.c      ****         usbPutString(printString);
 1523              		.loc 1 353 0
 1524 004c 3B46     		mov	r3, r7
 1525 004e 1846     		mov	r0, r3
 1526 0050 FFF7FEFF 		bl	usbPutString
 354:.\main.c      ****         usbPutString("robot_y:");
 1527              		.loc 1 354 0
 1528 0054 1648     		ldr	r0, .L77+20
 1529 0056 FFF7FEFF 		bl	usbPutString
 355:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 1530              		.loc 1 355 0
 1531 005a 124B     		ldr	r3, .L77+8
 1532 005c 9B88     		ldrh	r3, [r3, #4]
 1533 005e 1BB2     		sxth	r3, r3
 1534 0060 3A46     		mov	r2, r7
 1535 0062 1046     		mov	r0, r2
 1536 0064 1049     		ldr	r1, .L77+12
 1537 0066 1A46     		mov	r2, r3
 1538 0068 FFF7FEFF 		bl	sprintf
 356:.\main.c      ****         usbPutString(printString);
 1539              		.loc 1 356 0
 1540 006c 3B46     		mov	r3, r7
 1541 006e 1846     		mov	r0, r3
 1542 0070 FFF7FEFF 		bl	usbPutString
 357:.\main.c      ****         usbPutString("robot_dir:");
 1543              		.loc 1 357 0
 1544 0074 0F48     		ldr	r0, .L77+24
 1545 0076 FFF7FEFF 		bl	usbPutString
 358:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 1546              		.loc 1 358 0
 1547 007a 0A4B     		ldr	r3, .L77+8
 1548 007c DB88     		ldrh	r3, [r3, #6]
 1549 007e 1BB2     		sxth	r3, r3
 1550 0080 3A46     		mov	r2, r7
 1551 0082 1046     		mov	r0, r2
 1552 0084 0849     		ldr	r1, .L77+12
 1553 0086 1A46     		mov	r2, r3
 1554 0088 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 35


 359:.\main.c      ****         usbPutString(printString);
 1555              		.loc 1 359 0
 1556 008c 3B46     		mov	r3, r7
 1557 008e 1846     		mov	r0, r3
 1558 0090 FFF7FEFF 		bl	usbPutString
 1559              	.L75:
 1560              	.LBE4:
 360:.\main.c      ****     }
 361:.\main.c      **** }
 1561              		.loc 1 361 0
 1562 0094 1037     		adds	r7, r7, #16
 1563              		.cfi_def_cfa_offset 8
 1564 0096 BD46     		mov	sp, r7
 1565              		.cfi_def_cfa_register 13
 1566              		@ sp needed
 1567 0098 80BD     		pop	{r7, pc}
 1568              	.L78:
 1569 009a 00BF     		.align	2
 1570              	.L77:
 1571 009c 00000000 		.word	flag_print_rf
 1572 00a0 48000000 		.word	.LC3
 1573 00a4 00000000 		.word	system_state
 1574 00a8 50000000 		.word	.LC4
 1575 00ac 58000000 		.word	.LC5
 1576 00b0 64000000 		.word	.LC6
 1577 00b4 70000000 		.word	.LC7
 1578              		.cfi_endproc
 1579              	.LFE78:
 1580              		.size	print_RF, .-print_RF
 1581              		.section	.text.main,"ax",%progbits
 1582              		.align	2
 1583              		.global	main
 1584              		.thumb
 1585              		.thumb_func
 1586              		.type	main, %function
 1587              	main:
 1588              	.LFB79:
 362:.\main.c      **** 
 363:.\main.c      **** int main()
 364:.\main.c      **** {  
 1589              		.loc 1 364 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 1, uses_anonymous_args = 0
 1593 0000 80B5     		push	{r7, lr}
 1594              		.cfi_def_cfa_offset 8
 1595              		.cfi_offset 7, -8
 1596              		.cfi_offset 14, -4
 1597 0002 00AF     		add	r7, sp, #0
 1598              		.cfi_def_cfa_register 7
 365:.\main.c      **** 
 366:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 367:.\main.c      **** // ----- INITIALIZATIONS ----------
 368:.\main.c      ****     CYGlobalIntEnable;
 1599              		.loc 1 368 0
 1600              	@ 368 ".\main.c" 1
 1601 0004 62B6     		CPSIE   i
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 36


 1602              	@ 0 "" 2
 369:.\main.c      ****     if(ENABLE_PWM)
 370:.\main.c      ****     {
 371:.\main.c      ****         PWM_1_Start();// starting the pwm
 1603              		.loc 1 371 0
 1604              		.thumb
 1605 0006 FFF7FEFF 		bl	PWM_1_Start
 372:.\main.c      ****         PWM_2_Start();// starting the pwm
 1606              		.loc 1 372 0
 1607 000a FFF7FEFF 		bl	PWM_2_Start
 373:.\main.c      ****     }
 374:.\main.c      ****     
 375:.\main.c      ****     if(ENABLE_ADC)
 376:.\main.c      ****     {
 377:.\main.c      ****         ADC_Start();
 378:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 379:.\main.c      ****         //ADC_StartConvert();
 380:.\main.c      ****         
 381:.\main.c      ****         //start the ADC timer for software trigger mode
 382:.\main.c      ****         Timer_TS_Start();
 383:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 384:.\main.c      ****     }
 385:.\main.c      ****     
 386:.\main.c      ****     if (ENABLE_QUAD)
 387:.\main.c      ****     {
 388:.\main.c      ****         QuadDec_M1_Start();
 1608              		.loc 1 388 0
 1609 000e FFF7FEFF 		bl	QuadDec_M1_Start
 389:.\main.c      ****         QuadDec_M2_Start();
 1610              		.loc 1 389 0
 1611 0012 FFF7FEFF 		bl	QuadDec_M2_Start
 390:.\main.c      ****         
 391:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1612              		.loc 1 391 0
 1613 0016 2248     		ldr	r0, .L89
 1614 0018 FFF7FEFF 		bl	isr_quad1_StartEx
 392:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1615              		.loc 1 392 0
 1616 001c 2148     		ldr	r0, .L89+4
 1617 001e FFF7FEFF 		bl	isr_turn_count_StartEx
 393:.\main.c      ****         
 394:.\main.c      ****         Timer_1_Start();
 1618              		.loc 1 394 0
 1619 0022 FFF7FEFF 		bl	Timer_1_Start
 395:.\main.c      ****     }
 396:.\main.c      ****     
 397:.\main.c      ****     if(ENABLE_STOP){
 398:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 1620              		.loc 1 398 0
 1621 0026 2048     		ldr	r0, .L89+8
 1622 0028 FFF7FEFF 		bl	isr_OnLine_StartEx
 399:.\main.c      ****         isr_button_StartEx(button);
 1623              		.loc 1 399 0
 1624 002c 1F48     		ldr	r0, .L89+12
 1625 002e FFF7FEFF 		bl	isr_button_StartEx
 400:.\main.c      ****     }
 401:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 37


 402:.\main.c      ****     // ------USB SETUP ----------------    
 403:.\main.c      ****     if (USE_USB){    
 404:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1626              		.loc 1 404 0
 1627 0032 0020     		movs	r0, #0
 1628 0034 0121     		movs	r1, #1
 1629 0036 FFF7FEFF 		bl	USBUART_Start
 405:.\main.c      ****         if (USBUART_GetConfiguration())
 1630              		.loc 1 405 0
 1631 003a FFF7FEFF 		bl	USBUART_GetConfiguration
 1632 003e 0346     		mov	r3, r0
 1633 0040 002B     		cmp	r3, #0
 1634 0042 01D0     		beq	.L88
 406:.\main.c      ****             {
 407:.\main.c      ****                  USBUART_CDC_Init();
 1635              		.loc 1 407 0
 1636 0044 FFF7FEFF 		bl	USBUART_CDC_Init
 1637              	.L88:
 408:.\main.c      ****             }
 409:.\main.c      ****     }
 410:.\main.c      ****     
 411:.\main.c      ****     if(BIN_ENABLED){
 412:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 1638              		.loc 1 412 0
 1639 0048 1948     		ldr	r0, .L89+16
 1640 004a FFF7FEFF 		bl	isrRF_RX_StartEx
 413:.\main.c      ****         UART_Start();
 1641              		.loc 1 413 0
 1642 004e FFF7FEFF 		bl	UART_Start
 414:.\main.c      ****     }
 415:.\main.c      ****     
 416:.\main.c      ****     RF_BT_SELECT_Write(0);
 1643              		.loc 1 416 0
 1644 0052 0020     		movs	r0, #0
 1645 0054 FFF7FEFF 		bl	RF_BT_SELECT_Write
 1646              	.L87:
 417:.\main.c      **** 
 418:.\main.c      ****     //usbPutString("Started");
 419:.\main.c      ****     for(;;)
 420:.\main.c      ****     {
 421:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 422:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1647              		.loc 1 422 0
 1648 0058 FFF7FEFF 		bl	Quad_Dec_response
 423:.\main.c      ****         if(BIN_ENABLED == 1)
 424:.\main.c      ****         {
 425:.\main.c      ****             handle_rx_binary();
 1649              		.loc 1 425 0
 1650 005c FFF7FEFF 		bl	handle_rx_binary
 426:.\main.c      ****             print_RF();
 1651              		.loc 1 426 0
 1652 0060 FFF7FEFF 		bl	print_RF
 427:.\main.c      ****         }
 428:.\main.c      ****         
 429:.\main.c      ****         switch(movement_state)
 1653              		.loc 1 429 0
 1654 0064 134B     		ldr	r3, .L89+20
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 38


 1655 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1656 0068 032B     		cmp	r3, #3
 1657 006a F5D8     		bhi	.L87
 1658 006c 01A2     		adr	r2, .L83
 1659 006e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1660 0072 00BF     		.p2align 2
 1661              	.L83:
 1662 0074 85000000 		.word	.L82+1
 1663 0078 8B000000 		.word	.L84+1
 1664 007c 91000000 		.word	.L85+1
 1665 0080 97000000 		.word	.L86+1
 1666              		.p2align 1
 1667              	.L82:
 430:.\main.c      ****         {
 431:.\main.c      ****             case DRIVE:
 432:.\main.c      ****                 driveForwards();
 1668              		.loc 1 432 0
 1669 0084 FFF7FEFF 		bl	driveForwards
 433:.\main.c      ****             break;
 1670              		.loc 1 433 0
 1671 0088 08E0     		b	.L81
 1672              	.L84:
 434:.\main.c      ****             case LTURN:
 435:.\main.c      ****                 turnLeft();
 1673              		.loc 1 435 0
 1674 008a FFF7FEFF 		bl	turnLeft
 436:.\main.c      ****             break;
 1675              		.loc 1 436 0
 1676 008e 05E0     		b	.L81
 1677              	.L85:
 437:.\main.c      ****             case RTURN:
 438:.\main.c      ****                 turnRight();
 1678              		.loc 1 438 0
 1679 0090 FFF7FEFF 		bl	turnRight
 439:.\main.c      ****             break;
 1680              		.loc 1 439 0
 1681 0094 02E0     		b	.L81
 1682              	.L86:
 440:.\main.c      ****             case STOPPED:
 441:.\main.c      ****                 brakeMotor();
 1683              		.loc 1 441 0
 1684 0096 FFF7FEFF 		bl	brakeMotor
 442:.\main.c      ****             break;
 1685              		.loc 1 442 0
 1686 009a 00BF     		nop
 1687              	.L81:
 443:.\main.c      ****         }
 444:.\main.c      ****         //handle_usb();        
 445:.\main.c      ****     }   
 1688              		.loc 1 445 0
 1689 009c DCE7     		b	.L87
 1690              	.L90:
 1691 009e 00BF     		.align	2
 1692              	.L89:
 1693 00a0 00000000 		.word	isr_quad1
 1694 00a4 00000000 		.word	isr_turn_timer
 1695 00a8 00000000 		.word	Stop_on_line
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 39


 1696 00ac 00000000 		.word	button
 1697 00b0 00000000 		.word	rxInt
 1698 00b4 00000000 		.word	movement_state
 1699              		.cfi_endproc
 1700              	.LFE79:
 1701              		.size	main, .-main
 1702              		.section	.text.usbPutString,"ax",%progbits
 1703              		.align	2
 1704              		.global	usbPutString
 1705              		.thumb
 1706              		.thumb_func
 1707              		.type	usbPutString, %function
 1708              	usbPutString:
 1709              	.LFB80:
 446:.\main.c      **** }
 447:.\main.c      **** //* ========================================
 448:.\main.c      **** void usbPutString(char *s)
 449:.\main.c      **** {
 1710              		.loc 1 449 0
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 16
 1713              		@ frame_needed = 1, uses_anonymous_args = 0
 1714 0000 80B5     		push	{r7, lr}
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 7, -8
 1717              		.cfi_offset 14, -4
 1718 0002 84B0     		sub	sp, sp, #16
 1719              		.cfi_def_cfa_offset 24
 1720 0004 00AF     		add	r7, sp, #0
 1721              		.cfi_def_cfa_register 7
 1722 0006 7860     		str	r0, [r7, #4]
 450:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 451:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 452:.\main.c      **** //  length to 62 char (63rd char is a '!')
 453:.\main.c      ****     if (USE_USB && portOpen)    
 1723              		.loc 1 453 0
 1724 0008 154B     		ldr	r3, .L95
 1725 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1726 000c 002B     		cmp	r3, #0
 1727 000e 23D0     		beq	.L91
 1728              	.LBB5:
 454:.\main.c      ****     {
 455:.\main.c      ****             uint32 cnt = 0;
 1729              		.loc 1 455 0
 1730 0010 0023     		movs	r3, #0
 1731 0012 FB60     		str	r3, [r7, #12]
 456:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 1732              		.loc 1 456 0
 1733 0014 0AE0     		b	.L93
 1734              	.L94:
 457:.\main.c      ****             {
 458:.\main.c      ****                 cnt++;
 1735              		.loc 1 458 0
 1736 0016 FB68     		ldr	r3, [r7, #12]
 1737 0018 0133     		adds	r3, r3, #1
 1738 001a FB60     		str	r3, [r7, #12]
 459:.\main.c      ****                 if(cnt == 3000000){
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 40


 1739              		.loc 1 459 0
 1740 001c FB68     		ldr	r3, [r7, #12]
 1741 001e 114A     		ldr	r2, .L95+4
 1742 0020 9342     		cmp	r3, r2
 1743 0022 03D1     		bne	.L93
 460:.\main.c      ****                     portOpen = 0;
 1744              		.loc 1 460 0
 1745 0024 0E4B     		ldr	r3, .L95
 1746 0026 0022     		movs	r2, #0
 1747 0028 1A70     		strb	r2, [r3]
 461:.\main.c      ****                     return;
 1748              		.loc 1 461 0
 1749 002a 15E0     		b	.L91
 1750              	.L93:
 456:.\main.c      ****             {
 1751              		.loc 1 456 0
 1752 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 1753 0030 0346     		mov	r3, r0
 1754 0032 002B     		cmp	r3, #0
 1755 0034 EFD0     		beq	.L94
 462:.\main.c      ****                 }
 463:.\main.c      ****             }
 464:.\main.c      ****             s[63]='\0';
 1756              		.loc 1 464 0
 1757 0036 7B68     		ldr	r3, [r7, #4]
 1758 0038 3F33     		adds	r3, r3, #63
 1759 003a 0022     		movs	r2, #0
 1760 003c 1A70     		strb	r2, [r3]
 465:.\main.c      ****             s[62]='!';
 1761              		.loc 1 465 0
 1762 003e 7B68     		ldr	r3, [r7, #4]
 1763 0040 3E33     		adds	r3, r3, #62
 1764 0042 2122     		movs	r2, #33
 1765 0044 1A70     		strb	r2, [r3]
 466:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 1766              		.loc 1 466 0
 1767 0046 7868     		ldr	r0, [r7, #4]
 1768 0048 FFF7FEFF 		bl	strlen
 1769 004c 0346     		mov	r3, r0
 1770 004e 9BB2     		uxth	r3, r3
 1771 0050 7868     		ldr	r0, [r7, #4]
 1772 0052 1946     		mov	r1, r3
 1773 0054 FFF7FEFF 		bl	USBUART_PutData
 1774              	.L91:
 1775              	.LBE5:
 467:.\main.c      ****     }
 468:.\main.c      **** }
 1776              		.loc 1 468 0
 1777 0058 1037     		adds	r7, r7, #16
 1778              		.cfi_def_cfa_offset 8
 1779 005a BD46     		mov	sp, r7
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 005c 80BD     		pop	{r7, pc}
 1783              	.L96:
 1784 005e 00BF     		.align	2
 1785              	.L95:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 41


 1786 0060 00000000 		.word	portOpen
 1787 0064 C0C62D00 		.word	3000000
 1788              		.cfi_endproc
 1789              	.LFE80:
 1790              		.size	usbPutString, .-usbPutString
 1791              		.section	.text.usbPutChar,"ax",%progbits
 1792              		.align	2
 1793              		.global	usbPutChar
 1794              		.thumb
 1795              		.thumb_func
 1796              		.type	usbPutChar, %function
 1797              	usbPutChar:
 1798              	.LFB81:
 469:.\main.c      **** //* ========================================
 470:.\main.c      **** void usbPutChar(char c)
 471:.\main.c      **** {
 1799              		.loc 1 471 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 16
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 84B0     		sub	sp, sp, #16
 1808              		.cfi_def_cfa_offset 24
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
 1811 0006 0346     		mov	r3, r0
 1812 0008 FB71     		strb	r3, [r7, #7]
 472:.\main.c      ****     if (USE_USB && portOpen)    
 1813              		.loc 1 472 0
 1814 000a 0F4B     		ldr	r3, .L101
 1815 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1816 000e 002B     		cmp	r3, #0
 1817 0010 16D0     		beq	.L97
 1818              	.LBB6:
 473:.\main.c      ****     {    
 474:.\main.c      ****         uint32 cnt = 0;
 1819              		.loc 1 474 0
 1820 0012 0023     		movs	r3, #0
 1821 0014 FB60     		str	r3, [r7, #12]
 475:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 1822              		.loc 1 475 0
 1823 0016 0AE0     		b	.L99
 1824              	.L100:
 476:.\main.c      ****             cnt++;
 1825              		.loc 1 476 0
 1826 0018 FB68     		ldr	r3, [r7, #12]
 1827 001a 0133     		adds	r3, r3, #1
 1828 001c FB60     		str	r3, [r7, #12]
 477:.\main.c      ****             if(cnt == 3000000){
 1829              		.loc 1 477 0
 1830 001e FB68     		ldr	r3, [r7, #12]
 1831 0020 0A4A     		ldr	r2, .L101+4
 1832 0022 9342     		cmp	r3, r2
 1833 0024 03D1     		bne	.L99
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 42


 478:.\main.c      ****                 portOpen = 0;
 1834              		.loc 1 478 0
 1835 0026 084B     		ldr	r3, .L101
 1836 0028 0022     		movs	r2, #0
 1837 002a 1A70     		strb	r2, [r3]
 479:.\main.c      ****                 return;
 1838              		.loc 1 479 0
 1839 002c 08E0     		b	.L97
 1840              	.L99:
 475:.\main.c      ****             cnt++;
 1841              		.loc 1 475 0
 1842 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 1843 0032 0346     		mov	r3, r0
 1844 0034 002B     		cmp	r3, #0
 1845 0036 EFD0     		beq	.L100
 480:.\main.c      ****             }
 481:.\main.c      ****         }
 482:.\main.c      ****         USBUART_PutChar(c);
 1846              		.loc 1 482 0
 1847 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1848 003a 1846     		mov	r0, r3
 1849 003c FFF7FEFF 		bl	USBUART_PutChar
 1850              	.L97:
 1851              	.LBE6:
 483:.\main.c      ****     }    
 484:.\main.c      **** }
 1852              		.loc 1 484 0
 1853 0040 1037     		adds	r7, r7, #16
 1854              		.cfi_def_cfa_offset 8
 1855 0042 BD46     		mov	sp, r7
 1856              		.cfi_def_cfa_register 13
 1857              		@ sp needed
 1858 0044 80BD     		pop	{r7, pc}
 1859              	.L102:
 1860 0046 00BF     		.align	2
 1861              	.L101:
 1862 0048 00000000 		.word	portOpen
 1863 004c C0C62D00 		.word	3000000
 1864              		.cfi_endproc
 1865              	.LFE81:
 1866              		.size	usbPutChar, .-usbPutChar
 1867              		.section	.text.uart_set_PWM,"ax",%progbits
 1868              		.align	2
 1869              		.global	uart_set_PWM
 1870              		.thumb
 1871              		.thumb_func
 1872              		.type	uart_set_PWM, %function
 1873              	uart_set_PWM:
 1874              	.LFB82:
 485:.\main.c      **** //* ========================================
 486:.\main.c      **** 
 487:.\main.c      **** void uart_set_PWM()
 488:.\main.c      **** {
 1875              		.loc 1 488 0
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 8
 1878              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 43


 1879 0000 80B5     		push	{r7, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 7, -8
 1882              		.cfi_offset 14, -4
 1883 0002 82B0     		sub	sp, sp, #8
 1884              		.cfi_def_cfa_offset 16
 1885 0004 00AF     		add	r7, sp, #0
 1886              		.cfi_def_cfa_register 7
 489:.\main.c      ****     uint8 c;
 490:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 1887              		.loc 1 490 0
 1888 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 1889 000a 0346     		mov	r3, r0
 1890 000c 002B     		cmp	r3, #0
 1891 000e 11D0     		beq	.L103
 491:.\main.c      ****        {  
 492:.\main.c      ****             c = USBUART_GetChar();
 1892              		.loc 1 492 0
 1893 0010 FFF7FEFF 		bl	USBUART_GetChar
 1894 0014 0346     		mov	r3, r0
 1895 0016 FB71     		strb	r3, [r7, #7]
 493:.\main.c      ****             
 494:.\main.c      ****             if(c <= 100 && c > 0){
 1896              		.loc 1 494 0
 1897 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1898 001a 642B     		cmp	r3, #100
 1899 001c 0AD8     		bhi	.L103
 1900              		.loc 1 494 0 is_stmt 0 discriminator 1
 1901 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1902 0020 002B     		cmp	r3, #0
 1903 0022 07D0     		beq	.L103
 495:.\main.c      ****                 PWM_1_WriteCompare(c);
 1904              		.loc 1 495 0 is_stmt 1
 1905 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1906 0026 1846     		mov	r0, r3
 1907 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 496:.\main.c      ****                 usbPutString(c);
 1908              		.loc 1 496 0
 1909 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1910 002e 1846     		mov	r0, r3
 1911 0030 FFF7FEFF 		bl	usbPutString
 1912              	.L103:
 497:.\main.c      ****             }
 498:.\main.c      ****        }
 499:.\main.c      **** }
 1913              		.loc 1 499 0
 1914 0034 0837     		adds	r7, r7, #8
 1915              		.cfi_def_cfa_offset 8
 1916 0036 BD46     		mov	sp, r7
 1917              		.cfi_def_cfa_register 13
 1918              		@ sp needed
 1919 0038 80BD     		pop	{r7, pc}
 1920              		.cfi_endproc
 1921              	.LFE82:
 1922              		.size	uart_set_PWM, .-uart_set_PWM
 1923 003a 00BF     		.text
 1924              	.Letext0:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 44


 1925              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1926              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1927              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1928              		.file 5 ".\\vars.h"
 1929              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1930              		.section	.debug_info,"",%progbits
 1931              	.Ldebug_info0:
 1932 0000 0E080000 		.4byte	0x80e
 1933 0004 0400     		.2byte	0x4
 1934 0006 00000000 		.4byte	.Ldebug_abbrev0
 1935 000a 04       		.byte	0x4
 1936 000b 01       		.uleb128 0x1
 1937 000c AC020000 		.4byte	.LASF121
 1938 0010 01       		.byte	0x1
 1939 0011 19060000 		.4byte	.LASF122
 1940 0015 C7050000 		.4byte	.LASF123
 1941 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1942 001d 00000000 		.4byte	0
 1943 0021 00000000 		.4byte	.Ldebug_line0
 1944 0025 02       		.uleb128 0x2
 1945 0026 01       		.byte	0x1
 1946 0027 06       		.byte	0x6
 1947 0028 58050000 		.4byte	.LASF0
 1948 002c 02       		.uleb128 0x2
 1949 002d 01       		.byte	0x1
 1950 002e 08       		.byte	0x8
 1951 002f D6040000 		.4byte	.LASF1
 1952 0033 02       		.uleb128 0x2
 1953 0034 02       		.byte	0x2
 1954 0035 05       		.byte	0x5
 1955 0036 F8030000 		.4byte	.LASF2
 1956 003a 02       		.uleb128 0x2
 1957 003b 02       		.byte	0x2
 1958 003c 07       		.byte	0x7
 1959 003d 64050000 		.4byte	.LASF3
 1960 0041 03       		.uleb128 0x3
 1961 0042 6E000000 		.4byte	.LASF11
 1962 0046 02       		.byte	0x2
 1963 0047 3F       		.byte	0x3f
 1964 0048 4C000000 		.4byte	0x4c
 1965 004c 02       		.uleb128 0x2
 1966 004d 04       		.byte	0x4
 1967 004e 05       		.byte	0x5
 1968 004f 22040000 		.4byte	.LASF4
 1969 0053 02       		.uleb128 0x2
 1970 0054 04       		.byte	0x4
 1971 0055 07       		.byte	0x7
 1972 0056 8D040000 		.4byte	.LASF5
 1973 005a 02       		.uleb128 0x2
 1974 005b 08       		.byte	0x8
 1975 005c 05       		.byte	0x5
 1976 005d 89020000 		.4byte	.LASF6
 1977 0061 02       		.uleb128 0x2
 1978 0062 08       		.byte	0x8
 1979 0063 07       		.byte	0x7
 1980 0064 7F010000 		.4byte	.LASF7
 1981 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 45


 1982 0069 04       		.byte	0x4
 1983 006a 05       		.byte	0x5
 1984 006b 696E7400 		.ascii	"int\000"
 1985 006f 02       		.uleb128 0x2
 1986 0070 04       		.byte	0x4
 1987 0071 07       		.byte	0x7
 1988 0072 61000000 		.4byte	.LASF8
 1989 0076 02       		.uleb128 0x2
 1990 0077 04       		.byte	0x4
 1991 0078 07       		.byte	0x7
 1992 0079 84040000 		.4byte	.LASF9
 1993 007d 05       		.uleb128 0x5
 1994 007e 04       		.byte	0x4
 1995 007f 83000000 		.4byte	0x83
 1996 0083 02       		.uleb128 0x2
 1997 0084 01       		.byte	0x1
 1998 0085 08       		.byte	0x8
 1999 0086 42020000 		.4byte	.LASF10
 2000 008a 03       		.uleb128 0x3
 2001 008b AB040000 		.4byte	.LASF12
 2002 008f 03       		.byte	0x3
 2003 0090 2C       		.byte	0x2c
 2004 0091 41000000 		.4byte	0x41
 2005 0095 06       		.uleb128 0x6
 2006 0096 98050000 		.4byte	.LASF13
 2007 009a 04       		.byte	0x4
 2008 009b 9201     		.2byte	0x192
 2009 009d 2C000000 		.4byte	0x2c
 2010 00a1 06       		.uleb128 0x6
 2011 00a2 60020000 		.4byte	.LASF14
 2012 00a6 04       		.byte	0x4
 2013 00a7 9301     		.2byte	0x193
 2014 00a9 3A000000 		.4byte	0x3a
 2015 00ad 06       		.uleb128 0x6
 2016 00ae 67030000 		.4byte	.LASF15
 2017 00b2 04       		.byte	0x4
 2018 00b3 9401     		.2byte	0x194
 2019 00b5 53000000 		.4byte	0x53
 2020 00b9 06       		.uleb128 0x6
 2021 00ba 67020000 		.4byte	.LASF16
 2022 00be 04       		.byte	0x4
 2023 00bf 9501     		.2byte	0x195
 2024 00c1 25000000 		.4byte	0x25
 2025 00c5 06       		.uleb128 0x6
 2026 00c6 78000000 		.4byte	.LASF17
 2027 00ca 04       		.byte	0x4
 2028 00cb 9601     		.2byte	0x196
 2029 00cd 33000000 		.4byte	0x33
 2030 00d1 02       		.uleb128 0x2
 2031 00d2 04       		.byte	0x4
 2032 00d3 04       		.byte	0x4
 2033 00d4 35010000 		.4byte	.LASF18
 2034 00d8 02       		.uleb128 0x2
 2035 00d9 08       		.byte	0x8
 2036 00da 04       		.byte	0x4
 2037 00db 9E050000 		.4byte	.LASF19
 2038 00df 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 46


 2039 00e0 08       		.byte	0x8
 2040 00e1 04       		.byte	0x4
 2041 00e2 B1030000 		.4byte	.LASF20
 2042 00e6 07       		.uleb128 0x7
 2043 00e7 17050000 		.4byte	.LASF124
 2044 00eb 01       		.byte	0x1
 2045 00ec 05       		.byte	0x5
 2046 00ed 48       		.byte	0x48
 2047 00ee 0B010000 		.4byte	0x10b
 2048 00f2 08       		.uleb128 0x8
 2049 00f3 54010000 		.4byte	.LASF21
 2050 00f7 00       		.sleb128 0
 2051 00f8 08       		.uleb128 0x8
 2052 00f9 8B000000 		.4byte	.LASF22
 2053 00fd 01       		.sleb128 1
 2054 00fe 08       		.uleb128 0x8
 2055 00ff 0A000000 		.4byte	.LASF23
 2056 0103 02       		.sleb128 2
 2057 0104 08       		.uleb128 0x8
 2058 0105 A9030000 		.4byte	.LASF24
 2059 0109 03       		.sleb128 3
 2060 010a 00       		.byte	0
 2061 010b 09       		.uleb128 0x9
 2062 010c 6E030000 		.4byte	.LASF125
 2063 0110 20       		.byte	0x20
 2064 0111 05       		.byte	0x5
 2065 0112 4F       		.byte	0x4f
 2066 0113 E4010000 		.4byte	0x1e4
 2067 0117 0A       		.uleb128 0xa
 2068 0118 86030000 		.4byte	.LASF25
 2069 011c 05       		.byte	0x5
 2070 011d 50       		.byte	0x50
 2071 011e B9000000 		.4byte	0xb9
 2072 0122 00       		.byte	0
 2073 0123 0A       		.uleb128 0xa
 2074 0124 4E010000 		.4byte	.LASF26
 2075 0128 05       		.byte	0x5
 2076 0129 51       		.byte	0x51
 2077 012a 95000000 		.4byte	0x95
 2078 012e 01       		.byte	0x1
 2079 012f 0A       		.uleb128 0xa
 2080 0130 BA040000 		.4byte	.LASF27
 2081 0134 05       		.byte	0x5
 2082 0135 52       		.byte	0x52
 2083 0136 C5000000 		.4byte	0xc5
 2084 013a 02       		.byte	0x2
 2085 013b 0A       		.uleb128 0xa
 2086 013c 16020000 		.4byte	.LASF28
 2087 0140 05       		.byte	0x5
 2088 0141 53       		.byte	0x53
 2089 0142 C5000000 		.4byte	0xc5
 2090 0146 04       		.byte	0x4
 2091 0147 0A       		.uleb128 0xa
 2092 0148 77050000 		.4byte	.LASF29
 2093 014c 05       		.byte	0x5
 2094 014d 54       		.byte	0x54
 2095 014e C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 47


 2096 0152 06       		.byte	0x6
 2097 0153 0A       		.uleb128 0xa
 2098 0154 F9050000 		.4byte	.LASF30
 2099 0158 05       		.byte	0x5
 2100 0159 55       		.byte	0x55
 2101 015a C5000000 		.4byte	0xc5
 2102 015e 08       		.byte	0x8
 2103 015f 0A       		.uleb128 0xa
 2104 0160 43030000 		.4byte	.LASF31
 2105 0164 05       		.byte	0x5
 2106 0165 56       		.byte	0x56
 2107 0166 C5000000 		.4byte	0xc5
 2108 016a 0A       		.byte	0xa
 2109 016b 0A       		.uleb128 0xa
 2110 016c 47020000 		.4byte	.LASF32
 2111 0170 05       		.byte	0x5
 2112 0171 57       		.byte	0x57
 2113 0172 C5000000 		.4byte	0xc5
 2114 0176 0C       		.byte	0xc
 2115 0177 0A       		.uleb128 0xa
 2116 0178 8B030000 		.4byte	.LASF33
 2117 017c 05       		.byte	0x5
 2118 017d 58       		.byte	0x58
 2119 017e C5000000 		.4byte	0xc5
 2120 0182 0E       		.byte	0xe
 2121 0183 0A       		.uleb128 0xa
 2122 0184 A4020000 		.4byte	.LASF34
 2123 0188 05       		.byte	0x5
 2124 0189 59       		.byte	0x59
 2125 018a C5000000 		.4byte	0xc5
 2126 018e 10       		.byte	0x10
 2127 018f 0A       		.uleb128 0xa
 2128 0190 74040000 		.4byte	.LASF35
 2129 0194 05       		.byte	0x5
 2130 0195 5A       		.byte	0x5a
 2131 0196 C5000000 		.4byte	0xc5
 2132 019a 12       		.byte	0x12
 2133 019b 0A       		.uleb128 0xa
 2134 019c 10060000 		.4byte	.LASF36
 2135 01a0 05       		.byte	0x5
 2136 01a1 5B       		.byte	0x5b
 2137 01a2 C5000000 		.4byte	0xc5
 2138 01a6 14       		.byte	0x14
 2139 01a7 0A       		.uleb128 0xa
 2140 01a8 6C020000 		.4byte	.LASF37
 2141 01ac 05       		.byte	0x5
 2142 01ad 5C       		.byte	0x5c
 2143 01ae C5000000 		.4byte	0xc5
 2144 01b2 16       		.byte	0x16
 2145 01b3 0A       		.uleb128 0xa
 2146 01b4 B8000000 		.4byte	.LASF38
 2147 01b8 05       		.byte	0x5
 2148 01b9 5D       		.byte	0x5d
 2149 01ba C5000000 		.4byte	0xc5
 2150 01be 18       		.byte	0x18
 2151 01bf 0A       		.uleb128 0xa
 2152 01c0 5D040000 		.4byte	.LASF39
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 48


 2153 01c4 05       		.byte	0x5
 2154 01c5 5E       		.byte	0x5e
 2155 01c6 C5000000 		.4byte	0xc5
 2156 01ca 1A       		.byte	0x1a
 2157 01cb 0A       		.uleb128 0xa
 2158 01cc 3A030000 		.4byte	.LASF40
 2159 01d0 05       		.byte	0x5
 2160 01d1 5F       		.byte	0x5f
 2161 01d2 C5000000 		.4byte	0xc5
 2162 01d6 1C       		.byte	0x1c
 2163 01d7 0A       		.uleb128 0xa
 2164 01d8 1E010000 		.4byte	.LASF41
 2165 01dc 05       		.byte	0x5
 2166 01dd 60       		.byte	0x60
 2167 01de C5000000 		.4byte	0xc5
 2168 01e2 1E       		.byte	0x1e
 2169 01e3 00       		.byte	0
 2170 01e4 0B       		.uleb128 0xb
 2171 01e5 B6050000 		.4byte	.LASF60
 2172 01e9 01       		.byte	0x1
 2173 01ea 28       		.byte	0x28
 2174 01eb 00000000 		.4byte	.LFB63
 2175 01ef 60010000 		.4byte	.LFE63-.LFB63
 2176 01f3 01       		.uleb128 0x1
 2177 01f4 9C       		.byte	0x9c
 2178 01f5 2E020000 		.4byte	0x22e
 2179 01f9 0C       		.uleb128 0xc
 2180 01fa 10000000 		.4byte	.LBB2
 2181 01fe 34010000 		.4byte	.LBE2-.LBB2
 2182 0202 0D       		.uleb128 0xd
 2183 0203 AB000000 		.4byte	.LASF42
 2184 0207 01       		.byte	0x1
 2185 0208 2E       		.byte	0x2e
 2186 0209 A1000000 		.4byte	0xa1
 2187 020d 02       		.uleb128 0x2
 2188 020e 91       		.byte	0x91
 2189 020f 76       		.sleb128 -10
 2190 0210 0D       		.uleb128 0xd
 2191 0211 9F040000 		.4byte	.LASF43
 2192 0215 01       		.byte	0x1
 2193 0216 30       		.byte	0x30
 2194 0217 2E020000 		.4byte	0x22e
 2195 021b 02       		.uleb128 0x2
 2196 021c 91       		.byte	0x91
 2197 021d 68       		.sleb128 -24
 2198 021e 0D       		.uleb128 0xd
 2199 021f 5A010000 		.4byte	.LASF44
 2200 0223 01       		.byte	0x1
 2201 0224 31       		.byte	0x31
 2202 0225 2E020000 		.4byte	0x22e
 2203 0229 02       		.uleb128 0x2
 2204 022a 91       		.byte	0x91
 2205 022b 5C       		.sleb128 -36
 2206 022c 00       		.byte	0
 2207 022d 00       		.byte	0
 2208 022e 0E       		.uleb128 0xe
 2209 022f 83000000 		.4byte	0x83
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 49


 2210 0233 3E020000 		.4byte	0x23e
 2211 0237 0F       		.uleb128 0xf
 2212 0238 76000000 		.4byte	0x76
 2213 023c 0B       		.byte	0xb
 2214 023d 00       		.byte	0
 2215 023e 10       		.uleb128 0x10
 2216 023f 3B010000 		.4byte	.LASF51
 2217 0243 01       		.byte	0x1
 2218 0244 A2       		.byte	0xa2
 2219 0245 00000000 		.4byte	.LFB64
 2220 0249 2C000000 		.4byte	.LFE64-.LFB64
 2221 024d 01       		.uleb128 0x1
 2222 024e 9C       		.byte	0x9c
 2223 024f 70020000 		.4byte	0x270
 2224 0253 11       		.uleb128 0x11
 2225 0254 83020000 		.4byte	.LASF45
 2226 0258 01       		.byte	0x1
 2227 0259 A2       		.byte	0xa2
 2228 025a 68000000 		.4byte	0x68
 2229 025e 02       		.uleb128 0x2
 2230 025f 91       		.byte	0x91
 2231 0260 74       		.sleb128 -12
 2232 0261 11       		.uleb128 0x11
 2233 0262 65040000 		.4byte	.LASF46
 2234 0266 01       		.byte	0x1
 2235 0267 A2       		.byte	0xa2
 2236 0268 68000000 		.4byte	0x68
 2237 026c 02       		.uleb128 0x2
 2238 026d 91       		.byte	0x91
 2239 026e 70       		.sleb128 -16
 2240 026f 00       		.byte	0
 2241 0270 12       		.uleb128 0x12
 2242 0271 C5040000 		.4byte	.LASF47
 2243 0275 01       		.byte	0x1
 2244 0276 A7       		.byte	0xa7
 2245 0277 00000000 		.4byte	.LFB65
 2246 027b 30000000 		.4byte	.LFE65-.LFB65
 2247 027f 01       		.uleb128 0x1
 2248 0280 9C       		.byte	0x9c
 2249 0281 12       		.uleb128 0x12
 2250 0282 68010000 		.4byte	.LASF48
 2251 0286 01       		.byte	0x1
 2252 0287 AF       		.byte	0xaf
 2253 0288 00000000 		.4byte	.LFB66
 2254 028c 0E000000 		.4byte	.LFE66-.LFB66
 2255 0290 01       		.uleb128 0x1
 2256 0291 9C       		.byte	0x9c
 2257 0292 12       		.uleb128 0x12
 2258 0293 76010000 		.4byte	.LASF49
 2259 0297 01       		.byte	0x1
 2260 0298 B4       		.byte	0xb4
 2261 0299 00000000 		.4byte	.LFB67
 2262 029d 0E000000 		.4byte	.LFE67-.LFB67
 2263 02a1 01       		.uleb128 0x1
 2264 02a2 9C       		.byte	0x9c
 2265 02a3 12       		.uleb128 0x12
 2266 02a4 6A040000 		.4byte	.LASF50
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 50


 2267 02a8 01       		.byte	0x1
 2268 02a9 B9       		.byte	0xb9
 2269 02aa 00000000 		.4byte	.LFB68
 2270 02ae 0E000000 		.4byte	.LFE68-.LFB68
 2271 02b2 01       		.uleb128 0x1
 2272 02b3 9C       		.byte	0x9c
 2273 02b4 13       		.uleb128 0x13
 2274 02b5 BD030000 		.4byte	.LASF52
 2275 02b9 01       		.byte	0x1
 2276 02ba C0       		.byte	0xc0
 2277 02bb 00000000 		.4byte	.LFB69
 2278 02bf 98000000 		.4byte	.LFE69-.LFB69
 2279 02c3 01       		.uleb128 0x1
 2280 02c4 9C       		.byte	0x9c
 2281 02c5 D8020000 		.4byte	0x2d8
 2282 02c9 0D       		.uleb128 0xd
 2283 02ca 4B030000 		.4byte	.LASF53
 2284 02ce 01       		.byte	0x1
 2285 02cf C1       		.byte	0xc1
 2286 02d0 83000000 		.4byte	0x83
 2287 02d4 02       		.uleb128 0x2
 2288 02d5 91       		.byte	0x91
 2289 02d6 6F       		.sleb128 -17
 2290 02d7 00       		.byte	0
 2291 02d8 14       		.uleb128 0x14
 2292 02d9 7C040000 		.4byte	.LASF54
 2293 02dd 01       		.byte	0x1
 2294 02de D9       		.byte	0xd9
 2295 02df 00000000 		.4byte	.LFB70
 2296 02e3 2C000000 		.4byte	.LFE70-.LFB70
 2297 02e7 01       		.uleb128 0x1
 2298 02e8 9C       		.byte	0x9c
 2299 02e9 14       		.uleb128 0x14
 2300 02ea 2B010000 		.4byte	.LASF55
 2301 02ee 01       		.byte	0x1
 2302 02ef E2       		.byte	0xe2
 2303 02f0 00000000 		.4byte	.LFB71
 2304 02f4 B8000000 		.4byte	.LFE71-.LFB71
 2305 02f8 01       		.uleb128 0x1
 2306 02f9 9C       		.byte	0x9c
 2307 02fa 14       		.uleb128 0x14
 2308 02fb A2010000 		.4byte	.LASF56
 2309 02ff 01       		.byte	0x1
 2310 0300 F7       		.byte	0xf7
 2311 0301 00000000 		.4byte	.LFB72
 2312 0305 5C000000 		.4byte	.LFE72-.LFB72
 2313 0309 01       		.uleb128 0x1
 2314 030a 9C       		.byte	0x9c
 2315 030b 15       		.uleb128 0x15
 2316 030c E9040000 		.4byte	.LASF57
 2317 0310 01       		.byte	0x1
 2318 0311 0C01     		.2byte	0x10c
 2319 0313 00000000 		.4byte	.LFB73
 2320 0317 34000000 		.4byte	.LFE73-.LFB73
 2321 031b 01       		.uleb128 0x1
 2322 031c 9C       		.byte	0x9c
 2323 031d 16       		.uleb128 0x16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 51


 2324 031e F7010000 		.4byte	.LASF58
 2325 0322 01       		.byte	0x1
 2326 0323 1601     		.2byte	0x116
 2327 0325 00000000 		.4byte	.LFB74
 2328 0329 18000000 		.4byte	.LFE74-.LFB74
 2329 032d 01       		.uleb128 0x1
 2330 032e 9C       		.byte	0x9c
 2331 032f 15       		.uleb128 0x15
 2332 0330 91000000 		.4byte	.LASF59
 2333 0334 01       		.byte	0x1
 2334 0335 1B01     		.2byte	0x11b
 2335 0337 00000000 		.4byte	.LFB75
 2336 033b 0A000000 		.4byte	.LFE75-.LFB75
 2337 033f 01       		.uleb128 0x1
 2338 0340 9C       		.byte	0x9c
 2339 0341 17       		.uleb128 0x17
 2340 0342 32000000 		.4byte	.LASF61
 2341 0346 01       		.byte	0x1
 2342 0347 2001     		.2byte	0x120
 2343 0349 00000000 		.4byte	.LFB76
 2344 034d D8010000 		.4byte	.LFE76-.LFB76
 2345 0351 01       		.uleb128 0x1
 2346 0352 9C       		.byte	0x9c
 2347 0353 B4030000 		.4byte	0x3b4
 2348 0357 18       		.uleb128 0x18
 2349 0358 36020000 		.4byte	.LASF62
 2350 035c 01       		.byte	0x1
 2351 035d 2601     		.2byte	0x126
 2352 035f B4030000 		.4byte	0x3b4
 2353 0363 03       		.uleb128 0x3
 2354 0364 91       		.byte	0x91
 2355 0365 A47F     		.sleb128 -92
 2356 0367 18       		.uleb128 0x18
 2357 0368 26000000 		.4byte	.LASF63
 2358 036c 01       		.byte	0x1
 2359 036d 2701     		.2byte	0x127
 2360 036f B4030000 		.4byte	0x3b4
 2361 0373 03       		.uleb128 0x3
 2362 0374 91       		.byte	0x91
 2363 0375 E47E     		.sleb128 -156
 2364 0377 18       		.uleb128 0x18
 2365 0378 D7010000 		.4byte	.LASF64
 2366 037c 01       		.byte	0x1
 2367 037d 2E01     		.2byte	0x12e
 2368 037f C5000000 		.4byte	0xc5
 2369 0383 02       		.uleb128 0x2
 2370 0384 91       		.byte	0x91
 2371 0385 6E       		.sleb128 -18
 2372 0386 18       		.uleb128 0x18
 2373 0387 53030000 		.4byte	.LASF65
 2374 038b 01       		.byte	0x1
 2375 038c 2F01     		.2byte	0x12f
 2376 038e C5000000 		.4byte	0xc5
 2377 0392 02       		.uleb128 0x2
 2378 0393 91       		.byte	0x91
 2379 0394 6C       		.sleb128 -20
 2380 0395 18       		.uleb128 0x18
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 52


 2381 0396 79020000 		.4byte	.LASF66
 2382 039a 01       		.byte	0x1
 2383 039b 3101     		.2byte	0x131
 2384 039d 68000000 		.4byte	0x68
 2385 03a1 02       		.uleb128 0x2
 2386 03a2 91       		.byte	0x91
 2387 03a3 68       		.sleb128 -24
 2388 03a4 18       		.uleb128 0x18
 2389 03a5 8E050000 		.4byte	.LASF67
 2390 03a9 01       		.byte	0x1
 2391 03aa 3201     		.2byte	0x132
 2392 03ac 68000000 		.4byte	0x68
 2393 03b0 02       		.uleb128 0x2
 2394 03b1 91       		.byte	0x91
 2395 03b2 64       		.sleb128 -28
 2396 03b3 00       		.byte	0
 2397 03b4 0E       		.uleb128 0xe
 2398 03b5 83000000 		.4byte	0x83
 2399 03b9 C4030000 		.4byte	0x3c4
 2400 03bd 0F       		.uleb128 0xf
 2401 03be 76000000 		.4byte	0x76
 2402 03c2 3F       		.byte	0x3f
 2403 03c3 00       		.byte	0
 2404 03c4 17       		.uleb128 0x17
 2405 03c5 2C020000 		.4byte	.LASF68
 2406 03c9 01       		.byte	0x1
 2407 03ca 4001     		.2byte	0x140
 2408 03cc 00000000 		.4byte	.LFB77
 2409 03d0 C0000000 		.4byte	.LFE77-.LFB77
 2410 03d4 01       		.uleb128 0x1
 2411 03d5 9C       		.byte	0x9c
 2412 03d6 12040000 		.4byte	0x412
 2413 03da 0C       		.uleb128 0xc
 2414 03db 0E000000 		.4byte	.LBB3
 2415 03df 8E000000 		.4byte	.LBE3-.LBB3
 2416 03e3 18       		.uleb128 0x18
 2417 03e4 C9010000 		.4byte	.LASF69
 2418 03e8 01       		.byte	0x1
 2419 03e9 4901     		.2byte	0x149
 2420 03eb D1000000 		.4byte	0xd1
 2421 03ef 02       		.uleb128 0x2
 2422 03f0 91       		.byte	0x91
 2423 03f1 74       		.sleb128 -12
 2424 03f2 18       		.uleb128 0x18
 2425 03f3 78030000 		.4byte	.LASF70
 2426 03f7 01       		.byte	0x1
 2427 03f8 4A01     		.2byte	0x14a
 2428 03fa C5000000 		.4byte	0xc5
 2429 03fe 02       		.uleb128 0x2
 2430 03ff 91       		.byte	0x91
 2431 0400 72       		.sleb128 -14
 2432 0401 18       		.uleb128 0x18
 2433 0402 FE010000 		.4byte	.LASF71
 2434 0406 01       		.byte	0x1
 2435 0407 4F01     		.2byte	0x14f
 2436 0409 12040000 		.4byte	0x412
 2437 040d 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 53


 2438 040e 91       		.byte	0x91
 2439 040f 60       		.sleb128 -32
 2440 0410 00       		.byte	0
 2441 0411 00       		.byte	0
 2442 0412 0E       		.uleb128 0xe
 2443 0413 83000000 		.4byte	0x83
 2444 0417 22040000 		.4byte	0x422
 2445 041b 0F       		.uleb128 0xf
 2446 041c 76000000 		.4byte	0x76
 2447 0420 0F       		.byte	0xf
 2448 0421 00       		.byte	0
 2449 0422 17       		.uleb128 0x17
 2450 0423 F0050000 		.4byte	.LASF72
 2451 0427 01       		.byte	0x1
 2452 0428 5601     		.2byte	0x156
 2453 042a 00000000 		.4byte	.LFB78
 2454 042e B8000000 		.4byte	.LFE78-.LFB78
 2455 0432 01       		.uleb128 0x1
 2456 0433 9C       		.byte	0x9c
 2457 0434 52040000 		.4byte	0x452
 2458 0438 0C       		.uleb128 0xc
 2459 0439 0E000000 		.4byte	.LBB4
 2460 043d 86000000 		.4byte	.LBE4-.LBB4
 2461 0441 18       		.uleb128 0x18
 2462 0442 38040000 		.4byte	.LASF73
 2463 0446 01       		.byte	0x1
 2464 0447 5A01     		.2byte	0x15a
 2465 0449 12040000 		.4byte	0x412
 2466 044d 02       		.uleb128 0x2
 2467 044e 91       		.byte	0x91
 2468 044f 68       		.sleb128 -24
 2469 0450 00       		.byte	0
 2470 0451 00       		.byte	0
 2471 0452 19       		.uleb128 0x19
 2472 0453 89050000 		.4byte	.LASF74
 2473 0457 01       		.byte	0x1
 2474 0458 6B01     		.2byte	0x16b
 2475 045a 68000000 		.4byte	0x68
 2476 045e 00000000 		.4byte	.LFB79
 2477 0462 B8000000 		.4byte	.LFE79-.LFB79
 2478 0466 01       		.uleb128 0x1
 2479 0467 9C       		.byte	0x9c
 2480 0468 1A       		.uleb128 0x1a
 2481 0469 11010000 		.4byte	.LASF75
 2482 046d 01       		.byte	0x1
 2483 046e C001     		.2byte	0x1c0
 2484 0470 00000000 		.4byte	.LFB80
 2485 0474 68000000 		.4byte	.LFE80-.LFB80
 2486 0478 01       		.uleb128 0x1
 2487 0479 9C       		.byte	0x9c
 2488 047a A5040000 		.4byte	0x4a5
 2489 047e 1B       		.uleb128 0x1b
 2490 047f 7300     		.ascii	"s\000"
 2491 0481 01       		.byte	0x1
 2492 0482 C001     		.2byte	0x1c0
 2493 0484 7D000000 		.4byte	0x7d
 2494 0488 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 54


 2495 0489 91       		.byte	0x91
 2496 048a 6C       		.sleb128 -20
 2497 048b 0C       		.uleb128 0xc
 2498 048c 10000000 		.4byte	.LBB5
 2499 0490 48000000 		.4byte	.LBE5-.LBB5
 2500 0494 1C       		.uleb128 0x1c
 2501 0495 636E7400 		.ascii	"cnt\000"
 2502 0499 01       		.byte	0x1
 2503 049a C701     		.2byte	0x1c7
 2504 049c AD000000 		.4byte	0xad
 2505 04a0 02       		.uleb128 0x2
 2506 04a1 91       		.byte	0x91
 2507 04a2 74       		.sleb128 -12
 2508 04a3 00       		.byte	0
 2509 04a4 00       		.byte	0
 2510 04a5 1A       		.uleb128 0x1a
 2511 04a6 4D050000 		.4byte	.LASF76
 2512 04aa 01       		.byte	0x1
 2513 04ab D601     		.2byte	0x1d6
 2514 04ad 00000000 		.4byte	.LFB81
 2515 04b1 50000000 		.4byte	.LFE81-.LFB81
 2516 04b5 01       		.uleb128 0x1
 2517 04b6 9C       		.byte	0x9c
 2518 04b7 E2040000 		.4byte	0x4e2
 2519 04bb 1B       		.uleb128 0x1b
 2520 04bc 6300     		.ascii	"c\000"
 2521 04be 01       		.byte	0x1
 2522 04bf D601     		.2byte	0x1d6
 2523 04c1 83000000 		.4byte	0x83
 2524 04c5 02       		.uleb128 0x2
 2525 04c6 91       		.byte	0x91
 2526 04c7 6F       		.sleb128 -17
 2527 04c8 0C       		.uleb128 0xc
 2528 04c9 12000000 		.4byte	.LBB6
 2529 04cd 2E000000 		.4byte	.LBE6-.LBB6
 2530 04d1 1C       		.uleb128 0x1c
 2531 04d2 636E7400 		.ascii	"cnt\000"
 2532 04d6 01       		.byte	0x1
 2533 04d7 DA01     		.2byte	0x1da
 2534 04d9 AD000000 		.4byte	0xad
 2535 04dd 02       		.uleb128 0x2
 2536 04de 91       		.byte	0x91
 2537 04df 74       		.sleb128 -12
 2538 04e0 00       		.byte	0
 2539 04e1 00       		.byte	0
 2540 04e2 17       		.uleb128 0x17
 2541 04e3 09020000 		.4byte	.LASF77
 2542 04e7 01       		.byte	0x1
 2543 04e8 E701     		.2byte	0x1e7
 2544 04ea 00000000 		.4byte	.LFB82
 2545 04ee 3A000000 		.4byte	.LFE82-.LFB82
 2546 04f2 01       		.uleb128 0x1
 2547 04f3 9C       		.byte	0x9c
 2548 04f4 06050000 		.4byte	0x506
 2549 04f8 1C       		.uleb128 0x1c
 2550 04f9 6300     		.ascii	"c\000"
 2551 04fb 01       		.byte	0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 55


 2552 04fc E901     		.2byte	0x1e9
 2553 04fe 95000000 		.4byte	0x95
 2554 0502 02       		.uleb128 0x2
 2555 0503 91       		.byte	0x91
 2556 0504 77       		.sleb128 -9
 2557 0505 00       		.byte	0
 2558 0506 1D       		.uleb128 0x1d
 2559 0507 2B040000 		.4byte	.LASF78
 2560 050b 06       		.byte	0x6
 2561 050c 9606     		.2byte	0x696
 2562 050e 12050000 		.4byte	0x512
 2563 0512 1E       		.uleb128 0x1e
 2564 0513 8A000000 		.4byte	0x8a
 2565 0517 1F       		.uleb128 0x1f
 2566 0518 747300   		.ascii	"ts\000"
 2567 051b 05       		.byte	0x5
 2568 051c 10       		.byte	0x10
 2569 051d 95000000 		.4byte	0x95
 2570 0521 05       		.uleb128 0x5
 2571 0522 03       		.byte	0x3
 2572 0523 00000000 		.4byte	ts
 2573 0527 20       		.uleb128 0x20
 2574 0528 F6040000 		.4byte	.LASF79
 2575 052c 05       		.byte	0x5
 2576 052d 11       		.byte	0x11
 2577 052e A1000000 		.4byte	0xa1
 2578 0532 05       		.uleb128 0x5
 2579 0533 03       		.byte	0x3
 2580 0534 00000000 		.4byte	ts_enc
 2581 0538 20       		.uleb128 0x20
 2582 0539 44040000 		.4byte	.LASF80
 2583 053d 05       		.byte	0x5
 2584 053e 12       		.byte	0x12
 2585 053f A1000000 		.4byte	0xa1
 2586 0543 05       		.uleb128 0x5
 2587 0544 03       		.byte	0x3
 2588 0545 00000000 		.4byte	ts_update
 2589 0549 20       		.uleb128 0x20
 2590 054a 5E030000 		.4byte	.LASF81
 2591 054e 05       		.byte	0x5
 2592 054f 13       		.byte	0x13
 2593 0550 A1000000 		.4byte	0xa1
 2594 0554 05       		.uleb128 0x5
 2595 0555 03       		.byte	0x3
 2596 0556 00000000 		.4byte	ts_speed
 2597 055a 20       		.uleb128 0x20
 2598 055b 21020000 		.4byte	.LASF82
 2599 055f 05       		.byte	0x5
 2600 0560 14       		.byte	0x14
 2601 0561 A1000000 		.4byte	0xa1
 2602 0565 05       		.uleb128 0x5
 2603 0566 03       		.byte	0x3
 2604 0567 00000000 		.4byte	ts_display
 2605 056b 20       		.uleb128 0x20
 2606 056c E1010000 		.4byte	.LASF83
 2607 0570 05       		.byte	0x5
 2608 0571 16       		.byte	0x16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 56


 2609 0572 95000000 		.4byte	0x95
 2610 0576 05       		.uleb128 0x5
 2611 0577 03       		.byte	0x3
 2612 0578 00000000 		.4byte	flag_ts_enc
 2613 057c 20       		.uleb128 0x20
 2614 057d BA010000 		.4byte	.LASF84
 2615 0581 05       		.byte	0x5
 2616 0582 17       		.byte	0x17
 2617 0583 95000000 		.4byte	0x95
 2618 0587 05       		.uleb128 0x5
 2619 0588 03       		.byte	0x3
 2620 0589 00000000 		.4byte	flag_ts_update
 2621 058d 20       		.uleb128 0x20
 2622 058e D3030000 		.4byte	.LASF85
 2623 0592 05       		.byte	0x5
 2624 0593 18       		.byte	0x18
 2625 0594 95000000 		.4byte	0x95
 2626 0598 05       		.uleb128 0x5
 2627 0599 03       		.byte	0x3
 2628 059a 00000000 		.4byte	flag_ts_speed
 2629 059e 20       		.uleb128 0x20
 2630 059f 07050000 		.4byte	.LASF86
 2631 05a3 05       		.byte	0x5
 2632 05a4 19       		.byte	0x19
 2633 05a5 95000000 		.4byte	0x95
 2634 05a9 05       		.uleb128 0x5
 2635 05aa 03       		.byte	0x3
 2636 05ab 00000000 		.4byte	flag_ts_display
 2637 05af 20       		.uleb128 0x20
 2638 05b0 F0030000 		.4byte	.LASF87
 2639 05b4 05       		.byte	0x5
 2640 05b5 1C       		.byte	0x1c
 2641 05b6 95000000 		.4byte	0x95
 2642 05ba 05       		.uleb128 0x5
 2643 05bb 03       		.byte	0x3
 2644 05bc 00000000 		.4byte	flag_rx
 2645 05c0 20       		.uleb128 0x20
 2646 05c1 96010000 		.4byte	.LASF88
 2647 05c5 05       		.byte	0x5
 2648 05c6 1D       		.byte	0x1d
 2649 05c7 95000000 		.4byte	0x95
 2650 05cb 05       		.uleb128 0x5
 2651 05cc 03       		.byte	0x3
 2652 05cd 00000000 		.4byte	flag_packet
 2653 05d1 20       		.uleb128 0x20
 2654 05d2 01060000 		.4byte	.LASF89
 2655 05d6 05       		.byte	0x5
 2656 05d7 1E       		.byte	0x1e
 2657 05d8 95000000 		.4byte	0x95
 2658 05dc 05       		.uleb128 0x5
 2659 05dd 03       		.byte	0x3
 2660 05de 00000000 		.4byte	flag_KB_string
 2661 05e2 20       		.uleb128 0x20
 2662 05e3 E1030000 		.4byte	.LASF90
 2663 05e7 05       		.byte	0x5
 2664 05e8 20       		.byte	0x20
 2665 05e9 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 57


 2666 05ed 05       		.uleb128 0x5
 2667 05ee 03       		.byte	0x3
 2668 05ef 00000000 		.4byte	dataready_flag
 2669 05f3 20       		.uleb128 0x20
 2670 05f4 D8000000 		.4byte	.LASF91
 2671 05f8 05       		.byte	0x5
 2672 05f9 22       		.byte	0x22
 2673 05fa 95000000 		.4byte	0x95
 2674 05fe 05       		.uleb128 0x5
 2675 05ff 03       		.byte	0x3
 2676 0600 00000000 		.4byte	flag_rf_transmission_active
 2677 0604 20       		.uleb128 0x20
 2678 0605 F4000000 		.4byte	.LASF92
 2679 0609 05       		.byte	0x5
 2680 060a 23       		.byte	0x23
 2681 060b 95000000 		.4byte	0x95
 2682 060f 05       		.uleb128 0x5
 2683 0610 03       		.byte	0x3
 2684 0611 00000000 		.4byte	flag_print_rf
 2685 0615 20       		.uleb128 0x20
 2686 0616 98030000 		.4byte	.LASF93
 2687 061a 05       		.byte	0x5
 2688 061b 25       		.byte	0x25
 2689 061c 95000000 		.4byte	0x95
 2690 0620 05       		.uleb128 0x5
 2691 0621 03       		.byte	0x3
 2692 0622 00000000 		.4byte	flag_receive_ADC
 2693 0626 20       		.uleb128 0x20
 2694 0627 02040000 		.4byte	.LASF94
 2695 062b 05       		.byte	0x5
 2696 062c 26       		.byte	0x26
 2697 062d C5000000 		.4byte	0xc5
 2698 0631 05       		.uleb128 0x5
 2699 0632 03       		.byte	0x3
 2700 0633 00000000 		.4byte	adc_result
 2701 0637 20       		.uleb128 0x20
 2702 0638 00000000 		.4byte	.LASF95
 2703 063c 05       		.byte	0x5
 2704 063d 28       		.byte	0x28
 2705 063e 95000000 		.4byte	0x95
 2706 0642 05       		.uleb128 0x5
 2707 0643 03       		.byte	0x3
 2708 0644 00000000 		.4byte	direction
 2709 0648 20       		.uleb128 0x20
 2710 0649 0D040000 		.4byte	.LASF96
 2711 064d 05       		.byte	0x5
 2712 064e 2C       		.byte	0x2c
 2713 064f 95000000 		.4byte	0x95
 2714 0653 05       		.uleb128 0x5
 2715 0654 03       		.byte	0x3
 2716 0655 00000000 		.4byte	flag_calc_wheelspeed
 2717 0659 20       		.uleb128 0x20
 2718 065a C0000000 		.4byte	.LASF97
 2719 065e 05       		.byte	0x5
 2720 065f 2D       		.byte	0x2d
 2721 0660 C5000000 		.4byte	0xc5
 2722 0664 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 58


 2723 0665 03       		.byte	0x3
 2724 0666 00000000 		.4byte	quad_count1
 2725 066a 20       		.uleb128 0x20
 2726 066b CC000000 		.4byte	.LASF98
 2727 066f 05       		.byte	0x5
 2728 0670 2E       		.byte	0x2e
 2729 0671 C5000000 		.4byte	0xc5
 2730 0675 05       		.uleb128 0x5
 2731 0676 03       		.byte	0x3
 2732 0677 00000000 		.4byte	quad_count2
 2733 067b 20       		.uleb128 0x20
 2734 067c 2B050000 		.4byte	.LASF99
 2735 0680 05       		.byte	0x5
 2736 0681 2F       		.byte	0x2f
 2737 0682 C5000000 		.4byte	0xc5
 2738 0686 05       		.uleb128 0x5
 2739 0687 03       		.byte	0x3
 2740 0688 00000000 		.4byte	last_quad_count1
 2741 068c 20       		.uleb128 0x20
 2742 068d 3C050000 		.4byte	.LASF100
 2743 0691 05       		.byte	0x5
 2744 0692 30       		.byte	0x30
 2745 0693 C5000000 		.4byte	0xc5
 2746 0697 05       		.uleb128 0x5
 2747 0698 03       		.byte	0x3
 2748 0699 00000000 		.4byte	last_quad_count2
 2749 069d 20       		.uleb128 0x20
 2750 069e 10000000 		.4byte	.LASF101
 2751 06a2 05       		.byte	0x5
 2752 06a3 31       		.byte	0x31
 2753 06a4 C5000000 		.4byte	0xc5
 2754 06a8 05       		.uleb128 0x5
 2755 06a9 03       		.byte	0x3
 2756 06aa 00000000 		.4byte	quad_diff1
 2757 06ae 20       		.uleb128 0x20
 2758 06af 1B000000 		.4byte	.LASF102
 2759 06b3 05       		.byte	0x5
 2760 06b4 32       		.byte	0x32
 2761 06b5 C5000000 		.4byte	0xc5
 2762 06b9 05       		.uleb128 0x5
 2763 06ba 03       		.byte	0x3
 2764 06bb 00000000 		.4byte	quad_diff2
 2765 06bf 20       		.uleb128 0x20
 2766 06c0 50000000 		.4byte	.LASF103
 2767 06c4 05       		.byte	0x5
 2768 06c5 35       		.byte	0x35
 2769 06c6 C5000000 		.4byte	0xc5
 2770 06ca 05       		.uleb128 0x5
 2771 06cb 03       		.byte	0x3
 2772 06cc 00000000 		.4byte	start_turn_count
 2773 06d0 20       		.uleb128 0x20
 2774 06d1 C3030000 		.4byte	.LASF104
 2775 06d5 05       		.byte	0x5
 2776 06d6 38       		.byte	0x38
 2777 06d7 C5000000 		.4byte	0xc5
 2778 06db 05       		.uleb128 0x5
 2779 06dc 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 59


 2780 06dd 00000000 		.4byte	left_duty_cycle
 2781 06e1 20       		.uleb128 0x20
 2782 06e2 A5050000 		.4byte	.LASF105
 2783 06e6 05       		.byte	0x5
 2784 06e7 39       		.byte	0x39
 2785 06e8 C5000000 		.4byte	0xc5
 2786 06ec 05       		.uleb128 0x5
 2787 06ed 03       		.byte	0x3
 2788 06ee 00000000 		.4byte	right_duty_cycle
 2789 06f2 20       		.uleb128 0x20
 2790 06f3 4E040000 		.4byte	.LASF106
 2791 06f7 05       		.byte	0x5
 2792 06f8 3C       		.byte	0x3c
 2793 06f9 C5000000 		.4byte	0xc5
 2794 06fd 05       		.uleb128 0x5
 2795 06fe 03       		.byte	0x3
 2796 06ff 00000000 		.4byte	leftSpeedLimit
 2797 0703 20       		.uleb128 0x20
 2798 0704 50020000 		.4byte	.LASF107
 2799 0708 05       		.byte	0x5
 2800 0709 3D       		.byte	0x3d
 2801 070a C5000000 		.4byte	0xc5
 2802 070e 05       		.uleb128 0x5
 2803 070f 03       		.byte	0x3
 2804 0710 00000000 		.4byte	rightSpeedLimit
 2805 0714 20       		.uleb128 0x20
 2806 0715 FD040000 		.4byte	.LASF108
 2807 0719 05       		.byte	0x5
 2808 071a 40       		.byte	0x40
 2809 071b 95000000 		.4byte	0x95
 2810 071f 05       		.uleb128 0x5
 2811 0720 03       		.byte	0x3
 2812 0721 00000000 		.4byte	brakeFlag
 2813 0725 20       		.uleb128 0x20
 2814 0726 B1010000 		.4byte	.LASF109
 2815 072a 05       		.byte	0x5
 2816 072b 41       		.byte	0x41
 2817 072c 95000000 		.4byte	0x95
 2818 0730 05       		.uleb128 0x5
 2819 0731 03       		.byte	0x3
 2820 0732 00000000 		.4byte	portOpen
 2821 0736 20       		.uleb128 0x20
 2822 0737 44000000 		.4byte	.LASF110
 2823 073b 05       		.byte	0x5
 2824 073c 44       		.byte	0x44
 2825 073d C5000000 		.4byte	0xc5
 2826 0741 05       		.uleb128 0x5
 2827 0742 03       		.byte	0x3
 2828 0743 00000000 		.4byte	prevVoltage
 2829 0747 20       		.uleb128 0x20
 2830 0748 9E000000 		.4byte	.LASF111
 2831 074c 05       		.byte	0x5
 2832 074d 45       		.byte	0x45
 2833 074e C5000000 		.4byte	0xc5
 2834 0752 05       		.uleb128 0x5
 2835 0753 03       		.byte	0x3
 2836 0754 00000000 		.4byte	prevVoltage2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 60


 2837 0758 20       		.uleb128 0x20
 2838 0759 1D050000 		.4byte	.LASF112
 2839 075d 05       		.byte	0x5
 2840 075e 4B       		.byte	0x4b
 2841 075f B4030000 		.4byte	0x3b4
 2842 0763 05       		.uleb128 0x5
 2843 0764 03       		.byte	0x3
 2844 0765 00000000 		.4byte	displaystring
 2845 0769 20       		.uleb128 0x20
 2846 076a E4040000 		.4byte	.LASF113
 2847 076e 05       		.byte	0x5
 2848 076f 4C       		.byte	0x4c
 2849 0770 B4030000 		.4byte	0x3b4
 2850 0774 05       		.uleb128 0x5
 2851 0775 03       		.byte	0x3
 2852 0776 00000000 		.4byte	line
 2853 077a 20       		.uleb128 0x20
 2854 077b D0040000 		.4byte	.LASF114
 2855 077f 05       		.byte	0x5
 2856 0780 4C       		.byte	0x4c
 2857 0781 B4030000 		.4byte	0x3b4
 2858 0785 05       		.uleb128 0x5
 2859 0786 03       		.byte	0x3
 2860 0787 00000000 		.4byte	entry
 2861 078b 0E       		.uleb128 0xe
 2862 078c 95000000 		.4byte	0x95
 2863 0790 9B070000 		.4byte	0x79b
 2864 0794 0F       		.uleb128 0xf
 2865 0795 76000000 		.4byte	0x76
 2866 0799 3F       		.byte	0x3f
 2867 079a 00       		.byte	0
 2868 079b 20       		.uleb128 0x20
 2869 079c 44010000 		.4byte	.LASF115
 2870 07a0 05       		.byte	0x5
 2871 07a1 4D       		.byte	0x4d
 2872 07a2 8B070000 		.4byte	0x78b
 2873 07a6 05       		.uleb128 0x5
 2874 07a7 03       		.byte	0x3
 2875 07a8 00000000 		.4byte	usbBuffer
 2876 07ac 20       		.uleb128 0x20
 2877 07ad 97020000 		.4byte	.LASF116
 2878 07b1 05       		.byte	0x5
 2879 07b2 62       		.byte	0x62
 2880 07b3 0B010000 		.4byte	0x10b
 2881 07b7 05       		.uleb128 0x5
 2882 07b8 03       		.byte	0x3
 2883 07b9 00000000 		.4byte	buffer_state
 2884 07bd 20       		.uleb128 0x20
 2885 07be 7E000000 		.4byte	.LASF117
 2886 07c2 05       		.byte	0x5
 2887 07c3 63       		.byte	0x63
 2888 07c4 0B010000 		.4byte	0x10b
 2889 07c8 05       		.uleb128 0x5
 2890 07c9 03       		.byte	0x3
 2891 07ca 00000000 		.4byte	system_state
 2892 07ce 20       		.uleb128 0x20
 2893 07cf 02010000 		.4byte	.LASF118
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 61


 2894 07d3 05       		.byte	0x5
 2895 07d4 65       		.byte	0x65
 2896 07d5 E6000000 		.4byte	0xe6
 2897 07d9 05       		.uleb128 0x5
 2898 07da 03       		.byte	0x3
 2899 07db 00000000 		.4byte	movement_state
 2900 07df 20       		.uleb128 0x20
 2901 07e0 ED010000 		.4byte	.LASF119
 2902 07e4 05       		.byte	0x5
 2903 07e5 67       		.byte	0x67
 2904 07e6 95000000 		.4byte	0x95
 2905 07ea 05       		.uleb128 0x5
 2906 07eb 03       		.byte	0x3
 2907 07ec 00000000 		.4byte	byteCount
 2908 07f0 0E       		.uleb128 0xe
 2909 07f1 83000000 		.4byte	0x83
 2910 07f5 00080000 		.4byte	0x800
 2911 07f9 0F       		.uleb128 0xf
 2912 07fa 76000000 		.4byte	0x76
 2913 07fe 01       		.byte	0x1
 2914 07ff 00       		.byte	0
 2915 0800 20       		.uleb128 0x20
 2916 0801 B3040000 		.4byte	.LASF120
 2917 0805 05       		.byte	0x5
 2918 0806 68       		.byte	0x68
 2919 0807 F0070000 		.4byte	0x7f0
 2920 080b 05       		.uleb128 0x5
 2921 080c 03       		.byte	0x3
 2922 080d 00000000 		.4byte	packet
 2923 0811 00       		.byte	0
 2924              		.section	.debug_abbrev,"",%progbits
 2925              	.Ldebug_abbrev0:
 2926 0000 01       		.uleb128 0x1
 2927 0001 11       		.uleb128 0x11
 2928 0002 01       		.byte	0x1
 2929 0003 25       		.uleb128 0x25
 2930 0004 0E       		.uleb128 0xe
 2931 0005 13       		.uleb128 0x13
 2932 0006 0B       		.uleb128 0xb
 2933 0007 03       		.uleb128 0x3
 2934 0008 0E       		.uleb128 0xe
 2935 0009 1B       		.uleb128 0x1b
 2936 000a 0E       		.uleb128 0xe
 2937 000b 55       		.uleb128 0x55
 2938 000c 17       		.uleb128 0x17
 2939 000d 11       		.uleb128 0x11
 2940 000e 01       		.uleb128 0x1
 2941 000f 10       		.uleb128 0x10
 2942 0010 17       		.uleb128 0x17
 2943 0011 00       		.byte	0
 2944 0012 00       		.byte	0
 2945 0013 02       		.uleb128 0x2
 2946 0014 24       		.uleb128 0x24
 2947 0015 00       		.byte	0
 2948 0016 0B       		.uleb128 0xb
 2949 0017 0B       		.uleb128 0xb
 2950 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 62


 2951 0019 0B       		.uleb128 0xb
 2952 001a 03       		.uleb128 0x3
 2953 001b 0E       		.uleb128 0xe
 2954 001c 00       		.byte	0
 2955 001d 00       		.byte	0
 2956 001e 03       		.uleb128 0x3
 2957 001f 16       		.uleb128 0x16
 2958 0020 00       		.byte	0
 2959 0021 03       		.uleb128 0x3
 2960 0022 0E       		.uleb128 0xe
 2961 0023 3A       		.uleb128 0x3a
 2962 0024 0B       		.uleb128 0xb
 2963 0025 3B       		.uleb128 0x3b
 2964 0026 0B       		.uleb128 0xb
 2965 0027 49       		.uleb128 0x49
 2966 0028 13       		.uleb128 0x13
 2967 0029 00       		.byte	0
 2968 002a 00       		.byte	0
 2969 002b 04       		.uleb128 0x4
 2970 002c 24       		.uleb128 0x24
 2971 002d 00       		.byte	0
 2972 002e 0B       		.uleb128 0xb
 2973 002f 0B       		.uleb128 0xb
 2974 0030 3E       		.uleb128 0x3e
 2975 0031 0B       		.uleb128 0xb
 2976 0032 03       		.uleb128 0x3
 2977 0033 08       		.uleb128 0x8
 2978 0034 00       		.byte	0
 2979 0035 00       		.byte	0
 2980 0036 05       		.uleb128 0x5
 2981 0037 0F       		.uleb128 0xf
 2982 0038 00       		.byte	0
 2983 0039 0B       		.uleb128 0xb
 2984 003a 0B       		.uleb128 0xb
 2985 003b 49       		.uleb128 0x49
 2986 003c 13       		.uleb128 0x13
 2987 003d 00       		.byte	0
 2988 003e 00       		.byte	0
 2989 003f 06       		.uleb128 0x6
 2990 0040 16       		.uleb128 0x16
 2991 0041 00       		.byte	0
 2992 0042 03       		.uleb128 0x3
 2993 0043 0E       		.uleb128 0xe
 2994 0044 3A       		.uleb128 0x3a
 2995 0045 0B       		.uleb128 0xb
 2996 0046 3B       		.uleb128 0x3b
 2997 0047 05       		.uleb128 0x5
 2998 0048 49       		.uleb128 0x49
 2999 0049 13       		.uleb128 0x13
 3000 004a 00       		.byte	0
 3001 004b 00       		.byte	0
 3002 004c 07       		.uleb128 0x7
 3003 004d 04       		.uleb128 0x4
 3004 004e 01       		.byte	0x1
 3005 004f 03       		.uleb128 0x3
 3006 0050 0E       		.uleb128 0xe
 3007 0051 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 63


 3008 0052 0B       		.uleb128 0xb
 3009 0053 3A       		.uleb128 0x3a
 3010 0054 0B       		.uleb128 0xb
 3011 0055 3B       		.uleb128 0x3b
 3012 0056 0B       		.uleb128 0xb
 3013 0057 01       		.uleb128 0x1
 3014 0058 13       		.uleb128 0x13
 3015 0059 00       		.byte	0
 3016 005a 00       		.byte	0
 3017 005b 08       		.uleb128 0x8
 3018 005c 28       		.uleb128 0x28
 3019 005d 00       		.byte	0
 3020 005e 03       		.uleb128 0x3
 3021 005f 0E       		.uleb128 0xe
 3022 0060 1C       		.uleb128 0x1c
 3023 0061 0D       		.uleb128 0xd
 3024 0062 00       		.byte	0
 3025 0063 00       		.byte	0
 3026 0064 09       		.uleb128 0x9
 3027 0065 13       		.uleb128 0x13
 3028 0066 01       		.byte	0x1
 3029 0067 03       		.uleb128 0x3
 3030 0068 0E       		.uleb128 0xe
 3031 0069 0B       		.uleb128 0xb
 3032 006a 0B       		.uleb128 0xb
 3033 006b 3A       		.uleb128 0x3a
 3034 006c 0B       		.uleb128 0xb
 3035 006d 3B       		.uleb128 0x3b
 3036 006e 0B       		.uleb128 0xb
 3037 006f 01       		.uleb128 0x1
 3038 0070 13       		.uleb128 0x13
 3039 0071 00       		.byte	0
 3040 0072 00       		.byte	0
 3041 0073 0A       		.uleb128 0xa
 3042 0074 0D       		.uleb128 0xd
 3043 0075 00       		.byte	0
 3044 0076 03       		.uleb128 0x3
 3045 0077 0E       		.uleb128 0xe
 3046 0078 3A       		.uleb128 0x3a
 3047 0079 0B       		.uleb128 0xb
 3048 007a 3B       		.uleb128 0x3b
 3049 007b 0B       		.uleb128 0xb
 3050 007c 49       		.uleb128 0x49
 3051 007d 13       		.uleb128 0x13
 3052 007e 38       		.uleb128 0x38
 3053 007f 0B       		.uleb128 0xb
 3054 0080 00       		.byte	0
 3055 0081 00       		.byte	0
 3056 0082 0B       		.uleb128 0xb
 3057 0083 2E       		.uleb128 0x2e
 3058 0084 01       		.byte	0x1
 3059 0085 3F       		.uleb128 0x3f
 3060 0086 19       		.uleb128 0x19
 3061 0087 03       		.uleb128 0x3
 3062 0088 0E       		.uleb128 0xe
 3063 0089 3A       		.uleb128 0x3a
 3064 008a 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 64


 3065 008b 3B       		.uleb128 0x3b
 3066 008c 0B       		.uleb128 0xb
 3067 008d 11       		.uleb128 0x11
 3068 008e 01       		.uleb128 0x1
 3069 008f 12       		.uleb128 0x12
 3070 0090 06       		.uleb128 0x6
 3071 0091 40       		.uleb128 0x40
 3072 0092 18       		.uleb128 0x18
 3073 0093 9742     		.uleb128 0x2117
 3074 0095 19       		.uleb128 0x19
 3075 0096 01       		.uleb128 0x1
 3076 0097 13       		.uleb128 0x13
 3077 0098 00       		.byte	0
 3078 0099 00       		.byte	0
 3079 009a 0C       		.uleb128 0xc
 3080 009b 0B       		.uleb128 0xb
 3081 009c 01       		.byte	0x1
 3082 009d 11       		.uleb128 0x11
 3083 009e 01       		.uleb128 0x1
 3084 009f 12       		.uleb128 0x12
 3085 00a0 06       		.uleb128 0x6
 3086 00a1 00       		.byte	0
 3087 00a2 00       		.byte	0
 3088 00a3 0D       		.uleb128 0xd
 3089 00a4 34       		.uleb128 0x34
 3090 00a5 00       		.byte	0
 3091 00a6 03       		.uleb128 0x3
 3092 00a7 0E       		.uleb128 0xe
 3093 00a8 3A       		.uleb128 0x3a
 3094 00a9 0B       		.uleb128 0xb
 3095 00aa 3B       		.uleb128 0x3b
 3096 00ab 0B       		.uleb128 0xb
 3097 00ac 49       		.uleb128 0x49
 3098 00ad 13       		.uleb128 0x13
 3099 00ae 02       		.uleb128 0x2
 3100 00af 18       		.uleb128 0x18
 3101 00b0 00       		.byte	0
 3102 00b1 00       		.byte	0
 3103 00b2 0E       		.uleb128 0xe
 3104 00b3 01       		.uleb128 0x1
 3105 00b4 01       		.byte	0x1
 3106 00b5 49       		.uleb128 0x49
 3107 00b6 13       		.uleb128 0x13
 3108 00b7 01       		.uleb128 0x1
 3109 00b8 13       		.uleb128 0x13
 3110 00b9 00       		.byte	0
 3111 00ba 00       		.byte	0
 3112 00bb 0F       		.uleb128 0xf
 3113 00bc 21       		.uleb128 0x21
 3114 00bd 00       		.byte	0
 3115 00be 49       		.uleb128 0x49
 3116 00bf 13       		.uleb128 0x13
 3117 00c0 2F       		.uleb128 0x2f
 3118 00c1 0B       		.uleb128 0xb
 3119 00c2 00       		.byte	0
 3120 00c3 00       		.byte	0
 3121 00c4 10       		.uleb128 0x10
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 65


 3122 00c5 2E       		.uleb128 0x2e
 3123 00c6 01       		.byte	0x1
 3124 00c7 3F       		.uleb128 0x3f
 3125 00c8 19       		.uleb128 0x19
 3126 00c9 03       		.uleb128 0x3
 3127 00ca 0E       		.uleb128 0xe
 3128 00cb 3A       		.uleb128 0x3a
 3129 00cc 0B       		.uleb128 0xb
 3130 00cd 3B       		.uleb128 0x3b
 3131 00ce 0B       		.uleb128 0xb
 3132 00cf 27       		.uleb128 0x27
 3133 00d0 19       		.uleb128 0x19
 3134 00d1 11       		.uleb128 0x11
 3135 00d2 01       		.uleb128 0x1
 3136 00d3 12       		.uleb128 0x12
 3137 00d4 06       		.uleb128 0x6
 3138 00d5 40       		.uleb128 0x40
 3139 00d6 18       		.uleb128 0x18
 3140 00d7 9742     		.uleb128 0x2117
 3141 00d9 19       		.uleb128 0x19
 3142 00da 01       		.uleb128 0x1
 3143 00db 13       		.uleb128 0x13
 3144 00dc 00       		.byte	0
 3145 00dd 00       		.byte	0
 3146 00de 11       		.uleb128 0x11
 3147 00df 05       		.uleb128 0x5
 3148 00e0 00       		.byte	0
 3149 00e1 03       		.uleb128 0x3
 3150 00e2 0E       		.uleb128 0xe
 3151 00e3 3A       		.uleb128 0x3a
 3152 00e4 0B       		.uleb128 0xb
 3153 00e5 3B       		.uleb128 0x3b
 3154 00e6 0B       		.uleb128 0xb
 3155 00e7 49       		.uleb128 0x49
 3156 00e8 13       		.uleb128 0x13
 3157 00e9 02       		.uleb128 0x2
 3158 00ea 18       		.uleb128 0x18
 3159 00eb 00       		.byte	0
 3160 00ec 00       		.byte	0
 3161 00ed 12       		.uleb128 0x12
 3162 00ee 2E       		.uleb128 0x2e
 3163 00ef 00       		.byte	0
 3164 00f0 3F       		.uleb128 0x3f
 3165 00f1 19       		.uleb128 0x19
 3166 00f2 03       		.uleb128 0x3
 3167 00f3 0E       		.uleb128 0xe
 3168 00f4 3A       		.uleb128 0x3a
 3169 00f5 0B       		.uleb128 0xb
 3170 00f6 3B       		.uleb128 0x3b
 3171 00f7 0B       		.uleb128 0xb
 3172 00f8 11       		.uleb128 0x11
 3173 00f9 01       		.uleb128 0x1
 3174 00fa 12       		.uleb128 0x12
 3175 00fb 06       		.uleb128 0x6
 3176 00fc 40       		.uleb128 0x40
 3177 00fd 18       		.uleb128 0x18
 3178 00fe 9642     		.uleb128 0x2116
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 66


 3179 0100 19       		.uleb128 0x19
 3180 0101 00       		.byte	0
 3181 0102 00       		.byte	0
 3182 0103 13       		.uleb128 0x13
 3183 0104 2E       		.uleb128 0x2e
 3184 0105 01       		.byte	0x1
 3185 0106 3F       		.uleb128 0x3f
 3186 0107 19       		.uleb128 0x19
 3187 0108 03       		.uleb128 0x3
 3188 0109 0E       		.uleb128 0xe
 3189 010a 3A       		.uleb128 0x3a
 3190 010b 0B       		.uleb128 0xb
 3191 010c 3B       		.uleb128 0x3b
 3192 010d 0B       		.uleb128 0xb
 3193 010e 27       		.uleb128 0x27
 3194 010f 19       		.uleb128 0x19
 3195 0110 11       		.uleb128 0x11
 3196 0111 01       		.uleb128 0x1
 3197 0112 12       		.uleb128 0x12
 3198 0113 06       		.uleb128 0x6
 3199 0114 40       		.uleb128 0x40
 3200 0115 18       		.uleb128 0x18
 3201 0116 9642     		.uleb128 0x2116
 3202 0118 19       		.uleb128 0x19
 3203 0119 01       		.uleb128 0x1
 3204 011a 13       		.uleb128 0x13
 3205 011b 00       		.byte	0
 3206 011c 00       		.byte	0
 3207 011d 14       		.uleb128 0x14
 3208 011e 2E       		.uleb128 0x2e
 3209 011f 00       		.byte	0
 3210 0120 3F       		.uleb128 0x3f
 3211 0121 19       		.uleb128 0x19
 3212 0122 03       		.uleb128 0x3
 3213 0123 0E       		.uleb128 0xe
 3214 0124 3A       		.uleb128 0x3a
 3215 0125 0B       		.uleb128 0xb
 3216 0126 3B       		.uleb128 0x3b
 3217 0127 0B       		.uleb128 0xb
 3218 0128 27       		.uleb128 0x27
 3219 0129 19       		.uleb128 0x19
 3220 012a 11       		.uleb128 0x11
 3221 012b 01       		.uleb128 0x1
 3222 012c 12       		.uleb128 0x12
 3223 012d 06       		.uleb128 0x6
 3224 012e 40       		.uleb128 0x40
 3225 012f 18       		.uleb128 0x18
 3226 0130 9642     		.uleb128 0x2116
 3227 0132 19       		.uleb128 0x19
 3228 0133 00       		.byte	0
 3229 0134 00       		.byte	0
 3230 0135 15       		.uleb128 0x15
 3231 0136 2E       		.uleb128 0x2e
 3232 0137 00       		.byte	0
 3233 0138 3F       		.uleb128 0x3f
 3234 0139 19       		.uleb128 0x19
 3235 013a 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 67


 3236 013b 0E       		.uleb128 0xe
 3237 013c 3A       		.uleb128 0x3a
 3238 013d 0B       		.uleb128 0xb
 3239 013e 3B       		.uleb128 0x3b
 3240 013f 05       		.uleb128 0x5
 3241 0140 27       		.uleb128 0x27
 3242 0141 19       		.uleb128 0x19
 3243 0142 11       		.uleb128 0x11
 3244 0143 01       		.uleb128 0x1
 3245 0144 12       		.uleb128 0x12
 3246 0145 06       		.uleb128 0x6
 3247 0146 40       		.uleb128 0x40
 3248 0147 18       		.uleb128 0x18
 3249 0148 9642     		.uleb128 0x2116
 3250 014a 19       		.uleb128 0x19
 3251 014b 00       		.byte	0
 3252 014c 00       		.byte	0
 3253 014d 16       		.uleb128 0x16
 3254 014e 2E       		.uleb128 0x2e
 3255 014f 00       		.byte	0
 3256 0150 3F       		.uleb128 0x3f
 3257 0151 19       		.uleb128 0x19
 3258 0152 03       		.uleb128 0x3
 3259 0153 0E       		.uleb128 0xe
 3260 0154 3A       		.uleb128 0x3a
 3261 0155 0B       		.uleb128 0xb
 3262 0156 3B       		.uleb128 0x3b
 3263 0157 05       		.uleb128 0x5
 3264 0158 27       		.uleb128 0x27
 3265 0159 19       		.uleb128 0x19
 3266 015a 11       		.uleb128 0x11
 3267 015b 01       		.uleb128 0x1
 3268 015c 12       		.uleb128 0x12
 3269 015d 06       		.uleb128 0x6
 3270 015e 40       		.uleb128 0x40
 3271 015f 18       		.uleb128 0x18
 3272 0160 9742     		.uleb128 0x2117
 3273 0162 19       		.uleb128 0x19
 3274 0163 00       		.byte	0
 3275 0164 00       		.byte	0
 3276 0165 17       		.uleb128 0x17
 3277 0166 2E       		.uleb128 0x2e
 3278 0167 01       		.byte	0x1
 3279 0168 3F       		.uleb128 0x3f
 3280 0169 19       		.uleb128 0x19
 3281 016a 03       		.uleb128 0x3
 3282 016b 0E       		.uleb128 0xe
 3283 016c 3A       		.uleb128 0x3a
 3284 016d 0B       		.uleb128 0xb
 3285 016e 3B       		.uleb128 0x3b
 3286 016f 05       		.uleb128 0x5
 3287 0170 11       		.uleb128 0x11
 3288 0171 01       		.uleb128 0x1
 3289 0172 12       		.uleb128 0x12
 3290 0173 06       		.uleb128 0x6
 3291 0174 40       		.uleb128 0x40
 3292 0175 18       		.uleb128 0x18
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 68


 3293 0176 9642     		.uleb128 0x2116
 3294 0178 19       		.uleb128 0x19
 3295 0179 01       		.uleb128 0x1
 3296 017a 13       		.uleb128 0x13
 3297 017b 00       		.byte	0
 3298 017c 00       		.byte	0
 3299 017d 18       		.uleb128 0x18
 3300 017e 34       		.uleb128 0x34
 3301 017f 00       		.byte	0
 3302 0180 03       		.uleb128 0x3
 3303 0181 0E       		.uleb128 0xe
 3304 0182 3A       		.uleb128 0x3a
 3305 0183 0B       		.uleb128 0xb
 3306 0184 3B       		.uleb128 0x3b
 3307 0185 05       		.uleb128 0x5
 3308 0186 49       		.uleb128 0x49
 3309 0187 13       		.uleb128 0x13
 3310 0188 02       		.uleb128 0x2
 3311 0189 18       		.uleb128 0x18
 3312 018a 00       		.byte	0
 3313 018b 00       		.byte	0
 3314 018c 19       		.uleb128 0x19
 3315 018d 2E       		.uleb128 0x2e
 3316 018e 00       		.byte	0
 3317 018f 3F       		.uleb128 0x3f
 3318 0190 19       		.uleb128 0x19
 3319 0191 03       		.uleb128 0x3
 3320 0192 0E       		.uleb128 0xe
 3321 0193 3A       		.uleb128 0x3a
 3322 0194 0B       		.uleb128 0xb
 3323 0195 3B       		.uleb128 0x3b
 3324 0196 05       		.uleb128 0x5
 3325 0197 49       		.uleb128 0x49
 3326 0198 13       		.uleb128 0x13
 3327 0199 11       		.uleb128 0x11
 3328 019a 01       		.uleb128 0x1
 3329 019b 12       		.uleb128 0x12
 3330 019c 06       		.uleb128 0x6
 3331 019d 40       		.uleb128 0x40
 3332 019e 18       		.uleb128 0x18
 3333 019f 9642     		.uleb128 0x2116
 3334 01a1 19       		.uleb128 0x19
 3335 01a2 00       		.byte	0
 3336 01a3 00       		.byte	0
 3337 01a4 1A       		.uleb128 0x1a
 3338 01a5 2E       		.uleb128 0x2e
 3339 01a6 01       		.byte	0x1
 3340 01a7 3F       		.uleb128 0x3f
 3341 01a8 19       		.uleb128 0x19
 3342 01a9 03       		.uleb128 0x3
 3343 01aa 0E       		.uleb128 0xe
 3344 01ab 3A       		.uleb128 0x3a
 3345 01ac 0B       		.uleb128 0xb
 3346 01ad 3B       		.uleb128 0x3b
 3347 01ae 05       		.uleb128 0x5
 3348 01af 27       		.uleb128 0x27
 3349 01b0 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 69


 3350 01b1 11       		.uleb128 0x11
 3351 01b2 01       		.uleb128 0x1
 3352 01b3 12       		.uleb128 0x12
 3353 01b4 06       		.uleb128 0x6
 3354 01b5 40       		.uleb128 0x40
 3355 01b6 18       		.uleb128 0x18
 3356 01b7 9642     		.uleb128 0x2116
 3357 01b9 19       		.uleb128 0x19
 3358 01ba 01       		.uleb128 0x1
 3359 01bb 13       		.uleb128 0x13
 3360 01bc 00       		.byte	0
 3361 01bd 00       		.byte	0
 3362 01be 1B       		.uleb128 0x1b
 3363 01bf 05       		.uleb128 0x5
 3364 01c0 00       		.byte	0
 3365 01c1 03       		.uleb128 0x3
 3366 01c2 08       		.uleb128 0x8
 3367 01c3 3A       		.uleb128 0x3a
 3368 01c4 0B       		.uleb128 0xb
 3369 01c5 3B       		.uleb128 0x3b
 3370 01c6 05       		.uleb128 0x5
 3371 01c7 49       		.uleb128 0x49
 3372 01c8 13       		.uleb128 0x13
 3373 01c9 02       		.uleb128 0x2
 3374 01ca 18       		.uleb128 0x18
 3375 01cb 00       		.byte	0
 3376 01cc 00       		.byte	0
 3377 01cd 1C       		.uleb128 0x1c
 3378 01ce 34       		.uleb128 0x34
 3379 01cf 00       		.byte	0
 3380 01d0 03       		.uleb128 0x3
 3381 01d1 08       		.uleb128 0x8
 3382 01d2 3A       		.uleb128 0x3a
 3383 01d3 0B       		.uleb128 0xb
 3384 01d4 3B       		.uleb128 0x3b
 3385 01d5 05       		.uleb128 0x5
 3386 01d6 49       		.uleb128 0x49
 3387 01d7 13       		.uleb128 0x13
 3388 01d8 02       		.uleb128 0x2
 3389 01d9 18       		.uleb128 0x18
 3390 01da 00       		.byte	0
 3391 01db 00       		.byte	0
 3392 01dc 1D       		.uleb128 0x1d
 3393 01dd 34       		.uleb128 0x34
 3394 01de 00       		.byte	0
 3395 01df 03       		.uleb128 0x3
 3396 01e0 0E       		.uleb128 0xe
 3397 01e1 3A       		.uleb128 0x3a
 3398 01e2 0B       		.uleb128 0xb
 3399 01e3 3B       		.uleb128 0x3b
 3400 01e4 05       		.uleb128 0x5
 3401 01e5 49       		.uleb128 0x49
 3402 01e6 13       		.uleb128 0x13
 3403 01e7 3F       		.uleb128 0x3f
 3404 01e8 19       		.uleb128 0x19
 3405 01e9 3C       		.uleb128 0x3c
 3406 01ea 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 70


 3407 01eb 00       		.byte	0
 3408 01ec 00       		.byte	0
 3409 01ed 1E       		.uleb128 0x1e
 3410 01ee 35       		.uleb128 0x35
 3411 01ef 00       		.byte	0
 3412 01f0 49       		.uleb128 0x49
 3413 01f1 13       		.uleb128 0x13
 3414 01f2 00       		.byte	0
 3415 01f3 00       		.byte	0
 3416 01f4 1F       		.uleb128 0x1f
 3417 01f5 34       		.uleb128 0x34
 3418 01f6 00       		.byte	0
 3419 01f7 03       		.uleb128 0x3
 3420 01f8 08       		.uleb128 0x8
 3421 01f9 3A       		.uleb128 0x3a
 3422 01fa 0B       		.uleb128 0xb
 3423 01fb 3B       		.uleb128 0x3b
 3424 01fc 0B       		.uleb128 0xb
 3425 01fd 49       		.uleb128 0x49
 3426 01fe 13       		.uleb128 0x13
 3427 01ff 3F       		.uleb128 0x3f
 3428 0200 19       		.uleb128 0x19
 3429 0201 02       		.uleb128 0x2
 3430 0202 18       		.uleb128 0x18
 3431 0203 00       		.byte	0
 3432 0204 00       		.byte	0
 3433 0205 20       		.uleb128 0x20
 3434 0206 34       		.uleb128 0x34
 3435 0207 00       		.byte	0
 3436 0208 03       		.uleb128 0x3
 3437 0209 0E       		.uleb128 0xe
 3438 020a 3A       		.uleb128 0x3a
 3439 020b 0B       		.uleb128 0xb
 3440 020c 3B       		.uleb128 0x3b
 3441 020d 0B       		.uleb128 0xb
 3442 020e 49       		.uleb128 0x49
 3443 020f 13       		.uleb128 0x13
 3444 0210 3F       		.uleb128 0x3f
 3445 0211 19       		.uleb128 0x19
 3446 0212 02       		.uleb128 0x2
 3447 0213 18       		.uleb128 0x18
 3448 0214 00       		.byte	0
 3449 0215 00       		.byte	0
 3450 0216 00       		.byte	0
 3451              		.section	.debug_aranges,"",%progbits
 3452 0000 B4000000 		.4byte	0xb4
 3453 0004 0200     		.2byte	0x2
 3454 0006 00000000 		.4byte	.Ldebug_info0
 3455 000a 04       		.byte	0x4
 3456 000b 00       		.byte	0
 3457 000c 0000     		.2byte	0
 3458 000e 0000     		.2byte	0
 3459 0010 00000000 		.4byte	.LFB63
 3460 0014 60010000 		.4byte	.LFE63-.LFB63
 3461 0018 00000000 		.4byte	.LFB64
 3462 001c 2C000000 		.4byte	.LFE64-.LFB64
 3463 0020 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 71


 3464 0024 30000000 		.4byte	.LFE65-.LFB65
 3465 0028 00000000 		.4byte	.LFB66
 3466 002c 0E000000 		.4byte	.LFE66-.LFB66
 3467 0030 00000000 		.4byte	.LFB67
 3468 0034 0E000000 		.4byte	.LFE67-.LFB67
 3469 0038 00000000 		.4byte	.LFB68
 3470 003c 0E000000 		.4byte	.LFE68-.LFB68
 3471 0040 00000000 		.4byte	.LFB69
 3472 0044 98000000 		.4byte	.LFE69-.LFB69
 3473 0048 00000000 		.4byte	.LFB70
 3474 004c 2C000000 		.4byte	.LFE70-.LFB70
 3475 0050 00000000 		.4byte	.LFB71
 3476 0054 B8000000 		.4byte	.LFE71-.LFB71
 3477 0058 00000000 		.4byte	.LFB72
 3478 005c 5C000000 		.4byte	.LFE72-.LFB72
 3479 0060 00000000 		.4byte	.LFB73
 3480 0064 34000000 		.4byte	.LFE73-.LFB73
 3481 0068 00000000 		.4byte	.LFB74
 3482 006c 18000000 		.4byte	.LFE74-.LFB74
 3483 0070 00000000 		.4byte	.LFB75
 3484 0074 0A000000 		.4byte	.LFE75-.LFB75
 3485 0078 00000000 		.4byte	.LFB76
 3486 007c D8010000 		.4byte	.LFE76-.LFB76
 3487 0080 00000000 		.4byte	.LFB77
 3488 0084 C0000000 		.4byte	.LFE77-.LFB77
 3489 0088 00000000 		.4byte	.LFB78
 3490 008c B8000000 		.4byte	.LFE78-.LFB78
 3491 0090 00000000 		.4byte	.LFB79
 3492 0094 B8000000 		.4byte	.LFE79-.LFB79
 3493 0098 00000000 		.4byte	.LFB80
 3494 009c 68000000 		.4byte	.LFE80-.LFB80
 3495 00a0 00000000 		.4byte	.LFB81
 3496 00a4 50000000 		.4byte	.LFE81-.LFB81
 3497 00a8 00000000 		.4byte	.LFB82
 3498 00ac 3A000000 		.4byte	.LFE82-.LFB82
 3499 00b0 00000000 		.4byte	0
 3500 00b4 00000000 		.4byte	0
 3501              		.section	.debug_ranges,"",%progbits
 3502              	.Ldebug_ranges0:
 3503 0000 00000000 		.4byte	.LFB63
 3504 0004 60010000 		.4byte	.LFE63
 3505 0008 00000000 		.4byte	.LFB64
 3506 000c 2C000000 		.4byte	.LFE64
 3507 0010 00000000 		.4byte	.LFB65
 3508 0014 30000000 		.4byte	.LFE65
 3509 0018 00000000 		.4byte	.LFB66
 3510 001c 0E000000 		.4byte	.LFE66
 3511 0020 00000000 		.4byte	.LFB67
 3512 0024 0E000000 		.4byte	.LFE67
 3513 0028 00000000 		.4byte	.LFB68
 3514 002c 0E000000 		.4byte	.LFE68
 3515 0030 00000000 		.4byte	.LFB69
 3516 0034 98000000 		.4byte	.LFE69
 3517 0038 00000000 		.4byte	.LFB70
 3518 003c 2C000000 		.4byte	.LFE70
 3519 0040 00000000 		.4byte	.LFB71
 3520 0044 B8000000 		.4byte	.LFE71
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 72


 3521 0048 00000000 		.4byte	.LFB72
 3522 004c 5C000000 		.4byte	.LFE72
 3523 0050 00000000 		.4byte	.LFB73
 3524 0054 34000000 		.4byte	.LFE73
 3525 0058 00000000 		.4byte	.LFB74
 3526 005c 18000000 		.4byte	.LFE74
 3527 0060 00000000 		.4byte	.LFB75
 3528 0064 0A000000 		.4byte	.LFE75
 3529 0068 00000000 		.4byte	.LFB76
 3530 006c D8010000 		.4byte	.LFE76
 3531 0070 00000000 		.4byte	.LFB77
 3532 0074 C0000000 		.4byte	.LFE77
 3533 0078 00000000 		.4byte	.LFB78
 3534 007c B8000000 		.4byte	.LFE78
 3535 0080 00000000 		.4byte	.LFB79
 3536 0084 B8000000 		.4byte	.LFE79
 3537 0088 00000000 		.4byte	.LFB80
 3538 008c 68000000 		.4byte	.LFE80
 3539 0090 00000000 		.4byte	.LFB81
 3540 0094 50000000 		.4byte	.LFE81
 3541 0098 00000000 		.4byte	.LFB82
 3542 009c 3A000000 		.4byte	.LFE82
 3543 00a0 00000000 		.4byte	0
 3544 00a4 00000000 		.4byte	0
 3545              		.section	.debug_line,"",%progbits
 3546              	.Ldebug_line0:
 3547 0000 9E030000 		.section	.debug_str,"MS",%progbits,1
 3547      02005501 
 3547      00000201 
 3547      FB0E0D00 
 3547      01010101 
 3548              	.LASF95:
 3549 0000 64697265 		.ascii	"direction\000"
 3549      6374696F 
 3549      6E00
 3550              	.LASF23:
 3551 000a 52545552 		.ascii	"RTURN\000"
 3551      4E00
 3552              	.LASF101:
 3553 0010 71756164 		.ascii	"quad_diff1\000"
 3553      5F646966 
 3553      663100
 3554              	.LASF102:
 3555 001b 71756164 		.ascii	"quad_diff2\000"
 3555      5F646966 
 3555      663200
 3556              	.LASF63:
 3557 0026 77686565 		.ascii	"wheel_2_str\000"
 3557      6C5F325F 
 3557      73747200 
 3558              	.LASF61:
 3559 0032 51756164 		.ascii	"Quad_Dec_response\000"
 3559      5F446563 
 3559      5F726573 
 3559      706F6E73 
 3559      6500
 3560              	.LASF110:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 73


 3561 0044 70726576 		.ascii	"prevVoltage\000"
 3561      566F6C74 
 3561      61676500 
 3562              	.LASF103:
 3563 0050 73746172 		.ascii	"start_turn_count\000"
 3563      745F7475 
 3563      726E5F63 
 3563      6F756E74 
 3563      00
 3564              	.LASF8:
 3565 0061 756E7369 		.ascii	"unsigned int\000"
 3565      676E6564 
 3565      20696E74 
 3565      00
 3566              	.LASF11:
 3567 006e 5F5F696E 		.ascii	"__int32_t\000"
 3567      7433325F 
 3567      7400
 3568              	.LASF17:
 3569 0078 696E7431 		.ascii	"int16\000"
 3569      3600
 3570              	.LASF117:
 3571 007e 73797374 		.ascii	"system_state\000"
 3571      656D5F73 
 3571      74617465 
 3571      00
 3572              	.LASF22:
 3573 008b 4C545552 		.ascii	"LTURN\000"
 3573      4E00
 3574              	.LASF59:
 3575 0091 6973725F 		.ascii	"isr_adcTimer\000"
 3575      61646354 
 3575      696D6572 
 3575      00
 3576              	.LASF111:
 3577 009e 70726576 		.ascii	"prevVoltage2\000"
 3577      566F6C74 
 3577      61676532 
 3577      00
 3578              	.LASF42:
 3579 00ab 7061636B 		.ascii	"packet_bytes\000"
 3579      65745F62 
 3579      79746573 
 3579      00
 3580              	.LASF38:
 3581 00b8 67325F78 		.ascii	"g2_xpos\000"
 3581      706F7300 
 3582              	.LASF97:
 3583 00c0 71756164 		.ascii	"quad_count1\000"
 3583      5F636F75 
 3583      6E743100 
 3584              	.LASF98:
 3585 00cc 71756164 		.ascii	"quad_count2\000"
 3585      5F636F75 
 3585      6E743200 
 3586              	.LASF91:
 3587 00d8 666C6167 		.ascii	"flag_rf_transmission_active\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 74


 3587      5F72665F 
 3587      7472616E 
 3587      736D6973 
 3587      73696F6E 
 3588              	.LASF92:
 3589 00f4 666C6167 		.ascii	"flag_print_rf\000"
 3589      5F707269 
 3589      6E745F72 
 3589      6600
 3590              	.LASF118:
 3591 0102 6D6F7665 		.ascii	"movement_state\000"
 3591      6D656E74 
 3591      5F737461 
 3591      746500
 3592              	.LASF75:
 3593 0111 75736250 		.ascii	"usbPutString\000"
 3593      75745374 
 3593      72696E67 
 3593      00
 3594              	.LASF41:
 3595 011e 67325F64 		.ascii	"g2_direction\000"
 3595      69726563 
 3595      74696F6E 
 3595      00
 3596              	.LASF55:
 3597 012b 6973725F 		.ascii	"isr_quad1\000"
 3597      71756164 
 3597      3100
 3598              	.LASF18:
 3599 0135 666C6F61 		.ascii	"float\000"
 3599      7400
 3600              	.LASF51:
 3601 013b 73657453 		.ascii	"setSpeed\000"
 3601      70656564 
 3601      00
 3602              	.LASF115:
 3603 0144 75736242 		.ascii	"usbBuffer\000"
 3603      75666665 
 3603      7200
 3604              	.LASF26:
 3605 014e 696E6465 		.ascii	"index\000"
 3605      7800
 3606              	.LASF21:
 3607 0154 44524956 		.ascii	"DRIVE\000"
 3607      4500
 3608              	.LASF44:
 3609 015a 73747269 		.ascii	"string_packet\000"
 3609      6E675F70 
 3609      61636B65 
 3609      7400
 3610              	.LASF48:
 3611 0168 64726976 		.ascii	"driveForwards\000"
 3611      65466F72 
 3611      77617264 
 3611      7300
 3612              	.LASF49:
 3613 0176 7475726E 		.ascii	"turnLeft\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 75


 3613      4C656674 
 3613      00
 3614              	.LASF7:
 3615 017f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3615      206C6F6E 
 3615      6720756E 
 3615      7369676E 
 3615      65642069 
 3616              	.LASF88:
 3617 0196 666C6167 		.ascii	"flag_packet\000"
 3617      5F706163 
 3617      6B657400 
 3618              	.LASF56:
 3619 01a2 6973725F 		.ascii	"isr_turn_timer\000"
 3619      7475726E 
 3619      5F74696D 
 3619      657200
 3620              	.LASF109:
 3621 01b1 706F7274 		.ascii	"portOpen\000"
 3621      4F70656E 
 3621      00
 3622              	.LASF84:
 3623 01ba 666C6167 		.ascii	"flag_ts_update\000"
 3623      5F74735F 
 3623      75706461 
 3623      746500
 3624              	.LASF69:
 3625 01c9 7363616C 		.ascii	"scalingFactor\000"
 3625      696E6746 
 3625      6163746F 
 3625      7200
 3626              	.LASF64:
 3627 01d7 6C656674 		.ascii	"leftSpeed\000"
 3627      53706565 
 3627      6400
 3628              	.LASF83:
 3629 01e1 666C6167 		.ascii	"flag_ts_enc\000"
 3629      5F74735F 
 3629      656E6300 
 3630              	.LASF119:
 3631 01ed 62797465 		.ascii	"byteCount\000"
 3631      436F756E 
 3631      7400
 3632              	.LASF58:
 3633 01f7 62757474 		.ascii	"button\000"
 3633      6F6E00
 3634              	.LASF71:
 3635 01fe 72657375 		.ascii	"result_str\000"
 3635      6C745F73 
 3635      747200
 3636              	.LASF77:
 3637 0209 75617274 		.ascii	"uart_set_PWM\000"
 3637      5F736574 
 3637      5F50574D 
 3637      00
 3638              	.LASF28:
 3639 0216 726F626F 		.ascii	"robot_ypos\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 76


 3639      745F7970 
 3639      6F7300
 3640              	.LASF82:
 3641 0221 74735F64 		.ascii	"ts_display\000"
 3641      6973706C 
 3641      617900
 3642              	.LASF68:
 3643 022c 7072696E 		.ascii	"print_ADC\000"
 3643      745F4144 
 3643      4300
 3644              	.LASF62:
 3645 0236 77686565 		.ascii	"wheel_1_str\000"
 3645      6C5F315F 
 3645      73747200 
 3646              	.LASF10:
 3647 0242 63686172 		.ascii	"char\000"
 3647      00
 3648              	.LASF32:
 3649 0247 67305F73 		.ascii	"g0_speed\000"
 3649      70656564 
 3649      00
 3650              	.LASF107:
 3651 0250 72696768 		.ascii	"rightSpeedLimit\000"
 3651      74537065 
 3651      65644C69 
 3651      6D697400 
 3652              	.LASF14:
 3653 0260 75696E74 		.ascii	"uint16\000"
 3653      313600
 3654              	.LASF16:
 3655 0267 696E7438 		.ascii	"int8\000"
 3655      00
 3656              	.LASF37:
 3657 026c 67315F64 		.ascii	"g1_direction\000"
 3657      69726563 
 3657      74696F6E 
 3657      00
 3658              	.LASF66:
 3659 0279 696E7465 		.ascii	"interCalc\000"
 3659      7243616C 
 3659      6300
 3660              	.LASF45:
 3661 0283 72696768 		.ascii	"right\000"
 3661      7400
 3662              	.LASF6:
 3663 0289 6C6F6E67 		.ascii	"long long int\000"
 3663      206C6F6E 
 3663      6720696E 
 3663      7400
 3664              	.LASF116:
 3665 0297 62756666 		.ascii	"buffer_state\000"
 3665      65725F73 
 3665      74617465 
 3665      00
 3666              	.LASF34:
 3667 02a4 67315F78 		.ascii	"g1_xpos\000"
 3667      706F7300 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 77


 3668              	.LASF121:
 3669 02ac 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3669      4320342E 
 3669      392E3320 
 3669      32303135 
 3669      30333033 
 3670 02df 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3670      20726576 
 3670      6973696F 
 3670      6E203232 
 3670      31323230 
 3671 0312 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3671      66756E63 
 3671      74696F6E 
 3671      2D736563 
 3671      74696F6E 
 3672              	.LASF40:
 3673 033a 67325F73 		.ascii	"g2_speed\000"
 3673      70656564 
 3673      00
 3674              	.LASF31:
 3675 0343 67305F79 		.ascii	"g0_ypos\000"
 3675      706F7300 
 3676              	.LASF53:
 3677 034b 72665F63 		.ascii	"rf_char\000"
 3677      68617200 
 3678              	.LASF65:
 3679 0353 72696768 		.ascii	"rightSpeed\000"
 3679      74537065 
 3679      656400
 3680              	.LASF81:
 3681 035e 74735F73 		.ascii	"ts_speed\000"
 3681      70656564 
 3681      00
 3682              	.LASF15:
 3683 0367 75696E74 		.ascii	"uint32\000"
 3683      333200
 3684              	.LASF125:
 3685 036e 64617461 		.ascii	"data_main\000"
 3685      5F6D6169 
 3685      6E00
 3686              	.LASF70:
 3687 0378 636F6E76 		.ascii	"converted_val\000"
 3687      65727465 
 3687      645F7661 
 3687      6C00
 3688              	.LASF25:
 3689 0386 72737369 		.ascii	"rssi\000"
 3689      00
 3690              	.LASF33:
 3691 038b 67305F64 		.ascii	"g0_direction\000"
 3691      69726563 
 3691      74696F6E 
 3691      00
 3692              	.LASF93:
 3693 0398 666C6167 		.ascii	"flag_receive_ADC\000"
 3693      5F726563 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 78


 3693      65697665 
 3693      5F414443 
 3693      00
 3694              	.LASF24:
 3695 03a9 53544F50 		.ascii	"STOPPED\000"
 3695      50454400 
 3696              	.LASF20:
 3697 03b1 6C6F6E67 		.ascii	"long double\000"
 3697      20646F75 
 3697      626C6500 
 3698              	.LASF52:
 3699 03bd 7278496E 		.ascii	"rxInt\000"
 3699      7400
 3700              	.LASF104:
 3701 03c3 6C656674 		.ascii	"left_duty_cycle\000"
 3701      5F647574 
 3701      795F6379 
 3701      636C6500 
 3702              	.LASF85:
 3703 03d3 666C6167 		.ascii	"flag_ts_speed\000"
 3703      5F74735F 
 3703      73706565 
 3703      6400
 3704              	.LASF90:
 3705 03e1 64617461 		.ascii	"dataready_flag\000"
 3705      72656164 
 3705      795F666C 
 3705      616700
 3706              	.LASF87:
 3707 03f0 666C6167 		.ascii	"flag_rx\000"
 3707      5F727800 
 3708              	.LASF2:
 3709 03f8 73686F72 		.ascii	"short int\000"
 3709      7420696E 
 3709      7400
 3710              	.LASF94:
 3711 0402 6164635F 		.ascii	"adc_result\000"
 3711      72657375 
 3711      6C7400
 3712              	.LASF96:
 3713 040d 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 3713      5F63616C 
 3713      635F7768 
 3713      65656C73 
 3713      70656564 
 3714              	.LASF4:
 3715 0422 6C6F6E67 		.ascii	"long int\000"
 3715      20696E74 
 3715      00
 3716              	.LASF78:
 3717 042b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3717      52784275 
 3717      66666572 
 3717      00
 3718              	.LASF73:
 3719 0438 7072696E 		.ascii	"printString\000"
 3719      74537472 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 79


 3719      696E6700 
 3720              	.LASF80:
 3721 0444 74735F75 		.ascii	"ts_update\000"
 3721      70646174 
 3721      6500
 3722              	.LASF106:
 3723 044e 6C656674 		.ascii	"leftSpeedLimit\000"
 3723      53706565 
 3723      644C696D 
 3723      697400
 3724              	.LASF39:
 3725 045d 67325F79 		.ascii	"g2_ypos\000"
 3725      706F7300 
 3726              	.LASF46:
 3727 0465 6C656674 		.ascii	"left\000"
 3727      00
 3728              	.LASF50:
 3729 046a 7475726E 		.ascii	"turnRight\000"
 3729      52696768 
 3729      7400
 3730              	.LASF35:
 3731 0474 67315F79 		.ascii	"g1_ypos\000"
 3731      706F7300 
 3732              	.LASF54:
 3733 047c 6164635F 		.ascii	"adc_isr\000"
 3733      69737200 
 3734              	.LASF9:
 3735 0484 73697A65 		.ascii	"sizetype\000"
 3735      74797065 
 3735      00
 3736              	.LASF5:
 3737 048d 6C6F6E67 		.ascii	"long unsigned int\000"
 3737      20756E73 
 3737      69676E65 
 3737      6420696E 
 3737      7400
 3738              	.LASF43:
 3739 049f 62797465 		.ascii	"byte_packet\000"
 3739      5F706163 
 3739      6B657400 
 3740              	.LASF12:
 3741 04ab 696E7433 		.ascii	"int32_t\000"
 3741      325F7400 
 3742              	.LASF120:
 3743 04b3 7061636B 		.ascii	"packet\000"
 3743      657400
 3744              	.LASF27:
 3745 04ba 726F626F 		.ascii	"robot_xpos\000"
 3745      745F7870 
 3745      6F7300
 3746              	.LASF47:
 3747 04c5 6272616B 		.ascii	"brakeMotor\000"
 3747      654D6F74 
 3747      6F7200
 3748              	.LASF114:
 3749 04d0 656E7472 		.ascii	"entry\000"
 3749      7900
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 80


 3750              	.LASF1:
 3751 04d6 756E7369 		.ascii	"unsigned char\000"
 3751      676E6564 
 3751      20636861 
 3751      7200
 3752              	.LASF113:
 3753 04e4 6C696E65 		.ascii	"line\000"
 3753      00
 3754              	.LASF57:
 3755 04e9 53746F70 		.ascii	"Stop_on_line\000"
 3755      5F6F6E5F 
 3755      6C696E65 
 3755      00
 3756              	.LASF79:
 3757 04f6 74735F65 		.ascii	"ts_enc\000"
 3757      6E6300
 3758              	.LASF108:
 3759 04fd 6272616B 		.ascii	"brakeFlag\000"
 3759      65466C61 
 3759      6700
 3760              	.LASF86:
 3761 0507 666C6167 		.ascii	"flag_ts_display\000"
 3761      5F74735F 
 3761      64697370 
 3761      6C617900 
 3762              	.LASF124:
 3763 0517 73746174 		.ascii	"state\000"
 3763      6500
 3764              	.LASF112:
 3765 051d 64697370 		.ascii	"displaystring\000"
 3765      6C617973 
 3765      7472696E 
 3765      6700
 3766              	.LASF99:
 3767 052b 6C617374 		.ascii	"last_quad_count1\000"
 3767      5F717561 
 3767      645F636F 
 3767      756E7431 
 3767      00
 3768              	.LASF100:
 3769 053c 6C617374 		.ascii	"last_quad_count2\000"
 3769      5F717561 
 3769      645F636F 
 3769      756E7432 
 3769      00
 3770              	.LASF76:
 3771 054d 75736250 		.ascii	"usbPutChar\000"
 3771      75744368 
 3771      617200
 3772              	.LASF0:
 3773 0558 7369676E 		.ascii	"signed char\000"
 3773      65642063 
 3773      68617200 
 3774              	.LASF3:
 3775 0564 73686F72 		.ascii	"short unsigned int\000"
 3775      7420756E 
 3775      7369676E 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 81


 3775      65642069 
 3775      6E7400
 3776              	.LASF29:
 3777 0577 726F626F 		.ascii	"robot_orientation\000"
 3777      745F6F72 
 3777      69656E74 
 3777      6174696F 
 3777      6E00
 3778              	.LASF74:
 3779 0589 6D61696E 		.ascii	"main\000"
 3779      00
 3780              	.LASF67:
 3781 058e 6E657874 		.ascii	"nextSpeed\000"
 3781      53706565 
 3781      6400
 3782              	.LASF13:
 3783 0598 75696E74 		.ascii	"uint8\000"
 3783      3800
 3784              	.LASF19:
 3785 059e 646F7562 		.ascii	"double\000"
 3785      6C6500
 3786              	.LASF105:
 3787 05a5 72696768 		.ascii	"right_duty_cycle\000"
 3787      745F6475 
 3787      74795F63 
 3787      79636C65 
 3787      00
 3788              	.LASF60:
 3789 05b6 68616E64 		.ascii	"handle_rx_binary\000"
 3789      6C655F72 
 3789      785F6269 
 3789      6E617279 
 3789      00
 3790              	.LASF123:
 3791 05c7 443A5C67 		.ascii	"D:\\gp1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 3791      70315C43 
 3791      53333031 
 3791      2D546561 
 3791      6D2D5265 
 3792              	.LASF72:
 3793 05f0 7072696E 		.ascii	"print_RF\000"
 3793      745F5246 
 3793      00
 3794              	.LASF30:
 3795 05f9 67305F78 		.ascii	"g0_xpos\000"
 3795      706F7300 
 3796              	.LASF89:
 3797 0601 666C6167 		.ascii	"flag_KB_string\000"
 3797      5F4B425F 
 3797      73747269 
 3797      6E6700
 3798              	.LASF36:
 3799 0610 67315F73 		.ascii	"g1_speed\000"
 3799      70656564 
 3799      00
 3800              	.LASF122:
 3801 0619 2E5C6D61 		.ascii	".\\main.c\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccaXuJBR.s 			page 82


 3801      696E2E63 
 3801      00
 3802              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
