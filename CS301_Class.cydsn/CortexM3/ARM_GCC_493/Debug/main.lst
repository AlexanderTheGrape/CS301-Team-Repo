ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	start_turn_count
 165              		.align	1
 166              		.type	start_turn_count, %object
 167              		.size	start_turn_count, 2
 168              	start_turn_count:
 169 0024 0000     		.space	2
 170              		.global	left_duty_cycle
 171              		.align	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 4


 172              		.type	left_duty_cycle, %object
 173              		.size	left_duty_cycle, 2
 174              	left_duty_cycle:
 175 0026 0000     		.space	2
 176              		.global	right_duty_cycle
 177              		.align	1
 178              		.type	right_duty_cycle, %object
 179              		.size	right_duty_cycle, 2
 180              	right_duty_cycle:
 181 0028 0000     		.space	2
 182              		.global	leftSpeedLimit
 183              		.align	1
 184              		.type	leftSpeedLimit, %object
 185              		.size	leftSpeedLimit, 2
 186              	leftSpeedLimit:
 187 002a 0000     		.space	2
 188              		.global	rightSpeedLimit
 189              		.align	1
 190              		.type	rightSpeedLimit, %object
 191              		.size	rightSpeedLimit, 2
 192              	rightSpeedLimit:
 193 002c 0000     		.space	2
 194              		.global	target_distance_cm
 195              		.data
 196              		.align	1
 197              		.type	target_distance_cm, %object
 198              		.size	target_distance_cm, 2
 199              	target_distance_cm:
 200 0002 6400     		.short	100
 201              		.global	accum_dist
 202              		.bss
 203              		.align	1
 204              		.type	accum_dist, %object
 205              		.size	accum_dist, 2
 206              	accum_dist:
 207 002e 0000     		.space	2
 208              		.global	target_distance_quad
 209              		.align	1
 210              		.type	target_distance_quad, %object
 211              		.size	target_distance_quad, 2
 212              	target_distance_quad:
 213 0030 0000     		.space	2
 214              		.global	quad_per_cm
 215              		.data
 216              		.align	2
 217              		.type	quad_per_cm, %object
 218              		.size	quad_per_cm, 4
 219              	quad_per_cm:
 220 0004 F0A73241 		.word	1093838832
 221              		.global	initial_pos_valid
 222              		.bss
 223              		.type	initial_pos_valid, %object
 224              		.size	initial_pos_valid, 1
 225              	initial_pos_valid:
 226 0032 00       		.space	1
 227              		.global	initial_x_pos
 228 0033 00       		.align	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 5


 229              		.type	initial_x_pos, %object
 230              		.size	initial_x_pos, 2
 231              	initial_x_pos:
 232 0034 0000     		.space	2
 233              		.global	initial_y_pos
 234              		.align	1
 235              		.type	initial_y_pos, %object
 236              		.size	initial_y_pos, 2
 237              	initial_y_pos:
 238 0036 0000     		.space	2
 239              		.comm	brakeFlag,1,1
 240              		.global	portOpen
 241              		.data
 242              		.type	portOpen, %object
 243              		.size	portOpen, 1
 244              	portOpen:
 245 0008 01       		.byte	1
 246              		.comm	prevVoltage,2,2
 247              		.comm	prevVoltage2,2,2
 248              		.global	displaystring
 249 0009 000000   		.align	2
 250              		.type	displaystring, %object
 251              		.size	displaystring, 64
 252              	displaystring:
 253 000c 43533330 		.ascii	"CS301 2016\012\000"
 253      31203230 
 253      31360A00 
 254 0018 00000000 		.space	52
 254      00000000 
 254      00000000 
 254      00000000 
 254      00000000 
 255              		.comm	line,64,4
 256              		.comm	entry,64,4
 257              		.comm	usbBuffer,64,4
 258              		.comm	buffer_state,32,4
 259              		.comm	system_state,32,4
 260              		.global	prev_movement_state
 261              		.type	prev_movement_state, %object
 262              		.size	prev_movement_state, 1
 263              	prev_movement_state:
 264 004c 03       		.byte	3
 265              		.global	movement_state
 266              		.type	movement_state, %object
 267              		.size	movement_state, 1
 268              	movement_state:
 269 004d 03       		.byte	3
 270              		.global	track_mode
 271              		.bss
 272              		.type	track_mode, %object
 273              		.size	track_mode, 1
 274              	track_mode:
 275 0038 00       		.space	1
 276              		.global	byteCount
 277              		.type	byteCount, %object
 278              		.size	byteCount, 1
 279              	byteCount:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 6


 280 0039 00       		.space	1
 281              		.comm	packet,2,4
 282              		.global	speed
 283              		.data
 284 004e 0000     		.align	3
 285              		.type	speed, %object
 286              		.size	speed, 8
 287              	speed:
 288 0050 00000000 		.word	0
 289 0054 00003040 		.word	1076887552
 290              		.comm	tracked_direction,1,1
 291              		.global	instructions
 292              		.bss
 293 003a 0000     		.align	2
 294              		.type	instructions, %object
 295              		.size	instructions, 400
 296              	instructions:
 297 003c 00000000 		.space	400
 297      00000000 
 297      00000000 
 297      00000000 
 297      00000000 
 298              		.global	instructionCount
 299              		.align	1
 300              		.type	instructionCount, %object
 301              		.size	instructionCount, 2
 302              	instructionCount:
 303 01cc 0000     		.space	2
 304              		.global	sensorsDisabled
 305              		.type	sensorsDisabled, %object
 306              		.size	sensorsDisabled, 1
 307              	sensorsDisabled:
 308 01ce 00       		.space	1
 309              		.global	robot_direction
 310              		.data
 311              		.type	robot_direction, %object
 312              		.size	robot_direction, 1
 313              	robot_direction:
 314 0058 04       		.byte	4
 315              		.global	path
 316              		.bss
 317 01cf 00       		.align	2
 318              		.type	path, %object
 319              		.size	path, 1200
 320              	path:
 321 01d0 00000000 		.space	1200
 321      00000000 
 321      00000000 
 321      00000000 
 321      00000000 
 322              		.global	start
 323              		.data
 324 0059 000000   		.align	2
 325              		.type	start, %object
 326              		.size	start, 2
 327              	start:
 328 005c 01       		.byte	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 7


 329 005d 01       		.byte	1
 330              		.global	destination
 331 005e 0000     		.align	2
 332              		.type	destination, %object
 333              		.size	destination, 2
 334              	destination:
 335 0060 0D       		.byte	13
 336 0061 11       		.byte	17
 337              		.global	map
 338 0062 0000     		.align	2
 339              		.type	map, %object
 340              		.size	map, 285
 341              	map:
 342 0064 01       		.byte	1
 343 0065 01       		.byte	1
 344 0066 01       		.byte	1
 345 0067 01       		.byte	1
 346 0068 01       		.byte	1
 347 0069 01       		.byte	1
 348 006a 01       		.byte	1
 349 006b 01       		.byte	1
 350 006c 01       		.byte	1
 351 006d 01       		.byte	1
 352 006e 01       		.byte	1
 353 006f 01       		.byte	1
 354 0070 01       		.byte	1
 355 0071 01       		.byte	1
 356 0072 01       		.byte	1
 357 0073 01       		.byte	1
 358 0074 01       		.byte	1
 359 0075 01       		.byte	1
 360 0076 01       		.byte	1
 361 0077 01       		.byte	1
 362 0078 00       		.byte	0
 363 0079 00       		.byte	0
 364 007a 00       		.byte	0
 365 007b 00       		.byte	0
 366 007c 00       		.byte	0
 367 007d 01       		.byte	1
 368 007e 00       		.byte	0
 369 007f 01       		.byte	1
 370 0080 00       		.byte	0
 371 0081 00       		.byte	0
 372 0082 00       		.byte	0
 373 0083 00       		.byte	0
 374 0084 00       		.byte	0
 375 0085 00       		.byte	0
 376 0086 00       		.byte	0
 377 0087 00       		.byte	0
 378 0088 00       		.byte	0
 379 0089 01       		.byte	1
 380 008a 01       		.byte	1
 381 008b 01       		.byte	1
 382 008c 01       		.byte	1
 383 008d 01       		.byte	1
 384 008e 01       		.byte	1
 385 008f 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 8


 386 0090 01       		.byte	1
 387 0091 00       		.byte	0
 388 0092 01       		.byte	1
 389 0093 00       		.byte	0
 390 0094 01       		.byte	1
 391 0095 00       		.byte	0
 392 0096 01       		.byte	1
 393 0097 01       		.byte	1
 394 0098 01       		.byte	1
 395 0099 01       		.byte	1
 396 009a 01       		.byte	1
 397 009b 00       		.byte	0
 398 009c 01       		.byte	1
 399 009d 01       		.byte	1
 400 009e 00       		.byte	0
 401 009f 00       		.byte	0
 402 00a0 00       		.byte	0
 403 00a1 01       		.byte	1
 404 00a2 00       		.byte	0
 405 00a3 01       		.byte	1
 406 00a4 00       		.byte	0
 407 00a5 00       		.byte	0
 408 00a6 00       		.byte	0
 409 00a7 01       		.byte	1
 410 00a8 00       		.byte	0
 411 00a9 00       		.byte	0
 412 00aa 00       		.byte	0
 413 00ab 00       		.byte	0
 414 00ac 00       		.byte	0
 415 00ad 01       		.byte	1
 416 00ae 00       		.byte	0
 417 00af 01       		.byte	1
 418 00b0 01       		.byte	1
 419 00b1 00       		.byte	0
 420 00b2 01       		.byte	1
 421 00b3 00       		.byte	0
 422 00b4 01       		.byte	1
 423 00b5 00       		.byte	0
 424 00b6 01       		.byte	1
 425 00b7 00       		.byte	0
 426 00b8 01       		.byte	1
 427 00b9 01       		.byte	1
 428 00ba 01       		.byte	1
 429 00bb 01       		.byte	1
 430 00bc 01       		.byte	1
 431 00bd 01       		.byte	1
 432 00be 01       		.byte	1
 433 00bf 00       		.byte	0
 434 00c0 01       		.byte	1
 435 00c1 00       		.byte	0
 436 00c2 01       		.byte	1
 437 00c3 01       		.byte	1
 438 00c4 00       		.byte	0
 439 00c5 01       		.byte	1
 440 00c6 00       		.byte	0
 441 00c7 00       		.byte	0
 442 00c8 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 9


 443 00c9 00       		.byte	0
 444 00ca 00       		.byte	0
 445 00cb 00       		.byte	0
 446 00cc 00       		.byte	0
 447 00cd 00       		.byte	0
 448 00ce 00       		.byte	0
 449 00cf 00       		.byte	0
 450 00d0 00       		.byte	0
 451 00d1 01       		.byte	1
 452 00d2 00       		.byte	0
 453 00d3 01       		.byte	1
 454 00d4 00       		.byte	0
 455 00d5 01       		.byte	1
 456 00d6 01       		.byte	1
 457 00d7 00       		.byte	0
 458 00d8 01       		.byte	1
 459 00d9 01       		.byte	1
 460 00da 01       		.byte	1
 461 00db 01       		.byte	1
 462 00dc 01       		.byte	1
 463 00dd 01       		.byte	1
 464 00de 01       		.byte	1
 465 00df 01       		.byte	1
 466 00e0 01       		.byte	1
 467 00e1 00       		.byte	0
 468 00e2 01       		.byte	1
 469 00e3 00       		.byte	0
 470 00e4 01       		.byte	1
 471 00e5 00       		.byte	0
 472 00e6 01       		.byte	1
 473 00e7 01       		.byte	1
 474 00e8 01       		.byte	1
 475 00e9 01       		.byte	1
 476 00ea 00       		.byte	0
 477 00eb 00       		.byte	0
 478 00ec 00       		.byte	0
 479 00ed 00       		.byte	0
 480 00ee 00       		.byte	0
 481 00ef 00       		.byte	0
 482 00f0 00       		.byte	0
 483 00f1 00       		.byte	0
 484 00f2 00       		.byte	0
 485 00f3 00       		.byte	0
 486 00f4 00       		.byte	0
 487 00f5 01       		.byte	1
 488 00f6 00       		.byte	0
 489 00f7 01       		.byte	1
 490 00f8 00       		.byte	0
 491 00f9 00       		.byte	0
 492 00fa 00       		.byte	0
 493 00fb 01       		.byte	1
 494 00fc 01       		.byte	1
 495 00fd 01       		.byte	1
 496 00fe 01       		.byte	1
 497 00ff 01       		.byte	1
 498 0100 01       		.byte	1
 499 0101 01       		.byte	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 10


 500 0102 01       		.byte	1
 501 0103 00       		.byte	0
 502 0104 01       		.byte	1
 503 0105 01       		.byte	1
 504 0106 01       		.byte	1
 505 0107 01       		.byte	1
 506 0108 01       		.byte	1
 507 0109 00       		.byte	0
 508 010a 01       		.byte	1
 509 010b 01       		.byte	1
 510 010c 01       		.byte	1
 511 010d 00       		.byte	0
 512 010e 01       		.byte	1
 513 010f 01       		.byte	1
 514 0110 00       		.byte	0
 515 0111 00       		.byte	0
 516 0112 00       		.byte	0
 517 0113 00       		.byte	0
 518 0114 00       		.byte	0
 519 0115 00       		.byte	0
 520 0116 00       		.byte	0
 521 0117 00       		.byte	0
 522 0118 00       		.byte	0
 523 0119 00       		.byte	0
 524 011a 00       		.byte	0
 525 011b 01       		.byte	1
 526 011c 00       		.byte	0
 527 011d 00       		.byte	0
 528 011e 00       		.byte	0
 529 011f 01       		.byte	1
 530 0120 00       		.byte	0
 531 0121 01       		.byte	1
 532 0122 01       		.byte	1
 533 0123 00       		.byte	0
 534 0124 01       		.byte	1
 535 0125 01       		.byte	1
 536 0126 01       		.byte	1
 537 0127 01       		.byte	1
 538 0128 01       		.byte	1
 539 0129 00       		.byte	0
 540 012a 01       		.byte	1
 541 012b 01       		.byte	1
 542 012c 01       		.byte	1
 543 012d 00       		.byte	0
 544 012e 01       		.byte	1
 545 012f 00       		.byte	0
 546 0130 01       		.byte	1
 547 0131 00       		.byte	0
 548 0132 01       		.byte	1
 549 0133 00       		.byte	0
 550 0134 01       		.byte	1
 551 0135 01       		.byte	1
 552 0136 00       		.byte	0
 553 0137 00       		.byte	0
 554 0138 00       		.byte	0
 555 0139 00       		.byte	0
 556 013a 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 11


 557 013b 01       		.byte	1
 558 013c 00       		.byte	0
 559 013d 00       		.byte	0
 560 013e 00       		.byte	0
 561 013f 01       		.byte	1
 562 0140 00       		.byte	0
 563 0141 00       		.byte	0
 564 0142 00       		.byte	0
 565 0143 01       		.byte	1
 566 0144 00       		.byte	0
 567 0145 00       		.byte	0
 568 0146 00       		.byte	0
 569 0147 01       		.byte	1
 570 0148 01       		.byte	1
 571 0149 00       		.byte	0
 572 014a 01       		.byte	1
 573 014b 01       		.byte	1
 574 014c 01       		.byte	1
 575 014d 00       		.byte	0
 576 014e 01       		.byte	1
 577 014f 01       		.byte	1
 578 0150 01       		.byte	1
 579 0151 00       		.byte	0
 580 0152 01       		.byte	1
 581 0153 01       		.byte	1
 582 0154 01       		.byte	1
 583 0155 00       		.byte	0
 584 0156 01       		.byte	1
 585 0157 01       		.byte	1
 586 0158 01       		.byte	1
 587 0159 00       		.byte	0
 588 015a 01       		.byte	1
 589 015b 01       		.byte	1
 590 015c 00       		.byte	0
 591 015d 00       		.byte	0
 592 015e 00       		.byte	0
 593 015f 01       		.byte	1
 594 0160 00       		.byte	0
 595 0161 00       		.byte	0
 596 0162 00       		.byte	0
 597 0163 00       		.byte	0
 598 0164 00       		.byte	0
 599 0165 00       		.byte	0
 600 0166 00       		.byte	0
 601 0167 01       		.byte	1
 602 0168 00       		.byte	0
 603 0169 00       		.byte	0
 604 016a 00       		.byte	0
 605 016b 00       		.byte	0
 606 016c 00       		.byte	0
 607 016d 01       		.byte	1
 608 016e 01       		.byte	1
 609 016f 01       		.byte	1
 610 0170 01       		.byte	1
 611 0171 01       		.byte	1
 612 0172 01       		.byte	1
 613 0173 01       		.byte	1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 12


 614 0174 01       		.byte	1
 615 0175 01       		.byte	1
 616 0176 01       		.byte	1
 617 0177 01       		.byte	1
 618 0178 01       		.byte	1
 619 0179 01       		.byte	1
 620 017a 01       		.byte	1
 621 017b 01       		.byte	1
 622 017c 01       		.byte	1
 623 017d 01       		.byte	1
 624 017e 01       		.byte	1
 625 017f 01       		.byte	1
 626 0180 01       		.byte	1
 627              		.global	food_list
 628 0181 000000   		.align	2
 629              		.type	food_list, %object
 630              		.size	food_list, 12
 631              	food_list:
 632 0184 05       		.byte	5
 633 0185 0B       		.byte	11
 634 0186 01       		.byte	1
 635 0187 11       		.byte	17
 636 0188 0D       		.byte	13
 637 0189 01       		.byte	1
 638 018a 00000000 		.space	6
 638      0000
 639              		.global	food_length
 640              		.type	food_length, %object
 641              		.size	food_length, 1
 642              	food_length:
 643 0190 03       		.byte	3
 644 0191 00000000 		.section	.text.handle_rx_binary,"ax",%progbits
 644      000000
 645              		.align	2
 646              		.global	handle_rx_binary
 647              		.thumb
 648              		.thumb_func
 649              		.type	handle_rx_binary, %function
 650              	handle_rx_binary:
 651              	.LFB63:
 652              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 13


  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** #include "pathfinder.h"
  34:.\main.c      **** //* ========================================
  35:.\main.c      **** void usbPutString(char *s);
  36:.\main.c      **** void usbPutChar(char c);
  37:.\main.c      **** //void handle_usb();
  38:.\main.c      **** //* ========================================
  39:.\main.c      **** 
  40:.\main.c      **** #define QUAD_RATIO 0.99556
  41:.\main.c      **** 
  42:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  43:.\main.c      **** uint16 instructionCount = 0;
  44:.\main.c      **** uint8 sensorsDisabled = 0;
  45:.\main.c      **** 
  46:.\main.c      **** uint8 robot_direction = 4;
  47:.\main.c      **** 
  48:.\main.c      **** uint8 path[DEFAULT_ARRAY_SIZE][3] = {0};
  49:.\main.c      **** uint8 start[2] = {1, 1};//(y, x) array starts at 0
  50:.\main.c      **** uint8 destination[2] = {13, 17};//(y, x)
  51:.\main.c      **** 
  52:.\main.c      **** 
  53:.\main.c      **** uint8 map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  54:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  56:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  57:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  58:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  59:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  60:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  61:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  62:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  63:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  64:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  65:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  66:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  67:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  68:.\main.c      **** //first number is the y coord, second is x
  69:.\main.c      **** //first number is row, second column
  70:.\main.c      **** 
  71:.\main.c      **** //uint8 food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  72:.\main.c      **** uint8 food_list[6][2]= {{5,11}, {1, 17}, {13, 1}};
  73:.\main.c      **** uint8 food_length = 3;
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 14


  74:.\main.c      **** 
  75:.\main.c      **** void changeToRF();
  76:.\main.c      **** void changeToBT();
  77:.\main.c      **** 
  78:.\main.c      **** void handle_rx_binary()
  79:.\main.c      **** {
 653              		.loc 1 79 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 32
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658 0000 80B4     		push	{r7}
 659              		.cfi_def_cfa_offset 4
 660              		.cfi_offset 7, -4
 661 0002 89B0     		sub	sp, sp, #36
 662              		.cfi_def_cfa_offset 40
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
  80:.\main.c      ****     if(flag_rx == 1)
 665              		.loc 1 80 0
 666 0006 524B     		ldr	r3, .L21
 667 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 668 000a 012B     		cmp	r3, #1
 669 000c 40F09A80 		bne	.L1
 670              	.LBB2:
  81:.\main.c      ****     {    
  82:.\main.c      ****         flag_rx = 0;
 671              		.loc 1 82 0
 672 0010 4F4B     		ldr	r3, .L21
 673 0012 0022     		movs	r2, #0
 674 0014 1A70     		strb	r2, [r3]
  83:.\main.c      ****         
  84:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 675              		.loc 1 84 0
 676 0016 4F4B     		ldr	r3, .L21+4
 677 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 678 001a 1B02     		lsls	r3, r3, #8
 679 001c 9AB2     		uxth	r2, r3
 680 001e 4D4B     		ldr	r3, .L21+4
 681 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 682 0022 9BB2     		uxth	r3, r3
 683 0024 1343     		orrs	r3, r3, r2
 684 0026 9BB2     		uxth	r3, r3
 685 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  85:.\main.c      ****         char byte_packet[12];
  86:.\main.c      ****         char string_packet[12];
  87:.\main.c      ****         
  88:.\main.c      ****         switch(byteCount)
 686              		.loc 1 88 0
 687 002a 4B4B     		ldr	r3, .L21+8
 688 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 689 002e 043B     		subs	r3, r3, #4
 690 0030 1E2B     		cmp	r3, #30
 691 0032 00F28780 		bhi	.L1
 692 0036 01A2     		adr	r2, .L5
 693 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 694              		.p2align 2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 15


 695              	.L5:
 696 003c B9000000 		.word	.L4+1
 697 0040 45010000 		.word	.L1+1
 698 0044 CD000000 		.word	.L6+1
 699 0048 45010000 		.word	.L1+1
 700 004c D5000000 		.word	.L7+1
 701 0050 45010000 		.word	.L1+1
 702 0054 DD000000 		.word	.L8+1
 703 0058 45010000 		.word	.L1+1
 704 005c E5000000 		.word	.L9+1
 705 0060 45010000 		.word	.L1+1
 706 0064 ED000000 		.word	.L10+1
 707 0068 45010000 		.word	.L1+1
 708 006c F5000000 		.word	.L11+1
 709 0070 45010000 		.word	.L1+1
 710 0074 FD000000 		.word	.L12+1
 711 0078 45010000 		.word	.L1+1
 712 007c 05010000 		.word	.L13+1
 713 0080 45010000 		.word	.L1+1
 714 0084 0D010000 		.word	.L14+1
 715 0088 45010000 		.word	.L1+1
 716 008c 15010000 		.word	.L15+1
 717 0090 45010000 		.word	.L1+1
 718 0094 1D010000 		.word	.L16+1
 719 0098 45010000 		.word	.L1+1
 720 009c 25010000 		.word	.L17+1
 721 00a0 45010000 		.word	.L1+1
 722 00a4 2D010000 		.word	.L18+1
 723 00a8 45010000 		.word	.L1+1
 724 00ac 35010000 		.word	.L19+1
 725 00b0 45010000 		.word	.L1+1
 726 00b4 3D010000 		.word	.L20+1
 727              		.p2align 1
 728              	.L4:
  89:.\main.c      ****         {
  90:.\main.c      ****             case 4:
  91:.\main.c      ****                 buffer_state.rssi = packet[0];
 729              		.loc 1 91 0
 730 00b8 264B     		ldr	r3, .L21+4
 731 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 732 00bc DAB2     		uxtb	r2, r3
 733 00be 274B     		ldr	r3, .L21+12
 734 00c0 1A70     		strb	r2, [r3]
  92:.\main.c      ****                 buffer_state.index = packet[1];
 735              		.loc 1 92 0
 736 00c2 244B     		ldr	r3, .L21+4
 737 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 738 00c6 254B     		ldr	r3, .L21+12
 739 00c8 5A70     		strb	r2, [r3, #1]
  93:.\main.c      ****             break;
 740              		.loc 1 93 0
 741 00ca 3BE0     		b	.L1
 742              	.L6:
  94:.\main.c      ****             case 6:
  95:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 743              		.loc 1 95 0
 744 00cc FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 16


 745 00ce 234B     		ldr	r3, .L21+12
 746 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  96:.\main.c      ****             break;
 747              		.loc 1 96 0
 748 00d2 37E0     		b	.L1
 749              	.L7:
  97:.\main.c      ****             case 8:
  98:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 750              		.loc 1 98 0
 751 00d4 FA8B     		ldrh	r2, [r7, #30]
 752 00d6 214B     		ldr	r3, .L21+12
 753 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  99:.\main.c      ****             break;
 754              		.loc 1 99 0
 755 00da 33E0     		b	.L1
 756              	.L8:
 100:.\main.c      ****             case 10:
 101:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 757              		.loc 1 101 0
 758 00dc FA8B     		ldrh	r2, [r7, #30]
 759 00de 1F4B     		ldr	r3, .L21+12
 760 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 102:.\main.c      ****             break;
 761              		.loc 1 102 0
 762 00e2 2FE0     		b	.L1
 763              	.L9:
 103:.\main.c      ****             case 12:
 104:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 764              		.loc 1 104 0
 765 00e4 FA8B     		ldrh	r2, [r7, #30]
 766 00e6 1D4B     		ldr	r3, .L21+12
 767 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 105:.\main.c      ****             break;
 768              		.loc 1 105 0
 769 00ea 2BE0     		b	.L1
 770              	.L10:
 106:.\main.c      ****             case 14:
 107:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 771              		.loc 1 107 0
 772 00ec FA8B     		ldrh	r2, [r7, #30]
 773 00ee 1B4B     		ldr	r3, .L21+12
 774 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 108:.\main.c      ****             break;
 775              		.loc 1 108 0
 776 00f2 27E0     		b	.L1
 777              	.L11:
 109:.\main.c      ****             case 16:
 110:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 778              		.loc 1 110 0
 779 00f4 FA8B     		ldrh	r2, [r7, #30]
 780 00f6 194B     		ldr	r3, .L21+12
 781 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 111:.\main.c      ****             break;
 782              		.loc 1 111 0
 783 00fa 23E0     		b	.L1
 784              	.L12:
 112:.\main.c      ****             case 18:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 17


 113:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 785              		.loc 1 113 0
 786 00fc FA8B     		ldrh	r2, [r7, #30]
 787 00fe 174B     		ldr	r3, .L21+12
 788 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 114:.\main.c      ****             break;
 789              		.loc 1 114 0
 790 0102 1FE0     		b	.L1
 791              	.L13:
 115:.\main.c      ****             case 20:
 116:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 792              		.loc 1 116 0
 793 0104 FA8B     		ldrh	r2, [r7, #30]
 794 0106 154B     		ldr	r3, .L21+12
 795 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 117:.\main.c      ****             break;
 796              		.loc 1 117 0
 797 010a 1BE0     		b	.L1
 798              	.L14:
 118:.\main.c      ****             case 22:
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 799              		.loc 1 119 0
 800 010c FA8B     		ldrh	r2, [r7, #30]
 801 010e 134B     		ldr	r3, .L21+12
 802 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 803              		.loc 1 120 0
 804 0112 17E0     		b	.L1
 805              	.L15:
 121:.\main.c      ****             case 24:
 122:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 806              		.loc 1 122 0
 807 0114 FA8B     		ldrh	r2, [r7, #30]
 808 0116 114B     		ldr	r3, .L21+12
 809 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 123:.\main.c      ****             break;
 810              		.loc 1 123 0
 811 011a 13E0     		b	.L1
 812              	.L16:
 124:.\main.c      ****             case 26:
 125:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 813              		.loc 1 125 0
 814 011c FA8B     		ldrh	r2, [r7, #30]
 815 011e 0F4B     		ldr	r3, .L21+12
 816 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 126:.\main.c      ****             break;
 817              		.loc 1 126 0
 818 0122 0FE0     		b	.L1
 819              	.L17:
 127:.\main.c      ****             case 28:
 128:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 820              		.loc 1 128 0
 821 0124 FA8B     		ldrh	r2, [r7, #30]
 822 0126 0D4B     		ldr	r3, .L21+12
 823 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 129:.\main.c      ****             break;
 824              		.loc 1 129 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 18


 825 012a 0BE0     		b	.L1
 826              	.L18:
 130:.\main.c      ****             case 30:
 131:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 827              		.loc 1 131 0
 828 012c FA8B     		ldrh	r2, [r7, #30]
 829 012e 0B4B     		ldr	r3, .L21+12
 830 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 132:.\main.c      ****             break;
 831              		.loc 1 132 0
 832 0132 07E0     		b	.L1
 833              	.L19:
 133:.\main.c      ****             case 32:
 134:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 834              		.loc 1 134 0
 835 0134 FA8B     		ldrh	r2, [r7, #30]
 836 0136 094B     		ldr	r3, .L21+12
 837 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 135:.\main.c      ****             break;
 838              		.loc 1 135 0
 839 013a 03E0     		b	.L1
 840              	.L20:
 136:.\main.c      ****             case 34:
 137:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 841              		.loc 1 137 0
 842 013c FA8B     		ldrh	r2, [r7, #30]
 843 013e 074B     		ldr	r3, .L21+12
 844 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 138:.\main.c      ****             break;
 845              		.loc 1 138 0
 846 0142 00BF     		nop
 847              	.L1:
 848              	.LBE2:
 139:.\main.c      ****         }
 140:.\main.c      ****     }
 141:.\main.c      **** }
 849              		.loc 1 141 0
 850 0144 2437     		adds	r7, r7, #36
 851              		.cfi_def_cfa_offset 4
 852 0146 BD46     		mov	sp, r7
 853              		.cfi_def_cfa_register 13
 854              		@ sp needed
 855 0148 5DF8047B 		ldr	r7, [sp], #4
 856              		.cfi_restore 7
 857              		.cfi_def_cfa_offset 0
 858 014c 7047     		bx	lr
 859              	.L22:
 860 014e 00BF     		.align	2
 861              	.L21:
 862 0150 00000000 		.word	flag_rx
 863 0154 00000000 		.word	packet
 864 0158 00000000 		.word	byteCount
 865 015c 00000000 		.word	buffer_state
 866              		.cfi_endproc
 867              	.LFE63:
 868              		.size	handle_rx_binary, .-handle_rx_binary
 869              		.section	.text.setLeftDir,"ax",%progbits
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 19


 870              		.align	2
 871              		.global	setLeftDir
 872              		.thumb
 873              		.thumb_func
 874              		.type	setLeftDir, %function
 875              	setLeftDir:
 876              	.LFB64:
 142:.\main.c      **** 
 143:.\main.c      **** void setLeftDir(uint8 dir)
 144:.\main.c      **** {
 877              		.loc 1 144 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 80B5     		push	{r7, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 82B0     		sub	sp, sp, #8
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 889 0006 0346     		mov	r3, r0
 890 0008 FB71     		strb	r3, [r7, #7]
 145:.\main.c      ****     M2_IN2_Write(dir);
 891              		.loc 1 145 0
 892 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 893 000c 1846     		mov	r0, r3
 894 000e FFF7FEFF 		bl	M2_IN2_Write
 146:.\main.c      **** }
 895              		.loc 1 146 0
 896 0012 0837     		adds	r7, r7, #8
 897              		.cfi_def_cfa_offset 8
 898 0014 BD46     		mov	sp, r7
 899              		.cfi_def_cfa_register 13
 900              		@ sp needed
 901 0016 80BD     		pop	{r7, pc}
 902              		.cfi_endproc
 903              	.LFE64:
 904              		.size	setLeftDir, .-setLeftDir
 905              		.section	.text.setRightDir,"ax",%progbits
 906              		.align	2
 907              		.global	setRightDir
 908              		.thumb
 909              		.thumb_func
 910              		.type	setRightDir, %function
 911              	setRightDir:
 912              	.LFB65:
 147:.\main.c      **** 
 148:.\main.c      **** void setRightDir(uint8 dir)
 149:.\main.c      **** {
 913              		.loc 1 149 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 8
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 20


 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 82B0     		sub	sp, sp, #8
 922              		.cfi_def_cfa_offset 16
 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 0346     		mov	r3, r0
 926 0008 FB71     		strb	r3, [r7, #7]
 150:.\main.c      ****     M1_IN2_Write(dir);
 927              		.loc 1 150 0
 928 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 929 000c 1846     		mov	r0, r3
 930 000e FFF7FEFF 		bl	M1_IN2_Write
 151:.\main.c      **** }
 931              		.loc 1 151 0
 932 0012 0837     		adds	r7, r7, #8
 933              		.cfi_def_cfa_offset 8
 934 0014 BD46     		mov	sp, r7
 935              		.cfi_def_cfa_register 13
 936              		@ sp needed
 937 0016 80BD     		pop	{r7, pc}
 938              		.cfi_endproc
 939              	.LFE65:
 940              		.size	setRightDir, .-setRightDir
 941              		.section	.rodata
 942              		.align	2
 943              	.LC0:
 944 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 944      2025640D 
 944      0A00
 945              		.section	.text.reverseDirection,"ax",%progbits
 946              		.align	2
 947              		.global	reverseDirection
 948              		.thumb
 949              		.thumb_func
 950              		.type	reverseDirection, %function
 951              	reverseDirection:
 952              	.LFB66:
 152:.\main.c      **** 
 153:.\main.c      **** void reverseDirection()
 154:.\main.c      **** {
 953              		.loc 1 154 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 16
 956              		@ frame_needed = 1, uses_anonymous_args = 0
 957 0000 80B5     		push	{r7, lr}
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 84B0     		sub	sp, sp, #16
 962              		.cfi_def_cfa_offset 24
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 155:.\main.c      ****     direction = !direction;
 965              		.loc 1 155 0
 966 0006 114B     		ldr	r3, .L26
 967 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 21


 968 000a 002B     		cmp	r3, #0
 969 000c 0CBF     		ite	eq
 970 000e 0123     		moveq	r3, #1
 971 0010 0023     		movne	r3, #0
 972 0012 DBB2     		uxtb	r3, r3
 973 0014 1A46     		mov	r2, r3
 974 0016 0D4B     		ldr	r3, .L26
 975 0018 1A70     		strb	r2, [r3]
 156:.\main.c      ****     setLeftDir(direction);
 976              		.loc 1 156 0
 977 001a 0C4B     		ldr	r3, .L26
 978 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 979 001e 1846     		mov	r0, r3
 980 0020 FFF7FEFF 		bl	setLeftDir
 157:.\main.c      ****     setRightDir(direction);
 981              		.loc 1 157 0
 982 0024 094B     		ldr	r3, .L26
 983 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 0028 1846     		mov	r0, r3
 985 002a FFF7FEFF 		bl	setRightDir
 158:.\main.c      ****     char mes[16];
 159:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 986              		.loc 1 159 0
 987 002e 074B     		ldr	r3, .L26
 988 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0032 1A46     		mov	r2, r3
 990 0034 3B46     		mov	r3, r7
 991 0036 1846     		mov	r0, r3
 992 0038 0549     		ldr	r1, .L26+4
 993 003a FFF7FEFF 		bl	sprintf
 160:.\main.c      ****     UART_PutString(mes);
 994              		.loc 1 160 0
 995 003e 3B46     		mov	r3, r7
 996 0040 1846     		mov	r0, r3
 997 0042 FFF7FEFF 		bl	UART_PutString
 161:.\main.c      **** }
 998              		.loc 1 161 0
 999 0046 1037     		adds	r7, r7, #16
 1000              		.cfi_def_cfa_offset 8
 1001 0048 BD46     		mov	sp, r7
 1002              		.cfi_def_cfa_register 13
 1003              		@ sp needed
 1004 004a 80BD     		pop	{r7, pc}
 1005              	.L27:
 1006              		.align	2
 1007              	.L26:
 1008 004c 00000000 		.word	direction
 1009 0050 00000000 		.word	.LC0
 1010              		.cfi_endproc
 1011              	.LFE66:
 1012              		.size	reverseDirection, .-reverseDirection
 1013              		.global	__aeabi_dcmplt
 1014              		.global	__aeabi_dmul
 1015              		.global	__aeabi_d2iz
 1016              		.section	.text.setSpeed,"ax",%progbits
 1017              		.align	2
 1018              		.global	setSpeed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 22


 1019              		.thumb
 1020              		.thumb_func
 1021              		.type	setSpeed, %function
 1022              	setSpeed:
 1023              	.LFB67:
 162:.\main.c      **** 
 163:.\main.c      **** void setSpeed(double left, double right){
 1024              		.loc 1 163 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 24
 1027              		@ frame_needed = 1, uses_anonymous_args = 0
 1028 0000 80B5     		push	{r7, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 1032 0002 86B0     		sub	sp, sp, #24
 1033              		.cfi_def_cfa_offset 32
 1034 0004 00AF     		add	r7, sp, #0
 1035              		.cfi_def_cfa_register 7
 1036 0006 C7E90201 		strd	r0, [r7, #8]
 1037 000a C7E90023 		strd	r2, [r7]
 164:.\main.c      ****     if(right < 0.0)
 1038              		.loc 1 164 0
 1039 000e D7E90001 		ldrd	r0, [r7]
 1040 0012 4FF00002 		mov	r2, #0
 1041 0016 4FF00003 		mov	r3, #0
 1042 001a FFF7FEFF 		bl	__aeabi_dcmplt
 1043 001e 0346     		mov	r3, r0
 1044 0020 002B     		cmp	r3, #0
 1045 0022 10D0     		beq	.L37
 165:.\main.c      ****     {
 166:.\main.c      ****         //char mes[16];
 167:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 168:.\main.c      ****        // UART_PutString(mes);
 169:.\main.c      ****         setRightDir(!direction);
 1046              		.loc 1 169 0
 1047 0024 304B     		ldr	r3, .L39+8
 1048 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1049 0028 002B     		cmp	r3, #0
 1050 002a 0CBF     		ite	eq
 1051 002c 0123     		moveq	r3, #1
 1052 002e 0023     		movne	r3, #0
 1053 0030 DBB2     		uxtb	r3, r3
 1054 0032 1846     		mov	r0, r3
 1055 0034 FFF7FEFF 		bl	setRightDir
 170:.\main.c      ****         right = -right;
 1056              		.loc 1 170 0
 1057 0038 3B68     		ldr	r3, [r7]
 1058 003a 3B60     		str	r3, [r7]
 1059 003c 7B68     		ldr	r3, [r7, #4]
 1060 003e 83F00043 		eor	r3, r3, #-2147483648
 1061 0042 7B60     		str	r3, [r7, #4]
 1062 0044 04E0     		b	.L31
 1063              	.L37:
 171:.\main.c      ****     }
 172:.\main.c      ****     else setRightDir(direction);
 1064              		.loc 1 172 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 23


 1065 0046 284B     		ldr	r3, .L39+8
 1066 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1067 004a 1846     		mov	r0, r3
 1068 004c FFF7FEFF 		bl	setRightDir
 1069              	.L31:
 173:.\main.c      ****     
 174:.\main.c      ****     if(left < 0.0)
 1070              		.loc 1 174 0
 1071 0050 D7E90201 		ldrd	r0, [r7, #8]
 1072 0054 4FF00002 		mov	r2, #0
 1073 0058 4FF00003 		mov	r3, #0
 1074 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1075 0060 0346     		mov	r3, r0
 1076 0062 002B     		cmp	r3, #0
 1077 0064 10D0     		beq	.L38
 175:.\main.c      ****     {
 176:.\main.c      ****        // char mes[16];
 177:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 178:.\main.c      ****         //UART_PutString(mes);
 179:.\main.c      ****         setLeftDir(!direction);
 1078              		.loc 1 179 0
 1079 0066 204B     		ldr	r3, .L39+8
 1080 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1081 006a 002B     		cmp	r3, #0
 1082 006c 0CBF     		ite	eq
 1083 006e 0123     		moveq	r3, #1
 1084 0070 0023     		movne	r3, #0
 1085 0072 DBB2     		uxtb	r3, r3
 1086 0074 1846     		mov	r0, r3
 1087 0076 FFF7FEFF 		bl	setLeftDir
 180:.\main.c      ****         left = -left;
 1088              		.loc 1 180 0
 1089 007a BB68     		ldr	r3, [r7, #8]
 1090 007c BB60     		str	r3, [r7, #8]
 1091 007e FB68     		ldr	r3, [r7, #12]
 1092 0080 83F00043 		eor	r3, r3, #-2147483648
 1093 0084 FB60     		str	r3, [r7, #12]
 1094 0086 04E0     		b	.L34
 1095              	.L38:
 181:.\main.c      ****     }
 182:.\main.c      ****     else setLeftDir(direction);
 1096              		.loc 1 182 0
 1097 0088 174B     		ldr	r3, .L39+8
 1098 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1099 008c 1846     		mov	r0, r3
 1100 008e FFF7FEFF 		bl	setLeftDir
 1101              	.L34:
 183:.\main.c      ****     
 184:.\main.c      ****     int16 countsLeft = left*QUAD_RATIO;
 1102              		.loc 1 184 0
 1103 0092 D7E90201 		ldrd	r0, [r7, #8]
 1104 0096 12A3     		adr	r3, .L39
 1105 0098 D3E90023 		ldrd	r2, [r3]
 1106 009c FFF7FEFF 		bl	__aeabi_dmul
 1107 00a0 0246     		mov	r2, r0
 1108 00a2 0B46     		mov	r3, r1
 1109 00a4 1046     		mov	r0, r2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 24


 1110 00a6 1946     		mov	r1, r3
 1111 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 1112 00ac 0346     		mov	r3, r0
 1113 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 185:.\main.c      ****     int16 countsRight = right*QUAD_RATIO;
 1114              		.loc 1 185 0
 1115 00b0 D7E90001 		ldrd	r0, [r7]
 1116 00b4 0AA3     		adr	r3, .L39
 1117 00b6 D3E90023 		ldrd	r2, [r3]
 1118 00ba FFF7FEFF 		bl	__aeabi_dmul
 1119 00be 0246     		mov	r2, r0
 1120 00c0 0B46     		mov	r3, r1
 1121 00c2 1046     		mov	r0, r2
 1122 00c4 1946     		mov	r1, r3
 1123 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 1124 00ca 0346     		mov	r3, r0
 1125 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 186:.\main.c      ****     
 187:.\main.c      ****     leftSpeedLimit = countsRight;
 1126              		.loc 1 187 0
 1127 00ce 074A     		ldr	r2, .L39+12
 1128 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1129 00d2 1380     		strh	r3, [r2]	@ movhi
 188:.\main.c      ****     rightSpeedLimit = countsLeft;
 1130              		.loc 1 188 0
 1131 00d4 064A     		ldr	r2, .L39+16
 1132 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1133 00d8 1380     		strh	r3, [r2]	@ movhi
 189:.\main.c      **** }
 1134              		.loc 1 189 0
 1135 00da 1837     		adds	r7, r7, #24
 1136              		.cfi_def_cfa_offset 8
 1137 00dc BD46     		mov	sp, r7
 1138              		.cfi_def_cfa_register 13
 1139              		@ sp needed
 1140 00de 80BD     		pop	{r7, pc}
 1141              	.L40:
 1142              		.align	3
 1143              	.L39:
 1144 00e0 969526A5 		.word	-1524197994
 1145 00e4 A0DBEF3F 		.word	1072683936
 1146 00e8 00000000 		.word	direction
 1147 00ec 00000000 		.word	leftSpeedLimit
 1148 00f0 00000000 		.word	rightSpeedLimit
 1149              		.cfi_endproc
 1150              	.LFE67:
 1151              		.size	setSpeed, .-setSpeed
 1152 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 1153              		.align	2
 1154              		.global	brakeLeft
 1155              		.thumb
 1156              		.thumb_func
 1157              		.type	brakeLeft, %function
 1158              	brakeLeft:
 1159              	.LFB68:
 190:.\main.c      **** 
 191:.\main.c      **** void brakeLeft()
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 25


 192:.\main.c      **** {
 1160              		.loc 1 192 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164 0000 80B5     		push	{r7, lr}
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 7, -8
 1167              		.cfi_offset 14, -4
 1168 0002 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 193:.\main.c      ****     PWM_1_WriteCompare(0);
 1170              		.loc 1 193 0
 1171 0004 0020     		movs	r0, #0
 1172 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 194:.\main.c      ****     left_duty_cycle = 0;
 1173              		.loc 1 194 0
 1174 000a 024B     		ldr	r3, .L42
 1175 000c 0022     		movs	r2, #0
 1176 000e 1A80     		strh	r2, [r3]	@ movhi
 195:.\main.c      **** }
 1177              		.loc 1 195 0
 1178 0010 80BD     		pop	{r7, pc}
 1179              	.L43:
 1180 0012 00BF     		.align	2
 1181              	.L42:
 1182 0014 00000000 		.word	left_duty_cycle
 1183              		.cfi_endproc
 1184              	.LFE68:
 1185              		.size	brakeLeft, .-brakeLeft
 1186              		.section	.text.brakeRight,"ax",%progbits
 1187              		.align	2
 1188              		.global	brakeRight
 1189              		.thumb
 1190              		.thumb_func
 1191              		.type	brakeRight, %function
 1192              	brakeRight:
 1193              	.LFB69:
 196:.\main.c      **** 
 197:.\main.c      **** void brakeRight()
 198:.\main.c      **** {
 1194              		.loc 1 198 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 00AF     		add	r7, sp, #0
 1203              		.cfi_def_cfa_register 7
 199:.\main.c      ****      PWM_2_WriteCompare(0);
 1204              		.loc 1 199 0
 1205 0004 0020     		movs	r0, #0
 1206 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 200:.\main.c      ****      right_duty_cycle = 0;
 1207              		.loc 1 200 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 26


 1208 000a 024B     		ldr	r3, .L45
 1209 000c 0022     		movs	r2, #0
 1210 000e 1A80     		strh	r2, [r3]	@ movhi
 201:.\main.c      **** }
 1211              		.loc 1 201 0
 1212 0010 80BD     		pop	{r7, pc}
 1213              	.L46:
 1214 0012 00BF     		.align	2
 1215              	.L45:
 1216 0014 00000000 		.word	right_duty_cycle
 1217              		.cfi_endproc
 1218              	.LFE69:
 1219              		.size	brakeRight, .-brakeRight
 1220              		.section	.text.brakeMotor,"ax",%progbits
 1221              		.align	2
 1222              		.global	brakeMotor
 1223              		.thumb
 1224              		.thumb_func
 1225              		.type	brakeMotor, %function
 1226              	brakeMotor:
 1227              	.LFB70:
 202:.\main.c      **** 
 203:.\main.c      **** void brakeMotor(){
 1228              		.loc 1 203 0
 1229              		.cfi_startproc
 1230              		@ args = 0, pretend = 0, frame = 0
 1231              		@ frame_needed = 1, uses_anonymous_args = 0
 1232 0000 80B5     		push	{r7, lr}
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 00AF     		add	r7, sp, #0
 1237              		.cfi_def_cfa_register 7
 204:.\main.c      ****     setSpeed(0, 0);
 1238              		.loc 1 204 0
 1239 0004 4FF00000 		mov	r0, #0
 1240 0008 4FF00001 		mov	r1, #0
 1241 000c 4FF00002 		mov	r2, #0
 1242 0010 4FF00003 		mov	r3, #0
 1243 0014 FFF7FEFF 		bl	setSpeed
 205:.\main.c      ****     brakeLeft();
 1244              		.loc 1 205 0
 1245 0018 FFF7FEFF 		bl	brakeLeft
 206:.\main.c      ****     brakeRight();
 1246              		.loc 1 206 0
 1247 001c FFF7FEFF 		bl	brakeRight
 207:.\main.c      **** }
 1248              		.loc 1 207 0
 1249 0020 80BD     		pop	{r7, pc}
 1250              		.cfi_endproc
 1251              	.LFE70:
 1252              		.size	brakeMotor, .-brakeMotor
 1253 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 1254              		.align	2
 1255              		.global	driveForwards
 1256              		.thumb
 1257              		.thumb_func
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 27


 1258              		.type	driveForwards, %function
 1259              	driveForwards:
 1260              	.LFB71:
 208:.\main.c      **** 
 209:.\main.c      **** void driveForwards()
 210:.\main.c      **** {
 1261              		.loc 1 210 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 0
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0000 80B5     		push	{r7, lr}
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
 1269 0002 00AF     		add	r7, sp, #0
 1270              		.cfi_def_cfa_register 7
 211:.\main.c      ****     setSpeed(speed, speed);
 1271              		.loc 1 211 0
 1272 0004 044B     		ldr	r3, .L49
 1273 0006 D3E90001 		ldrd	r0, [r3]
 1274 000a 034B     		ldr	r3, .L49
 1275 000c D3E90023 		ldrd	r2, [r3]
 1276 0010 FFF7FEFF 		bl	setSpeed
 212:.\main.c      **** }
 1277              		.loc 1 212 0
 1278 0014 80BD     		pop	{r7, pc}
 1279              	.L50:
 1280 0016 00BF     		.align	2
 1281              	.L49:
 1282 0018 00000000 		.word	speed
 1283              		.cfi_endproc
 1284              	.LFE71:
 1285              		.size	driveForwards, .-driveForwards
 1286              		.global	__aeabi_dadd
 1287              		.section	.text.turnRight,"ax",%progbits
 1288              		.align	2
 1289              		.global	turnRight
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	turnRight, %function
 1293              	turnRight:
 1294              	.LFB72:
 213:.\main.c      **** 
 214:.\main.c      **** void turnRight()
 215:.\main.c      **** {
 1295              		.loc 1 215 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 80B5     		push	{r7, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 0002 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 216:.\main.c      ****     setSpeed(0,speed*2.0);
 1305              		.loc 1 216 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 28


 1306 0004 074B     		ldr	r3, .L52
 1307 0006 D3E90023 		ldrd	r2, [r3]
 1308 000a 1046     		mov	r0, r2
 1309 000c 1946     		mov	r1, r3
 1310 000e FFF7FEFF 		bl	__aeabi_dadd
 1311 0012 0246     		mov	r2, r0
 1312 0014 0B46     		mov	r3, r1
 1313 0016 4FF00000 		mov	r0, #0
 1314 001a 4FF00001 		mov	r1, #0
 1315 001e FFF7FEFF 		bl	setSpeed
 217:.\main.c      **** }
 1316              		.loc 1 217 0
 1317 0022 80BD     		pop	{r7, pc}
 1318              	.L53:
 1319              		.align	2
 1320              	.L52:
 1321 0024 00000000 		.word	speed
 1322              		.cfi_endproc
 1323              	.LFE72:
 1324              		.size	turnRight, .-turnRight
 1325              		.section	.text.turnLeft,"ax",%progbits
 1326              		.align	2
 1327              		.global	turnLeft
 1328              		.thumb
 1329              		.thumb_func
 1330              		.type	turnLeft, %function
 1331              	turnLeft:
 1332              	.LFB73:
 218:.\main.c      **** 
 219:.\main.c      **** void turnLeft()
 220:.\main.c      **** {
 1333              		.loc 1 220 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337 0000 80B5     		push	{r7, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 00AF     		add	r7, sp, #0
 1342              		.cfi_def_cfa_register 7
 221:.\main.c      ****     setSpeed(speed*2.0,0);
 1343              		.loc 1 221 0
 1344 0004 084B     		ldr	r3, .L55
 1345 0006 D3E90023 		ldrd	r2, [r3]
 1346 000a 1046     		mov	r0, r2
 1347 000c 1946     		mov	r1, r3
 1348 000e FFF7FEFF 		bl	__aeabi_dadd
 1349 0012 0246     		mov	r2, r0
 1350 0014 0B46     		mov	r3, r1
 1351 0016 1046     		mov	r0, r2
 1352 0018 1946     		mov	r1, r3
 1353 001a 4FF00002 		mov	r2, #0
 1354 001e 4FF00003 		mov	r3, #0
 1355 0022 FFF7FEFF 		bl	setSpeed
 222:.\main.c      **** }
 1356              		.loc 1 222 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 29


 1357 0026 80BD     		pop	{r7, pc}
 1358              	.L56:
 1359              		.align	2
 1360              	.L55:
 1361 0028 00000000 		.word	speed
 1362              		.cfi_endproc
 1363              	.LFE73:
 1364              		.size	turnLeft, .-turnLeft
 1365              		.section	.text.turnU,"ax",%progbits
 1366              		.align	2
 1367              		.global	turnU
 1368              		.thumb
 1369              		.thumb_func
 1370              		.type	turnU, %function
 1371              	turnU:
 1372              	.LFB74:
 223:.\main.c      **** 
 224:.\main.c      **** void turnU()
 225:.\main.c      **** {
 1373              		.loc 1 225 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 0
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 B0B5     		push	{r4, r5, r7, lr}
 1378              		.cfi_def_cfa_offset 16
 1379              		.cfi_offset 4, -16
 1380              		.cfi_offset 5, -12
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383 0002 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 226:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 1385              		.loc 1 226 0
 1386 0004 0E4B     		ldr	r3, .L58
 1387 0006 D3E90023 		ldrd	r2, [r3]
 1388 000a 1446     		mov	r4, r2
 1389 000c 83F00045 		eor	r5, r3, #-2147483648
 1390 0010 2046     		mov	r0, r4
 1391 0012 2946     		mov	r1, r5
 1392 0014 2246     		mov	r2, r4
 1393 0016 2B46     		mov	r3, r5
 1394 0018 FFF7FEFF 		bl	__aeabi_dadd
 1395 001c 0246     		mov	r2, r0
 1396 001e 0B46     		mov	r3, r1
 1397 0020 1446     		mov	r4, r2
 1398 0022 1D46     		mov	r5, r3
 1399 0024 064B     		ldr	r3, .L58
 1400 0026 D3E90023 		ldrd	r2, [r3]
 1401 002a 1046     		mov	r0, r2
 1402 002c 1946     		mov	r1, r3
 1403 002e FFF7FEFF 		bl	__aeabi_dadd
 1404 0032 0246     		mov	r2, r0
 1405 0034 0B46     		mov	r3, r1
 1406 0036 2046     		mov	r0, r4
 1407 0038 2946     		mov	r1, r5
 1408 003a FFF7FEFF 		bl	setSpeed
 227:.\main.c      **** }
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 30


 1409              		.loc 1 227 0
 1410 003e B0BD     		pop	{r4, r5, r7, pc}
 1411              	.L59:
 1412              		.align	2
 1413              	.L58:
 1414 0040 00000000 		.word	speed
 1415              		.cfi_endproc
 1416              	.LFE74:
 1417              		.size	turnU, .-turnU
 1418              		.section	.text.initTurnLeft,"ax",%progbits
 1419              		.align	2
 1420              		.global	initTurnLeft
 1421              		.thumb
 1422              		.thumb_func
 1423              		.type	initTurnLeft, %function
 1424              	initTurnLeft:
 1425              	.LFB75:
 228:.\main.c      **** 
 229:.\main.c      **** void initTurnLeft(){
 1426              		.loc 1 229 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 00AF     		add	r7, sp, #0
 1435              		.cfi_def_cfa_register 7
 230:.\main.c      ****     Timer_2_Stop();
 1436              		.loc 1 230 0
 1437 0004 FFF7FEFF 		bl	Timer_2_Stop
 231:.\main.c      ****     prev_movement_state = movement_state;
 1438              		.loc 1 231 0
 1439 0008 084B     		ldr	r3, .L61
 1440 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1441 000c 084B     		ldr	r3, .L61+4
 1442 000e 1A70     		strb	r2, [r3]
 232:.\main.c      ****     movement_state = LTURN;
 1443              		.loc 1 232 0
 1444 0010 064B     		ldr	r3, .L61
 1445 0012 0122     		movs	r2, #1
 1446 0014 1A70     		strb	r2, [r3]
 233:.\main.c      ****     brakeLeft();
 1447              		.loc 1 233 0
 1448 0016 FFF7FEFF 		bl	brakeLeft
 234:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1449              		.loc 1 234 0
 1450 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1451 001e 0346     		mov	r3, r0
 1452 0020 1A46     		mov	r2, r3
 1453 0022 044B     		ldr	r3, .L61+8
 1454 0024 1A80     		strh	r2, [r3]	@ movhi
 235:.\main.c      ****     Timer_2_Start();
 1455              		.loc 1 235 0
 1456 0026 FFF7FEFF 		bl	Timer_2_Start
 236:.\main.c      **** }
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 31


 1457              		.loc 1 236 0
 1458 002a 80BD     		pop	{r7, pc}
 1459              	.L62:
 1460              		.align	2
 1461              	.L61:
 1462 002c 00000000 		.word	movement_state
 1463 0030 00000000 		.word	prev_movement_state
 1464 0034 00000000 		.word	start_turn_count
 1465              		.cfi_endproc
 1466              	.LFE75:
 1467              		.size	initTurnLeft, .-initTurnLeft
 1468              		.section	.text.initTurnRight,"ax",%progbits
 1469              		.align	2
 1470              		.global	initTurnRight
 1471              		.thumb
 1472              		.thumb_func
 1473              		.type	initTurnRight, %function
 1474              	initTurnRight:
 1475              	.LFB76:
 237:.\main.c      **** 
 238:.\main.c      **** void initTurnRight(){
 1476              		.loc 1 238 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 1, uses_anonymous_args = 0
 1480 0000 80B5     		push	{r7, lr}
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 7, -8
 1483              		.cfi_offset 14, -4
 1484 0002 00AF     		add	r7, sp, #0
 1485              		.cfi_def_cfa_register 7
 239:.\main.c      ****     Timer_2_Stop();
 1486              		.loc 1 239 0
 1487 0004 FFF7FEFF 		bl	Timer_2_Stop
 240:.\main.c      ****     prev_movement_state = movement_state;
 1488              		.loc 1 240 0
 1489 0008 084B     		ldr	r3, .L64
 1490 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1491 000c 084B     		ldr	r3, .L64+4
 1492 000e 1A70     		strb	r2, [r3]
 241:.\main.c      ****     movement_state = RTURN;
 1493              		.loc 1 241 0
 1494 0010 064B     		ldr	r3, .L64
 1495 0012 0222     		movs	r2, #2
 1496 0014 1A70     		strb	r2, [r3]
 242:.\main.c      ****     brakeRight();
 1497              		.loc 1 242 0
 1498 0016 FFF7FEFF 		bl	brakeRight
 243:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1499              		.loc 1 243 0
 1500 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1501 001e 0346     		mov	r3, r0
 1502 0020 1A46     		mov	r2, r3
 1503 0022 044B     		ldr	r3, .L64+8
 1504 0024 1A80     		strh	r2, [r3]	@ movhi
 244:.\main.c      ****     Timer_2_Start();
 1505              		.loc 1 244 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 32


 1506 0026 FFF7FEFF 		bl	Timer_2_Start
 245:.\main.c      **** }
 1507              		.loc 1 245 0
 1508 002a 80BD     		pop	{r7, pc}
 1509              	.L65:
 1510              		.align	2
 1511              	.L64:
 1512 002c 00000000 		.word	movement_state
 1513 0030 00000000 		.word	prev_movement_state
 1514 0034 00000000 		.word	start_turn_count
 1515              		.cfi_endproc
 1516              	.LFE76:
 1517              		.size	initTurnRight, .-initTurnRight
 1518              		.section	.text.initTurnU,"ax",%progbits
 1519              		.align	2
 1520              		.global	initTurnU
 1521              		.thumb
 1522              		.thumb_func
 1523              		.type	initTurnU, %function
 1524              	initTurnU:
 1525              	.LFB77:
 246:.\main.c      **** 
 247:.\main.c      **** void initTurnU(){
 1526              		.loc 1 247 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 1, uses_anonymous_args = 0
 1530 0000 80B5     		push	{r7, lr}
 1531              		.cfi_def_cfa_offset 8
 1532              		.cfi_offset 7, -8
 1533              		.cfi_offset 14, -4
 1534 0002 00AF     		add	r7, sp, #0
 1535              		.cfi_def_cfa_register 7
 248:.\main.c      ****     Timer_2_Stop();
 1536              		.loc 1 248 0
 1537 0004 FFF7FEFF 		bl	Timer_2_Stop
 249:.\main.c      ****     prev_movement_state = movement_state;
 1538              		.loc 1 249 0
 1539 0008 084B     		ldr	r3, .L67
 1540 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1541 000c 084B     		ldr	r3, .L67+4
 1542 000e 1A70     		strb	r2, [r3]
 250:.\main.c      ****     movement_state = UTURN;
 1543              		.loc 1 250 0
 1544 0010 064B     		ldr	r3, .L67
 1545 0012 0722     		movs	r2, #7
 1546 0014 1A70     		strb	r2, [r3]
 251:.\main.c      ****     brakeMotor();
 1547              		.loc 1 251 0
 1548 0016 FFF7FEFF 		bl	brakeMotor
 252:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1549              		.loc 1 252 0
 1550 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1551 001e 0346     		mov	r3, r0
 1552 0020 1A46     		mov	r2, r3
 1553 0022 044B     		ldr	r3, .L67+8
 1554 0024 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 33


 253:.\main.c      ****     Timer_2_Start();
 1555              		.loc 1 253 0
 1556 0026 FFF7FEFF 		bl	Timer_2_Start
 254:.\main.c      **** }
 1557              		.loc 1 254 0
 1558 002a 80BD     		pop	{r7, pc}
 1559              	.L68:
 1560              		.align	2
 1561              	.L67:
 1562 002c 00000000 		.word	movement_state
 1563 0030 00000000 		.word	prev_movement_state
 1564 0034 00000000 		.word	start_turn_count
 1565              		.cfi_endproc
 1566              	.LFE77:
 1567              		.size	initTurnU, .-initTurnU
 1568              		.section	.text.initForward,"ax",%progbits
 1569              		.align	2
 1570              		.global	initForward
 1571              		.thumb
 1572              		.thumb_func
 1573              		.type	initForward, %function
 1574              	initForward:
 1575              	.LFB78:
 255:.\main.c      **** 
 256:.\main.c      **** void initForward(){
 1576              		.loc 1 256 0
 1577              		.cfi_startproc
 1578              		@ args = 0, pretend = 0, frame = 0
 1579              		@ frame_needed = 1, uses_anonymous_args = 0
 1580 0000 80B5     		push	{r7, lr}
 1581              		.cfi_def_cfa_offset 8
 1582              		.cfi_offset 7, -8
 1583              		.cfi_offset 14, -4
 1584 0002 00AF     		add	r7, sp, #0
 1585              		.cfi_def_cfa_register 7
 257:.\main.c      ****     brakeMotor();
 1586              		.loc 1 257 0
 1587 0004 FFF7FEFF 		bl	brakeMotor
 258:.\main.c      ****     movement_state = DRIVE;
 1588              		.loc 1 258 0
 1589 0008 014B     		ldr	r3, .L70
 1590 000a 0022     		movs	r2, #0
 1591 000c 1A70     		strb	r2, [r3]
 259:.\main.c      **** }
 1592              		.loc 1 259 0
 1593 000e 80BD     		pop	{r7, pc}
 1594              	.L71:
 1595              		.align	2
 1596              	.L70:
 1597 0010 00000000 		.word	movement_state
 1598              		.cfi_endproc
 1599              	.LFE78:
 1600              		.size	initForward, .-initForward
 1601              		.section	.text.initBrake,"ax",%progbits
 1602              		.align	2
 1603              		.global	initBrake
 1604              		.thumb
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 34


 1605              		.thumb_func
 1606              		.type	initBrake, %function
 1607              	initBrake:
 1608              	.LFB79:
 260:.\main.c      **** 
 261:.\main.c      **** void initBrake(){
 1609              		.loc 1 261 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 1, uses_anonymous_args = 0
 1613              		@ link register save eliminated.
 1614 0000 80B4     		push	{r7}
 1615              		.cfi_def_cfa_offset 4
 1616              		.cfi_offset 7, -4
 1617 0002 00AF     		add	r7, sp, #0
 1618              		.cfi_def_cfa_register 7
 262:.\main.c      ****     movement_state = STOPPED;
 1619              		.loc 1 262 0
 1620 0004 034B     		ldr	r3, .L73
 1621 0006 0322     		movs	r2, #3
 1622 0008 1A70     		strb	r2, [r3]
 263:.\main.c      **** }
 1623              		.loc 1 263 0
 1624 000a BD46     		mov	sp, r7
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 000c 5DF8047B 		ldr	r7, [sp], #4
 1628              		.cfi_restore 7
 1629              		.cfi_def_cfa_offset 0
 1630 0010 7047     		bx	lr
 1631              	.L74:
 1632 0012 00BF     		.align	2
 1633              	.L73:
 1634 0014 00000000 		.word	movement_state
 1635              		.cfi_endproc
 1636              	.LFE79:
 1637              		.size	initBrake, .-initBrake
 1638              		.section	.text.initTrack,"ax",%progbits
 1639              		.align	2
 1640              		.global	initTrack
 1641              		.thumb
 1642              		.thumb_func
 1643              		.type	initTrack, %function
 1644              	initTrack:
 1645              	.LFB80:
 264:.\main.c      **** 
 265:.\main.c      **** void initTrack()
 266:.\main.c      **** {
 1646              		.loc 1 266 0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 1, uses_anonymous_args = 0
 1650              		@ link register save eliminated.
 1651 0000 80B4     		push	{r7}
 1652              		.cfi_def_cfa_offset 4
 1653              		.cfi_offset 7, -4
 1654 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 35


 1655              		.cfi_def_cfa_register 7
 267:.\main.c      ****     movement_state = TRACKING;
 1656              		.loc 1 267 0
 1657 0004 034B     		ldr	r3, .L76
 1658 0006 0422     		movs	r2, #4
 1659 0008 1A70     		strb	r2, [r3]
 268:.\main.c      **** }
 1660              		.loc 1 268 0
 1661 000a BD46     		mov	sp, r7
 1662              		.cfi_def_cfa_register 13
 1663              		@ sp needed
 1664 000c 5DF8047B 		ldr	r7, [sp], #4
 1665              		.cfi_restore 7
 1666              		.cfi_def_cfa_offset 0
 1667 0010 7047     		bx	lr
 1668              	.L77:
 1669 0012 00BF     		.align	2
 1670              	.L76:
 1671 0014 00000000 		.word	movement_state
 1672              		.cfi_endproc
 1673              	.LFE80:
 1674              		.size	initTrack, .-initTrack
 1675              		.section	.text.initTrackU,"ax",%progbits
 1676              		.align	2
 1677              		.global	initTrackU
 1678              		.thumb
 1679              		.thumb_func
 1680              		.type	initTrackU, %function
 1681              	initTrackU:
 1682              	.LFB81:
 269:.\main.c      **** 
 270:.\main.c      **** void initTrackU(){
 1683              		.loc 1 270 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 1, uses_anonymous_args = 0
 1687              		@ link register save eliminated.
 1688 0000 80B4     		push	{r7}
 1689              		.cfi_def_cfa_offset 4
 1690              		.cfi_offset 7, -4
 1691 0002 00AF     		add	r7, sp, #0
 1692              		.cfi_def_cfa_register 7
 271:.\main.c      ****     movement_state = TRACKING_U;
 1693              		.loc 1 271 0
 1694 0004 034B     		ldr	r3, .L79
 1695 0006 0522     		movs	r2, #5
 1696 0008 1A70     		strb	r2, [r3]
 272:.\main.c      **** }
 1697              		.loc 1 272 0
 1698 000a BD46     		mov	sp, r7
 1699              		.cfi_def_cfa_register 13
 1700              		@ sp needed
 1701 000c 5DF8047B 		ldr	r7, [sp], #4
 1702              		.cfi_restore 7
 1703              		.cfi_def_cfa_offset 0
 1704 0010 7047     		bx	lr
 1705              	.L80:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 36


 1706 0012 00BF     		.align	2
 1707              	.L79:
 1708 0014 00000000 		.word	movement_state
 1709              		.cfi_endproc
 1710              	.LFE81:
 1711              		.size	initTrackU, .-initTrackU
 1712              		.section	.text.inittrackLineZ,"ax",%progbits
 1713              		.align	2
 1714              		.global	inittrackLineZ
 1715              		.thumb
 1716              		.thumb_func
 1717              		.type	inittrackLineZ, %function
 1718              	inittrackLineZ:
 1719              	.LFB82:
 273:.\main.c      **** 
 274:.\main.c      **** void inittrackLineZ(){
 1720              		.loc 1 274 0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 0
 1723              		@ frame_needed = 1, uses_anonymous_args = 0
 1724              		@ link register save eliminated.
 1725 0000 80B4     		push	{r7}
 1726              		.cfi_def_cfa_offset 4
 1727              		.cfi_offset 7, -4
 1728 0002 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING_SOFT;
 1730              		.loc 1 275 0
 1731 0004 034B     		ldr	r3, .L82
 1732 0006 0622     		movs	r2, #6
 1733 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1734              		.loc 1 276 0
 1735 000a BD46     		mov	sp, r7
 1736              		.cfi_def_cfa_register 13
 1737              		@ sp needed
 1738 000c 5DF8047B 		ldr	r7, [sp], #4
 1739              		.cfi_restore 7
 1740              		.cfi_def_cfa_offset 0
 1741 0010 7047     		bx	lr
 1742              	.L83:
 1743 0012 00BF     		.align	2
 1744              	.L82:
 1745 0014 00000000 		.word	movement_state
 1746              		.cfi_endproc
 1747              	.LFE82:
 1748              		.size	inittrackLineZ, .-inittrackLineZ
 1749              		.section	.text.rxInt,"ax",%progbits
 1750              		.align	2
 1751              		.global	rxInt
 1752              		.thumb
 1753              		.thumb_func
 1754              		.type	rxInt, %function
 1755              	rxInt:
 1756              	.LFB83:
 277:.\main.c      **** 
 278:.\main.c      **** 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 37


 279:.\main.c      **** 
 280:.\main.c      **** //Binary RF Data
 281:.\main.c      **** CY_ISR(rxInt){
 1757              		.loc 1 281 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 8
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761 0000 B0B5     		push	{r4, r5, r7, lr}
 1762              		.cfi_def_cfa_offset 16
 1763              		.cfi_offset 4, -16
 1764              		.cfi_offset 5, -12
 1765              		.cfi_offset 7, -8
 1766              		.cfi_offset 14, -4
 1767 0002 82B0     		sub	sp, sp, #8
 1768              		.cfi_def_cfa_offset 24
 1769 0004 00AF     		add	r7, sp, #0
 1770              		.cfi_def_cfa_register 7
 282:.\main.c      ****     char rf_char = UART_GetChar();
 1771              		.loc 1 282 0
 1772 0006 FFF7FEFF 		bl	UART_GetChar
 1773 000a 0346     		mov	r3, r0
 1774 000c FB71     		strb	r3, [r7, #7]
 283:.\main.c      ****     if(rf_char == SOP){
 1775              		.loc 1 283 0
 1776 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1777 0010 AA2B     		cmp	r3, #170
 1778 0012 2BD1     		bne	.L85
 284:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 285:.\main.c      ****             if(byteCount == 34)
 1779              		.loc 1 285 0
 1780 0014 224B     		ldr	r3, .L89
 1781 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1782 0018 222B     		cmp	r3, #34
 1783 001a 20D1     		bne	.L86
 286:.\main.c      ****             {
 287:.\main.c      ****                 system_state = buffer_state;
 1784              		.loc 1 287 0
 1785 001c 214B     		ldr	r3, .L89+4
 1786 001e 224A     		ldr	r2, .L89+8
 1787 0020 1568     		ldr	r5, [r2]	@ unaligned
 1788 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1789 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1790 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1791 0028 1D60     		str	r5, [r3]	@ unaligned
 1792 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1793 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1794 002e D960     		str	r1, [r3, #12]	@ unaligned
 1795 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1796 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1797 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1798 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1799 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 1800 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1801 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1802 003e D961     		str	r1, [r3, #28]	@ unaligned
 288:.\main.c      ****                 if(initial_pos_valid == 0)
 1803              		.loc 1 288 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 38


 1804 0040 1A4B     		ldr	r3, .L89+12
 1805 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1806 0044 002B     		cmp	r3, #0
 1807 0046 0AD1     		bne	.L86
 289:.\main.c      ****                 {
 290:.\main.c      ****                     LED_Write(~LED_Read());
 1808              		.loc 1 290 0
 1809 0048 FFF7FEFF 		bl	LED_Read
 1810 004c 0346     		mov	r3, r0
 1811 004e DB43     		mvns	r3, r3
 1812 0050 DBB2     		uxtb	r3, r3
 1813 0052 1846     		mov	r0, r3
 1814 0054 FFF7FEFF 		bl	LED_Write
 291:.\main.c      ****                     initial_pos_valid = 1;
 1815              		.loc 1 291 0
 1816 0058 144B     		ldr	r3, .L89+12
 1817 005a 0122     		movs	r2, #1
 1818 005c 1A70     		strb	r2, [r3]
 1819              	.L86:
 292:.\main.c      ****                 }
 293:.\main.c      ****             }
 294:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1820              		.loc 1 294 0
 1821 005e 104B     		ldr	r3, .L89
 1822 0060 0222     		movs	r2, #2
 1823 0062 1A70     		strb	r2, [r3]
 295:.\main.c      ****             flag_rx = 0;
 1824              		.loc 1 295 0
 1825 0064 124B     		ldr	r3, .L89+16
 1826 0066 0022     		movs	r2, #0
 1827 0068 1A70     		strb	r2, [r3]
 1828 006a 16E0     		b	.L84
 1829              	.L85:
 296:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 297:.\main.c      ****         }
 298:.\main.c      ****         else
 299:.\main.c      ****         {
 300:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1830              		.loc 1 300 0
 1831 006c 0C4B     		ldr	r3, .L89
 1832 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1833 0070 03F00103 		and	r3, r3, #1
 1834 0074 0F49     		ldr	r1, .L89+20
 1835 0076 FA79     		ldrb	r2, [r7, #7]
 1836 0078 CA54     		strb	r2, [r1, r3]
 301:.\main.c      ****            
 302:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1837              		.loc 1 302 0
 1838 007a 094B     		ldr	r3, .L89
 1839 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1840 007e 03F00103 		and	r3, r3, #1
 1841 0082 DBB2     		uxtb	r3, r3
 1842 0084 002B     		cmp	r3, #0
 1843 0086 02D0     		beq	.L88
 303:.\main.c      ****             {
 304:.\main.c      ****                 flag_rx = 1;
 1844              		.loc 1 304 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 39


 1845 0088 094B     		ldr	r3, .L89+16
 1846 008a 0122     		movs	r2, #1
 1847 008c 1A70     		strb	r2, [r3]
 1848              	.L88:
 305:.\main.c      ****             }
 306:.\main.c      ****             byteCount = (byteCount + 1);
 1849              		.loc 1 306 0
 1850 008e 044B     		ldr	r3, .L89
 1851 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 0092 0133     		adds	r3, r3, #1
 1853 0094 DAB2     		uxtb	r2, r3
 1854 0096 024B     		ldr	r3, .L89
 1855 0098 1A70     		strb	r2, [r3]
 1856              	.L84:
 307:.\main.c      ****         }
 308:.\main.c      **** }
 1857              		.loc 1 308 0
 1858 009a 0837     		adds	r7, r7, #8
 1859              		.cfi_def_cfa_offset 16
 1860 009c BD46     		mov	sp, r7
 1861              		.cfi_def_cfa_register 13
 1862              		@ sp needed
 1863 009e B0BD     		pop	{r4, r5, r7, pc}
 1864              	.L90:
 1865              		.align	2
 1866              	.L89:
 1867 00a0 00000000 		.word	byteCount
 1868 00a4 00000000 		.word	system_state
 1869 00a8 00000000 		.word	buffer_state
 1870 00ac 00000000 		.word	initial_pos_valid
 1871 00b0 00000000 		.word	flag_rx
 1872 00b4 00000000 		.word	packet
 1873              		.cfi_endproc
 1874              	.LFE83:
 1875              		.size	rxInt, .-rxInt
 1876              		.global	__aeabi_i2f
 1877              		.global	__aeabi_fmul
 1878              		.global	__aeabi_f2iz
 1879              		.section	.rodata
 1880 000a 0000     		.align	2
 1881              	.LC1:
 1882 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1882      65742071 
 1882      7561643A 
 1882      2025640D 
 1882      0A00
 1883 001e 0000     		.align	2
 1884              	.LC2:
 1885 0020 703A2573 		.ascii	"p:%s\015\012\000"
 1885      0D0A00
 1886              		.section	.text.BT_rxInt,"ax",%progbits
 1887              		.align	2
 1888              		.global	BT_rxInt
 1889              		.thumb
 1890              		.thumb_func
 1891              		.type	BT_rxInt, %function
 1892              	BT_rxInt:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 40


 1893              	.LFB84:
 309:.\main.c      **** 
 310:.\main.c      **** CY_ISR(BT_rxInt)
 311:.\main.c      **** {
 1894              		.loc 1 311 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 152
 1897              		@ frame_needed = 1, uses_anonymous_args = 0
 1898 0000 80B5     		push	{r7, lr}
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 7, -8
 1901              		.cfi_offset 14, -4
 1902 0002 A6B0     		sub	sp, sp, #152
 1903              		.cfi_def_cfa_offset 160
 1904 0004 00AF     		add	r7, sp, #0
 1905              		.cfi_def_cfa_register 7
 312:.\main.c      ****     char rf_char = UART_GetChar();
 1906              		.loc 1 312 0
 1907 0006 FFF7FEFF 		bl	UART_GetChar
 1908 000a 0346     		mov	r3, r0
 1909 000c 87F89730 		strb	r3, [r7, #151]
 313:.\main.c      ****     switch(rf_char){
 1910              		.loc 1 313 0
 1911 0010 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 1912 0014 613B     		subs	r3, r3, #97
 1913 0016 192B     		cmp	r3, #25
 1914 0018 00F2B680 		bhi	.L91
 1915 001c 01A2     		adr	r2, .L94
 1916 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1917 0022 00BF     		.p2align 2
 1918              	.L94:
 1919 0024 8D000000 		.word	.L93+1
 1920 0028 89010000 		.word	.L91+1
 1921 002c 89010000 		.word	.L91+1
 1922 0030 B1000000 		.word	.L95+1
 1923 0034 89010000 		.word	.L91+1
 1924 0038 BD000000 		.word	.L96+1
 1925 003c 89010000 		.word	.L91+1
 1926 0040 89010000 		.word	.L91+1
 1927 0044 89010000 		.word	.L91+1
 1928 0048 89010000 		.word	.L91+1
 1929 004c 89010000 		.word	.L91+1
 1930 0050 89010000 		.word	.L91+1
 1931 0054 89010000 		.word	.L91+1
 1932 0058 89010000 		.word	.L91+1
 1933 005c 89010000 		.word	.L91+1
 1934 0060 89010000 		.word	.L91+1
 1935 0064 ED000000 		.word	.L97+1
 1936 0068 47010000 		.word	.L98+1
 1937 006c A5000000 		.word	.L99+1
 1938 0070 C9000000 		.word	.L100+1
 1939 0074 D5000000 		.word	.L101+1
 1940 0078 89010000 		.word	.L91+1
 1941 007c 99000000 		.word	.L102+1
 1942 0080 5D010000 		.word	.L103+1
 1943 0084 89010000 		.word	.L91+1
 1944 0088 E1000000 		.word	.L104+1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 41


 1945              		.p2align 1
 1946              	.L93:
 1947              	.LBB3:
 314:.\main.c      ****     case 'a':
 315:.\main.c      ****         initTurnLeft();
 1948              		.loc 1 315 0
 1949 008c FFF7FEFF 		bl	initTurnLeft
 316:.\main.c      ****         track_mode = NO_TRACK;
 1950              		.loc 1 316 0
 1951 0090 3F4B     		ldr	r3, .L106
 1952 0092 0022     		movs	r2, #0
 1953 0094 1A70     		strb	r2, [r3]
 317:.\main.c      ****         break;
 1954              		.loc 1 317 0
 1955 0096 77E0     		b	.L91
 1956              	.L102:
 318:.\main.c      ****     case 'w':
 319:.\main.c      ****         initForward();
 1957              		.loc 1 319 0
 1958 0098 FFF7FEFF 		bl	initForward
 320:.\main.c      ****         track_mode = NO_TRACK;
 1959              		.loc 1 320 0
 1960 009c 3C4B     		ldr	r3, .L106
 1961 009e 0022     		movs	r2, #0
 1962 00a0 1A70     		strb	r2, [r3]
 321:.\main.c      ****         break;
 1963              		.loc 1 321 0
 1964 00a2 71E0     		b	.L91
 1965              	.L99:
 322:.\main.c      ****     case 's': 
 323:.\main.c      ****         reverseDirection();
 1966              		.loc 1 323 0
 1967 00a4 FFF7FEFF 		bl	reverseDirection
 324:.\main.c      ****         track_mode = NO_TRACK;
 1968              		.loc 1 324 0
 1969 00a8 394B     		ldr	r3, .L106
 1970 00aa 0022     		movs	r2, #0
 1971 00ac 1A70     		strb	r2, [r3]
 325:.\main.c      ****         break;
 1972              		.loc 1 325 0
 1973 00ae 6BE0     		b	.L91
 1974              	.L95:
 326:.\main.c      ****     case 'd':
 327:.\main.c      ****         initTurnRight();
 1975              		.loc 1 327 0
 1976 00b0 FFF7FEFF 		bl	initTurnRight
 328:.\main.c      ****         track_mode = NO_TRACK;
 1977              		.loc 1 328 0
 1978 00b4 364B     		ldr	r3, .L106
 1979 00b6 0022     		movs	r2, #0
 1980 00b8 1A70     		strb	r2, [r3]
 329:.\main.c      ****         break;
 1981              		.loc 1 329 0
 1982 00ba 65E0     		b	.L91
 1983              	.L96:
 330:.\main.c      ****     case 'f':
 331:.\main.c      ****         initBrake();
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 42


 1984              		.loc 1 331 0
 1985 00bc FFF7FEFF 		bl	initBrake
 332:.\main.c      ****         track_mode = NO_TRACK;
 1986              		.loc 1 332 0
 1987 00c0 334B     		ldr	r3, .L106
 1988 00c2 0022     		movs	r2, #0
 1989 00c4 1A70     		strb	r2, [r3]
 333:.\main.c      ****         break;
 1990              		.loc 1 333 0
 1991 00c6 5FE0     		b	.L91
 1992              	.L100:
 334:.\main.c      ****     case('t'):
 335:.\main.c      ****         track_mode = CURVE_TRACK;
 1993              		.loc 1 335 0
 1994 00c8 314B     		ldr	r3, .L106
 1995 00ca 0122     		movs	r2, #1
 1996 00cc 1A70     		strb	r2, [r3]
 336:.\main.c      ****         initTrack();
 1997              		.loc 1 336 0
 1998 00ce FFF7FEFF 		bl	initTrack
 337:.\main.c      ****         break;
 1999              		.loc 1 337 0
 2000 00d2 59E0     		b	.L91
 2001              	.L101:
 338:.\main.c      ****     case('u'):
 339:.\main.c      ****         initTrackU();
 2002              		.loc 1 339 0
 2003 00d4 FFF7FEFF 		bl	initTrackU
 340:.\main.c      ****         track_mode = U_TRACK;
 2004              		.loc 1 340 0
 2005 00d8 2D4B     		ldr	r3, .L106
 2006 00da 0222     		movs	r2, #2
 2007 00dc 1A70     		strb	r2, [r3]
 341:.\main.c      ****         break;
 2008              		.loc 1 341 0
 2009 00de 53E0     		b	.L91
 2010              	.L104:
 342:.\main.c      ****     case('z'):
 343:.\main.c      ****         track_mode = SQUARE_TRACK;
 2011              		.loc 1 343 0
 2012 00e0 2B4B     		ldr	r3, .L106
 2013 00e2 0322     		movs	r2, #3
 2014 00e4 1A70     		strb	r2, [r3]
 344:.\main.c      ****         inittrackLineZ();
 2015              		.loc 1 344 0
 2016 00e6 FFF7FEFF 		bl	inittrackLineZ
 345:.\main.c      ****         break;
 2017              		.loc 1 345 0
 2018 00ea 4DE0     		b	.L91
 2019              	.L97:
 346:.\main.c      ****     case('q'):
 347:.\main.c      ****         track_mode = QUAD_STOP;
 2020              		.loc 1 347 0
 2021 00ec 284B     		ldr	r3, .L106
 2022 00ee 0422     		movs	r2, #4
 2023 00f0 1A70     		strb	r2, [r3]
 348:.\main.c      ****         accum_dist = 0;
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 43


 2024              		.loc 1 348 0
 2025 00f2 284B     		ldr	r3, .L106+4
 2026 00f4 0022     		movs	r2, #0
 2027 00f6 1A80     		strh	r2, [r3]	@ movhi
 349:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 2028              		.loc 1 349 0
 2029 00f8 274B     		ldr	r3, .L106+8
 2030 00fa 1B88     		ldrh	r3, [r3]
 2031 00fc 1BB2     		sxth	r3, r3
 2032 00fe 1846     		mov	r0, r3
 2033 0100 FFF7FEFF 		bl	__aeabi_i2f
 2034 0104 0246     		mov	r2, r0
 2035 0106 254B     		ldr	r3, .L106+12
 2036 0108 1B68     		ldr	r3, [r3]	@ float
 2037 010a 1046     		mov	r0, r2
 2038 010c 1946     		mov	r1, r3
 2039 010e FFF7FEFF 		bl	__aeabi_fmul
 2040 0112 0346     		mov	r3, r0
 2041 0114 1846     		mov	r0, r3
 2042 0116 FFF7FEFF 		bl	__aeabi_f2iz
 2043 011a 0346     		mov	r3, r0
 2044 011c 9AB2     		uxth	r2, r3
 2045 011e 204B     		ldr	r3, .L106+16
 2046 0120 1A80     		strh	r2, [r3]	@ movhi
 350:.\main.c      ****         char mes[16];
 351:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 2047              		.loc 1 351 0
 2048 0122 1F4B     		ldr	r3, .L106+16
 2049 0124 1B88     		ldrh	r3, [r3]
 2050 0126 1BB2     		sxth	r3, r3
 2051 0128 07F18402 		add	r2, r7, #132
 2052 012c 1046     		mov	r0, r2
 2053 012e 1D49     		ldr	r1, .L106+20
 2054 0130 1A46     		mov	r2, r3
 2055 0132 FFF7FEFF 		bl	sprintf
 352:.\main.c      ****         UART_PutString(mes);
 2056              		.loc 1 352 0
 2057 0136 07F18403 		add	r3, r7, #132
 2058 013a 1846     		mov	r0, r3
 2059 013c FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****         initForward();
 2060              		.loc 1 353 0
 2061 0140 FFF7FEFF 		bl	initForward
 354:.\main.c      ****         break;
 2062              		.loc 1 354 0
 2063 0144 20E0     		b	.L91
 2064              	.L98:
 355:.\main.c      ****     case ('r'):
 356:.\main.c      ****         track_mode = RF_STOP;
 2065              		.loc 1 356 0
 2066 0146 124B     		ldr	r3, .L106
 2067 0148 0522     		movs	r2, #5
 2068 014a 1A70     		strb	r2, [r3]
 357:.\main.c      ****         changeToRF();
 2069              		.loc 1 357 0
 2070 014c FFF7FEFF 		bl	changeToRF
 358:.\main.c      ****         // Make initial position
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 44


 359:.\main.c      ****         initial_pos_valid = 0;
 2071              		.loc 1 359 0
 2072 0150 154B     		ldr	r3, .L106+24
 2073 0152 0022     		movs	r2, #0
 2074 0154 1A70     		strb	r2, [r3]
 360:.\main.c      ****         initBrake();
 2075              		.loc 1 360 0
 2076 0156 FFF7FEFF 		bl	initBrake
 361:.\main.c      ****         break;
 2077              		.loc 1 361 0
 2078 015a 15E0     		b	.L91
 2079              	.L103:
 362:.\main.c      ****     case ('x'):
 363:.\main.c      ****         track_mode = DEST_TEST;
 2080              		.loc 1 363 0
 2081 015c 0C4B     		ldr	r3, .L106
 2082 015e 0622     		movs	r2, #6
 2083 0160 1A70     		strb	r2, [r3]
 364:.\main.c      ****         tracked_direction = robot_direction;
 2084              		.loc 1 364 0
 2085 0162 124B     		ldr	r3, .L106+28
 2086 0164 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2087 0166 124B     		ldr	r3, .L106+32
 2088 0168 1A70     		strb	r2, [r3]
 365:.\main.c      ****         generateDirections();
 2089              		.loc 1 365 0
 2090 016a FFF7FEFF 		bl	generateDirections
 366:.\main.c      ****         char message[128];
 367:.\main.c      ****         sprintf(message, "p:%s\r\n", instructions);
 2091              		.loc 1 367 0
 2092 016e 3B1D     		adds	r3, r7, #4
 2093 0170 1846     		mov	r0, r3
 2094 0172 1049     		ldr	r1, .L106+36
 2095 0174 104A     		ldr	r2, .L106+40
 2096 0176 FFF7FEFF 		bl	sprintf
 368:.\main.c      ****         UART_PutString(message);
 2097              		.loc 1 368 0
 2098 017a 3B1D     		adds	r3, r7, #4
 2099 017c 1846     		mov	r0, r3
 2100 017e FFF7FEFF 		bl	UART_PutString
 369:.\main.c      ****         inittrackLineZ();
 2101              		.loc 1 369 0
 2102 0182 FFF7FEFF 		bl	inittrackLineZ
 370:.\main.c      ****         break;
 2103              		.loc 1 370 0
 2104 0186 00BF     		nop
 2105              	.L91:
 2106              	.LBE3:
 371:.\main.c      ****     }
 372:.\main.c      **** }
 2107              		.loc 1 372 0
 2108 0188 9837     		adds	r7, r7, #152
 2109              		.cfi_def_cfa_offset 8
 2110 018a BD46     		mov	sp, r7
 2111              		.cfi_def_cfa_register 13
 2112              		@ sp needed
 2113 018c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 45


 2114              	.L107:
 2115 018e 00BF     		.align	2
 2116              	.L106:
 2117 0190 00000000 		.word	track_mode
 2118 0194 00000000 		.word	accum_dist
 2119 0198 00000000 		.word	target_distance_cm
 2120 019c 00000000 		.word	quad_per_cm
 2121 01a0 00000000 		.word	target_distance_quad
 2122 01a4 0C000000 		.word	.LC1
 2123 01a8 00000000 		.word	initial_pos_valid
 2124 01ac 00000000 		.word	robot_direction
 2125 01b0 00000000 		.word	tracked_direction
 2126 01b4 20000000 		.word	.LC2
 2127 01b8 00000000 		.word	instructions
 2128              		.cfi_endproc
 2129              	.LFE84:
 2130              		.size	BT_rxInt, .-BT_rxInt
 2131              		.section	.text.BT_txInt,"ax",%progbits
 2132              		.align	2
 2133              		.global	BT_txInt
 2134              		.thumb
 2135              		.thumb_func
 2136              		.type	BT_txInt, %function
 2137              	BT_txInt:
 2138              	.LFB85:
 373:.\main.c      **** 
 374:.\main.c      **** //BT
 375:.\main.c      **** CY_ISR(BT_txInt)
 376:.\main.c      **** {
 2139              		.loc 1 376 0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 0
 2142              		@ frame_needed = 1, uses_anonymous_args = 0
 2143              		@ link register save eliminated.
 2144 0000 80B4     		push	{r7}
 2145              		.cfi_def_cfa_offset 4
 2146              		.cfi_offset 7, -4
 2147 0002 00AF     		add	r7, sp, #0
 2148              		.cfi_def_cfa_register 7
 377:.\main.c      ****     
 378:.\main.c      **** }
 2149              		.loc 1 378 0
 2150 0004 BD46     		mov	sp, r7
 2151              		.cfi_def_cfa_register 13
 2152              		@ sp needed
 2153 0006 5DF8047B 		ldr	r7, [sp], #4
 2154              		.cfi_restore 7
 2155              		.cfi_def_cfa_offset 0
 2156 000a 7047     		bx	lr
 2157              		.cfi_endproc
 2158              	.LFE85:
 2159              		.size	BT_txInt, .-BT_txInt
 2160              		.section	.text.adc_isr,"ax",%progbits
 2161              		.align	2
 2162              		.global	adc_isr
 2163              		.thumb
 2164              		.thumb_func
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 46


 2165              		.type	adc_isr, %function
 2166              	adc_isr:
 2167              	.LFB86:
 379:.\main.c      **** 
 380:.\main.c      **** //ADC:
 381:.\main.c      **** CY_ISR (adc_isr)
 382:.\main.c      **** {
 2168              		.loc 1 382 0
 2169              		.cfi_startproc
 2170              		@ args = 0, pretend = 0, frame = 0
 2171              		@ frame_needed = 1, uses_anonymous_args = 0
 2172 0000 80B5     		push	{r7, lr}
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 7, -8
 2175              		.cfi_offset 14, -4
 2176 0002 00AF     		add	r7, sp, #0
 2177              		.cfi_def_cfa_register 7
 383:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 384:.\main.c      ****     adc_result = ADC_GetResult16();
 2178              		.loc 1 384 0
 2179 0004 FFF7FEFF 		bl	ADC_GetResult16
 2180 0008 0346     		mov	r3, r0
 2181 000a 1A46     		mov	r2, r3
 2182 000c 044B     		ldr	r3, .L110
 2183 000e 1A80     		strh	r2, [r3]	@ movhi
 385:.\main.c      ****     flag_receive_ADC = 1;
 2184              		.loc 1 385 0
 2185 0010 044B     		ldr	r3, .L110+4
 2186 0012 0122     		movs	r2, #1
 2187 0014 1A70     		strb	r2, [r3]
 386:.\main.c      ****     flag_print_rf = 1;
 2188              		.loc 1 386 0
 2189 0016 044B     		ldr	r3, .L110+8
 2190 0018 0122     		movs	r2, #1
 2191 001a 1A70     		strb	r2, [r3]
 387:.\main.c      ****     //LED_Write(~LED_Read());
 388:.\main.c      **** }
 2192              		.loc 1 388 0
 2193 001c 80BD     		pop	{r7, pc}
 2194              	.L111:
 2195 001e 00BF     		.align	2
 2196              	.L110:
 2197 0020 00000000 		.word	adc_result
 2198 0024 00000000 		.word	flag_receive_ADC
 2199 0028 00000000 		.word	flag_print_rf
 2200              		.cfi_endproc
 2201              	.LFE86:
 2202              		.size	adc_isr, .-adc_isr
 2203              		.section	.rodata
 2204 0027 00       		.align	2
 2205              	.LC3:
 2206 0028 64697374 		.ascii	"dist: %d\015\012\000"
 2206      3A202564 
 2206      0D0A00
 2207              		.global	__aeabi_i2d
 2208              		.global	__aeabi_ddiv
 2209              		.global	__aeabi_dcmple
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 47


 2210              		.section	.text.isr_quad1,"ax",%progbits
 2211              		.align	2
 2212              		.global	isr_quad1
 2213              		.thumb
 2214              		.thumb_func
 2215              		.type	isr_quad1, %function
 2216              	isr_quad1:
 2217              	.LFB87:
 389:.\main.c      **** 
 390:.\main.c      **** CY_ISR (isr_quad1)
 391:.\main.c      **** {
 2218              		.loc 1 391 0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 24
 2221              		@ frame_needed = 1, uses_anonymous_args = 0
 2222 0000 B0B5     		push	{r4, r5, r7, lr}
 2223              		.cfi_def_cfa_offset 16
 2224              		.cfi_offset 4, -16
 2225              		.cfi_offset 5, -12
 2226              		.cfi_offset 7, -8
 2227              		.cfi_offset 14, -4
 2228 0002 86B0     		sub	sp, sp, #24
 2229              		.cfi_def_cfa_offset 40
 2230 0004 00AF     		add	r7, sp, #0
 2231              		.cfi_def_cfa_register 7
 392:.\main.c      ****     //LED_Write(~LED_Read());
 393:.\main.c      ****     last_quad_count1 = quad_count1;
 2232              		.loc 1 393 0
 2233 0006 684B     		ldr	r3, .L119
 2234 0008 1A88     		ldrh	r2, [r3]
 2235 000a 684B     		ldr	r3, .L119+4
 2236 000c 1A80     		strh	r2, [r3]	@ movhi
 394:.\main.c      ****     last_quad_count2 = quad_count2;
 2237              		.loc 1 394 0
 2238 000e 684B     		ldr	r3, .L119+8
 2239 0010 1A88     		ldrh	r2, [r3]
 2240 0012 684B     		ldr	r3, .L119+12
 2241 0014 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 2242              		.loc 1 395 0
 2243 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2244 001a 0346     		mov	r3, r0
 2245 001c 1A46     		mov	r2, r3
 2246 001e 624B     		ldr	r3, .L119
 2247 0020 1A80     		strh	r2, [r3]	@ movhi
 396:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 2248              		.loc 1 396 0
 2249 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2250 0026 0346     		mov	r3, r0
 2251 0028 1A46     		mov	r2, r3
 2252 002a 614B     		ldr	r3, .L119+8
 2253 002c 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 2254              		.loc 1 397 0
 2255 002e 5E4B     		ldr	r3, .L119
 2256 0030 1B88     		ldrh	r3, [r3]
 2257 0032 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 48


 2258 0034 5D4B     		ldr	r3, .L119+4
 2259 0036 1B88     		ldrh	r3, [r3]
 2260 0038 9BB2     		uxth	r3, r3
 2261 003a D31A     		subs	r3, r2, r3
 2262 003c 9BB2     		uxth	r3, r3
 2263 003e 9AB2     		uxth	r2, r3
 2264 0040 5D4B     		ldr	r3, .L119+16
 2265 0042 1A80     		strh	r2, [r3]	@ movhi
 398:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 2266              		.loc 1 398 0
 2267 0044 5A4B     		ldr	r3, .L119+8
 2268 0046 1B88     		ldrh	r3, [r3]
 2269 0048 9AB2     		uxth	r2, r3
 2270 004a 5A4B     		ldr	r3, .L119+12
 2271 004c 1B88     		ldrh	r3, [r3]
 2272 004e 9BB2     		uxth	r3, r3
 2273 0050 D31A     		subs	r3, r2, r3
 2274 0052 9BB2     		uxth	r3, r3
 2275 0054 9AB2     		uxth	r2, r3
 2276 0056 594B     		ldr	r3, .L119+20
 2277 0058 1A80     		strh	r2, [r3]	@ movhi
 399:.\main.c      ****     
 400:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && track_mode 
 2278              		.loc 1 400 0
 2279 005a 534B     		ldr	r3, .L119
 2280 005c 1B88     		ldrh	r3, [r3]
 2281 005e 1BB2     		sxth	r3, r3
 2282 0060 002B     		cmp	r3, #0
 2283 0062 B8BF     		it	lt
 2284 0064 5B42     		rsblt	r3, r3, #0
 2285 0066 40F6B832 		movw	r2, #3000
 2286 006a 9342     		cmp	r3, r2
 2287 006c 1BDD     		ble	.L113
 2288              		.loc 1 400 0 is_stmt 0 discriminator 1
 2289 006e 544B     		ldr	r3, .L119+24
 2290 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2291 0072 012B     		cmp	r3, #1
 2292 0074 17D0     		beq	.L113
 2293              		.loc 1 400 0 discriminator 2
 2294 0076 524B     		ldr	r3, .L119+24
 2295 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2296 007a 022B     		cmp	r3, #2
 2297 007c 13D0     		beq	.L113
 2298              		.loc 1 400 0 discriminator 3
 2299 007e 514B     		ldr	r3, .L119+28
 2300 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2301 0082 042B     		cmp	r3, #4
 2302 0084 0FD0     		beq	.L113
 2303              		.loc 1 400 0 discriminator 4
 2304 0086 4E4B     		ldr	r3, .L119+24
 2305 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2306 008a 072B     		cmp	r3, #7
 2307 008c 0BD0     		beq	.L113
 401:.\main.c      ****     {
 402:.\main.c      ****         QuadDec_M1_SetCounter(0);
 2308              		.loc 1 402 0 is_stmt 1
 2309 008e 0020     		movs	r0, #0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 49


 2310 0090 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 403:.\main.c      ****         QuadDec_M2_SetCounter(0);
 2311              		.loc 1 403 0
 2312 0094 0020     		movs	r0, #0
 2313 0096 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 404:.\main.c      ****         quad_count1 = 0;
 2314              		.loc 1 404 0
 2315 009a 434B     		ldr	r3, .L119
 2316 009c 0022     		movs	r2, #0
 2317 009e 1A80     		strh	r2, [r3]	@ movhi
 405:.\main.c      ****         quad_count2 = 0;
 2318              		.loc 1 405 0
 2319 00a0 434B     		ldr	r3, .L119+8
 2320 00a2 0022     		movs	r2, #0
 2321 00a4 1A80     		strh	r2, [r3]	@ movhi
 2322              	.L113:
 406:.\main.c      ****     }
 407:.\main.c      **** 
 408:.\main.c      ****     flag_calc_wheelspeed = 1;
 2323              		.loc 1 408 0
 2324 00a6 484B     		ldr	r3, .L119+32
 2325 00a8 0122     		movs	r2, #1
 2326 00aa 1A70     		strb	r2, [r3]
 409:.\main.c      ****     
 410:.\main.c      ****     if (track_mode == QUAD_STOP)
 2327              		.loc 1 410 0
 2328 00ac 454B     		ldr	r3, .L119+28
 2329 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2330 00b0 042B     		cmp	r3, #4
 2331 00b2 2AD1     		bne	.L114
 2332              	.LBB4:
 411:.\main.c      ****     {
 412:.\main.c      ****         accum_dist += quad_diff1;
 2333              		.loc 1 412 0
 2334 00b4 454B     		ldr	r3, .L119+36
 2335 00b6 1B88     		ldrh	r3, [r3]
 2336 00b8 9AB2     		uxth	r2, r3
 2337 00ba 3F4B     		ldr	r3, .L119+16
 2338 00bc 1B88     		ldrh	r3, [r3]
 2339 00be 9BB2     		uxth	r3, r3
 2340 00c0 1344     		add	r3, r3, r2
 2341 00c2 9BB2     		uxth	r3, r3
 2342 00c4 9AB2     		uxth	r2, r3
 2343 00c6 414B     		ldr	r3, .L119+36
 2344 00c8 1A80     		strh	r2, [r3]	@ movhi
 413:.\main.c      ****         char mes[16];
 414:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 2345              		.loc 1 414 0
 2346 00ca 404B     		ldr	r3, .L119+36
 2347 00cc 1B88     		ldrh	r3, [r3]
 2348 00ce 1BB2     		sxth	r3, r3
 2349 00d0 3A46     		mov	r2, r7
 2350 00d2 1046     		mov	r0, r2
 2351 00d4 3E49     		ldr	r1, .L119+40
 2352 00d6 1A46     		mov	r2, r3
 2353 00d8 FFF7FEFF 		bl	sprintf
 415:.\main.c      ****         UART_PutString(mes);
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 50


 2354              		.loc 1 415 0
 2355 00dc 3B46     		mov	r3, r7
 2356 00de 1846     		mov	r0, r3
 2357 00e0 FFF7FEFF 		bl	UART_PutString
 416:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 2358              		.loc 1 416 0
 2359 00e4 394B     		ldr	r3, .L119+36
 2360 00e6 1B88     		ldrh	r3, [r3]
 2361 00e8 1BB2     		sxth	r3, r3
 2362 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 2363 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 2364 00f2 384B     		ldr	r3, .L119+44
 2365 00f4 1B88     		ldrh	r3, [r3]
 2366 00f6 1BB2     		sxth	r3, r3
 2367 00f8 9A42     		cmp	r2, r3
 2368 00fa 05DB     		blt	.L115
 417:.\main.c      ****         {
 418:.\main.c      ****             initBrake();
 2369              		.loc 1 418 0
 2370 00fc FFF7FEFF 		bl	initBrake
 419:.\main.c      ****             track_mode = NO_TRACK;
 2371              		.loc 1 419 0
 2372 0100 304B     		ldr	r3, .L119+28
 2373 0102 0022     		movs	r2, #0
 2374 0104 1A70     		strb	r2, [r3]
 2375              	.LBE4:
 2376 0106 4CE0     		b	.L112
 2377              	.L115:
 2378 0108 4BE0     		b	.L112
 2379              	.L114:
 420:.\main.c      ****         }
 421:.\main.c      ****     } else if (track_mode == RF_STOP)
 2380              		.loc 1 421 0
 2381 010a 2E4B     		ldr	r3, .L119+28
 2382 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2383 010e 052B     		cmp	r3, #5
 2384 0110 47D1     		bne	.L112
 2385              	.LBB5:
 422:.\main.c      ****     { 
 423:.\main.c      ****         // Do pythag
 424:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 2386              		.loc 1 424 0
 2387 0112 314B     		ldr	r3, .L119+48
 2388 0114 5B88     		ldrh	r3, [r3, #2]
 2389 0116 1AB2     		sxth	r2, r3
 2390 0118 304B     		ldr	r3, .L119+52
 2391 011a 1B88     		ldrh	r3, [r3]
 2392 011c 1BB2     		sxth	r3, r3
 2393 011e D31A     		subs	r3, r2, r3
 2394 0120 1846     		mov	r0, r3
 2395 0122 FFF7FEFF 		bl	__aeabi_i2d
 2396 0126 0246     		mov	r2, r0
 2397 0128 0B46     		mov	r3, r1
 2398 012a 1046     		mov	r0, r2
 2399 012c 1946     		mov	r1, r3
 2400 012e 4FF00002 		mov	r2, #0
 2401 0132 2B4B     		ldr	r3, .L119+56
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 51


 2402 0134 FFF7FEFF 		bl	__aeabi_ddiv
 2403 0138 0246     		mov	r2, r0
 2404 013a 0B46     		mov	r3, r1
 2405 013c 1446     		mov	r4, r2
 2406 013e 1D46     		mov	r5, r3
 2407 0140 254B     		ldr	r3, .L119+48
 2408 0142 9B88     		ldrh	r3, [r3, #4]
 2409 0144 1AB2     		sxth	r2, r3
 2410 0146 274B     		ldr	r3, .L119+60
 2411 0148 1B88     		ldrh	r3, [r3]
 2412 014a 1BB2     		sxth	r3, r3
 2413 014c D31A     		subs	r3, r2, r3
 2414 014e 1846     		mov	r0, r3
 2415 0150 FFF7FEFF 		bl	__aeabi_i2d
 2416 0154 0246     		mov	r2, r0
 2417 0156 0B46     		mov	r3, r1
 2418 0158 1046     		mov	r0, r2
 2419 015a 1946     		mov	r1, r3
 2420 015c 4FF00002 		mov	r2, #0
 2421 0160 1F4B     		ldr	r3, .L119+56
 2422 0162 FFF7FEFF 		bl	__aeabi_ddiv
 2423 0166 0246     		mov	r2, r0
 2424 0168 0B46     		mov	r3, r1
 2425 016a 2046     		mov	r0, r4
 2426 016c 2946     		mov	r1, r5
 2427 016e FFF7FEFF 		bl	hypot
 2428 0172 C7E90401 		strd	r0, [r7, #16]
 425:.\main.c      ****         if (dist >= target_distance_cm)
 2429              		.loc 1 425 0
 2430 0176 1C4B     		ldr	r3, .L119+64
 2431 0178 1B88     		ldrh	r3, [r3]
 2432 017a 1BB2     		sxth	r3, r3
 2433 017c 1846     		mov	r0, r3
 2434 017e FFF7FEFF 		bl	__aeabi_i2d
 2435 0182 0246     		mov	r2, r0
 2436 0184 0B46     		mov	r3, r1
 2437 0186 1046     		mov	r0, r2
 2438 0188 1946     		mov	r1, r3
 2439 018a D7E90423 		ldrd	r2, [r7, #16]
 2440 018e FFF7FEFF 		bl	__aeabi_dcmple
 2441 0192 0346     		mov	r3, r0
 2442 0194 002B     		cmp	r3, #0
 2443 0196 04D0     		beq	.L112
 426:.\main.c      ****         {
 427:.\main.c      ****             initBrake();
 2444              		.loc 1 427 0
 2445 0198 FFF7FEFF 		bl	initBrake
 428:.\main.c      ****             track_mode = NO_TRACK;
 2446              		.loc 1 428 0
 2447 019c 094B     		ldr	r3, .L119+28
 2448 019e 0022     		movs	r2, #0
 2449 01a0 1A70     		strb	r2, [r3]
 2450              	.L112:
 2451              	.LBE5:
 429:.\main.c      ****         }
 430:.\main.c      ****     }
 431:.\main.c      ****     
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 52


 432:.\main.c      **** }
 2452              		.loc 1 432 0
 2453 01a2 1837     		adds	r7, r7, #24
 2454              		.cfi_def_cfa_offset 16
 2455 01a4 BD46     		mov	sp, r7
 2456              		.cfi_def_cfa_register 13
 2457              		@ sp needed
 2458 01a6 B0BD     		pop	{r4, r5, r7, pc}
 2459              	.L120:
 2460              		.align	2
 2461              	.L119:
 2462 01a8 00000000 		.word	quad_count1
 2463 01ac 00000000 		.word	last_quad_count1
 2464 01b0 00000000 		.word	quad_count2
 2465 01b4 00000000 		.word	last_quad_count2
 2466 01b8 00000000 		.word	quad_diff1
 2467 01bc 00000000 		.word	quad_diff2
 2468 01c0 00000000 		.word	movement_state
 2469 01c4 00000000 		.word	track_mode
 2470 01c8 00000000 		.word	flag_calc_wheelspeed
 2471 01cc 00000000 		.word	accum_dist
 2472 01d0 28000000 		.word	.LC3
 2473 01d4 00000000 		.word	target_distance_quad
 2474 01d8 00000000 		.word	system_state
 2475 01dc 00000000 		.word	initial_x_pos
 2476 01e0 00001040 		.word	1074790400
 2477 01e4 00000000 		.word	initial_y_pos
 2478 01e8 00000000 		.word	target_distance_cm
 2479              		.cfi_endproc
 2480              	.LFE87:
 2481              		.size	isr_quad1, .-isr_quad1
 2482              		.section	.text.isr_turn_timer,"ax",%progbits
 2483              		.align	2
 2484              		.global	isr_turn_timer
 2485              		.thumb
 2486              		.thumb_func
 2487              		.type	isr_turn_timer, %function
 2488              	isr_turn_timer:
 2489              	.LFB88:
 433:.\main.c      **** 
 434:.\main.c      **** CY_ISR(isr_turn_timer)
 435:.\main.c      **** {
 2490              		.loc 1 435 0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 1, uses_anonymous_args = 0
 2494 0000 80B5     		push	{r7, lr}
 2495              		.cfi_def_cfa_offset 8
 2496              		.cfi_offset 7, -8
 2497              		.cfi_offset 14, -4
 2498 0002 00AF     		add	r7, sp, #0
 2499              		.cfi_def_cfa_register 7
 436:.\main.c      ****     if(movement_state == LTURN)
 2500              		.loc 1 436 0
 2501 0004 264B     		ldr	r3, .L127
 2502 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2503 0008 012B     		cmp	r3, #1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 53


 2504 000a 15D1     		bne	.L122
 437:.\main.c      ****     {
 438:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 2505              		.loc 1 438 0
 2506 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2507 0010 0346     		mov	r3, r0
 2508 0012 1A46     		mov	r2, r3
 2509 0014 234B     		ldr	r3, .L127+4
 2510 0016 1B88     		ldrh	r3, [r3]
 2511 0018 1BB2     		sxth	r3, r3
 2512 001a D31A     		subs	r3, r2, r3
 2513 001c 002B     		cmp	r3, #0
 2514 001e B8BF     		it	lt
 2515 0020 5B42     		rsblt	r3, r3, #0
 2516 0022 CF2B     		cmp	r3, #207
 2517 0024 3BDD     		ble	.L121
 439:.\main.c      ****         {
 440:.\main.c      ****             //movement_state = STOPPED;
 441:.\main.c      ****             brakeMotor();
 2518              		.loc 1 441 0
 2519 0026 FFF7FEFF 		bl	brakeMotor
 442:.\main.c      ****             movement_state = prev_movement_state;
 2520              		.loc 1 442 0
 2521 002a 1F4B     		ldr	r3, .L127+8
 2522 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2523 002e 1C4B     		ldr	r3, .L127
 2524 0030 1A70     		strb	r2, [r3]
 443:.\main.c      ****             Timer_2_Stop();
 2525              		.loc 1 443 0
 2526 0032 FFF7FEFF 		bl	Timer_2_Stop
 2527 0036 32E0     		b	.L121
 2528              	.L122:
 444:.\main.c      ****         }
 445:.\main.c      ****     }
 446:.\main.c      ****     else if (movement_state == RTURN)
 2529              		.loc 1 446 0
 2530 0038 194B     		ldr	r3, .L127
 2531 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2532 003c 022B     		cmp	r3, #2
 2533 003e 15D1     		bne	.L125
 447:.\main.c      ****     {
 448:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2534              		.loc 1 448 0
 2535 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2536 0044 0346     		mov	r3, r0
 2537 0046 1A46     		mov	r2, r3
 2538 0048 164B     		ldr	r3, .L127+4
 2539 004a 1B88     		ldrh	r3, [r3]
 2540 004c 1BB2     		sxth	r3, r3
 2541 004e D31A     		subs	r3, r2, r3
 2542 0050 002B     		cmp	r3, #0
 2543 0052 B8BF     		it	lt
 2544 0054 5B42     		rsblt	r3, r3, #0
 2545 0056 CF2B     		cmp	r3, #207
 2546 0058 21DD     		ble	.L121
 449:.\main.c      ****         {
 450:.\main.c      ****             //movement_state = STOPPED;
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 54


 451:.\main.c      ****             brakeMotor();
 2547              		.loc 1 451 0
 2548 005a FFF7FEFF 		bl	brakeMotor
 452:.\main.c      ****             movement_state = prev_movement_state;
 2549              		.loc 1 452 0
 2550 005e 124B     		ldr	r3, .L127+8
 2551 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2552 0062 0F4B     		ldr	r3, .L127
 2553 0064 1A70     		strb	r2, [r3]
 453:.\main.c      ****             Timer_2_Stop();
 2554              		.loc 1 453 0
 2555 0066 FFF7FEFF 		bl	Timer_2_Stop
 2556 006a 18E0     		b	.L121
 2557              	.L125:
 454:.\main.c      ****         }
 455:.\main.c      ****     }
 456:.\main.c      ****     else if (movement_state == UTURN)
 2558              		.loc 1 456 0
 2559 006c 0C4B     		ldr	r3, .L127
 2560 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2561 0070 072B     		cmp	r3, #7
 2562 0072 14D1     		bne	.L121
 457:.\main.c      ****     {
 458:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2563              		.loc 1 458 0
 2564 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2565 0078 0346     		mov	r3, r0
 2566 007a 1A46     		mov	r2, r3
 2567 007c 094B     		ldr	r3, .L127+4
 2568 007e 1B88     		ldrh	r3, [r3]
 2569 0080 1BB2     		sxth	r3, r3
 2570 0082 D31A     		subs	r3, r2, r3
 2571 0084 002B     		cmp	r3, #0
 2572 0086 B8BF     		it	lt
 2573 0088 5B42     		rsblt	r3, r3, #0
 2574 008a CF2B     		cmp	r3, #207
 2575 008c 07DD     		ble	.L121
 459:.\main.c      ****         {
 460:.\main.c      ****             //movement_state = STOPPED;
 461:.\main.c      ****             brakeMotor();
 2576              		.loc 1 461 0
 2577 008e FFF7FEFF 		bl	brakeMotor
 462:.\main.c      ****             movement_state = prev_movement_state;
 2578              		.loc 1 462 0
 2579 0092 054B     		ldr	r3, .L127+8
 2580 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2581 0096 024B     		ldr	r3, .L127
 2582 0098 1A70     		strb	r2, [r3]
 463:.\main.c      ****             Timer_2_Stop();
 2583              		.loc 1 463 0
 2584 009a FFF7FEFF 		bl	Timer_2_Stop
 2585              	.L121:
 464:.\main.c      ****         }
 465:.\main.c      ****     }
 466:.\main.c      **** }
 2586              		.loc 1 466 0
 2587 009e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 55


 2588              	.L128:
 2589              		.align	2
 2590              	.L127:
 2591 00a0 00000000 		.word	movement_state
 2592 00a4 00000000 		.word	start_turn_count
 2593 00a8 00000000 		.word	prev_movement_state
 2594              		.cfi_endproc
 2595              	.LFE88:
 2596              		.size	isr_turn_timer, .-isr_turn_timer
 2597              		.section	.text.Stop_on_line,"ax",%progbits
 2598              		.align	2
 2599              		.global	Stop_on_line
 2600              		.thumb
 2601              		.thumb_func
 2602              		.type	Stop_on_line, %function
 2603              	Stop_on_line:
 2604              	.LFB89:
 467:.\main.c      **** 
 468:.\main.c      **** 
 469:.\main.c      **** CY_ISR (Stop_on_line)
 470:.\main.c      **** {
 2605              		.loc 1 470 0
 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 0
 2608              		@ frame_needed = 1, uses_anonymous_args = 0
 2609              		@ link register save eliminated.
 2610 0000 80B4     		push	{r7}
 2611              		.cfi_def_cfa_offset 4
 2612              		.cfi_offset 7, -4
 2613 0002 00AF     		add	r7, sp, #0
 2614              		.cfi_def_cfa_register 7
 471:.\main.c      ****     movement_state = STOPPED;
 2615              		.loc 1 471 0
 2616 0004 054B     		ldr	r3, .L131
 2617 0006 0322     		movs	r2, #3
 2618 0008 1A70     		strb	r2, [r3]
 472:.\main.c      ****     if(movement_state != DRIVE) return;
 2619              		.loc 1 472 0
 2620 000a 044B     		ldr	r3, .L131
 2621 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2622 000e 002B     		cmp	r3, #0
 2623 0010 00D0     		beq	.L129
 2624 0012 00BF     		nop
 2625              	.L129:
 473:.\main.c      ****     //initTurnLeft();
 474:.\main.c      **** }
 2626              		.loc 1 474 0
 2627 0014 BD46     		mov	sp, r7
 2628              		.cfi_def_cfa_register 13
 2629              		@ sp needed
 2630 0016 5DF8047B 		ldr	r7, [sp], #4
 2631              		.cfi_restore 7
 2632              		.cfi_def_cfa_offset 0
 2633 001a 7047     		bx	lr
 2634              	.L132:
 2635              		.align	2
 2636              	.L131:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 56


 2637 001c 00000000 		.word	movement_state
 2638              		.cfi_endproc
 2639              	.LFE89:
 2640              		.size	Stop_on_line, .-Stop_on_line
 2641              		.section	.rodata
 2642 0033 00       		.align	2
 2643              	.LC4:
 2644 0034 53746172 		.ascii	"Starting robot!\015\012\000"
 2644      74696E67 
 2644      20726F62 
 2644      6F74210D 
 2644      0A00
 2645              		.section	.text.button,"ax",%progbits
 2646              		.align	2
 2647              		.global	button
 2648              		.thumb
 2649              		.thumb_func
 2650              		.type	button, %function
 2651              	button:
 2652              	.LFB90:
 475:.\main.c      **** 
 476:.\main.c      **** CY_ISR (button)
 477:.\main.c      **** {
 2653              		.loc 1 477 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 1, uses_anonymous_args = 0
 2657 0000 80B5     		push	{r7, lr}
 2658              		.cfi_def_cfa_offset 8
 2659              		.cfi_offset 7, -8
 2660              		.cfi_offset 14, -4
 2661 0002 00AF     		add	r7, sp, #0
 2662              		.cfi_def_cfa_register 7
 478:.\main.c      ****     if(BT_ENABLED)
 2663              		.loc 1 478 0
 2664 0004 054B     		ldr	r3, .L135
 2665 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2666 0008 002B     		cmp	r3, #0
 2667 000a 02D0     		beq	.L134
 479:.\main.c      ****     {
 480:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2668              		.loc 1 480 0
 2669 000c 0448     		ldr	r0, .L135+4
 2670 000e FFF7FEFF 		bl	UART_PutString
 2671              	.L134:
 481:.\main.c      ****     }
 482:.\main.c      ****     movement_state = DRIVE;
 2672              		.loc 1 482 0
 2673 0012 044B     		ldr	r3, .L135+8
 2674 0014 0022     		movs	r2, #0
 2675 0016 1A70     		strb	r2, [r3]
 483:.\main.c      **** }
 2676              		.loc 1 483 0
 2677 0018 80BD     		pop	{r7, pc}
 2678              	.L136:
 2679 001a 00BF     		.align	2
 2680              	.L135:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 57


 2681 001c 00000000 		.word	BT_ENABLED
 2682 0020 34000000 		.word	.LC4
 2683 0024 00000000 		.word	movement_state
 2684              		.cfi_endproc
 2685              	.LFE90:
 2686              		.size	button, .-button
 2687              		.section	.text.isr_adcTimer,"ax",%progbits
 2688              		.align	2
 2689              		.global	isr_adcTimer
 2690              		.thumb
 2691              		.thumb_func
 2692              		.type	isr_adcTimer, %function
 2693              	isr_adcTimer:
 2694              	.LFB91:
 484:.\main.c      **** 
 485:.\main.c      **** CY_ISR(isr_adcTimer)
 486:.\main.c      **** {
 2695              		.loc 1 486 0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 1, uses_anonymous_args = 0
 2699 0000 80B5     		push	{r7, lr}
 2700              		.cfi_def_cfa_offset 8
 2701              		.cfi_offset 7, -8
 2702              		.cfi_offset 14, -4
 2703 0002 00AF     		add	r7, sp, #0
 2704              		.cfi_def_cfa_register 7
 487:.\main.c      ****     ADC_StartConvert();
 2705              		.loc 1 487 0
 2706 0004 FFF7FEFF 		bl	ADC_StartConvert
 488:.\main.c      **** }
 2707              		.loc 1 488 0
 2708 0008 80BD     		pop	{r7, pc}
 2709              		.cfi_endproc
 2710              	.LFE91:
 2711              		.size	isr_adcTimer, .-isr_adcTimer
 2712 000a 00BF     		.section	.text.changeToRF,"ax",%progbits
 2713              		.align	2
 2714              		.global	changeToRF
 2715              		.thumb
 2716              		.thumb_func
 2717              		.type	changeToRF, %function
 2718              	changeToRF:
 2719              	.LFB92:
 489:.\main.c      **** 
 490:.\main.c      **** 
 491:.\main.c      **** void changeToRF()
 492:.\main.c      **** {
 2720              		.loc 1 492 0
 2721              		.cfi_startproc
 2722              		@ args = 0, pretend = 0, frame = 0
 2723              		@ frame_needed = 1, uses_anonymous_args = 0
 2724 0000 80B5     		push	{r7, lr}
 2725              		.cfi_def_cfa_offset 8
 2726              		.cfi_offset 7, -8
 2727              		.cfi_offset 14, -4
 2728 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 58


 2729              		.cfi_def_cfa_register 7
 493:.\main.c      ****         //disable BT
 494:.\main.c      ****         BT_ENABLED = 0;
 2730              		.loc 1 494 0
 2731 0004 0B4B     		ldr	r3, .L139
 2732 0006 0022     		movs	r2, #0
 2733 0008 1A70     		strb	r2, [r3]
 495:.\main.c      ****         isrRF_RX_Stop();
 2734              		.loc 1 495 0
 2735 000a FFF7FEFF 		bl	isrRF_RX_Stop
 496:.\main.c      ****         UART_Stop();
 2736              		.loc 1 496 0
 2737 000e FFF7FEFF 		bl	UART_Stop
 497:.\main.c      ****         
 498:.\main.c      ****         //enable RF
 499:.\main.c      ****         BIN_ENABLED = 1;
 2738              		.loc 1 499 0
 2739 0012 094B     		ldr	r3, .L139+4
 2740 0014 0122     		movs	r2, #1
 2741 0016 1A70     		strb	r2, [r3]
 500:.\main.c      ****         UART_clk_SetDividerValue(130);
 2742              		.loc 1 500 0
 2743 0018 8120     		movs	r0, #129
 2744 001a 0121     		movs	r1, #1
 2745 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 501:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 2746              		.loc 1 501 0
 2747 0020 0648     		ldr	r0, .L139+8
 2748 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 502:.\main.c      ****         UART_Start();
 2749              		.loc 1 502 0
 2750 0026 FFF7FEFF 		bl	UART_Start
 503:.\main.c      ****         RF_BT_SELECT_Write(0);
 2751              		.loc 1 503 0
 2752 002a 0020     		movs	r0, #0
 2753 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 504:.\main.c      **** }
 2754              		.loc 1 504 0
 2755 0030 80BD     		pop	{r7, pc}
 2756              	.L140:
 2757 0032 00BF     		.align	2
 2758              	.L139:
 2759 0034 00000000 		.word	BT_ENABLED
 2760 0038 00000000 		.word	BIN_ENABLED
 2761 003c 00000000 		.word	rxInt
 2762              		.cfi_endproc
 2763              	.LFE92:
 2764              		.size	changeToRF, .-changeToRF
 2765              		.section	.text.changeToBT,"ax",%progbits
 2766              		.align	2
 2767              		.global	changeToBT
 2768              		.thumb
 2769              		.thumb_func
 2770              		.type	changeToBT, %function
 2771              	changeToBT:
 2772              	.LFB93:
 505:.\main.c      **** 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 59


 506:.\main.c      **** void changeToBT()
 507:.\main.c      **** {
 2773              		.loc 1 507 0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 0
 2776              		@ frame_needed = 1, uses_anonymous_args = 0
 2777 0000 80B5     		push	{r7, lr}
 2778              		.cfi_def_cfa_offset 8
 2779              		.cfi_offset 7, -8
 2780              		.cfi_offset 14, -4
 2781 0002 00AF     		add	r7, sp, #0
 2782              		.cfi_def_cfa_register 7
 508:.\main.c      ****         //disable RF
 509:.\main.c      ****         BIN_ENABLED = 0;
 2783              		.loc 1 509 0
 2784 0004 0B4B     		ldr	r3, .L142
 2785 0006 0022     		movs	r2, #0
 2786 0008 1A70     		strb	r2, [r3]
 510:.\main.c      ****         isrRF_RX_Stop();
 2787              		.loc 1 510 0
 2788 000a FFF7FEFF 		bl	isrRF_RX_Stop
 511:.\main.c      ****         UART_Stop();
 2789              		.loc 1 511 0
 2790 000e FFF7FEFF 		bl	UART_Stop
 512:.\main.c      ****         
 513:.\main.c      ****         //enable BT
 514:.\main.c      ****         BT_ENABLED = 1;
 2791              		.loc 1 514 0
 2792 0012 094B     		ldr	r3, .L142+4
 2793 0014 0122     		movs	r2, #1
 2794 0016 1A70     		strb	r2, [r3]
 515:.\main.c      ****         UART_clk_SetDividerValue(781);
 2795              		.loc 1 515 0
 2796 0018 4FF44370 		mov	r0, #780
 2797 001c 0121     		movs	r1, #1
 2798 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 516:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2799              		.loc 1 516 0
 2800 0022 0648     		ldr	r0, .L142+8
 2801 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 517:.\main.c      ****         UART_Start();
 2802              		.loc 1 517 0
 2803 0028 FFF7FEFF 		bl	UART_Start
 518:.\main.c      ****         RF_BT_SELECT_Write(1);
 2804              		.loc 1 518 0
 2805 002c 0120     		movs	r0, #1
 2806 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 519:.\main.c      **** }
 2807              		.loc 1 519 0
 2808 0032 80BD     		pop	{r7, pc}
 2809              	.L143:
 2810              		.align	2
 2811              	.L142:
 2812 0034 00000000 		.word	BIN_ENABLED
 2813 0038 00000000 		.word	BT_ENABLED
 2814 003c 00000000 		.word	BT_rxInt
 2815              		.cfi_endproc
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 60


 2816              	.LFE93:
 2817              		.size	changeToBT, .-changeToBT
 2818              		.section	.text.Quad_Dec_response,"ax",%progbits
 2819              		.align	2
 2820              		.global	Quad_Dec_response
 2821              		.thumb
 2822              		.thumb_func
 2823              		.type	Quad_Dec_response, %function
 2824              	Quad_Dec_response:
 2825              	.LFB94:
 520:.\main.c      **** 
 521:.\main.c      **** 
 522:.\main.c      **** void Quad_Dec_response()
 523:.\main.c      **** {
 2826              		.loc 1 523 0
 2827              		.cfi_startproc
 2828              		@ args = 0, pretend = 0, frame = 32
 2829              		@ frame_needed = 1, uses_anonymous_args = 0
 2830 0000 B0B5     		push	{r4, r5, r7, lr}
 2831              		.cfi_def_cfa_offset 16
 2832              		.cfi_offset 4, -16
 2833              		.cfi_offset 5, -12
 2834              		.cfi_offset 7, -8
 2835              		.cfi_offset 14, -4
 2836 0002 88B0     		sub	sp, sp, #32
 2837              		.cfi_def_cfa_offset 48
 2838 0004 00AF     		add	r7, sp, #0
 2839              		.cfi_def_cfa_register 7
 524:.\main.c      ****     //Check if the flag has been set
 525:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2840              		.loc 1 525 0
 2841 0006 814B     		ldr	r3, .L152
 2842 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2843 000a 002B     		cmp	r3, #0
 2844 000c 00D1     		bne	.L145
 2845 000e FAE0     		b	.L144
 2846              	.L145:
 526:.\main.c      ****     flag_calc_wheelspeed = 0;
 2847              		.loc 1 526 0
 2848 0010 7E4B     		ldr	r3, .L152
 2849 0012 0022     		movs	r2, #0
 2850 0014 1A70     		strb	r2, [r3]
 527:.\main.c      ****     
 528:.\main.c      ****     //char wheel_1_str [64];
 529:.\main.c      ****     //char wheel_2_str [64];
 530:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 531:.\main.c      ****     //usbPutString(wheel_1_str);
 532:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 533:.\main.c      ****     
 534:.\main.c      ****     //usbPutString(wheel_2_str);
 535:.\main.c      ****     
 536:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2851              		.loc 1 536 0
 2852 0016 7E4B     		ldr	r3, .L152+4
 2853 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2854 001a FB81     		strh	r3, [r7, #14]	@ movhi
 537:.\main.c      ****     int16 rightSpeed = quad_diff2;
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 61


 2855              		.loc 1 537 0
 2856 001c 7D4B     		ldr	r3, .L152+8
 2857 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2858 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 538:.\main.c      ****     double scalingLeft = 1;
 2859              		.loc 1 538 0
 2860 0022 4FF00002 		mov	r2, #0
 2861 0026 7C4B     		ldr	r3, .L152+12
 2862 0028 C7E90623 		strd	r2, [r7, #24]
 539:.\main.c      ****     double scalingRight = 1;
 2863              		.loc 1 539 0
 2864 002c 4FF00002 		mov	r2, #0
 2865 0030 794B     		ldr	r3, .L152+12
 2866 0032 C7E90423 		strd	r2, [r7, #16]
 540:.\main.c      ****     
 541:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 542:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2867              		.loc 1 542 0
 2868 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2869 003a 002B     		cmp	r3, #0
 2870 003c 0DD1     		bne	.L147
 2871              		.loc 1 542 0 is_stmt 0 discriminator 1
 2872 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2873 0042 002B     		cmp	r3, #0
 2874 0044 09D1     		bne	.L147
 543:.\main.c      ****        //leftSpeed = 3;
 544:.\main.c      ****         scalingLeft = 8;
 2875              		.loc 1 544 0 is_stmt 1
 2876 0046 4FF00002 		mov	r2, #0
 2877 004a 744B     		ldr	r3, .L152+16
 2878 004c C7E90623 		strd	r2, [r7, #24]
 545:.\main.c      ****         scalingRight = 8;
 2879              		.loc 1 545 0
 2880 0050 4FF00002 		mov	r2, #0
 2881 0054 714B     		ldr	r3, .L152+16
 2882 0056 C7E90423 		strd	r2, [r7, #16]
 2883              	.L147:
 546:.\main.c      ****     }
 547:.\main.c      **** 
 548:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2884              		.loc 1 548 0
 2885 005a 714B     		ldr	r3, .L152+20
 2886 005c 1B88     		ldrh	r3, [r3]
 2887 005e 1AB2     		sxth	r2, r3
 2888 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2889 0064 002B     		cmp	r3, #0
 2890 0066 B8BF     		it	lt
 2891 0068 5B42     		rsblt	r3, r3, #0
 2892 006a D31A     		subs	r3, r2, r3
 2893 006c BB60     		str	r3, [r7, #8]
 549:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 2894              		.loc 1 549 0
 2895 006e BB68     		ldr	r3, [r7, #8]
 2896 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2897 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2898 0078 BB68     		ldr	r3, [r7, #8]
 2899 007a 92FBF3F3 		sdiv	r3, r2, r3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 62


 2900 007e 1846     		mov	r0, r3
 2901 0080 FFF7FEFF 		bl	__aeabi_i2d
 2902 0084 0446     		mov	r4, r0
 2903 0086 0D46     		mov	r5, r1
 2904 0088 BB68     		ldr	r3, [r7, #8]
 2905 008a 002B     		cmp	r3, #0
 2906 008c B8BF     		it	lt
 2907 008e 5B42     		rsblt	r3, r3, #0
 2908 0090 1846     		mov	r0, r3
 2909 0092 FFF7FEFF 		bl	__aeabi_i2d
 2910 0096 0246     		mov	r2, r0
 2911 0098 0B46     		mov	r3, r1
 2912 009a 1046     		mov	r0, r2
 2913 009c 1946     		mov	r1, r3
 2914 009e FFF7FEFF 		bl	sqrt
 2915 00a2 0246     		mov	r2, r0
 2916 00a4 0B46     		mov	r3, r1
 2917 00a6 2046     		mov	r0, r4
 2918 00a8 2946     		mov	r1, r5
 2919 00aa FFF7FEFF 		bl	__aeabi_dmul
 2920 00ae 0246     		mov	r2, r0
 2921 00b0 0B46     		mov	r3, r1
 2922 00b2 1046     		mov	r0, r2
 2923 00b4 1946     		mov	r1, r3
 2924 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2925 00ba 0346     		mov	r3, r0
 2926 00bc 7B60     		str	r3, [r7, #4]
 550:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2927              		.loc 1 550 0
 2928 00be 594B     		ldr	r3, .L152+24
 2929 00c0 1B88     		ldrh	r3, [r3]
 2930 00c2 1BB2     		sxth	r3, r3
 2931 00c4 1846     		mov	r0, r3
 2932 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2933 00ca 0446     		mov	r4, r0
 2934 00cc 0D46     		mov	r5, r1
 2935 00ce 7868     		ldr	r0, [r7, #4]
 2936 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2937 00d4 0246     		mov	r2, r0
 2938 00d6 0B46     		mov	r3, r1
 2939 00d8 1046     		mov	r0, r2
 2940 00da 1946     		mov	r1, r3
 2941 00dc D7E90623 		ldrd	r2, [r7, #24]
 2942 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2943 00e4 0246     		mov	r2, r0
 2944 00e6 0B46     		mov	r3, r1
 2945 00e8 2046     		mov	r0, r4
 2946 00ea 2946     		mov	r1, r5
 2947 00ec FFF7FEFF 		bl	__aeabi_dadd
 2948 00f0 0246     		mov	r2, r0
 2949 00f2 0B46     		mov	r3, r1
 2950 00f4 1046     		mov	r0, r2
 2951 00f6 1946     		mov	r1, r3
 2952 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 2953 00fc 0346     		mov	r3, r0
 2954 00fe 9AB2     		uxth	r2, r3
 2955 0100 484B     		ldr	r3, .L152+24
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 63


 2956 0102 1A80     		strh	r2, [r3]	@ movhi
 551:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 2957              		.loc 1 551 0
 2958 0104 484B     		ldr	r3, .L152+28
 2959 0106 1B88     		ldrh	r3, [r3]
 2960 0108 1AB2     		sxth	r2, r3
 2961 010a B7F90C30 		ldrsh	r3, [r7, #12]
 2962 010e 002B     		cmp	r3, #0
 2963 0110 B8BF     		it	lt
 2964 0112 5B42     		rsblt	r3, r3, #0
 2965 0114 D31A     		subs	r3, r2, r3
 2966 0116 BB60     		str	r3, [r7, #8]
 552:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 2967              		.loc 1 552 0
 2968 0118 BB68     		ldr	r3, [r7, #8]
 2969 011a 83EAE372 		eor	r2, r3, r3, asr #31
 2970 011e A2EBE372 		sub	r2, r2, r3, asr #31
 2971 0122 BB68     		ldr	r3, [r7, #8]
 2972 0124 92FBF3F3 		sdiv	r3, r2, r3
 2973 0128 1846     		mov	r0, r3
 2974 012a FFF7FEFF 		bl	__aeabi_i2d
 2975 012e 0446     		mov	r4, r0
 2976 0130 0D46     		mov	r5, r1
 2977 0132 BB68     		ldr	r3, [r7, #8]
 2978 0134 002B     		cmp	r3, #0
 2979 0136 B8BF     		it	lt
 2980 0138 5B42     		rsblt	r3, r3, #0
 2981 013a 1846     		mov	r0, r3
 2982 013c FFF7FEFF 		bl	__aeabi_i2d
 2983 0140 0246     		mov	r2, r0
 2984 0142 0B46     		mov	r3, r1
 2985 0144 1046     		mov	r0, r2
 2986 0146 1946     		mov	r1, r3
 2987 0148 FFF7FEFF 		bl	sqrt
 2988 014c 0246     		mov	r2, r0
 2989 014e 0B46     		mov	r3, r1
 2990 0150 2046     		mov	r0, r4
 2991 0152 2946     		mov	r1, r5
 2992 0154 FFF7FEFF 		bl	__aeabi_dmul
 2993 0158 0246     		mov	r2, r0
 2994 015a 0B46     		mov	r3, r1
 2995 015c 1046     		mov	r0, r2
 2996 015e 1946     		mov	r1, r3
 2997 0160 FFF7FEFF 		bl	__aeabi_d2iz
 2998 0164 0346     		mov	r3, r0
 2999 0166 7B60     		str	r3, [r7, #4]
 553:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 3000              		.loc 1 553 0
 3001 0168 304B     		ldr	r3, .L152+32
 3002 016a 1B88     		ldrh	r3, [r3]
 3003 016c 1BB2     		sxth	r3, r3
 3004 016e 1846     		mov	r0, r3
 3005 0170 FFF7FEFF 		bl	__aeabi_i2d
 3006 0174 0446     		mov	r4, r0
 3007 0176 0D46     		mov	r5, r1
 3008 0178 7868     		ldr	r0, [r7, #4]
 3009 017a FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 64


 3010 017e 0246     		mov	r2, r0
 3011 0180 0B46     		mov	r3, r1
 3012 0182 1046     		mov	r0, r2
 3013 0184 1946     		mov	r1, r3
 3014 0186 D7E90423 		ldrd	r2, [r7, #16]
 3015 018a FFF7FEFF 		bl	__aeabi_dmul
 3016 018e 0246     		mov	r2, r0
 3017 0190 0B46     		mov	r3, r1
 3018 0192 2046     		mov	r0, r4
 3019 0194 2946     		mov	r1, r5
 3020 0196 FFF7FEFF 		bl	__aeabi_dadd
 3021 019a 0246     		mov	r2, r0
 3022 019c 0B46     		mov	r3, r1
 3023 019e 1046     		mov	r0, r2
 3024 01a0 1946     		mov	r1, r3
 3025 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 3026 01a6 0346     		mov	r3, r0
 3027 01a8 9AB2     		uxth	r2, r3
 3028 01aa 204B     		ldr	r3, .L152+32
 3029 01ac 1A80     		strh	r2, [r3]	@ movhi
 554:.\main.c      ****     
 555:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 3030              		.loc 1 555 0
 3031 01ae 1F4B     		ldr	r3, .L152+32
 3032 01b0 1B88     		ldrh	r3, [r3]
 3033 01b2 1BB2     		sxth	r3, r3
 3034 01b4 002B     		cmp	r3, #0
 3035 01b6 02DA     		bge	.L148
 3036              		.loc 1 555 0 is_stmt 0 discriminator 1
 3037 01b8 1C4B     		ldr	r3, .L152+32
 3038 01ba 0022     		movs	r2, #0
 3039 01bc 1A80     		strh	r2, [r3]	@ movhi
 3040              	.L148:
 556:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 3041              		.loc 1 556 0 is_stmt 1
 3042 01be 194B     		ldr	r3, .L152+24
 3043 01c0 1B88     		ldrh	r3, [r3]
 3044 01c2 1BB2     		sxth	r3, r3
 3045 01c4 002B     		cmp	r3, #0
 3046 01c6 02DA     		bge	.L149
 3047              		.loc 1 556 0 is_stmt 0 discriminator 1
 3048 01c8 164B     		ldr	r3, .L152+24
 3049 01ca 0022     		movs	r2, #0
 3050 01cc 1A80     		strh	r2, [r3]	@ movhi
 3051              	.L149:
 557:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 3052              		.loc 1 557 0 is_stmt 1
 3053 01ce 174B     		ldr	r3, .L152+32
 3054 01d0 1B88     		ldrh	r3, [r3]
 3055 01d2 1BB2     		sxth	r3, r3
 3056 01d4 642B     		cmp	r3, #100
 3057 01d6 02DD     		ble	.L150
 3058              		.loc 1 557 0 is_stmt 0 discriminator 1
 3059 01d8 144B     		ldr	r3, .L152+32
 3060 01da 6422     		movs	r2, #100
 3061 01dc 1A80     		strh	r2, [r3]	@ movhi
 3062              	.L150:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 65


 558:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 3063              		.loc 1 558 0 is_stmt 1
 3064 01de 114B     		ldr	r3, .L152+24
 3065 01e0 1B88     		ldrh	r3, [r3]
 3066 01e2 1BB2     		sxth	r3, r3
 3067 01e4 642B     		cmp	r3, #100
 3068 01e6 02DD     		ble	.L151
 3069              		.loc 1 558 0 is_stmt 0 discriminator 1
 3070 01e8 0E4B     		ldr	r3, .L152+24
 3071 01ea 6422     		movs	r2, #100
 3072 01ec 1A80     		strh	r2, [r3]	@ movhi
 3073              	.L151:
 559:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 3074              		.loc 1 559 0 is_stmt 1
 3075 01ee 0D4B     		ldr	r3, .L152+24
 3076 01f0 1B88     		ldrh	r3, [r3]
 3077 01f2 DBB2     		uxtb	r3, r3
 3078 01f4 1846     		mov	r0, r3
 3079 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 560:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 3080              		.loc 1 560 0
 3081 01fa 0C4B     		ldr	r3, .L152+32
 3082 01fc 1B88     		ldrh	r3, [r3]
 3083 01fe DBB2     		uxtb	r3, r3
 3084 0200 1846     		mov	r0, r3
 3085 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 3086              	.L144:
 561:.\main.c      **** }
 3087              		.loc 1 561 0
 3088 0206 2037     		adds	r7, r7, #32
 3089              		.cfi_def_cfa_offset 16
 3090 0208 BD46     		mov	sp, r7
 3091              		.cfi_def_cfa_register 13
 3092              		@ sp needed
 3093 020a B0BD     		pop	{r4, r5, r7, pc}
 3094              	.L153:
 3095              		.align	2
 3096              	.L152:
 3097 020c 00000000 		.word	flag_calc_wheelspeed
 3098 0210 00000000 		.word	quad_diff1
 3099 0214 00000000 		.word	quad_diff2
 3100 0218 0000F03F 		.word	1072693248
 3101 021c 00002040 		.word	1075838976
 3102 0220 00000000 		.word	leftSpeedLimit
 3103 0224 00000000 		.word	left_duty_cycle
 3104 0228 00000000 		.word	rightSpeedLimit
 3105 022c 00000000 		.word	right_duty_cycle
 3106              		.cfi_endproc
 3107              	.LFE94:
 3108              		.size	Quad_Dec_response, .-Quad_Dec_response
 3109              		.section	.text.trackLine,"ax",%progbits
 3110              		.align	2
 3111              		.global	trackLine
 3112              		.thumb
 3113              		.thumb_func
 3114              		.type	trackLine, %function
 3115              	trackLine:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 66


 3116              	.LFB95:
 562:.\main.c      **** 
 563:.\main.c      **** void trackLine()
 564:.\main.c      **** {
 3117              		.loc 1 564 0
 3118              		.cfi_startproc
 3119              		@ args = 0, pretend = 0, frame = 8
 3120              		@ frame_needed = 1, uses_anonymous_args = 0
 3121 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3122              		.cfi_def_cfa_offset 24
 3123              		.cfi_offset 4, -24
 3124              		.cfi_offset 5, -20
 3125              		.cfi_offset 7, -16
 3126              		.cfi_offset 8, -12
 3127              		.cfi_offset 9, -8
 3128              		.cfi_offset 14, -4
 3129 0004 82B0     		sub	sp, sp, #8
 3130              		.cfi_def_cfa_offset 32
 3131 0006 00AF     		add	r7, sp, #0
 3132              		.cfi_def_cfa_register 7
 565:.\main.c      ****     //read the value of the three central-front sensors
 566:.\main.c      ****     
 567:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3133              		.loc 1 567 0
 3134 0008 FFF7FEFF 		bl	NLSens_out_Read
 3135 000c 0346     		mov	r3, r0
 3136 000e FB71     		strb	r3, [r7, #7]
 568:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3137              		.loc 1 568 0
 3138 0010 FFF7FEFF 		bl	NRSens_out_Read
 3139 0014 0346     		mov	r3, r0
 3140 0016 BB71     		strb	r3, [r7, #6]
 569:.\main.c      ****     uint8 mid = MSens_out_Read();
 3141              		.loc 1 569 0
 3142 0018 FFF7FEFF 		bl	MSens_out_Read
 3143 001c 0346     		mov	r3, r0
 3144 001e 7B71     		strb	r3, [r7, #5]
 570:.\main.c      ****     //if only the left one, hard left
 571:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 3145              		.loc 1 571 0
 3146 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3147 0022 002B     		cmp	r3, #0
 3148 0024 27D0     		beq	.L155
 3149              		.loc 1 571 0 is_stmt 0 discriminator 1
 3150 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3151 0028 002B     		cmp	r3, #0
 3152 002a 24D1     		bne	.L155
 3153              		.loc 1 571 0 discriminator 2
 3154 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3155 002e 002B     		cmp	r3, #0
 3156 0030 21D1     		bne	.L155
 572:.\main.c      ****     {
 573:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 3157              		.loc 1 573 0 is_stmt 1
 3158 0032 454B     		ldr	r3, .L160
 3159 0034 D3E90023 		ldrd	r2, [r3]
 3160 0038 1046     		mov	r0, r2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 67


 3161 003a 1946     		mov	r1, r3
 3162 003c 4FF00002 		mov	r2, #0
 3163 0040 424B     		ldr	r3, .L160+4
 3164 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3165 0046 0246     		mov	r2, r0
 3166 0048 0B46     		mov	r3, r1
 3167 004a 1446     		mov	r4, r2
 3168 004c 1D46     		mov	r5, r3
 3169 004e 3E4B     		ldr	r3, .L160
 3170 0050 D3E90023 		ldrd	r2, [r3]
 3171 0054 9046     		mov	r8, r2
 3172 0056 83F00049 		eor	r9, r3, #-2147483648
 3173 005a 4046     		mov	r0, r8
 3174 005c 4946     		mov	r1, r9
 3175 005e 4FF00002 		mov	r2, #0
 3176 0062 3A4B     		ldr	r3, .L160+4
 3177 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3178 0068 0246     		mov	r2, r0
 3179 006a 0B46     		mov	r3, r1
 3180 006c 2046     		mov	r0, r4
 3181 006e 2946     		mov	r1, r5
 3182 0070 FFF7FEFF 		bl	setSpeed
 3183 0074 63E0     		b	.L154
 3184              	.L155:
 574:.\main.c      ****     }
 575:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3185              		.loc 1 575 0
 3186 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3187 0078 002B     		cmp	r3, #0
 3188 007a 11D0     		beq	.L157
 3189              		.loc 1 575 0 is_stmt 0 discriminator 1
 3190 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3191 007e 002B     		cmp	r3, #0
 3192 0080 0ED0     		beq	.L157
 3193              		.loc 1 575 0 discriminator 2
 3194 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3195 0084 002B     		cmp	r3, #0
 3196 0086 0BD1     		bne	.L157
 576:.\main.c      ****     {
 577:.\main.c      ****         setSpeed(speed, 0);
 3197              		.loc 1 577 0 is_stmt 1
 3198 0088 2F4B     		ldr	r3, .L160
 3199 008a D3E90023 		ldrd	r2, [r3]
 3200 008e 1046     		mov	r0, r2
 3201 0090 1946     		mov	r1, r3
 3202 0092 4FF00002 		mov	r2, #0
 3203 0096 4FF00003 		mov	r3, #0
 3204 009a FFF7FEFF 		bl	setSpeed
 3205 009e 4EE0     		b	.L154
 3206              	.L157:
 578:.\main.c      ****     }
 579:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3207              		.loc 1 579 0
 3208 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3209 00a2 002B     		cmp	r3, #0
 3210 00a4 0FD0     		beq	.L158
 3211              		.loc 1 579 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 68


 3212 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3213 00a8 002B     		cmp	r3, #0
 3214 00aa 0CD0     		beq	.L158
 3215              		.loc 1 579 0 discriminator 2
 3216 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3217 00ae 002B     		cmp	r3, #0
 3218 00b0 09D1     		bne	.L158
 580:.\main.c      ****     {
 581:.\main.c      ****         setSpeed(0, speed);
 3219              		.loc 1 581 0 is_stmt 1
 3220 00b2 254B     		ldr	r3, .L160
 3221 00b4 D3E90023 		ldrd	r2, [r3]
 3222 00b8 4FF00000 		mov	r0, #0
 3223 00bc 4FF00001 		mov	r1, #0
 3224 00c0 FFF7FEFF 		bl	setSpeed
 3225 00c4 3BE0     		b	.L154
 3226              	.L158:
 582:.\main.c      ****     }
 583:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3227              		.loc 1 583 0
 3228 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3229 00c8 002B     		cmp	r3, #0
 3230 00ca 27D0     		beq	.L159
 3231              		.loc 1 583 0 is_stmt 0 discriminator 1
 3232 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3233 00ce 002B     		cmp	r3, #0
 3234 00d0 24D1     		bne	.L159
 3235              		.loc 1 583 0 discriminator 2
 3236 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3237 00d4 002B     		cmp	r3, #0
 3238 00d6 21D1     		bne	.L159
 584:.\main.c      ****     {
 585:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 3239              		.loc 1 585 0 is_stmt 1
 3240 00d8 1B4B     		ldr	r3, .L160
 3241 00da D3E90023 		ldrd	r2, [r3]
 3242 00de 1446     		mov	r4, r2
 3243 00e0 83F00045 		eor	r5, r3, #-2147483648
 3244 00e4 2046     		mov	r0, r4
 3245 00e6 2946     		mov	r1, r5
 3246 00e8 4FF00002 		mov	r2, #0
 3247 00ec 174B     		ldr	r3, .L160+4
 3248 00ee FFF7FEFF 		bl	__aeabi_ddiv
 3249 00f2 0246     		mov	r2, r0
 3250 00f4 0B46     		mov	r3, r1
 3251 00f6 1446     		mov	r4, r2
 3252 00f8 1D46     		mov	r5, r3
 3253 00fa 134B     		ldr	r3, .L160
 3254 00fc D3E90023 		ldrd	r2, [r3]
 3255 0100 1046     		mov	r0, r2
 3256 0102 1946     		mov	r1, r3
 3257 0104 4FF00002 		mov	r2, #0
 3258 0108 104B     		ldr	r3, .L160+4
 3259 010a FFF7FEFF 		bl	__aeabi_ddiv
 3260 010e 0246     		mov	r2, r0
 3261 0110 0B46     		mov	r3, r1
 3262 0112 2046     		mov	r0, r4
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 69


 3263 0114 2946     		mov	r1, r5
 3264 0116 FFF7FEFF 		bl	setSpeed
 3265 011a 10E0     		b	.L154
 3266              	.L159:
 586:.\main.c      ****     }
 587:.\main.c      ****     else if (mid && !nr && !nl)
 3267              		.loc 1 587 0
 3268 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3269 011e 002B     		cmp	r3, #0
 3270 0120 0DD0     		beq	.L154
 3271              		.loc 1 587 0 is_stmt 0 discriminator 1
 3272 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3273 0124 002B     		cmp	r3, #0
 3274 0126 0AD1     		bne	.L154
 3275              		.loc 1 587 0 discriminator 2
 3276 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3277 012a 002B     		cmp	r3, #0
 3278 012c 07D1     		bne	.L154
 588:.\main.c      ****     {
 589:.\main.c      ****         setSpeed(speed,speed);
 3279              		.loc 1 589 0 is_stmt 1
 3280 012e 064B     		ldr	r3, .L160
 3281 0130 D3E90001 		ldrd	r0, [r3]
 3282 0134 044B     		ldr	r3, .L160
 3283 0136 D3E90023 		ldrd	r2, [r3]
 3284 013a FFF7FEFF 		bl	setSpeed
 3285              	.L154:
 590:.\main.c      ****     }
 591:.\main.c      ****    // else if (!mid && !nr && !nl)
 592:.\main.c      ****     //{
 593:.\main.c      ****         //setSpeed(0,0);
 594:.\main.c      ****     //}
 595:.\main.c      **** }
 3286              		.loc 1 595 0
 3287 013e 0837     		adds	r7, r7, #8
 3288              		.cfi_def_cfa_offset 24
 3289 0140 BD46     		mov	sp, r7
 3290              		.cfi_def_cfa_register 13
 3291              		@ sp needed
 3292 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3293              	.L161:
 3294 0146 00BF     		.align	2
 3295              	.L160:
 3296 0148 00000000 		.word	speed
 3297 014c 0000F83F 		.word	1073217536
 3298              		.cfi_endproc
 3299              	.LFE95:
 3300              		.size	trackLine, .-trackLine
 3301              		.section	.text.trackLineZ,"ax",%progbits
 3302              		.align	2
 3303              		.global	trackLineZ
 3304              		.thumb
 3305              		.thumb_func
 3306              		.type	trackLineZ, %function
 3307              	trackLineZ:
 3308              	.LFB96:
 596:.\main.c      **** 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 70


 597:.\main.c      **** void trackLineZ()
 598:.\main.c      **** {
 3309              		.loc 1 598 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 8
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3314              		.cfi_def_cfa_offset 24
 3315              		.cfi_offset 4, -24
 3316              		.cfi_offset 5, -20
 3317              		.cfi_offset 7, -16
 3318              		.cfi_offset 8, -12
 3319              		.cfi_offset 9, -8
 3320              		.cfi_offset 14, -4
 3321 0004 82B0     		sub	sp, sp, #8
 3322              		.cfi_def_cfa_offset 32
 3323 0006 00AF     		add	r7, sp, #0
 3324              		.cfi_def_cfa_register 7
 599:.\main.c      ****     //read the value of the three central-front sensors
 600:.\main.c      ****     
 601:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3325              		.loc 1 601 0
 3326 0008 FFF7FEFF 		bl	NLSens_out_Read
 3327 000c 0346     		mov	r3, r0
 3328 000e FB71     		strb	r3, [r7, #7]
 602:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3329              		.loc 1 602 0
 3330 0010 FFF7FEFF 		bl	NRSens_out_Read
 3331 0014 0346     		mov	r3, r0
 3332 0016 BB71     		strb	r3, [r7, #6]
 603:.\main.c      ****     uint8 mid = MSens_out_Read();
 3333              		.loc 1 603 0
 3334 0018 FFF7FEFF 		bl	MSens_out_Read
 3335 001c 0346     		mov	r3, r0
 3336 001e 7B71     		strb	r3, [r7, #5]
 604:.\main.c      ****     
 605:.\main.c      ****     //if only the left one, hard left
 606:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 3337              		.loc 1 606 0
 3338 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3339 0022 002B     		cmp	r3, #0
 3340 0024 13D0     		beq	.L163
 3341              		.loc 1 606 0 is_stmt 0 discriminator 1
 3342 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3343 0028 002B     		cmp	r3, #0
 3344 002a 10D1     		bne	.L163
 3345              		.loc 1 606 0 discriminator 2
 3346 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3347 002e 002B     		cmp	r3, #0
 3348 0030 0DD1     		bne	.L163
 607:.\main.c      ****     {
 608:.\main.c      ****         setSpeed(speed, -speed);
 3349              		.loc 1 608 0 is_stmt 1
 3350 0032 274B     		ldr	r3, .L168
 3351 0034 D3E90001 		ldrd	r0, [r3]
 3352 0038 254B     		ldr	r3, .L168
 3353 003a D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 71


 3354 003e 9046     		mov	r8, r2
 3355 0040 83F00049 		eor	r9, r3, #-2147483648
 3356 0044 4246     		mov	r2, r8
 3357 0046 4B46     		mov	r3, r9
 3358 0048 FFF7FEFF 		bl	setSpeed
 3359 004c 3BE0     		b	.L162
 3360              	.L163:
 609:.\main.c      ****     }
 610:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3361              		.loc 1 610 0
 3362 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3363 0050 002B     		cmp	r3, #0
 3364 0052 06D0     		beq	.L165
 3365              		.loc 1 610 0 is_stmt 0 discriminator 1
 3366 0054 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3367 0056 002B     		cmp	r3, #0
 3368 0058 03D0     		beq	.L165
 3369              		.loc 1 610 0 discriminator 2
 3370 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3371 005c 002B     		cmp	r3, #0
 3372 005e 00D1     		bne	.L165
 3373              		.loc 1 610 0
 3374 0060 31E0     		b	.L162
 3375              	.L165:
 611:.\main.c      ****     {
 612:.\main.c      ****         //setSpeed(speed,speed / 1.5);
 613:.\main.c      ****         //setSpeed(speed, -speed);
 614:.\main.c      ****     }
 615:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3376              		.loc 1 615 0 is_stmt 1
 3377 0062 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3378 0064 002B     		cmp	r3, #0
 3379 0066 06D0     		beq	.L166
 3380              		.loc 1 615 0 is_stmt 0 discriminator 1
 3381 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3382 006a 002B     		cmp	r3, #0
 3383 006c 03D0     		beq	.L166
 3384              		.loc 1 615 0 discriminator 2
 3385 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3386 0070 002B     		cmp	r3, #0
 3387 0072 00D1     		bne	.L166
 3388              		.loc 1 615 0
 3389 0074 27E0     		b	.L162
 3390              	.L166:
 616:.\main.c      ****     {
 617:.\main.c      ****        // setSpeed(speed / 1.5,speed);
 618:.\main.c      ****         //setSpeed(-speed,speed);
 619:.\main.c      ****     }
 620:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3391              		.loc 1 620 0 is_stmt 1
 3392 0076 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3393 0078 002B     		cmp	r3, #0
 3394 007a 13D0     		beq	.L167
 3395              		.loc 1 620 0 is_stmt 0 discriminator 1
 3396 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3397 007e 002B     		cmp	r3, #0
 3398 0080 10D1     		bne	.L167
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 72


 3399              		.loc 1 620 0 discriminator 2
 3400 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3401 0084 002B     		cmp	r3, #0
 3402 0086 0DD1     		bne	.L167
 621:.\main.c      ****     {
 622:.\main.c      ****         setSpeed(-speed,speed);
 3403              		.loc 1 622 0 is_stmt 1
 3404 0088 114B     		ldr	r3, .L168
 3405 008a D3E90023 		ldrd	r2, [r3]
 3406 008e 1446     		mov	r4, r2
 3407 0090 83F00045 		eor	r5, r3, #-2147483648
 3408 0094 0E4B     		ldr	r3, .L168
 3409 0096 D3E90023 		ldrd	r2, [r3]
 3410 009a 2046     		mov	r0, r4
 3411 009c 2946     		mov	r1, r5
 3412 009e FFF7FEFF 		bl	setSpeed
 3413 00a2 10E0     		b	.L162
 3414              	.L167:
 623:.\main.c      ****     }
 624:.\main.c      ****     else if (mid && !nr && !nl)
 3415              		.loc 1 624 0
 3416 00a4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3417 00a6 002B     		cmp	r3, #0
 3418 00a8 0DD0     		beq	.L162
 3419              		.loc 1 624 0 is_stmt 0 discriminator 1
 3420 00aa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3421 00ac 002B     		cmp	r3, #0
 3422 00ae 0AD1     		bne	.L162
 3423              		.loc 1 624 0 discriminator 2
 3424 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3425 00b2 002B     		cmp	r3, #0
 3426 00b4 07D1     		bne	.L162
 625:.\main.c      ****     {
 626:.\main.c      ****         setSpeed(speed,speed);
 3427              		.loc 1 626 0 is_stmt 1
 3428 00b6 064B     		ldr	r3, .L168
 3429 00b8 D3E90001 		ldrd	r0, [r3]
 3430 00bc 044B     		ldr	r3, .L168
 3431 00be D3E90023 		ldrd	r2, [r3]
 3432 00c2 FFF7FEFF 		bl	setSpeed
 3433              	.L162:
 627:.\main.c      ****     }
 628:.\main.c      ****     //else setSpeed(speed, speed);
 629:.\main.c      ****   
 630:.\main.c      ****    // else if (!mid && !nr && !nl)
 631:.\main.c      ****     //{
 632:.\main.c      ****         //setSpeed(0,0);
 633:.\main.c      ****     //}
 634:.\main.c      **** }
 3434              		.loc 1 634 0
 3435 00c6 0837     		adds	r7, r7, #8
 3436              		.cfi_def_cfa_offset 24
 3437 00c8 BD46     		mov	sp, r7
 3438              		.cfi_def_cfa_register 13
 3439              		@ sp needed
 3440 00ca BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3441              	.L169:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 73


 3442 00ce 00BF     		.align	2
 3443              	.L168:
 3444 00d0 00000000 		.word	speed
 3445              		.cfi_endproc
 3446              	.LFE96:
 3447              		.size	trackLineZ, .-trackLineZ
 3448              		.section	.text.trackLineU,"ax",%progbits
 3449              		.align	2
 3450              		.global	trackLineU
 3451              		.thumb
 3452              		.thumb_func
 3453              		.type	trackLineU, %function
 3454              	trackLineU:
 3455              	.LFB97:
 635:.\main.c      **** 
 636:.\main.c      **** void trackLineU()
 637:.\main.c      **** {
 3456              		.loc 1 637 0
 3457              		.cfi_startproc
 3458              		@ args = 0, pretend = 0, frame = 8
 3459              		@ frame_needed = 1, uses_anonymous_args = 0
 3460 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3461              		.cfi_def_cfa_offset 24
 3462              		.cfi_offset 4, -24
 3463              		.cfi_offset 5, -20
 3464              		.cfi_offset 7, -16
 3465              		.cfi_offset 8, -12
 3466              		.cfi_offset 9, -8
 3467              		.cfi_offset 14, -4
 3468 0004 82B0     		sub	sp, sp, #8
 3469              		.cfi_def_cfa_offset 32
 3470 0006 00AF     		add	r7, sp, #0
 3471              		.cfi_def_cfa_register 7
 638:.\main.c      ****     //read the value of the three central-front sensors
 639:.\main.c      ****     
 640:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3472              		.loc 1 640 0
 3473 0008 FFF7FEFF 		bl	NLSens_out_Read
 3474 000c 0346     		mov	r3, r0
 3475 000e FB71     		strb	r3, [r7, #7]
 641:.\main.c      ****     uint8 fl = FLSens_out_Read();
 3476              		.loc 1 641 0
 3477 0010 FFF7FEFF 		bl	FLSens_out_Read
 3478 0014 0346     		mov	r3, r0
 3479 0016 BB71     		strb	r3, [r7, #6]
 642:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3480              		.loc 1 642 0
 3481 0018 FFF7FEFF 		bl	NRSens_out_Read
 3482 001c 0346     		mov	r3, r0
 3483 001e 7B71     		strb	r3, [r7, #5]
 643:.\main.c      ****     uint8 fr = FRSens_out_Read();
 3484              		.loc 1 643 0
 3485 0020 FFF7FEFF 		bl	FRSens_out_Read
 3486 0024 0346     		mov	r3, r0
 3487 0026 3B71     		strb	r3, [r7, #4]
 644:.\main.c      ****     uint8 mid = MSens_out_Read();
 3488              		.loc 1 644 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 74


 3489 0028 FFF7FEFF 		bl	MSens_out_Read
 3490 002c 0346     		mov	r3, r0
 3491 002e FB70     		strb	r3, [r7, #3]
 645:.\main.c      ****     if (fl && mid && fr) // T intersection
 3492              		.loc 1 645 0
 3493 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3494 0032 002B     		cmp	r3, #0
 3495 0034 06D0     		beq	.L171
 3496              		.loc 1 645 0 is_stmt 0 discriminator 1
 3497 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3498 0038 002B     		cmp	r3, #0
 3499 003a 03D0     		beq	.L171
 3500              		.loc 1 645 0 discriminator 2
 3501 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3502 003e 002B     		cmp	r3, #0
 3503 0040 00D0     		beq	.L171
 3504              		.loc 1 645 0
 3505 0042 ACE0     		b	.L170
 3506              	.L171:
 646:.\main.c      ****     {
 647:.\main.c      ****         // not implemented
 648:.\main.c      ****     }
 649:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 3507              		.loc 1 649 0 is_stmt 1
 3508 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3509 0046 002B     		cmp	r3, #0
 3510 0048 0BD0     		beq	.L173
 3511              		.loc 1 649 0 is_stmt 0 discriminator 1
 3512 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3513 004c 002B     		cmp	r3, #0
 3514 004e 08D0     		beq	.L173
 650:.\main.c      ****     {
 651:.\main.c      ****         setSpeed(speed, speed);
 3515              		.loc 1 651 0 is_stmt 1
 3516 0050 554B     		ldr	r3, .L179
 3517 0052 D3E90001 		ldrd	r0, [r3]
 3518 0056 544B     		ldr	r3, .L179
 3519 0058 D3E90023 		ldrd	r2, [r3]
 3520 005c FFF7FEFF 		bl	setSpeed
 3521 0060 9DE0     		b	.L170
 3522              	.L173:
 652:.\main.c      ****     }
 653:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 3523              		.loc 1 653 0
 3524 0062 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3525 0064 002B     		cmp	r3, #0
 3526 0066 0BD0     		beq	.L174
 3527              		.loc 1 653 0 is_stmt 0 discriminator 1
 3528 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3529 006a 002B     		cmp	r3, #0
 3530 006c 08D0     		beq	.L174
 654:.\main.c      ****     {
 655:.\main.c      ****         setSpeed(speed, speed);
 3531              		.loc 1 655 0 is_stmt 1
 3532 006e 4E4B     		ldr	r3, .L179
 3533 0070 D3E90001 		ldrd	r0, [r3]
 3534 0074 4C4B     		ldr	r3, .L179
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 75


 3535 0076 D3E90023 		ldrd	r2, [r3]
 3536 007a FFF7FEFF 		bl	setSpeed
 3537 007e 8EE0     		b	.L170
 3538              	.L174:
 656:.\main.c      ****     }
 657:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 3539              		.loc 1 657 0
 3540 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3541 0082 002B     		cmp	r3, #0
 3542 0084 27D0     		beq	.L175
 3543              		.loc 1 657 0 is_stmt 0 discriminator 1
 3544 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3545 0088 002B     		cmp	r3, #0
 3546 008a 24D1     		bne	.L175
 3547              		.loc 1 657 0 discriminator 2
 3548 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3549 008e 002B     		cmp	r3, #0
 3550 0090 21D1     		bne	.L175
 658:.\main.c      ****     {
 659:.\main.c      ****          setSpeed(speed / 1.5,-speed / 1.5);
 3551              		.loc 1 659 0 is_stmt 1
 3552 0092 454B     		ldr	r3, .L179
 3553 0094 D3E90023 		ldrd	r2, [r3]
 3554 0098 1046     		mov	r0, r2
 3555 009a 1946     		mov	r1, r3
 3556 009c 4FF00002 		mov	r2, #0
 3557 00a0 424B     		ldr	r3, .L179+4
 3558 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 3559 00a6 0246     		mov	r2, r0
 3560 00a8 0B46     		mov	r3, r1
 3561 00aa 1446     		mov	r4, r2
 3562 00ac 1D46     		mov	r5, r3
 3563 00ae 3E4B     		ldr	r3, .L179
 3564 00b0 D3E90023 		ldrd	r2, [r3]
 3565 00b4 9046     		mov	r8, r2
 3566 00b6 83F00049 		eor	r9, r3, #-2147483648
 3567 00ba 4046     		mov	r0, r8
 3568 00bc 4946     		mov	r1, r9
 3569 00be 4FF00002 		mov	r2, #0
 3570 00c2 3A4B     		ldr	r3, .L179+4
 3571 00c4 FFF7FEFF 		bl	__aeabi_ddiv
 3572 00c8 0246     		mov	r2, r0
 3573 00ca 0B46     		mov	r3, r1
 3574 00cc 2046     		mov	r0, r4
 3575 00ce 2946     		mov	r1, r5
 3576 00d0 FFF7FEFF 		bl	setSpeed
 3577 00d4 63E0     		b	.L170
 3578              	.L175:
 660:.\main.c      ****     }
 661:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3579              		.loc 1 661 0
 3580 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3581 00d8 002B     		cmp	r3, #0
 3582 00da 11D0     		beq	.L176
 3583              		.loc 1 661 0 is_stmt 0 discriminator 1
 3584 00dc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3585 00de 002B     		cmp	r3, #0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 76


 3586 00e0 0ED0     		beq	.L176
 3587              		.loc 1 661 0 discriminator 2
 3588 00e2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3589 00e4 002B     		cmp	r3, #0
 3590 00e6 0BD1     		bne	.L176
 662:.\main.c      ****     {
 663:.\main.c      ****         setSpeed(speed, 0);
 3591              		.loc 1 663 0 is_stmt 1
 3592 00e8 2F4B     		ldr	r3, .L179
 3593 00ea D3E90023 		ldrd	r2, [r3]
 3594 00ee 1046     		mov	r0, r2
 3595 00f0 1946     		mov	r1, r3
 3596 00f2 4FF00002 		mov	r2, #0
 3597 00f6 4FF00003 		mov	r3, #0
 3598 00fa FFF7FEFF 		bl	setSpeed
 3599 00fe 4EE0     		b	.L170
 3600              	.L176:
 664:.\main.c      ****     }
 665:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3601              		.loc 1 665 0
 3602 0100 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3603 0102 002B     		cmp	r3, #0
 3604 0104 0FD0     		beq	.L177
 3605              		.loc 1 665 0 is_stmt 0 discriminator 1
 3606 0106 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3607 0108 002B     		cmp	r3, #0
 3608 010a 0CD0     		beq	.L177
 3609              		.loc 1 665 0 discriminator 2
 3610 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3611 010e 002B     		cmp	r3, #0
 3612 0110 09D1     		bne	.L177
 666:.\main.c      ****     {
 667:.\main.c      ****         setSpeed(0, speed);
 3613              		.loc 1 667 0 is_stmt 1
 3614 0112 254B     		ldr	r3, .L179
 3615 0114 D3E90023 		ldrd	r2, [r3]
 3616 0118 4FF00000 		mov	r0, #0
 3617 011c 4FF00001 		mov	r1, #0
 3618 0120 FFF7FEFF 		bl	setSpeed
 3619 0124 3BE0     		b	.L170
 3620              	.L177:
 668:.\main.c      ****     }
 669:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3621              		.loc 1 669 0
 3622 0126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3623 0128 002B     		cmp	r3, #0
 3624 012a 27D0     		beq	.L178
 3625              		.loc 1 669 0 is_stmt 0 discriminator 1
 3626 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3627 012e 002B     		cmp	r3, #0
 3628 0130 24D1     		bne	.L178
 3629              		.loc 1 669 0 discriminator 2
 3630 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3631 0134 002B     		cmp	r3, #0
 3632 0136 21D1     		bne	.L178
 670:.\main.c      ****     {
 671:.\main.c      ****          setSpeed(-speed / 1.5,speed / 1.5);
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 77


 3633              		.loc 1 671 0 is_stmt 1
 3634 0138 1B4B     		ldr	r3, .L179
 3635 013a D3E90023 		ldrd	r2, [r3]
 3636 013e 1446     		mov	r4, r2
 3637 0140 83F00045 		eor	r5, r3, #-2147483648
 3638 0144 2046     		mov	r0, r4
 3639 0146 2946     		mov	r1, r5
 3640 0148 4FF00002 		mov	r2, #0
 3641 014c 174B     		ldr	r3, .L179+4
 3642 014e FFF7FEFF 		bl	__aeabi_ddiv
 3643 0152 0246     		mov	r2, r0
 3644 0154 0B46     		mov	r3, r1
 3645 0156 1446     		mov	r4, r2
 3646 0158 1D46     		mov	r5, r3
 3647 015a 134B     		ldr	r3, .L179
 3648 015c D3E90023 		ldrd	r2, [r3]
 3649 0160 1046     		mov	r0, r2
 3650 0162 1946     		mov	r1, r3
 3651 0164 4FF00002 		mov	r2, #0
 3652 0168 104B     		ldr	r3, .L179+4
 3653 016a FFF7FEFF 		bl	__aeabi_ddiv
 3654 016e 0246     		mov	r2, r0
 3655 0170 0B46     		mov	r3, r1
 3656 0172 2046     		mov	r0, r4
 3657 0174 2946     		mov	r1, r5
 3658 0176 FFF7FEFF 		bl	setSpeed
 3659 017a 10E0     		b	.L170
 3660              	.L178:
 672:.\main.c      ****     }
 673:.\main.c      ****     else if (mid && !nr && !nl)
 3661              		.loc 1 673 0
 3662 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3663 017e 002B     		cmp	r3, #0
 3664 0180 0DD0     		beq	.L170
 3665              		.loc 1 673 0 is_stmt 0 discriminator 1
 3666 0182 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3667 0184 002B     		cmp	r3, #0
 3668 0186 0AD1     		bne	.L170
 3669              		.loc 1 673 0 discriminator 2
 3670 0188 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3671 018a 002B     		cmp	r3, #0
 3672 018c 07D1     		bne	.L170
 674:.\main.c      ****     {
 675:.\main.c      ****         setSpeed(speed,speed);
 3673              		.loc 1 675 0 is_stmt 1
 3674 018e 064B     		ldr	r3, .L179
 3675 0190 D3E90001 		ldrd	r0, [r3]
 3676 0194 044B     		ldr	r3, .L179
 3677 0196 D3E90023 		ldrd	r2, [r3]
 3678 019a FFF7FEFF 		bl	setSpeed
 3679              	.L170:
 676:.\main.c      ****     }
 677:.\main.c      ****    // else if (!mid && !nr && !nl)
 678:.\main.c      ****     //{
 679:.\main.c      ****         //setSpeed(0,0);
 680:.\main.c      ****     //}
 681:.\main.c      ****    
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 78


 682:.\main.c      **** 
 683:.\main.c      **** }
 3680              		.loc 1 683 0
 3681 019e 0837     		adds	r7, r7, #8
 3682              		.cfi_def_cfa_offset 24
 3683 01a0 BD46     		mov	sp, r7
 3684              		.cfi_def_cfa_register 13
 3685              		@ sp needed
 3686 01a2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3687              	.L180:
 3688 01a6 00BF     		.align	2
 3689              	.L179:
 3690 01a8 00000000 		.word	speed
 3691 01ac 0000F83F 		.word	1073217536
 3692              		.cfi_endproc
 3693              	.LFE97:
 3694              		.size	trackLineU, .-trackLineU
 3695              		.global	__aeabi_fadd
 3696              		.section	.rodata
 3697 0046 0000     		.align	2
 3698              	.LC5:
 3699 0048 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3699      65727920 
 3699      566F6C74 
 3699      6167653A 
 3699      2025646D 
 3700              		.section	.text.print_ADC,"ax",%progbits
 3701              		.align	2
 3702              		.global	print_ADC
 3703              		.thumb
 3704              		.thumb_func
 3705              		.type	print_ADC, %function
 3706              	print_ADC:
 3707              	.LFB98:
 684:.\main.c      **** 
 685:.\main.c      **** void print_ADC()
 686:.\main.c      **** {
 3708              		.loc 1 686 0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 24
 3711              		@ frame_needed = 1, uses_anonymous_args = 0
 3712 0000 80B5     		push	{r7, lr}
 3713              		.cfi_def_cfa_offset 8
 3714              		.cfi_offset 7, -8
 3715              		.cfi_offset 14, -4
 3716 0002 86B0     		sub	sp, sp, #24
 3717              		.cfi_def_cfa_offset 32
 3718 0004 00AF     		add	r7, sp, #0
 3719              		.cfi_def_cfa_register 7
 687:.\main.c      ****    //usbPutString("HII\n");
 688:.\main.c      ****     if(flag_receive_ADC == 1)
 3720              		.loc 1 688 0
 3721 0006 274B     		ldr	r3, .L184
 3722 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3723 000a 012B     		cmp	r3, #1
 3724 000c 46D1     		bne	.L181
 3725              	.LBB6:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 79


 689:.\main.c      ****     {
 690:.\main.c      ****         //usbPutString("AAA\r\n");
 691:.\main.c      ****         flag_receive_ADC = 0;
 3726              		.loc 1 691 0
 3727 000e 254B     		ldr	r3, .L184
 3728 0010 0022     		movs	r2, #0
 3729 0012 1A70     		strb	r2, [r3]
 692:.\main.c      ****         
 693:.\main.c      ****        // int8 channel = ADC_
 694:.\main.c      ****         float scalingFactor = 0.972;
 3730              		.loc 1 694 0
 3731 0014 244B     		ldr	r3, .L184+4
 3732 0016 7B61     		str	r3, [r7, #20]	@ float
 695:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3733              		.loc 1 695 0
 3734 0018 244B     		ldr	r3, .L184+8
 3735 001a 1B88     		ldrh	r3, [r3]
 3736 001c 1BB2     		sxth	r3, r3
 3737 001e 41F28832 		movw	r2, #5000
 3738 0022 02FB03F3 		mul	r3, r2, r3
 3739 0026 002B     		cmp	r3, #0
 3740 0028 01DA     		bge	.L183
 3741 002a 03F6FF73 		addw	r3, r3, #4095
 3742              	.L183:
 3743 002e 1B13     		asrs	r3, r3, #12
 3744 0030 1846     		mov	r0, r3
 3745 0032 FFF7FEFF 		bl	__aeabi_i2f
 3746 0036 0346     		mov	r3, r0
 3747 0038 1846     		mov	r0, r3
 3748 003a 7969     		ldr	r1, [r7, #20]	@ float
 3749 003c FFF7FEFF 		bl	__aeabi_fmul
 3750 0040 0346     		mov	r3, r0
 3751 0042 1846     		mov	r0, r3
 3752 0044 1946     		mov	r1, r3
 3753 0046 FFF7FEFF 		bl	__aeabi_fadd
 3754 004a 0346     		mov	r3, r0
 3755 004c 1846     		mov	r0, r3
 3756 004e FFF7FEFF 		bl	__aeabi_f2iz
 3757 0052 0346     		mov	r3, r0
 3758 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 696:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3759              		.loc 1 696 0
 3760 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3761 005a 154B     		ldr	r3, .L184+12
 3762 005c 1B88     		ldrh	r3, [r3]
 3763 005e 1BB2     		sxth	r3, r3
 3764 0060 1A44     		add	r2, r2, r3
 3765 0062 144B     		ldr	r3, .L184+16
 3766 0064 1B88     		ldrh	r3, [r3]
 3767 0066 1BB2     		sxth	r3, r3
 3768 0068 1344     		add	r3, r3, r2
 3769 006a 134A     		ldr	r2, .L184+20
 3770 006c 82FB0312 		smull	r1, r2, r2, r3
 3771 0070 DB17     		asrs	r3, r3, #31
 3772 0072 D31A     		subs	r3, r2, r3
 3773 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 697:.\main.c      ****         prevVoltage2 = prevVoltage;
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 80


 3774              		.loc 1 697 0
 3775 0076 0E4B     		ldr	r3, .L184+12
 3776 0078 1A88     		ldrh	r2, [r3]
 3777 007a 0E4B     		ldr	r3, .L184+16
 3778 007c 1A80     		strh	r2, [r3]	@ movhi
 698:.\main.c      ****         prevVoltage = converted_val;
 3779              		.loc 1 698 0
 3780 007e 0C4A     		ldr	r2, .L184+12
 3781 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3782 0082 1380     		strh	r3, [r2]	@ movhi
 699:.\main.c      ****         
 700:.\main.c      ****         char result_str[16];
 701:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3783              		.loc 1 701 0
 3784 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3785 0088 3A46     		mov	r2, r7
 3786 008a 1046     		mov	r0, r2
 3787 008c 0B49     		ldr	r1, .L184+24
 3788 008e 1A46     		mov	r2, r3
 3789 0090 FFF7FEFF 		bl	sprintf
 702:.\main.c      ****         
 703:.\main.c      ****         usbPutString(result_str);
 3790              		.loc 1 703 0
 3791 0094 3B46     		mov	r3, r7
 3792 0096 1846     		mov	r0, r3
 3793 0098 FFF7FEFF 		bl	usbPutString
 3794              	.L181:
 3795              	.LBE6:
 704:.\main.c      ****     }
 705:.\main.c      **** }
 3796              		.loc 1 705 0
 3797 009c 1837     		adds	r7, r7, #24
 3798              		.cfi_def_cfa_offset 8
 3799 009e BD46     		mov	sp, r7
 3800              		.cfi_def_cfa_register 13
 3801              		@ sp needed
 3802 00a0 80BD     		pop	{r7, pc}
 3803              	.L185:
 3804 00a2 00BF     		.align	2
 3805              	.L184:
 3806 00a4 00000000 		.word	flag_receive_ADC
 3807 00a8 FED4783F 		.word	1064883454
 3808 00ac 00000000 		.word	adc_result
 3809 00b0 00000000 		.word	prevVoltage
 3810 00b4 00000000 		.word	prevVoltage2
 3811 00b8 56555555 		.word	1431655766
 3812 00bc 48000000 		.word	.LC5
 3813              		.cfi_endproc
 3814              	.LFE98:
 3815              		.size	print_ADC, .-print_ADC
 3816              		.section	.rodata
 3817              		.align	2
 3818              	.LC6:
 3819 0060 52535349 		.ascii	"RSSI:\000"
 3819      3A00
 3820 0066 0000     		.align	2
 3821              	.LC7:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 81


 3822 0068 25640D0A 		.ascii	"%d\015\012\000"
 3822      00
 3823 006d 000000   		.align	2
 3824              	.LC8:
 3825 0070 726F626F 		.ascii	"robot_x:\000"
 3825      745F783A 
 3825      00
 3826 0079 000000   		.align	2
 3827              	.LC9:
 3828 007c 726F626F 		.ascii	"robot_y:\000"
 3828      745F793A 
 3828      00
 3829 0085 000000   		.align	2
 3830              	.LC10:
 3831 0088 726F626F 		.ascii	"robot_dir:\000"
 3831      745F6469 
 3831      723A00
 3832 0093 00       		.section	.text.print_RF,"ax",%progbits
 3833              		.align	2
 3834              		.global	print_RF
 3835              		.thumb
 3836              		.thumb_func
 3837              		.type	print_RF, %function
 3838              	print_RF:
 3839              	.LFB99:
 706:.\main.c      **** 
 707:.\main.c      **** void print_RF()
 708:.\main.c      **** {
 3840              		.loc 1 708 0
 3841              		.cfi_startproc
 3842              		@ args = 0, pretend = 0, frame = 16
 3843              		@ frame_needed = 1, uses_anonymous_args = 0
 3844 0000 80B5     		push	{r7, lr}
 3845              		.cfi_def_cfa_offset 8
 3846              		.cfi_offset 7, -8
 3847              		.cfi_offset 14, -4
 3848 0002 84B0     		sub	sp, sp, #16
 3849              		.cfi_def_cfa_offset 24
 3850 0004 00AF     		add	r7, sp, #0
 3851              		.cfi_def_cfa_register 7
 709:.\main.c      ****     if(flag_print_rf == 1)
 3852              		.loc 1 709 0
 3853 0006 254B     		ldr	r3, .L188
 3854 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3855 000a 012B     		cmp	r3, #1
 3856 000c 42D1     		bne	.L186
 3857              	.LBB7:
 710:.\main.c      ****     {
 711:.\main.c      ****         char printString[16];
 712:.\main.c      ****         flag_print_rf = 0;
 3858              		.loc 1 712 0
 3859 000e 234B     		ldr	r3, .L188
 3860 0010 0022     		movs	r2, #0
 3861 0012 1A70     		strb	r2, [r3]
 713:.\main.c      ****         usbPutString("RSSI:");
 3862              		.loc 1 713 0
 3863 0014 2248     		ldr	r0, .L188+4
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 82


 3864 0016 FFF7FEFF 		bl	usbPutString
 714:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 3865              		.loc 1 714 0
 3866 001a 224B     		ldr	r3, .L188+8
 3867 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3868 001e 5BB2     		sxtb	r3, r3
 3869 0020 3A46     		mov	r2, r7
 3870 0022 1046     		mov	r0, r2
 3871 0024 2049     		ldr	r1, .L188+12
 3872 0026 1A46     		mov	r2, r3
 3873 0028 FFF7FEFF 		bl	sprintf
 715:.\main.c      ****         usbPutString(printString);
 3874              		.loc 1 715 0
 3875 002c 3B46     		mov	r3, r7
 3876 002e 1846     		mov	r0, r3
 3877 0030 FFF7FEFF 		bl	usbPutString
 716:.\main.c      ****         usbPutString("robot_x:");
 3878              		.loc 1 716 0
 3879 0034 1D48     		ldr	r0, .L188+16
 3880 0036 FFF7FEFF 		bl	usbPutString
 717:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 3881              		.loc 1 717 0
 3882 003a 1A4B     		ldr	r3, .L188+8
 3883 003c 5B88     		ldrh	r3, [r3, #2]
 3884 003e 1BB2     		sxth	r3, r3
 3885 0040 3A46     		mov	r2, r7
 3886 0042 1046     		mov	r0, r2
 3887 0044 1849     		ldr	r1, .L188+12
 3888 0046 1A46     		mov	r2, r3
 3889 0048 FFF7FEFF 		bl	sprintf
 718:.\main.c      ****         usbPutString(printString);
 3890              		.loc 1 718 0
 3891 004c 3B46     		mov	r3, r7
 3892 004e 1846     		mov	r0, r3
 3893 0050 FFF7FEFF 		bl	usbPutString
 719:.\main.c      ****         usbPutString("robot_y:");
 3894              		.loc 1 719 0
 3895 0054 1648     		ldr	r0, .L188+20
 3896 0056 FFF7FEFF 		bl	usbPutString
 720:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 3897              		.loc 1 720 0
 3898 005a 124B     		ldr	r3, .L188+8
 3899 005c 9B88     		ldrh	r3, [r3, #4]
 3900 005e 1BB2     		sxth	r3, r3
 3901 0060 3A46     		mov	r2, r7
 3902 0062 1046     		mov	r0, r2
 3903 0064 1049     		ldr	r1, .L188+12
 3904 0066 1A46     		mov	r2, r3
 3905 0068 FFF7FEFF 		bl	sprintf
 721:.\main.c      ****         usbPutString(printString);
 3906              		.loc 1 721 0
 3907 006c 3B46     		mov	r3, r7
 3908 006e 1846     		mov	r0, r3
 3909 0070 FFF7FEFF 		bl	usbPutString
 722:.\main.c      ****         usbPutString("robot_dir:");
 3910              		.loc 1 722 0
 3911 0074 0F48     		ldr	r0, .L188+24
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 83


 3912 0076 FFF7FEFF 		bl	usbPutString
 723:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 3913              		.loc 1 723 0
 3914 007a 0A4B     		ldr	r3, .L188+8
 3915 007c DB88     		ldrh	r3, [r3, #6]
 3916 007e 1BB2     		sxth	r3, r3
 3917 0080 3A46     		mov	r2, r7
 3918 0082 1046     		mov	r0, r2
 3919 0084 0849     		ldr	r1, .L188+12
 3920 0086 1A46     		mov	r2, r3
 3921 0088 FFF7FEFF 		bl	sprintf
 724:.\main.c      ****         usbPutString(printString);
 3922              		.loc 1 724 0
 3923 008c 3B46     		mov	r3, r7
 3924 008e 1846     		mov	r0, r3
 3925 0090 FFF7FEFF 		bl	usbPutString
 3926              	.L186:
 3927              	.LBE7:
 725:.\main.c      ****     }
 726:.\main.c      **** }
 3928              		.loc 1 726 0
 3929 0094 1037     		adds	r7, r7, #16
 3930              		.cfi_def_cfa_offset 8
 3931 0096 BD46     		mov	sp, r7
 3932              		.cfi_def_cfa_register 13
 3933              		@ sp needed
 3934 0098 80BD     		pop	{r7, pc}
 3935              	.L189:
 3936 009a 00BF     		.align	2
 3937              	.L188:
 3938 009c 00000000 		.word	flag_print_rf
 3939 00a0 60000000 		.word	.LC6
 3940 00a4 00000000 		.word	system_state
 3941 00a8 68000000 		.word	.LC7
 3942 00ac 70000000 		.word	.LC8
 3943 00b0 7C000000 		.word	.LC9
 3944 00b4 88000000 		.word	.LC10
 3945              		.cfi_endproc
 3946              	.LFE99:
 3947              		.size	print_RF, .-print_RF
 3948              		.section	.text.readFrontSensors,"ax",%progbits
 3949              		.align	2
 3950              		.global	readFrontSensors
 3951              		.thumb
 3952              		.thumb_func
 3953              		.type	readFrontSensors, %function
 3954              	readFrontSensors:
 3955              	.LFB100:
 727:.\main.c      **** 
 728:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 729:.\main.c      **** {
 3956              		.loc 1 729 0
 3957              		.cfi_startproc
 3958              		@ args = 0, pretend = 0, frame = 8
 3959              		@ frame_needed = 1, uses_anonymous_args = 0
 3960 0000 90B5     		push	{r4, r7, lr}
 3961              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 84


 3962              		.cfi_offset 4, -12
 3963              		.cfi_offset 7, -8
 3964              		.cfi_offset 14, -4
 3965 0002 83B0     		sub	sp, sp, #12
 3966              		.cfi_def_cfa_offset 24
 3967 0004 00AF     		add	r7, sp, #0
 3968              		.cfi_def_cfa_register 7
 3969 0006 7860     		str	r0, [r7, #4]
 730:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 3970              		.loc 1 730 0
 3971 0008 FFF7FEFF 		bl	FLSens_out_Read
 3972 000c 0346     		mov	r3, r0
 3973 000e 1A46     		mov	r2, r3
 3974 0010 7B68     		ldr	r3, [r7, #4]
 3975 0012 1A70     		strb	r2, [r3]
 731:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 3976              		.loc 1 731 0
 3977 0014 7B68     		ldr	r3, [r7, #4]
 3978 0016 5C1C     		adds	r4, r3, #1
 3979 0018 FFF7FEFF 		bl	NLSens_out_Read
 3980 001c 0346     		mov	r3, r0
 3981 001e 2370     		strb	r3, [r4]
 732:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 3982              		.loc 1 732 0
 3983 0020 7B68     		ldr	r3, [r7, #4]
 3984 0022 9C1C     		adds	r4, r3, #2
 3985 0024 FFF7FEFF 		bl	MSens_out_Read
 3986 0028 0346     		mov	r3, r0
 3987 002a 2370     		strb	r3, [r4]
 733:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 3988              		.loc 1 733 0
 3989 002c 7B68     		ldr	r3, [r7, #4]
 3990 002e DC1C     		adds	r4, r3, #3
 3991 0030 FFF7FEFF 		bl	NRSens_out_Read
 3992 0034 0346     		mov	r3, r0
 3993 0036 2370     		strb	r3, [r4]
 734:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 3994              		.loc 1 734 0
 3995 0038 7B68     		ldr	r3, [r7, #4]
 3996 003a 1C1D     		adds	r4, r3, #4
 3997 003c FFF7FEFF 		bl	FRSens_out_Read
 3998 0040 0346     		mov	r3, r0
 3999 0042 2370     		strb	r3, [r4]
 735:.\main.c      **** }
 4000              		.loc 1 735 0
 4001 0044 0C37     		adds	r7, r7, #12
 4002              		.cfi_def_cfa_offset 12
 4003 0046 BD46     		mov	sp, r7
 4004              		.cfi_def_cfa_register 13
 4005              		@ sp needed
 4006 0048 90BD     		pop	{r4, r7, pc}
 4007              		.cfi_endproc
 4008              	.LFE100:
 4009              		.size	readFrontSensors, .-readFrontSensors
 4010 004a 00BF     		.section	.text.main,"ax",%progbits
 4011              		.align	2
 4012              		.global	main
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 85


 4013              		.thumb
 4014              		.thumb_func
 4015              		.type	main, %function
 4016              	main:
 4017              	.LFB101:
 736:.\main.c      **** 
 737:.\main.c      **** int main()
 738:.\main.c      **** {  
 4018              		.loc 1 738 0
 4019              		.cfi_startproc
 4020              		@ args = 0, pretend = 0, frame = 8
 4021              		@ frame_needed = 1, uses_anonymous_args = 0
 4022 0000 80B5     		push	{r7, lr}
 4023              		.cfi_def_cfa_offset 8
 4024              		.cfi_offset 7, -8
 4025              		.cfi_offset 14, -4
 4026 0002 82B0     		sub	sp, sp, #8
 4027              		.cfi_def_cfa_offset 16
 4028 0004 00AF     		add	r7, sp, #0
 4029              		.cfi_def_cfa_register 7
 739:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 740:.\main.c      **** // ----- INITIALIZATIONS ----------
 741:.\main.c      ****     CYGlobalIntEnable;
 4030              		.loc 1 741 0
 4031              	@ 741 ".\main.c" 1
 4032 0006 62B6     		CPSIE   i
 4033              	@ 0 "" 2
 742:.\main.c      ****     if(ENABLE_PWM)
 743:.\main.c      ****     {
 744:.\main.c      ****         PWM_1_Start();// starting the pwm
 4034              		.loc 1 744 0
 4035              		.thumb
 4036 0008 FFF7FEFF 		bl	PWM_1_Start
 745:.\main.c      ****         PWM_2_Start();// starting the pwm
 4037              		.loc 1 745 0
 4038 000c FFF7FEFF 		bl	PWM_2_Start
 746:.\main.c      ****     }
 747:.\main.c      ****     
 748:.\main.c      ****     if(ENABLE_ADC)
 749:.\main.c      ****     {
 750:.\main.c      ****         ADC_Start();
 751:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 752:.\main.c      ****         //ADC_StartConvert();
 753:.\main.c      ****         
 754:.\main.c      ****         //start the ADC timer for software trigger mode
 755:.\main.c      ****         Timer_TS_Start();
 756:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 757:.\main.c      ****     }
 758:.\main.c      ****     
 759:.\main.c      ****     if (ENABLE_QUAD)
 760:.\main.c      ****     {
 761:.\main.c      ****         QuadDec_M1_Start();
 4039              		.loc 1 761 0
 4040 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 762:.\main.c      ****         QuadDec_M2_Start();
 4041              		.loc 1 762 0
 4042 0014 FFF7FEFF 		bl	QuadDec_M2_Start
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 86


 763:.\main.c      ****         
 764:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 4043              		.loc 1 764 0
 4044 0018 9348     		ldr	r0, .L235
 4045 001a FFF7FEFF 		bl	isr_quad1_StartEx
 765:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 4046              		.loc 1 765 0
 4047 001e 9348     		ldr	r0, .L235+4
 4048 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 766:.\main.c      ****         
 767:.\main.c      ****         Timer_1_Start();
 4049              		.loc 1 767 0
 4050 0024 FFF7FEFF 		bl	Timer_1_Start
 768:.\main.c      ****     }
 769:.\main.c      ****     
 770:.\main.c      ****     if(ENABLE_STOP){
 771:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 772:.\main.c      ****         
 773:.\main.c      ****     }
 774:.\main.c      ****     isr_button_StartEx(button);
 4051              		.loc 1 774 0
 4052 0028 9148     		ldr	r0, .L235+8
 4053 002a FFF7FEFF 		bl	isr_button_StartEx
 775:.\main.c      ****     
 776:.\main.c      **** 
 777:.\main.c      ****     // ------USB SETUP ----------------    
 778:.\main.c      ****     if (USE_USB){    
 779:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 4054              		.loc 1 779 0
 4055 002e 0020     		movs	r0, #0
 4056 0030 0121     		movs	r1, #1
 4057 0032 FFF7FEFF 		bl	USBUART_Start
 780:.\main.c      ****         if (USBUART_GetConfiguration())
 4058              		.loc 1 780 0
 4059 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
 4060 003a 0346     		mov	r3, r0
 4061 003c 002B     		cmp	r3, #0
 4062 003e 01D0     		beq	.L192
 781:.\main.c      ****             {
 782:.\main.c      ****                  USBUART_CDC_Init();
 4063              		.loc 1 782 0
 4064 0040 FFF7FEFF 		bl	USBUART_CDC_Init
 4065              	.L192:
 783:.\main.c      ****             }
 784:.\main.c      ****     }
 785:.\main.c      ****     
 786:.\main.c      ****     if(BIN_ENABLED){
 4066              		.loc 1 786 0
 4067 0044 8B4B     		ldr	r3, .L235+12
 4068 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4069 0048 002B     		cmp	r3, #0
 4070 004a 01D0     		beq	.L193
 787:.\main.c      ****         changeToRF();
 4071              		.loc 1 787 0
 4072 004c FFF7FEFF 		bl	changeToRF
 4073              	.L193:
 788:.\main.c      ****     }
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 87


 789:.\main.c      ****     
 790:.\main.c      ****     if(BT_ENABLED){
 4074              		.loc 1 790 0
 4075 0050 894B     		ldr	r3, .L235+16
 4076 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4077 0054 002B     		cmp	r3, #0
 4078 0056 01D0     		beq	.L194
 791:.\main.c      ****         changeToBT();
 4079              		.loc 1 791 0
 4080 0058 FFF7FEFF 		bl	changeToBT
 4081              	.L194:
 4082              	.LBB8:
 792:.\main.c      ****     }
 793:.\main.c      ****     
 794:.\main.c      ****     //usbPutString("Started");
 795:.\main.c      ****     for(;;)
 796:.\main.c      ****     {
 797:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 798:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 4083              		.loc 1 798 0
 4084 005c FFF7FEFF 		bl	Quad_Dec_response
 799:.\main.c      ****         if(BIN_ENABLED == 1)
 4085              		.loc 1 799 0
 4086 0060 844B     		ldr	r3, .L235+12
 4087 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4088 0064 012B     		cmp	r3, #1
 4089 0066 03D1     		bne	.L195
 800:.\main.c      ****         {
 801:.\main.c      ****             handle_rx_binary();
 4090              		.loc 1 801 0
 4091 0068 FFF7FEFF 		bl	handle_rx_binary
 802:.\main.c      ****             print_RF();
 4092              		.loc 1 802 0
 4093 006c FFF7FEFF 		bl	print_RF
 4094              	.L195:
 803:.\main.c      ****         }
 804:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 805:.\main.c      ****         
 806:.\main.c      ****         uint8 frontSensors[5];
 807:.\main.c      ****         readFrontSensors(frontSensors);
 4095              		.loc 1 807 0
 4096 0070 3B46     		mov	r3, r7
 4097 0072 1846     		mov	r0, r3
 4098 0074 FFF7FEFF 		bl	readFrontSensors
 808:.\main.c      ****         
 809:.\main.c      ****         switch(track_mode)
 4099              		.loc 1 809 0
 4100 0078 804B     		ldr	r3, .L235+20
 4101 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4102 007c 062B     		cmp	r3, #6
 4103 007e 00F2C280 		bhi	.L196
 4104 0082 01A2     		adr	r2, .L198
 4105 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4106              		.p2align 2
 4107              	.L198:
 4108 0088 07020000 		.word	.L196+1
 4109 008c 07020000 		.word	.L196+1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 88


 4110 0090 07020000 		.word	.L196+1
 4111 0094 A5000000 		.word	.L201+1
 4112 0098 07020000 		.word	.L196+1
 4113 009c E1000000 		.word	.L203+1
 4114 00a0 07010000 		.word	.L204+1
 4115              		.p2align 1
 4116              	.L201:
 810:.\main.c      ****         {
 811:.\main.c      ****             case SQUARE_TRACK:
 812:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 4117              		.loc 1 812 0
 4118 00a4 764B     		ldr	r3, .L235+24
 4119 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4120 00a8 012B     		cmp	r3, #1
 4121 00aa 18D0     		beq	.L205
 4122              		.loc 1 812 0 is_stmt 0 discriminator 1
 4123 00ac 744B     		ldr	r3, .L235+24
 4124 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4125 00b0 022B     		cmp	r3, #2
 4126 00b2 14D0     		beq	.L205
 813:.\main.c      ****                 {
 814:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 4127              		.loc 1 814 0 is_stmt 1
 4128 00b4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4129 00b6 012B     		cmp	r3, #1
 4130 00b8 05D1     		bne	.L206
 4131              		.loc 1 814 0 is_stmt 0 discriminator 1
 4132 00ba BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4133 00bc 012B     		cmp	r3, #1
 4134 00be 02D1     		bne	.L206
 815:.\main.c      ****                         initTurnLeft();
 4135              		.loc 1 815 0 is_stmt 1
 4136 00c0 FFF7FEFF 		bl	initTurnLeft
 4137 00c4 0BE0     		b	.L205
 4138              	.L206:
 816:.\main.c      ****                     }
 817:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 4139              		.loc 1 817 0
 4140 00c6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4141 00c8 012B     		cmp	r3, #1
 4142 00ca 05D1     		bne	.L207
 4143              		.loc 1 817 0 is_stmt 0 discriminator 1
 4144 00cc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4145 00ce 012B     		cmp	r3, #1
 4146 00d0 02D1     		bne	.L207
 818:.\main.c      ****                     {
 819:.\main.c      ****                         initTurnRight();
 4147              		.loc 1 819 0 is_stmt 1
 4148 00d2 FFF7FEFF 		bl	initTurnRight
 4149 00d6 02E0     		b	.L205
 4150              	.L207:
 820:.\main.c      ****                     }
 821:.\main.c      ****                     else inittrackLineZ();
 4151              		.loc 1 821 0
 4152 00d8 FFF7FEFF 		bl	inittrackLineZ
 822:.\main.c      ****                 }
 823:.\main.c      ****             break;
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 89


 4153              		.loc 1 823 0
 4154 00dc 93E0     		b	.L196
 4155              	.L205:
 4156 00de 92E0     		b	.L196
 4157              	.L203:
 824:.\main.c      ****             case NO_TRACK:
 825:.\main.c      ****             break;
 826:.\main.c      ****             case CURVE_TRACK:
 827:.\main.c      ****             break;
 828:.\main.c      ****             case U_TRACK:
 829:.\main.c      ****             break;
 830:.\main.c      ****             case QUAD_STOP:
 831:.\main.c      ****             break;
 832:.\main.c      ****             case RF_STOP:
 833:.\main.c      ****                 if(initial_pos_valid == 1)
 4158              		.loc 1 833 0
 4159 00e0 684B     		ldr	r3, .L235+28
 4160 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4161 00e4 012B     		cmp	r3, #1
 4162 00e6 0DD1     		bne	.L208
 834:.\main.c      ****                 {
 835:.\main.c      ****                     //changeToBT();
 836:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 837:.\main.c      ****                     //changeToRF();
 838:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 4163              		.loc 1 838 0
 4164 00e8 674B     		ldr	r3, .L235+32
 4165 00ea 5A88     		ldrh	r2, [r3, #2]
 4166 00ec 674B     		ldr	r3, .L235+36
 4167 00ee 1A80     		strh	r2, [r3]	@ movhi
 839:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 4168              		.loc 1 839 0
 4169 00f0 654B     		ldr	r3, .L235+32
 4170 00f2 9A88     		ldrh	r2, [r3, #4]
 4171 00f4 664B     		ldr	r3, .L235+40
 4172 00f6 1A80     		strh	r2, [r3]	@ movhi
 840:.\main.c      ****                     initial_pos_valid = 2;
 4173              		.loc 1 840 0
 4174 00f8 624B     		ldr	r3, .L235+28
 4175 00fa 0222     		movs	r2, #2
 4176 00fc 1A70     		strb	r2, [r3]
 841:.\main.c      ****                     initForward();
 4177              		.loc 1 841 0
 4178 00fe FFF7FEFF 		bl	initForward
 842:.\main.c      ****                 }
 843:.\main.c      ****             break;
 4179              		.loc 1 843 0
 4180 0102 80E0     		b	.L196
 4181              	.L208:
 4182 0104 7FE0     		b	.L196
 4183              	.L204:
 844:.\main.c      ****             case DEST_TEST:
 845:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 4184              		.loc 1 845 0
 4185 0106 5E4B     		ldr	r3, .L235+24
 4186 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4187 010a 012B     		cmp	r3, #1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 90


 4188 010c 7AD0     		beq	.L209
 4189              		.loc 1 845 0 is_stmt 0 discriminator 1
 4190 010e 5C4B     		ldr	r3, .L235+24
 4191 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4192 0112 022B     		cmp	r3, #2
 4193 0114 76D0     		beq	.L209
 4194              		.loc 1 845 0 discriminator 2
 4195 0116 5A4B     		ldr	r3, .L235+24
 4196 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4197 011a 072B     		cmp	r3, #7
 4198 011c 72D0     		beq	.L209
 4199              	.LBB9:
 846:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 847:.\main.c      ****                     char nextStep = instructions[instructionCount];
 4200              		.loc 1 847 0 is_stmt 1
 4201 011e 5D4B     		ldr	r3, .L235+44
 4202 0120 1B88     		ldrh	r3, [r3]
 4203 0122 1A46     		mov	r2, r3
 4204 0124 5C4B     		ldr	r3, .L235+48
 4205 0126 9B5C     		ldrb	r3, [r3, r2]
 4206 0128 FB71     		strb	r3, [r7, #7]
 848:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 4207              		.loc 1 848 0
 4208 012a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4209 012c 012B     		cmp	r3, #1
 4210 012e 02D1     		bne	.L210
 4211              		.loc 1 848 0 is_stmt 0 discriminator 1
 4212 0130 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4213 0132 012B     		cmp	r3, #1
 4214 0134 05D0     		beq	.L211
 4215              	.L210:
 4216              		.loc 1 848 0 discriminator 3
 4217 0136 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4218 0138 012B     		cmp	r3, #1
 4219 013a 3AD1     		bne	.L212
 4220              		.loc 1 848 0 discriminator 4
 4221 013c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4222 013e 012B     		cmp	r3, #1
 4223 0140 37D1     		bne	.L212
 4224              	.L211:
 849:.\main.c      ****                         if(sensorsDisabled == 0)
 4225              		.loc 1 849 0 is_stmt 1
 4226 0142 564B     		ldr	r3, .L235+52
 4227 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4228 0146 002B     		cmp	r3, #0
 4229 0148 32D1     		bne	.L213
 850:.\main.c      ****                         {
 851:.\main.c      ****                             sensorsDisabled = 1;
 4230              		.loc 1 851 0
 4231 014a 544B     		ldr	r3, .L235+52
 4232 014c 0122     		movs	r2, #1
 4233 014e 1A70     		strb	r2, [r3]
 852:.\main.c      ****                             switch(nextStep)
 4234              		.loc 1 852 0
 4235 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4236 0152 4C3B     		subs	r3, r3, #76
 4237 0154 092B     		cmp	r3, #9
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 91


 4238 0156 23D8     		bhi	.L233
 4239 0158 01A2     		adr	r2, .L216
 4240 015a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4241 015e 00BF     		.p2align 2
 4242              	.L216:
 4243 0160 8F010000 		.word	.L215+1
 4244 0164 A1010000 		.word	.L233+1
 4245 0168 A1010000 		.word	.L233+1
 4246 016c A1010000 		.word	.L233+1
 4247 0170 A1010000 		.word	.L233+1
 4248 0174 A1010000 		.word	.L233+1
 4249 0178 95010000 		.word	.L217+1
 4250 017c 89010000 		.word	.L218+1
 4251 0180 A1010000 		.word	.L233+1
 4252 0184 9B010000 		.word	.L219+1
 4253              		.p2align 1
 4254              	.L218:
 853:.\main.c      ****                             {
 854:.\main.c      ****                                 case 'S':
 855:.\main.c      ****                                     initTrackU();
 4255              		.loc 1 855 0
 4256 0188 FFF7FEFF 		bl	initTrackU
 856:.\main.c      ****                                     //do nothing
 857:.\main.c      ****                                 break;
 4257              		.loc 1 857 0
 4258 018c 09E0     		b	.L220
 4259              	.L215:
 858:.\main.c      ****                                 case 'L':
 859:.\main.c      ****                                     //if(tracked_direction == 1) tracked_direction = 4; else tracke
 860:.\main.c      ****                                     initTurnLeft();
 4260              		.loc 1 860 0
 4261 018e FFF7FEFF 		bl	initTurnLeft
 861:.\main.c      ****                                 break;
 4262              		.loc 1 861 0
 4263 0192 06E0     		b	.L220
 4264              	.L217:
 862:.\main.c      ****                                 case 'R':
 863:.\main.c      ****                                     //if(tracked_direction == 4) tracked_direction = 1; else tracke
 864:.\main.c      ****                                     initTurnRight();
 4265              		.loc 1 864 0
 4266 0194 FFF7FEFF 		bl	initTurnRight
 865:.\main.c      ****                                     
 866:.\main.c      ****                                 break;
 4267              		.loc 1 866 0
 4268 0198 03E0     		b	.L220
 4269              	.L219:
 867:.\main.c      ****                                 case 'U':
 868:.\main.c      ****                                     // Direction not tracked any more
 869:.\main.c      ****                                     initTurnU();
 4270              		.loc 1 869 0
 4271 019a FFF7FEFF 		bl	initTurnU
 870:.\main.c      ****                                 break;
 4272              		.loc 1 870 0
 4273 019e 00E0     		b	.L220
 4274              	.L233:
 871:.\main.c      ****                                 default:
 872:.\main.c      ****                                     //do nothing
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 92


 873:.\main.c      ****                                     break;
 4275              		.loc 1 873 0
 4276 01a0 00BF     		nop
 4277              	.L220:
 874:.\main.c      ****                             }
 875:.\main.c      ****                             instructionCount++;
 4278              		.loc 1 875 0
 4279 01a2 3C4B     		ldr	r3, .L235+44
 4280 01a4 1B88     		ldrh	r3, [r3]
 4281 01a6 0133     		adds	r3, r3, #1
 4282 01a8 9AB2     		uxth	r2, r3
 4283 01aa 3A4B     		ldr	r3, .L235+44
 4284 01ac 1A80     		strh	r2, [r3]	@ movhi
 849:.\main.c      ****                         {
 4285              		.loc 1 849 0
 4286 01ae 29E0     		b	.L209
 4287              	.L213:
 4288 01b0 28E0     		b	.L209
 4289              	.L212:
 876:.\main.c      ****                         }
 877:.\main.c      ****                     }
 878:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 4290              		.loc 1 878 0
 4291 01b2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4292 01b4 002B     		cmp	r3, #0
 4293 01b6 1FD1     		bne	.L221
 4294              		.loc 1 878 0 is_stmt 0 discriminator 1
 4295 01b8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4296 01ba 002B     		cmp	r3, #0
 4297 01bc 1CD1     		bne	.L221
 4298              		.loc 1 878 0 discriminator 2
 4299 01be BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4300 01c0 002B     		cmp	r3, #0
 4301 01c2 19D1     		bne	.L221
 4302              		.loc 1 878 0 discriminator 3
 4303 01c4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4304 01c6 002B     		cmp	r3, #0
 4305 01c8 16D1     		bne	.L221
 4306              		.loc 1 878 0 discriminator 4
 4307 01ca 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4308 01cc 002B     		cmp	r3, #0
 4309 01ce 13D1     		bne	.L221
 4310              		.loc 1 878 0 discriminator 5
 4311 01d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4312 01d2 552B     		cmp	r3, #85
 4313 01d4 10D1     		bne	.L221
 879:.\main.c      ****                     {
 880:.\main.c      ****                         if(sensorsDisabled == 0)
 4314              		.loc 1 880 0 is_stmt 1
 4315 01d6 314B     		ldr	r3, .L235+52
 4316 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4317 01da 002B     		cmp	r3, #0
 4318 01dc 0BD1     		bne	.L222
 881:.\main.c      ****                         {
 882:.\main.c      ****                             sensorsDisabled = 1;
 4319              		.loc 1 882 0
 4320 01de 2F4B     		ldr	r3, .L235+52
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 93


 4321 01e0 0122     		movs	r2, #1
 4322 01e2 1A70     		strb	r2, [r3]
 883:.\main.c      ****                             initTurnU();
 4323              		.loc 1 883 0
 4324 01e4 FFF7FEFF 		bl	initTurnU
 884:.\main.c      ****                             instructionCount++;
 4325              		.loc 1 884 0
 4326 01e8 2A4B     		ldr	r3, .L235+44
 4327 01ea 1B88     		ldrh	r3, [r3]
 4328 01ec 0133     		adds	r3, r3, #1
 4329 01ee 9AB2     		uxth	r2, r3
 4330 01f0 284B     		ldr	r3, .L235+44
 4331 01f2 1A80     		strh	r2, [r3]	@ movhi
 880:.\main.c      ****                         {
 4332              		.loc 1 880 0
 4333 01f4 06E0     		b	.L209
 4334              	.L222:
 880:.\main.c      ****                         {
 4335              		.loc 1 880 0 is_stmt 0 discriminator 2
 4336 01f6 05E0     		b	.L209
 4337              	.L221:
 885:.\main.c      ****                         }
 886:.\main.c      ****                     }
 887:.\main.c      ****                     else
 888:.\main.c      ****                     {
 889:.\main.c      ****                         inittrackLineZ();
 4338              		.loc 1 889 0 is_stmt 1
 4339 01f8 FFF7FEFF 		bl	inittrackLineZ
 890:.\main.c      ****                         sensorsDisabled = 0;
 4340              		.loc 1 890 0
 4341 01fc 274B     		ldr	r3, .L235+52
 4342 01fe 0022     		movs	r2, #0
 4343 0200 1A70     		strb	r2, [r3]
 4344              	.LBE9:
 891:.\main.c      ****                     }
 892:.\main.c      ****                 }
 893:.\main.c      ****                 break;
 4345              		.loc 1 893 0
 4346 0202 FFE7     		b	.L234
 4347              	.L209:
 4348              	.L234:
 4349 0204 00BF     		nop
 4350              	.L196:
 894:.\main.c      ****         }
 895:.\main.c      ****         
 896:.\main.c      ****         switch(movement_state)
 4351              		.loc 1 896 0
 4352 0206 1E4B     		ldr	r3, .L235+24
 4353 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4354 020a 072B     		cmp	r3, #7
 4355 020c 3FF626AF 		bhi	.L194
 4356 0210 01A2     		adr	r2, .L225
 4357 0212 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4358 0216 00BF     		.p2align 2
 4359              	.L225:
 4360 0218 39020000 		.word	.L224+1
 4361 021c 3F020000 		.word	.L226+1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 94


 4362 0220 45020000 		.word	.L227+1
 4363 0224 51020000 		.word	.L228+1
 4364 0228 57020000 		.word	.L229+1
 4365 022c 5D020000 		.word	.L230+1
 4366 0230 63020000 		.word	.L231+1
 4367 0234 4B020000 		.word	.L232+1
 4368              		.p2align 1
 4369              	.L224:
 897:.\main.c      ****         {
 898:.\main.c      ****             case DRIVE:
 899:.\main.c      ****                 driveForwards();
 4370              		.loc 1 899 0
 4371 0238 FFF7FEFF 		bl	driveForwards
 900:.\main.c      ****             break;
 4372              		.loc 1 900 0
 4373 023c 13E0     		b	.L223
 4374              	.L226:
 901:.\main.c      ****             case LTURN:
 902:.\main.c      ****                 turnLeft();
 4375              		.loc 1 902 0
 4376 023e FFF7FEFF 		bl	turnLeft
 903:.\main.c      ****             break;
 4377              		.loc 1 903 0
 4378 0242 10E0     		b	.L223
 4379              	.L227:
 904:.\main.c      ****             case RTURN:
 905:.\main.c      ****                 turnRight();
 4380              		.loc 1 905 0
 4381 0244 FFF7FEFF 		bl	turnRight
 906:.\main.c      ****             break;
 4382              		.loc 1 906 0
 4383 0248 0DE0     		b	.L223
 4384              	.L232:
 907:.\main.c      ****             case UTURN:
 908:.\main.c      ****                 turnU();
 4385              		.loc 1 908 0
 4386 024a FFF7FEFF 		bl	turnU
 909:.\main.c      ****             break;
 4387              		.loc 1 909 0
 4388 024e 0AE0     		b	.L223
 4389              	.L228:
 910:.\main.c      ****             case STOPPED:
 911:.\main.c      ****                 brakeMotor();
 4390              		.loc 1 911 0
 4391 0250 FFF7FEFF 		bl	brakeMotor
 912:.\main.c      ****             break;
 4392              		.loc 1 912 0
 4393 0254 07E0     		b	.L223
 4394              	.L229:
 913:.\main.c      ****             case TRACKING:
 914:.\main.c      ****                 trackLine();
 4395              		.loc 1 914 0
 4396 0256 FFF7FEFF 		bl	trackLine
 915:.\main.c      ****             break;
 4397              		.loc 1 915 0
 4398 025a 04E0     		b	.L223
 4399              	.L230:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 95


 916:.\main.c      ****             case TRACKING_U:
 917:.\main.c      ****                 trackLineU();
 4400              		.loc 1 917 0
 4401 025c FFF7FEFF 		bl	trackLineU
 918:.\main.c      ****             break;
 4402              		.loc 1 918 0
 4403 0260 01E0     		b	.L223
 4404              	.L231:
 919:.\main.c      ****             case TRACKING_SOFT:
 920:.\main.c      ****                 trackLineZ();
 4405              		.loc 1 920 0
 4406 0262 FFF7FEFF 		bl	trackLineZ
 4407              	.L223:
 4408              	.LBE8:
 921:.\main.c      ****         }
 922:.\main.c      ****         //handle_usb();        
 923:.\main.c      ****     }   
 4409              		.loc 1 923 0
 4410 0266 F9E6     		b	.L194
 4411              	.L236:
 4412              		.align	2
 4413              	.L235:
 4414 0268 00000000 		.word	isr_quad1
 4415 026c 00000000 		.word	isr_turn_timer
 4416 0270 00000000 		.word	button
 4417 0274 00000000 		.word	BIN_ENABLED
 4418 0278 00000000 		.word	BT_ENABLED
 4419 027c 00000000 		.word	track_mode
 4420 0280 00000000 		.word	movement_state
 4421 0284 00000000 		.word	initial_pos_valid
 4422 0288 00000000 		.word	system_state
 4423 028c 00000000 		.word	initial_x_pos
 4424 0290 00000000 		.word	initial_y_pos
 4425 0294 00000000 		.word	instructionCount
 4426 0298 00000000 		.word	instructions
 4427 029c 00000000 		.word	sensorsDisabled
 4428              		.cfi_endproc
 4429              	.LFE101:
 4430              		.size	main, .-main
 4431              		.section	.text.usbPutString,"ax",%progbits
 4432              		.align	2
 4433              		.global	usbPutString
 4434              		.thumb
 4435              		.thumb_func
 4436              		.type	usbPutString, %function
 4437              	usbPutString:
 4438              	.LFB102:
 924:.\main.c      **** }
 925:.\main.c      **** //* ========================================
 926:.\main.c      **** void usbPutString(char *s)
 927:.\main.c      **** {
 4439              		.loc 1 927 0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 16
 4442              		@ frame_needed = 1, uses_anonymous_args = 0
 4443 0000 80B5     		push	{r7, lr}
 4444              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 96


 4445              		.cfi_offset 7, -8
 4446              		.cfi_offset 14, -4
 4447 0002 84B0     		sub	sp, sp, #16
 4448              		.cfi_def_cfa_offset 24
 4449 0004 00AF     		add	r7, sp, #0
 4450              		.cfi_def_cfa_register 7
 4451 0006 7860     		str	r0, [r7, #4]
 928:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 929:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 930:.\main.c      **** //  length to 62 char (63rd char is a '!')
 931:.\main.c      ****     if (USE_USB && portOpen)    
 4452              		.loc 1 931 0
 4453 0008 154B     		ldr	r3, .L241
 4454 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4455 000c 002B     		cmp	r3, #0
 4456 000e 23D0     		beq	.L237
 4457              	.LBB10:
 932:.\main.c      ****     {
 933:.\main.c      ****             uint32 cnt = 0;
 4458              		.loc 1 933 0
 4459 0010 0023     		movs	r3, #0
 4460 0012 FB60     		str	r3, [r7, #12]
 934:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4461              		.loc 1 934 0
 4462 0014 0AE0     		b	.L239
 4463              	.L240:
 935:.\main.c      ****             {
 936:.\main.c      ****                 cnt++;
 4464              		.loc 1 936 0
 4465 0016 FB68     		ldr	r3, [r7, #12]
 4466 0018 0133     		adds	r3, r3, #1
 4467 001a FB60     		str	r3, [r7, #12]
 937:.\main.c      ****                 if(cnt == 3000000){
 4468              		.loc 1 937 0
 4469 001c FB68     		ldr	r3, [r7, #12]
 4470 001e 114A     		ldr	r2, .L241+4
 4471 0020 9342     		cmp	r3, r2
 4472 0022 03D1     		bne	.L239
 938:.\main.c      ****                     portOpen = 0;
 4473              		.loc 1 938 0
 4474 0024 0E4B     		ldr	r3, .L241
 4475 0026 0022     		movs	r2, #0
 4476 0028 1A70     		strb	r2, [r3]
 939:.\main.c      ****                     return;
 4477              		.loc 1 939 0
 4478 002a 15E0     		b	.L237
 4479              	.L239:
 934:.\main.c      ****             {
 4480              		.loc 1 934 0
 4481 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4482 0030 0346     		mov	r3, r0
 4483 0032 002B     		cmp	r3, #0
 4484 0034 EFD0     		beq	.L240
 940:.\main.c      ****                 }
 941:.\main.c      ****             }
 942:.\main.c      ****             s[63]='\0';
 4485              		.loc 1 942 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 97


 4486 0036 7B68     		ldr	r3, [r7, #4]
 4487 0038 3F33     		adds	r3, r3, #63
 4488 003a 0022     		movs	r2, #0
 4489 003c 1A70     		strb	r2, [r3]
 943:.\main.c      ****             s[62]='!';
 4490              		.loc 1 943 0
 4491 003e 7B68     		ldr	r3, [r7, #4]
 4492 0040 3E33     		adds	r3, r3, #62
 4493 0042 2122     		movs	r2, #33
 4494 0044 1A70     		strb	r2, [r3]
 944:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4495              		.loc 1 944 0
 4496 0046 7868     		ldr	r0, [r7, #4]
 4497 0048 FFF7FEFF 		bl	strlen
 4498 004c 0346     		mov	r3, r0
 4499 004e 9BB2     		uxth	r3, r3
 4500 0050 7868     		ldr	r0, [r7, #4]
 4501 0052 1946     		mov	r1, r3
 4502 0054 FFF7FEFF 		bl	USBUART_PutData
 4503              	.L237:
 4504              	.LBE10:
 945:.\main.c      ****     }
 946:.\main.c      **** }
 4505              		.loc 1 946 0
 4506 0058 1037     		adds	r7, r7, #16
 4507              		.cfi_def_cfa_offset 8
 4508 005a BD46     		mov	sp, r7
 4509              		.cfi_def_cfa_register 13
 4510              		@ sp needed
 4511 005c 80BD     		pop	{r7, pc}
 4512              	.L242:
 4513 005e 00BF     		.align	2
 4514              	.L241:
 4515 0060 00000000 		.word	portOpen
 4516 0064 C0C62D00 		.word	3000000
 4517              		.cfi_endproc
 4518              	.LFE102:
 4519              		.size	usbPutString, .-usbPutString
 4520              		.section	.text.usbPutChar,"ax",%progbits
 4521              		.align	2
 4522              		.global	usbPutChar
 4523              		.thumb
 4524              		.thumb_func
 4525              		.type	usbPutChar, %function
 4526              	usbPutChar:
 4527              	.LFB103:
 947:.\main.c      **** //* ========================================
 948:.\main.c      **** void usbPutChar(char c)
 949:.\main.c      **** {
 4528              		.loc 1 949 0
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 16
 4531              		@ frame_needed = 1, uses_anonymous_args = 0
 4532 0000 80B5     		push	{r7, lr}
 4533              		.cfi_def_cfa_offset 8
 4534              		.cfi_offset 7, -8
 4535              		.cfi_offset 14, -4
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 98


 4536 0002 84B0     		sub	sp, sp, #16
 4537              		.cfi_def_cfa_offset 24
 4538 0004 00AF     		add	r7, sp, #0
 4539              		.cfi_def_cfa_register 7
 4540 0006 0346     		mov	r3, r0
 4541 0008 FB71     		strb	r3, [r7, #7]
 950:.\main.c      ****     if (USE_USB && portOpen)    
 4542              		.loc 1 950 0
 4543 000a 0F4B     		ldr	r3, .L247
 4544 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4545 000e 002B     		cmp	r3, #0
 4546 0010 16D0     		beq	.L243
 4547              	.LBB11:
 951:.\main.c      ****     {    
 952:.\main.c      ****         uint32 cnt = 0;
 4548              		.loc 1 952 0
 4549 0012 0023     		movs	r3, #0
 4550 0014 FB60     		str	r3, [r7, #12]
 953:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4551              		.loc 1 953 0
 4552 0016 0AE0     		b	.L245
 4553              	.L246:
 954:.\main.c      ****             cnt++;
 4554              		.loc 1 954 0
 4555 0018 FB68     		ldr	r3, [r7, #12]
 4556 001a 0133     		adds	r3, r3, #1
 4557 001c FB60     		str	r3, [r7, #12]
 955:.\main.c      ****             if(cnt == 3000000){
 4558              		.loc 1 955 0
 4559 001e FB68     		ldr	r3, [r7, #12]
 4560 0020 0A4A     		ldr	r2, .L247+4
 4561 0022 9342     		cmp	r3, r2
 4562 0024 03D1     		bne	.L245
 956:.\main.c      ****                 portOpen = 0;
 4563              		.loc 1 956 0
 4564 0026 084B     		ldr	r3, .L247
 4565 0028 0022     		movs	r2, #0
 4566 002a 1A70     		strb	r2, [r3]
 957:.\main.c      ****                 return;
 4567              		.loc 1 957 0
 4568 002c 08E0     		b	.L243
 4569              	.L245:
 953:.\main.c      ****             cnt++;
 4570              		.loc 1 953 0
 4571 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4572 0032 0346     		mov	r3, r0
 4573 0034 002B     		cmp	r3, #0
 4574 0036 EFD0     		beq	.L246
 958:.\main.c      ****             }
 959:.\main.c      ****         }
 960:.\main.c      ****         USBUART_PutChar(c);
 4575              		.loc 1 960 0
 4576 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4577 003a 1846     		mov	r0, r3
 4578 003c FFF7FEFF 		bl	USBUART_PutChar
 4579              	.L243:
 4580              	.LBE11:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 99


 961:.\main.c      ****     }    
 962:.\main.c      **** }
 4581              		.loc 1 962 0
 4582 0040 1037     		adds	r7, r7, #16
 4583              		.cfi_def_cfa_offset 8
 4584 0042 BD46     		mov	sp, r7
 4585              		.cfi_def_cfa_register 13
 4586              		@ sp needed
 4587 0044 80BD     		pop	{r7, pc}
 4588              	.L248:
 4589 0046 00BF     		.align	2
 4590              	.L247:
 4591 0048 00000000 		.word	portOpen
 4592 004c C0C62D00 		.word	3000000
 4593              		.cfi_endproc
 4594              	.LFE103:
 4595              		.size	usbPutChar, .-usbPutChar
 4596              		.section	.text.uart_set_PWM,"ax",%progbits
 4597              		.align	2
 4598              		.global	uart_set_PWM
 4599              		.thumb
 4600              		.thumb_func
 4601              		.type	uart_set_PWM, %function
 4602              	uart_set_PWM:
 4603              	.LFB104:
 963:.\main.c      **** //* ========================================
 964:.\main.c      **** 
 965:.\main.c      **** void uart_set_PWM()
 966:.\main.c      **** {
 4604              		.loc 1 966 0
 4605              		.cfi_startproc
 4606              		@ args = 0, pretend = 0, frame = 8
 4607              		@ frame_needed = 1, uses_anonymous_args = 0
 4608 0000 80B5     		push	{r7, lr}
 4609              		.cfi_def_cfa_offset 8
 4610              		.cfi_offset 7, -8
 4611              		.cfi_offset 14, -4
 4612 0002 82B0     		sub	sp, sp, #8
 4613              		.cfi_def_cfa_offset 16
 4614 0004 00AF     		add	r7, sp, #0
 4615              		.cfi_def_cfa_register 7
 967:.\main.c      ****     uint8 c;
 968:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 4616              		.loc 1 968 0
 4617 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 4618 000a 0346     		mov	r3, r0
 4619 000c 002B     		cmp	r3, #0
 4620 000e 11D0     		beq	.L249
 969:.\main.c      ****        {  
 970:.\main.c      ****             c = USBUART_GetChar();
 4621              		.loc 1 970 0
 4622 0010 FFF7FEFF 		bl	USBUART_GetChar
 4623 0014 0346     		mov	r3, r0
 4624 0016 FB71     		strb	r3, [r7, #7]
 971:.\main.c      ****             
 972:.\main.c      ****             if(c <= 100 && c > 0){
 4625              		.loc 1 972 0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 100


 4626 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4627 001a 642B     		cmp	r3, #100
 4628 001c 0AD8     		bhi	.L249
 4629              		.loc 1 972 0 is_stmt 0 discriminator 1
 4630 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4631 0020 002B     		cmp	r3, #0
 4632 0022 07D0     		beq	.L249
 973:.\main.c      ****                 PWM_1_WriteCompare(c);
 4633              		.loc 1 973 0 is_stmt 1
 4634 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4635 0026 1846     		mov	r0, r3
 4636 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 974:.\main.c      ****                 usbPutString(c);
 4637              		.loc 1 974 0
 4638 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4639 002e 1846     		mov	r0, r3
 4640 0030 FFF7FEFF 		bl	usbPutString
 4641              	.L249:
 975:.\main.c      ****             }
 976:.\main.c      ****        }
 977:.\main.c      **** }
 4642              		.loc 1 977 0
 4643 0034 0837     		adds	r7, r7, #8
 4644              		.cfi_def_cfa_offset 8
 4645 0036 BD46     		mov	sp, r7
 4646              		.cfi_def_cfa_register 13
 4647              		@ sp needed
 4648 0038 80BD     		pop	{r7, pc}
 4649              		.cfi_endproc
 4650              	.LFE104:
 4651              		.size	uart_set_PWM, .-uart_set_PWM
 4652 003a 00BF     		.text
 4653              	.Letext0:
 4654              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4655              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4656              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4657              		.file 5 ".\\vars.h"
 4658              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4659              		.file 7 ".\\pathfinder.h"
 4660              		.section	.debug_info,"",%progbits
 4661              	.Ldebug_info0:
 4662 0000 B80D0000 		.4byte	0xdb8
 4663 0004 0400     		.2byte	0x4
 4664 0006 00000000 		.4byte	.Ldebug_abbrev0
 4665 000a 04       		.byte	0x4
 4666 000b 01       		.uleb128 0x1
 4667 000c 2F040000 		.4byte	.LASF185
 4668 0010 01       		.byte	0x1
 4669 0011 D3080000 		.4byte	.LASF186
 4670 0015 A6080000 		.4byte	.LASF187
 4671 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4672 001d 00000000 		.4byte	0
 4673 0021 00000000 		.4byte	.Ldebug_line0
 4674 0025 02       		.uleb128 0x2
 4675 0026 01       		.byte	0x1
 4676 0027 06       		.byte	0x6
 4677 0028 DB070000 		.4byte	.LASF0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 101


 4678 002c 02       		.uleb128 0x2
 4679 002d 01       		.byte	0x1
 4680 002e 08       		.byte	0x8
 4681 002f 32070000 		.4byte	.LASF1
 4682 0033 02       		.uleb128 0x2
 4683 0034 02       		.byte	0x2
 4684 0035 05       		.byte	0x5
 4685 0036 D1050000 		.4byte	.LASF2
 4686 003a 02       		.uleb128 0x2
 4687 003b 02       		.byte	0x2
 4688 003c 07       		.byte	0x7
 4689 003d E7070000 		.4byte	.LASF3
 4690 0041 03       		.uleb128 0x3
 4691 0042 91000000 		.4byte	.LASF11
 4692 0046 02       		.byte	0x2
 4693 0047 3F       		.byte	0x3f
 4694 0048 4C000000 		.4byte	0x4c
 4695 004c 02       		.uleb128 0x2
 4696 004d 04       		.byte	0x4
 4697 004e 05       		.byte	0x5
 4698 004f 05060000 		.4byte	.LASF4
 4699 0053 02       		.uleb128 0x2
 4700 0054 04       		.byte	0x4
 4701 0055 07       		.byte	0x7
 4702 0056 DD060000 		.4byte	.LASF5
 4703 005a 02       		.uleb128 0x2
 4704 005b 08       		.byte	0x8
 4705 005c 05       		.byte	0x5
 4706 005d F9030000 		.4byte	.LASF6
 4707 0061 02       		.uleb128 0x2
 4708 0062 08       		.byte	0x8
 4709 0063 07       		.byte	0x7
 4710 0064 2E020000 		.4byte	.LASF7
 4711 0068 04       		.uleb128 0x4
 4712 0069 04       		.byte	0x4
 4713 006a 05       		.byte	0x5
 4714 006b 696E7400 		.ascii	"int\000"
 4715 006f 02       		.uleb128 0x2
 4716 0070 04       		.byte	0x4
 4717 0071 07       		.byte	0x7
 4718 0072 79000000 		.4byte	.LASF8
 4719 0076 02       		.uleb128 0x2
 4720 0077 04       		.byte	0x4
 4721 0078 07       		.byte	0x7
 4722 0079 D4060000 		.4byte	.LASF9
 4723 007d 05       		.uleb128 0x5
 4724 007e 04       		.byte	0x4
 4725 007f 83000000 		.4byte	0x83
 4726 0083 02       		.uleb128 0x2
 4727 0084 01       		.byte	0x1
 4728 0085 08       		.byte	0x8
 4729 0086 4E030000 		.4byte	.LASF10
 4730 008a 03       		.uleb128 0x3
 4731 008b FB060000 		.4byte	.LASF12
 4732 008f 03       		.byte	0x3
 4733 0090 2C       		.byte	0x2c
 4734 0091 41000000 		.4byte	0x41
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 102


 4735 0095 06       		.uleb128 0x6
 4736 0096 33080000 		.4byte	.LASF13
 4737 009a 04       		.byte	0x4
 4738 009b 9201     		.2byte	0x192
 4739 009d 2C000000 		.4byte	0x2c
 4740 00a1 06       		.uleb128 0x6
 4741 00a2 96030000 		.4byte	.LASF14
 4742 00a6 04       		.byte	0x4
 4743 00a7 9301     		.2byte	0x193
 4744 00a9 3A000000 		.4byte	0x3a
 4745 00ad 06       		.uleb128 0x6
 4746 00ae 00050000 		.4byte	.LASF15
 4747 00b2 04       		.byte	0x4
 4748 00b3 9401     		.2byte	0x194
 4749 00b5 53000000 		.4byte	0x53
 4750 00b9 06       		.uleb128 0x6
 4751 00ba 9D030000 		.4byte	.LASF16
 4752 00be 04       		.byte	0x4
 4753 00bf 9501     		.2byte	0x195
 4754 00c1 25000000 		.4byte	0x25
 4755 00c5 06       		.uleb128 0x6
 4756 00c6 9B000000 		.4byte	.LASF17
 4757 00ca 04       		.byte	0x4
 4758 00cb 9601     		.2byte	0x196
 4759 00cd 33000000 		.4byte	0x33
 4760 00d1 02       		.uleb128 0x2
 4761 00d2 04       		.byte	0x4
 4762 00d3 04       		.byte	0x4
 4763 00d4 CE010000 		.4byte	.LASF18
 4764 00d8 02       		.uleb128 0x2
 4765 00d9 08       		.byte	0x8
 4766 00da 04       		.byte	0x4
 4767 00db 39080000 		.4byte	.LASF19
 4768 00df 02       		.uleb128 0x2
 4769 00e0 08       		.byte	0x8
 4770 00e1 04       		.byte	0x4
 4771 00e2 7C050000 		.4byte	.LASF20
 4772 00e6 07       		.uleb128 0x7
 4773 00e7 73070000 		.4byte	.LASF29
 4774 00eb 01       		.byte	0x1
 4775 00ec 05       		.byte	0x5
 4776 00ed 5A       		.byte	0x5a
 4777 00ee 23010000 		.4byte	0x123
 4778 00f2 08       		.uleb128 0x8
 4779 00f3 ED010000 		.4byte	.LASF21
 4780 00f7 00       		.sleb128 0
 4781 00f8 08       		.uleb128 0x8
 4782 00f9 AE000000 		.4byte	.LASF22
 4783 00fd 01       		.sleb128 1
 4784 00fe 08       		.uleb128 0x8
 4785 00ff 1C000000 		.4byte	.LASF23
 4786 0103 02       		.sleb128 2
 4787 0104 08       		.uleb128 0x8
 4788 0105 6B050000 		.4byte	.LASF24
 4789 0109 03       		.sleb128 3
 4790 010a 08       		.uleb128 0x8
 4791 010b D6000000 		.4byte	.LASF25
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 103


 4792 010f 04       		.sleb128 4
 4793 0110 08       		.uleb128 0x8
 4794 0111 A0010000 		.4byte	.LASF26
 4795 0115 05       		.sleb128 5
 4796 0116 08       		.uleb128 0x8
 4797 0117 5F060000 		.4byte	.LASF27
 4798 011b 06       		.sleb128 6
 4799 011c 08       		.uleb128 0x8
 4800 011d 73080000 		.4byte	.LASF28
 4801 0121 07       		.sleb128 7
 4802 0122 00       		.byte	0
 4803 0123 07       		.uleb128 0x7
 4804 0124 11010000 		.4byte	.LASF30
 4805 0128 01       		.byte	0x1
 4806 0129 05       		.byte	0x5
 4807 012a 5B       		.byte	0x5b
 4808 012b 5A010000 		.4byte	0x15a
 4809 012f 08       		.uleb128 0x8
 4810 0130 47060000 		.4byte	.LASF31
 4811 0134 00       		.sleb128 0
 4812 0135 08       		.uleb128 0x8
 4813 0136 C0030000 		.4byte	.LASF32
 4814 013a 01       		.sleb128 1
 4815 013b 08       		.uleb128 0x8
 4816 013c 1C060000 		.4byte	.LASF33
 4817 0140 02       		.sleb128 2
 4818 0141 08       		.uleb128 0x8
 4819 0142 5A010000 		.4byte	.LASF34
 4820 0146 03       		.sleb128 3
 4821 0147 08       		.uleb128 0x8
 4822 0148 0C080000 		.4byte	.LASF35
 4823 014c 04       		.sleb128 4
 4824 014d 08       		.uleb128 0x8
 4825 014e 51080000 		.4byte	.LASF36
 4826 0152 05       		.sleb128 5
 4827 0153 08       		.uleb128 0x8
 4828 0154 22000000 		.4byte	.LASF37
 4829 0158 06       		.sleb128 6
 4830 0159 00       		.byte	0
 4831 015a 09       		.uleb128 0x9
 4832 015b 20050000 		.4byte	.LASF188
 4833 015f 20       		.byte	0x20
 4834 0160 05       		.byte	0x5
 4835 0161 61       		.byte	0x61
 4836 0162 33020000 		.4byte	0x233
 4837 0166 0A       		.uleb128 0xa
 4838 0167 3E050000 		.4byte	.LASF38
 4839 016b 05       		.byte	0x5
 4840 016c 62       		.byte	0x62
 4841 016d B9000000 		.4byte	0xb9
 4842 0171 00       		.byte	0
 4843 0172 0A       		.uleb128 0xa
 4844 0173 E7010000 		.4byte	.LASF39
 4845 0177 05       		.byte	0x5
 4846 0178 63       		.byte	0x63
 4847 0179 95000000 		.4byte	0x95
 4848 017d 01       		.byte	0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 104


 4849 017e 0A       		.uleb128 0xa
 4850 017f 0A070000 		.4byte	.LASF40
 4851 0183 05       		.byte	0x5
 4852 0184 64       		.byte	0x64
 4853 0185 C5000000 		.4byte	0xc5
 4854 0189 02       		.byte	0x2
 4855 018a 0A       		.uleb128 0xa
 4856 018b 22030000 		.4byte	.LASF41
 4857 018f 05       		.byte	0x5
 4858 0190 65       		.byte	0x65
 4859 0191 C5000000 		.4byte	0xc5
 4860 0195 04       		.byte	0x4
 4861 0196 0A       		.uleb128 0xa
 4862 0197 FA070000 		.4byte	.LASF42
 4863 019b 05       		.byte	0x5
 4864 019c 66       		.byte	0x66
 4865 019d C5000000 		.4byte	0xc5
 4866 01a1 06       		.byte	0x6
 4867 01a2 0A       		.uleb128 0xa
 4868 01a3 79080000 		.4byte	.LASF43
 4869 01a7 05       		.byte	0x5
 4870 01a8 67       		.byte	0x67
 4871 01a9 C5000000 		.4byte	0xc5
 4872 01ad 08       		.byte	0x8
 4873 01ae 0A       		.uleb128 0xa
 4874 01af C6040000 		.4byte	.LASF44
 4875 01b3 05       		.byte	0x5
 4876 01b4 68       		.byte	0x68
 4877 01b5 C5000000 		.4byte	0xc5
 4878 01b9 0A       		.byte	0xa
 4879 01ba 0A       		.uleb128 0xa
 4880 01bb 53030000 		.4byte	.LASF45
 4881 01bf 05       		.byte	0x5
 4882 01c0 69       		.byte	0x69
 4883 01c1 C5000000 		.4byte	0xc5
 4884 01c5 0C       		.byte	0xc
 4885 01c6 0A       		.uleb128 0xa
 4886 01c7 4D050000 		.4byte	.LASF46
 4887 01cb 05       		.byte	0x5
 4888 01cc 6A       		.byte	0x6a
 4889 01cd C5000000 		.4byte	0xc5
 4890 01d1 0E       		.byte	0xe
 4891 01d2 0A       		.uleb128 0xa
 4892 01d3 14040000 		.4byte	.LASF47
 4893 01d7 05       		.byte	0x5
 4894 01d8 6B       		.byte	0x6b
 4895 01d9 C5000000 		.4byte	0xc5
 4896 01dd 10       		.byte	0x10
 4897 01de 0A       		.uleb128 0xa
 4898 01df 94060000 		.4byte	.LASF48
 4899 01e3 05       		.byte	0x5
 4900 01e4 6C       		.byte	0x6c
 4901 01e5 C5000000 		.4byte	0xc5
 4902 01e9 12       		.byte	0x12
 4903 01ea 0A       		.uleb128 0xa
 4904 01eb 9D080000 		.4byte	.LASF49
 4905 01ef 05       		.byte	0x5
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 105


 4906 01f0 6D       		.byte	0x6d
 4907 01f1 C5000000 		.4byte	0xc5
 4908 01f5 14       		.byte	0x14
 4909 01f6 0A       		.uleb128 0xa
 4910 01f7 A2030000 		.4byte	.LASF50
 4911 01fb 05       		.byte	0x5
 4912 01fc 6E       		.byte	0x6e
 4913 01fd C5000000 		.4byte	0xc5
 4914 0201 16       		.byte	0x16
 4915 0202 0A       		.uleb128 0xa
 4916 0203 09010000 		.4byte	.LASF51
 4917 0207 05       		.byte	0x5
 4918 0208 6F       		.byte	0x6f
 4919 0209 C5000000 		.4byte	0xc5
 4920 020d 18       		.byte	0x18
 4921 020e 0A       		.uleb128 0xa
 4922 020f 8E030000 		.4byte	.LASF52
 4923 0213 05       		.byte	0x5
 4924 0214 70       		.byte	0x70
 4925 0215 C5000000 		.4byte	0xc5
 4926 0219 1A       		.byte	0x1a
 4927 021a 0A       		.uleb128 0xa
 4928 021b BD040000 		.4byte	.LASF53
 4929 021f 05       		.byte	0x5
 4930 0220 71       		.byte	0x71
 4931 0221 C5000000 		.4byte	0xc5
 4932 0225 1C       		.byte	0x1c
 4933 0226 0A       		.uleb128 0xa
 4934 0227 B7010000 		.4byte	.LASF54
 4935 022b 05       		.byte	0x5
 4936 022c 72       		.byte	0x72
 4937 022d C5000000 		.4byte	0xc5
 4938 0231 1E       		.byte	0x1e
 4939 0232 00       		.byte	0
 4940 0233 0B       		.uleb128 0xb
 4941 0234 59080000 		.4byte	.LASF60
 4942 0238 01       		.byte	0x1
 4943 0239 4E       		.byte	0x4e
 4944 023a 00000000 		.4byte	.LFB63
 4945 023e 60010000 		.4byte	.LFE63-.LFB63
 4946 0242 01       		.uleb128 0x1
 4947 0243 9C       		.byte	0x9c
 4948 0244 7D020000 		.4byte	0x27d
 4949 0248 0C       		.uleb128 0xc
 4950 0249 10000000 		.4byte	.LBB2
 4951 024d 34010000 		.4byte	.LBE2-.LBB2
 4952 0251 0D       		.uleb128 0xd
 4953 0252 FC000000 		.4byte	.LASF55
 4954 0256 01       		.byte	0x1
 4955 0257 54       		.byte	0x54
 4956 0258 A1000000 		.4byte	0xa1
 4957 025c 02       		.uleb128 0x2
 4958 025d 91       		.byte	0x91
 4959 025e 76       		.sleb128 -10
 4960 025f 0D       		.uleb128 0xd
 4961 0260 EF060000 		.4byte	.LASF56
 4962 0264 01       		.byte	0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 106


 4963 0265 55       		.byte	0x55
 4964 0266 7D020000 		.4byte	0x27d
 4965 026a 02       		.uleb128 0x2
 4966 026b 91       		.byte	0x91
 4967 026c 68       		.sleb128 -24
 4968 026d 0D       		.uleb128 0xd
 4969 026e F3010000 		.4byte	.LASF57
 4970 0272 01       		.byte	0x1
 4971 0273 56       		.byte	0x56
 4972 0274 7D020000 		.4byte	0x27d
 4973 0278 02       		.uleb128 0x2
 4974 0279 91       		.byte	0x91
 4975 027a 5C       		.sleb128 -36
 4976 027b 00       		.byte	0
 4977 027c 00       		.byte	0
 4978 027d 0E       		.uleb128 0xe
 4979 027e 83000000 		.4byte	0x83
 4980 0282 8D020000 		.4byte	0x28d
 4981 0286 0F       		.uleb128 0xf
 4982 0287 76000000 		.4byte	0x76
 4983 028b 0B       		.byte	0xb
 4984 028c 00       		.byte	0
 4985 028d 10       		.uleb128 0x10
 4986 028e 6C030000 		.4byte	.LASF58
 4987 0292 01       		.byte	0x1
 4988 0293 8F       		.byte	0x8f
 4989 0294 00000000 		.4byte	.LFB64
 4990 0298 18000000 		.4byte	.LFE64-.LFB64
 4991 029c 01       		.uleb128 0x1
 4992 029d 9C       		.byte	0x9c
 4993 029e B1020000 		.4byte	0x2b1
 4994 02a2 11       		.uleb128 0x11
 4995 02a3 64697200 		.ascii	"dir\000"
 4996 02a7 01       		.byte	0x1
 4997 02a8 8F       		.byte	0x8f
 4998 02a9 95000000 		.4byte	0x95
 4999 02ad 02       		.uleb128 0x2
 5000 02ae 91       		.byte	0x91
 5001 02af 77       		.sleb128 -9
 5002 02b0 00       		.byte	0
 5003 02b1 10       		.uleb128 0x10
 5004 02b2 B4030000 		.4byte	.LASF59
 5005 02b6 01       		.byte	0x1
 5006 02b7 94       		.byte	0x94
 5007 02b8 00000000 		.4byte	.LFB65
 5008 02bc 18000000 		.4byte	.LFE65-.LFB65
 5009 02c0 01       		.uleb128 0x1
 5010 02c1 9C       		.byte	0x9c
 5011 02c2 D5020000 		.4byte	0x2d5
 5012 02c6 11       		.uleb128 0x11
 5013 02c7 64697200 		.ascii	"dir\000"
 5014 02cb 01       		.byte	0x1
 5015 02cc 94       		.byte	0x94
 5016 02cd 95000000 		.4byte	0x95
 5017 02d1 02       		.uleb128 0x2
 5018 02d2 91       		.byte	0x91
 5019 02d3 77       		.sleb128 -9
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 107


 5020 02d4 00       		.byte	0
 5021 02d5 12       		.uleb128 0x12
 5022 02d6 79070000 		.4byte	.LASF61
 5023 02da 01       		.byte	0x1
 5024 02db 99       		.byte	0x99
 5025 02dc 00000000 		.4byte	.LFB66
 5026 02e0 54000000 		.4byte	.LFE66-.LFB66
 5027 02e4 01       		.uleb128 0x1
 5028 02e5 9C       		.byte	0x9c
 5029 02e6 F9020000 		.4byte	0x2f9
 5030 02ea 13       		.uleb128 0x13
 5031 02eb 6D657300 		.ascii	"mes\000"
 5032 02ef 01       		.byte	0x1
 5033 02f0 9E       		.byte	0x9e
 5034 02f1 F9020000 		.4byte	0x2f9
 5035 02f5 02       		.uleb128 0x2
 5036 02f6 91       		.byte	0x91
 5037 02f7 68       		.sleb128 -24
 5038 02f8 00       		.byte	0
 5039 02f9 0E       		.uleb128 0xe
 5040 02fa 83000000 		.4byte	0x83
 5041 02fe 09030000 		.4byte	0x309
 5042 0302 0F       		.uleb128 0xf
 5043 0303 76000000 		.4byte	0x76
 5044 0307 0F       		.byte	0xf
 5045 0308 00       		.byte	0
 5046 0309 10       		.uleb128 0x10
 5047 030a D4010000 		.4byte	.LASF62
 5048 030e 01       		.byte	0x1
 5049 030f A3       		.byte	0xa3
 5050 0310 00000000 		.4byte	.LFB67
 5051 0314 F4000000 		.4byte	.LFE67-.LFB67
 5052 0318 01       		.uleb128 0x1
 5053 0319 9C       		.byte	0x9c
 5054 031a 57030000 		.4byte	0x357
 5055 031e 14       		.uleb128 0x14
 5056 031f 6D060000 		.4byte	.LASF63
 5057 0323 01       		.byte	0x1
 5058 0324 A3       		.byte	0xa3
 5059 0325 D8000000 		.4byte	0xd8
 5060 0329 02       		.uleb128 0x2
 5061 032a 91       		.byte	0x91
 5062 032b 68       		.sleb128 -24
 5063 032c 14       		.uleb128 0x14
 5064 032d E1030000 		.4byte	.LASF64
 5065 0331 01       		.byte	0x1
 5066 0332 A3       		.byte	0xa3
 5067 0333 D8000000 		.4byte	0xd8
 5068 0337 02       		.uleb128 0x2
 5069 0338 91       		.byte	0x91
 5070 0339 60       		.sleb128 -32
 5071 033a 0D       		.uleb128 0xd
 5072 033b 0C020000 		.4byte	.LASF65
 5073 033f 01       		.byte	0x1
 5074 0340 B8       		.byte	0xb8
 5075 0341 C5000000 		.4byte	0xc5
 5076 0345 02       		.uleb128 0x2
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 108


 5077 0346 91       		.byte	0x91
 5078 0347 76       		.sleb128 -10
 5079 0348 0D       		.uleb128 0xd
 5080 0349 14050000 		.4byte	.LASF66
 5081 034d 01       		.byte	0x1
 5082 034e B9       		.byte	0xb9
 5083 034f C5000000 		.4byte	0xc5
 5084 0353 02       		.uleb128 0x2
 5085 0354 91       		.byte	0x91
 5086 0355 74       		.sleb128 -12
 5087 0356 00       		.byte	0
 5088 0357 15       		.uleb128 0x15
 5089 0358 8A070000 		.4byte	.LASF67
 5090 035c 01       		.byte	0x1
 5091 035d BF       		.byte	0xbf
 5092 035e 00000000 		.4byte	.LFB68
 5093 0362 18000000 		.4byte	.LFE68-.LFB68
 5094 0366 01       		.uleb128 0x1
 5095 0367 9C       		.byte	0x9c
 5096 0368 15       		.uleb128 0x15
 5097 0369 EA080000 		.4byte	.LASF68
 5098 036d 01       		.byte	0x1
 5099 036e C5       		.byte	0xc5
 5100 036f 00000000 		.4byte	.LFB69
 5101 0373 18000000 		.4byte	.LFE69-.LFB69
 5102 0377 01       		.uleb128 0x1
 5103 0378 9C       		.byte	0x9c
 5104 0379 15       		.uleb128 0x15
 5105 037a 15070000 		.4byte	.LASF69
 5106 037e 01       		.byte	0x1
 5107 037f CB       		.byte	0xcb
 5108 0380 00000000 		.4byte	.LFB70
 5109 0384 22000000 		.4byte	.LFE70-.LFB70
 5110 0388 01       		.uleb128 0x1
 5111 0389 9C       		.byte	0x9c
 5112 038a 15       		.uleb128 0x15
 5113 038b 17020000 		.4byte	.LASF70
 5114 038f 01       		.byte	0x1
 5115 0390 D1       		.byte	0xd1
 5116 0391 00000000 		.4byte	.LFB71
 5117 0395 1C000000 		.4byte	.LFE71-.LFB71
 5118 0399 01       		.uleb128 0x1
 5119 039a 9C       		.byte	0x9c
 5120 039b 15       		.uleb128 0x15
 5121 039c 8A060000 		.4byte	.LASF71
 5122 03a0 01       		.byte	0x1
 5123 03a1 D6       		.byte	0xd6
 5124 03a2 00000000 		.4byte	.LFB72
 5125 03a6 28000000 		.4byte	.LFE72-.LFB72
 5126 03aa 01       		.uleb128 0x1
 5127 03ab 9C       		.byte	0x9c
 5128 03ac 15       		.uleb128 0x15
 5129 03ad 25020000 		.4byte	.LASF72
 5130 03b1 01       		.byte	0x1
 5131 03b2 DB       		.byte	0xdb
 5132 03b3 00000000 		.4byte	.LFB73
 5133 03b7 2C000000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 109


 5134 03bb 01       		.uleb128 0x1
 5135 03bc 9C       		.byte	0x9c
 5136 03bd 15       		.uleb128 0x15
 5137 03be 88030000 		.4byte	.LASF73
 5138 03c2 01       		.byte	0x1
 5139 03c3 E0       		.byte	0xe0
 5140 03c4 00000000 		.4byte	.LFB74
 5141 03c8 44000000 		.4byte	.LFE74-.LFB74
 5142 03cc 01       		.uleb128 0x1
 5143 03cd 9C       		.byte	0x9c
 5144 03ce 15       		.uleb128 0x15
 5145 03cf 78020000 		.4byte	.LASF74
 5146 03d3 01       		.byte	0x1
 5147 03d4 E5       		.byte	0xe5
 5148 03d5 00000000 		.4byte	.LFB75
 5149 03d9 38000000 		.4byte	.LFE75-.LFB75
 5150 03dd 01       		.uleb128 0x1
 5151 03de 9C       		.byte	0x9c
 5152 03df 15       		.uleb128 0x15
 5153 03e0 0E060000 		.4byte	.LASF75
 5154 03e4 01       		.byte	0x1
 5155 03e5 EE       		.byte	0xee
 5156 03e6 00000000 		.4byte	.LFB76
 5157 03ea 38000000 		.4byte	.LFE76-.LFB76
 5158 03ee 01       		.uleb128 0x1
 5159 03ef 9C       		.byte	0x9c
 5160 03f0 15       		.uleb128 0x15
 5161 03f1 E6050000 		.4byte	.LASF76
 5162 03f5 01       		.byte	0x1
 5163 03f6 F7       		.byte	0xf7
 5164 03f7 00000000 		.4byte	.LFB77
 5165 03fb 38000000 		.4byte	.LFE77-.LFB77
 5166 03ff 01       		.uleb128 0x1
 5167 0400 9C       		.byte	0x9c
 5168 0401 16       		.uleb128 0x16
 5169 0402 AB010000 		.4byte	.LASF77
 5170 0406 01       		.byte	0x1
 5171 0407 0001     		.2byte	0x100
 5172 0409 00000000 		.4byte	.LFB78
 5173 040d 14000000 		.4byte	.LFE78-.LFB78
 5174 0411 01       		.uleb128 0x1
 5175 0412 9C       		.byte	0x9c
 5176 0413 17       		.uleb128 0x17
 5177 0414 8E020000 		.4byte	.LASF78
 5178 0418 01       		.byte	0x1
 5179 0419 0501     		.2byte	0x105
 5180 041b 00000000 		.4byte	.LFB79
 5181 041f 18000000 		.4byte	.LFE79-.LFB79
 5182 0423 01       		.uleb128 0x1
 5183 0424 9C       		.byte	0x9c
 5184 0425 17       		.uleb128 0x17
 5185 0426 1C040000 		.4byte	.LASF79
 5186 042a 01       		.byte	0x1
 5187 042b 0901     		.2byte	0x109
 5188 042d 00000000 		.4byte	.LFB80
 5189 0431 18000000 		.4byte	.LFE80-.LFB80
 5190 0435 01       		.uleb128 0x1
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 110


 5191 0436 9C       		.byte	0x9c
 5192 0437 17       		.uleb128 0x17
 5193 0438 F5080000 		.4byte	.LASF80
 5194 043c 01       		.byte	0x1
 5195 043d 0E01     		.2byte	0x10e
 5196 043f 00000000 		.4byte	.LFB81
 5197 0443 18000000 		.4byte	.LFE81-.LFB81
 5198 0447 01       		.uleb128 0x1
 5199 0448 9C       		.byte	0x9c
 5200 0449 17       		.uleb128 0x17
 5201 044a 13030000 		.4byte	.LASF81
 5202 044e 01       		.byte	0x1
 5203 044f 1201     		.2byte	0x112
 5204 0451 00000000 		.4byte	.LFB82
 5205 0455 18000000 		.4byte	.LFE82-.LFB82
 5206 0459 01       		.uleb128 0x1
 5207 045a 9C       		.byte	0x9c
 5208 045b 18       		.uleb128 0x18
 5209 045c 88050000 		.4byte	.LASF82
 5210 0460 01       		.byte	0x1
 5211 0461 1901     		.2byte	0x119
 5212 0463 00000000 		.4byte	.LFB83
 5213 0467 B8000000 		.4byte	.LFE83-.LFB83
 5214 046b 01       		.uleb128 0x1
 5215 046c 9C       		.byte	0x9c
 5216 046d 81040000 		.4byte	0x481
 5217 0471 19       		.uleb128 0x19
 5218 0472 CE040000 		.4byte	.LASF83
 5219 0476 01       		.byte	0x1
 5220 0477 1A01     		.2byte	0x11a
 5221 0479 83000000 		.4byte	0x83
 5222 047d 02       		.uleb128 0x2
 5223 047e 91       		.byte	0x91
 5224 047f 6F       		.sleb128 -17
 5225 0480 00       		.byte	0
 5226 0481 18       		.uleb128 0x18
 5227 0482 73050000 		.4byte	.LASF84
 5228 0486 01       		.byte	0x1
 5229 0487 3601     		.2byte	0x136
 5230 0489 00000000 		.4byte	.LFB84
 5231 048d BC010000 		.4byte	.LFE84-.LFB84
 5232 0491 01       		.uleb128 0x1
 5233 0492 9C       		.byte	0x9c
 5234 0493 D0040000 		.4byte	0x4d0
 5235 0497 19       		.uleb128 0x19
 5236 0498 CE040000 		.4byte	.LASF83
 5237 049c 01       		.byte	0x1
 5238 049d 3801     		.2byte	0x138
 5239 049f 83000000 		.4byte	0x83
 5240 04a3 02       		.uleb128 0x2
 5241 04a4 91       		.byte	0x91
 5242 04a5 77       		.sleb128 -9
 5243 04a6 0C       		.uleb128 0xc
 5244 04a7 8C000000 		.4byte	.LBB3
 5245 04ab FC000000 		.4byte	.LBE3-.LBB3
 5246 04af 1A       		.uleb128 0x1a
 5247 04b0 6D657300 		.ascii	"mes\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 111


 5248 04b4 01       		.byte	0x1
 5249 04b5 5E01     		.2byte	0x15e
 5250 04b7 F9020000 		.4byte	0x2f9
 5251 04bb 02       		.uleb128 0x2
 5252 04bc 91       		.byte	0x91
 5253 04bd 64       		.sleb128 -28
 5254 04be 19       		.uleb128 0x19
 5255 04bf 42000000 		.4byte	.LASF85
 5256 04c3 01       		.byte	0x1
 5257 04c4 6E01     		.2byte	0x16e
 5258 04c6 D0040000 		.4byte	0x4d0
 5259 04ca 03       		.uleb128 0x3
 5260 04cb 91       		.byte	0x91
 5261 04cc E47E     		.sleb128 -156
 5262 04ce 00       		.byte	0
 5263 04cf 00       		.byte	0
 5264 04d0 0E       		.uleb128 0xe
 5265 04d1 83000000 		.4byte	0x83
 5266 04d5 E0040000 		.4byte	0x4e0
 5267 04d9 0F       		.uleb128 0xf
 5268 04da 76000000 		.4byte	0x76
 5269 04de 7F       		.byte	0x7f
 5270 04df 00       		.byte	0
 5271 04e0 1B       		.uleb128 0x1b
 5272 04e1 1B080000 		.4byte	.LASF86
 5273 04e5 01       		.byte	0x1
 5274 04e6 7701     		.2byte	0x177
 5275 04e8 00000000 		.4byte	.LFB85
 5276 04ec 0C000000 		.4byte	.LFE85-.LFB85
 5277 04f0 01       		.uleb128 0x1
 5278 04f1 9C       		.byte	0x9c
 5279 04f2 1C       		.uleb128 0x1c
 5280 04f3 9C060000 		.4byte	.LASF87
 5281 04f7 01       		.byte	0x1
 5282 04f8 7D01     		.2byte	0x17d
 5283 04fa 00000000 		.4byte	.LFB86
 5284 04fe 2C000000 		.4byte	.LFE86-.LFB86
 5285 0502 01       		.uleb128 0x1
 5286 0503 9C       		.byte	0x9c
 5287 0504 18       		.uleb128 0x18
 5288 0505 C4010000 		.4byte	.LASF88
 5289 0509 01       		.byte	0x1
 5290 050a 8601     		.2byte	0x186
 5291 050c 00000000 		.4byte	.LFB87
 5292 0510 EC010000 		.4byte	.LFE87-.LFB87
 5293 0514 01       		.uleb128 0x1
 5294 0515 9C       		.byte	0x9c
 5295 0516 51050000 		.4byte	0x551
 5296 051a 1D       		.uleb128 0x1d
 5297 051b B4000000 		.4byte	.LBB4
 5298 051f 52000000 		.4byte	.LBE4-.LBB4
 5299 0523 37050000 		.4byte	0x537
 5300 0527 1A       		.uleb128 0x1a
 5301 0528 6D657300 		.ascii	"mes\000"
 5302 052c 01       		.byte	0x1
 5303 052d 9D01     		.2byte	0x19d
 5304 052f F9020000 		.4byte	0x2f9
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 112


 5305 0533 02       		.uleb128 0x2
 5306 0534 91       		.byte	0x91
 5307 0535 58       		.sleb128 -40
 5308 0536 00       		.byte	0
 5309 0537 0C       		.uleb128 0xc
 5310 0538 12010000 		.4byte	.LBB5
 5311 053c 90000000 		.4byte	.LBE5-.LBB5
 5312 0540 19       		.uleb128 0x19
 5313 0541 2E080000 		.4byte	.LASF89
 5314 0545 01       		.byte	0x1
 5315 0546 A801     		.2byte	0x1a8
 5316 0548 D8000000 		.4byte	0xd8
 5317 054c 02       		.uleb128 0x2
 5318 054d 91       		.byte	0x91
 5319 054e 68       		.sleb128 -24
 5320 054f 00       		.byte	0
 5321 0550 00       		.byte	0
 5322 0551 1C       		.uleb128 0x1c
 5323 0552 5E020000 		.4byte	.LASF90
 5324 0556 01       		.byte	0x1
 5325 0557 B201     		.2byte	0x1b2
 5326 0559 00000000 		.4byte	.LFB88
 5327 055d AC000000 		.4byte	.LFE88-.LFB88
 5328 0561 01       		.uleb128 0x1
 5329 0562 9C       		.byte	0x9c
 5330 0563 1B       		.uleb128 0x1b
 5331 0564 45070000 		.4byte	.LASF91
 5332 0568 01       		.byte	0x1
 5333 0569 D501     		.2byte	0x1d5
 5334 056b 00000000 		.4byte	.LFB89
 5335 056f 20000000 		.4byte	.LFE89-.LFB89
 5336 0573 01       		.uleb128 0x1
 5337 0574 9C       		.byte	0x9c
 5338 0575 1C       		.uleb128 0x1c
 5339 0576 D5020000 		.4byte	.LASF92
 5340 057a 01       		.byte	0x1
 5341 057b DC01     		.2byte	0x1dc
 5342 057d 00000000 		.4byte	.LFB90
 5343 0581 28000000 		.4byte	.LFE90-.LFB90
 5344 0585 01       		.uleb128 0x1
 5345 0586 9C       		.byte	0x9c
 5346 0587 1C       		.uleb128 0x1c
 5347 0588 B4000000 		.4byte	.LASF93
 5348 058c 01       		.byte	0x1
 5349 058d E501     		.2byte	0x1e5
 5350 058f 00000000 		.4byte	.LFB91
 5351 0593 0A000000 		.4byte	.LFE91-.LFB91
 5352 0597 01       		.uleb128 0x1
 5353 0598 9C       		.byte	0x9c
 5354 0599 16       		.uleb128 0x16
 5355 059a 6D020000 		.4byte	.LASF94
 5356 059e 01       		.byte	0x1
 5357 059f EB01     		.2byte	0x1eb
 5358 05a1 00000000 		.4byte	.LFB92
 5359 05a5 40000000 		.4byte	.LFE92-.LFB92
 5360 05a9 01       		.uleb128 0x1
 5361 05aa 9C       		.byte	0x9c
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 113


 5362 05ab 16       		.uleb128 0x16
 5363 05ac 01020000 		.4byte	.LASF95
 5364 05b0 01       		.byte	0x1
 5365 05b1 FA01     		.2byte	0x1fa
 5366 05b3 00000000 		.4byte	.LFB93
 5367 05b7 40000000 		.4byte	.LFE93-.LFB93
 5368 05bb 01       		.uleb128 0x1
 5369 05bc 9C       		.byte	0x9c
 5370 05bd 1E       		.uleb128 0x1e
 5371 05be 4A000000 		.4byte	.LASF96
 5372 05c2 01       		.byte	0x1
 5373 05c3 0A02     		.2byte	0x20a
 5374 05c5 00000000 		.4byte	.LFB94
 5375 05c9 30020000 		.4byte	.LFE94-.LFB94
 5376 05cd 01       		.uleb128 0x1
 5377 05ce 9C       		.byte	0x9c
 5378 05cf 2E060000 		.4byte	0x62e
 5379 05d3 19       		.uleb128 0x19
 5380 05d4 B5020000 		.4byte	.LASF97
 5381 05d8 01       		.byte	0x1
 5382 05d9 1802     		.2byte	0x218
 5383 05db C5000000 		.4byte	0xc5
 5384 05df 02       		.uleb128 0x2
 5385 05e0 91       		.byte	0x91
 5386 05e1 5E       		.sleb128 -34
 5387 05e2 19       		.uleb128 0x19
 5388 05e3 EC040000 		.4byte	.LASF98
 5389 05e7 01       		.byte	0x1
 5390 05e8 1902     		.2byte	0x219
 5391 05ea C5000000 		.4byte	0xc5
 5392 05ee 02       		.uleb128 0x2
 5393 05ef 91       		.byte	0x91
 5394 05f0 5C       		.sleb128 -36
 5395 05f1 19       		.uleb128 0x19
 5396 05f2 42030000 		.4byte	.LASF99
 5397 05f6 01       		.byte	0x1
 5398 05f7 1A02     		.2byte	0x21a
 5399 05f9 D8000000 		.4byte	0xd8
 5400 05fd 02       		.uleb128 0x2
 5401 05fe 91       		.byte	0x91
 5402 05ff 68       		.sleb128 -24
 5403 0600 19       		.uleb128 0x19
 5404 0601 81080000 		.4byte	.LASF100
 5405 0605 01       		.byte	0x1
 5406 0606 1B02     		.2byte	0x21b
 5407 0608 D8000000 		.4byte	0xd8
 5408 060c 02       		.uleb128 0x2
 5409 060d 91       		.byte	0x91
 5410 060e 60       		.sleb128 -32
 5411 060f 19       		.uleb128 0x19
 5412 0610 CC030000 		.4byte	.LASF101
 5413 0614 01       		.byte	0x1
 5414 0615 2402     		.2byte	0x224
 5415 0617 68000000 		.4byte	0x68
 5416 061b 02       		.uleb128 0x2
 5417 061c 91       		.byte	0x91
 5418 061d 58       		.sleb128 -40
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 114


 5419 061e 19       		.uleb128 0x19
 5420 061f 24080000 		.4byte	.LASF102
 5421 0623 01       		.byte	0x1
 5422 0624 2502     		.2byte	0x225
 5423 0626 68000000 		.4byte	0x68
 5424 062a 02       		.uleb128 0x2
 5425 062b 91       		.byte	0x91
 5426 062c 54       		.sleb128 -44
 5427 062d 00       		.byte	0
 5428 062e 1E       		.uleb128 0x1e
 5429 062f 43050000 		.4byte	.LASF103
 5430 0633 01       		.byte	0x1
 5431 0634 3302     		.2byte	0x233
 5432 0636 00000000 		.4byte	.LFB95
 5433 063a 50010000 		.4byte	.LFE95-.LFB95
 5434 063e 01       		.uleb128 0x1
 5435 063f 9C       		.byte	0x9c
 5436 0640 70060000 		.4byte	0x670
 5437 0644 1A       		.uleb128 0x1a
 5438 0645 6E6C00   		.ascii	"nl\000"
 5439 0648 01       		.byte	0x1
 5440 0649 3702     		.2byte	0x237
 5441 064b 95000000 		.4byte	0x95
 5442 064f 02       		.uleb128 0x2
 5443 0650 91       		.byte	0x91
 5444 0651 67       		.sleb128 -25
 5445 0652 1A       		.uleb128 0x1a
 5446 0653 6E7200   		.ascii	"nr\000"
 5447 0656 01       		.byte	0x1
 5448 0657 3802     		.2byte	0x238
 5449 0659 95000000 		.4byte	0x95
 5450 065d 02       		.uleb128 0x2
 5451 065e 91       		.byte	0x91
 5452 065f 66       		.sleb128 -26
 5453 0660 1A       		.uleb128 0x1a
 5454 0661 6D696400 		.ascii	"mid\000"
 5455 0665 01       		.byte	0x1
 5456 0666 3902     		.2byte	0x239
 5457 0668 95000000 		.4byte	0x95
 5458 066c 02       		.uleb128 0x2
 5459 066d 91       		.byte	0x91
 5460 066e 65       		.sleb128 -27
 5461 066f 00       		.byte	0
 5462 0670 1E       		.uleb128 0x1e
 5463 0671 49010000 		.4byte	.LASF104
 5464 0675 01       		.byte	0x1
 5465 0676 5502     		.2byte	0x255
 5466 0678 00000000 		.4byte	.LFB96
 5467 067c D4000000 		.4byte	.LFE96-.LFB96
 5468 0680 01       		.uleb128 0x1
 5469 0681 9C       		.byte	0x9c
 5470 0682 B2060000 		.4byte	0x6b2
 5471 0686 1A       		.uleb128 0x1a
 5472 0687 6E6C00   		.ascii	"nl\000"
 5473 068a 01       		.byte	0x1
 5474 068b 5902     		.2byte	0x259
 5475 068d 95000000 		.4byte	0x95
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 115


 5476 0691 02       		.uleb128 0x2
 5477 0692 91       		.byte	0x91
 5478 0693 67       		.sleb128 -25
 5479 0694 1A       		.uleb128 0x1a
 5480 0695 6E7200   		.ascii	"nr\000"
 5481 0698 01       		.byte	0x1
 5482 0699 5A02     		.2byte	0x25a
 5483 069b 95000000 		.4byte	0x95
 5484 069f 02       		.uleb128 0x2
 5485 06a0 91       		.byte	0x91
 5486 06a1 66       		.sleb128 -26
 5487 06a2 1A       		.uleb128 0x1a
 5488 06a3 6D696400 		.ascii	"mid\000"
 5489 06a7 01       		.byte	0x1
 5490 06a8 5B02     		.2byte	0x25b
 5491 06aa 95000000 		.4byte	0x95
 5492 06ae 02       		.uleb128 0x2
 5493 06af 91       		.byte	0x91
 5494 06b0 65       		.sleb128 -27
 5495 06b1 00       		.byte	0
 5496 06b2 1E       		.uleb128 0x1e
 5497 06b3 2E010000 		.4byte	.LASF105
 5498 06b7 01       		.byte	0x1
 5499 06b8 7C02     		.2byte	0x27c
 5500 06ba 00000000 		.4byte	.LFB97
 5501 06be B0010000 		.4byte	.LFE97-.LFB97
 5502 06c2 01       		.uleb128 0x1
 5503 06c3 9C       		.byte	0x9c
 5504 06c4 10070000 		.4byte	0x710
 5505 06c8 1A       		.uleb128 0x1a
 5506 06c9 6E6C00   		.ascii	"nl\000"
 5507 06cc 01       		.byte	0x1
 5508 06cd 8002     		.2byte	0x280
 5509 06cf 95000000 		.4byte	0x95
 5510 06d3 02       		.uleb128 0x2
 5511 06d4 91       		.byte	0x91
 5512 06d5 67       		.sleb128 -25
 5513 06d6 1A       		.uleb128 0x1a
 5514 06d7 666C00   		.ascii	"fl\000"
 5515 06da 01       		.byte	0x1
 5516 06db 8102     		.2byte	0x281
 5517 06dd 95000000 		.4byte	0x95
 5518 06e1 02       		.uleb128 0x2
 5519 06e2 91       		.byte	0x91
 5520 06e3 66       		.sleb128 -26
 5521 06e4 1A       		.uleb128 0x1a
 5522 06e5 6E7200   		.ascii	"nr\000"
 5523 06e8 01       		.byte	0x1
 5524 06e9 8202     		.2byte	0x282
 5525 06eb 95000000 		.4byte	0x95
 5526 06ef 02       		.uleb128 0x2
 5527 06f0 91       		.byte	0x91
 5528 06f1 65       		.sleb128 -27
 5529 06f2 1A       		.uleb128 0x1a
 5530 06f3 667200   		.ascii	"fr\000"
 5531 06f6 01       		.byte	0x1
 5532 06f7 8302     		.2byte	0x283
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 116


 5533 06f9 95000000 		.4byte	0x95
 5534 06fd 02       		.uleb128 0x2
 5535 06fe 91       		.byte	0x91
 5536 06ff 64       		.sleb128 -28
 5537 0700 1A       		.uleb128 0x1a
 5538 0701 6D696400 		.ascii	"mid\000"
 5539 0705 01       		.byte	0x1
 5540 0706 8402     		.2byte	0x284
 5541 0708 95000000 		.4byte	0x95
 5542 070c 02       		.uleb128 0x2
 5543 070d 91       		.byte	0x91
 5544 070e 63       		.sleb128 -29
 5545 070f 00       		.byte	0
 5546 0710 1E       		.uleb128 0x1e
 5547 0711 38030000 		.4byte	.LASF106
 5548 0715 01       		.byte	0x1
 5549 0716 AD02     		.2byte	0x2ad
 5550 0718 00000000 		.4byte	.LFB98
 5551 071c C0000000 		.4byte	.LFE98-.LFB98
 5552 0720 01       		.uleb128 0x1
 5553 0721 9C       		.byte	0x9c
 5554 0722 5E070000 		.4byte	0x75e
 5555 0726 0C       		.uleb128 0xc
 5556 0727 0E000000 		.4byte	.LBB6
 5557 072b 8E000000 		.4byte	.LBE6-.LBB6
 5558 072f 19       		.uleb128 0x19
 5559 0730 A7020000 		.4byte	.LASF107
 5560 0734 01       		.byte	0x1
 5561 0735 B602     		.2byte	0x2b6
 5562 0737 D1000000 		.4byte	0xd1
 5563 073b 02       		.uleb128 0x2
 5564 073c 91       		.byte	0x91
 5565 073d 74       		.sleb128 -12
 5566 073e 19       		.uleb128 0x19
 5567 073f 2A050000 		.4byte	.LASF108
 5568 0743 01       		.byte	0x1
 5569 0744 B702     		.2byte	0x2b7
 5570 0746 C5000000 		.4byte	0xc5
 5571 074a 02       		.uleb128 0x2
 5572 074b 91       		.byte	0x91
 5573 074c 72       		.sleb128 -14
 5574 074d 19       		.uleb128 0x19
 5575 074e FB020000 		.4byte	.LASF109
 5576 0752 01       		.byte	0x1
 5577 0753 BC02     		.2byte	0x2bc
 5578 0755 F9020000 		.4byte	0x2f9
 5579 0759 02       		.uleb128 0x2
 5580 075a 91       		.byte	0x91
 5581 075b 60       		.sleb128 -32
 5582 075c 00       		.byte	0
 5583 075d 00       		.byte	0
 5584 075e 1E       		.uleb128 0x1e
 5585 075f 6A080000 		.4byte	.LASF110
 5586 0763 01       		.byte	0x1
 5587 0764 C302     		.2byte	0x2c3
 5588 0766 00000000 		.4byte	.LFB99
 5589 076a B8000000 		.4byte	.LFE99-.LFB99
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 117


 5590 076e 01       		.uleb128 0x1
 5591 076f 9C       		.byte	0x9c
 5592 0770 8E070000 		.4byte	0x78e
 5593 0774 0C       		.uleb128 0xc
 5594 0775 0E000000 		.4byte	.LBB7
 5595 0779 86000000 		.4byte	.LBE7-.LBB7
 5596 077d 19       		.uleb128 0x19
 5597 077e 31060000 		.4byte	.LASF111
 5598 0782 01       		.byte	0x1
 5599 0783 C702     		.2byte	0x2c7
 5600 0785 F9020000 		.4byte	0x2f9
 5601 0789 02       		.uleb128 0x2
 5602 078a 91       		.byte	0x91
 5603 078b 68       		.sleb128 -24
 5604 078c 00       		.byte	0
 5605 078d 00       		.byte	0
 5606 078e 18       		.uleb128 0x18
 5607 078f A4060000 		.4byte	.LASF112
 5608 0793 01       		.byte	0x1
 5609 0794 D802     		.2byte	0x2d8
 5610 0796 00000000 		.4byte	.LFB100
 5611 079a 4A000000 		.4byte	.LFE100-.LFB100
 5612 079e 01       		.uleb128 0x1
 5613 079f 9C       		.byte	0x9c
 5614 07a0 B4070000 		.4byte	0x7b4
 5615 07a4 1F       		.uleb128 0x1f
 5616 07a5 F0020000 		.4byte	.LASF113
 5617 07a9 01       		.byte	0x1
 5618 07aa D802     		.2byte	0x2d8
 5619 07ac B4070000 		.4byte	0x7b4
 5620 07b0 02       		.uleb128 0x2
 5621 07b1 91       		.byte	0x91
 5622 07b2 6C       		.sleb128 -20
 5623 07b3 00       		.byte	0
 5624 07b4 05       		.uleb128 0x5
 5625 07b5 04       		.byte	0x4
 5626 07b6 95000000 		.4byte	0x95
 5627 07ba 20       		.uleb128 0x20
 5628 07bb 16080000 		.4byte	.LASF114
 5629 07bf 01       		.byte	0x1
 5630 07c0 E102     		.2byte	0x2e1
 5631 07c2 68000000 		.4byte	0x68
 5632 07c6 00000000 		.4byte	.LFB101
 5633 07ca A0020000 		.4byte	.LFE101-.LFB101
 5634 07ce 01       		.uleb128 0x1
 5635 07cf 9C       		.byte	0x9c
 5636 07d0 07080000 		.4byte	0x807
 5637 07d4 0C       		.uleb128 0xc
 5638 07d5 5C000000 		.4byte	.LBB8
 5639 07d9 0A020000 		.4byte	.LBE8-.LBB8
 5640 07dd 19       		.uleb128 0x19
 5641 07de 51020000 		.4byte	.LASF115
 5642 07e2 01       		.byte	0x1
 5643 07e3 2603     		.2byte	0x326
 5644 07e5 07080000 		.4byte	0x807
 5645 07e9 02       		.uleb128 0x2
 5646 07ea 91       		.byte	0x91
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 118


 5647 07eb 70       		.sleb128 -16
 5648 07ec 0C       		.uleb128 0xc
 5649 07ed 1E010000 		.4byte	.LBB9
 5650 07f1 E4000000 		.4byte	.LBE9-.LBB9
 5651 07f5 19       		.uleb128 0x19
 5652 07f6 26040000 		.4byte	.LASF116
 5653 07fa 01       		.byte	0x1
 5654 07fb 4F03     		.2byte	0x34f
 5655 07fd 83000000 		.4byte	0x83
 5656 0801 02       		.uleb128 0x2
 5657 0802 91       		.byte	0x91
 5658 0803 77       		.sleb128 -9
 5659 0804 00       		.byte	0
 5660 0805 00       		.byte	0
 5661 0806 00       		.byte	0
 5662 0807 0E       		.uleb128 0xe
 5663 0808 95000000 		.4byte	0x95
 5664 080c 17080000 		.4byte	0x817
 5665 0810 0F       		.uleb128 0xf
 5666 0811 76000000 		.4byte	0x76
 5667 0815 04       		.byte	0x4
 5668 0816 00       		.byte	0
 5669 0817 18       		.uleb128 0x18
 5670 0818 7D060000 		.4byte	.LASF117
 5671 081c 01       		.byte	0x1
 5672 081d 9E03     		.2byte	0x39e
 5673 081f 00000000 		.4byte	.LFB102
 5674 0823 68000000 		.4byte	.LFE102-.LFB102
 5675 0827 01       		.uleb128 0x1
 5676 0828 9C       		.byte	0x9c
 5677 0829 54080000 		.4byte	0x854
 5678 082d 21       		.uleb128 0x21
 5679 082e 7300     		.ascii	"s\000"
 5680 0830 01       		.byte	0x1
 5681 0831 9E03     		.2byte	0x39e
 5682 0833 7D000000 		.4byte	0x7d
 5683 0837 02       		.uleb128 0x2
 5684 0838 91       		.byte	0x91
 5685 0839 6C       		.sleb128 -20
 5686 083a 0C       		.uleb128 0xc
 5687 083b 10000000 		.4byte	.LBB10
 5688 083f 48000000 		.4byte	.LBE10-.LBB10
 5689 0843 1A       		.uleb128 0x1a
 5690 0844 636E7400 		.ascii	"cnt\000"
 5691 0848 01       		.byte	0x1
 5692 0849 A503     		.2byte	0x3a5
 5693 084b AD000000 		.4byte	0xad
 5694 084f 02       		.uleb128 0x2
 5695 0850 91       		.byte	0x91
 5696 0851 74       		.sleb128 -12
 5697 0852 00       		.byte	0
 5698 0853 00       		.byte	0
 5699 0854 18       		.uleb128 0x18
 5700 0855 D0070000 		.4byte	.LASF118
 5701 0859 01       		.byte	0x1
 5702 085a B403     		.2byte	0x3b4
 5703 085c 00000000 		.4byte	.LFB103
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 119


 5704 0860 50000000 		.4byte	.LFE103-.LFB103
 5705 0864 01       		.uleb128 0x1
 5706 0865 9C       		.byte	0x9c
 5707 0866 91080000 		.4byte	0x891
 5708 086a 21       		.uleb128 0x21
 5709 086b 6300     		.ascii	"c\000"
 5710 086d 01       		.byte	0x1
 5711 086e B403     		.2byte	0x3b4
 5712 0870 83000000 		.4byte	0x83
 5713 0874 02       		.uleb128 0x2
 5714 0875 91       		.byte	0x91
 5715 0876 6F       		.sleb128 -17
 5716 0877 0C       		.uleb128 0xc
 5717 0878 12000000 		.4byte	.LBB11
 5718 087c 2E000000 		.4byte	.LBE11-.LBB11
 5719 0880 1A       		.uleb128 0x1a
 5720 0881 636E7400 		.ascii	"cnt\000"
 5721 0885 01       		.byte	0x1
 5722 0886 B803     		.2byte	0x3b8
 5723 0888 AD000000 		.4byte	0xad
 5724 088c 02       		.uleb128 0x2
 5725 088d 91       		.byte	0x91
 5726 088e 74       		.sleb128 -12
 5727 088f 00       		.byte	0
 5728 0890 00       		.byte	0
 5729 0891 1E       		.uleb128 0x1e
 5730 0892 06030000 		.4byte	.LASF119
 5731 0896 01       		.byte	0x1
 5732 0897 C503     		.2byte	0x3c5
 5733 0899 00000000 		.4byte	.LFB104
 5734 089d 3A000000 		.4byte	.LFE104-.LFB104
 5735 08a1 01       		.uleb128 0x1
 5736 08a2 9C       		.byte	0x9c
 5737 08a3 B5080000 		.4byte	0x8b5
 5738 08a7 1A       		.uleb128 0x1a
 5739 08a8 6300     		.ascii	"c\000"
 5740 08aa 01       		.byte	0x1
 5741 08ab C703     		.2byte	0x3c7
 5742 08ad 95000000 		.4byte	0x95
 5743 08b1 02       		.uleb128 0x2
 5744 08b2 91       		.byte	0x91
 5745 08b3 77       		.sleb128 -9
 5746 08b4 00       		.byte	0
 5747 08b5 22       		.uleb128 0x22
 5748 08b6 24060000 		.4byte	.LASF120
 5749 08ba 06       		.byte	0x6
 5750 08bb 9606     		.2byte	0x696
 5751 08bd C1080000 		.4byte	0x8c1
 5752 08c1 23       		.uleb128 0x23
 5753 08c2 8A000000 		.4byte	0x8a
 5754 08c6 24       		.uleb128 0x24
 5755 08c7 747300   		.ascii	"ts\000"
 5756 08ca 05       		.byte	0x5
 5757 08cb 10       		.byte	0x10
 5758 08cc 95000000 		.4byte	0x95
 5759 08d0 05       		.uleb128 0x5
 5760 08d1 03       		.byte	0x3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 120


 5761 08d2 00000000 		.4byte	ts
 5762 08d6 25       		.uleb128 0x25
 5763 08d7 52070000 		.4byte	.LASF121
 5764 08db 05       		.byte	0x5
 5765 08dc 11       		.byte	0x11
 5766 08dd A1000000 		.4byte	0xa1
 5767 08e1 05       		.uleb128 0x5
 5768 08e2 03       		.byte	0x3
 5769 08e3 00000000 		.4byte	ts_enc
 5770 08e7 25       		.uleb128 0x25
 5771 08e8 3D060000 		.4byte	.LASF122
 5772 08ec 05       		.byte	0x5
 5773 08ed 12       		.byte	0x12
 5774 08ee A1000000 		.4byte	0xa1
 5775 08f2 05       		.uleb128 0x5
 5776 08f3 03       		.byte	0x3
 5777 08f4 00000000 		.4byte	ts_update
 5778 08f8 25       		.uleb128 0x25
 5779 08f9 F7040000 		.4byte	.LASF123
 5780 08fd 05       		.byte	0x5
 5781 08fe 13       		.byte	0x13
 5782 08ff A1000000 		.4byte	0xa1
 5783 0903 05       		.uleb128 0x5
 5784 0904 03       		.byte	0x3
 5785 0905 00000000 		.4byte	ts_speed
 5786 0909 25       		.uleb128 0x25
 5787 090a 2D030000 		.4byte	.LASF124
 5788 090e 05       		.byte	0x5
 5789 090f 14       		.byte	0x14
 5790 0910 A1000000 		.4byte	0xa1
 5791 0914 05       		.uleb128 0x5
 5792 0915 03       		.byte	0x3
 5793 0916 00000000 		.4byte	ts_display
 5794 091a 25       		.uleb128 0x25
 5795 091b BF020000 		.4byte	.LASF125
 5796 091f 05       		.byte	0x5
 5797 0920 16       		.byte	0x16
 5798 0921 95000000 		.4byte	0x95
 5799 0925 05       		.uleb128 0x5
 5800 0926 03       		.byte	0x3
 5801 0927 00000000 		.4byte	flag_ts_enc
 5802 092b 25       		.uleb128 0x25
 5803 092c 98020000 		.4byte	.LASF126
 5804 0930 05       		.byte	0x5
 5805 0931 17       		.byte	0x17
 5806 0932 95000000 		.4byte	0x95
 5807 0936 05       		.uleb128 0x5
 5808 0937 03       		.byte	0x3
 5809 0938 00000000 		.4byte	flag_ts_update
 5810 093c 25       		.uleb128 0x25
 5811 093d 9E050000 		.4byte	.LASF127
 5812 0941 05       		.byte	0x5
 5813 0942 18       		.byte	0x18
 5814 0943 95000000 		.4byte	0x95
 5815 0947 05       		.uleb128 0x5
 5816 0948 03       		.byte	0x3
 5817 0949 00000000 		.4byte	flag_ts_speed
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 121


 5818 094d 25       		.uleb128 0x25
 5819 094e 63070000 		.4byte	.LASF128
 5820 0952 05       		.byte	0x5
 5821 0953 19       		.byte	0x19
 5822 0954 95000000 		.4byte	0x95
 5823 0958 05       		.uleb128 0x5
 5824 0959 03       		.byte	0x3
 5825 095a 00000000 		.4byte	flag_ts_display
 5826 095e 25       		.uleb128 0x25
 5827 095f C9050000 		.4byte	.LASF129
 5828 0963 05       		.byte	0x5
 5829 0964 1C       		.byte	0x1c
 5830 0965 95000000 		.4byte	0x95
 5831 0969 05       		.uleb128 0x5
 5832 096a 03       		.byte	0x3
 5833 096b 00000000 		.4byte	flag_rx
 5834 096f 25       		.uleb128 0x25
 5835 0970 45020000 		.4byte	.LASF130
 5836 0974 05       		.byte	0x5
 5837 0975 1D       		.byte	0x1d
 5838 0976 95000000 		.4byte	0x95
 5839 097a 05       		.uleb128 0x5
 5840 097b 03       		.byte	0x3
 5841 097c 00000000 		.4byte	flag_packet
 5842 0980 25       		.uleb128 0x25
 5843 0981 8E080000 		.4byte	.LASF131
 5844 0985 05       		.byte	0x5
 5845 0986 1E       		.byte	0x1e
 5846 0987 95000000 		.4byte	0x95
 5847 098b 05       		.uleb128 0x5
 5848 098c 03       		.byte	0x3
 5849 098d 00000000 		.4byte	flag_KB_string
 5850 0991 25       		.uleb128 0x25
 5851 0992 AC050000 		.4byte	.LASF132
 5852 0996 05       		.byte	0x5
 5853 0997 20       		.byte	0x20
 5854 0998 95000000 		.4byte	0x95
 5855 099c 05       		.uleb128 0x5
 5856 099d 03       		.byte	0x3
 5857 099e 00000000 		.4byte	dataready_flag
 5858 09a2 25       		.uleb128 0x25
 5859 09a3 67010000 		.4byte	.LASF133
 5860 09a7 05       		.byte	0x5
 5861 09a8 22       		.byte	0x22
 5862 09a9 95000000 		.4byte	0x95
 5863 09ad 05       		.uleb128 0x5
 5864 09ae 03       		.byte	0x3
 5865 09af 00000000 		.4byte	flag_rf_transmission_active
 5866 09b3 25       		.uleb128 0x25
 5867 09b4 83010000 		.4byte	.LASF134
 5868 09b8 05       		.byte	0x5
 5869 09b9 23       		.byte	0x23
 5870 09ba 95000000 		.4byte	0x95
 5871 09be 05       		.uleb128 0x5
 5872 09bf 03       		.byte	0x3
 5873 09c0 00000000 		.4byte	flag_print_rf
 5874 09c4 25       		.uleb128 0x25
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 122


 5875 09c5 5A050000 		.4byte	.LASF135
 5876 09c9 05       		.byte	0x5
 5877 09ca 25       		.byte	0x25
 5878 09cb 95000000 		.4byte	0x95
 5879 09cf 05       		.uleb128 0x5
 5880 09d0 03       		.byte	0x3
 5881 09d1 00000000 		.4byte	flag_receive_ADC
 5882 09d5 25       		.uleb128 0x25
 5883 09d6 DB050000 		.4byte	.LASF136
 5884 09da 05       		.byte	0x5
 5885 09db 26       		.byte	0x26
 5886 09dc C5000000 		.4byte	0xc5
 5887 09e0 05       		.uleb128 0x5
 5888 09e1 03       		.byte	0x3
 5889 09e2 00000000 		.4byte	adc_result
 5890 09e6 25       		.uleb128 0x25
 5891 09e7 00000000 		.4byte	.LASF137
 5892 09eb 05       		.byte	0x5
 5893 09ec 28       		.byte	0x28
 5894 09ed 95000000 		.4byte	0x95
 5895 09f1 05       		.uleb128 0x5
 5896 09f2 03       		.byte	0x3
 5897 09f3 00000000 		.4byte	direction
 5898 09f7 25       		.uleb128 0x25
 5899 09f8 E0040000 		.4byte	.LASF138
 5900 09fc 05       		.byte	0x5
 5901 09fd 2B       		.byte	0x2b
 5902 09fe 95000000 		.4byte	0x95
 5903 0a02 05       		.uleb128 0x5
 5904 0a03 03       		.byte	0x3
 5905 0a04 00000000 		.4byte	BIN_ENABLED
 5906 0a08 25       		.uleb128 0x25
 5907 0a09 D6030000 		.4byte	.LASF139
 5908 0a0d 05       		.byte	0x5
 5909 0a0e 2D       		.byte	0x2d
 5910 0a0f 95000000 		.4byte	0x95
 5911 0a13 05       		.uleb128 0x5
 5912 0a14 03       		.byte	0x3
 5913 0a15 00000000 		.4byte	BT_ENABLED
 5914 0a19 25       		.uleb128 0x25
 5915 0a1a F0050000 		.4byte	.LASF140
 5916 0a1e 05       		.byte	0x5
 5917 0a1f 32       		.byte	0x32
 5918 0a20 95000000 		.4byte	0x95
 5919 0a24 05       		.uleb128 0x5
 5920 0a25 03       		.byte	0x3
 5921 0a26 00000000 		.4byte	flag_calc_wheelspeed
 5922 0a2a 25       		.uleb128 0x25
 5923 0a2b 16010000 		.4byte	.LASF141
 5924 0a2f 05       		.byte	0x5
 5925 0a30 33       		.byte	0x33
 5926 0a31 C5000000 		.4byte	0xc5
 5927 0a35 05       		.uleb128 0x5
 5928 0a36 03       		.byte	0x3
 5929 0a37 00000000 		.4byte	quad_count1
 5930 0a3b 25       		.uleb128 0x25
 5931 0a3c 22010000 		.4byte	.LASF142
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 123


 5932 0a40 05       		.byte	0x5
 5933 0a41 34       		.byte	0x34
 5934 0a42 C5000000 		.4byte	0xc5
 5935 0a46 05       		.uleb128 0x5
 5936 0a47 03       		.byte	0x3
 5937 0a48 00000000 		.4byte	quad_count2
 5938 0a4c 25       		.uleb128 0x25
 5939 0a4d A2070000 		.4byte	.LASF143
 5940 0a51 05       		.byte	0x5
 5941 0a52 35       		.byte	0x35
 5942 0a53 C5000000 		.4byte	0xc5
 5943 0a57 05       		.uleb128 0x5
 5944 0a58 03       		.byte	0x3
 5945 0a59 00000000 		.4byte	last_quad_count1
 5946 0a5d 25       		.uleb128 0x25
 5947 0a5e B3070000 		.4byte	.LASF144
 5948 0a62 05       		.byte	0x5
 5949 0a63 36       		.byte	0x36
 5950 0a64 C5000000 		.4byte	0xc5
 5951 0a68 05       		.uleb128 0x5
 5952 0a69 03       		.byte	0x3
 5953 0a6a 00000000 		.4byte	last_quad_count2
 5954 0a6e 25       		.uleb128 0x25
 5955 0a6f 2C000000 		.4byte	.LASF145
 5956 0a73 05       		.byte	0x5
 5957 0a74 37       		.byte	0x37
 5958 0a75 C5000000 		.4byte	0xc5
 5959 0a79 05       		.uleb128 0x5
 5960 0a7a 03       		.byte	0x3
 5961 0a7b 00000000 		.4byte	quad_diff1
 5962 0a7f 25       		.uleb128 0x25
 5963 0a80 37000000 		.4byte	.LASF146
 5964 0a84 05       		.byte	0x5
 5965 0a85 38       		.byte	0x38
 5966 0a86 C5000000 		.4byte	0xc5
 5967 0a8a 05       		.uleb128 0x5
 5968 0a8b 03       		.byte	0x3
 5969 0a8c 00000000 		.4byte	quad_diff2
 5970 0a90 25       		.uleb128 0x25
 5971 0a91 68000000 		.4byte	.LASF147
 5972 0a95 05       		.byte	0x5
 5973 0a96 3B       		.byte	0x3b
 5974 0a97 C5000000 		.4byte	0xc5
 5975 0a9b 05       		.uleb128 0x5
 5976 0a9c 03       		.byte	0x3
 5977 0a9d 00000000 		.4byte	start_turn_count
 5978 0aa1 25       		.uleb128 0x25
 5979 0aa2 8E050000 		.4byte	.LASF148
 5980 0aa6 05       		.byte	0x5
 5981 0aa7 3E       		.byte	0x3e
 5982 0aa8 C5000000 		.4byte	0xc5
 5983 0aac 05       		.uleb128 0x5
 5984 0aad 03       		.byte	0x3
 5985 0aae 00000000 		.4byte	left_duty_cycle
 5986 0ab2 25       		.uleb128 0x25
 5987 0ab3 40080000 		.4byte	.LASF149
 5988 0ab7 05       		.byte	0x5
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 124


 5989 0ab8 3F       		.byte	0x3f
 5990 0ab9 C5000000 		.4byte	0xc5
 5991 0abd 05       		.uleb128 0x5
 5992 0abe 03       		.byte	0x3
 5993 0abf 00000000 		.4byte	right_duty_cycle
 5994 0ac3 25       		.uleb128 0x25
 5995 0ac4 50060000 		.4byte	.LASF150
 5996 0ac8 05       		.byte	0x5
 5997 0ac9 42       		.byte	0x42
 5998 0aca C5000000 		.4byte	0xc5
 5999 0ace 05       		.uleb128 0x5
 6000 0acf 03       		.byte	0x3
 6001 0ad0 00000000 		.4byte	leftSpeedLimit
 6002 0ad4 25       		.uleb128 0x25
 6003 0ad5 5C030000 		.4byte	.LASF151
 6004 0ad9 05       		.byte	0x5
 6005 0ada 43       		.byte	0x43
 6006 0adb C5000000 		.4byte	0xc5
 6007 0adf 05       		.uleb128 0x5
 6008 0ae0 03       		.byte	0x3
 6009 0ae1 00000000 		.4byte	rightSpeedLimit
 6010 0ae5 25       		.uleb128 0x25
 6011 0ae6 C1060000 		.4byte	.LASF152
 6012 0aea 05       		.byte	0x5
 6013 0aeb 46       		.byte	0x46
 6014 0aec C5000000 		.4byte	0xc5
 6015 0af0 05       		.uleb128 0x5
 6016 0af1 03       		.byte	0x3
 6017 0af2 00000000 		.4byte	target_distance_cm
 6018 0af6 25       		.uleb128 0x25
 6019 0af7 72060000 		.4byte	.LASF153
 6020 0afb 05       		.byte	0x5
 6021 0afc 48       		.byte	0x48
 6022 0afd C5000000 		.4byte	0xc5
 6023 0b01 05       		.uleb128 0x5
 6024 0b02 03       		.byte	0x3
 6025 0b03 00000000 		.4byte	accum_dist
 6026 0b07 25       		.uleb128 0x25
 6027 0b08 C1000000 		.4byte	.LASF154
 6028 0b0c 05       		.byte	0x5
 6029 0b0d 49       		.byte	0x49
 6030 0b0e C5000000 		.4byte	0xc5
 6031 0b12 05       		.uleb128 0x5
 6032 0b13 03       		.byte	0x3
 6033 0b14 00000000 		.4byte	target_distance_quad
 6034 0b18 25       		.uleb128 0x25
 6035 0b19 B5060000 		.4byte	.LASF155
 6036 0b1d 05       		.byte	0x5
 6037 0b1e 4A       		.byte	0x4a
 6038 0b1f D1000000 		.4byte	0xd1
 6039 0b23 05       		.uleb128 0x5
 6040 0b24 03       		.byte	0x3
 6041 0b25 00000000 		.4byte	quad_per_cm
 6042 0b29 25       		.uleb128 0x25
 6043 0b2a E7030000 		.4byte	.LASF156
 6044 0b2e 05       		.byte	0x5
 6045 0b2f 4D       		.byte	0x4d
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 125


 6046 0b30 95000000 		.4byte	0x95
 6047 0b34 05       		.uleb128 0x5
 6048 0b35 03       		.byte	0x3
 6049 0b36 00000000 		.4byte	initial_pos_valid
 6050 0b3a 25       		.uleb128 0x25
 6051 0b3b DC080000 		.4byte	.LASF157
 6052 0b3f 05       		.byte	0x5
 6053 0b40 4E       		.byte	0x4e
 6054 0b41 C5000000 		.4byte	0xc5
 6055 0b45 05       		.uleb128 0x5
 6056 0b46 03       		.byte	0x3
 6057 0b47 00000000 		.4byte	initial_x_pos
 6058 0b4b 25       		.uleb128 0x25
 6059 0b4c BB050000 		.4byte	.LASF158
 6060 0b50 05       		.byte	0x5
 6061 0b51 4F       		.byte	0x4f
 6062 0b52 C5000000 		.4byte	0xc5
 6063 0b56 05       		.uleb128 0x5
 6064 0b57 03       		.byte	0x3
 6065 0b58 00000000 		.4byte	initial_y_pos
 6066 0b5c 25       		.uleb128 0x25
 6067 0b5d 59070000 		.4byte	.LASF159
 6068 0b61 05       		.byte	0x5
 6069 0b62 52       		.byte	0x52
 6070 0b63 95000000 		.4byte	0x95
 6071 0b67 05       		.uleb128 0x5
 6072 0b68 03       		.byte	0x3
 6073 0b69 00000000 		.4byte	brakeFlag
 6074 0b6d 25       		.uleb128 0x25
 6075 0b6e 85020000 		.4byte	.LASF160
 6076 0b72 05       		.byte	0x5
 6077 0b73 53       		.byte	0x53
 6078 0b74 95000000 		.4byte	0x95
 6079 0b78 05       		.uleb128 0x5
 6080 0b79 03       		.byte	0x3
 6081 0b7a 00000000 		.4byte	portOpen
 6082 0b7e 25       		.uleb128 0x25
 6083 0b7f 5C000000 		.4byte	.LASF161
 6084 0b83 05       		.byte	0x5
 6085 0b84 56       		.byte	0x56
 6086 0b85 C5000000 		.4byte	0xc5
 6087 0b89 05       		.uleb128 0x5
 6088 0b8a 03       		.byte	0x3
 6089 0b8b 00000000 		.4byte	prevVoltage
 6090 0b8f 25       		.uleb128 0x25
 6091 0b90 DF000000 		.4byte	.LASF162
 6092 0b94 05       		.byte	0x5
 6093 0b95 57       		.byte	0x57
 6094 0b96 C5000000 		.4byte	0xc5
 6095 0b9a 05       		.uleb128 0x5
 6096 0b9b 03       		.byte	0x3
 6097 0b9c 00000000 		.4byte	prevVoltage2
 6098 0ba0 0E       		.uleb128 0xe
 6099 0ba1 83000000 		.4byte	0x83
 6100 0ba5 B00B0000 		.4byte	0xbb0
 6101 0ba9 0F       		.uleb128 0xf
 6102 0baa 76000000 		.4byte	0x76
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 126


 6103 0bae 3F       		.byte	0x3f
 6104 0baf 00       		.byte	0
 6105 0bb0 25       		.uleb128 0x25
 6106 0bb1 94070000 		.4byte	.LASF163
 6107 0bb5 05       		.byte	0x5
 6108 0bb6 5D       		.byte	0x5d
 6109 0bb7 A00B0000 		.4byte	0xba0
 6110 0bbb 05       		.uleb128 0x5
 6111 0bbc 03       		.byte	0x3
 6112 0bbd 00000000 		.4byte	displaystring
 6113 0bc1 25       		.uleb128 0x25
 6114 0bc2 40070000 		.4byte	.LASF164
 6115 0bc6 05       		.byte	0x5
 6116 0bc7 5E       		.byte	0x5e
 6117 0bc8 A00B0000 		.4byte	0xba0
 6118 0bcc 05       		.uleb128 0x5
 6119 0bcd 03       		.byte	0x3
 6120 0bce 00000000 		.4byte	line
 6121 0bd2 25       		.uleb128 0x25
 6122 0bd3 2C070000 		.4byte	.LASF165
 6123 0bd7 05       		.byte	0x5
 6124 0bd8 5E       		.byte	0x5e
 6125 0bd9 A00B0000 		.4byte	0xba0
 6126 0bdd 05       		.uleb128 0x5
 6127 0bde 03       		.byte	0x3
 6128 0bdf 00000000 		.4byte	entry
 6129 0be3 0E       		.uleb128 0xe
 6130 0be4 95000000 		.4byte	0x95
 6131 0be8 F30B0000 		.4byte	0xbf3
 6132 0bec 0F       		.uleb128 0xf
 6133 0bed 76000000 		.4byte	0x76
 6134 0bf1 3F       		.byte	0x3f
 6135 0bf2 00       		.byte	0
 6136 0bf3 25       		.uleb128 0x25
 6137 0bf4 DD010000 		.4byte	.LASF166
 6138 0bf8 05       		.byte	0x5
 6139 0bf9 5F       		.byte	0x5f
 6140 0bfa E30B0000 		.4byte	0xbe3
 6141 0bfe 05       		.uleb128 0x5
 6142 0bff 03       		.byte	0x3
 6143 0c00 00000000 		.4byte	usbBuffer
 6144 0c04 25       		.uleb128 0x25
 6145 0c05 07040000 		.4byte	.LASF167
 6146 0c09 05       		.byte	0x5
 6147 0c0a 74       		.byte	0x74
 6148 0c0b 5A010000 		.4byte	0x15a
 6149 0c0f 05       		.uleb128 0x5
 6150 0c10 03       		.byte	0x3
 6151 0c11 00000000 		.4byte	buffer_state
 6152 0c15 25       		.uleb128 0x25
 6153 0c16 A1000000 		.4byte	.LASF168
 6154 0c1a 05       		.byte	0x5
 6155 0c1b 75       		.byte	0x75
 6156 0c1c 5A010000 		.4byte	0x15a
 6157 0c20 05       		.uleb128 0x5
 6158 0c21 03       		.byte	0x3
 6159 0c22 00000000 		.4byte	system_state
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 127


 6160 0c26 25       		.uleb128 0x25
 6161 0c27 DC020000 		.4byte	.LASF169
 6162 0c2b 05       		.byte	0x5
 6163 0c2c 77       		.byte	0x77
 6164 0c2d E6000000 		.4byte	0xe6
 6165 0c31 05       		.uleb128 0x5
 6166 0c32 03       		.byte	0x3
 6167 0c33 00000000 		.4byte	prev_movement_state
 6168 0c37 25       		.uleb128 0x25
 6169 0c38 91010000 		.4byte	.LASF170
 6170 0c3c 05       		.byte	0x5
 6171 0c3d 78       		.byte	0x78
 6172 0c3e E6000000 		.4byte	0xe6
 6173 0c42 05       		.uleb128 0x5
 6174 0c43 03       		.byte	0x3
 6175 0c44 00000000 		.4byte	movement_state
 6176 0c48 25       		.uleb128 0x25
 6177 0c49 86000000 		.4byte	.LASF171
 6178 0c4d 05       		.byte	0x5
 6179 0c4e 79       		.byte	0x79
 6180 0c4f 23010000 		.4byte	0x123
 6181 0c53 05       		.uleb128 0x5
 6182 0c54 03       		.byte	0x3
 6183 0c55 00000000 		.4byte	track_mode
 6184 0c59 25       		.uleb128 0x25
 6185 0c5a CB020000 		.4byte	.LASF172
 6186 0c5e 05       		.byte	0x5
 6187 0c5f 7B       		.byte	0x7b
 6188 0c60 95000000 		.4byte	0x95
 6189 0c64 05       		.uleb128 0x5
 6190 0c65 03       		.byte	0x3
 6191 0c66 00000000 		.4byte	byteCount
 6192 0c6a 0E       		.uleb128 0xe
 6193 0c6b 83000000 		.4byte	0x83
 6194 0c6f 7A0C0000 		.4byte	0xc7a
 6195 0c73 0F       		.uleb128 0xf
 6196 0c74 76000000 		.4byte	0x76
 6197 0c78 01       		.byte	0x1
 6198 0c79 00       		.byte	0
 6199 0c7a 25       		.uleb128 0x25
 6200 0c7b 03070000 		.4byte	.LASF173
 6201 0c7f 05       		.byte	0x5
 6202 0c80 7C       		.byte	0x7c
 6203 0c81 6A0C0000 		.4byte	0xc6a
 6204 0c85 05       		.uleb128 0x5
 6205 0c86 03       		.byte	0x3
 6206 0c87 00000000 		.4byte	packet
 6207 0c8b 25       		.uleb128 0x25
 6208 0c8c 54010000 		.4byte	.LASF174
 6209 0c90 05       		.byte	0x5
 6210 0c91 80       		.byte	0x80
 6211 0c92 D8000000 		.4byte	0xd8
 6212 0c96 05       		.uleb128 0x5
 6213 0c97 03       		.byte	0x3
 6214 0c98 00000000 		.4byte	speed
 6215 0c9c 25       		.uleb128 0x25
 6216 0c9d 77030000 		.4byte	.LASF175
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 128


 6217 0ca1 01       		.byte	0x1
 6218 0ca2 2B       		.byte	0x2b
 6219 0ca3 A1000000 		.4byte	0xa1
 6220 0ca7 05       		.uleb128 0x5
 6221 0ca8 03       		.byte	0x3
 6222 0ca9 00000000 		.4byte	instructionCount
 6223 0cad 25       		.uleb128 0x25
 6224 0cae EC000000 		.4byte	.LASF176
 6225 0cb2 01       		.byte	0x1
 6226 0cb3 2C       		.byte	0x2c
 6227 0cb4 95000000 		.4byte	0x95
 6228 0cb8 05       		.uleb128 0x5
 6229 0cb9 03       		.byte	0x3
 6230 0cba 00000000 		.4byte	sensorsDisabled
 6231 0cbe 0E       		.uleb128 0xe
 6232 0cbf 95000000 		.4byte	0x95
 6233 0cc3 D40C0000 		.4byte	0xcd4
 6234 0cc7 0F       		.uleb128 0xf
 6235 0cc8 76000000 		.4byte	0x76
 6236 0ccc 0E       		.byte	0xe
 6237 0ccd 0F       		.uleb128 0xf
 6238 0cce 76000000 		.4byte	0x76
 6239 0cd2 12       		.byte	0x12
 6240 0cd3 00       		.byte	0
 6241 0cd4 24       		.uleb128 0x24
 6242 0cd5 6D617000 		.ascii	"map\000"
 6243 0cd9 01       		.byte	0x1
 6244 0cda 35       		.byte	0x35
 6245 0cdb BE0C0000 		.4byte	0xcbe
 6246 0cdf 05       		.uleb128 0x5
 6247 0ce0 03       		.byte	0x3
 6248 0ce1 00000000 		.4byte	map
 6249 0ce5 0E       		.uleb128 0xe
 6250 0ce6 95000000 		.4byte	0x95
 6251 0cea FB0C0000 		.4byte	0xcfb
 6252 0cee 0F       		.uleb128 0xf
 6253 0cef 76000000 		.4byte	0x76
 6254 0cf3 05       		.byte	0x5
 6255 0cf4 0F       		.uleb128 0xf
 6256 0cf5 76000000 		.4byte	0x76
 6257 0cf9 01       		.byte	0x1
 6258 0cfa 00       		.byte	0
 6259 0cfb 25       		.uleb128 0x25
 6260 0cfc D6040000 		.4byte	.LASF177
 6261 0d00 01       		.byte	0x1
 6262 0d01 48       		.byte	0x48
 6263 0d02 E50C0000 		.4byte	0xce5
 6264 0d06 05       		.uleb128 0x5
 6265 0d07 03       		.byte	0x3
 6266 0d08 00000000 		.4byte	food_list
 6267 0d0c 0E       		.uleb128 0xe
 6268 0d0d 95000000 		.4byte	0x95
 6269 0d11 230D0000 		.4byte	0xd23
 6270 0d15 26       		.uleb128 0x26
 6271 0d16 76000000 		.4byte	0x76
 6272 0d1a 8F01     		.2byte	0x18f
 6273 0d1c 0F       		.uleb128 0xf
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 129


 6274 0d1d 76000000 		.4byte	0x76
 6275 0d21 02       		.byte	0x2
 6276 0d22 00       		.byte	0
 6277 0d23 25       		.uleb128 0x25
 6278 0d24 AF030000 		.4byte	.LASF178
 6279 0d28 01       		.byte	0x1
 6280 0d29 30       		.byte	0x30
 6281 0d2a 0C0D0000 		.4byte	0xd0c
 6282 0d2e 05       		.uleb128 0x5
 6283 0d2f 03       		.byte	0x3
 6284 0d30 00000000 		.4byte	path
 6285 0d34 0E       		.uleb128 0xe
 6286 0d35 95000000 		.4byte	0x95
 6287 0d39 440D0000 		.4byte	0xd44
 6288 0d3d 0F       		.uleb128 0xf
 6289 0d3e 76000000 		.4byte	0x76
 6290 0d42 01       		.byte	0x1
 6291 0d43 00       		.byte	0
 6292 0d44 25       		.uleb128 0x25
 6293 0d45 38050000 		.4byte	.LASF179
 6294 0d49 01       		.byte	0x1
 6295 0d4a 31       		.byte	0x31
 6296 0d4b 340D0000 		.4byte	0xd34
 6297 0d4f 05       		.uleb128 0x5
 6298 0d50 03       		.byte	0x3
 6299 0d51 00000000 		.4byte	start
 6300 0d55 25       		.uleb128 0x25
 6301 0d56 C4070000 		.4byte	.LASF180
 6302 0d5a 01       		.byte	0x1
 6303 0d5b 32       		.byte	0x32
 6304 0d5c 340D0000 		.4byte	0xd34
 6305 0d60 05       		.uleb128 0x5
 6306 0d61 03       		.byte	0x3
 6307 0d62 00000000 		.4byte	destination
 6308 0d66 25       		.uleb128 0x25
 6309 0d67 39010000 		.4byte	.LASF181
 6310 0d6b 01       		.byte	0x1
 6311 0d6c 2E       		.byte	0x2e
 6312 0d6d 95000000 		.4byte	0x95
 6313 0d71 05       		.uleb128 0x5
 6314 0d72 03       		.byte	0x3
 6315 0d73 00000000 		.4byte	robot_direction
 6316 0d77 25       		.uleb128 0x25
 6317 0d78 0A000000 		.4byte	.LASF182
 6318 0d7c 07       		.byte	0x7
 6319 0d7d 22       		.byte	0x22
 6320 0d7e 95000000 		.4byte	0x95
 6321 0d82 05       		.uleb128 0x5
 6322 0d83 03       		.byte	0x3
 6323 0d84 00000000 		.4byte	tracked_direction
 6324 0d88 25       		.uleb128 0x25
 6325 0d89 20070000 		.4byte	.LASF183
 6326 0d8d 01       		.byte	0x1
 6327 0d8e 49       		.byte	0x49
 6328 0d8f 95000000 		.4byte	0x95
 6329 0d93 05       		.uleb128 0x5
 6330 0d94 03       		.byte	0x3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 130


 6331 0d95 00000000 		.4byte	food_length
 6332 0d99 0E       		.uleb128 0xe
 6333 0d9a 83000000 		.4byte	0x83
 6334 0d9e AA0D0000 		.4byte	0xdaa
 6335 0da2 26       		.uleb128 0x26
 6336 0da3 76000000 		.4byte	0x76
 6337 0da7 8F01     		.2byte	0x18f
 6338 0da9 00       		.byte	0
 6339 0daa 25       		.uleb128 0x25
 6340 0dab 07050000 		.4byte	.LASF184
 6341 0daf 01       		.byte	0x1
 6342 0db0 2A       		.byte	0x2a
 6343 0db1 990D0000 		.4byte	0xd99
 6344 0db5 05       		.uleb128 0x5
 6345 0db6 03       		.byte	0x3
 6346 0db7 00000000 		.4byte	instructions
 6347 0dbb 00       		.byte	0
 6348              		.section	.debug_abbrev,"",%progbits
 6349              	.Ldebug_abbrev0:
 6350 0000 01       		.uleb128 0x1
 6351 0001 11       		.uleb128 0x11
 6352 0002 01       		.byte	0x1
 6353 0003 25       		.uleb128 0x25
 6354 0004 0E       		.uleb128 0xe
 6355 0005 13       		.uleb128 0x13
 6356 0006 0B       		.uleb128 0xb
 6357 0007 03       		.uleb128 0x3
 6358 0008 0E       		.uleb128 0xe
 6359 0009 1B       		.uleb128 0x1b
 6360 000a 0E       		.uleb128 0xe
 6361 000b 55       		.uleb128 0x55
 6362 000c 17       		.uleb128 0x17
 6363 000d 11       		.uleb128 0x11
 6364 000e 01       		.uleb128 0x1
 6365 000f 10       		.uleb128 0x10
 6366 0010 17       		.uleb128 0x17
 6367 0011 00       		.byte	0
 6368 0012 00       		.byte	0
 6369 0013 02       		.uleb128 0x2
 6370 0014 24       		.uleb128 0x24
 6371 0015 00       		.byte	0
 6372 0016 0B       		.uleb128 0xb
 6373 0017 0B       		.uleb128 0xb
 6374 0018 3E       		.uleb128 0x3e
 6375 0019 0B       		.uleb128 0xb
 6376 001a 03       		.uleb128 0x3
 6377 001b 0E       		.uleb128 0xe
 6378 001c 00       		.byte	0
 6379 001d 00       		.byte	0
 6380 001e 03       		.uleb128 0x3
 6381 001f 16       		.uleb128 0x16
 6382 0020 00       		.byte	0
 6383 0021 03       		.uleb128 0x3
 6384 0022 0E       		.uleb128 0xe
 6385 0023 3A       		.uleb128 0x3a
 6386 0024 0B       		.uleb128 0xb
 6387 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 131


 6388 0026 0B       		.uleb128 0xb
 6389 0027 49       		.uleb128 0x49
 6390 0028 13       		.uleb128 0x13
 6391 0029 00       		.byte	0
 6392 002a 00       		.byte	0
 6393 002b 04       		.uleb128 0x4
 6394 002c 24       		.uleb128 0x24
 6395 002d 00       		.byte	0
 6396 002e 0B       		.uleb128 0xb
 6397 002f 0B       		.uleb128 0xb
 6398 0030 3E       		.uleb128 0x3e
 6399 0031 0B       		.uleb128 0xb
 6400 0032 03       		.uleb128 0x3
 6401 0033 08       		.uleb128 0x8
 6402 0034 00       		.byte	0
 6403 0035 00       		.byte	0
 6404 0036 05       		.uleb128 0x5
 6405 0037 0F       		.uleb128 0xf
 6406 0038 00       		.byte	0
 6407 0039 0B       		.uleb128 0xb
 6408 003a 0B       		.uleb128 0xb
 6409 003b 49       		.uleb128 0x49
 6410 003c 13       		.uleb128 0x13
 6411 003d 00       		.byte	0
 6412 003e 00       		.byte	0
 6413 003f 06       		.uleb128 0x6
 6414 0040 16       		.uleb128 0x16
 6415 0041 00       		.byte	0
 6416 0042 03       		.uleb128 0x3
 6417 0043 0E       		.uleb128 0xe
 6418 0044 3A       		.uleb128 0x3a
 6419 0045 0B       		.uleb128 0xb
 6420 0046 3B       		.uleb128 0x3b
 6421 0047 05       		.uleb128 0x5
 6422 0048 49       		.uleb128 0x49
 6423 0049 13       		.uleb128 0x13
 6424 004a 00       		.byte	0
 6425 004b 00       		.byte	0
 6426 004c 07       		.uleb128 0x7
 6427 004d 04       		.uleb128 0x4
 6428 004e 01       		.byte	0x1
 6429 004f 03       		.uleb128 0x3
 6430 0050 0E       		.uleb128 0xe
 6431 0051 0B       		.uleb128 0xb
 6432 0052 0B       		.uleb128 0xb
 6433 0053 3A       		.uleb128 0x3a
 6434 0054 0B       		.uleb128 0xb
 6435 0055 3B       		.uleb128 0x3b
 6436 0056 0B       		.uleb128 0xb
 6437 0057 01       		.uleb128 0x1
 6438 0058 13       		.uleb128 0x13
 6439 0059 00       		.byte	0
 6440 005a 00       		.byte	0
 6441 005b 08       		.uleb128 0x8
 6442 005c 28       		.uleb128 0x28
 6443 005d 00       		.byte	0
 6444 005e 03       		.uleb128 0x3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 132


 6445 005f 0E       		.uleb128 0xe
 6446 0060 1C       		.uleb128 0x1c
 6447 0061 0D       		.uleb128 0xd
 6448 0062 00       		.byte	0
 6449 0063 00       		.byte	0
 6450 0064 09       		.uleb128 0x9
 6451 0065 13       		.uleb128 0x13
 6452 0066 01       		.byte	0x1
 6453 0067 03       		.uleb128 0x3
 6454 0068 0E       		.uleb128 0xe
 6455 0069 0B       		.uleb128 0xb
 6456 006a 0B       		.uleb128 0xb
 6457 006b 3A       		.uleb128 0x3a
 6458 006c 0B       		.uleb128 0xb
 6459 006d 3B       		.uleb128 0x3b
 6460 006e 0B       		.uleb128 0xb
 6461 006f 01       		.uleb128 0x1
 6462 0070 13       		.uleb128 0x13
 6463 0071 00       		.byte	0
 6464 0072 00       		.byte	0
 6465 0073 0A       		.uleb128 0xa
 6466 0074 0D       		.uleb128 0xd
 6467 0075 00       		.byte	0
 6468 0076 03       		.uleb128 0x3
 6469 0077 0E       		.uleb128 0xe
 6470 0078 3A       		.uleb128 0x3a
 6471 0079 0B       		.uleb128 0xb
 6472 007a 3B       		.uleb128 0x3b
 6473 007b 0B       		.uleb128 0xb
 6474 007c 49       		.uleb128 0x49
 6475 007d 13       		.uleb128 0x13
 6476 007e 38       		.uleb128 0x38
 6477 007f 0B       		.uleb128 0xb
 6478 0080 00       		.byte	0
 6479 0081 00       		.byte	0
 6480 0082 0B       		.uleb128 0xb
 6481 0083 2E       		.uleb128 0x2e
 6482 0084 01       		.byte	0x1
 6483 0085 3F       		.uleb128 0x3f
 6484 0086 19       		.uleb128 0x19
 6485 0087 03       		.uleb128 0x3
 6486 0088 0E       		.uleb128 0xe
 6487 0089 3A       		.uleb128 0x3a
 6488 008a 0B       		.uleb128 0xb
 6489 008b 3B       		.uleb128 0x3b
 6490 008c 0B       		.uleb128 0xb
 6491 008d 11       		.uleb128 0x11
 6492 008e 01       		.uleb128 0x1
 6493 008f 12       		.uleb128 0x12
 6494 0090 06       		.uleb128 0x6
 6495 0091 40       		.uleb128 0x40
 6496 0092 18       		.uleb128 0x18
 6497 0093 9742     		.uleb128 0x2117
 6498 0095 19       		.uleb128 0x19
 6499 0096 01       		.uleb128 0x1
 6500 0097 13       		.uleb128 0x13
 6501 0098 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 133


 6502 0099 00       		.byte	0
 6503 009a 0C       		.uleb128 0xc
 6504 009b 0B       		.uleb128 0xb
 6505 009c 01       		.byte	0x1
 6506 009d 11       		.uleb128 0x11
 6507 009e 01       		.uleb128 0x1
 6508 009f 12       		.uleb128 0x12
 6509 00a0 06       		.uleb128 0x6
 6510 00a1 00       		.byte	0
 6511 00a2 00       		.byte	0
 6512 00a3 0D       		.uleb128 0xd
 6513 00a4 34       		.uleb128 0x34
 6514 00a5 00       		.byte	0
 6515 00a6 03       		.uleb128 0x3
 6516 00a7 0E       		.uleb128 0xe
 6517 00a8 3A       		.uleb128 0x3a
 6518 00a9 0B       		.uleb128 0xb
 6519 00aa 3B       		.uleb128 0x3b
 6520 00ab 0B       		.uleb128 0xb
 6521 00ac 49       		.uleb128 0x49
 6522 00ad 13       		.uleb128 0x13
 6523 00ae 02       		.uleb128 0x2
 6524 00af 18       		.uleb128 0x18
 6525 00b0 00       		.byte	0
 6526 00b1 00       		.byte	0
 6527 00b2 0E       		.uleb128 0xe
 6528 00b3 01       		.uleb128 0x1
 6529 00b4 01       		.byte	0x1
 6530 00b5 49       		.uleb128 0x49
 6531 00b6 13       		.uleb128 0x13
 6532 00b7 01       		.uleb128 0x1
 6533 00b8 13       		.uleb128 0x13
 6534 00b9 00       		.byte	0
 6535 00ba 00       		.byte	0
 6536 00bb 0F       		.uleb128 0xf
 6537 00bc 21       		.uleb128 0x21
 6538 00bd 00       		.byte	0
 6539 00be 49       		.uleb128 0x49
 6540 00bf 13       		.uleb128 0x13
 6541 00c0 2F       		.uleb128 0x2f
 6542 00c1 0B       		.uleb128 0xb
 6543 00c2 00       		.byte	0
 6544 00c3 00       		.byte	0
 6545 00c4 10       		.uleb128 0x10
 6546 00c5 2E       		.uleb128 0x2e
 6547 00c6 01       		.byte	0x1
 6548 00c7 3F       		.uleb128 0x3f
 6549 00c8 19       		.uleb128 0x19
 6550 00c9 03       		.uleb128 0x3
 6551 00ca 0E       		.uleb128 0xe
 6552 00cb 3A       		.uleb128 0x3a
 6553 00cc 0B       		.uleb128 0xb
 6554 00cd 3B       		.uleb128 0x3b
 6555 00ce 0B       		.uleb128 0xb
 6556 00cf 27       		.uleb128 0x27
 6557 00d0 19       		.uleb128 0x19
 6558 00d1 11       		.uleb128 0x11
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 134


 6559 00d2 01       		.uleb128 0x1
 6560 00d3 12       		.uleb128 0x12
 6561 00d4 06       		.uleb128 0x6
 6562 00d5 40       		.uleb128 0x40
 6563 00d6 18       		.uleb128 0x18
 6564 00d7 9642     		.uleb128 0x2116
 6565 00d9 19       		.uleb128 0x19
 6566 00da 01       		.uleb128 0x1
 6567 00db 13       		.uleb128 0x13
 6568 00dc 00       		.byte	0
 6569 00dd 00       		.byte	0
 6570 00de 11       		.uleb128 0x11
 6571 00df 05       		.uleb128 0x5
 6572 00e0 00       		.byte	0
 6573 00e1 03       		.uleb128 0x3
 6574 00e2 08       		.uleb128 0x8
 6575 00e3 3A       		.uleb128 0x3a
 6576 00e4 0B       		.uleb128 0xb
 6577 00e5 3B       		.uleb128 0x3b
 6578 00e6 0B       		.uleb128 0xb
 6579 00e7 49       		.uleb128 0x49
 6580 00e8 13       		.uleb128 0x13
 6581 00e9 02       		.uleb128 0x2
 6582 00ea 18       		.uleb128 0x18
 6583 00eb 00       		.byte	0
 6584 00ec 00       		.byte	0
 6585 00ed 12       		.uleb128 0x12
 6586 00ee 2E       		.uleb128 0x2e
 6587 00ef 01       		.byte	0x1
 6588 00f0 3F       		.uleb128 0x3f
 6589 00f1 19       		.uleb128 0x19
 6590 00f2 03       		.uleb128 0x3
 6591 00f3 0E       		.uleb128 0xe
 6592 00f4 3A       		.uleb128 0x3a
 6593 00f5 0B       		.uleb128 0xb
 6594 00f6 3B       		.uleb128 0x3b
 6595 00f7 0B       		.uleb128 0xb
 6596 00f8 11       		.uleb128 0x11
 6597 00f9 01       		.uleb128 0x1
 6598 00fa 12       		.uleb128 0x12
 6599 00fb 06       		.uleb128 0x6
 6600 00fc 40       		.uleb128 0x40
 6601 00fd 18       		.uleb128 0x18
 6602 00fe 9642     		.uleb128 0x2116
 6603 0100 19       		.uleb128 0x19
 6604 0101 01       		.uleb128 0x1
 6605 0102 13       		.uleb128 0x13
 6606 0103 00       		.byte	0
 6607 0104 00       		.byte	0
 6608 0105 13       		.uleb128 0x13
 6609 0106 34       		.uleb128 0x34
 6610 0107 00       		.byte	0
 6611 0108 03       		.uleb128 0x3
 6612 0109 08       		.uleb128 0x8
 6613 010a 3A       		.uleb128 0x3a
 6614 010b 0B       		.uleb128 0xb
 6615 010c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 135


 6616 010d 0B       		.uleb128 0xb
 6617 010e 49       		.uleb128 0x49
 6618 010f 13       		.uleb128 0x13
 6619 0110 02       		.uleb128 0x2
 6620 0111 18       		.uleb128 0x18
 6621 0112 00       		.byte	0
 6622 0113 00       		.byte	0
 6623 0114 14       		.uleb128 0x14
 6624 0115 05       		.uleb128 0x5
 6625 0116 00       		.byte	0
 6626 0117 03       		.uleb128 0x3
 6627 0118 0E       		.uleb128 0xe
 6628 0119 3A       		.uleb128 0x3a
 6629 011a 0B       		.uleb128 0xb
 6630 011b 3B       		.uleb128 0x3b
 6631 011c 0B       		.uleb128 0xb
 6632 011d 49       		.uleb128 0x49
 6633 011e 13       		.uleb128 0x13
 6634 011f 02       		.uleb128 0x2
 6635 0120 18       		.uleb128 0x18
 6636 0121 00       		.byte	0
 6637 0122 00       		.byte	0
 6638 0123 15       		.uleb128 0x15
 6639 0124 2E       		.uleb128 0x2e
 6640 0125 00       		.byte	0
 6641 0126 3F       		.uleb128 0x3f
 6642 0127 19       		.uleb128 0x19
 6643 0128 03       		.uleb128 0x3
 6644 0129 0E       		.uleb128 0xe
 6645 012a 3A       		.uleb128 0x3a
 6646 012b 0B       		.uleb128 0xb
 6647 012c 3B       		.uleb128 0x3b
 6648 012d 0B       		.uleb128 0xb
 6649 012e 11       		.uleb128 0x11
 6650 012f 01       		.uleb128 0x1
 6651 0130 12       		.uleb128 0x12
 6652 0131 06       		.uleb128 0x6
 6653 0132 40       		.uleb128 0x40
 6654 0133 18       		.uleb128 0x18
 6655 0134 9642     		.uleb128 0x2116
 6656 0136 19       		.uleb128 0x19
 6657 0137 00       		.byte	0
 6658 0138 00       		.byte	0
 6659 0139 16       		.uleb128 0x16
 6660 013a 2E       		.uleb128 0x2e
 6661 013b 00       		.byte	0
 6662 013c 3F       		.uleb128 0x3f
 6663 013d 19       		.uleb128 0x19
 6664 013e 03       		.uleb128 0x3
 6665 013f 0E       		.uleb128 0xe
 6666 0140 3A       		.uleb128 0x3a
 6667 0141 0B       		.uleb128 0xb
 6668 0142 3B       		.uleb128 0x3b
 6669 0143 05       		.uleb128 0x5
 6670 0144 11       		.uleb128 0x11
 6671 0145 01       		.uleb128 0x1
 6672 0146 12       		.uleb128 0x12
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 136


 6673 0147 06       		.uleb128 0x6
 6674 0148 40       		.uleb128 0x40
 6675 0149 18       		.uleb128 0x18
 6676 014a 9642     		.uleb128 0x2116
 6677 014c 19       		.uleb128 0x19
 6678 014d 00       		.byte	0
 6679 014e 00       		.byte	0
 6680 014f 17       		.uleb128 0x17
 6681 0150 2E       		.uleb128 0x2e
 6682 0151 00       		.byte	0
 6683 0152 3F       		.uleb128 0x3f
 6684 0153 19       		.uleb128 0x19
 6685 0154 03       		.uleb128 0x3
 6686 0155 0E       		.uleb128 0xe
 6687 0156 3A       		.uleb128 0x3a
 6688 0157 0B       		.uleb128 0xb
 6689 0158 3B       		.uleb128 0x3b
 6690 0159 05       		.uleb128 0x5
 6691 015a 11       		.uleb128 0x11
 6692 015b 01       		.uleb128 0x1
 6693 015c 12       		.uleb128 0x12
 6694 015d 06       		.uleb128 0x6
 6695 015e 40       		.uleb128 0x40
 6696 015f 18       		.uleb128 0x18
 6697 0160 9742     		.uleb128 0x2117
 6698 0162 19       		.uleb128 0x19
 6699 0163 00       		.byte	0
 6700 0164 00       		.byte	0
 6701 0165 18       		.uleb128 0x18
 6702 0166 2E       		.uleb128 0x2e
 6703 0167 01       		.byte	0x1
 6704 0168 3F       		.uleb128 0x3f
 6705 0169 19       		.uleb128 0x19
 6706 016a 03       		.uleb128 0x3
 6707 016b 0E       		.uleb128 0xe
 6708 016c 3A       		.uleb128 0x3a
 6709 016d 0B       		.uleb128 0xb
 6710 016e 3B       		.uleb128 0x3b
 6711 016f 05       		.uleb128 0x5
 6712 0170 27       		.uleb128 0x27
 6713 0171 19       		.uleb128 0x19
 6714 0172 11       		.uleb128 0x11
 6715 0173 01       		.uleb128 0x1
 6716 0174 12       		.uleb128 0x12
 6717 0175 06       		.uleb128 0x6
 6718 0176 40       		.uleb128 0x40
 6719 0177 18       		.uleb128 0x18
 6720 0178 9642     		.uleb128 0x2116
 6721 017a 19       		.uleb128 0x19
 6722 017b 01       		.uleb128 0x1
 6723 017c 13       		.uleb128 0x13
 6724 017d 00       		.byte	0
 6725 017e 00       		.byte	0
 6726 017f 19       		.uleb128 0x19
 6727 0180 34       		.uleb128 0x34
 6728 0181 00       		.byte	0
 6729 0182 03       		.uleb128 0x3
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 137


 6730 0183 0E       		.uleb128 0xe
 6731 0184 3A       		.uleb128 0x3a
 6732 0185 0B       		.uleb128 0xb
 6733 0186 3B       		.uleb128 0x3b
 6734 0187 05       		.uleb128 0x5
 6735 0188 49       		.uleb128 0x49
 6736 0189 13       		.uleb128 0x13
 6737 018a 02       		.uleb128 0x2
 6738 018b 18       		.uleb128 0x18
 6739 018c 00       		.byte	0
 6740 018d 00       		.byte	0
 6741 018e 1A       		.uleb128 0x1a
 6742 018f 34       		.uleb128 0x34
 6743 0190 00       		.byte	0
 6744 0191 03       		.uleb128 0x3
 6745 0192 08       		.uleb128 0x8
 6746 0193 3A       		.uleb128 0x3a
 6747 0194 0B       		.uleb128 0xb
 6748 0195 3B       		.uleb128 0x3b
 6749 0196 05       		.uleb128 0x5
 6750 0197 49       		.uleb128 0x49
 6751 0198 13       		.uleb128 0x13
 6752 0199 02       		.uleb128 0x2
 6753 019a 18       		.uleb128 0x18
 6754 019b 00       		.byte	0
 6755 019c 00       		.byte	0
 6756 019d 1B       		.uleb128 0x1b
 6757 019e 2E       		.uleb128 0x2e
 6758 019f 00       		.byte	0
 6759 01a0 3F       		.uleb128 0x3f
 6760 01a1 19       		.uleb128 0x19
 6761 01a2 03       		.uleb128 0x3
 6762 01a3 0E       		.uleb128 0xe
 6763 01a4 3A       		.uleb128 0x3a
 6764 01a5 0B       		.uleb128 0xb
 6765 01a6 3B       		.uleb128 0x3b
 6766 01a7 05       		.uleb128 0x5
 6767 01a8 27       		.uleb128 0x27
 6768 01a9 19       		.uleb128 0x19
 6769 01aa 11       		.uleb128 0x11
 6770 01ab 01       		.uleb128 0x1
 6771 01ac 12       		.uleb128 0x12
 6772 01ad 06       		.uleb128 0x6
 6773 01ae 40       		.uleb128 0x40
 6774 01af 18       		.uleb128 0x18
 6775 01b0 9742     		.uleb128 0x2117
 6776 01b2 19       		.uleb128 0x19
 6777 01b3 00       		.byte	0
 6778 01b4 00       		.byte	0
 6779 01b5 1C       		.uleb128 0x1c
 6780 01b6 2E       		.uleb128 0x2e
 6781 01b7 00       		.byte	0
 6782 01b8 3F       		.uleb128 0x3f
 6783 01b9 19       		.uleb128 0x19
 6784 01ba 03       		.uleb128 0x3
 6785 01bb 0E       		.uleb128 0xe
 6786 01bc 3A       		.uleb128 0x3a
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 138


 6787 01bd 0B       		.uleb128 0xb
 6788 01be 3B       		.uleb128 0x3b
 6789 01bf 05       		.uleb128 0x5
 6790 01c0 27       		.uleb128 0x27
 6791 01c1 19       		.uleb128 0x19
 6792 01c2 11       		.uleb128 0x11
 6793 01c3 01       		.uleb128 0x1
 6794 01c4 12       		.uleb128 0x12
 6795 01c5 06       		.uleb128 0x6
 6796 01c6 40       		.uleb128 0x40
 6797 01c7 18       		.uleb128 0x18
 6798 01c8 9642     		.uleb128 0x2116
 6799 01ca 19       		.uleb128 0x19
 6800 01cb 00       		.byte	0
 6801 01cc 00       		.byte	0
 6802 01cd 1D       		.uleb128 0x1d
 6803 01ce 0B       		.uleb128 0xb
 6804 01cf 01       		.byte	0x1
 6805 01d0 11       		.uleb128 0x11
 6806 01d1 01       		.uleb128 0x1
 6807 01d2 12       		.uleb128 0x12
 6808 01d3 06       		.uleb128 0x6
 6809 01d4 01       		.uleb128 0x1
 6810 01d5 13       		.uleb128 0x13
 6811 01d6 00       		.byte	0
 6812 01d7 00       		.byte	0
 6813 01d8 1E       		.uleb128 0x1e
 6814 01d9 2E       		.uleb128 0x2e
 6815 01da 01       		.byte	0x1
 6816 01db 3F       		.uleb128 0x3f
 6817 01dc 19       		.uleb128 0x19
 6818 01dd 03       		.uleb128 0x3
 6819 01de 0E       		.uleb128 0xe
 6820 01df 3A       		.uleb128 0x3a
 6821 01e0 0B       		.uleb128 0xb
 6822 01e1 3B       		.uleb128 0x3b
 6823 01e2 05       		.uleb128 0x5
 6824 01e3 11       		.uleb128 0x11
 6825 01e4 01       		.uleb128 0x1
 6826 01e5 12       		.uleb128 0x12
 6827 01e6 06       		.uleb128 0x6
 6828 01e7 40       		.uleb128 0x40
 6829 01e8 18       		.uleb128 0x18
 6830 01e9 9642     		.uleb128 0x2116
 6831 01eb 19       		.uleb128 0x19
 6832 01ec 01       		.uleb128 0x1
 6833 01ed 13       		.uleb128 0x13
 6834 01ee 00       		.byte	0
 6835 01ef 00       		.byte	0
 6836 01f0 1F       		.uleb128 0x1f
 6837 01f1 05       		.uleb128 0x5
 6838 01f2 00       		.byte	0
 6839 01f3 03       		.uleb128 0x3
 6840 01f4 0E       		.uleb128 0xe
 6841 01f5 3A       		.uleb128 0x3a
 6842 01f6 0B       		.uleb128 0xb
 6843 01f7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 139


 6844 01f8 05       		.uleb128 0x5
 6845 01f9 49       		.uleb128 0x49
 6846 01fa 13       		.uleb128 0x13
 6847 01fb 02       		.uleb128 0x2
 6848 01fc 18       		.uleb128 0x18
 6849 01fd 00       		.byte	0
 6850 01fe 00       		.byte	0
 6851 01ff 20       		.uleb128 0x20
 6852 0200 2E       		.uleb128 0x2e
 6853 0201 01       		.byte	0x1
 6854 0202 3F       		.uleb128 0x3f
 6855 0203 19       		.uleb128 0x19
 6856 0204 03       		.uleb128 0x3
 6857 0205 0E       		.uleb128 0xe
 6858 0206 3A       		.uleb128 0x3a
 6859 0207 0B       		.uleb128 0xb
 6860 0208 3B       		.uleb128 0x3b
 6861 0209 05       		.uleb128 0x5
 6862 020a 49       		.uleb128 0x49
 6863 020b 13       		.uleb128 0x13
 6864 020c 11       		.uleb128 0x11
 6865 020d 01       		.uleb128 0x1
 6866 020e 12       		.uleb128 0x12
 6867 020f 06       		.uleb128 0x6
 6868 0210 40       		.uleb128 0x40
 6869 0211 18       		.uleb128 0x18
 6870 0212 9642     		.uleb128 0x2116
 6871 0214 19       		.uleb128 0x19
 6872 0215 01       		.uleb128 0x1
 6873 0216 13       		.uleb128 0x13
 6874 0217 00       		.byte	0
 6875 0218 00       		.byte	0
 6876 0219 21       		.uleb128 0x21
 6877 021a 05       		.uleb128 0x5
 6878 021b 00       		.byte	0
 6879 021c 03       		.uleb128 0x3
 6880 021d 08       		.uleb128 0x8
 6881 021e 3A       		.uleb128 0x3a
 6882 021f 0B       		.uleb128 0xb
 6883 0220 3B       		.uleb128 0x3b
 6884 0221 05       		.uleb128 0x5
 6885 0222 49       		.uleb128 0x49
 6886 0223 13       		.uleb128 0x13
 6887 0224 02       		.uleb128 0x2
 6888 0225 18       		.uleb128 0x18
 6889 0226 00       		.byte	0
 6890 0227 00       		.byte	0
 6891 0228 22       		.uleb128 0x22
 6892 0229 34       		.uleb128 0x34
 6893 022a 00       		.byte	0
 6894 022b 03       		.uleb128 0x3
 6895 022c 0E       		.uleb128 0xe
 6896 022d 3A       		.uleb128 0x3a
 6897 022e 0B       		.uleb128 0xb
 6898 022f 3B       		.uleb128 0x3b
 6899 0230 05       		.uleb128 0x5
 6900 0231 49       		.uleb128 0x49
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 140


 6901 0232 13       		.uleb128 0x13
 6902 0233 3F       		.uleb128 0x3f
 6903 0234 19       		.uleb128 0x19
 6904 0235 3C       		.uleb128 0x3c
 6905 0236 19       		.uleb128 0x19
 6906 0237 00       		.byte	0
 6907 0238 00       		.byte	0
 6908 0239 23       		.uleb128 0x23
 6909 023a 35       		.uleb128 0x35
 6910 023b 00       		.byte	0
 6911 023c 49       		.uleb128 0x49
 6912 023d 13       		.uleb128 0x13
 6913 023e 00       		.byte	0
 6914 023f 00       		.byte	0
 6915 0240 24       		.uleb128 0x24
 6916 0241 34       		.uleb128 0x34
 6917 0242 00       		.byte	0
 6918 0243 03       		.uleb128 0x3
 6919 0244 08       		.uleb128 0x8
 6920 0245 3A       		.uleb128 0x3a
 6921 0246 0B       		.uleb128 0xb
 6922 0247 3B       		.uleb128 0x3b
 6923 0248 0B       		.uleb128 0xb
 6924 0249 49       		.uleb128 0x49
 6925 024a 13       		.uleb128 0x13
 6926 024b 3F       		.uleb128 0x3f
 6927 024c 19       		.uleb128 0x19
 6928 024d 02       		.uleb128 0x2
 6929 024e 18       		.uleb128 0x18
 6930 024f 00       		.byte	0
 6931 0250 00       		.byte	0
 6932 0251 25       		.uleb128 0x25
 6933 0252 34       		.uleb128 0x34
 6934 0253 00       		.byte	0
 6935 0254 03       		.uleb128 0x3
 6936 0255 0E       		.uleb128 0xe
 6937 0256 3A       		.uleb128 0x3a
 6938 0257 0B       		.uleb128 0xb
 6939 0258 3B       		.uleb128 0x3b
 6940 0259 0B       		.uleb128 0xb
 6941 025a 49       		.uleb128 0x49
 6942 025b 13       		.uleb128 0x13
 6943 025c 3F       		.uleb128 0x3f
 6944 025d 19       		.uleb128 0x19
 6945 025e 02       		.uleb128 0x2
 6946 025f 18       		.uleb128 0x18
 6947 0260 00       		.byte	0
 6948 0261 00       		.byte	0
 6949 0262 26       		.uleb128 0x26
 6950 0263 21       		.uleb128 0x21
 6951 0264 00       		.byte	0
 6952 0265 49       		.uleb128 0x49
 6953 0266 13       		.uleb128 0x13
 6954 0267 2F       		.uleb128 0x2f
 6955 0268 05       		.uleb128 0x5
 6956 0269 00       		.byte	0
 6957 026a 00       		.byte	0
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 141


 6958 026b 00       		.byte	0
 6959              		.section	.debug_aranges,"",%progbits
 6960 0000 64010000 		.4byte	0x164
 6961 0004 0200     		.2byte	0x2
 6962 0006 00000000 		.4byte	.Ldebug_info0
 6963 000a 04       		.byte	0x4
 6964 000b 00       		.byte	0
 6965 000c 0000     		.2byte	0
 6966 000e 0000     		.2byte	0
 6967 0010 00000000 		.4byte	.LFB63
 6968 0014 60010000 		.4byte	.LFE63-.LFB63
 6969 0018 00000000 		.4byte	.LFB64
 6970 001c 18000000 		.4byte	.LFE64-.LFB64
 6971 0020 00000000 		.4byte	.LFB65
 6972 0024 18000000 		.4byte	.LFE65-.LFB65
 6973 0028 00000000 		.4byte	.LFB66
 6974 002c 54000000 		.4byte	.LFE66-.LFB66
 6975 0030 00000000 		.4byte	.LFB67
 6976 0034 F4000000 		.4byte	.LFE67-.LFB67
 6977 0038 00000000 		.4byte	.LFB68
 6978 003c 18000000 		.4byte	.LFE68-.LFB68
 6979 0040 00000000 		.4byte	.LFB69
 6980 0044 18000000 		.4byte	.LFE69-.LFB69
 6981 0048 00000000 		.4byte	.LFB70
 6982 004c 22000000 		.4byte	.LFE70-.LFB70
 6983 0050 00000000 		.4byte	.LFB71
 6984 0054 1C000000 		.4byte	.LFE71-.LFB71
 6985 0058 00000000 		.4byte	.LFB72
 6986 005c 28000000 		.4byte	.LFE72-.LFB72
 6987 0060 00000000 		.4byte	.LFB73
 6988 0064 2C000000 		.4byte	.LFE73-.LFB73
 6989 0068 00000000 		.4byte	.LFB74
 6990 006c 44000000 		.4byte	.LFE74-.LFB74
 6991 0070 00000000 		.4byte	.LFB75
 6992 0074 38000000 		.4byte	.LFE75-.LFB75
 6993 0078 00000000 		.4byte	.LFB76
 6994 007c 38000000 		.4byte	.LFE76-.LFB76
 6995 0080 00000000 		.4byte	.LFB77
 6996 0084 38000000 		.4byte	.LFE77-.LFB77
 6997 0088 00000000 		.4byte	.LFB78
 6998 008c 14000000 		.4byte	.LFE78-.LFB78
 6999 0090 00000000 		.4byte	.LFB79
 7000 0094 18000000 		.4byte	.LFE79-.LFB79
 7001 0098 00000000 		.4byte	.LFB80
 7002 009c 18000000 		.4byte	.LFE80-.LFB80
 7003 00a0 00000000 		.4byte	.LFB81
 7004 00a4 18000000 		.4byte	.LFE81-.LFB81
 7005 00a8 00000000 		.4byte	.LFB82
 7006 00ac 18000000 		.4byte	.LFE82-.LFB82
 7007 00b0 00000000 		.4byte	.LFB83
 7008 00b4 B8000000 		.4byte	.LFE83-.LFB83
 7009 00b8 00000000 		.4byte	.LFB84
 7010 00bc BC010000 		.4byte	.LFE84-.LFB84
 7011 00c0 00000000 		.4byte	.LFB85
 7012 00c4 0C000000 		.4byte	.LFE85-.LFB85
 7013 00c8 00000000 		.4byte	.LFB86
 7014 00cc 2C000000 		.4byte	.LFE86-.LFB86
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 142


 7015 00d0 00000000 		.4byte	.LFB87
 7016 00d4 EC010000 		.4byte	.LFE87-.LFB87
 7017 00d8 00000000 		.4byte	.LFB88
 7018 00dc AC000000 		.4byte	.LFE88-.LFB88
 7019 00e0 00000000 		.4byte	.LFB89
 7020 00e4 20000000 		.4byte	.LFE89-.LFB89
 7021 00e8 00000000 		.4byte	.LFB90
 7022 00ec 28000000 		.4byte	.LFE90-.LFB90
 7023 00f0 00000000 		.4byte	.LFB91
 7024 00f4 0A000000 		.4byte	.LFE91-.LFB91
 7025 00f8 00000000 		.4byte	.LFB92
 7026 00fc 40000000 		.4byte	.LFE92-.LFB92
 7027 0100 00000000 		.4byte	.LFB93
 7028 0104 40000000 		.4byte	.LFE93-.LFB93
 7029 0108 00000000 		.4byte	.LFB94
 7030 010c 30020000 		.4byte	.LFE94-.LFB94
 7031 0110 00000000 		.4byte	.LFB95
 7032 0114 50010000 		.4byte	.LFE95-.LFB95
 7033 0118 00000000 		.4byte	.LFB96
 7034 011c D4000000 		.4byte	.LFE96-.LFB96
 7035 0120 00000000 		.4byte	.LFB97
 7036 0124 B0010000 		.4byte	.LFE97-.LFB97
 7037 0128 00000000 		.4byte	.LFB98
 7038 012c C0000000 		.4byte	.LFE98-.LFB98
 7039 0130 00000000 		.4byte	.LFB99
 7040 0134 B8000000 		.4byte	.LFE99-.LFB99
 7041 0138 00000000 		.4byte	.LFB100
 7042 013c 4A000000 		.4byte	.LFE100-.LFB100
 7043 0140 00000000 		.4byte	.LFB101
 7044 0144 A0020000 		.4byte	.LFE101-.LFB101
 7045 0148 00000000 		.4byte	.LFB102
 7046 014c 68000000 		.4byte	.LFE102-.LFB102
 7047 0150 00000000 		.4byte	.LFB103
 7048 0154 50000000 		.4byte	.LFE103-.LFB103
 7049 0158 00000000 		.4byte	.LFB104
 7050 015c 3A000000 		.4byte	.LFE104-.LFB104
 7051 0160 00000000 		.4byte	0
 7052 0164 00000000 		.4byte	0
 7053              		.section	.debug_ranges,"",%progbits
 7054              	.Ldebug_ranges0:
 7055 0000 00000000 		.4byte	.LFB63
 7056 0004 60010000 		.4byte	.LFE63
 7057 0008 00000000 		.4byte	.LFB64
 7058 000c 18000000 		.4byte	.LFE64
 7059 0010 00000000 		.4byte	.LFB65
 7060 0014 18000000 		.4byte	.LFE65
 7061 0018 00000000 		.4byte	.LFB66
 7062 001c 54000000 		.4byte	.LFE66
 7063 0020 00000000 		.4byte	.LFB67
 7064 0024 F4000000 		.4byte	.LFE67
 7065 0028 00000000 		.4byte	.LFB68
 7066 002c 18000000 		.4byte	.LFE68
 7067 0030 00000000 		.4byte	.LFB69
 7068 0034 18000000 		.4byte	.LFE69
 7069 0038 00000000 		.4byte	.LFB70
 7070 003c 22000000 		.4byte	.LFE70
 7071 0040 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 143


 7072 0044 1C000000 		.4byte	.LFE71
 7073 0048 00000000 		.4byte	.LFB72
 7074 004c 28000000 		.4byte	.LFE72
 7075 0050 00000000 		.4byte	.LFB73
 7076 0054 2C000000 		.4byte	.LFE73
 7077 0058 00000000 		.4byte	.LFB74
 7078 005c 44000000 		.4byte	.LFE74
 7079 0060 00000000 		.4byte	.LFB75
 7080 0064 38000000 		.4byte	.LFE75
 7081 0068 00000000 		.4byte	.LFB76
 7082 006c 38000000 		.4byte	.LFE76
 7083 0070 00000000 		.4byte	.LFB77
 7084 0074 38000000 		.4byte	.LFE77
 7085 0078 00000000 		.4byte	.LFB78
 7086 007c 14000000 		.4byte	.LFE78
 7087 0080 00000000 		.4byte	.LFB79
 7088 0084 18000000 		.4byte	.LFE79
 7089 0088 00000000 		.4byte	.LFB80
 7090 008c 18000000 		.4byte	.LFE80
 7091 0090 00000000 		.4byte	.LFB81
 7092 0094 18000000 		.4byte	.LFE81
 7093 0098 00000000 		.4byte	.LFB82
 7094 009c 18000000 		.4byte	.LFE82
 7095 00a0 00000000 		.4byte	.LFB83
 7096 00a4 B8000000 		.4byte	.LFE83
 7097 00a8 00000000 		.4byte	.LFB84
 7098 00ac BC010000 		.4byte	.LFE84
 7099 00b0 00000000 		.4byte	.LFB85
 7100 00b4 0C000000 		.4byte	.LFE85
 7101 00b8 00000000 		.4byte	.LFB86
 7102 00bc 2C000000 		.4byte	.LFE86
 7103 00c0 00000000 		.4byte	.LFB87
 7104 00c4 EC010000 		.4byte	.LFE87
 7105 00c8 00000000 		.4byte	.LFB88
 7106 00cc AC000000 		.4byte	.LFE88
 7107 00d0 00000000 		.4byte	.LFB89
 7108 00d4 20000000 		.4byte	.LFE89
 7109 00d8 00000000 		.4byte	.LFB90
 7110 00dc 28000000 		.4byte	.LFE90
 7111 00e0 00000000 		.4byte	.LFB91
 7112 00e4 0A000000 		.4byte	.LFE91
 7113 00e8 00000000 		.4byte	.LFB92
 7114 00ec 40000000 		.4byte	.LFE92
 7115 00f0 00000000 		.4byte	.LFB93
 7116 00f4 40000000 		.4byte	.LFE93
 7117 00f8 00000000 		.4byte	.LFB94
 7118 00fc 30020000 		.4byte	.LFE94
 7119 0100 00000000 		.4byte	.LFB95
 7120 0104 50010000 		.4byte	.LFE95
 7121 0108 00000000 		.4byte	.LFB96
 7122 010c D4000000 		.4byte	.LFE96
 7123 0110 00000000 		.4byte	.LFB97
 7124 0114 B0010000 		.4byte	.LFE97
 7125 0118 00000000 		.4byte	.LFB98
 7126 011c C0000000 		.4byte	.LFE98
 7127 0120 00000000 		.4byte	.LFB99
 7128 0124 B8000000 		.4byte	.LFE99
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 144


 7129 0128 00000000 		.4byte	.LFB100
 7130 012c 4A000000 		.4byte	.LFE100
 7131 0130 00000000 		.4byte	.LFB101
 7132 0134 A0020000 		.4byte	.LFE101
 7133 0138 00000000 		.4byte	.LFB102
 7134 013c 68000000 		.4byte	.LFE102
 7135 0140 00000000 		.4byte	.LFB103
 7136 0144 50000000 		.4byte	.LFE103
 7137 0148 00000000 		.4byte	.LFB104
 7138 014c 3A000000 		.4byte	.LFE104
 7139 0150 00000000 		.4byte	0
 7140 0154 00000000 		.4byte	0
 7141              		.section	.debug_line,"",%progbits
 7142              	.Ldebug_line0:
 7143 0000 5F070000 		.section	.debug_str,"MS",%progbits,1
 7143      02006701 
 7143      00000201 
 7143      FB0E0D00 
 7143      01010101 
 7144              	.LASF137:
 7145 0000 64697265 		.ascii	"direction\000"
 7145      6374696F 
 7145      6E00
 7146              	.LASF182:
 7147 000a 74726163 		.ascii	"tracked_direction\000"
 7147      6B65645F 
 7147      64697265 
 7147      6374696F 
 7147      6E00
 7148              	.LASF23:
 7149 001c 52545552 		.ascii	"RTURN\000"
 7149      4E00
 7150              	.LASF37:
 7151 0022 44455354 		.ascii	"DEST_TEST\000"
 7151      5F544553 
 7151      5400
 7152              	.LASF145:
 7153 002c 71756164 		.ascii	"quad_diff1\000"
 7153      5F646966 
 7153      663100
 7154              	.LASF146:
 7155 0037 71756164 		.ascii	"quad_diff2\000"
 7155      5F646966 
 7155      663200
 7156              	.LASF85:
 7157 0042 6D657373 		.ascii	"message\000"
 7157      61676500 
 7158              	.LASF96:
 7159 004a 51756164 		.ascii	"Quad_Dec_response\000"
 7159      5F446563 
 7159      5F726573 
 7159      706F6E73 
 7159      6500
 7160              	.LASF161:
 7161 005c 70726576 		.ascii	"prevVoltage\000"
 7161      566F6C74 
 7161      61676500 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 145


 7162              	.LASF147:
 7163 0068 73746172 		.ascii	"start_turn_count\000"
 7163      745F7475 
 7163      726E5F63 
 7163      6F756E74 
 7163      00
 7164              	.LASF8:
 7165 0079 756E7369 		.ascii	"unsigned int\000"
 7165      676E6564 
 7165      20696E74 
 7165      00
 7166              	.LASF171:
 7167 0086 74726163 		.ascii	"track_mode\000"
 7167      6B5F6D6F 
 7167      646500
 7168              	.LASF11:
 7169 0091 5F5F696E 		.ascii	"__int32_t\000"
 7169      7433325F 
 7169      7400
 7170              	.LASF17:
 7171 009b 696E7431 		.ascii	"int16\000"
 7171      3600
 7172              	.LASF168:
 7173 00a1 73797374 		.ascii	"system_state\000"
 7173      656D5F73 
 7173      74617465 
 7173      00
 7174              	.LASF22:
 7175 00ae 4C545552 		.ascii	"LTURN\000"
 7175      4E00
 7176              	.LASF93:
 7177 00b4 6973725F 		.ascii	"isr_adcTimer\000"
 7177      61646354 
 7177      696D6572 
 7177      00
 7178              	.LASF154:
 7179 00c1 74617267 		.ascii	"target_distance_quad\000"
 7179      65745F64 
 7179      69737461 
 7179      6E63655F 
 7179      71756164 
 7180              	.LASF25:
 7181 00d6 54524143 		.ascii	"TRACKING\000"
 7181      4B494E47 
 7181      00
 7182              	.LASF162:
 7183 00df 70726576 		.ascii	"prevVoltage2\000"
 7183      566F6C74 
 7183      61676532 
 7183      00
 7184              	.LASF176:
 7185 00ec 73656E73 		.ascii	"sensorsDisabled\000"
 7185      6F727344 
 7185      69736162 
 7185      6C656400 
 7186              	.LASF55:
 7187 00fc 7061636B 		.ascii	"packet_bytes\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 146


 7187      65745F62 
 7187      79746573 
 7187      00
 7188              	.LASF51:
 7189 0109 67325F78 		.ascii	"g2_xpos\000"
 7189      706F7300 
 7190              	.LASF30:
 7191 0111 6D6F6465 		.ascii	"mode\000"
 7191      00
 7192              	.LASF141:
 7193 0116 71756164 		.ascii	"quad_count1\000"
 7193      5F636F75 
 7193      6E743100 
 7194              	.LASF142:
 7195 0122 71756164 		.ascii	"quad_count2\000"
 7195      5F636F75 
 7195      6E743200 
 7196              	.LASF105:
 7197 012e 74726163 		.ascii	"trackLineU\000"
 7197      6B4C696E 
 7197      655500
 7198              	.LASF181:
 7199 0139 726F626F 		.ascii	"robot_direction\000"
 7199      745F6469 
 7199      72656374 
 7199      696F6E00 
 7200              	.LASF104:
 7201 0149 74726163 		.ascii	"trackLineZ\000"
 7201      6B4C696E 
 7201      655A00
 7202              	.LASF174:
 7203 0154 73706565 		.ascii	"speed\000"
 7203      6400
 7204              	.LASF34:
 7205 015a 53515541 		.ascii	"SQUARE_TRACK\000"
 7205      52455F54 
 7205      5241434B 
 7205      00
 7206              	.LASF133:
 7207 0167 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7207      5F72665F 
 7207      7472616E 
 7207      736D6973 
 7207      73696F6E 
 7208              	.LASF134:
 7209 0183 666C6167 		.ascii	"flag_print_rf\000"
 7209      5F707269 
 7209      6E745F72 
 7209      6600
 7210              	.LASF170:
 7211 0191 6D6F7665 		.ascii	"movement_state\000"
 7211      6D656E74 
 7211      5F737461 
 7211      746500
 7212              	.LASF26:
 7213 01a0 54524143 		.ascii	"TRACKING_U\000"
 7213      4B494E47 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 147


 7213      5F5500
 7214              	.LASF77:
 7215 01ab 696E6974 		.ascii	"initForward\000"
 7215      466F7277 
 7215      61726400 
 7216              	.LASF54:
 7217 01b7 67325F64 		.ascii	"g2_direction\000"
 7217      69726563 
 7217      74696F6E 
 7217      00
 7218              	.LASF88:
 7219 01c4 6973725F 		.ascii	"isr_quad1\000"
 7219      71756164 
 7219      3100
 7220              	.LASF18:
 7221 01ce 666C6F61 		.ascii	"float\000"
 7221      7400
 7222              	.LASF62:
 7223 01d4 73657453 		.ascii	"setSpeed\000"
 7223      70656564 
 7223      00
 7224              	.LASF166:
 7225 01dd 75736242 		.ascii	"usbBuffer\000"
 7225      75666665 
 7225      7200
 7226              	.LASF39:
 7227 01e7 696E6465 		.ascii	"index\000"
 7227      7800
 7228              	.LASF21:
 7229 01ed 44524956 		.ascii	"DRIVE\000"
 7229      4500
 7230              	.LASF57:
 7231 01f3 73747269 		.ascii	"string_packet\000"
 7231      6E675F70 
 7231      61636B65 
 7231      7400
 7232              	.LASF95:
 7233 0201 6368616E 		.ascii	"changeToBT\000"
 7233      6765546F 
 7233      425400
 7234              	.LASF65:
 7235 020c 636F756E 		.ascii	"countsLeft\000"
 7235      74734C65 
 7235      667400
 7236              	.LASF70:
 7237 0217 64726976 		.ascii	"driveForwards\000"
 7237      65466F72 
 7237      77617264 
 7237      7300
 7238              	.LASF72:
 7239 0225 7475726E 		.ascii	"turnLeft\000"
 7239      4C656674 
 7239      00
 7240              	.LASF7:
 7241 022e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7241      206C6F6E 
 7241      6720756E 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 148


 7241      7369676E 
 7241      65642069 
 7242              	.LASF130:
 7243 0245 666C6167 		.ascii	"flag_packet\000"
 7243      5F706163 
 7243      6B657400 
 7244              	.LASF115:
 7245 0251 66726F6E 		.ascii	"frontSensors\000"
 7245      7453656E 
 7245      736F7273 
 7245      00
 7246              	.LASF90:
 7247 025e 6973725F 		.ascii	"isr_turn_timer\000"
 7247      7475726E 
 7247      5F74696D 
 7247      657200
 7248              	.LASF94:
 7249 026d 6368616E 		.ascii	"changeToRF\000"
 7249      6765546F 
 7249      524600
 7250              	.LASF74:
 7251 0278 696E6974 		.ascii	"initTurnLeft\000"
 7251      5475726E 
 7251      4C656674 
 7251      00
 7252              	.LASF160:
 7253 0285 706F7274 		.ascii	"portOpen\000"
 7253      4F70656E 
 7253      00
 7254              	.LASF78:
 7255 028e 696E6974 		.ascii	"initBrake\000"
 7255      4272616B 
 7255      6500
 7256              	.LASF126:
 7257 0298 666C6167 		.ascii	"flag_ts_update\000"
 7257      5F74735F 
 7257      75706461 
 7257      746500
 7258              	.LASF107:
 7259 02a7 7363616C 		.ascii	"scalingFactor\000"
 7259      696E6746 
 7259      6163746F 
 7259      7200
 7260              	.LASF97:
 7261 02b5 6C656674 		.ascii	"leftSpeed\000"
 7261      53706565 
 7261      6400
 7262              	.LASF125:
 7263 02bf 666C6167 		.ascii	"flag_ts_enc\000"
 7263      5F74735F 
 7263      656E6300 
 7264              	.LASF172:
 7265 02cb 62797465 		.ascii	"byteCount\000"
 7265      436F756E 
 7265      7400
 7266              	.LASF92:
 7267 02d5 62757474 		.ascii	"button\000"
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 149


 7267      6F6E00
 7268              	.LASF169:
 7269 02dc 70726576 		.ascii	"prev_movement_state\000"
 7269      5F6D6F76 
 7269      656D656E 
 7269      745F7374 
 7269      61746500 
 7270              	.LASF113:
 7271 02f0 73656E73 		.ascii	"sensorVals\000"
 7271      6F725661 
 7271      6C7300
 7272              	.LASF109:
 7273 02fb 72657375 		.ascii	"result_str\000"
 7273      6C745F73 
 7273      747200
 7274              	.LASF119:
 7275 0306 75617274 		.ascii	"uart_set_PWM\000"
 7275      5F736574 
 7275      5F50574D 
 7275      00
 7276              	.LASF81:
 7277 0313 696E6974 		.ascii	"inittrackLineZ\000"
 7277      74726163 
 7277      6B4C696E 
 7277      655A00
 7278              	.LASF41:
 7279 0322 726F626F 		.ascii	"robot_ypos\000"
 7279      745F7970 
 7279      6F7300
 7280              	.LASF124:
 7281 032d 74735F64 		.ascii	"ts_display\000"
 7281      6973706C 
 7281      617900
 7282              	.LASF106:
 7283 0338 7072696E 		.ascii	"print_ADC\000"
 7283      745F4144 
 7283      4300
 7284              	.LASF99:
 7285 0342 7363616C 		.ascii	"scalingLeft\000"
 7285      696E674C 
 7285      65667400 
 7286              	.LASF10:
 7287 034e 63686172 		.ascii	"char\000"
 7287      00
 7288              	.LASF45:
 7289 0353 67305F73 		.ascii	"g0_speed\000"
 7289      70656564 
 7289      00
 7290              	.LASF151:
 7291 035c 72696768 		.ascii	"rightSpeedLimit\000"
 7291      74537065 
 7291      65644C69 
 7291      6D697400 
 7292              	.LASF58:
 7293 036c 7365744C 		.ascii	"setLeftDir\000"
 7293      65667444 
 7293      697200
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 150


 7294              	.LASF175:
 7295 0377 696E7374 		.ascii	"instructionCount\000"
 7295      72756374 
 7295      696F6E43 
 7295      6F756E74 
 7295      00
 7296              	.LASF73:
 7297 0388 7475726E 		.ascii	"turnU\000"
 7297      5500
 7298              	.LASF52:
 7299 038e 67325F79 		.ascii	"g2_ypos\000"
 7299      706F7300 
 7300              	.LASF14:
 7301 0396 75696E74 		.ascii	"uint16\000"
 7301      313600
 7302              	.LASF16:
 7303 039d 696E7438 		.ascii	"int8\000"
 7303      00
 7304              	.LASF50:
 7305 03a2 67315F64 		.ascii	"g1_direction\000"
 7305      69726563 
 7305      74696F6E 
 7305      00
 7306              	.LASF178:
 7307 03af 70617468 		.ascii	"path\000"
 7307      00
 7308              	.LASF59:
 7309 03b4 73657452 		.ascii	"setRightDir\000"
 7309      69676874 
 7309      44697200 
 7310              	.LASF32:
 7311 03c0 43555256 		.ascii	"CURVE_TRACK\000"
 7311      455F5452 
 7311      41434B00 
 7312              	.LASF101:
 7313 03cc 696E7465 		.ascii	"interCalc\000"
 7313      7243616C 
 7313      6300
 7314              	.LASF139:
 7315 03d6 42545F45 		.ascii	"BT_ENABLED\000"
 7315      4E41424C 
 7315      454400
 7316              	.LASF64:
 7317 03e1 72696768 		.ascii	"right\000"
 7317      7400
 7318              	.LASF156:
 7319 03e7 696E6974 		.ascii	"initial_pos_valid\000"
 7319      69616C5F 
 7319      706F735F 
 7319      76616C69 
 7319      6400
 7320              	.LASF6:
 7321 03f9 6C6F6E67 		.ascii	"long long int\000"
 7321      206C6F6E 
 7321      6720696E 
 7321      7400
 7322              	.LASF167:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 151


 7323 0407 62756666 		.ascii	"buffer_state\000"
 7323      65725F73 
 7323      74617465 
 7323      00
 7324              	.LASF47:
 7325 0414 67315F78 		.ascii	"g1_xpos\000"
 7325      706F7300 
 7326              	.LASF79:
 7327 041c 696E6974 		.ascii	"initTrack\000"
 7327      54726163 
 7327      6B00
 7328              	.LASF116:
 7329 0426 6E657874 		.ascii	"nextStep\000"
 7329      53746570 
 7329      00
 7330              	.LASF185:
 7331 042f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7331      4320342E 
 7331      392E3320 
 7331      32303135 
 7331      30333033 
 7332 0462 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7332      20726576 
 7332      6973696F 
 7332      6E203232 
 7332      31323230 
 7333 0495 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7333      66756E63 
 7333      74696F6E 
 7333      2D736563 
 7333      74696F6E 
 7334              	.LASF53:
 7335 04bd 67325F73 		.ascii	"g2_speed\000"
 7335      70656564 
 7335      00
 7336              	.LASF44:
 7337 04c6 67305F79 		.ascii	"g0_ypos\000"
 7337      706F7300 
 7338              	.LASF83:
 7339 04ce 72665F63 		.ascii	"rf_char\000"
 7339      68617200 
 7340              	.LASF177:
 7341 04d6 666F6F64 		.ascii	"food_list\000"
 7341      5F6C6973 
 7341      7400
 7342              	.LASF138:
 7343 04e0 42494E5F 		.ascii	"BIN_ENABLED\000"
 7343      454E4142 
 7343      4C454400 
 7344              	.LASF98:
 7345 04ec 72696768 		.ascii	"rightSpeed\000"
 7345      74537065 
 7345      656400
 7346              	.LASF123:
 7347 04f7 74735F73 		.ascii	"ts_speed\000"
 7347      70656564 
 7347      00
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 152


 7348              	.LASF15:
 7349 0500 75696E74 		.ascii	"uint32\000"
 7349      333200
 7350              	.LASF184:
 7351 0507 696E7374 		.ascii	"instructions\000"
 7351      72756374 
 7351      696F6E73 
 7351      00
 7352              	.LASF66:
 7353 0514 636F756E 		.ascii	"countsRight\000"
 7353      74735269 
 7353      67687400 
 7354              	.LASF188:
 7355 0520 64617461 		.ascii	"data_main\000"
 7355      5F6D6169 
 7355      6E00
 7356              	.LASF108:
 7357 052a 636F6E76 		.ascii	"converted_val\000"
 7357      65727465 
 7357      645F7661 
 7357      6C00
 7358              	.LASF179:
 7359 0538 73746172 		.ascii	"start\000"
 7359      7400
 7360              	.LASF38:
 7361 053e 72737369 		.ascii	"rssi\000"
 7361      00
 7362              	.LASF103:
 7363 0543 74726163 		.ascii	"trackLine\000"
 7363      6B4C696E 
 7363      6500
 7364              	.LASF46:
 7365 054d 67305F64 		.ascii	"g0_direction\000"
 7365      69726563 
 7365      74696F6E 
 7365      00
 7366              	.LASF135:
 7367 055a 666C6167 		.ascii	"flag_receive_ADC\000"
 7367      5F726563 
 7367      65697665 
 7367      5F414443 
 7367      00
 7368              	.LASF24:
 7369 056b 53544F50 		.ascii	"STOPPED\000"
 7369      50454400 
 7370              	.LASF84:
 7371 0573 42545F72 		.ascii	"BT_rxInt\000"
 7371      78496E74 
 7371      00
 7372              	.LASF20:
 7373 057c 6C6F6E67 		.ascii	"long double\000"
 7373      20646F75 
 7373      626C6500 
 7374              	.LASF82:
 7375 0588 7278496E 		.ascii	"rxInt\000"
 7375      7400
 7376              	.LASF148:
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 153


 7377 058e 6C656674 		.ascii	"left_duty_cycle\000"
 7377      5F647574 
 7377      795F6379 
 7377      636C6500 
 7378              	.LASF127:
 7379 059e 666C6167 		.ascii	"flag_ts_speed\000"
 7379      5F74735F 
 7379      73706565 
 7379      6400
 7380              	.LASF132:
 7381 05ac 64617461 		.ascii	"dataready_flag\000"
 7381      72656164 
 7381      795F666C 
 7381      616700
 7382              	.LASF158:
 7383 05bb 696E6974 		.ascii	"initial_y_pos\000"
 7383      69616C5F 
 7383      795F706F 
 7383      7300
 7384              	.LASF129:
 7385 05c9 666C6167 		.ascii	"flag_rx\000"
 7385      5F727800 
 7386              	.LASF2:
 7387 05d1 73686F72 		.ascii	"short int\000"
 7387      7420696E 
 7387      7400
 7388              	.LASF136:
 7389 05db 6164635F 		.ascii	"adc_result\000"
 7389      72657375 
 7389      6C7400
 7390              	.LASF76:
 7391 05e6 696E6974 		.ascii	"initTurnU\000"
 7391      5475726E 
 7391      5500
 7392              	.LASF140:
 7393 05f0 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7393      5F63616C 
 7393      635F7768 
 7393      65656C73 
 7393      70656564 
 7394              	.LASF4:
 7395 0605 6C6F6E67 		.ascii	"long int\000"
 7395      20696E74 
 7395      00
 7396              	.LASF75:
 7397 060e 696E6974 		.ascii	"initTurnRight\000"
 7397      5475726E 
 7397      52696768 
 7397      7400
 7398              	.LASF33:
 7399 061c 555F5452 		.ascii	"U_TRACK\000"
 7399      41434B00 
 7400              	.LASF120:
 7401 0624 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7401      52784275 
 7401      66666572 
 7401      00
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 154


 7402              	.LASF111:
 7403 0631 7072696E 		.ascii	"printString\000"
 7403      74537472 
 7403      696E6700 
 7404              	.LASF122:
 7405 063d 74735F75 		.ascii	"ts_update\000"
 7405      70646174 
 7405      6500
 7406              	.LASF31:
 7407 0647 4E4F5F54 		.ascii	"NO_TRACK\000"
 7407      5241434B 
 7407      00
 7408              	.LASF150:
 7409 0650 6C656674 		.ascii	"leftSpeedLimit\000"
 7409      53706565 
 7409      644C696D 
 7409      697400
 7410              	.LASF27:
 7411 065f 54524143 		.ascii	"TRACKING_SOFT\000"
 7411      4B494E47 
 7411      5F534F46 
 7411      5400
 7412              	.LASF63:
 7413 066d 6C656674 		.ascii	"left\000"
 7413      00
 7414              	.LASF153:
 7415 0672 61636375 		.ascii	"accum_dist\000"
 7415      6D5F6469 
 7415      737400
 7416              	.LASF117:
 7417 067d 75736250 		.ascii	"usbPutString\000"
 7417      75745374 
 7417      72696E67 
 7417      00
 7418              	.LASF71:
 7419 068a 7475726E 		.ascii	"turnRight\000"
 7419      52696768 
 7419      7400
 7420              	.LASF48:
 7421 0694 67315F79 		.ascii	"g1_ypos\000"
 7421      706F7300 
 7422              	.LASF87:
 7423 069c 6164635F 		.ascii	"adc_isr\000"
 7423      69737200 
 7424              	.LASF112:
 7425 06a4 72656164 		.ascii	"readFrontSensors\000"
 7425      46726F6E 
 7425      7453656E 
 7425      736F7273 
 7425      00
 7426              	.LASF155:
 7427 06b5 71756164 		.ascii	"quad_per_cm\000"
 7427      5F706572 
 7427      5F636D00 
 7428              	.LASF152:
 7429 06c1 74617267 		.ascii	"target_distance_cm\000"
 7429      65745F64 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 155


 7429      69737461 
 7429      6E63655F 
 7429      636D00
 7430              	.LASF9:
 7431 06d4 73697A65 		.ascii	"sizetype\000"
 7431      74797065 
 7431      00
 7432              	.LASF5:
 7433 06dd 6C6F6E67 		.ascii	"long unsigned int\000"
 7433      20756E73 
 7433      69676E65 
 7433      6420696E 
 7433      7400
 7434              	.LASF56:
 7435 06ef 62797465 		.ascii	"byte_packet\000"
 7435      5F706163 
 7435      6B657400 
 7436              	.LASF12:
 7437 06fb 696E7433 		.ascii	"int32_t\000"
 7437      325F7400 
 7438              	.LASF173:
 7439 0703 7061636B 		.ascii	"packet\000"
 7439      657400
 7440              	.LASF40:
 7441 070a 726F626F 		.ascii	"robot_xpos\000"
 7441      745F7870 
 7441      6F7300
 7442              	.LASF69:
 7443 0715 6272616B 		.ascii	"brakeMotor\000"
 7443      654D6F74 
 7443      6F7200
 7444              	.LASF183:
 7445 0720 666F6F64 		.ascii	"food_length\000"
 7445      5F6C656E 
 7445      67746800 
 7446              	.LASF165:
 7447 072c 656E7472 		.ascii	"entry\000"
 7447      7900
 7448              	.LASF1:
 7449 0732 756E7369 		.ascii	"unsigned char\000"
 7449      676E6564 
 7449      20636861 
 7449      7200
 7450              	.LASF164:
 7451 0740 6C696E65 		.ascii	"line\000"
 7451      00
 7452              	.LASF91:
 7453 0745 53746F70 		.ascii	"Stop_on_line\000"
 7453      5F6F6E5F 
 7453      6C696E65 
 7453      00
 7454              	.LASF121:
 7455 0752 74735F65 		.ascii	"ts_enc\000"
 7455      6E6300
 7456              	.LASF159:
 7457 0759 6272616B 		.ascii	"brakeFlag\000"
 7457      65466C61 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 156


 7457      6700
 7458              	.LASF128:
 7459 0763 666C6167 		.ascii	"flag_ts_display\000"
 7459      5F74735F 
 7459      64697370 
 7459      6C617900 
 7460              	.LASF29:
 7461 0773 73746174 		.ascii	"state\000"
 7461      6500
 7462              	.LASF61:
 7463 0779 72657665 		.ascii	"reverseDirection\000"
 7463      72736544 
 7463      69726563 
 7463      74696F6E 
 7463      00
 7464              	.LASF67:
 7465 078a 6272616B 		.ascii	"brakeLeft\000"
 7465      654C6566 
 7465      7400
 7466              	.LASF163:
 7467 0794 64697370 		.ascii	"displaystring\000"
 7467      6C617973 
 7467      7472696E 
 7467      6700
 7468              	.LASF143:
 7469 07a2 6C617374 		.ascii	"last_quad_count1\000"
 7469      5F717561 
 7469      645F636F 
 7469      756E7431 
 7469      00
 7470              	.LASF144:
 7471 07b3 6C617374 		.ascii	"last_quad_count2\000"
 7471      5F717561 
 7471      645F636F 
 7471      756E7432 
 7471      00
 7472              	.LASF180:
 7473 07c4 64657374 		.ascii	"destination\000"
 7473      696E6174 
 7473      696F6E00 
 7474              	.LASF118:
 7475 07d0 75736250 		.ascii	"usbPutChar\000"
 7475      75744368 
 7475      617200
 7476              	.LASF0:
 7477 07db 7369676E 		.ascii	"signed char\000"
 7477      65642063 
 7477      68617200 
 7478              	.LASF3:
 7479 07e7 73686F72 		.ascii	"short unsigned int\000"
 7479      7420756E 
 7479      7369676E 
 7479      65642069 
 7479      6E7400
 7480              	.LASF42:
 7481 07fa 726F626F 		.ascii	"robot_orientation\000"
 7481      745F6F72 
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 157


 7481      69656E74 
 7481      6174696F 
 7481      6E00
 7482              	.LASF35:
 7483 080c 51554144 		.ascii	"QUAD_STOP\000"
 7483      5F53544F 
 7483      5000
 7484              	.LASF114:
 7485 0816 6D61696E 		.ascii	"main\000"
 7485      00
 7486              	.LASF86:
 7487 081b 42545F74 		.ascii	"BT_txInt\000"
 7487      78496E74 
 7487      00
 7488              	.LASF102:
 7489 0824 6E657874 		.ascii	"nextSpeed\000"
 7489      53706565 
 7489      6400
 7490              	.LASF89:
 7491 082e 64697374 		.ascii	"dist\000"
 7491      00
 7492              	.LASF13:
 7493 0833 75696E74 		.ascii	"uint8\000"
 7493      3800
 7494              	.LASF19:
 7495 0839 646F7562 		.ascii	"double\000"
 7495      6C6500
 7496              	.LASF149:
 7497 0840 72696768 		.ascii	"right_duty_cycle\000"
 7497      745F6475 
 7497      74795F63 
 7497      79636C65 
 7497      00
 7498              	.LASF36:
 7499 0851 52465F53 		.ascii	"RF_STOP\000"
 7499      544F5000 
 7500              	.LASF60:
 7501 0859 68616E64 		.ascii	"handle_rx_binary\000"
 7501      6C655F72 
 7501      785F6269 
 7501      6E617279 
 7501      00
 7502              	.LASF110:
 7503 086a 7072696E 		.ascii	"print_RF\000"
 7503      745F5246 
 7503      00
 7504              	.LASF28:
 7505 0873 55545552 		.ascii	"UTURN\000"
 7505      4E00
 7506              	.LASF43:
 7507 0879 67305F78 		.ascii	"g0_xpos\000"
 7507      706F7300 
 7508              	.LASF100:
 7509 0881 7363616C 		.ascii	"scalingRight\000"
 7509      696E6752 
 7509      69676874 
 7509      00
ARM GAS  C:\Users\tant836\AppData\Local\Temp\ccLK9FVA.s 			page 158


 7510              	.LASF131:
 7511 088e 666C6167 		.ascii	"flag_KB_string\000"
 7511      5F4B425F 
 7511      73747269 
 7511      6E6700
 7512              	.LASF49:
 7513 089d 67315F73 		.ascii	"g1_speed\000"
 7513      70656564 
 7513      00
 7514              	.LASF187:
 7515 08a6 443A5C43 		.ascii	"D:\\CS301_1\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 7515      53333031 
 7515      5F315C43 
 7515      53333031 
 7515      2D546561 
 7516              	.LASF186:
 7517 08d3 2E5C6D61 		.ascii	".\\main.c\000"
 7517      696E2E63 
 7517      00
 7518              	.LASF157:
 7519 08dc 696E6974 		.ascii	"initial_x_pos\000"
 7519      69616C5F 
 7519      785F706F 
 7519      7300
 7520              	.LASF68:
 7521 08ea 6272616B 		.ascii	"brakeRight\000"
 7521      65526967 
 7521      687400
 7522              	.LASF80:
 7523 08f5 696E6974 		.ascii	"initTrackU\000"
 7523      54726163 
 7523      6B5500
 7524              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
