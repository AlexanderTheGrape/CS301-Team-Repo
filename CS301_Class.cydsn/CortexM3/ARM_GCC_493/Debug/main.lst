ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	reached_target
 220              		.type	reached_target, %object
 221              		.size	reached_target, 1
 222              	reached_target:
 223 0034 00       		.space	1
 224              		.global	overshot_target
 225              		.type	overshot_target, %object
 226              		.size	overshot_target, 1
 227              	overshot_target:
 228 0035 00       		.space	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 5


 229              		.global	quad_per_cm
 230              		.data
 231              		.align	2
 232              		.type	quad_per_cm, %object
 233              		.size	quad_per_cm, 4
 234              	quad_per_cm:
 235 0004 F0A73241 		.word	1093838832
 236              		.global	initial_pos_valid
 237              		.bss
 238              		.type	initial_pos_valid, %object
 239              		.size	initial_pos_valid, 1
 240              	initial_pos_valid:
 241 0036 00       		.space	1
 242              		.global	initial_x_pos
 243 0037 00       		.align	1
 244              		.type	initial_x_pos, %object
 245              		.size	initial_x_pos, 2
 246              	initial_x_pos:
 247 0038 0000     		.space	2
 248              		.global	initial_y_pos
 249              		.align	1
 250              		.type	initial_y_pos, %object
 251              		.size	initial_y_pos, 2
 252              	initial_y_pos:
 253 003a 0000     		.space	2
 254              		.comm	brakeFlag,1,1
 255              		.global	portOpen
 256              		.data
 257              		.type	portOpen, %object
 258              		.size	portOpen, 1
 259              	portOpen:
 260 0008 01       		.byte	1
 261              		.comm	frontSensors,5,4
 262              		.comm	leftOn,1,1
 263              		.comm	rightOn,1,1
 264              		.comm	min_turn_quad,2,2
 265              		.comm	max_turn_quad,2,2
 266              		.comm	prevVoltage,2,2
 267              		.comm	prevVoltage2,2,2
 268              		.global	displaystring
 269 0009 000000   		.align	2
 270              		.type	displaystring, %object
 271              		.size	displaystring, 64
 272              	displaystring:
 273 000c 43533330 		.ascii	"CS301 2016\012\000"
 273      31203230 
 273      31360A00 
 274 0018 00000000 		.space	52
 274      00000000 
 274      00000000 
 274      00000000 
 274      00000000 
 275              		.comm	line,64,4
 276              		.comm	entry,64,4
 277              		.comm	usbBuffer,64,4
 278              		.comm	buffer_state,32,4
 279              		.comm	system_state,32,4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 6


 280              		.global	prev_movement_state
 281              		.type	prev_movement_state, %object
 282              		.size	prev_movement_state, 1
 283              	prev_movement_state:
 284 004c 03       		.byte	3
 285              		.global	movement_state
 286              		.type	movement_state, %object
 287              		.size	movement_state, 1
 288              	movement_state:
 289 004d 03       		.byte	3
 290              		.global	track_mode
 291              		.bss
 292              		.type	track_mode, %object
 293              		.size	track_mode, 1
 294              	track_mode:
 295 003c 00       		.space	1
 296              		.global	byteCount
 297              		.type	byteCount, %object
 298              		.size	byteCount, 1
 299              	byteCount:
 300 003d 00       		.space	1
 301              		.comm	packet,2,4
 302              		.global	speed
 303              		.data
 304 004e 0000     		.align	3
 305              		.type	speed, %object
 306              		.size	speed, 8
 307              	speed:
 308 0050 00000000 		.word	0
 309 0054 00002E40 		.word	1076756480
 310              		.comm	tracked_direction,4,4
 311              		.global	instructions
 312              		.bss
 313 003e 0000     		.align	2
 314              		.type	instructions, %object
 315              		.size	instructions, 600
 316              	instructions:
 317 0040 00000000 		.space	600
 317      00000000 
 317      00000000 
 317      00000000 
 317      00000000 
 318              		.global	instructionCount
 319              		.align	1
 320              		.type	instructionCount, %object
 321              		.size	instructionCount, 2
 322              	instructionCount:
 323 0298 0000     		.space	2
 324              		.global	instructionLength
 325              		.align	1
 326              		.type	instructionLength, %object
 327              		.size	instructionLength, 2
 328              	instructionLength:
 329 029a 0000     		.space	2
 330              		.global	sensorsDisabled
 331              		.align	2
 332              		.type	sensorsDisabled, %object
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 7


 333              		.size	sensorsDisabled, 4
 334              	sensorsDisabled:
 335 029c 00000000 		.space	4
 336              		.global	robot_direction
 337              		.data
 338              		.align	2
 339              		.type	robot_direction, %object
 340              		.size	robot_direction, 4
 341              	robot_direction:
 342 0058 02000000 		.word	2
 343              		.global	path
 344              		.bss
 345              		.align	2
 346              		.type	path, %object
 347              		.size	path, 7200
 348              	path:
 349 02a0 00000000 		.space	7200
 349      00000000 
 349      00000000 
 349      00000000 
 349      00000000 
 350              		.global	start
 351              		.data
 352              		.align	2
 353              		.type	start, %object
 354              		.size	start, 8
 355              	start:
 356 005c 01000000 		.word	1
 357 0060 01000000 		.word	1
 358              		.global	destination
 359              		.align	2
 360              		.type	destination, %object
 361              		.size	destination, 8
 362              	destination:
 363 0064 0E000000 		.word	14
 364 0068 12000000 		.word	18
 365              		.global	map
 366              		.align	2
 367              		.type	map, %object
 368              		.size	map, 1140
 369              	map:
 370 006c 01000000 		.word	1
 371 0070 01000000 		.word	1
 372 0074 01000000 		.word	1
 373 0078 01000000 		.word	1
 374 007c 01000000 		.word	1
 375 0080 01000000 		.word	1
 376 0084 01000000 		.word	1
 377 0088 01000000 		.word	1
 378 008c 01000000 		.word	1
 379 0090 01000000 		.word	1
 380 0094 01000000 		.word	1
 381 0098 01000000 		.word	1
 382 009c 01000000 		.word	1
 383 00a0 01000000 		.word	1
 384 00a4 01000000 		.word	1
 385 00a8 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 8


 386 00ac 01000000 		.word	1
 387 00b0 01000000 		.word	1
 388 00b4 01000000 		.word	1
 389 00b8 01000000 		.word	1
 390 00bc 00000000 		.word	0
 391 00c0 00000000 		.word	0
 392 00c4 00000000 		.word	0
 393 00c8 00000000 		.word	0
 394 00cc 00000000 		.word	0
 395 00d0 00000000 		.word	0
 396 00d4 00000000 		.word	0
 397 00d8 00000000 		.word	0
 398 00dc 00000000 		.word	0
 399 00e0 00000000 		.word	0
 400 00e4 00000000 		.word	0
 401 00e8 00000000 		.word	0
 402 00ec 00000000 		.word	0
 403 00f0 00000000 		.word	0
 404 00f4 00000000 		.word	0
 405 00f8 00000000 		.word	0
 406 00fc 00000000 		.word	0
 407 0100 01000000 		.word	1
 408 0104 01000000 		.word	1
 409 0108 01000000 		.word	1
 410 010c 00000000 		.word	0
 411 0110 01000000 		.word	1
 412 0114 01000000 		.word	1
 413 0118 01000000 		.word	1
 414 011c 01000000 		.word	1
 415 0120 01000000 		.word	1
 416 0124 01000000 		.word	1
 417 0128 01000000 		.word	1
 418 012c 01000000 		.word	1
 419 0130 01000000 		.word	1
 420 0134 01000000 		.word	1
 421 0138 00000000 		.word	0
 422 013c 01000000 		.word	1
 423 0140 01000000 		.word	1
 424 0144 00000000 		.word	0
 425 0148 01000000 		.word	1
 426 014c 01000000 		.word	1
 427 0150 01000000 		.word	1
 428 0154 01000000 		.word	1
 429 0158 00000000 		.word	0
 430 015c 01000000 		.word	1
 431 0160 00000000 		.word	0
 432 0164 00000000 		.word	0
 433 0168 00000000 		.word	0
 434 016c 00000000 		.word	0
 435 0170 01000000 		.word	1
 436 0174 01000000 		.word	1
 437 0178 00000000 		.word	0
 438 017c 00000000 		.word	0
 439 0180 00000000 		.word	0
 440 0184 00000000 		.word	0
 441 0188 01000000 		.word	1
 442 018c 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 9


 443 0190 00000000 		.word	0
 444 0194 01000000 		.word	1
 445 0198 01000000 		.word	1
 446 019c 01000000 		.word	1
 447 01a0 01000000 		.word	1
 448 01a4 00000000 		.word	0
 449 01a8 01000000 		.word	1
 450 01ac 00000000 		.word	0
 451 01b0 01000000 		.word	1
 452 01b4 01000000 		.word	1
 453 01b8 00000000 		.word	0
 454 01bc 01000000 		.word	1
 455 01c0 01000000 		.word	1
 456 01c4 01000000 		.word	1
 457 01c8 01000000 		.word	1
 458 01cc 01000000 		.word	1
 459 01d0 00000000 		.word	0
 460 01d4 01000000 		.word	1
 461 01d8 01000000 		.word	1
 462 01dc 00000000 		.word	0
 463 01e0 01000000 		.word	1
 464 01e4 01000000 		.word	1
 465 01e8 01000000 		.word	1
 466 01ec 01000000 		.word	1
 467 01f0 00000000 		.word	0
 468 01f4 01000000 		.word	1
 469 01f8 00000000 		.word	0
 470 01fc 01000000 		.word	1
 471 0200 01000000 		.word	1
 472 0204 00000000 		.word	0
 473 0208 00000000 		.word	0
 474 020c 00000000 		.word	0
 475 0210 00000000 		.word	0
 476 0214 00000000 		.word	0
 477 0218 00000000 		.word	0
 478 021c 00000000 		.word	0
 479 0220 01000000 		.word	1
 480 0224 01000000 		.word	1
 481 0228 00000000 		.word	0
 482 022c 01000000 		.word	1
 483 0230 01000000 		.word	1
 484 0234 01000000 		.word	1
 485 0238 01000000 		.word	1
 486 023c 00000000 		.word	0
 487 0240 00000000 		.word	0
 488 0244 00000000 		.word	0
 489 0248 00000000 		.word	0
 490 024c 00000000 		.word	0
 491 0250 00000000 		.word	0
 492 0254 01000000 		.word	1
 493 0258 01000000 		.word	1
 494 025c 01000000 		.word	1
 495 0260 01000000 		.word	1
 496 0264 01000000 		.word	1
 497 0268 00000000 		.word	0
 498 026c 01000000 		.word	1
 499 0270 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 10


 500 0274 00000000 		.word	0
 501 0278 01000000 		.word	1
 502 027c 01000000 		.word	1
 503 0280 01000000 		.word	1
 504 0284 01000000 		.word	1
 505 0288 01000000 		.word	1
 506 028c 01000000 		.word	1
 507 0290 01000000 		.word	1
 508 0294 01000000 		.word	1
 509 0298 01000000 		.word	1
 510 029c 00000000 		.word	0
 511 02a0 01000000 		.word	1
 512 02a4 01000000 		.word	1
 513 02a8 01000000 		.word	1
 514 02ac 00000000 		.word	0
 515 02b0 00000000 		.word	0
 516 02b4 00000000 		.word	0
 517 02b8 01000000 		.word	1
 518 02bc 01000000 		.word	1
 519 02c0 00000000 		.word	0
 520 02c4 01000000 		.word	1
 521 02c8 01000000 		.word	1
 522 02cc 01000000 		.word	1
 523 02d0 01000000 		.word	1
 524 02d4 00000000 		.word	0
 525 02d8 00000000 		.word	0
 526 02dc 00000000 		.word	0
 527 02e0 00000000 		.word	0
 528 02e4 00000000 		.word	0
 529 02e8 00000000 		.word	0
 530 02ec 01000000 		.word	1
 531 02f0 01000000 		.word	1
 532 02f4 01000000 		.word	1
 533 02f8 00000000 		.word	0
 534 02fc 01000000 		.word	1
 535 0300 00000000 		.word	0
 536 0304 01000000 		.word	1
 537 0308 01000000 		.word	1
 538 030c 00000000 		.word	0
 539 0310 01000000 		.word	1
 540 0314 01000000 		.word	1
 541 0318 01000000 		.word	1
 542 031c 01000000 		.word	1
 543 0320 00000000 		.word	0
 544 0324 01000000 		.word	1
 545 0328 00000000 		.word	0
 546 032c 01000000 		.word	1
 547 0330 01000000 		.word	1
 548 0334 00000000 		.word	0
 549 0338 01000000 		.word	1
 550 033c 01000000 		.word	1
 551 0340 01000000 		.word	1
 552 0344 00000000 		.word	0
 553 0348 01000000 		.word	1
 554 034c 00000000 		.word	0
 555 0350 01000000 		.word	1
 556 0354 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 11


 557 0358 00000000 		.word	0
 558 035c 01000000 		.word	1
 559 0360 01000000 		.word	1
 560 0364 01000000 		.word	1
 561 0368 01000000 		.word	1
 562 036c 00000000 		.word	0
 563 0370 01000000 		.word	1
 564 0374 00000000 		.word	0
 565 0378 01000000 		.word	1
 566 037c 01000000 		.word	1
 567 0380 00000000 		.word	0
 568 0384 01000000 		.word	1
 569 0388 01000000 		.word	1
 570 038c 01000000 		.word	1
 571 0390 00000000 		.word	0
 572 0394 01000000 		.word	1
 573 0398 00000000 		.word	0
 574 039c 01000000 		.word	1
 575 03a0 01000000 		.word	1
 576 03a4 00000000 		.word	0
 577 03a8 01000000 		.word	1
 578 03ac 01000000 		.word	1
 579 03b0 01000000 		.word	1
 580 03b4 01000000 		.word	1
 581 03b8 00000000 		.word	0
 582 03bc 01000000 		.word	1
 583 03c0 00000000 		.word	0
 584 03c4 00000000 		.word	0
 585 03c8 00000000 		.word	0
 586 03cc 00000000 		.word	0
 587 03d0 00000000 		.word	0
 588 03d4 00000000 		.word	0
 589 03d8 00000000 		.word	0
 590 03dc 00000000 		.word	0
 591 03e0 01000000 		.word	1
 592 03e4 00000000 		.word	0
 593 03e8 00000000 		.word	0
 594 03ec 00000000 		.word	0
 595 03f0 00000000 		.word	0
 596 03f4 01000000 		.word	1
 597 03f8 01000000 		.word	1
 598 03fc 01000000 		.word	1
 599 0400 01000000 		.word	1
 600 0404 00000000 		.word	0
 601 0408 01000000 		.word	1
 602 040c 01000000 		.word	1
 603 0410 01000000 		.word	1
 604 0414 01000000 		.word	1
 605 0418 01000000 		.word	1
 606 041c 01000000 		.word	1
 607 0420 01000000 		.word	1
 608 0424 01000000 		.word	1
 609 0428 01000000 		.word	1
 610 042c 01000000 		.word	1
 611 0430 00000000 		.word	0
 612 0434 01000000 		.word	1
 613 0438 01000000 		.word	1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 12


 614 043c 00000000 		.word	0
 615 0440 01000000 		.word	1
 616 0444 01000000 		.word	1
 617 0448 01000000 		.word	1
 618 044c 00000000 		.word	0
 619 0450 00000000 		.word	0
 620 0454 00000000 		.word	0
 621 0458 00000000 		.word	0
 622 045c 00000000 		.word	0
 623 0460 00000000 		.word	0
 624 0464 00000000 		.word	0
 625 0468 00000000 		.word	0
 626 046c 00000000 		.word	0
 627 0470 00000000 		.word	0
 628 0474 00000000 		.word	0
 629 0478 00000000 		.word	0
 630 047c 00000000 		.word	0
 631 0480 00000000 		.word	0
 632 0484 00000000 		.word	0
 633 0488 00000000 		.word	0
 634 048c 00000000 		.word	0
 635 0490 01000000 		.word	1
 636 0494 01000000 		.word	1
 637 0498 01000000 		.word	1
 638 049c 01000000 		.word	1
 639 04a0 01000000 		.word	1
 640 04a4 01000000 		.word	1
 641 04a8 01000000 		.word	1
 642 04ac 01000000 		.word	1
 643 04b0 01000000 		.word	1
 644 04b4 01000000 		.word	1
 645 04b8 01000000 		.word	1
 646 04bc 01000000 		.word	1
 647 04c0 01000000 		.word	1
 648 04c4 01000000 		.word	1
 649 04c8 01000000 		.word	1
 650 04cc 01000000 		.word	1
 651 04d0 01000000 		.word	1
 652 04d4 01000000 		.word	1
 653 04d8 01000000 		.word	1
 654 04dc 01000000 		.word	1
 655              		.global	food_list
 656              		.align	2
 657              		.type	food_list, %object
 658              		.size	food_list, 48
 659              	food_list:
 660 04e0 03000000 		.word	3
 661 04e4 06000000 		.word	6
 662 04e8 05000000 		.word	5
 663 04ec 0A000000 		.word	10
 664 04f0 0D000000 		.word	13
 665 04f4 09000000 		.word	9
 666 04f8 0D000000 		.word	13
 667 04fc 10000000 		.word	16
 668 0500 01000000 		.word	1
 669 0504 11000000 		.word	17
 670 0508 00000000 		.space	8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 13


 670      00000000 
 671              		.global	food_length
 672              		.align	2
 673              		.type	food_length, %object
 674              		.size	food_length, 4
 675              	food_length:
 676 0510 05000000 		.word	5
 677 0514 00000000 		.section	.text.BT_txInt,"ax",%progbits
 678              		.align	2
 679              		.global	BT_txInt
 680              		.thumb
 681              		.thumb_func
 682              		.type	BT_txInt, %function
 683              	BT_txInt:
 684              	.LFB63:
 685              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <stdio.h>
  13:.\main.c      **** #include <string.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** #include <project.h>
  16:.\main.c      **** #include <math.h>
  17:.\main.c      **** //* ========================================
  18:.\main.c      **** #include "defines.h"
  19:.\main.c      **** #include "vars.h"
  20:.\main.c      **** #include "pathfinder.h"
  21:.\main.c      **** //* ========================================
  22:.\main.c      **** void usbPutString(char *s);
  23:.\main.c      **** void usbPutChar(char c);
  24:.\main.c      **** //void handle_usb();
  25:.\main.c      **** //* ========================================
  26:.\main.c      **** 
  27:.\main.c      **** #define QUAD_RATIO 0.99556
  28:.\main.c      **** #define TURN_OFFSET 138
  29:.\main.c      **** #define U_OFFSET 120
  30:.\main.c      **** 
  31:.\main.c      **** #define U_DEADZONE 90000
  32:.\main.c      **** #define TURN_DEADZONE 50000
  33:.\main.c      **** #define S_DEADZONE 10000
  34:.\main.c      **** #define QUAD_PER_UNIT 144
  35:.\main.c      **** 
  36:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  37:.\main.c      **** uint16 instructionCount = 0;
  38:.\main.c      **** uint16 instructionLength = 0;
  39:.\main.c      **** uint32_t sensorsDisabled = 0;
  40:.\main.c      **** 
  41:.\main.c      **** uint32_t robot_direction = 2;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 14


  42:.\main.c      **** 
  43:.\main.c      **** uint32_t path[DEFAULT_ARRAY_SIZE][3] = {0};
  44:.\main.c      **** uint32_t start[2] = {1, 1};//(y, x) array starts at 0
  45:.\main.c      **** uint32_t destination[2] = {14, 18};//(y, x) DON'T HARDCODE THIS
  46:.\main.c      **** 
  47:.\main.c      **** // map default
  48:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  49:.\main.c      **** //                    {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  50:.\main.c      **** //                    {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  51:.\main.c      **** //                    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  52:.\main.c      **** //                    {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  53:.\main.c      **** //                    {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  54:.\main.c      **** //                    {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  55:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  56:.\main.c      **** //                    {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  57:.\main.c      **** //                    {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  58:.\main.c      **** //                    {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  59:.\main.c      **** //                    {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  60:.\main.c      **** //                    {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  61:.\main.c      **** //                    {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  62:.\main.c      **** //                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  63:.\main.c      **** 
  64:.\main.c      **** //practice map 1
  65:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
  66:.\main.c      **** ////practice map 2
  67:.\main.c      **** uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  68:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  69:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  70:.\main.c      ****                         {1,1,0,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1},
  71:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1},
  72:.\main.c      ****                         {1,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1},
  73:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1},
  74:.\main.c      ****                         {1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,0,1,1},
  75:.\main.c      ****                         {1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1},
  76:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  77:.\main.c      ****                         {1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1},
  78:.\main.c      ****                         {1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1},
  79:.\main.c      ****                         {1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
  80:.\main.c      ****                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
  81:.\main.c      ****                         {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  82:.\main.c      **** 
  83:.\main.c      **** //practice map 3
  84:.\main.c      **** //uint32_t map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  85:.\main.c      **** 
  86:.\main.c      **** //first number is the y coord, second is x
  87:.\main.c      **** //first number is row, second column
  88:.\main.c      **** 
  89:.\main.c      **** //uint32_t food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};//???
  90:.\main.c      **** //uint32_t food_list[6][2] = {{5, 9},{5,3}, {13, 2}}; //???
  91:.\main.c      **** //uint32_t food_list[6][2] ={ //default
  92:.\main.c      **** //{5, 7},
  93:.\main.c      **** //{5, 17},
  94:.\main.c      **** //{12, 13},
  95:.\main.c      **** //{5, 17},
  96:.\main.c      **** //{9, 3}
  97:.\main.c      **** //};
  98:.\main.c      **** //uint32_t food_list[6][2]= {{1,10},{1,17},{13,16},{7,9},{13,1}}; //practice map 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 15


  99:.\main.c      **** //practice map 2
 100:.\main.c      **** uint32_t food_list[6][2]= {{3,6},{5,10},{13,9},{13,16},{1,17}};
 101:.\main.c      **** 
 102:.\main.c      **** //practice map 3
 103:.\main.c      **** //uint32_t food_list[6][2]= {{16,11},{3,12},{3,5},{9,7},{5,9}};
 104:.\main.c      **** 
 105:.\main.c      **** uint32_t food_length = 5;
 106:.\main.c      **** 
 107:.\main.c      **** void changeToRF();
 108:.\main.c      **** void changeToBT();
 109:.\main.c      **** void brakeMotor();
 110:.\main.c      **** void driveForwards();
 111:.\main.c      **** void initTurnLeft();
 112:.\main.c      **** void initTurnRight();
 113:.\main.c      **** void inittrackLineZ();
 114:.\main.c      **** void trackLineU();
 115:.\main.c      **** void trackLine();
 116:.\main.c      **** void trackLineZ();
 117:.\main.c      **** void initTrackU();
 118:.\main.c      **** void turnLeft();
 119:.\main.c      **** void turnRight();
 120:.\main.c      **** void initForward();
 121:.\main.c      **** void initTurnU();
 122:.\main.c      **** void turnU();
 123:.\main.c      **** void initBrake();
 124:.\main.c      **** void print_ADC();
 125:.\main.c      **** void Quad_Dec_response();
 126:.\main.c      **** void handle_rx_binary();
 127:.\main.c      **** void readFrontSensors();
 128:.\main.c      **** void print_RF();
 129:.\main.c      **** 
 130:.\main.c      **** /*--------------------------------------------ISRs-----------------------------------------------*/
 131:.\main.c      **** //BT
 132:.\main.c      **** CY_ISR(BT_txInt)
 133:.\main.c      **** {
 686              		.loc 1 133 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691 0000 80B4     		push	{r7}
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 7, -4
 694 0002 00AF     		add	r7, sp, #0
 695              		.cfi_def_cfa_register 7
 134:.\main.c      ****     
 135:.\main.c      **** }
 696              		.loc 1 135 0
 697 0004 BD46     		mov	sp, r7
 698              		.cfi_def_cfa_register 13
 699              		@ sp needed
 700 0006 5DF8047B 		ldr	r7, [sp], #4
 701              		.cfi_restore 7
 702              		.cfi_def_cfa_offset 0
 703 000a 7047     		bx	lr
 704              		.cfi_endproc
 705              	.LFE63:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 16


 706              		.size	BT_txInt, .-BT_txInt
 707              		.section	.text.adc_isr,"ax",%progbits
 708              		.align	2
 709              		.global	adc_isr
 710              		.thumb
 711              		.thumb_func
 712              		.type	adc_isr, %function
 713              	adc_isr:
 714              	.LFB64:
 136:.\main.c      **** 
 137:.\main.c      **** //ADC:
 138:.\main.c      **** CY_ISR (adc_isr)
 139:.\main.c      **** {
 715              		.loc 1 139 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 1, uses_anonymous_args = 0
 719 0000 80B5     		push	{r7, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 7, -8
 722              		.cfi_offset 14, -4
 723 0002 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 140:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 141:.\main.c      ****     adc_result = ADC_GetResult16();
 725              		.loc 1 141 0
 726 0004 FFF7FEFF 		bl	ADC_GetResult16
 727 0008 0346     		mov	r3, r0
 728 000a 1A46     		mov	r2, r3
 729 000c 044B     		ldr	r3, .L3
 730 000e 1A80     		strh	r2, [r3]	@ movhi
 142:.\main.c      ****     flag_receive_ADC = 1;
 731              		.loc 1 142 0
 732 0010 044B     		ldr	r3, .L3+4
 733 0012 0122     		movs	r2, #1
 734 0014 1A70     		strb	r2, [r3]
 143:.\main.c      ****     flag_print_rf = 1;
 735              		.loc 1 143 0
 736 0016 044B     		ldr	r3, .L3+8
 737 0018 0122     		movs	r2, #1
 738 001a 1A70     		strb	r2, [r3]
 144:.\main.c      ****     //LED_Write(~LED_Read());
 145:.\main.c      **** }
 739              		.loc 1 145 0
 740 001c 80BD     		pop	{r7, pc}
 741              	.L4:
 742 001e 00BF     		.align	2
 743              	.L3:
 744 0020 00000000 		.word	adc_result
 745 0024 00000000 		.word	flag_receive_ADC
 746 0028 00000000 		.word	flag_print_rf
 747              		.cfi_endproc
 748              	.LFE64:
 749              		.size	adc_isr, .-adc_isr
 750              		.global	__aeabi_i2d
 751              		.global	__aeabi_dsub
 752              		.global	__aeabi_dcmpge
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 17


 753              		.global	__aeabi_dadd
 754              		.section	.text.isr_quad1,"ax",%progbits
 755              		.align	2
 756              		.global	isr_quad1
 757              		.thumb
 758              		.thumb_func
 759              		.type	isr_quad1, %function
 760              	isr_quad1:
 761              	.LFB65:
 146:.\main.c      **** 
 147:.\main.c      **** CY_ISR (isr_quad1)
 148:.\main.c      **** {
 762              		.loc 1 148 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 B0B5     		push	{r4, r5, r7, lr}
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 4, -16
 769              		.cfi_offset 5, -12
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 149:.\main.c      ****     
 150:.\main.c      ****     //LED_Write(~LED_Read());
 151:.\main.c      ****     last_quad_count1 = quad_count1;
 774              		.loc 1 151 0
 775 0004 564B     		ldr	r3, .L12
 776 0006 1A88     		ldrh	r2, [r3]
 777 0008 564B     		ldr	r3, .L12+4
 778 000a 1A80     		strh	r2, [r3]	@ movhi
 152:.\main.c      ****     last_quad_count2 = quad_count2;
 779              		.loc 1 152 0
 780 000c 564B     		ldr	r3, .L12+8
 781 000e 1A88     		ldrh	r2, [r3]
 782 0010 564B     		ldr	r3, .L12+12
 783 0012 1A80     		strh	r2, [r3]	@ movhi
 153:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 784              		.loc 1 153 0
 785 0014 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 786 0018 0346     		mov	r3, r0
 787 001a 1A46     		mov	r2, r3
 788 001c 504B     		ldr	r3, .L12
 789 001e 1A80     		strh	r2, [r3]	@ movhi
 154:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 790              		.loc 1 154 0
 791 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 792 0024 0346     		mov	r3, r0
 793 0026 1A46     		mov	r2, r3
 794 0028 4F4B     		ldr	r3, .L12+8
 795 002a 1A80     		strh	r2, [r3]	@ movhi
 155:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
 796              		.loc 1 155 0
 797 002c 4C4B     		ldr	r3, .L12
 798 002e 1B88     		ldrh	r3, [r3]
 799 0030 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 18


 800 0032 4C4B     		ldr	r3, .L12+4
 801 0034 1B88     		ldrh	r3, [r3]
 802 0036 9BB2     		uxth	r3, r3
 803 0038 D31A     		subs	r3, r2, r3
 804 003a 9BB2     		uxth	r3, r3
 805 003c 9AB2     		uxth	r2, r3
 806 003e 4C4B     		ldr	r3, .L12+16
 807 0040 1A80     		strh	r2, [r3]	@ movhi
 156:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 808              		.loc 1 156 0
 809 0042 494B     		ldr	r3, .L12+8
 810 0044 1B88     		ldrh	r3, [r3]
 811 0046 9AB2     		uxth	r2, r3
 812 0048 484B     		ldr	r3, .L12+12
 813 004a 1B88     		ldrh	r3, [r3]
 814 004c 9BB2     		uxth	r3, r3
 815 004e D31A     		subs	r3, r2, r3
 816 0050 9BB2     		uxth	r3, r3
 817 0052 9AB2     		uxth	r2, r3
 818 0054 474B     		ldr	r3, .L12+20
 819 0056 1A80     		strh	r2, [r3]	@ movhi
 157:.\main.c      ****     
 158:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && movement_st
 820              		.loc 1 158 0
 821 0058 414B     		ldr	r3, .L12
 822 005a 1B88     		ldrh	r3, [r3]
 823 005c 1BB2     		sxth	r3, r3
 824 005e 002B     		cmp	r3, #0
 825 0060 B8BF     		it	lt
 826 0062 5B42     		rsblt	r3, r3, #0
 827 0064 40F6B832 		movw	r2, #3000
 828 0068 9342     		cmp	r3, r2
 829 006a 17DD     		ble	.L6
 830              		.loc 1 158 0 is_stmt 0 discriminator 1
 831 006c 424B     		ldr	r3, .L12+24
 832 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 0070 012B     		cmp	r3, #1
 834 0072 13D0     		beq	.L6
 835              		.loc 1 158 0 discriminator 2
 836 0074 404B     		ldr	r3, .L12+24
 837 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 838 0078 022B     		cmp	r3, #2
 839 007a 0FD0     		beq	.L6
 840              		.loc 1 158 0 discriminator 3
 841 007c 3E4B     		ldr	r3, .L12+24
 842 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 843 0080 072B     		cmp	r3, #7
 844 0082 0BD0     		beq	.L6
 159:.\main.c      ****     {
 160:.\main.c      ****         QuadDec_M1_SetCounter(0);
 845              		.loc 1 160 0 is_stmt 1
 846 0084 0020     		movs	r0, #0
 847 0086 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 161:.\main.c      ****         QuadDec_M2_SetCounter(0);
 848              		.loc 1 161 0
 849 008a 0020     		movs	r0, #0
 850 008c FFF7FEFF 		bl	QuadDec_M2_SetCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 19


 162:.\main.c      ****         quad_count1 = 0;
 851              		.loc 1 162 0
 852 0090 334B     		ldr	r3, .L12
 853 0092 0022     		movs	r2, #0
 854 0094 1A80     		strh	r2, [r3]	@ movhi
 163:.\main.c      ****         quad_count2 = 0;
 855              		.loc 1 163 0
 856 0096 344B     		ldr	r3, .L12+8
 857 0098 0022     		movs	r2, #0
 858 009a 1A80     		strh	r2, [r3]	@ movhi
 859              	.L6:
 164:.\main.c      ****     }
 165:.\main.c      **** 
 166:.\main.c      ****     flag_calc_wheelspeed = 1;
 860              		.loc 1 166 0
 861 009c 374B     		ldr	r3, .L12+28
 862 009e 0122     		movs	r2, #1
 863 00a0 1A70     		strb	r2, [r3]
 167:.\main.c      ****     
 168:.\main.c      ****     
 169:.\main.c      ****     if(track_mode == DEST_TEST && movement_state == TRACKING_SOFT)
 864              		.loc 1 169 0
 865 00a2 374B     		ldr	r3, .L12+32
 866 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 867 00a6 062B     		cmp	r3, #6
 868 00a8 58D1     		bne	.L5
 869              		.loc 1 169 0 is_stmt 0 discriminator 1
 870 00aa 334B     		ldr	r3, .L12+24
 871 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 00ae 062B     		cmp	r3, #6
 873 00b0 54D1     		bne	.L5
 170:.\main.c      ****     {
 171:.\main.c      ****         //track the distance
 172:.\main.c      ****         accum_dist -= quad_diff1;
 874              		.loc 1 172 0 is_stmt 1
 875 00b2 344B     		ldr	r3, .L12+36
 876 00b4 1B88     		ldrh	r3, [r3]
 877 00b6 9AB2     		uxth	r2, r3
 878 00b8 2D4B     		ldr	r3, .L12+16
 879 00ba 1B88     		ldrh	r3, [r3]
 880 00bc 9BB2     		uxth	r3, r3
 881 00be D31A     		subs	r3, r2, r3
 882 00c0 9BB2     		uxth	r3, r3
 883 00c2 9AB2     		uxth	r2, r3
 884 00c4 2F4B     		ldr	r3, .L12+36
 885 00c6 1A80     		strh	r2, [r3]	@ movhi
 173:.\main.c      ****         if(accum_dist >= (target_distance_quad - QUAD_PER_UNIT*0.5))
 886              		.loc 1 173 0
 887 00c8 2E4B     		ldr	r3, .L12+36
 888 00ca 1B88     		ldrh	r3, [r3]
 889 00cc 1BB2     		sxth	r3, r3
 890 00ce 1846     		mov	r0, r3
 891 00d0 FFF7FEFF 		bl	__aeabi_i2d
 892 00d4 0446     		mov	r4, r0
 893 00d6 0D46     		mov	r5, r1
 894 00d8 2B4B     		ldr	r3, .L12+40
 895 00da 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 20


 896 00dc 1BB2     		sxth	r3, r3
 897 00de 1846     		mov	r0, r3
 898 00e0 FFF7FEFF 		bl	__aeabi_i2d
 899 00e4 0246     		mov	r2, r0
 900 00e6 0B46     		mov	r3, r1
 901 00e8 1046     		mov	r0, r2
 902 00ea 1946     		mov	r1, r3
 903 00ec 4FF00002 		mov	r2, #0
 904 00f0 264B     		ldr	r3, .L12+44
 905 00f2 FFF7FEFF 		bl	__aeabi_dsub
 906 00f6 0246     		mov	r2, r0
 907 00f8 0B46     		mov	r3, r1
 908 00fa 2046     		mov	r0, r4
 909 00fc 2946     		mov	r1, r5
 910 00fe FFF7FEFF 		bl	__aeabi_dcmpge
 911 0102 0346     		mov	r3, r0
 912 0104 002B     		cmp	r3, #0
 913 0106 02D0     		beq	.L8
 174:.\main.c      ****         {
 175:.\main.c      ****             reached_target = 1;
 914              		.loc 1 175 0
 915 0108 214B     		ldr	r3, .L12+48
 916 010a 0122     		movs	r2, #1
 917 010c 1A70     		strb	r2, [r3]
 918              	.L8:
 176:.\main.c      ****         }
 177:.\main.c      ****         if((accum_dist >= (target_distance_quad + QUAD_PER_UNIT * 0.5)) || target_distance_quad == 
 919              		.loc 1 177 0
 920 010e 1D4B     		ldr	r3, .L12+36
 921 0110 1B88     		ldrh	r3, [r3]
 922 0112 1BB2     		sxth	r3, r3
 923 0114 1846     		mov	r0, r3
 924 0116 FFF7FEFF 		bl	__aeabi_i2d
 925 011a 0446     		mov	r4, r0
 926 011c 0D46     		mov	r5, r1
 927 011e 1A4B     		ldr	r3, .L12+40
 928 0120 1B88     		ldrh	r3, [r3]
 929 0122 1BB2     		sxth	r3, r3
 930 0124 1846     		mov	r0, r3
 931 0126 FFF7FEFF 		bl	__aeabi_i2d
 932 012a 0246     		mov	r2, r0
 933 012c 0B46     		mov	r3, r1
 934 012e 1046     		mov	r0, r2
 935 0130 1946     		mov	r1, r3
 936 0132 4FF00002 		mov	r2, #0
 937 0136 154B     		ldr	r3, .L12+44
 938 0138 FFF7FEFF 		bl	__aeabi_dadd
 939 013c 0246     		mov	r2, r0
 940 013e 0B46     		mov	r3, r1
 941 0140 2046     		mov	r0, r4
 942 0142 2946     		mov	r1, r5
 943 0144 FFF7FEFF 		bl	__aeabi_dcmpge
 944 0148 0346     		mov	r3, r0
 945 014a 002B     		cmp	r3, #0
 946 014c 03D1     		bne	.L10
 947              		.loc 1 177 0 is_stmt 0 discriminator 1
 948 014e 0E4B     		ldr	r3, .L12+40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 21


 949 0150 1B88     		ldrh	r3, [r3]
 950 0152 002B     		cmp	r3, #0
 951 0154 02D1     		bne	.L5
 952              	.L10:
 178:.\main.c      ****         {
 179:.\main.c      ****             overshot_target = 1;
 953              		.loc 1 179 0 is_stmt 1
 954 0156 0F4B     		ldr	r3, .L12+52
 955 0158 0122     		movs	r2, #1
 956 015a 1A70     		strb	r2, [r3]
 957              	.L5:
 180:.\main.c      ****         }
 181:.\main.c      ****     }
 182:.\main.c      **** }
 958              		.loc 1 182 0
 959 015c B0BD     		pop	{r4, r5, r7, pc}
 960              	.L13:
 961 015e 00BF     		.align	2
 962              	.L12:
 963 0160 00000000 		.word	quad_count1
 964 0164 00000000 		.word	last_quad_count1
 965 0168 00000000 		.word	quad_count2
 966 016c 00000000 		.word	last_quad_count2
 967 0170 00000000 		.word	quad_diff1
 968 0174 00000000 		.word	quad_diff2
 969 0178 00000000 		.word	movement_state
 970 017c 00000000 		.word	flag_calc_wheelspeed
 971 0180 00000000 		.word	track_mode
 972 0184 00000000 		.word	accum_dist
 973 0188 00000000 		.word	target_distance_quad
 974 018c 00005240 		.word	1079115776
 975 0190 00000000 		.word	reached_target
 976 0194 00000000 		.word	overshot_target
 977              		.cfi_endproc
 978              	.LFE65:
 979              		.size	isr_quad1, .-isr_quad1
 980              		.section	.text.isr_turn_timer,"ax",%progbits
 981              		.align	2
 982              		.global	isr_turn_timer
 983              		.thumb
 984              		.thumb_func
 985              		.type	isr_turn_timer, %function
 986              	isr_turn_timer:
 987              	.LFB66:
 183:.\main.c      **** 
 184:.\main.c      **** CY_ISR(isr_turn_timer)
 185:.\main.c      **** {
 988              		.loc 1 185 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 8
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992 0000 80B5     		push	{r7, lr}
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 7, -8
 995              		.cfi_offset 14, -4
 996 0002 82B0     		sub	sp, sp, #8
 997              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 22


 998 0004 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
 186:.\main.c      ****     if(movement_state == LTURN)
 1000              		.loc 1 186 0
 1001 0006 504B     		ldr	r3, .L22
 1002 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 000a 012B     		cmp	r3, #1
 1004 000c 3DD1     		bne	.L15
 1005              	.LBB2:
 187:.\main.c      ****     {
 188:.\main.c      ****         uint16 distTurned = (abs(QuadDec_M2_GetCounter() - start_turn_count) % 832);
 1006              		.loc 1 188 0
 1007 000e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1008 0012 0346     		mov	r3, r0
 1009 0014 1A46     		mov	r2, r3
 1010 0016 4D4B     		ldr	r3, .L22+4
 1011 0018 1B88     		ldrh	r3, [r3]
 1012 001a 1BB2     		sxth	r3, r3
 1013 001c D31A     		subs	r3, r2, r3
 1014 001e 002B     		cmp	r3, #0
 1015 0020 B8BF     		it	lt
 1016 0022 5B42     		rsblt	r3, r3, #0
 1017 0024 4A4A     		ldr	r2, .L22+8
 1018 0026 82FB0312 		smull	r1, r2, r2, r3
 1019 002a 1112     		asrs	r1, r2, #8
 1020 002c DA17     		asrs	r2, r3, #31
 1021 002e 8A1A     		subs	r2, r1, r2
 1022 0030 4FF45071 		mov	r1, #832
 1023 0034 01FB02F2 		mul	r2, r1, r2
 1024 0038 9A1A     		subs	r2, r3, r2
 1025 003a 1346     		mov	r3, r2	@ movhi
 1026 003c FB80     		strh	r3, [r7, #6]	@ movhi
 189:.\main.c      ****   
 190:.\main.c      ****         if(((distTurned >= min_turn_quad) && distTurned <= max_turn_quad) && (frontSensors[2] == 1 
 1027              		.loc 1 190 0
 1028 003e 454B     		ldr	r3, .L22+12
 1029 0040 1B88     		ldrh	r3, [r3]
 1030 0042 FA88     		ldrh	r2, [r7, #6]
 1031 0044 9A42     		cmp	r2, r3
 1032 0046 1FD3     		bcc	.L16
 1033              		.loc 1 190 0 is_stmt 0 discriminator 1
 1034 0048 434B     		ldr	r3, .L22+16
 1035 004a 1B88     		ldrh	r3, [r3]
 1036 004c FA88     		ldrh	r2, [r7, #6]
 1037 004e 9A42     		cmp	r2, r3
 1038 0050 1AD8     		bhi	.L16
 1039              		.loc 1 190 0 discriminator 2
 1040 0052 424B     		ldr	r3, .L22+20
 1041 0054 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1042 0056 012B     		cmp	r3, #1
 1043 0058 07D0     		beq	.L17
 1044              		.loc 1 190 0 discriminator 3
 1045 005a 404B     		ldr	r3, .L22+20
 1046 005c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1047 005e 012B     		cmp	r3, #1
 1048 0060 03D0     		beq	.L17
 1049              		.loc 1 190 0 discriminator 4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 23


 1050 0062 3E4B     		ldr	r3, .L22+20
 1051 0064 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1052 0066 012B     		cmp	r3, #1
 1053 0068 0ED1     		bne	.L16
 1054              	.L17:
 191:.\main.c      ****         {
 192:.\main.c      ****             //movement_state = STOPPED;
 193:.\main.c      ****             brakeMotor();
 1055              		.loc 1 193 0 is_stmt 1
 1056 006a FFF7FEFF 		bl	brakeMotor
 194:.\main.c      ****             movement_state = prev_movement_state;
 1057              		.loc 1 194 0
 1058 006e 3C4B     		ldr	r3, .L22+24
 1059 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1060 0072 354B     		ldr	r3, .L22
 1061 0074 1A70     		strb	r2, [r3]
 195:.\main.c      ****             Timer_2_Stop();
 1062              		.loc 1 195 0
 1063 0076 FFF7FEFF 		bl	Timer_2_Stop
 196:.\main.c      ****             min_turn_quad = DEFAULT_MIN_TURN;
 1064              		.loc 1 196 0
 1065 007a 364B     		ldr	r3, .L22+12
 1066 007c BC22     		movs	r2, #188
 1067 007e 1A80     		strh	r2, [r3]	@ movhi
 197:.\main.c      ****             max_turn_quad = DEFAULT_MAX_TURN;
 1068              		.loc 1 197 0
 1069 0080 354B     		ldr	r3, .L22+16
 1070 0082 E422     		movs	r2, #228
 1071 0084 1A80     		strh	r2, [r3]	@ movhi
 1072              	.LBE2:
 1073 0086 5BE0     		b	.L14
 1074              	.L16:
 1075 0088 5AE0     		b	.L14
 1076              	.L15:
 198:.\main.c      ****         }
 199:.\main.c      ****     }
 200:.\main.c      ****     else if (movement_state == RTURN)
 1077              		.loc 1 200 0
 1078 008a 2F4B     		ldr	r3, .L22
 1079 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1080 008e 022B     		cmp	r3, #2
 1081 0090 3DD1     		bne	.L19
 1082              	.LBB3:
 201:.\main.c      ****     {
 202:.\main.c      ****         uint16 distTurned = abs(QuadDec_M1_GetCounter() - start_turn_count) % 832;
 1083              		.loc 1 202 0
 1084 0092 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1085 0096 0346     		mov	r3, r0
 1086 0098 1A46     		mov	r2, r3
 1087 009a 2C4B     		ldr	r3, .L22+4
 1088 009c 1B88     		ldrh	r3, [r3]
 1089 009e 1BB2     		sxth	r3, r3
 1090 00a0 D31A     		subs	r3, r2, r3
 1091 00a2 002B     		cmp	r3, #0
 1092 00a4 B8BF     		it	lt
 1093 00a6 5B42     		rsblt	r3, r3, #0
 1094 00a8 294A     		ldr	r2, .L22+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 24


 1095 00aa 82FB0312 		smull	r1, r2, r2, r3
 1096 00ae 1112     		asrs	r1, r2, #8
 1097 00b0 DA17     		asrs	r2, r3, #31
 1098 00b2 8A1A     		subs	r2, r1, r2
 1099 00b4 4FF45071 		mov	r1, #832
 1100 00b8 01FB02F2 		mul	r2, r1, r2
 1101 00bc 9A1A     		subs	r2, r3, r2
 1102 00be 1346     		mov	r3, r2	@ movhi
 1103 00c0 BB80     		strh	r3, [r7, #4]	@ movhi
 203:.\main.c      ****         if(((distTurned >= min_turn_quad) && distTurned <= max_turn_quad) && (frontSensors[2] == 1 
 1104              		.loc 1 203 0
 1105 00c2 244B     		ldr	r3, .L22+12
 1106 00c4 1B88     		ldrh	r3, [r3]
 1107 00c6 BA88     		ldrh	r2, [r7, #4]
 1108 00c8 9A42     		cmp	r2, r3
 1109 00ca 1FD3     		bcc	.L20
 1110              		.loc 1 203 0 is_stmt 0 discriminator 1
 1111 00cc 224B     		ldr	r3, .L22+16
 1112 00ce 1B88     		ldrh	r3, [r3]
 1113 00d0 BA88     		ldrh	r2, [r7, #4]
 1114 00d2 9A42     		cmp	r2, r3
 1115 00d4 1AD8     		bhi	.L20
 1116              		.loc 1 203 0 discriminator 2
 1117 00d6 214B     		ldr	r3, .L22+20
 1118 00d8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1119 00da 012B     		cmp	r3, #1
 1120 00dc 07D0     		beq	.L21
 1121              		.loc 1 203 0 discriminator 3
 1122 00de 1F4B     		ldr	r3, .L22+20
 1123 00e0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1124 00e2 012B     		cmp	r3, #1
 1125 00e4 03D0     		beq	.L21
 1126              		.loc 1 203 0 discriminator 4
 1127 00e6 1D4B     		ldr	r3, .L22+20
 1128 00e8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1129 00ea 012B     		cmp	r3, #1
 1130 00ec 0ED1     		bne	.L20
 1131              	.L21:
 204:.\main.c      ****         {
 205:.\main.c      ****             //movement_state = STOPPED;
 206:.\main.c      ****             brakeMotor();
 1132              		.loc 1 206 0 is_stmt 1
 1133 00ee FFF7FEFF 		bl	brakeMotor
 207:.\main.c      ****             movement_state = prev_movement_state;
 1134              		.loc 1 207 0
 1135 00f2 1B4B     		ldr	r3, .L22+24
 1136 00f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1137 00f6 144B     		ldr	r3, .L22
 1138 00f8 1A70     		strb	r2, [r3]
 208:.\main.c      ****             Timer_2_Stop();
 1139              		.loc 1 208 0
 1140 00fa FFF7FEFF 		bl	Timer_2_Stop
 209:.\main.c      ****             min_turn_quad = DEFAULT_MIN_TURN;
 1141              		.loc 1 209 0
 1142 00fe 154B     		ldr	r3, .L22+12
 1143 0100 BC22     		movs	r2, #188
 1144 0102 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 25


 210:.\main.c      ****             max_turn_quad = DEFAULT_MAX_TURN;
 1145              		.loc 1 210 0
 1146 0104 144B     		ldr	r3, .L22+16
 1147 0106 E422     		movs	r2, #228
 1148 0108 1A80     		strh	r2, [r3]	@ movhi
 1149              	.LBE3:
 1150 010a 19E0     		b	.L14
 1151              	.L20:
 1152 010c 18E0     		b	.L14
 1153              	.L19:
 211:.\main.c      ****         }
 212:.\main.c      ****     }
 213:.\main.c      ****     else if (movement_state == UTURN)
 1154              		.loc 1 213 0
 1155 010e 0E4B     		ldr	r3, .L22
 1156 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1157 0112 072B     		cmp	r3, #7
 1158 0114 14D1     		bne	.L14
 214:.\main.c      ****     {
 215:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 1159              		.loc 1 215 0
 1160 0116 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1161 011a 0346     		mov	r3, r0
 1162 011c 1A46     		mov	r2, r3
 1163 011e 0B4B     		ldr	r3, .L22+4
 1164 0120 1B88     		ldrh	r3, [r3]
 1165 0122 1BB2     		sxth	r3, r3
 1166 0124 D31A     		subs	r3, r2, r3
 1167 0126 002B     		cmp	r3, #0
 1168 0128 B8BF     		it	lt
 1169 012a 5B42     		rsblt	r3, r3, #0
 1170 012c CF2B     		cmp	r3, #207
 1171 012e 07DD     		ble	.L14
 216:.\main.c      ****         {
 217:.\main.c      ****             //movement_state = STOPPED;
 218:.\main.c      ****             brakeMotor();
 1172              		.loc 1 218 0
 1173 0130 FFF7FEFF 		bl	brakeMotor
 219:.\main.c      ****             movement_state = prev_movement_state;
 1174              		.loc 1 219 0
 1175 0134 0A4B     		ldr	r3, .L22+24
 1176 0136 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1177 0138 034B     		ldr	r3, .L22
 1178 013a 1A70     		strb	r2, [r3]
 220:.\main.c      ****             Timer_2_Stop();
 1179              		.loc 1 220 0
 1180 013c FFF7FEFF 		bl	Timer_2_Stop
 1181              	.L14:
 221:.\main.c      ****         }
 222:.\main.c      ****     }
 223:.\main.c      **** }
 1182              		.loc 1 223 0
 1183 0140 0837     		adds	r7, r7, #8
 1184              		.cfi_def_cfa_offset 8
 1185 0142 BD46     		mov	sp, r7
 1186              		.cfi_def_cfa_register 13
 1187              		@ sp needed
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 26


 1188 0144 80BD     		pop	{r7, pc}
 1189              	.L23:
 1190 0146 00BF     		.align	2
 1191              	.L22:
 1192 0148 00000000 		.word	movement_state
 1193 014c 00000000 		.word	start_turn_count
 1194 0150 4FECC44E 		.word	1321528399
 1195 0154 00000000 		.word	min_turn_quad
 1196 0158 00000000 		.word	max_turn_quad
 1197 015c 00000000 		.word	frontSensors
 1198 0160 00000000 		.word	prev_movement_state
 1199              		.cfi_endproc
 1200              	.LFE66:
 1201              		.size	isr_turn_timer, .-isr_turn_timer
 1202              		.section	.text.Stop_on_line,"ax",%progbits
 1203              		.align	2
 1204              		.global	Stop_on_line
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	Stop_on_line, %function
 1208              	Stop_on_line:
 1209              	.LFB67:
 224:.\main.c      **** 
 225:.\main.c      **** 
 226:.\main.c      **** CY_ISR (Stop_on_line)
 227:.\main.c      **** {
 1210              		.loc 1 227 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215 0000 80B4     		push	{r7}
 1216              		.cfi_def_cfa_offset 4
 1217              		.cfi_offset 7, -4
 1218 0002 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 228:.\main.c      ****     movement_state = STOPPED;
 1220              		.loc 1 228 0
 1221 0004 054B     		ldr	r3, .L26
 1222 0006 0322     		movs	r2, #3
 1223 0008 1A70     		strb	r2, [r3]
 229:.\main.c      ****     if(movement_state != DRIVE) return;
 1224              		.loc 1 229 0
 1225 000a 044B     		ldr	r3, .L26
 1226 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1227 000e 002B     		cmp	r3, #0
 1228 0010 00D0     		beq	.L24
 1229 0012 00BF     		nop
 1230              	.L24:
 230:.\main.c      ****     //initTurnLeft();
 231:.\main.c      **** }
 1231              		.loc 1 231 0
 1232 0014 BD46     		mov	sp, r7
 1233              		.cfi_def_cfa_register 13
 1234              		@ sp needed
 1235 0016 5DF8047B 		ldr	r7, [sp], #4
 1236              		.cfi_restore 7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 27


 1237              		.cfi_def_cfa_offset 0
 1238 001a 7047     		bx	lr
 1239              	.L27:
 1240              		.align	2
 1241              	.L26:
 1242 001c 00000000 		.word	movement_state
 1243              		.cfi_endproc
 1244              	.LFE67:
 1245              		.size	Stop_on_line, .-Stop_on_line
 1246              		.section	.rodata
 1247              		.align	2
 1248              	.LC0:
 1249 0000 53746172 		.ascii	"Starting robot!\015\012\000"
 1249      74696E67 
 1249      20726F62 
 1249      6F74210D 
 1249      0A00
 1250              		.section	.text.button,"ax",%progbits
 1251              		.align	2
 1252              		.global	button
 1253              		.thumb
 1254              		.thumb_func
 1255              		.type	button, %function
 1256              	button:
 1257              	.LFB68:
 232:.\main.c      **** 
 233:.\main.c      **** CY_ISR (button)
 234:.\main.c      **** {
 1258              		.loc 1 234 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 0
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 235:.\main.c      ****     if(BT_ENABLED)
 1268              		.loc 1 235 0
 1269 0004 054B     		ldr	r3, .L30
 1270 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1271 0008 002B     		cmp	r3, #0
 1272 000a 02D0     		beq	.L29
 236:.\main.c      ****     {
 237:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 1273              		.loc 1 237 0
 1274 000c 0448     		ldr	r0, .L30+4
 1275 000e FFF7FEFF 		bl	UART_PutString
 1276              	.L29:
 238:.\main.c      ****     }
 239:.\main.c      ****     movement_state = DRIVE;
 1277              		.loc 1 239 0
 1278 0012 044B     		ldr	r3, .L30+8
 1279 0014 0022     		movs	r2, #0
 1280 0016 1A70     		strb	r2, [r3]
 240:.\main.c      **** }
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 28


 1281              		.loc 1 240 0
 1282 0018 80BD     		pop	{r7, pc}
 1283              	.L31:
 1284 001a 00BF     		.align	2
 1285              	.L30:
 1286 001c 00000000 		.word	BT_ENABLED
 1287 0020 00000000 		.word	.LC0
 1288 0024 00000000 		.word	movement_state
 1289              		.cfi_endproc
 1290              	.LFE68:
 1291              		.size	button, .-button
 1292              		.section	.text.isr_adcTimer,"ax",%progbits
 1293              		.align	2
 1294              		.global	isr_adcTimer
 1295              		.thumb
 1296              		.thumb_func
 1297              		.type	isr_adcTimer, %function
 1298              	isr_adcTimer:
 1299              	.LFB69:
 241:.\main.c      **** 
 242:.\main.c      **** CY_ISR(isr_adcTimer)
 243:.\main.c      **** {
 1300              		.loc 1 243 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 80B5     		push	{r7, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 7, -8
 1307              		.cfi_offset 14, -4
 1308 0002 00AF     		add	r7, sp, #0
 1309              		.cfi_def_cfa_register 7
 244:.\main.c      ****     ADC_StartConvert();
 1310              		.loc 1 244 0
 1311 0004 FFF7FEFF 		bl	ADC_StartConvert
 245:.\main.c      **** }
 1312              		.loc 1 245 0
 1313 0008 80BD     		pop	{r7, pc}
 1314              		.cfi_endproc
 1315              	.LFE69:
 1316              		.size	isr_adcTimer, .-isr_adcTimer
 1317 000a 00BF     		.section	.rodata
 1318 0012 0000     		.align	2
 1319              	.LC1:
 1320 0014 44656164 		.ascii	"Deadzone left\015\012\000"
 1320      7A6F6E65 
 1320      206C6566 
 1320      740D0A00 
 1321              		.section	.text.isr_deadzone,"ax",%progbits
 1322              		.align	2
 1323              		.global	isr_deadzone
 1324              		.thumb
 1325              		.thumb_func
 1326              		.type	isr_deadzone, %function
 1327              	isr_deadzone:
 1328              	.LFB70:
 246:.\main.c      **** 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 29


 247:.\main.c      **** CY_ISR(isr_deadzone)
 248:.\main.c      **** {
 1329              		.loc 1 248 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333 0000 80B5     		push	{r7, lr}
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 7, -8
 1336              		.cfi_offset 14, -4
 1337 0002 00AF     		add	r7, sp, #0
 1338              		.cfi_def_cfa_register 7
 249:.\main.c      ****     sensorsDisabled = 0;
 1339              		.loc 1 249 0
 1340 0004 054B     		ldr	r3, .L34
 1341 0006 0022     		movs	r2, #0
 1342 0008 1A60     		str	r2, [r3]
 250:.\main.c      ****     deadzone = 0;
 1343              		.loc 1 250 0
 1344 000a 054B     		ldr	r3, .L34+4
 1345 000c 0022     		movs	r2, #0
 1346 000e 1A70     		strb	r2, [r3]
 251:.\main.c      ****     Timer_Deadzone_Stop();
 1347              		.loc 1 251 0
 1348 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 252:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 1349              		.loc 1 252 0
 1350 0014 0348     		ldr	r0, .L34+8
 1351 0016 FFF7FEFF 		bl	UART_PutString
 253:.\main.c      **** }
 1352              		.loc 1 253 0
 1353 001a 80BD     		pop	{r7, pc}
 1354              	.L35:
 1355              		.align	2
 1356              	.L34:
 1357 001c 00000000 		.word	sensorsDisabled
 1358 0020 00000000 		.word	deadzone
 1359 0024 14000000 		.word	.LC1
 1360              		.cfi_endproc
 1361              	.LFE70:
 1362              		.size	isr_deadzone, .-isr_deadzone
 1363              		.section	.rodata
 1364              		.align	2
 1365              	.LC2:
 1366 0024 44697374 		.ascii	"Dist travel: %d\015\012\000"
 1366      20747261 
 1366      76656C3A 
 1366      2025640D 
 1366      0A00
 1367 0036 0000     		.align	2
 1368              	.LC3:
 1369 0038 54726967 		.ascii	"Trigger quad\015\012\000"
 1369      67657220 
 1369      71756164 
 1369      0D0A00
 1370 0047 00       		.align	2
 1371              	.LC4:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 30


 1372 0048 696E7374 		.ascii	"instruct trig:%d\015\012\000"
 1372      72756374 
 1372      20747269 
 1372      673A2564 
 1372      0D0A00
 1373              		.global	__aeabi_d2iz
 1374 005b 00       		.align	2
 1375              	.LC5:
 1376 005c 54617267 		.ascii	"Target dist: %d\015\012\000"
 1376      65742064 
 1376      6973743A 
 1376      2025640D 
 1376      0A00
 1377 006e 0000     		.align	2
 1378              	.LC6:
 1379 0070 696E7374 		.ascii	"instr count:%d\015\012\000"
 1379      7220636F 
 1379      756E743A 
 1379      25640D0A 
 1379      00
 1380 0081 000000   		.align	2
 1381              	.LC7:
 1382 0084 74726176 		.ascii	"travel:%d, sensors on:%d\015\012\000"
 1382      656C3A25 
 1382      642C2073 
 1382      656E736F 
 1382      7273206F 
 1383 009f 00       		.align	2
 1384              	.LC8:
 1385 00a0 54726967 		.ascii	"Trigger intersection\015\012\000"
 1385      67657220 
 1385      696E7465 
 1385      72736563 
 1385      74696F6E 
 1386              		.section	.text.main,"ax",%progbits
 1387              		.align	2
 1388              		.global	main
 1389              		.thumb
 1390              		.thumb_func
 1391              		.type	main, %function
 1392              	main:
 1393              	.LFB71:
 254:.\main.c      **** 
 255:.\main.c      **** /*-------------------------------------------------------------------------------------------*/
 256:.\main.c      **** 
 257:.\main.c      **** /* -----------------------------------------MAIN-----------------------------MAIN------------------
 258:.\main.c      **** int main()
 259:.\main.c      **** {  
 1394              		.loc 1 259 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 40
 1397              		@ frame_needed = 1, uses_anonymous_args = 0
 1398 0000 90B5     		push	{r4, r7, lr}
 1399              		.cfi_def_cfa_offset 12
 1400              		.cfi_offset 4, -12
 1401              		.cfi_offset 7, -8
 1402              		.cfi_offset 14, -4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 31


 1403 0002 8BB0     		sub	sp, sp, #44
 1404              		.cfi_def_cfa_offset 56
 1405 0004 00AF     		add	r7, sp, #0
 1406              		.cfi_def_cfa_register 7
 260:.\main.c      **** 
 261:.\main.c      **** // ----- INITIALIZATIONS ----------
 262:.\main.c      ****     
 263:.\main.c      ****     min_turn_quad = DEFAULT_MIN_TURN;
 1407              		.loc 1 263 0
 1408 0006 B04B     		ldr	r3, .L98
 1409 0008 BC22     		movs	r2, #188
 1410 000a 1A80     		strh	r2, [r3]	@ movhi
 264:.\main.c      ****     max_turn_quad = DEFAULT_MAX_TURN;
 1411              		.loc 1 264 0
 1412 000c AF4B     		ldr	r3, .L98+4
 1413 000e E422     		movs	r2, #228
 1414 0010 1A80     		strh	r2, [r3]	@ movhi
 265:.\main.c      ****     
 266:.\main.c      ****     CYGlobalIntEnable;
 1415              		.loc 1 266 0
 1416              	@ 266 ".\main.c" 1
 1417 0012 62B6     		CPSIE   i
 1418              	@ 0 "" 2
 267:.\main.c      ****     if(ENABLE_PWM)
 268:.\main.c      ****     {
 269:.\main.c      ****         PWM_1_Start();// starting the pwm
 1419              		.loc 1 269 0
 1420              		.thumb
 1421 0014 FFF7FEFF 		bl	PWM_1_Start
 270:.\main.c      ****         PWM_2_Start();// starting the pwm
 1422              		.loc 1 270 0
 1423 0018 FFF7FEFF 		bl	PWM_2_Start
 271:.\main.c      ****     }
 272:.\main.c      ****     
 273:.\main.c      ****     if(ENABLE_ADC)
 274:.\main.c      ****     {
 275:.\main.c      ****         ADC_Start();
 276:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 277:.\main.c      ****         //ADC_StartConvert();
 278:.\main.c      ****         
 279:.\main.c      ****         //start the ADC timer for software trigger mode
 280:.\main.c      ****         Timer_TS_Start();
 281:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 282:.\main.c      ****     }
 283:.\main.c      ****     
 284:.\main.c      ****     if (ENABLE_QUAD)
 285:.\main.c      ****     {
 286:.\main.c      ****         QuadDec_M1_Start();
 1424              		.loc 1 286 0
 1425 001c FFF7FEFF 		bl	QuadDec_M1_Start
 287:.\main.c      ****         QuadDec_M2_Start();
 1426              		.loc 1 287 0
 1427 0020 FFF7FEFF 		bl	QuadDec_M2_Start
 288:.\main.c      ****         
 289:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 1428              		.loc 1 289 0
 1429 0024 AA48     		ldr	r0, .L98+8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 32


 1430 0026 FFF7FEFF 		bl	isr_quad1_StartEx
 290:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 1431              		.loc 1 290 0
 1432 002a AA48     		ldr	r0, .L98+12
 1433 002c FFF7FEFF 		bl	isr_turn_count_StartEx
 291:.\main.c      ****         
 292:.\main.c      ****         Timer_1_Start();
 1434              		.loc 1 292 0
 1435 0030 FFF7FEFF 		bl	Timer_1_Start
 293:.\main.c      ****     }
 294:.\main.c      ****     
 295:.\main.c      ****     if(ENABLE_STOP){
 296:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 297:.\main.c      ****         
 298:.\main.c      ****     }
 299:.\main.c      ****     isr_button_StartEx(button);
 1436              		.loc 1 299 0
 1437 0034 A848     		ldr	r0, .L98+16
 1438 0036 FFF7FEFF 		bl	isr_button_StartEx
 300:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 1439              		.loc 1 300 0
 1440 003a A848     		ldr	r0, .L98+20
 1441 003c FFF7FEFF 		bl	isr_action_deadzone_StartEx
 301:.\main.c      **** 
 302:.\main.c      ****     // ------USB SETUP ----------------    
 303:.\main.c      ****     if (USE_USB){    
 304:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 1442              		.loc 1 304 0
 1443 0040 0020     		movs	r0, #0
 1444 0042 0121     		movs	r1, #1
 1445 0044 FFF7FEFF 		bl	USBUART_Start
 305:.\main.c      ****         if (USBUART_GetConfiguration())
 1446              		.loc 1 305 0
 1447 0048 FFF7FEFF 		bl	USBUART_GetConfiguration
 1448 004c 0346     		mov	r3, r0
 1449 004e 002B     		cmp	r3, #0
 1450 0050 01D0     		beq	.L37
 306:.\main.c      ****             {
 307:.\main.c      ****                  USBUART_CDC_Init();
 1451              		.loc 1 307 0
 1452 0052 FFF7FEFF 		bl	USBUART_CDC_Init
 1453              	.L37:
 308:.\main.c      ****             }
 309:.\main.c      ****     }
 310:.\main.c      ****     
 311:.\main.c      ****     if(BIN_ENABLED){
 1454              		.loc 1 311 0
 1455 0056 A24B     		ldr	r3, .L98+24
 1456 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1457 005a 002B     		cmp	r3, #0
 1458 005c 01D0     		beq	.L38
 312:.\main.c      ****         changeToRF();
 1459              		.loc 1 312 0
 1460 005e FFF7FEFF 		bl	changeToRF
 1461              	.L38:
 313:.\main.c      ****     }
 314:.\main.c      ****     
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 33


 315:.\main.c      ****     if(BT_ENABLED){
 1462              		.loc 1 315 0
 1463 0062 A04B     		ldr	r3, .L98+28
 1464 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 0066 002B     		cmp	r3, #0
 1466 0068 01D0     		beq	.L39
 316:.\main.c      ****         changeToBT();
 1467              		.loc 1 316 0
 1468 006a FFF7FEFF 		bl	changeToBT
 1469              	.L39:
 317:.\main.c      ****     }
 318:.\main.c      ****     
 319:.\main.c      ****     uint16 actionDebounce = 0;
 1470              		.loc 1 319 0
 1471 006e 0023     		movs	r3, #0
 1472 0070 FB84     		strh	r3, [r7, #38]	@ movhi
 1473              	.L95:
 320:.\main.c      ****     
 321:.\main.c      ****     //usbPutString("Started");
 322:.\main.c      ****     for(;;)
 323:.\main.c      ****     {
 324:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 325:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 1474              		.loc 1 325 0
 1475 0072 FFF7FEFF 		bl	Quad_Dec_response
 326:.\main.c      ****         if(BIN_ENABLED == 1)
 1476              		.loc 1 326 0
 1477 0076 9A4B     		ldr	r3, .L98+24
 1478 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1479 007a 012B     		cmp	r3, #1
 1480 007c 03D1     		bne	.L40
 327:.\main.c      ****         {
 328:.\main.c      ****             handle_rx_binary();
 1481              		.loc 1 328 0
 1482 007e FFF7FEFF 		bl	handle_rx_binary
 329:.\main.c      ****             print_RF();
 1483              		.loc 1 329 0
 1484 0082 FFF7FEFF 		bl	print_RF
 1485              	.L40:
 330:.\main.c      ****         }
 331:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 332:.\main.c      ****        
 333:.\main.c      ****         readFrontSensors(frontSensors);
 1486              		.loc 1 333 0
 1487 0086 9848     		ldr	r0, .L98+32
 1488 0088 FFF7FEFF 		bl	readFrontSensors
 334:.\main.c      ****         
 335:.\main.c      ****         switch(track_mode)
 1489              		.loc 1 335 0
 1490 008c 974B     		ldr	r3, .L98+36
 1491 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1492 0090 072B     		cmp	r3, #7
 1493 0092 00F21183 		bhi	.L41
 1494 0096 01A2     		adr	r2, .L43
 1495 0098 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1496              		.p2align 2
 1497              	.L43:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 34


 1498 009c B9060000 		.word	.L41+1
 1499 00a0 B9060000 		.word	.L41+1
 1500 00a4 B9060000 		.word	.L41+1
 1501 00a8 BD000000 		.word	.L46+1
 1502 00ac B9060000 		.word	.L41+1
 1503 00b0 01010000 		.word	.L48+1
 1504 00b4 27010000 		.word	.L49+1
 1505 00b8 27010000 		.word	.L49+1
 1506              		.p2align 1
 1507              	.L46:
 336:.\main.c      ****         {
 337:.\main.c      ****             case SQUARE_TRACK:
 338:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 1508              		.loc 1 338 0
 1509 00bc 8C4B     		ldr	r3, .L98+40
 1510 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1511 00c0 012B     		cmp	r3, #1
 1512 00c2 1CD0     		beq	.L50
 1513              		.loc 1 338 0 is_stmt 0 discriminator 1
 1514 00c4 8A4B     		ldr	r3, .L98+40
 1515 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 00c8 022B     		cmp	r3, #2
 1517 00ca 18D0     		beq	.L50
 339:.\main.c      ****                 {
 340:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 1518              		.loc 1 340 0 is_stmt 1
 1519 00cc 864B     		ldr	r3, .L98+32
 1520 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 00d0 012B     		cmp	r3, #1
 1522 00d2 06D1     		bne	.L51
 1523              		.loc 1 340 0 is_stmt 0 discriminator 1
 1524 00d4 844B     		ldr	r3, .L98+32
 1525 00d6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1526 00d8 012B     		cmp	r3, #1
 1527 00da 02D1     		bne	.L51
 341:.\main.c      ****                         initTurnLeft();
 1528              		.loc 1 341 0 is_stmt 1
 1529 00dc FFF7FEFF 		bl	initTurnLeft
 1530 00e0 0DE0     		b	.L50
 1531              	.L51:
 342:.\main.c      ****                     }
 343:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 1532              		.loc 1 343 0
 1533 00e2 814B     		ldr	r3, .L98+32
 1534 00e4 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1535 00e6 012B     		cmp	r3, #1
 1536 00e8 06D1     		bne	.L52
 1537              		.loc 1 343 0 is_stmt 0 discriminator 1
 1538 00ea 7F4B     		ldr	r3, .L98+32
 1539 00ec 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1540 00ee 012B     		cmp	r3, #1
 1541 00f0 02D1     		bne	.L52
 344:.\main.c      ****                     {
 345:.\main.c      ****                         initTurnRight();
 1542              		.loc 1 345 0 is_stmt 1
 1543 00f2 FFF7FEFF 		bl	initTurnRight
 1544 00f6 02E0     		b	.L50
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 35


 1545              	.L52:
 346:.\main.c      ****                     }
 347:.\main.c      ****                     else inittrackLineZ();
 1546              		.loc 1 347 0
 1547 00f8 FFF7FEFF 		bl	inittrackLineZ
 348:.\main.c      ****                 }
 349:.\main.c      ****             break;
 1548              		.loc 1 349 0
 1549 00fc DCE2     		b	.L41
 1550              	.L50:
 1551 00fe DBE2     		b	.L41
 1552              	.L48:
 350:.\main.c      ****             case NO_TRACK:
 351:.\main.c      ****             break;
 352:.\main.c      ****             case CURVE_TRACK:
 353:.\main.c      ****             break;
 354:.\main.c      ****             case U_TRACK:
 355:.\main.c      ****             break;
 356:.\main.c      ****             case QUAD_STOP:
 357:.\main.c      ****             break;
 358:.\main.c      ****             case RF_STOP:
 359:.\main.c      ****                 if(initial_pos_valid == 1)
 1553              		.loc 1 359 0
 1554 0100 7C4B     		ldr	r3, .L98+44
 1555 0102 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1556 0104 012B     		cmp	r3, #1
 1557 0106 0DD1     		bne	.L53
 360:.\main.c      ****                 {
 361:.\main.c      ****                     //changeToBT();
 362:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 363:.\main.c      ****                     //changeToRF();
 364:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 1558              		.loc 1 364 0
 1559 0108 7B4B     		ldr	r3, .L98+48
 1560 010a 5A88     		ldrh	r2, [r3, #2]
 1561 010c 7B4B     		ldr	r3, .L98+52
 1562 010e 1A80     		strh	r2, [r3]	@ movhi
 365:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 1563              		.loc 1 365 0
 1564 0110 794B     		ldr	r3, .L98+48
 1565 0112 9A88     		ldrh	r2, [r3, #4]
 1566 0114 7A4B     		ldr	r3, .L98+56
 1567 0116 1A80     		strh	r2, [r3]	@ movhi
 366:.\main.c      ****                     initial_pos_valid = 2;
 1568              		.loc 1 366 0
 1569 0118 764B     		ldr	r3, .L98+44
 1570 011a 0222     		movs	r2, #2
 1571 011c 1A70     		strb	r2, [r3]
 367:.\main.c      ****                     initForward();
 1572              		.loc 1 367 0
 1573 011e FFF7FEFF 		bl	initForward
 368:.\main.c      ****                 }
 369:.\main.c      ****             break;
 1574              		.loc 1 369 0
 1575 0122 C9E2     		b	.L41
 1576              	.L53:
 1577 0124 C8E2     		b	.L41
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 36


 1578              	.L49:
 370:.\main.c      ****             case MAP_TRAVERSE:
 371:.\main.c      ****             case DEST_TEST:
 372:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 1579              		.loc 1 372 0
 1580 0126 724B     		ldr	r3, .L98+40
 1581 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 012a 012B     		cmp	r3, #1
 1583 012c 00F0C382 		beq	.L54
 1584              		.loc 1 372 0 is_stmt 0 discriminator 1
 1585 0130 6F4B     		ldr	r3, .L98+40
 1586 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 0134 022B     		cmp	r3, #2
 1588 0136 00F0BE82 		beq	.L54
 1589              		.loc 1 372 0 discriminator 2
 1590 013a 6D4B     		ldr	r3, .L98+40
 1591 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1592 013e 072B     		cmp	r3, #7
 1593 0140 00F0B982 		beq	.L54
 1594              	.LBB4:
 373:.\main.c      ****                     //if(instructionCount > instructionLength) initBrake();
 374:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 375:.\main.c      ****                     char nextStep = instructions[instructionCount];
 1595              		.loc 1 375 0 is_stmt 1
 1596 0144 6F4B     		ldr	r3, .L98+60
 1597 0146 1B88     		ldrh	r3, [r3]
 1598 0148 1A46     		mov	r2, r3
 1599 014a 6F4B     		ldr	r3, .L98+64
 1600 014c 9B5C     		ldrb	r3, [r3, r2]
 1601 014e 87F82330 		strb	r3, [r7, #35]
 376:.\main.c      ****                     leftOn = frontSensors[0] && frontSensors[2];
 1602              		.loc 1 376 0
 1603 0152 654B     		ldr	r3, .L98+32
 1604 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1605 0156 002B     		cmp	r3, #0
 1606 0158 05D0     		beq	.L55
 1607              		.loc 1 376 0 is_stmt 0 discriminator 1
 1608 015a 634B     		ldr	r3, .L98+32
 1609 015c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1610 015e 002B     		cmp	r3, #0
 1611 0160 01D0     		beq	.L55
 1612              		.loc 1 376 0 discriminator 3
 1613 0162 0123     		movs	r3, #1
 1614 0164 00E0     		b	.L56
 1615              	.L55:
 1616              		.loc 1 376 0 discriminator 4
 1617 0166 0023     		movs	r3, #0
 1618              	.L56:
 1619              		.loc 1 376 0 discriminator 6
 1620 0168 DAB2     		uxtb	r2, r3
 1621 016a 684B     		ldr	r3, .L98+68
 1622 016c 1A70     		strb	r2, [r3]
 377:.\main.c      ****                     rightOn = frontSensors[4] && frontSensors[2];
 1623              		.loc 1 377 0 is_stmt 1 discriminator 6
 1624 016e 5E4B     		ldr	r3, .L98+32
 1625 0170 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1626 0172 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 37


 1627 0174 05D0     		beq	.L57
 1628              		.loc 1 377 0 is_stmt 0 discriminator 1
 1629 0176 5C4B     		ldr	r3, .L98+32
 1630 0178 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1631 017a 002B     		cmp	r3, #0
 1632 017c 01D0     		beq	.L57
 1633              		.loc 1 377 0 discriminator 3
 1634 017e 0123     		movs	r3, #1
 1635 0180 00E0     		b	.L58
 1636              	.L57:
 1637              		.loc 1 377 0 discriminator 4
 1638 0182 0023     		movs	r3, #0
 1639              	.L58:
 1640              		.loc 1 377 0 discriminator 6
 1641 0184 DAB2     		uxtb	r2, r3
 1642 0186 624B     		ldr	r3, .L98+72
 1643 0188 1A70     		strb	r2, [r3]
 378:.\main.c      **** 
 379:.\main.c      ****                     //else if (overshot_target == 1 && (nextStep == 'D' || nextStep == 'U' || nextS
 380:.\main.c      ****                     if (overshot_target == 1)
 1644              		.loc 1 380 0 is_stmt 1 discriminator 6
 1645 018a 624B     		ldr	r3, .L98+76
 1646 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1647 018e 012B     		cmp	r3, #1
 1648 0190 40F07A81 		bne	.L59
 1649              	.LBB5:
 381:.\main.c      ****                     {
 382:.\main.c      ****                                 
 383:.\main.c      ****                                 //instructionCount += 2;
 384:.\main.c      ****                                 //nextStep = instructions[instructionCount]; 
 385:.\main.c      ****                         
 386:.\main.c      ****                                 isr_quad1_Stop();
 1650              		.loc 1 386 0
 1651 0194 FFF7FEFF 		bl	isr_quad1_Stop
 387:.\main.c      ****                                 
 388:.\main.c      ****                                 char mes[32];
 389:.\main.c      ****                                 sprintf(mes, "Dist travel: %d\r\n", accum_dist);
 1652              		.loc 1 389 0
 1653 0198 5F4B     		ldr	r3, .L98+80
 1654 019a 1B88     		ldrh	r3, [r3]
 1655 019c 1BB2     		sxth	r3, r3
 1656 019e 3A46     		mov	r2, r7
 1657 01a0 1046     		mov	r0, r2
 1658 01a2 5E49     		ldr	r1, .L98+84
 1659 01a4 1A46     		mov	r2, r3
 1660 01a6 FFF7FEFF 		bl	sprintf
 390:.\main.c      ****                                  UART_PutString(mes);
 1661              		.loc 1 390 0
 1662 01aa 3B46     		mov	r3, r7
 1663 01ac 1846     		mov	r0, r3
 1664 01ae FFF7FEFF 		bl	UART_PutString
 391:.\main.c      ****                                  accum_dist = 0;
 1665              		.loc 1 391 0
 1666 01b2 594B     		ldr	r3, .L98+80
 1667 01b4 0022     		movs	r2, #0
 1668 01b6 1A80     		strh	r2, [r3]	@ movhi
 392:.\main.c      ****                                 uint8 nextStepDist;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 38


 393:.\main.c      ****                                 if(instructionCount <= instructionLength - 3) nextStepDist = instru
 1669              		.loc 1 393 0
 1670 01b8 524B     		ldr	r3, .L98+60
 1671 01ba 1B88     		ldrh	r3, [r3]
 1672 01bc 1A46     		mov	r2, r3
 1673 01be 584B     		ldr	r3, .L98+88
 1674 01c0 1B88     		ldrh	r3, [r3]
 1675 01c2 033B     		subs	r3, r3, #3
 1676 01c4 9A42     		cmp	r2, r3
 1677 01c6 07DC     		bgt	.L60
 1678              		.loc 1 393 0 is_stmt 0 discriminator 1
 1679 01c8 4E4B     		ldr	r3, .L98+60
 1680 01ca 1B88     		ldrh	r3, [r3]
 1681 01cc 0333     		adds	r3, r3, #3
 1682 01ce 4E4A     		ldr	r2, .L98+64
 1683 01d0 D35C     		ldrb	r3, [r2, r3]
 1684 01d2 87F82530 		strb	r3, [r7, #37]
 1685 01d6 02E0     		b	.L61
 1686              	.L60:
 394:.\main.c      ****                                 else nextStepDist = 0;
 1687              		.loc 1 394 0 is_stmt 1
 1688 01d8 0023     		movs	r3, #0
 1689 01da 87F82530 		strb	r3, [r7, #37]
 1690              	.L61:
 395:.\main.c      ****                                 
 396:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 1691              		.loc 1 396 0
 1692 01de 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 1693 01e2 9BB2     		uxth	r3, r3
 1694 01e4 1A46     		mov	r2, r3	@ movhi
 1695 01e6 D200     		lsls	r2, r2, #3
 1696 01e8 1344     		add	r3, r3, r2
 1697 01ea 1B01     		lsls	r3, r3, #4
 1698 01ec 9BB2     		uxth	r3, r3
 1699 01ee 9AB2     		uxth	r2, r3
 1700 01f0 4C4B     		ldr	r3, .L98+92
 1701 01f2 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****                                 
 398:.\main.c      ****                                 
 399:.\main.c      ****                                     UART_PutString("Trigger quad\r\n");
 1702              		.loc 1 399 0
 1703 01f4 4C48     		ldr	r0, .L98+96
 1704 01f6 FFF7FEFF 		bl	UART_PutString
 400:.\main.c      ****                                     sprintf(mes, "instruct trig:%d\r\n", instructions[instructionCo
 1705              		.loc 1 400 0
 1706 01fa 424B     		ldr	r3, .L98+60
 1707 01fc 1B88     		ldrh	r3, [r3]
 1708 01fe 1A46     		mov	r2, r3
 1709 0200 414B     		ldr	r3, .L98+64
 1710 0202 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1711 0204 1A46     		mov	r2, r3
 1712 0206 3B46     		mov	r3, r7
 1713 0208 1846     		mov	r0, r3
 1714 020a 4849     		ldr	r1, .L98+100
 1715 020c FFF7FEFF 		bl	sprintf
 401:.\main.c      ****                                     UART_PutString(mes);
 1716              		.loc 1 401 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 39


 1717 0210 3B46     		mov	r3, r7
 1718 0212 1846     		mov	r0, r3
 1719 0214 FFF7FEFF 		bl	UART_PutString
 402:.\main.c      ****                                     nextStep = instructions[instructionCount];
 1720              		.loc 1 402 0
 1721 0218 3A4B     		ldr	r3, .L98+60
 1722 021a 1B88     		ldrh	r3, [r3]
 1723 021c 1A46     		mov	r2, r3
 1724 021e 3A4B     		ldr	r3, .L98+64
 1725 0220 9B5C     		ldrb	r3, [r3, r2]
 1726 0222 87F82330 		strb	r3, [r7, #35]
 403:.\main.c      ****                                     switch(nextStep)
 1727              		.loc 1 403 0
 1728 0226 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1729 022a 443B     		subs	r3, r3, #68
 1730 022c 112B     		cmp	r3, #17
 1731 022e 00F2F880 		bhi	.L62
 1732 0232 01A2     		adr	r2, .L64
 1733 0234 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1734              		.p2align 2
 1735              	.L64:
 1736 0238 3D030000 		.word	.L63+1
 1737 023c 23040000 		.word	.L62+1
 1738 0240 23040000 		.word	.L62+1
 1739 0244 23040000 		.word	.L62+1
 1740 0248 23040000 		.word	.L62+1
 1741 024c 23040000 		.word	.L62+1
 1742 0250 23040000 		.word	.L62+1
 1743 0254 23040000 		.word	.L62+1
 1744 0258 BB030000 		.word	.L65+1
 1745 025c 23040000 		.word	.L62+1
 1746 0260 23040000 		.word	.L62+1
 1747 0264 23040000 		.word	.L62+1
 1748 0268 23040000 		.word	.L62+1
 1749 026c 23040000 		.word	.L62+1
 1750 0270 EF030000 		.word	.L66+1
 1751 0274 71030000 		.word	.L67+1
 1752 0278 23040000 		.word	.L62+1
 1753 027c 81020000 		.word	.L68+1
 1754              		.p2align 1
 1755              	.L68:
 404:.\main.c      ****                                     {
 405:.\main.c      ****                                         case 'U':
 406:.\main.c      ****                                              Timer_Deadzone_WriteCounter(U_DEADZONE);
 1756              		.loc 1 406 0
 1757 0280 2B48     		ldr	r0, .L98+104
 1758 0282 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 407:.\main.c      ****                                             initTurnU();
 1759              		.loc 1 407 0
 1760 0286 FFF7FEFF 		bl	initTurnU
 408:.\main.c      ****                                             //target_distance_quad += 208;
 409:.\main.c      ****                                             target_distance_quad -= (U_OFFSET - QUAD_PER_UNIT * 0.5
 1761              		.loc 1 409 0
 1762 028a 264B     		ldr	r3, .L98+92
 1763 028c 1B88     		ldrh	r3, [r3]
 1764 028e 1BB2     		sxth	r3, r3
 1765 0290 1846     		mov	r0, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 40


 1766 0292 FFF7FEFF 		bl	__aeabi_i2d
 1767 0296 0246     		mov	r2, r0
 1768 0298 0B46     		mov	r3, r1
 1769 029a 1046     		mov	r0, r2
 1770 029c 1946     		mov	r1, r3
 1771 029e 4FF00002 		mov	r2, #0
 1772 02a2 244B     		ldr	r3, .L98+108
 1773 02a4 FFF7FEFF 		bl	__aeabi_dsub
 1774 02a8 0246     		mov	r2, r0
 1775 02aa 0B46     		mov	r3, r1
 1776 02ac 1046     		mov	r0, r2
 1777 02ae 1946     		mov	r1, r3
 1778 02b0 FFF7FEFF 		bl	__aeabi_d2iz
 1779 02b4 0346     		mov	r3, r0
 1780 02b6 9AB2     		uxth	r2, r3
 1781 02b8 1A4B     		ldr	r3, .L98+92
 1782 02ba 1A80     		strh	r2, [r3]	@ movhi
 410:.\main.c      ****                                             Timer_Deadzone_Start();
 1783              		.loc 1 410 0
 1784 02bc FFF7FEFF 		bl	Timer_Deadzone_Start
 411:.\main.c      ****                                              deadzone = 1;
 1785              		.loc 1 411 0
 1786 02c0 1D4B     		ldr	r3, .L98+112
 1787 02c2 0122     		movs	r2, #1
 1788 02c4 1A70     		strb	r2, [r3]
 412:.\main.c      ****                                         break;
 1789              		.loc 1 412 0
 1790 02c6 ACE0     		b	.L62
 1791              	.L99:
 1792              		.align	2
 1793              	.L98:
 1794 02c8 00000000 		.word	min_turn_quad
 1795 02cc 00000000 		.word	max_turn_quad
 1796 02d0 00000000 		.word	isr_quad1
 1797 02d4 00000000 		.word	isr_turn_timer
 1798 02d8 00000000 		.word	button
 1799 02dc 00000000 		.word	isr_deadzone
 1800 02e0 00000000 		.word	BIN_ENABLED
 1801 02e4 00000000 		.word	BT_ENABLED
 1802 02e8 00000000 		.word	frontSensors
 1803 02ec 00000000 		.word	track_mode
 1804 02f0 00000000 		.word	movement_state
 1805 02f4 00000000 		.word	initial_pos_valid
 1806 02f8 00000000 		.word	system_state
 1807 02fc 00000000 		.word	initial_x_pos
 1808 0300 00000000 		.word	initial_y_pos
 1809 0304 00000000 		.word	instructionCount
 1810 0308 00000000 		.word	instructions
 1811 030c 00000000 		.word	leftOn
 1812 0310 00000000 		.word	rightOn
 1813 0314 00000000 		.word	overshot_target
 1814 0318 00000000 		.word	accum_dist
 1815 031c 24000000 		.word	.LC2
 1816 0320 00000000 		.word	instructionLength
 1817 0324 00000000 		.word	target_distance_quad
 1818 0328 38000000 		.word	.LC3
 1819 032c 48000000 		.word	.LC4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 41


 1820 0330 905F0100 		.word	90000
 1821 0334 00004840 		.word	1078460416
 1822 0338 00000000 		.word	deadzone
 1823              	.L63:
 413:.\main.c      ****                                         case 'D':
 414:.\main.c      ****                                             target_distance_quad -= QUAD_PER_UNIT * 0.5;
 1824              		.loc 1 414 0
 1825 033c AD4B     		ldr	r3, .L100
 1826 033e 1B88     		ldrh	r3, [r3]
 1827 0340 1BB2     		sxth	r3, r3
 1828 0342 1846     		mov	r0, r3
 1829 0344 FFF7FEFF 		bl	__aeabi_i2d
 1830 0348 0246     		mov	r2, r0
 1831 034a 0B46     		mov	r3, r1
 1832 034c 1046     		mov	r0, r2
 1833 034e 1946     		mov	r1, r3
 1834 0350 4FF00002 		mov	r2, #0
 1835 0354 A84B     		ldr	r3, .L100+4
 1836 0356 FFF7FEFF 		bl	__aeabi_dsub
 1837 035a 0246     		mov	r2, r0
 1838 035c 0B46     		mov	r3, r1
 1839 035e 1046     		mov	r0, r2
 1840 0360 1946     		mov	r1, r3
 1841 0362 FFF7FEFF 		bl	__aeabi_d2iz
 1842 0366 0346     		mov	r3, r0
 1843 0368 9AB2     		uxth	r2, r3
 1844 036a A24B     		ldr	r3, .L100
 1845 036c 1A80     		strh	r2, [r3]	@ movhi
 415:.\main.c      ****                                             //do nothing
 416:.\main.c      ****                                         break;
 1846              		.loc 1 416 0
 1847 036e 58E0     		b	.L62
 1848              	.L67:
 417:.\main.c      ****                                         case 'S':
 418:.\main.c      ****                                             inittrackLineZ();
 1849              		.loc 1 418 0
 1850 0370 FFF7FEFF 		bl	inittrackLineZ
 419:.\main.c      ****                                             Timer_Deadzone_WriteCounter(S_DEADZONE);
 1851              		.loc 1 419 0
 1852 0374 42F21070 		movw	r0, #10000
 1853 0378 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 420:.\main.c      ****                                              target_distance_quad -= (QUAD_PER_UNIT * 0.5);
 1854              		.loc 1 420 0
 1855 037c 9D4B     		ldr	r3, .L100
 1856 037e 1B88     		ldrh	r3, [r3]
 1857 0380 1BB2     		sxth	r3, r3
 1858 0382 1846     		mov	r0, r3
 1859 0384 FFF7FEFF 		bl	__aeabi_i2d
 1860 0388 0246     		mov	r2, r0
 1861 038a 0B46     		mov	r3, r1
 1862 038c 1046     		mov	r0, r2
 1863 038e 1946     		mov	r1, r3
 1864 0390 4FF00002 		mov	r2, #0
 1865 0394 984B     		ldr	r3, .L100+4
 1866 0396 FFF7FEFF 		bl	__aeabi_dsub
 1867 039a 0246     		mov	r2, r0
 1868 039c 0B46     		mov	r3, r1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 42


 1869 039e 1046     		mov	r0, r2
 1870 03a0 1946     		mov	r1, r3
 1871 03a2 FFF7FEFF 		bl	__aeabi_d2iz
 1872 03a6 0346     		mov	r3, r0
 1873 03a8 9AB2     		uxth	r2, r3
 1874 03aa 924B     		ldr	r3, .L100
 1875 03ac 1A80     		strh	r2, [r3]	@ movhi
 421:.\main.c      ****                                             Timer_Deadzone_Start();
 1876              		.loc 1 421 0
 1877 03ae FFF7FEFF 		bl	Timer_Deadzone_Start
 422:.\main.c      ****                                             deadzone = 1;
 1878              		.loc 1 422 0
 1879 03b2 924B     		ldr	r3, .L100+8
 1880 03b4 0122     		movs	r2, #1
 1881 03b6 1A70     		strb	r2, [r3]
 423:.\main.c      ****                                         break;
 1882              		.loc 1 423 0
 1883 03b8 33E0     		b	.L62
 1884              	.L65:
 424:.\main.c      ****                                         case 'L':
 425:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 426:.\main.c      ****                                         min_turn_quad = QUAD_TURN_MIN;
 1885              		.loc 1 426 0
 1886 03ba 914B     		ldr	r3, .L100+12
 1887 03bc A822     		movs	r2, #168
 1888 03be 1A80     		strh	r2, [r3]	@ movhi
 427:.\main.c      ****                                         max_turn_quad = QUAD_TURN_MAX;
 1889              		.loc 1 427 0
 1890 03c0 904B     		ldr	r3, .L100+16
 1891 03c2 F822     		movs	r2, #248
 1892 03c4 1A80     		strh	r2, [r3]	@ movhi
 428:.\main.c      ****                                         initTurnLeft();
 1893              		.loc 1 428 0
 1894 03c6 FFF7FEFF 		bl	initTurnLeft
 429:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1895              		.loc 1 429 0
 1896 03ca 4CF25030 		movw	r0, #50000
 1897 03ce FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 430:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1898              		.loc 1 430 0
 1899 03d2 884B     		ldr	r3, .L100
 1900 03d4 1B88     		ldrh	r3, [r3]
 1901 03d6 9BB2     		uxth	r3, r3
 1902 03d8 8A3B     		subs	r3, r3, #138
 1903 03da 9BB2     		uxth	r3, r3
 1904 03dc 9AB2     		uxth	r2, r3
 1905 03de 854B     		ldr	r3, .L100
 1906 03e0 1A80     		strh	r2, [r3]	@ movhi
 431:.\main.c      ****                                         deadzone = 1;
 1907              		.loc 1 431 0
 1908 03e2 864B     		ldr	r3, .L100+8
 1909 03e4 0122     		movs	r2, #1
 1910 03e6 1A70     		strb	r2, [r3]
 432:.\main.c      ****                                         Timer_Deadzone_Start();
 1911              		.loc 1 432 0
 1912 03e8 FFF7FEFF 		bl	Timer_Deadzone_Start
 433:.\main.c      ****                                             
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 43


 434:.\main.c      ****                                         break;
 1913              		.loc 1 434 0
 1914 03ec 19E0     		b	.L62
 1915              	.L66:
 435:.\main.c      ****                                         case 'R':
 436:.\main.c      ****                                         min_turn_quad = QUAD_TURN_MIN;
 1916              		.loc 1 436 0
 1917 03ee 844B     		ldr	r3, .L100+12
 1918 03f0 A822     		movs	r2, #168
 1919 03f2 1A80     		strh	r2, [r3]	@ movhi
 437:.\main.c      ****                                         max_turn_quad = QUAD_TURN_MAX;
 1920              		.loc 1 437 0
 1921 03f4 834B     		ldr	r3, .L100+16
 1922 03f6 F822     		movs	r2, #248
 1923 03f8 1A80     		strh	r2, [r3]	@ movhi
 438:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 439:.\main.c      ****                                         initTurnRight();
 1924              		.loc 1 439 0
 1925 03fa FFF7FEFF 		bl	initTurnRight
 440:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 1926              		.loc 1 440 0
 1927 03fe 7D4B     		ldr	r3, .L100
 1928 0400 1B88     		ldrh	r3, [r3]
 1929 0402 9BB2     		uxth	r3, r3
 1930 0404 8A3B     		subs	r3, r3, #138
 1931 0406 9BB2     		uxth	r3, r3
 1932 0408 9AB2     		uxth	r2, r3
 1933 040a 7A4B     		ldr	r3, .L100
 1934 040c 1A80     		strh	r2, [r3]	@ movhi
 441:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 442:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 1935              		.loc 1 442 0
 1936 040e 4CF25030 		movw	r0, #50000
 1937 0412 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 443:.\main.c      ****                                         deadzone = 1;
 1938              		.loc 1 443 0
 1939 0416 794B     		ldr	r3, .L100+8
 1940 0418 0122     		movs	r2, #1
 1941 041a 1A70     		strb	r2, [r3]
 444:.\main.c      ****                                         Timer_Deadzone_Start();
 1942              		.loc 1 444 0
 1943 041c FFF7FEFF 		bl	Timer_Deadzone_Start
 445:.\main.c      ****                                             
 446:.\main.c      ****                                         break;
 1944              		.loc 1 446 0
 1945 0420 00BF     		nop
 1946              	.L62:
 447:.\main.c      ****                                     }                                   
 448:.\main.c      ****                                     reached_target = 0;
 1947              		.loc 1 448 0
 1948 0422 794B     		ldr	r3, .L100+20
 1949 0424 0022     		movs	r2, #0
 1950 0426 1A70     		strb	r2, [r3]
 449:.\main.c      ****                                     overshot_target = 0;
 1951              		.loc 1 449 0
 1952 0428 784B     		ldr	r3, .L100+24
 1953 042a 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 44


 1954 042c 1A70     		strb	r2, [r3]
 450:.\main.c      ****                                     actionDebounce = 0;
 1955              		.loc 1 450 0
 1956 042e 0023     		movs	r3, #0
 1957 0430 FB84     		strh	r3, [r7, #38]	@ movhi
 451:.\main.c      ****                                     instructionCount += 2;
 1958              		.loc 1 451 0
 1959 0432 774B     		ldr	r3, .L100+28
 1960 0434 1B88     		ldrh	r3, [r3]
 1961 0436 0233     		adds	r3, r3, #2
 1962 0438 9AB2     		uxth	r2, r3
 1963 043a 754B     		ldr	r3, .L100+28
 1964 043c 1A80     		strh	r2, [r3]	@ movhi
 452:.\main.c      ****                                     if(target_distance_quad < 0) target_distance_quad = 0;
 1965              		.loc 1 452 0
 1966 043e 6D4B     		ldr	r3, .L100
 1967 0440 1B88     		ldrh	r3, [r3]
 1968 0442 1BB2     		sxth	r3, r3
 1969 0444 002B     		cmp	r3, #0
 1970 0446 02DA     		bge	.L69
 1971              		.loc 1 452 0 is_stmt 0 discriminator 1
 1972 0448 6A4B     		ldr	r3, .L100
 1973 044a 0022     		movs	r2, #0
 1974 044c 1A80     		strh	r2, [r3]	@ movhi
 1975              	.L69:
 453:.\main.c      ****                                     //Timer_Deadzone_Start();
 454:.\main.c      ****                                     //deadzone = 1;
 455:.\main.c      ****                                     isr_quad1_StartEx(isr_quad1);
 1976              		.loc 1 455 0 is_stmt 1
 1977 044e 7148     		ldr	r0, .L100+32
 1978 0450 FFF7FEFF 		bl	isr_quad1_StartEx
 456:.\main.c      ****                                     sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 1979              		.loc 1 456 0
 1980 0454 674B     		ldr	r3, .L100
 1981 0456 1B88     		ldrh	r3, [r3]
 1982 0458 1BB2     		sxth	r3, r3
 1983 045a 3A46     		mov	r2, r7
 1984 045c 1046     		mov	r0, r2
 1985 045e 6E49     		ldr	r1, .L100+36
 1986 0460 1A46     		mov	r2, r3
 1987 0462 FFF7FEFF 		bl	sprintf
 457:.\main.c      ****                                     UART_PutString(mes);
 1988              		.loc 1 457 0
 1989 0466 3B46     		mov	r3, r7
 1990 0468 1846     		mov	r0, r3
 1991 046a FFF7FEFF 		bl	UART_PutString
 458:.\main.c      ****                                     sprintf(mes, "instr count:%d\r\n", instructionCount);
 1992              		.loc 1 458 0
 1993 046e 684B     		ldr	r3, .L100+28
 1994 0470 1B88     		ldrh	r3, [r3]
 1995 0472 1A46     		mov	r2, r3
 1996 0474 3B46     		mov	r3, r7
 1997 0476 1846     		mov	r0, r3
 1998 0478 6849     		ldr	r1, .L100+40
 1999 047a FFF7FEFF 		bl	sprintf
 459:.\main.c      ****                                     UART_PutString(mes);
 2000              		.loc 1 459 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 45


 2001 047e 3B46     		mov	r3, r7
 2002 0480 1846     		mov	r0, r3
 2003 0482 FFF7FEFF 		bl	UART_PutString
 2004              	.LBE5:
 2005 0486 16E1     		b	.L54
 2006              	.L59:
 460:.\main.c      ****                                     
 461:.\main.c      ****                     }
 462:.\main.c      ****                     else if((leftOn && (nextStep != 'R')) || (rightOn && (nextStep != 'L'))){ //int
 2007              		.loc 1 462 0
 2008 0488 654B     		ldr	r3, .L100+44
 2009 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2010 048c 002B     		cmp	r3, #0
 2011 048e 03D0     		beq	.L70
 2012              		.loc 1 462 0 is_stmt 0 discriminator 1
 2013 0490 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2014 0494 522B     		cmp	r3, #82
 2015 0496 09D1     		bne	.L71
 2016              	.L70:
 2017              		.loc 1 462 0 discriminator 3
 2018 0498 624B     		ldr	r3, .L100+48
 2019 049a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2020 049c 002B     		cmp	r3, #0
 2021 049e 00F00581 		beq	.L72
 2022              		.loc 1 462 0 discriminator 4
 2023 04a2 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2024 04a6 4C2B     		cmp	r3, #76
 2025 04a8 00F00081 		beq	.L72
 2026              	.L71:
 463:.\main.c      ****                         if(sensorsDisabled == 0)
 2027              		.loc 1 463 0 is_stmt 1
 2028 04ac 5E4B     		ldr	r3, .L100+52
 2029 04ae 1B68     		ldr	r3, [r3]
 2030 04b0 002B     		cmp	r3, #0
 2031 04b2 40F0FA80 		bne	.L73
 464:.\main.c      ****                         {
 465:.\main.c      ****                             actionDebounce++;
 2032              		.loc 1 465 0
 2033 04b6 FB8C     		ldrh	r3, [r7, #38]
 2034 04b8 0133     		adds	r3, r3, #1
 2035 04ba FB84     		strh	r3, [r7, #38]	@ movhi
 466:.\main.c      ****                             if(actionDebounce >= 400)
 2036              		.loc 1 466 0
 2037 04bc FB8C     		ldrh	r3, [r7, #38]
 2038 04be B3F5C87F 		cmp	r3, #400
 2039 04c2 C0F0F280 		bcc	.L73
 2040              	.LBB6:
 467:.\main.c      ****                             {
 468:.\main.c      ****                                 char mes[32];
 469:.\main.c      ****                                 sprintf(mes, "travel:%d, sensors on:%d\r\n", accum_dist, reached_ta
 2041              		.loc 1 469 0
 2042 04c6 594B     		ldr	r3, .L100+56
 2043 04c8 1B88     		ldrh	r3, [r3]
 2044 04ca 1AB2     		sxth	r2, r3
 2045 04cc 4E4B     		ldr	r3, .L100+20
 2046 04ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2047 04d0 1C46     		mov	r4, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 46


 2048 04d2 3B46     		mov	r3, r7
 2049 04d4 1846     		mov	r0, r3
 2050 04d6 5649     		ldr	r1, .L100+60
 2051 04d8 2346     		mov	r3, r4
 2052 04da FFF7FEFF 		bl	sprintf
 470:.\main.c      ****                                  UART_PutString(mes);
 2053              		.loc 1 470 0
 2054 04de 3B46     		mov	r3, r7
 2055 04e0 1846     		mov	r0, r3
 2056 04e2 FFF7FEFF 		bl	UART_PutString
 471:.\main.c      ****                             if(reached_target == 1)
 2057              		.loc 1 471 0
 2058 04e6 484B     		ldr	r3, .L100+20
 2059 04e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2060 04ea 012B     		cmp	r3, #1
 2061 04ec 40F0DD80 		bne	.L73
 2062              	.LBB7:
 472:.\main.c      ****                             {
 473:.\main.c      **** //                                if(nextStep == 'D')
 474:.\main.c      **** //                                {
 475:.\main.c      **** //                                    instructionCount += 2;
 476:.\main.c      **** //                                    nextStep = instructions[instructionCount]; 
 477:.\main.c      **** //                                }
 478:.\main.c      ****                                 
 479:.\main.c      ****                                 sensorsDisabled = 1;
 2063              		.loc 1 479 0
 2064 04f0 4D4B     		ldr	r3, .L100+52
 2065 04f2 0122     		movs	r2, #1
 2066 04f4 1A60     		str	r2, [r3]
 480:.\main.c      ****                                 UART_PutString("Trigger intersection\r\n");
 2067              		.loc 1 480 0
 2068 04f6 4F48     		ldr	r0, .L100+64
 2069 04f8 FFF7FEFF 		bl	UART_PutString
 481:.\main.c      ****                                 //UART_PutString("Deadzone enter\r\n");
 482:.\main.c      ****                                 deadzone = 1;
 2070              		.loc 1 482 0
 2071 04fc 3F4B     		ldr	r3, .L100+8
 2072 04fe 0122     		movs	r2, #1
 2073 0500 1A70     		strb	r2, [r3]
 483:.\main.c      ****                                 
 484:.\main.c      ****                                 accum_dist = 0;
 2074              		.loc 1 484 0
 2075 0502 4A4B     		ldr	r3, .L100+56
 2076 0504 0022     		movs	r2, #0
 2077 0506 1A80     		strh	r2, [r3]	@ movhi
 485:.\main.c      ****                                 uint8 nextStepDist;
 486:.\main.c      ****                                 if(instructionCount <= instructionLength - 5) nextStepDist = instru
 2078              		.loc 1 486 0
 2079 0508 414B     		ldr	r3, .L100+28
 2080 050a 1B88     		ldrh	r3, [r3]
 2081 050c 1A46     		mov	r2, r3
 2082 050e 4A4B     		ldr	r3, .L100+68
 2083 0510 1B88     		ldrh	r3, [r3]
 2084 0512 053B     		subs	r3, r3, #5
 2085 0514 9A42     		cmp	r2, r3
 2086 0516 07DC     		bgt	.L75
 2087              		.loc 1 486 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 47


 2088 0518 3D4B     		ldr	r3, .L100+28
 2089 051a 1B88     		ldrh	r3, [r3]
 2090 051c 0333     		adds	r3, r3, #3
 2091 051e 474A     		ldr	r2, .L100+72
 2092 0520 D35C     		ldrb	r3, [r2, r3]
 2093 0522 87F82430 		strb	r3, [r7, #36]
 2094 0526 02E0     		b	.L76
 2095              	.L75:
 487:.\main.c      ****                                 else nextStepDist = 0;
 2096              		.loc 1 487 0 is_stmt 1
 2097 0528 0023     		movs	r3, #0
 2098 052a 87F82430 		strb	r3, [r7, #36]
 2099              	.L76:
 488:.\main.c      ****                                 target_distance_quad = QUAD_PER_UNIT * (nextStepDist-0);
 2100              		.loc 1 488 0
 2101 052e 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 2102 0532 9BB2     		uxth	r3, r3
 2103 0534 1A46     		mov	r2, r3	@ movhi
 2104 0536 D200     		lsls	r2, r2, #3
 2105 0538 1344     		add	r3, r3, r2
 2106 053a 1B01     		lsls	r3, r3, #4
 2107 053c 9BB2     		uxth	r3, r3
 2108 053e 9AB2     		uxth	r2, r3
 2109 0540 2C4B     		ldr	r3, .L100
 2110 0542 1A80     		strh	r2, [r3]	@ movhi
 489:.\main.c      ****                                 
 490:.\main.c      ****                                 nextStep = instructions[instructionCount];
 2111              		.loc 1 490 0
 2112 0544 324B     		ldr	r3, .L100+28
 2113 0546 1B88     		ldrh	r3, [r3]
 2114 0548 1A46     		mov	r2, r3
 2115 054a 3C4B     		ldr	r3, .L100+72
 2116 054c 9B5C     		ldrb	r3, [r3, r2]
 2117 054e 87F82330 		strb	r3, [r7, #35]
 491:.\main.c      ****                                 
 492:.\main.c      ****                                 switch(nextStep)
 2118              		.loc 1 492 0
 2119 0552 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2120 0556 4C3B     		subs	r3, r3, #76
 2121 0558 092B     		cmp	r3, #9
 2122 055a 73D8     		bhi	.L96
 2123 055c 01A2     		adr	r2, .L79
 2124 055e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2125 0562 00BF     		.p2align 2
 2126              	.L79:
 2127 0564 9B050000 		.word	.L78+1
 2128 0568 45060000 		.word	.L96+1
 2129 056c 45060000 		.word	.L96+1
 2130 0570 45060000 		.word	.L96+1
 2131 0574 45060000 		.word	.L96+1
 2132 0578 45060000 		.word	.L96+1
 2133 057c B9050000 		.word	.L80+1
 2134 0580 8D050000 		.word	.L81+1
 2135 0584 45060000 		.word	.L96+1
 2136 0588 D7050000 		.word	.L82+1
 2137              		.p2align 1
 2138              	.L81:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 48


 493:.\main.c      ****                                 {
 494:.\main.c      ****                                     case 'S':
 495:.\main.c      ****                                         inittrackLineZ();
 2139              		.loc 1 495 0
 2140 058c FFF7FEFF 		bl	inittrackLineZ
 496:.\main.c      ****                                          Timer_Deadzone_WriteCounter(S_DEADZONE);
 2141              		.loc 1 496 0
 2142 0590 42F21070 		movw	r0, #10000
 2143 0594 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 497:.\main.c      ****                                         //do nothing
 498:.\main.c      ****                                     break;
 2144              		.loc 1 498 0
 2145 0598 55E0     		b	.L83
 2146              	.L78:
 499:.\main.c      ****                                     case 'L':
 500:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 501:.\main.c      ****                                         initTurnLeft();
 2147              		.loc 1 501 0
 2148 059a FFF7FEFF 		bl	initTurnLeft
 502:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2149              		.loc 1 502 0
 2150 059e 4CF25030 		movw	r0, #50000
 2151 05a2 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 503:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2152              		.loc 1 503 0
 2153 05a6 134B     		ldr	r3, .L100
 2154 05a8 1B88     		ldrh	r3, [r3]
 2155 05aa 9BB2     		uxth	r3, r3
 2156 05ac 8A3B     		subs	r3, r3, #138
 2157 05ae 9BB2     		uxth	r3, r3
 2158 05b0 9AB2     		uxth	r2, r3
 2159 05b2 104B     		ldr	r3, .L100
 2160 05b4 1A80     		strh	r2, [r3]	@ movhi
 504:.\main.c      ****                                     break;
 2161              		.loc 1 504 0
 2162 05b6 46E0     		b	.L83
 2163              	.L80:
 505:.\main.c      ****                                     case 'R':
 506:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 507:.\main.c      ****                                         initTurnRight();
 2164              		.loc 1 507 0
 2165 05b8 FFF7FEFF 		bl	initTurnRight
 508:.\main.c      ****                                         target_distance_quad -= TURN_OFFSET;
 2166              		.loc 1 508 0
 2167 05bc 0D4B     		ldr	r3, .L100
 2168 05be 1B88     		ldrh	r3, [r3]
 2169 05c0 9BB2     		uxth	r3, r3
 2170 05c2 8A3B     		subs	r3, r3, #138
 2171 05c4 9BB2     		uxth	r3, r3
 2172 05c6 9AB2     		uxth	r2, r3
 2173 05c8 0A4B     		ldr	r3, .L100
 2174 05ca 1A80     		strh	r2, [r3]	@ movhi
 509:.\main.c      ****                                         //target_distance_quad += (208 - TURN_OFFSET);
 510:.\main.c      ****                                         Timer_Deadzone_WriteCounter(TURN_DEADZONE);
 2175              		.loc 1 510 0
 2176 05cc 4CF25030 		movw	r0, #50000
 2177 05d0 FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 49


 511:.\main.c      ****                                     break;
 2178              		.loc 1 511 0
 2179 05d4 37E0     		b	.L83
 2180              	.L82:
 512:.\main.c      ****                                     case 'U':
 513:.\main.c      ****                                         // Direction not tracked any more
 514:.\main.c      ****                                         initTurnU();
 2181              		.loc 1 514 0
 2182 05d6 FFF7FEFF 		bl	initTurnU
 515:.\main.c      ****                                         Timer_Deadzone_WriteCounter(U_DEADZONE);
 2183              		.loc 1 515 0
 2184 05da 1948     		ldr	r0, .L100+76
 2185 05dc FFF7FEFF 		bl	Timer_Deadzone_WriteCounter
 516:.\main.c      ****                                         target_distance_quad -= U_OFFSET;
 2186              		.loc 1 516 0
 2187 05e0 044B     		ldr	r3, .L100
 2188 05e2 1B88     		ldrh	r3, [r3]
 2189 05e4 9BB2     		uxth	r3, r3
 2190 05e6 783B     		subs	r3, r3, #120
 2191 05e8 9BB2     		uxth	r3, r3
 2192 05ea 9AB2     		uxth	r2, r3
 2193 05ec 014B     		ldr	r3, .L100
 2194 05ee 1A80     		strh	r2, [r3]	@ movhi
 517:.\main.c      ****                                         //target_distance_quad += 208;
 518:.\main.c      ****                                     break;
 2195              		.loc 1 518 0
 2196 05f0 29E0     		b	.L83
 2197              	.L101:
 2198 05f2 00BF     		.align	2
 2199              	.L100:
 2200 05f4 00000000 		.word	target_distance_quad
 2201 05f8 00005240 		.word	1079115776
 2202 05fc 00000000 		.word	deadzone
 2203 0600 00000000 		.word	min_turn_quad
 2204 0604 00000000 		.word	max_turn_quad
 2205 0608 00000000 		.word	reached_target
 2206 060c 00000000 		.word	overshot_target
 2207 0610 00000000 		.word	instructionCount
 2208 0614 00000000 		.word	isr_quad1
 2209 0618 5C000000 		.word	.LC5
 2210 061c 70000000 		.word	.LC6
 2211 0620 00000000 		.word	leftOn
 2212 0624 00000000 		.word	rightOn
 2213 0628 00000000 		.word	sensorsDisabled
 2214 062c 00000000 		.word	accum_dist
 2215 0630 84000000 		.word	.LC7
 2216 0634 A0000000 		.word	.LC8
 2217 0638 00000000 		.word	instructionLength
 2218 063c 00000000 		.word	instructions
 2219 0640 905F0100 		.word	90000
 2220              	.L96:
 519:.\main.c      ****                                     
 520:.\main.c      ****                                     default:
 521:.\main.c      ****                                         //do nothing
 522:.\main.c      ****                                         break;
 2221              		.loc 1 522 0
 2222 0644 00BF     		nop
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 50


 2223              	.L83:
 523:.\main.c      ****                                 }
 524:.\main.c      ****                                 if(target_distance_quad < 0) target_distance_quad = 0;
 2224              		.loc 1 524 0
 2225 0646 344B     		ldr	r3, .L102
 2226 0648 1B88     		ldrh	r3, [r3]
 2227 064a 1BB2     		sxth	r3, r3
 2228 064c 002B     		cmp	r3, #0
 2229 064e 02DA     		bge	.L84
 2230              		.loc 1 524 0 is_stmt 0 discriminator 1
 2231 0650 314B     		ldr	r3, .L102
 2232 0652 0022     		movs	r2, #0
 2233 0654 1A80     		strh	r2, [r3]	@ movhi
 2234              	.L84:
 525:.\main.c      ****                                 sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 2235              		.loc 1 525 0 is_stmt 1
 2236 0656 304B     		ldr	r3, .L102
 2237 0658 1B88     		ldrh	r3, [r3]
 2238 065a 1BB2     		sxth	r3, r3
 2239 065c 3A46     		mov	r2, r7
 2240 065e 1046     		mov	r0, r2
 2241 0660 2E49     		ldr	r1, .L102+4
 2242 0662 1A46     		mov	r2, r3
 2243 0664 FFF7FEFF 		bl	sprintf
 526:.\main.c      ****                                  UART_PutString(mes);
 2244              		.loc 1 526 0
 2245 0668 3B46     		mov	r3, r7
 2246 066a 1846     		mov	r0, r3
 2247 066c FFF7FEFF 		bl	UART_PutString
 527:.\main.c      ****                                 
 528:.\main.c      ****                                 Timer_Deadzone_Start();
 2248              		.loc 1 528 0
 2249 0670 FFF7FEFF 		bl	Timer_Deadzone_Start
 529:.\main.c      ****                                 reached_target = 0;
 2250              		.loc 1 529 0
 2251 0674 2A4B     		ldr	r3, .L102+8
 2252 0676 0022     		movs	r2, #0
 2253 0678 1A70     		strb	r2, [r3]
 530:.\main.c      ****                                 actionDebounce = 0;
 2254              		.loc 1 530 0
 2255 067a 0023     		movs	r3, #0
 2256 067c FB84     		strh	r3, [r7, #38]	@ movhi
 531:.\main.c      ****                                 overshot_target = 0;
 2257              		.loc 1 531 0
 2258 067e 294B     		ldr	r3, .L102+12
 2259 0680 0022     		movs	r2, #0
 2260 0682 1A70     		strb	r2, [r3]
 532:.\main.c      ****                                 instructionCount += 2;
 2261              		.loc 1 532 0
 2262 0684 284B     		ldr	r3, .L102+16
 2263 0686 1B88     		ldrh	r3, [r3]
 2264 0688 0233     		adds	r3, r3, #2
 2265 068a 9AB2     		uxth	r2, r3
 2266 068c 264B     		ldr	r3, .L102+16
 2267 068e 1A80     		strh	r2, [r3]	@ movhi
 533:.\main.c      ****                                 sprintf(mes, "instr count:%d\r\n", instructionCount);
 2268              		.loc 1 533 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 51


 2269 0690 254B     		ldr	r3, .L102+16
 2270 0692 1B88     		ldrh	r3, [r3]
 2271 0694 1A46     		mov	r2, r3
 2272 0696 3B46     		mov	r3, r7
 2273 0698 1846     		mov	r0, r3
 2274 069a 2449     		ldr	r1, .L102+20
 2275 069c FFF7FEFF 		bl	sprintf
 534:.\main.c      ****                                 UART_PutString(mes);
 2276              		.loc 1 534 0
 2277 06a0 3B46     		mov	r3, r7
 2278 06a2 1846     		mov	r0, r3
 2279 06a4 FFF7FEFF 		bl	UART_PutString
 2280              	.LBE7:
 2281              	.LBE6:
 463:.\main.c      ****                         {
 2282              		.loc 1 463 0
 2283 06a8 05E0     		b	.L54
 2284              	.L73:
 463:.\main.c      ****                         {
 2285              		.loc 1 463 0 is_stmt 0 discriminator 2
 2286 06aa 04E0     		b	.L54
 2287              	.L72:
 535:.\main.c      ****                                 
 536:.\main.c      ****                             }
 537:.\main.c      ****                             }
 538:.\main.c      ****                         }
 539:.\main.c      ****                     }
 540:.\main.c      ****                     else
 541:.\main.c      ****                     {
 542:.\main.c      ****                         inittrackLineZ();
 2288              		.loc 1 542 0 is_stmt 1
 2289 06ac FFF7FEFF 		bl	inittrackLineZ
 543:.\main.c      ****                         actionDebounce = 0;
 2290              		.loc 1 543 0
 2291 06b0 0023     		movs	r3, #0
 2292 06b2 FB84     		strh	r3, [r7, #38]	@ movhi
 2293              	.LBE4:
 544:.\main.c      ****                     }
 545:.\main.c      ****                 }
 546:.\main.c      ****                 break;
 2294              		.loc 1 546 0
 2295 06b4 FFE7     		b	.L97
 2296              	.L54:
 2297              	.L97:
 2298 06b6 00BF     		nop
 2299              	.L41:
 547:.\main.c      ****         }
 548:.\main.c      ****         
 549:.\main.c      ****         switch(movement_state)
 2300              		.loc 1 549 0
 2301 06b8 1D4B     		ldr	r3, .L102+24
 2302 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2303 06bc 072B     		cmp	r3, #7
 2304 06be 3FF6D8AC 		bhi	.L95
 2305 06c2 01A2     		adr	r2, .L87
 2306 06c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2307              		.p2align 2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 52


 2308              	.L87:
 2309 06c8 E9060000 		.word	.L86+1
 2310 06cc EF060000 		.word	.L88+1
 2311 06d0 F5060000 		.word	.L89+1
 2312 06d4 01070000 		.word	.L90+1
 2313 06d8 07070000 		.word	.L91+1
 2314 06dc 0D070000 		.word	.L92+1
 2315 06e0 13070000 		.word	.L93+1
 2316 06e4 FB060000 		.word	.L94+1
 2317              		.p2align 1
 2318              	.L86:
 550:.\main.c      ****         {
 551:.\main.c      ****             case DRIVE:
 552:.\main.c      ****                 driveForwards();
 2319              		.loc 1 552 0
 2320 06e8 FFF7FEFF 		bl	driveForwards
 553:.\main.c      ****             break;
 2321              		.loc 1 553 0
 2322 06ec 13E0     		b	.L85
 2323              	.L88:
 554:.\main.c      ****             case LTURN:
 555:.\main.c      ****                 turnLeft();
 2324              		.loc 1 555 0
 2325 06ee FFF7FEFF 		bl	turnLeft
 556:.\main.c      ****             break;
 2326              		.loc 1 556 0
 2327 06f2 10E0     		b	.L85
 2328              	.L89:
 557:.\main.c      ****             case RTURN:
 558:.\main.c      ****                 turnRight();
 2329              		.loc 1 558 0
 2330 06f4 FFF7FEFF 		bl	turnRight
 559:.\main.c      ****             break;
 2331              		.loc 1 559 0
 2332 06f8 0DE0     		b	.L85
 2333              	.L94:
 560:.\main.c      ****             case UTURN:
 561:.\main.c      ****                 turnU();
 2334              		.loc 1 561 0
 2335 06fa FFF7FEFF 		bl	turnU
 562:.\main.c      ****             break;
 2336              		.loc 1 562 0
 2337 06fe 0AE0     		b	.L85
 2338              	.L90:
 563:.\main.c      ****             case STOPPED:
 564:.\main.c      ****                 brakeMotor();
 2339              		.loc 1 564 0
 2340 0700 FFF7FEFF 		bl	brakeMotor
 565:.\main.c      ****             break;
 2341              		.loc 1 565 0
 2342 0704 07E0     		b	.L85
 2343              	.L91:
 566:.\main.c      ****             case TRACKING:
 567:.\main.c      ****                 trackLine();
 2344              		.loc 1 567 0
 2345 0706 FFF7FEFF 		bl	trackLine
 568:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 53


 2346              		.loc 1 568 0
 2347 070a 04E0     		b	.L85
 2348              	.L92:
 569:.\main.c      ****             case TRACKING_U:
 570:.\main.c      ****                 trackLineU();
 2349              		.loc 1 570 0
 2350 070c FFF7FEFF 		bl	trackLineU
 571:.\main.c      ****             break;
 2351              		.loc 1 571 0
 2352 0710 01E0     		b	.L85
 2353              	.L93:
 572:.\main.c      ****             case TRACKING_SOFT:
 573:.\main.c      ****                 trackLineZ();
 2354              		.loc 1 573 0
 2355 0712 FFF7FEFF 		bl	trackLineZ
 2356              	.L85:
 574:.\main.c      ****         }      
 575:.\main.c      ****     }   
 2357              		.loc 1 575 0
 2358 0716 ACE4     		b	.L95
 2359              	.L103:
 2360              		.align	2
 2361              	.L102:
 2362 0718 00000000 		.word	target_distance_quad
 2363 071c 5C000000 		.word	.LC5
 2364 0720 00000000 		.word	reached_target
 2365 0724 00000000 		.word	overshot_target
 2366 0728 00000000 		.word	instructionCount
 2367 072c 70000000 		.word	.LC6
 2368 0730 00000000 		.word	movement_state
 2369              		.cfi_endproc
 2370              	.LFE71:
 2371              		.size	main, .-main
 2372              		.section	.text.handle_rx_binary,"ax",%progbits
 2373              		.align	2
 2374              		.global	handle_rx_binary
 2375              		.thumb
 2376              		.thumb_func
 2377              		.type	handle_rx_binary, %function
 2378              	handle_rx_binary:
 2379              	.LFB72:
 576:.\main.c      **** }
 577:.\main.c      **** 
 578:.\main.c      **** /*-------------------------------------------------------------------------------------------------
 579:.\main.c      **** 
 580:.\main.c      **** void handle_rx_binary()
 581:.\main.c      **** {
 2380              		.loc 1 581 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 32
 2383              		@ frame_needed = 1, uses_anonymous_args = 0
 2384              		@ link register save eliminated.
 2385 0000 80B4     		push	{r7}
 2386              		.cfi_def_cfa_offset 4
 2387              		.cfi_offset 7, -4
 2388 0002 89B0     		sub	sp, sp, #36
 2389              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 54


 2390 0004 00AF     		add	r7, sp, #0
 2391              		.cfi_def_cfa_register 7
 582:.\main.c      ****     if(flag_rx == 1)
 2392              		.loc 1 582 0
 2393 0006 524B     		ldr	r3, .L124
 2394 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2395 000a 012B     		cmp	r3, #1
 2396 000c 40F09A80 		bne	.L104
 2397              	.LBB8:
 583:.\main.c      ****     {    
 584:.\main.c      ****         flag_rx = 0;
 2398              		.loc 1 584 0
 2399 0010 4F4B     		ldr	r3, .L124
 2400 0012 0022     		movs	r2, #0
 2401 0014 1A70     		strb	r2, [r3]
 585:.\main.c      ****         
 586:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 2402              		.loc 1 586 0
 2403 0016 4F4B     		ldr	r3, .L124+4
 2404 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2405 001a 1B02     		lsls	r3, r3, #8
 2406 001c 9AB2     		uxth	r2, r3
 2407 001e 4D4B     		ldr	r3, .L124+4
 2408 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2409 0022 9BB2     		uxth	r3, r3
 2410 0024 1343     		orrs	r3, r3, r2
 2411 0026 9BB2     		uxth	r3, r3
 2412 0028 FB83     		strh	r3, [r7, #30]	@ movhi
 587:.\main.c      ****         char byte_packet[12];
 588:.\main.c      ****         char string_packet[12];
 589:.\main.c      ****         
 590:.\main.c      ****         switch(byteCount)
 2413              		.loc 1 590 0
 2414 002a 4B4B     		ldr	r3, .L124+8
 2415 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2416 002e 043B     		subs	r3, r3, #4
 2417 0030 1E2B     		cmp	r3, #30
 2418 0032 00F28780 		bhi	.L104
 2419 0036 01A2     		adr	r2, .L108
 2420 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2421              		.p2align 2
 2422              	.L108:
 2423 003c B9000000 		.word	.L107+1
 2424 0040 45010000 		.word	.L104+1
 2425 0044 CD000000 		.word	.L109+1
 2426 0048 45010000 		.word	.L104+1
 2427 004c D5000000 		.word	.L110+1
 2428 0050 45010000 		.word	.L104+1
 2429 0054 DD000000 		.word	.L111+1
 2430 0058 45010000 		.word	.L104+1
 2431 005c E5000000 		.word	.L112+1
 2432 0060 45010000 		.word	.L104+1
 2433 0064 ED000000 		.word	.L113+1
 2434 0068 45010000 		.word	.L104+1
 2435 006c F5000000 		.word	.L114+1
 2436 0070 45010000 		.word	.L104+1
 2437 0074 FD000000 		.word	.L115+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 55


 2438 0078 45010000 		.word	.L104+1
 2439 007c 05010000 		.word	.L116+1
 2440 0080 45010000 		.word	.L104+1
 2441 0084 0D010000 		.word	.L117+1
 2442 0088 45010000 		.word	.L104+1
 2443 008c 15010000 		.word	.L118+1
 2444 0090 45010000 		.word	.L104+1
 2445 0094 1D010000 		.word	.L119+1
 2446 0098 45010000 		.word	.L104+1
 2447 009c 25010000 		.word	.L120+1
 2448 00a0 45010000 		.word	.L104+1
 2449 00a4 2D010000 		.word	.L121+1
 2450 00a8 45010000 		.word	.L104+1
 2451 00ac 35010000 		.word	.L122+1
 2452 00b0 45010000 		.word	.L104+1
 2453 00b4 3D010000 		.word	.L123+1
 2454              		.p2align 1
 2455              	.L107:
 591:.\main.c      ****         {
 592:.\main.c      ****             case 4:
 593:.\main.c      ****                 buffer_state.rssi = packet[0];
 2456              		.loc 1 593 0
 2457 00b8 264B     		ldr	r3, .L124+4
 2458 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2459 00bc DAB2     		uxtb	r2, r3
 2460 00be 274B     		ldr	r3, .L124+12
 2461 00c0 1A70     		strb	r2, [r3]
 594:.\main.c      ****                 buffer_state.index = packet[1];
 2462              		.loc 1 594 0
 2463 00c2 244B     		ldr	r3, .L124+4
 2464 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2465 00c6 254B     		ldr	r3, .L124+12
 2466 00c8 5A70     		strb	r2, [r3, #1]
 595:.\main.c      ****             break;
 2467              		.loc 1 595 0
 2468 00ca 3BE0     		b	.L104
 2469              	.L109:
 596:.\main.c      ****             case 6:
 597:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 2470              		.loc 1 597 0
 2471 00cc FA8B     		ldrh	r2, [r7, #30]
 2472 00ce 234B     		ldr	r3, .L124+12
 2473 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
 598:.\main.c      ****             break;
 2474              		.loc 1 598 0
 2475 00d2 37E0     		b	.L104
 2476              	.L110:
 599:.\main.c      ****             case 8:
 600:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 2477              		.loc 1 600 0
 2478 00d4 FA8B     		ldrh	r2, [r7, #30]
 2479 00d6 214B     		ldr	r3, .L124+12
 2480 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 601:.\main.c      ****             break;
 2481              		.loc 1 601 0
 2482 00da 33E0     		b	.L104
 2483              	.L111:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 56


 602:.\main.c      ****             case 10:
 603:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 2484              		.loc 1 603 0
 2485 00dc FA8B     		ldrh	r2, [r7, #30]
 2486 00de 1F4B     		ldr	r3, .L124+12
 2487 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 604:.\main.c      ****             break;
 2488              		.loc 1 604 0
 2489 00e2 2FE0     		b	.L104
 2490              	.L112:
 605:.\main.c      ****             case 12:
 606:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 2491              		.loc 1 606 0
 2492 00e4 FA8B     		ldrh	r2, [r7, #30]
 2493 00e6 1D4B     		ldr	r3, .L124+12
 2494 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 607:.\main.c      ****             break;
 2495              		.loc 1 607 0
 2496 00ea 2BE0     		b	.L104
 2497              	.L113:
 608:.\main.c      ****             case 14:
 609:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 2498              		.loc 1 609 0
 2499 00ec FA8B     		ldrh	r2, [r7, #30]
 2500 00ee 1B4B     		ldr	r3, .L124+12
 2501 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 610:.\main.c      ****             break;
 2502              		.loc 1 610 0
 2503 00f2 27E0     		b	.L104
 2504              	.L114:
 611:.\main.c      ****             case 16:
 612:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 2505              		.loc 1 612 0
 2506 00f4 FA8B     		ldrh	r2, [r7, #30]
 2507 00f6 194B     		ldr	r3, .L124+12
 2508 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
 613:.\main.c      ****             break;
 2509              		.loc 1 613 0
 2510 00fa 23E0     		b	.L104
 2511              	.L115:
 614:.\main.c      ****             case 18:
 615:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 2512              		.loc 1 615 0
 2513 00fc FA8B     		ldrh	r2, [r7, #30]
 2514 00fe 174B     		ldr	r3, .L124+12
 2515 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 616:.\main.c      ****             break;
 2516              		.loc 1 616 0
 2517 0102 1FE0     		b	.L104
 2518              	.L116:
 617:.\main.c      ****             case 20:
 618:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 2519              		.loc 1 618 0
 2520 0104 FA8B     		ldrh	r2, [r7, #30]
 2521 0106 154B     		ldr	r3, .L124+12
 2522 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 619:.\main.c      ****             break;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 57


 2523              		.loc 1 619 0
 2524 010a 1BE0     		b	.L104
 2525              	.L117:
 620:.\main.c      ****             case 22:
 621:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 2526              		.loc 1 621 0
 2527 010c FA8B     		ldrh	r2, [r7, #30]
 2528 010e 134B     		ldr	r3, .L124+12
 2529 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 622:.\main.c      ****             break;
 2530              		.loc 1 622 0
 2531 0112 17E0     		b	.L104
 2532              	.L118:
 623:.\main.c      ****             case 24:
 624:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 2533              		.loc 1 624 0
 2534 0114 FA8B     		ldrh	r2, [r7, #30]
 2535 0116 114B     		ldr	r3, .L124+12
 2536 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 625:.\main.c      ****             break;
 2537              		.loc 1 625 0
 2538 011a 13E0     		b	.L104
 2539              	.L119:
 626:.\main.c      ****             case 26:
 627:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 2540              		.loc 1 627 0
 2541 011c FA8B     		ldrh	r2, [r7, #30]
 2542 011e 0F4B     		ldr	r3, .L124+12
 2543 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 628:.\main.c      ****             break;
 2544              		.loc 1 628 0
 2545 0122 0FE0     		b	.L104
 2546              	.L120:
 629:.\main.c      ****             case 28:
 630:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 2547              		.loc 1 630 0
 2548 0124 FA8B     		ldrh	r2, [r7, #30]
 2549 0126 0D4B     		ldr	r3, .L124+12
 2550 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 631:.\main.c      ****             break;
 2551              		.loc 1 631 0
 2552 012a 0BE0     		b	.L104
 2553              	.L121:
 632:.\main.c      ****             case 30:
 633:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 2554              		.loc 1 633 0
 2555 012c FA8B     		ldrh	r2, [r7, #30]
 2556 012e 0B4B     		ldr	r3, .L124+12
 2557 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 634:.\main.c      ****             break;
 2558              		.loc 1 634 0
 2559 0132 07E0     		b	.L104
 2560              	.L122:
 635:.\main.c      ****             case 32:
 636:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 2561              		.loc 1 636 0
 2562 0134 FA8B     		ldrh	r2, [r7, #30]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 58


 2563 0136 094B     		ldr	r3, .L124+12
 2564 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 637:.\main.c      ****             break;
 2565              		.loc 1 637 0
 2566 013a 03E0     		b	.L104
 2567              	.L123:
 638:.\main.c      ****             case 34:
 639:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 2568              		.loc 1 639 0
 2569 013c FA8B     		ldrh	r2, [r7, #30]
 2570 013e 074B     		ldr	r3, .L124+12
 2571 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 640:.\main.c      ****             break;
 2572              		.loc 1 640 0
 2573 0142 00BF     		nop
 2574              	.L104:
 2575              	.LBE8:
 641:.\main.c      ****         }
 642:.\main.c      ****     }
 643:.\main.c      **** }
 2576              		.loc 1 643 0
 2577 0144 2437     		adds	r7, r7, #36
 2578              		.cfi_def_cfa_offset 4
 2579 0146 BD46     		mov	sp, r7
 2580              		.cfi_def_cfa_register 13
 2581              		@ sp needed
 2582 0148 5DF8047B 		ldr	r7, [sp], #4
 2583              		.cfi_restore 7
 2584              		.cfi_def_cfa_offset 0
 2585 014c 7047     		bx	lr
 2586              	.L125:
 2587 014e 00BF     		.align	2
 2588              	.L124:
 2589 0150 00000000 		.word	flag_rx
 2590 0154 00000000 		.word	packet
 2591 0158 00000000 		.word	byteCount
 2592 015c 00000000 		.word	buffer_state
 2593              		.cfi_endproc
 2594              	.LFE72:
 2595              		.size	handle_rx_binary, .-handle_rx_binary
 2596              		.section	.text.setLeftDir,"ax",%progbits
 2597              		.align	2
 2598              		.global	setLeftDir
 2599              		.thumb
 2600              		.thumb_func
 2601              		.type	setLeftDir, %function
 2602              	setLeftDir:
 2603              	.LFB73:
 644:.\main.c      **** 
 645:.\main.c      **** void setLeftDir(uint8 dir)
 646:.\main.c      **** {
 2604              		.loc 1 646 0
 2605              		.cfi_startproc
 2606              		@ args = 0, pretend = 0, frame = 8
 2607              		@ frame_needed = 1, uses_anonymous_args = 0
 2608 0000 80B5     		push	{r7, lr}
 2609              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 59


 2610              		.cfi_offset 7, -8
 2611              		.cfi_offset 14, -4
 2612 0002 82B0     		sub	sp, sp, #8
 2613              		.cfi_def_cfa_offset 16
 2614 0004 00AF     		add	r7, sp, #0
 2615              		.cfi_def_cfa_register 7
 2616 0006 0346     		mov	r3, r0
 2617 0008 FB71     		strb	r3, [r7, #7]
 647:.\main.c      ****     M2_IN2_Write(dir);
 2618              		.loc 1 647 0
 2619 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2620 000c 1846     		mov	r0, r3
 2621 000e FFF7FEFF 		bl	M2_IN2_Write
 648:.\main.c      **** }
 2622              		.loc 1 648 0
 2623 0012 0837     		adds	r7, r7, #8
 2624              		.cfi_def_cfa_offset 8
 2625 0014 BD46     		mov	sp, r7
 2626              		.cfi_def_cfa_register 13
 2627              		@ sp needed
 2628 0016 80BD     		pop	{r7, pc}
 2629              		.cfi_endproc
 2630              	.LFE73:
 2631              		.size	setLeftDir, .-setLeftDir
 2632              		.section	.text.setRightDir,"ax",%progbits
 2633              		.align	2
 2634              		.global	setRightDir
 2635              		.thumb
 2636              		.thumb_func
 2637              		.type	setRightDir, %function
 2638              	setRightDir:
 2639              	.LFB74:
 649:.\main.c      **** 
 650:.\main.c      **** void setRightDir(uint8 dir)
 651:.\main.c      **** {
 2640              		.loc 1 651 0
 2641              		.cfi_startproc
 2642              		@ args = 0, pretend = 0, frame = 8
 2643              		@ frame_needed = 1, uses_anonymous_args = 0
 2644 0000 80B5     		push	{r7, lr}
 2645              		.cfi_def_cfa_offset 8
 2646              		.cfi_offset 7, -8
 2647              		.cfi_offset 14, -4
 2648 0002 82B0     		sub	sp, sp, #8
 2649              		.cfi_def_cfa_offset 16
 2650 0004 00AF     		add	r7, sp, #0
 2651              		.cfi_def_cfa_register 7
 2652 0006 0346     		mov	r3, r0
 2653 0008 FB71     		strb	r3, [r7, #7]
 652:.\main.c      ****     M1_IN2_Write(dir);
 2654              		.loc 1 652 0
 2655 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2656 000c 1846     		mov	r0, r3
 2657 000e FFF7FEFF 		bl	M1_IN2_Write
 653:.\main.c      **** }
 2658              		.loc 1 653 0
 2659 0012 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 60


 2660              		.cfi_def_cfa_offset 8
 2661 0014 BD46     		mov	sp, r7
 2662              		.cfi_def_cfa_register 13
 2663              		@ sp needed
 2664 0016 80BD     		pop	{r7, pc}
 2665              		.cfi_endproc
 2666              	.LFE74:
 2667              		.size	setRightDir, .-setRightDir
 2668              		.section	.rodata
 2669 00b7 00       		.align	2
 2670              	.LC9:
 2671 00b8 6469723A 		.ascii	"dir: %d\015\012\000"
 2671      2025640D 
 2671      0A00
 2672              		.section	.text.reverseDirection,"ax",%progbits
 2673              		.align	2
 2674              		.global	reverseDirection
 2675              		.thumb
 2676              		.thumb_func
 2677              		.type	reverseDirection, %function
 2678              	reverseDirection:
 2679              	.LFB75:
 654:.\main.c      **** 
 655:.\main.c      **** void reverseDirection()
 656:.\main.c      **** {
 2680              		.loc 1 656 0
 2681              		.cfi_startproc
 2682              		@ args = 0, pretend = 0, frame = 32
 2683              		@ frame_needed = 1, uses_anonymous_args = 0
 2684 0000 80B5     		push	{r7, lr}
 2685              		.cfi_def_cfa_offset 8
 2686              		.cfi_offset 7, -8
 2687              		.cfi_offset 14, -4
 2688 0002 88B0     		sub	sp, sp, #32
 2689              		.cfi_def_cfa_offset 40
 2690 0004 00AF     		add	r7, sp, #0
 2691              		.cfi_def_cfa_register 7
 657:.\main.c      ****     direction = !direction;
 2692              		.loc 1 657 0
 2693 0006 114B     		ldr	r3, .L129
 2694 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2695 000a 002B     		cmp	r3, #0
 2696 000c 0CBF     		ite	eq
 2697 000e 0123     		moveq	r3, #1
 2698 0010 0023     		movne	r3, #0
 2699 0012 DBB2     		uxtb	r3, r3
 2700 0014 1A46     		mov	r2, r3
 2701 0016 0D4B     		ldr	r3, .L129
 2702 0018 1A70     		strb	r2, [r3]
 658:.\main.c      ****     setLeftDir(direction);
 2703              		.loc 1 658 0
 2704 001a 0C4B     		ldr	r3, .L129
 2705 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2706 001e 1846     		mov	r0, r3
 2707 0020 FFF7FEFF 		bl	setLeftDir
 659:.\main.c      ****     setRightDir(direction);
 2708              		.loc 1 659 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 61


 2709 0024 094B     		ldr	r3, .L129
 2710 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2711 0028 1846     		mov	r0, r3
 2712 002a FFF7FEFF 		bl	setRightDir
 660:.\main.c      ****     char mes[32];
 661:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 2713              		.loc 1 661 0
 2714 002e 074B     		ldr	r3, .L129
 2715 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2716 0032 1A46     		mov	r2, r3
 2717 0034 3B46     		mov	r3, r7
 2718 0036 1846     		mov	r0, r3
 2719 0038 0549     		ldr	r1, .L129+4
 2720 003a FFF7FEFF 		bl	sprintf
 662:.\main.c      ****     UART_PutString(mes);
 2721              		.loc 1 662 0
 2722 003e 3B46     		mov	r3, r7
 2723 0040 1846     		mov	r0, r3
 2724 0042 FFF7FEFF 		bl	UART_PutString
 663:.\main.c      **** }
 2725              		.loc 1 663 0
 2726 0046 2037     		adds	r7, r7, #32
 2727              		.cfi_def_cfa_offset 8
 2728 0048 BD46     		mov	sp, r7
 2729              		.cfi_def_cfa_register 13
 2730              		@ sp needed
 2731 004a 80BD     		pop	{r7, pc}
 2732              	.L130:
 2733              		.align	2
 2734              	.L129:
 2735 004c 00000000 		.word	direction
 2736 0050 B8000000 		.word	.LC9
 2737              		.cfi_endproc
 2738              	.LFE75:
 2739              		.size	reverseDirection, .-reverseDirection
 2740              		.global	__aeabi_dcmplt
 2741              		.global	__aeabi_ddiv
 2742              		.section	.text.setSpeed,"ax",%progbits
 2743              		.align	2
 2744              		.global	setSpeed
 2745              		.thumb
 2746              		.thumb_func
 2747              		.type	setSpeed, %function
 2748              	setSpeed:
 2749              	.LFB76:
 664:.\main.c      **** 
 665:.\main.c      **** void setSpeed(double left, double right){
 2750              		.loc 1 665 0
 2751              		.cfi_startproc
 2752              		@ args = 0, pretend = 0, frame = 24
 2753              		@ frame_needed = 1, uses_anonymous_args = 0
 2754 0000 80B5     		push	{r7, lr}
 2755              		.cfi_def_cfa_offset 8
 2756              		.cfi_offset 7, -8
 2757              		.cfi_offset 14, -4
 2758 0002 86B0     		sub	sp, sp, #24
 2759              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 62


 2760 0004 00AF     		add	r7, sp, #0
 2761              		.cfi_def_cfa_register 7
 2762 0006 C7E90201 		strd	r0, [r7, #8]
 2763 000a C7E90023 		strd	r2, [r7]
 666:.\main.c      ****     if(right < 0.0)
 2764              		.loc 1 666 0
 2765 000e D7E90001 		ldrd	r0, [r7]
 2766 0012 4FF00002 		mov	r2, #0
 2767 0016 4FF00003 		mov	r3, #0
 2768 001a FFF7FEFF 		bl	__aeabi_dcmplt
 2769 001e 0346     		mov	r3, r0
 2770 0020 002B     		cmp	r3, #0
 2771 0022 10D0     		beq	.L140
 667:.\main.c      ****     {
 668:.\main.c      ****         //char mes[16];
 669:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 670:.\main.c      ****        // UART_PutString(mes);
 671:.\main.c      ****         setRightDir(!direction);
 2772              		.loc 1 671 0
 2773 0024 304B     		ldr	r3, .L142+8
 2774 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2775 0028 002B     		cmp	r3, #0
 2776 002a 0CBF     		ite	eq
 2777 002c 0123     		moveq	r3, #1
 2778 002e 0023     		movne	r3, #0
 2779 0030 DBB2     		uxtb	r3, r3
 2780 0032 1846     		mov	r0, r3
 2781 0034 FFF7FEFF 		bl	setRightDir
 672:.\main.c      ****         right = -right;
 2782              		.loc 1 672 0
 2783 0038 3B68     		ldr	r3, [r7]
 2784 003a 3B60     		str	r3, [r7]
 2785 003c 7B68     		ldr	r3, [r7, #4]
 2786 003e 83F00043 		eor	r3, r3, #-2147483648
 2787 0042 7B60     		str	r3, [r7, #4]
 2788 0044 04E0     		b	.L134
 2789              	.L140:
 673:.\main.c      ****     }
 674:.\main.c      ****     else setRightDir(direction);
 2790              		.loc 1 674 0
 2791 0046 284B     		ldr	r3, .L142+8
 2792 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2793 004a 1846     		mov	r0, r3
 2794 004c FFF7FEFF 		bl	setRightDir
 2795              	.L134:
 675:.\main.c      ****     
 676:.\main.c      ****     if(left < 0.0)
 2796              		.loc 1 676 0
 2797 0050 D7E90201 		ldrd	r0, [r7, #8]
 2798 0054 4FF00002 		mov	r2, #0
 2799 0058 4FF00003 		mov	r3, #0
 2800 005c FFF7FEFF 		bl	__aeabi_dcmplt
 2801 0060 0346     		mov	r3, r0
 2802 0062 002B     		cmp	r3, #0
 2803 0064 10D0     		beq	.L141
 677:.\main.c      ****     {
 678:.\main.c      ****        // char mes[16];
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 63


 679:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 680:.\main.c      ****         //UART_PutString(mes);
 681:.\main.c      ****         setLeftDir(!direction);
 2804              		.loc 1 681 0
 2805 0066 204B     		ldr	r3, .L142+8
 2806 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2807 006a 002B     		cmp	r3, #0
 2808 006c 0CBF     		ite	eq
 2809 006e 0123     		moveq	r3, #1
 2810 0070 0023     		movne	r3, #0
 2811 0072 DBB2     		uxtb	r3, r3
 2812 0074 1846     		mov	r0, r3
 2813 0076 FFF7FEFF 		bl	setLeftDir
 682:.\main.c      ****         left = -left;
 2814              		.loc 1 682 0
 2815 007a BB68     		ldr	r3, [r7, #8]
 2816 007c BB60     		str	r3, [r7, #8]
 2817 007e FB68     		ldr	r3, [r7, #12]
 2818 0080 83F00043 		eor	r3, r3, #-2147483648
 2819 0084 FB60     		str	r3, [r7, #12]
 2820 0086 04E0     		b	.L137
 2821              	.L141:
 683:.\main.c      ****     }
 684:.\main.c      ****     else setLeftDir(direction);
 2822              		.loc 1 684 0
 2823 0088 174B     		ldr	r3, .L142+8
 2824 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2825 008c 1846     		mov	r0, r3
 2826 008e FFF7FEFF 		bl	setLeftDir
 2827              	.L137:
 685:.\main.c      ****     
 686:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 2828              		.loc 1 686 0
 2829 0092 D7E90201 		ldrd	r0, [r7, #8]
 2830 0096 12A3     		adr	r3, .L142
 2831 0098 D3E90023 		ldrd	r2, [r3]
 2832 009c FFF7FEFF 		bl	__aeabi_ddiv
 2833 00a0 0246     		mov	r2, r0
 2834 00a2 0B46     		mov	r3, r1
 2835 00a4 1046     		mov	r0, r2
 2836 00a6 1946     		mov	r1, r3
 2837 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 2838 00ac 0346     		mov	r3, r0
 2839 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 687:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 2840              		.loc 1 687 0
 2841 00b0 D7E90001 		ldrd	r0, [r7]
 2842 00b4 0AA3     		adr	r3, .L142
 2843 00b6 D3E90023 		ldrd	r2, [r3]
 2844 00ba FFF7FEFF 		bl	__aeabi_ddiv
 2845 00be 0246     		mov	r2, r0
 2846 00c0 0B46     		mov	r3, r1
 2847 00c2 1046     		mov	r0, r2
 2848 00c4 1946     		mov	r1, r3
 2849 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 2850 00ca 0346     		mov	r3, r0
 2851 00cc BB82     		strh	r3, [r7, #20]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 64


 688:.\main.c      ****     
 689:.\main.c      ****     leftSpeedLimit = countsRight;
 2852              		.loc 1 689 0
 2853 00ce 074A     		ldr	r2, .L142+12
 2854 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2855 00d2 1380     		strh	r3, [r2]	@ movhi
 690:.\main.c      ****     rightSpeedLimit = countsLeft;
 2856              		.loc 1 690 0
 2857 00d4 064A     		ldr	r2, .L142+16
 2858 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2859 00d8 1380     		strh	r3, [r2]	@ movhi
 691:.\main.c      **** }
 2860              		.loc 1 691 0
 2861 00da 1837     		adds	r7, r7, #24
 2862              		.cfi_def_cfa_offset 8
 2863 00dc BD46     		mov	sp, r7
 2864              		.cfi_def_cfa_register 13
 2865              		@ sp needed
 2866 00de 80BD     		pop	{r7, pc}
 2867              	.L143:
 2868              		.align	3
 2869              	.L142:
 2870 00e0 969526A5 		.word	-1524197994
 2871 00e4 A0DBEF3F 		.word	1072683936
 2872 00e8 00000000 		.word	direction
 2873 00ec 00000000 		.word	leftSpeedLimit
 2874 00f0 00000000 		.word	rightSpeedLimit
 2875              		.cfi_endproc
 2876              	.LFE76:
 2877              		.size	setSpeed, .-setSpeed
 2878 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 2879              		.align	2
 2880              		.global	brakeLeft
 2881              		.thumb
 2882              		.thumb_func
 2883              		.type	brakeLeft, %function
 2884              	brakeLeft:
 2885              	.LFB77:
 692:.\main.c      **** 
 693:.\main.c      **** void brakeLeft()
 694:.\main.c      **** {
 2886              		.loc 1 694 0
 2887              		.cfi_startproc
 2888              		@ args = 0, pretend = 0, frame = 0
 2889              		@ frame_needed = 1, uses_anonymous_args = 0
 2890 0000 80B5     		push	{r7, lr}
 2891              		.cfi_def_cfa_offset 8
 2892              		.cfi_offset 7, -8
 2893              		.cfi_offset 14, -4
 2894 0002 00AF     		add	r7, sp, #0
 2895              		.cfi_def_cfa_register 7
 695:.\main.c      ****     PWM_1_WriteCompare(0);
 2896              		.loc 1 695 0
 2897 0004 0020     		movs	r0, #0
 2898 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 696:.\main.c      ****     left_duty_cycle = 0;
 2899              		.loc 1 696 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 65


 2900 000a 024B     		ldr	r3, .L145
 2901 000c 0022     		movs	r2, #0
 2902 000e 1A80     		strh	r2, [r3]	@ movhi
 697:.\main.c      **** }
 2903              		.loc 1 697 0
 2904 0010 80BD     		pop	{r7, pc}
 2905              	.L146:
 2906 0012 00BF     		.align	2
 2907              	.L145:
 2908 0014 00000000 		.word	left_duty_cycle
 2909              		.cfi_endproc
 2910              	.LFE77:
 2911              		.size	brakeLeft, .-brakeLeft
 2912              		.section	.text.brakeRight,"ax",%progbits
 2913              		.align	2
 2914              		.global	brakeRight
 2915              		.thumb
 2916              		.thumb_func
 2917              		.type	brakeRight, %function
 2918              	brakeRight:
 2919              	.LFB78:
 698:.\main.c      **** 
 699:.\main.c      **** void brakeRight()
 700:.\main.c      **** {
 2920              		.loc 1 700 0
 2921              		.cfi_startproc
 2922              		@ args = 0, pretend = 0, frame = 0
 2923              		@ frame_needed = 1, uses_anonymous_args = 0
 2924 0000 80B5     		push	{r7, lr}
 2925              		.cfi_def_cfa_offset 8
 2926              		.cfi_offset 7, -8
 2927              		.cfi_offset 14, -4
 2928 0002 00AF     		add	r7, sp, #0
 2929              		.cfi_def_cfa_register 7
 701:.\main.c      ****      PWM_2_WriteCompare(0);
 2930              		.loc 1 701 0
 2931 0004 0020     		movs	r0, #0
 2932 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 702:.\main.c      ****      right_duty_cycle = 0;
 2933              		.loc 1 702 0
 2934 000a 024B     		ldr	r3, .L148
 2935 000c 0022     		movs	r2, #0
 2936 000e 1A80     		strh	r2, [r3]	@ movhi
 703:.\main.c      **** }
 2937              		.loc 1 703 0
 2938 0010 80BD     		pop	{r7, pc}
 2939              	.L149:
 2940 0012 00BF     		.align	2
 2941              	.L148:
 2942 0014 00000000 		.word	right_duty_cycle
 2943              		.cfi_endproc
 2944              	.LFE78:
 2945              		.size	brakeRight, .-brakeRight
 2946              		.section	.text.brakeMotor,"ax",%progbits
 2947              		.align	2
 2948              		.global	brakeMotor
 2949              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 66


 2950              		.thumb_func
 2951              		.type	brakeMotor, %function
 2952              	brakeMotor:
 2953              	.LFB79:
 704:.\main.c      **** 
 705:.\main.c      **** void brakeMotor(){
 2954              		.loc 1 705 0
 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 0
 2957              		@ frame_needed = 1, uses_anonymous_args = 0
 2958 0000 80B5     		push	{r7, lr}
 2959              		.cfi_def_cfa_offset 8
 2960              		.cfi_offset 7, -8
 2961              		.cfi_offset 14, -4
 2962 0002 00AF     		add	r7, sp, #0
 2963              		.cfi_def_cfa_register 7
 706:.\main.c      ****     setSpeed(0, 0);
 2964              		.loc 1 706 0
 2965 0004 4FF00000 		mov	r0, #0
 2966 0008 4FF00001 		mov	r1, #0
 2967 000c 4FF00002 		mov	r2, #0
 2968 0010 4FF00003 		mov	r3, #0
 2969 0014 FFF7FEFF 		bl	setSpeed
 707:.\main.c      ****     brakeLeft();
 2970              		.loc 1 707 0
 2971 0018 FFF7FEFF 		bl	brakeLeft
 708:.\main.c      ****     brakeRight();
 2972              		.loc 1 708 0
 2973 001c FFF7FEFF 		bl	brakeRight
 709:.\main.c      **** }
 2974              		.loc 1 709 0
 2975 0020 80BD     		pop	{r7, pc}
 2976              		.cfi_endproc
 2977              	.LFE79:
 2978              		.size	brakeMotor, .-brakeMotor
 2979 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 2980              		.align	2
 2981              		.global	driveForwards
 2982              		.thumb
 2983              		.thumb_func
 2984              		.type	driveForwards, %function
 2985              	driveForwards:
 2986              	.LFB80:
 710:.\main.c      **** 
 711:.\main.c      **** void driveForwards()
 712:.\main.c      **** {
 2987              		.loc 1 712 0
 2988              		.cfi_startproc
 2989              		@ args = 0, pretend = 0, frame = 0
 2990              		@ frame_needed = 1, uses_anonymous_args = 0
 2991 0000 80B5     		push	{r7, lr}
 2992              		.cfi_def_cfa_offset 8
 2993              		.cfi_offset 7, -8
 2994              		.cfi_offset 14, -4
 2995 0002 00AF     		add	r7, sp, #0
 2996              		.cfi_def_cfa_register 7
 713:.\main.c      ****     setSpeed(speed, speed);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 67


 2997              		.loc 1 713 0
 2998 0004 044B     		ldr	r3, .L152
 2999 0006 D3E90001 		ldrd	r0, [r3]
 3000 000a 034B     		ldr	r3, .L152
 3001 000c D3E90023 		ldrd	r2, [r3]
 3002 0010 FFF7FEFF 		bl	setSpeed
 714:.\main.c      **** }
 3003              		.loc 1 714 0
 3004 0014 80BD     		pop	{r7, pc}
 3005              	.L153:
 3006 0016 00BF     		.align	2
 3007              	.L152:
 3008 0018 00000000 		.word	speed
 3009              		.cfi_endproc
 3010              	.LFE80:
 3011              		.size	driveForwards, .-driveForwards
 3012              		.global	__aeabi_dmul
 3013              		.section	.text.turnRight,"ax",%progbits
 3014              		.align	2
 3015              		.global	turnRight
 3016              		.thumb
 3017              		.thumb_func
 3018              		.type	turnRight, %function
 3019              	turnRight:
 3020              	.LFB81:
 715:.\main.c      **** 
 716:.\main.c      **** void turnRight()
 717:.\main.c      **** {
 3021              		.loc 1 717 0
 3022              		.cfi_startproc
 3023              		@ args = 0, pretend = 0, frame = 0
 3024              		@ frame_needed = 1, uses_anonymous_args = 0
 3025 0000 80B5     		push	{r7, lr}
 3026              		.cfi_def_cfa_offset 8
 3027              		.cfi_offset 7, -8
 3028              		.cfi_offset 14, -4
 3029 0002 00AF     		add	r7, sp, #0
 3030              		.cfi_def_cfa_register 7
 718:.\main.c      ****     setSpeed(0,speed * 1.5);
 3031              		.loc 1 718 0
 3032 0004 094B     		ldr	r3, .L155
 3033 0006 D3E90023 		ldrd	r2, [r3]
 3034 000a 1046     		mov	r0, r2
 3035 000c 1946     		mov	r1, r3
 3036 000e 4FF00002 		mov	r2, #0
 3037 0012 074B     		ldr	r3, .L155+4
 3038 0014 FFF7FEFF 		bl	__aeabi_dmul
 3039 0018 0246     		mov	r2, r0
 3040 001a 0B46     		mov	r3, r1
 3041 001c 4FF00000 		mov	r0, #0
 3042 0020 4FF00001 		mov	r1, #0
 3043 0024 FFF7FEFF 		bl	setSpeed
 719:.\main.c      **** }
 3044              		.loc 1 719 0
 3045 0028 80BD     		pop	{r7, pc}
 3046              	.L156:
 3047 002a 00BF     		.align	2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 68


 3048              	.L155:
 3049 002c 00000000 		.word	speed
 3050 0030 0000F83F 		.word	1073217536
 3051              		.cfi_endproc
 3052              	.LFE81:
 3053              		.size	turnRight, .-turnRight
 3054              		.section	.text.turnLeft,"ax",%progbits
 3055              		.align	2
 3056              		.global	turnLeft
 3057              		.thumb
 3058              		.thumb_func
 3059              		.type	turnLeft, %function
 3060              	turnLeft:
 3061              	.LFB82:
 720:.\main.c      **** 
 721:.\main.c      **** void turnLeft()
 722:.\main.c      **** {
 3062              		.loc 1 722 0
 3063              		.cfi_startproc
 3064              		@ args = 0, pretend = 0, frame = 0
 3065              		@ frame_needed = 1, uses_anonymous_args = 0
 3066 0000 80B5     		push	{r7, lr}
 3067              		.cfi_def_cfa_offset 8
 3068              		.cfi_offset 7, -8
 3069              		.cfi_offset 14, -4
 3070 0002 00AF     		add	r7, sp, #0
 3071              		.cfi_def_cfa_register 7
 723:.\main.c      ****     setSpeed(speed * 1.5,0);
 3072              		.loc 1 723 0
 3073 0004 0A4B     		ldr	r3, .L158
 3074 0006 D3E90023 		ldrd	r2, [r3]
 3075 000a 1046     		mov	r0, r2
 3076 000c 1946     		mov	r1, r3
 3077 000e 4FF00002 		mov	r2, #0
 3078 0012 084B     		ldr	r3, .L158+4
 3079 0014 FFF7FEFF 		bl	__aeabi_dmul
 3080 0018 0246     		mov	r2, r0
 3081 001a 0B46     		mov	r3, r1
 3082 001c 1046     		mov	r0, r2
 3083 001e 1946     		mov	r1, r3
 3084 0020 4FF00002 		mov	r2, #0
 3085 0024 4FF00003 		mov	r3, #0
 3086 0028 FFF7FEFF 		bl	setSpeed
 724:.\main.c      **** }
 3087              		.loc 1 724 0
 3088 002c 80BD     		pop	{r7, pc}
 3089              	.L159:
 3090 002e 00BF     		.align	2
 3091              	.L158:
 3092 0030 00000000 		.word	speed
 3093 0034 0000F83F 		.word	1073217536
 3094              		.cfi_endproc
 3095              	.LFE82:
 3096              		.size	turnLeft, .-turnLeft
 3097              		.section	.text.turnU,"ax",%progbits
 3098              		.align	2
 3099              		.global	turnU
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 69


 3100              		.thumb
 3101              		.thumb_func
 3102              		.type	turnU, %function
 3103              	turnU:
 3104              	.LFB83:
 725:.\main.c      **** 
 726:.\main.c      **** void turnU()
 727:.\main.c      **** {
 3105              		.loc 1 727 0
 3106              		.cfi_startproc
 3107              		@ args = 0, pretend = 0, frame = 0
 3108              		@ frame_needed = 1, uses_anonymous_args = 0
 3109 0000 B0B5     		push	{r4, r5, r7, lr}
 3110              		.cfi_def_cfa_offset 16
 3111              		.cfi_offset 4, -16
 3112              		.cfi_offset 5, -12
 3113              		.cfi_offset 7, -8
 3114              		.cfi_offset 14, -4
 3115 0002 00AF     		add	r7, sp, #0
 3116              		.cfi_def_cfa_register 7
 728:.\main.c      ****     setSpeed(-speed*1.5,speed*1.5);
 3117              		.loc 1 728 0
 3118 0004 0F4B     		ldr	r3, .L161
 3119 0006 D3E90023 		ldrd	r2, [r3]
 3120 000a 1046     		mov	r0, r2
 3121 000c 83F00041 		eor	r1, r3, #-2147483648
 3122 0010 4FF00002 		mov	r2, #0
 3123 0014 0C4B     		ldr	r3, .L161+4
 3124 0016 FFF7FEFF 		bl	__aeabi_dmul
 3125 001a 0246     		mov	r2, r0
 3126 001c 0B46     		mov	r3, r1
 3127 001e 1446     		mov	r4, r2
 3128 0020 1D46     		mov	r5, r3
 3129 0022 084B     		ldr	r3, .L161
 3130 0024 D3E90023 		ldrd	r2, [r3]
 3131 0028 1046     		mov	r0, r2
 3132 002a 1946     		mov	r1, r3
 3133 002c 4FF00002 		mov	r2, #0
 3134 0030 054B     		ldr	r3, .L161+4
 3135 0032 FFF7FEFF 		bl	__aeabi_dmul
 3136 0036 0246     		mov	r2, r0
 3137 0038 0B46     		mov	r3, r1
 3138 003a 2046     		mov	r0, r4
 3139 003c 2946     		mov	r1, r5
 3140 003e FFF7FEFF 		bl	setSpeed
 729:.\main.c      **** }
 3141              		.loc 1 729 0
 3142 0042 B0BD     		pop	{r4, r5, r7, pc}
 3143              	.L162:
 3144              		.align	2
 3145              	.L161:
 3146 0044 00000000 		.word	speed
 3147 0048 0000F83F 		.word	1073217536
 3148              		.cfi_endproc
 3149              	.LFE83:
 3150              		.size	turnU, .-turnU
 3151              		.section	.text.initTurnLeft,"ax",%progbits
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 70


 3152              		.align	2
 3153              		.global	initTurnLeft
 3154              		.thumb
 3155              		.thumb_func
 3156              		.type	initTurnLeft, %function
 3157              	initTurnLeft:
 3158              	.LFB84:
 730:.\main.c      **** 
 731:.\main.c      **** void initTurnLeft(){
 3159              		.loc 1 731 0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 0
 3162              		@ frame_needed = 1, uses_anonymous_args = 0
 3163 0000 80B5     		push	{r7, lr}
 3164              		.cfi_def_cfa_offset 8
 3165              		.cfi_offset 7, -8
 3166              		.cfi_offset 14, -4
 3167 0002 00AF     		add	r7, sp, #0
 3168              		.cfi_def_cfa_register 7
 732:.\main.c      ****     Timer_2_Stop();
 3169              		.loc 1 732 0
 3170 0004 FFF7FEFF 		bl	Timer_2_Stop
 733:.\main.c      ****     prev_movement_state = movement_state;
 3171              		.loc 1 733 0
 3172 0008 084B     		ldr	r3, .L164
 3173 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3174 000c 084B     		ldr	r3, .L164+4
 3175 000e 1A70     		strb	r2, [r3]
 734:.\main.c      ****     movement_state = LTURN;
 3176              		.loc 1 734 0
 3177 0010 064B     		ldr	r3, .L164
 3178 0012 0122     		movs	r2, #1
 3179 0014 1A70     		strb	r2, [r3]
 735:.\main.c      ****     brakeLeft();
 3180              		.loc 1 735 0
 3181 0016 FFF7FEFF 		bl	brakeLeft
 736:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 3182              		.loc 1 736 0
 3183 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3184 001e 0346     		mov	r3, r0
 3185 0020 1A46     		mov	r2, r3
 3186 0022 044B     		ldr	r3, .L164+8
 3187 0024 1A80     		strh	r2, [r3]	@ movhi
 737:.\main.c      ****     Timer_2_Start();
 3188              		.loc 1 737 0
 3189 0026 FFF7FEFF 		bl	Timer_2_Start
 738:.\main.c      **** }
 3190              		.loc 1 738 0
 3191 002a 80BD     		pop	{r7, pc}
 3192              	.L165:
 3193              		.align	2
 3194              	.L164:
 3195 002c 00000000 		.word	movement_state
 3196 0030 00000000 		.word	prev_movement_state
 3197 0034 00000000 		.word	start_turn_count
 3198              		.cfi_endproc
 3199              	.LFE84:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 71


 3200              		.size	initTurnLeft, .-initTurnLeft
 3201              		.section	.text.initTurnRight,"ax",%progbits
 3202              		.align	2
 3203              		.global	initTurnRight
 3204              		.thumb
 3205              		.thumb_func
 3206              		.type	initTurnRight, %function
 3207              	initTurnRight:
 3208              	.LFB85:
 739:.\main.c      **** 
 740:.\main.c      **** void initTurnRight(){
 3209              		.loc 1 740 0
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 0
 3212              		@ frame_needed = 1, uses_anonymous_args = 0
 3213 0000 80B5     		push	{r7, lr}
 3214              		.cfi_def_cfa_offset 8
 3215              		.cfi_offset 7, -8
 3216              		.cfi_offset 14, -4
 3217 0002 00AF     		add	r7, sp, #0
 3218              		.cfi_def_cfa_register 7
 741:.\main.c      ****     Timer_2_Stop();
 3219              		.loc 1 741 0
 3220 0004 FFF7FEFF 		bl	Timer_2_Stop
 742:.\main.c      ****     prev_movement_state = movement_state;
 3221              		.loc 1 742 0
 3222 0008 084B     		ldr	r3, .L167
 3223 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3224 000c 084B     		ldr	r3, .L167+4
 3225 000e 1A70     		strb	r2, [r3]
 743:.\main.c      ****     movement_state = RTURN;
 3226              		.loc 1 743 0
 3227 0010 064B     		ldr	r3, .L167
 3228 0012 0222     		movs	r2, #2
 3229 0014 1A70     		strb	r2, [r3]
 744:.\main.c      ****     brakeRight();
 3230              		.loc 1 744 0
 3231 0016 FFF7FEFF 		bl	brakeRight
 745:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3232              		.loc 1 745 0
 3233 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3234 001e 0346     		mov	r3, r0
 3235 0020 1A46     		mov	r2, r3
 3236 0022 044B     		ldr	r3, .L167+8
 3237 0024 1A80     		strh	r2, [r3]	@ movhi
 746:.\main.c      ****     Timer_2_Start();
 3238              		.loc 1 746 0
 3239 0026 FFF7FEFF 		bl	Timer_2_Start
 747:.\main.c      **** }
 3240              		.loc 1 747 0
 3241 002a 80BD     		pop	{r7, pc}
 3242              	.L168:
 3243              		.align	2
 3244              	.L167:
 3245 002c 00000000 		.word	movement_state
 3246 0030 00000000 		.word	prev_movement_state
 3247 0034 00000000 		.word	start_turn_count
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 72


 3248              		.cfi_endproc
 3249              	.LFE85:
 3250              		.size	initTurnRight, .-initTurnRight
 3251              		.section	.text.initTurnU,"ax",%progbits
 3252              		.align	2
 3253              		.global	initTurnU
 3254              		.thumb
 3255              		.thumb_func
 3256              		.type	initTurnU, %function
 3257              	initTurnU:
 3258              	.LFB86:
 748:.\main.c      **** 
 749:.\main.c      **** void initTurnU(){
 3259              		.loc 1 749 0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 0
 3262              		@ frame_needed = 1, uses_anonymous_args = 0
 3263 0000 80B5     		push	{r7, lr}
 3264              		.cfi_def_cfa_offset 8
 3265              		.cfi_offset 7, -8
 3266              		.cfi_offset 14, -4
 3267 0002 00AF     		add	r7, sp, #0
 3268              		.cfi_def_cfa_register 7
 750:.\main.c      ****     Timer_2_Stop();
 3269              		.loc 1 750 0
 3270 0004 FFF7FEFF 		bl	Timer_2_Stop
 751:.\main.c      ****     prev_movement_state = movement_state;
 3271              		.loc 1 751 0
 3272 0008 084B     		ldr	r3, .L170
 3273 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3274 000c 084B     		ldr	r3, .L170+4
 3275 000e 1A70     		strb	r2, [r3]
 752:.\main.c      ****     movement_state = UTURN;
 3276              		.loc 1 752 0
 3277 0010 064B     		ldr	r3, .L170
 3278 0012 0722     		movs	r2, #7
 3279 0014 1A70     		strb	r2, [r3]
 753:.\main.c      ****     brakeMotor();
 3280              		.loc 1 753 0
 3281 0016 FFF7FEFF 		bl	brakeMotor
 754:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 3282              		.loc 1 754 0
 3283 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3284 001e 0346     		mov	r3, r0
 3285 0020 1A46     		mov	r2, r3
 3286 0022 044B     		ldr	r3, .L170+8
 3287 0024 1A80     		strh	r2, [r3]	@ movhi
 755:.\main.c      ****     Timer_2_Start();
 3288              		.loc 1 755 0
 3289 0026 FFF7FEFF 		bl	Timer_2_Start
 756:.\main.c      **** }
 3290              		.loc 1 756 0
 3291 002a 80BD     		pop	{r7, pc}
 3292              	.L171:
 3293              		.align	2
 3294              	.L170:
 3295 002c 00000000 		.word	movement_state
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 73


 3296 0030 00000000 		.word	prev_movement_state
 3297 0034 00000000 		.word	start_turn_count
 3298              		.cfi_endproc
 3299              	.LFE86:
 3300              		.size	initTurnU, .-initTurnU
 3301              		.section	.text.initForward,"ax",%progbits
 3302              		.align	2
 3303              		.global	initForward
 3304              		.thumb
 3305              		.thumb_func
 3306              		.type	initForward, %function
 3307              	initForward:
 3308              	.LFB87:
 757:.\main.c      **** 
 758:.\main.c      **** void initForward(){
 3309              		.loc 1 758 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 0
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313 0000 80B5     		push	{r7, lr}
 3314              		.cfi_def_cfa_offset 8
 3315              		.cfi_offset 7, -8
 3316              		.cfi_offset 14, -4
 3317 0002 00AF     		add	r7, sp, #0
 3318              		.cfi_def_cfa_register 7
 759:.\main.c      ****     brakeMotor();
 3319              		.loc 1 759 0
 3320 0004 FFF7FEFF 		bl	brakeMotor
 760:.\main.c      ****     movement_state = DRIVE;
 3321              		.loc 1 760 0
 3322 0008 014B     		ldr	r3, .L173
 3323 000a 0022     		movs	r2, #0
 3324 000c 1A70     		strb	r2, [r3]
 761:.\main.c      **** }
 3325              		.loc 1 761 0
 3326 000e 80BD     		pop	{r7, pc}
 3327              	.L174:
 3328              		.align	2
 3329              	.L173:
 3330 0010 00000000 		.word	movement_state
 3331              		.cfi_endproc
 3332              	.LFE87:
 3333              		.size	initForward, .-initForward
 3334              		.section	.text.initBrake,"ax",%progbits
 3335              		.align	2
 3336              		.global	initBrake
 3337              		.thumb
 3338              		.thumb_func
 3339              		.type	initBrake, %function
 3340              	initBrake:
 3341              	.LFB88:
 762:.\main.c      **** 
 763:.\main.c      **** void initBrake(){
 3342              		.loc 1 763 0
 3343              		.cfi_startproc
 3344              		@ args = 0, pretend = 0, frame = 0
 3345              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 74


 3346              		@ link register save eliminated.
 3347 0000 80B4     		push	{r7}
 3348              		.cfi_def_cfa_offset 4
 3349              		.cfi_offset 7, -4
 3350 0002 00AF     		add	r7, sp, #0
 3351              		.cfi_def_cfa_register 7
 764:.\main.c      ****     movement_state = STOPPED;
 3352              		.loc 1 764 0
 3353 0004 034B     		ldr	r3, .L176
 3354 0006 0322     		movs	r2, #3
 3355 0008 1A70     		strb	r2, [r3]
 765:.\main.c      **** }
 3356              		.loc 1 765 0
 3357 000a BD46     		mov	sp, r7
 3358              		.cfi_def_cfa_register 13
 3359              		@ sp needed
 3360 000c 5DF8047B 		ldr	r7, [sp], #4
 3361              		.cfi_restore 7
 3362              		.cfi_def_cfa_offset 0
 3363 0010 7047     		bx	lr
 3364              	.L177:
 3365 0012 00BF     		.align	2
 3366              	.L176:
 3367 0014 00000000 		.word	movement_state
 3368              		.cfi_endproc
 3369              	.LFE88:
 3370              		.size	initBrake, .-initBrake
 3371              		.section	.text.initTrack,"ax",%progbits
 3372              		.align	2
 3373              		.global	initTrack
 3374              		.thumb
 3375              		.thumb_func
 3376              		.type	initTrack, %function
 3377              	initTrack:
 3378              	.LFB89:
 766:.\main.c      **** 
 767:.\main.c      **** void initTrack()
 768:.\main.c      **** {
 3379              		.loc 1 768 0
 3380              		.cfi_startproc
 3381              		@ args = 0, pretend = 0, frame = 0
 3382              		@ frame_needed = 1, uses_anonymous_args = 0
 3383              		@ link register save eliminated.
 3384 0000 80B4     		push	{r7}
 3385              		.cfi_def_cfa_offset 4
 3386              		.cfi_offset 7, -4
 3387 0002 00AF     		add	r7, sp, #0
 3388              		.cfi_def_cfa_register 7
 769:.\main.c      ****     movement_state = TRACKING;
 3389              		.loc 1 769 0
 3390 0004 034B     		ldr	r3, .L179
 3391 0006 0422     		movs	r2, #4
 3392 0008 1A70     		strb	r2, [r3]
 770:.\main.c      **** }
 3393              		.loc 1 770 0
 3394 000a BD46     		mov	sp, r7
 3395              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 75


 3396              		@ sp needed
 3397 000c 5DF8047B 		ldr	r7, [sp], #4
 3398              		.cfi_restore 7
 3399              		.cfi_def_cfa_offset 0
 3400 0010 7047     		bx	lr
 3401              	.L180:
 3402 0012 00BF     		.align	2
 3403              	.L179:
 3404 0014 00000000 		.word	movement_state
 3405              		.cfi_endproc
 3406              	.LFE89:
 3407              		.size	initTrack, .-initTrack
 3408              		.section	.text.initTrackU,"ax",%progbits
 3409              		.align	2
 3410              		.global	initTrackU
 3411              		.thumb
 3412              		.thumb_func
 3413              		.type	initTrackU, %function
 3414              	initTrackU:
 3415              	.LFB90:
 771:.\main.c      **** 
 772:.\main.c      **** void initTrackU(){
 3416              		.loc 1 772 0
 3417              		.cfi_startproc
 3418              		@ args = 0, pretend = 0, frame = 0
 3419              		@ frame_needed = 1, uses_anonymous_args = 0
 3420              		@ link register save eliminated.
 3421 0000 80B4     		push	{r7}
 3422              		.cfi_def_cfa_offset 4
 3423              		.cfi_offset 7, -4
 3424 0002 00AF     		add	r7, sp, #0
 3425              		.cfi_def_cfa_register 7
 773:.\main.c      ****     movement_state = TRACKING_U;
 3426              		.loc 1 773 0
 3427 0004 034B     		ldr	r3, .L182
 3428 0006 0522     		movs	r2, #5
 3429 0008 1A70     		strb	r2, [r3]
 774:.\main.c      **** }
 3430              		.loc 1 774 0
 3431 000a BD46     		mov	sp, r7
 3432              		.cfi_def_cfa_register 13
 3433              		@ sp needed
 3434 000c 5DF8047B 		ldr	r7, [sp], #4
 3435              		.cfi_restore 7
 3436              		.cfi_def_cfa_offset 0
 3437 0010 7047     		bx	lr
 3438              	.L183:
 3439 0012 00BF     		.align	2
 3440              	.L182:
 3441 0014 00000000 		.word	movement_state
 3442              		.cfi_endproc
 3443              	.LFE90:
 3444              		.size	initTrackU, .-initTrackU
 3445              		.section	.text.inittrackLineZ,"ax",%progbits
 3446              		.align	2
 3447              		.global	inittrackLineZ
 3448              		.thumb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 76


 3449              		.thumb_func
 3450              		.type	inittrackLineZ, %function
 3451              	inittrackLineZ:
 3452              	.LFB91:
 775:.\main.c      **** 
 776:.\main.c      **** void inittrackLineZ(){
 3453              		.loc 1 776 0
 3454              		.cfi_startproc
 3455              		@ args = 0, pretend = 0, frame = 0
 3456              		@ frame_needed = 1, uses_anonymous_args = 0
 3457              		@ link register save eliminated.
 3458 0000 80B4     		push	{r7}
 3459              		.cfi_def_cfa_offset 4
 3460              		.cfi_offset 7, -4
 3461 0002 00AF     		add	r7, sp, #0
 3462              		.cfi_def_cfa_register 7
 777:.\main.c      ****     movement_state = TRACKING_SOFT;
 3463              		.loc 1 777 0
 3464 0004 034B     		ldr	r3, .L185
 3465 0006 0622     		movs	r2, #6
 3466 0008 1A70     		strb	r2, [r3]
 778:.\main.c      **** }
 3467              		.loc 1 778 0
 3468 000a BD46     		mov	sp, r7
 3469              		.cfi_def_cfa_register 13
 3470              		@ sp needed
 3471 000c 5DF8047B 		ldr	r7, [sp], #4
 3472              		.cfi_restore 7
 3473              		.cfi_def_cfa_offset 0
 3474 0010 7047     		bx	lr
 3475              	.L186:
 3476 0012 00BF     		.align	2
 3477              	.L185:
 3478 0014 00000000 		.word	movement_state
 3479              		.cfi_endproc
 3480              	.LFE91:
 3481              		.size	inittrackLineZ, .-inittrackLineZ
 3482              		.section	.text.rxInt,"ax",%progbits
 3483              		.align	2
 3484              		.global	rxInt
 3485              		.thumb
 3486              		.thumb_func
 3487              		.type	rxInt, %function
 3488              	rxInt:
 3489              	.LFB92:
 779:.\main.c      **** 
 780:.\main.c      **** 
 781:.\main.c      **** 
 782:.\main.c      **** //Binary RF Data
 783:.\main.c      **** CY_ISR(rxInt){
 3490              		.loc 1 783 0
 3491              		.cfi_startproc
 3492              		@ args = 0, pretend = 0, frame = 8
 3493              		@ frame_needed = 1, uses_anonymous_args = 0
 3494 0000 B0B5     		push	{r4, r5, r7, lr}
 3495              		.cfi_def_cfa_offset 16
 3496              		.cfi_offset 4, -16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 77


 3497              		.cfi_offset 5, -12
 3498              		.cfi_offset 7, -8
 3499              		.cfi_offset 14, -4
 3500 0002 82B0     		sub	sp, sp, #8
 3501              		.cfi_def_cfa_offset 24
 3502 0004 00AF     		add	r7, sp, #0
 3503              		.cfi_def_cfa_register 7
 784:.\main.c      ****     char rf_char = UART_GetChar();
 3504              		.loc 1 784 0
 3505 0006 FFF7FEFF 		bl	UART_GetChar
 3506 000a 0346     		mov	r3, r0
 3507 000c FB71     		strb	r3, [r7, #7]
 785:.\main.c      ****     if(rf_char == SOP){
 3508              		.loc 1 785 0
 3509 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3510 0010 AA2B     		cmp	r3, #170
 3511 0012 2BD1     		bne	.L188
 786:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 787:.\main.c      ****             if(byteCount == 34)
 3512              		.loc 1 787 0
 3513 0014 224B     		ldr	r3, .L192
 3514 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3515 0018 222B     		cmp	r3, #34
 3516 001a 20D1     		bne	.L189
 788:.\main.c      ****             {
 789:.\main.c      ****                 system_state = buffer_state;
 3517              		.loc 1 789 0
 3518 001c 214B     		ldr	r3, .L192+4
 3519 001e 224A     		ldr	r2, .L192+8
 3520 0020 1568     		ldr	r5, [r2]	@ unaligned
 3521 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 3522 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 3523 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 3524 0028 1D60     		str	r5, [r3]	@ unaligned
 3525 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 3526 002c 9860     		str	r0, [r3, #8]	@ unaligned
 3527 002e D960     		str	r1, [r3, #12]	@ unaligned
 3528 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 3529 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 3530 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 3531 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 3532 0038 1D61     		str	r5, [r3, #16]	@ unaligned
 3533 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 3534 003c 9861     		str	r0, [r3, #24]	@ unaligned
 3535 003e D961     		str	r1, [r3, #28]	@ unaligned
 790:.\main.c      ****                 if(initial_pos_valid == 0)
 3536              		.loc 1 790 0
 3537 0040 1A4B     		ldr	r3, .L192+12
 3538 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3539 0044 002B     		cmp	r3, #0
 3540 0046 0AD1     		bne	.L189
 791:.\main.c      ****                 {
 792:.\main.c      ****                     LED_Write(~LED_Read());
 3541              		.loc 1 792 0
 3542 0048 FFF7FEFF 		bl	LED_Read
 3543 004c 0346     		mov	r3, r0
 3544 004e DB43     		mvns	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 78


 3545 0050 DBB2     		uxtb	r3, r3
 3546 0052 1846     		mov	r0, r3
 3547 0054 FFF7FEFF 		bl	LED_Write
 793:.\main.c      ****                     initial_pos_valid = 1;
 3548              		.loc 1 793 0
 3549 0058 144B     		ldr	r3, .L192+12
 3550 005a 0122     		movs	r2, #1
 3551 005c 1A70     		strb	r2, [r3]
 3552              	.L189:
 794:.\main.c      ****                 }
 795:.\main.c      ****             }
 796:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 3553              		.loc 1 796 0
 3554 005e 104B     		ldr	r3, .L192
 3555 0060 0222     		movs	r2, #2
 3556 0062 1A70     		strb	r2, [r3]
 797:.\main.c      ****             flag_rx = 0;
 3557              		.loc 1 797 0
 3558 0064 124B     		ldr	r3, .L192+16
 3559 0066 0022     		movs	r2, #0
 3560 0068 1A70     		strb	r2, [r3]
 3561 006a 16E0     		b	.L187
 3562              	.L188:
 798:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 799:.\main.c      ****         }
 800:.\main.c      ****         else
 801:.\main.c      ****         {
 802:.\main.c      ****             packet[byteCount % 2] = rf_char;
 3563              		.loc 1 802 0
 3564 006c 0C4B     		ldr	r3, .L192
 3565 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3566 0070 03F00103 		and	r3, r3, #1
 3567 0074 0F49     		ldr	r1, .L192+20
 3568 0076 FA79     		ldrb	r2, [r7, #7]
 3569 0078 CA54     		strb	r2, [r1, r3]
 803:.\main.c      ****            
 804:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 3570              		.loc 1 804 0
 3571 007a 094B     		ldr	r3, .L192
 3572 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3573 007e 03F00103 		and	r3, r3, #1
 3574 0082 DBB2     		uxtb	r3, r3
 3575 0084 002B     		cmp	r3, #0
 3576 0086 02D0     		beq	.L191
 805:.\main.c      ****             {
 806:.\main.c      ****                 flag_rx = 1;
 3577              		.loc 1 806 0
 3578 0088 094B     		ldr	r3, .L192+16
 3579 008a 0122     		movs	r2, #1
 3580 008c 1A70     		strb	r2, [r3]
 3581              	.L191:
 807:.\main.c      ****             }
 808:.\main.c      ****             byteCount = (byteCount + 1);
 3582              		.loc 1 808 0
 3583 008e 044B     		ldr	r3, .L192
 3584 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3585 0092 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 79


 3586 0094 DAB2     		uxtb	r2, r3
 3587 0096 024B     		ldr	r3, .L192
 3588 0098 1A70     		strb	r2, [r3]
 3589              	.L187:
 809:.\main.c      ****         }
 810:.\main.c      **** }
 3590              		.loc 1 810 0
 3591 009a 0837     		adds	r7, r7, #8
 3592              		.cfi_def_cfa_offset 16
 3593 009c BD46     		mov	sp, r7
 3594              		.cfi_def_cfa_register 13
 3595              		@ sp needed
 3596 009e B0BD     		pop	{r4, r5, r7, pc}
 3597              	.L193:
 3598              		.align	2
 3599              	.L192:
 3600 00a0 00000000 		.word	byteCount
 3601 00a4 00000000 		.word	system_state
 3602 00a8 00000000 		.word	buffer_state
 3603 00ac 00000000 		.word	initial_pos_valid
 3604 00b0 00000000 		.word	flag_rx
 3605 00b4 00000000 		.word	packet
 3606              		.cfi_endproc
 3607              	.LFE92:
 3608              		.size	rxInt, .-rxInt
 3609              		.global	__aeabi_i2f
 3610              		.global	__aeabi_fmul
 3611              		.global	__aeabi_f2iz
 3612              		.section	.rodata
 3613 00c2 0000     		.align	2
 3614              	.LC10:
 3615 00c4 74617267 		.ascii	"target quad: %d\015\012\000"
 3615      65742071 
 3615      7561643A 
 3615      2025640D 
 3615      0A00
 3616 00d6 0000     		.align	2
 3617              	.LC11:
 3618 00d8 72656365 		.ascii	"received: \000"
 3618      69766564 
 3618      3A2000
 3619 00e3 00       		.align	2
 3620              	.LC12:
 3621 00e4 0D0A00   		.ascii	"\015\012\000"
 3622 00e7 00       		.align	2
 3623              	.LC13:
 3624 00e8 6E756D20 		.ascii	"num instruct:%d\015\012\000"
 3624      696E7374 
 3624      72756374 
 3624      3A25640D 
 3624      0A00
 3625 00fa 0000     		.align	2
 3626              	.LC14:
 3627 00fc 73746172 		.ascii	"starting from instruction %d\015\012\000"
 3627      74696E67 
 3627      2066726F 
 3627      6D20696E 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 80


 3627      73747275 
 3628              		.section	.text.BT_rxInt,"ax",%progbits
 3629              		.align	2
 3630              		.global	BT_rxInt
 3631              		.thumb
 3632              		.thumb_func
 3633              		.type	BT_rxInt, %function
 3634              	BT_rxInt:
 3635              	.LFB93:
 811:.\main.c      **** 
 812:.\main.c      **** CY_ISR(BT_rxInt)
 813:.\main.c      **** {
 3636              		.loc 1 813 0
 3637              		.cfi_startproc
 3638              		@ args = 0, pretend = 0, frame = 48
 3639              		@ frame_needed = 1, uses_anonymous_args = 0
 3640 0000 80B5     		push	{r7, lr}
 3641              		.cfi_def_cfa_offset 8
 3642              		.cfi_offset 7, -8
 3643              		.cfi_offset 14, -4
 3644 0002 8CB0     		sub	sp, sp, #48
 3645              		.cfi_def_cfa_offset 56
 3646 0004 00AF     		add	r7, sp, #0
 3647              		.cfi_def_cfa_register 7
 814:.\main.c      ****     char rf_char = UART_GetChar();
 3648              		.loc 1 814 0
 3649 0006 FFF7FEFF 		bl	UART_GetChar
 3650 000a 0346     		mov	r3, r0
 3651 000c 87F82F30 		strb	r3, [r7, #47]
 815:.\main.c      ****     switch(rf_char){
 3652              		.loc 1 815 0
 3653 0010 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3654 0014 313B     		subs	r3, r3, #49
 3655 0016 492B     		cmp	r3, #73
 3656 0018 00F2B782 		bhi	.L194
 3657 001c 01A2     		adr	r2, .L197
 3658 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3659 0022 00BF     		.p2align 2
 3660              	.L197:
 3661 0024 CD030000 		.word	.L196+1
 3662 0028 19020000 		.word	.L198+1
 3663 002c 8B050000 		.word	.L194+1
 3664 0030 8B050000 		.word	.L194+1
 3665 0034 8B050000 		.word	.L194+1
 3666 0038 8B050000 		.word	.L194+1
 3667 003c 8B050000 		.word	.L194+1
 3668 0040 8B050000 		.word	.L194+1
 3669 0044 8B050000 		.word	.L194+1
 3670 0048 8B050000 		.word	.L194+1
 3671 004c 8B050000 		.word	.L194+1
 3672 0050 8B050000 		.word	.L194+1
 3673 0054 8B050000 		.word	.L194+1
 3674 0058 8B050000 		.word	.L194+1
 3675 005c 8B050000 		.word	.L194+1
 3676 0060 8B050000 		.word	.L194+1
 3677 0064 8B050000 		.word	.L194+1
 3678 0068 8B050000 		.word	.L194+1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 81


 3679 006c 8B050000 		.word	.L194+1
 3680 0070 8B050000 		.word	.L194+1
 3681 0074 8B050000 		.word	.L194+1
 3682 0078 8B050000 		.word	.L194+1
 3683 007c 8B050000 		.word	.L194+1
 3684 0080 8B050000 		.word	.L194+1
 3685 0084 8B050000 		.word	.L194+1
 3686 0088 8B050000 		.word	.L194+1
 3687 008c 8B050000 		.word	.L194+1
 3688 0090 8B050000 		.word	.L194+1
 3689 0094 8B050000 		.word	.L194+1
 3690 0098 8B050000 		.word	.L194+1
 3691 009c 8B050000 		.word	.L194+1
 3692 00a0 8B050000 		.word	.L194+1
 3693 00a4 8B050000 		.word	.L194+1
 3694 00a8 8B050000 		.word	.L194+1
 3695 00ac 8B050000 		.word	.L194+1
 3696 00b0 8B050000 		.word	.L194+1
 3697 00b4 8B050000 		.word	.L194+1
 3698 00b8 8B050000 		.word	.L194+1
 3699 00bc 8B050000 		.word	.L194+1
 3700 00c0 8B050000 		.word	.L194+1
 3701 00c4 8B050000 		.word	.L194+1
 3702 00c8 8B050000 		.word	.L194+1
 3703 00cc 8B050000 		.word	.L194+1
 3704 00d0 8B050000 		.word	.L194+1
 3705 00d4 8B050000 		.word	.L194+1
 3706 00d8 8B050000 		.word	.L194+1
 3707 00dc 8B050000 		.word	.L194+1
 3708 00e0 8B050000 		.word	.L194+1
 3709 00e4 4D010000 		.word	.L199+1
 3710 00e8 8B050000 		.word	.L194+1
 3711 00ec 8B050000 		.word	.L194+1
 3712 00f0 71010000 		.word	.L200+1
 3713 00f4 8B050000 		.word	.L194+1
 3714 00f8 7D010000 		.word	.L201+1
 3715 00fc 8B050000 		.word	.L194+1
 3716 0100 8B050000 		.word	.L194+1
 3717 0104 8B050000 		.word	.L194+1
 3718 0108 8B050000 		.word	.L194+1
 3719 010c 8B050000 		.word	.L194+1
 3720 0110 8B050000 		.word	.L194+1
 3721 0114 8B050000 		.word	.L194+1
 3722 0118 8B050000 		.word	.L194+1
 3723 011c 8B050000 		.word	.L194+1
 3724 0120 8B050000 		.word	.L194+1
 3725 0124 AD010000 		.word	.L202+1
 3726 0128 03020000 		.word	.L203+1
 3727 012c 65010000 		.word	.L204+1
 3728 0130 89010000 		.word	.L205+1
 3729 0134 95010000 		.word	.L206+1
 3730 0138 8B050000 		.word	.L194+1
 3731 013c 59010000 		.word	.L207+1
 3732 0140 8B050000 		.word	.L194+1
 3733 0144 8B050000 		.word	.L194+1
 3734 0148 A1010000 		.word	.L208+1
 3735              		.p2align 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 82


 3736              	.L199:
 3737              	.LBB9:
 816:.\main.c      ****     case 'a':
 817:.\main.c      ****         initTurnLeft();
 3738              		.loc 1 817 0
 3739 014c FFF7FEFF 		bl	initTurnLeft
 818:.\main.c      ****         track_mode = NO_TRACK;
 3740              		.loc 1 818 0
 3741 0150 AE4B     		ldr	r3, .L227
 3742 0152 0022     		movs	r2, #0
 3743 0154 1A70     		strb	r2, [r3]
 819:.\main.c      ****         break;
 3744              		.loc 1 819 0
 3745 0156 18E2     		b	.L194
 3746              	.L207:
 820:.\main.c      ****     case 'w':
 821:.\main.c      ****         initForward();
 3747              		.loc 1 821 0
 3748 0158 FFF7FEFF 		bl	initForward
 822:.\main.c      ****         track_mode = NO_TRACK;
 3749              		.loc 1 822 0
 3750 015c AB4B     		ldr	r3, .L227
 3751 015e 0022     		movs	r2, #0
 3752 0160 1A70     		strb	r2, [r3]
 823:.\main.c      ****         break;
 3753              		.loc 1 823 0
 3754 0162 12E2     		b	.L194
 3755              	.L204:
 824:.\main.c      ****     case 's': 
 825:.\main.c      ****         reverseDirection();
 3756              		.loc 1 825 0
 3757 0164 FFF7FEFF 		bl	reverseDirection
 826:.\main.c      ****         track_mode = NO_TRACK;
 3758              		.loc 1 826 0
 3759 0168 A84B     		ldr	r3, .L227
 3760 016a 0022     		movs	r2, #0
 3761 016c 1A70     		strb	r2, [r3]
 827:.\main.c      ****         break;
 3762              		.loc 1 827 0
 3763 016e 0CE2     		b	.L194
 3764              	.L200:
 828:.\main.c      ****     case 'd':
 829:.\main.c      ****         initTurnRight();
 3765              		.loc 1 829 0
 3766 0170 FFF7FEFF 		bl	initTurnRight
 830:.\main.c      ****         track_mode = NO_TRACK;
 3767              		.loc 1 830 0
 3768 0174 A54B     		ldr	r3, .L227
 3769 0176 0022     		movs	r2, #0
 3770 0178 1A70     		strb	r2, [r3]
 831:.\main.c      ****         break;
 3771              		.loc 1 831 0
 3772 017a 06E2     		b	.L194
 3773              	.L201:
 832:.\main.c      ****     case 'f':
 833:.\main.c      ****         initBrake();
 3774              		.loc 1 833 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 83


 3775 017c FFF7FEFF 		bl	initBrake
 834:.\main.c      ****         track_mode = NO_TRACK;
 3776              		.loc 1 834 0
 3777 0180 A24B     		ldr	r3, .L227
 3778 0182 0022     		movs	r2, #0
 3779 0184 1A70     		strb	r2, [r3]
 835:.\main.c      ****         break;
 3780              		.loc 1 835 0
 3781 0186 00E2     		b	.L194
 3782              	.L205:
 836:.\main.c      ****     case('t'):
 837:.\main.c      ****         track_mode = CURVE_TRACK;
 3783              		.loc 1 837 0
 3784 0188 A04B     		ldr	r3, .L227
 3785 018a 0122     		movs	r2, #1
 3786 018c 1A70     		strb	r2, [r3]
 838:.\main.c      ****         initTrack();
 3787              		.loc 1 838 0
 3788 018e FFF7FEFF 		bl	initTrack
 839:.\main.c      ****         break;
 3789              		.loc 1 839 0
 3790 0192 FAE1     		b	.L194
 3791              	.L206:
 840:.\main.c      ****     case('u'):
 841:.\main.c      ****         initTrackU();
 3792              		.loc 1 841 0
 3793 0194 FFF7FEFF 		bl	initTrackU
 842:.\main.c      ****         track_mode = U_TRACK;
 3794              		.loc 1 842 0
 3795 0198 9C4B     		ldr	r3, .L227
 3796 019a 0222     		movs	r2, #2
 3797 019c 1A70     		strb	r2, [r3]
 843:.\main.c      ****         break;
 3798              		.loc 1 843 0
 3799 019e F4E1     		b	.L194
 3800              	.L208:
 844:.\main.c      ****     case('z'):
 845:.\main.c      ****         track_mode = SQUARE_TRACK;
 3801              		.loc 1 845 0
 3802 01a0 9A4B     		ldr	r3, .L227
 3803 01a2 0322     		movs	r2, #3
 3804 01a4 1A70     		strb	r2, [r3]
 846:.\main.c      ****         inittrackLineZ();
 3805              		.loc 1 846 0
 3806 01a6 FFF7FEFF 		bl	inittrackLineZ
 847:.\main.c      ****         break;
 3807              		.loc 1 847 0
 3808 01aa EEE1     		b	.L194
 3809              	.L202:
 848:.\main.c      ****     case('q'):
 849:.\main.c      ****         track_mode = QUAD_STOP;
 3810              		.loc 1 849 0
 3811 01ac 974B     		ldr	r3, .L227
 3812 01ae 0422     		movs	r2, #4
 3813 01b0 1A70     		strb	r2, [r3]
 850:.\main.c      ****         accum_dist = 0;
 3814              		.loc 1 850 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 84


 3815 01b2 974B     		ldr	r3, .L227+4
 3816 01b4 0022     		movs	r2, #0
 3817 01b6 1A80     		strh	r2, [r3]	@ movhi
 851:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 3818              		.loc 1 851 0
 3819 01b8 964B     		ldr	r3, .L227+8
 3820 01ba 1B88     		ldrh	r3, [r3]
 3821 01bc 1BB2     		sxth	r3, r3
 3822 01be 1846     		mov	r0, r3
 3823 01c0 FFF7FEFF 		bl	__aeabi_i2f
 3824 01c4 0246     		mov	r2, r0
 3825 01c6 944B     		ldr	r3, .L227+12
 3826 01c8 1B68     		ldr	r3, [r3]	@ float
 3827 01ca 1046     		mov	r0, r2
 3828 01cc 1946     		mov	r1, r3
 3829 01ce FFF7FEFF 		bl	__aeabi_fmul
 3830 01d2 0346     		mov	r3, r0
 3831 01d4 1846     		mov	r0, r3
 3832 01d6 FFF7FEFF 		bl	__aeabi_f2iz
 3833 01da 0346     		mov	r3, r0
 3834 01dc 9AB2     		uxth	r2, r3
 3835 01de 8F4B     		ldr	r3, .L227+16
 3836 01e0 1A80     		strh	r2, [r3]	@ movhi
 852:.\main.c      ****         char mes[32];
 853:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 3837              		.loc 1 853 0
 3838 01e2 8E4B     		ldr	r3, .L227+16
 3839 01e4 1B88     		ldrh	r3, [r3]
 3840 01e6 1BB2     		sxth	r3, r3
 3841 01e8 3A46     		mov	r2, r7
 3842 01ea 1046     		mov	r0, r2
 3843 01ec 8C49     		ldr	r1, .L227+20
 3844 01ee 1A46     		mov	r2, r3
 3845 01f0 FFF7FEFF 		bl	sprintf
 854:.\main.c      ****         UART_PutString(mes);
 3846              		.loc 1 854 0
 3847 01f4 3B46     		mov	r3, r7
 3848 01f6 1846     		mov	r0, r3
 3849 01f8 FFF7FEFF 		bl	UART_PutString
 855:.\main.c      ****         initForward();
 3850              		.loc 1 855 0
 3851 01fc FFF7FEFF 		bl	initForward
 856:.\main.c      ****         break;
 3852              		.loc 1 856 0
 3853 0200 C3E1     		b	.L194
 3854              	.L203:
 857:.\main.c      ****     case ('r'):
 858:.\main.c      ****         track_mode = RF_STOP;
 3855              		.loc 1 858 0
 3856 0202 824B     		ldr	r3, .L227
 3857 0204 0522     		movs	r2, #5
 3858 0206 1A70     		strb	r2, [r3]
 859:.\main.c      ****         changeToRF();
 3859              		.loc 1 859 0
 3860 0208 FFF7FEFF 		bl	changeToRF
 860:.\main.c      ****         // Make initial position
 861:.\main.c      ****         initial_pos_valid = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 85


 3861              		.loc 1 861 0
 3862 020c 854B     		ldr	r3, .L227+24
 3863 020e 0022     		movs	r2, #0
 3864 0210 1A70     		strb	r2, [r3]
 862:.\main.c      ****         initBrake();
 3865              		.loc 1 862 0
 3866 0212 FFF7FEFF 		bl	initBrake
 863:.\main.c      ****         break;
 3867              		.loc 1 863 0
 3868 0216 B8E1     		b	.L194
 3869              	.L198:
 864:.\main.c      ****     case ('2'):
 865:.\main.c      ****         track_mode = DEST_TEST;
 3870              		.loc 1 865 0
 3871 0218 7C4B     		ldr	r3, .L227
 3872 021a 0622     		movs	r2, #6
 3873 021c 1A70     		strb	r2, [r3]
 866:.\main.c      ****         tracked_direction = robot_direction;
 3874              		.loc 1 866 0
 3875 021e 824B     		ldr	r3, .L227+28
 3876 0220 1B68     		ldr	r3, [r3]
 3877 0222 824A     		ldr	r2, .L227+32
 3878 0224 1360     		str	r3, [r2]
 867:.\main.c      ****         instructionLength = generateDirections();
 3879              		.loc 1 867 0
 3880 0226 FFF7FEFF 		bl	generateDirections
 3881 022a 0346     		mov	r3, r0
 3882 022c 9AB2     		uxth	r2, r3
 3883 022e 804B     		ldr	r3, .L227+36
 3884 0230 1A80     		strh	r2, [r3]	@ movhi
 868:.\main.c      ****         //instructionLength = generateEntireMapDirections();
 869:.\main.c      ****         //char message[128];
 870:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 871:.\main.c      ****         
 872:.\main.c      ****         last_quad_count1 = 0;
 3885              		.loc 1 872 0
 3886 0232 804B     		ldr	r3, .L227+40
 3887 0234 0022     		movs	r2, #0
 3888 0236 1A80     		strh	r2, [r3]	@ movhi
 873:.\main.c      ****         last_quad_count2 = 0;
 3889              		.loc 1 873 0
 3890 0238 7F4B     		ldr	r3, .L227+44
 3891 023a 0022     		movs	r2, #0
 3892 023c 1A80     		strh	r2, [r3]	@ movhi
 874:.\main.c      ****         QuadDec_M1_SetCounter(0);
 3893              		.loc 1 874 0
 3894 023e 0020     		movs	r0, #0
 3895 0240 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 875:.\main.c      ****         QuadDec_M2_SetCounter(0);
 3896              		.loc 1 875 0
 3897 0244 0020     		movs	r0, #0
 3898 0246 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 876:.\main.c      ****         instructionCount = 0;
 3899              		.loc 1 876 0
 3900 024a 7C4B     		ldr	r3, .L227+48
 3901 024c 0022     		movs	r2, #0
 3902 024e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 86


 877:.\main.c      ****         isrRF_RX_Disable();
 3903              		.loc 1 877 0
 3904 0250 FFF7FEFF 		bl	isrRF_RX_Disable
 878:.\main.c      ****         while(rf_char != 'F')
 3905              		.loc 1 878 0
 3906 0254 2CE0     		b	.L210
 3907              	.L213:
 879:.\main.c      ****         {
 880:.\main.c      ****             rf_char = UART_GetChar();
 3908              		.loc 1 880 0
 3909 0256 FFF7FEFF 		bl	UART_GetChar
 3910 025a 0346     		mov	r3, r0
 3911 025c 87F82F30 		strb	r3, [r7, #47]
 881:.\main.c      ****             if(rf_char == 'F') break;
 3912              		.loc 1 881 0
 3913 0260 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3914 0264 462B     		cmp	r3, #70
 3915 0266 00D1     		bne	.L211
 3916 0268 26E0     		b	.L212
 3917              	.L211:
 882:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 3918              		.loc 1 882 0
 3919 026a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3920 026e 2F2B     		cmp	r3, #47
 3921 0270 1ED9     		bls	.L210
 3922              		.loc 1 882 0 is_stmt 0 discriminator 1
 3923 0272 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3924 0276 392B     		cmp	r3, #57
 3925 0278 1AD8     		bhi	.L210
 883:.\main.c      ****             {
 884:.\main.c      ****                 UART_PutString("received: ");
 3926              		.loc 1 884 0 is_stmt 1
 3927 027a 7148     		ldr	r0, .L227+52
 3928 027c FFF7FEFF 		bl	UART_PutString
 885:.\main.c      ****                 UART_PutChar(rf_char);
 3929              		.loc 1 885 0
 3930 0280 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3931 0284 1846     		mov	r0, r3
 3932 0286 FFF7FEFF 		bl	UART_PutChar
 886:.\main.c      ****                 UART_PutString("\r\n");
 3933              		.loc 1 886 0
 3934 028a 6E48     		ldr	r0, .L227+56
 3935 028c FFF7FEFF 		bl	UART_PutString
 887:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 3936              		.loc 1 887 0
 3937 0290 6A4B     		ldr	r3, .L227+48
 3938 0292 1B88     		ldrh	r3, [r3]
 3939 0294 1A46     		mov	r2, r3	@ movhi
 3940 0296 9200     		lsls	r2, r2, #2
 3941 0298 1344     		add	r3, r3, r2
 3942 029a 5B00     		lsls	r3, r3, #1
 3943 029c 9AB2     		uxth	r2, r3
 3944 029e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3945 02a2 9BB2     		uxth	r3, r3
 3946 02a4 1344     		add	r3, r3, r2
 3947 02a6 9BB2     		uxth	r3, r3
 3948 02a8 303B     		subs	r3, r3, #48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 87


 3949 02aa 9AB2     		uxth	r2, r3
 3950 02ac 634B     		ldr	r3, .L227+48
 3951 02ae 1A80     		strh	r2, [r3]	@ movhi
 3952              	.L210:
 878:.\main.c      ****         {
 3953              		.loc 1 878 0
 3954 02b0 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3955 02b4 462B     		cmp	r3, #70
 3956 02b6 CED1     		bne	.L213
 3957              	.L212:
 888:.\main.c      ****             }
 889:.\main.c      ****             
 890:.\main.c      ****         }
 891:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 3958              		.loc 1 891 0
 3959 02b8 6348     		ldr	r0, .L227+60
 3960 02ba FFF7FEFF 		bl	isrRF_RX_StartEx
 892:.\main.c      ****         sprintf(mes, "num instruct:%d\r\n", instructionLength);
 3961              		.loc 1 892 0
 3962 02be 5C4B     		ldr	r3, .L227+36
 3963 02c0 1B88     		ldrh	r3, [r3]
 3964 02c2 1A46     		mov	r2, r3
 3965 02c4 3B46     		mov	r3, r7
 3966 02c6 1846     		mov	r0, r3
 3967 02c8 6049     		ldr	r1, .L227+64
 3968 02ca FFF7FEFF 		bl	sprintf
 893:.\main.c      ****         UART_PutString(mes);
 3969              		.loc 1 893 0
 3970 02ce 3B46     		mov	r3, r7
 3971 02d0 1846     		mov	r0, r3
 3972 02d2 FFF7FEFF 		bl	UART_PutString
 894:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 3973              		.loc 1 894 0
 3974 02d6 594B     		ldr	r3, .L227+48
 3975 02d8 1B88     		ldrh	r3, [r3]
 3976 02da 1A46     		mov	r2, r3
 3977 02dc 3B46     		mov	r3, r7
 3978 02de 1846     		mov	r0, r3
 3979 02e0 5B49     		ldr	r1, .L227+68
 3980 02e2 FFF7FEFF 		bl	sprintf
 895:.\main.c      ****         UART_PutString(mes);
 3981              		.loc 1 895 0
 3982 02e6 3B46     		mov	r3, r7
 3983 02e8 1846     		mov	r0, r3
 3984 02ea FFF7FEFF 		bl	UART_PutString
 896:.\main.c      ****         
 897:.\main.c      ****         int i;
 898:.\main.c      ****         for(i = instructionCount;i < instructionLength; i++)
 3985              		.loc 1 898 0
 3986 02ee 534B     		ldr	r3, .L227+48
 3987 02f0 1B88     		ldrh	r3, [r3]
 3988 02f2 BB62     		str	r3, [r7, #40]
 3989 02f4 18E0     		b	.L214
 3990              	.L217:
 899:.\main.c      ****         {
 900:.\main.c      ****             if(i%2 == 0)
 3991              		.loc 1 900 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 88


 3992 02f6 BB6A     		ldr	r3, [r7, #40]
 3993 02f8 03F00103 		and	r3, r3, #1
 3994 02fc 002B     		cmp	r3, #0
 3995 02fe 07D1     		bne	.L215
 901:.\main.c      ****             {
 902:.\main.c      ****                 UART_PutChar(instructions[i]);
 3996              		.loc 1 902 0
 3997 0300 544A     		ldr	r2, .L227+72
 3998 0302 BB6A     		ldr	r3, [r7, #40]
 3999 0304 1344     		add	r3, r3, r2
 4000 0306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4001 0308 1846     		mov	r0, r3
 4002 030a FFF7FEFF 		bl	UART_PutChar
 4003 030e 08E0     		b	.L216
 4004              	.L215:
 903:.\main.c      ****             }
 904:.\main.c      ****             else UART_PutChar(instructions[i] + 48);
 4005              		.loc 1 904 0
 4006 0310 504A     		ldr	r2, .L227+72
 4007 0312 BB6A     		ldr	r3, [r7, #40]
 4008 0314 1344     		add	r3, r3, r2
 4009 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4010 0318 3033     		adds	r3, r3, #48
 4011 031a DBB2     		uxtb	r3, r3
 4012 031c 1846     		mov	r0, r3
 4013 031e FFF7FEFF 		bl	UART_PutChar
 4014              	.L216:
 898:.\main.c      ****         {
 4015              		.loc 1 898 0 discriminator 2
 4016 0322 BB6A     		ldr	r3, [r7, #40]
 4017 0324 0133     		adds	r3, r3, #1
 4018 0326 BB62     		str	r3, [r7, #40]
 4019              	.L214:
 898:.\main.c      ****         {
 4020              		.loc 1 898 0 is_stmt 0 discriminator 1
 4021 0328 414B     		ldr	r3, .L227+36
 4022 032a 1B88     		ldrh	r3, [r3]
 4023 032c 1A46     		mov	r2, r3
 4024 032e BB6A     		ldr	r3, [r7, #40]
 4025 0330 9A42     		cmp	r2, r3
 4026 0332 E0DC     		bgt	.L217
 905:.\main.c      **** 
 906:.\main.c      ****         }
 907:.\main.c      ****         
 908:.\main.c      ****         instructions[instructionLength] = 'D';
 4027              		.loc 1 908 0 is_stmt 1
 4028 0334 3E4B     		ldr	r3, .L227+36
 4029 0336 1B88     		ldrh	r3, [r3]
 4030 0338 1A46     		mov	r2, r3
 4031 033a 464B     		ldr	r3, .L227+72
 4032 033c 4421     		movs	r1, #68
 4033 033e 9954     		strb	r1, [r3, r2]
 909:.\main.c      ****         instructions[instructionLength+1] = 1;
 4034              		.loc 1 909 0
 4035 0340 3B4B     		ldr	r3, .L227+36
 4036 0342 1B88     		ldrh	r3, [r3]
 4037 0344 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 89


 4038 0346 434A     		ldr	r2, .L227+72
 4039 0348 0121     		movs	r1, #1
 4040 034a D154     		strb	r1, [r2, r3]
 910:.\main.c      ****         instructionLength += 2;
 4041              		.loc 1 910 0
 4042 034c 384B     		ldr	r3, .L227+36
 4043 034e 1B88     		ldrh	r3, [r3]
 4044 0350 0233     		adds	r3, r3, #2
 4045 0352 9AB2     		uxth	r2, r3
 4046 0354 364B     		ldr	r3, .L227+36
 4047 0356 1A80     		strh	r2, [r3]	@ movhi
 911:.\main.c      ****         instructions[instructionLength] = 0;
 4048              		.loc 1 911 0
 4049 0358 354B     		ldr	r3, .L227+36
 4050 035a 1B88     		ldrh	r3, [r3]
 4051 035c 1A46     		mov	r2, r3
 4052 035e 3D4B     		ldr	r3, .L227+72
 4053 0360 0021     		movs	r1, #0
 4054 0362 9954     		strb	r1, [r3, r2]
 912:.\main.c      ****         
 913:.\main.c      ****         UART_PutString("\r\n");
 4055              		.loc 1 913 0
 4056 0364 3748     		ldr	r0, .L227+56
 4057 0366 FFF7FEFF 		bl	UART_PutString
 914:.\main.c      ****         
 915:.\main.c      ****         char nextStep = instructions[instructionCount];
 4058              		.loc 1 915 0
 4059 036a 344B     		ldr	r3, .L227+48
 4060 036c 1B88     		ldrh	r3, [r3]
 4061 036e 1A46     		mov	r2, r3
 4062 0370 384B     		ldr	r3, .L227+72
 4063 0372 9B5C     		ldrb	r3, [r3, r2]
 4064 0374 87F82330 		strb	r3, [r7, #35]
 916:.\main.c      ****         
 917:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1];
 4065              		.loc 1 917 0
 4066 0378 304B     		ldr	r3, .L227+48
 4067 037a 1B88     		ldrh	r3, [r3]
 4068 037c 0133     		adds	r3, r3, #1
 4069 037e 354A     		ldr	r2, .L227+72
 4070 0380 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4071 0382 9BB2     		uxth	r3, r3
 4072 0384 1A46     		mov	r2, r3	@ movhi
 4073 0386 D200     		lsls	r2, r2, #3
 4074 0388 1344     		add	r3, r3, r2
 4075 038a 1B01     		lsls	r3, r3, #4
 4076 038c 9BB2     		uxth	r3, r3
 4077 038e 9AB2     		uxth	r2, r3
 4078 0390 224B     		ldr	r3, .L227+16
 4079 0392 1A80     		strh	r2, [r3]	@ movhi
 918:.\main.c      ****         if(instructionCount == 0) target_distance_quad -= QUAD_PER_UNIT; 
 4080              		.loc 1 918 0
 4081 0394 294B     		ldr	r3, .L227+48
 4082 0396 1B88     		ldrh	r3, [r3]
 4083 0398 002B     		cmp	r3, #0
 4084 039a 07D1     		bne	.L218
 4085              		.loc 1 918 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 90


 4086 039c 1F4B     		ldr	r3, .L227+16
 4087 039e 1B88     		ldrh	r3, [r3]
 4088 03a0 9BB2     		uxth	r3, r3
 4089 03a2 903B     		subs	r3, r3, #144
 4090 03a4 9BB2     		uxth	r3, r3
 4091 03a6 9AB2     		uxth	r2, r3
 4092 03a8 1C4B     		ldr	r3, .L227+16
 4093 03aa 1A80     		strh	r2, [r3]	@ movhi
 4094              	.L218:
 919:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4095              		.loc 1 919 0 is_stmt 1
 4096 03ac 1B4B     		ldr	r3, .L227+16
 4097 03ae 1B88     		ldrh	r3, [r3]
 4098 03b0 1BB2     		sxth	r3, r3
 4099 03b2 3A46     		mov	r2, r7
 4100 03b4 1046     		mov	r0, r2
 4101 03b6 2849     		ldr	r1, .L227+76
 4102 03b8 1A46     		mov	r2, r3
 4103 03ba FFF7FEFF 		bl	sprintf
 920:.\main.c      ****         UART_PutString(mes);
 4104              		.loc 1 920 0
 4105 03be 3B46     		mov	r3, r7
 4106 03c0 1846     		mov	r0, r3
 4107 03c2 FFF7FEFF 		bl	UART_PutString
 921:.\main.c      ****         inittrackLineZ();
 4108              		.loc 1 921 0
 4109 03c6 FFF7FEFF 		bl	inittrackLineZ
 922:.\main.c      ****         break;
 4110              		.loc 1 922 0
 4111 03ca DEE0     		b	.L194
 4112              	.L196:
 923:.\main.c      ****     case ('1'):
 924:.\main.c      ****         track_mode = DEST_TEST;
 4113              		.loc 1 924 0
 4114 03cc 0F4B     		ldr	r3, .L227
 4115 03ce 0622     		movs	r2, #6
 4116 03d0 1A70     		strb	r2, [r3]
 925:.\main.c      ****         tracked_direction = robot_direction;
 4117              		.loc 1 925 0
 4118 03d2 154B     		ldr	r3, .L227+28
 4119 03d4 1B68     		ldr	r3, [r3]
 4120 03d6 154A     		ldr	r2, .L227+32
 4121 03d8 1360     		str	r3, [r2]
 926:.\main.c      ****         //instructionLength = generateDirections();
 927:.\main.c      ****         instructionLength = generateEntireMapDirections();
 4122              		.loc 1 927 0
 4123 03da FFF7FEFF 		bl	generateEntireMapDirections
 4124 03de 0346     		mov	r3, r0
 4125 03e0 9AB2     		uxth	r2, r3
 4126 03e2 134B     		ldr	r3, .L227+36
 4127 03e4 1A80     		strh	r2, [r3]	@ movhi
 928:.\main.c      ****         //char message[128];
 929:.\main.c      ****        // sprintf(message, "p:%s\r\n", instructions);
 930:.\main.c      ****         instructionCount = 0;
 4128              		.loc 1 930 0
 4129 03e6 154B     		ldr	r3, .L227+48
 4130 03e8 0022     		movs	r2, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 91


 4131 03ea 1A80     		strh	r2, [r3]	@ movhi
 931:.\main.c      ****         QuadDec_M1_SetCounter(0);
 4132              		.loc 1 931 0
 4133 03ec 0020     		movs	r0, #0
 4134 03ee FFF7FEFF 		bl	QuadDec_M1_SetCounter
 932:.\main.c      ****         QuadDec_M2_SetCounter(0);
 4135              		.loc 1 932 0
 4136 03f2 0020     		movs	r0, #0
 4137 03f4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 933:.\main.c      ****         last_quad_count1 = 0;
 4138              		.loc 1 933 0
 4139 03f8 0E4B     		ldr	r3, .L227+40
 4140 03fa 0022     		movs	r2, #0
 4141 03fc 1A80     		strh	r2, [r3]	@ movhi
 934:.\main.c      ****         last_quad_count2 = 0;
 4142              		.loc 1 934 0
 4143 03fe 0E4B     		ldr	r3, .L227+44
 4144 0400 0022     		movs	r2, #0
 4145 0402 1A80     		strh	r2, [r3]	@ movhi
 935:.\main.c      ****         isrRF_RX_Disable();
 4146              		.loc 1 935 0
 4147 0404 FFF7FEFF 		bl	isrRF_RX_Disable
 936:.\main.c      ****         while(rf_char != 'F')
 4148              		.loc 1 936 0
 4149 0408 55E0     		b	.L219
 4150              	.L228:
 4151 040a 00BF     		.align	2
 4152              	.L227:
 4153 040c 00000000 		.word	track_mode
 4154 0410 00000000 		.word	accum_dist
 4155 0414 00000000 		.word	target_distance_cm
 4156 0418 00000000 		.word	quad_per_cm
 4157 041c 00000000 		.word	target_distance_quad
 4158 0420 C4000000 		.word	.LC10
 4159 0424 00000000 		.word	initial_pos_valid
 4160 0428 00000000 		.word	robot_direction
 4161 042c 00000000 		.word	tracked_direction
 4162 0430 00000000 		.word	instructionLength
 4163 0434 00000000 		.word	last_quad_count1
 4164 0438 00000000 		.word	last_quad_count2
 4165 043c 00000000 		.word	instructionCount
 4166 0440 D8000000 		.word	.LC11
 4167 0444 E4000000 		.word	.LC12
 4168 0448 00000000 		.word	BT_rxInt
 4169 044c E8000000 		.word	.LC13
 4170 0450 FC000000 		.word	.LC14
 4171 0454 00000000 		.word	instructions
 4172 0458 5C000000 		.word	.LC5
 4173              	.L222:
 937:.\main.c      ****         {
 938:.\main.c      ****             rf_char = UART_GetChar();
 4174              		.loc 1 938 0
 4175 045c FFF7FEFF 		bl	UART_GetChar
 4176 0460 0346     		mov	r3, r0
 4177 0462 87F82F30 		strb	r3, [r7, #47]
 939:.\main.c      ****             if(rf_char == 'F') break;
 4178              		.loc 1 939 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 92


 4179 0466 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4180 046a 462B     		cmp	r3, #70
 4181 046c 00D1     		bne	.L220
 4182 046e 26E0     		b	.L221
 4183              	.L220:
 940:.\main.c      ****             if(rf_char >= '0' && rf_char <= '9')
 4184              		.loc 1 940 0
 4185 0470 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4186 0474 2F2B     		cmp	r3, #47
 4187 0476 1ED9     		bls	.L219
 4188              		.loc 1 940 0 is_stmt 0 discriminator 1
 4189 0478 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4190 047c 392B     		cmp	r3, #57
 4191 047e 1AD8     		bhi	.L219
 941:.\main.c      ****             {
 942:.\main.c      ****                 UART_PutString("received: ");
 4192              		.loc 1 942 0 is_stmt 1
 4193 0480 4348     		ldr	r0, .L229
 4194 0482 FFF7FEFF 		bl	UART_PutString
 943:.\main.c      ****                 UART_PutChar(rf_char);
 4195              		.loc 1 943 0
 4196 0486 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4197 048a 1846     		mov	r0, r3
 4198 048c FFF7FEFF 		bl	UART_PutChar
 944:.\main.c      ****                 UART_PutString("\r\n");
 4199              		.loc 1 944 0
 4200 0490 4048     		ldr	r0, .L229+4
 4201 0492 FFF7FEFF 		bl	UART_PutString
 945:.\main.c      ****                 instructionCount = instructionCount*10 + (rf_char-48);
 4202              		.loc 1 945 0
 4203 0496 404B     		ldr	r3, .L229+8
 4204 0498 1B88     		ldrh	r3, [r3]
 4205 049a 1A46     		mov	r2, r3	@ movhi
 4206 049c 9200     		lsls	r2, r2, #2
 4207 049e 1344     		add	r3, r3, r2
 4208 04a0 5B00     		lsls	r3, r3, #1
 4209 04a2 9AB2     		uxth	r2, r3
 4210 04a4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4211 04a8 9BB2     		uxth	r3, r3
 4212 04aa 1344     		add	r3, r3, r2
 4213 04ac 9BB2     		uxth	r3, r3
 4214 04ae 303B     		subs	r3, r3, #48
 4215 04b0 9AB2     		uxth	r2, r3
 4216 04b2 394B     		ldr	r3, .L229+8
 4217 04b4 1A80     		strh	r2, [r3]	@ movhi
 4218              	.L219:
 936:.\main.c      ****         {
 4219              		.loc 1 936 0
 4220 04b6 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4221 04ba 462B     		cmp	r3, #70
 4222 04bc CED1     		bne	.L222
 4223              	.L221:
 946:.\main.c      ****             }
 947:.\main.c      ****             
 948:.\main.c      ****         }
 949:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4224              		.loc 1 949 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 93


 4225 04be 3748     		ldr	r0, .L229+12
 4226 04c0 FFF7FEFF 		bl	isrRF_RX_StartEx
 950:.\main.c      ****         sprintf(mes, "num instruct:%d\r\n", instructionLength);
 4227              		.loc 1 950 0
 4228 04c4 364B     		ldr	r3, .L229+16
 4229 04c6 1B88     		ldrh	r3, [r3]
 4230 04c8 1A46     		mov	r2, r3
 4231 04ca 3B46     		mov	r3, r7
 4232 04cc 1846     		mov	r0, r3
 4233 04ce 3549     		ldr	r1, .L229+20
 4234 04d0 FFF7FEFF 		bl	sprintf
 951:.\main.c      ****         UART_PutString(mes);
 4235              		.loc 1 951 0
 4236 04d4 3B46     		mov	r3, r7
 4237 04d6 1846     		mov	r0, r3
 4238 04d8 FFF7FEFF 		bl	UART_PutString
 952:.\main.c      ****         sprintf(mes, "starting from instruction %d\r\n", instructionCount);
 4239              		.loc 1 952 0
 4240 04dc 2E4B     		ldr	r3, .L229+8
 4241 04de 1B88     		ldrh	r3, [r3]
 4242 04e0 1A46     		mov	r2, r3
 4243 04e2 3B46     		mov	r3, r7
 4244 04e4 1846     		mov	r0, r3
 4245 04e6 3049     		ldr	r1, .L229+24
 4246 04e8 FFF7FEFF 		bl	sprintf
 953:.\main.c      ****         UART_PutString(mes);
 4247              		.loc 1 953 0
 4248 04ec 3B46     		mov	r3, r7
 4249 04ee 1846     		mov	r0, r3
 4250 04f0 FFF7FEFF 		bl	UART_PutString
 954:.\main.c      ****         //instructionCount = instructionLength - 22;
 955:.\main.c      ****         int x;
 956:.\main.c      ****         
 957:.\main.c      **** //        for(x  = instructionCount; x < instructionLength; x+=2)
 958:.\main.c      **** //        {
 959:.\main.c      **** //            char step = instructions[x];
 960:.\main.c      **** //            uint8_t dist = instructions[x+1];
 961:.\main.c      **** //            
 962:.\main.c      **** //            if(step == 'D' && dist == 0)
 963:.\main.c      **** //            {
 964:.\main.c      **** //            }
 965:.\main.c      **** //            else
 966:.\main.c      **** //            {
 967:.\main.c      **** //                
 968:.\main.c      **** //            }
 969:.\main.c      **** //        }
 970:.\main.c      ****         for(x = instructionCount;x < instructionLength; x++)
 4251              		.loc 1 970 0
 4252 04f4 284B     		ldr	r3, .L229+8
 4253 04f6 1B88     		ldrh	r3, [r3]
 4254 04f8 7B62     		str	r3, [r7, #36]
 4255 04fa 18E0     		b	.L223
 4256              	.L226:
 971:.\main.c      ****         {
 972:.\main.c      ****             
 973:.\main.c      ****             if(x%2 == 0)
 4257              		.loc 1 973 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 94


 4258 04fc 7B6A     		ldr	r3, [r7, #36]
 4259 04fe 03F00103 		and	r3, r3, #1
 4260 0502 002B     		cmp	r3, #0
 4261 0504 07D1     		bne	.L224
 974:.\main.c      ****             {
 975:.\main.c      ****                 UART_PutChar(instructions[x]);
 4262              		.loc 1 975 0
 4263 0506 294A     		ldr	r2, .L229+28
 4264 0508 7B6A     		ldr	r3, [r7, #36]
 4265 050a 1344     		add	r3, r3, r2
 4266 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4267 050e 1846     		mov	r0, r3
 4268 0510 FFF7FEFF 		bl	UART_PutChar
 4269 0514 08E0     		b	.L225
 4270              	.L224:
 976:.\main.c      ****             }
 977:.\main.c      ****             else UART_PutChar(instructions[x] + 48);
 4271              		.loc 1 977 0
 4272 0516 254A     		ldr	r2, .L229+28
 4273 0518 7B6A     		ldr	r3, [r7, #36]
 4274 051a 1344     		add	r3, r3, r2
 4275 051c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4276 051e 3033     		adds	r3, r3, #48
 4277 0520 DBB2     		uxtb	r3, r3
 4278 0522 1846     		mov	r0, r3
 4279 0524 FFF7FEFF 		bl	UART_PutChar
 4280              	.L225:
 970:.\main.c      ****         {
 4281              		.loc 1 970 0 discriminator 2
 4282 0528 7B6A     		ldr	r3, [r7, #36]
 4283 052a 0133     		adds	r3, r3, #1
 4284 052c 7B62     		str	r3, [r7, #36]
 4285              	.L223:
 970:.\main.c      ****         {
 4286              		.loc 1 970 0 is_stmt 0 discriminator 1
 4287 052e 1C4B     		ldr	r3, .L229+16
 4288 0530 1B88     		ldrh	r3, [r3]
 4289 0532 1A46     		mov	r2, r3
 4290 0534 7B6A     		ldr	r3, [r7, #36]
 4291 0536 9A42     		cmp	r2, r3
 4292 0538 E0DC     		bgt	.L226
 978:.\main.c      **** 
 979:.\main.c      ****         }
 980:.\main.c      ****         
 981:.\main.c      ****         UART_PutString("\r\n");
 4293              		.loc 1 981 0 is_stmt 1
 4294 053a 1648     		ldr	r0, .L229+4
 4295 053c FFF7FEFF 		bl	UART_PutString
 982:.\main.c      **** 
 983:.\main.c      ****         nextStep = instructions[instructionCount];
 4296              		.loc 1 983 0
 4297 0540 154B     		ldr	r3, .L229+8
 4298 0542 1B88     		ldrh	r3, [r3]
 4299 0544 1A46     		mov	r2, r3
 4300 0546 194B     		ldr	r3, .L229+28
 4301 0548 9B5C     		ldrb	r3, [r3, r2]
 4302 054a 87F82330 		strb	r3, [r7, #35]
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 95


 984:.\main.c      ****         
 985:.\main.c      ****         
 986:.\main.c      ****         target_distance_quad = QUAD_PER_UNIT * instructions[instructionCount+1]; 
 4303              		.loc 1 986 0
 4304 054e 124B     		ldr	r3, .L229+8
 4305 0550 1B88     		ldrh	r3, [r3]
 4306 0552 0133     		adds	r3, r3, #1
 4307 0554 154A     		ldr	r2, .L229+28
 4308 0556 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4309 0558 9BB2     		uxth	r3, r3
 4310 055a 1A46     		mov	r2, r3	@ movhi
 4311 055c D200     		lsls	r2, r2, #3
 4312 055e 1344     		add	r3, r3, r2
 4313 0560 1B01     		lsls	r3, r3, #4
 4314 0562 9BB2     		uxth	r3, r3
 4315 0564 9AB2     		uxth	r2, r3
 4316 0566 124B     		ldr	r3, .L229+32
 4317 0568 1A80     		strh	r2, [r3]	@ movhi
 987:.\main.c      ****        // if(instructionCount == 0) target_distance_quad += QUAD_PER_UNIT; 
 988:.\main.c      ****         sprintf(mes, "Target dist: %d\r\n", target_distance_quad);
 4318              		.loc 1 988 0
 4319 056a 114B     		ldr	r3, .L229+32
 4320 056c 1B88     		ldrh	r3, [r3]
 4321 056e 1BB2     		sxth	r3, r3
 4322 0570 3A46     		mov	r2, r7
 4323 0572 1046     		mov	r0, r2
 4324 0574 0F49     		ldr	r1, .L229+36
 4325 0576 1A46     		mov	r2, r3
 4326 0578 FFF7FEFF 		bl	sprintf
 989:.\main.c      ****         UART_PutString(mes);
 4327              		.loc 1 989 0
 4328 057c 3B46     		mov	r3, r7
 4329 057e 1846     		mov	r0, r3
 4330 0580 FFF7FEFF 		bl	UART_PutString
 990:.\main.c      ****         inittrackLineZ();
 4331              		.loc 1 990 0
 4332 0584 FFF7FEFF 		bl	inittrackLineZ
 991:.\main.c      ****         break;
 4333              		.loc 1 991 0
 4334 0588 00BF     		nop
 4335              	.L194:
 4336              	.LBE9:
 992:.\main.c      ****     }
 993:.\main.c      **** }
 4337              		.loc 1 993 0
 4338 058a 3037     		adds	r7, r7, #48
 4339              		.cfi_def_cfa_offset 8
 4340 058c BD46     		mov	sp, r7
 4341              		.cfi_def_cfa_register 13
 4342              		@ sp needed
 4343 058e 80BD     		pop	{r7, pc}
 4344              	.L230:
 4345              		.align	2
 4346              	.L229:
 4347 0590 D8000000 		.word	.LC11
 4348 0594 E4000000 		.word	.LC12
 4349 0598 00000000 		.word	instructionCount
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 96


 4350 059c 00000000 		.word	BT_rxInt
 4351 05a0 00000000 		.word	instructionLength
 4352 05a4 E8000000 		.word	.LC13
 4353 05a8 FC000000 		.word	.LC14
 4354 05ac 00000000 		.word	instructions
 4355 05b0 00000000 		.word	target_distance_quad
 4356 05b4 5C000000 		.word	.LC5
 4357              		.cfi_endproc
 4358              	.LFE93:
 4359              		.size	BT_rxInt, .-BT_rxInt
 4360              		.section	.text.changeToRF,"ax",%progbits
 4361              		.align	2
 4362              		.global	changeToRF
 4363              		.thumb
 4364              		.thumb_func
 4365              		.type	changeToRF, %function
 4366              	changeToRF:
 4367              	.LFB94:
 994:.\main.c      **** 
 995:.\main.c      **** 
 996:.\main.c      **** void changeToRF()
 997:.\main.c      **** {
 4368              		.loc 1 997 0
 4369              		.cfi_startproc
 4370              		@ args = 0, pretend = 0, frame = 0
 4371              		@ frame_needed = 1, uses_anonymous_args = 0
 4372 0000 80B5     		push	{r7, lr}
 4373              		.cfi_def_cfa_offset 8
 4374              		.cfi_offset 7, -8
 4375              		.cfi_offset 14, -4
 4376 0002 00AF     		add	r7, sp, #0
 4377              		.cfi_def_cfa_register 7
 998:.\main.c      ****         //disable BT
 999:.\main.c      ****         BT_ENABLED = 0;
 4378              		.loc 1 999 0
 4379 0004 0B4B     		ldr	r3, .L232
 4380 0006 0022     		movs	r2, #0
 4381 0008 1A70     		strb	r2, [r3]
1000:.\main.c      ****         isrRF_RX_Stop();
 4382              		.loc 1 1000 0
 4383 000a FFF7FEFF 		bl	isrRF_RX_Stop
1001:.\main.c      ****         UART_Stop();
 4384              		.loc 1 1001 0
 4385 000e FFF7FEFF 		bl	UART_Stop
1002:.\main.c      ****         
1003:.\main.c      ****         //enable RF
1004:.\main.c      ****         BIN_ENABLED = 1;
 4386              		.loc 1 1004 0
 4387 0012 094B     		ldr	r3, .L232+4
 4388 0014 0122     		movs	r2, #1
 4389 0016 1A70     		strb	r2, [r3]
1005:.\main.c      ****         UART_clk_SetDividerValue(130);
 4390              		.loc 1 1005 0
 4391 0018 8120     		movs	r0, #129
 4392 001a 0121     		movs	r1, #1
 4393 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
1006:.\main.c      ****         isrRF_RX_StartEx(rxInt);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 97


 4394              		.loc 1 1006 0
 4395 0020 0648     		ldr	r0, .L232+8
 4396 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
1007:.\main.c      ****         UART_Start();
 4397              		.loc 1 1007 0
 4398 0026 FFF7FEFF 		bl	UART_Start
1008:.\main.c      ****         RF_BT_SELECT_Write(0);
 4399              		.loc 1 1008 0
 4400 002a 0020     		movs	r0, #0
 4401 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
1009:.\main.c      **** }
 4402              		.loc 1 1009 0
 4403 0030 80BD     		pop	{r7, pc}
 4404              	.L233:
 4405 0032 00BF     		.align	2
 4406              	.L232:
 4407 0034 00000000 		.word	BT_ENABLED
 4408 0038 00000000 		.word	BIN_ENABLED
 4409 003c 00000000 		.word	rxInt
 4410              		.cfi_endproc
 4411              	.LFE94:
 4412              		.size	changeToRF, .-changeToRF
 4413              		.section	.text.changeToBT,"ax",%progbits
 4414              		.align	2
 4415              		.global	changeToBT
 4416              		.thumb
 4417              		.thumb_func
 4418              		.type	changeToBT, %function
 4419              	changeToBT:
 4420              	.LFB95:
1010:.\main.c      **** 
1011:.\main.c      **** void changeToBT()
1012:.\main.c      **** {
 4421              		.loc 1 1012 0
 4422              		.cfi_startproc
 4423              		@ args = 0, pretend = 0, frame = 0
 4424              		@ frame_needed = 1, uses_anonymous_args = 0
 4425 0000 80B5     		push	{r7, lr}
 4426              		.cfi_def_cfa_offset 8
 4427              		.cfi_offset 7, -8
 4428              		.cfi_offset 14, -4
 4429 0002 00AF     		add	r7, sp, #0
 4430              		.cfi_def_cfa_register 7
1013:.\main.c      ****         //disable RF
1014:.\main.c      ****         BIN_ENABLED = 0;
 4431              		.loc 1 1014 0
 4432 0004 0B4B     		ldr	r3, .L235
 4433 0006 0022     		movs	r2, #0
 4434 0008 1A70     		strb	r2, [r3]
1015:.\main.c      ****         isrRF_RX_Stop();
 4435              		.loc 1 1015 0
 4436 000a FFF7FEFF 		bl	isrRF_RX_Stop
1016:.\main.c      ****         UART_Stop();
 4437              		.loc 1 1016 0
 4438 000e FFF7FEFF 		bl	UART_Stop
1017:.\main.c      ****         
1018:.\main.c      ****         //enable BT
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 98


1019:.\main.c      ****         BT_ENABLED = 1;
 4439              		.loc 1 1019 0
 4440 0012 094B     		ldr	r3, .L235+4
 4441 0014 0122     		movs	r2, #1
 4442 0016 1A70     		strb	r2, [r3]
1020:.\main.c      ****         UART_clk_SetDividerValue(781);
 4443              		.loc 1 1020 0
 4444 0018 4FF44370 		mov	r0, #780
 4445 001c 0121     		movs	r1, #1
 4446 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
1021:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 4447              		.loc 1 1021 0
 4448 0022 0648     		ldr	r0, .L235+8
 4449 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
1022:.\main.c      ****         UART_Start();
 4450              		.loc 1 1022 0
 4451 0028 FFF7FEFF 		bl	UART_Start
1023:.\main.c      ****         RF_BT_SELECT_Write(1);
 4452              		.loc 1 1023 0
 4453 002c 0120     		movs	r0, #1
 4454 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
1024:.\main.c      **** }
 4455              		.loc 1 1024 0
 4456 0032 80BD     		pop	{r7, pc}
 4457              	.L236:
 4458              		.align	2
 4459              	.L235:
 4460 0034 00000000 		.word	BIN_ENABLED
 4461 0038 00000000 		.word	BT_ENABLED
 4462 003c 00000000 		.word	BT_rxInt
 4463              		.cfi_endproc
 4464              	.LFE95:
 4465              		.size	changeToBT, .-changeToBT
 4466              		.section	.text.Quad_Dec_response,"ax",%progbits
 4467              		.align	2
 4468              		.global	Quad_Dec_response
 4469              		.thumb
 4470              		.thumb_func
 4471              		.type	Quad_Dec_response, %function
 4472              	Quad_Dec_response:
 4473              	.LFB96:
1025:.\main.c      **** 
1026:.\main.c      **** 
1027:.\main.c      **** void Quad_Dec_response()
1028:.\main.c      **** {
 4474              		.loc 1 1028 0
 4475              		.cfi_startproc
 4476              		@ args = 0, pretend = 0, frame = 32
 4477              		@ frame_needed = 1, uses_anonymous_args = 0
 4478 0000 B0B5     		push	{r4, r5, r7, lr}
 4479              		.cfi_def_cfa_offset 16
 4480              		.cfi_offset 4, -16
 4481              		.cfi_offset 5, -12
 4482              		.cfi_offset 7, -8
 4483              		.cfi_offset 14, -4
 4484 0002 88B0     		sub	sp, sp, #32
 4485              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 99


 4486 0004 00AF     		add	r7, sp, #0
 4487              		.cfi_def_cfa_register 7
1029:.\main.c      ****     //Check if the flag has been set
1030:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 4488              		.loc 1 1030 0
 4489 0006 824B     		ldr	r3, .L245
 4490 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4491 000a 002B     		cmp	r3, #0
 4492 000c 00D1     		bne	.L238
 4493 000e FCE0     		b	.L237
 4494              	.L238:
1031:.\main.c      ****     flag_calc_wheelspeed = 0;
 4495              		.loc 1 1031 0
 4496 0010 7F4B     		ldr	r3, .L245
 4497 0012 0022     		movs	r2, #0
 4498 0014 1A70     		strb	r2, [r3]
1032:.\main.c      ****     
1033:.\main.c      ****     //char wheel_1_str [64];
1034:.\main.c      ****     //char wheel_2_str [64];
1035:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
1036:.\main.c      ****     //usbPutString(wheel_1_str);
1037:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
1038:.\main.c      ****     
1039:.\main.c      ****     //usbPutString(wheel_2_str);
1040:.\main.c      ****     
1041:.\main.c      ****     int16 leftSpeed = quad_diff1;
 4499              		.loc 1 1041 0
 4500 0016 7F4B     		ldr	r3, .L245+4
 4501 0018 1B88     		ldrh	r3, [r3]	@ movhi
 4502 001a FB81     		strh	r3, [r7, #14]	@ movhi
1042:.\main.c      ****     int16 rightSpeed = quad_diff2;
 4503              		.loc 1 1042 0
 4504 001c 7E4B     		ldr	r3, .L245+8
 4505 001e 1B88     		ldrh	r3, [r3]	@ movhi
 4506 0020 BB81     		strh	r3, [r7, #12]	@ movhi
1043:.\main.c      ****     double scalingLeft = 1;
 4507              		.loc 1 1043 0
 4508 0022 4FF00002 		mov	r2, #0
 4509 0026 7D4B     		ldr	r3, .L245+12
 4510 0028 C7E90623 		strd	r2, [r7, #24]
1044:.\main.c      ****     double scalingRight = 1;
 4511              		.loc 1 1044 0
 4512 002c 4FF00002 		mov	r2, #0
 4513 0030 7A4B     		ldr	r3, .L245+12
 4514 0032 C7E90423 		strd	r2, [r7, #16]
1045:.\main.c      ****     
1046:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
1047:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 4515              		.loc 1 1047 0
 4516 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 4517 003a 002B     		cmp	r3, #0
 4518 003c 0FD1     		bne	.L240
 4519              		.loc 1 1047 0 is_stmt 0 discriminator 1
 4520 003e B7F90C30 		ldrsh	r3, [r7, #12]
 4521 0042 002B     		cmp	r3, #0
 4522 0044 0BD1     		bne	.L240
1048:.\main.c      ****        //leftSpeed = 3;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 100


1049:.\main.c      ****         scalingLeft = 2;
 4523              		.loc 1 1049 0 is_stmt 1
 4524 0046 4FF00002 		mov	r2, #0
 4525 004a 4FF08043 		mov	r3, #1073741824
 4526 004e C7E90623 		strd	r2, [r7, #24]
1050:.\main.c      ****         scalingRight = 2;
 4527              		.loc 1 1050 0
 4528 0052 4FF00002 		mov	r2, #0
 4529 0056 4FF08043 		mov	r3, #1073741824
 4530 005a C7E90423 		strd	r2, [r7, #16]
 4531              	.L240:
1051:.\main.c      ****     }
1052:.\main.c      **** 
1053:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 4532              		.loc 1 1053 0
 4533 005e 704B     		ldr	r3, .L245+16
 4534 0060 1B88     		ldrh	r3, [r3]
 4535 0062 1AB2     		sxth	r2, r3
 4536 0064 B7F90E30 		ldrsh	r3, [r7, #14]
 4537 0068 002B     		cmp	r3, #0
 4538 006a B8BF     		it	lt
 4539 006c 5B42     		rsblt	r3, r3, #0
 4540 006e D31A     		subs	r3, r2, r3
 4541 0070 BB60     		str	r3, [r7, #8]
1054:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
 4542              		.loc 1 1054 0
 4543 0072 BB68     		ldr	r3, [r7, #8]
 4544 0074 83EAE372 		eor	r2, r3, r3, asr #31
 4545 0078 A2EBE372 		sub	r2, r2, r3, asr #31
 4546 007c BB68     		ldr	r3, [r7, #8]
 4547 007e 92FBF3F3 		sdiv	r3, r2, r3
 4548 0082 1846     		mov	r0, r3
 4549 0084 FFF7FEFF 		bl	__aeabi_i2d
 4550 0088 0446     		mov	r4, r0
 4551 008a 0D46     		mov	r5, r1
 4552 008c BB68     		ldr	r3, [r7, #8]
 4553 008e 002B     		cmp	r3, #0
 4554 0090 B8BF     		it	lt
 4555 0092 5B42     		rsblt	r3, r3, #0
 4556 0094 1846     		mov	r0, r3
 4557 0096 FFF7FEFF 		bl	__aeabi_i2d
 4558 009a 0246     		mov	r2, r0
 4559 009c 0B46     		mov	r3, r1
 4560 009e 1046     		mov	r0, r2
 4561 00a0 1946     		mov	r1, r3
 4562 00a2 FFF7FEFF 		bl	sqrt
 4563 00a6 0246     		mov	r2, r0
 4564 00a8 0B46     		mov	r3, r1
 4565 00aa 2046     		mov	r0, r4
 4566 00ac 2946     		mov	r1, r5
 4567 00ae FFF7FEFF 		bl	__aeabi_dmul
 4568 00b2 0246     		mov	r2, r0
 4569 00b4 0B46     		mov	r3, r1
 4570 00b6 1046     		mov	r0, r2
 4571 00b8 1946     		mov	r1, r3
 4572 00ba FFF7FEFF 		bl	__aeabi_d2iz
 4573 00be 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 101


 4574 00c0 7B60     		str	r3, [r7, #4]
1055:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 4575              		.loc 1 1055 0
 4576 00c2 584B     		ldr	r3, .L245+20
 4577 00c4 1B88     		ldrh	r3, [r3]
 4578 00c6 1BB2     		sxth	r3, r3
 4579 00c8 1846     		mov	r0, r3
 4580 00ca FFF7FEFF 		bl	__aeabi_i2d
 4581 00ce 0446     		mov	r4, r0
 4582 00d0 0D46     		mov	r5, r1
 4583 00d2 7868     		ldr	r0, [r7, #4]
 4584 00d4 FFF7FEFF 		bl	__aeabi_i2d
 4585 00d8 0246     		mov	r2, r0
 4586 00da 0B46     		mov	r3, r1
 4587 00dc 1046     		mov	r0, r2
 4588 00de 1946     		mov	r1, r3
 4589 00e0 D7E90623 		ldrd	r2, [r7, #24]
 4590 00e4 FFF7FEFF 		bl	__aeabi_dmul
 4591 00e8 0246     		mov	r2, r0
 4592 00ea 0B46     		mov	r3, r1
 4593 00ec 2046     		mov	r0, r4
 4594 00ee 2946     		mov	r1, r5
 4595 00f0 FFF7FEFF 		bl	__aeabi_dadd
 4596 00f4 0246     		mov	r2, r0
 4597 00f6 0B46     		mov	r3, r1
 4598 00f8 1046     		mov	r0, r2
 4599 00fa 1946     		mov	r1, r3
 4600 00fc FFF7FEFF 		bl	__aeabi_d2iz
 4601 0100 0346     		mov	r3, r0
 4602 0102 9AB2     		uxth	r2, r3
 4603 0104 474B     		ldr	r3, .L245+20
 4604 0106 1A80     		strh	r2, [r3]	@ movhi
1056:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 4605              		.loc 1 1056 0
 4606 0108 474B     		ldr	r3, .L245+24
 4607 010a 1B88     		ldrh	r3, [r3]
 4608 010c 1AB2     		sxth	r2, r3
 4609 010e B7F90C30 		ldrsh	r3, [r7, #12]
 4610 0112 002B     		cmp	r3, #0
 4611 0114 B8BF     		it	lt
 4612 0116 5B42     		rsblt	r3, r3, #0
 4613 0118 D31A     		subs	r3, r2, r3
 4614 011a BB60     		str	r3, [r7, #8]
1057:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 4615              		.loc 1 1057 0
 4616 011c BB68     		ldr	r3, [r7, #8]
 4617 011e 83EAE372 		eor	r2, r3, r3, asr #31
 4618 0122 A2EBE372 		sub	r2, r2, r3, asr #31
 4619 0126 BB68     		ldr	r3, [r7, #8]
 4620 0128 92FBF3F3 		sdiv	r3, r2, r3
 4621 012c 1846     		mov	r0, r3
 4622 012e FFF7FEFF 		bl	__aeabi_i2d
 4623 0132 0446     		mov	r4, r0
 4624 0134 0D46     		mov	r5, r1
 4625 0136 BB68     		ldr	r3, [r7, #8]
 4626 0138 002B     		cmp	r3, #0
 4627 013a B8BF     		it	lt
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 102


 4628 013c 5B42     		rsblt	r3, r3, #0
 4629 013e 1846     		mov	r0, r3
 4630 0140 FFF7FEFF 		bl	__aeabi_i2d
 4631 0144 0246     		mov	r2, r0
 4632 0146 0B46     		mov	r3, r1
 4633 0148 1046     		mov	r0, r2
 4634 014a 1946     		mov	r1, r3
 4635 014c FFF7FEFF 		bl	sqrt
 4636 0150 0246     		mov	r2, r0
 4637 0152 0B46     		mov	r3, r1
 4638 0154 2046     		mov	r0, r4
 4639 0156 2946     		mov	r1, r5
 4640 0158 FFF7FEFF 		bl	__aeabi_dmul
 4641 015c 0246     		mov	r2, r0
 4642 015e 0B46     		mov	r3, r1
 4643 0160 1046     		mov	r0, r2
 4644 0162 1946     		mov	r1, r3
 4645 0164 FFF7FEFF 		bl	__aeabi_d2iz
 4646 0168 0346     		mov	r3, r0
 4647 016a 7B60     		str	r3, [r7, #4]
1058:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 4648              		.loc 1 1058 0
 4649 016c 2F4B     		ldr	r3, .L245+28
 4650 016e 1B88     		ldrh	r3, [r3]
 4651 0170 1BB2     		sxth	r3, r3
 4652 0172 1846     		mov	r0, r3
 4653 0174 FFF7FEFF 		bl	__aeabi_i2d
 4654 0178 0446     		mov	r4, r0
 4655 017a 0D46     		mov	r5, r1
 4656 017c 7868     		ldr	r0, [r7, #4]
 4657 017e FFF7FEFF 		bl	__aeabi_i2d
 4658 0182 0246     		mov	r2, r0
 4659 0184 0B46     		mov	r3, r1
 4660 0186 1046     		mov	r0, r2
 4661 0188 1946     		mov	r1, r3
 4662 018a D7E90423 		ldrd	r2, [r7, #16]
 4663 018e FFF7FEFF 		bl	__aeabi_dmul
 4664 0192 0246     		mov	r2, r0
 4665 0194 0B46     		mov	r3, r1
 4666 0196 2046     		mov	r0, r4
 4667 0198 2946     		mov	r1, r5
 4668 019a FFF7FEFF 		bl	__aeabi_dadd
 4669 019e 0246     		mov	r2, r0
 4670 01a0 0B46     		mov	r3, r1
 4671 01a2 1046     		mov	r0, r2
 4672 01a4 1946     		mov	r1, r3
 4673 01a6 FFF7FEFF 		bl	__aeabi_d2iz
 4674 01aa 0346     		mov	r3, r0
 4675 01ac 9AB2     		uxth	r2, r3
 4676 01ae 1F4B     		ldr	r3, .L245+28
 4677 01b0 1A80     		strh	r2, [r3]	@ movhi
1059:.\main.c      ****     
1060:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 4678              		.loc 1 1060 0
 4679 01b2 1E4B     		ldr	r3, .L245+28
 4680 01b4 1B88     		ldrh	r3, [r3]
 4681 01b6 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 103


 4682 01b8 002B     		cmp	r3, #0
 4683 01ba 02DA     		bge	.L241
 4684              		.loc 1 1060 0 is_stmt 0 discriminator 1
 4685 01bc 1B4B     		ldr	r3, .L245+28
 4686 01be 0022     		movs	r2, #0
 4687 01c0 1A80     		strh	r2, [r3]	@ movhi
 4688              	.L241:
1061:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 4689              		.loc 1 1061 0 is_stmt 1
 4690 01c2 184B     		ldr	r3, .L245+20
 4691 01c4 1B88     		ldrh	r3, [r3]
 4692 01c6 1BB2     		sxth	r3, r3
 4693 01c8 002B     		cmp	r3, #0
 4694 01ca 02DA     		bge	.L242
 4695              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4696 01cc 154B     		ldr	r3, .L245+20
 4697 01ce 0022     		movs	r2, #0
 4698 01d0 1A80     		strh	r2, [r3]	@ movhi
 4699              	.L242:
1062:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 4700              		.loc 1 1062 0 is_stmt 1
 4701 01d2 164B     		ldr	r3, .L245+28
 4702 01d4 1B88     		ldrh	r3, [r3]
 4703 01d6 1BB2     		sxth	r3, r3
 4704 01d8 642B     		cmp	r3, #100
 4705 01da 02DD     		ble	.L243
 4706              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4707 01dc 134B     		ldr	r3, .L245+28
 4708 01de 6422     		movs	r2, #100
 4709 01e0 1A80     		strh	r2, [r3]	@ movhi
 4710              	.L243:
1063:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 4711              		.loc 1 1063 0 is_stmt 1
 4712 01e2 104B     		ldr	r3, .L245+20
 4713 01e4 1B88     		ldrh	r3, [r3]
 4714 01e6 1BB2     		sxth	r3, r3
 4715 01e8 642B     		cmp	r3, #100
 4716 01ea 02DD     		ble	.L244
 4717              		.loc 1 1063 0 is_stmt 0 discriminator 1
 4718 01ec 0D4B     		ldr	r3, .L245+20
 4719 01ee 6422     		movs	r2, #100
 4720 01f0 1A80     		strh	r2, [r3]	@ movhi
 4721              	.L244:
1064:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 4722              		.loc 1 1064 0 is_stmt 1
 4723 01f2 0C4B     		ldr	r3, .L245+20
 4724 01f4 1B88     		ldrh	r3, [r3]
 4725 01f6 DBB2     		uxtb	r3, r3
 4726 01f8 1846     		mov	r0, r3
 4727 01fa FFF7FEFF 		bl	PWM_1_WriteCompare
1065:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 4728              		.loc 1 1065 0
 4729 01fe 0B4B     		ldr	r3, .L245+28
 4730 0200 1B88     		ldrh	r3, [r3]
 4731 0202 DBB2     		uxtb	r3, r3
 4732 0204 1846     		mov	r0, r3
 4733 0206 FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 104


 4734              	.L237:
1066:.\main.c      **** }
 4735              		.loc 1 1066 0
 4736 020a 2037     		adds	r7, r7, #32
 4737              		.cfi_def_cfa_offset 16
 4738 020c BD46     		mov	sp, r7
 4739              		.cfi_def_cfa_register 13
 4740              		@ sp needed
 4741 020e B0BD     		pop	{r4, r5, r7, pc}
 4742              	.L246:
 4743              		.align	2
 4744              	.L245:
 4745 0210 00000000 		.word	flag_calc_wheelspeed
 4746 0214 00000000 		.word	quad_diff1
 4747 0218 00000000 		.word	quad_diff2
 4748 021c 0000F03F 		.word	1072693248
 4749 0220 00000000 		.word	leftSpeedLimit
 4750 0224 00000000 		.word	left_duty_cycle
 4751 0228 00000000 		.word	rightSpeedLimit
 4752 022c 00000000 		.word	right_duty_cycle
 4753              		.cfi_endproc
 4754              	.LFE96:
 4755              		.size	Quad_Dec_response, .-Quad_Dec_response
 4756              		.section	.text.trackLine,"ax",%progbits
 4757              		.align	2
 4758              		.global	trackLine
 4759              		.thumb
 4760              		.thumb_func
 4761              		.type	trackLine, %function
 4762              	trackLine:
 4763              	.LFB97:
1067:.\main.c      **** 
1068:.\main.c      **** void trackLine()
1069:.\main.c      **** {
 4764              		.loc 1 1069 0
 4765              		.cfi_startproc
 4766              		@ args = 0, pretend = 0, frame = 0
 4767              		@ frame_needed = 1, uses_anonymous_args = 0
 4768              		@ link register save eliminated.
 4769 0000 80B4     		push	{r7}
 4770              		.cfi_def_cfa_offset 4
 4771              		.cfi_offset 7, -4
 4772 0002 00AF     		add	r7, sp, #0
 4773              		.cfi_def_cfa_register 7
1070:.\main.c      ****  //removed from implementation
1071:.\main.c      **** }
 4774              		.loc 1 1071 0
 4775 0004 BD46     		mov	sp, r7
 4776              		.cfi_def_cfa_register 13
 4777              		@ sp needed
 4778 0006 5DF8047B 		ldr	r7, [sp], #4
 4779              		.cfi_restore 7
 4780              		.cfi_def_cfa_offset 0
 4781 000a 7047     		bx	lr
 4782              		.cfi_endproc
 4783              	.LFE97:
 4784              		.size	trackLine, .-trackLine
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 105


 4785              		.global	leftTurnCount
 4786              		.bss
 4787              		.align	1
 4788              		.type	leftTurnCount, %object
 4789              		.size	leftTurnCount, 2
 4790              	leftTurnCount:
 4791 1ec0 0000     		.space	2
 4792              		.global	rightTurnCount
 4793              		.align	1
 4794              		.type	rightTurnCount, %object
 4795              		.size	rightTurnCount, 2
 4796              	rightTurnCount:
 4797 1ec2 0000     		.space	2
 4798              		.section	.text.trackLineZ,"ax",%progbits
 4799              		.align	2
 4800              		.global	trackLineZ
 4801              		.thumb
 4802              		.thumb_func
 4803              		.type	trackLineZ, %function
 4804              	trackLineZ:
 4805              	.LFB98:
1072:.\main.c      **** uint16 leftTurnCount = 0;
1073:.\main.c      **** uint16 rightTurnCount = 0;
1074:.\main.c      **** void trackLineZ()
1075:.\main.c      **** {
 4806              		.loc 1 1075 0
 4807              		.cfi_startproc
 4808              		@ args = 0, pretend = 0, frame = 8
 4809              		@ frame_needed = 1, uses_anonymous_args = 0
 4810 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4811              		.cfi_def_cfa_offset 24
 4812              		.cfi_offset 4, -24
 4813              		.cfi_offset 5, -20
 4814              		.cfi_offset 7, -16
 4815              		.cfi_offset 8, -12
 4816              		.cfi_offset 9, -8
 4817              		.cfi_offset 14, -4
 4818 0004 82B0     		sub	sp, sp, #8
 4819              		.cfi_def_cfa_offset 32
 4820 0006 00AF     		add	r7, sp, #0
 4821              		.cfi_def_cfa_register 7
1076:.\main.c      ****     //read the value of the three central-front sensors
1077:.\main.c      ****     
1078:.\main.c      ****     uint8 nl = NLSens_out_Read();
 4822              		.loc 1 1078 0
 4823 0008 FFF7FEFF 		bl	NLSens_out_Read
 4824 000c 0346     		mov	r3, r0
 4825 000e FB71     		strb	r3, [r7, #7]
1079:.\main.c      ****     uint8 nr = NRSens_out_Read();
 4826              		.loc 1 1079 0
 4827 0010 FFF7FEFF 		bl	NRSens_out_Read
 4828 0014 0346     		mov	r3, r0
 4829 0016 BB71     		strb	r3, [r7, #6]
1080:.\main.c      ****     uint8 mid = MSens_out_Read();
 4830              		.loc 1 1080 0
 4831 0018 FFF7FEFF 		bl	MSens_out_Read
 4832 001c 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 106


 4833 001e 7B71     		strb	r3, [r7, #5]
1081:.\main.c      ****     
1082:.\main.c      ****         //if only the left one, hard left
1083:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 4834              		.loc 1 1083 0
 4835 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4836 0022 002B     		cmp	r3, #0
 4837 0024 27D0     		beq	.L249
 4838              		.loc 1 1083 0 is_stmt 0 discriminator 1
 4839 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4840 0028 002B     		cmp	r3, #0
 4841 002a 24D1     		bne	.L249
 4842              		.loc 1 1083 0 discriminator 2
 4843 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4844 002e 002B     		cmp	r3, #0
 4845 0030 21D1     		bne	.L249
1084:.\main.c      ****     {
1085:.\main.c      ****         setSpeed(speed / 1.6,-speed / 1.6);
 4846              		.loc 1 1085 0 is_stmt 1
 4847 0032 454B     		ldr	r3, .L254+8
 4848 0034 D3E90023 		ldrd	r2, [r3]
 4849 0038 1046     		mov	r0, r2
 4850 003a 1946     		mov	r1, r3
 4851 003c 40A3     		adr	r3, .L254
 4852 003e D3E90023 		ldrd	r2, [r3]
 4853 0042 FFF7FEFF 		bl	__aeabi_ddiv
 4854 0046 0246     		mov	r2, r0
 4855 0048 0B46     		mov	r3, r1
 4856 004a 1446     		mov	r4, r2
 4857 004c 1D46     		mov	r5, r3
 4858 004e 3E4B     		ldr	r3, .L254+8
 4859 0050 D3E90023 		ldrd	r2, [r3]
 4860 0054 9046     		mov	r8, r2
 4861 0056 83F00049 		eor	r9, r3, #-2147483648
 4862 005a 4046     		mov	r0, r8
 4863 005c 4946     		mov	r1, r9
 4864 005e 38A3     		adr	r3, .L254
 4865 0060 D3E90023 		ldrd	r2, [r3]
 4866 0064 FFF7FEFF 		bl	__aeabi_ddiv
 4867 0068 0246     		mov	r2, r0
 4868 006a 0B46     		mov	r3, r1
 4869 006c 2046     		mov	r0, r4
 4870 006e 2946     		mov	r1, r5
 4871 0070 FFF7FEFF 		bl	setSpeed
 4872 0074 5FE0     		b	.L248
 4873              	.L249:
1086:.\main.c      ****     }
1087:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 4874              		.loc 1 1087 0
 4875 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4876 0078 002B     		cmp	r3, #0
 4877 007a 0ED0     		beq	.L251
 4878              		.loc 1 1087 0 is_stmt 0 discriminator 1
 4879 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4880 007e 002B     		cmp	r3, #0
 4881 0080 0BD0     		beq	.L251
 4882              		.loc 1 1087 0 discriminator 2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 107


 4883 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4884 0084 002B     		cmp	r3, #0
 4885 0086 08D1     		bne	.L251
1088:.\main.c      ****     {
1089:.\main.c      ****         setSpeed(speed,speed);
 4886              		.loc 1 1089 0 is_stmt 1
 4887 0088 2F4B     		ldr	r3, .L254+8
 4888 008a D3E90001 		ldrd	r0, [r3]
 4889 008e 2E4B     		ldr	r3, .L254+8
 4890 0090 D3E90023 		ldrd	r2, [r3]
 4891 0094 FFF7FEFF 		bl	setSpeed
 4892 0098 4DE0     		b	.L248
 4893              	.L251:
1090:.\main.c      ****     }
1091:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 4894              		.loc 1 1091 0
 4895 009a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4896 009c 002B     		cmp	r3, #0
 4897 009e 0ED0     		beq	.L252
 4898              		.loc 1 1091 0 is_stmt 0 discriminator 1
 4899 00a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4900 00a2 002B     		cmp	r3, #0
 4901 00a4 0BD0     		beq	.L252
 4902              		.loc 1 1091 0 discriminator 2
 4903 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4904 00a8 002B     		cmp	r3, #0
 4905 00aa 08D1     		bne	.L252
1092:.\main.c      ****     {
1093:.\main.c      ****         setSpeed(speed ,speed);
 4906              		.loc 1 1093 0 is_stmt 1
 4907 00ac 264B     		ldr	r3, .L254+8
 4908 00ae D3E90001 		ldrd	r0, [r3]
 4909 00b2 254B     		ldr	r3, .L254+8
 4910 00b4 D3E90023 		ldrd	r2, [r3]
 4911 00b8 FFF7FEFF 		bl	setSpeed
 4912 00bc 3BE0     		b	.L248
 4913              	.L252:
1094:.\main.c      ****     }
1095:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 4914              		.loc 1 1095 0
 4915 00be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4916 00c0 002B     		cmp	r3, #0
 4917 00c2 27D0     		beq	.L253
 4918              		.loc 1 1095 0 is_stmt 0 discriminator 1
 4919 00c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4920 00c6 002B     		cmp	r3, #0
 4921 00c8 24D1     		bne	.L253
 4922              		.loc 1 1095 0 discriminator 2
 4923 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4924 00cc 002B     		cmp	r3, #0
 4925 00ce 21D1     		bne	.L253
1096:.\main.c      ****     {
1097:.\main.c      ****         setSpeed(-speed / 1.6,speed / 1.6);
 4926              		.loc 1 1097 0 is_stmt 1
 4927 00d0 1D4B     		ldr	r3, .L254+8
 4928 00d2 D3E90023 		ldrd	r2, [r3]
 4929 00d6 1446     		mov	r4, r2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 108


 4930 00d8 83F00045 		eor	r5, r3, #-2147483648
 4931 00dc 2046     		mov	r0, r4
 4932 00de 2946     		mov	r1, r5
 4933 00e0 17A3     		adr	r3, .L254
 4934 00e2 D3E90023 		ldrd	r2, [r3]
 4935 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 4936 00ea 0246     		mov	r2, r0
 4937 00ec 0B46     		mov	r3, r1
 4938 00ee 1446     		mov	r4, r2
 4939 00f0 1D46     		mov	r5, r3
 4940 00f2 154B     		ldr	r3, .L254+8
 4941 00f4 D3E90023 		ldrd	r2, [r3]
 4942 00f8 1046     		mov	r0, r2
 4943 00fa 1946     		mov	r1, r3
 4944 00fc 10A3     		adr	r3, .L254
 4945 00fe D3E90023 		ldrd	r2, [r3]
 4946 0102 FFF7FEFF 		bl	__aeabi_ddiv
 4947 0106 0246     		mov	r2, r0
 4948 0108 0B46     		mov	r3, r1
 4949 010a 2046     		mov	r0, r4
 4950 010c 2946     		mov	r1, r5
 4951 010e FFF7FEFF 		bl	setSpeed
 4952 0112 10E0     		b	.L248
 4953              	.L253:
1098:.\main.c      ****     }
1099:.\main.c      ****     else if (mid && !nr && !nl)
 4954              		.loc 1 1099 0
 4955 0114 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4956 0116 002B     		cmp	r3, #0
 4957 0118 0DD0     		beq	.L248
 4958              		.loc 1 1099 0 is_stmt 0 discriminator 1
 4959 011a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4960 011c 002B     		cmp	r3, #0
 4961 011e 0AD1     		bne	.L248
 4962              		.loc 1 1099 0 discriminator 2
 4963 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4964 0122 002B     		cmp	r3, #0
 4965 0124 07D1     		bne	.L248
1100:.\main.c      ****     {
1101:.\main.c      ****         setSpeed(speed,speed);
 4966              		.loc 1 1101 0 is_stmt 1
 4967 0126 084B     		ldr	r3, .L254+8
 4968 0128 D3E90001 		ldrd	r0, [r3]
 4969 012c 064B     		ldr	r3, .L254+8
 4970 012e D3E90023 		ldrd	r2, [r3]
 4971 0132 FFF7FEFF 		bl	setSpeed
 4972              	.L248:
1102:.\main.c      ****     }
1103:.\main.c      **** }
 4973              		.loc 1 1103 0
 4974 0136 0837     		adds	r7, r7, #8
 4975              		.cfi_def_cfa_offset 24
 4976 0138 BD46     		mov	sp, r7
 4977              		.cfi_def_cfa_register 13
 4978              		@ sp needed
 4979 013a BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 4980              	.L255:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 109


 4981 013e 00BF     		.align	3
 4982              	.L254:
 4983 0140 9A999999 		.word	-1717986918
 4984 0144 9999F93F 		.word	1073322393
 4985 0148 00000000 		.word	speed
 4986              		.cfi_endproc
 4987              	.LFE98:
 4988              		.size	trackLineZ, .-trackLineZ
 4989 014c AFF30080 		.section	.text.trackLineU,"ax",%progbits
 4990              		.align	2
 4991              		.global	trackLineU
 4992              		.thumb
 4993              		.thumb_func
 4994              		.type	trackLineU, %function
 4995              	trackLineU:
 4996              	.LFB99:
1104:.\main.c      **** 
1105:.\main.c      **** 
1106:.\main.c      **** void trackLineU()
1107:.\main.c      **** { 
 4997              		.loc 1 1107 0
 4998              		.cfi_startproc
 4999              		@ args = 0, pretend = 0, frame = 0
 5000              		@ frame_needed = 1, uses_anonymous_args = 0
 5001              		@ link register save eliminated.
 5002 0000 80B4     		push	{r7}
 5003              		.cfi_def_cfa_offset 4
 5004              		.cfi_offset 7, -4
 5005 0002 00AF     		add	r7, sp, #0
 5006              		.cfi_def_cfa_register 7
1108:.\main.c      **** //removed from final implementation
1109:.\main.c      **** }
 5007              		.loc 1 1109 0
 5008 0004 BD46     		mov	sp, r7
 5009              		.cfi_def_cfa_register 13
 5010              		@ sp needed
 5011 0006 5DF8047B 		ldr	r7, [sp], #4
 5012              		.cfi_restore 7
 5013              		.cfi_def_cfa_offset 0
 5014 000a 7047     		bx	lr
 5015              		.cfi_endproc
 5016              	.LFE99:
 5017              		.size	trackLineU, .-trackLineU
 5018              		.global	__aeabi_fadd
 5019              		.section	.rodata
 5020 011b 00       		.align	2
 5021              	.LC15:
 5022 011c 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 5022      65727920 
 5022      566F6C74 
 5022      6167653A 
 5022      2025646D 
 5023              		.section	.text.print_ADC,"ax",%progbits
 5024              		.align	2
 5025              		.global	print_ADC
 5026              		.thumb
 5027              		.thumb_func
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 110


 5028              		.type	print_ADC, %function
 5029              	print_ADC:
 5030              	.LFB100:
1110:.\main.c      **** 
1111:.\main.c      **** void print_ADC()
1112:.\main.c      **** {
 5031              		.loc 1 1112 0
 5032              		.cfi_startproc
 5033              		@ args = 0, pretend = 0, frame = 24
 5034              		@ frame_needed = 1, uses_anonymous_args = 0
 5035 0000 80B5     		push	{r7, lr}
 5036              		.cfi_def_cfa_offset 8
 5037              		.cfi_offset 7, -8
 5038              		.cfi_offset 14, -4
 5039 0002 86B0     		sub	sp, sp, #24
 5040              		.cfi_def_cfa_offset 32
 5041 0004 00AF     		add	r7, sp, #0
 5042              		.cfi_def_cfa_register 7
1113:.\main.c      ****    //usbPutString("HII\n");
1114:.\main.c      ****     if(flag_receive_ADC == 1)
 5043              		.loc 1 1114 0
 5044 0006 274B     		ldr	r3, .L260
 5045 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5046 000a 012B     		cmp	r3, #1
 5047 000c 46D1     		bne	.L257
 5048              	.LBB10:
1115:.\main.c      ****     {
1116:.\main.c      ****         //usbPutString("AAA\r\n");
1117:.\main.c      ****         flag_receive_ADC = 0;
 5049              		.loc 1 1117 0
 5050 000e 254B     		ldr	r3, .L260
 5051 0010 0022     		movs	r2, #0
 5052 0012 1A70     		strb	r2, [r3]
1118:.\main.c      ****         
1119:.\main.c      ****        // int8 channel = ADC_
1120:.\main.c      ****         float scalingFactor = 0.972;
 5053              		.loc 1 1120 0
 5054 0014 244B     		ldr	r3, .L260+4
 5055 0016 7B61     		str	r3, [r7, #20]	@ float
1121:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 5056              		.loc 1 1121 0
 5057 0018 244B     		ldr	r3, .L260+8
 5058 001a 1B88     		ldrh	r3, [r3]
 5059 001c 1BB2     		sxth	r3, r3
 5060 001e 41F28832 		movw	r2, #5000
 5061 0022 02FB03F3 		mul	r3, r2, r3
 5062 0026 002B     		cmp	r3, #0
 5063 0028 01DA     		bge	.L259
 5064 002a 03F6FF73 		addw	r3, r3, #4095
 5065              	.L259:
 5066 002e 1B13     		asrs	r3, r3, #12
 5067 0030 1846     		mov	r0, r3
 5068 0032 FFF7FEFF 		bl	__aeabi_i2f
 5069 0036 0346     		mov	r3, r0
 5070 0038 1846     		mov	r0, r3
 5071 003a 7969     		ldr	r1, [r7, #20]	@ float
 5072 003c FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 111


 5073 0040 0346     		mov	r3, r0
 5074 0042 1846     		mov	r0, r3
 5075 0044 1946     		mov	r1, r3
 5076 0046 FFF7FEFF 		bl	__aeabi_fadd
 5077 004a 0346     		mov	r3, r0
 5078 004c 1846     		mov	r0, r3
 5079 004e FFF7FEFF 		bl	__aeabi_f2iz
 5080 0052 0346     		mov	r3, r0
 5081 0054 7B82     		strh	r3, [r7, #18]	@ movhi
1122:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 5082              		.loc 1 1122 0
 5083 0056 B7F91220 		ldrsh	r2, [r7, #18]
 5084 005a 154B     		ldr	r3, .L260+12
 5085 005c 1B88     		ldrh	r3, [r3]
 5086 005e 1BB2     		sxth	r3, r3
 5087 0060 1A44     		add	r2, r2, r3
 5088 0062 144B     		ldr	r3, .L260+16
 5089 0064 1B88     		ldrh	r3, [r3]
 5090 0066 1BB2     		sxth	r3, r3
 5091 0068 1344     		add	r3, r3, r2
 5092 006a 134A     		ldr	r2, .L260+20
 5093 006c 82FB0312 		smull	r1, r2, r2, r3
 5094 0070 DB17     		asrs	r3, r3, #31
 5095 0072 D31A     		subs	r3, r2, r3
 5096 0074 7B82     		strh	r3, [r7, #18]	@ movhi
1123:.\main.c      ****         prevVoltage2 = prevVoltage;
 5097              		.loc 1 1123 0
 5098 0076 0E4B     		ldr	r3, .L260+12
 5099 0078 1A88     		ldrh	r2, [r3]
 5100 007a 0E4B     		ldr	r3, .L260+16
 5101 007c 1A80     		strh	r2, [r3]	@ movhi
1124:.\main.c      ****         prevVoltage = converted_val;
 5102              		.loc 1 1124 0
 5103 007e 0C4A     		ldr	r2, .L260+12
 5104 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5105 0082 1380     		strh	r3, [r2]	@ movhi
1125:.\main.c      ****         
1126:.\main.c      ****         char result_str[16];
1127:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 5106              		.loc 1 1127 0
 5107 0084 B7F91230 		ldrsh	r3, [r7, #18]
 5108 0088 3A46     		mov	r2, r7
 5109 008a 1046     		mov	r0, r2
 5110 008c 0B49     		ldr	r1, .L260+24
 5111 008e 1A46     		mov	r2, r3
 5112 0090 FFF7FEFF 		bl	sprintf
1128:.\main.c      ****         
1129:.\main.c      ****         usbPutString(result_str);
 5113              		.loc 1 1129 0
 5114 0094 3B46     		mov	r3, r7
 5115 0096 1846     		mov	r0, r3
 5116 0098 FFF7FEFF 		bl	usbPutString
 5117              	.L257:
 5118              	.LBE10:
1130:.\main.c      ****     }
1131:.\main.c      **** }
 5119              		.loc 1 1131 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 112


 5120 009c 1837     		adds	r7, r7, #24
 5121              		.cfi_def_cfa_offset 8
 5122 009e BD46     		mov	sp, r7
 5123              		.cfi_def_cfa_register 13
 5124              		@ sp needed
 5125 00a0 80BD     		pop	{r7, pc}
 5126              	.L261:
 5127 00a2 00BF     		.align	2
 5128              	.L260:
 5129 00a4 00000000 		.word	flag_receive_ADC
 5130 00a8 FED4783F 		.word	1064883454
 5131 00ac 00000000 		.word	adc_result
 5132 00b0 00000000 		.word	prevVoltage
 5133 00b4 00000000 		.word	prevVoltage2
 5134 00b8 56555555 		.word	1431655766
 5135 00bc 1C010000 		.word	.LC15
 5136              		.cfi_endproc
 5137              	.LFE100:
 5138              		.size	print_ADC, .-print_ADC
 5139              		.section	.rodata
 5140              		.align	2
 5141              	.LC16:
 5142 0134 52535349 		.ascii	"RSSI:\000"
 5142      3A00
 5143 013a 0000     		.align	2
 5144              	.LC17:
 5145 013c 25640D0A 		.ascii	"%d\015\012\000"
 5145      00
 5146 0141 000000   		.align	2
 5147              	.LC18:
 5148 0144 726F626F 		.ascii	"robot_x:\000"
 5148      745F783A 
 5148      00
 5149 014d 000000   		.align	2
 5150              	.LC19:
 5151 0150 726F626F 		.ascii	"robot_y:\000"
 5151      745F793A 
 5151      00
 5152 0159 000000   		.align	2
 5153              	.LC20:
 5154 015c 726F626F 		.ascii	"robot_dir:\000"
 5154      745F6469 
 5154      723A00
 5155 0167 00       		.section	.text.print_RF,"ax",%progbits
 5156              		.align	2
 5157              		.global	print_RF
 5158              		.thumb
 5159              		.thumb_func
 5160              		.type	print_RF, %function
 5161              	print_RF:
 5162              	.LFB101:
1132:.\main.c      **** 
1133:.\main.c      **** void print_RF()
1134:.\main.c      **** {
 5163              		.loc 1 1134 0
 5164              		.cfi_startproc
 5165              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 113


 5166              		@ frame_needed = 1, uses_anonymous_args = 0
 5167 0000 80B5     		push	{r7, lr}
 5168              		.cfi_def_cfa_offset 8
 5169              		.cfi_offset 7, -8
 5170              		.cfi_offset 14, -4
 5171 0002 84B0     		sub	sp, sp, #16
 5172              		.cfi_def_cfa_offset 24
 5173 0004 00AF     		add	r7, sp, #0
 5174              		.cfi_def_cfa_register 7
1135:.\main.c      ****     if(flag_print_rf == 1)
 5175              		.loc 1 1135 0
 5176 0006 254B     		ldr	r3, .L264
 5177 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5178 000a 012B     		cmp	r3, #1
 5179 000c 42D1     		bne	.L262
 5180              	.LBB11:
1136:.\main.c      ****     {
1137:.\main.c      ****         char printString[16];
1138:.\main.c      ****         flag_print_rf = 0;
 5181              		.loc 1 1138 0
 5182 000e 234B     		ldr	r3, .L264
 5183 0010 0022     		movs	r2, #0
 5184 0012 1A70     		strb	r2, [r3]
1139:.\main.c      ****         usbPutString("RSSI:");
 5185              		.loc 1 1139 0
 5186 0014 2248     		ldr	r0, .L264+4
 5187 0016 FFF7FEFF 		bl	usbPutString
1140:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 5188              		.loc 1 1140 0
 5189 001a 224B     		ldr	r3, .L264+8
 5190 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5191 001e 5BB2     		sxtb	r3, r3
 5192 0020 3A46     		mov	r2, r7
 5193 0022 1046     		mov	r0, r2
 5194 0024 2049     		ldr	r1, .L264+12
 5195 0026 1A46     		mov	r2, r3
 5196 0028 FFF7FEFF 		bl	sprintf
1141:.\main.c      ****         usbPutString(printString);
 5197              		.loc 1 1141 0
 5198 002c 3B46     		mov	r3, r7
 5199 002e 1846     		mov	r0, r3
 5200 0030 FFF7FEFF 		bl	usbPutString
1142:.\main.c      ****         usbPutString("robot_x:");
 5201              		.loc 1 1142 0
 5202 0034 1D48     		ldr	r0, .L264+16
 5203 0036 FFF7FEFF 		bl	usbPutString
1143:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
 5204              		.loc 1 1143 0
 5205 003a 1A4B     		ldr	r3, .L264+8
 5206 003c 5B88     		ldrh	r3, [r3, #2]
 5207 003e 1BB2     		sxth	r3, r3
 5208 0040 3A46     		mov	r2, r7
 5209 0042 1046     		mov	r0, r2
 5210 0044 1849     		ldr	r1, .L264+12
 5211 0046 1A46     		mov	r2, r3
 5212 0048 FFF7FEFF 		bl	sprintf
1144:.\main.c      ****         usbPutString(printString);
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 114


 5213              		.loc 1 1144 0
 5214 004c 3B46     		mov	r3, r7
 5215 004e 1846     		mov	r0, r3
 5216 0050 FFF7FEFF 		bl	usbPutString
1145:.\main.c      ****         usbPutString("robot_y:");
 5217              		.loc 1 1145 0
 5218 0054 1648     		ldr	r0, .L264+20
 5219 0056 FFF7FEFF 		bl	usbPutString
1146:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 5220              		.loc 1 1146 0
 5221 005a 124B     		ldr	r3, .L264+8
 5222 005c 9B88     		ldrh	r3, [r3, #4]
 5223 005e 1BB2     		sxth	r3, r3
 5224 0060 3A46     		mov	r2, r7
 5225 0062 1046     		mov	r0, r2
 5226 0064 1049     		ldr	r1, .L264+12
 5227 0066 1A46     		mov	r2, r3
 5228 0068 FFF7FEFF 		bl	sprintf
1147:.\main.c      ****         usbPutString(printString);
 5229              		.loc 1 1147 0
 5230 006c 3B46     		mov	r3, r7
 5231 006e 1846     		mov	r0, r3
 5232 0070 FFF7FEFF 		bl	usbPutString
1148:.\main.c      ****         usbPutString("robot_dir:");
 5233              		.loc 1 1148 0
 5234 0074 0F48     		ldr	r0, .L264+24
 5235 0076 FFF7FEFF 		bl	usbPutString
1149:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 5236              		.loc 1 1149 0
 5237 007a 0A4B     		ldr	r3, .L264+8
 5238 007c DB88     		ldrh	r3, [r3, #6]
 5239 007e 1BB2     		sxth	r3, r3
 5240 0080 3A46     		mov	r2, r7
 5241 0082 1046     		mov	r0, r2
 5242 0084 0849     		ldr	r1, .L264+12
 5243 0086 1A46     		mov	r2, r3
 5244 0088 FFF7FEFF 		bl	sprintf
1150:.\main.c      ****         usbPutString(printString);
 5245              		.loc 1 1150 0
 5246 008c 3B46     		mov	r3, r7
 5247 008e 1846     		mov	r0, r3
 5248 0090 FFF7FEFF 		bl	usbPutString
 5249              	.L262:
 5250              	.LBE11:
1151:.\main.c      ****     }
1152:.\main.c      **** }
 5251              		.loc 1 1152 0
 5252 0094 1037     		adds	r7, r7, #16
 5253              		.cfi_def_cfa_offset 8
 5254 0096 BD46     		mov	sp, r7
 5255              		.cfi_def_cfa_register 13
 5256              		@ sp needed
 5257 0098 80BD     		pop	{r7, pc}
 5258              	.L265:
 5259 009a 00BF     		.align	2
 5260              	.L264:
 5261 009c 00000000 		.word	flag_print_rf
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 115


 5262 00a0 34010000 		.word	.LC16
 5263 00a4 00000000 		.word	system_state
 5264 00a8 3C010000 		.word	.LC17
 5265 00ac 44010000 		.word	.LC18
 5266 00b0 50010000 		.word	.LC19
 5267 00b4 5C010000 		.word	.LC20
 5268              		.cfi_endproc
 5269              	.LFE101:
 5270              		.size	print_RF, .-print_RF
 5271              		.section	.text.readFrontSensors,"ax",%progbits
 5272              		.align	2
 5273              		.global	readFrontSensors
 5274              		.thumb
 5275              		.thumb_func
 5276              		.type	readFrontSensors, %function
 5277              	readFrontSensors:
 5278              	.LFB102:
1153:.\main.c      **** 
1154:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
1155:.\main.c      **** {
 5279              		.loc 1 1155 0
 5280              		.cfi_startproc
 5281              		@ args = 0, pretend = 0, frame = 8
 5282              		@ frame_needed = 1, uses_anonymous_args = 0
 5283 0000 90B5     		push	{r4, r7, lr}
 5284              		.cfi_def_cfa_offset 12
 5285              		.cfi_offset 4, -12
 5286              		.cfi_offset 7, -8
 5287              		.cfi_offset 14, -4
 5288 0002 83B0     		sub	sp, sp, #12
 5289              		.cfi_def_cfa_offset 24
 5290 0004 00AF     		add	r7, sp, #0
 5291              		.cfi_def_cfa_register 7
 5292 0006 7860     		str	r0, [r7, #4]
1156:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 5293              		.loc 1 1156 0
 5294 0008 FFF7FEFF 		bl	FLSens_out_Read
 5295 000c 0346     		mov	r3, r0
 5296 000e 1A46     		mov	r2, r3
 5297 0010 7B68     		ldr	r3, [r7, #4]
 5298 0012 1A70     		strb	r2, [r3]
1157:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 5299              		.loc 1 1157 0
 5300 0014 7B68     		ldr	r3, [r7, #4]
 5301 0016 5C1C     		adds	r4, r3, #1
 5302 0018 FFF7FEFF 		bl	NLSens_out_Read
 5303 001c 0346     		mov	r3, r0
 5304 001e 2370     		strb	r3, [r4]
1158:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 5305              		.loc 1 1158 0
 5306 0020 7B68     		ldr	r3, [r7, #4]
 5307 0022 9C1C     		adds	r4, r3, #2
 5308 0024 FFF7FEFF 		bl	MSens_out_Read
 5309 0028 0346     		mov	r3, r0
 5310 002a 2370     		strb	r3, [r4]
1159:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 5311              		.loc 1 1159 0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 116


 5312 002c 7B68     		ldr	r3, [r7, #4]
 5313 002e DC1C     		adds	r4, r3, #3
 5314 0030 FFF7FEFF 		bl	NRSens_out_Read
 5315 0034 0346     		mov	r3, r0
 5316 0036 2370     		strb	r3, [r4]
1160:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 5317              		.loc 1 1160 0
 5318 0038 7B68     		ldr	r3, [r7, #4]
 5319 003a 1C1D     		adds	r4, r3, #4
 5320 003c FFF7FEFF 		bl	FRSens_out_Read
 5321 0040 0346     		mov	r3, r0
 5322 0042 2370     		strb	r3, [r4]
1161:.\main.c      **** }
 5323              		.loc 1 1161 0
 5324 0044 0C37     		adds	r7, r7, #12
 5325              		.cfi_def_cfa_offset 12
 5326 0046 BD46     		mov	sp, r7
 5327              		.cfi_def_cfa_register 13
 5328              		@ sp needed
 5329 0048 90BD     		pop	{r4, r7, pc}
 5330              		.cfi_endproc
 5331              	.LFE102:
 5332              		.size	readFrontSensors, .-readFrontSensors
 5333 004a 00BF     		.section	.text.usbPutString,"ax",%progbits
 5334              		.align	2
 5335              		.global	usbPutString
 5336              		.thumb
 5337              		.thumb_func
 5338              		.type	usbPutString, %function
 5339              	usbPutString:
 5340              	.LFB103:
1162:.\main.c      **** 
1163:.\main.c      **** 
1164:.\main.c      **** //* ========================================
1165:.\main.c      **** void usbPutString(char *s)
1166:.\main.c      **** {
 5341              		.loc 1 1166 0
 5342              		.cfi_startproc
 5343              		@ args = 0, pretend = 0, frame = 16
 5344              		@ frame_needed = 1, uses_anonymous_args = 0
 5345 0000 80B5     		push	{r7, lr}
 5346              		.cfi_def_cfa_offset 8
 5347              		.cfi_offset 7, -8
 5348              		.cfi_offset 14, -4
 5349 0002 84B0     		sub	sp, sp, #16
 5350              		.cfi_def_cfa_offset 24
 5351 0004 00AF     		add	r7, sp, #0
 5352              		.cfi_def_cfa_register 7
 5353 0006 7860     		str	r0, [r7, #4]
1167:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
1168:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
1169:.\main.c      **** //  length to 62 char (63rd char is a '!')
1170:.\main.c      ****     if (USE_USB && portOpen)
 5354              		.loc 1 1170 0
 5355 0008 154B     		ldr	r3, .L271
 5356 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5357 000c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 117


 5358 000e 23D0     		beq	.L267
 5359              	.LBB12:
1171:.\main.c      ****     {
1172:.\main.c      ****             uint32 cnt = 0;
 5360              		.loc 1 1172 0
 5361 0010 0023     		movs	r3, #0
 5362 0012 FB60     		str	r3, [r7, #12]
1173:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 5363              		.loc 1 1173 0
 5364 0014 0AE0     		b	.L269
 5365              	.L270:
1174:.\main.c      ****             {
1175:.\main.c      ****                 cnt++;
 5366              		.loc 1 1175 0
 5367 0016 FB68     		ldr	r3, [r7, #12]
 5368 0018 0133     		adds	r3, r3, #1
 5369 001a FB60     		str	r3, [r7, #12]
1176:.\main.c      ****                 if(cnt == 3000000){
 5370              		.loc 1 1176 0
 5371 001c FB68     		ldr	r3, [r7, #12]
 5372 001e 114A     		ldr	r2, .L271+4
 5373 0020 9342     		cmp	r3, r2
 5374 0022 03D1     		bne	.L269
1177:.\main.c      ****                     portOpen = 0;
 5375              		.loc 1 1177 0
 5376 0024 0E4B     		ldr	r3, .L271
 5377 0026 0022     		movs	r2, #0
 5378 0028 1A70     		strb	r2, [r3]
1178:.\main.c      ****                     return;
 5379              		.loc 1 1178 0
 5380 002a 15E0     		b	.L267
 5381              	.L269:
1173:.\main.c      ****             {
 5382              		.loc 1 1173 0
 5383 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 5384 0030 0346     		mov	r3, r0
 5385 0032 002B     		cmp	r3, #0
 5386 0034 EFD0     		beq	.L270
1179:.\main.c      ****                 }
1180:.\main.c      ****             }
1181:.\main.c      ****             s[63]='\0';
 5387              		.loc 1 1181 0
 5388 0036 7B68     		ldr	r3, [r7, #4]
 5389 0038 3F33     		adds	r3, r3, #63
 5390 003a 0022     		movs	r2, #0
 5391 003c 1A70     		strb	r2, [r3]
1182:.\main.c      ****             s[62]='!';
 5392              		.loc 1 1182 0
 5393 003e 7B68     		ldr	r3, [r7, #4]
 5394 0040 3E33     		adds	r3, r3, #62
 5395 0042 2122     		movs	r2, #33
 5396 0044 1A70     		strb	r2, [r3]
1183:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 5397              		.loc 1 1183 0
 5398 0046 7868     		ldr	r0, [r7, #4]
 5399 0048 FFF7FEFF 		bl	strlen
 5400 004c 0346     		mov	r3, r0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 118


 5401 004e 9BB2     		uxth	r3, r3
 5402 0050 7868     		ldr	r0, [r7, #4]
 5403 0052 1946     		mov	r1, r3
 5404 0054 FFF7FEFF 		bl	USBUART_PutData
 5405              	.L267:
 5406              	.LBE12:
1184:.\main.c      ****     }
1185:.\main.c      **** }
 5407              		.loc 1 1185 0
 5408 0058 1037     		adds	r7, r7, #16
 5409              		.cfi_def_cfa_offset 8
 5410 005a BD46     		mov	sp, r7
 5411              		.cfi_def_cfa_register 13
 5412              		@ sp needed
 5413 005c 80BD     		pop	{r7, pc}
 5414              	.L272:
 5415 005e 00BF     		.align	2
 5416              	.L271:
 5417 0060 00000000 		.word	portOpen
 5418 0064 C0C62D00 		.word	3000000
 5419              		.cfi_endproc
 5420              	.LFE103:
 5421              		.size	usbPutString, .-usbPutString
 5422              		.section	.text.usbPutChar,"ax",%progbits
 5423              		.align	2
 5424              		.global	usbPutChar
 5425              		.thumb
 5426              		.thumb_func
 5427              		.type	usbPutChar, %function
 5428              	usbPutChar:
 5429              	.LFB104:
1186:.\main.c      **** //* ========================================
1187:.\main.c      **** void usbPutChar(char c)
1188:.\main.c      **** {
 5430              		.loc 1 1188 0
 5431              		.cfi_startproc
 5432              		@ args = 0, pretend = 0, frame = 16
 5433              		@ frame_needed = 1, uses_anonymous_args = 0
 5434 0000 80B5     		push	{r7, lr}
 5435              		.cfi_def_cfa_offset 8
 5436              		.cfi_offset 7, -8
 5437              		.cfi_offset 14, -4
 5438 0002 84B0     		sub	sp, sp, #16
 5439              		.cfi_def_cfa_offset 24
 5440 0004 00AF     		add	r7, sp, #0
 5441              		.cfi_def_cfa_register 7
 5442 0006 0346     		mov	r3, r0
 5443 0008 FB71     		strb	r3, [r7, #7]
1189:.\main.c      ****     if (USE_USB && portOpen)    
 5444              		.loc 1 1189 0
 5445 000a 0F4B     		ldr	r3, .L277
 5446 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5447 000e 002B     		cmp	r3, #0
 5448 0010 16D0     		beq	.L273
 5449              	.LBB13:
1190:.\main.c      ****     {    
1191:.\main.c      ****         uint32 cnt = 0;
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 119


 5450              		.loc 1 1191 0
 5451 0012 0023     		movs	r3, #0
 5452 0014 FB60     		str	r3, [r7, #12]
1192:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 5453              		.loc 1 1192 0
 5454 0016 0AE0     		b	.L275
 5455              	.L276:
1193:.\main.c      ****             cnt++;
 5456              		.loc 1 1193 0
 5457 0018 FB68     		ldr	r3, [r7, #12]
 5458 001a 0133     		adds	r3, r3, #1
 5459 001c FB60     		str	r3, [r7, #12]
1194:.\main.c      ****             if(cnt == 3000000){
 5460              		.loc 1 1194 0
 5461 001e FB68     		ldr	r3, [r7, #12]
 5462 0020 0A4A     		ldr	r2, .L277+4
 5463 0022 9342     		cmp	r3, r2
 5464 0024 03D1     		bne	.L275
1195:.\main.c      ****                 portOpen = 0;
 5465              		.loc 1 1195 0
 5466 0026 084B     		ldr	r3, .L277
 5467 0028 0022     		movs	r2, #0
 5468 002a 1A70     		strb	r2, [r3]
1196:.\main.c      ****                 return;
 5469              		.loc 1 1196 0
 5470 002c 08E0     		b	.L273
 5471              	.L275:
1192:.\main.c      ****             cnt++;
 5472              		.loc 1 1192 0
 5473 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 5474 0032 0346     		mov	r3, r0
 5475 0034 002B     		cmp	r3, #0
 5476 0036 EFD0     		beq	.L276
1197:.\main.c      ****             }
1198:.\main.c      ****         }
1199:.\main.c      ****         USBUART_PutChar(c);
 5477              		.loc 1 1199 0
 5478 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5479 003a 1846     		mov	r0, r3
 5480 003c FFF7FEFF 		bl	USBUART_PutChar
 5481              	.L273:
 5482              	.LBE13:
1200:.\main.c      ****     }    
1201:.\main.c      **** }
 5483              		.loc 1 1201 0
 5484 0040 1037     		adds	r7, r7, #16
 5485              		.cfi_def_cfa_offset 8
 5486 0042 BD46     		mov	sp, r7
 5487              		.cfi_def_cfa_register 13
 5488              		@ sp needed
 5489 0044 80BD     		pop	{r7, pc}
 5490              	.L278:
 5491 0046 00BF     		.align	2
 5492              	.L277:
 5493 0048 00000000 		.word	portOpen
 5494 004c C0C62D00 		.word	3000000
 5495              		.cfi_endproc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 120


 5496              	.LFE104:
 5497              		.size	usbPutChar, .-usbPutChar
 5498              		.section	.text.uart_set_PWM,"ax",%progbits
 5499              		.align	2
 5500              		.global	uart_set_PWM
 5501              		.thumb
 5502              		.thumb_func
 5503              		.type	uart_set_PWM, %function
 5504              	uart_set_PWM:
 5505              	.LFB105:
1202:.\main.c      **** //* ========================================
1203:.\main.c      **** 
1204:.\main.c      **** void uart_set_PWM()
1205:.\main.c      **** {
 5506              		.loc 1 1205 0
 5507              		.cfi_startproc
 5508              		@ args = 0, pretend = 0, frame = 0
 5509              		@ frame_needed = 1, uses_anonymous_args = 0
 5510              		@ link register save eliminated.
 5511 0000 80B4     		push	{r7}
 5512              		.cfi_def_cfa_offset 4
 5513              		.cfi_offset 7, -4
 5514 0002 00AF     		add	r7, sp, #0
 5515              		.cfi_def_cfa_register 7
1206:.\main.c      ****     //removed from final implementation
1207:.\main.c      **** }
 5516              		.loc 1 1207 0
 5517 0004 BD46     		mov	sp, r7
 5518              		.cfi_def_cfa_register 13
 5519              		@ sp needed
 5520 0006 5DF8047B 		ldr	r7, [sp], #4
 5521              		.cfi_restore 7
 5522              		.cfi_def_cfa_offset 0
 5523 000a 7047     		bx	lr
 5524              		.cfi_endproc
 5525              	.LFE105:
 5526              		.size	uart_set_PWM, .-uart_set_PWM
 5527              		.text
 5528              	.Letext0:
 5529              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5530              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5531              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5532              		.file 5 ".\\vars.h"
 5533              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5534              		.file 7 ".\\pathfinder.h"
 5535              		.section	.debug_info,"",%progbits
 5536              	.Ldebug_info0:
 5537 0000 910E0000 		.4byte	0xe91
 5538 0004 0400     		.2byte	0x4
 5539 0006 00000000 		.4byte	.Ldebug_abbrev0
 5540 000a 04       		.byte	0x4
 5541 000b 01       		.uleb128 0x1
 5542 000c 0E050000 		.4byte	.LASF200
 5543 0010 01       		.byte	0x1
 5544 0011 4A090000 		.4byte	.LASF201
 5545 0015 82090000 		.4byte	.LASF202
 5546 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 121


 5547 001d 00000000 		.4byte	0
 5548 0021 00000000 		.4byte	.Ldebug_line0
 5549 0025 02       		.uleb128 0x2
 5550 0026 01       		.byte	0x1
 5551 0027 06       		.byte	0x6
 5552 0028 3C010000 		.4byte	.LASF0
 5553 002c 02       		.uleb128 0x2
 5554 002d 01       		.byte	0x1
 5555 002e 08       		.byte	0x8
 5556 002f 76060000 		.4byte	.LASF1
 5557 0033 02       		.uleb128 0x2
 5558 0034 02       		.byte	0x2
 5559 0035 05       		.byte	0x5
 5560 0036 B0060000 		.4byte	.LASF2
 5561 003a 02       		.uleb128 0x2
 5562 003b 02       		.byte	0x2
 5563 003c 07       		.byte	0x7
 5564 003d 93030000 		.4byte	.LASF3
 5565 0041 03       		.uleb128 0x3
 5566 0042 19040000 		.4byte	.LASF5
 5567 0046 02       		.byte	0x2
 5568 0047 3F       		.byte	0x3f
 5569 0048 4C000000 		.4byte	0x4c
 5570 004c 02       		.uleb128 0x2
 5571 004d 04       		.byte	0x4
 5572 004e 05       		.byte	0x5
 5573 004f D2010000 		.4byte	.LASF4
 5574 0053 03       		.uleb128 0x3
 5575 0054 A0070000 		.4byte	.LASF6
 5576 0058 02       		.byte	0x2
 5577 0059 41       		.byte	0x41
 5578 005a 5E000000 		.4byte	0x5e
 5579 005e 02       		.uleb128 0x2
 5580 005f 04       		.byte	0x4
 5581 0060 07       		.byte	0x7
 5582 0061 53030000 		.4byte	.LASF7
 5583 0065 02       		.uleb128 0x2
 5584 0066 08       		.byte	0x8
 5585 0067 05       		.byte	0x5
 5586 0068 2E010000 		.4byte	.LASF8
 5587 006c 02       		.uleb128 0x2
 5588 006d 08       		.byte	0x8
 5589 006e 07       		.byte	0x7
 5590 006f 99000000 		.4byte	.LASF9
 5591 0073 04       		.uleb128 0x4
 5592 0074 04       		.byte	0x4
 5593 0075 05       		.byte	0x5
 5594 0076 696E7400 		.ascii	"int\000"
 5595 007a 02       		.uleb128 0x2
 5596 007b 04       		.byte	0x4
 5597 007c 07       		.byte	0x7
 5598 007d FC020000 		.4byte	.LASF10
 5599 0081 02       		.uleb128 0x2
 5600 0082 04       		.byte	0x4
 5601 0083 07       		.byte	0x7
 5602 0084 8C040000 		.4byte	.LASF11
 5603 0088 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 122


 5604 0089 04       		.byte	0x4
 5605 008a 8E000000 		.4byte	0x8e
 5606 008e 02       		.uleb128 0x2
 5607 008f 01       		.byte	0x1
 5608 0090 08       		.byte	0x8
 5609 0091 60070000 		.4byte	.LASF12
 5610 0095 03       		.uleb128 0x3
 5611 0096 6E060000 		.4byte	.LASF13
 5612 009a 03       		.byte	0x3
 5613 009b 2C       		.byte	0x2c
 5614 009c 41000000 		.4byte	0x41
 5615 00a0 03       		.uleb128 0x3
 5616 00a1 6C080000 		.4byte	.LASF14
 5617 00a5 03       		.byte	0x3
 5618 00a6 2D       		.byte	0x2d
 5619 00a7 53000000 		.4byte	0x53
 5620 00ab 06       		.uleb128 0x6
 5621 00ac ED010000 		.4byte	.LASF15
 5622 00b0 04       		.byte	0x4
 5623 00b1 9201     		.2byte	0x192
 5624 00b3 2C000000 		.4byte	0x2c
 5625 00b7 06       		.uleb128 0x6
 5626 00b8 84060000 		.4byte	.LASF16
 5627 00bc 04       		.byte	0x4
 5628 00bd 9301     		.2byte	0x193
 5629 00bf 3A000000 		.4byte	0x3a
 5630 00c3 06       		.uleb128 0x6
 5631 00c4 39020000 		.4byte	.LASF17
 5632 00c8 04       		.byte	0x4
 5633 00c9 9401     		.2byte	0x194
 5634 00cb 5E000000 		.4byte	0x5e
 5635 00cf 06       		.uleb128 0x6
 5636 00d0 AF030000 		.4byte	.LASF18
 5637 00d4 04       		.byte	0x4
 5638 00d5 9501     		.2byte	0x195
 5639 00d7 25000000 		.4byte	0x25
 5640 00db 06       		.uleb128 0x6
 5641 00dc 09090000 		.4byte	.LASF19
 5642 00e0 04       		.byte	0x4
 5643 00e1 9601     		.2byte	0x196
 5644 00e3 33000000 		.4byte	0x33
 5645 00e7 02       		.uleb128 0x2
 5646 00e8 04       		.byte	0x4
 5647 00e9 04       		.byte	0x4
 5648 00ea E4050000 		.4byte	.LASF20
 5649 00ee 02       		.uleb128 0x2
 5650 00ef 08       		.byte	0x8
 5651 00f0 04       		.byte	0x4
 5652 00f1 0C020000 		.4byte	.LASF21
 5653 00f5 07       		.uleb128 0x7
 5654 00f6 A0000000 		.4byte	0xa0
 5655 00fa 05010000 		.4byte	0x105
 5656 00fe 08       		.uleb128 0x8
 5657 00ff 81000000 		.4byte	0x81
 5658 0103 01       		.byte	0x1
 5659 0104 00       		.byte	0
 5660 0105 02       		.uleb128 0x2
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 123


 5661 0106 08       		.byte	0x8
 5662 0107 04       		.byte	0x4
 5663 0108 42070000 		.4byte	.LASF22
 5664 010c 09       		.uleb128 0x9
 5665 010d CC010000 		.4byte	.LASF31
 5666 0111 01       		.byte	0x1
 5667 0112 05       		.byte	0x5
 5668 0113 64       		.byte	0x64
 5669 0114 49010000 		.4byte	0x149
 5670 0118 0A       		.uleb128 0xa
 5671 0119 B4030000 		.4byte	.LASF23
 5672 011d 00       		.sleb128 0
 5673 011e 0A       		.uleb128 0xa
 5674 011f D7040000 		.4byte	.LASF24
 5675 0123 01       		.sleb128 1
 5676 0124 0A       		.uleb128 0xa
 5677 0125 CE020000 		.4byte	.LASF25
 5678 0129 02       		.sleb128 2
 5679 012a 0A       		.uleb128 0xa
 5680 012b 2D070000 		.4byte	.LASF26
 5681 012f 03       		.sleb128 3
 5682 0130 0A       		.uleb128 0xa
 5683 0131 D2030000 		.4byte	.LASF27
 5684 0135 04       		.sleb128 4
 5685 0136 0A       		.uleb128 0xa
 5686 0137 EA050000 		.4byte	.LASF28
 5687 013b 05       		.sleb128 5
 5688 013c 0A       		.uleb128 0xa
 5689 013d 54060000 		.4byte	.LASF29
 5690 0141 06       		.sleb128 6
 5691 0142 0A       		.uleb128 0xa
 5692 0143 DB010000 		.4byte	.LASF30
 5693 0147 07       		.sleb128 7
 5694 0148 00       		.byte	0
 5695 0149 09       		.uleb128 0x9
 5696 014a 65070000 		.4byte	.LASF32
 5697 014e 01       		.byte	0x1
 5698 014f 05       		.byte	0x5
 5699 0150 65       		.byte	0x65
 5700 0151 86010000 		.4byte	0x186
 5701 0155 0A       		.uleb128 0xa
 5702 0156 BA060000 		.4byte	.LASF33
 5703 015a 00       		.sleb128 0
 5704 015b 0A       		.uleb128 0xa
 5705 015c 0D040000 		.4byte	.LASF34
 5706 0160 01       		.sleb128 1
 5707 0161 0A       		.uleb128 0xa
 5708 0162 08010000 		.4byte	.LASF35
 5709 0166 02       		.sleb128 2
 5710 0167 0A       		.uleb128 0xa
 5711 0168 23040000 		.4byte	.LASF36
 5712 016c 03       		.sleb128 3
 5713 016d 0A       		.uleb128 0xa
 5714 016e 1F000000 		.4byte	.LASF37
 5715 0172 04       		.sleb128 4
 5716 0173 0A       		.uleb128 0xa
 5717 0174 8B060000 		.4byte	.LASF38
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 124


 5718 0178 05       		.sleb128 5
 5719 0179 0A       		.uleb128 0xa
 5720 017a B9020000 		.4byte	.LASF39
 5721 017e 06       		.sleb128 6
 5722 017f 0A       		.uleb128 0xa
 5723 0180 10010000 		.4byte	.LASF40
 5724 0184 07       		.sleb128 7
 5725 0185 00       		.byte	0
 5726 0186 0B       		.uleb128 0xb
 5727 0187 1A030000 		.4byte	.LASF203
 5728 018b 20       		.byte	0x20
 5729 018c 05       		.byte	0x5
 5730 018d 6B       		.byte	0x6b
 5731 018e 5F020000 		.4byte	0x25f
 5732 0192 0C       		.uleb128 0xc
 5733 0193 7E040000 		.4byte	.LASF41
 5734 0197 05       		.byte	0x5
 5735 0198 6C       		.byte	0x6c
 5736 0199 CF000000 		.4byte	0xcf
 5737 019d 00       		.byte	0
 5738 019e 0C       		.uleb128 0xc
 5739 019f 77070000 		.4byte	.LASF42
 5740 01a3 05       		.byte	0x5
 5741 01a4 6D       		.byte	0x6d
 5742 01a5 AB000000 		.4byte	0xab
 5743 01a9 01       		.byte	0x1
 5744 01aa 0C       		.uleb128 0xc
 5745 01ab DF070000 		.4byte	.LASF43
 5746 01af 05       		.byte	0x5
 5747 01b0 6E       		.byte	0x6e
 5748 01b1 DB000000 		.4byte	0xdb
 5749 01b5 02       		.byte	0x2
 5750 01b6 0C       		.uleb128 0xc
 5751 01b7 FE080000 		.4byte	.LASF44
 5752 01bb 05       		.byte	0x5
 5753 01bc 6F       		.byte	0x6f
 5754 01bd DB000000 		.4byte	0xdb
 5755 01c1 04       		.byte	0x4
 5756 01c2 0C       		.uleb128 0xc
 5757 01c3 E0020000 		.4byte	.LASF45
 5758 01c7 05       		.byte	0x5
 5759 01c8 70       		.byte	0x70
 5760 01c9 DB000000 		.4byte	0xdb
 5761 01cd 06       		.byte	0x6
 5762 01ce 0C       		.uleb128 0xc
 5763 01cf D6000000 		.4byte	.LASF46
 5764 01d3 05       		.byte	0x5
 5765 01d4 71       		.byte	0x71
 5766 01d5 DB000000 		.4byte	0xdb
 5767 01d9 08       		.byte	0x8
 5768 01da 0C       		.uleb128 0xc
 5769 01db C8070000 		.4byte	.LASF47
 5770 01df 05       		.byte	0x5
 5771 01e0 72       		.byte	0x72
 5772 01e1 DB000000 		.4byte	0xdb
 5773 01e5 0A       		.byte	0xa
 5774 01e6 0C       		.uleb128 0xc
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 125


 5775 01e7 79090000 		.4byte	.LASF48
 5776 01eb 05       		.byte	0x5
 5777 01ec 73       		.byte	0x73
 5778 01ed DB000000 		.4byte	0xdb
 5779 01f1 0C       		.byte	0xc
 5780 01f2 0C       		.uleb128 0xc
 5781 01f3 7B000000 		.4byte	.LASF49
 5782 01f7 05       		.byte	0x5
 5783 01f8 74       		.byte	0x74
 5784 01f9 DB000000 		.4byte	0xdb
 5785 01fd 0E       		.byte	0xe
 5786 01fe 0C       		.uleb128 0xc
 5787 01ff 20080000 		.4byte	.LASF50
 5788 0203 05       		.byte	0x5
 5789 0204 75       		.byte	0x75
 5790 0205 DB000000 		.4byte	0xdb
 5791 0209 10       		.byte	0x10
 5792 020a 0C       		.uleb128 0xc
 5793 020b B0040000 		.4byte	.LASF51
 5794 020f 05       		.byte	0x5
 5795 0210 76       		.byte	0x76
 5796 0211 DB000000 		.4byte	0xdb
 5797 0215 12       		.byte	0x12
 5798 0216 0C       		.uleb128 0xc
 5799 0217 83040000 		.4byte	.LASF52
 5800 021b 05       		.byte	0x5
 5801 021c 77       		.byte	0x77
 5802 021d DB000000 		.4byte	0xdb
 5803 0221 14       		.byte	0x14
 5804 0222 0C       		.uleb128 0xc
 5805 0223 B8040000 		.4byte	.LASF53
 5806 0227 05       		.byte	0x5
 5807 0228 78       		.byte	0x78
 5808 0229 DB000000 		.4byte	0xdb
 5809 022d 16       		.byte	0x16
 5810 022e 0C       		.uleb128 0xc
 5811 022f 9E060000 		.4byte	.LASF54
 5812 0233 05       		.byte	0x5
 5813 0234 79       		.byte	0x79
 5814 0235 DB000000 		.4byte	0xdb
 5815 0239 18       		.byte	0x18
 5816 023a 0C       		.uleb128 0xc
 5817 023b E7040000 		.4byte	.LASF55
 5818 023f 05       		.byte	0x5
 5819 0240 7A       		.byte	0x7a
 5820 0241 DB000000 		.4byte	0xdb
 5821 0245 1A       		.byte	0x1a
 5822 0246 0C       		.uleb128 0xc
 5823 0247 0B000000 		.4byte	.LASF56
 5824 024b 05       		.byte	0x5
 5825 024c 7B       		.byte	0x7b
 5826 024d DB000000 		.4byte	0xdb
 5827 0251 1C       		.byte	0x1c
 5828 0252 0C       		.uleb128 0xc
 5829 0253 66020000 		.4byte	.LASF57
 5830 0257 05       		.byte	0x5
 5831 0258 7C       		.byte	0x7c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 126


 5832 0259 DB000000 		.4byte	0xdb
 5833 025d 1E       		.byte	0x1e
 5834 025e 00       		.byte	0
 5835 025f 0D       		.uleb128 0xd
 5836 0260 9D080000 		.4byte	.LASF58
 5837 0264 01       		.byte	0x1
 5838 0265 84       		.byte	0x84
 5839 0266 00000000 		.4byte	.LFB63
 5840 026a 0C000000 		.4byte	.LFE63-.LFB63
 5841 026e 01       		.uleb128 0x1
 5842 026f 9C       		.byte	0x9c
 5843 0270 0E       		.uleb128 0xe
 5844 0271 22020000 		.4byte	.LASF59
 5845 0275 01       		.byte	0x1
 5846 0276 8A       		.byte	0x8a
 5847 0277 00000000 		.4byte	.LFB64
 5848 027b 2C000000 		.4byte	.LFE64-.LFB64
 5849 027f 01       		.uleb128 0x1
 5850 0280 9C       		.byte	0x9c
 5851 0281 0E       		.uleb128 0xe
 5852 0282 F2020000 		.4byte	.LASF60
 5853 0286 01       		.byte	0x1
 5854 0287 93       		.byte	0x93
 5855 0288 00000000 		.4byte	.LFB65
 5856 028c 98010000 		.4byte	.LFE65-.LFB65
 5857 0290 01       		.uleb128 0x1
 5858 0291 9C       		.byte	0x9c
 5859 0292 0F       		.uleb128 0xf
 5860 0293 57040000 		.4byte	.LASF66
 5861 0297 01       		.byte	0x1
 5862 0298 B8       		.byte	0xb8
 5863 0299 00000000 		.4byte	.LFB66
 5864 029d 64010000 		.4byte	.LFE66-.LFB66
 5865 02a1 01       		.uleb128 0x1
 5866 02a2 9C       		.byte	0x9c
 5867 02a3 DC020000 		.4byte	0x2dc
 5868 02a7 10       		.uleb128 0x10
 5869 02a8 0E000000 		.4byte	.LBB2
 5870 02ac 78000000 		.4byte	.LBE2-.LBB2
 5871 02b0 C3020000 		.4byte	0x2c3
 5872 02b4 11       		.uleb128 0x11
 5873 02b5 88000000 		.4byte	.LASF61
 5874 02b9 01       		.byte	0x1
 5875 02ba BC       		.byte	0xbc
 5876 02bb B7000000 		.4byte	0xb7
 5877 02bf 02       		.uleb128 0x2
 5878 02c0 91       		.byte	0x91
 5879 02c1 76       		.sleb128 -10
 5880 02c2 00       		.byte	0
 5881 02c3 12       		.uleb128 0x12
 5882 02c4 92000000 		.4byte	.LBB3
 5883 02c8 78000000 		.4byte	.LBE3-.LBB3
 5884 02cc 11       		.uleb128 0x11
 5885 02cd 88000000 		.4byte	.LASF61
 5886 02d1 01       		.byte	0x1
 5887 02d2 CA       		.byte	0xca
 5888 02d3 B7000000 		.4byte	0xb7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 127


 5889 02d7 02       		.uleb128 0x2
 5890 02d8 91       		.byte	0x91
 5891 02d9 74       		.sleb128 -12
 5892 02da 00       		.byte	0
 5893 02db 00       		.byte	0
 5894 02dc 0D       		.uleb128 0xd
 5895 02dd 00040000 		.4byte	.LASF62
 5896 02e1 01       		.byte	0x1
 5897 02e2 E2       		.byte	0xe2
 5898 02e3 00000000 		.4byte	.LFB67
 5899 02e7 20000000 		.4byte	.LFE67-.LFB67
 5900 02eb 01       		.uleb128 0x1
 5901 02ec 9C       		.byte	0x9c
 5902 02ed 0E       		.uleb128 0xe
 5903 02ee 29000000 		.4byte	.LASF63
 5904 02f2 01       		.byte	0x1
 5905 02f3 E9       		.byte	0xe9
 5906 02f4 00000000 		.4byte	.LFB68
 5907 02f8 28000000 		.4byte	.LFE68-.LFB68
 5908 02fc 01       		.uleb128 0x1
 5909 02fd 9C       		.byte	0x9c
 5910 02fe 0E       		.uleb128 0xe
 5911 02ff F0060000 		.4byte	.LASF64
 5912 0303 01       		.byte	0x1
 5913 0304 F2       		.byte	0xf2
 5914 0305 00000000 		.4byte	.LFB69
 5915 0309 0A000000 		.4byte	.LFE69-.LFB69
 5916 030d 01       		.uleb128 0x1
 5917 030e 9C       		.byte	0x9c
 5918 030f 0E       		.uleb128 0xe
 5919 0310 55000000 		.4byte	.LASF65
 5920 0314 01       		.byte	0x1
 5921 0315 F7       		.byte	0xf7
 5922 0316 00000000 		.4byte	.LFB70
 5923 031a 28000000 		.4byte	.LFE70-.LFB70
 5924 031e 01       		.uleb128 0x1
 5925 031f 9C       		.byte	0x9c
 5926 0320 13       		.uleb128 0x13
 5927 0321 6F090000 		.4byte	.LASF67
 5928 0325 01       		.byte	0x1
 5929 0326 0201     		.2byte	0x102
 5930 0328 73000000 		.4byte	0x73
 5931 032c 00000000 		.4byte	.LFB71
 5932 0330 34070000 		.4byte	.LFE71-.LFB71
 5933 0334 01       		.uleb128 0x1
 5934 0335 9C       		.byte	0x9c
 5935 0336 C1030000 		.4byte	0x3c1
 5936 033a 14       		.uleb128 0x14
 5937 033b 87070000 		.4byte	.LASF68
 5938 033f 01       		.byte	0x1
 5939 0340 3F01     		.2byte	0x13f
 5940 0342 B7000000 		.4byte	0xb7
 5941 0346 02       		.uleb128 0x2
 5942 0347 91       		.byte	0x91
 5943 0348 6E       		.sleb128 -18
 5944 0349 12       		.uleb128 0x12
 5945 034a 44010000 		.4byte	.LBB4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 128


 5946 034e 70050000 		.4byte	.LBE4-.LBB4
 5947 0352 14       		.uleb128 0x14
 5948 0353 41090000 		.4byte	.LASF69
 5949 0357 01       		.byte	0x1
 5950 0358 7701     		.2byte	0x177
 5951 035a 8E000000 		.4byte	0x8e
 5952 035e 02       		.uleb128 0x2
 5953 035f 91       		.byte	0x91
 5954 0360 6B       		.sleb128 -21
 5955 0361 10       		.uleb128 0x10
 5956 0362 94010000 		.4byte	.LBB5
 5957 0366 F2020000 		.4byte	.LBE5-.LBB5
 5958 036a 8D030000 		.4byte	0x38d
 5959 036e 15       		.uleb128 0x15
 5960 036f 6D657300 		.ascii	"mes\000"
 5961 0373 01       		.byte	0x1
 5962 0374 8401     		.2byte	0x184
 5963 0376 C1030000 		.4byte	0x3c1
 5964 037a 02       		.uleb128 0x2
 5965 037b 91       		.byte	0x91
 5966 037c 48       		.sleb128 -56
 5967 037d 14       		.uleb128 0x14
 5968 037e 85080000 		.4byte	.LASF70
 5969 0382 01       		.byte	0x1
 5970 0383 8801     		.2byte	0x188
 5971 0385 AB000000 		.4byte	0xab
 5972 0389 02       		.uleb128 0x2
 5973 038a 91       		.byte	0x91
 5974 038b 6D       		.sleb128 -19
 5975 038c 00       		.byte	0
 5976 038d 12       		.uleb128 0x12
 5977 038e C6040000 		.4byte	.LBB6
 5978 0392 E2010000 		.4byte	.LBE6-.LBB6
 5979 0396 15       		.uleb128 0x15
 5980 0397 6D657300 		.ascii	"mes\000"
 5981 039b 01       		.byte	0x1
 5982 039c D401     		.2byte	0x1d4
 5983 039e C1030000 		.4byte	0x3c1
 5984 03a2 02       		.uleb128 0x2
 5985 03a3 91       		.byte	0x91
 5986 03a4 48       		.sleb128 -56
 5987 03a5 12       		.uleb128 0x12
 5988 03a6 F0040000 		.4byte	.LBB7
 5989 03aa B8010000 		.4byte	.LBE7-.LBB7
 5990 03ae 14       		.uleb128 0x14
 5991 03af 85080000 		.4byte	.LASF70
 5992 03b3 01       		.byte	0x1
 5993 03b4 E501     		.2byte	0x1e5
 5994 03b6 AB000000 		.4byte	0xab
 5995 03ba 02       		.uleb128 0x2
 5996 03bb 91       		.byte	0x91
 5997 03bc 6C       		.sleb128 -20
 5998 03bd 00       		.byte	0
 5999 03be 00       		.byte	0
 6000 03bf 00       		.byte	0
 6001 03c0 00       		.byte	0
 6002 03c1 07       		.uleb128 0x7
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 129


 6003 03c2 8E000000 		.4byte	0x8e
 6004 03c6 D1030000 		.4byte	0x3d1
 6005 03ca 08       		.uleb128 0x8
 6006 03cb 81000000 		.4byte	0x81
 6007 03cf 1F       		.byte	0x1f
 6008 03d0 00       		.byte	0
 6009 03d1 16       		.uleb128 0x16
 6010 03d2 CF060000 		.4byte	.LASF76
 6011 03d6 01       		.byte	0x1
 6012 03d7 4402     		.2byte	0x244
 6013 03d9 00000000 		.4byte	.LFB72
 6014 03dd 60010000 		.4byte	.LFE72-.LFB72
 6015 03e1 01       		.uleb128 0x1
 6016 03e2 9C       		.byte	0x9c
 6017 03e3 1F040000 		.4byte	0x41f
 6018 03e7 12       		.uleb128 0x12
 6019 03e8 10000000 		.4byte	.LBB8
 6020 03ec 34010000 		.4byte	.LBE8-.LBB8
 6021 03f0 14       		.uleb128 0x14
 6022 03f1 35070000 		.4byte	.LASF71
 6023 03f5 01       		.byte	0x1
 6024 03f6 4A02     		.2byte	0x24a
 6025 03f8 B7000000 		.4byte	0xb7
 6026 03fc 02       		.uleb128 0x2
 6027 03fd 91       		.byte	0x91
 6028 03fe 76       		.sleb128 -10
 6029 03ff 14       		.uleb128 0x14
 6030 0400 40020000 		.4byte	.LASF72
 6031 0404 01       		.byte	0x1
 6032 0405 4B02     		.2byte	0x24b
 6033 0407 1F040000 		.4byte	0x41f
 6034 040b 02       		.uleb128 0x2
 6035 040c 91       		.byte	0x91
 6036 040d 68       		.sleb128 -24
 6037 040e 14       		.uleb128 0x14
 6038 040f D6050000 		.4byte	.LASF73
 6039 0413 01       		.byte	0x1
 6040 0414 4C02     		.2byte	0x24c
 6041 0416 1F040000 		.4byte	0x41f
 6042 041a 02       		.uleb128 0x2
 6043 041b 91       		.byte	0x91
 6044 041c 5C       		.sleb128 -36
 6045 041d 00       		.byte	0
 6046 041e 00       		.byte	0
 6047 041f 07       		.uleb128 0x7
 6048 0420 8E000000 		.4byte	0x8e
 6049 0424 2F040000 		.4byte	0x42f
 6050 0428 08       		.uleb128 0x8
 6051 0429 81000000 		.4byte	0x81
 6052 042d 0B       		.byte	0xb
 6053 042e 00       		.byte	0
 6054 042f 17       		.uleb128 0x17
 6055 0430 01020000 		.4byte	.LASF74
 6056 0434 01       		.byte	0x1
 6057 0435 8502     		.2byte	0x285
 6058 0437 00000000 		.4byte	.LFB73
 6059 043b 18000000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 130


 6060 043f 01       		.uleb128 0x1
 6061 0440 9C       		.byte	0x9c
 6062 0441 55040000 		.4byte	0x455
 6063 0445 18       		.uleb128 0x18
 6064 0446 64697200 		.ascii	"dir\000"
 6065 044a 01       		.byte	0x1
 6066 044b 8502     		.2byte	0x285
 6067 044d AB000000 		.4byte	0xab
 6068 0451 02       		.uleb128 0x2
 6069 0452 91       		.byte	0x91
 6070 0453 77       		.sleb128 -9
 6071 0454 00       		.byte	0
 6072 0455 17       		.uleb128 0x17
 6073 0456 26060000 		.4byte	.LASF75
 6074 045a 01       		.byte	0x1
 6075 045b 8A02     		.2byte	0x28a
 6076 045d 00000000 		.4byte	.LFB74
 6077 0461 18000000 		.4byte	.LFE74-.LFB74
 6078 0465 01       		.uleb128 0x1
 6079 0466 9C       		.byte	0x9c
 6080 0467 7B040000 		.4byte	0x47b
 6081 046b 18       		.uleb128 0x18
 6082 046c 64697200 		.ascii	"dir\000"
 6083 0470 01       		.byte	0x1
 6084 0471 8A02     		.2byte	0x28a
 6085 0473 AB000000 		.4byte	0xab
 6086 0477 02       		.uleb128 0x2
 6087 0478 91       		.byte	0x91
 6088 0479 77       		.sleb128 -9
 6089 047a 00       		.byte	0
 6090 047b 19       		.uleb128 0x19
 6091 047c 42080000 		.4byte	.LASF77
 6092 0480 01       		.byte	0x1
 6093 0481 8F02     		.2byte	0x28f
 6094 0483 00000000 		.4byte	.LFB75
 6095 0487 54000000 		.4byte	.LFE75-.LFB75
 6096 048b 01       		.uleb128 0x1
 6097 048c 9C       		.byte	0x9c
 6098 048d A1040000 		.4byte	0x4a1
 6099 0491 15       		.uleb128 0x15
 6100 0492 6D657300 		.ascii	"mes\000"
 6101 0496 01       		.byte	0x1
 6102 0497 9402     		.2byte	0x294
 6103 0499 C1030000 		.4byte	0x3c1
 6104 049d 02       		.uleb128 0x2
 6105 049e 91       		.byte	0x91
 6106 049f 58       		.sleb128 -40
 6107 04a0 00       		.byte	0
 6108 04a1 17       		.uleb128 0x17
 6109 04a2 A6030000 		.4byte	.LASF78
 6110 04a6 01       		.byte	0x1
 6111 04a7 9902     		.2byte	0x299
 6112 04a9 00000000 		.4byte	.LFB76
 6113 04ad F4000000 		.4byte	.LFE76-.LFB76
 6114 04b1 01       		.uleb128 0x1
 6115 04b2 9C       		.byte	0x9c
 6116 04b3 F4040000 		.4byte	0x4f4
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 131


 6117 04b7 1A       		.uleb128 0x1a
 6118 04b8 74090000 		.4byte	.LASF79
 6119 04bc 01       		.byte	0x1
 6120 04bd 9902     		.2byte	0x299
 6121 04bf EE000000 		.4byte	0xee
 6122 04c3 02       		.uleb128 0x2
 6123 04c4 91       		.byte	0x91
 6124 04c5 68       		.sleb128 -24
 6125 04c6 1A       		.uleb128 0x1a
 6126 04c7 1D010000 		.4byte	.LASF80
 6127 04cb 01       		.byte	0x1
 6128 04cc 9902     		.2byte	0x299
 6129 04ce EE000000 		.4byte	0xee
 6130 04d2 02       		.uleb128 0x2
 6131 04d3 91       		.byte	0x91
 6132 04d4 60       		.sleb128 -32
 6133 04d5 14       		.uleb128 0x14
 6134 04d6 0F090000 		.4byte	.LASF81
 6135 04da 01       		.byte	0x1
 6136 04db AE02     		.2byte	0x2ae
 6137 04dd DB000000 		.4byte	0xdb
 6138 04e1 02       		.uleb128 0x2
 6139 04e2 91       		.byte	0x91
 6140 04e3 76       		.sleb128 -10
 6141 04e4 14       		.uleb128 0x14
 6142 04e5 F7070000 		.4byte	.LASF82
 6143 04e9 01       		.byte	0x1
 6144 04ea AF02     		.2byte	0x2af
 6145 04ec DB000000 		.4byte	0xdb
 6146 04f0 02       		.uleb128 0x2
 6147 04f1 91       		.byte	0x91
 6148 04f2 74       		.sleb128 -12
 6149 04f3 00       		.byte	0
 6150 04f4 1B       		.uleb128 0x1b
 6151 04f5 0C080000 		.4byte	.LASF83
 6152 04f9 01       		.byte	0x1
 6153 04fa B502     		.2byte	0x2b5
 6154 04fc 00000000 		.4byte	.LFB77
 6155 0500 18000000 		.4byte	.LFE77-.LFB77
 6156 0504 01       		.uleb128 0x1
 6157 0505 9C       		.byte	0x9c
 6158 0506 1B       		.uleb128 0x1b
 6159 0507 12070000 		.4byte	.LASF84
 6160 050b 01       		.byte	0x1
 6161 050c BB02     		.2byte	0x2bb
 6162 050e 00000000 		.4byte	.LFB78
 6163 0512 18000000 		.4byte	.LFE78-.LFB78
 6164 0516 01       		.uleb128 0x1
 6165 0517 9C       		.byte	0x9c
 6166 0518 1B       		.uleb128 0x1b
 6167 0519 93060000 		.4byte	.LASF85
 6168 051d 01       		.byte	0x1
 6169 051e C102     		.2byte	0x2c1
 6170 0520 00000000 		.4byte	.LFB79
 6171 0524 22000000 		.4byte	.LFE79-.LFB79
 6172 0528 01       		.uleb128 0x1
 6173 0529 9C       		.byte	0x9c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 132


 6174 052a 1B       		.uleb128 0x1b
 6175 052b 03060000 		.4byte	.LASF86
 6176 052f 01       		.byte	0x1
 6177 0530 C702     		.2byte	0x2c7
 6178 0532 00000000 		.4byte	.LFB80
 6179 0536 1C000000 		.4byte	.LFE80-.LFB80
 6180 053a 01       		.uleb128 0x1
 6181 053b 9C       		.byte	0x9c
 6182 053c 1B       		.uleb128 0x1b
 6183 053d CC000000 		.4byte	.LASF87
 6184 0541 01       		.byte	0x1
 6185 0542 CC02     		.2byte	0x2cc
 6186 0544 00000000 		.4byte	.LFB81
 6187 0548 34000000 		.4byte	.LFE81-.LFB81
 6188 054c 01       		.uleb128 0x1
 6189 054d 9C       		.byte	0x9c
 6190 054e 1B       		.uleb128 0x1b
 6191 054f C3010000 		.4byte	.LASF88
 6192 0553 01       		.byte	0x1
 6193 0554 D102     		.2byte	0x2d1
 6194 0556 00000000 		.4byte	.LFB82
 6195 055a 38000000 		.4byte	.LFE82-.LFB82
 6196 055e 01       		.uleb128 0x1
 6197 055f 9C       		.byte	0x9c
 6198 0560 1B       		.uleb128 0x1b
 6199 0561 EA070000 		.4byte	.LASF89
 6200 0565 01       		.byte	0x1
 6201 0566 D602     		.2byte	0x2d6
 6202 0568 00000000 		.4byte	.LFB83
 6203 056c 4C000000 		.4byte	.LFE83-.LFB83
 6204 0570 01       		.uleb128 0x1
 6205 0571 9C       		.byte	0x9c
 6206 0572 1B       		.uleb128 0x1b
 6207 0573 BA030000 		.4byte	.LASF90
 6208 0577 01       		.byte	0x1
 6209 0578 DB02     		.2byte	0x2db
 6210 057a 00000000 		.4byte	.LFB84
 6211 057e 38000000 		.4byte	.LFE84-.LFB84
 6212 0582 01       		.uleb128 0x1
 6213 0583 9C       		.byte	0x9c
 6214 0584 1B       		.uleb128 0x1b
 6215 0585 92010000 		.4byte	.LASF91
 6216 0589 01       		.byte	0x1
 6217 058a E402     		.2byte	0x2e4
 6218 058c 00000000 		.4byte	.LFB85
 6219 0590 38000000 		.4byte	.LFE85-.LFB85
 6220 0594 01       		.uleb128 0x1
 6221 0595 9C       		.byte	0x9c
 6222 0596 1B       		.uleb128 0x1b
 6223 0597 6F030000 		.4byte	.LASF92
 6224 059b 01       		.byte	0x1
 6225 059c ED02     		.2byte	0x2ed
 6226 059e 00000000 		.4byte	.LFB86
 6227 05a2 38000000 		.4byte	.LFE86-.LFB86
 6228 05a6 01       		.uleb128 0x1
 6229 05a7 9C       		.byte	0x9c
 6230 05a8 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 133


 6231 05a9 60080000 		.4byte	.LASF93
 6232 05ad 01       		.byte	0x1
 6233 05ae F602     		.2byte	0x2f6
 6234 05b0 00000000 		.4byte	.LFB87
 6235 05b4 14000000 		.4byte	.LFE87-.LFB87
 6236 05b8 01       		.uleb128 0x1
 6237 05b9 9C       		.byte	0x9c
 6238 05ba 1C       		.uleb128 0x1c
 6239 05bb 71000000 		.4byte	.LASF94
 6240 05bf 01       		.byte	0x1
 6241 05c0 FB02     		.2byte	0x2fb
 6242 05c2 00000000 		.4byte	.LFB88
 6243 05c6 18000000 		.4byte	.LFE88-.LFB88
 6244 05ca 01       		.uleb128 0x1
 6245 05cb 9C       		.byte	0x9c
 6246 05cc 1C       		.uleb128 0x1c
 6247 05cd 65030000 		.4byte	.LASF95
 6248 05d1 01       		.byte	0x1
 6249 05d2 FF02     		.2byte	0x2ff
 6250 05d4 00000000 		.4byte	.LFB89
 6251 05d8 18000000 		.4byte	.LFE89-.LFB89
 6252 05dc 01       		.uleb128 0x1
 6253 05dd 9C       		.byte	0x9c
 6254 05de 1C       		.uleb128 0x1c
 6255 05df 00000000 		.4byte	.LASF96
 6256 05e3 01       		.byte	0x1
 6257 05e4 0403     		.2byte	0x304
 6258 05e6 00000000 		.4byte	.LFB90
 6259 05ea 18000000 		.4byte	.LFE90-.LFB90
 6260 05ee 01       		.uleb128 0x1
 6261 05ef 9C       		.byte	0x9c
 6262 05f0 1C       		.uleb128 0x1c
 6263 05f1 D3080000 		.4byte	.LASF97
 6264 05f5 01       		.byte	0x1
 6265 05f6 0803     		.2byte	0x308
 6266 05f8 00000000 		.4byte	.LFB91
 6267 05fc 18000000 		.4byte	.LFE91-.LFB91
 6268 0600 01       		.uleb128 0x1
 6269 0601 9C       		.byte	0x9c
 6270 0602 17       		.uleb128 0x17
 6271 0603 E0060000 		.4byte	.LASF98
 6272 0607 01       		.byte	0x1
 6273 0608 0F03     		.2byte	0x30f
 6274 060a 00000000 		.4byte	.LFB92
 6275 060e B8000000 		.4byte	.LFE92-.LFB92
 6276 0612 01       		.uleb128 0x1
 6277 0613 9C       		.byte	0x9c
 6278 0614 28060000 		.4byte	0x628
 6279 0618 14       		.uleb128 0x14
 6280 0619 28080000 		.4byte	.LASF99
 6281 061d 01       		.byte	0x1
 6282 061e 1003     		.2byte	0x310
 6283 0620 8E000000 		.4byte	0x8e
 6284 0624 02       		.uleb128 0x2
 6285 0625 91       		.byte	0x91
 6286 0626 6F       		.sleb128 -17
 6287 0627 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 134


 6288 0628 17       		.uleb128 0x17
 6289 0629 9C050000 		.4byte	.LASF100
 6290 062d 01       		.byte	0x1
 6291 062e 2C03     		.2byte	0x32c
 6292 0630 00000000 		.4byte	.LFB93
 6293 0634 B8050000 		.4byte	.LFE93-.LFB93
 6294 0638 01       		.uleb128 0x1
 6295 0639 9C       		.byte	0x9c
 6296 063a 90060000 		.4byte	0x690
 6297 063e 14       		.uleb128 0x14
 6298 063f 28080000 		.4byte	.LASF99
 6299 0643 01       		.byte	0x1
 6300 0644 2E03     		.2byte	0x32e
 6301 0646 8E000000 		.4byte	0x8e
 6302 064a 02       		.uleb128 0x2
 6303 064b 91       		.byte	0x91
 6304 064c 77       		.sleb128 -9
 6305 064d 12       		.uleb128 0x12
 6306 064e 4C010000 		.4byte	.LBB9
 6307 0652 3E040000 		.4byte	.LBE9-.LBB9
 6308 0656 15       		.uleb128 0x15
 6309 0657 6D657300 		.ascii	"mes\000"
 6310 065b 01       		.byte	0x1
 6311 065c 5403     		.2byte	0x354
 6312 065e C1030000 		.4byte	0x3c1
 6313 0662 02       		.uleb128 0x2
 6314 0663 91       		.byte	0x91
 6315 0664 48       		.sleb128 -56
 6316 0665 15       		.uleb128 0x15
 6317 0666 6900     		.ascii	"i\000"
 6318 0668 01       		.byte	0x1
 6319 0669 8103     		.2byte	0x381
 6320 066b 73000000 		.4byte	0x73
 6321 066f 02       		.uleb128 0x2
 6322 0670 91       		.byte	0x91
 6323 0671 70       		.sleb128 -16
 6324 0672 14       		.uleb128 0x14
 6325 0673 41090000 		.4byte	.LASF69
 6326 0677 01       		.byte	0x1
 6327 0678 9303     		.2byte	0x393
 6328 067a 8E000000 		.4byte	0x8e
 6329 067e 02       		.uleb128 0x2
 6330 067f 91       		.byte	0x91
 6331 0680 6B       		.sleb128 -21
 6332 0681 15       		.uleb128 0x15
 6333 0682 7800     		.ascii	"x\000"
 6334 0684 01       		.byte	0x1
 6335 0685 BB03     		.2byte	0x3bb
 6336 0687 73000000 		.4byte	0x73
 6337 068b 02       		.uleb128 0x2
 6338 068c 91       		.byte	0x91
 6339 068d 6C       		.sleb128 -20
 6340 068e 00       		.byte	0
 6341 068f 00       		.byte	0
 6342 0690 1B       		.uleb128 0x1b
 6343 0691 14000000 		.4byte	.LASF101
 6344 0695 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 135


 6345 0696 E403     		.2byte	0x3e4
 6346 0698 00000000 		.4byte	.LFB94
 6347 069c 40000000 		.4byte	.LFE94-.LFB94
 6348 06a0 01       		.uleb128 0x1
 6349 06a1 9C       		.byte	0x9c
 6350 06a2 1B       		.uleb128 0x1b
 6351 06a3 C7030000 		.4byte	.LASF102
 6352 06a7 01       		.byte	0x1
 6353 06a8 F303     		.2byte	0x3f3
 6354 06aa 00000000 		.4byte	.LFB95
 6355 06ae 40000000 		.4byte	.LFE95-.LFB95
 6356 06b2 01       		.uleb128 0x1
 6357 06b3 9C       		.byte	0x9c
 6358 06b4 19       		.uleb128 0x19
 6359 06b5 C5040000 		.4byte	.LASF103
 6360 06b9 01       		.byte	0x1
 6361 06ba 0304     		.2byte	0x403
 6362 06bc 00000000 		.4byte	.LFB96
 6363 06c0 30020000 		.4byte	.LFE96-.LFB96
 6364 06c4 01       		.uleb128 0x1
 6365 06c5 9C       		.byte	0x9c
 6366 06c6 25070000 		.4byte	0x725
 6367 06ca 14       		.uleb128 0x14
 6368 06cb 96070000 		.4byte	.LASF104
 6369 06cf 01       		.byte	0x1
 6370 06d0 1104     		.2byte	0x411
 6371 06d2 DB000000 		.4byte	0xdb
 6372 06d6 02       		.uleb128 0x2
 6373 06d7 91       		.byte	0x91
 6374 06d8 5E       		.sleb128 -34
 6375 06d9 14       		.uleb128 0x14
 6376 06da 48010000 		.4byte	.LASF105
 6377 06de 01       		.byte	0x1
 6378 06df 1204     		.2byte	0x412
 6379 06e1 DB000000 		.4byte	0xdb
 6380 06e5 02       		.uleb128 0x2
 6381 06e6 91       		.byte	0x91
 6382 06e7 5C       		.sleb128 -36
 6383 06e8 14       		.uleb128 0x14
 6384 06e9 C3060000 		.4byte	.LASF106
 6385 06ed 01       		.byte	0x1
 6386 06ee 1304     		.2byte	0x413
 6387 06f0 EE000000 		.4byte	0xee
 6388 06f4 02       		.uleb128 0x2
 6389 06f5 91       		.byte	0x91
 6390 06f6 68       		.sleb128 -24
 6391 06f7 14       		.uleb128 0x14
 6392 06f8 E2080000 		.4byte	.LASF107
 6393 06fc 01       		.byte	0x1
 6394 06fd 1404     		.2byte	0x414
 6395 06ff EE000000 		.4byte	0xee
 6396 0703 02       		.uleb128 0x2
 6397 0704 91       		.byte	0x91
 6398 0705 60       		.sleb128 -32
 6399 0706 14       		.uleb128 0x14
 6400 0707 66040000 		.4byte	.LASF108
 6401 070b 01       		.byte	0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 136


 6402 070c 1D04     		.2byte	0x41d
 6403 070e 73000000 		.4byte	0x73
 6404 0712 02       		.uleb128 0x2
 6405 0713 91       		.byte	0x91
 6406 0714 58       		.sleb128 -40
 6407 0715 14       		.uleb128 0x14
 6408 0716 A6060000 		.4byte	.LASF109
 6409 071a 01       		.byte	0x1
 6410 071b 1E04     		.2byte	0x41e
 6411 071d 73000000 		.4byte	0x73
 6412 0721 02       		.uleb128 0x2
 6413 0722 91       		.byte	0x91
 6414 0723 54       		.sleb128 -44
 6415 0724 00       		.byte	0
 6416 0725 1C       		.uleb128 0x1c
 6417 0726 FD060000 		.4byte	.LASF110
 6418 072a 01       		.byte	0x1
 6419 072b 2C04     		.2byte	0x42c
 6420 072d 00000000 		.4byte	.LFB97
 6421 0731 0C000000 		.4byte	.LFE97-.LFB97
 6422 0735 01       		.uleb128 0x1
 6423 0736 9C       		.byte	0x9c
 6424 0737 19       		.uleb128 0x19
 6425 0738 B8010000 		.4byte	.LASF111
 6426 073c 01       		.byte	0x1
 6427 073d 3204     		.2byte	0x432
 6428 073f 00000000 		.4byte	.LFB98
 6429 0743 4C010000 		.4byte	.LFE98-.LFB98
 6430 0747 01       		.uleb128 0x1
 6431 0748 9C       		.byte	0x9c
 6432 0749 79070000 		.4byte	0x779
 6433 074d 15       		.uleb128 0x15
 6434 074e 6E6C00   		.ascii	"nl\000"
 6435 0751 01       		.byte	0x1
 6436 0752 3604     		.2byte	0x436
 6437 0754 AB000000 		.4byte	0xab
 6438 0758 02       		.uleb128 0x2
 6439 0759 91       		.byte	0x91
 6440 075a 67       		.sleb128 -25
 6441 075b 15       		.uleb128 0x15
 6442 075c 6E7200   		.ascii	"nr\000"
 6443 075f 01       		.byte	0x1
 6444 0760 3704     		.2byte	0x437
 6445 0762 AB000000 		.4byte	0xab
 6446 0766 02       		.uleb128 0x2
 6447 0767 91       		.byte	0x91
 6448 0768 66       		.sleb128 -26
 6449 0769 15       		.uleb128 0x15
 6450 076a 6D696400 		.ascii	"mid\000"
 6451 076e 01       		.byte	0x1
 6452 076f 3804     		.2byte	0x438
 6453 0771 AB000000 		.4byte	0xab
 6454 0775 02       		.uleb128 0x2
 6455 0776 91       		.byte	0x91
 6456 0777 65       		.sleb128 -27
 6457 0778 00       		.byte	0
 6458 0779 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 137


 6459 077a 6E010000 		.4byte	.LASF112
 6460 077e 01       		.byte	0x1
 6461 077f 5204     		.2byte	0x452
 6462 0781 00000000 		.4byte	.LFB99
 6463 0785 0C000000 		.4byte	.LFE99-.LFB99
 6464 0789 01       		.uleb128 0x1
 6465 078a 9C       		.byte	0x9c
 6466 078b 19       		.uleb128 0x19
 6467 078c C1090000 		.4byte	.LASF113
 6468 0790 01       		.byte	0x1
 6469 0791 5704     		.2byte	0x457
 6470 0793 00000000 		.4byte	.LFB100
 6471 0797 C0000000 		.4byte	.LFE100-.LFB100
 6472 079b 01       		.uleb128 0x1
 6473 079c 9C       		.byte	0x9c
 6474 079d D9070000 		.4byte	0x7d9
 6475 07a1 12       		.uleb128 0x12
 6476 07a2 0E000000 		.4byte	.LBB10
 6477 07a6 8E000000 		.4byte	.LBE10-.LBB10
 6478 07aa 14       		.uleb128 0x14
 6479 07ab 79030000 		.4byte	.LASF114
 6480 07af 01       		.byte	0x1
 6481 07b0 6004     		.2byte	0x460
 6482 07b2 E7000000 		.4byte	0xe7
 6483 07b6 02       		.uleb128 0x2
 6484 07b7 91       		.byte	0x91
 6485 07b8 74       		.sleb128 -12
 6486 07b9 14       		.uleb128 0x14
 6487 07ba F3010000 		.4byte	.LASF115
 6488 07be 01       		.byte	0x1
 6489 07bf 6104     		.2byte	0x461
 6490 07c1 DB000000 		.4byte	0xdb
 6491 07c5 02       		.uleb128 0x2
 6492 07c6 91       		.byte	0x91
 6493 07c7 72       		.sleb128 -14
 6494 07c8 14       		.uleb128 0x14
 6495 07c9 EF040000 		.4byte	.LASF116
 6496 07cd 01       		.byte	0x1
 6497 07ce 6604     		.2byte	0x466
 6498 07d0 D9070000 		.4byte	0x7d9
 6499 07d4 02       		.uleb128 0x2
 6500 07d5 91       		.byte	0x91
 6501 07d6 60       		.sleb128 -32
 6502 07d7 00       		.byte	0
 6503 07d8 00       		.byte	0
 6504 07d9 07       		.uleb128 0x7
 6505 07da 8E000000 		.4byte	0x8e
 6506 07de E9070000 		.4byte	0x7e9
 6507 07e2 08       		.uleb128 0x8
 6508 07e3 81000000 		.4byte	0x81
 6509 07e7 0F       		.byte	0xf
 6510 07e8 00       		.byte	0
 6511 07e9 19       		.uleb128 0x19
 6512 07ea 03080000 		.4byte	.LASF117
 6513 07ee 01       		.byte	0x1
 6514 07ef 6D04     		.2byte	0x46d
 6515 07f1 00000000 		.4byte	.LFB101
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 138


 6516 07f5 B8000000 		.4byte	.LFE101-.LFB101
 6517 07f9 01       		.uleb128 0x1
 6518 07fa 9C       		.byte	0x9c
 6519 07fb 19080000 		.4byte	0x819
 6520 07ff 12       		.uleb128 0x12
 6521 0800 0E000000 		.4byte	.LBB11
 6522 0804 86000000 		.4byte	.LBE11-.LBB11
 6523 0808 14       		.uleb128 0x14
 6524 0809 11060000 		.4byte	.LASF118
 6525 080d 01       		.byte	0x1
 6526 080e 7104     		.2byte	0x471
 6527 0810 D9070000 		.4byte	0x7d9
 6528 0814 02       		.uleb128 0x2
 6529 0815 91       		.byte	0x91
 6530 0816 68       		.sleb128 -24
 6531 0817 00       		.byte	0
 6532 0818 00       		.byte	0
 6533 0819 17       		.uleb128 0x17
 6534 081a CB090000 		.4byte	.LASF119
 6535 081e 01       		.byte	0x1
 6536 081f 8204     		.2byte	0x482
 6537 0821 00000000 		.4byte	.LFB102
 6538 0825 4A000000 		.4byte	.LFE102-.LFB102
 6539 0829 01       		.uleb128 0x1
 6540 082a 9C       		.byte	0x9c
 6541 082b 3F080000 		.4byte	0x83f
 6542 082f 1A       		.uleb128 0x1a
 6543 0830 23010000 		.4byte	.LASF120
 6544 0834 01       		.byte	0x1
 6545 0835 8204     		.2byte	0x482
 6546 0837 3F080000 		.4byte	0x83f
 6547 083b 02       		.uleb128 0x2
 6548 083c 91       		.byte	0x91
 6549 083d 6C       		.sleb128 -20
 6550 083e 00       		.byte	0
 6551 083f 05       		.uleb128 0x5
 6552 0840 04       		.byte	0x4
 6553 0841 AB000000 		.4byte	0xab
 6554 0845 17       		.uleb128 0x17
 6555 0846 F3030000 		.4byte	.LASF121
 6556 084a 01       		.byte	0x1
 6557 084b 8D04     		.2byte	0x48d
 6558 084d 00000000 		.4byte	.LFB103
 6559 0851 68000000 		.4byte	.LFE103-.LFB103
 6560 0855 01       		.uleb128 0x1
 6561 0856 9C       		.byte	0x9c
 6562 0857 82080000 		.4byte	0x882
 6563 085b 18       		.uleb128 0x18
 6564 085c 7300     		.ascii	"s\000"
 6565 085e 01       		.byte	0x1
 6566 085f 8D04     		.2byte	0x48d
 6567 0861 88000000 		.4byte	0x88
 6568 0865 02       		.uleb128 0x2
 6569 0866 91       		.byte	0x91
 6570 0867 6C       		.sleb128 -20
 6571 0868 12       		.uleb128 0x12
 6572 0869 10000000 		.4byte	.LBB12
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 139


 6573 086d 48000000 		.4byte	.LBE12-.LBB12
 6574 0871 15       		.uleb128 0x15
 6575 0872 636E7400 		.ascii	"cnt\000"
 6576 0876 01       		.byte	0x1
 6577 0877 9404     		.2byte	0x494
 6578 0879 C3000000 		.4byte	0xc3
 6579 087d 02       		.uleb128 0x2
 6580 087e 91       		.byte	0x91
 6581 087f 74       		.sleb128 -12
 6582 0880 00       		.byte	0
 6583 0881 00       		.byte	0
 6584 0882 17       		.uleb128 0x17
 6585 0883 C8080000 		.4byte	.LASF122
 6586 0887 01       		.byte	0x1
 6587 0888 A304     		.2byte	0x4a3
 6588 088a 00000000 		.4byte	.LFB104
 6589 088e 50000000 		.4byte	.LFE104-.LFB104
 6590 0892 01       		.uleb128 0x1
 6591 0893 9C       		.byte	0x9c
 6592 0894 BF080000 		.4byte	0x8bf
 6593 0898 18       		.uleb128 0x18
 6594 0899 6300     		.ascii	"c\000"
 6595 089b 01       		.byte	0x1
 6596 089c A304     		.2byte	0x4a3
 6597 089e 8E000000 		.4byte	0x8e
 6598 08a2 02       		.uleb128 0x2
 6599 08a3 91       		.byte	0x91
 6600 08a4 6F       		.sleb128 -17
 6601 08a5 12       		.uleb128 0x12
 6602 08a6 12000000 		.4byte	.LBB13
 6603 08aa 2E000000 		.4byte	.LBE13-.LBB13
 6604 08ae 15       		.uleb128 0x15
 6605 08af 636E7400 		.ascii	"cnt\000"
 6606 08b3 01       		.byte	0x1
 6607 08b4 A704     		.2byte	0x4a7
 6608 08b6 C3000000 		.4byte	0xc3
 6609 08ba 02       		.uleb128 0x2
 6610 08bb 91       		.byte	0x91
 6611 08bc 74       		.sleb128 -12
 6612 08bd 00       		.byte	0
 6613 08be 00       		.byte	0
 6614 08bf 1C       		.uleb128 0x1c
 6615 08c0 3B040000 		.4byte	.LASF123
 6616 08c4 01       		.byte	0x1
 6617 08c5 B404     		.2byte	0x4b4
 6618 08c7 00000000 		.4byte	.LFB105
 6619 08cb 0C000000 		.4byte	.LFE105-.LFB105
 6620 08cf 01       		.uleb128 0x1
 6621 08d0 9C       		.byte	0x9c
 6622 08d1 1D       		.uleb128 0x1d
 6623 08d2 DE000000 		.4byte	.LASF124
 6624 08d6 06       		.byte	0x6
 6625 08d7 9606     		.2byte	0x696
 6626 08d9 DD080000 		.4byte	0x8dd
 6627 08dd 1E       		.uleb128 0x1e
 6628 08de 95000000 		.4byte	0x95
 6629 08e2 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 140


 6630 08e3 747300   		.ascii	"ts\000"
 6631 08e6 05       		.byte	0x5
 6632 08e7 10       		.byte	0x10
 6633 08e8 AB000000 		.4byte	0xab
 6634 08ec 05       		.uleb128 0x5
 6635 08ed 03       		.byte	0x3
 6636 08ee 00000000 		.4byte	ts
 6637 08f2 20       		.uleb128 0x20
 6638 08f3 2A020000 		.4byte	.LASF125
 6639 08f7 05       		.byte	0x5
 6640 08f8 11       		.byte	0x11
 6641 08f9 B7000000 		.4byte	0xb7
 6642 08fd 05       		.uleb128 0x5
 6643 08fe 03       		.byte	0x3
 6644 08ff 00000000 		.4byte	ts_enc
 6645 0903 20       		.uleb128 0x20
 6646 0904 FE000000 		.4byte	.LASF126
 6647 0908 05       		.byte	0x5
 6648 0909 12       		.byte	0x12
 6649 090a B7000000 		.4byte	0xb7
 6650 090e 05       		.uleb128 0x5
 6651 090f 03       		.byte	0x3
 6652 0910 00000000 		.4byte	ts_update
 6653 0914 20       		.uleb128 0x20
 6654 0915 30000000 		.4byte	.LASF127
 6655 0919 05       		.byte	0x5
 6656 091a 13       		.byte	0x13
 6657 091b B7000000 		.4byte	0xb7
 6658 091f 05       		.uleb128 0x5
 6659 0920 03       		.byte	0x3
 6660 0921 00000000 		.4byte	ts_speed
 6661 0925 20       		.uleb128 0x20
 6662 0926 30040000 		.4byte	.LASF128
 6663 092a 05       		.byte	0x5
 6664 092b 14       		.byte	0x14
 6665 092c B7000000 		.4byte	0xb7
 6666 0930 05       		.uleb128 0x5
 6667 0931 03       		.byte	0x3
 6668 0932 00000000 		.4byte	ts_display
 6669 0936 20       		.uleb128 0x20
 6670 0937 79010000 		.4byte	.LASF129
 6671 093b 05       		.byte	0x5
 6672 093c 16       		.byte	0x16
 6673 093d AB000000 		.4byte	0xab
 6674 0941 05       		.uleb128 0x5
 6675 0942 03       		.byte	0x3
 6676 0943 00000000 		.4byte	flag_ts_enc
 6677 0947 20       		.uleb128 0x20
 6678 0948 AB070000 		.4byte	.LASF130
 6679 094c 05       		.byte	0x5
 6680 094d 17       		.byte	0x17
 6681 094e AB000000 		.4byte	0xab
 6682 0952 05       		.uleb128 0x5
 6683 0953 03       		.byte	0x3
 6684 0954 00000000 		.4byte	flag_ts_update
 6685 0958 20       		.uleb128 0x20
 6686 0959 70040000 		.4byte	.LASF131
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 141


 6687 095d 05       		.byte	0x5
 6688 095e 18       		.byte	0x18
 6689 095f AB000000 		.4byte	0xab
 6690 0963 05       		.uleb128 0x5
 6691 0964 03       		.byte	0x3
 6692 0965 00000000 		.4byte	flag_ts_speed
 6693 0969 20       		.uleb128 0x20
 6694 096a 1D070000 		.4byte	.LASF132
 6695 096e 05       		.byte	0x5
 6696 096f 19       		.byte	0x19
 6697 0970 AB000000 		.4byte	0xab
 6698 0974 05       		.uleb128 0x5
 6699 0975 03       		.byte	0x3
 6700 0976 00000000 		.4byte	flag_ts_display
 6701 097a 20       		.uleb128 0x20
 6702 097b 31020000 		.4byte	.LASF133
 6703 097f 05       		.byte	0x5
 6704 0980 1C       		.byte	0x1c
 6705 0981 AB000000 		.4byte	0xab
 6706 0985 05       		.uleb128 0x5
 6707 0986 03       		.byte	0x3
 6708 0987 00000000 		.4byte	flag_rx
 6709 098b 20       		.uleb128 0x20
 6710 098c C0000000 		.4byte	.LASF134
 6711 0990 05       		.byte	0x5
 6712 0991 1D       		.byte	0x1d
 6713 0992 AB000000 		.4byte	0xab
 6714 0996 05       		.uleb128 0x5
 6715 0997 03       		.byte	0x3
 6716 0998 00000000 		.4byte	flag_packet
 6717 099c 20       		.uleb128 0x20
 6718 099d A9010000 		.4byte	.LASF135
 6719 09a1 05       		.byte	0x5
 6720 09a2 1E       		.byte	0x1e
 6721 09a3 AB000000 		.4byte	0xab
 6722 09a7 05       		.uleb128 0x5
 6723 09a8 03       		.byte	0x3
 6724 09a9 00000000 		.4byte	flag_KB_string
 6725 09ad 20       		.uleb128 0x20
 6726 09ae 13020000 		.4byte	.LASF136
 6727 09b2 05       		.byte	0x5
 6728 09b3 20       		.byte	0x20
 6729 09b4 AB000000 		.4byte	0xab
 6730 09b8 05       		.uleb128 0x5
 6731 09b9 03       		.byte	0x3
 6732 09ba 00000000 		.4byte	dataready_flag
 6733 09be 20       		.uleb128 0x20
 6734 09bf BA050000 		.4byte	.LASF137
 6735 09c3 05       		.byte	0x5
 6736 09c4 22       		.byte	0x22
 6737 09c5 AB000000 		.4byte	0xab
 6738 09c9 05       		.uleb128 0x5
 6739 09ca 03       		.byte	0x3
 6740 09cb 00000000 		.4byte	flag_rf_transmission_active
 6741 09cf 20       		.uleb128 0x20
 6742 09d0 95040000 		.4byte	.LASF138
 6743 09d4 05       		.byte	0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 142


 6744 09d5 23       		.byte	0x23
 6745 09d6 AB000000 		.4byte	0xab
 6746 09da 05       		.uleb128 0x5
 6747 09db 03       		.byte	0x3
 6748 09dc 00000000 		.4byte	flag_print_rf
 6749 09e0 20       		.uleb128 0x20
 6750 09e1 42030000 		.4byte	.LASF139
 6751 09e5 05       		.byte	0x5
 6752 09e6 25       		.byte	0x25
 6753 09e7 AB000000 		.4byte	0xab
 6754 09eb 05       		.uleb128 0x5
 6755 09ec 03       		.byte	0x3
 6756 09ed 00000000 		.4byte	flag_receive_ADC
 6757 09f1 20       		.uleb128 0x20
 6758 09f2 07070000 		.4byte	.LASF140
 6759 09f6 05       		.byte	0x5
 6760 09f7 26       		.byte	0x26
 6761 09f8 DB000000 		.4byte	0xdb
 6762 09fc 05       		.uleb128 0x5
 6763 09fd 03       		.byte	0x3
 6764 09fe 00000000 		.4byte	adc_result
 6765 0a02 20       		.uleb128 0x20
 6766 0a03 62000000 		.4byte	.LASF141
 6767 0a07 05       		.byte	0x5
 6768 0a08 28       		.byte	0x28
 6769 0a09 AB000000 		.4byte	0xab
 6770 0a0d 05       		.uleb128 0x5
 6771 0a0e 03       		.byte	0x3
 6772 0a0f 00000000 		.4byte	direction
 6773 0a13 20       		.uleb128 0x20
 6774 0a14 62060000 		.4byte	.LASF142
 6775 0a18 05       		.byte	0x5
 6776 0a19 2B       		.byte	0x2b
 6777 0a1a AB000000 		.4byte	0xab
 6778 0a1e 05       		.uleb128 0x5
 6779 0a1f 03       		.byte	0x3
 6780 0a20 00000000 		.4byte	BIN_ENABLED
 6781 0a24 20       		.uleb128 0x20
 6782 0a25 BD080000 		.4byte	.LASF143
 6783 0a29 05       		.byte	0x5
 6784 0a2a 2D       		.byte	0x2d
 6785 0a2b AB000000 		.4byte	0xab
 6786 0a2f 05       		.uleb128 0x5
 6787 0a30 03       		.byte	0x3
 6788 0a31 00000000 		.4byte	BT_ENABLED
 6789 0a35 20       		.uleb128 0x20
 6790 0a36 51020000 		.4byte	.LASF144
 6791 0a3a 05       		.byte	0x5
 6792 0a3b 32       		.byte	0x32
 6793 0a3c AB000000 		.4byte	0xab
 6794 0a40 05       		.uleb128 0x5
 6795 0a41 03       		.byte	0x3
 6796 0a42 00000000 		.4byte	flag_calc_wheelspeed
 6797 0a46 20       		.uleb128 0x20
 6798 0a47 7F020000 		.4byte	.LASF145
 6799 0a4b 05       		.byte	0x5
 6800 0a4c 33       		.byte	0x33
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 143


 6801 0a4d DB000000 		.4byte	0xdb
 6802 0a51 05       		.uleb128 0x5
 6803 0a52 03       		.byte	0x3
 6804 0a53 00000000 		.4byte	quad_count1
 6805 0a57 20       		.uleb128 0x20
 6806 0a58 8B020000 		.4byte	.LASF146
 6807 0a5c 05       		.byte	0x5
 6808 0a5d 34       		.byte	0x34
 6809 0a5e DB000000 		.4byte	0xdb
 6810 0a62 05       		.uleb128 0x5
 6811 0a63 03       		.byte	0x3
 6812 0a64 00000000 		.4byte	quad_count2
 6813 0a68 20       		.uleb128 0x20
 6814 0a69 32060000 		.4byte	.LASF147
 6815 0a6d 05       		.byte	0x5
 6816 0a6e 35       		.byte	0x35
 6817 0a6f DB000000 		.4byte	0xdb
 6818 0a73 05       		.uleb128 0x5
 6819 0a74 03       		.byte	0x3
 6820 0a75 00000000 		.4byte	last_quad_count1
 6821 0a79 20       		.uleb128 0x20
 6822 0a7a 43060000 		.4byte	.LASF148
 6823 0a7e 05       		.byte	0x5
 6824 0a7f 36       		.byte	0x36
 6825 0a80 DB000000 		.4byte	0xdb
 6826 0a84 05       		.uleb128 0x5
 6827 0a85 03       		.byte	0x3
 6828 0a86 00000000 		.4byte	last_quad_count2
 6829 0a8a 20       		.uleb128 0x20
 6830 0a8b 53090000 		.4byte	.LASF149
 6831 0a8f 05       		.byte	0x5
 6832 0a90 37       		.byte	0x37
 6833 0a91 DB000000 		.4byte	0xdb
 6834 0a95 05       		.uleb128 0x5
 6835 0a96 03       		.byte	0x3
 6836 0a97 00000000 		.4byte	quad_diff1
 6837 0a9b 20       		.uleb128 0x20
 6838 0a9c 5E090000 		.4byte	.LASF150
 6839 0aa0 05       		.byte	0x5
 6840 0aa1 38       		.byte	0x38
 6841 0aa2 DB000000 		.4byte	0xdb
 6842 0aa6 05       		.uleb128 0x5
 6843 0aa7 03       		.byte	0x3
 6844 0aa8 00000000 		.4byte	quad_diff2
 6845 0aac 20       		.uleb128 0x20
 6846 0aad A0010000 		.4byte	.LASF151
 6847 0ab1 05       		.byte	0x5
 6848 0ab2 39       		.byte	0x39
 6849 0ab3 AB000000 		.4byte	0xab
 6850 0ab7 05       		.uleb128 0x5
 6851 0ab8 03       		.byte	0x3
 6852 0ab9 00000000 		.4byte	deadzone
 6853 0abd 20       		.uleb128 0x20
 6854 0abe 1A090000 		.4byte	.LASF152
 6855 0ac2 05       		.byte	0x5
 6856 0ac3 3C       		.byte	0x3c
 6857 0ac4 DB000000 		.4byte	0xdb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 144


 6858 0ac8 05       		.uleb128 0x5
 6859 0ac9 03       		.byte	0x3
 6860 0aca 00000000 		.4byte	start_turn_count
 6861 0ace 20       		.uleb128 0x20
 6862 0acf 75080000 		.4byte	.LASF153
 6863 0ad3 05       		.byte	0x5
 6864 0ad4 3F       		.byte	0x3f
 6865 0ad5 DB000000 		.4byte	0xdb
 6866 0ad9 05       		.uleb128 0x5
 6867 0ada 03       		.byte	0x3
 6868 0adb 00000000 		.4byte	left_duty_cycle
 6869 0adf 20       		.uleb128 0x20
 6870 0ae0 09030000 		.4byte	.LASF154
 6871 0ae4 05       		.byte	0x5
 6872 0ae5 40       		.byte	0x40
 6873 0ae6 DB000000 		.4byte	0xdb
 6874 0aea 05       		.uleb128 0x5
 6875 0aeb 03       		.byte	0x3
 6876 0aec 00000000 		.4byte	right_duty_cycle
 6877 0af0 20       		.uleb128 0x20
 6878 0af1 D0070000 		.4byte	.LASF155
 6879 0af5 05       		.byte	0x5
 6880 0af6 43       		.byte	0x43
 6881 0af7 DB000000 		.4byte	0xdb
 6882 0afb 05       		.uleb128 0x5
 6883 0afc 03       		.byte	0x3
 6884 0afd 00000000 		.4byte	leftSpeedLimit
 6885 0b01 20       		.uleb128 0x20
 6886 0b02 97020000 		.4byte	.LASF156
 6887 0b06 05       		.byte	0x5
 6888 0b07 44       		.byte	0x44
 6889 0b08 DB000000 		.4byte	0xdb
 6890 0b0c 05       		.uleb128 0x5
 6891 0b0d 03       		.byte	0x3
 6892 0b0e 00000000 		.4byte	rightSpeedLimit
 6893 0b12 20       		.uleb128 0x20
 6894 0b13 EB000000 		.4byte	.LASF157
 6895 0b17 05       		.byte	0x5
 6896 0b18 47       		.byte	0x47
 6897 0b19 DB000000 		.4byte	0xdb
 6898 0b1d 05       		.uleb128 0x5
 6899 0b1e 03       		.byte	0x3
 6900 0b1f 00000000 		.4byte	target_distance_cm
 6901 0b23 20       		.uleb128 0x20
 6902 0b24 92080000 		.4byte	.LASF158
 6903 0b28 05       		.byte	0x5
 6904 0b29 49       		.byte	0x49
 6905 0b2a DB000000 		.4byte	0xdb
 6906 0b2e 05       		.uleb128 0x5
 6907 0b2f 03       		.byte	0x3
 6908 0b30 00000000 		.4byte	accum_dist
 6909 0b34 20       		.uleb128 0x20
 6910 0b35 A5050000 		.4byte	.LASF159
 6911 0b39 05       		.byte	0x5
 6912 0b3a 4A       		.byte	0x4a
 6913 0b3b DB000000 		.4byte	0xdb
 6914 0b3f 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 145


 6915 0b40 03       		.byte	0x3
 6916 0b41 00000000 		.4byte	target_distance_quad
 6917 0b45 20       		.uleb128 0x20
 6918 0b46 EF080000 		.4byte	.LASF160
 6919 0b4a 05       		.byte	0x5
 6920 0b4b 4B       		.byte	0x4b
 6921 0b4c AB000000 		.4byte	0xab
 6922 0b50 05       		.uleb128 0x5
 6923 0b51 03       		.byte	0x3
 6924 0b52 00000000 		.4byte	reached_target
 6925 0b56 20       		.uleb128 0x20
 6926 0b57 31090000 		.4byte	.LASF161
 6927 0b5b 05       		.byte	0x5
 6928 0b5c 4C       		.byte	0x4c
 6929 0b5d AB000000 		.4byte	0xab
 6930 0b61 05       		.uleb128 0x5
 6931 0b62 03       		.byte	0x3
 6932 0b63 00000000 		.4byte	overshot_target
 6933 0b67 20       		.uleb128 0x20
 6934 0b68 E1010000 		.4byte	.LASF162
 6935 0b6c 05       		.byte	0x5
 6936 0b6d 4D       		.byte	0x4d
 6937 0b6e E7000000 		.4byte	0xe7
 6938 0b72 05       		.uleb128 0x5
 6939 0b73 03       		.byte	0x3
 6940 0b74 00000000 		.4byte	quad_per_cm
 6941 0b78 20       		.uleb128 0x20
 6942 0b79 30080000 		.4byte	.LASF163
 6943 0b7d 05       		.byte	0x5
 6944 0b7e 50       		.byte	0x50
 6945 0b7f AB000000 		.4byte	0xab
 6946 0b83 05       		.uleb128 0x5
 6947 0b84 03       		.byte	0x3
 6948 0b85 00000000 		.4byte	initial_pos_valid
 6949 0b89 20       		.uleb128 0x20
 6950 0b8a F5050000 		.4byte	.LASF164
 6951 0b8e 05       		.byte	0x5
 6952 0b8f 51       		.byte	0x51
 6953 0b90 DB000000 		.4byte	0xdb
 6954 0b94 05       		.uleb128 0x5
 6955 0b95 03       		.byte	0x3
 6956 0b96 00000000 		.4byte	initial_x_pos
 6957 0b9a 20       		.uleb128 0x20
 6958 0b9b 47000000 		.4byte	.LASF165
 6959 0b9f 05       		.byte	0x5
 6960 0ba0 52       		.byte	0x52
 6961 0ba1 DB000000 		.4byte	0xdb
 6962 0ba5 05       		.uleb128 0x5
 6963 0ba6 03       		.byte	0x3
 6964 0ba7 00000000 		.4byte	initial_y_pos
 6965 0bab 20       		.uleb128 0x20
 6966 0bac DD040000 		.4byte	.LASF166
 6967 0bb0 05       		.byte	0x5
 6968 0bb1 55       		.byte	0x55
 6969 0bb2 AB000000 		.4byte	0xab
 6970 0bb6 05       		.uleb128 0x5
 6971 0bb7 03       		.byte	0x3
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 146


 6972 0bb8 00000000 		.4byte	brakeFlag
 6973 0bbc 20       		.uleb128 0x20
 6974 0bbd 1D060000 		.4byte	.LASF167
 6975 0bc1 05       		.byte	0x5
 6976 0bc2 56       		.byte	0x56
 6977 0bc3 AB000000 		.4byte	0xab
 6978 0bc7 05       		.uleb128 0x5
 6979 0bc8 03       		.byte	0x3
 6980 0bc9 00000000 		.4byte	portOpen
 6981 0bcd 07       		.uleb128 0x7
 6982 0bce AB000000 		.4byte	0xab
 6983 0bd2 DD0B0000 		.4byte	0xbdd
 6984 0bd6 08       		.uleb128 0x8
 6985 0bd7 81000000 		.4byte	0x81
 6986 0bdb 04       		.byte	0x4
 6987 0bdc 00       		.byte	0
 6988 0bdd 20       		.uleb128 0x20
 6989 0bde 61010000 		.4byte	.LASF168
 6990 0be2 05       		.byte	0x5
 6991 0be3 59       		.byte	0x59
 6992 0be4 CD0B0000 		.4byte	0xbcd
 6993 0be8 05       		.uleb128 0x5
 6994 0be9 03       		.byte	0x3
 6995 0bea 00000000 		.4byte	frontSensors
 6996 0bee 20       		.uleb128 0x20
 6997 0bef EC030000 		.4byte	.LASF169
 6998 0bf3 05       		.byte	0x5
 6999 0bf4 5A       		.byte	0x5a
 7000 0bf5 AB000000 		.4byte	0xab
 7001 0bf9 05       		.uleb128 0x5
 7002 0bfa 03       		.byte	0x3
 7003 0bfb 00000000 		.4byte	leftOn
 7004 0bff 20       		.uleb128 0x20
 7005 0c00 B5080000 		.4byte	.LASF170
 7006 0c04 05       		.byte	0x5
 7007 0c05 5B       		.byte	0x5b
 7008 0c06 AB000000 		.4byte	0xab
 7009 0c0a 05       		.uleb128 0x5
 7010 0c0b 03       		.byte	0x3
 7011 0c0c 00000000 		.4byte	rightOn
 7012 0c10 20       		.uleb128 0x20
 7013 0c11 53010000 		.4byte	.LASF171
 7014 0c15 05       		.byte	0x5
 7015 0c16 5C       		.byte	0x5c
 7016 0c17 B7000000 		.4byte	0xb7
 7017 0c1b 05       		.uleb128 0x5
 7018 0c1c 03       		.byte	0x3
 7019 0c1d 00000000 		.4byte	min_turn_quad
 7020 0c21 20       		.uleb128 0x20
 7021 0c22 24030000 		.4byte	.LASF172
 7022 0c26 05       		.byte	0x5
 7023 0c27 5D       		.byte	0x5d
 7024 0c28 B7000000 		.4byte	0xb7
 7025 0c2c 05       		.uleb128 0x5
 7026 0c2d 03       		.byte	0x3
 7027 0c2e 00000000 		.4byte	max_turn_quad
 7028 0c32 20       		.uleb128 0x20
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 147


 7029 0c33 73020000 		.4byte	.LASF173
 7030 0c37 05       		.byte	0x5
 7031 0c38 60       		.byte	0x60
 7032 0c39 DB000000 		.4byte	0xdb
 7033 0c3d 05       		.uleb128 0x5
 7034 0c3e 03       		.byte	0x3
 7035 0c3f 00000000 		.4byte	prevVoltage
 7036 0c43 20       		.uleb128 0x20
 7037 0c44 53080000 		.4byte	.LASF174
 7038 0c48 05       		.byte	0x5
 7039 0c49 61       		.byte	0x61
 7040 0c4a DB000000 		.4byte	0xdb
 7041 0c4e 05       		.uleb128 0x5
 7042 0c4f 03       		.byte	0x3
 7043 0c50 00000000 		.4byte	prevVoltage2
 7044 0c54 07       		.uleb128 0x7
 7045 0c55 8E000000 		.4byte	0x8e
 7046 0c59 640C0000 		.4byte	0xc64
 7047 0c5d 08       		.uleb128 0x8
 7048 0c5e 81000000 		.4byte	0x81
 7049 0c62 3F       		.byte	0x3f
 7050 0c63 00       		.byte	0
 7051 0c64 20       		.uleb128 0x20
 7052 0c65 BA070000 		.4byte	.LASF175
 7053 0c69 05       		.byte	0x5
 7054 0c6a 67       		.byte	0x67
 7055 0c6b 540C0000 		.4byte	0xc54
 7056 0c6f 05       		.uleb128 0x5
 7057 0c70 03       		.byte	0x3
 7058 0c71 00000000 		.4byte	displaystring
 7059 0c75 20       		.uleb128 0x20
 7060 0c76 4C020000 		.4byte	.LASF176
 7061 0c7a 05       		.byte	0x5
 7062 0c7b 68       		.byte	0x68
 7063 0c7c 540C0000 		.4byte	0xc54
 7064 0c80 05       		.uleb128 0x5
 7065 0c81 03       		.byte	0x3
 7066 0c82 00000000 		.4byte	line
 7067 0c86 20       		.uleb128 0x20
 7068 0c87 93000000 		.4byte	.LASF177
 7069 0c8b 05       		.byte	0x5
 7070 0c8c 68       		.byte	0x68
 7071 0c8d 540C0000 		.4byte	0xc54
 7072 0c91 05       		.uleb128 0x5
 7073 0c92 03       		.byte	0x3
 7074 0c93 00000000 		.4byte	entry
 7075 0c97 07       		.uleb128 0x7
 7076 0c98 AB000000 		.4byte	0xab
 7077 0c9c A70C0000 		.4byte	0xca7
 7078 0ca0 08       		.uleb128 0x8
 7079 0ca1 81000000 		.4byte	0x81
 7080 0ca5 3F       		.byte	0x3f
 7081 0ca6 00       		.byte	0
 7082 0ca7 20       		.uleb128 0x20
 7083 0ca8 16080000 		.4byte	.LASF178
 7084 0cac 05       		.byte	0x5
 7085 0cad 69       		.byte	0x69
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 148


 7086 0cae 970C0000 		.4byte	0xc97
 7087 0cb2 05       		.uleb128 0x5
 7088 0cb3 03       		.byte	0x3
 7089 0cb4 00000000 		.4byte	usbBuffer
 7090 0cb8 20       		.uleb128 0x20
 7091 0cb9 85010000 		.4byte	.LASF179
 7092 0cbd 05       		.byte	0x5
 7093 0cbe 7E       		.byte	0x7e
 7094 0cbf 86010000 		.4byte	0x186
 7095 0cc3 05       		.uleb128 0x5
 7096 0cc4 03       		.byte	0x3
 7097 0cc5 00000000 		.4byte	buffer_state
 7098 0cc9 20       		.uleb128 0x20
 7099 0cca A3040000 		.4byte	.LASF180
 7100 0cce 05       		.byte	0x5
 7101 0ccf 7F       		.byte	0x7f
 7102 0cd0 86010000 		.4byte	0x186
 7103 0cd4 05       		.uleb128 0x5
 7104 0cd5 03       		.byte	0x3
 7105 0cd6 00000000 		.4byte	system_state
 7106 0cda 20       		.uleb128 0x20
 7107 0cdb FA040000 		.4byte	.LASF181
 7108 0cdf 05       		.byte	0x5
 7109 0ce0 81       		.byte	0x81
 7110 0ce1 0C010000 		.4byte	0x10c
 7111 0ce5 05       		.uleb128 0x5
 7112 0ce6 03       		.byte	0x3
 7113 0ce7 00000000 		.4byte	prev_movement_state
 7114 0ceb 20       		.uleb128 0x20
 7115 0cec A6080000 		.4byte	.LASF182
 7116 0cf0 05       		.byte	0x5
 7117 0cf1 82       		.byte	0x82
 7118 0cf2 0C010000 		.4byte	0x10c
 7119 0cf6 05       		.uleb128 0x5
 7120 0cf7 03       		.byte	0x3
 7121 0cf8 00000000 		.4byte	movement_state
 7122 0cfc 20       		.uleb128 0x20
 7123 0cfd C3020000 		.4byte	.LASF183
 7124 0d01 05       		.byte	0x5
 7125 0d02 83       		.byte	0x83
 7126 0d03 49010000 		.4byte	0x149
 7127 0d07 05       		.uleb128 0x5
 7128 0d08 03       		.byte	0x3
 7129 0d09 00000000 		.4byte	track_mode
 7130 0d0d 20       		.uleb128 0x20
 7131 0d0e E6060000 		.4byte	.LASF184
 7132 0d12 05       		.byte	0x5
 7133 0d13 85       		.byte	0x85
 7134 0d14 AB000000 		.4byte	0xab
 7135 0d18 05       		.uleb128 0x5
 7136 0d19 03       		.byte	0x3
 7137 0d1a 00000000 		.4byte	byteCount
 7138 0d1e 07       		.uleb128 0x7
 7139 0d1f 8E000000 		.4byte	0x8e
 7140 0d23 2E0D0000 		.4byte	0xd2e
 7141 0d27 08       		.uleb128 0x8
 7142 0d28 81000000 		.4byte	0x81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 149


 7143 0d2c 01       		.byte	0x1
 7144 0d2d 00       		.byte	0
 7145 0d2e 20       		.uleb128 0x20
 7146 0d2f F0070000 		.4byte	.LASF185
 7147 0d33 05       		.byte	0x5
 7148 0d34 86       		.byte	0x86
 7149 0d35 1E0D0000 		.4byte	0xd1e
 7150 0d39 05       		.uleb128 0x5
 7151 0d3a 03       		.byte	0x3
 7152 0d3b 00000000 		.4byte	packet
 7153 0d3f 20       		.uleb128 0x20
 7154 0d40 2B090000 		.4byte	.LASF186
 7155 0d44 05       		.byte	0x5
 7156 0d45 8A       		.byte	0x8a
 7157 0d46 EE000000 		.4byte	0xee
 7158 0d4a 05       		.uleb128 0x5
 7159 0d4b 03       		.byte	0x3
 7160 0d4c 00000000 		.4byte	speed
 7161 0d50 20       		.uleb128 0x20
 7162 0d51 DB030000 		.4byte	.LASF187
 7163 0d55 01       		.byte	0x1
 7164 0d56 25       		.byte	0x25
 7165 0d57 B7000000 		.4byte	0xb7
 7166 0d5b 05       		.uleb128 0x5
 7167 0d5c 03       		.byte	0x3
 7168 0d5d 00000000 		.4byte	instructionCount
 7169 0d61 20       		.uleb128 0x20
 7170 0d62 32030000 		.4byte	.LASF188
 7171 0d66 01       		.byte	0x1
 7172 0d67 27       		.byte	0x27
 7173 0d68 A0000000 		.4byte	0xa0
 7174 0d6c 05       		.uleb128 0x5
 7175 0d6d 03       		.byte	0x3
 7176 0d6e 00000000 		.4byte	sensorsDisabled
 7177 0d72 07       		.uleb128 0x7
 7178 0d73 A0000000 		.4byte	0xa0
 7179 0d77 880D0000 		.4byte	0xd88
 7180 0d7b 08       		.uleb128 0x8
 7181 0d7c 81000000 		.4byte	0x81
 7182 0d80 0E       		.byte	0xe
 7183 0d81 08       		.uleb128 0x8
 7184 0d82 81000000 		.4byte	0x81
 7185 0d86 12       		.byte	0x12
 7186 0d87 00       		.byte	0
 7187 0d88 1F       		.uleb128 0x1f
 7188 0d89 6D617000 		.ascii	"map\000"
 7189 0d8d 01       		.byte	0x1
 7190 0d8e 43       		.byte	0x43
 7191 0d8f 720D0000 		.4byte	0xd72
 7192 0d93 05       		.uleb128 0x5
 7193 0d94 03       		.byte	0x3
 7194 0d95 00000000 		.4byte	map
 7195 0d99 07       		.uleb128 0x7
 7196 0d9a A0000000 		.4byte	0xa0
 7197 0d9e AF0D0000 		.4byte	0xdaf
 7198 0da2 08       		.uleb128 0x8
 7199 0da3 81000000 		.4byte	0x81
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 150


 7200 0da7 05       		.byte	0x5
 7201 0da8 08       		.uleb128 0x8
 7202 0da9 81000000 		.4byte	0x81
 7203 0dad 01       		.byte	0x1
 7204 0dae 00       		.byte	0
 7205 0daf 20       		.uleb128 0x20
 7206 0db0 7D070000 		.4byte	.LASF189
 7207 0db4 01       		.byte	0x1
 7208 0db5 64       		.byte	0x64
 7209 0db6 990D0000 		.4byte	0xd99
 7210 0dba 05       		.uleb128 0x5
 7211 0dbb 03       		.byte	0x3
 7212 0dbc 00000000 		.4byte	food_list
 7213 0dc0 07       		.uleb128 0x7
 7214 0dc1 A0000000 		.4byte	0xa0
 7215 0dc5 D70D0000 		.4byte	0xdd7
 7216 0dc9 21       		.uleb128 0x21
 7217 0dca 81000000 		.4byte	0x81
 7218 0dce 5702     		.2byte	0x257
 7219 0dd0 08       		.uleb128 0x8
 7220 0dd1 81000000 		.4byte	0x81
 7221 0dd5 02       		.byte	0x2
 7222 0dd6 00       		.byte	0
 7223 0dd7 20       		.uleb128 0x20
 7224 0dd8 6C000000 		.4byte	.LASF190
 7225 0ddc 01       		.byte	0x1
 7226 0ddd 2B       		.byte	0x2b
 7227 0dde C00D0000 		.4byte	0xdc0
 7228 0de2 05       		.uleb128 0x5
 7229 0de3 03       		.byte	0x3
 7230 0de4 00000000 		.4byte	path
 7231 0de8 20       		.uleb128 0x20
 7232 0de9 69090000 		.4byte	.LASF191
 7233 0ded 01       		.byte	0x1
 7234 0dee 2C       		.byte	0x2c
 7235 0def F5000000 		.4byte	0xf5
 7236 0df3 05       		.uleb128 0x5
 7237 0df4 03       		.byte	0x3
 7238 0df5 00000000 		.4byte	start
 7239 0df9 20       		.uleb128 0x20
 7240 0dfa D4020000 		.4byte	.LASF192
 7241 0dfe 01       		.byte	0x1
 7242 0dff 2D       		.byte	0x2d
 7243 0e00 F5000000 		.4byte	0xf5
 7244 0e04 05       		.uleb128 0x5
 7245 0e05 03       		.byte	0x3
 7246 0e06 00000000 		.4byte	destination
 7247 0e0a 20       		.uleb128 0x20
 7248 0e0b B0000000 		.4byte	.LASF193
 7249 0e0f 01       		.byte	0x1
 7250 0e10 29       		.byte	0x29
 7251 0e11 A0000000 		.4byte	0xa0
 7252 0e15 05       		.uleb128 0x5
 7253 0e16 03       		.byte	0x3
 7254 0e17 00000000 		.4byte	robot_direction
 7255 0e1b 20       		.uleb128 0x20
 7256 0e1c 4E070000 		.4byte	.LASF194
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 151


 7257 0e20 07       		.byte	0x7
 7258 0e21 22       		.byte	0x22
 7259 0e22 A0000000 		.4byte	0xa0
 7260 0e26 05       		.uleb128 0x5
 7261 0e27 03       		.byte	0x3
 7262 0e28 00000000 		.4byte	tracked_direction
 7263 0e2c 20       		.uleb128 0x20
 7264 0e2d 87030000 		.4byte	.LASF195
 7265 0e31 01       		.byte	0x1
 7266 0e32 69       		.byte	0x69
 7267 0e33 A0000000 		.4byte	0xa0
 7268 0e37 05       		.uleb128 0x5
 7269 0e38 03       		.byte	0x3
 7270 0e39 00000000 		.4byte	food_length
 7271 0e3d 07       		.uleb128 0x7
 7272 0e3e 8E000000 		.4byte	0x8e
 7273 0e42 4E0E0000 		.4byte	0xe4e
 7274 0e46 21       		.uleb128 0x21
 7275 0e47 81000000 		.4byte	0x81
 7276 0e4b 5702     		.2byte	0x257
 7277 0e4d 00       		.byte	0
 7278 0e4e 20       		.uleb128 0x20
 7279 0e4f 6A070000 		.4byte	.LASF196
 7280 0e53 01       		.byte	0x1
 7281 0e54 24       		.byte	0x24
 7282 0e55 3D0E0000 		.4byte	0xe3d
 7283 0e59 05       		.uleb128 0x5
 7284 0e5a 03       		.byte	0x3
 7285 0e5b 00000000 		.4byte	instructions
 7286 0e5f 20       		.uleb128 0x20
 7287 0e60 A7020000 		.4byte	.LASF197
 7288 0e64 01       		.byte	0x1
 7289 0e65 26       		.byte	0x26
 7290 0e66 B7000000 		.4byte	0xb7
 7291 0e6a 05       		.uleb128 0x5
 7292 0e6b 03       		.byte	0x3
 7293 0e6c 00000000 		.4byte	instructionLength
 7294 0e70 22       		.uleb128 0x22
 7295 0e71 39000000 		.4byte	.LASF198
 7296 0e75 01       		.byte	0x1
 7297 0e76 3004     		.2byte	0x430
 7298 0e78 B7000000 		.4byte	0xb7
 7299 0e7c 05       		.uleb128 0x5
 7300 0e7d 03       		.byte	0x3
 7301 0e7e 00000000 		.4byte	leftTurnCount
 7302 0e82 22       		.uleb128 0x22
 7303 0e83 48040000 		.4byte	.LASF199
 7304 0e87 01       		.byte	0x1
 7305 0e88 3104     		.2byte	0x431
 7306 0e8a B7000000 		.4byte	0xb7
 7307 0e8e 05       		.uleb128 0x5
 7308 0e8f 03       		.byte	0x3
 7309 0e90 00000000 		.4byte	rightTurnCount
 7310 0e94 00       		.byte	0
 7311              		.section	.debug_abbrev,"",%progbits
 7312              	.Ldebug_abbrev0:
 7313 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 152


 7314 0001 11       		.uleb128 0x11
 7315 0002 01       		.byte	0x1
 7316 0003 25       		.uleb128 0x25
 7317 0004 0E       		.uleb128 0xe
 7318 0005 13       		.uleb128 0x13
 7319 0006 0B       		.uleb128 0xb
 7320 0007 03       		.uleb128 0x3
 7321 0008 0E       		.uleb128 0xe
 7322 0009 1B       		.uleb128 0x1b
 7323 000a 0E       		.uleb128 0xe
 7324 000b 55       		.uleb128 0x55
 7325 000c 17       		.uleb128 0x17
 7326 000d 11       		.uleb128 0x11
 7327 000e 01       		.uleb128 0x1
 7328 000f 10       		.uleb128 0x10
 7329 0010 17       		.uleb128 0x17
 7330 0011 00       		.byte	0
 7331 0012 00       		.byte	0
 7332 0013 02       		.uleb128 0x2
 7333 0014 24       		.uleb128 0x24
 7334 0015 00       		.byte	0
 7335 0016 0B       		.uleb128 0xb
 7336 0017 0B       		.uleb128 0xb
 7337 0018 3E       		.uleb128 0x3e
 7338 0019 0B       		.uleb128 0xb
 7339 001a 03       		.uleb128 0x3
 7340 001b 0E       		.uleb128 0xe
 7341 001c 00       		.byte	0
 7342 001d 00       		.byte	0
 7343 001e 03       		.uleb128 0x3
 7344 001f 16       		.uleb128 0x16
 7345 0020 00       		.byte	0
 7346 0021 03       		.uleb128 0x3
 7347 0022 0E       		.uleb128 0xe
 7348 0023 3A       		.uleb128 0x3a
 7349 0024 0B       		.uleb128 0xb
 7350 0025 3B       		.uleb128 0x3b
 7351 0026 0B       		.uleb128 0xb
 7352 0027 49       		.uleb128 0x49
 7353 0028 13       		.uleb128 0x13
 7354 0029 00       		.byte	0
 7355 002a 00       		.byte	0
 7356 002b 04       		.uleb128 0x4
 7357 002c 24       		.uleb128 0x24
 7358 002d 00       		.byte	0
 7359 002e 0B       		.uleb128 0xb
 7360 002f 0B       		.uleb128 0xb
 7361 0030 3E       		.uleb128 0x3e
 7362 0031 0B       		.uleb128 0xb
 7363 0032 03       		.uleb128 0x3
 7364 0033 08       		.uleb128 0x8
 7365 0034 00       		.byte	0
 7366 0035 00       		.byte	0
 7367 0036 05       		.uleb128 0x5
 7368 0037 0F       		.uleb128 0xf
 7369 0038 00       		.byte	0
 7370 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 153


 7371 003a 0B       		.uleb128 0xb
 7372 003b 49       		.uleb128 0x49
 7373 003c 13       		.uleb128 0x13
 7374 003d 00       		.byte	0
 7375 003e 00       		.byte	0
 7376 003f 06       		.uleb128 0x6
 7377 0040 16       		.uleb128 0x16
 7378 0041 00       		.byte	0
 7379 0042 03       		.uleb128 0x3
 7380 0043 0E       		.uleb128 0xe
 7381 0044 3A       		.uleb128 0x3a
 7382 0045 0B       		.uleb128 0xb
 7383 0046 3B       		.uleb128 0x3b
 7384 0047 05       		.uleb128 0x5
 7385 0048 49       		.uleb128 0x49
 7386 0049 13       		.uleb128 0x13
 7387 004a 00       		.byte	0
 7388 004b 00       		.byte	0
 7389 004c 07       		.uleb128 0x7
 7390 004d 01       		.uleb128 0x1
 7391 004e 01       		.byte	0x1
 7392 004f 49       		.uleb128 0x49
 7393 0050 13       		.uleb128 0x13
 7394 0051 01       		.uleb128 0x1
 7395 0052 13       		.uleb128 0x13
 7396 0053 00       		.byte	0
 7397 0054 00       		.byte	0
 7398 0055 08       		.uleb128 0x8
 7399 0056 21       		.uleb128 0x21
 7400 0057 00       		.byte	0
 7401 0058 49       		.uleb128 0x49
 7402 0059 13       		.uleb128 0x13
 7403 005a 2F       		.uleb128 0x2f
 7404 005b 0B       		.uleb128 0xb
 7405 005c 00       		.byte	0
 7406 005d 00       		.byte	0
 7407 005e 09       		.uleb128 0x9
 7408 005f 04       		.uleb128 0x4
 7409 0060 01       		.byte	0x1
 7410 0061 03       		.uleb128 0x3
 7411 0062 0E       		.uleb128 0xe
 7412 0063 0B       		.uleb128 0xb
 7413 0064 0B       		.uleb128 0xb
 7414 0065 3A       		.uleb128 0x3a
 7415 0066 0B       		.uleb128 0xb
 7416 0067 3B       		.uleb128 0x3b
 7417 0068 0B       		.uleb128 0xb
 7418 0069 01       		.uleb128 0x1
 7419 006a 13       		.uleb128 0x13
 7420 006b 00       		.byte	0
 7421 006c 00       		.byte	0
 7422 006d 0A       		.uleb128 0xa
 7423 006e 28       		.uleb128 0x28
 7424 006f 00       		.byte	0
 7425 0070 03       		.uleb128 0x3
 7426 0071 0E       		.uleb128 0xe
 7427 0072 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 154


 7428 0073 0D       		.uleb128 0xd
 7429 0074 00       		.byte	0
 7430 0075 00       		.byte	0
 7431 0076 0B       		.uleb128 0xb
 7432 0077 13       		.uleb128 0x13
 7433 0078 01       		.byte	0x1
 7434 0079 03       		.uleb128 0x3
 7435 007a 0E       		.uleb128 0xe
 7436 007b 0B       		.uleb128 0xb
 7437 007c 0B       		.uleb128 0xb
 7438 007d 3A       		.uleb128 0x3a
 7439 007e 0B       		.uleb128 0xb
 7440 007f 3B       		.uleb128 0x3b
 7441 0080 0B       		.uleb128 0xb
 7442 0081 01       		.uleb128 0x1
 7443 0082 13       		.uleb128 0x13
 7444 0083 00       		.byte	0
 7445 0084 00       		.byte	0
 7446 0085 0C       		.uleb128 0xc
 7447 0086 0D       		.uleb128 0xd
 7448 0087 00       		.byte	0
 7449 0088 03       		.uleb128 0x3
 7450 0089 0E       		.uleb128 0xe
 7451 008a 3A       		.uleb128 0x3a
 7452 008b 0B       		.uleb128 0xb
 7453 008c 3B       		.uleb128 0x3b
 7454 008d 0B       		.uleb128 0xb
 7455 008e 49       		.uleb128 0x49
 7456 008f 13       		.uleb128 0x13
 7457 0090 38       		.uleb128 0x38
 7458 0091 0B       		.uleb128 0xb
 7459 0092 00       		.byte	0
 7460 0093 00       		.byte	0
 7461 0094 0D       		.uleb128 0xd
 7462 0095 2E       		.uleb128 0x2e
 7463 0096 00       		.byte	0
 7464 0097 3F       		.uleb128 0x3f
 7465 0098 19       		.uleb128 0x19
 7466 0099 03       		.uleb128 0x3
 7467 009a 0E       		.uleb128 0xe
 7468 009b 3A       		.uleb128 0x3a
 7469 009c 0B       		.uleb128 0xb
 7470 009d 3B       		.uleb128 0x3b
 7471 009e 0B       		.uleb128 0xb
 7472 009f 27       		.uleb128 0x27
 7473 00a0 19       		.uleb128 0x19
 7474 00a1 11       		.uleb128 0x11
 7475 00a2 01       		.uleb128 0x1
 7476 00a3 12       		.uleb128 0x12
 7477 00a4 06       		.uleb128 0x6
 7478 00a5 40       		.uleb128 0x40
 7479 00a6 18       		.uleb128 0x18
 7480 00a7 9742     		.uleb128 0x2117
 7481 00a9 19       		.uleb128 0x19
 7482 00aa 00       		.byte	0
 7483 00ab 00       		.byte	0
 7484 00ac 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 155


 7485 00ad 2E       		.uleb128 0x2e
 7486 00ae 00       		.byte	0
 7487 00af 3F       		.uleb128 0x3f
 7488 00b0 19       		.uleb128 0x19
 7489 00b1 03       		.uleb128 0x3
 7490 00b2 0E       		.uleb128 0xe
 7491 00b3 3A       		.uleb128 0x3a
 7492 00b4 0B       		.uleb128 0xb
 7493 00b5 3B       		.uleb128 0x3b
 7494 00b6 0B       		.uleb128 0xb
 7495 00b7 27       		.uleb128 0x27
 7496 00b8 19       		.uleb128 0x19
 7497 00b9 11       		.uleb128 0x11
 7498 00ba 01       		.uleb128 0x1
 7499 00bb 12       		.uleb128 0x12
 7500 00bc 06       		.uleb128 0x6
 7501 00bd 40       		.uleb128 0x40
 7502 00be 18       		.uleb128 0x18
 7503 00bf 9642     		.uleb128 0x2116
 7504 00c1 19       		.uleb128 0x19
 7505 00c2 00       		.byte	0
 7506 00c3 00       		.byte	0
 7507 00c4 0F       		.uleb128 0xf
 7508 00c5 2E       		.uleb128 0x2e
 7509 00c6 01       		.byte	0x1
 7510 00c7 3F       		.uleb128 0x3f
 7511 00c8 19       		.uleb128 0x19
 7512 00c9 03       		.uleb128 0x3
 7513 00ca 0E       		.uleb128 0xe
 7514 00cb 3A       		.uleb128 0x3a
 7515 00cc 0B       		.uleb128 0xb
 7516 00cd 3B       		.uleb128 0x3b
 7517 00ce 0B       		.uleb128 0xb
 7518 00cf 27       		.uleb128 0x27
 7519 00d0 19       		.uleb128 0x19
 7520 00d1 11       		.uleb128 0x11
 7521 00d2 01       		.uleb128 0x1
 7522 00d3 12       		.uleb128 0x12
 7523 00d4 06       		.uleb128 0x6
 7524 00d5 40       		.uleb128 0x40
 7525 00d6 18       		.uleb128 0x18
 7526 00d7 9642     		.uleb128 0x2116
 7527 00d9 19       		.uleb128 0x19
 7528 00da 01       		.uleb128 0x1
 7529 00db 13       		.uleb128 0x13
 7530 00dc 00       		.byte	0
 7531 00dd 00       		.byte	0
 7532 00de 10       		.uleb128 0x10
 7533 00df 0B       		.uleb128 0xb
 7534 00e0 01       		.byte	0x1
 7535 00e1 11       		.uleb128 0x11
 7536 00e2 01       		.uleb128 0x1
 7537 00e3 12       		.uleb128 0x12
 7538 00e4 06       		.uleb128 0x6
 7539 00e5 01       		.uleb128 0x1
 7540 00e6 13       		.uleb128 0x13
 7541 00e7 00       		.byte	0
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 156


 7542 00e8 00       		.byte	0
 7543 00e9 11       		.uleb128 0x11
 7544 00ea 34       		.uleb128 0x34
 7545 00eb 00       		.byte	0
 7546 00ec 03       		.uleb128 0x3
 7547 00ed 0E       		.uleb128 0xe
 7548 00ee 3A       		.uleb128 0x3a
 7549 00ef 0B       		.uleb128 0xb
 7550 00f0 3B       		.uleb128 0x3b
 7551 00f1 0B       		.uleb128 0xb
 7552 00f2 49       		.uleb128 0x49
 7553 00f3 13       		.uleb128 0x13
 7554 00f4 02       		.uleb128 0x2
 7555 00f5 18       		.uleb128 0x18
 7556 00f6 00       		.byte	0
 7557 00f7 00       		.byte	0
 7558 00f8 12       		.uleb128 0x12
 7559 00f9 0B       		.uleb128 0xb
 7560 00fa 01       		.byte	0x1
 7561 00fb 11       		.uleb128 0x11
 7562 00fc 01       		.uleb128 0x1
 7563 00fd 12       		.uleb128 0x12
 7564 00fe 06       		.uleb128 0x6
 7565 00ff 00       		.byte	0
 7566 0100 00       		.byte	0
 7567 0101 13       		.uleb128 0x13
 7568 0102 2E       		.uleb128 0x2e
 7569 0103 01       		.byte	0x1
 7570 0104 3F       		.uleb128 0x3f
 7571 0105 19       		.uleb128 0x19
 7572 0106 03       		.uleb128 0x3
 7573 0107 0E       		.uleb128 0xe
 7574 0108 3A       		.uleb128 0x3a
 7575 0109 0B       		.uleb128 0xb
 7576 010a 3B       		.uleb128 0x3b
 7577 010b 05       		.uleb128 0x5
 7578 010c 49       		.uleb128 0x49
 7579 010d 13       		.uleb128 0x13
 7580 010e 11       		.uleb128 0x11
 7581 010f 01       		.uleb128 0x1
 7582 0110 12       		.uleb128 0x12
 7583 0111 06       		.uleb128 0x6
 7584 0112 40       		.uleb128 0x40
 7585 0113 18       		.uleb128 0x18
 7586 0114 9642     		.uleb128 0x2116
 7587 0116 19       		.uleb128 0x19
 7588 0117 01       		.uleb128 0x1
 7589 0118 13       		.uleb128 0x13
 7590 0119 00       		.byte	0
 7591 011a 00       		.byte	0
 7592 011b 14       		.uleb128 0x14
 7593 011c 34       		.uleb128 0x34
 7594 011d 00       		.byte	0
 7595 011e 03       		.uleb128 0x3
 7596 011f 0E       		.uleb128 0xe
 7597 0120 3A       		.uleb128 0x3a
 7598 0121 0B       		.uleb128 0xb
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 157


 7599 0122 3B       		.uleb128 0x3b
 7600 0123 05       		.uleb128 0x5
 7601 0124 49       		.uleb128 0x49
 7602 0125 13       		.uleb128 0x13
 7603 0126 02       		.uleb128 0x2
 7604 0127 18       		.uleb128 0x18
 7605 0128 00       		.byte	0
 7606 0129 00       		.byte	0
 7607 012a 15       		.uleb128 0x15
 7608 012b 34       		.uleb128 0x34
 7609 012c 00       		.byte	0
 7610 012d 03       		.uleb128 0x3
 7611 012e 08       		.uleb128 0x8
 7612 012f 3A       		.uleb128 0x3a
 7613 0130 0B       		.uleb128 0xb
 7614 0131 3B       		.uleb128 0x3b
 7615 0132 05       		.uleb128 0x5
 7616 0133 49       		.uleb128 0x49
 7617 0134 13       		.uleb128 0x13
 7618 0135 02       		.uleb128 0x2
 7619 0136 18       		.uleb128 0x18
 7620 0137 00       		.byte	0
 7621 0138 00       		.byte	0
 7622 0139 16       		.uleb128 0x16
 7623 013a 2E       		.uleb128 0x2e
 7624 013b 01       		.byte	0x1
 7625 013c 3F       		.uleb128 0x3f
 7626 013d 19       		.uleb128 0x19
 7627 013e 03       		.uleb128 0x3
 7628 013f 0E       		.uleb128 0xe
 7629 0140 3A       		.uleb128 0x3a
 7630 0141 0B       		.uleb128 0xb
 7631 0142 3B       		.uleb128 0x3b
 7632 0143 05       		.uleb128 0x5
 7633 0144 11       		.uleb128 0x11
 7634 0145 01       		.uleb128 0x1
 7635 0146 12       		.uleb128 0x12
 7636 0147 06       		.uleb128 0x6
 7637 0148 40       		.uleb128 0x40
 7638 0149 18       		.uleb128 0x18
 7639 014a 9742     		.uleb128 0x2117
 7640 014c 19       		.uleb128 0x19
 7641 014d 01       		.uleb128 0x1
 7642 014e 13       		.uleb128 0x13
 7643 014f 00       		.byte	0
 7644 0150 00       		.byte	0
 7645 0151 17       		.uleb128 0x17
 7646 0152 2E       		.uleb128 0x2e
 7647 0153 01       		.byte	0x1
 7648 0154 3F       		.uleb128 0x3f
 7649 0155 19       		.uleb128 0x19
 7650 0156 03       		.uleb128 0x3
 7651 0157 0E       		.uleb128 0xe
 7652 0158 3A       		.uleb128 0x3a
 7653 0159 0B       		.uleb128 0xb
 7654 015a 3B       		.uleb128 0x3b
 7655 015b 05       		.uleb128 0x5
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 158


 7656 015c 27       		.uleb128 0x27
 7657 015d 19       		.uleb128 0x19
 7658 015e 11       		.uleb128 0x11
 7659 015f 01       		.uleb128 0x1
 7660 0160 12       		.uleb128 0x12
 7661 0161 06       		.uleb128 0x6
 7662 0162 40       		.uleb128 0x40
 7663 0163 18       		.uleb128 0x18
 7664 0164 9642     		.uleb128 0x2116
 7665 0166 19       		.uleb128 0x19
 7666 0167 01       		.uleb128 0x1
 7667 0168 13       		.uleb128 0x13
 7668 0169 00       		.byte	0
 7669 016a 00       		.byte	0
 7670 016b 18       		.uleb128 0x18
 7671 016c 05       		.uleb128 0x5
 7672 016d 00       		.byte	0
 7673 016e 03       		.uleb128 0x3
 7674 016f 08       		.uleb128 0x8
 7675 0170 3A       		.uleb128 0x3a
 7676 0171 0B       		.uleb128 0xb
 7677 0172 3B       		.uleb128 0x3b
 7678 0173 05       		.uleb128 0x5
 7679 0174 49       		.uleb128 0x49
 7680 0175 13       		.uleb128 0x13
 7681 0176 02       		.uleb128 0x2
 7682 0177 18       		.uleb128 0x18
 7683 0178 00       		.byte	0
 7684 0179 00       		.byte	0
 7685 017a 19       		.uleb128 0x19
 7686 017b 2E       		.uleb128 0x2e
 7687 017c 01       		.byte	0x1
 7688 017d 3F       		.uleb128 0x3f
 7689 017e 19       		.uleb128 0x19
 7690 017f 03       		.uleb128 0x3
 7691 0180 0E       		.uleb128 0xe
 7692 0181 3A       		.uleb128 0x3a
 7693 0182 0B       		.uleb128 0xb
 7694 0183 3B       		.uleb128 0x3b
 7695 0184 05       		.uleb128 0x5
 7696 0185 11       		.uleb128 0x11
 7697 0186 01       		.uleb128 0x1
 7698 0187 12       		.uleb128 0x12
 7699 0188 06       		.uleb128 0x6
 7700 0189 40       		.uleb128 0x40
 7701 018a 18       		.uleb128 0x18
 7702 018b 9642     		.uleb128 0x2116
 7703 018d 19       		.uleb128 0x19
 7704 018e 01       		.uleb128 0x1
 7705 018f 13       		.uleb128 0x13
 7706 0190 00       		.byte	0
 7707 0191 00       		.byte	0
 7708 0192 1A       		.uleb128 0x1a
 7709 0193 05       		.uleb128 0x5
 7710 0194 00       		.byte	0
 7711 0195 03       		.uleb128 0x3
 7712 0196 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 159


 7713 0197 3A       		.uleb128 0x3a
 7714 0198 0B       		.uleb128 0xb
 7715 0199 3B       		.uleb128 0x3b
 7716 019a 05       		.uleb128 0x5
 7717 019b 49       		.uleb128 0x49
 7718 019c 13       		.uleb128 0x13
 7719 019d 02       		.uleb128 0x2
 7720 019e 18       		.uleb128 0x18
 7721 019f 00       		.byte	0
 7722 01a0 00       		.byte	0
 7723 01a1 1B       		.uleb128 0x1b
 7724 01a2 2E       		.uleb128 0x2e
 7725 01a3 00       		.byte	0
 7726 01a4 3F       		.uleb128 0x3f
 7727 01a5 19       		.uleb128 0x19
 7728 01a6 03       		.uleb128 0x3
 7729 01a7 0E       		.uleb128 0xe
 7730 01a8 3A       		.uleb128 0x3a
 7731 01a9 0B       		.uleb128 0xb
 7732 01aa 3B       		.uleb128 0x3b
 7733 01ab 05       		.uleb128 0x5
 7734 01ac 11       		.uleb128 0x11
 7735 01ad 01       		.uleb128 0x1
 7736 01ae 12       		.uleb128 0x12
 7737 01af 06       		.uleb128 0x6
 7738 01b0 40       		.uleb128 0x40
 7739 01b1 18       		.uleb128 0x18
 7740 01b2 9642     		.uleb128 0x2116
 7741 01b4 19       		.uleb128 0x19
 7742 01b5 00       		.byte	0
 7743 01b6 00       		.byte	0
 7744 01b7 1C       		.uleb128 0x1c
 7745 01b8 2E       		.uleb128 0x2e
 7746 01b9 00       		.byte	0
 7747 01ba 3F       		.uleb128 0x3f
 7748 01bb 19       		.uleb128 0x19
 7749 01bc 03       		.uleb128 0x3
 7750 01bd 0E       		.uleb128 0xe
 7751 01be 3A       		.uleb128 0x3a
 7752 01bf 0B       		.uleb128 0xb
 7753 01c0 3B       		.uleb128 0x3b
 7754 01c1 05       		.uleb128 0x5
 7755 01c2 11       		.uleb128 0x11
 7756 01c3 01       		.uleb128 0x1
 7757 01c4 12       		.uleb128 0x12
 7758 01c5 06       		.uleb128 0x6
 7759 01c6 40       		.uleb128 0x40
 7760 01c7 18       		.uleb128 0x18
 7761 01c8 9742     		.uleb128 0x2117
 7762 01ca 19       		.uleb128 0x19
 7763 01cb 00       		.byte	0
 7764 01cc 00       		.byte	0
 7765 01cd 1D       		.uleb128 0x1d
 7766 01ce 34       		.uleb128 0x34
 7767 01cf 00       		.byte	0
 7768 01d0 03       		.uleb128 0x3
 7769 01d1 0E       		.uleb128 0xe
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 160


 7770 01d2 3A       		.uleb128 0x3a
 7771 01d3 0B       		.uleb128 0xb
 7772 01d4 3B       		.uleb128 0x3b
 7773 01d5 05       		.uleb128 0x5
 7774 01d6 49       		.uleb128 0x49
 7775 01d7 13       		.uleb128 0x13
 7776 01d8 3F       		.uleb128 0x3f
 7777 01d9 19       		.uleb128 0x19
 7778 01da 3C       		.uleb128 0x3c
 7779 01db 19       		.uleb128 0x19
 7780 01dc 00       		.byte	0
 7781 01dd 00       		.byte	0
 7782 01de 1E       		.uleb128 0x1e
 7783 01df 35       		.uleb128 0x35
 7784 01e0 00       		.byte	0
 7785 01e1 49       		.uleb128 0x49
 7786 01e2 13       		.uleb128 0x13
 7787 01e3 00       		.byte	0
 7788 01e4 00       		.byte	0
 7789 01e5 1F       		.uleb128 0x1f
 7790 01e6 34       		.uleb128 0x34
 7791 01e7 00       		.byte	0
 7792 01e8 03       		.uleb128 0x3
 7793 01e9 08       		.uleb128 0x8
 7794 01ea 3A       		.uleb128 0x3a
 7795 01eb 0B       		.uleb128 0xb
 7796 01ec 3B       		.uleb128 0x3b
 7797 01ed 0B       		.uleb128 0xb
 7798 01ee 49       		.uleb128 0x49
 7799 01ef 13       		.uleb128 0x13
 7800 01f0 3F       		.uleb128 0x3f
 7801 01f1 19       		.uleb128 0x19
 7802 01f2 02       		.uleb128 0x2
 7803 01f3 18       		.uleb128 0x18
 7804 01f4 00       		.byte	0
 7805 01f5 00       		.byte	0
 7806 01f6 20       		.uleb128 0x20
 7807 01f7 34       		.uleb128 0x34
 7808 01f8 00       		.byte	0
 7809 01f9 03       		.uleb128 0x3
 7810 01fa 0E       		.uleb128 0xe
 7811 01fb 3A       		.uleb128 0x3a
 7812 01fc 0B       		.uleb128 0xb
 7813 01fd 3B       		.uleb128 0x3b
 7814 01fe 0B       		.uleb128 0xb
 7815 01ff 49       		.uleb128 0x49
 7816 0200 13       		.uleb128 0x13
 7817 0201 3F       		.uleb128 0x3f
 7818 0202 19       		.uleb128 0x19
 7819 0203 02       		.uleb128 0x2
 7820 0204 18       		.uleb128 0x18
 7821 0205 00       		.byte	0
 7822 0206 00       		.byte	0
 7823 0207 21       		.uleb128 0x21
 7824 0208 21       		.uleb128 0x21
 7825 0209 00       		.byte	0
 7826 020a 49       		.uleb128 0x49
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 161


 7827 020b 13       		.uleb128 0x13
 7828 020c 2F       		.uleb128 0x2f
 7829 020d 05       		.uleb128 0x5
 7830 020e 00       		.byte	0
 7831 020f 00       		.byte	0
 7832 0210 22       		.uleb128 0x22
 7833 0211 34       		.uleb128 0x34
 7834 0212 00       		.byte	0
 7835 0213 03       		.uleb128 0x3
 7836 0214 0E       		.uleb128 0xe
 7837 0215 3A       		.uleb128 0x3a
 7838 0216 0B       		.uleb128 0xb
 7839 0217 3B       		.uleb128 0x3b
 7840 0218 05       		.uleb128 0x5
 7841 0219 49       		.uleb128 0x49
 7842 021a 13       		.uleb128 0x13
 7843 021b 3F       		.uleb128 0x3f
 7844 021c 19       		.uleb128 0x19
 7845 021d 02       		.uleb128 0x2
 7846 021e 18       		.uleb128 0x18
 7847 021f 00       		.byte	0
 7848 0220 00       		.byte	0
 7849 0221 00       		.byte	0
 7850              		.section	.debug_aranges,"",%progbits
 7851 0000 6C010000 		.4byte	0x16c
 7852 0004 0200     		.2byte	0x2
 7853 0006 00000000 		.4byte	.Ldebug_info0
 7854 000a 04       		.byte	0x4
 7855 000b 00       		.byte	0
 7856 000c 0000     		.2byte	0
 7857 000e 0000     		.2byte	0
 7858 0010 00000000 		.4byte	.LFB63
 7859 0014 0C000000 		.4byte	.LFE63-.LFB63
 7860 0018 00000000 		.4byte	.LFB64
 7861 001c 2C000000 		.4byte	.LFE64-.LFB64
 7862 0020 00000000 		.4byte	.LFB65
 7863 0024 98010000 		.4byte	.LFE65-.LFB65
 7864 0028 00000000 		.4byte	.LFB66
 7865 002c 64010000 		.4byte	.LFE66-.LFB66
 7866 0030 00000000 		.4byte	.LFB67
 7867 0034 20000000 		.4byte	.LFE67-.LFB67
 7868 0038 00000000 		.4byte	.LFB68
 7869 003c 28000000 		.4byte	.LFE68-.LFB68
 7870 0040 00000000 		.4byte	.LFB69
 7871 0044 0A000000 		.4byte	.LFE69-.LFB69
 7872 0048 00000000 		.4byte	.LFB70
 7873 004c 28000000 		.4byte	.LFE70-.LFB70
 7874 0050 00000000 		.4byte	.LFB71
 7875 0054 34070000 		.4byte	.LFE71-.LFB71
 7876 0058 00000000 		.4byte	.LFB72
 7877 005c 60010000 		.4byte	.LFE72-.LFB72
 7878 0060 00000000 		.4byte	.LFB73
 7879 0064 18000000 		.4byte	.LFE73-.LFB73
 7880 0068 00000000 		.4byte	.LFB74
 7881 006c 18000000 		.4byte	.LFE74-.LFB74
 7882 0070 00000000 		.4byte	.LFB75
 7883 0074 54000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 162


 7884 0078 00000000 		.4byte	.LFB76
 7885 007c F4000000 		.4byte	.LFE76-.LFB76
 7886 0080 00000000 		.4byte	.LFB77
 7887 0084 18000000 		.4byte	.LFE77-.LFB77
 7888 0088 00000000 		.4byte	.LFB78
 7889 008c 18000000 		.4byte	.LFE78-.LFB78
 7890 0090 00000000 		.4byte	.LFB79
 7891 0094 22000000 		.4byte	.LFE79-.LFB79
 7892 0098 00000000 		.4byte	.LFB80
 7893 009c 1C000000 		.4byte	.LFE80-.LFB80
 7894 00a0 00000000 		.4byte	.LFB81
 7895 00a4 34000000 		.4byte	.LFE81-.LFB81
 7896 00a8 00000000 		.4byte	.LFB82
 7897 00ac 38000000 		.4byte	.LFE82-.LFB82
 7898 00b0 00000000 		.4byte	.LFB83
 7899 00b4 4C000000 		.4byte	.LFE83-.LFB83
 7900 00b8 00000000 		.4byte	.LFB84
 7901 00bc 38000000 		.4byte	.LFE84-.LFB84
 7902 00c0 00000000 		.4byte	.LFB85
 7903 00c4 38000000 		.4byte	.LFE85-.LFB85
 7904 00c8 00000000 		.4byte	.LFB86
 7905 00cc 38000000 		.4byte	.LFE86-.LFB86
 7906 00d0 00000000 		.4byte	.LFB87
 7907 00d4 14000000 		.4byte	.LFE87-.LFB87
 7908 00d8 00000000 		.4byte	.LFB88
 7909 00dc 18000000 		.4byte	.LFE88-.LFB88
 7910 00e0 00000000 		.4byte	.LFB89
 7911 00e4 18000000 		.4byte	.LFE89-.LFB89
 7912 00e8 00000000 		.4byte	.LFB90
 7913 00ec 18000000 		.4byte	.LFE90-.LFB90
 7914 00f0 00000000 		.4byte	.LFB91
 7915 00f4 18000000 		.4byte	.LFE91-.LFB91
 7916 00f8 00000000 		.4byte	.LFB92
 7917 00fc B8000000 		.4byte	.LFE92-.LFB92
 7918 0100 00000000 		.4byte	.LFB93
 7919 0104 B8050000 		.4byte	.LFE93-.LFB93
 7920 0108 00000000 		.4byte	.LFB94
 7921 010c 40000000 		.4byte	.LFE94-.LFB94
 7922 0110 00000000 		.4byte	.LFB95
 7923 0114 40000000 		.4byte	.LFE95-.LFB95
 7924 0118 00000000 		.4byte	.LFB96
 7925 011c 30020000 		.4byte	.LFE96-.LFB96
 7926 0120 00000000 		.4byte	.LFB97
 7927 0124 0C000000 		.4byte	.LFE97-.LFB97
 7928 0128 00000000 		.4byte	.LFB98
 7929 012c 4C010000 		.4byte	.LFE98-.LFB98
 7930 0130 00000000 		.4byte	.LFB99
 7931 0134 0C000000 		.4byte	.LFE99-.LFB99
 7932 0138 00000000 		.4byte	.LFB100
 7933 013c C0000000 		.4byte	.LFE100-.LFB100
 7934 0140 00000000 		.4byte	.LFB101
 7935 0144 B8000000 		.4byte	.LFE101-.LFB101
 7936 0148 00000000 		.4byte	.LFB102
 7937 014c 4A000000 		.4byte	.LFE102-.LFB102
 7938 0150 00000000 		.4byte	.LFB103
 7939 0154 68000000 		.4byte	.LFE103-.LFB103
 7940 0158 00000000 		.4byte	.LFB104
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 163


 7941 015c 50000000 		.4byte	.LFE104-.LFB104
 7942 0160 00000000 		.4byte	.LFB105
 7943 0164 0C000000 		.4byte	.LFE105-.LFB105
 7944 0168 00000000 		.4byte	0
 7945 016c 00000000 		.4byte	0
 7946              		.section	.debug_ranges,"",%progbits
 7947              	.Ldebug_ranges0:
 7948 0000 00000000 		.4byte	.LFB63
 7949 0004 0C000000 		.4byte	.LFE63
 7950 0008 00000000 		.4byte	.LFB64
 7951 000c 2C000000 		.4byte	.LFE64
 7952 0010 00000000 		.4byte	.LFB65
 7953 0014 98010000 		.4byte	.LFE65
 7954 0018 00000000 		.4byte	.LFB66
 7955 001c 64010000 		.4byte	.LFE66
 7956 0020 00000000 		.4byte	.LFB67
 7957 0024 20000000 		.4byte	.LFE67
 7958 0028 00000000 		.4byte	.LFB68
 7959 002c 28000000 		.4byte	.LFE68
 7960 0030 00000000 		.4byte	.LFB69
 7961 0034 0A000000 		.4byte	.LFE69
 7962 0038 00000000 		.4byte	.LFB70
 7963 003c 28000000 		.4byte	.LFE70
 7964 0040 00000000 		.4byte	.LFB71
 7965 0044 34070000 		.4byte	.LFE71
 7966 0048 00000000 		.4byte	.LFB72
 7967 004c 60010000 		.4byte	.LFE72
 7968 0050 00000000 		.4byte	.LFB73
 7969 0054 18000000 		.4byte	.LFE73
 7970 0058 00000000 		.4byte	.LFB74
 7971 005c 18000000 		.4byte	.LFE74
 7972 0060 00000000 		.4byte	.LFB75
 7973 0064 54000000 		.4byte	.LFE75
 7974 0068 00000000 		.4byte	.LFB76
 7975 006c F4000000 		.4byte	.LFE76
 7976 0070 00000000 		.4byte	.LFB77
 7977 0074 18000000 		.4byte	.LFE77
 7978 0078 00000000 		.4byte	.LFB78
 7979 007c 18000000 		.4byte	.LFE78
 7980 0080 00000000 		.4byte	.LFB79
 7981 0084 22000000 		.4byte	.LFE79
 7982 0088 00000000 		.4byte	.LFB80
 7983 008c 1C000000 		.4byte	.LFE80
 7984 0090 00000000 		.4byte	.LFB81
 7985 0094 34000000 		.4byte	.LFE81
 7986 0098 00000000 		.4byte	.LFB82
 7987 009c 38000000 		.4byte	.LFE82
 7988 00a0 00000000 		.4byte	.LFB83
 7989 00a4 4C000000 		.4byte	.LFE83
 7990 00a8 00000000 		.4byte	.LFB84
 7991 00ac 38000000 		.4byte	.LFE84
 7992 00b0 00000000 		.4byte	.LFB85
 7993 00b4 38000000 		.4byte	.LFE85
 7994 00b8 00000000 		.4byte	.LFB86
 7995 00bc 38000000 		.4byte	.LFE86
 7996 00c0 00000000 		.4byte	.LFB87
 7997 00c4 14000000 		.4byte	.LFE87
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 164


 7998 00c8 00000000 		.4byte	.LFB88
 7999 00cc 18000000 		.4byte	.LFE88
 8000 00d0 00000000 		.4byte	.LFB89
 8001 00d4 18000000 		.4byte	.LFE89
 8002 00d8 00000000 		.4byte	.LFB90
 8003 00dc 18000000 		.4byte	.LFE90
 8004 00e0 00000000 		.4byte	.LFB91
 8005 00e4 18000000 		.4byte	.LFE91
 8006 00e8 00000000 		.4byte	.LFB92
 8007 00ec B8000000 		.4byte	.LFE92
 8008 00f0 00000000 		.4byte	.LFB93
 8009 00f4 B8050000 		.4byte	.LFE93
 8010 00f8 00000000 		.4byte	.LFB94
 8011 00fc 40000000 		.4byte	.LFE94
 8012 0100 00000000 		.4byte	.LFB95
 8013 0104 40000000 		.4byte	.LFE95
 8014 0108 00000000 		.4byte	.LFB96
 8015 010c 30020000 		.4byte	.LFE96
 8016 0110 00000000 		.4byte	.LFB97
 8017 0114 0C000000 		.4byte	.LFE97
 8018 0118 00000000 		.4byte	.LFB98
 8019 011c 4C010000 		.4byte	.LFE98
 8020 0120 00000000 		.4byte	.LFB99
 8021 0124 0C000000 		.4byte	.LFE99
 8022 0128 00000000 		.4byte	.LFB100
 8023 012c C0000000 		.4byte	.LFE100
 8024 0130 00000000 		.4byte	.LFB101
 8025 0134 B8000000 		.4byte	.LFE101
 8026 0138 00000000 		.4byte	.LFB102
 8027 013c 4A000000 		.4byte	.LFE102
 8028 0140 00000000 		.4byte	.LFB103
 8029 0144 68000000 		.4byte	.LFE103
 8030 0148 00000000 		.4byte	.LFB104
 8031 014c 50000000 		.4byte	.LFE104
 8032 0150 00000000 		.4byte	.LFB105
 8033 0154 0C000000 		.4byte	.LFE105
 8034 0158 00000000 		.4byte	0
 8035 015c 00000000 		.4byte	0
 8036              		.section	.debug_line,"",%progbits
 8037              	.Ldebug_line0:
 8038 0000 FA070000 		.section	.debug_str,"MS",%progbits,1
 8038      02006701 
 8038      00000201 
 8038      FB0E0D00 
 8038      01010101 
 8039              	.LASF96:
 8040 0000 696E6974 		.ascii	"initTrackU\000"
 8040      54726163 
 8040      6B5500
 8041              	.LASF56:
 8042 000b 67325F73 		.ascii	"g2_speed\000"
 8042      70656564 
 8042      00
 8043              	.LASF101:
 8044 0014 6368616E 		.ascii	"changeToRF\000"
 8044      6765546F 
 8044      524600
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 165


 8045              	.LASF37:
 8046 001f 51554144 		.ascii	"QUAD_STOP\000"
 8046      5F53544F 
 8046      5000
 8047              	.LASF63:
 8048 0029 62757474 		.ascii	"button\000"
 8048      6F6E00
 8049              	.LASF127:
 8050 0030 74735F73 		.ascii	"ts_speed\000"
 8050      70656564 
 8050      00
 8051              	.LASF198:
 8052 0039 6C656674 		.ascii	"leftTurnCount\000"
 8052      5475726E 
 8052      436F756E 
 8052      7400
 8053              	.LASF165:
 8054 0047 696E6974 		.ascii	"initial_y_pos\000"
 8054      69616C5F 
 8054      795F706F 
 8054      7300
 8055              	.LASF65:
 8056 0055 6973725F 		.ascii	"isr_deadzone\000"
 8056      64656164 
 8056      7A6F6E65 
 8056      00
 8057              	.LASF141:
 8058 0062 64697265 		.ascii	"direction\000"
 8058      6374696F 
 8058      6E00
 8059              	.LASF190:
 8060 006c 70617468 		.ascii	"path\000"
 8060      00
 8061              	.LASF94:
 8062 0071 696E6974 		.ascii	"initBrake\000"
 8062      4272616B 
 8062      6500
 8063              	.LASF49:
 8064 007b 67305F64 		.ascii	"g0_direction\000"
 8064      69726563 
 8064      74696F6E 
 8064      00
 8065              	.LASF61:
 8066 0088 64697374 		.ascii	"distTurned\000"
 8066      5475726E 
 8066      656400
 8067              	.LASF177:
 8068 0093 656E7472 		.ascii	"entry\000"
 8068      7900
 8069              	.LASF9:
 8070 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 8070      206C6F6E 
 8070      6720756E 
 8070      7369676E 
 8070      65642069 
 8071              	.LASF193:
 8072 00b0 726F626F 		.ascii	"robot_direction\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 166


 8072      745F6469 
 8072      72656374 
 8072      696F6E00 
 8073              	.LASF134:
 8074 00c0 666C6167 		.ascii	"flag_packet\000"
 8074      5F706163 
 8074      6B657400 
 8075              	.LASF87:
 8076 00cc 7475726E 		.ascii	"turnRight\000"
 8076      52696768 
 8076      7400
 8077              	.LASF46:
 8078 00d6 67305F78 		.ascii	"g0_xpos\000"
 8078      706F7300 
 8079              	.LASF124:
 8080 00de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8080      52784275 
 8080      66666572 
 8080      00
 8081              	.LASF157:
 8082 00eb 74617267 		.ascii	"target_distance_cm\000"
 8082      65745F64 
 8082      69737461 
 8082      6E63655F 
 8082      636D00
 8083              	.LASF126:
 8084 00fe 74735F75 		.ascii	"ts_update\000"
 8084      70646174 
 8084      6500
 8085              	.LASF35:
 8086 0108 555F5452 		.ascii	"U_TRACK\000"
 8086      41434B00 
 8087              	.LASF40:
 8088 0110 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 8088      54524156 
 8088      45525345 
 8088      00
 8089              	.LASF80:
 8090 011d 72696768 		.ascii	"right\000"
 8090      7400
 8091              	.LASF120:
 8092 0123 73656E73 		.ascii	"sensorVals\000"
 8092      6F725661 
 8092      6C7300
 8093              	.LASF8:
 8094 012e 6C6F6E67 		.ascii	"long long int\000"
 8094      206C6F6E 
 8094      6720696E 
 8094      7400
 8095              	.LASF0:
 8096 013c 7369676E 		.ascii	"signed char\000"
 8096      65642063 
 8096      68617200 
 8097              	.LASF105:
 8098 0148 72696768 		.ascii	"rightSpeed\000"
 8098      74537065 
 8098      656400
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 167


 8099              	.LASF171:
 8100 0153 6D696E5F 		.ascii	"min_turn_quad\000"
 8100      7475726E 
 8100      5F717561 
 8100      6400
 8101              	.LASF168:
 8102 0161 66726F6E 		.ascii	"frontSensors\000"
 8102      7453656E 
 8102      736F7273 
 8102      00
 8103              	.LASF112:
 8104 016e 74726163 		.ascii	"trackLineU\000"
 8104      6B4C696E 
 8104      655500
 8105              	.LASF129:
 8106 0179 666C6167 		.ascii	"flag_ts_enc\000"
 8106      5F74735F 
 8106      656E6300 
 8107              	.LASF179:
 8108 0185 62756666 		.ascii	"buffer_state\000"
 8108      65725F73 
 8108      74617465 
 8108      00
 8109              	.LASF91:
 8110 0192 696E6974 		.ascii	"initTurnRight\000"
 8110      5475726E 
 8110      52696768 
 8110      7400
 8111              	.LASF151:
 8112 01a0 64656164 		.ascii	"deadzone\000"
 8112      7A6F6E65 
 8112      00
 8113              	.LASF135:
 8114 01a9 666C6167 		.ascii	"flag_KB_string\000"
 8114      5F4B425F 
 8114      73747269 
 8114      6E6700
 8115              	.LASF111:
 8116 01b8 74726163 		.ascii	"trackLineZ\000"
 8116      6B4C696E 
 8116      655A00
 8117              	.LASF88:
 8118 01c3 7475726E 		.ascii	"turnLeft\000"
 8118      4C656674 
 8118      00
 8119              	.LASF31:
 8120 01cc 73746174 		.ascii	"state\000"
 8120      6500
 8121              	.LASF4:
 8122 01d2 6C6F6E67 		.ascii	"long int\000"
 8122      20696E74 
 8122      00
 8123              	.LASF30:
 8124 01db 55545552 		.ascii	"UTURN\000"
 8124      4E00
 8125              	.LASF162:
 8126 01e1 71756164 		.ascii	"quad_per_cm\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 168


 8126      5F706572 
 8126      5F636D00 
 8127              	.LASF15:
 8128 01ed 75696E74 		.ascii	"uint8\000"
 8128      3800
 8129              	.LASF115:
 8130 01f3 636F6E76 		.ascii	"converted_val\000"
 8130      65727465 
 8130      645F7661 
 8130      6C00
 8131              	.LASF74:
 8132 0201 7365744C 		.ascii	"setLeftDir\000"
 8132      65667444 
 8132      697200
 8133              	.LASF21:
 8134 020c 646F7562 		.ascii	"double\000"
 8134      6C6500
 8135              	.LASF136:
 8136 0213 64617461 		.ascii	"dataready_flag\000"
 8136      72656164 
 8136      795F666C 
 8136      616700
 8137              	.LASF59:
 8138 0222 6164635F 		.ascii	"adc_isr\000"
 8138      69737200 
 8139              	.LASF125:
 8140 022a 74735F65 		.ascii	"ts_enc\000"
 8140      6E6300
 8141              	.LASF133:
 8142 0231 666C6167 		.ascii	"flag_rx\000"
 8142      5F727800 
 8143              	.LASF17:
 8144 0239 75696E74 		.ascii	"uint32\000"
 8144      333200
 8145              	.LASF72:
 8146 0240 62797465 		.ascii	"byte_packet\000"
 8146      5F706163 
 8146      6B657400 
 8147              	.LASF176:
 8148 024c 6C696E65 		.ascii	"line\000"
 8148      00
 8149              	.LASF144:
 8150 0251 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 8150      5F63616C 
 8150      635F7768 
 8150      65656C73 
 8150      70656564 
 8151              	.LASF57:
 8152 0266 67325F64 		.ascii	"g2_direction\000"
 8152      69726563 
 8152      74696F6E 
 8152      00
 8153              	.LASF173:
 8154 0273 70726576 		.ascii	"prevVoltage\000"
 8154      566F6C74 
 8154      61676500 
 8155              	.LASF145:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 169


 8156 027f 71756164 		.ascii	"quad_count1\000"
 8156      5F636F75 
 8156      6E743100 
 8157              	.LASF146:
 8158 028b 71756164 		.ascii	"quad_count2\000"
 8158      5F636F75 
 8158      6E743200 
 8159              	.LASF156:
 8160 0297 72696768 		.ascii	"rightSpeedLimit\000"
 8160      74537065 
 8160      65644C69 
 8160      6D697400 
 8161              	.LASF197:
 8162 02a7 696E7374 		.ascii	"instructionLength\000"
 8162      72756374 
 8162      696F6E4C 
 8162      656E6774 
 8162      6800
 8163              	.LASF39:
 8164 02b9 44455354 		.ascii	"DEST_TEST\000"
 8164      5F544553 
 8164      5400
 8165              	.LASF183:
 8166 02c3 74726163 		.ascii	"track_mode\000"
 8166      6B5F6D6F 
 8166      646500
 8167              	.LASF25:
 8168 02ce 52545552 		.ascii	"RTURN\000"
 8168      4E00
 8169              	.LASF192:
 8170 02d4 64657374 		.ascii	"destination\000"
 8170      696E6174 
 8170      696F6E00 
 8171              	.LASF45:
 8172 02e0 726F626F 		.ascii	"robot_orientation\000"
 8172      745F6F72 
 8172      69656E74 
 8172      6174696F 
 8172      6E00
 8173              	.LASF60:
 8174 02f2 6973725F 		.ascii	"isr_quad1\000"
 8174      71756164 
 8174      3100
 8175              	.LASF10:
 8176 02fc 756E7369 		.ascii	"unsigned int\000"
 8176      676E6564 
 8176      20696E74 
 8176      00
 8177              	.LASF154:
 8178 0309 72696768 		.ascii	"right_duty_cycle\000"
 8178      745F6475 
 8178      74795F63 
 8178      79636C65 
 8178      00
 8179              	.LASF203:
 8180 031a 64617461 		.ascii	"data_main\000"
 8180      5F6D6169 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 170


 8180      6E00
 8181              	.LASF172:
 8182 0324 6D61785F 		.ascii	"max_turn_quad\000"
 8182      7475726E 
 8182      5F717561 
 8182      6400
 8183              	.LASF188:
 8184 0332 73656E73 		.ascii	"sensorsDisabled\000"
 8184      6F727344 
 8184      69736162 
 8184      6C656400 
 8185              	.LASF139:
 8186 0342 666C6167 		.ascii	"flag_receive_ADC\000"
 8186      5F726563 
 8186      65697665 
 8186      5F414443 
 8186      00
 8187              	.LASF7:
 8188 0353 6C6F6E67 		.ascii	"long unsigned int\000"
 8188      20756E73 
 8188      69676E65 
 8188      6420696E 
 8188      7400
 8189              	.LASF95:
 8190 0365 696E6974 		.ascii	"initTrack\000"
 8190      54726163 
 8190      6B00
 8191              	.LASF92:
 8192 036f 696E6974 		.ascii	"initTurnU\000"
 8192      5475726E 
 8192      5500
 8193              	.LASF114:
 8194 0379 7363616C 		.ascii	"scalingFactor\000"
 8194      696E6746 
 8194      6163746F 
 8194      7200
 8195              	.LASF195:
 8196 0387 666F6F64 		.ascii	"food_length\000"
 8196      5F6C656E 
 8196      67746800 
 8197              	.LASF3:
 8198 0393 73686F72 		.ascii	"short unsigned int\000"
 8198      7420756E 
 8198      7369676E 
 8198      65642069 
 8198      6E7400
 8199              	.LASF78:
 8200 03a6 73657453 		.ascii	"setSpeed\000"
 8200      70656564 
 8200      00
 8201              	.LASF18:
 8202 03af 696E7438 		.ascii	"int8\000"
 8202      00
 8203              	.LASF23:
 8204 03b4 44524956 		.ascii	"DRIVE\000"
 8204      4500
 8205              	.LASF90:
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 171


 8206 03ba 696E6974 		.ascii	"initTurnLeft\000"
 8206      5475726E 
 8206      4C656674 
 8206      00
 8207              	.LASF102:
 8208 03c7 6368616E 		.ascii	"changeToBT\000"
 8208      6765546F 
 8208      425400
 8209              	.LASF27:
 8210 03d2 54524143 		.ascii	"TRACKING\000"
 8210      4B494E47 
 8210      00
 8211              	.LASF187:
 8212 03db 696E7374 		.ascii	"instructionCount\000"
 8212      72756374 
 8212      696F6E43 
 8212      6F756E74 
 8212      00
 8213              	.LASF169:
 8214 03ec 6C656674 		.ascii	"leftOn\000"
 8214      4F6E00
 8215              	.LASF121:
 8216 03f3 75736250 		.ascii	"usbPutString\000"
 8216      75745374 
 8216      72696E67 
 8216      00
 8217              	.LASF62:
 8218 0400 53746F70 		.ascii	"Stop_on_line\000"
 8218      5F6F6E5F 
 8218      6C696E65 
 8218      00
 8219              	.LASF34:
 8220 040d 43555256 		.ascii	"CURVE_TRACK\000"
 8220      455F5452 
 8220      41434B00 
 8221              	.LASF5:
 8222 0419 5F5F696E 		.ascii	"__int32_t\000"
 8222      7433325F 
 8222      7400
 8223              	.LASF36:
 8224 0423 53515541 		.ascii	"SQUARE_TRACK\000"
 8224      52455F54 
 8224      5241434B 
 8224      00
 8225              	.LASF128:
 8226 0430 74735F64 		.ascii	"ts_display\000"
 8226      6973706C 
 8226      617900
 8227              	.LASF123:
 8228 043b 75617274 		.ascii	"uart_set_PWM\000"
 8228      5F736574 
 8228      5F50574D 
 8228      00
 8229              	.LASF199:
 8230 0448 72696768 		.ascii	"rightTurnCount\000"
 8230      74547572 
 8230      6E436F75 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 172


 8230      6E7400
 8231              	.LASF66:
 8232 0457 6973725F 		.ascii	"isr_turn_timer\000"
 8232      7475726E 
 8232      5F74696D 
 8232      657200
 8233              	.LASF108:
 8234 0466 696E7465 		.ascii	"interCalc\000"
 8234      7243616C 
 8234      6300
 8235              	.LASF131:
 8236 0470 666C6167 		.ascii	"flag_ts_speed\000"
 8236      5F74735F 
 8236      73706565 
 8236      6400
 8237              	.LASF41:
 8238 047e 72737369 		.ascii	"rssi\000"
 8238      00
 8239              	.LASF52:
 8240 0483 67315F73 		.ascii	"g1_speed\000"
 8240      70656564 
 8240      00
 8241              	.LASF11:
 8242 048c 73697A65 		.ascii	"sizetype\000"
 8242      74797065 
 8242      00
 8243              	.LASF138:
 8244 0495 666C6167 		.ascii	"flag_print_rf\000"
 8244      5F707269 
 8244      6E745F72 
 8244      6600
 8245              	.LASF180:
 8246 04a3 73797374 		.ascii	"system_state\000"
 8246      656D5F73 
 8246      74617465 
 8246      00
 8247              	.LASF51:
 8248 04b0 67315F79 		.ascii	"g1_ypos\000"
 8248      706F7300 
 8249              	.LASF53:
 8250 04b8 67315F64 		.ascii	"g1_direction\000"
 8250      69726563 
 8250      74696F6E 
 8250      00
 8251              	.LASF103:
 8252 04c5 51756164 		.ascii	"Quad_Dec_response\000"
 8252      5F446563 
 8252      5F726573 
 8252      706F6E73 
 8252      6500
 8253              	.LASF24:
 8254 04d7 4C545552 		.ascii	"LTURN\000"
 8254      4E00
 8255              	.LASF166:
 8256 04dd 6272616B 		.ascii	"brakeFlag\000"
 8256      65466C61 
 8256      6700
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 173


 8257              	.LASF55:
 8258 04e7 67325F79 		.ascii	"g2_ypos\000"
 8258      706F7300 
 8259              	.LASF116:
 8260 04ef 72657375 		.ascii	"result_str\000"
 8260      6C745F73 
 8260      747200
 8261              	.LASF181:
 8262 04fa 70726576 		.ascii	"prev_movement_state\000"
 8262      5F6D6F76 
 8262      656D656E 
 8262      745F7374 
 8262      61746500 
 8263              	.LASF200:
 8264 050e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8264      4320342E 
 8264      392E3320 
 8264      32303135 
 8264      30333033 
 8265 0541 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8265      20726576 
 8265      6973696F 
 8265      6E203232 
 8265      31323230 
 8266 0574 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8266      66756E63 
 8266      74696F6E 
 8266      2D736563 
 8266      74696F6E 
 8267              	.LASF100:
 8268 059c 42545F72 		.ascii	"BT_rxInt\000"
 8268      78496E74 
 8268      00
 8269              	.LASF159:
 8270 05a5 74617267 		.ascii	"target_distance_quad\000"
 8270      65745F64 
 8270      69737461 
 8270      6E63655F 
 8270      71756164 
 8271              	.LASF137:
 8272 05ba 666C6167 		.ascii	"flag_rf_transmission_active\000"
 8272      5F72665F 
 8272      7472616E 
 8272      736D6973 
 8272      73696F6E 
 8273              	.LASF73:
 8274 05d6 73747269 		.ascii	"string_packet\000"
 8274      6E675F70 
 8274      61636B65 
 8274      7400
 8275              	.LASF20:
 8276 05e4 666C6F61 		.ascii	"float\000"
 8276      7400
 8277              	.LASF28:
 8278 05ea 54524143 		.ascii	"TRACKING_U\000"
 8278      4B494E47 
 8278      5F5500
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 174


 8279              	.LASF164:
 8280 05f5 696E6974 		.ascii	"initial_x_pos\000"
 8280      69616C5F 
 8280      785F706F 
 8280      7300
 8281              	.LASF86:
 8282 0603 64726976 		.ascii	"driveForwards\000"
 8282      65466F72 
 8282      77617264 
 8282      7300
 8283              	.LASF118:
 8284 0611 7072696E 		.ascii	"printString\000"
 8284      74537472 
 8284      696E6700 
 8285              	.LASF167:
 8286 061d 706F7274 		.ascii	"portOpen\000"
 8286      4F70656E 
 8286      00
 8287              	.LASF75:
 8288 0626 73657452 		.ascii	"setRightDir\000"
 8288      69676874 
 8288      44697200 
 8289              	.LASF147:
 8290 0632 6C617374 		.ascii	"last_quad_count1\000"
 8290      5F717561 
 8290      645F636F 
 8290      756E7431 
 8290      00
 8291              	.LASF148:
 8292 0643 6C617374 		.ascii	"last_quad_count2\000"
 8292      5F717561 
 8292      645F636F 
 8292      756E7432 
 8292      00
 8293              	.LASF29:
 8294 0654 54524143 		.ascii	"TRACKING_SOFT\000"
 8294      4B494E47 
 8294      5F534F46 
 8294      5400
 8295              	.LASF142:
 8296 0662 42494E5F 		.ascii	"BIN_ENABLED\000"
 8296      454E4142 
 8296      4C454400 
 8297              	.LASF13:
 8298 066e 696E7433 		.ascii	"int32_t\000"
 8298      325F7400 
 8299              	.LASF1:
 8300 0676 756E7369 		.ascii	"unsigned char\000"
 8300      676E6564 
 8300      20636861 
 8300      7200
 8301              	.LASF16:
 8302 0684 75696E74 		.ascii	"uint16\000"
 8302      313600
 8303              	.LASF38:
 8304 068b 52465F53 		.ascii	"RF_STOP\000"
 8304      544F5000 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 175


 8305              	.LASF85:
 8306 0693 6272616B 		.ascii	"brakeMotor\000"
 8306      654D6F74 
 8306      6F7200
 8307              	.LASF54:
 8308 069e 67325F78 		.ascii	"g2_xpos\000"
 8308      706F7300 
 8309              	.LASF109:
 8310 06a6 6E657874 		.ascii	"nextSpeed\000"
 8310      53706565 
 8310      6400
 8311              	.LASF2:
 8312 06b0 73686F72 		.ascii	"short int\000"
 8312      7420696E 
 8312      7400
 8313              	.LASF33:
 8314 06ba 4E4F5F54 		.ascii	"NO_TRACK\000"
 8314      5241434B 
 8314      00
 8315              	.LASF106:
 8316 06c3 7363616C 		.ascii	"scalingLeft\000"
 8316      696E674C 
 8316      65667400 
 8317              	.LASF76:
 8318 06cf 68616E64 		.ascii	"handle_rx_binary\000"
 8318      6C655F72 
 8318      785F6269 
 8318      6E617279 
 8318      00
 8319              	.LASF98:
 8320 06e0 7278496E 		.ascii	"rxInt\000"
 8320      7400
 8321              	.LASF184:
 8322 06e6 62797465 		.ascii	"byteCount\000"
 8322      436F756E 
 8322      7400
 8323              	.LASF64:
 8324 06f0 6973725F 		.ascii	"isr_adcTimer\000"
 8324      61646354 
 8324      696D6572 
 8324      00
 8325              	.LASF110:
 8326 06fd 74726163 		.ascii	"trackLine\000"
 8326      6B4C696E 
 8326      6500
 8327              	.LASF140:
 8328 0707 6164635F 		.ascii	"adc_result\000"
 8328      72657375 
 8328      6C7400
 8329              	.LASF84:
 8330 0712 6272616B 		.ascii	"brakeRight\000"
 8330      65526967 
 8330      687400
 8331              	.LASF132:
 8332 071d 666C6167 		.ascii	"flag_ts_display\000"
 8332      5F74735F 
 8332      64697370 
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 176


 8332      6C617900 
 8333              	.LASF26:
 8334 072d 53544F50 		.ascii	"STOPPED\000"
 8334      50454400 
 8335              	.LASF71:
 8336 0735 7061636B 		.ascii	"packet_bytes\000"
 8336      65745F62 
 8336      79746573 
 8336      00
 8337              	.LASF22:
 8338 0742 6C6F6E67 		.ascii	"long double\000"
 8338      20646F75 
 8338      626C6500 
 8339              	.LASF194:
 8340 074e 74726163 		.ascii	"tracked_direction\000"
 8340      6B65645F 
 8340      64697265 
 8340      6374696F 
 8340      6E00
 8341              	.LASF12:
 8342 0760 63686172 		.ascii	"char\000"
 8342      00
 8343              	.LASF32:
 8344 0765 6D6F6465 		.ascii	"mode\000"
 8344      00
 8345              	.LASF196:
 8346 076a 696E7374 		.ascii	"instructions\000"
 8346      72756374 
 8346      696F6E73 
 8346      00
 8347              	.LASF42:
 8348 0777 696E6465 		.ascii	"index\000"
 8348      7800
 8349              	.LASF189:
 8350 077d 666F6F64 		.ascii	"food_list\000"
 8350      5F6C6973 
 8350      7400
 8351              	.LASF68:
 8352 0787 61637469 		.ascii	"actionDebounce\000"
 8352      6F6E4465 
 8352      626F756E 
 8352      636500
 8353              	.LASF104:
 8354 0796 6C656674 		.ascii	"leftSpeed\000"
 8354      53706565 
 8354      6400
 8355              	.LASF6:
 8356 07a0 5F5F7569 		.ascii	"__uint32_t\000"
 8356      6E743332 
 8356      5F7400
 8357              	.LASF130:
 8358 07ab 666C6167 		.ascii	"flag_ts_update\000"
 8358      5F74735F 
 8358      75706461 
 8358      746500
 8359              	.LASF175:
 8360 07ba 64697370 		.ascii	"displaystring\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 177


 8360      6C617973 
 8360      7472696E 
 8360      6700
 8361              	.LASF47:
 8362 07c8 67305F79 		.ascii	"g0_ypos\000"
 8362      706F7300 
 8363              	.LASF155:
 8364 07d0 6C656674 		.ascii	"leftSpeedLimit\000"
 8364      53706565 
 8364      644C696D 
 8364      697400
 8365              	.LASF43:
 8366 07df 726F626F 		.ascii	"robot_xpos\000"
 8366      745F7870 
 8366      6F7300
 8367              	.LASF89:
 8368 07ea 7475726E 		.ascii	"turnU\000"
 8368      5500
 8369              	.LASF185:
 8370 07f0 7061636B 		.ascii	"packet\000"
 8370      657400
 8371              	.LASF82:
 8372 07f7 636F756E 		.ascii	"countsRight\000"
 8372      74735269 
 8372      67687400 
 8373              	.LASF117:
 8374 0803 7072696E 		.ascii	"print_RF\000"
 8374      745F5246 
 8374      00
 8375              	.LASF83:
 8376 080c 6272616B 		.ascii	"brakeLeft\000"
 8376      654C6566 
 8376      7400
 8377              	.LASF178:
 8378 0816 75736242 		.ascii	"usbBuffer\000"
 8378      75666665 
 8378      7200
 8379              	.LASF50:
 8380 0820 67315F78 		.ascii	"g1_xpos\000"
 8380      706F7300 
 8381              	.LASF99:
 8382 0828 72665F63 		.ascii	"rf_char\000"
 8382      68617200 
 8383              	.LASF163:
 8384 0830 696E6974 		.ascii	"initial_pos_valid\000"
 8384      69616C5F 
 8384      706F735F 
 8384      76616C69 
 8384      6400
 8385              	.LASF77:
 8386 0842 72657665 		.ascii	"reverseDirection\000"
 8386      72736544 
 8386      69726563 
 8386      74696F6E 
 8386      00
 8387              	.LASF174:
 8388 0853 70726576 		.ascii	"prevVoltage2\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 178


 8388      566F6C74 
 8388      61676532 
 8388      00
 8389              	.LASF93:
 8390 0860 696E6974 		.ascii	"initForward\000"
 8390      466F7277 
 8390      61726400 
 8391              	.LASF14:
 8392 086c 75696E74 		.ascii	"uint32_t\000"
 8392      33325F74 
 8392      00
 8393              	.LASF153:
 8394 0875 6C656674 		.ascii	"left_duty_cycle\000"
 8394      5F647574 
 8394      795F6379 
 8394      636C6500 
 8395              	.LASF70:
 8396 0885 6E657874 		.ascii	"nextStepDist\000"
 8396      53746570 
 8396      44697374 
 8396      00
 8397              	.LASF158:
 8398 0892 61636375 		.ascii	"accum_dist\000"
 8398      6D5F6469 
 8398      737400
 8399              	.LASF58:
 8400 089d 42545F74 		.ascii	"BT_txInt\000"
 8400      78496E74 
 8400      00
 8401              	.LASF182:
 8402 08a6 6D6F7665 		.ascii	"movement_state\000"
 8402      6D656E74 
 8402      5F737461 
 8402      746500
 8403              	.LASF170:
 8404 08b5 72696768 		.ascii	"rightOn\000"
 8404      744F6E00 
 8405              	.LASF143:
 8406 08bd 42545F45 		.ascii	"BT_ENABLED\000"
 8406      4E41424C 
 8406      454400
 8407              	.LASF122:
 8408 08c8 75736250 		.ascii	"usbPutChar\000"
 8408      75744368 
 8408      617200
 8409              	.LASF97:
 8410 08d3 696E6974 		.ascii	"inittrackLineZ\000"
 8410      74726163 
 8410      6B4C696E 
 8410      655A00
 8411              	.LASF107:
 8412 08e2 7363616C 		.ascii	"scalingRight\000"
 8412      696E6752 
 8412      69676874 
 8412      00
 8413              	.LASF160:
 8414 08ef 72656163 		.ascii	"reached_target\000"
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 179


 8414      6865645F 
 8414      74617267 
 8414      657400
 8415              	.LASF44:
 8416 08fe 726F626F 		.ascii	"robot_ypos\000"
 8416      745F7970 
 8416      6F7300
 8417              	.LASF19:
 8418 0909 696E7431 		.ascii	"int16\000"
 8418      3600
 8419              	.LASF81:
 8420 090f 636F756E 		.ascii	"countsLeft\000"
 8420      74734C65 
 8420      667400
 8421              	.LASF152:
 8422 091a 73746172 		.ascii	"start_turn_count\000"
 8422      745F7475 
 8422      726E5F63 
 8422      6F756E74 
 8422      00
 8423              	.LASF186:
 8424 092b 73706565 		.ascii	"speed\000"
 8424      6400
 8425              	.LASF161:
 8426 0931 6F766572 		.ascii	"overshot_target\000"
 8426      73686F74 
 8426      5F746172 
 8426      67657400 
 8427              	.LASF69:
 8428 0941 6E657874 		.ascii	"nextStep\000"
 8428      53746570 
 8428      00
 8429              	.LASF201:
 8430 094a 2E5C6D61 		.ascii	".\\main.c\000"
 8430      696E2E63 
 8430      00
 8431              	.LASF149:
 8432 0953 71756164 		.ascii	"quad_diff1\000"
 8432      5F646966 
 8432      663100
 8433              	.LASF150:
 8434 095e 71756164 		.ascii	"quad_diff2\000"
 8434      5F646966 
 8434      663200
 8435              	.LASF191:
 8436 0969 73746172 		.ascii	"start\000"
 8436      7400
 8437              	.LASF67:
 8438 096f 6D61696E 		.ascii	"main\000"
 8438      00
 8439              	.LASF79:
 8440 0974 6C656674 		.ascii	"left\000"
 8440      00
 8441              	.LASF48:
 8442 0979 67305F73 		.ascii	"g0_speed\000"
 8442      70656564 
 8442      00
ARM GAS  C:\Users\Logan\AppData\Local\Temp\ccIbzMSU.s 			page 180


 8443              	.LASF202:
 8444 0982 433A5C55 		.ascii	"C:\\Users\\Logan\\Desktop\\repos\\CS301-Team-Repo\\"
 8444      73657273 
 8444      5C4C6F67 
 8444      616E5C44 
 8444      65736B74 
 8445 09af 43533330 		.ascii	"CS301_Class.cydsn\000"
 8445      315F436C 
 8445      6173732E 
 8445      63796473 
 8445      6E00
 8446              	.LASF113:
 8447 09c1 7072696E 		.ascii	"print_ADC\000"
 8447      745F4144 
 8447      4300
 8448              	.LASF119:
 8449 09cb 72656164 		.ascii	"readFrontSensors\000"
 8449      46726F6E 
 8449      7453656E 
 8449      736F7273 
 8449      00
 8450              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
