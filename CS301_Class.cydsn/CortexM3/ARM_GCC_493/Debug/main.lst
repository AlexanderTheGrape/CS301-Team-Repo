ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	flag_print_rf
  95              		.bss
  96              		.type	flag_print_rf, %object
  97              		.size	flag_print_rf, 1
  98              	flag_print_rf:
  99 0012 00       		.space	1
 100              		.global	flag_receive_ADC
 101              		.type	flag_receive_ADC, %object
 102              		.size	flag_receive_ADC, 1
 103              	flag_receive_ADC:
 104 0013 00       		.space	1
 105              		.comm	adc_result,2,2
 106              		.global	direction
 107              		.type	direction, %object
 108              		.size	direction, 1
 109              	direction:
 110 0014 00       		.space	1
 111              		.global	BIN_ENABLED
 112              		.type	BIN_ENABLED, %object
 113              		.size	BIN_ENABLED, 1
 114              	BIN_ENABLED:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 3


 115 0015 00       		.space	1
 116              		.global	BT_ENABLED
 117              		.data
 118              		.type	BT_ENABLED, %object
 119              		.size	BT_ENABLED, 1
 120              	BT_ENABLED:
 121 0001 01       		.byte	1
 122              		.global	flag_calc_wheelspeed
 123              		.bss
 124              		.type	flag_calc_wheelspeed, %object
 125              		.size	flag_calc_wheelspeed, 1
 126              	flag_calc_wheelspeed:
 127 0016 00       		.space	1
 128              		.global	quad_count1
 129 0017 00       		.align	1
 130              		.type	quad_count1, %object
 131              		.size	quad_count1, 2
 132              	quad_count1:
 133 0018 0000     		.space	2
 134              		.global	quad_count2
 135              		.align	1
 136              		.type	quad_count2, %object
 137              		.size	quad_count2, 2
 138              	quad_count2:
 139 001a 0000     		.space	2
 140              		.global	last_quad_count1
 141              		.align	1
 142              		.type	last_quad_count1, %object
 143              		.size	last_quad_count1, 2
 144              	last_quad_count1:
 145 001c 0000     		.space	2
 146              		.global	last_quad_count2
 147              		.align	1
 148              		.type	last_quad_count2, %object
 149              		.size	last_quad_count2, 2
 150              	last_quad_count2:
 151 001e 0000     		.space	2
 152              		.global	quad_diff1
 153              		.align	1
 154              		.type	quad_diff1, %object
 155              		.size	quad_diff1, 2
 156              	quad_diff1:
 157 0020 0000     		.space	2
 158              		.global	quad_diff2
 159              		.align	1
 160              		.type	quad_diff2, %object
 161              		.size	quad_diff2, 2
 162              	quad_diff2:
 163 0022 0000     		.space	2
 164              		.global	deadzone
 165              		.type	deadzone, %object
 166              		.size	deadzone, 1
 167              	deadzone:
 168 0024 00       		.space	1
 169              		.global	start_turn_count
 170 0025 00       		.align	1
 171              		.type	start_turn_count, %object
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 4


 172              		.size	start_turn_count, 2
 173              	start_turn_count:
 174 0026 0000     		.space	2
 175              		.global	left_duty_cycle
 176              		.align	1
 177              		.type	left_duty_cycle, %object
 178              		.size	left_duty_cycle, 2
 179              	left_duty_cycle:
 180 0028 0000     		.space	2
 181              		.global	right_duty_cycle
 182              		.align	1
 183              		.type	right_duty_cycle, %object
 184              		.size	right_duty_cycle, 2
 185              	right_duty_cycle:
 186 002a 0000     		.space	2
 187              		.global	leftSpeedLimit
 188              		.align	1
 189              		.type	leftSpeedLimit, %object
 190              		.size	leftSpeedLimit, 2
 191              	leftSpeedLimit:
 192 002c 0000     		.space	2
 193              		.global	rightSpeedLimit
 194              		.align	1
 195              		.type	rightSpeedLimit, %object
 196              		.size	rightSpeedLimit, 2
 197              	rightSpeedLimit:
 198 002e 0000     		.space	2
 199              		.global	target_distance_cm
 200              		.data
 201              		.align	1
 202              		.type	target_distance_cm, %object
 203              		.size	target_distance_cm, 2
 204              	target_distance_cm:
 205 0002 6400     		.short	100
 206              		.global	accum_dist
 207              		.bss
 208              		.align	1
 209              		.type	accum_dist, %object
 210              		.size	accum_dist, 2
 211              	accum_dist:
 212 0030 0000     		.space	2
 213              		.global	target_distance_quad
 214              		.align	1
 215              		.type	target_distance_quad, %object
 216              		.size	target_distance_quad, 2
 217              	target_distance_quad:
 218 0032 0000     		.space	2
 219              		.global	quad_per_cm
 220              		.data
 221              		.align	2
 222              		.type	quad_per_cm, %object
 223              		.size	quad_per_cm, 4
 224              	quad_per_cm:
 225 0004 F0A73241 		.word	1093838832
 226              		.global	initial_pos_valid
 227              		.bss
 228              		.type	initial_pos_valid, %object
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 5


 229              		.size	initial_pos_valid, 1
 230              	initial_pos_valid:
 231 0034 00       		.space	1
 232              		.global	initial_x_pos
 233 0035 00       		.align	1
 234              		.type	initial_x_pos, %object
 235              		.size	initial_x_pos, 2
 236              	initial_x_pos:
 237 0036 0000     		.space	2
 238              		.global	initial_y_pos
 239              		.align	1
 240              		.type	initial_y_pos, %object
 241              		.size	initial_y_pos, 2
 242              	initial_y_pos:
 243 0038 0000     		.space	2
 244              		.comm	brakeFlag,1,1
 245              		.global	portOpen
 246              		.data
 247              		.type	portOpen, %object
 248              		.size	portOpen, 1
 249              	portOpen:
 250 0008 01       		.byte	1
 251              		.comm	prevVoltage,2,2
 252              		.comm	prevVoltage2,2,2
 253              		.global	displaystring
 254 0009 000000   		.align	2
 255              		.type	displaystring, %object
 256              		.size	displaystring, 64
 257              	displaystring:
 258 000c 43533330 		.ascii	"CS301 2016\012\000"
 258      31203230 
 258      31360A00 
 259 0018 00000000 		.space	52
 259      00000000 
 259      00000000 
 259      00000000 
 259      00000000 
 260              		.comm	line,64,4
 261              		.comm	entry,64,4
 262              		.comm	usbBuffer,64,4
 263              		.comm	buffer_state,32,4
 264              		.comm	system_state,32,4
 265              		.global	prev_movement_state
 266              		.type	prev_movement_state, %object
 267              		.size	prev_movement_state, 1
 268              	prev_movement_state:
 269 004c 03       		.byte	3
 270              		.global	movement_state
 271              		.type	movement_state, %object
 272              		.size	movement_state, 1
 273              	movement_state:
 274 004d 03       		.byte	3
 275              		.global	track_mode
 276              		.bss
 277              		.type	track_mode, %object
 278              		.size	track_mode, 1
 279              	track_mode:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 6


 280 003a 00       		.space	1
 281              		.global	byteCount
 282              		.type	byteCount, %object
 283              		.size	byteCount, 1
 284              	byteCount:
 285 003b 00       		.space	1
 286              		.comm	packet,2,4
 287              		.global	speed
 288              		.data
 289 004e 0000     		.align	3
 290              		.type	speed, %object
 291              		.size	speed, 8
 292              	speed:
 293 0050 00000000 		.word	0
 294 0054 00003040 		.word	1076887552
 295              		.comm	tracked_direction,1,1
 296              		.global	instructions
 297              		.bss
 298              		.align	2
 299              		.type	instructions, %object
 300              		.size	instructions, 800
 301              	instructions:
 302 003c 00000000 		.space	800
 302      00000000 
 302      00000000 
 302      00000000 
 302      00000000 
 303              		.global	instructionCount
 304              		.align	1
 305              		.type	instructionCount, %object
 306              		.size	instructionCount, 2
 307              	instructionCount:
 308 035c 0000     		.space	2
 309              		.global	sensorsDisabled
 310              		.type	sensorsDisabled, %object
 311              		.size	sensorsDisabled, 1
 312              	sensorsDisabled:
 313 035e 00       		.space	1
 314              		.global	robot_direction
 315              		.data
 316              		.type	robot_direction, %object
 317              		.size	robot_direction, 1
 318              	robot_direction:
 319 0058 04       		.byte	4
 320              		.global	path
 321              		.bss
 322 035f 00       		.align	2
 323              		.type	path, %object
 324              		.size	path, 2400
 325              	path:
 326 0360 00000000 		.space	2400
 326      00000000 
 326      00000000 
 326      00000000 
 326      00000000 
 327              		.global	start
 328              		.data
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 7


 329 0059 000000   		.align	2
 330              		.type	start, %object
 331              		.size	start, 2
 332              	start:
 333 005c 01       		.byte	1
 334 005d 01       		.byte	1
 335              		.global	destination
 336 005e 0000     		.align	2
 337              		.type	destination, %object
 338              		.size	destination, 2
 339              	destination:
 340 0060 0D       		.byte	13
 341 0061 11       		.byte	17
 342              		.global	map
 343 0062 0000     		.align	2
 344              		.type	map, %object
 345              		.size	map, 285
 346              	map:
 347 0064 01       		.byte	1
 348 0065 01       		.byte	1
 349 0066 01       		.byte	1
 350 0067 01       		.byte	1
 351 0068 01       		.byte	1
 352 0069 01       		.byte	1
 353 006a 01       		.byte	1
 354 006b 01       		.byte	1
 355 006c 01       		.byte	1
 356 006d 01       		.byte	1
 357 006e 01       		.byte	1
 358 006f 01       		.byte	1
 359 0070 01       		.byte	1
 360 0071 01       		.byte	1
 361 0072 01       		.byte	1
 362 0073 01       		.byte	1
 363 0074 01       		.byte	1
 364 0075 01       		.byte	1
 365 0076 01       		.byte	1
 366 0077 01       		.byte	1
 367 0078 00       		.byte	0
 368 0079 00       		.byte	0
 369 007a 00       		.byte	0
 370 007b 00       		.byte	0
 371 007c 00       		.byte	0
 372 007d 01       		.byte	1
 373 007e 00       		.byte	0
 374 007f 01       		.byte	1
 375 0080 00       		.byte	0
 376 0081 00       		.byte	0
 377 0082 00       		.byte	0
 378 0083 00       		.byte	0
 379 0084 00       		.byte	0
 380 0085 00       		.byte	0
 381 0086 00       		.byte	0
 382 0087 00       		.byte	0
 383 0088 00       		.byte	0
 384 0089 01       		.byte	1
 385 008a 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 8


 386 008b 01       		.byte	1
 387 008c 01       		.byte	1
 388 008d 01       		.byte	1
 389 008e 01       		.byte	1
 390 008f 00       		.byte	0
 391 0090 01       		.byte	1
 392 0091 00       		.byte	0
 393 0092 01       		.byte	1
 394 0093 00       		.byte	0
 395 0094 01       		.byte	1
 396 0095 00       		.byte	0
 397 0096 01       		.byte	1
 398 0097 01       		.byte	1
 399 0098 01       		.byte	1
 400 0099 01       		.byte	1
 401 009a 01       		.byte	1
 402 009b 00       		.byte	0
 403 009c 01       		.byte	1
 404 009d 01       		.byte	1
 405 009e 00       		.byte	0
 406 009f 00       		.byte	0
 407 00a0 00       		.byte	0
 408 00a1 01       		.byte	1
 409 00a2 00       		.byte	0
 410 00a3 01       		.byte	1
 411 00a4 00       		.byte	0
 412 00a5 00       		.byte	0
 413 00a6 00       		.byte	0
 414 00a7 01       		.byte	1
 415 00a8 00       		.byte	0
 416 00a9 00       		.byte	0
 417 00aa 00       		.byte	0
 418 00ab 00       		.byte	0
 419 00ac 00       		.byte	0
 420 00ad 01       		.byte	1
 421 00ae 00       		.byte	0
 422 00af 01       		.byte	1
 423 00b0 01       		.byte	1
 424 00b1 00       		.byte	0
 425 00b2 01       		.byte	1
 426 00b3 00       		.byte	0
 427 00b4 01       		.byte	1
 428 00b5 00       		.byte	0
 429 00b6 01       		.byte	1
 430 00b7 00       		.byte	0
 431 00b8 01       		.byte	1
 432 00b9 01       		.byte	1
 433 00ba 01       		.byte	1
 434 00bb 01       		.byte	1
 435 00bc 01       		.byte	1
 436 00bd 01       		.byte	1
 437 00be 01       		.byte	1
 438 00bf 00       		.byte	0
 439 00c0 01       		.byte	1
 440 00c1 00       		.byte	0
 441 00c2 01       		.byte	1
 442 00c3 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 9


 443 00c4 00       		.byte	0
 444 00c5 01       		.byte	1
 445 00c6 00       		.byte	0
 446 00c7 00       		.byte	0
 447 00c8 00       		.byte	0
 448 00c9 00       		.byte	0
 449 00ca 00       		.byte	0
 450 00cb 00       		.byte	0
 451 00cc 00       		.byte	0
 452 00cd 00       		.byte	0
 453 00ce 00       		.byte	0
 454 00cf 00       		.byte	0
 455 00d0 00       		.byte	0
 456 00d1 01       		.byte	1
 457 00d2 00       		.byte	0
 458 00d3 01       		.byte	1
 459 00d4 00       		.byte	0
 460 00d5 01       		.byte	1
 461 00d6 01       		.byte	1
 462 00d7 00       		.byte	0
 463 00d8 01       		.byte	1
 464 00d9 01       		.byte	1
 465 00da 01       		.byte	1
 466 00db 01       		.byte	1
 467 00dc 01       		.byte	1
 468 00dd 01       		.byte	1
 469 00de 01       		.byte	1
 470 00df 01       		.byte	1
 471 00e0 01       		.byte	1
 472 00e1 00       		.byte	0
 473 00e2 01       		.byte	1
 474 00e3 00       		.byte	0
 475 00e4 01       		.byte	1
 476 00e5 00       		.byte	0
 477 00e6 01       		.byte	1
 478 00e7 01       		.byte	1
 479 00e8 01       		.byte	1
 480 00e9 01       		.byte	1
 481 00ea 00       		.byte	0
 482 00eb 00       		.byte	0
 483 00ec 00       		.byte	0
 484 00ed 00       		.byte	0
 485 00ee 00       		.byte	0
 486 00ef 00       		.byte	0
 487 00f0 00       		.byte	0
 488 00f1 00       		.byte	0
 489 00f2 00       		.byte	0
 490 00f3 00       		.byte	0
 491 00f4 00       		.byte	0
 492 00f5 01       		.byte	1
 493 00f6 00       		.byte	0
 494 00f7 01       		.byte	1
 495 00f8 00       		.byte	0
 496 00f9 00       		.byte	0
 497 00fa 00       		.byte	0
 498 00fb 01       		.byte	1
 499 00fc 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 10


 500 00fd 01       		.byte	1
 501 00fe 01       		.byte	1
 502 00ff 01       		.byte	1
 503 0100 01       		.byte	1
 504 0101 01       		.byte	1
 505 0102 01       		.byte	1
 506 0103 00       		.byte	0
 507 0104 01       		.byte	1
 508 0105 01       		.byte	1
 509 0106 01       		.byte	1
 510 0107 01       		.byte	1
 511 0108 01       		.byte	1
 512 0109 00       		.byte	0
 513 010a 01       		.byte	1
 514 010b 01       		.byte	1
 515 010c 01       		.byte	1
 516 010d 00       		.byte	0
 517 010e 01       		.byte	1
 518 010f 01       		.byte	1
 519 0110 00       		.byte	0
 520 0111 00       		.byte	0
 521 0112 00       		.byte	0
 522 0113 00       		.byte	0
 523 0114 00       		.byte	0
 524 0115 00       		.byte	0
 525 0116 00       		.byte	0
 526 0117 00       		.byte	0
 527 0118 00       		.byte	0
 528 0119 00       		.byte	0
 529 011a 00       		.byte	0
 530 011b 01       		.byte	1
 531 011c 00       		.byte	0
 532 011d 00       		.byte	0
 533 011e 00       		.byte	0
 534 011f 01       		.byte	1
 535 0120 00       		.byte	0
 536 0121 01       		.byte	1
 537 0122 01       		.byte	1
 538 0123 00       		.byte	0
 539 0124 01       		.byte	1
 540 0125 01       		.byte	1
 541 0126 01       		.byte	1
 542 0127 01       		.byte	1
 543 0128 01       		.byte	1
 544 0129 00       		.byte	0
 545 012a 01       		.byte	1
 546 012b 01       		.byte	1
 547 012c 01       		.byte	1
 548 012d 00       		.byte	0
 549 012e 01       		.byte	1
 550 012f 00       		.byte	0
 551 0130 01       		.byte	1
 552 0131 00       		.byte	0
 553 0132 01       		.byte	1
 554 0133 00       		.byte	0
 555 0134 01       		.byte	1
 556 0135 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 11


 557 0136 00       		.byte	0
 558 0137 00       		.byte	0
 559 0138 00       		.byte	0
 560 0139 00       		.byte	0
 561 013a 00       		.byte	0
 562 013b 01       		.byte	1
 563 013c 00       		.byte	0
 564 013d 00       		.byte	0
 565 013e 00       		.byte	0
 566 013f 01       		.byte	1
 567 0140 00       		.byte	0
 568 0141 00       		.byte	0
 569 0142 00       		.byte	0
 570 0143 01       		.byte	1
 571 0144 00       		.byte	0
 572 0145 00       		.byte	0
 573 0146 00       		.byte	0
 574 0147 01       		.byte	1
 575 0148 01       		.byte	1
 576 0149 00       		.byte	0
 577 014a 01       		.byte	1
 578 014b 01       		.byte	1
 579 014c 01       		.byte	1
 580 014d 00       		.byte	0
 581 014e 01       		.byte	1
 582 014f 01       		.byte	1
 583 0150 01       		.byte	1
 584 0151 00       		.byte	0
 585 0152 01       		.byte	1
 586 0153 01       		.byte	1
 587 0154 01       		.byte	1
 588 0155 00       		.byte	0
 589 0156 01       		.byte	1
 590 0157 01       		.byte	1
 591 0158 01       		.byte	1
 592 0159 00       		.byte	0
 593 015a 01       		.byte	1
 594 015b 01       		.byte	1
 595 015c 00       		.byte	0
 596 015d 00       		.byte	0
 597 015e 00       		.byte	0
 598 015f 01       		.byte	1
 599 0160 00       		.byte	0
 600 0161 00       		.byte	0
 601 0162 00       		.byte	0
 602 0163 00       		.byte	0
 603 0164 00       		.byte	0
 604 0165 00       		.byte	0
 605 0166 00       		.byte	0
 606 0167 01       		.byte	1
 607 0168 00       		.byte	0
 608 0169 00       		.byte	0
 609 016a 00       		.byte	0
 610 016b 00       		.byte	0
 611 016c 00       		.byte	0
 612 016d 01       		.byte	1
 613 016e 01       		.byte	1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 12


 614 016f 01       		.byte	1
 615 0170 01       		.byte	1
 616 0171 01       		.byte	1
 617 0172 01       		.byte	1
 618 0173 01       		.byte	1
 619 0174 01       		.byte	1
 620 0175 01       		.byte	1
 621 0176 01       		.byte	1
 622 0177 01       		.byte	1
 623 0178 01       		.byte	1
 624 0179 01       		.byte	1
 625 017a 01       		.byte	1
 626 017b 01       		.byte	1
 627 017c 01       		.byte	1
 628 017d 01       		.byte	1
 629 017e 01       		.byte	1
 630 017f 01       		.byte	1
 631 0180 01       		.byte	1
 632              		.global	food_list
 633 0181 000000   		.align	2
 634              		.type	food_list, %object
 635              		.size	food_list, 12
 636              	food_list:
 637 0184 05       		.byte	5
 638 0185 0B       		.byte	11
 639 0186 01       		.byte	1
 640 0187 11       		.byte	17
 641 0188 0D       		.byte	13
 642 0189 01       		.byte	1
 643 018a 00000000 		.space	6
 643      0000
 644              		.global	food_length
 645              		.type	food_length, %object
 646              		.size	food_length, 1
 647              	food_length:
 648 0190 03       		.byte	3
 649 0191 00000000 		.section	.text.handle_rx_binary,"ax",%progbits
 649      000000
 650              		.align	2
 651              		.global	handle_rx_binary
 652              		.thumb
 653              		.thumb_func
 654              		.type	handle_rx_binary, %function
 655              	handle_rx_binary:
 656              	.LFB63:
 657              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * This code will test/use the functionality of all of the below peripherals.
   3:.\main.c      ****  * Fully working code: 
   4:.\main.c      ****  * PWM      : done
   5:.\main.c      ****     Cycle up and down when enabled
   6:.\main.c      ****  * Encoder  : 
   7:.\main.c      ****     Calibrate the wheels when enabled
   8:.\main.c      **** 
   9:.\main.c      ****  * ADC      : done
  10:.\main.c      ****     Prints the ADC reading (in volts) to UART
  11:.\main.c      **** 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 13


  12:.\main.c      ****  * USB      : port displays speed and position.
  13:.\main.c      **** 
  14:.\main.c      ****  * CMD: "PW xx"
  15:.\main.c      **** 
  16:.\main.c      ****  * Copyright Univ of Auckland, 2016
  17:.\main.c      ****  * All Rights Reserved
  18:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
  19:.\main.c      ****  *
  20:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  21:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  22:.\main.c      ****  *
  23:.\main.c      ****  * ========================================
  24:.\main.c      **** */
  25:.\main.c      **** #include <stdio.h>
  26:.\main.c      **** #include <string.h>
  27:.\main.c      **** #include <stdlib.h>
  28:.\main.c      **** #include <project.h>
  29:.\main.c      **** #include <math.h>
  30:.\main.c      **** //* ========================================
  31:.\main.c      **** #include "defines.h"
  32:.\main.c      **** #include "vars.h"
  33:.\main.c      **** #include "pathfinder.h"
  34:.\main.c      **** //* ========================================
  35:.\main.c      **** void usbPutString(char *s);
  36:.\main.c      **** void usbPutChar(char c);
  37:.\main.c      **** //void handle_usb();
  38:.\main.c      **** //* ========================================
  39:.\main.c      **** 
  40:.\main.c      **** #define QUAD_RATIO 0.99556
  41:.\main.c      **** 
  42:.\main.c      **** char instructions[DEFAULT_ARRAY_SIZE] = {0};
  43:.\main.c      **** uint16 instructionCount = 0;
  44:.\main.c      **** uint8 sensorsDisabled = 0;
  45:.\main.c      **** 
  46:.\main.c      **** uint8 robot_direction = 4;
  47:.\main.c      **** 
  48:.\main.c      **** uint8 path[DEFAULT_ARRAY_SIZE][3] = {0};
  49:.\main.c      **** uint8 start[2] = {1, 1};//(y, x) array starts at 0
  50:.\main.c      **** uint8 destination[2] = {13, 17};//(y, x)
  51:.\main.c      **** 
  52:.\main.c      **** 
  53:.\main.c      **** uint8 map[15][19] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  54:.\main.c      ****                     {1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1},
  55:.\main.c      ****                     {1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1},
  56:.\main.c      ****                     {1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
  57:.\main.c      ****                     {1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1},
  58:.\main.c      ****                     {1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
  59:.\main.c      ****                     {1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1},
  60:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1},
  61:.\main.c      ****                     {1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
  62:.\main.c      ****                     {1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1},
  63:.\main.c      ****                     {1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1},
  64:.\main.c      ****                     {1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1},
  65:.\main.c      ****                     {1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
  66:.\main.c      ****                     {1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
  67:.\main.c      ****                     {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
  68:.\main.c      **** //first number is the y coord, second is x
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 14


  69:.\main.c      **** //first number is row, second column
  70:.\main.c      **** 
  71:.\main.c      **** //uint8 food_list[6][2]= {{4,5},{7,1},{11,5},{10,11},{5,8},{17,2}};
  72:.\main.c      **** uint8 food_list[6][2]= {{5,11}, {1, 17}, {13, 1}};
  73:.\main.c      **** uint8 food_length = 3;
  74:.\main.c      **** 
  75:.\main.c      **** void changeToRF();
  76:.\main.c      **** void changeToBT();
  77:.\main.c      **** 
  78:.\main.c      **** void handle_rx_binary()
  79:.\main.c      **** {
 658              		.loc 1 79 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 32
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 89B0     		sub	sp, sp, #36
 667              		.cfi_def_cfa_offset 40
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
  80:.\main.c      ****     if(flag_rx == 1)
 670              		.loc 1 80 0
 671 0006 524B     		ldr	r3, .L21
 672 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 673 000a 012B     		cmp	r3, #1
 674 000c 40F09A80 		bne	.L1
 675              	.LBB2:
  81:.\main.c      ****     {    
  82:.\main.c      ****         flag_rx = 0;
 676              		.loc 1 82 0
 677 0010 4F4B     		ldr	r3, .L21
 678 0012 0022     		movs	r2, #0
 679 0014 1A70     		strb	r2, [r3]
  83:.\main.c      ****         
  84:.\main.c      ****         uint16 packet_bytes = (packet[1] << 8) | (packet[0]);
 680              		.loc 1 84 0
 681 0016 4F4B     		ldr	r3, .L21+4
 682 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 683 001a 1B02     		lsls	r3, r3, #8
 684 001c 9AB2     		uxth	r2, r3
 685 001e 4D4B     		ldr	r3, .L21+4
 686 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 687 0022 9BB2     		uxth	r3, r3
 688 0024 1343     		orrs	r3, r3, r2
 689 0026 9BB2     		uxth	r3, r3
 690 0028 FB83     		strh	r3, [r7, #30]	@ movhi
  85:.\main.c      ****         char byte_packet[12];
  86:.\main.c      ****         char string_packet[12];
  87:.\main.c      ****         
  88:.\main.c      ****         switch(byteCount)
 691              		.loc 1 88 0
 692 002a 4B4B     		ldr	r3, .L21+8
 693 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 694 002e 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 15


 695 0030 1E2B     		cmp	r3, #30
 696 0032 00F28780 		bhi	.L1
 697 0036 01A2     		adr	r2, .L5
 698 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 699              		.p2align 2
 700              	.L5:
 701 003c B9000000 		.word	.L4+1
 702 0040 45010000 		.word	.L1+1
 703 0044 CD000000 		.word	.L6+1
 704 0048 45010000 		.word	.L1+1
 705 004c D5000000 		.word	.L7+1
 706 0050 45010000 		.word	.L1+1
 707 0054 DD000000 		.word	.L8+1
 708 0058 45010000 		.word	.L1+1
 709 005c E5000000 		.word	.L9+1
 710 0060 45010000 		.word	.L1+1
 711 0064 ED000000 		.word	.L10+1
 712 0068 45010000 		.word	.L1+1
 713 006c F5000000 		.word	.L11+1
 714 0070 45010000 		.word	.L1+1
 715 0074 FD000000 		.word	.L12+1
 716 0078 45010000 		.word	.L1+1
 717 007c 05010000 		.word	.L13+1
 718 0080 45010000 		.word	.L1+1
 719 0084 0D010000 		.word	.L14+1
 720 0088 45010000 		.word	.L1+1
 721 008c 15010000 		.word	.L15+1
 722 0090 45010000 		.word	.L1+1
 723 0094 1D010000 		.word	.L16+1
 724 0098 45010000 		.word	.L1+1
 725 009c 25010000 		.word	.L17+1
 726 00a0 45010000 		.word	.L1+1
 727 00a4 2D010000 		.word	.L18+1
 728 00a8 45010000 		.word	.L1+1
 729 00ac 35010000 		.word	.L19+1
 730 00b0 45010000 		.word	.L1+1
 731 00b4 3D010000 		.word	.L20+1
 732              		.p2align 1
 733              	.L4:
  89:.\main.c      ****         {
  90:.\main.c      ****             case 4:
  91:.\main.c      ****                 buffer_state.rssi = packet[0];
 734              		.loc 1 91 0
 735 00b8 264B     		ldr	r3, .L21+4
 736 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 00bc DAB2     		uxtb	r2, r3
 738 00be 274B     		ldr	r3, .L21+12
 739 00c0 1A70     		strb	r2, [r3]
  92:.\main.c      ****                 buffer_state.index = packet[1];
 740              		.loc 1 92 0
 741 00c2 244B     		ldr	r3, .L21+4
 742 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 743 00c6 254B     		ldr	r3, .L21+12
 744 00c8 5A70     		strb	r2, [r3, #1]
  93:.\main.c      ****             break;
 745              		.loc 1 93 0
 746 00ca 3BE0     		b	.L1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 16


 747              	.L6:
  94:.\main.c      ****             case 6:
  95:.\main.c      ****                 buffer_state.robot_xpos = packet_bytes;
 748              		.loc 1 95 0
 749 00cc FA8B     		ldrh	r2, [r7, #30]
 750 00ce 234B     		ldr	r3, .L21+12
 751 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
  96:.\main.c      ****             break;
 752              		.loc 1 96 0
 753 00d2 37E0     		b	.L1
 754              	.L7:
  97:.\main.c      ****             case 8:
  98:.\main.c      ****                 buffer_state.robot_ypos = packet_bytes;
 755              		.loc 1 98 0
 756 00d4 FA8B     		ldrh	r2, [r7, #30]
 757 00d6 214B     		ldr	r3, .L21+12
 758 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
  99:.\main.c      ****             break;
 759              		.loc 1 99 0
 760 00da 33E0     		b	.L1
 761              	.L8:
 100:.\main.c      ****             case 10:
 101:.\main.c      ****                 buffer_state.robot_orientation = packet_bytes;
 762              		.loc 1 101 0
 763 00dc FA8B     		ldrh	r2, [r7, #30]
 764 00de 1F4B     		ldr	r3, .L21+12
 765 00e0 DA80     		strh	r2, [r3, #6]	@ movhi
 102:.\main.c      ****             break;
 766              		.loc 1 102 0
 767 00e2 2FE0     		b	.L1
 768              	.L9:
 103:.\main.c      ****             case 12:
 104:.\main.c      ****                 buffer_state.g0_xpos = packet_bytes;
 769              		.loc 1 104 0
 770 00e4 FA8B     		ldrh	r2, [r7, #30]
 771 00e6 1D4B     		ldr	r3, .L21+12
 772 00e8 1A81     		strh	r2, [r3, #8]	@ movhi
 105:.\main.c      ****             break;
 773              		.loc 1 105 0
 774 00ea 2BE0     		b	.L1
 775              	.L10:
 106:.\main.c      ****             case 14:
 107:.\main.c      ****                 buffer_state.g0_ypos = packet_bytes;
 776              		.loc 1 107 0
 777 00ec FA8B     		ldrh	r2, [r7, #30]
 778 00ee 1B4B     		ldr	r3, .L21+12
 779 00f0 5A81     		strh	r2, [r3, #10]	@ movhi
 108:.\main.c      ****             break;
 780              		.loc 1 108 0
 781 00f2 27E0     		b	.L1
 782              	.L11:
 109:.\main.c      ****             case 16:
 110:.\main.c      ****                 buffer_state.g0_speed = packet_bytes;
 783              		.loc 1 110 0
 784 00f4 FA8B     		ldrh	r2, [r7, #30]
 785 00f6 194B     		ldr	r3, .L21+12
 786 00f8 9A81     		strh	r2, [r3, #12]	@ movhi
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 17


 111:.\main.c      ****             break;
 787              		.loc 1 111 0
 788 00fa 23E0     		b	.L1
 789              	.L12:
 112:.\main.c      ****             case 18:
 113:.\main.c      ****                 buffer_state.g0_direction = packet_bytes;
 790              		.loc 1 113 0
 791 00fc FA8B     		ldrh	r2, [r7, #30]
 792 00fe 174B     		ldr	r3, .L21+12
 793 0100 DA81     		strh	r2, [r3, #14]	@ movhi
 114:.\main.c      ****             break;
 794              		.loc 1 114 0
 795 0102 1FE0     		b	.L1
 796              	.L13:
 115:.\main.c      ****             case 20:
 116:.\main.c      ****                 buffer_state.g1_xpos = packet_bytes;
 797              		.loc 1 116 0
 798 0104 FA8B     		ldrh	r2, [r7, #30]
 799 0106 154B     		ldr	r3, .L21+12
 800 0108 1A82     		strh	r2, [r3, #16]	@ movhi
 117:.\main.c      ****             break;
 801              		.loc 1 117 0
 802 010a 1BE0     		b	.L1
 803              	.L14:
 118:.\main.c      ****             case 22:
 119:.\main.c      ****                 buffer_state.g1_ypos = packet_bytes;
 804              		.loc 1 119 0
 805 010c FA8B     		ldrh	r2, [r7, #30]
 806 010e 134B     		ldr	r3, .L21+12
 807 0110 5A82     		strh	r2, [r3, #18]	@ movhi
 120:.\main.c      ****             break;
 808              		.loc 1 120 0
 809 0112 17E0     		b	.L1
 810              	.L15:
 121:.\main.c      ****             case 24:
 122:.\main.c      ****                 buffer_state.g1_speed = packet_bytes;
 811              		.loc 1 122 0
 812 0114 FA8B     		ldrh	r2, [r7, #30]
 813 0116 114B     		ldr	r3, .L21+12
 814 0118 9A82     		strh	r2, [r3, #20]	@ movhi
 123:.\main.c      ****             break;
 815              		.loc 1 123 0
 816 011a 13E0     		b	.L1
 817              	.L16:
 124:.\main.c      ****             case 26:
 125:.\main.c      ****                 buffer_state.g1_direction = packet_bytes;
 818              		.loc 1 125 0
 819 011c FA8B     		ldrh	r2, [r7, #30]
 820 011e 0F4B     		ldr	r3, .L21+12
 821 0120 DA82     		strh	r2, [r3, #22]	@ movhi
 126:.\main.c      ****             break;
 822              		.loc 1 126 0
 823 0122 0FE0     		b	.L1
 824              	.L17:
 127:.\main.c      ****             case 28:
 128:.\main.c      ****                 buffer_state.g2_xpos = packet_bytes;
 825              		.loc 1 128 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 18


 826 0124 FA8B     		ldrh	r2, [r7, #30]
 827 0126 0D4B     		ldr	r3, .L21+12
 828 0128 1A83     		strh	r2, [r3, #24]	@ movhi
 129:.\main.c      ****             break;
 829              		.loc 1 129 0
 830 012a 0BE0     		b	.L1
 831              	.L18:
 130:.\main.c      ****             case 30:
 131:.\main.c      ****                 buffer_state.g2_ypos = packet_bytes;
 832              		.loc 1 131 0
 833 012c FA8B     		ldrh	r2, [r7, #30]
 834 012e 0B4B     		ldr	r3, .L21+12
 835 0130 5A83     		strh	r2, [r3, #26]	@ movhi
 132:.\main.c      ****             break;
 836              		.loc 1 132 0
 837 0132 07E0     		b	.L1
 838              	.L19:
 133:.\main.c      ****             case 32:
 134:.\main.c      ****                 buffer_state.g2_speed = packet_bytes;
 839              		.loc 1 134 0
 840 0134 FA8B     		ldrh	r2, [r7, #30]
 841 0136 094B     		ldr	r3, .L21+12
 842 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 135:.\main.c      ****             break;
 843              		.loc 1 135 0
 844 013a 03E0     		b	.L1
 845              	.L20:
 136:.\main.c      ****             case 34:
 137:.\main.c      ****                 buffer_state.g2_direction = packet_bytes;
 846              		.loc 1 137 0
 847 013c FA8B     		ldrh	r2, [r7, #30]
 848 013e 074B     		ldr	r3, .L21+12
 849 0140 DA83     		strh	r2, [r3, #30]	@ movhi
 138:.\main.c      ****             break;
 850              		.loc 1 138 0
 851 0142 00BF     		nop
 852              	.L1:
 853              	.LBE2:
 139:.\main.c      ****         }
 140:.\main.c      ****     }
 141:.\main.c      **** }
 854              		.loc 1 141 0
 855 0144 2437     		adds	r7, r7, #36
 856              		.cfi_def_cfa_offset 4
 857 0146 BD46     		mov	sp, r7
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 0148 5DF8047B 		ldr	r7, [sp], #4
 861              		.cfi_restore 7
 862              		.cfi_def_cfa_offset 0
 863 014c 7047     		bx	lr
 864              	.L22:
 865 014e 00BF     		.align	2
 866              	.L21:
 867 0150 00000000 		.word	flag_rx
 868 0154 00000000 		.word	packet
 869 0158 00000000 		.word	byteCount
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 19


 870 015c 00000000 		.word	buffer_state
 871              		.cfi_endproc
 872              	.LFE63:
 873              		.size	handle_rx_binary, .-handle_rx_binary
 874              		.section	.text.setLeftDir,"ax",%progbits
 875              		.align	2
 876              		.global	setLeftDir
 877              		.thumb
 878              		.thumb_func
 879              		.type	setLeftDir, %function
 880              	setLeftDir:
 881              	.LFB64:
 142:.\main.c      **** 
 143:.\main.c      **** void setLeftDir(uint8 dir)
 144:.\main.c      **** {
 882              		.loc 1 144 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 82B0     		sub	sp, sp, #8
 891              		.cfi_def_cfa_offset 16
 892 0004 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 894 0006 0346     		mov	r3, r0
 895 0008 FB71     		strb	r3, [r7, #7]
 145:.\main.c      ****     M2_IN2_Write(dir);
 896              		.loc 1 145 0
 897 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 898 000c 1846     		mov	r0, r3
 899 000e FFF7FEFF 		bl	M2_IN2_Write
 146:.\main.c      **** }
 900              		.loc 1 146 0
 901 0012 0837     		adds	r7, r7, #8
 902              		.cfi_def_cfa_offset 8
 903 0014 BD46     		mov	sp, r7
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 0016 80BD     		pop	{r7, pc}
 907              		.cfi_endproc
 908              	.LFE64:
 909              		.size	setLeftDir, .-setLeftDir
 910              		.section	.text.setRightDir,"ax",%progbits
 911              		.align	2
 912              		.global	setRightDir
 913              		.thumb
 914              		.thumb_func
 915              		.type	setRightDir, %function
 916              	setRightDir:
 917              	.LFB65:
 147:.\main.c      **** 
 148:.\main.c      **** void setRightDir(uint8 dir)
 149:.\main.c      **** {
 918              		.loc 1 149 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 20


 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 8
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 82B0     		sub	sp, sp, #8
 927              		.cfi_def_cfa_offset 16
 928 0004 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 930 0006 0346     		mov	r3, r0
 931 0008 FB71     		strb	r3, [r7, #7]
 150:.\main.c      ****     M1_IN2_Write(dir);
 932              		.loc 1 150 0
 933 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 000c 1846     		mov	r0, r3
 935 000e FFF7FEFF 		bl	M1_IN2_Write
 151:.\main.c      **** }
 936              		.loc 1 151 0
 937 0012 0837     		adds	r7, r7, #8
 938              		.cfi_def_cfa_offset 8
 939 0014 BD46     		mov	sp, r7
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 0016 80BD     		pop	{r7, pc}
 943              		.cfi_endproc
 944              	.LFE65:
 945              		.size	setRightDir, .-setRightDir
 946              		.section	.rodata
 947              		.align	2
 948              	.LC0:
 949 0000 6469723A 		.ascii	"dir: %d\015\012\000"
 949      2025640D 
 949      0A00
 950              		.section	.text.reverseDirection,"ax",%progbits
 951              		.align	2
 952              		.global	reverseDirection
 953              		.thumb
 954              		.thumb_func
 955              		.type	reverseDirection, %function
 956              	reverseDirection:
 957              	.LFB66:
 152:.\main.c      **** 
 153:.\main.c      **** void reverseDirection()
 154:.\main.c      **** {
 958              		.loc 1 154 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 16
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962 0000 80B5     		push	{r7, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 84B0     		sub	sp, sp, #16
 967              		.cfi_def_cfa_offset 24
 968 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 21


 969              		.cfi_def_cfa_register 7
 155:.\main.c      ****     direction = !direction;
 970              		.loc 1 155 0
 971 0006 114B     		ldr	r3, .L26
 972 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 000a 002B     		cmp	r3, #0
 974 000c 0CBF     		ite	eq
 975 000e 0123     		moveq	r3, #1
 976 0010 0023     		movne	r3, #0
 977 0012 DBB2     		uxtb	r3, r3
 978 0014 1A46     		mov	r2, r3
 979 0016 0D4B     		ldr	r3, .L26
 980 0018 1A70     		strb	r2, [r3]
 156:.\main.c      ****     setLeftDir(direction);
 981              		.loc 1 156 0
 982 001a 0C4B     		ldr	r3, .L26
 983 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 001e 1846     		mov	r0, r3
 985 0020 FFF7FEFF 		bl	setLeftDir
 157:.\main.c      ****     setRightDir(direction);
 986              		.loc 1 157 0
 987 0024 094B     		ldr	r3, .L26
 988 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0028 1846     		mov	r0, r3
 990 002a FFF7FEFF 		bl	setRightDir
 158:.\main.c      ****     char mes[16];
 159:.\main.c      ****      sprintf(mes, "dir: %d\r\n", direction);
 991              		.loc 1 159 0
 992 002e 074B     		ldr	r3, .L26
 993 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 994 0032 1A46     		mov	r2, r3
 995 0034 3B46     		mov	r3, r7
 996 0036 1846     		mov	r0, r3
 997 0038 0549     		ldr	r1, .L26+4
 998 003a FFF7FEFF 		bl	sprintf
 160:.\main.c      ****     UART_PutString(mes);
 999              		.loc 1 160 0
 1000 003e 3B46     		mov	r3, r7
 1001 0040 1846     		mov	r0, r3
 1002 0042 FFF7FEFF 		bl	UART_PutString
 161:.\main.c      **** }
 1003              		.loc 1 161 0
 1004 0046 1037     		adds	r7, r7, #16
 1005              		.cfi_def_cfa_offset 8
 1006 0048 BD46     		mov	sp, r7
 1007              		.cfi_def_cfa_register 13
 1008              		@ sp needed
 1009 004a 80BD     		pop	{r7, pc}
 1010              	.L27:
 1011              		.align	2
 1012              	.L26:
 1013 004c 00000000 		.word	direction
 1014 0050 00000000 		.word	.LC0
 1015              		.cfi_endproc
 1016              	.LFE66:
 1017              		.size	reverseDirection, .-reverseDirection
 1018              		.global	__aeabi_dcmplt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 22


 1019              		.global	__aeabi_ddiv
 1020              		.global	__aeabi_d2iz
 1021              		.section	.text.setSpeed,"ax",%progbits
 1022              		.align	2
 1023              		.global	setSpeed
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	setSpeed, %function
 1027              	setSpeed:
 1028              	.LFB67:
 162:.\main.c      **** 
 163:.\main.c      **** void setSpeed(double left, double right){
 1029              		.loc 1 163 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 24
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 86B0     		sub	sp, sp, #24
 1038              		.cfi_def_cfa_offset 32
 1039 0004 00AF     		add	r7, sp, #0
 1040              		.cfi_def_cfa_register 7
 1041 0006 C7E90201 		strd	r0, [r7, #8]
 1042 000a C7E90023 		strd	r2, [r7]
 164:.\main.c      ****     if(right < 0.0)
 1043              		.loc 1 164 0
 1044 000e D7E90001 		ldrd	r0, [r7]
 1045 0012 4FF00002 		mov	r2, #0
 1046 0016 4FF00003 		mov	r3, #0
 1047 001a FFF7FEFF 		bl	__aeabi_dcmplt
 1048 001e 0346     		mov	r3, r0
 1049 0020 002B     		cmp	r3, #0
 1050 0022 10D0     		beq	.L37
 165:.\main.c      ****     {
 166:.\main.c      ****         //char mes[16];
 167:.\main.c      ****        // sprintf(mes, "right dir: %d\r\n", !direction);
 168:.\main.c      ****        // UART_PutString(mes);
 169:.\main.c      ****         setRightDir(!direction);
 1051              		.loc 1 169 0
 1052 0024 304B     		ldr	r3, .L39+8
 1053 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 0028 002B     		cmp	r3, #0
 1055 002a 0CBF     		ite	eq
 1056 002c 0123     		moveq	r3, #1
 1057 002e 0023     		movne	r3, #0
 1058 0030 DBB2     		uxtb	r3, r3
 1059 0032 1846     		mov	r0, r3
 1060 0034 FFF7FEFF 		bl	setRightDir
 170:.\main.c      ****         right = -right;
 1061              		.loc 1 170 0
 1062 0038 3B68     		ldr	r3, [r7]
 1063 003a 3B60     		str	r3, [r7]
 1064 003c 7B68     		ldr	r3, [r7, #4]
 1065 003e 83F00043 		eor	r3, r3, #-2147483648
 1066 0042 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 23


 1067 0044 04E0     		b	.L31
 1068              	.L37:
 171:.\main.c      ****     }
 172:.\main.c      ****     else setRightDir(direction);
 1069              		.loc 1 172 0
 1070 0046 284B     		ldr	r3, .L39+8
 1071 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 004a 1846     		mov	r0, r3
 1073 004c FFF7FEFF 		bl	setRightDir
 1074              	.L31:
 173:.\main.c      ****     
 174:.\main.c      ****     if(left < 0.0)
 1075              		.loc 1 174 0
 1076 0050 D7E90201 		ldrd	r0, [r7, #8]
 1077 0054 4FF00002 		mov	r2, #0
 1078 0058 4FF00003 		mov	r3, #0
 1079 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1080 0060 0346     		mov	r3, r0
 1081 0062 002B     		cmp	r3, #0
 1082 0064 10D0     		beq	.L38
 175:.\main.c      ****     {
 176:.\main.c      ****        // char mes[16];
 177:.\main.c      ****         //sprintf(mes, "left dir: %d\r\n", !direction);
 178:.\main.c      ****         //UART_PutString(mes);
 179:.\main.c      ****         setLeftDir(!direction);
 1083              		.loc 1 179 0
 1084 0066 204B     		ldr	r3, .L39+8
 1085 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 006a 002B     		cmp	r3, #0
 1087 006c 0CBF     		ite	eq
 1088 006e 0123     		moveq	r3, #1
 1089 0070 0023     		movne	r3, #0
 1090 0072 DBB2     		uxtb	r3, r3
 1091 0074 1846     		mov	r0, r3
 1092 0076 FFF7FEFF 		bl	setLeftDir
 180:.\main.c      ****         left = -left;
 1093              		.loc 1 180 0
 1094 007a BB68     		ldr	r3, [r7, #8]
 1095 007c BB60     		str	r3, [r7, #8]
 1096 007e FB68     		ldr	r3, [r7, #12]
 1097 0080 83F00043 		eor	r3, r3, #-2147483648
 1098 0084 FB60     		str	r3, [r7, #12]
 1099 0086 04E0     		b	.L34
 1100              	.L38:
 181:.\main.c      ****     }
 182:.\main.c      ****     else setLeftDir(direction);
 1101              		.loc 1 182 0
 1102 0088 174B     		ldr	r3, .L39+8
 1103 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 008c 1846     		mov	r0, r3
 1105 008e FFF7FEFF 		bl	setLeftDir
 1106              	.L34:
 183:.\main.c      ****     
 184:.\main.c      ****     int16 countsLeft = left/QUAD_RATIO;
 1107              		.loc 1 184 0
 1108 0092 D7E90201 		ldrd	r0, [r7, #8]
 1109 0096 12A3     		adr	r3, .L39
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 24


 1110 0098 D3E90023 		ldrd	r2, [r3]
 1111 009c FFF7FEFF 		bl	__aeabi_ddiv
 1112 00a0 0246     		mov	r2, r0
 1113 00a2 0B46     		mov	r3, r1
 1114 00a4 1046     		mov	r0, r2
 1115 00a6 1946     		mov	r1, r3
 1116 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 1117 00ac 0346     		mov	r3, r0
 1118 00ae FB82     		strh	r3, [r7, #22]	@ movhi
 185:.\main.c      ****     int16 countsRight = right/QUAD_RATIO;
 1119              		.loc 1 185 0
 1120 00b0 D7E90001 		ldrd	r0, [r7]
 1121 00b4 0AA3     		adr	r3, .L39
 1122 00b6 D3E90023 		ldrd	r2, [r3]
 1123 00ba FFF7FEFF 		bl	__aeabi_ddiv
 1124 00be 0246     		mov	r2, r0
 1125 00c0 0B46     		mov	r3, r1
 1126 00c2 1046     		mov	r0, r2
 1127 00c4 1946     		mov	r1, r3
 1128 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 1129 00ca 0346     		mov	r3, r0
 1130 00cc BB82     		strh	r3, [r7, #20]	@ movhi
 186:.\main.c      ****     
 187:.\main.c      ****     leftSpeedLimit = countsRight;
 1131              		.loc 1 187 0
 1132 00ce 074A     		ldr	r2, .L39+12
 1133 00d0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1134 00d2 1380     		strh	r3, [r2]	@ movhi
 188:.\main.c      ****     rightSpeedLimit = countsLeft;
 1135              		.loc 1 188 0
 1136 00d4 064A     		ldr	r2, .L39+16
 1137 00d6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1138 00d8 1380     		strh	r3, [r2]	@ movhi
 189:.\main.c      **** }
 1139              		.loc 1 189 0
 1140 00da 1837     		adds	r7, r7, #24
 1141              		.cfi_def_cfa_offset 8
 1142 00dc BD46     		mov	sp, r7
 1143              		.cfi_def_cfa_register 13
 1144              		@ sp needed
 1145 00de 80BD     		pop	{r7, pc}
 1146              	.L40:
 1147              		.align	3
 1148              	.L39:
 1149 00e0 969526A5 		.word	-1524197994
 1150 00e4 A0DBEF3F 		.word	1072683936
 1151 00e8 00000000 		.word	direction
 1152 00ec 00000000 		.word	leftSpeedLimit
 1153 00f0 00000000 		.word	rightSpeedLimit
 1154              		.cfi_endproc
 1155              	.LFE67:
 1156              		.size	setSpeed, .-setSpeed
 1157 00f4 AFF30080 		.section	.text.brakeLeft,"ax",%progbits
 1158              		.align	2
 1159              		.global	brakeLeft
 1160              		.thumb
 1161              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 25


 1162              		.type	brakeLeft, %function
 1163              	brakeLeft:
 1164              	.LFB68:
 190:.\main.c      **** 
 191:.\main.c      **** void brakeLeft()
 192:.\main.c      **** {
 1165              		.loc 1 192 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169 0000 80B5     		push	{r7, lr}
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 00AF     		add	r7, sp, #0
 1174              		.cfi_def_cfa_register 7
 193:.\main.c      ****     PWM_1_WriteCompare(0);
 1175              		.loc 1 193 0
 1176 0004 0020     		movs	r0, #0
 1177 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 194:.\main.c      ****     left_duty_cycle = 0;
 1178              		.loc 1 194 0
 1179 000a 024B     		ldr	r3, .L42
 1180 000c 0022     		movs	r2, #0
 1181 000e 1A80     		strh	r2, [r3]	@ movhi
 195:.\main.c      **** }
 1182              		.loc 1 195 0
 1183 0010 80BD     		pop	{r7, pc}
 1184              	.L43:
 1185 0012 00BF     		.align	2
 1186              	.L42:
 1187 0014 00000000 		.word	left_duty_cycle
 1188              		.cfi_endproc
 1189              	.LFE68:
 1190              		.size	brakeLeft, .-brakeLeft
 1191              		.section	.text.brakeRight,"ax",%progbits
 1192              		.align	2
 1193              		.global	brakeRight
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	brakeRight, %function
 1197              	brakeRight:
 1198              	.LFB69:
 196:.\main.c      **** 
 197:.\main.c      **** void brakeRight()
 198:.\main.c      **** {
 1199              		.loc 1 198 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 199:.\main.c      ****      PWM_2_WriteCompare(0);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 26


 1209              		.loc 1 199 0
 1210 0004 0020     		movs	r0, #0
 1211 0006 FFF7FEFF 		bl	PWM_2_WriteCompare
 200:.\main.c      ****      right_duty_cycle = 0;
 1212              		.loc 1 200 0
 1213 000a 024B     		ldr	r3, .L45
 1214 000c 0022     		movs	r2, #0
 1215 000e 1A80     		strh	r2, [r3]	@ movhi
 201:.\main.c      **** }
 1216              		.loc 1 201 0
 1217 0010 80BD     		pop	{r7, pc}
 1218              	.L46:
 1219 0012 00BF     		.align	2
 1220              	.L45:
 1221 0014 00000000 		.word	right_duty_cycle
 1222              		.cfi_endproc
 1223              	.LFE69:
 1224              		.size	brakeRight, .-brakeRight
 1225              		.section	.text.brakeMotor,"ax",%progbits
 1226              		.align	2
 1227              		.global	brakeMotor
 1228              		.thumb
 1229              		.thumb_func
 1230              		.type	brakeMotor, %function
 1231              	brakeMotor:
 1232              	.LFB70:
 202:.\main.c      **** 
 203:.\main.c      **** void brakeMotor(){
 1233              		.loc 1 203 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 1, uses_anonymous_args = 0
 1237 0000 80B5     		push	{r7, lr}
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
 1241 0002 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 204:.\main.c      ****     setSpeed(0, 0);
 1243              		.loc 1 204 0
 1244 0004 4FF00000 		mov	r0, #0
 1245 0008 4FF00001 		mov	r1, #0
 1246 000c 4FF00002 		mov	r2, #0
 1247 0010 4FF00003 		mov	r3, #0
 1248 0014 FFF7FEFF 		bl	setSpeed
 205:.\main.c      ****     brakeLeft();
 1249              		.loc 1 205 0
 1250 0018 FFF7FEFF 		bl	brakeLeft
 206:.\main.c      ****     brakeRight();
 1251              		.loc 1 206 0
 1252 001c FFF7FEFF 		bl	brakeRight
 207:.\main.c      **** }
 1253              		.loc 1 207 0
 1254 0020 80BD     		pop	{r7, pc}
 1255              		.cfi_endproc
 1256              	.LFE70:
 1257              		.size	brakeMotor, .-brakeMotor
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 27


 1258 0022 00BF     		.section	.text.driveForwards,"ax",%progbits
 1259              		.align	2
 1260              		.global	driveForwards
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	driveForwards, %function
 1264              	driveForwards:
 1265              	.LFB71:
 208:.\main.c      **** 
 209:.\main.c      **** void driveForwards()
 210:.\main.c      **** {
 1266              		.loc 1 210 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 211:.\main.c      ****     setSpeed(speed, speed);
 1276              		.loc 1 211 0
 1277 0004 044B     		ldr	r3, .L49
 1278 0006 D3E90001 		ldrd	r0, [r3]
 1279 000a 034B     		ldr	r3, .L49
 1280 000c D3E90023 		ldrd	r2, [r3]
 1281 0010 FFF7FEFF 		bl	setSpeed
 212:.\main.c      **** }
 1282              		.loc 1 212 0
 1283 0014 80BD     		pop	{r7, pc}
 1284              	.L50:
 1285 0016 00BF     		.align	2
 1286              	.L49:
 1287 0018 00000000 		.word	speed
 1288              		.cfi_endproc
 1289              	.LFE71:
 1290              		.size	driveForwards, .-driveForwards
 1291              		.global	__aeabi_dadd
 1292              		.section	.text.turnRight,"ax",%progbits
 1293              		.align	2
 1294              		.global	turnRight
 1295              		.thumb
 1296              		.thumb_func
 1297              		.type	turnRight, %function
 1298              	turnRight:
 1299              	.LFB72:
 213:.\main.c      **** 
 214:.\main.c      **** void turnRight()
 215:.\main.c      **** {
 1300              		.loc 1 215 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 80B5     		push	{r7, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 7, -8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 28


 1307              		.cfi_offset 14, -4
 1308 0002 00AF     		add	r7, sp, #0
 1309              		.cfi_def_cfa_register 7
 216:.\main.c      ****     setSpeed(0,speed*2.0);
 1310              		.loc 1 216 0
 1311 0004 074B     		ldr	r3, .L52
 1312 0006 D3E90023 		ldrd	r2, [r3]
 1313 000a 1046     		mov	r0, r2
 1314 000c 1946     		mov	r1, r3
 1315 000e FFF7FEFF 		bl	__aeabi_dadd
 1316 0012 0246     		mov	r2, r0
 1317 0014 0B46     		mov	r3, r1
 1318 0016 4FF00000 		mov	r0, #0
 1319 001a 4FF00001 		mov	r1, #0
 1320 001e FFF7FEFF 		bl	setSpeed
 217:.\main.c      **** }
 1321              		.loc 1 217 0
 1322 0022 80BD     		pop	{r7, pc}
 1323              	.L53:
 1324              		.align	2
 1325              	.L52:
 1326 0024 00000000 		.word	speed
 1327              		.cfi_endproc
 1328              	.LFE72:
 1329              		.size	turnRight, .-turnRight
 1330              		.section	.text.turnLeft,"ax",%progbits
 1331              		.align	2
 1332              		.global	turnLeft
 1333              		.thumb
 1334              		.thumb_func
 1335              		.type	turnLeft, %function
 1336              	turnLeft:
 1337              	.LFB73:
 218:.\main.c      **** 
 219:.\main.c      **** void turnLeft()
 220:.\main.c      **** {
 1338              		.loc 1 220 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
 1342 0000 80B5     		push	{r7, lr}
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
 1346 0002 00AF     		add	r7, sp, #0
 1347              		.cfi_def_cfa_register 7
 221:.\main.c      ****     setSpeed(speed*2.0,0);
 1348              		.loc 1 221 0
 1349 0004 084B     		ldr	r3, .L55
 1350 0006 D3E90023 		ldrd	r2, [r3]
 1351 000a 1046     		mov	r0, r2
 1352 000c 1946     		mov	r1, r3
 1353 000e FFF7FEFF 		bl	__aeabi_dadd
 1354 0012 0246     		mov	r2, r0
 1355 0014 0B46     		mov	r3, r1
 1356 0016 1046     		mov	r0, r2
 1357 0018 1946     		mov	r1, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 29


 1358 001a 4FF00002 		mov	r2, #0
 1359 001e 4FF00003 		mov	r3, #0
 1360 0022 FFF7FEFF 		bl	setSpeed
 222:.\main.c      **** }
 1361              		.loc 1 222 0
 1362 0026 80BD     		pop	{r7, pc}
 1363              	.L56:
 1364              		.align	2
 1365              	.L55:
 1366 0028 00000000 		.word	speed
 1367              		.cfi_endproc
 1368              	.LFE73:
 1369              		.size	turnLeft, .-turnLeft
 1370              		.section	.text.turnU,"ax",%progbits
 1371              		.align	2
 1372              		.global	turnU
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	turnU, %function
 1376              	turnU:
 1377              	.LFB74:
 223:.\main.c      **** 
 224:.\main.c      **** void turnU()
 225:.\main.c      **** {
 1378              		.loc 1 225 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 0000 B0B5     		push	{r4, r5, r7, lr}
 1383              		.cfi_def_cfa_offset 16
 1384              		.cfi_offset 4, -16
 1385              		.cfi_offset 5, -12
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 226:.\main.c      ****     setSpeed(-speed*2.0,speed*2.0);
 1390              		.loc 1 226 0
 1391 0004 0E4B     		ldr	r3, .L58
 1392 0006 D3E90023 		ldrd	r2, [r3]
 1393 000a 1446     		mov	r4, r2
 1394 000c 83F00045 		eor	r5, r3, #-2147483648
 1395 0010 2046     		mov	r0, r4
 1396 0012 2946     		mov	r1, r5
 1397 0014 2246     		mov	r2, r4
 1398 0016 2B46     		mov	r3, r5
 1399 0018 FFF7FEFF 		bl	__aeabi_dadd
 1400 001c 0246     		mov	r2, r0
 1401 001e 0B46     		mov	r3, r1
 1402 0020 1446     		mov	r4, r2
 1403 0022 1D46     		mov	r5, r3
 1404 0024 064B     		ldr	r3, .L58
 1405 0026 D3E90023 		ldrd	r2, [r3]
 1406 002a 1046     		mov	r0, r2
 1407 002c 1946     		mov	r1, r3
 1408 002e FFF7FEFF 		bl	__aeabi_dadd
 1409 0032 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 30


 1410 0034 0B46     		mov	r3, r1
 1411 0036 2046     		mov	r0, r4
 1412 0038 2946     		mov	r1, r5
 1413 003a FFF7FEFF 		bl	setSpeed
 227:.\main.c      **** }
 1414              		.loc 1 227 0
 1415 003e B0BD     		pop	{r4, r5, r7, pc}
 1416              	.L59:
 1417              		.align	2
 1418              	.L58:
 1419 0040 00000000 		.word	speed
 1420              		.cfi_endproc
 1421              	.LFE74:
 1422              		.size	turnU, .-turnU
 1423              		.section	.text.initTurnLeft,"ax",%progbits
 1424              		.align	2
 1425              		.global	initTurnLeft
 1426              		.thumb
 1427              		.thumb_func
 1428              		.type	initTurnLeft, %function
 1429              	initTurnLeft:
 1430              	.LFB75:
 228:.\main.c      **** 
 229:.\main.c      **** void initTurnLeft(){
 1431              		.loc 1 229 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0002 00AF     		add	r7, sp, #0
 1440              		.cfi_def_cfa_register 7
 230:.\main.c      ****     Timer_2_Stop();
 1441              		.loc 1 230 0
 1442 0004 FFF7FEFF 		bl	Timer_2_Stop
 231:.\main.c      ****     prev_movement_state = movement_state;
 1443              		.loc 1 231 0
 1444 0008 084B     		ldr	r3, .L61
 1445 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1446 000c 084B     		ldr	r3, .L61+4
 1447 000e 1A70     		strb	r2, [r3]
 232:.\main.c      ****     movement_state = LTURN;
 1448              		.loc 1 232 0
 1449 0010 064B     		ldr	r3, .L61
 1450 0012 0122     		movs	r2, #1
 1451 0014 1A70     		strb	r2, [r3]
 233:.\main.c      ****     brakeLeft();
 1452              		.loc 1 233 0
 1453 0016 FFF7FEFF 		bl	brakeLeft
 234:.\main.c      ****     start_turn_count = QuadDec_M2_GetCounter();
 1454              		.loc 1 234 0
 1455 001a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 1456 001e 0346     		mov	r3, r0
 1457 0020 1A46     		mov	r2, r3
 1458 0022 044B     		ldr	r3, .L61+8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 31


 1459 0024 1A80     		strh	r2, [r3]	@ movhi
 235:.\main.c      ****     Timer_2_Start();
 1460              		.loc 1 235 0
 1461 0026 FFF7FEFF 		bl	Timer_2_Start
 236:.\main.c      **** }
 1462              		.loc 1 236 0
 1463 002a 80BD     		pop	{r7, pc}
 1464              	.L62:
 1465              		.align	2
 1466              	.L61:
 1467 002c 00000000 		.word	movement_state
 1468 0030 00000000 		.word	prev_movement_state
 1469 0034 00000000 		.word	start_turn_count
 1470              		.cfi_endproc
 1471              	.LFE75:
 1472              		.size	initTurnLeft, .-initTurnLeft
 1473              		.section	.text.initTurnRight,"ax",%progbits
 1474              		.align	2
 1475              		.global	initTurnRight
 1476              		.thumb
 1477              		.thumb_func
 1478              		.type	initTurnRight, %function
 1479              	initTurnRight:
 1480              	.LFB76:
 237:.\main.c      **** 
 238:.\main.c      **** void initTurnRight(){
 1481              		.loc 1 238 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485 0000 80B5     		push	{r7, lr}
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 7, -8
 1488              		.cfi_offset 14, -4
 1489 0002 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 239:.\main.c      ****     Timer_2_Stop();
 1491              		.loc 1 239 0
 1492 0004 FFF7FEFF 		bl	Timer_2_Stop
 240:.\main.c      ****     prev_movement_state = movement_state;
 1493              		.loc 1 240 0
 1494 0008 084B     		ldr	r3, .L64
 1495 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1496 000c 084B     		ldr	r3, .L64+4
 1497 000e 1A70     		strb	r2, [r3]
 241:.\main.c      ****     movement_state = RTURN;
 1498              		.loc 1 241 0
 1499 0010 064B     		ldr	r3, .L64
 1500 0012 0222     		movs	r2, #2
 1501 0014 1A70     		strb	r2, [r3]
 242:.\main.c      ****     brakeRight();
 1502              		.loc 1 242 0
 1503 0016 FFF7FEFF 		bl	brakeRight
 243:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1504              		.loc 1 243 0
 1505 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1506 001e 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 32


 1507 0020 1A46     		mov	r2, r3
 1508 0022 044B     		ldr	r3, .L64+8
 1509 0024 1A80     		strh	r2, [r3]	@ movhi
 244:.\main.c      ****     Timer_2_Start();
 1510              		.loc 1 244 0
 1511 0026 FFF7FEFF 		bl	Timer_2_Start
 245:.\main.c      **** }
 1512              		.loc 1 245 0
 1513 002a 80BD     		pop	{r7, pc}
 1514              	.L65:
 1515              		.align	2
 1516              	.L64:
 1517 002c 00000000 		.word	movement_state
 1518 0030 00000000 		.word	prev_movement_state
 1519 0034 00000000 		.word	start_turn_count
 1520              		.cfi_endproc
 1521              	.LFE76:
 1522              		.size	initTurnRight, .-initTurnRight
 1523              		.section	.text.initTurnU,"ax",%progbits
 1524              		.align	2
 1525              		.global	initTurnU
 1526              		.thumb
 1527              		.thumb_func
 1528              		.type	initTurnU, %function
 1529              	initTurnU:
 1530              	.LFB77:
 246:.\main.c      **** 
 247:.\main.c      **** void initTurnU(){
 1531              		.loc 1 247 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 80B5     		push	{r7, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 00AF     		add	r7, sp, #0
 1540              		.cfi_def_cfa_register 7
 248:.\main.c      ****     Timer_2_Stop();
 1541              		.loc 1 248 0
 1542 0004 FFF7FEFF 		bl	Timer_2_Stop
 249:.\main.c      ****     prev_movement_state = movement_state;
 1543              		.loc 1 249 0
 1544 0008 084B     		ldr	r3, .L67
 1545 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1546 000c 084B     		ldr	r3, .L67+4
 1547 000e 1A70     		strb	r2, [r3]
 250:.\main.c      ****     movement_state = UTURN;
 1548              		.loc 1 250 0
 1549 0010 064B     		ldr	r3, .L67
 1550 0012 0722     		movs	r2, #7
 1551 0014 1A70     		strb	r2, [r3]
 251:.\main.c      ****     brakeMotor();
 1552              		.loc 1 251 0
 1553 0016 FFF7FEFF 		bl	brakeMotor
 252:.\main.c      ****     start_turn_count = QuadDec_M1_GetCounter();
 1554              		.loc 1 252 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 33


 1555 001a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1556 001e 0346     		mov	r3, r0
 1557 0020 1A46     		mov	r2, r3
 1558 0022 044B     		ldr	r3, .L67+8
 1559 0024 1A80     		strh	r2, [r3]	@ movhi
 253:.\main.c      ****     Timer_2_Start();
 1560              		.loc 1 253 0
 1561 0026 FFF7FEFF 		bl	Timer_2_Start
 254:.\main.c      **** }
 1562              		.loc 1 254 0
 1563 002a 80BD     		pop	{r7, pc}
 1564              	.L68:
 1565              		.align	2
 1566              	.L67:
 1567 002c 00000000 		.word	movement_state
 1568 0030 00000000 		.word	prev_movement_state
 1569 0034 00000000 		.word	start_turn_count
 1570              		.cfi_endproc
 1571              	.LFE77:
 1572              		.size	initTurnU, .-initTurnU
 1573              		.section	.text.initForward,"ax",%progbits
 1574              		.align	2
 1575              		.global	initForward
 1576              		.thumb
 1577              		.thumb_func
 1578              		.type	initForward, %function
 1579              	initForward:
 1580              	.LFB78:
 255:.\main.c      **** 
 256:.\main.c      **** void initForward(){
 1581              		.loc 1 256 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 1, uses_anonymous_args = 0
 1585 0000 80B5     		push	{r7, lr}
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 7, -8
 1588              		.cfi_offset 14, -4
 1589 0002 00AF     		add	r7, sp, #0
 1590              		.cfi_def_cfa_register 7
 257:.\main.c      ****     brakeMotor();
 1591              		.loc 1 257 0
 1592 0004 FFF7FEFF 		bl	brakeMotor
 258:.\main.c      ****     movement_state = DRIVE;
 1593              		.loc 1 258 0
 1594 0008 014B     		ldr	r3, .L70
 1595 000a 0022     		movs	r2, #0
 1596 000c 1A70     		strb	r2, [r3]
 259:.\main.c      **** }
 1597              		.loc 1 259 0
 1598 000e 80BD     		pop	{r7, pc}
 1599              	.L71:
 1600              		.align	2
 1601              	.L70:
 1602 0010 00000000 		.word	movement_state
 1603              		.cfi_endproc
 1604              	.LFE78:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 34


 1605              		.size	initForward, .-initForward
 1606              		.section	.text.initBrake,"ax",%progbits
 1607              		.align	2
 1608              		.global	initBrake
 1609              		.thumb
 1610              		.thumb_func
 1611              		.type	initBrake, %function
 1612              	initBrake:
 1613              	.LFB79:
 260:.\main.c      **** 
 261:.\main.c      **** void initBrake(){
 1614              		.loc 1 261 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 1, uses_anonymous_args = 0
 1618              		@ link register save eliminated.
 1619 0000 80B4     		push	{r7}
 1620              		.cfi_def_cfa_offset 4
 1621              		.cfi_offset 7, -4
 1622 0002 00AF     		add	r7, sp, #0
 1623              		.cfi_def_cfa_register 7
 262:.\main.c      ****     movement_state = STOPPED;
 1624              		.loc 1 262 0
 1625 0004 034B     		ldr	r3, .L73
 1626 0006 0322     		movs	r2, #3
 1627 0008 1A70     		strb	r2, [r3]
 263:.\main.c      **** }
 1628              		.loc 1 263 0
 1629 000a BD46     		mov	sp, r7
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 000c 5DF8047B 		ldr	r7, [sp], #4
 1633              		.cfi_restore 7
 1634              		.cfi_def_cfa_offset 0
 1635 0010 7047     		bx	lr
 1636              	.L74:
 1637 0012 00BF     		.align	2
 1638              	.L73:
 1639 0014 00000000 		.word	movement_state
 1640              		.cfi_endproc
 1641              	.LFE79:
 1642              		.size	initBrake, .-initBrake
 1643              		.section	.text.initTrack,"ax",%progbits
 1644              		.align	2
 1645              		.global	initTrack
 1646              		.thumb
 1647              		.thumb_func
 1648              		.type	initTrack, %function
 1649              	initTrack:
 1650              	.LFB80:
 264:.\main.c      **** 
 265:.\main.c      **** void initTrack()
 266:.\main.c      **** {
 1651              		.loc 1 266 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 35


 1655              		@ link register save eliminated.
 1656 0000 80B4     		push	{r7}
 1657              		.cfi_def_cfa_offset 4
 1658              		.cfi_offset 7, -4
 1659 0002 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
 267:.\main.c      ****     movement_state = TRACKING;
 1661              		.loc 1 267 0
 1662 0004 034B     		ldr	r3, .L76
 1663 0006 0422     		movs	r2, #4
 1664 0008 1A70     		strb	r2, [r3]
 268:.\main.c      **** }
 1665              		.loc 1 268 0
 1666 000a BD46     		mov	sp, r7
 1667              		.cfi_def_cfa_register 13
 1668              		@ sp needed
 1669 000c 5DF8047B 		ldr	r7, [sp], #4
 1670              		.cfi_restore 7
 1671              		.cfi_def_cfa_offset 0
 1672 0010 7047     		bx	lr
 1673              	.L77:
 1674 0012 00BF     		.align	2
 1675              	.L76:
 1676 0014 00000000 		.word	movement_state
 1677              		.cfi_endproc
 1678              	.LFE80:
 1679              		.size	initTrack, .-initTrack
 1680              		.section	.text.initTrackU,"ax",%progbits
 1681              		.align	2
 1682              		.global	initTrackU
 1683              		.thumb
 1684              		.thumb_func
 1685              		.type	initTrackU, %function
 1686              	initTrackU:
 1687              	.LFB81:
 269:.\main.c      **** 
 270:.\main.c      **** void initTrackU(){
 1688              		.loc 1 270 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 1693 0000 80B4     		push	{r7}
 1694              		.cfi_def_cfa_offset 4
 1695              		.cfi_offset 7, -4
 1696 0002 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
 271:.\main.c      ****     movement_state = TRACKING_U;
 1698              		.loc 1 271 0
 1699 0004 034B     		ldr	r3, .L79
 1700 0006 0522     		movs	r2, #5
 1701 0008 1A70     		strb	r2, [r3]
 272:.\main.c      **** }
 1702              		.loc 1 272 0
 1703 000a BD46     		mov	sp, r7
 1704              		.cfi_def_cfa_register 13
 1705              		@ sp needed
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 36


 1706 000c 5DF8047B 		ldr	r7, [sp], #4
 1707              		.cfi_restore 7
 1708              		.cfi_def_cfa_offset 0
 1709 0010 7047     		bx	lr
 1710              	.L80:
 1711 0012 00BF     		.align	2
 1712              	.L79:
 1713 0014 00000000 		.word	movement_state
 1714              		.cfi_endproc
 1715              	.LFE81:
 1716              		.size	initTrackU, .-initTrackU
 1717              		.section	.text.inittrackLineZ,"ax",%progbits
 1718              		.align	2
 1719              		.global	inittrackLineZ
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	inittrackLineZ, %function
 1723              	inittrackLineZ:
 1724              	.LFB82:
 273:.\main.c      **** 
 274:.\main.c      **** void inittrackLineZ(){
 1725              		.loc 1 274 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729              		@ link register save eliminated.
 1730 0000 80B4     		push	{r7}
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0002 00AF     		add	r7, sp, #0
 1734              		.cfi_def_cfa_register 7
 275:.\main.c      ****     movement_state = TRACKING_SOFT;
 1735              		.loc 1 275 0
 1736 0004 034B     		ldr	r3, .L82
 1737 0006 0622     		movs	r2, #6
 1738 0008 1A70     		strb	r2, [r3]
 276:.\main.c      **** }
 1739              		.loc 1 276 0
 1740 000a BD46     		mov	sp, r7
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 000c 5DF8047B 		ldr	r7, [sp], #4
 1744              		.cfi_restore 7
 1745              		.cfi_def_cfa_offset 0
 1746 0010 7047     		bx	lr
 1747              	.L83:
 1748 0012 00BF     		.align	2
 1749              	.L82:
 1750 0014 00000000 		.word	movement_state
 1751              		.cfi_endproc
 1752              	.LFE82:
 1753              		.size	inittrackLineZ, .-inittrackLineZ
 1754              		.section	.text.rxInt,"ax",%progbits
 1755              		.align	2
 1756              		.global	rxInt
 1757              		.thumb
 1758              		.thumb_func
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 37


 1759              		.type	rxInt, %function
 1760              	rxInt:
 1761              	.LFB83:
 277:.\main.c      **** 
 278:.\main.c      **** 
 279:.\main.c      **** 
 280:.\main.c      **** //Binary RF Data
 281:.\main.c      **** CY_ISR(rxInt){
 1762              		.loc 1 281 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 8
 1765              		@ frame_needed = 1, uses_anonymous_args = 0
 1766 0000 B0B5     		push	{r4, r5, r7, lr}
 1767              		.cfi_def_cfa_offset 16
 1768              		.cfi_offset 4, -16
 1769              		.cfi_offset 5, -12
 1770              		.cfi_offset 7, -8
 1771              		.cfi_offset 14, -4
 1772 0002 82B0     		sub	sp, sp, #8
 1773              		.cfi_def_cfa_offset 24
 1774 0004 00AF     		add	r7, sp, #0
 1775              		.cfi_def_cfa_register 7
 282:.\main.c      ****     char rf_char = UART_GetChar();
 1776              		.loc 1 282 0
 1777 0006 FFF7FEFF 		bl	UART_GetChar
 1778 000a 0346     		mov	r3, r0
 1779 000c FB71     		strb	r3, [r7, #7]
 283:.\main.c      ****     if(rf_char == SOP){
 1780              		.loc 1 283 0
 1781 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1782 0010 AA2B     		cmp	r3, #170
 1783 0012 2BD1     		bne	.L85
 284:.\main.c      ****             //we should evalute whether the last packet was valid by measuring the length of data
 285:.\main.c      ****             if(byteCount == 34)
 1784              		.loc 1 285 0
 1785 0014 224B     		ldr	r3, .L89
 1786 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1787 0018 222B     		cmp	r3, #34
 1788 001a 20D1     		bne	.L86
 286:.\main.c      ****             {
 287:.\main.c      ****                 system_state = buffer_state;
 1789              		.loc 1 287 0
 1790 001c 214B     		ldr	r3, .L89+4
 1791 001e 224A     		ldr	r2, .L89+8
 1792 0020 1568     		ldr	r5, [r2]	@ unaligned
 1793 0022 5468     		ldr	r4, [r2, #4]	@ unaligned
 1794 0024 9068     		ldr	r0, [r2, #8]	@ unaligned
 1795 0026 D168     		ldr	r1, [r2, #12]	@ unaligned
 1796 0028 1D60     		str	r5, [r3]	@ unaligned
 1797 002a 5C60     		str	r4, [r3, #4]	@ unaligned
 1798 002c 9860     		str	r0, [r3, #8]	@ unaligned
 1799 002e D960     		str	r1, [r3, #12]	@ unaligned
 1800 0030 1569     		ldr	r5, [r2, #16]	@ unaligned
 1801 0032 5469     		ldr	r4, [r2, #20]	@ unaligned
 1802 0034 9069     		ldr	r0, [r2, #24]	@ unaligned
 1803 0036 D169     		ldr	r1, [r2, #28]	@ unaligned
 1804 0038 1D61     		str	r5, [r3, #16]	@ unaligned
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 38


 1805 003a 5C61     		str	r4, [r3, #20]	@ unaligned
 1806 003c 9861     		str	r0, [r3, #24]	@ unaligned
 1807 003e D961     		str	r1, [r3, #28]	@ unaligned
 288:.\main.c      ****                 if(initial_pos_valid == 0)
 1808              		.loc 1 288 0
 1809 0040 1A4B     		ldr	r3, .L89+12
 1810 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 0044 002B     		cmp	r3, #0
 1812 0046 0AD1     		bne	.L86
 289:.\main.c      ****                 {
 290:.\main.c      ****                     LED_Write(~LED_Read());
 1813              		.loc 1 290 0
 1814 0048 FFF7FEFF 		bl	LED_Read
 1815 004c 0346     		mov	r3, r0
 1816 004e DB43     		mvns	r3, r3
 1817 0050 DBB2     		uxtb	r3, r3
 1818 0052 1846     		mov	r0, r3
 1819 0054 FFF7FEFF 		bl	LED_Write
 291:.\main.c      ****                     initial_pos_valid = 1;
 1820              		.loc 1 291 0
 1821 0058 144B     		ldr	r3, .L89+12
 1822 005a 0122     		movs	r2, #1
 1823 005c 1A70     		strb	r2, [r3]
 1824              	.L86:
 292:.\main.c      ****                 }
 293:.\main.c      ****             }
 294:.\main.c      ****             byteCount = 2; //2 for legacy purposes - fix this
 1825              		.loc 1 294 0
 1826 005e 104B     		ldr	r3, .L89
 1827 0060 0222     		movs	r2, #2
 1828 0062 1A70     		strb	r2, [r3]
 295:.\main.c      ****             flag_rx = 0;
 1829              		.loc 1 295 0
 1830 0064 124B     		ldr	r3, .L89+16
 1831 0066 0022     		movs	r2, #0
 1832 0068 1A70     		strb	r2, [r3]
 1833 006a 16E0     		b	.L84
 1834              	.L85:
 296:.\main.c      ****              //LED_Write(~LED_Read()); //flash an LED so we know the interrupt is called
 297:.\main.c      ****         }
 298:.\main.c      ****         else
 299:.\main.c      ****         {
 300:.\main.c      ****             packet[byteCount % 2] = rf_char;
 1835              		.loc 1 300 0
 1836 006c 0C4B     		ldr	r3, .L89
 1837 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1838 0070 03F00103 		and	r3, r3, #1
 1839 0074 0F49     		ldr	r1, .L89+20
 1840 0076 FA79     		ldrb	r2, [r7, #7]
 1841 0078 CA54     		strb	r2, [r1, r3]
 301:.\main.c      ****            
 302:.\main.c      ****             if(byteCount % 2 == 1) //we have received a whole 16-bit packet
 1842              		.loc 1 302 0
 1843 007a 094B     		ldr	r3, .L89
 1844 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 007e 03F00103 		and	r3, r3, #1
 1846 0082 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 39


 1847 0084 002B     		cmp	r3, #0
 1848 0086 02D0     		beq	.L88
 303:.\main.c      ****             {
 304:.\main.c      ****                 flag_rx = 1;
 1849              		.loc 1 304 0
 1850 0088 094B     		ldr	r3, .L89+16
 1851 008a 0122     		movs	r2, #1
 1852 008c 1A70     		strb	r2, [r3]
 1853              	.L88:
 305:.\main.c      ****             }
 306:.\main.c      ****             byteCount = (byteCount + 1);
 1854              		.loc 1 306 0
 1855 008e 044B     		ldr	r3, .L89
 1856 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 0092 0133     		adds	r3, r3, #1
 1858 0094 DAB2     		uxtb	r2, r3
 1859 0096 024B     		ldr	r3, .L89
 1860 0098 1A70     		strb	r2, [r3]
 1861              	.L84:
 307:.\main.c      ****         }
 308:.\main.c      **** }
 1862              		.loc 1 308 0
 1863 009a 0837     		adds	r7, r7, #8
 1864              		.cfi_def_cfa_offset 16
 1865 009c BD46     		mov	sp, r7
 1866              		.cfi_def_cfa_register 13
 1867              		@ sp needed
 1868 009e B0BD     		pop	{r4, r5, r7, pc}
 1869              	.L90:
 1870              		.align	2
 1871              	.L89:
 1872 00a0 00000000 		.word	byteCount
 1873 00a4 00000000 		.word	system_state
 1874 00a8 00000000 		.word	buffer_state
 1875 00ac 00000000 		.word	initial_pos_valid
 1876 00b0 00000000 		.word	flag_rx
 1877 00b4 00000000 		.word	packet
 1878              		.cfi_endproc
 1879              	.LFE83:
 1880              		.size	rxInt, .-rxInt
 1881              		.global	__aeabi_i2f
 1882              		.global	__aeabi_fmul
 1883              		.global	__aeabi_f2iz
 1884              		.section	.rodata
 1885 000a 0000     		.align	2
 1886              	.LC1:
 1887 000c 74617267 		.ascii	"target quad: %d\015\012\000"
 1887      65742071 
 1887      7561643A 
 1887      2025640D 
 1887      0A00
 1888 001e 0000     		.align	2
 1889              	.LC2:
 1890 0020 703A2573 		.ascii	"p:%s\015\012\000"
 1890      0D0A00
 1891              		.section	.text.BT_rxInt,"ax",%progbits
 1892              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 40


 1893              		.global	BT_rxInt
 1894              		.thumb
 1895              		.thumb_func
 1896              		.type	BT_rxInt, %function
 1897              	BT_rxInt:
 1898              	.LFB84:
 309:.\main.c      **** 
 310:.\main.c      **** CY_ISR(BT_rxInt)
 311:.\main.c      **** {
 1899              		.loc 1 311 0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 152
 1902              		@ frame_needed = 1, uses_anonymous_args = 0
 1903 0000 80B5     		push	{r7, lr}
 1904              		.cfi_def_cfa_offset 8
 1905              		.cfi_offset 7, -8
 1906              		.cfi_offset 14, -4
 1907 0002 A6B0     		sub	sp, sp, #152
 1908              		.cfi_def_cfa_offset 160
 1909 0004 00AF     		add	r7, sp, #0
 1910              		.cfi_def_cfa_register 7
 312:.\main.c      ****     char rf_char = UART_GetChar();
 1911              		.loc 1 312 0
 1912 0006 FFF7FEFF 		bl	UART_GetChar
 1913 000a 0346     		mov	r3, r0
 1914 000c 87F89730 		strb	r3, [r7, #151]
 313:.\main.c      ****     switch(rf_char){
 1915              		.loc 1 313 0
 1916 0010 97F89730 		ldrb	r3, [r7, #151]	@ zero_extendqisi2
 1917 0014 613B     		subs	r3, r3, #97
 1918 0016 192B     		cmp	r3, #25
 1919 0018 00F2B680 		bhi	.L91
 1920 001c 01A2     		adr	r2, .L94
 1921 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1922 0022 00BF     		.p2align 2
 1923              	.L94:
 1924 0024 8D000000 		.word	.L93+1
 1925 0028 89010000 		.word	.L91+1
 1926 002c 89010000 		.word	.L91+1
 1927 0030 B1000000 		.word	.L95+1
 1928 0034 89010000 		.word	.L91+1
 1929 0038 BD000000 		.word	.L96+1
 1930 003c 89010000 		.word	.L91+1
 1931 0040 89010000 		.word	.L91+1
 1932 0044 89010000 		.word	.L91+1
 1933 0048 89010000 		.word	.L91+1
 1934 004c 89010000 		.word	.L91+1
 1935 0050 89010000 		.word	.L91+1
 1936 0054 89010000 		.word	.L91+1
 1937 0058 89010000 		.word	.L91+1
 1938 005c 89010000 		.word	.L91+1
 1939 0060 89010000 		.word	.L91+1
 1940 0064 ED000000 		.word	.L97+1
 1941 0068 47010000 		.word	.L98+1
 1942 006c A5000000 		.word	.L99+1
 1943 0070 C9000000 		.word	.L100+1
 1944 0074 D5000000 		.word	.L101+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 41


 1945 0078 89010000 		.word	.L91+1
 1946 007c 99000000 		.word	.L102+1
 1947 0080 5D010000 		.word	.L103+1
 1948 0084 89010000 		.word	.L91+1
 1949 0088 E1000000 		.word	.L104+1
 1950              		.p2align 1
 1951              	.L93:
 1952              	.LBB3:
 314:.\main.c      ****     case 'a':
 315:.\main.c      ****         initTurnLeft();
 1953              		.loc 1 315 0
 1954 008c FFF7FEFF 		bl	initTurnLeft
 316:.\main.c      ****         track_mode = NO_TRACK;
 1955              		.loc 1 316 0
 1956 0090 3F4B     		ldr	r3, .L106
 1957 0092 0022     		movs	r2, #0
 1958 0094 1A70     		strb	r2, [r3]
 317:.\main.c      ****         break;
 1959              		.loc 1 317 0
 1960 0096 77E0     		b	.L91
 1961              	.L102:
 318:.\main.c      ****     case 'w':
 319:.\main.c      ****         initForward();
 1962              		.loc 1 319 0
 1963 0098 FFF7FEFF 		bl	initForward
 320:.\main.c      ****         track_mode = NO_TRACK;
 1964              		.loc 1 320 0
 1965 009c 3C4B     		ldr	r3, .L106
 1966 009e 0022     		movs	r2, #0
 1967 00a0 1A70     		strb	r2, [r3]
 321:.\main.c      ****         break;
 1968              		.loc 1 321 0
 1969 00a2 71E0     		b	.L91
 1970              	.L99:
 322:.\main.c      ****     case 's': 
 323:.\main.c      ****         reverseDirection();
 1971              		.loc 1 323 0
 1972 00a4 FFF7FEFF 		bl	reverseDirection
 324:.\main.c      ****         track_mode = NO_TRACK;
 1973              		.loc 1 324 0
 1974 00a8 394B     		ldr	r3, .L106
 1975 00aa 0022     		movs	r2, #0
 1976 00ac 1A70     		strb	r2, [r3]
 325:.\main.c      ****         break;
 1977              		.loc 1 325 0
 1978 00ae 6BE0     		b	.L91
 1979              	.L95:
 326:.\main.c      ****     case 'd':
 327:.\main.c      ****         initTurnRight();
 1980              		.loc 1 327 0
 1981 00b0 FFF7FEFF 		bl	initTurnRight
 328:.\main.c      ****         track_mode = NO_TRACK;
 1982              		.loc 1 328 0
 1983 00b4 364B     		ldr	r3, .L106
 1984 00b6 0022     		movs	r2, #0
 1985 00b8 1A70     		strb	r2, [r3]
 329:.\main.c      ****         break;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 42


 1986              		.loc 1 329 0
 1987 00ba 65E0     		b	.L91
 1988              	.L96:
 330:.\main.c      ****     case 'f':
 331:.\main.c      ****         initBrake();
 1989              		.loc 1 331 0
 1990 00bc FFF7FEFF 		bl	initBrake
 332:.\main.c      ****         track_mode = NO_TRACK;
 1991              		.loc 1 332 0
 1992 00c0 334B     		ldr	r3, .L106
 1993 00c2 0022     		movs	r2, #0
 1994 00c4 1A70     		strb	r2, [r3]
 333:.\main.c      ****         break;
 1995              		.loc 1 333 0
 1996 00c6 5FE0     		b	.L91
 1997              	.L100:
 334:.\main.c      ****     case('t'):
 335:.\main.c      ****         track_mode = CURVE_TRACK;
 1998              		.loc 1 335 0
 1999 00c8 314B     		ldr	r3, .L106
 2000 00ca 0122     		movs	r2, #1
 2001 00cc 1A70     		strb	r2, [r3]
 336:.\main.c      ****         initTrack();
 2002              		.loc 1 336 0
 2003 00ce FFF7FEFF 		bl	initTrack
 337:.\main.c      ****         break;
 2004              		.loc 1 337 0
 2005 00d2 59E0     		b	.L91
 2006              	.L101:
 338:.\main.c      ****     case('u'):
 339:.\main.c      ****         initTrackU();
 2007              		.loc 1 339 0
 2008 00d4 FFF7FEFF 		bl	initTrackU
 340:.\main.c      ****         track_mode = U_TRACK;
 2009              		.loc 1 340 0
 2010 00d8 2D4B     		ldr	r3, .L106
 2011 00da 0222     		movs	r2, #2
 2012 00dc 1A70     		strb	r2, [r3]
 341:.\main.c      ****         break;
 2013              		.loc 1 341 0
 2014 00de 53E0     		b	.L91
 2015              	.L104:
 342:.\main.c      ****     case('z'):
 343:.\main.c      ****         track_mode = SQUARE_TRACK;
 2016              		.loc 1 343 0
 2017 00e0 2B4B     		ldr	r3, .L106
 2018 00e2 0322     		movs	r2, #3
 2019 00e4 1A70     		strb	r2, [r3]
 344:.\main.c      ****         inittrackLineZ();
 2020              		.loc 1 344 0
 2021 00e6 FFF7FEFF 		bl	inittrackLineZ
 345:.\main.c      ****         break;
 2022              		.loc 1 345 0
 2023 00ea 4DE0     		b	.L91
 2024              	.L97:
 346:.\main.c      ****     case('q'):
 347:.\main.c      ****         track_mode = QUAD_STOP;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 43


 2025              		.loc 1 347 0
 2026 00ec 284B     		ldr	r3, .L106
 2027 00ee 0422     		movs	r2, #4
 2028 00f0 1A70     		strb	r2, [r3]
 348:.\main.c      ****         accum_dist = 0;
 2029              		.loc 1 348 0
 2030 00f2 284B     		ldr	r3, .L106+4
 2031 00f4 0022     		movs	r2, #0
 2032 00f6 1A80     		strh	r2, [r3]	@ movhi
 349:.\main.c      ****         target_distance_quad = target_distance_cm * quad_per_cm;
 2033              		.loc 1 349 0
 2034 00f8 274B     		ldr	r3, .L106+8
 2035 00fa 1B88     		ldrh	r3, [r3]
 2036 00fc 1BB2     		sxth	r3, r3
 2037 00fe 1846     		mov	r0, r3
 2038 0100 FFF7FEFF 		bl	__aeabi_i2f
 2039 0104 0246     		mov	r2, r0
 2040 0106 254B     		ldr	r3, .L106+12
 2041 0108 1B68     		ldr	r3, [r3]	@ float
 2042 010a 1046     		mov	r0, r2
 2043 010c 1946     		mov	r1, r3
 2044 010e FFF7FEFF 		bl	__aeabi_fmul
 2045 0112 0346     		mov	r3, r0
 2046 0114 1846     		mov	r0, r3
 2047 0116 FFF7FEFF 		bl	__aeabi_f2iz
 2048 011a 0346     		mov	r3, r0
 2049 011c 9AB2     		uxth	r2, r3
 2050 011e 204B     		ldr	r3, .L106+16
 2051 0120 1A80     		strh	r2, [r3]	@ movhi
 350:.\main.c      ****         char mes[16];
 351:.\main.c      ****         sprintf(mes, "target quad: %d\r\n", target_distance_quad);
 2052              		.loc 1 351 0
 2053 0122 1F4B     		ldr	r3, .L106+16
 2054 0124 1B88     		ldrh	r3, [r3]
 2055 0126 1BB2     		sxth	r3, r3
 2056 0128 07F18402 		add	r2, r7, #132
 2057 012c 1046     		mov	r0, r2
 2058 012e 1D49     		ldr	r1, .L106+20
 2059 0130 1A46     		mov	r2, r3
 2060 0132 FFF7FEFF 		bl	sprintf
 352:.\main.c      ****         UART_PutString(mes);
 2061              		.loc 1 352 0
 2062 0136 07F18403 		add	r3, r7, #132
 2063 013a 1846     		mov	r0, r3
 2064 013c FFF7FEFF 		bl	UART_PutString
 353:.\main.c      ****         initForward();
 2065              		.loc 1 353 0
 2066 0140 FFF7FEFF 		bl	initForward
 354:.\main.c      ****         break;
 2067              		.loc 1 354 0
 2068 0144 20E0     		b	.L91
 2069              	.L98:
 355:.\main.c      ****     case ('r'):
 356:.\main.c      ****         track_mode = RF_STOP;
 2070              		.loc 1 356 0
 2071 0146 124B     		ldr	r3, .L106
 2072 0148 0522     		movs	r2, #5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 44


 2073 014a 1A70     		strb	r2, [r3]
 357:.\main.c      ****         changeToRF();
 2074              		.loc 1 357 0
 2075 014c FFF7FEFF 		bl	changeToRF
 358:.\main.c      ****         // Make initial position
 359:.\main.c      ****         initial_pos_valid = 0;
 2076              		.loc 1 359 0
 2077 0150 154B     		ldr	r3, .L106+24
 2078 0152 0022     		movs	r2, #0
 2079 0154 1A70     		strb	r2, [r3]
 360:.\main.c      ****         initBrake();
 2080              		.loc 1 360 0
 2081 0156 FFF7FEFF 		bl	initBrake
 361:.\main.c      ****         break;
 2082              		.loc 1 361 0
 2083 015a 15E0     		b	.L91
 2084              	.L103:
 362:.\main.c      ****     case ('x'):
 363:.\main.c      ****         track_mode = DEST_TEST;
 2085              		.loc 1 363 0
 2086 015c 0C4B     		ldr	r3, .L106
 2087 015e 0622     		movs	r2, #6
 2088 0160 1A70     		strb	r2, [r3]
 364:.\main.c      ****         tracked_direction = robot_direction;
 2089              		.loc 1 364 0
 2090 0162 124B     		ldr	r3, .L106+28
 2091 0164 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2092 0166 124B     		ldr	r3, .L106+32
 2093 0168 1A70     		strb	r2, [r3]
 365:.\main.c      ****         generateDirections();
 2094              		.loc 1 365 0
 2095 016a FFF7FEFF 		bl	generateDirections
 366:.\main.c      ****         char message[128];
 367:.\main.c      ****         sprintf(message, "p:%s\r\n", instructions);
 2096              		.loc 1 367 0
 2097 016e 3B1D     		adds	r3, r7, #4
 2098 0170 1846     		mov	r0, r3
 2099 0172 1049     		ldr	r1, .L106+36
 2100 0174 104A     		ldr	r2, .L106+40
 2101 0176 FFF7FEFF 		bl	sprintf
 368:.\main.c      ****         UART_PutString(message);
 2102              		.loc 1 368 0
 2103 017a 3B1D     		adds	r3, r7, #4
 2104 017c 1846     		mov	r0, r3
 2105 017e FFF7FEFF 		bl	UART_PutString
 369:.\main.c      ****         inittrackLineZ();
 2106              		.loc 1 369 0
 2107 0182 FFF7FEFF 		bl	inittrackLineZ
 370:.\main.c      ****         break;
 2108              		.loc 1 370 0
 2109 0186 00BF     		nop
 2110              	.L91:
 2111              	.LBE3:
 371:.\main.c      ****     }
 372:.\main.c      **** }
 2112              		.loc 1 372 0
 2113 0188 9837     		adds	r7, r7, #152
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 45


 2114              		.cfi_def_cfa_offset 8
 2115 018a BD46     		mov	sp, r7
 2116              		.cfi_def_cfa_register 13
 2117              		@ sp needed
 2118 018c 80BD     		pop	{r7, pc}
 2119              	.L107:
 2120 018e 00BF     		.align	2
 2121              	.L106:
 2122 0190 00000000 		.word	track_mode
 2123 0194 00000000 		.word	accum_dist
 2124 0198 00000000 		.word	target_distance_cm
 2125 019c 00000000 		.word	quad_per_cm
 2126 01a0 00000000 		.word	target_distance_quad
 2127 01a4 0C000000 		.word	.LC1
 2128 01a8 00000000 		.word	initial_pos_valid
 2129 01ac 00000000 		.word	robot_direction
 2130 01b0 00000000 		.word	tracked_direction
 2131 01b4 20000000 		.word	.LC2
 2132 01b8 00000000 		.word	instructions
 2133              		.cfi_endproc
 2134              	.LFE84:
 2135              		.size	BT_rxInt, .-BT_rxInt
 2136              		.section	.text.BT_txInt,"ax",%progbits
 2137              		.align	2
 2138              		.global	BT_txInt
 2139              		.thumb
 2140              		.thumb_func
 2141              		.type	BT_txInt, %function
 2142              	BT_txInt:
 2143              	.LFB85:
 373:.\main.c      **** 
 374:.\main.c      **** //BT
 375:.\main.c      **** CY_ISR(BT_txInt)
 376:.\main.c      **** {
 2144              		.loc 1 376 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 1, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 2149 0000 80B4     		push	{r7}
 2150              		.cfi_def_cfa_offset 4
 2151              		.cfi_offset 7, -4
 2152 0002 00AF     		add	r7, sp, #0
 2153              		.cfi_def_cfa_register 7
 377:.\main.c      ****     
 378:.\main.c      **** }
 2154              		.loc 1 378 0
 2155 0004 BD46     		mov	sp, r7
 2156              		.cfi_def_cfa_register 13
 2157              		@ sp needed
 2158 0006 5DF8047B 		ldr	r7, [sp], #4
 2159              		.cfi_restore 7
 2160              		.cfi_def_cfa_offset 0
 2161 000a 7047     		bx	lr
 2162              		.cfi_endproc
 2163              	.LFE85:
 2164              		.size	BT_txInt, .-BT_txInt
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 46


 2165              		.section	.text.adc_isr,"ax",%progbits
 2166              		.align	2
 2167              		.global	adc_isr
 2168              		.thumb
 2169              		.thumb_func
 2170              		.type	adc_isr, %function
 2171              	adc_isr:
 2172              	.LFB86:
 379:.\main.c      **** 
 380:.\main.c      **** //ADC:
 381:.\main.c      **** CY_ISR (adc_isr)
 382:.\main.c      **** {
 2173              		.loc 1 382 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177 0000 80B5     		push	{r7, lr}
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 7, -8
 2180              		.cfi_offset 14, -4
 2181 0002 00AF     		add	r7, sp, #0
 2182              		.cfi_def_cfa_register 7
 383:.\main.c      ****     //adc_result = ADC_GetResult16(0);
 384:.\main.c      ****     adc_result = ADC_GetResult16();
 2183              		.loc 1 384 0
 2184 0004 FFF7FEFF 		bl	ADC_GetResult16
 2185 0008 0346     		mov	r3, r0
 2186 000a 1A46     		mov	r2, r3
 2187 000c 044B     		ldr	r3, .L110
 2188 000e 1A80     		strh	r2, [r3]	@ movhi
 385:.\main.c      ****     flag_receive_ADC = 1;
 2189              		.loc 1 385 0
 2190 0010 044B     		ldr	r3, .L110+4
 2191 0012 0122     		movs	r2, #1
 2192 0014 1A70     		strb	r2, [r3]
 386:.\main.c      ****     flag_print_rf = 1;
 2193              		.loc 1 386 0
 2194 0016 044B     		ldr	r3, .L110+8
 2195 0018 0122     		movs	r2, #1
 2196 001a 1A70     		strb	r2, [r3]
 387:.\main.c      ****     //LED_Write(~LED_Read());
 388:.\main.c      **** }
 2197              		.loc 1 388 0
 2198 001c 80BD     		pop	{r7, pc}
 2199              	.L111:
 2200 001e 00BF     		.align	2
 2201              	.L110:
 2202 0020 00000000 		.word	adc_result
 2203 0024 00000000 		.word	flag_receive_ADC
 2204 0028 00000000 		.word	flag_print_rf
 2205              		.cfi_endproc
 2206              	.LFE86:
 2207              		.size	adc_isr, .-adc_isr
 2208              		.section	.rodata
 2209 0027 00       		.align	2
 2210              	.LC3:
 2211 0028 64697374 		.ascii	"dist: %d\015\012\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 47


 2211      3A202564 
 2211      0D0A00
 2212              		.global	__aeabi_i2d
 2213              		.global	__aeabi_dcmple
 2214              		.section	.text.isr_quad1,"ax",%progbits
 2215              		.align	2
 2216              		.global	isr_quad1
 2217              		.thumb
 2218              		.thumb_func
 2219              		.type	isr_quad1, %function
 2220              	isr_quad1:
 2221              	.LFB87:
 389:.\main.c      **** 
 390:.\main.c      **** CY_ISR (isr_quad1)
 391:.\main.c      **** {
 2222              		.loc 1 391 0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 24
 2225              		@ frame_needed = 1, uses_anonymous_args = 0
 2226 0000 B0B5     		push	{r4, r5, r7, lr}
 2227              		.cfi_def_cfa_offset 16
 2228              		.cfi_offset 4, -16
 2229              		.cfi_offset 5, -12
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 86B0     		sub	sp, sp, #24
 2233              		.cfi_def_cfa_offset 40
 2234 0004 00AF     		add	r7, sp, #0
 2235              		.cfi_def_cfa_register 7
 392:.\main.c      ****     //LED_Write(~LED_Read());
 393:.\main.c      ****     last_quad_count1 = quad_count1;
 2236              		.loc 1 393 0
 2237 0006 684B     		ldr	r3, .L119
 2238 0008 1A88     		ldrh	r2, [r3]
 2239 000a 684B     		ldr	r3, .L119+4
 2240 000c 1A80     		strh	r2, [r3]	@ movhi
 394:.\main.c      ****     last_quad_count2 = quad_count2;
 2241              		.loc 1 394 0
 2242 000e 684B     		ldr	r3, .L119+8
 2243 0010 1A88     		ldrh	r2, [r3]
 2244 0012 684B     		ldr	r3, .L119+12
 2245 0014 1A80     		strh	r2, [r3]	@ movhi
 395:.\main.c      ****     quad_count1 = QuadDec_M1_GetCounter();
 2246              		.loc 1 395 0
 2247 0016 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2248 001a 0346     		mov	r3, r0
 2249 001c 1A46     		mov	r2, r3
 2250 001e 624B     		ldr	r3, .L119
 2251 0020 1A80     		strh	r2, [r3]	@ movhi
 396:.\main.c      ****     quad_count2 = QuadDec_M2_GetCounter();
 2252              		.loc 1 396 0
 2253 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2254 0026 0346     		mov	r3, r0
 2255 0028 1A46     		mov	r2, r3
 2256 002a 614B     		ldr	r3, .L119+8
 2257 002c 1A80     		strh	r2, [r3]	@ movhi
 397:.\main.c      ****     quad_diff1 = quad_count1 - last_quad_count1;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 48


 2258              		.loc 1 397 0
 2259 002e 5E4B     		ldr	r3, .L119
 2260 0030 1B88     		ldrh	r3, [r3]
 2261 0032 9AB2     		uxth	r2, r3
 2262 0034 5D4B     		ldr	r3, .L119+4
 2263 0036 1B88     		ldrh	r3, [r3]
 2264 0038 9BB2     		uxth	r3, r3
 2265 003a D31A     		subs	r3, r2, r3
 2266 003c 9BB2     		uxth	r3, r3
 2267 003e 9AB2     		uxth	r2, r3
 2268 0040 5D4B     		ldr	r3, .L119+16
 2269 0042 1A80     		strh	r2, [r3]	@ movhi
 398:.\main.c      ****     quad_diff2 = quad_count2 - last_quad_count2;
 2270              		.loc 1 398 0
 2271 0044 5A4B     		ldr	r3, .L119+8
 2272 0046 1B88     		ldrh	r3, [r3]
 2273 0048 9AB2     		uxth	r2, r3
 2274 004a 5A4B     		ldr	r3, .L119+12
 2275 004c 1B88     		ldrh	r3, [r3]
 2276 004e 9BB2     		uxth	r3, r3
 2277 0050 D31A     		subs	r3, r2, r3
 2278 0052 9BB2     		uxth	r3, r3
 2279 0054 9AB2     		uxth	r2, r3
 2280 0056 594B     		ldr	r3, .L119+20
 2281 0058 1A80     		strh	r2, [r3]	@ movhi
 399:.\main.c      ****     
 400:.\main.c      ****     if(abs(quad_count1) > 3000 && movement_state != LTURN && movement_state != RTURN && track_mode 
 2282              		.loc 1 400 0
 2283 005a 534B     		ldr	r3, .L119
 2284 005c 1B88     		ldrh	r3, [r3]
 2285 005e 1BB2     		sxth	r3, r3
 2286 0060 002B     		cmp	r3, #0
 2287 0062 B8BF     		it	lt
 2288 0064 5B42     		rsblt	r3, r3, #0
 2289 0066 40F6B832 		movw	r2, #3000
 2290 006a 9342     		cmp	r3, r2
 2291 006c 1BDD     		ble	.L113
 2292              		.loc 1 400 0 is_stmt 0 discriminator 1
 2293 006e 544B     		ldr	r3, .L119+24
 2294 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2295 0072 012B     		cmp	r3, #1
 2296 0074 17D0     		beq	.L113
 2297              		.loc 1 400 0 discriminator 2
 2298 0076 524B     		ldr	r3, .L119+24
 2299 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2300 007a 022B     		cmp	r3, #2
 2301 007c 13D0     		beq	.L113
 2302              		.loc 1 400 0 discriminator 3
 2303 007e 514B     		ldr	r3, .L119+28
 2304 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0082 042B     		cmp	r3, #4
 2306 0084 0FD0     		beq	.L113
 2307              		.loc 1 400 0 discriminator 4
 2308 0086 4E4B     		ldr	r3, .L119+24
 2309 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 008a 072B     		cmp	r3, #7
 2311 008c 0BD0     		beq	.L113
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 49


 401:.\main.c      ****     {
 402:.\main.c      ****         QuadDec_M1_SetCounter(0);
 2312              		.loc 1 402 0 is_stmt 1
 2313 008e 0020     		movs	r0, #0
 2314 0090 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 403:.\main.c      ****         QuadDec_M2_SetCounter(0);
 2315              		.loc 1 403 0
 2316 0094 0020     		movs	r0, #0
 2317 0096 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 404:.\main.c      ****         quad_count1 = 0;
 2318              		.loc 1 404 0
 2319 009a 434B     		ldr	r3, .L119
 2320 009c 0022     		movs	r2, #0
 2321 009e 1A80     		strh	r2, [r3]	@ movhi
 405:.\main.c      ****         quad_count2 = 0;
 2322              		.loc 1 405 0
 2323 00a0 434B     		ldr	r3, .L119+8
 2324 00a2 0022     		movs	r2, #0
 2325 00a4 1A80     		strh	r2, [r3]	@ movhi
 2326              	.L113:
 406:.\main.c      ****     }
 407:.\main.c      **** 
 408:.\main.c      ****     flag_calc_wheelspeed = 1;
 2327              		.loc 1 408 0
 2328 00a6 484B     		ldr	r3, .L119+32
 2329 00a8 0122     		movs	r2, #1
 2330 00aa 1A70     		strb	r2, [r3]
 409:.\main.c      ****     
 410:.\main.c      ****     if (track_mode == QUAD_STOP)
 2331              		.loc 1 410 0
 2332 00ac 454B     		ldr	r3, .L119+28
 2333 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2334 00b0 042B     		cmp	r3, #4
 2335 00b2 2AD1     		bne	.L114
 2336              	.LBB4:
 411:.\main.c      ****     {
 412:.\main.c      ****         accum_dist += quad_diff1;
 2337              		.loc 1 412 0
 2338 00b4 454B     		ldr	r3, .L119+36
 2339 00b6 1B88     		ldrh	r3, [r3]
 2340 00b8 9AB2     		uxth	r2, r3
 2341 00ba 3F4B     		ldr	r3, .L119+16
 2342 00bc 1B88     		ldrh	r3, [r3]
 2343 00be 9BB2     		uxth	r3, r3
 2344 00c0 1344     		add	r3, r3, r2
 2345 00c2 9BB2     		uxth	r3, r3
 2346 00c4 9AB2     		uxth	r2, r3
 2347 00c6 414B     		ldr	r3, .L119+36
 2348 00c8 1A80     		strh	r2, [r3]	@ movhi
 413:.\main.c      ****         char mes[16];
 414:.\main.c      ****         sprintf(mes, "dist: %d\r\n", accum_dist);
 2349              		.loc 1 414 0
 2350 00ca 404B     		ldr	r3, .L119+36
 2351 00cc 1B88     		ldrh	r3, [r3]
 2352 00ce 1BB2     		sxth	r3, r3
 2353 00d0 3A46     		mov	r2, r7
 2354 00d2 1046     		mov	r0, r2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 50


 2355 00d4 3E49     		ldr	r1, .L119+40
 2356 00d6 1A46     		mov	r2, r3
 2357 00d8 FFF7FEFF 		bl	sprintf
 415:.\main.c      ****         UART_PutString(mes);
 2358              		.loc 1 415 0
 2359 00dc 3B46     		mov	r3, r7
 2360 00de 1846     		mov	r0, r3
 2361 00e0 FFF7FEFF 		bl	UART_PutString
 416:.\main.c      ****         if(abs(accum_dist) >= target_distance_quad)
 2362              		.loc 1 416 0
 2363 00e4 394B     		ldr	r3, .L119+36
 2364 00e6 1B88     		ldrh	r3, [r3]
 2365 00e8 1BB2     		sxth	r3, r3
 2366 00ea 83EAE372 		eor	r2, r3, r3, asr #31
 2367 00ee A2EBE372 		sub	r2, r2, r3, asr #31
 2368 00f2 384B     		ldr	r3, .L119+44
 2369 00f4 1B88     		ldrh	r3, [r3]
 2370 00f6 1BB2     		sxth	r3, r3
 2371 00f8 9A42     		cmp	r2, r3
 2372 00fa 05DB     		blt	.L115
 417:.\main.c      ****         {
 418:.\main.c      ****             initBrake();
 2373              		.loc 1 418 0
 2374 00fc FFF7FEFF 		bl	initBrake
 419:.\main.c      ****             track_mode = NO_TRACK;
 2375              		.loc 1 419 0
 2376 0100 304B     		ldr	r3, .L119+28
 2377 0102 0022     		movs	r2, #0
 2378 0104 1A70     		strb	r2, [r3]
 2379              	.LBE4:
 2380 0106 4CE0     		b	.L112
 2381              	.L115:
 2382 0108 4BE0     		b	.L112
 2383              	.L114:
 420:.\main.c      ****         }
 421:.\main.c      ****     } else if (track_mode == RF_STOP)
 2384              		.loc 1 421 0
 2385 010a 2E4B     		ldr	r3, .L119+28
 2386 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2387 010e 052B     		cmp	r3, #5
 2388 0110 47D1     		bne	.L112
 2389              	.LBB5:
 422:.\main.c      ****     { 
 423:.\main.c      ****         // Do pythag
 424:.\main.c      ****         double dist = hypot((system_state.robot_xpos - initial_x_pos) / px_per_x_cm , (system_state
 2390              		.loc 1 424 0
 2391 0112 314B     		ldr	r3, .L119+48
 2392 0114 5B88     		ldrh	r3, [r3, #2]
 2393 0116 1AB2     		sxth	r2, r3
 2394 0118 304B     		ldr	r3, .L119+52
 2395 011a 1B88     		ldrh	r3, [r3]
 2396 011c 1BB2     		sxth	r3, r3
 2397 011e D31A     		subs	r3, r2, r3
 2398 0120 1846     		mov	r0, r3
 2399 0122 FFF7FEFF 		bl	__aeabi_i2d
 2400 0126 0246     		mov	r2, r0
 2401 0128 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 51


 2402 012a 1046     		mov	r0, r2
 2403 012c 1946     		mov	r1, r3
 2404 012e 4FF00002 		mov	r2, #0
 2405 0132 2B4B     		ldr	r3, .L119+56
 2406 0134 FFF7FEFF 		bl	__aeabi_ddiv
 2407 0138 0246     		mov	r2, r0
 2408 013a 0B46     		mov	r3, r1
 2409 013c 1446     		mov	r4, r2
 2410 013e 1D46     		mov	r5, r3
 2411 0140 254B     		ldr	r3, .L119+48
 2412 0142 9B88     		ldrh	r3, [r3, #4]
 2413 0144 1AB2     		sxth	r2, r3
 2414 0146 274B     		ldr	r3, .L119+60
 2415 0148 1B88     		ldrh	r3, [r3]
 2416 014a 1BB2     		sxth	r3, r3
 2417 014c D31A     		subs	r3, r2, r3
 2418 014e 1846     		mov	r0, r3
 2419 0150 FFF7FEFF 		bl	__aeabi_i2d
 2420 0154 0246     		mov	r2, r0
 2421 0156 0B46     		mov	r3, r1
 2422 0158 1046     		mov	r0, r2
 2423 015a 1946     		mov	r1, r3
 2424 015c 4FF00002 		mov	r2, #0
 2425 0160 1F4B     		ldr	r3, .L119+56
 2426 0162 FFF7FEFF 		bl	__aeabi_ddiv
 2427 0166 0246     		mov	r2, r0
 2428 0168 0B46     		mov	r3, r1
 2429 016a 2046     		mov	r0, r4
 2430 016c 2946     		mov	r1, r5
 2431 016e FFF7FEFF 		bl	hypot
 2432 0172 C7E90401 		strd	r0, [r7, #16]
 425:.\main.c      ****         if (dist >= target_distance_cm)
 2433              		.loc 1 425 0
 2434 0176 1C4B     		ldr	r3, .L119+64
 2435 0178 1B88     		ldrh	r3, [r3]
 2436 017a 1BB2     		sxth	r3, r3
 2437 017c 1846     		mov	r0, r3
 2438 017e FFF7FEFF 		bl	__aeabi_i2d
 2439 0182 0246     		mov	r2, r0
 2440 0184 0B46     		mov	r3, r1
 2441 0186 1046     		mov	r0, r2
 2442 0188 1946     		mov	r1, r3
 2443 018a D7E90423 		ldrd	r2, [r7, #16]
 2444 018e FFF7FEFF 		bl	__aeabi_dcmple
 2445 0192 0346     		mov	r3, r0
 2446 0194 002B     		cmp	r3, #0
 2447 0196 04D0     		beq	.L112
 426:.\main.c      ****         {
 427:.\main.c      ****             initBrake();
 2448              		.loc 1 427 0
 2449 0198 FFF7FEFF 		bl	initBrake
 428:.\main.c      ****             track_mode = NO_TRACK;
 2450              		.loc 1 428 0
 2451 019c 094B     		ldr	r3, .L119+28
 2452 019e 0022     		movs	r2, #0
 2453 01a0 1A70     		strb	r2, [r3]
 2454              	.L112:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 52


 2455              	.LBE5:
 429:.\main.c      ****         }
 430:.\main.c      ****     }
 431:.\main.c      ****     
 432:.\main.c      **** }
 2456              		.loc 1 432 0
 2457 01a2 1837     		adds	r7, r7, #24
 2458              		.cfi_def_cfa_offset 16
 2459 01a4 BD46     		mov	sp, r7
 2460              		.cfi_def_cfa_register 13
 2461              		@ sp needed
 2462 01a6 B0BD     		pop	{r4, r5, r7, pc}
 2463              	.L120:
 2464              		.align	2
 2465              	.L119:
 2466 01a8 00000000 		.word	quad_count1
 2467 01ac 00000000 		.word	last_quad_count1
 2468 01b0 00000000 		.word	quad_count2
 2469 01b4 00000000 		.word	last_quad_count2
 2470 01b8 00000000 		.word	quad_diff1
 2471 01bc 00000000 		.word	quad_diff2
 2472 01c0 00000000 		.word	movement_state
 2473 01c4 00000000 		.word	track_mode
 2474 01c8 00000000 		.word	flag_calc_wheelspeed
 2475 01cc 00000000 		.word	accum_dist
 2476 01d0 28000000 		.word	.LC3
 2477 01d4 00000000 		.word	target_distance_quad
 2478 01d8 00000000 		.word	system_state
 2479 01dc 00000000 		.word	initial_x_pos
 2480 01e0 00001040 		.word	1074790400
 2481 01e4 00000000 		.word	initial_y_pos
 2482 01e8 00000000 		.word	target_distance_cm
 2483              		.cfi_endproc
 2484              	.LFE87:
 2485              		.size	isr_quad1, .-isr_quad1
 2486              		.section	.text.isr_turn_timer,"ax",%progbits
 2487              		.align	2
 2488              		.global	isr_turn_timer
 2489              		.thumb
 2490              		.thumb_func
 2491              		.type	isr_turn_timer, %function
 2492              	isr_turn_timer:
 2493              	.LFB88:
 433:.\main.c      **** 
 434:.\main.c      **** CY_ISR(isr_turn_timer)
 435:.\main.c      **** {
 2494              		.loc 1 435 0
 2495              		.cfi_startproc
 2496              		@ args = 0, pretend = 0, frame = 0
 2497              		@ frame_needed = 1, uses_anonymous_args = 0
 2498 0000 80B5     		push	{r7, lr}
 2499              		.cfi_def_cfa_offset 8
 2500              		.cfi_offset 7, -8
 2501              		.cfi_offset 14, -4
 2502 0002 00AF     		add	r7, sp, #0
 2503              		.cfi_def_cfa_register 7
 436:.\main.c      ****     if(movement_state == LTURN)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 53


 2504              		.loc 1 436 0
 2505 0004 264B     		ldr	r3, .L127
 2506 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 0008 012B     		cmp	r3, #1
 2508 000a 15D1     		bne	.L122
 437:.\main.c      ****     {
 438:.\main.c      ****         if(abs(QuadDec_M2_GetCounter() - start_turn_count) >= 208)
 2509              		.loc 1 438 0
 2510 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2511 0010 0346     		mov	r3, r0
 2512 0012 1A46     		mov	r2, r3
 2513 0014 234B     		ldr	r3, .L127+4
 2514 0016 1B88     		ldrh	r3, [r3]
 2515 0018 1BB2     		sxth	r3, r3
 2516 001a D31A     		subs	r3, r2, r3
 2517 001c 002B     		cmp	r3, #0
 2518 001e B8BF     		it	lt
 2519 0020 5B42     		rsblt	r3, r3, #0
 2520 0022 CF2B     		cmp	r3, #207
 2521 0024 3BDD     		ble	.L121
 439:.\main.c      ****         {
 440:.\main.c      ****             //movement_state = STOPPED;
 441:.\main.c      ****             brakeMotor();
 2522              		.loc 1 441 0
 2523 0026 FFF7FEFF 		bl	brakeMotor
 442:.\main.c      ****             movement_state = prev_movement_state;
 2524              		.loc 1 442 0
 2525 002a 1F4B     		ldr	r3, .L127+8
 2526 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2527 002e 1C4B     		ldr	r3, .L127
 2528 0030 1A70     		strb	r2, [r3]
 443:.\main.c      ****             Timer_2_Stop();
 2529              		.loc 1 443 0
 2530 0032 FFF7FEFF 		bl	Timer_2_Stop
 2531 0036 32E0     		b	.L121
 2532              	.L122:
 444:.\main.c      ****         }
 445:.\main.c      ****     }
 446:.\main.c      ****     else if (movement_state == RTURN)
 2533              		.loc 1 446 0
 2534 0038 194B     		ldr	r3, .L127
 2535 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2536 003c 022B     		cmp	r3, #2
 2537 003e 15D1     		bne	.L125
 447:.\main.c      ****     {
 448:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2538              		.loc 1 448 0
 2539 0040 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2540 0044 0346     		mov	r3, r0
 2541 0046 1A46     		mov	r2, r3
 2542 0048 164B     		ldr	r3, .L127+4
 2543 004a 1B88     		ldrh	r3, [r3]
 2544 004c 1BB2     		sxth	r3, r3
 2545 004e D31A     		subs	r3, r2, r3
 2546 0050 002B     		cmp	r3, #0
 2547 0052 B8BF     		it	lt
 2548 0054 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 54


 2549 0056 CF2B     		cmp	r3, #207
 2550 0058 21DD     		ble	.L121
 449:.\main.c      ****         {
 450:.\main.c      ****             //movement_state = STOPPED;
 451:.\main.c      ****             brakeMotor();
 2551              		.loc 1 451 0
 2552 005a FFF7FEFF 		bl	brakeMotor
 452:.\main.c      ****             movement_state = prev_movement_state;
 2553              		.loc 1 452 0
 2554 005e 124B     		ldr	r3, .L127+8
 2555 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2556 0062 0F4B     		ldr	r3, .L127
 2557 0064 1A70     		strb	r2, [r3]
 453:.\main.c      ****             Timer_2_Stop();
 2558              		.loc 1 453 0
 2559 0066 FFF7FEFF 		bl	Timer_2_Stop
 2560 006a 18E0     		b	.L121
 2561              	.L125:
 454:.\main.c      ****         }
 455:.\main.c      ****     }
 456:.\main.c      ****     else if (movement_state == UTURN)
 2562              		.loc 1 456 0
 2563 006c 0C4B     		ldr	r3, .L127
 2564 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2565 0070 072B     		cmp	r3, #7
 2566 0072 14D1     		bne	.L121
 457:.\main.c      ****     {
 458:.\main.c      ****         if(abs(QuadDec_M1_GetCounter() - start_turn_count) >= 208)
 2567              		.loc 1 458 0
 2568 0074 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2569 0078 0346     		mov	r3, r0
 2570 007a 1A46     		mov	r2, r3
 2571 007c 094B     		ldr	r3, .L127+4
 2572 007e 1B88     		ldrh	r3, [r3]
 2573 0080 1BB2     		sxth	r3, r3
 2574 0082 D31A     		subs	r3, r2, r3
 2575 0084 002B     		cmp	r3, #0
 2576 0086 B8BF     		it	lt
 2577 0088 5B42     		rsblt	r3, r3, #0
 2578 008a CF2B     		cmp	r3, #207
 2579 008c 07DD     		ble	.L121
 459:.\main.c      ****         {
 460:.\main.c      ****             //movement_state = STOPPED;
 461:.\main.c      ****             brakeMotor();
 2580              		.loc 1 461 0
 2581 008e FFF7FEFF 		bl	brakeMotor
 462:.\main.c      ****             movement_state = prev_movement_state;
 2582              		.loc 1 462 0
 2583 0092 054B     		ldr	r3, .L127+8
 2584 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2585 0096 024B     		ldr	r3, .L127
 2586 0098 1A70     		strb	r2, [r3]
 463:.\main.c      ****             Timer_2_Stop();
 2587              		.loc 1 463 0
 2588 009a FFF7FEFF 		bl	Timer_2_Stop
 2589              	.L121:
 464:.\main.c      ****         }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 55


 465:.\main.c      ****     }
 466:.\main.c      **** }
 2590              		.loc 1 466 0
 2591 009e 80BD     		pop	{r7, pc}
 2592              	.L128:
 2593              		.align	2
 2594              	.L127:
 2595 00a0 00000000 		.word	movement_state
 2596 00a4 00000000 		.word	start_turn_count
 2597 00a8 00000000 		.word	prev_movement_state
 2598              		.cfi_endproc
 2599              	.LFE88:
 2600              		.size	isr_turn_timer, .-isr_turn_timer
 2601              		.section	.text.Stop_on_line,"ax",%progbits
 2602              		.align	2
 2603              		.global	Stop_on_line
 2604              		.thumb
 2605              		.thumb_func
 2606              		.type	Stop_on_line, %function
 2607              	Stop_on_line:
 2608              	.LFB89:
 467:.\main.c      **** 
 468:.\main.c      **** 
 469:.\main.c      **** CY_ISR (Stop_on_line)
 470:.\main.c      **** {
 2609              		.loc 1 470 0
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 0
 2612              		@ frame_needed = 1, uses_anonymous_args = 0
 2613              		@ link register save eliminated.
 2614 0000 80B4     		push	{r7}
 2615              		.cfi_def_cfa_offset 4
 2616              		.cfi_offset 7, -4
 2617 0002 00AF     		add	r7, sp, #0
 2618              		.cfi_def_cfa_register 7
 471:.\main.c      ****     movement_state = STOPPED;
 2619              		.loc 1 471 0
 2620 0004 054B     		ldr	r3, .L131
 2621 0006 0322     		movs	r2, #3
 2622 0008 1A70     		strb	r2, [r3]
 472:.\main.c      ****     if(movement_state != DRIVE) return;
 2623              		.loc 1 472 0
 2624 000a 044B     		ldr	r3, .L131
 2625 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2626 000e 002B     		cmp	r3, #0
 2627 0010 00D0     		beq	.L129
 2628 0012 00BF     		nop
 2629              	.L129:
 473:.\main.c      ****     //initTurnLeft();
 474:.\main.c      **** }
 2630              		.loc 1 474 0
 2631 0014 BD46     		mov	sp, r7
 2632              		.cfi_def_cfa_register 13
 2633              		@ sp needed
 2634 0016 5DF8047B 		ldr	r7, [sp], #4
 2635              		.cfi_restore 7
 2636              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 56


 2637 001a 7047     		bx	lr
 2638              	.L132:
 2639              		.align	2
 2640              	.L131:
 2641 001c 00000000 		.word	movement_state
 2642              		.cfi_endproc
 2643              	.LFE89:
 2644              		.size	Stop_on_line, .-Stop_on_line
 2645              		.section	.rodata
 2646 0033 00       		.align	2
 2647              	.LC4:
 2648 0034 53746172 		.ascii	"Starting robot!\015\012\000"
 2648      74696E67 
 2648      20726F62 
 2648      6F74210D 
 2648      0A00
 2649              		.section	.text.button,"ax",%progbits
 2650              		.align	2
 2651              		.global	button
 2652              		.thumb
 2653              		.thumb_func
 2654              		.type	button, %function
 2655              	button:
 2656              	.LFB90:
 475:.\main.c      **** 
 476:.\main.c      **** CY_ISR (button)
 477:.\main.c      **** {
 2657              		.loc 1 477 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 1, uses_anonymous_args = 0
 2661 0000 80B5     		push	{r7, lr}
 2662              		.cfi_def_cfa_offset 8
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 00AF     		add	r7, sp, #0
 2666              		.cfi_def_cfa_register 7
 478:.\main.c      ****     if(BT_ENABLED)
 2667              		.loc 1 478 0
 2668 0004 054B     		ldr	r3, .L135
 2669 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2670 0008 002B     		cmp	r3, #0
 2671 000a 02D0     		beq	.L134
 479:.\main.c      ****     {
 480:.\main.c      ****         UART_PutString("Starting robot!\r\n");
 2672              		.loc 1 480 0
 2673 000c 0448     		ldr	r0, .L135+4
 2674 000e FFF7FEFF 		bl	UART_PutString
 2675              	.L134:
 481:.\main.c      ****     }
 482:.\main.c      ****     movement_state = DRIVE;
 2676              		.loc 1 482 0
 2677 0012 044B     		ldr	r3, .L135+8
 2678 0014 0022     		movs	r2, #0
 2679 0016 1A70     		strb	r2, [r3]
 483:.\main.c      **** }
 2680              		.loc 1 483 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 57


 2681 0018 80BD     		pop	{r7, pc}
 2682              	.L136:
 2683 001a 00BF     		.align	2
 2684              	.L135:
 2685 001c 00000000 		.word	BT_ENABLED
 2686 0020 34000000 		.word	.LC4
 2687 0024 00000000 		.word	movement_state
 2688              		.cfi_endproc
 2689              	.LFE90:
 2690              		.size	button, .-button
 2691              		.section	.text.isr_adcTimer,"ax",%progbits
 2692              		.align	2
 2693              		.global	isr_adcTimer
 2694              		.thumb
 2695              		.thumb_func
 2696              		.type	isr_adcTimer, %function
 2697              	isr_adcTimer:
 2698              	.LFB91:
 484:.\main.c      **** 
 485:.\main.c      **** CY_ISR(isr_adcTimer)
 486:.\main.c      **** {
 2699              		.loc 1 486 0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 1, uses_anonymous_args = 0
 2703 0000 80B5     		push	{r7, lr}
 2704              		.cfi_def_cfa_offset 8
 2705              		.cfi_offset 7, -8
 2706              		.cfi_offset 14, -4
 2707 0002 00AF     		add	r7, sp, #0
 2708              		.cfi_def_cfa_register 7
 487:.\main.c      ****     ADC_StartConvert();
 2709              		.loc 1 487 0
 2710 0004 FFF7FEFF 		bl	ADC_StartConvert
 488:.\main.c      **** }
 2711              		.loc 1 488 0
 2712 0008 80BD     		pop	{r7, pc}
 2713              		.cfi_endproc
 2714              	.LFE91:
 2715              		.size	isr_adcTimer, .-isr_adcTimer
 2716 000a 00BF     		.section	.rodata
 2717 0046 0000     		.align	2
 2718              	.LC5:
 2719 0048 44656164 		.ascii	"Deadzone left\015\012\000"
 2719      7A6F6E65 
 2719      206C6566 
 2719      740D0A00 
 2720              		.section	.text.isr_deadzone,"ax",%progbits
 2721              		.align	2
 2722              		.global	isr_deadzone
 2723              		.thumb
 2724              		.thumb_func
 2725              		.type	isr_deadzone, %function
 2726              	isr_deadzone:
 2727              	.LFB92:
 489:.\main.c      **** 
 490:.\main.c      **** CY_ISR(isr_deadzone)
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 58


 491:.\main.c      **** {
 2728              		.loc 1 491 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 00AF     		add	r7, sp, #0
 2737              		.cfi_def_cfa_register 7
 492:.\main.c      ****     sensorsDisabled = 0;
 2738              		.loc 1 492 0
 2739 0004 054B     		ldr	r3, .L139
 2740 0006 0022     		movs	r2, #0
 2741 0008 1A70     		strb	r2, [r3]
 493:.\main.c      ****     deadzone = 0;
 2742              		.loc 1 493 0
 2743 000a 054B     		ldr	r3, .L139+4
 2744 000c 0022     		movs	r2, #0
 2745 000e 1A70     		strb	r2, [r3]
 494:.\main.c      ****     Timer_Deadzone_Stop();
 2746              		.loc 1 494 0
 2747 0010 FFF7FEFF 		bl	Timer_Deadzone_Stop
 495:.\main.c      ****     UART_PutString("Deadzone left\r\n");
 2748              		.loc 1 495 0
 2749 0014 0348     		ldr	r0, .L139+8
 2750 0016 FFF7FEFF 		bl	UART_PutString
 496:.\main.c      **** }
 2751              		.loc 1 496 0
 2752 001a 80BD     		pop	{r7, pc}
 2753              	.L140:
 2754              		.align	2
 2755              	.L139:
 2756 001c 00000000 		.word	sensorsDisabled
 2757 0020 00000000 		.word	deadzone
 2758 0024 48000000 		.word	.LC5
 2759              		.cfi_endproc
 2760              	.LFE92:
 2761              		.size	isr_deadzone, .-isr_deadzone
 2762              		.section	.text.changeToRF,"ax",%progbits
 2763              		.align	2
 2764              		.global	changeToRF
 2765              		.thumb
 2766              		.thumb_func
 2767              		.type	changeToRF, %function
 2768              	changeToRF:
 2769              	.LFB93:
 497:.\main.c      **** 
 498:.\main.c      **** 
 499:.\main.c      **** 
 500:.\main.c      **** void changeToRF()
 501:.\main.c      **** {
 2770              		.loc 1 501 0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 59


 2774 0000 80B5     		push	{r7, lr}
 2775              		.cfi_def_cfa_offset 8
 2776              		.cfi_offset 7, -8
 2777              		.cfi_offset 14, -4
 2778 0002 00AF     		add	r7, sp, #0
 2779              		.cfi_def_cfa_register 7
 502:.\main.c      ****         //disable BT
 503:.\main.c      ****         BT_ENABLED = 0;
 2780              		.loc 1 503 0
 2781 0004 0B4B     		ldr	r3, .L142
 2782 0006 0022     		movs	r2, #0
 2783 0008 1A70     		strb	r2, [r3]
 504:.\main.c      ****         isrRF_RX_Stop();
 2784              		.loc 1 504 0
 2785 000a FFF7FEFF 		bl	isrRF_RX_Stop
 505:.\main.c      ****         UART_Stop();
 2786              		.loc 1 505 0
 2787 000e FFF7FEFF 		bl	UART_Stop
 506:.\main.c      ****         
 507:.\main.c      ****         //enable RF
 508:.\main.c      ****         BIN_ENABLED = 1;
 2788              		.loc 1 508 0
 2789 0012 094B     		ldr	r3, .L142+4
 2790 0014 0122     		movs	r2, #1
 2791 0016 1A70     		strb	r2, [r3]
 509:.\main.c      ****         UART_clk_SetDividerValue(130);
 2792              		.loc 1 509 0
 2793 0018 8120     		movs	r0, #129
 2794 001a 0121     		movs	r1, #1
 2795 001c FFF7FEFF 		bl	UART_clk_SetDividerRegister
 510:.\main.c      ****         isrRF_RX_StartEx(rxInt);
 2796              		.loc 1 510 0
 2797 0020 0648     		ldr	r0, .L142+8
 2798 0022 FFF7FEFF 		bl	isrRF_RX_StartEx
 511:.\main.c      ****         UART_Start();
 2799              		.loc 1 511 0
 2800 0026 FFF7FEFF 		bl	UART_Start
 512:.\main.c      ****         RF_BT_SELECT_Write(0);
 2801              		.loc 1 512 0
 2802 002a 0020     		movs	r0, #0
 2803 002c FFF7FEFF 		bl	RF_BT_SELECT_Write
 513:.\main.c      **** }
 2804              		.loc 1 513 0
 2805 0030 80BD     		pop	{r7, pc}
 2806              	.L143:
 2807 0032 00BF     		.align	2
 2808              	.L142:
 2809 0034 00000000 		.word	BT_ENABLED
 2810 0038 00000000 		.word	BIN_ENABLED
 2811 003c 00000000 		.word	rxInt
 2812              		.cfi_endproc
 2813              	.LFE93:
 2814              		.size	changeToRF, .-changeToRF
 2815              		.section	.text.changeToBT,"ax",%progbits
 2816              		.align	2
 2817              		.global	changeToBT
 2818              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 60


 2819              		.thumb_func
 2820              		.type	changeToBT, %function
 2821              	changeToBT:
 2822              	.LFB94:
 514:.\main.c      **** 
 515:.\main.c      **** void changeToBT()
 516:.\main.c      **** {
 2823              		.loc 1 516 0
 2824              		.cfi_startproc
 2825              		@ args = 0, pretend = 0, frame = 0
 2826              		@ frame_needed = 1, uses_anonymous_args = 0
 2827 0000 80B5     		push	{r7, lr}
 2828              		.cfi_def_cfa_offset 8
 2829              		.cfi_offset 7, -8
 2830              		.cfi_offset 14, -4
 2831 0002 00AF     		add	r7, sp, #0
 2832              		.cfi_def_cfa_register 7
 517:.\main.c      ****         //disable RF
 518:.\main.c      ****         BIN_ENABLED = 0;
 2833              		.loc 1 518 0
 2834 0004 0B4B     		ldr	r3, .L145
 2835 0006 0022     		movs	r2, #0
 2836 0008 1A70     		strb	r2, [r3]
 519:.\main.c      ****         isrRF_RX_Stop();
 2837              		.loc 1 519 0
 2838 000a FFF7FEFF 		bl	isrRF_RX_Stop
 520:.\main.c      ****         UART_Stop();
 2839              		.loc 1 520 0
 2840 000e FFF7FEFF 		bl	UART_Stop
 521:.\main.c      ****         
 522:.\main.c      ****         //enable BT
 523:.\main.c      ****         BT_ENABLED = 1;
 2841              		.loc 1 523 0
 2842 0012 094B     		ldr	r3, .L145+4
 2843 0014 0122     		movs	r2, #1
 2844 0016 1A70     		strb	r2, [r3]
 524:.\main.c      ****         UART_clk_SetDividerValue(781);
 2845              		.loc 1 524 0
 2846 0018 4FF44370 		mov	r0, #780
 2847 001c 0121     		movs	r1, #1
 2848 001e FFF7FEFF 		bl	UART_clk_SetDividerRegister
 525:.\main.c      ****         isrRF_RX_StartEx(BT_rxInt);
 2849              		.loc 1 525 0
 2850 0022 0648     		ldr	r0, .L145+8
 2851 0024 FFF7FEFF 		bl	isrRF_RX_StartEx
 526:.\main.c      ****         UART_Start();
 2852              		.loc 1 526 0
 2853 0028 FFF7FEFF 		bl	UART_Start
 527:.\main.c      ****         RF_BT_SELECT_Write(1);
 2854              		.loc 1 527 0
 2855 002c 0120     		movs	r0, #1
 2856 002e FFF7FEFF 		bl	RF_BT_SELECT_Write
 528:.\main.c      **** }
 2857              		.loc 1 528 0
 2858 0032 80BD     		pop	{r7, pc}
 2859              	.L146:
 2860              		.align	2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 61


 2861              	.L145:
 2862 0034 00000000 		.word	BIN_ENABLED
 2863 0038 00000000 		.word	BT_ENABLED
 2864 003c 00000000 		.word	BT_rxInt
 2865              		.cfi_endproc
 2866              	.LFE94:
 2867              		.size	changeToBT, .-changeToBT
 2868              		.global	__aeabi_dmul
 2869              		.section	.text.Quad_Dec_response,"ax",%progbits
 2870              		.align	2
 2871              		.global	Quad_Dec_response
 2872              		.thumb
 2873              		.thumb_func
 2874              		.type	Quad_Dec_response, %function
 2875              	Quad_Dec_response:
 2876              	.LFB95:
 529:.\main.c      **** 
 530:.\main.c      **** 
 531:.\main.c      **** void Quad_Dec_response()
 532:.\main.c      **** {
 2877              		.loc 1 532 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 32
 2880              		@ frame_needed = 1, uses_anonymous_args = 0
 2881 0000 B0B5     		push	{r4, r5, r7, lr}
 2882              		.cfi_def_cfa_offset 16
 2883              		.cfi_offset 4, -16
 2884              		.cfi_offset 5, -12
 2885              		.cfi_offset 7, -8
 2886              		.cfi_offset 14, -4
 2887 0002 88B0     		sub	sp, sp, #32
 2888              		.cfi_def_cfa_offset 48
 2889 0004 00AF     		add	r7, sp, #0
 2890              		.cfi_def_cfa_register 7
 533:.\main.c      ****     //Check if the flag has been set
 534:.\main.c      ****     if (!flag_calc_wheelspeed) return;
 2891              		.loc 1 534 0
 2892 0006 814B     		ldr	r3, .L155
 2893 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2894 000a 002B     		cmp	r3, #0
 2895 000c 00D1     		bne	.L148
 2896 000e FAE0     		b	.L147
 2897              	.L148:
 535:.\main.c      ****     flag_calc_wheelspeed = 0;
 2898              		.loc 1 535 0
 2899 0010 7E4B     		ldr	r3, .L155
 2900 0012 0022     		movs	r2, #0
 2901 0014 1A70     		strb	r2, [r3]
 536:.\main.c      ****     
 537:.\main.c      ****     //char wheel_1_str [64];
 538:.\main.c      ****     //char wheel_2_str [64];
 539:.\main.c      ****     //sprintf(wheel_1_str, "quad count 1 is: %d\n\r", quad_diff1);
 540:.\main.c      ****     //usbPutString(wheel_1_str);
 541:.\main.c      ****     //sprintf(wheel_2_str, "quad count 2 is: %d\n\r", quad_diff2);
 542:.\main.c      ****     
 543:.\main.c      ****     //usbPutString(wheel_2_str);
 544:.\main.c      ****     
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 62


 545:.\main.c      ****     int16 leftSpeed = quad_diff1;
 2902              		.loc 1 545 0
 2903 0016 7E4B     		ldr	r3, .L155+4
 2904 0018 1B88     		ldrh	r3, [r3]	@ movhi
 2905 001a FB81     		strh	r3, [r7, #14]	@ movhi
 546:.\main.c      ****     int16 rightSpeed = quad_diff2;
 2906              		.loc 1 546 0
 2907 001c 7D4B     		ldr	r3, .L155+8
 2908 001e 1B88     		ldrh	r3, [r3]	@ movhi
 2909 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 547:.\main.c      ****     double scalingLeft = 1;
 2910              		.loc 1 547 0
 2911 0022 4FF00002 		mov	r2, #0
 2912 0026 7C4B     		ldr	r3, .L155+12
 2913 0028 C7E90623 		strd	r2, [r7, #24]
 548:.\main.c      ****     double scalingRight = 1;
 2914              		.loc 1 548 0
 2915 002c 4FF00002 		mov	r2, #0
 2916 0030 794B     		ldr	r3, .L155+12
 2917 0032 C7E90423 		strd	r2, [r7, #16]
 549:.\main.c      ****     
 550:.\main.c      ****     //there's an initial right tilt by default, so we want to decrease the initial left speed
 551:.\main.c      ****     if(leftSpeed == 0 && rightSpeed == 0){ 
 2918              		.loc 1 551 0
 2919 0036 B7F90E30 		ldrsh	r3, [r7, #14]
 2920 003a 002B     		cmp	r3, #0
 2921 003c 0DD1     		bne	.L150
 2922              		.loc 1 551 0 is_stmt 0 discriminator 1
 2923 003e B7F90C30 		ldrsh	r3, [r7, #12]
 2924 0042 002B     		cmp	r3, #0
 2925 0044 09D1     		bne	.L150
 552:.\main.c      ****        //leftSpeed = 3;
 553:.\main.c      ****         scalingLeft = 8;
 2926              		.loc 1 553 0 is_stmt 1
 2927 0046 4FF00002 		mov	r2, #0
 2928 004a 744B     		ldr	r3, .L155+16
 2929 004c C7E90623 		strd	r2, [r7, #24]
 554:.\main.c      ****         scalingRight = 8;
 2930              		.loc 1 554 0
 2931 0050 4FF00002 		mov	r2, #0
 2932 0054 714B     		ldr	r3, .L155+16
 2933 0056 C7E90423 		strd	r2, [r7, #16]
 2934              	.L150:
 555:.\main.c      ****     }
 556:.\main.c      **** 
 557:.\main.c      ****     int interCalc = leftSpeedLimit - abs(leftSpeed);
 2935              		.loc 1 557 0
 2936 005a 714B     		ldr	r3, .L155+20
 2937 005c 1B88     		ldrh	r3, [r3]
 2938 005e 1AB2     		sxth	r2, r3
 2939 0060 B7F90E30 		ldrsh	r3, [r7, #14]
 2940 0064 002B     		cmp	r3, #0
 2941 0066 B8BF     		it	lt
 2942 0068 5B42     		rsblt	r3, r3, #0
 2943 006a D31A     		subs	r3, r2, r3
 2944 006c BB60     		str	r3, [r7, #8]
 558:.\main.c      ****     int nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs((int)(interCalc)));
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 63


 2945              		.loc 1 558 0
 2946 006e BB68     		ldr	r3, [r7, #8]
 2947 0070 83EAE372 		eor	r2, r3, r3, asr #31
 2948 0074 A2EBE372 		sub	r2, r2, r3, asr #31
 2949 0078 BB68     		ldr	r3, [r7, #8]
 2950 007a 92FBF3F3 		sdiv	r3, r2, r3
 2951 007e 1846     		mov	r0, r3
 2952 0080 FFF7FEFF 		bl	__aeabi_i2d
 2953 0084 0446     		mov	r4, r0
 2954 0086 0D46     		mov	r5, r1
 2955 0088 BB68     		ldr	r3, [r7, #8]
 2956 008a 002B     		cmp	r3, #0
 2957 008c B8BF     		it	lt
 2958 008e 5B42     		rsblt	r3, r3, #0
 2959 0090 1846     		mov	r0, r3
 2960 0092 FFF7FEFF 		bl	__aeabi_i2d
 2961 0096 0246     		mov	r2, r0
 2962 0098 0B46     		mov	r3, r1
 2963 009a 1046     		mov	r0, r2
 2964 009c 1946     		mov	r1, r3
 2965 009e FFF7FEFF 		bl	sqrt
 2966 00a2 0246     		mov	r2, r0
 2967 00a4 0B46     		mov	r3, r1
 2968 00a6 2046     		mov	r0, r4
 2969 00a8 2946     		mov	r1, r5
 2970 00aa FFF7FEFF 		bl	__aeabi_dmul
 2971 00ae 0246     		mov	r2, r0
 2972 00b0 0B46     		mov	r3, r1
 2973 00b2 1046     		mov	r0, r2
 2974 00b4 1946     		mov	r1, r3
 2975 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 2976 00ba 0346     		mov	r3, r0
 2977 00bc 7B60     		str	r3, [r7, #4]
 559:.\main.c      ****     left_duty_cycle = left_duty_cycle + scalingLeft*nextSpeed;
 2978              		.loc 1 559 0
 2979 00be 594B     		ldr	r3, .L155+24
 2980 00c0 1B88     		ldrh	r3, [r3]
 2981 00c2 1BB2     		sxth	r3, r3
 2982 00c4 1846     		mov	r0, r3
 2983 00c6 FFF7FEFF 		bl	__aeabi_i2d
 2984 00ca 0446     		mov	r4, r0
 2985 00cc 0D46     		mov	r5, r1
 2986 00ce 7868     		ldr	r0, [r7, #4]
 2987 00d0 FFF7FEFF 		bl	__aeabi_i2d
 2988 00d4 0246     		mov	r2, r0
 2989 00d6 0B46     		mov	r3, r1
 2990 00d8 1046     		mov	r0, r2
 2991 00da 1946     		mov	r1, r3
 2992 00dc D7E90623 		ldrd	r2, [r7, #24]
 2993 00e0 FFF7FEFF 		bl	__aeabi_dmul
 2994 00e4 0246     		mov	r2, r0
 2995 00e6 0B46     		mov	r3, r1
 2996 00e8 2046     		mov	r0, r4
 2997 00ea 2946     		mov	r1, r5
 2998 00ec FFF7FEFF 		bl	__aeabi_dadd
 2999 00f0 0246     		mov	r2, r0
 3000 00f2 0B46     		mov	r3, r1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 64


 3001 00f4 1046     		mov	r0, r2
 3002 00f6 1946     		mov	r1, r3
 3003 00f8 FFF7FEFF 		bl	__aeabi_d2iz
 3004 00fc 0346     		mov	r3, r0
 3005 00fe 9AB2     		uxth	r2, r3
 3006 0100 484B     		ldr	r3, .L155+24
 3007 0102 1A80     		strh	r2, [r3]	@ movhi
 560:.\main.c      ****     interCalc = rightSpeedLimit - abs(rightSpeed);
 3008              		.loc 1 560 0
 3009 0104 484B     		ldr	r3, .L155+28
 3010 0106 1B88     		ldrh	r3, [r3]
 3011 0108 1AB2     		sxth	r2, r3
 3012 010a B7F90C30 		ldrsh	r3, [r7, #12]
 3013 010e 002B     		cmp	r3, #0
 3014 0110 B8BF     		it	lt
 3015 0112 5B42     		rsblt	r3, r3, #0
 3016 0114 D31A     		subs	r3, r2, r3
 3017 0116 BB60     		str	r3, [r7, #8]
 561:.\main.c      ****     nextSpeed = (abs(interCalc) / interCalc) * sqrt(abs(interCalc));
 3018              		.loc 1 561 0
 3019 0118 BB68     		ldr	r3, [r7, #8]
 3020 011a 83EAE372 		eor	r2, r3, r3, asr #31
 3021 011e A2EBE372 		sub	r2, r2, r3, asr #31
 3022 0122 BB68     		ldr	r3, [r7, #8]
 3023 0124 92FBF3F3 		sdiv	r3, r2, r3
 3024 0128 1846     		mov	r0, r3
 3025 012a FFF7FEFF 		bl	__aeabi_i2d
 3026 012e 0446     		mov	r4, r0
 3027 0130 0D46     		mov	r5, r1
 3028 0132 BB68     		ldr	r3, [r7, #8]
 3029 0134 002B     		cmp	r3, #0
 3030 0136 B8BF     		it	lt
 3031 0138 5B42     		rsblt	r3, r3, #0
 3032 013a 1846     		mov	r0, r3
 3033 013c FFF7FEFF 		bl	__aeabi_i2d
 3034 0140 0246     		mov	r2, r0
 3035 0142 0B46     		mov	r3, r1
 3036 0144 1046     		mov	r0, r2
 3037 0146 1946     		mov	r1, r3
 3038 0148 FFF7FEFF 		bl	sqrt
 3039 014c 0246     		mov	r2, r0
 3040 014e 0B46     		mov	r3, r1
 3041 0150 2046     		mov	r0, r4
 3042 0152 2946     		mov	r1, r5
 3043 0154 FFF7FEFF 		bl	__aeabi_dmul
 3044 0158 0246     		mov	r2, r0
 3045 015a 0B46     		mov	r3, r1
 3046 015c 1046     		mov	r0, r2
 3047 015e 1946     		mov	r1, r3
 3048 0160 FFF7FEFF 		bl	__aeabi_d2iz
 3049 0164 0346     		mov	r3, r0
 3050 0166 7B60     		str	r3, [r7, #4]
 562:.\main.c      ****     right_duty_cycle = right_duty_cycle + scalingRight*nextSpeed;
 3051              		.loc 1 562 0
 3052 0168 304B     		ldr	r3, .L155+32
 3053 016a 1B88     		ldrh	r3, [r3]
 3054 016c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 65


 3055 016e 1846     		mov	r0, r3
 3056 0170 FFF7FEFF 		bl	__aeabi_i2d
 3057 0174 0446     		mov	r4, r0
 3058 0176 0D46     		mov	r5, r1
 3059 0178 7868     		ldr	r0, [r7, #4]
 3060 017a FFF7FEFF 		bl	__aeabi_i2d
 3061 017e 0246     		mov	r2, r0
 3062 0180 0B46     		mov	r3, r1
 3063 0182 1046     		mov	r0, r2
 3064 0184 1946     		mov	r1, r3
 3065 0186 D7E90423 		ldrd	r2, [r7, #16]
 3066 018a FFF7FEFF 		bl	__aeabi_dmul
 3067 018e 0246     		mov	r2, r0
 3068 0190 0B46     		mov	r3, r1
 3069 0192 2046     		mov	r0, r4
 3070 0194 2946     		mov	r1, r5
 3071 0196 FFF7FEFF 		bl	__aeabi_dadd
 3072 019a 0246     		mov	r2, r0
 3073 019c 0B46     		mov	r3, r1
 3074 019e 1046     		mov	r0, r2
 3075 01a0 1946     		mov	r1, r3
 3076 01a2 FFF7FEFF 		bl	__aeabi_d2iz
 3077 01a6 0346     		mov	r3, r0
 3078 01a8 9AB2     		uxth	r2, r3
 3079 01aa 204B     		ldr	r3, .L155+32
 3080 01ac 1A80     		strh	r2, [r3]	@ movhi
 563:.\main.c      ****     
 564:.\main.c      ****     if(right_duty_cycle < 0) right_duty_cycle = 0;
 3081              		.loc 1 564 0
 3082 01ae 1F4B     		ldr	r3, .L155+32
 3083 01b0 1B88     		ldrh	r3, [r3]
 3084 01b2 1BB2     		sxth	r3, r3
 3085 01b4 002B     		cmp	r3, #0
 3086 01b6 02DA     		bge	.L151
 3087              		.loc 1 564 0 is_stmt 0 discriminator 1
 3088 01b8 1C4B     		ldr	r3, .L155+32
 3089 01ba 0022     		movs	r2, #0
 3090 01bc 1A80     		strh	r2, [r3]	@ movhi
 3091              	.L151:
 565:.\main.c      ****     if(left_duty_cycle < 0) left_duty_cycle = 0;
 3092              		.loc 1 565 0 is_stmt 1
 3093 01be 194B     		ldr	r3, .L155+24
 3094 01c0 1B88     		ldrh	r3, [r3]
 3095 01c2 1BB2     		sxth	r3, r3
 3096 01c4 002B     		cmp	r3, #0
 3097 01c6 02DA     		bge	.L152
 3098              		.loc 1 565 0 is_stmt 0 discriminator 1
 3099 01c8 164B     		ldr	r3, .L155+24
 3100 01ca 0022     		movs	r2, #0
 3101 01cc 1A80     		strh	r2, [r3]	@ movhi
 3102              	.L152:
 566:.\main.c      ****     if(right_duty_cycle > 100) right_duty_cycle = 100;
 3103              		.loc 1 566 0 is_stmt 1
 3104 01ce 174B     		ldr	r3, .L155+32
 3105 01d0 1B88     		ldrh	r3, [r3]
 3106 01d2 1BB2     		sxth	r3, r3
 3107 01d4 642B     		cmp	r3, #100
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 66


 3108 01d6 02DD     		ble	.L153
 3109              		.loc 1 566 0 is_stmt 0 discriminator 1
 3110 01d8 144B     		ldr	r3, .L155+32
 3111 01da 6422     		movs	r2, #100
 3112 01dc 1A80     		strh	r2, [r3]	@ movhi
 3113              	.L153:
 567:.\main.c      ****     if(left_duty_cycle > 100) left_duty_cycle = 100;
 3114              		.loc 1 567 0 is_stmt 1
 3115 01de 114B     		ldr	r3, .L155+24
 3116 01e0 1B88     		ldrh	r3, [r3]
 3117 01e2 1BB2     		sxth	r3, r3
 3118 01e4 642B     		cmp	r3, #100
 3119 01e6 02DD     		ble	.L154
 3120              		.loc 1 567 0 is_stmt 0 discriminator 1
 3121 01e8 0E4B     		ldr	r3, .L155+24
 3122 01ea 6422     		movs	r2, #100
 3123 01ec 1A80     		strh	r2, [r3]	@ movhi
 3124              	.L154:
 568:.\main.c      ****     PWM_1_WriteCompare(left_duty_cycle);
 3125              		.loc 1 568 0 is_stmt 1
 3126 01ee 0D4B     		ldr	r3, .L155+24
 3127 01f0 1B88     		ldrh	r3, [r3]
 3128 01f2 DBB2     		uxtb	r3, r3
 3129 01f4 1846     		mov	r0, r3
 3130 01f6 FFF7FEFF 		bl	PWM_1_WriteCompare
 569:.\main.c      ****     PWM_2_WriteCompare(right_duty_cycle);
 3131              		.loc 1 569 0
 3132 01fa 0C4B     		ldr	r3, .L155+32
 3133 01fc 1B88     		ldrh	r3, [r3]
 3134 01fe DBB2     		uxtb	r3, r3
 3135 0200 1846     		mov	r0, r3
 3136 0202 FFF7FEFF 		bl	PWM_2_WriteCompare
 3137              	.L147:
 570:.\main.c      **** }
 3138              		.loc 1 570 0
 3139 0206 2037     		adds	r7, r7, #32
 3140              		.cfi_def_cfa_offset 16
 3141 0208 BD46     		mov	sp, r7
 3142              		.cfi_def_cfa_register 13
 3143              		@ sp needed
 3144 020a B0BD     		pop	{r4, r5, r7, pc}
 3145              	.L156:
 3146              		.align	2
 3147              	.L155:
 3148 020c 00000000 		.word	flag_calc_wheelspeed
 3149 0210 00000000 		.word	quad_diff1
 3150 0214 00000000 		.word	quad_diff2
 3151 0218 0000F03F 		.word	1072693248
 3152 021c 00002040 		.word	1075838976
 3153 0220 00000000 		.word	leftSpeedLimit
 3154 0224 00000000 		.word	left_duty_cycle
 3155 0228 00000000 		.word	rightSpeedLimit
 3156 022c 00000000 		.word	right_duty_cycle
 3157              		.cfi_endproc
 3158              	.LFE95:
 3159              		.size	Quad_Dec_response, .-Quad_Dec_response
 3160              		.section	.text.trackLine,"ax",%progbits
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 67


 3161              		.align	2
 3162              		.global	trackLine
 3163              		.thumb
 3164              		.thumb_func
 3165              		.type	trackLine, %function
 3166              	trackLine:
 3167              	.LFB96:
 571:.\main.c      **** 
 572:.\main.c      **** void trackLine()
 573:.\main.c      **** {
 3168              		.loc 1 573 0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 8
 3171              		@ frame_needed = 1, uses_anonymous_args = 0
 3172 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3173              		.cfi_def_cfa_offset 24
 3174              		.cfi_offset 4, -24
 3175              		.cfi_offset 5, -20
 3176              		.cfi_offset 7, -16
 3177              		.cfi_offset 8, -12
 3178              		.cfi_offset 9, -8
 3179              		.cfi_offset 14, -4
 3180 0004 82B0     		sub	sp, sp, #8
 3181              		.cfi_def_cfa_offset 32
 3182 0006 00AF     		add	r7, sp, #0
 3183              		.cfi_def_cfa_register 7
 574:.\main.c      ****     //read the value of the three central-front sensors
 575:.\main.c      ****     
 576:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3184              		.loc 1 576 0
 3185 0008 FFF7FEFF 		bl	NLSens_out_Read
 3186 000c 0346     		mov	r3, r0
 3187 000e FB71     		strb	r3, [r7, #7]
 577:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3188              		.loc 1 577 0
 3189 0010 FFF7FEFF 		bl	NRSens_out_Read
 3190 0014 0346     		mov	r3, r0
 3191 0016 BB71     		strb	r3, [r7, #6]
 578:.\main.c      ****     uint8 mid = MSens_out_Read();
 3192              		.loc 1 578 0
 3193 0018 FFF7FEFF 		bl	MSens_out_Read
 3194 001c 0346     		mov	r3, r0
 3195 001e 7B71     		strb	r3, [r7, #5]
 579:.\main.c      ****     //if only the left one, hard left
 580:.\main.c      ****     if(nl && !nr && !mid) //if only the left one, hard left
 3196              		.loc 1 580 0
 3197 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3198 0022 002B     		cmp	r3, #0
 3199 0024 27D0     		beq	.L158
 3200              		.loc 1 580 0 is_stmt 0 discriminator 1
 3201 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3202 0028 002B     		cmp	r3, #0
 3203 002a 24D1     		bne	.L158
 3204              		.loc 1 580 0 discriminator 2
 3205 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3206 002e 002B     		cmp	r3, #0
 3207 0030 21D1     		bne	.L158
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 68


 581:.\main.c      ****     {
 582:.\main.c      ****         setSpeed(speed / 1.5, -speed / 1.5);
 3208              		.loc 1 582 0 is_stmt 1
 3209 0032 454B     		ldr	r3, .L163
 3210 0034 D3E90023 		ldrd	r2, [r3]
 3211 0038 1046     		mov	r0, r2
 3212 003a 1946     		mov	r1, r3
 3213 003c 4FF00002 		mov	r2, #0
 3214 0040 424B     		ldr	r3, .L163+4
 3215 0042 FFF7FEFF 		bl	__aeabi_ddiv
 3216 0046 0246     		mov	r2, r0
 3217 0048 0B46     		mov	r3, r1
 3218 004a 1446     		mov	r4, r2
 3219 004c 1D46     		mov	r5, r3
 3220 004e 3E4B     		ldr	r3, .L163
 3221 0050 D3E90023 		ldrd	r2, [r3]
 3222 0054 9046     		mov	r8, r2
 3223 0056 83F00049 		eor	r9, r3, #-2147483648
 3224 005a 4046     		mov	r0, r8
 3225 005c 4946     		mov	r1, r9
 3226 005e 4FF00002 		mov	r2, #0
 3227 0062 3A4B     		ldr	r3, .L163+4
 3228 0064 FFF7FEFF 		bl	__aeabi_ddiv
 3229 0068 0246     		mov	r2, r0
 3230 006a 0B46     		mov	r3, r1
 3231 006c 2046     		mov	r0, r4
 3232 006e 2946     		mov	r1, r5
 3233 0070 FFF7FEFF 		bl	setSpeed
 3234 0074 63E0     		b	.L157
 3235              	.L158:
 583:.\main.c      ****     }
 584:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3236              		.loc 1 584 0
 3237 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3238 0078 002B     		cmp	r3, #0
 3239 007a 11D0     		beq	.L160
 3240              		.loc 1 584 0 is_stmt 0 discriminator 1
 3241 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3242 007e 002B     		cmp	r3, #0
 3243 0080 0ED0     		beq	.L160
 3244              		.loc 1 584 0 discriminator 2
 3245 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3246 0084 002B     		cmp	r3, #0
 3247 0086 0BD1     		bne	.L160
 585:.\main.c      ****     {
 586:.\main.c      ****         setSpeed(speed, 0);
 3248              		.loc 1 586 0 is_stmt 1
 3249 0088 2F4B     		ldr	r3, .L163
 3250 008a D3E90023 		ldrd	r2, [r3]
 3251 008e 1046     		mov	r0, r2
 3252 0090 1946     		mov	r1, r3
 3253 0092 4FF00002 		mov	r2, #0
 3254 0096 4FF00003 		mov	r3, #0
 3255 009a FFF7FEFF 		bl	setSpeed
 3256 009e 4EE0     		b	.L157
 3257              	.L160:
 587:.\main.c      ****     }
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 69


 588:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3258              		.loc 1 588 0
 3259 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3260 00a2 002B     		cmp	r3, #0
 3261 00a4 0FD0     		beq	.L161
 3262              		.loc 1 588 0 is_stmt 0 discriminator 1
 3263 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3264 00a8 002B     		cmp	r3, #0
 3265 00aa 0CD0     		beq	.L161
 3266              		.loc 1 588 0 discriminator 2
 3267 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3268 00ae 002B     		cmp	r3, #0
 3269 00b0 09D1     		bne	.L161
 589:.\main.c      ****     {
 590:.\main.c      ****         setSpeed(0, speed);
 3270              		.loc 1 590 0 is_stmt 1
 3271 00b2 254B     		ldr	r3, .L163
 3272 00b4 D3E90023 		ldrd	r2, [r3]
 3273 00b8 4FF00000 		mov	r0, #0
 3274 00bc 4FF00001 		mov	r1, #0
 3275 00c0 FFF7FEFF 		bl	setSpeed
 3276 00c4 3BE0     		b	.L157
 3277              	.L161:
 591:.\main.c      ****     }
 592:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3278              		.loc 1 592 0
 3279 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3280 00c8 002B     		cmp	r3, #0
 3281 00ca 27D0     		beq	.L162
 3282              		.loc 1 592 0 is_stmt 0 discriminator 1
 3283 00cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3284 00ce 002B     		cmp	r3, #0
 3285 00d0 24D1     		bne	.L162
 3286              		.loc 1 592 0 discriminator 2
 3287 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3288 00d4 002B     		cmp	r3, #0
 3289 00d6 21D1     		bne	.L162
 593:.\main.c      ****     {
 594:.\main.c      ****         setSpeed(-speed / 1.5,speed / 1.5);
 3290              		.loc 1 594 0 is_stmt 1
 3291 00d8 1B4B     		ldr	r3, .L163
 3292 00da D3E90023 		ldrd	r2, [r3]
 3293 00de 1446     		mov	r4, r2
 3294 00e0 83F00045 		eor	r5, r3, #-2147483648
 3295 00e4 2046     		mov	r0, r4
 3296 00e6 2946     		mov	r1, r5
 3297 00e8 4FF00002 		mov	r2, #0
 3298 00ec 174B     		ldr	r3, .L163+4
 3299 00ee FFF7FEFF 		bl	__aeabi_ddiv
 3300 00f2 0246     		mov	r2, r0
 3301 00f4 0B46     		mov	r3, r1
 3302 00f6 1446     		mov	r4, r2
 3303 00f8 1D46     		mov	r5, r3
 3304 00fa 134B     		ldr	r3, .L163
 3305 00fc D3E90023 		ldrd	r2, [r3]
 3306 0100 1046     		mov	r0, r2
 3307 0102 1946     		mov	r1, r3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 70


 3308 0104 4FF00002 		mov	r2, #0
 3309 0108 104B     		ldr	r3, .L163+4
 3310 010a FFF7FEFF 		bl	__aeabi_ddiv
 3311 010e 0246     		mov	r2, r0
 3312 0110 0B46     		mov	r3, r1
 3313 0112 2046     		mov	r0, r4
 3314 0114 2946     		mov	r1, r5
 3315 0116 FFF7FEFF 		bl	setSpeed
 3316 011a 10E0     		b	.L157
 3317              	.L162:
 595:.\main.c      ****     }
 596:.\main.c      ****     else if (mid && !nr && !nl)
 3318              		.loc 1 596 0
 3319 011c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3320 011e 002B     		cmp	r3, #0
 3321 0120 0DD0     		beq	.L157
 3322              		.loc 1 596 0 is_stmt 0 discriminator 1
 3323 0122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3324 0124 002B     		cmp	r3, #0
 3325 0126 0AD1     		bne	.L157
 3326              		.loc 1 596 0 discriminator 2
 3327 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3328 012a 002B     		cmp	r3, #0
 3329 012c 07D1     		bne	.L157
 597:.\main.c      ****     {
 598:.\main.c      ****         setSpeed(speed,speed);
 3330              		.loc 1 598 0 is_stmt 1
 3331 012e 064B     		ldr	r3, .L163
 3332 0130 D3E90001 		ldrd	r0, [r3]
 3333 0134 044B     		ldr	r3, .L163
 3334 0136 D3E90023 		ldrd	r2, [r3]
 3335 013a FFF7FEFF 		bl	setSpeed
 3336              	.L157:
 599:.\main.c      ****     }
 600:.\main.c      ****    // else if (!mid && !nr && !nl)
 601:.\main.c      ****     //{
 602:.\main.c      ****         //setSpeed(0,0);
 603:.\main.c      ****     //}
 604:.\main.c      **** }
 3337              		.loc 1 604 0
 3338 013e 0837     		adds	r7, r7, #8
 3339              		.cfi_def_cfa_offset 24
 3340 0140 BD46     		mov	sp, r7
 3341              		.cfi_def_cfa_register 13
 3342              		@ sp needed
 3343 0142 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3344              	.L164:
 3345 0146 00BF     		.align	2
 3346              	.L163:
 3347 0148 00000000 		.word	speed
 3348 014c 0000F83F 		.word	1073217536
 3349              		.cfi_endproc
 3350              	.LFE96:
 3351              		.size	trackLine, .-trackLine
 3352              		.section	.text.trackLineZ,"ax",%progbits
 3353              		.align	2
 3354              		.global	trackLineZ
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 71


 3355              		.thumb
 3356              		.thumb_func
 3357              		.type	trackLineZ, %function
 3358              	trackLineZ:
 3359              	.LFB97:
 605:.\main.c      **** 
 606:.\main.c      **** void trackLineZ()
 607:.\main.c      **** {
 3360              		.loc 1 607 0
 3361              		.cfi_startproc
 3362              		@ args = 0, pretend = 0, frame = 8
 3363              		@ frame_needed = 1, uses_anonymous_args = 0
 3364 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3365              		.cfi_def_cfa_offset 24
 3366              		.cfi_offset 4, -24
 3367              		.cfi_offset 5, -20
 3368              		.cfi_offset 7, -16
 3369              		.cfi_offset 8, -12
 3370              		.cfi_offset 9, -8
 3371              		.cfi_offset 14, -4
 3372 0004 82B0     		sub	sp, sp, #8
 3373              		.cfi_def_cfa_offset 32
 3374 0006 00AF     		add	r7, sp, #0
 3375              		.cfi_def_cfa_register 7
 608:.\main.c      ****     //read the value of the three central-front sensors
 609:.\main.c      ****     
 610:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3376              		.loc 1 610 0
 3377 0008 FFF7FEFF 		bl	NLSens_out_Read
 3378 000c 0346     		mov	r3, r0
 3379 000e FB71     		strb	r3, [r7, #7]
 611:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3380              		.loc 1 611 0
 3381 0010 FFF7FEFF 		bl	NRSens_out_Read
 3382 0014 0346     		mov	r3, r0
 3383 0016 BB71     		strb	r3, [r7, #6]
 612:.\main.c      ****     uint8 mid = MSens_out_Read();
 3384              		.loc 1 612 0
 3385 0018 FFF7FEFF 		bl	MSens_out_Read
 3386 001c 0346     		mov	r3, r0
 3387 001e 7B71     		strb	r3, [r7, #5]
 613:.\main.c      ****     
 614:.\main.c      ****     //if only the left one, hard left
 615:.\main.c      ****     if(nl && !nr && !mid)// && trackTurnCount > 0)
 3388              		.loc 1 615 0
 3389 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3390 0022 002B     		cmp	r3, #0
 3391 0024 29D0     		beq	.L166
 3392              		.loc 1 615 0 is_stmt 0 discriminator 1
 3393 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3394 0028 002B     		cmp	r3, #0
 3395 002a 26D1     		bne	.L166
 3396              		.loc 1 615 0 discriminator 2
 3397 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3398 002e 002B     		cmp	r3, #0
 3399 0030 23D1     		bne	.L166
 616:.\main.c      ****     {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 72


 617:.\main.c      ****         setSpeed(speed / 2.0, -speed / 2.0);
 3400              		.loc 1 617 0 is_stmt 1
 3401 0032 534B     		ldr	r3, .L171+8
 3402 0034 D3E90023 		ldrd	r2, [r3]
 3403 0038 1046     		mov	r0, r2
 3404 003a 1946     		mov	r1, r3
 3405 003c 4FF00002 		mov	r2, #0
 3406 0040 4FF08043 		mov	r3, #1073741824
 3407 0044 FFF7FEFF 		bl	__aeabi_ddiv
 3408 0048 0246     		mov	r2, r0
 3409 004a 0B46     		mov	r3, r1
 3410 004c 1446     		mov	r4, r2
 3411 004e 1D46     		mov	r5, r3
 3412 0050 4B4B     		ldr	r3, .L171+8
 3413 0052 D3E90023 		ldrd	r2, [r3]
 3414 0056 9046     		mov	r8, r2
 3415 0058 83F00049 		eor	r9, r3, #-2147483648
 3416 005c 4046     		mov	r0, r8
 3417 005e 4946     		mov	r1, r9
 3418 0060 4FF00002 		mov	r2, #0
 3419 0064 4FF08043 		mov	r3, #1073741824
 3420 0068 FFF7FEFF 		bl	__aeabi_ddiv
 3421 006c 0246     		mov	r2, r0
 3422 006e 0B46     		mov	r3, r1
 3423 0070 2046     		mov	r0, r4
 3424 0072 2946     		mov	r1, r5
 3425 0074 FFF7FEFF 		bl	setSpeed
 3426 0078 77E0     		b	.L165
 3427              	.L166:
 618:.\main.c      ****     }
 619:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3428              		.loc 1 619 0
 3429 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3430 007c 002B     		cmp	r3, #0
 3431 007e 19D0     		beq	.L168
 3432              		.loc 1 619 0 is_stmt 0 discriminator 1
 3433 0080 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3434 0082 002B     		cmp	r3, #0
 3435 0084 16D0     		beq	.L168
 3436              		.loc 1 619 0 discriminator 2
 3437 0086 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3438 0088 002B     		cmp	r3, #0
 3439 008a 13D1     		bne	.L168
 620:.\main.c      ****     {
 621:.\main.c      ****         //setSpeed(speed,speed / 1.5);
 622:.\main.c      ****         setSpeed(speed, speed*0.9);
 3440              		.loc 1 622 0 is_stmt 1
 3441 008c 3C4B     		ldr	r3, .L171+8
 3442 008e D3E90045 		ldrd	r4, [r3]
 3443 0092 3B4B     		ldr	r3, .L171+8
 3444 0094 D3E90023 		ldrd	r2, [r3]
 3445 0098 1046     		mov	r0, r2
 3446 009a 1946     		mov	r1, r3
 3447 009c 36A3     		adr	r3, .L171
 3448 009e D3E90023 		ldrd	r2, [r3]
 3449 00a2 FFF7FEFF 		bl	__aeabi_dmul
 3450 00a6 0246     		mov	r2, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 73


 3451 00a8 0B46     		mov	r3, r1
 3452 00aa 2046     		mov	r0, r4
 3453 00ac 2946     		mov	r1, r5
 3454 00ae FFF7FEFF 		bl	setSpeed
 3455 00b2 5AE0     		b	.L165
 3456              	.L168:
 623:.\main.c      ****     }
 624:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3457              		.loc 1 624 0
 3458 00b4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3459 00b6 002B     		cmp	r3, #0
 3460 00b8 19D0     		beq	.L169
 3461              		.loc 1 624 0 is_stmt 0 discriminator 1
 3462 00ba 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3463 00bc 002B     		cmp	r3, #0
 3464 00be 16D0     		beq	.L169
 3465              		.loc 1 624 0 discriminator 2
 3466 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3467 00c2 002B     		cmp	r3, #0
 3468 00c4 13D1     		bne	.L169
 625:.\main.c      ****     {
 626:.\main.c      ****        // setSpeed(speed / 1.5,speed);
 627:.\main.c      ****         setSpeed(speed*0.9,speed);
 3469              		.loc 1 627 0 is_stmt 1
 3470 00c6 2E4B     		ldr	r3, .L171+8
 3471 00c8 D3E90023 		ldrd	r2, [r3]
 3472 00cc 1046     		mov	r0, r2
 3473 00ce 1946     		mov	r1, r3
 3474 00d0 29A3     		adr	r3, .L171
 3475 00d2 D3E90023 		ldrd	r2, [r3]
 3476 00d6 FFF7FEFF 		bl	__aeabi_dmul
 3477 00da 0246     		mov	r2, r0
 3478 00dc 0B46     		mov	r3, r1
 3479 00de 1046     		mov	r0, r2
 3480 00e0 1946     		mov	r1, r3
 3481 00e2 274B     		ldr	r3, .L171+8
 3482 00e4 D3E90023 		ldrd	r2, [r3]
 3483 00e8 FFF7FEFF 		bl	setSpeed
 3484 00ec 3DE0     		b	.L165
 3485              	.L169:
 628:.\main.c      ****     }
 629:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3486              		.loc 1 629 0
 3487 00ee BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3488 00f0 002B     		cmp	r3, #0
 3489 00f2 29D0     		beq	.L170
 3490              		.loc 1 629 0 is_stmt 0 discriminator 1
 3491 00f4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3492 00f6 002B     		cmp	r3, #0
 3493 00f8 26D1     		bne	.L170
 3494              		.loc 1 629 0 discriminator 2
 3495 00fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3496 00fc 002B     		cmp	r3, #0
 3497 00fe 23D1     		bne	.L170
 630:.\main.c      ****     {
 631:.\main.c      ****         setSpeed(-speed / 2.0,speed / 2.0);
 3498              		.loc 1 631 0 is_stmt 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 74


 3499 0100 1F4B     		ldr	r3, .L171+8
 3500 0102 D3E90023 		ldrd	r2, [r3]
 3501 0106 1446     		mov	r4, r2
 3502 0108 83F00045 		eor	r5, r3, #-2147483648
 3503 010c 2046     		mov	r0, r4
 3504 010e 2946     		mov	r1, r5
 3505 0110 4FF00002 		mov	r2, #0
 3506 0114 4FF08043 		mov	r3, #1073741824
 3507 0118 FFF7FEFF 		bl	__aeabi_ddiv
 3508 011c 0246     		mov	r2, r0
 3509 011e 0B46     		mov	r3, r1
 3510 0120 1446     		mov	r4, r2
 3511 0122 1D46     		mov	r5, r3
 3512 0124 164B     		ldr	r3, .L171+8
 3513 0126 D3E90023 		ldrd	r2, [r3]
 3514 012a 1046     		mov	r0, r2
 3515 012c 1946     		mov	r1, r3
 3516 012e 4FF00002 		mov	r2, #0
 3517 0132 4FF08043 		mov	r3, #1073741824
 3518 0136 FFF7FEFF 		bl	__aeabi_ddiv
 3519 013a 0246     		mov	r2, r0
 3520 013c 0B46     		mov	r3, r1
 3521 013e 2046     		mov	r0, r4
 3522 0140 2946     		mov	r1, r5
 3523 0142 FFF7FEFF 		bl	setSpeed
 3524 0146 10E0     		b	.L165
 3525              	.L170:
 632:.\main.c      ****     }
 633:.\main.c      ****     else if (mid && !nr && !nl)
 3526              		.loc 1 633 0
 3527 0148 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3528 014a 002B     		cmp	r3, #0
 3529 014c 0DD0     		beq	.L165
 3530              		.loc 1 633 0 is_stmt 0 discriminator 1
 3531 014e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3532 0150 002B     		cmp	r3, #0
 3533 0152 0AD1     		bne	.L165
 3534              		.loc 1 633 0 discriminator 2
 3535 0154 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3536 0156 002B     		cmp	r3, #0
 3537 0158 07D1     		bne	.L165
 634:.\main.c      ****     {
 635:.\main.c      ****         setSpeed(speed,speed);
 3538              		.loc 1 635 0 is_stmt 1
 3539 015a 094B     		ldr	r3, .L171+8
 3540 015c D3E90001 		ldrd	r0, [r3]
 3541 0160 074B     		ldr	r3, .L171+8
 3542 0162 D3E90023 		ldrd	r2, [r3]
 3543 0166 FFF7FEFF 		bl	setSpeed
 3544              	.L165:
 636:.\main.c      ****     }
 637:.\main.c      ****     //else setSpeed(speed, speed);
 638:.\main.c      ****   
 639:.\main.c      ****    // else if (!mid && !nr && !nl)
 640:.\main.c      ****     //{
 641:.\main.c      ****         //setSpeed(0,0);
 642:.\main.c      ****     //}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 75


 643:.\main.c      **** }
 3545              		.loc 1 643 0
 3546 016a 0837     		adds	r7, r7, #8
 3547              		.cfi_def_cfa_offset 24
 3548 016c BD46     		mov	sp, r7
 3549              		.cfi_def_cfa_register 13
 3550              		@ sp needed
 3551 016e BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3552              	.L172:
 3553 0172 00BFAFF3 		.align	3
 3553      0080
 3554              	.L171:
 3555 0178 CDCCCCCC 		.word	-858993459
 3556 017c CCCCEC3F 		.word	1072483532
 3557 0180 00000000 		.word	speed
 3558              		.cfi_endproc
 3559              	.LFE97:
 3560              		.size	trackLineZ, .-trackLineZ
 3561              		.global	hardTurnCount
 3562 0184 AFF30080 		.bss
 3563              		.type	hardTurnCount, %object
 3564              		.size	hardTurnCount, 1
 3565              	hardTurnCount:
 3566 0cc0 00       		.space	1
 3567 0cc1 000000   		.section	.text.trackLineU,"ax",%progbits
 3568              		.align	2
 3569              		.global	trackLineU
 3570              		.thumb
 3571              		.thumb_func
 3572              		.type	trackLineU, %function
 3573              	trackLineU:
 3574              	.LFB98:
 644:.\main.c      **** 
 645:.\main.c      **** uint8 hardTurnCount = 0;
 646:.\main.c      **** void trackLineU()
 647:.\main.c      **** {
 3575              		.loc 1 647 0
 3576              		.cfi_startproc
 3577              		@ args = 0, pretend = 0, frame = 8
 3578              		@ frame_needed = 1, uses_anonymous_args = 0
 3579 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 3580              		.cfi_def_cfa_offset 24
 3581              		.cfi_offset 4, -24
 3582              		.cfi_offset 5, -20
 3583              		.cfi_offset 7, -16
 3584              		.cfi_offset 8, -12
 3585              		.cfi_offset 9, -8
 3586              		.cfi_offset 14, -4
 3587 0004 82B0     		sub	sp, sp, #8
 3588              		.cfi_def_cfa_offset 32
 3589 0006 00AF     		add	r7, sp, #0
 3590              		.cfi_def_cfa_register 7
 648:.\main.c      ****     //read the value of the three central-front sensors
 649:.\main.c      ****     
 650:.\main.c      ****     uint8 nl = NLSens_out_Read();
 3591              		.loc 1 650 0
 3592 0008 FFF7FEFF 		bl	NLSens_out_Read
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 76


 3593 000c 0346     		mov	r3, r0
 3594 000e FB71     		strb	r3, [r7, #7]
 651:.\main.c      ****     uint8 fl = FLSens_out_Read();
 3595              		.loc 1 651 0
 3596 0010 FFF7FEFF 		bl	FLSens_out_Read
 3597 0014 0346     		mov	r3, r0
 3598 0016 BB71     		strb	r3, [r7, #6]
 652:.\main.c      ****     uint8 nr = NRSens_out_Read();
 3599              		.loc 1 652 0
 3600 0018 FFF7FEFF 		bl	NRSens_out_Read
 3601 001c 0346     		mov	r3, r0
 3602 001e 7B71     		strb	r3, [r7, #5]
 653:.\main.c      ****     uint8 fr = FRSens_out_Read();
 3603              		.loc 1 653 0
 3604 0020 FFF7FEFF 		bl	FRSens_out_Read
 3605 0024 0346     		mov	r3, r0
 3606 0026 3B71     		strb	r3, [r7, #4]
 654:.\main.c      ****     uint8 mid = MSens_out_Read();
 3607              		.loc 1 654 0
 3608 0028 FFF7FEFF 		bl	MSens_out_Read
 3609 002c 0346     		mov	r3, r0
 3610 002e FB70     		strb	r3, [r7, #3]
 655:.\main.c      ****     if (fl && mid && fr) // T intersection
 3611              		.loc 1 655 0
 3612 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3613 0032 002B     		cmp	r3, #0
 3614 0034 06D0     		beq	.L174
 3615              		.loc 1 655 0 is_stmt 0 discriminator 1
 3616 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3617 0038 002B     		cmp	r3, #0
 3618 003a 03D0     		beq	.L174
 3619              		.loc 1 655 0 discriminator 2
 3620 003c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3621 003e 002B     		cmp	r3, #0
 3622 0040 00D0     		beq	.L174
 3623              		.loc 1 655 0
 3624 0042 DBE0     		b	.L173
 3625              	.L174:
 656:.\main.c      ****     {
 657:.\main.c      ****         // not implemented
 658:.\main.c      ****     }
 659:.\main.c      ****     else if (fl && mid) // if far left + centre, we're at a left-turning intersection
 3626              		.loc 1 659 0 is_stmt 1
 3627 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3628 0046 002B     		cmp	r3, #0
 3629 0048 0BD0     		beq	.L176
 3630              		.loc 1 659 0 is_stmt 0 discriminator 1
 3631 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3632 004c 002B     		cmp	r3, #0
 3633 004e 08D0     		beq	.L176
 660:.\main.c      ****     {
 661:.\main.c      ****         setSpeed(speed, speed);
 3634              		.loc 1 661 0 is_stmt 1
 3635 0050 6C4B     		ldr	r3, .L186
 3636 0052 D3E90001 		ldrd	r0, [r3]
 3637 0056 6B4B     		ldr	r3, .L186
 3638 0058 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 77


 3639 005c FFF7FEFF 		bl	setSpeed
 3640 0060 CCE0     		b	.L173
 3641              	.L176:
 662:.\main.c      ****     }
 663:.\main.c      ****     else if (fr && mid) // if far right + centre, we're at a right-turning intersection
 3642              		.loc 1 663 0
 3643 0062 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3644 0064 002B     		cmp	r3, #0
 3645 0066 0BD0     		beq	.L177
 3646              		.loc 1 663 0 is_stmt 0 discriminator 1
 3647 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3648 006a 002B     		cmp	r3, #0
 3649 006c 08D0     		beq	.L177
 664:.\main.c      ****     {
 665:.\main.c      ****         setSpeed(speed, speed);
 3650              		.loc 1 665 0 is_stmt 1
 3651 006e 654B     		ldr	r3, .L186
 3652 0070 D3E90001 		ldrd	r0, [r3]
 3653 0074 634B     		ldr	r3, .L186
 3654 0076 D3E90023 		ldrd	r2, [r3]
 3655 007a FFF7FEFF 		bl	setSpeed
 3656 007e BDE0     		b	.L173
 3657              	.L177:
 666:.\main.c      ****     }
 667:.\main.c      ****     else if(nl && !nr && !mid) //if only the left one, hard left
 3658              		.loc 1 667 0
 3659 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3660 0082 002B     		cmp	r3, #0
 3661 0084 3AD0     		beq	.L178
 3662              		.loc 1 667 0 is_stmt 0 discriminator 1
 3663 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3664 0088 002B     		cmp	r3, #0
 3665 008a 37D1     		bne	.L178
 3666              		.loc 1 667 0 discriminator 2
 3667 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3668 008e 002B     		cmp	r3, #0
 3669 0090 34D1     		bne	.L178
 668:.\main.c      ****     {
 669:.\main.c      ****          if(hardTurnCount < 100)
 3670              		.loc 1 669 0 is_stmt 1
 3671 0092 5D4B     		ldr	r3, .L186+4
 3672 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3673 0096 632B     		cmp	r3, #99
 3674 0098 27D8     		bhi	.L179
 670:.\main.c      ****          {   
 671:.\main.c      ****             setSpeed(speed / 1.5,-speed / 1.5);
 3675              		.loc 1 671 0
 3676 009a 5A4B     		ldr	r3, .L186
 3677 009c D3E90023 		ldrd	r2, [r3]
 3678 00a0 1046     		mov	r0, r2
 3679 00a2 1946     		mov	r1, r3
 3680 00a4 4FF00002 		mov	r2, #0
 3681 00a8 584B     		ldr	r3, .L186+8
 3682 00aa FFF7FEFF 		bl	__aeabi_ddiv
 3683 00ae 0246     		mov	r2, r0
 3684 00b0 0B46     		mov	r3, r1
 3685 00b2 1446     		mov	r4, r2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 78


 3686 00b4 1D46     		mov	r5, r3
 3687 00b6 534B     		ldr	r3, .L186
 3688 00b8 D3E90023 		ldrd	r2, [r3]
 3689 00bc 9046     		mov	r8, r2
 3690 00be 83F00049 		eor	r9, r3, #-2147483648
 3691 00c2 4046     		mov	r0, r8
 3692 00c4 4946     		mov	r1, r9
 3693 00c6 4FF00002 		mov	r2, #0
 3694 00ca 504B     		ldr	r3, .L186+8
 3695 00cc FFF7FEFF 		bl	__aeabi_ddiv
 3696 00d0 0246     		mov	r2, r0
 3697 00d2 0B46     		mov	r3, r1
 3698 00d4 2046     		mov	r0, r4
 3699 00d6 2946     		mov	r1, r5
 3700 00d8 FFF7FEFF 		bl	setSpeed
 672:.\main.c      ****             hardTurnCount++;
 3701              		.loc 1 672 0
 3702 00dc 4A4B     		ldr	r3, .L186+4
 3703 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3704 00e0 0133     		adds	r3, r3, #1
 3705 00e2 DAB2     		uxtb	r2, r3
 3706 00e4 484B     		ldr	r3, .L186+4
 3707 00e6 1A70     		strb	r2, [r3]
 669:.\main.c      ****          {   
 3708              		.loc 1 669 0
 3709 00e8 88E0     		b	.L173
 3710              	.L179:
 673:.\main.c      ****          }
 674:.\main.c      ****         else setSpeed(speed, speed);
 3711              		.loc 1 674 0
 3712 00ea 464B     		ldr	r3, .L186
 3713 00ec D3E90001 		ldrd	r0, [r3]
 3714 00f0 444B     		ldr	r3, .L186
 3715 00f2 D3E90023 		ldrd	r2, [r3]
 3716 00f6 FFF7FEFF 		bl	setSpeed
 669:.\main.c      ****          {   
 3717              		.loc 1 669 0
 3718 00fa 7FE0     		b	.L173
 3719              	.L178:
 675:.\main.c      ****     }
 676:.\main.c      ****     else if(nl && mid && !nr)   //if centre/middle, soft left
 3720              		.loc 1 676 0
 3721 00fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3722 00fe 002B     		cmp	r3, #0
 3723 0100 14D0     		beq	.L181
 3724              		.loc 1 676 0 is_stmt 0 discriminator 1
 3725 0102 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3726 0104 002B     		cmp	r3, #0
 3727 0106 11D0     		beq	.L181
 3728              		.loc 1 676 0 discriminator 2
 3729 0108 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3730 010a 002B     		cmp	r3, #0
 3731 010c 0ED1     		bne	.L181
 677:.\main.c      ****     {
 678:.\main.c      ****         setSpeed(speed, 0);
 3732              		.loc 1 678 0 is_stmt 1
 3733 010e 3D4B     		ldr	r3, .L186
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 79


 3734 0110 D3E90023 		ldrd	r2, [r3]
 3735 0114 1046     		mov	r0, r2
 3736 0116 1946     		mov	r1, r3
 3737 0118 4FF00002 		mov	r2, #0
 3738 011c 4FF00003 		mov	r3, #0
 3739 0120 FFF7FEFF 		bl	setSpeed
 679:.\main.c      ****         hardTurnCount = 0;
 3740              		.loc 1 679 0
 3741 0124 384B     		ldr	r3, .L186+4
 3742 0126 0022     		movs	r2, #0
 3743 0128 1A70     		strb	r2, [r3]
 3744 012a 67E0     		b	.L173
 3745              	.L181:
 680:.\main.c      ****     }
 681:.\main.c      ****     else if (nr && mid && !nl)//if centre/right, soft right
 3746              		.loc 1 681 0
 3747 012c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3748 012e 002B     		cmp	r3, #0
 3749 0130 12D0     		beq	.L182
 3750              		.loc 1 681 0 is_stmt 0 discriminator 1
 3751 0132 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3752 0134 002B     		cmp	r3, #0
 3753 0136 0FD0     		beq	.L182
 3754              		.loc 1 681 0 discriminator 2
 3755 0138 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3756 013a 002B     		cmp	r3, #0
 3757 013c 0CD1     		bne	.L182
 682:.\main.c      ****     {
 683:.\main.c      ****         setSpeed(0, speed);
 3758              		.loc 1 683 0 is_stmt 1
 3759 013e 314B     		ldr	r3, .L186
 3760 0140 D3E90023 		ldrd	r2, [r3]
 3761 0144 4FF00000 		mov	r0, #0
 3762 0148 4FF00001 		mov	r1, #0
 3763 014c FFF7FEFF 		bl	setSpeed
 684:.\main.c      ****         hardTurnCount = 0;
 3764              		.loc 1 684 0
 3765 0150 2D4B     		ldr	r3, .L186+4
 3766 0152 0022     		movs	r2, #0
 3767 0154 1A70     		strb	r2, [r3]
 3768 0156 51E0     		b	.L173
 3769              	.L182:
 685:.\main.c      ****     }
 686:.\main.c      ****    else if (nr && !mid && !nl)    //if only right, hard right
 3770              		.loc 1 686 0
 3771 0158 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3772 015a 002B     		cmp	r3, #0
 3773 015c 3AD0     		beq	.L183
 3774              		.loc 1 686 0 is_stmt 0 discriminator 1
 3775 015e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3776 0160 002B     		cmp	r3, #0
 3777 0162 37D1     		bne	.L183
 3778              		.loc 1 686 0 discriminator 2
 3779 0164 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3780 0166 002B     		cmp	r3, #0
 3781 0168 34D1     		bne	.L183
 687:.\main.c      ****     {
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 80


 688:.\main.c      ****         if(hardTurnCount < 100)
 3782              		.loc 1 688 0 is_stmt 1
 3783 016a 274B     		ldr	r3, .L186+4
 3784 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3785 016e 632B     		cmp	r3, #99
 3786 0170 27D8     		bhi	.L184
 689:.\main.c      ****         {  
 690:.\main.c      ****             setSpeed(-speed / 1.5,speed / 1.5);
 3787              		.loc 1 690 0
 3788 0172 244B     		ldr	r3, .L186
 3789 0174 D3E90023 		ldrd	r2, [r3]
 3790 0178 1446     		mov	r4, r2
 3791 017a 83F00045 		eor	r5, r3, #-2147483648
 3792 017e 2046     		mov	r0, r4
 3793 0180 2946     		mov	r1, r5
 3794 0182 4FF00002 		mov	r2, #0
 3795 0186 214B     		ldr	r3, .L186+8
 3796 0188 FFF7FEFF 		bl	__aeabi_ddiv
 3797 018c 0246     		mov	r2, r0
 3798 018e 0B46     		mov	r3, r1
 3799 0190 1446     		mov	r4, r2
 3800 0192 1D46     		mov	r5, r3
 3801 0194 1B4B     		ldr	r3, .L186
 3802 0196 D3E90023 		ldrd	r2, [r3]
 3803 019a 1046     		mov	r0, r2
 3804 019c 1946     		mov	r1, r3
 3805 019e 4FF00002 		mov	r2, #0
 3806 01a2 1A4B     		ldr	r3, .L186+8
 3807 01a4 FFF7FEFF 		bl	__aeabi_ddiv
 3808 01a8 0246     		mov	r2, r0
 3809 01aa 0B46     		mov	r3, r1
 3810 01ac 2046     		mov	r0, r4
 3811 01ae 2946     		mov	r1, r5
 3812 01b0 FFF7FEFF 		bl	setSpeed
 691:.\main.c      ****             hardTurnCount++;
 3813              		.loc 1 691 0
 3814 01b4 144B     		ldr	r3, .L186+4
 3815 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3816 01b8 0133     		adds	r3, r3, #1
 3817 01ba DAB2     		uxtb	r2, r3
 3818 01bc 124B     		ldr	r3, .L186+4
 3819 01be 1A70     		strb	r2, [r3]
 688:.\main.c      ****         {  
 3820              		.loc 1 688 0
 3821 01c0 1CE0     		b	.L173
 3822              	.L184:
 692:.\main.c      ****         }
 693:.\main.c      ****         else setSpeed(speed, speed);
 3823              		.loc 1 693 0
 3824 01c2 104B     		ldr	r3, .L186
 3825 01c4 D3E90001 		ldrd	r0, [r3]
 3826 01c8 0E4B     		ldr	r3, .L186
 3827 01ca D3E90023 		ldrd	r2, [r3]
 3828 01ce FFF7FEFF 		bl	setSpeed
 688:.\main.c      ****         {  
 3829              		.loc 1 688 0
 3830 01d2 13E0     		b	.L173
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 81


 3831              	.L183:
 694:.\main.c      ****     }
 695:.\main.c      ****     else if (mid && !nr && !nl)
 3832              		.loc 1 695 0
 3833 01d4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3834 01d6 002B     		cmp	r3, #0
 3835 01d8 10D0     		beq	.L173
 3836              		.loc 1 695 0 is_stmt 0 discriminator 1
 3837 01da 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3838 01dc 002B     		cmp	r3, #0
 3839 01de 0DD1     		bne	.L173
 3840              		.loc 1 695 0 discriminator 2
 3841 01e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3842 01e2 002B     		cmp	r3, #0
 3843 01e4 0AD1     		bne	.L173
 696:.\main.c      ****     {
 697:.\main.c      ****         hardTurnCount = 0;
 3844              		.loc 1 697 0 is_stmt 1
 3845 01e6 084B     		ldr	r3, .L186+4
 3846 01e8 0022     		movs	r2, #0
 3847 01ea 1A70     		strb	r2, [r3]
 698:.\main.c      ****         setSpeed(speed,speed);
 3848              		.loc 1 698 0
 3849 01ec 054B     		ldr	r3, .L186
 3850 01ee D3E90001 		ldrd	r0, [r3]
 3851 01f2 044B     		ldr	r3, .L186
 3852 01f4 D3E90023 		ldrd	r2, [r3]
 3853 01f8 FFF7FEFF 		bl	setSpeed
 3854              	.L173:
 699:.\main.c      ****     }
 700:.\main.c      ****    // else if (!mid && !nr && !nl)
 701:.\main.c      ****     //{
 702:.\main.c      ****         //setSpeed(0,0);
 703:.\main.c      ****     //}
 704:.\main.c      ****    
 705:.\main.c      **** 
 706:.\main.c      **** }
 3855              		.loc 1 706 0
 3856 01fc 0837     		adds	r7, r7, #8
 3857              		.cfi_def_cfa_offset 24
 3858 01fe BD46     		mov	sp, r7
 3859              		.cfi_def_cfa_register 13
 3860              		@ sp needed
 3861 0200 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3862              	.L187:
 3863              		.align	2
 3864              	.L186:
 3865 0204 00000000 		.word	speed
 3866 0208 00000000 		.word	hardTurnCount
 3867 020c 0000F83F 		.word	1073217536
 3868              		.cfi_endproc
 3869              	.LFE98:
 3870              		.size	trackLineU, .-trackLineU
 3871              		.global	__aeabi_fadd
 3872              		.section	.rodata
 3873              		.align	2
 3874              	.LC6:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 82


 3875 0058 42617474 		.ascii	"Battery Voltage: %dmv\012\015\000"
 3875      65727920 
 3875      566F6C74 
 3875      6167653A 
 3875      2025646D 
 3876              		.section	.text.print_ADC,"ax",%progbits
 3877              		.align	2
 3878              		.global	print_ADC
 3879              		.thumb
 3880              		.thumb_func
 3881              		.type	print_ADC, %function
 3882              	print_ADC:
 3883              	.LFB99:
 707:.\main.c      **** 
 708:.\main.c      **** void print_ADC()
 709:.\main.c      **** {
 3884              		.loc 1 709 0
 3885              		.cfi_startproc
 3886              		@ args = 0, pretend = 0, frame = 24
 3887              		@ frame_needed = 1, uses_anonymous_args = 0
 3888 0000 80B5     		push	{r7, lr}
 3889              		.cfi_def_cfa_offset 8
 3890              		.cfi_offset 7, -8
 3891              		.cfi_offset 14, -4
 3892 0002 86B0     		sub	sp, sp, #24
 3893              		.cfi_def_cfa_offset 32
 3894 0004 00AF     		add	r7, sp, #0
 3895              		.cfi_def_cfa_register 7
 710:.\main.c      ****    //usbPutString("HII\n");
 711:.\main.c      ****     if(flag_receive_ADC == 1)
 3896              		.loc 1 711 0
 3897 0006 274B     		ldr	r3, .L191
 3898 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3899 000a 012B     		cmp	r3, #1
 3900 000c 46D1     		bne	.L188
 3901              	.LBB6:
 712:.\main.c      ****     {
 713:.\main.c      ****         //usbPutString("AAA\r\n");
 714:.\main.c      ****         flag_receive_ADC = 0;
 3902              		.loc 1 714 0
 3903 000e 254B     		ldr	r3, .L191
 3904 0010 0022     		movs	r2, #0
 3905 0012 1A70     		strb	r2, [r3]
 715:.\main.c      ****         
 716:.\main.c      ****        // int8 channel = ADC_
 717:.\main.c      ****         float scalingFactor = 0.972;
 3906              		.loc 1 717 0
 3907 0014 244B     		ldr	r3, .L191+4
 3908 0016 7B61     		str	r3, [r7, #20]	@ float
 718:.\main.c      ****         int16 converted_val = (5000 * adc_result) / 4096 * scalingFactor * 2;
 3909              		.loc 1 718 0
 3910 0018 244B     		ldr	r3, .L191+8
 3911 001a 1B88     		ldrh	r3, [r3]
 3912 001c 1BB2     		sxth	r3, r3
 3913 001e 41F28832 		movw	r2, #5000
 3914 0022 02FB03F3 		mul	r3, r2, r3
 3915 0026 002B     		cmp	r3, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 83


 3916 0028 01DA     		bge	.L190
 3917 002a 03F6FF73 		addw	r3, r3, #4095
 3918              	.L190:
 3919 002e 1B13     		asrs	r3, r3, #12
 3920 0030 1846     		mov	r0, r3
 3921 0032 FFF7FEFF 		bl	__aeabi_i2f
 3922 0036 0346     		mov	r3, r0
 3923 0038 1846     		mov	r0, r3
 3924 003a 7969     		ldr	r1, [r7, #20]	@ float
 3925 003c FFF7FEFF 		bl	__aeabi_fmul
 3926 0040 0346     		mov	r3, r0
 3927 0042 1846     		mov	r0, r3
 3928 0044 1946     		mov	r1, r3
 3929 0046 FFF7FEFF 		bl	__aeabi_fadd
 3930 004a 0346     		mov	r3, r0
 3931 004c 1846     		mov	r0, r3
 3932 004e FFF7FEFF 		bl	__aeabi_f2iz
 3933 0052 0346     		mov	r3, r0
 3934 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 719:.\main.c      ****         converted_val = (converted_val + prevVoltage + prevVoltage2) / 3; //smooth rapid changes in
 3935              		.loc 1 719 0
 3936 0056 B7F91220 		ldrsh	r2, [r7, #18]
 3937 005a 154B     		ldr	r3, .L191+12
 3938 005c 1B88     		ldrh	r3, [r3]
 3939 005e 1BB2     		sxth	r3, r3
 3940 0060 1A44     		add	r2, r2, r3
 3941 0062 144B     		ldr	r3, .L191+16
 3942 0064 1B88     		ldrh	r3, [r3]
 3943 0066 1BB2     		sxth	r3, r3
 3944 0068 1344     		add	r3, r3, r2
 3945 006a 134A     		ldr	r2, .L191+20
 3946 006c 82FB0312 		smull	r1, r2, r2, r3
 3947 0070 DB17     		asrs	r3, r3, #31
 3948 0072 D31A     		subs	r3, r2, r3
 3949 0074 7B82     		strh	r3, [r7, #18]	@ movhi
 720:.\main.c      ****         prevVoltage2 = prevVoltage;
 3950              		.loc 1 720 0
 3951 0076 0E4B     		ldr	r3, .L191+12
 3952 0078 1A88     		ldrh	r2, [r3]
 3953 007a 0E4B     		ldr	r3, .L191+16
 3954 007c 1A80     		strh	r2, [r3]	@ movhi
 721:.\main.c      ****         prevVoltage = converted_val;
 3955              		.loc 1 721 0
 3956 007e 0C4A     		ldr	r2, .L191+12
 3957 0080 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 3958 0082 1380     		strh	r3, [r2]	@ movhi
 722:.\main.c      ****         
 723:.\main.c      ****         char result_str[16];
 724:.\main.c      ****         sprintf(result_str, "Battery Voltage: %dmv\n\r", converted_val);
 3959              		.loc 1 724 0
 3960 0084 B7F91230 		ldrsh	r3, [r7, #18]
 3961 0088 3A46     		mov	r2, r7
 3962 008a 1046     		mov	r0, r2
 3963 008c 0B49     		ldr	r1, .L191+24
 3964 008e 1A46     		mov	r2, r3
 3965 0090 FFF7FEFF 		bl	sprintf
 725:.\main.c      ****         
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 84


 726:.\main.c      ****         usbPutString(result_str);
 3966              		.loc 1 726 0
 3967 0094 3B46     		mov	r3, r7
 3968 0096 1846     		mov	r0, r3
 3969 0098 FFF7FEFF 		bl	usbPutString
 3970              	.L188:
 3971              	.LBE6:
 727:.\main.c      ****     }
 728:.\main.c      **** }
 3972              		.loc 1 728 0
 3973 009c 1837     		adds	r7, r7, #24
 3974              		.cfi_def_cfa_offset 8
 3975 009e BD46     		mov	sp, r7
 3976              		.cfi_def_cfa_register 13
 3977              		@ sp needed
 3978 00a0 80BD     		pop	{r7, pc}
 3979              	.L192:
 3980 00a2 00BF     		.align	2
 3981              	.L191:
 3982 00a4 00000000 		.word	flag_receive_ADC
 3983 00a8 FED4783F 		.word	1064883454
 3984 00ac 00000000 		.word	adc_result
 3985 00b0 00000000 		.word	prevVoltage
 3986 00b4 00000000 		.word	prevVoltage2
 3987 00b8 56555555 		.word	1431655766
 3988 00bc 58000000 		.word	.LC6
 3989              		.cfi_endproc
 3990              	.LFE99:
 3991              		.size	print_ADC, .-print_ADC
 3992              		.section	.rodata
 3993              		.align	2
 3994              	.LC7:
 3995 0070 52535349 		.ascii	"RSSI:\000"
 3995      3A00
 3996 0076 0000     		.align	2
 3997              	.LC8:
 3998 0078 25640D0A 		.ascii	"%d\015\012\000"
 3998      00
 3999 007d 000000   		.align	2
 4000              	.LC9:
 4001 0080 726F626F 		.ascii	"robot_x:\000"
 4001      745F783A 
 4001      00
 4002 0089 000000   		.align	2
 4003              	.LC10:
 4004 008c 726F626F 		.ascii	"robot_y:\000"
 4004      745F793A 
 4004      00
 4005 0095 000000   		.align	2
 4006              	.LC11:
 4007 0098 726F626F 		.ascii	"robot_dir:\000"
 4007      745F6469 
 4007      723A00
 4008              		.section	.text.print_RF,"ax",%progbits
 4009              		.align	2
 4010              		.global	print_RF
 4011              		.thumb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 85


 4012              		.thumb_func
 4013              		.type	print_RF, %function
 4014              	print_RF:
 4015              	.LFB100:
 729:.\main.c      **** 
 730:.\main.c      **** void print_RF()
 731:.\main.c      **** {
 4016              		.loc 1 731 0
 4017              		.cfi_startproc
 4018              		@ args = 0, pretend = 0, frame = 16
 4019              		@ frame_needed = 1, uses_anonymous_args = 0
 4020 0000 80B5     		push	{r7, lr}
 4021              		.cfi_def_cfa_offset 8
 4022              		.cfi_offset 7, -8
 4023              		.cfi_offset 14, -4
 4024 0002 84B0     		sub	sp, sp, #16
 4025              		.cfi_def_cfa_offset 24
 4026 0004 00AF     		add	r7, sp, #0
 4027              		.cfi_def_cfa_register 7
 732:.\main.c      ****     if(flag_print_rf == 1)
 4028              		.loc 1 732 0
 4029 0006 254B     		ldr	r3, .L195
 4030 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4031 000a 012B     		cmp	r3, #1
 4032 000c 42D1     		bne	.L193
 4033              	.LBB7:
 733:.\main.c      ****     {
 734:.\main.c      ****         char printString[16];
 735:.\main.c      ****         flag_print_rf = 0;
 4034              		.loc 1 735 0
 4035 000e 234B     		ldr	r3, .L195
 4036 0010 0022     		movs	r2, #0
 4037 0012 1A70     		strb	r2, [r3]
 736:.\main.c      ****         usbPutString("RSSI:");
 4038              		.loc 1 736 0
 4039 0014 2248     		ldr	r0, .L195+4
 4040 0016 FFF7FEFF 		bl	usbPutString
 737:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.rssi);
 4041              		.loc 1 737 0
 4042 001a 224B     		ldr	r3, .L195+8
 4043 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4044 001e 5BB2     		sxtb	r3, r3
 4045 0020 3A46     		mov	r2, r7
 4046 0022 1046     		mov	r0, r2
 4047 0024 2049     		ldr	r1, .L195+12
 4048 0026 1A46     		mov	r2, r3
 4049 0028 FFF7FEFF 		bl	sprintf
 738:.\main.c      ****         usbPutString(printString);
 4050              		.loc 1 738 0
 4051 002c 3B46     		mov	r3, r7
 4052 002e 1846     		mov	r0, r3
 4053 0030 FFF7FEFF 		bl	usbPutString
 739:.\main.c      ****         usbPutString("robot_x:");
 4054              		.loc 1 739 0
 4055 0034 1D48     		ldr	r0, .L195+16
 4056 0036 FFF7FEFF 		bl	usbPutString
 740:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_xpos);
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 86


 4057              		.loc 1 740 0
 4058 003a 1A4B     		ldr	r3, .L195+8
 4059 003c 5B88     		ldrh	r3, [r3, #2]
 4060 003e 1BB2     		sxth	r3, r3
 4061 0040 3A46     		mov	r2, r7
 4062 0042 1046     		mov	r0, r2
 4063 0044 1849     		ldr	r1, .L195+12
 4064 0046 1A46     		mov	r2, r3
 4065 0048 FFF7FEFF 		bl	sprintf
 741:.\main.c      ****         usbPutString(printString);
 4066              		.loc 1 741 0
 4067 004c 3B46     		mov	r3, r7
 4068 004e 1846     		mov	r0, r3
 4069 0050 FFF7FEFF 		bl	usbPutString
 742:.\main.c      ****         usbPutString("robot_y:");
 4070              		.loc 1 742 0
 4071 0054 1648     		ldr	r0, .L195+20
 4072 0056 FFF7FEFF 		bl	usbPutString
 743:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_ypos);
 4073              		.loc 1 743 0
 4074 005a 124B     		ldr	r3, .L195+8
 4075 005c 9B88     		ldrh	r3, [r3, #4]
 4076 005e 1BB2     		sxth	r3, r3
 4077 0060 3A46     		mov	r2, r7
 4078 0062 1046     		mov	r0, r2
 4079 0064 1049     		ldr	r1, .L195+12
 4080 0066 1A46     		mov	r2, r3
 4081 0068 FFF7FEFF 		bl	sprintf
 744:.\main.c      ****         usbPutString(printString);
 4082              		.loc 1 744 0
 4083 006c 3B46     		mov	r3, r7
 4084 006e 1846     		mov	r0, r3
 4085 0070 FFF7FEFF 		bl	usbPutString
 745:.\main.c      ****         usbPutString("robot_dir:");
 4086              		.loc 1 745 0
 4087 0074 0F48     		ldr	r0, .L195+24
 4088 0076 FFF7FEFF 		bl	usbPutString
 746:.\main.c      ****         sprintf(printString, "%d\r\n", system_state.robot_orientation);
 4089              		.loc 1 746 0
 4090 007a 0A4B     		ldr	r3, .L195+8
 4091 007c DB88     		ldrh	r3, [r3, #6]
 4092 007e 1BB2     		sxth	r3, r3
 4093 0080 3A46     		mov	r2, r7
 4094 0082 1046     		mov	r0, r2
 4095 0084 0849     		ldr	r1, .L195+12
 4096 0086 1A46     		mov	r2, r3
 4097 0088 FFF7FEFF 		bl	sprintf
 747:.\main.c      ****         usbPutString(printString);
 4098              		.loc 1 747 0
 4099 008c 3B46     		mov	r3, r7
 4100 008e 1846     		mov	r0, r3
 4101 0090 FFF7FEFF 		bl	usbPutString
 4102              	.L193:
 4103              	.LBE7:
 748:.\main.c      ****     }
 749:.\main.c      **** }
 4104              		.loc 1 749 0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 87


 4105 0094 1037     		adds	r7, r7, #16
 4106              		.cfi_def_cfa_offset 8
 4107 0096 BD46     		mov	sp, r7
 4108              		.cfi_def_cfa_register 13
 4109              		@ sp needed
 4110 0098 80BD     		pop	{r7, pc}
 4111              	.L196:
 4112 009a 00BF     		.align	2
 4113              	.L195:
 4114 009c 00000000 		.word	flag_print_rf
 4115 00a0 70000000 		.word	.LC7
 4116 00a4 00000000 		.word	system_state
 4117 00a8 78000000 		.word	.LC8
 4118 00ac 80000000 		.word	.LC9
 4119 00b0 8C000000 		.word	.LC10
 4120 00b4 98000000 		.word	.LC11
 4121              		.cfi_endproc
 4122              	.LFE100:
 4123              		.size	print_RF, .-print_RF
 4124              		.section	.text.readFrontSensors,"ax",%progbits
 4125              		.align	2
 4126              		.global	readFrontSensors
 4127              		.thumb
 4128              		.thumb_func
 4129              		.type	readFrontSensors, %function
 4130              	readFrontSensors:
 4131              	.LFB101:
 750:.\main.c      **** 
 751:.\main.c      **** void readFrontSensors(uint8 sensorVals[5])
 752:.\main.c      **** {
 4132              		.loc 1 752 0
 4133              		.cfi_startproc
 4134              		@ args = 0, pretend = 0, frame = 8
 4135              		@ frame_needed = 1, uses_anonymous_args = 0
 4136 0000 90B5     		push	{r4, r7, lr}
 4137              		.cfi_def_cfa_offset 12
 4138              		.cfi_offset 4, -12
 4139              		.cfi_offset 7, -8
 4140              		.cfi_offset 14, -4
 4141 0002 83B0     		sub	sp, sp, #12
 4142              		.cfi_def_cfa_offset 24
 4143 0004 00AF     		add	r7, sp, #0
 4144              		.cfi_def_cfa_register 7
 4145 0006 7860     		str	r0, [r7, #4]
 753:.\main.c      ****     sensorVals[0] = FLSens_out_Read();
 4146              		.loc 1 753 0
 4147 0008 FFF7FEFF 		bl	FLSens_out_Read
 4148 000c 0346     		mov	r3, r0
 4149 000e 1A46     		mov	r2, r3
 4150 0010 7B68     		ldr	r3, [r7, #4]
 4151 0012 1A70     		strb	r2, [r3]
 754:.\main.c      ****     sensorVals[1] = NLSens_out_Read();
 4152              		.loc 1 754 0
 4153 0014 7B68     		ldr	r3, [r7, #4]
 4154 0016 5C1C     		adds	r4, r3, #1
 4155 0018 FFF7FEFF 		bl	NLSens_out_Read
 4156 001c 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 88


 4157 001e 2370     		strb	r3, [r4]
 755:.\main.c      ****     sensorVals[2] = MSens_out_Read();
 4158              		.loc 1 755 0
 4159 0020 7B68     		ldr	r3, [r7, #4]
 4160 0022 9C1C     		adds	r4, r3, #2
 4161 0024 FFF7FEFF 		bl	MSens_out_Read
 4162 0028 0346     		mov	r3, r0
 4163 002a 2370     		strb	r3, [r4]
 756:.\main.c      ****     sensorVals[3] = NRSens_out_Read();
 4164              		.loc 1 756 0
 4165 002c 7B68     		ldr	r3, [r7, #4]
 4166 002e DC1C     		adds	r4, r3, #3
 4167 0030 FFF7FEFF 		bl	NRSens_out_Read
 4168 0034 0346     		mov	r3, r0
 4169 0036 2370     		strb	r3, [r4]
 757:.\main.c      ****     sensorVals[4] = FRSens_out_Read();
 4170              		.loc 1 757 0
 4171 0038 7B68     		ldr	r3, [r7, #4]
 4172 003a 1C1D     		adds	r4, r3, #4
 4173 003c FFF7FEFF 		bl	FRSens_out_Read
 4174 0040 0346     		mov	r3, r0
 4175 0042 2370     		strb	r3, [r4]
 758:.\main.c      **** }
 4176              		.loc 1 758 0
 4177 0044 0C37     		adds	r7, r7, #12
 4178              		.cfi_def_cfa_offset 12
 4179 0046 BD46     		mov	sp, r7
 4180              		.cfi_def_cfa_register 13
 4181              		@ sp needed
 4182 0048 90BD     		pop	{r4, r7, pc}
 4183              		.cfi_endproc
 4184              	.LFE101:
 4185              		.size	readFrontSensors, .-readFrontSensors
 4186 004a 00BF     		.section	.rodata
 4187 00a3 00       		.align	2
 4188              	.LC12:
 4189 00a4 44656164 		.ascii	"Deadzone entered!\015\012\000"
 4189      7A6F6E65 
 4189      20656E74 
 4189      65726564 
 4189      210D0A00 
 4190              		.section	.text.main,"ax",%progbits
 4191              		.align	2
 4192              		.global	main
 4193              		.thumb
 4194              		.thumb_func
 4195              		.type	main, %function
 4196              	main:
 4197              	.LFB102:
 759:.\main.c      **** 
 760:.\main.c      **** int main()
 761:.\main.c      **** {  
 4198              		.loc 1 761 0
 4199              		.cfi_startproc
 4200              		@ args = 0, pretend = 0, frame = 8
 4201              		@ frame_needed = 1, uses_anonymous_args = 0
 4202 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 89


 4203              		.cfi_def_cfa_offset 8
 4204              		.cfi_offset 7, -8
 4205              		.cfi_offset 14, -4
 4206 0002 82B0     		sub	sp, sp, #8
 4207              		.cfi_def_cfa_offset 16
 4208 0004 00AF     		add	r7, sp, #0
 4209              		.cfi_def_cfa_register 7
 762:.\main.c      **** // -------------------------------------------------------------------------------MAIN-------------
 763:.\main.c      **** // ----- INITIALIZATIONS ----------
 764:.\main.c      ****     CYGlobalIntEnable;
 4210              		.loc 1 764 0
 4211              	@ 764 ".\main.c" 1
 4212 0006 62B6     		CPSIE   i
 4213              	@ 0 "" 2
 765:.\main.c      ****     if(ENABLE_PWM)
 766:.\main.c      ****     {
 767:.\main.c      ****         PWM_1_Start();// starting the pwm
 4214              		.loc 1 767 0
 4215              		.thumb
 4216 0008 FFF7FEFF 		bl	PWM_1_Start
 768:.\main.c      ****         PWM_2_Start();// starting the pwm
 4217              		.loc 1 768 0
 4218 000c FFF7FEFF 		bl	PWM_2_Start
 769:.\main.c      ****     }
 770:.\main.c      ****     
 771:.\main.c      ****     if(ENABLE_ADC)
 772:.\main.c      ****     {
 773:.\main.c      ****         ADC_Start();
 774:.\main.c      ****         isr_eoc_StartEx(adc_isr);
 775:.\main.c      ****         //ADC_StartConvert();
 776:.\main.c      ****         
 777:.\main.c      ****         //start the ADC timer for software trigger mode
 778:.\main.c      ****         Timer_TS_Start();
 779:.\main.c      ****         isr_TS_StartEx(isr_adcTimer);
 780:.\main.c      ****     }
 781:.\main.c      ****     
 782:.\main.c      ****     if (ENABLE_QUAD)
 783:.\main.c      ****     {
 784:.\main.c      ****         QuadDec_M1_Start();
 4219              		.loc 1 784 0
 4220 0010 FFF7FEFF 		bl	QuadDec_M1_Start
 785:.\main.c      ****         QuadDec_M2_Start();
 4221              		.loc 1 785 0
 4222 0014 FFF7FEFF 		bl	QuadDec_M2_Start
 786:.\main.c      ****         
 787:.\main.c      ****         isr_quad1_StartEx(isr_quad1);
 4223              		.loc 1 787 0
 4224 0018 A648     		ldr	r0, .L243
 4225 001a FFF7FEFF 		bl	isr_quad1_StartEx
 788:.\main.c      ****         isr_turn_count_StartEx(isr_turn_timer);
 4226              		.loc 1 788 0
 4227 001e A648     		ldr	r0, .L243+4
 4228 0020 FFF7FEFF 		bl	isr_turn_count_StartEx
 789:.\main.c      ****         
 790:.\main.c      ****         Timer_1_Start();
 4229              		.loc 1 790 0
 4230 0024 FFF7FEFF 		bl	Timer_1_Start
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 90


 791:.\main.c      ****     }
 792:.\main.c      ****     
 793:.\main.c      ****     if(ENABLE_STOP){
 794:.\main.c      ****         isr_OnLine_StartEx(Stop_on_line);
 795:.\main.c      ****         
 796:.\main.c      ****     }
 797:.\main.c      ****     isr_button_StartEx(button);
 4231              		.loc 1 797 0
 4232 0028 A448     		ldr	r0, .L243+8
 4233 002a FFF7FEFF 		bl	isr_button_StartEx
 798:.\main.c      ****     isr_action_deadzone_StartEx(isr_deadzone);
 4234              		.loc 1 798 0
 4235 002e A448     		ldr	r0, .L243+12
 4236 0030 FFF7FEFF 		bl	isr_action_deadzone_StartEx
 799:.\main.c      **** 
 800:.\main.c      ****     // ------USB SETUP ----------------    
 801:.\main.c      ****     if (USE_USB){    
 802:.\main.c      ****         USBUART_Start(0,USBUART_5V_OPERATION);
 4237              		.loc 1 802 0
 4238 0034 0020     		movs	r0, #0
 4239 0036 0121     		movs	r1, #1
 4240 0038 FFF7FEFF 		bl	USBUART_Start
 803:.\main.c      ****         if (USBUART_GetConfiguration())
 4241              		.loc 1 803 0
 4242 003c FFF7FEFF 		bl	USBUART_GetConfiguration
 4243 0040 0346     		mov	r3, r0
 4244 0042 002B     		cmp	r3, #0
 4245 0044 01D0     		beq	.L199
 804:.\main.c      ****             {
 805:.\main.c      ****                  USBUART_CDC_Init();
 4246              		.loc 1 805 0
 4247 0046 FFF7FEFF 		bl	USBUART_CDC_Init
 4248              	.L199:
 806:.\main.c      ****             }
 807:.\main.c      ****     }
 808:.\main.c      ****     
 809:.\main.c      ****     if(BIN_ENABLED){
 4249              		.loc 1 809 0
 4250 004a 9E4B     		ldr	r3, .L243+16
 4251 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4252 004e 002B     		cmp	r3, #0
 4253 0050 01D0     		beq	.L200
 810:.\main.c      ****         changeToRF();
 4254              		.loc 1 810 0
 4255 0052 FFF7FEFF 		bl	changeToRF
 4256              	.L200:
 811:.\main.c      ****     }
 812:.\main.c      ****     
 813:.\main.c      ****     if(BT_ENABLED){
 4257              		.loc 1 813 0
 4258 0056 9C4B     		ldr	r3, .L243+20
 4259 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4260 005a 002B     		cmp	r3, #0
 4261 005c 01D0     		beq	.L201
 814:.\main.c      ****         changeToBT();
 4262              		.loc 1 814 0
 4263 005e FFF7FEFF 		bl	changeToBT
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 91


 4264              	.L201:
 815:.\main.c      ****     }
 816:.\main.c      ****     
 817:.\main.c      ****     uint8 actionDebounce = 0;
 4265              		.loc 1 817 0
 4266 0062 0023     		movs	r3, #0
 4267 0064 FB71     		strb	r3, [r7, #7]
 4268              	.L240:
 4269              	.LBB8:
 818:.\main.c      ****     
 819:.\main.c      ****     //usbPutString("Started");
 820:.\main.c      ****     for(;;)
 821:.\main.c      ****     {
 822:.\main.c      ****         if(ENABLE_ADC) print_ADC();
 823:.\main.c      ****         if(ENABLE_QUAD) Quad_Dec_response();
 4270              		.loc 1 823 0
 4271 0066 FFF7FEFF 		bl	Quad_Dec_response
 824:.\main.c      ****         if(BIN_ENABLED == 1)
 4272              		.loc 1 824 0
 4273 006a 964B     		ldr	r3, .L243+16
 4274 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4275 006e 012B     		cmp	r3, #1
 4276 0070 03D1     		bne	.L202
 825:.\main.c      ****         {
 826:.\main.c      ****             handle_rx_binary();
 4277              		.loc 1 826 0
 4278 0072 FFF7FEFF 		bl	handle_rx_binary
 827:.\main.c      ****             print_RF();
 4279              		.loc 1 827 0
 4280 0076 FFF7FEFF 		bl	print_RF
 4281              	.L202:
 828:.\main.c      ****         }
 829:.\main.c      ****         // NO_TRACK, CURVE_TRACK, U_TRACK, SQUARE_TRACK
 830:.\main.c      ****         
 831:.\main.c      ****         uint8 frontSensors[5];
 832:.\main.c      ****         readFrontSensors(frontSensors);
 4282              		.loc 1 832 0
 4283 007a 3B46     		mov	r3, r7
 4284 007c 1846     		mov	r0, r3
 4285 007e FFF7FEFF 		bl	readFrontSensors
 833:.\main.c      ****         
 834:.\main.c      ****         switch(track_mode)
 4286              		.loc 1 834 0
 4287 0082 924B     		ldr	r3, .L243+24
 4288 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4289 0086 072B     		cmp	r3, #7
 4290 0088 00F2E480 		bhi	.L203
 4291 008c 01A2     		adr	r2, .L205
 4292 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4293 0092 00BF     		.p2align 2
 4294              	.L205:
 4295 0094 55020000 		.word	.L203+1
 4296 0098 55020000 		.word	.L203+1
 4297 009c 55020000 		.word	.L203+1
 4298 00a0 B5000000 		.word	.L208+1
 4299 00a4 55020000 		.word	.L203+1
 4300 00a8 F1000000 		.word	.L210+1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 92


 4301 00ac 17010000 		.word	.L211+1
 4302 00b0 17010000 		.word	.L211+1
 4303              		.p2align 1
 4304              	.L208:
 835:.\main.c      ****         {
 836:.\main.c      ****             case SQUARE_TRACK:
 837:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN)
 4305              		.loc 1 837 0
 4306 00b4 864B     		ldr	r3, .L243+28
 4307 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4308 00b8 012B     		cmp	r3, #1
 4309 00ba 18D0     		beq	.L212
 4310              		.loc 1 837 0 is_stmt 0 discriminator 1
 4311 00bc 844B     		ldr	r3, .L243+28
 4312 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4313 00c0 022B     		cmp	r3, #2
 4314 00c2 14D0     		beq	.L212
 838:.\main.c      ****                 {
 839:.\main.c      ****                     if(frontSensors[0] == 1 && frontSensors[2] == 1){ //left turn
 4315              		.loc 1 839 0 is_stmt 1
 4316 00c4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4317 00c6 012B     		cmp	r3, #1
 4318 00c8 05D1     		bne	.L213
 4319              		.loc 1 839 0 is_stmt 0 discriminator 1
 4320 00ca BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4321 00cc 012B     		cmp	r3, #1
 4322 00ce 02D1     		bne	.L213
 840:.\main.c      ****                         initTurnLeft();
 4323              		.loc 1 840 0 is_stmt 1
 4324 00d0 FFF7FEFF 		bl	initTurnLeft
 4325 00d4 0BE0     		b	.L212
 4326              	.L213:
 841:.\main.c      ****                     }
 842:.\main.c      ****                     else if (frontSensors[4] == 1 && frontSensors[2] == 1) //right turn
 4327              		.loc 1 842 0
 4328 00d6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4329 00d8 012B     		cmp	r3, #1
 4330 00da 05D1     		bne	.L214
 4331              		.loc 1 842 0 is_stmt 0 discriminator 1
 4332 00dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4333 00de 012B     		cmp	r3, #1
 4334 00e0 02D1     		bne	.L214
 843:.\main.c      ****                     {
 844:.\main.c      ****                         initTurnRight();
 4335              		.loc 1 844 0 is_stmt 1
 4336 00e2 FFF7FEFF 		bl	initTurnRight
 4337 00e6 02E0     		b	.L212
 4338              	.L214:
 845:.\main.c      ****                     }
 846:.\main.c      ****                     else inittrackLineZ();
 4339              		.loc 1 846 0
 4340 00e8 FFF7FEFF 		bl	inittrackLineZ
 847:.\main.c      ****                 }
 848:.\main.c      ****             break;
 4341              		.loc 1 848 0
 4342 00ec B2E0     		b	.L203
 4343              	.L212:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 93


 4344 00ee B1E0     		b	.L203
 4345              	.L210:
 849:.\main.c      ****             case NO_TRACK:
 850:.\main.c      ****             break;
 851:.\main.c      ****             case CURVE_TRACK:
 852:.\main.c      ****             break;
 853:.\main.c      ****             case U_TRACK:
 854:.\main.c      ****             break;
 855:.\main.c      ****             case QUAD_STOP:
 856:.\main.c      ****             break;
 857:.\main.c      ****             case RF_STOP:
 858:.\main.c      ****                 if(initial_pos_valid == 1)
 4346              		.loc 1 858 0
 4347 00f0 784B     		ldr	r3, .L243+32
 4348 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4349 00f4 012B     		cmp	r3, #1
 4350 00f6 0DD1     		bne	.L215
 859:.\main.c      ****                 {
 860:.\main.c      ****                     //changeToBT();
 861:.\main.c      ****                    // UART_PutString("Valid RF detected!");
 862:.\main.c      ****                     //changeToRF();
 863:.\main.c      ****                     initial_x_pos = system_state.robot_xpos;
 4351              		.loc 1 863 0
 4352 00f8 774B     		ldr	r3, .L243+36
 4353 00fa 5A88     		ldrh	r2, [r3, #2]
 4354 00fc 774B     		ldr	r3, .L243+40
 4355 00fe 1A80     		strh	r2, [r3]	@ movhi
 864:.\main.c      ****                     initial_y_pos = system_state.robot_ypos;
 4356              		.loc 1 864 0
 4357 0100 754B     		ldr	r3, .L243+36
 4358 0102 9A88     		ldrh	r2, [r3, #4]
 4359 0104 764B     		ldr	r3, .L243+44
 4360 0106 1A80     		strh	r2, [r3]	@ movhi
 865:.\main.c      ****                     initial_pos_valid = 2;
 4361              		.loc 1 865 0
 4362 0108 724B     		ldr	r3, .L243+32
 4363 010a 0222     		movs	r2, #2
 4364 010c 1A70     		strb	r2, [r3]
 866:.\main.c      ****                     initForward();
 4365              		.loc 1 866 0
 4366 010e FFF7FEFF 		bl	initForward
 867:.\main.c      ****                 }
 868:.\main.c      ****             break;
 4367              		.loc 1 868 0
 4368 0112 9FE0     		b	.L203
 4369              	.L215:
 4370 0114 9EE0     		b	.L203
 4371              	.L211:
 869:.\main.c      ****             case MAP_TRAVERSE:
 870:.\main.c      ****             case DEST_TEST:
 871:.\main.c      ****                 if(movement_state != LTURN && movement_state != RTURN && movement_state != UTURN){
 4372              		.loc 1 871 0
 4373 0116 6E4B     		ldr	r3, .L243+28
 4374 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4375 011a 012B     		cmp	r3, #1
 4376 011c 00F09980 		beq	.L216
 4377              		.loc 1 871 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 94


 4378 0120 6B4B     		ldr	r3, .L243+28
 4379 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4380 0124 022B     		cmp	r3, #2
 4381 0126 00F09480 		beq	.L216
 4382              		.loc 1 871 0 discriminator 2
 4383 012a 694B     		ldr	r3, .L243+28
 4384 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4385 012e 072B     		cmp	r3, #7
 4386 0130 00F08F80 		beq	.L216
 4387              	.LBB9:
 872:.\main.c      ****                     //when we hit an intersection, verify the next step then evaluate
 873:.\main.c      ****                     char nextStep = instructions[instructionCount];
 4388              		.loc 1 873 0 is_stmt 1
 4389 0134 6B4B     		ldr	r3, .L243+48
 4390 0136 1B88     		ldrh	r3, [r3]
 4391 0138 1A46     		mov	r2, r3
 4392 013a 6B4B     		ldr	r3, .L243+52
 4393 013c 9B5C     		ldrb	r3, [r3, r2]
 4394 013e BB71     		strb	r3, [r7, #6]
 874:.\main.c      ****                     if(((frontSensors[0] == 1 && frontSensors[2] == 1) || (frontSensors[4] == 1 && 
 4395              		.loc 1 874 0
 4396 0140 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4397 0142 012B     		cmp	r3, #1
 4398 0144 02D1     		bne	.L217
 4399              		.loc 1 874 0 is_stmt 0 discriminator 1
 4400 0146 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4401 0148 012B     		cmp	r3, #1
 4402 014a 05D0     		beq	.L218
 4403              	.L217:
 4404              		.loc 1 874 0 discriminator 3
 4405 014c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4406 014e 012B     		cmp	r3, #1
 4407 0150 47D1     		bne	.L219
 4408              		.loc 1 874 0 discriminator 4
 4409 0152 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4410 0154 012B     		cmp	r3, #1
 4411 0156 44D1     		bne	.L219
 4412              	.L218:
 875:.\main.c      ****                         if(sensorsDisabled == 0)
 4413              		.loc 1 875 0 is_stmt 1
 4414 0158 644B     		ldr	r3, .L243+56
 4415 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4416 015c 002B     		cmp	r3, #0
 4417 015e 3FD1     		bne	.L220
 876:.\main.c      ****                         {
 877:.\main.c      ****                             actionDebounce++;
 4418              		.loc 1 877 0
 4419 0160 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4420 0162 0133     		adds	r3, r3, #1
 4421 0164 FB71     		strb	r3, [r7, #7]
 878:.\main.c      ****                             if(actionDebounce >= 5)
 4422              		.loc 1 878 0
 4423 0166 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4424 0168 042B     		cmp	r3, #4
 4425 016a 39D9     		bls	.L220
 879:.\main.c      ****                             {
 880:.\main.c      ****                                 sensorsDisabled = 1;
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 95


 4426              		.loc 1 880 0
 4427 016c 5F4B     		ldr	r3, .L243+56
 4428 016e 0122     		movs	r2, #1
 4429 0170 1A70     		strb	r2, [r3]
 881:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 4430              		.loc 1 881 0
 4431 0172 5F48     		ldr	r0, .L243+60
 4432 0174 FFF7FEFF 		bl	UART_PutString
 882:.\main.c      ****                                 deadzone = 1;
 4433              		.loc 1 882 0
 4434 0178 5E4B     		ldr	r3, .L243+64
 4435 017a 0122     		movs	r2, #1
 4436 017c 1A70     		strb	r2, [r3]
 883:.\main.c      ****                                 Timer_Deadzone_Start();
 4437              		.loc 1 883 0
 4438 017e FFF7FEFF 		bl	Timer_Deadzone_Start
 884:.\main.c      ****                                 switch(nextStep)
 4439              		.loc 1 884 0
 4440 0182 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4441 0184 4C3B     		subs	r3, r3, #76
 4442 0186 092B     		cmp	r3, #9
 4443 0188 22D8     		bhi	.L241
 4444 018a 01A2     		adr	r2, .L223
 4445 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4446              		.p2align 2
 4447              	.L223:
 4448 0190 BF010000 		.word	.L222+1
 4449 0194 D1010000 		.word	.L241+1
 4450 0198 D1010000 		.word	.L241+1
 4451 019c D1010000 		.word	.L241+1
 4452 01a0 D1010000 		.word	.L241+1
 4453 01a4 D1010000 		.word	.L241+1
 4454 01a8 C5010000 		.word	.L224+1
 4455 01ac B9010000 		.word	.L225+1
 4456 01b0 D1010000 		.word	.L241+1
 4457 01b4 CB010000 		.word	.L226+1
 4458              		.p2align 1
 4459              	.L225:
 885:.\main.c      ****                                 {
 886:.\main.c      ****                                     case 'S':
 887:.\main.c      ****                                         initTrackU();
 4460              		.loc 1 887 0
 4461 01b8 FFF7FEFF 		bl	initTrackU
 888:.\main.c      ****                                         //do nothing
 889:.\main.c      ****                                     break;
 4462              		.loc 1 889 0
 4463 01bc 09E0     		b	.L227
 4464              	.L222:
 890:.\main.c      ****                                     case 'L':
 891:.\main.c      ****                                         //if(tracked_direction == 1) tracked_direction = 4; else tr
 892:.\main.c      ****                                         initTurnLeft();
 4465              		.loc 1 892 0
 4466 01be FFF7FEFF 		bl	initTurnLeft
 893:.\main.c      ****                                     break;
 4467              		.loc 1 893 0
 4468 01c2 06E0     		b	.L227
 4469              	.L224:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 96


 894:.\main.c      ****                                     case 'R':
 895:.\main.c      ****                                         //if(tracked_direction == 4) tracked_direction = 1; else tr
 896:.\main.c      ****                                         initTurnRight();
 4470              		.loc 1 896 0
 4471 01c4 FFF7FEFF 		bl	initTurnRight
 897:.\main.c      ****                                         
 898:.\main.c      ****                                     break;
 4472              		.loc 1 898 0
 4473 01c8 03E0     		b	.L227
 4474              	.L226:
 899:.\main.c      ****                                     case 'U':
 900:.\main.c      ****                                         // Direction not tracked any more
 901:.\main.c      ****                                         initTurnU();
 4475              		.loc 1 901 0
 4476 01ca FFF7FEFF 		bl	initTurnU
 902:.\main.c      ****                                     break;
 4477              		.loc 1 902 0
 4478 01ce 00E0     		b	.L227
 4479              	.L241:
 903:.\main.c      ****                                     default:
 904:.\main.c      ****                                         //do nothing
 905:.\main.c      ****                                         break;
 4480              		.loc 1 905 0
 4481 01d0 00BF     		nop
 4482              	.L227:
 906:.\main.c      ****                                 }
 907:.\main.c      ****                                 instructionCount++;
 4483              		.loc 1 907 0
 4484 01d2 444B     		ldr	r3, .L243+48
 4485 01d4 1B88     		ldrh	r3, [r3]
 4486 01d6 0133     		adds	r3, r3, #1
 4487 01d8 9AB2     		uxth	r2, r3
 4488 01da 424B     		ldr	r3, .L243+48
 4489 01dc 1A80     		strh	r2, [r3]	@ movhi
 875:.\main.c      ****                         {
 4490              		.loc 1 875 0
 4491 01de 38E0     		b	.L216
 4492              	.L220:
 4493 01e0 37E0     		b	.L216
 4494              	.L219:
 908:.\main.c      ****                             }
 909:.\main.c      ****                         }
 910:.\main.c      ****                     }
 911:.\main.c      ****                     else if (frontSensors[0] == 0 && frontSensors[1] == 0 && frontSensors[2] == 0 &
 4495              		.loc 1 911 0
 4496 01e2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4497 01e4 002B     		cmp	r3, #0
 4498 01e6 2FD1     		bne	.L228
 4499              		.loc 1 911 0 is_stmt 0 discriminator 1
 4500 01e8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4501 01ea 002B     		cmp	r3, #0
 4502 01ec 2CD1     		bne	.L228
 4503              		.loc 1 911 0 discriminator 2
 4504 01ee BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4505 01f0 002B     		cmp	r3, #0
 4506 01f2 29D1     		bne	.L228
 4507              		.loc 1 911 0 discriminator 3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 97


 4508 01f4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4509 01f6 002B     		cmp	r3, #0
 4510 01f8 26D1     		bne	.L228
 4511              		.loc 1 911 0 discriminator 4
 4512 01fa 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4513 01fc 002B     		cmp	r3, #0
 4514 01fe 23D1     		bne	.L228
 4515              		.loc 1 911 0 discriminator 5
 4516 0200 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4517 0202 552B     		cmp	r3, #85
 4518 0204 20D1     		bne	.L228
 912:.\main.c      ****                     {
 913:.\main.c      ****                         if(sensorsDisabled == 0)
 4519              		.loc 1 913 0 is_stmt 1
 4520 0206 394B     		ldr	r3, .L243+56
 4521 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4522 020a 002B     		cmp	r3, #0
 4523 020c 1BD1     		bne	.L229
 914:.\main.c      ****                         {
 915:.\main.c      ****                             actionDebounce++;
 4524              		.loc 1 915 0
 4525 020e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4526 0210 0133     		adds	r3, r3, #1
 4527 0212 FB71     		strb	r3, [r7, #7]
 916:.\main.c      ****                             if(actionDebounce >= 5)
 4528              		.loc 1 916 0
 4529 0214 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4530 0216 042B     		cmp	r3, #4
 4531 0218 15D9     		bls	.L229
 917:.\main.c      ****                             {
 918:.\main.c      ****                                 UART_PutString("Deadzone entered!\r\n");
 4532              		.loc 1 918 0
 4533 021a 3548     		ldr	r0, .L243+60
 4534 021c FFF7FEFF 		bl	UART_PutString
 919:.\main.c      ****                                 deadzone = 1;
 4535              		.loc 1 919 0
 4536 0220 344B     		ldr	r3, .L243+64
 4537 0222 0122     		movs	r2, #1
 4538 0224 1A70     		strb	r2, [r3]
 920:.\main.c      ****                                 Timer_Deadzone_Start();
 4539              		.loc 1 920 0
 4540 0226 FFF7FEFF 		bl	Timer_Deadzone_Start
 921:.\main.c      ****                                 actionDebounce = 0;
 4541              		.loc 1 921 0
 4542 022a 0023     		movs	r3, #0
 4543 022c FB71     		strb	r3, [r7, #7]
 922:.\main.c      ****                                 sensorsDisabled = 1;
 4544              		.loc 1 922 0
 4545 022e 2F4B     		ldr	r3, .L243+56
 4546 0230 0122     		movs	r2, #1
 4547 0232 1A70     		strb	r2, [r3]
 923:.\main.c      ****                                 initTurnU();
 4548              		.loc 1 923 0
 4549 0234 FFF7FEFF 		bl	initTurnU
 924:.\main.c      ****                                 instructionCount++;
 4550              		.loc 1 924 0
 4551 0238 2A4B     		ldr	r3, .L243+48
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 98


 4552 023a 1B88     		ldrh	r3, [r3]
 4553 023c 0133     		adds	r3, r3, #1
 4554 023e 9AB2     		uxth	r2, r3
 4555 0240 284B     		ldr	r3, .L243+48
 4556 0242 1A80     		strh	r2, [r3]	@ movhi
 913:.\main.c      ****                         {
 4557              		.loc 1 913 0
 4558 0244 05E0     		b	.L216
 4559              	.L229:
 913:.\main.c      ****                         {
 4560              		.loc 1 913 0 is_stmt 0 discriminator 2
 4561 0246 04E0     		b	.L216
 4562              	.L228:
 925:.\main.c      ****                             }
 926:.\main.c      ****                         }
 927:.\main.c      ****                     }
 928:.\main.c      ****                     else
 929:.\main.c      ****                     {
 930:.\main.c      ****                         inittrackLineZ();
 4563              		.loc 1 930 0 is_stmt 1
 4564 0248 FFF7FEFF 		bl	inittrackLineZ
 931:.\main.c      ****                         actionDebounce = 0;
 4565              		.loc 1 931 0
 4566 024c 0023     		movs	r3, #0
 4567 024e FB71     		strb	r3, [r7, #7]
 4568              	.LBE9:
 932:.\main.c      ****                     }
 933:.\main.c      ****                 }
 934:.\main.c      ****                 break;
 4569              		.loc 1 934 0
 4570 0250 FFE7     		b	.L242
 4571              	.L216:
 4572              	.L242:
 4573 0252 00BF     		nop
 4574              	.L203:
 935:.\main.c      ****         }
 936:.\main.c      ****         
 937:.\main.c      ****         switch(movement_state)
 4575              		.loc 1 937 0
 4576 0254 1E4B     		ldr	r3, .L243+28
 4577 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4578 0258 072B     		cmp	r3, #7
 4579 025a 3FF604AF 		bhi	.L240
 4580 025e 01A2     		adr	r2, .L232
 4581 0260 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4582              		.p2align 2
 4583              	.L232:
 4584 0264 85020000 		.word	.L231+1
 4585 0268 8B020000 		.word	.L233+1
 4586 026c 91020000 		.word	.L234+1
 4587 0270 9D020000 		.word	.L235+1
 4588 0274 A3020000 		.word	.L236+1
 4589 0278 A9020000 		.word	.L237+1
 4590 027c AF020000 		.word	.L238+1
 4591 0280 97020000 		.word	.L239+1
 4592              		.p2align 1
 4593              	.L231:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 99


 938:.\main.c      ****         {
 939:.\main.c      ****             case DRIVE:
 940:.\main.c      ****                 driveForwards();
 4594              		.loc 1 940 0
 4595 0284 FFF7FEFF 		bl	driveForwards
 941:.\main.c      ****             break;
 4596              		.loc 1 941 0
 4597 0288 13E0     		b	.L230
 4598              	.L233:
 942:.\main.c      ****             case LTURN:
 943:.\main.c      ****                 turnLeft();
 4599              		.loc 1 943 0
 4600 028a FFF7FEFF 		bl	turnLeft
 944:.\main.c      ****             break;
 4601              		.loc 1 944 0
 4602 028e 10E0     		b	.L230
 4603              	.L234:
 945:.\main.c      ****             case RTURN:
 946:.\main.c      ****                 turnRight();
 4604              		.loc 1 946 0
 4605 0290 FFF7FEFF 		bl	turnRight
 947:.\main.c      ****             break;
 4606              		.loc 1 947 0
 4607 0294 0DE0     		b	.L230
 4608              	.L239:
 948:.\main.c      ****             case UTURN:
 949:.\main.c      ****                 turnU();
 4609              		.loc 1 949 0
 4610 0296 FFF7FEFF 		bl	turnU
 950:.\main.c      ****             break;
 4611              		.loc 1 950 0
 4612 029a 0AE0     		b	.L230
 4613              	.L235:
 951:.\main.c      ****             case STOPPED:
 952:.\main.c      ****                 brakeMotor();
 4614              		.loc 1 952 0
 4615 029c FFF7FEFF 		bl	brakeMotor
 953:.\main.c      ****             break;
 4616              		.loc 1 953 0
 4617 02a0 07E0     		b	.L230
 4618              	.L236:
 954:.\main.c      ****             case TRACKING:
 955:.\main.c      ****                 trackLine();
 4619              		.loc 1 955 0
 4620 02a2 FFF7FEFF 		bl	trackLine
 956:.\main.c      ****             break;
 4621              		.loc 1 956 0
 4622 02a6 04E0     		b	.L230
 4623              	.L237:
 957:.\main.c      ****             case TRACKING_U:
 958:.\main.c      ****                 trackLineU();
 4624              		.loc 1 958 0
 4625 02a8 FFF7FEFF 		bl	trackLineU
 959:.\main.c      ****             break;
 4626              		.loc 1 959 0
 4627 02ac 01E0     		b	.L230
 4628              	.L238:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 100


 960:.\main.c      ****             case TRACKING_SOFT:
 961:.\main.c      ****                 trackLineZ();
 4629              		.loc 1 961 0
 4630 02ae FFF7FEFF 		bl	trackLineZ
 4631              	.L230:
 4632              	.LBE8:
 962:.\main.c      ****         }
 963:.\main.c      ****         //handle_usb();        
 964:.\main.c      ****     }   
 4633              		.loc 1 964 0
 4634 02b2 D8E6     		b	.L240
 4635              	.L244:
 4636              		.align	2
 4637              	.L243:
 4638 02b4 00000000 		.word	isr_quad1
 4639 02b8 00000000 		.word	isr_turn_timer
 4640 02bc 00000000 		.word	button
 4641 02c0 00000000 		.word	isr_deadzone
 4642 02c4 00000000 		.word	BIN_ENABLED
 4643 02c8 00000000 		.word	BT_ENABLED
 4644 02cc 00000000 		.word	track_mode
 4645 02d0 00000000 		.word	movement_state
 4646 02d4 00000000 		.word	initial_pos_valid
 4647 02d8 00000000 		.word	system_state
 4648 02dc 00000000 		.word	initial_x_pos
 4649 02e0 00000000 		.word	initial_y_pos
 4650 02e4 00000000 		.word	instructionCount
 4651 02e8 00000000 		.word	instructions
 4652 02ec 00000000 		.word	sensorsDisabled
 4653 02f0 A4000000 		.word	.LC12
 4654 02f4 00000000 		.word	deadzone
 4655              		.cfi_endproc
 4656              	.LFE102:
 4657              		.size	main, .-main
 4658              		.section	.text.usbPutString,"ax",%progbits
 4659              		.align	2
 4660              		.global	usbPutString
 4661              		.thumb
 4662              		.thumb_func
 4663              		.type	usbPutString, %function
 4664              	usbPutString:
 4665              	.LFB103:
 965:.\main.c      **** }
 966:.\main.c      **** //* ========================================
 967:.\main.c      **** void usbPutString(char *s)
 968:.\main.c      **** {
 4666              		.loc 1 968 0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 16
 4669              		@ frame_needed = 1, uses_anonymous_args = 0
 4670 0000 80B5     		push	{r7, lr}
 4671              		.cfi_def_cfa_offset 8
 4672              		.cfi_offset 7, -8
 4673              		.cfi_offset 14, -4
 4674 0002 84B0     		sub	sp, sp, #16
 4675              		.cfi_def_cfa_offset 24
 4676 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 101


 4677              		.cfi_def_cfa_register 7
 4678 0006 7860     		str	r0, [r7, #4]
 969:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 970:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 971:.\main.c      **** //  length to 62 char (63rd char is a '!')
 972:.\main.c      ****     if (USE_USB && portOpen)    
 4679              		.loc 1 972 0
 4680 0008 154B     		ldr	r3, .L249
 4681 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4682 000c 002B     		cmp	r3, #0
 4683 000e 23D0     		beq	.L245
 4684              	.LBB10:
 973:.\main.c      ****     {
 974:.\main.c      ****             uint32 cnt = 0;
 4685              		.loc 1 974 0
 4686 0010 0023     		movs	r3, #0
 4687 0012 FB60     		str	r3, [r7, #12]
 975:.\main.c      ****             while (USBUART_CDCIsReady() == 0)
 4688              		.loc 1 975 0
 4689 0014 0AE0     		b	.L247
 4690              	.L248:
 976:.\main.c      ****             {
 977:.\main.c      ****                 cnt++;
 4691              		.loc 1 977 0
 4692 0016 FB68     		ldr	r3, [r7, #12]
 4693 0018 0133     		adds	r3, r3, #1
 4694 001a FB60     		str	r3, [r7, #12]
 978:.\main.c      ****                 if(cnt == 3000000){
 4695              		.loc 1 978 0
 4696 001c FB68     		ldr	r3, [r7, #12]
 4697 001e 114A     		ldr	r2, .L249+4
 4698 0020 9342     		cmp	r3, r2
 4699 0022 03D1     		bne	.L247
 979:.\main.c      ****                     portOpen = 0;
 4700              		.loc 1 979 0
 4701 0024 0E4B     		ldr	r3, .L249
 4702 0026 0022     		movs	r2, #0
 4703 0028 1A70     		strb	r2, [r3]
 980:.\main.c      ****                     return;
 4704              		.loc 1 980 0
 4705 002a 15E0     		b	.L245
 4706              	.L247:
 975:.\main.c      ****             {
 4707              		.loc 1 975 0
 4708 002c FFF7FEFF 		bl	USBUART_CDCIsReady
 4709 0030 0346     		mov	r3, r0
 4710 0032 002B     		cmp	r3, #0
 4711 0034 EFD0     		beq	.L248
 981:.\main.c      ****                 }
 982:.\main.c      ****             }
 983:.\main.c      ****             s[63]='\0';
 4712              		.loc 1 983 0
 4713 0036 7B68     		ldr	r3, [r7, #4]
 4714 0038 3F33     		adds	r3, r3, #63
 4715 003a 0022     		movs	r2, #0
 4716 003c 1A70     		strb	r2, [r3]
 984:.\main.c      ****             s[62]='!';
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 102


 4717              		.loc 1 984 0
 4718 003e 7B68     		ldr	r3, [r7, #4]
 4719 0040 3E33     		adds	r3, r3, #62
 4720 0042 2122     		movs	r2, #33
 4721 0044 1A70     		strb	r2, [r3]
 985:.\main.c      ****             USBUART_PutData((uint8*)s,strlen(s));
 4722              		.loc 1 985 0
 4723 0046 7868     		ldr	r0, [r7, #4]
 4724 0048 FFF7FEFF 		bl	strlen
 4725 004c 0346     		mov	r3, r0
 4726 004e 9BB2     		uxth	r3, r3
 4727 0050 7868     		ldr	r0, [r7, #4]
 4728 0052 1946     		mov	r1, r3
 4729 0054 FFF7FEFF 		bl	USBUART_PutData
 4730              	.L245:
 4731              	.LBE10:
 986:.\main.c      ****     }
 987:.\main.c      **** }
 4732              		.loc 1 987 0
 4733 0058 1037     		adds	r7, r7, #16
 4734              		.cfi_def_cfa_offset 8
 4735 005a BD46     		mov	sp, r7
 4736              		.cfi_def_cfa_register 13
 4737              		@ sp needed
 4738 005c 80BD     		pop	{r7, pc}
 4739              	.L250:
 4740 005e 00BF     		.align	2
 4741              	.L249:
 4742 0060 00000000 		.word	portOpen
 4743 0064 C0C62D00 		.word	3000000
 4744              		.cfi_endproc
 4745              	.LFE103:
 4746              		.size	usbPutString, .-usbPutString
 4747              		.section	.text.usbPutChar,"ax",%progbits
 4748              		.align	2
 4749              		.global	usbPutChar
 4750              		.thumb
 4751              		.thumb_func
 4752              		.type	usbPutChar, %function
 4753              	usbPutChar:
 4754              	.LFB104:
 988:.\main.c      **** //* ========================================
 989:.\main.c      **** void usbPutChar(char c)
 990:.\main.c      **** {
 4755              		.loc 1 990 0
 4756              		.cfi_startproc
 4757              		@ args = 0, pretend = 0, frame = 16
 4758              		@ frame_needed = 1, uses_anonymous_args = 0
 4759 0000 80B5     		push	{r7, lr}
 4760              		.cfi_def_cfa_offset 8
 4761              		.cfi_offset 7, -8
 4762              		.cfi_offset 14, -4
 4763 0002 84B0     		sub	sp, sp, #16
 4764              		.cfi_def_cfa_offset 24
 4765 0004 00AF     		add	r7, sp, #0
 4766              		.cfi_def_cfa_register 7
 4767 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 103


 4768 0008 FB71     		strb	r3, [r7, #7]
 991:.\main.c      ****     if (USE_USB && portOpen)    
 4769              		.loc 1 991 0
 4770 000a 0F4B     		ldr	r3, .L255
 4771 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4772 000e 002B     		cmp	r3, #0
 4773 0010 16D0     		beq	.L251
 4774              	.LBB11:
 992:.\main.c      ****     {    
 993:.\main.c      ****         uint32 cnt = 0;
 4775              		.loc 1 993 0
 4776 0012 0023     		movs	r3, #0
 4777 0014 FB60     		str	r3, [r7, #12]
 994:.\main.c      ****         while (USBUART_CDCIsReady() == 0){
 4778              		.loc 1 994 0
 4779 0016 0AE0     		b	.L253
 4780              	.L254:
 995:.\main.c      ****             cnt++;
 4781              		.loc 1 995 0
 4782 0018 FB68     		ldr	r3, [r7, #12]
 4783 001a 0133     		adds	r3, r3, #1
 4784 001c FB60     		str	r3, [r7, #12]
 996:.\main.c      ****             if(cnt == 3000000){
 4785              		.loc 1 996 0
 4786 001e FB68     		ldr	r3, [r7, #12]
 4787 0020 0A4A     		ldr	r2, .L255+4
 4788 0022 9342     		cmp	r3, r2
 4789 0024 03D1     		bne	.L253
 997:.\main.c      ****                 portOpen = 0;
 4790              		.loc 1 997 0
 4791 0026 084B     		ldr	r3, .L255
 4792 0028 0022     		movs	r2, #0
 4793 002a 1A70     		strb	r2, [r3]
 998:.\main.c      ****                 return;
 4794              		.loc 1 998 0
 4795 002c 08E0     		b	.L251
 4796              	.L253:
 994:.\main.c      ****             cnt++;
 4797              		.loc 1 994 0
 4798 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 4799 0032 0346     		mov	r3, r0
 4800 0034 002B     		cmp	r3, #0
 4801 0036 EFD0     		beq	.L254
 999:.\main.c      ****             }
1000:.\main.c      ****         }
1001:.\main.c      ****         USBUART_PutChar(c);
 4802              		.loc 1 1001 0
 4803 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4804 003a 1846     		mov	r0, r3
 4805 003c FFF7FEFF 		bl	USBUART_PutChar
 4806              	.L251:
 4807              	.LBE11:
1002:.\main.c      ****     }    
1003:.\main.c      **** }
 4808              		.loc 1 1003 0
 4809 0040 1037     		adds	r7, r7, #16
 4810              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 104


 4811 0042 BD46     		mov	sp, r7
 4812              		.cfi_def_cfa_register 13
 4813              		@ sp needed
 4814 0044 80BD     		pop	{r7, pc}
 4815              	.L256:
 4816 0046 00BF     		.align	2
 4817              	.L255:
 4818 0048 00000000 		.word	portOpen
 4819 004c C0C62D00 		.word	3000000
 4820              		.cfi_endproc
 4821              	.LFE104:
 4822              		.size	usbPutChar, .-usbPutChar
 4823              		.section	.text.uart_set_PWM,"ax",%progbits
 4824              		.align	2
 4825              		.global	uart_set_PWM
 4826              		.thumb
 4827              		.thumb_func
 4828              		.type	uart_set_PWM, %function
 4829              	uart_set_PWM:
 4830              	.LFB105:
1004:.\main.c      **** //* ========================================
1005:.\main.c      **** 
1006:.\main.c      **** void uart_set_PWM()
1007:.\main.c      **** {
 4831              		.loc 1 1007 0
 4832              		.cfi_startproc
 4833              		@ args = 0, pretend = 0, frame = 8
 4834              		@ frame_needed = 1, uses_anonymous_args = 0
 4835 0000 80B5     		push	{r7, lr}
 4836              		.cfi_def_cfa_offset 8
 4837              		.cfi_offset 7, -8
 4838              		.cfi_offset 14, -4
 4839 0002 82B0     		sub	sp, sp, #8
 4840              		.cfi_def_cfa_offset 16
 4841 0004 00AF     		add	r7, sp, #0
 4842              		.cfi_def_cfa_register 7
1008:.\main.c      ****     uint8 c;
1009:.\main.c      ****      if (USBUART_DataIsReady() != 0)
 4843              		.loc 1 1009 0
 4844 0006 FFF7FEFF 		bl	USBUART_DataIsReady
 4845 000a 0346     		mov	r3, r0
 4846 000c 002B     		cmp	r3, #0
 4847 000e 11D0     		beq	.L257
1010:.\main.c      ****        {  
1011:.\main.c      ****             c = USBUART_GetChar();
 4848              		.loc 1 1011 0
 4849 0010 FFF7FEFF 		bl	USBUART_GetChar
 4850 0014 0346     		mov	r3, r0
 4851 0016 FB71     		strb	r3, [r7, #7]
1012:.\main.c      ****             
1013:.\main.c      ****             if(c <= 100 && c > 0){
 4852              		.loc 1 1013 0
 4853 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4854 001a 642B     		cmp	r3, #100
 4855 001c 0AD8     		bhi	.L257
 4856              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4857 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 105


 4858 0020 002B     		cmp	r3, #0
 4859 0022 07D0     		beq	.L257
1014:.\main.c      ****                 PWM_1_WriteCompare(c);
 4860              		.loc 1 1014 0 is_stmt 1
 4861 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4862 0026 1846     		mov	r0, r3
 4863 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
1015:.\main.c      ****                 usbPutString(c);
 4864              		.loc 1 1015 0
 4865 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4866 002e 1846     		mov	r0, r3
 4867 0030 FFF7FEFF 		bl	usbPutString
 4868              	.L257:
1016:.\main.c      ****             }
1017:.\main.c      ****        }
1018:.\main.c      **** }
 4869              		.loc 1 1018 0
 4870 0034 0837     		adds	r7, r7, #8
 4871              		.cfi_def_cfa_offset 8
 4872 0036 BD46     		mov	sp, r7
 4873              		.cfi_def_cfa_register 13
 4874              		@ sp needed
 4875 0038 80BD     		pop	{r7, pc}
 4876              		.cfi_endproc
 4877              	.LFE105:
 4878              		.size	uart_set_PWM, .-uart_set_PWM
 4879 003a 00BF     		.text
 4880              	.Letext0:
 4881              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4882              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4883              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4884              		.file 5 ".\\vars.h"
 4885              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 4886              		.file 7 ".\\pathfinder.h"
 4887              		.section	.debug_info,"",%progbits
 4888              	.Ldebug_info0:
 4889 0000 020E0000 		.4byte	0xe02
 4890 0004 0400     		.2byte	0x4
 4891 0006 00000000 		.4byte	.Ldebug_abbrev0
 4892 000a 04       		.byte	0x4
 4893 000b 01       		.uleb128 0x1
 4894 000c 71040000 		.4byte	.LASF190
 4895 0010 01       		.byte	0x1
 4896 0011 0B090000 		.4byte	.LASF191
 4897 0015 5E020000 		.4byte	.LASF192
 4898 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4899 001d 00000000 		.4byte	0
 4900 0021 00000000 		.4byte	.Ldebug_line0
 4901 0025 02       		.uleb128 0x2
 4902 0026 01       		.byte	0x1
 4903 0027 06       		.byte	0x6
 4904 0028 40080000 		.4byte	.LASF0
 4905 002c 02       		.uleb128 0x2
 4906 002d 01       		.byte	0x1
 4907 002e 08       		.byte	0x8
 4908 002f 97070000 		.4byte	.LASF1
 4909 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 106


 4910 0034 02       		.byte	0x2
 4911 0035 05       		.byte	0x5
 4912 0036 20060000 		.4byte	.LASF2
 4913 003a 02       		.uleb128 0x2
 4914 003b 02       		.byte	0x2
 4915 003c 07       		.byte	0x7
 4916 003d 4C080000 		.4byte	.LASF3
 4917 0041 03       		.uleb128 0x3
 4918 0042 91000000 		.4byte	.LASF11
 4919 0046 02       		.byte	0x2
 4920 0047 3F       		.byte	0x3f
 4921 0048 4C000000 		.4byte	0x4c
 4922 004c 02       		.uleb128 0x2
 4923 004d 04       		.byte	0x4
 4924 004e 05       		.byte	0x5
 4925 004f 54060000 		.4byte	.LASF4
 4926 0053 02       		.uleb128 0x2
 4927 0054 04       		.byte	0x4
 4928 0055 07       		.byte	0x7
 4929 0056 42070000 		.4byte	.LASF5
 4930 005a 02       		.uleb128 0x2
 4931 005b 08       		.byte	0x8
 4932 005c 05       		.byte	0x5
 4933 005d 3B040000 		.4byte	.LASF6
 4934 0061 02       		.uleb128 0x2
 4935 0062 08       		.byte	0x8
 4936 0063 07       		.byte	0x7
 4937 0064 2E020000 		.4byte	.LASF7
 4938 0068 04       		.uleb128 0x4
 4939 0069 04       		.byte	0x4
 4940 006a 05       		.byte	0x5
 4941 006b 696E7400 		.ascii	"int\000"
 4942 006f 02       		.uleb128 0x2
 4943 0070 04       		.byte	0x4
 4944 0071 07       		.byte	0x7
 4945 0072 79000000 		.4byte	.LASF8
 4946 0076 02       		.uleb128 0x2
 4947 0077 04       		.byte	0x4
 4948 0078 07       		.byte	0x7
 4949 0079 39070000 		.4byte	.LASF9
 4950 007d 05       		.uleb128 0x5
 4951 007e 04       		.byte	0x4
 4952 007f 83000000 		.4byte	0x83
 4953 0083 02       		.uleb128 0x2
 4954 0084 01       		.byte	0x1
 4955 0085 08       		.byte	0x8
 4956 0086 82030000 		.4byte	.LASF10
 4957 008a 03       		.uleb128 0x3
 4958 008b 60070000 		.4byte	.LASF12
 4959 008f 03       		.byte	0x3
 4960 0090 2C       		.byte	0x2c
 4961 0091 41000000 		.4byte	0x41
 4962 0095 06       		.uleb128 0x6
 4963 0096 98080000 		.4byte	.LASF13
 4964 009a 04       		.byte	0x4
 4965 009b 9201     		.2byte	0x192
 4966 009d 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 107


 4967 00a1 06       		.uleb128 0x6
 4968 00a2 D8030000 		.4byte	.LASF14
 4969 00a6 04       		.byte	0x4
 4970 00a7 9301     		.2byte	0x193
 4971 00a9 3A000000 		.4byte	0x3a
 4972 00ad 06       		.uleb128 0x6
 4973 00ae 42050000 		.4byte	.LASF15
 4974 00b2 04       		.byte	0x4
 4975 00b3 9401     		.2byte	0x194
 4976 00b5 53000000 		.4byte	0x53
 4977 00b9 06       		.uleb128 0x6
 4978 00ba DF030000 		.4byte	.LASF16
 4979 00be 04       		.byte	0x4
 4980 00bf 9501     		.2byte	0x195
 4981 00c1 25000000 		.4byte	0x25
 4982 00c5 06       		.uleb128 0x6
 4983 00c6 9B000000 		.4byte	.LASF17
 4984 00ca 04       		.byte	0x4
 4985 00cb 9601     		.2byte	0x196
 4986 00cd 33000000 		.4byte	0x33
 4987 00d1 02       		.uleb128 0x2
 4988 00d2 04       		.byte	0x4
 4989 00d3 04       		.byte	0x4
 4990 00d4 CE010000 		.4byte	.LASF18
 4991 00d8 02       		.uleb128 0x2
 4992 00d9 08       		.byte	0x8
 4993 00da 04       		.byte	0x4
 4994 00db 9E080000 		.4byte	.LASF19
 4995 00df 02       		.uleb128 0x2
 4996 00e0 08       		.byte	0x8
 4997 00e1 04       		.byte	0x4
 4998 00e2 BE050000 		.4byte	.LASF20
 4999 00e6 07       		.uleb128 0x7
 5000 00e7 D8070000 		.4byte	.LASF29
 5001 00eb 01       		.byte	0x1
 5002 00ec 05       		.byte	0x5
 5003 00ed 5B       		.byte	0x5b
 5004 00ee 23010000 		.4byte	0x123
 5005 00f2 08       		.uleb128 0x8
 5006 00f3 ED010000 		.4byte	.LASF21
 5007 00f7 00       		.sleb128 0
 5008 00f8 08       		.uleb128 0x8
 5009 00f9 AE000000 		.4byte	.LASF22
 5010 00fd 01       		.sleb128 1
 5011 00fe 08       		.uleb128 0x8
 5012 00ff 1C000000 		.4byte	.LASF23
 5013 0103 02       		.sleb128 2
 5014 0104 08       		.uleb128 0x8
 5015 0105 AD050000 		.4byte	.LASF24
 5016 0109 03       		.sleb128 3
 5017 010a 08       		.uleb128 0x8
 5018 010b D6000000 		.4byte	.LASF25
 5019 010f 04       		.sleb128 4
 5020 0110 08       		.uleb128 0x8
 5021 0111 A0010000 		.4byte	.LASF26
 5022 0115 05       		.sleb128 5
 5023 0116 08       		.uleb128 0x8
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 108


 5024 0117 C4060000 		.4byte	.LASF27
 5025 011b 06       		.sleb128 6
 5026 011c 08       		.uleb128 0x8
 5027 011d D8080000 		.4byte	.LASF28
 5028 0121 07       		.sleb128 7
 5029 0122 00       		.byte	0
 5030 0123 07       		.uleb128 0x7
 5031 0124 11010000 		.4byte	.LASF30
 5032 0128 01       		.byte	0x1
 5033 0129 05       		.byte	0x5
 5034 012a 5C       		.byte	0x5c
 5035 012b 60010000 		.4byte	0x160
 5036 012f 08       		.uleb128 0x8
 5037 0130 96060000 		.4byte	.LASF31
 5038 0134 00       		.sleb128 0
 5039 0135 08       		.uleb128 0x8
 5040 0136 02040000 		.4byte	.LASF32
 5041 013a 01       		.sleb128 1
 5042 013b 08       		.uleb128 0x8
 5043 013c 6B060000 		.4byte	.LASF33
 5044 0140 02       		.sleb128 2
 5045 0141 08       		.uleb128 0x8
 5046 0142 5A010000 		.4byte	.LASF34
 5047 0146 03       		.sleb128 3
 5048 0147 08       		.uleb128 0x8
 5049 0148 71080000 		.4byte	.LASF35
 5050 014c 04       		.sleb128 4
 5051 014d 08       		.uleb128 0x8
 5052 014e B6080000 		.4byte	.LASF36
 5053 0152 05       		.sleb128 5
 5054 0153 08       		.uleb128 0x8
 5055 0154 22000000 		.4byte	.LASF37
 5056 0158 06       		.sleb128 6
 5057 0159 08       		.uleb128 0x8
 5058 015a B7060000 		.4byte	.LASF38
 5059 015e 07       		.sleb128 7
 5060 015f 00       		.byte	0
 5061 0160 09       		.uleb128 0x9
 5062 0161 62050000 		.4byte	.LASF193
 5063 0165 20       		.byte	0x20
 5064 0166 05       		.byte	0x5
 5065 0167 62       		.byte	0x62
 5066 0168 39020000 		.4byte	0x239
 5067 016c 0A       		.uleb128 0xa
 5068 016d 80050000 		.4byte	.LASF39
 5069 0171 05       		.byte	0x5
 5070 0172 63       		.byte	0x63
 5071 0173 B9000000 		.4byte	0xb9
 5072 0177 00       		.byte	0
 5073 0178 0A       		.uleb128 0xa
 5074 0179 E7010000 		.4byte	.LASF40
 5075 017d 05       		.byte	0x5
 5076 017e 64       		.byte	0x64
 5077 017f 95000000 		.4byte	0x95
 5078 0183 01       		.byte	0x1
 5079 0184 0A       		.uleb128 0xa
 5080 0185 6F070000 		.4byte	.LASF41
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 109


 5081 0189 05       		.byte	0x5
 5082 018a 65       		.byte	0x65
 5083 018b C5000000 		.4byte	0xc5
 5084 018f 02       		.byte	0x2
 5085 0190 0A       		.uleb128 0xa
 5086 0191 56030000 		.4byte	.LASF42
 5087 0195 05       		.byte	0x5
 5088 0196 66       		.byte	0x66
 5089 0197 C5000000 		.4byte	0xc5
 5090 019b 04       		.byte	0x4
 5091 019c 0A       		.uleb128 0xa
 5092 019d 5F080000 		.4byte	.LASF43
 5093 01a1 05       		.byte	0x5
 5094 01a2 67       		.byte	0x67
 5095 01a3 C5000000 		.4byte	0xc5
 5096 01a7 06       		.byte	0x6
 5097 01a8 0A       		.uleb128 0xa
 5098 01a9 DE080000 		.4byte	.LASF44
 5099 01ad 05       		.byte	0x5
 5100 01ae 68       		.byte	0x68
 5101 01af C5000000 		.4byte	0xc5
 5102 01b3 08       		.byte	0x8
 5103 01b4 0A       		.uleb128 0xa
 5104 01b5 08050000 		.4byte	.LASF45
 5105 01b9 05       		.byte	0x5
 5106 01ba 69       		.byte	0x69
 5107 01bb C5000000 		.4byte	0xc5
 5108 01bf 0A       		.byte	0xa
 5109 01c0 0A       		.uleb128 0xa
 5110 01c1 87030000 		.4byte	.LASF46
 5111 01c5 05       		.byte	0x5
 5112 01c6 6A       		.byte	0x6a
 5113 01c7 C5000000 		.4byte	0xc5
 5114 01cb 0C       		.byte	0xc
 5115 01cc 0A       		.uleb128 0xa
 5116 01cd 8F050000 		.4byte	.LASF47
 5117 01d1 05       		.byte	0x5
 5118 01d2 6B       		.byte	0x6b
 5119 01d3 C5000000 		.4byte	0xc5
 5120 01d7 0E       		.byte	0xe
 5121 01d8 0A       		.uleb128 0xa
 5122 01d9 56040000 		.4byte	.LASF48
 5123 01dd 05       		.byte	0x5
 5124 01de 6C       		.byte	0x6c
 5125 01df C5000000 		.4byte	0xc5
 5126 01e3 10       		.byte	0x10
 5127 01e4 0A       		.uleb128 0xa
 5128 01e5 F9060000 		.4byte	.LASF49
 5129 01e9 05       		.byte	0x5
 5130 01ea 6D       		.byte	0x6d
 5131 01eb C5000000 		.4byte	0xc5
 5132 01ef 12       		.byte	0x12
 5133 01f0 0A       		.uleb128 0xa
 5134 01f1 02090000 		.4byte	.LASF50
 5135 01f5 05       		.byte	0x5
 5136 01f6 6E       		.byte	0x6e
 5137 01f7 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 110


 5138 01fb 14       		.byte	0x14
 5139 01fc 0A       		.uleb128 0xa
 5140 01fd E4030000 		.4byte	.LASF51
 5141 0201 05       		.byte	0x5
 5142 0202 6F       		.byte	0x6f
 5143 0203 C5000000 		.4byte	0xc5
 5144 0207 16       		.byte	0x16
 5145 0208 0A       		.uleb128 0xa
 5146 0209 09010000 		.4byte	.LASF52
 5147 020d 05       		.byte	0x5
 5148 020e 70       		.byte	0x70
 5149 020f C5000000 		.4byte	0xc5
 5150 0213 18       		.byte	0x18
 5151 0214 0A       		.uleb128 0xa
 5152 0215 D0030000 		.4byte	.LASF53
 5153 0219 05       		.byte	0x5
 5154 021a 71       		.byte	0x71
 5155 021b C5000000 		.4byte	0xc5
 5156 021f 1A       		.byte	0x1a
 5157 0220 0A       		.uleb128 0xa
 5158 0221 FF040000 		.4byte	.LASF54
 5159 0225 05       		.byte	0x5
 5160 0226 72       		.byte	0x72
 5161 0227 C5000000 		.4byte	0xc5
 5162 022b 1C       		.byte	0x1c
 5163 022c 0A       		.uleb128 0xa
 5164 022d B7010000 		.4byte	.LASF55
 5165 0231 05       		.byte	0x5
 5166 0232 73       		.byte	0x73
 5167 0233 C5000000 		.4byte	0xc5
 5168 0237 1E       		.byte	0x1e
 5169 0238 00       		.byte	0
 5170 0239 0B       		.uleb128 0xb
 5171 023a BE080000 		.4byte	.LASF61
 5172 023e 01       		.byte	0x1
 5173 023f 4E       		.byte	0x4e
 5174 0240 00000000 		.4byte	.LFB63
 5175 0244 60010000 		.4byte	.LFE63-.LFB63
 5176 0248 01       		.uleb128 0x1
 5177 0249 9C       		.byte	0x9c
 5178 024a 83020000 		.4byte	0x283
 5179 024e 0C       		.uleb128 0xc
 5180 024f 10000000 		.4byte	.LBB2
 5181 0253 34010000 		.4byte	.LBE2-.LBB2
 5182 0257 0D       		.uleb128 0xd
 5183 0258 FC000000 		.4byte	.LASF56
 5184 025c 01       		.byte	0x1
 5185 025d 54       		.byte	0x54
 5186 025e A1000000 		.4byte	0xa1
 5187 0262 02       		.uleb128 0x2
 5188 0263 91       		.byte	0x91
 5189 0264 76       		.sleb128 -10
 5190 0265 0D       		.uleb128 0xd
 5191 0266 54070000 		.4byte	.LASF57
 5192 026a 01       		.byte	0x1
 5193 026b 55       		.byte	0x55
 5194 026c 83020000 		.4byte	0x283
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 111


 5195 0270 02       		.uleb128 0x2
 5196 0271 91       		.byte	0x91
 5197 0272 68       		.sleb128 -24
 5198 0273 0D       		.uleb128 0xd
 5199 0274 F3010000 		.4byte	.LASF58
 5200 0278 01       		.byte	0x1
 5201 0279 56       		.byte	0x56
 5202 027a 83020000 		.4byte	0x283
 5203 027e 02       		.uleb128 0x2
 5204 027f 91       		.byte	0x91
 5205 0280 5C       		.sleb128 -36
 5206 0281 00       		.byte	0
 5207 0282 00       		.byte	0
 5208 0283 0E       		.uleb128 0xe
 5209 0284 83000000 		.4byte	0x83
 5210 0288 93020000 		.4byte	0x293
 5211 028c 0F       		.uleb128 0xf
 5212 028d 76000000 		.4byte	0x76
 5213 0291 0B       		.byte	0xb
 5214 0292 00       		.byte	0
 5215 0293 10       		.uleb128 0x10
 5216 0294 A0030000 		.4byte	.LASF59
 5217 0298 01       		.byte	0x1
 5218 0299 8F       		.byte	0x8f
 5219 029a 00000000 		.4byte	.LFB64
 5220 029e 18000000 		.4byte	.LFE64-.LFB64
 5221 02a2 01       		.uleb128 0x1
 5222 02a3 9C       		.byte	0x9c
 5223 02a4 B7020000 		.4byte	0x2b7
 5224 02a8 11       		.uleb128 0x11
 5225 02a9 64697200 		.ascii	"dir\000"
 5226 02ad 01       		.byte	0x1
 5227 02ae 8F       		.byte	0x8f
 5228 02af 95000000 		.4byte	0x95
 5229 02b3 02       		.uleb128 0x2
 5230 02b4 91       		.byte	0x91
 5231 02b5 77       		.sleb128 -9
 5232 02b6 00       		.byte	0
 5233 02b7 10       		.uleb128 0x10
 5234 02b8 F6030000 		.4byte	.LASF60
 5235 02bc 01       		.byte	0x1
 5236 02bd 94       		.byte	0x94
 5237 02be 00000000 		.4byte	.LFB65
 5238 02c2 18000000 		.4byte	.LFE65-.LFB65
 5239 02c6 01       		.uleb128 0x1
 5240 02c7 9C       		.byte	0x9c
 5241 02c8 DB020000 		.4byte	0x2db
 5242 02cc 11       		.uleb128 0x11
 5243 02cd 64697200 		.ascii	"dir\000"
 5244 02d1 01       		.byte	0x1
 5245 02d2 94       		.byte	0x94
 5246 02d3 95000000 		.4byte	0x95
 5247 02d7 02       		.uleb128 0x2
 5248 02d8 91       		.byte	0x91
 5249 02d9 77       		.sleb128 -9
 5250 02da 00       		.byte	0
 5251 02db 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 112


 5252 02dc DE070000 		.4byte	.LASF62
 5253 02e0 01       		.byte	0x1
 5254 02e1 99       		.byte	0x99
 5255 02e2 00000000 		.4byte	.LFB66
 5256 02e6 54000000 		.4byte	.LFE66-.LFB66
 5257 02ea 01       		.uleb128 0x1
 5258 02eb 9C       		.byte	0x9c
 5259 02ec FF020000 		.4byte	0x2ff
 5260 02f0 13       		.uleb128 0x13
 5261 02f1 6D657300 		.ascii	"mes\000"
 5262 02f5 01       		.byte	0x1
 5263 02f6 9E       		.byte	0x9e
 5264 02f7 FF020000 		.4byte	0x2ff
 5265 02fb 02       		.uleb128 0x2
 5266 02fc 91       		.byte	0x91
 5267 02fd 68       		.sleb128 -24
 5268 02fe 00       		.byte	0
 5269 02ff 0E       		.uleb128 0xe
 5270 0300 83000000 		.4byte	0x83
 5271 0304 0F030000 		.4byte	0x30f
 5272 0308 0F       		.uleb128 0xf
 5273 0309 76000000 		.4byte	0x76
 5274 030d 0F       		.byte	0xf
 5275 030e 00       		.byte	0
 5276 030f 10       		.uleb128 0x10
 5277 0310 D4010000 		.4byte	.LASF63
 5278 0314 01       		.byte	0x1
 5279 0315 A3       		.byte	0xa3
 5280 0316 00000000 		.4byte	.LFB67
 5281 031a F4000000 		.4byte	.LFE67-.LFB67
 5282 031e 01       		.uleb128 0x1
 5283 031f 9C       		.byte	0x9c
 5284 0320 5D030000 		.4byte	0x35d
 5285 0324 14       		.uleb128 0x14
 5286 0325 D2060000 		.4byte	.LASF64
 5287 0329 01       		.byte	0x1
 5288 032a A3       		.byte	0xa3
 5289 032b D8000000 		.4byte	0xd8
 5290 032f 02       		.uleb128 0x2
 5291 0330 91       		.byte	0x91
 5292 0331 68       		.sleb128 -24
 5293 0332 14       		.uleb128 0x14
 5294 0333 23040000 		.4byte	.LASF65
 5295 0337 01       		.byte	0x1
 5296 0338 A3       		.byte	0xa3
 5297 0339 D8000000 		.4byte	0xd8
 5298 033d 02       		.uleb128 0x2
 5299 033e 91       		.byte	0x91
 5300 033f 60       		.sleb128 -32
 5301 0340 0D       		.uleb128 0xd
 5302 0341 0C020000 		.4byte	.LASF66
 5303 0345 01       		.byte	0x1
 5304 0346 B8       		.byte	0xb8
 5305 0347 C5000000 		.4byte	0xc5
 5306 034b 02       		.uleb128 0x2
 5307 034c 91       		.byte	0x91
 5308 034d 76       		.sleb128 -10
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 113


 5309 034e 0D       		.uleb128 0xd
 5310 034f 56050000 		.4byte	.LASF67
 5311 0353 01       		.byte	0x1
 5312 0354 B9       		.byte	0xb9
 5313 0355 C5000000 		.4byte	0xc5
 5314 0359 02       		.uleb128 0x2
 5315 035a 91       		.byte	0x91
 5316 035b 74       		.sleb128 -12
 5317 035c 00       		.byte	0
 5318 035d 15       		.uleb128 0x15
 5319 035e EF070000 		.4byte	.LASF68
 5320 0362 01       		.byte	0x1
 5321 0363 BF       		.byte	0xbf
 5322 0364 00000000 		.4byte	.LFB68
 5323 0368 18000000 		.4byte	.LFE68-.LFB68
 5324 036c 01       		.uleb128 0x1
 5325 036d 9C       		.byte	0x9c
 5326 036e 15       		.uleb128 0x15
 5327 036f 22090000 		.4byte	.LASF69
 5328 0373 01       		.byte	0x1
 5329 0374 C5       		.byte	0xc5
 5330 0375 00000000 		.4byte	.LFB69
 5331 0379 18000000 		.4byte	.LFE69-.LFB69
 5332 037d 01       		.uleb128 0x1
 5333 037e 9C       		.byte	0x9c
 5334 037f 15       		.uleb128 0x15
 5335 0380 7A070000 		.4byte	.LASF70
 5336 0384 01       		.byte	0x1
 5337 0385 CB       		.byte	0xcb
 5338 0386 00000000 		.4byte	.LFB70
 5339 038a 22000000 		.4byte	.LFE70-.LFB70
 5340 038e 01       		.uleb128 0x1
 5341 038f 9C       		.byte	0x9c
 5342 0390 15       		.uleb128 0x15
 5343 0391 17020000 		.4byte	.LASF71
 5344 0395 01       		.byte	0x1
 5345 0396 D1       		.byte	0xd1
 5346 0397 00000000 		.4byte	.LFB71
 5347 039b 1C000000 		.4byte	.LFE71-.LFB71
 5348 039f 01       		.uleb128 0x1
 5349 03a0 9C       		.byte	0x9c
 5350 03a1 15       		.uleb128 0x15
 5351 03a2 EF060000 		.4byte	.LASF72
 5352 03a6 01       		.byte	0x1
 5353 03a7 D6       		.byte	0xd6
 5354 03a8 00000000 		.4byte	.LFB72
 5355 03ac 28000000 		.4byte	.LFE72-.LFB72
 5356 03b0 01       		.uleb128 0x1
 5357 03b1 9C       		.byte	0x9c
 5358 03b2 15       		.uleb128 0x15
 5359 03b3 25020000 		.4byte	.LASF73
 5360 03b7 01       		.byte	0x1
 5361 03b8 DB       		.byte	0xdb
 5362 03b9 00000000 		.4byte	.LFB73
 5363 03bd 2C000000 		.4byte	.LFE73-.LFB73
 5364 03c1 01       		.uleb128 0x1
 5365 03c2 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 114


 5366 03c3 15       		.uleb128 0x15
 5367 03c4 CA030000 		.4byte	.LASF74
 5368 03c8 01       		.byte	0x1
 5369 03c9 E0       		.byte	0xe0
 5370 03ca 00000000 		.4byte	.LFB74
 5371 03ce 44000000 		.4byte	.LFE74-.LFB74
 5372 03d2 01       		.uleb128 0x1
 5373 03d3 9C       		.byte	0x9c
 5374 03d4 15       		.uleb128 0x15
 5375 03d5 9D020000 		.4byte	.LASF75
 5376 03d9 01       		.byte	0x1
 5377 03da E5       		.byte	0xe5
 5378 03db 00000000 		.4byte	.LFB75
 5379 03df 38000000 		.4byte	.LFE75-.LFB75
 5380 03e3 01       		.uleb128 0x1
 5381 03e4 9C       		.byte	0x9c
 5382 03e5 15       		.uleb128 0x15
 5383 03e6 5D060000 		.4byte	.LASF76
 5384 03ea 01       		.byte	0x1
 5385 03eb EE       		.byte	0xee
 5386 03ec 00000000 		.4byte	.LFB76
 5387 03f0 38000000 		.4byte	.LFE76-.LFB76
 5388 03f4 01       		.uleb128 0x1
 5389 03f5 9C       		.byte	0x9c
 5390 03f6 15       		.uleb128 0x15
 5391 03f7 35060000 		.4byte	.LASF77
 5392 03fb 01       		.byte	0x1
 5393 03fc F7       		.byte	0xf7
 5394 03fd 00000000 		.4byte	.LFB77
 5395 0401 38000000 		.4byte	.LFE77-.LFB77
 5396 0405 01       		.uleb128 0x1
 5397 0406 9C       		.byte	0x9c
 5398 0407 16       		.uleb128 0x16
 5399 0408 AB010000 		.4byte	.LASF78
 5400 040c 01       		.byte	0x1
 5401 040d 0001     		.2byte	0x100
 5402 040f 00000000 		.4byte	.LFB78
 5403 0413 14000000 		.4byte	.LFE78-.LFB78
 5404 0417 01       		.uleb128 0x1
 5405 0418 9C       		.byte	0x9c
 5406 0419 17       		.uleb128 0x17
 5407 041a B3020000 		.4byte	.LASF79
 5408 041e 01       		.byte	0x1
 5409 041f 0501     		.2byte	0x105
 5410 0421 00000000 		.4byte	.LFB79
 5411 0425 18000000 		.4byte	.LFE79-.LFB79
 5412 0429 01       		.uleb128 0x1
 5413 042a 9C       		.byte	0x9c
 5414 042b 17       		.uleb128 0x17
 5415 042c 5E040000 		.4byte	.LASF80
 5416 0430 01       		.byte	0x1
 5417 0431 0901     		.2byte	0x109
 5418 0433 00000000 		.4byte	.LFB80
 5419 0437 18000000 		.4byte	.LFE80-.LFB80
 5420 043b 01       		.uleb128 0x1
 5421 043c 9C       		.byte	0x9c
 5422 043d 17       		.uleb128 0x17
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 115


 5423 043e 2D090000 		.4byte	.LASF81
 5424 0442 01       		.byte	0x1
 5425 0443 0E01     		.2byte	0x10e
 5426 0445 00000000 		.4byte	.LFB81
 5427 0449 18000000 		.4byte	.LFE81-.LFB81
 5428 044d 01       		.uleb128 0x1
 5429 044e 9C       		.byte	0x9c
 5430 044f 17       		.uleb128 0x17
 5431 0450 47030000 		.4byte	.LASF82
 5432 0454 01       		.byte	0x1
 5433 0455 1201     		.2byte	0x112
 5434 0457 00000000 		.4byte	.LFB82
 5435 045b 18000000 		.4byte	.LFE82-.LFB82
 5436 045f 01       		.uleb128 0x1
 5437 0460 9C       		.byte	0x9c
 5438 0461 18       		.uleb128 0x18
 5439 0462 CA050000 		.4byte	.LASF83
 5440 0466 01       		.byte	0x1
 5441 0467 1901     		.2byte	0x119
 5442 0469 00000000 		.4byte	.LFB83
 5443 046d B8000000 		.4byte	.LFE83-.LFB83
 5444 0471 01       		.uleb128 0x1
 5445 0472 9C       		.byte	0x9c
 5446 0473 87040000 		.4byte	0x487
 5447 0477 19       		.uleb128 0x19
 5448 0478 10050000 		.4byte	.LASF84
 5449 047c 01       		.byte	0x1
 5450 047d 1A01     		.2byte	0x11a
 5451 047f 83000000 		.4byte	0x83
 5452 0483 02       		.uleb128 0x2
 5453 0484 91       		.byte	0x91
 5454 0485 6F       		.sleb128 -17
 5455 0486 00       		.byte	0
 5456 0487 18       		.uleb128 0x18
 5457 0488 B5050000 		.4byte	.LASF85
 5458 048c 01       		.byte	0x1
 5459 048d 3601     		.2byte	0x136
 5460 048f 00000000 		.4byte	.LFB84
 5461 0493 BC010000 		.4byte	.LFE84-.LFB84
 5462 0497 01       		.uleb128 0x1
 5463 0498 9C       		.byte	0x9c
 5464 0499 D6040000 		.4byte	0x4d6
 5465 049d 19       		.uleb128 0x19
 5466 049e 10050000 		.4byte	.LASF84
 5467 04a2 01       		.byte	0x1
 5468 04a3 3801     		.2byte	0x138
 5469 04a5 83000000 		.4byte	0x83
 5470 04a9 02       		.uleb128 0x2
 5471 04aa 91       		.byte	0x91
 5472 04ab 77       		.sleb128 -9
 5473 04ac 0C       		.uleb128 0xc
 5474 04ad 8C000000 		.4byte	.LBB3
 5475 04b1 FC000000 		.4byte	.LBE3-.LBB3
 5476 04b5 1A       		.uleb128 0x1a
 5477 04b6 6D657300 		.ascii	"mes\000"
 5478 04ba 01       		.byte	0x1
 5479 04bb 5E01     		.2byte	0x15e
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 116


 5480 04bd FF020000 		.4byte	0x2ff
 5481 04c1 02       		.uleb128 0x2
 5482 04c2 91       		.byte	0x91
 5483 04c3 64       		.sleb128 -28
 5484 04c4 19       		.uleb128 0x19
 5485 04c5 42000000 		.4byte	.LASF86
 5486 04c9 01       		.byte	0x1
 5487 04ca 6E01     		.2byte	0x16e
 5488 04cc D6040000 		.4byte	0x4d6
 5489 04d0 03       		.uleb128 0x3
 5490 04d1 91       		.byte	0x91
 5491 04d2 E47E     		.sleb128 -156
 5492 04d4 00       		.byte	0
 5493 04d5 00       		.byte	0
 5494 04d6 0E       		.uleb128 0xe
 5495 04d7 83000000 		.4byte	0x83
 5496 04db E6040000 		.4byte	0x4e6
 5497 04df 0F       		.uleb128 0xf
 5498 04e0 76000000 		.4byte	0x76
 5499 04e4 7F       		.byte	0x7f
 5500 04e5 00       		.byte	0
 5501 04e6 1B       		.uleb128 0x1b
 5502 04e7 80080000 		.4byte	.LASF87
 5503 04eb 01       		.byte	0x1
 5504 04ec 7701     		.2byte	0x177
 5505 04ee 00000000 		.4byte	.LFB85
 5506 04f2 0C000000 		.4byte	.LFE85-.LFB85
 5507 04f6 01       		.uleb128 0x1
 5508 04f7 9C       		.byte	0x9c
 5509 04f8 1C       		.uleb128 0x1c
 5510 04f9 01070000 		.4byte	.LASF88
 5511 04fd 01       		.byte	0x1
 5512 04fe 7D01     		.2byte	0x17d
 5513 0500 00000000 		.4byte	.LFB86
 5514 0504 2C000000 		.4byte	.LFE86-.LFB86
 5515 0508 01       		.uleb128 0x1
 5516 0509 9C       		.byte	0x9c
 5517 050a 18       		.uleb128 0x18
 5518 050b C4010000 		.4byte	.LASF89
 5519 050f 01       		.byte	0x1
 5520 0510 8601     		.2byte	0x186
 5521 0512 00000000 		.4byte	.LFB87
 5522 0516 EC010000 		.4byte	.LFE87-.LFB87
 5523 051a 01       		.uleb128 0x1
 5524 051b 9C       		.byte	0x9c
 5525 051c 57050000 		.4byte	0x557
 5526 0520 1D       		.uleb128 0x1d
 5527 0521 B4000000 		.4byte	.LBB4
 5528 0525 52000000 		.4byte	.LBE4-.LBB4
 5529 0529 3D050000 		.4byte	0x53d
 5530 052d 1A       		.uleb128 0x1a
 5531 052e 6D657300 		.ascii	"mes\000"
 5532 0532 01       		.byte	0x1
 5533 0533 9D01     		.2byte	0x19d
 5534 0535 FF020000 		.4byte	0x2ff
 5535 0539 02       		.uleb128 0x2
 5536 053a 91       		.byte	0x91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 117


 5537 053b 58       		.sleb128 -40
 5538 053c 00       		.byte	0
 5539 053d 0C       		.uleb128 0xc
 5540 053e 12010000 		.4byte	.LBB5
 5541 0542 90000000 		.4byte	.LBE5-.LBB5
 5542 0546 19       		.uleb128 0x19
 5543 0547 93080000 		.4byte	.LASF90
 5544 054b 01       		.byte	0x1
 5545 054c A801     		.2byte	0x1a8
 5546 054e D8000000 		.4byte	0xd8
 5547 0552 02       		.uleb128 0x2
 5548 0553 91       		.byte	0x91
 5549 0554 68       		.sleb128 -24
 5550 0555 00       		.byte	0
 5551 0556 00       		.byte	0
 5552 0557 1C       		.uleb128 0x1c
 5553 0558 83020000 		.4byte	.LASF91
 5554 055c 01       		.byte	0x1
 5555 055d B201     		.2byte	0x1b2
 5556 055f 00000000 		.4byte	.LFB88
 5557 0563 AC000000 		.4byte	.LFE88-.LFB88
 5558 0567 01       		.uleb128 0x1
 5559 0568 9C       		.byte	0x9c
 5560 0569 1B       		.uleb128 0x1b
 5561 056a AA070000 		.4byte	.LASF92
 5562 056e 01       		.byte	0x1
 5563 056f D501     		.2byte	0x1d5
 5564 0571 00000000 		.4byte	.LFB89
 5565 0575 20000000 		.4byte	.LFE89-.LFB89
 5566 0579 01       		.uleb128 0x1
 5567 057a 9C       		.byte	0x9c
 5568 057b 1C       		.uleb128 0x1c
 5569 057c 09030000 		.4byte	.LASF93
 5570 0580 01       		.byte	0x1
 5571 0581 DC01     		.2byte	0x1dc
 5572 0583 00000000 		.4byte	.LFB90
 5573 0587 28000000 		.4byte	.LFE90-.LFB90
 5574 058b 01       		.uleb128 0x1
 5575 058c 9C       		.byte	0x9c
 5576 058d 1C       		.uleb128 0x1c
 5577 058e B4000000 		.4byte	.LASF94
 5578 0592 01       		.byte	0x1
 5579 0593 E501     		.2byte	0x1e5
 5580 0595 00000000 		.4byte	.LFB91
 5581 0599 0A000000 		.4byte	.LFE91-.LFB91
 5582 059d 01       		.uleb128 0x1
 5583 059e 9C       		.byte	0x9c
 5584 059f 1C       		.uleb128 0x1c
 5585 05a0 E0050000 		.4byte	.LASF95
 5586 05a4 01       		.byte	0x1
 5587 05a5 EA01     		.2byte	0x1ea
 5588 05a7 00000000 		.4byte	.LFB92
 5589 05ab 28000000 		.4byte	.LFE92-.LFB92
 5590 05af 01       		.uleb128 0x1
 5591 05b0 9C       		.byte	0x9c
 5592 05b1 16       		.uleb128 0x16
 5593 05b2 92020000 		.4byte	.LASF96
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 118


 5594 05b6 01       		.byte	0x1
 5595 05b7 F401     		.2byte	0x1f4
 5596 05b9 00000000 		.4byte	.LFB93
 5597 05bd 40000000 		.4byte	.LFE93-.LFB93
 5598 05c1 01       		.uleb128 0x1
 5599 05c2 9C       		.byte	0x9c
 5600 05c3 16       		.uleb128 0x16
 5601 05c4 01020000 		.4byte	.LASF97
 5602 05c8 01       		.byte	0x1
 5603 05c9 0302     		.2byte	0x203
 5604 05cb 00000000 		.4byte	.LFB94
 5605 05cf 40000000 		.4byte	.LFE94-.LFB94
 5606 05d3 01       		.uleb128 0x1
 5607 05d4 9C       		.byte	0x9c
 5608 05d5 1E       		.uleb128 0x1e
 5609 05d6 4A000000 		.4byte	.LASF98
 5610 05da 01       		.byte	0x1
 5611 05db 1302     		.2byte	0x213
 5612 05dd 00000000 		.4byte	.LFB95
 5613 05e1 30020000 		.4byte	.LFE95-.LFB95
 5614 05e5 01       		.uleb128 0x1
 5615 05e6 9C       		.byte	0x9c
 5616 05e7 46060000 		.4byte	0x646
 5617 05eb 19       		.uleb128 0x19
 5618 05ec DA020000 		.4byte	.LASF99
 5619 05f0 01       		.byte	0x1
 5620 05f1 2102     		.2byte	0x221
 5621 05f3 C5000000 		.4byte	0xc5
 5622 05f7 02       		.uleb128 0x2
 5623 05f8 91       		.byte	0x91
 5624 05f9 5E       		.sleb128 -34
 5625 05fa 19       		.uleb128 0x19
 5626 05fb 2E050000 		.4byte	.LASF100
 5627 05ff 01       		.byte	0x1
 5628 0600 2202     		.2byte	0x222
 5629 0602 C5000000 		.4byte	0xc5
 5630 0606 02       		.uleb128 0x2
 5631 0607 91       		.byte	0x91
 5632 0608 5C       		.sleb128 -36
 5633 0609 19       		.uleb128 0x19
 5634 060a 76030000 		.4byte	.LASF101
 5635 060e 01       		.byte	0x1
 5636 060f 2302     		.2byte	0x223
 5637 0611 D8000000 		.4byte	0xd8
 5638 0615 02       		.uleb128 0x2
 5639 0616 91       		.byte	0x91
 5640 0617 68       		.sleb128 -24
 5641 0618 19       		.uleb128 0x19
 5642 0619 E6080000 		.4byte	.LASF102
 5643 061d 01       		.byte	0x1
 5644 061e 2402     		.2byte	0x224
 5645 0620 D8000000 		.4byte	0xd8
 5646 0624 02       		.uleb128 0x2
 5647 0625 91       		.byte	0x91
 5648 0626 60       		.sleb128 -32
 5649 0627 19       		.uleb128 0x19
 5650 0628 0E040000 		.4byte	.LASF103
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 119


 5651 062c 01       		.byte	0x1
 5652 062d 2D02     		.2byte	0x22d
 5653 062f 68000000 		.4byte	0x68
 5654 0633 02       		.uleb128 0x2
 5655 0634 91       		.byte	0x91
 5656 0635 58       		.sleb128 -40
 5657 0636 19       		.uleb128 0x19
 5658 0637 89080000 		.4byte	.LASF104
 5659 063b 01       		.byte	0x1
 5660 063c 2E02     		.2byte	0x22e
 5661 063e 68000000 		.4byte	0x68
 5662 0642 02       		.uleb128 0x2
 5663 0643 91       		.byte	0x91
 5664 0644 54       		.sleb128 -44
 5665 0645 00       		.byte	0
 5666 0646 1E       		.uleb128 0x1e
 5667 0647 85050000 		.4byte	.LASF105
 5668 064b 01       		.byte	0x1
 5669 064c 3C02     		.2byte	0x23c
 5670 064e 00000000 		.4byte	.LFB96
 5671 0652 50010000 		.4byte	.LFE96-.LFB96
 5672 0656 01       		.uleb128 0x1
 5673 0657 9C       		.byte	0x9c
 5674 0658 88060000 		.4byte	0x688
 5675 065c 1A       		.uleb128 0x1a
 5676 065d 6E6C00   		.ascii	"nl\000"
 5677 0660 01       		.byte	0x1
 5678 0661 4002     		.2byte	0x240
 5679 0663 95000000 		.4byte	0x95
 5680 0667 02       		.uleb128 0x2
 5681 0668 91       		.byte	0x91
 5682 0669 67       		.sleb128 -25
 5683 066a 1A       		.uleb128 0x1a
 5684 066b 6E7200   		.ascii	"nr\000"
 5685 066e 01       		.byte	0x1
 5686 066f 4102     		.2byte	0x241
 5687 0671 95000000 		.4byte	0x95
 5688 0675 02       		.uleb128 0x2
 5689 0676 91       		.byte	0x91
 5690 0677 66       		.sleb128 -26
 5691 0678 1A       		.uleb128 0x1a
 5692 0679 6D696400 		.ascii	"mid\000"
 5693 067d 01       		.byte	0x1
 5694 067e 4202     		.2byte	0x242
 5695 0680 95000000 		.4byte	0x95
 5696 0684 02       		.uleb128 0x2
 5697 0685 91       		.byte	0x91
 5698 0686 65       		.sleb128 -27
 5699 0687 00       		.byte	0
 5700 0688 1E       		.uleb128 0x1e
 5701 0689 49010000 		.4byte	.LASF106
 5702 068d 01       		.byte	0x1
 5703 068e 5E02     		.2byte	0x25e
 5704 0690 00000000 		.4byte	.LFB97
 5705 0694 84010000 		.4byte	.LFE97-.LFB97
 5706 0698 01       		.uleb128 0x1
 5707 0699 9C       		.byte	0x9c
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 120


 5708 069a CA060000 		.4byte	0x6ca
 5709 069e 1A       		.uleb128 0x1a
 5710 069f 6E6C00   		.ascii	"nl\000"
 5711 06a2 01       		.byte	0x1
 5712 06a3 6202     		.2byte	0x262
 5713 06a5 95000000 		.4byte	0x95
 5714 06a9 02       		.uleb128 0x2
 5715 06aa 91       		.byte	0x91
 5716 06ab 67       		.sleb128 -25
 5717 06ac 1A       		.uleb128 0x1a
 5718 06ad 6E7200   		.ascii	"nr\000"
 5719 06b0 01       		.byte	0x1
 5720 06b1 6302     		.2byte	0x263
 5721 06b3 95000000 		.4byte	0x95
 5722 06b7 02       		.uleb128 0x2
 5723 06b8 91       		.byte	0x91
 5724 06b9 66       		.sleb128 -26
 5725 06ba 1A       		.uleb128 0x1a
 5726 06bb 6D696400 		.ascii	"mid\000"
 5727 06bf 01       		.byte	0x1
 5728 06c0 6402     		.2byte	0x264
 5729 06c2 95000000 		.4byte	0x95
 5730 06c6 02       		.uleb128 0x2
 5731 06c7 91       		.byte	0x91
 5732 06c8 65       		.sleb128 -27
 5733 06c9 00       		.byte	0
 5734 06ca 1E       		.uleb128 0x1e
 5735 06cb 2E010000 		.4byte	.LASF107
 5736 06cf 01       		.byte	0x1
 5737 06d0 8602     		.2byte	0x286
 5738 06d2 00000000 		.4byte	.LFB98
 5739 06d6 10020000 		.4byte	.LFE98-.LFB98
 5740 06da 01       		.uleb128 0x1
 5741 06db 9C       		.byte	0x9c
 5742 06dc 28070000 		.4byte	0x728
 5743 06e0 1A       		.uleb128 0x1a
 5744 06e1 6E6C00   		.ascii	"nl\000"
 5745 06e4 01       		.byte	0x1
 5746 06e5 8A02     		.2byte	0x28a
 5747 06e7 95000000 		.4byte	0x95
 5748 06eb 02       		.uleb128 0x2
 5749 06ec 91       		.byte	0x91
 5750 06ed 67       		.sleb128 -25
 5751 06ee 1A       		.uleb128 0x1a
 5752 06ef 666C00   		.ascii	"fl\000"
 5753 06f2 01       		.byte	0x1
 5754 06f3 8B02     		.2byte	0x28b
 5755 06f5 95000000 		.4byte	0x95
 5756 06f9 02       		.uleb128 0x2
 5757 06fa 91       		.byte	0x91
 5758 06fb 66       		.sleb128 -26
 5759 06fc 1A       		.uleb128 0x1a
 5760 06fd 6E7200   		.ascii	"nr\000"
 5761 0700 01       		.byte	0x1
 5762 0701 8C02     		.2byte	0x28c
 5763 0703 95000000 		.4byte	0x95
 5764 0707 02       		.uleb128 0x2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 121


 5765 0708 91       		.byte	0x91
 5766 0709 65       		.sleb128 -27
 5767 070a 1A       		.uleb128 0x1a
 5768 070b 667200   		.ascii	"fr\000"
 5769 070e 01       		.byte	0x1
 5770 070f 8D02     		.2byte	0x28d
 5771 0711 95000000 		.4byte	0x95
 5772 0715 02       		.uleb128 0x2
 5773 0716 91       		.byte	0x91
 5774 0717 64       		.sleb128 -28
 5775 0718 1A       		.uleb128 0x1a
 5776 0719 6D696400 		.ascii	"mid\000"
 5777 071d 01       		.byte	0x1
 5778 071e 8E02     		.2byte	0x28e
 5779 0720 95000000 		.4byte	0x95
 5780 0724 02       		.uleb128 0x2
 5781 0725 91       		.byte	0x91
 5782 0726 63       		.sleb128 -29
 5783 0727 00       		.byte	0
 5784 0728 1E       		.uleb128 0x1e
 5785 0729 6C030000 		.4byte	.LASF108
 5786 072d 01       		.byte	0x1
 5787 072e C402     		.2byte	0x2c4
 5788 0730 00000000 		.4byte	.LFB99
 5789 0734 C0000000 		.4byte	.LFE99-.LFB99
 5790 0738 01       		.uleb128 0x1
 5791 0739 9C       		.byte	0x9c
 5792 073a 76070000 		.4byte	0x776
 5793 073e 0C       		.uleb128 0xc
 5794 073f 0E000000 		.4byte	.LBB6
 5795 0743 8E000000 		.4byte	.LBE6-.LBB6
 5796 0747 19       		.uleb128 0x19
 5797 0748 CC020000 		.4byte	.LASF109
 5798 074c 01       		.byte	0x1
 5799 074d CD02     		.2byte	0x2cd
 5800 074f D1000000 		.4byte	0xd1
 5801 0753 02       		.uleb128 0x2
 5802 0754 91       		.byte	0x91
 5803 0755 74       		.sleb128 -12
 5804 0756 19       		.uleb128 0x19
 5805 0757 6C050000 		.4byte	.LASF110
 5806 075b 01       		.byte	0x1
 5807 075c CE02     		.2byte	0x2ce
 5808 075e C5000000 		.4byte	0xc5
 5809 0762 02       		.uleb128 0x2
 5810 0763 91       		.byte	0x91
 5811 0764 72       		.sleb128 -14
 5812 0765 19       		.uleb128 0x19
 5813 0766 2F030000 		.4byte	.LASF111
 5814 076a 01       		.byte	0x1
 5815 076b D302     		.2byte	0x2d3
 5816 076d FF020000 		.4byte	0x2ff
 5817 0771 02       		.uleb128 0x2
 5818 0772 91       		.byte	0x91
 5819 0773 60       		.sleb128 -32
 5820 0774 00       		.byte	0
 5821 0775 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 122


 5822 0776 1E       		.uleb128 0x1e
 5823 0777 CF080000 		.4byte	.LASF112
 5824 077b 01       		.byte	0x1
 5825 077c DA02     		.2byte	0x2da
 5826 077e 00000000 		.4byte	.LFB100
 5827 0782 B8000000 		.4byte	.LFE100-.LFB100
 5828 0786 01       		.uleb128 0x1
 5829 0787 9C       		.byte	0x9c
 5830 0788 A6070000 		.4byte	0x7a6
 5831 078c 0C       		.uleb128 0xc
 5832 078d 0E000000 		.4byte	.LBB7
 5833 0791 86000000 		.4byte	.LBE7-.LBB7
 5834 0795 19       		.uleb128 0x19
 5835 0796 80060000 		.4byte	.LASF113
 5836 079a 01       		.byte	0x1
 5837 079b DE02     		.2byte	0x2de
 5838 079d FF020000 		.4byte	0x2ff
 5839 07a1 02       		.uleb128 0x2
 5840 07a2 91       		.byte	0x91
 5841 07a3 68       		.sleb128 -24
 5842 07a4 00       		.byte	0
 5843 07a5 00       		.byte	0
 5844 07a6 18       		.uleb128 0x18
 5845 07a7 09070000 		.4byte	.LASF114
 5846 07ab 01       		.byte	0x1
 5847 07ac EF02     		.2byte	0x2ef
 5848 07ae 00000000 		.4byte	.LFB101
 5849 07b2 4A000000 		.4byte	.LFE101-.LFB101
 5850 07b6 01       		.uleb128 0x1
 5851 07b7 9C       		.byte	0x9c
 5852 07b8 CC070000 		.4byte	0x7cc
 5853 07bc 1F       		.uleb128 0x1f
 5854 07bd 24030000 		.4byte	.LASF115
 5855 07c1 01       		.byte	0x1
 5856 07c2 EF02     		.2byte	0x2ef
 5857 07c4 CC070000 		.4byte	0x7cc
 5858 07c8 02       		.uleb128 0x2
 5859 07c9 91       		.byte	0x91
 5860 07ca 6C       		.sleb128 -20
 5861 07cb 00       		.byte	0
 5862 07cc 05       		.uleb128 0x5
 5863 07cd 04       		.byte	0x4
 5864 07ce 95000000 		.4byte	0x95
 5865 07d2 20       		.uleb128 0x20
 5866 07d3 7B080000 		.4byte	.LASF116
 5867 07d7 01       		.byte	0x1
 5868 07d8 F802     		.2byte	0x2f8
 5869 07da 68000000 		.4byte	0x68
 5870 07de 00000000 		.4byte	.LFB102
 5871 07e2 F8020000 		.4byte	.LFE102-.LFB102
 5872 07e6 01       		.uleb128 0x1
 5873 07e7 9C       		.byte	0x9c
 5874 07e8 2E080000 		.4byte	0x82e
 5875 07ec 19       		.uleb128 0x19
 5876 07ed FA020000 		.4byte	.LASF117
 5877 07f1 01       		.byte	0x1
 5878 07f2 3103     		.2byte	0x331
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 123


 5879 07f4 95000000 		.4byte	0x95
 5880 07f8 02       		.uleb128 0x2
 5881 07f9 91       		.byte	0x91
 5882 07fa 77       		.sleb128 -9
 5883 07fb 0C       		.uleb128 0xc
 5884 07fc 66000000 		.4byte	.LBB8
 5885 0800 4C020000 		.4byte	.LBE8-.LBB8
 5886 0804 19       		.uleb128 0x19
 5887 0805 51020000 		.4byte	.LASF118
 5888 0809 01       		.byte	0x1
 5889 080a 3F03     		.2byte	0x33f
 5890 080c 2E080000 		.4byte	0x82e
 5891 0810 02       		.uleb128 0x2
 5892 0811 91       		.byte	0x91
 5893 0812 70       		.sleb128 -16
 5894 0813 0C       		.uleb128 0xc
 5895 0814 34010000 		.4byte	.LBB9
 5896 0818 1C010000 		.4byte	.LBE9-.LBB9
 5897 081c 19       		.uleb128 0x19
 5898 081d 68040000 		.4byte	.LASF119
 5899 0821 01       		.byte	0x1
 5900 0822 6903     		.2byte	0x369
 5901 0824 83000000 		.4byte	0x83
 5902 0828 02       		.uleb128 0x2
 5903 0829 91       		.byte	0x91
 5904 082a 76       		.sleb128 -10
 5905 082b 00       		.byte	0
 5906 082c 00       		.byte	0
 5907 082d 00       		.byte	0
 5908 082e 0E       		.uleb128 0xe
 5909 082f 95000000 		.4byte	0x95
 5910 0833 3E080000 		.4byte	0x83e
 5911 0837 0F       		.uleb128 0xf
 5912 0838 76000000 		.4byte	0x76
 5913 083c 04       		.byte	0x4
 5914 083d 00       		.byte	0
 5915 083e 18       		.uleb128 0x18
 5916 083f E2060000 		.4byte	.LASF120
 5917 0843 01       		.byte	0x1
 5918 0844 C703     		.2byte	0x3c7
 5919 0846 00000000 		.4byte	.LFB103
 5920 084a 68000000 		.4byte	.LFE103-.LFB103
 5921 084e 01       		.uleb128 0x1
 5922 084f 9C       		.byte	0x9c
 5923 0850 7B080000 		.4byte	0x87b
 5924 0854 21       		.uleb128 0x21
 5925 0855 7300     		.ascii	"s\000"
 5926 0857 01       		.byte	0x1
 5927 0858 C703     		.2byte	0x3c7
 5928 085a 7D000000 		.4byte	0x7d
 5929 085e 02       		.uleb128 0x2
 5930 085f 91       		.byte	0x91
 5931 0860 6C       		.sleb128 -20
 5932 0861 0C       		.uleb128 0xc
 5933 0862 10000000 		.4byte	.LBB10
 5934 0866 48000000 		.4byte	.LBE10-.LBB10
 5935 086a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 124


 5936 086b 636E7400 		.ascii	"cnt\000"
 5937 086f 01       		.byte	0x1
 5938 0870 CE03     		.2byte	0x3ce
 5939 0872 AD000000 		.4byte	0xad
 5940 0876 02       		.uleb128 0x2
 5941 0877 91       		.byte	0x91
 5942 0878 74       		.sleb128 -12
 5943 0879 00       		.byte	0
 5944 087a 00       		.byte	0
 5945 087b 18       		.uleb128 0x18
 5946 087c 35080000 		.4byte	.LASF121
 5947 0880 01       		.byte	0x1
 5948 0881 DD03     		.2byte	0x3dd
 5949 0883 00000000 		.4byte	.LFB104
 5950 0887 50000000 		.4byte	.LFE104-.LFB104
 5951 088b 01       		.uleb128 0x1
 5952 088c 9C       		.byte	0x9c
 5953 088d B8080000 		.4byte	0x8b8
 5954 0891 21       		.uleb128 0x21
 5955 0892 6300     		.ascii	"c\000"
 5956 0894 01       		.byte	0x1
 5957 0895 DD03     		.2byte	0x3dd
 5958 0897 83000000 		.4byte	0x83
 5959 089b 02       		.uleb128 0x2
 5960 089c 91       		.byte	0x91
 5961 089d 6F       		.sleb128 -17
 5962 089e 0C       		.uleb128 0xc
 5963 089f 12000000 		.4byte	.LBB11
 5964 08a3 2E000000 		.4byte	.LBE11-.LBB11
 5965 08a7 1A       		.uleb128 0x1a
 5966 08a8 636E7400 		.ascii	"cnt\000"
 5967 08ac 01       		.byte	0x1
 5968 08ad E103     		.2byte	0x3e1
 5969 08af AD000000 		.4byte	0xad
 5970 08b3 02       		.uleb128 0x2
 5971 08b4 91       		.byte	0x91
 5972 08b5 74       		.sleb128 -12
 5973 08b6 00       		.byte	0
 5974 08b7 00       		.byte	0
 5975 08b8 1E       		.uleb128 0x1e
 5976 08b9 3A030000 		.4byte	.LASF122
 5977 08bd 01       		.byte	0x1
 5978 08be EE03     		.2byte	0x3ee
 5979 08c0 00000000 		.4byte	.LFB105
 5980 08c4 3A000000 		.4byte	.LFE105-.LFB105
 5981 08c8 01       		.uleb128 0x1
 5982 08c9 9C       		.byte	0x9c
 5983 08ca DC080000 		.4byte	0x8dc
 5984 08ce 1A       		.uleb128 0x1a
 5985 08cf 6300     		.ascii	"c\000"
 5986 08d1 01       		.byte	0x1
 5987 08d2 F003     		.2byte	0x3f0
 5988 08d4 95000000 		.4byte	0x95
 5989 08d8 02       		.uleb128 0x2
 5990 08d9 91       		.byte	0x91
 5991 08da 77       		.sleb128 -9
 5992 08db 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 125


 5993 08dc 22       		.uleb128 0x22
 5994 08dd 73060000 		.4byte	.LASF123
 5995 08e1 06       		.byte	0x6
 5996 08e2 9606     		.2byte	0x696
 5997 08e4 E8080000 		.4byte	0x8e8
 5998 08e8 23       		.uleb128 0x23
 5999 08e9 8A000000 		.4byte	0x8a
 6000 08ed 24       		.uleb128 0x24
 6001 08ee 747300   		.ascii	"ts\000"
 6002 08f1 05       		.byte	0x5
 6003 08f2 10       		.byte	0x10
 6004 08f3 95000000 		.4byte	0x95
 6005 08f7 05       		.uleb128 0x5
 6006 08f8 03       		.byte	0x3
 6007 08f9 00000000 		.4byte	ts
 6008 08fd 25       		.uleb128 0x25
 6009 08fe B7070000 		.4byte	.LASF124
 6010 0902 05       		.byte	0x5
 6011 0903 11       		.byte	0x11
 6012 0904 A1000000 		.4byte	0xa1
 6013 0908 05       		.uleb128 0x5
 6014 0909 03       		.byte	0x3
 6015 090a 00000000 		.4byte	ts_enc
 6016 090e 25       		.uleb128 0x25
 6017 090f 8C060000 		.4byte	.LASF125
 6018 0913 05       		.byte	0x5
 6019 0914 12       		.byte	0x12
 6020 0915 A1000000 		.4byte	0xa1
 6021 0919 05       		.uleb128 0x5
 6022 091a 03       		.byte	0x3
 6023 091b 00000000 		.4byte	ts_update
 6024 091f 25       		.uleb128 0x25
 6025 0920 39050000 		.4byte	.LASF126
 6026 0924 05       		.byte	0x5
 6027 0925 13       		.byte	0x13
 6028 0926 A1000000 		.4byte	0xa1
 6029 092a 05       		.uleb128 0x5
 6030 092b 03       		.byte	0x3
 6031 092c 00000000 		.4byte	ts_speed
 6032 0930 25       		.uleb128 0x25
 6033 0931 61030000 		.4byte	.LASF127
 6034 0935 05       		.byte	0x5
 6035 0936 14       		.byte	0x14
 6036 0937 A1000000 		.4byte	0xa1
 6037 093b 05       		.uleb128 0x5
 6038 093c 03       		.byte	0x3
 6039 093d 00000000 		.4byte	ts_display
 6040 0941 25       		.uleb128 0x25
 6041 0942 E4020000 		.4byte	.LASF128
 6042 0946 05       		.byte	0x5
 6043 0947 16       		.byte	0x16
 6044 0948 95000000 		.4byte	0x95
 6045 094c 05       		.uleb128 0x5
 6046 094d 03       		.byte	0x3
 6047 094e 00000000 		.4byte	flag_ts_enc
 6048 0952 25       		.uleb128 0x25
 6049 0953 BD020000 		.4byte	.LASF129
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 126


 6050 0957 05       		.byte	0x5
 6051 0958 17       		.byte	0x17
 6052 0959 95000000 		.4byte	0x95
 6053 095d 05       		.uleb128 0x5
 6054 095e 03       		.byte	0x3
 6055 095f 00000000 		.4byte	flag_ts_update
 6056 0963 25       		.uleb128 0x25
 6057 0964 ED050000 		.4byte	.LASF130
 6058 0968 05       		.byte	0x5
 6059 0969 18       		.byte	0x18
 6060 096a 95000000 		.4byte	0x95
 6061 096e 05       		.uleb128 0x5
 6062 096f 03       		.byte	0x3
 6063 0970 00000000 		.4byte	flag_ts_speed
 6064 0974 25       		.uleb128 0x25
 6065 0975 C8070000 		.4byte	.LASF131
 6066 0979 05       		.byte	0x5
 6067 097a 19       		.byte	0x19
 6068 097b 95000000 		.4byte	0x95
 6069 097f 05       		.uleb128 0x5
 6070 0980 03       		.byte	0x3
 6071 0981 00000000 		.4byte	flag_ts_display
 6072 0985 25       		.uleb128 0x25
 6073 0986 18060000 		.4byte	.LASF132
 6074 098a 05       		.byte	0x5
 6075 098b 1C       		.byte	0x1c
 6076 098c 95000000 		.4byte	0x95
 6077 0990 05       		.uleb128 0x5
 6078 0991 03       		.byte	0x3
 6079 0992 00000000 		.4byte	flag_rx
 6080 0996 25       		.uleb128 0x25
 6081 0997 45020000 		.4byte	.LASF133
 6082 099b 05       		.byte	0x5
 6083 099c 1D       		.byte	0x1d
 6084 099d 95000000 		.4byte	0x95
 6085 09a1 05       		.uleb128 0x5
 6086 09a2 03       		.byte	0x3
 6087 09a3 00000000 		.4byte	flag_packet
 6088 09a7 25       		.uleb128 0x25
 6089 09a8 F3080000 		.4byte	.LASF134
 6090 09ac 05       		.byte	0x5
 6091 09ad 1E       		.byte	0x1e
 6092 09ae 95000000 		.4byte	0x95
 6093 09b2 05       		.uleb128 0x5
 6094 09b3 03       		.byte	0x3
 6095 09b4 00000000 		.4byte	flag_KB_string
 6096 09b8 25       		.uleb128 0x25
 6097 09b9 FB050000 		.4byte	.LASF135
 6098 09bd 05       		.byte	0x5
 6099 09be 20       		.byte	0x20
 6100 09bf 95000000 		.4byte	0x95
 6101 09c3 05       		.uleb128 0x5
 6102 09c4 03       		.byte	0x3
 6103 09c5 00000000 		.4byte	dataready_flag
 6104 09c9 25       		.uleb128 0x25
 6105 09ca 67010000 		.4byte	.LASF136
 6106 09ce 05       		.byte	0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 127


 6107 09cf 22       		.byte	0x22
 6108 09d0 95000000 		.4byte	0x95
 6109 09d4 05       		.uleb128 0x5
 6110 09d5 03       		.byte	0x3
 6111 09d6 00000000 		.4byte	flag_rf_transmission_active
 6112 09da 25       		.uleb128 0x25
 6113 09db 83010000 		.4byte	.LASF137
 6114 09df 05       		.byte	0x5
 6115 09e0 23       		.byte	0x23
 6116 09e1 95000000 		.4byte	0x95
 6117 09e5 05       		.uleb128 0x5
 6118 09e6 03       		.byte	0x3
 6119 09e7 00000000 		.4byte	flag_print_rf
 6120 09eb 25       		.uleb128 0x25
 6121 09ec 9C050000 		.4byte	.LASF138
 6122 09f0 05       		.byte	0x5
 6123 09f1 25       		.byte	0x25
 6124 09f2 95000000 		.4byte	0x95
 6125 09f6 05       		.uleb128 0x5
 6126 09f7 03       		.byte	0x3
 6127 09f8 00000000 		.4byte	flag_receive_ADC
 6128 09fc 25       		.uleb128 0x25
 6129 09fd 2A060000 		.4byte	.LASF139
 6130 0a01 05       		.byte	0x5
 6131 0a02 26       		.byte	0x26
 6132 0a03 C5000000 		.4byte	0xc5
 6133 0a07 05       		.uleb128 0x5
 6134 0a08 03       		.byte	0x3
 6135 0a09 00000000 		.4byte	adc_result
 6136 0a0d 25       		.uleb128 0x25
 6137 0a0e 00000000 		.4byte	.LASF140
 6138 0a12 05       		.byte	0x5
 6139 0a13 28       		.byte	0x28
 6140 0a14 95000000 		.4byte	0x95
 6141 0a18 05       		.uleb128 0x5
 6142 0a19 03       		.byte	0x3
 6143 0a1a 00000000 		.4byte	direction
 6144 0a1e 25       		.uleb128 0x25
 6145 0a1f 22050000 		.4byte	.LASF141
 6146 0a23 05       		.byte	0x5
 6147 0a24 2B       		.byte	0x2b
 6148 0a25 95000000 		.4byte	0x95
 6149 0a29 05       		.uleb128 0x5
 6150 0a2a 03       		.byte	0x3
 6151 0a2b 00000000 		.4byte	BIN_ENABLED
 6152 0a2f 25       		.uleb128 0x25
 6153 0a30 18040000 		.4byte	.LASF142
 6154 0a34 05       		.byte	0x5
 6155 0a35 2D       		.byte	0x2d
 6156 0a36 95000000 		.4byte	0x95
 6157 0a3a 05       		.uleb128 0x5
 6158 0a3b 03       		.byte	0x3
 6159 0a3c 00000000 		.4byte	BT_ENABLED
 6160 0a40 25       		.uleb128 0x25
 6161 0a41 3F060000 		.4byte	.LASF143
 6162 0a45 05       		.byte	0x5
 6163 0a46 32       		.byte	0x32
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 128


 6164 0a47 95000000 		.4byte	0x95
 6165 0a4b 05       		.uleb128 0x5
 6166 0a4c 03       		.byte	0x3
 6167 0a4d 00000000 		.4byte	flag_calc_wheelspeed
 6168 0a51 25       		.uleb128 0x25
 6169 0a52 16010000 		.4byte	.LASF144
 6170 0a56 05       		.byte	0x5
 6171 0a57 33       		.byte	0x33
 6172 0a58 C5000000 		.4byte	0xc5
 6173 0a5c 05       		.uleb128 0x5
 6174 0a5d 03       		.byte	0x3
 6175 0a5e 00000000 		.4byte	quad_count1
 6176 0a62 25       		.uleb128 0x25
 6177 0a63 22010000 		.4byte	.LASF145
 6178 0a67 05       		.byte	0x5
 6179 0a68 34       		.byte	0x34
 6180 0a69 C5000000 		.4byte	0xc5
 6181 0a6d 05       		.uleb128 0x5
 6182 0a6e 03       		.byte	0x3
 6183 0a6f 00000000 		.4byte	quad_count2
 6184 0a73 25       		.uleb128 0x25
 6185 0a74 07080000 		.4byte	.LASF146
 6186 0a78 05       		.byte	0x5
 6187 0a79 35       		.byte	0x35
 6188 0a7a C5000000 		.4byte	0xc5
 6189 0a7e 05       		.uleb128 0x5
 6190 0a7f 03       		.byte	0x3
 6191 0a80 00000000 		.4byte	last_quad_count1
 6192 0a84 25       		.uleb128 0x25
 6193 0a85 18080000 		.4byte	.LASF147
 6194 0a89 05       		.byte	0x5
 6195 0a8a 36       		.byte	0x36
 6196 0a8b C5000000 		.4byte	0xc5
 6197 0a8f 05       		.uleb128 0x5
 6198 0a90 03       		.byte	0x3
 6199 0a91 00000000 		.4byte	last_quad_count2
 6200 0a95 25       		.uleb128 0x25
 6201 0a96 2C000000 		.4byte	.LASF148
 6202 0a9a 05       		.byte	0x5
 6203 0a9b 37       		.byte	0x37
 6204 0a9c C5000000 		.4byte	0xc5
 6205 0aa0 05       		.uleb128 0x5
 6206 0aa1 03       		.byte	0x3
 6207 0aa2 00000000 		.4byte	quad_diff1
 6208 0aa6 25       		.uleb128 0x25
 6209 0aa7 37000000 		.4byte	.LASF149
 6210 0aab 05       		.byte	0x5
 6211 0aac 38       		.byte	0x38
 6212 0aad C5000000 		.4byte	0xc5
 6213 0ab1 05       		.uleb128 0x5
 6214 0ab2 03       		.byte	0x3
 6215 0ab3 00000000 		.4byte	quad_diff2
 6216 0ab7 25       		.uleb128 0x25
 6217 0ab8 9F060000 		.4byte	.LASF150
 6218 0abc 05       		.byte	0x5
 6219 0abd 39       		.byte	0x39
 6220 0abe 95000000 		.4byte	0x95
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 129


 6221 0ac2 05       		.uleb128 0x5
 6222 0ac3 03       		.byte	0x3
 6223 0ac4 00000000 		.4byte	deadzone
 6224 0ac8 25       		.uleb128 0x25
 6225 0ac9 68000000 		.4byte	.LASF151
 6226 0acd 05       		.byte	0x5
 6227 0ace 3C       		.byte	0x3c
 6228 0acf C5000000 		.4byte	0xc5
 6229 0ad3 05       		.uleb128 0x5
 6230 0ad4 03       		.byte	0x3
 6231 0ad5 00000000 		.4byte	start_turn_count
 6232 0ad9 25       		.uleb128 0x25
 6233 0ada D0050000 		.4byte	.LASF152
 6234 0ade 05       		.byte	0x5
 6235 0adf 3F       		.byte	0x3f
 6236 0ae0 C5000000 		.4byte	0xc5
 6237 0ae4 05       		.uleb128 0x5
 6238 0ae5 03       		.byte	0x3
 6239 0ae6 00000000 		.4byte	left_duty_cycle
 6240 0aea 25       		.uleb128 0x25
 6241 0aeb A5080000 		.4byte	.LASF153
 6242 0aef 05       		.byte	0x5
 6243 0af0 40       		.byte	0x40
 6244 0af1 C5000000 		.4byte	0xc5
 6245 0af5 05       		.uleb128 0x5
 6246 0af6 03       		.byte	0x3
 6247 0af7 00000000 		.4byte	right_duty_cycle
 6248 0afb 25       		.uleb128 0x25
 6249 0afc A8060000 		.4byte	.LASF154
 6250 0b00 05       		.byte	0x5
 6251 0b01 43       		.byte	0x43
 6252 0b02 C5000000 		.4byte	0xc5
 6253 0b06 05       		.uleb128 0x5
 6254 0b07 03       		.byte	0x3
 6255 0b08 00000000 		.4byte	leftSpeedLimit
 6256 0b0c 25       		.uleb128 0x25
 6257 0b0d 90030000 		.4byte	.LASF155
 6258 0b11 05       		.byte	0x5
 6259 0b12 44       		.byte	0x44
 6260 0b13 C5000000 		.4byte	0xc5
 6261 0b17 05       		.uleb128 0x5
 6262 0b18 03       		.byte	0x3
 6263 0b19 00000000 		.4byte	rightSpeedLimit
 6264 0b1d 25       		.uleb128 0x25
 6265 0b1e 26070000 		.4byte	.LASF156
 6266 0b22 05       		.byte	0x5
 6267 0b23 47       		.byte	0x47
 6268 0b24 C5000000 		.4byte	0xc5
 6269 0b28 05       		.uleb128 0x5
 6270 0b29 03       		.byte	0x3
 6271 0b2a 00000000 		.4byte	target_distance_cm
 6272 0b2e 25       		.uleb128 0x25
 6273 0b2f D7060000 		.4byte	.LASF157
 6274 0b33 05       		.byte	0x5
 6275 0b34 49       		.byte	0x49
 6276 0b35 C5000000 		.4byte	0xc5
 6277 0b39 05       		.uleb128 0x5
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 130


 6278 0b3a 03       		.byte	0x3
 6279 0b3b 00000000 		.4byte	accum_dist
 6280 0b3f 25       		.uleb128 0x25
 6281 0b40 C1000000 		.4byte	.LASF158
 6282 0b44 05       		.byte	0x5
 6283 0b45 4A       		.byte	0x4a
 6284 0b46 C5000000 		.4byte	0xc5
 6285 0b4a 05       		.uleb128 0x5
 6286 0b4b 03       		.byte	0x3
 6287 0b4c 00000000 		.4byte	target_distance_quad
 6288 0b50 25       		.uleb128 0x25
 6289 0b51 1A070000 		.4byte	.LASF159
 6290 0b55 05       		.byte	0x5
 6291 0b56 4B       		.byte	0x4b
 6292 0b57 D1000000 		.4byte	0xd1
 6293 0b5b 05       		.uleb128 0x5
 6294 0b5c 03       		.byte	0x3
 6295 0b5d 00000000 		.4byte	quad_per_cm
 6296 0b61 25       		.uleb128 0x25
 6297 0b62 29040000 		.4byte	.LASF160
 6298 0b66 05       		.byte	0x5
 6299 0b67 4E       		.byte	0x4e
 6300 0b68 95000000 		.4byte	0x95
 6301 0b6c 05       		.uleb128 0x5
 6302 0b6d 03       		.byte	0x3
 6303 0b6e 00000000 		.4byte	initial_pos_valid
 6304 0b72 25       		.uleb128 0x25
 6305 0b73 14090000 		.4byte	.LASF161
 6306 0b77 05       		.byte	0x5
 6307 0b78 4F       		.byte	0x4f
 6308 0b79 C5000000 		.4byte	0xc5
 6309 0b7d 05       		.uleb128 0x5
 6310 0b7e 03       		.byte	0x3
 6311 0b7f 00000000 		.4byte	initial_x_pos
 6312 0b83 25       		.uleb128 0x25
 6313 0b84 0A060000 		.4byte	.LASF162
 6314 0b88 05       		.byte	0x5
 6315 0b89 50       		.byte	0x50
 6316 0b8a C5000000 		.4byte	0xc5
 6317 0b8e 05       		.uleb128 0x5
 6318 0b8f 03       		.byte	0x3
 6319 0b90 00000000 		.4byte	initial_y_pos
 6320 0b94 25       		.uleb128 0x25
 6321 0b95 BE070000 		.4byte	.LASF163
 6322 0b99 05       		.byte	0x5
 6323 0b9a 53       		.byte	0x53
 6324 0b9b 95000000 		.4byte	0x95
 6325 0b9f 05       		.uleb128 0x5
 6326 0ba0 03       		.byte	0x3
 6327 0ba1 00000000 		.4byte	brakeFlag
 6328 0ba5 25       		.uleb128 0x25
 6329 0ba6 AA020000 		.4byte	.LASF164
 6330 0baa 05       		.byte	0x5
 6331 0bab 54       		.byte	0x54
 6332 0bac 95000000 		.4byte	0x95
 6333 0bb0 05       		.uleb128 0x5
 6334 0bb1 03       		.byte	0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 131


 6335 0bb2 00000000 		.4byte	portOpen
 6336 0bb6 25       		.uleb128 0x25
 6337 0bb7 5C000000 		.4byte	.LASF165
 6338 0bbb 05       		.byte	0x5
 6339 0bbc 57       		.byte	0x57
 6340 0bbd C5000000 		.4byte	0xc5
 6341 0bc1 05       		.uleb128 0x5
 6342 0bc2 03       		.byte	0x3
 6343 0bc3 00000000 		.4byte	prevVoltage
 6344 0bc7 25       		.uleb128 0x25
 6345 0bc8 DF000000 		.4byte	.LASF166
 6346 0bcc 05       		.byte	0x5
 6347 0bcd 58       		.byte	0x58
 6348 0bce C5000000 		.4byte	0xc5
 6349 0bd2 05       		.uleb128 0x5
 6350 0bd3 03       		.byte	0x3
 6351 0bd4 00000000 		.4byte	prevVoltage2
 6352 0bd8 0E       		.uleb128 0xe
 6353 0bd9 83000000 		.4byte	0x83
 6354 0bdd E80B0000 		.4byte	0xbe8
 6355 0be1 0F       		.uleb128 0xf
 6356 0be2 76000000 		.4byte	0x76
 6357 0be6 3F       		.byte	0x3f
 6358 0be7 00       		.byte	0
 6359 0be8 25       		.uleb128 0x25
 6360 0be9 F9070000 		.4byte	.LASF167
 6361 0bed 05       		.byte	0x5
 6362 0bee 5E       		.byte	0x5e
 6363 0bef D80B0000 		.4byte	0xbd8
 6364 0bf3 05       		.uleb128 0x5
 6365 0bf4 03       		.byte	0x3
 6366 0bf5 00000000 		.4byte	displaystring
 6367 0bf9 25       		.uleb128 0x25
 6368 0bfa A5070000 		.4byte	.LASF168
 6369 0bfe 05       		.byte	0x5
 6370 0bff 5F       		.byte	0x5f
 6371 0c00 D80B0000 		.4byte	0xbd8
 6372 0c04 05       		.uleb128 0x5
 6373 0c05 03       		.byte	0x3
 6374 0c06 00000000 		.4byte	line
 6375 0c0a 25       		.uleb128 0x25
 6376 0c0b 91070000 		.4byte	.LASF169
 6377 0c0f 05       		.byte	0x5
 6378 0c10 5F       		.byte	0x5f
 6379 0c11 D80B0000 		.4byte	0xbd8
 6380 0c15 05       		.uleb128 0x5
 6381 0c16 03       		.byte	0x3
 6382 0c17 00000000 		.4byte	entry
 6383 0c1b 0E       		.uleb128 0xe
 6384 0c1c 95000000 		.4byte	0x95
 6385 0c20 2B0C0000 		.4byte	0xc2b
 6386 0c24 0F       		.uleb128 0xf
 6387 0c25 76000000 		.4byte	0x76
 6388 0c29 3F       		.byte	0x3f
 6389 0c2a 00       		.byte	0
 6390 0c2b 25       		.uleb128 0x25
 6391 0c2c DD010000 		.4byte	.LASF170
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 132


 6392 0c30 05       		.byte	0x5
 6393 0c31 60       		.byte	0x60
 6394 0c32 1B0C0000 		.4byte	0xc1b
 6395 0c36 05       		.uleb128 0x5
 6396 0c37 03       		.byte	0x3
 6397 0c38 00000000 		.4byte	usbBuffer
 6398 0c3c 25       		.uleb128 0x25
 6399 0c3d 49040000 		.4byte	.LASF171
 6400 0c41 05       		.byte	0x5
 6401 0c42 75       		.byte	0x75
 6402 0c43 60010000 		.4byte	0x160
 6403 0c47 05       		.uleb128 0x5
 6404 0c48 03       		.byte	0x3
 6405 0c49 00000000 		.4byte	buffer_state
 6406 0c4d 25       		.uleb128 0x25
 6407 0c4e A1000000 		.4byte	.LASF172
 6408 0c52 05       		.byte	0x5
 6409 0c53 76       		.byte	0x76
 6410 0c54 60010000 		.4byte	0x160
 6411 0c58 05       		.uleb128 0x5
 6412 0c59 03       		.byte	0x3
 6413 0c5a 00000000 		.4byte	system_state
 6414 0c5e 25       		.uleb128 0x25
 6415 0c5f 10030000 		.4byte	.LASF173
 6416 0c63 05       		.byte	0x5
 6417 0c64 78       		.byte	0x78
 6418 0c65 E6000000 		.4byte	0xe6
 6419 0c69 05       		.uleb128 0x5
 6420 0c6a 03       		.byte	0x3
 6421 0c6b 00000000 		.4byte	prev_movement_state
 6422 0c6f 25       		.uleb128 0x25
 6423 0c70 91010000 		.4byte	.LASF174
 6424 0c74 05       		.byte	0x5
 6425 0c75 79       		.byte	0x79
 6426 0c76 E6000000 		.4byte	0xe6
 6427 0c7a 05       		.uleb128 0x5
 6428 0c7b 03       		.byte	0x3
 6429 0c7c 00000000 		.4byte	movement_state
 6430 0c80 25       		.uleb128 0x25
 6431 0c81 86000000 		.4byte	.LASF175
 6432 0c85 05       		.byte	0x5
 6433 0c86 7A       		.byte	0x7a
 6434 0c87 23010000 		.4byte	0x123
 6435 0c8b 05       		.uleb128 0x5
 6436 0c8c 03       		.byte	0x3
 6437 0c8d 00000000 		.4byte	track_mode
 6438 0c91 25       		.uleb128 0x25
 6439 0c92 F0020000 		.4byte	.LASF176
 6440 0c96 05       		.byte	0x5
 6441 0c97 7C       		.byte	0x7c
 6442 0c98 95000000 		.4byte	0x95
 6443 0c9c 05       		.uleb128 0x5
 6444 0c9d 03       		.byte	0x3
 6445 0c9e 00000000 		.4byte	byteCount
 6446 0ca2 0E       		.uleb128 0xe
 6447 0ca3 83000000 		.4byte	0x83
 6448 0ca7 B20C0000 		.4byte	0xcb2
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 133


 6449 0cab 0F       		.uleb128 0xf
 6450 0cac 76000000 		.4byte	0x76
 6451 0cb0 01       		.byte	0x1
 6452 0cb1 00       		.byte	0
 6453 0cb2 25       		.uleb128 0x25
 6454 0cb3 68070000 		.4byte	.LASF177
 6455 0cb7 05       		.byte	0x5
 6456 0cb8 7D       		.byte	0x7d
 6457 0cb9 A20C0000 		.4byte	0xca2
 6458 0cbd 05       		.uleb128 0x5
 6459 0cbe 03       		.byte	0x3
 6460 0cbf 00000000 		.4byte	packet
 6461 0cc3 25       		.uleb128 0x25
 6462 0cc4 54010000 		.4byte	.LASF178
 6463 0cc8 05       		.byte	0x5
 6464 0cc9 81       		.byte	0x81
 6465 0cca D8000000 		.4byte	0xd8
 6466 0cce 05       		.uleb128 0x5
 6467 0ccf 03       		.byte	0x3
 6468 0cd0 00000000 		.4byte	speed
 6469 0cd4 25       		.uleb128 0x25
 6470 0cd5 B9030000 		.4byte	.LASF179
 6471 0cd9 01       		.byte	0x1
 6472 0cda 2B       		.byte	0x2b
 6473 0cdb A1000000 		.4byte	0xa1
 6474 0cdf 05       		.uleb128 0x5
 6475 0ce0 03       		.byte	0x3
 6476 0ce1 00000000 		.4byte	instructionCount
 6477 0ce5 25       		.uleb128 0x25
 6478 0ce6 EC000000 		.4byte	.LASF180
 6479 0cea 01       		.byte	0x1
 6480 0ceb 2C       		.byte	0x2c
 6481 0cec 95000000 		.4byte	0x95
 6482 0cf0 05       		.uleb128 0x5
 6483 0cf1 03       		.byte	0x3
 6484 0cf2 00000000 		.4byte	sensorsDisabled
 6485 0cf6 0E       		.uleb128 0xe
 6486 0cf7 95000000 		.4byte	0x95
 6487 0cfb 0C0D0000 		.4byte	0xd0c
 6488 0cff 0F       		.uleb128 0xf
 6489 0d00 76000000 		.4byte	0x76
 6490 0d04 0E       		.byte	0xe
 6491 0d05 0F       		.uleb128 0xf
 6492 0d06 76000000 		.4byte	0x76
 6493 0d0a 12       		.byte	0x12
 6494 0d0b 00       		.byte	0
 6495 0d0c 24       		.uleb128 0x24
 6496 0d0d 6D617000 		.ascii	"map\000"
 6497 0d11 01       		.byte	0x1
 6498 0d12 35       		.byte	0x35
 6499 0d13 F60C0000 		.4byte	0xcf6
 6500 0d17 05       		.uleb128 0x5
 6501 0d18 03       		.byte	0x3
 6502 0d19 00000000 		.4byte	map
 6503 0d1d 0E       		.uleb128 0xe
 6504 0d1e 95000000 		.4byte	0x95
 6505 0d22 330D0000 		.4byte	0xd33
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 134


 6506 0d26 0F       		.uleb128 0xf
 6507 0d27 76000000 		.4byte	0x76
 6508 0d2b 05       		.byte	0x5
 6509 0d2c 0F       		.uleb128 0xf
 6510 0d2d 76000000 		.4byte	0x76
 6511 0d31 01       		.byte	0x1
 6512 0d32 00       		.byte	0
 6513 0d33 25       		.uleb128 0x25
 6514 0d34 18050000 		.4byte	.LASF181
 6515 0d38 01       		.byte	0x1
 6516 0d39 48       		.byte	0x48
 6517 0d3a 1D0D0000 		.4byte	0xd1d
 6518 0d3e 05       		.uleb128 0x5
 6519 0d3f 03       		.byte	0x3
 6520 0d40 00000000 		.4byte	food_list
 6521 0d44 0E       		.uleb128 0xe
 6522 0d45 95000000 		.4byte	0x95
 6523 0d49 5B0D0000 		.4byte	0xd5b
 6524 0d4d 26       		.uleb128 0x26
 6525 0d4e 76000000 		.4byte	0x76
 6526 0d52 1F03     		.2byte	0x31f
 6527 0d54 0F       		.uleb128 0xf
 6528 0d55 76000000 		.4byte	0x76
 6529 0d59 02       		.byte	0x2
 6530 0d5a 00       		.byte	0
 6531 0d5b 25       		.uleb128 0x25
 6532 0d5c F1030000 		.4byte	.LASF182
 6533 0d60 01       		.byte	0x1
 6534 0d61 30       		.byte	0x30
 6535 0d62 440D0000 		.4byte	0xd44
 6536 0d66 05       		.uleb128 0x5
 6537 0d67 03       		.byte	0x3
 6538 0d68 00000000 		.4byte	path
 6539 0d6c 0E       		.uleb128 0xe
 6540 0d6d 95000000 		.4byte	0x95
 6541 0d71 7C0D0000 		.4byte	0xd7c
 6542 0d75 0F       		.uleb128 0xf
 6543 0d76 76000000 		.4byte	0x76
 6544 0d7a 01       		.byte	0x1
 6545 0d7b 00       		.byte	0
 6546 0d7c 25       		.uleb128 0x25
 6547 0d7d 7A050000 		.4byte	.LASF183
 6548 0d81 01       		.byte	0x1
 6549 0d82 31       		.byte	0x31
 6550 0d83 6C0D0000 		.4byte	0xd6c
 6551 0d87 05       		.uleb128 0x5
 6552 0d88 03       		.byte	0x3
 6553 0d89 00000000 		.4byte	start
 6554 0d8d 25       		.uleb128 0x25
 6555 0d8e 29080000 		.4byte	.LASF184
 6556 0d92 01       		.byte	0x1
 6557 0d93 32       		.byte	0x32
 6558 0d94 6C0D0000 		.4byte	0xd6c
 6559 0d98 05       		.uleb128 0x5
 6560 0d99 03       		.byte	0x3
 6561 0d9a 00000000 		.4byte	destination
 6562 0d9e 25       		.uleb128 0x25
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 135


 6563 0d9f 39010000 		.4byte	.LASF185
 6564 0da3 01       		.byte	0x1
 6565 0da4 2E       		.byte	0x2e
 6566 0da5 95000000 		.4byte	0x95
 6567 0da9 05       		.uleb128 0x5
 6568 0daa 03       		.byte	0x3
 6569 0dab 00000000 		.4byte	robot_direction
 6570 0daf 25       		.uleb128 0x25
 6571 0db0 0A000000 		.4byte	.LASF186
 6572 0db4 07       		.byte	0x7
 6573 0db5 22       		.byte	0x22
 6574 0db6 95000000 		.4byte	0x95
 6575 0dba 05       		.uleb128 0x5
 6576 0dbb 03       		.byte	0x3
 6577 0dbc 00000000 		.4byte	tracked_direction
 6578 0dc0 25       		.uleb128 0x25
 6579 0dc1 85070000 		.4byte	.LASF187
 6580 0dc5 01       		.byte	0x1
 6581 0dc6 49       		.byte	0x49
 6582 0dc7 95000000 		.4byte	0x95
 6583 0dcb 05       		.uleb128 0x5
 6584 0dcc 03       		.byte	0x3
 6585 0dcd 00000000 		.4byte	food_length
 6586 0dd1 0E       		.uleb128 0xe
 6587 0dd2 83000000 		.4byte	0x83
 6588 0dd6 E20D0000 		.4byte	0xde2
 6589 0dda 26       		.uleb128 0x26
 6590 0ddb 76000000 		.4byte	0x76
 6591 0ddf 1F03     		.2byte	0x31f
 6592 0de1 00       		.byte	0
 6593 0de2 25       		.uleb128 0x25
 6594 0de3 49050000 		.4byte	.LASF188
 6595 0de7 01       		.byte	0x1
 6596 0de8 2A       		.byte	0x2a
 6597 0de9 D10D0000 		.4byte	0xdd1
 6598 0ded 05       		.uleb128 0x5
 6599 0dee 03       		.byte	0x3
 6600 0def 00000000 		.4byte	instructions
 6601 0df3 27       		.uleb128 0x27
 6602 0df4 AB030000 		.4byte	.LASF189
 6603 0df8 01       		.byte	0x1
 6604 0df9 8502     		.2byte	0x285
 6605 0dfb 95000000 		.4byte	0x95
 6606 0dff 05       		.uleb128 0x5
 6607 0e00 03       		.byte	0x3
 6608 0e01 00000000 		.4byte	hardTurnCount
 6609 0e05 00       		.byte	0
 6610              		.section	.debug_abbrev,"",%progbits
 6611              	.Ldebug_abbrev0:
 6612 0000 01       		.uleb128 0x1
 6613 0001 11       		.uleb128 0x11
 6614 0002 01       		.byte	0x1
 6615 0003 25       		.uleb128 0x25
 6616 0004 0E       		.uleb128 0xe
 6617 0005 13       		.uleb128 0x13
 6618 0006 0B       		.uleb128 0xb
 6619 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 136


 6620 0008 0E       		.uleb128 0xe
 6621 0009 1B       		.uleb128 0x1b
 6622 000a 0E       		.uleb128 0xe
 6623 000b 55       		.uleb128 0x55
 6624 000c 17       		.uleb128 0x17
 6625 000d 11       		.uleb128 0x11
 6626 000e 01       		.uleb128 0x1
 6627 000f 10       		.uleb128 0x10
 6628 0010 17       		.uleb128 0x17
 6629 0011 00       		.byte	0
 6630 0012 00       		.byte	0
 6631 0013 02       		.uleb128 0x2
 6632 0014 24       		.uleb128 0x24
 6633 0015 00       		.byte	0
 6634 0016 0B       		.uleb128 0xb
 6635 0017 0B       		.uleb128 0xb
 6636 0018 3E       		.uleb128 0x3e
 6637 0019 0B       		.uleb128 0xb
 6638 001a 03       		.uleb128 0x3
 6639 001b 0E       		.uleb128 0xe
 6640 001c 00       		.byte	0
 6641 001d 00       		.byte	0
 6642 001e 03       		.uleb128 0x3
 6643 001f 16       		.uleb128 0x16
 6644 0020 00       		.byte	0
 6645 0021 03       		.uleb128 0x3
 6646 0022 0E       		.uleb128 0xe
 6647 0023 3A       		.uleb128 0x3a
 6648 0024 0B       		.uleb128 0xb
 6649 0025 3B       		.uleb128 0x3b
 6650 0026 0B       		.uleb128 0xb
 6651 0027 49       		.uleb128 0x49
 6652 0028 13       		.uleb128 0x13
 6653 0029 00       		.byte	0
 6654 002a 00       		.byte	0
 6655 002b 04       		.uleb128 0x4
 6656 002c 24       		.uleb128 0x24
 6657 002d 00       		.byte	0
 6658 002e 0B       		.uleb128 0xb
 6659 002f 0B       		.uleb128 0xb
 6660 0030 3E       		.uleb128 0x3e
 6661 0031 0B       		.uleb128 0xb
 6662 0032 03       		.uleb128 0x3
 6663 0033 08       		.uleb128 0x8
 6664 0034 00       		.byte	0
 6665 0035 00       		.byte	0
 6666 0036 05       		.uleb128 0x5
 6667 0037 0F       		.uleb128 0xf
 6668 0038 00       		.byte	0
 6669 0039 0B       		.uleb128 0xb
 6670 003a 0B       		.uleb128 0xb
 6671 003b 49       		.uleb128 0x49
 6672 003c 13       		.uleb128 0x13
 6673 003d 00       		.byte	0
 6674 003e 00       		.byte	0
 6675 003f 06       		.uleb128 0x6
 6676 0040 16       		.uleb128 0x16
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 137


 6677 0041 00       		.byte	0
 6678 0042 03       		.uleb128 0x3
 6679 0043 0E       		.uleb128 0xe
 6680 0044 3A       		.uleb128 0x3a
 6681 0045 0B       		.uleb128 0xb
 6682 0046 3B       		.uleb128 0x3b
 6683 0047 05       		.uleb128 0x5
 6684 0048 49       		.uleb128 0x49
 6685 0049 13       		.uleb128 0x13
 6686 004a 00       		.byte	0
 6687 004b 00       		.byte	0
 6688 004c 07       		.uleb128 0x7
 6689 004d 04       		.uleb128 0x4
 6690 004e 01       		.byte	0x1
 6691 004f 03       		.uleb128 0x3
 6692 0050 0E       		.uleb128 0xe
 6693 0051 0B       		.uleb128 0xb
 6694 0052 0B       		.uleb128 0xb
 6695 0053 3A       		.uleb128 0x3a
 6696 0054 0B       		.uleb128 0xb
 6697 0055 3B       		.uleb128 0x3b
 6698 0056 0B       		.uleb128 0xb
 6699 0057 01       		.uleb128 0x1
 6700 0058 13       		.uleb128 0x13
 6701 0059 00       		.byte	0
 6702 005a 00       		.byte	0
 6703 005b 08       		.uleb128 0x8
 6704 005c 28       		.uleb128 0x28
 6705 005d 00       		.byte	0
 6706 005e 03       		.uleb128 0x3
 6707 005f 0E       		.uleb128 0xe
 6708 0060 1C       		.uleb128 0x1c
 6709 0061 0D       		.uleb128 0xd
 6710 0062 00       		.byte	0
 6711 0063 00       		.byte	0
 6712 0064 09       		.uleb128 0x9
 6713 0065 13       		.uleb128 0x13
 6714 0066 01       		.byte	0x1
 6715 0067 03       		.uleb128 0x3
 6716 0068 0E       		.uleb128 0xe
 6717 0069 0B       		.uleb128 0xb
 6718 006a 0B       		.uleb128 0xb
 6719 006b 3A       		.uleb128 0x3a
 6720 006c 0B       		.uleb128 0xb
 6721 006d 3B       		.uleb128 0x3b
 6722 006e 0B       		.uleb128 0xb
 6723 006f 01       		.uleb128 0x1
 6724 0070 13       		.uleb128 0x13
 6725 0071 00       		.byte	0
 6726 0072 00       		.byte	0
 6727 0073 0A       		.uleb128 0xa
 6728 0074 0D       		.uleb128 0xd
 6729 0075 00       		.byte	0
 6730 0076 03       		.uleb128 0x3
 6731 0077 0E       		.uleb128 0xe
 6732 0078 3A       		.uleb128 0x3a
 6733 0079 0B       		.uleb128 0xb
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 138


 6734 007a 3B       		.uleb128 0x3b
 6735 007b 0B       		.uleb128 0xb
 6736 007c 49       		.uleb128 0x49
 6737 007d 13       		.uleb128 0x13
 6738 007e 38       		.uleb128 0x38
 6739 007f 0B       		.uleb128 0xb
 6740 0080 00       		.byte	0
 6741 0081 00       		.byte	0
 6742 0082 0B       		.uleb128 0xb
 6743 0083 2E       		.uleb128 0x2e
 6744 0084 01       		.byte	0x1
 6745 0085 3F       		.uleb128 0x3f
 6746 0086 19       		.uleb128 0x19
 6747 0087 03       		.uleb128 0x3
 6748 0088 0E       		.uleb128 0xe
 6749 0089 3A       		.uleb128 0x3a
 6750 008a 0B       		.uleb128 0xb
 6751 008b 3B       		.uleb128 0x3b
 6752 008c 0B       		.uleb128 0xb
 6753 008d 11       		.uleb128 0x11
 6754 008e 01       		.uleb128 0x1
 6755 008f 12       		.uleb128 0x12
 6756 0090 06       		.uleb128 0x6
 6757 0091 40       		.uleb128 0x40
 6758 0092 18       		.uleb128 0x18
 6759 0093 9742     		.uleb128 0x2117
 6760 0095 19       		.uleb128 0x19
 6761 0096 01       		.uleb128 0x1
 6762 0097 13       		.uleb128 0x13
 6763 0098 00       		.byte	0
 6764 0099 00       		.byte	0
 6765 009a 0C       		.uleb128 0xc
 6766 009b 0B       		.uleb128 0xb
 6767 009c 01       		.byte	0x1
 6768 009d 11       		.uleb128 0x11
 6769 009e 01       		.uleb128 0x1
 6770 009f 12       		.uleb128 0x12
 6771 00a0 06       		.uleb128 0x6
 6772 00a1 00       		.byte	0
 6773 00a2 00       		.byte	0
 6774 00a3 0D       		.uleb128 0xd
 6775 00a4 34       		.uleb128 0x34
 6776 00a5 00       		.byte	0
 6777 00a6 03       		.uleb128 0x3
 6778 00a7 0E       		.uleb128 0xe
 6779 00a8 3A       		.uleb128 0x3a
 6780 00a9 0B       		.uleb128 0xb
 6781 00aa 3B       		.uleb128 0x3b
 6782 00ab 0B       		.uleb128 0xb
 6783 00ac 49       		.uleb128 0x49
 6784 00ad 13       		.uleb128 0x13
 6785 00ae 02       		.uleb128 0x2
 6786 00af 18       		.uleb128 0x18
 6787 00b0 00       		.byte	0
 6788 00b1 00       		.byte	0
 6789 00b2 0E       		.uleb128 0xe
 6790 00b3 01       		.uleb128 0x1
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 139


 6791 00b4 01       		.byte	0x1
 6792 00b5 49       		.uleb128 0x49
 6793 00b6 13       		.uleb128 0x13
 6794 00b7 01       		.uleb128 0x1
 6795 00b8 13       		.uleb128 0x13
 6796 00b9 00       		.byte	0
 6797 00ba 00       		.byte	0
 6798 00bb 0F       		.uleb128 0xf
 6799 00bc 21       		.uleb128 0x21
 6800 00bd 00       		.byte	0
 6801 00be 49       		.uleb128 0x49
 6802 00bf 13       		.uleb128 0x13
 6803 00c0 2F       		.uleb128 0x2f
 6804 00c1 0B       		.uleb128 0xb
 6805 00c2 00       		.byte	0
 6806 00c3 00       		.byte	0
 6807 00c4 10       		.uleb128 0x10
 6808 00c5 2E       		.uleb128 0x2e
 6809 00c6 01       		.byte	0x1
 6810 00c7 3F       		.uleb128 0x3f
 6811 00c8 19       		.uleb128 0x19
 6812 00c9 03       		.uleb128 0x3
 6813 00ca 0E       		.uleb128 0xe
 6814 00cb 3A       		.uleb128 0x3a
 6815 00cc 0B       		.uleb128 0xb
 6816 00cd 3B       		.uleb128 0x3b
 6817 00ce 0B       		.uleb128 0xb
 6818 00cf 27       		.uleb128 0x27
 6819 00d0 19       		.uleb128 0x19
 6820 00d1 11       		.uleb128 0x11
 6821 00d2 01       		.uleb128 0x1
 6822 00d3 12       		.uleb128 0x12
 6823 00d4 06       		.uleb128 0x6
 6824 00d5 40       		.uleb128 0x40
 6825 00d6 18       		.uleb128 0x18
 6826 00d7 9642     		.uleb128 0x2116
 6827 00d9 19       		.uleb128 0x19
 6828 00da 01       		.uleb128 0x1
 6829 00db 13       		.uleb128 0x13
 6830 00dc 00       		.byte	0
 6831 00dd 00       		.byte	0
 6832 00de 11       		.uleb128 0x11
 6833 00df 05       		.uleb128 0x5
 6834 00e0 00       		.byte	0
 6835 00e1 03       		.uleb128 0x3
 6836 00e2 08       		.uleb128 0x8
 6837 00e3 3A       		.uleb128 0x3a
 6838 00e4 0B       		.uleb128 0xb
 6839 00e5 3B       		.uleb128 0x3b
 6840 00e6 0B       		.uleb128 0xb
 6841 00e7 49       		.uleb128 0x49
 6842 00e8 13       		.uleb128 0x13
 6843 00e9 02       		.uleb128 0x2
 6844 00ea 18       		.uleb128 0x18
 6845 00eb 00       		.byte	0
 6846 00ec 00       		.byte	0
 6847 00ed 12       		.uleb128 0x12
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 140


 6848 00ee 2E       		.uleb128 0x2e
 6849 00ef 01       		.byte	0x1
 6850 00f0 3F       		.uleb128 0x3f
 6851 00f1 19       		.uleb128 0x19
 6852 00f2 03       		.uleb128 0x3
 6853 00f3 0E       		.uleb128 0xe
 6854 00f4 3A       		.uleb128 0x3a
 6855 00f5 0B       		.uleb128 0xb
 6856 00f6 3B       		.uleb128 0x3b
 6857 00f7 0B       		.uleb128 0xb
 6858 00f8 11       		.uleb128 0x11
 6859 00f9 01       		.uleb128 0x1
 6860 00fa 12       		.uleb128 0x12
 6861 00fb 06       		.uleb128 0x6
 6862 00fc 40       		.uleb128 0x40
 6863 00fd 18       		.uleb128 0x18
 6864 00fe 9642     		.uleb128 0x2116
 6865 0100 19       		.uleb128 0x19
 6866 0101 01       		.uleb128 0x1
 6867 0102 13       		.uleb128 0x13
 6868 0103 00       		.byte	0
 6869 0104 00       		.byte	0
 6870 0105 13       		.uleb128 0x13
 6871 0106 34       		.uleb128 0x34
 6872 0107 00       		.byte	0
 6873 0108 03       		.uleb128 0x3
 6874 0109 08       		.uleb128 0x8
 6875 010a 3A       		.uleb128 0x3a
 6876 010b 0B       		.uleb128 0xb
 6877 010c 3B       		.uleb128 0x3b
 6878 010d 0B       		.uleb128 0xb
 6879 010e 49       		.uleb128 0x49
 6880 010f 13       		.uleb128 0x13
 6881 0110 02       		.uleb128 0x2
 6882 0111 18       		.uleb128 0x18
 6883 0112 00       		.byte	0
 6884 0113 00       		.byte	0
 6885 0114 14       		.uleb128 0x14
 6886 0115 05       		.uleb128 0x5
 6887 0116 00       		.byte	0
 6888 0117 03       		.uleb128 0x3
 6889 0118 0E       		.uleb128 0xe
 6890 0119 3A       		.uleb128 0x3a
 6891 011a 0B       		.uleb128 0xb
 6892 011b 3B       		.uleb128 0x3b
 6893 011c 0B       		.uleb128 0xb
 6894 011d 49       		.uleb128 0x49
 6895 011e 13       		.uleb128 0x13
 6896 011f 02       		.uleb128 0x2
 6897 0120 18       		.uleb128 0x18
 6898 0121 00       		.byte	0
 6899 0122 00       		.byte	0
 6900 0123 15       		.uleb128 0x15
 6901 0124 2E       		.uleb128 0x2e
 6902 0125 00       		.byte	0
 6903 0126 3F       		.uleb128 0x3f
 6904 0127 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 141


 6905 0128 03       		.uleb128 0x3
 6906 0129 0E       		.uleb128 0xe
 6907 012a 3A       		.uleb128 0x3a
 6908 012b 0B       		.uleb128 0xb
 6909 012c 3B       		.uleb128 0x3b
 6910 012d 0B       		.uleb128 0xb
 6911 012e 11       		.uleb128 0x11
 6912 012f 01       		.uleb128 0x1
 6913 0130 12       		.uleb128 0x12
 6914 0131 06       		.uleb128 0x6
 6915 0132 40       		.uleb128 0x40
 6916 0133 18       		.uleb128 0x18
 6917 0134 9642     		.uleb128 0x2116
 6918 0136 19       		.uleb128 0x19
 6919 0137 00       		.byte	0
 6920 0138 00       		.byte	0
 6921 0139 16       		.uleb128 0x16
 6922 013a 2E       		.uleb128 0x2e
 6923 013b 00       		.byte	0
 6924 013c 3F       		.uleb128 0x3f
 6925 013d 19       		.uleb128 0x19
 6926 013e 03       		.uleb128 0x3
 6927 013f 0E       		.uleb128 0xe
 6928 0140 3A       		.uleb128 0x3a
 6929 0141 0B       		.uleb128 0xb
 6930 0142 3B       		.uleb128 0x3b
 6931 0143 05       		.uleb128 0x5
 6932 0144 11       		.uleb128 0x11
 6933 0145 01       		.uleb128 0x1
 6934 0146 12       		.uleb128 0x12
 6935 0147 06       		.uleb128 0x6
 6936 0148 40       		.uleb128 0x40
 6937 0149 18       		.uleb128 0x18
 6938 014a 9642     		.uleb128 0x2116
 6939 014c 19       		.uleb128 0x19
 6940 014d 00       		.byte	0
 6941 014e 00       		.byte	0
 6942 014f 17       		.uleb128 0x17
 6943 0150 2E       		.uleb128 0x2e
 6944 0151 00       		.byte	0
 6945 0152 3F       		.uleb128 0x3f
 6946 0153 19       		.uleb128 0x19
 6947 0154 03       		.uleb128 0x3
 6948 0155 0E       		.uleb128 0xe
 6949 0156 3A       		.uleb128 0x3a
 6950 0157 0B       		.uleb128 0xb
 6951 0158 3B       		.uleb128 0x3b
 6952 0159 05       		.uleb128 0x5
 6953 015a 11       		.uleb128 0x11
 6954 015b 01       		.uleb128 0x1
 6955 015c 12       		.uleb128 0x12
 6956 015d 06       		.uleb128 0x6
 6957 015e 40       		.uleb128 0x40
 6958 015f 18       		.uleb128 0x18
 6959 0160 9742     		.uleb128 0x2117
 6960 0162 19       		.uleb128 0x19
 6961 0163 00       		.byte	0
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 142


 6962 0164 00       		.byte	0
 6963 0165 18       		.uleb128 0x18
 6964 0166 2E       		.uleb128 0x2e
 6965 0167 01       		.byte	0x1
 6966 0168 3F       		.uleb128 0x3f
 6967 0169 19       		.uleb128 0x19
 6968 016a 03       		.uleb128 0x3
 6969 016b 0E       		.uleb128 0xe
 6970 016c 3A       		.uleb128 0x3a
 6971 016d 0B       		.uleb128 0xb
 6972 016e 3B       		.uleb128 0x3b
 6973 016f 05       		.uleb128 0x5
 6974 0170 27       		.uleb128 0x27
 6975 0171 19       		.uleb128 0x19
 6976 0172 11       		.uleb128 0x11
 6977 0173 01       		.uleb128 0x1
 6978 0174 12       		.uleb128 0x12
 6979 0175 06       		.uleb128 0x6
 6980 0176 40       		.uleb128 0x40
 6981 0177 18       		.uleb128 0x18
 6982 0178 9642     		.uleb128 0x2116
 6983 017a 19       		.uleb128 0x19
 6984 017b 01       		.uleb128 0x1
 6985 017c 13       		.uleb128 0x13
 6986 017d 00       		.byte	0
 6987 017e 00       		.byte	0
 6988 017f 19       		.uleb128 0x19
 6989 0180 34       		.uleb128 0x34
 6990 0181 00       		.byte	0
 6991 0182 03       		.uleb128 0x3
 6992 0183 0E       		.uleb128 0xe
 6993 0184 3A       		.uleb128 0x3a
 6994 0185 0B       		.uleb128 0xb
 6995 0186 3B       		.uleb128 0x3b
 6996 0187 05       		.uleb128 0x5
 6997 0188 49       		.uleb128 0x49
 6998 0189 13       		.uleb128 0x13
 6999 018a 02       		.uleb128 0x2
 7000 018b 18       		.uleb128 0x18
 7001 018c 00       		.byte	0
 7002 018d 00       		.byte	0
 7003 018e 1A       		.uleb128 0x1a
 7004 018f 34       		.uleb128 0x34
 7005 0190 00       		.byte	0
 7006 0191 03       		.uleb128 0x3
 7007 0192 08       		.uleb128 0x8
 7008 0193 3A       		.uleb128 0x3a
 7009 0194 0B       		.uleb128 0xb
 7010 0195 3B       		.uleb128 0x3b
 7011 0196 05       		.uleb128 0x5
 7012 0197 49       		.uleb128 0x49
 7013 0198 13       		.uleb128 0x13
 7014 0199 02       		.uleb128 0x2
 7015 019a 18       		.uleb128 0x18
 7016 019b 00       		.byte	0
 7017 019c 00       		.byte	0
 7018 019d 1B       		.uleb128 0x1b
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 143


 7019 019e 2E       		.uleb128 0x2e
 7020 019f 00       		.byte	0
 7021 01a0 3F       		.uleb128 0x3f
 7022 01a1 19       		.uleb128 0x19
 7023 01a2 03       		.uleb128 0x3
 7024 01a3 0E       		.uleb128 0xe
 7025 01a4 3A       		.uleb128 0x3a
 7026 01a5 0B       		.uleb128 0xb
 7027 01a6 3B       		.uleb128 0x3b
 7028 01a7 05       		.uleb128 0x5
 7029 01a8 27       		.uleb128 0x27
 7030 01a9 19       		.uleb128 0x19
 7031 01aa 11       		.uleb128 0x11
 7032 01ab 01       		.uleb128 0x1
 7033 01ac 12       		.uleb128 0x12
 7034 01ad 06       		.uleb128 0x6
 7035 01ae 40       		.uleb128 0x40
 7036 01af 18       		.uleb128 0x18
 7037 01b0 9742     		.uleb128 0x2117
 7038 01b2 19       		.uleb128 0x19
 7039 01b3 00       		.byte	0
 7040 01b4 00       		.byte	0
 7041 01b5 1C       		.uleb128 0x1c
 7042 01b6 2E       		.uleb128 0x2e
 7043 01b7 00       		.byte	0
 7044 01b8 3F       		.uleb128 0x3f
 7045 01b9 19       		.uleb128 0x19
 7046 01ba 03       		.uleb128 0x3
 7047 01bb 0E       		.uleb128 0xe
 7048 01bc 3A       		.uleb128 0x3a
 7049 01bd 0B       		.uleb128 0xb
 7050 01be 3B       		.uleb128 0x3b
 7051 01bf 05       		.uleb128 0x5
 7052 01c0 27       		.uleb128 0x27
 7053 01c1 19       		.uleb128 0x19
 7054 01c2 11       		.uleb128 0x11
 7055 01c3 01       		.uleb128 0x1
 7056 01c4 12       		.uleb128 0x12
 7057 01c5 06       		.uleb128 0x6
 7058 01c6 40       		.uleb128 0x40
 7059 01c7 18       		.uleb128 0x18
 7060 01c8 9642     		.uleb128 0x2116
 7061 01ca 19       		.uleb128 0x19
 7062 01cb 00       		.byte	0
 7063 01cc 00       		.byte	0
 7064 01cd 1D       		.uleb128 0x1d
 7065 01ce 0B       		.uleb128 0xb
 7066 01cf 01       		.byte	0x1
 7067 01d0 11       		.uleb128 0x11
 7068 01d1 01       		.uleb128 0x1
 7069 01d2 12       		.uleb128 0x12
 7070 01d3 06       		.uleb128 0x6
 7071 01d4 01       		.uleb128 0x1
 7072 01d5 13       		.uleb128 0x13
 7073 01d6 00       		.byte	0
 7074 01d7 00       		.byte	0
 7075 01d8 1E       		.uleb128 0x1e
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 144


 7076 01d9 2E       		.uleb128 0x2e
 7077 01da 01       		.byte	0x1
 7078 01db 3F       		.uleb128 0x3f
 7079 01dc 19       		.uleb128 0x19
 7080 01dd 03       		.uleb128 0x3
 7081 01de 0E       		.uleb128 0xe
 7082 01df 3A       		.uleb128 0x3a
 7083 01e0 0B       		.uleb128 0xb
 7084 01e1 3B       		.uleb128 0x3b
 7085 01e2 05       		.uleb128 0x5
 7086 01e3 11       		.uleb128 0x11
 7087 01e4 01       		.uleb128 0x1
 7088 01e5 12       		.uleb128 0x12
 7089 01e6 06       		.uleb128 0x6
 7090 01e7 40       		.uleb128 0x40
 7091 01e8 18       		.uleb128 0x18
 7092 01e9 9642     		.uleb128 0x2116
 7093 01eb 19       		.uleb128 0x19
 7094 01ec 01       		.uleb128 0x1
 7095 01ed 13       		.uleb128 0x13
 7096 01ee 00       		.byte	0
 7097 01ef 00       		.byte	0
 7098 01f0 1F       		.uleb128 0x1f
 7099 01f1 05       		.uleb128 0x5
 7100 01f2 00       		.byte	0
 7101 01f3 03       		.uleb128 0x3
 7102 01f4 0E       		.uleb128 0xe
 7103 01f5 3A       		.uleb128 0x3a
 7104 01f6 0B       		.uleb128 0xb
 7105 01f7 3B       		.uleb128 0x3b
 7106 01f8 05       		.uleb128 0x5
 7107 01f9 49       		.uleb128 0x49
 7108 01fa 13       		.uleb128 0x13
 7109 01fb 02       		.uleb128 0x2
 7110 01fc 18       		.uleb128 0x18
 7111 01fd 00       		.byte	0
 7112 01fe 00       		.byte	0
 7113 01ff 20       		.uleb128 0x20
 7114 0200 2E       		.uleb128 0x2e
 7115 0201 01       		.byte	0x1
 7116 0202 3F       		.uleb128 0x3f
 7117 0203 19       		.uleb128 0x19
 7118 0204 03       		.uleb128 0x3
 7119 0205 0E       		.uleb128 0xe
 7120 0206 3A       		.uleb128 0x3a
 7121 0207 0B       		.uleb128 0xb
 7122 0208 3B       		.uleb128 0x3b
 7123 0209 05       		.uleb128 0x5
 7124 020a 49       		.uleb128 0x49
 7125 020b 13       		.uleb128 0x13
 7126 020c 11       		.uleb128 0x11
 7127 020d 01       		.uleb128 0x1
 7128 020e 12       		.uleb128 0x12
 7129 020f 06       		.uleb128 0x6
 7130 0210 40       		.uleb128 0x40
 7131 0211 18       		.uleb128 0x18
 7132 0212 9642     		.uleb128 0x2116
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 145


 7133 0214 19       		.uleb128 0x19
 7134 0215 01       		.uleb128 0x1
 7135 0216 13       		.uleb128 0x13
 7136 0217 00       		.byte	0
 7137 0218 00       		.byte	0
 7138 0219 21       		.uleb128 0x21
 7139 021a 05       		.uleb128 0x5
 7140 021b 00       		.byte	0
 7141 021c 03       		.uleb128 0x3
 7142 021d 08       		.uleb128 0x8
 7143 021e 3A       		.uleb128 0x3a
 7144 021f 0B       		.uleb128 0xb
 7145 0220 3B       		.uleb128 0x3b
 7146 0221 05       		.uleb128 0x5
 7147 0222 49       		.uleb128 0x49
 7148 0223 13       		.uleb128 0x13
 7149 0224 02       		.uleb128 0x2
 7150 0225 18       		.uleb128 0x18
 7151 0226 00       		.byte	0
 7152 0227 00       		.byte	0
 7153 0228 22       		.uleb128 0x22
 7154 0229 34       		.uleb128 0x34
 7155 022a 00       		.byte	0
 7156 022b 03       		.uleb128 0x3
 7157 022c 0E       		.uleb128 0xe
 7158 022d 3A       		.uleb128 0x3a
 7159 022e 0B       		.uleb128 0xb
 7160 022f 3B       		.uleb128 0x3b
 7161 0230 05       		.uleb128 0x5
 7162 0231 49       		.uleb128 0x49
 7163 0232 13       		.uleb128 0x13
 7164 0233 3F       		.uleb128 0x3f
 7165 0234 19       		.uleb128 0x19
 7166 0235 3C       		.uleb128 0x3c
 7167 0236 19       		.uleb128 0x19
 7168 0237 00       		.byte	0
 7169 0238 00       		.byte	0
 7170 0239 23       		.uleb128 0x23
 7171 023a 35       		.uleb128 0x35
 7172 023b 00       		.byte	0
 7173 023c 49       		.uleb128 0x49
 7174 023d 13       		.uleb128 0x13
 7175 023e 00       		.byte	0
 7176 023f 00       		.byte	0
 7177 0240 24       		.uleb128 0x24
 7178 0241 34       		.uleb128 0x34
 7179 0242 00       		.byte	0
 7180 0243 03       		.uleb128 0x3
 7181 0244 08       		.uleb128 0x8
 7182 0245 3A       		.uleb128 0x3a
 7183 0246 0B       		.uleb128 0xb
 7184 0247 3B       		.uleb128 0x3b
 7185 0248 0B       		.uleb128 0xb
 7186 0249 49       		.uleb128 0x49
 7187 024a 13       		.uleb128 0x13
 7188 024b 3F       		.uleb128 0x3f
 7189 024c 19       		.uleb128 0x19
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 146


 7190 024d 02       		.uleb128 0x2
 7191 024e 18       		.uleb128 0x18
 7192 024f 00       		.byte	0
 7193 0250 00       		.byte	0
 7194 0251 25       		.uleb128 0x25
 7195 0252 34       		.uleb128 0x34
 7196 0253 00       		.byte	0
 7197 0254 03       		.uleb128 0x3
 7198 0255 0E       		.uleb128 0xe
 7199 0256 3A       		.uleb128 0x3a
 7200 0257 0B       		.uleb128 0xb
 7201 0258 3B       		.uleb128 0x3b
 7202 0259 0B       		.uleb128 0xb
 7203 025a 49       		.uleb128 0x49
 7204 025b 13       		.uleb128 0x13
 7205 025c 3F       		.uleb128 0x3f
 7206 025d 19       		.uleb128 0x19
 7207 025e 02       		.uleb128 0x2
 7208 025f 18       		.uleb128 0x18
 7209 0260 00       		.byte	0
 7210 0261 00       		.byte	0
 7211 0262 26       		.uleb128 0x26
 7212 0263 21       		.uleb128 0x21
 7213 0264 00       		.byte	0
 7214 0265 49       		.uleb128 0x49
 7215 0266 13       		.uleb128 0x13
 7216 0267 2F       		.uleb128 0x2f
 7217 0268 05       		.uleb128 0x5
 7218 0269 00       		.byte	0
 7219 026a 00       		.byte	0
 7220 026b 27       		.uleb128 0x27
 7221 026c 34       		.uleb128 0x34
 7222 026d 00       		.byte	0
 7223 026e 03       		.uleb128 0x3
 7224 026f 0E       		.uleb128 0xe
 7225 0270 3A       		.uleb128 0x3a
 7226 0271 0B       		.uleb128 0xb
 7227 0272 3B       		.uleb128 0x3b
 7228 0273 05       		.uleb128 0x5
 7229 0274 49       		.uleb128 0x49
 7230 0275 13       		.uleb128 0x13
 7231 0276 3F       		.uleb128 0x3f
 7232 0277 19       		.uleb128 0x19
 7233 0278 02       		.uleb128 0x2
 7234 0279 18       		.uleb128 0x18
 7235 027a 00       		.byte	0
 7236 027b 00       		.byte	0
 7237 027c 00       		.byte	0
 7238              		.section	.debug_aranges,"",%progbits
 7239 0000 6C010000 		.4byte	0x16c
 7240 0004 0200     		.2byte	0x2
 7241 0006 00000000 		.4byte	.Ldebug_info0
 7242 000a 04       		.byte	0x4
 7243 000b 00       		.byte	0
 7244 000c 0000     		.2byte	0
 7245 000e 0000     		.2byte	0
 7246 0010 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 147


 7247 0014 60010000 		.4byte	.LFE63-.LFB63
 7248 0018 00000000 		.4byte	.LFB64
 7249 001c 18000000 		.4byte	.LFE64-.LFB64
 7250 0020 00000000 		.4byte	.LFB65
 7251 0024 18000000 		.4byte	.LFE65-.LFB65
 7252 0028 00000000 		.4byte	.LFB66
 7253 002c 54000000 		.4byte	.LFE66-.LFB66
 7254 0030 00000000 		.4byte	.LFB67
 7255 0034 F4000000 		.4byte	.LFE67-.LFB67
 7256 0038 00000000 		.4byte	.LFB68
 7257 003c 18000000 		.4byte	.LFE68-.LFB68
 7258 0040 00000000 		.4byte	.LFB69
 7259 0044 18000000 		.4byte	.LFE69-.LFB69
 7260 0048 00000000 		.4byte	.LFB70
 7261 004c 22000000 		.4byte	.LFE70-.LFB70
 7262 0050 00000000 		.4byte	.LFB71
 7263 0054 1C000000 		.4byte	.LFE71-.LFB71
 7264 0058 00000000 		.4byte	.LFB72
 7265 005c 28000000 		.4byte	.LFE72-.LFB72
 7266 0060 00000000 		.4byte	.LFB73
 7267 0064 2C000000 		.4byte	.LFE73-.LFB73
 7268 0068 00000000 		.4byte	.LFB74
 7269 006c 44000000 		.4byte	.LFE74-.LFB74
 7270 0070 00000000 		.4byte	.LFB75
 7271 0074 38000000 		.4byte	.LFE75-.LFB75
 7272 0078 00000000 		.4byte	.LFB76
 7273 007c 38000000 		.4byte	.LFE76-.LFB76
 7274 0080 00000000 		.4byte	.LFB77
 7275 0084 38000000 		.4byte	.LFE77-.LFB77
 7276 0088 00000000 		.4byte	.LFB78
 7277 008c 14000000 		.4byte	.LFE78-.LFB78
 7278 0090 00000000 		.4byte	.LFB79
 7279 0094 18000000 		.4byte	.LFE79-.LFB79
 7280 0098 00000000 		.4byte	.LFB80
 7281 009c 18000000 		.4byte	.LFE80-.LFB80
 7282 00a0 00000000 		.4byte	.LFB81
 7283 00a4 18000000 		.4byte	.LFE81-.LFB81
 7284 00a8 00000000 		.4byte	.LFB82
 7285 00ac 18000000 		.4byte	.LFE82-.LFB82
 7286 00b0 00000000 		.4byte	.LFB83
 7287 00b4 B8000000 		.4byte	.LFE83-.LFB83
 7288 00b8 00000000 		.4byte	.LFB84
 7289 00bc BC010000 		.4byte	.LFE84-.LFB84
 7290 00c0 00000000 		.4byte	.LFB85
 7291 00c4 0C000000 		.4byte	.LFE85-.LFB85
 7292 00c8 00000000 		.4byte	.LFB86
 7293 00cc 2C000000 		.4byte	.LFE86-.LFB86
 7294 00d0 00000000 		.4byte	.LFB87
 7295 00d4 EC010000 		.4byte	.LFE87-.LFB87
 7296 00d8 00000000 		.4byte	.LFB88
 7297 00dc AC000000 		.4byte	.LFE88-.LFB88
 7298 00e0 00000000 		.4byte	.LFB89
 7299 00e4 20000000 		.4byte	.LFE89-.LFB89
 7300 00e8 00000000 		.4byte	.LFB90
 7301 00ec 28000000 		.4byte	.LFE90-.LFB90
 7302 00f0 00000000 		.4byte	.LFB91
 7303 00f4 0A000000 		.4byte	.LFE91-.LFB91
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 148


 7304 00f8 00000000 		.4byte	.LFB92
 7305 00fc 28000000 		.4byte	.LFE92-.LFB92
 7306 0100 00000000 		.4byte	.LFB93
 7307 0104 40000000 		.4byte	.LFE93-.LFB93
 7308 0108 00000000 		.4byte	.LFB94
 7309 010c 40000000 		.4byte	.LFE94-.LFB94
 7310 0110 00000000 		.4byte	.LFB95
 7311 0114 30020000 		.4byte	.LFE95-.LFB95
 7312 0118 00000000 		.4byte	.LFB96
 7313 011c 50010000 		.4byte	.LFE96-.LFB96
 7314 0120 00000000 		.4byte	.LFB97
 7315 0124 84010000 		.4byte	.LFE97-.LFB97
 7316 0128 00000000 		.4byte	.LFB98
 7317 012c 10020000 		.4byte	.LFE98-.LFB98
 7318 0130 00000000 		.4byte	.LFB99
 7319 0134 C0000000 		.4byte	.LFE99-.LFB99
 7320 0138 00000000 		.4byte	.LFB100
 7321 013c B8000000 		.4byte	.LFE100-.LFB100
 7322 0140 00000000 		.4byte	.LFB101
 7323 0144 4A000000 		.4byte	.LFE101-.LFB101
 7324 0148 00000000 		.4byte	.LFB102
 7325 014c F8020000 		.4byte	.LFE102-.LFB102
 7326 0150 00000000 		.4byte	.LFB103
 7327 0154 68000000 		.4byte	.LFE103-.LFB103
 7328 0158 00000000 		.4byte	.LFB104
 7329 015c 50000000 		.4byte	.LFE104-.LFB104
 7330 0160 00000000 		.4byte	.LFB105
 7331 0164 3A000000 		.4byte	.LFE105-.LFB105
 7332 0168 00000000 		.4byte	0
 7333 016c 00000000 		.4byte	0
 7334              		.section	.debug_ranges,"",%progbits
 7335              	.Ldebug_ranges0:
 7336 0000 00000000 		.4byte	.LFB63
 7337 0004 60010000 		.4byte	.LFE63
 7338 0008 00000000 		.4byte	.LFB64
 7339 000c 18000000 		.4byte	.LFE64
 7340 0010 00000000 		.4byte	.LFB65
 7341 0014 18000000 		.4byte	.LFE65
 7342 0018 00000000 		.4byte	.LFB66
 7343 001c 54000000 		.4byte	.LFE66
 7344 0020 00000000 		.4byte	.LFB67
 7345 0024 F4000000 		.4byte	.LFE67
 7346 0028 00000000 		.4byte	.LFB68
 7347 002c 18000000 		.4byte	.LFE68
 7348 0030 00000000 		.4byte	.LFB69
 7349 0034 18000000 		.4byte	.LFE69
 7350 0038 00000000 		.4byte	.LFB70
 7351 003c 22000000 		.4byte	.LFE70
 7352 0040 00000000 		.4byte	.LFB71
 7353 0044 1C000000 		.4byte	.LFE71
 7354 0048 00000000 		.4byte	.LFB72
 7355 004c 28000000 		.4byte	.LFE72
 7356 0050 00000000 		.4byte	.LFB73
 7357 0054 2C000000 		.4byte	.LFE73
 7358 0058 00000000 		.4byte	.LFB74
 7359 005c 44000000 		.4byte	.LFE74
 7360 0060 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 149


 7361 0064 38000000 		.4byte	.LFE75
 7362 0068 00000000 		.4byte	.LFB76
 7363 006c 38000000 		.4byte	.LFE76
 7364 0070 00000000 		.4byte	.LFB77
 7365 0074 38000000 		.4byte	.LFE77
 7366 0078 00000000 		.4byte	.LFB78
 7367 007c 14000000 		.4byte	.LFE78
 7368 0080 00000000 		.4byte	.LFB79
 7369 0084 18000000 		.4byte	.LFE79
 7370 0088 00000000 		.4byte	.LFB80
 7371 008c 18000000 		.4byte	.LFE80
 7372 0090 00000000 		.4byte	.LFB81
 7373 0094 18000000 		.4byte	.LFE81
 7374 0098 00000000 		.4byte	.LFB82
 7375 009c 18000000 		.4byte	.LFE82
 7376 00a0 00000000 		.4byte	.LFB83
 7377 00a4 B8000000 		.4byte	.LFE83
 7378 00a8 00000000 		.4byte	.LFB84
 7379 00ac BC010000 		.4byte	.LFE84
 7380 00b0 00000000 		.4byte	.LFB85
 7381 00b4 0C000000 		.4byte	.LFE85
 7382 00b8 00000000 		.4byte	.LFB86
 7383 00bc 2C000000 		.4byte	.LFE86
 7384 00c0 00000000 		.4byte	.LFB87
 7385 00c4 EC010000 		.4byte	.LFE87
 7386 00c8 00000000 		.4byte	.LFB88
 7387 00cc AC000000 		.4byte	.LFE88
 7388 00d0 00000000 		.4byte	.LFB89
 7389 00d4 20000000 		.4byte	.LFE89
 7390 00d8 00000000 		.4byte	.LFB90
 7391 00dc 28000000 		.4byte	.LFE90
 7392 00e0 00000000 		.4byte	.LFB91
 7393 00e4 0A000000 		.4byte	.LFE91
 7394 00e8 00000000 		.4byte	.LFB92
 7395 00ec 28000000 		.4byte	.LFE92
 7396 00f0 00000000 		.4byte	.LFB93
 7397 00f4 40000000 		.4byte	.LFE93
 7398 00f8 00000000 		.4byte	.LFB94
 7399 00fc 40000000 		.4byte	.LFE94
 7400 0100 00000000 		.4byte	.LFB95
 7401 0104 30020000 		.4byte	.LFE95
 7402 0108 00000000 		.4byte	.LFB96
 7403 010c 50010000 		.4byte	.LFE96
 7404 0110 00000000 		.4byte	.LFB97
 7405 0114 84010000 		.4byte	.LFE97
 7406 0118 00000000 		.4byte	.LFB98
 7407 011c 10020000 		.4byte	.LFE98
 7408 0120 00000000 		.4byte	.LFB99
 7409 0124 C0000000 		.4byte	.LFE99
 7410 0128 00000000 		.4byte	.LFB100
 7411 012c B8000000 		.4byte	.LFE100
 7412 0130 00000000 		.4byte	.LFB101
 7413 0134 4A000000 		.4byte	.LFE101
 7414 0138 00000000 		.4byte	.LFB102
 7415 013c F8020000 		.4byte	.LFE102
 7416 0140 00000000 		.4byte	.LFB103
 7417 0144 68000000 		.4byte	.LFE103
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 150


 7418 0148 00000000 		.4byte	.LFB104
 7419 014c 50000000 		.4byte	.LFE104
 7420 0150 00000000 		.4byte	.LFB105
 7421 0154 3A000000 		.4byte	.LFE105
 7422 0158 00000000 		.4byte	0
 7423 015c 00000000 		.4byte	0
 7424              		.section	.debug_line,"",%progbits
 7425              	.Ldebug_line0:
 7426 0000 94070000 		.section	.debug_str,"MS",%progbits,1
 7426      02006701 
 7426      00000201 
 7426      FB0E0D00 
 7426      01010101 
 7427              	.LASF140:
 7428 0000 64697265 		.ascii	"direction\000"
 7428      6374696F 
 7428      6E00
 7429              	.LASF186:
 7430 000a 74726163 		.ascii	"tracked_direction\000"
 7430      6B65645F 
 7430      64697265 
 7430      6374696F 
 7430      6E00
 7431              	.LASF23:
 7432 001c 52545552 		.ascii	"RTURN\000"
 7432      4E00
 7433              	.LASF37:
 7434 0022 44455354 		.ascii	"DEST_TEST\000"
 7434      5F544553 
 7434      5400
 7435              	.LASF148:
 7436 002c 71756164 		.ascii	"quad_diff1\000"
 7436      5F646966 
 7436      663100
 7437              	.LASF149:
 7438 0037 71756164 		.ascii	"quad_diff2\000"
 7438      5F646966 
 7438      663200
 7439              	.LASF86:
 7440 0042 6D657373 		.ascii	"message\000"
 7440      61676500 
 7441              	.LASF98:
 7442 004a 51756164 		.ascii	"Quad_Dec_response\000"
 7442      5F446563 
 7442      5F726573 
 7442      706F6E73 
 7442      6500
 7443              	.LASF165:
 7444 005c 70726576 		.ascii	"prevVoltage\000"
 7444      566F6C74 
 7444      61676500 
 7445              	.LASF151:
 7446 0068 73746172 		.ascii	"start_turn_count\000"
 7446      745F7475 
 7446      726E5F63 
 7446      6F756E74 
 7446      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 151


 7447              	.LASF8:
 7448 0079 756E7369 		.ascii	"unsigned int\000"
 7448      676E6564 
 7448      20696E74 
 7448      00
 7449              	.LASF175:
 7450 0086 74726163 		.ascii	"track_mode\000"
 7450      6B5F6D6F 
 7450      646500
 7451              	.LASF11:
 7452 0091 5F5F696E 		.ascii	"__int32_t\000"
 7452      7433325F 
 7452      7400
 7453              	.LASF17:
 7454 009b 696E7431 		.ascii	"int16\000"
 7454      3600
 7455              	.LASF172:
 7456 00a1 73797374 		.ascii	"system_state\000"
 7456      656D5F73 
 7456      74617465 
 7456      00
 7457              	.LASF22:
 7458 00ae 4C545552 		.ascii	"LTURN\000"
 7458      4E00
 7459              	.LASF94:
 7460 00b4 6973725F 		.ascii	"isr_adcTimer\000"
 7460      61646354 
 7460      696D6572 
 7460      00
 7461              	.LASF158:
 7462 00c1 74617267 		.ascii	"target_distance_quad\000"
 7462      65745F64 
 7462      69737461 
 7462      6E63655F 
 7462      71756164 
 7463              	.LASF25:
 7464 00d6 54524143 		.ascii	"TRACKING\000"
 7464      4B494E47 
 7464      00
 7465              	.LASF166:
 7466 00df 70726576 		.ascii	"prevVoltage2\000"
 7466      566F6C74 
 7466      61676532 
 7466      00
 7467              	.LASF180:
 7468 00ec 73656E73 		.ascii	"sensorsDisabled\000"
 7468      6F727344 
 7468      69736162 
 7468      6C656400 
 7469              	.LASF56:
 7470 00fc 7061636B 		.ascii	"packet_bytes\000"
 7470      65745F62 
 7470      79746573 
 7470      00
 7471              	.LASF52:
 7472 0109 67325F78 		.ascii	"g2_xpos\000"
 7472      706F7300 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 152


 7473              	.LASF30:
 7474 0111 6D6F6465 		.ascii	"mode\000"
 7474      00
 7475              	.LASF144:
 7476 0116 71756164 		.ascii	"quad_count1\000"
 7476      5F636F75 
 7476      6E743100 
 7477              	.LASF145:
 7478 0122 71756164 		.ascii	"quad_count2\000"
 7478      5F636F75 
 7478      6E743200 
 7479              	.LASF107:
 7480 012e 74726163 		.ascii	"trackLineU\000"
 7480      6B4C696E 
 7480      655500
 7481              	.LASF185:
 7482 0139 726F626F 		.ascii	"robot_direction\000"
 7482      745F6469 
 7482      72656374 
 7482      696F6E00 
 7483              	.LASF106:
 7484 0149 74726163 		.ascii	"trackLineZ\000"
 7484      6B4C696E 
 7484      655A00
 7485              	.LASF178:
 7486 0154 73706565 		.ascii	"speed\000"
 7486      6400
 7487              	.LASF34:
 7488 015a 53515541 		.ascii	"SQUARE_TRACK\000"
 7488      52455F54 
 7488      5241434B 
 7488      00
 7489              	.LASF136:
 7490 0167 666C6167 		.ascii	"flag_rf_transmission_active\000"
 7490      5F72665F 
 7490      7472616E 
 7490      736D6973 
 7490      73696F6E 
 7491              	.LASF137:
 7492 0183 666C6167 		.ascii	"flag_print_rf\000"
 7492      5F707269 
 7492      6E745F72 
 7492      6600
 7493              	.LASF174:
 7494 0191 6D6F7665 		.ascii	"movement_state\000"
 7494      6D656E74 
 7494      5F737461 
 7494      746500
 7495              	.LASF26:
 7496 01a0 54524143 		.ascii	"TRACKING_U\000"
 7496      4B494E47 
 7496      5F5500
 7497              	.LASF78:
 7498 01ab 696E6974 		.ascii	"initForward\000"
 7498      466F7277 
 7498      61726400 
 7499              	.LASF55:
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 153


 7500 01b7 67325F64 		.ascii	"g2_direction\000"
 7500      69726563 
 7500      74696F6E 
 7500      00
 7501              	.LASF89:
 7502 01c4 6973725F 		.ascii	"isr_quad1\000"
 7502      71756164 
 7502      3100
 7503              	.LASF18:
 7504 01ce 666C6F61 		.ascii	"float\000"
 7504      7400
 7505              	.LASF63:
 7506 01d4 73657453 		.ascii	"setSpeed\000"
 7506      70656564 
 7506      00
 7507              	.LASF170:
 7508 01dd 75736242 		.ascii	"usbBuffer\000"
 7508      75666665 
 7508      7200
 7509              	.LASF40:
 7510 01e7 696E6465 		.ascii	"index\000"
 7510      7800
 7511              	.LASF21:
 7512 01ed 44524956 		.ascii	"DRIVE\000"
 7512      4500
 7513              	.LASF58:
 7514 01f3 73747269 		.ascii	"string_packet\000"
 7514      6E675F70 
 7514      61636B65 
 7514      7400
 7515              	.LASF97:
 7516 0201 6368616E 		.ascii	"changeToBT\000"
 7516      6765546F 
 7516      425400
 7517              	.LASF66:
 7518 020c 636F756E 		.ascii	"countsLeft\000"
 7518      74734C65 
 7518      667400
 7519              	.LASF71:
 7520 0217 64726976 		.ascii	"driveForwards\000"
 7520      65466F72 
 7520      77617264 
 7520      7300
 7521              	.LASF73:
 7522 0225 7475726E 		.ascii	"turnLeft\000"
 7522      4C656674 
 7522      00
 7523              	.LASF7:
 7524 022e 6C6F6E67 		.ascii	"long long unsigned int\000"
 7524      206C6F6E 
 7524      6720756E 
 7524      7369676E 
 7524      65642069 
 7525              	.LASF133:
 7526 0245 666C6167 		.ascii	"flag_packet\000"
 7526      5F706163 
 7526      6B657400 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 154


 7527              	.LASF118:
 7528 0251 66726F6E 		.ascii	"frontSensors\000"
 7528      7453656E 
 7528      736F7273 
 7528      00
 7529              	.LASF192:
 7530 025e 443A5C43 		.ascii	"D:\\CS301-Team-Repo\\CS301_Class.cydsn\000"
 7530      53333031 
 7530      2D546561 
 7530      6D2D5265 
 7530      706F5C43 
 7531              	.LASF91:
 7532 0283 6973725F 		.ascii	"isr_turn_timer\000"
 7532      7475726E 
 7532      5F74696D 
 7532      657200
 7533              	.LASF96:
 7534 0292 6368616E 		.ascii	"changeToRF\000"
 7534      6765546F 
 7534      524600
 7535              	.LASF75:
 7536 029d 696E6974 		.ascii	"initTurnLeft\000"
 7536      5475726E 
 7536      4C656674 
 7536      00
 7537              	.LASF164:
 7538 02aa 706F7274 		.ascii	"portOpen\000"
 7538      4F70656E 
 7538      00
 7539              	.LASF79:
 7540 02b3 696E6974 		.ascii	"initBrake\000"
 7540      4272616B 
 7540      6500
 7541              	.LASF129:
 7542 02bd 666C6167 		.ascii	"flag_ts_update\000"
 7542      5F74735F 
 7542      75706461 
 7542      746500
 7543              	.LASF109:
 7544 02cc 7363616C 		.ascii	"scalingFactor\000"
 7544      696E6746 
 7544      6163746F 
 7544      7200
 7545              	.LASF99:
 7546 02da 6C656674 		.ascii	"leftSpeed\000"
 7546      53706565 
 7546      6400
 7547              	.LASF128:
 7548 02e4 666C6167 		.ascii	"flag_ts_enc\000"
 7548      5F74735F 
 7548      656E6300 
 7549              	.LASF176:
 7550 02f0 62797465 		.ascii	"byteCount\000"
 7550      436F756E 
 7550      7400
 7551              	.LASF117:
 7552 02fa 61637469 		.ascii	"actionDebounce\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 155


 7552      6F6E4465 
 7552      626F756E 
 7552      636500
 7553              	.LASF93:
 7554 0309 62757474 		.ascii	"button\000"
 7554      6F6E00
 7555              	.LASF173:
 7556 0310 70726576 		.ascii	"prev_movement_state\000"
 7556      5F6D6F76 
 7556      656D656E 
 7556      745F7374 
 7556      61746500 
 7557              	.LASF115:
 7558 0324 73656E73 		.ascii	"sensorVals\000"
 7558      6F725661 
 7558      6C7300
 7559              	.LASF111:
 7560 032f 72657375 		.ascii	"result_str\000"
 7560      6C745F73 
 7560      747200
 7561              	.LASF122:
 7562 033a 75617274 		.ascii	"uart_set_PWM\000"
 7562      5F736574 
 7562      5F50574D 
 7562      00
 7563              	.LASF82:
 7564 0347 696E6974 		.ascii	"inittrackLineZ\000"
 7564      74726163 
 7564      6B4C696E 
 7564      655A00
 7565              	.LASF42:
 7566 0356 726F626F 		.ascii	"robot_ypos\000"
 7566      745F7970 
 7566      6F7300
 7567              	.LASF127:
 7568 0361 74735F64 		.ascii	"ts_display\000"
 7568      6973706C 
 7568      617900
 7569              	.LASF108:
 7570 036c 7072696E 		.ascii	"print_ADC\000"
 7570      745F4144 
 7570      4300
 7571              	.LASF101:
 7572 0376 7363616C 		.ascii	"scalingLeft\000"
 7572      696E674C 
 7572      65667400 
 7573              	.LASF10:
 7574 0382 63686172 		.ascii	"char\000"
 7574      00
 7575              	.LASF46:
 7576 0387 67305F73 		.ascii	"g0_speed\000"
 7576      70656564 
 7576      00
 7577              	.LASF155:
 7578 0390 72696768 		.ascii	"rightSpeedLimit\000"
 7578      74537065 
 7578      65644C69 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 156


 7578      6D697400 
 7579              	.LASF59:
 7580 03a0 7365744C 		.ascii	"setLeftDir\000"
 7580      65667444 
 7580      697200
 7581              	.LASF189:
 7582 03ab 68617264 		.ascii	"hardTurnCount\000"
 7582      5475726E 
 7582      436F756E 
 7582      7400
 7583              	.LASF179:
 7584 03b9 696E7374 		.ascii	"instructionCount\000"
 7584      72756374 
 7584      696F6E43 
 7584      6F756E74 
 7584      00
 7585              	.LASF74:
 7586 03ca 7475726E 		.ascii	"turnU\000"
 7586      5500
 7587              	.LASF53:
 7588 03d0 67325F79 		.ascii	"g2_ypos\000"
 7588      706F7300 
 7589              	.LASF14:
 7590 03d8 75696E74 		.ascii	"uint16\000"
 7590      313600
 7591              	.LASF16:
 7592 03df 696E7438 		.ascii	"int8\000"
 7592      00
 7593              	.LASF51:
 7594 03e4 67315F64 		.ascii	"g1_direction\000"
 7594      69726563 
 7594      74696F6E 
 7594      00
 7595              	.LASF182:
 7596 03f1 70617468 		.ascii	"path\000"
 7596      00
 7597              	.LASF60:
 7598 03f6 73657452 		.ascii	"setRightDir\000"
 7598      69676874 
 7598      44697200 
 7599              	.LASF32:
 7600 0402 43555256 		.ascii	"CURVE_TRACK\000"
 7600      455F5452 
 7600      41434B00 
 7601              	.LASF103:
 7602 040e 696E7465 		.ascii	"interCalc\000"
 7602      7243616C 
 7602      6300
 7603              	.LASF142:
 7604 0418 42545F45 		.ascii	"BT_ENABLED\000"
 7604      4E41424C 
 7604      454400
 7605              	.LASF65:
 7606 0423 72696768 		.ascii	"right\000"
 7606      7400
 7607              	.LASF160:
 7608 0429 696E6974 		.ascii	"initial_pos_valid\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 157


 7608      69616C5F 
 7608      706F735F 
 7608      76616C69 
 7608      6400
 7609              	.LASF6:
 7610 043b 6C6F6E67 		.ascii	"long long int\000"
 7610      206C6F6E 
 7610      6720696E 
 7610      7400
 7611              	.LASF171:
 7612 0449 62756666 		.ascii	"buffer_state\000"
 7612      65725F73 
 7612      74617465 
 7612      00
 7613              	.LASF48:
 7614 0456 67315F78 		.ascii	"g1_xpos\000"
 7614      706F7300 
 7615              	.LASF80:
 7616 045e 696E6974 		.ascii	"initTrack\000"
 7616      54726163 
 7616      6B00
 7617              	.LASF119:
 7618 0468 6E657874 		.ascii	"nextStep\000"
 7618      53746570 
 7618      00
 7619              	.LASF190:
 7620 0471 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7620      4320342E 
 7620      392E3320 
 7620      32303135 
 7620      30333033 
 7621 04a4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7621      20726576 
 7621      6973696F 
 7621      6E203232 
 7621      31323230 
 7622 04d7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7622      66756E63 
 7622      74696F6E 
 7622      2D736563 
 7622      74696F6E 
 7623              	.LASF54:
 7624 04ff 67325F73 		.ascii	"g2_speed\000"
 7624      70656564 
 7624      00
 7625              	.LASF45:
 7626 0508 67305F79 		.ascii	"g0_ypos\000"
 7626      706F7300 
 7627              	.LASF84:
 7628 0510 72665F63 		.ascii	"rf_char\000"
 7628      68617200 
 7629              	.LASF181:
 7630 0518 666F6F64 		.ascii	"food_list\000"
 7630      5F6C6973 
 7630      7400
 7631              	.LASF141:
 7632 0522 42494E5F 		.ascii	"BIN_ENABLED\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 158


 7632      454E4142 
 7632      4C454400 
 7633              	.LASF100:
 7634 052e 72696768 		.ascii	"rightSpeed\000"
 7634      74537065 
 7634      656400
 7635              	.LASF126:
 7636 0539 74735F73 		.ascii	"ts_speed\000"
 7636      70656564 
 7636      00
 7637              	.LASF15:
 7638 0542 75696E74 		.ascii	"uint32\000"
 7638      333200
 7639              	.LASF188:
 7640 0549 696E7374 		.ascii	"instructions\000"
 7640      72756374 
 7640      696F6E73 
 7640      00
 7641              	.LASF67:
 7642 0556 636F756E 		.ascii	"countsRight\000"
 7642      74735269 
 7642      67687400 
 7643              	.LASF193:
 7644 0562 64617461 		.ascii	"data_main\000"
 7644      5F6D6169 
 7644      6E00
 7645              	.LASF110:
 7646 056c 636F6E76 		.ascii	"converted_val\000"
 7646      65727465 
 7646      645F7661 
 7646      6C00
 7647              	.LASF183:
 7648 057a 73746172 		.ascii	"start\000"
 7648      7400
 7649              	.LASF39:
 7650 0580 72737369 		.ascii	"rssi\000"
 7650      00
 7651              	.LASF105:
 7652 0585 74726163 		.ascii	"trackLine\000"
 7652      6B4C696E 
 7652      6500
 7653              	.LASF47:
 7654 058f 67305F64 		.ascii	"g0_direction\000"
 7654      69726563 
 7654      74696F6E 
 7654      00
 7655              	.LASF138:
 7656 059c 666C6167 		.ascii	"flag_receive_ADC\000"
 7656      5F726563 
 7656      65697665 
 7656      5F414443 
 7656      00
 7657              	.LASF24:
 7658 05ad 53544F50 		.ascii	"STOPPED\000"
 7658      50454400 
 7659              	.LASF85:
 7660 05b5 42545F72 		.ascii	"BT_rxInt\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 159


 7660      78496E74 
 7660      00
 7661              	.LASF20:
 7662 05be 6C6F6E67 		.ascii	"long double\000"
 7662      20646F75 
 7662      626C6500 
 7663              	.LASF83:
 7664 05ca 7278496E 		.ascii	"rxInt\000"
 7664      7400
 7665              	.LASF152:
 7666 05d0 6C656674 		.ascii	"left_duty_cycle\000"
 7666      5F647574 
 7666      795F6379 
 7666      636C6500 
 7667              	.LASF95:
 7668 05e0 6973725F 		.ascii	"isr_deadzone\000"
 7668      64656164 
 7668      7A6F6E65 
 7668      00
 7669              	.LASF130:
 7670 05ed 666C6167 		.ascii	"flag_ts_speed\000"
 7670      5F74735F 
 7670      73706565 
 7670      6400
 7671              	.LASF135:
 7672 05fb 64617461 		.ascii	"dataready_flag\000"
 7672      72656164 
 7672      795F666C 
 7672      616700
 7673              	.LASF162:
 7674 060a 696E6974 		.ascii	"initial_y_pos\000"
 7674      69616C5F 
 7674      795F706F 
 7674      7300
 7675              	.LASF132:
 7676 0618 666C6167 		.ascii	"flag_rx\000"
 7676      5F727800 
 7677              	.LASF2:
 7678 0620 73686F72 		.ascii	"short int\000"
 7678      7420696E 
 7678      7400
 7679              	.LASF139:
 7680 062a 6164635F 		.ascii	"adc_result\000"
 7680      72657375 
 7680      6C7400
 7681              	.LASF77:
 7682 0635 696E6974 		.ascii	"initTurnU\000"
 7682      5475726E 
 7682      5500
 7683              	.LASF143:
 7684 063f 666C6167 		.ascii	"flag_calc_wheelspeed\000"
 7684      5F63616C 
 7684      635F7768 
 7684      65656C73 
 7684      70656564 
 7685              	.LASF4:
 7686 0654 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 160


 7686      20696E74 
 7686      00
 7687              	.LASF76:
 7688 065d 696E6974 		.ascii	"initTurnRight\000"
 7688      5475726E 
 7688      52696768 
 7688      7400
 7689              	.LASF33:
 7690 066b 555F5452 		.ascii	"U_TRACK\000"
 7690      41434B00 
 7691              	.LASF123:
 7692 0673 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7692      52784275 
 7692      66666572 
 7692      00
 7693              	.LASF113:
 7694 0680 7072696E 		.ascii	"printString\000"
 7694      74537472 
 7694      696E6700 
 7695              	.LASF125:
 7696 068c 74735F75 		.ascii	"ts_update\000"
 7696      70646174 
 7696      6500
 7697              	.LASF31:
 7698 0696 4E4F5F54 		.ascii	"NO_TRACK\000"
 7698      5241434B 
 7698      00
 7699              	.LASF150:
 7700 069f 64656164 		.ascii	"deadzone\000"
 7700      7A6F6E65 
 7700      00
 7701              	.LASF154:
 7702 06a8 6C656674 		.ascii	"leftSpeedLimit\000"
 7702      53706565 
 7702      644C696D 
 7702      697400
 7703              	.LASF38:
 7704 06b7 4D41505F 		.ascii	"MAP_TRAVERSE\000"
 7704      54524156 
 7704      45525345 
 7704      00
 7705              	.LASF27:
 7706 06c4 54524143 		.ascii	"TRACKING_SOFT\000"
 7706      4B494E47 
 7706      5F534F46 
 7706      5400
 7707              	.LASF64:
 7708 06d2 6C656674 		.ascii	"left\000"
 7708      00
 7709              	.LASF157:
 7710 06d7 61636375 		.ascii	"accum_dist\000"
 7710      6D5F6469 
 7710      737400
 7711              	.LASF120:
 7712 06e2 75736250 		.ascii	"usbPutString\000"
 7712      75745374 
 7712      72696E67 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 161


 7712      00
 7713              	.LASF72:
 7714 06ef 7475726E 		.ascii	"turnRight\000"
 7714      52696768 
 7714      7400
 7715              	.LASF49:
 7716 06f9 67315F79 		.ascii	"g1_ypos\000"
 7716      706F7300 
 7717              	.LASF88:
 7718 0701 6164635F 		.ascii	"adc_isr\000"
 7718      69737200 
 7719              	.LASF114:
 7720 0709 72656164 		.ascii	"readFrontSensors\000"
 7720      46726F6E 
 7720      7453656E 
 7720      736F7273 
 7720      00
 7721              	.LASF159:
 7722 071a 71756164 		.ascii	"quad_per_cm\000"
 7722      5F706572 
 7722      5F636D00 
 7723              	.LASF156:
 7724 0726 74617267 		.ascii	"target_distance_cm\000"
 7724      65745F64 
 7724      69737461 
 7724      6E63655F 
 7724      636D00
 7725              	.LASF9:
 7726 0739 73697A65 		.ascii	"sizetype\000"
 7726      74797065 
 7726      00
 7727              	.LASF5:
 7728 0742 6C6F6E67 		.ascii	"long unsigned int\000"
 7728      20756E73 
 7728      69676E65 
 7728      6420696E 
 7728      7400
 7729              	.LASF57:
 7730 0754 62797465 		.ascii	"byte_packet\000"
 7730      5F706163 
 7730      6B657400 
 7731              	.LASF12:
 7732 0760 696E7433 		.ascii	"int32_t\000"
 7732      325F7400 
 7733              	.LASF177:
 7734 0768 7061636B 		.ascii	"packet\000"
 7734      657400
 7735              	.LASF41:
 7736 076f 726F626F 		.ascii	"robot_xpos\000"
 7736      745F7870 
 7736      6F7300
 7737              	.LASF70:
 7738 077a 6272616B 		.ascii	"brakeMotor\000"
 7738      654D6F74 
 7738      6F7200
 7739              	.LASF187:
 7740 0785 666F6F64 		.ascii	"food_length\000"
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 162


 7740      5F6C656E 
 7740      67746800 
 7741              	.LASF169:
 7742 0791 656E7472 		.ascii	"entry\000"
 7742      7900
 7743              	.LASF1:
 7744 0797 756E7369 		.ascii	"unsigned char\000"
 7744      676E6564 
 7744      20636861 
 7744      7200
 7745              	.LASF168:
 7746 07a5 6C696E65 		.ascii	"line\000"
 7746      00
 7747              	.LASF92:
 7748 07aa 53746F70 		.ascii	"Stop_on_line\000"
 7748      5F6F6E5F 
 7748      6C696E65 
 7748      00
 7749              	.LASF124:
 7750 07b7 74735F65 		.ascii	"ts_enc\000"
 7750      6E6300
 7751              	.LASF163:
 7752 07be 6272616B 		.ascii	"brakeFlag\000"
 7752      65466C61 
 7752      6700
 7753              	.LASF131:
 7754 07c8 666C6167 		.ascii	"flag_ts_display\000"
 7754      5F74735F 
 7754      64697370 
 7754      6C617900 
 7755              	.LASF29:
 7756 07d8 73746174 		.ascii	"state\000"
 7756      6500
 7757              	.LASF62:
 7758 07de 72657665 		.ascii	"reverseDirection\000"
 7758      72736544 
 7758      69726563 
 7758      74696F6E 
 7758      00
 7759              	.LASF68:
 7760 07ef 6272616B 		.ascii	"brakeLeft\000"
 7760      654C6566 
 7760      7400
 7761              	.LASF167:
 7762 07f9 64697370 		.ascii	"displaystring\000"
 7762      6C617973 
 7762      7472696E 
 7762      6700
 7763              	.LASF146:
 7764 0807 6C617374 		.ascii	"last_quad_count1\000"
 7764      5F717561 
 7764      645F636F 
 7764      756E7431 
 7764      00
 7765              	.LASF147:
 7766 0818 6C617374 		.ascii	"last_quad_count2\000"
 7766      5F717561 
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 163


 7766      645F636F 
 7766      756E7432 
 7766      00
 7767              	.LASF184:
 7768 0829 64657374 		.ascii	"destination\000"
 7768      696E6174 
 7768      696F6E00 
 7769              	.LASF121:
 7770 0835 75736250 		.ascii	"usbPutChar\000"
 7770      75744368 
 7770      617200
 7771              	.LASF0:
 7772 0840 7369676E 		.ascii	"signed char\000"
 7772      65642063 
 7772      68617200 
 7773              	.LASF3:
 7774 084c 73686F72 		.ascii	"short unsigned int\000"
 7774      7420756E 
 7774      7369676E 
 7774      65642069 
 7774      6E7400
 7775              	.LASF43:
 7776 085f 726F626F 		.ascii	"robot_orientation\000"
 7776      745F6F72 
 7776      69656E74 
 7776      6174696F 
 7776      6E00
 7777              	.LASF35:
 7778 0871 51554144 		.ascii	"QUAD_STOP\000"
 7778      5F53544F 
 7778      5000
 7779              	.LASF116:
 7780 087b 6D61696E 		.ascii	"main\000"
 7780      00
 7781              	.LASF87:
 7782 0880 42545F74 		.ascii	"BT_txInt\000"
 7782      78496E74 
 7782      00
 7783              	.LASF104:
 7784 0889 6E657874 		.ascii	"nextSpeed\000"
 7784      53706565 
 7784      6400
 7785              	.LASF90:
 7786 0893 64697374 		.ascii	"dist\000"
 7786      00
 7787              	.LASF13:
 7788 0898 75696E74 		.ascii	"uint8\000"
 7788      3800
 7789              	.LASF19:
 7790 089e 646F7562 		.ascii	"double\000"
 7790      6C6500
 7791              	.LASF153:
 7792 08a5 72696768 		.ascii	"right_duty_cycle\000"
 7792      745F6475 
 7792      74795F63 
 7792      79636C65 
 7792      00
ARM GAS  C:\Users\lken274\AppData\Local\Temp\ccIz9E3n.s 			page 164


 7793              	.LASF36:
 7794 08b6 52465F53 		.ascii	"RF_STOP\000"
 7794      544F5000 
 7795              	.LASF61:
 7796 08be 68616E64 		.ascii	"handle_rx_binary\000"
 7796      6C655F72 
 7796      785F6269 
 7796      6E617279 
 7796      00
 7797              	.LASF112:
 7798 08cf 7072696E 		.ascii	"print_RF\000"
 7798      745F5246 
 7798      00
 7799              	.LASF28:
 7800 08d8 55545552 		.ascii	"UTURN\000"
 7800      4E00
 7801              	.LASF44:
 7802 08de 67305F78 		.ascii	"g0_xpos\000"
 7802      706F7300 
 7803              	.LASF102:
 7804 08e6 7363616C 		.ascii	"scalingRight\000"
 7804      696E6752 
 7804      69676874 
 7804      00
 7805              	.LASF134:
 7806 08f3 666C6167 		.ascii	"flag_KB_string\000"
 7806      5F4B425F 
 7806      73747269 
 7806      6E6700
 7807              	.LASF50:
 7808 0902 67315F73 		.ascii	"g1_speed\000"
 7808      70656564 
 7808      00
 7809              	.LASF191:
 7810 090b 2E5C6D61 		.ascii	".\\main.c\000"
 7810      696E2E63 
 7810      00
 7811              	.LASF161:
 7812 0914 696E6974 		.ascii	"initial_x_pos\000"
 7812      69616C5F 
 7812      785F706F 
 7812      7300
 7813              	.LASF69:
 7814 0922 6272616B 		.ascii	"brakeRight\000"
 7814      65526967 
 7814      687400
 7815              	.LASF81:
 7816 092d 696E6974 		.ascii	"initTrackU\000"
 7816      54726163 
 7816      6B5500
 7817              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
